#!@PYTHON@

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2006 CWI.
# All Rights Reserved.

import sys
import os

sys.path.append(os.path.join(os.environ.get('CLIENTS_PREFIX','@QXprefix@'),
                             'share',
                             '@PACKAGE@',
                             'python'))
sys.path.append(os.path.join(os.environ.get('MONETDB_PREFIX','@QXprefix@'),
                             'share',
                             '@PACKAGE@',
                             'python'))

import monet_options
from Mapi import server

import fileinput


def main(argv) :

    cmd_options = [
        ('host',None,'host','hostname','host to connect to (default: localhost)'),
        ('port',None,'mapi_port','port','port to connect to (default: 50000)'),
        ]

    try:
        opt, args = monet_options.parse_options(argv[1:], cmd_options)
    except monet_options.Error:
        # error parsing options
        sys.exit(1)

    s = server(opt.get("host", "localhost"),
               int(opt.get("mapi_port", 50000)),
               os.environ['USER'])
    print "#MapiClient (python) connected to %s:%d as %s" % \
          (opt.get("host", "localhost"),
           int(opt.get("mapi_port", 50000)),
           os.environ['USER'])

    #fi = fileinput.FileInput()
    fi = sys.stdin

    sys.stdout.write(s.prompt)
    line = fi.readline()
    while line and line != "quit;\n":
        res = s.cmd(line)
        print res
        sys.stdout.write(s.prompt.encode('utf-8'))
        line = fi.readline()

    s.disconnect()

### main(argv) #


if __name__ == "__main__":
    if '--trace' in sys.argv:
        sys.argv.remove('--trace')
        import trace
        t = trace.Trace(trace=1, count=0)
        t.runfunc(main, sys.argv)
    else:
        main(sys.argv)
