<?xml version="1.0"?><!-- vim:set ts=2 sw=2 expandtab: -->

<!--
The contents of this file are subject to the MonetDB Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html

Software distributed under the License is distributed on an "AS IS"
basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations
under the License.

The Original Code is the MonetDB Database System.

The Initial Developer of the Original Code is CWI.
Portions created by CWI are Copyright (C) 1997-2007 CWI.
All Rights Reserved.
-->

<!--

  Build file to allow ant (http://jakarta.apache.org/ant/) to be used
  to build the MonetDB Java libraries, such as the JDBC and XML:DB
  drivers.

-->

<project name="MonetDB_Java_Drivers" default="jar_jdbcclient" basedir=".">

  <!-- set global properties for this build -->
  <property name="srcdir"             value="src" />
  <property name="libdir"             value="lib" />
  <property name="jardir"             value="jars" />
  <property name="builddir"           value="build" />
  <property name="docdir"             value="doc" />
  <property name="scriptdir"          value="${builddir}/scripts" />
  <property name="jdbc-package"       value="nl/cwi/monetdb/jdbc" />
  <property name="xmldb-package"      value="nl/cwi/monetdb/xmldb" />
  <property name="mcl-package"        value="nl/cwi/monetdb/mcl" />
  <property name="client-package"     value="nl/cwi/monetdb/client" />

  <property file="build.local.properties" />
  <property file="build.properties" />

  <property name="jdbc-jar"
    value="${jardir}/monetdb-${JDBC_MAJOR}.${JDBC_MINOR}-jdbc.jar" />
  <property name="jdbcclient-jar"
    value="${jardir}/jdbcclient-${JDBC_MAJOR}.${JDBC_MINOR}.jar" />
  <property name="xmldb-jar"
    value="${jardir}/monetdb-${JDBC_MAJOR}.${JDBC_MINOR}-xmldb.jar" />

  <!-- full target -->
  <target name="all">
    <antcall target="jar_jdbc" />
    <antcall target="jar_xmldb" />
    <antcall target="jar_mcl" />
    <antcall target="jar_client" />

    <antcall target="doc_jdbc" />
    <antcall target="doc_xmldb" />
    <antcall target="doc_mcl" />
    <antcall target="doc_client" />
  </target>

  <!-- jar targets -->
  <target name="jar_jdbc" depends="compile_jdbc"
    unless="uptodate.jdbc-jar">
    <jar jarfile="${jdbc-jar}">
      <fileset dir="${builddir}">
        <include name="${jdbc-package}/**/*.class" />
      </fileset>
    </jar>
  </target>

  <target name="jar_xmldb" depends="compile_xmldb">
    <jar jarfile="${xmldb-jar}">
      <fileset dir="${builddir}">
        <include name="${xmldb-package}/**/*.class" />
      </fileset>
    </jar>
  </target>

  <target name="jar_mcl" depends="compile_mcl">
    <jar jarfile="${jardir}/monetdb-mcl.jar">
      <fileset dir="${builddir}">
        <include name="${mcl-package}/**/*.class" />
      </fileset>
    </jar>
  </target>

  <target name="jar_client" depends="compile_client">
    <jar jarfile="${jardir}/monetdb-clients.jar">
      <fileset dir="${builddir}">
        <include name="${client-package}/**/*.class" />
      </fileset>
    </jar>
  </target>

  <!-- a convenience jar of JDBC plus the JdbcClient utililty -->
  <target name="jar_jdbcclient" depends="jar_jdbc,compile_client"
    unless="uptodate.jdbcclient-jar">
    <echo message="Building JDBC + JdbcClient convenience jar" />
    <unjar src="${jdbc-jar}" dest="${builddir}" />
    <jar jarfile="${jdbcclient-jar}">
      <fileset dir="${builddir}">
        <include name="${jdbc-package}/**/*.class" />
        <include name="${client-package}/**/*.class" />
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Main-Class" value="nl.cwi.monetdb.client.JdbcClient" />
      </manifest>
    </jar>
  </target>

  <!-- a convenience script mjclient which calls the jdbcclient -->
  <target name="create_mjclient">
    <echo message="Crafting an mjclient wrapper script" />
    <filter token="JDBCCLIENT_JAR"
      value="jdbcclient-${JDBC_MAJOR}.${JDBC_MINOR}.jar" />

    <!-- now copy and filter the file -->
    <copy file="${scriptdir}/mjclient"
      overwrite="true"
      tofile="${builddir}/mjclient"
      filtering="yes" />
  </target>

  <!-- compile targets -->
  <target name="compile_jdbc" depends="prepare,driver">
    <echo message="Compiling JDBC driver" />
    <javac
      classpath="${srcdir}"
      destdir="${builddir}"
      debug="${debug}"
      optimize="${optimize}"
      target="${javac_version}"
      source="${javac_version}"
      >
      <src path="${srcdir}" />
      <src path="${builddir}/src" />
      <include name="${jdbc-package}/**/*.java" />
    </javac>
  </target>

  <target name="compile_xmldb" depends="prepare,driver">
    <echo message="Compiling XML:DB driver" />
    <javac
      classpath="${srcdir}:${libdir}/xmldb.jar"
      destdir="${builddir}"
      debug="${debug}"
      optimize="${optimize}"
      target="${javac_version}"
      source="${javac_version}"
      >
      <src path="${srcdir}" />
      <src path="${builddir}/src" />
      <include name="${xmldb-package}/**/*.java" />
    </javac>
  </target>

  <target name="compile_mcl" depends="prepare">
    <echo message="Compiling MCL" />
    <javac
      classpath="${srcdir}"
      srcdir="${srcdir}"
      destdir="${builddir}"
      debug="${debug}"
      optimize="${optimize}"
      target="${javac_version}"
      source="${javac_version}"
      >
      <include name="${mcl-package}/**/*.java" />
    </javac>
  </target>

  <target name="compile_client" depends="prepare">
    <echo message="Compiling Clients" />
    <javac
      classpath="${srcdir}"
      srcdir="${srcdir}"
      destdir="${builddir}"
      debug="${debug}"
      optimize="${optimize}"
      target="${javac_version}"
      source="${javac_version}"
      >
      <include name="${client-package}/**/*.java" />
    </javac>
  </target>

  <!-- distribution jar file -->
  <target name="dist" depends="clean,prepare,driver">
    <echo message="Building distribution jar (debug=off, optimise=on)" />
    <echo message="Compiling JDBC, MCL and XML:DB drivers" />
    <javac
      classpath="${srcdir}:${libdir}/xmldb.jar"
      srcdir="${srcdir}"
      destdir="${builddir}"
      debug="false"
      optimize="true"
      target="${javac_version}"
      source="${javac_version}"
      >
      <include name="${jdbc-package}/**/*.java" />
      <include name="${xmldb-package}/**/*.java" />
      <include name="${mcl-package}/**/*.java" />
      <include name="${client-package}/**/*.java" />
    </javac>

    <jar jarfile="${jardir}/monetdb.jar" manifest="${srcdir}/manifest">
      <fileset dir="${builddir}">
        <include name="*.class" />
        <include name="${jdbc-package}/**/*.class" />
        <include name="${xmldb-package}/**/*.class" />
        <include name="${mcl-package}/**/*.class" />
        <include name="${client-package}/**/*.class" />
      </fileset>
    </jar>
  </target>

  <!--
  This generates MonetDriver.java and MonetDBDatabase.java from their
  ".java.in" equivalents.  It's required for importing the driver
  version properties.
  -->
  <target name="driver" depends="prepare" unless="uptodate.drivers">
    <tstamp>
      <format property="TODAY" pattern="yyyyMMdd" />
    </tstamp>

    <!-- Some defaults -->
    <filter token="JDBC_MAJOR" value="${JDBC_MAJOR}" />
    <filter token="JDBC_MINOR" value="${JDBC_MINOR}" />
    <filter token="JDBC_DEF_PORT" value="${JDBC_DEF_PORT}" />
    <filter token="JDBC_DEF_PORT_XQUERY" value="${JDBC_DEF_PORT_XQUERY}" />
    <filter token="JDBC_VER_SUFFIX" value="${JDBC_VER_SUFFIX} ${TODAY}" />

    <fail unless="JDBC_MAJOR" message="'JDBC_MAJOR' undefined. Please follow the directions in build.properties."/>
    <fail unless="JDBC_MINOR" message="'JDBC_MINOR' undefined. Please follow the directions in build.properties."/>
    <fail unless="JDBC_DEF_PORT" message="'JDBC_DEF_PORT' undefined. Please follow the directions in build.properties."/>
    <fail unless="JDBC_DEF_PORT_XQUERY" message="'JDBC_DEF_PORT_XQUERY' undefined. Please follow the directions in build.properties."/>
    <fail unless="JDBC_VER_SUFFIX" message="'JDBC_VER_SUFFIX' undefined. Please follow the directions in build.properties."/>

    <!-- now copy and filter the file -->
    <copy file="${srcdir}/${jdbc-package}/MonetDriver.java.in"
      overwrite="true"
      tofile="${builddir}/src/${jdbc-package}/MonetDriver.java"
      filtering="yes" />

    <copy file="${srcdir}/${xmldb-package}/base/MonetDBDatabase.java.in"
      overwrite="true"
      tofile="${builddir}/src/${xmldb-package}/base/MonetDBDatabase.java"
      filtering="yes" />

    <echo message="Configured build for the ${JDBC_MAJOR}.${JDBC_MINOR} (${JDBC_VER_SUFFIX}) edition driver" />
  </target>

  <!-- Prepares the build directory and sets some variables -->
  <!-- checks whether regeneration of files is necessary -->
  <target name="prepare">
    <condition property="debug" value="true">
      <equals arg1="${enable_debug}" arg2="true" casesensitive="false" trim="true" />
    </condition>
    <condition property="debug" value="false">
      <not>
        <equals arg1="${enable_debug}" arg2="true" casesensitive="false" trim="true" />
      </not>
    </condition>
    <condition property="optimize" value="true">
      <equals arg1="${enable_optimize}" arg2="true" casesensitive="false" trim="true" />
    </condition>
    <condition property="optimize" value="false">
      <not>
        <equals arg1="${enable_optimize}" arg2="true" casesensitive="false" trim="true" />
      </not>
    </condition>

    <uptodate targetfile="${jdbc-jar}" property="uptodate.jdbc-jar">
      <srcfiles dir="${srcdir}">
        <include name="${jdbc-package}/**/*.java" />
      </srcfiles>
    </uptodate>
    <uptodate targetfile="${jdbcclient-jar}"
      property="uptodate.jdbcclient-jar">
      <srcfiles dir="${srcdir}">
        <include name="${client-package}/**/*.java" />
        <include name="${jdbc-package}/**/*.java" />
      </srcfiles>
    </uptodate>
    <condition property="uptodate.drivers">
      <and>
        <uptodate targetfile="${jdbc-package}/MonetDriver.java">
          <srcfiles dir="${srcdir}">
            <include name="build.properties" />
            <include name="build.local.properties" />
            <include name="${jdbc-package}/MonetDriver.java.in" />
            <include name="${jdbc-package}/**/*.java" />
            <include name="${client-package}/**/*.java" />
          </srcfiles>
        </uptodate>
        <uptodate targetfile="${xmldb-package}/base/MonetDBDatabase.java">
          <srcfiles dir="${srcdir}">
            <include name="build.properties" />
            <include name="build.local.properties" />
            <include name="${xmldb-package}/base/MonetDBDatabase.java.in" />
          </srcfiles>
        </uptodate>
      </and>
    </condition>

    <mkdir dir="${builddir}" />
    <mkdir dir="${builddir}/example" />
    <mkdir dir="${jardir}" />
    <echo message="Debug is ${debug}, optimise is ${optimize}" />
  </target>

  <!-- This target removes the build, jar and doc directories -->
  <target name="clean">
    <delete quiet="true" dir="${builddir}" />
    <delete quiet="true" dir="${jardir}" />
    <delete quiet="true" dir="${docdir}" />
  </target>


  <!-- documentation targets -->
  <target name="doc_jdbc" depends="compile_jdbc">
    <javadoc
      destdir="${docdir}/jdbc"
      author="true"
      version="true"
      use="true"
      windowtitle="MonetDB JDBC API">

      <fileset dir="${srcdir}" defaultexcludes="yes">
        <include name="${jdbc-package}/**/*.java" />
      </fileset>
    </javadoc>
  </target>

  <target name="doc_xmldb" depends="compile_xmldb,jar_jdbc">
    <javadoc
      classpath="${libdir}/xmldb.jar:${jdbc-jar}"
      destdir="${docdir}/xmldb"
      author="true"
      version="true"
      use="true"
      windowtitle="MonetDB XML:DB API">

      <fileset dir="${srcdir}" defaultexcludes="yes">
        <include name="${xmldb-package}/**/*.java" />
      </fileset>
    </javadoc>
  </target>

  <target name="doc_mcl" depends="compile_mcl">
    <javadoc
      destdir="${docdir}/mcl"
      author="true"
      version="true"
      use="true"
      windowtitle="MonetDB MCL API">

      <fileset dir="${srcdir}" defaultexcludes="yes">
        <include name="${mcl-package}/**/*.java" />
      </fileset>
    </javadoc>
  </target>

  <target name="doc_client" depends="compile_client">
    <javadoc
      destdir="${docdir}/client"
      author="true"
      version="true"
      use="true"
      windowtitle="MonetDB Clients">

      <fileset dir="${srcdir}" defaultexcludes="yes">
        <include name="${client-package}/**/*.java" />
      </fileset>
    </javadoc>
  </target>
</project>
