Try this for testing:

import odbc
env = odbc.SQLAllocEnv()[1]
odbc.SQLSetEnvAttr(env, odbc.SQL_ATTR_ODBC_VERSION, odbc.SQL_OV_ODBC3)
dbc = odbc.SQLAllocConnect(env)[1]
odbc.SQLConnect(dbc, 'Default', 'monetdb', 'monetdb')
stmt = odbc.SQLAllocStmt(dbc)[1]

or alternatively:

import odbc
env = odbc.SQLAllocHandle(odbc.SQL_HANDLE_ENV, None)[1]
dbc = odbc.SQLAllocHandle(odbc.SQL_HANDLE_DBC, env)[1]
odbc.SQLConnect(dbc, 'Default', 'monetdb', 'monetdb')
stmt = odbc.SQLAllocHandle(odbc.SQL_HANDLE_STMT, dbc)[1]


Some more code:

import odbc
env = odbc.SQLAllocHandle(odbc.SQL_HANDLE_ENV, None)[1]
odbc.SQLSetEnvAttr(env, odbc.SQL_ATTR_ODBC_VERSION, odbc.SQL_OV_ODBC3)
dbc = odbc.SQLAllocHandle(odbc.SQL_HANDLE_DBC, env)[1]
odbc.SQLConnect(dbc, "Default", "monetdb", "monetdb")
stmt = odbc.SQLAllocHandle(odbc.SQL_HANDLE_STMT, dbc)[1]
odbc.SQLExecDirect(stmt, """CREATE TABLE model (
   model_id int(11) DEFAULT '0' NOT NULL,
   is_mutagen CHAR(3),
   lumo INT(11),
   logp INT(11),
   dt DATE,
   tm TIME,
   ts TIMESTAMP,
   PRIMARY KEY (model_id)
)""")
odbc.SQLFreeHandle(odbc.SQL_HANDLE_STMT, stmt)
stmt = odbc.SQLAllocHandle(odbc.SQL_HANDLE_STMT, dbc)[1]
odbc.SQLExecDirect(stmt, "INSERT INTO model (model_id, is_mutagen, lumo, logp, dt, tm, ts) VALUES (1, 'T', -1, 4, DATE '2003-10-01', TIME '14:51:12', TIMESTAMP '2003-10-01 14:51:12.5')")
odbc.SQLFreeHandle(odbc.SQL_HANDLE_STMT, stmt)
stmt = odbc.SQLAllocHandle(odbc.SQL_HANDLE_STMT, dbc)[1]
odbc.SQLExecDirect(stmt, "SELECT * FROM model")
while odbc.SQLFetch(stmt) == odbc.SQL_SUCCESS:
    for i in range(odbc.SQLNumResultCols(stmt)[1]):
        d = odbc.SQLDescribeCol(stmt, i+1)
        dt = odbc.SQLGetData(stmt, i+1, d[2])
        print d[1], dt[1]


Stuff missing (added to when found missing):

