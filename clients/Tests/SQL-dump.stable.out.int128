stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5610	"id"	"int"	32	0	5609	NULL	true	0	NULL
5611	"name"	"varchar"	1024	0	5609	NULL	true	1	NULL
5612	"schema_id"	"int"	32	0	5609	NULL	true	2	NULL
5613	"query"	"varchar"	2048	0	5609	NULL	true	3	NULL
5614	"type"	"smallint"	16	0	5609	NULL	true	4	NULL
5615	"system"	"boolean"	1	0	5609	NULL	true	5	NULL
5616	"commit_action"	"smallint"	16	0	5609	NULL	true	6	NULL
5617	"access"	"smallint"	16	0	5609	NULL	true	7	NULL
5618	"temporary"	"smallint"	16	0	5609	NULL	true	8	NULL
5620	"id"	"int"	32	0	5619	NULL	true	0	NULL
5621	"name"	"varchar"	1024	0	5619	NULL	true	1	NULL
5622	"type"	"varchar"	1024	0	5619	NULL	true	2	NULL
5623	"type_digits"	"int"	32	0	5619	NULL	true	3	NULL
5624	"type_scale"	"int"	32	0	5619	NULL	true	4	NULL
5625	"table_id"	"int"	32	0	5619	NULL	true	5	NULL
5626	"default"	"varchar"	2048	0	5619	NULL	true	6	NULL
5627	"null"	"boolean"	1	0	5619	NULL	true	7	NULL
5628	"number"	"int"	32	0	5619	NULL	true	8	NULL
5629	"storage"	"varchar"	2048	0	5619	NULL	true	9	NULL
5636	"name"	"varchar"	1024	0	5635	NULL	true	0	NULL
5637	"fullname"	"varchar"	2048	0	5635	NULL	true	1	NULL
5638	"default_schema"	"int"	9	0	5635	NULL	true	2	NULL
5642	"name"	"varchar"	1024	0	5641	NULL	true	0	NULL
5643	"fullname"	"varchar"	2024	0	5641	NULL	true	1	NULL
5644	"default_schema"	"int"	9	0	5641	NULL	true	2	NULL
5646	"login_id"	"int"	32	0	5645	NULL	true	0	NULL
5647	"role_id"	"int"	32	0	5645	NULL	true	1	NULL
5649	"id"	"int"	32	0	5648	NULL	true	0	NULL
5650	"name"	"varchar"	1024	0	5648	NULL	true	1	NULL
5651	"grantor"	"int"	32	0	5648	NULL	true	2	NULL
5653	"obj_id"	"int"	32	0	5652	NULL	true	0	NULL
5654	"auth_id"	"int"	32	0	5652	NULL	true	1	NULL
5655	"privileges"	"int"	32	0	5652	NULL	true	2	NULL
5656	"grantor"	"int"	32	0	5652	NULL	true	3	NULL
5657	"grantable"	"int"	32	0	5652	NULL	true	4	NULL
5866	"id"	"oid"	63	0	5874	NULL	true	0	NULL
5867	"owner"	"clob"	0	0	5874	NULL	true	1	NULL
5868	"defined"	"timestamp"	7	0	5874	NULL	true	2	NULL
5869	"query"	"clob"	0	0	5874	NULL	true	3	NULL
5870	"pipe"	"clob"	0	0	5874	NULL	true	4	NULL
5871	"plan"	"clob"	0	0	5874	NULL	true	5	NULL
5872	"mal"	"int"	32	0	5874	NULL	true	6	NULL
5873	"optimize"	"bigint"	64	0	5874	NULL	true	7	NULL
5876	"id"	"oid"	63	0	5885	NULL	true	0	NULL
5877	"start"	"timestamp"	7	0	5885	NULL	true	1	NULL
5878	"stop"	"timestamp"	7	0	5885	NULL	true	2	NULL
5879	"arguments"	"clob"	0	0	5885	NULL	true	3	NULL
5880	"tuples"	"wrd"	64	0	5885	NULL	true	4	NULL
5881	"run"	"bigint"	64	0	5885	NULL	true	5	NULL
5882	"ship"	"bigint"	64	0	5885	NULL	true	6	NULL
5883	"cpu"	"int"	32	0	5885	NULL	true	7	NULL
5884	"io"	"int"	32	0	5885	NULL	true	8	NULL
5887	"id"	"oid"	63	0	5903	NULL	true	0	NULL
5888	"owner"	"clob"	0	0	5903	NULL	true	1	NULL
5889	"defined"	"timestamp"	7	0	5903	NULL	true	2	NULL
5890	"query"	"clob"	0	0	5903	NULL	true	3	NULL
5891	"pipe"	"clob"	0	0	5903	NULL	true	4	NULL
5892	"plan"	"clob"	0	0	5903	NULL	true	5	NULL
5893	"mal"	"int"	32	0	5903	NULL	true	6	NULL
5894	"optimize"	"bigint"	64	0	5903	NULL	true	7	NULL
5895	"start"	"timestamp"	7	0	5903	NULL	true	8	NULL
5896	"stop"	"timestamp"	7	0	5903	NULL	true	9	NULL
5897	"arguments"	"clob"	0	0	5903	NULL	true	10	NULL
5898	"tuples"	"wrd"	64	0	5903	NULL	true	11	NULL
5899	"run"	"bigint"	64	0	5903	NULL	true	12	NULL
5900	"ship"	"bigint"	64	0	5903	NULL	true	13	NULL
5901	"cpu"	"int"	32	0	5903	NULL	true	14	NULL
5902	"io"	"int"	32	0	5903	NULL	true	15	NULL
5929	"event"	"int"	32	0	5942	NULL	true	0	NULL
5930	"clk"	"varchar"	20	0	5942	NULL	true	1	NULL
5931	"pc"	"varchar"	50	0	5942	NULL	true	2	NULL
5932	"thread"	"int"	32	0	5942	NULL	true	3	NULL
5933	"ticks"	"bigint"	64	0	5942	NULL	true	4	NULL
5934	"rrsmb"	"bigint"	64	0	5942	NULL	true	5	NULL
5935	"vmmb"	"bigint"	64	0	5942	NULL	true	6	NULL
5936	"reads"	"bigint"	64	0	5942	NULL	true	7	NULL
5937	"writes"	"bigint"	64	0	5942	NULL	true	8	NULL
5938	"minflt"	"bigint"	64	0	5942	NULL	true	9	NULL
5939	"majflt"	"bigint"	64	0	5942	NULL	true	10	NULL
5940	"nvcsw"	"bigint"	64	0	5942	NULL	true	11	NULL
5941	"stmt"	"clob"	0	0	5942	NULL	true	12	NULL
6076	"user"	"clob"	0	0	6082	NULL	true	0	NULL
6077	"login"	"timestamp"	7	0	6082	NULL	true	1	NULL
6078	"sessiontimeout"	"bigint"	64	0	6082	NULL	true	2	NULL
6079	"lastcommand"	"timestamp"	7	0	6082	NULL	true	3	NULL
6080	"querytimeout"	"bigint"	64	0	6082	NULL	true	4	NULL
6081	"active"	"boolean"	1	0	6082	NULL	true	5	NULL
6159	"name"	"clob"	0	0	6162	NULL	true	0	NULL
6160	"def"	"clob"	0	0	6162	NULL	true	1	NULL
6161	"status"	"clob"	0	0	6162	NULL	true	2	NULL
6168	"name"	"clob"	0	0	6170	NULL	true	0	NULL
6169	"value"	"clob"	0	0	6170	NULL	true	1	NULL
6202	"qtag"	"bigint"	64	0	6210	NULL	true	0	NULL
6203	"user"	"clob"	0	0	6210	NULL	true	1	NULL
6204	"started"	"timestamp"	7	0	6210	NULL	true	2	NULL
6205	"estimate"	"timestamp"	7	0	6210	NULL	true	3	NULL
6206	"progress"	"int"	32	0	6210	NULL	true	4	NULL
6207	"status"	"clob"	0	0	6210	NULL	true	5	NULL
6208	"tag"	"oid"	63	0	6210	NULL	true	6	NULL
6209	"query"	"clob"	0	0	6210	NULL	true	7	NULL
6236	"rowid"	"bigint"	64	0	6240	NULL	true	0	NULL
6237	"fldid"	"int"	32	0	6240	NULL	true	1	NULL
6238	"message"	"clob"	0	0	6240	NULL	true	2	NULL
6239	"input"	"clob"	0	0	6240	NULL	true	3	NULL
6895	"keyword"	"varchar"	40	0	6898	NULL	false	0	NULL
6900	"table_type_id"	"smallint"	16	0	6906	NULL	false	0	NULL
6903	"table_type_name"	"varchar"	25	0	6906	NULL	false	1	NULL
6908	"dependency_type_id"	"smallint"	16	0	6914	NULL	false	0	NULL
6911	"dependency_type_name"	"varchar"	15	0	6914	NULL	false	1	NULL
6929	"file_id"	"int"	32	0	6931	NULL	true	0	NULL
6930	"location"	"char"	256	0	6931	NULL	true	1	NULL
6933	"dim_id"	"int"	32	0	6937	NULL	true	0	NULL
6934	"file_id"	"int"	32	0	6937	NULL	true	1	NULL
6935	"name"	"varchar"	64	0	6937	NULL	true	2	NULL
6936	"length"	"int"	32	0	6937	NULL	true	3	NULL
6939	"var_id"	"int"	32	0	6945	NULL	true	0	NULL
6940	"file_id"	"int"	32	0	6945	NULL	true	1	NULL
6941	"name"	"varchar"	64	0	6945	NULL	true	2	NULL
6942	"vartype"	"varchar"	64	0	6945	NULL	true	3	NULL
6943	"ndim"	"int"	32	0	6945	NULL	true	4	NULL
6944	"coord_dim_id"	"int"	32	0	6945	NULL	true	5	NULL
6947	"var_id"	"int"	32	0	6951	NULL	true	0	NULL
6948	"dim_id"	"int"	32	0	6951	NULL	true	1	NULL
6949	"file_id"	"int"	32	0	6951	NULL	true	2	NULL
6950	"dimpos"	"int"	32	0	6951	NULL	true	3	NULL
6953	"obj_name"	"varchar"	256	0	6959	NULL	true	0	NULL
6954	"att_name"	"varchar"	256	0	6959	NULL	true	1	NULL
6955	"att_type"	"varchar"	64	0	6959	NULL	true	2	NULL
6956	"value"	"clob"	0	0	6959	NULL	true	3	NULL
6957	"file_id"	"int"	32	0	6959	NULL	true	4	NULL
6958	"gr_name"	"varchar"	256	0	6959	NULL	true	5	NULL
6984	"schema"	"clob"	0	0	6998	NULL	true	0	NULL
6985	"table"	"clob"	0	0	6998	NULL	true	1	NULL
6986	"column"	"clob"	0	0	6998	NULL	true	2	NULL
6987	"type"	"clob"	0	0	6998	NULL	true	3	NULL
6988	"mode"	"clob"	0	0	6998	NULL	true	4	NULL
6989	"location"	"clob"	0	0	6998	NULL	true	5	NULL
6990	"count"	"bigint"	64	0	6998	NULL	true	6	NULL
6991	"typewidth"	"int"	32	0	6998	NULL	true	7	NULL
6992	"columnsize"	"bigint"	64	0	6998	NULL	true	8	NULL
6993	"heapsize"	"bigint"	64	0	6998	NULL	true	9	NULL
6994	"hashes"	"bigint"	64	0	6998	NULL	true	10	NULL
6995	"phash"	"boolean"	1	0	6998	NULL	true	11	NULL
6996	"imprints"	"bigint"	64	0	6998	NULL	true	12	NULL
6997	"sorted"	"boolean"	1	0	6998	NULL	true	13	NULL
7000	"schema"	"clob"	0	0	7010	NULL	true	0	NULL
7001	"table"	"clob"	0	0	7010	NULL	true	1	NULL
7002	"column"	"clob"	0	0	7010	NULL	true	2	NULL
7003	"type"	"clob"	0	0	7010	NULL	true	3	NULL
7004	"typewidth"	"int"	32	0	7010	NULL	true	4	NULL
7005	"count"	"bigint"	64	0	7010	NULL	true	5	NULL
7006	"distinct"	"bigint"	64	0	7010	NULL	true	6	NULL
7007	"atomwidth"	"int"	32	0	7010	NULL	true	7	NULL
7008	"reference"	"boolean"	1	0	7010	NULL	true	8	NULL
7009	"sorted"	"boolean"	1	0	7010	NULL	true	9	NULL
7048	"schema"	"clob"	0	0	7058	NULL	true	0	NULL
7049	"table"	"clob"	0	0	7058	NULL	true	1	NULL
7050	"column"	"clob"	0	0	7058	NULL	true	2	NULL
7051	"type"	"clob"	0	0	7058	NULL	true	3	NULL
7052	"count"	"bigint"	64	0	7058	NULL	true	4	NULL
7053	"columnsize"	"bigint"	64	0	7058	NULL	true	5	NULL
7054	"heapsize"	"bigint"	64	0	7058	NULL	true	6	NULL
7055	"hashes"	"bigint"	64	0	7058	NULL	true	7	NULL
7056	"imprints"	"bigint"	64	0	7058	NULL	true	8	NULL
7057	"sorted"	"boolean"	1	0	7058	NULL	true	9	NULL
7060	"schema"	"clob"	0	0	7068	NULL	true	0	NULL
7061	"table"	"clob"	0	0	7068	NULL	true	1	NULL
7062	"count"	"bigint"	64	0	7068	NULL	true	2	NULL
7063	"columnsize"	"hugeint"	128	0	7068	NULL	true	3	NULL
7064	"heapsize"	"hugeint"	128	0	7068	NULL	true	4	NULL
7065	"hashes"	"hugeint"	128	0	7068	NULL	true	5	NULL
7066	"imprints"	"hugeint"	128	0	7068	NULL	true	6	NULL
7067	"auxiliary"	"hugeint"	128	0	7068	NULL	true	7	NULL
7070	"column_id"	"int"	32	0	7081	NULL	true	0	NULL
7071	"type"	"clob"	0	0	7081	NULL	true	1	NULL
7072	"width"	"int"	32	0	7081	NULL	true	2	NULL
7073	"stamp"	"timestamp"	7	0	7081	NULL	true	3	NULL
7074	"sample"	"bigint"	64	0	7081	NULL	true	4	NULL
7075	"count"	"bigint"	64	0	7081	NULL	true	5	NULL
7076	"unique"	"bigint"	64	0	7081	NULL	true	6	NULL
7077	"nils"	"bigint"	64	0	7081	NULL	true	7	NULL
7078	"minval"	"clob"	0	0	7081	NULL	true	8	NULL
7079	"maxval"	"clob"	0	0	7081	NULL	true	9	NULL
7080	"sorted"	"boolean"	1	0	7081	NULL	true	10	NULL
7171	"file_id"	"bigint"	64	0	7179	NULL	false	0	NULL
7172	"file_location"	"clob"	0	0	7179	NULL	false	1	NULL
7173	"dbschema"	"smallint"	16	0	7179	NULL	false	2	NULL
7174	"format_version"	"varchar"	7	0	7179	NULL	true	3	NULL
7175	"sorting_order"	"varchar"	10	0	7179	NULL	true	4	NULL
7176	"comments"	"clob"	0	0	7179	NULL	true	5	NULL
7181	"sn"	"clob"	0	0	7192	NULL	false	0	NULL
7182	"file_id"	"bigint"	64	0	7192	NULL	false	1	NULL
7183	"ln"	"int"	32	0	7192	NULL	true	2	NULL
7184	"as"	"int"	32	0	7192	NULL	true	3	NULL
7185	"m5"	"clob"	0	0	7192	NULL	true	4	NULL
7186	"sp"	"clob"	0	0	7192	NULL	true	5	NULL
7187	"ur"	"clob"	0	0	7192	NULL	true	6	NULL
7194	"id"	"clob"	0	0	7211	NULL	false	0	NULL
7195	"file_id"	"bigint"	64	0	7211	NULL	false	1	NULL
7196	"cn"	"clob"	0	0	7211	NULL	true	2	NULL
7197	"ds"	"clob"	0	0	7211	NULL	true	3	NULL
7198	"dt"	"timestamp"	7	0	7211	NULL	true	4	NULL
7199	"fo"	"clob"	0	0	7211	NULL	true	5	NULL
7200	"ks"	"clob"	0	0	7211	NULL	true	6	NULL
7201	"lb"	"clob"	0	0	7211	NULL	true	7	NULL
7202	"pg"	"clob"	0	0	7211	NULL	true	8	NULL
7203	"pi"	"int"	32	0	7211	NULL	true	9	NULL
7204	"pl"	"clob"	0	0	7211	NULL	true	10	NULL
7205	"pu"	"clob"	0	0	7211	NULL	true	11	NULL
7206	"sm"	"clob"	0	0	7211	NULL	true	12	NULL
7213	"id"	"clob"	0	0	7223	NULL	false	0	NULL
7214	"file_id"	"bigint"	64	0	7223	NULL	false	1	NULL
7215	"pn"	"clob"	0	0	7223	NULL	true	2	NULL
7216	"cl"	"clob"	0	0	7223	NULL	true	3	NULL
7217	"pp"	"clob"	0	0	7223	NULL	true	4	NULL
7218	"vn"	"clob"	0	0	7223	NULL	true	5	NULL
7225	"qname"	"clob"	0	0	7236	NULL	false	0	NULL
7226	"flag"	"smallint"	16	0	7236	NULL	false	1	NULL
7227	"rname"	"clob"	0	0	7236	NULL	false	2	NULL
7228	"pos"	"int"	32	0	7236	NULL	false	3	NULL
7229	"mapq"	"smallint"	16	0	7236	NULL	false	4	NULL
7230	"cigar"	"clob"	0	0	7236	NULL	false	5	NULL
7231	"rnext"	"clob"	0	0	7236	NULL	false	6	NULL
7232	"pnext"	"int"	32	0	7236	NULL	false	7	NULL
7233	"tlen"	"int"	32	0	7236	NULL	false	8	NULL
7234	"seq"	"clob"	0	0	7236	NULL	false	9	NULL
7235	"qual"	"clob"	0	0	7236	NULL	false	10	NULL
7317	"function_id"	"int"	32	0	7318	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5609	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5619	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5635	"db_user_info"	2000	NULL	0	true	0	0
5641	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5645	"user_role"	2000	NULL	0	true	0	0
5648	"auths"	2000	NULL	0	true	0	0
5652	"privileges"	2000	NULL	0	true	0	0
5874	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5885	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5903	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5942	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6082	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6162	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6170	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6210	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6240	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6898	"keywords"	2000	NULL	0	true	0	0
6906	"table_types"	2000	NULL	0	true	0	0
6914	"dependency_types"	2000	NULL	0	true	0	0
6931	"netcdf_files"	2000	NULL	0	true	0	0
6937	"netcdf_dims"	2000	NULL	0	true	0	0
6945	"netcdf_vars"	2000	NULL	0	true	0	0
6951	"netcdf_vardim"	2000	NULL	0	true	0	0
6959	"netcdf_attrs"	2000	NULL	0	true	0	0
6998	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7010	"storagemodelinput"	2000	NULL	0	true	0	0
7058	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7068	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7081	"statistics"	2000	NULL	0	true	0	0
7179	"files"	7128	NULL	0	true	0	0
7192	"sq"	7128	NULL	0	true	0	0
7211	"rg"	7128	NULL	0	true	0	0
7223	"pg"	7128	NULL	0	true	0	0
7236	"export"	7128	NULL	0	true	0	0
7318	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4231 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"oid"	63	0	0	0
2156	30	"arg_1"	"wrd"	64	0	1	1
2157	31	"res_0"	"oid"	63	0	0	0
2158	31	"arg_1"	"oid"	63	0	1	1
2159	32	"res_0"	"wrd"	64	0	0	0
2160	32	"arg_1"	"any"	0	0	1	1
2161	33	"res_0"	"wrd"	64	0	0	0
2162	33	"arg_1"	"wrd"	64	0	1	1
2163	33	"arg_2"	"int"	32	0	1	2
2164	33	"arg_3"	"any"	0	0	1	3
2165	34	"res_0"	"boolean"	1	0	0	0
2166	34	"arg_1"	"any"	0	0	1	1
2167	34	"arg_2"	"any"	0	0	1	2
2168	35	"res_0"	"boolean"	1	0	0	0
2169	35	"arg_1"	"any"	0	0	1	1
2170	35	"arg_2"	"any"	0	0	1	2
2171	36	"res_0"	"boolean"	1	0	0	0
2172	36	"arg_1"	"any"	0	0	1	1
2173	37	"res_0"	"boolean"	1	0	0	0
2174	37	"arg_1"	"any"	0	0	1	1
2175	37	"arg_2"	"any"	0	0	1	2
2176	38	"res_0"	"boolean"	1	0	0	0
2177	38	"arg_1"	"any"	0	0	1	1
2178	38	"arg_2"	"any"	0	0	1	2
2179	39	"res_0"	"boolean"	1	0	0	0
2180	39	"arg_1"	"any"	0	0	1	1
2181	39	"arg_2"	"any"	0	0	1	2
2182	40	"res_0"	"boolean"	1	0	0	0
2183	40	"arg_1"	"any"	0	0	1	1
2184	40	"arg_2"	"any"	0	0	1	2
2185	44	"res_0"	"boolean"	1	0	0	0
2186	44	"arg_1"	"any"	0	0	1	1
2187	44	"arg_2"	"any"	0	0	1	2
2188	45	"res_0"	"oid"	63	0	0	0
2189	45	"arg_1"	"any"	0	0	1	1
2190	46	"res_0"	"int"	32	0	0	0
2191	46	"arg_1"	"any"	0	0	1	1
2192	47	"res_0"	"oid"	63	0	0	0
2193	47	"arg_1"	"any"	0	0	1	1
2194	47	"arg_2"	"varchar"	0	0	1	2
2195	47	"arg_3"	"varchar"	0	0	1	3
2196	50	"res_0"	"any"	0	0	0	0
2197	50	"arg_1"	"any"	0	0	1	1
2198	50	"arg_2"	"any"	0	0	1	2
2199	51	"res_0"	"any"	0	0	0	0
2200	51	"arg_1"	"any"	0	0	1	1
2201	51	"arg_2"	"any"	0	0	1	2
2202	52	"res_0"	"any"	0	0	0	0
2203	52	"arg_1"	"boolean"	1	0	1	1
2204	52	"arg_2"	"any"	0	0	1	2
2205	52	"arg_3"	"any"	0	0	1	3
2206	74	"res_0"	"oid"	63	0	0	0
2207	74	"arg_1"	"oid"	63	0	1	1
2208	74	"arg_2"	"oid"	63	0	1	2
2209	75	"res_0"	"tinyint"	8	0	0	0
2210	75	"arg_1"	"tinyint"	8	0	1	1
2211	75	"arg_2"	"tinyint"	8	0	1	2
2212	76	"res_0"	"smallint"	16	0	0	0
2213	76	"arg_1"	"smallint"	16	0	1	1
2214	76	"arg_2"	"smallint"	16	0	1	2
2215	77	"res_0"	"int"	32	0	0	0
2216	77	"arg_1"	"int"	32	0	1	1
2217	77	"arg_2"	"int"	32	0	1	2
2218	78	"res_0"	"bigint"	64	0	0	0
2219	78	"arg_1"	"bigint"	64	0	1	1
2220	78	"arg_2"	"bigint"	64	0	1	2
2221	79	"res_0"	"wrd"	64	0	0	0
2222	79	"arg_1"	"wrd"	64	0	1	1
2223	79	"arg_2"	"wrd"	64	0	1	2
2224	80	"res_0"	"hugeint"	128	0	0	0
2225	80	"arg_1"	"hugeint"	128	0	1	1
2226	80	"arg_2"	"hugeint"	128	0	1	2
2227	81	"res_0"	"decimal"	2	0	0	0
2228	81	"arg_1"	"decimal"	2	0	1	1
2229	81	"arg_2"	"decimal"	2	0	1	2
2230	82	"res_0"	"decimal"	4	0	0	0
2231	82	"arg_1"	"decimal"	4	0	1	1
2232	82	"arg_2"	"decimal"	4	0	1	2
2233	83	"res_0"	"decimal"	9	0	0	0
2234	83	"arg_1"	"decimal"	9	0	1	1
2235	83	"arg_2"	"decimal"	9	0	1	2
2236	84	"res_0"	"decimal"	18	0	0	0
2237	84	"arg_1"	"decimal"	18	0	1	1
2238	84	"arg_2"	"decimal"	18	0	1	2
2239	85	"res_0"	"decimal"	39	0	0	0
2240	85	"arg_1"	"decimal"	39	0	1	1
2241	85	"arg_2"	"decimal"	39	0	1	2
2242	86	"res_0"	"real"	24	0	0	0
2243	86	"arg_1"	"real"	24	0	1	1
2244	86	"arg_2"	"real"	24	0	1	2
2245	87	"res_0"	"double"	53	0	0	0
2246	87	"arg_1"	"double"	53	0	1	1
2247	87	"arg_2"	"double"	53	0	1	2
2248	95	"res_0"	"boolean"	1	0	0	0
2249	95	"arg_1"	"any"	0	0	1	1
2250	96	"res_0"	"boolean"	1	0	0	0
2251	96	"arg_1"	"boolean"	1	0	1	1
2252	96	"arg_2"	"any"	0	0	1	2
2253	97	"res_0"	"int"	32	0	0	0
2254	97	"arg_1"	"any"	0	0	1	1
2255	97	"arg_2"	"boolean"	1	0	1	2
2256	97	"arg_3"	"boolean"	1	0	1	3
2257	98	"res_0"	"int"	32	0	0	0
2258	98	"arg_1"	"any"	0	0	1	1
2259	98	"arg_2"	"boolean"	1	0	1	2
2260	98	"arg_3"	"boolean"	1	0	1	3
2261	99	"res_0"	"int"	32	0	0	0
2262	99	"arg_1"	"any"	0	0	1	1
2263	99	"arg_2"	"boolean"	1	0	1	2
2264	99	"arg_3"	"boolean"	1	0	1	3
2265	100	"res_0"	"int"	32	0	0	0
2266	100	"arg_1"	"any"	0	0	1	1
2267	100	"arg_2"	"boolean"	1	0	1	2
2268	100	"arg_3"	"boolean"	1	0	1	3
2269	101	"res_0"	"any"	0	0	0	0
2270	101	"arg_1"	"any"	0	0	1	1
2271	101	"arg_2"	"boolean"	1	0	1	2
2272	101	"arg_3"	"boolean"	1	0	1	3
2273	102	"res_0"	"any"	0	0	0	0
2274	102	"arg_1"	"any"	0	0	1	1
2275	102	"arg_2"	"boolean"	1	0	1	2
2276	102	"arg_3"	"boolean"	1	0	1	3
2277	103	"res_0"	"any"	0	0	0	0
2278	103	"arg_1"	"any"	0	0	1	1
2279	103	"arg_2"	"boolean"	1	0	1	2
2280	103	"arg_3"	"boolean"	1	0	1	3
2281	104	"res_0"	"boolean"	1	0	0	0
2282	104	"arg_1"	"boolean"	1	0	1	1
2283	104	"arg_2"	"boolean"	1	0	1	2
2284	105	"res_0"	"boolean"	1	0	0	0
2285	105	"arg_1"	"boolean"	1	0	1	1
2286	105	"arg_2"	"boolean"	1	0	1	2
2287	106	"res_0"	"boolean"	1	0	0	0
2288	106	"arg_1"	"boolean"	1	0	1	1
2289	106	"arg_2"	"boolean"	1	0	1	2
2290	107	"res_0"	"boolean"	1	0	0	0
2291	107	"arg_1"	"boolean"	1	0	1	1
2292	108	"res_0"	"oid"	63	0	0	0
2293	108	"arg_1"	"oid"	63	0	1	1
2294	108	"arg_2"	"oid"	63	0	1	2
2295	109	"res_0"	"oid"	63	0	0	0
2296	109	"arg_1"	"oid"	63	0	1	1
2297	109	"arg_2"	"oid"	63	0	1	2
2298	110	"res_0"	"oid"	63	0	0	0
2299	110	"arg_1"	"oid"	63	0	1	1
2300	110	"arg_2"	"oid"	63	0	1	2
2301	111	"res_0"	"oid"	63	0	0	0
2302	111	"arg_1"	"oid"	63	0	1	1
2303	111	"arg_2"	"oid"	63	0	1	2
2304	112	"res_0"	"oid"	63	0	0	0
2305	112	"arg_1"	"oid"	63	0	1	1
2306	112	"arg_2"	"oid"	63	0	1	2
2307	113	"res_0"	"oid"	63	0	0	0
2308	113	"arg_1"	"oid"	63	0	1	1
2309	113	"arg_2"	"oid"	63	0	1	2
2310	114	"res_0"	"oid"	63	0	0	0
2311	114	"arg_1"	"oid"	63	0	1	1
2312	114	"arg_2"	"oid"	63	0	1	2
2313	115	"res_0"	"oid"	63	0	0	0
2314	115	"arg_1"	"oid"	63	0	1	1
2315	116	"res_0"	"oid"	63	0	0	0
2316	116	"arg_1"	"oid"	63	0	1	1
2317	116	"arg_2"	"int"	32	0	1	2
2318	117	"res_0"	"oid"	63	0	0	0
2319	117	"arg_1"	"oid"	63	0	1	1
2320	117	"arg_2"	"int"	32	0	1	2
2321	118	"res_0"	"oid"	63	0	0	0
2322	118	"arg_1"	"oid"	63	0	1	1
2323	119	"res_0"	"oid"	63	0	0	0
2324	119	"arg_1"	"oid"	63	0	1	1
2325	120	"res_0"	"tinyint"	8	0	0	0
2326	120	"arg_1"	"oid"	63	0	1	1
2327	121	"res_0"	"oid"	63	0	0	0
2328	121	"arg_1"	"oid"	63	0	1	1
2329	121	"arg_2"	"oid"	63	0	1	2
2330	122	"res_0"	"oid"	63	0	0	0
2331	122	"arg_1"	"oid"	63	0	1	1
2332	122	"arg_2"	"oid"	63	0	1	2
2333	123	"res_0"	"month_interval"	32	0	0	0
2334	123	"arg_1"	"month_interval"	32	0	1	1
2335	123	"arg_2"	"oid"	63	0	1	2
2336	124	"res_0"	"month_interval"	32	0	0	0
2337	124	"arg_1"	"month_interval"	32	0	1	1
2338	124	"arg_2"	"oid"	63	0	1	2
2339	125	"res_0"	"month_interval"	32	0	0	0
2340	125	"arg_1"	"month_interval"	32	0	1	1
2341	125	"arg_2"	"oid"	63	0	1	2
2342	126	"res_0"	"month_interval"	32	0	0	0
2343	126	"arg_1"	"month_interval"	32	0	1	1
2344	126	"arg_2"	"oid"	63	0	1	2
2345	127	"res_0"	"sec_interval"	13	0	0	0
2346	127	"arg_1"	"sec_interval"	13	0	1	1
2347	127	"arg_2"	"oid"	63	0	1	2
2348	128	"res_0"	"sec_interval"	13	0	0	0
2349	128	"arg_1"	"sec_interval"	13	0	1	1
2350	128	"arg_2"	"oid"	63	0	1	2
2351	129	"res_0"	"sec_interval"	13	0	0	0
2352	129	"arg_1"	"sec_interval"	13	0	1	1
2353	129	"arg_2"	"oid"	63	0	1	2
2354	130	"res_0"	"sec_interval"	13	0	0	0
2355	130	"arg_1"	"sec_interval"	13	0	1	1
2356	130	"arg_2"	"oid"	63	0	1	2
2357	131	"res_0"	"tinyint"	8	0	0	0
2358	131	"arg_1"	"tinyint"	8	0	1	1
2359	131	"arg_2"	"tinyint"	8	0	1	2
2360	132	"res_0"	"tinyint"	8	0	0	0
2361	132	"arg_1"	"tinyint"	8	0	1	1
2362	132	"arg_2"	"tinyint"	8	0	1	2
2363	133	"res_0"	"tinyint"	8	0	0	0
2364	133	"arg_1"	"tinyint"	8	0	1	1
2365	133	"arg_2"	"tinyint"	8	0	1	2
2366	134	"res_0"	"tinyint"	8	0	0	0
2367	134	"arg_1"	"tinyint"	8	0	1	1
2368	134	"arg_2"	"tinyint"	8	0	1	2
2369	135	"res_0"	"tinyint"	8	0	0	0
2370	135	"arg_1"	"tinyint"	8	0	1	1
2371	135	"arg_2"	"tinyint"	8	0	1	2
2372	136	"res_0"	"tinyint"	8	0	0	0
2373	136	"arg_1"	"tinyint"	8	0	1	1
2374	136	"arg_2"	"tinyint"	8	0	1	2
2375	137	"res_0"	"tinyint"	8	0	0	0
2376	137	"arg_1"	"tinyint"	8	0	1	1
2377	137	"arg_2"	"tinyint"	8	0	1	2
2378	138	"res_0"	"tinyint"	8	0	0	0
2379	138	"arg_1"	"tinyint"	8	0	1	1
2380	139	"res_0"	"tinyint"	8	0	0	0
2381	139	"arg_1"	"tinyint"	8	0	1	1
2382	139	"arg_2"	"int"	32	0	1	2
2383	140	"res_0"	"tinyint"	8	0	0	0
2384	140	"arg_1"	"tinyint"	8	0	1	1
2385	140	"arg_2"	"int"	32	0	1	2
2386	141	"res_0"	"tinyint"	8	0	0	0
2387	141	"arg_1"	"tinyint"	8	0	1	1
2388	142	"res_0"	"tinyint"	8	0	0	0
2389	142	"arg_1"	"tinyint"	8	0	1	1
2390	143	"res_0"	"tinyint"	8	0	0	0
2391	143	"arg_1"	"tinyint"	8	0	1	1
2392	144	"res_0"	"tinyint"	8	0	0	0
2393	144	"arg_1"	"tinyint"	8	0	1	1
2394	144	"arg_2"	"tinyint"	8	0	1	2
2395	145	"res_0"	"tinyint"	8	0	0	0
2396	145	"arg_1"	"tinyint"	8	0	1	1
2397	145	"arg_2"	"tinyint"	8	0	1	2
2398	146	"res_0"	"month_interval"	32	0	0	0
2399	146	"arg_1"	"month_interval"	32	0	1	1
2400	146	"arg_2"	"tinyint"	8	0	1	2
2401	147	"res_0"	"month_interval"	32	0	0	0
2402	147	"arg_1"	"month_interval"	32	0	1	1
2403	147	"arg_2"	"tinyint"	8	0	1	2
2404	148	"res_0"	"month_interval"	32	0	0	0
2405	148	"arg_1"	"month_interval"	32	0	1	1
2406	148	"arg_2"	"tinyint"	8	0	1	2
2407	149	"res_0"	"month_interval"	32	0	0	0
2408	149	"arg_1"	"month_interval"	32	0	1	1
2409	149	"arg_2"	"tinyint"	8	0	1	2
2410	150	"res_0"	"sec_interval"	13	0	0	0
2411	150	"arg_1"	"sec_interval"	13	0	1	1
2412	150	"arg_2"	"tinyint"	8	0	1	2
2413	151	"res_0"	"sec_interval"	13	0	0	0
2414	151	"arg_1"	"sec_interval"	13	0	1	1
2415	151	"arg_2"	"tinyint"	8	0	1	2
2416	152	"res_0"	"sec_interval"	13	0	0	0
2417	152	"arg_1"	"sec_interval"	13	0	1	1
2418	152	"arg_2"	"tinyint"	8	0	1	2
2419	153	"res_0"	"sec_interval"	13	0	0	0
2420	153	"arg_1"	"sec_interval"	13	0	1	1
2421	153	"arg_2"	"tinyint"	8	0	1	2
2422	154	"res_0"	"smallint"	16	0	0	0
2423	154	"arg_1"	"smallint"	16	0	1	1
2424	154	"arg_2"	"smallint"	16	0	1	2
2425	155	"res_0"	"smallint"	16	0	0	0
2426	155	"arg_1"	"smallint"	16	0	1	1
2427	155	"arg_2"	"smallint"	16	0	1	2
2428	156	"res_0"	"smallint"	16	0	0	0
2429	156	"arg_1"	"smallint"	16	0	1	1
2430	156	"arg_2"	"smallint"	16	0	1	2
2431	157	"res_0"	"smallint"	16	0	0	0
2432	157	"arg_1"	"smallint"	16	0	1	1
2433	157	"arg_2"	"smallint"	16	0	1	2
2434	158	"res_0"	"smallint"	16	0	0	0
2435	158	"arg_1"	"smallint"	16	0	1	1
2436	158	"arg_2"	"smallint"	16	0	1	2
2437	159	"res_0"	"smallint"	16	0	0	0
2438	159	"arg_1"	"smallint"	16	0	1	1
2439	159	"arg_2"	"smallint"	16	0	1	2
2440	160	"res_0"	"smallint"	16	0	0	0
2441	160	"arg_1"	"smallint"	16	0	1	1
2442	160	"arg_2"	"smallint"	16	0	1	2
2443	161	"res_0"	"smallint"	16	0	0	0
2444	161	"arg_1"	"smallint"	16	0	1	1
2445	162	"res_0"	"smallint"	16	0	0	0
2446	162	"arg_1"	"smallint"	16	0	1	1
2447	162	"arg_2"	"int"	32	0	1	2
2448	163	"res_0"	"smallint"	16	0	0	0
2449	163	"arg_1"	"smallint"	16	0	1	1
2450	163	"arg_2"	"int"	32	0	1	2
2451	164	"res_0"	"smallint"	16	0	0	0
2452	164	"arg_1"	"smallint"	16	0	1	1
2453	165	"res_0"	"smallint"	16	0	0	0
2454	165	"arg_1"	"smallint"	16	0	1	1
2455	166	"res_0"	"tinyint"	8	0	0	0
2456	166	"arg_1"	"smallint"	16	0	1	1
2457	167	"res_0"	"smallint"	16	0	0	0
2458	167	"arg_1"	"smallint"	16	0	1	1
2459	167	"arg_2"	"smallint"	16	0	1	2
2460	168	"res_0"	"smallint"	16	0	0	0
2461	168	"arg_1"	"smallint"	16	0	1	1
2462	168	"arg_2"	"smallint"	16	0	1	2
2463	169	"res_0"	"month_interval"	32	0	0	0
2464	169	"arg_1"	"month_interval"	32	0	1	1
2465	169	"arg_2"	"smallint"	16	0	1	2
2466	170	"res_0"	"month_interval"	32	0	0	0
2467	170	"arg_1"	"month_interval"	32	0	1	1
2468	170	"arg_2"	"smallint"	16	0	1	2
2469	171	"res_0"	"month_interval"	32	0	0	0
2470	171	"arg_1"	"month_interval"	32	0	1	1
2471	171	"arg_2"	"smallint"	16	0	1	2
2472	172	"res_0"	"month_interval"	32	0	0	0
2473	172	"arg_1"	"month_interval"	32	0	1	1
2474	172	"arg_2"	"smallint"	16	0	1	2
2475	173	"res_0"	"sec_interval"	13	0	0	0
2476	173	"arg_1"	"sec_interval"	13	0	1	1
2477	173	"arg_2"	"smallint"	16	0	1	2
2478	174	"res_0"	"sec_interval"	13	0	0	0
2479	174	"arg_1"	"sec_interval"	13	0	1	1
2480	174	"arg_2"	"smallint"	16	0	1	2
2481	175	"res_0"	"sec_interval"	13	0	0	0
2482	175	"arg_1"	"sec_interval"	13	0	1	1
2483	175	"arg_2"	"smallint"	16	0	1	2
2484	176	"res_0"	"sec_interval"	13	0	0	0
2485	176	"arg_1"	"sec_interval"	13	0	1	1
2486	176	"arg_2"	"smallint"	16	0	1	2
2487	177	"res_0"	"int"	32	0	0	0
2488	177	"arg_1"	"int"	32	0	1	1
2489	177	"arg_2"	"int"	32	0	1	2
2490	178	"res_0"	"int"	32	0	0	0
2491	178	"arg_1"	"int"	32	0	1	1
2492	178	"arg_2"	"int"	32	0	1	2
2493	179	"res_0"	"int"	32	0	0	0
2494	179	"arg_1"	"int"	32	0	1	1
2495	179	"arg_2"	"int"	32	0	1	2
2496	180	"res_0"	"int"	32	0	0	0
2497	180	"arg_1"	"int"	32	0	1	1
2498	180	"arg_2"	"int"	32	0	1	2
2499	181	"res_0"	"int"	32	0	0	0
2500	181	"arg_1"	"int"	32	0	1	1
2501	181	"arg_2"	"int"	32	0	1	2
2502	182	"res_0"	"int"	32	0	0	0
2503	182	"arg_1"	"int"	32	0	1	1
2504	182	"arg_2"	"int"	32	0	1	2
2505	183	"res_0"	"int"	32	0	0	0
2506	183	"arg_1"	"int"	32	0	1	1
2507	183	"arg_2"	"int"	32	0	1	2
2508	184	"res_0"	"int"	32	0	0	0
2509	184	"arg_1"	"int"	32	0	1	1
2510	185	"res_0"	"int"	32	0	0	0
2511	185	"arg_1"	"int"	32	0	1	1
2512	185	"arg_2"	"int"	32	0	1	2
2513	186	"res_0"	"int"	32	0	0	0
2514	186	"arg_1"	"int"	32	0	1	1
2515	186	"arg_2"	"int"	32	0	1	2
2516	187	"res_0"	"int"	32	0	0	0
2517	187	"arg_1"	"int"	32	0	1	1
2518	188	"res_0"	"int"	32	0	0	0
2519	188	"arg_1"	"int"	32	0	1	1
2520	189	"res_0"	"tinyint"	8	0	0	0
2521	189	"arg_1"	"int"	32	0	1	1
2522	190	"res_0"	"int"	32	0	0	0
2523	190	"arg_1"	"int"	32	0	1	1
2524	190	"arg_2"	"int"	32	0	1	2
2525	191	"res_0"	"int"	32	0	0	0
2526	191	"arg_1"	"int"	32	0	1	1
2527	191	"arg_2"	"int"	32	0	1	2
2528	192	"res_0"	"month_interval"	32	0	0	0
2529	192	"arg_1"	"month_interval"	32	0	1	1
2530	192	"arg_2"	"int"	32	0	1	2
2531	193	"res_0"	"month_interval"	32	0	0	0
2532	193	"arg_1"	"month_interval"	32	0	1	1
2533	193	"arg_2"	"int"	32	0	1	2
2534	194	"res_0"	"month_interval"	32	0	0	0
2535	194	"arg_1"	"month_interval"	32	0	1	1
2536	194	"arg_2"	"int"	32	0	1	2
2537	195	"res_0"	"month_interval"	32	0	0	0
2538	195	"arg_1"	"month_interval"	32	0	1	1
2539	195	"arg_2"	"int"	32	0	1	2
2540	196	"res_0"	"sec_interval"	13	0	0	0
2541	196	"arg_1"	"sec_interval"	13	0	1	1
2542	196	"arg_2"	"int"	32	0	1	2
2543	197	"res_0"	"sec_interval"	13	0	0	0
2544	197	"arg_1"	"sec_interval"	13	0	1	1
2545	197	"arg_2"	"int"	32	0	1	2
2546	198	"res_0"	"sec_interval"	13	0	0	0
2547	198	"arg_1"	"sec_interval"	13	0	1	1
2548	198	"arg_2"	"int"	32	0	1	2
2549	199	"res_0"	"sec_interval"	13	0	0	0
2550	199	"arg_1"	"sec_interval"	13	0	1	1
2551	199	"arg_2"	"int"	32	0	1	2
2552	200	"res_0"	"bigint"	64	0	0	0
2553	200	"arg_1"	"bigint"	64	0	1	1
2554	200	"arg_2"	"bigint"	64	0	1	2
2555	201	"res_0"	"bigint"	64	0	0	0
2556	201	"arg_1"	"bigint"	64	0	1	1
2557	201	"arg_2"	"bigint"	64	0	1	2
2558	202	"res_0"	"bigint"	64	0	0	0
2559	202	"arg_1"	"bigint"	64	0	1	1
2560	202	"arg_2"	"bigint"	64	0	1	2
2561	203	"res_0"	"bigint"	64	0	0	0
2562	203	"arg_1"	"bigint"	64	0	1	1
2563	203	"arg_2"	"bigint"	64	0	1	2
2564	204	"res_0"	"bigint"	64	0	0	0
2565	204	"arg_1"	"bigint"	64	0	1	1
2566	204	"arg_2"	"bigint"	64	0	1	2
2567	205	"res_0"	"bigint"	64	0	0	0
2568	205	"arg_1"	"bigint"	64	0	1	1
2569	205	"arg_2"	"bigint"	64	0	1	2
2570	206	"res_0"	"bigint"	64	0	0	0
2571	206	"arg_1"	"bigint"	64	0	1	1
2572	206	"arg_2"	"bigint"	64	0	1	2
2573	207	"res_0"	"bigint"	64	0	0	0
2574	207	"arg_1"	"bigint"	64	0	1	1
2575	208	"res_0"	"bigint"	64	0	0	0
2576	208	"arg_1"	"bigint"	64	0	1	1
2577	208	"arg_2"	"int"	32	0	1	2
2578	209	"res_0"	"bigint"	64	0	0	0
2579	209	"arg_1"	"bigint"	64	0	1	1
2580	209	"arg_2"	"int"	32	0	1	2
2581	210	"res_0"	"bigint"	64	0	0	0
2582	210	"arg_1"	"bigint"	64	0	1	1
2583	211	"res_0"	"bigint"	64	0	0	0
2584	211	"arg_1"	"bigint"	64	0	1	1
2585	212	"res_0"	"tinyint"	8	0	0	0
2586	212	"arg_1"	"bigint"	64	0	1	1
2587	213	"res_0"	"bigint"	64	0	0	0
2588	213	"arg_1"	"bigint"	64	0	1	1
2589	213	"arg_2"	"bigint"	64	0	1	2
2590	214	"res_0"	"bigint"	64	0	0	0
2591	214	"arg_1"	"bigint"	64	0	1	1
2592	214	"arg_2"	"bigint"	64	0	1	2
2593	215	"res_0"	"month_interval"	32	0	0	0
2594	215	"arg_1"	"month_interval"	32	0	1	1
2595	215	"arg_2"	"bigint"	64	0	1	2
2596	216	"res_0"	"month_interval"	32	0	0	0
2597	216	"arg_1"	"month_interval"	32	0	1	1
2598	216	"arg_2"	"bigint"	64	0	1	2
2599	217	"res_0"	"month_interval"	32	0	0	0
2600	217	"arg_1"	"month_interval"	32	0	1	1
2601	217	"arg_2"	"bigint"	64	0	1	2
2602	218	"res_0"	"month_interval"	32	0	0	0
2603	218	"arg_1"	"month_interval"	32	0	1	1
2604	218	"arg_2"	"bigint"	64	0	1	2
2605	219	"res_0"	"sec_interval"	13	0	0	0
2606	219	"arg_1"	"sec_interval"	13	0	1	1
2607	219	"arg_2"	"bigint"	64	0	1	2
2608	220	"res_0"	"sec_interval"	13	0	0	0
2609	220	"arg_1"	"sec_interval"	13	0	1	1
2610	220	"arg_2"	"bigint"	64	0	1	2
2611	221	"res_0"	"sec_interval"	13	0	0	0
2612	221	"arg_1"	"sec_interval"	13	0	1	1
2613	221	"arg_2"	"bigint"	64	0	1	2
2614	222	"res_0"	"sec_interval"	13	0	0	0
2615	222	"arg_1"	"sec_interval"	13	0	1	1
2616	222	"arg_2"	"bigint"	64	0	1	2
2617	223	"res_0"	"wrd"	64	0	0	0
2618	223	"arg_1"	"wrd"	64	0	1	1
2619	223	"arg_2"	"wrd"	64	0	1	2
2620	224	"res_0"	"wrd"	64	0	0	0
2621	224	"arg_1"	"wrd"	64	0	1	1
2622	224	"arg_2"	"wrd"	64	0	1	2
2623	225	"res_0"	"wrd"	64	0	0	0
2624	225	"arg_1"	"wrd"	64	0	1	1
2625	225	"arg_2"	"wrd"	64	0	1	2
2626	226	"res_0"	"wrd"	64	0	0	0
2627	226	"arg_1"	"wrd"	64	0	1	1
2628	226	"arg_2"	"wrd"	64	0	1	2
2629	227	"res_0"	"wrd"	64	0	0	0
2630	227	"arg_1"	"wrd"	64	0	1	1
2631	227	"arg_2"	"wrd"	64	0	1	2
2632	228	"res_0"	"wrd"	64	0	0	0
2633	228	"arg_1"	"wrd"	64	0	1	1
2634	228	"arg_2"	"wrd"	64	0	1	2
2635	229	"res_0"	"wrd"	64	0	0	0
2636	229	"arg_1"	"wrd"	64	0	1	1
2637	229	"arg_2"	"wrd"	64	0	1	2
2638	230	"res_0"	"wrd"	64	0	0	0
2639	230	"arg_1"	"wrd"	64	0	1	1
2640	231	"res_0"	"wrd"	64	0	0	0
2641	231	"arg_1"	"wrd"	64	0	1	1
2642	231	"arg_2"	"int"	32	0	1	2
2643	232	"res_0"	"wrd"	64	0	0	0
2644	232	"arg_1"	"wrd"	64	0	1	1
2645	232	"arg_2"	"int"	32	0	1	2
2646	233	"res_0"	"wrd"	64	0	0	0
2647	233	"arg_1"	"wrd"	64	0	1	1
2648	234	"res_0"	"wrd"	64	0	0	0
2649	234	"arg_1"	"wrd"	64	0	1	1
2650	235	"res_0"	"tinyint"	8	0	0	0
2651	235	"arg_1"	"wrd"	64	0	1	1
2652	236	"res_0"	"wrd"	64	0	0	0
2653	236	"arg_1"	"wrd"	64	0	1	1
2654	236	"arg_2"	"wrd"	64	0	1	2
2655	237	"res_0"	"wrd"	64	0	0	0
2656	237	"arg_1"	"wrd"	64	0	1	1
2657	237	"arg_2"	"wrd"	64	0	1	2
2658	238	"res_0"	"month_interval"	32	0	0	0
2659	238	"arg_1"	"month_interval"	32	0	1	1
2660	238	"arg_2"	"wrd"	64	0	1	2
2661	239	"res_0"	"month_interval"	32	0	0	0
2662	239	"arg_1"	"month_interval"	32	0	1	1
2663	239	"arg_2"	"wrd"	64	0	1	2
2664	240	"res_0"	"month_interval"	32	0	0	0
2665	240	"arg_1"	"month_interval"	32	0	1	1
2666	240	"arg_2"	"wrd"	64	0	1	2
2667	241	"res_0"	"month_interval"	32	0	0	0
2668	241	"arg_1"	"month_interval"	32	0	1	1
2669	241	"arg_2"	"wrd"	64	0	1	2
2670	242	"res_0"	"sec_interval"	13	0	0	0
2671	242	"arg_1"	"sec_interval"	13	0	1	1
2672	242	"arg_2"	"wrd"	64	0	1	2
2673	243	"res_0"	"sec_interval"	13	0	0	0
2674	243	"arg_1"	"sec_interval"	13	0	1	1
2675	243	"arg_2"	"wrd"	64	0	1	2
2676	244	"res_0"	"sec_interval"	13	0	0	0
2677	244	"arg_1"	"sec_interval"	13	0	1	1
2678	244	"arg_2"	"wrd"	64	0	1	2
2679	245	"res_0"	"sec_interval"	13	0	0	0
2680	245	"arg_1"	"sec_interval"	13	0	1	1
2681	245	"arg_2"	"wrd"	64	0	1	2
2682	246	"res_0"	"hugeint"	128	0	0	0
2683	246	"arg_1"	"hugeint"	128	0	1	1
2684	246	"arg_2"	"hugeint"	128	0	1	2
2685	247	"res_0"	"hugeint"	128	0	0	0
2686	247	"arg_1"	"hugeint"	128	0	1	1
2687	247	"arg_2"	"hugeint"	128	0	1	2
2688	248	"res_0"	"hugeint"	128	0	0	0
2689	248	"arg_1"	"hugeint"	128	0	1	1
2690	248	"arg_2"	"hugeint"	128	0	1	2
2691	249	"res_0"	"hugeint"	128	0	0	0
2692	249	"arg_1"	"hugeint"	128	0	1	1
2693	249	"arg_2"	"hugeint"	128	0	1	2
2694	250	"res_0"	"hugeint"	128	0	0	0
2695	250	"arg_1"	"hugeint"	128	0	1	1
2696	250	"arg_2"	"hugeint"	128	0	1	2
2697	251	"res_0"	"hugeint"	128	0	0	0
2698	251	"arg_1"	"hugeint"	128	0	1	1
2699	251	"arg_2"	"hugeint"	128	0	1	2
2700	252	"res_0"	"hugeint"	128	0	0	0
2701	252	"arg_1"	"hugeint"	128	0	1	1
2702	252	"arg_2"	"hugeint"	128	0	1	2
2703	253	"res_0"	"hugeint"	128	0	0	0
2704	253	"arg_1"	"hugeint"	128	0	1	1
2705	254	"res_0"	"hugeint"	128	0	0	0
2706	254	"arg_1"	"hugeint"	128	0	1	1
2707	254	"arg_2"	"int"	32	0	1	2
2708	255	"res_0"	"hugeint"	128	0	0	0
2709	255	"arg_1"	"hugeint"	128	0	1	1
2710	255	"arg_2"	"int"	32	0	1	2
2711	256	"res_0"	"hugeint"	128	0	0	0
2712	256	"arg_1"	"hugeint"	128	0	1	1
2713	257	"res_0"	"hugeint"	128	0	0	0
2714	257	"arg_1"	"hugeint"	128	0	1	1
2715	258	"res_0"	"tinyint"	8	0	0	0
2716	258	"arg_1"	"hugeint"	128	0	1	1
2717	259	"res_0"	"hugeint"	128	0	0	0
2718	259	"arg_1"	"hugeint"	128	0	1	1
2719	259	"arg_2"	"hugeint"	128	0	1	2
2720	260	"res_0"	"hugeint"	128	0	0	0
2721	260	"arg_1"	"hugeint"	128	0	1	1
2722	260	"arg_2"	"hugeint"	128	0	1	2
2723	261	"res_0"	"month_interval"	32	0	0	0
2724	261	"arg_1"	"month_interval"	32	0	1	1
2725	261	"arg_2"	"hugeint"	128	0	1	2
2726	262	"res_0"	"month_interval"	32	0	0	0
2727	262	"arg_1"	"month_interval"	32	0	1	1
2728	262	"arg_2"	"hugeint"	128	0	1	2
2729	263	"res_0"	"month_interval"	32	0	0	0
2730	263	"arg_1"	"month_interval"	32	0	1	1
2731	263	"arg_2"	"hugeint"	128	0	1	2
2732	264	"res_0"	"month_interval"	32	0	0	0
2733	264	"arg_1"	"month_interval"	32	0	1	1
2734	264	"arg_2"	"hugeint"	128	0	1	2
2735	265	"res_0"	"sec_interval"	13	0	0	0
2736	265	"arg_1"	"sec_interval"	13	0	1	1
2737	265	"arg_2"	"hugeint"	128	0	1	2
2738	266	"res_0"	"sec_interval"	13	0	0	0
2739	266	"arg_1"	"sec_interval"	13	0	1	1
2740	266	"arg_2"	"hugeint"	128	0	1	2
2741	267	"res_0"	"sec_interval"	13	0	0	0
2742	267	"arg_1"	"sec_interval"	13	0	1	1
2743	267	"arg_2"	"hugeint"	128	0	1	2
2744	268	"res_0"	"sec_interval"	13	0	0	0
2745	268	"arg_1"	"sec_interval"	13	0	1	1
2746	268	"arg_2"	"hugeint"	128	0	1	2
2747	269	"res_0"	"decimal"	2	0	0	0
2748	269	"arg_1"	"decimal"	2	0	1	1
2749	269	"arg_2"	"decimal"	2	0	1	2
2750	270	"res_0"	"decimal"	2	0	0	0
2751	270	"arg_1"	"decimal"	2	0	1	1
2752	270	"arg_2"	"decimal"	2	0	1	2
2753	271	"res_0"	"decimal"	2	0	0	0
2754	271	"arg_1"	"decimal"	2	0	1	1
2755	271	"arg_2"	"decimal"	2	0	1	2
2756	272	"res_0"	"decimal"	2	0	0	0
2757	272	"arg_1"	"decimal"	2	0	1	1
2758	272	"arg_2"	"decimal"	2	0	1	2
2759	273	"res_0"	"decimal"	2	0	0	0
2760	273	"arg_1"	"decimal"	2	0	1	1
2761	273	"arg_2"	"decimal"	2	0	1	2
2762	274	"res_0"	"decimal"	2	0	0	0
2763	274	"arg_1"	"decimal"	2	0	1	1
2764	274	"arg_2"	"decimal"	2	0	1	2
2765	275	"res_0"	"decimal"	2	0	0	0
2766	275	"arg_1"	"decimal"	2	0	1	1
2767	275	"arg_2"	"decimal"	2	0	1	2
2768	276	"res_0"	"decimal"	2	0	0	0
2769	276	"arg_1"	"decimal"	2	0	1	1
2770	277	"res_0"	"decimal"	2	0	0	0
2771	277	"arg_1"	"decimal"	2	0	1	1
2772	277	"arg_2"	"int"	32	0	1	2
2773	278	"res_0"	"decimal"	2	0	0	0
2774	278	"arg_1"	"decimal"	2	0	1	1
2775	278	"arg_2"	"int"	32	0	1	2
2776	279	"res_0"	"decimal"	2	0	0	0
2777	279	"arg_1"	"decimal"	2	0	1	1
2778	280	"res_0"	"decimal"	2	0	0	0
2779	280	"arg_1"	"decimal"	2	0	1	1
2780	281	"res_0"	"tinyint"	8	0	0	0
2781	281	"arg_1"	"decimal"	2	0	1	1
2782	282	"res_0"	"decimal"	2	0	0	0
2783	282	"arg_1"	"decimal"	2	0	1	1
2784	282	"arg_2"	"tinyint"	8	0	1	2
2785	283	"res_0"	"decimal"	2	0	0	0
2786	283	"arg_1"	"decimal"	2	0	1	1
2787	283	"arg_2"	"tinyint"	8	0	1	2
2788	284	"res_0"	"month_interval"	32	0	0	0
2789	284	"arg_1"	"month_interval"	32	0	1	1
2790	284	"arg_2"	"decimal"	2	0	1	2
2791	285	"res_0"	"month_interval"	32	0	0	0
2792	285	"arg_1"	"month_interval"	32	0	1	1
2793	285	"arg_2"	"decimal"	2	0	1	2
2794	286	"res_0"	"month_interval"	32	0	0	0
2795	286	"arg_1"	"month_interval"	32	0	1	1
2796	286	"arg_2"	"decimal"	2	0	1	2
2797	287	"res_0"	"month_interval"	32	0	0	0
2798	287	"arg_1"	"month_interval"	32	0	1	1
2799	287	"arg_2"	"decimal"	2	0	1	2
2800	288	"res_0"	"sec_interval"	13	0	0	0
2801	288	"arg_1"	"sec_interval"	13	0	1	1
2802	288	"arg_2"	"decimal"	2	0	1	2
2803	289	"res_0"	"sec_interval"	13	0	0	0
2804	289	"arg_1"	"sec_interval"	13	0	1	1
2805	289	"arg_2"	"decimal"	2	0	1	2
2806	290	"res_0"	"sec_interval"	13	0	0	0
2807	290	"arg_1"	"sec_interval"	13	0	1	1
2808	290	"arg_2"	"decimal"	2	0	1	2
2809	291	"res_0"	"sec_interval"	13	0	0	0
2810	291	"arg_1"	"sec_interval"	13	0	1	1
2811	291	"arg_2"	"decimal"	2	0	1	2
2812	292	"res_0"	"decimal"	4	0	0	0
2813	292	"arg_1"	"decimal"	4	0	1	1
2814	292	"arg_2"	"decimal"	4	0	1	2
2815	293	"res_0"	"decimal"	4	0	0	0
2816	293	"arg_1"	"decimal"	4	0	1	1
2817	293	"arg_2"	"decimal"	4	0	1	2
2818	294	"res_0"	"decimal"	4	0	0	0
2819	294	"arg_1"	"decimal"	4	0	1	1
2820	294	"arg_2"	"decimal"	4	0	1	2
2821	295	"res_0"	"decimal"	4	0	0	0
2822	295	"arg_1"	"decimal"	4	0	1	1
2823	295	"arg_2"	"decimal"	4	0	1	2
2824	296	"res_0"	"decimal"	4	0	0	0
2825	296	"arg_1"	"decimal"	4	0	1	1
2826	296	"arg_2"	"decimal"	4	0	1	2
2827	297	"res_0"	"decimal"	4	0	0	0
2828	297	"arg_1"	"decimal"	4	0	1	1
2829	297	"arg_2"	"decimal"	4	0	1	2
2830	298	"res_0"	"decimal"	4	0	0	0
2831	298	"arg_1"	"decimal"	4	0	1	1
2832	298	"arg_2"	"decimal"	4	0	1	2
2833	299	"res_0"	"decimal"	4	0	0	0
2834	299	"arg_1"	"decimal"	4	0	1	1
2835	300	"res_0"	"decimal"	4	0	0	0
2836	300	"arg_1"	"decimal"	4	0	1	1
2837	300	"arg_2"	"int"	32	0	1	2
2838	301	"res_0"	"decimal"	4	0	0	0
2839	301	"arg_1"	"decimal"	4	0	1	1
2840	301	"arg_2"	"int"	32	0	1	2
2841	302	"res_0"	"decimal"	4	0	0	0
2842	302	"arg_1"	"decimal"	4	0	1	1
2843	303	"res_0"	"decimal"	4	0	0	0
2844	303	"arg_1"	"decimal"	4	0	1	1
2845	304	"res_0"	"tinyint"	8	0	0	0
2846	304	"arg_1"	"decimal"	4	0	1	1
2847	305	"res_0"	"decimal"	4	0	0	0
2848	305	"arg_1"	"decimal"	4	0	1	1
2849	305	"arg_2"	"smallint"	16	0	1	2
2850	306	"res_0"	"decimal"	4	0	0	0
2851	306	"arg_1"	"decimal"	4	0	1	1
2852	306	"arg_2"	"smallint"	16	0	1	2
2853	307	"res_0"	"month_interval"	32	0	0	0
2854	307	"arg_1"	"month_interval"	32	0	1	1
2855	307	"arg_2"	"decimal"	4	0	1	2
2856	308	"res_0"	"month_interval"	32	0	0	0
2857	308	"arg_1"	"month_interval"	32	0	1	1
2858	308	"arg_2"	"decimal"	4	0	1	2
2859	309	"res_0"	"month_interval"	32	0	0	0
2860	309	"arg_1"	"month_interval"	32	0	1	1
2861	309	"arg_2"	"decimal"	4	0	1	2
2862	310	"res_0"	"month_interval"	32	0	0	0
2863	310	"arg_1"	"month_interval"	32	0	1	1
2864	310	"arg_2"	"decimal"	4	0	1	2
2865	311	"res_0"	"sec_interval"	13	0	0	0
2866	311	"arg_1"	"sec_interval"	13	0	1	1
2867	311	"arg_2"	"decimal"	4	0	1	2
2868	312	"res_0"	"sec_interval"	13	0	0	0
2869	312	"arg_1"	"sec_interval"	13	0	1	1
2870	312	"arg_2"	"decimal"	4	0	1	2
2871	313	"res_0"	"sec_interval"	13	0	0	0
2872	313	"arg_1"	"sec_interval"	13	0	1	1
2873	313	"arg_2"	"decimal"	4	0	1	2
2874	314	"res_0"	"sec_interval"	13	0	0	0
2875	314	"arg_1"	"sec_interval"	13	0	1	1
2876	314	"arg_2"	"decimal"	4	0	1	2
2877	315	"res_0"	"decimal"	9	0	0	0
2878	315	"arg_1"	"decimal"	9	0	1	1
2879	315	"arg_2"	"decimal"	9	0	1	2
2880	316	"res_0"	"decimal"	9	0	0	0
2881	316	"arg_1"	"decimal"	9	0	1	1
2882	316	"arg_2"	"decimal"	9	0	1	2
2883	317	"res_0"	"decimal"	9	0	0	0
2884	317	"arg_1"	"decimal"	9	0	1	1
2885	317	"arg_2"	"decimal"	9	0	1	2
2886	318	"res_0"	"decimal"	9	0	0	0
2887	318	"arg_1"	"decimal"	9	0	1	1
2888	318	"arg_2"	"decimal"	9	0	1	2
2889	319	"res_0"	"decimal"	9	0	0	0
2890	319	"arg_1"	"decimal"	9	0	1	1
2891	319	"arg_2"	"decimal"	9	0	1	2
2892	320	"res_0"	"decimal"	9	0	0	0
2893	320	"arg_1"	"decimal"	9	0	1	1
2894	320	"arg_2"	"decimal"	9	0	1	2
2895	321	"res_0"	"decimal"	9	0	0	0
2896	321	"arg_1"	"decimal"	9	0	1	1
2897	321	"arg_2"	"decimal"	9	0	1	2
2898	322	"res_0"	"decimal"	9	0	0	0
2899	322	"arg_1"	"decimal"	9	0	1	1
2900	323	"res_0"	"decimal"	9	0	0	0
2901	323	"arg_1"	"decimal"	9	0	1	1
2902	323	"arg_2"	"int"	32	0	1	2
2903	324	"res_0"	"decimal"	9	0	0	0
2904	324	"arg_1"	"decimal"	9	0	1	1
2905	324	"arg_2"	"int"	32	0	1	2
2906	325	"res_0"	"decimal"	9	0	0	0
2907	325	"arg_1"	"decimal"	9	0	1	1
2908	326	"res_0"	"decimal"	9	0	0	0
2909	326	"arg_1"	"decimal"	9	0	1	1
2910	327	"res_0"	"tinyint"	8	0	0	0
2911	327	"arg_1"	"decimal"	9	0	1	1
2912	328	"res_0"	"decimal"	9	0	0	0
2913	328	"arg_1"	"decimal"	9	0	1	1
2914	328	"arg_2"	"int"	32	0	1	2
2915	329	"res_0"	"decimal"	9	0	0	0
2916	329	"arg_1"	"decimal"	9	0	1	1
2917	329	"arg_2"	"int"	32	0	1	2
2918	330	"res_0"	"month_interval"	32	0	0	0
2919	330	"arg_1"	"month_interval"	32	0	1	1
2920	330	"arg_2"	"decimal"	9	0	1	2
2921	331	"res_0"	"month_interval"	32	0	0	0
2922	331	"arg_1"	"month_interval"	32	0	1	1
2923	331	"arg_2"	"decimal"	9	0	1	2
2924	332	"res_0"	"month_interval"	32	0	0	0
2925	332	"arg_1"	"month_interval"	32	0	1	1
2926	332	"arg_2"	"decimal"	9	0	1	2
2927	333	"res_0"	"month_interval"	32	0	0	0
2928	333	"arg_1"	"month_interval"	32	0	1	1
2929	333	"arg_2"	"decimal"	9	0	1	2
2930	334	"res_0"	"sec_interval"	13	0	0	0
2931	334	"arg_1"	"sec_interval"	13	0	1	1
2932	334	"arg_2"	"decimal"	9	0	1	2
2933	335	"res_0"	"sec_interval"	13	0	0	0
2934	335	"arg_1"	"sec_interval"	13	0	1	1
2935	335	"arg_2"	"decimal"	9	0	1	2
2936	336	"res_0"	"sec_interval"	13	0	0	0
2937	336	"arg_1"	"sec_interval"	13	0	1	1
2938	336	"arg_2"	"decimal"	9	0	1	2
2939	337	"res_0"	"sec_interval"	13	0	0	0
2940	337	"arg_1"	"sec_interval"	13	0	1	1
2941	337	"arg_2"	"decimal"	9	0	1	2
2942	338	"res_0"	"decimal"	18	0	0	0
2943	338	"arg_1"	"decimal"	18	0	1	1
2944	338	"arg_2"	"decimal"	18	0	1	2
2945	339	"res_0"	"decimal"	18	0	0	0
2946	339	"arg_1"	"decimal"	18	0	1	1
2947	339	"arg_2"	"decimal"	18	0	1	2
2948	340	"res_0"	"decimal"	18	0	0	0
2949	340	"arg_1"	"decimal"	18	0	1	1
2950	340	"arg_2"	"decimal"	18	0	1	2
2951	341	"res_0"	"decimal"	18	0	0	0
2952	341	"arg_1"	"decimal"	18	0	1	1
2953	341	"arg_2"	"decimal"	18	0	1	2
2954	342	"res_0"	"decimal"	18	0	0	0
2955	342	"arg_1"	"decimal"	18	0	1	1
2956	342	"arg_2"	"decimal"	18	0	1	2
2957	343	"res_0"	"decimal"	18	0	0	0
2958	343	"arg_1"	"decimal"	18	0	1	1
2959	343	"arg_2"	"decimal"	18	0	1	2
2960	344	"res_0"	"decimal"	18	0	0	0
2961	344	"arg_1"	"decimal"	18	0	1	1
2962	344	"arg_2"	"decimal"	18	0	1	2
2963	345	"res_0"	"decimal"	18	0	0	0
2964	345	"arg_1"	"decimal"	18	0	1	1
2965	346	"res_0"	"decimal"	18	0	0	0
2966	346	"arg_1"	"decimal"	18	0	1	1
2967	346	"arg_2"	"int"	32	0	1	2
2968	347	"res_0"	"decimal"	18	0	0	0
2969	347	"arg_1"	"decimal"	18	0	1	1
2970	347	"arg_2"	"int"	32	0	1	2
2971	348	"res_0"	"decimal"	18	0	0	0
2972	348	"arg_1"	"decimal"	18	0	1	1
2973	349	"res_0"	"decimal"	18	0	0	0
2974	349	"arg_1"	"decimal"	18	0	1	1
2975	350	"res_0"	"tinyint"	8	0	0	0
2976	350	"arg_1"	"decimal"	18	0	1	1
2977	351	"res_0"	"decimal"	18	0	0	0
2978	351	"arg_1"	"decimal"	18	0	1	1
2979	351	"arg_2"	"bigint"	64	0	1	2
2980	352	"res_0"	"decimal"	18	0	0	0
2981	352	"arg_1"	"decimal"	18	0	1	1
2982	352	"arg_2"	"bigint"	64	0	1	2
2983	353	"res_0"	"month_interval"	32	0	0	0
2984	353	"arg_1"	"month_interval"	32	0	1	1
2985	353	"arg_2"	"decimal"	18	0	1	2
2986	354	"res_0"	"month_interval"	32	0	0	0
2987	354	"arg_1"	"month_interval"	32	0	1	1
2988	354	"arg_2"	"decimal"	18	0	1	2
2989	355	"res_0"	"month_interval"	32	0	0	0
2990	355	"arg_1"	"month_interval"	32	0	1	1
2991	355	"arg_2"	"decimal"	18	0	1	2
2992	356	"res_0"	"month_interval"	32	0	0	0
2993	356	"arg_1"	"month_interval"	32	0	1	1
2994	356	"arg_2"	"decimal"	18	0	1	2
2995	357	"res_0"	"sec_interval"	13	0	0	0
2996	357	"arg_1"	"sec_interval"	13	0	1	1
2997	357	"arg_2"	"decimal"	18	0	1	2
2998	358	"res_0"	"sec_interval"	13	0	0	0
2999	358	"arg_1"	"sec_interval"	13	0	1	1
3000	358	"arg_2"	"decimal"	18	0	1	2
3001	359	"res_0"	"sec_interval"	13	0	0	0
3002	359	"arg_1"	"sec_interval"	13	0	1	1
3003	359	"arg_2"	"decimal"	18	0	1	2
3004	360	"res_0"	"sec_interval"	13	0	0	0
3005	360	"arg_1"	"sec_interval"	13	0	1	1
3006	360	"arg_2"	"decimal"	18	0	1	2
3007	361	"res_0"	"decimal"	39	0	0	0
3008	361	"arg_1"	"decimal"	39	0	1	1
3009	361	"arg_2"	"decimal"	39	0	1	2
3010	362	"res_0"	"decimal"	39	0	0	0
3011	362	"arg_1"	"decimal"	39	0	1	1
3012	362	"arg_2"	"decimal"	39	0	1	2
3013	363	"res_0"	"decimal"	39	0	0	0
3014	363	"arg_1"	"decimal"	39	0	1	1
3015	363	"arg_2"	"decimal"	39	0	1	2
3016	364	"res_0"	"decimal"	39	0	0	0
3017	364	"arg_1"	"decimal"	39	0	1	1
3018	364	"arg_2"	"decimal"	39	0	1	2
3019	365	"res_0"	"decimal"	39	0	0	0
3020	365	"arg_1"	"decimal"	39	0	1	1
3021	365	"arg_2"	"decimal"	39	0	1	2
3022	366	"res_0"	"decimal"	39	0	0	0
3023	366	"arg_1"	"decimal"	39	0	1	1
3024	366	"arg_2"	"decimal"	39	0	1	2
3025	367	"res_0"	"decimal"	39	0	0	0
3026	367	"arg_1"	"decimal"	39	0	1	1
3027	367	"arg_2"	"decimal"	39	0	1	2
3028	368	"res_0"	"decimal"	39	0	0	0
3029	368	"arg_1"	"decimal"	39	0	1	1
3030	369	"res_0"	"decimal"	39	0	0	0
3031	369	"arg_1"	"decimal"	39	0	1	1
3032	369	"arg_2"	"int"	32	0	1	2
3033	370	"res_0"	"decimal"	39	0	0	0
3034	370	"arg_1"	"decimal"	39	0	1	1
3035	370	"arg_2"	"int"	32	0	1	2
3036	371	"res_0"	"decimal"	39	0	0	0
3037	371	"arg_1"	"decimal"	39	0	1	1
3038	372	"res_0"	"decimal"	39	0	0	0
3039	372	"arg_1"	"decimal"	39	0	1	1
3040	373	"res_0"	"tinyint"	8	0	0	0
3041	373	"arg_1"	"decimal"	39	0	1	1
3042	374	"res_0"	"decimal"	39	0	0	0
3043	374	"arg_1"	"decimal"	39	0	1	1
3044	374	"arg_2"	"hugeint"	128	0	1	2
3045	375	"res_0"	"decimal"	39	0	0	0
3046	375	"arg_1"	"decimal"	39	0	1	1
3047	375	"arg_2"	"hugeint"	128	0	1	2
3048	376	"res_0"	"month_interval"	32	0	0	0
3049	376	"arg_1"	"month_interval"	32	0	1	1
3050	376	"arg_2"	"decimal"	39	0	1	2
3051	377	"res_0"	"month_interval"	32	0	0	0
3052	377	"arg_1"	"month_interval"	32	0	1	1
3053	377	"arg_2"	"decimal"	39	0	1	2
3054	378	"res_0"	"month_interval"	32	0	0	0
3055	378	"arg_1"	"month_interval"	32	0	1	1
3056	378	"arg_2"	"decimal"	39	0	1	2
3057	379	"res_0"	"month_interval"	32	0	0	0
3058	379	"arg_1"	"month_interval"	32	0	1	1
3059	379	"arg_2"	"decimal"	39	0	1	2
3060	380	"res_0"	"sec_interval"	13	0	0	0
3061	380	"arg_1"	"sec_interval"	13	0	1	1
3062	380	"arg_2"	"decimal"	39	0	1	2
3063	381	"res_0"	"sec_interval"	13	0	0	0
3064	381	"arg_1"	"sec_interval"	13	0	1	1
3065	381	"arg_2"	"decimal"	39	0	1	2
3066	382	"res_0"	"sec_interval"	13	0	0	0
3067	382	"arg_1"	"sec_interval"	13	0	1	1
3068	382	"arg_2"	"decimal"	39	0	1	2
3069	383	"res_0"	"sec_interval"	13	0	0	0
3070	383	"arg_1"	"sec_interval"	13	0	1	1
3071	383	"arg_2"	"decimal"	39	0	1	2
3072	384	"res_0"	"real"	24	0	0	0
3073	384	"arg_1"	"real"	24	0	1	1
3074	384	"arg_2"	"real"	24	0	1	2
3075	385	"res_0"	"real"	24	0	0	0
3076	385	"arg_1"	"real"	24	0	1	1
3077	385	"arg_2"	"real"	24	0	1	2
3078	386	"res_0"	"real"	24	0	0	0
3079	386	"arg_1"	"real"	24	0	1	1
3080	386	"arg_2"	"real"	24	0	1	2
3081	387	"res_0"	"real"	24	0	0	0
3082	387	"arg_1"	"real"	24	0	1	1
3083	387	"arg_2"	"real"	24	0	1	2
3084	388	"res_0"	"real"	24	0	0	0
3085	388	"arg_1"	"real"	24	0	1	1
3086	389	"res_0"	"real"	24	0	0	0
3087	389	"arg_1"	"real"	24	0	1	1
3088	390	"res_0"	"tinyint"	8	0	0	0
3089	390	"arg_1"	"real"	24	0	1	1
3090	391	"res_0"	"real"	24	0	0	0
3091	391	"arg_1"	"real"	24	0	1	1
3092	391	"arg_2"	"real"	24	0	1	2
3093	392	"res_0"	"real"	24	0	0	0
3094	392	"arg_1"	"real"	24	0	1	1
3095	392	"arg_2"	"real"	24	0	1	2
3096	393	"res_0"	"month_interval"	32	0	0	0
3097	393	"arg_1"	"month_interval"	32	0	1	1
3098	393	"arg_2"	"real"	24	0	1	2
3099	394	"res_0"	"month_interval"	32	0	0	0
3100	394	"arg_1"	"month_interval"	32	0	1	1
3101	394	"arg_2"	"real"	24	0	1	2
3102	395	"res_0"	"month_interval"	32	0	0	0
3103	395	"arg_1"	"month_interval"	32	0	1	1
3104	395	"arg_2"	"real"	24	0	1	2
3105	396	"res_0"	"month_interval"	32	0	0	0
3106	396	"arg_1"	"month_interval"	32	0	1	1
3107	396	"arg_2"	"real"	24	0	1	2
3108	397	"res_0"	"sec_interval"	13	0	0	0
3109	397	"arg_1"	"sec_interval"	13	0	1	1
3110	397	"arg_2"	"real"	24	0	1	2
3111	398	"res_0"	"sec_interval"	13	0	0	0
3112	398	"arg_1"	"sec_interval"	13	0	1	1
3113	398	"arg_2"	"real"	24	0	1	2
3114	399	"res_0"	"sec_interval"	13	0	0	0
3115	399	"arg_1"	"sec_interval"	13	0	1	1
3116	399	"arg_2"	"real"	24	0	1	2
3117	400	"res_0"	"sec_interval"	13	0	0	0
3118	400	"arg_1"	"sec_interval"	13	0	1	1
3119	400	"arg_2"	"real"	24	0	1	2
3120	401	"res_0"	"double"	53	0	0	0
3121	401	"arg_1"	"double"	53	0	1	1
3122	401	"arg_2"	"double"	53	0	1	2
3123	402	"res_0"	"double"	53	0	0	0
3124	402	"arg_1"	"double"	53	0	1	1
3125	402	"arg_2"	"double"	53	0	1	2
3126	403	"res_0"	"double"	53	0	0	0
3127	403	"arg_1"	"double"	53	0	1	1
3128	403	"arg_2"	"double"	53	0	1	2
3129	404	"res_0"	"double"	53	0	0	0
3130	404	"arg_1"	"double"	53	0	1	1
3131	404	"arg_2"	"double"	53	0	1	2
3132	405	"res_0"	"double"	53	0	0	0
3133	405	"arg_1"	"double"	53	0	1	1
3134	406	"res_0"	"double"	53	0	0	0
3135	406	"arg_1"	"double"	53	0	1	1
3136	407	"res_0"	"tinyint"	8	0	0	0
3137	407	"arg_1"	"double"	53	0	1	1
3138	408	"res_0"	"double"	53	0	0	0
3139	408	"arg_1"	"double"	53	0	1	1
3140	408	"arg_2"	"double"	53	0	1	2
3141	409	"res_0"	"double"	53	0	0	0
3142	409	"arg_1"	"double"	53	0	1	1
3143	409	"arg_2"	"double"	53	0	1	2
3144	410	"res_0"	"month_interval"	32	0	0	0
3145	410	"arg_1"	"month_interval"	32	0	1	1
3146	410	"arg_2"	"double"	53	0	1	2
3147	411	"res_0"	"month_interval"	32	0	0	0
3148	411	"arg_1"	"month_interval"	32	0	1	1
3149	411	"arg_2"	"double"	53	0	1	2
3150	412	"res_0"	"month_interval"	32	0	0	0
3151	412	"arg_1"	"month_interval"	32	0	1	1
3152	412	"arg_2"	"double"	53	0	1	2
3153	413	"res_0"	"month_interval"	32	0	0	0
3154	413	"arg_1"	"month_interval"	32	0	1	1
3155	413	"arg_2"	"double"	53	0	1	2
3156	414	"res_0"	"sec_interval"	13	0	0	0
3157	414	"arg_1"	"sec_interval"	13	0	1	1
3158	414	"arg_2"	"double"	53	0	1	2
3159	415	"res_0"	"sec_interval"	13	0	0	0
3160	415	"arg_1"	"sec_interval"	13	0	1	1
3161	415	"arg_2"	"double"	53	0	1	2
3162	416	"res_0"	"sec_interval"	13	0	0	0
3163	416	"arg_1"	"sec_interval"	13	0	1	1
3164	416	"arg_2"	"double"	53	0	1	2
3165	417	"res_0"	"sec_interval"	13	0	0	0
3166	417	"arg_1"	"sec_interval"	13	0	1	1
3167	417	"arg_2"	"double"	53	0	1	2
3168	418	"res_0"	"month_interval"	32	0	0	0
3169	418	"arg_1"	"month_interval"	32	0	1	1
3170	418	"arg_2"	"month_interval"	32	0	1	2
3171	419	"res_0"	"month_interval"	32	0	0	0
3172	419	"arg_1"	"month_interval"	32	0	1	1
3173	419	"arg_2"	"month_interval"	32	0	1	2
3174	420	"res_0"	"month_interval"	32	0	0	0
3175	420	"arg_1"	"month_interval"	32	0	1	1
3176	420	"arg_2"	"month_interval"	32	0	1	2
3177	421	"res_0"	"month_interval"	32	0	0	0
3178	421	"arg_1"	"month_interval"	32	0	1	1
3179	421	"arg_2"	"month_interval"	32	0	1	2
3180	422	"res_0"	"month_interval"	32	0	0	0
3181	422	"arg_1"	"month_interval"	32	0	1	1
3182	423	"res_0"	"month_interval"	32	0	0	0
3183	423	"arg_1"	"month_interval"	32	0	1	1
3184	424	"res_0"	"tinyint"	8	0	0	0
3185	424	"arg_1"	"month_interval"	32	0	1	1
3186	425	"res_0"	"month_interval"	32	0	0	0
3187	425	"arg_1"	"month_interval"	32	0	1	1
3188	425	"arg_2"	"int"	32	0	1	2
3189	426	"res_0"	"month_interval"	32	0	0	0
3190	426	"arg_1"	"month_interval"	32	0	1	1
3191	426	"arg_2"	"int"	32	0	1	2
3192	427	"res_0"	"sec_interval"	13	0	0	0
3193	427	"arg_1"	"sec_interval"	13	0	1	1
3194	427	"arg_2"	"sec_interval"	13	0	1	2
3195	428	"res_0"	"sec_interval"	13	0	0	0
3196	428	"arg_1"	"sec_interval"	13	0	1	1
3197	428	"arg_2"	"sec_interval"	13	0	1	2
3198	429	"res_0"	"sec_interval"	13	0	0	0
3199	429	"arg_1"	"sec_interval"	13	0	1	1
3200	429	"arg_2"	"sec_interval"	13	0	1	2
3201	430	"res_0"	"sec_interval"	13	0	0	0
3202	430	"arg_1"	"sec_interval"	13	0	1	1
3203	430	"arg_2"	"sec_interval"	13	0	1	2
3204	431	"res_0"	"sec_interval"	13	0	0	0
3205	431	"arg_1"	"sec_interval"	13	0	1	1
3206	432	"res_0"	"sec_interval"	13	0	0	0
3207	432	"arg_1"	"sec_interval"	13	0	1	1
3208	433	"res_0"	"tinyint"	8	0	0	0
3209	433	"arg_1"	"sec_interval"	13	0	1	1
3210	434	"res_0"	"sec_interval"	13	0	0	0
3211	434	"arg_1"	"sec_interval"	13	0	1	1
3212	434	"arg_2"	"bigint"	64	0	1	2
3213	435	"res_0"	"sec_interval"	13	0	0	0
3214	435	"arg_1"	"sec_interval"	13	0	1	1
3215	435	"arg_2"	"bigint"	64	0	1	2
3216	436	"res_0"	"decimal"	4	0	0	0
3217	436	"arg_1"	"decimal"	4	0	1	1
3218	436	"arg_2"	"tinyint"	8	0	1	2
3219	437	"res_0"	"decimal"	4	0	0	0
3220	437	"arg_1"	"tinyint"	8	0	1	1
3221	437	"arg_2"	"decimal"	4	0	1	2
3222	438	"res_0"	"decimal"	4	0	0	0
3223	438	"arg_1"	"decimal"	4	0	1	1
3224	438	"arg_2"	"decimal"	2	0	1	2
3225	439	"res_0"	"decimal"	4	0	0	0
3226	439	"arg_1"	"decimal"	2	0	1	1
3227	439	"arg_2"	"decimal"	4	0	1	2
3228	440	"res_0"	"decimal"	9	0	0	0
3229	440	"arg_1"	"decimal"	9	0	1	1
3230	440	"arg_2"	"tinyint"	8	0	1	2
3231	441	"res_0"	"decimal"	9	0	0	0
3232	441	"arg_1"	"tinyint"	8	0	1	1
3233	441	"arg_2"	"decimal"	9	0	1	2
3234	442	"res_0"	"decimal"	9	0	0	0
3235	442	"arg_1"	"decimal"	9	0	1	1
3236	442	"arg_2"	"smallint"	16	0	1	2
3237	443	"res_0"	"decimal"	9	0	0	0
3238	443	"arg_1"	"smallint"	16	0	1	1
3239	443	"arg_2"	"decimal"	9	0	1	2
3240	444	"res_0"	"decimal"	9	0	0	0
3241	444	"arg_1"	"decimal"	9	0	1	1
3242	444	"arg_2"	"decimal"	2	0	1	2
3243	445	"res_0"	"decimal"	9	0	0	0
3244	445	"arg_1"	"decimal"	2	0	1	1
3245	445	"arg_2"	"decimal"	9	0	1	2
3246	446	"res_0"	"decimal"	9	0	0	0
3247	446	"arg_1"	"decimal"	9	0	1	1
3248	446	"arg_2"	"decimal"	4	0	1	2
3249	447	"res_0"	"decimal"	9	0	0	0
3250	447	"arg_1"	"decimal"	4	0	1	1
3251	447	"arg_2"	"decimal"	9	0	1	2
3252	448	"res_0"	"decimal"	18	0	0	0
3253	448	"arg_1"	"decimal"	18	0	1	1
3254	448	"arg_2"	"tinyint"	8	0	1	2
3255	449	"res_0"	"decimal"	18	0	0	0
3256	449	"arg_1"	"tinyint"	8	0	1	1
3257	449	"arg_2"	"decimal"	18	0	1	2
3258	450	"res_0"	"decimal"	18	0	0	0
3259	450	"arg_1"	"decimal"	18	0	1	1
3260	450	"arg_2"	"smallint"	16	0	1	2
3261	451	"res_0"	"decimal"	18	0	0	0
3262	451	"arg_1"	"smallint"	16	0	1	1
3263	451	"arg_2"	"decimal"	18	0	1	2
3264	452	"res_0"	"decimal"	18	0	0	0
3265	452	"arg_1"	"decimal"	18	0	1	1
3266	452	"arg_2"	"int"	32	0	1	2
3267	453	"res_0"	"decimal"	18	0	0	0
3268	453	"arg_1"	"int"	32	0	1	1
3269	453	"arg_2"	"decimal"	18	0	1	2
3270	454	"res_0"	"decimal"	18	0	0	0
3271	454	"arg_1"	"decimal"	18	0	1	1
3272	454	"arg_2"	"wrd"	64	0	1	2
3273	455	"res_0"	"decimal"	18	0	0	0
3274	455	"arg_1"	"wrd"	64	0	1	1
3275	455	"arg_2"	"decimal"	18	0	1	2
3276	456	"res_0"	"decimal"	18	0	0	0
3277	456	"arg_1"	"decimal"	18	0	1	1
3278	456	"arg_2"	"decimal"	2	0	1	2
3279	457	"res_0"	"decimal"	18	0	0	0
3280	457	"arg_1"	"decimal"	2	0	1	1
3281	457	"arg_2"	"decimal"	18	0	1	2
3282	458	"res_0"	"decimal"	18	0	0	0
3283	458	"arg_1"	"decimal"	18	0	1	1
3284	458	"arg_2"	"decimal"	4	0	1	2
3285	459	"res_0"	"decimal"	18	0	0	0
3286	459	"arg_1"	"decimal"	4	0	1	1
3287	459	"arg_2"	"decimal"	18	0	1	2
3288	460	"res_0"	"decimal"	18	0	0	0
3289	460	"arg_1"	"decimal"	18	0	1	1
3290	460	"arg_2"	"decimal"	9	0	1	2
3291	461	"res_0"	"decimal"	18	0	0	0
3292	461	"arg_1"	"decimal"	9	0	1	1
3293	461	"arg_2"	"decimal"	18	0	1	2
3294	462	"res_0"	"decimal"	39	0	0	0
3295	462	"arg_1"	"decimal"	39	0	1	1
3296	462	"arg_2"	"tinyint"	8	0	1	2
3297	463	"res_0"	"decimal"	39	0	0	0
3298	463	"arg_1"	"tinyint"	8	0	1	1
3299	463	"arg_2"	"decimal"	39	0	1	2
3300	464	"res_0"	"decimal"	39	0	0	0
3301	464	"arg_1"	"decimal"	39	0	1	1
3302	464	"arg_2"	"smallint"	16	0	1	2
3303	465	"res_0"	"decimal"	39	0	0	0
3304	465	"arg_1"	"smallint"	16	0	1	1
3305	465	"arg_2"	"decimal"	39	0	1	2
3306	466	"res_0"	"decimal"	39	0	0	0
3307	466	"arg_1"	"decimal"	39	0	1	1
3308	466	"arg_2"	"int"	32	0	1	2
3309	467	"res_0"	"decimal"	39	0	0	0
3310	467	"arg_1"	"int"	32	0	1	1
3311	467	"arg_2"	"decimal"	39	0	1	2
3312	468	"res_0"	"decimal"	39	0	0	0
3313	468	"arg_1"	"decimal"	39	0	1	1
3314	468	"arg_2"	"bigint"	64	0	1	2
3315	469	"res_0"	"decimal"	39	0	0	0
3316	469	"arg_1"	"bigint"	64	0	1	1
3317	469	"arg_2"	"decimal"	39	0	1	2
3318	470	"res_0"	"decimal"	39	0	0	0
3319	470	"arg_1"	"decimal"	39	0	1	1
3320	470	"arg_2"	"wrd"	64	0	1	2
3321	471	"res_0"	"decimal"	39	0	0	0
3322	471	"arg_1"	"wrd"	64	0	1	1
3323	471	"arg_2"	"decimal"	39	0	1	2
3324	472	"res_0"	"decimal"	39	0	0	0
3325	472	"arg_1"	"decimal"	39	0	1	1
3326	472	"arg_2"	"decimal"	2	0	1	2
3327	473	"res_0"	"decimal"	39	0	0	0
3328	473	"arg_1"	"decimal"	2	0	1	1
3329	473	"arg_2"	"decimal"	39	0	1	2
3330	474	"res_0"	"decimal"	39	0	0	0
3331	474	"arg_1"	"decimal"	39	0	1	1
3332	474	"arg_2"	"decimal"	4	0	1	2
3333	475	"res_0"	"decimal"	39	0	0	0
3334	475	"arg_1"	"decimal"	4	0	1	1
3335	475	"arg_2"	"decimal"	39	0	1	2
3336	476	"res_0"	"decimal"	39	0	0	0
3337	476	"arg_1"	"decimal"	39	0	1	1
3338	476	"arg_2"	"decimal"	9	0	1	2
3339	477	"res_0"	"decimal"	39	0	0	0
3340	477	"arg_1"	"decimal"	9	0	1	1
3341	477	"arg_2"	"decimal"	39	0	1	2
3342	478	"res_0"	"decimal"	39	0	0	0
3343	478	"arg_1"	"decimal"	39	0	1	1
3344	478	"arg_2"	"decimal"	18	0	1	2
3345	479	"res_0"	"decimal"	39	0	0	0
3346	479	"arg_1"	"decimal"	18	0	1	1
3347	479	"arg_2"	"decimal"	39	0	1	2
3348	480	"res_0"	"decimal"	2	0	0	0
3349	480	"arg_1"	"decimal"	2	0	1	1
3350	480	"arg_2"	"tinyint"	8	0	1	2
3351	481	"res_0"	"decimal"	4	0	0	0
3352	481	"arg_1"	"decimal"	4	0	1	1
3353	481	"arg_2"	"tinyint"	8	0	1	2
3354	482	"res_0"	"decimal"	9	0	0	0
3355	482	"arg_1"	"decimal"	9	0	1	1
3356	482	"arg_2"	"tinyint"	8	0	1	2
3357	483	"res_0"	"decimal"	18	0	0	0
3358	483	"arg_1"	"decimal"	18	0	1	1
3359	483	"arg_2"	"tinyint"	8	0	1	2
3360	484	"res_0"	"decimal"	39	0	0	0
3361	484	"arg_1"	"decimal"	39	0	1	1
3362	484	"arg_2"	"tinyint"	8	0	1	2
3363	485	"res_0"	"real"	24	0	0	0
3364	485	"arg_1"	"real"	24	0	1	1
3365	485	"arg_2"	"tinyint"	8	0	1	2
3366	486	"res_0"	"double"	53	0	0	0
3367	486	"arg_1"	"double"	53	0	1	1
3368	486	"arg_2"	"tinyint"	8	0	1	2
3369	487	"res_0"	"oid"	63	0	0	0
3370	487	"arg_1"	"oid"	63	0	1	1
3371	487	"arg_2"	"oid"	63	0	1	2
3372	488	"res_0"	"oid"	63	0	0	0
3373	488	"arg_1"	"tinyint"	8	0	1	1
3374	488	"arg_2"	"oid"	63	0	1	2
3375	489	"res_0"	"oid"	63	0	0	0
3376	489	"arg_1"	"smallint"	16	0	1	1
3377	489	"arg_2"	"oid"	63	0	1	2
3378	490	"res_0"	"oid"	63	0	0	0
3379	490	"arg_1"	"int"	32	0	1	1
3380	490	"arg_2"	"oid"	63	0	1	2
3381	491	"res_0"	"oid"	63	0	0	0
3382	491	"arg_1"	"bigint"	64	0	1	1
3383	491	"arg_2"	"oid"	63	0	1	2
3384	492	"res_0"	"oid"	63	0	0	0
3385	492	"arg_1"	"wrd"	64	0	1	1
3386	492	"arg_2"	"oid"	63	0	1	2
3387	493	"res_0"	"oid"	63	0	0	0
3388	493	"arg_1"	"hugeint"	128	0	1	1
3389	493	"arg_2"	"oid"	63	0	1	2
3390	494	"res_0"	"oid"	63	0	0	0
3391	494	"arg_1"	"decimal"	2	0	1	1
3392	494	"arg_2"	"oid"	63	0	1	2
3393	495	"res_0"	"oid"	63	0	0	0
3394	495	"arg_1"	"decimal"	4	0	1	1
3395	495	"arg_2"	"oid"	63	0	1	2
3396	496	"res_0"	"oid"	63	0	0	0
3397	496	"arg_1"	"decimal"	9	0	1	1
3398	496	"arg_2"	"oid"	63	0	1	2
3399	497	"res_0"	"oid"	63	0	0	0
3400	497	"arg_1"	"decimal"	18	0	1	1
3401	497	"arg_2"	"oid"	63	0	1	2
3402	498	"res_0"	"oid"	63	0	0	0
3403	498	"arg_1"	"decimal"	39	0	1	1
3404	498	"arg_2"	"oid"	63	0	1	2
3405	499	"res_0"	"oid"	63	0	0	0
3406	499	"arg_1"	"real"	24	0	1	1
3407	499	"arg_2"	"oid"	63	0	1	2
3408	500	"res_0"	"oid"	63	0	0	0
3409	500	"arg_1"	"double"	53	0	1	1
3410	500	"arg_2"	"oid"	63	0	1	2
3411	501	"res_0"	"oid"	63	0	0	0
3412	501	"arg_1"	"month_interval"	32	0	1	1
3413	501	"arg_2"	"oid"	63	0	1	2
3414	502	"res_0"	"oid"	63	0	0	0
3415	502	"arg_1"	"sec_interval"	13	0	1	1
3416	502	"arg_2"	"oid"	63	0	1	2
3417	503	"res_0"	"oid"	63	0	0	0
3418	503	"arg_1"	"time"	7	0	1	1
3419	503	"arg_2"	"oid"	63	0	1	2
3420	504	"res_0"	"oid"	63	0	0	0
3421	504	"arg_1"	"timetz"	7	0	1	1
3422	504	"arg_2"	"oid"	63	0	1	2
3423	505	"res_0"	"oid"	63	0	0	0
3424	505	"arg_1"	"date"	0	0	1	1
3425	505	"arg_2"	"oid"	63	0	1	2
3426	506	"res_0"	"oid"	63	0	0	0
3427	506	"arg_1"	"timestamp"	7	0	1	1
3428	506	"arg_2"	"oid"	63	0	1	2
3429	507	"res_0"	"oid"	63	0	0	0
3430	507	"arg_1"	"timestamptz"	7	0	1	1
3431	507	"arg_2"	"oid"	63	0	1	2
3432	508	"res_0"	"oid"	63	0	0	0
3433	508	"arg_1"	"blob"	0	0	1	1
3434	508	"arg_2"	"oid"	63	0	1	2
3435	509	"res_0"	"tinyint"	8	0	0	0
3436	509	"arg_1"	"oid"	63	0	1	1
3437	509	"arg_2"	"tinyint"	8	0	1	2
3438	510	"res_0"	"tinyint"	8	0	0	0
3439	510	"arg_1"	"tinyint"	8	0	1	1
3440	510	"arg_2"	"tinyint"	8	0	1	2
3441	511	"res_0"	"tinyint"	8	0	0	0
3442	511	"arg_1"	"smallint"	16	0	1	1
3443	511	"arg_2"	"tinyint"	8	0	1	2
3444	512	"res_0"	"tinyint"	8	0	0	0
3445	512	"arg_1"	"int"	32	0	1	1
3446	512	"arg_2"	"tinyint"	8	0	1	2
3447	513	"res_0"	"tinyint"	8	0	0	0
3448	513	"arg_1"	"bigint"	64	0	1	1
3449	513	"arg_2"	"tinyint"	8	0	1	2
3450	514	"res_0"	"tinyint"	8	0	0	0
3451	514	"arg_1"	"wrd"	64	0	1	1
3452	514	"arg_2"	"tinyint"	8	0	1	2
3453	515	"res_0"	"tinyint"	8	0	0	0
3454	515	"arg_1"	"hugeint"	128	0	1	1
3455	515	"arg_2"	"tinyint"	8	0	1	2
3456	516	"res_0"	"tinyint"	8	0	0	0
3457	516	"arg_1"	"decimal"	2	0	1	1
3458	516	"arg_2"	"tinyint"	8	0	1	2
3459	517	"res_0"	"tinyint"	8	0	0	0
3460	517	"arg_1"	"decimal"	4	0	1	1
3461	517	"arg_2"	"tinyint"	8	0	1	2
3462	518	"res_0"	"tinyint"	8	0	0	0
3463	518	"arg_1"	"decimal"	9	0	1	1
3464	518	"arg_2"	"tinyint"	8	0	1	2
3465	519	"res_0"	"tinyint"	8	0	0	0
3466	519	"arg_1"	"decimal"	18	0	1	1
3467	519	"arg_2"	"tinyint"	8	0	1	2
3468	520	"res_0"	"tinyint"	8	0	0	0
3469	520	"arg_1"	"decimal"	39	0	1	1
3470	520	"arg_2"	"tinyint"	8	0	1	2
3471	521	"res_0"	"tinyint"	8	0	0	0
3472	521	"arg_1"	"real"	24	0	1	1
3473	521	"arg_2"	"tinyint"	8	0	1	2
3474	522	"res_0"	"tinyint"	8	0	0	0
3475	522	"arg_1"	"double"	53	0	1	1
3476	522	"arg_2"	"tinyint"	8	0	1	2
3477	523	"res_0"	"tinyint"	8	0	0	0
3478	523	"arg_1"	"month_interval"	32	0	1	1
3479	523	"arg_2"	"tinyint"	8	0	1	2
3480	524	"res_0"	"tinyint"	8	0	0	0
3481	524	"arg_1"	"sec_interval"	13	0	1	1
3482	524	"arg_2"	"tinyint"	8	0	1	2
3483	525	"res_0"	"tinyint"	8	0	0	0
3484	525	"arg_1"	"time"	7	0	1	1
3485	525	"arg_2"	"tinyint"	8	0	1	2
3486	526	"res_0"	"tinyint"	8	0	0	0
3487	526	"arg_1"	"timetz"	7	0	1	1
3488	526	"arg_2"	"tinyint"	8	0	1	2
3489	527	"res_0"	"tinyint"	8	0	0	0
3490	527	"arg_1"	"date"	0	0	1	1
3491	527	"arg_2"	"tinyint"	8	0	1	2
3492	528	"res_0"	"tinyint"	8	0	0	0
3493	528	"arg_1"	"timestamp"	7	0	1	1
3494	528	"arg_2"	"tinyint"	8	0	1	2
3495	529	"res_0"	"tinyint"	8	0	0	0
3496	529	"arg_1"	"timestamptz"	7	0	1	1
3497	529	"arg_2"	"tinyint"	8	0	1	2
3498	530	"res_0"	"tinyint"	8	0	0	0
3499	530	"arg_1"	"blob"	0	0	1	1
3500	530	"arg_2"	"tinyint"	8	0	1	2
3501	531	"res_0"	"smallint"	16	0	0	0
3502	531	"arg_1"	"oid"	63	0	1	1
3503	531	"arg_2"	"smallint"	16	0	1	2
3504	532	"res_0"	"smallint"	16	0	0	0
3505	532	"arg_1"	"tinyint"	8	0	1	1
3506	532	"arg_2"	"smallint"	16	0	1	2
3507	533	"res_0"	"smallint"	16	0	0	0
3508	533	"arg_1"	"smallint"	16	0	1	1
3509	533	"arg_2"	"smallint"	16	0	1	2
3510	534	"res_0"	"smallint"	16	0	0	0
3511	534	"arg_1"	"int"	32	0	1	1
3512	534	"arg_2"	"smallint"	16	0	1	2
3513	535	"res_0"	"smallint"	16	0	0	0
3514	535	"arg_1"	"bigint"	64	0	1	1
3515	535	"arg_2"	"smallint"	16	0	1	2
3516	536	"res_0"	"smallint"	16	0	0	0
3517	536	"arg_1"	"wrd"	64	0	1	1
3518	536	"arg_2"	"smallint"	16	0	1	2
3519	537	"res_0"	"smallint"	16	0	0	0
3520	537	"arg_1"	"hugeint"	128	0	1	1
3521	537	"arg_2"	"smallint"	16	0	1	2
3522	538	"res_0"	"smallint"	16	0	0	0
3523	538	"arg_1"	"decimal"	2	0	1	1
3524	538	"arg_2"	"smallint"	16	0	1	2
3525	539	"res_0"	"smallint"	16	0	0	0
3526	539	"arg_1"	"decimal"	4	0	1	1
3527	539	"arg_2"	"smallint"	16	0	1	2
3528	540	"res_0"	"smallint"	16	0	0	0
3529	540	"arg_1"	"decimal"	9	0	1	1
3530	540	"arg_2"	"smallint"	16	0	1	2
3531	541	"res_0"	"smallint"	16	0	0	0
3532	541	"arg_1"	"decimal"	18	0	1	1
3533	541	"arg_2"	"smallint"	16	0	1	2
3534	542	"res_0"	"smallint"	16	0	0	0
3535	542	"arg_1"	"decimal"	39	0	1	1
3536	542	"arg_2"	"smallint"	16	0	1	2
3537	543	"res_0"	"smallint"	16	0	0	0
3538	543	"arg_1"	"real"	24	0	1	1
3539	543	"arg_2"	"smallint"	16	0	1	2
3540	544	"res_0"	"smallint"	16	0	0	0
3541	544	"arg_1"	"double"	53	0	1	1
3542	544	"arg_2"	"smallint"	16	0	1	2
3543	545	"res_0"	"smallint"	16	0	0	0
3544	545	"arg_1"	"month_interval"	32	0	1	1
3545	545	"arg_2"	"smallint"	16	0	1	2
3546	546	"res_0"	"smallint"	16	0	0	0
3547	546	"arg_1"	"sec_interval"	13	0	1	1
3548	546	"arg_2"	"smallint"	16	0	1	2
3549	547	"res_0"	"smallint"	16	0	0	0
3550	547	"arg_1"	"time"	7	0	1	1
3551	547	"arg_2"	"smallint"	16	0	1	2
3552	548	"res_0"	"smallint"	16	0	0	0
3553	548	"arg_1"	"timetz"	7	0	1	1
3554	548	"arg_2"	"smallint"	16	0	1	2
3555	549	"res_0"	"smallint"	16	0	0	0
3556	549	"arg_1"	"date"	0	0	1	1
3557	549	"arg_2"	"smallint"	16	0	1	2
3558	550	"res_0"	"smallint"	16	0	0	0
3559	550	"arg_1"	"timestamp"	7	0	1	1
3560	550	"arg_2"	"smallint"	16	0	1	2
3561	551	"res_0"	"smallint"	16	0	0	0
3562	551	"arg_1"	"timestamptz"	7	0	1	1
3563	551	"arg_2"	"smallint"	16	0	1	2
3564	552	"res_0"	"smallint"	16	0	0	0
3565	552	"arg_1"	"blob"	0	0	1	1
3566	552	"arg_2"	"smallint"	16	0	1	2
3567	553	"res_0"	"int"	32	0	0	0
3568	553	"arg_1"	"oid"	63	0	1	1
3569	553	"arg_2"	"int"	32	0	1	2
3570	554	"res_0"	"int"	32	0	0	0
3571	554	"arg_1"	"tinyint"	8	0	1	1
3572	554	"arg_2"	"int"	32	0	1	2
3573	555	"res_0"	"int"	32	0	0	0
3574	555	"arg_1"	"smallint"	16	0	1	1
3575	555	"arg_2"	"int"	32	0	1	2
3576	556	"res_0"	"int"	32	0	0	0
3577	556	"arg_1"	"int"	32	0	1	1
3578	556	"arg_2"	"int"	32	0	1	2
3579	557	"res_0"	"int"	32	0	0	0
3580	557	"arg_1"	"bigint"	64	0	1	1
3581	557	"arg_2"	"int"	32	0	1	2
3582	558	"res_0"	"int"	32	0	0	0
3583	558	"arg_1"	"wrd"	64	0	1	1
3584	558	"arg_2"	"int"	32	0	1	2
3585	559	"res_0"	"int"	32	0	0	0
3586	559	"arg_1"	"hugeint"	128	0	1	1
3587	559	"arg_2"	"int"	32	0	1	2
3588	560	"res_0"	"int"	32	0	0	0
3589	560	"arg_1"	"decimal"	2	0	1	1
3590	560	"arg_2"	"int"	32	0	1	2
3591	561	"res_0"	"int"	32	0	0	0
3592	561	"arg_1"	"decimal"	4	0	1	1
3593	561	"arg_2"	"int"	32	0	1	2
3594	562	"res_0"	"int"	32	0	0	0
3595	562	"arg_1"	"decimal"	9	0	1	1
3596	562	"arg_2"	"int"	32	0	1	2
3597	563	"res_0"	"int"	32	0	0	0
3598	563	"arg_1"	"decimal"	18	0	1	1
3599	563	"arg_2"	"int"	32	0	1	2
3600	564	"res_0"	"int"	32	0	0	0
3601	564	"arg_1"	"decimal"	39	0	1	1
3602	564	"arg_2"	"int"	32	0	1	2
3603	565	"res_0"	"int"	32	0	0	0
3604	565	"arg_1"	"real"	24	0	1	1
3605	565	"arg_2"	"int"	32	0	1	2
3606	566	"res_0"	"int"	32	0	0	0
3607	566	"arg_1"	"double"	53	0	1	1
3608	566	"arg_2"	"int"	32	0	1	2
3609	567	"res_0"	"int"	32	0	0	0
3610	567	"arg_1"	"month_interval"	32	0	1	1
3611	567	"arg_2"	"int"	32	0	1	2
3612	568	"res_0"	"int"	32	0	0	0
3613	568	"arg_1"	"sec_interval"	13	0	1	1
3614	568	"arg_2"	"int"	32	0	1	2
3615	569	"res_0"	"int"	32	0	0	0
3616	569	"arg_1"	"time"	7	0	1	1
3617	569	"arg_2"	"int"	32	0	1	2
3618	570	"res_0"	"int"	32	0	0	0
3619	570	"arg_1"	"timetz"	7	0	1	1
3620	570	"arg_2"	"int"	32	0	1	2
3621	571	"res_0"	"int"	32	0	0	0
3622	571	"arg_1"	"date"	0	0	1	1
3623	571	"arg_2"	"int"	32	0	1	2
3624	572	"res_0"	"int"	32	0	0	0
3625	572	"arg_1"	"timestamp"	7	0	1	1
3626	572	"arg_2"	"int"	32	0	1	2
3627	573	"res_0"	"int"	32	0	0	0
3628	573	"arg_1"	"timestamptz"	7	0	1	1
3629	573	"arg_2"	"int"	32	0	1	2
3630	574	"res_0"	"int"	32	0	0	0
3631	574	"arg_1"	"blob"	0	0	1	1
3632	574	"arg_2"	"int"	32	0	1	2
3633	575	"res_0"	"bigint"	64	0	0	0
3634	575	"arg_1"	"oid"	63	0	1	1
3635	575	"arg_2"	"bigint"	64	0	1	2
3636	576	"res_0"	"bigint"	64	0	0	0
3637	576	"arg_1"	"tinyint"	8	0	1	1
3638	576	"arg_2"	"bigint"	64	0	1	2
3639	577	"res_0"	"bigint"	64	0	0	0
3640	577	"arg_1"	"smallint"	16	0	1	1
3641	577	"arg_2"	"bigint"	64	0	1	2
3642	578	"res_0"	"bigint"	64	0	0	0
3643	578	"arg_1"	"int"	32	0	1	1
3644	578	"arg_2"	"bigint"	64	0	1	2
3645	579	"res_0"	"bigint"	64	0	0	0
3646	579	"arg_1"	"bigint"	64	0	1	1
3647	579	"arg_2"	"bigint"	64	0	1	2
3648	580	"res_0"	"bigint"	64	0	0	0
3649	580	"arg_1"	"wrd"	64	0	1	1
3650	580	"arg_2"	"bigint"	64	0	1	2
3651	581	"res_0"	"bigint"	64	0	0	0
3652	581	"arg_1"	"hugeint"	128	0	1	1
3653	581	"arg_2"	"bigint"	64	0	1	2
3654	582	"res_0"	"bigint"	64	0	0	0
3655	582	"arg_1"	"decimal"	2	0	1	1
3656	582	"arg_2"	"bigint"	64	0	1	2
3657	583	"res_0"	"bigint"	64	0	0	0
3658	583	"arg_1"	"decimal"	4	0	1	1
3659	583	"arg_2"	"bigint"	64	0	1	2
3660	584	"res_0"	"bigint"	64	0	0	0
3661	584	"arg_1"	"decimal"	9	0	1	1
3662	584	"arg_2"	"bigint"	64	0	1	2
3663	585	"res_0"	"bigint"	64	0	0	0
3664	585	"arg_1"	"decimal"	18	0	1	1
3665	585	"arg_2"	"bigint"	64	0	1	2
3666	586	"res_0"	"bigint"	64	0	0	0
3667	586	"arg_1"	"decimal"	39	0	1	1
3668	586	"arg_2"	"bigint"	64	0	1	2
3669	587	"res_0"	"bigint"	64	0	0	0
3670	587	"arg_1"	"real"	24	0	1	1
3671	587	"arg_2"	"bigint"	64	0	1	2
3672	588	"res_0"	"bigint"	64	0	0	0
3673	588	"arg_1"	"double"	53	0	1	1
3674	588	"arg_2"	"bigint"	64	0	1	2
3675	589	"res_0"	"bigint"	64	0	0	0
3676	589	"arg_1"	"month_interval"	32	0	1	1
3677	589	"arg_2"	"bigint"	64	0	1	2
3678	590	"res_0"	"bigint"	64	0	0	0
3679	590	"arg_1"	"sec_interval"	13	0	1	1
3680	590	"arg_2"	"bigint"	64	0	1	2
3681	591	"res_0"	"bigint"	64	0	0	0
3682	591	"arg_1"	"time"	7	0	1	1
3683	591	"arg_2"	"bigint"	64	0	1	2
3684	592	"res_0"	"bigint"	64	0	0	0
3685	592	"arg_1"	"timetz"	7	0	1	1
3686	592	"arg_2"	"bigint"	64	0	1	2
3687	593	"res_0"	"bigint"	64	0	0	0
3688	593	"arg_1"	"date"	0	0	1	1
3689	593	"arg_2"	"bigint"	64	0	1	2
3690	594	"res_0"	"bigint"	64	0	0	0
3691	594	"arg_1"	"timestamp"	7	0	1	1
3692	594	"arg_2"	"bigint"	64	0	1	2
3693	595	"res_0"	"bigint"	64	0	0	0
3694	595	"arg_1"	"timestamptz"	7	0	1	1
3695	595	"arg_2"	"bigint"	64	0	1	2
3696	596	"res_0"	"bigint"	64	0	0	0
3697	596	"arg_1"	"blob"	0	0	1	1
3698	596	"arg_2"	"bigint"	64	0	1	2
3699	597	"res_0"	"wrd"	64	0	0	0
3700	597	"arg_1"	"oid"	63	0	1	1
3701	597	"arg_2"	"wrd"	64	0	1	2
3702	598	"res_0"	"wrd"	64	0	0	0
3703	598	"arg_1"	"tinyint"	8	0	1	1
3704	598	"arg_2"	"wrd"	64	0	1	2
3705	599	"res_0"	"wrd"	64	0	0	0
3706	599	"arg_1"	"smallint"	16	0	1	1
3707	599	"arg_2"	"wrd"	64	0	1	2
3708	600	"res_0"	"wrd"	64	0	0	0
3709	600	"arg_1"	"int"	32	0	1	1
3710	600	"arg_2"	"wrd"	64	0	1	2
3711	601	"res_0"	"wrd"	64	0	0	0
3712	601	"arg_1"	"bigint"	64	0	1	1
3713	601	"arg_2"	"wrd"	64	0	1	2
3714	602	"res_0"	"wrd"	64	0	0	0
3715	602	"arg_1"	"wrd"	64	0	1	1
3716	602	"arg_2"	"wrd"	64	0	1	2
3717	603	"res_0"	"wrd"	64	0	0	0
3718	603	"arg_1"	"hugeint"	128	0	1	1
3719	603	"arg_2"	"wrd"	64	0	1	2
3720	604	"res_0"	"wrd"	64	0	0	0
3721	604	"arg_1"	"decimal"	2	0	1	1
3722	604	"arg_2"	"wrd"	64	0	1	2
3723	605	"res_0"	"wrd"	64	0	0	0
3724	605	"arg_1"	"decimal"	4	0	1	1
3725	605	"arg_2"	"wrd"	64	0	1	2
3726	606	"res_0"	"wrd"	64	0	0	0
3727	606	"arg_1"	"decimal"	9	0	1	1
3728	606	"arg_2"	"wrd"	64	0	1	2
3729	607	"res_0"	"wrd"	64	0	0	0
3730	607	"arg_1"	"decimal"	18	0	1	1
3731	607	"arg_2"	"wrd"	64	0	1	2
3732	608	"res_0"	"wrd"	64	0	0	0
3733	608	"arg_1"	"decimal"	39	0	1	1
3734	608	"arg_2"	"wrd"	64	0	1	2
3735	609	"res_0"	"wrd"	64	0	0	0
3736	609	"arg_1"	"real"	24	0	1	1
3737	609	"arg_2"	"wrd"	64	0	1	2
3738	610	"res_0"	"wrd"	64	0	0	0
3739	610	"arg_1"	"double"	53	0	1	1
3740	610	"arg_2"	"wrd"	64	0	1	2
3741	611	"res_0"	"wrd"	64	0	0	0
3742	611	"arg_1"	"month_interval"	32	0	1	1
3743	611	"arg_2"	"wrd"	64	0	1	2
3744	612	"res_0"	"wrd"	64	0	0	0
3745	612	"arg_1"	"sec_interval"	13	0	1	1
3746	612	"arg_2"	"wrd"	64	0	1	2
3747	613	"res_0"	"wrd"	64	0	0	0
3748	613	"arg_1"	"time"	7	0	1	1
3749	613	"arg_2"	"wrd"	64	0	1	2
3750	614	"res_0"	"wrd"	64	0	0	0
3751	614	"arg_1"	"timetz"	7	0	1	1
3752	614	"arg_2"	"wrd"	64	0	1	2
3753	615	"res_0"	"wrd"	64	0	0	0
3754	615	"arg_1"	"date"	0	0	1	1
3755	615	"arg_2"	"wrd"	64	0	1	2
3756	616	"res_0"	"wrd"	64	0	0	0
3757	616	"arg_1"	"timestamp"	7	0	1	1
3758	616	"arg_2"	"wrd"	64	0	1	2
3759	617	"res_0"	"wrd"	64	0	0	0
3760	617	"arg_1"	"timestamptz"	7	0	1	1
3761	617	"arg_2"	"wrd"	64	0	1	2
3762	618	"res_0"	"wrd"	64	0	0	0
3763	618	"arg_1"	"blob"	0	0	1	1
3764	618	"arg_2"	"wrd"	64	0	1	2
3765	619	"res_0"	"hugeint"	128	0	0	0
3766	619	"arg_1"	"oid"	63	0	1	1
3767	619	"arg_2"	"hugeint"	128	0	1	2
3768	620	"res_0"	"hugeint"	128	0	0	0
3769	620	"arg_1"	"tinyint"	8	0	1	1
3770	620	"arg_2"	"hugeint"	128	0	1	2
3771	621	"res_0"	"hugeint"	128	0	0	0
3772	621	"arg_1"	"smallint"	16	0	1	1
3773	621	"arg_2"	"hugeint"	128	0	1	2
3774	622	"res_0"	"hugeint"	128	0	0	0
3775	622	"arg_1"	"int"	32	0	1	1
3776	622	"arg_2"	"hugeint"	128	0	1	2
3777	623	"res_0"	"hugeint"	128	0	0	0
3778	623	"arg_1"	"bigint"	64	0	1	1
3779	623	"arg_2"	"hugeint"	128	0	1	2
3780	624	"res_0"	"hugeint"	128	0	0	0
3781	624	"arg_1"	"wrd"	64	0	1	1
3782	624	"arg_2"	"hugeint"	128	0	1	2
3783	625	"res_0"	"hugeint"	128	0	0	0
3784	625	"arg_1"	"hugeint"	128	0	1	1
3785	625	"arg_2"	"hugeint"	128	0	1	2
3786	626	"res_0"	"hugeint"	128	0	0	0
3787	626	"arg_1"	"decimal"	2	0	1	1
3788	626	"arg_2"	"hugeint"	128	0	1	2
3789	627	"res_0"	"hugeint"	128	0	0	0
3790	627	"arg_1"	"decimal"	4	0	1	1
3791	627	"arg_2"	"hugeint"	128	0	1	2
3792	628	"res_0"	"hugeint"	128	0	0	0
3793	628	"arg_1"	"decimal"	9	0	1	1
3794	628	"arg_2"	"hugeint"	128	0	1	2
3795	629	"res_0"	"hugeint"	128	0	0	0
3796	629	"arg_1"	"decimal"	18	0	1	1
3797	629	"arg_2"	"hugeint"	128	0	1	2
3798	630	"res_0"	"hugeint"	128	0	0	0
3799	630	"arg_1"	"decimal"	39	0	1	1
3800	630	"arg_2"	"hugeint"	128	0	1	2
3801	631	"res_0"	"hugeint"	128	0	0	0
3802	631	"arg_1"	"real"	24	0	1	1
3803	631	"arg_2"	"hugeint"	128	0	1	2
3804	632	"res_0"	"hugeint"	128	0	0	0
3805	632	"arg_1"	"double"	53	0	1	1
3806	632	"arg_2"	"hugeint"	128	0	1	2
3807	633	"res_0"	"hugeint"	128	0	0	0
3808	633	"arg_1"	"month_interval"	32	0	1	1
3809	633	"arg_2"	"hugeint"	128	0	1	2
3810	634	"res_0"	"hugeint"	128	0	0	0
3811	634	"arg_1"	"sec_interval"	13	0	1	1
3812	634	"arg_2"	"hugeint"	128	0	1	2
3813	635	"res_0"	"hugeint"	128	0	0	0
3814	635	"arg_1"	"time"	7	0	1	1
3815	635	"arg_2"	"hugeint"	128	0	1	2
3816	636	"res_0"	"hugeint"	128	0	0	0
3817	636	"arg_1"	"timetz"	7	0	1	1
3818	636	"arg_2"	"hugeint"	128	0	1	2
3819	637	"res_0"	"hugeint"	128	0	0	0
3820	637	"arg_1"	"date"	0	0	1	1
3821	637	"arg_2"	"hugeint"	128	0	1	2
3822	638	"res_0"	"hugeint"	128	0	0	0
3823	638	"arg_1"	"timestamp"	7	0	1	1
3824	638	"arg_2"	"hugeint"	128	0	1	2
3825	639	"res_0"	"hugeint"	128	0	0	0
3826	639	"arg_1"	"timestamptz"	7	0	1	1
3827	639	"arg_2"	"hugeint"	128	0	1	2
3828	640	"res_0"	"hugeint"	128	0	0	0
3829	640	"arg_1"	"blob"	0	0	1	1
3830	640	"arg_2"	"hugeint"	128	0	1	2
3831	641	"res_0"	"decimal"	2	0	0	0
3832	641	"arg_1"	"oid"	63	0	1	1
3833	641	"arg_2"	"decimal"	2	0	1	2
3834	642	"res_0"	"decimal"	2	0	0	0
3835	642	"arg_1"	"tinyint"	8	0	1	1
3836	642	"arg_2"	"decimal"	2	0	1	2
3837	643	"res_0"	"decimal"	2	0	0	0
3838	643	"arg_1"	"smallint"	16	0	1	1
3839	643	"arg_2"	"decimal"	2	0	1	2
3840	644	"res_0"	"decimal"	2	0	0	0
3841	644	"arg_1"	"int"	32	0	1	1
3842	644	"arg_2"	"decimal"	2	0	1	2
3843	645	"res_0"	"decimal"	2	0	0	0
3844	645	"arg_1"	"bigint"	64	0	1	1
3845	645	"arg_2"	"decimal"	2	0	1	2
3846	646	"res_0"	"decimal"	2	0	0	0
3847	646	"arg_1"	"wrd"	64	0	1	1
3848	646	"arg_2"	"decimal"	2	0	1	2
3849	647	"res_0"	"decimal"	2	0	0	0
3850	647	"arg_1"	"hugeint"	128	0	1	1
3851	647	"arg_2"	"decimal"	2	0	1	2
3852	648	"res_0"	"decimal"	2	0	0	0
3853	648	"arg_1"	"decimal"	2	0	1	1
3854	648	"arg_2"	"decimal"	2	0	1	2
3855	649	"res_0"	"decimal"	2	0	0	0
3856	649	"arg_1"	"decimal"	4	0	1	1
3857	649	"arg_2"	"decimal"	2	0	1	2
3858	650	"res_0"	"decimal"	2	0	0	0
3859	650	"arg_1"	"decimal"	9	0	1	1
3860	650	"arg_2"	"decimal"	2	0	1	2
3861	651	"res_0"	"decimal"	2	0	0	0
3862	651	"arg_1"	"decimal"	18	0	1	1
3863	651	"arg_2"	"decimal"	2	0	1	2
3864	652	"res_0"	"decimal"	2	0	0	0
3865	652	"arg_1"	"decimal"	39	0	1	1
3866	652	"arg_2"	"decimal"	2	0	1	2
3867	653	"res_0"	"decimal"	2	0	0	0
3868	653	"arg_1"	"real"	24	0	1	1
3869	653	"arg_2"	"decimal"	2	0	1	2
3870	654	"res_0"	"decimal"	2	0	0	0
3871	654	"arg_1"	"double"	53	0	1	1
3872	654	"arg_2"	"decimal"	2	0	1	2
3873	655	"res_0"	"decimal"	2	0	0	0
3874	655	"arg_1"	"month_interval"	32	0	1	1
3875	655	"arg_2"	"decimal"	2	0	1	2
3876	656	"res_0"	"decimal"	2	0	0	0
3877	656	"arg_1"	"sec_interval"	13	0	1	1
3878	656	"arg_2"	"decimal"	2	0	1	2
3879	657	"res_0"	"decimal"	2	0	0	0
3880	657	"arg_1"	"time"	7	0	1	1
3881	657	"arg_2"	"decimal"	2	0	1	2
3882	658	"res_0"	"decimal"	2	0	0	0
3883	658	"arg_1"	"timetz"	7	0	1	1
3884	658	"arg_2"	"decimal"	2	0	1	2
3885	659	"res_0"	"decimal"	2	0	0	0
3886	659	"arg_1"	"date"	0	0	1	1
3887	659	"arg_2"	"decimal"	2	0	1	2
3888	660	"res_0"	"decimal"	2	0	0	0
3889	660	"arg_1"	"timestamp"	7	0	1	1
3890	660	"arg_2"	"decimal"	2	0	1	2
3891	661	"res_0"	"decimal"	2	0	0	0
3892	661	"arg_1"	"timestamptz"	7	0	1	1
3893	661	"arg_2"	"decimal"	2	0	1	2
3894	662	"res_0"	"decimal"	2	0	0	0
3895	662	"arg_1"	"blob"	0	0	1	1
3896	662	"arg_2"	"decimal"	2	0	1	2
3897	663	"res_0"	"decimal"	4	0	0	0
3898	663	"arg_1"	"oid"	63	0	1	1
3899	663	"arg_2"	"decimal"	4	0	1	2
3900	664	"res_0"	"decimal"	4	0	0	0
3901	664	"arg_1"	"tinyint"	8	0	1	1
3902	664	"arg_2"	"decimal"	4	0	1	2
3903	665	"res_0"	"decimal"	4	0	0	0
3904	665	"arg_1"	"smallint"	16	0	1	1
3905	665	"arg_2"	"decimal"	4	0	1	2
3906	666	"res_0"	"decimal"	4	0	0	0
3907	666	"arg_1"	"int"	32	0	1	1
3908	666	"arg_2"	"decimal"	4	0	1	2
3909	667	"res_0"	"decimal"	4	0	0	0
3910	667	"arg_1"	"bigint"	64	0	1	1
3911	667	"arg_2"	"decimal"	4	0	1	2
3912	668	"res_0"	"decimal"	4	0	0	0
3913	668	"arg_1"	"wrd"	64	0	1	1
3914	668	"arg_2"	"decimal"	4	0	1	2
3915	669	"res_0"	"decimal"	4	0	0	0
3916	669	"arg_1"	"hugeint"	128	0	1	1
3917	669	"arg_2"	"decimal"	4	0	1	2
3918	670	"res_0"	"decimal"	4	0	0	0
3919	670	"arg_1"	"decimal"	2	0	1	1
3920	670	"arg_2"	"decimal"	4	0	1	2
3921	671	"res_0"	"decimal"	4	0	0	0
3922	671	"arg_1"	"decimal"	4	0	1	1
3923	671	"arg_2"	"decimal"	4	0	1	2
3924	672	"res_0"	"decimal"	4	0	0	0
3925	672	"arg_1"	"decimal"	9	0	1	1
3926	672	"arg_2"	"decimal"	4	0	1	2
3927	673	"res_0"	"decimal"	4	0	0	0
3928	673	"arg_1"	"decimal"	18	0	1	1
3929	673	"arg_2"	"decimal"	4	0	1	2
3930	674	"res_0"	"decimal"	4	0	0	0
3931	674	"arg_1"	"decimal"	39	0	1	1
3932	674	"arg_2"	"decimal"	4	0	1	2
3933	675	"res_0"	"decimal"	4	0	0	0
3934	675	"arg_1"	"real"	24	0	1	1
3935	675	"arg_2"	"decimal"	4	0	1	2
3936	676	"res_0"	"decimal"	4	0	0	0
3937	676	"arg_1"	"double"	53	0	1	1
3938	676	"arg_2"	"decimal"	4	0	1	2
3939	677	"res_0"	"decimal"	4	0	0	0
3940	677	"arg_1"	"month_interval"	32	0	1	1
3941	677	"arg_2"	"decimal"	4	0	1	2
3942	678	"res_0"	"decimal"	4	0	0	0
3943	678	"arg_1"	"sec_interval"	13	0	1	1
3944	678	"arg_2"	"decimal"	4	0	1	2
3945	679	"res_0"	"decimal"	4	0	0	0
3946	679	"arg_1"	"time"	7	0	1	1
3947	679	"arg_2"	"decimal"	4	0	1	2
3948	680	"res_0"	"decimal"	4	0	0	0
3949	680	"arg_1"	"timetz"	7	0	1	1
3950	680	"arg_2"	"decimal"	4	0	1	2
3951	681	"res_0"	"decimal"	4	0	0	0
3952	681	"arg_1"	"date"	0	0	1	1
3953	681	"arg_2"	"decimal"	4	0	1	2
3954	682	"res_0"	"decimal"	4	0	0	0
3955	682	"arg_1"	"timestamp"	7	0	1	1
3956	682	"arg_2"	"decimal"	4	0	1	2
3957	683	"res_0"	"decimal"	4	0	0	0
3958	683	"arg_1"	"timestamptz"	7	0	1	1
3959	683	"arg_2"	"decimal"	4	0	1	2
3960	684	"res_0"	"decimal"	4	0	0	0
3961	684	"arg_1"	"blob"	0	0	1	1
3962	684	"arg_2"	"decimal"	4	0	1	2
3963	685	"res_0"	"decimal"	9	0	0	0
3964	685	"arg_1"	"oid"	63	0	1	1
3965	685	"arg_2"	"decimal"	9	0	1	2
3966	686	"res_0"	"decimal"	9	0	0	0
3967	686	"arg_1"	"tinyint"	8	0	1	1
3968	686	"arg_2"	"decimal"	9	0	1	2
3969	687	"res_0"	"decimal"	9	0	0	0
3970	687	"arg_1"	"smallint"	16	0	1	1
3971	687	"arg_2"	"decimal"	9	0	1	2
3972	688	"res_0"	"decimal"	9	0	0	0
3973	688	"arg_1"	"int"	32	0	1	1
3974	688	"arg_2"	"decimal"	9	0	1	2
3975	689	"res_0"	"decimal"	9	0	0	0
3976	689	"arg_1"	"bigint"	64	0	1	1
3977	689	"arg_2"	"decimal"	9	0	1	2
3978	690	"res_0"	"decimal"	9	0	0	0
3979	690	"arg_1"	"wrd"	64	0	1	1
3980	690	"arg_2"	"decimal"	9	0	1	2
3981	691	"res_0"	"decimal"	9	0	0	0
3982	691	"arg_1"	"hugeint"	128	0	1	1
3983	691	"arg_2"	"decimal"	9	0	1	2
3984	692	"res_0"	"decimal"	9	0	0	0
3985	692	"arg_1"	"decimal"	2	0	1	1
3986	692	"arg_2"	"decimal"	9	0	1	2
3987	693	"res_0"	"decimal"	9	0	0	0
3988	693	"arg_1"	"decimal"	4	0	1	1
3989	693	"arg_2"	"decimal"	9	0	1	2
3990	694	"res_0"	"decimal"	9	0	0	0
3991	694	"arg_1"	"decimal"	9	0	1	1
3992	694	"arg_2"	"decimal"	9	0	1	2
3993	695	"res_0"	"decimal"	9	0	0	0
3994	695	"arg_1"	"decimal"	18	0	1	1
3995	695	"arg_2"	"decimal"	9	0	1	2
3996	696	"res_0"	"decimal"	9	0	0	0
3997	696	"arg_1"	"decimal"	39	0	1	1
3998	696	"arg_2"	"decimal"	9	0	1	2
3999	697	"res_0"	"decimal"	9	0	0	0
4000	697	"arg_1"	"real"	24	0	1	1
4001	697	"arg_2"	"decimal"	9	0	1	2
4002	698	"res_0"	"decimal"	9	0	0	0
4003	698	"arg_1"	"double"	53	0	1	1
4004	698	"arg_2"	"decimal"	9	0	1	2
4005	699	"res_0"	"decimal"	9	0	0	0
4006	699	"arg_1"	"month_interval"	32	0	1	1
4007	699	"arg_2"	"decimal"	9	0	1	2
4008	700	"res_0"	"decimal"	9	0	0	0
4009	700	"arg_1"	"sec_interval"	13	0	1	1
4010	700	"arg_2"	"decimal"	9	0	1	2
4011	701	"res_0"	"decimal"	9	0	0	0
4012	701	"arg_1"	"time"	7	0	1	1
4013	701	"arg_2"	"decimal"	9	0	1	2
4014	702	"res_0"	"decimal"	9	0	0	0
4015	702	"arg_1"	"timetz"	7	0	1	1
4016	702	"arg_2"	"decimal"	9	0	1	2
4017	703	"res_0"	"decimal"	9	0	0	0
4018	703	"arg_1"	"date"	0	0	1	1
4019	703	"arg_2"	"decimal"	9	0	1	2
4020	704	"res_0"	"decimal"	9	0	0	0
4021	704	"arg_1"	"timestamp"	7	0	1	1
4022	704	"arg_2"	"decimal"	9	0	1	2
4023	705	"res_0"	"decimal"	9	0	0	0
4024	705	"arg_1"	"timestamptz"	7	0	1	1
4025	705	"arg_2"	"decimal"	9	0	1	2
4026	706	"res_0"	"decimal"	9	0	0	0
4027	706	"arg_1"	"blob"	0	0	1	1
4028	706	"arg_2"	"decimal"	9	0	1	2
4029	707	"res_0"	"decimal"	18	0	0	0
4030	707	"arg_1"	"oid"	63	0	1	1
4031	707	"arg_2"	"decimal"	18	0	1	2
4032	708	"res_0"	"decimal"	18	0	0	0
4033	708	"arg_1"	"tinyint"	8	0	1	1
4034	708	"arg_2"	"decimal"	18	0	1	2
4035	709	"res_0"	"decimal"	18	0	0	0
4036	709	"arg_1"	"smallint"	16	0	1	1
4037	709	"arg_2"	"decimal"	18	0	1	2
4038	710	"res_0"	"decimal"	18	0	0	0
4039	710	"arg_1"	"int"	32	0	1	1
4040	710	"arg_2"	"decimal"	18	0	1	2
4041	711	"res_0"	"decimal"	18	0	0	0
4042	711	"arg_1"	"bigint"	64	0	1	1
4043	711	"arg_2"	"decimal"	18	0	1	2
4044	712	"res_0"	"decimal"	18	0	0	0
4045	712	"arg_1"	"wrd"	64	0	1	1
4046	712	"arg_2"	"decimal"	18	0	1	2
4047	713	"res_0"	"decimal"	18	0	0	0
4048	713	"arg_1"	"hugeint"	128	0	1	1
4049	713	"arg_2"	"decimal"	18	0	1	2
4050	714	"res_0"	"decimal"	18	0	0	0
4051	714	"arg_1"	"decimal"	2	0	1	1
4052	714	"arg_2"	"decimal"	18	0	1	2
4053	715	"res_0"	"decimal"	18	0	0	0
4054	715	"arg_1"	"decimal"	4	0	1	1
4055	715	"arg_2"	"decimal"	18	0	1	2
4056	716	"res_0"	"decimal"	18	0	0	0
4057	716	"arg_1"	"decimal"	9	0	1	1
4058	716	"arg_2"	"decimal"	18	0	1	2
4059	717	"res_0"	"decimal"	18	0	0	0
4060	717	"arg_1"	"decimal"	18	0	1	1
4061	717	"arg_2"	"decimal"	18	0	1	2
4062	718	"res_0"	"decimal"	18	0	0	0
4063	718	"arg_1"	"decimal"	39	0	1	1
4064	718	"arg_2"	"decimal"	18	0	1	2
4065	719	"res_0"	"decimal"	18	0	0	0
4066	719	"arg_1"	"real"	24	0	1	1
4067	719	"arg_2"	"decimal"	18	0	1	2
4068	720	"res_0"	"decimal"	18	0	0	0
4069	720	"arg_1"	"double"	53	0	1	1
4070	720	"arg_2"	"decimal"	18	0	1	2
4071	721	"res_0"	"decimal"	18	0	0	0
4072	721	"arg_1"	"month_interval"	32	0	1	1
4073	721	"arg_2"	"decimal"	18	0	1	2
4074	722	"res_0"	"decimal"	18	0	0	0
4075	722	"arg_1"	"sec_interval"	13	0	1	1
4076	722	"arg_2"	"decimal"	18	0	1	2
4077	723	"res_0"	"decimal"	18	0	0	0
4078	723	"arg_1"	"time"	7	0	1	1
4079	723	"arg_2"	"decimal"	18	0	1	2
4080	724	"res_0"	"decimal"	18	0	0	0
4081	724	"arg_1"	"timetz"	7	0	1	1
4082	724	"arg_2"	"decimal"	18	0	1	2
4083	725	"res_0"	"decimal"	18	0	0	0
4084	725	"arg_1"	"date"	0	0	1	1
4085	725	"arg_2"	"decimal"	18	0	1	2
4086	726	"res_0"	"decimal"	18	0	0	0
4087	726	"arg_1"	"timestamp"	7	0	1	1
4088	726	"arg_2"	"decimal"	18	0	1	2
4089	727	"res_0"	"decimal"	18	0	0	0
4090	727	"arg_1"	"timestamptz"	7	0	1	1
4091	727	"arg_2"	"decimal"	18	0	1	2
4092	728	"res_0"	"decimal"	18	0	0	0
4093	728	"arg_1"	"blob"	0	0	1	1
4094	728	"arg_2"	"decimal"	18	0	1	2
4095	729	"res_0"	"decimal"	39	0	0	0
4096	729	"arg_1"	"oid"	63	0	1	1
4097	729	"arg_2"	"decimal"	39	0	1	2
4098	730	"res_0"	"decimal"	39	0	0	0
4099	730	"arg_1"	"tinyint"	8	0	1	1
4100	730	"arg_2"	"decimal"	39	0	1	2
4101	731	"res_0"	"decimal"	39	0	0	0
4102	731	"arg_1"	"smallint"	16	0	1	1
4103	731	"arg_2"	"decimal"	39	0	1	2
4104	732	"res_0"	"decimal"	39	0	0	0
4105	732	"arg_1"	"int"	32	0	1	1
4106	732	"arg_2"	"decimal"	39	0	1	2
4107	733	"res_0"	"decimal"	39	0	0	0
4108	733	"arg_1"	"bigint"	64	0	1	1
4109	733	"arg_2"	"decimal"	39	0	1	2
4110	734	"res_0"	"decimal"	39	0	0	0
4111	734	"arg_1"	"wrd"	64	0	1	1
4112	734	"arg_2"	"decimal"	39	0	1	2
4113	735	"res_0"	"decimal"	39	0	0	0
4114	735	"arg_1"	"hugeint"	128	0	1	1
4115	735	"arg_2"	"decimal"	39	0	1	2
4116	736	"res_0"	"decimal"	39	0	0	0
4117	736	"arg_1"	"decimal"	2	0	1	1
4118	736	"arg_2"	"decimal"	39	0	1	2
4119	737	"res_0"	"decimal"	39	0	0	0
4120	737	"arg_1"	"decimal"	4	0	1	1
4121	737	"arg_2"	"decimal"	39	0	1	2
4122	738	"res_0"	"decimal"	39	0	0	0
4123	738	"arg_1"	"decimal"	9	0	1	1
4124	738	"arg_2"	"decimal"	39	0	1	2
4125	739	"res_0"	"decimal"	39	0	0	0
4126	739	"arg_1"	"decimal"	18	0	1	1
4127	739	"arg_2"	"decimal"	39	0	1	2
4128	740	"res_0"	"decimal"	39	0	0	0
4129	740	"arg_1"	"decimal"	39	0	1	1
4130	740	"arg_2"	"decimal"	39	0	1	2
4131	741	"res_0"	"decimal"	39	0	0	0
4132	741	"arg_1"	"real"	24	0	1	1
4133	741	"arg_2"	"decimal"	39	0	1	2
4134	742	"res_0"	"decimal"	39	0	0	0
4135	742	"arg_1"	"double"	53	0	1	1
4136	742	"arg_2"	"decimal"	39	0	1	2
4137	743	"res_0"	"decimal"	39	0	0	0
4138	743	"arg_1"	"month_interval"	32	0	1	1
4139	743	"arg_2"	"decimal"	39	0	1	2
4140	744	"res_0"	"decimal"	39	0	0	0
4141	744	"arg_1"	"sec_interval"	13	0	1	1
4142	744	"arg_2"	"decimal"	39	0	1	2
4143	745	"res_0"	"decimal"	39	0	0	0
4144	745	"arg_1"	"time"	7	0	1	1
4145	745	"arg_2"	"decimal"	39	0	1	2
4146	746	"res_0"	"decimal"	39	0	0	0
4147	746	"arg_1"	"timetz"	7	0	1	1
4148	746	"arg_2"	"decimal"	39	0	1	2
4149	747	"res_0"	"decimal"	39	0	0	0
4150	747	"arg_1"	"date"	0	0	1	1
4151	747	"arg_2"	"decimal"	39	0	1	2
4152	748	"res_0"	"decimal"	39	0	0	0
4153	748	"arg_1"	"timestamp"	7	0	1	1
4154	748	"arg_2"	"decimal"	39	0	1	2
4155	749	"res_0"	"decimal"	39	0	0	0
4156	749	"arg_1"	"timestamptz"	7	0	1	1
4157	749	"arg_2"	"decimal"	39	0	1	2
4158	750	"res_0"	"decimal"	39	0	0	0
4159	750	"arg_1"	"blob"	0	0	1	1
4160	750	"arg_2"	"decimal"	39	0	1	2
4161	751	"res_0"	"real"	24	0	0	0
4162	751	"arg_1"	"oid"	63	0	1	1
4163	751	"arg_2"	"real"	24	0	1	2
4164	752	"res_0"	"real"	24	0	0	0
4165	752	"arg_1"	"tinyint"	8	0	1	1
4166	752	"arg_2"	"real"	24	0	1	2
4167	753	"res_0"	"real"	24	0	0	0
4168	753	"arg_1"	"smallint"	16	0	1	1
4169	753	"arg_2"	"real"	24	0	1	2
4170	754	"res_0"	"real"	24	0	0	0
4171	754	"arg_1"	"int"	32	0	1	1
4172	754	"arg_2"	"real"	24	0	1	2
4173	755	"res_0"	"real"	24	0	0	0
4174	755	"arg_1"	"bigint"	64	0	1	1
4175	755	"arg_2"	"real"	24	0	1	2
4176	756	"res_0"	"real"	24	0	0	0
4177	756	"arg_1"	"wrd"	64	0	1	1
4178	756	"arg_2"	"real"	24	0	1	2
4179	757	"res_0"	"real"	24	0	0	0
4180	757	"arg_1"	"hugeint"	128	0	1	1
4181	757	"arg_2"	"real"	24	0	1	2
4182	758	"res_0"	"real"	24	0	0	0
4183	758	"arg_1"	"decimal"	2	0	1	1
4184	758	"arg_2"	"real"	24	0	1	2
4185	759	"res_0"	"real"	24	0	0	0
4186	759	"arg_1"	"decimal"	4	0	1	1
4187	759	"arg_2"	"real"	24	0	1	2
4188	760	"res_0"	"real"	24	0	0	0
4189	760	"arg_1"	"decimal"	9	0	1	1
4190	760	"arg_2"	"real"	24	0	1	2
4191	761	"res_0"	"real"	24	0	0	0
4192	761	"arg_1"	"decimal"	18	0	1	1
4193	761	"arg_2"	"real"	24	0	1	2
4194	762	"res_0"	"real"	24	0	0	0
4195	762	"arg_1"	"decimal"	39	0	1	1
4196	762	"arg_2"	"real"	24	0	1	2
4197	763	"res_0"	"real"	24	0	0	0
4198	763	"arg_1"	"real"	24	0	1	1
4199	763	"arg_2"	"real"	24	0	1	2
4200	764	"res_0"	"real"	24	0	0	0
4201	764	"arg_1"	"double"	53	0	1	1
4202	764	"arg_2"	"real"	24	0	1	2
4203	765	"res_0"	"real"	24	0	0	0
4204	765	"arg_1"	"month_interval"	32	0	1	1
4205	765	"arg_2"	"real"	24	0	1	2
4206	766	"res_0"	"real"	24	0	0	0
4207	766	"arg_1"	"sec_interval"	13	0	1	1
4208	766	"arg_2"	"real"	24	0	1	2
4209	767	"res_0"	"real"	24	0	0	0
4210	767	"arg_1"	"time"	7	0	1	1
4211	767	"arg_2"	"real"	24	0	1	2
4212	768	"res_0"	"real"	24	0	0	0
4213	768	"arg_1"	"timetz"	7	0	1	1
4214	768	"arg_2"	"real"	24	0	1	2
4215	769	"res_0"	"real"	24	0	0	0
4216	769	"arg_1"	"date"	0	0	1	1
4217	769	"arg_2"	"real"	24	0	1	2
4218	770	"res_0"	"real"	24	0	0	0
4219	770	"arg_1"	"timestamp"	7	0	1	1
4220	770	"arg_2"	"real"	24	0	1	2
4221	771	"res_0"	"real"	24	0	0	0
4222	771	"arg_1"	"timestamptz"	7	0	1	1
4223	771	"arg_2"	"real"	24	0	1	2
4224	772	"res_0"	"real"	24	0	0	0
4225	772	"arg_1"	"blob"	0	0	1	1
4226	772	"arg_2"	"real"	24	0	1	2
4227	773	"res_0"	"double"	53	0	0	0
4228	773	"arg_1"	"oid"	63	0	1	1
4229	773	"arg_2"	"double"	53	0	1	2
4230	774	"res_0"	"double"	53	0	0	0
4231	774	"arg_1"	"tinyint"	8	0	1	1
4232	774	"arg_2"	"double"	53	0	1	2
4233	775	"res_0"	"double"	53	0	0	0
4234	775	"arg_1"	"smallint"	16	0	1	1
4235	775	"arg_2"	"double"	53	0	1	2
4236	776	"res_0"	"double"	53	0	0	0
4237	776	"arg_1"	"int"	32	0	1	1
4238	776	"arg_2"	"double"	53	0	1	2
4239	777	"res_0"	"double"	53	0	0	0
4240	777	"arg_1"	"bigint"	64	0	1	1
4241	777	"arg_2"	"double"	53	0	1	2
4242	778	"res_0"	"double"	53	0	0	0
4243	778	"arg_1"	"wrd"	64	0	1	1
4244	778	"arg_2"	"double"	53	0	1	2
4245	779	"res_0"	"double"	53	0	0	0
4246	779	"arg_1"	"hugeint"	128	0	1	1
4247	779	"arg_2"	"double"	53	0	1	2
4248	780	"res_0"	"double"	53	0	0	0
4249	780	"arg_1"	"decimal"	2	0	1	1
4250	780	"arg_2"	"double"	53	0	1	2
4251	781	"res_0"	"double"	53	0	0	0
4252	781	"arg_1"	"decimal"	4	0	1	1
4253	781	"arg_2"	"double"	53	0	1	2
4254	782	"res_0"	"double"	53	0	0	0
4255	782	"arg_1"	"decimal"	9	0	1	1
4256	782	"arg_2"	"double"	53	0	1	2
4257	783	"res_0"	"double"	53	0	0	0
4258	783	"arg_1"	"decimal"	18	0	1	1
4259	783	"arg_2"	"double"	53	0	1	2
4260	784	"res_0"	"double"	53	0	0	0
4261	784	"arg_1"	"decimal"	39	0	1	1
4262	784	"arg_2"	"double"	53	0	1	2
4263	785	"res_0"	"double"	53	0	0	0
4264	785	"arg_1"	"real"	24	0	1	1
4265	785	"arg_2"	"double"	53	0	1	2
4266	786	"res_0"	"double"	53	0	0	0
4267	786	"arg_1"	"double"	53	0	1	1
4268	786	"arg_2"	"double"	53	0	1	2
4269	787	"res_0"	"double"	53	0	0	0
4270	787	"arg_1"	"month_interval"	32	0	1	1
4271	787	"arg_2"	"double"	53	0	1	2
4272	788	"res_0"	"double"	53	0	0	0
4273	788	"arg_1"	"sec_interval"	13	0	1	1
4274	788	"arg_2"	"double"	53	0	1	2
4275	789	"res_0"	"double"	53	0	0	0
4276	789	"arg_1"	"time"	7	0	1	1
4277	789	"arg_2"	"double"	53	0	1	2
4278	790	"res_0"	"double"	53	0	0	0
4279	790	"arg_1"	"timetz"	7	0	1	1
4280	790	"arg_2"	"double"	53	0	1	2
4281	791	"res_0"	"double"	53	0	0	0
4282	791	"arg_1"	"date"	0	0	1	1
4283	791	"arg_2"	"double"	53	0	1	2
4284	792	"res_0"	"double"	53	0	0	0
4285	792	"arg_1"	"timestamp"	7	0	1	1
4286	792	"arg_2"	"double"	53	0	1	2
4287	793	"res_0"	"double"	53	0	0	0
4288	793	"arg_1"	"timestamptz"	7	0	1	1
4289	793	"arg_2"	"double"	53	0	1	2
4290	794	"res_0"	"double"	53	0	0	0
4291	794	"arg_1"	"blob"	0	0	1	1
4292	794	"arg_2"	"double"	53	0	1	2
4293	795	"res_0"	"month_interval"	32	0	0	0
4294	795	"arg_1"	"oid"	63	0	1	1
4295	795	"arg_2"	"month_interval"	32	0	1	2
4296	796	"res_0"	"month_interval"	32	0	0	0
4297	796	"arg_1"	"tinyint"	8	0	1	1
4298	796	"arg_2"	"month_interval"	32	0	1	2
4299	797	"res_0"	"month_interval"	32	0	0	0
4300	797	"arg_1"	"smallint"	16	0	1	1
4301	797	"arg_2"	"month_interval"	32	0	1	2
4302	798	"res_0"	"month_interval"	32	0	0	0
4303	798	"arg_1"	"int"	32	0	1	1
4304	798	"arg_2"	"month_interval"	32	0	1	2
4305	799	"res_0"	"month_interval"	32	0	0	0
4306	799	"arg_1"	"bigint"	64	0	1	1
4307	799	"arg_2"	"month_interval"	32	0	1	2
4308	800	"res_0"	"month_interval"	32	0	0	0
4309	800	"arg_1"	"wrd"	64	0	1	1
4310	800	"arg_2"	"month_interval"	32	0	1	2
4311	801	"res_0"	"month_interval"	32	0	0	0
4312	801	"arg_1"	"hugeint"	128	0	1	1
4313	801	"arg_2"	"month_interval"	32	0	1	2
4314	802	"res_0"	"month_interval"	32	0	0	0
4315	802	"arg_1"	"decimal"	2	0	1	1
4316	802	"arg_2"	"month_interval"	32	0	1	2
4317	803	"res_0"	"month_interval"	32	0	0	0
4318	803	"arg_1"	"decimal"	4	0	1	1
4319	803	"arg_2"	"month_interval"	32	0	1	2
4320	804	"res_0"	"month_interval"	32	0	0	0
4321	804	"arg_1"	"decimal"	9	0	1	1
4322	804	"arg_2"	"month_interval"	32	0	1	2
4323	805	"res_0"	"month_interval"	32	0	0	0
4324	805	"arg_1"	"decimal"	18	0	1	1
4325	805	"arg_2"	"month_interval"	32	0	1	2
4326	806	"res_0"	"month_interval"	32	0	0	0
4327	806	"arg_1"	"decimal"	39	0	1	1
4328	806	"arg_2"	"month_interval"	32	0	1	2
4329	807	"res_0"	"month_interval"	32	0	0	0
4330	807	"arg_1"	"real"	24	0	1	1
4331	807	"arg_2"	"month_interval"	32	0	1	2
4332	808	"res_0"	"month_interval"	32	0	0	0
4333	808	"arg_1"	"double"	53	0	1	1
4334	808	"arg_2"	"month_interval"	32	0	1	2
4335	809	"res_0"	"month_interval"	32	0	0	0
4336	809	"arg_1"	"month_interval"	32	0	1	1
4337	809	"arg_2"	"month_interval"	32	0	1	2
4338	810	"res_0"	"month_interval"	32	0	0	0
4339	810	"arg_1"	"sec_interval"	13	0	1	1
4340	810	"arg_2"	"month_interval"	32	0	1	2
4341	811	"res_0"	"month_interval"	32	0	0	0
4342	811	"arg_1"	"time"	7	0	1	1
4343	811	"arg_2"	"month_interval"	32	0	1	2
4344	812	"res_0"	"month_interval"	32	0	0	0
4345	812	"arg_1"	"timetz"	7	0	1	1
4346	812	"arg_2"	"month_interval"	32	0	1	2
4347	813	"res_0"	"month_interval"	32	0	0	0
4348	813	"arg_1"	"date"	0	0	1	1
4349	813	"arg_2"	"month_interval"	32	0	1	2
4350	814	"res_0"	"month_interval"	32	0	0	0
4351	814	"arg_1"	"timestamp"	7	0	1	1
4352	814	"arg_2"	"month_interval"	32	0	1	2
4353	815	"res_0"	"month_interval"	32	0	0	0
4354	815	"arg_1"	"timestamptz"	7	0	1	1
4355	815	"arg_2"	"month_interval"	32	0	1	2
4356	816	"res_0"	"month_interval"	32	0	0	0
4357	816	"arg_1"	"blob"	0	0	1	1
4358	816	"arg_2"	"month_interval"	32	0	1	2
4359	817	"res_0"	"sec_interval"	13	0	0	0
4360	817	"arg_1"	"oid"	63	0	1	1
4361	817	"arg_2"	"sec_interval"	13	0	1	2
4362	818	"res_0"	"sec_interval"	13	0	0	0
4363	818	"arg_1"	"tinyint"	8	0	1	1
4364	818	"arg_2"	"sec_interval"	13	0	1	2
4365	819	"res_0"	"sec_interval"	13	0	0	0
4366	819	"arg_1"	"smallint"	16	0	1	1
4367	819	"arg_2"	"sec_interval"	13	0	1	2
4368	820	"res_0"	"sec_interval"	13	0	0	0
4369	820	"arg_1"	"int"	32	0	1	1
4370	820	"arg_2"	"sec_interval"	13	0	1	2
4371	821	"res_0"	"sec_interval"	13	0	0	0
4372	821	"arg_1"	"bigint"	64	0	1	1
4373	821	"arg_2"	"sec_interval"	13	0	1	2
4374	822	"res_0"	"sec_interval"	13	0	0	0
4375	822	"arg_1"	"wrd"	64	0	1	1
4376	822	"arg_2"	"sec_interval"	13	0	1	2
4377	823	"res_0"	"sec_interval"	13	0	0	0
4378	823	"arg_1"	"hugeint"	128	0	1	1
4379	823	"arg_2"	"sec_interval"	13	0	1	2
4380	824	"res_0"	"sec_interval"	13	0	0	0
4381	824	"arg_1"	"decimal"	2	0	1	1
4382	824	"arg_2"	"sec_interval"	13	0	1	2
4383	825	"res_0"	"sec_interval"	13	0	0	0
4384	825	"arg_1"	"decimal"	4	0	1	1
4385	825	"arg_2"	"sec_interval"	13	0	1	2
4386	826	"res_0"	"sec_interval"	13	0	0	0
4387	826	"arg_1"	"decimal"	9	0	1	1
4388	826	"arg_2"	"sec_interval"	13	0	1	2
4389	827	"res_0"	"sec_interval"	13	0	0	0
4390	827	"arg_1"	"decimal"	18	0	1	1
4391	827	"arg_2"	"sec_interval"	13	0	1	2
4392	828	"res_0"	"sec_interval"	13	0	0	0
4393	828	"arg_1"	"decimal"	39	0	1	1
4394	828	"arg_2"	"sec_interval"	13	0	1	2
4395	829	"res_0"	"sec_interval"	13	0	0	0
4396	829	"arg_1"	"real"	24	0	1	1
4397	829	"arg_2"	"sec_interval"	13	0	1	2
4398	830	"res_0"	"sec_interval"	13	0	0	0
4399	830	"arg_1"	"double"	53	0	1	1
4400	830	"arg_2"	"sec_interval"	13	0	1	2
4401	831	"res_0"	"sec_interval"	13	0	0	0
4402	831	"arg_1"	"month_interval"	32	0	1	1
4403	831	"arg_2"	"sec_interval"	13	0	1	2
4404	832	"res_0"	"sec_interval"	13	0	0	0
4405	832	"arg_1"	"sec_interval"	13	0	1	1
4406	832	"arg_2"	"sec_interval"	13	0	1	2
4407	833	"res_0"	"sec_interval"	13	0	0	0
4408	833	"arg_1"	"time"	7	0	1	1
4409	833	"arg_2"	"sec_interval"	13	0	1	2
4410	834	"res_0"	"sec_interval"	13	0	0	0
4411	834	"arg_1"	"timetz"	7	0	1	1
4412	834	"arg_2"	"sec_interval"	13	0	1	2
4413	835	"res_0"	"sec_interval"	13	0	0	0
4414	835	"arg_1"	"date"	0	0	1	1
4415	835	"arg_2"	"sec_interval"	13	0	1	2
4416	836	"res_0"	"sec_interval"	13	0	0	0
4417	836	"arg_1"	"timestamp"	7	0	1	1
4418	836	"arg_2"	"sec_interval"	13	0	1	2
4419	837	"res_0"	"sec_interval"	13	0	0	0
4420	837	"arg_1"	"timestamptz"	7	0	1	1
4421	837	"arg_2"	"sec_interval"	13	0	1	2
4422	838	"res_0"	"sec_interval"	13	0	0	0
4423	838	"arg_1"	"blob"	0	0	1	1
4424	838	"arg_2"	"sec_interval"	13	0	1	2
4425	839	"res_0"	"time"	7	0	0	0
4426	839	"arg_1"	"oid"	63	0	1	1
4427	839	"arg_2"	"time"	7	0	1	2
4428	840	"res_0"	"time"	7	0	0	0
4429	840	"arg_1"	"tinyint"	8	0	1	1
4430	840	"arg_2"	"time"	7	0	1	2
4431	841	"res_0"	"time"	7	0	0	0
4432	841	"arg_1"	"smallint"	16	0	1	1
4433	841	"arg_2"	"time"	7	0	1	2
4434	842	"res_0"	"time"	7	0	0	0
4435	842	"arg_1"	"int"	32	0	1	1
4436	842	"arg_2"	"time"	7	0	1	2
4437	843	"res_0"	"time"	7	0	0	0
4438	843	"arg_1"	"bigint"	64	0	1	1
4439	843	"arg_2"	"time"	7	0	1	2
4440	844	"res_0"	"time"	7	0	0	0
4441	844	"arg_1"	"wrd"	64	0	1	1
4442	844	"arg_2"	"time"	7	0	1	2
4443	845	"res_0"	"time"	7	0	0	0
4444	845	"arg_1"	"hugeint"	128	0	1	1
4445	845	"arg_2"	"time"	7	0	1	2
4446	846	"res_0"	"time"	7	0	0	0
4447	846	"arg_1"	"decimal"	2	0	1	1
4448	846	"arg_2"	"time"	7	0	1	2
4449	847	"res_0"	"time"	7	0	0	0
4450	847	"arg_1"	"decimal"	4	0	1	1
4451	847	"arg_2"	"time"	7	0	1	2
4452	848	"res_0"	"time"	7	0	0	0
4453	848	"arg_1"	"decimal"	9	0	1	1
4454	848	"arg_2"	"time"	7	0	1	2
4455	849	"res_0"	"time"	7	0	0	0
4456	849	"arg_1"	"decimal"	18	0	1	1
4457	849	"arg_2"	"time"	7	0	1	2
4458	850	"res_0"	"time"	7	0	0	0
4459	850	"arg_1"	"decimal"	39	0	1	1
4460	850	"arg_2"	"time"	7	0	1	2
4461	851	"res_0"	"time"	7	0	0	0
4462	851	"arg_1"	"real"	24	0	1	1
4463	851	"arg_2"	"time"	7	0	1	2
4464	852	"res_0"	"time"	7	0	0	0
4465	852	"arg_1"	"double"	53	0	1	1
4466	852	"arg_2"	"time"	7	0	1	2
4467	853	"res_0"	"time"	7	0	0	0
4468	853	"arg_1"	"month_interval"	32	0	1	1
4469	853	"arg_2"	"time"	7	0	1	2
4470	854	"res_0"	"time"	7	0	0	0
4471	854	"arg_1"	"sec_interval"	13	0	1	1
4472	854	"arg_2"	"time"	7	0	1	2
4473	855	"res_0"	"time"	7	0	0	0
4474	855	"arg_1"	"time"	7	0	1	1
4475	855	"arg_2"	"time"	7	0	1	2
4476	856	"res_0"	"time"	7	0	0	0
4477	856	"arg_1"	"timetz"	7	0	1	1
4478	856	"arg_2"	"time"	7	0	1	2
4479	857	"res_0"	"time"	7	0	0	0
4480	857	"arg_1"	"date"	0	0	1	1
4481	857	"arg_2"	"time"	7	0	1	2
4482	858	"res_0"	"time"	7	0	0	0
4483	858	"arg_1"	"timestamp"	7	0	1	1
4484	858	"arg_2"	"time"	7	0	1	2
4485	859	"res_0"	"time"	7	0	0	0
4486	859	"arg_1"	"timestamptz"	7	0	1	1
4487	859	"arg_2"	"time"	7	0	1	2
4488	860	"res_0"	"time"	7	0	0	0
4489	860	"arg_1"	"blob"	0	0	1	1
4490	860	"arg_2"	"time"	7	0	1	2
4491	861	"res_0"	"timetz"	7	0	0	0
4492	861	"arg_1"	"oid"	63	0	1	1
4493	861	"arg_2"	"timetz"	7	0	1	2
4494	862	"res_0"	"timetz"	7	0	0	0
4495	862	"arg_1"	"tinyint"	8	0	1	1
4496	862	"arg_2"	"timetz"	7	0	1	2
4497	863	"res_0"	"timetz"	7	0	0	0
4498	863	"arg_1"	"smallint"	16	0	1	1
4499	863	"arg_2"	"timetz"	7	0	1	2
4500	864	"res_0"	"timetz"	7	0	0	0
4501	864	"arg_1"	"int"	32	0	1	1
4502	864	"arg_2"	"timetz"	7	0	1	2
4503	865	"res_0"	"timetz"	7	0	0	0
4504	865	"arg_1"	"bigint"	64	0	1	1
4505	865	"arg_2"	"timetz"	7	0	1	2
4506	866	"res_0"	"timetz"	7	0	0	0
4507	866	"arg_1"	"wrd"	64	0	1	1
4508	866	"arg_2"	"timetz"	7	0	1	2
4509	867	"res_0"	"timetz"	7	0	0	0
4510	867	"arg_1"	"hugeint"	128	0	1	1
4511	867	"arg_2"	"timetz"	7	0	1	2
4512	868	"res_0"	"timetz"	7	0	0	0
4513	868	"arg_1"	"decimal"	2	0	1	1
4514	868	"arg_2"	"timetz"	7	0	1	2
4515	869	"res_0"	"timetz"	7	0	0	0
4516	869	"arg_1"	"decimal"	4	0	1	1
4517	869	"arg_2"	"timetz"	7	0	1	2
4518	870	"res_0"	"timetz"	7	0	0	0
4519	870	"arg_1"	"decimal"	9	0	1	1
4520	870	"arg_2"	"timetz"	7	0	1	2
4521	871	"res_0"	"timetz"	7	0	0	0
4522	871	"arg_1"	"decimal"	18	0	1	1
4523	871	"arg_2"	"timetz"	7	0	1	2
4524	872	"res_0"	"timetz"	7	0	0	0
4525	872	"arg_1"	"decimal"	39	0	1	1
4526	872	"arg_2"	"timetz"	7	0	1	2
4527	873	"res_0"	"timetz"	7	0	0	0
4528	873	"arg_1"	"real"	24	0	1	1
4529	873	"arg_2"	"timetz"	7	0	1	2
4530	874	"res_0"	"timetz"	7	0	0	0
4531	874	"arg_1"	"double"	53	0	1	1
4532	874	"arg_2"	"timetz"	7	0	1	2
4533	875	"res_0"	"timetz"	7	0	0	0
4534	875	"arg_1"	"month_interval"	32	0	1	1
4535	875	"arg_2"	"timetz"	7	0	1	2
4536	876	"res_0"	"timetz"	7	0	0	0
4537	876	"arg_1"	"sec_interval"	13	0	1	1
4538	876	"arg_2"	"timetz"	7	0	1	2
4539	877	"res_0"	"timetz"	7	0	0	0
4540	877	"arg_1"	"time"	7	0	1	1
4541	877	"arg_2"	"timetz"	7	0	1	2
4542	878	"res_0"	"timetz"	7	0	0	0
4543	878	"arg_1"	"timetz"	7	0	1	1
4544	878	"arg_2"	"timetz"	7	0	1	2
4545	879	"res_0"	"timetz"	7	0	0	0
4546	879	"arg_1"	"date"	0	0	1	1
4547	879	"arg_2"	"timetz"	7	0	1	2
4548	880	"res_0"	"timetz"	7	0	0	0
4549	880	"arg_1"	"timestamp"	7	0	1	1
4550	880	"arg_2"	"timetz"	7	0	1	2
4551	881	"res_0"	"timetz"	7	0	0	0
4552	881	"arg_1"	"timestamptz"	7	0	1	1
4553	881	"arg_2"	"timetz"	7	0	1	2
4554	882	"res_0"	"timetz"	7	0	0	0
4555	882	"arg_1"	"blob"	0	0	1	1
4556	882	"arg_2"	"timetz"	7	0	1	2
4557	883	"res_0"	"date"	0	0	0	0
4558	883	"arg_1"	"oid"	63	0	1	1
4559	883	"arg_2"	"date"	0	0	1	2
4560	884	"res_0"	"date"	0	0	0	0
4561	884	"arg_1"	"tinyint"	8	0	1	1
4562	884	"arg_2"	"date"	0	0	1	2
4563	885	"res_0"	"date"	0	0	0	0
4564	885	"arg_1"	"smallint"	16	0	1	1
4565	885	"arg_2"	"date"	0	0	1	2
4566	886	"res_0"	"date"	0	0	0	0
4567	886	"arg_1"	"int"	32	0	1	1
4568	886	"arg_2"	"date"	0	0	1	2
4569	887	"res_0"	"date"	0	0	0	0
4570	887	"arg_1"	"bigint"	64	0	1	1
4571	887	"arg_2"	"date"	0	0	1	2
4572	888	"res_0"	"date"	0	0	0	0
4573	888	"arg_1"	"wrd"	64	0	1	1
4574	888	"arg_2"	"date"	0	0	1	2
4575	889	"res_0"	"date"	0	0	0	0
4576	889	"arg_1"	"hugeint"	128	0	1	1
4577	889	"arg_2"	"date"	0	0	1	2
4578	890	"res_0"	"date"	0	0	0	0
4579	890	"arg_1"	"decimal"	2	0	1	1
4580	890	"arg_2"	"date"	0	0	1	2
4581	891	"res_0"	"date"	0	0	0	0
4582	891	"arg_1"	"decimal"	4	0	1	1
4583	891	"arg_2"	"date"	0	0	1	2
4584	892	"res_0"	"date"	0	0	0	0
4585	892	"arg_1"	"decimal"	9	0	1	1
4586	892	"arg_2"	"date"	0	0	1	2
4587	893	"res_0"	"date"	0	0	0	0
4588	893	"arg_1"	"decimal"	18	0	1	1
4589	893	"arg_2"	"date"	0	0	1	2
4590	894	"res_0"	"date"	0	0	0	0
4591	894	"arg_1"	"decimal"	39	0	1	1
4592	894	"arg_2"	"date"	0	0	1	2
4593	895	"res_0"	"date"	0	0	0	0
4594	895	"arg_1"	"real"	24	0	1	1
4595	895	"arg_2"	"date"	0	0	1	2
4596	896	"res_0"	"date"	0	0	0	0
4597	896	"arg_1"	"double"	53	0	1	1
4598	896	"arg_2"	"date"	0	0	1	2
4599	897	"res_0"	"date"	0	0	0	0
4600	897	"arg_1"	"month_interval"	32	0	1	1
4601	897	"arg_2"	"date"	0	0	1	2
4602	898	"res_0"	"date"	0	0	0	0
4603	898	"arg_1"	"sec_interval"	13	0	1	1
4604	898	"arg_2"	"date"	0	0	1	2
4605	899	"res_0"	"date"	0	0	0	0
4606	899	"arg_1"	"time"	7	0	1	1
4607	899	"arg_2"	"date"	0	0	1	2
4608	900	"res_0"	"date"	0	0	0	0
4609	900	"arg_1"	"timetz"	7	0	1	1
4610	900	"arg_2"	"date"	0	0	1	2
4611	901	"res_0"	"date"	0	0	0	0
4612	901	"arg_1"	"date"	0	0	1	1
4613	901	"arg_2"	"date"	0	0	1	2
4614	902	"res_0"	"date"	0	0	0	0
4615	902	"arg_1"	"timestamp"	7	0	1	1
4616	902	"arg_2"	"date"	0	0	1	2
4617	903	"res_0"	"date"	0	0	0	0
4618	903	"arg_1"	"timestamptz"	7	0	1	1
4619	903	"arg_2"	"date"	0	0	1	2
4620	904	"res_0"	"date"	0	0	0	0
4621	904	"arg_1"	"blob"	0	0	1	1
4622	904	"arg_2"	"date"	0	0	1	2
4623	905	"res_0"	"timestamp"	7	0	0	0
4624	905	"arg_1"	"oid"	63	0	1	1
4625	905	"arg_2"	"timestamp"	7	0	1	2
4626	906	"res_0"	"timestamp"	7	0	0	0
4627	906	"arg_1"	"tinyint"	8	0	1	1
4628	906	"arg_2"	"timestamp"	7	0	1	2
4629	907	"res_0"	"timestamp"	7	0	0	0
4630	907	"arg_1"	"smallint"	16	0	1	1
4631	907	"arg_2"	"timestamp"	7	0	1	2
4632	908	"res_0"	"timestamp"	7	0	0	0
4633	908	"arg_1"	"int"	32	0	1	1
4634	908	"arg_2"	"timestamp"	7	0	1	2
4635	909	"res_0"	"timestamp"	7	0	0	0
4636	909	"arg_1"	"bigint"	64	0	1	1
4637	909	"arg_2"	"timestamp"	7	0	1	2
4638	910	"res_0"	"timestamp"	7	0	0	0
4639	910	"arg_1"	"wrd"	64	0	1	1
4640	910	"arg_2"	"timestamp"	7	0	1	2
4641	911	"res_0"	"timestamp"	7	0	0	0
4642	911	"arg_1"	"hugeint"	128	0	1	1
4643	911	"arg_2"	"timestamp"	7	0	1	2
4644	912	"res_0"	"timestamp"	7	0	0	0
4645	912	"arg_1"	"decimal"	2	0	1	1
4646	912	"arg_2"	"timestamp"	7	0	1	2
4647	913	"res_0"	"timestamp"	7	0	0	0
4648	913	"arg_1"	"decimal"	4	0	1	1
4649	913	"arg_2"	"timestamp"	7	0	1	2
4650	914	"res_0"	"timestamp"	7	0	0	0
4651	914	"arg_1"	"decimal"	9	0	1	1
4652	914	"arg_2"	"timestamp"	7	0	1	2
4653	915	"res_0"	"timestamp"	7	0	0	0
4654	915	"arg_1"	"decimal"	18	0	1	1
4655	915	"arg_2"	"timestamp"	7	0	1	2
4656	916	"res_0"	"timestamp"	7	0	0	0
4657	916	"arg_1"	"decimal"	39	0	1	1
4658	916	"arg_2"	"timestamp"	7	0	1	2
4659	917	"res_0"	"timestamp"	7	0	0	0
4660	917	"arg_1"	"real"	24	0	1	1
4661	917	"arg_2"	"timestamp"	7	0	1	2
4662	918	"res_0"	"timestamp"	7	0	0	0
4663	918	"arg_1"	"double"	53	0	1	1
4664	918	"arg_2"	"timestamp"	7	0	1	2
4665	919	"res_0"	"timestamp"	7	0	0	0
4666	919	"arg_1"	"month_interval"	32	0	1	1
4667	919	"arg_2"	"timestamp"	7	0	1	2
4668	920	"res_0"	"timestamp"	7	0	0	0
4669	920	"arg_1"	"sec_interval"	13	0	1	1
4670	920	"arg_2"	"timestamp"	7	0	1	2
4671	921	"res_0"	"timestamp"	7	0	0	0
4672	921	"arg_1"	"time"	7	0	1	1
4673	921	"arg_2"	"timestamp"	7	0	1	2
4674	922	"res_0"	"timestamp"	7	0	0	0
4675	922	"arg_1"	"timetz"	7	0	1	1
4676	922	"arg_2"	"timestamp"	7	0	1	2
4677	923	"res_0"	"timestamp"	7	0	0	0
4678	923	"arg_1"	"date"	0	0	1	1
4679	923	"arg_2"	"timestamp"	7	0	1	2
4680	924	"res_0"	"timestamp"	7	0	0	0
4681	924	"arg_1"	"timestamp"	7	0	1	1
4682	924	"arg_2"	"timestamp"	7	0	1	2
4683	925	"res_0"	"timestamp"	7	0	0	0
4684	925	"arg_1"	"timestamptz"	7	0	1	1
4685	925	"arg_2"	"timestamp"	7	0	1	2
4686	926	"res_0"	"timestamp"	7	0	0	0
4687	926	"arg_1"	"blob"	0	0	1	1
4688	926	"arg_2"	"timestamp"	7	0	1	2
4689	927	"res_0"	"timestamptz"	7	0	0	0
4690	927	"arg_1"	"oid"	63	0	1	1
4691	927	"arg_2"	"timestamptz"	7	0	1	2
4692	928	"res_0"	"timestamptz"	7	0	0	0
4693	928	"arg_1"	"tinyint"	8	0	1	1
4694	928	"arg_2"	"timestamptz"	7	0	1	2
4695	929	"res_0"	"timestamptz"	7	0	0	0
4696	929	"arg_1"	"smallint"	16	0	1	1
4697	929	"arg_2"	"timestamptz"	7	0	1	2
4698	930	"res_0"	"timestamptz"	7	0	0	0
4699	930	"arg_1"	"int"	32	0	1	1
4700	930	"arg_2"	"timestamptz"	7	0	1	2
4701	931	"res_0"	"timestamptz"	7	0	0	0
4702	931	"arg_1"	"bigint"	64	0	1	1
4703	931	"arg_2"	"timestamptz"	7	0	1	2
4704	932	"res_0"	"timestamptz"	7	0	0	0
4705	932	"arg_1"	"wrd"	64	0	1	1
4706	932	"arg_2"	"timestamptz"	7	0	1	2
4707	933	"res_0"	"timestamptz"	7	0	0	0
4708	933	"arg_1"	"hugeint"	128	0	1	1
4709	933	"arg_2"	"timestamptz"	7	0	1	2
4710	934	"res_0"	"timestamptz"	7	0	0	0
4711	934	"arg_1"	"decimal"	2	0	1	1
4712	934	"arg_2"	"timestamptz"	7	0	1	2
4713	935	"res_0"	"timestamptz"	7	0	0	0
4714	935	"arg_1"	"decimal"	4	0	1	1
4715	935	"arg_2"	"timestamptz"	7	0	1	2
4716	936	"res_0"	"timestamptz"	7	0	0	0
4717	936	"arg_1"	"decimal"	9	0	1	1
4718	936	"arg_2"	"timestamptz"	7	0	1	2
4719	937	"res_0"	"timestamptz"	7	0	0	0
4720	937	"arg_1"	"decimal"	18	0	1	1
4721	937	"arg_2"	"timestamptz"	7	0	1	2
4722	938	"res_0"	"timestamptz"	7	0	0	0
4723	938	"arg_1"	"decimal"	39	0	1	1
4724	938	"arg_2"	"timestamptz"	7	0	1	2
4725	939	"res_0"	"timestamptz"	7	0	0	0
4726	939	"arg_1"	"real"	24	0	1	1
4727	939	"arg_2"	"timestamptz"	7	0	1	2
4728	940	"res_0"	"timestamptz"	7	0	0	0
4729	940	"arg_1"	"double"	53	0	1	1
4730	940	"arg_2"	"timestamptz"	7	0	1	2
4731	941	"res_0"	"timestamptz"	7	0	0	0
4732	941	"arg_1"	"month_interval"	32	0	1	1
4733	941	"arg_2"	"timestamptz"	7	0	1	2
4734	942	"res_0"	"timestamptz"	7	0	0	0
4735	942	"arg_1"	"sec_interval"	13	0	1	1
4736	942	"arg_2"	"timestamptz"	7	0	1	2
4737	943	"res_0"	"timestamptz"	7	0	0	0
4738	943	"arg_1"	"time"	7	0	1	1
4739	943	"arg_2"	"timestamptz"	7	0	1	2
4740	944	"res_0"	"timestamptz"	7	0	0	0
4741	944	"arg_1"	"timetz"	7	0	1	1
4742	944	"arg_2"	"timestamptz"	7	0	1	2
4743	945	"res_0"	"timestamptz"	7	0	0	0
4744	945	"arg_1"	"date"	0	0	1	1
4745	945	"arg_2"	"timestamptz"	7	0	1	2
4746	946	"res_0"	"timestamptz"	7	0	0	0
4747	946	"arg_1"	"timestamp"	7	0	1	1
4748	946	"arg_2"	"timestamptz"	7	0	1	2
4749	947	"res_0"	"timestamptz"	7	0	0	0
4750	947	"arg_1"	"timestamptz"	7	0	1	1
4751	947	"arg_2"	"timestamptz"	7	0	1	2
4752	948	"res_0"	"timestamptz"	7	0	0	0
4753	948	"arg_1"	"blob"	0	0	1	1
4754	948	"arg_2"	"timestamptz"	7	0	1	2
4755	949	"res_0"	"blob"	0	0	0	0
4756	949	"arg_1"	"oid"	63	0	1	1
4757	949	"arg_2"	"blob"	0	0	1	2
4758	950	"res_0"	"blob"	0	0	0	0
4759	950	"arg_1"	"tinyint"	8	0	1	1
4760	950	"arg_2"	"blob"	0	0	1	2
4761	951	"res_0"	"blob"	0	0	0	0
4762	951	"arg_1"	"smallint"	16	0	1	1
4763	951	"arg_2"	"blob"	0	0	1	2
4764	952	"res_0"	"blob"	0	0	0	0
4765	952	"arg_1"	"int"	32	0	1	1
4766	952	"arg_2"	"blob"	0	0	1	2
4767	953	"res_0"	"blob"	0	0	0	0
4768	953	"arg_1"	"bigint"	64	0	1	1
4769	953	"arg_2"	"blob"	0	0	1	2
4770	954	"res_0"	"blob"	0	0	0	0
4771	954	"arg_1"	"wrd"	64	0	1	1
4772	954	"arg_2"	"blob"	0	0	1	2
4773	955	"res_0"	"blob"	0	0	0	0
4774	955	"arg_1"	"hugeint"	128	0	1	1
4775	955	"arg_2"	"blob"	0	0	1	2
4776	956	"res_0"	"blob"	0	0	0	0
4777	956	"arg_1"	"decimal"	2	0	1	1
4778	956	"arg_2"	"blob"	0	0	1	2
4779	957	"res_0"	"blob"	0	0	0	0
4780	957	"arg_1"	"decimal"	4	0	1	1
4781	957	"arg_2"	"blob"	0	0	1	2
4782	958	"res_0"	"blob"	0	0	0	0
4783	958	"arg_1"	"decimal"	9	0	1	1
4784	958	"arg_2"	"blob"	0	0	1	2
4785	959	"res_0"	"blob"	0	0	0	0
4786	959	"arg_1"	"decimal"	18	0	1	1
4787	959	"arg_2"	"blob"	0	0	1	2
4788	960	"res_0"	"blob"	0	0	0	0
4789	960	"arg_1"	"decimal"	39	0	1	1
4790	960	"arg_2"	"blob"	0	0	1	2
4791	961	"res_0"	"blob"	0	0	0	0
4792	961	"arg_1"	"real"	24	0	1	1
4793	961	"arg_2"	"blob"	0	0	1	2
4794	962	"res_0"	"blob"	0	0	0	0
4795	962	"arg_1"	"double"	53	0	1	1
4796	962	"arg_2"	"blob"	0	0	1	2
4797	963	"res_0"	"blob"	0	0	0	0
4798	963	"arg_1"	"month_interval"	32	0	1	1
4799	963	"arg_2"	"blob"	0	0	1	2
4800	964	"res_0"	"blob"	0	0	0	0
4801	964	"arg_1"	"sec_interval"	13	0	1	1
4802	964	"arg_2"	"blob"	0	0	1	2
4803	965	"res_0"	"blob"	0	0	0	0
4804	965	"arg_1"	"time"	7	0	1	1
4805	965	"arg_2"	"blob"	0	0	1	2
4806	966	"res_0"	"blob"	0	0	0	0
4807	966	"arg_1"	"timetz"	7	0	1	1
4808	966	"arg_2"	"blob"	0	0	1	2
4809	967	"res_0"	"blob"	0	0	0	0
4810	967	"arg_1"	"date"	0	0	1	1
4811	967	"arg_2"	"blob"	0	0	1	2
4812	968	"res_0"	"blob"	0	0	0	0
4813	968	"arg_1"	"timestamp"	7	0	1	1
4814	968	"arg_2"	"blob"	0	0	1	2
4815	969	"res_0"	"blob"	0	0	0	0
4816	969	"arg_1"	"timestamptz"	7	0	1	1
4817	969	"arg_2"	"blob"	0	0	1	2
4818	970	"res_0"	"blob"	0	0	0	0
4819	970	"arg_1"	"blob"	0	0	1	1
4820	970	"arg_2"	"blob"	0	0	1	2
4821	971	"res_0"	"real"	24	0	0	0
4822	971	"arg_1"	"real"	24	0	1	1
4823	971	"arg_2"	"real"	24	0	1	2
4824	972	"res_0"	"real"	24	0	0	0
4825	972	"arg_1"	"real"	24	0	1	1
4826	973	"res_0"	"real"	24	0	0	0
4827	973	"arg_1"	"real"	24	0	1	1
4828	974	"res_0"	"real"	24	0	0	0
4829	974	"arg_1"	"real"	24	0	1	1
4830	975	"res_0"	"real"	24	0	0	0
4831	975	"arg_1"	"real"	24	0	1	1
4832	976	"res_0"	"real"	24	0	0	0
4833	976	"arg_1"	"real"	24	0	1	1
4834	977	"res_0"	"real"	24	0	0	0
4835	977	"arg_1"	"real"	24	0	1	1
4836	978	"res_0"	"real"	24	0	0	0
4837	978	"arg_1"	"real"	24	0	1	1
4838	979	"res_0"	"real"	24	0	0	0
4839	979	"arg_1"	"real"	24	0	1	1
4840	980	"res_0"	"real"	24	0	0	0
4841	980	"arg_1"	"real"	24	0	1	1
4842	981	"res_0"	"real"	24	0	0	0
4843	981	"arg_1"	"real"	24	0	1	1
4844	981	"arg_2"	"real"	24	0	1	2
4845	982	"res_0"	"real"	24	0	0	0
4846	982	"arg_1"	"real"	24	0	1	1
4847	983	"res_0"	"real"	24	0	0	0
4848	983	"arg_1"	"real"	24	0	1	1
4849	984	"res_0"	"real"	24	0	0	0
4850	984	"arg_1"	"real"	24	0	1	1
4851	985	"res_0"	"real"	24	0	0	0
4852	985	"arg_1"	"real"	24	0	1	1
4853	986	"res_0"	"real"	24	0	0	0
4854	986	"arg_1"	"real"	24	0	1	1
4855	987	"res_0"	"real"	24	0	0	0
4856	987	"arg_1"	"real"	24	0	1	1
4857	988	"res_0"	"real"	24	0	0	0
4858	988	"arg_1"	"real"	24	0	1	1
4859	989	"res_0"	"real"	24	0	0	0
4860	989	"arg_1"	"real"	24	0	1	1
4861	990	"res_0"	"double"	53	0	0	0
4862	990	"arg_1"	"double"	53	0	1	1
4863	990	"arg_2"	"double"	53	0	1	2
4864	991	"res_0"	"double"	53	0	0	0
4865	991	"arg_1"	"double"	53	0	1	1
4866	992	"res_0"	"double"	53	0	0	0
4867	992	"arg_1"	"double"	53	0	1	1
4868	993	"res_0"	"double"	53	0	0	0
4869	993	"arg_1"	"double"	53	0	1	1
4870	994	"res_0"	"double"	53	0	0	0
4871	994	"arg_1"	"double"	53	0	1	1
4872	995	"res_0"	"double"	53	0	0	0
4873	995	"arg_1"	"double"	53	0	1	1
4874	996	"res_0"	"double"	53	0	0	0
4875	996	"arg_1"	"double"	53	0	1	1
4876	997	"res_0"	"double"	53	0	0	0
4877	997	"arg_1"	"double"	53	0	1	1
4878	998	"res_0"	"double"	53	0	0	0
4879	998	"arg_1"	"double"	53	0	1	1
4880	999	"res_0"	"double"	53	0	0	0
4881	999	"arg_1"	"double"	53	0	1	1
4882	1000	"res_0"	"double"	53	0	0	0
4883	1000	"arg_1"	"double"	53	0	1	1
4884	1000	"arg_2"	"double"	53	0	1	2
4885	1001	"res_0"	"double"	53	0	0	0
4886	1001	"arg_1"	"double"	53	0	1	1
4887	1002	"res_0"	"double"	53	0	0	0
4888	1002	"arg_1"	"double"	53	0	1	1
4889	1003	"res_0"	"double"	53	0	0	0
4890	1003	"arg_1"	"double"	53	0	1	1
4891	1004	"res_0"	"double"	53	0	0	0
4892	1004	"arg_1"	"double"	53	0	1	1
4893	1005	"res_0"	"double"	53	0	0	0
4894	1005	"arg_1"	"double"	53	0	1	1
4895	1006	"res_0"	"double"	53	0	0	0
4896	1006	"arg_1"	"double"	53	0	1	1
4897	1007	"res_0"	"double"	53	0	0	0
4898	1007	"arg_1"	"double"	53	0	1	1
4899	1008	"res_0"	"double"	53	0	0	0
4900	1008	"arg_1"	"double"	53	0	1	1
4901	1009	"res_0"	"double"	53	0	0	0
4902	1010	"res_0"	"int"	32	0	0	0
4903	1011	"res_0"	"int"	32	0	0	0
4904	1011	"arg_1"	"int"	32	0	1	1
4905	1012	"res_0"	"date"	0	0	0	0
4906	1013	"res_0"	"date"	0	0	0	0
4907	1014	"res_0"	"timetz"	7	0	0	0
4908	1015	"res_0"	"timetz"	7	0	0	0
4909	1016	"res_0"	"timestamptz"	7	0	0	0
4910	1017	"res_0"	"time"	7	0	0	0
4911	1018	"res_0"	"timestamp"	7	0	0	0
4912	1019	"res_0"	"month_interval"	32	0	0	0
4913	1019	"arg_1"	"date"	0	0	1	1
4914	1019	"arg_2"	"date"	0	0	1	2
4915	1020	"res_0"	"sec_interval"	13	0	0	0
4916	1020	"arg_1"	"timetz"	7	0	1	1
4917	1020	"arg_2"	"timetz"	7	0	1	2
4918	1021	"res_0"	"sec_interval"	13	0	0	0
4919	1021	"arg_1"	"time"	7	0	1	1
4920	1021	"arg_2"	"time"	7	0	1	2
4921	1022	"res_0"	"sec_interval"	13	0	0	0
4922	1022	"arg_1"	"timestamptz"	7	0	1	1
4923	1022	"arg_2"	"timestamptz"	7	0	1	2
4924	1023	"res_0"	"sec_interval"	13	0	0	0
4925	1023	"arg_1"	"timestamp"	7	0	1	1
4926	1023	"arg_2"	"timestamp"	7	0	1	2
4927	1024	"res_0"	"date"	0	0	0	0
4928	1024	"arg_1"	"date"	0	0	1	1
4929	1024	"arg_2"	"sec_interval"	13	0	1	2
4930	1025	"res_0"	"date"	0	0	0	0
4931	1025	"arg_1"	"date"	0	0	1	1
4932	1025	"arg_2"	"month_interval"	32	0	1	2
4933	1026	"res_0"	"time"	7	0	0	0
4934	1026	"arg_1"	"time"	7	0	1	1
4935	1026	"arg_2"	"sec_interval"	13	0	1	2
4936	1027	"res_0"	"timetz"	7	0	0	0
4937	1027	"arg_1"	"timetz"	7	0	1	1
4938	1027	"arg_2"	"sec_interval"	13	0	1	2
4939	1028	"res_0"	"timestamp"	7	0	0	0
4940	1028	"arg_1"	"timestamp"	7	0	1	1
4941	1028	"arg_2"	"sec_interval"	13	0	1	2
4942	1029	"res_0"	"timestamp"	7	0	0	0
4943	1029	"arg_1"	"timestamp"	7	0	1	1
4944	1029	"arg_2"	"month_interval"	32	0	1	2
4945	1030	"res_0"	"timestamptz"	7	0	0	0
4946	1030	"arg_1"	"timestamptz"	7	0	1	1
4947	1030	"arg_2"	"sec_interval"	13	0	1	2
4948	1031	"res_0"	"timestamptz"	7	0	0	0
4949	1031	"arg_1"	"timestamptz"	7	0	1	1
4950	1031	"arg_2"	"month_interval"	32	0	1	2
4951	1032	"res_0"	"date"	0	0	0	0
4952	1032	"arg_1"	"date"	0	0	1	1
4953	1032	"arg_2"	"sec_interval"	13	0	1	2
4954	1033	"res_0"	"date"	0	0	0	0
4955	1033	"arg_1"	"date"	0	0	1	1
4956	1033	"arg_2"	"month_interval"	32	0	1	2
4957	1034	"res_0"	"timestamp"	7	0	0	0
4958	1034	"arg_1"	"timestamp"	7	0	1	1
4959	1034	"arg_2"	"sec_interval"	13	0	1	2
4960	1035	"res_0"	"timestamp"	7	0	0	0
4961	1035	"arg_1"	"timestamp"	7	0	1	1
4962	1035	"arg_2"	"month_interval"	32	0	1	2
4963	1036	"res_0"	"timestamptz"	7	0	0	0
4964	1036	"arg_1"	"timestamptz"	7	0	1	1
4965	1036	"arg_2"	"sec_interval"	13	0	1	2
4966	1037	"res_0"	"timestamptz"	7	0	0	0
4967	1037	"arg_1"	"timestamptz"	7	0	1	1
4968	1037	"arg_2"	"month_interval"	32	0	1	2
4969	1038	"res_0"	"time"	7	0	0	0
4970	1038	"arg_1"	"time"	7	0	1	1
4971	1038	"arg_2"	"sec_interval"	13	0	1	2
4972	1039	"res_0"	"timetz"	7	0	0	0
4973	1039	"arg_1"	"timetz"	7	0	1	1
4974	1039	"arg_2"	"sec_interval"	13	0	1	2
4975	1040	"res_0"	"sec_interval"	13	0	0	0
4976	1041	"res_0"	"int"	32	0	0	0
4977	1041	"arg_1"	"date"	0	0	1	1
4978	1042	"res_0"	"int"	32	0	0	0
4979	1042	"arg_1"	"date"	0	0	1	1
4980	1043	"res_0"	"int"	32	0	0	0
4981	1043	"arg_1"	"date"	0	0	1	1
4982	1044	"res_0"	"int"	32	0	0	0
4983	1044	"arg_1"	"time"	7	0	1	1
4984	1045	"res_0"	"int"	32	0	0	0
4985	1045	"arg_1"	"time"	7	0	1	1
4986	1046	"res_0"	"decimal"	9	3	0	0
4987	1046	"arg_1"	"time"	7	0	1	1
4988	1047	"res_0"	"int"	32	0	0	0
4989	1047	"arg_1"	"timetz"	7	0	1	1
4990	1048	"res_0"	"int"	32	0	0	0
4991	1048	"arg_1"	"timetz"	7	0	1	1
4992	1049	"res_0"	"decimal"	9	3	0	0
4993	1049	"arg_1"	"timetz"	7	0	1	1
4994	1050	"res_0"	"int"	32	0	0	0
4995	1050	"arg_1"	"timestamp"	7	0	1	1
4996	1051	"res_0"	"int"	32	0	0	0
4997	1051	"arg_1"	"timestamp"	7	0	1	1
4998	1052	"res_0"	"int"	32	0	0	0
4999	1052	"arg_1"	"timestamp"	7	0	1	1
5000	1053	"res_0"	"int"	32	0	0	0
5001	1053	"arg_1"	"timestamp"	7	0	1	1
5002	1054	"res_0"	"int"	32	0	0	0
5003	1054	"arg_1"	"timestamp"	7	0	1	1
5004	1055	"res_0"	"decimal"	9	3	0	0
5005	1055	"arg_1"	"timestamp"	7	0	1	1
5006	1056	"res_0"	"int"	32	0	0	0
5007	1056	"arg_1"	"timestamptz"	7	0	1	1
5008	1057	"res_0"	"int"	32	0	0	0
5009	1057	"arg_1"	"timestamptz"	7	0	1	1
5010	1058	"res_0"	"int"	32	0	0	0
5011	1058	"arg_1"	"timestamptz"	7	0	1	1
5012	1059	"res_0"	"int"	32	0	0	0
5013	1059	"arg_1"	"timestamptz"	7	0	1	1
5014	1060	"res_0"	"int"	32	0	0	0
5015	1060	"arg_1"	"timestamptz"	7	0	1	1
5016	1061	"res_0"	"decimal"	9	3	0	0
5017	1061	"arg_1"	"timestamptz"	7	0	1	1
5018	1062	"res_0"	"int"	32	0	0	0
5019	1062	"arg_1"	"month_interval"	32	0	1	1
5020	1063	"res_0"	"int"	32	0	0	0
5021	1063	"arg_1"	"month_interval"	32	0	1	1
5022	1064	"res_0"	"bigint"	64	0	0	0
5023	1064	"arg_1"	"sec_interval"	13	0	1	1
5024	1065	"res_0"	"int"	32	0	0	0
5025	1065	"arg_1"	"sec_interval"	13	0	1	1
5026	1066	"res_0"	"int"	32	0	0	0
5027	1066	"arg_1"	"sec_interval"	13	0	1	1
5028	1067	"res_0"	"int"	32	0	0	0
5029	1067	"arg_1"	"sec_interval"	13	0	1	1
5030	1068	"res_0"	"int"	32	0	0	0
5031	1068	"arg_1"	"date"	0	0	1	1
5032	1069	"res_0"	"int"	32	0	0	0
5033	1069	"arg_1"	"date"	0	0	1	1
5034	1070	"res_0"	"int"	32	0	0	0
5035	1070	"arg_1"	"date"	0	0	1	1
5036	1071	"res_0"	"int"	32	0	0	0
5037	1071	"arg_1"	"date"	0	0	1	1
5038	1072	"res_0"	"int"	32	0	0	0
5039	1072	"arg_1"	"date"	0	0	1	1
5040	1073	"res_0"	"bigint"	64	0	0	0
5041	1073	"arg_1"	"varchar"	0	0	1	1
5042	1073	"arg_2"	"varchar"	0	0	1	2
5043	1074	"res_0"	"bigint"	64	0	0	0
5044	1074	"arg_1"	"varchar"	0	0	1	1
5045	1074	"arg_2"	"varchar"	0	0	1	2
5046	1075	"res_0"	"bigint"	64	0	0	0
5047	1075	"arg_1"	"varchar"	0	0	1	1
5048	1075	"arg_2"	"varchar"	0	0	1	2
5049	1075	"arg_3"	"bigint"	64	0	1	3
5050	1076	"res_0"	"tinyint"	8	0	0	0
5051	1076	"arg_1"	"char"	0	0	1	1
5052	1076	"arg_2"	"boolean"	1	0	1	2
5053	1077	"res_0"	"smallint"	16	0	0	0
5054	1077	"arg_1"	"char"	0	0	1	1
5055	1077	"arg_2"	"boolean"	1	0	1	2
5056	1078	"res_0"	"int"	32	0	0	0
5057	1078	"arg_1"	"char"	0	0	1	1
5058	1078	"arg_2"	"boolean"	1	0	1	2
5059	1079	"res_0"	"char"	0	0	0	0
5060	1079	"arg_1"	"char"	0	0	1	1
5061	1080	"res_0"	"int"	32	0	0	0
5062	1080	"arg_1"	"char"	0	0	1	1
5063	1080	"arg_2"	"char"	0	0	1	2
5064	1081	"res_0"	"int"	32	0	0	0
5065	1081	"arg_1"	"char"	0	0	1	1
5066	1081	"arg_2"	"char"	0	0	1	2
5067	1081	"arg_3"	"int"	32	0	1	3
5068	1082	"res_0"	"char"	0	0	0	0
5069	1082	"arg_1"	"char"	0	0	1	1
5070	1082	"arg_2"	"char"	0	0	1	2
5071	1082	"arg_3"	"int"	32	0	1	3
5072	1083	"res_0"	"char"	0	0	0	0
5073	1083	"arg_1"	"char"	0	0	1	1
5074	1083	"arg_2"	"int"	32	0	1	2
5075	1084	"res_0"	"char"	0	0	0	0
5076	1084	"arg_1"	"char"	0	0	1	1
5077	1084	"arg_2"	"int"	32	0	1	2
5078	1084	"arg_3"	"int"	32	0	1	3
5079	1085	"res_0"	"boolean"	1	0	0	0
5080	1085	"arg_1"	"char"	0	0	1	1
5081	1085	"arg_2"	"char"	0	0	1	2
5082	1086	"res_0"	"boolean"	1	0	0	0
5083	1086	"arg_1"	"char"	0	0	1	1
5084	1086	"arg_2"	"char"	0	0	1	2
5085	1086	"arg_3"	"char"	0	0	1	3
5086	1087	"res_0"	"boolean"	1	0	0	0
5087	1087	"arg_1"	"char"	0	0	1	1
5088	1087	"arg_2"	"char"	0	0	1	2
5089	1088	"res_0"	"boolean"	1	0	0	0
5090	1088	"arg_1"	"char"	0	0	1	1
5091	1088	"arg_2"	"char"	0	0	1	2
5092	1088	"arg_3"	"char"	0	0	1	3
5093	1089	"res_0"	"boolean"	1	0	0	0
5094	1089	"arg_1"	"char"	0	0	1	1
5095	1089	"arg_2"	"char"	0	0	1	2
5096	1090	"res_0"	"boolean"	1	0	0	0
5097	1090	"arg_1"	"char"	0	0	1	1
5098	1090	"arg_2"	"char"	0	0	1	2
5099	1090	"arg_3"	"char"	0	0	1	3
5100	1091	"res_0"	"boolean"	1	0	0	0
5101	1091	"arg_1"	"char"	0	0	1	1
5102	1091	"arg_2"	"char"	0	0	1	2
5103	1092	"res_0"	"boolean"	1	0	0	0
5104	1092	"arg_1"	"char"	0	0	1	1
5105	1092	"arg_2"	"char"	0	0	1	2
5106	1092	"arg_3"	"char"	0	0	1	3
5107	1093	"res_0"	"int"	32	0	0	0
5108	1093	"arg_1"	"char"	0	0	1	1
5109	1093	"arg_2"	"char"	0	0	1	2
5110	1094	"res_0"	"char"	0	0	0	0
5111	1094	"arg_1"	"char"	0	0	1	1
5112	1094	"arg_2"	"int"	32	0	1	2
5113	1095	"res_0"	"char"	0	0	0	0
5114	1095	"arg_1"	"char"	0	0	1	1
5115	1095	"arg_2"	"char"	0	0	1	2
5116	1096	"res_0"	"int"	32	0	0	0
5117	1096	"arg_1"	"char"	0	0	1	1
5118	1097	"res_0"	"char"	0	0	0	0
5119	1097	"arg_1"	"int"	32	0	1	1
5120	1098	"res_0"	"int"	32	0	0	0
5121	1098	"arg_1"	"char"	0	0	1	1
5122	1099	"res_0"	"char"	0	0	0	0
5123	1099	"arg_1"	"char"	0	0	1	1
5124	1099	"arg_2"	"int"	32	0	1	2
5125	1100	"res_0"	"char"	0	0	0	0
5126	1100	"arg_1"	"char"	0	0	1	1
5127	1100	"arg_2"	"int"	32	0	1	2
5128	1101	"res_0"	"char"	0	0	0	0
5129	1101	"arg_1"	"char"	0	0	1	1
5130	1102	"res_0"	"char"	0	0	0	0
5131	1102	"arg_1"	"char"	0	0	1	1
5132	1103	"res_0"	"char"	0	0	0	0
5133	1103	"arg_1"	"char"	0	0	1	1
5134	1104	"res_0"	"char"	0	0	0	0
5135	1104	"arg_1"	"char"	0	0	1	1
5136	1105	"res_0"	"char"	0	0	0	0
5137	1105	"arg_1"	"char"	0	0	1	1
5138	1106	"res_0"	"char"	0	0	0	0
5139	1106	"arg_1"	"char"	0	0	1	1
5140	1106	"arg_2"	"char"	0	0	1	2
5141	1107	"res_0"	"char"	0	0	0	0
5142	1107	"arg_1"	"char"	0	0	1	1
5143	1108	"res_0"	"char"	0	0	0	0
5144	1108	"arg_1"	"char"	0	0	1	1
5145	1108	"arg_2"	"char"	0	0	1	2
5146	1109	"res_0"	"char"	0	0	0	0
5147	1109	"arg_1"	"char"	0	0	1	1
5148	1110	"res_0"	"char"	0	0	0	0
5149	1110	"arg_1"	"char"	0	0	1	1
5150	1110	"arg_2"	"char"	0	0	1	2
5151	1111	"res_0"	"char"	0	0	0	0
5152	1111	"arg_1"	"char"	0	0	1	1
5153	1111	"arg_2"	"int"	32	0	1	2
5154	1112	"res_0"	"char"	0	0	0	0
5155	1112	"arg_1"	"char"	0	0	1	1
5156	1112	"arg_2"	"int"	32	0	1	2
5157	1112	"arg_3"	"char"	0	0	1	3
5158	1113	"res_0"	"char"	0	0	0	0
5159	1113	"arg_1"	"char"	0	0	1	1
5160	1113	"arg_2"	"int"	32	0	1	2
5161	1114	"res_0"	"char"	0	0	0	0
5162	1114	"arg_1"	"char"	0	0	1	1
5163	1114	"arg_2"	"int"	32	0	1	2
5164	1114	"arg_3"	"char"	0	0	1	3
5165	1115	"res_0"	"char"	0	0	0	0
5166	1115	"arg_1"	"char"	0	0	1	1
5167	1115	"arg_2"	"int"	32	0	1	2
5168	1115	"arg_3"	"int"	32	0	1	3
5169	1115	"arg_4"	"char"	0	0	1	4
5170	1116	"res_0"	"char"	0	0	0	0
5171	1116	"arg_1"	"char"	0	0	1	1
5172	1116	"arg_2"	"char"	0	0	1	2
5173	1116	"arg_3"	"char"	0	0	1	3
5174	1117	"res_0"	"char"	0	0	0	0
5175	1117	"arg_1"	"char"	0	0	1	1
5176	1117	"arg_2"	"int"	32	0	1	2
5177	1118	"res_0"	"char"	0	0	0	0
5178	1118	"arg_1"	"int"	32	0	1	1
5179	1119	"res_0"	"int"	32	0	0	0
5180	1119	"arg_1"	"char"	0	0	1	1
5181	1120	"res_0"	"int"	32	0	0	0
5182	1120	"arg_1"	"char"	0	0	1	1
5183	1121	"res_0"	"int"	32	0	0	0
5184	1121	"arg_1"	"char"	0	0	1	1
5185	1122	"res_0"	"char"	0	0	0	0
5186	1122	"arg_1"	"char"	0	0	1	1
5187	1123	"res_0"	"int"	32	0	0	0
5188	1123	"arg_1"	"char"	0	0	1	1
5189	1123	"arg_2"	"char"	0	0	1	2
5190	1124	"res_0"	"int"	32	0	0	0
5191	1124	"arg_1"	"char"	0	0	1	1
5192	1124	"arg_2"	"char"	0	0	1	2
5193	1125	"res_0"	"int"	32	0	0	0
5194	1125	"arg_1"	"char"	0	0	1	1
5195	1125	"arg_2"	"char"	0	0	1	2
5196	1126	"res_0"	"double"	53	0	0	0
5197	1126	"arg_1"	"char"	0	0	1	1
5198	1126	"arg_2"	"char"	0	0	1	2
5199	1127	"res_0"	"char"	0	0	0	0
5200	1127	"arg_1"	"char"	0	0	1	1
5201	1128	"res_0"	"int"	32	0	0	0
5202	1128	"arg_1"	"char"	0	0	1	1
5203	1128	"arg_2"	"char"	0	0	1	2
5204	1129	"res_0"	"int"	32	0	0	0
5205	1129	"arg_1"	"char"	0	0	1	1
5206	1129	"arg_2"	"char"	0	0	1	2
5207	1129	"arg_3"	"int"	32	0	1	3
5208	1129	"arg_4"	"int"	32	0	1	4
5209	1129	"arg_5"	"int"	32	0	1	5
5210	1130	"res_0"	"tinyint"	8	0	0	0
5211	1130	"arg_1"	"varchar"	0	0	1	1
5212	1130	"arg_2"	"boolean"	1	0	1	2
5213	1131	"res_0"	"smallint"	16	0	0	0
5214	1131	"arg_1"	"varchar"	0	0	1	1
5215	1131	"arg_2"	"boolean"	1	0	1	2
5216	1132	"res_0"	"int"	32	0	0	0
5217	1132	"arg_1"	"varchar"	0	0	1	1
5218	1132	"arg_2"	"boolean"	1	0	1	2
5219	1133	"res_0"	"varchar"	0	0	0	0
5220	1133	"arg_1"	"varchar"	0	0	1	1
5221	1134	"res_0"	"int"	32	0	0	0
5222	1134	"arg_1"	"varchar"	0	0	1	1
5223	1134	"arg_2"	"varchar"	0	0	1	2
5224	1135	"res_0"	"int"	32	0	0	0
5225	1135	"arg_1"	"varchar"	0	0	1	1
5226	1135	"arg_2"	"varchar"	0	0	1	2
5227	1135	"arg_3"	"int"	32	0	1	3
5228	1136	"res_0"	"varchar"	0	0	0	0
5229	1136	"arg_1"	"varchar"	0	0	1	1
5230	1136	"arg_2"	"varchar"	0	0	1	2
5231	1136	"arg_3"	"int"	32	0	1	3
5232	1137	"res_0"	"varchar"	0	0	0	0
5233	1137	"arg_1"	"varchar"	0	0	1	1
5234	1137	"arg_2"	"int"	32	0	1	2
5235	1138	"res_0"	"varchar"	0	0	0	0
5236	1138	"arg_1"	"varchar"	0	0	1	1
5237	1138	"arg_2"	"int"	32	0	1	2
5238	1138	"arg_3"	"int"	32	0	1	3
5239	1139	"res_0"	"boolean"	1	0	0	0
5240	1139	"arg_1"	"varchar"	0	0	1	1
5241	1139	"arg_2"	"varchar"	0	0	1	2
5242	1140	"res_0"	"boolean"	1	0	0	0
5243	1140	"arg_1"	"varchar"	0	0	1	1
5244	1140	"arg_2"	"varchar"	0	0	1	2
5245	1140	"arg_3"	"varchar"	0	0	1	3
5246	1141	"res_0"	"boolean"	1	0	0	0
5247	1141	"arg_1"	"varchar"	0	0	1	1
5248	1141	"arg_2"	"varchar"	0	0	1	2
5249	1142	"res_0"	"boolean"	1	0	0	0
5250	1142	"arg_1"	"varchar"	0	0	1	1
5251	1142	"arg_2"	"varchar"	0	0	1	2
5252	1142	"arg_3"	"varchar"	0	0	1	3
5253	1143	"res_0"	"boolean"	1	0	0	0
5254	1143	"arg_1"	"varchar"	0	0	1	1
5255	1143	"arg_2"	"varchar"	0	0	1	2
5256	1144	"res_0"	"boolean"	1	0	0	0
5257	1144	"arg_1"	"varchar"	0	0	1	1
5258	1144	"arg_2"	"varchar"	0	0	1	2
5259	1144	"arg_3"	"varchar"	0	0	1	3
5260	1145	"res_0"	"boolean"	1	0	0	0
5261	1145	"arg_1"	"varchar"	0	0	1	1
5262	1145	"arg_2"	"varchar"	0	0	1	2
5263	1146	"res_0"	"boolean"	1	0	0	0
5264	1146	"arg_1"	"varchar"	0	0	1	1
5265	1146	"arg_2"	"varchar"	0	0	1	2
5266	1146	"arg_3"	"varchar"	0	0	1	3
5267	1147	"res_0"	"int"	32	0	0	0
5268	1147	"arg_1"	"varchar"	0	0	1	1
5269	1147	"arg_2"	"varchar"	0	0	1	2
5270	1148	"res_0"	"varchar"	0	0	0	0
5271	1148	"arg_1"	"varchar"	0	0	1	1
5272	1148	"arg_2"	"int"	32	0	1	2
5273	1149	"res_0"	"varchar"	0	0	0	0
5274	1149	"arg_1"	"varchar"	0	0	1	1
5275	1149	"arg_2"	"varchar"	0	0	1	2
5276	1150	"res_0"	"int"	32	0	0	0
5277	1150	"arg_1"	"varchar"	0	0	1	1
5278	1151	"res_0"	"varchar"	0	0	0	0
5279	1151	"arg_1"	"int"	32	0	1	1
5280	1152	"res_0"	"int"	32	0	0	0
5281	1152	"arg_1"	"varchar"	0	0	1	1
5282	1153	"res_0"	"varchar"	0	0	0	0
5283	1153	"arg_1"	"varchar"	0	0	1	1
5284	1153	"arg_2"	"int"	32	0	1	2
5285	1154	"res_0"	"varchar"	0	0	0	0
5286	1154	"arg_1"	"varchar"	0	0	1	1
5287	1154	"arg_2"	"int"	32	0	1	2
5288	1155	"res_0"	"varchar"	0	0	0	0
5289	1155	"arg_1"	"varchar"	0	0	1	1
5290	1156	"res_0"	"varchar"	0	0	0	0
5291	1156	"arg_1"	"varchar"	0	0	1	1
5292	1157	"res_0"	"varchar"	0	0	0	0
5293	1157	"arg_1"	"varchar"	0	0	1	1
5294	1158	"res_0"	"varchar"	0	0	0	0
5295	1158	"arg_1"	"varchar"	0	0	1	1
5296	1159	"res_0"	"varchar"	0	0	0	0
5297	1159	"arg_1"	"varchar"	0	0	1	1
5298	1160	"res_0"	"varchar"	0	0	0	0
5299	1160	"arg_1"	"varchar"	0	0	1	1
5300	1160	"arg_2"	"varchar"	0	0	1	2
5301	1161	"res_0"	"varchar"	0	0	0	0
5302	1161	"arg_1"	"varchar"	0	0	1	1
5303	1162	"res_0"	"varchar"	0	0	0	0
5304	1162	"arg_1"	"varchar"	0	0	1	1
5305	1162	"arg_2"	"varchar"	0	0	1	2
5306	1163	"res_0"	"varchar"	0	0	0	0
5307	1163	"arg_1"	"varchar"	0	0	1	1
5308	1164	"res_0"	"varchar"	0	0	0	0
5309	1164	"arg_1"	"varchar"	0	0	1	1
5310	1164	"arg_2"	"varchar"	0	0	1	2
5311	1165	"res_0"	"varchar"	0	0	0	0
5312	1165	"arg_1"	"varchar"	0	0	1	1
5313	1165	"arg_2"	"int"	32	0	1	2
5314	1166	"res_0"	"varchar"	0	0	0	0
5315	1166	"arg_1"	"varchar"	0	0	1	1
5316	1166	"arg_2"	"int"	32	0	1	2
5317	1166	"arg_3"	"varchar"	0	0	1	3
5318	1167	"res_0"	"varchar"	0	0	0	0
5319	1167	"arg_1"	"varchar"	0	0	1	1
5320	1167	"arg_2"	"int"	32	0	1	2
5321	1168	"res_0"	"varchar"	0	0	0	0
5322	1168	"arg_1"	"varchar"	0	0	1	1
5323	1168	"arg_2"	"int"	32	0	1	2
5324	1168	"arg_3"	"varchar"	0	0	1	3
5325	1169	"res_0"	"varchar"	0	0	0	0
5326	1169	"arg_1"	"varchar"	0	0	1	1
5327	1169	"arg_2"	"int"	32	0	1	2
5328	1169	"arg_3"	"int"	32	0	1	3
5329	1169	"arg_4"	"varchar"	0	0	1	4
5330	1170	"res_0"	"varchar"	0	0	0	0
5331	1170	"arg_1"	"varchar"	0	0	1	1
5332	1170	"arg_2"	"varchar"	0	0	1	2
5333	1170	"arg_3"	"varchar"	0	0	1	3
5334	1171	"res_0"	"varchar"	0	0	0	0
5335	1171	"arg_1"	"varchar"	0	0	1	1
5336	1171	"arg_2"	"int"	32	0	1	2
5337	1172	"res_0"	"varchar"	0	0	0	0
5338	1172	"arg_1"	"int"	32	0	1	1
5339	1173	"res_0"	"int"	32	0	0	0
5340	1173	"arg_1"	"varchar"	0	0	1	1
5341	1174	"res_0"	"int"	32	0	0	0
5342	1174	"arg_1"	"varchar"	0	0	1	1
5343	1175	"res_0"	"int"	32	0	0	0
5344	1175	"arg_1"	"varchar"	0	0	1	1
5345	1176	"res_0"	"varchar"	0	0	0	0
5346	1176	"arg_1"	"varchar"	0	0	1	1
5347	1177	"res_0"	"int"	32	0	0	0
5348	1177	"arg_1"	"varchar"	0	0	1	1
5349	1177	"arg_2"	"varchar"	0	0	1	2
5350	1178	"res_0"	"int"	32	0	0	0
5351	1178	"arg_1"	"varchar"	0	0	1	1
5352	1178	"arg_2"	"varchar"	0	0	1	2
5353	1179	"res_0"	"int"	32	0	0	0
5354	1179	"arg_1"	"varchar"	0	0	1	1
5355	1179	"arg_2"	"varchar"	0	0	1	2
5356	1180	"res_0"	"double"	53	0	0	0
5357	1180	"arg_1"	"varchar"	0	0	1	1
5358	1180	"arg_2"	"varchar"	0	0	1	2
5359	1181	"res_0"	"varchar"	0	0	0	0
5360	1181	"arg_1"	"varchar"	0	0	1	1
5361	1182	"res_0"	"int"	32	0	0	0
5362	1182	"arg_1"	"varchar"	0	0	1	1
5363	1182	"arg_2"	"varchar"	0	0	1	2
5364	1183	"res_0"	"int"	32	0	0	0
5365	1183	"arg_1"	"varchar"	0	0	1	1
5366	1183	"arg_2"	"varchar"	0	0	1	2
5367	1183	"arg_3"	"int"	32	0	1	3
5368	1183	"arg_4"	"int"	32	0	1	4
5369	1183	"arg_5"	"int"	32	0	1	5
5370	1184	"res_0"	"tinyint"	8	0	0	0
5371	1184	"arg_1"	"clob"	0	0	1	1
5372	1184	"arg_2"	"boolean"	1	0	1	2
5373	1185	"res_0"	"smallint"	16	0	0	0
5374	1185	"arg_1"	"clob"	0	0	1	1
5375	1185	"arg_2"	"boolean"	1	0	1	2
5376	1186	"res_0"	"int"	32	0	0	0
5377	1186	"arg_1"	"clob"	0	0	1	1
5378	1186	"arg_2"	"boolean"	1	0	1	2
5379	1187	"res_0"	"clob"	0	0	0	0
5380	1187	"arg_1"	"clob"	0	0	1	1
5381	1188	"res_0"	"int"	32	0	0	0
5382	1188	"arg_1"	"clob"	0	0	1	1
5383	1188	"arg_2"	"clob"	0	0	1	2
5384	1189	"res_0"	"int"	32	0	0	0
5385	1189	"arg_1"	"clob"	0	0	1	1
5386	1189	"arg_2"	"clob"	0	0	1	2
5387	1189	"arg_3"	"int"	32	0	1	3
5388	1190	"res_0"	"clob"	0	0	0	0
5389	1190	"arg_1"	"clob"	0	0	1	1
5390	1190	"arg_2"	"clob"	0	0	1	2
5391	1190	"arg_3"	"int"	32	0	1	3
5392	1191	"res_0"	"clob"	0	0	0	0
5393	1191	"arg_1"	"clob"	0	0	1	1
5394	1191	"arg_2"	"int"	32	0	1	2
5395	1192	"res_0"	"clob"	0	0	0	0
5396	1192	"arg_1"	"clob"	0	0	1	1
5397	1192	"arg_2"	"int"	32	0	1	2
5398	1192	"arg_3"	"int"	32	0	1	3
5399	1193	"res_0"	"boolean"	1	0	0	0
5400	1193	"arg_1"	"clob"	0	0	1	1
5401	1193	"arg_2"	"clob"	0	0	1	2
5402	1194	"res_0"	"boolean"	1	0	0	0
5403	1194	"arg_1"	"clob"	0	0	1	1
5404	1194	"arg_2"	"clob"	0	0	1	2
5405	1194	"arg_3"	"clob"	0	0	1	3
5406	1195	"res_0"	"boolean"	1	0	0	0
5407	1195	"arg_1"	"clob"	0	0	1	1
5408	1195	"arg_2"	"clob"	0	0	1	2
5409	1196	"res_0"	"boolean"	1	0	0	0
5410	1196	"arg_1"	"clob"	0	0	1	1
5411	1196	"arg_2"	"clob"	0	0	1	2
5412	1196	"arg_3"	"clob"	0	0	1	3
5413	1197	"res_0"	"boolean"	1	0	0	0
5414	1197	"arg_1"	"clob"	0	0	1	1
5415	1197	"arg_2"	"clob"	0	0	1	2
5416	1198	"res_0"	"boolean"	1	0	0	0
5417	1198	"arg_1"	"clob"	0	0	1	1
5418	1198	"arg_2"	"clob"	0	0	1	2
5419	1198	"arg_3"	"clob"	0	0	1	3
5420	1199	"res_0"	"boolean"	1	0	0	0
5421	1199	"arg_1"	"clob"	0	0	1	1
5422	1199	"arg_2"	"clob"	0	0	1	2
5423	1200	"res_0"	"boolean"	1	0	0	0
5424	1200	"arg_1"	"clob"	0	0	1	1
5425	1200	"arg_2"	"clob"	0	0	1	2
5426	1200	"arg_3"	"clob"	0	0	1	3
5427	1201	"res_0"	"int"	32	0	0	0
5428	1201	"arg_1"	"clob"	0	0	1	1
5429	1201	"arg_2"	"clob"	0	0	1	2
5430	1202	"res_0"	"clob"	0	0	0	0
5431	1202	"arg_1"	"clob"	0	0	1	1
5432	1202	"arg_2"	"int"	32	0	1	2
5433	1203	"res_0"	"clob"	0	0	0	0
5434	1203	"arg_1"	"clob"	0	0	1	1
5435	1203	"arg_2"	"clob"	0	0	1	2
5436	1204	"res_0"	"int"	32	0	0	0
5437	1204	"arg_1"	"clob"	0	0	1	1
5438	1205	"res_0"	"clob"	0	0	0	0
5439	1205	"arg_1"	"int"	32	0	1	1
5440	1206	"res_0"	"int"	32	0	0	0
5441	1206	"arg_1"	"clob"	0	0	1	1
5442	1207	"res_0"	"clob"	0	0	0	0
5443	1207	"arg_1"	"clob"	0	0	1	1
5444	1207	"arg_2"	"int"	32	0	1	2
5445	1208	"res_0"	"clob"	0	0	0	0
5446	1208	"arg_1"	"clob"	0	0	1	1
5447	1208	"arg_2"	"int"	32	0	1	2
5448	1209	"res_0"	"clob"	0	0	0	0
5449	1209	"arg_1"	"clob"	0	0	1	1
5450	1210	"res_0"	"clob"	0	0	0	0
5451	1210	"arg_1"	"clob"	0	0	1	1
5452	1211	"res_0"	"clob"	0	0	0	0
5453	1211	"arg_1"	"clob"	0	0	1	1
5454	1212	"res_0"	"clob"	0	0	0	0
5455	1212	"arg_1"	"clob"	0	0	1	1
5456	1213	"res_0"	"clob"	0	0	0	0
5457	1213	"arg_1"	"clob"	0	0	1	1
5458	1214	"res_0"	"clob"	0	0	0	0
5459	1214	"arg_1"	"clob"	0	0	1	1
5460	1214	"arg_2"	"clob"	0	0	1	2
5461	1215	"res_0"	"clob"	0	0	0	0
5462	1215	"arg_1"	"clob"	0	0	1	1
5463	1216	"res_0"	"clob"	0	0	0	0
5464	1216	"arg_1"	"clob"	0	0	1	1
5465	1216	"arg_2"	"clob"	0	0	1	2
5466	1217	"res_0"	"clob"	0	0	0	0
5467	1217	"arg_1"	"clob"	0	0	1	1
5468	1218	"res_0"	"clob"	0	0	0	0
5469	1218	"arg_1"	"clob"	0	0	1	1
5470	1218	"arg_2"	"clob"	0	0	1	2
5471	1219	"res_0"	"clob"	0	0	0	0
5472	1219	"arg_1"	"clob"	0	0	1	1
5473	1219	"arg_2"	"int"	32	0	1	2
5474	1220	"res_0"	"clob"	0	0	0	0
5475	1220	"arg_1"	"clob"	0	0	1	1
5476	1220	"arg_2"	"int"	32	0	1	2
5477	1220	"arg_3"	"clob"	0	0	1	3
5478	1221	"res_0"	"clob"	0	0	0	0
5479	1221	"arg_1"	"clob"	0	0	1	1
5480	1221	"arg_2"	"int"	32	0	1	2
5481	1222	"res_0"	"clob"	0	0	0	0
5482	1222	"arg_1"	"clob"	0	0	1	1
5483	1222	"arg_2"	"int"	32	0	1	2
5484	1222	"arg_3"	"clob"	0	0	1	3
5485	1223	"res_0"	"clob"	0	0	0	0
5486	1223	"arg_1"	"clob"	0	0	1	1
5487	1223	"arg_2"	"int"	32	0	1	2
5488	1223	"arg_3"	"int"	32	0	1	3
5489	1223	"arg_4"	"clob"	0	0	1	4
5490	1224	"res_0"	"clob"	0	0	0	0
5491	1224	"arg_1"	"clob"	0	0	1	1
5492	1224	"arg_2"	"clob"	0	0	1	2
5493	1224	"arg_3"	"clob"	0	0	1	3
5494	1225	"res_0"	"clob"	0	0	0	0
5495	1225	"arg_1"	"clob"	0	0	1	1
5496	1225	"arg_2"	"int"	32	0	1	2
5497	1226	"res_0"	"clob"	0	0	0	0
5498	1226	"arg_1"	"int"	32	0	1	1
5499	1227	"res_0"	"int"	32	0	0	0
5500	1227	"arg_1"	"clob"	0	0	1	1
5501	1228	"res_0"	"int"	32	0	0	0
5502	1228	"arg_1"	"clob"	0	0	1	1
5503	1229	"res_0"	"int"	32	0	0	0
5504	1229	"arg_1"	"clob"	0	0	1	1
5505	1230	"res_0"	"clob"	0	0	0	0
5506	1230	"arg_1"	"clob"	0	0	1	1
5507	1231	"res_0"	"int"	32	0	0	0
5508	1231	"arg_1"	"clob"	0	0	1	1
5509	1231	"arg_2"	"clob"	0	0	1	2
5510	1232	"res_0"	"int"	32	0	0	0
5511	1232	"arg_1"	"clob"	0	0	1	1
5512	1232	"arg_2"	"clob"	0	0	1	2
5513	1233	"res_0"	"int"	32	0	0	0
5514	1233	"arg_1"	"clob"	0	0	1	1
5515	1233	"arg_2"	"clob"	0	0	1	2
5516	1234	"res_0"	"double"	53	0	0	0
5517	1234	"arg_1"	"clob"	0	0	1	1
5518	1234	"arg_2"	"clob"	0	0	1	2
5519	1235	"res_0"	"clob"	0	0	0	0
5520	1235	"arg_1"	"clob"	0	0	1	1
5521	1236	"res_0"	"int"	32	0	0	0
5522	1236	"arg_1"	"clob"	0	0	1	1
5523	1236	"arg_2"	"clob"	0	0	1	2
5524	1237	"res_0"	"int"	32	0	0	0
5525	1237	"arg_1"	"clob"	0	0	1	1
5526	1237	"arg_2"	"clob"	0	0	1	2
5527	1237	"arg_3"	"int"	32	0	1	3
5528	1237	"arg_4"	"int"	32	0	1	4
5529	1237	"arg_5"	"int"	32	0	1	5
5530	1238	"res_0"	"table"	0	0	0	0
5531	1238	"arg_1"	"varchar"	0	0	1	1
5532	1238	"arg_2"	"varchar"	0	0	1	2
5533	1238	"arg_3"	"varchar"	0	0	1	3
5534	1238	"arg_4"	"varchar"	0	0	1	4
5535	1238	"arg_5"	"varchar"	0	0	1	5
5536	1238	"arg_6"	"varchar"	0	0	1	6
5537	1238	"arg_7"	"bigint"	64	0	1	7
5538	1238	"arg_8"	"bigint"	64	0	1	8
5539	1238	"arg_9"	"int"	32	0	1	9
5540	1239	"res_0"	"table"	0	0	0	0
5541	1239	"arg_1"	"varchar"	0	0	1	1
5542	1239	"arg_2"	"varchar"	0	0	1	2
5543	29	"res"	"boolean"	1	0	0	0
5544	29	"arg"	"oid"	63	0	1	1
5545	41	"res"	"any"	0	0	0	0
5546	41	"arg"	"any"	0	0	1	1
5547	42	"res"	"boolean"	1	0	0	0
5548	42	"arg"	"any"	0	0	1	1
5549	43	"res"	"boolean"	1	0	0	0
5550	43	"arg"	"any"	0	0	1	1
5551	48	"res"	"any"	0	0	0	0
5552	48	"arg"	"any"	0	0	1	1
5553	49	"res"	"any"	0	0	0	0
5554	49	"arg"	"any"	0	0	1	1
5555	53	"res"	"hugeint"	128	0	0	0
5556	53	"arg"	"tinyint"	8	0	1	1
5557	54	"res"	"hugeint"	128	0	0	0
5558	54	"arg"	"smallint"	16	0	1	1
5559	55	"res"	"hugeint"	128	0	0	0
5560	55	"arg"	"int"	32	0	1	1
5561	56	"res"	"hugeint"	128	0	0	0
5562	56	"arg"	"bigint"	64	0	1	1
5563	57	"res"	"hugeint"	128	0	0	0
5564	57	"arg"	"hugeint"	128	0	1	1
5565	58	"res"	"wrd"	64	0	0	0
5566	58	"arg"	"wrd"	64	0	1	1
5567	59	"res"	"decimal"	39	0	0	0
5568	59	"arg"	"decimal"	2	0	1	1
5569	60	"res"	"decimal"	39	0	0	0
5570	60	"arg"	"decimal"	4	0	1	1
5571	61	"res"	"decimal"	39	0	0	0
5572	61	"arg"	"decimal"	9	0	1	1
5573	62	"res"	"decimal"	39	0	0	0
5574	62	"arg"	"decimal"	18	0	1	1
5575	63	"res"	"decimal"	39	0	0	0
5576	63	"arg"	"decimal"	39	0	1	1
5577	64	"res"	"hugeint"	128	0	0	0
5578	64	"arg"	"tinyint"	8	0	1	1
5579	65	"res"	"hugeint"	128	0	0	0
5580	65	"arg"	"smallint"	16	0	1	1
5581	66	"res"	"hugeint"	128	0	0	0
5582	66	"arg"	"int"	32	0	1	1
5583	67	"res"	"hugeint"	128	0	0	0
5584	67	"arg"	"bigint"	64	0	1	1
5585	68	"res"	"hugeint"	128	0	0	0
5586	68	"arg"	"hugeint"	128	0	1	1
5587	69	"res"	"decimal"	39	0	0	0
5588	69	"arg"	"decimal"	2	0	1	1
5589	70	"res"	"decimal"	39	0	0	0
5590	70	"arg"	"decimal"	4	0	1	1
5591	71	"res"	"decimal"	39	0	0	0
5592	71	"arg"	"decimal"	9	0	1	1
5593	72	"res"	"decimal"	39	0	0	0
5594	72	"arg"	"decimal"	18	0	1	1
5595	73	"res"	"decimal"	39	0	0	0
5596	73	"arg"	"decimal"	39	0	1	1
5597	88	"res"	"real"	24	0	0	0
5598	88	"arg"	"real"	24	0	1	1
5599	89	"res"	"real"	24	0	0	0
5600	89	"arg"	"real"	24	0	1	1
5601	90	"res"	"double"	53	0	0	0
5602	90	"arg"	"double"	53	0	1	1
5603	91	"res"	"double"	53	0	0	0
5604	91	"arg"	"double"	53	0	1	1
5605	92	"res"	"double"	53	0	0	0
5606	92	"arg"	"double"	53	0	1	1
5607	93	"res"	"wrd"	64	0	0	0
5608	94	"res"	"wrd"	64	0	0	0
5631	5630	"name"	"varchar"	1024	0	0	0
5632	5630	"value"	"varchar"	2048	0	0	1
5634	5633	"name"	"varchar"	1024	0	0	0
5640	5639	"name"	"varchar"	2048	0	0	0
5660	5659	"val"	"clob"	0	0	1	0
5661	5659	"pat"	"clob"	0	0	1	1
5662	5659	"esc"	"clob"	0	0	1	2
5665	5664	"val"	"clob"	0	0	1	0
5666	5664	"pat"	"clob"	0	0	1	1
5667	5664	"esc"	"clob"	0	0	1	2
5670	5669	"val"	"clob"	0	0	1	0
5671	5669	"pat"	"clob"	0	0	1	1
5674	5673	"val"	"clob"	0	0	1	0
5675	5673	"pat"	"clob"	0	0	1	1
5678	5677	"result"	"double"	53	0	0	0
5679	5677	"r"	"double"	53	0	1	1
5682	5681	"result"	"double"	53	0	0	0
5683	5681	"d"	"double"	53	0	1	1
5689	5688	"result"	"clob"	0	0	0	0
5690	5688	"theurl"	"url"	0	0	1	1
5693	5692	"result"	"clob"	0	0	0	0
5694	5692	"theurl"	"url"	0	0	1	1
5697	5696	"result"	"clob"	0	0	0	0
5698	5696	"theurl"	"url"	0	0	1	1
5701	5700	"result"	"clob"	0	0	0	0
5702	5700	"theurl"	"url"	0	0	1	1
5705	5704	"result"	"clob"	0	0	0	0
5706	5704	"theurl"	"url"	0	0	1	1
5709	5708	"result"	"clob"	0	0	0	0
5710	5708	"theurl"	"url"	0	0	1	1
5713	5712	"result"	"clob"	0	0	0	0
5714	5712	"theurl"	"url"	0	0	1	1
5717	5716	"result"	"clob"	0	0	0	0
5718	5716	"theurl"	"url"	0	0	1	1
5721	5720	"result"	"clob"	0	0	0	0
5722	5720	"theurl"	"url"	0	0	1	1
5725	5724	"result"	"clob"	0	0	0	0
5726	5724	"theurl"	"url"	0	0	1	1
5729	5728	"result"	"clob"	0	0	0	0
5730	5728	"theurl"	"url"	0	0	1	1
5733	5732	"result"	"clob"	0	0	0	0
5734	5732	"theurl"	"url"	0	0	1	1
5737	5736	"result"	"clob"	0	0	0	0
5738	5736	"theurl"	"url"	0	0	1	1
5741	5740	"result"	"boolean"	1	0	0	0
5742	5740	"theurl"	"url"	0	0	1	1
5745	5744	"result"	"url"	0	0	0	0
5746	5744	"protocol"	"clob"	0	0	1	1
5747	5744	"hostname"	"clob"	0	0	1	2
5748	5744	"port"	"int"	32	0	1	3
5749	5744	"file"	"clob"	0	0	1	4
5752	5751	"result"	"url"	0	0	0	0
5753	5751	"protocol"	"clob"	0	0	1	1
5754	5751	"hostname"	"clob"	0	0	1	2
5755	5751	"file"	"clob"	0	0	1	3
5758	5757	"result"	"date"	0	0	0	0
5759	5757	"s"	"clob"	0	0	1	1
5760	5757	"format"	"clob"	0	0	1	2
5763	5762	"result"	"clob"	0	0	0	0
5764	5762	"d"	"date"	0	0	1	1
5765	5762	"format"	"clob"	0	0	1	2
5768	5767	"result"	"time"	1	0	0	0
5769	5767	"s"	"clob"	0	0	1	1
5770	5767	"format"	"clob"	0	0	1	2
5773	5772	"result"	"clob"	0	0	0	0
5774	5772	"d"	"time"	1	0	1	1
5775	5772	"format"	"clob"	0	0	1	2
5778	5777	"result"	"timestamp"	7	0	0	0
5779	5777	"s"	"clob"	0	0	1	1
5780	5777	"format"	"clob"	0	0	1	2
5783	5782	"result"	"clob"	0	0	0	0
5784	5782	"d"	"timestamp"	7	0	1	1
5785	5782	"format"	"clob"	0	0	1	2
5789	5788	"result"	"inet"	0	0	0	0
5790	5788	"p"	"inet"	0	0	1	1
5793	5792	"result"	"clob"	0	0	0	0
5794	5792	"p"	"inet"	0	0	1	1
5797	5796	"result"	"int"	32	0	0	0
5798	5796	"p"	"inet"	0	0	1	1
5801	5800	"result"	"inet"	0	0	0	0
5802	5800	"p"	"inet"	0	0	1	1
5803	5800	"mask"	"int"	32	0	1	2
5806	5805	"result"	"inet"	0	0	0	0
5807	5805	"p"	"inet"	0	0	1	1
5810	5809	"result"	"inet"	0	0	0	0
5811	5809	"p"	"inet"	0	0	1	1
5814	5813	"result"	"inet"	0	0	0	0
5815	5813	"p"	"inet"	0	0	1	1
5818	5817	"result"	"clob"	0	0	0	0
5819	5817	"p"	"inet"	0	0	1	1
5822	5821	"result"	"clob"	0	0	0	0
5823	5821	"p"	"inet"	0	0	1	1
5826	5825	"result"	"boolean"	1	0	0	0
5827	5825	"i1"	"inet"	0	0	1	1
5828	5825	"i2"	"inet"	0	0	1	2
5831	5830	"result"	"boolean"	1	0	0	0
5832	5830	"i1"	"inet"	0	0	1	1
5833	5830	"i2"	"inet"	0	0	1	2
5836	5835	"result"	"boolean"	1	0	0	0
5837	5835	"i1"	"inet"	0	0	1	1
5838	5835	"i2"	"inet"	0	0	1	2
5841	5840	"result"	"boolean"	1	0	0	0
5842	5840	"i1"	"inet"	0	0	1	1
5843	5840	"i2"	"inet"	0	0	1	2
5846	5845	"id"	"oid"	63	0	0	0
5847	5845	"owner"	"clob"	0	0	0	1
5848	5845	"defined"	"timestamp"	7	0	0	2
5849	5845	"query"	"clob"	0	0	0	3
5850	5845	"pipe"	"clob"	0	0	0	4
5851	5845	"plan"	"clob"	0	0	0	5
5852	5845	"mal"	"int"	32	0	0	6
5853	5845	"optimize"	"bigint"	64	0	0	7
5856	5855	"id"	"oid"	63	0	0	0
5857	5855	"start"	"timestamp"	7	0	0	1
5858	5855	"stop"	"timestamp"	7	0	0	2
5859	5855	"arguments"	"clob"	0	0	0	3
5860	5855	"tuples"	"wrd"	64	0	0	4
5861	5855	"run"	"bigint"	64	0	0	5
5862	5855	"ship"	"bigint"	64	0	0	6
5863	5855	"cpu"	"int"	32	0	0	7
5864	5855	"io"	"int"	32	0	0	8
5910	5909	"threshold"	"smallint"	16	0	1	0
5915	5914	"event"	"int"	32	0	0	0
5916	5914	"clk"	"varchar"	20	0	0	1
5917	5914	"pc"	"varchar"	50	0	0	2
5918	5914	"thread"	"int"	32	0	0	3
5919	5914	"ticks"	"bigint"	64	0	0	4
5920	5914	"rrsmb"	"bigint"	64	0	0	5
5921	5914	"vmmb"	"bigint"	64	0	0	6
5922	5914	"reads"	"bigint"	64	0	0	7
5923	5914	"writes"	"bigint"	64	0	0	8
5924	5914	"minflt"	"bigint"	64	0	0	9
5925	5914	"majflt"	"bigint"	64	0	0	10
5926	5914	"nvcsw"	"bigint"	64	0	0	11
5927	5914	"stmt"	"clob"	0	0	0	12
5945	5944	"host"	"clob"	0	0	1	0
5946	5944	"port"	"int"	32	0	1	1
5949	5948	"ticks"	"int"	32	0	1	0
5952	5951	"result"	"timestamp"	7	0	0	0
5953	5951	"sec"	"bigint"	64	0	1	1
5956	5955	"result"	"timestamp"	7	0	0	0
5957	5955	"sec"	"int"	32	0	1	1
5960	5959	"result"	"int"	32	0	0	0
5961	5959	"ts"	"timestamp"	7	0	1	1
5964	5963	"result"	"int"	32	0	0	0
5965	5963	"ts"	"timestamptz"	7	0	1	1
5968	5967	"sys"	"clob"	0	0	1	0
5969	5967	"tab"	"clob"	0	0	1	1
5972	5971	"sys"	"clob"	0	0	1	0
5973	5971	"tab"	"clob"	0	0	1	1
5976	5975	"sys"	"clob"	0	0	1	0
5977	5975	"tab"	"clob"	0	0	1	1
5980	5979	"sch"	"varchar"	100	0	0	0
5981	5979	"usr"	"varchar"	100	0	0	1
5982	5979	"dep_type"	"varchar"	32	0	0	2
5985	5984	"sch"	"varchar"	100	0	0	0
5986	5984	"usr"	"varchar"	100	0	0	1
5987	5984	"dep_type"	"varchar"	32	0	0	2
5990	5989	"sch"	"varchar"	100	0	0	0
5991	5989	"usr"	"varchar"	100	0	0	1
5992	5989	"dep_type"	"varchar"	32	0	0	2
5995	5994	"sch"	"varchar"	100	0	0	0
5996	5994	"usr"	"varchar"	100	0	0	1
5997	5994	"dep_type"	"varchar"	32	0	0	2
6000	5999	"sch"	"varchar"	100	0	0	0
6001	5999	"usr"	"varchar"	100	0	0	1
6002	5999	"dep_type"	"varchar"	32	0	0	2
6005	6004	"sch"	"varchar"	100	0	0	0
6006	6004	"usr"	"varchar"	100	0	0	1
6007	6004	"dep_type"	"varchar"	32	0	0	2
6010	6009	"sch"	"varchar"	100	0	0	0
6011	6009	"usr"	"varchar"	100	0	0	1
6012	6009	"dep_type"	"varchar"	32	0	0	2
6015	6014	"sch"	"varchar"	100	0	0	0
6016	6014	"usr"	"varchar"	100	0	0	1
6017	6014	"dep_type"	"varchar"	32	0	0	2
6020	6019	"sch"	"varchar"	100	0	0	0
6021	6019	"usr"	"varchar"	100	0	0	1
6022	6019	"dep_type"	"varchar"	32	0	0	2
6025	6024	"sch"	"varchar"	100	0	0	0
6026	6024	"usr"	"varchar"	100	0	0	1
6027	6024	"dep_type"	"varchar"	32	0	0	2
6030	6029	"sch"	"varchar"	100	0	0	0
6031	6029	"usr"	"varchar"	100	0	0	1
6032	6029	"dep_type"	"varchar"	32	0	0	2
6035	6034	"sch"	"varchar"	100	0	0	0
6036	6034	"usr"	"varchar"	100	0	0	1
6037	6034	"dep_type"	"varchar"	32	0	0	2
6040	6039	"sch"	"varchar"	100	0	0	0
6041	6039	"usr"	"varchar"	100	0	0	1
6042	6039	"dep_type"	"varchar"	32	0	0	2
6045	6044	"sch"	"varchar"	100	0	0	0
6046	6044	"usr"	"varchar"	100	0	0	1
6047	6044	"dep_type"	"varchar"	32	0	0	2
6050	6049	"sch"	"varchar"	100	0	0	0
6051	6049	"usr"	"varchar"	100	0	0	1
6052	6049	"dep_type"	"varchar"	32	0	0	2
6055	6054	"sch"	"varchar"	100	0	0	0
6056	6054	"usr"	"varchar"	100	0	0	1
6057	6054	"dep_type"	"varchar"	32	0	0	2
6060	6059	"sch"	"varchar"	100	0	0	0
6061	6059	"usr"	"varchar"	100	0	0	1
6062	6059	"dep_type"	"varchar"	32	0	0	2
6065	6064	"result"	"clob"	0	0	0	0
6066	6064	"username"	"clob"	0	0	1	1
6069	6068	"user"	"clob"	0	0	0	0
6070	6068	"login"	"timestamp"	7	0	0	1
6071	6068	"sessiontimeout"	"bigint"	64	0	0	2
6072	6068	"lastcommand"	"timestamp"	7	0	0	3
6073	6068	"querytimeout"	"bigint"	64	0	0	4
6074	6068	"active"	"boolean"	1	0	0	5
6085	6084	"delay"	"tinyint"	8	0	1	0
6088	6087	"delay"	"tinyint"	8	0	1	0
6089	6087	"force"	"boolean"	1	0	1	1
6092	6091	"query"	"bigint"	64	0	1	0
6095	6094	"query"	"bigint"	64	0	1	0
6096	6094	"session"	"bigint"	64	0	1	1
6099	6098	"timeout"	"bigint"	64	0	1	0
6102	6101	"result"	"varchar"	32	0	0	0
6103	6101	"s1"	"varchar"	32	0	1	1
6104	6101	"st"	"int"	32	0	1	2
6105	6101	"len"	"int"	32	0	1	3
6106	6101	"s3"	"varchar"	32	0	1	4
6109	6108	"result"	"double"	53	0	0	0
6110	6108	"num"	"double"	53	0	1	1
6111	6108	"prc"	"int"	32	0	1	2
6114	6113	"result"	"double"	53	0	0	0
6115	6113	"num"	"double"	53	0	1	1
6116	6113	"prc"	"int"	32	0	1	2
6117	6113	"truncat"	"int"	32	0	1	3
6120	6119	"result"	"clob"	0	0	0	0
6121	6119	"num"	"double"	53	0	1	1
6122	6119	"prc"	"int"	32	0	1	2
6123	6119	"truncat"	"int"	32	0	1	3
6126	6125	"result"	"double"	53	0	0	0
6127	6125	"pdec"	"double"	53	0	1	1
6128	6125	"pradius"	"double"	53	0	1	2
6131	6130	"result"	"oid"	63	0	0	0
6132	6130	"x"	"int"	32	0	1	1
6133	6130	"y"	"int"	32	0	1	2
6136	6135	"result"	"int"	32	0	0	0
6137	6135	"z"	"oid"	63	0	1	1
6140	6139	"result"	"int"	32	0	0	0
6141	6139	"z"	"oid"	63	0	1	1
6144	6143	"rewrite"	"clob"	0	0	0	0
6145	6143	"count"	"int"	32	0	0	1
6148	6147	"query"	"clob"	0	0	0	0
6149	6147	"count"	"int"	32	0	0	1
6152	6151	"filename"	"clob"	0	0	1	0
6155	6154	"name"	"clob"	0	0	0	0
6156	6154	"def"	"clob"	0	0	0	1
6157	6154	"status"	"clob"	0	0	0	2
6165	6164	"name"	"clob"	0	0	0	0
6166	6164	"value"	"clob"	0	0	0	1
6173	6172	"id"	"int"	32	0	0	0
6174	6172	"name"	"clob"	0	0	0	1
6175	6172	"htype"	"clob"	0	0	0	2
6176	6172	"ttype"	"clob"	0	0	0	3
6177	6172	"count"	"bigint"	64	0	0	4
6178	6172	"refcnt"	"int"	32	0	0	5
6179	6172	"lrefcnt"	"int"	32	0	0	6
6180	6172	"location"	"clob"	0	0	0	7
6181	6172	"heat"	"int"	32	0	0	8
6182	6172	"dirty"	"clob"	0	0	0	9
6183	6172	"status"	"clob"	0	0	0	10
6184	6172	"kind"	"clob"	0	0	0	11
6187	6186	"ra_stmt"	"clob"	0	0	1	0
6188	6186	"opt"	"boolean"	1	0	1	1
6193	6192	"qtag"	"bigint"	64	0	0	0
6194	6192	"user"	"clob"	0	0	0	1
6195	6192	"started"	"timestamp"	7	0	0	2
6196	6192	"estimate"	"timestamp"	7	0	0	3
6197	6192	"progress"	"int"	32	0	0	4
6198	6192	"status"	"clob"	0	0	0	5
6199	6192	"tag"	"oid"	63	0	0	6
6200	6192	"query"	"clob"	0	0	0	7
6213	6212	"tag"	"int"	32	0	1	0
6216	6215	"tag"	"int"	32	0	1	0
6219	6218	"tag"	"int"	32	0	1	0
6222	6221	"tag"	"bigint"	64	0	1	0
6225	6224	"tag"	"bigint"	64	0	1	0
6228	6227	"tag"	"bigint"	64	0	1	0
6231	6230	"rowid"	"bigint"	64	0	0	0
6232	6230	"fldid"	"int"	32	0	0	1
6233	6230	"message"	"clob"	0	0	0	2
6234	6230	"input"	"clob"	0	0	0	3
6245	6244	"result"	"double"	53	0	0	0
6246	6244	"val"	"tinyint"	8	0	1	1
6249	6248	"result"	"double"	53	0	0	0
6250	6248	"val"	"smallint"	16	0	1	1
6253	6252	"result"	"double"	53	0	0	0
6254	6252	"val"	"int"	32	0	1	1
6257	6256	"result"	"double"	53	0	0	0
6258	6256	"val"	"wrd"	64	0	1	1
6261	6260	"result"	"double"	53	0	0	0
6262	6260	"val"	"bigint"	64	0	1	1
6265	6264	"result"	"double"	53	0	0	0
6266	6264	"val"	"real"	24	0	1	1
6269	6268	"result"	"double"	53	0	0	0
6270	6268	"val"	"double"	53	0	1	1
6273	6272	"result"	"double"	53	0	0	0
6274	6272	"val"	"date"	0	0	1	1
6277	6276	"result"	"double"	53	0	0	0
6278	6276	"val"	"time"	1	0	1	1
6281	6280	"result"	"double"	53	0	0	0
6282	6280	"val"	"timestamp"	7	0	1	1
6285	6284	"result"	"double"	53	0	0	0
6286	6284	"val"	"tinyint"	8	0	1	1
6289	6288	"result"	"double"	53	0	0	0
6290	6288	"val"	"smallint"	16	0	1	1
6293	6292	"result"	"double"	53	0	0	0
6294	6292	"val"	"int"	32	0	1	1
6297	6296	"result"	"double"	53	0	0	0
6298	6296	"val"	"wrd"	64	0	1	1
6301	6300	"result"	"double"	53	0	0	0
6302	6300	"val"	"bigint"	64	0	1	1
6305	6304	"result"	"double"	53	0	0	0
6306	6304	"val"	"real"	24	0	1	1
6309	6308	"result"	"double"	53	0	0	0
6310	6308	"val"	"double"	53	0	1	1
6313	6312	"result"	"double"	53	0	0	0
6314	6312	"val"	"date"	0	0	1	1
6317	6316	"result"	"double"	53	0	0	0
6318	6316	"val"	"time"	1	0	1	1
6321	6320	"result"	"double"	53	0	0	0
6322	6320	"val"	"timestamp"	7	0	1	1
6325	6324	"result"	"double"	53	0	0	0
6326	6324	"val"	"tinyint"	8	0	1	1
6329	6328	"result"	"double"	53	0	0	0
6330	6328	"val"	"smallint"	16	0	1	1
6333	6332	"result"	"double"	53	0	0	0
6334	6332	"val"	"int"	32	0	1	1
6337	6336	"result"	"double"	53	0	0	0
6338	6336	"val"	"wrd"	64	0	1	1
6341	6340	"result"	"double"	53	0	0	0
6342	6340	"val"	"bigint"	64	0	1	1
6345	6344	"result"	"double"	53	0	0	0
6346	6344	"val"	"real"	24	0	1	1
6349	6348	"result"	"double"	53	0	0	0
6350	6348	"val"	"double"	53	0	1	1
6353	6352	"result"	"double"	53	0	0	0
6354	6352	"val"	"date"	0	0	1	1
6357	6356	"result"	"double"	53	0	0	0
6358	6356	"val"	"time"	1	0	1	1
6361	6360	"result"	"double"	53	0	0	0
6362	6360	"val"	"timestamp"	7	0	1	1
6365	6364	"result"	"double"	53	0	0	0
6366	6364	"val"	"tinyint"	8	0	1	1
6369	6368	"result"	"double"	53	0	0	0
6370	6368	"val"	"smallint"	16	0	1	1
6373	6372	"result"	"double"	53	0	0	0
6374	6372	"val"	"int"	32	0	1	1
6377	6376	"result"	"double"	53	0	0	0
6378	6376	"val"	"wrd"	64	0	1	1
6381	6380	"result"	"double"	53	0	0	0
6382	6380	"val"	"bigint"	64	0	1	1
6385	6384	"result"	"double"	53	0	0	0
6386	6384	"val"	"real"	24	0	1	1
6389	6388	"result"	"double"	53	0	0	0
6390	6388	"val"	"double"	53	0	1	1
6393	6392	"result"	"double"	53	0	0	0
6394	6392	"val"	"date"	0	0	1	1
6397	6396	"result"	"double"	53	0	0	0
6398	6396	"val"	"time"	1	0	1	1
6401	6400	"result"	"double"	53	0	0	0
6402	6400	"val"	"timestamp"	7	0	1	1
6405	6404	"result"	"tinyint"	8	0	0	0
6406	6404	"val"	"tinyint"	8	0	1	1
6409	6408	"result"	"smallint"	16	0	0	0
6410	6408	"val"	"smallint"	16	0	1	1
6413	6412	"result"	"int"	32	0	0	0
6414	6412	"val"	"int"	32	0	1	1
6417	6416	"result"	"wrd"	64	0	0	0
6418	6416	"val"	"wrd"	64	0	1	1
6421	6420	"result"	"bigint"	64	0	0	0
6422	6420	"val"	"bigint"	64	0	1	1
6425	6424	"result"	"decimal"	18	3	0	0
6426	6424	"val"	"decimal"	18	3	1	1
6429	6428	"result"	"real"	24	0	0	0
6430	6428	"val"	"real"	24	0	1	1
6433	6432	"result"	"double"	53	0	0	0
6434	6432	"val"	"double"	53	0	1	1
6437	6436	"result"	"date"	0	0	0	0
6438	6436	"val"	"date"	0	0	1	1
6441	6440	"result"	"time"	1	0	0	0
6442	6440	"val"	"time"	1	0	1	1
6445	6444	"result"	"timestamp"	7	0	0	0
6446	6444	"val"	"timestamp"	7	0	1	1
6449	6448	"result"	"tinyint"	8	0	0	0
6450	6448	"val"	"tinyint"	8	0	1	1
6451	6448	"q"	"double"	53	0	1	2
6454	6453	"result"	"smallint"	16	0	0	0
6455	6453	"val"	"smallint"	16	0	1	1
6456	6453	"q"	"double"	53	0	1	2
6459	6458	"result"	"int"	32	0	0	0
6460	6458	"val"	"int"	32	0	1	1
6461	6458	"q"	"double"	53	0	1	2
6464	6463	"result"	"wrd"	64	0	0	0
6465	6463	"val"	"wrd"	64	0	1	1
6466	6463	"q"	"double"	53	0	1	2
6469	6468	"result"	"bigint"	64	0	0	0
6470	6468	"val"	"bigint"	64	0	1	1
6471	6468	"q"	"double"	53	0	1	2
6474	6473	"result"	"decimal"	18	3	0	0
6475	6473	"val"	"decimal"	18	3	1	1
6476	6473	"q"	"double"	53	0	1	2
6479	6478	"result"	"real"	24	0	0	0
6480	6478	"val"	"real"	24	0	1	1
6481	6478	"q"	"double"	53	0	1	2
6484	6483	"result"	"double"	53	0	0	0
6485	6483	"val"	"double"	53	0	1	1
6486	6483	"q"	"double"	53	0	1	2
6489	6488	"result"	"date"	0	0	0	0
6490	6488	"val"	"date"	0	0	1	1
6491	6488	"q"	"double"	53	0	1	2
6494	6493	"result"	"time"	1	0	0	0
6495	6493	"val"	"time"	1	0	1	1
6496	6493	"q"	"double"	53	0	1	2
6499	6498	"result"	"timestamp"	7	0	0	0
6500	6498	"val"	"timestamp"	7	0	1	1
6501	6498	"q"	"double"	53	0	1	2
6504	6503	"result"	"tinyint"	8	0	0	0
6505	6503	"e1"	"tinyint"	8	0	1	1
6506	6503	"e2"	"tinyint"	8	0	1	2
6509	6508	"result"	"smallint"	16	0	0	0
6510	6508	"e1"	"smallint"	16	0	1	1
6511	6508	"e2"	"smallint"	16	0	1	2
6514	6513	"result"	"int"	32	0	0	0
6515	6513	"e1"	"int"	32	0	1	1
6516	6513	"e2"	"int"	32	0	1	2
6519	6518	"result"	"wrd"	64	0	0	0
6520	6518	"e1"	"wrd"	64	0	1	1
6521	6518	"e2"	"wrd"	64	0	1	2
6524	6523	"result"	"bigint"	64	0	0	0
6525	6523	"e1"	"bigint"	64	0	1	1
6526	6523	"e2"	"bigint"	64	0	1	2
6529	6528	"result"	"real"	24	0	0	0
6530	6528	"e1"	"real"	24	0	1	1
6531	6528	"e2"	"real"	24	0	1	2
6534	6533	"result"	"double"	53	0	0	0
6535	6533	"e1"	"double"	53	0	1	1
6536	6533	"e2"	"double"	53	0	1	2
6539	6538	"result"	"double"	53	0	0	0
6540	6538	"val"	"hugeint"	128	0	1	1
6543	6542	"result"	"double"	53	0	0	0
6544	6542	"val"	"hugeint"	128	0	1	1
6547	6546	"result"	"double"	53	0	0	0
6548	6546	"val"	"hugeint"	128	0	1	1
6551	6550	"result"	"double"	53	0	0	0
6552	6550	"val"	"hugeint"	128	0	1	1
6555	6554	"result"	"hugeint"	128	0	0	0
6556	6554	"val"	"hugeint"	128	0	1	1
6559	6558	"result"	"hugeint"	128	0	0	0
6560	6558	"val"	"hugeint"	128	0	1	1
6561	6558	"q"	"double"	53	0	1	2
6564	6563	"result"	"hugeint"	128	0	0	0
6565	6563	"e1"	"hugeint"	128	0	1	1
6566	6563	"e2"	"hugeint"	128	0	1	2
6582	6581	"result"	"mbr"	0	0	0	0
6583	6581	"g"	"geometry"	0	0	1	1
6586	6585	"result"	"boolean"	1	0	0	0
6587	6585	"a"	"mbr"	0	0	1	1
6588	6585	"b"	"mbr"	0	0	1	2
6591	6590	"result"	"geometry"	0	0	0	0
6592	6590	"wkt"	"clob"	0	0	1	1
6593	6590	"srid"	"smallint"	16	0	1	2
6596	6595	"result"	"point"	0	0	0	0
6597	6595	"wkt"	"clob"	0	0	1	1
6598	6595	"srid"	"smallint"	16	0	1	2
6601	6600	"result"	"linestring"	0	0	0	0
6602	6600	"wkt"	"clob"	0	0	1	1
6603	6600	"srid"	"smallint"	16	0	1	2
6606	6605	"result"	"polygon"	0	0	0	0
6607	6605	"wkt"	"clob"	0	0	1	1
6608	6605	"srid"	"smallint"	16	0	1	2
6611	6610	"result"	"multipoint"	0	0	0	0
6612	6610	"wkt"	"clob"	0	0	1	1
6613	6610	"srid"	"smallint"	16	0	1	2
6616	6615	"result"	"multilinestring"	0	0	0	0
6617	6615	"wkt"	"clob"	0	0	1	1
6618	6615	"srid"	"smallint"	16	0	1	2
6621	6620	"result"	"multipolygon"	0	0	0	0
6622	6620	"wkt"	"clob"	0	0	1	1
6623	6620	"srid"	"smallint"	16	0	1	2
6626	6625	"result"	"multipolygon"	0	0	0	0
6627	6625	"wkt"	"clob"	0	0	1	1
6628	6625	"srid"	"smallint"	16	0	1	2
6631	6630	"result"	"polygon"	0	0	0	0
6632	6630	"wkt"	"clob"	0	0	1	1
6633	6630	"srid"	"smallint"	16	0	1	2
6636	6635	"result"	"clob"	0	0	0	0
6637	6635	"g"	"geometry"	0	0	1	1
6640	6639	"result"	"double"	53	0	0	0
6641	6639	"g"	"geometry"	0	0	1	1
6644	6643	"result"	"double"	53	0	0	0
6645	6643	"g"	"geometry"	0	0	1	1
6648	6647	"result"	"point"	0	0	0	0
6649	6647	"x"	"double"	53	0	1	1
6650	6647	"y"	"double"	53	0	1	2
6653	6652	"result"	"int"	32	0	0	0
6654	6652	"g"	"geometry"	0	0	1	1
6657	6656	"result"	"int"	32	0	0	0
6658	6656	"g"	"geometry"	0	0	1	1
6661	6660	"result"	"int"	32	0	0	0
6662	6660	"g"	"geometry"	0	0	1	1
6665	6664	"result"	"geometry"	0	0	0	0
6666	6664	"g"	"geometry"	0	0	1	1
6669	6668	"result"	"boolean"	1	0	0	0
6670	6668	"g"	"geometry"	0	0	1	1
6673	6672	"result"	"boolean"	1	0	0	0
6674	6672	"g"	"geometry"	0	0	1	1
6677	6676	"result"	"geometry"	0	0	0	0
6678	6676	"g"	"geometry"	0	0	1	1
6681	6680	"result"	"boolean"	1	0	0	0
6682	6680	"a"	"geometry"	0	0	1	1
6683	6680	"b"	"geometry"	0	0	1	2
6686	6685	"result"	"boolean"	1	0	0	0
6687	6685	"a"	"geometry"	0	0	1	1
6688	6685	"b"	"geometry"	0	0	1	2
6691	6690	"result"	"boolean"	1	0	0	0
6692	6690	"a"	"geometry"	0	0	1	1
6693	6690	"b"	"geometry"	0	0	1	2
6696	6695	"result"	"boolean"	1	0	0	0
6697	6695	"a"	"geometry"	0	0	1	1
6698	6695	"b"	"geometry"	0	0	1	2
6701	6700	"result"	"boolean"	1	0	0	0
6702	6700	"a"	"geometry"	0	0	1	1
6703	6700	"b"	"geometry"	0	0	1	2
6706	6705	"result"	"boolean"	1	0	0	0
6707	6705	"a"	"geometry"	0	0	1	1
6708	6705	"b"	"geometry"	0	0	1	2
6711	6710	"result"	"boolean"	1	0	0	0
6712	6710	"a"	"geometry"	0	0	1	1
6713	6710	"b"	"geometry"	0	0	1	2
6716	6715	"result"	"boolean"	1	0	0	0
6717	6715	"a"	"geometry"	0	0	1	1
6718	6715	"x"	"double"	53	0	1	2
6719	6715	"y"	"double"	53	0	1	3
6722	6721	"result"	"boolean"	1	0	0	0
6723	6721	"a"	"geometry"	0	0	1	1
6724	6721	"b"	"geometry"	0	0	1	2
6727	6726	"result"	"boolean"	1	0	0	0
6728	6726	"a"	"geometry"	0	0	1	1
6729	6726	"b"	"geometry"	0	0	1	2
6730	6726	"pattern"	"clob"	0	0	1	3
6733	6732	"result"	"double"	53	0	0	0
6734	6732	"g"	"geometry"	0	0	1	1
6737	6736	"result"	"double"	53	0	0	0
6738	6736	"g"	"geometry"	0	0	1	1
6741	6740	"result"	"double"	53	0	0	0
6742	6740	"a"	"geometry"	0	0	1	1
6743	6740	"b"	"geometry"	0	0	1	2
6746	6745	"result"	"geometry"	0	0	0	0
6747	6745	"a"	"geometry"	0	0	1	1
6748	6745	"distance"	"double"	53	0	1	2
6751	6750	"result"	"geometry"	0	0	0	0
6752	6750	"a"	"geometry"	0	0	1	1
6755	6754	"result"	"geometry"	0	0	0	0
6756	6754	"a"	"geometry"	0	0	1	1
6757	6754	"b"	"geometry"	0	0	1	2
6760	6759	"result"	"geometry"	0	0	0	0
6761	6759	"a"	"geometry"	0	0	1	1
6762	6759	"b"	"geometry"	0	0	1	2
6765	6764	"result"	"geometry"	0	0	0	0
6766	6764	"a"	"geometry"	0	0	1	1
6767	6764	"b"	"geometry"	0	0	1	2
6770	6769	"result"	"geometry"	0	0	0	0
6771	6769	"a"	"geometry"	0	0	1	1
6772	6769	"b"	"geometry"	0	0	1	2
6777	6776	"result"	"json"	0	0	0	0
6778	6776	"js"	"json"	0	0	1	1
6779	6776	"pathexpr"	"clob"	0	0	1	2
6782	6781	"result"	"json"	0	0	0	0
6783	6781	"js"	"json"	0	0	1	1
6784	6781	"name"	"tinyint"	8	0	1	2
6787	6786	"result"	"json"	0	0	0	0
6788	6786	"js"	"json"	0	0	1	1
6789	6786	"name"	"int"	32	0	1	2
6792	6791	"result"	"json"	0	0	0	0
6793	6791	"js"	"json"	0	0	1	1
6794	6791	"name"	"bigint"	64	0	1	2
6797	6796	"result"	"clob"	0	0	0	0
6798	6796	"js"	"json"	0	0	1	1
6799	6796	"e"	"clob"	0	0	1	2
6802	6801	"result"	"double"	53	0	0	0
6803	6801	"js"	"json"	0	0	1	1
6806	6805	"result"	"bigint"	64	0	0	0
6807	6805	"js"	"json"	0	0	1	1
6810	6809	"result"	"boolean"	1	0	0	0
6811	6809	"js"	"clob"	0	0	1	1
6814	6813	"result"	"boolean"	1	0	0	0
6815	6813	"js"	"clob"	0	0	1	1
6818	6817	"result"	"boolean"	1	0	0	0
6819	6817	"js"	"clob"	0	0	1	1
6822	6821	"result"	"boolean"	1	0	0	0
6823	6821	"js"	"json"	0	0	1	1
6826	6825	"result"	"boolean"	1	0	0	0
6827	6825	"js"	"json"	0	0	1	1
6830	6829	"result"	"boolean"	1	0	0	0
6831	6829	"js"	"json"	0	0	1	1
6834	6833	"result"	"int"	32	0	0	0
6835	6833	"js"	"json"	0	0	1	1
6838	6837	"result"	"json"	0	0	0	0
6839	6837	"js"	"json"	0	0	1	1
6842	6841	"result"	"json"	0	0	0	0
6843	6841	"js"	"json"	0	0	1	1
6846	6845	"result"	"clob"	0	0	0	0
6847	6845	"js"	"json"	0	0	1	1
6850	6849	"result"	"clob"	0	0	0	0
6851	6849	"js"	"clob"	0	0	1	1
6854	6853	"result"	"clob"	0	0	0	0
6855	6853	"js"	"int"	32	0	1	1
6858	6857	"result"	"clob"	0	0	0	0
6859	6857	"js"	"json"	0	0	1	1
6862	6861	"result"	"clob"	0	0	0	0
6863	6861	"x"	"clob"	0	0	1	1
6866	6865	"result"	"clob"	0	0	0	0
6867	6865	"x"	"double"	53	0	1	1
6870	6869	"result"	"json"	0	0	0	0
6871	6869	"js"	"json"	0	0	1	1
6872	6869	"name"	"hugeint"	128	0	1	2
6875	6874	"result"	"clob"	0	0	0	0
6876	6874	"v"	"clob"	0	0	1	1
6880	6879	"result"	"uuid"	0	0	0	0
6883	6882	"result"	"uuid"	0	0	0	0
6884	6882	"u"	"uuid"	0	0	1	1
6887	6886	"result"	"uuid"	0	0	0	0
6888	6886	"u"	"clob"	0	0	1	1
6891	6890	"result"	"double"	53	0	0	0
6892	6890	"chi2"	"double"	53	0	1	1
6893	6890	"datapoints"	"double"	53	0	1	2
6917	6916	"dirname"	"clob"	0	0	1	0
6920	6919	"fname"	"clob"	0	0	1	0
6923	6922	"tname"	"clob"	0	0	1	0
6926	6925	"dirname"	"clob"	0	0	1	0
6927	6925	"pat"	"clob"	0	0	1	1
6962	6961	"fname"	"varchar"	256	0	1	0
6965	6964	"fid"	"int"	32	0	1	0
6966	6964	"varnname"	"varchar"	256	0	1	1
6969	6968	"schema"	"clob"	0	0	0	0
6970	6968	"table"	"clob"	0	0	0	1
6971	6968	"column"	"clob"	0	0	0	2
6972	6968	"type"	"clob"	0	0	0	3
6973	6968	"mode"	"clob"	0	0	0	4
6974	6968	"location"	"clob"	0	0	0	5
6975	6968	"count"	"bigint"	64	0	0	6
6976	6968	"typewidth"	"int"	32	0	0	7
6977	6968	"columnsize"	"bigint"	64	0	0	8
6978	6968	"heapsize"	"bigint"	64	0	0	9
6979	6968	"hashes"	"bigint"	64	0	0	10
6980	6968	"phash"	"boolean"	1	0	0	11
6981	6968	"imprints"	"bigint"	64	0	0	12
6982	6968	"sorted"	"boolean"	1	0	0	13
7015	7014	"result"	"bigint"	64	0	0	0
7016	7014	"nme"	"clob"	0	0	1	1
7017	7014	"i"	"bigint"	64	0	1	2
7018	7014	"d"	"bigint"	64	0	1	3
7021	7020	"result"	"bigint"	64	0	0	0
7022	7020	"tpe"	"clob"	0	0	1	1
7023	7020	"i"	"bigint"	64	0	1	2
7024	7020	"w"	"int"	32	0	1	3
7027	7026	"result"	"bigint"	64	0	0	0
7028	7026	"b"	"boolean"	1	0	1	1
7029	7026	"i"	"bigint"	64	0	1	2
7032	7031	"result"	"bigint"	64	0	0	0
7033	7031	"i"	"bigint"	64	0	1	1
7034	7031	"nme"	"clob"	0	0	1	2
7037	7036	"schema"	"clob"	0	0	0	0
7038	7036	"table"	"clob"	0	0	0	1
7039	7036	"column"	"clob"	0	0	0	2
7040	7036	"type"	"clob"	0	0	0	3
7041	7036	"count"	"bigint"	64	0	0	4
7042	7036	"columnsize"	"bigint"	64	0	0	5
7043	7036	"heapsize"	"bigint"	64	0	0	6
7044	7036	"hashes"	"bigint"	64	0	0	7
7045	7036	"imprints"	"bigint"	64	0	0	8
7046	7036	"sorted"	"boolean"	1	0	0	9
7084	7083	"MinMax"	"int"	32	0	1	0
7085	7083	"sample"	"bigint"	64	0	1	1
7088	7087	"MinMax"	"int"	32	0	1	0
7089	7087	"sample"	"bigint"	64	0	1	1
7090	7087	"sch"	"clob"	0	0	1	2
7093	7092	"MinMax"	"int"	32	0	1	0
7094	7092	"sample"	"bigint"	64	0	1	1
7095	7092	"sch"	"clob"	0	0	1	2
7096	7092	"tbl"	"clob"	0	0	1	3
7099	7098	"MinMax"	"int"	32	0	1	0
7100	7098	"sample"	"bigint"	64	0	1	1
7101	7098	"sch"	"clob"	0	0	1	2
7102	7098	"tbl"	"clob"	0	0	1	3
7103	7098	"col"	"clob"	0	0	1	4
7106	7105	"result"	"clob"	0	0	0	0
7107	7105	"src"	"clob"	0	0	1	1
7110	7109	"result"	"smallint"	16	0	0	0
7111	7109	"one"	"tinyint"	8	0	1	1
7112	7109	"two"	"tinyint"	8	0	1	2
7115	7114	"result"	"int"	32	0	0	0
7116	7114	"one"	"smallint"	16	0	1	1
7117	7114	"two"	"smallint"	16	0	1	2
7120	7119	"result"	"bigint"	64	0	0	0
7121	7119	"one"	"int"	32	0	1	1
7122	7119	"two"	"int"	32	0	1	2
7125	7124	"result"	"hugeint"	128	0	0	0
7126	7124	"one"	"bigint"	64	0	1	1
7127	7124	"two"	"bigint"	64	0	1	2
7131	7130	"bam_repos"	"clob"	0	0	1	0
7132	7130	"dbschema"	"smallint"	16	0	1	1
7133	7130	"nr_threads"	"smallint"	16	0	1	2
7136	7135	"bam_files"	"clob"	0	0	1	0
7137	7135	"dbschema"	"smallint"	16	0	1	1
7138	7135	"nr_threads"	"smallint"	16	0	1	2
7141	7140	"bam_file"	"clob"	0	0	1	0
7142	7140	"dbschema"	"smallint"	16	0	1	1
7145	7144	"file_id"	"bigint"	64	0	1	0
7146	7144	"dbschema"	"smallint"	16	0	1	1
7149	7148	"result"	"boolean"	1	0	0	0
7150	7148	"flag"	"smallint"	16	0	1	1
7151	7148	"name"	"clob"	0	0	1	2
7154	7153	"result"	"clob"	0	0	0	0
7155	7153	"seq"	"clob"	0	0	1	1
7158	7157	"result"	"clob"	0	0	0	0
7159	7157	"qual"	"clob"	0	0	1	1
7162	7161	"result"	"int"	32	0	0	0
7163	7161	"cigar"	"clob"	0	0	1	1
7166	7165	"output_path"	"clob"	0	0	1	0
7169	7168	"output_path"	"clob"	0	0	1	0
7239	7238	"value"	"tinyint"	8	0	0	0
7240	7238	"first"	"tinyint"	8	0	1	1
7241	7238	"last"	"tinyint"	8	0	1	2
7244	7243	"value"	"tinyint"	8	0	0	0
7245	7243	"first"	"tinyint"	8	0	1	1
7246	7243	"last"	"tinyint"	8	0	1	2
7247	7243	"stepsize"	"tinyint"	8	0	1	3
7250	7249	"value"	"smallint"	16	0	0	0
7251	7249	"first"	"smallint"	16	0	1	1
7252	7249	"last"	"smallint"	16	0	1	2
7255	7254	"value"	"smallint"	16	0	0	0
7256	7254	"first"	"smallint"	16	0	1	1
7257	7254	"last"	"smallint"	16	0	1	2
7258	7254	"stepsize"	"smallint"	16	0	1	3
7261	7260	"value"	"int"	32	0	0	0
7262	7260	"first"	"int"	32	0	1	1
7263	7260	"last"	"int"	32	0	1	2
7266	7265	"value"	"int"	32	0	0	0
7267	7265	"first"	"int"	32	0	1	1
7268	7265	"last"	"int"	32	0	1	2
7269	7265	"stepsize"	"int"	32	0	1	3
7272	7271	"value"	"bigint"	64	0	0	0
7273	7271	"first"	"bigint"	64	0	1	1
7274	7271	"last"	"bigint"	64	0	1	2
7277	7276	"value"	"bigint"	64	0	0	0
7278	7276	"first"	"bigint"	64	0	1	1
7279	7276	"last"	"bigint"	64	0	1	2
7280	7276	"stepsize"	"bigint"	64	0	1	3
7283	7282	"value"	"real"	24	0	0	0
7284	7282	"first"	"real"	24	0	1	1
7285	7282	"last"	"real"	24	0	1	2
7286	7282	"stepsize"	"real"	24	0	1	3
7289	7288	"value"	"double"	53	0	0	0
7290	7288	"first"	"double"	53	0	1	1
7291	7288	"last"	"double"	53	0	1	2
7292	7288	"stepsize"	"double"	53	0	1	3
7295	7294	"value"	"decimal"	10	2	0	0
7296	7294	"first"	"decimal"	10	2	1	1
7297	7294	"last"	"decimal"	10	2	1	2
7298	7294	"stepsize"	"decimal"	10	2	1	3
7301	7300	"value"	"timestamp"	7	0	0	0
7302	7300	"first"	"timestamp"	7	0	1	1
7303	7300	"last"	"timestamp"	7	0	1	2
7304	7300	"stepsize"	"sec_interval"	13	0	1	3
7307	7306	"value"	"hugeint"	128	0	0	0
7308	7306	"first"	"hugeint"	128	0	1	1
7309	7306	"last"	"hugeint"	128	0	1	2
7312	7311	"value"	"hugeint"	128	0	0	0
7313	7311	"first"	"hugeint"	128	0	1	1
7314	7311	"last"	"hugeint"	128	0	1	2
7315	7311	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 238 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
404	5677	7
403	5677	7
1009	5677	7
404	5681	7
403	5681	7
1009	5681	7
5845	5874	5
5855	5885	5
5845	5903	5
5855	5903	5
5914	5942	5
2003	5979	7
2001	5979	7
2002	5979	7
5641	5979	7
5650	5984	7
5648	5984	7
5649	5984	7
2005	5984	7
2001	5984	7
2003	5984	7
5609	5989	7
2047	5989	7
2046	5989	7
2049	5989	7
2048	5989	7
5609	5994	7
2088	5994	7
2086	5994	7
2090	5994	7
2083	5994	7
2079	5994	7
5609	5999	7
2047	5999	7
2046	5999	7
2049	5999	7
2092	5999	7
2091	5999	7
2048	5999	7
2093	5999	7
2094	5999	7
5609	6004	7
2081	6004	7
2079	6004	7
2084	6004	7
2080	6004	7
2083	6004	7
5609	6009	7
2047	6009	7
2046	6009	7
2049	6009	7
2017	6009	7
2016	6009	7
2048	6009	7
2018	6009	7
5619	6014	7
2047	6014	7
2046	6014	7
2049	6014	7
2048	6014	7
5609	6014	7
5619	6019	7
2081	6019	7
2079	6019	7
2084	6019	7
2103	6019	7
2102	6019	7
2104	6019	7
2080	6019	7
2083	6019	7
141	6019	7
33	6019	7
32	6019	7
34	6019	7
5619	6024	7
2088	6024	7
2086	6024	7
2090	6024	7
2083	6024	7
2079	6024	7
2087	6024	7
2103	6024	7
2102	6024	7
2104	6024	7
33	6024	7
32	6024	7
34	6024	7
5619	6029	7
2047	6029	7
2046	6029	7
2049	6029	7
2048	6029	7
2017	6029	7
2016	6029	7
2018	6029	7
5619	6034	7
2047	6034	7
2046	6034	7
2049	6034	7
2092	6034	7
2091	6034	7
2048	6034	7
2093	6034	7
5609	6039	7
2047	6039	7
2046	6039	7
2049	6039	7
2017	6039	7
2016	6039	7
2048	6039	7
2018	6039	7
5609	6044	7
2047	6044	7
2046	6044	7
2049	6044	7
2092	6044	7
2091	6044	7
2048	6044	7
2093	6044	7
2018	6049	7
2016	6049	7
2017	6049	7
2047	6049	7
2046	6049	7
2049	6049	7
2048	6049	7
2018	6054	7
2016	6054	7
2017	6054	7
2047	6054	7
2046	6054	7
2049	6054	7
2092	6054	7
2091	6054	7
2048	6054	7
2093	6054	7
2083	6059	7
2079	6059	7
2080	6059	7
2084	6059	7
6068	6082	5
105	6101	7
39	6101	7
37	6101	7
1152	6101	7
1138	6101	7
200	6101	7
1149	6101	7
201	6101	7
247	6101	7
34	6113	7
486	6113	7
105	6113	7
107	6113	7
36	6113	7
6108	6113	7
6154	6162	5
6164	6170	5
6192	6210	5
6230	6240	5
6895	6897	10
6895	6896	4
6900	6902	10
6903	6905	10
6900	6901	4
6908	6910	10
6911	6913	10
6908	6909	4
6968	6998	5
7000	7012	13
7010	7012	13
7001	7012	13
7002	7012	13
7003	7012	13
7004	7012	13
7005	7012	13
7006	7012	13
7007	7012	13
7008	7012	13
7009	7012	13
34	7014	7
202	7014	7
208	7014	7
104	7020	7
35	7020	7
247	7020	7
202	7020	7
34	7026	7
202	7026	7
105	7031	7
34	7031	7
363	7031	7
7000	7036	7
7010	7036	7
7001	7036	7
7002	7036	7
7003	7036	7
7005	7036	7
7006	7036	7
7007	7036	7
7008	7036	7
7009	7036	7
7014	7036	7
7020	7036	7
7026	7036	7
7031	7036	7
7036	7058	5
7036	7068	5
49	7068	5
56	7068	5
57	7068	5
52	7068	5
36	7068	5
34	7068	5
202	7068	5
7171	7178	10
7171	7177	4
7181	7189	10
7182	7189	10
7182	7191	10
7181	7188	4
7182	7188	4
7177	7190	11
7182	7190	11
7194	7208	10
7195	7208	10
7195	7210	10
7194	7207	4
7195	7207	4
7177	7209	11
7195	7209	11
7213	7220	10
7214	7220	10
7214	7222	10
7213	7219	4
7214	7219	4
7177	7221	11
7214	7221	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1512 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
31	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
32	"hash"	"hash"	"mkey"	0	1	false	false	false	0
33	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
34	"="	"="	"calc"	0	1	false	false	false	0
35	"<>"	"!="	"calc"	0	1	false	false	false	0
36	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
37	">"	">"	"calc"	0	1	false	false	false	0
38	">="	">="	"calc"	0	1	false	false	false	0
39	"<"	"<"	"calc"	0	1	false	false	false	0
40	"<="	"<="	"calc"	0	1	false	false	false	0
44	"in"	"in"	"calc"	0	1	false	false	false	0
45	"identity"	"identity"	"calc"	0	1	false	false	false	0
46	"rowid"	"identity"	"calc"	0	1	false	false	false	0
47	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
50	"sql_min"	"min"	"calc"	0	1	false	false	false	0
51	"sql_max"	"max"	"calc"	0	1	false	false	false	0
52	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
80	"mod"	"%"	"calc"	0	1	false	false	false	0
81	"mod"	"%"	"calc"	0	1	false	false	false	0
82	"mod"	"%"	"calc"	0	1	false	false	false	0
83	"mod"	"%"	"calc"	0	1	false	false	false	0
84	"mod"	"%"	"calc"	0	1	false	false	false	0
85	"mod"	"%"	"calc"	0	1	false	false	false	0
86	"mod"	"%"	"calc"	0	1	false	false	false	0
87	"mod"	"%"	"calc"	0	1	false	false	false	0
95	"diff"	"diff"	"sql"	0	6	false	false	false	0
96	"diff"	"diff"	"sql"	0	6	false	false	false	0
97	"rank"	"rank"	"sql"	0	6	false	false	false	0
98	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
99	"percent_rank"	"precent_rank"	"sql"	0	6	false	false	false	0
100	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
101	"cume_dist"	"cume_dist"	"sql"	0	6	false	false	false	0
102	"lag"	"lag"	"sql"	0	6	false	false	false	0
103	"lead"	"lead"	"sql"	0	6	false	false	false	0
104	"and"	"and"	"calc"	0	1	false	false	false	0
105	"or"	"or"	"calc"	0	1	false	false	false	0
106	"xor"	"xor"	"calc"	0	1	false	false	false	0
107	"not"	"not"	"calc"	0	1	false	false	false	0
108	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
109	"sql_add"	"+"	"calc"	0	1	false	false	false	0
110	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
111	"sql_div"	"/"	"calc"	0	1	false	false	false	0
112	"bit_and"	"and"	"calc"	0	1	false	false	false	0
113	"bit_or"	"or"	"calc"	0	1	false	false	false	0
114	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
115	"bit_not"	"not"	"calc"	0	1	false	false	false	0
116	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
117	"right_shift"	">>"	"calc"	0	1	false	false	false	0
118	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
119	"abs"	"abs"	"calc"	0	1	false	false	false	0
120	"sign"	"sign"	"calc"	0	1	false	false	false	0
121	"scale_up"	"*"	"calc"	0	1	false	false	false	0
122	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
123	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
124	"sql_add"	"+"	"calc"	0	1	false	false	false	0
125	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
126	"sql_div"	"/"	"calc"	0	1	false	false	false	0
127	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
128	"sql_add"	"+"	"calc"	0	1	false	false	false	0
129	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
130	"sql_div"	"/"	"calc"	0	1	false	false	false	0
131	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
132	"sql_add"	"+"	"calc"	0	1	false	false	false	0
133	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
134	"sql_div"	"/"	"calc"	0	1	false	false	false	0
135	"bit_and"	"and"	"calc"	0	1	false	false	false	0
136	"bit_or"	"or"	"calc"	0	1	false	false	false	0
137	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
138	"bit_not"	"not"	"calc"	0	1	false	false	false	0
139	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
140	"right_shift"	">>"	"calc"	0	1	false	false	false	0
141	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
142	"abs"	"abs"	"calc"	0	1	false	false	false	0
143	"sign"	"sign"	"calc"	0	1	false	false	false	0
144	"scale_up"	"*"	"calc"	0	1	false	false	false	0
145	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
146	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
147	"sql_add"	"+"	"calc"	0	1	false	false	false	0
148	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
149	"sql_div"	"/"	"calc"	0	1	false	false	false	0
150	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
151	"sql_add"	"+"	"calc"	0	1	false	false	false	0
152	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
153	"sql_div"	"/"	"calc"	0	1	false	false	false	0
154	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
155	"sql_add"	"+"	"calc"	0	1	false	false	false	0
156	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
157	"sql_div"	"/"	"calc"	0	1	false	false	false	0
158	"bit_and"	"and"	"calc"	0	1	false	false	false	0
159	"bit_or"	"or"	"calc"	0	1	false	false	false	0
160	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
161	"bit_not"	"not"	"calc"	0	1	false	false	false	0
162	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
163	"right_shift"	">>"	"calc"	0	1	false	false	false	0
164	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
165	"abs"	"abs"	"calc"	0	1	false	false	false	0
166	"sign"	"sign"	"calc"	0	1	false	false	false	0
167	"scale_up"	"*"	"calc"	0	1	false	false	false	0
168	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
169	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
170	"sql_add"	"+"	"calc"	0	1	false	false	false	0
171	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
172	"sql_div"	"/"	"calc"	0	1	false	false	false	0
173	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
174	"sql_add"	"+"	"calc"	0	1	false	false	false	0
175	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
176	"sql_div"	"/"	"calc"	0	1	false	false	false	0
177	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
178	"sql_add"	"+"	"calc"	0	1	false	false	false	0
179	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
180	"sql_div"	"/"	"calc"	0	1	false	false	false	0
181	"bit_and"	"and"	"calc"	0	1	false	false	false	0
182	"bit_or"	"or"	"calc"	0	1	false	false	false	0
183	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
184	"bit_not"	"not"	"calc"	0	1	false	false	false	0
185	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
186	"right_shift"	">>"	"calc"	0	1	false	false	false	0
187	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
188	"abs"	"abs"	"calc"	0	1	false	false	false	0
189	"sign"	"sign"	"calc"	0	1	false	false	false	0
190	"scale_up"	"*"	"calc"	0	1	false	false	false	0
191	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
192	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
193	"sql_add"	"+"	"calc"	0	1	false	false	false	0
194	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
195	"sql_div"	"/"	"calc"	0	1	false	false	false	0
196	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
197	"sql_add"	"+"	"calc"	0	1	false	false	false	0
198	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
199	"sql_div"	"/"	"calc"	0	1	false	false	false	0
200	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
201	"sql_add"	"+"	"calc"	0	1	false	false	false	0
202	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
203	"sql_div"	"/"	"calc"	0	1	false	false	false	0
204	"bit_and"	"and"	"calc"	0	1	false	false	false	0
205	"bit_or"	"or"	"calc"	0	1	false	false	false	0
206	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
207	"bit_not"	"not"	"calc"	0	1	false	false	false	0
208	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
209	"right_shift"	">>"	"calc"	0	1	false	false	false	0
210	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
211	"abs"	"abs"	"calc"	0	1	false	false	false	0
212	"sign"	"sign"	"calc"	0	1	false	false	false	0
213	"scale_up"	"*"	"calc"	0	1	false	false	false	0
214	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
215	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
216	"sql_add"	"+"	"calc"	0	1	false	false	false	0
217	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
218	"sql_div"	"/"	"calc"	0	1	false	false	false	0
219	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
220	"sql_add"	"+"	"calc"	0	1	false	false	false	0
221	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
222	"sql_div"	"/"	"calc"	0	1	false	false	false	0
223	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
224	"sql_add"	"+"	"calc"	0	1	false	false	false	0
225	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
226	"sql_div"	"/"	"calc"	0	1	false	false	false	0
227	"bit_and"	"and"	"calc"	0	1	false	false	false	0
228	"bit_or"	"or"	"calc"	0	1	false	false	false	0
229	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
230	"bit_not"	"not"	"calc"	0	1	false	false	false	0
231	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
232	"right_shift"	">>"	"calc"	0	1	false	false	false	0
233	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
234	"abs"	"abs"	"calc"	0	1	false	false	false	0
235	"sign"	"sign"	"calc"	0	1	false	false	false	0
236	"scale_up"	"*"	"calc"	0	1	false	false	false	0
237	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
238	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
239	"sql_add"	"+"	"calc"	0	1	false	false	false	0
240	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
241	"sql_div"	"/"	"calc"	0	1	false	false	false	0
242	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
243	"sql_add"	"+"	"calc"	0	1	false	false	false	0
244	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
245	"sql_div"	"/"	"calc"	0	1	false	false	false	0
246	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
247	"sql_add"	"+"	"calc"	0	1	false	false	false	0
248	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
249	"sql_div"	"/"	"calc"	0	1	false	false	false	0
250	"bit_and"	"and"	"calc"	0	1	false	false	false	0
251	"bit_or"	"or"	"calc"	0	1	false	false	false	0
252	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
253	"bit_not"	"not"	"calc"	0	1	false	false	false	0
254	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
255	"right_shift"	">>"	"calc"	0	1	false	false	false	0
256	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
257	"abs"	"abs"	"calc"	0	1	false	false	false	0
258	"sign"	"sign"	"calc"	0	1	false	false	false	0
259	"scale_up"	"*"	"calc"	0	1	false	false	false	0
260	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
261	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
262	"sql_add"	"+"	"calc"	0	1	false	false	false	0
263	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
264	"sql_div"	"/"	"calc"	0	1	false	false	false	0
265	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
266	"sql_add"	"+"	"calc"	0	1	false	false	false	0
267	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
268	"sql_div"	"/"	"calc"	0	1	false	false	false	0
269	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
270	"sql_add"	"+"	"calc"	0	1	false	false	false	0
271	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
272	"sql_div"	"/"	"calc"	0	1	false	false	false	0
273	"bit_and"	"and"	"calc"	0	1	false	false	false	0
274	"bit_or"	"or"	"calc"	0	1	false	false	false	0
275	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
276	"bit_not"	"not"	"calc"	0	1	false	false	false	0
277	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
278	"right_shift"	">>"	"calc"	0	1	false	false	false	0
279	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
280	"abs"	"abs"	"calc"	0	1	false	false	false	0
281	"sign"	"sign"	"calc"	0	1	false	false	false	0
282	"scale_up"	"*"	"calc"	0	1	false	false	false	0
283	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
284	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
285	"sql_add"	"+"	"calc"	0	1	false	false	false	0
286	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
287	"sql_div"	"/"	"calc"	0	1	false	false	false	0
288	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
289	"sql_add"	"+"	"calc"	0	1	false	false	false	0
290	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
291	"sql_div"	"/"	"calc"	0	1	false	false	false	0
292	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
293	"sql_add"	"+"	"calc"	0	1	false	false	false	0
294	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
295	"sql_div"	"/"	"calc"	0	1	false	false	false	0
296	"bit_and"	"and"	"calc"	0	1	false	false	false	0
297	"bit_or"	"or"	"calc"	0	1	false	false	false	0
298	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
299	"bit_not"	"not"	"calc"	0	1	false	false	false	0
300	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
301	"right_shift"	">>"	"calc"	0	1	false	false	false	0
302	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
303	"abs"	"abs"	"calc"	0	1	false	false	false	0
304	"sign"	"sign"	"calc"	0	1	false	false	false	0
305	"scale_up"	"*"	"calc"	0	1	false	false	false	0
306	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
307	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
308	"sql_add"	"+"	"calc"	0	1	false	false	false	0
309	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
310	"sql_div"	"/"	"calc"	0	1	false	false	false	0
311	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
312	"sql_add"	"+"	"calc"	0	1	false	false	false	0
313	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
314	"sql_div"	"/"	"calc"	0	1	false	false	false	0
315	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
316	"sql_add"	"+"	"calc"	0	1	false	false	false	0
317	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
318	"sql_div"	"/"	"calc"	0	1	false	false	false	0
319	"bit_and"	"and"	"calc"	0	1	false	false	false	0
320	"bit_or"	"or"	"calc"	0	1	false	false	false	0
321	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
322	"bit_not"	"not"	"calc"	0	1	false	false	false	0
323	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
324	"right_shift"	">>"	"calc"	0	1	false	false	false	0
325	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
326	"abs"	"abs"	"calc"	0	1	false	false	false	0
327	"sign"	"sign"	"calc"	0	1	false	false	false	0
328	"scale_up"	"*"	"calc"	0	1	false	false	false	0
329	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
330	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
331	"sql_add"	"+"	"calc"	0	1	false	false	false	0
332	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
333	"sql_div"	"/"	"calc"	0	1	false	false	false	0
334	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
335	"sql_add"	"+"	"calc"	0	1	false	false	false	0
336	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
337	"sql_div"	"/"	"calc"	0	1	false	false	false	0
338	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
339	"sql_add"	"+"	"calc"	0	1	false	false	false	0
340	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
341	"sql_div"	"/"	"calc"	0	1	false	false	false	0
342	"bit_and"	"and"	"calc"	0	1	false	false	false	0
343	"bit_or"	"or"	"calc"	0	1	false	false	false	0
344	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
345	"bit_not"	"not"	"calc"	0	1	false	false	false	0
346	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
347	"right_shift"	">>"	"calc"	0	1	false	false	false	0
348	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
349	"abs"	"abs"	"calc"	0	1	false	false	false	0
350	"sign"	"sign"	"calc"	0	1	false	false	false	0
351	"scale_up"	"*"	"calc"	0	1	false	false	false	0
352	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
353	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
354	"sql_add"	"+"	"calc"	0	1	false	false	false	0
355	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
356	"sql_div"	"/"	"calc"	0	1	false	false	false	0
357	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
358	"sql_add"	"+"	"calc"	0	1	false	false	false	0
359	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
360	"sql_div"	"/"	"calc"	0	1	false	false	false	0
361	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
362	"sql_add"	"+"	"calc"	0	1	false	false	false	0
363	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
364	"sql_div"	"/"	"calc"	0	1	false	false	false	0
365	"bit_and"	"and"	"calc"	0	1	false	false	false	0
366	"bit_or"	"or"	"calc"	0	1	false	false	false	0
367	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
368	"bit_not"	"not"	"calc"	0	1	false	false	false	0
369	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
370	"right_shift"	">>"	"calc"	0	1	false	false	false	0
371	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
372	"abs"	"abs"	"calc"	0	1	false	false	false	0
373	"sign"	"sign"	"calc"	0	1	false	false	false	0
374	"scale_up"	"*"	"calc"	0	1	false	false	false	0
375	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
376	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
377	"sql_add"	"+"	"calc"	0	1	false	false	false	0
378	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
379	"sql_div"	"/"	"calc"	0	1	false	false	false	0
380	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
381	"sql_add"	"+"	"calc"	0	1	false	false	false	0
382	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
383	"sql_div"	"/"	"calc"	0	1	false	false	false	0
384	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
385	"sql_add"	"+"	"calc"	0	1	false	false	false	0
386	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
387	"sql_div"	"/"	"calc"	0	1	false	false	false	0
388	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
389	"abs"	"abs"	"calc"	0	1	false	false	false	0
390	"sign"	"sign"	"calc"	0	1	false	false	false	0
391	"scale_up"	"*"	"calc"	0	1	false	false	false	0
392	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
393	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
394	"sql_add"	"+"	"calc"	0	1	false	false	false	0
395	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
396	"sql_div"	"/"	"calc"	0	1	false	false	false	0
397	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
398	"sql_add"	"+"	"calc"	0	1	false	false	false	0
399	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
400	"sql_div"	"/"	"calc"	0	1	false	false	false	0
401	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
402	"sql_add"	"+"	"calc"	0	1	false	false	false	0
403	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
404	"sql_div"	"/"	"calc"	0	1	false	false	false	0
405	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
406	"abs"	"abs"	"calc"	0	1	false	false	false	0
407	"sign"	"sign"	"calc"	0	1	false	false	false	0
408	"scale_up"	"*"	"calc"	0	1	false	false	false	0
409	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
410	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
411	"sql_add"	"+"	"calc"	0	1	false	false	false	0
412	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
413	"sql_div"	"/"	"calc"	0	1	false	false	false	0
414	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
415	"sql_add"	"+"	"calc"	0	1	false	false	false	0
416	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
417	"sql_div"	"/"	"calc"	0	1	false	false	false	0
418	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
419	"sql_add"	"+"	"calc"	0	1	false	false	false	0
420	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
421	"sql_div"	"/"	"calc"	0	1	false	false	false	0
422	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
423	"abs"	"abs"	"calc"	0	1	false	false	false	0
424	"sign"	"sign"	"calc"	0	1	false	false	false	0
425	"scale_up"	"*"	"calc"	0	1	false	false	false	0
426	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
427	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
428	"sql_add"	"+"	"calc"	0	1	false	false	false	0
429	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
430	"sql_div"	"/"	"calc"	0	1	false	false	false	0
431	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
432	"abs"	"abs"	"calc"	0	1	false	false	false	0
433	"sign"	"sign"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
459	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
460	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
461	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
462	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
463	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
465	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
466	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
467	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
468	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
469	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
470	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
471	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
472	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
473	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
474	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
475	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
476	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
477	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
478	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
479	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
480	"round"	"round"	"sql"	0	1	false	false	false	0
481	"round"	"round"	"sql"	0	1	false	false	false	0
482	"round"	"round"	"sql"	0	1	false	false	false	0
483	"round"	"round"	"sql"	0	1	false	false	false	0
484	"round"	"round"	"sql"	0	1	false	false	false	0
485	"round"	"round"	"sql"	0	1	false	false	false	0
486	"round"	"round"	"sql"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"power"	"pow"	"mmath"	0	1	false	false	false	0
972	"floor"	"floor"	"mmath"	0	1	false	false	false	0
973	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
974	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
975	"sin"	"sin"	"mmath"	0	1	false	false	false	0
976	"cos"	"cos"	"mmath"	0	1	false	false	false	0
977	"tan"	"tan"	"mmath"	0	1	false	false	false	0
978	"asin"	"asin"	"mmath"	0	1	false	false	false	0
979	"acos"	"acos"	"mmath"	0	1	false	false	false	0
980	"atan"	"atan"	"mmath"	0	1	false	false	false	0
981	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
982	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
983	"cot"	"cot"	"mmath"	0	1	false	false	false	0
984	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
985	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
986	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
987	"exp"	"exp"	"mmath"	0	1	false	false	false	0
988	"log"	"log"	"mmath"	0	1	false	false	false	0
989	"log10"	"log10"	"mmath"	0	1	false	false	false	0
990	"power"	"pow"	"mmath"	0	1	false	false	false	0
991	"floor"	"floor"	"mmath"	0	1	false	false	false	0
992	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
993	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
994	"sin"	"sin"	"mmath"	0	1	false	false	false	0
995	"cos"	"cos"	"mmath"	0	1	false	false	false	0
996	"tan"	"tan"	"mmath"	0	1	false	false	false	0
997	"asin"	"asin"	"mmath"	0	1	false	false	false	0
998	"acos"	"acos"	"mmath"	0	1	false	false	false	0
999	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1000	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1001	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1002	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1003	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1004	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1005	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1006	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1007	"log"	"log"	"mmath"	0	1	false	false	false	0
1008	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1009	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1010	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1011	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1012	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1013	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1014	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1015	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1016	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1017	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1018	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1019	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1020	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1021	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1022	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1023	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1024	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1025	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1026	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1027	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1028	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1029	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1030	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1031	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1032	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1033	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1034	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1035	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1036	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1037	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1038	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1039	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1040	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1041	"year"	"year"	"mtime"	0	1	false	false	false	0
1042	"month"	"month"	"mtime"	0	1	false	false	false	0
1043	"day"	"day"	"mtime"	0	1	false	false	false	0
1044	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1045	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1046	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1047	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1048	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1049	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1050	"year"	"year"	"mtime"	0	1	false	false	false	0
1051	"month"	"month"	"mtime"	0	1	false	false	false	0
1052	"day"	"day"	"mtime"	0	1	false	false	false	0
1053	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1054	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1055	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1056	"year"	"year"	"mtime"	0	1	false	false	false	0
1057	"month"	"month"	"mtime"	0	1	false	false	false	0
1058	"day"	"day"	"mtime"	0	1	false	false	false	0
1059	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1060	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1061	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1062	"year"	"year"	"mtime"	0	1	false	false	false	0
1063	"month"	"month"	"mtime"	0	1	false	false	false	0
1064	"day"	"day"	"mtime"	0	1	false	false	false	0
1065	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1066	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1067	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1068	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1069	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1070	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1071	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1072	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1073	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1074	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1075	"restart"	"restart"	"sql"	0	1	false	false	false	0
1076	"index"	"index"	"calc"	0	1	false	false	false	0
1077	"index"	"index"	"calc"	0	1	false	false	false	0
1078	"index"	"index"	"calc"	0	1	false	false	false	0
1079	"strings"	"strings"	"calc"	0	1	false	false	false	0
1080	"locate"	"locate"	"str"	0	1	false	false	false	0
1081	"locate"	"locate"	"str"	0	1	false	false	false	0
1082	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1083	"substring"	"substring"	"str"	0	1	false	false	false	0
1084	"substring"	"substring"	"str"	0	1	false	false	false	0
1085	"like"	"like"	"algebra"	0	1	false	false	false	0
1086	"like"	"like"	"algebra"	0	1	false	false	false	0
1087	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1088	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1089	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1090	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1091	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1092	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1093	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1094	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1095	"concat"	"+"	"calc"	0	1	false	false	false	0
1096	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1097	"code"	"unicode"	"str"	0	1	false	false	false	0
1098	"length"	"stringlength"	"str"	0	1	false	false	false	0
1099	"right"	"stringright"	"str"	0	1	false	false	false	0
1100	"left"	"stringleft"	"str"	0	1	false	false	false	0
1101	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1102	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1103	"lower"	"toLower"	"str"	0	1	false	false	false	0
1104	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1105	"trim"	"trim"	"str"	0	1	false	false	false	0
1106	"trim"	"trim"	"str"	0	1	false	false	false	0
1107	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1108	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1109	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1110	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1111	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1112	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1113	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1114	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1115	"insert"	"insert"	"str"	0	1	false	false	false	0
1116	"replace"	"replace"	"str"	0	1	false	false	false	0
1117	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1118	"space"	"space"	"str"	0	1	false	false	false	0
1119	"char_length"	"length"	"str"	0	1	false	false	false	0
1120	"character_length"	"length"	"str"	0	1	false	false	false	0
1121	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1122	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1123	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1124	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1125	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1126	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1127	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1128	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1129	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1130	"index"	"index"	"calc"	0	1	false	false	false	0
1131	"index"	"index"	"calc"	0	1	false	false	false	0
1132	"index"	"index"	"calc"	0	1	false	false	false	0
1133	"strings"	"strings"	"calc"	0	1	false	false	false	0
1134	"locate"	"locate"	"str"	0	1	false	false	false	0
1135	"locate"	"locate"	"str"	0	1	false	false	false	0
1136	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1137	"substring"	"substring"	"str"	0	1	false	false	false	0
1138	"substring"	"substring"	"str"	0	1	false	false	false	0
1139	"like"	"like"	"algebra"	0	1	false	false	false	0
1140	"like"	"like"	"algebra"	0	1	false	false	false	0
1141	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1142	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1143	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1144	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1145	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1146	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1147	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1148	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1149	"concat"	"+"	"calc"	0	1	false	false	false	0
1150	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1151	"code"	"unicode"	"str"	0	1	false	false	false	0
1152	"length"	"stringlength"	"str"	0	1	false	false	false	0
1153	"right"	"stringright"	"str"	0	1	false	false	false	0
1154	"left"	"stringleft"	"str"	0	1	false	false	false	0
1155	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1156	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1157	"lower"	"toLower"	"str"	0	1	false	false	false	0
1158	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1159	"trim"	"trim"	"str"	0	1	false	false	false	0
1160	"trim"	"trim"	"str"	0	1	false	false	false	0
1161	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1162	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1163	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1164	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1165	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1166	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1167	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1168	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1169	"insert"	"insert"	"str"	0	1	false	false	false	0
1170	"replace"	"replace"	"str"	0	1	false	false	false	0
1171	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1172	"space"	"space"	"str"	0	1	false	false	false	0
1173	"char_length"	"length"	"str"	0	1	false	false	false	0
1174	"character_length"	"length"	"str"	0	1	false	false	false	0
1175	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1176	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1177	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1178	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1179	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1180	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1181	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1182	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1183	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1184	"index"	"index"	"calc"	0	1	false	false	false	0
1185	"index"	"index"	"calc"	0	1	false	false	false	0
1186	"index"	"index"	"calc"	0	1	false	false	false	0
1187	"strings"	"strings"	"calc"	0	1	false	false	false	0
1188	"locate"	"locate"	"str"	0	1	false	false	false	0
1189	"locate"	"locate"	"str"	0	1	false	false	false	0
1190	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1191	"substring"	"substring"	"str"	0	1	false	false	false	0
1192	"substring"	"substring"	"str"	0	1	false	false	false	0
1193	"like"	"like"	"algebra"	0	1	false	false	false	0
1194	"like"	"like"	"algebra"	0	1	false	false	false	0
1195	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1196	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1197	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1198	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1199	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1200	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1201	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1202	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1203	"concat"	"+"	"calc"	0	1	false	false	false	0
1204	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1205	"code"	"unicode"	"str"	0	1	false	false	false	0
1206	"length"	"stringlength"	"str"	0	1	false	false	false	0
1207	"right"	"stringright"	"str"	0	1	false	false	false	0
1208	"left"	"stringleft"	"str"	0	1	false	false	false	0
1209	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1210	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1211	"lower"	"toLower"	"str"	0	1	false	false	false	0
1212	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1213	"trim"	"trim"	"str"	0	1	false	false	false	0
1214	"trim"	"trim"	"str"	0	1	false	false	false	0
1215	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1216	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1217	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1218	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1219	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1220	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1221	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1222	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1223	"insert"	"insert"	"str"	0	1	false	false	false	0
1224	"replace"	"replace"	"str"	0	1	false	false	false	0
1225	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1226	"space"	"space"	"str"	0	1	false	false	false	0
1227	"char_length"	"length"	"str"	0	1	false	false	false	0
1228	"character_length"	"length"	"str"	0	1	false	false	false	0
1229	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1230	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1231	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1232	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1233	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1234	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1235	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1236	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1237	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1238	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1239	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
29	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
41	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
42	"exist"	"exist"	"aggr"	0	3	false	false	false	0
43	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
48	"min"	"min"	"aggr"	0	3	false	false	false	0
49	"max"	"max"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"sum"	"sum"	"aggr"	0	3	false	false	false	0
61	"sum"	"sum"	"aggr"	0	3	false	false	false	0
62	"sum"	"sum"	"aggr"	0	3	false	false	false	0
63	"sum"	"sum"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
68	"prod"	"prod"	"aggr"	0	3	false	false	false	0
69	"prod"	"prod"	"aggr"	0	3	false	false	false	0
70	"prod"	"prod"	"aggr"	0	3	false	false	false	0
71	"prod"	"prod"	"aggr"	0	3	false	false	false	0
72	"prod"	"prod"	"aggr"	0	3	false	false	false	0
73	"prod"	"prod"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"prod"	"prod"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"prod"	"prod"	"aggr"	0	3	false	false	false	0
92	"avg"	"avg"	"aggr"	0	3	false	false	false	0
93	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
94	"count"	"count"	"aggr"	0	3	false	false	false	0
5630	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5633	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5639	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5659	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5664	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5669	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5673	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5677	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5681	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5685	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5688	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5692	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5696	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5700	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5704	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5708	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5712	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5716	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5720	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5724	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5728	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5732	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5736	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5740	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5744	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5751	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5757	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5762	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5767	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5772	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5777	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5782	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5788	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5792	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5796	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5800	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5805	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5809	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5813	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5817	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5821	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5825	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5830	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5835	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5840	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5845	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5855	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5905	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5907	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5909	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5912	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5914	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5944	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5948	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5951	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5955	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5959	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5963	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5967	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5971	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5975	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5979	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5984	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5989	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5994	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5999	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6004	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6009	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6014	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6019	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6024	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6029	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6034	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6039	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6044	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6049	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6054	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6059	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6064	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6068	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6084	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6087	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6091	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6094	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6098	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6101	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6108	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6113	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6119	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6125	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6130	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6135	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6139	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6143	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6147	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6151	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6154	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6164	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6172	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, htype string,\n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6186	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6190	"flush_log"	"-- enqueue a flush log, ie as soon as no transactions are active \n-- flush the log and cleanup the used storage\ncreate procedure sys.flush_log ()\n\texternal name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6192	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6212	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6215	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6218	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6221	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6224	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6227	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6230	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6242	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6244	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6248	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6252	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6256	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6260	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6264	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6268	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6272	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6276	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6280	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6284	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6288	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6292	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6296	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6300	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6304	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6308	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6312	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6316	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6320	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6324	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6328	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6332	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6336	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6340	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6344	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6348	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6352	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6356	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6360	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6364	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6368	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6372	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6376	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6380	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6384	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6388	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6392	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6396	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6400	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6404	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6408	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6412	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6416	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6420	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6424	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6428	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6432	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6436	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6440	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6444	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6448	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6453	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6458	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6463	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6468	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6473	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6478	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6483	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6488	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6493	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6498	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6503	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6508	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6513	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6518	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6523	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6528	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6533	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6538	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6542	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6546	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6550	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6554	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6558	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6563	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6581	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6585	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6590	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6595	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6600	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6605	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6610	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6615	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6620	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6625	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6630	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6635	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6639	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6643	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6647	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6652	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6656	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6660	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6664	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6668	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6672	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6676	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6680	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6685	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6690	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6695	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6700	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6705	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6710	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6715	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6721	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6726	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6732	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6736	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6740	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6745	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6750	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6754	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6759	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6764	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6769	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6776	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6773
6781	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6773
6786	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6773
6791	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6773
6796	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6773
6801	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6773
6805	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6773
6809	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6773
6813	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6773
6817	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6773
6821	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6773
6825	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6773
6829	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6773
6833	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6773
6837	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6773
6841	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6773
6845	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6773
6849	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6773
6853	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6773
6857	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6773
6861	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6773
6865	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6773
6869	"filter"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6773
6874	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6879	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6882	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6886	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6890	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6916	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6919	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6922	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6925	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6961	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6964	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6968	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7012	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7014	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7020	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7026	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7031	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7036	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7083	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7087	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7092	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7098	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7105	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7109	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7114	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7119	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7124	"fuse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7130	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7128
7135	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7128
7140	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7128
7144	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7128
7148	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7128
7153	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7128
7157	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7128
7161	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7128
7165	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7128
7168	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7128
7238	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7243	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7249	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7254	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7260	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7265	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7271	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7276	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7282	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7288	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7294	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7300	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7306	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7311	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6897	6898	0	"keywords_keyword_pkey"
6902	6906	0	"table_types_table_type_id_pkey"
6905	6906	0	"table_types_table_type_name_unique"
6910	6914	0	"dependency_types_dependency_type_id_pkey"
6913	6914	0	"dependency_types_dependency_type_name_unique"
7178	7179	0	"files_pkey_file_id"
7189	7192	0	"sq_pkey_sn_file_id"
7191	7192	1	"sq_fkey_file_id"
7208	7211	0	"rg_pkey_id_file_id"
7210	7211	1	"rg_fkey_file_id"
7220	7223	0	"pg_pkey_id_file_id"
7222	7223	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6896	6898	0	"keywords_keyword_pkey"	-1	-1
6901	6906	0	"table_types_table_type_id_pkey"	-1	-1
6904	6906	1	"table_types_table_type_name_unique"	-1	-1
6909	6914	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6912	6914	1	"dependency_types_dependency_type_name_unique"	-1	-1
7177	7179	0	"files_pkey_file_id"	-1	-1
7188	7192	0	"sq_pkey_sn_file_id"	-1	-1
7190	7192	2	"sq_fkey_file_id"	7177	514
7207	7211	0	"rg_pkey_id_file_id"	-1	-1
7209	7211	2	"rg_fkey_file_id"	7177	514
7219	7223	0	"pg_pkey_id_file_id"	-1	-1
7221	7223	2	"pg_fkey_file_id"	7177	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6897	"keyword"	0
6896	"keyword"	0
6902	"table_type_id"	0
6905	"table_type_name"	0
6901	"table_type_id"	0
6904	"table_type_name"	0
6910	"dependency_type_id"	0
6913	"dependency_type_name"	0
6909	"dependency_type_id"	0
6912	"dependency_type_name"	0
7178	"file_id"	0
7177	"file_id"	0
7189	"sn"	0
7189	"file_id"	1
7191	"file_id"	0
7188	"sn"	0
7188	"file_id"	1
7190	"file_id"	0
7208	"id"	0
7208	"file_id"	1
7210	"file_id"	0
7207	"id"	0
7207	"file_id"	1
7209	"file_id"	0
7220	"id"	0
7220	"file_id"	1
7222	"file_id"	0
7219	"id"	0
7219	"file_id"	1
7221	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5609	1	1	0	0
5619	1	1	0	0
5645	1	1	0	0
5648	1	1	0	0
5652	1	1	0	0
7318	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6773	"json"	3	3	true
7128	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1512 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
44
45
46
47
50
51
52
74
75
76
77
78
79
80
81
82
83
84
85
86
87
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
29
41
42
43
48
49
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
88
89
90
91
92
93
94
5630
5633
5639
5659
5664
5669
5673
5677
5681
5685
5688
5692
5696
5700
5704
5708
5712
5716
5720
5724
5728
5732
5736
5740
5744
5751
5757
5762
5767
5772
5777
5782
5788
5792
5796
5800
5805
5809
5813
5817
5821
5825
5830
5835
5840
5845
5855
5905
5907
5909
5912
5914
5944
5948
5951
5955
5959
5963
5967
5971
5975
5979
5984
5989
5994
5999
6004
6009
6014
6019
6024
6029
6034
6039
6044
6049
6054
6059
6064
6068
6084
6087
6091
6094
6098
6101
6108
6113
6119
6125
6130
6135
6139
6143
6147
6151
6154
6164
6172
6186
6190
6192
6212
6215
6218
6221
6224
6227
6230
6242
6244
6248
6252
6256
6260
6264
6268
6272
6276
6280
6284
6288
6292
6296
6300
6304
6308
6312
6316
6320
6324
6328
6332
6336
6340
6344
6348
6352
6356
6360
6364
6368
6372
6376
6380
6384
6388
6392
6396
6400
6404
6408
6412
6416
6420
6424
6428
6432
6436
6440
6444
6448
6453
6458
6463
6468
6473
6478
6483
6488
6493
6498
6503
6508
6513
6518
6523
6528
6533
6538
6542
6546
6550
6554
6558
6563
6581
6585
6590
6595
6600
6605
6610
6615
6620
6625
6630
6635
6639
6643
6647
6652
6656
6660
6664
6668
6672
6676
6680
6685
6690
6695
6700
6705
6710
6715
6721
6726
6732
6736
6740
6745
6750
6754
6759
6764
6769
6776
6781
6786
6791
6796
6801
6805
6809
6813
6817
6821
6825
6829
6833
6837
6841
6845
6849
6853
6857
6861
6865
6869
6874
6879
6882
6886
6890
6916
6919
6922
6925
6961
6964
6968
7012
7014
7020
7026
7031
7036
7083
7087
7092
7098
7105
7109
7114
7119
7124
7130
7135
7140
7144
7148
7153
7157
7161
7165
7168
7238
7243
7249
7254
7260
7265
7271
7276
7282
7288
7294
7300
7306
7311
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 46 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"hge"	"hugeint"	128	1	2	7	0
14	"bte"	"decimal"	2	1	10	10	0
15	"sht"	"decimal"	4	1	10	10	0
16	"int"	"decimal"	9	1	10	10	0
17	"lng"	"decimal"	18	1	10	10	0
18	"hge"	"decimal"	39	1	10	10	0
19	"flt"	"real"	24	2	2	11	0
20	"dbl"	"double"	53	2	2	11	0
21	"int"	"month_interval"	32	0	2	8	0
22	"lng"	"sec_interval"	13	1	10	9	0
23	"daytime"	"time"	7	0	0	12	0
24	"daytime"	"timetz"	7	1	0	12	0
25	"date"	"date"	0	0	0	13	0
26	"timestamp"	"timestamp"	7	0	0	14	0
27	"timestamp"	"timestamptz"	7	1	0	14	0
28	"sqlblob"	"blob"	0	0	0	5	0
5686	"url"	"url"	0	0	0	15	2000
5786	"inet"	"inet"	0	0	0	15	2000
6567	"wkb"	"point"	0	0	0	15	2000
6568	"wkb"	"curve"	0	0	0	15	2000
6569	"wkb"	"linestring"	0	0	0	15	2000
6570	"wkb"	"surface"	0	0	0	15	2000
6571	"wkb"	"polygon"	0	0	0	15	2000
6572	"wkb"	"multipoint"	0	0	0	15	2000
6573	"wkb"	"multicurve"	0	0	0	15	2000
6574	"wkb"	"multilinestring"	0	0	0	15	2000
6575	"wkb"	"multisurface"	0	0	0	15	2000
6576	"wkb"	"multipolygon"	0	0	0	15	2000
6577	"wkb"	"geometry"	0	0	0	15	2000
6578	"wkb"	"geomcollection"	0	0	0	15	2000
6579	"mbr"	"mbr"	0	0	0	15	2000
6774	"json"	"json"	0	0	0	15	2000
6877	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

