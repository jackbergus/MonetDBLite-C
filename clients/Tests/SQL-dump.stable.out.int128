stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- assume milliseconds when converted to TIMESTAMP
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
-- gr_name is "GLOBAL" or "ROOT" for classic NetCDF files
-- used for groups in HDF5 files
-- global attributes have obj_name=""

-- create function netcdfvar (fname varchar(256)) 
--	returns int external name netcdf.test;

create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create procedure profiler_openstream(host string, port int) external name profiler."openStream";
create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- COPY into reject management

create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5664	"id"	"int"	32	0	5663	NULL	true	0	NULL
5665	"name"	"varchar"	1024	0	5663	NULL	true	1	NULL
5666	"schema_id"	"int"	32	0	5663	NULL	true	2	NULL
5667	"query"	"varchar"	2048	0	5663	NULL	true	3	NULL
5668	"type"	"smallint"	16	0	5663	NULL	true	4	NULL
5669	"system"	"boolean"	1	0	5663	NULL	true	5	NULL
5670	"commit_action"	"smallint"	16	0	5663	NULL	true	6	NULL
5671	"access"	"smallint"	16	0	5663	NULL	true	7	NULL
5672	"temporary"	"smallint"	16	0	5663	NULL	true	8	NULL
5674	"id"	"int"	32	0	5673	NULL	true	0	NULL
5675	"name"	"varchar"	1024	0	5673	NULL	true	1	NULL
5676	"type"	"varchar"	1024	0	5673	NULL	true	2	NULL
5677	"type_digits"	"int"	32	0	5673	NULL	true	3	NULL
5678	"type_scale"	"int"	32	0	5673	NULL	true	4	NULL
5679	"table_id"	"int"	32	0	5673	NULL	true	5	NULL
5680	"default"	"varchar"	2048	0	5673	NULL	true	6	NULL
5681	"null"	"boolean"	1	0	5673	NULL	true	7	NULL
5682	"number"	"int"	32	0	5673	NULL	true	8	NULL
5683	"storage"	"varchar"	2048	0	5673	NULL	true	9	NULL
5690	"name"	"varchar"	1024	0	5689	NULL	true	0	NULL
5691	"fullname"	"varchar"	2048	0	5689	NULL	true	1	NULL
5692	"default_schema"	"int"	9	0	5689	NULL	true	2	NULL
5696	"name"	"varchar"	1024	0	5695	NULL	true	0	NULL
5697	"fullname"	"varchar"	2024	0	5695	NULL	true	1	NULL
5698	"default_schema"	"int"	9	0	5695	NULL	true	2	NULL
5700	"login_id"	"int"	32	0	5699	NULL	true	0	NULL
5701	"role_id"	"int"	32	0	5699	NULL	true	1	NULL
5703	"id"	"int"	32	0	5702	NULL	true	0	NULL
5704	"name"	"varchar"	1024	0	5702	NULL	true	1	NULL
5705	"grantor"	"int"	32	0	5702	NULL	true	2	NULL
5707	"obj_id"	"int"	32	0	5706	NULL	true	0	NULL
5708	"auth_id"	"int"	32	0	5706	NULL	true	1	NULL
5709	"privileges"	"int"	32	0	5706	NULL	true	2	NULL
5710	"grantor"	"int"	32	0	5706	NULL	true	3	NULL
5711	"grantable"	"int"	32	0	5706	NULL	true	4	NULL
5920	"id"	"oid"	63	0	5928	NULL	true	0	NULL
5921	"owner"	"clob"	0	0	5928	NULL	true	1	NULL
5922	"defined"	"timestamp"	7	0	5928	NULL	true	2	NULL
5923	"query"	"clob"	0	0	5928	NULL	true	3	NULL
5924	"pipe"	"clob"	0	0	5928	NULL	true	4	NULL
5925	"plan"	"clob"	0	0	5928	NULL	true	5	NULL
5926	"mal"	"int"	32	0	5928	NULL	true	6	NULL
5927	"optimize"	"bigint"	64	0	5928	NULL	true	7	NULL
5930	"id"	"oid"	63	0	5939	NULL	true	0	NULL
5931	"start"	"timestamp"	7	0	5939	NULL	true	1	NULL
5932	"stop"	"timestamp"	7	0	5939	NULL	true	2	NULL
5933	"arguments"	"clob"	0	0	5939	NULL	true	3	NULL
5934	"tuples"	"wrd"	64	0	5939	NULL	true	4	NULL
5935	"run"	"bigint"	64	0	5939	NULL	true	5	NULL
5936	"ship"	"bigint"	64	0	5939	NULL	true	6	NULL
5937	"cpu"	"int"	32	0	5939	NULL	true	7	NULL
5938	"io"	"int"	32	0	5939	NULL	true	8	NULL
5941	"id"	"oid"	63	0	5957	NULL	true	0	NULL
5942	"owner"	"clob"	0	0	5957	NULL	true	1	NULL
5943	"defined"	"timestamp"	7	0	5957	NULL	true	2	NULL
5944	"query"	"clob"	0	0	5957	NULL	true	3	NULL
5945	"pipe"	"clob"	0	0	5957	NULL	true	4	NULL
5946	"plan"	"clob"	0	0	5957	NULL	true	5	NULL
5947	"mal"	"int"	32	0	5957	NULL	true	6	NULL
5948	"optimize"	"bigint"	64	0	5957	NULL	true	7	NULL
5949	"start"	"timestamp"	7	0	5957	NULL	true	8	NULL
5950	"stop"	"timestamp"	7	0	5957	NULL	true	9	NULL
5951	"arguments"	"clob"	0	0	5957	NULL	true	10	NULL
5952	"tuples"	"wrd"	64	0	5957	NULL	true	11	NULL
5953	"run"	"bigint"	64	0	5957	NULL	true	12	NULL
5954	"ship"	"bigint"	64	0	5957	NULL	true	13	NULL
5955	"cpu"	"int"	32	0	5957	NULL	true	14	NULL
5956	"io"	"int"	32	0	5957	NULL	true	15	NULL
5983	"event"	"int"	32	0	5996	NULL	true	0	NULL
5984	"clk"	"varchar"	20	0	5996	NULL	true	1	NULL
5985	"pc"	"varchar"	50	0	5996	NULL	true	2	NULL
5986	"thread"	"int"	32	0	5996	NULL	true	3	NULL
5987	"ticks"	"bigint"	64	0	5996	NULL	true	4	NULL
5988	"rrsmb"	"bigint"	64	0	5996	NULL	true	5	NULL
5989	"vmmb"	"bigint"	64	0	5996	NULL	true	6	NULL
5990	"reads"	"bigint"	64	0	5996	NULL	true	7	NULL
5991	"writes"	"bigint"	64	0	5996	NULL	true	8	NULL
5992	"minflt"	"bigint"	64	0	5996	NULL	true	9	NULL
5993	"majflt"	"bigint"	64	0	5996	NULL	true	10	NULL
5994	"nvcsw"	"bigint"	64	0	5996	NULL	true	11	NULL
5995	"stmt"	"clob"	0	0	5996	NULL	true	12	NULL
6130	"user"	"clob"	0	0	6136	NULL	true	0	NULL
6131	"login"	"timestamp"	7	0	6136	NULL	true	1	NULL
6132	"sessiontimeout"	"bigint"	64	0	6136	NULL	true	2	NULL
6133	"lastcommand"	"timestamp"	7	0	6136	NULL	true	3	NULL
6134	"querytimeout"	"bigint"	64	0	6136	NULL	true	4	NULL
6135	"active"	"boolean"	1	0	6136	NULL	true	5	NULL
6213	"name"	"clob"	0	0	6216	NULL	true	0	NULL
6214	"def"	"clob"	0	0	6216	NULL	true	1	NULL
6215	"status"	"clob"	0	0	6216	NULL	true	2	NULL
6222	"name"	"clob"	0	0	6224	NULL	true	0	NULL
6223	"value"	"clob"	0	0	6224	NULL	true	1	NULL
6254	"qtag"	"bigint"	64	0	6262	NULL	true	0	NULL
6255	"user"	"clob"	0	0	6262	NULL	true	1	NULL
6256	"started"	"timestamp"	7	0	6262	NULL	true	2	NULL
6257	"estimate"	"timestamp"	7	0	6262	NULL	true	3	NULL
6258	"progress"	"int"	32	0	6262	NULL	true	4	NULL
6259	"status"	"clob"	0	0	6262	NULL	true	5	NULL
6260	"tag"	"oid"	63	0	6262	NULL	true	6	NULL
6261	"query"	"clob"	0	0	6262	NULL	true	7	NULL
6288	"rowid"	"bigint"	64	0	6292	NULL	true	0	NULL
6289	"fldid"	"int"	32	0	6292	NULL	true	1	NULL
6290	"message"	"clob"	0	0	6292	NULL	true	2	NULL
6291	"input"	"clob"	0	0	6292	NULL	true	3	NULL
6947	"keyword"	"varchar"	40	0	6950	NULL	false	0	NULL
6952	"table_type_id"	"smallint"	16	0	6958	NULL	false	0	NULL
6955	"table_type_name"	"varchar"	25	0	6958	NULL	false	1	NULL
6960	"dependency_type_id"	"smallint"	16	0	6966	NULL	false	0	NULL
6963	"dependency_type_name"	"varchar"	15	0	6966	NULL	false	1	NULL
6981	"file_id"	"int"	32	0	6983	NULL	true	0	NULL
6982	"location"	"char"	256	0	6983	NULL	true	1	NULL
6985	"dim_id"	"int"	32	0	6989	NULL	true	0	NULL
6986	"file_id"	"int"	32	0	6989	NULL	true	1	NULL
6987	"name"	"varchar"	64	0	6989	NULL	true	2	NULL
6988	"length"	"int"	32	0	6989	NULL	true	3	NULL
6991	"var_id"	"int"	32	0	6997	NULL	true	0	NULL
6992	"file_id"	"int"	32	0	6997	NULL	true	1	NULL
6993	"name"	"varchar"	64	0	6997	NULL	true	2	NULL
6994	"vartype"	"varchar"	64	0	6997	NULL	true	3	NULL
6995	"ndim"	"int"	32	0	6997	NULL	true	4	NULL
6996	"coord_dim_id"	"int"	32	0	6997	NULL	true	5	NULL
6999	"var_id"	"int"	32	0	7003	NULL	true	0	NULL
7000	"dim_id"	"int"	32	0	7003	NULL	true	1	NULL
7001	"file_id"	"int"	32	0	7003	NULL	true	2	NULL
7002	"dimpos"	"int"	32	0	7003	NULL	true	3	NULL
7005	"obj_name"	"varchar"	256	0	7011	NULL	true	0	NULL
7006	"att_name"	"varchar"	256	0	7011	NULL	true	1	NULL
7007	"att_type"	"varchar"	64	0	7011	NULL	true	2	NULL
7008	"value"	"clob"	0	0	7011	NULL	true	3	NULL
7009	"file_id"	"int"	32	0	7011	NULL	true	4	NULL
7010	"gr_name"	"varchar"	256	0	7011	NULL	true	5	NULL
7036	"schema"	"clob"	0	0	7050	NULL	true	0	NULL
7037	"table"	"clob"	0	0	7050	NULL	true	1	NULL
7038	"column"	"clob"	0	0	7050	NULL	true	2	NULL
7039	"type"	"clob"	0	0	7050	NULL	true	3	NULL
7040	"mode"	"clob"	0	0	7050	NULL	true	4	NULL
7041	"location"	"clob"	0	0	7050	NULL	true	5	NULL
7042	"count"	"bigint"	64	0	7050	NULL	true	6	NULL
7043	"typewidth"	"int"	32	0	7050	NULL	true	7	NULL
7044	"columnsize"	"bigint"	64	0	7050	NULL	true	8	NULL
7045	"heapsize"	"bigint"	64	0	7050	NULL	true	9	NULL
7046	"hashes"	"bigint"	64	0	7050	NULL	true	10	NULL
7047	"phash"	"boolean"	1	0	7050	NULL	true	11	NULL
7048	"imprints"	"bigint"	64	0	7050	NULL	true	12	NULL
7049	"sorted"	"boolean"	1	0	7050	NULL	true	13	NULL
7052	"schema"	"clob"	0	0	7062	NULL	true	0	NULL
7053	"table"	"clob"	0	0	7062	NULL	true	1	NULL
7054	"column"	"clob"	0	0	7062	NULL	true	2	NULL
7055	"type"	"clob"	0	0	7062	NULL	true	3	NULL
7056	"typewidth"	"int"	32	0	7062	NULL	true	4	NULL
7057	"count"	"bigint"	64	0	7062	NULL	true	5	NULL
7058	"distinct"	"bigint"	64	0	7062	NULL	true	6	NULL
7059	"atomwidth"	"int"	32	0	7062	NULL	true	7	NULL
7060	"reference"	"boolean"	1	0	7062	NULL	true	8	NULL
7061	"sorted"	"boolean"	1	0	7062	NULL	true	9	NULL
7100	"schema"	"clob"	0	0	7110	NULL	true	0	NULL
7101	"table"	"clob"	0	0	7110	NULL	true	1	NULL
7102	"column"	"clob"	0	0	7110	NULL	true	2	NULL
7103	"type"	"clob"	0	0	7110	NULL	true	3	NULL
7104	"count"	"bigint"	64	0	7110	NULL	true	4	NULL
7105	"columnsize"	"bigint"	64	0	7110	NULL	true	5	NULL
7106	"heapsize"	"bigint"	64	0	7110	NULL	true	6	NULL
7107	"hashes"	"bigint"	64	0	7110	NULL	true	7	NULL
7108	"imprints"	"bigint"	64	0	7110	NULL	true	8	NULL
7109	"sorted"	"boolean"	1	0	7110	NULL	true	9	NULL
7112	"schema"	"clob"	0	0	7120	NULL	true	0	NULL
7113	"table"	"clob"	0	0	7120	NULL	true	1	NULL
7114	"count"	"bigint"	64	0	7120	NULL	true	2	NULL
7115	"columnsize"	"hugeint"	128	0	7120	NULL	true	3	NULL
7116	"heapsize"	"hugeint"	128	0	7120	NULL	true	4	NULL
7117	"hashes"	"hugeint"	128	0	7120	NULL	true	5	NULL
7118	"imprints"	"hugeint"	128	0	7120	NULL	true	6	NULL
7119	"auxiliary"	"hugeint"	128	0	7120	NULL	true	7	NULL
7122	"column_id"	"int"	32	0	7133	NULL	true	0	NULL
7123	"type"	"clob"	0	0	7133	NULL	true	1	NULL
7124	"width"	"int"	32	0	7133	NULL	true	2	NULL
7125	"stamp"	"timestamp"	7	0	7133	NULL	true	3	NULL
7126	"sample"	"bigint"	64	0	7133	NULL	true	4	NULL
7127	"count"	"bigint"	64	0	7133	NULL	true	5	NULL
7128	"unique"	"bigint"	64	0	7133	NULL	true	6	NULL
7129	"nils"	"bigint"	64	0	7133	NULL	true	7	NULL
7130	"minval"	"clob"	0	0	7133	NULL	true	8	NULL
7131	"maxval"	"clob"	0	0	7133	NULL	true	9	NULL
7132	"sorted"	"boolean"	1	0	7133	NULL	true	10	NULL
7223	"file_id"	"bigint"	64	0	7231	NULL	false	0	NULL
7224	"file_location"	"clob"	0	0	7231	NULL	false	1	NULL
7225	"dbschema"	"smallint"	16	0	7231	NULL	false	2	NULL
7226	"format_version"	"varchar"	7	0	7231	NULL	true	3	NULL
7227	"sorting_order"	"varchar"	10	0	7231	NULL	true	4	NULL
7228	"comments"	"clob"	0	0	7231	NULL	true	5	NULL
7233	"sn"	"clob"	0	0	7244	NULL	false	0	NULL
7234	"file_id"	"bigint"	64	0	7244	NULL	false	1	NULL
7235	"ln"	"int"	32	0	7244	NULL	true	2	NULL
7236	"as"	"int"	32	0	7244	NULL	true	3	NULL
7237	"m5"	"clob"	0	0	7244	NULL	true	4	NULL
7238	"sp"	"clob"	0	0	7244	NULL	true	5	NULL
7239	"ur"	"clob"	0	0	7244	NULL	true	6	NULL
7246	"id"	"clob"	0	0	7263	NULL	false	0	NULL
7247	"file_id"	"bigint"	64	0	7263	NULL	false	1	NULL
7248	"cn"	"clob"	0	0	7263	NULL	true	2	NULL
7249	"ds"	"clob"	0	0	7263	NULL	true	3	NULL
7250	"dt"	"timestamp"	7	0	7263	NULL	true	4	NULL
7251	"fo"	"clob"	0	0	7263	NULL	true	5	NULL
7252	"ks"	"clob"	0	0	7263	NULL	true	6	NULL
7253	"lb"	"clob"	0	0	7263	NULL	true	7	NULL
7254	"pg"	"clob"	0	0	7263	NULL	true	8	NULL
7255	"pi"	"int"	32	0	7263	NULL	true	9	NULL
7256	"pl"	"clob"	0	0	7263	NULL	true	10	NULL
7257	"pu"	"clob"	0	0	7263	NULL	true	11	NULL
7258	"sm"	"clob"	0	0	7263	NULL	true	12	NULL
7265	"id"	"clob"	0	0	7275	NULL	false	0	NULL
7266	"file_id"	"bigint"	64	0	7275	NULL	false	1	NULL
7267	"pn"	"clob"	0	0	7275	NULL	true	2	NULL
7268	"cl"	"clob"	0	0	7275	NULL	true	3	NULL
7269	"pp"	"clob"	0	0	7275	NULL	true	4	NULL
7270	"vn"	"clob"	0	0	7275	NULL	true	5	NULL
7277	"qname"	"clob"	0	0	7288	NULL	false	0	NULL
7278	"flag"	"smallint"	16	0	7288	NULL	false	1	NULL
7279	"rname"	"clob"	0	0	7288	NULL	false	2	NULL
7280	"pos"	"int"	32	0	7288	NULL	false	3	NULL
7281	"mapq"	"smallint"	16	0	7288	NULL	false	4	NULL
7282	"cigar"	"clob"	0	0	7288	NULL	false	5	NULL
7283	"rnext"	"clob"	0	0	7288	NULL	false	6	NULL
7284	"pnext"	"int"	32	0	7288	NULL	false	7	NULL
7285	"tlen"	"int"	32	0	7288	NULL	false	8	NULL
7286	"seq"	"clob"	0	0	7288	NULL	false	9	NULL
7287	"qual"	"clob"	0	0	7288	NULL	false	10	NULL
7369	"function_id"	"int"	32	0	7370	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5663	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5673	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5689	"db_user_info"	2000	NULL	0	true	0	0
5695	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5699	"user_role"	2000	NULL	0	true	0	0
5702	"auths"	2000	NULL	0	true	0	0
5706	"privileges"	2000	NULL	0	true	0	0
5928	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5939	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5957	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5996	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6136	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6216	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6224	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6262	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6292	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6950	"keywords"	2000	NULL	0	true	0	0
6958	"table_types"	2000	NULL	0	true	0	0
6966	"dependency_types"	2000	NULL	0	true	0	0
6983	"netcdf_files"	2000	NULL	0	true	0	0
6989	"netcdf_dims"	2000	NULL	0	true	0	0
6997	"netcdf_vars"	2000	NULL	0	true	0	0
7003	"netcdf_vardim"	2000	NULL	0	true	0	0
7011	"netcdf_attrs"	2000	NULL	0	true	0	0
7050	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7062	"storagemodelinput"	2000	NULL	0	true	0	0
7110	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7120	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7133	"statistics"	2000	NULL	0	true	0	0
7231	"files"	7180	NULL	0	true	0	0
7244	"sq"	7180	NULL	0	true	0	0
7263	"rg"	7180	NULL	0	true	0	0
7275	"pg"	7180	NULL	0	true	0	0
7288	"export"	7180	NULL	0	true	0	0
7370	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4285 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"oid"	63	0	0	0
2156	30	"arg_1"	"wrd"	64	0	1	1
2157	31	"res_0"	"oid"	63	0	0	0
2158	31	"arg_1"	"oid"	63	0	1	1
2159	32	"res_0"	"wrd"	64	0	0	0
2160	32	"arg_1"	"any"	0	0	1	1
2161	33	"res_0"	"wrd"	64	0	0	0
2162	33	"arg_1"	"wrd"	64	0	1	1
2163	33	"arg_2"	"int"	32	0	1	2
2164	33	"arg_3"	"any"	0	0	1	3
2165	34	"res_0"	"boolean"	1	0	0	0
2166	34	"arg_1"	"any"	0	0	1	1
2167	34	"arg_2"	"any"	0	0	1	2
2168	35	"res_0"	"boolean"	1	0	0	0
2169	35	"arg_1"	"any"	0	0	1	1
2170	35	"arg_2"	"any"	0	0	1	2
2171	36	"res_0"	"boolean"	1	0	0	0
2172	36	"arg_1"	"any"	0	0	1	1
2173	37	"res_0"	"boolean"	1	0	0	0
2174	37	"arg_1"	"any"	0	0	1	1
2175	37	"arg_2"	"any"	0	0	1	2
2176	38	"res_0"	"boolean"	1	0	0	0
2177	38	"arg_1"	"any"	0	0	1	1
2178	38	"arg_2"	"any"	0	0	1	2
2179	39	"res_0"	"boolean"	1	0	0	0
2180	39	"arg_1"	"any"	0	0	1	1
2181	39	"arg_2"	"any"	0	0	1	2
2182	40	"res_0"	"boolean"	1	0	0	0
2183	40	"arg_1"	"any"	0	0	1	1
2184	40	"arg_2"	"any"	0	0	1	2
2185	44	"res_0"	"boolean"	1	0	0	0
2186	44	"arg_1"	"any"	0	0	1	1
2187	44	"arg_2"	"any"	0	0	1	2
2188	45	"res_0"	"oid"	63	0	0	0
2189	45	"arg_1"	"any"	0	0	1	1
2190	46	"res_0"	"int"	32	0	0	0
2191	46	"arg_1"	"any"	0	0	1	1
2192	47	"res_0"	"oid"	63	0	0	0
2193	47	"arg_1"	"any"	0	0	1	1
2194	47	"arg_2"	"varchar"	0	0	1	2
2195	47	"arg_3"	"varchar"	0	0	1	3
2196	50	"res_0"	"any"	0	0	0	0
2197	50	"arg_1"	"any"	0	0	1	1
2198	50	"arg_2"	"any"	0	0	1	2
2199	51	"res_0"	"any"	0	0	0	0
2200	51	"arg_1"	"any"	0	0	1	1
2201	51	"arg_2"	"any"	0	0	1	2
2202	52	"res_0"	"any"	0	0	0	0
2203	52	"arg_1"	"boolean"	1	0	1	1
2204	52	"arg_2"	"any"	0	0	1	2
2205	52	"arg_3"	"any"	0	0	1	3
2206	74	"res_0"	"oid"	63	0	0	0
2207	74	"arg_1"	"oid"	63	0	1	1
2208	74	"arg_2"	"oid"	63	0	1	2
2209	75	"res_0"	"tinyint"	8	0	0	0
2210	75	"arg_1"	"tinyint"	8	0	1	1
2211	75	"arg_2"	"tinyint"	8	0	1	2
2212	76	"res_0"	"smallint"	16	0	0	0
2213	76	"arg_1"	"smallint"	16	0	1	1
2214	76	"arg_2"	"smallint"	16	0	1	2
2215	77	"res_0"	"int"	32	0	0	0
2216	77	"arg_1"	"int"	32	0	1	1
2217	77	"arg_2"	"int"	32	0	1	2
2218	78	"res_0"	"bigint"	64	0	0	0
2219	78	"arg_1"	"bigint"	64	0	1	1
2220	78	"arg_2"	"bigint"	64	0	1	2
2221	79	"res_0"	"wrd"	64	0	0	0
2222	79	"arg_1"	"wrd"	64	0	1	1
2223	79	"arg_2"	"wrd"	64	0	1	2
2224	80	"res_0"	"hugeint"	128	0	0	0
2225	80	"arg_1"	"hugeint"	128	0	1	1
2226	80	"arg_2"	"hugeint"	128	0	1	2
2227	81	"res_0"	"decimal"	2	0	0	0
2228	81	"arg_1"	"decimal"	2	0	1	1
2229	81	"arg_2"	"decimal"	2	0	1	2
2230	82	"res_0"	"decimal"	4	0	0	0
2231	82	"arg_1"	"decimal"	4	0	1	1
2232	82	"arg_2"	"decimal"	4	0	1	2
2233	83	"res_0"	"decimal"	9	0	0	0
2234	83	"arg_1"	"decimal"	9	0	1	1
2235	83	"arg_2"	"decimal"	9	0	1	2
2236	84	"res_0"	"decimal"	18	0	0	0
2237	84	"arg_1"	"decimal"	18	0	1	1
2238	84	"arg_2"	"decimal"	18	0	1	2
2239	85	"res_0"	"decimal"	39	0	0	0
2240	85	"arg_1"	"decimal"	39	0	1	1
2241	85	"arg_2"	"decimal"	39	0	1	2
2242	86	"res_0"	"real"	24	0	0	0
2243	86	"arg_1"	"real"	24	0	1	1
2244	86	"arg_2"	"real"	24	0	1	2
2245	87	"res_0"	"double"	53	0	0	0
2246	87	"arg_1"	"double"	53	0	1	1
2247	87	"arg_2"	"double"	53	0	1	2
2248	97	"res_0"	"int"	32	0	0	0
2249	97	"arg_1"	"any"	0	0	1	1
2250	98	"res_0"	"int"	32	0	0	0
2251	98	"arg_1"	"any"	0	0	1	1
2252	99	"res_0"	"int"	32	0	0	0
2253	99	"arg_1"	"any"	0	0	1	1
2254	100	"res_0"	"any"	0	0	0	0
2255	100	"arg_1"	"any"	0	0	1	1
2256	101	"res_0"	"int"	32	0	0	0
2257	101	"arg_1"	"any"	0	0	1	1
2258	102	"res_0"	"int"	32	0	0	0
2259	102	"arg_1"	"any"	0	0	1	1
2260	102	"arg_2"	"oid"	63	0	1	2
2261	102	"arg_3"	"any"	0	0	1	3
2262	103	"res_0"	"int"	32	0	0	0
2263	103	"arg_1"	"any"	0	0	1	1
2264	103	"arg_2"	"oid"	63	0	1	2
2265	103	"arg_3"	"any"	0	0	1	3
2266	104	"res_0"	"int"	32	0	0	0
2267	104	"arg_1"	"any"	0	0	1	1
2268	104	"arg_2"	"oid"	63	0	1	2
2269	104	"arg_3"	"any"	0	0	1	3
2270	105	"res_0"	"any"	0	0	0	0
2271	105	"arg_1"	"any"	0	0	1	1
2272	105	"arg_2"	"oid"	63	0	1	2
2273	105	"arg_3"	"any"	0	0	1	3
2274	106	"res_0"	"int"	32	0	0	0
2275	106	"arg_1"	"any"	0	0	1	1
2276	106	"arg_2"	"oid"	63	0	1	2
2277	106	"arg_3"	"any"	0	0	1	3
2278	107	"res_0"	"int"	32	0	0	0
2279	107	"arg_1"	"any"	0	0	1	1
2280	107	"arg_2"	"oid"	63	0	1	2
2281	107	"arg_3"	"oid"	63	0	1	3
2282	107	"arg_4"	"oid"	63	0	1	4
2283	108	"res_0"	"int"	32	0	0	0
2284	108	"arg_1"	"any"	0	0	1	1
2285	108	"arg_2"	"oid"	63	0	1	2
2286	108	"arg_3"	"oid"	63	0	1	3
2287	108	"arg_4"	"oid"	63	0	1	4
2288	109	"res_0"	"int"	32	0	0	0
2289	109	"arg_1"	"any"	0	0	1	1
2290	109	"arg_2"	"oid"	63	0	1	2
2291	109	"arg_3"	"oid"	63	0	1	3
2292	109	"arg_4"	"oid"	63	0	1	4
2293	110	"res_0"	"any"	0	0	0	0
2294	110	"arg_1"	"any"	0	0	1	1
2295	110	"arg_2"	"oid"	63	0	1	2
2296	110	"arg_3"	"oid"	63	0	1	3
2297	110	"arg_4"	"oid"	63	0	1	4
2298	111	"res_0"	"int"	32	0	0	0
2299	111	"arg_1"	"any"	0	0	1	1
2300	111	"arg_2"	"oid"	63	0	1	2
2301	111	"arg_3"	"oid"	63	0	1	3
2302	111	"arg_4"	"oid"	63	0	1	4
2303	112	"res_0"	"any"	0	0	0	0
2304	112	"arg_1"	"any"	0	0	1	1
2305	113	"res_0"	"any"	0	0	0	0
2306	113	"arg_1"	"any"	0	0	1	1
2307	114	"res_0"	"any"	0	0	0	0
2308	114	"arg_1"	"any"	0	0	1	1
2309	114	"arg_2"	"int"	32	0	1	2
2310	115	"res_0"	"any"	0	0	0	0
2311	115	"arg_1"	"any"	0	0	1	1
2312	115	"arg_2"	"int"	32	0	1	2
2313	116	"res_0"	"any"	0	0	0	0
2314	116	"arg_1"	"any"	0	0	1	1
2315	116	"arg_2"	"oid"	63	0	1	2
2316	116	"arg_3"	"oid"	63	0	1	3
2317	117	"res_0"	"any"	0	0	0	0
2318	117	"arg_1"	"any"	0	0	1	1
2319	117	"arg_2"	"oid"	63	0	1	2
2320	117	"arg_3"	"oid"	63	0	1	3
2321	118	"res_0"	"any"	0	0	0	0
2322	118	"arg_1"	"any"	0	0	1	1
2323	118	"arg_2"	"int"	32	0	1	2
2324	118	"arg_3"	"oid"	63	0	1	3
2325	118	"arg_4"	"oid"	63	0	1	4
2326	119	"res_0"	"any"	0	0	0	0
2327	119	"arg_1"	"any"	0	0	1	1
2328	119	"arg_2"	"int"	32	0	1	2
2329	119	"arg_3"	"oid"	63	0	1	3
2330	119	"arg_4"	"oid"	63	0	1	4
2331	120	"res_0"	"boolean"	1	0	0	0
2332	120	"arg_1"	"boolean"	1	0	1	1
2333	120	"arg_2"	"boolean"	1	0	1	2
2334	121	"res_0"	"boolean"	1	0	0	0
2335	121	"arg_1"	"boolean"	1	0	1	1
2336	121	"arg_2"	"boolean"	1	0	1	2
2337	122	"res_0"	"boolean"	1	0	0	0
2338	122	"arg_1"	"boolean"	1	0	1	1
2339	122	"arg_2"	"boolean"	1	0	1	2
2340	123	"res_0"	"boolean"	1	0	0	0
2341	123	"arg_1"	"boolean"	1	0	1	1
2342	124	"res_0"	"oid"	63	0	0	0
2343	124	"arg_1"	"oid"	63	0	1	1
2344	124	"arg_2"	"oid"	63	0	1	2
2345	125	"res_0"	"oid"	63	0	0	0
2346	125	"arg_1"	"oid"	63	0	1	1
2347	125	"arg_2"	"oid"	63	0	1	2
2348	126	"res_0"	"oid"	63	0	0	0
2349	126	"arg_1"	"oid"	63	0	1	1
2350	126	"arg_2"	"oid"	63	0	1	2
2351	127	"res_0"	"oid"	63	0	0	0
2352	127	"arg_1"	"oid"	63	0	1	1
2353	127	"arg_2"	"oid"	63	0	1	2
2354	128	"res_0"	"oid"	63	0	0	0
2355	128	"arg_1"	"oid"	63	0	1	1
2356	128	"arg_2"	"oid"	63	0	1	2
2357	129	"res_0"	"oid"	63	0	0	0
2358	129	"arg_1"	"oid"	63	0	1	1
2359	129	"arg_2"	"oid"	63	0	1	2
2360	130	"res_0"	"oid"	63	0	0	0
2361	130	"arg_1"	"oid"	63	0	1	1
2362	130	"arg_2"	"oid"	63	0	1	2
2363	131	"res_0"	"oid"	63	0	0	0
2364	131	"arg_1"	"oid"	63	0	1	1
2365	132	"res_0"	"oid"	63	0	0	0
2366	132	"arg_1"	"oid"	63	0	1	1
2367	132	"arg_2"	"int"	32	0	1	2
2368	133	"res_0"	"oid"	63	0	0	0
2369	133	"arg_1"	"oid"	63	0	1	1
2370	133	"arg_2"	"int"	32	0	1	2
2371	134	"res_0"	"oid"	63	0	0	0
2372	134	"arg_1"	"oid"	63	0	1	1
2373	135	"res_0"	"oid"	63	0	0	0
2374	135	"arg_1"	"oid"	63	0	1	1
2375	136	"res_0"	"tinyint"	8	0	0	0
2376	136	"arg_1"	"oid"	63	0	1	1
2377	137	"res_0"	"oid"	63	0	0	0
2378	137	"arg_1"	"oid"	63	0	1	1
2379	137	"arg_2"	"oid"	63	0	1	2
2380	138	"res_0"	"oid"	63	0	0	0
2381	138	"arg_1"	"oid"	63	0	1	1
2382	138	"arg_2"	"oid"	63	0	1	2
2383	139	"res_0"	"month_interval"	32	0	0	0
2384	139	"arg_1"	"month_interval"	32	0	1	1
2385	139	"arg_2"	"oid"	63	0	1	2
2386	140	"res_0"	"month_interval"	32	0	0	0
2387	140	"arg_1"	"month_interval"	32	0	1	1
2388	140	"arg_2"	"oid"	63	0	1	2
2389	141	"res_0"	"month_interval"	32	0	0	0
2390	141	"arg_1"	"month_interval"	32	0	1	1
2391	141	"arg_2"	"oid"	63	0	1	2
2392	142	"res_0"	"month_interval"	32	0	0	0
2393	142	"arg_1"	"month_interval"	32	0	1	1
2394	142	"arg_2"	"oid"	63	0	1	2
2395	143	"res_0"	"sec_interval"	13	0	0	0
2396	143	"arg_1"	"sec_interval"	13	0	1	1
2397	143	"arg_2"	"oid"	63	0	1	2
2398	144	"res_0"	"sec_interval"	13	0	0	0
2399	144	"arg_1"	"sec_interval"	13	0	1	1
2400	144	"arg_2"	"oid"	63	0	1	2
2401	145	"res_0"	"sec_interval"	13	0	0	0
2402	145	"arg_1"	"sec_interval"	13	0	1	1
2403	145	"arg_2"	"oid"	63	0	1	2
2404	146	"res_0"	"sec_interval"	13	0	0	0
2405	146	"arg_1"	"sec_interval"	13	0	1	1
2406	146	"arg_2"	"oid"	63	0	1	2
2407	147	"res_0"	"tinyint"	8	0	0	0
2408	147	"arg_1"	"tinyint"	8	0	1	1
2409	147	"arg_2"	"tinyint"	8	0	1	2
2410	148	"res_0"	"tinyint"	8	0	0	0
2411	148	"arg_1"	"tinyint"	8	0	1	1
2412	148	"arg_2"	"tinyint"	8	0	1	2
2413	149	"res_0"	"tinyint"	8	0	0	0
2414	149	"arg_1"	"tinyint"	8	0	1	1
2415	149	"arg_2"	"tinyint"	8	0	1	2
2416	150	"res_0"	"tinyint"	8	0	0	0
2417	150	"arg_1"	"tinyint"	8	0	1	1
2418	150	"arg_2"	"tinyint"	8	0	1	2
2419	151	"res_0"	"tinyint"	8	0	0	0
2420	151	"arg_1"	"tinyint"	8	0	1	1
2421	151	"arg_2"	"tinyint"	8	0	1	2
2422	152	"res_0"	"tinyint"	8	0	0	0
2423	152	"arg_1"	"tinyint"	8	0	1	1
2424	152	"arg_2"	"tinyint"	8	0	1	2
2425	153	"res_0"	"tinyint"	8	0	0	0
2426	153	"arg_1"	"tinyint"	8	0	1	1
2427	153	"arg_2"	"tinyint"	8	0	1	2
2428	154	"res_0"	"tinyint"	8	0	0	0
2429	154	"arg_1"	"tinyint"	8	0	1	1
2430	155	"res_0"	"tinyint"	8	0	0	0
2431	155	"arg_1"	"tinyint"	8	0	1	1
2432	155	"arg_2"	"int"	32	0	1	2
2433	156	"res_0"	"tinyint"	8	0	0	0
2434	156	"arg_1"	"tinyint"	8	0	1	1
2435	156	"arg_2"	"int"	32	0	1	2
2436	157	"res_0"	"tinyint"	8	0	0	0
2437	157	"arg_1"	"tinyint"	8	0	1	1
2438	158	"res_0"	"tinyint"	8	0	0	0
2439	158	"arg_1"	"tinyint"	8	0	1	1
2440	159	"res_0"	"tinyint"	8	0	0	0
2441	159	"arg_1"	"tinyint"	8	0	1	1
2442	160	"res_0"	"tinyint"	8	0	0	0
2443	160	"arg_1"	"tinyint"	8	0	1	1
2444	160	"arg_2"	"tinyint"	8	0	1	2
2445	161	"res_0"	"tinyint"	8	0	0	0
2446	161	"arg_1"	"tinyint"	8	0	1	1
2447	161	"arg_2"	"tinyint"	8	0	1	2
2448	162	"res_0"	"month_interval"	32	0	0	0
2449	162	"arg_1"	"month_interval"	32	0	1	1
2450	162	"arg_2"	"tinyint"	8	0	1	2
2451	163	"res_0"	"month_interval"	32	0	0	0
2452	163	"arg_1"	"month_interval"	32	0	1	1
2453	163	"arg_2"	"tinyint"	8	0	1	2
2454	164	"res_0"	"month_interval"	32	0	0	0
2455	164	"arg_1"	"month_interval"	32	0	1	1
2456	164	"arg_2"	"tinyint"	8	0	1	2
2457	165	"res_0"	"month_interval"	32	0	0	0
2458	165	"arg_1"	"month_interval"	32	0	1	1
2459	165	"arg_2"	"tinyint"	8	0	1	2
2460	166	"res_0"	"sec_interval"	13	0	0	0
2461	166	"arg_1"	"sec_interval"	13	0	1	1
2462	166	"arg_2"	"tinyint"	8	0	1	2
2463	167	"res_0"	"sec_interval"	13	0	0	0
2464	167	"arg_1"	"sec_interval"	13	0	1	1
2465	167	"arg_2"	"tinyint"	8	0	1	2
2466	168	"res_0"	"sec_interval"	13	0	0	0
2467	168	"arg_1"	"sec_interval"	13	0	1	1
2468	168	"arg_2"	"tinyint"	8	0	1	2
2469	169	"res_0"	"sec_interval"	13	0	0	0
2470	169	"arg_1"	"sec_interval"	13	0	1	1
2471	169	"arg_2"	"tinyint"	8	0	1	2
2472	170	"res_0"	"smallint"	16	0	0	0
2473	170	"arg_1"	"smallint"	16	0	1	1
2474	170	"arg_2"	"smallint"	16	0	1	2
2475	171	"res_0"	"smallint"	16	0	0	0
2476	171	"arg_1"	"smallint"	16	0	1	1
2477	171	"arg_2"	"smallint"	16	0	1	2
2478	172	"res_0"	"smallint"	16	0	0	0
2479	172	"arg_1"	"smallint"	16	0	1	1
2480	172	"arg_2"	"smallint"	16	0	1	2
2481	173	"res_0"	"smallint"	16	0	0	0
2482	173	"arg_1"	"smallint"	16	0	1	1
2483	173	"arg_2"	"smallint"	16	0	1	2
2484	174	"res_0"	"smallint"	16	0	0	0
2485	174	"arg_1"	"smallint"	16	0	1	1
2486	174	"arg_2"	"smallint"	16	0	1	2
2487	175	"res_0"	"smallint"	16	0	0	0
2488	175	"arg_1"	"smallint"	16	0	1	1
2489	175	"arg_2"	"smallint"	16	0	1	2
2490	176	"res_0"	"smallint"	16	0	0	0
2491	176	"arg_1"	"smallint"	16	0	1	1
2492	176	"arg_2"	"smallint"	16	0	1	2
2493	177	"res_0"	"smallint"	16	0	0	0
2494	177	"arg_1"	"smallint"	16	0	1	1
2495	178	"res_0"	"smallint"	16	0	0	0
2496	178	"arg_1"	"smallint"	16	0	1	1
2497	178	"arg_2"	"int"	32	0	1	2
2498	179	"res_0"	"smallint"	16	0	0	0
2499	179	"arg_1"	"smallint"	16	0	1	1
2500	179	"arg_2"	"int"	32	0	1	2
2501	180	"res_0"	"smallint"	16	0	0	0
2502	180	"arg_1"	"smallint"	16	0	1	1
2503	181	"res_0"	"smallint"	16	0	0	0
2504	181	"arg_1"	"smallint"	16	0	1	1
2505	182	"res_0"	"tinyint"	8	0	0	0
2506	182	"arg_1"	"smallint"	16	0	1	1
2507	183	"res_0"	"smallint"	16	0	0	0
2508	183	"arg_1"	"smallint"	16	0	1	1
2509	183	"arg_2"	"smallint"	16	0	1	2
2510	184	"res_0"	"smallint"	16	0	0	0
2511	184	"arg_1"	"smallint"	16	0	1	1
2512	184	"arg_2"	"smallint"	16	0	1	2
2513	185	"res_0"	"month_interval"	32	0	0	0
2514	185	"arg_1"	"month_interval"	32	0	1	1
2515	185	"arg_2"	"smallint"	16	0	1	2
2516	186	"res_0"	"month_interval"	32	0	0	0
2517	186	"arg_1"	"month_interval"	32	0	1	1
2518	186	"arg_2"	"smallint"	16	0	1	2
2519	187	"res_0"	"month_interval"	32	0	0	0
2520	187	"arg_1"	"month_interval"	32	0	1	1
2521	187	"arg_2"	"smallint"	16	0	1	2
2522	188	"res_0"	"month_interval"	32	0	0	0
2523	188	"arg_1"	"month_interval"	32	0	1	1
2524	188	"arg_2"	"smallint"	16	0	1	2
2525	189	"res_0"	"sec_interval"	13	0	0	0
2526	189	"arg_1"	"sec_interval"	13	0	1	1
2527	189	"arg_2"	"smallint"	16	0	1	2
2528	190	"res_0"	"sec_interval"	13	0	0	0
2529	190	"arg_1"	"sec_interval"	13	0	1	1
2530	190	"arg_2"	"smallint"	16	0	1	2
2531	191	"res_0"	"sec_interval"	13	0	0	0
2532	191	"arg_1"	"sec_interval"	13	0	1	1
2533	191	"arg_2"	"smallint"	16	0	1	2
2534	192	"res_0"	"sec_interval"	13	0	0	0
2535	192	"arg_1"	"sec_interval"	13	0	1	1
2536	192	"arg_2"	"smallint"	16	0	1	2
2537	193	"res_0"	"int"	32	0	0	0
2538	193	"arg_1"	"int"	32	0	1	1
2539	193	"arg_2"	"int"	32	0	1	2
2540	194	"res_0"	"int"	32	0	0	0
2541	194	"arg_1"	"int"	32	0	1	1
2542	194	"arg_2"	"int"	32	0	1	2
2543	195	"res_0"	"int"	32	0	0	0
2544	195	"arg_1"	"int"	32	0	1	1
2545	195	"arg_2"	"int"	32	0	1	2
2546	196	"res_0"	"int"	32	0	0	0
2547	196	"arg_1"	"int"	32	0	1	1
2548	196	"arg_2"	"int"	32	0	1	2
2549	197	"res_0"	"int"	32	0	0	0
2550	197	"arg_1"	"int"	32	0	1	1
2551	197	"arg_2"	"int"	32	0	1	2
2552	198	"res_0"	"int"	32	0	0	0
2553	198	"arg_1"	"int"	32	0	1	1
2554	198	"arg_2"	"int"	32	0	1	2
2555	199	"res_0"	"int"	32	0	0	0
2556	199	"arg_1"	"int"	32	0	1	1
2557	199	"arg_2"	"int"	32	0	1	2
2558	200	"res_0"	"int"	32	0	0	0
2559	200	"arg_1"	"int"	32	0	1	1
2560	201	"res_0"	"int"	32	0	0	0
2561	201	"arg_1"	"int"	32	0	1	1
2562	201	"arg_2"	"int"	32	0	1	2
2563	202	"res_0"	"int"	32	0	0	0
2564	202	"arg_1"	"int"	32	0	1	1
2565	202	"arg_2"	"int"	32	0	1	2
2566	203	"res_0"	"int"	32	0	0	0
2567	203	"arg_1"	"int"	32	0	1	1
2568	204	"res_0"	"int"	32	0	0	0
2569	204	"arg_1"	"int"	32	0	1	1
2570	205	"res_0"	"tinyint"	8	0	0	0
2571	205	"arg_1"	"int"	32	0	1	1
2572	206	"res_0"	"int"	32	0	0	0
2573	206	"arg_1"	"int"	32	0	1	1
2574	206	"arg_2"	"int"	32	0	1	2
2575	207	"res_0"	"int"	32	0	0	0
2576	207	"arg_1"	"int"	32	0	1	1
2577	207	"arg_2"	"int"	32	0	1	2
2578	208	"res_0"	"month_interval"	32	0	0	0
2579	208	"arg_1"	"month_interval"	32	0	1	1
2580	208	"arg_2"	"int"	32	0	1	2
2581	209	"res_0"	"month_interval"	32	0	0	0
2582	209	"arg_1"	"month_interval"	32	0	1	1
2583	209	"arg_2"	"int"	32	0	1	2
2584	210	"res_0"	"month_interval"	32	0	0	0
2585	210	"arg_1"	"month_interval"	32	0	1	1
2586	210	"arg_2"	"int"	32	0	1	2
2587	211	"res_0"	"month_interval"	32	0	0	0
2588	211	"arg_1"	"month_interval"	32	0	1	1
2589	211	"arg_2"	"int"	32	0	1	2
2590	212	"res_0"	"sec_interval"	13	0	0	0
2591	212	"arg_1"	"sec_interval"	13	0	1	1
2592	212	"arg_2"	"int"	32	0	1	2
2593	213	"res_0"	"sec_interval"	13	0	0	0
2594	213	"arg_1"	"sec_interval"	13	0	1	1
2595	213	"arg_2"	"int"	32	0	1	2
2596	214	"res_0"	"sec_interval"	13	0	0	0
2597	214	"arg_1"	"sec_interval"	13	0	1	1
2598	214	"arg_2"	"int"	32	0	1	2
2599	215	"res_0"	"sec_interval"	13	0	0	0
2600	215	"arg_1"	"sec_interval"	13	0	1	1
2601	215	"arg_2"	"int"	32	0	1	2
2602	216	"res_0"	"bigint"	64	0	0	0
2603	216	"arg_1"	"bigint"	64	0	1	1
2604	216	"arg_2"	"bigint"	64	0	1	2
2605	217	"res_0"	"bigint"	64	0	0	0
2606	217	"arg_1"	"bigint"	64	0	1	1
2607	217	"arg_2"	"bigint"	64	0	1	2
2608	218	"res_0"	"bigint"	64	0	0	0
2609	218	"arg_1"	"bigint"	64	0	1	1
2610	218	"arg_2"	"bigint"	64	0	1	2
2611	219	"res_0"	"bigint"	64	0	0	0
2612	219	"arg_1"	"bigint"	64	0	1	1
2613	219	"arg_2"	"bigint"	64	0	1	2
2614	220	"res_0"	"bigint"	64	0	0	0
2615	220	"arg_1"	"bigint"	64	0	1	1
2616	220	"arg_2"	"bigint"	64	0	1	2
2617	221	"res_0"	"bigint"	64	0	0	0
2618	221	"arg_1"	"bigint"	64	0	1	1
2619	221	"arg_2"	"bigint"	64	0	1	2
2620	222	"res_0"	"bigint"	64	0	0	0
2621	222	"arg_1"	"bigint"	64	0	1	1
2622	222	"arg_2"	"bigint"	64	0	1	2
2623	223	"res_0"	"bigint"	64	0	0	0
2624	223	"arg_1"	"bigint"	64	0	1	1
2625	224	"res_0"	"bigint"	64	0	0	0
2626	224	"arg_1"	"bigint"	64	0	1	1
2627	224	"arg_2"	"int"	32	0	1	2
2628	225	"res_0"	"bigint"	64	0	0	0
2629	225	"arg_1"	"bigint"	64	0	1	1
2630	225	"arg_2"	"int"	32	0	1	2
2631	226	"res_0"	"bigint"	64	0	0	0
2632	226	"arg_1"	"bigint"	64	0	1	1
2633	227	"res_0"	"bigint"	64	0	0	0
2634	227	"arg_1"	"bigint"	64	0	1	1
2635	228	"res_0"	"tinyint"	8	0	0	0
2636	228	"arg_1"	"bigint"	64	0	1	1
2637	229	"res_0"	"bigint"	64	0	0	0
2638	229	"arg_1"	"bigint"	64	0	1	1
2639	229	"arg_2"	"bigint"	64	0	1	2
2640	230	"res_0"	"bigint"	64	0	0	0
2641	230	"arg_1"	"bigint"	64	0	1	1
2642	230	"arg_2"	"bigint"	64	0	1	2
2643	231	"res_0"	"month_interval"	32	0	0	0
2644	231	"arg_1"	"month_interval"	32	0	1	1
2645	231	"arg_2"	"bigint"	64	0	1	2
2646	232	"res_0"	"month_interval"	32	0	0	0
2647	232	"arg_1"	"month_interval"	32	0	1	1
2648	232	"arg_2"	"bigint"	64	0	1	2
2649	233	"res_0"	"month_interval"	32	0	0	0
2650	233	"arg_1"	"month_interval"	32	0	1	1
2651	233	"arg_2"	"bigint"	64	0	1	2
2652	234	"res_0"	"month_interval"	32	0	0	0
2653	234	"arg_1"	"month_interval"	32	0	1	1
2654	234	"arg_2"	"bigint"	64	0	1	2
2655	235	"res_0"	"sec_interval"	13	0	0	0
2656	235	"arg_1"	"sec_interval"	13	0	1	1
2657	235	"arg_2"	"bigint"	64	0	1	2
2658	236	"res_0"	"sec_interval"	13	0	0	0
2659	236	"arg_1"	"sec_interval"	13	0	1	1
2660	236	"arg_2"	"bigint"	64	0	1	2
2661	237	"res_0"	"sec_interval"	13	0	0	0
2662	237	"arg_1"	"sec_interval"	13	0	1	1
2663	237	"arg_2"	"bigint"	64	0	1	2
2664	238	"res_0"	"sec_interval"	13	0	0	0
2665	238	"arg_1"	"sec_interval"	13	0	1	1
2666	238	"arg_2"	"bigint"	64	0	1	2
2667	239	"res_0"	"wrd"	64	0	0	0
2668	239	"arg_1"	"wrd"	64	0	1	1
2669	239	"arg_2"	"wrd"	64	0	1	2
2670	240	"res_0"	"wrd"	64	0	0	0
2671	240	"arg_1"	"wrd"	64	0	1	1
2672	240	"arg_2"	"wrd"	64	0	1	2
2673	241	"res_0"	"wrd"	64	0	0	0
2674	241	"arg_1"	"wrd"	64	0	1	1
2675	241	"arg_2"	"wrd"	64	0	1	2
2676	242	"res_0"	"wrd"	64	0	0	0
2677	242	"arg_1"	"wrd"	64	0	1	1
2678	242	"arg_2"	"wrd"	64	0	1	2
2679	243	"res_0"	"wrd"	64	0	0	0
2680	243	"arg_1"	"wrd"	64	0	1	1
2681	243	"arg_2"	"wrd"	64	0	1	2
2682	244	"res_0"	"wrd"	64	0	0	0
2683	244	"arg_1"	"wrd"	64	0	1	1
2684	244	"arg_2"	"wrd"	64	0	1	2
2685	245	"res_0"	"wrd"	64	0	0	0
2686	245	"arg_1"	"wrd"	64	0	1	1
2687	245	"arg_2"	"wrd"	64	0	1	2
2688	246	"res_0"	"wrd"	64	0	0	0
2689	246	"arg_1"	"wrd"	64	0	1	1
2690	247	"res_0"	"wrd"	64	0	0	0
2691	247	"arg_1"	"wrd"	64	0	1	1
2692	247	"arg_2"	"int"	32	0	1	2
2693	248	"res_0"	"wrd"	64	0	0	0
2694	248	"arg_1"	"wrd"	64	0	1	1
2695	248	"arg_2"	"int"	32	0	1	2
2696	249	"res_0"	"wrd"	64	0	0	0
2697	249	"arg_1"	"wrd"	64	0	1	1
2698	250	"res_0"	"wrd"	64	0	0	0
2699	250	"arg_1"	"wrd"	64	0	1	1
2700	251	"res_0"	"tinyint"	8	0	0	0
2701	251	"arg_1"	"wrd"	64	0	1	1
2702	252	"res_0"	"wrd"	64	0	0	0
2703	252	"arg_1"	"wrd"	64	0	1	1
2704	252	"arg_2"	"wrd"	64	0	1	2
2705	253	"res_0"	"wrd"	64	0	0	0
2706	253	"arg_1"	"wrd"	64	0	1	1
2707	253	"arg_2"	"wrd"	64	0	1	2
2708	254	"res_0"	"month_interval"	32	0	0	0
2709	254	"arg_1"	"month_interval"	32	0	1	1
2710	254	"arg_2"	"wrd"	64	0	1	2
2711	255	"res_0"	"month_interval"	32	0	0	0
2712	255	"arg_1"	"month_interval"	32	0	1	1
2713	255	"arg_2"	"wrd"	64	0	1	2
2714	256	"res_0"	"month_interval"	32	0	0	0
2715	256	"arg_1"	"month_interval"	32	0	1	1
2716	256	"arg_2"	"wrd"	64	0	1	2
2717	257	"res_0"	"month_interval"	32	0	0	0
2718	257	"arg_1"	"month_interval"	32	0	1	1
2719	257	"arg_2"	"wrd"	64	0	1	2
2720	258	"res_0"	"sec_interval"	13	0	0	0
2721	258	"arg_1"	"sec_interval"	13	0	1	1
2722	258	"arg_2"	"wrd"	64	0	1	2
2723	259	"res_0"	"sec_interval"	13	0	0	0
2724	259	"arg_1"	"sec_interval"	13	0	1	1
2725	259	"arg_2"	"wrd"	64	0	1	2
2726	260	"res_0"	"sec_interval"	13	0	0	0
2727	260	"arg_1"	"sec_interval"	13	0	1	1
2728	260	"arg_2"	"wrd"	64	0	1	2
2729	261	"res_0"	"sec_interval"	13	0	0	0
2730	261	"arg_1"	"sec_interval"	13	0	1	1
2731	261	"arg_2"	"wrd"	64	0	1	2
2732	262	"res_0"	"hugeint"	128	0	0	0
2733	262	"arg_1"	"hugeint"	128	0	1	1
2734	262	"arg_2"	"hugeint"	128	0	1	2
2735	263	"res_0"	"hugeint"	128	0	0	0
2736	263	"arg_1"	"hugeint"	128	0	1	1
2737	263	"arg_2"	"hugeint"	128	0	1	2
2738	264	"res_0"	"hugeint"	128	0	0	0
2739	264	"arg_1"	"hugeint"	128	0	1	1
2740	264	"arg_2"	"hugeint"	128	0	1	2
2741	265	"res_0"	"hugeint"	128	0	0	0
2742	265	"arg_1"	"hugeint"	128	0	1	1
2743	265	"arg_2"	"hugeint"	128	0	1	2
2744	266	"res_0"	"hugeint"	128	0	0	0
2745	266	"arg_1"	"hugeint"	128	0	1	1
2746	266	"arg_2"	"hugeint"	128	0	1	2
2747	267	"res_0"	"hugeint"	128	0	0	0
2748	267	"arg_1"	"hugeint"	128	0	1	1
2749	267	"arg_2"	"hugeint"	128	0	1	2
2750	268	"res_0"	"hugeint"	128	0	0	0
2751	268	"arg_1"	"hugeint"	128	0	1	1
2752	268	"arg_2"	"hugeint"	128	0	1	2
2753	269	"res_0"	"hugeint"	128	0	0	0
2754	269	"arg_1"	"hugeint"	128	0	1	1
2755	270	"res_0"	"hugeint"	128	0	0	0
2756	270	"arg_1"	"hugeint"	128	0	1	1
2757	270	"arg_2"	"int"	32	0	1	2
2758	271	"res_0"	"hugeint"	128	0	0	0
2759	271	"arg_1"	"hugeint"	128	0	1	1
2760	271	"arg_2"	"int"	32	0	1	2
2761	272	"res_0"	"hugeint"	128	0	0	0
2762	272	"arg_1"	"hugeint"	128	0	1	1
2763	273	"res_0"	"hugeint"	128	0	0	0
2764	273	"arg_1"	"hugeint"	128	0	1	1
2765	274	"res_0"	"tinyint"	8	0	0	0
2766	274	"arg_1"	"hugeint"	128	0	1	1
2767	275	"res_0"	"hugeint"	128	0	0	0
2768	275	"arg_1"	"hugeint"	128	0	1	1
2769	275	"arg_2"	"hugeint"	128	0	1	2
2770	276	"res_0"	"hugeint"	128	0	0	0
2771	276	"arg_1"	"hugeint"	128	0	1	1
2772	276	"arg_2"	"hugeint"	128	0	1	2
2773	277	"res_0"	"month_interval"	32	0	0	0
2774	277	"arg_1"	"month_interval"	32	0	1	1
2775	277	"arg_2"	"hugeint"	128	0	1	2
2776	278	"res_0"	"month_interval"	32	0	0	0
2777	278	"arg_1"	"month_interval"	32	0	1	1
2778	278	"arg_2"	"hugeint"	128	0	1	2
2779	279	"res_0"	"month_interval"	32	0	0	0
2780	279	"arg_1"	"month_interval"	32	0	1	1
2781	279	"arg_2"	"hugeint"	128	0	1	2
2782	280	"res_0"	"month_interval"	32	0	0	0
2783	280	"arg_1"	"month_interval"	32	0	1	1
2784	280	"arg_2"	"hugeint"	128	0	1	2
2785	281	"res_0"	"sec_interval"	13	0	0	0
2786	281	"arg_1"	"sec_interval"	13	0	1	1
2787	281	"arg_2"	"hugeint"	128	0	1	2
2788	282	"res_0"	"sec_interval"	13	0	0	0
2789	282	"arg_1"	"sec_interval"	13	0	1	1
2790	282	"arg_2"	"hugeint"	128	0	1	2
2791	283	"res_0"	"sec_interval"	13	0	0	0
2792	283	"arg_1"	"sec_interval"	13	0	1	1
2793	283	"arg_2"	"hugeint"	128	0	1	2
2794	284	"res_0"	"sec_interval"	13	0	0	0
2795	284	"arg_1"	"sec_interval"	13	0	1	1
2796	284	"arg_2"	"hugeint"	128	0	1	2
2797	285	"res_0"	"decimal"	2	0	0	0
2798	285	"arg_1"	"decimal"	2	0	1	1
2799	285	"arg_2"	"decimal"	2	0	1	2
2800	286	"res_0"	"decimal"	2	0	0	0
2801	286	"arg_1"	"decimal"	2	0	1	1
2802	286	"arg_2"	"decimal"	2	0	1	2
2803	287	"res_0"	"decimal"	2	0	0	0
2804	287	"arg_1"	"decimal"	2	0	1	1
2805	287	"arg_2"	"decimal"	2	0	1	2
2806	288	"res_0"	"decimal"	2	0	0	0
2807	288	"arg_1"	"decimal"	2	0	1	1
2808	288	"arg_2"	"decimal"	2	0	1	2
2809	289	"res_0"	"decimal"	2	0	0	0
2810	289	"arg_1"	"decimal"	2	0	1	1
2811	289	"arg_2"	"decimal"	2	0	1	2
2812	290	"res_0"	"decimal"	2	0	0	0
2813	290	"arg_1"	"decimal"	2	0	1	1
2814	290	"arg_2"	"decimal"	2	0	1	2
2815	291	"res_0"	"decimal"	2	0	0	0
2816	291	"arg_1"	"decimal"	2	0	1	1
2817	291	"arg_2"	"decimal"	2	0	1	2
2818	292	"res_0"	"decimal"	2	0	0	0
2819	292	"arg_1"	"decimal"	2	0	1	1
2820	293	"res_0"	"decimal"	2	0	0	0
2821	293	"arg_1"	"decimal"	2	0	1	1
2822	293	"arg_2"	"int"	32	0	1	2
2823	294	"res_0"	"decimal"	2	0	0	0
2824	294	"arg_1"	"decimal"	2	0	1	1
2825	294	"arg_2"	"int"	32	0	1	2
2826	295	"res_0"	"decimal"	2	0	0	0
2827	295	"arg_1"	"decimal"	2	0	1	1
2828	296	"res_0"	"decimal"	2	0	0	0
2829	296	"arg_1"	"decimal"	2	0	1	1
2830	297	"res_0"	"tinyint"	8	0	0	0
2831	297	"arg_1"	"decimal"	2	0	1	1
2832	298	"res_0"	"decimal"	2	0	0	0
2833	298	"arg_1"	"decimal"	2	0	1	1
2834	298	"arg_2"	"tinyint"	8	0	1	2
2835	299	"res_0"	"decimal"	2	0	0	0
2836	299	"arg_1"	"decimal"	2	0	1	1
2837	299	"arg_2"	"tinyint"	8	0	1	2
2838	300	"res_0"	"month_interval"	32	0	0	0
2839	300	"arg_1"	"month_interval"	32	0	1	1
2840	300	"arg_2"	"decimal"	2	0	1	2
2841	301	"res_0"	"month_interval"	32	0	0	0
2842	301	"arg_1"	"month_interval"	32	0	1	1
2843	301	"arg_2"	"decimal"	2	0	1	2
2844	302	"res_0"	"month_interval"	32	0	0	0
2845	302	"arg_1"	"month_interval"	32	0	1	1
2846	302	"arg_2"	"decimal"	2	0	1	2
2847	303	"res_0"	"month_interval"	32	0	0	0
2848	303	"arg_1"	"month_interval"	32	0	1	1
2849	303	"arg_2"	"decimal"	2	0	1	2
2850	304	"res_0"	"sec_interval"	13	0	0	0
2851	304	"arg_1"	"sec_interval"	13	0	1	1
2852	304	"arg_2"	"decimal"	2	0	1	2
2853	305	"res_0"	"sec_interval"	13	0	0	0
2854	305	"arg_1"	"sec_interval"	13	0	1	1
2855	305	"arg_2"	"decimal"	2	0	1	2
2856	306	"res_0"	"sec_interval"	13	0	0	0
2857	306	"arg_1"	"sec_interval"	13	0	1	1
2858	306	"arg_2"	"decimal"	2	0	1	2
2859	307	"res_0"	"sec_interval"	13	0	0	0
2860	307	"arg_1"	"sec_interval"	13	0	1	1
2861	307	"arg_2"	"decimal"	2	0	1	2
2862	308	"res_0"	"decimal"	4	0	0	0
2863	308	"arg_1"	"decimal"	4	0	1	1
2864	308	"arg_2"	"decimal"	4	0	1	2
2865	309	"res_0"	"decimal"	4	0	0	0
2866	309	"arg_1"	"decimal"	4	0	1	1
2867	309	"arg_2"	"decimal"	4	0	1	2
2868	310	"res_0"	"decimal"	4	0	0	0
2869	310	"arg_1"	"decimal"	4	0	1	1
2870	310	"arg_2"	"decimal"	4	0	1	2
2871	311	"res_0"	"decimal"	4	0	0	0
2872	311	"arg_1"	"decimal"	4	0	1	1
2873	311	"arg_2"	"decimal"	4	0	1	2
2874	312	"res_0"	"decimal"	4	0	0	0
2875	312	"arg_1"	"decimal"	4	0	1	1
2876	312	"arg_2"	"decimal"	4	0	1	2
2877	313	"res_0"	"decimal"	4	0	0	0
2878	313	"arg_1"	"decimal"	4	0	1	1
2879	313	"arg_2"	"decimal"	4	0	1	2
2880	314	"res_0"	"decimal"	4	0	0	0
2881	314	"arg_1"	"decimal"	4	0	1	1
2882	314	"arg_2"	"decimal"	4	0	1	2
2883	315	"res_0"	"decimal"	4	0	0	0
2884	315	"arg_1"	"decimal"	4	0	1	1
2885	316	"res_0"	"decimal"	4	0	0	0
2886	316	"arg_1"	"decimal"	4	0	1	1
2887	316	"arg_2"	"int"	32	0	1	2
2888	317	"res_0"	"decimal"	4	0	0	0
2889	317	"arg_1"	"decimal"	4	0	1	1
2890	317	"arg_2"	"int"	32	0	1	2
2891	318	"res_0"	"decimal"	4	0	0	0
2892	318	"arg_1"	"decimal"	4	0	1	1
2893	319	"res_0"	"decimal"	4	0	0	0
2894	319	"arg_1"	"decimal"	4	0	1	1
2895	320	"res_0"	"tinyint"	8	0	0	0
2896	320	"arg_1"	"decimal"	4	0	1	1
2897	321	"res_0"	"decimal"	4	0	0	0
2898	321	"arg_1"	"decimal"	4	0	1	1
2899	321	"arg_2"	"smallint"	16	0	1	2
2900	322	"res_0"	"decimal"	4	0	0	0
2901	322	"arg_1"	"decimal"	4	0	1	1
2902	322	"arg_2"	"smallint"	16	0	1	2
2903	323	"res_0"	"month_interval"	32	0	0	0
2904	323	"arg_1"	"month_interval"	32	0	1	1
2905	323	"arg_2"	"decimal"	4	0	1	2
2906	324	"res_0"	"month_interval"	32	0	0	0
2907	324	"arg_1"	"month_interval"	32	0	1	1
2908	324	"arg_2"	"decimal"	4	0	1	2
2909	325	"res_0"	"month_interval"	32	0	0	0
2910	325	"arg_1"	"month_interval"	32	0	1	1
2911	325	"arg_2"	"decimal"	4	0	1	2
2912	326	"res_0"	"month_interval"	32	0	0	0
2913	326	"arg_1"	"month_interval"	32	0	1	1
2914	326	"arg_2"	"decimal"	4	0	1	2
2915	327	"res_0"	"sec_interval"	13	0	0	0
2916	327	"arg_1"	"sec_interval"	13	0	1	1
2917	327	"arg_2"	"decimal"	4	0	1	2
2918	328	"res_0"	"sec_interval"	13	0	0	0
2919	328	"arg_1"	"sec_interval"	13	0	1	1
2920	328	"arg_2"	"decimal"	4	0	1	2
2921	329	"res_0"	"sec_interval"	13	0	0	0
2922	329	"arg_1"	"sec_interval"	13	0	1	1
2923	329	"arg_2"	"decimal"	4	0	1	2
2924	330	"res_0"	"sec_interval"	13	0	0	0
2925	330	"arg_1"	"sec_interval"	13	0	1	1
2926	330	"arg_2"	"decimal"	4	0	1	2
2927	331	"res_0"	"decimal"	9	0	0	0
2928	331	"arg_1"	"decimal"	9	0	1	1
2929	331	"arg_2"	"decimal"	9	0	1	2
2930	332	"res_0"	"decimal"	9	0	0	0
2931	332	"arg_1"	"decimal"	9	0	1	1
2932	332	"arg_2"	"decimal"	9	0	1	2
2933	333	"res_0"	"decimal"	9	0	0	0
2934	333	"arg_1"	"decimal"	9	0	1	1
2935	333	"arg_2"	"decimal"	9	0	1	2
2936	334	"res_0"	"decimal"	9	0	0	0
2937	334	"arg_1"	"decimal"	9	0	1	1
2938	334	"arg_2"	"decimal"	9	0	1	2
2939	335	"res_0"	"decimal"	9	0	0	0
2940	335	"arg_1"	"decimal"	9	0	1	1
2941	335	"arg_2"	"decimal"	9	0	1	2
2942	336	"res_0"	"decimal"	9	0	0	0
2943	336	"arg_1"	"decimal"	9	0	1	1
2944	336	"arg_2"	"decimal"	9	0	1	2
2945	337	"res_0"	"decimal"	9	0	0	0
2946	337	"arg_1"	"decimal"	9	0	1	1
2947	337	"arg_2"	"decimal"	9	0	1	2
2948	338	"res_0"	"decimal"	9	0	0	0
2949	338	"arg_1"	"decimal"	9	0	1	1
2950	339	"res_0"	"decimal"	9	0	0	0
2951	339	"arg_1"	"decimal"	9	0	1	1
2952	339	"arg_2"	"int"	32	0	1	2
2953	340	"res_0"	"decimal"	9	0	0	0
2954	340	"arg_1"	"decimal"	9	0	1	1
2955	340	"arg_2"	"int"	32	0	1	2
2956	341	"res_0"	"decimal"	9	0	0	0
2957	341	"arg_1"	"decimal"	9	0	1	1
2958	342	"res_0"	"decimal"	9	0	0	0
2959	342	"arg_1"	"decimal"	9	0	1	1
2960	343	"res_0"	"tinyint"	8	0	0	0
2961	343	"arg_1"	"decimal"	9	0	1	1
2962	344	"res_0"	"decimal"	9	0	0	0
2963	344	"arg_1"	"decimal"	9	0	1	1
2964	344	"arg_2"	"int"	32	0	1	2
2965	345	"res_0"	"decimal"	9	0	0	0
2966	345	"arg_1"	"decimal"	9	0	1	1
2967	345	"arg_2"	"int"	32	0	1	2
2968	346	"res_0"	"month_interval"	32	0	0	0
2969	346	"arg_1"	"month_interval"	32	0	1	1
2970	346	"arg_2"	"decimal"	9	0	1	2
2971	347	"res_0"	"month_interval"	32	0	0	0
2972	347	"arg_1"	"month_interval"	32	0	1	1
2973	347	"arg_2"	"decimal"	9	0	1	2
2974	348	"res_0"	"month_interval"	32	0	0	0
2975	348	"arg_1"	"month_interval"	32	0	1	1
2976	348	"arg_2"	"decimal"	9	0	1	2
2977	349	"res_0"	"month_interval"	32	0	0	0
2978	349	"arg_1"	"month_interval"	32	0	1	1
2979	349	"arg_2"	"decimal"	9	0	1	2
2980	350	"res_0"	"sec_interval"	13	0	0	0
2981	350	"arg_1"	"sec_interval"	13	0	1	1
2982	350	"arg_2"	"decimal"	9	0	1	2
2983	351	"res_0"	"sec_interval"	13	0	0	0
2984	351	"arg_1"	"sec_interval"	13	0	1	1
2985	351	"arg_2"	"decimal"	9	0	1	2
2986	352	"res_0"	"sec_interval"	13	0	0	0
2987	352	"arg_1"	"sec_interval"	13	0	1	1
2988	352	"arg_2"	"decimal"	9	0	1	2
2989	353	"res_0"	"sec_interval"	13	0	0	0
2990	353	"arg_1"	"sec_interval"	13	0	1	1
2991	353	"arg_2"	"decimal"	9	0	1	2
2992	354	"res_0"	"decimal"	18	0	0	0
2993	354	"arg_1"	"decimal"	18	0	1	1
2994	354	"arg_2"	"decimal"	18	0	1	2
2995	355	"res_0"	"decimal"	18	0	0	0
2996	355	"arg_1"	"decimal"	18	0	1	1
2997	355	"arg_2"	"decimal"	18	0	1	2
2998	356	"res_0"	"decimal"	18	0	0	0
2999	356	"arg_1"	"decimal"	18	0	1	1
3000	356	"arg_2"	"decimal"	18	0	1	2
3001	357	"res_0"	"decimal"	18	0	0	0
3002	357	"arg_1"	"decimal"	18	0	1	1
3003	357	"arg_2"	"decimal"	18	0	1	2
3004	358	"res_0"	"decimal"	18	0	0	0
3005	358	"arg_1"	"decimal"	18	0	1	1
3006	358	"arg_2"	"decimal"	18	0	1	2
3007	359	"res_0"	"decimal"	18	0	0	0
3008	359	"arg_1"	"decimal"	18	0	1	1
3009	359	"arg_2"	"decimal"	18	0	1	2
3010	360	"res_0"	"decimal"	18	0	0	0
3011	360	"arg_1"	"decimal"	18	0	1	1
3012	360	"arg_2"	"decimal"	18	0	1	2
3013	361	"res_0"	"decimal"	18	0	0	0
3014	361	"arg_1"	"decimal"	18	0	1	1
3015	362	"res_0"	"decimal"	18	0	0	0
3016	362	"arg_1"	"decimal"	18	0	1	1
3017	362	"arg_2"	"int"	32	0	1	2
3018	363	"res_0"	"decimal"	18	0	0	0
3019	363	"arg_1"	"decimal"	18	0	1	1
3020	363	"arg_2"	"int"	32	0	1	2
3021	364	"res_0"	"decimal"	18	0	0	0
3022	364	"arg_1"	"decimal"	18	0	1	1
3023	365	"res_0"	"decimal"	18	0	0	0
3024	365	"arg_1"	"decimal"	18	0	1	1
3025	366	"res_0"	"tinyint"	8	0	0	0
3026	366	"arg_1"	"decimal"	18	0	1	1
3027	367	"res_0"	"decimal"	18	0	0	0
3028	367	"arg_1"	"decimal"	18	0	1	1
3029	367	"arg_2"	"bigint"	64	0	1	2
3030	368	"res_0"	"decimal"	18	0	0	0
3031	368	"arg_1"	"decimal"	18	0	1	1
3032	368	"arg_2"	"bigint"	64	0	1	2
3033	369	"res_0"	"month_interval"	32	0	0	0
3034	369	"arg_1"	"month_interval"	32	0	1	1
3035	369	"arg_2"	"decimal"	18	0	1	2
3036	370	"res_0"	"month_interval"	32	0	0	0
3037	370	"arg_1"	"month_interval"	32	0	1	1
3038	370	"arg_2"	"decimal"	18	0	1	2
3039	371	"res_0"	"month_interval"	32	0	0	0
3040	371	"arg_1"	"month_interval"	32	0	1	1
3041	371	"arg_2"	"decimal"	18	0	1	2
3042	372	"res_0"	"month_interval"	32	0	0	0
3043	372	"arg_1"	"month_interval"	32	0	1	1
3044	372	"arg_2"	"decimal"	18	0	1	2
3045	373	"res_0"	"sec_interval"	13	0	0	0
3046	373	"arg_1"	"sec_interval"	13	0	1	1
3047	373	"arg_2"	"decimal"	18	0	1	2
3048	374	"res_0"	"sec_interval"	13	0	0	0
3049	374	"arg_1"	"sec_interval"	13	0	1	1
3050	374	"arg_2"	"decimal"	18	0	1	2
3051	375	"res_0"	"sec_interval"	13	0	0	0
3052	375	"arg_1"	"sec_interval"	13	0	1	1
3053	375	"arg_2"	"decimal"	18	0	1	2
3054	376	"res_0"	"sec_interval"	13	0	0	0
3055	376	"arg_1"	"sec_interval"	13	0	1	1
3056	376	"arg_2"	"decimal"	18	0	1	2
3057	377	"res_0"	"decimal"	39	0	0	0
3058	377	"arg_1"	"decimal"	39	0	1	1
3059	377	"arg_2"	"decimal"	39	0	1	2
3060	378	"res_0"	"decimal"	39	0	0	0
3061	378	"arg_1"	"decimal"	39	0	1	1
3062	378	"arg_2"	"decimal"	39	0	1	2
3063	379	"res_0"	"decimal"	39	0	0	0
3064	379	"arg_1"	"decimal"	39	0	1	1
3065	379	"arg_2"	"decimal"	39	0	1	2
3066	380	"res_0"	"decimal"	39	0	0	0
3067	380	"arg_1"	"decimal"	39	0	1	1
3068	380	"arg_2"	"decimal"	39	0	1	2
3069	381	"res_0"	"decimal"	39	0	0	0
3070	381	"arg_1"	"decimal"	39	0	1	1
3071	381	"arg_2"	"decimal"	39	0	1	2
3072	382	"res_0"	"decimal"	39	0	0	0
3073	382	"arg_1"	"decimal"	39	0	1	1
3074	382	"arg_2"	"decimal"	39	0	1	2
3075	383	"res_0"	"decimal"	39	0	0	0
3076	383	"arg_1"	"decimal"	39	0	1	1
3077	383	"arg_2"	"decimal"	39	0	1	2
3078	384	"res_0"	"decimal"	39	0	0	0
3079	384	"arg_1"	"decimal"	39	0	1	1
3080	385	"res_0"	"decimal"	39	0	0	0
3081	385	"arg_1"	"decimal"	39	0	1	1
3082	385	"arg_2"	"int"	32	0	1	2
3083	386	"res_0"	"decimal"	39	0	0	0
3084	386	"arg_1"	"decimal"	39	0	1	1
3085	386	"arg_2"	"int"	32	0	1	2
3086	387	"res_0"	"decimal"	39	0	0	0
3087	387	"arg_1"	"decimal"	39	0	1	1
3088	388	"res_0"	"decimal"	39	0	0	0
3089	388	"arg_1"	"decimal"	39	0	1	1
3090	389	"res_0"	"tinyint"	8	0	0	0
3091	389	"arg_1"	"decimal"	39	0	1	1
3092	390	"res_0"	"decimal"	39	0	0	0
3093	390	"arg_1"	"decimal"	39	0	1	1
3094	390	"arg_2"	"hugeint"	128	0	1	2
3095	391	"res_0"	"decimal"	39	0	0	0
3096	391	"arg_1"	"decimal"	39	0	1	1
3097	391	"arg_2"	"hugeint"	128	0	1	2
3098	392	"res_0"	"month_interval"	32	0	0	0
3099	392	"arg_1"	"month_interval"	32	0	1	1
3100	392	"arg_2"	"decimal"	39	0	1	2
3101	393	"res_0"	"month_interval"	32	0	0	0
3102	393	"arg_1"	"month_interval"	32	0	1	1
3103	393	"arg_2"	"decimal"	39	0	1	2
3104	394	"res_0"	"month_interval"	32	0	0	0
3105	394	"arg_1"	"month_interval"	32	0	1	1
3106	394	"arg_2"	"decimal"	39	0	1	2
3107	395	"res_0"	"month_interval"	32	0	0	0
3108	395	"arg_1"	"month_interval"	32	0	1	1
3109	395	"arg_2"	"decimal"	39	0	1	2
3110	396	"res_0"	"sec_interval"	13	0	0	0
3111	396	"arg_1"	"sec_interval"	13	0	1	1
3112	396	"arg_2"	"decimal"	39	0	1	2
3113	397	"res_0"	"sec_interval"	13	0	0	0
3114	397	"arg_1"	"sec_interval"	13	0	1	1
3115	397	"arg_2"	"decimal"	39	0	1	2
3116	398	"res_0"	"sec_interval"	13	0	0	0
3117	398	"arg_1"	"sec_interval"	13	0	1	1
3118	398	"arg_2"	"decimal"	39	0	1	2
3119	399	"res_0"	"sec_interval"	13	0	0	0
3120	399	"arg_1"	"sec_interval"	13	0	1	1
3121	399	"arg_2"	"decimal"	39	0	1	2
3122	400	"res_0"	"real"	24	0	0	0
3123	400	"arg_1"	"real"	24	0	1	1
3124	400	"arg_2"	"real"	24	0	1	2
3125	401	"res_0"	"real"	24	0	0	0
3126	401	"arg_1"	"real"	24	0	1	1
3127	401	"arg_2"	"real"	24	0	1	2
3128	402	"res_0"	"real"	24	0	0	0
3129	402	"arg_1"	"real"	24	0	1	1
3130	402	"arg_2"	"real"	24	0	1	2
3131	403	"res_0"	"real"	24	0	0	0
3132	403	"arg_1"	"real"	24	0	1	1
3133	403	"arg_2"	"real"	24	0	1	2
3134	404	"res_0"	"real"	24	0	0	0
3135	404	"arg_1"	"real"	24	0	1	1
3136	405	"res_0"	"real"	24	0	0	0
3137	405	"arg_1"	"real"	24	0	1	1
3138	406	"res_0"	"tinyint"	8	0	0	0
3139	406	"arg_1"	"real"	24	0	1	1
3140	407	"res_0"	"real"	24	0	0	0
3141	407	"arg_1"	"real"	24	0	1	1
3142	407	"arg_2"	"real"	24	0	1	2
3143	408	"res_0"	"real"	24	0	0	0
3144	408	"arg_1"	"real"	24	0	1	1
3145	408	"arg_2"	"real"	24	0	1	2
3146	409	"res_0"	"month_interval"	32	0	0	0
3147	409	"arg_1"	"month_interval"	32	0	1	1
3148	409	"arg_2"	"real"	24	0	1	2
3149	410	"res_0"	"month_interval"	32	0	0	0
3150	410	"arg_1"	"month_interval"	32	0	1	1
3151	410	"arg_2"	"real"	24	0	1	2
3152	411	"res_0"	"month_interval"	32	0	0	0
3153	411	"arg_1"	"month_interval"	32	0	1	1
3154	411	"arg_2"	"real"	24	0	1	2
3155	412	"res_0"	"month_interval"	32	0	0	0
3156	412	"arg_1"	"month_interval"	32	0	1	1
3157	412	"arg_2"	"real"	24	0	1	2
3158	413	"res_0"	"sec_interval"	13	0	0	0
3159	413	"arg_1"	"sec_interval"	13	0	1	1
3160	413	"arg_2"	"real"	24	0	1	2
3161	414	"res_0"	"sec_interval"	13	0	0	0
3162	414	"arg_1"	"sec_interval"	13	0	1	1
3163	414	"arg_2"	"real"	24	0	1	2
3164	415	"res_0"	"sec_interval"	13	0	0	0
3165	415	"arg_1"	"sec_interval"	13	0	1	1
3166	415	"arg_2"	"real"	24	0	1	2
3167	416	"res_0"	"sec_interval"	13	0	0	0
3168	416	"arg_1"	"sec_interval"	13	0	1	1
3169	416	"arg_2"	"real"	24	0	1	2
3170	417	"res_0"	"double"	53	0	0	0
3171	417	"arg_1"	"double"	53	0	1	1
3172	417	"arg_2"	"double"	53	0	1	2
3173	418	"res_0"	"double"	53	0	0	0
3174	418	"arg_1"	"double"	53	0	1	1
3175	418	"arg_2"	"double"	53	0	1	2
3176	419	"res_0"	"double"	53	0	0	0
3177	419	"arg_1"	"double"	53	0	1	1
3178	419	"arg_2"	"double"	53	0	1	2
3179	420	"res_0"	"double"	53	0	0	0
3180	420	"arg_1"	"double"	53	0	1	1
3181	420	"arg_2"	"double"	53	0	1	2
3182	421	"res_0"	"double"	53	0	0	0
3183	421	"arg_1"	"double"	53	0	1	1
3184	422	"res_0"	"double"	53	0	0	0
3185	422	"arg_1"	"double"	53	0	1	1
3186	423	"res_0"	"tinyint"	8	0	0	0
3187	423	"arg_1"	"double"	53	0	1	1
3188	424	"res_0"	"double"	53	0	0	0
3189	424	"arg_1"	"double"	53	0	1	1
3190	424	"arg_2"	"double"	53	0	1	2
3191	425	"res_0"	"double"	53	0	0	0
3192	425	"arg_1"	"double"	53	0	1	1
3193	425	"arg_2"	"double"	53	0	1	2
3194	426	"res_0"	"month_interval"	32	0	0	0
3195	426	"arg_1"	"month_interval"	32	0	1	1
3196	426	"arg_2"	"double"	53	0	1	2
3197	427	"res_0"	"month_interval"	32	0	0	0
3198	427	"arg_1"	"month_interval"	32	0	1	1
3199	427	"arg_2"	"double"	53	0	1	2
3200	428	"res_0"	"month_interval"	32	0	0	0
3201	428	"arg_1"	"month_interval"	32	0	1	1
3202	428	"arg_2"	"double"	53	0	1	2
3203	429	"res_0"	"month_interval"	32	0	0	0
3204	429	"arg_1"	"month_interval"	32	0	1	1
3205	429	"arg_2"	"double"	53	0	1	2
3206	430	"res_0"	"sec_interval"	13	0	0	0
3207	430	"arg_1"	"sec_interval"	13	0	1	1
3208	430	"arg_2"	"double"	53	0	1	2
3209	431	"res_0"	"sec_interval"	13	0	0	0
3210	431	"arg_1"	"sec_interval"	13	0	1	1
3211	431	"arg_2"	"double"	53	0	1	2
3212	432	"res_0"	"sec_interval"	13	0	0	0
3213	432	"arg_1"	"sec_interval"	13	0	1	1
3214	432	"arg_2"	"double"	53	0	1	2
3215	433	"res_0"	"sec_interval"	13	0	0	0
3216	433	"arg_1"	"sec_interval"	13	0	1	1
3217	433	"arg_2"	"double"	53	0	1	2
3218	434	"res_0"	"month_interval"	32	0	0	0
3219	434	"arg_1"	"month_interval"	32	0	1	1
3220	434	"arg_2"	"month_interval"	32	0	1	2
3221	435	"res_0"	"month_interval"	32	0	0	0
3222	435	"arg_1"	"month_interval"	32	0	1	1
3223	435	"arg_2"	"month_interval"	32	0	1	2
3224	436	"res_0"	"month_interval"	32	0	0	0
3225	436	"arg_1"	"month_interval"	32	0	1	1
3226	436	"arg_2"	"month_interval"	32	0	1	2
3227	437	"res_0"	"month_interval"	32	0	0	0
3228	437	"arg_1"	"month_interval"	32	0	1	1
3229	437	"arg_2"	"month_interval"	32	0	1	2
3230	438	"res_0"	"month_interval"	32	0	0	0
3231	438	"arg_1"	"month_interval"	32	0	1	1
3232	439	"res_0"	"month_interval"	32	0	0	0
3233	439	"arg_1"	"month_interval"	32	0	1	1
3234	440	"res_0"	"tinyint"	8	0	0	0
3235	440	"arg_1"	"month_interval"	32	0	1	1
3236	441	"res_0"	"month_interval"	32	0	0	0
3237	441	"arg_1"	"month_interval"	32	0	1	1
3238	441	"arg_2"	"int"	32	0	1	2
3239	442	"res_0"	"month_interval"	32	0	0	0
3240	442	"arg_1"	"month_interval"	32	0	1	1
3241	442	"arg_2"	"int"	32	0	1	2
3242	443	"res_0"	"sec_interval"	13	0	0	0
3243	443	"arg_1"	"sec_interval"	13	0	1	1
3244	443	"arg_2"	"sec_interval"	13	0	1	2
3245	444	"res_0"	"sec_interval"	13	0	0	0
3246	444	"arg_1"	"sec_interval"	13	0	1	1
3247	444	"arg_2"	"sec_interval"	13	0	1	2
3248	445	"res_0"	"sec_interval"	13	0	0	0
3249	445	"arg_1"	"sec_interval"	13	0	1	1
3250	445	"arg_2"	"sec_interval"	13	0	1	2
3251	446	"res_0"	"sec_interval"	13	0	0	0
3252	446	"arg_1"	"sec_interval"	13	0	1	1
3253	446	"arg_2"	"sec_interval"	13	0	1	2
3254	447	"res_0"	"sec_interval"	13	0	0	0
3255	447	"arg_1"	"sec_interval"	13	0	1	1
3256	448	"res_0"	"sec_interval"	13	0	0	0
3257	448	"arg_1"	"sec_interval"	13	0	1	1
3258	449	"res_0"	"tinyint"	8	0	0	0
3259	449	"arg_1"	"sec_interval"	13	0	1	1
3260	450	"res_0"	"sec_interval"	13	0	0	0
3261	450	"arg_1"	"sec_interval"	13	0	1	1
3262	450	"arg_2"	"bigint"	64	0	1	2
3263	451	"res_0"	"sec_interval"	13	0	0	0
3264	451	"arg_1"	"sec_interval"	13	0	1	1
3265	451	"arg_2"	"bigint"	64	0	1	2
3266	452	"res_0"	"decimal"	4	0	0	0
3267	452	"arg_1"	"decimal"	4	0	1	1
3268	452	"arg_2"	"tinyint"	8	0	1	2
3269	453	"res_0"	"decimal"	4	0	0	0
3270	453	"arg_1"	"tinyint"	8	0	1	1
3271	453	"arg_2"	"decimal"	4	0	1	2
3272	454	"res_0"	"decimal"	4	0	0	0
3273	454	"arg_1"	"decimal"	4	0	1	1
3274	454	"arg_2"	"decimal"	2	0	1	2
3275	455	"res_0"	"decimal"	4	0	0	0
3276	455	"arg_1"	"decimal"	2	0	1	1
3277	455	"arg_2"	"decimal"	4	0	1	2
3278	456	"res_0"	"decimal"	9	0	0	0
3279	456	"arg_1"	"decimal"	9	0	1	1
3280	456	"arg_2"	"tinyint"	8	0	1	2
3281	457	"res_0"	"decimal"	9	0	0	0
3282	457	"arg_1"	"tinyint"	8	0	1	1
3283	457	"arg_2"	"decimal"	9	0	1	2
3284	458	"res_0"	"decimal"	9	0	0	0
3285	458	"arg_1"	"decimal"	9	0	1	1
3286	458	"arg_2"	"smallint"	16	0	1	2
3287	459	"res_0"	"decimal"	9	0	0	0
3288	459	"arg_1"	"smallint"	16	0	1	1
3289	459	"arg_2"	"decimal"	9	0	1	2
3290	460	"res_0"	"decimal"	9	0	0	0
3291	460	"arg_1"	"decimal"	9	0	1	1
3292	460	"arg_2"	"decimal"	2	0	1	2
3293	461	"res_0"	"decimal"	9	0	0	0
3294	461	"arg_1"	"decimal"	2	0	1	1
3295	461	"arg_2"	"decimal"	9	0	1	2
3296	462	"res_0"	"decimal"	9	0	0	0
3297	462	"arg_1"	"decimal"	9	0	1	1
3298	462	"arg_2"	"decimal"	4	0	1	2
3299	463	"res_0"	"decimal"	9	0	0	0
3300	463	"arg_1"	"decimal"	4	0	1	1
3301	463	"arg_2"	"decimal"	9	0	1	2
3302	464	"res_0"	"decimal"	18	0	0	0
3303	464	"arg_1"	"decimal"	18	0	1	1
3304	464	"arg_2"	"tinyint"	8	0	1	2
3305	465	"res_0"	"decimal"	18	0	0	0
3306	465	"arg_1"	"tinyint"	8	0	1	1
3307	465	"arg_2"	"decimal"	18	0	1	2
3308	466	"res_0"	"decimal"	18	0	0	0
3309	466	"arg_1"	"decimal"	18	0	1	1
3310	466	"arg_2"	"smallint"	16	0	1	2
3311	467	"res_0"	"decimal"	18	0	0	0
3312	467	"arg_1"	"smallint"	16	0	1	1
3313	467	"arg_2"	"decimal"	18	0	1	2
3314	468	"res_0"	"decimal"	18	0	0	0
3315	468	"arg_1"	"decimal"	18	0	1	1
3316	468	"arg_2"	"int"	32	0	1	2
3317	469	"res_0"	"decimal"	18	0	0	0
3318	469	"arg_1"	"int"	32	0	1	1
3319	469	"arg_2"	"decimal"	18	0	1	2
3320	470	"res_0"	"decimal"	18	0	0	0
3321	470	"arg_1"	"decimal"	18	0	1	1
3322	470	"arg_2"	"wrd"	64	0	1	2
3323	471	"res_0"	"decimal"	18	0	0	0
3324	471	"arg_1"	"wrd"	64	0	1	1
3325	471	"arg_2"	"decimal"	18	0	1	2
3326	472	"res_0"	"decimal"	18	0	0	0
3327	472	"arg_1"	"decimal"	18	0	1	1
3328	472	"arg_2"	"decimal"	2	0	1	2
3329	473	"res_0"	"decimal"	18	0	0	0
3330	473	"arg_1"	"decimal"	2	0	1	1
3331	473	"arg_2"	"decimal"	18	0	1	2
3332	474	"res_0"	"decimal"	18	0	0	0
3333	474	"arg_1"	"decimal"	18	0	1	1
3334	474	"arg_2"	"decimal"	4	0	1	2
3335	475	"res_0"	"decimal"	18	0	0	0
3336	475	"arg_1"	"decimal"	4	0	1	1
3337	475	"arg_2"	"decimal"	18	0	1	2
3338	476	"res_0"	"decimal"	18	0	0	0
3339	476	"arg_1"	"decimal"	18	0	1	1
3340	476	"arg_2"	"decimal"	9	0	1	2
3341	477	"res_0"	"decimal"	18	0	0	0
3342	477	"arg_1"	"decimal"	9	0	1	1
3343	477	"arg_2"	"decimal"	18	0	1	2
3344	478	"res_0"	"decimal"	39	0	0	0
3345	478	"arg_1"	"decimal"	39	0	1	1
3346	478	"arg_2"	"tinyint"	8	0	1	2
3347	479	"res_0"	"decimal"	39	0	0	0
3348	479	"arg_1"	"tinyint"	8	0	1	1
3349	479	"arg_2"	"decimal"	39	0	1	2
3350	480	"res_0"	"decimal"	39	0	0	0
3351	480	"arg_1"	"decimal"	39	0	1	1
3352	480	"arg_2"	"smallint"	16	0	1	2
3353	481	"res_0"	"decimal"	39	0	0	0
3354	481	"arg_1"	"smallint"	16	0	1	1
3355	481	"arg_2"	"decimal"	39	0	1	2
3356	482	"res_0"	"decimal"	39	0	0	0
3357	482	"arg_1"	"decimal"	39	0	1	1
3358	482	"arg_2"	"int"	32	0	1	2
3359	483	"res_0"	"decimal"	39	0	0	0
3360	483	"arg_1"	"int"	32	0	1	1
3361	483	"arg_2"	"decimal"	39	0	1	2
3362	484	"res_0"	"decimal"	39	0	0	0
3363	484	"arg_1"	"decimal"	39	0	1	1
3364	484	"arg_2"	"bigint"	64	0	1	2
3365	485	"res_0"	"decimal"	39	0	0	0
3366	485	"arg_1"	"bigint"	64	0	1	1
3367	485	"arg_2"	"decimal"	39	0	1	2
3368	486	"res_0"	"decimal"	39	0	0	0
3369	486	"arg_1"	"decimal"	39	0	1	1
3370	486	"arg_2"	"wrd"	64	0	1	2
3371	487	"res_0"	"decimal"	39	0	0	0
3372	487	"arg_1"	"wrd"	64	0	1	1
3373	487	"arg_2"	"decimal"	39	0	1	2
3374	488	"res_0"	"decimal"	39	0	0	0
3375	488	"arg_1"	"decimal"	39	0	1	1
3376	488	"arg_2"	"decimal"	2	0	1	2
3377	489	"res_0"	"decimal"	39	0	0	0
3378	489	"arg_1"	"decimal"	2	0	1	1
3379	489	"arg_2"	"decimal"	39	0	1	2
3380	490	"res_0"	"decimal"	39	0	0	0
3381	490	"arg_1"	"decimal"	39	0	1	1
3382	490	"arg_2"	"decimal"	4	0	1	2
3383	491	"res_0"	"decimal"	39	0	0	0
3384	491	"arg_1"	"decimal"	4	0	1	1
3385	491	"arg_2"	"decimal"	39	0	1	2
3386	492	"res_0"	"decimal"	39	0	0	0
3387	492	"arg_1"	"decimal"	39	0	1	1
3388	492	"arg_2"	"decimal"	9	0	1	2
3389	493	"res_0"	"decimal"	39	0	0	0
3390	493	"arg_1"	"decimal"	9	0	1	1
3391	493	"arg_2"	"decimal"	39	0	1	2
3392	494	"res_0"	"decimal"	39	0	0	0
3393	494	"arg_1"	"decimal"	39	0	1	1
3394	494	"arg_2"	"decimal"	18	0	1	2
3395	495	"res_0"	"decimal"	39	0	0	0
3396	495	"arg_1"	"decimal"	18	0	1	1
3397	495	"arg_2"	"decimal"	39	0	1	2
3398	496	"res_0"	"decimal"	2	0	0	0
3399	496	"arg_1"	"decimal"	2	0	1	1
3400	496	"arg_2"	"tinyint"	8	0	1	2
3401	497	"res_0"	"decimal"	4	0	0	0
3402	497	"arg_1"	"decimal"	4	0	1	1
3403	497	"arg_2"	"tinyint"	8	0	1	2
3404	498	"res_0"	"decimal"	9	0	0	0
3405	498	"arg_1"	"decimal"	9	0	1	1
3406	498	"arg_2"	"tinyint"	8	0	1	2
3407	499	"res_0"	"decimal"	18	0	0	0
3408	499	"arg_1"	"decimal"	18	0	1	1
3409	499	"arg_2"	"tinyint"	8	0	1	2
3410	500	"res_0"	"decimal"	39	0	0	0
3411	500	"arg_1"	"decimal"	39	0	1	1
3412	500	"arg_2"	"tinyint"	8	0	1	2
3413	501	"res_0"	"real"	24	0	0	0
3414	501	"arg_1"	"real"	24	0	1	1
3415	501	"arg_2"	"tinyint"	8	0	1	2
3416	502	"res_0"	"double"	53	0	0	0
3417	502	"arg_1"	"double"	53	0	1	1
3418	502	"arg_2"	"tinyint"	8	0	1	2
3419	503	"res_0"	"oid"	63	0	0	0
3420	503	"arg_1"	"oid"	63	0	1	1
3421	503	"arg_2"	"oid"	63	0	1	2
3422	504	"res_0"	"oid"	63	0	0	0
3423	504	"arg_1"	"tinyint"	8	0	1	1
3424	504	"arg_2"	"oid"	63	0	1	2
3425	505	"res_0"	"oid"	63	0	0	0
3426	505	"arg_1"	"smallint"	16	0	1	1
3427	505	"arg_2"	"oid"	63	0	1	2
3428	506	"res_0"	"oid"	63	0	0	0
3429	506	"arg_1"	"int"	32	0	1	1
3430	506	"arg_2"	"oid"	63	0	1	2
3431	507	"res_0"	"oid"	63	0	0	0
3432	507	"arg_1"	"bigint"	64	0	1	1
3433	507	"arg_2"	"oid"	63	0	1	2
3434	508	"res_0"	"oid"	63	0	0	0
3435	508	"arg_1"	"wrd"	64	0	1	1
3436	508	"arg_2"	"oid"	63	0	1	2
3437	509	"res_0"	"oid"	63	0	0	0
3438	509	"arg_1"	"hugeint"	128	0	1	1
3439	509	"arg_2"	"oid"	63	0	1	2
3440	510	"res_0"	"oid"	63	0	0	0
3441	510	"arg_1"	"decimal"	2	0	1	1
3442	510	"arg_2"	"oid"	63	0	1	2
3443	511	"res_0"	"oid"	63	0	0	0
3444	511	"arg_1"	"decimal"	4	0	1	1
3445	511	"arg_2"	"oid"	63	0	1	2
3446	512	"res_0"	"oid"	63	0	0	0
3447	512	"arg_1"	"decimal"	9	0	1	1
3448	512	"arg_2"	"oid"	63	0	1	2
3449	513	"res_0"	"oid"	63	0	0	0
3450	513	"arg_1"	"decimal"	18	0	1	1
3451	513	"arg_2"	"oid"	63	0	1	2
3452	514	"res_0"	"oid"	63	0	0	0
3453	514	"arg_1"	"decimal"	39	0	1	1
3454	514	"arg_2"	"oid"	63	0	1	2
3455	515	"res_0"	"oid"	63	0	0	0
3456	515	"arg_1"	"real"	24	0	1	1
3457	515	"arg_2"	"oid"	63	0	1	2
3458	516	"res_0"	"oid"	63	0	0	0
3459	516	"arg_1"	"double"	53	0	1	1
3460	516	"arg_2"	"oid"	63	0	1	2
3461	517	"res_0"	"oid"	63	0	0	0
3462	517	"arg_1"	"month_interval"	32	0	1	1
3463	517	"arg_2"	"oid"	63	0	1	2
3464	518	"res_0"	"oid"	63	0	0	0
3465	518	"arg_1"	"sec_interval"	13	0	1	1
3466	518	"arg_2"	"oid"	63	0	1	2
3467	519	"res_0"	"oid"	63	0	0	0
3468	519	"arg_1"	"time"	7	0	1	1
3469	519	"arg_2"	"oid"	63	0	1	2
3470	520	"res_0"	"oid"	63	0	0	0
3471	520	"arg_1"	"timetz"	7	0	1	1
3472	520	"arg_2"	"oid"	63	0	1	2
3473	521	"res_0"	"oid"	63	0	0	0
3474	521	"arg_1"	"date"	0	0	1	1
3475	521	"arg_2"	"oid"	63	0	1	2
3476	522	"res_0"	"oid"	63	0	0	0
3477	522	"arg_1"	"timestamp"	7	0	1	1
3478	522	"arg_2"	"oid"	63	0	1	2
3479	523	"res_0"	"oid"	63	0	0	0
3480	523	"arg_1"	"timestamptz"	7	0	1	1
3481	523	"arg_2"	"oid"	63	0	1	2
3482	524	"res_0"	"oid"	63	0	0	0
3483	524	"arg_1"	"blob"	0	0	1	1
3484	524	"arg_2"	"oid"	63	0	1	2
3485	525	"res_0"	"tinyint"	8	0	0	0
3486	525	"arg_1"	"oid"	63	0	1	1
3487	525	"arg_2"	"tinyint"	8	0	1	2
3488	526	"res_0"	"tinyint"	8	0	0	0
3489	526	"arg_1"	"tinyint"	8	0	1	1
3490	526	"arg_2"	"tinyint"	8	0	1	2
3491	527	"res_0"	"tinyint"	8	0	0	0
3492	527	"arg_1"	"smallint"	16	0	1	1
3493	527	"arg_2"	"tinyint"	8	0	1	2
3494	528	"res_0"	"tinyint"	8	0	0	0
3495	528	"arg_1"	"int"	32	0	1	1
3496	528	"arg_2"	"tinyint"	8	0	1	2
3497	529	"res_0"	"tinyint"	8	0	0	0
3498	529	"arg_1"	"bigint"	64	0	1	1
3499	529	"arg_2"	"tinyint"	8	0	1	2
3500	530	"res_0"	"tinyint"	8	0	0	0
3501	530	"arg_1"	"wrd"	64	0	1	1
3502	530	"arg_2"	"tinyint"	8	0	1	2
3503	531	"res_0"	"tinyint"	8	0	0	0
3504	531	"arg_1"	"hugeint"	128	0	1	1
3505	531	"arg_2"	"tinyint"	8	0	1	2
3506	532	"res_0"	"tinyint"	8	0	0	0
3507	532	"arg_1"	"decimal"	2	0	1	1
3508	532	"arg_2"	"tinyint"	8	0	1	2
3509	533	"res_0"	"tinyint"	8	0	0	0
3510	533	"arg_1"	"decimal"	4	0	1	1
3511	533	"arg_2"	"tinyint"	8	0	1	2
3512	534	"res_0"	"tinyint"	8	0	0	0
3513	534	"arg_1"	"decimal"	9	0	1	1
3514	534	"arg_2"	"tinyint"	8	0	1	2
3515	535	"res_0"	"tinyint"	8	0	0	0
3516	535	"arg_1"	"decimal"	18	0	1	1
3517	535	"arg_2"	"tinyint"	8	0	1	2
3518	536	"res_0"	"tinyint"	8	0	0	0
3519	536	"arg_1"	"decimal"	39	0	1	1
3520	536	"arg_2"	"tinyint"	8	0	1	2
3521	537	"res_0"	"tinyint"	8	0	0	0
3522	537	"arg_1"	"real"	24	0	1	1
3523	537	"arg_2"	"tinyint"	8	0	1	2
3524	538	"res_0"	"tinyint"	8	0	0	0
3525	538	"arg_1"	"double"	53	0	1	1
3526	538	"arg_2"	"tinyint"	8	0	1	2
3527	539	"res_0"	"tinyint"	8	0	0	0
3528	539	"arg_1"	"month_interval"	32	0	1	1
3529	539	"arg_2"	"tinyint"	8	0	1	2
3530	540	"res_0"	"tinyint"	8	0	0	0
3531	540	"arg_1"	"sec_interval"	13	0	1	1
3532	540	"arg_2"	"tinyint"	8	0	1	2
3533	541	"res_0"	"tinyint"	8	0	0	0
3534	541	"arg_1"	"time"	7	0	1	1
3535	541	"arg_2"	"tinyint"	8	0	1	2
3536	542	"res_0"	"tinyint"	8	0	0	0
3537	542	"arg_1"	"timetz"	7	0	1	1
3538	542	"arg_2"	"tinyint"	8	0	1	2
3539	543	"res_0"	"tinyint"	8	0	0	0
3540	543	"arg_1"	"date"	0	0	1	1
3541	543	"arg_2"	"tinyint"	8	0	1	2
3542	544	"res_0"	"tinyint"	8	0	0	0
3543	544	"arg_1"	"timestamp"	7	0	1	1
3544	544	"arg_2"	"tinyint"	8	0	1	2
3545	545	"res_0"	"tinyint"	8	0	0	0
3546	545	"arg_1"	"timestamptz"	7	0	1	1
3547	545	"arg_2"	"tinyint"	8	0	1	2
3548	546	"res_0"	"tinyint"	8	0	0	0
3549	546	"arg_1"	"blob"	0	0	1	1
3550	546	"arg_2"	"tinyint"	8	0	1	2
3551	547	"res_0"	"smallint"	16	0	0	0
3552	547	"arg_1"	"oid"	63	0	1	1
3553	547	"arg_2"	"smallint"	16	0	1	2
3554	548	"res_0"	"smallint"	16	0	0	0
3555	548	"arg_1"	"tinyint"	8	0	1	1
3556	548	"arg_2"	"smallint"	16	0	1	2
3557	549	"res_0"	"smallint"	16	0	0	0
3558	549	"arg_1"	"smallint"	16	0	1	1
3559	549	"arg_2"	"smallint"	16	0	1	2
3560	550	"res_0"	"smallint"	16	0	0	0
3561	550	"arg_1"	"int"	32	0	1	1
3562	550	"arg_2"	"smallint"	16	0	1	2
3563	551	"res_0"	"smallint"	16	0	0	0
3564	551	"arg_1"	"bigint"	64	0	1	1
3565	551	"arg_2"	"smallint"	16	0	1	2
3566	552	"res_0"	"smallint"	16	0	0	0
3567	552	"arg_1"	"wrd"	64	0	1	1
3568	552	"arg_2"	"smallint"	16	0	1	2
3569	553	"res_0"	"smallint"	16	0	0	0
3570	553	"arg_1"	"hugeint"	128	0	1	1
3571	553	"arg_2"	"smallint"	16	0	1	2
3572	554	"res_0"	"smallint"	16	0	0	0
3573	554	"arg_1"	"decimal"	2	0	1	1
3574	554	"arg_2"	"smallint"	16	0	1	2
3575	555	"res_0"	"smallint"	16	0	0	0
3576	555	"arg_1"	"decimal"	4	0	1	1
3577	555	"arg_2"	"smallint"	16	0	1	2
3578	556	"res_0"	"smallint"	16	0	0	0
3579	556	"arg_1"	"decimal"	9	0	1	1
3580	556	"arg_2"	"smallint"	16	0	1	2
3581	557	"res_0"	"smallint"	16	0	0	0
3582	557	"arg_1"	"decimal"	18	0	1	1
3583	557	"arg_2"	"smallint"	16	0	1	2
3584	558	"res_0"	"smallint"	16	0	0	0
3585	558	"arg_1"	"decimal"	39	0	1	1
3586	558	"arg_2"	"smallint"	16	0	1	2
3587	559	"res_0"	"smallint"	16	0	0	0
3588	559	"arg_1"	"real"	24	0	1	1
3589	559	"arg_2"	"smallint"	16	0	1	2
3590	560	"res_0"	"smallint"	16	0	0	0
3591	560	"arg_1"	"double"	53	0	1	1
3592	560	"arg_2"	"smallint"	16	0	1	2
3593	561	"res_0"	"smallint"	16	0	0	0
3594	561	"arg_1"	"month_interval"	32	0	1	1
3595	561	"arg_2"	"smallint"	16	0	1	2
3596	562	"res_0"	"smallint"	16	0	0	0
3597	562	"arg_1"	"sec_interval"	13	0	1	1
3598	562	"arg_2"	"smallint"	16	0	1	2
3599	563	"res_0"	"smallint"	16	0	0	0
3600	563	"arg_1"	"time"	7	0	1	1
3601	563	"arg_2"	"smallint"	16	0	1	2
3602	564	"res_0"	"smallint"	16	0	0	0
3603	564	"arg_1"	"timetz"	7	0	1	1
3604	564	"arg_2"	"smallint"	16	0	1	2
3605	565	"res_0"	"smallint"	16	0	0	0
3606	565	"arg_1"	"date"	0	0	1	1
3607	565	"arg_2"	"smallint"	16	0	1	2
3608	566	"res_0"	"smallint"	16	0	0	0
3609	566	"arg_1"	"timestamp"	7	0	1	1
3610	566	"arg_2"	"smallint"	16	0	1	2
3611	567	"res_0"	"smallint"	16	0	0	0
3612	567	"arg_1"	"timestamptz"	7	0	1	1
3613	567	"arg_2"	"smallint"	16	0	1	2
3614	568	"res_0"	"smallint"	16	0	0	0
3615	568	"arg_1"	"blob"	0	0	1	1
3616	568	"arg_2"	"smallint"	16	0	1	2
3617	569	"res_0"	"int"	32	0	0	0
3618	569	"arg_1"	"oid"	63	0	1	1
3619	569	"arg_2"	"int"	32	0	1	2
3620	570	"res_0"	"int"	32	0	0	0
3621	570	"arg_1"	"tinyint"	8	0	1	1
3622	570	"arg_2"	"int"	32	0	1	2
3623	571	"res_0"	"int"	32	0	0	0
3624	571	"arg_1"	"smallint"	16	0	1	1
3625	571	"arg_2"	"int"	32	0	1	2
3626	572	"res_0"	"int"	32	0	0	0
3627	572	"arg_1"	"int"	32	0	1	1
3628	572	"arg_2"	"int"	32	0	1	2
3629	573	"res_0"	"int"	32	0	0	0
3630	573	"arg_1"	"bigint"	64	0	1	1
3631	573	"arg_2"	"int"	32	0	1	2
3632	574	"res_0"	"int"	32	0	0	0
3633	574	"arg_1"	"wrd"	64	0	1	1
3634	574	"arg_2"	"int"	32	0	1	2
3635	575	"res_0"	"int"	32	0	0	0
3636	575	"arg_1"	"hugeint"	128	0	1	1
3637	575	"arg_2"	"int"	32	0	1	2
3638	576	"res_0"	"int"	32	0	0	0
3639	576	"arg_1"	"decimal"	2	0	1	1
3640	576	"arg_2"	"int"	32	0	1	2
3641	577	"res_0"	"int"	32	0	0	0
3642	577	"arg_1"	"decimal"	4	0	1	1
3643	577	"arg_2"	"int"	32	0	1	2
3644	578	"res_0"	"int"	32	0	0	0
3645	578	"arg_1"	"decimal"	9	0	1	1
3646	578	"arg_2"	"int"	32	0	1	2
3647	579	"res_0"	"int"	32	0	0	0
3648	579	"arg_1"	"decimal"	18	0	1	1
3649	579	"arg_2"	"int"	32	0	1	2
3650	580	"res_0"	"int"	32	0	0	0
3651	580	"arg_1"	"decimal"	39	0	1	1
3652	580	"arg_2"	"int"	32	0	1	2
3653	581	"res_0"	"int"	32	0	0	0
3654	581	"arg_1"	"real"	24	0	1	1
3655	581	"arg_2"	"int"	32	0	1	2
3656	582	"res_0"	"int"	32	0	0	0
3657	582	"arg_1"	"double"	53	0	1	1
3658	582	"arg_2"	"int"	32	0	1	2
3659	583	"res_0"	"int"	32	0	0	0
3660	583	"arg_1"	"month_interval"	32	0	1	1
3661	583	"arg_2"	"int"	32	0	1	2
3662	584	"res_0"	"int"	32	0	0	0
3663	584	"arg_1"	"sec_interval"	13	0	1	1
3664	584	"arg_2"	"int"	32	0	1	2
3665	585	"res_0"	"int"	32	0	0	0
3666	585	"arg_1"	"time"	7	0	1	1
3667	585	"arg_2"	"int"	32	0	1	2
3668	586	"res_0"	"int"	32	0	0	0
3669	586	"arg_1"	"timetz"	7	0	1	1
3670	586	"arg_2"	"int"	32	0	1	2
3671	587	"res_0"	"int"	32	0	0	0
3672	587	"arg_1"	"date"	0	0	1	1
3673	587	"arg_2"	"int"	32	0	1	2
3674	588	"res_0"	"int"	32	0	0	0
3675	588	"arg_1"	"timestamp"	7	0	1	1
3676	588	"arg_2"	"int"	32	0	1	2
3677	589	"res_0"	"int"	32	0	0	0
3678	589	"arg_1"	"timestamptz"	7	0	1	1
3679	589	"arg_2"	"int"	32	0	1	2
3680	590	"res_0"	"int"	32	0	0	0
3681	590	"arg_1"	"blob"	0	0	1	1
3682	590	"arg_2"	"int"	32	0	1	2
3683	591	"res_0"	"bigint"	64	0	0	0
3684	591	"arg_1"	"oid"	63	0	1	1
3685	591	"arg_2"	"bigint"	64	0	1	2
3686	592	"res_0"	"bigint"	64	0	0	0
3687	592	"arg_1"	"tinyint"	8	0	1	1
3688	592	"arg_2"	"bigint"	64	0	1	2
3689	593	"res_0"	"bigint"	64	0	0	0
3690	593	"arg_1"	"smallint"	16	0	1	1
3691	593	"arg_2"	"bigint"	64	0	1	2
3692	594	"res_0"	"bigint"	64	0	0	0
3693	594	"arg_1"	"int"	32	0	1	1
3694	594	"arg_2"	"bigint"	64	0	1	2
3695	595	"res_0"	"bigint"	64	0	0	0
3696	595	"arg_1"	"bigint"	64	0	1	1
3697	595	"arg_2"	"bigint"	64	0	1	2
3698	596	"res_0"	"bigint"	64	0	0	0
3699	596	"arg_1"	"wrd"	64	0	1	1
3700	596	"arg_2"	"bigint"	64	0	1	2
3701	597	"res_0"	"bigint"	64	0	0	0
3702	597	"arg_1"	"hugeint"	128	0	1	1
3703	597	"arg_2"	"bigint"	64	0	1	2
3704	598	"res_0"	"bigint"	64	0	0	0
3705	598	"arg_1"	"decimal"	2	0	1	1
3706	598	"arg_2"	"bigint"	64	0	1	2
3707	599	"res_0"	"bigint"	64	0	0	0
3708	599	"arg_1"	"decimal"	4	0	1	1
3709	599	"arg_2"	"bigint"	64	0	1	2
3710	600	"res_0"	"bigint"	64	0	0	0
3711	600	"arg_1"	"decimal"	9	0	1	1
3712	600	"arg_2"	"bigint"	64	0	1	2
3713	601	"res_0"	"bigint"	64	0	0	0
3714	601	"arg_1"	"decimal"	18	0	1	1
3715	601	"arg_2"	"bigint"	64	0	1	2
3716	602	"res_0"	"bigint"	64	0	0	0
3717	602	"arg_1"	"decimal"	39	0	1	1
3718	602	"arg_2"	"bigint"	64	0	1	2
3719	603	"res_0"	"bigint"	64	0	0	0
3720	603	"arg_1"	"real"	24	0	1	1
3721	603	"arg_2"	"bigint"	64	0	1	2
3722	604	"res_0"	"bigint"	64	0	0	0
3723	604	"arg_1"	"double"	53	0	1	1
3724	604	"arg_2"	"bigint"	64	0	1	2
3725	605	"res_0"	"bigint"	64	0	0	0
3726	605	"arg_1"	"month_interval"	32	0	1	1
3727	605	"arg_2"	"bigint"	64	0	1	2
3728	606	"res_0"	"bigint"	64	0	0	0
3729	606	"arg_1"	"sec_interval"	13	0	1	1
3730	606	"arg_2"	"bigint"	64	0	1	2
3731	607	"res_0"	"bigint"	64	0	0	0
3732	607	"arg_1"	"time"	7	0	1	1
3733	607	"arg_2"	"bigint"	64	0	1	2
3734	608	"res_0"	"bigint"	64	0	0	0
3735	608	"arg_1"	"timetz"	7	0	1	1
3736	608	"arg_2"	"bigint"	64	0	1	2
3737	609	"res_0"	"bigint"	64	0	0	0
3738	609	"arg_1"	"date"	0	0	1	1
3739	609	"arg_2"	"bigint"	64	0	1	2
3740	610	"res_0"	"bigint"	64	0	0	0
3741	610	"arg_1"	"timestamp"	7	0	1	1
3742	610	"arg_2"	"bigint"	64	0	1	2
3743	611	"res_0"	"bigint"	64	0	0	0
3744	611	"arg_1"	"timestamptz"	7	0	1	1
3745	611	"arg_2"	"bigint"	64	0	1	2
3746	612	"res_0"	"bigint"	64	0	0	0
3747	612	"arg_1"	"blob"	0	0	1	1
3748	612	"arg_2"	"bigint"	64	0	1	2
3749	613	"res_0"	"wrd"	64	0	0	0
3750	613	"arg_1"	"oid"	63	0	1	1
3751	613	"arg_2"	"wrd"	64	0	1	2
3752	614	"res_0"	"wrd"	64	0	0	0
3753	614	"arg_1"	"tinyint"	8	0	1	1
3754	614	"arg_2"	"wrd"	64	0	1	2
3755	615	"res_0"	"wrd"	64	0	0	0
3756	615	"arg_1"	"smallint"	16	0	1	1
3757	615	"arg_2"	"wrd"	64	0	1	2
3758	616	"res_0"	"wrd"	64	0	0	0
3759	616	"arg_1"	"int"	32	0	1	1
3760	616	"arg_2"	"wrd"	64	0	1	2
3761	617	"res_0"	"wrd"	64	0	0	0
3762	617	"arg_1"	"bigint"	64	0	1	1
3763	617	"arg_2"	"wrd"	64	0	1	2
3764	618	"res_0"	"wrd"	64	0	0	0
3765	618	"arg_1"	"wrd"	64	0	1	1
3766	618	"arg_2"	"wrd"	64	0	1	2
3767	619	"res_0"	"wrd"	64	0	0	0
3768	619	"arg_1"	"hugeint"	128	0	1	1
3769	619	"arg_2"	"wrd"	64	0	1	2
3770	620	"res_0"	"wrd"	64	0	0	0
3771	620	"arg_1"	"decimal"	2	0	1	1
3772	620	"arg_2"	"wrd"	64	0	1	2
3773	621	"res_0"	"wrd"	64	0	0	0
3774	621	"arg_1"	"decimal"	4	0	1	1
3775	621	"arg_2"	"wrd"	64	0	1	2
3776	622	"res_0"	"wrd"	64	0	0	0
3777	622	"arg_1"	"decimal"	9	0	1	1
3778	622	"arg_2"	"wrd"	64	0	1	2
3779	623	"res_0"	"wrd"	64	0	0	0
3780	623	"arg_1"	"decimal"	18	0	1	1
3781	623	"arg_2"	"wrd"	64	0	1	2
3782	624	"res_0"	"wrd"	64	0	0	0
3783	624	"arg_1"	"decimal"	39	0	1	1
3784	624	"arg_2"	"wrd"	64	0	1	2
3785	625	"res_0"	"wrd"	64	0	0	0
3786	625	"arg_1"	"real"	24	0	1	1
3787	625	"arg_2"	"wrd"	64	0	1	2
3788	626	"res_0"	"wrd"	64	0	0	0
3789	626	"arg_1"	"double"	53	0	1	1
3790	626	"arg_2"	"wrd"	64	0	1	2
3791	627	"res_0"	"wrd"	64	0	0	0
3792	627	"arg_1"	"month_interval"	32	0	1	1
3793	627	"arg_2"	"wrd"	64	0	1	2
3794	628	"res_0"	"wrd"	64	0	0	0
3795	628	"arg_1"	"sec_interval"	13	0	1	1
3796	628	"arg_2"	"wrd"	64	0	1	2
3797	629	"res_0"	"wrd"	64	0	0	0
3798	629	"arg_1"	"time"	7	0	1	1
3799	629	"arg_2"	"wrd"	64	0	1	2
3800	630	"res_0"	"wrd"	64	0	0	0
3801	630	"arg_1"	"timetz"	7	0	1	1
3802	630	"arg_2"	"wrd"	64	0	1	2
3803	631	"res_0"	"wrd"	64	0	0	0
3804	631	"arg_1"	"date"	0	0	1	1
3805	631	"arg_2"	"wrd"	64	0	1	2
3806	632	"res_0"	"wrd"	64	0	0	0
3807	632	"arg_1"	"timestamp"	7	0	1	1
3808	632	"arg_2"	"wrd"	64	0	1	2
3809	633	"res_0"	"wrd"	64	0	0	0
3810	633	"arg_1"	"timestamptz"	7	0	1	1
3811	633	"arg_2"	"wrd"	64	0	1	2
3812	634	"res_0"	"wrd"	64	0	0	0
3813	634	"arg_1"	"blob"	0	0	1	1
3814	634	"arg_2"	"wrd"	64	0	1	2
3815	635	"res_0"	"hugeint"	128	0	0	0
3816	635	"arg_1"	"oid"	63	0	1	1
3817	635	"arg_2"	"hugeint"	128	0	1	2
3818	636	"res_0"	"hugeint"	128	0	0	0
3819	636	"arg_1"	"tinyint"	8	0	1	1
3820	636	"arg_2"	"hugeint"	128	0	1	2
3821	637	"res_0"	"hugeint"	128	0	0	0
3822	637	"arg_1"	"smallint"	16	0	1	1
3823	637	"arg_2"	"hugeint"	128	0	1	2
3824	638	"res_0"	"hugeint"	128	0	0	0
3825	638	"arg_1"	"int"	32	0	1	1
3826	638	"arg_2"	"hugeint"	128	0	1	2
3827	639	"res_0"	"hugeint"	128	0	0	0
3828	639	"arg_1"	"bigint"	64	0	1	1
3829	639	"arg_2"	"hugeint"	128	0	1	2
3830	640	"res_0"	"hugeint"	128	0	0	0
3831	640	"arg_1"	"wrd"	64	0	1	1
3832	640	"arg_2"	"hugeint"	128	0	1	2
3833	641	"res_0"	"hugeint"	128	0	0	0
3834	641	"arg_1"	"hugeint"	128	0	1	1
3835	641	"arg_2"	"hugeint"	128	0	1	2
3836	642	"res_0"	"hugeint"	128	0	0	0
3837	642	"arg_1"	"decimal"	2	0	1	1
3838	642	"arg_2"	"hugeint"	128	0	1	2
3839	643	"res_0"	"hugeint"	128	0	0	0
3840	643	"arg_1"	"decimal"	4	0	1	1
3841	643	"arg_2"	"hugeint"	128	0	1	2
3842	644	"res_0"	"hugeint"	128	0	0	0
3843	644	"arg_1"	"decimal"	9	0	1	1
3844	644	"arg_2"	"hugeint"	128	0	1	2
3845	645	"res_0"	"hugeint"	128	0	0	0
3846	645	"arg_1"	"decimal"	18	0	1	1
3847	645	"arg_2"	"hugeint"	128	0	1	2
3848	646	"res_0"	"hugeint"	128	0	0	0
3849	646	"arg_1"	"decimal"	39	0	1	1
3850	646	"arg_2"	"hugeint"	128	0	1	2
3851	647	"res_0"	"hugeint"	128	0	0	0
3852	647	"arg_1"	"real"	24	0	1	1
3853	647	"arg_2"	"hugeint"	128	0	1	2
3854	648	"res_0"	"hugeint"	128	0	0	0
3855	648	"arg_1"	"double"	53	0	1	1
3856	648	"arg_2"	"hugeint"	128	0	1	2
3857	649	"res_0"	"hugeint"	128	0	0	0
3858	649	"arg_1"	"month_interval"	32	0	1	1
3859	649	"arg_2"	"hugeint"	128	0	1	2
3860	650	"res_0"	"hugeint"	128	0	0	0
3861	650	"arg_1"	"sec_interval"	13	0	1	1
3862	650	"arg_2"	"hugeint"	128	0	1	2
3863	651	"res_0"	"hugeint"	128	0	0	0
3864	651	"arg_1"	"time"	7	0	1	1
3865	651	"arg_2"	"hugeint"	128	0	1	2
3866	652	"res_0"	"hugeint"	128	0	0	0
3867	652	"arg_1"	"timetz"	7	0	1	1
3868	652	"arg_2"	"hugeint"	128	0	1	2
3869	653	"res_0"	"hugeint"	128	0	0	0
3870	653	"arg_1"	"date"	0	0	1	1
3871	653	"arg_2"	"hugeint"	128	0	1	2
3872	654	"res_0"	"hugeint"	128	0	0	0
3873	654	"arg_1"	"timestamp"	7	0	1	1
3874	654	"arg_2"	"hugeint"	128	0	1	2
3875	655	"res_0"	"hugeint"	128	0	0	0
3876	655	"arg_1"	"timestamptz"	7	0	1	1
3877	655	"arg_2"	"hugeint"	128	0	1	2
3878	656	"res_0"	"hugeint"	128	0	0	0
3879	656	"arg_1"	"blob"	0	0	1	1
3880	656	"arg_2"	"hugeint"	128	0	1	2
3881	657	"res_0"	"decimal"	2	0	0	0
3882	657	"arg_1"	"oid"	63	0	1	1
3883	657	"arg_2"	"decimal"	2	0	1	2
3884	658	"res_0"	"decimal"	2	0	0	0
3885	658	"arg_1"	"tinyint"	8	0	1	1
3886	658	"arg_2"	"decimal"	2	0	1	2
3887	659	"res_0"	"decimal"	2	0	0	0
3888	659	"arg_1"	"smallint"	16	0	1	1
3889	659	"arg_2"	"decimal"	2	0	1	2
3890	660	"res_0"	"decimal"	2	0	0	0
3891	660	"arg_1"	"int"	32	0	1	1
3892	660	"arg_2"	"decimal"	2	0	1	2
3893	661	"res_0"	"decimal"	2	0	0	0
3894	661	"arg_1"	"bigint"	64	0	1	1
3895	661	"arg_2"	"decimal"	2	0	1	2
3896	662	"res_0"	"decimal"	2	0	0	0
3897	662	"arg_1"	"wrd"	64	0	1	1
3898	662	"arg_2"	"decimal"	2	0	1	2
3899	663	"res_0"	"decimal"	2	0	0	0
3900	663	"arg_1"	"hugeint"	128	0	1	1
3901	663	"arg_2"	"decimal"	2	0	1	2
3902	664	"res_0"	"decimal"	2	0	0	0
3903	664	"arg_1"	"decimal"	2	0	1	1
3904	664	"arg_2"	"decimal"	2	0	1	2
3905	665	"res_0"	"decimal"	2	0	0	0
3906	665	"arg_1"	"decimal"	4	0	1	1
3907	665	"arg_2"	"decimal"	2	0	1	2
3908	666	"res_0"	"decimal"	2	0	0	0
3909	666	"arg_1"	"decimal"	9	0	1	1
3910	666	"arg_2"	"decimal"	2	0	1	2
3911	667	"res_0"	"decimal"	2	0	0	0
3912	667	"arg_1"	"decimal"	18	0	1	1
3913	667	"arg_2"	"decimal"	2	0	1	2
3914	668	"res_0"	"decimal"	2	0	0	0
3915	668	"arg_1"	"decimal"	39	0	1	1
3916	668	"arg_2"	"decimal"	2	0	1	2
3917	669	"res_0"	"decimal"	2	0	0	0
3918	669	"arg_1"	"real"	24	0	1	1
3919	669	"arg_2"	"decimal"	2	0	1	2
3920	670	"res_0"	"decimal"	2	0	0	0
3921	670	"arg_1"	"double"	53	0	1	1
3922	670	"arg_2"	"decimal"	2	0	1	2
3923	671	"res_0"	"decimal"	2	0	0	0
3924	671	"arg_1"	"month_interval"	32	0	1	1
3925	671	"arg_2"	"decimal"	2	0	1	2
3926	672	"res_0"	"decimal"	2	0	0	0
3927	672	"arg_1"	"sec_interval"	13	0	1	1
3928	672	"arg_2"	"decimal"	2	0	1	2
3929	673	"res_0"	"decimal"	2	0	0	0
3930	673	"arg_1"	"time"	7	0	1	1
3931	673	"arg_2"	"decimal"	2	0	1	2
3932	674	"res_0"	"decimal"	2	0	0	0
3933	674	"arg_1"	"timetz"	7	0	1	1
3934	674	"arg_2"	"decimal"	2	0	1	2
3935	675	"res_0"	"decimal"	2	0	0	0
3936	675	"arg_1"	"date"	0	0	1	1
3937	675	"arg_2"	"decimal"	2	0	1	2
3938	676	"res_0"	"decimal"	2	0	0	0
3939	676	"arg_1"	"timestamp"	7	0	1	1
3940	676	"arg_2"	"decimal"	2	0	1	2
3941	677	"res_0"	"decimal"	2	0	0	0
3942	677	"arg_1"	"timestamptz"	7	0	1	1
3943	677	"arg_2"	"decimal"	2	0	1	2
3944	678	"res_0"	"decimal"	2	0	0	0
3945	678	"arg_1"	"blob"	0	0	1	1
3946	678	"arg_2"	"decimal"	2	0	1	2
3947	679	"res_0"	"decimal"	4	0	0	0
3948	679	"arg_1"	"oid"	63	0	1	1
3949	679	"arg_2"	"decimal"	4	0	1	2
3950	680	"res_0"	"decimal"	4	0	0	0
3951	680	"arg_1"	"tinyint"	8	0	1	1
3952	680	"arg_2"	"decimal"	4	0	1	2
3953	681	"res_0"	"decimal"	4	0	0	0
3954	681	"arg_1"	"smallint"	16	0	1	1
3955	681	"arg_2"	"decimal"	4	0	1	2
3956	682	"res_0"	"decimal"	4	0	0	0
3957	682	"arg_1"	"int"	32	0	1	1
3958	682	"arg_2"	"decimal"	4	0	1	2
3959	683	"res_0"	"decimal"	4	0	0	0
3960	683	"arg_1"	"bigint"	64	0	1	1
3961	683	"arg_2"	"decimal"	4	0	1	2
3962	684	"res_0"	"decimal"	4	0	0	0
3963	684	"arg_1"	"wrd"	64	0	1	1
3964	684	"arg_2"	"decimal"	4	0	1	2
3965	685	"res_0"	"decimal"	4	0	0	0
3966	685	"arg_1"	"hugeint"	128	0	1	1
3967	685	"arg_2"	"decimal"	4	0	1	2
3968	686	"res_0"	"decimal"	4	0	0	0
3969	686	"arg_1"	"decimal"	2	0	1	1
3970	686	"arg_2"	"decimal"	4	0	1	2
3971	687	"res_0"	"decimal"	4	0	0	0
3972	687	"arg_1"	"decimal"	4	0	1	1
3973	687	"arg_2"	"decimal"	4	0	1	2
3974	688	"res_0"	"decimal"	4	0	0	0
3975	688	"arg_1"	"decimal"	9	0	1	1
3976	688	"arg_2"	"decimal"	4	0	1	2
3977	689	"res_0"	"decimal"	4	0	0	0
3978	689	"arg_1"	"decimal"	18	0	1	1
3979	689	"arg_2"	"decimal"	4	0	1	2
3980	690	"res_0"	"decimal"	4	0	0	0
3981	690	"arg_1"	"decimal"	39	0	1	1
3982	690	"arg_2"	"decimal"	4	0	1	2
3983	691	"res_0"	"decimal"	4	0	0	0
3984	691	"arg_1"	"real"	24	0	1	1
3985	691	"arg_2"	"decimal"	4	0	1	2
3986	692	"res_0"	"decimal"	4	0	0	0
3987	692	"arg_1"	"double"	53	0	1	1
3988	692	"arg_2"	"decimal"	4	0	1	2
3989	693	"res_0"	"decimal"	4	0	0	0
3990	693	"arg_1"	"month_interval"	32	0	1	1
3991	693	"arg_2"	"decimal"	4	0	1	2
3992	694	"res_0"	"decimal"	4	0	0	0
3993	694	"arg_1"	"sec_interval"	13	0	1	1
3994	694	"arg_2"	"decimal"	4	0	1	2
3995	695	"res_0"	"decimal"	4	0	0	0
3996	695	"arg_1"	"time"	7	0	1	1
3997	695	"arg_2"	"decimal"	4	0	1	2
3998	696	"res_0"	"decimal"	4	0	0	0
3999	696	"arg_1"	"timetz"	7	0	1	1
4000	696	"arg_2"	"decimal"	4	0	1	2
4001	697	"res_0"	"decimal"	4	0	0	0
4002	697	"arg_1"	"date"	0	0	1	1
4003	697	"arg_2"	"decimal"	4	0	1	2
4004	698	"res_0"	"decimal"	4	0	0	0
4005	698	"arg_1"	"timestamp"	7	0	1	1
4006	698	"arg_2"	"decimal"	4	0	1	2
4007	699	"res_0"	"decimal"	4	0	0	0
4008	699	"arg_1"	"timestamptz"	7	0	1	1
4009	699	"arg_2"	"decimal"	4	0	1	2
4010	700	"res_0"	"decimal"	4	0	0	0
4011	700	"arg_1"	"blob"	0	0	1	1
4012	700	"arg_2"	"decimal"	4	0	1	2
4013	701	"res_0"	"decimal"	9	0	0	0
4014	701	"arg_1"	"oid"	63	0	1	1
4015	701	"arg_2"	"decimal"	9	0	1	2
4016	702	"res_0"	"decimal"	9	0	0	0
4017	702	"arg_1"	"tinyint"	8	0	1	1
4018	702	"arg_2"	"decimal"	9	0	1	2
4019	703	"res_0"	"decimal"	9	0	0	0
4020	703	"arg_1"	"smallint"	16	0	1	1
4021	703	"arg_2"	"decimal"	9	0	1	2
4022	704	"res_0"	"decimal"	9	0	0	0
4023	704	"arg_1"	"int"	32	0	1	1
4024	704	"arg_2"	"decimal"	9	0	1	2
4025	705	"res_0"	"decimal"	9	0	0	0
4026	705	"arg_1"	"bigint"	64	0	1	1
4027	705	"arg_2"	"decimal"	9	0	1	2
4028	706	"res_0"	"decimal"	9	0	0	0
4029	706	"arg_1"	"wrd"	64	0	1	1
4030	706	"arg_2"	"decimal"	9	0	1	2
4031	707	"res_0"	"decimal"	9	0	0	0
4032	707	"arg_1"	"hugeint"	128	0	1	1
4033	707	"arg_2"	"decimal"	9	0	1	2
4034	708	"res_0"	"decimal"	9	0	0	0
4035	708	"arg_1"	"decimal"	2	0	1	1
4036	708	"arg_2"	"decimal"	9	0	1	2
4037	709	"res_0"	"decimal"	9	0	0	0
4038	709	"arg_1"	"decimal"	4	0	1	1
4039	709	"arg_2"	"decimal"	9	0	1	2
4040	710	"res_0"	"decimal"	9	0	0	0
4041	710	"arg_1"	"decimal"	9	0	1	1
4042	710	"arg_2"	"decimal"	9	0	1	2
4043	711	"res_0"	"decimal"	9	0	0	0
4044	711	"arg_1"	"decimal"	18	0	1	1
4045	711	"arg_2"	"decimal"	9	0	1	2
4046	712	"res_0"	"decimal"	9	0	0	0
4047	712	"arg_1"	"decimal"	39	0	1	1
4048	712	"arg_2"	"decimal"	9	0	1	2
4049	713	"res_0"	"decimal"	9	0	0	0
4050	713	"arg_1"	"real"	24	0	1	1
4051	713	"arg_2"	"decimal"	9	0	1	2
4052	714	"res_0"	"decimal"	9	0	0	0
4053	714	"arg_1"	"double"	53	0	1	1
4054	714	"arg_2"	"decimal"	9	0	1	2
4055	715	"res_0"	"decimal"	9	0	0	0
4056	715	"arg_1"	"month_interval"	32	0	1	1
4057	715	"arg_2"	"decimal"	9	0	1	2
4058	716	"res_0"	"decimal"	9	0	0	0
4059	716	"arg_1"	"sec_interval"	13	0	1	1
4060	716	"arg_2"	"decimal"	9	0	1	2
4061	717	"res_0"	"decimal"	9	0	0	0
4062	717	"arg_1"	"time"	7	0	1	1
4063	717	"arg_2"	"decimal"	9	0	1	2
4064	718	"res_0"	"decimal"	9	0	0	0
4065	718	"arg_1"	"timetz"	7	0	1	1
4066	718	"arg_2"	"decimal"	9	0	1	2
4067	719	"res_0"	"decimal"	9	0	0	0
4068	719	"arg_1"	"date"	0	0	1	1
4069	719	"arg_2"	"decimal"	9	0	1	2
4070	720	"res_0"	"decimal"	9	0	0	0
4071	720	"arg_1"	"timestamp"	7	0	1	1
4072	720	"arg_2"	"decimal"	9	0	1	2
4073	721	"res_0"	"decimal"	9	0	0	0
4074	721	"arg_1"	"timestamptz"	7	0	1	1
4075	721	"arg_2"	"decimal"	9	0	1	2
4076	722	"res_0"	"decimal"	9	0	0	0
4077	722	"arg_1"	"blob"	0	0	1	1
4078	722	"arg_2"	"decimal"	9	0	1	2
4079	723	"res_0"	"decimal"	18	0	0	0
4080	723	"arg_1"	"oid"	63	0	1	1
4081	723	"arg_2"	"decimal"	18	0	1	2
4082	724	"res_0"	"decimal"	18	0	0	0
4083	724	"arg_1"	"tinyint"	8	0	1	1
4084	724	"arg_2"	"decimal"	18	0	1	2
4085	725	"res_0"	"decimal"	18	0	0	0
4086	725	"arg_1"	"smallint"	16	0	1	1
4087	725	"arg_2"	"decimal"	18	0	1	2
4088	726	"res_0"	"decimal"	18	0	0	0
4089	726	"arg_1"	"int"	32	0	1	1
4090	726	"arg_2"	"decimal"	18	0	1	2
4091	727	"res_0"	"decimal"	18	0	0	0
4092	727	"arg_1"	"bigint"	64	0	1	1
4093	727	"arg_2"	"decimal"	18	0	1	2
4094	728	"res_0"	"decimal"	18	0	0	0
4095	728	"arg_1"	"wrd"	64	0	1	1
4096	728	"arg_2"	"decimal"	18	0	1	2
4097	729	"res_0"	"decimal"	18	0	0	0
4098	729	"arg_1"	"hugeint"	128	0	1	1
4099	729	"arg_2"	"decimal"	18	0	1	2
4100	730	"res_0"	"decimal"	18	0	0	0
4101	730	"arg_1"	"decimal"	2	0	1	1
4102	730	"arg_2"	"decimal"	18	0	1	2
4103	731	"res_0"	"decimal"	18	0	0	0
4104	731	"arg_1"	"decimal"	4	0	1	1
4105	731	"arg_2"	"decimal"	18	0	1	2
4106	732	"res_0"	"decimal"	18	0	0	0
4107	732	"arg_1"	"decimal"	9	0	1	1
4108	732	"arg_2"	"decimal"	18	0	1	2
4109	733	"res_0"	"decimal"	18	0	0	0
4110	733	"arg_1"	"decimal"	18	0	1	1
4111	733	"arg_2"	"decimal"	18	0	1	2
4112	734	"res_0"	"decimal"	18	0	0	0
4113	734	"arg_1"	"decimal"	39	0	1	1
4114	734	"arg_2"	"decimal"	18	0	1	2
4115	735	"res_0"	"decimal"	18	0	0	0
4116	735	"arg_1"	"real"	24	0	1	1
4117	735	"arg_2"	"decimal"	18	0	1	2
4118	736	"res_0"	"decimal"	18	0	0	0
4119	736	"arg_1"	"double"	53	0	1	1
4120	736	"arg_2"	"decimal"	18	0	1	2
4121	737	"res_0"	"decimal"	18	0	0	0
4122	737	"arg_1"	"month_interval"	32	0	1	1
4123	737	"arg_2"	"decimal"	18	0	1	2
4124	738	"res_0"	"decimal"	18	0	0	0
4125	738	"arg_1"	"sec_interval"	13	0	1	1
4126	738	"arg_2"	"decimal"	18	0	1	2
4127	739	"res_0"	"decimal"	18	0	0	0
4128	739	"arg_1"	"time"	7	0	1	1
4129	739	"arg_2"	"decimal"	18	0	1	2
4130	740	"res_0"	"decimal"	18	0	0	0
4131	740	"arg_1"	"timetz"	7	0	1	1
4132	740	"arg_2"	"decimal"	18	0	1	2
4133	741	"res_0"	"decimal"	18	0	0	0
4134	741	"arg_1"	"date"	0	0	1	1
4135	741	"arg_2"	"decimal"	18	0	1	2
4136	742	"res_0"	"decimal"	18	0	0	0
4137	742	"arg_1"	"timestamp"	7	0	1	1
4138	742	"arg_2"	"decimal"	18	0	1	2
4139	743	"res_0"	"decimal"	18	0	0	0
4140	743	"arg_1"	"timestamptz"	7	0	1	1
4141	743	"arg_2"	"decimal"	18	0	1	2
4142	744	"res_0"	"decimal"	18	0	0	0
4143	744	"arg_1"	"blob"	0	0	1	1
4144	744	"arg_2"	"decimal"	18	0	1	2
4145	745	"res_0"	"decimal"	39	0	0	0
4146	745	"arg_1"	"oid"	63	0	1	1
4147	745	"arg_2"	"decimal"	39	0	1	2
4148	746	"res_0"	"decimal"	39	0	0	0
4149	746	"arg_1"	"tinyint"	8	0	1	1
4150	746	"arg_2"	"decimal"	39	0	1	2
4151	747	"res_0"	"decimal"	39	0	0	0
4152	747	"arg_1"	"smallint"	16	0	1	1
4153	747	"arg_2"	"decimal"	39	0	1	2
4154	748	"res_0"	"decimal"	39	0	0	0
4155	748	"arg_1"	"int"	32	0	1	1
4156	748	"arg_2"	"decimal"	39	0	1	2
4157	749	"res_0"	"decimal"	39	0	0	0
4158	749	"arg_1"	"bigint"	64	0	1	1
4159	749	"arg_2"	"decimal"	39	0	1	2
4160	750	"res_0"	"decimal"	39	0	0	0
4161	750	"arg_1"	"wrd"	64	0	1	1
4162	750	"arg_2"	"decimal"	39	0	1	2
4163	751	"res_0"	"decimal"	39	0	0	0
4164	751	"arg_1"	"hugeint"	128	0	1	1
4165	751	"arg_2"	"decimal"	39	0	1	2
4166	752	"res_0"	"decimal"	39	0	0	0
4167	752	"arg_1"	"decimal"	2	0	1	1
4168	752	"arg_2"	"decimal"	39	0	1	2
4169	753	"res_0"	"decimal"	39	0	0	0
4170	753	"arg_1"	"decimal"	4	0	1	1
4171	753	"arg_2"	"decimal"	39	0	1	2
4172	754	"res_0"	"decimal"	39	0	0	0
4173	754	"arg_1"	"decimal"	9	0	1	1
4174	754	"arg_2"	"decimal"	39	0	1	2
4175	755	"res_0"	"decimal"	39	0	0	0
4176	755	"arg_1"	"decimal"	18	0	1	1
4177	755	"arg_2"	"decimal"	39	0	1	2
4178	756	"res_0"	"decimal"	39	0	0	0
4179	756	"arg_1"	"decimal"	39	0	1	1
4180	756	"arg_2"	"decimal"	39	0	1	2
4181	757	"res_0"	"decimal"	39	0	0	0
4182	757	"arg_1"	"real"	24	0	1	1
4183	757	"arg_2"	"decimal"	39	0	1	2
4184	758	"res_0"	"decimal"	39	0	0	0
4185	758	"arg_1"	"double"	53	0	1	1
4186	758	"arg_2"	"decimal"	39	0	1	2
4187	759	"res_0"	"decimal"	39	0	0	0
4188	759	"arg_1"	"month_interval"	32	0	1	1
4189	759	"arg_2"	"decimal"	39	0	1	2
4190	760	"res_0"	"decimal"	39	0	0	0
4191	760	"arg_1"	"sec_interval"	13	0	1	1
4192	760	"arg_2"	"decimal"	39	0	1	2
4193	761	"res_0"	"decimal"	39	0	0	0
4194	761	"arg_1"	"time"	7	0	1	1
4195	761	"arg_2"	"decimal"	39	0	1	2
4196	762	"res_0"	"decimal"	39	0	0	0
4197	762	"arg_1"	"timetz"	7	0	1	1
4198	762	"arg_2"	"decimal"	39	0	1	2
4199	763	"res_0"	"decimal"	39	0	0	0
4200	763	"arg_1"	"date"	0	0	1	1
4201	763	"arg_2"	"decimal"	39	0	1	2
4202	764	"res_0"	"decimal"	39	0	0	0
4203	764	"arg_1"	"timestamp"	7	0	1	1
4204	764	"arg_2"	"decimal"	39	0	1	2
4205	765	"res_0"	"decimal"	39	0	0	0
4206	765	"arg_1"	"timestamptz"	7	0	1	1
4207	765	"arg_2"	"decimal"	39	0	1	2
4208	766	"res_0"	"decimal"	39	0	0	0
4209	766	"arg_1"	"blob"	0	0	1	1
4210	766	"arg_2"	"decimal"	39	0	1	2
4211	767	"res_0"	"real"	24	0	0	0
4212	767	"arg_1"	"oid"	63	0	1	1
4213	767	"arg_2"	"real"	24	0	1	2
4214	768	"res_0"	"real"	24	0	0	0
4215	768	"arg_1"	"tinyint"	8	0	1	1
4216	768	"arg_2"	"real"	24	0	1	2
4217	769	"res_0"	"real"	24	0	0	0
4218	769	"arg_1"	"smallint"	16	0	1	1
4219	769	"arg_2"	"real"	24	0	1	2
4220	770	"res_0"	"real"	24	0	0	0
4221	770	"arg_1"	"int"	32	0	1	1
4222	770	"arg_2"	"real"	24	0	1	2
4223	771	"res_0"	"real"	24	0	0	0
4224	771	"arg_1"	"bigint"	64	0	1	1
4225	771	"arg_2"	"real"	24	0	1	2
4226	772	"res_0"	"real"	24	0	0	0
4227	772	"arg_1"	"wrd"	64	0	1	1
4228	772	"arg_2"	"real"	24	0	1	2
4229	773	"res_0"	"real"	24	0	0	0
4230	773	"arg_1"	"hugeint"	128	0	1	1
4231	773	"arg_2"	"real"	24	0	1	2
4232	774	"res_0"	"real"	24	0	0	0
4233	774	"arg_1"	"decimal"	2	0	1	1
4234	774	"arg_2"	"real"	24	0	1	2
4235	775	"res_0"	"real"	24	0	0	0
4236	775	"arg_1"	"decimal"	4	0	1	1
4237	775	"arg_2"	"real"	24	0	1	2
4238	776	"res_0"	"real"	24	0	0	0
4239	776	"arg_1"	"decimal"	9	0	1	1
4240	776	"arg_2"	"real"	24	0	1	2
4241	777	"res_0"	"real"	24	0	0	0
4242	777	"arg_1"	"decimal"	18	0	1	1
4243	777	"arg_2"	"real"	24	0	1	2
4244	778	"res_0"	"real"	24	0	0	0
4245	778	"arg_1"	"decimal"	39	0	1	1
4246	778	"arg_2"	"real"	24	0	1	2
4247	779	"res_0"	"real"	24	0	0	0
4248	779	"arg_1"	"real"	24	0	1	1
4249	779	"arg_2"	"real"	24	0	1	2
4250	780	"res_0"	"real"	24	0	0	0
4251	780	"arg_1"	"double"	53	0	1	1
4252	780	"arg_2"	"real"	24	0	1	2
4253	781	"res_0"	"real"	24	0	0	0
4254	781	"arg_1"	"month_interval"	32	0	1	1
4255	781	"arg_2"	"real"	24	0	1	2
4256	782	"res_0"	"real"	24	0	0	0
4257	782	"arg_1"	"sec_interval"	13	0	1	1
4258	782	"arg_2"	"real"	24	0	1	2
4259	783	"res_0"	"real"	24	0	0	0
4260	783	"arg_1"	"time"	7	0	1	1
4261	783	"arg_2"	"real"	24	0	1	2
4262	784	"res_0"	"real"	24	0	0	0
4263	784	"arg_1"	"timetz"	7	0	1	1
4264	784	"arg_2"	"real"	24	0	1	2
4265	785	"res_0"	"real"	24	0	0	0
4266	785	"arg_1"	"date"	0	0	1	1
4267	785	"arg_2"	"real"	24	0	1	2
4268	786	"res_0"	"real"	24	0	0	0
4269	786	"arg_1"	"timestamp"	7	0	1	1
4270	786	"arg_2"	"real"	24	0	1	2
4271	787	"res_0"	"real"	24	0	0	0
4272	787	"arg_1"	"timestamptz"	7	0	1	1
4273	787	"arg_2"	"real"	24	0	1	2
4274	788	"res_0"	"real"	24	0	0	0
4275	788	"arg_1"	"blob"	0	0	1	1
4276	788	"arg_2"	"real"	24	0	1	2
4277	789	"res_0"	"double"	53	0	0	0
4278	789	"arg_1"	"oid"	63	0	1	1
4279	789	"arg_2"	"double"	53	0	1	2
4280	790	"res_0"	"double"	53	0	0	0
4281	790	"arg_1"	"tinyint"	8	0	1	1
4282	790	"arg_2"	"double"	53	0	1	2
4283	791	"res_0"	"double"	53	0	0	0
4284	791	"arg_1"	"smallint"	16	0	1	1
4285	791	"arg_2"	"double"	53	0	1	2
4286	792	"res_0"	"double"	53	0	0	0
4287	792	"arg_1"	"int"	32	0	1	1
4288	792	"arg_2"	"double"	53	0	1	2
4289	793	"res_0"	"double"	53	0	0	0
4290	793	"arg_1"	"bigint"	64	0	1	1
4291	793	"arg_2"	"double"	53	0	1	2
4292	794	"res_0"	"double"	53	0	0	0
4293	794	"arg_1"	"wrd"	64	0	1	1
4294	794	"arg_2"	"double"	53	0	1	2
4295	795	"res_0"	"double"	53	0	0	0
4296	795	"arg_1"	"hugeint"	128	0	1	1
4297	795	"arg_2"	"double"	53	0	1	2
4298	796	"res_0"	"double"	53	0	0	0
4299	796	"arg_1"	"decimal"	2	0	1	1
4300	796	"arg_2"	"double"	53	0	1	2
4301	797	"res_0"	"double"	53	0	0	0
4302	797	"arg_1"	"decimal"	4	0	1	1
4303	797	"arg_2"	"double"	53	0	1	2
4304	798	"res_0"	"double"	53	0	0	0
4305	798	"arg_1"	"decimal"	9	0	1	1
4306	798	"arg_2"	"double"	53	0	1	2
4307	799	"res_0"	"double"	53	0	0	0
4308	799	"arg_1"	"decimal"	18	0	1	1
4309	799	"arg_2"	"double"	53	0	1	2
4310	800	"res_0"	"double"	53	0	0	0
4311	800	"arg_1"	"decimal"	39	0	1	1
4312	800	"arg_2"	"double"	53	0	1	2
4313	801	"res_0"	"double"	53	0	0	0
4314	801	"arg_1"	"real"	24	0	1	1
4315	801	"arg_2"	"double"	53	0	1	2
4316	802	"res_0"	"double"	53	0	0	0
4317	802	"arg_1"	"double"	53	0	1	1
4318	802	"arg_2"	"double"	53	0	1	2
4319	803	"res_0"	"double"	53	0	0	0
4320	803	"arg_1"	"month_interval"	32	0	1	1
4321	803	"arg_2"	"double"	53	0	1	2
4322	804	"res_0"	"double"	53	0	0	0
4323	804	"arg_1"	"sec_interval"	13	0	1	1
4324	804	"arg_2"	"double"	53	0	1	2
4325	805	"res_0"	"double"	53	0	0	0
4326	805	"arg_1"	"time"	7	0	1	1
4327	805	"arg_2"	"double"	53	0	1	2
4328	806	"res_0"	"double"	53	0	0	0
4329	806	"arg_1"	"timetz"	7	0	1	1
4330	806	"arg_2"	"double"	53	0	1	2
4331	807	"res_0"	"double"	53	0	0	0
4332	807	"arg_1"	"date"	0	0	1	1
4333	807	"arg_2"	"double"	53	0	1	2
4334	808	"res_0"	"double"	53	0	0	0
4335	808	"arg_1"	"timestamp"	7	0	1	1
4336	808	"arg_2"	"double"	53	0	1	2
4337	809	"res_0"	"double"	53	0	0	0
4338	809	"arg_1"	"timestamptz"	7	0	1	1
4339	809	"arg_2"	"double"	53	0	1	2
4340	810	"res_0"	"double"	53	0	0	0
4341	810	"arg_1"	"blob"	0	0	1	1
4342	810	"arg_2"	"double"	53	0	1	2
4343	811	"res_0"	"month_interval"	32	0	0	0
4344	811	"arg_1"	"oid"	63	0	1	1
4345	811	"arg_2"	"month_interval"	32	0	1	2
4346	812	"res_0"	"month_interval"	32	0	0	0
4347	812	"arg_1"	"tinyint"	8	0	1	1
4348	812	"arg_2"	"month_interval"	32	0	1	2
4349	813	"res_0"	"month_interval"	32	0	0	0
4350	813	"arg_1"	"smallint"	16	0	1	1
4351	813	"arg_2"	"month_interval"	32	0	1	2
4352	814	"res_0"	"month_interval"	32	0	0	0
4353	814	"arg_1"	"int"	32	0	1	1
4354	814	"arg_2"	"month_interval"	32	0	1	2
4355	815	"res_0"	"month_interval"	32	0	0	0
4356	815	"arg_1"	"bigint"	64	0	1	1
4357	815	"arg_2"	"month_interval"	32	0	1	2
4358	816	"res_0"	"month_interval"	32	0	0	0
4359	816	"arg_1"	"wrd"	64	0	1	1
4360	816	"arg_2"	"month_interval"	32	0	1	2
4361	817	"res_0"	"month_interval"	32	0	0	0
4362	817	"arg_1"	"hugeint"	128	0	1	1
4363	817	"arg_2"	"month_interval"	32	0	1	2
4364	818	"res_0"	"month_interval"	32	0	0	0
4365	818	"arg_1"	"decimal"	2	0	1	1
4366	818	"arg_2"	"month_interval"	32	0	1	2
4367	819	"res_0"	"month_interval"	32	0	0	0
4368	819	"arg_1"	"decimal"	4	0	1	1
4369	819	"arg_2"	"month_interval"	32	0	1	2
4370	820	"res_0"	"month_interval"	32	0	0	0
4371	820	"arg_1"	"decimal"	9	0	1	1
4372	820	"arg_2"	"month_interval"	32	0	1	2
4373	821	"res_0"	"month_interval"	32	0	0	0
4374	821	"arg_1"	"decimal"	18	0	1	1
4375	821	"arg_2"	"month_interval"	32	0	1	2
4376	822	"res_0"	"month_interval"	32	0	0	0
4377	822	"arg_1"	"decimal"	39	0	1	1
4378	822	"arg_2"	"month_interval"	32	0	1	2
4379	823	"res_0"	"month_interval"	32	0	0	0
4380	823	"arg_1"	"real"	24	0	1	1
4381	823	"arg_2"	"month_interval"	32	0	1	2
4382	824	"res_0"	"month_interval"	32	0	0	0
4383	824	"arg_1"	"double"	53	0	1	1
4384	824	"arg_2"	"month_interval"	32	0	1	2
4385	825	"res_0"	"month_interval"	32	0	0	0
4386	825	"arg_1"	"month_interval"	32	0	1	1
4387	825	"arg_2"	"month_interval"	32	0	1	2
4388	826	"res_0"	"month_interval"	32	0	0	0
4389	826	"arg_1"	"sec_interval"	13	0	1	1
4390	826	"arg_2"	"month_interval"	32	0	1	2
4391	827	"res_0"	"month_interval"	32	0	0	0
4392	827	"arg_1"	"time"	7	0	1	1
4393	827	"arg_2"	"month_interval"	32	0	1	2
4394	828	"res_0"	"month_interval"	32	0	0	0
4395	828	"arg_1"	"timetz"	7	0	1	1
4396	828	"arg_2"	"month_interval"	32	0	1	2
4397	829	"res_0"	"month_interval"	32	0	0	0
4398	829	"arg_1"	"date"	0	0	1	1
4399	829	"arg_2"	"month_interval"	32	0	1	2
4400	830	"res_0"	"month_interval"	32	0	0	0
4401	830	"arg_1"	"timestamp"	7	0	1	1
4402	830	"arg_2"	"month_interval"	32	0	1	2
4403	831	"res_0"	"month_interval"	32	0	0	0
4404	831	"arg_1"	"timestamptz"	7	0	1	1
4405	831	"arg_2"	"month_interval"	32	0	1	2
4406	832	"res_0"	"month_interval"	32	0	0	0
4407	832	"arg_1"	"blob"	0	0	1	1
4408	832	"arg_2"	"month_interval"	32	0	1	2
4409	833	"res_0"	"sec_interval"	13	0	0	0
4410	833	"arg_1"	"oid"	63	0	1	1
4411	833	"arg_2"	"sec_interval"	13	0	1	2
4412	834	"res_0"	"sec_interval"	13	0	0	0
4413	834	"arg_1"	"tinyint"	8	0	1	1
4414	834	"arg_2"	"sec_interval"	13	0	1	2
4415	835	"res_0"	"sec_interval"	13	0	0	0
4416	835	"arg_1"	"smallint"	16	0	1	1
4417	835	"arg_2"	"sec_interval"	13	0	1	2
4418	836	"res_0"	"sec_interval"	13	0	0	0
4419	836	"arg_1"	"int"	32	0	1	1
4420	836	"arg_2"	"sec_interval"	13	0	1	2
4421	837	"res_0"	"sec_interval"	13	0	0	0
4422	837	"arg_1"	"bigint"	64	0	1	1
4423	837	"arg_2"	"sec_interval"	13	0	1	2
4424	838	"res_0"	"sec_interval"	13	0	0	0
4425	838	"arg_1"	"wrd"	64	0	1	1
4426	838	"arg_2"	"sec_interval"	13	0	1	2
4427	839	"res_0"	"sec_interval"	13	0	0	0
4428	839	"arg_1"	"hugeint"	128	0	1	1
4429	839	"arg_2"	"sec_interval"	13	0	1	2
4430	840	"res_0"	"sec_interval"	13	0	0	0
4431	840	"arg_1"	"decimal"	2	0	1	1
4432	840	"arg_2"	"sec_interval"	13	0	1	2
4433	841	"res_0"	"sec_interval"	13	0	0	0
4434	841	"arg_1"	"decimal"	4	0	1	1
4435	841	"arg_2"	"sec_interval"	13	0	1	2
4436	842	"res_0"	"sec_interval"	13	0	0	0
4437	842	"arg_1"	"decimal"	9	0	1	1
4438	842	"arg_2"	"sec_interval"	13	0	1	2
4439	843	"res_0"	"sec_interval"	13	0	0	0
4440	843	"arg_1"	"decimal"	18	0	1	1
4441	843	"arg_2"	"sec_interval"	13	0	1	2
4442	844	"res_0"	"sec_interval"	13	0	0	0
4443	844	"arg_1"	"decimal"	39	0	1	1
4444	844	"arg_2"	"sec_interval"	13	0	1	2
4445	845	"res_0"	"sec_interval"	13	0	0	0
4446	845	"arg_1"	"real"	24	0	1	1
4447	845	"arg_2"	"sec_interval"	13	0	1	2
4448	846	"res_0"	"sec_interval"	13	0	0	0
4449	846	"arg_1"	"double"	53	0	1	1
4450	846	"arg_2"	"sec_interval"	13	0	1	2
4451	847	"res_0"	"sec_interval"	13	0	0	0
4452	847	"arg_1"	"month_interval"	32	0	1	1
4453	847	"arg_2"	"sec_interval"	13	0	1	2
4454	848	"res_0"	"sec_interval"	13	0	0	0
4455	848	"arg_1"	"sec_interval"	13	0	1	1
4456	848	"arg_2"	"sec_interval"	13	0	1	2
4457	849	"res_0"	"sec_interval"	13	0	0	0
4458	849	"arg_1"	"time"	7	0	1	1
4459	849	"arg_2"	"sec_interval"	13	0	1	2
4460	850	"res_0"	"sec_interval"	13	0	0	0
4461	850	"arg_1"	"timetz"	7	0	1	1
4462	850	"arg_2"	"sec_interval"	13	0	1	2
4463	851	"res_0"	"sec_interval"	13	0	0	0
4464	851	"arg_1"	"date"	0	0	1	1
4465	851	"arg_2"	"sec_interval"	13	0	1	2
4466	852	"res_0"	"sec_interval"	13	0	0	0
4467	852	"arg_1"	"timestamp"	7	0	1	1
4468	852	"arg_2"	"sec_interval"	13	0	1	2
4469	853	"res_0"	"sec_interval"	13	0	0	0
4470	853	"arg_1"	"timestamptz"	7	0	1	1
4471	853	"arg_2"	"sec_interval"	13	0	1	2
4472	854	"res_0"	"sec_interval"	13	0	0	0
4473	854	"arg_1"	"blob"	0	0	1	1
4474	854	"arg_2"	"sec_interval"	13	0	1	2
4475	855	"res_0"	"time"	7	0	0	0
4476	855	"arg_1"	"oid"	63	0	1	1
4477	855	"arg_2"	"time"	7	0	1	2
4478	856	"res_0"	"time"	7	0	0	0
4479	856	"arg_1"	"tinyint"	8	0	1	1
4480	856	"arg_2"	"time"	7	0	1	2
4481	857	"res_0"	"time"	7	0	0	0
4482	857	"arg_1"	"smallint"	16	0	1	1
4483	857	"arg_2"	"time"	7	0	1	2
4484	858	"res_0"	"time"	7	0	0	0
4485	858	"arg_1"	"int"	32	0	1	1
4486	858	"arg_2"	"time"	7	0	1	2
4487	859	"res_0"	"time"	7	0	0	0
4488	859	"arg_1"	"bigint"	64	0	1	1
4489	859	"arg_2"	"time"	7	0	1	2
4490	860	"res_0"	"time"	7	0	0	0
4491	860	"arg_1"	"wrd"	64	0	1	1
4492	860	"arg_2"	"time"	7	0	1	2
4493	861	"res_0"	"time"	7	0	0	0
4494	861	"arg_1"	"hugeint"	128	0	1	1
4495	861	"arg_2"	"time"	7	0	1	2
4496	862	"res_0"	"time"	7	0	0	0
4497	862	"arg_1"	"decimal"	2	0	1	1
4498	862	"arg_2"	"time"	7	0	1	2
4499	863	"res_0"	"time"	7	0	0	0
4500	863	"arg_1"	"decimal"	4	0	1	1
4501	863	"arg_2"	"time"	7	0	1	2
4502	864	"res_0"	"time"	7	0	0	0
4503	864	"arg_1"	"decimal"	9	0	1	1
4504	864	"arg_2"	"time"	7	0	1	2
4505	865	"res_0"	"time"	7	0	0	0
4506	865	"arg_1"	"decimal"	18	0	1	1
4507	865	"arg_2"	"time"	7	0	1	2
4508	866	"res_0"	"time"	7	0	0	0
4509	866	"arg_1"	"decimal"	39	0	1	1
4510	866	"arg_2"	"time"	7	0	1	2
4511	867	"res_0"	"time"	7	0	0	0
4512	867	"arg_1"	"real"	24	0	1	1
4513	867	"arg_2"	"time"	7	0	1	2
4514	868	"res_0"	"time"	7	0	0	0
4515	868	"arg_1"	"double"	53	0	1	1
4516	868	"arg_2"	"time"	7	0	1	2
4517	869	"res_0"	"time"	7	0	0	0
4518	869	"arg_1"	"month_interval"	32	0	1	1
4519	869	"arg_2"	"time"	7	0	1	2
4520	870	"res_0"	"time"	7	0	0	0
4521	870	"arg_1"	"sec_interval"	13	0	1	1
4522	870	"arg_2"	"time"	7	0	1	2
4523	871	"res_0"	"time"	7	0	0	0
4524	871	"arg_1"	"time"	7	0	1	1
4525	871	"arg_2"	"time"	7	0	1	2
4526	872	"res_0"	"time"	7	0	0	0
4527	872	"arg_1"	"timetz"	7	0	1	1
4528	872	"arg_2"	"time"	7	0	1	2
4529	873	"res_0"	"time"	7	0	0	0
4530	873	"arg_1"	"date"	0	0	1	1
4531	873	"arg_2"	"time"	7	0	1	2
4532	874	"res_0"	"time"	7	0	0	0
4533	874	"arg_1"	"timestamp"	7	0	1	1
4534	874	"arg_2"	"time"	7	0	1	2
4535	875	"res_0"	"time"	7	0	0	0
4536	875	"arg_1"	"timestamptz"	7	0	1	1
4537	875	"arg_2"	"time"	7	0	1	2
4538	876	"res_0"	"time"	7	0	0	0
4539	876	"arg_1"	"blob"	0	0	1	1
4540	876	"arg_2"	"time"	7	0	1	2
4541	877	"res_0"	"timetz"	7	0	0	0
4542	877	"arg_1"	"oid"	63	0	1	1
4543	877	"arg_2"	"timetz"	7	0	1	2
4544	878	"res_0"	"timetz"	7	0	0	0
4545	878	"arg_1"	"tinyint"	8	0	1	1
4546	878	"arg_2"	"timetz"	7	0	1	2
4547	879	"res_0"	"timetz"	7	0	0	0
4548	879	"arg_1"	"smallint"	16	0	1	1
4549	879	"arg_2"	"timetz"	7	0	1	2
4550	880	"res_0"	"timetz"	7	0	0	0
4551	880	"arg_1"	"int"	32	0	1	1
4552	880	"arg_2"	"timetz"	7	0	1	2
4553	881	"res_0"	"timetz"	7	0	0	0
4554	881	"arg_1"	"bigint"	64	0	1	1
4555	881	"arg_2"	"timetz"	7	0	1	2
4556	882	"res_0"	"timetz"	7	0	0	0
4557	882	"arg_1"	"wrd"	64	0	1	1
4558	882	"arg_2"	"timetz"	7	0	1	2
4559	883	"res_0"	"timetz"	7	0	0	0
4560	883	"arg_1"	"hugeint"	128	0	1	1
4561	883	"arg_2"	"timetz"	7	0	1	2
4562	884	"res_0"	"timetz"	7	0	0	0
4563	884	"arg_1"	"decimal"	2	0	1	1
4564	884	"arg_2"	"timetz"	7	0	1	2
4565	885	"res_0"	"timetz"	7	0	0	0
4566	885	"arg_1"	"decimal"	4	0	1	1
4567	885	"arg_2"	"timetz"	7	0	1	2
4568	886	"res_0"	"timetz"	7	0	0	0
4569	886	"arg_1"	"decimal"	9	0	1	1
4570	886	"arg_2"	"timetz"	7	0	1	2
4571	887	"res_0"	"timetz"	7	0	0	0
4572	887	"arg_1"	"decimal"	18	0	1	1
4573	887	"arg_2"	"timetz"	7	0	1	2
4574	888	"res_0"	"timetz"	7	0	0	0
4575	888	"arg_1"	"decimal"	39	0	1	1
4576	888	"arg_2"	"timetz"	7	0	1	2
4577	889	"res_0"	"timetz"	7	0	0	0
4578	889	"arg_1"	"real"	24	0	1	1
4579	889	"arg_2"	"timetz"	7	0	1	2
4580	890	"res_0"	"timetz"	7	0	0	0
4581	890	"arg_1"	"double"	53	0	1	1
4582	890	"arg_2"	"timetz"	7	0	1	2
4583	891	"res_0"	"timetz"	7	0	0	0
4584	891	"arg_1"	"month_interval"	32	0	1	1
4585	891	"arg_2"	"timetz"	7	0	1	2
4586	892	"res_0"	"timetz"	7	0	0	0
4587	892	"arg_1"	"sec_interval"	13	0	1	1
4588	892	"arg_2"	"timetz"	7	0	1	2
4589	893	"res_0"	"timetz"	7	0	0	0
4590	893	"arg_1"	"time"	7	0	1	1
4591	893	"arg_2"	"timetz"	7	0	1	2
4592	894	"res_0"	"timetz"	7	0	0	0
4593	894	"arg_1"	"timetz"	7	0	1	1
4594	894	"arg_2"	"timetz"	7	0	1	2
4595	895	"res_0"	"timetz"	7	0	0	0
4596	895	"arg_1"	"date"	0	0	1	1
4597	895	"arg_2"	"timetz"	7	0	1	2
4598	896	"res_0"	"timetz"	7	0	0	0
4599	896	"arg_1"	"timestamp"	7	0	1	1
4600	896	"arg_2"	"timetz"	7	0	1	2
4601	897	"res_0"	"timetz"	7	0	0	0
4602	897	"arg_1"	"timestamptz"	7	0	1	1
4603	897	"arg_2"	"timetz"	7	0	1	2
4604	898	"res_0"	"timetz"	7	0	0	0
4605	898	"arg_1"	"blob"	0	0	1	1
4606	898	"arg_2"	"timetz"	7	0	1	2
4607	899	"res_0"	"date"	0	0	0	0
4608	899	"arg_1"	"oid"	63	0	1	1
4609	899	"arg_2"	"date"	0	0	1	2
4610	900	"res_0"	"date"	0	0	0	0
4611	900	"arg_1"	"tinyint"	8	0	1	1
4612	900	"arg_2"	"date"	0	0	1	2
4613	901	"res_0"	"date"	0	0	0	0
4614	901	"arg_1"	"smallint"	16	0	1	1
4615	901	"arg_2"	"date"	0	0	1	2
4616	902	"res_0"	"date"	0	0	0	0
4617	902	"arg_1"	"int"	32	0	1	1
4618	902	"arg_2"	"date"	0	0	1	2
4619	903	"res_0"	"date"	0	0	0	0
4620	903	"arg_1"	"bigint"	64	0	1	1
4621	903	"arg_2"	"date"	0	0	1	2
4622	904	"res_0"	"date"	0	0	0	0
4623	904	"arg_1"	"wrd"	64	0	1	1
4624	904	"arg_2"	"date"	0	0	1	2
4625	905	"res_0"	"date"	0	0	0	0
4626	905	"arg_1"	"hugeint"	128	0	1	1
4627	905	"arg_2"	"date"	0	0	1	2
4628	906	"res_0"	"date"	0	0	0	0
4629	906	"arg_1"	"decimal"	2	0	1	1
4630	906	"arg_2"	"date"	0	0	1	2
4631	907	"res_0"	"date"	0	0	0	0
4632	907	"arg_1"	"decimal"	4	0	1	1
4633	907	"arg_2"	"date"	0	0	1	2
4634	908	"res_0"	"date"	0	0	0	0
4635	908	"arg_1"	"decimal"	9	0	1	1
4636	908	"arg_2"	"date"	0	0	1	2
4637	909	"res_0"	"date"	0	0	0	0
4638	909	"arg_1"	"decimal"	18	0	1	1
4639	909	"arg_2"	"date"	0	0	1	2
4640	910	"res_0"	"date"	0	0	0	0
4641	910	"arg_1"	"decimal"	39	0	1	1
4642	910	"arg_2"	"date"	0	0	1	2
4643	911	"res_0"	"date"	0	0	0	0
4644	911	"arg_1"	"real"	24	0	1	1
4645	911	"arg_2"	"date"	0	0	1	2
4646	912	"res_0"	"date"	0	0	0	0
4647	912	"arg_1"	"double"	53	0	1	1
4648	912	"arg_2"	"date"	0	0	1	2
4649	913	"res_0"	"date"	0	0	0	0
4650	913	"arg_1"	"month_interval"	32	0	1	1
4651	913	"arg_2"	"date"	0	0	1	2
4652	914	"res_0"	"date"	0	0	0	0
4653	914	"arg_1"	"sec_interval"	13	0	1	1
4654	914	"arg_2"	"date"	0	0	1	2
4655	915	"res_0"	"date"	0	0	0	0
4656	915	"arg_1"	"time"	7	0	1	1
4657	915	"arg_2"	"date"	0	0	1	2
4658	916	"res_0"	"date"	0	0	0	0
4659	916	"arg_1"	"timetz"	7	0	1	1
4660	916	"arg_2"	"date"	0	0	1	2
4661	917	"res_0"	"date"	0	0	0	0
4662	917	"arg_1"	"date"	0	0	1	1
4663	917	"arg_2"	"date"	0	0	1	2
4664	918	"res_0"	"date"	0	0	0	0
4665	918	"arg_1"	"timestamp"	7	0	1	1
4666	918	"arg_2"	"date"	0	0	1	2
4667	919	"res_0"	"date"	0	0	0	0
4668	919	"arg_1"	"timestamptz"	7	0	1	1
4669	919	"arg_2"	"date"	0	0	1	2
4670	920	"res_0"	"date"	0	0	0	0
4671	920	"arg_1"	"blob"	0	0	1	1
4672	920	"arg_2"	"date"	0	0	1	2
4673	921	"res_0"	"timestamp"	7	0	0	0
4674	921	"arg_1"	"oid"	63	0	1	1
4675	921	"arg_2"	"timestamp"	7	0	1	2
4676	922	"res_0"	"timestamp"	7	0	0	0
4677	922	"arg_1"	"tinyint"	8	0	1	1
4678	922	"arg_2"	"timestamp"	7	0	1	2
4679	923	"res_0"	"timestamp"	7	0	0	0
4680	923	"arg_1"	"smallint"	16	0	1	1
4681	923	"arg_2"	"timestamp"	7	0	1	2
4682	924	"res_0"	"timestamp"	7	0	0	0
4683	924	"arg_1"	"int"	32	0	1	1
4684	924	"arg_2"	"timestamp"	7	0	1	2
4685	925	"res_0"	"timestamp"	7	0	0	0
4686	925	"arg_1"	"bigint"	64	0	1	1
4687	925	"arg_2"	"timestamp"	7	0	1	2
4688	926	"res_0"	"timestamp"	7	0	0	0
4689	926	"arg_1"	"wrd"	64	0	1	1
4690	926	"arg_2"	"timestamp"	7	0	1	2
4691	927	"res_0"	"timestamp"	7	0	0	0
4692	927	"arg_1"	"hugeint"	128	0	1	1
4693	927	"arg_2"	"timestamp"	7	0	1	2
4694	928	"res_0"	"timestamp"	7	0	0	0
4695	928	"arg_1"	"decimal"	2	0	1	1
4696	928	"arg_2"	"timestamp"	7	0	1	2
4697	929	"res_0"	"timestamp"	7	0	0	0
4698	929	"arg_1"	"decimal"	4	0	1	1
4699	929	"arg_2"	"timestamp"	7	0	1	2
4700	930	"res_0"	"timestamp"	7	0	0	0
4701	930	"arg_1"	"decimal"	9	0	1	1
4702	930	"arg_2"	"timestamp"	7	0	1	2
4703	931	"res_0"	"timestamp"	7	0	0	0
4704	931	"arg_1"	"decimal"	18	0	1	1
4705	931	"arg_2"	"timestamp"	7	0	1	2
4706	932	"res_0"	"timestamp"	7	0	0	0
4707	932	"arg_1"	"decimal"	39	0	1	1
4708	932	"arg_2"	"timestamp"	7	0	1	2
4709	933	"res_0"	"timestamp"	7	0	0	0
4710	933	"arg_1"	"real"	24	0	1	1
4711	933	"arg_2"	"timestamp"	7	0	1	2
4712	934	"res_0"	"timestamp"	7	0	0	0
4713	934	"arg_1"	"double"	53	0	1	1
4714	934	"arg_2"	"timestamp"	7	0	1	2
4715	935	"res_0"	"timestamp"	7	0	0	0
4716	935	"arg_1"	"month_interval"	32	0	1	1
4717	935	"arg_2"	"timestamp"	7	0	1	2
4718	936	"res_0"	"timestamp"	7	0	0	0
4719	936	"arg_1"	"sec_interval"	13	0	1	1
4720	936	"arg_2"	"timestamp"	7	0	1	2
4721	937	"res_0"	"timestamp"	7	0	0	0
4722	937	"arg_1"	"time"	7	0	1	1
4723	937	"arg_2"	"timestamp"	7	0	1	2
4724	938	"res_0"	"timestamp"	7	0	0	0
4725	938	"arg_1"	"timetz"	7	0	1	1
4726	938	"arg_2"	"timestamp"	7	0	1	2
4727	939	"res_0"	"timestamp"	7	0	0	0
4728	939	"arg_1"	"date"	0	0	1	1
4729	939	"arg_2"	"timestamp"	7	0	1	2
4730	940	"res_0"	"timestamp"	7	0	0	0
4731	940	"arg_1"	"timestamp"	7	0	1	1
4732	940	"arg_2"	"timestamp"	7	0	1	2
4733	941	"res_0"	"timestamp"	7	0	0	0
4734	941	"arg_1"	"timestamptz"	7	0	1	1
4735	941	"arg_2"	"timestamp"	7	0	1	2
4736	942	"res_0"	"timestamp"	7	0	0	0
4737	942	"arg_1"	"blob"	0	0	1	1
4738	942	"arg_2"	"timestamp"	7	0	1	2
4739	943	"res_0"	"timestamptz"	7	0	0	0
4740	943	"arg_1"	"oid"	63	0	1	1
4741	943	"arg_2"	"timestamptz"	7	0	1	2
4742	944	"res_0"	"timestamptz"	7	0	0	0
4743	944	"arg_1"	"tinyint"	8	0	1	1
4744	944	"arg_2"	"timestamptz"	7	0	1	2
4745	945	"res_0"	"timestamptz"	7	0	0	0
4746	945	"arg_1"	"smallint"	16	0	1	1
4747	945	"arg_2"	"timestamptz"	7	0	1	2
4748	946	"res_0"	"timestamptz"	7	0	0	0
4749	946	"arg_1"	"int"	32	0	1	1
4750	946	"arg_2"	"timestamptz"	7	0	1	2
4751	947	"res_0"	"timestamptz"	7	0	0	0
4752	947	"arg_1"	"bigint"	64	0	1	1
4753	947	"arg_2"	"timestamptz"	7	0	1	2
4754	948	"res_0"	"timestamptz"	7	0	0	0
4755	948	"arg_1"	"wrd"	64	0	1	1
4756	948	"arg_2"	"timestamptz"	7	0	1	2
4757	949	"res_0"	"timestamptz"	7	0	0	0
4758	949	"arg_1"	"hugeint"	128	0	1	1
4759	949	"arg_2"	"timestamptz"	7	0	1	2
4760	950	"res_0"	"timestamptz"	7	0	0	0
4761	950	"arg_1"	"decimal"	2	0	1	1
4762	950	"arg_2"	"timestamptz"	7	0	1	2
4763	951	"res_0"	"timestamptz"	7	0	0	0
4764	951	"arg_1"	"decimal"	4	0	1	1
4765	951	"arg_2"	"timestamptz"	7	0	1	2
4766	952	"res_0"	"timestamptz"	7	0	0	0
4767	952	"arg_1"	"decimal"	9	0	1	1
4768	952	"arg_2"	"timestamptz"	7	0	1	2
4769	953	"res_0"	"timestamptz"	7	0	0	0
4770	953	"arg_1"	"decimal"	18	0	1	1
4771	953	"arg_2"	"timestamptz"	7	0	1	2
4772	954	"res_0"	"timestamptz"	7	0	0	0
4773	954	"arg_1"	"decimal"	39	0	1	1
4774	954	"arg_2"	"timestamptz"	7	0	1	2
4775	955	"res_0"	"timestamptz"	7	0	0	0
4776	955	"arg_1"	"real"	24	0	1	1
4777	955	"arg_2"	"timestamptz"	7	0	1	2
4778	956	"res_0"	"timestamptz"	7	0	0	0
4779	956	"arg_1"	"double"	53	0	1	1
4780	956	"arg_2"	"timestamptz"	7	0	1	2
4781	957	"res_0"	"timestamptz"	7	0	0	0
4782	957	"arg_1"	"month_interval"	32	0	1	1
4783	957	"arg_2"	"timestamptz"	7	0	1	2
4784	958	"res_0"	"timestamptz"	7	0	0	0
4785	958	"arg_1"	"sec_interval"	13	0	1	1
4786	958	"arg_2"	"timestamptz"	7	0	1	2
4787	959	"res_0"	"timestamptz"	7	0	0	0
4788	959	"arg_1"	"time"	7	0	1	1
4789	959	"arg_2"	"timestamptz"	7	0	1	2
4790	960	"res_0"	"timestamptz"	7	0	0	0
4791	960	"arg_1"	"timetz"	7	0	1	1
4792	960	"arg_2"	"timestamptz"	7	0	1	2
4793	961	"res_0"	"timestamptz"	7	0	0	0
4794	961	"arg_1"	"date"	0	0	1	1
4795	961	"arg_2"	"timestamptz"	7	0	1	2
4796	962	"res_0"	"timestamptz"	7	0	0	0
4797	962	"arg_1"	"timestamp"	7	0	1	1
4798	962	"arg_2"	"timestamptz"	7	0	1	2
4799	963	"res_0"	"timestamptz"	7	0	0	0
4800	963	"arg_1"	"timestamptz"	7	0	1	1
4801	963	"arg_2"	"timestamptz"	7	0	1	2
4802	964	"res_0"	"timestamptz"	7	0	0	0
4803	964	"arg_1"	"blob"	0	0	1	1
4804	964	"arg_2"	"timestamptz"	7	0	1	2
4805	965	"res_0"	"blob"	0	0	0	0
4806	965	"arg_1"	"oid"	63	0	1	1
4807	965	"arg_2"	"blob"	0	0	1	2
4808	966	"res_0"	"blob"	0	0	0	0
4809	966	"arg_1"	"tinyint"	8	0	1	1
4810	966	"arg_2"	"blob"	0	0	1	2
4811	967	"res_0"	"blob"	0	0	0	0
4812	967	"arg_1"	"smallint"	16	0	1	1
4813	967	"arg_2"	"blob"	0	0	1	2
4814	968	"res_0"	"blob"	0	0	0	0
4815	968	"arg_1"	"int"	32	0	1	1
4816	968	"arg_2"	"blob"	0	0	1	2
4817	969	"res_0"	"blob"	0	0	0	0
4818	969	"arg_1"	"bigint"	64	0	1	1
4819	969	"arg_2"	"blob"	0	0	1	2
4820	970	"res_0"	"blob"	0	0	0	0
4821	970	"arg_1"	"wrd"	64	0	1	1
4822	970	"arg_2"	"blob"	0	0	1	2
4823	971	"res_0"	"blob"	0	0	0	0
4824	971	"arg_1"	"hugeint"	128	0	1	1
4825	971	"arg_2"	"blob"	0	0	1	2
4826	972	"res_0"	"blob"	0	0	0	0
4827	972	"arg_1"	"decimal"	2	0	1	1
4828	972	"arg_2"	"blob"	0	0	1	2
4829	973	"res_0"	"blob"	0	0	0	0
4830	973	"arg_1"	"decimal"	4	0	1	1
4831	973	"arg_2"	"blob"	0	0	1	2
4832	974	"res_0"	"blob"	0	0	0	0
4833	974	"arg_1"	"decimal"	9	0	1	1
4834	974	"arg_2"	"blob"	0	0	1	2
4835	975	"res_0"	"blob"	0	0	0	0
4836	975	"arg_1"	"decimal"	18	0	1	1
4837	975	"arg_2"	"blob"	0	0	1	2
4838	976	"res_0"	"blob"	0	0	0	0
4839	976	"arg_1"	"decimal"	39	0	1	1
4840	976	"arg_2"	"blob"	0	0	1	2
4841	977	"res_0"	"blob"	0	0	0	0
4842	977	"arg_1"	"real"	24	0	1	1
4843	977	"arg_2"	"blob"	0	0	1	2
4844	978	"res_0"	"blob"	0	0	0	0
4845	978	"arg_1"	"double"	53	0	1	1
4846	978	"arg_2"	"blob"	0	0	1	2
4847	979	"res_0"	"blob"	0	0	0	0
4848	979	"arg_1"	"month_interval"	32	0	1	1
4849	979	"arg_2"	"blob"	0	0	1	2
4850	980	"res_0"	"blob"	0	0	0	0
4851	980	"arg_1"	"sec_interval"	13	0	1	1
4852	980	"arg_2"	"blob"	0	0	1	2
4853	981	"res_0"	"blob"	0	0	0	0
4854	981	"arg_1"	"time"	7	0	1	1
4855	981	"arg_2"	"blob"	0	0	1	2
4856	982	"res_0"	"blob"	0	0	0	0
4857	982	"arg_1"	"timetz"	7	0	1	1
4858	982	"arg_2"	"blob"	0	0	1	2
4859	983	"res_0"	"blob"	0	0	0	0
4860	983	"arg_1"	"date"	0	0	1	1
4861	983	"arg_2"	"blob"	0	0	1	2
4862	984	"res_0"	"blob"	0	0	0	0
4863	984	"arg_1"	"timestamp"	7	0	1	1
4864	984	"arg_2"	"blob"	0	0	1	2
4865	985	"res_0"	"blob"	0	0	0	0
4866	985	"arg_1"	"timestamptz"	7	0	1	1
4867	985	"arg_2"	"blob"	0	0	1	2
4868	986	"res_0"	"blob"	0	0	0	0
4869	986	"arg_1"	"blob"	0	0	1	1
4870	986	"arg_2"	"blob"	0	0	1	2
4871	987	"res_0"	"real"	24	0	0	0
4872	987	"arg_1"	"real"	24	0	1	1
4873	987	"arg_2"	"real"	24	0	1	2
4874	988	"res_0"	"real"	24	0	0	0
4875	988	"arg_1"	"real"	24	0	1	1
4876	989	"res_0"	"real"	24	0	0	0
4877	989	"arg_1"	"real"	24	0	1	1
4878	990	"res_0"	"real"	24	0	0	0
4879	990	"arg_1"	"real"	24	0	1	1
4880	991	"res_0"	"real"	24	0	0	0
4881	991	"arg_1"	"real"	24	0	1	1
4882	992	"res_0"	"real"	24	0	0	0
4883	992	"arg_1"	"real"	24	0	1	1
4884	993	"res_0"	"real"	24	0	0	0
4885	993	"arg_1"	"real"	24	0	1	1
4886	994	"res_0"	"real"	24	0	0	0
4887	994	"arg_1"	"real"	24	0	1	1
4888	995	"res_0"	"real"	24	0	0	0
4889	995	"arg_1"	"real"	24	0	1	1
4890	996	"res_0"	"real"	24	0	0	0
4891	996	"arg_1"	"real"	24	0	1	1
4892	997	"res_0"	"real"	24	0	0	0
4893	997	"arg_1"	"real"	24	0	1	1
4894	997	"arg_2"	"real"	24	0	1	2
4895	998	"res_0"	"real"	24	0	0	0
4896	998	"arg_1"	"real"	24	0	1	1
4897	999	"res_0"	"real"	24	0	0	0
4898	999	"arg_1"	"real"	24	0	1	1
4899	1000	"res_0"	"real"	24	0	0	0
4900	1000	"arg_1"	"real"	24	0	1	1
4901	1001	"res_0"	"real"	24	0	0	0
4902	1001	"arg_1"	"real"	24	0	1	1
4903	1002	"res_0"	"real"	24	0	0	0
4904	1002	"arg_1"	"real"	24	0	1	1
4905	1003	"res_0"	"real"	24	0	0	0
4906	1003	"arg_1"	"real"	24	0	1	1
4907	1004	"res_0"	"real"	24	0	0	0
4908	1004	"arg_1"	"real"	24	0	1	1
4909	1005	"res_0"	"real"	24	0	0	0
4910	1005	"arg_1"	"real"	24	0	1	1
4911	1006	"res_0"	"double"	53	0	0	0
4912	1006	"arg_1"	"double"	53	0	1	1
4913	1006	"arg_2"	"double"	53	0	1	2
4914	1007	"res_0"	"double"	53	0	0	0
4915	1007	"arg_1"	"double"	53	0	1	1
4916	1008	"res_0"	"double"	53	0	0	0
4917	1008	"arg_1"	"double"	53	0	1	1
4918	1009	"res_0"	"double"	53	0	0	0
4919	1009	"arg_1"	"double"	53	0	1	1
4920	1010	"res_0"	"double"	53	0	0	0
4921	1010	"arg_1"	"double"	53	0	1	1
4922	1011	"res_0"	"double"	53	0	0	0
4923	1011	"arg_1"	"double"	53	0	1	1
4924	1012	"res_0"	"double"	53	0	0	0
4925	1012	"arg_1"	"double"	53	0	1	1
4926	1013	"res_0"	"double"	53	0	0	0
4927	1013	"arg_1"	"double"	53	0	1	1
4928	1014	"res_0"	"double"	53	0	0	0
4929	1014	"arg_1"	"double"	53	0	1	1
4930	1015	"res_0"	"double"	53	0	0	0
4931	1015	"arg_1"	"double"	53	0	1	1
4932	1016	"res_0"	"double"	53	0	0	0
4933	1016	"arg_1"	"double"	53	0	1	1
4934	1016	"arg_2"	"double"	53	0	1	2
4935	1017	"res_0"	"double"	53	0	0	0
4936	1017	"arg_1"	"double"	53	0	1	1
4937	1018	"res_0"	"double"	53	0	0	0
4938	1018	"arg_1"	"double"	53	0	1	1
4939	1019	"res_0"	"double"	53	0	0	0
4940	1019	"arg_1"	"double"	53	0	1	1
4941	1020	"res_0"	"double"	53	0	0	0
4942	1020	"arg_1"	"double"	53	0	1	1
4943	1021	"res_0"	"double"	53	0	0	0
4944	1021	"arg_1"	"double"	53	0	1	1
4945	1022	"res_0"	"double"	53	0	0	0
4946	1022	"arg_1"	"double"	53	0	1	1
4947	1023	"res_0"	"double"	53	0	0	0
4948	1023	"arg_1"	"double"	53	0	1	1
4949	1024	"res_0"	"double"	53	0	0	0
4950	1024	"arg_1"	"double"	53	0	1	1
4951	1025	"res_0"	"double"	53	0	0	0
4952	1026	"res_0"	"int"	32	0	0	0
4953	1027	"res_0"	"int"	32	0	0	0
4954	1027	"arg_1"	"int"	32	0	1	1
4955	1028	"res_0"	"date"	0	0	0	0
4956	1029	"res_0"	"date"	0	0	0	0
4957	1030	"res_0"	"timetz"	7	0	0	0
4958	1031	"res_0"	"timetz"	7	0	0	0
4959	1032	"res_0"	"timestamptz"	7	0	0	0
4960	1033	"res_0"	"time"	7	0	0	0
4961	1034	"res_0"	"timestamp"	7	0	0	0
4962	1035	"res_0"	"int"	32	0	0	0
4963	1035	"arg_1"	"date"	0	0	1	1
4964	1035	"arg_2"	"date"	0	0	1	2
4965	1036	"res_0"	"sec_interval"	13	0	0	0
4966	1036	"arg_1"	"timetz"	7	0	1	1
4967	1036	"arg_2"	"timetz"	7	0	1	2
4968	1037	"res_0"	"sec_interval"	13	0	0	0
4969	1037	"arg_1"	"time"	7	0	1	1
4970	1037	"arg_2"	"time"	7	0	1	2
4971	1038	"res_0"	"sec_interval"	13	0	0	0
4972	1038	"arg_1"	"timestamptz"	7	0	1	1
4973	1038	"arg_2"	"timestamptz"	7	0	1	2
4974	1039	"res_0"	"sec_interval"	13	0	0	0
4975	1039	"arg_1"	"timestamp"	7	0	1	1
4976	1039	"arg_2"	"timestamp"	7	0	1	2
4977	1040	"res_0"	"date"	0	0	0	0
4978	1040	"arg_1"	"date"	0	0	1	1
4979	1040	"arg_2"	"sec_interval"	13	0	1	2
4980	1041	"res_0"	"date"	0	0	0	0
4981	1041	"arg_1"	"date"	0	0	1	1
4982	1041	"arg_2"	"month_interval"	32	0	1	2
4983	1042	"res_0"	"time"	7	0	0	0
4984	1042	"arg_1"	"time"	7	0	1	1
4985	1042	"arg_2"	"sec_interval"	13	0	1	2
4986	1043	"res_0"	"timetz"	7	0	0	0
4987	1043	"arg_1"	"timetz"	7	0	1	1
4988	1043	"arg_2"	"sec_interval"	13	0	1	2
4989	1044	"res_0"	"timestamp"	7	0	0	0
4990	1044	"arg_1"	"timestamp"	7	0	1	1
4991	1044	"arg_2"	"sec_interval"	13	0	1	2
4992	1045	"res_0"	"timestamp"	7	0	0	0
4993	1045	"arg_1"	"timestamp"	7	0	1	1
4994	1045	"arg_2"	"month_interval"	32	0	1	2
4995	1046	"res_0"	"timestamptz"	7	0	0	0
4996	1046	"arg_1"	"timestamptz"	7	0	1	1
4997	1046	"arg_2"	"sec_interval"	13	0	1	2
4998	1047	"res_0"	"timestamptz"	7	0	0	0
4999	1047	"arg_1"	"timestamptz"	7	0	1	1
5000	1047	"arg_2"	"month_interval"	32	0	1	2
5001	1048	"res_0"	"date"	0	0	0	0
5002	1048	"arg_1"	"date"	0	0	1	1
5003	1048	"arg_2"	"sec_interval"	13	0	1	2
5004	1049	"res_0"	"date"	0	0	0	0
5005	1049	"arg_1"	"date"	0	0	1	1
5006	1049	"arg_2"	"month_interval"	32	0	1	2
5007	1050	"res_0"	"timestamp"	7	0	0	0
5008	1050	"arg_1"	"timestamp"	7	0	1	1
5009	1050	"arg_2"	"sec_interval"	13	0	1	2
5010	1051	"res_0"	"timestamp"	7	0	0	0
5011	1051	"arg_1"	"timestamp"	7	0	1	1
5012	1051	"arg_2"	"month_interval"	32	0	1	2
5013	1052	"res_0"	"timestamptz"	7	0	0	0
5014	1052	"arg_1"	"timestamptz"	7	0	1	1
5015	1052	"arg_2"	"sec_interval"	13	0	1	2
5016	1053	"res_0"	"timestamptz"	7	0	0	0
5017	1053	"arg_1"	"timestamptz"	7	0	1	1
5018	1053	"arg_2"	"month_interval"	32	0	1	2
5019	1054	"res_0"	"time"	7	0	0	0
5020	1054	"arg_1"	"time"	7	0	1	1
5021	1054	"arg_2"	"sec_interval"	13	0	1	2
5022	1055	"res_0"	"timetz"	7	0	0	0
5023	1055	"arg_1"	"timetz"	7	0	1	1
5024	1055	"arg_2"	"sec_interval"	13	0	1	2
5025	1056	"res_0"	"sec_interval"	13	0	0	0
5026	1057	"res_0"	"int"	32	0	0	0
5027	1057	"arg_1"	"date"	0	0	1	1
5028	1058	"res_0"	"int"	32	0	0	0
5029	1058	"arg_1"	"date"	0	0	1	1
5030	1059	"res_0"	"int"	32	0	0	0
5031	1059	"arg_1"	"date"	0	0	1	1
5032	1060	"res_0"	"int"	32	0	0	0
5033	1060	"arg_1"	"time"	7	0	1	1
5034	1061	"res_0"	"int"	32	0	0	0
5035	1061	"arg_1"	"time"	7	0	1	1
5036	1062	"res_0"	"decimal"	9	3	0	0
5037	1062	"arg_1"	"time"	7	0	1	1
5038	1063	"res_0"	"int"	32	0	0	0
5039	1063	"arg_1"	"timetz"	7	0	1	1
5040	1064	"res_0"	"int"	32	0	0	0
5041	1064	"arg_1"	"timetz"	7	0	1	1
5042	1065	"res_0"	"decimal"	9	3	0	0
5043	1065	"arg_1"	"timetz"	7	0	1	1
5044	1066	"res_0"	"int"	32	0	0	0
5045	1066	"arg_1"	"timestamp"	7	0	1	1
5046	1067	"res_0"	"int"	32	0	0	0
5047	1067	"arg_1"	"timestamp"	7	0	1	1
5048	1068	"res_0"	"int"	32	0	0	0
5049	1068	"arg_1"	"timestamp"	7	0	1	1
5050	1069	"res_0"	"int"	32	0	0	0
5051	1069	"arg_1"	"timestamp"	7	0	1	1
5052	1070	"res_0"	"int"	32	0	0	0
5053	1070	"arg_1"	"timestamp"	7	0	1	1
5054	1071	"res_0"	"decimal"	9	3	0	0
5055	1071	"arg_1"	"timestamp"	7	0	1	1
5056	1072	"res_0"	"int"	32	0	0	0
5057	1072	"arg_1"	"timestamptz"	7	0	1	1
5058	1073	"res_0"	"int"	32	0	0	0
5059	1073	"arg_1"	"timestamptz"	7	0	1	1
5060	1074	"res_0"	"int"	32	0	0	0
5061	1074	"arg_1"	"timestamptz"	7	0	1	1
5062	1075	"res_0"	"int"	32	0	0	0
5063	1075	"arg_1"	"timestamptz"	7	0	1	1
5064	1076	"res_0"	"int"	32	0	0	0
5065	1076	"arg_1"	"timestamptz"	7	0	1	1
5066	1077	"res_0"	"decimal"	9	3	0	0
5067	1077	"arg_1"	"timestamptz"	7	0	1	1
5068	1078	"res_0"	"int"	32	0	0	0
5069	1078	"arg_1"	"month_interval"	32	0	1	1
5070	1079	"res_0"	"int"	32	0	0	0
5071	1079	"arg_1"	"month_interval"	32	0	1	1
5072	1080	"res_0"	"bigint"	64	0	0	0
5073	1080	"arg_1"	"sec_interval"	13	0	1	1
5074	1081	"res_0"	"int"	32	0	0	0
5075	1081	"arg_1"	"sec_interval"	13	0	1	1
5076	1082	"res_0"	"int"	32	0	0	0
5077	1082	"arg_1"	"sec_interval"	13	0	1	1
5078	1083	"res_0"	"int"	32	0	0	0
5079	1083	"arg_1"	"sec_interval"	13	0	1	1
5080	1084	"res_0"	"int"	32	0	0	0
5081	1084	"arg_1"	"date"	0	0	1	1
5082	1085	"res_0"	"int"	32	0	0	0
5083	1085	"arg_1"	"date"	0	0	1	1
5084	1086	"res_0"	"int"	32	0	0	0
5085	1086	"arg_1"	"date"	0	0	1	1
5086	1087	"res_0"	"int"	32	0	0	0
5087	1087	"arg_1"	"date"	0	0	1	1
5088	1088	"res_0"	"int"	32	0	0	0
5089	1088	"arg_1"	"date"	0	0	1	1
5090	1089	"res_0"	"bigint"	64	0	0	0
5091	1089	"arg_1"	"varchar"	0	0	1	1
5092	1089	"arg_2"	"varchar"	0	0	1	2
5093	1090	"res_0"	"bigint"	64	0	0	0
5094	1090	"arg_1"	"varchar"	0	0	1	1
5095	1090	"arg_2"	"varchar"	0	0	1	2
5096	1091	"res_0"	"bigint"	64	0	0	0
5097	1091	"arg_1"	"varchar"	0	0	1	1
5098	1091	"arg_2"	"varchar"	0	0	1	2
5099	1091	"arg_3"	"bigint"	64	0	1	3
5100	1092	"res_0"	"tinyint"	8	0	0	0
5101	1092	"arg_1"	"char"	0	0	1	1
5102	1092	"arg_2"	"boolean"	1	0	1	2
5103	1093	"res_0"	"smallint"	16	0	0	0
5104	1093	"arg_1"	"char"	0	0	1	1
5105	1093	"arg_2"	"boolean"	1	0	1	2
5106	1094	"res_0"	"int"	32	0	0	0
5107	1094	"arg_1"	"char"	0	0	1	1
5108	1094	"arg_2"	"boolean"	1	0	1	2
5109	1095	"res_0"	"char"	0	0	0	0
5110	1095	"arg_1"	"char"	0	0	1	1
5111	1096	"res_0"	"int"	32	0	0	0
5112	1096	"arg_1"	"char"	0	0	1	1
5113	1096	"arg_2"	"char"	0	0	1	2
5114	1097	"res_0"	"int"	32	0	0	0
5115	1097	"arg_1"	"char"	0	0	1	1
5116	1097	"arg_2"	"char"	0	0	1	2
5117	1097	"arg_3"	"int"	32	0	1	3
5118	1098	"res_0"	"char"	0	0	0	0
5119	1098	"arg_1"	"char"	0	0	1	1
5120	1098	"arg_2"	"char"	0	0	1	2
5121	1098	"arg_3"	"int"	32	0	1	3
5122	1099	"res_0"	"char"	0	0	0	0
5123	1099	"arg_1"	"char"	0	0	1	1
5124	1099	"arg_2"	"int"	32	0	1	2
5125	1100	"res_0"	"char"	0	0	0	0
5126	1100	"arg_1"	"char"	0	0	1	1
5127	1100	"arg_2"	"int"	32	0	1	2
5128	1100	"arg_3"	"int"	32	0	1	3
5129	1101	"res_0"	"boolean"	1	0	0	0
5130	1101	"arg_1"	"char"	0	0	1	1
5131	1101	"arg_2"	"char"	0	0	1	2
5132	1102	"res_0"	"boolean"	1	0	0	0
5133	1102	"arg_1"	"char"	0	0	1	1
5134	1102	"arg_2"	"char"	0	0	1	2
5135	1102	"arg_3"	"char"	0	0	1	3
5136	1103	"res_0"	"boolean"	1	0	0	0
5137	1103	"arg_1"	"char"	0	0	1	1
5138	1103	"arg_2"	"char"	0	0	1	2
5139	1104	"res_0"	"boolean"	1	0	0	0
5140	1104	"arg_1"	"char"	0	0	1	1
5141	1104	"arg_2"	"char"	0	0	1	2
5142	1104	"arg_3"	"char"	0	0	1	3
5143	1105	"res_0"	"boolean"	1	0	0	0
5144	1105	"arg_1"	"char"	0	0	1	1
5145	1105	"arg_2"	"char"	0	0	1	2
5146	1106	"res_0"	"boolean"	1	0	0	0
5147	1106	"arg_1"	"char"	0	0	1	1
5148	1106	"arg_2"	"char"	0	0	1	2
5149	1106	"arg_3"	"char"	0	0	1	3
5150	1107	"res_0"	"boolean"	1	0	0	0
5151	1107	"arg_1"	"char"	0	0	1	1
5152	1107	"arg_2"	"char"	0	0	1	2
5153	1108	"res_0"	"boolean"	1	0	0	0
5154	1108	"arg_1"	"char"	0	0	1	1
5155	1108	"arg_2"	"char"	0	0	1	2
5156	1108	"arg_3"	"char"	0	0	1	3
5157	1109	"res_0"	"int"	32	0	0	0
5158	1109	"arg_1"	"char"	0	0	1	1
5159	1109	"arg_2"	"char"	0	0	1	2
5160	1110	"res_0"	"char"	0	0	0	0
5161	1110	"arg_1"	"char"	0	0	1	1
5162	1110	"arg_2"	"int"	32	0	1	2
5163	1111	"res_0"	"char"	0	0	0	0
5164	1111	"arg_1"	"char"	0	0	1	1
5165	1111	"arg_2"	"char"	0	0	1	2
5166	1112	"res_0"	"int"	32	0	0	0
5167	1112	"arg_1"	"char"	0	0	1	1
5168	1113	"res_0"	"char"	0	0	0	0
5169	1113	"arg_1"	"int"	32	0	1	1
5170	1114	"res_0"	"int"	32	0	0	0
5171	1114	"arg_1"	"char"	0	0	1	1
5172	1115	"res_0"	"char"	0	0	0	0
5173	1115	"arg_1"	"char"	0	0	1	1
5174	1115	"arg_2"	"int"	32	0	1	2
5175	1116	"res_0"	"char"	0	0	0	0
5176	1116	"arg_1"	"char"	0	0	1	1
5177	1116	"arg_2"	"int"	32	0	1	2
5178	1117	"res_0"	"char"	0	0	0	0
5179	1117	"arg_1"	"char"	0	0	1	1
5180	1118	"res_0"	"char"	0	0	0	0
5181	1118	"arg_1"	"char"	0	0	1	1
5182	1119	"res_0"	"char"	0	0	0	0
5183	1119	"arg_1"	"char"	0	0	1	1
5184	1120	"res_0"	"char"	0	0	0	0
5185	1120	"arg_1"	"char"	0	0	1	1
5186	1121	"res_0"	"char"	0	0	0	0
5187	1121	"arg_1"	"char"	0	0	1	1
5188	1122	"res_0"	"char"	0	0	0	0
5189	1122	"arg_1"	"char"	0	0	1	1
5190	1122	"arg_2"	"char"	0	0	1	2
5191	1123	"res_0"	"char"	0	0	0	0
5192	1123	"arg_1"	"char"	0	0	1	1
5193	1124	"res_0"	"char"	0	0	0	0
5194	1124	"arg_1"	"char"	0	0	1	1
5195	1124	"arg_2"	"char"	0	0	1	2
5196	1125	"res_0"	"char"	0	0	0	0
5197	1125	"arg_1"	"char"	0	0	1	1
5198	1126	"res_0"	"char"	0	0	0	0
5199	1126	"arg_1"	"char"	0	0	1	1
5200	1126	"arg_2"	"char"	0	0	1	2
5201	1127	"res_0"	"char"	0	0	0	0
5202	1127	"arg_1"	"char"	0	0	1	1
5203	1127	"arg_2"	"int"	32	0	1	2
5204	1128	"res_0"	"char"	0	0	0	0
5205	1128	"arg_1"	"char"	0	0	1	1
5206	1128	"arg_2"	"int"	32	0	1	2
5207	1128	"arg_3"	"char"	0	0	1	3
5208	1129	"res_0"	"char"	0	0	0	0
5209	1129	"arg_1"	"char"	0	0	1	1
5210	1129	"arg_2"	"int"	32	0	1	2
5211	1130	"res_0"	"char"	0	0	0	0
5212	1130	"arg_1"	"char"	0	0	1	1
5213	1130	"arg_2"	"int"	32	0	1	2
5214	1130	"arg_3"	"char"	0	0	1	3
5215	1131	"res_0"	"char"	0	0	0	0
5216	1131	"arg_1"	"char"	0	0	1	1
5217	1131	"arg_2"	"int"	32	0	1	2
5218	1131	"arg_3"	"int"	32	0	1	3
5219	1131	"arg_4"	"char"	0	0	1	4
5220	1132	"res_0"	"char"	0	0	0	0
5221	1132	"arg_1"	"char"	0	0	1	1
5222	1132	"arg_2"	"char"	0	0	1	2
5223	1132	"arg_3"	"char"	0	0	1	3
5224	1133	"res_0"	"char"	0	0	0	0
5225	1133	"arg_1"	"char"	0	0	1	1
5226	1133	"arg_2"	"int"	32	0	1	2
5227	1134	"res_0"	"char"	0	0	0	0
5228	1134	"arg_1"	"int"	32	0	1	1
5229	1135	"res_0"	"int"	32	0	0	0
5230	1135	"arg_1"	"char"	0	0	1	1
5231	1136	"res_0"	"int"	32	0	0	0
5232	1136	"arg_1"	"char"	0	0	1	1
5233	1137	"res_0"	"int"	32	0	0	0
5234	1137	"arg_1"	"char"	0	0	1	1
5235	1138	"res_0"	"char"	0	0	0	0
5236	1138	"arg_1"	"char"	0	0	1	1
5237	1139	"res_0"	"int"	32	0	0	0
5238	1139	"arg_1"	"char"	0	0	1	1
5239	1139	"arg_2"	"char"	0	0	1	2
5240	1140	"res_0"	"int"	32	0	0	0
5241	1140	"arg_1"	"char"	0	0	1	1
5242	1140	"arg_2"	"char"	0	0	1	2
5243	1141	"res_0"	"int"	32	0	0	0
5244	1141	"arg_1"	"char"	0	0	1	1
5245	1141	"arg_2"	"char"	0	0	1	2
5246	1142	"res_0"	"double"	53	0	0	0
5247	1142	"arg_1"	"char"	0	0	1	1
5248	1142	"arg_2"	"char"	0	0	1	2
5249	1143	"res_0"	"char"	0	0	0	0
5250	1143	"arg_1"	"char"	0	0	1	1
5251	1144	"res_0"	"int"	32	0	0	0
5252	1144	"arg_1"	"char"	0	0	1	1
5253	1144	"arg_2"	"char"	0	0	1	2
5254	1145	"res_0"	"int"	32	0	0	0
5255	1145	"arg_1"	"char"	0	0	1	1
5256	1145	"arg_2"	"char"	0	0	1	2
5257	1145	"arg_3"	"int"	32	0	1	3
5258	1145	"arg_4"	"int"	32	0	1	4
5259	1145	"arg_5"	"int"	32	0	1	5
5260	1146	"res_0"	"tinyint"	8	0	0	0
5261	1146	"arg_1"	"varchar"	0	0	1	1
5262	1146	"arg_2"	"boolean"	1	0	1	2
5263	1147	"res_0"	"smallint"	16	0	0	0
5264	1147	"arg_1"	"varchar"	0	0	1	1
5265	1147	"arg_2"	"boolean"	1	0	1	2
5266	1148	"res_0"	"int"	32	0	0	0
5267	1148	"arg_1"	"varchar"	0	0	1	1
5268	1148	"arg_2"	"boolean"	1	0	1	2
5269	1149	"res_0"	"varchar"	0	0	0	0
5270	1149	"arg_1"	"varchar"	0	0	1	1
5271	1150	"res_0"	"int"	32	0	0	0
5272	1150	"arg_1"	"varchar"	0	0	1	1
5273	1150	"arg_2"	"varchar"	0	0	1	2
5274	1151	"res_0"	"int"	32	0	0	0
5275	1151	"arg_1"	"varchar"	0	0	1	1
5276	1151	"arg_2"	"varchar"	0	0	1	2
5277	1151	"arg_3"	"int"	32	0	1	3
5278	1152	"res_0"	"varchar"	0	0	0	0
5279	1152	"arg_1"	"varchar"	0	0	1	1
5280	1152	"arg_2"	"varchar"	0	0	1	2
5281	1152	"arg_3"	"int"	32	0	1	3
5282	1153	"res_0"	"varchar"	0	0	0	0
5283	1153	"arg_1"	"varchar"	0	0	1	1
5284	1153	"arg_2"	"int"	32	0	1	2
5285	1154	"res_0"	"varchar"	0	0	0	0
5286	1154	"arg_1"	"varchar"	0	0	1	1
5287	1154	"arg_2"	"int"	32	0	1	2
5288	1154	"arg_3"	"int"	32	0	1	3
5289	1155	"res_0"	"boolean"	1	0	0	0
5290	1155	"arg_1"	"varchar"	0	0	1	1
5291	1155	"arg_2"	"varchar"	0	0	1	2
5292	1156	"res_0"	"boolean"	1	0	0	0
5293	1156	"arg_1"	"varchar"	0	0	1	1
5294	1156	"arg_2"	"varchar"	0	0	1	2
5295	1156	"arg_3"	"varchar"	0	0	1	3
5296	1157	"res_0"	"boolean"	1	0	0	0
5297	1157	"arg_1"	"varchar"	0	0	1	1
5298	1157	"arg_2"	"varchar"	0	0	1	2
5299	1158	"res_0"	"boolean"	1	0	0	0
5300	1158	"arg_1"	"varchar"	0	0	1	1
5301	1158	"arg_2"	"varchar"	0	0	1	2
5302	1158	"arg_3"	"varchar"	0	0	1	3
5303	1159	"res_0"	"boolean"	1	0	0	0
5304	1159	"arg_1"	"varchar"	0	0	1	1
5305	1159	"arg_2"	"varchar"	0	0	1	2
5306	1160	"res_0"	"boolean"	1	0	0	0
5307	1160	"arg_1"	"varchar"	0	0	1	1
5308	1160	"arg_2"	"varchar"	0	0	1	2
5309	1160	"arg_3"	"varchar"	0	0	1	3
5310	1161	"res_0"	"boolean"	1	0	0	0
5311	1161	"arg_1"	"varchar"	0	0	1	1
5312	1161	"arg_2"	"varchar"	0	0	1	2
5313	1162	"res_0"	"boolean"	1	0	0	0
5314	1162	"arg_1"	"varchar"	0	0	1	1
5315	1162	"arg_2"	"varchar"	0	0	1	2
5316	1162	"arg_3"	"varchar"	0	0	1	3
5317	1163	"res_0"	"int"	32	0	0	0
5318	1163	"arg_1"	"varchar"	0	0	1	1
5319	1163	"arg_2"	"varchar"	0	0	1	2
5320	1164	"res_0"	"varchar"	0	0	0	0
5321	1164	"arg_1"	"varchar"	0	0	1	1
5322	1164	"arg_2"	"int"	32	0	1	2
5323	1165	"res_0"	"varchar"	0	0	0	0
5324	1165	"arg_1"	"varchar"	0	0	1	1
5325	1165	"arg_2"	"varchar"	0	0	1	2
5326	1166	"res_0"	"int"	32	0	0	0
5327	1166	"arg_1"	"varchar"	0	0	1	1
5328	1167	"res_0"	"varchar"	0	0	0	0
5329	1167	"arg_1"	"int"	32	0	1	1
5330	1168	"res_0"	"int"	32	0	0	0
5331	1168	"arg_1"	"varchar"	0	0	1	1
5332	1169	"res_0"	"varchar"	0	0	0	0
5333	1169	"arg_1"	"varchar"	0	0	1	1
5334	1169	"arg_2"	"int"	32	0	1	2
5335	1170	"res_0"	"varchar"	0	0	0	0
5336	1170	"arg_1"	"varchar"	0	0	1	1
5337	1170	"arg_2"	"int"	32	0	1	2
5338	1171	"res_0"	"varchar"	0	0	0	0
5339	1171	"arg_1"	"varchar"	0	0	1	1
5340	1172	"res_0"	"varchar"	0	0	0	0
5341	1172	"arg_1"	"varchar"	0	0	1	1
5342	1173	"res_0"	"varchar"	0	0	0	0
5343	1173	"arg_1"	"varchar"	0	0	1	1
5344	1174	"res_0"	"varchar"	0	0	0	0
5345	1174	"arg_1"	"varchar"	0	0	1	1
5346	1175	"res_0"	"varchar"	0	0	0	0
5347	1175	"arg_1"	"varchar"	0	0	1	1
5348	1176	"res_0"	"varchar"	0	0	0	0
5349	1176	"arg_1"	"varchar"	0	0	1	1
5350	1176	"arg_2"	"varchar"	0	0	1	2
5351	1177	"res_0"	"varchar"	0	0	0	0
5352	1177	"arg_1"	"varchar"	0	0	1	1
5353	1178	"res_0"	"varchar"	0	0	0	0
5354	1178	"arg_1"	"varchar"	0	0	1	1
5355	1178	"arg_2"	"varchar"	0	0	1	2
5356	1179	"res_0"	"varchar"	0	0	0	0
5357	1179	"arg_1"	"varchar"	0	0	1	1
5358	1180	"res_0"	"varchar"	0	0	0	0
5359	1180	"arg_1"	"varchar"	0	0	1	1
5360	1180	"arg_2"	"varchar"	0	0	1	2
5361	1181	"res_0"	"varchar"	0	0	0	0
5362	1181	"arg_1"	"varchar"	0	0	1	1
5363	1181	"arg_2"	"int"	32	0	1	2
5364	1182	"res_0"	"varchar"	0	0	0	0
5365	1182	"arg_1"	"varchar"	0	0	1	1
5366	1182	"arg_2"	"int"	32	0	1	2
5367	1182	"arg_3"	"varchar"	0	0	1	3
5368	1183	"res_0"	"varchar"	0	0	0	0
5369	1183	"arg_1"	"varchar"	0	0	1	1
5370	1183	"arg_2"	"int"	32	0	1	2
5371	1184	"res_0"	"varchar"	0	0	0	0
5372	1184	"arg_1"	"varchar"	0	0	1	1
5373	1184	"arg_2"	"int"	32	0	1	2
5374	1184	"arg_3"	"varchar"	0	0	1	3
5375	1185	"res_0"	"varchar"	0	0	0	0
5376	1185	"arg_1"	"varchar"	0	0	1	1
5377	1185	"arg_2"	"int"	32	0	1	2
5378	1185	"arg_3"	"int"	32	0	1	3
5379	1185	"arg_4"	"varchar"	0	0	1	4
5380	1186	"res_0"	"varchar"	0	0	0	0
5381	1186	"arg_1"	"varchar"	0	0	1	1
5382	1186	"arg_2"	"varchar"	0	0	1	2
5383	1186	"arg_3"	"varchar"	0	0	1	3
5384	1187	"res_0"	"varchar"	0	0	0	0
5385	1187	"arg_1"	"varchar"	0	0	1	1
5386	1187	"arg_2"	"int"	32	0	1	2
5387	1188	"res_0"	"varchar"	0	0	0	0
5388	1188	"arg_1"	"int"	32	0	1	1
5389	1189	"res_0"	"int"	32	0	0	0
5390	1189	"arg_1"	"varchar"	0	0	1	1
5391	1190	"res_0"	"int"	32	0	0	0
5392	1190	"arg_1"	"varchar"	0	0	1	1
5393	1191	"res_0"	"int"	32	0	0	0
5394	1191	"arg_1"	"varchar"	0	0	1	1
5395	1192	"res_0"	"varchar"	0	0	0	0
5396	1192	"arg_1"	"varchar"	0	0	1	1
5397	1193	"res_0"	"int"	32	0	0	0
5398	1193	"arg_1"	"varchar"	0	0	1	1
5399	1193	"arg_2"	"varchar"	0	0	1	2
5400	1194	"res_0"	"int"	32	0	0	0
5401	1194	"arg_1"	"varchar"	0	0	1	1
5402	1194	"arg_2"	"varchar"	0	0	1	2
5403	1195	"res_0"	"int"	32	0	0	0
5404	1195	"arg_1"	"varchar"	0	0	1	1
5405	1195	"arg_2"	"varchar"	0	0	1	2
5406	1196	"res_0"	"double"	53	0	0	0
5407	1196	"arg_1"	"varchar"	0	0	1	1
5408	1196	"arg_2"	"varchar"	0	0	1	2
5409	1197	"res_0"	"varchar"	0	0	0	0
5410	1197	"arg_1"	"varchar"	0	0	1	1
5411	1198	"res_0"	"int"	32	0	0	0
5412	1198	"arg_1"	"varchar"	0	0	1	1
5413	1198	"arg_2"	"varchar"	0	0	1	2
5414	1199	"res_0"	"int"	32	0	0	0
5415	1199	"arg_1"	"varchar"	0	0	1	1
5416	1199	"arg_2"	"varchar"	0	0	1	2
5417	1199	"arg_3"	"int"	32	0	1	3
5418	1199	"arg_4"	"int"	32	0	1	4
5419	1199	"arg_5"	"int"	32	0	1	5
5420	1200	"res_0"	"tinyint"	8	0	0	0
5421	1200	"arg_1"	"clob"	0	0	1	1
5422	1200	"arg_2"	"boolean"	1	0	1	2
5423	1201	"res_0"	"smallint"	16	0	0	0
5424	1201	"arg_1"	"clob"	0	0	1	1
5425	1201	"arg_2"	"boolean"	1	0	1	2
5426	1202	"res_0"	"int"	32	0	0	0
5427	1202	"arg_1"	"clob"	0	0	1	1
5428	1202	"arg_2"	"boolean"	1	0	1	2
5429	1203	"res_0"	"clob"	0	0	0	0
5430	1203	"arg_1"	"clob"	0	0	1	1
5431	1204	"res_0"	"int"	32	0	0	0
5432	1204	"arg_1"	"clob"	0	0	1	1
5433	1204	"arg_2"	"clob"	0	0	1	2
5434	1205	"res_0"	"int"	32	0	0	0
5435	1205	"arg_1"	"clob"	0	0	1	1
5436	1205	"arg_2"	"clob"	0	0	1	2
5437	1205	"arg_3"	"int"	32	0	1	3
5438	1206	"res_0"	"clob"	0	0	0	0
5439	1206	"arg_1"	"clob"	0	0	1	1
5440	1206	"arg_2"	"clob"	0	0	1	2
5441	1206	"arg_3"	"int"	32	0	1	3
5442	1207	"res_0"	"clob"	0	0	0	0
5443	1207	"arg_1"	"clob"	0	0	1	1
5444	1207	"arg_2"	"int"	32	0	1	2
5445	1208	"res_0"	"clob"	0	0	0	0
5446	1208	"arg_1"	"clob"	0	0	1	1
5447	1208	"arg_2"	"int"	32	0	1	2
5448	1208	"arg_3"	"int"	32	0	1	3
5449	1209	"res_0"	"boolean"	1	0	0	0
5450	1209	"arg_1"	"clob"	0	0	1	1
5451	1209	"arg_2"	"clob"	0	0	1	2
5452	1210	"res_0"	"boolean"	1	0	0	0
5453	1210	"arg_1"	"clob"	0	0	1	1
5454	1210	"arg_2"	"clob"	0	0	1	2
5455	1210	"arg_3"	"clob"	0	0	1	3
5456	1211	"res_0"	"boolean"	1	0	0	0
5457	1211	"arg_1"	"clob"	0	0	1	1
5458	1211	"arg_2"	"clob"	0	0	1	2
5459	1212	"res_0"	"boolean"	1	0	0	0
5460	1212	"arg_1"	"clob"	0	0	1	1
5461	1212	"arg_2"	"clob"	0	0	1	2
5462	1212	"arg_3"	"clob"	0	0	1	3
5463	1213	"res_0"	"boolean"	1	0	0	0
5464	1213	"arg_1"	"clob"	0	0	1	1
5465	1213	"arg_2"	"clob"	0	0	1	2
5466	1214	"res_0"	"boolean"	1	0	0	0
5467	1214	"arg_1"	"clob"	0	0	1	1
5468	1214	"arg_2"	"clob"	0	0	1	2
5469	1214	"arg_3"	"clob"	0	0	1	3
5470	1215	"res_0"	"boolean"	1	0	0	0
5471	1215	"arg_1"	"clob"	0	0	1	1
5472	1215	"arg_2"	"clob"	0	0	1	2
5473	1216	"res_0"	"boolean"	1	0	0	0
5474	1216	"arg_1"	"clob"	0	0	1	1
5475	1216	"arg_2"	"clob"	0	0	1	2
5476	1216	"arg_3"	"clob"	0	0	1	3
5477	1217	"res_0"	"int"	32	0	0	0
5478	1217	"arg_1"	"clob"	0	0	1	1
5479	1217	"arg_2"	"clob"	0	0	1	2
5480	1218	"res_0"	"clob"	0	0	0	0
5481	1218	"arg_1"	"clob"	0	0	1	1
5482	1218	"arg_2"	"int"	32	0	1	2
5483	1219	"res_0"	"clob"	0	0	0	0
5484	1219	"arg_1"	"clob"	0	0	1	1
5485	1219	"arg_2"	"clob"	0	0	1	2
5486	1220	"res_0"	"int"	32	0	0	0
5487	1220	"arg_1"	"clob"	0	0	1	1
5488	1221	"res_0"	"clob"	0	0	0	0
5489	1221	"arg_1"	"int"	32	0	1	1
5490	1222	"res_0"	"int"	32	0	0	0
5491	1222	"arg_1"	"clob"	0	0	1	1
5492	1223	"res_0"	"clob"	0	0	0	0
5493	1223	"arg_1"	"clob"	0	0	1	1
5494	1223	"arg_2"	"int"	32	0	1	2
5495	1224	"res_0"	"clob"	0	0	0	0
5496	1224	"arg_1"	"clob"	0	0	1	1
5497	1224	"arg_2"	"int"	32	0	1	2
5498	1225	"res_0"	"clob"	0	0	0	0
5499	1225	"arg_1"	"clob"	0	0	1	1
5500	1226	"res_0"	"clob"	0	0	0	0
5501	1226	"arg_1"	"clob"	0	0	1	1
5502	1227	"res_0"	"clob"	0	0	0	0
5503	1227	"arg_1"	"clob"	0	0	1	1
5504	1228	"res_0"	"clob"	0	0	0	0
5505	1228	"arg_1"	"clob"	0	0	1	1
5506	1229	"res_0"	"clob"	0	0	0	0
5507	1229	"arg_1"	"clob"	0	0	1	1
5508	1230	"res_0"	"clob"	0	0	0	0
5509	1230	"arg_1"	"clob"	0	0	1	1
5510	1230	"arg_2"	"clob"	0	0	1	2
5511	1231	"res_0"	"clob"	0	0	0	0
5512	1231	"arg_1"	"clob"	0	0	1	1
5513	1232	"res_0"	"clob"	0	0	0	0
5514	1232	"arg_1"	"clob"	0	0	1	1
5515	1232	"arg_2"	"clob"	0	0	1	2
5516	1233	"res_0"	"clob"	0	0	0	0
5517	1233	"arg_1"	"clob"	0	0	1	1
5518	1234	"res_0"	"clob"	0	0	0	0
5519	1234	"arg_1"	"clob"	0	0	1	1
5520	1234	"arg_2"	"clob"	0	0	1	2
5521	1235	"res_0"	"clob"	0	0	0	0
5522	1235	"arg_1"	"clob"	0	0	1	1
5523	1235	"arg_2"	"int"	32	0	1	2
5524	1236	"res_0"	"clob"	0	0	0	0
5525	1236	"arg_1"	"clob"	0	0	1	1
5526	1236	"arg_2"	"int"	32	0	1	2
5527	1236	"arg_3"	"clob"	0	0	1	3
5528	1237	"res_0"	"clob"	0	0	0	0
5529	1237	"arg_1"	"clob"	0	0	1	1
5530	1237	"arg_2"	"int"	32	0	1	2
5531	1238	"res_0"	"clob"	0	0	0	0
5532	1238	"arg_1"	"clob"	0	0	1	1
5533	1238	"arg_2"	"int"	32	0	1	2
5534	1238	"arg_3"	"clob"	0	0	1	3
5535	1239	"res_0"	"clob"	0	0	0	0
5536	1239	"arg_1"	"clob"	0	0	1	1
5537	1239	"arg_2"	"int"	32	0	1	2
5538	1239	"arg_3"	"int"	32	0	1	3
5539	1239	"arg_4"	"clob"	0	0	1	4
5540	1240	"res_0"	"clob"	0	0	0	0
5541	1240	"arg_1"	"clob"	0	0	1	1
5542	1240	"arg_2"	"clob"	0	0	1	2
5543	1240	"arg_3"	"clob"	0	0	1	3
5544	1241	"res_0"	"clob"	0	0	0	0
5545	1241	"arg_1"	"clob"	0	0	1	1
5546	1241	"arg_2"	"int"	32	0	1	2
5547	1242	"res_0"	"clob"	0	0	0	0
5548	1242	"arg_1"	"int"	32	0	1	1
5549	1243	"res_0"	"int"	32	0	0	0
5550	1243	"arg_1"	"clob"	0	0	1	1
5551	1244	"res_0"	"int"	32	0	0	0
5552	1244	"arg_1"	"clob"	0	0	1	1
5553	1245	"res_0"	"int"	32	0	0	0
5554	1245	"arg_1"	"clob"	0	0	1	1
5555	1246	"res_0"	"clob"	0	0	0	0
5556	1246	"arg_1"	"clob"	0	0	1	1
5557	1247	"res_0"	"int"	32	0	0	0
5558	1247	"arg_1"	"clob"	0	0	1	1
5559	1247	"arg_2"	"clob"	0	0	1	2
5560	1248	"res_0"	"int"	32	0	0	0
5561	1248	"arg_1"	"clob"	0	0	1	1
5562	1248	"arg_2"	"clob"	0	0	1	2
5563	1249	"res_0"	"int"	32	0	0	0
5564	1249	"arg_1"	"clob"	0	0	1	1
5565	1249	"arg_2"	"clob"	0	0	1	2
5566	1250	"res_0"	"double"	53	0	0	0
5567	1250	"arg_1"	"clob"	0	0	1	1
5568	1250	"arg_2"	"clob"	0	0	1	2
5569	1251	"res_0"	"clob"	0	0	0	0
5570	1251	"arg_1"	"clob"	0	0	1	1
5571	1252	"res_0"	"int"	32	0	0	0
5572	1252	"arg_1"	"clob"	0	0	1	1
5573	1252	"arg_2"	"clob"	0	0	1	2
5574	1253	"res_0"	"int"	32	0	0	0
5575	1253	"arg_1"	"clob"	0	0	1	1
5576	1253	"arg_2"	"clob"	0	0	1	2
5577	1253	"arg_3"	"int"	32	0	1	3
5578	1253	"arg_4"	"int"	32	0	1	4
5579	1253	"arg_5"	"int"	32	0	1	5
5580	1254	"res_0"	"table"	0	0	0	0
5581	1254	"arg_1"	"varchar"	0	0	1	1
5582	1254	"arg_2"	"varchar"	0	0	1	2
5583	1254	"arg_3"	"varchar"	0	0	1	3
5584	1254	"arg_4"	"varchar"	0	0	1	4
5585	1254	"arg_5"	"varchar"	0	0	1	5
5586	1254	"arg_6"	"varchar"	0	0	1	6
5587	1254	"arg_7"	"bigint"	64	0	1	7
5588	1254	"arg_8"	"bigint"	64	0	1	8
5589	1254	"arg_9"	"int"	32	0	1	9
5590	1255	"res_0"	"table"	0	0	0	0
5591	1255	"arg_1"	"varchar"	0	0	1	1
5592	1255	"arg_2"	"varchar"	0	0	1	2
5593	29	"res"	"boolean"	1	0	0	0
5594	29	"arg"	"oid"	63	0	1	1
5595	41	"res"	"any"	0	0	0	0
5596	41	"arg"	"any"	0	0	1	1
5597	42	"res"	"boolean"	1	0	0	0
5598	42	"arg"	"any"	0	0	1	1
5599	43	"res"	"boolean"	1	0	0	0
5600	43	"arg"	"any"	0	0	1	1
5601	48	"res"	"any"	0	0	0	0
5602	48	"arg"	"any"	0	0	1	1
5603	49	"res"	"any"	0	0	0	0
5604	49	"arg"	"any"	0	0	1	1
5605	53	"res"	"hugeint"	128	0	0	0
5606	53	"arg"	"tinyint"	8	0	1	1
5607	54	"res"	"hugeint"	128	0	0	0
5608	54	"arg"	"smallint"	16	0	1	1
5609	55	"res"	"hugeint"	128	0	0	0
5610	55	"arg"	"int"	32	0	1	1
5611	56	"res"	"hugeint"	128	0	0	0
5612	56	"arg"	"bigint"	64	0	1	1
5613	57	"res"	"hugeint"	128	0	0	0
5614	57	"arg"	"hugeint"	128	0	1	1
5615	58	"res"	"wrd"	64	0	0	0
5616	58	"arg"	"wrd"	64	0	1	1
5617	59	"res"	"decimal"	39	0	0	0
5618	59	"arg"	"decimal"	2	0	1	1
5619	60	"res"	"decimal"	39	0	0	0
5620	60	"arg"	"decimal"	4	0	1	1
5621	61	"res"	"decimal"	39	0	0	0
5622	61	"arg"	"decimal"	9	0	1	1
5623	62	"res"	"decimal"	39	0	0	0
5624	62	"arg"	"decimal"	18	0	1	1
5625	63	"res"	"decimal"	39	0	0	0
5626	63	"arg"	"decimal"	39	0	1	1
5627	64	"res"	"hugeint"	128	0	0	0
5628	64	"arg"	"tinyint"	8	0	1	1
5629	65	"res"	"hugeint"	128	0	0	0
5630	65	"arg"	"smallint"	16	0	1	1
5631	66	"res"	"hugeint"	128	0	0	0
5632	66	"arg"	"int"	32	0	1	1
5633	67	"res"	"hugeint"	128	0	0	0
5634	67	"arg"	"bigint"	64	0	1	1
5635	68	"res"	"hugeint"	128	0	0	0
5636	68	"arg"	"hugeint"	128	0	1	1
5637	69	"res"	"decimal"	39	0	0	0
5638	69	"arg"	"decimal"	2	0	1	1
5639	70	"res"	"decimal"	39	0	0	0
5640	70	"arg"	"decimal"	4	0	1	1
5641	71	"res"	"decimal"	39	0	0	0
5642	71	"arg"	"decimal"	9	0	1	1
5643	72	"res"	"decimal"	39	0	0	0
5644	72	"arg"	"decimal"	18	0	1	1
5645	73	"res"	"decimal"	39	0	0	0
5646	73	"arg"	"decimal"	39	0	1	1
5647	88	"res"	"real"	24	0	0	0
5648	88	"arg"	"real"	24	0	1	1
5649	89	"res"	"real"	24	0	0	0
5650	89	"arg"	"real"	24	0	1	1
5651	90	"res"	"double"	53	0	0	0
5652	90	"arg"	"double"	53	0	1	1
5653	91	"res"	"double"	53	0	0	0
5654	91	"arg"	"double"	53	0	1	1
5655	92	"res"	"month_interval"	32	0	0	0
5656	92	"arg"	"month_interval"	32	0	1	1
5657	93	"res"	"sec_interval"	13	0	0	0
5658	93	"arg"	"sec_interval"	13	0	1	1
5659	94	"res"	"double"	53	0	0	0
5660	94	"arg"	"double"	53	0	1	1
5661	95	"res"	"wrd"	64	0	0	0
5662	96	"res"	"wrd"	64	0	0	0
5685	5684	"name"	"varchar"	1024	0	0	0
5686	5684	"value"	"varchar"	2048	0	0	1
5688	5687	"name"	"varchar"	1024	0	0	0
5694	5693	"name"	"varchar"	2048	0	0	0
5714	5713	"val"	"clob"	0	0	1	0
5715	5713	"pat"	"clob"	0	0	1	1
5716	5713	"esc"	"clob"	0	0	1	2
5719	5718	"val"	"clob"	0	0	1	0
5720	5718	"pat"	"clob"	0	0	1	1
5721	5718	"esc"	"clob"	0	0	1	2
5724	5723	"val"	"clob"	0	0	1	0
5725	5723	"pat"	"clob"	0	0	1	1
5728	5727	"val"	"clob"	0	0	1	0
5729	5727	"pat"	"clob"	0	0	1	1
5732	5731	"result"	"double"	53	0	0	0
5733	5731	"r"	"double"	53	0	1	1
5736	5735	"result"	"double"	53	0	0	0
5737	5735	"d"	"double"	53	0	1	1
5743	5742	"result"	"clob"	0	0	0	0
5744	5742	"theurl"	"url"	0	0	1	1
5747	5746	"result"	"clob"	0	0	0	0
5748	5746	"theurl"	"url"	0	0	1	1
5751	5750	"result"	"clob"	0	0	0	0
5752	5750	"theurl"	"url"	0	0	1	1
5755	5754	"result"	"clob"	0	0	0	0
5756	5754	"theurl"	"url"	0	0	1	1
5759	5758	"result"	"clob"	0	0	0	0
5760	5758	"theurl"	"url"	0	0	1	1
5763	5762	"result"	"clob"	0	0	0	0
5764	5762	"theurl"	"url"	0	0	1	1
5767	5766	"result"	"clob"	0	0	0	0
5768	5766	"theurl"	"url"	0	0	1	1
5771	5770	"result"	"clob"	0	0	0	0
5772	5770	"theurl"	"url"	0	0	1	1
5775	5774	"result"	"clob"	0	0	0	0
5776	5774	"theurl"	"url"	0	0	1	1
5779	5778	"result"	"clob"	0	0	0	0
5780	5778	"theurl"	"url"	0	0	1	1
5783	5782	"result"	"clob"	0	0	0	0
5784	5782	"theurl"	"url"	0	0	1	1
5787	5786	"result"	"clob"	0	0	0	0
5788	5786	"theurl"	"url"	0	0	1	1
5791	5790	"result"	"clob"	0	0	0	0
5792	5790	"theurl"	"url"	0	0	1	1
5795	5794	"result"	"boolean"	1	0	0	0
5796	5794	"theurl"	"url"	0	0	1	1
5799	5798	"result"	"url"	0	0	0	0
5800	5798	"protocol"	"clob"	0	0	1	1
5801	5798	"hostname"	"clob"	0	0	1	2
5802	5798	"port"	"int"	32	0	1	3
5803	5798	"file"	"clob"	0	0	1	4
5806	5805	"result"	"url"	0	0	0	0
5807	5805	"protocol"	"clob"	0	0	1	1
5808	5805	"hostname"	"clob"	0	0	1	2
5809	5805	"file"	"clob"	0	0	1	3
5812	5811	"result"	"date"	0	0	0	0
5813	5811	"s"	"clob"	0	0	1	1
5814	5811	"format"	"clob"	0	0	1	2
5817	5816	"result"	"clob"	0	0	0	0
5818	5816	"d"	"date"	0	0	1	1
5819	5816	"format"	"clob"	0	0	1	2
5822	5821	"result"	"time"	1	0	0	0
5823	5821	"s"	"clob"	0	0	1	1
5824	5821	"format"	"clob"	0	0	1	2
5827	5826	"result"	"clob"	0	0	0	0
5828	5826	"d"	"time"	1	0	1	1
5829	5826	"format"	"clob"	0	0	1	2
5832	5831	"result"	"timestamp"	7	0	0	0
5833	5831	"s"	"clob"	0	0	1	1
5834	5831	"format"	"clob"	0	0	1	2
5837	5836	"result"	"clob"	0	0	0	0
5838	5836	"d"	"timestamp"	7	0	1	1
5839	5836	"format"	"clob"	0	0	1	2
5843	5842	"result"	"inet"	0	0	0	0
5844	5842	"p"	"inet"	0	0	1	1
5847	5846	"result"	"clob"	0	0	0	0
5848	5846	"p"	"inet"	0	0	1	1
5851	5850	"result"	"int"	32	0	0	0
5852	5850	"p"	"inet"	0	0	1	1
5855	5854	"result"	"inet"	0	0	0	0
5856	5854	"p"	"inet"	0	0	1	1
5857	5854	"mask"	"int"	32	0	1	2
5860	5859	"result"	"inet"	0	0	0	0
5861	5859	"p"	"inet"	0	0	1	1
5864	5863	"result"	"inet"	0	0	0	0
5865	5863	"p"	"inet"	0	0	1	1
5868	5867	"result"	"inet"	0	0	0	0
5869	5867	"p"	"inet"	0	0	1	1
5872	5871	"result"	"clob"	0	0	0	0
5873	5871	"p"	"inet"	0	0	1	1
5876	5875	"result"	"clob"	0	0	0	0
5877	5875	"p"	"inet"	0	0	1	1
5880	5879	"result"	"boolean"	1	0	0	0
5881	5879	"i1"	"inet"	0	0	1	1
5882	5879	"i2"	"inet"	0	0	1	2
5885	5884	"result"	"boolean"	1	0	0	0
5886	5884	"i1"	"inet"	0	0	1	1
5887	5884	"i2"	"inet"	0	0	1	2
5890	5889	"result"	"boolean"	1	0	0	0
5891	5889	"i1"	"inet"	0	0	1	1
5892	5889	"i2"	"inet"	0	0	1	2
5895	5894	"result"	"boolean"	1	0	0	0
5896	5894	"i1"	"inet"	0	0	1	1
5897	5894	"i2"	"inet"	0	0	1	2
5900	5899	"id"	"oid"	63	0	0	0
5901	5899	"owner"	"clob"	0	0	0	1
5902	5899	"defined"	"timestamp"	7	0	0	2
5903	5899	"query"	"clob"	0	0	0	3
5904	5899	"pipe"	"clob"	0	0	0	4
5905	5899	"plan"	"clob"	0	0	0	5
5906	5899	"mal"	"int"	32	0	0	6
5907	5899	"optimize"	"bigint"	64	0	0	7
5910	5909	"id"	"oid"	63	0	0	0
5911	5909	"start"	"timestamp"	7	0	0	1
5912	5909	"stop"	"timestamp"	7	0	0	2
5913	5909	"arguments"	"clob"	0	0	0	3
5914	5909	"tuples"	"wrd"	64	0	0	4
5915	5909	"run"	"bigint"	64	0	0	5
5916	5909	"ship"	"bigint"	64	0	0	6
5917	5909	"cpu"	"int"	32	0	0	7
5918	5909	"io"	"int"	32	0	0	8
5964	5963	"threshold"	"smallint"	16	0	1	0
5969	5968	"event"	"int"	32	0	0	0
5970	5968	"clk"	"varchar"	20	0	0	1
5971	5968	"pc"	"varchar"	50	0	0	2
5972	5968	"thread"	"int"	32	0	0	3
5973	5968	"ticks"	"bigint"	64	0	0	4
5974	5968	"rrsmb"	"bigint"	64	0	0	5
5975	5968	"vmmb"	"bigint"	64	0	0	6
5976	5968	"reads"	"bigint"	64	0	0	7
5977	5968	"writes"	"bigint"	64	0	0	8
5978	5968	"minflt"	"bigint"	64	0	0	9
5979	5968	"majflt"	"bigint"	64	0	0	10
5980	5968	"nvcsw"	"bigint"	64	0	0	11
5981	5968	"stmt"	"clob"	0	0	0	12
5999	5998	"host"	"clob"	0	0	1	0
6000	5998	"port"	"int"	32	0	1	1
6003	6002	"ticks"	"int"	32	0	1	0
6006	6005	"result"	"timestamp"	7	0	0	0
6007	6005	"sec"	"bigint"	64	0	1	1
6010	6009	"result"	"timestamp"	7	0	0	0
6011	6009	"sec"	"int"	32	0	1	1
6014	6013	"result"	"int"	32	0	0	0
6015	6013	"ts"	"timestamp"	7	0	1	1
6018	6017	"result"	"int"	32	0	0	0
6019	6017	"ts"	"timestamptz"	7	0	1	1
6022	6021	"sys"	"clob"	0	0	1	0
6023	6021	"tab"	"clob"	0	0	1	1
6026	6025	"sys"	"clob"	0	0	1	0
6027	6025	"tab"	"clob"	0	0	1	1
6030	6029	"sys"	"clob"	0	0	1	0
6031	6029	"tab"	"clob"	0	0	1	1
6034	6033	"sch"	"varchar"	100	0	0	0
6035	6033	"usr"	"varchar"	100	0	0	1
6036	6033	"dep_type"	"varchar"	32	0	0	2
6039	6038	"sch"	"varchar"	100	0	0	0
6040	6038	"usr"	"varchar"	100	0	0	1
6041	6038	"dep_type"	"varchar"	32	0	0	2
6044	6043	"sch"	"varchar"	100	0	0	0
6045	6043	"usr"	"varchar"	100	0	0	1
6046	6043	"dep_type"	"varchar"	32	0	0	2
6049	6048	"sch"	"varchar"	100	0	0	0
6050	6048	"usr"	"varchar"	100	0	0	1
6051	6048	"dep_type"	"varchar"	32	0	0	2
6054	6053	"sch"	"varchar"	100	0	0	0
6055	6053	"usr"	"varchar"	100	0	0	1
6056	6053	"dep_type"	"varchar"	32	0	0	2
6059	6058	"sch"	"varchar"	100	0	0	0
6060	6058	"usr"	"varchar"	100	0	0	1
6061	6058	"dep_type"	"varchar"	32	0	0	2
6064	6063	"sch"	"varchar"	100	0	0	0
6065	6063	"usr"	"varchar"	100	0	0	1
6066	6063	"dep_type"	"varchar"	32	0	0	2
6069	6068	"sch"	"varchar"	100	0	0	0
6070	6068	"usr"	"varchar"	100	0	0	1
6071	6068	"dep_type"	"varchar"	32	0	0	2
6074	6073	"sch"	"varchar"	100	0	0	0
6075	6073	"usr"	"varchar"	100	0	0	1
6076	6073	"dep_type"	"varchar"	32	0	0	2
6079	6078	"sch"	"varchar"	100	0	0	0
6080	6078	"usr"	"varchar"	100	0	0	1
6081	6078	"dep_type"	"varchar"	32	0	0	2
6084	6083	"sch"	"varchar"	100	0	0	0
6085	6083	"usr"	"varchar"	100	0	0	1
6086	6083	"dep_type"	"varchar"	32	0	0	2
6089	6088	"sch"	"varchar"	100	0	0	0
6090	6088	"usr"	"varchar"	100	0	0	1
6091	6088	"dep_type"	"varchar"	32	0	0	2
6094	6093	"sch"	"varchar"	100	0	0	0
6095	6093	"usr"	"varchar"	100	0	0	1
6096	6093	"dep_type"	"varchar"	32	0	0	2
6099	6098	"sch"	"varchar"	100	0	0	0
6100	6098	"usr"	"varchar"	100	0	0	1
6101	6098	"dep_type"	"varchar"	32	0	0	2
6104	6103	"sch"	"varchar"	100	0	0	0
6105	6103	"usr"	"varchar"	100	0	0	1
6106	6103	"dep_type"	"varchar"	32	0	0	2
6109	6108	"sch"	"varchar"	100	0	0	0
6110	6108	"usr"	"varchar"	100	0	0	1
6111	6108	"dep_type"	"varchar"	32	0	0	2
6114	6113	"sch"	"varchar"	100	0	0	0
6115	6113	"usr"	"varchar"	100	0	0	1
6116	6113	"dep_type"	"varchar"	32	0	0	2
6119	6118	"result"	"clob"	0	0	0	0
6120	6118	"username"	"clob"	0	0	1	1
6123	6122	"user"	"clob"	0	0	0	0
6124	6122	"login"	"timestamp"	7	0	0	1
6125	6122	"sessiontimeout"	"bigint"	64	0	0	2
6126	6122	"lastcommand"	"timestamp"	7	0	0	3
6127	6122	"querytimeout"	"bigint"	64	0	0	4
6128	6122	"active"	"boolean"	1	0	0	5
6139	6138	"delay"	"tinyint"	8	0	1	0
6142	6141	"delay"	"tinyint"	8	0	1	0
6143	6141	"force"	"boolean"	1	0	1	1
6146	6145	"query"	"bigint"	64	0	1	0
6149	6148	"query"	"bigint"	64	0	1	0
6150	6148	"session"	"bigint"	64	0	1	1
6153	6152	"timeout"	"bigint"	64	0	1	0
6156	6155	"result"	"varchar"	32	0	0	0
6157	6155	"s1"	"varchar"	32	0	1	1
6158	6155	"st"	"int"	32	0	1	2
6159	6155	"len"	"int"	32	0	1	3
6160	6155	"s3"	"varchar"	32	0	1	4
6163	6162	"result"	"double"	53	0	0	0
6164	6162	"num"	"double"	53	0	1	1
6165	6162	"prc"	"int"	32	0	1	2
6168	6167	"result"	"double"	53	0	0	0
6169	6167	"num"	"double"	53	0	1	1
6170	6167	"prc"	"int"	32	0	1	2
6171	6167	"truncat"	"int"	32	0	1	3
6174	6173	"result"	"clob"	0	0	0	0
6175	6173	"num"	"double"	53	0	1	1
6176	6173	"prc"	"int"	32	0	1	2
6177	6173	"truncat"	"int"	32	0	1	3
6180	6179	"result"	"double"	53	0	0	0
6181	6179	"pdec"	"double"	53	0	1	1
6182	6179	"pradius"	"double"	53	0	1	2
6185	6184	"result"	"oid"	63	0	0	0
6186	6184	"x"	"int"	32	0	1	1
6187	6184	"y"	"int"	32	0	1	2
6190	6189	"result"	"int"	32	0	0	0
6191	6189	"z"	"oid"	63	0	1	1
6194	6193	"result"	"int"	32	0	0	0
6195	6193	"z"	"oid"	63	0	1	1
6198	6197	"rewrite"	"clob"	0	0	0	0
6199	6197	"count"	"int"	32	0	0	1
6202	6201	"query"	"clob"	0	0	0	0
6203	6201	"count"	"int"	32	0	0	1
6206	6205	"filename"	"clob"	0	0	1	0
6209	6208	"name"	"clob"	0	0	0	0
6210	6208	"def"	"clob"	0	0	0	1
6211	6208	"status"	"clob"	0	0	0	2
6219	6218	"name"	"clob"	0	0	0	0
6220	6218	"value"	"clob"	0	0	0	1
6227	6226	"id"	"int"	32	0	0	0
6228	6226	"name"	"clob"	0	0	0	1
6229	6226	"htype"	"clob"	0	0	0	2
6230	6226	"ttype"	"clob"	0	0	0	3
6231	6226	"count"	"bigint"	64	0	0	4
6232	6226	"refcnt"	"int"	32	0	0	5
6233	6226	"lrefcnt"	"int"	32	0	0	6
6234	6226	"location"	"clob"	0	0	0	7
6235	6226	"heat"	"int"	32	0	0	8
6236	6226	"dirty"	"clob"	0	0	0	9
6237	6226	"status"	"clob"	0	0	0	10
6238	6226	"kind"	"clob"	0	0	0	11
6241	6240	"ra_stmt"	"clob"	0	0	1	0
6242	6240	"opt"	"boolean"	1	0	1	1
6245	6244	"qtag"	"bigint"	64	0	0	0
6246	6244	"user"	"clob"	0	0	0	1
6247	6244	"started"	"timestamp"	7	0	0	2
6248	6244	"estimate"	"timestamp"	7	0	0	3
6249	6244	"progress"	"int"	32	0	0	4
6250	6244	"status"	"clob"	0	0	0	5
6251	6244	"tag"	"oid"	63	0	0	6
6252	6244	"query"	"clob"	0	0	0	7
6265	6264	"tag"	"int"	32	0	1	0
6268	6267	"tag"	"int"	32	0	1	0
6271	6270	"tag"	"int"	32	0	1	0
6274	6273	"tag"	"bigint"	64	0	1	0
6277	6276	"tag"	"bigint"	64	0	1	0
6280	6279	"tag"	"bigint"	64	0	1	0
6283	6282	"rowid"	"bigint"	64	0	0	0
6284	6282	"fldid"	"int"	32	0	0	1
6285	6282	"message"	"clob"	0	0	0	2
6286	6282	"input"	"clob"	0	0	0	3
6297	6296	"result"	"double"	53	0	0	0
6298	6296	"val"	"tinyint"	8	0	1	1
6301	6300	"result"	"double"	53	0	0	0
6302	6300	"val"	"smallint"	16	0	1	1
6305	6304	"result"	"double"	53	0	0	0
6306	6304	"val"	"int"	32	0	1	1
6309	6308	"result"	"double"	53	0	0	0
6310	6308	"val"	"wrd"	64	0	1	1
6313	6312	"result"	"double"	53	0	0	0
6314	6312	"val"	"bigint"	64	0	1	1
6317	6316	"result"	"double"	53	0	0	0
6318	6316	"val"	"real"	24	0	1	1
6321	6320	"result"	"double"	53	0	0	0
6322	6320	"val"	"double"	53	0	1	1
6325	6324	"result"	"double"	53	0	0	0
6326	6324	"val"	"date"	0	0	1	1
6329	6328	"result"	"double"	53	0	0	0
6330	6328	"val"	"time"	1	0	1	1
6333	6332	"result"	"double"	53	0	0	0
6334	6332	"val"	"timestamp"	7	0	1	1
6337	6336	"result"	"double"	53	0	0	0
6338	6336	"val"	"tinyint"	8	0	1	1
6341	6340	"result"	"double"	53	0	0	0
6342	6340	"val"	"smallint"	16	0	1	1
6345	6344	"result"	"double"	53	0	0	0
6346	6344	"val"	"int"	32	0	1	1
6349	6348	"result"	"double"	53	0	0	0
6350	6348	"val"	"wrd"	64	0	1	1
6353	6352	"result"	"double"	53	0	0	0
6354	6352	"val"	"bigint"	64	0	1	1
6357	6356	"result"	"double"	53	0	0	0
6358	6356	"val"	"real"	24	0	1	1
6361	6360	"result"	"double"	53	0	0	0
6362	6360	"val"	"double"	53	0	1	1
6365	6364	"result"	"double"	53	0	0	0
6366	6364	"val"	"date"	0	0	1	1
6369	6368	"result"	"double"	53	0	0	0
6370	6368	"val"	"time"	1	0	1	1
6373	6372	"result"	"double"	53	0	0	0
6374	6372	"val"	"timestamp"	7	0	1	1
6377	6376	"result"	"double"	53	0	0	0
6378	6376	"val"	"tinyint"	8	0	1	1
6381	6380	"result"	"double"	53	0	0	0
6382	6380	"val"	"smallint"	16	0	1	1
6385	6384	"result"	"double"	53	0	0	0
6386	6384	"val"	"int"	32	0	1	1
6389	6388	"result"	"double"	53	0	0	0
6390	6388	"val"	"wrd"	64	0	1	1
6393	6392	"result"	"double"	53	0	0	0
6394	6392	"val"	"bigint"	64	0	1	1
6397	6396	"result"	"double"	53	0	0	0
6398	6396	"val"	"real"	24	0	1	1
6401	6400	"result"	"double"	53	0	0	0
6402	6400	"val"	"double"	53	0	1	1
6405	6404	"result"	"double"	53	0	0	0
6406	6404	"val"	"date"	0	0	1	1
6409	6408	"result"	"double"	53	0	0	0
6410	6408	"val"	"time"	1	0	1	1
6413	6412	"result"	"double"	53	0	0	0
6414	6412	"val"	"timestamp"	7	0	1	1
6417	6416	"result"	"double"	53	0	0	0
6418	6416	"val"	"tinyint"	8	0	1	1
6421	6420	"result"	"double"	53	0	0	0
6422	6420	"val"	"smallint"	16	0	1	1
6425	6424	"result"	"double"	53	0	0	0
6426	6424	"val"	"int"	32	0	1	1
6429	6428	"result"	"double"	53	0	0	0
6430	6428	"val"	"wrd"	64	0	1	1
6433	6432	"result"	"double"	53	0	0	0
6434	6432	"val"	"bigint"	64	0	1	1
6437	6436	"result"	"double"	53	0	0	0
6438	6436	"val"	"real"	24	0	1	1
6441	6440	"result"	"double"	53	0	0	0
6442	6440	"val"	"double"	53	0	1	1
6445	6444	"result"	"double"	53	0	0	0
6446	6444	"val"	"date"	0	0	1	1
6449	6448	"result"	"double"	53	0	0	0
6450	6448	"val"	"time"	1	0	1	1
6453	6452	"result"	"double"	53	0	0	0
6454	6452	"val"	"timestamp"	7	0	1	1
6457	6456	"result"	"tinyint"	8	0	0	0
6458	6456	"val"	"tinyint"	8	0	1	1
6461	6460	"result"	"smallint"	16	0	0	0
6462	6460	"val"	"smallint"	16	0	1	1
6465	6464	"result"	"int"	32	0	0	0
6466	6464	"val"	"int"	32	0	1	1
6469	6468	"result"	"wrd"	64	0	0	0
6470	6468	"val"	"wrd"	64	0	1	1
6473	6472	"result"	"bigint"	64	0	0	0
6474	6472	"val"	"bigint"	64	0	1	1
6477	6476	"result"	"decimal"	18	3	0	0
6478	6476	"val"	"decimal"	18	3	1	1
6481	6480	"result"	"real"	24	0	0	0
6482	6480	"val"	"real"	24	0	1	1
6485	6484	"result"	"double"	53	0	0	0
6486	6484	"val"	"double"	53	0	1	1
6489	6488	"result"	"date"	0	0	0	0
6490	6488	"val"	"date"	0	0	1	1
6493	6492	"result"	"time"	1	0	0	0
6494	6492	"val"	"time"	1	0	1	1
6497	6496	"result"	"timestamp"	7	0	0	0
6498	6496	"val"	"timestamp"	7	0	1	1
6501	6500	"result"	"tinyint"	8	0	0	0
6502	6500	"val"	"tinyint"	8	0	1	1
6503	6500	"q"	"double"	53	0	1	2
6506	6505	"result"	"smallint"	16	0	0	0
6507	6505	"val"	"smallint"	16	0	1	1
6508	6505	"q"	"double"	53	0	1	2
6511	6510	"result"	"int"	32	0	0	0
6512	6510	"val"	"int"	32	0	1	1
6513	6510	"q"	"double"	53	0	1	2
6516	6515	"result"	"wrd"	64	0	0	0
6517	6515	"val"	"wrd"	64	0	1	1
6518	6515	"q"	"double"	53	0	1	2
6521	6520	"result"	"bigint"	64	0	0	0
6522	6520	"val"	"bigint"	64	0	1	1
6523	6520	"q"	"double"	53	0	1	2
6526	6525	"result"	"decimal"	18	3	0	0
6527	6525	"val"	"decimal"	18	3	1	1
6528	6525	"q"	"double"	53	0	1	2
6531	6530	"result"	"real"	24	0	0	0
6532	6530	"val"	"real"	24	0	1	1
6533	6530	"q"	"double"	53	0	1	2
6536	6535	"result"	"double"	53	0	0	0
6537	6535	"val"	"double"	53	0	1	1
6538	6535	"q"	"double"	53	0	1	2
6541	6540	"result"	"date"	0	0	0	0
6542	6540	"val"	"date"	0	0	1	1
6543	6540	"q"	"double"	53	0	1	2
6546	6545	"result"	"time"	1	0	0	0
6547	6545	"val"	"time"	1	0	1	1
6548	6545	"q"	"double"	53	0	1	2
6551	6550	"result"	"timestamp"	7	0	0	0
6552	6550	"val"	"timestamp"	7	0	1	1
6553	6550	"q"	"double"	53	0	1	2
6556	6555	"result"	"tinyint"	8	0	0	0
6557	6555	"e1"	"tinyint"	8	0	1	1
6558	6555	"e2"	"tinyint"	8	0	1	2
6561	6560	"result"	"smallint"	16	0	0	0
6562	6560	"e1"	"smallint"	16	0	1	1
6563	6560	"e2"	"smallint"	16	0	1	2
6566	6565	"result"	"int"	32	0	0	0
6567	6565	"e1"	"int"	32	0	1	1
6568	6565	"e2"	"int"	32	0	1	2
6571	6570	"result"	"wrd"	64	0	0	0
6572	6570	"e1"	"wrd"	64	0	1	1
6573	6570	"e2"	"wrd"	64	0	1	2
6576	6575	"result"	"bigint"	64	0	0	0
6577	6575	"e1"	"bigint"	64	0	1	1
6578	6575	"e2"	"bigint"	64	0	1	2
6581	6580	"result"	"real"	24	0	0	0
6582	6580	"e1"	"real"	24	0	1	1
6583	6580	"e2"	"real"	24	0	1	2
6586	6585	"result"	"double"	53	0	0	0
6587	6585	"e1"	"double"	53	0	1	1
6588	6585	"e2"	"double"	53	0	1	2
6591	6590	"result"	"double"	53	0	0	0
6592	6590	"val"	"hugeint"	128	0	1	1
6595	6594	"result"	"double"	53	0	0	0
6596	6594	"val"	"hugeint"	128	0	1	1
6599	6598	"result"	"double"	53	0	0	0
6600	6598	"val"	"hugeint"	128	0	1	1
6603	6602	"result"	"double"	53	0	0	0
6604	6602	"val"	"hugeint"	128	0	1	1
6607	6606	"result"	"hugeint"	128	0	0	0
6608	6606	"val"	"hugeint"	128	0	1	1
6611	6610	"result"	"hugeint"	128	0	0	0
6612	6610	"val"	"hugeint"	128	0	1	1
6613	6610	"q"	"double"	53	0	1	2
6616	6615	"result"	"hugeint"	128	0	0	0
6617	6615	"e1"	"hugeint"	128	0	1	1
6618	6615	"e2"	"hugeint"	128	0	1	2
6634	6633	"result"	"mbr"	0	0	0	0
6635	6633	"g"	"geometry"	0	0	1	1
6638	6637	"result"	"boolean"	1	0	0	0
6639	6637	"a"	"mbr"	0	0	1	1
6640	6637	"b"	"mbr"	0	0	1	2
6643	6642	"result"	"geometry"	0	0	0	0
6644	6642	"wkt"	"clob"	0	0	1	1
6645	6642	"srid"	"smallint"	16	0	1	2
6648	6647	"result"	"point"	0	0	0	0
6649	6647	"wkt"	"clob"	0	0	1	1
6650	6647	"srid"	"smallint"	16	0	1	2
6653	6652	"result"	"linestring"	0	0	0	0
6654	6652	"wkt"	"clob"	0	0	1	1
6655	6652	"srid"	"smallint"	16	0	1	2
6658	6657	"result"	"polygon"	0	0	0	0
6659	6657	"wkt"	"clob"	0	0	1	1
6660	6657	"srid"	"smallint"	16	0	1	2
6663	6662	"result"	"multipoint"	0	0	0	0
6664	6662	"wkt"	"clob"	0	0	1	1
6665	6662	"srid"	"smallint"	16	0	1	2
6668	6667	"result"	"multilinestring"	0	0	0	0
6669	6667	"wkt"	"clob"	0	0	1	1
6670	6667	"srid"	"smallint"	16	0	1	2
6673	6672	"result"	"multipolygon"	0	0	0	0
6674	6672	"wkt"	"clob"	0	0	1	1
6675	6672	"srid"	"smallint"	16	0	1	2
6678	6677	"result"	"multipolygon"	0	0	0	0
6679	6677	"wkt"	"clob"	0	0	1	1
6680	6677	"srid"	"smallint"	16	0	1	2
6683	6682	"result"	"polygon"	0	0	0	0
6684	6682	"wkt"	"clob"	0	0	1	1
6685	6682	"srid"	"smallint"	16	0	1	2
6688	6687	"result"	"clob"	0	0	0	0
6689	6687	"g"	"geometry"	0	0	1	1
6692	6691	"result"	"double"	53	0	0	0
6693	6691	"g"	"geometry"	0	0	1	1
6696	6695	"result"	"double"	53	0	0	0
6697	6695	"g"	"geometry"	0	0	1	1
6700	6699	"result"	"point"	0	0	0	0
6701	6699	"x"	"double"	53	0	1	1
6702	6699	"y"	"double"	53	0	1	2
6705	6704	"result"	"int"	32	0	0	0
6706	6704	"g"	"geometry"	0	0	1	1
6709	6708	"result"	"int"	32	0	0	0
6710	6708	"g"	"geometry"	0	0	1	1
6713	6712	"result"	"int"	32	0	0	0
6714	6712	"g"	"geometry"	0	0	1	1
6717	6716	"result"	"geometry"	0	0	0	0
6718	6716	"g"	"geometry"	0	0	1	1
6721	6720	"result"	"boolean"	1	0	0	0
6722	6720	"g"	"geometry"	0	0	1	1
6725	6724	"result"	"boolean"	1	0	0	0
6726	6724	"g"	"geometry"	0	0	1	1
6729	6728	"result"	"geometry"	0	0	0	0
6730	6728	"g"	"geometry"	0	0	1	1
6733	6732	"result"	"boolean"	1	0	0	0
6734	6732	"a"	"geometry"	0	0	1	1
6735	6732	"b"	"geometry"	0	0	1	2
6738	6737	"result"	"boolean"	1	0	0	0
6739	6737	"a"	"geometry"	0	0	1	1
6740	6737	"b"	"geometry"	0	0	1	2
6743	6742	"result"	"boolean"	1	0	0	0
6744	6742	"a"	"geometry"	0	0	1	1
6745	6742	"b"	"geometry"	0	0	1	2
6748	6747	"result"	"boolean"	1	0	0	0
6749	6747	"a"	"geometry"	0	0	1	1
6750	6747	"b"	"geometry"	0	0	1	2
6753	6752	"result"	"boolean"	1	0	0	0
6754	6752	"a"	"geometry"	0	0	1	1
6755	6752	"b"	"geometry"	0	0	1	2
6758	6757	"result"	"boolean"	1	0	0	0
6759	6757	"a"	"geometry"	0	0	1	1
6760	6757	"b"	"geometry"	0	0	1	2
6763	6762	"result"	"boolean"	1	0	0	0
6764	6762	"a"	"geometry"	0	0	1	1
6765	6762	"b"	"geometry"	0	0	1	2
6768	6767	"result"	"boolean"	1	0	0	0
6769	6767	"a"	"geometry"	0	0	1	1
6770	6767	"x"	"double"	53	0	1	2
6771	6767	"y"	"double"	53	0	1	3
6774	6773	"result"	"boolean"	1	0	0	0
6775	6773	"a"	"geometry"	0	0	1	1
6776	6773	"b"	"geometry"	0	0	1	2
6779	6778	"result"	"boolean"	1	0	0	0
6780	6778	"a"	"geometry"	0	0	1	1
6781	6778	"b"	"geometry"	0	0	1	2
6782	6778	"pattern"	"clob"	0	0	1	3
6785	6784	"result"	"double"	53	0	0	0
6786	6784	"g"	"geometry"	0	0	1	1
6789	6788	"result"	"double"	53	0	0	0
6790	6788	"g"	"geometry"	0	0	1	1
6793	6792	"result"	"double"	53	0	0	0
6794	6792	"a"	"geometry"	0	0	1	1
6795	6792	"b"	"geometry"	0	0	1	2
6798	6797	"result"	"geometry"	0	0	0	0
6799	6797	"a"	"geometry"	0	0	1	1
6800	6797	"distance"	"double"	53	0	1	2
6803	6802	"result"	"geometry"	0	0	0	0
6804	6802	"a"	"geometry"	0	0	1	1
6807	6806	"result"	"geometry"	0	0	0	0
6808	6806	"a"	"geometry"	0	0	1	1
6809	6806	"b"	"geometry"	0	0	1	2
6812	6811	"result"	"geometry"	0	0	0	0
6813	6811	"a"	"geometry"	0	0	1	1
6814	6811	"b"	"geometry"	0	0	1	2
6817	6816	"result"	"geometry"	0	0	0	0
6818	6816	"a"	"geometry"	0	0	1	1
6819	6816	"b"	"geometry"	0	0	1	2
6822	6821	"result"	"geometry"	0	0	0	0
6823	6821	"a"	"geometry"	0	0	1	1
6824	6821	"b"	"geometry"	0	0	1	2
6829	6828	"result"	"json"	0	0	0	0
6830	6828	"js"	"json"	0	0	1	1
6831	6828	"pathexpr"	"clob"	0	0	1	2
6834	6833	"result"	"json"	0	0	0	0
6835	6833	"js"	"json"	0	0	1	1
6836	6833	"name"	"tinyint"	8	0	1	2
6839	6838	"result"	"json"	0	0	0	0
6840	6838	"js"	"json"	0	0	1	1
6841	6838	"name"	"int"	32	0	1	2
6844	6843	"result"	"json"	0	0	0	0
6845	6843	"js"	"json"	0	0	1	1
6846	6843	"name"	"bigint"	64	0	1	2
6849	6848	"result"	"clob"	0	0	0	0
6850	6848	"js"	"json"	0	0	1	1
6851	6848	"e"	"clob"	0	0	1	2
6854	6853	"result"	"double"	53	0	0	0
6855	6853	"js"	"json"	0	0	1	1
6858	6857	"result"	"bigint"	64	0	0	0
6859	6857	"js"	"json"	0	0	1	1
6862	6861	"result"	"boolean"	1	0	0	0
6863	6861	"js"	"clob"	0	0	1	1
6866	6865	"result"	"boolean"	1	0	0	0
6867	6865	"js"	"clob"	0	0	1	1
6870	6869	"result"	"boolean"	1	0	0	0
6871	6869	"js"	"clob"	0	0	1	1
6874	6873	"result"	"boolean"	1	0	0	0
6875	6873	"js"	"json"	0	0	1	1
6878	6877	"result"	"boolean"	1	0	0	0
6879	6877	"js"	"json"	0	0	1	1
6882	6881	"result"	"boolean"	1	0	0	0
6883	6881	"js"	"json"	0	0	1	1
6886	6885	"result"	"int"	32	0	0	0
6887	6885	"js"	"json"	0	0	1	1
6890	6889	"result"	"json"	0	0	0	0
6891	6889	"js"	"json"	0	0	1	1
6894	6893	"result"	"json"	0	0	0	0
6895	6893	"js"	"json"	0	0	1	1
6898	6897	"result"	"clob"	0	0	0	0
6899	6897	"js"	"json"	0	0	1	1
6902	6901	"result"	"clob"	0	0	0	0
6903	6901	"js"	"clob"	0	0	1	1
6906	6905	"result"	"clob"	0	0	0	0
6907	6905	"js"	"int"	32	0	1	1
6910	6909	"result"	"clob"	0	0	0	0
6911	6909	"js"	"json"	0	0	1	1
6914	6913	"result"	"clob"	0	0	0	0
6915	6913	"x"	"clob"	0	0	1	1
6918	6917	"result"	"clob"	0	0	0	0
6919	6917	"x"	"double"	53	0	1	1
6922	6921	"result"	"json"	0	0	0	0
6923	6921	"js"	"json"	0	0	1	1
6924	6921	"name"	"hugeint"	128	0	1	2
6927	6926	"result"	"clob"	0	0	0	0
6928	6926	"v"	"clob"	0	0	1	1
6932	6931	"result"	"uuid"	0	0	0	0
6935	6934	"result"	"uuid"	0	0	0	0
6936	6934	"u"	"uuid"	0	0	1	1
6939	6938	"result"	"uuid"	0	0	0	0
6940	6938	"u"	"clob"	0	0	1	1
6943	6942	"result"	"double"	53	0	0	0
6944	6942	"chi2"	"double"	53	0	1	1
6945	6942	"datapoints"	"double"	53	0	1	2
6969	6968	"dirname"	"clob"	0	0	1	0
6972	6971	"fname"	"clob"	0	0	1	0
6975	6974	"tname"	"clob"	0	0	1	0
6978	6977	"dirname"	"clob"	0	0	1	0
6979	6977	"pat"	"clob"	0	0	1	1
7014	7013	"fname"	"varchar"	256	0	1	0
7017	7016	"fid"	"int"	32	0	1	0
7018	7016	"varnname"	"varchar"	256	0	1	1
7021	7020	"schema"	"clob"	0	0	0	0
7022	7020	"table"	"clob"	0	0	0	1
7023	7020	"column"	"clob"	0	0	0	2
7024	7020	"type"	"clob"	0	0	0	3
7025	7020	"mode"	"clob"	0	0	0	4
7026	7020	"location"	"clob"	0	0	0	5
7027	7020	"count"	"bigint"	64	0	0	6
7028	7020	"typewidth"	"int"	32	0	0	7
7029	7020	"columnsize"	"bigint"	64	0	0	8
7030	7020	"heapsize"	"bigint"	64	0	0	9
7031	7020	"hashes"	"bigint"	64	0	0	10
7032	7020	"phash"	"boolean"	1	0	0	11
7033	7020	"imprints"	"bigint"	64	0	0	12
7034	7020	"sorted"	"boolean"	1	0	0	13
7067	7066	"result"	"bigint"	64	0	0	0
7068	7066	"nme"	"clob"	0	0	1	1
7069	7066	"i"	"bigint"	64	0	1	2
7070	7066	"d"	"bigint"	64	0	1	3
7073	7072	"result"	"bigint"	64	0	0	0
7074	7072	"tpe"	"clob"	0	0	1	1
7075	7072	"i"	"bigint"	64	0	1	2
7076	7072	"w"	"int"	32	0	1	3
7079	7078	"result"	"bigint"	64	0	0	0
7080	7078	"b"	"boolean"	1	0	1	1
7081	7078	"i"	"bigint"	64	0	1	2
7084	7083	"result"	"bigint"	64	0	0	0
7085	7083	"i"	"bigint"	64	0	1	1
7086	7083	"nme"	"clob"	0	0	1	2
7089	7088	"schema"	"clob"	0	0	0	0
7090	7088	"table"	"clob"	0	0	0	1
7091	7088	"column"	"clob"	0	0	0	2
7092	7088	"type"	"clob"	0	0	0	3
7093	7088	"count"	"bigint"	64	0	0	4
7094	7088	"columnsize"	"bigint"	64	0	0	5
7095	7088	"heapsize"	"bigint"	64	0	0	6
7096	7088	"hashes"	"bigint"	64	0	0	7
7097	7088	"imprints"	"bigint"	64	0	0	8
7098	7088	"sorted"	"boolean"	1	0	0	9
7136	7135	"MinMax"	"int"	32	0	1	0
7137	7135	"sample"	"bigint"	64	0	1	1
7140	7139	"MinMax"	"int"	32	0	1	0
7141	7139	"sample"	"bigint"	64	0	1	1
7142	7139	"sch"	"clob"	0	0	1	2
7145	7144	"MinMax"	"int"	32	0	1	0
7146	7144	"sample"	"bigint"	64	0	1	1
7147	7144	"sch"	"clob"	0	0	1	2
7148	7144	"tbl"	"clob"	0	0	1	3
7151	7150	"MinMax"	"int"	32	0	1	0
7152	7150	"sample"	"bigint"	64	0	1	1
7153	7150	"sch"	"clob"	0	0	1	2
7154	7150	"tbl"	"clob"	0	0	1	3
7155	7150	"col"	"clob"	0	0	1	4
7158	7157	"result"	"clob"	0	0	0	0
7159	7157	"src"	"clob"	0	0	1	1
7162	7161	"result"	"smallint"	16	0	0	0
7163	7161	"one"	"tinyint"	8	0	1	1
7164	7161	"two"	"tinyint"	8	0	1	2
7167	7166	"result"	"int"	32	0	0	0
7168	7166	"one"	"smallint"	16	0	1	1
7169	7166	"two"	"smallint"	16	0	1	2
7172	7171	"result"	"bigint"	64	0	0	0
7173	7171	"one"	"int"	32	0	1	1
7174	7171	"two"	"int"	32	0	1	2
7177	7176	"result"	"hugeint"	128	0	0	0
7178	7176	"one"	"bigint"	64	0	1	1
7179	7176	"two"	"bigint"	64	0	1	2
7183	7182	"bam_repos"	"clob"	0	0	1	0
7184	7182	"dbschema"	"smallint"	16	0	1	1
7185	7182	"nr_threads"	"smallint"	16	0	1	2
7188	7187	"bam_files"	"clob"	0	0	1	0
7189	7187	"dbschema"	"smallint"	16	0	1	1
7190	7187	"nr_threads"	"smallint"	16	0	1	2
7193	7192	"bam_file"	"clob"	0	0	1	0
7194	7192	"dbschema"	"smallint"	16	0	1	1
7197	7196	"file_id"	"bigint"	64	0	1	0
7198	7196	"dbschema"	"smallint"	16	0	1	1
7201	7200	"result"	"boolean"	1	0	0	0
7202	7200	"flag"	"smallint"	16	0	1	1
7203	7200	"name"	"clob"	0	0	1	2
7206	7205	"result"	"clob"	0	0	0	0
7207	7205	"seq"	"clob"	0	0	1	1
7210	7209	"result"	"clob"	0	0	0	0
7211	7209	"qual"	"clob"	0	0	1	1
7214	7213	"result"	"int"	32	0	0	0
7215	7213	"cigar"	"clob"	0	0	1	1
7218	7217	"output_path"	"clob"	0	0	1	0
7221	7220	"output_path"	"clob"	0	0	1	0
7291	7290	"value"	"tinyint"	8	0	0	0
7292	7290	"first"	"tinyint"	8	0	1	1
7293	7290	"last"	"tinyint"	8	0	1	2
7296	7295	"value"	"tinyint"	8	0	0	0
7297	7295	"first"	"tinyint"	8	0	1	1
7298	7295	"last"	"tinyint"	8	0	1	2
7299	7295	"stepsize"	"tinyint"	8	0	1	3
7302	7301	"value"	"smallint"	16	0	0	0
7303	7301	"first"	"smallint"	16	0	1	1
7304	7301	"last"	"smallint"	16	0	1	2
7307	7306	"value"	"smallint"	16	0	0	0
7308	7306	"first"	"smallint"	16	0	1	1
7309	7306	"last"	"smallint"	16	0	1	2
7310	7306	"stepsize"	"smallint"	16	0	1	3
7313	7312	"value"	"int"	32	0	0	0
7314	7312	"first"	"int"	32	0	1	1
7315	7312	"last"	"int"	32	0	1	2
7318	7317	"value"	"int"	32	0	0	0
7319	7317	"first"	"int"	32	0	1	1
7320	7317	"last"	"int"	32	0	1	2
7321	7317	"stepsize"	"int"	32	0	1	3
7324	7323	"value"	"bigint"	64	0	0	0
7325	7323	"first"	"bigint"	64	0	1	1
7326	7323	"last"	"bigint"	64	0	1	2
7329	7328	"value"	"bigint"	64	0	0	0
7330	7328	"first"	"bigint"	64	0	1	1
7331	7328	"last"	"bigint"	64	0	1	2
7332	7328	"stepsize"	"bigint"	64	0	1	3
7335	7334	"value"	"real"	24	0	0	0
7336	7334	"first"	"real"	24	0	1	1
7337	7334	"last"	"real"	24	0	1	2
7338	7334	"stepsize"	"real"	24	0	1	3
7341	7340	"value"	"double"	53	0	0	0
7342	7340	"first"	"double"	53	0	1	1
7343	7340	"last"	"double"	53	0	1	2
7344	7340	"stepsize"	"double"	53	0	1	3
7347	7346	"value"	"decimal"	10	2	0	0
7348	7346	"first"	"decimal"	10	2	1	1
7349	7346	"last"	"decimal"	10	2	1	2
7350	7346	"stepsize"	"decimal"	10	2	1	3
7353	7352	"value"	"timestamp"	7	0	0	0
7354	7352	"first"	"timestamp"	7	0	1	1
7355	7352	"last"	"timestamp"	7	0	1	2
7356	7352	"stepsize"	"sec_interval"	13	0	1	3
7359	7358	"value"	"hugeint"	128	0	0	0
7360	7358	"first"	"hugeint"	128	0	1	1
7361	7358	"last"	"hugeint"	128	0	1	2
7364	7363	"value"	"hugeint"	128	0	0	0
7365	7363	"first"	"hugeint"	128	0	1	1
7366	7363	"last"	"hugeint"	128	0	1	2
7367	7363	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 238 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
420	5731	7
419	5731	7
1025	5731	7
420	5735	7
419	5735	7
1025	5735	7
5899	5928	5
5909	5939	5
5899	5957	5
5909	5957	5
5968	5996	5
2003	6033	7
2001	6033	7
2002	6033	7
5695	6033	7
5704	6038	7
5702	6038	7
5703	6038	7
2005	6038	7
2001	6038	7
2003	6038	7
5663	6043	7
2047	6043	7
2046	6043	7
2049	6043	7
2048	6043	7
5663	6048	7
2088	6048	7
2086	6048	7
2090	6048	7
2083	6048	7
2079	6048	7
5663	6053	7
2047	6053	7
2046	6053	7
2049	6053	7
2092	6053	7
2091	6053	7
2048	6053	7
2093	6053	7
2094	6053	7
5663	6058	7
2081	6058	7
2079	6058	7
2084	6058	7
2080	6058	7
2083	6058	7
5663	6063	7
2047	6063	7
2046	6063	7
2049	6063	7
2017	6063	7
2016	6063	7
2048	6063	7
2018	6063	7
5673	6068	7
2047	6068	7
2046	6068	7
2049	6068	7
2048	6068	7
5663	6068	7
5673	6073	7
2081	6073	7
2079	6073	7
2084	6073	7
2103	6073	7
2102	6073	7
2104	6073	7
2080	6073	7
2083	6073	7
157	6073	7
33	6073	7
32	6073	7
34	6073	7
5673	6078	7
2088	6078	7
2086	6078	7
2090	6078	7
2083	6078	7
2079	6078	7
2087	6078	7
2103	6078	7
2102	6078	7
2104	6078	7
33	6078	7
32	6078	7
34	6078	7
5673	6083	7
2047	6083	7
2046	6083	7
2049	6083	7
2048	6083	7
2017	6083	7
2016	6083	7
2018	6083	7
5673	6088	7
2047	6088	7
2046	6088	7
2049	6088	7
2092	6088	7
2091	6088	7
2048	6088	7
2093	6088	7
5663	6093	7
2047	6093	7
2046	6093	7
2049	6093	7
2017	6093	7
2016	6093	7
2048	6093	7
2018	6093	7
5663	6098	7
2047	6098	7
2046	6098	7
2049	6098	7
2092	6098	7
2091	6098	7
2048	6098	7
2093	6098	7
2018	6103	7
2016	6103	7
2017	6103	7
2047	6103	7
2046	6103	7
2049	6103	7
2048	6103	7
2018	6108	7
2016	6108	7
2017	6108	7
2047	6108	7
2046	6108	7
2049	6108	7
2092	6108	7
2091	6108	7
2048	6108	7
2093	6108	7
2083	6113	7
2079	6113	7
2080	6113	7
2084	6113	7
6122	6136	5
121	6155	7
39	6155	7
37	6155	7
1168	6155	7
1154	6155	7
216	6155	7
1165	6155	7
217	6155	7
263	6155	7
34	6167	7
502	6167	7
121	6167	7
123	6167	7
36	6167	7
6162	6167	7
6208	6216	5
6218	6224	5
6244	6262	5
6282	6292	5
6947	6949	10
6947	6948	4
6952	6954	10
6955	6957	10
6952	6953	4
6960	6962	10
6963	6965	10
6960	6961	4
7020	7050	5
7052	7064	13
7062	7064	13
7053	7064	13
7054	7064	13
7055	7064	13
7056	7064	13
7057	7064	13
7058	7064	13
7059	7064	13
7060	7064	13
7061	7064	13
34	7066	7
218	7066	7
224	7066	7
120	7072	7
35	7072	7
263	7072	7
218	7072	7
34	7078	7
218	7078	7
121	7083	7
34	7083	7
379	7083	7
7052	7088	7
7062	7088	7
7053	7088	7
7054	7088	7
7055	7088	7
7057	7088	7
7058	7088	7
7059	7088	7
7060	7088	7
7061	7088	7
7066	7088	7
7072	7088	7
7078	7088	7
7083	7088	7
7088	7110	5
7088	7120	5
49	7120	5
56	7120	5
57	7120	5
52	7120	5
36	7120	5
34	7120	5
218	7120	5
7223	7230	10
7223	7229	4
7233	7241	10
7234	7241	10
7234	7243	10
7233	7240	4
7234	7240	4
7229	7242	11
7234	7242	11
7246	7260	10
7247	7260	10
7247	7262	10
7246	7259	4
7247	7259	4
7229	7261	11
7247	7261	11
7265	7272	10
7266	7272	10
7266	7274	10
7265	7271	4
7266	7271	4
7229	7273	11
7266	7273	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1527 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
31	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
32	"hash"	"hash"	"mkey"	0	1	false	false	false	0
33	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
34	"="	"="	"calc"	0	1	false	false	false	0
35	"<>"	"!="	"calc"	0	1	false	false	false	0
36	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
37	">"	">"	"calc"	0	1	false	false	false	0
38	">="	">="	"calc"	0	1	false	false	false	0
39	"<"	"<"	"calc"	0	1	false	false	false	0
40	"<="	"<="	"calc"	0	1	false	false	false	0
44	"in"	"in"	"calc"	0	1	false	false	false	0
45	"identity"	"identity"	"calc"	0	1	false	false	false	0
46	"rowid"	"identity"	"calc"	0	1	false	false	false	0
47	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
50	"sql_min"	"min"	"calc"	0	1	false	false	false	0
51	"sql_max"	"max"	"calc"	0	1	false	false	false	0
52	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
80	"mod"	"%"	"calc"	0	1	false	false	false	0
81	"mod"	"%"	"calc"	0	1	false	false	false	0
82	"mod"	"%"	"calc"	0	1	false	false	false	0
83	"mod"	"%"	"calc"	0	1	false	false	false	0
84	"mod"	"%"	"calc"	0	1	false	false	false	0
85	"mod"	"%"	"calc"	0	1	false	false	false	0
86	"mod"	"%"	"calc"	0	1	false	false	false	0
87	"mod"	"%"	"calc"	0	1	false	false	false	0
97	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
98	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
99	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
100	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
101	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
102	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
103	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
104	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
105	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
106	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
107	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
108	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
109	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
110	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
111	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
112	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
113	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
114	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
115	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
116	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
117	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
118	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
119	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
120	"and"	"and"	"calc"	0	1	false	false	false	0
121	"or"	"or"	"calc"	0	1	false	false	false	0
122	"xor"	"xor"	"calc"	0	1	false	false	false	0
123	"not"	"not"	"calc"	0	1	false	false	false	0
124	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
125	"sql_add"	"+"	"calc"	0	1	false	false	false	0
126	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
127	"sql_div"	"/"	"calc"	0	1	false	false	false	0
128	"bit_and"	"and"	"calc"	0	1	false	false	false	0
129	"bit_or"	"or"	"calc"	0	1	false	false	false	0
130	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
131	"bit_not"	"not"	"calc"	0	1	false	false	false	0
132	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
133	"right_shift"	">>"	"calc"	0	1	false	false	false	0
134	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
135	"abs"	"abs"	"calc"	0	1	false	false	false	0
136	"sign"	"sign"	"calc"	0	1	false	false	false	0
137	"scale_up"	"*"	"calc"	0	1	false	false	false	0
138	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
139	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
140	"sql_add"	"+"	"calc"	0	1	false	false	false	0
141	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
142	"sql_div"	"/"	"calc"	0	1	false	false	false	0
143	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
144	"sql_add"	"+"	"calc"	0	1	false	false	false	0
145	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
146	"sql_div"	"/"	"calc"	0	1	false	false	false	0
147	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
148	"sql_add"	"+"	"calc"	0	1	false	false	false	0
149	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
150	"sql_div"	"/"	"calc"	0	1	false	false	false	0
151	"bit_and"	"and"	"calc"	0	1	false	false	false	0
152	"bit_or"	"or"	"calc"	0	1	false	false	false	0
153	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
154	"bit_not"	"not"	"calc"	0	1	false	false	false	0
155	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
156	"right_shift"	">>"	"calc"	0	1	false	false	false	0
157	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
158	"abs"	"abs"	"calc"	0	1	false	false	false	0
159	"sign"	"sign"	"calc"	0	1	false	false	false	0
160	"scale_up"	"*"	"calc"	0	1	false	false	false	0
161	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
162	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
163	"sql_add"	"+"	"calc"	0	1	false	false	false	0
164	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
165	"sql_div"	"/"	"calc"	0	1	false	false	false	0
166	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
167	"sql_add"	"+"	"calc"	0	1	false	false	false	0
168	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
169	"sql_div"	"/"	"calc"	0	1	false	false	false	0
170	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
171	"sql_add"	"+"	"calc"	0	1	false	false	false	0
172	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
173	"sql_div"	"/"	"calc"	0	1	false	false	false	0
174	"bit_and"	"and"	"calc"	0	1	false	false	false	0
175	"bit_or"	"or"	"calc"	0	1	false	false	false	0
176	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
177	"bit_not"	"not"	"calc"	0	1	false	false	false	0
178	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
179	"right_shift"	">>"	"calc"	0	1	false	false	false	0
180	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
181	"abs"	"abs"	"calc"	0	1	false	false	false	0
182	"sign"	"sign"	"calc"	0	1	false	false	false	0
183	"scale_up"	"*"	"calc"	0	1	false	false	false	0
184	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
185	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
186	"sql_add"	"+"	"calc"	0	1	false	false	false	0
187	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
188	"sql_div"	"/"	"calc"	0	1	false	false	false	0
189	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
190	"sql_add"	"+"	"calc"	0	1	false	false	false	0
191	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
192	"sql_div"	"/"	"calc"	0	1	false	false	false	0
193	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
194	"sql_add"	"+"	"calc"	0	1	false	false	false	0
195	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
196	"sql_div"	"/"	"calc"	0	1	false	false	false	0
197	"bit_and"	"and"	"calc"	0	1	false	false	false	0
198	"bit_or"	"or"	"calc"	0	1	false	false	false	0
199	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
200	"bit_not"	"not"	"calc"	0	1	false	false	false	0
201	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
202	"right_shift"	">>"	"calc"	0	1	false	false	false	0
203	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
204	"abs"	"abs"	"calc"	0	1	false	false	false	0
205	"sign"	"sign"	"calc"	0	1	false	false	false	0
206	"scale_up"	"*"	"calc"	0	1	false	false	false	0
207	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
208	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
209	"sql_add"	"+"	"calc"	0	1	false	false	false	0
210	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
211	"sql_div"	"/"	"calc"	0	1	false	false	false	0
212	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
213	"sql_add"	"+"	"calc"	0	1	false	false	false	0
214	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
215	"sql_div"	"/"	"calc"	0	1	false	false	false	0
216	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
217	"sql_add"	"+"	"calc"	0	1	false	false	false	0
218	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
219	"sql_div"	"/"	"calc"	0	1	false	false	false	0
220	"bit_and"	"and"	"calc"	0	1	false	false	false	0
221	"bit_or"	"or"	"calc"	0	1	false	false	false	0
222	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
223	"bit_not"	"not"	"calc"	0	1	false	false	false	0
224	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
225	"right_shift"	">>"	"calc"	0	1	false	false	false	0
226	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
227	"abs"	"abs"	"calc"	0	1	false	false	false	0
228	"sign"	"sign"	"calc"	0	1	false	false	false	0
229	"scale_up"	"*"	"calc"	0	1	false	false	false	0
230	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
231	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
232	"sql_add"	"+"	"calc"	0	1	false	false	false	0
233	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
234	"sql_div"	"/"	"calc"	0	1	false	false	false	0
235	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
236	"sql_add"	"+"	"calc"	0	1	false	false	false	0
237	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
238	"sql_div"	"/"	"calc"	0	1	false	false	false	0
239	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
240	"sql_add"	"+"	"calc"	0	1	false	false	false	0
241	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
242	"sql_div"	"/"	"calc"	0	1	false	false	false	0
243	"bit_and"	"and"	"calc"	0	1	false	false	false	0
244	"bit_or"	"or"	"calc"	0	1	false	false	false	0
245	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
246	"bit_not"	"not"	"calc"	0	1	false	false	false	0
247	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
248	"right_shift"	">>"	"calc"	0	1	false	false	false	0
249	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
250	"abs"	"abs"	"calc"	0	1	false	false	false	0
251	"sign"	"sign"	"calc"	0	1	false	false	false	0
252	"scale_up"	"*"	"calc"	0	1	false	false	false	0
253	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
254	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
255	"sql_add"	"+"	"calc"	0	1	false	false	false	0
256	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
257	"sql_div"	"/"	"calc"	0	1	false	false	false	0
258	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
259	"sql_add"	"+"	"calc"	0	1	false	false	false	0
260	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
261	"sql_div"	"/"	"calc"	0	1	false	false	false	0
262	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
263	"sql_add"	"+"	"calc"	0	1	false	false	false	0
264	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
265	"sql_div"	"/"	"calc"	0	1	false	false	false	0
266	"bit_and"	"and"	"calc"	0	1	false	false	false	0
267	"bit_or"	"or"	"calc"	0	1	false	false	false	0
268	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
269	"bit_not"	"not"	"calc"	0	1	false	false	false	0
270	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
271	"right_shift"	">>"	"calc"	0	1	false	false	false	0
272	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
273	"abs"	"abs"	"calc"	0	1	false	false	false	0
274	"sign"	"sign"	"calc"	0	1	false	false	false	0
275	"scale_up"	"*"	"calc"	0	1	false	false	false	0
276	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
277	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
278	"sql_add"	"+"	"calc"	0	1	false	false	false	0
279	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
280	"sql_div"	"/"	"calc"	0	1	false	false	false	0
281	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
282	"sql_add"	"+"	"calc"	0	1	false	false	false	0
283	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
284	"sql_div"	"/"	"calc"	0	1	false	false	false	0
285	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
286	"sql_add"	"+"	"calc"	0	1	false	false	false	0
287	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
288	"sql_div"	"/"	"calc"	0	1	false	false	false	0
289	"bit_and"	"and"	"calc"	0	1	false	false	false	0
290	"bit_or"	"or"	"calc"	0	1	false	false	false	0
291	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
292	"bit_not"	"not"	"calc"	0	1	false	false	false	0
293	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
294	"right_shift"	">>"	"calc"	0	1	false	false	false	0
295	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
296	"abs"	"abs"	"calc"	0	1	false	false	false	0
297	"sign"	"sign"	"calc"	0	1	false	false	false	0
298	"scale_up"	"*"	"calc"	0	1	false	false	false	0
299	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
300	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
301	"sql_add"	"+"	"calc"	0	1	false	false	false	0
302	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
303	"sql_div"	"/"	"calc"	0	1	false	false	false	0
304	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
305	"sql_add"	"+"	"calc"	0	1	false	false	false	0
306	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
307	"sql_div"	"/"	"calc"	0	1	false	false	false	0
308	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
309	"sql_add"	"+"	"calc"	0	1	false	false	false	0
310	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
311	"sql_div"	"/"	"calc"	0	1	false	false	false	0
312	"bit_and"	"and"	"calc"	0	1	false	false	false	0
313	"bit_or"	"or"	"calc"	0	1	false	false	false	0
314	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
315	"bit_not"	"not"	"calc"	0	1	false	false	false	0
316	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
317	"right_shift"	">>"	"calc"	0	1	false	false	false	0
318	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
319	"abs"	"abs"	"calc"	0	1	false	false	false	0
320	"sign"	"sign"	"calc"	0	1	false	false	false	0
321	"scale_up"	"*"	"calc"	0	1	false	false	false	0
322	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
323	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
324	"sql_add"	"+"	"calc"	0	1	false	false	false	0
325	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
326	"sql_div"	"/"	"calc"	0	1	false	false	false	0
327	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
328	"sql_add"	"+"	"calc"	0	1	false	false	false	0
329	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
330	"sql_div"	"/"	"calc"	0	1	false	false	false	0
331	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
332	"sql_add"	"+"	"calc"	0	1	false	false	false	0
333	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
334	"sql_div"	"/"	"calc"	0	1	false	false	false	0
335	"bit_and"	"and"	"calc"	0	1	false	false	false	0
336	"bit_or"	"or"	"calc"	0	1	false	false	false	0
337	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
338	"bit_not"	"not"	"calc"	0	1	false	false	false	0
339	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
340	"right_shift"	">>"	"calc"	0	1	false	false	false	0
341	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
342	"abs"	"abs"	"calc"	0	1	false	false	false	0
343	"sign"	"sign"	"calc"	0	1	false	false	false	0
344	"scale_up"	"*"	"calc"	0	1	false	false	false	0
345	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
346	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
347	"sql_add"	"+"	"calc"	0	1	false	false	false	0
348	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
349	"sql_div"	"/"	"calc"	0	1	false	false	false	0
350	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
351	"sql_add"	"+"	"calc"	0	1	false	false	false	0
352	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
353	"sql_div"	"/"	"calc"	0	1	false	false	false	0
354	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
355	"sql_add"	"+"	"calc"	0	1	false	false	false	0
356	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
357	"sql_div"	"/"	"calc"	0	1	false	false	false	0
358	"bit_and"	"and"	"calc"	0	1	false	false	false	0
359	"bit_or"	"or"	"calc"	0	1	false	false	false	0
360	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
361	"bit_not"	"not"	"calc"	0	1	false	false	false	0
362	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
363	"right_shift"	">>"	"calc"	0	1	false	false	false	0
364	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
365	"abs"	"abs"	"calc"	0	1	false	false	false	0
366	"sign"	"sign"	"calc"	0	1	false	false	false	0
367	"scale_up"	"*"	"calc"	0	1	false	false	false	0
368	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
369	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
370	"sql_add"	"+"	"calc"	0	1	false	false	false	0
371	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
372	"sql_div"	"/"	"calc"	0	1	false	false	false	0
373	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
374	"sql_add"	"+"	"calc"	0	1	false	false	false	0
375	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
376	"sql_div"	"/"	"calc"	0	1	false	false	false	0
377	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
378	"sql_add"	"+"	"calc"	0	1	false	false	false	0
379	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
380	"sql_div"	"/"	"calc"	0	1	false	false	false	0
381	"bit_and"	"and"	"calc"	0	1	false	false	false	0
382	"bit_or"	"or"	"calc"	0	1	false	false	false	0
383	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
384	"bit_not"	"not"	"calc"	0	1	false	false	false	0
385	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
386	"right_shift"	">>"	"calc"	0	1	false	false	false	0
387	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
388	"abs"	"abs"	"calc"	0	1	false	false	false	0
389	"sign"	"sign"	"calc"	0	1	false	false	false	0
390	"scale_up"	"*"	"calc"	0	1	false	false	false	0
391	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
392	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
393	"sql_add"	"+"	"calc"	0	1	false	false	false	0
394	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
395	"sql_div"	"/"	"calc"	0	1	false	false	false	0
396	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
397	"sql_add"	"+"	"calc"	0	1	false	false	false	0
398	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
399	"sql_div"	"/"	"calc"	0	1	false	false	false	0
400	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
401	"sql_add"	"+"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_div"	"/"	"calc"	0	1	false	false	false	0
404	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
405	"abs"	"abs"	"calc"	0	1	false	false	false	0
406	"sign"	"sign"	"calc"	0	1	false	false	false	0
407	"scale_up"	"*"	"calc"	0	1	false	false	false	0
408	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
409	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
410	"sql_add"	"+"	"calc"	0	1	false	false	false	0
411	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
412	"sql_div"	"/"	"calc"	0	1	false	false	false	0
413	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
414	"sql_add"	"+"	"calc"	0	1	false	false	false	0
415	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
416	"sql_div"	"/"	"calc"	0	1	false	false	false	0
417	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
418	"sql_add"	"+"	"calc"	0	1	false	false	false	0
419	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
420	"sql_div"	"/"	"calc"	0	1	false	false	false	0
421	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
422	"abs"	"abs"	"calc"	0	1	false	false	false	0
423	"sign"	"sign"	"calc"	0	1	false	false	false	0
424	"scale_up"	"*"	"calc"	0	1	false	false	false	0
425	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
426	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
427	"sql_add"	"+"	"calc"	0	1	false	false	false	0
428	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
429	"sql_div"	"/"	"calc"	0	1	false	false	false	0
430	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
431	"sql_add"	"+"	"calc"	0	1	false	false	false	0
432	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
433	"sql_div"	"/"	"calc"	0	1	false	false	false	0
434	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
435	"sql_add"	"+"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_div"	"/"	"calc"	0	1	false	false	false	0
438	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
439	"abs"	"abs"	"calc"	0	1	false	false	false	0
440	"sign"	"sign"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
443	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
444	"sql_add"	"+"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_div"	"/"	"calc"	0	1	false	false	false	0
447	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
448	"abs"	"abs"	"calc"	0	1	false	false	false	0
449	"sign"	"sign"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
459	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
460	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
461	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
462	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
463	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
465	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
466	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
467	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
468	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
469	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
470	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
471	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
472	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
473	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
474	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
475	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
476	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
477	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
478	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
479	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
480	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
481	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
482	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
483	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
484	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
485	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
486	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
487	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
488	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
489	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
490	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
491	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
492	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
493	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
494	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
495	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
496	"round"	"round"	"sql"	0	1	false	false	false	0
497	"round"	"round"	"sql"	0	1	false	false	false	0
498	"round"	"round"	"sql"	0	1	false	false	false	0
499	"round"	"round"	"sql"	0	1	false	false	false	0
500	"round"	"round"	"sql"	0	1	false	false	false	0
501	"round"	"round"	"sql"	0	1	false	false	false	0
502	"round"	"round"	"sql"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"power"	"pow"	"mmath"	0	1	false	false	false	0
988	"floor"	"floor"	"mmath"	0	1	false	false	false	0
989	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
990	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
991	"sin"	"sin"	"mmath"	0	1	false	false	false	0
992	"cos"	"cos"	"mmath"	0	1	false	false	false	0
993	"tan"	"tan"	"mmath"	0	1	false	false	false	0
994	"asin"	"asin"	"mmath"	0	1	false	false	false	0
995	"acos"	"acos"	"mmath"	0	1	false	false	false	0
996	"atan"	"atan"	"mmath"	0	1	false	false	false	0
997	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
998	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
999	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1000	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1001	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1002	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1003	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1004	"log"	"log"	"mmath"	0	1	false	false	false	0
1005	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1006	"power"	"pow"	"mmath"	0	1	false	false	false	0
1007	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1008	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1009	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1010	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1011	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1012	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1013	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1014	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1015	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1016	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1017	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1018	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1019	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1020	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1021	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1022	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1023	"log"	"log"	"mmath"	0	1	false	false	false	0
1024	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1025	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1026	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1027	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1028	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1029	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1030	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1031	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1032	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1033	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1034	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1035	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1036	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1037	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1038	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1039	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1040	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1041	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1042	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1043	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1044	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1045	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1046	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1047	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1048	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1049	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1050	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1051	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1052	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1053	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1054	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1055	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1056	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1057	"year"	"year"	"mtime"	0	1	false	false	false	0
1058	"month"	"month"	"mtime"	0	1	false	false	false	0
1059	"day"	"day"	"mtime"	0	1	false	false	false	0
1060	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1061	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1062	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1063	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1064	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1065	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1066	"year"	"year"	"mtime"	0	1	false	false	false	0
1067	"month"	"month"	"mtime"	0	1	false	false	false	0
1068	"day"	"day"	"mtime"	0	1	false	false	false	0
1069	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1070	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1071	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1072	"year"	"year"	"mtime"	0	1	false	false	false	0
1073	"month"	"month"	"mtime"	0	1	false	false	false	0
1074	"day"	"day"	"mtime"	0	1	false	false	false	0
1075	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1076	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1077	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1078	"year"	"year"	"mtime"	0	1	false	false	false	0
1079	"month"	"month"	"mtime"	0	1	false	false	false	0
1080	"day"	"day"	"mtime"	0	1	false	false	false	0
1081	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1082	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1083	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1084	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1085	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1086	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1087	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1088	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1089	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1090	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1091	"restart"	"restart"	"sql"	0	1	false	false	false	0
1092	"index"	"index"	"calc"	0	1	false	false	false	0
1093	"index"	"index"	"calc"	0	1	false	false	false	0
1094	"index"	"index"	"calc"	0	1	false	false	false	0
1095	"strings"	"strings"	"calc"	0	1	false	false	false	0
1096	"locate"	"locate"	"str"	0	1	false	false	false	0
1097	"locate"	"locate"	"str"	0	1	false	false	false	0
1098	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1099	"substring"	"substring"	"str"	0	1	false	false	false	0
1100	"substring"	"substring"	"str"	0	1	false	false	false	0
1101	"like"	"like"	"algebra"	0	1	false	false	false	0
1102	"like"	"like"	"algebra"	0	1	false	false	false	0
1103	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1104	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1105	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1106	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1107	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1108	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1109	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1110	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1111	"concat"	"+"	"calc"	0	1	false	false	false	0
1112	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1113	"code"	"unicode"	"str"	0	1	false	false	false	0
1114	"length"	"stringlength"	"str"	0	1	false	false	false	0
1115	"right"	"stringright"	"str"	0	1	false	false	false	0
1116	"left"	"stringleft"	"str"	0	1	false	false	false	0
1117	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1118	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1119	"lower"	"toLower"	"str"	0	1	false	false	false	0
1120	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1121	"trim"	"trim"	"str"	0	1	false	false	false	0
1122	"trim"	"trim"	"str"	0	1	false	false	false	0
1123	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1124	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1125	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1126	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1127	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1128	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1129	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1130	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1131	"insert"	"insert"	"str"	0	1	false	false	false	0
1132	"replace"	"replace"	"str"	0	1	false	false	false	0
1133	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1134	"space"	"space"	"str"	0	1	false	false	false	0
1135	"char_length"	"length"	"str"	0	1	false	false	false	0
1136	"character_length"	"length"	"str"	0	1	false	false	false	0
1137	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1138	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1139	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1140	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1141	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1142	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1143	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1144	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1145	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1146	"index"	"index"	"calc"	0	1	false	false	false	0
1147	"index"	"index"	"calc"	0	1	false	false	false	0
1148	"index"	"index"	"calc"	0	1	false	false	false	0
1149	"strings"	"strings"	"calc"	0	1	false	false	false	0
1150	"locate"	"locate"	"str"	0	1	false	false	false	0
1151	"locate"	"locate"	"str"	0	1	false	false	false	0
1152	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1153	"substring"	"substring"	"str"	0	1	false	false	false	0
1154	"substring"	"substring"	"str"	0	1	false	false	false	0
1155	"like"	"like"	"algebra"	0	1	false	false	false	0
1156	"like"	"like"	"algebra"	0	1	false	false	false	0
1157	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1158	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1159	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1160	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1161	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1162	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1163	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1164	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1165	"concat"	"+"	"calc"	0	1	false	false	false	0
1166	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1167	"code"	"unicode"	"str"	0	1	false	false	false	0
1168	"length"	"stringlength"	"str"	0	1	false	false	false	0
1169	"right"	"stringright"	"str"	0	1	false	false	false	0
1170	"left"	"stringleft"	"str"	0	1	false	false	false	0
1171	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1172	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1173	"lower"	"toLower"	"str"	0	1	false	false	false	0
1174	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1175	"trim"	"trim"	"str"	0	1	false	false	false	0
1176	"trim"	"trim"	"str"	0	1	false	false	false	0
1177	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1178	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1179	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1180	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1181	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1182	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1183	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1184	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1185	"insert"	"insert"	"str"	0	1	false	false	false	0
1186	"replace"	"replace"	"str"	0	1	false	false	false	0
1187	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1188	"space"	"space"	"str"	0	1	false	false	false	0
1189	"char_length"	"length"	"str"	0	1	false	false	false	0
1190	"character_length"	"length"	"str"	0	1	false	false	false	0
1191	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1192	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1193	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1194	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1195	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1196	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1197	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1198	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1199	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1200	"index"	"index"	"calc"	0	1	false	false	false	0
1201	"index"	"index"	"calc"	0	1	false	false	false	0
1202	"index"	"index"	"calc"	0	1	false	false	false	0
1203	"strings"	"strings"	"calc"	0	1	false	false	false	0
1204	"locate"	"locate"	"str"	0	1	false	false	false	0
1205	"locate"	"locate"	"str"	0	1	false	false	false	0
1206	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1207	"substring"	"substring"	"str"	0	1	false	false	false	0
1208	"substring"	"substring"	"str"	0	1	false	false	false	0
1209	"like"	"like"	"algebra"	0	1	false	false	false	0
1210	"like"	"like"	"algebra"	0	1	false	false	false	0
1211	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1212	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1213	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1214	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1215	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1216	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1217	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1218	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1219	"concat"	"+"	"calc"	0	1	false	false	false	0
1220	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1221	"code"	"unicode"	"str"	0	1	false	false	false	0
1222	"length"	"stringlength"	"str"	0	1	false	false	false	0
1223	"right"	"stringright"	"str"	0	1	false	false	false	0
1224	"left"	"stringleft"	"str"	0	1	false	false	false	0
1225	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1226	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1227	"lower"	"toLower"	"str"	0	1	false	false	false	0
1228	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1229	"trim"	"trim"	"str"	0	1	false	false	false	0
1230	"trim"	"trim"	"str"	0	1	false	false	false	0
1231	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1232	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1233	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1234	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1235	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1236	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1237	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1238	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1239	"insert"	"insert"	"str"	0	1	false	false	false	0
1240	"replace"	"replace"	"str"	0	1	false	false	false	0
1241	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1242	"space"	"space"	"str"	0	1	false	false	false	0
1243	"char_length"	"length"	"str"	0	1	false	false	false	0
1244	"character_length"	"length"	"str"	0	1	false	false	false	0
1245	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1246	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1247	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1248	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1249	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1250	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1251	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1252	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1253	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1254	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1255	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
29	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
41	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
42	"exist"	"exist"	"aggr"	0	3	false	false	false	0
43	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
48	"min"	"min"	"aggr"	0	3	false	false	false	0
49	"max"	"max"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"sum"	"sum"	"aggr"	0	3	false	false	false	0
61	"sum"	"sum"	"aggr"	0	3	false	false	false	0
62	"sum"	"sum"	"aggr"	0	3	false	false	false	0
63	"sum"	"sum"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
68	"prod"	"prod"	"aggr"	0	3	false	false	false	0
69	"prod"	"prod"	"aggr"	0	3	false	false	false	0
70	"prod"	"prod"	"aggr"	0	3	false	false	false	0
71	"prod"	"prod"	"aggr"	0	3	false	false	false	0
72	"prod"	"prod"	"aggr"	0	3	false	false	false	0
73	"prod"	"prod"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"prod"	"prod"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"prod"	"prod"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"sum"	"sum"	"aggr"	0	3	false	false	false	0
94	"avg"	"avg"	"aggr"	0	3	false	false	false	0
95	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
96	"count"	"count"	"aggr"	0	3	false	false	false	0
5684	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5687	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5693	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5713	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5718	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5723	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5727	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5731	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5735	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5739	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5742	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5746	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5750	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5754	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5758	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5762	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5766	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5770	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5774	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5778	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5782	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5786	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5790	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5794	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5798	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5805	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5811	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5816	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5821	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5826	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5831	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5836	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5842	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5846	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5850	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5854	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5859	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5863	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5867	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5871	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5875	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5879	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5884	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5889	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5894	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5899	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5909	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5959	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5961	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5963	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5966	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5968	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5998	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
6002	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
6005	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6009	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6013	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6017	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6021	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
6025	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
6029	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6033	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6038	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6043	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6048	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6053	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6058	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6063	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6068	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6073	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6078	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6083	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6088	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6093	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6098	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6103	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6108	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6113	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6118	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6122	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6138	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6141	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6145	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6148	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6152	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6155	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6162	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6167	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6173	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6179	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6184	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6189	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6193	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6197	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6201	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6205	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6208	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6218	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6226	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, htype string,\n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6240	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6244	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6264	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6267	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6270	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6273	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6276	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6279	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6282	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6294	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6296	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6300	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6304	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6308	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6312	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6316	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6320	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6324	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6328	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6332	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6336	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6340	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6344	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6348	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6352	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6356	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6360	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6364	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6368	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6372	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6376	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6380	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6384	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6388	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6392	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6396	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6400	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6404	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6408	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6412	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6416	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6420	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6424	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6428	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6432	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6436	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6440	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6444	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6448	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6452	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6456	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6460	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6464	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6468	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6472	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6476	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6480	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6484	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6488	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6492	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6496	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6500	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6505	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6510	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6515	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6520	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6525	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6530	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6535	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6540	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6545	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6550	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6555	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6560	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6565	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6570	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6575	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6580	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6585	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6590	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6594	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6598	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6602	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6606	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6610	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6615	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6633	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6637	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6642	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6647	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6652	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6657	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6662	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6667	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6672	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6677	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6682	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6687	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6691	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6695	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6699	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6704	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6708	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6712	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6716	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6720	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6724	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6728	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6732	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6737	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6742	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6747	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6752	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6757	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6762	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6767	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6773	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6778	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6784	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6788	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6792	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6797	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6802	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6806	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6811	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6816	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6821	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6828	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6825
6833	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6825
6838	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6825
6843	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6825
6848	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6825
6853	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6825
6857	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6825
6861	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6825
6865	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6825
6869	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6825
6873	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6825
6877	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6825
6881	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6825
6885	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6825
6889	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6825
6893	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6825
6897	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6825
6901	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6825
6905	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6825
6909	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6825
6913	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6825
6917	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6825
6921	"filter"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6825
6926	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6931	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6934	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6938	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6942	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6968	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6971	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6974	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6977	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7013	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7016	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7020	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7064	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7066	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7072	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7078	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7083	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7088	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7135	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7139	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7144	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7150	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7157	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7161	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7166	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7171	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7176	"fuse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7182	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7180
7187	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7180
7192	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7180
7196	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7180
7200	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7180
7205	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7180
7209	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7180
7213	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7180
7217	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7180
7220	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7180
7290	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7295	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7301	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7306	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7312	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7317	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7323	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7328	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7334	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7340	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7346	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7352	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7358	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7363	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6949	6950	0	"keywords_keyword_pkey"
6954	6958	0	"table_types_table_type_id_pkey"
6957	6958	0	"table_types_table_type_name_unique"
6962	6966	0	"dependency_types_dependency_type_id_pkey"
6965	6966	0	"dependency_types_dependency_type_name_unique"
7230	7231	0	"files_pkey_file_id"
7241	7244	0	"sq_pkey_sn_file_id"
7243	7244	1	"sq_fkey_file_id"
7260	7263	0	"rg_pkey_id_file_id"
7262	7263	1	"rg_fkey_file_id"
7272	7275	0	"pg_pkey_id_file_id"
7274	7275	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6948	6950	0	"keywords_keyword_pkey"	-1	-1
6953	6958	0	"table_types_table_type_id_pkey"	-1	-1
6956	6958	1	"table_types_table_type_name_unique"	-1	-1
6961	6966	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6964	6966	1	"dependency_types_dependency_type_name_unique"	-1	-1
7229	7231	0	"files_pkey_file_id"	-1	-1
7240	7244	0	"sq_pkey_sn_file_id"	-1	-1
7242	7244	2	"sq_fkey_file_id"	7229	514
7259	7263	0	"rg_pkey_id_file_id"	-1	-1
7261	7263	2	"rg_fkey_file_id"	7229	514
7271	7275	0	"pg_pkey_id_file_id"	-1	-1
7273	7275	2	"pg_fkey_file_id"	7229	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6949	"keyword"	0
6948	"keyword"	0
6954	"table_type_id"	0
6957	"table_type_name"	0
6953	"table_type_id"	0
6956	"table_type_name"	0
6962	"dependency_type_id"	0
6965	"dependency_type_name"	0
6961	"dependency_type_id"	0
6964	"dependency_type_name"	0
7230	"file_id"	0
7229	"file_id"	0
7241	"sn"	0
7241	"file_id"	1
7243	"file_id"	0
7240	"sn"	0
7240	"file_id"	1
7242	"file_id"	0
7260	"id"	0
7260	"file_id"	1
7262	"file_id"	0
7259	"id"	0
7259	"file_id"	1
7261	"file_id"	0
7272	"id"	0
7272	"file_id"	1
7274	"file_id"	0
7271	"id"	0
7271	"file_id"	1
7273	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5663	1	1	0	0
5673	1	1	0	0
5699	1	1	0	0
5702	1	1	0	0
5706	1	1	0	0
7370	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6825	"json"	3	3	true
7180	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1527 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
44
45
46
47
50
51
52
74
75
76
77
78
79
80
81
82
83
84
85
86
87
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
29
41
42
43
48
49
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
88
89
90
91
92
93
94
95
96
5684
5687
5693
5713
5718
5723
5727
5731
5735
5739
5742
5746
5750
5754
5758
5762
5766
5770
5774
5778
5782
5786
5790
5794
5798
5805
5811
5816
5821
5826
5831
5836
5842
5846
5850
5854
5859
5863
5867
5871
5875
5879
5884
5889
5894
5899
5909
5959
5961
5963
5966
5968
5998
6002
6005
6009
6013
6017
6021
6025
6029
6033
6038
6043
6048
6053
6058
6063
6068
6073
6078
6083
6088
6093
6098
6103
6108
6113
6118
6122
6138
6141
6145
6148
6152
6155
6162
6167
6173
6179
6184
6189
6193
6197
6201
6205
6208
6218
6226
6240
6244
6264
6267
6270
6273
6276
6279
6282
6294
6296
6300
6304
6308
6312
6316
6320
6324
6328
6332
6336
6340
6344
6348
6352
6356
6360
6364
6368
6372
6376
6380
6384
6388
6392
6396
6400
6404
6408
6412
6416
6420
6424
6428
6432
6436
6440
6444
6448
6452
6456
6460
6464
6468
6472
6476
6480
6484
6488
6492
6496
6500
6505
6510
6515
6520
6525
6530
6535
6540
6545
6550
6555
6560
6565
6570
6575
6580
6585
6590
6594
6598
6602
6606
6610
6615
6633
6637
6642
6647
6652
6657
6662
6667
6672
6677
6682
6687
6691
6695
6699
6704
6708
6712
6716
6720
6724
6728
6732
6737
6742
6747
6752
6757
6762
6767
6773
6778
6784
6788
6792
6797
6802
6806
6811
6816
6821
6828
6833
6838
6843
6848
6853
6857
6861
6865
6869
6873
6877
6881
6885
6889
6893
6897
6901
6905
6909
6913
6917
6921
6926
6931
6934
6938
6942
6968
6971
6974
6977
7013
7016
7020
7064
7066
7072
7078
7083
7088
7135
7139
7144
7150
7157
7161
7166
7171
7176
7182
7187
7192
7196
7200
7205
7209
7213
7217
7220
7290
7295
7301
7306
7312
7317
7323
7328
7334
7340
7346
7352
7358
7363
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 46 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"hge"	"hugeint"	128	1	2	7	0
14	"bte"	"decimal"	2	1	10	10	0
15	"sht"	"decimal"	4	1	10	10	0
16	"int"	"decimal"	9	1	10	10	0
17	"lng"	"decimal"	18	1	10	10	0
18	"hge"	"decimal"	39	1	10	10	0
19	"flt"	"real"	24	2	2	11	0
20	"dbl"	"double"	53	2	2	11	0
21	"int"	"month_interval"	32	0	2	8	0
22	"lng"	"sec_interval"	13	1	10	9	0
23	"daytime"	"time"	7	0	0	12	0
24	"daytime"	"timetz"	7	1	0	12	0
25	"date"	"date"	0	0	0	13	0
26	"timestamp"	"timestamp"	7	0	0	14	0
27	"timestamp"	"timestamptz"	7	1	0	14	0
28	"sqlblob"	"blob"	0	0	0	5	0
5740	"url"	"url"	0	0	0	15	2000
5840	"inet"	"inet"	0	0	0	15	2000
6619	"wkb"	"point"	0	0	0	15	2000
6620	"wkb"	"curve"	0	0	0	15	2000
6621	"wkb"	"linestring"	0	0	0	15	2000
6622	"wkb"	"surface"	0	0	0	15	2000
6623	"wkb"	"polygon"	0	0	0	15	2000
6624	"wkb"	"multipoint"	0	0	0	15	2000
6625	"wkb"	"multicurve"	0	0	0	15	2000
6626	"wkb"	"multilinestring"	0	0	0	15	2000
6627	"wkb"	"multisurface"	0	0	0	15	2000
6628	"wkb"	"multipolygon"	0	0	0	15	2000
6629	"wkb"	"geometry"	0	0	0	15	2000
6630	"wkb"	"geomcollection"	0	0	0	15	2000
6631	"mbr"	"mbr"	0	0	0	15	2000
6826	"json"	"json"	0	0	0	15	2000
6929	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

