stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- assume milliseconds when converted to TIMESTAMP
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
-- gr_name is "GLOBAL" or "ROOT" for classic NetCDF files
-- used for groups in HDF5 files
-- global attributes have obj_name=""

-- create function netcdfvar (fname varchar(256)) 
--	returns int external name netcdf.test;

create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- COPY into reject management

create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5688	"id"	"int"	32	0	5687	NULL	true	0	NULL
5689	"name"	"varchar"	1024	0	5687	NULL	true	1	NULL
5690	"schema_id"	"int"	32	0	5687	NULL	true	2	NULL
5691	"query"	"varchar"	2048	0	5687	NULL	true	3	NULL
5692	"type"	"smallint"	16	0	5687	NULL	true	4	NULL
5693	"system"	"boolean"	1	0	5687	NULL	true	5	NULL
5694	"commit_action"	"smallint"	16	0	5687	NULL	true	6	NULL
5695	"access"	"smallint"	16	0	5687	NULL	true	7	NULL
5696	"temporary"	"smallint"	16	0	5687	NULL	true	8	NULL
5698	"id"	"int"	32	0	5697	NULL	true	0	NULL
5699	"name"	"varchar"	1024	0	5697	NULL	true	1	NULL
5700	"type"	"varchar"	1024	0	5697	NULL	true	2	NULL
5701	"type_digits"	"int"	32	0	5697	NULL	true	3	NULL
5702	"type_scale"	"int"	32	0	5697	NULL	true	4	NULL
5703	"table_id"	"int"	32	0	5697	NULL	true	5	NULL
5704	"default"	"varchar"	2048	0	5697	NULL	true	6	NULL
5705	"null"	"boolean"	1	0	5697	NULL	true	7	NULL
5706	"number"	"int"	32	0	5697	NULL	true	8	NULL
5707	"storage"	"varchar"	2048	0	5697	NULL	true	9	NULL
5714	"name"	"varchar"	1024	0	5713	NULL	true	0	NULL
5715	"fullname"	"varchar"	2048	0	5713	NULL	true	1	NULL
5716	"default_schema"	"int"	9	0	5713	NULL	true	2	NULL
5720	"name"	"varchar"	1024	0	5719	NULL	true	0	NULL
5721	"fullname"	"varchar"	2024	0	5719	NULL	true	1	NULL
5722	"default_schema"	"int"	9	0	5719	NULL	true	2	NULL
5724	"login_id"	"int"	32	0	5723	NULL	true	0	NULL
5725	"role_id"	"int"	32	0	5723	NULL	true	1	NULL
5727	"id"	"int"	32	0	5726	NULL	true	0	NULL
5728	"name"	"varchar"	1024	0	5726	NULL	true	1	NULL
5729	"grantor"	"int"	32	0	5726	NULL	true	2	NULL
5731	"obj_id"	"int"	32	0	5730	NULL	true	0	NULL
5732	"auth_id"	"int"	32	0	5730	NULL	true	1	NULL
5733	"privileges"	"int"	32	0	5730	NULL	true	2	NULL
5734	"grantor"	"int"	32	0	5730	NULL	true	3	NULL
5735	"grantable"	"int"	32	0	5730	NULL	true	4	NULL
5944	"id"	"oid"	63	0	5952	NULL	true	0	NULL
5945	"owner"	"clob"	0	0	5952	NULL	true	1	NULL
5946	"defined"	"timestamp"	7	0	5952	NULL	true	2	NULL
5947	"query"	"clob"	0	0	5952	NULL	true	3	NULL
5948	"pipe"	"clob"	0	0	5952	NULL	true	4	NULL
5949	"plan"	"clob"	0	0	5952	NULL	true	5	NULL
5950	"mal"	"int"	32	0	5952	NULL	true	6	NULL
5951	"optimize"	"bigint"	64	0	5952	NULL	true	7	NULL
5954	"id"	"oid"	63	0	5963	NULL	true	0	NULL
5955	"start"	"timestamp"	7	0	5963	NULL	true	1	NULL
5956	"stop"	"timestamp"	7	0	5963	NULL	true	2	NULL
5957	"arguments"	"clob"	0	0	5963	NULL	true	3	NULL
5958	"tuples"	"wrd"	64	0	5963	NULL	true	4	NULL
5959	"run"	"bigint"	64	0	5963	NULL	true	5	NULL
5960	"ship"	"bigint"	64	0	5963	NULL	true	6	NULL
5961	"cpu"	"int"	32	0	5963	NULL	true	7	NULL
5962	"io"	"int"	32	0	5963	NULL	true	8	NULL
5965	"id"	"oid"	63	0	5981	NULL	true	0	NULL
5966	"owner"	"clob"	0	0	5981	NULL	true	1	NULL
5967	"defined"	"timestamp"	7	0	5981	NULL	true	2	NULL
5968	"query"	"clob"	0	0	5981	NULL	true	3	NULL
5969	"pipe"	"clob"	0	0	5981	NULL	true	4	NULL
5970	"plan"	"clob"	0	0	5981	NULL	true	5	NULL
5971	"mal"	"int"	32	0	5981	NULL	true	6	NULL
5972	"optimize"	"bigint"	64	0	5981	NULL	true	7	NULL
5973	"start"	"timestamp"	7	0	5981	NULL	true	8	NULL
5974	"stop"	"timestamp"	7	0	5981	NULL	true	9	NULL
5975	"arguments"	"clob"	0	0	5981	NULL	true	10	NULL
5976	"tuples"	"wrd"	64	0	5981	NULL	true	11	NULL
5977	"run"	"bigint"	64	0	5981	NULL	true	12	NULL
5978	"ship"	"bigint"	64	0	5981	NULL	true	13	NULL
5979	"cpu"	"int"	32	0	5981	NULL	true	14	NULL
5980	"io"	"int"	32	0	5981	NULL	true	15	NULL
6007	"event"	"int"	32	0	6020	NULL	true	0	NULL
6008	"clk"	"varchar"	20	0	6020	NULL	true	1	NULL
6009	"pc"	"varchar"	50	0	6020	NULL	true	2	NULL
6010	"thread"	"int"	32	0	6020	NULL	true	3	NULL
6011	"ticks"	"bigint"	64	0	6020	NULL	true	4	NULL
6012	"rrsmb"	"bigint"	64	0	6020	NULL	true	5	NULL
6013	"vmmb"	"bigint"	64	0	6020	NULL	true	6	NULL
6014	"reads"	"bigint"	64	0	6020	NULL	true	7	NULL
6015	"writes"	"bigint"	64	0	6020	NULL	true	8	NULL
6016	"minflt"	"bigint"	64	0	6020	NULL	true	9	NULL
6017	"majflt"	"bigint"	64	0	6020	NULL	true	10	NULL
6018	"nvcsw"	"bigint"	64	0	6020	NULL	true	11	NULL
6019	"stmt"	"clob"	0	0	6020	NULL	true	12	NULL
6147	"user"	"clob"	0	0	6153	NULL	true	0	NULL
6148	"login"	"timestamp"	7	0	6153	NULL	true	1	NULL
6149	"sessiontimeout"	"bigint"	64	0	6153	NULL	true	2	NULL
6150	"lastcommand"	"timestamp"	7	0	6153	NULL	true	3	NULL
6151	"querytimeout"	"bigint"	64	0	6153	NULL	true	4	NULL
6152	"active"	"boolean"	1	0	6153	NULL	true	5	NULL
6230	"name"	"clob"	0	0	6233	NULL	true	0	NULL
6231	"def"	"clob"	0	0	6233	NULL	true	1	NULL
6232	"status"	"clob"	0	0	6233	NULL	true	2	NULL
6239	"name"	"clob"	0	0	6241	NULL	true	0	NULL
6240	"value"	"clob"	0	0	6241	NULL	true	1	NULL
6277	"qtag"	"bigint"	64	0	6285	NULL	true	0	NULL
6278	"user"	"clob"	0	0	6285	NULL	true	1	NULL
6279	"started"	"timestamp"	7	0	6285	NULL	true	2	NULL
6280	"estimate"	"timestamp"	7	0	6285	NULL	true	3	NULL
6281	"progress"	"int"	32	0	6285	NULL	true	4	NULL
6282	"status"	"clob"	0	0	6285	NULL	true	5	NULL
6283	"tag"	"oid"	63	0	6285	NULL	true	6	NULL
6284	"query"	"clob"	0	0	6285	NULL	true	7	NULL
6311	"rowid"	"bigint"	64	0	6315	NULL	true	0	NULL
6312	"fldid"	"int"	32	0	6315	NULL	true	1	NULL
6313	"message"	"clob"	0	0	6315	NULL	true	2	NULL
6314	"input"	"clob"	0	0	6315	NULL	true	3	NULL
6985	"keyword"	"varchar"	40	0	6988	NULL	false	0	NULL
6990	"table_type_id"	"smallint"	16	0	6996	NULL	false	0	NULL
6993	"table_type_name"	"varchar"	25	0	6996	NULL	false	1	NULL
6998	"dependency_type_id"	"smallint"	16	0	7004	NULL	false	0	NULL
7001	"dependency_type_name"	"varchar"	15	0	7004	NULL	false	1	NULL
7019	"file_id"	"int"	32	0	7021	NULL	true	0	NULL
7020	"location"	"char"	256	0	7021	NULL	true	1	NULL
7023	"dim_id"	"int"	32	0	7027	NULL	true	0	NULL
7024	"file_id"	"int"	32	0	7027	NULL	true	1	NULL
7025	"name"	"varchar"	64	0	7027	NULL	true	2	NULL
7026	"length"	"int"	32	0	7027	NULL	true	3	NULL
7029	"var_id"	"int"	32	0	7035	NULL	true	0	NULL
7030	"file_id"	"int"	32	0	7035	NULL	true	1	NULL
7031	"name"	"varchar"	64	0	7035	NULL	true	2	NULL
7032	"vartype"	"varchar"	64	0	7035	NULL	true	3	NULL
7033	"ndim"	"int"	32	0	7035	NULL	true	4	NULL
7034	"coord_dim_id"	"int"	32	0	7035	NULL	true	5	NULL
7037	"var_id"	"int"	32	0	7041	NULL	true	0	NULL
7038	"dim_id"	"int"	32	0	7041	NULL	true	1	NULL
7039	"file_id"	"int"	32	0	7041	NULL	true	2	NULL
7040	"dimpos"	"int"	32	0	7041	NULL	true	3	NULL
7043	"obj_name"	"varchar"	256	0	7049	NULL	true	0	NULL
7044	"att_name"	"varchar"	256	0	7049	NULL	true	1	NULL
7045	"att_type"	"varchar"	64	0	7049	NULL	true	2	NULL
7046	"value"	"clob"	0	0	7049	NULL	true	3	NULL
7047	"file_id"	"int"	32	0	7049	NULL	true	4	NULL
7048	"gr_name"	"varchar"	256	0	7049	NULL	true	5	NULL
7074	"schema"	"clob"	0	0	7088	NULL	true	0	NULL
7075	"table"	"clob"	0	0	7088	NULL	true	1	NULL
7076	"column"	"clob"	0	0	7088	NULL	true	2	NULL
7077	"type"	"clob"	0	0	7088	NULL	true	3	NULL
7078	"mode"	"clob"	0	0	7088	NULL	true	4	NULL
7079	"location"	"clob"	0	0	7088	NULL	true	5	NULL
7080	"count"	"bigint"	64	0	7088	NULL	true	6	NULL
7081	"typewidth"	"int"	32	0	7088	NULL	true	7	NULL
7082	"columnsize"	"bigint"	64	0	7088	NULL	true	8	NULL
7083	"heapsize"	"bigint"	64	0	7088	NULL	true	9	NULL
7084	"hashes"	"bigint"	64	0	7088	NULL	true	10	NULL
7085	"phash"	"boolean"	1	0	7088	NULL	true	11	NULL
7086	"imprints"	"bigint"	64	0	7088	NULL	true	12	NULL
7087	"sorted"	"boolean"	1	0	7088	NULL	true	13	NULL
7090	"schema"	"clob"	0	0	7100	NULL	true	0	NULL
7091	"table"	"clob"	0	0	7100	NULL	true	1	NULL
7092	"column"	"clob"	0	0	7100	NULL	true	2	NULL
7093	"type"	"clob"	0	0	7100	NULL	true	3	NULL
7094	"typewidth"	"int"	32	0	7100	NULL	true	4	NULL
7095	"count"	"bigint"	64	0	7100	NULL	true	5	NULL
7096	"distinct"	"bigint"	64	0	7100	NULL	true	6	NULL
7097	"atomwidth"	"int"	32	0	7100	NULL	true	7	NULL
7098	"reference"	"boolean"	1	0	7100	NULL	true	8	NULL
7099	"sorted"	"boolean"	1	0	7100	NULL	true	9	NULL
7138	"schema"	"clob"	0	0	7148	NULL	true	0	NULL
7139	"table"	"clob"	0	0	7148	NULL	true	1	NULL
7140	"column"	"clob"	0	0	7148	NULL	true	2	NULL
7141	"type"	"clob"	0	0	7148	NULL	true	3	NULL
7142	"count"	"bigint"	64	0	7148	NULL	true	4	NULL
7143	"columnsize"	"bigint"	64	0	7148	NULL	true	5	NULL
7144	"heapsize"	"bigint"	64	0	7148	NULL	true	6	NULL
7145	"hashes"	"bigint"	64	0	7148	NULL	true	7	NULL
7146	"imprints"	"bigint"	64	0	7148	NULL	true	8	NULL
7147	"sorted"	"boolean"	1	0	7148	NULL	true	9	NULL
7150	"schema"	"clob"	0	0	7158	NULL	true	0	NULL
7151	"table"	"clob"	0	0	7158	NULL	true	1	NULL
7152	"count"	"bigint"	64	0	7158	NULL	true	2	NULL
7153	"columnsize"	"hugeint"	128	0	7158	NULL	true	3	NULL
7154	"heapsize"	"hugeint"	128	0	7158	NULL	true	4	NULL
7155	"hashes"	"hugeint"	128	0	7158	NULL	true	5	NULL
7156	"imprints"	"hugeint"	128	0	7158	NULL	true	6	NULL
7157	"auxiliary"	"hugeint"	128	0	7158	NULL	true	7	NULL
7160	"column_id"	"int"	32	0	7171	NULL	true	0	NULL
7161	"type"	"clob"	0	0	7171	NULL	true	1	NULL
7162	"width"	"int"	32	0	7171	NULL	true	2	NULL
7163	"stamp"	"timestamp"	7	0	7171	NULL	true	3	NULL
7164	"sample"	"bigint"	64	0	7171	NULL	true	4	NULL
7165	"count"	"bigint"	64	0	7171	NULL	true	5	NULL
7166	"unique"	"bigint"	64	0	7171	NULL	true	6	NULL
7167	"nils"	"bigint"	64	0	7171	NULL	true	7	NULL
7168	"minval"	"clob"	0	0	7171	NULL	true	8	NULL
7169	"maxval"	"clob"	0	0	7171	NULL	true	9	NULL
7170	"sorted"	"boolean"	1	0	7171	NULL	true	10	NULL
7261	"file_id"	"bigint"	64	0	7269	NULL	false	0	NULL
7262	"file_location"	"clob"	0	0	7269	NULL	false	1	NULL
7263	"dbschema"	"smallint"	16	0	7269	NULL	false	2	NULL
7264	"format_version"	"varchar"	7	0	7269	NULL	true	3	NULL
7265	"sorting_order"	"varchar"	10	0	7269	NULL	true	4	NULL
7266	"comments"	"clob"	0	0	7269	NULL	true	5	NULL
7271	"sn"	"clob"	0	0	7282	NULL	false	0	NULL
7272	"file_id"	"bigint"	64	0	7282	NULL	false	1	NULL
7273	"ln"	"int"	32	0	7282	NULL	true	2	NULL
7274	"as"	"int"	32	0	7282	NULL	true	3	NULL
7275	"m5"	"clob"	0	0	7282	NULL	true	4	NULL
7276	"sp"	"clob"	0	0	7282	NULL	true	5	NULL
7277	"ur"	"clob"	0	0	7282	NULL	true	6	NULL
7284	"id"	"clob"	0	0	7301	NULL	false	0	NULL
7285	"file_id"	"bigint"	64	0	7301	NULL	false	1	NULL
7286	"cn"	"clob"	0	0	7301	NULL	true	2	NULL
7287	"ds"	"clob"	0	0	7301	NULL	true	3	NULL
7288	"dt"	"timestamp"	7	0	7301	NULL	true	4	NULL
7289	"fo"	"clob"	0	0	7301	NULL	true	5	NULL
7290	"ks"	"clob"	0	0	7301	NULL	true	6	NULL
7291	"lb"	"clob"	0	0	7301	NULL	true	7	NULL
7292	"pg"	"clob"	0	0	7301	NULL	true	8	NULL
7293	"pi"	"int"	32	0	7301	NULL	true	9	NULL
7294	"pl"	"clob"	0	0	7301	NULL	true	10	NULL
7295	"pu"	"clob"	0	0	7301	NULL	true	11	NULL
7296	"sm"	"clob"	0	0	7301	NULL	true	12	NULL
7303	"id"	"clob"	0	0	7313	NULL	false	0	NULL
7304	"file_id"	"bigint"	64	0	7313	NULL	false	1	NULL
7305	"pn"	"clob"	0	0	7313	NULL	true	2	NULL
7306	"cl"	"clob"	0	0	7313	NULL	true	3	NULL
7307	"pp"	"clob"	0	0	7313	NULL	true	4	NULL
7308	"vn"	"clob"	0	0	7313	NULL	true	5	NULL
7315	"qname"	"clob"	0	0	7326	NULL	false	0	NULL
7316	"flag"	"smallint"	16	0	7326	NULL	false	1	NULL
7317	"rname"	"clob"	0	0	7326	NULL	false	2	NULL
7318	"pos"	"int"	32	0	7326	NULL	false	3	NULL
7319	"mapq"	"smallint"	16	0	7326	NULL	false	4	NULL
7320	"cigar"	"clob"	0	0	7326	NULL	false	5	NULL
7321	"rnext"	"clob"	0	0	7326	NULL	false	6	NULL
7322	"pnext"	"int"	32	0	7326	NULL	false	7	NULL
7323	"tlen"	"int"	32	0	7326	NULL	false	8	NULL
7324	"seq"	"clob"	0	0	7326	NULL	false	9	NULL
7325	"qual"	"clob"	0	0	7326	NULL	false	10	NULL
7407	"function_id"	"int"	32	0	7408	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5687	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5697	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5713	"db_user_info"	2000	NULL	0	true	0	0
5719	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5723	"user_role"	2000	NULL	0	true	0	0
5726	"auths"	2000	NULL	0	true	0	0
5730	"privileges"	2000	NULL	0	true	0	0
5952	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5963	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5981	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
6020	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6153	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6233	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6241	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6285	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6315	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6988	"keywords"	2000	NULL	0	true	0	0
6996	"table_types"	2000	NULL	0	true	0	0
7004	"dependency_types"	2000	NULL	0	true	0	0
7021	"netcdf_files"	2000	NULL	0	true	0	0
7027	"netcdf_dims"	2000	NULL	0	true	0	0
7035	"netcdf_vars"	2000	NULL	0	true	0	0
7041	"netcdf_vardim"	2000	NULL	0	true	0	0
7049	"netcdf_attrs"	2000	NULL	0	true	0	0
7088	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7100	"storagemodelinput"	2000	NULL	0	true	0	0
7148	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7158	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7171	"statistics"	2000	NULL	0	true	0	0
7269	"files"	7218	NULL	0	true	0	0
7282	"sq"	7218	NULL	0	true	0	0
7301	"rg"	7218	NULL	0	true	0	0
7313	"pg"	7218	NULL	0	true	0	0
7326	"export"	7218	NULL	0	true	0	0
7408	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4312 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"oid"	63	0	0	0
2156	30	"arg_1"	"wrd"	64	0	1	1
2157	31	"res_0"	"oid"	63	0	0	0
2158	31	"arg_1"	"oid"	63	0	1	1
2159	32	"res_0"	"wrd"	64	0	0	0
2160	32	"arg_1"	"any"	0	0	1	1
2161	33	"res_0"	"wrd"	64	0	0	0
2162	33	"arg_1"	"wrd"	64	0	1	1
2163	33	"arg_2"	"int"	32	0	1	2
2164	33	"arg_3"	"any"	0	0	1	3
2165	34	"res_0"	"boolean"	1	0	0	0
2166	34	"arg_1"	"any"	0	0	1	1
2167	34	"arg_2"	"any"	0	0	1	2
2168	35	"res_0"	"boolean"	1	0	0	0
2169	35	"arg_1"	"any"	0	0	1	1
2170	35	"arg_2"	"any"	0	0	1	2
2171	36	"res_0"	"boolean"	1	0	0	0
2172	36	"arg_1"	"any"	0	0	1	1
2173	37	"res_0"	"boolean"	1	0	0	0
2174	37	"arg_1"	"any"	0	0	1	1
2175	37	"arg_2"	"any"	0	0	1	2
2176	38	"res_0"	"boolean"	1	0	0	0
2177	38	"arg_1"	"any"	0	0	1	1
2178	38	"arg_2"	"any"	0	0	1	2
2179	39	"res_0"	"boolean"	1	0	0	0
2180	39	"arg_1"	"any"	0	0	1	1
2181	39	"arg_2"	"any"	0	0	1	2
2182	40	"res_0"	"boolean"	1	0	0	0
2183	40	"arg_1"	"any"	0	0	1	1
2184	40	"arg_2"	"any"	0	0	1	2
2185	44	"res_0"	"boolean"	1	0	0	0
2186	44	"arg_1"	"any"	0	0	1	1
2187	44	"arg_2"	"any"	0	0	1	2
2188	45	"res_0"	"oid"	63	0	0	0
2189	45	"arg_1"	"any"	0	0	1	1
2190	46	"res_0"	"int"	32	0	0	0
2191	46	"arg_1"	"any"	0	0	1	1
2192	47	"res_0"	"oid"	63	0	0	0
2193	47	"arg_1"	"any"	0	0	1	1
2194	47	"arg_2"	"varchar"	0	0	1	2
2195	47	"arg_3"	"varchar"	0	0	1	3
2196	50	"res_0"	"any"	0	0	0	0
2197	50	"arg_1"	"any"	0	0	1	1
2198	50	"arg_2"	"any"	0	0	1	2
2199	51	"res_0"	"any"	0	0	0	0
2200	51	"arg_1"	"any"	0	0	1	1
2201	51	"arg_2"	"any"	0	0	1	2
2202	52	"res_0"	"any"	0	0	0	0
2203	52	"arg_1"	"boolean"	1	0	1	1
2204	52	"arg_2"	"any"	0	0	1	2
2205	52	"arg_3"	"any"	0	0	1	3
2206	74	"res_0"	"oid"	63	0	0	0
2207	74	"arg_1"	"oid"	63	0	1	1
2208	74	"arg_2"	"oid"	63	0	1	2
2209	75	"res_0"	"tinyint"	8	0	0	0
2210	75	"arg_1"	"tinyint"	8	0	1	1
2211	75	"arg_2"	"tinyint"	8	0	1	2
2212	76	"res_0"	"smallint"	16	0	0	0
2213	76	"arg_1"	"smallint"	16	0	1	1
2214	76	"arg_2"	"smallint"	16	0	1	2
2215	77	"res_0"	"int"	32	0	0	0
2216	77	"arg_1"	"int"	32	0	1	1
2217	77	"arg_2"	"int"	32	0	1	2
2218	78	"res_0"	"bigint"	64	0	0	0
2219	78	"arg_1"	"bigint"	64	0	1	1
2220	78	"arg_2"	"bigint"	64	0	1	2
2221	79	"res_0"	"wrd"	64	0	0	0
2222	79	"arg_1"	"wrd"	64	0	1	1
2223	79	"arg_2"	"wrd"	64	0	1	2
2224	80	"res_0"	"hugeint"	128	0	0	0
2225	80	"arg_1"	"hugeint"	128	0	1	1
2226	80	"arg_2"	"hugeint"	128	0	1	2
2227	81	"res_0"	"decimal"	2	0	0	0
2228	81	"arg_1"	"decimal"	2	0	1	1
2229	81	"arg_2"	"decimal"	2	0	1	2
2230	82	"res_0"	"decimal"	4	0	0	0
2231	82	"arg_1"	"decimal"	4	0	1	1
2232	82	"arg_2"	"decimal"	4	0	1	2
2233	83	"res_0"	"decimal"	9	0	0	0
2234	83	"arg_1"	"decimal"	9	0	1	1
2235	83	"arg_2"	"decimal"	9	0	1	2
2236	84	"res_0"	"decimal"	18	0	0	0
2237	84	"arg_1"	"decimal"	18	0	1	1
2238	84	"arg_2"	"decimal"	18	0	1	2
2239	85	"res_0"	"decimal"	39	0	0	0
2240	85	"arg_1"	"decimal"	39	0	1	1
2241	85	"arg_2"	"decimal"	39	0	1	2
2242	86	"res_0"	"real"	24	0	0	0
2243	86	"arg_1"	"real"	24	0	1	1
2244	86	"arg_2"	"real"	24	0	1	2
2245	87	"res_0"	"double"	53	0	0	0
2246	87	"arg_1"	"double"	53	0	1	1
2247	87	"arg_2"	"double"	53	0	1	2
2248	97	"res_0"	"boolean"	1	0	0	0
2249	97	"arg_1"	"any"	0	0	1	1
2250	98	"res_0"	"boolean"	1	0	0	0
2251	98	"arg_1"	"boolean"	1	0	1	1
2252	98	"arg_2"	"any"	0	0	1	2
2253	99	"res_0"	"int"	32	0	0	0
2254	99	"arg_1"	"any"	0	0	1	1
2255	99	"arg_2"	"boolean"	1	0	1	2
2256	99	"arg_3"	"boolean"	1	0	1	3
2257	100	"res_0"	"int"	32	0	0	0
2258	100	"arg_1"	"any"	0	0	1	1
2259	100	"arg_2"	"boolean"	1	0	1	2
2260	100	"arg_3"	"boolean"	1	0	1	3
2261	101	"res_0"	"int"	32	0	0	0
2262	101	"arg_1"	"any"	0	0	1	1
2263	101	"arg_2"	"boolean"	1	0	1	2
2264	101	"arg_3"	"boolean"	1	0	1	3
2265	102	"res_0"	"boolean"	1	0	0	0
2266	102	"arg_1"	"boolean"	1	0	1	1
2267	102	"arg_2"	"boolean"	1	0	1	2
2268	103	"res_0"	"boolean"	1	0	0	0
2269	103	"arg_1"	"boolean"	1	0	1	1
2270	103	"arg_2"	"boolean"	1	0	1	2
2271	104	"res_0"	"boolean"	1	0	0	0
2272	104	"arg_1"	"boolean"	1	0	1	1
2273	104	"arg_2"	"boolean"	1	0	1	2
2274	105	"res_0"	"boolean"	1	0	0	0
2275	105	"arg_1"	"boolean"	1	0	1	1
2276	106	"res_0"	"smallint"	16	0	0	0
2277	106	"arg_1"	"smallint"	16	0	1	1
2278	106	"arg_2"	"tinyint"	8	0	1	2
2279	107	"res_0"	"smallint"	16	0	0	0
2280	107	"arg_1"	"smallint"	16	0	1	1
2281	107	"arg_2"	"tinyint"	8	0	1	2
2282	108	"res_0"	"int"	32	0	0	0
2283	108	"arg_1"	"int"	32	0	1	1
2284	108	"arg_2"	"tinyint"	8	0	1	2
2285	109	"res_0"	"int"	32	0	0	0
2286	109	"arg_1"	"int"	32	0	1	1
2287	109	"arg_2"	"tinyint"	8	0	1	2
2288	110	"res_0"	"int"	32	0	0	0
2289	110	"arg_1"	"int"	32	0	1	1
2290	110	"arg_2"	"smallint"	16	0	1	2
2291	111	"res_0"	"int"	32	0	0	0
2292	111	"arg_1"	"int"	32	0	1	1
2293	111	"arg_2"	"smallint"	16	0	1	2
2294	112	"res_0"	"bigint"	64	0	0	0
2295	112	"arg_1"	"bigint"	64	0	1	1
2296	112	"arg_2"	"tinyint"	8	0	1	2
2297	113	"res_0"	"bigint"	64	0	0	0
2298	113	"arg_1"	"bigint"	64	0	1	1
2299	113	"arg_2"	"tinyint"	8	0	1	2
2300	114	"res_0"	"bigint"	64	0	0	0
2301	114	"arg_1"	"bigint"	64	0	1	1
2302	114	"arg_2"	"smallint"	16	0	1	2
2303	115	"res_0"	"bigint"	64	0	0	0
2304	115	"arg_1"	"bigint"	64	0	1	1
2305	115	"arg_2"	"smallint"	16	0	1	2
2306	116	"res_0"	"bigint"	64	0	0	0
2307	116	"arg_1"	"bigint"	64	0	1	1
2308	116	"arg_2"	"int"	32	0	1	2
2309	117	"res_0"	"bigint"	64	0	0	0
2310	117	"arg_1"	"bigint"	64	0	1	1
2311	117	"arg_2"	"int"	32	0	1	2
2312	118	"res_0"	"bigint"	64	0	0	0
2313	118	"arg_1"	"bigint"	64	0	1	1
2314	118	"arg_2"	"wrd"	64	0	1	2
2315	119	"res_0"	"bigint"	64	0	0	0
2316	119	"arg_1"	"bigint"	64	0	1	1
2317	119	"arg_2"	"wrd"	64	0	1	2
2318	120	"res_0"	"wrd"	64	0	0	0
2319	120	"arg_1"	"wrd"	64	0	1	1
2320	120	"arg_2"	"tinyint"	8	0	1	2
2321	121	"res_0"	"wrd"	64	0	0	0
2322	121	"arg_1"	"wrd"	64	0	1	1
2323	121	"arg_2"	"tinyint"	8	0	1	2
2324	122	"res_0"	"wrd"	64	0	0	0
2325	122	"arg_1"	"wrd"	64	0	1	1
2326	122	"arg_2"	"smallint"	16	0	1	2
2327	123	"res_0"	"wrd"	64	0	0	0
2328	123	"arg_1"	"wrd"	64	0	1	1
2329	123	"arg_2"	"smallint"	16	0	1	2
2330	124	"res_0"	"wrd"	64	0	0	0
2331	124	"arg_1"	"wrd"	64	0	1	1
2332	124	"arg_2"	"int"	32	0	1	2
2333	125	"res_0"	"wrd"	64	0	0	0
2334	125	"arg_1"	"wrd"	64	0	1	1
2335	125	"arg_2"	"int"	32	0	1	2
2336	126	"res_0"	"hugeint"	128	0	0	0
2337	126	"arg_1"	"hugeint"	128	0	1	1
2338	126	"arg_2"	"tinyint"	8	0	1	2
2339	127	"res_0"	"hugeint"	128	0	0	0
2340	127	"arg_1"	"hugeint"	128	0	1	1
2341	127	"arg_2"	"tinyint"	8	0	1	2
2342	128	"res_0"	"hugeint"	128	0	0	0
2343	128	"arg_1"	"hugeint"	128	0	1	1
2344	128	"arg_2"	"smallint"	16	0	1	2
2345	129	"res_0"	"hugeint"	128	0	0	0
2346	129	"arg_1"	"hugeint"	128	0	1	1
2347	129	"arg_2"	"smallint"	16	0	1	2
2348	130	"res_0"	"hugeint"	128	0	0	0
2349	130	"arg_1"	"hugeint"	128	0	1	1
2350	130	"arg_2"	"int"	32	0	1	2
2351	131	"res_0"	"hugeint"	128	0	0	0
2352	131	"arg_1"	"hugeint"	128	0	1	1
2353	131	"arg_2"	"int"	32	0	1	2
2354	132	"res_0"	"hugeint"	128	0	0	0
2355	132	"arg_1"	"hugeint"	128	0	1	1
2356	132	"arg_2"	"bigint"	64	0	1	2
2357	133	"res_0"	"hugeint"	128	0	0	0
2358	133	"arg_1"	"hugeint"	128	0	1	1
2359	133	"arg_2"	"bigint"	64	0	1	2
2360	134	"res_0"	"hugeint"	128	0	0	0
2361	134	"arg_1"	"hugeint"	128	0	1	1
2362	134	"arg_2"	"wrd"	64	0	1	2
2363	135	"res_0"	"hugeint"	128	0	0	0
2364	135	"arg_1"	"hugeint"	128	0	1	1
2365	135	"arg_2"	"wrd"	64	0	1	2
2366	136	"res_0"	"oid"	63	0	0	0
2367	136	"arg_1"	"oid"	63	0	1	1
2368	136	"arg_2"	"oid"	63	0	1	2
2369	137	"res_0"	"oid"	63	0	0	0
2370	137	"arg_1"	"oid"	63	0	1	1
2371	137	"arg_2"	"oid"	63	0	1	2
2372	138	"res_0"	"oid"	63	0	0	0
2373	138	"arg_1"	"oid"	63	0	1	1
2374	138	"arg_2"	"oid"	63	0	1	2
2375	139	"res_0"	"oid"	63	0	0	0
2376	139	"arg_1"	"oid"	63	0	1	1
2377	139	"arg_2"	"oid"	63	0	1	2
2378	140	"res_0"	"oid"	63	0	0	0
2379	140	"arg_1"	"oid"	63	0	1	1
2380	140	"arg_2"	"oid"	63	0	1	2
2381	141	"res_0"	"oid"	63	0	0	0
2382	141	"arg_1"	"oid"	63	0	1	1
2383	141	"arg_2"	"oid"	63	0	1	2
2384	142	"res_0"	"oid"	63	0	0	0
2385	142	"arg_1"	"oid"	63	0	1	1
2386	142	"arg_2"	"oid"	63	0	1	2
2387	143	"res_0"	"oid"	63	0	0	0
2388	143	"arg_1"	"oid"	63	0	1	1
2389	144	"res_0"	"oid"	63	0	0	0
2390	144	"arg_1"	"oid"	63	0	1	1
2391	144	"arg_2"	"int"	32	0	1	2
2392	145	"res_0"	"oid"	63	0	0	0
2393	145	"arg_1"	"oid"	63	0	1	1
2394	145	"arg_2"	"int"	32	0	1	2
2395	146	"res_0"	"oid"	63	0	0	0
2396	146	"arg_1"	"oid"	63	0	1	1
2397	147	"res_0"	"oid"	63	0	0	0
2398	147	"arg_1"	"oid"	63	0	1	1
2399	148	"res_0"	"tinyint"	8	0	0	0
2400	148	"arg_1"	"oid"	63	0	1	1
2401	149	"res_0"	"oid"	63	0	0	0
2402	149	"arg_1"	"oid"	63	0	1	1
2403	149	"arg_2"	"oid"	63	0	1	2
2404	150	"res_0"	"oid"	63	0	0	0
2405	150	"arg_1"	"oid"	63	0	1	1
2406	150	"arg_2"	"oid"	63	0	1	2
2407	151	"res_0"	"month_interval"	32	0	0	0
2408	151	"arg_1"	"month_interval"	32	0	1	1
2409	151	"arg_2"	"oid"	63	0	1	2
2410	152	"res_0"	"month_interval"	32	0	0	0
2411	152	"arg_1"	"month_interval"	32	0	1	1
2412	152	"arg_2"	"oid"	63	0	1	2
2413	153	"res_0"	"month_interval"	32	0	0	0
2414	153	"arg_1"	"month_interval"	32	0	1	1
2415	153	"arg_2"	"oid"	63	0	1	2
2416	154	"res_0"	"month_interval"	32	0	0	0
2417	154	"arg_1"	"month_interval"	32	0	1	1
2418	154	"arg_2"	"oid"	63	0	1	2
2419	155	"res_0"	"sec_interval"	13	0	0	0
2420	155	"arg_1"	"sec_interval"	13	0	1	1
2421	155	"arg_2"	"oid"	63	0	1	2
2422	156	"res_0"	"sec_interval"	13	0	0	0
2423	156	"arg_1"	"sec_interval"	13	0	1	1
2424	156	"arg_2"	"oid"	63	0	1	2
2425	157	"res_0"	"sec_interval"	13	0	0	0
2426	157	"arg_1"	"sec_interval"	13	0	1	1
2427	157	"arg_2"	"oid"	63	0	1	2
2428	158	"res_0"	"sec_interval"	13	0	0	0
2429	158	"arg_1"	"sec_interval"	13	0	1	1
2430	158	"arg_2"	"oid"	63	0	1	2
2431	159	"res_0"	"tinyint"	8	0	0	0
2432	159	"arg_1"	"tinyint"	8	0	1	1
2433	159	"arg_2"	"tinyint"	8	0	1	2
2434	160	"res_0"	"tinyint"	8	0	0	0
2435	160	"arg_1"	"tinyint"	8	0	1	1
2436	160	"arg_2"	"tinyint"	8	0	1	2
2437	161	"res_0"	"tinyint"	8	0	0	0
2438	161	"arg_1"	"tinyint"	8	0	1	1
2439	161	"arg_2"	"tinyint"	8	0	1	2
2440	162	"res_0"	"tinyint"	8	0	0	0
2441	162	"arg_1"	"tinyint"	8	0	1	1
2442	162	"arg_2"	"tinyint"	8	0	1	2
2443	163	"res_0"	"tinyint"	8	0	0	0
2444	163	"arg_1"	"tinyint"	8	0	1	1
2445	163	"arg_2"	"tinyint"	8	0	1	2
2446	164	"res_0"	"tinyint"	8	0	0	0
2447	164	"arg_1"	"tinyint"	8	0	1	1
2448	164	"arg_2"	"tinyint"	8	0	1	2
2449	165	"res_0"	"tinyint"	8	0	0	0
2450	165	"arg_1"	"tinyint"	8	0	1	1
2451	165	"arg_2"	"tinyint"	8	0	1	2
2452	166	"res_0"	"tinyint"	8	0	0	0
2453	166	"arg_1"	"tinyint"	8	0	1	1
2454	167	"res_0"	"tinyint"	8	0	0	0
2455	167	"arg_1"	"tinyint"	8	0	1	1
2456	167	"arg_2"	"int"	32	0	1	2
2457	168	"res_0"	"tinyint"	8	0	0	0
2458	168	"arg_1"	"tinyint"	8	0	1	1
2459	168	"arg_2"	"int"	32	0	1	2
2460	169	"res_0"	"tinyint"	8	0	0	0
2461	169	"arg_1"	"tinyint"	8	0	1	1
2462	170	"res_0"	"tinyint"	8	0	0	0
2463	170	"arg_1"	"tinyint"	8	0	1	1
2464	171	"res_0"	"tinyint"	8	0	0	0
2465	171	"arg_1"	"tinyint"	8	0	1	1
2466	172	"res_0"	"tinyint"	8	0	0	0
2467	172	"arg_1"	"tinyint"	8	0	1	1
2468	172	"arg_2"	"tinyint"	8	0	1	2
2469	173	"res_0"	"tinyint"	8	0	0	0
2470	173	"arg_1"	"tinyint"	8	0	1	1
2471	173	"arg_2"	"tinyint"	8	0	1	2
2472	174	"res_0"	"month_interval"	32	0	0	0
2473	174	"arg_1"	"month_interval"	32	0	1	1
2474	174	"arg_2"	"tinyint"	8	0	1	2
2475	175	"res_0"	"month_interval"	32	0	0	0
2476	175	"arg_1"	"month_interval"	32	0	1	1
2477	175	"arg_2"	"tinyint"	8	0	1	2
2478	176	"res_0"	"month_interval"	32	0	0	0
2479	176	"arg_1"	"month_interval"	32	0	1	1
2480	176	"arg_2"	"tinyint"	8	0	1	2
2481	177	"res_0"	"month_interval"	32	0	0	0
2482	177	"arg_1"	"month_interval"	32	0	1	1
2483	177	"arg_2"	"tinyint"	8	0	1	2
2484	178	"res_0"	"sec_interval"	13	0	0	0
2485	178	"arg_1"	"sec_interval"	13	0	1	1
2486	178	"arg_2"	"tinyint"	8	0	1	2
2487	179	"res_0"	"sec_interval"	13	0	0	0
2488	179	"arg_1"	"sec_interval"	13	0	1	1
2489	179	"arg_2"	"tinyint"	8	0	1	2
2490	180	"res_0"	"sec_interval"	13	0	0	0
2491	180	"arg_1"	"sec_interval"	13	0	1	1
2492	180	"arg_2"	"tinyint"	8	0	1	2
2493	181	"res_0"	"sec_interval"	13	0	0	0
2494	181	"arg_1"	"sec_interval"	13	0	1	1
2495	181	"arg_2"	"tinyint"	8	0	1	2
2496	182	"res_0"	"smallint"	16	0	0	0
2497	182	"arg_1"	"smallint"	16	0	1	1
2498	182	"arg_2"	"smallint"	16	0	1	2
2499	183	"res_0"	"smallint"	16	0	0	0
2500	183	"arg_1"	"smallint"	16	0	1	1
2501	183	"arg_2"	"smallint"	16	0	1	2
2502	184	"res_0"	"smallint"	16	0	0	0
2503	184	"arg_1"	"smallint"	16	0	1	1
2504	184	"arg_2"	"smallint"	16	0	1	2
2505	185	"res_0"	"smallint"	16	0	0	0
2506	185	"arg_1"	"smallint"	16	0	1	1
2507	185	"arg_2"	"smallint"	16	0	1	2
2508	186	"res_0"	"smallint"	16	0	0	0
2509	186	"arg_1"	"smallint"	16	0	1	1
2510	186	"arg_2"	"smallint"	16	0	1	2
2511	187	"res_0"	"smallint"	16	0	0	0
2512	187	"arg_1"	"smallint"	16	0	1	1
2513	187	"arg_2"	"smallint"	16	0	1	2
2514	188	"res_0"	"smallint"	16	0	0	0
2515	188	"arg_1"	"smallint"	16	0	1	1
2516	188	"arg_2"	"smallint"	16	0	1	2
2517	189	"res_0"	"smallint"	16	0	0	0
2518	189	"arg_1"	"smallint"	16	0	1	1
2519	190	"res_0"	"smallint"	16	0	0	0
2520	190	"arg_1"	"smallint"	16	0	1	1
2521	190	"arg_2"	"int"	32	0	1	2
2522	191	"res_0"	"smallint"	16	0	0	0
2523	191	"arg_1"	"smallint"	16	0	1	1
2524	191	"arg_2"	"int"	32	0	1	2
2525	192	"res_0"	"smallint"	16	0	0	0
2526	192	"arg_1"	"smallint"	16	0	1	1
2527	193	"res_0"	"smallint"	16	0	0	0
2528	193	"arg_1"	"smallint"	16	0	1	1
2529	194	"res_0"	"tinyint"	8	0	0	0
2530	194	"arg_1"	"smallint"	16	0	1	1
2531	195	"res_0"	"smallint"	16	0	0	0
2532	195	"arg_1"	"smallint"	16	0	1	1
2533	195	"arg_2"	"smallint"	16	0	1	2
2534	196	"res_0"	"smallint"	16	0	0	0
2535	196	"arg_1"	"smallint"	16	0	1	1
2536	196	"arg_2"	"smallint"	16	0	1	2
2537	197	"res_0"	"month_interval"	32	0	0	0
2538	197	"arg_1"	"month_interval"	32	0	1	1
2539	197	"arg_2"	"smallint"	16	0	1	2
2540	198	"res_0"	"month_interval"	32	0	0	0
2541	198	"arg_1"	"month_interval"	32	0	1	1
2542	198	"arg_2"	"smallint"	16	0	1	2
2543	199	"res_0"	"month_interval"	32	0	0	0
2544	199	"arg_1"	"month_interval"	32	0	1	1
2545	199	"arg_2"	"smallint"	16	0	1	2
2546	200	"res_0"	"month_interval"	32	0	0	0
2547	200	"arg_1"	"month_interval"	32	0	1	1
2548	200	"arg_2"	"smallint"	16	0	1	2
2549	201	"res_0"	"sec_interval"	13	0	0	0
2550	201	"arg_1"	"sec_interval"	13	0	1	1
2551	201	"arg_2"	"smallint"	16	0	1	2
2552	202	"res_0"	"sec_interval"	13	0	0	0
2553	202	"arg_1"	"sec_interval"	13	0	1	1
2554	202	"arg_2"	"smallint"	16	0	1	2
2555	203	"res_0"	"sec_interval"	13	0	0	0
2556	203	"arg_1"	"sec_interval"	13	0	1	1
2557	203	"arg_2"	"smallint"	16	0	1	2
2558	204	"res_0"	"sec_interval"	13	0	0	0
2559	204	"arg_1"	"sec_interval"	13	0	1	1
2560	204	"arg_2"	"smallint"	16	0	1	2
2561	205	"res_0"	"int"	32	0	0	0
2562	205	"arg_1"	"int"	32	0	1	1
2563	205	"arg_2"	"int"	32	0	1	2
2564	206	"res_0"	"int"	32	0	0	0
2565	206	"arg_1"	"int"	32	0	1	1
2566	206	"arg_2"	"int"	32	0	1	2
2567	207	"res_0"	"int"	32	0	0	0
2568	207	"arg_1"	"int"	32	0	1	1
2569	207	"arg_2"	"int"	32	0	1	2
2570	208	"res_0"	"int"	32	0	0	0
2571	208	"arg_1"	"int"	32	0	1	1
2572	208	"arg_2"	"int"	32	0	1	2
2573	209	"res_0"	"int"	32	0	0	0
2574	209	"arg_1"	"int"	32	0	1	1
2575	209	"arg_2"	"int"	32	0	1	2
2576	210	"res_0"	"int"	32	0	0	0
2577	210	"arg_1"	"int"	32	0	1	1
2578	210	"arg_2"	"int"	32	0	1	2
2579	211	"res_0"	"int"	32	0	0	0
2580	211	"arg_1"	"int"	32	0	1	1
2581	211	"arg_2"	"int"	32	0	1	2
2582	212	"res_0"	"int"	32	0	0	0
2583	212	"arg_1"	"int"	32	0	1	1
2584	213	"res_0"	"int"	32	0	0	0
2585	213	"arg_1"	"int"	32	0	1	1
2586	213	"arg_2"	"int"	32	0	1	2
2587	214	"res_0"	"int"	32	0	0	0
2588	214	"arg_1"	"int"	32	0	1	1
2589	214	"arg_2"	"int"	32	0	1	2
2590	215	"res_0"	"int"	32	0	0	0
2591	215	"arg_1"	"int"	32	0	1	1
2592	216	"res_0"	"int"	32	0	0	0
2593	216	"arg_1"	"int"	32	0	1	1
2594	217	"res_0"	"tinyint"	8	0	0	0
2595	217	"arg_1"	"int"	32	0	1	1
2596	218	"res_0"	"int"	32	0	0	0
2597	218	"arg_1"	"int"	32	0	1	1
2598	218	"arg_2"	"int"	32	0	1	2
2599	219	"res_0"	"int"	32	0	0	0
2600	219	"arg_1"	"int"	32	0	1	1
2601	219	"arg_2"	"int"	32	0	1	2
2602	220	"res_0"	"month_interval"	32	0	0	0
2603	220	"arg_1"	"month_interval"	32	0	1	1
2604	220	"arg_2"	"int"	32	0	1	2
2605	221	"res_0"	"month_interval"	32	0	0	0
2606	221	"arg_1"	"month_interval"	32	0	1	1
2607	221	"arg_2"	"int"	32	0	1	2
2608	222	"res_0"	"month_interval"	32	0	0	0
2609	222	"arg_1"	"month_interval"	32	0	1	1
2610	222	"arg_2"	"int"	32	0	1	2
2611	223	"res_0"	"month_interval"	32	0	0	0
2612	223	"arg_1"	"month_interval"	32	0	1	1
2613	223	"arg_2"	"int"	32	0	1	2
2614	224	"res_0"	"sec_interval"	13	0	0	0
2615	224	"arg_1"	"sec_interval"	13	0	1	1
2616	224	"arg_2"	"int"	32	0	1	2
2617	225	"res_0"	"sec_interval"	13	0	0	0
2618	225	"arg_1"	"sec_interval"	13	0	1	1
2619	225	"arg_2"	"int"	32	0	1	2
2620	226	"res_0"	"sec_interval"	13	0	0	0
2621	226	"arg_1"	"sec_interval"	13	0	1	1
2622	226	"arg_2"	"int"	32	0	1	2
2623	227	"res_0"	"sec_interval"	13	0	0	0
2624	227	"arg_1"	"sec_interval"	13	0	1	1
2625	227	"arg_2"	"int"	32	0	1	2
2626	228	"res_0"	"bigint"	64	0	0	0
2627	228	"arg_1"	"bigint"	64	0	1	1
2628	228	"arg_2"	"bigint"	64	0	1	2
2629	229	"res_0"	"bigint"	64	0	0	0
2630	229	"arg_1"	"bigint"	64	0	1	1
2631	229	"arg_2"	"bigint"	64	0	1	2
2632	230	"res_0"	"bigint"	64	0	0	0
2633	230	"arg_1"	"bigint"	64	0	1	1
2634	230	"arg_2"	"bigint"	64	0	1	2
2635	231	"res_0"	"bigint"	64	0	0	0
2636	231	"arg_1"	"bigint"	64	0	1	1
2637	231	"arg_2"	"bigint"	64	0	1	2
2638	232	"res_0"	"bigint"	64	0	0	0
2639	232	"arg_1"	"bigint"	64	0	1	1
2640	232	"arg_2"	"bigint"	64	0	1	2
2641	233	"res_0"	"bigint"	64	0	0	0
2642	233	"arg_1"	"bigint"	64	0	1	1
2643	233	"arg_2"	"bigint"	64	0	1	2
2644	234	"res_0"	"bigint"	64	0	0	0
2645	234	"arg_1"	"bigint"	64	0	1	1
2646	234	"arg_2"	"bigint"	64	0	1	2
2647	235	"res_0"	"bigint"	64	0	0	0
2648	235	"arg_1"	"bigint"	64	0	1	1
2649	236	"res_0"	"bigint"	64	0	0	0
2650	236	"arg_1"	"bigint"	64	0	1	1
2651	236	"arg_2"	"int"	32	0	1	2
2652	237	"res_0"	"bigint"	64	0	0	0
2653	237	"arg_1"	"bigint"	64	0	1	1
2654	237	"arg_2"	"int"	32	0	1	2
2655	238	"res_0"	"bigint"	64	0	0	0
2656	238	"arg_1"	"bigint"	64	0	1	1
2657	239	"res_0"	"bigint"	64	0	0	0
2658	239	"arg_1"	"bigint"	64	0	1	1
2659	240	"res_0"	"tinyint"	8	0	0	0
2660	240	"arg_1"	"bigint"	64	0	1	1
2661	241	"res_0"	"bigint"	64	0	0	0
2662	241	"arg_1"	"bigint"	64	0	1	1
2663	241	"arg_2"	"bigint"	64	0	1	2
2664	242	"res_0"	"bigint"	64	0	0	0
2665	242	"arg_1"	"bigint"	64	0	1	1
2666	242	"arg_2"	"bigint"	64	0	1	2
2667	243	"res_0"	"month_interval"	32	0	0	0
2668	243	"arg_1"	"month_interval"	32	0	1	1
2669	243	"arg_2"	"bigint"	64	0	1	2
2670	244	"res_0"	"month_interval"	32	0	0	0
2671	244	"arg_1"	"month_interval"	32	0	1	1
2672	244	"arg_2"	"bigint"	64	0	1	2
2673	245	"res_0"	"month_interval"	32	0	0	0
2674	245	"arg_1"	"month_interval"	32	0	1	1
2675	245	"arg_2"	"bigint"	64	0	1	2
2676	246	"res_0"	"month_interval"	32	0	0	0
2677	246	"arg_1"	"month_interval"	32	0	1	1
2678	246	"arg_2"	"bigint"	64	0	1	2
2679	247	"res_0"	"sec_interval"	13	0	0	0
2680	247	"arg_1"	"sec_interval"	13	0	1	1
2681	247	"arg_2"	"bigint"	64	0	1	2
2682	248	"res_0"	"sec_interval"	13	0	0	0
2683	248	"arg_1"	"sec_interval"	13	0	1	1
2684	248	"arg_2"	"bigint"	64	0	1	2
2685	249	"res_0"	"sec_interval"	13	0	0	0
2686	249	"arg_1"	"sec_interval"	13	0	1	1
2687	249	"arg_2"	"bigint"	64	0	1	2
2688	250	"res_0"	"sec_interval"	13	0	0	0
2689	250	"arg_1"	"sec_interval"	13	0	1	1
2690	250	"arg_2"	"bigint"	64	0	1	2
2691	251	"res_0"	"wrd"	64	0	0	0
2692	251	"arg_1"	"wrd"	64	0	1	1
2693	251	"arg_2"	"wrd"	64	0	1	2
2694	252	"res_0"	"wrd"	64	0	0	0
2695	252	"arg_1"	"wrd"	64	0	1	1
2696	252	"arg_2"	"wrd"	64	0	1	2
2697	253	"res_0"	"wrd"	64	0	0	0
2698	253	"arg_1"	"wrd"	64	0	1	1
2699	253	"arg_2"	"wrd"	64	0	1	2
2700	254	"res_0"	"wrd"	64	0	0	0
2701	254	"arg_1"	"wrd"	64	0	1	1
2702	254	"arg_2"	"wrd"	64	0	1	2
2703	255	"res_0"	"wrd"	64	0	0	0
2704	255	"arg_1"	"wrd"	64	0	1	1
2705	255	"arg_2"	"wrd"	64	0	1	2
2706	256	"res_0"	"wrd"	64	0	0	0
2707	256	"arg_1"	"wrd"	64	0	1	1
2708	256	"arg_2"	"wrd"	64	0	1	2
2709	257	"res_0"	"wrd"	64	0	0	0
2710	257	"arg_1"	"wrd"	64	0	1	1
2711	257	"arg_2"	"wrd"	64	0	1	2
2712	258	"res_0"	"wrd"	64	0	0	0
2713	258	"arg_1"	"wrd"	64	0	1	1
2714	259	"res_0"	"wrd"	64	0	0	0
2715	259	"arg_1"	"wrd"	64	0	1	1
2716	259	"arg_2"	"int"	32	0	1	2
2717	260	"res_0"	"wrd"	64	0	0	0
2718	260	"arg_1"	"wrd"	64	0	1	1
2719	260	"arg_2"	"int"	32	0	1	2
2720	261	"res_0"	"wrd"	64	0	0	0
2721	261	"arg_1"	"wrd"	64	0	1	1
2722	262	"res_0"	"wrd"	64	0	0	0
2723	262	"arg_1"	"wrd"	64	0	1	1
2724	263	"res_0"	"tinyint"	8	0	0	0
2725	263	"arg_1"	"wrd"	64	0	1	1
2726	264	"res_0"	"wrd"	64	0	0	0
2727	264	"arg_1"	"wrd"	64	0	1	1
2728	264	"arg_2"	"wrd"	64	0	1	2
2729	265	"res_0"	"wrd"	64	0	0	0
2730	265	"arg_1"	"wrd"	64	0	1	1
2731	265	"arg_2"	"wrd"	64	0	1	2
2732	266	"res_0"	"month_interval"	32	0	0	0
2733	266	"arg_1"	"month_interval"	32	0	1	1
2734	266	"arg_2"	"wrd"	64	0	1	2
2735	267	"res_0"	"month_interval"	32	0	0	0
2736	267	"arg_1"	"month_interval"	32	0	1	1
2737	267	"arg_2"	"wrd"	64	0	1	2
2738	268	"res_0"	"month_interval"	32	0	0	0
2739	268	"arg_1"	"month_interval"	32	0	1	1
2740	268	"arg_2"	"wrd"	64	0	1	2
2741	269	"res_0"	"month_interval"	32	0	0	0
2742	269	"arg_1"	"month_interval"	32	0	1	1
2743	269	"arg_2"	"wrd"	64	0	1	2
2744	270	"res_0"	"sec_interval"	13	0	0	0
2745	270	"arg_1"	"sec_interval"	13	0	1	1
2746	270	"arg_2"	"wrd"	64	0	1	2
2747	271	"res_0"	"sec_interval"	13	0	0	0
2748	271	"arg_1"	"sec_interval"	13	0	1	1
2749	271	"arg_2"	"wrd"	64	0	1	2
2750	272	"res_0"	"sec_interval"	13	0	0	0
2751	272	"arg_1"	"sec_interval"	13	0	1	1
2752	272	"arg_2"	"wrd"	64	0	1	2
2753	273	"res_0"	"sec_interval"	13	0	0	0
2754	273	"arg_1"	"sec_interval"	13	0	1	1
2755	273	"arg_2"	"wrd"	64	0	1	2
2756	274	"res_0"	"hugeint"	128	0	0	0
2757	274	"arg_1"	"hugeint"	128	0	1	1
2758	274	"arg_2"	"hugeint"	128	0	1	2
2759	275	"res_0"	"hugeint"	128	0	0	0
2760	275	"arg_1"	"hugeint"	128	0	1	1
2761	275	"arg_2"	"hugeint"	128	0	1	2
2762	276	"res_0"	"hugeint"	128	0	0	0
2763	276	"arg_1"	"hugeint"	128	0	1	1
2764	276	"arg_2"	"hugeint"	128	0	1	2
2765	277	"res_0"	"hugeint"	128	0	0	0
2766	277	"arg_1"	"hugeint"	128	0	1	1
2767	277	"arg_2"	"hugeint"	128	0	1	2
2768	278	"res_0"	"hugeint"	128	0	0	0
2769	278	"arg_1"	"hugeint"	128	0	1	1
2770	278	"arg_2"	"hugeint"	128	0	1	2
2771	279	"res_0"	"hugeint"	128	0	0	0
2772	279	"arg_1"	"hugeint"	128	0	1	1
2773	279	"arg_2"	"hugeint"	128	0	1	2
2774	280	"res_0"	"hugeint"	128	0	0	0
2775	280	"arg_1"	"hugeint"	128	0	1	1
2776	280	"arg_2"	"hugeint"	128	0	1	2
2777	281	"res_0"	"hugeint"	128	0	0	0
2778	281	"arg_1"	"hugeint"	128	0	1	1
2779	282	"res_0"	"hugeint"	128	0	0	0
2780	282	"arg_1"	"hugeint"	128	0	1	1
2781	282	"arg_2"	"int"	32	0	1	2
2782	283	"res_0"	"hugeint"	128	0	0	0
2783	283	"arg_1"	"hugeint"	128	0	1	1
2784	283	"arg_2"	"int"	32	0	1	2
2785	284	"res_0"	"hugeint"	128	0	0	0
2786	284	"arg_1"	"hugeint"	128	0	1	1
2787	285	"res_0"	"hugeint"	128	0	0	0
2788	285	"arg_1"	"hugeint"	128	0	1	1
2789	286	"res_0"	"tinyint"	8	0	0	0
2790	286	"arg_1"	"hugeint"	128	0	1	1
2791	287	"res_0"	"hugeint"	128	0	0	0
2792	287	"arg_1"	"hugeint"	128	0	1	1
2793	287	"arg_2"	"hugeint"	128	0	1	2
2794	288	"res_0"	"hugeint"	128	0	0	0
2795	288	"arg_1"	"hugeint"	128	0	1	1
2796	288	"arg_2"	"hugeint"	128	0	1	2
2797	289	"res_0"	"month_interval"	32	0	0	0
2798	289	"arg_1"	"month_interval"	32	0	1	1
2799	289	"arg_2"	"hugeint"	128	0	1	2
2800	290	"res_0"	"month_interval"	32	0	0	0
2801	290	"arg_1"	"month_interval"	32	0	1	1
2802	290	"arg_2"	"hugeint"	128	0	1	2
2803	291	"res_0"	"month_interval"	32	0	0	0
2804	291	"arg_1"	"month_interval"	32	0	1	1
2805	291	"arg_2"	"hugeint"	128	0	1	2
2806	292	"res_0"	"month_interval"	32	0	0	0
2807	292	"arg_1"	"month_interval"	32	0	1	1
2808	292	"arg_2"	"hugeint"	128	0	1	2
2809	293	"res_0"	"sec_interval"	13	0	0	0
2810	293	"arg_1"	"sec_interval"	13	0	1	1
2811	293	"arg_2"	"hugeint"	128	0	1	2
2812	294	"res_0"	"sec_interval"	13	0	0	0
2813	294	"arg_1"	"sec_interval"	13	0	1	1
2814	294	"arg_2"	"hugeint"	128	0	1	2
2815	295	"res_0"	"sec_interval"	13	0	0	0
2816	295	"arg_1"	"sec_interval"	13	0	1	1
2817	295	"arg_2"	"hugeint"	128	0	1	2
2818	296	"res_0"	"sec_interval"	13	0	0	0
2819	296	"arg_1"	"sec_interval"	13	0	1	1
2820	296	"arg_2"	"hugeint"	128	0	1	2
2821	297	"res_0"	"decimal"	2	0	0	0
2822	297	"arg_1"	"decimal"	2	0	1	1
2823	297	"arg_2"	"decimal"	2	0	1	2
2824	298	"res_0"	"decimal"	2	0	0	0
2825	298	"arg_1"	"decimal"	2	0	1	1
2826	298	"arg_2"	"decimal"	2	0	1	2
2827	299	"res_0"	"decimal"	2	0	0	0
2828	299	"arg_1"	"decimal"	2	0	1	1
2829	299	"arg_2"	"decimal"	2	0	1	2
2830	300	"res_0"	"decimal"	2	0	0	0
2831	300	"arg_1"	"decimal"	2	0	1	1
2832	300	"arg_2"	"decimal"	2	0	1	2
2833	301	"res_0"	"decimal"	2	0	0	0
2834	301	"arg_1"	"decimal"	2	0	1	1
2835	301	"arg_2"	"decimal"	2	0	1	2
2836	302	"res_0"	"decimal"	2	0	0	0
2837	302	"arg_1"	"decimal"	2	0	1	1
2838	302	"arg_2"	"decimal"	2	0	1	2
2839	303	"res_0"	"decimal"	2	0	0	0
2840	303	"arg_1"	"decimal"	2	0	1	1
2841	303	"arg_2"	"decimal"	2	0	1	2
2842	304	"res_0"	"decimal"	2	0	0	0
2843	304	"arg_1"	"decimal"	2	0	1	1
2844	305	"res_0"	"decimal"	2	0	0	0
2845	305	"arg_1"	"decimal"	2	0	1	1
2846	305	"arg_2"	"int"	32	0	1	2
2847	306	"res_0"	"decimal"	2	0	0	0
2848	306	"arg_1"	"decimal"	2	0	1	1
2849	306	"arg_2"	"int"	32	0	1	2
2850	307	"res_0"	"decimal"	2	0	0	0
2851	307	"arg_1"	"decimal"	2	0	1	1
2852	308	"res_0"	"decimal"	2	0	0	0
2853	308	"arg_1"	"decimal"	2	0	1	1
2854	309	"res_0"	"tinyint"	8	0	0	0
2855	309	"arg_1"	"decimal"	2	0	1	1
2856	310	"res_0"	"decimal"	2	0	0	0
2857	310	"arg_1"	"decimal"	2	0	1	1
2858	310	"arg_2"	"tinyint"	8	0	1	2
2859	311	"res_0"	"decimal"	2	0	0	0
2860	311	"arg_1"	"decimal"	2	0	1	1
2861	311	"arg_2"	"tinyint"	8	0	1	2
2862	312	"res_0"	"month_interval"	32	0	0	0
2863	312	"arg_1"	"month_interval"	32	0	1	1
2864	312	"arg_2"	"decimal"	2	0	1	2
2865	313	"res_0"	"month_interval"	32	0	0	0
2866	313	"arg_1"	"month_interval"	32	0	1	1
2867	313	"arg_2"	"decimal"	2	0	1	2
2868	314	"res_0"	"month_interval"	32	0	0	0
2869	314	"arg_1"	"month_interval"	32	0	1	1
2870	314	"arg_2"	"decimal"	2	0	1	2
2871	315	"res_0"	"month_interval"	32	0	0	0
2872	315	"arg_1"	"month_interval"	32	0	1	1
2873	315	"arg_2"	"decimal"	2	0	1	2
2874	316	"res_0"	"sec_interval"	13	0	0	0
2875	316	"arg_1"	"sec_interval"	13	0	1	1
2876	316	"arg_2"	"decimal"	2	0	1	2
2877	317	"res_0"	"sec_interval"	13	0	0	0
2878	317	"arg_1"	"sec_interval"	13	0	1	1
2879	317	"arg_2"	"decimal"	2	0	1	2
2880	318	"res_0"	"sec_interval"	13	0	0	0
2881	318	"arg_1"	"sec_interval"	13	0	1	1
2882	318	"arg_2"	"decimal"	2	0	1	2
2883	319	"res_0"	"sec_interval"	13	0	0	0
2884	319	"arg_1"	"sec_interval"	13	0	1	1
2885	319	"arg_2"	"decimal"	2	0	1	2
2886	320	"res_0"	"decimal"	4	0	0	0
2887	320	"arg_1"	"decimal"	4	0	1	1
2888	320	"arg_2"	"decimal"	4	0	1	2
2889	321	"res_0"	"decimal"	4	0	0	0
2890	321	"arg_1"	"decimal"	4	0	1	1
2891	321	"arg_2"	"decimal"	4	0	1	2
2892	322	"res_0"	"decimal"	4	0	0	0
2893	322	"arg_1"	"decimal"	4	0	1	1
2894	322	"arg_2"	"decimal"	4	0	1	2
2895	323	"res_0"	"decimal"	4	0	0	0
2896	323	"arg_1"	"decimal"	4	0	1	1
2897	323	"arg_2"	"decimal"	4	0	1	2
2898	324	"res_0"	"decimal"	4	0	0	0
2899	324	"arg_1"	"decimal"	4	0	1	1
2900	324	"arg_2"	"decimal"	4	0	1	2
2901	325	"res_0"	"decimal"	4	0	0	0
2902	325	"arg_1"	"decimal"	4	0	1	1
2903	325	"arg_2"	"decimal"	4	0	1	2
2904	326	"res_0"	"decimal"	4	0	0	0
2905	326	"arg_1"	"decimal"	4	0	1	1
2906	326	"arg_2"	"decimal"	4	0	1	2
2907	327	"res_0"	"decimal"	4	0	0	0
2908	327	"arg_1"	"decimal"	4	0	1	1
2909	328	"res_0"	"decimal"	4	0	0	0
2910	328	"arg_1"	"decimal"	4	0	1	1
2911	328	"arg_2"	"int"	32	0	1	2
2912	329	"res_0"	"decimal"	4	0	0	0
2913	329	"arg_1"	"decimal"	4	0	1	1
2914	329	"arg_2"	"int"	32	0	1	2
2915	330	"res_0"	"decimal"	4	0	0	0
2916	330	"arg_1"	"decimal"	4	0	1	1
2917	331	"res_0"	"decimal"	4	0	0	0
2918	331	"arg_1"	"decimal"	4	0	1	1
2919	332	"res_0"	"tinyint"	8	0	0	0
2920	332	"arg_1"	"decimal"	4	0	1	1
2921	333	"res_0"	"decimal"	4	0	0	0
2922	333	"arg_1"	"decimal"	4	0	1	1
2923	333	"arg_2"	"smallint"	16	0	1	2
2924	334	"res_0"	"decimal"	4	0	0	0
2925	334	"arg_1"	"decimal"	4	0	1	1
2926	334	"arg_2"	"smallint"	16	0	1	2
2927	335	"res_0"	"month_interval"	32	0	0	0
2928	335	"arg_1"	"month_interval"	32	0	1	1
2929	335	"arg_2"	"decimal"	4	0	1	2
2930	336	"res_0"	"month_interval"	32	0	0	0
2931	336	"arg_1"	"month_interval"	32	0	1	1
2932	336	"arg_2"	"decimal"	4	0	1	2
2933	337	"res_0"	"month_interval"	32	0	0	0
2934	337	"arg_1"	"month_interval"	32	0	1	1
2935	337	"arg_2"	"decimal"	4	0	1	2
2936	338	"res_0"	"month_interval"	32	0	0	0
2937	338	"arg_1"	"month_interval"	32	0	1	1
2938	338	"arg_2"	"decimal"	4	0	1	2
2939	339	"res_0"	"sec_interval"	13	0	0	0
2940	339	"arg_1"	"sec_interval"	13	0	1	1
2941	339	"arg_2"	"decimal"	4	0	1	2
2942	340	"res_0"	"sec_interval"	13	0	0	0
2943	340	"arg_1"	"sec_interval"	13	0	1	1
2944	340	"arg_2"	"decimal"	4	0	1	2
2945	341	"res_0"	"sec_interval"	13	0	0	0
2946	341	"arg_1"	"sec_interval"	13	0	1	1
2947	341	"arg_2"	"decimal"	4	0	1	2
2948	342	"res_0"	"sec_interval"	13	0	0	0
2949	342	"arg_1"	"sec_interval"	13	0	1	1
2950	342	"arg_2"	"decimal"	4	0	1	2
2951	343	"res_0"	"decimal"	9	0	0	0
2952	343	"arg_1"	"decimal"	9	0	1	1
2953	343	"arg_2"	"decimal"	9	0	1	2
2954	344	"res_0"	"decimal"	9	0	0	0
2955	344	"arg_1"	"decimal"	9	0	1	1
2956	344	"arg_2"	"decimal"	9	0	1	2
2957	345	"res_0"	"decimal"	9	0	0	0
2958	345	"arg_1"	"decimal"	9	0	1	1
2959	345	"arg_2"	"decimal"	9	0	1	2
2960	346	"res_0"	"decimal"	9	0	0	0
2961	346	"arg_1"	"decimal"	9	0	1	1
2962	346	"arg_2"	"decimal"	9	0	1	2
2963	347	"res_0"	"decimal"	9	0	0	0
2964	347	"arg_1"	"decimal"	9	0	1	1
2965	347	"arg_2"	"decimal"	9	0	1	2
2966	348	"res_0"	"decimal"	9	0	0	0
2967	348	"arg_1"	"decimal"	9	0	1	1
2968	348	"arg_2"	"decimal"	9	0	1	2
2969	349	"res_0"	"decimal"	9	0	0	0
2970	349	"arg_1"	"decimal"	9	0	1	1
2971	349	"arg_2"	"decimal"	9	0	1	2
2972	350	"res_0"	"decimal"	9	0	0	0
2973	350	"arg_1"	"decimal"	9	0	1	1
2974	351	"res_0"	"decimal"	9	0	0	0
2975	351	"arg_1"	"decimal"	9	0	1	1
2976	351	"arg_2"	"int"	32	0	1	2
2977	352	"res_0"	"decimal"	9	0	0	0
2978	352	"arg_1"	"decimal"	9	0	1	1
2979	352	"arg_2"	"int"	32	0	1	2
2980	353	"res_0"	"decimal"	9	0	0	0
2981	353	"arg_1"	"decimal"	9	0	1	1
2982	354	"res_0"	"decimal"	9	0	0	0
2983	354	"arg_1"	"decimal"	9	0	1	1
2984	355	"res_0"	"tinyint"	8	0	0	0
2985	355	"arg_1"	"decimal"	9	0	1	1
2986	356	"res_0"	"decimal"	9	0	0	0
2987	356	"arg_1"	"decimal"	9	0	1	1
2988	356	"arg_2"	"int"	32	0	1	2
2989	357	"res_0"	"decimal"	9	0	0	0
2990	357	"arg_1"	"decimal"	9	0	1	1
2991	357	"arg_2"	"int"	32	0	1	2
2992	358	"res_0"	"month_interval"	32	0	0	0
2993	358	"arg_1"	"month_interval"	32	0	1	1
2994	358	"arg_2"	"decimal"	9	0	1	2
2995	359	"res_0"	"month_interval"	32	0	0	0
2996	359	"arg_1"	"month_interval"	32	0	1	1
2997	359	"arg_2"	"decimal"	9	0	1	2
2998	360	"res_0"	"month_interval"	32	0	0	0
2999	360	"arg_1"	"month_interval"	32	0	1	1
3000	360	"arg_2"	"decimal"	9	0	1	2
3001	361	"res_0"	"month_interval"	32	0	0	0
3002	361	"arg_1"	"month_interval"	32	0	1	1
3003	361	"arg_2"	"decimal"	9	0	1	2
3004	362	"res_0"	"sec_interval"	13	0	0	0
3005	362	"arg_1"	"sec_interval"	13	0	1	1
3006	362	"arg_2"	"decimal"	9	0	1	2
3007	363	"res_0"	"sec_interval"	13	0	0	0
3008	363	"arg_1"	"sec_interval"	13	0	1	1
3009	363	"arg_2"	"decimal"	9	0	1	2
3010	364	"res_0"	"sec_interval"	13	0	0	0
3011	364	"arg_1"	"sec_interval"	13	0	1	1
3012	364	"arg_2"	"decimal"	9	0	1	2
3013	365	"res_0"	"sec_interval"	13	0	0	0
3014	365	"arg_1"	"sec_interval"	13	0	1	1
3015	365	"arg_2"	"decimal"	9	0	1	2
3016	366	"res_0"	"decimal"	18	0	0	0
3017	366	"arg_1"	"decimal"	18	0	1	1
3018	366	"arg_2"	"decimal"	18	0	1	2
3019	367	"res_0"	"decimal"	18	0	0	0
3020	367	"arg_1"	"decimal"	18	0	1	1
3021	367	"arg_2"	"decimal"	18	0	1	2
3022	368	"res_0"	"decimal"	18	0	0	0
3023	368	"arg_1"	"decimal"	18	0	1	1
3024	368	"arg_2"	"decimal"	18	0	1	2
3025	369	"res_0"	"decimal"	18	0	0	0
3026	369	"arg_1"	"decimal"	18	0	1	1
3027	369	"arg_2"	"decimal"	18	0	1	2
3028	370	"res_0"	"decimal"	18	0	0	0
3029	370	"arg_1"	"decimal"	18	0	1	1
3030	370	"arg_2"	"decimal"	18	0	1	2
3031	371	"res_0"	"decimal"	18	0	0	0
3032	371	"arg_1"	"decimal"	18	0	1	1
3033	371	"arg_2"	"decimal"	18	0	1	2
3034	372	"res_0"	"decimal"	18	0	0	0
3035	372	"arg_1"	"decimal"	18	0	1	1
3036	372	"arg_2"	"decimal"	18	0	1	2
3037	373	"res_0"	"decimal"	18	0	0	0
3038	373	"arg_1"	"decimal"	18	0	1	1
3039	374	"res_0"	"decimal"	18	0	0	0
3040	374	"arg_1"	"decimal"	18	0	1	1
3041	374	"arg_2"	"int"	32	0	1	2
3042	375	"res_0"	"decimal"	18	0	0	0
3043	375	"arg_1"	"decimal"	18	0	1	1
3044	375	"arg_2"	"int"	32	0	1	2
3045	376	"res_0"	"decimal"	18	0	0	0
3046	376	"arg_1"	"decimal"	18	0	1	1
3047	377	"res_0"	"decimal"	18	0	0	0
3048	377	"arg_1"	"decimal"	18	0	1	1
3049	378	"res_0"	"tinyint"	8	0	0	0
3050	378	"arg_1"	"decimal"	18	0	1	1
3051	379	"res_0"	"decimal"	18	0	0	0
3052	379	"arg_1"	"decimal"	18	0	1	1
3053	379	"arg_2"	"bigint"	64	0	1	2
3054	380	"res_0"	"decimal"	18	0	0	0
3055	380	"arg_1"	"decimal"	18	0	1	1
3056	380	"arg_2"	"bigint"	64	0	1	2
3057	381	"res_0"	"month_interval"	32	0	0	0
3058	381	"arg_1"	"month_interval"	32	0	1	1
3059	381	"arg_2"	"decimal"	18	0	1	2
3060	382	"res_0"	"month_interval"	32	0	0	0
3061	382	"arg_1"	"month_interval"	32	0	1	1
3062	382	"arg_2"	"decimal"	18	0	1	2
3063	383	"res_0"	"month_interval"	32	0	0	0
3064	383	"arg_1"	"month_interval"	32	0	1	1
3065	383	"arg_2"	"decimal"	18	0	1	2
3066	384	"res_0"	"month_interval"	32	0	0	0
3067	384	"arg_1"	"month_interval"	32	0	1	1
3068	384	"arg_2"	"decimal"	18	0	1	2
3069	385	"res_0"	"sec_interval"	13	0	0	0
3070	385	"arg_1"	"sec_interval"	13	0	1	1
3071	385	"arg_2"	"decimal"	18	0	1	2
3072	386	"res_0"	"sec_interval"	13	0	0	0
3073	386	"arg_1"	"sec_interval"	13	0	1	1
3074	386	"arg_2"	"decimal"	18	0	1	2
3075	387	"res_0"	"sec_interval"	13	0	0	0
3076	387	"arg_1"	"sec_interval"	13	0	1	1
3077	387	"arg_2"	"decimal"	18	0	1	2
3078	388	"res_0"	"sec_interval"	13	0	0	0
3079	388	"arg_1"	"sec_interval"	13	0	1	1
3080	388	"arg_2"	"decimal"	18	0	1	2
3081	389	"res_0"	"decimal"	39	0	0	0
3082	389	"arg_1"	"decimal"	39	0	1	1
3083	389	"arg_2"	"decimal"	39	0	1	2
3084	390	"res_0"	"decimal"	39	0	0	0
3085	390	"arg_1"	"decimal"	39	0	1	1
3086	390	"arg_2"	"decimal"	39	0	1	2
3087	391	"res_0"	"decimal"	39	0	0	0
3088	391	"arg_1"	"decimal"	39	0	1	1
3089	391	"arg_2"	"decimal"	39	0	1	2
3090	392	"res_0"	"decimal"	39	0	0	0
3091	392	"arg_1"	"decimal"	39	0	1	1
3092	392	"arg_2"	"decimal"	39	0	1	2
3093	393	"res_0"	"decimal"	39	0	0	0
3094	393	"arg_1"	"decimal"	39	0	1	1
3095	393	"arg_2"	"decimal"	39	0	1	2
3096	394	"res_0"	"decimal"	39	0	0	0
3097	394	"arg_1"	"decimal"	39	0	1	1
3098	394	"arg_2"	"decimal"	39	0	1	2
3099	395	"res_0"	"decimal"	39	0	0	0
3100	395	"arg_1"	"decimal"	39	0	1	1
3101	395	"arg_2"	"decimal"	39	0	1	2
3102	396	"res_0"	"decimal"	39	0	0	0
3103	396	"arg_1"	"decimal"	39	0	1	1
3104	397	"res_0"	"decimal"	39	0	0	0
3105	397	"arg_1"	"decimal"	39	0	1	1
3106	397	"arg_2"	"int"	32	0	1	2
3107	398	"res_0"	"decimal"	39	0	0	0
3108	398	"arg_1"	"decimal"	39	0	1	1
3109	398	"arg_2"	"int"	32	0	1	2
3110	399	"res_0"	"decimal"	39	0	0	0
3111	399	"arg_1"	"decimal"	39	0	1	1
3112	400	"res_0"	"decimal"	39	0	0	0
3113	400	"arg_1"	"decimal"	39	0	1	1
3114	401	"res_0"	"tinyint"	8	0	0	0
3115	401	"arg_1"	"decimal"	39	0	1	1
3116	402	"res_0"	"decimal"	39	0	0	0
3117	402	"arg_1"	"decimal"	39	0	1	1
3118	402	"arg_2"	"hugeint"	128	0	1	2
3119	403	"res_0"	"decimal"	39	0	0	0
3120	403	"arg_1"	"decimal"	39	0	1	1
3121	403	"arg_2"	"hugeint"	128	0	1	2
3122	404	"res_0"	"month_interval"	32	0	0	0
3123	404	"arg_1"	"month_interval"	32	0	1	1
3124	404	"arg_2"	"decimal"	39	0	1	2
3125	405	"res_0"	"month_interval"	32	0	0	0
3126	405	"arg_1"	"month_interval"	32	0	1	1
3127	405	"arg_2"	"decimal"	39	0	1	2
3128	406	"res_0"	"month_interval"	32	0	0	0
3129	406	"arg_1"	"month_interval"	32	0	1	1
3130	406	"arg_2"	"decimal"	39	0	1	2
3131	407	"res_0"	"month_interval"	32	0	0	0
3132	407	"arg_1"	"month_interval"	32	0	1	1
3133	407	"arg_2"	"decimal"	39	0	1	2
3134	408	"res_0"	"sec_interval"	13	0	0	0
3135	408	"arg_1"	"sec_interval"	13	0	1	1
3136	408	"arg_2"	"decimal"	39	0	1	2
3137	409	"res_0"	"sec_interval"	13	0	0	0
3138	409	"arg_1"	"sec_interval"	13	0	1	1
3139	409	"arg_2"	"decimal"	39	0	1	2
3140	410	"res_0"	"sec_interval"	13	0	0	0
3141	410	"arg_1"	"sec_interval"	13	0	1	1
3142	410	"arg_2"	"decimal"	39	0	1	2
3143	411	"res_0"	"sec_interval"	13	0	0	0
3144	411	"arg_1"	"sec_interval"	13	0	1	1
3145	411	"arg_2"	"decimal"	39	0	1	2
3146	412	"res_0"	"real"	24	0	0	0
3147	412	"arg_1"	"real"	24	0	1	1
3148	412	"arg_2"	"real"	24	0	1	2
3149	413	"res_0"	"real"	24	0	0	0
3150	413	"arg_1"	"real"	24	0	1	1
3151	413	"arg_2"	"real"	24	0	1	2
3152	414	"res_0"	"real"	24	0	0	0
3153	414	"arg_1"	"real"	24	0	1	1
3154	414	"arg_2"	"real"	24	0	1	2
3155	415	"res_0"	"real"	24	0	0	0
3156	415	"arg_1"	"real"	24	0	1	1
3157	415	"arg_2"	"real"	24	0	1	2
3158	416	"res_0"	"real"	24	0	0	0
3159	416	"arg_1"	"real"	24	0	1	1
3160	417	"res_0"	"real"	24	0	0	0
3161	417	"arg_1"	"real"	24	0	1	1
3162	418	"res_0"	"tinyint"	8	0	0	0
3163	418	"arg_1"	"real"	24	0	1	1
3164	419	"res_0"	"real"	24	0	0	0
3165	419	"arg_1"	"real"	24	0	1	1
3166	419	"arg_2"	"real"	24	0	1	2
3167	420	"res_0"	"real"	24	0	0	0
3168	420	"arg_1"	"real"	24	0	1	1
3169	420	"arg_2"	"real"	24	0	1	2
3170	421	"res_0"	"month_interval"	32	0	0	0
3171	421	"arg_1"	"month_interval"	32	0	1	1
3172	421	"arg_2"	"real"	24	0	1	2
3173	422	"res_0"	"month_interval"	32	0	0	0
3174	422	"arg_1"	"month_interval"	32	0	1	1
3175	422	"arg_2"	"real"	24	0	1	2
3176	423	"res_0"	"month_interval"	32	0	0	0
3177	423	"arg_1"	"month_interval"	32	0	1	1
3178	423	"arg_2"	"real"	24	0	1	2
3179	424	"res_0"	"month_interval"	32	0	0	0
3180	424	"arg_1"	"month_interval"	32	0	1	1
3181	424	"arg_2"	"real"	24	0	1	2
3182	425	"res_0"	"sec_interval"	13	0	0	0
3183	425	"arg_1"	"sec_interval"	13	0	1	1
3184	425	"arg_2"	"real"	24	0	1	2
3185	426	"res_0"	"sec_interval"	13	0	0	0
3186	426	"arg_1"	"sec_interval"	13	0	1	1
3187	426	"arg_2"	"real"	24	0	1	2
3188	427	"res_0"	"sec_interval"	13	0	0	0
3189	427	"arg_1"	"sec_interval"	13	0	1	1
3190	427	"arg_2"	"real"	24	0	1	2
3191	428	"res_0"	"sec_interval"	13	0	0	0
3192	428	"arg_1"	"sec_interval"	13	0	1	1
3193	428	"arg_2"	"real"	24	0	1	2
3194	429	"res_0"	"double"	53	0	0	0
3195	429	"arg_1"	"double"	53	0	1	1
3196	429	"arg_2"	"double"	53	0	1	2
3197	430	"res_0"	"double"	53	0	0	0
3198	430	"arg_1"	"double"	53	0	1	1
3199	430	"arg_2"	"double"	53	0	1	2
3200	431	"res_0"	"double"	53	0	0	0
3201	431	"arg_1"	"double"	53	0	1	1
3202	431	"arg_2"	"double"	53	0	1	2
3203	432	"res_0"	"double"	53	0	0	0
3204	432	"arg_1"	"double"	53	0	1	1
3205	432	"arg_2"	"double"	53	0	1	2
3206	433	"res_0"	"double"	53	0	0	0
3207	433	"arg_1"	"double"	53	0	1	1
3208	434	"res_0"	"double"	53	0	0	0
3209	434	"arg_1"	"double"	53	0	1	1
3210	435	"res_0"	"tinyint"	8	0	0	0
3211	435	"arg_1"	"double"	53	0	1	1
3212	436	"res_0"	"double"	53	0	0	0
3213	436	"arg_1"	"double"	53	0	1	1
3214	436	"arg_2"	"double"	53	0	1	2
3215	437	"res_0"	"double"	53	0	0	0
3216	437	"arg_1"	"double"	53	0	1	1
3217	437	"arg_2"	"double"	53	0	1	2
3218	438	"res_0"	"month_interval"	32	0	0	0
3219	438	"arg_1"	"month_interval"	32	0	1	1
3220	438	"arg_2"	"double"	53	0	1	2
3221	439	"res_0"	"month_interval"	32	0	0	0
3222	439	"arg_1"	"month_interval"	32	0	1	1
3223	439	"arg_2"	"double"	53	0	1	2
3224	440	"res_0"	"month_interval"	32	0	0	0
3225	440	"arg_1"	"month_interval"	32	0	1	1
3226	440	"arg_2"	"double"	53	0	1	2
3227	441	"res_0"	"month_interval"	32	0	0	0
3228	441	"arg_1"	"month_interval"	32	0	1	1
3229	441	"arg_2"	"double"	53	0	1	2
3230	442	"res_0"	"sec_interval"	13	0	0	0
3231	442	"arg_1"	"sec_interval"	13	0	1	1
3232	442	"arg_2"	"double"	53	0	1	2
3233	443	"res_0"	"sec_interval"	13	0	0	0
3234	443	"arg_1"	"sec_interval"	13	0	1	1
3235	443	"arg_2"	"double"	53	0	1	2
3236	444	"res_0"	"sec_interval"	13	0	0	0
3237	444	"arg_1"	"sec_interval"	13	0	1	1
3238	444	"arg_2"	"double"	53	0	1	2
3239	445	"res_0"	"sec_interval"	13	0	0	0
3240	445	"arg_1"	"sec_interval"	13	0	1	1
3241	445	"arg_2"	"double"	53	0	1	2
3242	446	"res_0"	"month_interval"	32	0	0	0
3243	446	"arg_1"	"month_interval"	32	0	1	1
3244	446	"arg_2"	"month_interval"	32	0	1	2
3245	447	"res_0"	"month_interval"	32	0	0	0
3246	447	"arg_1"	"month_interval"	32	0	1	1
3247	447	"arg_2"	"month_interval"	32	0	1	2
3248	448	"res_0"	"month_interval"	32	0	0	0
3249	448	"arg_1"	"month_interval"	32	0	1	1
3250	448	"arg_2"	"month_interval"	32	0	1	2
3251	449	"res_0"	"month_interval"	32	0	0	0
3252	449	"arg_1"	"month_interval"	32	0	1	1
3253	449	"arg_2"	"month_interval"	32	0	1	2
3254	450	"res_0"	"month_interval"	32	0	0	0
3255	450	"arg_1"	"month_interval"	32	0	1	1
3256	451	"res_0"	"month_interval"	32	0	0	0
3257	451	"arg_1"	"month_interval"	32	0	1	1
3258	452	"res_0"	"tinyint"	8	0	0	0
3259	452	"arg_1"	"month_interval"	32	0	1	1
3260	453	"res_0"	"month_interval"	32	0	0	0
3261	453	"arg_1"	"month_interval"	32	0	1	1
3262	453	"arg_2"	"int"	32	0	1	2
3263	454	"res_0"	"month_interval"	32	0	0	0
3264	454	"arg_1"	"month_interval"	32	0	1	1
3265	454	"arg_2"	"int"	32	0	1	2
3266	455	"res_0"	"sec_interval"	13	0	0	0
3267	455	"arg_1"	"sec_interval"	13	0	1	1
3268	455	"arg_2"	"sec_interval"	13	0	1	2
3269	456	"res_0"	"sec_interval"	13	0	0	0
3270	456	"arg_1"	"sec_interval"	13	0	1	1
3271	456	"arg_2"	"sec_interval"	13	0	1	2
3272	457	"res_0"	"sec_interval"	13	0	0	0
3273	457	"arg_1"	"sec_interval"	13	0	1	1
3274	457	"arg_2"	"sec_interval"	13	0	1	2
3275	458	"res_0"	"sec_interval"	13	0	0	0
3276	458	"arg_1"	"sec_interval"	13	0	1	1
3277	458	"arg_2"	"sec_interval"	13	0	1	2
3278	459	"res_0"	"sec_interval"	13	0	0	0
3279	459	"arg_1"	"sec_interval"	13	0	1	1
3280	460	"res_0"	"sec_interval"	13	0	0	0
3281	460	"arg_1"	"sec_interval"	13	0	1	1
3282	461	"res_0"	"tinyint"	8	0	0	0
3283	461	"arg_1"	"sec_interval"	13	0	1	1
3284	462	"res_0"	"sec_interval"	13	0	0	0
3285	462	"arg_1"	"sec_interval"	13	0	1	1
3286	462	"arg_2"	"bigint"	64	0	1	2
3287	463	"res_0"	"sec_interval"	13	0	0	0
3288	463	"arg_1"	"sec_interval"	13	0	1	1
3289	463	"arg_2"	"bigint"	64	0	1	2
3290	464	"res_0"	"decimal"	4	0	0	0
3291	464	"arg_1"	"decimal"	4	0	1	1
3292	464	"arg_2"	"tinyint"	8	0	1	2
3293	465	"res_0"	"decimal"	4	0	0	0
3294	465	"arg_1"	"tinyint"	8	0	1	1
3295	465	"arg_2"	"decimal"	4	0	1	2
3296	466	"res_0"	"decimal"	4	0	0	0
3297	466	"arg_1"	"decimal"	4	0	1	1
3298	466	"arg_2"	"decimal"	2	0	1	2
3299	467	"res_0"	"decimal"	4	0	0	0
3300	467	"arg_1"	"decimal"	2	0	1	1
3301	467	"arg_2"	"decimal"	4	0	1	2
3302	468	"res_0"	"decimal"	9	0	0	0
3303	468	"arg_1"	"decimal"	9	0	1	1
3304	468	"arg_2"	"tinyint"	8	0	1	2
3305	469	"res_0"	"decimal"	9	0	0	0
3306	469	"arg_1"	"tinyint"	8	0	1	1
3307	469	"arg_2"	"decimal"	9	0	1	2
3308	470	"res_0"	"decimal"	9	0	0	0
3309	470	"arg_1"	"decimal"	9	0	1	1
3310	470	"arg_2"	"smallint"	16	0	1	2
3311	471	"res_0"	"decimal"	9	0	0	0
3312	471	"arg_1"	"smallint"	16	0	1	1
3313	471	"arg_2"	"decimal"	9	0	1	2
3314	472	"res_0"	"decimal"	9	0	0	0
3315	472	"arg_1"	"decimal"	9	0	1	1
3316	472	"arg_2"	"decimal"	2	0	1	2
3317	473	"res_0"	"decimal"	9	0	0	0
3318	473	"arg_1"	"decimal"	2	0	1	1
3319	473	"arg_2"	"decimal"	9	0	1	2
3320	474	"res_0"	"decimal"	9	0	0	0
3321	474	"arg_1"	"decimal"	9	0	1	1
3322	474	"arg_2"	"decimal"	4	0	1	2
3323	475	"res_0"	"decimal"	9	0	0	0
3324	475	"arg_1"	"decimal"	4	0	1	1
3325	475	"arg_2"	"decimal"	9	0	1	2
3326	476	"res_0"	"decimal"	18	0	0	0
3327	476	"arg_1"	"decimal"	18	0	1	1
3328	476	"arg_2"	"tinyint"	8	0	1	2
3329	477	"res_0"	"decimal"	18	0	0	0
3330	477	"arg_1"	"tinyint"	8	0	1	1
3331	477	"arg_2"	"decimal"	18	0	1	2
3332	478	"res_0"	"decimal"	18	0	0	0
3333	478	"arg_1"	"decimal"	18	0	1	1
3334	478	"arg_2"	"smallint"	16	0	1	2
3335	479	"res_0"	"decimal"	18	0	0	0
3336	479	"arg_1"	"smallint"	16	0	1	1
3337	479	"arg_2"	"decimal"	18	0	1	2
3338	480	"res_0"	"decimal"	18	0	0	0
3339	480	"arg_1"	"decimal"	18	0	1	1
3340	480	"arg_2"	"int"	32	0	1	2
3341	481	"res_0"	"decimal"	18	0	0	0
3342	481	"arg_1"	"int"	32	0	1	1
3343	481	"arg_2"	"decimal"	18	0	1	2
3344	482	"res_0"	"decimal"	18	0	0	0
3345	482	"arg_1"	"decimal"	18	0	1	1
3346	482	"arg_2"	"wrd"	64	0	1	2
3347	483	"res_0"	"decimal"	18	0	0	0
3348	483	"arg_1"	"wrd"	64	0	1	1
3349	483	"arg_2"	"decimal"	18	0	1	2
3350	484	"res_0"	"decimal"	18	0	0	0
3351	484	"arg_1"	"decimal"	18	0	1	1
3352	484	"arg_2"	"decimal"	2	0	1	2
3353	485	"res_0"	"decimal"	18	0	0	0
3354	485	"arg_1"	"decimal"	2	0	1	1
3355	485	"arg_2"	"decimal"	18	0	1	2
3356	486	"res_0"	"decimal"	18	0	0	0
3357	486	"arg_1"	"decimal"	18	0	1	1
3358	486	"arg_2"	"decimal"	4	0	1	2
3359	487	"res_0"	"decimal"	18	0	0	0
3360	487	"arg_1"	"decimal"	4	0	1	1
3361	487	"arg_2"	"decimal"	18	0	1	2
3362	488	"res_0"	"decimal"	18	0	0	0
3363	488	"arg_1"	"decimal"	18	0	1	1
3364	488	"arg_2"	"decimal"	9	0	1	2
3365	489	"res_0"	"decimal"	18	0	0	0
3366	489	"arg_1"	"decimal"	9	0	1	1
3367	489	"arg_2"	"decimal"	18	0	1	2
3368	490	"res_0"	"decimal"	39	0	0	0
3369	490	"arg_1"	"decimal"	39	0	1	1
3370	490	"arg_2"	"tinyint"	8	0	1	2
3371	491	"res_0"	"decimal"	39	0	0	0
3372	491	"arg_1"	"tinyint"	8	0	1	1
3373	491	"arg_2"	"decimal"	39	0	1	2
3374	492	"res_0"	"decimal"	39	0	0	0
3375	492	"arg_1"	"decimal"	39	0	1	1
3376	492	"arg_2"	"smallint"	16	0	1	2
3377	493	"res_0"	"decimal"	39	0	0	0
3378	493	"arg_1"	"smallint"	16	0	1	1
3379	493	"arg_2"	"decimal"	39	0	1	2
3380	494	"res_0"	"decimal"	39	0	0	0
3381	494	"arg_1"	"decimal"	39	0	1	1
3382	494	"arg_2"	"int"	32	0	1	2
3383	495	"res_0"	"decimal"	39	0	0	0
3384	495	"arg_1"	"int"	32	0	1	1
3385	495	"arg_2"	"decimal"	39	0	1	2
3386	496	"res_0"	"decimal"	39	0	0	0
3387	496	"arg_1"	"decimal"	39	0	1	1
3388	496	"arg_2"	"bigint"	64	0	1	2
3389	497	"res_0"	"decimal"	39	0	0	0
3390	497	"arg_1"	"bigint"	64	0	1	1
3391	497	"arg_2"	"decimal"	39	0	1	2
3392	498	"res_0"	"decimal"	39	0	0	0
3393	498	"arg_1"	"decimal"	39	0	1	1
3394	498	"arg_2"	"wrd"	64	0	1	2
3395	499	"res_0"	"decimal"	39	0	0	0
3396	499	"arg_1"	"wrd"	64	0	1	1
3397	499	"arg_2"	"decimal"	39	0	1	2
3398	500	"res_0"	"decimal"	39	0	0	0
3399	500	"arg_1"	"decimal"	39	0	1	1
3400	500	"arg_2"	"decimal"	2	0	1	2
3401	501	"res_0"	"decimal"	39	0	0	0
3402	501	"arg_1"	"decimal"	2	0	1	1
3403	501	"arg_2"	"decimal"	39	0	1	2
3404	502	"res_0"	"decimal"	39	0	0	0
3405	502	"arg_1"	"decimal"	39	0	1	1
3406	502	"arg_2"	"decimal"	4	0	1	2
3407	503	"res_0"	"decimal"	39	0	0	0
3408	503	"arg_1"	"decimal"	4	0	1	1
3409	503	"arg_2"	"decimal"	39	0	1	2
3410	504	"res_0"	"decimal"	39	0	0	0
3411	504	"arg_1"	"decimal"	39	0	1	1
3412	504	"arg_2"	"decimal"	9	0	1	2
3413	505	"res_0"	"decimal"	39	0	0	0
3414	505	"arg_1"	"decimal"	9	0	1	1
3415	505	"arg_2"	"decimal"	39	0	1	2
3416	506	"res_0"	"decimal"	39	0	0	0
3417	506	"arg_1"	"decimal"	39	0	1	1
3418	506	"arg_2"	"decimal"	18	0	1	2
3419	507	"res_0"	"decimal"	39	0	0	0
3420	507	"arg_1"	"decimal"	18	0	1	1
3421	507	"arg_2"	"decimal"	39	0	1	2
3422	508	"res_0"	"decimal"	2	0	0	0
3423	508	"arg_1"	"decimal"	2	0	1	1
3424	508	"arg_2"	"tinyint"	8	0	1	2
3425	509	"res_0"	"decimal"	4	0	0	0
3426	509	"arg_1"	"decimal"	4	0	1	1
3427	509	"arg_2"	"tinyint"	8	0	1	2
3428	510	"res_0"	"decimal"	9	0	0	0
3429	510	"arg_1"	"decimal"	9	0	1	1
3430	510	"arg_2"	"tinyint"	8	0	1	2
3431	511	"res_0"	"decimal"	18	0	0	0
3432	511	"arg_1"	"decimal"	18	0	1	1
3433	511	"arg_2"	"tinyint"	8	0	1	2
3434	512	"res_0"	"decimal"	39	0	0	0
3435	512	"arg_1"	"decimal"	39	0	1	1
3436	512	"arg_2"	"tinyint"	8	0	1	2
3437	513	"res_0"	"real"	24	0	0	0
3438	513	"arg_1"	"real"	24	0	1	1
3439	513	"arg_2"	"tinyint"	8	0	1	2
3440	514	"res_0"	"double"	53	0	0	0
3441	514	"arg_1"	"double"	53	0	1	1
3442	514	"arg_2"	"tinyint"	8	0	1	2
3443	515	"res_0"	"oid"	63	0	0	0
3444	515	"arg_1"	"oid"	63	0	1	1
3445	515	"arg_2"	"oid"	63	0	1	2
3446	516	"res_0"	"oid"	63	0	0	0
3447	516	"arg_1"	"tinyint"	8	0	1	1
3448	516	"arg_2"	"oid"	63	0	1	2
3449	517	"res_0"	"oid"	63	0	0	0
3450	517	"arg_1"	"smallint"	16	0	1	1
3451	517	"arg_2"	"oid"	63	0	1	2
3452	518	"res_0"	"oid"	63	0	0	0
3453	518	"arg_1"	"int"	32	0	1	1
3454	518	"arg_2"	"oid"	63	0	1	2
3455	519	"res_0"	"oid"	63	0	0	0
3456	519	"arg_1"	"bigint"	64	0	1	1
3457	519	"arg_2"	"oid"	63	0	1	2
3458	520	"res_0"	"oid"	63	0	0	0
3459	520	"arg_1"	"wrd"	64	0	1	1
3460	520	"arg_2"	"oid"	63	0	1	2
3461	521	"res_0"	"oid"	63	0	0	0
3462	521	"arg_1"	"hugeint"	128	0	1	1
3463	521	"arg_2"	"oid"	63	0	1	2
3464	522	"res_0"	"oid"	63	0	0	0
3465	522	"arg_1"	"decimal"	2	0	1	1
3466	522	"arg_2"	"oid"	63	0	1	2
3467	523	"res_0"	"oid"	63	0	0	0
3468	523	"arg_1"	"decimal"	4	0	1	1
3469	523	"arg_2"	"oid"	63	0	1	2
3470	524	"res_0"	"oid"	63	0	0	0
3471	524	"arg_1"	"decimal"	9	0	1	1
3472	524	"arg_2"	"oid"	63	0	1	2
3473	525	"res_0"	"oid"	63	0	0	0
3474	525	"arg_1"	"decimal"	18	0	1	1
3475	525	"arg_2"	"oid"	63	0	1	2
3476	526	"res_0"	"oid"	63	0	0	0
3477	526	"arg_1"	"decimal"	39	0	1	1
3478	526	"arg_2"	"oid"	63	0	1	2
3479	527	"res_0"	"oid"	63	0	0	0
3480	527	"arg_1"	"real"	24	0	1	1
3481	527	"arg_2"	"oid"	63	0	1	2
3482	528	"res_0"	"oid"	63	0	0	0
3483	528	"arg_1"	"double"	53	0	1	1
3484	528	"arg_2"	"oid"	63	0	1	2
3485	529	"res_0"	"oid"	63	0	0	0
3486	529	"arg_1"	"month_interval"	32	0	1	1
3487	529	"arg_2"	"oid"	63	0	1	2
3488	530	"res_0"	"oid"	63	0	0	0
3489	530	"arg_1"	"sec_interval"	13	0	1	1
3490	530	"arg_2"	"oid"	63	0	1	2
3491	531	"res_0"	"oid"	63	0	0	0
3492	531	"arg_1"	"time"	7	0	1	1
3493	531	"arg_2"	"oid"	63	0	1	2
3494	532	"res_0"	"oid"	63	0	0	0
3495	532	"arg_1"	"timetz"	7	0	1	1
3496	532	"arg_2"	"oid"	63	0	1	2
3497	533	"res_0"	"oid"	63	0	0	0
3498	533	"arg_1"	"date"	0	0	1	1
3499	533	"arg_2"	"oid"	63	0	1	2
3500	534	"res_0"	"oid"	63	0	0	0
3501	534	"arg_1"	"timestamp"	7	0	1	1
3502	534	"arg_2"	"oid"	63	0	1	2
3503	535	"res_0"	"oid"	63	0	0	0
3504	535	"arg_1"	"timestamptz"	7	0	1	1
3505	535	"arg_2"	"oid"	63	0	1	2
3506	536	"res_0"	"oid"	63	0	0	0
3507	536	"arg_1"	"blob"	0	0	1	1
3508	536	"arg_2"	"oid"	63	0	1	2
3509	537	"res_0"	"tinyint"	8	0	0	0
3510	537	"arg_1"	"oid"	63	0	1	1
3511	537	"arg_2"	"tinyint"	8	0	1	2
3512	538	"res_0"	"tinyint"	8	0	0	0
3513	538	"arg_1"	"tinyint"	8	0	1	1
3514	538	"arg_2"	"tinyint"	8	0	1	2
3515	539	"res_0"	"tinyint"	8	0	0	0
3516	539	"arg_1"	"smallint"	16	0	1	1
3517	539	"arg_2"	"tinyint"	8	0	1	2
3518	540	"res_0"	"tinyint"	8	0	0	0
3519	540	"arg_1"	"int"	32	0	1	1
3520	540	"arg_2"	"tinyint"	8	0	1	2
3521	541	"res_0"	"tinyint"	8	0	0	0
3522	541	"arg_1"	"bigint"	64	0	1	1
3523	541	"arg_2"	"tinyint"	8	0	1	2
3524	542	"res_0"	"tinyint"	8	0	0	0
3525	542	"arg_1"	"wrd"	64	0	1	1
3526	542	"arg_2"	"tinyint"	8	0	1	2
3527	543	"res_0"	"tinyint"	8	0	0	0
3528	543	"arg_1"	"hugeint"	128	0	1	1
3529	543	"arg_2"	"tinyint"	8	0	1	2
3530	544	"res_0"	"tinyint"	8	0	0	0
3531	544	"arg_1"	"decimal"	2	0	1	1
3532	544	"arg_2"	"tinyint"	8	0	1	2
3533	545	"res_0"	"tinyint"	8	0	0	0
3534	545	"arg_1"	"decimal"	4	0	1	1
3535	545	"arg_2"	"tinyint"	8	0	1	2
3536	546	"res_0"	"tinyint"	8	0	0	0
3537	546	"arg_1"	"decimal"	9	0	1	1
3538	546	"arg_2"	"tinyint"	8	0	1	2
3539	547	"res_0"	"tinyint"	8	0	0	0
3540	547	"arg_1"	"decimal"	18	0	1	1
3541	547	"arg_2"	"tinyint"	8	0	1	2
3542	548	"res_0"	"tinyint"	8	0	0	0
3543	548	"arg_1"	"decimal"	39	0	1	1
3544	548	"arg_2"	"tinyint"	8	0	1	2
3545	549	"res_0"	"tinyint"	8	0	0	0
3546	549	"arg_1"	"real"	24	0	1	1
3547	549	"arg_2"	"tinyint"	8	0	1	2
3548	550	"res_0"	"tinyint"	8	0	0	0
3549	550	"arg_1"	"double"	53	0	1	1
3550	550	"arg_2"	"tinyint"	8	0	1	2
3551	551	"res_0"	"tinyint"	8	0	0	0
3552	551	"arg_1"	"month_interval"	32	0	1	1
3553	551	"arg_2"	"tinyint"	8	0	1	2
3554	552	"res_0"	"tinyint"	8	0	0	0
3555	552	"arg_1"	"sec_interval"	13	0	1	1
3556	552	"arg_2"	"tinyint"	8	0	1	2
3557	553	"res_0"	"tinyint"	8	0	0	0
3558	553	"arg_1"	"time"	7	0	1	1
3559	553	"arg_2"	"tinyint"	8	0	1	2
3560	554	"res_0"	"tinyint"	8	0	0	0
3561	554	"arg_1"	"timetz"	7	0	1	1
3562	554	"arg_2"	"tinyint"	8	0	1	2
3563	555	"res_0"	"tinyint"	8	0	0	0
3564	555	"arg_1"	"date"	0	0	1	1
3565	555	"arg_2"	"tinyint"	8	0	1	2
3566	556	"res_0"	"tinyint"	8	0	0	0
3567	556	"arg_1"	"timestamp"	7	0	1	1
3568	556	"arg_2"	"tinyint"	8	0	1	2
3569	557	"res_0"	"tinyint"	8	0	0	0
3570	557	"arg_1"	"timestamptz"	7	0	1	1
3571	557	"arg_2"	"tinyint"	8	0	1	2
3572	558	"res_0"	"tinyint"	8	0	0	0
3573	558	"arg_1"	"blob"	0	0	1	1
3574	558	"arg_2"	"tinyint"	8	0	1	2
3575	559	"res_0"	"smallint"	16	0	0	0
3576	559	"arg_1"	"oid"	63	0	1	1
3577	559	"arg_2"	"smallint"	16	0	1	2
3578	560	"res_0"	"smallint"	16	0	0	0
3579	560	"arg_1"	"tinyint"	8	0	1	1
3580	560	"arg_2"	"smallint"	16	0	1	2
3581	561	"res_0"	"smallint"	16	0	0	0
3582	561	"arg_1"	"smallint"	16	0	1	1
3583	561	"arg_2"	"smallint"	16	0	1	2
3584	562	"res_0"	"smallint"	16	0	0	0
3585	562	"arg_1"	"int"	32	0	1	1
3586	562	"arg_2"	"smallint"	16	0	1	2
3587	563	"res_0"	"smallint"	16	0	0	0
3588	563	"arg_1"	"bigint"	64	0	1	1
3589	563	"arg_2"	"smallint"	16	0	1	2
3590	564	"res_0"	"smallint"	16	0	0	0
3591	564	"arg_1"	"wrd"	64	0	1	1
3592	564	"arg_2"	"smallint"	16	0	1	2
3593	565	"res_0"	"smallint"	16	0	0	0
3594	565	"arg_1"	"hugeint"	128	0	1	1
3595	565	"arg_2"	"smallint"	16	0	1	2
3596	566	"res_0"	"smallint"	16	0	0	0
3597	566	"arg_1"	"decimal"	2	0	1	1
3598	566	"arg_2"	"smallint"	16	0	1	2
3599	567	"res_0"	"smallint"	16	0	0	0
3600	567	"arg_1"	"decimal"	4	0	1	1
3601	567	"arg_2"	"smallint"	16	0	1	2
3602	568	"res_0"	"smallint"	16	0	0	0
3603	568	"arg_1"	"decimal"	9	0	1	1
3604	568	"arg_2"	"smallint"	16	0	1	2
3605	569	"res_0"	"smallint"	16	0	0	0
3606	569	"arg_1"	"decimal"	18	0	1	1
3607	569	"arg_2"	"smallint"	16	0	1	2
3608	570	"res_0"	"smallint"	16	0	0	0
3609	570	"arg_1"	"decimal"	39	0	1	1
3610	570	"arg_2"	"smallint"	16	0	1	2
3611	571	"res_0"	"smallint"	16	0	0	0
3612	571	"arg_1"	"real"	24	0	1	1
3613	571	"arg_2"	"smallint"	16	0	1	2
3614	572	"res_0"	"smallint"	16	0	0	0
3615	572	"arg_1"	"double"	53	0	1	1
3616	572	"arg_2"	"smallint"	16	0	1	2
3617	573	"res_0"	"smallint"	16	0	0	0
3618	573	"arg_1"	"month_interval"	32	0	1	1
3619	573	"arg_2"	"smallint"	16	0	1	2
3620	574	"res_0"	"smallint"	16	0	0	0
3621	574	"arg_1"	"sec_interval"	13	0	1	1
3622	574	"arg_2"	"smallint"	16	0	1	2
3623	575	"res_0"	"smallint"	16	0	0	0
3624	575	"arg_1"	"time"	7	0	1	1
3625	575	"arg_2"	"smallint"	16	0	1	2
3626	576	"res_0"	"smallint"	16	0	0	0
3627	576	"arg_1"	"timetz"	7	0	1	1
3628	576	"arg_2"	"smallint"	16	0	1	2
3629	577	"res_0"	"smallint"	16	0	0	0
3630	577	"arg_1"	"date"	0	0	1	1
3631	577	"arg_2"	"smallint"	16	0	1	2
3632	578	"res_0"	"smallint"	16	0	0	0
3633	578	"arg_1"	"timestamp"	7	0	1	1
3634	578	"arg_2"	"smallint"	16	0	1	2
3635	579	"res_0"	"smallint"	16	0	0	0
3636	579	"arg_1"	"timestamptz"	7	0	1	1
3637	579	"arg_2"	"smallint"	16	0	1	2
3638	580	"res_0"	"smallint"	16	0	0	0
3639	580	"arg_1"	"blob"	0	0	1	1
3640	580	"arg_2"	"smallint"	16	0	1	2
3641	581	"res_0"	"int"	32	0	0	0
3642	581	"arg_1"	"oid"	63	0	1	1
3643	581	"arg_2"	"int"	32	0	1	2
3644	582	"res_0"	"int"	32	0	0	0
3645	582	"arg_1"	"tinyint"	8	0	1	1
3646	582	"arg_2"	"int"	32	0	1	2
3647	583	"res_0"	"int"	32	0	0	0
3648	583	"arg_1"	"smallint"	16	0	1	1
3649	583	"arg_2"	"int"	32	0	1	2
3650	584	"res_0"	"int"	32	0	0	0
3651	584	"arg_1"	"int"	32	0	1	1
3652	584	"arg_2"	"int"	32	0	1	2
3653	585	"res_0"	"int"	32	0	0	0
3654	585	"arg_1"	"bigint"	64	0	1	1
3655	585	"arg_2"	"int"	32	0	1	2
3656	586	"res_0"	"int"	32	0	0	0
3657	586	"arg_1"	"wrd"	64	0	1	1
3658	586	"arg_2"	"int"	32	0	1	2
3659	587	"res_0"	"int"	32	0	0	0
3660	587	"arg_1"	"hugeint"	128	0	1	1
3661	587	"arg_2"	"int"	32	0	1	2
3662	588	"res_0"	"int"	32	0	0	0
3663	588	"arg_1"	"decimal"	2	0	1	1
3664	588	"arg_2"	"int"	32	0	1	2
3665	589	"res_0"	"int"	32	0	0	0
3666	589	"arg_1"	"decimal"	4	0	1	1
3667	589	"arg_2"	"int"	32	0	1	2
3668	590	"res_0"	"int"	32	0	0	0
3669	590	"arg_1"	"decimal"	9	0	1	1
3670	590	"arg_2"	"int"	32	0	1	2
3671	591	"res_0"	"int"	32	0	0	0
3672	591	"arg_1"	"decimal"	18	0	1	1
3673	591	"arg_2"	"int"	32	0	1	2
3674	592	"res_0"	"int"	32	0	0	0
3675	592	"arg_1"	"decimal"	39	0	1	1
3676	592	"arg_2"	"int"	32	0	1	2
3677	593	"res_0"	"int"	32	0	0	0
3678	593	"arg_1"	"real"	24	0	1	1
3679	593	"arg_2"	"int"	32	0	1	2
3680	594	"res_0"	"int"	32	0	0	0
3681	594	"arg_1"	"double"	53	0	1	1
3682	594	"arg_2"	"int"	32	0	1	2
3683	595	"res_0"	"int"	32	0	0	0
3684	595	"arg_1"	"month_interval"	32	0	1	1
3685	595	"arg_2"	"int"	32	0	1	2
3686	596	"res_0"	"int"	32	0	0	0
3687	596	"arg_1"	"sec_interval"	13	0	1	1
3688	596	"arg_2"	"int"	32	0	1	2
3689	597	"res_0"	"int"	32	0	0	0
3690	597	"arg_1"	"time"	7	0	1	1
3691	597	"arg_2"	"int"	32	0	1	2
3692	598	"res_0"	"int"	32	0	0	0
3693	598	"arg_1"	"timetz"	7	0	1	1
3694	598	"arg_2"	"int"	32	0	1	2
3695	599	"res_0"	"int"	32	0	0	0
3696	599	"arg_1"	"date"	0	0	1	1
3697	599	"arg_2"	"int"	32	0	1	2
3698	600	"res_0"	"int"	32	0	0	0
3699	600	"arg_1"	"timestamp"	7	0	1	1
3700	600	"arg_2"	"int"	32	0	1	2
3701	601	"res_0"	"int"	32	0	0	0
3702	601	"arg_1"	"timestamptz"	7	0	1	1
3703	601	"arg_2"	"int"	32	0	1	2
3704	602	"res_0"	"int"	32	0	0	0
3705	602	"arg_1"	"blob"	0	0	1	1
3706	602	"arg_2"	"int"	32	0	1	2
3707	603	"res_0"	"bigint"	64	0	0	0
3708	603	"arg_1"	"oid"	63	0	1	1
3709	603	"arg_2"	"bigint"	64	0	1	2
3710	604	"res_0"	"bigint"	64	0	0	0
3711	604	"arg_1"	"tinyint"	8	0	1	1
3712	604	"arg_2"	"bigint"	64	0	1	2
3713	605	"res_0"	"bigint"	64	0	0	0
3714	605	"arg_1"	"smallint"	16	0	1	1
3715	605	"arg_2"	"bigint"	64	0	1	2
3716	606	"res_0"	"bigint"	64	0	0	0
3717	606	"arg_1"	"int"	32	0	1	1
3718	606	"arg_2"	"bigint"	64	0	1	2
3719	607	"res_0"	"bigint"	64	0	0	0
3720	607	"arg_1"	"bigint"	64	0	1	1
3721	607	"arg_2"	"bigint"	64	0	1	2
3722	608	"res_0"	"bigint"	64	0	0	0
3723	608	"arg_1"	"wrd"	64	0	1	1
3724	608	"arg_2"	"bigint"	64	0	1	2
3725	609	"res_0"	"bigint"	64	0	0	0
3726	609	"arg_1"	"hugeint"	128	0	1	1
3727	609	"arg_2"	"bigint"	64	0	1	2
3728	610	"res_0"	"bigint"	64	0	0	0
3729	610	"arg_1"	"decimal"	2	0	1	1
3730	610	"arg_2"	"bigint"	64	0	1	2
3731	611	"res_0"	"bigint"	64	0	0	0
3732	611	"arg_1"	"decimal"	4	0	1	1
3733	611	"arg_2"	"bigint"	64	0	1	2
3734	612	"res_0"	"bigint"	64	0	0	0
3735	612	"arg_1"	"decimal"	9	0	1	1
3736	612	"arg_2"	"bigint"	64	0	1	2
3737	613	"res_0"	"bigint"	64	0	0	0
3738	613	"arg_1"	"decimal"	18	0	1	1
3739	613	"arg_2"	"bigint"	64	0	1	2
3740	614	"res_0"	"bigint"	64	0	0	0
3741	614	"arg_1"	"decimal"	39	0	1	1
3742	614	"arg_2"	"bigint"	64	0	1	2
3743	615	"res_0"	"bigint"	64	0	0	0
3744	615	"arg_1"	"real"	24	0	1	1
3745	615	"arg_2"	"bigint"	64	0	1	2
3746	616	"res_0"	"bigint"	64	0	0	0
3747	616	"arg_1"	"double"	53	0	1	1
3748	616	"arg_2"	"bigint"	64	0	1	2
3749	617	"res_0"	"bigint"	64	0	0	0
3750	617	"arg_1"	"month_interval"	32	0	1	1
3751	617	"arg_2"	"bigint"	64	0	1	2
3752	618	"res_0"	"bigint"	64	0	0	0
3753	618	"arg_1"	"sec_interval"	13	0	1	1
3754	618	"arg_2"	"bigint"	64	0	1	2
3755	619	"res_0"	"bigint"	64	0	0	0
3756	619	"arg_1"	"time"	7	0	1	1
3757	619	"arg_2"	"bigint"	64	0	1	2
3758	620	"res_0"	"bigint"	64	0	0	0
3759	620	"arg_1"	"timetz"	7	0	1	1
3760	620	"arg_2"	"bigint"	64	0	1	2
3761	621	"res_0"	"bigint"	64	0	0	0
3762	621	"arg_1"	"date"	0	0	1	1
3763	621	"arg_2"	"bigint"	64	0	1	2
3764	622	"res_0"	"bigint"	64	0	0	0
3765	622	"arg_1"	"timestamp"	7	0	1	1
3766	622	"arg_2"	"bigint"	64	0	1	2
3767	623	"res_0"	"bigint"	64	0	0	0
3768	623	"arg_1"	"timestamptz"	7	0	1	1
3769	623	"arg_2"	"bigint"	64	0	1	2
3770	624	"res_0"	"bigint"	64	0	0	0
3771	624	"arg_1"	"blob"	0	0	1	1
3772	624	"arg_2"	"bigint"	64	0	1	2
3773	625	"res_0"	"wrd"	64	0	0	0
3774	625	"arg_1"	"oid"	63	0	1	1
3775	625	"arg_2"	"wrd"	64	0	1	2
3776	626	"res_0"	"wrd"	64	0	0	0
3777	626	"arg_1"	"tinyint"	8	0	1	1
3778	626	"arg_2"	"wrd"	64	0	1	2
3779	627	"res_0"	"wrd"	64	0	0	0
3780	627	"arg_1"	"smallint"	16	0	1	1
3781	627	"arg_2"	"wrd"	64	0	1	2
3782	628	"res_0"	"wrd"	64	0	0	0
3783	628	"arg_1"	"int"	32	0	1	1
3784	628	"arg_2"	"wrd"	64	0	1	2
3785	629	"res_0"	"wrd"	64	0	0	0
3786	629	"arg_1"	"bigint"	64	0	1	1
3787	629	"arg_2"	"wrd"	64	0	1	2
3788	630	"res_0"	"wrd"	64	0	0	0
3789	630	"arg_1"	"wrd"	64	0	1	1
3790	630	"arg_2"	"wrd"	64	0	1	2
3791	631	"res_0"	"wrd"	64	0	0	0
3792	631	"arg_1"	"hugeint"	128	0	1	1
3793	631	"arg_2"	"wrd"	64	0	1	2
3794	632	"res_0"	"wrd"	64	0	0	0
3795	632	"arg_1"	"decimal"	2	0	1	1
3796	632	"arg_2"	"wrd"	64	0	1	2
3797	633	"res_0"	"wrd"	64	0	0	0
3798	633	"arg_1"	"decimal"	4	0	1	1
3799	633	"arg_2"	"wrd"	64	0	1	2
3800	634	"res_0"	"wrd"	64	0	0	0
3801	634	"arg_1"	"decimal"	9	0	1	1
3802	634	"arg_2"	"wrd"	64	0	1	2
3803	635	"res_0"	"wrd"	64	0	0	0
3804	635	"arg_1"	"decimal"	18	0	1	1
3805	635	"arg_2"	"wrd"	64	0	1	2
3806	636	"res_0"	"wrd"	64	0	0	0
3807	636	"arg_1"	"decimal"	39	0	1	1
3808	636	"arg_2"	"wrd"	64	0	1	2
3809	637	"res_0"	"wrd"	64	0	0	0
3810	637	"arg_1"	"real"	24	0	1	1
3811	637	"arg_2"	"wrd"	64	0	1	2
3812	638	"res_0"	"wrd"	64	0	0	0
3813	638	"arg_1"	"double"	53	0	1	1
3814	638	"arg_2"	"wrd"	64	0	1	2
3815	639	"res_0"	"wrd"	64	0	0	0
3816	639	"arg_1"	"month_interval"	32	0	1	1
3817	639	"arg_2"	"wrd"	64	0	1	2
3818	640	"res_0"	"wrd"	64	0	0	0
3819	640	"arg_1"	"sec_interval"	13	0	1	1
3820	640	"arg_2"	"wrd"	64	0	1	2
3821	641	"res_0"	"wrd"	64	0	0	0
3822	641	"arg_1"	"time"	7	0	1	1
3823	641	"arg_2"	"wrd"	64	0	1	2
3824	642	"res_0"	"wrd"	64	0	0	0
3825	642	"arg_1"	"timetz"	7	0	1	1
3826	642	"arg_2"	"wrd"	64	0	1	2
3827	643	"res_0"	"wrd"	64	0	0	0
3828	643	"arg_1"	"date"	0	0	1	1
3829	643	"arg_2"	"wrd"	64	0	1	2
3830	644	"res_0"	"wrd"	64	0	0	0
3831	644	"arg_1"	"timestamp"	7	0	1	1
3832	644	"arg_2"	"wrd"	64	0	1	2
3833	645	"res_0"	"wrd"	64	0	0	0
3834	645	"arg_1"	"timestamptz"	7	0	1	1
3835	645	"arg_2"	"wrd"	64	0	1	2
3836	646	"res_0"	"wrd"	64	0	0	0
3837	646	"arg_1"	"blob"	0	0	1	1
3838	646	"arg_2"	"wrd"	64	0	1	2
3839	647	"res_0"	"hugeint"	128	0	0	0
3840	647	"arg_1"	"oid"	63	0	1	1
3841	647	"arg_2"	"hugeint"	128	0	1	2
3842	648	"res_0"	"hugeint"	128	0	0	0
3843	648	"arg_1"	"tinyint"	8	0	1	1
3844	648	"arg_2"	"hugeint"	128	0	1	2
3845	649	"res_0"	"hugeint"	128	0	0	0
3846	649	"arg_1"	"smallint"	16	0	1	1
3847	649	"arg_2"	"hugeint"	128	0	1	2
3848	650	"res_0"	"hugeint"	128	0	0	0
3849	650	"arg_1"	"int"	32	0	1	1
3850	650	"arg_2"	"hugeint"	128	0	1	2
3851	651	"res_0"	"hugeint"	128	0	0	0
3852	651	"arg_1"	"bigint"	64	0	1	1
3853	651	"arg_2"	"hugeint"	128	0	1	2
3854	652	"res_0"	"hugeint"	128	0	0	0
3855	652	"arg_1"	"wrd"	64	0	1	1
3856	652	"arg_2"	"hugeint"	128	0	1	2
3857	653	"res_0"	"hugeint"	128	0	0	0
3858	653	"arg_1"	"hugeint"	128	0	1	1
3859	653	"arg_2"	"hugeint"	128	0	1	2
3860	654	"res_0"	"hugeint"	128	0	0	0
3861	654	"arg_1"	"decimal"	2	0	1	1
3862	654	"arg_2"	"hugeint"	128	0	1	2
3863	655	"res_0"	"hugeint"	128	0	0	0
3864	655	"arg_1"	"decimal"	4	0	1	1
3865	655	"arg_2"	"hugeint"	128	0	1	2
3866	656	"res_0"	"hugeint"	128	0	0	0
3867	656	"arg_1"	"decimal"	9	0	1	1
3868	656	"arg_2"	"hugeint"	128	0	1	2
3869	657	"res_0"	"hugeint"	128	0	0	0
3870	657	"arg_1"	"decimal"	18	0	1	1
3871	657	"arg_2"	"hugeint"	128	0	1	2
3872	658	"res_0"	"hugeint"	128	0	0	0
3873	658	"arg_1"	"decimal"	39	0	1	1
3874	658	"arg_2"	"hugeint"	128	0	1	2
3875	659	"res_0"	"hugeint"	128	0	0	0
3876	659	"arg_1"	"real"	24	0	1	1
3877	659	"arg_2"	"hugeint"	128	0	1	2
3878	660	"res_0"	"hugeint"	128	0	0	0
3879	660	"arg_1"	"double"	53	0	1	1
3880	660	"arg_2"	"hugeint"	128	0	1	2
3881	661	"res_0"	"hugeint"	128	0	0	0
3882	661	"arg_1"	"month_interval"	32	0	1	1
3883	661	"arg_2"	"hugeint"	128	0	1	2
3884	662	"res_0"	"hugeint"	128	0	0	0
3885	662	"arg_1"	"sec_interval"	13	0	1	1
3886	662	"arg_2"	"hugeint"	128	0	1	2
3887	663	"res_0"	"hugeint"	128	0	0	0
3888	663	"arg_1"	"time"	7	0	1	1
3889	663	"arg_2"	"hugeint"	128	0	1	2
3890	664	"res_0"	"hugeint"	128	0	0	0
3891	664	"arg_1"	"timetz"	7	0	1	1
3892	664	"arg_2"	"hugeint"	128	0	1	2
3893	665	"res_0"	"hugeint"	128	0	0	0
3894	665	"arg_1"	"date"	0	0	1	1
3895	665	"arg_2"	"hugeint"	128	0	1	2
3896	666	"res_0"	"hugeint"	128	0	0	0
3897	666	"arg_1"	"timestamp"	7	0	1	1
3898	666	"arg_2"	"hugeint"	128	0	1	2
3899	667	"res_0"	"hugeint"	128	0	0	0
3900	667	"arg_1"	"timestamptz"	7	0	1	1
3901	667	"arg_2"	"hugeint"	128	0	1	2
3902	668	"res_0"	"hugeint"	128	0	0	0
3903	668	"arg_1"	"blob"	0	0	1	1
3904	668	"arg_2"	"hugeint"	128	0	1	2
3905	669	"res_0"	"decimal"	2	0	0	0
3906	669	"arg_1"	"oid"	63	0	1	1
3907	669	"arg_2"	"decimal"	2	0	1	2
3908	670	"res_0"	"decimal"	2	0	0	0
3909	670	"arg_1"	"tinyint"	8	0	1	1
3910	670	"arg_2"	"decimal"	2	0	1	2
3911	671	"res_0"	"decimal"	2	0	0	0
3912	671	"arg_1"	"smallint"	16	0	1	1
3913	671	"arg_2"	"decimal"	2	0	1	2
3914	672	"res_0"	"decimal"	2	0	0	0
3915	672	"arg_1"	"int"	32	0	1	1
3916	672	"arg_2"	"decimal"	2	0	1	2
3917	673	"res_0"	"decimal"	2	0	0	0
3918	673	"arg_1"	"bigint"	64	0	1	1
3919	673	"arg_2"	"decimal"	2	0	1	2
3920	674	"res_0"	"decimal"	2	0	0	0
3921	674	"arg_1"	"wrd"	64	0	1	1
3922	674	"arg_2"	"decimal"	2	0	1	2
3923	675	"res_0"	"decimal"	2	0	0	0
3924	675	"arg_1"	"hugeint"	128	0	1	1
3925	675	"arg_2"	"decimal"	2	0	1	2
3926	676	"res_0"	"decimal"	2	0	0	0
3927	676	"arg_1"	"decimal"	2	0	1	1
3928	676	"arg_2"	"decimal"	2	0	1	2
3929	677	"res_0"	"decimal"	2	0	0	0
3930	677	"arg_1"	"decimal"	4	0	1	1
3931	677	"arg_2"	"decimal"	2	0	1	2
3932	678	"res_0"	"decimal"	2	0	0	0
3933	678	"arg_1"	"decimal"	9	0	1	1
3934	678	"arg_2"	"decimal"	2	0	1	2
3935	679	"res_0"	"decimal"	2	0	0	0
3936	679	"arg_1"	"decimal"	18	0	1	1
3937	679	"arg_2"	"decimal"	2	0	1	2
3938	680	"res_0"	"decimal"	2	0	0	0
3939	680	"arg_1"	"decimal"	39	0	1	1
3940	680	"arg_2"	"decimal"	2	0	1	2
3941	681	"res_0"	"decimal"	2	0	0	0
3942	681	"arg_1"	"real"	24	0	1	1
3943	681	"arg_2"	"decimal"	2	0	1	2
3944	682	"res_0"	"decimal"	2	0	0	0
3945	682	"arg_1"	"double"	53	0	1	1
3946	682	"arg_2"	"decimal"	2	0	1	2
3947	683	"res_0"	"decimal"	2	0	0	0
3948	683	"arg_1"	"month_interval"	32	0	1	1
3949	683	"arg_2"	"decimal"	2	0	1	2
3950	684	"res_0"	"decimal"	2	0	0	0
3951	684	"arg_1"	"sec_interval"	13	0	1	1
3952	684	"arg_2"	"decimal"	2	0	1	2
3953	685	"res_0"	"decimal"	2	0	0	0
3954	685	"arg_1"	"time"	7	0	1	1
3955	685	"arg_2"	"decimal"	2	0	1	2
3956	686	"res_0"	"decimal"	2	0	0	0
3957	686	"arg_1"	"timetz"	7	0	1	1
3958	686	"arg_2"	"decimal"	2	0	1	2
3959	687	"res_0"	"decimal"	2	0	0	0
3960	687	"arg_1"	"date"	0	0	1	1
3961	687	"arg_2"	"decimal"	2	0	1	2
3962	688	"res_0"	"decimal"	2	0	0	0
3963	688	"arg_1"	"timestamp"	7	0	1	1
3964	688	"arg_2"	"decimal"	2	0	1	2
3965	689	"res_0"	"decimal"	2	0	0	0
3966	689	"arg_1"	"timestamptz"	7	0	1	1
3967	689	"arg_2"	"decimal"	2	0	1	2
3968	690	"res_0"	"decimal"	2	0	0	0
3969	690	"arg_1"	"blob"	0	0	1	1
3970	690	"arg_2"	"decimal"	2	0	1	2
3971	691	"res_0"	"decimal"	4	0	0	0
3972	691	"arg_1"	"oid"	63	0	1	1
3973	691	"arg_2"	"decimal"	4	0	1	2
3974	692	"res_0"	"decimal"	4	0	0	0
3975	692	"arg_1"	"tinyint"	8	0	1	1
3976	692	"arg_2"	"decimal"	4	0	1	2
3977	693	"res_0"	"decimal"	4	0	0	0
3978	693	"arg_1"	"smallint"	16	0	1	1
3979	693	"arg_2"	"decimal"	4	0	1	2
3980	694	"res_0"	"decimal"	4	0	0	0
3981	694	"arg_1"	"int"	32	0	1	1
3982	694	"arg_2"	"decimal"	4	0	1	2
3983	695	"res_0"	"decimal"	4	0	0	0
3984	695	"arg_1"	"bigint"	64	0	1	1
3985	695	"arg_2"	"decimal"	4	0	1	2
3986	696	"res_0"	"decimal"	4	0	0	0
3987	696	"arg_1"	"wrd"	64	0	1	1
3988	696	"arg_2"	"decimal"	4	0	1	2
3989	697	"res_0"	"decimal"	4	0	0	0
3990	697	"arg_1"	"hugeint"	128	0	1	1
3991	697	"arg_2"	"decimal"	4	0	1	2
3992	698	"res_0"	"decimal"	4	0	0	0
3993	698	"arg_1"	"decimal"	2	0	1	1
3994	698	"arg_2"	"decimal"	4	0	1	2
3995	699	"res_0"	"decimal"	4	0	0	0
3996	699	"arg_1"	"decimal"	4	0	1	1
3997	699	"arg_2"	"decimal"	4	0	1	2
3998	700	"res_0"	"decimal"	4	0	0	0
3999	700	"arg_1"	"decimal"	9	0	1	1
4000	700	"arg_2"	"decimal"	4	0	1	2
4001	701	"res_0"	"decimal"	4	0	0	0
4002	701	"arg_1"	"decimal"	18	0	1	1
4003	701	"arg_2"	"decimal"	4	0	1	2
4004	702	"res_0"	"decimal"	4	0	0	0
4005	702	"arg_1"	"decimal"	39	0	1	1
4006	702	"arg_2"	"decimal"	4	0	1	2
4007	703	"res_0"	"decimal"	4	0	0	0
4008	703	"arg_1"	"real"	24	0	1	1
4009	703	"arg_2"	"decimal"	4	0	1	2
4010	704	"res_0"	"decimal"	4	0	0	0
4011	704	"arg_1"	"double"	53	0	1	1
4012	704	"arg_2"	"decimal"	4	0	1	2
4013	705	"res_0"	"decimal"	4	0	0	0
4014	705	"arg_1"	"month_interval"	32	0	1	1
4015	705	"arg_2"	"decimal"	4	0	1	2
4016	706	"res_0"	"decimal"	4	0	0	0
4017	706	"arg_1"	"sec_interval"	13	0	1	1
4018	706	"arg_2"	"decimal"	4	0	1	2
4019	707	"res_0"	"decimal"	4	0	0	0
4020	707	"arg_1"	"time"	7	0	1	1
4021	707	"arg_2"	"decimal"	4	0	1	2
4022	708	"res_0"	"decimal"	4	0	0	0
4023	708	"arg_1"	"timetz"	7	0	1	1
4024	708	"arg_2"	"decimal"	4	0	1	2
4025	709	"res_0"	"decimal"	4	0	0	0
4026	709	"arg_1"	"date"	0	0	1	1
4027	709	"arg_2"	"decimal"	4	0	1	2
4028	710	"res_0"	"decimal"	4	0	0	0
4029	710	"arg_1"	"timestamp"	7	0	1	1
4030	710	"arg_2"	"decimal"	4	0	1	2
4031	711	"res_0"	"decimal"	4	0	0	0
4032	711	"arg_1"	"timestamptz"	7	0	1	1
4033	711	"arg_2"	"decimal"	4	0	1	2
4034	712	"res_0"	"decimal"	4	0	0	0
4035	712	"arg_1"	"blob"	0	0	1	1
4036	712	"arg_2"	"decimal"	4	0	1	2
4037	713	"res_0"	"decimal"	9	0	0	0
4038	713	"arg_1"	"oid"	63	0	1	1
4039	713	"arg_2"	"decimal"	9	0	1	2
4040	714	"res_0"	"decimal"	9	0	0	0
4041	714	"arg_1"	"tinyint"	8	0	1	1
4042	714	"arg_2"	"decimal"	9	0	1	2
4043	715	"res_0"	"decimal"	9	0	0	0
4044	715	"arg_1"	"smallint"	16	0	1	1
4045	715	"arg_2"	"decimal"	9	0	1	2
4046	716	"res_0"	"decimal"	9	0	0	0
4047	716	"arg_1"	"int"	32	0	1	1
4048	716	"arg_2"	"decimal"	9	0	1	2
4049	717	"res_0"	"decimal"	9	0	0	0
4050	717	"arg_1"	"bigint"	64	0	1	1
4051	717	"arg_2"	"decimal"	9	0	1	2
4052	718	"res_0"	"decimal"	9	0	0	0
4053	718	"arg_1"	"wrd"	64	0	1	1
4054	718	"arg_2"	"decimal"	9	0	1	2
4055	719	"res_0"	"decimal"	9	0	0	0
4056	719	"arg_1"	"hugeint"	128	0	1	1
4057	719	"arg_2"	"decimal"	9	0	1	2
4058	720	"res_0"	"decimal"	9	0	0	0
4059	720	"arg_1"	"decimal"	2	0	1	1
4060	720	"arg_2"	"decimal"	9	0	1	2
4061	721	"res_0"	"decimal"	9	0	0	0
4062	721	"arg_1"	"decimal"	4	0	1	1
4063	721	"arg_2"	"decimal"	9	0	1	2
4064	722	"res_0"	"decimal"	9	0	0	0
4065	722	"arg_1"	"decimal"	9	0	1	1
4066	722	"arg_2"	"decimal"	9	0	1	2
4067	723	"res_0"	"decimal"	9	0	0	0
4068	723	"arg_1"	"decimal"	18	0	1	1
4069	723	"arg_2"	"decimal"	9	0	1	2
4070	724	"res_0"	"decimal"	9	0	0	0
4071	724	"arg_1"	"decimal"	39	0	1	1
4072	724	"arg_2"	"decimal"	9	0	1	2
4073	725	"res_0"	"decimal"	9	0	0	0
4074	725	"arg_1"	"real"	24	0	1	1
4075	725	"arg_2"	"decimal"	9	0	1	2
4076	726	"res_0"	"decimal"	9	0	0	0
4077	726	"arg_1"	"double"	53	0	1	1
4078	726	"arg_2"	"decimal"	9	0	1	2
4079	727	"res_0"	"decimal"	9	0	0	0
4080	727	"arg_1"	"month_interval"	32	0	1	1
4081	727	"arg_2"	"decimal"	9	0	1	2
4082	728	"res_0"	"decimal"	9	0	0	0
4083	728	"arg_1"	"sec_interval"	13	0	1	1
4084	728	"arg_2"	"decimal"	9	0	1	2
4085	729	"res_0"	"decimal"	9	0	0	0
4086	729	"arg_1"	"time"	7	0	1	1
4087	729	"arg_2"	"decimal"	9	0	1	2
4088	730	"res_0"	"decimal"	9	0	0	0
4089	730	"arg_1"	"timetz"	7	0	1	1
4090	730	"arg_2"	"decimal"	9	0	1	2
4091	731	"res_0"	"decimal"	9	0	0	0
4092	731	"arg_1"	"date"	0	0	1	1
4093	731	"arg_2"	"decimal"	9	0	1	2
4094	732	"res_0"	"decimal"	9	0	0	0
4095	732	"arg_1"	"timestamp"	7	0	1	1
4096	732	"arg_2"	"decimal"	9	0	1	2
4097	733	"res_0"	"decimal"	9	0	0	0
4098	733	"arg_1"	"timestamptz"	7	0	1	1
4099	733	"arg_2"	"decimal"	9	0	1	2
4100	734	"res_0"	"decimal"	9	0	0	0
4101	734	"arg_1"	"blob"	0	0	1	1
4102	734	"arg_2"	"decimal"	9	0	1	2
4103	735	"res_0"	"decimal"	18	0	0	0
4104	735	"arg_1"	"oid"	63	0	1	1
4105	735	"arg_2"	"decimal"	18	0	1	2
4106	736	"res_0"	"decimal"	18	0	0	0
4107	736	"arg_1"	"tinyint"	8	0	1	1
4108	736	"arg_2"	"decimal"	18	0	1	2
4109	737	"res_0"	"decimal"	18	0	0	0
4110	737	"arg_1"	"smallint"	16	0	1	1
4111	737	"arg_2"	"decimal"	18	0	1	2
4112	738	"res_0"	"decimal"	18	0	0	0
4113	738	"arg_1"	"int"	32	0	1	1
4114	738	"arg_2"	"decimal"	18	0	1	2
4115	739	"res_0"	"decimal"	18	0	0	0
4116	739	"arg_1"	"bigint"	64	0	1	1
4117	739	"arg_2"	"decimal"	18	0	1	2
4118	740	"res_0"	"decimal"	18	0	0	0
4119	740	"arg_1"	"wrd"	64	0	1	1
4120	740	"arg_2"	"decimal"	18	0	1	2
4121	741	"res_0"	"decimal"	18	0	0	0
4122	741	"arg_1"	"hugeint"	128	0	1	1
4123	741	"arg_2"	"decimal"	18	0	1	2
4124	742	"res_0"	"decimal"	18	0	0	0
4125	742	"arg_1"	"decimal"	2	0	1	1
4126	742	"arg_2"	"decimal"	18	0	1	2
4127	743	"res_0"	"decimal"	18	0	0	0
4128	743	"arg_1"	"decimal"	4	0	1	1
4129	743	"arg_2"	"decimal"	18	0	1	2
4130	744	"res_0"	"decimal"	18	0	0	0
4131	744	"arg_1"	"decimal"	9	0	1	1
4132	744	"arg_2"	"decimal"	18	0	1	2
4133	745	"res_0"	"decimal"	18	0	0	0
4134	745	"arg_1"	"decimal"	18	0	1	1
4135	745	"arg_2"	"decimal"	18	0	1	2
4136	746	"res_0"	"decimal"	18	0	0	0
4137	746	"arg_1"	"decimal"	39	0	1	1
4138	746	"arg_2"	"decimal"	18	0	1	2
4139	747	"res_0"	"decimal"	18	0	0	0
4140	747	"arg_1"	"real"	24	0	1	1
4141	747	"arg_2"	"decimal"	18	0	1	2
4142	748	"res_0"	"decimal"	18	0	0	0
4143	748	"arg_1"	"double"	53	0	1	1
4144	748	"arg_2"	"decimal"	18	0	1	2
4145	749	"res_0"	"decimal"	18	0	0	0
4146	749	"arg_1"	"month_interval"	32	0	1	1
4147	749	"arg_2"	"decimal"	18	0	1	2
4148	750	"res_0"	"decimal"	18	0	0	0
4149	750	"arg_1"	"sec_interval"	13	0	1	1
4150	750	"arg_2"	"decimal"	18	0	1	2
4151	751	"res_0"	"decimal"	18	0	0	0
4152	751	"arg_1"	"time"	7	0	1	1
4153	751	"arg_2"	"decimal"	18	0	1	2
4154	752	"res_0"	"decimal"	18	0	0	0
4155	752	"arg_1"	"timetz"	7	0	1	1
4156	752	"arg_2"	"decimal"	18	0	1	2
4157	753	"res_0"	"decimal"	18	0	0	0
4158	753	"arg_1"	"date"	0	0	1	1
4159	753	"arg_2"	"decimal"	18	0	1	2
4160	754	"res_0"	"decimal"	18	0	0	0
4161	754	"arg_1"	"timestamp"	7	0	1	1
4162	754	"arg_2"	"decimal"	18	0	1	2
4163	755	"res_0"	"decimal"	18	0	0	0
4164	755	"arg_1"	"timestamptz"	7	0	1	1
4165	755	"arg_2"	"decimal"	18	0	1	2
4166	756	"res_0"	"decimal"	18	0	0	0
4167	756	"arg_1"	"blob"	0	0	1	1
4168	756	"arg_2"	"decimal"	18	0	1	2
4169	757	"res_0"	"decimal"	39	0	0	0
4170	757	"arg_1"	"oid"	63	0	1	1
4171	757	"arg_2"	"decimal"	39	0	1	2
4172	758	"res_0"	"decimal"	39	0	0	0
4173	758	"arg_1"	"tinyint"	8	0	1	1
4174	758	"arg_2"	"decimal"	39	0	1	2
4175	759	"res_0"	"decimal"	39	0	0	0
4176	759	"arg_1"	"smallint"	16	0	1	1
4177	759	"arg_2"	"decimal"	39	0	1	2
4178	760	"res_0"	"decimal"	39	0	0	0
4179	760	"arg_1"	"int"	32	0	1	1
4180	760	"arg_2"	"decimal"	39	0	1	2
4181	761	"res_0"	"decimal"	39	0	0	0
4182	761	"arg_1"	"bigint"	64	0	1	1
4183	761	"arg_2"	"decimal"	39	0	1	2
4184	762	"res_0"	"decimal"	39	0	0	0
4185	762	"arg_1"	"wrd"	64	0	1	1
4186	762	"arg_2"	"decimal"	39	0	1	2
4187	763	"res_0"	"decimal"	39	0	0	0
4188	763	"arg_1"	"hugeint"	128	0	1	1
4189	763	"arg_2"	"decimal"	39	0	1	2
4190	764	"res_0"	"decimal"	39	0	0	0
4191	764	"arg_1"	"decimal"	2	0	1	1
4192	764	"arg_2"	"decimal"	39	0	1	2
4193	765	"res_0"	"decimal"	39	0	0	0
4194	765	"arg_1"	"decimal"	4	0	1	1
4195	765	"arg_2"	"decimal"	39	0	1	2
4196	766	"res_0"	"decimal"	39	0	0	0
4197	766	"arg_1"	"decimal"	9	0	1	1
4198	766	"arg_2"	"decimal"	39	0	1	2
4199	767	"res_0"	"decimal"	39	0	0	0
4200	767	"arg_1"	"decimal"	18	0	1	1
4201	767	"arg_2"	"decimal"	39	0	1	2
4202	768	"res_0"	"decimal"	39	0	0	0
4203	768	"arg_1"	"decimal"	39	0	1	1
4204	768	"arg_2"	"decimal"	39	0	1	2
4205	769	"res_0"	"decimal"	39	0	0	0
4206	769	"arg_1"	"real"	24	0	1	1
4207	769	"arg_2"	"decimal"	39	0	1	2
4208	770	"res_0"	"decimal"	39	0	0	0
4209	770	"arg_1"	"double"	53	0	1	1
4210	770	"arg_2"	"decimal"	39	0	1	2
4211	771	"res_0"	"decimal"	39	0	0	0
4212	771	"arg_1"	"month_interval"	32	0	1	1
4213	771	"arg_2"	"decimal"	39	0	1	2
4214	772	"res_0"	"decimal"	39	0	0	0
4215	772	"arg_1"	"sec_interval"	13	0	1	1
4216	772	"arg_2"	"decimal"	39	0	1	2
4217	773	"res_0"	"decimal"	39	0	0	0
4218	773	"arg_1"	"time"	7	0	1	1
4219	773	"arg_2"	"decimal"	39	0	1	2
4220	774	"res_0"	"decimal"	39	0	0	0
4221	774	"arg_1"	"timetz"	7	0	1	1
4222	774	"arg_2"	"decimal"	39	0	1	2
4223	775	"res_0"	"decimal"	39	0	0	0
4224	775	"arg_1"	"date"	0	0	1	1
4225	775	"arg_2"	"decimal"	39	0	1	2
4226	776	"res_0"	"decimal"	39	0	0	0
4227	776	"arg_1"	"timestamp"	7	0	1	1
4228	776	"arg_2"	"decimal"	39	0	1	2
4229	777	"res_0"	"decimal"	39	0	0	0
4230	777	"arg_1"	"timestamptz"	7	0	1	1
4231	777	"arg_2"	"decimal"	39	0	1	2
4232	778	"res_0"	"decimal"	39	0	0	0
4233	778	"arg_1"	"blob"	0	0	1	1
4234	778	"arg_2"	"decimal"	39	0	1	2
4235	779	"res_0"	"real"	24	0	0	0
4236	779	"arg_1"	"oid"	63	0	1	1
4237	779	"arg_2"	"real"	24	0	1	2
4238	780	"res_0"	"real"	24	0	0	0
4239	780	"arg_1"	"tinyint"	8	0	1	1
4240	780	"arg_2"	"real"	24	0	1	2
4241	781	"res_0"	"real"	24	0	0	0
4242	781	"arg_1"	"smallint"	16	0	1	1
4243	781	"arg_2"	"real"	24	0	1	2
4244	782	"res_0"	"real"	24	0	0	0
4245	782	"arg_1"	"int"	32	0	1	1
4246	782	"arg_2"	"real"	24	0	1	2
4247	783	"res_0"	"real"	24	0	0	0
4248	783	"arg_1"	"bigint"	64	0	1	1
4249	783	"arg_2"	"real"	24	0	1	2
4250	784	"res_0"	"real"	24	0	0	0
4251	784	"arg_1"	"wrd"	64	0	1	1
4252	784	"arg_2"	"real"	24	0	1	2
4253	785	"res_0"	"real"	24	0	0	0
4254	785	"arg_1"	"hugeint"	128	0	1	1
4255	785	"arg_2"	"real"	24	0	1	2
4256	786	"res_0"	"real"	24	0	0	0
4257	786	"arg_1"	"decimal"	2	0	1	1
4258	786	"arg_2"	"real"	24	0	1	2
4259	787	"res_0"	"real"	24	0	0	0
4260	787	"arg_1"	"decimal"	4	0	1	1
4261	787	"arg_2"	"real"	24	0	1	2
4262	788	"res_0"	"real"	24	0	0	0
4263	788	"arg_1"	"decimal"	9	0	1	1
4264	788	"arg_2"	"real"	24	0	1	2
4265	789	"res_0"	"real"	24	0	0	0
4266	789	"arg_1"	"decimal"	18	0	1	1
4267	789	"arg_2"	"real"	24	0	1	2
4268	790	"res_0"	"real"	24	0	0	0
4269	790	"arg_1"	"decimal"	39	0	1	1
4270	790	"arg_2"	"real"	24	0	1	2
4271	791	"res_0"	"real"	24	0	0	0
4272	791	"arg_1"	"real"	24	0	1	1
4273	791	"arg_2"	"real"	24	0	1	2
4274	792	"res_0"	"real"	24	0	0	0
4275	792	"arg_1"	"double"	53	0	1	1
4276	792	"arg_2"	"real"	24	0	1	2
4277	793	"res_0"	"real"	24	0	0	0
4278	793	"arg_1"	"month_interval"	32	0	1	1
4279	793	"arg_2"	"real"	24	0	1	2
4280	794	"res_0"	"real"	24	0	0	0
4281	794	"arg_1"	"sec_interval"	13	0	1	1
4282	794	"arg_2"	"real"	24	0	1	2
4283	795	"res_0"	"real"	24	0	0	0
4284	795	"arg_1"	"time"	7	0	1	1
4285	795	"arg_2"	"real"	24	0	1	2
4286	796	"res_0"	"real"	24	0	0	0
4287	796	"arg_1"	"timetz"	7	0	1	1
4288	796	"arg_2"	"real"	24	0	1	2
4289	797	"res_0"	"real"	24	0	0	0
4290	797	"arg_1"	"date"	0	0	1	1
4291	797	"arg_2"	"real"	24	0	1	2
4292	798	"res_0"	"real"	24	0	0	0
4293	798	"arg_1"	"timestamp"	7	0	1	1
4294	798	"arg_2"	"real"	24	0	1	2
4295	799	"res_0"	"real"	24	0	0	0
4296	799	"arg_1"	"timestamptz"	7	0	1	1
4297	799	"arg_2"	"real"	24	0	1	2
4298	800	"res_0"	"real"	24	0	0	0
4299	800	"arg_1"	"blob"	0	0	1	1
4300	800	"arg_2"	"real"	24	0	1	2
4301	801	"res_0"	"double"	53	0	0	0
4302	801	"arg_1"	"oid"	63	0	1	1
4303	801	"arg_2"	"double"	53	0	1	2
4304	802	"res_0"	"double"	53	0	0	0
4305	802	"arg_1"	"tinyint"	8	0	1	1
4306	802	"arg_2"	"double"	53	0	1	2
4307	803	"res_0"	"double"	53	0	0	0
4308	803	"arg_1"	"smallint"	16	0	1	1
4309	803	"arg_2"	"double"	53	0	1	2
4310	804	"res_0"	"double"	53	0	0	0
4311	804	"arg_1"	"int"	32	0	1	1
4312	804	"arg_2"	"double"	53	0	1	2
4313	805	"res_0"	"double"	53	0	0	0
4314	805	"arg_1"	"bigint"	64	0	1	1
4315	805	"arg_2"	"double"	53	0	1	2
4316	806	"res_0"	"double"	53	0	0	0
4317	806	"arg_1"	"wrd"	64	0	1	1
4318	806	"arg_2"	"double"	53	0	1	2
4319	807	"res_0"	"double"	53	0	0	0
4320	807	"arg_1"	"hugeint"	128	0	1	1
4321	807	"arg_2"	"double"	53	0	1	2
4322	808	"res_0"	"double"	53	0	0	0
4323	808	"arg_1"	"decimal"	2	0	1	1
4324	808	"arg_2"	"double"	53	0	1	2
4325	809	"res_0"	"double"	53	0	0	0
4326	809	"arg_1"	"decimal"	4	0	1	1
4327	809	"arg_2"	"double"	53	0	1	2
4328	810	"res_0"	"double"	53	0	0	0
4329	810	"arg_1"	"decimal"	9	0	1	1
4330	810	"arg_2"	"double"	53	0	1	2
4331	811	"res_0"	"double"	53	0	0	0
4332	811	"arg_1"	"decimal"	18	0	1	1
4333	811	"arg_2"	"double"	53	0	1	2
4334	812	"res_0"	"double"	53	0	0	0
4335	812	"arg_1"	"decimal"	39	0	1	1
4336	812	"arg_2"	"double"	53	0	1	2
4337	813	"res_0"	"double"	53	0	0	0
4338	813	"arg_1"	"real"	24	0	1	1
4339	813	"arg_2"	"double"	53	0	1	2
4340	814	"res_0"	"double"	53	0	0	0
4341	814	"arg_1"	"double"	53	0	1	1
4342	814	"arg_2"	"double"	53	0	1	2
4343	815	"res_0"	"double"	53	0	0	0
4344	815	"arg_1"	"month_interval"	32	0	1	1
4345	815	"arg_2"	"double"	53	0	1	2
4346	816	"res_0"	"double"	53	0	0	0
4347	816	"arg_1"	"sec_interval"	13	0	1	1
4348	816	"arg_2"	"double"	53	0	1	2
4349	817	"res_0"	"double"	53	0	0	0
4350	817	"arg_1"	"time"	7	0	1	1
4351	817	"arg_2"	"double"	53	0	1	2
4352	818	"res_0"	"double"	53	0	0	0
4353	818	"arg_1"	"timetz"	7	0	1	1
4354	818	"arg_2"	"double"	53	0	1	2
4355	819	"res_0"	"double"	53	0	0	0
4356	819	"arg_1"	"date"	0	0	1	1
4357	819	"arg_2"	"double"	53	0	1	2
4358	820	"res_0"	"double"	53	0	0	0
4359	820	"arg_1"	"timestamp"	7	0	1	1
4360	820	"arg_2"	"double"	53	0	1	2
4361	821	"res_0"	"double"	53	0	0	0
4362	821	"arg_1"	"timestamptz"	7	0	1	1
4363	821	"arg_2"	"double"	53	0	1	2
4364	822	"res_0"	"double"	53	0	0	0
4365	822	"arg_1"	"blob"	0	0	1	1
4366	822	"arg_2"	"double"	53	0	1	2
4367	823	"res_0"	"month_interval"	32	0	0	0
4368	823	"arg_1"	"oid"	63	0	1	1
4369	823	"arg_2"	"month_interval"	32	0	1	2
4370	824	"res_0"	"month_interval"	32	0	0	0
4371	824	"arg_1"	"tinyint"	8	0	1	1
4372	824	"arg_2"	"month_interval"	32	0	1	2
4373	825	"res_0"	"month_interval"	32	0	0	0
4374	825	"arg_1"	"smallint"	16	0	1	1
4375	825	"arg_2"	"month_interval"	32	0	1	2
4376	826	"res_0"	"month_interval"	32	0	0	0
4377	826	"arg_1"	"int"	32	0	1	1
4378	826	"arg_2"	"month_interval"	32	0	1	2
4379	827	"res_0"	"month_interval"	32	0	0	0
4380	827	"arg_1"	"bigint"	64	0	1	1
4381	827	"arg_2"	"month_interval"	32	0	1	2
4382	828	"res_0"	"month_interval"	32	0	0	0
4383	828	"arg_1"	"wrd"	64	0	1	1
4384	828	"arg_2"	"month_interval"	32	0	1	2
4385	829	"res_0"	"month_interval"	32	0	0	0
4386	829	"arg_1"	"hugeint"	128	0	1	1
4387	829	"arg_2"	"month_interval"	32	0	1	2
4388	830	"res_0"	"month_interval"	32	0	0	0
4389	830	"arg_1"	"decimal"	2	0	1	1
4390	830	"arg_2"	"month_interval"	32	0	1	2
4391	831	"res_0"	"month_interval"	32	0	0	0
4392	831	"arg_1"	"decimal"	4	0	1	1
4393	831	"arg_2"	"month_interval"	32	0	1	2
4394	832	"res_0"	"month_interval"	32	0	0	0
4395	832	"arg_1"	"decimal"	9	0	1	1
4396	832	"arg_2"	"month_interval"	32	0	1	2
4397	833	"res_0"	"month_interval"	32	0	0	0
4398	833	"arg_1"	"decimal"	18	0	1	1
4399	833	"arg_2"	"month_interval"	32	0	1	2
4400	834	"res_0"	"month_interval"	32	0	0	0
4401	834	"arg_1"	"decimal"	39	0	1	1
4402	834	"arg_2"	"month_interval"	32	0	1	2
4403	835	"res_0"	"month_interval"	32	0	0	0
4404	835	"arg_1"	"real"	24	0	1	1
4405	835	"arg_2"	"month_interval"	32	0	1	2
4406	836	"res_0"	"month_interval"	32	0	0	0
4407	836	"arg_1"	"double"	53	0	1	1
4408	836	"arg_2"	"month_interval"	32	0	1	2
4409	837	"res_0"	"month_interval"	32	0	0	0
4410	837	"arg_1"	"month_interval"	32	0	1	1
4411	837	"arg_2"	"month_interval"	32	0	1	2
4412	838	"res_0"	"month_interval"	32	0	0	0
4413	838	"arg_1"	"sec_interval"	13	0	1	1
4414	838	"arg_2"	"month_interval"	32	0	1	2
4415	839	"res_0"	"month_interval"	32	0	0	0
4416	839	"arg_1"	"time"	7	0	1	1
4417	839	"arg_2"	"month_interval"	32	0	1	2
4418	840	"res_0"	"month_interval"	32	0	0	0
4419	840	"arg_1"	"timetz"	7	0	1	1
4420	840	"arg_2"	"month_interval"	32	0	1	2
4421	841	"res_0"	"month_interval"	32	0	0	0
4422	841	"arg_1"	"date"	0	0	1	1
4423	841	"arg_2"	"month_interval"	32	0	1	2
4424	842	"res_0"	"month_interval"	32	0	0	0
4425	842	"arg_1"	"timestamp"	7	0	1	1
4426	842	"arg_2"	"month_interval"	32	0	1	2
4427	843	"res_0"	"month_interval"	32	0	0	0
4428	843	"arg_1"	"timestamptz"	7	0	1	1
4429	843	"arg_2"	"month_interval"	32	0	1	2
4430	844	"res_0"	"month_interval"	32	0	0	0
4431	844	"arg_1"	"blob"	0	0	1	1
4432	844	"arg_2"	"month_interval"	32	0	1	2
4433	845	"res_0"	"sec_interval"	13	0	0	0
4434	845	"arg_1"	"oid"	63	0	1	1
4435	845	"arg_2"	"sec_interval"	13	0	1	2
4436	846	"res_0"	"sec_interval"	13	0	0	0
4437	846	"arg_1"	"tinyint"	8	0	1	1
4438	846	"arg_2"	"sec_interval"	13	0	1	2
4439	847	"res_0"	"sec_interval"	13	0	0	0
4440	847	"arg_1"	"smallint"	16	0	1	1
4441	847	"arg_2"	"sec_interval"	13	0	1	2
4442	848	"res_0"	"sec_interval"	13	0	0	0
4443	848	"arg_1"	"int"	32	0	1	1
4444	848	"arg_2"	"sec_interval"	13	0	1	2
4445	849	"res_0"	"sec_interval"	13	0	0	0
4446	849	"arg_1"	"bigint"	64	0	1	1
4447	849	"arg_2"	"sec_interval"	13	0	1	2
4448	850	"res_0"	"sec_interval"	13	0	0	0
4449	850	"arg_1"	"wrd"	64	0	1	1
4450	850	"arg_2"	"sec_interval"	13	0	1	2
4451	851	"res_0"	"sec_interval"	13	0	0	0
4452	851	"arg_1"	"hugeint"	128	0	1	1
4453	851	"arg_2"	"sec_interval"	13	0	1	2
4454	852	"res_0"	"sec_interval"	13	0	0	0
4455	852	"arg_1"	"decimal"	2	0	1	1
4456	852	"arg_2"	"sec_interval"	13	0	1	2
4457	853	"res_0"	"sec_interval"	13	0	0	0
4458	853	"arg_1"	"decimal"	4	0	1	1
4459	853	"arg_2"	"sec_interval"	13	0	1	2
4460	854	"res_0"	"sec_interval"	13	0	0	0
4461	854	"arg_1"	"decimal"	9	0	1	1
4462	854	"arg_2"	"sec_interval"	13	0	1	2
4463	855	"res_0"	"sec_interval"	13	0	0	0
4464	855	"arg_1"	"decimal"	18	0	1	1
4465	855	"arg_2"	"sec_interval"	13	0	1	2
4466	856	"res_0"	"sec_interval"	13	0	0	0
4467	856	"arg_1"	"decimal"	39	0	1	1
4468	856	"arg_2"	"sec_interval"	13	0	1	2
4469	857	"res_0"	"sec_interval"	13	0	0	0
4470	857	"arg_1"	"real"	24	0	1	1
4471	857	"arg_2"	"sec_interval"	13	0	1	2
4472	858	"res_0"	"sec_interval"	13	0	0	0
4473	858	"arg_1"	"double"	53	0	1	1
4474	858	"arg_2"	"sec_interval"	13	0	1	2
4475	859	"res_0"	"sec_interval"	13	0	0	0
4476	859	"arg_1"	"month_interval"	32	0	1	1
4477	859	"arg_2"	"sec_interval"	13	0	1	2
4478	860	"res_0"	"sec_interval"	13	0	0	0
4479	860	"arg_1"	"sec_interval"	13	0	1	1
4480	860	"arg_2"	"sec_interval"	13	0	1	2
4481	861	"res_0"	"sec_interval"	13	0	0	0
4482	861	"arg_1"	"time"	7	0	1	1
4483	861	"arg_2"	"sec_interval"	13	0	1	2
4484	862	"res_0"	"sec_interval"	13	0	0	0
4485	862	"arg_1"	"timetz"	7	0	1	1
4486	862	"arg_2"	"sec_interval"	13	0	1	2
4487	863	"res_0"	"sec_interval"	13	0	0	0
4488	863	"arg_1"	"date"	0	0	1	1
4489	863	"arg_2"	"sec_interval"	13	0	1	2
4490	864	"res_0"	"sec_interval"	13	0	0	0
4491	864	"arg_1"	"timestamp"	7	0	1	1
4492	864	"arg_2"	"sec_interval"	13	0	1	2
4493	865	"res_0"	"sec_interval"	13	0	0	0
4494	865	"arg_1"	"timestamptz"	7	0	1	1
4495	865	"arg_2"	"sec_interval"	13	0	1	2
4496	866	"res_0"	"sec_interval"	13	0	0	0
4497	866	"arg_1"	"blob"	0	0	1	1
4498	866	"arg_2"	"sec_interval"	13	0	1	2
4499	867	"res_0"	"time"	7	0	0	0
4500	867	"arg_1"	"oid"	63	0	1	1
4501	867	"arg_2"	"time"	7	0	1	2
4502	868	"res_0"	"time"	7	0	0	0
4503	868	"arg_1"	"tinyint"	8	0	1	1
4504	868	"arg_2"	"time"	7	0	1	2
4505	869	"res_0"	"time"	7	0	0	0
4506	869	"arg_1"	"smallint"	16	0	1	1
4507	869	"arg_2"	"time"	7	0	1	2
4508	870	"res_0"	"time"	7	0	0	0
4509	870	"arg_1"	"int"	32	0	1	1
4510	870	"arg_2"	"time"	7	0	1	2
4511	871	"res_0"	"time"	7	0	0	0
4512	871	"arg_1"	"bigint"	64	0	1	1
4513	871	"arg_2"	"time"	7	0	1	2
4514	872	"res_0"	"time"	7	0	0	0
4515	872	"arg_1"	"wrd"	64	0	1	1
4516	872	"arg_2"	"time"	7	0	1	2
4517	873	"res_0"	"time"	7	0	0	0
4518	873	"arg_1"	"hugeint"	128	0	1	1
4519	873	"arg_2"	"time"	7	0	1	2
4520	874	"res_0"	"time"	7	0	0	0
4521	874	"arg_1"	"decimal"	2	0	1	1
4522	874	"arg_2"	"time"	7	0	1	2
4523	875	"res_0"	"time"	7	0	0	0
4524	875	"arg_1"	"decimal"	4	0	1	1
4525	875	"arg_2"	"time"	7	0	1	2
4526	876	"res_0"	"time"	7	0	0	0
4527	876	"arg_1"	"decimal"	9	0	1	1
4528	876	"arg_2"	"time"	7	0	1	2
4529	877	"res_0"	"time"	7	0	0	0
4530	877	"arg_1"	"decimal"	18	0	1	1
4531	877	"arg_2"	"time"	7	0	1	2
4532	878	"res_0"	"time"	7	0	0	0
4533	878	"arg_1"	"decimal"	39	0	1	1
4534	878	"arg_2"	"time"	7	0	1	2
4535	879	"res_0"	"time"	7	0	0	0
4536	879	"arg_1"	"real"	24	0	1	1
4537	879	"arg_2"	"time"	7	0	1	2
4538	880	"res_0"	"time"	7	0	0	0
4539	880	"arg_1"	"double"	53	0	1	1
4540	880	"arg_2"	"time"	7	0	1	2
4541	881	"res_0"	"time"	7	0	0	0
4542	881	"arg_1"	"month_interval"	32	0	1	1
4543	881	"arg_2"	"time"	7	0	1	2
4544	882	"res_0"	"time"	7	0	0	0
4545	882	"arg_1"	"sec_interval"	13	0	1	1
4546	882	"arg_2"	"time"	7	0	1	2
4547	883	"res_0"	"time"	7	0	0	0
4548	883	"arg_1"	"time"	7	0	1	1
4549	883	"arg_2"	"time"	7	0	1	2
4550	884	"res_0"	"time"	7	0	0	0
4551	884	"arg_1"	"timetz"	7	0	1	1
4552	884	"arg_2"	"time"	7	0	1	2
4553	885	"res_0"	"time"	7	0	0	0
4554	885	"arg_1"	"date"	0	0	1	1
4555	885	"arg_2"	"time"	7	0	1	2
4556	886	"res_0"	"time"	7	0	0	0
4557	886	"arg_1"	"timestamp"	7	0	1	1
4558	886	"arg_2"	"time"	7	0	1	2
4559	887	"res_0"	"time"	7	0	0	0
4560	887	"arg_1"	"timestamptz"	7	0	1	1
4561	887	"arg_2"	"time"	7	0	1	2
4562	888	"res_0"	"time"	7	0	0	0
4563	888	"arg_1"	"blob"	0	0	1	1
4564	888	"arg_2"	"time"	7	0	1	2
4565	889	"res_0"	"timetz"	7	0	0	0
4566	889	"arg_1"	"oid"	63	0	1	1
4567	889	"arg_2"	"timetz"	7	0	1	2
4568	890	"res_0"	"timetz"	7	0	0	0
4569	890	"arg_1"	"tinyint"	8	0	1	1
4570	890	"arg_2"	"timetz"	7	0	1	2
4571	891	"res_0"	"timetz"	7	0	0	0
4572	891	"arg_1"	"smallint"	16	0	1	1
4573	891	"arg_2"	"timetz"	7	0	1	2
4574	892	"res_0"	"timetz"	7	0	0	0
4575	892	"arg_1"	"int"	32	0	1	1
4576	892	"arg_2"	"timetz"	7	0	1	2
4577	893	"res_0"	"timetz"	7	0	0	0
4578	893	"arg_1"	"bigint"	64	0	1	1
4579	893	"arg_2"	"timetz"	7	0	1	2
4580	894	"res_0"	"timetz"	7	0	0	0
4581	894	"arg_1"	"wrd"	64	0	1	1
4582	894	"arg_2"	"timetz"	7	0	1	2
4583	895	"res_0"	"timetz"	7	0	0	0
4584	895	"arg_1"	"hugeint"	128	0	1	1
4585	895	"arg_2"	"timetz"	7	0	1	2
4586	896	"res_0"	"timetz"	7	0	0	0
4587	896	"arg_1"	"decimal"	2	0	1	1
4588	896	"arg_2"	"timetz"	7	0	1	2
4589	897	"res_0"	"timetz"	7	0	0	0
4590	897	"arg_1"	"decimal"	4	0	1	1
4591	897	"arg_2"	"timetz"	7	0	1	2
4592	898	"res_0"	"timetz"	7	0	0	0
4593	898	"arg_1"	"decimal"	9	0	1	1
4594	898	"arg_2"	"timetz"	7	0	1	2
4595	899	"res_0"	"timetz"	7	0	0	0
4596	899	"arg_1"	"decimal"	18	0	1	1
4597	899	"arg_2"	"timetz"	7	0	1	2
4598	900	"res_0"	"timetz"	7	0	0	0
4599	900	"arg_1"	"decimal"	39	0	1	1
4600	900	"arg_2"	"timetz"	7	0	1	2
4601	901	"res_0"	"timetz"	7	0	0	0
4602	901	"arg_1"	"real"	24	0	1	1
4603	901	"arg_2"	"timetz"	7	0	1	2
4604	902	"res_0"	"timetz"	7	0	0	0
4605	902	"arg_1"	"double"	53	0	1	1
4606	902	"arg_2"	"timetz"	7	0	1	2
4607	903	"res_0"	"timetz"	7	0	0	0
4608	903	"arg_1"	"month_interval"	32	0	1	1
4609	903	"arg_2"	"timetz"	7	0	1	2
4610	904	"res_0"	"timetz"	7	0	0	0
4611	904	"arg_1"	"sec_interval"	13	0	1	1
4612	904	"arg_2"	"timetz"	7	0	1	2
4613	905	"res_0"	"timetz"	7	0	0	0
4614	905	"arg_1"	"time"	7	0	1	1
4615	905	"arg_2"	"timetz"	7	0	1	2
4616	906	"res_0"	"timetz"	7	0	0	0
4617	906	"arg_1"	"timetz"	7	0	1	1
4618	906	"arg_2"	"timetz"	7	0	1	2
4619	907	"res_0"	"timetz"	7	0	0	0
4620	907	"arg_1"	"date"	0	0	1	1
4621	907	"arg_2"	"timetz"	7	0	1	2
4622	908	"res_0"	"timetz"	7	0	0	0
4623	908	"arg_1"	"timestamp"	7	0	1	1
4624	908	"arg_2"	"timetz"	7	0	1	2
4625	909	"res_0"	"timetz"	7	0	0	0
4626	909	"arg_1"	"timestamptz"	7	0	1	1
4627	909	"arg_2"	"timetz"	7	0	1	2
4628	910	"res_0"	"timetz"	7	0	0	0
4629	910	"arg_1"	"blob"	0	0	1	1
4630	910	"arg_2"	"timetz"	7	0	1	2
4631	911	"res_0"	"date"	0	0	0	0
4632	911	"arg_1"	"oid"	63	0	1	1
4633	911	"arg_2"	"date"	0	0	1	2
4634	912	"res_0"	"date"	0	0	0	0
4635	912	"arg_1"	"tinyint"	8	0	1	1
4636	912	"arg_2"	"date"	0	0	1	2
4637	913	"res_0"	"date"	0	0	0	0
4638	913	"arg_1"	"smallint"	16	0	1	1
4639	913	"arg_2"	"date"	0	0	1	2
4640	914	"res_0"	"date"	0	0	0	0
4641	914	"arg_1"	"int"	32	0	1	1
4642	914	"arg_2"	"date"	0	0	1	2
4643	915	"res_0"	"date"	0	0	0	0
4644	915	"arg_1"	"bigint"	64	0	1	1
4645	915	"arg_2"	"date"	0	0	1	2
4646	916	"res_0"	"date"	0	0	0	0
4647	916	"arg_1"	"wrd"	64	0	1	1
4648	916	"arg_2"	"date"	0	0	1	2
4649	917	"res_0"	"date"	0	0	0	0
4650	917	"arg_1"	"hugeint"	128	0	1	1
4651	917	"arg_2"	"date"	0	0	1	2
4652	918	"res_0"	"date"	0	0	0	0
4653	918	"arg_1"	"decimal"	2	0	1	1
4654	918	"arg_2"	"date"	0	0	1	2
4655	919	"res_0"	"date"	0	0	0	0
4656	919	"arg_1"	"decimal"	4	0	1	1
4657	919	"arg_2"	"date"	0	0	1	2
4658	920	"res_0"	"date"	0	0	0	0
4659	920	"arg_1"	"decimal"	9	0	1	1
4660	920	"arg_2"	"date"	0	0	1	2
4661	921	"res_0"	"date"	0	0	0	0
4662	921	"arg_1"	"decimal"	18	0	1	1
4663	921	"arg_2"	"date"	0	0	1	2
4664	922	"res_0"	"date"	0	0	0	0
4665	922	"arg_1"	"decimal"	39	0	1	1
4666	922	"arg_2"	"date"	0	0	1	2
4667	923	"res_0"	"date"	0	0	0	0
4668	923	"arg_1"	"real"	24	0	1	1
4669	923	"arg_2"	"date"	0	0	1	2
4670	924	"res_0"	"date"	0	0	0	0
4671	924	"arg_1"	"double"	53	0	1	1
4672	924	"arg_2"	"date"	0	0	1	2
4673	925	"res_0"	"date"	0	0	0	0
4674	925	"arg_1"	"month_interval"	32	0	1	1
4675	925	"arg_2"	"date"	0	0	1	2
4676	926	"res_0"	"date"	0	0	0	0
4677	926	"arg_1"	"sec_interval"	13	0	1	1
4678	926	"arg_2"	"date"	0	0	1	2
4679	927	"res_0"	"date"	0	0	0	0
4680	927	"arg_1"	"time"	7	0	1	1
4681	927	"arg_2"	"date"	0	0	1	2
4682	928	"res_0"	"date"	0	0	0	0
4683	928	"arg_1"	"timetz"	7	0	1	1
4684	928	"arg_2"	"date"	0	0	1	2
4685	929	"res_0"	"date"	0	0	0	0
4686	929	"arg_1"	"date"	0	0	1	1
4687	929	"arg_2"	"date"	0	0	1	2
4688	930	"res_0"	"date"	0	0	0	0
4689	930	"arg_1"	"timestamp"	7	0	1	1
4690	930	"arg_2"	"date"	0	0	1	2
4691	931	"res_0"	"date"	0	0	0	0
4692	931	"arg_1"	"timestamptz"	7	0	1	1
4693	931	"arg_2"	"date"	0	0	1	2
4694	932	"res_0"	"date"	0	0	0	0
4695	932	"arg_1"	"blob"	0	0	1	1
4696	932	"arg_2"	"date"	0	0	1	2
4697	933	"res_0"	"timestamp"	7	0	0	0
4698	933	"arg_1"	"oid"	63	0	1	1
4699	933	"arg_2"	"timestamp"	7	0	1	2
4700	934	"res_0"	"timestamp"	7	0	0	0
4701	934	"arg_1"	"tinyint"	8	0	1	1
4702	934	"arg_2"	"timestamp"	7	0	1	2
4703	935	"res_0"	"timestamp"	7	0	0	0
4704	935	"arg_1"	"smallint"	16	0	1	1
4705	935	"arg_2"	"timestamp"	7	0	1	2
4706	936	"res_0"	"timestamp"	7	0	0	0
4707	936	"arg_1"	"int"	32	0	1	1
4708	936	"arg_2"	"timestamp"	7	0	1	2
4709	937	"res_0"	"timestamp"	7	0	0	0
4710	937	"arg_1"	"bigint"	64	0	1	1
4711	937	"arg_2"	"timestamp"	7	0	1	2
4712	938	"res_0"	"timestamp"	7	0	0	0
4713	938	"arg_1"	"wrd"	64	0	1	1
4714	938	"arg_2"	"timestamp"	7	0	1	2
4715	939	"res_0"	"timestamp"	7	0	0	0
4716	939	"arg_1"	"hugeint"	128	0	1	1
4717	939	"arg_2"	"timestamp"	7	0	1	2
4718	940	"res_0"	"timestamp"	7	0	0	0
4719	940	"arg_1"	"decimal"	2	0	1	1
4720	940	"arg_2"	"timestamp"	7	0	1	2
4721	941	"res_0"	"timestamp"	7	0	0	0
4722	941	"arg_1"	"decimal"	4	0	1	1
4723	941	"arg_2"	"timestamp"	7	0	1	2
4724	942	"res_0"	"timestamp"	7	0	0	0
4725	942	"arg_1"	"decimal"	9	0	1	1
4726	942	"arg_2"	"timestamp"	7	0	1	2
4727	943	"res_0"	"timestamp"	7	0	0	0
4728	943	"arg_1"	"decimal"	18	0	1	1
4729	943	"arg_2"	"timestamp"	7	0	1	2
4730	944	"res_0"	"timestamp"	7	0	0	0
4731	944	"arg_1"	"decimal"	39	0	1	1
4732	944	"arg_2"	"timestamp"	7	0	1	2
4733	945	"res_0"	"timestamp"	7	0	0	0
4734	945	"arg_1"	"real"	24	0	1	1
4735	945	"arg_2"	"timestamp"	7	0	1	2
4736	946	"res_0"	"timestamp"	7	0	0	0
4737	946	"arg_1"	"double"	53	0	1	1
4738	946	"arg_2"	"timestamp"	7	0	1	2
4739	947	"res_0"	"timestamp"	7	0	0	0
4740	947	"arg_1"	"month_interval"	32	0	1	1
4741	947	"arg_2"	"timestamp"	7	0	1	2
4742	948	"res_0"	"timestamp"	7	0	0	0
4743	948	"arg_1"	"sec_interval"	13	0	1	1
4744	948	"arg_2"	"timestamp"	7	0	1	2
4745	949	"res_0"	"timestamp"	7	0	0	0
4746	949	"arg_1"	"time"	7	0	1	1
4747	949	"arg_2"	"timestamp"	7	0	1	2
4748	950	"res_0"	"timestamp"	7	0	0	0
4749	950	"arg_1"	"timetz"	7	0	1	1
4750	950	"arg_2"	"timestamp"	7	0	1	2
4751	951	"res_0"	"timestamp"	7	0	0	0
4752	951	"arg_1"	"date"	0	0	1	1
4753	951	"arg_2"	"timestamp"	7	0	1	2
4754	952	"res_0"	"timestamp"	7	0	0	0
4755	952	"arg_1"	"timestamp"	7	0	1	1
4756	952	"arg_2"	"timestamp"	7	0	1	2
4757	953	"res_0"	"timestamp"	7	0	0	0
4758	953	"arg_1"	"timestamptz"	7	0	1	1
4759	953	"arg_2"	"timestamp"	7	0	1	2
4760	954	"res_0"	"timestamp"	7	0	0	0
4761	954	"arg_1"	"blob"	0	0	1	1
4762	954	"arg_2"	"timestamp"	7	0	1	2
4763	955	"res_0"	"timestamptz"	7	0	0	0
4764	955	"arg_1"	"oid"	63	0	1	1
4765	955	"arg_2"	"timestamptz"	7	0	1	2
4766	956	"res_0"	"timestamptz"	7	0	0	0
4767	956	"arg_1"	"tinyint"	8	0	1	1
4768	956	"arg_2"	"timestamptz"	7	0	1	2
4769	957	"res_0"	"timestamptz"	7	0	0	0
4770	957	"arg_1"	"smallint"	16	0	1	1
4771	957	"arg_2"	"timestamptz"	7	0	1	2
4772	958	"res_0"	"timestamptz"	7	0	0	0
4773	958	"arg_1"	"int"	32	0	1	1
4774	958	"arg_2"	"timestamptz"	7	0	1	2
4775	959	"res_0"	"timestamptz"	7	0	0	0
4776	959	"arg_1"	"bigint"	64	0	1	1
4777	959	"arg_2"	"timestamptz"	7	0	1	2
4778	960	"res_0"	"timestamptz"	7	0	0	0
4779	960	"arg_1"	"wrd"	64	0	1	1
4780	960	"arg_2"	"timestamptz"	7	0	1	2
4781	961	"res_0"	"timestamptz"	7	0	0	0
4782	961	"arg_1"	"hugeint"	128	0	1	1
4783	961	"arg_2"	"timestamptz"	7	0	1	2
4784	962	"res_0"	"timestamptz"	7	0	0	0
4785	962	"arg_1"	"decimal"	2	0	1	1
4786	962	"arg_2"	"timestamptz"	7	0	1	2
4787	963	"res_0"	"timestamptz"	7	0	0	0
4788	963	"arg_1"	"decimal"	4	0	1	1
4789	963	"arg_2"	"timestamptz"	7	0	1	2
4790	964	"res_0"	"timestamptz"	7	0	0	0
4791	964	"arg_1"	"decimal"	9	0	1	1
4792	964	"arg_2"	"timestamptz"	7	0	1	2
4793	965	"res_0"	"timestamptz"	7	0	0	0
4794	965	"arg_1"	"decimal"	18	0	1	1
4795	965	"arg_2"	"timestamptz"	7	0	1	2
4796	966	"res_0"	"timestamptz"	7	0	0	0
4797	966	"arg_1"	"decimal"	39	0	1	1
4798	966	"arg_2"	"timestamptz"	7	0	1	2
4799	967	"res_0"	"timestamptz"	7	0	0	0
4800	967	"arg_1"	"real"	24	0	1	1
4801	967	"arg_2"	"timestamptz"	7	0	1	2
4802	968	"res_0"	"timestamptz"	7	0	0	0
4803	968	"arg_1"	"double"	53	0	1	1
4804	968	"arg_2"	"timestamptz"	7	0	1	2
4805	969	"res_0"	"timestamptz"	7	0	0	0
4806	969	"arg_1"	"month_interval"	32	0	1	1
4807	969	"arg_2"	"timestamptz"	7	0	1	2
4808	970	"res_0"	"timestamptz"	7	0	0	0
4809	970	"arg_1"	"sec_interval"	13	0	1	1
4810	970	"arg_2"	"timestamptz"	7	0	1	2
4811	971	"res_0"	"timestamptz"	7	0	0	0
4812	971	"arg_1"	"time"	7	0	1	1
4813	971	"arg_2"	"timestamptz"	7	0	1	2
4814	972	"res_0"	"timestamptz"	7	0	0	0
4815	972	"arg_1"	"timetz"	7	0	1	1
4816	972	"arg_2"	"timestamptz"	7	0	1	2
4817	973	"res_0"	"timestamptz"	7	0	0	0
4818	973	"arg_1"	"date"	0	0	1	1
4819	973	"arg_2"	"timestamptz"	7	0	1	2
4820	974	"res_0"	"timestamptz"	7	0	0	0
4821	974	"arg_1"	"timestamp"	7	0	1	1
4822	974	"arg_2"	"timestamptz"	7	0	1	2
4823	975	"res_0"	"timestamptz"	7	0	0	0
4824	975	"arg_1"	"timestamptz"	7	0	1	1
4825	975	"arg_2"	"timestamptz"	7	0	1	2
4826	976	"res_0"	"timestamptz"	7	0	0	0
4827	976	"arg_1"	"blob"	0	0	1	1
4828	976	"arg_2"	"timestamptz"	7	0	1	2
4829	977	"res_0"	"blob"	0	0	0	0
4830	977	"arg_1"	"oid"	63	0	1	1
4831	977	"arg_2"	"blob"	0	0	1	2
4832	978	"res_0"	"blob"	0	0	0	0
4833	978	"arg_1"	"tinyint"	8	0	1	1
4834	978	"arg_2"	"blob"	0	0	1	2
4835	979	"res_0"	"blob"	0	0	0	0
4836	979	"arg_1"	"smallint"	16	0	1	1
4837	979	"arg_2"	"blob"	0	0	1	2
4838	980	"res_0"	"blob"	0	0	0	0
4839	980	"arg_1"	"int"	32	0	1	1
4840	980	"arg_2"	"blob"	0	0	1	2
4841	981	"res_0"	"blob"	0	0	0	0
4842	981	"arg_1"	"bigint"	64	0	1	1
4843	981	"arg_2"	"blob"	0	0	1	2
4844	982	"res_0"	"blob"	0	0	0	0
4845	982	"arg_1"	"wrd"	64	0	1	1
4846	982	"arg_2"	"blob"	0	0	1	2
4847	983	"res_0"	"blob"	0	0	0	0
4848	983	"arg_1"	"hugeint"	128	0	1	1
4849	983	"arg_2"	"blob"	0	0	1	2
4850	984	"res_0"	"blob"	0	0	0	0
4851	984	"arg_1"	"decimal"	2	0	1	1
4852	984	"arg_2"	"blob"	0	0	1	2
4853	985	"res_0"	"blob"	0	0	0	0
4854	985	"arg_1"	"decimal"	4	0	1	1
4855	985	"arg_2"	"blob"	0	0	1	2
4856	986	"res_0"	"blob"	0	0	0	0
4857	986	"arg_1"	"decimal"	9	0	1	1
4858	986	"arg_2"	"blob"	0	0	1	2
4859	987	"res_0"	"blob"	0	0	0	0
4860	987	"arg_1"	"decimal"	18	0	1	1
4861	987	"arg_2"	"blob"	0	0	1	2
4862	988	"res_0"	"blob"	0	0	0	0
4863	988	"arg_1"	"decimal"	39	0	1	1
4864	988	"arg_2"	"blob"	0	0	1	2
4865	989	"res_0"	"blob"	0	0	0	0
4866	989	"arg_1"	"real"	24	0	1	1
4867	989	"arg_2"	"blob"	0	0	1	2
4868	990	"res_0"	"blob"	0	0	0	0
4869	990	"arg_1"	"double"	53	0	1	1
4870	990	"arg_2"	"blob"	0	0	1	2
4871	991	"res_0"	"blob"	0	0	0	0
4872	991	"arg_1"	"month_interval"	32	0	1	1
4873	991	"arg_2"	"blob"	0	0	1	2
4874	992	"res_0"	"blob"	0	0	0	0
4875	992	"arg_1"	"sec_interval"	13	0	1	1
4876	992	"arg_2"	"blob"	0	0	1	2
4877	993	"res_0"	"blob"	0	0	0	0
4878	993	"arg_1"	"time"	7	0	1	1
4879	993	"arg_2"	"blob"	0	0	1	2
4880	994	"res_0"	"blob"	0	0	0	0
4881	994	"arg_1"	"timetz"	7	0	1	1
4882	994	"arg_2"	"blob"	0	0	1	2
4883	995	"res_0"	"blob"	0	0	0	0
4884	995	"arg_1"	"date"	0	0	1	1
4885	995	"arg_2"	"blob"	0	0	1	2
4886	996	"res_0"	"blob"	0	0	0	0
4887	996	"arg_1"	"timestamp"	7	0	1	1
4888	996	"arg_2"	"blob"	0	0	1	2
4889	997	"res_0"	"blob"	0	0	0	0
4890	997	"arg_1"	"timestamptz"	7	0	1	1
4891	997	"arg_2"	"blob"	0	0	1	2
4892	998	"res_0"	"blob"	0	0	0	0
4893	998	"arg_1"	"blob"	0	0	1	1
4894	998	"arg_2"	"blob"	0	0	1	2
4895	999	"res_0"	"real"	24	0	0	0
4896	999	"arg_1"	"real"	24	0	1	1
4897	999	"arg_2"	"real"	24	0	1	2
4898	1000	"res_0"	"real"	24	0	0	0
4899	1000	"arg_1"	"real"	24	0	1	1
4900	1001	"res_0"	"real"	24	0	0	0
4901	1001	"arg_1"	"real"	24	0	1	1
4902	1002	"res_0"	"real"	24	0	0	0
4903	1002	"arg_1"	"real"	24	0	1	1
4904	1003	"res_0"	"real"	24	0	0	0
4905	1003	"arg_1"	"real"	24	0	1	1
4906	1004	"res_0"	"real"	24	0	0	0
4907	1004	"arg_1"	"real"	24	0	1	1
4908	1005	"res_0"	"real"	24	0	0	0
4909	1005	"arg_1"	"real"	24	0	1	1
4910	1006	"res_0"	"real"	24	0	0	0
4911	1006	"arg_1"	"real"	24	0	1	1
4912	1007	"res_0"	"real"	24	0	0	0
4913	1007	"arg_1"	"real"	24	0	1	1
4914	1008	"res_0"	"real"	24	0	0	0
4915	1008	"arg_1"	"real"	24	0	1	1
4916	1009	"res_0"	"real"	24	0	0	0
4917	1009	"arg_1"	"real"	24	0	1	1
4918	1009	"arg_2"	"real"	24	0	1	2
4919	1010	"res_0"	"real"	24	0	0	0
4920	1010	"arg_1"	"real"	24	0	1	1
4921	1011	"res_0"	"real"	24	0	0	0
4922	1011	"arg_1"	"real"	24	0	1	1
4923	1012	"res_0"	"real"	24	0	0	0
4924	1012	"arg_1"	"real"	24	0	1	1
4925	1013	"res_0"	"real"	24	0	0	0
4926	1013	"arg_1"	"real"	24	0	1	1
4927	1014	"res_0"	"real"	24	0	0	0
4928	1014	"arg_1"	"real"	24	0	1	1
4929	1015	"res_0"	"real"	24	0	0	0
4930	1015	"arg_1"	"real"	24	0	1	1
4931	1016	"res_0"	"real"	24	0	0	0
4932	1016	"arg_1"	"real"	24	0	1	1
4933	1017	"res_0"	"real"	24	0	0	0
4934	1017	"arg_1"	"real"	24	0	1	1
4935	1018	"res_0"	"double"	53	0	0	0
4936	1018	"arg_1"	"double"	53	0	1	1
4937	1018	"arg_2"	"double"	53	0	1	2
4938	1019	"res_0"	"double"	53	0	0	0
4939	1019	"arg_1"	"double"	53	0	1	1
4940	1020	"res_0"	"double"	53	0	0	0
4941	1020	"arg_1"	"double"	53	0	1	1
4942	1021	"res_0"	"double"	53	0	0	0
4943	1021	"arg_1"	"double"	53	0	1	1
4944	1022	"res_0"	"double"	53	0	0	0
4945	1022	"arg_1"	"double"	53	0	1	1
4946	1023	"res_0"	"double"	53	0	0	0
4947	1023	"arg_1"	"double"	53	0	1	1
4948	1024	"res_0"	"double"	53	0	0	0
4949	1024	"arg_1"	"double"	53	0	1	1
4950	1025	"res_0"	"double"	53	0	0	0
4951	1025	"arg_1"	"double"	53	0	1	1
4952	1026	"res_0"	"double"	53	0	0	0
4953	1026	"arg_1"	"double"	53	0	1	1
4954	1027	"res_0"	"double"	53	0	0	0
4955	1027	"arg_1"	"double"	53	0	1	1
4956	1028	"res_0"	"double"	53	0	0	0
4957	1028	"arg_1"	"double"	53	0	1	1
4958	1028	"arg_2"	"double"	53	0	1	2
4959	1029	"res_0"	"double"	53	0	0	0
4960	1029	"arg_1"	"double"	53	0	1	1
4961	1030	"res_0"	"double"	53	0	0	0
4962	1030	"arg_1"	"double"	53	0	1	1
4963	1031	"res_0"	"double"	53	0	0	0
4964	1031	"arg_1"	"double"	53	0	1	1
4965	1032	"res_0"	"double"	53	0	0	0
4966	1032	"arg_1"	"double"	53	0	1	1
4967	1033	"res_0"	"double"	53	0	0	0
4968	1033	"arg_1"	"double"	53	0	1	1
4969	1034	"res_0"	"double"	53	0	0	0
4970	1034	"arg_1"	"double"	53	0	1	1
4971	1035	"res_0"	"double"	53	0	0	0
4972	1035	"arg_1"	"double"	53	0	1	1
4973	1036	"res_0"	"double"	53	0	0	0
4974	1036	"arg_1"	"double"	53	0	1	1
4975	1037	"res_0"	"double"	53	0	0	0
4976	1038	"res_0"	"int"	32	0	0	0
4977	1039	"res_0"	"int"	32	0	0	0
4978	1039	"arg_1"	"int"	32	0	1	1
4979	1040	"res_0"	"date"	0	0	0	0
4980	1041	"res_0"	"date"	0	0	0	0
4981	1042	"res_0"	"timetz"	7	0	0	0
4982	1043	"res_0"	"timetz"	7	0	0	0
4983	1044	"res_0"	"timestamptz"	7	0	0	0
4984	1045	"res_0"	"time"	7	0	0	0
4985	1046	"res_0"	"timestamp"	7	0	0	0
4986	1047	"res_0"	"month_interval"	32	0	0	0
4987	1047	"arg_1"	"date"	0	0	1	1
4988	1047	"arg_2"	"date"	0	0	1	2
4989	1048	"res_0"	"sec_interval"	13	0	0	0
4990	1048	"arg_1"	"timetz"	7	0	1	1
4991	1048	"arg_2"	"timetz"	7	0	1	2
4992	1049	"res_0"	"sec_interval"	13	0	0	0
4993	1049	"arg_1"	"time"	7	0	1	1
4994	1049	"arg_2"	"time"	7	0	1	2
4995	1050	"res_0"	"sec_interval"	13	0	0	0
4996	1050	"arg_1"	"timestamptz"	7	0	1	1
4997	1050	"arg_2"	"timestamptz"	7	0	1	2
4998	1051	"res_0"	"sec_interval"	13	0	0	0
4999	1051	"arg_1"	"timestamp"	7	0	1	1
5000	1051	"arg_2"	"timestamp"	7	0	1	2
5001	1052	"res_0"	"date"	0	0	0	0
5002	1052	"arg_1"	"date"	0	0	1	1
5003	1052	"arg_2"	"sec_interval"	13	0	1	2
5004	1053	"res_0"	"date"	0	0	0	0
5005	1053	"arg_1"	"date"	0	0	1	1
5006	1053	"arg_2"	"month_interval"	32	0	1	2
5007	1054	"res_0"	"time"	7	0	0	0
5008	1054	"arg_1"	"time"	7	0	1	1
5009	1054	"arg_2"	"sec_interval"	13	0	1	2
5010	1055	"res_0"	"timetz"	7	0	0	0
5011	1055	"arg_1"	"timetz"	7	0	1	1
5012	1055	"arg_2"	"sec_interval"	13	0	1	2
5013	1056	"res_0"	"timestamp"	7	0	0	0
5014	1056	"arg_1"	"timestamp"	7	0	1	1
5015	1056	"arg_2"	"sec_interval"	13	0	1	2
5016	1057	"res_0"	"timestamp"	7	0	0	0
5017	1057	"arg_1"	"timestamp"	7	0	1	1
5018	1057	"arg_2"	"month_interval"	32	0	1	2
5019	1058	"res_0"	"timestamptz"	7	0	0	0
5020	1058	"arg_1"	"timestamptz"	7	0	1	1
5021	1058	"arg_2"	"sec_interval"	13	0	1	2
5022	1059	"res_0"	"timestamptz"	7	0	0	0
5023	1059	"arg_1"	"timestamptz"	7	0	1	1
5024	1059	"arg_2"	"month_interval"	32	0	1	2
5025	1060	"res_0"	"date"	0	0	0	0
5026	1060	"arg_1"	"date"	0	0	1	1
5027	1060	"arg_2"	"sec_interval"	13	0	1	2
5028	1061	"res_0"	"date"	0	0	0	0
5029	1061	"arg_1"	"date"	0	0	1	1
5030	1061	"arg_2"	"month_interval"	32	0	1	2
5031	1062	"res_0"	"timestamp"	7	0	0	0
5032	1062	"arg_1"	"timestamp"	7	0	1	1
5033	1062	"arg_2"	"sec_interval"	13	0	1	2
5034	1063	"res_0"	"timestamp"	7	0	0	0
5035	1063	"arg_1"	"timestamp"	7	0	1	1
5036	1063	"arg_2"	"month_interval"	32	0	1	2
5037	1064	"res_0"	"timestamptz"	7	0	0	0
5038	1064	"arg_1"	"timestamptz"	7	0	1	1
5039	1064	"arg_2"	"sec_interval"	13	0	1	2
5040	1065	"res_0"	"timestamptz"	7	0	0	0
5041	1065	"arg_1"	"timestamptz"	7	0	1	1
5042	1065	"arg_2"	"month_interval"	32	0	1	2
5043	1066	"res_0"	"time"	7	0	0	0
5044	1066	"arg_1"	"time"	7	0	1	1
5045	1066	"arg_2"	"sec_interval"	13	0	1	2
5046	1067	"res_0"	"timetz"	7	0	0	0
5047	1067	"arg_1"	"timetz"	7	0	1	1
5048	1067	"arg_2"	"sec_interval"	13	0	1	2
5049	1068	"res_0"	"sec_interval"	13	0	0	0
5050	1069	"res_0"	"int"	32	0	0	0
5051	1069	"arg_1"	"date"	0	0	1	1
5052	1070	"res_0"	"int"	32	0	0	0
5053	1070	"arg_1"	"date"	0	0	1	1
5054	1071	"res_0"	"int"	32	0	0	0
5055	1071	"arg_1"	"date"	0	0	1	1
5056	1072	"res_0"	"int"	32	0	0	0
5057	1072	"arg_1"	"time"	7	0	1	1
5058	1073	"res_0"	"int"	32	0	0	0
5059	1073	"arg_1"	"time"	7	0	1	1
5060	1074	"res_0"	"decimal"	9	3	0	0
5061	1074	"arg_1"	"time"	7	0	1	1
5062	1075	"res_0"	"int"	32	0	0	0
5063	1075	"arg_1"	"timetz"	7	0	1	1
5064	1076	"res_0"	"int"	32	0	0	0
5065	1076	"arg_1"	"timetz"	7	0	1	1
5066	1077	"res_0"	"decimal"	9	3	0	0
5067	1077	"arg_1"	"timetz"	7	0	1	1
5068	1078	"res_0"	"int"	32	0	0	0
5069	1078	"arg_1"	"timestamp"	7	0	1	1
5070	1079	"res_0"	"int"	32	0	0	0
5071	1079	"arg_1"	"timestamp"	7	0	1	1
5072	1080	"res_0"	"int"	32	0	0	0
5073	1080	"arg_1"	"timestamp"	7	0	1	1
5074	1081	"res_0"	"int"	32	0	0	0
5075	1081	"arg_1"	"timestamp"	7	0	1	1
5076	1082	"res_0"	"int"	32	0	0	0
5077	1082	"arg_1"	"timestamp"	7	0	1	1
5078	1083	"res_0"	"decimal"	9	3	0	0
5079	1083	"arg_1"	"timestamp"	7	0	1	1
5080	1084	"res_0"	"int"	32	0	0	0
5081	1084	"arg_1"	"timestamptz"	7	0	1	1
5082	1085	"res_0"	"int"	32	0	0	0
5083	1085	"arg_1"	"timestamptz"	7	0	1	1
5084	1086	"res_0"	"int"	32	0	0	0
5085	1086	"arg_1"	"timestamptz"	7	0	1	1
5086	1087	"res_0"	"int"	32	0	0	0
5087	1087	"arg_1"	"timestamptz"	7	0	1	1
5088	1088	"res_0"	"int"	32	0	0	0
5089	1088	"arg_1"	"timestamptz"	7	0	1	1
5090	1089	"res_0"	"decimal"	9	3	0	0
5091	1089	"arg_1"	"timestamptz"	7	0	1	1
5092	1090	"res_0"	"int"	32	0	0	0
5093	1090	"arg_1"	"month_interval"	32	0	1	1
5094	1091	"res_0"	"int"	32	0	0	0
5095	1091	"arg_1"	"month_interval"	32	0	1	1
5096	1092	"res_0"	"bigint"	64	0	0	0
5097	1092	"arg_1"	"sec_interval"	13	0	1	1
5098	1093	"res_0"	"int"	32	0	0	0
5099	1093	"arg_1"	"sec_interval"	13	0	1	1
5100	1094	"res_0"	"int"	32	0	0	0
5101	1094	"arg_1"	"sec_interval"	13	0	1	1
5102	1095	"res_0"	"int"	32	0	0	0
5103	1095	"arg_1"	"sec_interval"	13	0	1	1
5104	1096	"res_0"	"int"	32	0	0	0
5105	1096	"arg_1"	"date"	0	0	1	1
5106	1097	"res_0"	"int"	32	0	0	0
5107	1097	"arg_1"	"date"	0	0	1	1
5108	1098	"res_0"	"int"	32	0	0	0
5109	1098	"arg_1"	"date"	0	0	1	1
5110	1099	"res_0"	"int"	32	0	0	0
5111	1099	"arg_1"	"date"	0	0	1	1
5112	1100	"res_0"	"int"	32	0	0	0
5113	1100	"arg_1"	"date"	0	0	1	1
5114	1101	"res_0"	"bigint"	64	0	0	0
5115	1101	"arg_1"	"varchar"	0	0	1	1
5116	1101	"arg_2"	"varchar"	0	0	1	2
5117	1102	"res_0"	"bigint"	64	0	0	0
5118	1102	"arg_1"	"varchar"	0	0	1	1
5119	1102	"arg_2"	"varchar"	0	0	1	2
5120	1103	"res_0"	"bigint"	64	0	0	0
5121	1103	"arg_1"	"varchar"	0	0	1	1
5122	1103	"arg_2"	"varchar"	0	0	1	2
5123	1103	"arg_3"	"bigint"	64	0	1	3
5124	1104	"res_0"	"tinyint"	8	0	0	0
5125	1104	"arg_1"	"char"	0	0	1	1
5126	1104	"arg_2"	"boolean"	1	0	1	2
5127	1105	"res_0"	"smallint"	16	0	0	0
5128	1105	"arg_1"	"char"	0	0	1	1
5129	1105	"arg_2"	"boolean"	1	0	1	2
5130	1106	"res_0"	"int"	32	0	0	0
5131	1106	"arg_1"	"char"	0	0	1	1
5132	1106	"arg_2"	"boolean"	1	0	1	2
5133	1107	"res_0"	"char"	0	0	0	0
5134	1107	"arg_1"	"char"	0	0	1	1
5135	1108	"res_0"	"int"	32	0	0	0
5136	1108	"arg_1"	"char"	0	0	1	1
5137	1108	"arg_2"	"char"	0	0	1	2
5138	1109	"res_0"	"int"	32	0	0	0
5139	1109	"arg_1"	"char"	0	0	1	1
5140	1109	"arg_2"	"char"	0	0	1	2
5141	1109	"arg_3"	"int"	32	0	1	3
5142	1110	"res_0"	"char"	0	0	0	0
5143	1110	"arg_1"	"char"	0	0	1	1
5144	1110	"arg_2"	"char"	0	0	1	2
5145	1110	"arg_3"	"int"	32	0	1	3
5146	1111	"res_0"	"char"	0	0	0	0
5147	1111	"arg_1"	"char"	0	0	1	1
5148	1111	"arg_2"	"int"	32	0	1	2
5149	1112	"res_0"	"char"	0	0	0	0
5150	1112	"arg_1"	"char"	0	0	1	1
5151	1112	"arg_2"	"int"	32	0	1	2
5152	1112	"arg_3"	"int"	32	0	1	3
5153	1113	"res_0"	"boolean"	1	0	0	0
5154	1113	"arg_1"	"char"	0	0	1	1
5155	1113	"arg_2"	"char"	0	0	1	2
5156	1114	"res_0"	"boolean"	1	0	0	0
5157	1114	"arg_1"	"char"	0	0	1	1
5158	1114	"arg_2"	"char"	0	0	1	2
5159	1114	"arg_3"	"char"	0	0	1	3
5160	1115	"res_0"	"boolean"	1	0	0	0
5161	1115	"arg_1"	"char"	0	0	1	1
5162	1115	"arg_2"	"char"	0	0	1	2
5163	1116	"res_0"	"boolean"	1	0	0	0
5164	1116	"arg_1"	"char"	0	0	1	1
5165	1116	"arg_2"	"char"	0	0	1	2
5166	1116	"arg_3"	"char"	0	0	1	3
5167	1117	"res_0"	"boolean"	1	0	0	0
5168	1117	"arg_1"	"char"	0	0	1	1
5169	1117	"arg_2"	"char"	0	0	1	2
5170	1118	"res_0"	"boolean"	1	0	0	0
5171	1118	"arg_1"	"char"	0	0	1	1
5172	1118	"arg_2"	"char"	0	0	1	2
5173	1118	"arg_3"	"char"	0	0	1	3
5174	1119	"res_0"	"boolean"	1	0	0	0
5175	1119	"arg_1"	"char"	0	0	1	1
5176	1119	"arg_2"	"char"	0	0	1	2
5177	1120	"res_0"	"boolean"	1	0	0	0
5178	1120	"arg_1"	"char"	0	0	1	1
5179	1120	"arg_2"	"char"	0	0	1	2
5180	1120	"arg_3"	"char"	0	0	1	3
5181	1121	"res_0"	"int"	32	0	0	0
5182	1121	"arg_1"	"char"	0	0	1	1
5183	1121	"arg_2"	"char"	0	0	1	2
5184	1122	"res_0"	"char"	0	0	0	0
5185	1122	"arg_1"	"char"	0	0	1	1
5186	1122	"arg_2"	"int"	32	0	1	2
5187	1123	"res_0"	"char"	0	0	0	0
5188	1123	"arg_1"	"char"	0	0	1	1
5189	1123	"arg_2"	"char"	0	0	1	2
5190	1124	"res_0"	"int"	32	0	0	0
5191	1124	"arg_1"	"char"	0	0	1	1
5192	1125	"res_0"	"char"	0	0	0	0
5193	1125	"arg_1"	"int"	32	0	1	1
5194	1126	"res_0"	"int"	32	0	0	0
5195	1126	"arg_1"	"char"	0	0	1	1
5196	1127	"res_0"	"char"	0	0	0	0
5197	1127	"arg_1"	"char"	0	0	1	1
5198	1127	"arg_2"	"int"	32	0	1	2
5199	1128	"res_0"	"char"	0	0	0	0
5200	1128	"arg_1"	"char"	0	0	1	1
5201	1128	"arg_2"	"int"	32	0	1	2
5202	1129	"res_0"	"char"	0	0	0	0
5203	1129	"arg_1"	"char"	0	0	1	1
5204	1130	"res_0"	"char"	0	0	0	0
5205	1130	"arg_1"	"char"	0	0	1	1
5206	1131	"res_0"	"char"	0	0	0	0
5207	1131	"arg_1"	"char"	0	0	1	1
5208	1132	"res_0"	"char"	0	0	0	0
5209	1132	"arg_1"	"char"	0	0	1	1
5210	1133	"res_0"	"char"	0	0	0	0
5211	1133	"arg_1"	"char"	0	0	1	1
5212	1134	"res_0"	"char"	0	0	0	0
5213	1134	"arg_1"	"char"	0	0	1	1
5214	1134	"arg_2"	"char"	0	0	1	2
5215	1135	"res_0"	"char"	0	0	0	0
5216	1135	"arg_1"	"char"	0	0	1	1
5217	1136	"res_0"	"char"	0	0	0	0
5218	1136	"arg_1"	"char"	0	0	1	1
5219	1136	"arg_2"	"char"	0	0	1	2
5220	1137	"res_0"	"char"	0	0	0	0
5221	1137	"arg_1"	"char"	0	0	1	1
5222	1138	"res_0"	"char"	0	0	0	0
5223	1138	"arg_1"	"char"	0	0	1	1
5224	1138	"arg_2"	"char"	0	0	1	2
5225	1139	"res_0"	"char"	0	0	0	0
5226	1139	"arg_1"	"char"	0	0	1	1
5227	1139	"arg_2"	"int"	32	0	1	2
5228	1140	"res_0"	"char"	0	0	0	0
5229	1140	"arg_1"	"char"	0	0	1	1
5230	1140	"arg_2"	"int"	32	0	1	2
5231	1140	"arg_3"	"char"	0	0	1	3
5232	1141	"res_0"	"char"	0	0	0	0
5233	1141	"arg_1"	"char"	0	0	1	1
5234	1141	"arg_2"	"int"	32	0	1	2
5235	1142	"res_0"	"char"	0	0	0	0
5236	1142	"arg_1"	"char"	0	0	1	1
5237	1142	"arg_2"	"int"	32	0	1	2
5238	1142	"arg_3"	"char"	0	0	1	3
5239	1143	"res_0"	"char"	0	0	0	0
5240	1143	"arg_1"	"char"	0	0	1	1
5241	1143	"arg_2"	"int"	32	0	1	2
5242	1143	"arg_3"	"int"	32	0	1	3
5243	1143	"arg_4"	"char"	0	0	1	4
5244	1144	"res_0"	"char"	0	0	0	0
5245	1144	"arg_1"	"char"	0	0	1	1
5246	1144	"arg_2"	"char"	0	0	1	2
5247	1144	"arg_3"	"char"	0	0	1	3
5248	1145	"res_0"	"char"	0	0	0	0
5249	1145	"arg_1"	"char"	0	0	1	1
5250	1145	"arg_2"	"int"	32	0	1	2
5251	1146	"res_0"	"char"	0	0	0	0
5252	1146	"arg_1"	"int"	32	0	1	1
5253	1147	"res_0"	"int"	32	0	0	0
5254	1147	"arg_1"	"char"	0	0	1	1
5255	1148	"res_0"	"int"	32	0	0	0
5256	1148	"arg_1"	"char"	0	0	1	1
5257	1149	"res_0"	"int"	32	0	0	0
5258	1149	"arg_1"	"char"	0	0	1	1
5259	1150	"res_0"	"char"	0	0	0	0
5260	1150	"arg_1"	"char"	0	0	1	1
5261	1151	"res_0"	"int"	32	0	0	0
5262	1151	"arg_1"	"char"	0	0	1	1
5263	1151	"arg_2"	"char"	0	0	1	2
5264	1152	"res_0"	"int"	32	0	0	0
5265	1152	"arg_1"	"char"	0	0	1	1
5266	1152	"arg_2"	"char"	0	0	1	2
5267	1153	"res_0"	"int"	32	0	0	0
5268	1153	"arg_1"	"char"	0	0	1	1
5269	1153	"arg_2"	"char"	0	0	1	2
5270	1154	"res_0"	"double"	53	0	0	0
5271	1154	"arg_1"	"char"	0	0	1	1
5272	1154	"arg_2"	"char"	0	0	1	2
5273	1155	"res_0"	"char"	0	0	0	0
5274	1155	"arg_1"	"char"	0	0	1	1
5275	1156	"res_0"	"int"	32	0	0	0
5276	1156	"arg_1"	"char"	0	0	1	1
5277	1156	"arg_2"	"char"	0	0	1	2
5278	1157	"res_0"	"int"	32	0	0	0
5279	1157	"arg_1"	"char"	0	0	1	1
5280	1157	"arg_2"	"char"	0	0	1	2
5281	1157	"arg_3"	"int"	32	0	1	3
5282	1157	"arg_4"	"int"	32	0	1	4
5283	1157	"arg_5"	"int"	32	0	1	5
5284	1158	"res_0"	"tinyint"	8	0	0	0
5285	1158	"arg_1"	"varchar"	0	0	1	1
5286	1158	"arg_2"	"boolean"	1	0	1	2
5287	1159	"res_0"	"smallint"	16	0	0	0
5288	1159	"arg_1"	"varchar"	0	0	1	1
5289	1159	"arg_2"	"boolean"	1	0	1	2
5290	1160	"res_0"	"int"	32	0	0	0
5291	1160	"arg_1"	"varchar"	0	0	1	1
5292	1160	"arg_2"	"boolean"	1	0	1	2
5293	1161	"res_0"	"varchar"	0	0	0	0
5294	1161	"arg_1"	"varchar"	0	0	1	1
5295	1162	"res_0"	"int"	32	0	0	0
5296	1162	"arg_1"	"varchar"	0	0	1	1
5297	1162	"arg_2"	"varchar"	0	0	1	2
5298	1163	"res_0"	"int"	32	0	0	0
5299	1163	"arg_1"	"varchar"	0	0	1	1
5300	1163	"arg_2"	"varchar"	0	0	1	2
5301	1163	"arg_3"	"int"	32	0	1	3
5302	1164	"res_0"	"varchar"	0	0	0	0
5303	1164	"arg_1"	"varchar"	0	0	1	1
5304	1164	"arg_2"	"varchar"	0	0	1	2
5305	1164	"arg_3"	"int"	32	0	1	3
5306	1165	"res_0"	"varchar"	0	0	0	0
5307	1165	"arg_1"	"varchar"	0	0	1	1
5308	1165	"arg_2"	"int"	32	0	1	2
5309	1166	"res_0"	"varchar"	0	0	0	0
5310	1166	"arg_1"	"varchar"	0	0	1	1
5311	1166	"arg_2"	"int"	32	0	1	2
5312	1166	"arg_3"	"int"	32	0	1	3
5313	1167	"res_0"	"boolean"	1	0	0	0
5314	1167	"arg_1"	"varchar"	0	0	1	1
5315	1167	"arg_2"	"varchar"	0	0	1	2
5316	1168	"res_0"	"boolean"	1	0	0	0
5317	1168	"arg_1"	"varchar"	0	0	1	1
5318	1168	"arg_2"	"varchar"	0	0	1	2
5319	1168	"arg_3"	"varchar"	0	0	1	3
5320	1169	"res_0"	"boolean"	1	0	0	0
5321	1169	"arg_1"	"varchar"	0	0	1	1
5322	1169	"arg_2"	"varchar"	0	0	1	2
5323	1170	"res_0"	"boolean"	1	0	0	0
5324	1170	"arg_1"	"varchar"	0	0	1	1
5325	1170	"arg_2"	"varchar"	0	0	1	2
5326	1170	"arg_3"	"varchar"	0	0	1	3
5327	1171	"res_0"	"boolean"	1	0	0	0
5328	1171	"arg_1"	"varchar"	0	0	1	1
5329	1171	"arg_2"	"varchar"	0	0	1	2
5330	1172	"res_0"	"boolean"	1	0	0	0
5331	1172	"arg_1"	"varchar"	0	0	1	1
5332	1172	"arg_2"	"varchar"	0	0	1	2
5333	1172	"arg_3"	"varchar"	0	0	1	3
5334	1173	"res_0"	"boolean"	1	0	0	0
5335	1173	"arg_1"	"varchar"	0	0	1	1
5336	1173	"arg_2"	"varchar"	0	0	1	2
5337	1174	"res_0"	"boolean"	1	0	0	0
5338	1174	"arg_1"	"varchar"	0	0	1	1
5339	1174	"arg_2"	"varchar"	0	0	1	2
5340	1174	"arg_3"	"varchar"	0	0	1	3
5341	1175	"res_0"	"int"	32	0	0	0
5342	1175	"arg_1"	"varchar"	0	0	1	1
5343	1175	"arg_2"	"varchar"	0	0	1	2
5344	1176	"res_0"	"varchar"	0	0	0	0
5345	1176	"arg_1"	"varchar"	0	0	1	1
5346	1176	"arg_2"	"int"	32	0	1	2
5347	1177	"res_0"	"varchar"	0	0	0	0
5348	1177	"arg_1"	"varchar"	0	0	1	1
5349	1177	"arg_2"	"varchar"	0	0	1	2
5350	1178	"res_0"	"int"	32	0	0	0
5351	1178	"arg_1"	"varchar"	0	0	1	1
5352	1179	"res_0"	"varchar"	0	0	0	0
5353	1179	"arg_1"	"int"	32	0	1	1
5354	1180	"res_0"	"int"	32	0	0	0
5355	1180	"arg_1"	"varchar"	0	0	1	1
5356	1181	"res_0"	"varchar"	0	0	0	0
5357	1181	"arg_1"	"varchar"	0	0	1	1
5358	1181	"arg_2"	"int"	32	0	1	2
5359	1182	"res_0"	"varchar"	0	0	0	0
5360	1182	"arg_1"	"varchar"	0	0	1	1
5361	1182	"arg_2"	"int"	32	0	1	2
5362	1183	"res_0"	"varchar"	0	0	0	0
5363	1183	"arg_1"	"varchar"	0	0	1	1
5364	1184	"res_0"	"varchar"	0	0	0	0
5365	1184	"arg_1"	"varchar"	0	0	1	1
5366	1185	"res_0"	"varchar"	0	0	0	0
5367	1185	"arg_1"	"varchar"	0	0	1	1
5368	1186	"res_0"	"varchar"	0	0	0	0
5369	1186	"arg_1"	"varchar"	0	0	1	1
5370	1187	"res_0"	"varchar"	0	0	0	0
5371	1187	"arg_1"	"varchar"	0	0	1	1
5372	1188	"res_0"	"varchar"	0	0	0	0
5373	1188	"arg_1"	"varchar"	0	0	1	1
5374	1188	"arg_2"	"varchar"	0	0	1	2
5375	1189	"res_0"	"varchar"	0	0	0	0
5376	1189	"arg_1"	"varchar"	0	0	1	1
5377	1190	"res_0"	"varchar"	0	0	0	0
5378	1190	"arg_1"	"varchar"	0	0	1	1
5379	1190	"arg_2"	"varchar"	0	0	1	2
5380	1191	"res_0"	"varchar"	0	0	0	0
5381	1191	"arg_1"	"varchar"	0	0	1	1
5382	1192	"res_0"	"varchar"	0	0	0	0
5383	1192	"arg_1"	"varchar"	0	0	1	1
5384	1192	"arg_2"	"varchar"	0	0	1	2
5385	1193	"res_0"	"varchar"	0	0	0	0
5386	1193	"arg_1"	"varchar"	0	0	1	1
5387	1193	"arg_2"	"int"	32	0	1	2
5388	1194	"res_0"	"varchar"	0	0	0	0
5389	1194	"arg_1"	"varchar"	0	0	1	1
5390	1194	"arg_2"	"int"	32	0	1	2
5391	1194	"arg_3"	"varchar"	0	0	1	3
5392	1195	"res_0"	"varchar"	0	0	0	0
5393	1195	"arg_1"	"varchar"	0	0	1	1
5394	1195	"arg_2"	"int"	32	0	1	2
5395	1196	"res_0"	"varchar"	0	0	0	0
5396	1196	"arg_1"	"varchar"	0	0	1	1
5397	1196	"arg_2"	"int"	32	0	1	2
5398	1196	"arg_3"	"varchar"	0	0	1	3
5399	1197	"res_0"	"varchar"	0	0	0	0
5400	1197	"arg_1"	"varchar"	0	0	1	1
5401	1197	"arg_2"	"int"	32	0	1	2
5402	1197	"arg_3"	"int"	32	0	1	3
5403	1197	"arg_4"	"varchar"	0	0	1	4
5404	1198	"res_0"	"varchar"	0	0	0	0
5405	1198	"arg_1"	"varchar"	0	0	1	1
5406	1198	"arg_2"	"varchar"	0	0	1	2
5407	1198	"arg_3"	"varchar"	0	0	1	3
5408	1199	"res_0"	"varchar"	0	0	0	0
5409	1199	"arg_1"	"varchar"	0	0	1	1
5410	1199	"arg_2"	"int"	32	0	1	2
5411	1200	"res_0"	"varchar"	0	0	0	0
5412	1200	"arg_1"	"int"	32	0	1	1
5413	1201	"res_0"	"int"	32	0	0	0
5414	1201	"arg_1"	"varchar"	0	0	1	1
5415	1202	"res_0"	"int"	32	0	0	0
5416	1202	"arg_1"	"varchar"	0	0	1	1
5417	1203	"res_0"	"int"	32	0	0	0
5418	1203	"arg_1"	"varchar"	0	0	1	1
5419	1204	"res_0"	"varchar"	0	0	0	0
5420	1204	"arg_1"	"varchar"	0	0	1	1
5421	1205	"res_0"	"int"	32	0	0	0
5422	1205	"arg_1"	"varchar"	0	0	1	1
5423	1205	"arg_2"	"varchar"	0	0	1	2
5424	1206	"res_0"	"int"	32	0	0	0
5425	1206	"arg_1"	"varchar"	0	0	1	1
5426	1206	"arg_2"	"varchar"	0	0	1	2
5427	1207	"res_0"	"int"	32	0	0	0
5428	1207	"arg_1"	"varchar"	0	0	1	1
5429	1207	"arg_2"	"varchar"	0	0	1	2
5430	1208	"res_0"	"double"	53	0	0	0
5431	1208	"arg_1"	"varchar"	0	0	1	1
5432	1208	"arg_2"	"varchar"	0	0	1	2
5433	1209	"res_0"	"varchar"	0	0	0	0
5434	1209	"arg_1"	"varchar"	0	0	1	1
5435	1210	"res_0"	"int"	32	0	0	0
5436	1210	"arg_1"	"varchar"	0	0	1	1
5437	1210	"arg_2"	"varchar"	0	0	1	2
5438	1211	"res_0"	"int"	32	0	0	0
5439	1211	"arg_1"	"varchar"	0	0	1	1
5440	1211	"arg_2"	"varchar"	0	0	1	2
5441	1211	"arg_3"	"int"	32	0	1	3
5442	1211	"arg_4"	"int"	32	0	1	4
5443	1211	"arg_5"	"int"	32	0	1	5
5444	1212	"res_0"	"tinyint"	8	0	0	0
5445	1212	"arg_1"	"clob"	0	0	1	1
5446	1212	"arg_2"	"boolean"	1	0	1	2
5447	1213	"res_0"	"smallint"	16	0	0	0
5448	1213	"arg_1"	"clob"	0	0	1	1
5449	1213	"arg_2"	"boolean"	1	0	1	2
5450	1214	"res_0"	"int"	32	0	0	0
5451	1214	"arg_1"	"clob"	0	0	1	1
5452	1214	"arg_2"	"boolean"	1	0	1	2
5453	1215	"res_0"	"clob"	0	0	0	0
5454	1215	"arg_1"	"clob"	0	0	1	1
5455	1216	"res_0"	"int"	32	0	0	0
5456	1216	"arg_1"	"clob"	0	0	1	1
5457	1216	"arg_2"	"clob"	0	0	1	2
5458	1217	"res_0"	"int"	32	0	0	0
5459	1217	"arg_1"	"clob"	0	0	1	1
5460	1217	"arg_2"	"clob"	0	0	1	2
5461	1217	"arg_3"	"int"	32	0	1	3
5462	1218	"res_0"	"clob"	0	0	0	0
5463	1218	"arg_1"	"clob"	0	0	1	1
5464	1218	"arg_2"	"clob"	0	0	1	2
5465	1218	"arg_3"	"int"	32	0	1	3
5466	1219	"res_0"	"clob"	0	0	0	0
5467	1219	"arg_1"	"clob"	0	0	1	1
5468	1219	"arg_2"	"int"	32	0	1	2
5469	1220	"res_0"	"clob"	0	0	0	0
5470	1220	"arg_1"	"clob"	0	0	1	1
5471	1220	"arg_2"	"int"	32	0	1	2
5472	1220	"arg_3"	"int"	32	0	1	3
5473	1221	"res_0"	"boolean"	1	0	0	0
5474	1221	"arg_1"	"clob"	0	0	1	1
5475	1221	"arg_2"	"clob"	0	0	1	2
5476	1222	"res_0"	"boolean"	1	0	0	0
5477	1222	"arg_1"	"clob"	0	0	1	1
5478	1222	"arg_2"	"clob"	0	0	1	2
5479	1222	"arg_3"	"clob"	0	0	1	3
5480	1223	"res_0"	"boolean"	1	0	0	0
5481	1223	"arg_1"	"clob"	0	0	1	1
5482	1223	"arg_2"	"clob"	0	0	1	2
5483	1224	"res_0"	"boolean"	1	0	0	0
5484	1224	"arg_1"	"clob"	0	0	1	1
5485	1224	"arg_2"	"clob"	0	0	1	2
5486	1224	"arg_3"	"clob"	0	0	1	3
5487	1225	"res_0"	"boolean"	1	0	0	0
5488	1225	"arg_1"	"clob"	0	0	1	1
5489	1225	"arg_2"	"clob"	0	0	1	2
5490	1226	"res_0"	"boolean"	1	0	0	0
5491	1226	"arg_1"	"clob"	0	0	1	1
5492	1226	"arg_2"	"clob"	0	0	1	2
5493	1226	"arg_3"	"clob"	0	0	1	3
5494	1227	"res_0"	"boolean"	1	0	0	0
5495	1227	"arg_1"	"clob"	0	0	1	1
5496	1227	"arg_2"	"clob"	0	0	1	2
5497	1228	"res_0"	"boolean"	1	0	0	0
5498	1228	"arg_1"	"clob"	0	0	1	1
5499	1228	"arg_2"	"clob"	0	0	1	2
5500	1228	"arg_3"	"clob"	0	0	1	3
5501	1229	"res_0"	"int"	32	0	0	0
5502	1229	"arg_1"	"clob"	0	0	1	1
5503	1229	"arg_2"	"clob"	0	0	1	2
5504	1230	"res_0"	"clob"	0	0	0	0
5505	1230	"arg_1"	"clob"	0	0	1	1
5506	1230	"arg_2"	"int"	32	0	1	2
5507	1231	"res_0"	"clob"	0	0	0	0
5508	1231	"arg_1"	"clob"	0	0	1	1
5509	1231	"arg_2"	"clob"	0	0	1	2
5510	1232	"res_0"	"int"	32	0	0	0
5511	1232	"arg_1"	"clob"	0	0	1	1
5512	1233	"res_0"	"clob"	0	0	0	0
5513	1233	"arg_1"	"int"	32	0	1	1
5514	1234	"res_0"	"int"	32	0	0	0
5515	1234	"arg_1"	"clob"	0	0	1	1
5516	1235	"res_0"	"clob"	0	0	0	0
5517	1235	"arg_1"	"clob"	0	0	1	1
5518	1235	"arg_2"	"int"	32	0	1	2
5519	1236	"res_0"	"clob"	0	0	0	0
5520	1236	"arg_1"	"clob"	0	0	1	1
5521	1236	"arg_2"	"int"	32	0	1	2
5522	1237	"res_0"	"clob"	0	0	0	0
5523	1237	"arg_1"	"clob"	0	0	1	1
5524	1238	"res_0"	"clob"	0	0	0	0
5525	1238	"arg_1"	"clob"	0	0	1	1
5526	1239	"res_0"	"clob"	0	0	0	0
5527	1239	"arg_1"	"clob"	0	0	1	1
5528	1240	"res_0"	"clob"	0	0	0	0
5529	1240	"arg_1"	"clob"	0	0	1	1
5530	1241	"res_0"	"clob"	0	0	0	0
5531	1241	"arg_1"	"clob"	0	0	1	1
5532	1242	"res_0"	"clob"	0	0	0	0
5533	1242	"arg_1"	"clob"	0	0	1	1
5534	1242	"arg_2"	"clob"	0	0	1	2
5535	1243	"res_0"	"clob"	0	0	0	0
5536	1243	"arg_1"	"clob"	0	0	1	1
5537	1244	"res_0"	"clob"	0	0	0	0
5538	1244	"arg_1"	"clob"	0	0	1	1
5539	1244	"arg_2"	"clob"	0	0	1	2
5540	1245	"res_0"	"clob"	0	0	0	0
5541	1245	"arg_1"	"clob"	0	0	1	1
5542	1246	"res_0"	"clob"	0	0	0	0
5543	1246	"arg_1"	"clob"	0	0	1	1
5544	1246	"arg_2"	"clob"	0	0	1	2
5545	1247	"res_0"	"clob"	0	0	0	0
5546	1247	"arg_1"	"clob"	0	0	1	1
5547	1247	"arg_2"	"int"	32	0	1	2
5548	1248	"res_0"	"clob"	0	0	0	0
5549	1248	"arg_1"	"clob"	0	0	1	1
5550	1248	"arg_2"	"int"	32	0	1	2
5551	1248	"arg_3"	"clob"	0	0	1	3
5552	1249	"res_0"	"clob"	0	0	0	0
5553	1249	"arg_1"	"clob"	0	0	1	1
5554	1249	"arg_2"	"int"	32	0	1	2
5555	1250	"res_0"	"clob"	0	0	0	0
5556	1250	"arg_1"	"clob"	0	0	1	1
5557	1250	"arg_2"	"int"	32	0	1	2
5558	1250	"arg_3"	"clob"	0	0	1	3
5559	1251	"res_0"	"clob"	0	0	0	0
5560	1251	"arg_1"	"clob"	0	0	1	1
5561	1251	"arg_2"	"int"	32	0	1	2
5562	1251	"arg_3"	"int"	32	0	1	3
5563	1251	"arg_4"	"clob"	0	0	1	4
5564	1252	"res_0"	"clob"	0	0	0	0
5565	1252	"arg_1"	"clob"	0	0	1	1
5566	1252	"arg_2"	"clob"	0	0	1	2
5567	1252	"arg_3"	"clob"	0	0	1	3
5568	1253	"res_0"	"clob"	0	0	0	0
5569	1253	"arg_1"	"clob"	0	0	1	1
5570	1253	"arg_2"	"int"	32	0	1	2
5571	1254	"res_0"	"clob"	0	0	0	0
5572	1254	"arg_1"	"int"	32	0	1	1
5573	1255	"res_0"	"int"	32	0	0	0
5574	1255	"arg_1"	"clob"	0	0	1	1
5575	1256	"res_0"	"int"	32	0	0	0
5576	1256	"arg_1"	"clob"	0	0	1	1
5577	1257	"res_0"	"int"	32	0	0	0
5578	1257	"arg_1"	"clob"	0	0	1	1
5579	1258	"res_0"	"clob"	0	0	0	0
5580	1258	"arg_1"	"clob"	0	0	1	1
5581	1259	"res_0"	"int"	32	0	0	0
5582	1259	"arg_1"	"clob"	0	0	1	1
5583	1259	"arg_2"	"clob"	0	0	1	2
5584	1260	"res_0"	"int"	32	0	0	0
5585	1260	"arg_1"	"clob"	0	0	1	1
5586	1260	"arg_2"	"clob"	0	0	1	2
5587	1261	"res_0"	"int"	32	0	0	0
5588	1261	"arg_1"	"clob"	0	0	1	1
5589	1261	"arg_2"	"clob"	0	0	1	2
5590	1262	"res_0"	"double"	53	0	0	0
5591	1262	"arg_1"	"clob"	0	0	1	1
5592	1262	"arg_2"	"clob"	0	0	1	2
5593	1263	"res_0"	"clob"	0	0	0	0
5594	1263	"arg_1"	"clob"	0	0	1	1
5595	1264	"res_0"	"int"	32	0	0	0
5596	1264	"arg_1"	"clob"	0	0	1	1
5597	1264	"arg_2"	"clob"	0	0	1	2
5598	1265	"res_0"	"int"	32	0	0	0
5599	1265	"arg_1"	"clob"	0	0	1	1
5600	1265	"arg_2"	"clob"	0	0	1	2
5601	1265	"arg_3"	"int"	32	0	1	3
5602	1265	"arg_4"	"int"	32	0	1	4
5603	1265	"arg_5"	"int"	32	0	1	5
5604	1266	"res_0"	"table"	0	0	0	0
5605	1266	"arg_1"	"varchar"	0	0	1	1
5606	1266	"arg_2"	"varchar"	0	0	1	2
5607	1266	"arg_3"	"varchar"	0	0	1	3
5608	1266	"arg_4"	"varchar"	0	0	1	4
5609	1266	"arg_5"	"varchar"	0	0	1	5
5610	1266	"arg_6"	"varchar"	0	0	1	6
5611	1266	"arg_7"	"bigint"	64	0	1	7
5612	1266	"arg_8"	"bigint"	64	0	1	8
5613	1266	"arg_9"	"int"	32	0	1	9
5614	1267	"res_0"	"table"	0	0	0	0
5615	1267	"arg_1"	"varchar"	0	0	1	1
5616	1267	"arg_2"	"varchar"	0	0	1	2
5617	29	"res"	"boolean"	1	0	0	0
5618	29	"arg"	"oid"	63	0	1	1
5619	41	"res"	"any"	0	0	0	0
5620	41	"arg"	"any"	0	0	1	1
5621	42	"res"	"boolean"	1	0	0	0
5622	42	"arg"	"any"	0	0	1	1
5623	43	"res"	"boolean"	1	0	0	0
5624	43	"arg"	"any"	0	0	1	1
5625	48	"res"	"any"	0	0	0	0
5626	48	"arg"	"any"	0	0	1	1
5627	49	"res"	"any"	0	0	0	0
5628	49	"arg"	"any"	0	0	1	1
5629	53	"res"	"hugeint"	128	0	0	0
5630	53	"arg"	"tinyint"	8	0	1	1
5631	54	"res"	"hugeint"	128	0	0	0
5632	54	"arg"	"smallint"	16	0	1	1
5633	55	"res"	"hugeint"	128	0	0	0
5634	55	"arg"	"int"	32	0	1	1
5635	56	"res"	"hugeint"	128	0	0	0
5636	56	"arg"	"bigint"	64	0	1	1
5637	57	"res"	"hugeint"	128	0	0	0
5638	57	"arg"	"hugeint"	128	0	1	1
5639	58	"res"	"wrd"	64	0	0	0
5640	58	"arg"	"wrd"	64	0	1	1
5641	59	"res"	"decimal"	39	0	0	0
5642	59	"arg"	"decimal"	2	0	1	1
5643	60	"res"	"decimal"	39	0	0	0
5644	60	"arg"	"decimal"	4	0	1	1
5645	61	"res"	"decimal"	39	0	0	0
5646	61	"arg"	"decimal"	9	0	1	1
5647	62	"res"	"decimal"	39	0	0	0
5648	62	"arg"	"decimal"	18	0	1	1
5649	63	"res"	"decimal"	39	0	0	0
5650	63	"arg"	"decimal"	39	0	1	1
5651	64	"res"	"hugeint"	128	0	0	0
5652	64	"arg"	"tinyint"	8	0	1	1
5653	65	"res"	"hugeint"	128	0	0	0
5654	65	"arg"	"smallint"	16	0	1	1
5655	66	"res"	"hugeint"	128	0	0	0
5656	66	"arg"	"int"	32	0	1	1
5657	67	"res"	"hugeint"	128	0	0	0
5658	67	"arg"	"bigint"	64	0	1	1
5659	68	"res"	"hugeint"	128	0	0	0
5660	68	"arg"	"hugeint"	128	0	1	1
5661	69	"res"	"decimal"	39	0	0	0
5662	69	"arg"	"decimal"	2	0	1	1
5663	70	"res"	"decimal"	39	0	0	0
5664	70	"arg"	"decimal"	4	0	1	1
5665	71	"res"	"decimal"	39	0	0	0
5666	71	"arg"	"decimal"	9	0	1	1
5667	72	"res"	"decimal"	39	0	0	0
5668	72	"arg"	"decimal"	18	0	1	1
5669	73	"res"	"decimal"	39	0	0	0
5670	73	"arg"	"decimal"	39	0	1	1
5671	88	"res"	"real"	24	0	0	0
5672	88	"arg"	"real"	24	0	1	1
5673	89	"res"	"real"	24	0	0	0
5674	89	"arg"	"real"	24	0	1	1
5675	90	"res"	"double"	53	0	0	0
5676	90	"arg"	"double"	53	0	1	1
5677	91	"res"	"double"	53	0	0	0
5678	91	"arg"	"double"	53	0	1	1
5679	92	"res"	"month_interval"	32	0	0	0
5680	92	"arg"	"month_interval"	32	0	1	1
5681	93	"res"	"sec_interval"	13	0	0	0
5682	93	"arg"	"sec_interval"	13	0	1	1
5683	94	"res"	"double"	53	0	0	0
5684	94	"arg"	"double"	53	0	1	1
5685	95	"res"	"wrd"	64	0	0	0
5686	96	"res"	"wrd"	64	0	0	0
5709	5708	"name"	"varchar"	1024	0	0	0
5710	5708	"value"	"varchar"	2048	0	0	1
5712	5711	"name"	"varchar"	1024	0	0	0
5718	5717	"name"	"varchar"	2048	0	0	0
5738	5737	"val"	"clob"	0	0	1	0
5739	5737	"pat"	"clob"	0	0	1	1
5740	5737	"esc"	"clob"	0	0	1	2
5743	5742	"val"	"clob"	0	0	1	0
5744	5742	"pat"	"clob"	0	0	1	1
5745	5742	"esc"	"clob"	0	0	1	2
5748	5747	"val"	"clob"	0	0	1	0
5749	5747	"pat"	"clob"	0	0	1	1
5752	5751	"val"	"clob"	0	0	1	0
5753	5751	"pat"	"clob"	0	0	1	1
5756	5755	"result"	"double"	53	0	0	0
5757	5755	"r"	"double"	53	0	1	1
5760	5759	"result"	"double"	53	0	0	0
5761	5759	"d"	"double"	53	0	1	1
5767	5766	"result"	"clob"	0	0	0	0
5768	5766	"theurl"	"url"	0	0	1	1
5771	5770	"result"	"clob"	0	0	0	0
5772	5770	"theurl"	"url"	0	0	1	1
5775	5774	"result"	"clob"	0	0	0	0
5776	5774	"theurl"	"url"	0	0	1	1
5779	5778	"result"	"clob"	0	0	0	0
5780	5778	"theurl"	"url"	0	0	1	1
5783	5782	"result"	"clob"	0	0	0	0
5784	5782	"theurl"	"url"	0	0	1	1
5787	5786	"result"	"clob"	0	0	0	0
5788	5786	"theurl"	"url"	0	0	1	1
5791	5790	"result"	"clob"	0	0	0	0
5792	5790	"theurl"	"url"	0	0	1	1
5795	5794	"result"	"clob"	0	0	0	0
5796	5794	"theurl"	"url"	0	0	1	1
5799	5798	"result"	"clob"	0	0	0	0
5800	5798	"theurl"	"url"	0	0	1	1
5803	5802	"result"	"clob"	0	0	0	0
5804	5802	"theurl"	"url"	0	0	1	1
5807	5806	"result"	"clob"	0	0	0	0
5808	5806	"theurl"	"url"	0	0	1	1
5811	5810	"result"	"clob"	0	0	0	0
5812	5810	"theurl"	"url"	0	0	1	1
5815	5814	"result"	"clob"	0	0	0	0
5816	5814	"theurl"	"url"	0	0	1	1
5819	5818	"result"	"boolean"	1	0	0	0
5820	5818	"theurl"	"url"	0	0	1	1
5823	5822	"result"	"url"	0	0	0	0
5824	5822	"protocol"	"clob"	0	0	1	1
5825	5822	"hostname"	"clob"	0	0	1	2
5826	5822	"port"	"int"	32	0	1	3
5827	5822	"file"	"clob"	0	0	1	4
5830	5829	"result"	"url"	0	0	0	0
5831	5829	"protocol"	"clob"	0	0	1	1
5832	5829	"hostname"	"clob"	0	0	1	2
5833	5829	"file"	"clob"	0	0	1	3
5836	5835	"result"	"date"	0	0	0	0
5837	5835	"s"	"clob"	0	0	1	1
5838	5835	"format"	"clob"	0	0	1	2
5841	5840	"result"	"clob"	0	0	0	0
5842	5840	"d"	"date"	0	0	1	1
5843	5840	"format"	"clob"	0	0	1	2
5846	5845	"result"	"time"	1	0	0	0
5847	5845	"s"	"clob"	0	0	1	1
5848	5845	"format"	"clob"	0	0	1	2
5851	5850	"result"	"clob"	0	0	0	0
5852	5850	"d"	"time"	1	0	1	1
5853	5850	"format"	"clob"	0	0	1	2
5856	5855	"result"	"timestamp"	7	0	0	0
5857	5855	"s"	"clob"	0	0	1	1
5858	5855	"format"	"clob"	0	0	1	2
5861	5860	"result"	"clob"	0	0	0	0
5862	5860	"d"	"timestamp"	7	0	1	1
5863	5860	"format"	"clob"	0	0	1	2
5867	5866	"result"	"inet"	0	0	0	0
5868	5866	"p"	"inet"	0	0	1	1
5871	5870	"result"	"clob"	0	0	0	0
5872	5870	"p"	"inet"	0	0	1	1
5875	5874	"result"	"int"	32	0	0	0
5876	5874	"p"	"inet"	0	0	1	1
5879	5878	"result"	"inet"	0	0	0	0
5880	5878	"p"	"inet"	0	0	1	1
5881	5878	"mask"	"int"	32	0	1	2
5884	5883	"result"	"inet"	0	0	0	0
5885	5883	"p"	"inet"	0	0	1	1
5888	5887	"result"	"inet"	0	0	0	0
5889	5887	"p"	"inet"	0	0	1	1
5892	5891	"result"	"inet"	0	0	0	0
5893	5891	"p"	"inet"	0	0	1	1
5896	5895	"result"	"clob"	0	0	0	0
5897	5895	"p"	"inet"	0	0	1	1
5900	5899	"result"	"clob"	0	0	0	0
5901	5899	"p"	"inet"	0	0	1	1
5904	5903	"result"	"boolean"	1	0	0	0
5905	5903	"i1"	"inet"	0	0	1	1
5906	5903	"i2"	"inet"	0	0	1	2
5909	5908	"result"	"boolean"	1	0	0	0
5910	5908	"i1"	"inet"	0	0	1	1
5911	5908	"i2"	"inet"	0	0	1	2
5914	5913	"result"	"boolean"	1	0	0	0
5915	5913	"i1"	"inet"	0	0	1	1
5916	5913	"i2"	"inet"	0	0	1	2
5919	5918	"result"	"boolean"	1	0	0	0
5920	5918	"i1"	"inet"	0	0	1	1
5921	5918	"i2"	"inet"	0	0	1	2
5924	5923	"id"	"oid"	63	0	0	0
5925	5923	"owner"	"clob"	0	0	0	1
5926	5923	"defined"	"timestamp"	7	0	0	2
5927	5923	"query"	"clob"	0	0	0	3
5928	5923	"pipe"	"clob"	0	0	0	4
5929	5923	"plan"	"clob"	0	0	0	5
5930	5923	"mal"	"int"	32	0	0	6
5931	5923	"optimize"	"bigint"	64	0	0	7
5934	5933	"id"	"oid"	63	0	0	0
5935	5933	"start"	"timestamp"	7	0	0	1
5936	5933	"stop"	"timestamp"	7	0	0	2
5937	5933	"arguments"	"clob"	0	0	0	3
5938	5933	"tuples"	"wrd"	64	0	0	4
5939	5933	"run"	"bigint"	64	0	0	5
5940	5933	"ship"	"bigint"	64	0	0	6
5941	5933	"cpu"	"int"	32	0	0	7
5942	5933	"io"	"int"	32	0	0	8
5988	5987	"threshold"	"smallint"	16	0	1	0
5993	5992	"event"	"int"	32	0	0	0
5994	5992	"clk"	"varchar"	20	0	0	1
5995	5992	"pc"	"varchar"	50	0	0	2
5996	5992	"thread"	"int"	32	0	0	3
5997	5992	"ticks"	"bigint"	64	0	0	4
5998	5992	"rrsmb"	"bigint"	64	0	0	5
5999	5992	"vmmb"	"bigint"	64	0	0	6
6000	5992	"reads"	"bigint"	64	0	0	7
6001	5992	"writes"	"bigint"	64	0	0	8
6002	5992	"minflt"	"bigint"	64	0	0	9
6003	5992	"majflt"	"bigint"	64	0	0	10
6004	5992	"nvcsw"	"bigint"	64	0	0	11
6005	5992	"stmt"	"clob"	0	0	0	12
6023	6022	"result"	"timestamp"	7	0	0	0
6024	6022	"sec"	"bigint"	64	0	1	1
6027	6026	"result"	"timestamp"	7	0	0	0
6028	6026	"sec"	"int"	32	0	1	1
6031	6030	"result"	"int"	32	0	0	0
6032	6030	"ts"	"timestamp"	7	0	1	1
6035	6034	"result"	"int"	32	0	0	0
6036	6034	"ts"	"timestamptz"	7	0	1	1
6039	6038	"sys"	"clob"	0	0	1	0
6040	6038	"tab"	"clob"	0	0	1	1
6043	6042	"sys"	"clob"	0	0	1	0
6044	6042	"tab"	"clob"	0	0	1	1
6047	6046	"sys"	"clob"	0	0	1	0
6048	6046	"tab"	"clob"	0	0	1	1
6051	6050	"sch"	"varchar"	100	0	0	0
6052	6050	"usr"	"varchar"	100	0	0	1
6053	6050	"dep_type"	"varchar"	32	0	0	2
6056	6055	"sch"	"varchar"	100	0	0	0
6057	6055	"usr"	"varchar"	100	0	0	1
6058	6055	"dep_type"	"varchar"	32	0	0	2
6061	6060	"sch"	"varchar"	100	0	0	0
6062	6060	"usr"	"varchar"	100	0	0	1
6063	6060	"dep_type"	"varchar"	32	0	0	2
6066	6065	"sch"	"varchar"	100	0	0	0
6067	6065	"usr"	"varchar"	100	0	0	1
6068	6065	"dep_type"	"varchar"	32	0	0	2
6071	6070	"sch"	"varchar"	100	0	0	0
6072	6070	"usr"	"varchar"	100	0	0	1
6073	6070	"dep_type"	"varchar"	32	0	0	2
6076	6075	"sch"	"varchar"	100	0	0	0
6077	6075	"usr"	"varchar"	100	0	0	1
6078	6075	"dep_type"	"varchar"	32	0	0	2
6081	6080	"sch"	"varchar"	100	0	0	0
6082	6080	"usr"	"varchar"	100	0	0	1
6083	6080	"dep_type"	"varchar"	32	0	0	2
6086	6085	"sch"	"varchar"	100	0	0	0
6087	6085	"usr"	"varchar"	100	0	0	1
6088	6085	"dep_type"	"varchar"	32	0	0	2
6091	6090	"sch"	"varchar"	100	0	0	0
6092	6090	"usr"	"varchar"	100	0	0	1
6093	6090	"dep_type"	"varchar"	32	0	0	2
6096	6095	"sch"	"varchar"	100	0	0	0
6097	6095	"usr"	"varchar"	100	0	0	1
6098	6095	"dep_type"	"varchar"	32	0	0	2
6101	6100	"sch"	"varchar"	100	0	0	0
6102	6100	"usr"	"varchar"	100	0	0	1
6103	6100	"dep_type"	"varchar"	32	0	0	2
6106	6105	"sch"	"varchar"	100	0	0	0
6107	6105	"usr"	"varchar"	100	0	0	1
6108	6105	"dep_type"	"varchar"	32	0	0	2
6111	6110	"sch"	"varchar"	100	0	0	0
6112	6110	"usr"	"varchar"	100	0	0	1
6113	6110	"dep_type"	"varchar"	32	0	0	2
6116	6115	"sch"	"varchar"	100	0	0	0
6117	6115	"usr"	"varchar"	100	0	0	1
6118	6115	"dep_type"	"varchar"	32	0	0	2
6121	6120	"sch"	"varchar"	100	0	0	0
6122	6120	"usr"	"varchar"	100	0	0	1
6123	6120	"dep_type"	"varchar"	32	0	0	2
6126	6125	"sch"	"varchar"	100	0	0	0
6127	6125	"usr"	"varchar"	100	0	0	1
6128	6125	"dep_type"	"varchar"	32	0	0	2
6131	6130	"sch"	"varchar"	100	0	0	0
6132	6130	"usr"	"varchar"	100	0	0	1
6133	6130	"dep_type"	"varchar"	32	0	0	2
6136	6135	"result"	"clob"	0	0	0	0
6137	6135	"username"	"clob"	0	0	1	1
6140	6139	"user"	"clob"	0	0	0	0
6141	6139	"login"	"timestamp"	7	0	0	1
6142	6139	"sessiontimeout"	"bigint"	64	0	0	2
6143	6139	"lastcommand"	"timestamp"	7	0	0	3
6144	6139	"querytimeout"	"bigint"	64	0	0	4
6145	6139	"active"	"boolean"	1	0	0	5
6156	6155	"delay"	"tinyint"	8	0	1	0
6159	6158	"delay"	"tinyint"	8	0	1	0
6160	6158	"force"	"boolean"	1	0	1	1
6163	6162	"query"	"bigint"	64	0	1	0
6166	6165	"query"	"bigint"	64	0	1	0
6167	6165	"session"	"bigint"	64	0	1	1
6170	6169	"timeout"	"bigint"	64	0	1	0
6173	6172	"result"	"varchar"	32	0	0	0
6174	6172	"s1"	"varchar"	32	0	1	1
6175	6172	"st"	"int"	32	0	1	2
6176	6172	"len"	"int"	32	0	1	3
6177	6172	"s3"	"varchar"	32	0	1	4
6180	6179	"result"	"double"	53	0	0	0
6181	6179	"num"	"double"	53	0	1	1
6182	6179	"prc"	"int"	32	0	1	2
6185	6184	"result"	"double"	53	0	0	0
6186	6184	"num"	"double"	53	0	1	1
6187	6184	"prc"	"int"	32	0	1	2
6188	6184	"truncat"	"int"	32	0	1	3
6191	6190	"result"	"clob"	0	0	0	0
6192	6190	"num"	"double"	53	0	1	1
6193	6190	"prc"	"int"	32	0	1	2
6194	6190	"truncat"	"int"	32	0	1	3
6197	6196	"result"	"double"	53	0	0	0
6198	6196	"pdec"	"double"	53	0	1	1
6199	6196	"pradius"	"double"	53	0	1	2
6202	6201	"result"	"oid"	63	0	0	0
6203	6201	"x"	"int"	32	0	1	1
6204	6201	"y"	"int"	32	0	1	2
6207	6206	"result"	"int"	32	0	0	0
6208	6206	"z"	"oid"	63	0	1	1
6211	6210	"result"	"int"	32	0	0	0
6212	6210	"z"	"oid"	63	0	1	1
6215	6214	"rewrite"	"clob"	0	0	0	0
6216	6214	"count"	"int"	32	0	0	1
6219	6218	"query"	"clob"	0	0	0	0
6220	6218	"count"	"int"	32	0	0	1
6223	6222	"filename"	"clob"	0	0	1	0
6226	6225	"name"	"clob"	0	0	0	0
6227	6225	"def"	"clob"	0	0	0	1
6228	6225	"status"	"clob"	0	0	0	2
6236	6235	"name"	"clob"	0	0	0	0
6237	6235	"value"	"clob"	0	0	0	1
6244	6243	"id"	"int"	32	0	0	0
6245	6243	"name"	"clob"	0	0	0	1
6246	6243	"ttype"	"clob"	0	0	0	2
6247	6243	"count"	"bigint"	64	0	0	3
6248	6243	"refcnt"	"int"	32	0	0	4
6249	6243	"lrefcnt"	"int"	32	0	0	5
6250	6243	"location"	"clob"	0	0	0	6
6251	6243	"heat"	"int"	32	0	0	7
6252	6243	"dirty"	"clob"	0	0	0	8
6253	6243	"status"	"clob"	0	0	0	9
6254	6243	"kind"	"clob"	0	0	0	10
6257	6256	"signature"	"clob"	0	0	0	0
6258	6256	"address"	"clob"	0	0	0	1
6259	6256	"comment"	"clob"	0	0	0	2
6262	6261	"ra_stmt"	"clob"	0	0	1	0
6263	6261	"opt"	"boolean"	1	0	1	1
6268	6267	"qtag"	"bigint"	64	0	0	0
6269	6267	"user"	"clob"	0	0	0	1
6270	6267	"started"	"timestamp"	7	0	0	2
6271	6267	"estimate"	"timestamp"	7	0	0	3
6272	6267	"progress"	"int"	32	0	0	4
6273	6267	"status"	"clob"	0	0	0	5
6274	6267	"tag"	"oid"	63	0	0	6
6275	6267	"query"	"clob"	0	0	0	7
6288	6287	"tag"	"int"	32	0	1	0
6291	6290	"tag"	"int"	32	0	1	0
6294	6293	"tag"	"int"	32	0	1	0
6297	6296	"tag"	"bigint"	64	0	1	0
6300	6299	"tag"	"bigint"	64	0	1	0
6303	6302	"tag"	"bigint"	64	0	1	0
6306	6305	"rowid"	"bigint"	64	0	0	0
6307	6305	"fldid"	"int"	32	0	0	1
6308	6305	"message"	"clob"	0	0	0	2
6309	6305	"input"	"clob"	0	0	0	3
6320	6319	"result"	"double"	53	0	0	0
6321	6319	"val"	"tinyint"	8	0	1	1
6324	6323	"result"	"double"	53	0	0	0
6325	6323	"val"	"smallint"	16	0	1	1
6328	6327	"result"	"double"	53	0	0	0
6329	6327	"val"	"int"	32	0	1	1
6332	6331	"result"	"double"	53	0	0	0
6333	6331	"val"	"wrd"	64	0	1	1
6336	6335	"result"	"double"	53	0	0	0
6337	6335	"val"	"bigint"	64	0	1	1
6340	6339	"result"	"double"	53	0	0	0
6341	6339	"val"	"real"	24	0	1	1
6344	6343	"result"	"double"	53	0	0	0
6345	6343	"val"	"double"	53	0	1	1
6348	6347	"result"	"double"	53	0	0	0
6349	6347	"val"	"date"	0	0	1	1
6352	6351	"result"	"double"	53	0	0	0
6353	6351	"val"	"time"	1	0	1	1
6356	6355	"result"	"double"	53	0	0	0
6357	6355	"val"	"timestamp"	7	0	1	1
6360	6359	"result"	"double"	53	0	0	0
6361	6359	"val"	"tinyint"	8	0	1	1
6364	6363	"result"	"double"	53	0	0	0
6365	6363	"val"	"smallint"	16	0	1	1
6368	6367	"result"	"double"	53	0	0	0
6369	6367	"val"	"int"	32	0	1	1
6372	6371	"result"	"double"	53	0	0	0
6373	6371	"val"	"wrd"	64	0	1	1
6376	6375	"result"	"double"	53	0	0	0
6377	6375	"val"	"bigint"	64	0	1	1
6380	6379	"result"	"double"	53	0	0	0
6381	6379	"val"	"real"	24	0	1	1
6384	6383	"result"	"double"	53	0	0	0
6385	6383	"val"	"double"	53	0	1	1
6388	6387	"result"	"double"	53	0	0	0
6389	6387	"val"	"date"	0	0	1	1
6392	6391	"result"	"double"	53	0	0	0
6393	6391	"val"	"time"	1	0	1	1
6396	6395	"result"	"double"	53	0	0	0
6397	6395	"val"	"timestamp"	7	0	1	1
6400	6399	"result"	"double"	53	0	0	0
6401	6399	"val"	"tinyint"	8	0	1	1
6404	6403	"result"	"double"	53	0	0	0
6405	6403	"val"	"smallint"	16	0	1	1
6408	6407	"result"	"double"	53	0	0	0
6409	6407	"val"	"int"	32	0	1	1
6412	6411	"result"	"double"	53	0	0	0
6413	6411	"val"	"wrd"	64	0	1	1
6416	6415	"result"	"double"	53	0	0	0
6417	6415	"val"	"bigint"	64	0	1	1
6420	6419	"result"	"double"	53	0	0	0
6421	6419	"val"	"real"	24	0	1	1
6424	6423	"result"	"double"	53	0	0	0
6425	6423	"val"	"double"	53	0	1	1
6428	6427	"result"	"double"	53	0	0	0
6429	6427	"val"	"date"	0	0	1	1
6432	6431	"result"	"double"	53	0	0	0
6433	6431	"val"	"time"	1	0	1	1
6436	6435	"result"	"double"	53	0	0	0
6437	6435	"val"	"timestamp"	7	0	1	1
6440	6439	"result"	"double"	53	0	0	0
6441	6439	"val"	"tinyint"	8	0	1	1
6444	6443	"result"	"double"	53	0	0	0
6445	6443	"val"	"smallint"	16	0	1	1
6448	6447	"result"	"double"	53	0	0	0
6449	6447	"val"	"int"	32	0	1	1
6452	6451	"result"	"double"	53	0	0	0
6453	6451	"val"	"wrd"	64	0	1	1
6456	6455	"result"	"double"	53	0	0	0
6457	6455	"val"	"bigint"	64	0	1	1
6460	6459	"result"	"double"	53	0	0	0
6461	6459	"val"	"real"	24	0	1	1
6464	6463	"result"	"double"	53	0	0	0
6465	6463	"val"	"double"	53	0	1	1
6468	6467	"result"	"double"	53	0	0	0
6469	6467	"val"	"date"	0	0	1	1
6472	6471	"result"	"double"	53	0	0	0
6473	6471	"val"	"time"	1	0	1	1
6476	6475	"result"	"double"	53	0	0	0
6477	6475	"val"	"timestamp"	7	0	1	1
6480	6479	"result"	"tinyint"	8	0	0	0
6481	6479	"val"	"tinyint"	8	0	1	1
6484	6483	"result"	"smallint"	16	0	0	0
6485	6483	"val"	"smallint"	16	0	1	1
6488	6487	"result"	"int"	32	0	0	0
6489	6487	"val"	"int"	32	0	1	1
6492	6491	"result"	"wrd"	64	0	0	0
6493	6491	"val"	"wrd"	64	0	1	1
6496	6495	"result"	"bigint"	64	0	0	0
6497	6495	"val"	"bigint"	64	0	1	1
6500	6499	"result"	"decimal"	18	3	0	0
6501	6499	"val"	"decimal"	18	3	1	1
6504	6503	"result"	"real"	24	0	0	0
6505	6503	"val"	"real"	24	0	1	1
6508	6507	"result"	"double"	53	0	0	0
6509	6507	"val"	"double"	53	0	1	1
6512	6511	"result"	"date"	0	0	0	0
6513	6511	"val"	"date"	0	0	1	1
6516	6515	"result"	"time"	1	0	0	0
6517	6515	"val"	"time"	1	0	1	1
6520	6519	"result"	"timestamp"	7	0	0	0
6521	6519	"val"	"timestamp"	7	0	1	1
6524	6523	"result"	"tinyint"	8	0	0	0
6525	6523	"val"	"tinyint"	8	0	1	1
6526	6523	"q"	"double"	53	0	1	2
6529	6528	"result"	"smallint"	16	0	0	0
6530	6528	"val"	"smallint"	16	0	1	1
6531	6528	"q"	"double"	53	0	1	2
6534	6533	"result"	"int"	32	0	0	0
6535	6533	"val"	"int"	32	0	1	1
6536	6533	"q"	"double"	53	0	1	2
6539	6538	"result"	"wrd"	64	0	0	0
6540	6538	"val"	"wrd"	64	0	1	1
6541	6538	"q"	"double"	53	0	1	2
6544	6543	"result"	"bigint"	64	0	0	0
6545	6543	"val"	"bigint"	64	0	1	1
6546	6543	"q"	"double"	53	0	1	2
6549	6548	"result"	"decimal"	18	3	0	0
6550	6548	"val"	"decimal"	18	3	1	1
6551	6548	"q"	"double"	53	0	1	2
6554	6553	"result"	"real"	24	0	0	0
6555	6553	"val"	"real"	24	0	1	1
6556	6553	"q"	"double"	53	0	1	2
6559	6558	"result"	"double"	53	0	0	0
6560	6558	"val"	"double"	53	0	1	1
6561	6558	"q"	"double"	53	0	1	2
6564	6563	"result"	"date"	0	0	0	0
6565	6563	"val"	"date"	0	0	1	1
6566	6563	"q"	"double"	53	0	1	2
6569	6568	"result"	"time"	1	0	0	0
6570	6568	"val"	"time"	1	0	1	1
6571	6568	"q"	"double"	53	0	1	2
6574	6573	"result"	"timestamp"	7	0	0	0
6575	6573	"val"	"timestamp"	7	0	1	1
6576	6573	"q"	"double"	53	0	1	2
6579	6578	"result"	"tinyint"	8	0	0	0
6580	6578	"e1"	"tinyint"	8	0	1	1
6581	6578	"e2"	"tinyint"	8	0	1	2
6584	6583	"result"	"smallint"	16	0	0	0
6585	6583	"e1"	"smallint"	16	0	1	1
6586	6583	"e2"	"smallint"	16	0	1	2
6589	6588	"result"	"int"	32	0	0	0
6590	6588	"e1"	"int"	32	0	1	1
6591	6588	"e2"	"int"	32	0	1	2
6594	6593	"result"	"wrd"	64	0	0	0
6595	6593	"e1"	"wrd"	64	0	1	1
6596	6593	"e2"	"wrd"	64	0	1	2
6599	6598	"result"	"bigint"	64	0	0	0
6600	6598	"e1"	"bigint"	64	0	1	1
6601	6598	"e2"	"bigint"	64	0	1	2
6604	6603	"result"	"real"	24	0	0	0
6605	6603	"e1"	"real"	24	0	1	1
6606	6603	"e2"	"real"	24	0	1	2
6609	6608	"result"	"double"	53	0	0	0
6610	6608	"e1"	"double"	53	0	1	1
6611	6608	"e2"	"double"	53	0	1	2
6614	6613	"result"	"double"	53	0	0	0
6615	6613	"val"	"hugeint"	128	0	1	1
6618	6617	"result"	"double"	53	0	0	0
6619	6617	"val"	"hugeint"	128	0	1	1
6622	6621	"result"	"double"	53	0	0	0
6623	6621	"val"	"hugeint"	128	0	1	1
6626	6625	"result"	"double"	53	0	0	0
6627	6625	"val"	"hugeint"	128	0	1	1
6630	6629	"result"	"hugeint"	128	0	0	0
6631	6629	"val"	"hugeint"	128	0	1	1
6634	6633	"result"	"hugeint"	128	0	0	0
6635	6633	"val"	"hugeint"	128	0	1	1
6636	6633	"q"	"double"	53	0	1	2
6639	6638	"result"	"hugeint"	128	0	0	0
6640	6638	"e1"	"hugeint"	128	0	1	1
6641	6638	"e2"	"hugeint"	128	0	1	2
6657	6656	"result"	"mbr"	0	0	0	0
6658	6656	"g"	"geometry"	0	0	1	1
6661	6660	"result"	"boolean"	1	0	0	0
6662	6660	"a"	"mbr"	0	0	1	1
6663	6660	"b"	"mbr"	0	0	1	2
6666	6665	"result"	"geometry"	0	0	0	0
6667	6665	"wkt"	"clob"	0	0	1	1
6668	6665	"srid"	"smallint"	16	0	1	2
6671	6670	"result"	"point"	0	0	0	0
6672	6670	"wkt"	"clob"	0	0	1	1
6673	6670	"srid"	"smallint"	16	0	1	2
6676	6675	"result"	"linestring"	0	0	0	0
6677	6675	"wkt"	"clob"	0	0	1	1
6678	6675	"srid"	"smallint"	16	0	1	2
6681	6680	"result"	"polygon"	0	0	0	0
6682	6680	"wkt"	"clob"	0	0	1	1
6683	6680	"srid"	"smallint"	16	0	1	2
6686	6685	"result"	"multipoint"	0	0	0	0
6687	6685	"wkt"	"clob"	0	0	1	1
6688	6685	"srid"	"smallint"	16	0	1	2
6691	6690	"result"	"multilinestring"	0	0	0	0
6692	6690	"wkt"	"clob"	0	0	1	1
6693	6690	"srid"	"smallint"	16	0	1	2
6696	6695	"result"	"multipolygon"	0	0	0	0
6697	6695	"wkt"	"clob"	0	0	1	1
6698	6695	"srid"	"smallint"	16	0	1	2
6701	6700	"result"	"multipolygon"	0	0	0	0
6702	6700	"wkt"	"clob"	0	0	1	1
6703	6700	"srid"	"smallint"	16	0	1	2
6706	6705	"result"	"polygon"	0	0	0	0
6707	6705	"wkt"	"clob"	0	0	1	1
6708	6705	"srid"	"smallint"	16	0	1	2
6711	6710	"result"	"clob"	0	0	0	0
6712	6710	"g"	"geometry"	0	0	1	1
6715	6714	"result"	"double"	53	0	0	0
6716	6714	"g"	"geometry"	0	0	1	1
6719	6718	"result"	"double"	53	0	0	0
6720	6718	"g"	"geometry"	0	0	1	1
6723	6722	"result"	"point"	0	0	0	0
6724	6722	"x"	"double"	53	0	1	1
6725	6722	"y"	"double"	53	0	1	2
6728	6727	"result"	"int"	32	0	0	0
6729	6727	"g"	"geometry"	0	0	1	1
6732	6731	"result"	"int"	32	0	0	0
6733	6731	"g"	"geometry"	0	0	1	1
6736	6735	"result"	"int"	32	0	0	0
6737	6735	"g"	"geometry"	0	0	1	1
6740	6739	"result"	"geometry"	0	0	0	0
6741	6739	"g"	"geometry"	0	0	1	1
6744	6743	"result"	"boolean"	1	0	0	0
6745	6743	"g"	"geometry"	0	0	1	1
6748	6747	"result"	"boolean"	1	0	0	0
6749	6747	"g"	"geometry"	0	0	1	1
6752	6751	"result"	"geometry"	0	0	0	0
6753	6751	"g"	"geometry"	0	0	1	1
6756	6755	"result"	"boolean"	1	0	0	0
6757	6755	"a"	"geometry"	0	0	1	1
6758	6755	"b"	"geometry"	0	0	1	2
6761	6760	"result"	"boolean"	1	0	0	0
6762	6760	"a"	"geometry"	0	0	1	1
6763	6760	"b"	"geometry"	0	0	1	2
6766	6765	"result"	"boolean"	1	0	0	0
6767	6765	"a"	"geometry"	0	0	1	1
6768	6765	"b"	"geometry"	0	0	1	2
6771	6770	"result"	"boolean"	1	0	0	0
6772	6770	"a"	"geometry"	0	0	1	1
6773	6770	"b"	"geometry"	0	0	1	2
6776	6775	"result"	"boolean"	1	0	0	0
6777	6775	"a"	"geometry"	0	0	1	1
6778	6775	"b"	"geometry"	0	0	1	2
6781	6780	"result"	"boolean"	1	0	0	0
6782	6780	"a"	"geometry"	0	0	1	1
6783	6780	"b"	"geometry"	0	0	1	2
6786	6785	"result"	"boolean"	1	0	0	0
6787	6785	"a"	"geometry"	0	0	1	1
6788	6785	"b"	"geometry"	0	0	1	2
6791	6790	"result"	"boolean"	1	0	0	0
6792	6790	"a"	"geometry"	0	0	1	1
6793	6790	"x"	"double"	53	0	1	2
6794	6790	"y"	"double"	53	0	1	3
6797	6796	"result"	"boolean"	1	0	0	0
6798	6796	"a"	"geometry"	0	0	1	1
6799	6796	"b"	"geometry"	0	0	1	2
6802	6801	"result"	"boolean"	1	0	0	0
6803	6801	"a"	"geometry"	0	0	1	1
6804	6801	"b"	"geometry"	0	0	1	2
6805	6801	"pattern"	"clob"	0	0	1	3
6808	6807	"result"	"double"	53	0	0	0
6809	6807	"g"	"geometry"	0	0	1	1
6812	6811	"result"	"double"	53	0	0	0
6813	6811	"g"	"geometry"	0	0	1	1
6816	6815	"result"	"double"	53	0	0	0
6817	6815	"a"	"geometry"	0	0	1	1
6818	6815	"b"	"geometry"	0	0	1	2
6821	6820	"result"	"geometry"	0	0	0	0
6822	6820	"a"	"geometry"	0	0	1	1
6823	6820	"distance"	"double"	53	0	1	2
6826	6825	"result"	"geometry"	0	0	0	0
6827	6825	"a"	"geometry"	0	0	1	1
6830	6829	"result"	"geometry"	0	0	0	0
6831	6829	"a"	"geometry"	0	0	1	1
6832	6829	"b"	"geometry"	0	0	1	2
6835	6834	"result"	"geometry"	0	0	0	0
6836	6834	"a"	"geometry"	0	0	1	1
6837	6834	"b"	"geometry"	0	0	1	2
6840	6839	"result"	"geometry"	0	0	0	0
6841	6839	"a"	"geometry"	0	0	1	1
6842	6839	"b"	"geometry"	0	0	1	2
6845	6844	"result"	"geometry"	0	0	0	0
6846	6844	"a"	"geometry"	0	0	1	1
6847	6844	"b"	"geometry"	0	0	1	2
6852	6851	"result"	"json"	0	0	0	0
6853	6851	"js"	"json"	0	0	1	1
6854	6851	"pathexpr"	"clob"	0	0	1	2
6857	6856	"result"	"json"	0	0	0	0
6858	6856	"js"	"json"	0	0	1	1
6859	6856	"name"	"tinyint"	8	0	1	2
6862	6861	"result"	"json"	0	0	0	0
6863	6861	"js"	"json"	0	0	1	1
6864	6861	"name"	"int"	32	0	1	2
6867	6866	"result"	"json"	0	0	0	0
6868	6866	"js"	"json"	0	0	1	1
6869	6866	"name"	"bigint"	64	0	1	2
6872	6871	"result"	"clob"	0	0	0	0
6873	6871	"js"	"json"	0	0	1	1
6874	6871	"e"	"clob"	0	0	1	2
6877	6876	"result"	"double"	53	0	0	0
6878	6876	"js"	"json"	0	0	1	1
6881	6880	"result"	"bigint"	64	0	0	0
6882	6880	"js"	"json"	0	0	1	1
6885	6884	"result"	"boolean"	1	0	0	0
6886	6884	"js"	"clob"	0	0	1	1
6889	6888	"result"	"boolean"	1	0	0	0
6890	6888	"js"	"clob"	0	0	1	1
6893	6892	"result"	"boolean"	1	0	0	0
6894	6892	"js"	"clob"	0	0	1	1
6897	6896	"result"	"boolean"	1	0	0	0
6898	6896	"js"	"json"	0	0	1	1
6901	6900	"result"	"boolean"	1	0	0	0
6902	6900	"js"	"json"	0	0	1	1
6905	6904	"result"	"boolean"	1	0	0	0
6906	6904	"js"	"json"	0	0	1	1
6909	6908	"result"	"int"	32	0	0	0
6910	6908	"js"	"json"	0	0	1	1
6913	6912	"result"	"json"	0	0	0	0
6914	6912	"js"	"json"	0	0	1	1
6917	6916	"result"	"json"	0	0	0	0
6918	6916	"js"	"json"	0	0	1	1
6921	6920	"result"	"clob"	0	0	0	0
6922	6920	"js"	"json"	0	0	1	1
6925	6924	"result"	"clob"	0	0	0	0
6926	6924	"js"	"clob"	0	0	1	1
6929	6928	"result"	"clob"	0	0	0	0
6930	6928	"js"	"int"	32	0	1	1
6933	6932	"result"	"clob"	0	0	0	0
6934	6932	"js"	"json"	0	0	1	1
6937	6936	"result"	"clob"	0	0	0	0
6938	6936	"x"	"clob"	0	0	1	1
6941	6940	"result"	"clob"	0	0	0	0
6942	6940	"x"	"double"	53	0	1	1
6945	6944	"result"	"json"	0	0	0	0
6946	6944	"js"	"json"	0	0	1	1
6947	6944	"name"	"hugeint"	128	0	1	2
6950	6949	"result"	"clob"	0	0	0	0
6951	6949	"v"	"clob"	0	0	1	1
6955	6954	"result"	"uuid"	0	0	0	0
6958	6957	"result"	"uuid"	0	0	0	0
6959	6957	"u"	"uuid"	0	0	1	1
6962	6961	"result"	"uuid"	0	0	0	0
6963	6961	"u"	"clob"	0	0	1	1
6966	6965	"result"	"double"	53	0	0	0
6967	6965	"chi2"	"double"	53	0	1	1
6968	6965	"datapoints"	"double"	53	0	1	2
6976	6975	"beat"	"int"	32	0	1	0
6979	6978	"poolsize"	"int"	32	0	1	0
6982	6981	"host"	"clob"	0	0	1	0
6983	6981	"port"	"int"	32	0	1	1
7007	7006	"dirname"	"clob"	0	0	1	0
7010	7009	"fname"	"clob"	0	0	1	0
7013	7012	"tname"	"clob"	0	0	1	0
7016	7015	"dirname"	"clob"	0	0	1	0
7017	7015	"pat"	"clob"	0	0	1	1
7052	7051	"fname"	"varchar"	256	0	1	0
7055	7054	"fid"	"int"	32	0	1	0
7056	7054	"varnname"	"varchar"	256	0	1	1
7059	7058	"schema"	"clob"	0	0	0	0
7060	7058	"table"	"clob"	0	0	0	1
7061	7058	"column"	"clob"	0	0	0	2
7062	7058	"type"	"clob"	0	0	0	3
7063	7058	"mode"	"clob"	0	0	0	4
7064	7058	"location"	"clob"	0	0	0	5
7065	7058	"count"	"bigint"	64	0	0	6
7066	7058	"typewidth"	"int"	32	0	0	7
7067	7058	"columnsize"	"bigint"	64	0	0	8
7068	7058	"heapsize"	"bigint"	64	0	0	9
7069	7058	"hashes"	"bigint"	64	0	0	10
7070	7058	"phash"	"boolean"	1	0	0	11
7071	7058	"imprints"	"bigint"	64	0	0	12
7072	7058	"sorted"	"boolean"	1	0	0	13
7105	7104	"result"	"bigint"	64	0	0	0
7106	7104	"nme"	"clob"	0	0	1	1
7107	7104	"i"	"bigint"	64	0	1	2
7108	7104	"d"	"bigint"	64	0	1	3
7111	7110	"result"	"bigint"	64	0	0	0
7112	7110	"tpe"	"clob"	0	0	1	1
7113	7110	"i"	"bigint"	64	0	1	2
7114	7110	"w"	"int"	32	0	1	3
7117	7116	"result"	"bigint"	64	0	0	0
7118	7116	"b"	"boolean"	1	0	1	1
7119	7116	"i"	"bigint"	64	0	1	2
7122	7121	"result"	"bigint"	64	0	0	0
7123	7121	"i"	"bigint"	64	0	1	1
7124	7121	"nme"	"clob"	0	0	1	2
7127	7126	"schema"	"clob"	0	0	0	0
7128	7126	"table"	"clob"	0	0	0	1
7129	7126	"column"	"clob"	0	0	0	2
7130	7126	"type"	"clob"	0	0	0	3
7131	7126	"count"	"bigint"	64	0	0	4
7132	7126	"columnsize"	"bigint"	64	0	0	5
7133	7126	"heapsize"	"bigint"	64	0	0	6
7134	7126	"hashes"	"bigint"	64	0	0	7
7135	7126	"imprints"	"bigint"	64	0	0	8
7136	7126	"sorted"	"boolean"	1	0	0	9
7174	7173	"MinMax"	"int"	32	0	1	0
7175	7173	"sample"	"bigint"	64	0	1	1
7178	7177	"MinMax"	"int"	32	0	1	0
7179	7177	"sample"	"bigint"	64	0	1	1
7180	7177	"sch"	"clob"	0	0	1	2
7183	7182	"MinMax"	"int"	32	0	1	0
7184	7182	"sample"	"bigint"	64	0	1	1
7185	7182	"sch"	"clob"	0	0	1	2
7186	7182	"tbl"	"clob"	0	0	1	3
7189	7188	"MinMax"	"int"	32	0	1	0
7190	7188	"sample"	"bigint"	64	0	1	1
7191	7188	"sch"	"clob"	0	0	1	2
7192	7188	"tbl"	"clob"	0	0	1	3
7193	7188	"col"	"clob"	0	0	1	4
7196	7195	"result"	"clob"	0	0	0	0
7197	7195	"src"	"clob"	0	0	1	1
7200	7199	"result"	"smallint"	16	0	0	0
7201	7199	"one"	"tinyint"	8	0	1	1
7202	7199	"two"	"tinyint"	8	0	1	2
7205	7204	"result"	"int"	32	0	0	0
7206	7204	"one"	"smallint"	16	0	1	1
7207	7204	"two"	"smallint"	16	0	1	2
7210	7209	"result"	"bigint"	64	0	0	0
7211	7209	"one"	"int"	32	0	1	1
7212	7209	"two"	"int"	32	0	1	2
7215	7214	"result"	"hugeint"	128	0	0	0
7216	7214	"one"	"bigint"	64	0	1	1
7217	7214	"two"	"bigint"	64	0	1	2
7221	7220	"bam_repos"	"clob"	0	0	1	0
7222	7220	"dbschema"	"smallint"	16	0	1	1
7223	7220	"nr_threads"	"smallint"	16	0	1	2
7226	7225	"bam_files"	"clob"	0	0	1	0
7227	7225	"dbschema"	"smallint"	16	0	1	1
7228	7225	"nr_threads"	"smallint"	16	0	1	2
7231	7230	"bam_file"	"clob"	0	0	1	0
7232	7230	"dbschema"	"smallint"	16	0	1	1
7235	7234	"file_id"	"bigint"	64	0	1	0
7236	7234	"dbschema"	"smallint"	16	0	1	1
7239	7238	"result"	"boolean"	1	0	0	0
7240	7238	"flag"	"smallint"	16	0	1	1
7241	7238	"name"	"clob"	0	0	1	2
7244	7243	"result"	"clob"	0	0	0	0
7245	7243	"seq"	"clob"	0	0	1	1
7248	7247	"result"	"clob"	0	0	0	0
7249	7247	"qual"	"clob"	0	0	1	1
7252	7251	"result"	"int"	32	0	0	0
7253	7251	"cigar"	"clob"	0	0	1	1
7256	7255	"output_path"	"clob"	0	0	1	0
7259	7258	"output_path"	"clob"	0	0	1	0
7329	7328	"value"	"tinyint"	8	0	0	0
7330	7328	"first"	"tinyint"	8	0	1	1
7331	7328	"last"	"tinyint"	8	0	1	2
7334	7333	"value"	"tinyint"	8	0	0	0
7335	7333	"first"	"tinyint"	8	0	1	1
7336	7333	"last"	"tinyint"	8	0	1	2
7337	7333	"stepsize"	"tinyint"	8	0	1	3
7340	7339	"value"	"smallint"	16	0	0	0
7341	7339	"first"	"smallint"	16	0	1	1
7342	7339	"last"	"smallint"	16	0	1	2
7345	7344	"value"	"smallint"	16	0	0	0
7346	7344	"first"	"smallint"	16	0	1	1
7347	7344	"last"	"smallint"	16	0	1	2
7348	7344	"stepsize"	"smallint"	16	0	1	3
7351	7350	"value"	"int"	32	0	0	0
7352	7350	"first"	"int"	32	0	1	1
7353	7350	"last"	"int"	32	0	1	2
7356	7355	"value"	"int"	32	0	0	0
7357	7355	"first"	"int"	32	0	1	1
7358	7355	"last"	"int"	32	0	1	2
7359	7355	"stepsize"	"int"	32	0	1	3
7362	7361	"value"	"bigint"	64	0	0	0
7363	7361	"first"	"bigint"	64	0	1	1
7364	7361	"last"	"bigint"	64	0	1	2
7367	7366	"value"	"bigint"	64	0	0	0
7368	7366	"first"	"bigint"	64	0	1	1
7369	7366	"last"	"bigint"	64	0	1	2
7370	7366	"stepsize"	"bigint"	64	0	1	3
7373	7372	"value"	"real"	24	0	0	0
7374	7372	"first"	"real"	24	0	1	1
7375	7372	"last"	"real"	24	0	1	2
7376	7372	"stepsize"	"real"	24	0	1	3
7379	7378	"value"	"double"	53	0	0	0
7380	7378	"first"	"double"	53	0	1	1
7381	7378	"last"	"double"	53	0	1	2
7382	7378	"stepsize"	"double"	53	0	1	3
7385	7384	"value"	"decimal"	10	2	0	0
7386	7384	"first"	"decimal"	10	2	1	1
7387	7384	"last"	"decimal"	10	2	1	2
7388	7384	"stepsize"	"decimal"	10	2	1	3
7391	7390	"value"	"timestamp"	7	0	0	0
7392	7390	"first"	"timestamp"	7	0	1	1
7393	7390	"last"	"timestamp"	7	0	1	2
7394	7390	"stepsize"	"sec_interval"	13	0	1	3
7397	7396	"value"	"hugeint"	128	0	0	0
7398	7396	"first"	"hugeint"	128	0	1	1
7399	7396	"last"	"hugeint"	128	0	1	2
7402	7401	"value"	"hugeint"	128	0	0	0
7403	7401	"first"	"hugeint"	128	0	1	1
7404	7401	"last"	"hugeint"	128	0	1	2
7405	7401	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 238 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
432	5755	7
431	5755	7
1037	5755	7
432	5759	7
431	5759	7
1037	5759	7
5923	5952	5
5933	5963	5
5923	5981	5
5933	5981	5
5992	6020	5
2003	6050	7
2001	6050	7
2002	6050	7
5719	6050	7
5728	6055	7
5726	6055	7
5727	6055	7
2005	6055	7
2001	6055	7
2003	6055	7
5687	6060	7
2047	6060	7
2046	6060	7
2049	6060	7
2048	6060	7
5687	6065	7
2088	6065	7
2086	6065	7
2090	6065	7
2083	6065	7
2079	6065	7
5687	6070	7
2047	6070	7
2046	6070	7
2049	6070	7
2092	6070	7
2091	6070	7
2048	6070	7
2093	6070	7
2094	6070	7
5687	6075	7
2081	6075	7
2079	6075	7
2084	6075	7
2080	6075	7
2083	6075	7
5687	6080	7
2047	6080	7
2046	6080	7
2049	6080	7
2017	6080	7
2016	6080	7
2048	6080	7
2018	6080	7
5697	6085	7
2047	6085	7
2046	6085	7
2049	6085	7
2048	6085	7
5687	6085	7
5697	6090	7
2081	6090	7
2079	6090	7
2084	6090	7
2103	6090	7
2102	6090	7
2104	6090	7
2080	6090	7
2083	6090	7
169	6090	7
33	6090	7
32	6090	7
34	6090	7
5697	6095	7
2088	6095	7
2086	6095	7
2090	6095	7
2083	6095	7
2079	6095	7
2087	6095	7
2103	6095	7
2102	6095	7
2104	6095	7
33	6095	7
32	6095	7
34	6095	7
5697	6100	7
2047	6100	7
2046	6100	7
2049	6100	7
2048	6100	7
2017	6100	7
2016	6100	7
2018	6100	7
5697	6105	7
2047	6105	7
2046	6105	7
2049	6105	7
2092	6105	7
2091	6105	7
2048	6105	7
2093	6105	7
5687	6110	7
2047	6110	7
2046	6110	7
2049	6110	7
2017	6110	7
2016	6110	7
2048	6110	7
2018	6110	7
5687	6115	7
2047	6115	7
2046	6115	7
2049	6115	7
2092	6115	7
2091	6115	7
2048	6115	7
2093	6115	7
2018	6120	7
2016	6120	7
2017	6120	7
2047	6120	7
2046	6120	7
2049	6120	7
2048	6120	7
2018	6125	7
2016	6125	7
2017	6125	7
2047	6125	7
2046	6125	7
2049	6125	7
2092	6125	7
2091	6125	7
2048	6125	7
2093	6125	7
2083	6130	7
2079	6130	7
2080	6130	7
2084	6130	7
6139	6153	5
103	6172	7
39	6172	7
37	6172	7
1180	6172	7
1166	6172	7
228	6172	7
1177	6172	7
229	6172	7
275	6172	7
34	6184	7
514	6184	7
103	6184	7
105	6184	7
36	6184	7
6179	6184	7
6225	6233	5
6235	6241	5
6267	6285	5
6305	6315	5
6985	6987	10
6985	6986	4
6990	6992	10
6993	6995	10
6990	6991	4
6998	7000	10
7001	7003	10
6998	6999	4
7058	7088	5
7090	7102	13
7100	7102	13
7091	7102	13
7092	7102	13
7093	7102	13
7094	7102	13
7095	7102	13
7096	7102	13
7097	7102	13
7098	7102	13
7099	7102	13
34	7104	7
112	7104	7
236	7104	7
102	7110	7
35	7110	7
275	7110	7
116	7110	7
34	7116	7
112	7116	7
103	7121	7
34	7121	7
391	7121	7
7090	7126	7
7100	7126	7
7091	7126	7
7092	7126	7
7093	7126	7
7095	7126	7
7096	7126	7
7097	7126	7
7098	7126	7
7099	7126	7
7104	7126	7
7110	7126	7
7116	7126	7
7121	7126	7
7126	7148	5
7126	7158	5
49	7158	5
56	7158	5
57	7158	5
52	7158	5
36	7158	5
34	7158	5
112	7158	5
7261	7268	10
7261	7267	4
7271	7279	10
7272	7279	10
7272	7281	10
7271	7278	4
7272	7278	4
7267	7280	11
7272	7280	11
7284	7298	10
7285	7298	10
7285	7300	10
7284	7297	4
7285	7297	4
7267	7299	11
7285	7299	11
7303	7310	10
7304	7310	10
7304	7312	10
7303	7309	4
7304	7309	4
7267	7311	11
7304	7311	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1544 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
31	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
32	"hash"	"hash"	"mkey"	0	1	false	false	false	0
33	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
34	"="	"="	"calc"	0	1	false	false	false	0
35	"<>"	"!="	"calc"	0	1	false	false	false	0
36	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
37	">"	">"	"calc"	0	1	false	false	false	0
38	">="	">="	"calc"	0	1	false	false	false	0
39	"<"	"<"	"calc"	0	1	false	false	false	0
40	"<="	"<="	"calc"	0	1	false	false	false	0
44	"in"	"in"	"calc"	0	1	false	false	false	0
45	"identity"	"identity"	"calc"	0	1	false	false	false	0
46	"rowid"	"identity"	"calc"	0	1	false	false	false	0
47	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
50	"sql_min"	"min"	"calc"	0	1	false	false	false	0
51	"sql_max"	"max"	"calc"	0	1	false	false	false	0
52	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
80	"mod"	"%"	"calc"	0	1	false	false	false	0
81	"mod"	"%"	"calc"	0	1	false	false	false	0
82	"mod"	"%"	"calc"	0	1	false	false	false	0
83	"mod"	"%"	"calc"	0	1	false	false	false	0
84	"mod"	"%"	"calc"	0	1	false	false	false	0
85	"mod"	"%"	"calc"	0	1	false	false	false	0
86	"mod"	"%"	"calc"	0	1	false	false	false	0
87	"mod"	"%"	"calc"	0	1	false	false	false	0
97	"diff"	"diff"	"sql"	0	6	false	false	false	0
98	"diff"	"diff"	"sql"	0	6	false	false	false	0
99	"rank"	"rank"	"sql"	0	6	false	false	false	0
100	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
101	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
102	"and"	"and"	"calc"	0	1	false	false	false	0
103	"or"	"or"	"calc"	0	1	false	false	false	0
104	"xor"	"xor"	"calc"	0	1	false	false	false	0
105	"not"	"not"	"calc"	0	1	false	false	false	0
106	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
107	"sql_div"	"/"	"calc"	0	1	false	false	false	0
108	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
109	"sql_div"	"/"	"calc"	0	1	false	false	false	0
110	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
111	"sql_div"	"/"	"calc"	0	1	false	false	false	0
112	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
113	"sql_div"	"/"	"calc"	0	1	false	false	false	0
114	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
115	"sql_div"	"/"	"calc"	0	1	false	false	false	0
116	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
117	"sql_div"	"/"	"calc"	0	1	false	false	false	0
118	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
119	"sql_div"	"/"	"calc"	0	1	false	false	false	0
120	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
121	"sql_div"	"/"	"calc"	0	1	false	false	false	0
122	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
123	"sql_div"	"/"	"calc"	0	1	false	false	false	0
124	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
125	"sql_div"	"/"	"calc"	0	1	false	false	false	0
126	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
127	"sql_div"	"/"	"calc"	0	1	false	false	false	0
128	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
129	"sql_div"	"/"	"calc"	0	1	false	false	false	0
130	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
131	"sql_div"	"/"	"calc"	0	1	false	false	false	0
132	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
133	"sql_div"	"/"	"calc"	0	1	false	false	false	0
134	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
135	"sql_div"	"/"	"calc"	0	1	false	false	false	0
136	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
137	"sql_add"	"+"	"calc"	0	1	false	false	false	0
138	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
139	"sql_div"	"/"	"calc"	0	1	false	false	false	0
140	"bit_and"	"and"	"calc"	0	1	false	false	false	0
141	"bit_or"	"or"	"calc"	0	1	false	false	false	0
142	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
143	"bit_not"	"not"	"calc"	0	1	false	false	false	0
144	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
145	"right_shift"	">>"	"calc"	0	1	false	false	false	0
146	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
147	"abs"	"abs"	"calc"	0	1	false	false	false	0
148	"sign"	"sign"	"calc"	0	1	false	false	false	0
149	"scale_up"	"*"	"calc"	0	1	false	false	false	0
150	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
151	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
152	"sql_add"	"+"	"calc"	0	1	false	false	false	0
153	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
154	"sql_div"	"/"	"calc"	0	1	false	false	false	0
155	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
156	"sql_add"	"+"	"calc"	0	1	false	false	false	0
157	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
158	"sql_div"	"/"	"calc"	0	1	false	false	false	0
159	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
160	"sql_add"	"+"	"calc"	0	1	false	false	false	0
161	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
162	"sql_div"	"/"	"calc"	0	1	false	false	false	0
163	"bit_and"	"and"	"calc"	0	1	false	false	false	0
164	"bit_or"	"or"	"calc"	0	1	false	false	false	0
165	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
166	"bit_not"	"not"	"calc"	0	1	false	false	false	0
167	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
168	"right_shift"	">>"	"calc"	0	1	false	false	false	0
169	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
170	"abs"	"abs"	"calc"	0	1	false	false	false	0
171	"sign"	"sign"	"calc"	0	1	false	false	false	0
172	"scale_up"	"*"	"calc"	0	1	false	false	false	0
173	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
174	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
175	"sql_add"	"+"	"calc"	0	1	false	false	false	0
176	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
177	"sql_div"	"/"	"calc"	0	1	false	false	false	0
178	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
179	"sql_add"	"+"	"calc"	0	1	false	false	false	0
180	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
181	"sql_div"	"/"	"calc"	0	1	false	false	false	0
182	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
183	"sql_add"	"+"	"calc"	0	1	false	false	false	0
184	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
185	"sql_div"	"/"	"calc"	0	1	false	false	false	0
186	"bit_and"	"and"	"calc"	0	1	false	false	false	0
187	"bit_or"	"or"	"calc"	0	1	false	false	false	0
188	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
189	"bit_not"	"not"	"calc"	0	1	false	false	false	0
190	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
191	"right_shift"	">>"	"calc"	0	1	false	false	false	0
192	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
193	"abs"	"abs"	"calc"	0	1	false	false	false	0
194	"sign"	"sign"	"calc"	0	1	false	false	false	0
195	"scale_up"	"*"	"calc"	0	1	false	false	false	0
196	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
197	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
198	"sql_add"	"+"	"calc"	0	1	false	false	false	0
199	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
200	"sql_div"	"/"	"calc"	0	1	false	false	false	0
201	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
202	"sql_add"	"+"	"calc"	0	1	false	false	false	0
203	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
204	"sql_div"	"/"	"calc"	0	1	false	false	false	0
205	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
206	"sql_add"	"+"	"calc"	0	1	false	false	false	0
207	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
208	"sql_div"	"/"	"calc"	0	1	false	false	false	0
209	"bit_and"	"and"	"calc"	0	1	false	false	false	0
210	"bit_or"	"or"	"calc"	0	1	false	false	false	0
211	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
212	"bit_not"	"not"	"calc"	0	1	false	false	false	0
213	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
214	"right_shift"	">>"	"calc"	0	1	false	false	false	0
215	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
216	"abs"	"abs"	"calc"	0	1	false	false	false	0
217	"sign"	"sign"	"calc"	0	1	false	false	false	0
218	"scale_up"	"*"	"calc"	0	1	false	false	false	0
219	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
220	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
221	"sql_add"	"+"	"calc"	0	1	false	false	false	0
222	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
223	"sql_div"	"/"	"calc"	0	1	false	false	false	0
224	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
225	"sql_add"	"+"	"calc"	0	1	false	false	false	0
226	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
227	"sql_div"	"/"	"calc"	0	1	false	false	false	0
228	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
229	"sql_add"	"+"	"calc"	0	1	false	false	false	0
230	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
231	"sql_div"	"/"	"calc"	0	1	false	false	false	0
232	"bit_and"	"and"	"calc"	0	1	false	false	false	0
233	"bit_or"	"or"	"calc"	0	1	false	false	false	0
234	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
235	"bit_not"	"not"	"calc"	0	1	false	false	false	0
236	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
237	"right_shift"	">>"	"calc"	0	1	false	false	false	0
238	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
239	"abs"	"abs"	"calc"	0	1	false	false	false	0
240	"sign"	"sign"	"calc"	0	1	false	false	false	0
241	"scale_up"	"*"	"calc"	0	1	false	false	false	0
242	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
243	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
244	"sql_add"	"+"	"calc"	0	1	false	false	false	0
245	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
246	"sql_div"	"/"	"calc"	0	1	false	false	false	0
247	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
248	"sql_add"	"+"	"calc"	0	1	false	false	false	0
249	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
250	"sql_div"	"/"	"calc"	0	1	false	false	false	0
251	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
252	"sql_add"	"+"	"calc"	0	1	false	false	false	0
253	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
254	"sql_div"	"/"	"calc"	0	1	false	false	false	0
255	"bit_and"	"and"	"calc"	0	1	false	false	false	0
256	"bit_or"	"or"	"calc"	0	1	false	false	false	0
257	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
258	"bit_not"	"not"	"calc"	0	1	false	false	false	0
259	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
260	"right_shift"	">>"	"calc"	0	1	false	false	false	0
261	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
262	"abs"	"abs"	"calc"	0	1	false	false	false	0
263	"sign"	"sign"	"calc"	0	1	false	false	false	0
264	"scale_up"	"*"	"calc"	0	1	false	false	false	0
265	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
266	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
267	"sql_add"	"+"	"calc"	0	1	false	false	false	0
268	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
269	"sql_div"	"/"	"calc"	0	1	false	false	false	0
270	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
271	"sql_add"	"+"	"calc"	0	1	false	false	false	0
272	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
273	"sql_div"	"/"	"calc"	0	1	false	false	false	0
274	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
275	"sql_add"	"+"	"calc"	0	1	false	false	false	0
276	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
277	"sql_div"	"/"	"calc"	0	1	false	false	false	0
278	"bit_and"	"and"	"calc"	0	1	false	false	false	0
279	"bit_or"	"or"	"calc"	0	1	false	false	false	0
280	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
281	"bit_not"	"not"	"calc"	0	1	false	false	false	0
282	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
283	"right_shift"	">>"	"calc"	0	1	false	false	false	0
284	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
285	"abs"	"abs"	"calc"	0	1	false	false	false	0
286	"sign"	"sign"	"calc"	0	1	false	false	false	0
287	"scale_up"	"*"	"calc"	0	1	false	false	false	0
288	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
289	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
290	"sql_add"	"+"	"calc"	0	1	false	false	false	0
291	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
292	"sql_div"	"/"	"calc"	0	1	false	false	false	0
293	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
294	"sql_add"	"+"	"calc"	0	1	false	false	false	0
295	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
296	"sql_div"	"/"	"calc"	0	1	false	false	false	0
297	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
298	"sql_add"	"+"	"calc"	0	1	false	false	false	0
299	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
300	"sql_div"	"/"	"calc"	0	1	false	false	false	0
301	"bit_and"	"and"	"calc"	0	1	false	false	false	0
302	"bit_or"	"or"	"calc"	0	1	false	false	false	0
303	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
304	"bit_not"	"not"	"calc"	0	1	false	false	false	0
305	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
306	"right_shift"	">>"	"calc"	0	1	false	false	false	0
307	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
308	"abs"	"abs"	"calc"	0	1	false	false	false	0
309	"sign"	"sign"	"calc"	0	1	false	false	false	0
310	"scale_up"	"*"	"calc"	0	1	false	false	false	0
311	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
312	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
313	"sql_add"	"+"	"calc"	0	1	false	false	false	0
314	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
315	"sql_div"	"/"	"calc"	0	1	false	false	false	0
316	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
317	"sql_add"	"+"	"calc"	0	1	false	false	false	0
318	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
319	"sql_div"	"/"	"calc"	0	1	false	false	false	0
320	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
321	"sql_add"	"+"	"calc"	0	1	false	false	false	0
322	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
323	"sql_div"	"/"	"calc"	0	1	false	false	false	0
324	"bit_and"	"and"	"calc"	0	1	false	false	false	0
325	"bit_or"	"or"	"calc"	0	1	false	false	false	0
326	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
327	"bit_not"	"not"	"calc"	0	1	false	false	false	0
328	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
329	"right_shift"	">>"	"calc"	0	1	false	false	false	0
330	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
331	"abs"	"abs"	"calc"	0	1	false	false	false	0
332	"sign"	"sign"	"calc"	0	1	false	false	false	0
333	"scale_up"	"*"	"calc"	0	1	false	false	false	0
334	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
335	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
336	"sql_add"	"+"	"calc"	0	1	false	false	false	0
337	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
338	"sql_div"	"/"	"calc"	0	1	false	false	false	0
339	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
340	"sql_add"	"+"	"calc"	0	1	false	false	false	0
341	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
342	"sql_div"	"/"	"calc"	0	1	false	false	false	0
343	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
344	"sql_add"	"+"	"calc"	0	1	false	false	false	0
345	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
346	"sql_div"	"/"	"calc"	0	1	false	false	false	0
347	"bit_and"	"and"	"calc"	0	1	false	false	false	0
348	"bit_or"	"or"	"calc"	0	1	false	false	false	0
349	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
350	"bit_not"	"not"	"calc"	0	1	false	false	false	0
351	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
352	"right_shift"	">>"	"calc"	0	1	false	false	false	0
353	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
354	"abs"	"abs"	"calc"	0	1	false	false	false	0
355	"sign"	"sign"	"calc"	0	1	false	false	false	0
356	"scale_up"	"*"	"calc"	0	1	false	false	false	0
357	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
358	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
359	"sql_add"	"+"	"calc"	0	1	false	false	false	0
360	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
361	"sql_div"	"/"	"calc"	0	1	false	false	false	0
362	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
363	"sql_add"	"+"	"calc"	0	1	false	false	false	0
364	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
365	"sql_div"	"/"	"calc"	0	1	false	false	false	0
366	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
367	"sql_add"	"+"	"calc"	0	1	false	false	false	0
368	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
369	"sql_div"	"/"	"calc"	0	1	false	false	false	0
370	"bit_and"	"and"	"calc"	0	1	false	false	false	0
371	"bit_or"	"or"	"calc"	0	1	false	false	false	0
372	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
373	"bit_not"	"not"	"calc"	0	1	false	false	false	0
374	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
375	"right_shift"	">>"	"calc"	0	1	false	false	false	0
376	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
377	"abs"	"abs"	"calc"	0	1	false	false	false	0
378	"sign"	"sign"	"calc"	0	1	false	false	false	0
379	"scale_up"	"*"	"calc"	0	1	false	false	false	0
380	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
381	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
382	"sql_add"	"+"	"calc"	0	1	false	false	false	0
383	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
384	"sql_div"	"/"	"calc"	0	1	false	false	false	0
385	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
386	"sql_add"	"+"	"calc"	0	1	false	false	false	0
387	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
388	"sql_div"	"/"	"calc"	0	1	false	false	false	0
389	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
390	"sql_add"	"+"	"calc"	0	1	false	false	false	0
391	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
392	"sql_div"	"/"	"calc"	0	1	false	false	false	0
393	"bit_and"	"and"	"calc"	0	1	false	false	false	0
394	"bit_or"	"or"	"calc"	0	1	false	false	false	0
395	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
396	"bit_not"	"not"	"calc"	0	1	false	false	false	0
397	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
398	"right_shift"	">>"	"calc"	0	1	false	false	false	0
399	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
400	"abs"	"abs"	"calc"	0	1	false	false	false	0
401	"sign"	"sign"	"calc"	0	1	false	false	false	0
402	"scale_up"	"*"	"calc"	0	1	false	false	false	0
403	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
404	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
405	"sql_add"	"+"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_div"	"/"	"calc"	0	1	false	false	false	0
408	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
409	"sql_add"	"+"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_div"	"/"	"calc"	0	1	false	false	false	0
412	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
413	"sql_add"	"+"	"calc"	0	1	false	false	false	0
414	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
415	"sql_div"	"/"	"calc"	0	1	false	false	false	0
416	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
417	"abs"	"abs"	"calc"	0	1	false	false	false	0
418	"sign"	"sign"	"calc"	0	1	false	false	false	0
419	"scale_up"	"*"	"calc"	0	1	false	false	false	0
420	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
421	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
422	"sql_add"	"+"	"calc"	0	1	false	false	false	0
423	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
424	"sql_div"	"/"	"calc"	0	1	false	false	false	0
425	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
426	"sql_add"	"+"	"calc"	0	1	false	false	false	0
427	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
428	"sql_div"	"/"	"calc"	0	1	false	false	false	0
429	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
430	"sql_add"	"+"	"calc"	0	1	false	false	false	0
431	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
432	"sql_div"	"/"	"calc"	0	1	false	false	false	0
433	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
434	"abs"	"abs"	"calc"	0	1	false	false	false	0
435	"sign"	"sign"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
438	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
439	"sql_add"	"+"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_div"	"/"	"calc"	0	1	false	false	false	0
442	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
443	"sql_add"	"+"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_div"	"/"	"calc"	0	1	false	false	false	0
446	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
447	"sql_add"	"+"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_div"	"/"	"calc"	0	1	false	false	false	0
450	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
451	"abs"	"abs"	"calc"	0	1	false	false	false	0
452	"sign"	"sign"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
455	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
456	"sql_add"	"+"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_div"	"/"	"calc"	0	1	false	false	false	0
459	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
460	"abs"	"abs"	"calc"	0	1	false	false	false	0
461	"sign"	"sign"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
465	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
466	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
467	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
468	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
469	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
470	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
471	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
472	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
473	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
474	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
475	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
476	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
477	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
478	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
479	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
480	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
481	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
482	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
483	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
484	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
485	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
486	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
487	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
488	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
489	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
490	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
491	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
492	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
493	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
494	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
495	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
496	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
497	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
498	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
499	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
500	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
501	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
502	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
503	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
504	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
505	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
506	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
507	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
508	"round"	"round"	"sql"	0	1	false	false	false	0
509	"round"	"round"	"sql"	0	1	false	false	false	0
510	"round"	"round"	"sql"	0	1	false	false	false	0
511	"round"	"round"	"sql"	0	1	false	false	false	0
512	"round"	"round"	"sql"	0	1	false	false	false	0
513	"round"	"round"	"sql"	0	1	false	false	false	0
514	"round"	"round"	"sql"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"scale_up"	"*"	"calc"	0	1	false	false	false	0
988	"scale_up"	"*"	"calc"	0	1	false	false	false	0
989	"scale_up"	"*"	"calc"	0	1	false	false	false	0
990	"scale_up"	"*"	"calc"	0	1	false	false	false	0
991	"scale_up"	"*"	"calc"	0	1	false	false	false	0
992	"scale_up"	"*"	"calc"	0	1	false	false	false	0
993	"scale_up"	"*"	"calc"	0	1	false	false	false	0
994	"scale_up"	"*"	"calc"	0	1	false	false	false	0
995	"scale_up"	"*"	"calc"	0	1	false	false	false	0
996	"scale_up"	"*"	"calc"	0	1	false	false	false	0
997	"scale_up"	"*"	"calc"	0	1	false	false	false	0
998	"scale_up"	"*"	"calc"	0	1	false	false	false	0
999	"power"	"pow"	"mmath"	0	1	false	false	false	0
1000	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1001	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1002	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1003	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1004	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1005	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1006	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1007	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1008	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1009	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1010	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1011	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1012	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1013	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1014	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1015	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1016	"log"	"log"	"mmath"	0	1	false	false	false	0
1017	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1018	"power"	"pow"	"mmath"	0	1	false	false	false	0
1019	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1020	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1021	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1022	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1023	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1024	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1025	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1026	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1027	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1028	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1029	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1030	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1031	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1032	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1033	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1034	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1035	"log"	"log"	"mmath"	0	1	false	false	false	0
1036	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1037	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1038	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1039	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1040	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1041	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1042	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1043	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1044	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1045	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1046	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1047	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1048	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1049	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1050	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1051	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1052	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1053	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1054	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1055	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1056	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1057	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1058	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1059	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1060	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1061	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1062	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1063	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1064	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1065	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1066	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1067	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1068	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1069	"year"	"year"	"mtime"	0	1	false	false	false	0
1070	"month"	"month"	"mtime"	0	1	false	false	false	0
1071	"day"	"day"	"mtime"	0	1	false	false	false	0
1072	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1073	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1074	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1075	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1076	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1077	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1078	"year"	"year"	"mtime"	0	1	false	false	false	0
1079	"month"	"month"	"mtime"	0	1	false	false	false	0
1080	"day"	"day"	"mtime"	0	1	false	false	false	0
1081	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1082	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1083	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1084	"year"	"year"	"mtime"	0	1	false	false	false	0
1085	"month"	"month"	"mtime"	0	1	false	false	false	0
1086	"day"	"day"	"mtime"	0	1	false	false	false	0
1087	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1088	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1089	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1090	"year"	"year"	"mtime"	0	1	false	false	false	0
1091	"month"	"month"	"mtime"	0	1	false	false	false	0
1092	"day"	"day"	"mtime"	0	1	false	false	false	0
1093	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1094	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1095	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1096	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1097	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1098	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1099	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1100	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1101	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1102	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1103	"restart"	"restart"	"sql"	0	1	false	false	false	0
1104	"index"	"index"	"calc"	0	1	false	false	false	0
1105	"index"	"index"	"calc"	0	1	false	false	false	0
1106	"index"	"index"	"calc"	0	1	false	false	false	0
1107	"strings"	"strings"	"calc"	0	1	false	false	false	0
1108	"locate"	"locate"	"str"	0	1	false	false	false	0
1109	"locate"	"locate"	"str"	0	1	false	false	false	0
1110	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1111	"substring"	"substring"	"str"	0	1	false	false	false	0
1112	"substring"	"substring"	"str"	0	1	false	false	false	0
1113	"like"	"like"	"algebra"	0	1	false	false	false	0
1114	"like"	"like"	"algebra"	0	1	false	false	false	0
1115	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1116	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1117	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1118	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1119	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1120	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1121	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1122	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1123	"concat"	"+"	"calc"	0	1	false	false	false	0
1124	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1125	"code"	"unicode"	"str"	0	1	false	false	false	0
1126	"length"	"stringlength"	"str"	0	1	false	false	false	0
1127	"right"	"stringright"	"str"	0	1	false	false	false	0
1128	"left"	"stringleft"	"str"	0	1	false	false	false	0
1129	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1130	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1131	"lower"	"toLower"	"str"	0	1	false	false	false	0
1132	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1133	"trim"	"trim"	"str"	0	1	false	false	false	0
1134	"trim"	"trim"	"str"	0	1	false	false	false	0
1135	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1136	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1137	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1138	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1139	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1140	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1141	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1142	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1143	"insert"	"insert"	"str"	0	1	false	false	false	0
1144	"replace"	"replace"	"str"	0	1	false	false	false	0
1145	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1146	"space"	"space"	"str"	0	1	false	false	false	0
1147	"char_length"	"length"	"str"	0	1	false	false	false	0
1148	"character_length"	"length"	"str"	0	1	false	false	false	0
1149	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1150	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1151	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1152	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1153	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1154	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1155	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1156	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1157	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1158	"index"	"index"	"calc"	0	1	false	false	false	0
1159	"index"	"index"	"calc"	0	1	false	false	false	0
1160	"index"	"index"	"calc"	0	1	false	false	false	0
1161	"strings"	"strings"	"calc"	0	1	false	false	false	0
1162	"locate"	"locate"	"str"	0	1	false	false	false	0
1163	"locate"	"locate"	"str"	0	1	false	false	false	0
1164	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1165	"substring"	"substring"	"str"	0	1	false	false	false	0
1166	"substring"	"substring"	"str"	0	1	false	false	false	0
1167	"like"	"like"	"algebra"	0	1	false	false	false	0
1168	"like"	"like"	"algebra"	0	1	false	false	false	0
1169	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1170	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1171	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1172	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1173	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1174	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1175	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1176	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1177	"concat"	"+"	"calc"	0	1	false	false	false	0
1178	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1179	"code"	"unicode"	"str"	0	1	false	false	false	0
1180	"length"	"stringlength"	"str"	0	1	false	false	false	0
1181	"right"	"stringright"	"str"	0	1	false	false	false	0
1182	"left"	"stringleft"	"str"	0	1	false	false	false	0
1183	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1184	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1185	"lower"	"toLower"	"str"	0	1	false	false	false	0
1186	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1187	"trim"	"trim"	"str"	0	1	false	false	false	0
1188	"trim"	"trim"	"str"	0	1	false	false	false	0
1189	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1190	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1191	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1192	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1193	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1194	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1195	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1196	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1197	"insert"	"insert"	"str"	0	1	false	false	false	0
1198	"replace"	"replace"	"str"	0	1	false	false	false	0
1199	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1200	"space"	"space"	"str"	0	1	false	false	false	0
1201	"char_length"	"length"	"str"	0	1	false	false	false	0
1202	"character_length"	"length"	"str"	0	1	false	false	false	0
1203	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1204	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1205	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1206	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1207	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1208	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1209	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1210	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1211	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1212	"index"	"index"	"calc"	0	1	false	false	false	0
1213	"index"	"index"	"calc"	0	1	false	false	false	0
1214	"index"	"index"	"calc"	0	1	false	false	false	0
1215	"strings"	"strings"	"calc"	0	1	false	false	false	0
1216	"locate"	"locate"	"str"	0	1	false	false	false	0
1217	"locate"	"locate"	"str"	0	1	false	false	false	0
1218	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1219	"substring"	"substring"	"str"	0	1	false	false	false	0
1220	"substring"	"substring"	"str"	0	1	false	false	false	0
1221	"like"	"like"	"algebra"	0	1	false	false	false	0
1222	"like"	"like"	"algebra"	0	1	false	false	false	0
1223	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1224	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1225	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1226	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1227	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1228	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1229	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1230	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1231	"concat"	"+"	"calc"	0	1	false	false	false	0
1232	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1233	"code"	"unicode"	"str"	0	1	false	false	false	0
1234	"length"	"stringlength"	"str"	0	1	false	false	false	0
1235	"right"	"stringright"	"str"	0	1	false	false	false	0
1236	"left"	"stringleft"	"str"	0	1	false	false	false	0
1237	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1238	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1239	"lower"	"toLower"	"str"	0	1	false	false	false	0
1240	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1241	"trim"	"trim"	"str"	0	1	false	false	false	0
1242	"trim"	"trim"	"str"	0	1	false	false	false	0
1243	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1244	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1245	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1246	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1247	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1248	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1249	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1250	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1251	"insert"	"insert"	"str"	0	1	false	false	false	0
1252	"replace"	"replace"	"str"	0	1	false	false	false	0
1253	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1254	"space"	"space"	"str"	0	1	false	false	false	0
1255	"char_length"	"length"	"str"	0	1	false	false	false	0
1256	"character_length"	"length"	"str"	0	1	false	false	false	0
1257	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1258	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1259	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1260	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1261	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1262	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1263	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1264	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1265	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1266	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1267	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
29	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
41	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
42	"exist"	"exist"	"aggr"	0	3	false	false	false	0
43	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
48	"min"	"min"	"aggr"	0	3	false	false	false	0
49	"max"	"max"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"sum"	"sum"	"aggr"	0	3	false	false	false	0
61	"sum"	"sum"	"aggr"	0	3	false	false	false	0
62	"sum"	"sum"	"aggr"	0	3	false	false	false	0
63	"sum"	"sum"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
68	"prod"	"prod"	"aggr"	0	3	false	false	false	0
69	"prod"	"prod"	"aggr"	0	3	false	false	false	0
70	"prod"	"prod"	"aggr"	0	3	false	false	false	0
71	"prod"	"prod"	"aggr"	0	3	false	false	false	0
72	"prod"	"prod"	"aggr"	0	3	false	false	false	0
73	"prod"	"prod"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"prod"	"prod"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"prod"	"prod"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"sum"	"sum"	"aggr"	0	3	false	false	false	0
94	"avg"	"avg"	"aggr"	0	3	false	false	false	0
95	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
96	"count"	"count"	"aggr"	0	3	false	false	false	0
5708	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5711	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5717	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5737	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5742	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5747	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5751	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5755	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5759	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5763	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5766	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5770	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5774	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5778	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5782	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5786	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5790	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5794	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5798	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5802	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5806	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5810	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5814	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5818	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5822	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5829	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5835	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5840	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5845	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5850	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5855	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5860	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5866	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5870	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5874	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5878	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5883	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5887	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5891	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5895	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5899	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5903	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5908	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5913	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5918	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5923	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5933	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5983	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5985	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5987	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5990	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5992	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
6022	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6026	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6030	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6034	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6038	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
6042	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
6046	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6050	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6055	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6060	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6065	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6070	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6075	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6080	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6085	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6090	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6095	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6100	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6105	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6110	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6115	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6120	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6125	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6130	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6135	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6139	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6155	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6158	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6162	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6165	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6169	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6172	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6179	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6184	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6190	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6196	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6201	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6206	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6210	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6214	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6218	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6222	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6225	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6235	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6243	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6256	"malfunctions"	"create function sys.malfunctions()\n\treturns table(""signature"" string, ""address"" string, ""comment"" string)\n\texternal name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
6261	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6265	"flush_log"	"-- enqueue a flush log, ie as soon as no transactions are active \n-- flush the log and cleanup the used storage\ncreate procedure sys.flush_log ()\n\texternal name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6267	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6287	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6290	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6293	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6296	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6299	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6302	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6305	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6317	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6319	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6323	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6327	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6331	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6335	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6339	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6343	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6347	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6351	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6355	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6359	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6363	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6367	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6371	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6375	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6379	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6383	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6387	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6391	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6395	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6399	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6403	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6407	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6411	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6415	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6419	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6423	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6427	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6431	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6435	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6439	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6443	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6447	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6451	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6455	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6459	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6463	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6467	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6471	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6475	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6479	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6483	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6487	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6491	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6495	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6499	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6503	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6507	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6511	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6515	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6519	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6523	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6528	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6533	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6538	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6543	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6548	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6553	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6558	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6563	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6568	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6573	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6578	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6583	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6588	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6593	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6598	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6603	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6608	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6613	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6617	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6621	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6625	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6629	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6633	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6638	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6656	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6660	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6665	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6670	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6675	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6680	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6685	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6690	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6695	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6700	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6705	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6710	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6714	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6718	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6722	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6727	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6731	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6735	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6739	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6743	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6747	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6751	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6755	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6760	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6765	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6770	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6775	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6780	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6785	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6790	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6796	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6801	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6807	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6811	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6815	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6820	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6825	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6829	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6834	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6839	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6844	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6851	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6848
6856	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6848
6861	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6848
6866	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6848
6871	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6848
6876	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6848
6880	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6848
6884	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6848
6888	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6848
6892	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6848
6896	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6848
6900	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6848
6904	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6848
6908	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6848
6912	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6848
6916	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6848
6920	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6848
6924	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6848
6928	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6848
6932	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6848
6936	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6848
6940	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6848
6944	"filter"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6848
6949	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6954	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6957	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6961	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6965	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6971	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	6969
6973	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	6969
6975	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	6969
6978	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	6969
6981	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	6969
7006	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7009	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7012	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7015	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7051	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7054	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7058	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7102	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7104	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7110	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7116	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7121	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7126	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7173	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7177	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7182	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7188	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7195	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7199	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7204	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7209	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7214	"fuse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7220	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7218
7225	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7218
7230	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7218
7234	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7218
7238	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7218
7243	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7218
7247	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7218
7251	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7218
7255	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7218
7258	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7218
7328	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7333	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7339	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7344	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7350	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7355	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7361	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7366	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7372	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7378	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7384	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7390	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7396	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7401	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6987	6988	0	"keywords_keyword_pkey"
6992	6996	0	"table_types_table_type_id_pkey"
6995	6996	0	"table_types_table_type_name_unique"
7000	7004	0	"dependency_types_dependency_type_id_pkey"
7003	7004	0	"dependency_types_dependency_type_name_unique"
7268	7269	0	"files_pkey_file_id"
7279	7282	0	"sq_pkey_sn_file_id"
7281	7282	1	"sq_fkey_file_id"
7298	7301	0	"rg_pkey_id_file_id"
7300	7301	1	"rg_fkey_file_id"
7310	7313	0	"pg_pkey_id_file_id"
7312	7313	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6986	6988	0	"keywords_keyword_pkey"	-1	-1
6991	6996	0	"table_types_table_type_id_pkey"	-1	-1
6994	6996	1	"table_types_table_type_name_unique"	-1	-1
6999	7004	0	"dependency_types_dependency_type_id_pkey"	-1	-1
7002	7004	1	"dependency_types_dependency_type_name_unique"	-1	-1
7267	7269	0	"files_pkey_file_id"	-1	-1
7278	7282	0	"sq_pkey_sn_file_id"	-1	-1
7280	7282	2	"sq_fkey_file_id"	7267	514
7297	7301	0	"rg_pkey_id_file_id"	-1	-1
7299	7301	2	"rg_fkey_file_id"	7267	514
7309	7313	0	"pg_pkey_id_file_id"	-1	-1
7311	7313	2	"pg_fkey_file_id"	7267	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6987	"keyword"	0
6986	"keyword"	0
6992	"table_type_id"	0
6995	"table_type_name"	0
6991	"table_type_id"	0
6994	"table_type_name"	0
7000	"dependency_type_id"	0
7003	"dependency_type_name"	0
6999	"dependency_type_id"	0
7002	"dependency_type_name"	0
7268	"file_id"	0
7267	"file_id"	0
7279	"sn"	0
7279	"file_id"	1
7281	"file_id"	0
7278	"sn"	0
7278	"file_id"	1
7280	"file_id"	0
7298	"id"	0
7298	"file_id"	1
7300	"file_id"	0
7297	"id"	0
7297	"file_id"	1
7299	"file_id"	0
7310	"id"	0
7310	"file_id"	1
7312	"file_id"	0
7309	"id"	0
7309	"file_id"	1
7311	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5687	1	1	0	0
5697	1	1	0	0
5723	1	1	0	0
5726	1	1	0	0
5730	1	1	0	0
7408	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6848	"json"	3	3	true
6969	"profiler"	3	3	true
7218	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1544 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
44
45
46
47
50
51
52
74
75
76
77
78
79
80
81
82
83
84
85
86
87
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
29
41
42
43
48
49
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
88
89
90
91
92
93
94
95
96
5708
5711
5717
5737
5742
5747
5751
5755
5759
5763
5766
5770
5774
5778
5782
5786
5790
5794
5798
5802
5806
5810
5814
5818
5822
5829
5835
5840
5845
5850
5855
5860
5866
5870
5874
5878
5883
5887
5891
5895
5899
5903
5908
5913
5918
5923
5933
5983
5985
5987
5990
5992
6022
6026
6030
6034
6038
6042
6046
6050
6055
6060
6065
6070
6075
6080
6085
6090
6095
6100
6105
6110
6115
6120
6125
6130
6135
6139
6155
6158
6162
6165
6169
6172
6179
6184
6190
6196
6201
6206
6210
6214
6218
6222
6225
6235
6243
6256
6261
6265
6267
6287
6290
6293
6296
6299
6302
6305
6317
6319
6323
6327
6331
6335
6339
6343
6347
6351
6355
6359
6363
6367
6371
6375
6379
6383
6387
6391
6395
6399
6403
6407
6411
6415
6419
6423
6427
6431
6435
6439
6443
6447
6451
6455
6459
6463
6467
6471
6475
6479
6483
6487
6491
6495
6499
6503
6507
6511
6515
6519
6523
6528
6533
6538
6543
6548
6553
6558
6563
6568
6573
6578
6583
6588
6593
6598
6603
6608
6613
6617
6621
6625
6629
6633
6638
6656
6660
6665
6670
6675
6680
6685
6690
6695
6700
6705
6710
6714
6718
6722
6727
6731
6735
6739
6743
6747
6751
6755
6760
6765
6770
6775
6780
6785
6790
6796
6801
6807
6811
6815
6820
6825
6829
6834
6839
6844
6851
6856
6861
6866
6871
6876
6880
6884
6888
6892
6896
6900
6904
6908
6912
6916
6920
6924
6928
6932
6936
6940
6944
6949
6954
6957
6961
6965
6971
6973
6975
6978
6981
7006
7009
7012
7015
7051
7054
7058
7102
7104
7110
7116
7121
7126
7173
7177
7182
7188
7195
7199
7204
7209
7214
7220
7225
7230
7234
7238
7243
7247
7251
7255
7258
7328
7333
7339
7344
7350
7355
7361
7366
7372
7378
7384
7390
7396
7401
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 46 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"hge"	"hugeint"	128	1	2	7	0
14	"bte"	"decimal"	2	1	10	10	0
15	"sht"	"decimal"	4	1	10	10	0
16	"int"	"decimal"	9	1	10	10	0
17	"lng"	"decimal"	18	1	10	10	0
18	"hge"	"decimal"	39	1	10	10	0
19	"flt"	"real"	24	2	2	11	0
20	"dbl"	"double"	53	2	2	11	0
21	"int"	"month_interval"	32	0	2	8	0
22	"lng"	"sec_interval"	13	1	10	9	0
23	"daytime"	"time"	7	0	0	12	0
24	"daytime"	"timetz"	7	1	0	12	0
25	"date"	"date"	0	0	0	13	0
26	"timestamp"	"timestamp"	7	0	0	14	0
27	"timestamp"	"timestamptz"	7	1	0	14	0
28	"sqlblob"	"blob"	0	0	0	5	0
5764	"url"	"url"	0	0	0	15	2000
5864	"inet"	"inet"	0	0	0	15	2000
6642	"wkb"	"point"	0	0	0	15	2000
6643	"wkb"	"curve"	0	0	0	15	2000
6644	"wkb"	"linestring"	0	0	0	15	2000
6645	"wkb"	"surface"	0	0	0	15	2000
6646	"wkb"	"polygon"	0	0	0	15	2000
6647	"wkb"	"multipoint"	0	0	0	15	2000
6648	"wkb"	"multicurve"	0	0	0	15	2000
6649	"wkb"	"multilinestring"	0	0	0	15	2000
6650	"wkb"	"multisurface"	0	0	0	15	2000
6651	"wkb"	"multipolygon"	0	0	0	15	2000
6652	"wkb"	"geometry"	0	0	0	15	2000
6653	"wkb"	"geomcollection"	0	0	0	15	2000
6654	"mbr"	"mbr"	0	0	0	15	2000
6849	"json"	"json"	0	0	0	15	2000
6952	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

