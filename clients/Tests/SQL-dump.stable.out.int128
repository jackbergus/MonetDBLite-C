stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.orderidx
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN,
	"orderidx"  BIGINT
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean,
	orderidx bigint
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean,
	orderidx bigint)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted, i.orderidx
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted, x.orderidx from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 364 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5598	"id"	"int"	32	0	5597	NULL	true	0	NULL
5599	"name"	"varchar"	1024	0	5597	NULL	true	1	NULL
5600	"schema_id"	"int"	32	0	5597	NULL	true	2	NULL
5601	"query"	"varchar"	2048	0	5597	NULL	true	3	NULL
5602	"type"	"smallint"	16	0	5597	NULL	true	4	NULL
5603	"system"	"boolean"	1	0	5597	NULL	true	5	NULL
5604	"commit_action"	"smallint"	16	0	5597	NULL	true	6	NULL
5605	"access"	"smallint"	16	0	5597	NULL	true	7	NULL
5606	"temporary"	"smallint"	16	0	5597	NULL	true	8	NULL
5608	"id"	"int"	32	0	5607	NULL	true	0	NULL
5609	"name"	"varchar"	1024	0	5607	NULL	true	1	NULL
5610	"type"	"varchar"	1024	0	5607	NULL	true	2	NULL
5611	"type_digits"	"int"	32	0	5607	NULL	true	3	NULL
5612	"type_scale"	"int"	32	0	5607	NULL	true	4	NULL
5613	"table_id"	"int"	32	0	5607	NULL	true	5	NULL
5614	"default"	"varchar"	2048	0	5607	NULL	true	6	NULL
5615	"null"	"boolean"	1	0	5607	NULL	true	7	NULL
5616	"number"	"int"	32	0	5607	NULL	true	8	NULL
5617	"storage"	"varchar"	2048	0	5607	NULL	true	9	NULL
5624	"name"	"varchar"	1024	0	5623	NULL	true	0	NULL
5625	"fullname"	"varchar"	2048	0	5623	NULL	true	1	NULL
5626	"default_schema"	"int"	9	0	5623	NULL	true	2	NULL
5630	"name"	"varchar"	1024	0	5629	NULL	true	0	NULL
5631	"fullname"	"varchar"	2024	0	5629	NULL	true	1	NULL
5632	"default_schema"	"int"	9	0	5629	NULL	true	2	NULL
5634	"login_id"	"int"	32	0	5633	NULL	true	0	NULL
5635	"role_id"	"int"	32	0	5633	NULL	true	1	NULL
5637	"id"	"int"	32	0	5636	NULL	true	0	NULL
5638	"name"	"varchar"	1024	0	5636	NULL	true	1	NULL
5639	"grantor"	"int"	32	0	5636	NULL	true	2	NULL
5641	"obj_id"	"int"	32	0	5640	NULL	true	0	NULL
5642	"auth_id"	"int"	32	0	5640	NULL	true	1	NULL
5643	"privileges"	"int"	32	0	5640	NULL	true	2	NULL
5644	"grantor"	"int"	32	0	5640	NULL	true	3	NULL
5645	"grantable"	"int"	32	0	5640	NULL	true	4	NULL
5854	"id"	"oid"	63	0	5862	NULL	true	0	NULL
5855	"owner"	"clob"	0	0	5862	NULL	true	1	NULL
5856	"defined"	"timestamp"	7	0	5862	NULL	true	2	NULL
5857	"query"	"clob"	0	0	5862	NULL	true	3	NULL
5858	"pipe"	"clob"	0	0	5862	NULL	true	4	NULL
5859	"plan"	"clob"	0	0	5862	NULL	true	5	NULL
5860	"mal"	"int"	32	0	5862	NULL	true	6	NULL
5861	"optimize"	"bigint"	64	0	5862	NULL	true	7	NULL
5864	"id"	"oid"	63	0	5873	NULL	true	0	NULL
5865	"start"	"timestamp"	7	0	5873	NULL	true	1	NULL
5866	"stop"	"timestamp"	7	0	5873	NULL	true	2	NULL
5867	"arguments"	"clob"	0	0	5873	NULL	true	3	NULL
5868	"tuples"	"wrd"	64	0	5873	NULL	true	4	NULL
5869	"run"	"bigint"	64	0	5873	NULL	true	5	NULL
5870	"ship"	"bigint"	64	0	5873	NULL	true	6	NULL
5871	"cpu"	"int"	32	0	5873	NULL	true	7	NULL
5872	"io"	"int"	32	0	5873	NULL	true	8	NULL
5875	"id"	"oid"	63	0	5891	NULL	true	0	NULL
5876	"owner"	"clob"	0	0	5891	NULL	true	1	NULL
5877	"defined"	"timestamp"	7	0	5891	NULL	true	2	NULL
5878	"query"	"clob"	0	0	5891	NULL	true	3	NULL
5879	"pipe"	"clob"	0	0	5891	NULL	true	4	NULL
5880	"plan"	"clob"	0	0	5891	NULL	true	5	NULL
5881	"mal"	"int"	32	0	5891	NULL	true	6	NULL
5882	"optimize"	"bigint"	64	0	5891	NULL	true	7	NULL
5883	"start"	"timestamp"	7	0	5891	NULL	true	8	NULL
5884	"stop"	"timestamp"	7	0	5891	NULL	true	9	NULL
5885	"arguments"	"clob"	0	0	5891	NULL	true	10	NULL
5886	"tuples"	"wrd"	64	0	5891	NULL	true	11	NULL
5887	"run"	"bigint"	64	0	5891	NULL	true	12	NULL
5888	"ship"	"bigint"	64	0	5891	NULL	true	13	NULL
5889	"cpu"	"int"	32	0	5891	NULL	true	14	NULL
5890	"io"	"int"	32	0	5891	NULL	true	15	NULL
5917	"event"	"int"	32	0	5930	NULL	true	0	NULL
5918	"clk"	"varchar"	20	0	5930	NULL	true	1	NULL
5919	"pc"	"varchar"	50	0	5930	NULL	true	2	NULL
5920	"thread"	"int"	32	0	5930	NULL	true	3	NULL
5921	"ticks"	"bigint"	64	0	5930	NULL	true	4	NULL
5922	"rrsmb"	"bigint"	64	0	5930	NULL	true	5	NULL
5923	"vmmb"	"bigint"	64	0	5930	NULL	true	6	NULL
5924	"reads"	"bigint"	64	0	5930	NULL	true	7	NULL
5925	"writes"	"bigint"	64	0	5930	NULL	true	8	NULL
5926	"minflt"	"bigint"	64	0	5930	NULL	true	9	NULL
5927	"majflt"	"bigint"	64	0	5930	NULL	true	10	NULL
5928	"nvcsw"	"bigint"	64	0	5930	NULL	true	11	NULL
5929	"stmt"	"clob"	0	0	5930	NULL	true	12	NULL
6069	"user"	"clob"	0	0	6075	NULL	true	0	NULL
6070	"login"	"timestamp"	7	0	6075	NULL	true	1	NULL
6071	"sessiontimeout"	"bigint"	64	0	6075	NULL	true	2	NULL
6072	"lastcommand"	"timestamp"	7	0	6075	NULL	true	3	NULL
6073	"querytimeout"	"bigint"	64	0	6075	NULL	true	4	NULL
6074	"active"	"boolean"	1	0	6075	NULL	true	5	NULL
6152	"name"	"clob"	0	0	6155	NULL	true	0	NULL
6153	"def"	"clob"	0	0	6155	NULL	true	1	NULL
6154	"status"	"clob"	0	0	6155	NULL	true	2	NULL
6161	"name"	"clob"	0	0	6163	NULL	true	0	NULL
6162	"value"	"clob"	0	0	6163	NULL	true	1	NULL
6195	"qtag"	"bigint"	64	0	6203	NULL	true	0	NULL
6196	"user"	"clob"	0	0	6203	NULL	true	1	NULL
6197	"started"	"timestamp"	7	0	6203	NULL	true	2	NULL
6198	"estimate"	"timestamp"	7	0	6203	NULL	true	3	NULL
6199	"progress"	"int"	32	0	6203	NULL	true	4	NULL
6200	"status"	"clob"	0	0	6203	NULL	true	5	NULL
6201	"tag"	"oid"	63	0	6203	NULL	true	6	NULL
6202	"query"	"clob"	0	0	6203	NULL	true	7	NULL
6229	"rowid"	"bigint"	64	0	6233	NULL	true	0	NULL
6230	"fldid"	"int"	32	0	6233	NULL	true	1	NULL
6231	"message"	"clob"	0	0	6233	NULL	true	2	NULL
6232	"input"	"clob"	0	0	6233	NULL	true	3	NULL
6888	"keyword"	"varchar"	40	0	6891	NULL	false	0	NULL
6893	"table_type_id"	"smallint"	16	0	6899	NULL	false	0	NULL
6896	"table_type_name"	"varchar"	25	0	6899	NULL	false	1	NULL
6901	"dependency_type_id"	"smallint"	16	0	6907	NULL	false	0	NULL
6904	"dependency_type_name"	"varchar"	15	0	6907	NULL	false	1	NULL
6922	"file_id"	"int"	32	0	6924	NULL	true	0	NULL
6923	"location"	"char"	256	0	6924	NULL	true	1	NULL
6926	"dim_id"	"int"	32	0	6930	NULL	true	0	NULL
6927	"file_id"	"int"	32	0	6930	NULL	true	1	NULL
6928	"name"	"varchar"	64	0	6930	NULL	true	2	NULL
6929	"length"	"int"	32	0	6930	NULL	true	3	NULL
6932	"var_id"	"int"	32	0	6938	NULL	true	0	NULL
6933	"file_id"	"int"	32	0	6938	NULL	true	1	NULL
6934	"name"	"varchar"	64	0	6938	NULL	true	2	NULL
6935	"vartype"	"varchar"	64	0	6938	NULL	true	3	NULL
6936	"ndim"	"int"	32	0	6938	NULL	true	4	NULL
6937	"coord_dim_id"	"int"	32	0	6938	NULL	true	5	NULL
6940	"var_id"	"int"	32	0	6944	NULL	true	0	NULL
6941	"dim_id"	"int"	32	0	6944	NULL	true	1	NULL
6942	"file_id"	"int"	32	0	6944	NULL	true	2	NULL
6943	"dimpos"	"int"	32	0	6944	NULL	true	3	NULL
6946	"obj_name"	"varchar"	256	0	6952	NULL	true	0	NULL
6947	"att_name"	"varchar"	256	0	6952	NULL	true	1	NULL
6948	"att_type"	"varchar"	64	0	6952	NULL	true	2	NULL
6949	"value"	"clob"	0	0	6952	NULL	true	3	NULL
6950	"file_id"	"int"	32	0	6952	NULL	true	4	NULL
6951	"gr_name"	"varchar"	256	0	6952	NULL	true	5	NULL
6978	"schema"	"clob"	0	0	6993	NULL	true	0	NULL
6979	"table"	"clob"	0	0	6993	NULL	true	1	NULL
6980	"column"	"clob"	0	0	6993	NULL	true	2	NULL
6981	"type"	"clob"	0	0	6993	NULL	true	3	NULL
6982	"mode"	"clob"	0	0	6993	NULL	true	4	NULL
6983	"location"	"clob"	0	0	6993	NULL	true	5	NULL
6984	"count"	"bigint"	64	0	6993	NULL	true	6	NULL
6985	"typewidth"	"int"	32	0	6993	NULL	true	7	NULL
6986	"columnsize"	"bigint"	64	0	6993	NULL	true	8	NULL
6987	"heapsize"	"bigint"	64	0	6993	NULL	true	9	NULL
6988	"hashes"	"bigint"	64	0	6993	NULL	true	10	NULL
6989	"phash"	"boolean"	1	0	6993	NULL	true	11	NULL
6990	"imprints"	"bigint"	64	0	6993	NULL	true	12	NULL
6991	"sorted"	"boolean"	1	0	6993	NULL	true	13	NULL
6992	"orderidx"	"bigint"	64	0	6993	NULL	true	14	NULL
6995	"schema"	"clob"	0	0	7006	NULL	true	0	NULL
6996	"table"	"clob"	0	0	7006	NULL	true	1	NULL
6997	"column"	"clob"	0	0	7006	NULL	true	2	NULL
6998	"type"	"clob"	0	0	7006	NULL	true	3	NULL
6999	"typewidth"	"int"	32	0	7006	NULL	true	4	NULL
7000	"count"	"bigint"	64	0	7006	NULL	true	5	NULL
7001	"distinct"	"bigint"	64	0	7006	NULL	true	6	NULL
7002	"atomwidth"	"int"	32	0	7006	NULL	true	7	NULL
7003	"reference"	"boolean"	1	0	7006	NULL	true	8	NULL
7004	"sorted"	"boolean"	1	0	7006	NULL	true	9	NULL
7005	"orderidx"	"bigint"	64	0	7006	NULL	true	10	NULL
7045	"schema"	"clob"	0	0	7056	NULL	true	0	NULL
7046	"table"	"clob"	0	0	7056	NULL	true	1	NULL
7047	"column"	"clob"	0	0	7056	NULL	true	2	NULL
7048	"type"	"clob"	0	0	7056	NULL	true	3	NULL
7049	"count"	"bigint"	64	0	7056	NULL	true	4	NULL
7050	"columnsize"	"bigint"	64	0	7056	NULL	true	5	NULL
7051	"heapsize"	"bigint"	64	0	7056	NULL	true	6	NULL
7052	"hashes"	"bigint"	64	0	7056	NULL	true	7	NULL
7053	"imprints"	"bigint"	64	0	7056	NULL	true	8	NULL
7054	"sorted"	"boolean"	1	0	7056	NULL	true	9	NULL
7055	"orderidx"	"bigint"	64	0	7056	NULL	true	10	NULL
7058	"schema"	"clob"	0	0	7066	NULL	true	0	NULL
7059	"table"	"clob"	0	0	7066	NULL	true	1	NULL
7060	"count"	"bigint"	64	0	7066	NULL	true	2	NULL
7061	"columnsize"	"hugeint"	128	0	7066	NULL	true	3	NULL
7062	"heapsize"	"hugeint"	128	0	7066	NULL	true	4	NULL
7063	"hashes"	"hugeint"	128	0	7066	NULL	true	5	NULL
7064	"imprints"	"hugeint"	128	0	7066	NULL	true	6	NULL
7065	"auxiliary"	"hugeint"	128	0	7066	NULL	true	7	NULL
7068	"column_id"	"int"	32	0	7079	NULL	true	0	NULL
7069	"type"	"clob"	0	0	7079	NULL	true	1	NULL
7070	"width"	"int"	32	0	7079	NULL	true	2	NULL
7071	"stamp"	"timestamp"	7	0	7079	NULL	true	3	NULL
7072	"sample"	"bigint"	64	0	7079	NULL	true	4	NULL
7073	"count"	"bigint"	64	0	7079	NULL	true	5	NULL
7074	"unique"	"bigint"	64	0	7079	NULL	true	6	NULL
7075	"nils"	"bigint"	64	0	7079	NULL	true	7	NULL
7076	"minval"	"clob"	0	0	7079	NULL	true	8	NULL
7077	"maxval"	"clob"	0	0	7079	NULL	true	9	NULL
7078	"sorted"	"boolean"	1	0	7079	NULL	true	10	NULL
7169	"file_id"	"bigint"	64	0	7177	NULL	false	0	NULL
7170	"file_location"	"clob"	0	0	7177	NULL	false	1	NULL
7171	"dbschema"	"smallint"	16	0	7177	NULL	false	2	NULL
7172	"format_version"	"varchar"	7	0	7177	NULL	true	3	NULL
7173	"sorting_order"	"varchar"	10	0	7177	NULL	true	4	NULL
7174	"comments"	"clob"	0	0	7177	NULL	true	5	NULL
7179	"sn"	"clob"	0	0	7190	NULL	false	0	NULL
7180	"file_id"	"bigint"	64	0	7190	NULL	false	1	NULL
7181	"ln"	"int"	32	0	7190	NULL	true	2	NULL
7182	"as"	"int"	32	0	7190	NULL	true	3	NULL
7183	"m5"	"clob"	0	0	7190	NULL	true	4	NULL
7184	"sp"	"clob"	0	0	7190	NULL	true	5	NULL
7185	"ur"	"clob"	0	0	7190	NULL	true	6	NULL
7192	"id"	"clob"	0	0	7209	NULL	false	0	NULL
7193	"file_id"	"bigint"	64	0	7209	NULL	false	1	NULL
7194	"cn"	"clob"	0	0	7209	NULL	true	2	NULL
7195	"ds"	"clob"	0	0	7209	NULL	true	3	NULL
7196	"dt"	"timestamp"	7	0	7209	NULL	true	4	NULL
7197	"fo"	"clob"	0	0	7209	NULL	true	5	NULL
7198	"ks"	"clob"	0	0	7209	NULL	true	6	NULL
7199	"lb"	"clob"	0	0	7209	NULL	true	7	NULL
7200	"pg"	"clob"	0	0	7209	NULL	true	8	NULL
7201	"pi"	"int"	32	0	7209	NULL	true	9	NULL
7202	"pl"	"clob"	0	0	7209	NULL	true	10	NULL
7203	"pu"	"clob"	0	0	7209	NULL	true	11	NULL
7204	"sm"	"clob"	0	0	7209	NULL	true	12	NULL
7211	"id"	"clob"	0	0	7221	NULL	false	0	NULL
7212	"file_id"	"bigint"	64	0	7221	NULL	false	1	NULL
7213	"pn"	"clob"	0	0	7221	NULL	true	2	NULL
7214	"cl"	"clob"	0	0	7221	NULL	true	3	NULL
7215	"pp"	"clob"	0	0	7221	NULL	true	4	NULL
7216	"vn"	"clob"	0	0	7221	NULL	true	5	NULL
7223	"qname"	"clob"	0	0	7234	NULL	false	0	NULL
7224	"flag"	"smallint"	16	0	7234	NULL	false	1	NULL
7225	"rname"	"clob"	0	0	7234	NULL	false	2	NULL
7226	"pos"	"int"	32	0	7234	NULL	false	3	NULL
7227	"mapq"	"smallint"	16	0	7234	NULL	false	4	NULL
7228	"cigar"	"clob"	0	0	7234	NULL	false	5	NULL
7229	"rnext"	"clob"	0	0	7234	NULL	false	6	NULL
7230	"pnext"	"int"	32	0	7234	NULL	false	7	NULL
7231	"tlen"	"int"	32	0	7234	NULL	false	8	NULL
7232	"seq"	"clob"	0	0	7234	NULL	false	9	NULL
7233	"qual"	"clob"	0	0	7234	NULL	false	10	NULL
7315	"function_id"	"int"	32	0	7316	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5597	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5607	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5623	"db_user_info"	2000	NULL	0	true	0	0
5629	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5633	"user_role"	2000	NULL	0	true	0	0
5636	"auths"	2000	NULL	0	true	0	0
5640	"privileges"	2000	NULL	0	true	0	0
5862	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5873	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5891	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5930	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6075	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6155	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6163	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6203	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6233	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6891	"keywords"	2000	NULL	0	true	0	0
6899	"table_types"	2000	NULL	0	true	0	0
6907	"dependency_types"	2000	NULL	0	true	0	0
6924	"netcdf_files"	2000	NULL	0	true	0	0
6930	"netcdf_dims"	2000	NULL	0	true	0	0
6938	"netcdf_vars"	2000	NULL	0	true	0	0
6944	"netcdf_vardim"	2000	NULL	0	true	0	0
6952	"netcdf_attrs"	2000	NULL	0	true	0	0
6993	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7006	"storagemodelinput"	2000	NULL	0	true	0	0
7056	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7066	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7079	"statistics"	2000	NULL	0	true	0	0
7177	"files"	7126	NULL	0	true	0	0
7190	"sq"	7126	NULL	0	true	0	0
7209	"rg"	7126	NULL	0	true	0	0
7221	"pg"	7126	NULL	0	true	0	0
7234	"export"	7126	NULL	0	true	0	0
7316	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4224 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"oid"	63	0	0	0
2156	30	"arg_1"	"wrd"	64	0	1	1
2157	31	"res_0"	"oid"	63	0	0	0
2158	31	"arg_1"	"oid"	63	0	1	1
2159	32	"res_0"	"wrd"	64	0	0	0
2160	32	"arg_1"	"any"	0	0	1	1
2161	33	"res_0"	"wrd"	64	0	0	0
2162	33	"arg_1"	"wrd"	64	0	1	1
2163	33	"arg_2"	"int"	32	0	1	2
2164	33	"arg_3"	"any"	0	0	1	3
2165	34	"res_0"	"boolean"	1	0	0	0
2166	34	"arg_1"	"any"	0	0	1	1
2167	34	"arg_2"	"any"	0	0	1	2
2168	35	"res_0"	"boolean"	1	0	0	0
2169	35	"arg_1"	"any"	0	0	1	1
2170	35	"arg_2"	"any"	0	0	1	2
2171	36	"res_0"	"boolean"	1	0	0	0
2172	36	"arg_1"	"any"	0	0	1	1
2173	37	"res_0"	"boolean"	1	0	0	0
2174	37	"arg_1"	"any"	0	0	1	1
2175	37	"arg_2"	"any"	0	0	1	2
2176	38	"res_0"	"boolean"	1	0	0	0
2177	38	"arg_1"	"any"	0	0	1	1
2178	38	"arg_2"	"any"	0	0	1	2
2179	39	"res_0"	"boolean"	1	0	0	0
2180	39	"arg_1"	"any"	0	0	1	1
2181	39	"arg_2"	"any"	0	0	1	2
2182	40	"res_0"	"boolean"	1	0	0	0
2183	40	"arg_1"	"any"	0	0	1	1
2184	40	"arg_2"	"any"	0	0	1	2
2185	44	"res_0"	"boolean"	1	0	0	0
2186	44	"arg_1"	"any"	0	0	1	1
2187	44	"arg_2"	"any"	0	0	1	2
2188	45	"res_0"	"oid"	63	0	0	0
2189	45	"arg_1"	"any"	0	0	1	1
2190	46	"res_0"	"int"	32	0	0	0
2191	46	"arg_1"	"any"	0	0	1	1
2192	47	"res_0"	"oid"	63	0	0	0
2193	47	"arg_1"	"any"	0	0	1	1
2194	47	"arg_2"	"varchar"	0	0	1	2
2195	47	"arg_3"	"varchar"	0	0	1	3
2196	50	"res_0"	"any"	0	0	0	0
2197	50	"arg_1"	"any"	0	0	1	1
2198	50	"arg_2"	"any"	0	0	1	2
2199	51	"res_0"	"any"	0	0	0	0
2200	51	"arg_1"	"any"	0	0	1	1
2201	51	"arg_2"	"any"	0	0	1	2
2202	52	"res_0"	"any"	0	0	0	0
2203	52	"arg_1"	"boolean"	1	0	1	1
2204	52	"arg_2"	"any"	0	0	1	2
2205	52	"arg_3"	"any"	0	0	1	3
2206	74	"res_0"	"oid"	63	0	0	0
2207	74	"arg_1"	"oid"	63	0	1	1
2208	74	"arg_2"	"oid"	63	0	1	2
2209	75	"res_0"	"tinyint"	8	0	0	0
2210	75	"arg_1"	"tinyint"	8	0	1	1
2211	75	"arg_2"	"tinyint"	8	0	1	2
2212	76	"res_0"	"smallint"	16	0	0	0
2213	76	"arg_1"	"smallint"	16	0	1	1
2214	76	"arg_2"	"smallint"	16	0	1	2
2215	77	"res_0"	"int"	32	0	0	0
2216	77	"arg_1"	"int"	32	0	1	1
2217	77	"arg_2"	"int"	32	0	1	2
2218	78	"res_0"	"bigint"	64	0	0	0
2219	78	"arg_1"	"bigint"	64	0	1	1
2220	78	"arg_2"	"bigint"	64	0	1	2
2221	79	"res_0"	"wrd"	64	0	0	0
2222	79	"arg_1"	"wrd"	64	0	1	1
2223	79	"arg_2"	"wrd"	64	0	1	2
2224	80	"res_0"	"hugeint"	128	0	0	0
2225	80	"arg_1"	"hugeint"	128	0	1	1
2226	80	"arg_2"	"hugeint"	128	0	1	2
2227	81	"res_0"	"decimal"	2	0	0	0
2228	81	"arg_1"	"decimal"	2	0	1	1
2229	81	"arg_2"	"decimal"	2	0	1	2
2230	82	"res_0"	"decimal"	4	0	0	0
2231	82	"arg_1"	"decimal"	4	0	1	1
2232	82	"arg_2"	"decimal"	4	0	1	2
2233	83	"res_0"	"decimal"	9	0	0	0
2234	83	"arg_1"	"decimal"	9	0	1	1
2235	83	"arg_2"	"decimal"	9	0	1	2
2236	84	"res_0"	"decimal"	18	0	0	0
2237	84	"arg_1"	"decimal"	18	0	1	1
2238	84	"arg_2"	"decimal"	18	0	1	2
2239	85	"res_0"	"decimal"	39	0	0	0
2240	85	"arg_1"	"decimal"	39	0	1	1
2241	85	"arg_2"	"decimal"	39	0	1	2
2242	86	"res_0"	"real"	24	0	0	0
2243	86	"arg_1"	"real"	24	0	1	1
2244	86	"arg_2"	"real"	24	0	1	2
2245	87	"res_0"	"double"	53	0	0	0
2246	87	"arg_1"	"double"	53	0	1	1
2247	87	"arg_2"	"double"	53	0	1	2
2248	97	"res_0"	"boolean"	1	0	0	0
2249	97	"arg_1"	"any"	0	0	1	1
2250	98	"res_0"	"boolean"	1	0	0	0
2251	98	"arg_1"	"boolean"	1	0	1	1
2252	98	"arg_2"	"any"	0	0	1	2
2253	99	"res_0"	"int"	32	0	0	0
2254	99	"arg_1"	"any"	0	0	1	1
2255	99	"arg_2"	"boolean"	1	0	1	2
2256	99	"arg_3"	"boolean"	1	0	1	3
2257	100	"res_0"	"int"	32	0	0	0
2258	100	"arg_1"	"any"	0	0	1	1
2259	100	"arg_2"	"boolean"	1	0	1	2
2260	100	"arg_3"	"boolean"	1	0	1	3
2261	101	"res_0"	"int"	32	0	0	0
2262	101	"arg_1"	"any"	0	0	1	1
2263	101	"arg_2"	"boolean"	1	0	1	2
2264	101	"arg_3"	"boolean"	1	0	1	3
2265	102	"res_0"	"boolean"	1	0	0	0
2266	102	"arg_1"	"boolean"	1	0	1	1
2267	102	"arg_2"	"boolean"	1	0	1	2
2268	103	"res_0"	"boolean"	1	0	0	0
2269	103	"arg_1"	"boolean"	1	0	1	1
2270	103	"arg_2"	"boolean"	1	0	1	2
2271	104	"res_0"	"boolean"	1	0	0	0
2272	104	"arg_1"	"boolean"	1	0	1	1
2273	104	"arg_2"	"boolean"	1	0	1	2
2274	105	"res_0"	"boolean"	1	0	0	0
2275	105	"arg_1"	"boolean"	1	0	1	1
2276	106	"res_0"	"oid"	63	0	0	0
2277	106	"arg_1"	"oid"	63	0	1	1
2278	106	"arg_2"	"oid"	63	0	1	2
2279	107	"res_0"	"oid"	63	0	0	0
2280	107	"arg_1"	"oid"	63	0	1	1
2281	107	"arg_2"	"oid"	63	0	1	2
2282	108	"res_0"	"oid"	63	0	0	0
2283	108	"arg_1"	"oid"	63	0	1	1
2284	108	"arg_2"	"oid"	63	0	1	2
2285	109	"res_0"	"oid"	63	0	0	0
2286	109	"arg_1"	"oid"	63	0	1	1
2287	109	"arg_2"	"oid"	63	0	1	2
2288	110	"res_0"	"oid"	63	0	0	0
2289	110	"arg_1"	"oid"	63	0	1	1
2290	110	"arg_2"	"oid"	63	0	1	2
2291	111	"res_0"	"oid"	63	0	0	0
2292	111	"arg_1"	"oid"	63	0	1	1
2293	111	"arg_2"	"oid"	63	0	1	2
2294	112	"res_0"	"oid"	63	0	0	0
2295	112	"arg_1"	"oid"	63	0	1	1
2296	112	"arg_2"	"oid"	63	0	1	2
2297	113	"res_0"	"oid"	63	0	0	0
2298	113	"arg_1"	"oid"	63	0	1	1
2299	114	"res_0"	"oid"	63	0	0	0
2300	114	"arg_1"	"oid"	63	0	1	1
2301	114	"arg_2"	"int"	32	0	1	2
2302	115	"res_0"	"oid"	63	0	0	0
2303	115	"arg_1"	"oid"	63	0	1	1
2304	115	"arg_2"	"int"	32	0	1	2
2305	116	"res_0"	"oid"	63	0	0	0
2306	116	"arg_1"	"oid"	63	0	1	1
2307	117	"res_0"	"oid"	63	0	0	0
2308	117	"arg_1"	"oid"	63	0	1	1
2309	118	"res_0"	"tinyint"	8	0	0	0
2310	118	"arg_1"	"oid"	63	0	1	1
2311	119	"res_0"	"oid"	63	0	0	0
2312	119	"arg_1"	"oid"	63	0	1	1
2313	119	"arg_2"	"oid"	63	0	1	2
2314	120	"res_0"	"oid"	63	0	0	0
2315	120	"arg_1"	"oid"	63	0	1	1
2316	120	"arg_2"	"oid"	63	0	1	2
2317	121	"res_0"	"month_interval"	32	0	0	0
2318	121	"arg_1"	"month_interval"	32	0	1	1
2319	121	"arg_2"	"oid"	63	0	1	2
2320	122	"res_0"	"month_interval"	32	0	0	0
2321	122	"arg_1"	"month_interval"	32	0	1	1
2322	122	"arg_2"	"oid"	63	0	1	2
2323	123	"res_0"	"month_interval"	32	0	0	0
2324	123	"arg_1"	"month_interval"	32	0	1	1
2325	123	"arg_2"	"oid"	63	0	1	2
2326	124	"res_0"	"month_interval"	32	0	0	0
2327	124	"arg_1"	"month_interval"	32	0	1	1
2328	124	"arg_2"	"oid"	63	0	1	2
2329	125	"res_0"	"sec_interval"	13	0	0	0
2330	125	"arg_1"	"sec_interval"	13	0	1	1
2331	125	"arg_2"	"oid"	63	0	1	2
2332	126	"res_0"	"sec_interval"	13	0	0	0
2333	126	"arg_1"	"sec_interval"	13	0	1	1
2334	126	"arg_2"	"oid"	63	0	1	2
2335	127	"res_0"	"sec_interval"	13	0	0	0
2336	127	"arg_1"	"sec_interval"	13	0	1	1
2337	127	"arg_2"	"oid"	63	0	1	2
2338	128	"res_0"	"sec_interval"	13	0	0	0
2339	128	"arg_1"	"sec_interval"	13	0	1	1
2340	128	"arg_2"	"oid"	63	0	1	2
2341	129	"res_0"	"tinyint"	8	0	0	0
2342	129	"arg_1"	"tinyint"	8	0	1	1
2343	129	"arg_2"	"tinyint"	8	0	1	2
2344	130	"res_0"	"tinyint"	8	0	0	0
2345	130	"arg_1"	"tinyint"	8	0	1	1
2346	130	"arg_2"	"tinyint"	8	0	1	2
2347	131	"res_0"	"tinyint"	8	0	0	0
2348	131	"arg_1"	"tinyint"	8	0	1	1
2349	131	"arg_2"	"tinyint"	8	0	1	2
2350	132	"res_0"	"tinyint"	8	0	0	0
2351	132	"arg_1"	"tinyint"	8	0	1	1
2352	132	"arg_2"	"tinyint"	8	0	1	2
2353	133	"res_0"	"tinyint"	8	0	0	0
2354	133	"arg_1"	"tinyint"	8	0	1	1
2355	133	"arg_2"	"tinyint"	8	0	1	2
2356	134	"res_0"	"tinyint"	8	0	0	0
2357	134	"arg_1"	"tinyint"	8	0	1	1
2358	134	"arg_2"	"tinyint"	8	0	1	2
2359	135	"res_0"	"tinyint"	8	0	0	0
2360	135	"arg_1"	"tinyint"	8	0	1	1
2361	135	"arg_2"	"tinyint"	8	0	1	2
2362	136	"res_0"	"tinyint"	8	0	0	0
2363	136	"arg_1"	"tinyint"	8	0	1	1
2364	137	"res_0"	"tinyint"	8	0	0	0
2365	137	"arg_1"	"tinyint"	8	0	1	1
2366	137	"arg_2"	"int"	32	0	1	2
2367	138	"res_0"	"tinyint"	8	0	0	0
2368	138	"arg_1"	"tinyint"	8	0	1	1
2369	138	"arg_2"	"int"	32	0	1	2
2370	139	"res_0"	"tinyint"	8	0	0	0
2371	139	"arg_1"	"tinyint"	8	0	1	1
2372	140	"res_0"	"tinyint"	8	0	0	0
2373	140	"arg_1"	"tinyint"	8	0	1	1
2374	141	"res_0"	"tinyint"	8	0	0	0
2375	141	"arg_1"	"tinyint"	8	0	1	1
2376	142	"res_0"	"tinyint"	8	0	0	0
2377	142	"arg_1"	"tinyint"	8	0	1	1
2378	142	"arg_2"	"tinyint"	8	0	1	2
2379	143	"res_0"	"tinyint"	8	0	0	0
2380	143	"arg_1"	"tinyint"	8	0	1	1
2381	143	"arg_2"	"tinyint"	8	0	1	2
2382	144	"res_0"	"month_interval"	32	0	0	0
2383	144	"arg_1"	"month_interval"	32	0	1	1
2384	144	"arg_2"	"tinyint"	8	0	1	2
2385	145	"res_0"	"month_interval"	32	0	0	0
2386	145	"arg_1"	"month_interval"	32	0	1	1
2387	145	"arg_2"	"tinyint"	8	0	1	2
2388	146	"res_0"	"month_interval"	32	0	0	0
2389	146	"arg_1"	"month_interval"	32	0	1	1
2390	146	"arg_2"	"tinyint"	8	0	1	2
2391	147	"res_0"	"month_interval"	32	0	0	0
2392	147	"arg_1"	"month_interval"	32	0	1	1
2393	147	"arg_2"	"tinyint"	8	0	1	2
2394	148	"res_0"	"sec_interval"	13	0	0	0
2395	148	"arg_1"	"sec_interval"	13	0	1	1
2396	148	"arg_2"	"tinyint"	8	0	1	2
2397	149	"res_0"	"sec_interval"	13	0	0	0
2398	149	"arg_1"	"sec_interval"	13	0	1	1
2399	149	"arg_2"	"tinyint"	8	0	1	2
2400	150	"res_0"	"sec_interval"	13	0	0	0
2401	150	"arg_1"	"sec_interval"	13	0	1	1
2402	150	"arg_2"	"tinyint"	8	0	1	2
2403	151	"res_0"	"sec_interval"	13	0	0	0
2404	151	"arg_1"	"sec_interval"	13	0	1	1
2405	151	"arg_2"	"tinyint"	8	0	1	2
2406	152	"res_0"	"smallint"	16	0	0	0
2407	152	"arg_1"	"smallint"	16	0	1	1
2408	152	"arg_2"	"smallint"	16	0	1	2
2409	153	"res_0"	"smallint"	16	0	0	0
2410	153	"arg_1"	"smallint"	16	0	1	1
2411	153	"arg_2"	"smallint"	16	0	1	2
2412	154	"res_0"	"smallint"	16	0	0	0
2413	154	"arg_1"	"smallint"	16	0	1	1
2414	154	"arg_2"	"smallint"	16	0	1	2
2415	155	"res_0"	"smallint"	16	0	0	0
2416	155	"arg_1"	"smallint"	16	0	1	1
2417	155	"arg_2"	"smallint"	16	0	1	2
2418	156	"res_0"	"smallint"	16	0	0	0
2419	156	"arg_1"	"smallint"	16	0	1	1
2420	156	"arg_2"	"smallint"	16	0	1	2
2421	157	"res_0"	"smallint"	16	0	0	0
2422	157	"arg_1"	"smallint"	16	0	1	1
2423	157	"arg_2"	"smallint"	16	0	1	2
2424	158	"res_0"	"smallint"	16	0	0	0
2425	158	"arg_1"	"smallint"	16	0	1	1
2426	158	"arg_2"	"smallint"	16	0	1	2
2427	159	"res_0"	"smallint"	16	0	0	0
2428	159	"arg_1"	"smallint"	16	0	1	1
2429	160	"res_0"	"smallint"	16	0	0	0
2430	160	"arg_1"	"smallint"	16	0	1	1
2431	160	"arg_2"	"int"	32	0	1	2
2432	161	"res_0"	"smallint"	16	0	0	0
2433	161	"arg_1"	"smallint"	16	0	1	1
2434	161	"arg_2"	"int"	32	0	1	2
2435	162	"res_0"	"smallint"	16	0	0	0
2436	162	"arg_1"	"smallint"	16	0	1	1
2437	163	"res_0"	"smallint"	16	0	0	0
2438	163	"arg_1"	"smallint"	16	0	1	1
2439	164	"res_0"	"tinyint"	8	0	0	0
2440	164	"arg_1"	"smallint"	16	0	1	1
2441	165	"res_0"	"smallint"	16	0	0	0
2442	165	"arg_1"	"smallint"	16	0	1	1
2443	165	"arg_2"	"smallint"	16	0	1	2
2444	166	"res_0"	"smallint"	16	0	0	0
2445	166	"arg_1"	"smallint"	16	0	1	1
2446	166	"arg_2"	"smallint"	16	0	1	2
2447	167	"res_0"	"month_interval"	32	0	0	0
2448	167	"arg_1"	"month_interval"	32	0	1	1
2449	167	"arg_2"	"smallint"	16	0	1	2
2450	168	"res_0"	"month_interval"	32	0	0	0
2451	168	"arg_1"	"month_interval"	32	0	1	1
2452	168	"arg_2"	"smallint"	16	0	1	2
2453	169	"res_0"	"month_interval"	32	0	0	0
2454	169	"arg_1"	"month_interval"	32	0	1	1
2455	169	"arg_2"	"smallint"	16	0	1	2
2456	170	"res_0"	"month_interval"	32	0	0	0
2457	170	"arg_1"	"month_interval"	32	0	1	1
2458	170	"arg_2"	"smallint"	16	0	1	2
2459	171	"res_0"	"sec_interval"	13	0	0	0
2460	171	"arg_1"	"sec_interval"	13	0	1	1
2461	171	"arg_2"	"smallint"	16	0	1	2
2462	172	"res_0"	"sec_interval"	13	0	0	0
2463	172	"arg_1"	"sec_interval"	13	0	1	1
2464	172	"arg_2"	"smallint"	16	0	1	2
2465	173	"res_0"	"sec_interval"	13	0	0	0
2466	173	"arg_1"	"sec_interval"	13	0	1	1
2467	173	"arg_2"	"smallint"	16	0	1	2
2468	174	"res_0"	"sec_interval"	13	0	0	0
2469	174	"arg_1"	"sec_interval"	13	0	1	1
2470	174	"arg_2"	"smallint"	16	0	1	2
2471	175	"res_0"	"int"	32	0	0	0
2472	175	"arg_1"	"int"	32	0	1	1
2473	175	"arg_2"	"int"	32	0	1	2
2474	176	"res_0"	"int"	32	0	0	0
2475	176	"arg_1"	"int"	32	0	1	1
2476	176	"arg_2"	"int"	32	0	1	2
2477	177	"res_0"	"int"	32	0	0	0
2478	177	"arg_1"	"int"	32	0	1	1
2479	177	"arg_2"	"int"	32	0	1	2
2480	178	"res_0"	"int"	32	0	0	0
2481	178	"arg_1"	"int"	32	0	1	1
2482	178	"arg_2"	"int"	32	0	1	2
2483	179	"res_0"	"int"	32	0	0	0
2484	179	"arg_1"	"int"	32	0	1	1
2485	179	"arg_2"	"int"	32	0	1	2
2486	180	"res_0"	"int"	32	0	0	0
2487	180	"arg_1"	"int"	32	0	1	1
2488	180	"arg_2"	"int"	32	0	1	2
2489	181	"res_0"	"int"	32	0	0	0
2490	181	"arg_1"	"int"	32	0	1	1
2491	181	"arg_2"	"int"	32	0	1	2
2492	182	"res_0"	"int"	32	0	0	0
2493	182	"arg_1"	"int"	32	0	1	1
2494	183	"res_0"	"int"	32	0	0	0
2495	183	"arg_1"	"int"	32	0	1	1
2496	183	"arg_2"	"int"	32	0	1	2
2497	184	"res_0"	"int"	32	0	0	0
2498	184	"arg_1"	"int"	32	0	1	1
2499	184	"arg_2"	"int"	32	0	1	2
2500	185	"res_0"	"int"	32	0	0	0
2501	185	"arg_1"	"int"	32	0	1	1
2502	186	"res_0"	"int"	32	0	0	0
2503	186	"arg_1"	"int"	32	0	1	1
2504	187	"res_0"	"tinyint"	8	0	0	0
2505	187	"arg_1"	"int"	32	0	1	1
2506	188	"res_0"	"int"	32	0	0	0
2507	188	"arg_1"	"int"	32	0	1	1
2508	188	"arg_2"	"int"	32	0	1	2
2509	189	"res_0"	"int"	32	0	0	0
2510	189	"arg_1"	"int"	32	0	1	1
2511	189	"arg_2"	"int"	32	0	1	2
2512	190	"res_0"	"month_interval"	32	0	0	0
2513	190	"arg_1"	"month_interval"	32	0	1	1
2514	190	"arg_2"	"int"	32	0	1	2
2515	191	"res_0"	"month_interval"	32	0	0	0
2516	191	"arg_1"	"month_interval"	32	0	1	1
2517	191	"arg_2"	"int"	32	0	1	2
2518	192	"res_0"	"month_interval"	32	0	0	0
2519	192	"arg_1"	"month_interval"	32	0	1	1
2520	192	"arg_2"	"int"	32	0	1	2
2521	193	"res_0"	"month_interval"	32	0	0	0
2522	193	"arg_1"	"month_interval"	32	0	1	1
2523	193	"arg_2"	"int"	32	0	1	2
2524	194	"res_0"	"sec_interval"	13	0	0	0
2525	194	"arg_1"	"sec_interval"	13	0	1	1
2526	194	"arg_2"	"int"	32	0	1	2
2527	195	"res_0"	"sec_interval"	13	0	0	0
2528	195	"arg_1"	"sec_interval"	13	0	1	1
2529	195	"arg_2"	"int"	32	0	1	2
2530	196	"res_0"	"sec_interval"	13	0	0	0
2531	196	"arg_1"	"sec_interval"	13	0	1	1
2532	196	"arg_2"	"int"	32	0	1	2
2533	197	"res_0"	"sec_interval"	13	0	0	0
2534	197	"arg_1"	"sec_interval"	13	0	1	1
2535	197	"arg_2"	"int"	32	0	1	2
2536	198	"res_0"	"bigint"	64	0	0	0
2537	198	"arg_1"	"bigint"	64	0	1	1
2538	198	"arg_2"	"bigint"	64	0	1	2
2539	199	"res_0"	"bigint"	64	0	0	0
2540	199	"arg_1"	"bigint"	64	0	1	1
2541	199	"arg_2"	"bigint"	64	0	1	2
2542	200	"res_0"	"bigint"	64	0	0	0
2543	200	"arg_1"	"bigint"	64	0	1	1
2544	200	"arg_2"	"bigint"	64	0	1	2
2545	201	"res_0"	"bigint"	64	0	0	0
2546	201	"arg_1"	"bigint"	64	0	1	1
2547	201	"arg_2"	"bigint"	64	0	1	2
2548	202	"res_0"	"bigint"	64	0	0	0
2549	202	"arg_1"	"bigint"	64	0	1	1
2550	202	"arg_2"	"bigint"	64	0	1	2
2551	203	"res_0"	"bigint"	64	0	0	0
2552	203	"arg_1"	"bigint"	64	0	1	1
2553	203	"arg_2"	"bigint"	64	0	1	2
2554	204	"res_0"	"bigint"	64	0	0	0
2555	204	"arg_1"	"bigint"	64	0	1	1
2556	204	"arg_2"	"bigint"	64	0	1	2
2557	205	"res_0"	"bigint"	64	0	0	0
2558	205	"arg_1"	"bigint"	64	0	1	1
2559	206	"res_0"	"bigint"	64	0	0	0
2560	206	"arg_1"	"bigint"	64	0	1	1
2561	206	"arg_2"	"int"	32	0	1	2
2562	207	"res_0"	"bigint"	64	0	0	0
2563	207	"arg_1"	"bigint"	64	0	1	1
2564	207	"arg_2"	"int"	32	0	1	2
2565	208	"res_0"	"bigint"	64	0	0	0
2566	208	"arg_1"	"bigint"	64	0	1	1
2567	209	"res_0"	"bigint"	64	0	0	0
2568	209	"arg_1"	"bigint"	64	0	1	1
2569	210	"res_0"	"tinyint"	8	0	0	0
2570	210	"arg_1"	"bigint"	64	0	1	1
2571	211	"res_0"	"bigint"	64	0	0	0
2572	211	"arg_1"	"bigint"	64	0	1	1
2573	211	"arg_2"	"bigint"	64	0	1	2
2574	212	"res_0"	"bigint"	64	0	0	0
2575	212	"arg_1"	"bigint"	64	0	1	1
2576	212	"arg_2"	"bigint"	64	0	1	2
2577	213	"res_0"	"month_interval"	32	0	0	0
2578	213	"arg_1"	"month_interval"	32	0	1	1
2579	213	"arg_2"	"bigint"	64	0	1	2
2580	214	"res_0"	"month_interval"	32	0	0	0
2581	214	"arg_1"	"month_interval"	32	0	1	1
2582	214	"arg_2"	"bigint"	64	0	1	2
2583	215	"res_0"	"month_interval"	32	0	0	0
2584	215	"arg_1"	"month_interval"	32	0	1	1
2585	215	"arg_2"	"bigint"	64	0	1	2
2586	216	"res_0"	"month_interval"	32	0	0	0
2587	216	"arg_1"	"month_interval"	32	0	1	1
2588	216	"arg_2"	"bigint"	64	0	1	2
2589	217	"res_0"	"sec_interval"	13	0	0	0
2590	217	"arg_1"	"sec_interval"	13	0	1	1
2591	217	"arg_2"	"bigint"	64	0	1	2
2592	218	"res_0"	"sec_interval"	13	0	0	0
2593	218	"arg_1"	"sec_interval"	13	0	1	1
2594	218	"arg_2"	"bigint"	64	0	1	2
2595	219	"res_0"	"sec_interval"	13	0	0	0
2596	219	"arg_1"	"sec_interval"	13	0	1	1
2597	219	"arg_2"	"bigint"	64	0	1	2
2598	220	"res_0"	"sec_interval"	13	0	0	0
2599	220	"arg_1"	"sec_interval"	13	0	1	1
2600	220	"arg_2"	"bigint"	64	0	1	2
2601	221	"res_0"	"wrd"	64	0	0	0
2602	221	"arg_1"	"wrd"	64	0	1	1
2603	221	"arg_2"	"wrd"	64	0	1	2
2604	222	"res_0"	"wrd"	64	0	0	0
2605	222	"arg_1"	"wrd"	64	0	1	1
2606	222	"arg_2"	"wrd"	64	0	1	2
2607	223	"res_0"	"wrd"	64	0	0	0
2608	223	"arg_1"	"wrd"	64	0	1	1
2609	223	"arg_2"	"wrd"	64	0	1	2
2610	224	"res_0"	"wrd"	64	0	0	0
2611	224	"arg_1"	"wrd"	64	0	1	1
2612	224	"arg_2"	"wrd"	64	0	1	2
2613	225	"res_0"	"wrd"	64	0	0	0
2614	225	"arg_1"	"wrd"	64	0	1	1
2615	225	"arg_2"	"wrd"	64	0	1	2
2616	226	"res_0"	"wrd"	64	0	0	0
2617	226	"arg_1"	"wrd"	64	0	1	1
2618	226	"arg_2"	"wrd"	64	0	1	2
2619	227	"res_0"	"wrd"	64	0	0	0
2620	227	"arg_1"	"wrd"	64	0	1	1
2621	227	"arg_2"	"wrd"	64	0	1	2
2622	228	"res_0"	"wrd"	64	0	0	0
2623	228	"arg_1"	"wrd"	64	0	1	1
2624	229	"res_0"	"wrd"	64	0	0	0
2625	229	"arg_1"	"wrd"	64	0	1	1
2626	229	"arg_2"	"int"	32	0	1	2
2627	230	"res_0"	"wrd"	64	0	0	0
2628	230	"arg_1"	"wrd"	64	0	1	1
2629	230	"arg_2"	"int"	32	0	1	2
2630	231	"res_0"	"wrd"	64	0	0	0
2631	231	"arg_1"	"wrd"	64	0	1	1
2632	232	"res_0"	"wrd"	64	0	0	0
2633	232	"arg_1"	"wrd"	64	0	1	1
2634	233	"res_0"	"tinyint"	8	0	0	0
2635	233	"arg_1"	"wrd"	64	0	1	1
2636	234	"res_0"	"wrd"	64	0	0	0
2637	234	"arg_1"	"wrd"	64	0	1	1
2638	234	"arg_2"	"wrd"	64	0	1	2
2639	235	"res_0"	"wrd"	64	0	0	0
2640	235	"arg_1"	"wrd"	64	0	1	1
2641	235	"arg_2"	"wrd"	64	0	1	2
2642	236	"res_0"	"month_interval"	32	0	0	0
2643	236	"arg_1"	"month_interval"	32	0	1	1
2644	236	"arg_2"	"wrd"	64	0	1	2
2645	237	"res_0"	"month_interval"	32	0	0	0
2646	237	"arg_1"	"month_interval"	32	0	1	1
2647	237	"arg_2"	"wrd"	64	0	1	2
2648	238	"res_0"	"month_interval"	32	0	0	0
2649	238	"arg_1"	"month_interval"	32	0	1	1
2650	238	"arg_2"	"wrd"	64	0	1	2
2651	239	"res_0"	"month_interval"	32	0	0	0
2652	239	"arg_1"	"month_interval"	32	0	1	1
2653	239	"arg_2"	"wrd"	64	0	1	2
2654	240	"res_0"	"sec_interval"	13	0	0	0
2655	240	"arg_1"	"sec_interval"	13	0	1	1
2656	240	"arg_2"	"wrd"	64	0	1	2
2657	241	"res_0"	"sec_interval"	13	0	0	0
2658	241	"arg_1"	"sec_interval"	13	0	1	1
2659	241	"arg_2"	"wrd"	64	0	1	2
2660	242	"res_0"	"sec_interval"	13	0	0	0
2661	242	"arg_1"	"sec_interval"	13	0	1	1
2662	242	"arg_2"	"wrd"	64	0	1	2
2663	243	"res_0"	"sec_interval"	13	0	0	0
2664	243	"arg_1"	"sec_interval"	13	0	1	1
2665	243	"arg_2"	"wrd"	64	0	1	2
2666	244	"res_0"	"hugeint"	128	0	0	0
2667	244	"arg_1"	"hugeint"	128	0	1	1
2668	244	"arg_2"	"hugeint"	128	0	1	2
2669	245	"res_0"	"hugeint"	128	0	0	0
2670	245	"arg_1"	"hugeint"	128	0	1	1
2671	245	"arg_2"	"hugeint"	128	0	1	2
2672	246	"res_0"	"hugeint"	128	0	0	0
2673	246	"arg_1"	"hugeint"	128	0	1	1
2674	246	"arg_2"	"hugeint"	128	0	1	2
2675	247	"res_0"	"hugeint"	128	0	0	0
2676	247	"arg_1"	"hugeint"	128	0	1	1
2677	247	"arg_2"	"hugeint"	128	0	1	2
2678	248	"res_0"	"hugeint"	128	0	0	0
2679	248	"arg_1"	"hugeint"	128	0	1	1
2680	248	"arg_2"	"hugeint"	128	0	1	2
2681	249	"res_0"	"hugeint"	128	0	0	0
2682	249	"arg_1"	"hugeint"	128	0	1	1
2683	249	"arg_2"	"hugeint"	128	0	1	2
2684	250	"res_0"	"hugeint"	128	0	0	0
2685	250	"arg_1"	"hugeint"	128	0	1	1
2686	250	"arg_2"	"hugeint"	128	0	1	2
2687	251	"res_0"	"hugeint"	128	0	0	0
2688	251	"arg_1"	"hugeint"	128	0	1	1
2689	252	"res_0"	"hugeint"	128	0	0	0
2690	252	"arg_1"	"hugeint"	128	0	1	1
2691	252	"arg_2"	"int"	32	0	1	2
2692	253	"res_0"	"hugeint"	128	0	0	0
2693	253	"arg_1"	"hugeint"	128	0	1	1
2694	253	"arg_2"	"int"	32	0	1	2
2695	254	"res_0"	"hugeint"	128	0	0	0
2696	254	"arg_1"	"hugeint"	128	0	1	1
2697	255	"res_0"	"hugeint"	128	0	0	0
2698	255	"arg_1"	"hugeint"	128	0	1	1
2699	256	"res_0"	"tinyint"	8	0	0	0
2700	256	"arg_1"	"hugeint"	128	0	1	1
2701	257	"res_0"	"hugeint"	128	0	0	0
2702	257	"arg_1"	"hugeint"	128	0	1	1
2703	257	"arg_2"	"hugeint"	128	0	1	2
2704	258	"res_0"	"hugeint"	128	0	0	0
2705	258	"arg_1"	"hugeint"	128	0	1	1
2706	258	"arg_2"	"hugeint"	128	0	1	2
2707	259	"res_0"	"month_interval"	32	0	0	0
2708	259	"arg_1"	"month_interval"	32	0	1	1
2709	259	"arg_2"	"hugeint"	128	0	1	2
2710	260	"res_0"	"month_interval"	32	0	0	0
2711	260	"arg_1"	"month_interval"	32	0	1	1
2712	260	"arg_2"	"hugeint"	128	0	1	2
2713	261	"res_0"	"month_interval"	32	0	0	0
2714	261	"arg_1"	"month_interval"	32	0	1	1
2715	261	"arg_2"	"hugeint"	128	0	1	2
2716	262	"res_0"	"month_interval"	32	0	0	0
2717	262	"arg_1"	"month_interval"	32	0	1	1
2718	262	"arg_2"	"hugeint"	128	0	1	2
2719	263	"res_0"	"sec_interval"	13	0	0	0
2720	263	"arg_1"	"sec_interval"	13	0	1	1
2721	263	"arg_2"	"hugeint"	128	0	1	2
2722	264	"res_0"	"sec_interval"	13	0	0	0
2723	264	"arg_1"	"sec_interval"	13	0	1	1
2724	264	"arg_2"	"hugeint"	128	0	1	2
2725	265	"res_0"	"sec_interval"	13	0	0	0
2726	265	"arg_1"	"sec_interval"	13	0	1	1
2727	265	"arg_2"	"hugeint"	128	0	1	2
2728	266	"res_0"	"sec_interval"	13	0	0	0
2729	266	"arg_1"	"sec_interval"	13	0	1	1
2730	266	"arg_2"	"hugeint"	128	0	1	2
2731	267	"res_0"	"decimal"	2	0	0	0
2732	267	"arg_1"	"decimal"	2	0	1	1
2733	267	"arg_2"	"decimal"	2	0	1	2
2734	268	"res_0"	"decimal"	2	0	0	0
2735	268	"arg_1"	"decimal"	2	0	1	1
2736	268	"arg_2"	"decimal"	2	0	1	2
2737	269	"res_0"	"decimal"	2	0	0	0
2738	269	"arg_1"	"decimal"	2	0	1	1
2739	269	"arg_2"	"decimal"	2	0	1	2
2740	270	"res_0"	"decimal"	2	0	0	0
2741	270	"arg_1"	"decimal"	2	0	1	1
2742	270	"arg_2"	"decimal"	2	0	1	2
2743	271	"res_0"	"decimal"	2	0	0	0
2744	271	"arg_1"	"decimal"	2	0	1	1
2745	271	"arg_2"	"decimal"	2	0	1	2
2746	272	"res_0"	"decimal"	2	0	0	0
2747	272	"arg_1"	"decimal"	2	0	1	1
2748	272	"arg_2"	"decimal"	2	0	1	2
2749	273	"res_0"	"decimal"	2	0	0	0
2750	273	"arg_1"	"decimal"	2	0	1	1
2751	273	"arg_2"	"decimal"	2	0	1	2
2752	274	"res_0"	"decimal"	2	0	0	0
2753	274	"arg_1"	"decimal"	2	0	1	1
2754	275	"res_0"	"decimal"	2	0	0	0
2755	275	"arg_1"	"decimal"	2	0	1	1
2756	275	"arg_2"	"int"	32	0	1	2
2757	276	"res_0"	"decimal"	2	0	0	0
2758	276	"arg_1"	"decimal"	2	0	1	1
2759	276	"arg_2"	"int"	32	0	1	2
2760	277	"res_0"	"decimal"	2	0	0	0
2761	277	"arg_1"	"decimal"	2	0	1	1
2762	278	"res_0"	"decimal"	2	0	0	0
2763	278	"arg_1"	"decimal"	2	0	1	1
2764	279	"res_0"	"tinyint"	8	0	0	0
2765	279	"arg_1"	"decimal"	2	0	1	1
2766	280	"res_0"	"decimal"	2	0	0	0
2767	280	"arg_1"	"decimal"	2	0	1	1
2768	280	"arg_2"	"tinyint"	8	0	1	2
2769	281	"res_0"	"decimal"	2	0	0	0
2770	281	"arg_1"	"decimal"	2	0	1	1
2771	281	"arg_2"	"tinyint"	8	0	1	2
2772	282	"res_0"	"month_interval"	32	0	0	0
2773	282	"arg_1"	"month_interval"	32	0	1	1
2774	282	"arg_2"	"decimal"	2	0	1	2
2775	283	"res_0"	"month_interval"	32	0	0	0
2776	283	"arg_1"	"month_interval"	32	0	1	1
2777	283	"arg_2"	"decimal"	2	0	1	2
2778	284	"res_0"	"month_interval"	32	0	0	0
2779	284	"arg_1"	"month_interval"	32	0	1	1
2780	284	"arg_2"	"decimal"	2	0	1	2
2781	285	"res_0"	"month_interval"	32	0	0	0
2782	285	"arg_1"	"month_interval"	32	0	1	1
2783	285	"arg_2"	"decimal"	2	0	1	2
2784	286	"res_0"	"sec_interval"	13	0	0	0
2785	286	"arg_1"	"sec_interval"	13	0	1	1
2786	286	"arg_2"	"decimal"	2	0	1	2
2787	287	"res_0"	"sec_interval"	13	0	0	0
2788	287	"arg_1"	"sec_interval"	13	0	1	1
2789	287	"arg_2"	"decimal"	2	0	1	2
2790	288	"res_0"	"sec_interval"	13	0	0	0
2791	288	"arg_1"	"sec_interval"	13	0	1	1
2792	288	"arg_2"	"decimal"	2	0	1	2
2793	289	"res_0"	"sec_interval"	13	0	0	0
2794	289	"arg_1"	"sec_interval"	13	0	1	1
2795	289	"arg_2"	"decimal"	2	0	1	2
2796	290	"res_0"	"decimal"	4	0	0	0
2797	290	"arg_1"	"decimal"	4	0	1	1
2798	290	"arg_2"	"decimal"	4	0	1	2
2799	291	"res_0"	"decimal"	4	0	0	0
2800	291	"arg_1"	"decimal"	4	0	1	1
2801	291	"arg_2"	"decimal"	4	0	1	2
2802	292	"res_0"	"decimal"	4	0	0	0
2803	292	"arg_1"	"decimal"	4	0	1	1
2804	292	"arg_2"	"decimal"	4	0	1	2
2805	293	"res_0"	"decimal"	4	0	0	0
2806	293	"arg_1"	"decimal"	4	0	1	1
2807	293	"arg_2"	"decimal"	4	0	1	2
2808	294	"res_0"	"decimal"	4	0	0	0
2809	294	"arg_1"	"decimal"	4	0	1	1
2810	294	"arg_2"	"decimal"	4	0	1	2
2811	295	"res_0"	"decimal"	4	0	0	0
2812	295	"arg_1"	"decimal"	4	0	1	1
2813	295	"arg_2"	"decimal"	4	0	1	2
2814	296	"res_0"	"decimal"	4	0	0	0
2815	296	"arg_1"	"decimal"	4	0	1	1
2816	296	"arg_2"	"decimal"	4	0	1	2
2817	297	"res_0"	"decimal"	4	0	0	0
2818	297	"arg_1"	"decimal"	4	0	1	1
2819	298	"res_0"	"decimal"	4	0	0	0
2820	298	"arg_1"	"decimal"	4	0	1	1
2821	298	"arg_2"	"int"	32	0	1	2
2822	299	"res_0"	"decimal"	4	0	0	0
2823	299	"arg_1"	"decimal"	4	0	1	1
2824	299	"arg_2"	"int"	32	0	1	2
2825	300	"res_0"	"decimal"	4	0	0	0
2826	300	"arg_1"	"decimal"	4	0	1	1
2827	301	"res_0"	"decimal"	4	0	0	0
2828	301	"arg_1"	"decimal"	4	0	1	1
2829	302	"res_0"	"tinyint"	8	0	0	0
2830	302	"arg_1"	"decimal"	4	0	1	1
2831	303	"res_0"	"decimal"	4	0	0	0
2832	303	"arg_1"	"decimal"	4	0	1	1
2833	303	"arg_2"	"smallint"	16	0	1	2
2834	304	"res_0"	"decimal"	4	0	0	0
2835	304	"arg_1"	"decimal"	4	0	1	1
2836	304	"arg_2"	"smallint"	16	0	1	2
2837	305	"res_0"	"month_interval"	32	0	0	0
2838	305	"arg_1"	"month_interval"	32	0	1	1
2839	305	"arg_2"	"decimal"	4	0	1	2
2840	306	"res_0"	"month_interval"	32	0	0	0
2841	306	"arg_1"	"month_interval"	32	0	1	1
2842	306	"arg_2"	"decimal"	4	0	1	2
2843	307	"res_0"	"month_interval"	32	0	0	0
2844	307	"arg_1"	"month_interval"	32	0	1	1
2845	307	"arg_2"	"decimal"	4	0	1	2
2846	308	"res_0"	"month_interval"	32	0	0	0
2847	308	"arg_1"	"month_interval"	32	0	1	1
2848	308	"arg_2"	"decimal"	4	0	1	2
2849	309	"res_0"	"sec_interval"	13	0	0	0
2850	309	"arg_1"	"sec_interval"	13	0	1	1
2851	309	"arg_2"	"decimal"	4	0	1	2
2852	310	"res_0"	"sec_interval"	13	0	0	0
2853	310	"arg_1"	"sec_interval"	13	0	1	1
2854	310	"arg_2"	"decimal"	4	0	1	2
2855	311	"res_0"	"sec_interval"	13	0	0	0
2856	311	"arg_1"	"sec_interval"	13	0	1	1
2857	311	"arg_2"	"decimal"	4	0	1	2
2858	312	"res_0"	"sec_interval"	13	0	0	0
2859	312	"arg_1"	"sec_interval"	13	0	1	1
2860	312	"arg_2"	"decimal"	4	0	1	2
2861	313	"res_0"	"decimal"	9	0	0	0
2862	313	"arg_1"	"decimal"	9	0	1	1
2863	313	"arg_2"	"decimal"	9	0	1	2
2864	314	"res_0"	"decimal"	9	0	0	0
2865	314	"arg_1"	"decimal"	9	0	1	1
2866	314	"arg_2"	"decimal"	9	0	1	2
2867	315	"res_0"	"decimal"	9	0	0	0
2868	315	"arg_1"	"decimal"	9	0	1	1
2869	315	"arg_2"	"decimal"	9	0	1	2
2870	316	"res_0"	"decimal"	9	0	0	0
2871	316	"arg_1"	"decimal"	9	0	1	1
2872	316	"arg_2"	"decimal"	9	0	1	2
2873	317	"res_0"	"decimal"	9	0	0	0
2874	317	"arg_1"	"decimal"	9	0	1	1
2875	317	"arg_2"	"decimal"	9	0	1	2
2876	318	"res_0"	"decimal"	9	0	0	0
2877	318	"arg_1"	"decimal"	9	0	1	1
2878	318	"arg_2"	"decimal"	9	0	1	2
2879	319	"res_0"	"decimal"	9	0	0	0
2880	319	"arg_1"	"decimal"	9	0	1	1
2881	319	"arg_2"	"decimal"	9	0	1	2
2882	320	"res_0"	"decimal"	9	0	0	0
2883	320	"arg_1"	"decimal"	9	0	1	1
2884	321	"res_0"	"decimal"	9	0	0	0
2885	321	"arg_1"	"decimal"	9	0	1	1
2886	321	"arg_2"	"int"	32	0	1	2
2887	322	"res_0"	"decimal"	9	0	0	0
2888	322	"arg_1"	"decimal"	9	0	1	1
2889	322	"arg_2"	"int"	32	0	1	2
2890	323	"res_0"	"decimal"	9	0	0	0
2891	323	"arg_1"	"decimal"	9	0	1	1
2892	324	"res_0"	"decimal"	9	0	0	0
2893	324	"arg_1"	"decimal"	9	0	1	1
2894	325	"res_0"	"tinyint"	8	0	0	0
2895	325	"arg_1"	"decimal"	9	0	1	1
2896	326	"res_0"	"decimal"	9	0	0	0
2897	326	"arg_1"	"decimal"	9	0	1	1
2898	326	"arg_2"	"int"	32	0	1	2
2899	327	"res_0"	"decimal"	9	0	0	0
2900	327	"arg_1"	"decimal"	9	0	1	1
2901	327	"arg_2"	"int"	32	0	1	2
2902	328	"res_0"	"month_interval"	32	0	0	0
2903	328	"arg_1"	"month_interval"	32	0	1	1
2904	328	"arg_2"	"decimal"	9	0	1	2
2905	329	"res_0"	"month_interval"	32	0	0	0
2906	329	"arg_1"	"month_interval"	32	0	1	1
2907	329	"arg_2"	"decimal"	9	0	1	2
2908	330	"res_0"	"month_interval"	32	0	0	0
2909	330	"arg_1"	"month_interval"	32	0	1	1
2910	330	"arg_2"	"decimal"	9	0	1	2
2911	331	"res_0"	"month_interval"	32	0	0	0
2912	331	"arg_1"	"month_interval"	32	0	1	1
2913	331	"arg_2"	"decimal"	9	0	1	2
2914	332	"res_0"	"sec_interval"	13	0	0	0
2915	332	"arg_1"	"sec_interval"	13	0	1	1
2916	332	"arg_2"	"decimal"	9	0	1	2
2917	333	"res_0"	"sec_interval"	13	0	0	0
2918	333	"arg_1"	"sec_interval"	13	0	1	1
2919	333	"arg_2"	"decimal"	9	0	1	2
2920	334	"res_0"	"sec_interval"	13	0	0	0
2921	334	"arg_1"	"sec_interval"	13	0	1	1
2922	334	"arg_2"	"decimal"	9	0	1	2
2923	335	"res_0"	"sec_interval"	13	0	0	0
2924	335	"arg_1"	"sec_interval"	13	0	1	1
2925	335	"arg_2"	"decimal"	9	0	1	2
2926	336	"res_0"	"decimal"	18	0	0	0
2927	336	"arg_1"	"decimal"	18	0	1	1
2928	336	"arg_2"	"decimal"	18	0	1	2
2929	337	"res_0"	"decimal"	18	0	0	0
2930	337	"arg_1"	"decimal"	18	0	1	1
2931	337	"arg_2"	"decimal"	18	0	1	2
2932	338	"res_0"	"decimal"	18	0	0	0
2933	338	"arg_1"	"decimal"	18	0	1	1
2934	338	"arg_2"	"decimal"	18	0	1	2
2935	339	"res_0"	"decimal"	18	0	0	0
2936	339	"arg_1"	"decimal"	18	0	1	1
2937	339	"arg_2"	"decimal"	18	0	1	2
2938	340	"res_0"	"decimal"	18	0	0	0
2939	340	"arg_1"	"decimal"	18	0	1	1
2940	340	"arg_2"	"decimal"	18	0	1	2
2941	341	"res_0"	"decimal"	18	0	0	0
2942	341	"arg_1"	"decimal"	18	0	1	1
2943	341	"arg_2"	"decimal"	18	0	1	2
2944	342	"res_0"	"decimal"	18	0	0	0
2945	342	"arg_1"	"decimal"	18	0	1	1
2946	342	"arg_2"	"decimal"	18	0	1	2
2947	343	"res_0"	"decimal"	18	0	0	0
2948	343	"arg_1"	"decimal"	18	0	1	1
2949	344	"res_0"	"decimal"	18	0	0	0
2950	344	"arg_1"	"decimal"	18	0	1	1
2951	344	"arg_2"	"int"	32	0	1	2
2952	345	"res_0"	"decimal"	18	0	0	0
2953	345	"arg_1"	"decimal"	18	0	1	1
2954	345	"arg_2"	"int"	32	0	1	2
2955	346	"res_0"	"decimal"	18	0	0	0
2956	346	"arg_1"	"decimal"	18	0	1	1
2957	347	"res_0"	"decimal"	18	0	0	0
2958	347	"arg_1"	"decimal"	18	0	1	1
2959	348	"res_0"	"tinyint"	8	0	0	0
2960	348	"arg_1"	"decimal"	18	0	1	1
2961	349	"res_0"	"decimal"	18	0	0	0
2962	349	"arg_1"	"decimal"	18	0	1	1
2963	349	"arg_2"	"bigint"	64	0	1	2
2964	350	"res_0"	"decimal"	18	0	0	0
2965	350	"arg_1"	"decimal"	18	0	1	1
2966	350	"arg_2"	"bigint"	64	0	1	2
2967	351	"res_0"	"month_interval"	32	0	0	0
2968	351	"arg_1"	"month_interval"	32	0	1	1
2969	351	"arg_2"	"decimal"	18	0	1	2
2970	352	"res_0"	"month_interval"	32	0	0	0
2971	352	"arg_1"	"month_interval"	32	0	1	1
2972	352	"arg_2"	"decimal"	18	0	1	2
2973	353	"res_0"	"month_interval"	32	0	0	0
2974	353	"arg_1"	"month_interval"	32	0	1	1
2975	353	"arg_2"	"decimal"	18	0	1	2
2976	354	"res_0"	"month_interval"	32	0	0	0
2977	354	"arg_1"	"month_interval"	32	0	1	1
2978	354	"arg_2"	"decimal"	18	0	1	2
2979	355	"res_0"	"sec_interval"	13	0	0	0
2980	355	"arg_1"	"sec_interval"	13	0	1	1
2981	355	"arg_2"	"decimal"	18	0	1	2
2982	356	"res_0"	"sec_interval"	13	0	0	0
2983	356	"arg_1"	"sec_interval"	13	0	1	1
2984	356	"arg_2"	"decimal"	18	0	1	2
2985	357	"res_0"	"sec_interval"	13	0	0	0
2986	357	"arg_1"	"sec_interval"	13	0	1	1
2987	357	"arg_2"	"decimal"	18	0	1	2
2988	358	"res_0"	"sec_interval"	13	0	0	0
2989	358	"arg_1"	"sec_interval"	13	0	1	1
2990	358	"arg_2"	"decimal"	18	0	1	2
2991	359	"res_0"	"decimal"	39	0	0	0
2992	359	"arg_1"	"decimal"	39	0	1	1
2993	359	"arg_2"	"decimal"	39	0	1	2
2994	360	"res_0"	"decimal"	39	0	0	0
2995	360	"arg_1"	"decimal"	39	0	1	1
2996	360	"arg_2"	"decimal"	39	0	1	2
2997	361	"res_0"	"decimal"	39	0	0	0
2998	361	"arg_1"	"decimal"	39	0	1	1
2999	361	"arg_2"	"decimal"	39	0	1	2
3000	362	"res_0"	"decimal"	39	0	0	0
3001	362	"arg_1"	"decimal"	39	0	1	1
3002	362	"arg_2"	"decimal"	39	0	1	2
3003	363	"res_0"	"decimal"	39	0	0	0
3004	363	"arg_1"	"decimal"	39	0	1	1
3005	363	"arg_2"	"decimal"	39	0	1	2
3006	364	"res_0"	"decimal"	39	0	0	0
3007	364	"arg_1"	"decimal"	39	0	1	1
3008	364	"arg_2"	"decimal"	39	0	1	2
3009	365	"res_0"	"decimal"	39	0	0	0
3010	365	"arg_1"	"decimal"	39	0	1	1
3011	365	"arg_2"	"decimal"	39	0	1	2
3012	366	"res_0"	"decimal"	39	0	0	0
3013	366	"arg_1"	"decimal"	39	0	1	1
3014	367	"res_0"	"decimal"	39	0	0	0
3015	367	"arg_1"	"decimal"	39	0	1	1
3016	367	"arg_2"	"int"	32	0	1	2
3017	368	"res_0"	"decimal"	39	0	0	0
3018	368	"arg_1"	"decimal"	39	0	1	1
3019	368	"arg_2"	"int"	32	0	1	2
3020	369	"res_0"	"decimal"	39	0	0	0
3021	369	"arg_1"	"decimal"	39	0	1	1
3022	370	"res_0"	"decimal"	39	0	0	0
3023	370	"arg_1"	"decimal"	39	0	1	1
3024	371	"res_0"	"tinyint"	8	0	0	0
3025	371	"arg_1"	"decimal"	39	0	1	1
3026	372	"res_0"	"decimal"	39	0	0	0
3027	372	"arg_1"	"decimal"	39	0	1	1
3028	372	"arg_2"	"hugeint"	128	0	1	2
3029	373	"res_0"	"decimal"	39	0	0	0
3030	373	"arg_1"	"decimal"	39	0	1	1
3031	373	"arg_2"	"hugeint"	128	0	1	2
3032	374	"res_0"	"month_interval"	32	0	0	0
3033	374	"arg_1"	"month_interval"	32	0	1	1
3034	374	"arg_2"	"decimal"	39	0	1	2
3035	375	"res_0"	"month_interval"	32	0	0	0
3036	375	"arg_1"	"month_interval"	32	0	1	1
3037	375	"arg_2"	"decimal"	39	0	1	2
3038	376	"res_0"	"month_interval"	32	0	0	0
3039	376	"arg_1"	"month_interval"	32	0	1	1
3040	376	"arg_2"	"decimal"	39	0	1	2
3041	377	"res_0"	"month_interval"	32	0	0	0
3042	377	"arg_1"	"month_interval"	32	0	1	1
3043	377	"arg_2"	"decimal"	39	0	1	2
3044	378	"res_0"	"sec_interval"	13	0	0	0
3045	378	"arg_1"	"sec_interval"	13	0	1	1
3046	378	"arg_2"	"decimal"	39	0	1	2
3047	379	"res_0"	"sec_interval"	13	0	0	0
3048	379	"arg_1"	"sec_interval"	13	0	1	1
3049	379	"arg_2"	"decimal"	39	0	1	2
3050	380	"res_0"	"sec_interval"	13	0	0	0
3051	380	"arg_1"	"sec_interval"	13	0	1	1
3052	380	"arg_2"	"decimal"	39	0	1	2
3053	381	"res_0"	"sec_interval"	13	0	0	0
3054	381	"arg_1"	"sec_interval"	13	0	1	1
3055	381	"arg_2"	"decimal"	39	0	1	2
3056	382	"res_0"	"real"	24	0	0	0
3057	382	"arg_1"	"real"	24	0	1	1
3058	382	"arg_2"	"real"	24	0	1	2
3059	383	"res_0"	"real"	24	0	0	0
3060	383	"arg_1"	"real"	24	0	1	1
3061	383	"arg_2"	"real"	24	0	1	2
3062	384	"res_0"	"real"	24	0	0	0
3063	384	"arg_1"	"real"	24	0	1	1
3064	384	"arg_2"	"real"	24	0	1	2
3065	385	"res_0"	"real"	24	0	0	0
3066	385	"arg_1"	"real"	24	0	1	1
3067	385	"arg_2"	"real"	24	0	1	2
3068	386	"res_0"	"real"	24	0	0	0
3069	386	"arg_1"	"real"	24	0	1	1
3070	387	"res_0"	"real"	24	0	0	0
3071	387	"arg_1"	"real"	24	0	1	1
3072	388	"res_0"	"tinyint"	8	0	0	0
3073	388	"arg_1"	"real"	24	0	1	1
3074	389	"res_0"	"real"	24	0	0	0
3075	389	"arg_1"	"real"	24	0	1	1
3076	389	"arg_2"	"real"	24	0	1	2
3077	390	"res_0"	"real"	24	0	0	0
3078	390	"arg_1"	"real"	24	0	1	1
3079	390	"arg_2"	"real"	24	0	1	2
3080	391	"res_0"	"month_interval"	32	0	0	0
3081	391	"arg_1"	"month_interval"	32	0	1	1
3082	391	"arg_2"	"real"	24	0	1	2
3083	392	"res_0"	"month_interval"	32	0	0	0
3084	392	"arg_1"	"month_interval"	32	0	1	1
3085	392	"arg_2"	"real"	24	0	1	2
3086	393	"res_0"	"month_interval"	32	0	0	0
3087	393	"arg_1"	"month_interval"	32	0	1	1
3088	393	"arg_2"	"real"	24	0	1	2
3089	394	"res_0"	"month_interval"	32	0	0	0
3090	394	"arg_1"	"month_interval"	32	0	1	1
3091	394	"arg_2"	"real"	24	0	1	2
3092	395	"res_0"	"sec_interval"	13	0	0	0
3093	395	"arg_1"	"sec_interval"	13	0	1	1
3094	395	"arg_2"	"real"	24	0	1	2
3095	396	"res_0"	"sec_interval"	13	0	0	0
3096	396	"arg_1"	"sec_interval"	13	0	1	1
3097	396	"arg_2"	"real"	24	0	1	2
3098	397	"res_0"	"sec_interval"	13	0	0	0
3099	397	"arg_1"	"sec_interval"	13	0	1	1
3100	397	"arg_2"	"real"	24	0	1	2
3101	398	"res_0"	"sec_interval"	13	0	0	0
3102	398	"arg_1"	"sec_interval"	13	0	1	1
3103	398	"arg_2"	"real"	24	0	1	2
3104	399	"res_0"	"double"	53	0	0	0
3105	399	"arg_1"	"double"	53	0	1	1
3106	399	"arg_2"	"double"	53	0	1	2
3107	400	"res_0"	"double"	53	0	0	0
3108	400	"arg_1"	"double"	53	0	1	1
3109	400	"arg_2"	"double"	53	0	1	2
3110	401	"res_0"	"double"	53	0	0	0
3111	401	"arg_1"	"double"	53	0	1	1
3112	401	"arg_2"	"double"	53	0	1	2
3113	402	"res_0"	"double"	53	0	0	0
3114	402	"arg_1"	"double"	53	0	1	1
3115	402	"arg_2"	"double"	53	0	1	2
3116	403	"res_0"	"double"	53	0	0	0
3117	403	"arg_1"	"double"	53	0	1	1
3118	404	"res_0"	"double"	53	0	0	0
3119	404	"arg_1"	"double"	53	0	1	1
3120	405	"res_0"	"tinyint"	8	0	0	0
3121	405	"arg_1"	"double"	53	0	1	1
3122	406	"res_0"	"double"	53	0	0	0
3123	406	"arg_1"	"double"	53	0	1	1
3124	406	"arg_2"	"double"	53	0	1	2
3125	407	"res_0"	"double"	53	0	0	0
3126	407	"arg_1"	"double"	53	0	1	1
3127	407	"arg_2"	"double"	53	0	1	2
3128	408	"res_0"	"month_interval"	32	0	0	0
3129	408	"arg_1"	"month_interval"	32	0	1	1
3130	408	"arg_2"	"double"	53	0	1	2
3131	409	"res_0"	"month_interval"	32	0	0	0
3132	409	"arg_1"	"month_interval"	32	0	1	1
3133	409	"arg_2"	"double"	53	0	1	2
3134	410	"res_0"	"month_interval"	32	0	0	0
3135	410	"arg_1"	"month_interval"	32	0	1	1
3136	410	"arg_2"	"double"	53	0	1	2
3137	411	"res_0"	"month_interval"	32	0	0	0
3138	411	"arg_1"	"month_interval"	32	0	1	1
3139	411	"arg_2"	"double"	53	0	1	2
3140	412	"res_0"	"sec_interval"	13	0	0	0
3141	412	"arg_1"	"sec_interval"	13	0	1	1
3142	412	"arg_2"	"double"	53	0	1	2
3143	413	"res_0"	"sec_interval"	13	0	0	0
3144	413	"arg_1"	"sec_interval"	13	0	1	1
3145	413	"arg_2"	"double"	53	0	1	2
3146	414	"res_0"	"sec_interval"	13	0	0	0
3147	414	"arg_1"	"sec_interval"	13	0	1	1
3148	414	"arg_2"	"double"	53	0	1	2
3149	415	"res_0"	"sec_interval"	13	0	0	0
3150	415	"arg_1"	"sec_interval"	13	0	1	1
3151	415	"arg_2"	"double"	53	0	1	2
3152	416	"res_0"	"month_interval"	32	0	0	0
3153	416	"arg_1"	"month_interval"	32	0	1	1
3154	416	"arg_2"	"month_interval"	32	0	1	2
3155	417	"res_0"	"month_interval"	32	0	0	0
3156	417	"arg_1"	"month_interval"	32	0	1	1
3157	417	"arg_2"	"month_interval"	32	0	1	2
3158	418	"res_0"	"month_interval"	32	0	0	0
3159	418	"arg_1"	"month_interval"	32	0	1	1
3160	418	"arg_2"	"month_interval"	32	0	1	2
3161	419	"res_0"	"month_interval"	32	0	0	0
3162	419	"arg_1"	"month_interval"	32	0	1	1
3163	419	"arg_2"	"month_interval"	32	0	1	2
3164	420	"res_0"	"month_interval"	32	0	0	0
3165	420	"arg_1"	"month_interval"	32	0	1	1
3166	421	"res_0"	"month_interval"	32	0	0	0
3167	421	"arg_1"	"month_interval"	32	0	1	1
3168	422	"res_0"	"tinyint"	8	0	0	0
3169	422	"arg_1"	"month_interval"	32	0	1	1
3170	423	"res_0"	"month_interval"	32	0	0	0
3171	423	"arg_1"	"month_interval"	32	0	1	1
3172	423	"arg_2"	"int"	32	0	1	2
3173	424	"res_0"	"month_interval"	32	0	0	0
3174	424	"arg_1"	"month_interval"	32	0	1	1
3175	424	"arg_2"	"int"	32	0	1	2
3176	425	"res_0"	"sec_interval"	13	0	0	0
3177	425	"arg_1"	"sec_interval"	13	0	1	1
3178	425	"arg_2"	"sec_interval"	13	0	1	2
3179	426	"res_0"	"sec_interval"	13	0	0	0
3180	426	"arg_1"	"sec_interval"	13	0	1	1
3181	426	"arg_2"	"sec_interval"	13	0	1	2
3182	427	"res_0"	"sec_interval"	13	0	0	0
3183	427	"arg_1"	"sec_interval"	13	0	1	1
3184	427	"arg_2"	"sec_interval"	13	0	1	2
3185	428	"res_0"	"sec_interval"	13	0	0	0
3186	428	"arg_1"	"sec_interval"	13	0	1	1
3187	428	"arg_2"	"sec_interval"	13	0	1	2
3188	429	"res_0"	"sec_interval"	13	0	0	0
3189	429	"arg_1"	"sec_interval"	13	0	1	1
3190	430	"res_0"	"sec_interval"	13	0	0	0
3191	430	"arg_1"	"sec_interval"	13	0	1	1
3192	431	"res_0"	"tinyint"	8	0	0	0
3193	431	"arg_1"	"sec_interval"	13	0	1	1
3194	432	"res_0"	"sec_interval"	13	0	0	0
3195	432	"arg_1"	"sec_interval"	13	0	1	1
3196	432	"arg_2"	"bigint"	64	0	1	2
3197	433	"res_0"	"sec_interval"	13	0	0	0
3198	433	"arg_1"	"sec_interval"	13	0	1	1
3199	433	"arg_2"	"bigint"	64	0	1	2
3200	434	"res_0"	"decimal"	4	0	0	0
3201	434	"arg_1"	"decimal"	4	0	1	1
3202	434	"arg_2"	"tinyint"	8	0	1	2
3203	435	"res_0"	"decimal"	4	0	0	0
3204	435	"arg_1"	"tinyint"	8	0	1	1
3205	435	"arg_2"	"decimal"	4	0	1	2
3206	436	"res_0"	"decimal"	4	0	0	0
3207	436	"arg_1"	"decimal"	4	0	1	1
3208	436	"arg_2"	"decimal"	2	0	1	2
3209	437	"res_0"	"decimal"	4	0	0	0
3210	437	"arg_1"	"decimal"	2	0	1	1
3211	437	"arg_2"	"decimal"	4	0	1	2
3212	438	"res_0"	"decimal"	9	0	0	0
3213	438	"arg_1"	"decimal"	9	0	1	1
3214	438	"arg_2"	"tinyint"	8	0	1	2
3215	439	"res_0"	"decimal"	9	0	0	0
3216	439	"arg_1"	"tinyint"	8	0	1	1
3217	439	"arg_2"	"decimal"	9	0	1	2
3218	440	"res_0"	"decimal"	9	0	0	0
3219	440	"arg_1"	"decimal"	9	0	1	1
3220	440	"arg_2"	"smallint"	16	0	1	2
3221	441	"res_0"	"decimal"	9	0	0	0
3222	441	"arg_1"	"smallint"	16	0	1	1
3223	441	"arg_2"	"decimal"	9	0	1	2
3224	442	"res_0"	"decimal"	9	0	0	0
3225	442	"arg_1"	"decimal"	9	0	1	1
3226	442	"arg_2"	"decimal"	2	0	1	2
3227	443	"res_0"	"decimal"	9	0	0	0
3228	443	"arg_1"	"decimal"	2	0	1	1
3229	443	"arg_2"	"decimal"	9	0	1	2
3230	444	"res_0"	"decimal"	9	0	0	0
3231	444	"arg_1"	"decimal"	9	0	1	1
3232	444	"arg_2"	"decimal"	4	0	1	2
3233	445	"res_0"	"decimal"	9	0	0	0
3234	445	"arg_1"	"decimal"	4	0	1	1
3235	445	"arg_2"	"decimal"	9	0	1	2
3236	446	"res_0"	"decimal"	18	0	0	0
3237	446	"arg_1"	"decimal"	18	0	1	1
3238	446	"arg_2"	"tinyint"	8	0	1	2
3239	447	"res_0"	"decimal"	18	0	0	0
3240	447	"arg_1"	"tinyint"	8	0	1	1
3241	447	"arg_2"	"decimal"	18	0	1	2
3242	448	"res_0"	"decimal"	18	0	0	0
3243	448	"arg_1"	"decimal"	18	0	1	1
3244	448	"arg_2"	"smallint"	16	0	1	2
3245	449	"res_0"	"decimal"	18	0	0	0
3246	449	"arg_1"	"smallint"	16	0	1	1
3247	449	"arg_2"	"decimal"	18	0	1	2
3248	450	"res_0"	"decimal"	18	0	0	0
3249	450	"arg_1"	"decimal"	18	0	1	1
3250	450	"arg_2"	"int"	32	0	1	2
3251	451	"res_0"	"decimal"	18	0	0	0
3252	451	"arg_1"	"int"	32	0	1	1
3253	451	"arg_2"	"decimal"	18	0	1	2
3254	452	"res_0"	"decimal"	18	0	0	0
3255	452	"arg_1"	"decimal"	18	0	1	1
3256	452	"arg_2"	"wrd"	64	0	1	2
3257	453	"res_0"	"decimal"	18	0	0	0
3258	453	"arg_1"	"wrd"	64	0	1	1
3259	453	"arg_2"	"decimal"	18	0	1	2
3260	454	"res_0"	"decimal"	18	0	0	0
3261	454	"arg_1"	"decimal"	18	0	1	1
3262	454	"arg_2"	"decimal"	2	0	1	2
3263	455	"res_0"	"decimal"	18	0	0	0
3264	455	"arg_1"	"decimal"	2	0	1	1
3265	455	"arg_2"	"decimal"	18	0	1	2
3266	456	"res_0"	"decimal"	18	0	0	0
3267	456	"arg_1"	"decimal"	18	0	1	1
3268	456	"arg_2"	"decimal"	4	0	1	2
3269	457	"res_0"	"decimal"	18	0	0	0
3270	457	"arg_1"	"decimal"	4	0	1	1
3271	457	"arg_2"	"decimal"	18	0	1	2
3272	458	"res_0"	"decimal"	18	0	0	0
3273	458	"arg_1"	"decimal"	18	0	1	1
3274	458	"arg_2"	"decimal"	9	0	1	2
3275	459	"res_0"	"decimal"	18	0	0	0
3276	459	"arg_1"	"decimal"	9	0	1	1
3277	459	"arg_2"	"decimal"	18	0	1	2
3278	460	"res_0"	"decimal"	39	0	0	0
3279	460	"arg_1"	"decimal"	39	0	1	1
3280	460	"arg_2"	"tinyint"	8	0	1	2
3281	461	"res_0"	"decimal"	39	0	0	0
3282	461	"arg_1"	"tinyint"	8	0	1	1
3283	461	"arg_2"	"decimal"	39	0	1	2
3284	462	"res_0"	"decimal"	39	0	0	0
3285	462	"arg_1"	"decimal"	39	0	1	1
3286	462	"arg_2"	"smallint"	16	0	1	2
3287	463	"res_0"	"decimal"	39	0	0	0
3288	463	"arg_1"	"smallint"	16	0	1	1
3289	463	"arg_2"	"decimal"	39	0	1	2
3290	464	"res_0"	"decimal"	39	0	0	0
3291	464	"arg_1"	"decimal"	39	0	1	1
3292	464	"arg_2"	"int"	32	0	1	2
3293	465	"res_0"	"decimal"	39	0	0	0
3294	465	"arg_1"	"int"	32	0	1	1
3295	465	"arg_2"	"decimal"	39	0	1	2
3296	466	"res_0"	"decimal"	39	0	0	0
3297	466	"arg_1"	"decimal"	39	0	1	1
3298	466	"arg_2"	"bigint"	64	0	1	2
3299	467	"res_0"	"decimal"	39	0	0	0
3300	467	"arg_1"	"bigint"	64	0	1	1
3301	467	"arg_2"	"decimal"	39	0	1	2
3302	468	"res_0"	"decimal"	39	0	0	0
3303	468	"arg_1"	"decimal"	39	0	1	1
3304	468	"arg_2"	"wrd"	64	0	1	2
3305	469	"res_0"	"decimal"	39	0	0	0
3306	469	"arg_1"	"wrd"	64	0	1	1
3307	469	"arg_2"	"decimal"	39	0	1	2
3308	470	"res_0"	"decimal"	39	0	0	0
3309	470	"arg_1"	"decimal"	39	0	1	1
3310	470	"arg_2"	"decimal"	2	0	1	2
3311	471	"res_0"	"decimal"	39	0	0	0
3312	471	"arg_1"	"decimal"	2	0	1	1
3313	471	"arg_2"	"decimal"	39	0	1	2
3314	472	"res_0"	"decimal"	39	0	0	0
3315	472	"arg_1"	"decimal"	39	0	1	1
3316	472	"arg_2"	"decimal"	4	0	1	2
3317	473	"res_0"	"decimal"	39	0	0	0
3318	473	"arg_1"	"decimal"	4	0	1	1
3319	473	"arg_2"	"decimal"	39	0	1	2
3320	474	"res_0"	"decimal"	39	0	0	0
3321	474	"arg_1"	"decimal"	39	0	1	1
3322	474	"arg_2"	"decimal"	9	0	1	2
3323	475	"res_0"	"decimal"	39	0	0	0
3324	475	"arg_1"	"decimal"	9	0	1	1
3325	475	"arg_2"	"decimal"	39	0	1	2
3326	476	"res_0"	"decimal"	39	0	0	0
3327	476	"arg_1"	"decimal"	39	0	1	1
3328	476	"arg_2"	"decimal"	18	0	1	2
3329	477	"res_0"	"decimal"	39	0	0	0
3330	477	"arg_1"	"decimal"	18	0	1	1
3331	477	"arg_2"	"decimal"	39	0	1	2
3332	478	"res_0"	"decimal"	2	0	0	0
3333	478	"arg_1"	"decimal"	2	0	1	1
3334	478	"arg_2"	"tinyint"	8	0	1	2
3335	479	"res_0"	"decimal"	4	0	0	0
3336	479	"arg_1"	"decimal"	4	0	1	1
3337	479	"arg_2"	"tinyint"	8	0	1	2
3338	480	"res_0"	"decimal"	9	0	0	0
3339	480	"arg_1"	"decimal"	9	0	1	1
3340	480	"arg_2"	"tinyint"	8	0	1	2
3341	481	"res_0"	"decimal"	18	0	0	0
3342	481	"arg_1"	"decimal"	18	0	1	1
3343	481	"arg_2"	"tinyint"	8	0	1	2
3344	482	"res_0"	"decimal"	39	0	0	0
3345	482	"arg_1"	"decimal"	39	0	1	1
3346	482	"arg_2"	"tinyint"	8	0	1	2
3347	483	"res_0"	"real"	24	0	0	0
3348	483	"arg_1"	"real"	24	0	1	1
3349	483	"arg_2"	"tinyint"	8	0	1	2
3350	484	"res_0"	"double"	53	0	0	0
3351	484	"arg_1"	"double"	53	0	1	1
3352	484	"arg_2"	"tinyint"	8	0	1	2
3353	485	"res_0"	"oid"	63	0	0	0
3354	485	"arg_1"	"oid"	63	0	1	1
3355	485	"arg_2"	"oid"	63	0	1	2
3356	486	"res_0"	"oid"	63	0	0	0
3357	486	"arg_1"	"tinyint"	8	0	1	1
3358	486	"arg_2"	"oid"	63	0	1	2
3359	487	"res_0"	"oid"	63	0	0	0
3360	487	"arg_1"	"smallint"	16	0	1	1
3361	487	"arg_2"	"oid"	63	0	1	2
3362	488	"res_0"	"oid"	63	0	0	0
3363	488	"arg_1"	"int"	32	0	1	1
3364	488	"arg_2"	"oid"	63	0	1	2
3365	489	"res_0"	"oid"	63	0	0	0
3366	489	"arg_1"	"bigint"	64	0	1	1
3367	489	"arg_2"	"oid"	63	0	1	2
3368	490	"res_0"	"oid"	63	0	0	0
3369	490	"arg_1"	"wrd"	64	0	1	1
3370	490	"arg_2"	"oid"	63	0	1	2
3371	491	"res_0"	"oid"	63	0	0	0
3372	491	"arg_1"	"hugeint"	128	0	1	1
3373	491	"arg_2"	"oid"	63	0	1	2
3374	492	"res_0"	"oid"	63	0	0	0
3375	492	"arg_1"	"decimal"	2	0	1	1
3376	492	"arg_2"	"oid"	63	0	1	2
3377	493	"res_0"	"oid"	63	0	0	0
3378	493	"arg_1"	"decimal"	4	0	1	1
3379	493	"arg_2"	"oid"	63	0	1	2
3380	494	"res_0"	"oid"	63	0	0	0
3381	494	"arg_1"	"decimal"	9	0	1	1
3382	494	"arg_2"	"oid"	63	0	1	2
3383	495	"res_0"	"oid"	63	0	0	0
3384	495	"arg_1"	"decimal"	18	0	1	1
3385	495	"arg_2"	"oid"	63	0	1	2
3386	496	"res_0"	"oid"	63	0	0	0
3387	496	"arg_1"	"decimal"	39	0	1	1
3388	496	"arg_2"	"oid"	63	0	1	2
3389	497	"res_0"	"oid"	63	0	0	0
3390	497	"arg_1"	"real"	24	0	1	1
3391	497	"arg_2"	"oid"	63	0	1	2
3392	498	"res_0"	"oid"	63	0	0	0
3393	498	"arg_1"	"double"	53	0	1	1
3394	498	"arg_2"	"oid"	63	0	1	2
3395	499	"res_0"	"oid"	63	0	0	0
3396	499	"arg_1"	"month_interval"	32	0	1	1
3397	499	"arg_2"	"oid"	63	0	1	2
3398	500	"res_0"	"oid"	63	0	0	0
3399	500	"arg_1"	"sec_interval"	13	0	1	1
3400	500	"arg_2"	"oid"	63	0	1	2
3401	501	"res_0"	"oid"	63	0	0	0
3402	501	"arg_1"	"time"	7	0	1	1
3403	501	"arg_2"	"oid"	63	0	1	2
3404	502	"res_0"	"oid"	63	0	0	0
3405	502	"arg_1"	"timetz"	7	0	1	1
3406	502	"arg_2"	"oid"	63	0	1	2
3407	503	"res_0"	"oid"	63	0	0	0
3408	503	"arg_1"	"date"	0	0	1	1
3409	503	"arg_2"	"oid"	63	0	1	2
3410	504	"res_0"	"oid"	63	0	0	0
3411	504	"arg_1"	"timestamp"	7	0	1	1
3412	504	"arg_2"	"oid"	63	0	1	2
3413	505	"res_0"	"oid"	63	0	0	0
3414	505	"arg_1"	"timestamptz"	7	0	1	1
3415	505	"arg_2"	"oid"	63	0	1	2
3416	506	"res_0"	"oid"	63	0	0	0
3417	506	"arg_1"	"blob"	0	0	1	1
3418	506	"arg_2"	"oid"	63	0	1	2
3419	507	"res_0"	"tinyint"	8	0	0	0
3420	507	"arg_1"	"oid"	63	0	1	1
3421	507	"arg_2"	"tinyint"	8	0	1	2
3422	508	"res_0"	"tinyint"	8	0	0	0
3423	508	"arg_1"	"tinyint"	8	0	1	1
3424	508	"arg_2"	"tinyint"	8	0	1	2
3425	509	"res_0"	"tinyint"	8	0	0	0
3426	509	"arg_1"	"smallint"	16	0	1	1
3427	509	"arg_2"	"tinyint"	8	0	1	2
3428	510	"res_0"	"tinyint"	8	0	0	0
3429	510	"arg_1"	"int"	32	0	1	1
3430	510	"arg_2"	"tinyint"	8	0	1	2
3431	511	"res_0"	"tinyint"	8	0	0	0
3432	511	"arg_1"	"bigint"	64	0	1	1
3433	511	"arg_2"	"tinyint"	8	0	1	2
3434	512	"res_0"	"tinyint"	8	0	0	0
3435	512	"arg_1"	"wrd"	64	0	1	1
3436	512	"arg_2"	"tinyint"	8	0	1	2
3437	513	"res_0"	"tinyint"	8	0	0	0
3438	513	"arg_1"	"hugeint"	128	0	1	1
3439	513	"arg_2"	"tinyint"	8	0	1	2
3440	514	"res_0"	"tinyint"	8	0	0	0
3441	514	"arg_1"	"decimal"	2	0	1	1
3442	514	"arg_2"	"tinyint"	8	0	1	2
3443	515	"res_0"	"tinyint"	8	0	0	0
3444	515	"arg_1"	"decimal"	4	0	1	1
3445	515	"arg_2"	"tinyint"	8	0	1	2
3446	516	"res_0"	"tinyint"	8	0	0	0
3447	516	"arg_1"	"decimal"	9	0	1	1
3448	516	"arg_2"	"tinyint"	8	0	1	2
3449	517	"res_0"	"tinyint"	8	0	0	0
3450	517	"arg_1"	"decimal"	18	0	1	1
3451	517	"arg_2"	"tinyint"	8	0	1	2
3452	518	"res_0"	"tinyint"	8	0	0	0
3453	518	"arg_1"	"decimal"	39	0	1	1
3454	518	"arg_2"	"tinyint"	8	0	1	2
3455	519	"res_0"	"tinyint"	8	0	0	0
3456	519	"arg_1"	"real"	24	0	1	1
3457	519	"arg_2"	"tinyint"	8	0	1	2
3458	520	"res_0"	"tinyint"	8	0	0	0
3459	520	"arg_1"	"double"	53	0	1	1
3460	520	"arg_2"	"tinyint"	8	0	1	2
3461	521	"res_0"	"tinyint"	8	0	0	0
3462	521	"arg_1"	"month_interval"	32	0	1	1
3463	521	"arg_2"	"tinyint"	8	0	1	2
3464	522	"res_0"	"tinyint"	8	0	0	0
3465	522	"arg_1"	"sec_interval"	13	0	1	1
3466	522	"arg_2"	"tinyint"	8	0	1	2
3467	523	"res_0"	"tinyint"	8	0	0	0
3468	523	"arg_1"	"time"	7	0	1	1
3469	523	"arg_2"	"tinyint"	8	0	1	2
3470	524	"res_0"	"tinyint"	8	0	0	0
3471	524	"arg_1"	"timetz"	7	0	1	1
3472	524	"arg_2"	"tinyint"	8	0	1	2
3473	525	"res_0"	"tinyint"	8	0	0	0
3474	525	"arg_1"	"date"	0	0	1	1
3475	525	"arg_2"	"tinyint"	8	0	1	2
3476	526	"res_0"	"tinyint"	8	0	0	0
3477	526	"arg_1"	"timestamp"	7	0	1	1
3478	526	"arg_2"	"tinyint"	8	0	1	2
3479	527	"res_0"	"tinyint"	8	0	0	0
3480	527	"arg_1"	"timestamptz"	7	0	1	1
3481	527	"arg_2"	"tinyint"	8	0	1	2
3482	528	"res_0"	"tinyint"	8	0	0	0
3483	528	"arg_1"	"blob"	0	0	1	1
3484	528	"arg_2"	"tinyint"	8	0	1	2
3485	529	"res_0"	"smallint"	16	0	0	0
3486	529	"arg_1"	"oid"	63	0	1	1
3487	529	"arg_2"	"smallint"	16	0	1	2
3488	530	"res_0"	"smallint"	16	0	0	0
3489	530	"arg_1"	"tinyint"	8	0	1	1
3490	530	"arg_2"	"smallint"	16	0	1	2
3491	531	"res_0"	"smallint"	16	0	0	0
3492	531	"arg_1"	"smallint"	16	0	1	1
3493	531	"arg_2"	"smallint"	16	0	1	2
3494	532	"res_0"	"smallint"	16	0	0	0
3495	532	"arg_1"	"int"	32	0	1	1
3496	532	"arg_2"	"smallint"	16	0	1	2
3497	533	"res_0"	"smallint"	16	0	0	0
3498	533	"arg_1"	"bigint"	64	0	1	1
3499	533	"arg_2"	"smallint"	16	0	1	2
3500	534	"res_0"	"smallint"	16	0	0	0
3501	534	"arg_1"	"wrd"	64	0	1	1
3502	534	"arg_2"	"smallint"	16	0	1	2
3503	535	"res_0"	"smallint"	16	0	0	0
3504	535	"arg_1"	"hugeint"	128	0	1	1
3505	535	"arg_2"	"smallint"	16	0	1	2
3506	536	"res_0"	"smallint"	16	0	0	0
3507	536	"arg_1"	"decimal"	2	0	1	1
3508	536	"arg_2"	"smallint"	16	0	1	2
3509	537	"res_0"	"smallint"	16	0	0	0
3510	537	"arg_1"	"decimal"	4	0	1	1
3511	537	"arg_2"	"smallint"	16	0	1	2
3512	538	"res_0"	"smallint"	16	0	0	0
3513	538	"arg_1"	"decimal"	9	0	1	1
3514	538	"arg_2"	"smallint"	16	0	1	2
3515	539	"res_0"	"smallint"	16	0	0	0
3516	539	"arg_1"	"decimal"	18	0	1	1
3517	539	"arg_2"	"smallint"	16	0	1	2
3518	540	"res_0"	"smallint"	16	0	0	0
3519	540	"arg_1"	"decimal"	39	0	1	1
3520	540	"arg_2"	"smallint"	16	0	1	2
3521	541	"res_0"	"smallint"	16	0	0	0
3522	541	"arg_1"	"real"	24	0	1	1
3523	541	"arg_2"	"smallint"	16	0	1	2
3524	542	"res_0"	"smallint"	16	0	0	0
3525	542	"arg_1"	"double"	53	0	1	1
3526	542	"arg_2"	"smallint"	16	0	1	2
3527	543	"res_0"	"smallint"	16	0	0	0
3528	543	"arg_1"	"month_interval"	32	0	1	1
3529	543	"arg_2"	"smallint"	16	0	1	2
3530	544	"res_0"	"smallint"	16	0	0	0
3531	544	"arg_1"	"sec_interval"	13	0	1	1
3532	544	"arg_2"	"smallint"	16	0	1	2
3533	545	"res_0"	"smallint"	16	0	0	0
3534	545	"arg_1"	"time"	7	0	1	1
3535	545	"arg_2"	"smallint"	16	0	1	2
3536	546	"res_0"	"smallint"	16	0	0	0
3537	546	"arg_1"	"timetz"	7	0	1	1
3538	546	"arg_2"	"smallint"	16	0	1	2
3539	547	"res_0"	"smallint"	16	0	0	0
3540	547	"arg_1"	"date"	0	0	1	1
3541	547	"arg_2"	"smallint"	16	0	1	2
3542	548	"res_0"	"smallint"	16	0	0	0
3543	548	"arg_1"	"timestamp"	7	0	1	1
3544	548	"arg_2"	"smallint"	16	0	1	2
3545	549	"res_0"	"smallint"	16	0	0	0
3546	549	"arg_1"	"timestamptz"	7	0	1	1
3547	549	"arg_2"	"smallint"	16	0	1	2
3548	550	"res_0"	"smallint"	16	0	0	0
3549	550	"arg_1"	"blob"	0	0	1	1
3550	550	"arg_2"	"smallint"	16	0	1	2
3551	551	"res_0"	"int"	32	0	0	0
3552	551	"arg_1"	"oid"	63	0	1	1
3553	551	"arg_2"	"int"	32	0	1	2
3554	552	"res_0"	"int"	32	0	0	0
3555	552	"arg_1"	"tinyint"	8	0	1	1
3556	552	"arg_2"	"int"	32	0	1	2
3557	553	"res_0"	"int"	32	0	0	0
3558	553	"arg_1"	"smallint"	16	0	1	1
3559	553	"arg_2"	"int"	32	0	1	2
3560	554	"res_0"	"int"	32	0	0	0
3561	554	"arg_1"	"int"	32	0	1	1
3562	554	"arg_2"	"int"	32	0	1	2
3563	555	"res_0"	"int"	32	0	0	0
3564	555	"arg_1"	"bigint"	64	0	1	1
3565	555	"arg_2"	"int"	32	0	1	2
3566	556	"res_0"	"int"	32	0	0	0
3567	556	"arg_1"	"wrd"	64	0	1	1
3568	556	"arg_2"	"int"	32	0	1	2
3569	557	"res_0"	"int"	32	0	0	0
3570	557	"arg_1"	"hugeint"	128	0	1	1
3571	557	"arg_2"	"int"	32	0	1	2
3572	558	"res_0"	"int"	32	0	0	0
3573	558	"arg_1"	"decimal"	2	0	1	1
3574	558	"arg_2"	"int"	32	0	1	2
3575	559	"res_0"	"int"	32	0	0	0
3576	559	"arg_1"	"decimal"	4	0	1	1
3577	559	"arg_2"	"int"	32	0	1	2
3578	560	"res_0"	"int"	32	0	0	0
3579	560	"arg_1"	"decimal"	9	0	1	1
3580	560	"arg_2"	"int"	32	0	1	2
3581	561	"res_0"	"int"	32	0	0	0
3582	561	"arg_1"	"decimal"	18	0	1	1
3583	561	"arg_2"	"int"	32	0	1	2
3584	562	"res_0"	"int"	32	0	0	0
3585	562	"arg_1"	"decimal"	39	0	1	1
3586	562	"arg_2"	"int"	32	0	1	2
3587	563	"res_0"	"int"	32	0	0	0
3588	563	"arg_1"	"real"	24	0	1	1
3589	563	"arg_2"	"int"	32	0	1	2
3590	564	"res_0"	"int"	32	0	0	0
3591	564	"arg_1"	"double"	53	0	1	1
3592	564	"arg_2"	"int"	32	0	1	2
3593	565	"res_0"	"int"	32	0	0	0
3594	565	"arg_1"	"month_interval"	32	0	1	1
3595	565	"arg_2"	"int"	32	0	1	2
3596	566	"res_0"	"int"	32	0	0	0
3597	566	"arg_1"	"sec_interval"	13	0	1	1
3598	566	"arg_2"	"int"	32	0	1	2
3599	567	"res_0"	"int"	32	0	0	0
3600	567	"arg_1"	"time"	7	0	1	1
3601	567	"arg_2"	"int"	32	0	1	2
3602	568	"res_0"	"int"	32	0	0	0
3603	568	"arg_1"	"timetz"	7	0	1	1
3604	568	"arg_2"	"int"	32	0	1	2
3605	569	"res_0"	"int"	32	0	0	0
3606	569	"arg_1"	"date"	0	0	1	1
3607	569	"arg_2"	"int"	32	0	1	2
3608	570	"res_0"	"int"	32	0	0	0
3609	570	"arg_1"	"timestamp"	7	0	1	1
3610	570	"arg_2"	"int"	32	0	1	2
3611	571	"res_0"	"int"	32	0	0	0
3612	571	"arg_1"	"timestamptz"	7	0	1	1
3613	571	"arg_2"	"int"	32	0	1	2
3614	572	"res_0"	"int"	32	0	0	0
3615	572	"arg_1"	"blob"	0	0	1	1
3616	572	"arg_2"	"int"	32	0	1	2
3617	573	"res_0"	"bigint"	64	0	0	0
3618	573	"arg_1"	"oid"	63	0	1	1
3619	573	"arg_2"	"bigint"	64	0	1	2
3620	574	"res_0"	"bigint"	64	0	0	0
3621	574	"arg_1"	"tinyint"	8	0	1	1
3622	574	"arg_2"	"bigint"	64	0	1	2
3623	575	"res_0"	"bigint"	64	0	0	0
3624	575	"arg_1"	"smallint"	16	0	1	1
3625	575	"arg_2"	"bigint"	64	0	1	2
3626	576	"res_0"	"bigint"	64	0	0	0
3627	576	"arg_1"	"int"	32	0	1	1
3628	576	"arg_2"	"bigint"	64	0	1	2
3629	577	"res_0"	"bigint"	64	0	0	0
3630	577	"arg_1"	"bigint"	64	0	1	1
3631	577	"arg_2"	"bigint"	64	0	1	2
3632	578	"res_0"	"bigint"	64	0	0	0
3633	578	"arg_1"	"wrd"	64	0	1	1
3634	578	"arg_2"	"bigint"	64	0	1	2
3635	579	"res_0"	"bigint"	64	0	0	0
3636	579	"arg_1"	"hugeint"	128	0	1	1
3637	579	"arg_2"	"bigint"	64	0	1	2
3638	580	"res_0"	"bigint"	64	0	0	0
3639	580	"arg_1"	"decimal"	2	0	1	1
3640	580	"arg_2"	"bigint"	64	0	1	2
3641	581	"res_0"	"bigint"	64	0	0	0
3642	581	"arg_1"	"decimal"	4	0	1	1
3643	581	"arg_2"	"bigint"	64	0	1	2
3644	582	"res_0"	"bigint"	64	0	0	0
3645	582	"arg_1"	"decimal"	9	0	1	1
3646	582	"arg_2"	"bigint"	64	0	1	2
3647	583	"res_0"	"bigint"	64	0	0	0
3648	583	"arg_1"	"decimal"	18	0	1	1
3649	583	"arg_2"	"bigint"	64	0	1	2
3650	584	"res_0"	"bigint"	64	0	0	0
3651	584	"arg_1"	"decimal"	39	0	1	1
3652	584	"arg_2"	"bigint"	64	0	1	2
3653	585	"res_0"	"bigint"	64	0	0	0
3654	585	"arg_1"	"real"	24	0	1	1
3655	585	"arg_2"	"bigint"	64	0	1	2
3656	586	"res_0"	"bigint"	64	0	0	0
3657	586	"arg_1"	"double"	53	0	1	1
3658	586	"arg_2"	"bigint"	64	0	1	2
3659	587	"res_0"	"bigint"	64	0	0	0
3660	587	"arg_1"	"month_interval"	32	0	1	1
3661	587	"arg_2"	"bigint"	64	0	1	2
3662	588	"res_0"	"bigint"	64	0	0	0
3663	588	"arg_1"	"sec_interval"	13	0	1	1
3664	588	"arg_2"	"bigint"	64	0	1	2
3665	589	"res_0"	"bigint"	64	0	0	0
3666	589	"arg_1"	"time"	7	0	1	1
3667	589	"arg_2"	"bigint"	64	0	1	2
3668	590	"res_0"	"bigint"	64	0	0	0
3669	590	"arg_1"	"timetz"	7	0	1	1
3670	590	"arg_2"	"bigint"	64	0	1	2
3671	591	"res_0"	"bigint"	64	0	0	0
3672	591	"arg_1"	"date"	0	0	1	1
3673	591	"arg_2"	"bigint"	64	0	1	2
3674	592	"res_0"	"bigint"	64	0	0	0
3675	592	"arg_1"	"timestamp"	7	0	1	1
3676	592	"arg_2"	"bigint"	64	0	1	2
3677	593	"res_0"	"bigint"	64	0	0	0
3678	593	"arg_1"	"timestamptz"	7	0	1	1
3679	593	"arg_2"	"bigint"	64	0	1	2
3680	594	"res_0"	"bigint"	64	0	0	0
3681	594	"arg_1"	"blob"	0	0	1	1
3682	594	"arg_2"	"bigint"	64	0	1	2
3683	595	"res_0"	"wrd"	64	0	0	0
3684	595	"arg_1"	"oid"	63	0	1	1
3685	595	"arg_2"	"wrd"	64	0	1	2
3686	596	"res_0"	"wrd"	64	0	0	0
3687	596	"arg_1"	"tinyint"	8	0	1	1
3688	596	"arg_2"	"wrd"	64	0	1	2
3689	597	"res_0"	"wrd"	64	0	0	0
3690	597	"arg_1"	"smallint"	16	0	1	1
3691	597	"arg_2"	"wrd"	64	0	1	2
3692	598	"res_0"	"wrd"	64	0	0	0
3693	598	"arg_1"	"int"	32	0	1	1
3694	598	"arg_2"	"wrd"	64	0	1	2
3695	599	"res_0"	"wrd"	64	0	0	0
3696	599	"arg_1"	"bigint"	64	0	1	1
3697	599	"arg_2"	"wrd"	64	0	1	2
3698	600	"res_0"	"wrd"	64	0	0	0
3699	600	"arg_1"	"wrd"	64	0	1	1
3700	600	"arg_2"	"wrd"	64	0	1	2
3701	601	"res_0"	"wrd"	64	0	0	0
3702	601	"arg_1"	"hugeint"	128	0	1	1
3703	601	"arg_2"	"wrd"	64	0	1	2
3704	602	"res_0"	"wrd"	64	0	0	0
3705	602	"arg_1"	"decimal"	2	0	1	1
3706	602	"arg_2"	"wrd"	64	0	1	2
3707	603	"res_0"	"wrd"	64	0	0	0
3708	603	"arg_1"	"decimal"	4	0	1	1
3709	603	"arg_2"	"wrd"	64	0	1	2
3710	604	"res_0"	"wrd"	64	0	0	0
3711	604	"arg_1"	"decimal"	9	0	1	1
3712	604	"arg_2"	"wrd"	64	0	1	2
3713	605	"res_0"	"wrd"	64	0	0	0
3714	605	"arg_1"	"decimal"	18	0	1	1
3715	605	"arg_2"	"wrd"	64	0	1	2
3716	606	"res_0"	"wrd"	64	0	0	0
3717	606	"arg_1"	"decimal"	39	0	1	1
3718	606	"arg_2"	"wrd"	64	0	1	2
3719	607	"res_0"	"wrd"	64	0	0	0
3720	607	"arg_1"	"real"	24	0	1	1
3721	607	"arg_2"	"wrd"	64	0	1	2
3722	608	"res_0"	"wrd"	64	0	0	0
3723	608	"arg_1"	"double"	53	0	1	1
3724	608	"arg_2"	"wrd"	64	0	1	2
3725	609	"res_0"	"wrd"	64	0	0	0
3726	609	"arg_1"	"month_interval"	32	0	1	1
3727	609	"arg_2"	"wrd"	64	0	1	2
3728	610	"res_0"	"wrd"	64	0	0	0
3729	610	"arg_1"	"sec_interval"	13	0	1	1
3730	610	"arg_2"	"wrd"	64	0	1	2
3731	611	"res_0"	"wrd"	64	0	0	0
3732	611	"arg_1"	"time"	7	0	1	1
3733	611	"arg_2"	"wrd"	64	0	1	2
3734	612	"res_0"	"wrd"	64	0	0	0
3735	612	"arg_1"	"timetz"	7	0	1	1
3736	612	"arg_2"	"wrd"	64	0	1	2
3737	613	"res_0"	"wrd"	64	0	0	0
3738	613	"arg_1"	"date"	0	0	1	1
3739	613	"arg_2"	"wrd"	64	0	1	2
3740	614	"res_0"	"wrd"	64	0	0	0
3741	614	"arg_1"	"timestamp"	7	0	1	1
3742	614	"arg_2"	"wrd"	64	0	1	2
3743	615	"res_0"	"wrd"	64	0	0	0
3744	615	"arg_1"	"timestamptz"	7	0	1	1
3745	615	"arg_2"	"wrd"	64	0	1	2
3746	616	"res_0"	"wrd"	64	0	0	0
3747	616	"arg_1"	"blob"	0	0	1	1
3748	616	"arg_2"	"wrd"	64	0	1	2
3749	617	"res_0"	"hugeint"	128	0	0	0
3750	617	"arg_1"	"oid"	63	0	1	1
3751	617	"arg_2"	"hugeint"	128	0	1	2
3752	618	"res_0"	"hugeint"	128	0	0	0
3753	618	"arg_1"	"tinyint"	8	0	1	1
3754	618	"arg_2"	"hugeint"	128	0	1	2
3755	619	"res_0"	"hugeint"	128	0	0	0
3756	619	"arg_1"	"smallint"	16	0	1	1
3757	619	"arg_2"	"hugeint"	128	0	1	2
3758	620	"res_0"	"hugeint"	128	0	0	0
3759	620	"arg_1"	"int"	32	0	1	1
3760	620	"arg_2"	"hugeint"	128	0	1	2
3761	621	"res_0"	"hugeint"	128	0	0	0
3762	621	"arg_1"	"bigint"	64	0	1	1
3763	621	"arg_2"	"hugeint"	128	0	1	2
3764	622	"res_0"	"hugeint"	128	0	0	0
3765	622	"arg_1"	"wrd"	64	0	1	1
3766	622	"arg_2"	"hugeint"	128	0	1	2
3767	623	"res_0"	"hugeint"	128	0	0	0
3768	623	"arg_1"	"hugeint"	128	0	1	1
3769	623	"arg_2"	"hugeint"	128	0	1	2
3770	624	"res_0"	"hugeint"	128	0	0	0
3771	624	"arg_1"	"decimal"	2	0	1	1
3772	624	"arg_2"	"hugeint"	128	0	1	2
3773	625	"res_0"	"hugeint"	128	0	0	0
3774	625	"arg_1"	"decimal"	4	0	1	1
3775	625	"arg_2"	"hugeint"	128	0	1	2
3776	626	"res_0"	"hugeint"	128	0	0	0
3777	626	"arg_1"	"decimal"	9	0	1	1
3778	626	"arg_2"	"hugeint"	128	0	1	2
3779	627	"res_0"	"hugeint"	128	0	0	0
3780	627	"arg_1"	"decimal"	18	0	1	1
3781	627	"arg_2"	"hugeint"	128	0	1	2
3782	628	"res_0"	"hugeint"	128	0	0	0
3783	628	"arg_1"	"decimal"	39	0	1	1
3784	628	"arg_2"	"hugeint"	128	0	1	2
3785	629	"res_0"	"hugeint"	128	0	0	0
3786	629	"arg_1"	"real"	24	0	1	1
3787	629	"arg_2"	"hugeint"	128	0	1	2
3788	630	"res_0"	"hugeint"	128	0	0	0
3789	630	"arg_1"	"double"	53	0	1	1
3790	630	"arg_2"	"hugeint"	128	0	1	2
3791	631	"res_0"	"hugeint"	128	0	0	0
3792	631	"arg_1"	"month_interval"	32	0	1	1
3793	631	"arg_2"	"hugeint"	128	0	1	2
3794	632	"res_0"	"hugeint"	128	0	0	0
3795	632	"arg_1"	"sec_interval"	13	0	1	1
3796	632	"arg_2"	"hugeint"	128	0	1	2
3797	633	"res_0"	"hugeint"	128	0	0	0
3798	633	"arg_1"	"time"	7	0	1	1
3799	633	"arg_2"	"hugeint"	128	0	1	2
3800	634	"res_0"	"hugeint"	128	0	0	0
3801	634	"arg_1"	"timetz"	7	0	1	1
3802	634	"arg_2"	"hugeint"	128	0	1	2
3803	635	"res_0"	"hugeint"	128	0	0	0
3804	635	"arg_1"	"date"	0	0	1	1
3805	635	"arg_2"	"hugeint"	128	0	1	2
3806	636	"res_0"	"hugeint"	128	0	0	0
3807	636	"arg_1"	"timestamp"	7	0	1	1
3808	636	"arg_2"	"hugeint"	128	0	1	2
3809	637	"res_0"	"hugeint"	128	0	0	0
3810	637	"arg_1"	"timestamptz"	7	0	1	1
3811	637	"arg_2"	"hugeint"	128	0	1	2
3812	638	"res_0"	"hugeint"	128	0	0	0
3813	638	"arg_1"	"blob"	0	0	1	1
3814	638	"arg_2"	"hugeint"	128	0	1	2
3815	639	"res_0"	"decimal"	2	0	0	0
3816	639	"arg_1"	"oid"	63	0	1	1
3817	639	"arg_2"	"decimal"	2	0	1	2
3818	640	"res_0"	"decimal"	2	0	0	0
3819	640	"arg_1"	"tinyint"	8	0	1	1
3820	640	"arg_2"	"decimal"	2	0	1	2
3821	641	"res_0"	"decimal"	2	0	0	0
3822	641	"arg_1"	"smallint"	16	0	1	1
3823	641	"arg_2"	"decimal"	2	0	1	2
3824	642	"res_0"	"decimal"	2	0	0	0
3825	642	"arg_1"	"int"	32	0	1	1
3826	642	"arg_2"	"decimal"	2	0	1	2
3827	643	"res_0"	"decimal"	2	0	0	0
3828	643	"arg_1"	"bigint"	64	0	1	1
3829	643	"arg_2"	"decimal"	2	0	1	2
3830	644	"res_0"	"decimal"	2	0	0	0
3831	644	"arg_1"	"wrd"	64	0	1	1
3832	644	"arg_2"	"decimal"	2	0	1	2
3833	645	"res_0"	"decimal"	2	0	0	0
3834	645	"arg_1"	"hugeint"	128	0	1	1
3835	645	"arg_2"	"decimal"	2	0	1	2
3836	646	"res_0"	"decimal"	2	0	0	0
3837	646	"arg_1"	"decimal"	2	0	1	1
3838	646	"arg_2"	"decimal"	2	0	1	2
3839	647	"res_0"	"decimal"	2	0	0	0
3840	647	"arg_1"	"decimal"	4	0	1	1
3841	647	"arg_2"	"decimal"	2	0	1	2
3842	648	"res_0"	"decimal"	2	0	0	0
3843	648	"arg_1"	"decimal"	9	0	1	1
3844	648	"arg_2"	"decimal"	2	0	1	2
3845	649	"res_0"	"decimal"	2	0	0	0
3846	649	"arg_1"	"decimal"	18	0	1	1
3847	649	"arg_2"	"decimal"	2	0	1	2
3848	650	"res_0"	"decimal"	2	0	0	0
3849	650	"arg_1"	"decimal"	39	0	1	1
3850	650	"arg_2"	"decimal"	2	0	1	2
3851	651	"res_0"	"decimal"	2	0	0	0
3852	651	"arg_1"	"real"	24	0	1	1
3853	651	"arg_2"	"decimal"	2	0	1	2
3854	652	"res_0"	"decimal"	2	0	0	0
3855	652	"arg_1"	"double"	53	0	1	1
3856	652	"arg_2"	"decimal"	2	0	1	2
3857	653	"res_0"	"decimal"	2	0	0	0
3858	653	"arg_1"	"month_interval"	32	0	1	1
3859	653	"arg_2"	"decimal"	2	0	1	2
3860	654	"res_0"	"decimal"	2	0	0	0
3861	654	"arg_1"	"sec_interval"	13	0	1	1
3862	654	"arg_2"	"decimal"	2	0	1	2
3863	655	"res_0"	"decimal"	2	0	0	0
3864	655	"arg_1"	"time"	7	0	1	1
3865	655	"arg_2"	"decimal"	2	0	1	2
3866	656	"res_0"	"decimal"	2	0	0	0
3867	656	"arg_1"	"timetz"	7	0	1	1
3868	656	"arg_2"	"decimal"	2	0	1	2
3869	657	"res_0"	"decimal"	2	0	0	0
3870	657	"arg_1"	"date"	0	0	1	1
3871	657	"arg_2"	"decimal"	2	0	1	2
3872	658	"res_0"	"decimal"	2	0	0	0
3873	658	"arg_1"	"timestamp"	7	0	1	1
3874	658	"arg_2"	"decimal"	2	0	1	2
3875	659	"res_0"	"decimal"	2	0	0	0
3876	659	"arg_1"	"timestamptz"	7	0	1	1
3877	659	"arg_2"	"decimal"	2	0	1	2
3878	660	"res_0"	"decimal"	2	0	0	0
3879	660	"arg_1"	"blob"	0	0	1	1
3880	660	"arg_2"	"decimal"	2	0	1	2
3881	661	"res_0"	"decimal"	4	0	0	0
3882	661	"arg_1"	"oid"	63	0	1	1
3883	661	"arg_2"	"decimal"	4	0	1	2
3884	662	"res_0"	"decimal"	4	0	0	0
3885	662	"arg_1"	"tinyint"	8	0	1	1
3886	662	"arg_2"	"decimal"	4	0	1	2
3887	663	"res_0"	"decimal"	4	0	0	0
3888	663	"arg_1"	"smallint"	16	0	1	1
3889	663	"arg_2"	"decimal"	4	0	1	2
3890	664	"res_0"	"decimal"	4	0	0	0
3891	664	"arg_1"	"int"	32	0	1	1
3892	664	"arg_2"	"decimal"	4	0	1	2
3893	665	"res_0"	"decimal"	4	0	0	0
3894	665	"arg_1"	"bigint"	64	0	1	1
3895	665	"arg_2"	"decimal"	4	0	1	2
3896	666	"res_0"	"decimal"	4	0	0	0
3897	666	"arg_1"	"wrd"	64	0	1	1
3898	666	"arg_2"	"decimal"	4	0	1	2
3899	667	"res_0"	"decimal"	4	0	0	0
3900	667	"arg_1"	"hugeint"	128	0	1	1
3901	667	"arg_2"	"decimal"	4	0	1	2
3902	668	"res_0"	"decimal"	4	0	0	0
3903	668	"arg_1"	"decimal"	2	0	1	1
3904	668	"arg_2"	"decimal"	4	0	1	2
3905	669	"res_0"	"decimal"	4	0	0	0
3906	669	"arg_1"	"decimal"	4	0	1	1
3907	669	"arg_2"	"decimal"	4	0	1	2
3908	670	"res_0"	"decimal"	4	0	0	0
3909	670	"arg_1"	"decimal"	9	0	1	1
3910	670	"arg_2"	"decimal"	4	0	1	2
3911	671	"res_0"	"decimal"	4	0	0	0
3912	671	"arg_1"	"decimal"	18	0	1	1
3913	671	"arg_2"	"decimal"	4	0	1	2
3914	672	"res_0"	"decimal"	4	0	0	0
3915	672	"arg_1"	"decimal"	39	0	1	1
3916	672	"arg_2"	"decimal"	4	0	1	2
3917	673	"res_0"	"decimal"	4	0	0	0
3918	673	"arg_1"	"real"	24	0	1	1
3919	673	"arg_2"	"decimal"	4	0	1	2
3920	674	"res_0"	"decimal"	4	0	0	0
3921	674	"arg_1"	"double"	53	0	1	1
3922	674	"arg_2"	"decimal"	4	0	1	2
3923	675	"res_0"	"decimal"	4	0	0	0
3924	675	"arg_1"	"month_interval"	32	0	1	1
3925	675	"arg_2"	"decimal"	4	0	1	2
3926	676	"res_0"	"decimal"	4	0	0	0
3927	676	"arg_1"	"sec_interval"	13	0	1	1
3928	676	"arg_2"	"decimal"	4	0	1	2
3929	677	"res_0"	"decimal"	4	0	0	0
3930	677	"arg_1"	"time"	7	0	1	1
3931	677	"arg_2"	"decimal"	4	0	1	2
3932	678	"res_0"	"decimal"	4	0	0	0
3933	678	"arg_1"	"timetz"	7	0	1	1
3934	678	"arg_2"	"decimal"	4	0	1	2
3935	679	"res_0"	"decimal"	4	0	0	0
3936	679	"arg_1"	"date"	0	0	1	1
3937	679	"arg_2"	"decimal"	4	0	1	2
3938	680	"res_0"	"decimal"	4	0	0	0
3939	680	"arg_1"	"timestamp"	7	0	1	1
3940	680	"arg_2"	"decimal"	4	0	1	2
3941	681	"res_0"	"decimal"	4	0	0	0
3942	681	"arg_1"	"timestamptz"	7	0	1	1
3943	681	"arg_2"	"decimal"	4	0	1	2
3944	682	"res_0"	"decimal"	4	0	0	0
3945	682	"arg_1"	"blob"	0	0	1	1
3946	682	"arg_2"	"decimal"	4	0	1	2
3947	683	"res_0"	"decimal"	9	0	0	0
3948	683	"arg_1"	"oid"	63	0	1	1
3949	683	"arg_2"	"decimal"	9	0	1	2
3950	684	"res_0"	"decimal"	9	0	0	0
3951	684	"arg_1"	"tinyint"	8	0	1	1
3952	684	"arg_2"	"decimal"	9	0	1	2
3953	685	"res_0"	"decimal"	9	0	0	0
3954	685	"arg_1"	"smallint"	16	0	1	1
3955	685	"arg_2"	"decimal"	9	0	1	2
3956	686	"res_0"	"decimal"	9	0	0	0
3957	686	"arg_1"	"int"	32	0	1	1
3958	686	"arg_2"	"decimal"	9	0	1	2
3959	687	"res_0"	"decimal"	9	0	0	0
3960	687	"arg_1"	"bigint"	64	0	1	1
3961	687	"arg_2"	"decimal"	9	0	1	2
3962	688	"res_0"	"decimal"	9	0	0	0
3963	688	"arg_1"	"wrd"	64	0	1	1
3964	688	"arg_2"	"decimal"	9	0	1	2
3965	689	"res_0"	"decimal"	9	0	0	0
3966	689	"arg_1"	"hugeint"	128	0	1	1
3967	689	"arg_2"	"decimal"	9	0	1	2
3968	690	"res_0"	"decimal"	9	0	0	0
3969	690	"arg_1"	"decimal"	2	0	1	1
3970	690	"arg_2"	"decimal"	9	0	1	2
3971	691	"res_0"	"decimal"	9	0	0	0
3972	691	"arg_1"	"decimal"	4	0	1	1
3973	691	"arg_2"	"decimal"	9	0	1	2
3974	692	"res_0"	"decimal"	9	0	0	0
3975	692	"arg_1"	"decimal"	9	0	1	1
3976	692	"arg_2"	"decimal"	9	0	1	2
3977	693	"res_0"	"decimal"	9	0	0	0
3978	693	"arg_1"	"decimal"	18	0	1	1
3979	693	"arg_2"	"decimal"	9	0	1	2
3980	694	"res_0"	"decimal"	9	0	0	0
3981	694	"arg_1"	"decimal"	39	0	1	1
3982	694	"arg_2"	"decimal"	9	0	1	2
3983	695	"res_0"	"decimal"	9	0	0	0
3984	695	"arg_1"	"real"	24	0	1	1
3985	695	"arg_2"	"decimal"	9	0	1	2
3986	696	"res_0"	"decimal"	9	0	0	0
3987	696	"arg_1"	"double"	53	0	1	1
3988	696	"arg_2"	"decimal"	9	0	1	2
3989	697	"res_0"	"decimal"	9	0	0	0
3990	697	"arg_1"	"month_interval"	32	0	1	1
3991	697	"arg_2"	"decimal"	9	0	1	2
3992	698	"res_0"	"decimal"	9	0	0	0
3993	698	"arg_1"	"sec_interval"	13	0	1	1
3994	698	"arg_2"	"decimal"	9	0	1	2
3995	699	"res_0"	"decimal"	9	0	0	0
3996	699	"arg_1"	"time"	7	0	1	1
3997	699	"arg_2"	"decimal"	9	0	1	2
3998	700	"res_0"	"decimal"	9	0	0	0
3999	700	"arg_1"	"timetz"	7	0	1	1
4000	700	"arg_2"	"decimal"	9	0	1	2
4001	701	"res_0"	"decimal"	9	0	0	0
4002	701	"arg_1"	"date"	0	0	1	1
4003	701	"arg_2"	"decimal"	9	0	1	2
4004	702	"res_0"	"decimal"	9	0	0	0
4005	702	"arg_1"	"timestamp"	7	0	1	1
4006	702	"arg_2"	"decimal"	9	0	1	2
4007	703	"res_0"	"decimal"	9	0	0	0
4008	703	"arg_1"	"timestamptz"	7	0	1	1
4009	703	"arg_2"	"decimal"	9	0	1	2
4010	704	"res_0"	"decimal"	9	0	0	0
4011	704	"arg_1"	"blob"	0	0	1	1
4012	704	"arg_2"	"decimal"	9	0	1	2
4013	705	"res_0"	"decimal"	18	0	0	0
4014	705	"arg_1"	"oid"	63	0	1	1
4015	705	"arg_2"	"decimal"	18	0	1	2
4016	706	"res_0"	"decimal"	18	0	0	0
4017	706	"arg_1"	"tinyint"	8	0	1	1
4018	706	"arg_2"	"decimal"	18	0	1	2
4019	707	"res_0"	"decimal"	18	0	0	0
4020	707	"arg_1"	"smallint"	16	0	1	1
4021	707	"arg_2"	"decimal"	18	0	1	2
4022	708	"res_0"	"decimal"	18	0	0	0
4023	708	"arg_1"	"int"	32	0	1	1
4024	708	"arg_2"	"decimal"	18	0	1	2
4025	709	"res_0"	"decimal"	18	0	0	0
4026	709	"arg_1"	"bigint"	64	0	1	1
4027	709	"arg_2"	"decimal"	18	0	1	2
4028	710	"res_0"	"decimal"	18	0	0	0
4029	710	"arg_1"	"wrd"	64	0	1	1
4030	710	"arg_2"	"decimal"	18	0	1	2
4031	711	"res_0"	"decimal"	18	0	0	0
4032	711	"arg_1"	"hugeint"	128	0	1	1
4033	711	"arg_2"	"decimal"	18	0	1	2
4034	712	"res_0"	"decimal"	18	0	0	0
4035	712	"arg_1"	"decimal"	2	0	1	1
4036	712	"arg_2"	"decimal"	18	0	1	2
4037	713	"res_0"	"decimal"	18	0	0	0
4038	713	"arg_1"	"decimal"	4	0	1	1
4039	713	"arg_2"	"decimal"	18	0	1	2
4040	714	"res_0"	"decimal"	18	0	0	0
4041	714	"arg_1"	"decimal"	9	0	1	1
4042	714	"arg_2"	"decimal"	18	0	1	2
4043	715	"res_0"	"decimal"	18	0	0	0
4044	715	"arg_1"	"decimal"	18	0	1	1
4045	715	"arg_2"	"decimal"	18	0	1	2
4046	716	"res_0"	"decimal"	18	0	0	0
4047	716	"arg_1"	"decimal"	39	0	1	1
4048	716	"arg_2"	"decimal"	18	0	1	2
4049	717	"res_0"	"decimal"	18	0	0	0
4050	717	"arg_1"	"real"	24	0	1	1
4051	717	"arg_2"	"decimal"	18	0	1	2
4052	718	"res_0"	"decimal"	18	0	0	0
4053	718	"arg_1"	"double"	53	0	1	1
4054	718	"arg_2"	"decimal"	18	0	1	2
4055	719	"res_0"	"decimal"	18	0	0	0
4056	719	"arg_1"	"month_interval"	32	0	1	1
4057	719	"arg_2"	"decimal"	18	0	1	2
4058	720	"res_0"	"decimal"	18	0	0	0
4059	720	"arg_1"	"sec_interval"	13	0	1	1
4060	720	"arg_2"	"decimal"	18	0	1	2
4061	721	"res_0"	"decimal"	18	0	0	0
4062	721	"arg_1"	"time"	7	0	1	1
4063	721	"arg_2"	"decimal"	18	0	1	2
4064	722	"res_0"	"decimal"	18	0	0	0
4065	722	"arg_1"	"timetz"	7	0	1	1
4066	722	"arg_2"	"decimal"	18	0	1	2
4067	723	"res_0"	"decimal"	18	0	0	0
4068	723	"arg_1"	"date"	0	0	1	1
4069	723	"arg_2"	"decimal"	18	0	1	2
4070	724	"res_0"	"decimal"	18	0	0	0
4071	724	"arg_1"	"timestamp"	7	0	1	1
4072	724	"arg_2"	"decimal"	18	0	1	2
4073	725	"res_0"	"decimal"	18	0	0	0
4074	725	"arg_1"	"timestamptz"	7	0	1	1
4075	725	"arg_2"	"decimal"	18	0	1	2
4076	726	"res_0"	"decimal"	18	0	0	0
4077	726	"arg_1"	"blob"	0	0	1	1
4078	726	"arg_2"	"decimal"	18	0	1	2
4079	727	"res_0"	"decimal"	39	0	0	0
4080	727	"arg_1"	"oid"	63	0	1	1
4081	727	"arg_2"	"decimal"	39	0	1	2
4082	728	"res_0"	"decimal"	39	0	0	0
4083	728	"arg_1"	"tinyint"	8	0	1	1
4084	728	"arg_2"	"decimal"	39	0	1	2
4085	729	"res_0"	"decimal"	39	0	0	0
4086	729	"arg_1"	"smallint"	16	0	1	1
4087	729	"arg_2"	"decimal"	39	0	1	2
4088	730	"res_0"	"decimal"	39	0	0	0
4089	730	"arg_1"	"int"	32	0	1	1
4090	730	"arg_2"	"decimal"	39	0	1	2
4091	731	"res_0"	"decimal"	39	0	0	0
4092	731	"arg_1"	"bigint"	64	0	1	1
4093	731	"arg_2"	"decimal"	39	0	1	2
4094	732	"res_0"	"decimal"	39	0	0	0
4095	732	"arg_1"	"wrd"	64	0	1	1
4096	732	"arg_2"	"decimal"	39	0	1	2
4097	733	"res_0"	"decimal"	39	0	0	0
4098	733	"arg_1"	"hugeint"	128	0	1	1
4099	733	"arg_2"	"decimal"	39	0	1	2
4100	734	"res_0"	"decimal"	39	0	0	0
4101	734	"arg_1"	"decimal"	2	0	1	1
4102	734	"arg_2"	"decimal"	39	0	1	2
4103	735	"res_0"	"decimal"	39	0	0	0
4104	735	"arg_1"	"decimal"	4	0	1	1
4105	735	"arg_2"	"decimal"	39	0	1	2
4106	736	"res_0"	"decimal"	39	0	0	0
4107	736	"arg_1"	"decimal"	9	0	1	1
4108	736	"arg_2"	"decimal"	39	0	1	2
4109	737	"res_0"	"decimal"	39	0	0	0
4110	737	"arg_1"	"decimal"	18	0	1	1
4111	737	"arg_2"	"decimal"	39	0	1	2
4112	738	"res_0"	"decimal"	39	0	0	0
4113	738	"arg_1"	"decimal"	39	0	1	1
4114	738	"arg_2"	"decimal"	39	0	1	2
4115	739	"res_0"	"decimal"	39	0	0	0
4116	739	"arg_1"	"real"	24	0	1	1
4117	739	"arg_2"	"decimal"	39	0	1	2
4118	740	"res_0"	"decimal"	39	0	0	0
4119	740	"arg_1"	"double"	53	0	1	1
4120	740	"arg_2"	"decimal"	39	0	1	2
4121	741	"res_0"	"decimal"	39	0	0	0
4122	741	"arg_1"	"month_interval"	32	0	1	1
4123	741	"arg_2"	"decimal"	39	0	1	2
4124	742	"res_0"	"decimal"	39	0	0	0
4125	742	"arg_1"	"sec_interval"	13	0	1	1
4126	742	"arg_2"	"decimal"	39	0	1	2
4127	743	"res_0"	"decimal"	39	0	0	0
4128	743	"arg_1"	"time"	7	0	1	1
4129	743	"arg_2"	"decimal"	39	0	1	2
4130	744	"res_0"	"decimal"	39	0	0	0
4131	744	"arg_1"	"timetz"	7	0	1	1
4132	744	"arg_2"	"decimal"	39	0	1	2
4133	745	"res_0"	"decimal"	39	0	0	0
4134	745	"arg_1"	"date"	0	0	1	1
4135	745	"arg_2"	"decimal"	39	0	1	2
4136	746	"res_0"	"decimal"	39	0	0	0
4137	746	"arg_1"	"timestamp"	7	0	1	1
4138	746	"arg_2"	"decimal"	39	0	1	2
4139	747	"res_0"	"decimal"	39	0	0	0
4140	747	"arg_1"	"timestamptz"	7	0	1	1
4141	747	"arg_2"	"decimal"	39	0	1	2
4142	748	"res_0"	"decimal"	39	0	0	0
4143	748	"arg_1"	"blob"	0	0	1	1
4144	748	"arg_2"	"decimal"	39	0	1	2
4145	749	"res_0"	"real"	24	0	0	0
4146	749	"arg_1"	"oid"	63	0	1	1
4147	749	"arg_2"	"real"	24	0	1	2
4148	750	"res_0"	"real"	24	0	0	0
4149	750	"arg_1"	"tinyint"	8	0	1	1
4150	750	"arg_2"	"real"	24	0	1	2
4151	751	"res_0"	"real"	24	0	0	0
4152	751	"arg_1"	"smallint"	16	0	1	1
4153	751	"arg_2"	"real"	24	0	1	2
4154	752	"res_0"	"real"	24	0	0	0
4155	752	"arg_1"	"int"	32	0	1	1
4156	752	"arg_2"	"real"	24	0	1	2
4157	753	"res_0"	"real"	24	0	0	0
4158	753	"arg_1"	"bigint"	64	0	1	1
4159	753	"arg_2"	"real"	24	0	1	2
4160	754	"res_0"	"real"	24	0	0	0
4161	754	"arg_1"	"wrd"	64	0	1	1
4162	754	"arg_2"	"real"	24	0	1	2
4163	755	"res_0"	"real"	24	0	0	0
4164	755	"arg_1"	"hugeint"	128	0	1	1
4165	755	"arg_2"	"real"	24	0	1	2
4166	756	"res_0"	"real"	24	0	0	0
4167	756	"arg_1"	"decimal"	2	0	1	1
4168	756	"arg_2"	"real"	24	0	1	2
4169	757	"res_0"	"real"	24	0	0	0
4170	757	"arg_1"	"decimal"	4	0	1	1
4171	757	"arg_2"	"real"	24	0	1	2
4172	758	"res_0"	"real"	24	0	0	0
4173	758	"arg_1"	"decimal"	9	0	1	1
4174	758	"arg_2"	"real"	24	0	1	2
4175	759	"res_0"	"real"	24	0	0	0
4176	759	"arg_1"	"decimal"	18	0	1	1
4177	759	"arg_2"	"real"	24	0	1	2
4178	760	"res_0"	"real"	24	0	0	0
4179	760	"arg_1"	"decimal"	39	0	1	1
4180	760	"arg_2"	"real"	24	0	1	2
4181	761	"res_0"	"real"	24	0	0	0
4182	761	"arg_1"	"real"	24	0	1	1
4183	761	"arg_2"	"real"	24	0	1	2
4184	762	"res_0"	"real"	24	0	0	0
4185	762	"arg_1"	"double"	53	0	1	1
4186	762	"arg_2"	"real"	24	0	1	2
4187	763	"res_0"	"real"	24	0	0	0
4188	763	"arg_1"	"month_interval"	32	0	1	1
4189	763	"arg_2"	"real"	24	0	1	2
4190	764	"res_0"	"real"	24	0	0	0
4191	764	"arg_1"	"sec_interval"	13	0	1	1
4192	764	"arg_2"	"real"	24	0	1	2
4193	765	"res_0"	"real"	24	0	0	0
4194	765	"arg_1"	"time"	7	0	1	1
4195	765	"arg_2"	"real"	24	0	1	2
4196	766	"res_0"	"real"	24	0	0	0
4197	766	"arg_1"	"timetz"	7	0	1	1
4198	766	"arg_2"	"real"	24	0	1	2
4199	767	"res_0"	"real"	24	0	0	0
4200	767	"arg_1"	"date"	0	0	1	1
4201	767	"arg_2"	"real"	24	0	1	2
4202	768	"res_0"	"real"	24	0	0	0
4203	768	"arg_1"	"timestamp"	7	0	1	1
4204	768	"arg_2"	"real"	24	0	1	2
4205	769	"res_0"	"real"	24	0	0	0
4206	769	"arg_1"	"timestamptz"	7	0	1	1
4207	769	"arg_2"	"real"	24	0	1	2
4208	770	"res_0"	"real"	24	0	0	0
4209	770	"arg_1"	"blob"	0	0	1	1
4210	770	"arg_2"	"real"	24	0	1	2
4211	771	"res_0"	"double"	53	0	0	0
4212	771	"arg_1"	"oid"	63	0	1	1
4213	771	"arg_2"	"double"	53	0	1	2
4214	772	"res_0"	"double"	53	0	0	0
4215	772	"arg_1"	"tinyint"	8	0	1	1
4216	772	"arg_2"	"double"	53	0	1	2
4217	773	"res_0"	"double"	53	0	0	0
4218	773	"arg_1"	"smallint"	16	0	1	1
4219	773	"arg_2"	"double"	53	0	1	2
4220	774	"res_0"	"double"	53	0	0	0
4221	774	"arg_1"	"int"	32	0	1	1
4222	774	"arg_2"	"double"	53	0	1	2
4223	775	"res_0"	"double"	53	0	0	0
4224	775	"arg_1"	"bigint"	64	0	1	1
4225	775	"arg_2"	"double"	53	0	1	2
4226	776	"res_0"	"double"	53	0	0	0
4227	776	"arg_1"	"wrd"	64	0	1	1
4228	776	"arg_2"	"double"	53	0	1	2
4229	777	"res_0"	"double"	53	0	0	0
4230	777	"arg_1"	"hugeint"	128	0	1	1
4231	777	"arg_2"	"double"	53	0	1	2
4232	778	"res_0"	"double"	53	0	0	0
4233	778	"arg_1"	"decimal"	2	0	1	1
4234	778	"arg_2"	"double"	53	0	1	2
4235	779	"res_0"	"double"	53	0	0	0
4236	779	"arg_1"	"decimal"	4	0	1	1
4237	779	"arg_2"	"double"	53	0	1	2
4238	780	"res_0"	"double"	53	0	0	0
4239	780	"arg_1"	"decimal"	9	0	1	1
4240	780	"arg_2"	"double"	53	0	1	2
4241	781	"res_0"	"double"	53	0	0	0
4242	781	"arg_1"	"decimal"	18	0	1	1
4243	781	"arg_2"	"double"	53	0	1	2
4244	782	"res_0"	"double"	53	0	0	0
4245	782	"arg_1"	"decimal"	39	0	1	1
4246	782	"arg_2"	"double"	53	0	1	2
4247	783	"res_0"	"double"	53	0	0	0
4248	783	"arg_1"	"real"	24	0	1	1
4249	783	"arg_2"	"double"	53	0	1	2
4250	784	"res_0"	"double"	53	0	0	0
4251	784	"arg_1"	"double"	53	0	1	1
4252	784	"arg_2"	"double"	53	0	1	2
4253	785	"res_0"	"double"	53	0	0	0
4254	785	"arg_1"	"month_interval"	32	0	1	1
4255	785	"arg_2"	"double"	53	0	1	2
4256	786	"res_0"	"double"	53	0	0	0
4257	786	"arg_1"	"sec_interval"	13	0	1	1
4258	786	"arg_2"	"double"	53	0	1	2
4259	787	"res_0"	"double"	53	0	0	0
4260	787	"arg_1"	"time"	7	0	1	1
4261	787	"arg_2"	"double"	53	0	1	2
4262	788	"res_0"	"double"	53	0	0	0
4263	788	"arg_1"	"timetz"	7	0	1	1
4264	788	"arg_2"	"double"	53	0	1	2
4265	789	"res_0"	"double"	53	0	0	0
4266	789	"arg_1"	"date"	0	0	1	1
4267	789	"arg_2"	"double"	53	0	1	2
4268	790	"res_0"	"double"	53	0	0	0
4269	790	"arg_1"	"timestamp"	7	0	1	1
4270	790	"arg_2"	"double"	53	0	1	2
4271	791	"res_0"	"double"	53	0	0	0
4272	791	"arg_1"	"timestamptz"	7	0	1	1
4273	791	"arg_2"	"double"	53	0	1	2
4274	792	"res_0"	"double"	53	0	0	0
4275	792	"arg_1"	"blob"	0	0	1	1
4276	792	"arg_2"	"double"	53	0	1	2
4277	793	"res_0"	"month_interval"	32	0	0	0
4278	793	"arg_1"	"oid"	63	0	1	1
4279	793	"arg_2"	"month_interval"	32	0	1	2
4280	794	"res_0"	"month_interval"	32	0	0	0
4281	794	"arg_1"	"tinyint"	8	0	1	1
4282	794	"arg_2"	"month_interval"	32	0	1	2
4283	795	"res_0"	"month_interval"	32	0	0	0
4284	795	"arg_1"	"smallint"	16	0	1	1
4285	795	"arg_2"	"month_interval"	32	0	1	2
4286	796	"res_0"	"month_interval"	32	0	0	0
4287	796	"arg_1"	"int"	32	0	1	1
4288	796	"arg_2"	"month_interval"	32	0	1	2
4289	797	"res_0"	"month_interval"	32	0	0	0
4290	797	"arg_1"	"bigint"	64	0	1	1
4291	797	"arg_2"	"month_interval"	32	0	1	2
4292	798	"res_0"	"month_interval"	32	0	0	0
4293	798	"arg_1"	"wrd"	64	0	1	1
4294	798	"arg_2"	"month_interval"	32	0	1	2
4295	799	"res_0"	"month_interval"	32	0	0	0
4296	799	"arg_1"	"hugeint"	128	0	1	1
4297	799	"arg_2"	"month_interval"	32	0	1	2
4298	800	"res_0"	"month_interval"	32	0	0	0
4299	800	"arg_1"	"decimal"	2	0	1	1
4300	800	"arg_2"	"month_interval"	32	0	1	2
4301	801	"res_0"	"month_interval"	32	0	0	0
4302	801	"arg_1"	"decimal"	4	0	1	1
4303	801	"arg_2"	"month_interval"	32	0	1	2
4304	802	"res_0"	"month_interval"	32	0	0	0
4305	802	"arg_1"	"decimal"	9	0	1	1
4306	802	"arg_2"	"month_interval"	32	0	1	2
4307	803	"res_0"	"month_interval"	32	0	0	0
4308	803	"arg_1"	"decimal"	18	0	1	1
4309	803	"arg_2"	"month_interval"	32	0	1	2
4310	804	"res_0"	"month_interval"	32	0	0	0
4311	804	"arg_1"	"decimal"	39	0	1	1
4312	804	"arg_2"	"month_interval"	32	0	1	2
4313	805	"res_0"	"month_interval"	32	0	0	0
4314	805	"arg_1"	"real"	24	0	1	1
4315	805	"arg_2"	"month_interval"	32	0	1	2
4316	806	"res_0"	"month_interval"	32	0	0	0
4317	806	"arg_1"	"double"	53	0	1	1
4318	806	"arg_2"	"month_interval"	32	0	1	2
4319	807	"res_0"	"month_interval"	32	0	0	0
4320	807	"arg_1"	"month_interval"	32	0	1	1
4321	807	"arg_2"	"month_interval"	32	0	1	2
4322	808	"res_0"	"month_interval"	32	0	0	0
4323	808	"arg_1"	"sec_interval"	13	0	1	1
4324	808	"arg_2"	"month_interval"	32	0	1	2
4325	809	"res_0"	"month_interval"	32	0	0	0
4326	809	"arg_1"	"time"	7	0	1	1
4327	809	"arg_2"	"month_interval"	32	0	1	2
4328	810	"res_0"	"month_interval"	32	0	0	0
4329	810	"arg_1"	"timetz"	7	0	1	1
4330	810	"arg_2"	"month_interval"	32	0	1	2
4331	811	"res_0"	"month_interval"	32	0	0	0
4332	811	"arg_1"	"date"	0	0	1	1
4333	811	"arg_2"	"month_interval"	32	0	1	2
4334	812	"res_0"	"month_interval"	32	0	0	0
4335	812	"arg_1"	"timestamp"	7	0	1	1
4336	812	"arg_2"	"month_interval"	32	0	1	2
4337	813	"res_0"	"month_interval"	32	0	0	0
4338	813	"arg_1"	"timestamptz"	7	0	1	1
4339	813	"arg_2"	"month_interval"	32	0	1	2
4340	814	"res_0"	"month_interval"	32	0	0	0
4341	814	"arg_1"	"blob"	0	0	1	1
4342	814	"arg_2"	"month_interval"	32	0	1	2
4343	815	"res_0"	"sec_interval"	13	0	0	0
4344	815	"arg_1"	"oid"	63	0	1	1
4345	815	"arg_2"	"sec_interval"	13	0	1	2
4346	816	"res_0"	"sec_interval"	13	0	0	0
4347	816	"arg_1"	"tinyint"	8	0	1	1
4348	816	"arg_2"	"sec_interval"	13	0	1	2
4349	817	"res_0"	"sec_interval"	13	0	0	0
4350	817	"arg_1"	"smallint"	16	0	1	1
4351	817	"arg_2"	"sec_interval"	13	0	1	2
4352	818	"res_0"	"sec_interval"	13	0	0	0
4353	818	"arg_1"	"int"	32	0	1	1
4354	818	"arg_2"	"sec_interval"	13	0	1	2
4355	819	"res_0"	"sec_interval"	13	0	0	0
4356	819	"arg_1"	"bigint"	64	0	1	1
4357	819	"arg_2"	"sec_interval"	13	0	1	2
4358	820	"res_0"	"sec_interval"	13	0	0	0
4359	820	"arg_1"	"wrd"	64	0	1	1
4360	820	"arg_2"	"sec_interval"	13	0	1	2
4361	821	"res_0"	"sec_interval"	13	0	0	0
4362	821	"arg_1"	"hugeint"	128	0	1	1
4363	821	"arg_2"	"sec_interval"	13	0	1	2
4364	822	"res_0"	"sec_interval"	13	0	0	0
4365	822	"arg_1"	"decimal"	2	0	1	1
4366	822	"arg_2"	"sec_interval"	13	0	1	2
4367	823	"res_0"	"sec_interval"	13	0	0	0
4368	823	"arg_1"	"decimal"	4	0	1	1
4369	823	"arg_2"	"sec_interval"	13	0	1	2
4370	824	"res_0"	"sec_interval"	13	0	0	0
4371	824	"arg_1"	"decimal"	9	0	1	1
4372	824	"arg_2"	"sec_interval"	13	0	1	2
4373	825	"res_0"	"sec_interval"	13	0	0	0
4374	825	"arg_1"	"decimal"	18	0	1	1
4375	825	"arg_2"	"sec_interval"	13	0	1	2
4376	826	"res_0"	"sec_interval"	13	0	0	0
4377	826	"arg_1"	"decimal"	39	0	1	1
4378	826	"arg_2"	"sec_interval"	13	0	1	2
4379	827	"res_0"	"sec_interval"	13	0	0	0
4380	827	"arg_1"	"real"	24	0	1	1
4381	827	"arg_2"	"sec_interval"	13	0	1	2
4382	828	"res_0"	"sec_interval"	13	0	0	0
4383	828	"arg_1"	"double"	53	0	1	1
4384	828	"arg_2"	"sec_interval"	13	0	1	2
4385	829	"res_0"	"sec_interval"	13	0	0	0
4386	829	"arg_1"	"month_interval"	32	0	1	1
4387	829	"arg_2"	"sec_interval"	13	0	1	2
4388	830	"res_0"	"sec_interval"	13	0	0	0
4389	830	"arg_1"	"sec_interval"	13	0	1	1
4390	830	"arg_2"	"sec_interval"	13	0	1	2
4391	831	"res_0"	"sec_interval"	13	0	0	0
4392	831	"arg_1"	"time"	7	0	1	1
4393	831	"arg_2"	"sec_interval"	13	0	1	2
4394	832	"res_0"	"sec_interval"	13	0	0	0
4395	832	"arg_1"	"timetz"	7	0	1	1
4396	832	"arg_2"	"sec_interval"	13	0	1	2
4397	833	"res_0"	"sec_interval"	13	0	0	0
4398	833	"arg_1"	"date"	0	0	1	1
4399	833	"arg_2"	"sec_interval"	13	0	1	2
4400	834	"res_0"	"sec_interval"	13	0	0	0
4401	834	"arg_1"	"timestamp"	7	0	1	1
4402	834	"arg_2"	"sec_interval"	13	0	1	2
4403	835	"res_0"	"sec_interval"	13	0	0	0
4404	835	"arg_1"	"timestamptz"	7	0	1	1
4405	835	"arg_2"	"sec_interval"	13	0	1	2
4406	836	"res_0"	"sec_interval"	13	0	0	0
4407	836	"arg_1"	"blob"	0	0	1	1
4408	836	"arg_2"	"sec_interval"	13	0	1	2
4409	837	"res_0"	"time"	7	0	0	0
4410	837	"arg_1"	"oid"	63	0	1	1
4411	837	"arg_2"	"time"	7	0	1	2
4412	838	"res_0"	"time"	7	0	0	0
4413	838	"arg_1"	"tinyint"	8	0	1	1
4414	838	"arg_2"	"time"	7	0	1	2
4415	839	"res_0"	"time"	7	0	0	0
4416	839	"arg_1"	"smallint"	16	0	1	1
4417	839	"arg_2"	"time"	7	0	1	2
4418	840	"res_0"	"time"	7	0	0	0
4419	840	"arg_1"	"int"	32	0	1	1
4420	840	"arg_2"	"time"	7	0	1	2
4421	841	"res_0"	"time"	7	0	0	0
4422	841	"arg_1"	"bigint"	64	0	1	1
4423	841	"arg_2"	"time"	7	0	1	2
4424	842	"res_0"	"time"	7	0	0	0
4425	842	"arg_1"	"wrd"	64	0	1	1
4426	842	"arg_2"	"time"	7	0	1	2
4427	843	"res_0"	"time"	7	0	0	0
4428	843	"arg_1"	"hugeint"	128	0	1	1
4429	843	"arg_2"	"time"	7	0	1	2
4430	844	"res_0"	"time"	7	0	0	0
4431	844	"arg_1"	"decimal"	2	0	1	1
4432	844	"arg_2"	"time"	7	0	1	2
4433	845	"res_0"	"time"	7	0	0	0
4434	845	"arg_1"	"decimal"	4	0	1	1
4435	845	"arg_2"	"time"	7	0	1	2
4436	846	"res_0"	"time"	7	0	0	0
4437	846	"arg_1"	"decimal"	9	0	1	1
4438	846	"arg_2"	"time"	7	0	1	2
4439	847	"res_0"	"time"	7	0	0	0
4440	847	"arg_1"	"decimal"	18	0	1	1
4441	847	"arg_2"	"time"	7	0	1	2
4442	848	"res_0"	"time"	7	0	0	0
4443	848	"arg_1"	"decimal"	39	0	1	1
4444	848	"arg_2"	"time"	7	0	1	2
4445	849	"res_0"	"time"	7	0	0	0
4446	849	"arg_1"	"real"	24	0	1	1
4447	849	"arg_2"	"time"	7	0	1	2
4448	850	"res_0"	"time"	7	0	0	0
4449	850	"arg_1"	"double"	53	0	1	1
4450	850	"arg_2"	"time"	7	0	1	2
4451	851	"res_0"	"time"	7	0	0	0
4452	851	"arg_1"	"month_interval"	32	0	1	1
4453	851	"arg_2"	"time"	7	0	1	2
4454	852	"res_0"	"time"	7	0	0	0
4455	852	"arg_1"	"sec_interval"	13	0	1	1
4456	852	"arg_2"	"time"	7	0	1	2
4457	853	"res_0"	"time"	7	0	0	0
4458	853	"arg_1"	"time"	7	0	1	1
4459	853	"arg_2"	"time"	7	0	1	2
4460	854	"res_0"	"time"	7	0	0	0
4461	854	"arg_1"	"timetz"	7	0	1	1
4462	854	"arg_2"	"time"	7	0	1	2
4463	855	"res_0"	"time"	7	0	0	0
4464	855	"arg_1"	"date"	0	0	1	1
4465	855	"arg_2"	"time"	7	0	1	2
4466	856	"res_0"	"time"	7	0	0	0
4467	856	"arg_1"	"timestamp"	7	0	1	1
4468	856	"arg_2"	"time"	7	0	1	2
4469	857	"res_0"	"time"	7	0	0	0
4470	857	"arg_1"	"timestamptz"	7	0	1	1
4471	857	"arg_2"	"time"	7	0	1	2
4472	858	"res_0"	"time"	7	0	0	0
4473	858	"arg_1"	"blob"	0	0	1	1
4474	858	"arg_2"	"time"	7	0	1	2
4475	859	"res_0"	"timetz"	7	0	0	0
4476	859	"arg_1"	"oid"	63	0	1	1
4477	859	"arg_2"	"timetz"	7	0	1	2
4478	860	"res_0"	"timetz"	7	0	0	0
4479	860	"arg_1"	"tinyint"	8	0	1	1
4480	860	"arg_2"	"timetz"	7	0	1	2
4481	861	"res_0"	"timetz"	7	0	0	0
4482	861	"arg_1"	"smallint"	16	0	1	1
4483	861	"arg_2"	"timetz"	7	0	1	2
4484	862	"res_0"	"timetz"	7	0	0	0
4485	862	"arg_1"	"int"	32	0	1	1
4486	862	"arg_2"	"timetz"	7	0	1	2
4487	863	"res_0"	"timetz"	7	0	0	0
4488	863	"arg_1"	"bigint"	64	0	1	1
4489	863	"arg_2"	"timetz"	7	0	1	2
4490	864	"res_0"	"timetz"	7	0	0	0
4491	864	"arg_1"	"wrd"	64	0	1	1
4492	864	"arg_2"	"timetz"	7	0	1	2
4493	865	"res_0"	"timetz"	7	0	0	0
4494	865	"arg_1"	"hugeint"	128	0	1	1
4495	865	"arg_2"	"timetz"	7	0	1	2
4496	866	"res_0"	"timetz"	7	0	0	0
4497	866	"arg_1"	"decimal"	2	0	1	1
4498	866	"arg_2"	"timetz"	7	0	1	2
4499	867	"res_0"	"timetz"	7	0	0	0
4500	867	"arg_1"	"decimal"	4	0	1	1
4501	867	"arg_2"	"timetz"	7	0	1	2
4502	868	"res_0"	"timetz"	7	0	0	0
4503	868	"arg_1"	"decimal"	9	0	1	1
4504	868	"arg_2"	"timetz"	7	0	1	2
4505	869	"res_0"	"timetz"	7	0	0	0
4506	869	"arg_1"	"decimal"	18	0	1	1
4507	869	"arg_2"	"timetz"	7	0	1	2
4508	870	"res_0"	"timetz"	7	0	0	0
4509	870	"arg_1"	"decimal"	39	0	1	1
4510	870	"arg_2"	"timetz"	7	0	1	2
4511	871	"res_0"	"timetz"	7	0	0	0
4512	871	"arg_1"	"real"	24	0	1	1
4513	871	"arg_2"	"timetz"	7	0	1	2
4514	872	"res_0"	"timetz"	7	0	0	0
4515	872	"arg_1"	"double"	53	0	1	1
4516	872	"arg_2"	"timetz"	7	0	1	2
4517	873	"res_0"	"timetz"	7	0	0	0
4518	873	"arg_1"	"month_interval"	32	0	1	1
4519	873	"arg_2"	"timetz"	7	0	1	2
4520	874	"res_0"	"timetz"	7	0	0	0
4521	874	"arg_1"	"sec_interval"	13	0	1	1
4522	874	"arg_2"	"timetz"	7	0	1	2
4523	875	"res_0"	"timetz"	7	0	0	0
4524	875	"arg_1"	"time"	7	0	1	1
4525	875	"arg_2"	"timetz"	7	0	1	2
4526	876	"res_0"	"timetz"	7	0	0	0
4527	876	"arg_1"	"timetz"	7	0	1	1
4528	876	"arg_2"	"timetz"	7	0	1	2
4529	877	"res_0"	"timetz"	7	0	0	0
4530	877	"arg_1"	"date"	0	0	1	1
4531	877	"arg_2"	"timetz"	7	0	1	2
4532	878	"res_0"	"timetz"	7	0	0	0
4533	878	"arg_1"	"timestamp"	7	0	1	1
4534	878	"arg_2"	"timetz"	7	0	1	2
4535	879	"res_0"	"timetz"	7	0	0	0
4536	879	"arg_1"	"timestamptz"	7	0	1	1
4537	879	"arg_2"	"timetz"	7	0	1	2
4538	880	"res_0"	"timetz"	7	0	0	0
4539	880	"arg_1"	"blob"	0	0	1	1
4540	880	"arg_2"	"timetz"	7	0	1	2
4541	881	"res_0"	"date"	0	0	0	0
4542	881	"arg_1"	"oid"	63	0	1	1
4543	881	"arg_2"	"date"	0	0	1	2
4544	882	"res_0"	"date"	0	0	0	0
4545	882	"arg_1"	"tinyint"	8	0	1	1
4546	882	"arg_2"	"date"	0	0	1	2
4547	883	"res_0"	"date"	0	0	0	0
4548	883	"arg_1"	"smallint"	16	0	1	1
4549	883	"arg_2"	"date"	0	0	1	2
4550	884	"res_0"	"date"	0	0	0	0
4551	884	"arg_1"	"int"	32	0	1	1
4552	884	"arg_2"	"date"	0	0	1	2
4553	885	"res_0"	"date"	0	0	0	0
4554	885	"arg_1"	"bigint"	64	0	1	1
4555	885	"arg_2"	"date"	0	0	1	2
4556	886	"res_0"	"date"	0	0	0	0
4557	886	"arg_1"	"wrd"	64	0	1	1
4558	886	"arg_2"	"date"	0	0	1	2
4559	887	"res_0"	"date"	0	0	0	0
4560	887	"arg_1"	"hugeint"	128	0	1	1
4561	887	"arg_2"	"date"	0	0	1	2
4562	888	"res_0"	"date"	0	0	0	0
4563	888	"arg_1"	"decimal"	2	0	1	1
4564	888	"arg_2"	"date"	0	0	1	2
4565	889	"res_0"	"date"	0	0	0	0
4566	889	"arg_1"	"decimal"	4	0	1	1
4567	889	"arg_2"	"date"	0	0	1	2
4568	890	"res_0"	"date"	0	0	0	0
4569	890	"arg_1"	"decimal"	9	0	1	1
4570	890	"arg_2"	"date"	0	0	1	2
4571	891	"res_0"	"date"	0	0	0	0
4572	891	"arg_1"	"decimal"	18	0	1	1
4573	891	"arg_2"	"date"	0	0	1	2
4574	892	"res_0"	"date"	0	0	0	0
4575	892	"arg_1"	"decimal"	39	0	1	1
4576	892	"arg_2"	"date"	0	0	1	2
4577	893	"res_0"	"date"	0	0	0	0
4578	893	"arg_1"	"real"	24	0	1	1
4579	893	"arg_2"	"date"	0	0	1	2
4580	894	"res_0"	"date"	0	0	0	0
4581	894	"arg_1"	"double"	53	0	1	1
4582	894	"arg_2"	"date"	0	0	1	2
4583	895	"res_0"	"date"	0	0	0	0
4584	895	"arg_1"	"month_interval"	32	0	1	1
4585	895	"arg_2"	"date"	0	0	1	2
4586	896	"res_0"	"date"	0	0	0	0
4587	896	"arg_1"	"sec_interval"	13	0	1	1
4588	896	"arg_2"	"date"	0	0	1	2
4589	897	"res_0"	"date"	0	0	0	0
4590	897	"arg_1"	"time"	7	0	1	1
4591	897	"arg_2"	"date"	0	0	1	2
4592	898	"res_0"	"date"	0	0	0	0
4593	898	"arg_1"	"timetz"	7	0	1	1
4594	898	"arg_2"	"date"	0	0	1	2
4595	899	"res_0"	"date"	0	0	0	0
4596	899	"arg_1"	"date"	0	0	1	1
4597	899	"arg_2"	"date"	0	0	1	2
4598	900	"res_0"	"date"	0	0	0	0
4599	900	"arg_1"	"timestamp"	7	0	1	1
4600	900	"arg_2"	"date"	0	0	1	2
4601	901	"res_0"	"date"	0	0	0	0
4602	901	"arg_1"	"timestamptz"	7	0	1	1
4603	901	"arg_2"	"date"	0	0	1	2
4604	902	"res_0"	"date"	0	0	0	0
4605	902	"arg_1"	"blob"	0	0	1	1
4606	902	"arg_2"	"date"	0	0	1	2
4607	903	"res_0"	"timestamp"	7	0	0	0
4608	903	"arg_1"	"oid"	63	0	1	1
4609	903	"arg_2"	"timestamp"	7	0	1	2
4610	904	"res_0"	"timestamp"	7	0	0	0
4611	904	"arg_1"	"tinyint"	8	0	1	1
4612	904	"arg_2"	"timestamp"	7	0	1	2
4613	905	"res_0"	"timestamp"	7	0	0	0
4614	905	"arg_1"	"smallint"	16	0	1	1
4615	905	"arg_2"	"timestamp"	7	0	1	2
4616	906	"res_0"	"timestamp"	7	0	0	0
4617	906	"arg_1"	"int"	32	0	1	1
4618	906	"arg_2"	"timestamp"	7	0	1	2
4619	907	"res_0"	"timestamp"	7	0	0	0
4620	907	"arg_1"	"bigint"	64	0	1	1
4621	907	"arg_2"	"timestamp"	7	0	1	2
4622	908	"res_0"	"timestamp"	7	0	0	0
4623	908	"arg_1"	"wrd"	64	0	1	1
4624	908	"arg_2"	"timestamp"	7	0	1	2
4625	909	"res_0"	"timestamp"	7	0	0	0
4626	909	"arg_1"	"hugeint"	128	0	1	1
4627	909	"arg_2"	"timestamp"	7	0	1	2
4628	910	"res_0"	"timestamp"	7	0	0	0
4629	910	"arg_1"	"decimal"	2	0	1	1
4630	910	"arg_2"	"timestamp"	7	0	1	2
4631	911	"res_0"	"timestamp"	7	0	0	0
4632	911	"arg_1"	"decimal"	4	0	1	1
4633	911	"arg_2"	"timestamp"	7	0	1	2
4634	912	"res_0"	"timestamp"	7	0	0	0
4635	912	"arg_1"	"decimal"	9	0	1	1
4636	912	"arg_2"	"timestamp"	7	0	1	2
4637	913	"res_0"	"timestamp"	7	0	0	0
4638	913	"arg_1"	"decimal"	18	0	1	1
4639	913	"arg_2"	"timestamp"	7	0	1	2
4640	914	"res_0"	"timestamp"	7	0	0	0
4641	914	"arg_1"	"decimal"	39	0	1	1
4642	914	"arg_2"	"timestamp"	7	0	1	2
4643	915	"res_0"	"timestamp"	7	0	0	0
4644	915	"arg_1"	"real"	24	0	1	1
4645	915	"arg_2"	"timestamp"	7	0	1	2
4646	916	"res_0"	"timestamp"	7	0	0	0
4647	916	"arg_1"	"double"	53	0	1	1
4648	916	"arg_2"	"timestamp"	7	0	1	2
4649	917	"res_0"	"timestamp"	7	0	0	0
4650	917	"arg_1"	"month_interval"	32	0	1	1
4651	917	"arg_2"	"timestamp"	7	0	1	2
4652	918	"res_0"	"timestamp"	7	0	0	0
4653	918	"arg_1"	"sec_interval"	13	0	1	1
4654	918	"arg_2"	"timestamp"	7	0	1	2
4655	919	"res_0"	"timestamp"	7	0	0	0
4656	919	"arg_1"	"time"	7	0	1	1
4657	919	"arg_2"	"timestamp"	7	0	1	2
4658	920	"res_0"	"timestamp"	7	0	0	0
4659	920	"arg_1"	"timetz"	7	0	1	1
4660	920	"arg_2"	"timestamp"	7	0	1	2
4661	921	"res_0"	"timestamp"	7	0	0	0
4662	921	"arg_1"	"date"	0	0	1	1
4663	921	"arg_2"	"timestamp"	7	0	1	2
4664	922	"res_0"	"timestamp"	7	0	0	0
4665	922	"arg_1"	"timestamp"	7	0	1	1
4666	922	"arg_2"	"timestamp"	7	0	1	2
4667	923	"res_0"	"timestamp"	7	0	0	0
4668	923	"arg_1"	"timestamptz"	7	0	1	1
4669	923	"arg_2"	"timestamp"	7	0	1	2
4670	924	"res_0"	"timestamp"	7	0	0	0
4671	924	"arg_1"	"blob"	0	0	1	1
4672	924	"arg_2"	"timestamp"	7	0	1	2
4673	925	"res_0"	"timestamptz"	7	0	0	0
4674	925	"arg_1"	"oid"	63	0	1	1
4675	925	"arg_2"	"timestamptz"	7	0	1	2
4676	926	"res_0"	"timestamptz"	7	0	0	0
4677	926	"arg_1"	"tinyint"	8	0	1	1
4678	926	"arg_2"	"timestamptz"	7	0	1	2
4679	927	"res_0"	"timestamptz"	7	0	0	0
4680	927	"arg_1"	"smallint"	16	0	1	1
4681	927	"arg_2"	"timestamptz"	7	0	1	2
4682	928	"res_0"	"timestamptz"	7	0	0	0
4683	928	"arg_1"	"int"	32	0	1	1
4684	928	"arg_2"	"timestamptz"	7	0	1	2
4685	929	"res_0"	"timestamptz"	7	0	0	0
4686	929	"arg_1"	"bigint"	64	0	1	1
4687	929	"arg_2"	"timestamptz"	7	0	1	2
4688	930	"res_0"	"timestamptz"	7	0	0	0
4689	930	"arg_1"	"wrd"	64	0	1	1
4690	930	"arg_2"	"timestamptz"	7	0	1	2
4691	931	"res_0"	"timestamptz"	7	0	0	0
4692	931	"arg_1"	"hugeint"	128	0	1	1
4693	931	"arg_2"	"timestamptz"	7	0	1	2
4694	932	"res_0"	"timestamptz"	7	0	0	0
4695	932	"arg_1"	"decimal"	2	0	1	1
4696	932	"arg_2"	"timestamptz"	7	0	1	2
4697	933	"res_0"	"timestamptz"	7	0	0	0
4698	933	"arg_1"	"decimal"	4	0	1	1
4699	933	"arg_2"	"timestamptz"	7	0	1	2
4700	934	"res_0"	"timestamptz"	7	0	0	0
4701	934	"arg_1"	"decimal"	9	0	1	1
4702	934	"arg_2"	"timestamptz"	7	0	1	2
4703	935	"res_0"	"timestamptz"	7	0	0	0
4704	935	"arg_1"	"decimal"	18	0	1	1
4705	935	"arg_2"	"timestamptz"	7	0	1	2
4706	936	"res_0"	"timestamptz"	7	0	0	0
4707	936	"arg_1"	"decimal"	39	0	1	1
4708	936	"arg_2"	"timestamptz"	7	0	1	2
4709	937	"res_0"	"timestamptz"	7	0	0	0
4710	937	"arg_1"	"real"	24	0	1	1
4711	937	"arg_2"	"timestamptz"	7	0	1	2
4712	938	"res_0"	"timestamptz"	7	0	0	0
4713	938	"arg_1"	"double"	53	0	1	1
4714	938	"arg_2"	"timestamptz"	7	0	1	2
4715	939	"res_0"	"timestamptz"	7	0	0	0
4716	939	"arg_1"	"month_interval"	32	0	1	1
4717	939	"arg_2"	"timestamptz"	7	0	1	2
4718	940	"res_0"	"timestamptz"	7	0	0	0
4719	940	"arg_1"	"sec_interval"	13	0	1	1
4720	940	"arg_2"	"timestamptz"	7	0	1	2
4721	941	"res_0"	"timestamptz"	7	0	0	0
4722	941	"arg_1"	"time"	7	0	1	1
4723	941	"arg_2"	"timestamptz"	7	0	1	2
4724	942	"res_0"	"timestamptz"	7	0	0	0
4725	942	"arg_1"	"timetz"	7	0	1	1
4726	942	"arg_2"	"timestamptz"	7	0	1	2
4727	943	"res_0"	"timestamptz"	7	0	0	0
4728	943	"arg_1"	"date"	0	0	1	1
4729	943	"arg_2"	"timestamptz"	7	0	1	2
4730	944	"res_0"	"timestamptz"	7	0	0	0
4731	944	"arg_1"	"timestamp"	7	0	1	1
4732	944	"arg_2"	"timestamptz"	7	0	1	2
4733	945	"res_0"	"timestamptz"	7	0	0	0
4734	945	"arg_1"	"timestamptz"	7	0	1	1
4735	945	"arg_2"	"timestamptz"	7	0	1	2
4736	946	"res_0"	"timestamptz"	7	0	0	0
4737	946	"arg_1"	"blob"	0	0	1	1
4738	946	"arg_2"	"timestamptz"	7	0	1	2
4739	947	"res_0"	"blob"	0	0	0	0
4740	947	"arg_1"	"oid"	63	0	1	1
4741	947	"arg_2"	"blob"	0	0	1	2
4742	948	"res_0"	"blob"	0	0	0	0
4743	948	"arg_1"	"tinyint"	8	0	1	1
4744	948	"arg_2"	"blob"	0	0	1	2
4745	949	"res_0"	"blob"	0	0	0	0
4746	949	"arg_1"	"smallint"	16	0	1	1
4747	949	"arg_2"	"blob"	0	0	1	2
4748	950	"res_0"	"blob"	0	0	0	0
4749	950	"arg_1"	"int"	32	0	1	1
4750	950	"arg_2"	"blob"	0	0	1	2
4751	951	"res_0"	"blob"	0	0	0	0
4752	951	"arg_1"	"bigint"	64	0	1	1
4753	951	"arg_2"	"blob"	0	0	1	2
4754	952	"res_0"	"blob"	0	0	0	0
4755	952	"arg_1"	"wrd"	64	0	1	1
4756	952	"arg_2"	"blob"	0	0	1	2
4757	953	"res_0"	"blob"	0	0	0	0
4758	953	"arg_1"	"hugeint"	128	0	1	1
4759	953	"arg_2"	"blob"	0	0	1	2
4760	954	"res_0"	"blob"	0	0	0	0
4761	954	"arg_1"	"decimal"	2	0	1	1
4762	954	"arg_2"	"blob"	0	0	1	2
4763	955	"res_0"	"blob"	0	0	0	0
4764	955	"arg_1"	"decimal"	4	0	1	1
4765	955	"arg_2"	"blob"	0	0	1	2
4766	956	"res_0"	"blob"	0	0	0	0
4767	956	"arg_1"	"decimal"	9	0	1	1
4768	956	"arg_2"	"blob"	0	0	1	2
4769	957	"res_0"	"blob"	0	0	0	0
4770	957	"arg_1"	"decimal"	18	0	1	1
4771	957	"arg_2"	"blob"	0	0	1	2
4772	958	"res_0"	"blob"	0	0	0	0
4773	958	"arg_1"	"decimal"	39	0	1	1
4774	958	"arg_2"	"blob"	0	0	1	2
4775	959	"res_0"	"blob"	0	0	0	0
4776	959	"arg_1"	"real"	24	0	1	1
4777	959	"arg_2"	"blob"	0	0	1	2
4778	960	"res_0"	"blob"	0	0	0	0
4779	960	"arg_1"	"double"	53	0	1	1
4780	960	"arg_2"	"blob"	0	0	1	2
4781	961	"res_0"	"blob"	0	0	0	0
4782	961	"arg_1"	"month_interval"	32	0	1	1
4783	961	"arg_2"	"blob"	0	0	1	2
4784	962	"res_0"	"blob"	0	0	0	0
4785	962	"arg_1"	"sec_interval"	13	0	1	1
4786	962	"arg_2"	"blob"	0	0	1	2
4787	963	"res_0"	"blob"	0	0	0	0
4788	963	"arg_1"	"time"	7	0	1	1
4789	963	"arg_2"	"blob"	0	0	1	2
4790	964	"res_0"	"blob"	0	0	0	0
4791	964	"arg_1"	"timetz"	7	0	1	1
4792	964	"arg_2"	"blob"	0	0	1	2
4793	965	"res_0"	"blob"	0	0	0	0
4794	965	"arg_1"	"date"	0	0	1	1
4795	965	"arg_2"	"blob"	0	0	1	2
4796	966	"res_0"	"blob"	0	0	0	0
4797	966	"arg_1"	"timestamp"	7	0	1	1
4798	966	"arg_2"	"blob"	0	0	1	2
4799	967	"res_0"	"blob"	0	0	0	0
4800	967	"arg_1"	"timestamptz"	7	0	1	1
4801	967	"arg_2"	"blob"	0	0	1	2
4802	968	"res_0"	"blob"	0	0	0	0
4803	968	"arg_1"	"blob"	0	0	1	1
4804	968	"arg_2"	"blob"	0	0	1	2
4805	969	"res_0"	"real"	24	0	0	0
4806	969	"arg_1"	"real"	24	0	1	1
4807	969	"arg_2"	"real"	24	0	1	2
4808	970	"res_0"	"real"	24	0	0	0
4809	970	"arg_1"	"real"	24	0	1	1
4810	971	"res_0"	"real"	24	0	0	0
4811	971	"arg_1"	"real"	24	0	1	1
4812	972	"res_0"	"real"	24	0	0	0
4813	972	"arg_1"	"real"	24	0	1	1
4814	973	"res_0"	"real"	24	0	0	0
4815	973	"arg_1"	"real"	24	0	1	1
4816	974	"res_0"	"real"	24	0	0	0
4817	974	"arg_1"	"real"	24	0	1	1
4818	975	"res_0"	"real"	24	0	0	0
4819	975	"arg_1"	"real"	24	0	1	1
4820	976	"res_0"	"real"	24	0	0	0
4821	976	"arg_1"	"real"	24	0	1	1
4822	977	"res_0"	"real"	24	0	0	0
4823	977	"arg_1"	"real"	24	0	1	1
4824	978	"res_0"	"real"	24	0	0	0
4825	978	"arg_1"	"real"	24	0	1	1
4826	979	"res_0"	"real"	24	0	0	0
4827	979	"arg_1"	"real"	24	0	1	1
4828	979	"arg_2"	"real"	24	0	1	2
4829	980	"res_0"	"real"	24	0	0	0
4830	980	"arg_1"	"real"	24	0	1	1
4831	981	"res_0"	"real"	24	0	0	0
4832	981	"arg_1"	"real"	24	0	1	1
4833	982	"res_0"	"real"	24	0	0	0
4834	982	"arg_1"	"real"	24	0	1	1
4835	983	"res_0"	"real"	24	0	0	0
4836	983	"arg_1"	"real"	24	0	1	1
4837	984	"res_0"	"real"	24	0	0	0
4838	984	"arg_1"	"real"	24	0	1	1
4839	985	"res_0"	"real"	24	0	0	0
4840	985	"arg_1"	"real"	24	0	1	1
4841	986	"res_0"	"real"	24	0	0	0
4842	986	"arg_1"	"real"	24	0	1	1
4843	987	"res_0"	"real"	24	0	0	0
4844	987	"arg_1"	"real"	24	0	1	1
4845	988	"res_0"	"double"	53	0	0	0
4846	988	"arg_1"	"double"	53	0	1	1
4847	988	"arg_2"	"double"	53	0	1	2
4848	989	"res_0"	"double"	53	0	0	0
4849	989	"arg_1"	"double"	53	0	1	1
4850	990	"res_0"	"double"	53	0	0	0
4851	990	"arg_1"	"double"	53	0	1	1
4852	991	"res_0"	"double"	53	0	0	0
4853	991	"arg_1"	"double"	53	0	1	1
4854	992	"res_0"	"double"	53	0	0	0
4855	992	"arg_1"	"double"	53	0	1	1
4856	993	"res_0"	"double"	53	0	0	0
4857	993	"arg_1"	"double"	53	0	1	1
4858	994	"res_0"	"double"	53	0	0	0
4859	994	"arg_1"	"double"	53	0	1	1
4860	995	"res_0"	"double"	53	0	0	0
4861	995	"arg_1"	"double"	53	0	1	1
4862	996	"res_0"	"double"	53	0	0	0
4863	996	"arg_1"	"double"	53	0	1	1
4864	997	"res_0"	"double"	53	0	0	0
4865	997	"arg_1"	"double"	53	0	1	1
4866	998	"res_0"	"double"	53	0	0	0
4867	998	"arg_1"	"double"	53	0	1	1
4868	998	"arg_2"	"double"	53	0	1	2
4869	999	"res_0"	"double"	53	0	0	0
4870	999	"arg_1"	"double"	53	0	1	1
4871	1000	"res_0"	"double"	53	0	0	0
4872	1000	"arg_1"	"double"	53	0	1	1
4873	1001	"res_0"	"double"	53	0	0	0
4874	1001	"arg_1"	"double"	53	0	1	1
4875	1002	"res_0"	"double"	53	0	0	0
4876	1002	"arg_1"	"double"	53	0	1	1
4877	1003	"res_0"	"double"	53	0	0	0
4878	1003	"arg_1"	"double"	53	0	1	1
4879	1004	"res_0"	"double"	53	0	0	0
4880	1004	"arg_1"	"double"	53	0	1	1
4881	1005	"res_0"	"double"	53	0	0	0
4882	1005	"arg_1"	"double"	53	0	1	1
4883	1006	"res_0"	"double"	53	0	0	0
4884	1006	"arg_1"	"double"	53	0	1	1
4885	1007	"res_0"	"double"	53	0	0	0
4886	1008	"res_0"	"int"	32	0	0	0
4887	1009	"res_0"	"int"	32	0	0	0
4888	1009	"arg_1"	"int"	32	0	1	1
4889	1010	"res_0"	"date"	0	0	0	0
4890	1011	"res_0"	"date"	0	0	0	0
4891	1012	"res_0"	"timetz"	7	0	0	0
4892	1013	"res_0"	"timetz"	7	0	0	0
4893	1014	"res_0"	"timestamptz"	7	0	0	0
4894	1015	"res_0"	"time"	7	0	0	0
4895	1016	"res_0"	"timestamp"	7	0	0	0
4896	1017	"res_0"	"month_interval"	32	0	0	0
4897	1017	"arg_1"	"date"	0	0	1	1
4898	1017	"arg_2"	"date"	0	0	1	2
4899	1018	"res_0"	"sec_interval"	13	0	0	0
4900	1018	"arg_1"	"timetz"	7	0	1	1
4901	1018	"arg_2"	"timetz"	7	0	1	2
4902	1019	"res_0"	"sec_interval"	13	0	0	0
4903	1019	"arg_1"	"time"	7	0	1	1
4904	1019	"arg_2"	"time"	7	0	1	2
4905	1020	"res_0"	"sec_interval"	13	0	0	0
4906	1020	"arg_1"	"timestamptz"	7	0	1	1
4907	1020	"arg_2"	"timestamptz"	7	0	1	2
4908	1021	"res_0"	"sec_interval"	13	0	0	0
4909	1021	"arg_1"	"timestamp"	7	0	1	1
4910	1021	"arg_2"	"timestamp"	7	0	1	2
4911	1022	"res_0"	"date"	0	0	0	0
4912	1022	"arg_1"	"date"	0	0	1	1
4913	1022	"arg_2"	"sec_interval"	13	0	1	2
4914	1023	"res_0"	"date"	0	0	0	0
4915	1023	"arg_1"	"date"	0	0	1	1
4916	1023	"arg_2"	"month_interval"	32	0	1	2
4917	1024	"res_0"	"time"	7	0	0	0
4918	1024	"arg_1"	"time"	7	0	1	1
4919	1024	"arg_2"	"sec_interval"	13	0	1	2
4920	1025	"res_0"	"timetz"	7	0	0	0
4921	1025	"arg_1"	"timetz"	7	0	1	1
4922	1025	"arg_2"	"sec_interval"	13	0	1	2
4923	1026	"res_0"	"timestamp"	7	0	0	0
4924	1026	"arg_1"	"timestamp"	7	0	1	1
4925	1026	"arg_2"	"sec_interval"	13	0	1	2
4926	1027	"res_0"	"timestamp"	7	0	0	0
4927	1027	"arg_1"	"timestamp"	7	0	1	1
4928	1027	"arg_2"	"month_interval"	32	0	1	2
4929	1028	"res_0"	"timestamptz"	7	0	0	0
4930	1028	"arg_1"	"timestamptz"	7	0	1	1
4931	1028	"arg_2"	"sec_interval"	13	0	1	2
4932	1029	"res_0"	"timestamptz"	7	0	0	0
4933	1029	"arg_1"	"timestamptz"	7	0	1	1
4934	1029	"arg_2"	"month_interval"	32	0	1	2
4935	1030	"res_0"	"date"	0	0	0	0
4936	1030	"arg_1"	"date"	0	0	1	1
4937	1030	"arg_2"	"sec_interval"	13	0	1	2
4938	1031	"res_0"	"date"	0	0	0	0
4939	1031	"arg_1"	"date"	0	0	1	1
4940	1031	"arg_2"	"month_interval"	32	0	1	2
4941	1032	"res_0"	"timestamp"	7	0	0	0
4942	1032	"arg_1"	"timestamp"	7	0	1	1
4943	1032	"arg_2"	"sec_interval"	13	0	1	2
4944	1033	"res_0"	"timestamp"	7	0	0	0
4945	1033	"arg_1"	"timestamp"	7	0	1	1
4946	1033	"arg_2"	"month_interval"	32	0	1	2
4947	1034	"res_0"	"timestamptz"	7	0	0	0
4948	1034	"arg_1"	"timestamptz"	7	0	1	1
4949	1034	"arg_2"	"sec_interval"	13	0	1	2
4950	1035	"res_0"	"timestamptz"	7	0	0	0
4951	1035	"arg_1"	"timestamptz"	7	0	1	1
4952	1035	"arg_2"	"month_interval"	32	0	1	2
4953	1036	"res_0"	"time"	7	0	0	0
4954	1036	"arg_1"	"time"	7	0	1	1
4955	1036	"arg_2"	"sec_interval"	13	0	1	2
4956	1037	"res_0"	"timetz"	7	0	0	0
4957	1037	"arg_1"	"timetz"	7	0	1	1
4958	1037	"arg_2"	"sec_interval"	13	0	1	2
4959	1038	"res_0"	"sec_interval"	13	0	0	0
4960	1039	"res_0"	"int"	32	0	0	0
4961	1039	"arg_1"	"date"	0	0	1	1
4962	1040	"res_0"	"int"	32	0	0	0
4963	1040	"arg_1"	"date"	0	0	1	1
4964	1041	"res_0"	"int"	32	0	0	0
4965	1041	"arg_1"	"date"	0	0	1	1
4966	1042	"res_0"	"int"	32	0	0	0
4967	1042	"arg_1"	"time"	7	0	1	1
4968	1043	"res_0"	"int"	32	0	0	0
4969	1043	"arg_1"	"time"	7	0	1	1
4970	1044	"res_0"	"decimal"	9	3	0	0
4971	1044	"arg_1"	"time"	7	0	1	1
4972	1045	"res_0"	"int"	32	0	0	0
4973	1045	"arg_1"	"timetz"	7	0	1	1
4974	1046	"res_0"	"int"	32	0	0	0
4975	1046	"arg_1"	"timetz"	7	0	1	1
4976	1047	"res_0"	"decimal"	9	3	0	0
4977	1047	"arg_1"	"timetz"	7	0	1	1
4978	1048	"res_0"	"int"	32	0	0	0
4979	1048	"arg_1"	"timestamp"	7	0	1	1
4980	1049	"res_0"	"int"	32	0	0	0
4981	1049	"arg_1"	"timestamp"	7	0	1	1
4982	1050	"res_0"	"int"	32	0	0	0
4983	1050	"arg_1"	"timestamp"	7	0	1	1
4984	1051	"res_0"	"int"	32	0	0	0
4985	1051	"arg_1"	"timestamp"	7	0	1	1
4986	1052	"res_0"	"int"	32	0	0	0
4987	1052	"arg_1"	"timestamp"	7	0	1	1
4988	1053	"res_0"	"decimal"	9	3	0	0
4989	1053	"arg_1"	"timestamp"	7	0	1	1
4990	1054	"res_0"	"int"	32	0	0	0
4991	1054	"arg_1"	"timestamptz"	7	0	1	1
4992	1055	"res_0"	"int"	32	0	0	0
4993	1055	"arg_1"	"timestamptz"	7	0	1	1
4994	1056	"res_0"	"int"	32	0	0	0
4995	1056	"arg_1"	"timestamptz"	7	0	1	1
4996	1057	"res_0"	"int"	32	0	0	0
4997	1057	"arg_1"	"timestamptz"	7	0	1	1
4998	1058	"res_0"	"int"	32	0	0	0
4999	1058	"arg_1"	"timestamptz"	7	0	1	1
5000	1059	"res_0"	"decimal"	9	3	0	0
5001	1059	"arg_1"	"timestamptz"	7	0	1	1
5002	1060	"res_0"	"int"	32	0	0	0
5003	1060	"arg_1"	"month_interval"	32	0	1	1
5004	1061	"res_0"	"int"	32	0	0	0
5005	1061	"arg_1"	"month_interval"	32	0	1	1
5006	1062	"res_0"	"bigint"	64	0	0	0
5007	1062	"arg_1"	"sec_interval"	13	0	1	1
5008	1063	"res_0"	"int"	32	0	0	0
5009	1063	"arg_1"	"sec_interval"	13	0	1	1
5010	1064	"res_0"	"int"	32	0	0	0
5011	1064	"arg_1"	"sec_interval"	13	0	1	1
5012	1065	"res_0"	"int"	32	0	0	0
5013	1065	"arg_1"	"sec_interval"	13	0	1	1
5014	1066	"res_0"	"int"	32	0	0	0
5015	1066	"arg_1"	"date"	0	0	1	1
5016	1067	"res_0"	"int"	32	0	0	0
5017	1067	"arg_1"	"date"	0	0	1	1
5018	1068	"res_0"	"int"	32	0	0	0
5019	1068	"arg_1"	"date"	0	0	1	1
5020	1069	"res_0"	"int"	32	0	0	0
5021	1069	"arg_1"	"date"	0	0	1	1
5022	1070	"res_0"	"int"	32	0	0	0
5023	1070	"arg_1"	"date"	0	0	1	1
5024	1071	"res_0"	"bigint"	64	0	0	0
5025	1071	"arg_1"	"varchar"	0	0	1	1
5026	1071	"arg_2"	"varchar"	0	0	1	2
5027	1072	"res_0"	"bigint"	64	0	0	0
5028	1072	"arg_1"	"varchar"	0	0	1	1
5029	1072	"arg_2"	"varchar"	0	0	1	2
5030	1073	"res_0"	"bigint"	64	0	0	0
5031	1073	"arg_1"	"varchar"	0	0	1	1
5032	1073	"arg_2"	"varchar"	0	0	1	2
5033	1073	"arg_3"	"bigint"	64	0	1	3
5034	1074	"res_0"	"tinyint"	8	0	0	0
5035	1074	"arg_1"	"char"	0	0	1	1
5036	1074	"arg_2"	"boolean"	1	0	1	2
5037	1075	"res_0"	"smallint"	16	0	0	0
5038	1075	"arg_1"	"char"	0	0	1	1
5039	1075	"arg_2"	"boolean"	1	0	1	2
5040	1076	"res_0"	"int"	32	0	0	0
5041	1076	"arg_1"	"char"	0	0	1	1
5042	1076	"arg_2"	"boolean"	1	0	1	2
5043	1077	"res_0"	"char"	0	0	0	0
5044	1077	"arg_1"	"char"	0	0	1	1
5045	1078	"res_0"	"int"	32	0	0	0
5046	1078	"arg_1"	"char"	0	0	1	1
5047	1078	"arg_2"	"char"	0	0	1	2
5048	1079	"res_0"	"int"	32	0	0	0
5049	1079	"arg_1"	"char"	0	0	1	1
5050	1079	"arg_2"	"char"	0	0	1	2
5051	1079	"arg_3"	"int"	32	0	1	3
5052	1080	"res_0"	"char"	0	0	0	0
5053	1080	"arg_1"	"char"	0	0	1	1
5054	1080	"arg_2"	"char"	0	0	1	2
5055	1080	"arg_3"	"int"	32	0	1	3
5056	1081	"res_0"	"char"	0	0	0	0
5057	1081	"arg_1"	"char"	0	0	1	1
5058	1081	"arg_2"	"int"	32	0	1	2
5059	1082	"res_0"	"char"	0	0	0	0
5060	1082	"arg_1"	"char"	0	0	1	1
5061	1082	"arg_2"	"int"	32	0	1	2
5062	1082	"arg_3"	"int"	32	0	1	3
5063	1083	"res_0"	"boolean"	1	0	0	0
5064	1083	"arg_1"	"char"	0	0	1	1
5065	1083	"arg_2"	"char"	0	0	1	2
5066	1084	"res_0"	"boolean"	1	0	0	0
5067	1084	"arg_1"	"char"	0	0	1	1
5068	1084	"arg_2"	"char"	0	0	1	2
5069	1084	"arg_3"	"char"	0	0	1	3
5070	1085	"res_0"	"boolean"	1	0	0	0
5071	1085	"arg_1"	"char"	0	0	1	1
5072	1085	"arg_2"	"char"	0	0	1	2
5073	1086	"res_0"	"boolean"	1	0	0	0
5074	1086	"arg_1"	"char"	0	0	1	1
5075	1086	"arg_2"	"char"	0	0	1	2
5076	1086	"arg_3"	"char"	0	0	1	3
5077	1087	"res_0"	"boolean"	1	0	0	0
5078	1087	"arg_1"	"char"	0	0	1	1
5079	1087	"arg_2"	"char"	0	0	1	2
5080	1088	"res_0"	"boolean"	1	0	0	0
5081	1088	"arg_1"	"char"	0	0	1	1
5082	1088	"arg_2"	"char"	0	0	1	2
5083	1088	"arg_3"	"char"	0	0	1	3
5084	1089	"res_0"	"boolean"	1	0	0	0
5085	1089	"arg_1"	"char"	0	0	1	1
5086	1089	"arg_2"	"char"	0	0	1	2
5087	1090	"res_0"	"boolean"	1	0	0	0
5088	1090	"arg_1"	"char"	0	0	1	1
5089	1090	"arg_2"	"char"	0	0	1	2
5090	1090	"arg_3"	"char"	0	0	1	3
5091	1091	"res_0"	"int"	32	0	0	0
5092	1091	"arg_1"	"char"	0	0	1	1
5093	1091	"arg_2"	"char"	0	0	1	2
5094	1092	"res_0"	"char"	0	0	0	0
5095	1092	"arg_1"	"char"	0	0	1	1
5096	1092	"arg_2"	"int"	32	0	1	2
5097	1093	"res_0"	"char"	0	0	0	0
5098	1093	"arg_1"	"char"	0	0	1	1
5099	1093	"arg_2"	"char"	0	0	1	2
5100	1094	"res_0"	"int"	32	0	0	0
5101	1094	"arg_1"	"char"	0	0	1	1
5102	1095	"res_0"	"char"	0	0	0	0
5103	1095	"arg_1"	"int"	32	0	1	1
5104	1096	"res_0"	"int"	32	0	0	0
5105	1096	"arg_1"	"char"	0	0	1	1
5106	1097	"res_0"	"char"	0	0	0	0
5107	1097	"arg_1"	"char"	0	0	1	1
5108	1097	"arg_2"	"int"	32	0	1	2
5109	1098	"res_0"	"char"	0	0	0	0
5110	1098	"arg_1"	"char"	0	0	1	1
5111	1098	"arg_2"	"int"	32	0	1	2
5112	1099	"res_0"	"char"	0	0	0	0
5113	1099	"arg_1"	"char"	0	0	1	1
5114	1100	"res_0"	"char"	0	0	0	0
5115	1100	"arg_1"	"char"	0	0	1	1
5116	1101	"res_0"	"char"	0	0	0	0
5117	1101	"arg_1"	"char"	0	0	1	1
5118	1102	"res_0"	"char"	0	0	0	0
5119	1102	"arg_1"	"char"	0	0	1	1
5120	1103	"res_0"	"char"	0	0	0	0
5121	1103	"arg_1"	"char"	0	0	1	1
5122	1104	"res_0"	"char"	0	0	0	0
5123	1104	"arg_1"	"char"	0	0	1	1
5124	1104	"arg_2"	"char"	0	0	1	2
5125	1105	"res_0"	"char"	0	0	0	0
5126	1105	"arg_1"	"char"	0	0	1	1
5127	1106	"res_0"	"char"	0	0	0	0
5128	1106	"arg_1"	"char"	0	0	1	1
5129	1106	"arg_2"	"char"	0	0	1	2
5130	1107	"res_0"	"char"	0	0	0	0
5131	1107	"arg_1"	"char"	0	0	1	1
5132	1108	"res_0"	"char"	0	0	0	0
5133	1108	"arg_1"	"char"	0	0	1	1
5134	1108	"arg_2"	"char"	0	0	1	2
5135	1109	"res_0"	"char"	0	0	0	0
5136	1109	"arg_1"	"char"	0	0	1	1
5137	1109	"arg_2"	"int"	32	0	1	2
5138	1110	"res_0"	"char"	0	0	0	0
5139	1110	"arg_1"	"char"	0	0	1	1
5140	1110	"arg_2"	"int"	32	0	1	2
5141	1110	"arg_3"	"char"	0	0	1	3
5142	1111	"res_0"	"char"	0	0	0	0
5143	1111	"arg_1"	"char"	0	0	1	1
5144	1111	"arg_2"	"int"	32	0	1	2
5145	1112	"res_0"	"char"	0	0	0	0
5146	1112	"arg_1"	"char"	0	0	1	1
5147	1112	"arg_2"	"int"	32	0	1	2
5148	1112	"arg_3"	"char"	0	0	1	3
5149	1113	"res_0"	"char"	0	0	0	0
5150	1113	"arg_1"	"char"	0	0	1	1
5151	1113	"arg_2"	"int"	32	0	1	2
5152	1113	"arg_3"	"int"	32	0	1	3
5153	1113	"arg_4"	"char"	0	0	1	4
5154	1114	"res_0"	"char"	0	0	0	0
5155	1114	"arg_1"	"char"	0	0	1	1
5156	1114	"arg_2"	"char"	0	0	1	2
5157	1114	"arg_3"	"char"	0	0	1	3
5158	1115	"res_0"	"char"	0	0	0	0
5159	1115	"arg_1"	"char"	0	0	1	1
5160	1115	"arg_2"	"int"	32	0	1	2
5161	1116	"res_0"	"char"	0	0	0	0
5162	1116	"arg_1"	"int"	32	0	1	1
5163	1117	"res_0"	"int"	32	0	0	0
5164	1117	"arg_1"	"char"	0	0	1	1
5165	1118	"res_0"	"int"	32	0	0	0
5166	1118	"arg_1"	"char"	0	0	1	1
5167	1119	"res_0"	"int"	32	0	0	0
5168	1119	"arg_1"	"char"	0	0	1	1
5169	1120	"res_0"	"char"	0	0	0	0
5170	1120	"arg_1"	"char"	0	0	1	1
5171	1121	"res_0"	"int"	32	0	0	0
5172	1121	"arg_1"	"char"	0	0	1	1
5173	1121	"arg_2"	"char"	0	0	1	2
5174	1122	"res_0"	"int"	32	0	0	0
5175	1122	"arg_1"	"char"	0	0	1	1
5176	1122	"arg_2"	"char"	0	0	1	2
5177	1123	"res_0"	"int"	32	0	0	0
5178	1123	"arg_1"	"char"	0	0	1	1
5179	1123	"arg_2"	"char"	0	0	1	2
5180	1124	"res_0"	"double"	53	0	0	0
5181	1124	"arg_1"	"char"	0	0	1	1
5182	1124	"arg_2"	"char"	0	0	1	2
5183	1125	"res_0"	"char"	0	0	0	0
5184	1125	"arg_1"	"char"	0	0	1	1
5185	1126	"res_0"	"int"	32	0	0	0
5186	1126	"arg_1"	"char"	0	0	1	1
5187	1126	"arg_2"	"char"	0	0	1	2
5188	1127	"res_0"	"int"	32	0	0	0
5189	1127	"arg_1"	"char"	0	0	1	1
5190	1127	"arg_2"	"char"	0	0	1	2
5191	1127	"arg_3"	"int"	32	0	1	3
5192	1127	"arg_4"	"int"	32	0	1	4
5193	1127	"arg_5"	"int"	32	0	1	5
5194	1128	"res_0"	"tinyint"	8	0	0	0
5195	1128	"arg_1"	"varchar"	0	0	1	1
5196	1128	"arg_2"	"boolean"	1	0	1	2
5197	1129	"res_0"	"smallint"	16	0	0	0
5198	1129	"arg_1"	"varchar"	0	0	1	1
5199	1129	"arg_2"	"boolean"	1	0	1	2
5200	1130	"res_0"	"int"	32	0	0	0
5201	1130	"arg_1"	"varchar"	0	0	1	1
5202	1130	"arg_2"	"boolean"	1	0	1	2
5203	1131	"res_0"	"varchar"	0	0	0	0
5204	1131	"arg_1"	"varchar"	0	0	1	1
5205	1132	"res_0"	"int"	32	0	0	0
5206	1132	"arg_1"	"varchar"	0	0	1	1
5207	1132	"arg_2"	"varchar"	0	0	1	2
5208	1133	"res_0"	"int"	32	0	0	0
5209	1133	"arg_1"	"varchar"	0	0	1	1
5210	1133	"arg_2"	"varchar"	0	0	1	2
5211	1133	"arg_3"	"int"	32	0	1	3
5212	1134	"res_0"	"varchar"	0	0	0	0
5213	1134	"arg_1"	"varchar"	0	0	1	1
5214	1134	"arg_2"	"varchar"	0	0	1	2
5215	1134	"arg_3"	"int"	32	0	1	3
5216	1135	"res_0"	"varchar"	0	0	0	0
5217	1135	"arg_1"	"varchar"	0	0	1	1
5218	1135	"arg_2"	"int"	32	0	1	2
5219	1136	"res_0"	"varchar"	0	0	0	0
5220	1136	"arg_1"	"varchar"	0	0	1	1
5221	1136	"arg_2"	"int"	32	0	1	2
5222	1136	"arg_3"	"int"	32	0	1	3
5223	1137	"res_0"	"boolean"	1	0	0	0
5224	1137	"arg_1"	"varchar"	0	0	1	1
5225	1137	"arg_2"	"varchar"	0	0	1	2
5226	1138	"res_0"	"boolean"	1	0	0	0
5227	1138	"arg_1"	"varchar"	0	0	1	1
5228	1138	"arg_2"	"varchar"	0	0	1	2
5229	1138	"arg_3"	"varchar"	0	0	1	3
5230	1139	"res_0"	"boolean"	1	0	0	0
5231	1139	"arg_1"	"varchar"	0	0	1	1
5232	1139	"arg_2"	"varchar"	0	0	1	2
5233	1140	"res_0"	"boolean"	1	0	0	0
5234	1140	"arg_1"	"varchar"	0	0	1	1
5235	1140	"arg_2"	"varchar"	0	0	1	2
5236	1140	"arg_3"	"varchar"	0	0	1	3
5237	1141	"res_0"	"boolean"	1	0	0	0
5238	1141	"arg_1"	"varchar"	0	0	1	1
5239	1141	"arg_2"	"varchar"	0	0	1	2
5240	1142	"res_0"	"boolean"	1	0	0	0
5241	1142	"arg_1"	"varchar"	0	0	1	1
5242	1142	"arg_2"	"varchar"	0	0	1	2
5243	1142	"arg_3"	"varchar"	0	0	1	3
5244	1143	"res_0"	"boolean"	1	0	0	0
5245	1143	"arg_1"	"varchar"	0	0	1	1
5246	1143	"arg_2"	"varchar"	0	0	1	2
5247	1144	"res_0"	"boolean"	1	0	0	0
5248	1144	"arg_1"	"varchar"	0	0	1	1
5249	1144	"arg_2"	"varchar"	0	0	1	2
5250	1144	"arg_3"	"varchar"	0	0	1	3
5251	1145	"res_0"	"int"	32	0	0	0
5252	1145	"arg_1"	"varchar"	0	0	1	1
5253	1145	"arg_2"	"varchar"	0	0	1	2
5254	1146	"res_0"	"varchar"	0	0	0	0
5255	1146	"arg_1"	"varchar"	0	0	1	1
5256	1146	"arg_2"	"int"	32	0	1	2
5257	1147	"res_0"	"varchar"	0	0	0	0
5258	1147	"arg_1"	"varchar"	0	0	1	1
5259	1147	"arg_2"	"varchar"	0	0	1	2
5260	1148	"res_0"	"int"	32	0	0	0
5261	1148	"arg_1"	"varchar"	0	0	1	1
5262	1149	"res_0"	"varchar"	0	0	0	0
5263	1149	"arg_1"	"int"	32	0	1	1
5264	1150	"res_0"	"int"	32	0	0	0
5265	1150	"arg_1"	"varchar"	0	0	1	1
5266	1151	"res_0"	"varchar"	0	0	0	0
5267	1151	"arg_1"	"varchar"	0	0	1	1
5268	1151	"arg_2"	"int"	32	0	1	2
5269	1152	"res_0"	"varchar"	0	0	0	0
5270	1152	"arg_1"	"varchar"	0	0	1	1
5271	1152	"arg_2"	"int"	32	0	1	2
5272	1153	"res_0"	"varchar"	0	0	0	0
5273	1153	"arg_1"	"varchar"	0	0	1	1
5274	1154	"res_0"	"varchar"	0	0	0	0
5275	1154	"arg_1"	"varchar"	0	0	1	1
5276	1155	"res_0"	"varchar"	0	0	0	0
5277	1155	"arg_1"	"varchar"	0	0	1	1
5278	1156	"res_0"	"varchar"	0	0	0	0
5279	1156	"arg_1"	"varchar"	0	0	1	1
5280	1157	"res_0"	"varchar"	0	0	0	0
5281	1157	"arg_1"	"varchar"	0	0	1	1
5282	1158	"res_0"	"varchar"	0	0	0	0
5283	1158	"arg_1"	"varchar"	0	0	1	1
5284	1158	"arg_2"	"varchar"	0	0	1	2
5285	1159	"res_0"	"varchar"	0	0	0	0
5286	1159	"arg_1"	"varchar"	0	0	1	1
5287	1160	"res_0"	"varchar"	0	0	0	0
5288	1160	"arg_1"	"varchar"	0	0	1	1
5289	1160	"arg_2"	"varchar"	0	0	1	2
5290	1161	"res_0"	"varchar"	0	0	0	0
5291	1161	"arg_1"	"varchar"	0	0	1	1
5292	1162	"res_0"	"varchar"	0	0	0	0
5293	1162	"arg_1"	"varchar"	0	0	1	1
5294	1162	"arg_2"	"varchar"	0	0	1	2
5295	1163	"res_0"	"varchar"	0	0	0	0
5296	1163	"arg_1"	"varchar"	0	0	1	1
5297	1163	"arg_2"	"int"	32	0	1	2
5298	1164	"res_0"	"varchar"	0	0	0	0
5299	1164	"arg_1"	"varchar"	0	0	1	1
5300	1164	"arg_2"	"int"	32	0	1	2
5301	1164	"arg_3"	"varchar"	0	0	1	3
5302	1165	"res_0"	"varchar"	0	0	0	0
5303	1165	"arg_1"	"varchar"	0	0	1	1
5304	1165	"arg_2"	"int"	32	0	1	2
5305	1166	"res_0"	"varchar"	0	0	0	0
5306	1166	"arg_1"	"varchar"	0	0	1	1
5307	1166	"arg_2"	"int"	32	0	1	2
5308	1166	"arg_3"	"varchar"	0	0	1	3
5309	1167	"res_0"	"varchar"	0	0	0	0
5310	1167	"arg_1"	"varchar"	0	0	1	1
5311	1167	"arg_2"	"int"	32	0	1	2
5312	1167	"arg_3"	"int"	32	0	1	3
5313	1167	"arg_4"	"varchar"	0	0	1	4
5314	1168	"res_0"	"varchar"	0	0	0	0
5315	1168	"arg_1"	"varchar"	0	0	1	1
5316	1168	"arg_2"	"varchar"	0	0	1	2
5317	1168	"arg_3"	"varchar"	0	0	1	3
5318	1169	"res_0"	"varchar"	0	0	0	0
5319	1169	"arg_1"	"varchar"	0	0	1	1
5320	1169	"arg_2"	"int"	32	0	1	2
5321	1170	"res_0"	"varchar"	0	0	0	0
5322	1170	"arg_1"	"int"	32	0	1	1
5323	1171	"res_0"	"int"	32	0	0	0
5324	1171	"arg_1"	"varchar"	0	0	1	1
5325	1172	"res_0"	"int"	32	0	0	0
5326	1172	"arg_1"	"varchar"	0	0	1	1
5327	1173	"res_0"	"int"	32	0	0	0
5328	1173	"arg_1"	"varchar"	0	0	1	1
5329	1174	"res_0"	"varchar"	0	0	0	0
5330	1174	"arg_1"	"varchar"	0	0	1	1
5331	1175	"res_0"	"int"	32	0	0	0
5332	1175	"arg_1"	"varchar"	0	0	1	1
5333	1175	"arg_2"	"varchar"	0	0	1	2
5334	1176	"res_0"	"int"	32	0	0	0
5335	1176	"arg_1"	"varchar"	0	0	1	1
5336	1176	"arg_2"	"varchar"	0	0	1	2
5337	1177	"res_0"	"int"	32	0	0	0
5338	1177	"arg_1"	"varchar"	0	0	1	1
5339	1177	"arg_2"	"varchar"	0	0	1	2
5340	1178	"res_0"	"double"	53	0	0	0
5341	1178	"arg_1"	"varchar"	0	0	1	1
5342	1178	"arg_2"	"varchar"	0	0	1	2
5343	1179	"res_0"	"varchar"	0	0	0	0
5344	1179	"arg_1"	"varchar"	0	0	1	1
5345	1180	"res_0"	"int"	32	0	0	0
5346	1180	"arg_1"	"varchar"	0	0	1	1
5347	1180	"arg_2"	"varchar"	0	0	1	2
5348	1181	"res_0"	"int"	32	0	0	0
5349	1181	"arg_1"	"varchar"	0	0	1	1
5350	1181	"arg_2"	"varchar"	0	0	1	2
5351	1181	"arg_3"	"int"	32	0	1	3
5352	1181	"arg_4"	"int"	32	0	1	4
5353	1181	"arg_5"	"int"	32	0	1	5
5354	1182	"res_0"	"tinyint"	8	0	0	0
5355	1182	"arg_1"	"clob"	0	0	1	1
5356	1182	"arg_2"	"boolean"	1	0	1	2
5357	1183	"res_0"	"smallint"	16	0	0	0
5358	1183	"arg_1"	"clob"	0	0	1	1
5359	1183	"arg_2"	"boolean"	1	0	1	2
5360	1184	"res_0"	"int"	32	0	0	0
5361	1184	"arg_1"	"clob"	0	0	1	1
5362	1184	"arg_2"	"boolean"	1	0	1	2
5363	1185	"res_0"	"clob"	0	0	0	0
5364	1185	"arg_1"	"clob"	0	0	1	1
5365	1186	"res_0"	"int"	32	0	0	0
5366	1186	"arg_1"	"clob"	0	0	1	1
5367	1186	"arg_2"	"clob"	0	0	1	2
5368	1187	"res_0"	"int"	32	0	0	0
5369	1187	"arg_1"	"clob"	0	0	1	1
5370	1187	"arg_2"	"clob"	0	0	1	2
5371	1187	"arg_3"	"int"	32	0	1	3
5372	1188	"res_0"	"clob"	0	0	0	0
5373	1188	"arg_1"	"clob"	0	0	1	1
5374	1188	"arg_2"	"clob"	0	0	1	2
5375	1188	"arg_3"	"int"	32	0	1	3
5376	1189	"res_0"	"clob"	0	0	0	0
5377	1189	"arg_1"	"clob"	0	0	1	1
5378	1189	"arg_2"	"int"	32	0	1	2
5379	1190	"res_0"	"clob"	0	0	0	0
5380	1190	"arg_1"	"clob"	0	0	1	1
5381	1190	"arg_2"	"int"	32	0	1	2
5382	1190	"arg_3"	"int"	32	0	1	3
5383	1191	"res_0"	"boolean"	1	0	0	0
5384	1191	"arg_1"	"clob"	0	0	1	1
5385	1191	"arg_2"	"clob"	0	0	1	2
5386	1192	"res_0"	"boolean"	1	0	0	0
5387	1192	"arg_1"	"clob"	0	0	1	1
5388	1192	"arg_2"	"clob"	0	0	1	2
5389	1192	"arg_3"	"clob"	0	0	1	3
5390	1193	"res_0"	"boolean"	1	0	0	0
5391	1193	"arg_1"	"clob"	0	0	1	1
5392	1193	"arg_2"	"clob"	0	0	1	2
5393	1194	"res_0"	"boolean"	1	0	0	0
5394	1194	"arg_1"	"clob"	0	0	1	1
5395	1194	"arg_2"	"clob"	0	0	1	2
5396	1194	"arg_3"	"clob"	0	0	1	3
5397	1195	"res_0"	"boolean"	1	0	0	0
5398	1195	"arg_1"	"clob"	0	0	1	1
5399	1195	"arg_2"	"clob"	0	0	1	2
5400	1196	"res_0"	"boolean"	1	0	0	0
5401	1196	"arg_1"	"clob"	0	0	1	1
5402	1196	"arg_2"	"clob"	0	0	1	2
5403	1196	"arg_3"	"clob"	0	0	1	3
5404	1197	"res_0"	"boolean"	1	0	0	0
5405	1197	"arg_1"	"clob"	0	0	1	1
5406	1197	"arg_2"	"clob"	0	0	1	2
5407	1198	"res_0"	"boolean"	1	0	0	0
5408	1198	"arg_1"	"clob"	0	0	1	1
5409	1198	"arg_2"	"clob"	0	0	1	2
5410	1198	"arg_3"	"clob"	0	0	1	3
5411	1199	"res_0"	"int"	32	0	0	0
5412	1199	"arg_1"	"clob"	0	0	1	1
5413	1199	"arg_2"	"clob"	0	0	1	2
5414	1200	"res_0"	"clob"	0	0	0	0
5415	1200	"arg_1"	"clob"	0	0	1	1
5416	1200	"arg_2"	"int"	32	0	1	2
5417	1201	"res_0"	"clob"	0	0	0	0
5418	1201	"arg_1"	"clob"	0	0	1	1
5419	1201	"arg_2"	"clob"	0	0	1	2
5420	1202	"res_0"	"int"	32	0	0	0
5421	1202	"arg_1"	"clob"	0	0	1	1
5422	1203	"res_0"	"clob"	0	0	0	0
5423	1203	"arg_1"	"int"	32	0	1	1
5424	1204	"res_0"	"int"	32	0	0	0
5425	1204	"arg_1"	"clob"	0	0	1	1
5426	1205	"res_0"	"clob"	0	0	0	0
5427	1205	"arg_1"	"clob"	0	0	1	1
5428	1205	"arg_2"	"int"	32	0	1	2
5429	1206	"res_0"	"clob"	0	0	0	0
5430	1206	"arg_1"	"clob"	0	0	1	1
5431	1206	"arg_2"	"int"	32	0	1	2
5432	1207	"res_0"	"clob"	0	0	0	0
5433	1207	"arg_1"	"clob"	0	0	1	1
5434	1208	"res_0"	"clob"	0	0	0	0
5435	1208	"arg_1"	"clob"	0	0	1	1
5436	1209	"res_0"	"clob"	0	0	0	0
5437	1209	"arg_1"	"clob"	0	0	1	1
5438	1210	"res_0"	"clob"	0	0	0	0
5439	1210	"arg_1"	"clob"	0	0	1	1
5440	1211	"res_0"	"clob"	0	0	0	0
5441	1211	"arg_1"	"clob"	0	0	1	1
5442	1212	"res_0"	"clob"	0	0	0	0
5443	1212	"arg_1"	"clob"	0	0	1	1
5444	1212	"arg_2"	"clob"	0	0	1	2
5445	1213	"res_0"	"clob"	0	0	0	0
5446	1213	"arg_1"	"clob"	0	0	1	1
5447	1214	"res_0"	"clob"	0	0	0	0
5448	1214	"arg_1"	"clob"	0	0	1	1
5449	1214	"arg_2"	"clob"	0	0	1	2
5450	1215	"res_0"	"clob"	0	0	0	0
5451	1215	"arg_1"	"clob"	0	0	1	1
5452	1216	"res_0"	"clob"	0	0	0	0
5453	1216	"arg_1"	"clob"	0	0	1	1
5454	1216	"arg_2"	"clob"	0	0	1	2
5455	1217	"res_0"	"clob"	0	0	0	0
5456	1217	"arg_1"	"clob"	0	0	1	1
5457	1217	"arg_2"	"int"	32	0	1	2
5458	1218	"res_0"	"clob"	0	0	0	0
5459	1218	"arg_1"	"clob"	0	0	1	1
5460	1218	"arg_2"	"int"	32	0	1	2
5461	1218	"arg_3"	"clob"	0	0	1	3
5462	1219	"res_0"	"clob"	0	0	0	0
5463	1219	"arg_1"	"clob"	0	0	1	1
5464	1219	"arg_2"	"int"	32	0	1	2
5465	1220	"res_0"	"clob"	0	0	0	0
5466	1220	"arg_1"	"clob"	0	0	1	1
5467	1220	"arg_2"	"int"	32	0	1	2
5468	1220	"arg_3"	"clob"	0	0	1	3
5469	1221	"res_0"	"clob"	0	0	0	0
5470	1221	"arg_1"	"clob"	0	0	1	1
5471	1221	"arg_2"	"int"	32	0	1	2
5472	1221	"arg_3"	"int"	32	0	1	3
5473	1221	"arg_4"	"clob"	0	0	1	4
5474	1222	"res_0"	"clob"	0	0	0	0
5475	1222	"arg_1"	"clob"	0	0	1	1
5476	1222	"arg_2"	"clob"	0	0	1	2
5477	1222	"arg_3"	"clob"	0	0	1	3
5478	1223	"res_0"	"clob"	0	0	0	0
5479	1223	"arg_1"	"clob"	0	0	1	1
5480	1223	"arg_2"	"int"	32	0	1	2
5481	1224	"res_0"	"clob"	0	0	0	0
5482	1224	"arg_1"	"int"	32	0	1	1
5483	1225	"res_0"	"int"	32	0	0	0
5484	1225	"arg_1"	"clob"	0	0	1	1
5485	1226	"res_0"	"int"	32	0	0	0
5486	1226	"arg_1"	"clob"	0	0	1	1
5487	1227	"res_0"	"int"	32	0	0	0
5488	1227	"arg_1"	"clob"	0	0	1	1
5489	1228	"res_0"	"clob"	0	0	0	0
5490	1228	"arg_1"	"clob"	0	0	1	1
5491	1229	"res_0"	"int"	32	0	0	0
5492	1229	"arg_1"	"clob"	0	0	1	1
5493	1229	"arg_2"	"clob"	0	0	1	2
5494	1230	"res_0"	"int"	32	0	0	0
5495	1230	"arg_1"	"clob"	0	0	1	1
5496	1230	"arg_2"	"clob"	0	0	1	2
5497	1231	"res_0"	"int"	32	0	0	0
5498	1231	"arg_1"	"clob"	0	0	1	1
5499	1231	"arg_2"	"clob"	0	0	1	2
5500	1232	"res_0"	"double"	53	0	0	0
5501	1232	"arg_1"	"clob"	0	0	1	1
5502	1232	"arg_2"	"clob"	0	0	1	2
5503	1233	"res_0"	"clob"	0	0	0	0
5504	1233	"arg_1"	"clob"	0	0	1	1
5505	1234	"res_0"	"int"	32	0	0	0
5506	1234	"arg_1"	"clob"	0	0	1	1
5507	1234	"arg_2"	"clob"	0	0	1	2
5508	1235	"res_0"	"int"	32	0	0	0
5509	1235	"arg_1"	"clob"	0	0	1	1
5510	1235	"arg_2"	"clob"	0	0	1	2
5511	1235	"arg_3"	"int"	32	0	1	3
5512	1235	"arg_4"	"int"	32	0	1	4
5513	1235	"arg_5"	"int"	32	0	1	5
5514	1236	"res_0"	"table"	0	0	0	0
5515	1236	"arg_1"	"varchar"	0	0	1	1
5516	1236	"arg_2"	"varchar"	0	0	1	2
5517	1236	"arg_3"	"varchar"	0	0	1	3
5518	1236	"arg_4"	"varchar"	0	0	1	4
5519	1236	"arg_5"	"varchar"	0	0	1	5
5520	1236	"arg_6"	"varchar"	0	0	1	6
5521	1236	"arg_7"	"bigint"	64	0	1	7
5522	1236	"arg_8"	"bigint"	64	0	1	8
5523	1236	"arg_9"	"int"	32	0	1	9
5524	1237	"res_0"	"table"	0	0	0	0
5525	1237	"arg_1"	"varchar"	0	0	1	1
5526	1237	"arg_2"	"varchar"	0	0	1	2
5527	29	"res"	"boolean"	1	0	0	0
5528	29	"arg"	"oid"	63	0	1	1
5529	41	"res"	"any"	0	0	0	0
5530	41	"arg"	"any"	0	0	1	1
5531	42	"res"	"boolean"	1	0	0	0
5532	42	"arg"	"any"	0	0	1	1
5533	43	"res"	"boolean"	1	0	0	0
5534	43	"arg"	"any"	0	0	1	1
5535	48	"res"	"any"	0	0	0	0
5536	48	"arg"	"any"	0	0	1	1
5537	49	"res"	"any"	0	0	0	0
5538	49	"arg"	"any"	0	0	1	1
5539	53	"res"	"hugeint"	128	0	0	0
5540	53	"arg"	"tinyint"	8	0	1	1
5541	54	"res"	"hugeint"	128	0	0	0
5542	54	"arg"	"smallint"	16	0	1	1
5543	55	"res"	"hugeint"	128	0	0	0
5544	55	"arg"	"int"	32	0	1	1
5545	56	"res"	"hugeint"	128	0	0	0
5546	56	"arg"	"bigint"	64	0	1	1
5547	57	"res"	"hugeint"	128	0	0	0
5548	57	"arg"	"hugeint"	128	0	1	1
5549	58	"res"	"wrd"	64	0	0	0
5550	58	"arg"	"wrd"	64	0	1	1
5551	59	"res"	"decimal"	39	0	0	0
5552	59	"arg"	"decimal"	2	0	1	1
5553	60	"res"	"decimal"	39	0	0	0
5554	60	"arg"	"decimal"	4	0	1	1
5555	61	"res"	"decimal"	39	0	0	0
5556	61	"arg"	"decimal"	9	0	1	1
5557	62	"res"	"decimal"	39	0	0	0
5558	62	"arg"	"decimal"	18	0	1	1
5559	63	"res"	"decimal"	39	0	0	0
5560	63	"arg"	"decimal"	39	0	1	1
5561	64	"res"	"hugeint"	128	0	0	0
5562	64	"arg"	"tinyint"	8	0	1	1
5563	65	"res"	"hugeint"	128	0	0	0
5564	65	"arg"	"smallint"	16	0	1	1
5565	66	"res"	"hugeint"	128	0	0	0
5566	66	"arg"	"int"	32	0	1	1
5567	67	"res"	"hugeint"	128	0	0	0
5568	67	"arg"	"bigint"	64	0	1	1
5569	68	"res"	"hugeint"	128	0	0	0
5570	68	"arg"	"hugeint"	128	0	1	1
5571	69	"res"	"decimal"	39	0	0	0
5572	69	"arg"	"decimal"	2	0	1	1
5573	70	"res"	"decimal"	39	0	0	0
5574	70	"arg"	"decimal"	4	0	1	1
5575	71	"res"	"decimal"	39	0	0	0
5576	71	"arg"	"decimal"	9	0	1	1
5577	72	"res"	"decimal"	39	0	0	0
5578	72	"arg"	"decimal"	18	0	1	1
5579	73	"res"	"decimal"	39	0	0	0
5580	73	"arg"	"decimal"	39	0	1	1
5581	88	"res"	"real"	24	0	0	0
5582	88	"arg"	"real"	24	0	1	1
5583	89	"res"	"real"	24	0	0	0
5584	89	"arg"	"real"	24	0	1	1
5585	90	"res"	"double"	53	0	0	0
5586	90	"arg"	"double"	53	0	1	1
5587	91	"res"	"double"	53	0	0	0
5588	91	"arg"	"double"	53	0	1	1
5589	92	"res"	"month_interval"	32	0	0	0
5590	92	"arg"	"month_interval"	32	0	1	1
5591	93	"res"	"sec_interval"	13	0	0	0
5592	93	"arg"	"sec_interval"	13	0	1	1
5593	94	"res"	"double"	53	0	0	0
5594	94	"arg"	"double"	53	0	1	1
5595	95	"res"	"wrd"	64	0	0	0
5596	96	"res"	"wrd"	64	0	0	0
5619	5618	"name"	"varchar"	1024	0	0	0
5620	5618	"value"	"varchar"	2048	0	0	1
5622	5621	"name"	"varchar"	1024	0	0	0
5628	5627	"name"	"varchar"	2048	0	0	0
5648	5647	"val"	"clob"	0	0	1	0
5649	5647	"pat"	"clob"	0	0	1	1
5650	5647	"esc"	"clob"	0	0	1	2
5653	5652	"val"	"clob"	0	0	1	0
5654	5652	"pat"	"clob"	0	0	1	1
5655	5652	"esc"	"clob"	0	0	1	2
5658	5657	"val"	"clob"	0	0	1	0
5659	5657	"pat"	"clob"	0	0	1	1
5662	5661	"val"	"clob"	0	0	1	0
5663	5661	"pat"	"clob"	0	0	1	1
5666	5665	"result"	"double"	53	0	0	0
5667	5665	"r"	"double"	53	0	1	1
5670	5669	"result"	"double"	53	0	0	0
5671	5669	"d"	"double"	53	0	1	1
5677	5676	"result"	"clob"	0	0	0	0
5678	5676	"theurl"	"url"	0	0	1	1
5681	5680	"result"	"clob"	0	0	0	0
5682	5680	"theurl"	"url"	0	0	1	1
5685	5684	"result"	"clob"	0	0	0	0
5686	5684	"theurl"	"url"	0	0	1	1
5689	5688	"result"	"clob"	0	0	0	0
5690	5688	"theurl"	"url"	0	0	1	1
5693	5692	"result"	"clob"	0	0	0	0
5694	5692	"theurl"	"url"	0	0	1	1
5697	5696	"result"	"clob"	0	0	0	0
5698	5696	"theurl"	"url"	0	0	1	1
5701	5700	"result"	"clob"	0	0	0	0
5702	5700	"theurl"	"url"	0	0	1	1
5705	5704	"result"	"clob"	0	0	0	0
5706	5704	"theurl"	"url"	0	0	1	1
5709	5708	"result"	"clob"	0	0	0	0
5710	5708	"theurl"	"url"	0	0	1	1
5713	5712	"result"	"clob"	0	0	0	0
5714	5712	"theurl"	"url"	0	0	1	1
5717	5716	"result"	"clob"	0	0	0	0
5718	5716	"theurl"	"url"	0	0	1	1
5721	5720	"result"	"clob"	0	0	0	0
5722	5720	"theurl"	"url"	0	0	1	1
5725	5724	"result"	"clob"	0	0	0	0
5726	5724	"theurl"	"url"	0	0	1	1
5729	5728	"result"	"boolean"	1	0	0	0
5730	5728	"theurl"	"url"	0	0	1	1
5733	5732	"result"	"url"	0	0	0	0
5734	5732	"protocol"	"clob"	0	0	1	1
5735	5732	"hostname"	"clob"	0	0	1	2
5736	5732	"port"	"int"	32	0	1	3
5737	5732	"file"	"clob"	0	0	1	4
5740	5739	"result"	"url"	0	0	0	0
5741	5739	"protocol"	"clob"	0	0	1	1
5742	5739	"hostname"	"clob"	0	0	1	2
5743	5739	"file"	"clob"	0	0	1	3
5746	5745	"result"	"date"	0	0	0	0
5747	5745	"s"	"clob"	0	0	1	1
5748	5745	"format"	"clob"	0	0	1	2
5751	5750	"result"	"clob"	0	0	0	0
5752	5750	"d"	"date"	0	0	1	1
5753	5750	"format"	"clob"	0	0	1	2
5756	5755	"result"	"time"	1	0	0	0
5757	5755	"s"	"clob"	0	0	1	1
5758	5755	"format"	"clob"	0	0	1	2
5761	5760	"result"	"clob"	0	0	0	0
5762	5760	"d"	"time"	1	0	1	1
5763	5760	"format"	"clob"	0	0	1	2
5766	5765	"result"	"timestamp"	7	0	0	0
5767	5765	"s"	"clob"	0	0	1	1
5768	5765	"format"	"clob"	0	0	1	2
5771	5770	"result"	"clob"	0	0	0	0
5772	5770	"d"	"timestamp"	7	0	1	1
5773	5770	"format"	"clob"	0	0	1	2
5777	5776	"result"	"inet"	0	0	0	0
5778	5776	"p"	"inet"	0	0	1	1
5781	5780	"result"	"clob"	0	0	0	0
5782	5780	"p"	"inet"	0	0	1	1
5785	5784	"result"	"int"	32	0	0	0
5786	5784	"p"	"inet"	0	0	1	1
5789	5788	"result"	"inet"	0	0	0	0
5790	5788	"p"	"inet"	0	0	1	1
5791	5788	"mask"	"int"	32	0	1	2
5794	5793	"result"	"inet"	0	0	0	0
5795	5793	"p"	"inet"	0	0	1	1
5798	5797	"result"	"inet"	0	0	0	0
5799	5797	"p"	"inet"	0	0	1	1
5802	5801	"result"	"inet"	0	0	0	0
5803	5801	"p"	"inet"	0	0	1	1
5806	5805	"result"	"clob"	0	0	0	0
5807	5805	"p"	"inet"	0	0	1	1
5810	5809	"result"	"clob"	0	0	0	0
5811	5809	"p"	"inet"	0	0	1	1
5814	5813	"result"	"boolean"	1	0	0	0
5815	5813	"i1"	"inet"	0	0	1	1
5816	5813	"i2"	"inet"	0	0	1	2
5819	5818	"result"	"boolean"	1	0	0	0
5820	5818	"i1"	"inet"	0	0	1	1
5821	5818	"i2"	"inet"	0	0	1	2
5824	5823	"result"	"boolean"	1	0	0	0
5825	5823	"i1"	"inet"	0	0	1	1
5826	5823	"i2"	"inet"	0	0	1	2
5829	5828	"result"	"boolean"	1	0	0	0
5830	5828	"i1"	"inet"	0	0	1	1
5831	5828	"i2"	"inet"	0	0	1	2
5834	5833	"id"	"oid"	63	0	0	0
5835	5833	"owner"	"clob"	0	0	0	1
5836	5833	"defined"	"timestamp"	7	0	0	2
5837	5833	"query"	"clob"	0	0	0	3
5838	5833	"pipe"	"clob"	0	0	0	4
5839	5833	"plan"	"clob"	0	0	0	5
5840	5833	"mal"	"int"	32	0	0	6
5841	5833	"optimize"	"bigint"	64	0	0	7
5844	5843	"id"	"oid"	63	0	0	0
5845	5843	"start"	"timestamp"	7	0	0	1
5846	5843	"stop"	"timestamp"	7	0	0	2
5847	5843	"arguments"	"clob"	0	0	0	3
5848	5843	"tuples"	"wrd"	64	0	0	4
5849	5843	"run"	"bigint"	64	0	0	5
5850	5843	"ship"	"bigint"	64	0	0	6
5851	5843	"cpu"	"int"	32	0	0	7
5852	5843	"io"	"int"	32	0	0	8
5898	5897	"threshold"	"smallint"	16	0	1	0
5903	5902	"event"	"int"	32	0	0	0
5904	5902	"clk"	"varchar"	20	0	0	1
5905	5902	"pc"	"varchar"	50	0	0	2
5906	5902	"thread"	"int"	32	0	0	3
5907	5902	"ticks"	"bigint"	64	0	0	4
5908	5902	"rrsmb"	"bigint"	64	0	0	5
5909	5902	"vmmb"	"bigint"	64	0	0	6
5910	5902	"reads"	"bigint"	64	0	0	7
5911	5902	"writes"	"bigint"	64	0	0	8
5912	5902	"minflt"	"bigint"	64	0	0	9
5913	5902	"majflt"	"bigint"	64	0	0	10
5914	5902	"nvcsw"	"bigint"	64	0	0	11
5915	5902	"stmt"	"clob"	0	0	0	12
5933	5932	"host"	"clob"	0	0	1	0
5934	5932	"port"	"int"	32	0	1	1
5937	5936	"ticks"	"int"	32	0	1	0
5940	5939	"result"	"timestamp"	7	0	0	0
5941	5939	"sec"	"bigint"	64	0	1	1
5944	5943	"result"	"timestamp"	7	0	0	0
5945	5943	"sec"	"int"	32	0	1	1
5948	5947	"result"	"int"	32	0	0	0
5949	5947	"ts"	"timestamp"	7	0	1	1
5952	5951	"result"	"int"	32	0	0	0
5953	5951	"ts"	"timestamptz"	7	0	1	1
5956	5955	"sys"	"clob"	0	0	1	0
5957	5955	"tab"	"clob"	0	0	1	1
5958	5955	"col"	"clob"	0	0	1	2
5961	5960	"sys"	"clob"	0	0	1	0
5962	5960	"tab"	"clob"	0	0	1	1
5965	5964	"sys"	"clob"	0	0	1	0
5966	5964	"tab"	"clob"	0	0	1	1
5969	5968	"sys"	"clob"	0	0	1	0
5970	5968	"tab"	"clob"	0	0	1	1
5973	5972	"sch"	"varchar"	100	0	0	0
5974	5972	"usr"	"varchar"	100	0	0	1
5975	5972	"dep_type"	"varchar"	32	0	0	2
5978	5977	"sch"	"varchar"	100	0	0	0
5979	5977	"usr"	"varchar"	100	0	0	1
5980	5977	"dep_type"	"varchar"	32	0	0	2
5983	5982	"sch"	"varchar"	100	0	0	0
5984	5982	"usr"	"varchar"	100	0	0	1
5985	5982	"dep_type"	"varchar"	32	0	0	2
5988	5987	"sch"	"varchar"	100	0	0	0
5989	5987	"usr"	"varchar"	100	0	0	1
5990	5987	"dep_type"	"varchar"	32	0	0	2
5993	5992	"sch"	"varchar"	100	0	0	0
5994	5992	"usr"	"varchar"	100	0	0	1
5995	5992	"dep_type"	"varchar"	32	0	0	2
5998	5997	"sch"	"varchar"	100	0	0	0
5999	5997	"usr"	"varchar"	100	0	0	1
6000	5997	"dep_type"	"varchar"	32	0	0	2
6003	6002	"sch"	"varchar"	100	0	0	0
6004	6002	"usr"	"varchar"	100	0	0	1
6005	6002	"dep_type"	"varchar"	32	0	0	2
6008	6007	"sch"	"varchar"	100	0	0	0
6009	6007	"usr"	"varchar"	100	0	0	1
6010	6007	"dep_type"	"varchar"	32	0	0	2
6013	6012	"sch"	"varchar"	100	0	0	0
6014	6012	"usr"	"varchar"	100	0	0	1
6015	6012	"dep_type"	"varchar"	32	0	0	2
6018	6017	"sch"	"varchar"	100	0	0	0
6019	6017	"usr"	"varchar"	100	0	0	1
6020	6017	"dep_type"	"varchar"	32	0	0	2
6023	6022	"sch"	"varchar"	100	0	0	0
6024	6022	"usr"	"varchar"	100	0	0	1
6025	6022	"dep_type"	"varchar"	32	0	0	2
6028	6027	"sch"	"varchar"	100	0	0	0
6029	6027	"usr"	"varchar"	100	0	0	1
6030	6027	"dep_type"	"varchar"	32	0	0	2
6033	6032	"sch"	"varchar"	100	0	0	0
6034	6032	"usr"	"varchar"	100	0	0	1
6035	6032	"dep_type"	"varchar"	32	0	0	2
6038	6037	"sch"	"varchar"	100	0	0	0
6039	6037	"usr"	"varchar"	100	0	0	1
6040	6037	"dep_type"	"varchar"	32	0	0	2
6043	6042	"sch"	"varchar"	100	0	0	0
6044	6042	"usr"	"varchar"	100	0	0	1
6045	6042	"dep_type"	"varchar"	32	0	0	2
6048	6047	"sch"	"varchar"	100	0	0	0
6049	6047	"usr"	"varchar"	100	0	0	1
6050	6047	"dep_type"	"varchar"	32	0	0	2
6053	6052	"sch"	"varchar"	100	0	0	0
6054	6052	"usr"	"varchar"	100	0	0	1
6055	6052	"dep_type"	"varchar"	32	0	0	2
6058	6057	"result"	"clob"	0	0	0	0
6059	6057	"username"	"clob"	0	0	1	1
6062	6061	"user"	"clob"	0	0	0	0
6063	6061	"login"	"timestamp"	7	0	0	1
6064	6061	"sessiontimeout"	"bigint"	64	0	0	2
6065	6061	"lastcommand"	"timestamp"	7	0	0	3
6066	6061	"querytimeout"	"bigint"	64	0	0	4
6067	6061	"active"	"boolean"	1	0	0	5
6078	6077	"delay"	"tinyint"	8	0	1	0
6081	6080	"delay"	"tinyint"	8	0	1	0
6082	6080	"force"	"boolean"	1	0	1	1
6085	6084	"query"	"bigint"	64	0	1	0
6088	6087	"query"	"bigint"	64	0	1	0
6089	6087	"session"	"bigint"	64	0	1	1
6092	6091	"timeout"	"bigint"	64	0	1	0
6095	6094	"result"	"varchar"	32	0	0	0
6096	6094	"s1"	"varchar"	32	0	1	1
6097	6094	"st"	"int"	32	0	1	2
6098	6094	"len"	"int"	32	0	1	3
6099	6094	"s3"	"varchar"	32	0	1	4
6102	6101	"result"	"double"	53	0	0	0
6103	6101	"num"	"double"	53	0	1	1
6104	6101	"prc"	"int"	32	0	1	2
6107	6106	"result"	"double"	53	0	0	0
6108	6106	"num"	"double"	53	0	1	1
6109	6106	"prc"	"int"	32	0	1	2
6110	6106	"truncat"	"int"	32	0	1	3
6113	6112	"result"	"clob"	0	0	0	0
6114	6112	"num"	"double"	53	0	1	1
6115	6112	"prc"	"int"	32	0	1	2
6116	6112	"truncat"	"int"	32	0	1	3
6119	6118	"result"	"double"	53	0	0	0
6120	6118	"pdec"	"double"	53	0	1	1
6121	6118	"pradius"	"double"	53	0	1	2
6124	6123	"result"	"oid"	63	0	0	0
6125	6123	"x"	"int"	32	0	1	1
6126	6123	"y"	"int"	32	0	1	2
6129	6128	"result"	"int"	32	0	0	0
6130	6128	"z"	"oid"	63	0	1	1
6133	6132	"result"	"int"	32	0	0	0
6134	6132	"z"	"oid"	63	0	1	1
6137	6136	"rewrite"	"clob"	0	0	0	0
6138	6136	"count"	"int"	32	0	0	1
6141	6140	"query"	"clob"	0	0	0	0
6142	6140	"count"	"int"	32	0	0	1
6145	6144	"filename"	"clob"	0	0	1	0
6148	6147	"name"	"clob"	0	0	0	0
6149	6147	"def"	"clob"	0	0	0	1
6150	6147	"status"	"clob"	0	0	0	2
6158	6157	"name"	"clob"	0	0	0	0
6159	6157	"value"	"clob"	0	0	0	1
6166	6165	"id"	"int"	32	0	0	0
6167	6165	"name"	"clob"	0	0	0	1
6168	6165	"htype"	"clob"	0	0	0	2
6169	6165	"ttype"	"clob"	0	0	0	3
6170	6165	"count"	"bigint"	64	0	0	4
6171	6165	"refcnt"	"int"	32	0	0	5
6172	6165	"lrefcnt"	"int"	32	0	0	6
6173	6165	"location"	"clob"	0	0	0	7
6174	6165	"heat"	"int"	32	0	0	8
6175	6165	"dirty"	"clob"	0	0	0	9
6176	6165	"status"	"clob"	0	0	0	10
6177	6165	"kind"	"clob"	0	0	0	11
6180	6179	"ra_stmt"	"clob"	0	0	1	0
6181	6179	"opt"	"boolean"	1	0	1	1
6186	6185	"qtag"	"bigint"	64	0	0	0
6187	6185	"user"	"clob"	0	0	0	1
6188	6185	"started"	"timestamp"	7	0	0	2
6189	6185	"estimate"	"timestamp"	7	0	0	3
6190	6185	"progress"	"int"	32	0	0	4
6191	6185	"status"	"clob"	0	0	0	5
6192	6185	"tag"	"oid"	63	0	0	6
6193	6185	"query"	"clob"	0	0	0	7
6206	6205	"tag"	"int"	32	0	1	0
6209	6208	"tag"	"int"	32	0	1	0
6212	6211	"tag"	"int"	32	0	1	0
6215	6214	"tag"	"bigint"	64	0	1	0
6218	6217	"tag"	"bigint"	64	0	1	0
6221	6220	"tag"	"bigint"	64	0	1	0
6224	6223	"rowid"	"bigint"	64	0	0	0
6225	6223	"fldid"	"int"	32	0	0	1
6226	6223	"message"	"clob"	0	0	0	2
6227	6223	"input"	"clob"	0	0	0	3
6238	6237	"result"	"double"	53	0	0	0
6239	6237	"val"	"tinyint"	8	0	1	1
6242	6241	"result"	"double"	53	0	0	0
6243	6241	"val"	"smallint"	16	0	1	1
6246	6245	"result"	"double"	53	0	0	0
6247	6245	"val"	"int"	32	0	1	1
6250	6249	"result"	"double"	53	0	0	0
6251	6249	"val"	"wrd"	64	0	1	1
6254	6253	"result"	"double"	53	0	0	0
6255	6253	"val"	"bigint"	64	0	1	1
6258	6257	"result"	"double"	53	0	0	0
6259	6257	"val"	"real"	24	0	1	1
6262	6261	"result"	"double"	53	0	0	0
6263	6261	"val"	"double"	53	0	1	1
6266	6265	"result"	"double"	53	0	0	0
6267	6265	"val"	"date"	0	0	1	1
6270	6269	"result"	"double"	53	0	0	0
6271	6269	"val"	"time"	1	0	1	1
6274	6273	"result"	"double"	53	0	0	0
6275	6273	"val"	"timestamp"	7	0	1	1
6278	6277	"result"	"double"	53	0	0	0
6279	6277	"val"	"tinyint"	8	0	1	1
6282	6281	"result"	"double"	53	0	0	0
6283	6281	"val"	"smallint"	16	0	1	1
6286	6285	"result"	"double"	53	0	0	0
6287	6285	"val"	"int"	32	0	1	1
6290	6289	"result"	"double"	53	0	0	0
6291	6289	"val"	"wrd"	64	0	1	1
6294	6293	"result"	"double"	53	0	0	0
6295	6293	"val"	"bigint"	64	0	1	1
6298	6297	"result"	"double"	53	0	0	0
6299	6297	"val"	"real"	24	0	1	1
6302	6301	"result"	"double"	53	0	0	0
6303	6301	"val"	"double"	53	0	1	1
6306	6305	"result"	"double"	53	0	0	0
6307	6305	"val"	"date"	0	0	1	1
6310	6309	"result"	"double"	53	0	0	0
6311	6309	"val"	"time"	1	0	1	1
6314	6313	"result"	"double"	53	0	0	0
6315	6313	"val"	"timestamp"	7	0	1	1
6318	6317	"result"	"double"	53	0	0	0
6319	6317	"val"	"tinyint"	8	0	1	1
6322	6321	"result"	"double"	53	0	0	0
6323	6321	"val"	"smallint"	16	0	1	1
6326	6325	"result"	"double"	53	0	0	0
6327	6325	"val"	"int"	32	0	1	1
6330	6329	"result"	"double"	53	0	0	0
6331	6329	"val"	"wrd"	64	0	1	1
6334	6333	"result"	"double"	53	0	0	0
6335	6333	"val"	"bigint"	64	0	1	1
6338	6337	"result"	"double"	53	0	0	0
6339	6337	"val"	"real"	24	0	1	1
6342	6341	"result"	"double"	53	0	0	0
6343	6341	"val"	"double"	53	0	1	1
6346	6345	"result"	"double"	53	0	0	0
6347	6345	"val"	"date"	0	0	1	1
6350	6349	"result"	"double"	53	0	0	0
6351	6349	"val"	"time"	1	0	1	1
6354	6353	"result"	"double"	53	0	0	0
6355	6353	"val"	"timestamp"	7	0	1	1
6358	6357	"result"	"double"	53	0	0	0
6359	6357	"val"	"tinyint"	8	0	1	1
6362	6361	"result"	"double"	53	0	0	0
6363	6361	"val"	"smallint"	16	0	1	1
6366	6365	"result"	"double"	53	0	0	0
6367	6365	"val"	"int"	32	0	1	1
6370	6369	"result"	"double"	53	0	0	0
6371	6369	"val"	"wrd"	64	0	1	1
6374	6373	"result"	"double"	53	0	0	0
6375	6373	"val"	"bigint"	64	0	1	1
6378	6377	"result"	"double"	53	0	0	0
6379	6377	"val"	"real"	24	0	1	1
6382	6381	"result"	"double"	53	0	0	0
6383	6381	"val"	"double"	53	0	1	1
6386	6385	"result"	"double"	53	0	0	0
6387	6385	"val"	"date"	0	0	1	1
6390	6389	"result"	"double"	53	0	0	0
6391	6389	"val"	"time"	1	0	1	1
6394	6393	"result"	"double"	53	0	0	0
6395	6393	"val"	"timestamp"	7	0	1	1
6398	6397	"result"	"tinyint"	8	0	0	0
6399	6397	"val"	"tinyint"	8	0	1	1
6402	6401	"result"	"smallint"	16	0	0	0
6403	6401	"val"	"smallint"	16	0	1	1
6406	6405	"result"	"int"	32	0	0	0
6407	6405	"val"	"int"	32	0	1	1
6410	6409	"result"	"wrd"	64	0	0	0
6411	6409	"val"	"wrd"	64	0	1	1
6414	6413	"result"	"bigint"	64	0	0	0
6415	6413	"val"	"bigint"	64	0	1	1
6418	6417	"result"	"decimal"	18	3	0	0
6419	6417	"val"	"decimal"	18	3	1	1
6422	6421	"result"	"real"	24	0	0	0
6423	6421	"val"	"real"	24	0	1	1
6426	6425	"result"	"double"	53	0	0	0
6427	6425	"val"	"double"	53	0	1	1
6430	6429	"result"	"date"	0	0	0	0
6431	6429	"val"	"date"	0	0	1	1
6434	6433	"result"	"time"	1	0	0	0
6435	6433	"val"	"time"	1	0	1	1
6438	6437	"result"	"timestamp"	7	0	0	0
6439	6437	"val"	"timestamp"	7	0	1	1
6442	6441	"result"	"tinyint"	8	0	0	0
6443	6441	"val"	"tinyint"	8	0	1	1
6444	6441	"q"	"double"	53	0	1	2
6447	6446	"result"	"smallint"	16	0	0	0
6448	6446	"val"	"smallint"	16	0	1	1
6449	6446	"q"	"double"	53	0	1	2
6452	6451	"result"	"int"	32	0	0	0
6453	6451	"val"	"int"	32	0	1	1
6454	6451	"q"	"double"	53	0	1	2
6457	6456	"result"	"wrd"	64	0	0	0
6458	6456	"val"	"wrd"	64	0	1	1
6459	6456	"q"	"double"	53	0	1	2
6462	6461	"result"	"bigint"	64	0	0	0
6463	6461	"val"	"bigint"	64	0	1	1
6464	6461	"q"	"double"	53	0	1	2
6467	6466	"result"	"decimal"	18	3	0	0
6468	6466	"val"	"decimal"	18	3	1	1
6469	6466	"q"	"double"	53	0	1	2
6472	6471	"result"	"real"	24	0	0	0
6473	6471	"val"	"real"	24	0	1	1
6474	6471	"q"	"double"	53	0	1	2
6477	6476	"result"	"double"	53	0	0	0
6478	6476	"val"	"double"	53	0	1	1
6479	6476	"q"	"double"	53	0	1	2
6482	6481	"result"	"date"	0	0	0	0
6483	6481	"val"	"date"	0	0	1	1
6484	6481	"q"	"double"	53	0	1	2
6487	6486	"result"	"time"	1	0	0	0
6488	6486	"val"	"time"	1	0	1	1
6489	6486	"q"	"double"	53	0	1	2
6492	6491	"result"	"timestamp"	7	0	0	0
6493	6491	"val"	"timestamp"	7	0	1	1
6494	6491	"q"	"double"	53	0	1	2
6497	6496	"result"	"tinyint"	8	0	0	0
6498	6496	"e1"	"tinyint"	8	0	1	1
6499	6496	"e2"	"tinyint"	8	0	1	2
6502	6501	"result"	"smallint"	16	0	0	0
6503	6501	"e1"	"smallint"	16	0	1	1
6504	6501	"e2"	"smallint"	16	0	1	2
6507	6506	"result"	"int"	32	0	0	0
6508	6506	"e1"	"int"	32	0	1	1
6509	6506	"e2"	"int"	32	0	1	2
6512	6511	"result"	"wrd"	64	0	0	0
6513	6511	"e1"	"wrd"	64	0	1	1
6514	6511	"e2"	"wrd"	64	0	1	2
6517	6516	"result"	"bigint"	64	0	0	0
6518	6516	"e1"	"bigint"	64	0	1	1
6519	6516	"e2"	"bigint"	64	0	1	2
6522	6521	"result"	"real"	24	0	0	0
6523	6521	"e1"	"real"	24	0	1	1
6524	6521	"e2"	"real"	24	0	1	2
6527	6526	"result"	"double"	53	0	0	0
6528	6526	"e1"	"double"	53	0	1	1
6529	6526	"e2"	"double"	53	0	1	2
6532	6531	"result"	"double"	53	0	0	0
6533	6531	"val"	"hugeint"	128	0	1	1
6536	6535	"result"	"double"	53	0	0	0
6537	6535	"val"	"hugeint"	128	0	1	1
6540	6539	"result"	"double"	53	0	0	0
6541	6539	"val"	"hugeint"	128	0	1	1
6544	6543	"result"	"double"	53	0	0	0
6545	6543	"val"	"hugeint"	128	0	1	1
6548	6547	"result"	"hugeint"	128	0	0	0
6549	6547	"val"	"hugeint"	128	0	1	1
6552	6551	"result"	"hugeint"	128	0	0	0
6553	6551	"val"	"hugeint"	128	0	1	1
6554	6551	"q"	"double"	53	0	1	2
6557	6556	"result"	"hugeint"	128	0	0	0
6558	6556	"e1"	"hugeint"	128	0	1	1
6559	6556	"e2"	"hugeint"	128	0	1	2
6575	6574	"result"	"mbr"	0	0	0	0
6576	6574	"g"	"geometry"	0	0	1	1
6579	6578	"result"	"boolean"	1	0	0	0
6580	6578	"a"	"mbr"	0	0	1	1
6581	6578	"b"	"mbr"	0	0	1	2
6584	6583	"result"	"geometry"	0	0	0	0
6585	6583	"wkt"	"clob"	0	0	1	1
6586	6583	"srid"	"smallint"	16	0	1	2
6589	6588	"result"	"point"	0	0	0	0
6590	6588	"wkt"	"clob"	0	0	1	1
6591	6588	"srid"	"smallint"	16	0	1	2
6594	6593	"result"	"linestring"	0	0	0	0
6595	6593	"wkt"	"clob"	0	0	1	1
6596	6593	"srid"	"smallint"	16	0	1	2
6599	6598	"result"	"polygon"	0	0	0	0
6600	6598	"wkt"	"clob"	0	0	1	1
6601	6598	"srid"	"smallint"	16	0	1	2
6604	6603	"result"	"multipoint"	0	0	0	0
6605	6603	"wkt"	"clob"	0	0	1	1
6606	6603	"srid"	"smallint"	16	0	1	2
6609	6608	"result"	"multilinestring"	0	0	0	0
6610	6608	"wkt"	"clob"	0	0	1	1
6611	6608	"srid"	"smallint"	16	0	1	2
6614	6613	"result"	"multipolygon"	0	0	0	0
6615	6613	"wkt"	"clob"	0	0	1	1
6616	6613	"srid"	"smallint"	16	0	1	2
6619	6618	"result"	"multipolygon"	0	0	0	0
6620	6618	"wkt"	"clob"	0	0	1	1
6621	6618	"srid"	"smallint"	16	0	1	2
6624	6623	"result"	"polygon"	0	0	0	0
6625	6623	"wkt"	"clob"	0	0	1	1
6626	6623	"srid"	"smallint"	16	0	1	2
6629	6628	"result"	"clob"	0	0	0	0
6630	6628	"g"	"geometry"	0	0	1	1
6633	6632	"result"	"double"	53	0	0	0
6634	6632	"g"	"geometry"	0	0	1	1
6637	6636	"result"	"double"	53	0	0	0
6638	6636	"g"	"geometry"	0	0	1	1
6641	6640	"result"	"point"	0	0	0	0
6642	6640	"x"	"double"	53	0	1	1
6643	6640	"y"	"double"	53	0	1	2
6646	6645	"result"	"int"	32	0	0	0
6647	6645	"g"	"geometry"	0	0	1	1
6650	6649	"result"	"int"	32	0	0	0
6651	6649	"g"	"geometry"	0	0	1	1
6654	6653	"result"	"int"	32	0	0	0
6655	6653	"g"	"geometry"	0	0	1	1
6658	6657	"result"	"geometry"	0	0	0	0
6659	6657	"g"	"geometry"	0	0	1	1
6662	6661	"result"	"boolean"	1	0	0	0
6663	6661	"g"	"geometry"	0	0	1	1
6666	6665	"result"	"boolean"	1	0	0	0
6667	6665	"g"	"geometry"	0	0	1	1
6670	6669	"result"	"geometry"	0	0	0	0
6671	6669	"g"	"geometry"	0	0	1	1
6674	6673	"result"	"boolean"	1	0	0	0
6675	6673	"a"	"geometry"	0	0	1	1
6676	6673	"b"	"geometry"	0	0	1	2
6679	6678	"result"	"boolean"	1	0	0	0
6680	6678	"a"	"geometry"	0	0	1	1
6681	6678	"b"	"geometry"	0	0	1	2
6684	6683	"result"	"boolean"	1	0	0	0
6685	6683	"a"	"geometry"	0	0	1	1
6686	6683	"b"	"geometry"	0	0	1	2
6689	6688	"result"	"boolean"	1	0	0	0
6690	6688	"a"	"geometry"	0	0	1	1
6691	6688	"b"	"geometry"	0	0	1	2
6694	6693	"result"	"boolean"	1	0	0	0
6695	6693	"a"	"geometry"	0	0	1	1
6696	6693	"b"	"geometry"	0	0	1	2
6699	6698	"result"	"boolean"	1	0	0	0
6700	6698	"a"	"geometry"	0	0	1	1
6701	6698	"b"	"geometry"	0	0	1	2
6704	6703	"result"	"boolean"	1	0	0	0
6705	6703	"a"	"geometry"	0	0	1	1
6706	6703	"b"	"geometry"	0	0	1	2
6709	6708	"result"	"boolean"	1	0	0	0
6710	6708	"a"	"geometry"	0	0	1	1
6711	6708	"x"	"double"	53	0	1	2
6712	6708	"y"	"double"	53	0	1	3
6715	6714	"result"	"boolean"	1	0	0	0
6716	6714	"a"	"geometry"	0	0	1	1
6717	6714	"b"	"geometry"	0	0	1	2
6720	6719	"result"	"boolean"	1	0	0	0
6721	6719	"a"	"geometry"	0	0	1	1
6722	6719	"b"	"geometry"	0	0	1	2
6723	6719	"pattern"	"clob"	0	0	1	3
6726	6725	"result"	"double"	53	0	0	0
6727	6725	"g"	"geometry"	0	0	1	1
6730	6729	"result"	"double"	53	0	0	0
6731	6729	"g"	"geometry"	0	0	1	1
6734	6733	"result"	"double"	53	0	0	0
6735	6733	"a"	"geometry"	0	0	1	1
6736	6733	"b"	"geometry"	0	0	1	2
6739	6738	"result"	"geometry"	0	0	0	0
6740	6738	"a"	"geometry"	0	0	1	1
6741	6738	"distance"	"double"	53	0	1	2
6744	6743	"result"	"geometry"	0	0	0	0
6745	6743	"a"	"geometry"	0	0	1	1
6748	6747	"result"	"geometry"	0	0	0	0
6749	6747	"a"	"geometry"	0	0	1	1
6750	6747	"b"	"geometry"	0	0	1	2
6753	6752	"result"	"geometry"	0	0	0	0
6754	6752	"a"	"geometry"	0	0	1	1
6755	6752	"b"	"geometry"	0	0	1	2
6758	6757	"result"	"geometry"	0	0	0	0
6759	6757	"a"	"geometry"	0	0	1	1
6760	6757	"b"	"geometry"	0	0	1	2
6763	6762	"result"	"geometry"	0	0	0	0
6764	6762	"a"	"geometry"	0	0	1	1
6765	6762	"b"	"geometry"	0	0	1	2
6770	6769	"result"	"json"	0	0	0	0
6771	6769	"js"	"json"	0	0	1	1
6772	6769	"pathexpr"	"clob"	0	0	1	2
6775	6774	"result"	"json"	0	0	0	0
6776	6774	"js"	"json"	0	0	1	1
6777	6774	"name"	"tinyint"	8	0	1	2
6780	6779	"result"	"json"	0	0	0	0
6781	6779	"js"	"json"	0	0	1	1
6782	6779	"name"	"int"	32	0	1	2
6785	6784	"result"	"json"	0	0	0	0
6786	6784	"js"	"json"	0	0	1	1
6787	6784	"name"	"bigint"	64	0	1	2
6790	6789	"result"	"clob"	0	0	0	0
6791	6789	"js"	"json"	0	0	1	1
6792	6789	"e"	"clob"	0	0	1	2
6795	6794	"result"	"double"	53	0	0	0
6796	6794	"js"	"json"	0	0	1	1
6799	6798	"result"	"bigint"	64	0	0	0
6800	6798	"js"	"json"	0	0	1	1
6803	6802	"result"	"boolean"	1	0	0	0
6804	6802	"js"	"clob"	0	0	1	1
6807	6806	"result"	"boolean"	1	0	0	0
6808	6806	"js"	"clob"	0	0	1	1
6811	6810	"result"	"boolean"	1	0	0	0
6812	6810	"js"	"clob"	0	0	1	1
6815	6814	"result"	"boolean"	1	0	0	0
6816	6814	"js"	"json"	0	0	1	1
6819	6818	"result"	"boolean"	1	0	0	0
6820	6818	"js"	"json"	0	0	1	1
6823	6822	"result"	"boolean"	1	0	0	0
6824	6822	"js"	"json"	0	0	1	1
6827	6826	"result"	"int"	32	0	0	0
6828	6826	"js"	"json"	0	0	1	1
6831	6830	"result"	"json"	0	0	0	0
6832	6830	"js"	"json"	0	0	1	1
6835	6834	"result"	"json"	0	0	0	0
6836	6834	"js"	"json"	0	0	1	1
6839	6838	"result"	"clob"	0	0	0	0
6840	6838	"js"	"json"	0	0	1	1
6843	6842	"result"	"clob"	0	0	0	0
6844	6842	"js"	"clob"	0	0	1	1
6847	6846	"result"	"clob"	0	0	0	0
6848	6846	"js"	"int"	32	0	1	1
6851	6850	"result"	"clob"	0	0	0	0
6852	6850	"js"	"json"	0	0	1	1
6855	6854	"result"	"clob"	0	0	0	0
6856	6854	"x"	"clob"	0	0	1	1
6859	6858	"result"	"clob"	0	0	0	0
6860	6858	"x"	"double"	53	0	1	1
6863	6862	"result"	"json"	0	0	0	0
6864	6862	"js"	"json"	0	0	1	1
6865	6862	"name"	"hugeint"	128	0	1	2
6868	6867	"result"	"clob"	0	0	0	0
6869	6867	"v"	"clob"	0	0	1	1
6873	6872	"result"	"uuid"	0	0	0	0
6876	6875	"result"	"uuid"	0	0	0	0
6877	6875	"u"	"uuid"	0	0	1	1
6880	6879	"result"	"uuid"	0	0	0	0
6881	6879	"u"	"clob"	0	0	1	1
6884	6883	"result"	"double"	53	0	0	0
6885	6883	"chi2"	"double"	53	0	1	1
6886	6883	"datapoints"	"double"	53	0	1	2
6910	6909	"dirname"	"clob"	0	0	1	0
6913	6912	"fname"	"clob"	0	0	1	0
6916	6915	"tname"	"clob"	0	0	1	0
6919	6918	"dirname"	"clob"	0	0	1	0
6920	6918	"pat"	"clob"	0	0	1	1
6955	6954	"fname"	"varchar"	256	0	1	0
6958	6957	"fid"	"int"	32	0	1	0
6959	6957	"varnname"	"varchar"	256	0	1	1
6962	6961	"schema"	"clob"	0	0	0	0
6963	6961	"table"	"clob"	0	0	0	1
6964	6961	"column"	"clob"	0	0	0	2
6965	6961	"type"	"clob"	0	0	0	3
6966	6961	"mode"	"clob"	0	0	0	4
6967	6961	"location"	"clob"	0	0	0	5
6968	6961	"count"	"bigint"	64	0	0	6
6969	6961	"typewidth"	"int"	32	0	0	7
6970	6961	"columnsize"	"bigint"	64	0	0	8
6971	6961	"heapsize"	"bigint"	64	0	0	9
6972	6961	"hashes"	"bigint"	64	0	0	10
6973	6961	"phash"	"boolean"	1	0	0	11
6974	6961	"imprints"	"bigint"	64	0	0	12
6975	6961	"sorted"	"boolean"	1	0	0	13
6976	6961	"orderidx"	"bigint"	64	0	0	14
7011	7010	"result"	"bigint"	64	0	0	0
7012	7010	"nme"	"clob"	0	0	1	1
7013	7010	"i"	"bigint"	64	0	1	2
7014	7010	"d"	"bigint"	64	0	1	3
7017	7016	"result"	"bigint"	64	0	0	0
7018	7016	"tpe"	"clob"	0	0	1	1
7019	7016	"i"	"bigint"	64	0	1	2
7020	7016	"w"	"int"	32	0	1	3
7023	7022	"result"	"bigint"	64	0	0	0
7024	7022	"b"	"boolean"	1	0	1	1
7025	7022	"i"	"bigint"	64	0	1	2
7028	7027	"result"	"bigint"	64	0	0	0
7029	7027	"i"	"bigint"	64	0	1	1
7030	7027	"nme"	"clob"	0	0	1	2
7033	7032	"schema"	"clob"	0	0	0	0
7034	7032	"table"	"clob"	0	0	0	1
7035	7032	"column"	"clob"	0	0	0	2
7036	7032	"type"	"clob"	0	0	0	3
7037	7032	"count"	"bigint"	64	0	0	4
7038	7032	"columnsize"	"bigint"	64	0	0	5
7039	7032	"heapsize"	"bigint"	64	0	0	6
7040	7032	"hashes"	"bigint"	64	0	0	7
7041	7032	"imprints"	"bigint"	64	0	0	8
7042	7032	"sorted"	"boolean"	1	0	0	9
7043	7032	"orderidx"	"bigint"	64	0	0	10
7082	7081	"MinMax"	"int"	32	0	1	0
7083	7081	"sample"	"bigint"	64	0	1	1
7086	7085	"MinMax"	"int"	32	0	1	0
7087	7085	"sample"	"bigint"	64	0	1	1
7088	7085	"sch"	"clob"	0	0	1	2
7091	7090	"MinMax"	"int"	32	0	1	0
7092	7090	"sample"	"bigint"	64	0	1	1
7093	7090	"sch"	"clob"	0	0	1	2
7094	7090	"tbl"	"clob"	0	0	1	3
7097	7096	"MinMax"	"int"	32	0	1	0
7098	7096	"sample"	"bigint"	64	0	1	1
7099	7096	"sch"	"clob"	0	0	1	2
7100	7096	"tbl"	"clob"	0	0	1	3
7101	7096	"col"	"clob"	0	0	1	4
7104	7103	"result"	"clob"	0	0	0	0
7105	7103	"src"	"clob"	0	0	1	1
7108	7107	"result"	"smallint"	16	0	0	0
7109	7107	"one"	"tinyint"	8	0	1	1
7110	7107	"two"	"tinyint"	8	0	1	2
7113	7112	"result"	"int"	32	0	0	0
7114	7112	"one"	"smallint"	16	0	1	1
7115	7112	"two"	"smallint"	16	0	1	2
7118	7117	"result"	"bigint"	64	0	0	0
7119	7117	"one"	"int"	32	0	1	1
7120	7117	"two"	"int"	32	0	1	2
7123	7122	"result"	"hugeint"	128	0	0	0
7124	7122	"one"	"bigint"	64	0	1	1
7125	7122	"two"	"bigint"	64	0	1	2
7129	7128	"bam_repos"	"clob"	0	0	1	0
7130	7128	"dbschema"	"smallint"	16	0	1	1
7131	7128	"nr_threads"	"smallint"	16	0	1	2
7134	7133	"bam_files"	"clob"	0	0	1	0
7135	7133	"dbschema"	"smallint"	16	0	1	1
7136	7133	"nr_threads"	"smallint"	16	0	1	2
7139	7138	"bam_file"	"clob"	0	0	1	0
7140	7138	"dbschema"	"smallint"	16	0	1	1
7143	7142	"file_id"	"bigint"	64	0	1	0
7144	7142	"dbschema"	"smallint"	16	0	1	1
7147	7146	"result"	"boolean"	1	0	0	0
7148	7146	"flag"	"smallint"	16	0	1	1
7149	7146	"name"	"clob"	0	0	1	2
7152	7151	"result"	"clob"	0	0	0	0
7153	7151	"seq"	"clob"	0	0	1	1
7156	7155	"result"	"clob"	0	0	0	0
7157	7155	"qual"	"clob"	0	0	1	1
7160	7159	"result"	"int"	32	0	0	0
7161	7159	"cigar"	"clob"	0	0	1	1
7164	7163	"output_path"	"clob"	0	0	1	0
7167	7166	"output_path"	"clob"	0	0	1	0
7237	7236	"value"	"tinyint"	8	0	0	0
7238	7236	"first"	"tinyint"	8	0	1	1
7239	7236	"last"	"tinyint"	8	0	1	2
7242	7241	"value"	"tinyint"	8	0	0	0
7243	7241	"first"	"tinyint"	8	0	1	1
7244	7241	"last"	"tinyint"	8	0	1	2
7245	7241	"stepsize"	"tinyint"	8	0	1	3
7248	7247	"value"	"smallint"	16	0	0	0
7249	7247	"first"	"smallint"	16	0	1	1
7250	7247	"last"	"smallint"	16	0	1	2
7253	7252	"value"	"smallint"	16	0	0	0
7254	7252	"first"	"smallint"	16	0	1	1
7255	7252	"last"	"smallint"	16	0	1	2
7256	7252	"stepsize"	"smallint"	16	0	1	3
7259	7258	"value"	"int"	32	0	0	0
7260	7258	"first"	"int"	32	0	1	1
7261	7258	"last"	"int"	32	0	1	2
7264	7263	"value"	"int"	32	0	0	0
7265	7263	"first"	"int"	32	0	1	1
7266	7263	"last"	"int"	32	0	1	2
7267	7263	"stepsize"	"int"	32	0	1	3
7270	7269	"value"	"bigint"	64	0	0	0
7271	7269	"first"	"bigint"	64	0	1	1
7272	7269	"last"	"bigint"	64	0	1	2
7275	7274	"value"	"bigint"	64	0	0	0
7276	7274	"first"	"bigint"	64	0	1	1
7277	7274	"last"	"bigint"	64	0	1	2
7278	7274	"stepsize"	"bigint"	64	0	1	3
7281	7280	"value"	"real"	24	0	0	0
7282	7280	"first"	"real"	24	0	1	1
7283	7280	"last"	"real"	24	0	1	2
7284	7280	"stepsize"	"real"	24	0	1	3
7287	7286	"value"	"double"	53	0	0	0
7288	7286	"first"	"double"	53	0	1	1
7289	7286	"last"	"double"	53	0	1	2
7290	7286	"stepsize"	"double"	53	0	1	3
7293	7292	"value"	"decimal"	10	2	0	0
7294	7292	"first"	"decimal"	10	2	1	1
7295	7292	"last"	"decimal"	10	2	1	2
7296	7292	"stepsize"	"decimal"	10	2	1	3
7299	7298	"value"	"timestamp"	7	0	0	0
7300	7298	"first"	"timestamp"	7	0	1	1
7301	7298	"last"	"timestamp"	7	0	1	2
7302	7298	"stepsize"	"sec_interval"	13	0	1	3
7305	7304	"value"	"hugeint"	128	0	0	0
7306	7304	"first"	"hugeint"	128	0	1	1
7307	7304	"last"	"hugeint"	128	0	1	2
7310	7309	"value"	"hugeint"	128	0	0	0
7311	7309	"first"	"hugeint"	128	0	1	1
7312	7309	"last"	"hugeint"	128	0	1	2
7313	7309	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 240 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
402	5665	7
401	5665	7
1007	5665	7
402	5669	7
401	5669	7
1007	5669	7
5833	5862	5
5843	5873	5
5833	5891	5
5843	5891	5
5902	5930	5
2003	5972	7
2001	5972	7
2002	5972	7
5629	5972	7
5638	5977	7
5636	5977	7
5637	5977	7
2005	5977	7
2001	5977	7
2003	5977	7
5597	5982	7
2047	5982	7
2046	5982	7
2049	5982	7
2048	5982	7
5597	5987	7
2088	5987	7
2086	5987	7
2090	5987	7
2083	5987	7
2079	5987	7
5597	5992	7
2047	5992	7
2046	5992	7
2049	5992	7
2092	5992	7
2091	5992	7
2048	5992	7
2093	5992	7
2094	5992	7
5597	5997	7
2081	5997	7
2079	5997	7
2084	5997	7
2080	5997	7
2083	5997	7
5597	6002	7
2047	6002	7
2046	6002	7
2049	6002	7
2017	6002	7
2016	6002	7
2048	6002	7
2018	6002	7
5607	6007	7
2047	6007	7
2046	6007	7
2049	6007	7
2048	6007	7
5597	6007	7
5607	6012	7
2081	6012	7
2079	6012	7
2084	6012	7
2103	6012	7
2102	6012	7
2104	6012	7
2080	6012	7
2083	6012	7
139	6012	7
33	6012	7
32	6012	7
34	6012	7
5607	6017	7
2088	6017	7
2086	6017	7
2090	6017	7
2083	6017	7
2079	6017	7
2087	6017	7
2103	6017	7
2102	6017	7
2104	6017	7
33	6017	7
32	6017	7
34	6017	7
5607	6022	7
2047	6022	7
2046	6022	7
2049	6022	7
2048	6022	7
2017	6022	7
2016	6022	7
2018	6022	7
5607	6027	7
2047	6027	7
2046	6027	7
2049	6027	7
2092	6027	7
2091	6027	7
2048	6027	7
2093	6027	7
5597	6032	7
2047	6032	7
2046	6032	7
2049	6032	7
2017	6032	7
2016	6032	7
2048	6032	7
2018	6032	7
5597	6037	7
2047	6037	7
2046	6037	7
2049	6037	7
2092	6037	7
2091	6037	7
2048	6037	7
2093	6037	7
2018	6042	7
2016	6042	7
2017	6042	7
2047	6042	7
2046	6042	7
2049	6042	7
2048	6042	7
2018	6047	7
2016	6047	7
2017	6047	7
2047	6047	7
2046	6047	7
2049	6047	7
2092	6047	7
2091	6047	7
2048	6047	7
2093	6047	7
2083	6052	7
2079	6052	7
2080	6052	7
2084	6052	7
6061	6075	5
103	6094	7
39	6094	7
37	6094	7
1150	6094	7
1136	6094	7
198	6094	7
1147	6094	7
199	6094	7
245	6094	7
34	6106	7
484	6106	7
103	6106	7
105	6106	7
36	6106	7
6101	6106	7
6147	6155	5
6157	6163	5
6185	6203	5
6223	6233	5
6888	6890	10
6888	6889	4
6893	6895	10
6896	6898	10
6893	6894	4
6901	6903	10
6904	6906	10
6901	6902	4
6961	6993	5
6995	7008	13
7006	7008	13
6996	7008	13
6997	7008	13
6998	7008	13
6999	7008	13
7000	7008	13
7001	7008	13
7002	7008	13
7003	7008	13
7004	7008	13
7005	7008	13
34	7010	7
200	7010	7
206	7010	7
102	7016	7
35	7016	7
245	7016	7
200	7016	7
34	7022	7
200	7022	7
103	7027	7
34	7027	7
361	7027	7
6995	7032	7
7006	7032	7
6996	7032	7
6997	7032	7
6998	7032	7
7000	7032	7
7001	7032	7
7002	7032	7
7003	7032	7
7004	7032	7
7005	7032	7
7010	7032	7
7016	7032	7
7022	7032	7
7027	7032	7
7032	7056	5
7032	7066	5
49	7066	5
56	7066	5
57	7066	5
52	7066	5
36	7066	5
34	7066	5
200	7066	5
7169	7176	10
7169	7175	4
7179	7187	10
7180	7187	10
7180	7189	10
7179	7186	4
7180	7186	4
7175	7188	11
7180	7188	11
7192	7206	10
7193	7206	10
7193	7208	10
7192	7205	4
7193	7205	4
7175	7207	11
7193	7207	11
7211	7218	10
7212	7218	10
7212	7220	10
7211	7217	4
7212	7217	4
7175	7219	11
7212	7219	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1511 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
31	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
32	"hash"	"hash"	"mkey"	0	1	false	false	false	0
33	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
34	"="	"="	"calc"	0	1	false	false	false	0
35	"<>"	"!="	"calc"	0	1	false	false	false	0
36	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
37	">"	">"	"calc"	0	1	false	false	false	0
38	">="	">="	"calc"	0	1	false	false	false	0
39	"<"	"<"	"calc"	0	1	false	false	false	0
40	"<="	"<="	"calc"	0	1	false	false	false	0
44	"in"	"in"	"calc"	0	1	false	false	false	0
45	"identity"	"identity"	"calc"	0	1	false	false	false	0
46	"rowid"	"identity"	"calc"	0	1	false	false	false	0
47	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
50	"sql_min"	"min"	"calc"	0	1	false	false	false	0
51	"sql_max"	"max"	"calc"	0	1	false	false	false	0
52	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
80	"mod"	"%"	"calc"	0	1	false	false	false	0
81	"mod"	"%"	"calc"	0	1	false	false	false	0
82	"mod"	"%"	"calc"	0	1	false	false	false	0
83	"mod"	"%"	"calc"	0	1	false	false	false	0
84	"mod"	"%"	"calc"	0	1	false	false	false	0
85	"mod"	"%"	"calc"	0	1	false	false	false	0
86	"mod"	"%"	"calc"	0	1	false	false	false	0
87	"mod"	"%"	"calc"	0	1	false	false	false	0
97	"diff"	"diff"	"sql"	0	6	false	false	false	0
98	"diff"	"diff"	"sql"	0	6	false	false	false	0
99	"rank"	"rank"	"sql"	0	6	false	false	false	0
100	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
101	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
102	"and"	"and"	"calc"	0	1	false	false	false	0
103	"or"	"or"	"calc"	0	1	false	false	false	0
104	"xor"	"xor"	"calc"	0	1	false	false	false	0
105	"not"	"not"	"calc"	0	1	false	false	false	0
106	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
107	"sql_add"	"+"	"calc"	0	1	false	false	false	0
108	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
109	"sql_div"	"/"	"calc"	0	1	false	false	false	0
110	"bit_and"	"and"	"calc"	0	1	false	false	false	0
111	"bit_or"	"or"	"calc"	0	1	false	false	false	0
112	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
113	"bit_not"	"not"	"calc"	0	1	false	false	false	0
114	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
115	"right_shift"	">>"	"calc"	0	1	false	false	false	0
116	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
117	"abs"	"abs"	"calc"	0	1	false	false	false	0
118	"sign"	"sign"	"calc"	0	1	false	false	false	0
119	"scale_up"	"*"	"calc"	0	1	false	false	false	0
120	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
121	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
122	"sql_add"	"+"	"calc"	0	1	false	false	false	0
123	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
124	"sql_div"	"/"	"calc"	0	1	false	false	false	0
125	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
126	"sql_add"	"+"	"calc"	0	1	false	false	false	0
127	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
128	"sql_div"	"/"	"calc"	0	1	false	false	false	0
129	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
130	"sql_add"	"+"	"calc"	0	1	false	false	false	0
131	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
132	"sql_div"	"/"	"calc"	0	1	false	false	false	0
133	"bit_and"	"and"	"calc"	0	1	false	false	false	0
134	"bit_or"	"or"	"calc"	0	1	false	false	false	0
135	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
136	"bit_not"	"not"	"calc"	0	1	false	false	false	0
137	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
138	"right_shift"	">>"	"calc"	0	1	false	false	false	0
139	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
140	"abs"	"abs"	"calc"	0	1	false	false	false	0
141	"sign"	"sign"	"calc"	0	1	false	false	false	0
142	"scale_up"	"*"	"calc"	0	1	false	false	false	0
143	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
144	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
145	"sql_add"	"+"	"calc"	0	1	false	false	false	0
146	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
147	"sql_div"	"/"	"calc"	0	1	false	false	false	0
148	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
149	"sql_add"	"+"	"calc"	0	1	false	false	false	0
150	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
151	"sql_div"	"/"	"calc"	0	1	false	false	false	0
152	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
153	"sql_add"	"+"	"calc"	0	1	false	false	false	0
154	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
155	"sql_div"	"/"	"calc"	0	1	false	false	false	0
156	"bit_and"	"and"	"calc"	0	1	false	false	false	0
157	"bit_or"	"or"	"calc"	0	1	false	false	false	0
158	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
159	"bit_not"	"not"	"calc"	0	1	false	false	false	0
160	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
161	"right_shift"	">>"	"calc"	0	1	false	false	false	0
162	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
163	"abs"	"abs"	"calc"	0	1	false	false	false	0
164	"sign"	"sign"	"calc"	0	1	false	false	false	0
165	"scale_up"	"*"	"calc"	0	1	false	false	false	0
166	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
167	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
168	"sql_add"	"+"	"calc"	0	1	false	false	false	0
169	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
170	"sql_div"	"/"	"calc"	0	1	false	false	false	0
171	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
172	"sql_add"	"+"	"calc"	0	1	false	false	false	0
173	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
174	"sql_div"	"/"	"calc"	0	1	false	false	false	0
175	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
176	"sql_add"	"+"	"calc"	0	1	false	false	false	0
177	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
178	"sql_div"	"/"	"calc"	0	1	false	false	false	0
179	"bit_and"	"and"	"calc"	0	1	false	false	false	0
180	"bit_or"	"or"	"calc"	0	1	false	false	false	0
181	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
182	"bit_not"	"not"	"calc"	0	1	false	false	false	0
183	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
184	"right_shift"	">>"	"calc"	0	1	false	false	false	0
185	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
186	"abs"	"abs"	"calc"	0	1	false	false	false	0
187	"sign"	"sign"	"calc"	0	1	false	false	false	0
188	"scale_up"	"*"	"calc"	0	1	false	false	false	0
189	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
190	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
191	"sql_add"	"+"	"calc"	0	1	false	false	false	0
192	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
193	"sql_div"	"/"	"calc"	0	1	false	false	false	0
194	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
195	"sql_add"	"+"	"calc"	0	1	false	false	false	0
196	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
197	"sql_div"	"/"	"calc"	0	1	false	false	false	0
198	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
199	"sql_add"	"+"	"calc"	0	1	false	false	false	0
200	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
201	"sql_div"	"/"	"calc"	0	1	false	false	false	0
202	"bit_and"	"and"	"calc"	0	1	false	false	false	0
203	"bit_or"	"or"	"calc"	0	1	false	false	false	0
204	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
205	"bit_not"	"not"	"calc"	0	1	false	false	false	0
206	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
207	"right_shift"	">>"	"calc"	0	1	false	false	false	0
208	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
209	"abs"	"abs"	"calc"	0	1	false	false	false	0
210	"sign"	"sign"	"calc"	0	1	false	false	false	0
211	"scale_up"	"*"	"calc"	0	1	false	false	false	0
212	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
213	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
214	"sql_add"	"+"	"calc"	0	1	false	false	false	0
215	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
216	"sql_div"	"/"	"calc"	0	1	false	false	false	0
217	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
218	"sql_add"	"+"	"calc"	0	1	false	false	false	0
219	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
220	"sql_div"	"/"	"calc"	0	1	false	false	false	0
221	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
222	"sql_add"	"+"	"calc"	0	1	false	false	false	0
223	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
224	"sql_div"	"/"	"calc"	0	1	false	false	false	0
225	"bit_and"	"and"	"calc"	0	1	false	false	false	0
226	"bit_or"	"or"	"calc"	0	1	false	false	false	0
227	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
228	"bit_not"	"not"	"calc"	0	1	false	false	false	0
229	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
230	"right_shift"	">>"	"calc"	0	1	false	false	false	0
231	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
232	"abs"	"abs"	"calc"	0	1	false	false	false	0
233	"sign"	"sign"	"calc"	0	1	false	false	false	0
234	"scale_up"	"*"	"calc"	0	1	false	false	false	0
235	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
236	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
237	"sql_add"	"+"	"calc"	0	1	false	false	false	0
238	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
239	"sql_div"	"/"	"calc"	0	1	false	false	false	0
240	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
241	"sql_add"	"+"	"calc"	0	1	false	false	false	0
242	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
243	"sql_div"	"/"	"calc"	0	1	false	false	false	0
244	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
245	"sql_add"	"+"	"calc"	0	1	false	false	false	0
246	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
247	"sql_div"	"/"	"calc"	0	1	false	false	false	0
248	"bit_and"	"and"	"calc"	0	1	false	false	false	0
249	"bit_or"	"or"	"calc"	0	1	false	false	false	0
250	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
251	"bit_not"	"not"	"calc"	0	1	false	false	false	0
252	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
253	"right_shift"	">>"	"calc"	0	1	false	false	false	0
254	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
255	"abs"	"abs"	"calc"	0	1	false	false	false	0
256	"sign"	"sign"	"calc"	0	1	false	false	false	0
257	"scale_up"	"*"	"calc"	0	1	false	false	false	0
258	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
259	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
260	"sql_add"	"+"	"calc"	0	1	false	false	false	0
261	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
262	"sql_div"	"/"	"calc"	0	1	false	false	false	0
263	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
264	"sql_add"	"+"	"calc"	0	1	false	false	false	0
265	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
266	"sql_div"	"/"	"calc"	0	1	false	false	false	0
267	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
268	"sql_add"	"+"	"calc"	0	1	false	false	false	0
269	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
270	"sql_div"	"/"	"calc"	0	1	false	false	false	0
271	"bit_and"	"and"	"calc"	0	1	false	false	false	0
272	"bit_or"	"or"	"calc"	0	1	false	false	false	0
273	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
274	"bit_not"	"not"	"calc"	0	1	false	false	false	0
275	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
276	"right_shift"	">>"	"calc"	0	1	false	false	false	0
277	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
278	"abs"	"abs"	"calc"	0	1	false	false	false	0
279	"sign"	"sign"	"calc"	0	1	false	false	false	0
280	"scale_up"	"*"	"calc"	0	1	false	false	false	0
281	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
282	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
283	"sql_add"	"+"	"calc"	0	1	false	false	false	0
284	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
285	"sql_div"	"/"	"calc"	0	1	false	false	false	0
286	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
287	"sql_add"	"+"	"calc"	0	1	false	false	false	0
288	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
289	"sql_div"	"/"	"calc"	0	1	false	false	false	0
290	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
291	"sql_add"	"+"	"calc"	0	1	false	false	false	0
292	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
293	"sql_div"	"/"	"calc"	0	1	false	false	false	0
294	"bit_and"	"and"	"calc"	0	1	false	false	false	0
295	"bit_or"	"or"	"calc"	0	1	false	false	false	0
296	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
297	"bit_not"	"not"	"calc"	0	1	false	false	false	0
298	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
299	"right_shift"	">>"	"calc"	0	1	false	false	false	0
300	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
301	"abs"	"abs"	"calc"	0	1	false	false	false	0
302	"sign"	"sign"	"calc"	0	1	false	false	false	0
303	"scale_up"	"*"	"calc"	0	1	false	false	false	0
304	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
305	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
306	"sql_add"	"+"	"calc"	0	1	false	false	false	0
307	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
308	"sql_div"	"/"	"calc"	0	1	false	false	false	0
309	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
310	"sql_add"	"+"	"calc"	0	1	false	false	false	0
311	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
312	"sql_div"	"/"	"calc"	0	1	false	false	false	0
313	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
314	"sql_add"	"+"	"calc"	0	1	false	false	false	0
315	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
316	"sql_div"	"/"	"calc"	0	1	false	false	false	0
317	"bit_and"	"and"	"calc"	0	1	false	false	false	0
318	"bit_or"	"or"	"calc"	0	1	false	false	false	0
319	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
320	"bit_not"	"not"	"calc"	0	1	false	false	false	0
321	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
322	"right_shift"	">>"	"calc"	0	1	false	false	false	0
323	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
324	"abs"	"abs"	"calc"	0	1	false	false	false	0
325	"sign"	"sign"	"calc"	0	1	false	false	false	0
326	"scale_up"	"*"	"calc"	0	1	false	false	false	0
327	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
328	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
329	"sql_add"	"+"	"calc"	0	1	false	false	false	0
330	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
331	"sql_div"	"/"	"calc"	0	1	false	false	false	0
332	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
333	"sql_add"	"+"	"calc"	0	1	false	false	false	0
334	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
335	"sql_div"	"/"	"calc"	0	1	false	false	false	0
336	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
337	"sql_add"	"+"	"calc"	0	1	false	false	false	0
338	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
339	"sql_div"	"/"	"calc"	0	1	false	false	false	0
340	"bit_and"	"and"	"calc"	0	1	false	false	false	0
341	"bit_or"	"or"	"calc"	0	1	false	false	false	0
342	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
343	"bit_not"	"not"	"calc"	0	1	false	false	false	0
344	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
345	"right_shift"	">>"	"calc"	0	1	false	false	false	0
346	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
347	"abs"	"abs"	"calc"	0	1	false	false	false	0
348	"sign"	"sign"	"calc"	0	1	false	false	false	0
349	"scale_up"	"*"	"calc"	0	1	false	false	false	0
350	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
351	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
352	"sql_add"	"+"	"calc"	0	1	false	false	false	0
353	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
354	"sql_div"	"/"	"calc"	0	1	false	false	false	0
355	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
356	"sql_add"	"+"	"calc"	0	1	false	false	false	0
357	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
358	"sql_div"	"/"	"calc"	0	1	false	false	false	0
359	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
360	"sql_add"	"+"	"calc"	0	1	false	false	false	0
361	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
362	"sql_div"	"/"	"calc"	0	1	false	false	false	0
363	"bit_and"	"and"	"calc"	0	1	false	false	false	0
364	"bit_or"	"or"	"calc"	0	1	false	false	false	0
365	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
366	"bit_not"	"not"	"calc"	0	1	false	false	false	0
367	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
368	"right_shift"	">>"	"calc"	0	1	false	false	false	0
369	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
370	"abs"	"abs"	"calc"	0	1	false	false	false	0
371	"sign"	"sign"	"calc"	0	1	false	false	false	0
372	"scale_up"	"*"	"calc"	0	1	false	false	false	0
373	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
374	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
375	"sql_add"	"+"	"calc"	0	1	false	false	false	0
376	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
377	"sql_div"	"/"	"calc"	0	1	false	false	false	0
378	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
379	"sql_add"	"+"	"calc"	0	1	false	false	false	0
380	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
381	"sql_div"	"/"	"calc"	0	1	false	false	false	0
382	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
383	"sql_add"	"+"	"calc"	0	1	false	false	false	0
384	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
385	"sql_div"	"/"	"calc"	0	1	false	false	false	0
386	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
387	"abs"	"abs"	"calc"	0	1	false	false	false	0
388	"sign"	"sign"	"calc"	0	1	false	false	false	0
389	"scale_up"	"*"	"calc"	0	1	false	false	false	0
390	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
391	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
392	"sql_add"	"+"	"calc"	0	1	false	false	false	0
393	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
394	"sql_div"	"/"	"calc"	0	1	false	false	false	0
395	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
396	"sql_add"	"+"	"calc"	0	1	false	false	false	0
397	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
398	"sql_div"	"/"	"calc"	0	1	false	false	false	0
399	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
400	"sql_add"	"+"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_div"	"/"	"calc"	0	1	false	false	false	0
403	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
404	"abs"	"abs"	"calc"	0	1	false	false	false	0
405	"sign"	"sign"	"calc"	0	1	false	false	false	0
406	"scale_up"	"*"	"calc"	0	1	false	false	false	0
407	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
408	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
409	"sql_add"	"+"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_div"	"/"	"calc"	0	1	false	false	false	0
412	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
413	"sql_add"	"+"	"calc"	0	1	false	false	false	0
414	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
415	"sql_div"	"/"	"calc"	0	1	false	false	false	0
416	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
417	"sql_add"	"+"	"calc"	0	1	false	false	false	0
418	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
419	"sql_div"	"/"	"calc"	0	1	false	false	false	0
420	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
421	"abs"	"abs"	"calc"	0	1	false	false	false	0
422	"sign"	"sign"	"calc"	0	1	false	false	false	0
423	"scale_up"	"*"	"calc"	0	1	false	false	false	0
424	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
425	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
426	"sql_add"	"+"	"calc"	0	1	false	false	false	0
427	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
428	"sql_div"	"/"	"calc"	0	1	false	false	false	0
429	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
430	"abs"	"abs"	"calc"	0	1	false	false	false	0
431	"sign"	"sign"	"calc"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
435	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
459	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
460	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
461	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
462	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
463	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
465	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
466	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
467	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
468	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
469	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
470	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
471	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
472	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
473	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
474	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
475	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
476	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
477	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
478	"round"	"round"	"sql"	0	1	false	false	false	0
479	"round"	"round"	"sql"	0	1	false	false	false	0
480	"round"	"round"	"sql"	0	1	false	false	false	0
481	"round"	"round"	"sql"	0	1	false	false	false	0
482	"round"	"round"	"sql"	0	1	false	false	false	0
483	"round"	"round"	"sql"	0	1	false	false	false	0
484	"round"	"round"	"sql"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"power"	"pow"	"mmath"	0	1	false	false	false	0
970	"floor"	"floor"	"mmath"	0	1	false	false	false	0
971	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
972	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
973	"sin"	"sin"	"mmath"	0	1	false	false	false	0
974	"cos"	"cos"	"mmath"	0	1	false	false	false	0
975	"tan"	"tan"	"mmath"	0	1	false	false	false	0
976	"asin"	"asin"	"mmath"	0	1	false	false	false	0
977	"acos"	"acos"	"mmath"	0	1	false	false	false	0
978	"atan"	"atan"	"mmath"	0	1	false	false	false	0
979	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
980	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
981	"cot"	"cot"	"mmath"	0	1	false	false	false	0
982	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
983	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
984	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
985	"exp"	"exp"	"mmath"	0	1	false	false	false	0
986	"log"	"log"	"mmath"	0	1	false	false	false	0
987	"log10"	"log10"	"mmath"	0	1	false	false	false	0
988	"power"	"pow"	"mmath"	0	1	false	false	false	0
989	"floor"	"floor"	"mmath"	0	1	false	false	false	0
990	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
991	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
992	"sin"	"sin"	"mmath"	0	1	false	false	false	0
993	"cos"	"cos"	"mmath"	0	1	false	false	false	0
994	"tan"	"tan"	"mmath"	0	1	false	false	false	0
995	"asin"	"asin"	"mmath"	0	1	false	false	false	0
996	"acos"	"acos"	"mmath"	0	1	false	false	false	0
997	"atan"	"atan"	"mmath"	0	1	false	false	false	0
998	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
999	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1000	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1001	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1002	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1003	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1004	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1005	"log"	"log"	"mmath"	0	1	false	false	false	0
1006	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1007	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1008	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1009	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1010	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1011	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1012	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1013	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1014	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1015	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1016	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1017	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1018	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1019	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1020	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1021	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1022	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1023	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1024	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1025	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1026	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1027	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1028	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1029	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1030	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1031	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1032	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1033	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1034	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1035	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1036	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1037	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1038	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1039	"year"	"year"	"mtime"	0	1	false	false	false	0
1040	"month"	"month"	"mtime"	0	1	false	false	false	0
1041	"day"	"day"	"mtime"	0	1	false	false	false	0
1042	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1043	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1044	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1045	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1046	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1047	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1048	"year"	"year"	"mtime"	0	1	false	false	false	0
1049	"month"	"month"	"mtime"	0	1	false	false	false	0
1050	"day"	"day"	"mtime"	0	1	false	false	false	0
1051	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1052	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1053	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1054	"year"	"year"	"mtime"	0	1	false	false	false	0
1055	"month"	"month"	"mtime"	0	1	false	false	false	0
1056	"day"	"day"	"mtime"	0	1	false	false	false	0
1057	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1058	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1059	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1060	"year"	"year"	"mtime"	0	1	false	false	false	0
1061	"month"	"month"	"mtime"	0	1	false	false	false	0
1062	"day"	"day"	"mtime"	0	1	false	false	false	0
1063	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1064	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1065	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1066	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1067	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1068	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1069	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1070	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1071	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1072	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1073	"restart"	"restart"	"sql"	0	1	false	false	false	0
1074	"index"	"index"	"calc"	0	1	false	false	false	0
1075	"index"	"index"	"calc"	0	1	false	false	false	0
1076	"index"	"index"	"calc"	0	1	false	false	false	0
1077	"strings"	"strings"	"calc"	0	1	false	false	false	0
1078	"locate"	"locate"	"str"	0	1	false	false	false	0
1079	"locate"	"locate"	"str"	0	1	false	false	false	0
1080	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1081	"substring"	"substring"	"str"	0	1	false	false	false	0
1082	"substring"	"substring"	"str"	0	1	false	false	false	0
1083	"like"	"like"	"algebra"	0	1	false	false	false	0
1084	"like"	"like"	"algebra"	0	1	false	false	false	0
1085	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1086	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1087	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1088	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1089	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1090	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1091	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1092	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1093	"concat"	"+"	"calc"	0	1	false	false	false	0
1094	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1095	"code"	"unicode"	"str"	0	1	false	false	false	0
1096	"length"	"stringlength"	"str"	0	1	false	false	false	0
1097	"right"	"stringright"	"str"	0	1	false	false	false	0
1098	"left"	"stringleft"	"str"	0	1	false	false	false	0
1099	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1100	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1101	"lower"	"toLower"	"str"	0	1	false	false	false	0
1102	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1103	"trim"	"trim"	"str"	0	1	false	false	false	0
1104	"trim"	"trim"	"str"	0	1	false	false	false	0
1105	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1106	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1107	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1108	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1109	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1110	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1111	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1112	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1113	"insert"	"insert"	"str"	0	1	false	false	false	0
1114	"replace"	"replace"	"str"	0	1	false	false	false	0
1115	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1116	"space"	"space"	"str"	0	1	false	false	false	0
1117	"char_length"	"length"	"str"	0	1	false	false	false	0
1118	"character_length"	"length"	"str"	0	1	false	false	false	0
1119	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1120	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1121	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1122	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1123	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1124	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1125	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1126	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1127	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1128	"index"	"index"	"calc"	0	1	false	false	false	0
1129	"index"	"index"	"calc"	0	1	false	false	false	0
1130	"index"	"index"	"calc"	0	1	false	false	false	0
1131	"strings"	"strings"	"calc"	0	1	false	false	false	0
1132	"locate"	"locate"	"str"	0	1	false	false	false	0
1133	"locate"	"locate"	"str"	0	1	false	false	false	0
1134	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1135	"substring"	"substring"	"str"	0	1	false	false	false	0
1136	"substring"	"substring"	"str"	0	1	false	false	false	0
1137	"like"	"like"	"algebra"	0	1	false	false	false	0
1138	"like"	"like"	"algebra"	0	1	false	false	false	0
1139	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1140	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1141	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1142	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1143	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1144	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1145	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1146	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1147	"concat"	"+"	"calc"	0	1	false	false	false	0
1148	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1149	"code"	"unicode"	"str"	0	1	false	false	false	0
1150	"length"	"stringlength"	"str"	0	1	false	false	false	0
1151	"right"	"stringright"	"str"	0	1	false	false	false	0
1152	"left"	"stringleft"	"str"	0	1	false	false	false	0
1153	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1154	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1155	"lower"	"toLower"	"str"	0	1	false	false	false	0
1156	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1157	"trim"	"trim"	"str"	0	1	false	false	false	0
1158	"trim"	"trim"	"str"	0	1	false	false	false	0
1159	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1160	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1161	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1162	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1163	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1164	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1165	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1166	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1167	"insert"	"insert"	"str"	0	1	false	false	false	0
1168	"replace"	"replace"	"str"	0	1	false	false	false	0
1169	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1170	"space"	"space"	"str"	0	1	false	false	false	0
1171	"char_length"	"length"	"str"	0	1	false	false	false	0
1172	"character_length"	"length"	"str"	0	1	false	false	false	0
1173	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1174	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1175	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1176	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1177	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1178	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1179	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1180	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1181	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1182	"index"	"index"	"calc"	0	1	false	false	false	0
1183	"index"	"index"	"calc"	0	1	false	false	false	0
1184	"index"	"index"	"calc"	0	1	false	false	false	0
1185	"strings"	"strings"	"calc"	0	1	false	false	false	0
1186	"locate"	"locate"	"str"	0	1	false	false	false	0
1187	"locate"	"locate"	"str"	0	1	false	false	false	0
1188	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1189	"substring"	"substring"	"str"	0	1	false	false	false	0
1190	"substring"	"substring"	"str"	0	1	false	false	false	0
1191	"like"	"like"	"algebra"	0	1	false	false	false	0
1192	"like"	"like"	"algebra"	0	1	false	false	false	0
1193	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1194	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1195	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1196	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1197	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1198	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1199	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1200	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1201	"concat"	"+"	"calc"	0	1	false	false	false	0
1202	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1203	"code"	"unicode"	"str"	0	1	false	false	false	0
1204	"length"	"stringlength"	"str"	0	1	false	false	false	0
1205	"right"	"stringright"	"str"	0	1	false	false	false	0
1206	"left"	"stringleft"	"str"	0	1	false	false	false	0
1207	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1208	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1209	"lower"	"toLower"	"str"	0	1	false	false	false	0
1210	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1211	"trim"	"trim"	"str"	0	1	false	false	false	0
1212	"trim"	"trim"	"str"	0	1	false	false	false	0
1213	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1214	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1215	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1216	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1217	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1218	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1219	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1220	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1221	"insert"	"insert"	"str"	0	1	false	false	false	0
1222	"replace"	"replace"	"str"	0	1	false	false	false	0
1223	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1224	"space"	"space"	"str"	0	1	false	false	false	0
1225	"char_length"	"length"	"str"	0	1	false	false	false	0
1226	"character_length"	"length"	"str"	0	1	false	false	false	0
1227	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1228	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1229	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1230	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1231	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1232	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1233	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1234	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1235	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1236	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1237	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
29	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
41	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
42	"exist"	"exist"	"aggr"	0	3	false	false	false	0
43	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
48	"min"	"min"	"aggr"	0	3	false	false	false	0
49	"max"	"max"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"sum"	"sum"	"aggr"	0	3	false	false	false	0
61	"sum"	"sum"	"aggr"	0	3	false	false	false	0
62	"sum"	"sum"	"aggr"	0	3	false	false	false	0
63	"sum"	"sum"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
68	"prod"	"prod"	"aggr"	0	3	false	false	false	0
69	"prod"	"prod"	"aggr"	0	3	false	false	false	0
70	"prod"	"prod"	"aggr"	0	3	false	false	false	0
71	"prod"	"prod"	"aggr"	0	3	false	false	false	0
72	"prod"	"prod"	"aggr"	0	3	false	false	false	0
73	"prod"	"prod"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"prod"	"prod"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"prod"	"prod"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"sum"	"sum"	"aggr"	0	3	false	false	false	0
94	"avg"	"avg"	"aggr"	0	3	false	false	false	0
95	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
96	"count"	"count"	"aggr"	0	3	false	false	false	0
5618	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5621	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5627	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5647	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5652	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5657	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5661	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5665	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5669	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5673	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5676	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5680	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5684	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5688	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5692	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5696	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5700	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5704	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5708	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5712	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5716	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5720	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5724	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5728	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5732	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5739	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5745	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5750	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5755	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5760	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5765	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5770	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5776	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5780	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5784	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5788	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5793	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5797	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5801	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5805	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5809	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5813	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5818	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5823	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5828	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5833	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5843	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5893	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5895	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5897	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5900	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5902	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5932	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5936	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5939	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5943	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5947	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5951	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5955	"orderidx"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Experimental oid index\n\ncreate procedure orderidx(sys string, tab string, col string)\n\texternal name sql.orderidx;"	"sql"	1	2	true	false	false	2000
5960	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5964	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5968	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5972	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5977	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5982	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5987	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5992	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5997	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6002	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6007	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6012	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6017	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6022	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6027	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6032	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6037	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6042	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6047	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6052	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6057	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6061	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6077	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6080	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6084	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6087	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6091	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6094	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6101	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6106	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6112	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6118	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6123	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6128	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6132	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6136	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6140	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6144	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6147	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6157	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6165	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, htype string,\n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6179	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6183	"flush_log"	"-- enqueue a flush log, ie as soon as no transactions are active \n-- flush the log and cleanup the used storage\ncreate procedure sys.flush_log ()\n\texternal name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6185	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6205	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6208	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6211	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6214	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6217	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6220	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6223	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6235	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6237	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6241	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6245	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6249	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6253	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6257	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6261	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6265	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6269	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6273	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6277	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6281	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6285	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6289	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6293	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6297	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6301	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6305	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6309	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6313	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6317	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6321	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6325	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6329	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6333	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6337	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6341	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6345	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6349	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6353	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6357	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6361	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6365	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6369	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6373	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6377	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6381	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6385	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6389	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6393	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6397	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6401	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6405	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6409	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6413	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6417	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6421	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6425	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6429	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6433	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6437	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6441	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6446	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6451	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6456	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6461	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6466	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6471	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6476	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6481	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6486	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6491	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6496	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6501	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6506	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6511	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6516	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6521	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6526	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6531	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6535	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6539	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6543	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6547	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6551	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6556	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6574	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6578	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6583	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6588	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6593	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6598	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6603	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6608	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6613	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6618	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6623	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6628	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6632	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6636	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6640	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6645	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6649	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6653	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6657	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6661	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6665	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6669	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6673	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6678	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6683	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6688	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6693	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6698	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6703	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6708	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6714	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6719	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6725	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6729	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6733	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6738	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6743	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6747	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6752	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6757	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6762	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6769	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6766
6774	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6766
6779	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6766
6784	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6766
6789	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6766
6794	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6766
6798	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6766
6802	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6766
6806	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6766
6810	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6766
6814	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6766
6818	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6766
6822	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6766
6826	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6766
6830	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6766
6834	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6766
6838	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6766
6842	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6766
6846	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6766
6850	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6766
6854	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6766
6858	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6766
6862	"filter"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6766
6867	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6872	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6875	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6879	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6883	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6909	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6912	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6915	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6918	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6954	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6957	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6961	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean,\n\torderidx bigint\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7008	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted, x.orderidx from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7010	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7016	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7022	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7027	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7032	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean,\n\torderidx bigint)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted, i.orderidx\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7081	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7085	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7090	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7096	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7103	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7107	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7112	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7117	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7122	"fuse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7128	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7126
7133	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7126
7138	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7126
7142	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7126
7146	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7126
7151	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7126
7155	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7126
7159	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7126
7163	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7126
7166	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7126
7236	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7241	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7247	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7252	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7258	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7263	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7269	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7274	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7280	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7286	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7292	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7298	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7304	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7309	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6890	6891	0	"keywords_keyword_pkey"
6895	6899	0	"table_types_table_type_id_pkey"
6898	6899	0	"table_types_table_type_name_unique"
6903	6907	0	"dependency_types_dependency_type_id_pkey"
6906	6907	0	"dependency_types_dependency_type_name_unique"
7176	7177	0	"files_pkey_file_id"
7187	7190	0	"sq_pkey_sn_file_id"
7189	7190	1	"sq_fkey_file_id"
7206	7209	0	"rg_pkey_id_file_id"
7208	7209	1	"rg_fkey_file_id"
7218	7221	0	"pg_pkey_id_file_id"
7220	7221	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6889	6891	0	"keywords_keyword_pkey"	-1	-1
6894	6899	0	"table_types_table_type_id_pkey"	-1	-1
6897	6899	1	"table_types_table_type_name_unique"	-1	-1
6902	6907	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6905	6907	1	"dependency_types_dependency_type_name_unique"	-1	-1
7175	7177	0	"files_pkey_file_id"	-1	-1
7186	7190	0	"sq_pkey_sn_file_id"	-1	-1
7188	7190	2	"sq_fkey_file_id"	7175	514
7205	7209	0	"rg_pkey_id_file_id"	-1	-1
7207	7209	2	"rg_fkey_file_id"	7175	514
7217	7221	0	"pg_pkey_id_file_id"	-1	-1
7219	7221	2	"pg_fkey_file_id"	7175	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6890	"keyword"	0
6889	"keyword"	0
6895	"table_type_id"	0
6898	"table_type_name"	0
6894	"table_type_id"	0
6897	"table_type_name"	0
6903	"dependency_type_id"	0
6906	"dependency_type_name"	0
6902	"dependency_type_id"	0
6905	"dependency_type_name"	0
7176	"file_id"	0
7175	"file_id"	0
7187	"sn"	0
7187	"file_id"	1
7189	"file_id"	0
7186	"sn"	0
7186	"file_id"	1
7188	"file_id"	0
7206	"id"	0
7206	"file_id"	1
7208	"file_id"	0
7205	"id"	0
7205	"file_id"	1
7207	"file_id"	0
7218	"id"	0
7218	"file_id"	1
7220	"file_id"	0
7217	"id"	0
7217	"file_id"	1
7219	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5597	1	1	0	0
5607	1	1	0	0
5633	1	1	0	0
5636	1	1	0	0
5640	1	1	0	0
7316	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6766	"json"	3	3	true
7126	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN,
	"orderidx"  BIGINT
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1511 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
44
45
46
47
50
51
52
74
75
76
77
78
79
80
81
82
83
84
85
86
87
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
29
41
42
43
48
49
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
88
89
90
91
92
93
94
95
96
5618
5621
5627
5647
5652
5657
5661
5665
5669
5673
5676
5680
5684
5688
5692
5696
5700
5704
5708
5712
5716
5720
5724
5728
5732
5739
5745
5750
5755
5760
5765
5770
5776
5780
5784
5788
5793
5797
5801
5805
5809
5813
5818
5823
5828
5833
5843
5893
5895
5897
5900
5902
5932
5936
5939
5943
5947
5951
5955
5960
5964
5968
5972
5977
5982
5987
5992
5997
6002
6007
6012
6017
6022
6027
6032
6037
6042
6047
6052
6057
6061
6077
6080
6084
6087
6091
6094
6101
6106
6112
6118
6123
6128
6132
6136
6140
6144
6147
6157
6165
6179
6183
6185
6205
6208
6211
6214
6217
6220
6223
6235
6237
6241
6245
6249
6253
6257
6261
6265
6269
6273
6277
6281
6285
6289
6293
6297
6301
6305
6309
6313
6317
6321
6325
6329
6333
6337
6341
6345
6349
6353
6357
6361
6365
6369
6373
6377
6381
6385
6389
6393
6397
6401
6405
6409
6413
6417
6421
6425
6429
6433
6437
6441
6446
6451
6456
6461
6466
6471
6476
6481
6486
6491
6496
6501
6506
6511
6516
6521
6526
6531
6535
6539
6543
6547
6551
6556
6574
6578
6583
6588
6593
6598
6603
6608
6613
6618
6623
6628
6632
6636
6640
6645
6649
6653
6657
6661
6665
6669
6673
6678
6683
6688
6693
6698
6703
6708
6714
6719
6725
6729
6733
6738
6743
6747
6752
6757
6762
6769
6774
6779
6784
6789
6794
6798
6802
6806
6810
6814
6818
6822
6826
6830
6834
6838
6842
6846
6850
6854
6858
6862
6867
6872
6875
6879
6883
6909
6912
6915
6918
6954
6957
6961
7008
7010
7016
7022
7027
7032
7081
7085
7090
7096
7103
7107
7112
7117
7122
7128
7133
7138
7142
7146
7151
7155
7159
7163
7166
7236
7241
7247
7252
7258
7263
7269
7274
7280
7286
7292
7298
7304
7309
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 46 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"hge"	"hugeint"	128	1	2	7	0
14	"bte"	"decimal"	2	1	10	10	0
15	"sht"	"decimal"	4	1	10	10	0
16	"int"	"decimal"	9	1	10	10	0
17	"lng"	"decimal"	18	1	10	10	0
18	"hge"	"decimal"	39	1	10	10	0
19	"flt"	"real"	24	2	2	11	0
20	"dbl"	"double"	53	2	2	11	0
21	"int"	"month_interval"	32	0	2	8	0
22	"lng"	"sec_interval"	13	1	10	9	0
23	"daytime"	"time"	7	0	0	12	0
24	"daytime"	"timetz"	7	1	0	12	0
25	"date"	"date"	0	0	0	13	0
26	"timestamp"	"timestamp"	7	0	0	14	0
27	"timestamp"	"timestamptz"	7	1	0	14	0
28	"sqlblob"	"blob"	0	0	0	5	0
5674	"url"	"url"	0	0	0	15	2000
5774	"inet"	"inet"	0	0	0	15	2000
6560	"wkb"	"point"	0	0	0	15	2000
6561	"wkb"	"curve"	0	0	0	15	2000
6562	"wkb"	"linestring"	0	0	0	15	2000
6563	"wkb"	"surface"	0	0	0	15	2000
6564	"wkb"	"polygon"	0	0	0	15	2000
6565	"wkb"	"multipoint"	0	0	0	15	2000
6566	"wkb"	"multicurve"	0	0	0	15	2000
6567	"wkb"	"multilinestring"	0	0	0	15	2000
6568	"wkb"	"multisurface"	0	0	0	15	2000
6569	"wkb"	"multipolygon"	0	0	0	15	2000
6570	"wkb"	"geometry"	0	0	0	15	2000
6571	"wkb"	"geomcollection"	0	0	0	15	2000
6572	"mbr"	"mbr"	0	0	0	15	2000
6767	"json"	"json"	0	0	0	15	2000
6870	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

