stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.convert
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geometrytype
SYSTEM FUNCTION  sys.get_type
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.has_m
SYSTEM FUNCTION  sys.has_z
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.st_area
SYSTEM FUNCTION  sys.st_asbinary
SYSTEM FUNCTION  sys.st_asewkt
SYSTEM FUNCTION  sys.st_astext
SYSTEM FUNCTION  sys.st_bdmpolyfromtext
SYSTEM FUNCTION  sys.st_bdpolyfromtext
SYSTEM FUNCTION  sys.st_boundary
SYSTEM FUNCTION  sys.st_buffer
SYSTEM FUNCTION  sys.st_centroid
SYSTEM FUNCTION  sys.st_collect
SYSTEM FUNCTION  sys.st_contains
SYSTEM FUNCTION  sys.st_convexhull
SYSTEM FUNCTION  sys.st_coorddim
SYSTEM FUNCTION  sys.st_coveredby
SYSTEM FUNCTION  sys.st_covers
SYSTEM FUNCTION  sys.st_crosses
SYSTEM FUNCTION  sys.st_delaunaytriangles
SYSTEM FUNCTION  sys.st_difference
SYSTEM FUNCTION  sys.st_dimension
SYSTEM FUNCTION  sys.st_disjoint
SYSTEM FUNCTION  sys.st_distance
SYSTEM FUNCTION  sys.st_dump
SYSTEM FUNCTION  sys.st_dumppoints
SYSTEM FUNCTION  sys.st_dwithin
SYSTEM FUNCTION  sys.st_endpoint
SYSTEM FUNCTION  sys.st_envelope
SYSTEM FUNCTION  sys.st_equals
SYSTEM FUNCTION  sys.st_exteriorring
SYSTEM FUNCTION  sys.st_force2d
SYSTEM FUNCTION  sys.st_force3d
SYSTEM FUNCTION  sys.st_geomcollfromtext
SYSTEM FUNCTION  sys.st_geometryfromtext
SYSTEM FUNCTION  sys.st_geometryn
SYSTEM FUNCTION  sys.st_geometrytype
SYSTEM FUNCTION  sys.st_geomfromtext
SYSTEM FUNCTION  sys.st_interiorringn
SYSTEM FUNCTION  sys.st_interiorrings
SYSTEM FUNCTION  sys.st_intersection
SYSTEM FUNCTION  sys.st_intersects
SYSTEM FUNCTION  sys.st_isclosed
SYSTEM FUNCTION  sys.st_isempty
SYSTEM FUNCTION  sys.st_isring
SYSTEM FUNCTION  sys.st_issimple
SYSTEM FUNCTION  sys.st_isvalid
SYSTEM FUNCTION  sys.st_isvalidreason
SYSTEM FUNCTION  sys.st_length
SYSTEM FUNCTION  sys.st_length2d
SYSTEM FUNCTION  sys.st_linefromtext
SYSTEM FUNCTION  sys.st_makebox2d
SYSTEM FUNCTION  sys.st_makeenvelope
SYSTEM FUNCTION  sys.st_makeline
SYSTEM FUNCTION  sys.st_makepoint
SYSTEM FUNCTION  sys.st_makepointm
SYSTEM FUNCTION  sys.st_makepolygon
SYSTEM FUNCTION  sys.st_mlinefromtext
SYSTEM FUNCTION  sys.st_mpointfromtext
SYSTEM FUNCTION  sys.st_mpolyfromtext
SYSTEM FUNCTION  sys.st_npoints
SYSTEM FUNCTION  sys.st_nrings
SYSTEM FUNCTION  sys.st_numgeometries
SYSTEM FUNCTION  sys.st_numinteriorring
SYSTEM FUNCTION  sys.st_numinteriorrings
SYSTEM FUNCTION  sys.st_numpatches
SYSTEM FUNCTION  sys.st_numpoints
SYSTEM FUNCTION  sys.st_overlaps
SYSTEM FUNCTION  sys.st_patchn
SYSTEM FUNCTION  sys.st_point
SYSTEM FUNCTION  sys.st_pointfromtext
SYSTEM FUNCTION  sys.st_pointn
SYSTEM FUNCTION  sys.st_pointonsurface
SYSTEM FUNCTION  sys.st_polygon
SYSTEM FUNCTION  sys.st_polygonfromtext
SYSTEM FUNCTION  sys.st_relate
SYSTEM FUNCTION  sys.st_segmentize
SYSTEM FUNCTION  sys.st_setexteriorring
SYSTEM FUNCTION  sys.st_setsrid
SYSTEM FUNCTION  sys.st_srid
SYSTEM FUNCTION  sys.st_startpoint
SYSTEM FUNCTION  sys.st_symdifference
SYSTEM FUNCTION  sys.st_touches
SYSTEM FUNCTION  sys.st_transform
SYSTEM FUNCTION  sys.st_translate
SYSTEM FUNCTION  sys.st_union
SYSTEM FUNCTION  sys.st_within
SYSTEM FUNCTION  sys.st_wkbtosql
SYSTEM FUNCTION  sys.st_wkttosql
SYSTEM FUNCTION  sys.st_x
SYSTEM FUNCTION  sys.st_xmax
SYSTEM FUNCTION  sys.st_xmin
SYSTEM FUNCTION  sys.st_y
SYSTEM FUNCTION  sys.st_ymax
SYSTEM FUNCTION  sys.st_ymin
SYSTEM FUNCTION  sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure analyze()
external name sql.analyze;
create procedure analyze(tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string)
external name sql.analyze;
-- control the sample size
create procedure analyze("sample" bigint)
external name sql.analyze;
create procedure analyze(tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string, "sample" bigint)
external name sql.analyze;

-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr(geom geometry) returns mbr external name geom."mbr";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 364 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
6156	"id"	"int"	32	0	6155	NULL	true	0	NULL
6157	"name"	"varchar"	1024	0	6155	NULL	true	1	NULL
6158	"schema_id"	"int"	32	0	6155	NULL	true	2	NULL
6159	"query"	"varchar"	2048	0	6155	NULL	true	3	NULL
6160	"type"	"smallint"	16	0	6155	NULL	true	4	NULL
6161	"system"	"boolean"	1	0	6155	NULL	true	5	NULL
6162	"commit_action"	"smallint"	16	0	6155	NULL	true	6	NULL
6163	"access"	"smallint"	16	0	6155	NULL	true	7	NULL
6164	"temporary"	"smallint"	16	0	6155	NULL	true	8	NULL
6166	"id"	"int"	32	0	6165	NULL	true	0	NULL
6167	"name"	"varchar"	1024	0	6165	NULL	true	1	NULL
6168	"type"	"varchar"	1024	0	6165	NULL	true	2	NULL
6169	"type_digits"	"int"	32	0	6165	NULL	true	3	NULL
6170	"type_scale"	"int"	32	0	6165	NULL	true	4	NULL
6171	"table_id"	"int"	32	0	6165	NULL	true	5	NULL
6172	"default"	"varchar"	2048	0	6165	NULL	true	6	NULL
6173	"null"	"boolean"	1	0	6165	NULL	true	7	NULL
6174	"number"	"int"	32	0	6165	NULL	true	8	NULL
6175	"storage"	"varchar"	2048	0	6165	NULL	true	9	NULL
6182	"name"	"varchar"	1024	0	6181	NULL	true	0	NULL
6183	"fullname"	"varchar"	2048	0	6181	NULL	true	1	NULL
6184	"default_schema"	"int"	9	0	6181	NULL	true	2	NULL
6188	"name"	"varchar"	1024	0	6187	NULL	true	0	NULL
6189	"fullname"	"varchar"	2024	0	6187	NULL	true	1	NULL
6190	"default_schema"	"int"	9	0	6187	NULL	true	2	NULL
6192	"login_id"	"int"	32	0	6191	NULL	true	0	NULL
6193	"role_id"	"int"	32	0	6191	NULL	true	1	NULL
6195	"id"	"int"	32	0	6194	NULL	true	0	NULL
6196	"name"	"varchar"	1024	0	6194	NULL	true	1	NULL
6197	"grantor"	"int"	32	0	6194	NULL	true	2	NULL
6199	"obj_id"	"int"	32	0	6198	NULL	true	0	NULL
6200	"auth_id"	"int"	32	0	6198	NULL	true	1	NULL
6201	"privileges"	"int"	32	0	6198	NULL	true	2	NULL
6202	"grantor"	"int"	32	0	6198	NULL	true	3	NULL
6203	"grantable"	"int"	32	0	6198	NULL	true	4	NULL
6397	"id"	"oid"	63	0	6405	NULL	true	0	NULL
6398	"owner"	"clob"	0	0	6405	NULL	true	1	NULL
6399	"defined"	"timestamp"	7	0	6405	NULL	true	2	NULL
6400	"query"	"clob"	0	0	6405	NULL	true	3	NULL
6401	"pipe"	"clob"	0	0	6405	NULL	true	4	NULL
6402	"plan"	"clob"	0	0	6405	NULL	true	5	NULL
6403	"mal"	"int"	32	0	6405	NULL	true	6	NULL
6404	"optimize"	"bigint"	64	0	6405	NULL	true	7	NULL
6407	"id"	"oid"	63	0	6416	NULL	true	0	NULL
6408	"start"	"timestamp"	7	0	6416	NULL	true	1	NULL
6409	"stop"	"timestamp"	7	0	6416	NULL	true	2	NULL
6410	"arguments"	"clob"	0	0	6416	NULL	true	3	NULL
6411	"tuples"	"wrd"	64	0	6416	NULL	true	4	NULL
6412	"run"	"bigint"	64	0	6416	NULL	true	5	NULL
6413	"ship"	"bigint"	64	0	6416	NULL	true	6	NULL
6414	"cpu"	"int"	32	0	6416	NULL	true	7	NULL
6415	"io"	"int"	32	0	6416	NULL	true	8	NULL
6418	"id"	"oid"	63	0	6434	NULL	true	0	NULL
6419	"owner"	"clob"	0	0	6434	NULL	true	1	NULL
6420	"defined"	"timestamp"	7	0	6434	NULL	true	2	NULL
6421	"query"	"clob"	0	0	6434	NULL	true	3	NULL
6422	"pipe"	"clob"	0	0	6434	NULL	true	4	NULL
6423	"plan"	"clob"	0	0	6434	NULL	true	5	NULL
6424	"mal"	"int"	32	0	6434	NULL	true	6	NULL
6425	"optimize"	"bigint"	64	0	6434	NULL	true	7	NULL
6426	"start"	"timestamp"	7	0	6434	NULL	true	8	NULL
6427	"stop"	"timestamp"	7	0	6434	NULL	true	9	NULL
6428	"arguments"	"clob"	0	0	6434	NULL	true	10	NULL
6429	"tuples"	"wrd"	64	0	6434	NULL	true	11	NULL
6430	"run"	"bigint"	64	0	6434	NULL	true	12	NULL
6431	"ship"	"bigint"	64	0	6434	NULL	true	13	NULL
6432	"cpu"	"int"	32	0	6434	NULL	true	14	NULL
6433	"io"	"int"	32	0	6434	NULL	true	15	NULL
6460	"event"	"int"	32	0	6473	NULL	true	0	NULL
6461	"clk"	"varchar"	20	0	6473	NULL	true	1	NULL
6462	"pc"	"varchar"	50	0	6473	NULL	true	2	NULL
6463	"thread"	"int"	32	0	6473	NULL	true	3	NULL
6464	"ticks"	"bigint"	64	0	6473	NULL	true	4	NULL
6465	"rrsmb"	"bigint"	64	0	6473	NULL	true	5	NULL
6466	"vmmb"	"bigint"	64	0	6473	NULL	true	6	NULL
6467	"reads"	"bigint"	64	0	6473	NULL	true	7	NULL
6468	"writes"	"bigint"	64	0	6473	NULL	true	8	NULL
6469	"minflt"	"bigint"	64	0	6473	NULL	true	9	NULL
6470	"majflt"	"bigint"	64	0	6473	NULL	true	10	NULL
6471	"nvcsw"	"bigint"	64	0	6473	NULL	true	11	NULL
6472	"stmt"	"clob"	0	0	6473	NULL	true	12	NULL
6603	"user"	"clob"	0	0	6609	NULL	true	0	NULL
6604	"login"	"timestamp"	7	0	6609	NULL	true	1	NULL
6605	"sessiontimeout"	"bigint"	64	0	6609	NULL	true	2	NULL
6606	"lastcommand"	"timestamp"	7	0	6609	NULL	true	3	NULL
6607	"querytimeout"	"bigint"	64	0	6609	NULL	true	4	NULL
6608	"active"	"boolean"	1	0	6609	NULL	true	5	NULL
6686	"name"	"clob"	0	0	6689	NULL	true	0	NULL
6687	"def"	"clob"	0	0	6689	NULL	true	1	NULL
6688	"status"	"clob"	0	0	6689	NULL	true	2	NULL
6695	"name"	"clob"	0	0	6697	NULL	true	0	NULL
6696	"value"	"clob"	0	0	6697	NULL	true	1	NULL
6727	"qtag"	"bigint"	64	0	6735	NULL	true	0	NULL
6728	"user"	"clob"	0	0	6735	NULL	true	1	NULL
6729	"started"	"timestamp"	7	0	6735	NULL	true	2	NULL
6730	"estimate"	"timestamp"	7	0	6735	NULL	true	3	NULL
6731	"progress"	"int"	32	0	6735	NULL	true	4	NULL
6732	"status"	"clob"	0	0	6735	NULL	true	5	NULL
6733	"tag"	"oid"	63	0	6735	NULL	true	6	NULL
6734	"query"	"clob"	0	0	6735	NULL	true	7	NULL
7092	"srid"	"int"	32	0	7099	NULL	false	0	NULL
7095	"auth_name"	"varchar"	256	0	7099	NULL	true	1	NULL
7096	"auth_srid"	"int"	32	0	7099	NULL	true	2	NULL
7097	"srtext"	"varchar"	2048	0	7099	NULL	true	3	NULL
7098	"proj4text"	"varchar"	2048	0	7099	NULL	true	4	NULL
7101	"f_table_catalog"	"clob"	0	0	7108	NULL	true	0	NULL
7102	"f_table_schema"	"varchar"	1024	0	7108	NULL	true	1	NULL
7103	"f_table_name"	"varchar"	1024	0	7108	NULL	true	2	NULL
7104	"f_geometry_column"	"varchar"	1024	0	7108	NULL	true	3	NULL
7105	"coord_dimension"	"hugeint"	128	0	7108	NULL	true	4	NULL
7106	"srid"	"int"	32	0	7108	NULL	true	5	NULL
7107	"type"	"clob"	0	0	7108	NULL	true	6	NULL
7804	"file_id"	"int"	32	0	7806	NULL	true	0	NULL
7805	"location"	"char"	256	0	7806	NULL	true	1	NULL
7808	"dim_id"	"int"	32	0	7812	NULL	true	0	NULL
7809	"file_id"	"int"	32	0	7812	NULL	true	1	NULL
7810	"name"	"varchar"	64	0	7812	NULL	true	2	NULL
7811	"length"	"int"	32	0	7812	NULL	true	3	NULL
7814	"var_id"	"int"	32	0	7820	NULL	true	0	NULL
7815	"file_id"	"int"	32	0	7820	NULL	true	1	NULL
7816	"name"	"varchar"	64	0	7820	NULL	true	2	NULL
7817	"vartype"	"varchar"	64	0	7820	NULL	true	3	NULL
7818	"ndim"	"int"	32	0	7820	NULL	true	4	NULL
7819	"coord_dim_id"	"int"	32	0	7820	NULL	true	5	NULL
7822	"var_id"	"int"	32	0	7826	NULL	true	0	NULL
7823	"dim_id"	"int"	32	0	7826	NULL	true	1	NULL
7824	"file_id"	"int"	32	0	7826	NULL	true	2	NULL
7825	"dimpos"	"int"	32	0	7826	NULL	true	3	NULL
7828	"obj_name"	"varchar"	256	0	7834	NULL	true	0	NULL
7829	"att_name"	"varchar"	256	0	7834	NULL	true	1	NULL
7830	"att_type"	"varchar"	64	0	7834	NULL	true	2	NULL
7831	"value"	"clob"	0	0	7834	NULL	true	3	NULL
7832	"file_id"	"int"	32	0	7834	NULL	true	4	NULL
7833	"gr_name"	"varchar"	256	0	7834	NULL	true	5	NULL
7859	"schema"	"clob"	0	0	7873	NULL	true	0	NULL
7860	"table"	"clob"	0	0	7873	NULL	true	1	NULL
7861	"column"	"clob"	0	0	7873	NULL	true	2	NULL
7862	"type"	"clob"	0	0	7873	NULL	true	3	NULL
7863	"mode"	"clob"	0	0	7873	NULL	true	4	NULL
7864	"location"	"clob"	0	0	7873	NULL	true	5	NULL
7865	"count"	"bigint"	64	0	7873	NULL	true	6	NULL
7866	"typewidth"	"int"	32	0	7873	NULL	true	7	NULL
7867	"columnsize"	"bigint"	64	0	7873	NULL	true	8	NULL
7868	"heapsize"	"bigint"	64	0	7873	NULL	true	9	NULL
7869	"hashes"	"bigint"	64	0	7873	NULL	true	10	NULL
7870	"phash"	"boolean"	1	0	7873	NULL	true	11	NULL
7871	"imprints"	"bigint"	64	0	7873	NULL	true	12	NULL
7872	"sorted"	"boolean"	1	0	7873	NULL	true	13	NULL
7875	"schema"	"clob"	0	0	7885	NULL	true	0	NULL
7876	"table"	"clob"	0	0	7885	NULL	true	1	NULL
7877	"column"	"clob"	0	0	7885	NULL	true	2	NULL
7878	"type"	"clob"	0	0	7885	NULL	true	3	NULL
7879	"typewidth"	"int"	32	0	7885	NULL	true	4	NULL
7880	"count"	"bigint"	64	0	7885	NULL	true	5	NULL
7881	"distinct"	"bigint"	64	0	7885	NULL	true	6	NULL
7882	"atomwidth"	"int"	32	0	7885	NULL	true	7	NULL
7883	"reference"	"boolean"	1	0	7885	NULL	true	8	NULL
7884	"sorted"	"boolean"	1	0	7885	NULL	true	9	NULL
7923	"schema"	"clob"	0	0	7933	NULL	true	0	NULL
7924	"table"	"clob"	0	0	7933	NULL	true	1	NULL
7925	"column"	"clob"	0	0	7933	NULL	true	2	NULL
7926	"type"	"clob"	0	0	7933	NULL	true	3	NULL
7927	"count"	"bigint"	64	0	7933	NULL	true	4	NULL
7928	"columnsize"	"bigint"	64	0	7933	NULL	true	5	NULL
7929	"heapsize"	"bigint"	64	0	7933	NULL	true	6	NULL
7930	"hashes"	"bigint"	64	0	7933	NULL	true	7	NULL
7931	"imprints"	"bigint"	64	0	7933	NULL	true	8	NULL
7932	"sorted"	"boolean"	1	0	7933	NULL	true	9	NULL
7935	"schema"	"clob"	0	0	7943	NULL	true	0	NULL
7936	"table"	"clob"	0	0	7943	NULL	true	1	NULL
7937	"count"	"bigint"	64	0	7943	NULL	true	2	NULL
7938	"columnsize"	"hugeint"	128	0	7943	NULL	true	3	NULL
7939	"heapsize"	"hugeint"	128	0	7943	NULL	true	4	NULL
7940	"hashes"	"hugeint"	128	0	7943	NULL	true	5	NULL
7941	"imprints"	"hugeint"	128	0	7943	NULL	true	6	NULL
7942	"auxiliary"	"hugeint"	128	0	7943	NULL	true	7	NULL
7945	"column_id"	"int"	32	0	7956	NULL	true	0	NULL
7946	"type"	"clob"	0	0	7956	NULL	true	1	NULL
7947	"width"	"int"	32	0	7956	NULL	true	2	NULL
7948	"stamp"	"timestamp"	7	0	7956	NULL	true	3	NULL
7949	"sample"	"bigint"	64	0	7956	NULL	true	4	NULL
7950	"count"	"bigint"	64	0	7956	NULL	true	5	NULL
7951	"unique"	"bigint"	64	0	7956	NULL	true	6	NULL
7952	"nils"	"bigint"	64	0	7956	NULL	true	7	NULL
7953	"minval"	"clob"	0	0	7956	NULL	true	8	NULL
7954	"maxval"	"clob"	0	0	7956	NULL	true	9	NULL
7955	"sorted"	"boolean"	1	0	7956	NULL	true	10	NULL
8056	"file_id"	"bigint"	64	0	8064	NULL	false	0	NULL
8057	"file_location"	"clob"	0	0	8064	NULL	false	1	NULL
8058	"dbschema"	"smallint"	16	0	8064	NULL	false	2	NULL
8059	"format_version"	"varchar"	7	0	8064	NULL	true	3	NULL
8060	"sorting_order"	"varchar"	10	0	8064	NULL	true	4	NULL
8061	"comments"	"clob"	0	0	8064	NULL	true	5	NULL
8066	"sn"	"clob"	0	0	8077	NULL	false	0	NULL
8067	"file_id"	"bigint"	64	0	8077	NULL	false	1	NULL
8068	"ln"	"int"	32	0	8077	NULL	true	2	NULL
8069	"as"	"int"	32	0	8077	NULL	true	3	NULL
8070	"m5"	"clob"	0	0	8077	NULL	true	4	NULL
8071	"sp"	"clob"	0	0	8077	NULL	true	5	NULL
8072	"ur"	"clob"	0	0	8077	NULL	true	6	NULL
8079	"id"	"clob"	0	0	8096	NULL	false	0	NULL
8080	"file_id"	"bigint"	64	0	8096	NULL	false	1	NULL
8081	"cn"	"clob"	0	0	8096	NULL	true	2	NULL
8082	"ds"	"clob"	0	0	8096	NULL	true	3	NULL
8083	"dt"	"timestamp"	7	0	8096	NULL	true	4	NULL
8084	"fo"	"clob"	0	0	8096	NULL	true	5	NULL
8085	"ks"	"clob"	0	0	8096	NULL	true	6	NULL
8086	"lb"	"clob"	0	0	8096	NULL	true	7	NULL
8087	"pg"	"clob"	0	0	8096	NULL	true	8	NULL
8088	"pi"	"int"	32	0	8096	NULL	true	9	NULL
8089	"pl"	"clob"	0	0	8096	NULL	true	10	NULL
8090	"pu"	"clob"	0	0	8096	NULL	true	11	NULL
8091	"sm"	"clob"	0	0	8096	NULL	true	12	NULL
8098	"id"	"clob"	0	0	8108	NULL	false	0	NULL
8099	"file_id"	"bigint"	64	0	8108	NULL	false	1	NULL
8100	"pn"	"clob"	0	0	8108	NULL	true	2	NULL
8101	"cl"	"clob"	0	0	8108	NULL	true	3	NULL
8102	"pp"	"clob"	0	0	8108	NULL	true	4	NULL
8103	"vn"	"clob"	0	0	8108	NULL	true	5	NULL
8110	"qname"	"clob"	0	0	8121	NULL	false	0	NULL
8111	"flag"	"smallint"	16	0	8121	NULL	false	1	NULL
8112	"rname"	"clob"	0	0	8121	NULL	false	2	NULL
8113	"pos"	"int"	32	0	8121	NULL	false	3	NULL
8114	"mapq"	"smallint"	16	0	8121	NULL	false	4	NULL
8115	"cigar"	"clob"	0	0	8121	NULL	false	5	NULL
8116	"rnext"	"clob"	0	0	8121	NULL	false	6	NULL
8117	"pnext"	"int"	32	0	8121	NULL	false	7	NULL
8118	"tlen"	"int"	32	0	8121	NULL	false	8	NULL
8119	"seq"	"clob"	0	0	8121	NULL	false	9	NULL
8120	"qual"	"clob"	0	0	8121	NULL	false	10	NULL
8202	"function_id"	"int"	32	0	8203	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 52 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
6155	"tables"	2000	"SELECT * FROM (SELECT p.*, 0 AS ""temporary"" FROM ""sys"".""_tables"" AS p UNION ALL SELECT t.*, 1 AS ""temporary"" FROM ""tmp"".""_tables"" AS t) AS tables where tables.type <> 2;"	1	true	0	0
6165	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
6181	"db_user_info"	2000	NULL	0	true	0	0
6187	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
6191	"user_role"	2000	NULL	0	true	0	0
6194	"auths"	2000	NULL	0	true	0	0
6198	"privileges"	2000	NULL	0	true	0	0
6405	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
6416	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
6434	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
6473	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6609	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6689	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6697	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6735	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
7099    "spatial_ref_sys"       2000    NULL    0       true    0       0
7108    "geometry_columns"      2000    "-- create geometry_columns metadata view\ncreate view geometry_columns as\n\tselect e.value as f_table_catalog,\n\t\ts.name as f_table_schema,\n\t\ty.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type\n\tfrom schemas s, environment e, (\n\t\tselect t.schema_id,\n\t\t\tt.name as f_table_name,\n\t\t\tx.name as f_geometry_column,\n\t\t\thas_z(info)+has_m(info)+2 as coord_dimension,\n\t\t\tsrid, get_type(info, 0) as type\n\t\tfrom tables t, (\n\t\t\tselect name, table_id, type_digits as info, type_scale as srid\n\t\t\tfrom columns\n\t\t\twhere type in ( select distinct sqlname from types where systemname='wkb')\n\t\t\t) as x\n\t\twhere t.id=x.table_id\n\t\t) y\n\twhere y.schema_id=s.id and e.name='gdk_dbname';" 1       true    0       0
7806	"netcdf_files"	2000	NULL	0	true	0	0
7812	"netcdf_dims"	2000	NULL	0	true	0	0
7820	"netcdf_vars"	2000	NULL	0	true	0	0
7826	"netcdf_vardim"	2000	NULL	0	true	0	0
7834	"netcdf_attrs"	2000	NULL	0	true	0	0
7873	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7885	"storagemodelinput"	2000	NULL	0	true	0	0
7933	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7943	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7956	"statistics"	2000	NULL	0	true	0	0
8064	"files"	8013	NULL	0	true	0	0
8077	"sq"	8013	NULL	0	true	0	0
8096	"rg"	8013	NULL	0	true	0	0
8108	"pg"	8013	NULL	0	true	0	0
8121	"export"	8013	NULL	0	true	0	0
8203	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4977 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155    32 "res_0" "boolean"  1  0  0  0
2156    32 "arg_1" "geometry" 0  0  1  1
2157    32 "arg_2" "geometry" 0  0  1  2
2158    33 "res_0" "boolean"  1  0  0  0
2159    33 "arg_1" "mbr"   0  0  1  1
2160    33 "arg_2" "mbr"   0  0  1  2
2161    34 "res_0" "boolean"  1  0  0  0
2162    34 "arg_1" "geometry" 0  0  1  1
2163    34 "arg_2" "geometry" 0  0  1  2
2164    35 "res_0" "boolean"  1  0  0  0
2165    35 "arg_1" "mbr"   0  0  1  1
2166    35 "arg_2" "mbr"   0  0  1  2
2167    36 "res_0" "boolean"  1  0  0  0
2168    36 "arg_1" "geometry" 0  0  1  1
2169    36 "arg_2" "geometry" 0  0  1  2
2170    37 "res_0" "boolean"  1  0  0  0
2171    37 "arg_1" "mbr"   0  0  1  1
2172    37 "arg_2" "mbr"   0  0  1  2
2173    38 "res_0" "boolean"  1  0  0  0
2174    38 "arg_1" "geometry" 0  0  1  1
2175    38 "arg_2" "geometry" 0  0  1  2
2176    39 "res_0" "boolean"  1  0  0  0
2177    39 "arg_1" "mbr"   0  0  1  1
2178    39 "arg_2" "mbr"   0  0  1  2
2179    40 "res_0" "boolean"  1  0  0  0
2180    40 "arg_1" "geometry" 0  0  1  1
2181    40 "arg_2" "geometry" 0  0  1  2
2182    41 "res_0" "boolean"  1  0  0  0
2183    41 "arg_1" "mbr"   0  0  1  1
2184    41 "arg_2" "mbr"   0  0  1  2
2185    42 "res_0" "boolean"  1  0  0  0
2186    42 "arg_1" "geometry" 0  0  1  1
2187    42 "arg_2" "geometry" 0  0  1  2
2188    43 "res_0" "boolean"  1  0  0  0
2189    43 "arg_1" "mbr"   0  0  1  1
2190    43 "arg_2" "mbr"   0  0  1  2
2191    44 "res_0" "boolean"  1  0  0  0
2192    44 "arg_1" "geometry" 0  0  1  1
2193    44 "arg_2" "geometry" 0  0  1  2
2194    45 "res_0" "boolean"  1  0  0  0
2195    45 "arg_1" "mbr"   0  0  1  1
2196    45 "arg_2" "mbr"   0  0  1  2
2197    46 "res_0" "boolean"  1  0  0  0
2198    46 "arg_1" "geometry" 0  0  1  1
2199    46 "arg_2" "geometry" 0  0  1  2
2200    47 "res_0" "boolean"  1  0  0  0
2201    47 "arg_1" "mbr"   0  0  1  1
2202    47 "arg_2" "mbr"   0  0  1  2
2203    48 "res_0" "boolean"  1  0  0  0
2204    48 "arg_1" "geometry" 0  0  1  1
2205    48 "arg_2" "geometry" 0  0  1  2
2206    49 "res_0" "boolean"  1  0  0  0
2207    49 "arg_1" "mbr"   0  0  1  1
2208    49 "arg_2" "mbr"   0  0  1  2
2209    50 "res_0" "boolean"  1  0  0  0
2210    50 "arg_1" "geometry" 0  0  1  1
2211    50 "arg_2" "geometry" 0  0  1  2
2212    51 "res_0" "boolean"  1  0  0  0
2213    51 "arg_1" "mbr"   0  0  1  1
2214    51 "arg_2" "mbr"   0  0  1  2
2215    52 "res_0" "boolean"  1  0  0  0
2216    52 "arg_1" "geometry" 0  0  1  1
2217    52 "arg_2" "geometry" 0  0  1  2
2218    53 "res_0" "boolean"  1  0  0  0
2219    53 "arg_1" "mbr"   0  0  1  1
2220    53 "arg_2" "mbr"   0  0  1  2
2221    54 "res_0" "boolean"  1  0  0  0
2222    54 "arg_1" "geometry" 0  0  1  1
2223    54 "arg_2" "geometry" 0  0  1  2
2224    55 "res_0" "boolean"  1  0  0  0
2225    55 "arg_1" "mbr"   0  0  1  1
2226    55 "arg_2" "mbr"   0  0  1  2
2227    56 "res_0" "boolean"  1  0  0  0
2228    56 "arg_1" "geometry" 0  0  1  1
2229    56 "arg_2" "geometry" 0  0  1  2
2230    57 "res_0" "boolean"  1  0  0  0
2231    57 "arg_1" "mbr"   0  0  1  1
2232    57 "arg_2" "mbr"   0  0  1  2
2233	59	"res_0"	"oid"	63	0	0	0
2234	59	"arg_1"	"wrd"	64	0	1	1
2235	60	"res_0"	"oid"	63	0	0	0
2236	60	"arg_1"	"oid"	63	0	1	1
2237	61	"res_0"	"wrd"	64	0	0	0
2238	61	"arg_1"	"any"	0	0	1	1
2239	62	"res_0"	"wrd"	64	0	0	0
2240	62	"arg_1"	"wrd"	64	0	1	1
2241	62	"arg_2"	"int"	32	0	1	2
2242	62	"arg_3"	"any"	0	0	1	3
2243	63	"res_0"	"boolean"	1	0	0	0
2244	63	"arg_1"	"any"	0	0	1	1
2245	63	"arg_2"	"any"	0	0	1	2
2246	64	"res_0"	"boolean"	1	0	0	0
2247	64	"arg_1"	"any"	0	0	1	1
2248	64	"arg_2"	"any"	0	0	1	2
2249	65	"res_0"	"boolean"	1	0	0	0
2250	65	"arg_1"	"any"	0	0	1	1
2251	66	"res_0"	"boolean"	1	0	0	0
2252	66	"arg_1"	"any"	0	0	1	1
2253	66	"arg_2"	"any"	0	0	1	2
2254	67	"res_0"	"boolean"	1	0	0	0
2255	67	"arg_1"	"any"	0	0	1	1
2256	67	"arg_2"	"any"	0	0	1	2
2257	68	"res_0"	"boolean"	1	0	0	0
2258	68	"arg_1"	"any"	0	0	1	1
2259	68	"arg_2"	"any"	0	0	1	2
2260	69	"res_0"	"boolean"	1	0	0	0
2261	69	"arg_1"	"any"	0	0	1	1
2262	69	"arg_2"	"any"	0	0	1	2
2263	73	"res_0"	"boolean"	1	0	0	0
2264	73	"arg_1"	"any"	0	0	1	1
2265	73	"arg_2"	"any"	0	0	1	2
2266	74	"res_0"	"oid"	63	0	0	0
2267	74	"arg_1"	"any"	0	0	1	1
2268	75	"res_0"	"int"	32	0	0	0
2269	75	"arg_1"	"any"	0	0	1	1
2270	76	"res_0"	"oid"	63	0	0	0
2271	76	"arg_1"	"any"	0	0	1	1
2272	76	"arg_2"	"varchar"	0	0	1	2
2273	76	"arg_3"	"varchar"	0	0	1	3
2274	79	"res_0"	"any"	0	0	0	0
2275	79	"arg_1"	"any"	0	0	1	1
2276	79	"arg_2"	"any"	0	0	1	2
2277	80	"res_0"	"any"	0	0	0	0
2278	80	"arg_1"	"any"	0	0	1	1
2279	80	"arg_2"	"any"	0	0	1	2
2280	81	"res_0"	"any"	0	0	0	0
2281	81	"arg_1"	"boolean"	1	0	1	1
2282	81	"arg_2"	"any"	0	0	1	2
2283	81	"arg_3"	"any"	0	0	1	3
2284	103	"res_0"	"oid"	63	0	0	0
2285	103	"arg_1"	"oid"	63	0	1	1
2286	103	"arg_2"	"oid"	63	0	1	2
2287	104	"res_0"	"tinyint"	8	0	0	0
2288	104	"arg_1"	"tinyint"	8	0	1	1
2289	104	"arg_2"	"tinyint"	8	0	1	2
2290	105	"res_0"	"smallint"	16	0	0	0
2291	105	"arg_1"	"smallint"	16	0	1	1
2292	105	"arg_2"	"smallint"	16	0	1	2
2293	106	"res_0"	"int"	32	0	0	0
2294	106	"arg_1"	"int"	32	0	1	1
2295	106	"arg_2"	"int"	32	0	1	2
2296	107	"res_0"	"bigint"	64	0	0	0
2297	107	"arg_1"	"bigint"	64	0	1	1
2298	107	"arg_2"	"bigint"	64	0	1	2
2299	108	"res_0"	"wrd"	64	0	0	0
2300	108	"arg_1"	"wrd"	64	0	1	1
2301	108	"arg_2"	"wrd"	64	0	1	2
2302	109	"res_0"	"hugeint"	128	0	0	0
2303	109	"arg_1"	"hugeint"	128	0	1	1
2304	109	"arg_2"	"hugeint"	128	0	1	2
2305	110	"res_0"	"decimal"	2	0	0	0
2306	110	"arg_1"	"decimal"	2	0	1	1
2307	110	"arg_2"	"decimal"	2	0	1	2
2308	111	"res_0"	"decimal"	4	0	0	0
2309	111	"arg_1"	"decimal"	4	0	1	1
2310	111	"arg_2"	"decimal"	4	0	1	2
2311	112	"res_0"	"decimal"	9	0	0	0
2312	112	"arg_1"	"decimal"	9	0	1	1
2313	112	"arg_2"	"decimal"	9	0	1	2
2314	113	"res_0"	"decimal"	18	0	0	0
2315	113	"arg_1"	"decimal"	18	0	1	1
2316	113	"arg_2"	"decimal"	18	0	1	2
2317	114	"res_0"	"decimal"	39	0	0	0
2318	114	"arg_1"	"decimal"	39	0	1	1
2319	114	"arg_2"	"decimal"	39	0	1	2
2320	115	"res_0"	"real"	24	0	0	0
2321	115	"arg_1"	"real"	24	0	1	1
2322	115	"arg_2"	"real"	24	0	1	2
2323	116	"res_0"	"double"	53	0	0	0
2324	116	"arg_1"	"double"	53	0	1	1
2325	116	"arg_2"	"double"	53	0	1	2
2326	124	"res_0"	"int"	32	0	0	0
2327	124	"arg_1"	"any"	0	0	1	1
2328	125	"res_0"	"int"	32	0	0	0
2329	125	"arg_1"	"any"	0	0	1	1
2330	126	"res_0"	"int"	32	0	0	0
2331	126	"arg_1"	"any"	0	0	1	1
2332	127	"res_0"	"any"	0	0	0	0
2333	127	"arg_1"	"any"	0	0	1	1
2334	128	"res_0"	"int"	32	0	0	0
2335	128	"arg_1"	"any"	0	0	1	1
2336	129	"res_0"	"int"	32	0	0	0
2337	129	"arg_1"	"any"	0	0	1	1
2338	129	"arg_2"	"oid"	63	0	1	2
2339	129	"arg_3"	"any"	0	0	1	3
2340	130	"res_0"	"int"	32	0	0	0
2341	130	"arg_1"	"any"	0	0	1	1
2342	130	"arg_2"	"oid"	63	0	1	2
2343	130	"arg_3"	"any"	0	0	1	3
2344	131	"res_0"	"int"	32	0	0	0
2345	131	"arg_1"	"any"	0	0	1	1
2346	131	"arg_2"	"oid"	63	0	1	2
2347	131	"arg_3"	"any"	0	0	1	3
2348	132	"res_0"	"any"	0	0	0	0
2349	132	"arg_1"	"any"	0	0	1	1
2350	132	"arg_2"	"oid"	63	0	1	2
2351	132	"arg_3"	"any"	0	0	1	3
2352	133	"res_0"	"int"	32	0	0	0
2353	133	"arg_1"	"any"	0	0	1	1
2354	133	"arg_2"	"oid"	63	0	1	2
2355	133	"arg_3"	"any"	0	0	1	3
2356	134	"res_0"	"int"	32	0	0	0
2357	134	"arg_1"	"any"	0	0	1	1
2358	134	"arg_2"	"oid"	63	0	1	2
2359	134	"arg_3"	"oid"	63	0	1	3
2360	134	"arg_4"	"oid"	63	0	1	4
2361	135	"res_0"	"int"	32	0	0	0
2362	135	"arg_1"	"any"	0	0	1	1
2363	135	"arg_2"	"oid"	63	0	1	2
2364	135	"arg_3"	"oid"	63	0	1	3
2365	135	"arg_4"	"oid"	63	0	1	4
2366	136	"res_0"	"int"	32	0	0	0
2367	136	"arg_1"	"any"	0	0	1	1
2368	136	"arg_2"	"oid"	63	0	1	2
2369	136	"arg_3"	"oid"	63	0	1	3
2370	136	"arg_4"	"oid"	63	0	1	4
2371	137	"res_0"	"any"	0	0	0	0
2372	137	"arg_1"	"any"	0	0	1	1
2373	137	"arg_2"	"oid"	63	0	1	2
2374	137	"arg_3"	"oid"	63	0	1	3
2375	137	"arg_4"	"oid"	63	0	1	4
2376	138	"res_0"	"int"	32	0	0	0
2377	138	"arg_1"	"any"	0	0	1	1
2378	138	"arg_2"	"oid"	63	0	1	2
2379	138	"arg_3"	"oid"	63	0	1	3
2380	138	"arg_4"	"oid"	63	0	1	4
2381	139	"res_0"	"any"	0	0	0	0
2382	139	"arg_1"	"any"	0	0	1	1
2383	140	"res_0"	"any"	0	0	0	0
2384	140	"arg_1"	"any"	0	0	1	1
2385	141	"res_0"	"any"	0	0	0	0
2386	141	"arg_1"	"any"	0	0	1	1
2387	141	"arg_2"	"int"	32	0	1	2
2388	142	"res_0"	"any"	0	0	0	0
2389	142	"arg_1"	"any"	0	0	1	1
2390	142	"arg_2"	"int"	32	0	1	2
2391	143	"res_0"	"any"	0	0	0	0
2392	143	"arg_1"	"any"	0	0	1	1
2393	143	"arg_2"	"oid"	63	0	1	2
2394	143	"arg_3"	"oid"	63	0	1	3
2395	144	"res_0"	"any"	0	0	0	0
2396	144	"arg_1"	"any"	0	0	1	1
2397	144	"arg_2"	"oid"	63	0	1	2
2398	144	"arg_3"	"oid"	63	0	1	3
2399	145	"res_0"	"any"	0	0	0	0
2400	145	"arg_1"	"any"	0	0	1	1
2401	145	"arg_2"	"int"	32	0	1	2
2402	145	"arg_3"	"oid"	63	0	1	3
2403	145	"arg_4"	"oid"	63	0	1	4
2404	146	"res_0"	"any"	0	0	0	0
2405	146	"arg_1"	"any"	0	0	1	1
2406	146	"arg_2"	"int"	32	0	1	2
2407	146	"arg_3"	"oid"	63	0	1	3
2408	146	"arg_4"	"oid"	63	0	1	4
2409	147	"res_0"	"boolean"	1	0	0	0
2410	147	"arg_1"	"boolean"	1	0	1	1
2411	147	"arg_2"	"boolean"	1	0	1	2
2412	148	"res_0"	"boolean"	1	0	0	0
2413	148	"arg_1"	"boolean"	1	0	1	1
2414	148	"arg_2"	"boolean"	1	0	1	2
2415	149	"res_0"	"boolean"	1	0	0	0
2416	149	"arg_1"	"boolean"	1	0	1	1
2417	149	"arg_2"	"boolean"	1	0	1	2
2418	150	"res_0"	"boolean"	1	0	0	0
2419	150	"arg_1"	"boolean"	1	0	1	1
2420	151	"res_0"	"oid"	63	0	0	0
2421	151	"arg_1"	"oid"	63	0	1	1
2422	151	"arg_2"	"oid"	63	0	1	2
2423	152	"res_0"	"oid"	63	0	0	0
2424	152	"arg_1"	"oid"	63	0	1	1
2425	152	"arg_2"	"oid"	63	0	1	2
2426	153	"res_0"	"oid"	63	0	0	0
2427	153	"arg_1"	"oid"	63	0	1	1
2428	153	"arg_2"	"oid"	63	0	1	2
2429	154	"res_0"	"oid"	63	0	0	0
2430	154	"arg_1"	"oid"	63	0	1	1
2431	154	"arg_2"	"oid"	63	0	1	2
2432	155	"res_0"	"oid"	63	0	0	0
2433	155	"arg_1"	"oid"	63	0	1	1
2434	155	"arg_2"	"oid"	63	0	1	2
2435	156	"res_0"	"oid"	63	0	0	0
2436	156	"arg_1"	"oid"	63	0	1	1
2437	156	"arg_2"	"oid"	63	0	1	2
2438	157	"res_0"	"oid"	63	0	0	0
2439	157	"arg_1"	"oid"	63	0	1	1
2440	157	"arg_2"	"oid"	63	0	1	2
2441	158	"res_0"	"oid"	63	0	0	0
2442	158	"arg_1"	"oid"	63	0	1	1
2443	159	"res_0"	"oid"	63	0	0	0
2444	159	"arg_1"	"oid"	63	0	1	1
2445	159	"arg_2"	"int"	32	0	1	2
2446	160	"res_0"	"oid"	63	0	0	0
2447	160	"arg_1"	"oid"	63	0	1	1
2448	160	"arg_2"	"int"	32	0	1	2
2449	161	"res_0"	"oid"	63	0	0	0
2450	161	"arg_1"	"oid"	63	0	1	1
2451	162	"res_0"	"oid"	63	0	0	0
2452	162	"arg_1"	"oid"	63	0	1	1
2453	163	"res_0"	"tinyint"	8	0	0	0
2454	163	"arg_1"	"oid"	63	0	1	1
2455	164	"res_0"	"oid"	63	0	0	0
2456	164	"arg_1"	"oid"	63	0	1	1
2457	164	"arg_2"	"oid"	63	0	1	2
2458	165	"res_0"	"oid"	63	0	0	0
2459	165	"arg_1"	"oid"	63	0	1	1
2460	165	"arg_2"	"oid"	63	0	1	2
2461	166	"res_0"	"month_interval"	32	0	0	0
2462	166	"arg_1"	"month_interval"	32	0	1	1
2463	166	"arg_2"	"oid"	63	0	1	2
2464	167	"res_0"	"month_interval"	32	0	0	0
2465	167	"arg_1"	"month_interval"	32	0	1	1
2466	167	"arg_2"	"oid"	63	0	1	2
2467	168	"res_0"	"month_interval"	32	0	0	0
2468	168	"arg_1"	"month_interval"	32	0	1	1
2469	168	"arg_2"	"oid"	63	0	1	2
2470	169	"res_0"	"month_interval"	32	0	0	0
2471	169	"arg_1"	"month_interval"	32	0	1	1
2472	169	"arg_2"	"oid"	63	0	1	2
2473	170	"res_0"	"sec_interval"	19	0	0	0
2474	170	"arg_1"	"sec_interval"	19	0	1	1
2475	170	"arg_2"	"oid"	63	0	1	2
2476	171	"res_0"	"sec_interval"	19	0	0	0
2477	171	"arg_1"	"sec_interval"	19	0	1	1
2478	171	"arg_2"	"oid"	63	0	1	2
2479	172	"res_0"	"sec_interval"	19	0	0	0
2480	172	"arg_1"	"sec_interval"	19	0	1	1
2481	172	"arg_2"	"oid"	63	0	1	2
2482	173	"res_0"	"sec_interval"	19	0	0	0
2483	173	"arg_1"	"sec_interval"	19	0	1	1
2484	173	"arg_2"	"oid"	63	0	1	2
2485	174	"res_0"	"tinyint"	8	0	0	0
2486	174	"arg_1"	"tinyint"	8	0	1	1
2487	174	"arg_2"	"tinyint"	8	0	1	2
2488	175	"res_0"	"tinyint"	8	0	0	0
2489	175	"arg_1"	"tinyint"	8	0	1	1
2490	175	"arg_2"	"tinyint"	8	0	1	2
2491	176	"res_0"	"tinyint"	8	0	0	0
2492	176	"arg_1"	"tinyint"	8	0	1	1
2493	176	"arg_2"	"tinyint"	8	0	1	2
2494	177	"res_0"	"tinyint"	8	0	0	0
2495	177	"arg_1"	"tinyint"	8	0	1	1
2496	177	"arg_2"	"tinyint"	8	0	1	2
2497	178	"res_0"	"tinyint"	8	0	0	0
2498	178	"arg_1"	"tinyint"	8	0	1	1
2499	178	"arg_2"	"tinyint"	8	0	1	2
2500	179	"res_0"	"tinyint"	8	0	0	0
2501	179	"arg_1"	"tinyint"	8	0	1	1
2502	179	"arg_2"	"tinyint"	8	0	1	2
2503	180	"res_0"	"tinyint"	8	0	0	0
2504	180	"arg_1"	"tinyint"	8	0	1	1
2505	180	"arg_2"	"tinyint"	8	0	1	2
2506	181	"res_0"	"tinyint"	8	0	0	0
2507	181	"arg_1"	"tinyint"	8	0	1	1
2508	182	"res_0"	"tinyint"	8	0	0	0
2509	182	"arg_1"	"tinyint"	8	0	1	1
2510	182	"arg_2"	"int"	32	0	1	2
2511	183	"res_0"	"tinyint"	8	0	0	0
2512	183	"arg_1"	"tinyint"	8	0	1	1
2513	183	"arg_2"	"int"	32	0	1	2
2514	184	"res_0"	"tinyint"	8	0	0	0
2515	184	"arg_1"	"tinyint"	8	0	1	1
2516	185	"res_0"	"tinyint"	8	0	0	0
2517	185	"arg_1"	"tinyint"	8	0	1	1
2518	186	"res_0"	"tinyint"	8	0	0	0
2519	186	"arg_1"	"tinyint"	8	0	1	1
2520	187	"res_0"	"tinyint"	8	0	0	0
2521	187	"arg_1"	"tinyint"	8	0	1	1
2522	187	"arg_2"	"tinyint"	8	0	1	2
2523	188	"res_0"	"tinyint"	8	0	0	0
2524	188	"arg_1"	"tinyint"	8	0	1	1
2525	188	"arg_2"	"tinyint"	8	0	1	2
2526	189	"res_0"	"month_interval"	32	0	0	0
2527	189	"arg_1"	"month_interval"	32	0	1	1
2528	189	"arg_2"	"tinyint"	8	0	1	2
2529	190	"res_0"	"month_interval"	32	0	0	0
2530	190	"arg_1"	"month_interval"	32	0	1	1
2531	190	"arg_2"	"tinyint"	8	0	1	2
2532	191	"res_0"	"month_interval"	32	0	0	0
2533	191	"arg_1"	"month_interval"	32	0	1	1
2534	191	"arg_2"	"tinyint"	8	0	1	2
2535	192	"res_0"	"month_interval"	32	0	0	0
2536	192	"arg_1"	"month_interval"	32	0	1	1
2537	192	"arg_2"	"tinyint"	8	0	1	2
2538	193	"res_0"	"sec_interval"	19	0	0	0
2539	193	"arg_1"	"sec_interval"	19	0	1	1
2540	193	"arg_2"	"tinyint"	8	0	1	2
2541	194	"res_0"	"sec_interval"	19	0	0	0
2542	194	"arg_1"	"sec_interval"	19	0	1	1
2543	194	"arg_2"	"tinyint"	8	0	1	2
2544	195	"res_0"	"sec_interval"	19	0	0	0
2545	195	"arg_1"	"sec_interval"	19	0	1	1
2546	195	"arg_2"	"tinyint"	8	0	1	2
2547	196	"res_0"	"sec_interval"	19	0	0	0
2548	196	"arg_1"	"sec_interval"	19	0	1	1
2549	196	"arg_2"	"tinyint"	8	0	1	2
2550	197	"res_0"	"smallint"	16	0	0	0
2551	197	"arg_1"	"smallint"	16	0	1	1
2552	197	"arg_2"	"smallint"	16	0	1	2
2553	198	"res_0"	"smallint"	16	0	0	0
2554	198	"arg_1"	"smallint"	16	0	1	1
2555	198	"arg_2"	"smallint"	16	0	1	2
2556	199	"res_0"	"smallint"	16	0	0	0
2557	199	"arg_1"	"smallint"	16	0	1	1
2558	199	"arg_2"	"smallint"	16	0	1	2
2559	200	"res_0"	"smallint"	16	0	0	0
2560	200	"arg_1"	"smallint"	16	0	1	1
2561	200	"arg_2"	"smallint"	16	0	1	2
2562	201	"res_0"	"smallint"	16	0	0	0
2563	201	"arg_1"	"smallint"	16	0	1	1
2564	201	"arg_2"	"smallint"	16	0	1	2
2565	202	"res_0"	"smallint"	16	0	0	0
2566	202	"arg_1"	"smallint"	16	0	1	1
2567	202	"arg_2"	"smallint"	16	0	1	2
2568	203	"res_0"	"smallint"	16	0	0	0
2569	203	"arg_1"	"smallint"	16	0	1	1
2570	203	"arg_2"	"smallint"	16	0	1	2
2571	204	"res_0"	"smallint"	16	0	0	0
2572	204	"arg_1"	"smallint"	16	0	1	1
2573	205	"res_0"	"smallint"	16	0	0	0
2574	205	"arg_1"	"smallint"	16	0	1	1
2575	205	"arg_2"	"int"	32	0	1	2
2576	206	"res_0"	"smallint"	16	0	0	0
2577	206	"arg_1"	"smallint"	16	0	1	1
2578	206	"arg_2"	"int"	32	0	1	2
2579	207	"res_0"	"smallint"	16	0	0	0
2580	207	"arg_1"	"smallint"	16	0	1	1
2581	208	"res_0"	"smallint"	16	0	0	0
2582	208	"arg_1"	"smallint"	16	0	1	1
2583	209	"res_0"	"tinyint"	8	0	0	0
2584	209	"arg_1"	"smallint"	16	0	1	1
2585	210	"res_0"	"smallint"	16	0	0	0
2586	210	"arg_1"	"smallint"	16	0	1	1
2587	210	"arg_2"	"smallint"	16	0	1	2
2588	211	"res_0"	"smallint"	16	0	0	0
2589	211	"arg_1"	"smallint"	16	0	1	1
2590	211	"arg_2"	"smallint"	16	0	1	2
2591	212	"res_0"	"month_interval"	32	0	0	0
2592	212	"arg_1"	"month_interval"	32	0	1	1
2593	212	"arg_2"	"smallint"	16	0	1	2
2594	213	"res_0"	"month_interval"	32	0	0	0
2595	213	"arg_1"	"month_interval"	32	0	1	1
2596	213	"arg_2"	"smallint"	16	0	1	2
2597	214	"res_0"	"month_interval"	32	0	0	0
2598	214	"arg_1"	"month_interval"	32	0	1	1
2599	214	"arg_2"	"smallint"	16	0	1	2
2600	215	"res_0"	"month_interval"	32	0	0	0
2601	215	"arg_1"	"month_interval"	32	0	1	1
2602	215	"arg_2"	"smallint"	16	0	1	2
2603	216	"res_0"	"sec_interval"	19	0	0	0
2604	216	"arg_1"	"sec_interval"	19	0	1	1
2605	216	"arg_2"	"smallint"	16	0	1	2
2606	217	"res_0"	"sec_interval"	19	0	0	0
2607	217	"arg_1"	"sec_interval"	19	0	1	1
2608	217	"arg_2"	"smallint"	16	0	1	2
2609	218	"res_0"	"sec_interval"	19	0	0	0
2610	218	"arg_1"	"sec_interval"	19	0	1	1
2611	218	"arg_2"	"smallint"	16	0	1	2
2612	219	"res_0"	"sec_interval"	19	0	0	0
2613	219	"arg_1"	"sec_interval"	19	0	1	1
2614	219	"arg_2"	"smallint"	16	0	1	2
2615	220	"res_0"	"int"	32	0	0	0
2616	220	"arg_1"	"int"	32	0	1	1
2617	220	"arg_2"	"int"	32	0	1	2
2618	221	"res_0"	"int"	32	0	0	0
2619	221	"arg_1"	"int"	32	0	1	1
2620	221	"arg_2"	"int"	32	0	1	2
2621	222	"res_0"	"int"	32	0	0	0
2622	222	"arg_1"	"int"	32	0	1	1
2623	222	"arg_2"	"int"	32	0	1	2
2624	223	"res_0"	"int"	32	0	0	0
2625	223	"arg_1"	"int"	32	0	1	1
2626	223	"arg_2"	"int"	32	0	1	2
2627	224	"res_0"	"int"	32	0	0	0
2628	224	"arg_1"	"int"	32	0	1	1
2629	224	"arg_2"	"int"	32	0	1	2
2630	225	"res_0"	"int"	32	0	0	0
2631	225	"arg_1"	"int"	32	0	1	1
2632	225	"arg_2"	"int"	32	0	1	2
2633	226	"res_0"	"int"	32	0	0	0
2634	226	"arg_1"	"int"	32	0	1	1
2635	226	"arg_2"	"int"	32	0	1	2
2636	227	"res_0"	"int"	32	0	0	0
2637	227	"arg_1"	"int"	32	0	1	1
2638	228	"res_0"	"int"	32	0	0	0
2639	228	"arg_1"	"int"	32	0	1	1
2640	228	"arg_2"	"int"	32	0	1	2
2641	229	"res_0"	"int"	32	0	0	0
2642	229	"arg_1"	"int"	32	0	1	1
2643	229	"arg_2"	"int"	32	0	1	2
2644	230	"res_0"	"int"	32	0	0	0
2645	230	"arg_1"	"int"	32	0	1	1
2646	231	"res_0"	"int"	32	0	0	0
2647	231	"arg_1"	"int"	32	0	1	1
2648	232	"res_0"	"tinyint"	8	0	0	0
2649	232	"arg_1"	"int"	32	0	1	1
2650	233	"res_0"	"int"	32	0	0	0
2651	233	"arg_1"	"int"	32	0	1	1
2652	233	"arg_2"	"int"	32	0	1	2
2653	234	"res_0"	"int"	32	0	0	0
2654	234	"arg_1"	"int"	32	0	1	1
2655	234	"arg_2"	"int"	32	0	1	2
2656	235	"res_0"	"month_interval"	32	0	0	0
2657	235	"arg_1"	"month_interval"	32	0	1	1
2658	235	"arg_2"	"int"	32	0	1	2
2659	236	"res_0"	"month_interval"	32	0	0	0
2660	236	"arg_1"	"month_interval"	32	0	1	1
2661	236	"arg_2"	"int"	32	0	1	2
2662	237	"res_0"	"month_interval"	32	0	0	0
2663	237	"arg_1"	"month_interval"	32	0	1	1
2664	237	"arg_2"	"int"	32	0	1	2
2665	238	"res_0"	"month_interval"	32	0	0	0
2666	238	"arg_1"	"month_interval"	32	0	1	1
2667	238	"arg_2"	"int"	32	0	1	2
2668	239	"res_0"	"sec_interval"	19	0	0	0
2669	239	"arg_1"	"sec_interval"	19	0	1	1
2670	239	"arg_2"	"int"	32	0	1	2
2671	240	"res_0"	"sec_interval"	19	0	0	0
2672	240	"arg_1"	"sec_interval"	19	0	1	1
2673	240	"arg_2"	"int"	32	0	1	2
2674	241	"res_0"	"sec_interval"	19	0	0	0
2675	241	"arg_1"	"sec_interval"	19	0	1	1
2676	241	"arg_2"	"int"	32	0	1	2
2677	242	"res_0"	"sec_interval"	19	0	0	0
2678	242	"arg_1"	"sec_interval"	19	0	1	1
2679	242	"arg_2"	"int"	32	0	1	2
2680	243	"res_0"	"bigint"	64	0	0	0
2681	243	"arg_1"	"bigint"	64	0	1	1
2682	243	"arg_2"	"bigint"	64	0	1	2
2683	244	"res_0"	"bigint"	64	0	0	0
2684	244	"arg_1"	"bigint"	64	0	1	1
2685	244	"arg_2"	"bigint"	64	0	1	2
2686	245	"res_0"	"bigint"	64	0	0	0
2687	245	"arg_1"	"bigint"	64	0	1	1
2688	245	"arg_2"	"bigint"	64	0	1	2
2689	246	"res_0"	"bigint"	64	0	0	0
2690	246	"arg_1"	"bigint"	64	0	1	1
2691	246	"arg_2"	"bigint"	64	0	1	2
2692	247	"res_0"	"bigint"	64	0	0	0
2693	247	"arg_1"	"bigint"	64	0	1	1
2694	247	"arg_2"	"bigint"	64	0	1	2
2695	248	"res_0"	"bigint"	64	0	0	0
2696	248	"arg_1"	"bigint"	64	0	1	1
2697	248	"arg_2"	"bigint"	64	0	1	2
2698	249	"res_0"	"bigint"	64	0	0	0
2699	249	"arg_1"	"bigint"	64	0	1	1
2700	249	"arg_2"	"bigint"	64	0	1	2
2701	250	"res_0"	"bigint"	64	0	0	0
2702	250	"arg_1"	"bigint"	64	0	1	1
2703	251	"res_0"	"bigint"	64	0	0	0
2704	251	"arg_1"	"bigint"	64	0	1	1
2705	251	"arg_2"	"int"	32	0	1	2
2706	252	"res_0"	"bigint"	64	0	0	0
2707	252	"arg_1"	"bigint"	64	0	1	1
2708	252	"arg_2"	"int"	32	0	1	2
2709	253	"res_0"	"bigint"	64	0	0	0
2710	253	"arg_1"	"bigint"	64	0	1	1
2711	254	"res_0"	"bigint"	64	0	0	0
2712	254	"arg_1"	"bigint"	64	0	1	1
2713	255	"res_0"	"tinyint"	8	0	0	0
2714	255	"arg_1"	"bigint"	64	0	1	1
2715	256	"res_0"	"bigint"	64	0	0	0
2716	256	"arg_1"	"bigint"	64	0	1	1
2717	256	"arg_2"	"bigint"	64	0	1	2
2718	257	"res_0"	"bigint"	64	0	0	0
2719	257	"arg_1"	"bigint"	64	0	1	1
2720	257	"arg_2"	"bigint"	64	0	1	2
2721	258	"res_0"	"month_interval"	32	0	0	0
2722	258	"arg_1"	"month_interval"	32	0	1	1
2723	258	"arg_2"	"bigint"	64	0	1	2
2724	259	"res_0"	"month_interval"	32	0	0	0
2725	259	"arg_1"	"month_interval"	32	0	1	1
2726	259	"arg_2"	"bigint"	64	0	1	2
2727	260	"res_0"	"month_interval"	32	0	0	0
2728	260	"arg_1"	"month_interval"	32	0	1	1
2729	260	"arg_2"	"bigint"	64	0	1	2
2730	261	"res_0"	"month_interval"	32	0	0	0
2731	261	"arg_1"	"month_interval"	32	0	1	1
2732	261	"arg_2"	"bigint"	64	0	1	2
2733	262	"res_0"	"sec_interval"	19	0	0	0
2734	262	"arg_1"	"sec_interval"	19	0	1	1
2735	262	"arg_2"	"bigint"	64	0	1	2
2736	263	"res_0"	"sec_interval"	19	0	0	0
2737	263	"arg_1"	"sec_interval"	19	0	1	1
2738	263	"arg_2"	"bigint"	64	0	1	2
2739	264	"res_0"	"sec_interval"	19	0	0	0
2740	264	"arg_1"	"sec_interval"	19	0	1	1
2741	264	"arg_2"	"bigint"	64	0	1	2
2742	265	"res_0"	"sec_interval"	19	0	0	0
2743	265	"arg_1"	"sec_interval"	19	0	1	1
2744	265	"arg_2"	"bigint"	64	0	1	2
2745	266	"res_0"	"wrd"	64	0	0	0
2746	266	"arg_1"	"wrd"	64	0	1	1
2747	266	"arg_2"	"wrd"	64	0	1	2
2748	267	"res_0"	"wrd"	64	0	0	0
2749	267	"arg_1"	"wrd"	64	0	1	1
2750	267	"arg_2"	"wrd"	64	0	1	2
2751	268	"res_0"	"wrd"	64	0	0	0
2752	268	"arg_1"	"wrd"	64	0	1	1
2753	268	"arg_2"	"wrd"	64	0	1	2
2754	269	"res_0"	"wrd"	64	0	0	0
2755	269	"arg_1"	"wrd"	64	0	1	1
2756	269	"arg_2"	"wrd"	64	0	1	2
2757	270	"res_0"	"wrd"	64	0	0	0
2758	270	"arg_1"	"wrd"	64	0	1	1
2759	270	"arg_2"	"wrd"	64	0	1	2
2760	271	"res_0"	"wrd"	64	0	0	0
2761	271	"arg_1"	"wrd"	64	0	1	1
2762	271	"arg_2"	"wrd"	64	0	1	2
2763	272	"res_0"	"wrd"	64	0	0	0
2764	272	"arg_1"	"wrd"	64	0	1	1
2765	272	"arg_2"	"wrd"	64	0	1	2
2766	273	"res_0"	"wrd"	64	0	0	0
2767	273	"arg_1"	"wrd"	64	0	1	1
2768	274	"res_0"	"wrd"	64	0	0	0
2769	274	"arg_1"	"wrd"	64	0	1	1
2770	274	"arg_2"	"int"	32	0	1	2
2771	275	"res_0"	"wrd"	64	0	0	0
2772	275	"arg_1"	"wrd"	64	0	1	1
2773	275	"arg_2"	"int"	32	0	1	2
2774	276	"res_0"	"wrd"	64	0	0	0
2775	276	"arg_1"	"wrd"	64	0	1	1
2776	277	"res_0"	"wrd"	64	0	0	0
2777	277	"arg_1"	"wrd"	64	0	1	1
2778	278	"res_0"	"tinyint"	8	0	0	0
2779	278	"arg_1"	"wrd"	64	0	1	1
2780	279	"res_0"	"wrd"	64	0	0	0
2781	279	"arg_1"	"wrd"	64	0	1	1
2782	279	"arg_2"	"wrd"	64	0	1	2
2783	280	"res_0"	"wrd"	64	0	0	0
2784	280	"arg_1"	"wrd"	64	0	1	1
2785	280	"arg_2"	"wrd"	64	0	1	2
2786	281	"res_0"	"month_interval"	32	0	0	0
2787	281	"arg_1"	"month_interval"	32	0	1	1
2788	281	"arg_2"	"wrd"	64	0	1	2
2789	282	"res_0"	"month_interval"	32	0	0	0
2790	282	"arg_1"	"month_interval"	32	0	1	1
2791	282	"arg_2"	"wrd"	64	0	1	2
2792	283	"res_0"	"month_interval"	32	0	0	0
2793	283	"arg_1"	"month_interval"	32	0	1	1
2794	283	"arg_2"	"wrd"	64	0	1	2
2795	284	"res_0"	"month_interval"	32	0	0	0
2796	284	"arg_1"	"month_interval"	32	0	1	1
2797	284	"arg_2"	"wrd"	64	0	1	2
2798	285	"res_0"	"sec_interval"	19	0	0	0
2799	285	"arg_1"	"sec_interval"	19	0	1	1
2800	285	"arg_2"	"wrd"	64	0	1	2
2801	286	"res_0"	"sec_interval"	19	0	0	0
2802	286	"arg_1"	"sec_interval"	19	0	1	1
2803	286	"arg_2"	"wrd"	64	0	1	2
2804	287	"res_0"	"sec_interval"	19	0	0	0
2805	287	"arg_1"	"sec_interval"	19	0	1	1
2806	287	"arg_2"	"wrd"	64	0	1	2
2807	288	"res_0"	"sec_interval"	19	0	0	0
2808	288	"arg_1"	"sec_interval"	19	0	1	1
2809	288	"arg_2"	"wrd"	64	0	1	2
2810	289	"res_0"	"hugeint"	128	0	0	0
2811	289	"arg_1"	"hugeint"	128	0	1	1
2812	289	"arg_2"	"hugeint"	128	0	1	2
2813	290	"res_0"	"hugeint"	128	0	0	0
2814	290	"arg_1"	"hugeint"	128	0	1	1
2815	290	"arg_2"	"hugeint"	128	0	1	2
2816	291	"res_0"	"hugeint"	128	0	0	0
2817	291	"arg_1"	"hugeint"	128	0	1	1
2818	291	"arg_2"	"hugeint"	128	0	1	2
2819	292	"res_0"	"hugeint"	128	0	0	0
2820	292	"arg_1"	"hugeint"	128	0	1	1
2821	292	"arg_2"	"hugeint"	128	0	1	2
2822	293	"res_0"	"hugeint"	128	0	0	0
2823	293	"arg_1"	"hugeint"	128	0	1	1
2824	293	"arg_2"	"hugeint"	128	0	1	2
2825	294	"res_0"	"hugeint"	128	0	0	0
2826	294	"arg_1"	"hugeint"	128	0	1	1
2827	294	"arg_2"	"hugeint"	128	0	1	2
2828	295	"res_0"	"hugeint"	128	0	0	0
2829	295	"arg_1"	"hugeint"	128	0	1	1
2830	295	"arg_2"	"hugeint"	128	0	1	2
2831	296	"res_0"	"hugeint"	128	0	0	0
2832	296	"arg_1"	"hugeint"	128	0	1	1
2833	297	"res_0"	"hugeint"	128	0	0	0
2834	297	"arg_1"	"hugeint"	128	0	1	1
2835	297	"arg_2"	"int"	32	0	1	2
2836	298	"res_0"	"hugeint"	128	0	0	0
2837	298	"arg_1"	"hugeint"	128	0	1	1
2838	298	"arg_2"	"int"	32	0	1	2
2839	299	"res_0"	"hugeint"	128	0	0	0
2840	299	"arg_1"	"hugeint"	128	0	1	1
2841	300	"res_0"	"hugeint"	128	0	0	0
2842	300	"arg_1"	"hugeint"	128	0	1	1
2843	301	"res_0"	"tinyint"	8	0	0	0
2844	301	"arg_1"	"hugeint"	128	0	1	1
2845	302	"res_0"	"hugeint"	128	0	0	0
2846	302	"arg_1"	"hugeint"	128	0	1	1
2847	302	"arg_2"	"hugeint"	128	0	1	2
2848	303	"res_0"	"hugeint"	128	0	0	0
2849	303	"arg_1"	"hugeint"	128	0	1	1
2850	303	"arg_2"	"hugeint"	128	0	1	2
2851	304	"res_0"	"month_interval"	32	0	0	0
2852	304	"arg_1"	"month_interval"	32	0	1	1
2853	304	"arg_2"	"hugeint"	128	0	1	2
2854	305	"res_0"	"month_interval"	32	0	0	0
2855	305	"arg_1"	"month_interval"	32	0	1	1
2856	305	"arg_2"	"hugeint"	128	0	1	2
2857	306	"res_0"	"month_interval"	32	0	0	0
2858	306	"arg_1"	"month_interval"	32	0	1	1
2859	306	"arg_2"	"hugeint"	128	0	1	2
2860	307	"res_0"	"month_interval"	32	0	0	0
2861	307	"arg_1"	"month_interval"	32	0	1	1
2862	307	"arg_2"	"hugeint"	128	0	1	2
2863	308	"res_0"	"sec_interval"	19	0	0	0
2864	308	"arg_1"	"sec_interval"	19	0	1	1
2865	308	"arg_2"	"hugeint"	128	0	1	2
2866	309	"res_0"	"sec_interval"	19	0	0	0
2867	309	"arg_1"	"sec_interval"	19	0	1	1
2868	309	"arg_2"	"hugeint"	128	0	1	2
2869	310	"res_0"	"sec_interval"	19	0	0	0
2870	310	"arg_1"	"sec_interval"	19	0	1	1
2871	310	"arg_2"	"hugeint"	128	0	1	2
2872	311	"res_0"	"sec_interval"	19	0	0	0
2873	311	"arg_1"	"sec_interval"	19	0	1	1
2874	311	"arg_2"	"hugeint"	128	0	1	2
2875	312	"res_0"	"decimal"	2	0	0	0
2876	312	"arg_1"	"decimal"	2	0	1	1
2877	312	"arg_2"	"decimal"	2	0	1	2
2878	313	"res_0"	"decimal"	2	0	0	0
2879	313	"arg_1"	"decimal"	2	0	1	1
2880	313	"arg_2"	"decimal"	2	0	1	2
2881	314	"res_0"	"decimal"	2	0	0	0
2882	314	"arg_1"	"decimal"	2	0	1	1
2883	314	"arg_2"	"decimal"	2	0	1	2
2884	315	"res_0"	"decimal"	2	0	0	0
2885	315	"arg_1"	"decimal"	2	0	1	1
2886	315	"arg_2"	"decimal"	2	0	1	2
2887	316	"res_0"	"decimal"	2	0	0	0
2888	316	"arg_1"	"decimal"	2	0	1	1
2889	316	"arg_2"	"decimal"	2	0	1	2
2890	317	"res_0"	"decimal"	2	0	0	0
2891	317	"arg_1"	"decimal"	2	0	1	1
2892	317	"arg_2"	"decimal"	2	0	1	2
2893	318	"res_0"	"decimal"	2	0	0	0
2894	318	"arg_1"	"decimal"	2	0	1	1
2895	318	"arg_2"	"decimal"	2	0	1	2
2896	319	"res_0"	"decimal"	2	0	0	0
2897	319	"arg_1"	"decimal"	2	0	1	1
2898	320	"res_0"	"decimal"	2	0	0	0
2899	320	"arg_1"	"decimal"	2	0	1	1
2900	320	"arg_2"	"int"	32	0	1	2
2901	321	"res_0"	"decimal"	2	0	0	0
2902	321	"arg_1"	"decimal"	2	0	1	1
2903	321	"arg_2"	"int"	32	0	1	2
2904	322	"res_0"	"decimal"	2	0	0	0
2905	322	"arg_1"	"decimal"	2	0	1	1
2906	323	"res_0"	"decimal"	2	0	0	0
2907	323	"arg_1"	"decimal"	2	0	1	1
2908	324	"res_0"	"tinyint"	8	0	0	0
2909	324	"arg_1"	"decimal"	2	0	1	1
2910	325	"res_0"	"decimal"	2	0	0	0
2911	325	"arg_1"	"decimal"	2	0	1	1
2912	325	"arg_2"	"tinyint"	8	0	1	2
2913	326	"res_0"	"decimal"	2	0	0	0
2914	326	"arg_1"	"decimal"	2	0	1	1
2915	326	"arg_2"	"tinyint"	8	0	1	2
2916	327	"res_0"	"month_interval"	32	0	0	0
2917	327	"arg_1"	"month_interval"	32	0	1	1
2918	327	"arg_2"	"decimal"	2	0	1	2
2919	328	"res_0"	"month_interval"	32	0	0	0
2920	328	"arg_1"	"month_interval"	32	0	1	1
2921	328	"arg_2"	"decimal"	2	0	1	2
2922	329	"res_0"	"month_interval"	32	0	0	0
2923	329	"arg_1"	"month_interval"	32	0	1	1
2924	329	"arg_2"	"decimal"	2	0	1	2
2925	330	"res_0"	"month_interval"	32	0	0	0
2926	330	"arg_1"	"month_interval"	32	0	1	1
2927	330	"arg_2"	"decimal"	2	0	1	2
2928	331	"res_0"	"sec_interval"	19	0	0	0
2929	331	"arg_1"	"sec_interval"	19	0	1	1
2930	331	"arg_2"	"decimal"	2	0	1	2
2931	332	"res_0"	"sec_interval"	19	0	0	0
2932	332	"arg_1"	"sec_interval"	19	0	1	1
2933	332	"arg_2"	"decimal"	2	0	1	2
2934	333	"res_0"	"sec_interval"	19	0	0	0
2935	333	"arg_1"	"sec_interval"	19	0	1	1
2936	333	"arg_2"	"decimal"	2	0	1	2
2937	334	"res_0"	"sec_interval"	19	0	0	0
2938	334	"arg_1"	"sec_interval"	19	0	1	1
2939	334	"arg_2"	"decimal"	2	0	1	2
2940	335	"res_0"	"decimal"	4	0	0	0
2941	335	"arg_1"	"decimal"	4	0	1	1
2942	335	"arg_2"	"decimal"	4	0	1	2
2943	336	"res_0"	"decimal"	4	0	0	0
2944	336	"arg_1"	"decimal"	4	0	1	1
2945	336	"arg_2"	"decimal"	4	0	1	2
2946	337	"res_0"	"decimal"	4	0	0	0
2947	337	"arg_1"	"decimal"	4	0	1	1
2948	337	"arg_2"	"decimal"	4	0	1	2
2949	338	"res_0"	"decimal"	4	0	0	0
2950	338	"arg_1"	"decimal"	4	0	1	1
2951	338	"arg_2"	"decimal"	4	0	1	2
2952	339	"res_0"	"decimal"	4	0	0	0
2953	339	"arg_1"	"decimal"	4	0	1	1
2954	339	"arg_2"	"decimal"	4	0	1	2
2955	340	"res_0"	"decimal"	4	0	0	0
2956	340	"arg_1"	"decimal"	4	0	1	1
2957	340	"arg_2"	"decimal"	4	0	1	2
2958	341	"res_0"	"decimal"	4	0	0	0
2959	341	"arg_1"	"decimal"	4	0	1	1
2960	341	"arg_2"	"decimal"	4	0	1	2
2961	342	"res_0"	"decimal"	4	0	0	0
2962	342	"arg_1"	"decimal"	4	0	1	1
2963	343	"res_0"	"decimal"	4	0	0	0
2964	343	"arg_1"	"decimal"	4	0	1	1
2965	343	"arg_2"	"int"	32	0	1	2
2966	344	"res_0"	"decimal"	4	0	0	0
2967	344	"arg_1"	"decimal"	4	0	1	1
2968	344	"arg_2"	"int"	32	0	1	2
2969	345	"res_0"	"decimal"	4	0	0	0
2970	345	"arg_1"	"decimal"	4	0	1	1
2971	346	"res_0"	"decimal"	4	0	0	0
2972	346	"arg_1"	"decimal"	4	0	1	1
2973	347	"res_0"	"tinyint"	8	0	0	0
2974	347	"arg_1"	"decimal"	4	0	1	1
2975	348	"res_0"	"decimal"	4	0	0	0
2976	348	"arg_1"	"decimal"	4	0	1	1
2977	348	"arg_2"	"smallint"	16	0	1	2
2978	349	"res_0"	"decimal"	4	0	0	0
2979	349	"arg_1"	"decimal"	4	0	1	1
2980	349	"arg_2"	"smallint"	16	0	1	2
2981	350	"res_0"	"month_interval"	32	0	0	0
2982	350	"arg_1"	"month_interval"	32	0	1	1
2983	350	"arg_2"	"decimal"	4	0	1	2
2984	351	"res_0"	"month_interval"	32	0	0	0
2985	351	"arg_1"	"month_interval"	32	0	1	1
2986	351	"arg_2"	"decimal"	4	0	1	2
2987	352	"res_0"	"month_interval"	32	0	0	0
2988	352	"arg_1"	"month_interval"	32	0	1	1
2989	352	"arg_2"	"decimal"	4	0	1	2
2990	353	"res_0"	"month_interval"	32	0	0	0
2991	353	"arg_1"	"month_interval"	32	0	1	1
2992	353	"arg_2"	"decimal"	4	0	1	2
2993	354	"res_0"	"sec_interval"	19	0	0	0
2994	354	"arg_1"	"sec_interval"	19	0	1	1
2995	354	"arg_2"	"decimal"	4	0	1	2
2996	355	"res_0"	"sec_interval"	19	0	0	0
2997	355	"arg_1"	"sec_interval"	19	0	1	1
2998	355	"arg_2"	"decimal"	4	0	1	2
2999	356	"res_0"	"sec_interval"	19	0	0	0
3000	356	"arg_1"	"sec_interval"	19	0	1	1
3001	356	"arg_2"	"decimal"	4	0	1	2
3002	357	"res_0"	"sec_interval"	19	0	0	0
3003	357	"arg_1"	"sec_interval"	19	0	1	1
3004	357	"arg_2"	"decimal"	4	0	1	2
3005	358	"res_0"	"decimal"	9	0	0	0
3006	358	"arg_1"	"decimal"	9	0	1	1
3007	358	"arg_2"	"decimal"	9	0	1	2
3008	359	"res_0"	"decimal"	9	0	0	0
3009	359	"arg_1"	"decimal"	9	0	1	1
3010	359	"arg_2"	"decimal"	9	0	1	2
3011	360	"res_0"	"decimal"	9	0	0	0
3012	360	"arg_1"	"decimal"	9	0	1	1
3013	360	"arg_2"	"decimal"	9	0	1	2
3014	361	"res_0"	"decimal"	9	0	0	0
3015	361	"arg_1"	"decimal"	9	0	1	1
3016	361	"arg_2"	"decimal"	9	0	1	2
3017	362	"res_0"	"decimal"	9	0	0	0
3018	362	"arg_1"	"decimal"	9	0	1	1
3019	362	"arg_2"	"decimal"	9	0	1	2
3020	363	"res_0"	"decimal"	9	0	0	0
3021	363	"arg_1"	"decimal"	9	0	1	1
3022	363	"arg_2"	"decimal"	9	0	1	2
3023	364	"res_0"	"decimal"	9	0	0	0
3024	364	"arg_1"	"decimal"	9	0	1	1
3025	364	"arg_2"	"decimal"	9	0	1	2
3026	365	"res_0"	"decimal"	9	0	0	0
3027	365	"arg_1"	"decimal"	9	0	1	1
3028	366	"res_0"	"decimal"	9	0	0	0
3029	366	"arg_1"	"decimal"	9	0	1	1
3030	366	"arg_2"	"int"	32	0	1	2
3031	367	"res_0"	"decimal"	9	0	0	0
3032	367	"arg_1"	"decimal"	9	0	1	1
3033	367	"arg_2"	"int"	32	0	1	2
3034	368	"res_0"	"decimal"	9	0	0	0
3035	368	"arg_1"	"decimal"	9	0	1	1
3036	369	"res_0"	"decimal"	9	0	0	0
3037	369	"arg_1"	"decimal"	9	0	1	1
3038	370	"res_0"	"tinyint"	8	0	0	0
3039	370	"arg_1"	"decimal"	9	0	1	1
3040	371	"res_0"	"decimal"	9	0	0	0
3041	371	"arg_1"	"decimal"	9	0	1	1
3042	371	"arg_2"	"int"	32	0	1	2
3043	372	"res_0"	"decimal"	9	0	0	0
3044	372	"arg_1"	"decimal"	9	0	1	1
3045	372	"arg_2"	"int"	32	0	1	2
3046	373	"res_0"	"month_interval"	32	0	0	0
3047	373	"arg_1"	"month_interval"	32	0	1	1
3048	373	"arg_2"	"decimal"	9	0	1	2
3049	374	"res_0"	"month_interval"	32	0	0	0
3050	374	"arg_1"	"month_interval"	32	0	1	1
3051	374	"arg_2"	"decimal"	9	0	1	2
3052	375	"res_0"	"month_interval"	32	0	0	0
3053	375	"arg_1"	"month_interval"	32	0	1	1
3054	375	"arg_2"	"decimal"	9	0	1	2
3055	376	"res_0"	"month_interval"	32	0	0	0
3056	376	"arg_1"	"month_interval"	32	0	1	1
3057	376	"arg_2"	"decimal"	9	0	1	2
3058	377	"res_0"	"sec_interval"	19	0	0	0
3059	377	"arg_1"	"sec_interval"	19	0	1	1
3060	377	"arg_2"	"decimal"	9	0	1	2
3061	378	"res_0"	"sec_interval"	19	0	0	0
3062	378	"arg_1"	"sec_interval"	19	0	1	1
3063	378	"arg_2"	"decimal"	9	0	1	2
3064	379	"res_0"	"sec_interval"	19	0	0	0
3065	379	"arg_1"	"sec_interval"	19	0	1	1
3066	379	"arg_2"	"decimal"	9	0	1	2
3067	380	"res_0"	"sec_interval"	19	0	0	0
3068	380	"arg_1"	"sec_interval"	19	0	1	1
3069	380	"arg_2"	"decimal"	9	0	1	2
3070	381	"res_0"	"decimal"	18	0	0	0
3071	381	"arg_1"	"decimal"	18	0	1	1
3072	381	"arg_2"	"decimal"	18	0	1	2
3073	382	"res_0"	"decimal"	18	0	0	0
3074	382	"arg_1"	"decimal"	18	0	1	1
3075	382	"arg_2"	"decimal"	18	0	1	2
3076	383	"res_0"	"decimal"	18	0	0	0
3077	383	"arg_1"	"decimal"	18	0	1	1
3078	383	"arg_2"	"decimal"	18	0	1	2
3079	384	"res_0"	"decimal"	18	0	0	0
3080	384	"arg_1"	"decimal"	18	0	1	1
3081	384	"arg_2"	"decimal"	18	0	1	2
3082	385	"res_0"	"decimal"	18	0	0	0
3083	385	"arg_1"	"decimal"	18	0	1	1
3084	385	"arg_2"	"decimal"	18	0	1	2
3085	386	"res_0"	"decimal"	18	0	0	0
3086	386	"arg_1"	"decimal"	18	0	1	1
3087	386	"arg_2"	"decimal"	18	0	1	2
3088	387	"res_0"	"decimal"	18	0	0	0
3089	387	"arg_1"	"decimal"	18	0	1	1
3090	387	"arg_2"	"decimal"	18	0	1	2
3091	388	"res_0"	"decimal"	18	0	0	0
3092	388	"arg_1"	"decimal"	18	0	1	1
3093	389	"res_0"	"decimal"	18	0	0	0
3094	389	"arg_1"	"decimal"	18	0	1	1
3095	389	"arg_2"	"int"	32	0	1	2
3096	390	"res_0"	"decimal"	18	0	0	0
3097	390	"arg_1"	"decimal"	18	0	1	1
3098	390	"arg_2"	"int"	32	0	1	2
3099	391	"res_0"	"decimal"	18	0	0	0
3100	391	"arg_1"	"decimal"	18	0	1	1
3101	392	"res_0"	"decimal"	18	0	0	0
3102	392	"arg_1"	"decimal"	18	0	1	1
3103	393	"res_0"	"tinyint"	8	0	0	0
3104	393	"arg_1"	"decimal"	18	0	1	1
3105	394	"res_0"	"decimal"	18	0	0	0
3106	394	"arg_1"	"decimal"	18	0	1	1
3107	394	"arg_2"	"bigint"	64	0	1	2
3108	395	"res_0"	"decimal"	18	0	0	0
3109	395	"arg_1"	"decimal"	18	0	1	1
3110	395	"arg_2"	"bigint"	64	0	1	2
3111	396	"res_0"	"month_interval"	32	0	0	0
3112	396	"arg_1"	"month_interval"	32	0	1	1
3113	396	"arg_2"	"decimal"	18	0	1	2
3114	397	"res_0"	"month_interval"	32	0	0	0
3115	397	"arg_1"	"month_interval"	32	0	1	1
3116	397	"arg_2"	"decimal"	18	0	1	2
3117	398	"res_0"	"month_interval"	32	0	0	0
3118	398	"arg_1"	"month_interval"	32	0	1	1
3119	398	"arg_2"	"decimal"	18	0	1	2
3120	399	"res_0"	"month_interval"	32	0	0	0
3121	399	"arg_1"	"month_interval"	32	0	1	1
3122	399	"arg_2"	"decimal"	18	0	1	2
3123	400	"res_0"	"sec_interval"	19	0	0	0
3124	400	"arg_1"	"sec_interval"	19	0	1	1
3125	400	"arg_2"	"decimal"	18	0	1	2
3126	401	"res_0"	"sec_interval"	19	0	0	0
3127	401	"arg_1"	"sec_interval"	19	0	1	1
3128	401	"arg_2"	"decimal"	18	0	1	2
3129	402	"res_0"	"sec_interval"	19	0	0	0
3130	402	"arg_1"	"sec_interval"	19	0	1	1
3131	402	"arg_2"	"decimal"	18	0	1	2
3132	403	"res_0"	"sec_interval"	19	0	0	0
3133	403	"arg_1"	"sec_interval"	19	0	1	1
3134	403	"arg_2"	"decimal"	18	0	1	2
3135	404	"res_0"	"decimal"	39	0	0	0
3136	404	"arg_1"	"decimal"	39	0	1	1
3137	404	"arg_2"	"decimal"	39	0	1	2
3138	405	"res_0"	"decimal"	39	0	0	0
3139	405	"arg_1"	"decimal"	39	0	1	1
3140	405	"arg_2"	"decimal"	39	0	1	2
3141	406	"res_0"	"decimal"	39	0	0	0
3142	406	"arg_1"	"decimal"	39	0	1	1
3143	406	"arg_2"	"decimal"	39	0	1	2
3144	407	"res_0"	"decimal"	39	0	0	0
3145	407	"arg_1"	"decimal"	39	0	1	1
3146	407	"arg_2"	"decimal"	39	0	1	2
3147	408	"res_0"	"decimal"	39	0	0	0
3148	408	"arg_1"	"decimal"	39	0	1	1
3149	408	"arg_2"	"decimal"	39	0	1	2
3150	409	"res_0"	"decimal"	39	0	0	0
3151	409	"arg_1"	"decimal"	39	0	1	1
3152	409	"arg_2"	"decimal"	39	0	1	2
3153	410	"res_0"	"decimal"	39	0	0	0
3154	410	"arg_1"	"decimal"	39	0	1	1
3155	410	"arg_2"	"decimal"	39	0	1	2
3156	411	"res_0"	"decimal"	39	0	0	0
3157	411	"arg_1"	"decimal"	39	0	1	1
3158	412	"res_0"	"decimal"	39	0	0	0
3159	412	"arg_1"	"decimal"	39	0	1	1
3160	412	"arg_2"	"int"	32	0	1	2
3161	413	"res_0"	"decimal"	39	0	0	0
3162	413	"arg_1"	"decimal"	39	0	1	1
3163	413	"arg_2"	"int"	32	0	1	2
3164	414	"res_0"	"decimal"	39	0	0	0
3165	414	"arg_1"	"decimal"	39	0	1	1
3166	415	"res_0"	"decimal"	39	0	0	0
3167	415	"arg_1"	"decimal"	39	0	1	1
3168	416	"res_0"	"tinyint"	8	0	0	0
3169	416	"arg_1"	"decimal"	39	0	1	1
3170	417	"res_0"	"decimal"	39	0	0	0
3171	417	"arg_1"	"decimal"	39	0	1	1
3172	417	"arg_2"	"hugeint"	128	0	1	2
3173	418	"res_0"	"decimal"	39	0	0	0
3174	418	"arg_1"	"decimal"	39	0	1	1
3175	418	"arg_2"	"hugeint"	128	0	1	2
3176	419	"res_0"	"month_interval"	32	0	0	0
3177	419	"arg_1"	"month_interval"	32	0	1	1
3178	419	"arg_2"	"decimal"	39	0	1	2
3179	420	"res_0"	"month_interval"	32	0	0	0
3180	420	"arg_1"	"month_interval"	32	0	1	1
3181	420	"arg_2"	"decimal"	39	0	1	2
3182	421	"res_0"	"month_interval"	32	0	0	0
3183	421	"arg_1"	"month_interval"	32	0	1	1
3184	421	"arg_2"	"decimal"	39	0	1	2
3185	422	"res_0"	"month_interval"	32	0	0	0
3186	422	"arg_1"	"month_interval"	32	0	1	1
3187	422	"arg_2"	"decimal"	39	0	1	2
3188	423	"res_0"	"sec_interval"	19	0	0	0
3189	423	"arg_1"	"sec_interval"	19	0	1	1
3190	423	"arg_2"	"decimal"	39	0	1	2
3191	424	"res_0"	"sec_interval"	19	0	0	0
3192	424	"arg_1"	"sec_interval"	19	0	1	1
3193	424	"arg_2"	"decimal"	39	0	1	2
3194	425	"res_0"	"sec_interval"	19	0	0	0
3195	425	"arg_1"	"sec_interval"	19	0	1	1
3196	425	"arg_2"	"decimal"	39	0	1	2
3197	426	"res_0"	"sec_interval"	19	0	0	0
3198	426	"arg_1"	"sec_interval"	19	0	1	1
3199	426	"arg_2"	"decimal"	39	0	1	2
3200	427	"res_0"	"real"	24	0	0	0
3201	427	"arg_1"	"real"	24	0	1	1
3202	427	"arg_2"	"real"	24	0	1	2
3203	428	"res_0"	"real"	24	0	0	0
3204	428	"arg_1"	"real"	24	0	1	1
3205	428	"arg_2"	"real"	24	0	1	2
3206	429	"res_0"	"real"	24	0	0	0
3207	429	"arg_1"	"real"	24	0	1	1
3208	429	"arg_2"	"real"	24	0	1	2
3209	430	"res_0"	"real"	24	0	0	0
3210	430	"arg_1"	"real"	24	0	1	1
3211	430	"arg_2"	"real"	24	0	1	2
3212	431	"res_0"	"real"	24	0	0	0
3213	431	"arg_1"	"real"	24	0	1	1
3214	432	"res_0"	"real"	24	0	0	0
3215	432	"arg_1"	"real"	24	0	1	1
3216	433	"res_0"	"tinyint"	8	0	0	0
3217	433	"arg_1"	"real"	24	0	1	1
3218	434	"res_0"	"real"	24	0	0	0
3219	434	"arg_1"	"real"	24	0	1	1
3220	434	"arg_2"	"real"	24	0	1	2
3221	435	"res_0"	"real"	24	0	0	0
3222	435	"arg_1"	"real"	24	0	1	1
3223	435	"arg_2"	"real"	24	0	1	2
3224	436	"res_0"	"month_interval"	32	0	0	0
3225	436	"arg_1"	"month_interval"	32	0	1	1
3226	436	"arg_2"	"real"	24	0	1	2
3227	437	"res_0"	"month_interval"	32	0	0	0
3228	437	"arg_1"	"month_interval"	32	0	1	1
3229	437	"arg_2"	"real"	24	0	1	2
3230	438	"res_0"	"month_interval"	32	0	0	0
3231	438	"arg_1"	"month_interval"	32	0	1	1
3232	438	"arg_2"	"real"	24	0	1	2
3233	439	"res_0"	"month_interval"	32	0	0	0
3234	439	"arg_1"	"month_interval"	32	0	1	1
3235	439	"arg_2"	"real"	24	0	1	2
3236	440	"res_0"	"sec_interval"	19	0	0	0
3237	440	"arg_1"	"sec_interval"	19	0	1	1
3238	440	"arg_2"	"real"	24	0	1	2
3239	441	"res_0"	"sec_interval"	19	0	0	0
3240	441	"arg_1"	"sec_interval"	19	0	1	1
3241	441	"arg_2"	"real"	24	0	1	2
3242	442	"res_0"	"sec_interval"	19	0	0	0
3243	442	"arg_1"	"sec_interval"	19	0	1	1
3244	442	"arg_2"	"real"	24	0	1	2
3245	443	"res_0"	"sec_interval"	19	0	0	0
3246	443	"arg_1"	"sec_interval"	19	0	1	1
3247	443	"arg_2"	"real"	24	0	1	2
3248	444	"res_0"	"double"	53	0	0	0
3249	444	"arg_1"	"double"	53	0	1	1
3250	444	"arg_2"	"double"	53	0	1	2
3251	445	"res_0"	"double"	53	0	0	0
3252	445	"arg_1"	"double"	53	0	1	1
3253	445	"arg_2"	"double"	53	0	1	2
3254	446	"res_0"	"double"	53	0	0	0
3255	446	"arg_1"	"double"	53	0	1	1
3256	446	"arg_2"	"double"	53	0	1	2
3257	447	"res_0"	"double"	53	0	0	0
3258	447	"arg_1"	"double"	53	0	1	1
3259	447	"arg_2"	"double"	53	0	1	2
3260	448	"res_0"	"double"	53	0	0	0
3261	448	"arg_1"	"double"	53	0	1	1
3262	449	"res_0"	"double"	53	0	0	0
3263	449	"arg_1"	"double"	53	0	1	1
3264	450	"res_0"	"tinyint"	8	0	0	0
3265	450	"arg_1"	"double"	53	0	1	1
3266	451	"res_0"	"double"	53	0	0	0
3267	451	"arg_1"	"double"	53	0	1	1
3268	451	"arg_2"	"double"	53	0	1	2
3269	452	"res_0"	"double"	53	0	0	0
3270	452	"arg_1"	"double"	53	0	1	1
3271	452	"arg_2"	"double"	53	0	1	2
3272	453	"res_0"	"month_interval"	32	0	0	0
3273	453	"arg_1"	"month_interval"	32	0	1	1
3274	453	"arg_2"	"double"	53	0	1	2
3275	454	"res_0"	"month_interval"	32	0	0	0
3276	454	"arg_1"	"month_interval"	32	0	1	1
3277	454	"arg_2"	"double"	53	0	1	2
3278	455	"res_0"	"month_interval"	32	0	0	0
3279	455	"arg_1"	"month_interval"	32	0	1	1
3280	455	"arg_2"	"double"	53	0	1	2
3281	456	"res_0"	"month_interval"	32	0	0	0
3282	456	"arg_1"	"month_interval"	32	0	1	1
3283	456	"arg_2"	"double"	53	0	1	2
3284	457	"res_0"	"sec_interval"	19	0	0	0
3285	457	"arg_1"	"sec_interval"	19	0	1	1
3286	457	"arg_2"	"double"	53	0	1	2
3287	458	"res_0"	"sec_interval"	19	0	0	0
3288	458	"arg_1"	"sec_interval"	19	0	1	1
3289	458	"arg_2"	"double"	53	0	1	2
3290	459	"res_0"	"sec_interval"	19	0	0	0
3291	459	"arg_1"	"sec_interval"	19	0	1	1
3292	459	"arg_2"	"double"	53	0	1	2
3293	460	"res_0"	"sec_interval"	19	0	0	0
3294	460	"arg_1"	"sec_interval"	19	0	1	1
3295	460	"arg_2"	"double"	53	0	1	2
3296	461	"res_0"	"month_interval"	32	0	0	0
3297	461	"arg_1"	"month_interval"	32	0	1	1
3298	461	"arg_2"	"month_interval"	32	0	1	2
3299	462	"res_0"	"month_interval"	32	0	0	0
3300	462	"arg_1"	"month_interval"	32	0	1	1
3301	462	"arg_2"	"month_interval"	32	0	1	2
3302	463	"res_0"	"month_interval"	32	0	0	0
3303	463	"arg_1"	"month_interval"	32	0	1	1
3304	463	"arg_2"	"month_interval"	32	0	1	2
3305	464	"res_0"	"month_interval"	32	0	0	0
3306	464	"arg_1"	"month_interval"	32	0	1	1
3307	464	"arg_2"	"month_interval"	32	0	1	2
3308	465	"res_0"	"month_interval"	32	0	0	0
3309	465	"arg_1"	"month_interval"	32	0	1	1
3310	466	"res_0"	"month_interval"	32	0	0	0
3311	466	"arg_1"	"month_interval"	32	0	1	1
3312	467	"res_0"	"tinyint"	8	0	0	0
3313	467	"arg_1"	"month_interval"	32	0	1	1
3314	468	"res_0"	"month_interval"	32	0	0	0
3315	468	"arg_1"	"month_interval"	32	0	1	1
3316	468	"arg_2"	"int"	32	0	1	2
3317	469	"res_0"	"month_interval"	32	0	0	0
3318	469	"arg_1"	"month_interval"	32	0	1	1
3319	469	"arg_2"	"int"	32	0	1	2
3320	470	"res_0"	"sec_interval"	19	0	0	0
3321	470	"arg_1"	"sec_interval"	19	0	1	1
3322	470	"arg_2"	"sec_interval"	19	0	1	2
3323	471	"res_0"	"sec_interval"	19	0	0	0
3324	471	"arg_1"	"sec_interval"	19	0	1	1
3325	471	"arg_2"	"sec_interval"	19	0	1	2
3326	472	"res_0"	"sec_interval"	19	0	0	0
3327	472	"arg_1"	"sec_interval"	19	0	1	1
3328	472	"arg_2"	"sec_interval"	19	0	1	2
3329	473	"res_0"	"sec_interval"	19	0	0	0
3330	473	"arg_1"	"sec_interval"	19	0	1	1
3331	473	"arg_2"	"sec_interval"	19	0	1	2
3332	474	"res_0"	"sec_interval"	19	0	0	0
3333	474	"arg_1"	"sec_interval"	19	0	1	1
3334	475	"res_0"	"sec_interval"	19	0	0	0
3335	475	"arg_1"	"sec_interval"	19	0	1	1
3336	476	"res_0"	"tinyint"	8	0	0	0
3337	476	"arg_1"	"sec_interval"	19	0	1	1
3338	477	"res_0"	"sec_interval"	19	0	0	0
3339	477	"arg_1"	"sec_interval"	19	0	1	1
3340	477	"arg_2"	"bigint"	64	0	1	2
3341	478	"res_0"	"sec_interval"	19	0	0	0
3342	478	"arg_1"	"sec_interval"	19	0	1	1
3343	478	"arg_2"	"bigint"	64	0	1	2
3344	479	"res_0"	"decimal"	4	0	0	0
3345	479	"arg_1"	"decimal"	4	0	1	1
3346	479	"arg_2"	"tinyint"	8	0	1	2
3347	480	"res_0"	"decimal"	4	0	0	0
3348	480	"arg_1"	"tinyint"	8	0	1	1
3349	480	"arg_2"	"decimal"	4	0	1	2
3350	481	"res_0"	"decimal"	4	0	0	0
3351	481	"arg_1"	"decimal"	4	0	1	1
3352	481	"arg_2"	"decimal"	2	0	1	2
3353	482	"res_0"	"decimal"	4	0	0	0
3354	482	"arg_1"	"decimal"	2	0	1	1
3355	482	"arg_2"	"decimal"	4	0	1	2
3356	483	"res_0"	"decimal"	9	0	0	0
3357	483	"arg_1"	"decimal"	9	0	1	1
3358	483	"arg_2"	"tinyint"	8	0	1	2
3359	484	"res_0"	"decimal"	9	0	0	0
3360	484	"arg_1"	"tinyint"	8	0	1	1
3361	484	"arg_2"	"decimal"	9	0	1	2
3362	485	"res_0"	"decimal"	9	0	0	0
3363	485	"arg_1"	"decimal"	9	0	1	1
3364	485	"arg_2"	"smallint"	16	0	1	2
3365	486	"res_0"	"decimal"	9	0	0	0
3366	486	"arg_1"	"smallint"	16	0	1	1
3367	486	"arg_2"	"decimal"	9	0	1	2
3368	487	"res_0"	"decimal"	9	0	0	0
3369	487	"arg_1"	"decimal"	9	0	1	1
3370	487	"arg_2"	"decimal"	2	0	1	2
3371	488	"res_0"	"decimal"	9	0	0	0
3372	488	"arg_1"	"decimal"	2	0	1	1
3373	488	"arg_2"	"decimal"	9	0	1	2
3374	489	"res_0"	"decimal"	9	0	0	0
3375	489	"arg_1"	"decimal"	9	0	1	1
3376	489	"arg_2"	"decimal"	4	0	1	2
3377	490	"res_0"	"decimal"	9	0	0	0
3378	490	"arg_1"	"decimal"	4	0	1	1
3379	490	"arg_2"	"decimal"	9	0	1	2
3380	491	"res_0"	"decimal"	18	0	0	0
3381	491	"arg_1"	"decimal"	18	0	1	1
3382	491	"arg_2"	"tinyint"	8	0	1	2
3383	492	"res_0"	"decimal"	18	0	0	0
3384	492	"arg_1"	"tinyint"	8	0	1	1
3385	492	"arg_2"	"decimal"	18	0	1	2
3386	493	"res_0"	"decimal"	18	0	0	0
3387	493	"arg_1"	"decimal"	18	0	1	1
3388	493	"arg_2"	"smallint"	16	0	1	2
3389	494	"res_0"	"decimal"	18	0	0	0
3390	494	"arg_1"	"smallint"	16	0	1	1
3391	494	"arg_2"	"decimal"	18	0	1	2
3392	495	"res_0"	"decimal"	18	0	0	0
3393	495	"arg_1"	"decimal"	18	0	1	1
3394	495	"arg_2"	"int"	32	0	1	2
3395	496	"res_0"	"decimal"	18	0	0	0
3396	496	"arg_1"	"int"	32	0	1	1
3397	496	"arg_2"	"decimal"	18	0	1	2
3398	497	"res_0"	"decimal"	18	0	0	0
3399	497	"arg_1"	"decimal"	18	0	1	1
3400	497	"arg_2"	"wrd"	64	0	1	2
3401	498	"res_0"	"decimal"	18	0	0	0
3402	498	"arg_1"	"wrd"	64	0	1	1
3403	498	"arg_2"	"decimal"	18	0	1	2
3404	499	"res_0"	"decimal"	18	0	0	0
3405	499	"arg_1"	"decimal"	18	0	1	1
3406	499	"arg_2"	"decimal"	2	0	1	2
3407	500	"res_0"	"decimal"	18	0	0	0
3408	500	"arg_1"	"decimal"	2	0	1	1
3409	500	"arg_2"	"decimal"	18	0	1	2
3410	501	"res_0"	"decimal"	18	0	0	0
3411	501	"arg_1"	"decimal"	18	0	1	1
3412	501	"arg_2"	"decimal"	4	0	1	2
3413	502	"res_0"	"decimal"	18	0	0	0
3414	502	"arg_1"	"decimal"	4	0	1	1
3415	502	"arg_2"	"decimal"	18	0	1	2
3416	503	"res_0"	"decimal"	18	0	0	0
3417	503	"arg_1"	"decimal"	18	0	1	1
3418	503	"arg_2"	"decimal"	9	0	1	2
3419	504	"res_0"	"decimal"	18	0	0	0
3420	504	"arg_1"	"decimal"	9	0	1	1
3421	504	"arg_2"	"decimal"	18	0	1	2
3422	505	"res_0"	"decimal"	39	0	0	0
3423	505	"arg_1"	"decimal"	39	0	1	1
3424	505	"arg_2"	"tinyint"	8	0	1	2
3425	506	"res_0"	"decimal"	39	0	0	0
3426	506	"arg_1"	"tinyint"	8	0	1	1
3427	506	"arg_2"	"decimal"	39	0	1	2
3428	507	"res_0"	"decimal"	39	0	0	0
3429	507	"arg_1"	"decimal"	39	0	1	1
3430	507	"arg_2"	"smallint"	16	0	1	2
3431	508	"res_0"	"decimal"	39	0	0	0
3432	508	"arg_1"	"smallint"	16	0	1	1
3433	508	"arg_2"	"decimal"	39	0	1	2
3434	509	"res_0"	"decimal"	39	0	0	0
3435	509	"arg_1"	"decimal"	39	0	1	1
3436	509	"arg_2"	"int"	32	0	1	2
3437	510	"res_0"	"decimal"	39	0	0	0
3438	510	"arg_1"	"int"	32	0	1	1
3439	510	"arg_2"	"decimal"	39	0	1	2
3440	511	"res_0"	"decimal"	39	0	0	0
3441	511	"arg_1"	"decimal"	39	0	1	1
3442	511	"arg_2"	"bigint"	64	0	1	2
3443	512	"res_0"	"decimal"	39	0	0	0
3444	512	"arg_1"	"bigint"	64	0	1	1
3445	512	"arg_2"	"decimal"	39	0	1	2
3446	513	"res_0"	"decimal"	39	0	0	0
3447	513	"arg_1"	"decimal"	39	0	1	1
3448	513	"arg_2"	"wrd"	64	0	1	2
3449	514	"res_0"	"decimal"	39	0	0	0
3450	514	"arg_1"	"wrd"	64	0	1	1
3451	514	"arg_2"	"decimal"	39	0	1	2
3452	515	"res_0"	"decimal"	39	0	0	0
3453	515	"arg_1"	"decimal"	39	0	1	1
3454	515	"arg_2"	"decimal"	2	0	1	2
3455	516	"res_0"	"decimal"	39	0	0	0
3456	516	"arg_1"	"decimal"	2	0	1	1
3457	516	"arg_2"	"decimal"	39	0	1	2
3458	517	"res_0"	"decimal"	39	0	0	0
3459	517	"arg_1"	"decimal"	39	0	1	1
3460	517	"arg_2"	"decimal"	4	0	1	2
3461	518	"res_0"	"decimal"	39	0	0	0
3462	518	"arg_1"	"decimal"	4	0	1	1
3463	518	"arg_2"	"decimal"	39	0	1	2
3464	519	"res_0"	"decimal"	39	0	0	0
3465	519	"arg_1"	"decimal"	39	0	1	1
3466	519	"arg_2"	"decimal"	9	0	1	2
3467	520	"res_0"	"decimal"	39	0	0	0
3468	520	"arg_1"	"decimal"	9	0	1	1
3469	520	"arg_2"	"decimal"	39	0	1	2
3470	521	"res_0"	"decimal"	39	0	0	0
3471	521	"arg_1"	"decimal"	39	0	1	1
3472	521	"arg_2"	"decimal"	18	0	1	2
3473	522	"res_0"	"decimal"	39	0	0	0
3474	522	"arg_1"	"decimal"	18	0	1	1
3475	522	"arg_2"	"decimal"	39	0	1	2
3476	523	"res_0"	"decimal"	2	0	0	0
3477	523	"arg_1"	"decimal"	2	0	1	1
3478	523	"arg_2"	"tinyint"	8	0	1	2
3479	524	"res_0"	"decimal"	4	0	0	0
3480	524	"arg_1"	"decimal"	4	0	1	1
3481	524	"arg_2"	"tinyint"	8	0	1	2
3482	525	"res_0"	"decimal"	9	0	0	0
3483	525	"arg_1"	"decimal"	9	0	1	1
3484	525	"arg_2"	"tinyint"	8	0	1	2
3485	526	"res_0"	"decimal"	18	0	0	0
3486	526	"arg_1"	"decimal"	18	0	1	1
3487	526	"arg_2"	"tinyint"	8	0	1	2
3488	527	"res_0"	"decimal"	39	0	0	0
3489	527	"arg_1"	"decimal"	39	0	1	1
3490	527	"arg_2"	"tinyint"	8	0	1	2
3491	528	"res_0"	"real"	24	0	0	0
3492	528	"arg_1"	"real"	24	0	1	1
3493	528	"arg_2"	"tinyint"	8	0	1	2
3494	529	"res_0"	"double"	53	0	0	0
3495	529	"arg_1"	"double"	53	0	1	1
3496	529	"arg_2"	"tinyint"	8	0	1	2
3497	530	"res_0"	"oid"	63	0	0	0
3498	530	"arg_1"	"oid"	63	0	1	1
3499	530	"arg_2"	"oid"	63	0	1	2
3500	531	"res_0"	"oid"	63	0	0	0
3501	531	"arg_1"	"tinyint"	8	0	1	1
3502	531	"arg_2"	"oid"	63	0	1	2
3503	532	"res_0"	"oid"	63	0	0	0
3504	532	"arg_1"	"smallint"	16	0	1	1
3505	532	"arg_2"	"oid"	63	0	1	2
3506	533	"res_0"	"oid"	63	0	0	0
3507	533	"arg_1"	"int"	32	0	1	1
3508	533	"arg_2"	"oid"	63	0	1	2
3509	534	"res_0"	"oid"	63	0	0	0
3510	534	"arg_1"	"bigint"	64	0	1	1
3511	534	"arg_2"	"oid"	63	0	1	2
3512	535	"res_0"	"oid"	63	0	0	0
3513	535	"arg_1"	"wrd"	64	0	1	1
3514	535	"arg_2"	"oid"	63	0	1	2
3515	536	"res_0"	"oid"	63	0	0	0
3516	536	"arg_1"	"hugeint"	128	0	1	1
3517	536	"arg_2"	"oid"	63	0	1	2
3518	537	"res_0"	"oid"	63	0	0	0
3519	537	"arg_1"	"decimal"	2	0	1	1
3520	537	"arg_2"	"oid"	63	0	1	2
3521	538	"res_0"	"oid"	63	0	0	0
3522	538	"arg_1"	"decimal"	4	0	1	1
3523	538	"arg_2"	"oid"	63	0	1	2
3524	539	"res_0"	"oid"	63	0	0	0
3525	539	"arg_1"	"decimal"	9	0	1	1
3526	539	"arg_2"	"oid"	63	0	1	2
3527	540	"res_0"	"oid"	63	0	0	0
3528	540	"arg_1"	"decimal"	18	0	1	1
3529	540	"arg_2"	"oid"	63	0	1	2
3530	541	"res_0"	"oid"	63	0	0	0
3531	541	"arg_1"	"decimal"	39	0	1	1
3532	541	"arg_2"	"oid"	63	0	1	2
3533	542	"res_0"	"oid"	63	0	0	0
3534	542	"arg_1"	"real"	24	0	1	1
3535	542	"arg_2"	"oid"	63	0	1	2
3536	543	"res_0"	"oid"	63	0	0	0
3537	543	"arg_1"	"double"	53	0	1	1
3538	543	"arg_2"	"oid"	63	0	1	2
3539	544	"res_0"	"oid"	63	0	0	0
3540	544	"arg_1"	"month_interval"	32	0	1	1
3541	544	"arg_2"	"oid"	63	0	1	2
3542	545	"res_0"	"oid"	63	0	0	0
3543	545	"arg_1"	"sec_interval"	19	0	1	1
3544	545	"arg_2"	"oid"	63	0	1	2
3545	546	"res_0"	"oid"	63	0	0	0
3546	546	"arg_1"	"time"	7	0	1	1
3547	546	"arg_2"	"oid"	63	0	1	2
3548	547	"res_0"	"oid"	63	0	0	0
3549	547	"arg_1"	"timetz"	7	0	1	1
3550	547	"arg_2"	"oid"	63	0	1	2
3551	548	"res_0"	"oid"	63	0	0	0
3552	548	"arg_1"	"date"	0	0	1	1
3553	548	"arg_2"	"oid"	63	0	1	2
3554	549	"res_0"	"oid"	63	0	0	0
3555	549	"arg_1"	"timestamp"	7	0	1	1
3556	549	"arg_2"	"oid"	63	0	1	2
3557	550	"res_0"	"oid"	63	0	0	0
3558	550	"arg_1"	"timestamptz"	7	0	1	1
3559	550	"arg_2"	"oid"	63	0	1	2
3560	551	"res_0"	"oid"	63	0	0	0
3561	551	"arg_1"	"blob"	0	0	1	1
3562	551	"arg_2"	"oid"	63	0	1	2
3563	552	"res_0"	"oid"	63	0	0	0
3564	552	"arg_1"	"geometry"	0	0	1	1
3565	552	"arg_2"	"oid"	63	0	1	2
3566	553	"res_0"	"oid"	63	0	0	0
3567	553	"arg_1"	"geometrya"	0	0	1	1
3568	553	"arg_2"	"oid"	63	0	1	2
3569	554	"res_0"	"oid"	63	0	0	0
3570	554	"arg_1"	"mbr"	0	0	1	1
3571	554	"arg_2"	"oid"	63	0	1	2
3572	555	"res_0"	"tinyint"	8	0	0	0
3573	555	"arg_1"	"oid"	63	0	1	1
3574	555	"arg_2"	"tinyint"	8	0	1	2
3575	556	"res_0"	"tinyint"	8	0	0	0
3576	556	"arg_1"	"tinyint"	8	0	1	1
3577	556	"arg_2"	"tinyint"	8	0	1	2
3578	557	"res_0"	"tinyint"	8	0	0	0
3579	557	"arg_1"	"smallint"	16	0	1	1
3580	557	"arg_2"	"tinyint"	8	0	1	2
3581	558	"res_0"	"tinyint"	8	0	0	0
3582	558	"arg_1"	"int"	32	0	1	1
3583	558	"arg_2"	"tinyint"	8	0	1	2
3584	559	"res_0"	"tinyint"	8	0	0	0
3585	559	"arg_1"	"bigint"	64	0	1	1
3586	559	"arg_2"	"tinyint"	8	0	1	2
3587	560	"res_0"	"tinyint"	8	0	0	0
3588	560	"arg_1"	"wrd"	64	0	1	1
3589	560	"arg_2"	"tinyint"	8	0	1	2
3590	561	"res_0"	"tinyint"	8	0	0	0
3591	561	"arg_1"	"hugeint"	128	0	1	1
3592	561	"arg_2"	"tinyint"	8	0	1	2
3593	562	"res_0"	"tinyint"	8	0	0	0
3594	562	"arg_1"	"decimal"	2	0	1	1
3595	562	"arg_2"	"tinyint"	8	0	1	2
3596	563	"res_0"	"tinyint"	8	0	0	0
3597	563	"arg_1"	"decimal"	4	0	1	1
3598	563	"arg_2"	"tinyint"	8	0	1	2
3599	564	"res_0"	"tinyint"	8	0	0	0
3600	564	"arg_1"	"decimal"	9	0	1	1
3601	564	"arg_2"	"tinyint"	8	0	1	2
3602	565	"res_0"	"tinyint"	8	0	0	0
3603	565	"arg_1"	"decimal"	18	0	1	1
3604	565	"arg_2"	"tinyint"	8	0	1	2
3605	566	"res_0"	"tinyint"	8	0	0	0
3606	566	"arg_1"	"decimal"	39	0	1	1
3607	566	"arg_2"	"tinyint"	8	0	1	2
3608	567	"res_0"	"tinyint"	8	0	0	0
3609	567	"arg_1"	"real"	24	0	1	1
3610	567	"arg_2"	"tinyint"	8	0	1	2
3611	568	"res_0"	"tinyint"	8	0	0	0
3612	568	"arg_1"	"double"	53	0	1	1
3613	568	"arg_2"	"tinyint"	8	0	1	2
3614	569	"res_0"	"tinyint"	8	0	0	0
3615	569	"arg_1"	"month_interval"	32	0	1	1
3616	569	"arg_2"	"tinyint"	8	0	1	2
3617	570	"res_0"	"tinyint"	8	0	0	0
3618	570	"arg_1"	"sec_interval"	19	0	1	1
3619	570	"arg_2"	"tinyint"	8	0	1	2
3620	571	"res_0"	"tinyint"	8	0	0	0
3621	571	"arg_1"	"time"	7	0	1	1
3622	571	"arg_2"	"tinyint"	8	0	1	2
3623	572	"res_0"	"tinyint"	8	0	0	0
3624	572	"arg_1"	"timetz"	7	0	1	1
3625	572	"arg_2"	"tinyint"	8	0	1	2
3626	573	"res_0"	"tinyint"	8	0	0	0
3627	573	"arg_1"	"date"	0	0	1	1
3628	573	"arg_2"	"tinyint"	8	0	1	2
3629	574	"res_0"	"tinyint"	8	0	0	0
3630	574	"arg_1"	"timestamp"	7	0	1	1
3631	574	"arg_2"	"tinyint"	8	0	1	2
3632	575	"res_0"	"tinyint"	8	0	0	0
3633	575	"arg_1"	"timestamptz"	7	0	1	1
3634	575	"arg_2"	"tinyint"	8	0	1	2
3635	576	"res_0"	"tinyint"	8	0	0	0
3636	576	"arg_1"	"blob"	0	0	1	1
3637	576	"arg_2"	"tinyint"	8	0	1	2
3638	577	"res_0"	"tinyint"	8	0	0	0
3639	577	"arg_1"	"geometry"	0	0	1	1
3640	577	"arg_2"	"tinyint"	8	0	1	2
3641	578	"res_0"	"tinyint"	8	0	0	0
3642	578	"arg_1"	"geometrya"	0	0	1	1
3643	578	"arg_2"	"tinyint"	8	0	1	2
3644	579	"res_0"	"tinyint"	8	0	0	0
3645	579	"arg_1"	"mbr"	0	0	1	1
3646	579	"arg_2"	"tinyint"	8	0	1	2
3647	580	"res_0"	"smallint"	16	0	0	0
3648	580	"arg_1"	"oid"	63	0	1	1
3649	580	"arg_2"	"smallint"	16	0	1	2
3650	581	"res_0"	"smallint"	16	0	0	0
3651	581	"arg_1"	"tinyint"	8	0	1	1
3652	581	"arg_2"	"smallint"	16	0	1	2
3653	582	"res_0"	"smallint"	16	0	0	0
3654	582	"arg_1"	"smallint"	16	0	1	1
3655	582	"arg_2"	"smallint"	16	0	1	2
3656	583	"res_0"	"smallint"	16	0	0	0
3657	583	"arg_1"	"int"	32	0	1	1
3658	583	"arg_2"	"smallint"	16	0	1	2
3659	584	"res_0"	"smallint"	16	0	0	0
3660	584	"arg_1"	"bigint"	64	0	1	1
3661	584	"arg_2"	"smallint"	16	0	1	2
3662	585	"res_0"	"smallint"	16	0	0	0
3663	585	"arg_1"	"wrd"	64	0	1	1
3664	585	"arg_2"	"smallint"	16	0	1	2
3665	586	"res_0"	"smallint"	16	0	0	0
3666	586	"arg_1"	"hugeint"	128	0	1	1
3667	586	"arg_2"	"smallint"	16	0	1	2
3668	587	"res_0"	"smallint"	16	0	0	0
3669	587	"arg_1"	"decimal"	2	0	1	1
3670	587	"arg_2"	"smallint"	16	0	1	2
3671	588	"res_0"	"smallint"	16	0	0	0
3672	588	"arg_1"	"decimal"	4	0	1	1
3673	588	"arg_2"	"smallint"	16	0	1	2
3674	589	"res_0"	"smallint"	16	0	0	0
3675	589	"arg_1"	"decimal"	9	0	1	1
3676	589	"arg_2"	"smallint"	16	0	1	2
3677	590	"res_0"	"smallint"	16	0	0	0
3678	590	"arg_1"	"decimal"	18	0	1	1
3679	590	"arg_2"	"smallint"	16	0	1	2
3680	591	"res_0"	"smallint"	16	0	0	0
3681	591	"arg_1"	"decimal"	39	0	1	1
3682	591	"arg_2"	"smallint"	16	0	1	2
3683	592	"res_0"	"smallint"	16	0	0	0
3684	592	"arg_1"	"real"	24	0	1	1
3685	592	"arg_2"	"smallint"	16	0	1	2
3686	593	"res_0"	"smallint"	16	0	0	0
3687	593	"arg_1"	"double"	53	0	1	1
3688	593	"arg_2"	"smallint"	16	0	1	2
3689	594	"res_0"	"smallint"	16	0	0	0
3690	594	"arg_1"	"month_interval"	32	0	1	1
3691	594	"arg_2"	"smallint"	16	0	1	2
3692	595	"res_0"	"smallint"	16	0	0	0
3693	595	"arg_1"	"sec_interval"	19	0	1	1
3694	595	"arg_2"	"smallint"	16	0	1	2
3695	596	"res_0"	"smallint"	16	0	0	0
3696	596	"arg_1"	"time"	7	0	1	1
3697	596	"arg_2"	"smallint"	16	0	1	2
3698	597	"res_0"	"smallint"	16	0	0	0
3699	597	"arg_1"	"timetz"	7	0	1	1
3700	597	"arg_2"	"smallint"	16	0	1	2
3701	598	"res_0"	"smallint"	16	0	0	0
3702	598	"arg_1"	"date"	0	0	1	1
3703	598	"arg_2"	"smallint"	16	0	1	2
3704	599	"res_0"	"smallint"	16	0	0	0
3705	599	"arg_1"	"timestamp"	7	0	1	1
3706	599	"arg_2"	"smallint"	16	0	1	2
3707	600	"res_0"	"smallint"	16	0	0	0
3708	600	"arg_1"	"timestamptz"	7	0	1	1
3709	600	"arg_2"	"smallint"	16	0	1	2
3710	601	"res_0"	"smallint"	16	0	0	0
3711	601	"arg_1"	"blob"	0	0	1	1
3712	601	"arg_2"	"smallint"	16	0	1	2
3713	602	"res_0"	"smallint"	16	0	0	0
3714	602	"arg_1"	"geometry"	0	0	1	1
3715	602	"arg_2"	"smallint"	16	0	1	2
3716	603	"res_0"	"smallint"	16	0	0	0
3717	603	"arg_1"	"geometrya"	0	0	1	1
3718	603	"arg_2"	"smallint"	16	0	1	2
3719	604	"res_0"	"smallint"	16	0	0	0
3720	604	"arg_1"	"mbr"	0	0	1	1
3721	604	"arg_2"	"smallint"	16	0	1	2
3722	605	"res_0"	"int"	32	0	0	0
3723	605	"arg_1"	"oid"	63	0	1	1
3724	605	"arg_2"	"int"	32	0	1	2
3725	606	"res_0"	"int"	32	0	0	0
3726	606	"arg_1"	"tinyint"	8	0	1	1
3727	606	"arg_2"	"int"	32	0	1	2
3728	607	"res_0"	"int"	32	0	0	0
3729	607	"arg_1"	"smallint"	16	0	1	1
3730	607	"arg_2"	"int"	32	0	1	2
3731	608	"res_0"	"int"	32	0	0	0
3732	608	"arg_1"	"int"	32	0	1	1
3733	608	"arg_2"	"int"	32	0	1	2
3734	609	"res_0"	"int"	32	0	0	0
3735	609	"arg_1"	"bigint"	64	0	1	1
3736	609	"arg_2"	"int"	32	0	1	2
3737	610	"res_0"	"int"	32	0	0	0
3738	610	"arg_1"	"wrd"	64	0	1	1
3739	610	"arg_2"	"int"	32	0	1	2
3740	611	"res_0"	"int"	32	0	0	0
3741	611	"arg_1"	"hugeint"	128	0	1	1
3742	611	"arg_2"	"int"	32	0	1	2
3743	612	"res_0"	"int"	32	0	0	0
3744	612	"arg_1"	"decimal"	2	0	1	1
3745	612	"arg_2"	"int"	32	0	1	2
3746	613	"res_0"	"int"	32	0	0	0
3747	613	"arg_1"	"decimal"	4	0	1	1
3748	613	"arg_2"	"int"	32	0	1	2
3749	614	"res_0"	"int"	32	0	0	0
3750	614	"arg_1"	"decimal"	9	0	1	1
3751	614	"arg_2"	"int"	32	0	1	2
3752	615	"res_0"	"int"	32	0	0	0
3753	615	"arg_1"	"decimal"	18	0	1	1
3754	615	"arg_2"	"int"	32	0	1	2
3755	616	"res_0"	"int"	32	0	0	0
3756	616	"arg_1"	"decimal"	39	0	1	1
3757	616	"arg_2"	"int"	32	0	1	2
3758	617	"res_0"	"int"	32	0	0	0
3759	617	"arg_1"	"real"	24	0	1	1
3760	617	"arg_2"	"int"	32	0	1	2
3761	618	"res_0"	"int"	32	0	0	0
3762	618	"arg_1"	"double"	53	0	1	1
3763	618	"arg_2"	"int"	32	0	1	2
3764	619	"res_0"	"int"	32	0	0	0
3765	619	"arg_1"	"month_interval"	32	0	1	1
3766	619	"arg_2"	"int"	32	0	1	2
3767	620	"res_0"	"int"	32	0	0	0
3768	620	"arg_1"	"sec_interval"	19	0	1	1
3769	620	"arg_2"	"int"	32	0	1	2
3770	621	"res_0"	"int"	32	0	0	0
3771	621	"arg_1"	"time"	7	0	1	1
3772	621	"arg_2"	"int"	32	0	1	2
3773	622	"res_0"	"int"	32	0	0	0
3774	622	"arg_1"	"timetz"	7	0	1	1
3775	622	"arg_2"	"int"	32	0	1	2
3776	623	"res_0"	"int"	32	0	0	0
3777	623	"arg_1"	"date"	0	0	1	1
3778	623	"arg_2"	"int"	32	0	1	2
3779	624	"res_0"	"int"	32	0	0	0
3780	624	"arg_1"	"timestamp"	7	0	1	1
3781	624	"arg_2"	"int"	32	0	1	2
3782	625	"res_0"	"int"	32	0	0	0
3783	625	"arg_1"	"timestamptz"	7	0	1	1
3784	625	"arg_2"	"int"	32	0	1	2
3785	626	"res_0"	"int"	32	0	0	0
3786	626	"arg_1"	"blob"	0	0	1	1
3787	626	"arg_2"	"int"	32	0	1	2
3788	627	"res_0"	"int"	32	0	0	0
3789	627	"arg_1"	"geometry"	0	0	1	1
3790	627	"arg_2"	"int"	32	0	1	2
3791	628	"res_0"	"int"	32	0	0	0
3792	628	"arg_1"	"geometrya"	0	0	1	1
3793	628	"arg_2"	"int"	32	0	1	2
3794	629	"res_0"	"int"	32	0	0	0
3795	629	"arg_1"	"mbr"	0	0	1	1
3796	629	"arg_2"	"int"	32	0	1	2
3797	630	"res_0"	"bigint"	64	0	0	0
3798	630	"arg_1"	"oid"	63	0	1	1
3799	630	"arg_2"	"bigint"	64	0	1	2
3800	631	"res_0"	"bigint"	64	0	0	0
3801	631	"arg_1"	"tinyint"	8	0	1	1
3802	631	"arg_2"	"bigint"	64	0	1	2
3803	632	"res_0"	"bigint"	64	0	0	0
3804	632	"arg_1"	"smallint"	16	0	1	1
3805	632	"arg_2"	"bigint"	64	0	1	2
3806	633	"res_0"	"bigint"	64	0	0	0
3807	633	"arg_1"	"int"	32	0	1	1
3808	633	"arg_2"	"bigint"	64	0	1	2
3809	634	"res_0"	"bigint"	64	0	0	0
3810	634	"arg_1"	"bigint"	64	0	1	1
3811	634	"arg_2"	"bigint"	64	0	1	2
3812	635	"res_0"	"bigint"	64	0	0	0
3813	635	"arg_1"	"wrd"	64	0	1	1
3814	635	"arg_2"	"bigint"	64	0	1	2
3815	636	"res_0"	"bigint"	64	0	0	0
3816	636	"arg_1"	"hugeint"	128	0	1	1
3817	636	"arg_2"	"bigint"	64	0	1	2
3818	637	"res_0"	"bigint"	64	0	0	0
3819	637	"arg_1"	"decimal"	2	0	1	1
3820	637	"arg_2"	"bigint"	64	0	1	2
3821	638	"res_0"	"bigint"	64	0	0	0
3822	638	"arg_1"	"decimal"	4	0	1	1
3823	638	"arg_2"	"bigint"	64	0	1	2
3824	639	"res_0"	"bigint"	64	0	0	0
3825	639	"arg_1"	"decimal"	9	0	1	1
3826	639	"arg_2"	"bigint"	64	0	1	2
3827	640	"res_0"	"bigint"	64	0	0	0
3828	640	"arg_1"	"decimal"	18	0	1	1
3829	640	"arg_2"	"bigint"	64	0	1	2
3830	641	"res_0"	"bigint"	64	0	0	0
3831	641	"arg_1"	"decimal"	39	0	1	1
3832	641	"arg_2"	"bigint"	64	0	1	2
3833	642	"res_0"	"bigint"	64	0	0	0
3834	642	"arg_1"	"real"	24	0	1	1
3835	642	"arg_2"	"bigint"	64	0	1	2
3836	643	"res_0"	"bigint"	64	0	0	0
3837	643	"arg_1"	"double"	53	0	1	1
3838	643	"arg_2"	"bigint"	64	0	1	2
3839	644	"res_0"	"bigint"	64	0	0	0
3840	644	"arg_1"	"month_interval"	32	0	1	1
3841	644	"arg_2"	"bigint"	64	0	1	2
3842	645	"res_0"	"bigint"	64	0	0	0
3843	645	"arg_1"	"sec_interval"	19	0	1	1
3844	645	"arg_2"	"bigint"	64	0	1	2
3845	646	"res_0"	"bigint"	64	0	0	0
3846	646	"arg_1"	"time"	7	0	1	1
3847	646	"arg_2"	"bigint"	64	0	1	2
3848	647	"res_0"	"bigint"	64	0	0	0
3849	647	"arg_1"	"timetz"	7	0	1	1
3850	647	"arg_2"	"bigint"	64	0	1	2
3851	648	"res_0"	"bigint"	64	0	0	0
3852	648	"arg_1"	"date"	0	0	1	1
3853	648	"arg_2"	"bigint"	64	0	1	2
3854	649	"res_0"	"bigint"	64	0	0	0
3855	649	"arg_1"	"timestamp"	7	0	1	1
3856	649	"arg_2"	"bigint"	64	0	1	2
3857	650	"res_0"	"bigint"	64	0	0	0
3858	650	"arg_1"	"timestamptz"	7	0	1	1
3859	650	"arg_2"	"bigint"	64	0	1	2
3860	651	"res_0"	"bigint"	64	0	0	0
3861	651	"arg_1"	"blob"	0	0	1	1
3862	651	"arg_2"	"bigint"	64	0	1	2
3863	652	"res_0"	"bigint"	64	0	0	0
3864	652	"arg_1"	"geometry"	0	0	1	1
3865	652	"arg_2"	"bigint"	64	0	1	2
3866	653	"res_0"	"bigint"	64	0	0	0
3867	653	"arg_1"	"geometrya"	0	0	1	1
3868	653	"arg_2"	"bigint"	64	0	1	2
3869	654	"res_0"	"bigint"	64	0	0	0
3870	654	"arg_1"	"mbr"	0	0	1	1
3871	654	"arg_2"	"bigint"	64	0	1	2
3872	655	"res_0"	"wrd"	64	0	0	0
3873	655	"arg_1"	"oid"	63	0	1	1
3874	655	"arg_2"	"wrd"	64	0	1	2
3875	656	"res_0"	"wrd"	64	0	0	0
3876	656	"arg_1"	"tinyint"	8	0	1	1
3877	656	"arg_2"	"wrd"	64	0	1	2
3878	657	"res_0"	"wrd"	64	0	0	0
3879	657	"arg_1"	"smallint"	16	0	1	1
3880	657	"arg_2"	"wrd"	64	0	1	2
3881	658	"res_0"	"wrd"	64	0	0	0
3882	658	"arg_1"	"int"	32	0	1	1
3883	658	"arg_2"	"wrd"	64	0	1	2
3884	659	"res_0"	"wrd"	64	0	0	0
3885	659	"arg_1"	"bigint"	64	0	1	1
3886	659	"arg_2"	"wrd"	64	0	1	2
3887	660	"res_0"	"wrd"	64	0	0	0
3888	660	"arg_1"	"wrd"	64	0	1	1
3889	660	"arg_2"	"wrd"	64	0	1	2
3890	661	"res_0"	"wrd"	64	0	0	0
3891	661	"arg_1"	"hugeint"	128	0	1	1
3892	661	"arg_2"	"wrd"	64	0	1	2
3893	662	"res_0"	"wrd"	64	0	0	0
3894	662	"arg_1"	"decimal"	2	0	1	1
3895	662	"arg_2"	"wrd"	64	0	1	2
3896	663	"res_0"	"wrd"	64	0	0	0
3897	663	"arg_1"	"decimal"	4	0	1	1
3898	663	"arg_2"	"wrd"	64	0	1	2
3899	664	"res_0"	"wrd"	64	0	0	0
3900	664	"arg_1"	"decimal"	9	0	1	1
3901	664	"arg_2"	"wrd"	64	0	1	2
3902	665	"res_0"	"wrd"	64	0	0	0
3903	665	"arg_1"	"decimal"	18	0	1	1
3904	665	"arg_2"	"wrd"	64	0	1	2
3905	666	"res_0"	"wrd"	64	0	0	0
3906	666	"arg_1"	"decimal"	39	0	1	1
3907	666	"arg_2"	"wrd"	64	0	1	2
3908	667	"res_0"	"wrd"	64	0	0	0
3909	667	"arg_1"	"real"	24	0	1	1
3910	667	"arg_2"	"wrd"	64	0	1	2
3911	668	"res_0"	"wrd"	64	0	0	0
3912	668	"arg_1"	"double"	53	0	1	1
3913	668	"arg_2"	"wrd"	64	0	1	2
3914	669	"res_0"	"wrd"	64	0	0	0
3915	669	"arg_1"	"month_interval"	32	0	1	1
3916	669	"arg_2"	"wrd"	64	0	1	2
3917	670	"res_0"	"wrd"	64	0	0	0
3918	670	"arg_1"	"sec_interval"	19	0	1	1
3919	670	"arg_2"	"wrd"	64	0	1	2
3920	671	"res_0"	"wrd"	64	0	0	0
3921	671	"arg_1"	"time"	7	0	1	1
3922	671	"arg_2"	"wrd"	64	0	1	2
3923	672	"res_0"	"wrd"	64	0	0	0
3924	672	"arg_1"	"timetz"	7	0	1	1
3925	672	"arg_2"	"wrd"	64	0	1	2
3926	673	"res_0"	"wrd"	64	0	0	0
3927	673	"arg_1"	"date"	0	0	1	1
3928	673	"arg_2"	"wrd"	64	0	1	2
3929	674	"res_0"	"wrd"	64	0	0	0
3930	674	"arg_1"	"timestamp"	7	0	1	1
3931	674	"arg_2"	"wrd"	64	0	1	2
3932	675	"res_0"	"wrd"	64	0	0	0
3933	675	"arg_1"	"timestamptz"	7	0	1	1
3934	675	"arg_2"	"wrd"	64	0	1	2
3935	676	"res_0"	"wrd"	64	0	0	0
3936	676	"arg_1"	"blob"	0	0	1	1
3937	676	"arg_2"	"wrd"	64	0	1	2
3938	677	"res_0"	"wrd"	64	0	0	0
3939	677	"arg_1"	"geometry"	0	0	1	1
3940	677	"arg_2"	"wrd"	64	0	1	2
3941	678	"res_0"	"wrd"	64	0	0	0
3942	678	"arg_1"	"geometrya"	0	0	1	1
3943	678	"arg_2"	"wrd"	64	0	1	2
3944	679	"res_0"	"wrd"	64	0	0	0
3945	679	"arg_1"	"mbr"	0	0	1	1
3946	679	"arg_2"	"wrd"	64	0	1	2
3947	680	"res_0"	"hugeint"	128	0	0	0
3948	680	"arg_1"	"oid"	63	0	1	1
3949	680	"arg_2"	"hugeint"	128	0	1	2
3950	681	"res_0"	"hugeint"	128	0	0	0
3951	681	"arg_1"	"tinyint"	8	0	1	1
3952	681	"arg_2"	"hugeint"	128	0	1	2
3953	682	"res_0"	"hugeint"	128	0	0	0
3954	682	"arg_1"	"smallint"	16	0	1	1
3955	682	"arg_2"	"hugeint"	128	0	1	2
3956	683	"res_0"	"hugeint"	128	0	0	0
3957	683	"arg_1"	"int"	32	0	1	1
3958	683	"arg_2"	"hugeint"	128	0	1	2
3959	684	"res_0"	"hugeint"	128	0	0	0
3960	684	"arg_1"	"bigint"	64	0	1	1
3961	684	"arg_2"	"hugeint"	128	0	1	2
3962	685	"res_0"	"hugeint"	128	0	0	0
3963	685	"arg_1"	"wrd"	64	0	1	1
3964	685	"arg_2"	"hugeint"	128	0	1	2
3965	686	"res_0"	"hugeint"	128	0	0	0
3966	686	"arg_1"	"hugeint"	128	0	1	1
3967	686	"arg_2"	"hugeint"	128	0	1	2
3968	687	"res_0"	"hugeint"	128	0	0	0
3969	687	"arg_1"	"decimal"	2	0	1	1
3970	687	"arg_2"	"hugeint"	128	0	1	2
3971	688	"res_0"	"hugeint"	128	0	0	0
3972	688	"arg_1"	"decimal"	4	0	1	1
3973	688	"arg_2"	"hugeint"	128	0	1	2
3974	689	"res_0"	"hugeint"	128	0	0	0
3975	689	"arg_1"	"decimal"	9	0	1	1
3976	689	"arg_2"	"hugeint"	128	0	1	2
3977	690	"res_0"	"hugeint"	128	0	0	0
3978	690	"arg_1"	"decimal"	18	0	1	1
3979	690	"arg_2"	"hugeint"	128	0	1	2
3980	691	"res_0"	"hugeint"	128	0	0	0
3981	691	"arg_1"	"decimal"	39	0	1	1
3982	691	"arg_2"	"hugeint"	128	0	1	2
3983	692	"res_0"	"hugeint"	128	0	0	0
3984	692	"arg_1"	"real"	24	0	1	1
3985	692	"arg_2"	"hugeint"	128	0	1	2
3986	693	"res_0"	"hugeint"	128	0	0	0
3987	693	"arg_1"	"double"	53	0	1	1
3988	693	"arg_2"	"hugeint"	128	0	1	2
3989	694	"res_0"	"hugeint"	128	0	0	0
3990	694	"arg_1"	"month_interval"	32	0	1	1
3991	694	"arg_2"	"hugeint"	128	0	1	2
3992	695	"res_0"	"hugeint"	128	0	0	0
3993	695	"arg_1"	"sec_interval"	19	0	1	1
3994	695	"arg_2"	"hugeint"	128	0	1	2
3995	696	"res_0"	"hugeint"	128	0	0	0
3996	696	"arg_1"	"time"	7	0	1	1
3997	696	"arg_2"	"hugeint"	128	0	1	2
3998	697	"res_0"	"hugeint"	128	0	0	0
3999	697	"arg_1"	"timetz"	7	0	1	1
4000	697	"arg_2"	"hugeint"	128	0	1	2
4001	698	"res_0"	"hugeint"	128	0	0	0
4002	698	"arg_1"	"date"	0	0	1	1
4003	698	"arg_2"	"hugeint"	128	0	1	2
4004	699	"res_0"	"hugeint"	128	0	0	0
4005	699	"arg_1"	"timestamp"	7	0	1	1
4006	699	"arg_2"	"hugeint"	128	0	1	2
4007	700	"res_0"	"hugeint"	128	0	0	0
4008	700	"arg_1"	"timestamptz"	7	0	1	1
4009	700	"arg_2"	"hugeint"	128	0	1	2
4010	701	"res_0"	"hugeint"	128	0	0	0
4011	701	"arg_1"	"blob"	0	0	1	1
4012	701	"arg_2"	"hugeint"	128	0	1	2
4013	702	"res_0"	"hugeint"	128	0	0	0
4014	702	"arg_1"	"geometry"	0	0	1	1
4015	702	"arg_2"	"hugeint"	128	0	1	2
4016	703	"res_0"	"hugeint"	128	0	0	0
4017	703	"arg_1"	"geometrya"	0	0	1	1
4018	703	"arg_2"	"hugeint"	128	0	1	2
4019	704	"res_0"	"hugeint"	128	0	0	0
4020	704	"arg_1"	"mbr"	0	0	1	1
4021	704	"arg_2"	"hugeint"	128	0	1	2
4022	705	"res_0"	"decimal"	2	0	0	0
4023	705	"arg_1"	"oid"	63	0	1	1
4024	705	"arg_2"	"decimal"	2	0	1	2
4025	706	"res_0"	"decimal"	2	0	0	0
4026	706	"arg_1"	"tinyint"	8	0	1	1
4027	706	"arg_2"	"decimal"	2	0	1	2
4028	707	"res_0"	"decimal"	2	0	0	0
4029	707	"arg_1"	"smallint"	16	0	1	1
4030	707	"arg_2"	"decimal"	2	0	1	2
4031	708	"res_0"	"decimal"	2	0	0	0
4032	708	"arg_1"	"int"	32	0	1	1
4033	708	"arg_2"	"decimal"	2	0	1	2
4034	709	"res_0"	"decimal"	2	0	0	0
4035	709	"arg_1"	"bigint"	64	0	1	1
4036	709	"arg_2"	"decimal"	2	0	1	2
4037	710	"res_0"	"decimal"	2	0	0	0
4038	710	"arg_1"	"wrd"	64	0	1	1
4039	710	"arg_2"	"decimal"	2	0	1	2
4040	711	"res_0"	"decimal"	2	0	0	0
4041	711	"arg_1"	"hugeint"	128	0	1	1
4042	711	"arg_2"	"decimal"	2	0	1	2
4043	712	"res_0"	"decimal"	2	0	0	0
4044	712	"arg_1"	"decimal"	2	0	1	1
4045	712	"arg_2"	"decimal"	2	0	1	2
4046	713	"res_0"	"decimal"	2	0	0	0
4047	713	"arg_1"	"decimal"	4	0	1	1
4048	713	"arg_2"	"decimal"	2	0	1	2
4049	714	"res_0"	"decimal"	2	0	0	0
4050	714	"arg_1"	"decimal"	9	0	1	1
4051	714	"arg_2"	"decimal"	2	0	1	2
4052	715	"res_0"	"decimal"	2	0	0	0
4053	715	"arg_1"	"decimal"	18	0	1	1
4054	715	"arg_2"	"decimal"	2	0	1	2
4055	716	"res_0"	"decimal"	2	0	0	0
4056	716	"arg_1"	"decimal"	39	0	1	1
4057	716	"arg_2"	"decimal"	2	0	1	2
4058	717	"res_0"	"decimal"	2	0	0	0
4059	717	"arg_1"	"real"	24	0	1	1
4060	717	"arg_2"	"decimal"	2	0	1	2
4061	718	"res_0"	"decimal"	2	0	0	0
4062	718	"arg_1"	"double"	53	0	1	1
4063	718	"arg_2"	"decimal"	2	0	1	2
4064	719	"res_0"	"decimal"	2	0	0	0
4065	719	"arg_1"	"month_interval"	32	0	1	1
4066	719	"arg_2"	"decimal"	2	0	1	2
4067	720	"res_0"	"decimal"	2	0	0	0
4068	720	"arg_1"	"sec_interval"	19	0	1	1
4069	720	"arg_2"	"decimal"	2	0	1	2
4070	721	"res_0"	"decimal"	2	0	0	0
4071	721	"arg_1"	"time"	7	0	1	1
4072	721	"arg_2"	"decimal"	2	0	1	2
4073	722	"res_0"	"decimal"	2	0	0	0
4074	722	"arg_1"	"timetz"	7	0	1	1
4075	722	"arg_2"	"decimal"	2	0	1	2
4076	723	"res_0"	"decimal"	2	0	0	0
4077	723	"arg_1"	"date"	0	0	1	1
4078	723	"arg_2"	"decimal"	2	0	1	2
4079	724	"res_0"	"decimal"	2	0	0	0
4080	724	"arg_1"	"timestamp"	7	0	1	1
4081	724	"arg_2"	"decimal"	2	0	1	2
4082	725	"res_0"	"decimal"	2	0	0	0
4083	725	"arg_1"	"timestamptz"	7	0	1	1
4084	725	"arg_2"	"decimal"	2	0	1	2
4085	726	"res_0"	"decimal"	2	0	0	0
4086	726	"arg_1"	"blob"	0	0	1	1
4087	726	"arg_2"	"decimal"	2	0	1	2
4088	727	"res_0"	"decimal"	2	0	0	0
4089	727	"arg_1"	"geometry"	0	0	1	1
4090	727	"arg_2"	"decimal"	2	0	1	2
4091	728	"res_0"	"decimal"	2	0	0	0
4092	728	"arg_1"	"geometrya"	0	0	1	1
4093	728	"arg_2"	"decimal"	2	0	1	2
4094	729	"res_0"	"decimal"	2	0	0	0
4095	729	"arg_1"	"mbr"	0	0	1	1
4096	729	"arg_2"	"decimal"	2	0	1	2
4097	730	"res_0"	"decimal"	4	0	0	0
4098	730	"arg_1"	"oid"	63	0	1	1
4099	730	"arg_2"	"decimal"	4	0	1	2
4100	731	"res_0"	"decimal"	4	0	0	0
4101	731	"arg_1"	"tinyint"	8	0	1	1
4102	731	"arg_2"	"decimal"	4	0	1	2
4103	732	"res_0"	"decimal"	4	0	0	0
4104	732	"arg_1"	"smallint"	16	0	1	1
4105	732	"arg_2"	"decimal"	4	0	1	2
4106	733	"res_0"	"decimal"	4	0	0	0
4107	733	"arg_1"	"int"	32	0	1	1
4108	733	"arg_2"	"decimal"	4	0	1	2
4109	734	"res_0"	"decimal"	4	0	0	0
4110	734	"arg_1"	"bigint"	64	0	1	1
4111	734	"arg_2"	"decimal"	4	0	1	2
4112	735	"res_0"	"decimal"	4	0	0	0
4113	735	"arg_1"	"wrd"	64	0	1	1
4114	735	"arg_2"	"decimal"	4	0	1	2
4115	736	"res_0"	"decimal"	4	0	0	0
4116	736	"arg_1"	"hugeint"	128	0	1	1
4117	736	"arg_2"	"decimal"	4	0	1	2
4118	737	"res_0"	"decimal"	4	0	0	0
4119	737	"arg_1"	"decimal"	2	0	1	1
4120	737	"arg_2"	"decimal"	4	0	1	2
4121	738	"res_0"	"decimal"	4	0	0	0
4122	738	"arg_1"	"decimal"	4	0	1	1
4123	738	"arg_2"	"decimal"	4	0	1	2
4124	739	"res_0"	"decimal"	4	0	0	0
4125	739	"arg_1"	"decimal"	9	0	1	1
4126	739	"arg_2"	"decimal"	4	0	1	2
4127	740	"res_0"	"decimal"	4	0	0	0
4128	740	"arg_1"	"decimal"	18	0	1	1
4129	740	"arg_2"	"decimal"	4	0	1	2
4130	741	"res_0"	"decimal"	4	0	0	0
4131	741	"arg_1"	"decimal"	39	0	1	1
4132	741	"arg_2"	"decimal"	4	0	1	2
4133	742	"res_0"	"decimal"	4	0	0	0
4134	742	"arg_1"	"real"	24	0	1	1
4135	742	"arg_2"	"decimal"	4	0	1	2
4136	743	"res_0"	"decimal"	4	0	0	0
4137	743	"arg_1"	"double"	53	0	1	1
4138	743	"arg_2"	"decimal"	4	0	1	2
4139	744	"res_0"	"decimal"	4	0	0	0
4140	744	"arg_1"	"month_interval"	32	0	1	1
4141	744	"arg_2"	"decimal"	4	0	1	2
4142	745	"res_0"	"decimal"	4	0	0	0
4143	745	"arg_1"	"sec_interval"	19	0	1	1
4144	745	"arg_2"	"decimal"	4	0	1	2
4145	746	"res_0"	"decimal"	4	0	0	0
4146	746	"arg_1"	"time"	7	0	1	1
4147	746	"arg_2"	"decimal"	4	0	1	2
4148	747	"res_0"	"decimal"	4	0	0	0
4149	747	"arg_1"	"timetz"	7	0	1	1
4150	747	"arg_2"	"decimal"	4	0	1	2
4151	748	"res_0"	"decimal"	4	0	0	0
4152	748	"arg_1"	"date"	0	0	1	1
4153	748	"arg_2"	"decimal"	4	0	1	2
4154	749	"res_0"	"decimal"	4	0	0	0
4155	749	"arg_1"	"timestamp"	7	0	1	1
4156	749	"arg_2"	"decimal"	4	0	1	2
4157	750	"res_0"	"decimal"	4	0	0	0
4158	750	"arg_1"	"timestamptz"	7	0	1	1
4159	750	"arg_2"	"decimal"	4	0	1	2
4160	751	"res_0"	"decimal"	4	0	0	0
4161	751	"arg_1"	"blob"	0	0	1	1
4162	751	"arg_2"	"decimal"	4	0	1	2
4163	752	"res_0"	"decimal"	4	0	0	0
4164	752	"arg_1"	"geometry"	0	0	1	1
4165	752	"arg_2"	"decimal"	4	0	1	2
4166	753	"res_0"	"decimal"	4	0	0	0
4167	753	"arg_1"	"geometrya"	0	0	1	1
4168	753	"arg_2"	"decimal"	4	0	1	2
4169	754	"res_0"	"decimal"	4	0	0	0
4170	754	"arg_1"	"mbr"	0	0	1	1
4171	754	"arg_2"	"decimal"	4	0	1	2
4172	755	"res_0"	"decimal"	9	0	0	0
4173	755	"arg_1"	"oid"	63	0	1	1
4174	755	"arg_2"	"decimal"	9	0	1	2
4175	756	"res_0"	"decimal"	9	0	0	0
4176	756	"arg_1"	"tinyint"	8	0	1	1
4177	756	"arg_2"	"decimal"	9	0	1	2
4178	757	"res_0"	"decimal"	9	0	0	0
4179	757	"arg_1"	"smallint"	16	0	1	1
4180	757	"arg_2"	"decimal"	9	0	1	2
4181	758	"res_0"	"decimal"	9	0	0	0
4182	758	"arg_1"	"int"	32	0	1	1
4183	758	"arg_2"	"decimal"	9	0	1	2
4184	759	"res_0"	"decimal"	9	0	0	0
4185	759	"arg_1"	"bigint"	64	0	1	1
4186	759	"arg_2"	"decimal"	9	0	1	2
4187	760	"res_0"	"decimal"	9	0	0	0
4188	760	"arg_1"	"wrd"	64	0	1	1
4189	760	"arg_2"	"decimal"	9	0	1	2
4190	761	"res_0"	"decimal"	9	0	0	0
4191	761	"arg_1"	"hugeint"	128	0	1	1
4192	761	"arg_2"	"decimal"	9	0	1	2
4193	762	"res_0"	"decimal"	9	0	0	0
4194	762	"arg_1"	"decimal"	2	0	1	1
4195	762	"arg_2"	"decimal"	9	0	1	2
4196	763	"res_0"	"decimal"	9	0	0	0
4197	763	"arg_1"	"decimal"	4	0	1	1
4198	763	"arg_2"	"decimal"	9	0	1	2
4199	764	"res_0"	"decimal"	9	0	0	0
4200	764	"arg_1"	"decimal"	9	0	1	1
4201	764	"arg_2"	"decimal"	9	0	1	2
4202	765	"res_0"	"decimal"	9	0	0	0
4203	765	"arg_1"	"decimal"	18	0	1	1
4204	765	"arg_2"	"decimal"	9	0	1	2
4205	766	"res_0"	"decimal"	9	0	0	0
4206	766	"arg_1"	"decimal"	39	0	1	1
4207	766	"arg_2"	"decimal"	9	0	1	2
4208	767	"res_0"	"decimal"	9	0	0	0
4209	767	"arg_1"	"real"	24	0	1	1
4210	767	"arg_2"	"decimal"	9	0	1	2
4211	768	"res_0"	"decimal"	9	0	0	0
4212	768	"arg_1"	"double"	53	0	1	1
4213	768	"arg_2"	"decimal"	9	0	1	2
4214	769	"res_0"	"decimal"	9	0	0	0
4215	769	"arg_1"	"month_interval"	32	0	1	1
4216	769	"arg_2"	"decimal"	9	0	1	2
4217	770	"res_0"	"decimal"	9	0	0	0
4218	770	"arg_1"	"sec_interval"	19	0	1	1
4219	770	"arg_2"	"decimal"	9	0	1	2
4220	771	"res_0"	"decimal"	9	0	0	0
4221	771	"arg_1"	"time"	7	0	1	1
4222	771	"arg_2"	"decimal"	9	0	1	2
4223	772	"res_0"	"decimal"	9	0	0	0
4224	772	"arg_1"	"timetz"	7	0	1	1
4225	772	"arg_2"	"decimal"	9	0	1	2
4226	773	"res_0"	"decimal"	9	0	0	0
4227	773	"arg_1"	"date"	0	0	1	1
4228	773	"arg_2"	"decimal"	9	0	1	2
4229	774	"res_0"	"decimal"	9	0	0	0
4230	774	"arg_1"	"timestamp"	7	0	1	1
4231	774	"arg_2"	"decimal"	9	0	1	2
4232	775	"res_0"	"decimal"	9	0	0	0
4233	775	"arg_1"	"timestamptz"	7	0	1	1
4234	775	"arg_2"	"decimal"	9	0	1	2
4235	776	"res_0"	"decimal"	9	0	0	0
4236	776	"arg_1"	"blob"	0	0	1	1
4237	776	"arg_2"	"decimal"	9	0	1	2
4238	777	"res_0"	"decimal"	9	0	0	0
4239	777	"arg_1"	"geometry"	0	0	1	1
4240	777	"arg_2"	"decimal"	9	0	1	2
4241	778	"res_0"	"decimal"	9	0	0	0
4242	778	"arg_1"	"geometrya"	0	0	1	1
4243	778	"arg_2"	"decimal"	9	0	1	2
4244	779	"res_0"	"decimal"	9	0	0	0
4245	779	"arg_1"	"mbr"	0	0	1	1
4246	779	"arg_2"	"decimal"	9	0	1	2
4247	780	"res_0"	"decimal"	18	0	0	0
4248	780	"arg_1"	"oid"	63	0	1	1
4249	780	"arg_2"	"decimal"	18	0	1	2
4250	781	"res_0"	"decimal"	18	0	0	0
4251	781	"arg_1"	"tinyint"	8	0	1	1
4252	781	"arg_2"	"decimal"	18	0	1	2
4253	782	"res_0"	"decimal"	18	0	0	0
4254	782	"arg_1"	"smallint"	16	0	1	1
4255	782	"arg_2"	"decimal"	18	0	1	2
4256	783	"res_0"	"decimal"	18	0	0	0
4257	783	"arg_1"	"int"	32	0	1	1
4258	783	"arg_2"	"decimal"	18	0	1	2
4259	784	"res_0"	"decimal"	18	0	0	0
4260	784	"arg_1"	"bigint"	64	0	1	1
4261	784	"arg_2"	"decimal"	18	0	1	2
4262	785	"res_0"	"decimal"	18	0	0	0
4263	785	"arg_1"	"wrd"	64	0	1	1
4264	785	"arg_2"	"decimal"	18	0	1	2
4265	786	"res_0"	"decimal"	18	0	0	0
4266	786	"arg_1"	"hugeint"	128	0	1	1
4267	786	"arg_2"	"decimal"	18	0	1	2
4268	787	"res_0"	"decimal"	18	0	0	0
4269	787	"arg_1"	"decimal"	2	0	1	1
4270	787	"arg_2"	"decimal"	18	0	1	2
4271	788	"res_0"	"decimal"	18	0	0	0
4272	788	"arg_1"	"decimal"	4	0	1	1
4273	788	"arg_2"	"decimal"	18	0	1	2
4274	789	"res_0"	"decimal"	18	0	0	0
4275	789	"arg_1"	"decimal"	9	0	1	1
4276	789	"arg_2"	"decimal"	18	0	1	2
4277	790	"res_0"	"decimal"	18	0	0	0
4278	790	"arg_1"	"decimal"	18	0	1	1
4279	790	"arg_2"	"decimal"	18	0	1	2
4280	791	"res_0"	"decimal"	18	0	0	0
4281	791	"arg_1"	"decimal"	39	0	1	1
4282	791	"arg_2"	"decimal"	18	0	1	2
4283	792	"res_0"	"decimal"	18	0	0	0
4284	792	"arg_1"	"real"	24	0	1	1
4285	792	"arg_2"	"decimal"	18	0	1	2
4286	793	"res_0"	"decimal"	18	0	0	0
4287	793	"arg_1"	"double"	53	0	1	1
4288	793	"arg_2"	"decimal"	18	0	1	2
4289	794	"res_0"	"decimal"	18	0	0	0
4290	794	"arg_1"	"month_interval"	32	0	1	1
4291	794	"arg_2"	"decimal"	18	0	1	2
4292	795	"res_0"	"decimal"	18	0	0	0
4293	795	"arg_1"	"sec_interval"	19	0	1	1
4294	795	"arg_2"	"decimal"	18	0	1	2
4295	796	"res_0"	"decimal"	18	0	0	0
4296	796	"arg_1"	"time"	7	0	1	1
4297	796	"arg_2"	"decimal"	18	0	1	2
4298	797	"res_0"	"decimal"	18	0	0	0
4299	797	"arg_1"	"timetz"	7	0	1	1
4300	797	"arg_2"	"decimal"	18	0	1	2
4301	798	"res_0"	"decimal"	18	0	0	0
4302	798	"arg_1"	"date"	0	0	1	1
4303	798	"arg_2"	"decimal"	18	0	1	2
4304	799	"res_0"	"decimal"	18	0	0	0
4305	799	"arg_1"	"timestamp"	7	0	1	1
4306	799	"arg_2"	"decimal"	18	0	1	2
4307	800	"res_0"	"decimal"	18	0	0	0
4308	800	"arg_1"	"timestamptz"	7	0	1	1
4309	800	"arg_2"	"decimal"	18	0	1	2
4310	801	"res_0"	"decimal"	18	0	0	0
4311	801	"arg_1"	"blob"	0	0	1	1
4312	801	"arg_2"	"decimal"	18	0	1	2
4313	802	"res_0"	"decimal"	18	0	0	0
4314	802	"arg_1"	"geometry"	0	0	1	1
4315	802	"arg_2"	"decimal"	18	0	1	2
4316	803	"res_0"	"decimal"	18	0	0	0
4317	803	"arg_1"	"geometrya"	0	0	1	1
4318	803	"arg_2"	"decimal"	18	0	1	2
4319	804	"res_0"	"decimal"	18	0	0	0
4320	804	"arg_1"	"mbr"	0	0	1	1
4321	804	"arg_2"	"decimal"	18	0	1	2
4322	805	"res_0"	"decimal"	39	0	0	0
4323	805	"arg_1"	"oid"	63	0	1	1
4324	805	"arg_2"	"decimal"	39	0	1	2
4325	806	"res_0"	"decimal"	39	0	0	0
4326	806	"arg_1"	"tinyint"	8	0	1	1
4327	806	"arg_2"	"decimal"	39	0	1	2
4328	807	"res_0"	"decimal"	39	0	0	0
4329	807	"arg_1"	"smallint"	16	0	1	1
4330	807	"arg_2"	"decimal"	39	0	1	2
4331	808	"res_0"	"decimal"	39	0	0	0
4332	808	"arg_1"	"int"	32	0	1	1
4333	808	"arg_2"	"decimal"	39	0	1	2
4334	809	"res_0"	"decimal"	39	0	0	0
4335	809	"arg_1"	"bigint"	64	0	1	1
4336	809	"arg_2"	"decimal"	39	0	1	2
4337	810	"res_0"	"decimal"	39	0	0	0
4338	810	"arg_1"	"wrd"	64	0	1	1
4339	810	"arg_2"	"decimal"	39	0	1	2
4340	811	"res_0"	"decimal"	39	0	0	0
4341	811	"arg_1"	"hugeint"	128	0	1	1
4342	811	"arg_2"	"decimal"	39	0	1	2
4343	812	"res_0"	"decimal"	39	0	0	0
4344	812	"arg_1"	"decimal"	2	0	1	1
4345	812	"arg_2"	"decimal"	39	0	1	2
4346	813	"res_0"	"decimal"	39	0	0	0
4347	813	"arg_1"	"decimal"	4	0	1	1
4348	813	"arg_2"	"decimal"	39	0	1	2
4349	814	"res_0"	"decimal"	39	0	0	0
4350	814	"arg_1"	"decimal"	9	0	1	1
4351	814	"arg_2"	"decimal"	39	0	1	2
4352	815	"res_0"	"decimal"	39	0	0	0
4353	815	"arg_1"	"decimal"	18	0	1	1
4354	815	"arg_2"	"decimal"	39	0	1	2
4355	816	"res_0"	"decimal"	39	0	0	0
4356	816	"arg_1"	"decimal"	39	0	1	1
4357	816	"arg_2"	"decimal"	39	0	1	2
4358	817	"res_0"	"decimal"	39	0	0	0
4359	817	"arg_1"	"real"	24	0	1	1
4360	817	"arg_2"	"decimal"	39	0	1	2
4361	818	"res_0"	"decimal"	39	0	0	0
4362	818	"arg_1"	"double"	53	0	1	1
4363	818	"arg_2"	"decimal"	39	0	1	2
4364	819	"res_0"	"decimal"	39	0	0	0
4365	819	"arg_1"	"month_interval"	32	0	1	1
4366	819	"arg_2"	"decimal"	39	0	1	2
4367	820	"res_0"	"decimal"	39	0	0	0
4368	820	"arg_1"	"sec_interval"	19	0	1	1
4369	820	"arg_2"	"decimal"	39	0	1	2
4370	821	"res_0"	"decimal"	39	0	0	0
4371	821	"arg_1"	"time"	7	0	1	1
4372	821	"arg_2"	"decimal"	39	0	1	2
4373	822	"res_0"	"decimal"	39	0	0	0
4374	822	"arg_1"	"timetz"	7	0	1	1
4375	822	"arg_2"	"decimal"	39	0	1	2
4376	823	"res_0"	"decimal"	39	0	0	0
4377	823	"arg_1"	"date"	0	0	1	1
4378	823	"arg_2"	"decimal"	39	0	1	2
4379	824	"res_0"	"decimal"	39	0	0	0
4380	824	"arg_1"	"timestamp"	7	0	1	1
4381	824	"arg_2"	"decimal"	39	0	1	2
4382	825	"res_0"	"decimal"	39	0	0	0
4383	825	"arg_1"	"timestamptz"	7	0	1	1
4384	825	"arg_2"	"decimal"	39	0	1	2
4385	826	"res_0"	"decimal"	39	0	0	0
4386	826	"arg_1"	"blob"	0	0	1	1
4387	826	"arg_2"	"decimal"	39	0	1	2
4388	827	"res_0"	"decimal"	39	0	0	0
4389	827	"arg_1"	"geometry"	0	0	1	1
4390	827	"arg_2"	"decimal"	39	0	1	2
4391	828	"res_0"	"decimal"	39	0	0	0
4392	828	"arg_1"	"geometrya"	0	0	1	1
4393	828	"arg_2"	"decimal"	39	0	1	2
4394	829	"res_0"	"decimal"	39	0	0	0
4395	829	"arg_1"	"mbr"	0	0	1	1
4396	829	"arg_2"	"decimal"	39	0	1	2
4397	830	"res_0"	"real"	24	0	0	0
4398	830	"arg_1"	"oid"	63	0	1	1
4399	830	"arg_2"	"real"	24	0	1	2
4400	831	"res_0"	"real"	24	0	0	0
4401	831	"arg_1"	"tinyint"	8	0	1	1
4402	831	"arg_2"	"real"	24	0	1	2
4403	832	"res_0"	"real"	24	0	0	0
4404	832	"arg_1"	"smallint"	16	0	1	1
4405	832	"arg_2"	"real"	24	0	1	2
4406	833	"res_0"	"real"	24	0	0	0
4407	833	"arg_1"	"int"	32	0	1	1
4408	833	"arg_2"	"real"	24	0	1	2
4409	834	"res_0"	"real"	24	0	0	0
4410	834	"arg_1"	"bigint"	64	0	1	1
4411	834	"arg_2"	"real"	24	0	1	2
4412	835	"res_0"	"real"	24	0	0	0
4413	835	"arg_1"	"wrd"	64	0	1	1
4414	835	"arg_2"	"real"	24	0	1	2
4415	836	"res_0"	"real"	24	0	0	0
4416	836	"arg_1"	"hugeint"	128	0	1	1
4417	836	"arg_2"	"real"	24	0	1	2
4418	837	"res_0"	"real"	24	0	0	0
4419	837	"arg_1"	"decimal"	2	0	1	1
4420	837	"arg_2"	"real"	24	0	1	2
4421	838	"res_0"	"real"	24	0	0	0
4422	838	"arg_1"	"decimal"	4	0	1	1
4423	838	"arg_2"	"real"	24	0	1	2
4424	839	"res_0"	"real"	24	0	0	0
4425	839	"arg_1"	"decimal"	9	0	1	1
4426	839	"arg_2"	"real"	24	0	1	2
4427	840	"res_0"	"real"	24	0	0	0
4428	840	"arg_1"	"decimal"	18	0	1	1
4429	840	"arg_2"	"real"	24	0	1	2
4430	841	"res_0"	"real"	24	0	0	0
4431	841	"arg_1"	"decimal"	39	0	1	1
4432	841	"arg_2"	"real"	24	0	1	2
4433	842	"res_0"	"real"	24	0	0	0
4434	842	"arg_1"	"real"	24	0	1	1
4435	842	"arg_2"	"real"	24	0	1	2
4436	843	"res_0"	"real"	24	0	0	0
4437	843	"arg_1"	"double"	53	0	1	1
4438	843	"arg_2"	"real"	24	0	1	2
4439	844	"res_0"	"real"	24	0	0	0
4440	844	"arg_1"	"month_interval"	32	0	1	1
4441	844	"arg_2"	"real"	24	0	1	2
4442	845	"res_0"	"real"	24	0	0	0
4443	845	"arg_1"	"sec_interval"	19	0	1	1
4444	845	"arg_2"	"real"	24	0	1	2
4445	846	"res_0"	"real"	24	0	0	0
4446	846	"arg_1"	"time"	7	0	1	1
4447	846	"arg_2"	"real"	24	0	1	2
4448	847	"res_0"	"real"	24	0	0	0
4449	847	"arg_1"	"timetz"	7	0	1	1
4450	847	"arg_2"	"real"	24	0	1	2
4451	848	"res_0"	"real"	24	0	0	0
4452	848	"arg_1"	"date"	0	0	1	1
4453	848	"arg_2"	"real"	24	0	1	2
4454	849	"res_0"	"real"	24	0	0	0
4455	849	"arg_1"	"timestamp"	7	0	1	1
4456	849	"arg_2"	"real"	24	0	1	2
4457	850	"res_0"	"real"	24	0	0	0
4458	850	"arg_1"	"timestamptz"	7	0	1	1
4459	850	"arg_2"	"real"	24	0	1	2
4460	851	"res_0"	"real"	24	0	0	0
4461	851	"arg_1"	"blob"	0	0	1	1
4462	851	"arg_2"	"real"	24	0	1	2
4463	852	"res_0"	"real"	24	0	0	0
4464	852	"arg_1"	"geometry"	0	0	1	1
4465	852	"arg_2"	"real"	24	0	1	2
4466	853	"res_0"	"real"	24	0	0	0
4467	853	"arg_1"	"geometrya"	0	0	1	1
4468	853	"arg_2"	"real"	24	0	1	2
4469	854	"res_0"	"real"	24	0	0	0
4470	854	"arg_1"	"mbr"	0	0	1	1
4471	854	"arg_2"	"real"	24	0	1	2
4472	855	"res_0"	"double"	53	0	0	0
4473	855	"arg_1"	"oid"	63	0	1	1
4474	855	"arg_2"	"double"	53	0	1	2
4475	856	"res_0"	"double"	53	0	0	0
4476	856	"arg_1"	"tinyint"	8	0	1	1
4477	856	"arg_2"	"double"	53	0	1	2
4478	857	"res_0"	"double"	53	0	0	0
4479	857	"arg_1"	"smallint"	16	0	1	1
4480	857	"arg_2"	"double"	53	0	1	2
4481	858	"res_0"	"double"	53	0	0	0
4482	858	"arg_1"	"int"	32	0	1	1
4483	858	"arg_2"	"double"	53	0	1	2
4484	859	"res_0"	"double"	53	0	0	0
4485	859	"arg_1"	"bigint"	64	0	1	1
4486	859	"arg_2"	"double"	53	0	1	2
4487	860	"res_0"	"double"	53	0	0	0
4488	860	"arg_1"	"wrd"	64	0	1	1
4489	860	"arg_2"	"double"	53	0	1	2
4490	861	"res_0"	"double"	53	0	0	0
4491	861	"arg_1"	"hugeint"	128	0	1	1
4492	861	"arg_2"	"double"	53	0	1	2
4493	862	"res_0"	"double"	53	0	0	0
4494	862	"arg_1"	"decimal"	2	0	1	1
4495	862	"arg_2"	"double"	53	0	1	2
4496	863	"res_0"	"double"	53	0	0	0
4497	863	"arg_1"	"decimal"	4	0	1	1
4498	863	"arg_2"	"double"	53	0	1	2
4499	864	"res_0"	"double"	53	0	0	0
4500	864	"arg_1"	"decimal"	9	0	1	1
4501	864	"arg_2"	"double"	53	0	1	2
4502	865	"res_0"	"double"	53	0	0	0
4503	865	"arg_1"	"decimal"	18	0	1	1
4504	865	"arg_2"	"double"	53	0	1	2
4505	866	"res_0"	"double"	53	0	0	0
4506	866	"arg_1"	"decimal"	39	0	1	1
4507	866	"arg_2"	"double"	53	0	1	2
4508	867	"res_0"	"double"	53	0	0	0
4509	867	"arg_1"	"real"	24	0	1	1
4510	867	"arg_2"	"double"	53	0	1	2
4511	868	"res_0"	"double"	53	0	0	0
4512	868	"arg_1"	"double"	53	0	1	1
4513	868	"arg_2"	"double"	53	0	1	2
4514	869	"res_0"	"double"	53	0	0	0
4515	869	"arg_1"	"month_interval"	32	0	1	1
4516	869	"arg_2"	"double"	53	0	1	2
4517	870	"res_0"	"double"	53	0	0	0
4518	870	"arg_1"	"sec_interval"	19	0	1	1
4519	870	"arg_2"	"double"	53	0	1	2
4520	871	"res_0"	"double"	53	0	0	0
4521	871	"arg_1"	"time"	7	0	1	1
4522	871	"arg_2"	"double"	53	0	1	2
4523	872	"res_0"	"double"	53	0	0	0
4524	872	"arg_1"	"timetz"	7	0	1	1
4525	872	"arg_2"	"double"	53	0	1	2
4526	873	"res_0"	"double"	53	0	0	0
4527	873	"arg_1"	"date"	0	0	1	1
4528	873	"arg_2"	"double"	53	0	1	2
4529	874	"res_0"	"double"	53	0	0	0
4530	874	"arg_1"	"timestamp"	7	0	1	1
4531	874	"arg_2"	"double"	53	0	1	2
4532	875	"res_0"	"double"	53	0	0	0
4533	875	"arg_1"	"timestamptz"	7	0	1	1
4534	875	"arg_2"	"double"	53	0	1	2
4535	876	"res_0"	"double"	53	0	0	0
4536	876	"arg_1"	"blob"	0	0	1	1
4537	876	"arg_2"	"double"	53	0	1	2
4538	877	"res_0"	"double"	53	0	0	0
4539	877	"arg_1"	"geometry"	0	0	1	1
4540	877	"arg_2"	"double"	53	0	1	2
4541	878	"res_0"	"double"	53	0	0	0
4542	878	"arg_1"	"geometrya"	0	0	1	1
4543	878	"arg_2"	"double"	53	0	1	2
4544	879	"res_0"	"double"	53	0	0	0
4545	879	"arg_1"	"mbr"	0	0	1	1
4546	879	"arg_2"	"double"	53	0	1	2
4547	880	"res_0"	"month_interval"	32	0	0	0
4548	880	"arg_1"	"oid"	63	0	1	1
4549	880	"arg_2"	"month_interval"	32	0	1	2
4550	881	"res_0"	"month_interval"	32	0	0	0
4551	881	"arg_1"	"tinyint"	8	0	1	1
4552	881	"arg_2"	"month_interval"	32	0	1	2
4553	882	"res_0"	"month_interval"	32	0	0	0
4554	882	"arg_1"	"smallint"	16	0	1	1
4555	882	"arg_2"	"month_interval"	32	0	1	2
4556	883	"res_0"	"month_interval"	32	0	0	0
4557	883	"arg_1"	"int"	32	0	1	1
4558	883	"arg_2"	"month_interval"	32	0	1	2
4559	884	"res_0"	"month_interval"	32	0	0	0
4560	884	"arg_1"	"bigint"	64	0	1	1
4561	884	"arg_2"	"month_interval"	32	0	1	2
4562	885	"res_0"	"month_interval"	32	0	0	0
4563	885	"arg_1"	"wrd"	64	0	1	1
4564	885	"arg_2"	"month_interval"	32	0	1	2
4565	886	"res_0"	"month_interval"	32	0	0	0
4566	886	"arg_1"	"hugeint"	128	0	1	1
4567	886	"arg_2"	"month_interval"	32	0	1	2
4568	887	"res_0"	"month_interval"	32	0	0	0
4569	887	"arg_1"	"decimal"	2	0	1	1
4570	887	"arg_2"	"month_interval"	32	0	1	2
4571	888	"res_0"	"month_interval"	32	0	0	0
4572	888	"arg_1"	"decimal"	4	0	1	1
4573	888	"arg_2"	"month_interval"	32	0	1	2
4574	889	"res_0"	"month_interval"	32	0	0	0
4575	889	"arg_1"	"decimal"	9	0	1	1
4576	889	"arg_2"	"month_interval"	32	0	1	2
4577	890	"res_0"	"month_interval"	32	0	0	0
4578	890	"arg_1"	"decimal"	18	0	1	1
4579	890	"arg_2"	"month_interval"	32	0	1	2
4580	891	"res_0"	"month_interval"	32	0	0	0
4581	891	"arg_1"	"decimal"	39	0	1	1
4582	891	"arg_2"	"month_interval"	32	0	1	2
4583	892	"res_0"	"month_interval"	32	0	0	0
4584	892	"arg_1"	"real"	24	0	1	1
4585	892	"arg_2"	"month_interval"	32	0	1	2
4586	893	"res_0"	"month_interval"	32	0	0	0
4587	893	"arg_1"	"double"	53	0	1	1
4588	893	"arg_2"	"month_interval"	32	0	1	2
4589	894	"res_0"	"month_interval"	32	0	0	0
4590	894	"arg_1"	"month_interval"	32	0	1	1
4591	894	"arg_2"	"month_interval"	32	0	1	2
4592	895	"res_0"	"month_interval"	32	0	0	0
4593	895	"arg_1"	"sec_interval"	19	0	1	1
4594	895	"arg_2"	"month_interval"	32	0	1	2
4595	896	"res_0"	"month_interval"	32	0	0	0
4596	896	"arg_1"	"time"	7	0	1	1
4597	896	"arg_2"	"month_interval"	32	0	1	2
4598	897	"res_0"	"month_interval"	32	0	0	0
4599	897	"arg_1"	"timetz"	7	0	1	1
4600	897	"arg_2"	"month_interval"	32	0	1	2
4601	898	"res_0"	"month_interval"	32	0	0	0
4602	898	"arg_1"	"date"	0	0	1	1
4603	898	"arg_2"	"month_interval"	32	0	1	2
4604	899	"res_0"	"month_interval"	32	0	0	0
4605	899	"arg_1"	"timestamp"	7	0	1	1
4606	899	"arg_2"	"month_interval"	32	0	1	2
4607	900	"res_0"	"month_interval"	32	0	0	0
4608	900	"arg_1"	"timestamptz"	7	0	1	1
4609	900	"arg_2"	"month_interval"	32	0	1	2
4610	901	"res_0"	"month_interval"	32	0	0	0
4611	901	"arg_1"	"blob"	0	0	1	1
4612	901	"arg_2"	"month_interval"	32	0	1	2
4613	902	"res_0"	"month_interval"	32	0	0	0
4614	902	"arg_1"	"geometry"	0	0	1	1
4615	902	"arg_2"	"month_interval"	32	0	1	2
4616	903	"res_0"	"month_interval"	32	0	0	0
4617	903	"arg_1"	"geometrya"	0	0	1	1
4618	903	"arg_2"	"month_interval"	32	0	1	2
4619	904	"res_0"	"month_interval"	32	0	0	0
4620	904	"arg_1"	"mbr"	0	0	1	1
4621	904	"arg_2"	"month_interval"	32	0	1	2
4622	905	"res_0"	"sec_interval"	19	0	0	0
4623	905	"arg_1"	"oid"	63	0	1	1
4624	905	"arg_2"	"sec_interval"	19	0	1	2
4625	906	"res_0"	"sec_interval"	19	0	0	0
4626	906	"arg_1"	"tinyint"	8	0	1	1
4627	906	"arg_2"	"sec_interval"	19	0	1	2
4628	907	"res_0"	"sec_interval"	19	0	0	0
4629	907	"arg_1"	"smallint"	16	0	1	1
4630	907	"arg_2"	"sec_interval"	19	0	1	2
4631	908	"res_0"	"sec_interval"	19	0	0	0
4632	908	"arg_1"	"int"	32	0	1	1
4633	908	"arg_2"	"sec_interval"	19	0	1	2
4634	909	"res_0"	"sec_interval"	19	0	0	0
4635	909	"arg_1"	"bigint"	64	0	1	1
4636	909	"arg_2"	"sec_interval"	19	0	1	2
4637	910	"res_0"	"sec_interval"	19	0	0	0
4638	910	"arg_1"	"wrd"	64	0	1	1
4639	910	"arg_2"	"sec_interval"	19	0	1	2
4640	911	"res_0"	"sec_interval"	19	0	0	0
4641	911	"arg_1"	"hugeint"	128	0	1	1
4642	911	"arg_2"	"sec_interval"	19	0	1	2
4643	912	"res_0"	"sec_interval"	19	0	0	0
4644	912	"arg_1"	"decimal"	2	0	1	1
4645	912	"arg_2"	"sec_interval"	19	0	1	2
4646	913	"res_0"	"sec_interval"	19	0	0	0
4647	913	"arg_1"	"decimal"	4	0	1	1
4648	913	"arg_2"	"sec_interval"	19	0	1	2
4649	914	"res_0"	"sec_interval"	19	0	0	0
4650	914	"arg_1"	"decimal"	9	0	1	1
4651	914	"arg_2"	"sec_interval"	19	0	1	2
4652	915	"res_0"	"sec_interval"	19	0	0	0
4653	915	"arg_1"	"decimal"	18	0	1	1
4654	915	"arg_2"	"sec_interval"	19	0	1	2
4655	916	"res_0"	"sec_interval"	19	0	0	0
4656	916	"arg_1"	"decimal"	39	0	1	1
4657	916	"arg_2"	"sec_interval"	19	0	1	2
4658	917	"res_0"	"sec_interval"	19	0	0	0
4659	917	"arg_1"	"real"	24	0	1	1
4660	917	"arg_2"	"sec_interval"	19	0	1	2
4661	918	"res_0"	"sec_interval"	19	0	0	0
4662	918	"arg_1"	"double"	53	0	1	1
4663	918	"arg_2"	"sec_interval"	19	0	1	2
4664	919	"res_0"	"sec_interval"	19	0	0	0
4665	919	"arg_1"	"month_interval"	32	0	1	1
4666	919	"arg_2"	"sec_interval"	19	0	1	2
4667	920	"res_0"	"sec_interval"	19	0	0	0
4668	920	"arg_1"	"sec_interval"	19	0	1	1
4669	920	"arg_2"	"sec_interval"	19	0	1	2
4670	921	"res_0"	"sec_interval"	19	0	0	0
4671	921	"arg_1"	"time"	7	0	1	1
4672	921	"arg_2"	"sec_interval"	19	0	1	2
4673	922	"res_0"	"sec_interval"	19	0	0	0
4674	922	"arg_1"	"timetz"	7	0	1	1
4675	922	"arg_2"	"sec_interval"	19	0	1	2
4676	923	"res_0"	"sec_interval"	19	0	0	0
4677	923	"arg_1"	"date"	0	0	1	1
4678	923	"arg_2"	"sec_interval"	19	0	1	2
4679	924	"res_0"	"sec_interval"	19	0	0	0
4680	924	"arg_1"	"timestamp"	7	0	1	1
4681	924	"arg_2"	"sec_interval"	19	0	1	2
4682	925	"res_0"	"sec_interval"	19	0	0	0
4683	925	"arg_1"	"timestamptz"	7	0	1	1
4684	925	"arg_2"	"sec_interval"	19	0	1	2
4685	926	"res_0"	"sec_interval"	19	0	0	0
4686	926	"arg_1"	"blob"	0	0	1	1
4687	926	"arg_2"	"sec_interval"	19	0	1	2
4688	927	"res_0"	"sec_interval"	19	0	0	0
4689	927	"arg_1"	"geometry"	0	0	1	1
4690	927	"arg_2"	"sec_interval"	19	0	1	2
4691	928	"res_0"	"sec_interval"	19	0	0	0
4692	928	"arg_1"	"geometrya"	0	0	1	1
4693	928	"arg_2"	"sec_interval"	19	0	1	2
4694	929	"res_0"	"sec_interval"	19	0	0	0
4695	929	"arg_1"	"mbr"	0	0	1	1
4696	929	"arg_2"	"sec_interval"	19	0	1	2
4697	930	"res_0"	"time"	7	0	0	0
4698	930	"arg_1"	"oid"	63	0	1	1
4699	930	"arg_2"	"time"	7	0	1	2
4700	931	"res_0"	"time"	7	0	0	0
4701	931	"arg_1"	"tinyint"	8	0	1	1
4702	931	"arg_2"	"time"	7	0	1	2
4703	932	"res_0"	"time"	7	0	0	0
4704	932	"arg_1"	"smallint"	16	0	1	1
4705	932	"arg_2"	"time"	7	0	1	2
4706	933	"res_0"	"time"	7	0	0	0
4707	933	"arg_1"	"int"	32	0	1	1
4708	933	"arg_2"	"time"	7	0	1	2
4709	934	"res_0"	"time"	7	0	0	0
4710	934	"arg_1"	"bigint"	64	0	1	1
4711	934	"arg_2"	"time"	7	0	1	2
4712	935	"res_0"	"time"	7	0	0	0
4713	935	"arg_1"	"wrd"	64	0	1	1
4714	935	"arg_2"	"time"	7	0	1	2
4715	936	"res_0"	"time"	7	0	0	0
4716	936	"arg_1"	"hugeint"	128	0	1	1
4717	936	"arg_2"	"time"	7	0	1	2
4718	937	"res_0"	"time"	7	0	0	0
4719	937	"arg_1"	"decimal"	2	0	1	1
4720	937	"arg_2"	"time"	7	0	1	2
4721	938	"res_0"	"time"	7	0	0	0
4722	938	"arg_1"	"decimal"	4	0	1	1
4723	938	"arg_2"	"time"	7	0	1	2
4724	939	"res_0"	"time"	7	0	0	0
4725	939	"arg_1"	"decimal"	9	0	1	1
4726	939	"arg_2"	"time"	7	0	1	2
4727	940	"res_0"	"time"	7	0	0	0
4728	940	"arg_1"	"decimal"	18	0	1	1
4729	940	"arg_2"	"time"	7	0	1	2
4730	941	"res_0"	"time"	7	0	0	0
4731	941	"arg_1"	"decimal"	39	0	1	1
4732	941	"arg_2"	"time"	7	0	1	2
4733	942	"res_0"	"time"	7	0	0	0
4734	942	"arg_1"	"real"	24	0	1	1
4735	942	"arg_2"	"time"	7	0	1	2
4736	943	"res_0"	"time"	7	0	0	0
4737	943	"arg_1"	"double"	53	0	1	1
4738	943	"arg_2"	"time"	7	0	1	2
4739	944	"res_0"	"time"	7	0	0	0
4740	944	"arg_1"	"month_interval"	32	0	1	1
4741	944	"arg_2"	"time"	7	0	1	2
4742	945	"res_0"	"time"	7	0	0	0
4743	945	"arg_1"	"sec_interval"	19	0	1	1
4744	945	"arg_2"	"time"	7	0	1	2
4745	946	"res_0"	"time"	7	0	0	0
4746	946	"arg_1"	"time"	7	0	1	1
4747	946	"arg_2"	"time"	7	0	1	2
4748	947	"res_0"	"time"	7	0	0	0
4749	947	"arg_1"	"timetz"	7	0	1	1
4750	947	"arg_2"	"time"	7	0	1	2
4751	948	"res_0"	"time"	7	0	0	0
4752	948	"arg_1"	"date"	0	0	1	1
4753	948	"arg_2"	"time"	7	0	1	2
4754	949	"res_0"	"time"	7	0	0	0
4755	949	"arg_1"	"timestamp"	7	0	1	1
4756	949	"arg_2"	"time"	7	0	1	2
4757	950	"res_0"	"time"	7	0	0	0
4758	950	"arg_1"	"timestamptz"	7	0	1	1
4759	950	"arg_2"	"time"	7	0	1	2
4760	951	"res_0"	"time"	7	0	0	0
4761	951	"arg_1"	"blob"	0	0	1	1
4762	951	"arg_2"	"time"	7	0	1	2
4763	952	"res_0"	"time"	7	0	0	0
4764	952	"arg_1"	"geometry"	0	0	1	1
4765	952	"arg_2"	"time"	7	0	1	2
4766	953	"res_0"	"time"	7	0	0	0
4767	953	"arg_1"	"geometrya"	0	0	1	1
4768	953	"arg_2"	"time"	7	0	1	2
4769	954	"res_0"	"time"	7	0	0	0
4770	954	"arg_1"	"mbr"	0	0	1	1
4771	954	"arg_2"	"time"	7	0	1	2
4772	955	"res_0"	"timetz"	7	0	0	0
4773	955	"arg_1"	"oid"	63	0	1	1
4774	955	"arg_2"	"timetz"	7	0	1	2
4775	956	"res_0"	"timetz"	7	0	0	0
4776	956	"arg_1"	"tinyint"	8	0	1	1
4777	956	"arg_2"	"timetz"	7	0	1	2
4778	957	"res_0"	"timetz"	7	0	0	0
4779	957	"arg_1"	"smallint"	16	0	1	1
4780	957	"arg_2"	"timetz"	7	0	1	2
4781	958	"res_0"	"timetz"	7	0	0	0
4782	958	"arg_1"	"int"	32	0	1	1
4783	958	"arg_2"	"timetz"	7	0	1	2
4784	959	"res_0"	"timetz"	7	0	0	0
4785	959	"arg_1"	"bigint"	64	0	1	1
4786	959	"arg_2"	"timetz"	7	0	1	2
4787	960	"res_0"	"timetz"	7	0	0	0
4788	960	"arg_1"	"wrd"	64	0	1	1
4789	960	"arg_2"	"timetz"	7	0	1	2
4790	961	"res_0"	"timetz"	7	0	0	0
4791	961	"arg_1"	"hugeint"	128	0	1	1
4792	961	"arg_2"	"timetz"	7	0	1	2
4793	962	"res_0"	"timetz"	7	0	0	0
4794	962	"arg_1"	"decimal"	2	0	1	1
4795	962	"arg_2"	"timetz"	7	0	1	2
4796	963	"res_0"	"timetz"	7	0	0	0
4797	963	"arg_1"	"decimal"	4	0	1	1
4798	963	"arg_2"	"timetz"	7	0	1	2
4799	964	"res_0"	"timetz"	7	0	0	0
4800	964	"arg_1"	"decimal"	9	0	1	1
4801	964	"arg_2"	"timetz"	7	0	1	2
4802	965	"res_0"	"timetz"	7	0	0	0
4803	965	"arg_1"	"decimal"	18	0	1	1
4804	965	"arg_2"	"timetz"	7	0	1	2
4805	966	"res_0"	"timetz"	7	0	0	0
4806	966	"arg_1"	"decimal"	39	0	1	1
4807	966	"arg_2"	"timetz"	7	0	1	2
4808	967	"res_0"	"timetz"	7	0	0	0
4809	967	"arg_1"	"real"	24	0	1	1
4810	967	"arg_2"	"timetz"	7	0	1	2
4811	968	"res_0"	"timetz"	7	0	0	0
4812	968	"arg_1"	"double"	53	0	1	1
4813	968	"arg_2"	"timetz"	7	0	1	2
4814	969	"res_0"	"timetz"	7	0	0	0
4815	969	"arg_1"	"month_interval"	32	0	1	1
4816	969	"arg_2"	"timetz"	7	0	1	2
4817	970	"res_0"	"timetz"	7	0	0	0
4818	970	"arg_1"	"sec_interval"	19	0	1	1
4819	970	"arg_2"	"timetz"	7	0	1	2
4820	971	"res_0"	"timetz"	7	0	0	0
4821	971	"arg_1"	"time"	7	0	1	1
4822	971	"arg_2"	"timetz"	7	0	1	2
4823	972	"res_0"	"timetz"	7	0	0	0
4824	972	"arg_1"	"timetz"	7	0	1	1
4825	972	"arg_2"	"timetz"	7	0	1	2
4826	973	"res_0"	"timetz"	7	0	0	0
4827	973	"arg_1"	"date"	0	0	1	1
4828	973	"arg_2"	"timetz"	7	0	1	2
4829	974	"res_0"	"timetz"	7	0	0	0
4830	974	"arg_1"	"timestamp"	7	0	1	1
4831	974	"arg_2"	"timetz"	7	0	1	2
4832	975	"res_0"	"timetz"	7	0	0	0
4833	975	"arg_1"	"timestamptz"	7	0	1	1
4834	975	"arg_2"	"timetz"	7	0	1	2
4835	976	"res_0"	"timetz"	7	0	0	0
4836	976	"arg_1"	"blob"	0	0	1	1
4837	976	"arg_2"	"timetz"	7	0	1	2
4838	977	"res_0"	"timetz"	7	0	0	0
4839	977	"arg_1"	"geometry"	0	0	1	1
4840	977	"arg_2"	"timetz"	7	0	1	2
4841	978	"res_0"	"timetz"	7	0	0	0
4842	978	"arg_1"	"geometrya"	0	0	1	1
4843	978	"arg_2"	"timetz"	7	0	1	2
4844	979	"res_0"	"timetz"	7	0	0	0
4845	979	"arg_1"	"mbr"	0	0	1	1
4846	979	"arg_2"	"timetz"	7	0	1	2
4847	980	"res_0"	"date"	0	0	0	0
4848	980	"arg_1"	"oid"	63	0	1	1
4849	980	"arg_2"	"date"	0	0	1	2
4850	981	"res_0"	"date"	0	0	0	0
4851	981	"arg_1"	"tinyint"	8	0	1	1
4852	981	"arg_2"	"date"	0	0	1	2
4853	982	"res_0"	"date"	0	0	0	0
4854	982	"arg_1"	"smallint"	16	0	1	1
4855	982	"arg_2"	"date"	0	0	1	2
4856	983	"res_0"	"date"	0	0	0	0
4857	983	"arg_1"	"int"	32	0	1	1
4858	983	"arg_2"	"date"	0	0	1	2
4859	984	"res_0"	"date"	0	0	0	0
4860	984	"arg_1"	"bigint"	64	0	1	1
4861	984	"arg_2"	"date"	0	0	1	2
4862	985	"res_0"	"date"	0	0	0	0
4863	985	"arg_1"	"wrd"	64	0	1	1
4864	985	"arg_2"	"date"	0	0	1	2
4865	986	"res_0"	"date"	0	0	0	0
4866	986	"arg_1"	"hugeint"	128	0	1	1
4867	986	"arg_2"	"date"	0	0	1	2
4868	987	"res_0"	"date"	0	0	0	0
4869	987	"arg_1"	"decimal"	2	0	1	1
4870	987	"arg_2"	"date"	0	0	1	2
4871	988	"res_0"	"date"	0	0	0	0
4872	988	"arg_1"	"decimal"	4	0	1	1
4873	988	"arg_2"	"date"	0	0	1	2
4874	989	"res_0"	"date"	0	0	0	0
4875	989	"arg_1"	"decimal"	9	0	1	1
4876	989	"arg_2"	"date"	0	0	1	2
4877	990	"res_0"	"date"	0	0	0	0
4878	990	"arg_1"	"decimal"	18	0	1	1
4879	990	"arg_2"	"date"	0	0	1	2
4880	991	"res_0"	"date"	0	0	0	0
4881	991	"arg_1"	"decimal"	39	0	1	1
4882	991	"arg_2"	"date"	0	0	1	2
4883	992	"res_0"	"date"	0	0	0	0
4884	992	"arg_1"	"real"	24	0	1	1
4885	992	"arg_2"	"date"	0	0	1	2
4886	993	"res_0"	"date"	0	0	0	0
4887	993	"arg_1"	"double"	53	0	1	1
4888	993	"arg_2"	"date"	0	0	1	2
4889	994	"res_0"	"date"	0	0	0	0
4890	994	"arg_1"	"month_interval"	32	0	1	1
4891	994	"arg_2"	"date"	0	0	1	2
4892	995	"res_0"	"date"	0	0	0	0
4893	995	"arg_1"	"sec_interval"	19	0	1	1
4894	995	"arg_2"	"date"	0	0	1	2
4895	996	"res_0"	"date"	0	0	0	0
4896	996	"arg_1"	"time"	7	0	1	1
4897	996	"arg_2"	"date"	0	0	1	2
4898	997	"res_0"	"date"	0	0	0	0
4899	997	"arg_1"	"timetz"	7	0	1	1
4900	997	"arg_2"	"date"	0	0	1	2
4901	998	"res_0"	"date"	0	0	0	0
4902	998	"arg_1"	"date"	0	0	1	1
4903	998	"arg_2"	"date"	0	0	1	2
4904	999	"res_0"	"date"	0	0	0	0
4905	999	"arg_1"	"timestamp"	7	0	1	1
4906	999	"arg_2"	"date"	0	0	1	2
4907	1000	"res_0"	"date"	0	0	0	0
4908	1000	"arg_1"	"timestamptz"	7	0	1	1
4909	1000	"arg_2"	"date"	0	0	1	2
4910	1001	"res_0"	"date"	0	0	0	0
4911	1001	"arg_1"	"blob"	0	0	1	1
4912	1001	"arg_2"	"date"	0	0	1	2
4913	1002	"res_0"	"date"	0	0	0	0
4914	1002	"arg_1"	"geometry"	0	0	1	1
4915	1002	"arg_2"	"date"	0	0	1	2
4916	1003	"res_0"	"date"	0	0	0	0
4917	1003	"arg_1"	"geometrya"	0	0	1	1
4918	1003	"arg_2"	"date"	0	0	1	2
4919	1004	"res_0"	"date"	0	0	0	0
4920	1004	"arg_1"	"mbr"	0	0	1	1
4921	1004	"arg_2"	"date"	0	0	1	2
4922	1005	"res_0"	"timestamp"	7	0	0	0
4923	1005	"arg_1"	"oid"	63	0	1	1
4924	1005	"arg_2"	"timestamp"	7	0	1	2
4925	1006	"res_0"	"timestamp"	7	0	0	0
4926	1006	"arg_1"	"tinyint"	8	0	1	1
4927	1006	"arg_2"	"timestamp"	7	0	1	2
4928	1007	"res_0"	"timestamp"	7	0	0	0
4929	1007	"arg_1"	"smallint"	16	0	1	1
4930	1007	"arg_2"	"timestamp"	7	0	1	2
4931	1008	"res_0"	"timestamp"	7	0	0	0
4932	1008	"arg_1"	"int"	32	0	1	1
4933	1008	"arg_2"	"timestamp"	7	0	1	2
4934	1009	"res_0"	"timestamp"	7	0	0	0
4935	1009	"arg_1"	"bigint"	64	0	1	1
4936	1009	"arg_2"	"timestamp"	7	0	1	2
4937	1010	"res_0"	"timestamp"	7	0	0	0
4938	1010	"arg_1"	"wrd"	64	0	1	1
4939	1010	"arg_2"	"timestamp"	7	0	1	2
4940	1011	"res_0"	"timestamp"	7	0	0	0
4941	1011	"arg_1"	"hugeint"	128	0	1	1
4942	1011	"arg_2"	"timestamp"	7	0	1	2
4943	1012	"res_0"	"timestamp"	7	0	0	0
4944	1012	"arg_1"	"decimal"	2	0	1	1
4945	1012	"arg_2"	"timestamp"	7	0	1	2
4946	1013	"res_0"	"timestamp"	7	0	0	0
4947	1013	"arg_1"	"decimal"	4	0	1	1
4948	1013	"arg_2"	"timestamp"	7	0	1	2
4949	1014	"res_0"	"timestamp"	7	0	0	0
4950	1014	"arg_1"	"decimal"	9	0	1	1
4951	1014	"arg_2"	"timestamp"	7	0	1	2
4952	1015	"res_0"	"timestamp"	7	0	0	0
4953	1015	"arg_1"	"decimal"	18	0	1	1
4954	1015	"arg_2"	"timestamp"	7	0	1	2
4955	1016	"res_0"	"timestamp"	7	0	0	0
4956	1016	"arg_1"	"decimal"	39	0	1	1
4957	1016	"arg_2"	"timestamp"	7	0	1	2
4958	1017	"res_0"	"timestamp"	7	0	0	0
4959	1017	"arg_1"	"real"	24	0	1	1
4960	1017	"arg_2"	"timestamp"	7	0	1	2
4961	1018	"res_0"	"timestamp"	7	0	0	0
4962	1018	"arg_1"	"double"	53	0	1	1
4963	1018	"arg_2"	"timestamp"	7	0	1	2
4964	1019	"res_0"	"timestamp"	7	0	0	0
4965	1019	"arg_1"	"month_interval"	32	0	1	1
4966	1019	"arg_2"	"timestamp"	7	0	1	2
4967	1020	"res_0"	"timestamp"	7	0	0	0
4968	1020	"arg_1"	"sec_interval"	19	0	1	1
4969	1020	"arg_2"	"timestamp"	7	0	1	2
4970	1021	"res_0"	"timestamp"	7	0	0	0
4971	1021	"arg_1"	"time"	7	0	1	1
4972	1021	"arg_2"	"timestamp"	7	0	1	2
4973	1022	"res_0"	"timestamp"	7	0	0	0
4974	1022	"arg_1"	"timetz"	7	0	1	1
4975	1022	"arg_2"	"timestamp"	7	0	1	2
4976	1023	"res_0"	"timestamp"	7	0	0	0
4977	1023	"arg_1"	"date"	0	0	1	1
4978	1023	"arg_2"	"timestamp"	7	0	1	2
4979	1024	"res_0"	"timestamp"	7	0	0	0
4980	1024	"arg_1"	"timestamp"	7	0	1	1
4981	1024	"arg_2"	"timestamp"	7	0	1	2
4982	1025	"res_0"	"timestamp"	7	0	0	0
4983	1025	"arg_1"	"timestamptz"	7	0	1	1
4984	1025	"arg_2"	"timestamp"	7	0	1	2
4985	1026	"res_0"	"timestamp"	7	0	0	0
4986	1026	"arg_1"	"blob"	0	0	1	1
4987	1026	"arg_2"	"timestamp"	7	0	1	2
4988	1027	"res_0"	"timestamp"	7	0	0	0
4989	1027	"arg_1"	"geometry"	0	0	1	1
4990	1027	"arg_2"	"timestamp"	7	0	1	2
4991	1028	"res_0"	"timestamp"	7	0	0	0
4992	1028	"arg_1"	"geometrya"	0	0	1	1
4993	1028	"arg_2"	"timestamp"	7	0	1	2
4994	1029	"res_0"	"timestamp"	7	0	0	0
4995	1029	"arg_1"	"mbr"	0	0	1	1
4996	1029	"arg_2"	"timestamp"	7	0	1	2
4997	1030	"res_0"	"timestamptz"	7	0	0	0
4998	1030	"arg_1"	"oid"	63	0	1	1
4999	1030	"arg_2"	"timestamptz"	7	0	1	2
5000	1031	"res_0"	"timestamptz"	7	0	0	0
5001	1031	"arg_1"	"tinyint"	8	0	1	1
5002	1031	"arg_2"	"timestamptz"	7	0	1	2
5003	1032	"res_0"	"timestamptz"	7	0	0	0
5004	1032	"arg_1"	"smallint"	16	0	1	1
5005	1032	"arg_2"	"timestamptz"	7	0	1	2
5006	1033	"res_0"	"timestamptz"	7	0	0	0
5007	1033	"arg_1"	"int"	32	0	1	1
5008	1033	"arg_2"	"timestamptz"	7	0	1	2
5009	1034	"res_0"	"timestamptz"	7	0	0	0
5010	1034	"arg_1"	"bigint"	64	0	1	1
5011	1034	"arg_2"	"timestamptz"	7	0	1	2
5012	1035	"res_0"	"timestamptz"	7	0	0	0
5013	1035	"arg_1"	"wrd"	64	0	1	1
5014	1035	"arg_2"	"timestamptz"	7	0	1	2
5015	1036	"res_0"	"timestamptz"	7	0	0	0
5016	1036	"arg_1"	"hugeint"	128	0	1	1
5017	1036	"arg_2"	"timestamptz"	7	0	1	2
5018	1037	"res_0"	"timestamptz"	7	0	0	0
5019	1037	"arg_1"	"decimal"	2	0	1	1
5020	1037	"arg_2"	"timestamptz"	7	0	1	2
5021	1038	"res_0"	"timestamptz"	7	0	0	0
5022	1038	"arg_1"	"decimal"	4	0	1	1
5023	1038	"arg_2"	"timestamptz"	7	0	1	2
5024	1039	"res_0"	"timestamptz"	7	0	0	0
5025	1039	"arg_1"	"decimal"	9	0	1	1
5026	1039	"arg_2"	"timestamptz"	7	0	1	2
5027	1040	"res_0"	"timestamptz"	7	0	0	0
5028	1040	"arg_1"	"decimal"	18	0	1	1
5029	1040	"arg_2"	"timestamptz"	7	0	1	2
5030	1041	"res_0"	"timestamptz"	7	0	0	0
5031	1041	"arg_1"	"decimal"	39	0	1	1
5032	1041	"arg_2"	"timestamptz"	7	0	1	2
5033	1042	"res_0"	"timestamptz"	7	0	0	0
5034	1042	"arg_1"	"real"	24	0	1	1
5035	1042	"arg_2"	"timestamptz"	7	0	1	2
5036	1043	"res_0"	"timestamptz"	7	0	0	0
5037	1043	"arg_1"	"double"	53	0	1	1
5038	1043	"arg_2"	"timestamptz"	7	0	1	2
5039	1044	"res_0"	"timestamptz"	7	0	0	0
5040	1044	"arg_1"	"month_interval"	32	0	1	1
5041	1044	"arg_2"	"timestamptz"	7	0	1	2
5042	1045	"res_0"	"timestamptz"	7	0	0	0
5043	1045	"arg_1"	"sec_interval"	19	0	1	1
5044	1045	"arg_2"	"timestamptz"	7	0	1	2
5045	1046	"res_0"	"timestamptz"	7	0	0	0
5046	1046	"arg_1"	"time"	7	0	1	1
5047	1046	"arg_2"	"timestamptz"	7	0	1	2
5048	1047	"res_0"	"timestamptz"	7	0	0	0
5049	1047	"arg_1"	"timetz"	7	0	1	1
5050	1047	"arg_2"	"timestamptz"	7	0	1	2
5051	1048	"res_0"	"timestamptz"	7	0	0	0
5052	1048	"arg_1"	"date"	0	0	1	1
5053	1048	"arg_2"	"timestamptz"	7	0	1	2
5054	1049	"res_0"	"timestamptz"	7	0	0	0
5055	1049	"arg_1"	"timestamp"	7	0	1	1
5056	1049	"arg_2"	"timestamptz"	7	0	1	2
5057	1050	"res_0"	"timestamptz"	7	0	0	0
5058	1050	"arg_1"	"timestamptz"	7	0	1	1
5059	1050	"arg_2"	"timestamptz"	7	0	1	2
5060	1051	"res_0"	"timestamptz"	7	0	0	0
5061	1051	"arg_1"	"blob"	0	0	1	1
5062	1051	"arg_2"	"timestamptz"	7	0	1	2
5063	1052	"res_0"	"timestamptz"	7	0	0	0
5064	1052	"arg_1"	"geometry"	0	0	1	1
5065	1052	"arg_2"	"timestamptz"	7	0	1	2
5066	1053	"res_0"	"timestamptz"	7	0	0	0
5067	1053	"arg_1"	"geometrya"	0	0	1	1
5068	1053	"arg_2"	"timestamptz"	7	0	1	2
5069	1054	"res_0"	"timestamptz"	7	0	0	0
5070	1054	"arg_1"	"mbr"	0	0	1	1
5071	1054	"arg_2"	"timestamptz"	7	0	1	2
5072	1055	"res_0"	"blob"	0	0	0	0
5073	1055	"arg_1"	"oid"	63	0	1	1
5074	1055	"arg_2"	"blob"	0	0	1	2
5075	1056	"res_0"	"blob"	0	0	0	0
5076	1056	"arg_1"	"tinyint"	8	0	1	1
5077	1056	"arg_2"	"blob"	0	0	1	2
5078	1057	"res_0"	"blob"	0	0	0	0
5079	1057	"arg_1"	"smallint"	16	0	1	1
5080	1057	"arg_2"	"blob"	0	0	1	2
5081	1058	"res_0"	"blob"	0	0	0	0
5082	1058	"arg_1"	"int"	32	0	1	1
5083	1058	"arg_2"	"blob"	0	0	1	2
5084	1059	"res_0"	"blob"	0	0	0	0
5085	1059	"arg_1"	"bigint"	64	0	1	1
5086	1059	"arg_2"	"blob"	0	0	1	2
5087	1060	"res_0"	"blob"	0	0	0	0
5088	1060	"arg_1"	"wrd"	64	0	1	1
5089	1060	"arg_2"	"blob"	0	0	1	2
5090	1061	"res_0"	"blob"	0	0	0	0
5091	1061	"arg_1"	"hugeint"	128	0	1	1
5092	1061	"arg_2"	"blob"	0	0	1	2
5093	1062	"res_0"	"blob"	0	0	0	0
5094	1062	"arg_1"	"decimal"	2	0	1	1
5095	1062	"arg_2"	"blob"	0	0	1	2
5096	1063	"res_0"	"blob"	0	0	0	0
5097	1063	"arg_1"	"decimal"	4	0	1	1
5098	1063	"arg_2"	"blob"	0	0	1	2
5099	1064	"res_0"	"blob"	0	0	0	0
5100	1064	"arg_1"	"decimal"	9	0	1	1
5101	1064	"arg_2"	"blob"	0	0	1	2
5102	1065	"res_0"	"blob"	0	0	0	0
5103	1065	"arg_1"	"decimal"	18	0	1	1
5104	1065	"arg_2"	"blob"	0	0	1	2
5105	1066	"res_0"	"blob"	0	0	0	0
5106	1066	"arg_1"	"decimal"	39	0	1	1
5107	1066	"arg_2"	"blob"	0	0	1	2
5108	1067	"res_0"	"blob"	0	0	0	0
5109	1067	"arg_1"	"real"	24	0	1	1
5110	1067	"arg_2"	"blob"	0	0	1	2
5111	1068	"res_0"	"blob"	0	0	0	0
5112	1068	"arg_1"	"double"	53	0	1	1
5113	1068	"arg_2"	"blob"	0	0	1	2
5114	1069	"res_0"	"blob"	0	0	0	0
5115	1069	"arg_1"	"month_interval"	32	0	1	1
5116	1069	"arg_2"	"blob"	0	0	1	2
5117	1070	"res_0"	"blob"	0	0	0	0
5118	1070	"arg_1"	"sec_interval"	19	0	1	1
5119	1070	"arg_2"	"blob"	0	0	1	2
5120	1071	"res_0"	"blob"	0	0	0	0
5121	1071	"arg_1"	"time"	7	0	1	1
5122	1071	"arg_2"	"blob"	0	0	1	2
5123	1072	"res_0"	"blob"	0	0	0	0
5124	1072	"arg_1"	"timetz"	7	0	1	1
5125	1072	"arg_2"	"blob"	0	0	1	2
5126	1073	"res_0"	"blob"	0	0	0	0
5127	1073	"arg_1"	"date"	0	0	1	1
5128	1073	"arg_2"	"blob"	0	0	1	2
5129	1074	"res_0"	"blob"	0	0	0	0
5130	1074	"arg_1"	"timestamp"	7	0	1	1
5131	1074	"arg_2"	"blob"	0	0	1	2
5132	1075	"res_0"	"blob"	0	0	0	0
5133	1075	"arg_1"	"timestamptz"	7	0	1	1
5134	1075	"arg_2"	"blob"	0	0	1	2
5135	1076	"res_0"	"blob"	0	0	0	0
5136	1076	"arg_1"	"blob"	0	0	1	1
5137	1076	"arg_2"	"blob"	0	0	1	2
5138	1077	"res_0"	"blob"	0	0	0	0
5139	1077	"arg_1"	"geometry"	0	0	1	1
5140	1077	"arg_2"	"blob"	0	0	1	2
5141	1078	"res_0"	"blob"	0	0	0	0
5142	1078	"arg_1"	"geometrya"	0	0	1	1
5143	1078	"arg_2"	"blob"	0	0	1	2
5144	1079	"res_0"	"blob"	0	0	0	0
5145	1079	"arg_1"	"mbr"	0	0	1	1
5146	1079	"arg_2"	"blob"	0	0	1	2
5147	1080	"res_0"	"geometry"	0	0	0	0
5148	1080	"arg_1"	"oid"	63	0	1	1
5149	1080	"arg_2"	"geometry"	0	0	1	2
5150	1081	"res_0"	"geometry"	0	0	0	0
5151	1081	"arg_1"	"tinyint"	8	0	1	1
5152	1081	"arg_2"	"geometry"	0	0	1	2
5153	1082	"res_0"	"geometry"	0	0	0	0
5154	1082	"arg_1"	"smallint"	16	0	1	1
5155	1082	"arg_2"	"geometry"	0	0	1	2
5156	1083	"res_0"	"geometry"	0	0	0	0
5157	1083	"arg_1"	"int"	32	0	1	1
5158	1083	"arg_2"	"geometry"	0	0	1	2
5159	1084	"res_0"	"geometry"	0	0	0	0
5160	1084	"arg_1"	"bigint"	64	0	1	1
5161	1084	"arg_2"	"geometry"	0	0	1	2
5162	1085	"res_0"	"geometry"	0	0	0	0
5163	1085	"arg_1"	"wrd"	64	0	1	1
5164	1085	"arg_2"	"geometry"	0	0	1	2
5165	1086	"res_0"	"geometry"	0	0	0	0
5166	1086	"arg_1"	"hugeint"	128	0	1	1
5167	1086	"arg_2"	"geometry"	0	0	1	2
5168	1087	"res_0"	"geometry"	0	0	0	0
5169	1087	"arg_1"	"decimal"	2	0	1	1
5170	1087	"arg_2"	"geometry"	0	0	1	2
5171	1088	"res_0"	"geometry"	0	0	0	0
5172	1088	"arg_1"	"decimal"	4	0	1	1
5173	1088	"arg_2"	"geometry"	0	0	1	2
5174	1089	"res_0"	"geometry"	0	0	0	0
5175	1089	"arg_1"	"decimal"	9	0	1	1
5176	1089	"arg_2"	"geometry"	0	0	1	2
5177	1090	"res_0"	"geometry"	0	0	0	0
5178	1090	"arg_1"	"decimal"	18	0	1	1
5179	1090	"arg_2"	"geometry"	0	0	1	2
5180	1091	"res_0"	"geometry"	0	0	0	0
5181	1091	"arg_1"	"decimal"	39	0	1	1
5182	1091	"arg_2"	"geometry"	0	0	1	2
5183	1092	"res_0"	"geometry"	0	0	0	0
5184	1092	"arg_1"	"real"	24	0	1	1
5185	1092	"arg_2"	"geometry"	0	0	1	2
5186	1093	"res_0"	"geometry"	0	0	0	0
5187	1093	"arg_1"	"double"	53	0	1	1
5188	1093	"arg_2"	"geometry"	0	0	1	2
5189	1094	"res_0"	"geometry"	0	0	0	0
5190	1094	"arg_1"	"month_interval"	32	0	1	1
5191	1094	"arg_2"	"geometry"	0	0	1	2
5192	1095	"res_0"	"geometry"	0	0	0	0
5193	1095	"arg_1"	"sec_interval"	19	0	1	1
5194	1095	"arg_2"	"geometry"	0	0	1	2
5195	1096	"res_0"	"geometry"	0	0	0	0
5196	1096	"arg_1"	"time"	7	0	1	1
5197	1096	"arg_2"	"geometry"	0	0	1	2
5198	1097	"res_0"	"geometry"	0	0	0	0
5199	1097	"arg_1"	"timetz"	7	0	1	1
5200	1097	"arg_2"	"geometry"	0	0	1	2
5201	1098	"res_0"	"geometry"	0	0	0	0
5202	1098	"arg_1"	"date"	0	0	1	1
5203	1098	"arg_2"	"geometry"	0	0	1	2
5204	1099	"res_0"	"geometry"	0	0	0	0
5205	1099	"arg_1"	"timestamp"	7	0	1	1
5206	1099	"arg_2"	"geometry"	0	0	1	2
5207	1100	"res_0"	"geometry"	0	0	0	0
5208	1100	"arg_1"	"timestamptz"	7	0	1	1
5209	1100	"arg_2"	"geometry"	0	0	1	2
5210	1101	"res_0"	"geometry"	0	0	0	0
5211	1101	"arg_1"	"blob"	0	0	1	1
5212	1101	"arg_2"	"geometry"	0	0	1	2
5213	1102	"res_0"	"geometry"	0	0	0	0
5214	1102	"arg_1"	"geometry"	0	0	1	1
5215	1102	"arg_2"	"geometry"	0	0	1	2
5216	1103	"res_0"	"geometry"	0	0	0	0
5217	1103	"arg_1"	"geometrya"	0	0	1	1
5218	1103	"arg_2"	"geometry"	0	0	1	2
5219	1104	"res_0"	"geometry"	0	0	0	0
5220	1104	"arg_1"	"mbr"	0	0	1	1
5221	1104	"arg_2"	"geometry"	0	0	1	2
5222	1105	"res_0"	"geometrya"	0	0	0	0
5223	1105	"arg_1"	"oid"	63	0	1	1
5224	1105	"arg_2"	"geometrya"	0	0	1	2
5225	1106	"res_0"	"geometrya"	0	0	0	0
5226	1106	"arg_1"	"tinyint"	8	0	1	1
5227	1106	"arg_2"	"geometrya"	0	0	1	2
5228	1107	"res_0"	"geometrya"	0	0	0	0
5229	1107	"arg_1"	"smallint"	16	0	1	1
5230	1107	"arg_2"	"geometrya"	0	0	1	2
5231	1108	"res_0"	"geometrya"	0	0	0	0
5232	1108	"arg_1"	"int"	32	0	1	1
5233	1108	"arg_2"	"geometrya"	0	0	1	2
5234	1109	"res_0"	"geometrya"	0	0	0	0
5235	1109	"arg_1"	"bigint"	64	0	1	1
5236	1109	"arg_2"	"geometrya"	0	0	1	2
5237	1110	"res_0"	"geometrya"	0	0	0	0
5238	1110	"arg_1"	"wrd"	64	0	1	1
5239	1110	"arg_2"	"geometrya"	0	0	1	2
5240	1111	"res_0"	"geometrya"	0	0	0	0
5241	1111	"arg_1"	"hugeint"	128	0	1	1
5242	1111	"arg_2"	"geometrya"	0	0	1	2
5243	1112	"res_0"	"geometrya"	0	0	0	0
5244	1112	"arg_1"	"decimal"	2	0	1	1
5245	1112	"arg_2"	"geometrya"	0	0	1	2
5246	1113	"res_0"	"geometrya"	0	0	0	0
5247	1113	"arg_1"	"decimal"	4	0	1	1
5248	1113	"arg_2"	"geometrya"	0	0	1	2
5249	1114	"res_0"	"geometrya"	0	0	0	0
5250	1114	"arg_1"	"decimal"	9	0	1	1
5251	1114	"arg_2"	"geometrya"	0	0	1	2
5252	1115	"res_0"	"geometrya"	0	0	0	0
5253	1115	"arg_1"	"decimal"	18	0	1	1
5254	1115	"arg_2"	"geometrya"	0	0	1	2
5255	1116	"res_0"	"geometrya"	0	0	0	0
5256	1116	"arg_1"	"decimal"	39	0	1	1
5257	1116	"arg_2"	"geometrya"	0	0	1	2
5258	1117	"res_0"	"geometrya"	0	0	0	0
5259	1117	"arg_1"	"real"	24	0	1	1
5260	1117	"arg_2"	"geometrya"	0	0	1	2
5261	1118	"res_0"	"geometrya"	0	0	0	0
5262	1118	"arg_1"	"double"	53	0	1	1
5263	1118	"arg_2"	"geometrya"	0	0	1	2
5264	1119	"res_0"	"geometrya"	0	0	0	0
5265	1119	"arg_1"	"month_interval"	32	0	1	1
5266	1119	"arg_2"	"geometrya"	0	0	1	2
5267	1120	"res_0"	"geometrya"	0	0	0	0
5268	1120	"arg_1"	"sec_interval"	19	0	1	1
5269	1120	"arg_2"	"geometrya"	0	0	1	2
5270	1121	"res_0"	"geometrya"	0	0	0	0
5271	1121	"arg_1"	"time"	7	0	1	1
5272	1121	"arg_2"	"geometrya"	0	0	1	2
5273	1122	"res_0"	"geometrya"	0	0	0	0
5274	1122	"arg_1"	"timetz"	7	0	1	1
5275	1122	"arg_2"	"geometrya"	0	0	1	2
5276	1123	"res_0"	"geometrya"	0	0	0	0
5277	1123	"arg_1"	"date"	0	0	1	1
5278	1123	"arg_2"	"geometrya"	0	0	1	2
5279	1124	"res_0"	"geometrya"	0	0	0	0
5280	1124	"arg_1"	"timestamp"	7	0	1	1
5281	1124	"arg_2"	"geometrya"	0	0	1	2
5282	1125	"res_0"	"geometrya"	0	0	0	0
5283	1125	"arg_1"	"timestamptz"	7	0	1	1
5284	1125	"arg_2"	"geometrya"	0	0	1	2
5285	1126	"res_0"	"geometrya"	0	0	0	0
5286	1126	"arg_1"	"blob"	0	0	1	1
5287	1126	"arg_2"	"geometrya"	0	0	1	2
5288	1127	"res_0"	"geometrya"	0	0	0	0
5289	1127	"arg_1"	"geometry"	0	0	1	1
5290	1127	"arg_2"	"geometrya"	0	0	1	2
5291	1128	"res_0"	"geometrya"	0	0	0	0
5292	1128	"arg_1"	"geometrya"	0	0	1	1
5293	1128	"arg_2"	"geometrya"	0	0	1	2
5294	1129	"res_0"	"geometrya"	0	0	0	0
5295	1129	"arg_1"	"mbr"	0	0	1	1
5296	1129	"arg_2"	"geometrya"	0	0	1	2
5297	1130	"res_0"	"mbr"	0	0	0	0
5298	1130	"arg_1"	"oid"	63	0	1	1
5299	1130	"arg_2"	"mbr"	0	0	1	2
5300	1131	"res_0"	"mbr"	0	0	0	0
5301	1131	"arg_1"	"tinyint"	8	0	1	1
5302	1131	"arg_2"	"mbr"	0	0	1	2
5303	1132	"res_0"	"mbr"	0	0	0	0
5304	1132	"arg_1"	"smallint"	16	0	1	1
5305	1132	"arg_2"	"mbr"	0	0	1	2
5306	1133	"res_0"	"mbr"	0	0	0	0
5307	1133	"arg_1"	"int"	32	0	1	1
5308	1133	"arg_2"	"mbr"	0	0	1	2
5309	1134	"res_0"	"mbr"	0	0	0	0
5310	1134	"arg_1"	"bigint"	64	0	1	1
5311	1134	"arg_2"	"mbr"	0	0	1	2
5312	1135	"res_0"	"mbr"	0	0	0	0
5313	1135	"arg_1"	"wrd"	64	0	1	1
5314	1135	"arg_2"	"mbr"	0	0	1	2
5315	1136	"res_0"	"mbr"	0	0	0	0
5316	1136	"arg_1"	"hugeint"	128	0	1	1
5317	1136	"arg_2"	"mbr"	0	0	1	2
5318	1137	"res_0"	"mbr"	0	0	0	0
5319	1137	"arg_1"	"decimal"	2	0	1	1
5320	1137	"arg_2"	"mbr"	0	0	1	2
5321	1138	"res_0"	"mbr"	0	0	0	0
5322	1138	"arg_1"	"decimal"	4	0	1	1
5323	1138	"arg_2"	"mbr"	0	0	1	2
5324	1139	"res_0"	"mbr"	0	0	0	0
5325	1139	"arg_1"	"decimal"	9	0	1	1
5326	1139	"arg_2"	"mbr"	0	0	1	2
5327	1140	"res_0"	"mbr"	0	0	0	0
5328	1140	"arg_1"	"decimal"	18	0	1	1
5329	1140	"arg_2"	"mbr"	0	0	1	2
5330	1141	"res_0"	"mbr"	0	0	0	0
5331	1141	"arg_1"	"decimal"	39	0	1	1
5332	1141	"arg_2"	"mbr"	0	0	1	2
5333	1142	"res_0"	"mbr"	0	0	0	0
5334	1142	"arg_1"	"real"	24	0	1	1
5335	1142	"arg_2"	"mbr"	0	0	1	2
5336	1143	"res_0"	"mbr"	0	0	0	0
5337	1143	"arg_1"	"double"	53	0	1	1
5338	1143	"arg_2"	"mbr"	0	0	1	2
5339	1144	"res_0"	"mbr"	0	0	0	0
5340	1144	"arg_1"	"month_interval"	32	0	1	1
5341	1144	"arg_2"	"mbr"	0	0	1	2
5342	1145	"res_0"	"mbr"	0	0	0	0
5343	1145	"arg_1"	"sec_interval"	19	0	1	1
5344	1145	"arg_2"	"mbr"	0	0	1	2
5345	1146	"res_0"	"mbr"	0	0	0	0
5346	1146	"arg_1"	"time"	7	0	1	1
5347	1146	"arg_2"	"mbr"	0	0	1	2
5348	1147	"res_0"	"mbr"	0	0	0	0
5349	1147	"arg_1"	"timetz"	7	0	1	1
5350	1147	"arg_2"	"mbr"	0	0	1	2
5351	1148	"res_0"	"mbr"	0	0	0	0
5352	1148	"arg_1"	"date"	0	0	1	1
5353	1148	"arg_2"	"mbr"	0	0	1	2
5354	1149	"res_0"	"mbr"	0	0	0	0
5355	1149	"arg_1"	"timestamp"	7	0	1	1
5356	1149	"arg_2"	"mbr"	0	0	1	2
5357	1150	"res_0"	"mbr"	0	0	0	0
5358	1150	"arg_1"	"timestamptz"	7	0	1	1
5359	1150	"arg_2"	"mbr"	0	0	1	2
5360	1151	"res_0"	"mbr"	0	0	0	0
5361	1151	"arg_1"	"blob"	0	0	1	1
5362	1151	"arg_2"	"mbr"	0	0	1	2
5363	1152	"res_0"	"mbr"	0	0	0	0
5364	1152	"arg_1"	"geometry"	0	0	1	1
5365	1152	"arg_2"	"mbr"	0	0	1	2
5366	1153	"res_0"	"mbr"	0	0	0	0
5367	1153	"arg_1"	"geometrya"	0	0	1	1
5368	1153	"arg_2"	"mbr"	0	0	1	2
5369	1154	"res_0"	"mbr"	0	0	0	0
5370	1154	"arg_1"	"mbr"	0	0	1	1
5371	1154	"arg_2"	"mbr"	0	0	1	2
5372	1155	"res_0"	"real"	24	0	0	0
5373	1155	"arg_1"	"real"	24	0	1	1
5374	1155	"arg_2"	"real"	24	0	1	2
5375	1156	"res_0"	"real"	24	0	0	0
5376	1156	"arg_1"	"real"	24	0	1	1
5377	1157	"res_0"	"real"	24	0	0	0
5378	1157	"arg_1"	"real"	24	0	1	1
5379	1158	"res_0"	"real"	24	0	0	0
5380	1158	"arg_1"	"real"	24	0	1	1
5381	1159	"res_0"	"real"	24	0	0	0
5382	1159	"arg_1"	"real"	24	0	1	1
5383	1160	"res_0"	"real"	24	0	0	0
5384	1160	"arg_1"	"real"	24	0	1	1
5385	1161	"res_0"	"real"	24	0	0	0
5386	1161	"arg_1"	"real"	24	0	1	1
5387	1162	"res_0"	"real"	24	0	0	0
5388	1162	"arg_1"	"real"	24	0	1	1
5389	1163	"res_0"	"real"	24	0	0	0
5390	1163	"arg_1"	"real"	24	0	1	1
5391	1164	"res_0"	"real"	24	0	0	0
5392	1164	"arg_1"	"real"	24	0	1	1
5393	1165	"res_0"	"real"	24	0	0	0
5394	1165	"arg_1"	"real"	24	0	1	1
5395	1165	"arg_2"	"real"	24	0	1	2
5396	1166	"res_0"	"real"	24	0	0	0
5397	1166	"arg_1"	"real"	24	0	1	1
5398	1167	"res_0"	"real"	24	0	0	0
5399	1167	"arg_1"	"real"	24	0	1	1
5400	1168	"res_0"	"real"	24	0	0	0
5401	1168	"arg_1"	"real"	24	0	1	1
5402	1169	"res_0"	"real"	24	0	0	0
5403	1169	"arg_1"	"real"	24	0	1	1
5404	1170	"res_0"	"real"	24	0	0	0
5405	1170	"arg_1"	"real"	24	0	1	1
5406	1171	"res_0"	"real"	24	0	0	0
5407	1171	"arg_1"	"real"	24	0	1	1
5408	1172	"res_0"	"real"	24	0	0	0
5409	1172	"arg_1"	"real"	24	0	1	1
5410	1173	"res_0"	"real"	24	0	0	0
5411	1173	"arg_1"	"real"	24	0	1	1
5412	1174	"res_0"	"double"	53	0	0	0
5413	1174	"arg_1"	"double"	53	0	1	1
5414	1174	"arg_2"	"double"	53	0	1	2
5415	1175	"res_0"	"double"	53	0	0	0
5416	1175	"arg_1"	"double"	53	0	1	1
5417	1176	"res_0"	"double"	53	0	0	0
5418	1176	"arg_1"	"double"	53	0	1	1
5419	1177	"res_0"	"double"	53	0	0	0
5420	1177	"arg_1"	"double"	53	0	1	1
5421	1178	"res_0"	"double"	53	0	0	0
5422	1178	"arg_1"	"double"	53	0	1	1
5423	1179	"res_0"	"double"	53	0	0	0
5424	1179	"arg_1"	"double"	53	0	1	1
5425	1180	"res_0"	"double"	53	0	0	0
5426	1180	"arg_1"	"double"	53	0	1	1
5427	1181	"res_0"	"double"	53	0	0	0
5428	1181	"arg_1"	"double"	53	0	1	1
5429	1182	"res_0"	"double"	53	0	0	0
5430	1182	"arg_1"	"double"	53	0	1	1
5431	1183	"res_0"	"double"	53	0	0	0
5432	1183	"arg_1"	"double"	53	0	1	1
5433	1184	"res_0"	"double"	53	0	0	0
5434	1184	"arg_1"	"double"	53	0	1	1
5435	1184	"arg_2"	"double"	53	0	1	2
5436	1185	"res_0"	"double"	53	0	0	0
5437	1185	"arg_1"	"double"	53	0	1	1
5438	1186	"res_0"	"double"	53	0	0	0
5439	1186	"arg_1"	"double"	53	0	1	1
5440	1187	"res_0"	"double"	53	0	0	0
5441	1187	"arg_1"	"double"	53	0	1	1
5442	1188	"res_0"	"double"	53	0	0	0
5443	1188	"arg_1"	"double"	53	0	1	1
5444	1189	"res_0"	"double"	53	0	0	0
5445	1189	"arg_1"	"double"	53	0	1	1
5446	1190	"res_0"	"double"	53	0	0	0
5447	1190	"arg_1"	"double"	53	0	1	1
5448	1191	"res_0"	"double"	53	0	0	0
5449	1191	"arg_1"	"double"	53	0	1	1
5450	1192	"res_0"	"double"	53	0	0	0
5451	1192	"arg_1"	"double"	53	0	1	1
5452	1193	"res_0"	"double"	53	0	0	0
5453	1194	"res_0"	"int"	32	0	0	0
5454	1195	"res_0"	"int"	32	0	0	0
5455	1195	"arg_1"	"int"	32	0	1	1
5456	1196	"res_0"	"date"	0	0	0	0
5457	1197	"res_0"	"date"	0	0	0	0
5458	1198	"res_0"	"timetz"	7	0	0	0
5459	1199	"res_0"	"timetz"	7	0	0	0
5460	1200	"res_0"	"timestamptz"	7	0	0	0
5461	1201	"res_0"	"time"	7	0	0	0
5462	1202	"res_0"	"timestamp"	7	0	0	0
5463	1203	"res_0"	"month_interval"	32	0	0	0
5464	1203	"arg_1"	"date"	0	0	1	1
5465	1203	"arg_2"	"date"	0	0	1	2
5466	1204	"res_0"	"sec_interval"	19	0	0	0
5467	1204	"arg_1"	"timetz"	7	0	1	1
5468	1204	"arg_2"	"timetz"	7	0	1	2
5469	1205	"res_0"	"sec_interval"	19	0	0	0
5470	1205	"arg_1"	"time"	7	0	1	1
5471	1205	"arg_2"	"time"	7	0	1	2
5472	1206	"res_0"	"sec_interval"	19	0	0	0
5473	1206	"arg_1"	"timestamptz"	7	0	1	1
5474	1206	"arg_2"	"timestamptz"	7	0	1	2
5475	1207	"res_0"	"sec_interval"	19	0	0	0
5476	1207	"arg_1"	"timestamp"	7	0	1	1
5477	1207	"arg_2"	"timestamp"	7	0	1	2
5478	1208	"res_0"	"date"	0	0	0	0
5479	1208	"arg_1"	"date"	0	0	1	1
5480	1208	"arg_2"	"sec_interval"	19	0	1	2
5481	1209	"res_0"	"date"	0	0	0	0
5482	1209	"arg_1"	"date"	0	0	1	1
5483	1209	"arg_2"	"month_interval"	32	0	1	2
5484	1210	"res_0"	"time"	7	0	0	0
5485	1210	"arg_1"	"time"	7	0	1	1
5486	1210	"arg_2"	"sec_interval"	19	0	1	2
5487	1211	"res_0"	"timetz"	7	0	0	0
5488	1211	"arg_1"	"timetz"	7	0	1	1
5489	1211	"arg_2"	"sec_interval"	19	0	1	2
5490	1212	"res_0"	"timestamp"	7	0	0	0
5491	1212	"arg_1"	"timestamp"	7	0	1	1
5492	1212	"arg_2"	"sec_interval"	19	0	1	2
5493	1213	"res_0"	"timestamp"	7	0	0	0
5494	1213	"arg_1"	"timestamp"	7	0	1	1
5495	1213	"arg_2"	"month_interval"	32	0	1	2
5496	1214	"res_0"	"timestamptz"	7	0	0	0
5497	1214	"arg_1"	"timestamptz"	7	0	1	1
5498	1214	"arg_2"	"sec_interval"	19	0	1	2
5499	1215	"res_0"	"timestamptz"	7	0	0	0
5500	1215	"arg_1"	"timestamptz"	7	0	1	1
5501	1215	"arg_2"	"month_interval"	32	0	1	2
5502	1216	"res_0"	"date"	0	0	0	0
5503	1216	"arg_1"	"date"	0	0	1	1
5504	1216	"arg_2"	"sec_interval"	19	0	1	2
5505	1217	"res_0"	"date"	0	0	0	0
5506	1217	"arg_1"	"date"	0	0	1	1
5507	1217	"arg_2"	"month_interval"	32	0	1	2
5508	1218	"res_0"	"timestamp"	7	0	0	0
5509	1218	"arg_1"	"timestamp"	7	0	1	1
5510	1218	"arg_2"	"sec_interval"	19	0	1	2
5511	1219	"res_0"	"timestamp"	7	0	0	0
5512	1219	"arg_1"	"timestamp"	7	0	1	1
5513	1219	"arg_2"	"month_interval"	32	0	1	2
5514	1220	"res_0"	"timestamptz"	7	0	0	0
5515	1220	"arg_1"	"timestamptz"	7	0	1	1
5516	1220	"arg_2"	"sec_interval"	19	0	1	2
5517	1221	"res_0"	"timestamptz"	7	0	0	0
5518	1221	"arg_1"	"timestamptz"	7	0	1	1
5519	1221	"arg_2"	"month_interval"	32	0	1	2
5520	1222	"res_0"	"time"	7	0	0	0
5521	1222	"arg_1"	"time"	7	0	1	1
5522	1222	"arg_2"	"sec_interval"	19	0	1	2
5523	1223	"res_0"	"timetz"	7	0	0	0
5524	1223	"arg_1"	"timetz"	7	0	1	1
5525	1223	"arg_2"	"sec_interval"	19	0	1	2
5526	1224	"res_0"	"sec_interval"	19	0	0	0
5527	1225	"res_0"	"int"	32	0	0	0
5528	1225	"arg_1"	"date"	0	0	1	1
5529	1226	"res_0"	"int"	32	0	0	0
5530	1226	"arg_1"	"date"	0	0	1	1
5531	1227	"res_0"	"int"	32	0	0	0
5532	1227	"arg_1"	"date"	0	0	1	1
5533	1228	"res_0"	"int"	32	0	0	0
5534	1228	"arg_1"	"time"	7	0	1	1
5535	1229	"res_0"	"int"	32	0	0	0
5536	1229	"arg_1"	"time"	7	0	1	1
5537	1230	"res_0"	"decimal"	9	3	0	0
5538	1230	"arg_1"	"time"	7	0	1	1
5539	1231	"res_0"	"int"	32	0	0	0
5540	1231	"arg_1"	"timetz"	7	0	1	1
5541	1232	"res_0"	"int"	32	0	0	0
5542	1232	"arg_1"	"timetz"	7	0	1	1
5543	1233	"res_0"	"decimal"	9	3	0	0
5544	1233	"arg_1"	"timetz"	7	0	1	1
5545	1234	"res_0"	"int"	32	0	0	0
5546	1234	"arg_1"	"timestamp"	7	0	1	1
5547	1235	"res_0"	"int"	32	0	0	0
5548	1235	"arg_1"	"timestamp"	7	0	1	1
5549	1236	"res_0"	"int"	32	0	0	0
5550	1236	"arg_1"	"timestamp"	7	0	1	1
5551	1237	"res_0"	"int"	32	0	0	0
5552	1237	"arg_1"	"timestamp"	7	0	1	1
5553	1238	"res_0"	"int"	32	0	0	0
5554	1238	"arg_1"	"timestamp"	7	0	1	1
5555	1239	"res_0"	"decimal"	9	3	0	0
5556	1239	"arg_1"	"timestamp"	7	0	1	1
5557	1240	"res_0"	"int"	32	0	0	0
5558	1240	"arg_1"	"timestamptz"	7	0	1	1
5559	1241	"res_0"	"int"	32	0	0	0
5560	1241	"arg_1"	"timestamptz"	7	0	1	1
5561	1242	"res_0"	"int"	32	0	0	0
5562	1242	"arg_1"	"timestamptz"	7	0	1	1
5563	1243	"res_0"	"int"	32	0	0	0
5564	1243	"arg_1"	"timestamptz"	7	0	1	1
5565	1244	"res_0"	"int"	32	0	0	0
5566	1244	"arg_1"	"timestamptz"	7	0	1	1
5567	1245	"res_0"	"decimal"	9	3	0	0
5568	1245	"arg_1"	"timestamptz"	7	0	1	1
5569	1246	"res_0"	"int"	32	0	0	0
5570	1246	"arg_1"	"month_interval"	32	0	1	1
5571	1247	"res_0"	"int"	32	0	0	0
5572	1247	"arg_1"	"month_interval"	32	0	1	1
5573	1248	"res_0"	"bigint"	64	0	0	0
5574	1248	"arg_1"	"sec_interval"	19	0	1	1
5575	1249	"res_0"	"int"	32	0	0	0
5576	1249	"arg_1"	"sec_interval"	19	0	1	1
5577	1250	"res_0"	"int"	32	0	0	0
5578	1250	"arg_1"	"sec_interval"	19	0	1	1
5579	1251	"res_0"	"int"	32	0	0	0
5580	1251	"arg_1"	"sec_interval"	19	0	1	1
5581	1252	"res_0"	"int"	32	0	0	0
5582	1252	"arg_1"	"date"	0	0	1	1
5583	1253	"res_0"	"int"	32	0	0	0
5584	1253	"arg_1"	"date"	0	0	1	1
5585	1254	"res_0"	"int"	32	0	0	0
5586	1254	"arg_1"	"date"	0	0	1	1
5587	1255	"res_0"	"int"	32	0	0	0
5588	1255	"arg_1"	"date"	0	0	1	1
5589	1256	"res_0"	"int"	32	0	0	0
5590	1256	"arg_1"	"date"	0	0	1	1
5591	1257	"res_0"	"bigint"	64	0	0	0
5592	1257	"arg_1"	"varchar"	0	0	1	1
5593	1257	"arg_2"	"varchar"	0	0	1	2
5594	1258	"res_0"	"bigint"	64	0	0	0
5595	1258	"arg_1"	"varchar"	0	0	1	1
5596	1258	"arg_2"	"varchar"	0	0	1	2
5597	1259	"res_0"	"bigint"	64	0	0	0
5598	1259	"arg_1"	"varchar"	0	0	1	1
5599	1259	"arg_2"	"varchar"	0	0	1	2
5600	1259	"arg_3"	"bigint"	64	0	1	3
5601	1260	"res_0"	"tinyint"	8	0	0	0
5602	1260	"arg_1"	"char"	0	0	1	1
5603	1260	"arg_2"	"boolean"	1	0	1	2
5604	1261	"res_0"	"smallint"	16	0	0	0
5605	1261	"arg_1"	"char"	0	0	1	1
5606	1261	"arg_2"	"boolean"	1	0	1	2
5607	1262	"res_0"	"int"	32	0	0	0
5608	1262	"arg_1"	"char"	0	0	1	1
5609	1262	"arg_2"	"boolean"	1	0	1	2
5610	1263	"res_0"	"char"	0	0	0	0
5611	1263	"arg_1"	"char"	0	0	1	1
5612	1264	"res_0"	"int"	32	0	0	0
5613	1264	"arg_1"	"char"	0	0	1	1
5614	1264	"arg_2"	"char"	0	0	1	2
5615	1265	"res_0"	"int"	32	0	0	0
5616	1265	"arg_1"	"char"	0	0	1	1
5617	1265	"arg_2"	"char"	0	0	1	2
5618	1265	"arg_3"	"int"	32	0	1	3
5619	1266	"res_0"	"char"	0	0	0	0
5620	1266	"arg_1"	"char"	0	0	1	1
5621	1266	"arg_2"	"int"	32	0	1	2
5622	1267	"res_0"	"char"	0	0	0	0
5623	1267	"arg_1"	"char"	0	0	1	1
5624	1267	"arg_2"	"int"	32	0	1	2
5625	1267	"arg_3"	"int"	32	0	1	3
5626	1268	"res_0"	"boolean"	1	0	0	0
5627	1268	"arg_1"	"char"	0	0	1	1
5628	1268	"arg_2"	"char"	0	0	1	2
5629	1269	"res_0"	"boolean"	1	0	0	0
5630	1269	"arg_1"	"char"	0	0	1	1
5631	1269	"arg_2"	"char"	0	0	1	2
5632	1269	"arg_3"	"char"	0	0	1	3
5633	1270	"res_0"	"boolean"	1	0	0	0
5634	1270	"arg_1"	"char"	0	0	1	1
5635	1270	"arg_2"	"char"	0	0	1	2
5636	1271	"res_0"	"boolean"	1	0	0	0
5637	1271	"arg_1"	"char"	0	0	1	1
5638	1271	"arg_2"	"char"	0	0	1	2
5639	1271	"arg_3"	"char"	0	0	1	3
5640	1272	"res_0"	"boolean"	1	0	0	0
5641	1272	"arg_1"	"char"	0	0	1	1
5642	1272	"arg_2"	"char"	0	0	1	2
5643	1273	"res_0"	"boolean"	1	0	0	0
5644	1273	"arg_1"	"char"	0	0	1	1
5645	1273	"arg_2"	"char"	0	0	1	2
5646	1273	"arg_3"	"char"	0	0	1	3
5647	1274	"res_0"	"boolean"	1	0	0	0
5648	1274	"arg_1"	"char"	0	0	1	1
5649	1274	"arg_2"	"char"	0	0	1	2
5650	1275	"res_0"	"boolean"	1	0	0	0
5651	1275	"arg_1"	"char"	0	0	1	1
5652	1275	"arg_2"	"char"	0	0	1	2
5653	1275	"arg_3"	"char"	0	0	1	3
5654	1276	"res_0"	"int"	32	0	0	0
5655	1276	"arg_1"	"char"	0	0	1	1
5656	1276	"arg_2"	"char"	0	0	1	2
5657	1277	"res_0"	"char"	0	0	0	0
5658	1277	"arg_1"	"char"	0	0	1	1
5659	1277	"arg_2"	"int"	32	0	1	2
5660	1278	"res_0"	"char"	0	0	0	0
5661	1278	"arg_1"	"char"	0	0	1	1
5662	1278	"arg_2"	"char"	0	0	1	2
5663	1279	"res_0"	"int"	32	0	0	0
5664	1279	"arg_1"	"char"	0	0	1	1
5665	1280	"res_0"	"char"	0	0	0	0
5666	1280	"arg_1"	"int"	32	0	1	1
5667	1281	"res_0"	"int"	32	0	0	0
5668	1281	"arg_1"	"char"	0	0	1	1
5669	1282	"res_0"	"char"	0	0	0	0
5670	1282	"arg_1"	"char"	0	0	1	1
5671	1282	"arg_2"	"int"	32	0	1	2
5672	1283	"res_0"	"char"	0	0	0	0
5673	1283	"arg_1"	"char"	0	0	1	1
5674	1283	"arg_2"	"int"	32	0	1	2
5675	1284	"res_0"	"char"	0	0	0	0
5676	1284	"arg_1"	"char"	0	0	1	1
5677	1285	"res_0"	"char"	0	0	0	0
5678	1285	"arg_1"	"char"	0	0	1	1
5679	1286	"res_0"	"char"	0	0	0	0
5680	1286	"arg_1"	"char"	0	0	1	1
5681	1287	"res_0"	"char"	0	0	0	0
5682	1287	"arg_1"	"char"	0	0	1	1
5683	1288	"res_0"	"char"	0	0	0	0
5684	1288	"arg_1"	"char"	0	0	1	1
5685	1289	"res_0"	"char"	0	0	0	0
5686	1289	"arg_1"	"char"	0	0	1	1
5687	1289	"arg_2"	"char"	0	0	1	2
5688	1290	"res_0"	"char"	0	0	0	0
5689	1290	"arg_1"	"char"	0	0	1	1
5690	1291	"res_0"	"char"	0	0	0	0
5691	1291	"arg_1"	"char"	0	0	1	1
5692	1291	"arg_2"	"char"	0	0	1	2
5693	1292	"res_0"	"char"	0	0	0	0
5694	1292	"arg_1"	"char"	0	0	1	1
5695	1293	"res_0"	"char"	0	0	0	0
5696	1293	"arg_1"	"char"	0	0	1	1
5697	1293	"arg_2"	"char"	0	0	1	2
5698	1294	"res_0"	"char"	0	0	0	0
5699	1294	"arg_1"	"char"	0	0	1	1
5700	1294	"arg_2"	"int"	32	0	1	2
5701	1295	"res_0"	"char"	0	0	0	0
5702	1295	"arg_1"	"char"	0	0	1	1
5703	1295	"arg_2"	"int"	32	0	1	2
5704	1295	"arg_3"	"char"	0	0	1	3
5705	1296	"res_0"	"char"	0	0	0	0
5706	1296	"arg_1"	"char"	0	0	1	1
5707	1296	"arg_2"	"int"	32	0	1	2
5708	1297	"res_0"	"char"	0	0	0	0
5709	1297	"arg_1"	"char"	0	0	1	1
5710	1297	"arg_2"	"int"	32	0	1	2
5711	1297	"arg_3"	"char"	0	0	1	3
5712	1298	"res_0"	"char"	0	0	0	0
5713	1298	"arg_1"	"char"	0	0	1	1
5714	1298	"arg_2"	"int"	32	0	1	2
5715	1298	"arg_3"	"int"	32	0	1	3
5716	1298	"arg_4"	"char"	0	0	1	4
5717	1299	"res_0"	"char"	0	0	0	0
5718	1299	"arg_1"	"char"	0	0	1	1
5719	1299	"arg_2"	"char"	0	0	1	2
5720	1299	"arg_3"	"char"	0	0	1	3
5721	1300	"res_0"	"char"	0	0	0	0
5722	1300	"arg_1"	"char"	0	0	1	1
5723	1300	"arg_2"	"int"	32	0	1	2
5724	1301	"res_0"	"char"	0	0	0	0
5725	1301	"arg_1"	"int"	32	0	1	1
5726	1302	"res_0"	"int"	32	0	0	0
5727	1302	"arg_1"	"char"	0	0	1	1
5728	1303	"res_0"	"int"	32	0	0	0
5729	1303	"arg_1"	"char"	0	0	1	1
5730	1304	"res_0"	"int"	32	0	0	0
5731	1304	"arg_1"	"char"	0	0	1	1
5732	1305	"res_0"	"char"	0	0	0	0
5733	1305	"arg_1"	"char"	0	0	1	1
5734	1306	"res_0"	"int"	32	0	0	0
5735	1306	"arg_1"	"char"	0	0	1	1
5736	1306	"arg_2"	"char"	0	0	1	2
5737	1307	"res_0"	"int"	32	0	0	0
5738	1307	"arg_1"	"char"	0	0	1	1
5739	1307	"arg_2"	"char"	0	0	1	2
5740	1308	"res_0"	"int"	32	0	0	0
5741	1308	"arg_1"	"char"	0	0	1	1
5742	1308	"arg_2"	"char"	0	0	1	2
5743	1309	"res_0"	"double"	53	0	0	0
5744	1309	"arg_1"	"char"	0	0	1	1
5745	1309	"arg_2"	"char"	0	0	1	2
5746	1310	"res_0"	"char"	0	0	0	0
5747	1310	"arg_1"	"char"	0	0	1	1
5748	1311	"res_0"	"int"	32	0	0	0
5749	1311	"arg_1"	"char"	0	0	1	1
5750	1311	"arg_2"	"char"	0	0	1	2
5751	1312	"res_0"	"int"	32	0	0	0
5752	1312	"arg_1"	"char"	0	0	1	1
5753	1312	"arg_2"	"char"	0	0	1	2
5754	1312	"arg_3"	"int"	32	0	1	3
5755	1312	"arg_4"	"int"	32	0	1	4
5756	1312	"arg_5"	"int"	32	0	1	5
5757	1313	"res_0"	"tinyint"	8	0	0	0
5758	1313	"arg_1"	"varchar"	0	0	1	1
5759	1313	"arg_2"	"boolean"	1	0	1	2
5760	1314	"res_0"	"smallint"	16	0	0	0
5761	1314	"arg_1"	"varchar"	0	0	1	1
5762	1314	"arg_2"	"boolean"	1	0	1	2
5763	1315	"res_0"	"int"	32	0	0	0
5764	1315	"arg_1"	"varchar"	0	0	1	1
5765	1315	"arg_2"	"boolean"	1	0	1	2
5766	1316	"res_0"	"varchar"	0	0	0	0
5767	1316	"arg_1"	"varchar"	0	0	1	1
5768	1317	"res_0"	"int"	32	0	0	0
5769	1317	"arg_1"	"varchar"	0	0	1	1
5770	1317	"arg_2"	"varchar"	0	0	1	2
5771	1318	"res_0"	"int"	32	0	0	0
5772	1318	"arg_1"	"varchar"	0	0	1	1
5773	1318	"arg_2"	"varchar"	0	0	1	2
5774	1318	"arg_3"	"int"	32	0	1	3
5775	1319	"res_0"	"varchar"	0	0	0	0
5776	1319	"arg_1"	"varchar"	0	0	1	1
5777	1319	"arg_2"	"int"	32	0	1	2
5778	1320	"res_0"	"varchar"	0	0	0	0
5779	1320	"arg_1"	"varchar"	0	0	1	1
5780	1320	"arg_2"	"int"	32	0	1	2
5781	1320	"arg_3"	"int"	32	0	1	3
5782	1321	"res_0"	"boolean"	1	0	0	0
5783	1321	"arg_1"	"varchar"	0	0	1	1
5784	1321	"arg_2"	"varchar"	0	0	1	2
5785	1322	"res_0"	"boolean"	1	0	0	0
5786	1322	"arg_1"	"varchar"	0	0	1	1
5787	1322	"arg_2"	"varchar"	0	0	1	2
5788	1322	"arg_3"	"varchar"	0	0	1	3
5789	1323	"res_0"	"boolean"	1	0	0	0
5790	1323	"arg_1"	"varchar"	0	0	1	1
5791	1323	"arg_2"	"varchar"	0	0	1	2
5792	1324	"res_0"	"boolean"	1	0	0	0
5793	1324	"arg_1"	"varchar"	0	0	1	1
5794	1324	"arg_2"	"varchar"	0	0	1	2
5795	1324	"arg_3"	"varchar"	0	0	1	3
5796	1325	"res_0"	"boolean"	1	0	0	0
5797	1325	"arg_1"	"varchar"	0	0	1	1
5798	1325	"arg_2"	"varchar"	0	0	1	2
5799	1326	"res_0"	"boolean"	1	0	0	0
5800	1326	"arg_1"	"varchar"	0	0	1	1
5801	1326	"arg_2"	"varchar"	0	0	1	2
5802	1326	"arg_3"	"varchar"	0	0	1	3
5803	1327	"res_0"	"boolean"	1	0	0	0
5804	1327	"arg_1"	"varchar"	0	0	1	1
5805	1327	"arg_2"	"varchar"	0	0	1	2
5806	1328	"res_0"	"boolean"	1	0	0	0
5807	1328	"arg_1"	"varchar"	0	0	1	1
5808	1328	"arg_2"	"varchar"	0	0	1	2
5809	1328	"arg_3"	"varchar"	0	0	1	3
5810	1329	"res_0"	"int"	32	0	0	0
5811	1329	"arg_1"	"varchar"	0	0	1	1
5812	1329	"arg_2"	"varchar"	0	0	1	2
5813	1330	"res_0"	"varchar"	0	0	0	0
5814	1330	"arg_1"	"varchar"	0	0	1	1
5815	1330	"arg_2"	"int"	32	0	1	2
5816	1331	"res_0"	"varchar"	0	0	0	0
5817	1331	"arg_1"	"varchar"	0	0	1	1
5818	1331	"arg_2"	"varchar"	0	0	1	2
5819	1332	"res_0"	"int"	32	0	0	0
5820	1332	"arg_1"	"varchar"	0	0	1	1
5821	1333	"res_0"	"varchar"	0	0	0	0
5822	1333	"arg_1"	"int"	32	0	1	1
5823	1334	"res_0"	"int"	32	0	0	0
5824	1334	"arg_1"	"varchar"	0	0	1	1
5825	1335	"res_0"	"varchar"	0	0	0	0
5826	1335	"arg_1"	"varchar"	0	0	1	1
5827	1335	"arg_2"	"int"	32	0	1	2
5828	1336	"res_0"	"varchar"	0	0	0	0
5829	1336	"arg_1"	"varchar"	0	0	1	1
5830	1336	"arg_2"	"int"	32	0	1	2
5831	1337	"res_0"	"varchar"	0	0	0	0
5832	1337	"arg_1"	"varchar"	0	0	1	1
5833	1338	"res_0"	"varchar"	0	0	0	0
5834	1338	"arg_1"	"varchar"	0	0	1	1
5835	1339	"res_0"	"varchar"	0	0	0	0
5836	1339	"arg_1"	"varchar"	0	0	1	1
5837	1340	"res_0"	"varchar"	0	0	0	0
5838	1340	"arg_1"	"varchar"	0	0	1	1
5839	1341	"res_0"	"varchar"	0	0	0	0
5840	1341	"arg_1"	"varchar"	0	0	1	1
5841	1342	"res_0"	"varchar"	0	0	0	0
5842	1342	"arg_1"	"varchar"	0	0	1	1
5843	1342	"arg_2"	"varchar"	0	0	1	2
5844	1343	"res_0"	"varchar"	0	0	0	0
5845	1343	"arg_1"	"varchar"	0	0	1	1
5846	1344	"res_0"	"varchar"	0	0	0	0
5847	1344	"arg_1"	"varchar"	0	0	1	1
5848	1344	"arg_2"	"varchar"	0	0	1	2
5849	1345	"res_0"	"varchar"	0	0	0	0
5850	1345	"arg_1"	"varchar"	0	0	1	1
5851	1346	"res_0"	"varchar"	0	0	0	0
5852	1346	"arg_1"	"varchar"	0	0	1	1
5853	1346	"arg_2"	"varchar"	0	0	1	2
5854	1347	"res_0"	"varchar"	0	0	0	0
5855	1347	"arg_1"	"varchar"	0	0	1	1
5856	1347	"arg_2"	"int"	32	0	1	2
5857	1348	"res_0"	"varchar"	0	0	0	0
5858	1348	"arg_1"	"varchar"	0	0	1	1
5859	1348	"arg_2"	"int"	32	0	1	2
5860	1348	"arg_3"	"varchar"	0	0	1	3
5861	1349	"res_0"	"varchar"	0	0	0	0
5862	1349	"arg_1"	"varchar"	0	0	1	1
5863	1349	"arg_2"	"int"	32	0	1	2
5864	1350	"res_0"	"varchar"	0	0	0	0
5865	1350	"arg_1"	"varchar"	0	0	1	1
5866	1350	"arg_2"	"int"	32	0	1	2
5867	1350	"arg_3"	"varchar"	0	0	1	3
5868	1351	"res_0"	"varchar"	0	0	0	0
5869	1351	"arg_1"	"varchar"	0	0	1	1
5870	1351	"arg_2"	"int"	32	0	1	2
5871	1351	"arg_3"	"int"	32	0	1	3
5872	1351	"arg_4"	"varchar"	0	0	1	4
5873	1352	"res_0"	"varchar"	0	0	0	0
5874	1352	"arg_1"	"varchar"	0	0	1	1
5875	1352	"arg_2"	"varchar"	0	0	1	2
5876	1352	"arg_3"	"varchar"	0	0	1	3
5877	1353	"res_0"	"varchar"	0	0	0	0
5878	1353	"arg_1"	"varchar"	0	0	1	1
5879	1353	"arg_2"	"int"	32	0	1	2
5880	1354	"res_0"	"varchar"	0	0	0	0
5881	1354	"arg_1"	"int"	32	0	1	1
5882	1355	"res_0"	"int"	32	0	0	0
5883	1355	"arg_1"	"varchar"	0	0	1	1
5884	1356	"res_0"	"int"	32	0	0	0
5885	1356	"arg_1"	"varchar"	0	0	1	1
5886	1357	"res_0"	"int"	32	0	0	0
5887	1357	"arg_1"	"varchar"	0	0	1	1
5888	1358	"res_0"	"varchar"	0	0	0	0
5889	1358	"arg_1"	"varchar"	0	0	1	1
5890	1359	"res_0"	"int"	32	0	0	0
5891	1359	"arg_1"	"varchar"	0	0	1	1
5892	1359	"arg_2"	"varchar"	0	0	1	2
5893	1360	"res_0"	"int"	32	0	0	0
5894	1360	"arg_1"	"varchar"	0	0	1	1
5895	1360	"arg_2"	"varchar"	0	0	1	2
5896	1361	"res_0"	"int"	32	0	0	0
5897	1361	"arg_1"	"varchar"	0	0	1	1
5898	1361	"arg_2"	"varchar"	0	0	1	2
5899	1362	"res_0"	"double"	53	0	0	0
5900	1362	"arg_1"	"varchar"	0	0	1	1
5901	1362	"arg_2"	"varchar"	0	0	1	2
5902	1363	"res_0"	"varchar"	0	0	0	0
5903	1363	"arg_1"	"varchar"	0	0	1	1
5904	1364	"res_0"	"int"	32	0	0	0
5905	1364	"arg_1"	"varchar"	0	0	1	1
5906	1364	"arg_2"	"varchar"	0	0	1	2
5907	1365	"res_0"	"int"	32	0	0	0
5908	1365	"arg_1"	"varchar"	0	0	1	1
5909	1365	"arg_2"	"varchar"	0	0	1	2
5910	1365	"arg_3"	"int"	32	0	1	3
5911	1365	"arg_4"	"int"	32	0	1	4
5912	1365	"arg_5"	"int"	32	0	1	5
5913	1366	"res_0"	"tinyint"	8	0	0	0
5914	1366	"arg_1"	"clob"	0	0	1	1
5915	1366	"arg_2"	"boolean"	1	0	1	2
5916	1367	"res_0"	"smallint"	16	0	0	0
5917	1367	"arg_1"	"clob"	0	0	1	1
5918	1367	"arg_2"	"boolean"	1	0	1	2
5919	1368	"res_0"	"int"	32	0	0	0
5920	1368	"arg_1"	"clob"	0	0	1	1
5921	1368	"arg_2"	"boolean"	1	0	1	2
5922	1369	"res_0"	"clob"	0	0	0	0
5923	1369	"arg_1"	"clob"	0	0	1	1
5924	1370	"res_0"	"int"	32	0	0	0
5925	1370	"arg_1"	"clob"	0	0	1	1
5926	1370	"arg_2"	"clob"	0	0	1	2
5927	1371	"res_0"	"int"	32	0	0	0
5928	1371	"arg_1"	"clob"	0	0	1	1
5929	1371	"arg_2"	"clob"	0	0	1	2
5930	1371	"arg_3"	"int"	32	0	1	3
5931	1372	"res_0"	"clob"	0	0	0	0
5932	1372	"arg_1"	"clob"	0	0	1	1
5933	1372	"arg_2"	"int"	32	0	1	2
5934	1373	"res_0"	"clob"	0	0	0	0
5935	1373	"arg_1"	"clob"	0	0	1	1
5936	1373	"arg_2"	"int"	32	0	1	2
5937	1373	"arg_3"	"int"	32	0	1	3
5938	1374	"res_0"	"boolean"	1	0	0	0
5939	1374	"arg_1"	"clob"	0	0	1	1
5940	1374	"arg_2"	"clob"	0	0	1	2
5941	1375	"res_0"	"boolean"	1	0	0	0
5942	1375	"arg_1"	"clob"	0	0	1	1
5943	1375	"arg_2"	"clob"	0	0	1	2
5944	1375	"arg_3"	"clob"	0	0	1	3
5945	1376	"res_0"	"boolean"	1	0	0	0
5946	1376	"arg_1"	"clob"	0	0	1	1
5947	1376	"arg_2"	"clob"	0	0	1	2
5948	1377	"res_0"	"boolean"	1	0	0	0
5949	1377	"arg_1"	"clob"	0	0	1	1
5950	1377	"arg_2"	"clob"	0	0	1	2
5951	1377	"arg_3"	"clob"	0	0	1	3
5952	1378	"res_0"	"boolean"	1	0	0	0
5953	1378	"arg_1"	"clob"	0	0	1	1
5954	1378	"arg_2"	"clob"	0	0	1	2
5955	1379	"res_0"	"boolean"	1	0	0	0
5956	1379	"arg_1"	"clob"	0	0	1	1
5957	1379	"arg_2"	"clob"	0	0	1	2
5958	1379	"arg_3"	"clob"	0	0	1	3
5959	1380	"res_0"	"boolean"	1	0	0	0
5960	1380	"arg_1"	"clob"	0	0	1	1
5961	1380	"arg_2"	"clob"	0	0	1	2
5962	1381	"res_0"	"boolean"	1	0	0	0
5963	1381	"arg_1"	"clob"	0	0	1	1
5964	1381	"arg_2"	"clob"	0	0	1	2
5965	1381	"arg_3"	"clob"	0	0	1	3
5966	1382	"res_0"	"int"	32	0	0	0
5967	1382	"arg_1"	"clob"	0	0	1	1
5968	1382	"arg_2"	"clob"	0	0	1	2
5969	1383	"res_0"	"clob"	0	0	0	0
5970	1383	"arg_1"	"clob"	0	0	1	1
5971	1383	"arg_2"	"int"	32	0	1	2
5972	1384	"res_0"	"clob"	0	0	0	0
5973	1384	"arg_1"	"clob"	0	0	1	1
5974	1384	"arg_2"	"clob"	0	0	1	2
5975	1385	"res_0"	"int"	32	0	0	0
5976	1385	"arg_1"	"clob"	0	0	1	1
5977	1386	"res_0"	"clob"	0	0	0	0
5978	1386	"arg_1"	"int"	32	0	1	1
5979	1387	"res_0"	"int"	32	0	0	0
5980	1387	"arg_1"	"clob"	0	0	1	1
5981	1388	"res_0"	"clob"	0	0	0	0
5982	1388	"arg_1"	"clob"	0	0	1	1
5983	1388	"arg_2"	"int"	32	0	1	2
5984	1389	"res_0"	"clob"	0	0	0	0
5985	1389	"arg_1"	"clob"	0	0	1	1
5986	1389	"arg_2"	"int"	32	0	1	2
5987	1390	"res_0"	"clob"	0	0	0	0
5988	1390	"arg_1"	"clob"	0	0	1	1
5989	1391	"res_0"	"clob"	0	0	0	0
5990	1391	"arg_1"	"clob"	0	0	1	1
5991	1392	"res_0"	"clob"	0	0	0	0
5992	1392	"arg_1"	"clob"	0	0	1	1
5993	1393	"res_0"	"clob"	0	0	0	0
5994	1393	"arg_1"	"clob"	0	0	1	1
5995	1394	"res_0"	"clob"	0	0	0	0
5996	1394	"arg_1"	"clob"	0	0	1	1
5997	1395	"res_0"	"clob"	0	0	0	0
5998	1395	"arg_1"	"clob"	0	0	1	1
5999	1395	"arg_2"	"clob"	0	0	1	2
6000	1396	"res_0"	"clob"	0	0	0	0
6001	1396	"arg_1"	"clob"	0	0	1	1
6002	1397	"res_0"	"clob"	0	0	0	0
6003	1397	"arg_1"	"clob"	0	0	1	1
6004	1397	"arg_2"	"clob"	0	0	1	2
6005	1398	"res_0"	"clob"	0	0	0	0
6006	1398	"arg_1"	"clob"	0	0	1	1
6007	1399	"res_0"	"clob"	0	0	0	0
6008	1399	"arg_1"	"clob"	0	0	1	1
6009	1399	"arg_2"	"clob"	0	0	1	2
6010	1400	"res_0"	"clob"	0	0	0	0
6011	1400	"arg_1"	"clob"	0	0	1	1
6012	1400	"arg_2"	"int"	32	0	1	2
6013	1401	"res_0"	"clob"	0	0	0	0
6014	1401	"arg_1"	"clob"	0	0	1	1
6015	1401	"arg_2"	"int"	32	0	1	2
6016	1401	"arg_3"	"clob"	0	0	1	3
6017	1402	"res_0"	"clob"	0	0	0	0
6018	1402	"arg_1"	"clob"	0	0	1	1
6019	1402	"arg_2"	"int"	32	0	1	2
6020	1403	"res_0"	"clob"	0	0	0	0
6021	1403	"arg_1"	"clob"	0	0	1	1
6022	1403	"arg_2"	"int"	32	0	1	2
6023	1403	"arg_3"	"clob"	0	0	1	3
6024	1404	"res_0"	"clob"	0	0	0	0
6025	1404	"arg_1"	"clob"	0	0	1	1
6026	1404	"arg_2"	"int"	32	0	1	2
6027	1404	"arg_3"	"int"	32	0	1	3
6028	1404	"arg_4"	"clob"	0	0	1	4
6029	1405	"res_0"	"clob"	0	0	0	0
6030	1405	"arg_1"	"clob"	0	0	1	1
6031	1405	"arg_2"	"clob"	0	0	1	2
6032	1405	"arg_3"	"clob"	0	0	1	3
6033	1406	"res_0"	"clob"	0	0	0	0
6034	1406	"arg_1"	"clob"	0	0	1	1
6035	1406	"arg_2"	"int"	32	0	1	2
6036	1407	"res_0"	"clob"	0	0	0	0
6037	1407	"arg_1"	"int"	32	0	1	1
6038	1408	"res_0"	"int"	32	0	0	0
6039	1408	"arg_1"	"clob"	0	0	1	1
6040	1409	"res_0"	"int"	32	0	0	0
6041	1409	"arg_1"	"clob"	0	0	1	1
6042	1410	"res_0"	"int"	32	0	0	0
6043	1410	"arg_1"	"clob"	0	0	1	1
6044	1411	"res_0"	"clob"	0	0	0	0
6045	1411	"arg_1"	"clob"	0	0	1	1
6046	1412	"res_0"	"int"	32	0	0	0
6047	1412	"arg_1"	"clob"	0	0	1	1
6048	1412	"arg_2"	"clob"	0	0	1	2
6049	1413	"res_0"	"int"	32	0	0	0
6050	1413	"arg_1"	"clob"	0	0	1	1
6051	1413	"arg_2"	"clob"	0	0	1	2
6052	1414	"res_0"	"int"	32	0	0	0
6053	1414	"arg_1"	"clob"	0	0	1	1
6054	1414	"arg_2"	"clob"	0	0	1	2
6055	1415	"res_0"	"double"	53	0	0	0
6056	1415	"arg_1"	"clob"	0	0	1	1
6057	1415	"arg_2"	"clob"	0	0	1	2
6058	1416	"res_0"	"clob"	0	0	0	0
6059	1416	"arg_1"	"clob"	0	0	1	1
6060	1417	"res_0"	"int"	32	0	0	0
6061	1417	"arg_1"	"clob"	0	0	1	1
6062	1417	"arg_2"	"clob"	0	0	1	2
6063	1418	"res_0"	"int"	32	0	0	0
6064	1418	"arg_1"	"clob"	0	0	1	1
6065	1418	"arg_2"	"clob"	0	0	1	2
6066	1418	"arg_3"	"int"	32	0	1	3
6067	1418	"arg_4"	"int"	32	0	1	4
6068	1418	"arg_5"	"int"	32	0	1	5
6069	1419	"res_0"	"table"	0	0	0	0
6070	1419	"arg_1"	"varchar"	0	0	1	1
6071	1419	"arg_2"	"varchar"	0	0	1	2
6072	1419	"arg_3"	"varchar"	0	0	1	3
6073	1419	"arg_4"	"varchar"	0	0	1	4
6074	1419	"arg_5"	"varchar"	0	0	1	5
6075	1419	"arg_6"	"varchar"	0	0	1	6
6076	1419	"arg_7"	"bigint"	64	0	1	7
6077	1419	"arg_8"	"bigint"	64	0	1	8
6078	1420	"res_0"	"table"	0	0	0	0
6079	1420	"arg_1"	"varchar"	0	0	1	1
6080	1420	"arg_2"	"varchar"	0	0	1	2
6081	1420	"arg_3"	"varchar"	0	0	1	3
6082	1420	"arg_4"	"varchar"	0	0	1	4
6083	1420	"arg_5"	"varchar"	0	0	1	5
6084	1420	"arg_6"	"bigint"	64	0	1	6
6085	1420	"arg_7"	"bigint"	64	0	1	7
6086	1421	"res_0"	"table"	0	0	0	0
6087	1421	"arg_1"	"varchar"	0	0	1	1
6088	1421	"arg_2"	"varchar"	0	0	1	2
6089	58	"res"	"boolean"	1	0	0	0
6090	58	"arg"	"oid"	63	0	1	1
6091	70	"res"	"any"	0	0	0	0
6092	70	"arg"	"any"	0	0	1	1
6093	71	"res"	"boolean"	1	0	0	0
6094	71	"arg"	"any"	0	0	1	1
6095	72	"res"	"boolean"	1	0	0	0
6096	72	"arg"	"any"	0	0	1	1
6097	77	"res"	"any"	0	0	0	0
6098	77	"arg"	"any"	0	0	1	1
6099	78	"res"	"any"	0	0	0	0
6100	78	"arg"	"any"	0	0	1	1
6101	82	"res"	"hugeint"	128	0	0	0
6102	82	"arg"	"tinyint"	8	0	1	1
6103	83	"res"	"hugeint"	128	0	0	0
6104	83	"arg"	"smallint"	16	0	1	1
6105	84	"res"	"hugeint"	128	0	0	0
6106	84	"arg"	"int"	32	0	1	1
6107	85	"res"	"hugeint"	128	0	0	0
6108	85	"arg"	"bigint"	64	0	1	1
6109	86	"res"	"hugeint"	128	0	0	0
6110	86	"arg"	"hugeint"	128	0	1	1
6111	87	"res"	"wrd"	64	0	0	0
6112	87	"arg"	"wrd"	64	0	1	1
6113	88	"res"	"decimal"	39	0	0	0
6114	88	"arg"	"decimal"	2	0	1	1
6115	89	"res"	"decimal"	39	0	0	0
6116	89	"arg"	"decimal"	4	0	1	1
6117	90	"res"	"decimal"	39	0	0	0
6118	90	"arg"	"decimal"	9	0	1	1
6119	91	"res"	"decimal"	39	0	0	0
6120	91	"arg"	"decimal"	18	0	1	1
6121	92	"res"	"decimal"	39	0	0	0
6122	92	"arg"	"decimal"	39	0	1	1
6123	93	"res"	"hugeint"	128	0	0	0
6124	93	"arg"	"tinyint"	8	0	1	1
6125	94	"res"	"hugeint"	128	0	0	0
6126	94	"arg"	"smallint"	16	0	1	1
6127	95	"res"	"hugeint"	128	0	0	0
6128	95	"arg"	"int"	32	0	1	1
6129	96	"res"	"hugeint"	128	0	0	0
6130	96	"arg"	"bigint"	64	0	1	1
6131	97	"res"	"hugeint"	128	0	0	0
6132	97	"arg"	"hugeint"	128	0	1	1
6133	98	"res"	"decimal"	39	0	0	0
6134	98	"arg"	"decimal"	2	0	1	1
6135	99	"res"	"decimal"	39	0	0	0
6136	99	"arg"	"decimal"	4	0	1	1
6137	100	"res"	"decimal"	39	0	0	0
6138	100	"arg"	"decimal"	9	0	1	1
6139	101	"res"	"decimal"	39	0	0	0
6140	101	"arg"	"decimal"	18	0	1	1
6141	102	"res"	"decimal"	39	0	0	0
6142	102	"arg"	"decimal"	39	0	1	1
6143	117	"res"	"real"	24	0	0	0
6144	117	"arg"	"real"	24	0	1	1
6145	118	"res"	"real"	24	0	0	0
6146	118	"arg"	"real"	24	0	1	1
6147	119	"res"	"double"	53	0	0	0
6148	119	"arg"	"double"	53	0	1	1
6149	120	"res"	"double"	53	0	0	0
6150	120	"arg"	"double"	53	0	1	1
6151	121	"res"	"double"	53	0	0	0
6152	121	"arg"	"double"	53	0	1	1
6153	122	"res"	"wrd"	64	0	0	0
6154	123	"res"	"wrd"	64	0	0	0
6177	6176	"name"	"varchar"	1024	0	0	0
6178	6176	"value"	"varchar"	2048	0	0	1
6180	6179	"name"	"varchar"	1024	0	0	0
6186	6185	"name"	"varchar"	2048	0	0	0
6206	6205	"val"	"clob"	0	0	1	0
6207	6205	"pat"	"clob"	0	0	1	1
6208	6205	"esc"	"clob"	0	0	1	2
6211	6210	"val"	"clob"	0	0	1	0
6212	6210	"pat"	"clob"	0	0	1	1
6213	6210	"esc"	"clob"	0	0	1	2
6216	6215	"val"	"clob"	0	0	1	0
6217	6215	"pat"	"clob"	0	0	1	1
6220	6219	"val"	"clob"	0	0	1	0
6221	6219	"pat"	"clob"	0	0	1	1
6224	6223	"result"	"double"	53	0	0	0
6225	6223	"r"	"double"	53	0	1	1
6228	6227	"result"	"double"	53	0	0	0
6229	6227	"d"	"double"	53	0	1	1
6235	6234	"result"	"clob"	0	0	0	0
6236	6234	"theurl"	"url"	0	0	1	1
6239	6238	"result"	"clob"	0	0	0	0
6240	6238	"theurl"	"url"	0	0	1	1
6243	6242	"result"	"clob"	0	0	0	0
6244	6242	"theurl"	"url"	0	0	1	1
6247	6246	"result"	"clob"	0	0	0	0
6248	6246	"theurl"	"url"	0	0	1	1
6251	6250	"result"	"clob"	0	0	0	0
6252	6250	"theurl"	"url"	0	0	1	1
6255	6254	"result"	"clob"	0	0	0	0
6256	6254	"theurl"	"url"	0	0	1	1
6259	6258	"result"	"clob"	0	0	0	0
6260	6258	"theurl"	"url"	0	0	1	1
6263	6262	"result"	"clob"	0	0	0	0
6264	6262	"theurl"	"url"	0	0	1	1
6267	6266	"result"	"clob"	0	0	0	0
6268	6266	"theurl"	"url"	0	0	1	1
6271	6270	"result"	"clob"	0	0	0	0
6272	6270	"theurl"	"url"	0	0	1	1
6275	6274	"result"	"clob"	0	0	0	0
6276	6274	"theurl"	"url"	0	0	1	1
6279	6278	"result"	"clob"	0	0	0	0
6280	6278	"theurl"	"url"	0	0	1	1
6283	6282	"result"	"clob"	0	0	0	0
6284	6282	"theurl"	"url"	0	0	1	1
6287	6286	"result"	"boolean"	1	0	0	0
6288	6286	"theurl"	"url"	0	0	1	1
6291	6290	"result"	"url"	0	0	0	0
6292	6290	"protocol"	"clob"	0	0	1	1
6293	6290	"hostname"	"clob"	0	0	1	2
6294	6290	"port"	"int"	32	0	1	3
6295	6290	"file"	"clob"	0	0	1	4
6298	6297	"result"	"url"	0	0	0	0
6299	6297	"protocol"	"clob"	0	0	1	1
6300	6297	"hostname"	"clob"	0	0	1	2
6301	6297	"file"	"clob"	0	0	1	3
6304	6303	"result"	"date"	0	0	0	0
6305	6303	"s"	"clob"	0	0	1	1
6306	6303	"format"	"clob"	0	0	1	2
6309	6308	"result"	"clob"	0	0	0	0
6310	6308	"d"	"date"	0	0	1	1
6311	6308	"format"	"clob"	0	0	1	2
6314	6313	"result"	"date"	0	0	0	0
6315	6313	"s"	"clob"	0	0	1	1
6316	6313	"format"	"clob"	0	0	1	2
6320	6319	"result"	"inet"	0	0	0	0
6321	6319	"p"	"inet"	0	0	1	1
6324	6323	"result"	"clob"	0	0	0	0
6325	6323	"p"	"inet"	0	0	1	1
6328	6327	"result"	"int"	32	0	0	0
6329	6327	"p"	"inet"	0	0	1	1
6332	6331	"result"	"inet"	0	0	0	0
6333	6331	"p"	"inet"	0	0	1	1
6334	6331	"mask"	"int"	32	0	1	2
6337	6336	"result"	"inet"	0	0	0	0
6338	6336	"p"	"inet"	0	0	1	1
6341	6340	"result"	"inet"	0	0	0	0
6342	6340	"p"	"inet"	0	0	1	1
6345	6344	"result"	"inet"	0	0	0	0
6346	6344	"p"	"inet"	0	0	1	1
6349	6348	"result"	"clob"	0	0	0	0
6350	6348	"p"	"inet"	0	0	1	1
6353	6352	"result"	"clob"	0	0	0	0
6354	6352	"p"	"inet"	0	0	1	1
6357	6356	"result"	"boolean"	1	0	0	0
6358	6356	"i1"	"inet"	0	0	1	1
6359	6356	"i2"	"inet"	0	0	1	2
6362	6361	"result"	"boolean"	1	0	0	0
6363	6361	"i1"	"inet"	0	0	1	1
6364	6361	"i2"	"inet"	0	0	1	2
6367	6366	"result"	"boolean"	1	0	0	0
6368	6366	"i1"	"inet"	0	0	1	1
6369	6366	"i2"	"inet"	0	0	1	2
6372	6371	"result"	"boolean"	1	0	0	0
6373	6371	"i1"	"inet"	0	0	1	1
6374	6371	"i2"	"inet"	0	0	1	2
6377	6376	"id"	"oid"	63	0	0	0
6378	6376	"owner"	"clob"	0	0	0	1
6379	6376	"defined"	"timestamp"	7	0	0	2
6380	6376	"query"	"clob"	0	0	0	3
6381	6376	"pipe"	"clob"	0	0	0	4
6382	6376	"plan"	"clob"	0	0	0	5
6383	6376	"mal"	"int"	32	0	0	6
6384	6376	"optimize"	"bigint"	64	0	0	7
6387	6386	"id"	"oid"	63	0	0	0
6388	6386	"start"	"timestamp"	7	0	0	1
6389	6386	"stop"	"timestamp"	7	0	0	2
6390	6386	"arguments"	"clob"	0	0	0	3
6391	6386	"tuples"	"wrd"	64	0	0	4
6392	6386	"run"	"bigint"	64	0	0	5
6393	6386	"ship"	"bigint"	64	0	0	6
6394	6386	"cpu"	"int"	32	0	0	7
6395	6386	"io"	"int"	32	0	0	8
6441	6440	"threshold"	"smallint"	16	0	1	0
6446	6445	"event"	"int"	32	0	0	0
6447	6445	"clk"	"varchar"	20	0	0	1
6448	6445	"pc"	"varchar"	50	0	0	2
6449	6445	"thread"	"int"	32	0	0	3
6450	6445	"ticks"	"bigint"	64	0	0	4
6451	6445	"rrsmb"	"bigint"	64	0	0	5
6452	6445	"vmmb"	"bigint"	64	0	0	6
6453	6445	"reads"	"bigint"	64	0	0	7
6454	6445	"writes"	"bigint"	64	0	0	8
6455	6445	"minflt"	"bigint"	64	0	0	9
6456	6445	"majflt"	"bigint"	64	0	0	10
6457	6445	"nvcsw"	"bigint"	64	0	0	11
6458	6445	"stmt"	"clob"	0	0	0	12
6476	6475	"host"	"clob"	0	0	1	0
6477	6475	"port"	"int"	32	0	1	1
6480	6479	"ticks"	"int"	32	0	1	0
6483	6482	"result"	"timestamp"	7	0	0	0
6484	6482	"sec"	"bigint"	64	0	1	1
6487	6486	"result"	"timestamp"	7	0	0	0
6488	6486	"sec"	"int"	32	0	1	1
6491	6490	"result"	"int"	32	0	0	0
6492	6490	"ts"	"timestamp"	7	0	1	1
6495	6494	"sys"	"clob"	0	0	1	0
6496	6494	"tab"	"clob"	0	0	1	1
6499	6498	"sys"	"clob"	0	0	1	0
6500	6498	"tab"	"clob"	0	0	1	1
6503	6502	"sys"	"clob"	0	0	1	0
6504	6502	"tab"	"clob"	0	0	1	1
6507	6506	"sch"	"varchar"	100	0	0	0
6508	6506	"usr"	"varchar"	100	0	0	1
6509	6506	"dep_type"	"varchar"	32	0	0	2
6512	6511	"sch"	"varchar"	100	0	0	0
6513	6511	"usr"	"varchar"	100	0	0	1
6514	6511	"dep_type"	"varchar"	32	0	0	2
6517	6516	"sch"	"varchar"	100	0	0	0
6518	6516	"usr"	"varchar"	100	0	0	1
6519	6516	"dep_type"	"varchar"	32	0	0	2
6522	6521	"sch"	"varchar"	100	0	0	0
6523	6521	"usr"	"varchar"	100	0	0	1
6524	6521	"dep_type"	"varchar"	32	0	0	2
6527	6526	"sch"	"varchar"	100	0	0	0
6528	6526	"usr"	"varchar"	100	0	0	1
6529	6526	"dep_type"	"varchar"	32	0	0	2
6532	6531	"sch"	"varchar"	100	0	0	0
6533	6531	"usr"	"varchar"	100	0	0	1
6534	6531	"dep_type"	"varchar"	32	0	0	2
6537	6536	"sch"	"varchar"	100	0	0	0
6538	6536	"usr"	"varchar"	100	0	0	1
6539	6536	"dep_type"	"varchar"	32	0	0	2
6542	6541	"sch"	"varchar"	100	0	0	0
6543	6541	"usr"	"varchar"	100	0	0	1
6544	6541	"dep_type"	"varchar"	32	0	0	2
6547	6546	"sch"	"varchar"	100	0	0	0
6548	6546	"usr"	"varchar"	100	0	0	1
6549	6546	"dep_type"	"varchar"	32	0	0	2
6552	6551	"sch"	"varchar"	100	0	0	0
6553	6551	"usr"	"varchar"	100	0	0	1
6554	6551	"dep_type"	"varchar"	32	0	0	2
6557	6556	"sch"	"varchar"	100	0	0	0
6558	6556	"usr"	"varchar"	100	0	0	1
6559	6556	"dep_type"	"varchar"	32	0	0	2
6562	6561	"sch"	"varchar"	100	0	0	0
6563	6561	"usr"	"varchar"	100	0	0	1
6564	6561	"dep_type"	"varchar"	32	0	0	2
6567	6566	"sch"	"varchar"	100	0	0	0
6568	6566	"usr"	"varchar"	100	0	0	1
6569	6566	"dep_type"	"varchar"	32	0	0	2
6572	6571	"sch"	"varchar"	100	0	0	0
6573	6571	"usr"	"varchar"	100	0	0	1
6574	6571	"dep_type"	"varchar"	32	0	0	2
6577	6576	"sch"	"varchar"	100	0	0	0
6578	6576	"usr"	"varchar"	100	0	0	1
6579	6576	"dep_type"	"varchar"	32	0	0	2
6582	6581	"sch"	"varchar"	100	0	0	0
6583	6581	"usr"	"varchar"	100	0	0	1
6584	6581	"dep_type"	"varchar"	32	0	0	2
6587	6586	"sch"	"varchar"	100	0	0	0
6588	6586	"usr"	"varchar"	100	0	0	1
6589	6586	"dep_type"	"varchar"	32	0	0	2
6592	6591	"result"	"clob"	0	0	0	0
6593	6591	"username"	"clob"	0	0	1	1
6596	6595	"user"	"clob"	0	0	0	0
6597	6595	"login"	"timestamp"	7	0	0	1
6598	6595	"sessiontimeout"	"bigint"	64	0	0	2
6599	6595	"lastcommand"	"timestamp"	7	0	0	3
6600	6595	"querytimeout"	"bigint"	64	0	0	4
6601	6595	"active"	"boolean"	1	0	0	5
6612	6611	"delay"	"tinyint"	8	0	1	0
6615	6614	"delay"	"tinyint"	8	0	1	0
6616	6614	"force"	"boolean"	1	0	1	1
6619	6618	"query"	"bigint"	64	0	1	0
6622	6621	"query"	"bigint"	64	0	1	0
6623	6621	"session"	"bigint"	64	0	1	1
6626	6625	"timeout"	"bigint"	64	0	1	0
6629	6628	"result"	"varchar"	32	0	0	0
6630	6628	"s1"	"varchar"	32	0	1	1
6631	6628	"st"	"int"	32	0	1	2
6632	6628	"len"	"int"	32	0	1	3
6633	6628	"s3"	"varchar"	32	0	1	4
6636	6635	"result"	"double"	53	0	0	0
6637	6635	"num"	"double"	53	0	1	1
6638	6635	"prc"	"int"	32	0	1	2
6641	6640	"result"	"double"	53	0	0	0
6642	6640	"num"	"double"	53	0	1	1
6643	6640	"prc"	"int"	32	0	1	2
6644	6640	"truncat"	"int"	32	0	1	3
6647	6646	"result"	"clob"	0	0	0	0
6648	6646	"num"	"double"	53	0	1	1
6649	6646	"prc"	"int"	32	0	1	2
6650	6646	"truncat"	"int"	32	0	1	3
6653	6652	"result"	"double"	53	0	0	0
6654	6652	"pdec"	"double"	53	0	1	1
6655	6652	"pradius"	"double"	53	0	1	2
6658	6657	"result"	"oid"	63	0	0	0
6659	6657	"x"	"int"	32	0	1	1
6660	6657	"y"	"int"	32	0	1	2
6663	6662	"result"	"int"	32	0	0	0
6664	6662	"z"	"oid"	63	0	1	1
6667	6666	"result"	"int"	32	0	0	0
6668	6666	"z"	"oid"	63	0	1	1
6671	6670	"rewrite"	"clob"	0	0	0	0
6672	6670	"count"	"int"	32	0	0	1
6675	6674	"query"	"clob"	0	0	0	0
6676	6674	"count"	"int"	32	0	0	1
6679	6678	"filename"	"clob"	0	0	1	0
6682	6681	"name"	"clob"	0	0	0	0
6683	6681	"def"	"clob"	0	0	0	1
6684	6681	"status"	"clob"	0	0	0	2
6692	6691	"name"	"clob"	0	0	0	0
6693	6691	"value"	"clob"	0	0	0	1
6700	6699	"id"	"int"	32	0	0	0
6701	6699	"name"	"clob"	0	0	0	1
6702	6699	"htype"	"clob"	0	0	0	2
6703	6699	"ttype"	"clob"	0	0	0	3
6704	6699	"count"	"bigint"	64	0	0	4
6705	6699	"refcnt"	"int"	32	0	0	5
6706	6699	"lrefcnt"	"int"	32	0	0	6
6707	6699	"location"	"clob"	0	0	0	7
6708	6699	"heat"	"int"	32	0	0	8
6709	6699	"dirty"	"clob"	0	0	0	9
6710	6699	"status"	"clob"	0	0	0	10
6711	6699	"kind"	"clob"	0	0	0	11
6714	6713	"ra_stmt"	"clob"	0	0	1	0
6715	6713	"opt"	"boolean"	1	0	1	1
6718	6717	"qtag"	"bigint"	64	0	0	0
6719	6717	"user"	"clob"	0	0	0	1
6720	6717	"started"	"timestamp"	7	0	0	2
6721	6717	"estimate"	"timestamp"	7	0	0	3
6722	6717	"progress"	"int"	32	0	0	4
6723	6717	"status"	"clob"	0	0	0	5
6724	6717	"tag"	"oid"	63	0	0	6
6725	6717	"query"	"clob"	0	0	0	7
6738	6737	"tag"	"int"	32	0	1	0
6741	6740	"tag"	"int"	32	0	1	0
6744	6743	"tag"	"int"	32	0	1	0
6747	6746	"tag"	"bigint"	64	0	1	0
6750	6749	"tag"	"bigint"	64	0	1	0
6753	6752	"tag"	"bigint"	64	0	1	0
6756	6755	"result"	"double"	53	0	0	0
6757	6755	"val"	"tinyint"	8	0	1	1
6760	6759	"result"	"double"	53	0	0	0
6761	6759	"val"	"smallint"	16	0	1	1
6764	6763	"result"	"double"	53	0	0	0
6765	6763	"val"	"int"	32	0	1	1
6768	6767	"result"	"double"	53	0	0	0
6769	6767	"val"	"wrd"	64	0	1	1
6772	6771	"result"	"double"	53	0	0	0
6773	6771	"val"	"bigint"	64	0	1	1
6776	6775	"result"	"double"	53	0	0	0
6777	6775	"val"	"real"	24	0	1	1
6780	6779	"result"	"double"	53	0	0	0
6781	6779	"val"	"double"	53	0	1	1
6784	6783	"result"	"double"	53	0	0	0
6785	6783	"val"	"date"	0	0	1	1
6788	6787	"result"	"double"	53	0	0	0
6789	6787	"val"	"time"	1	0	1	1
6792	6791	"result"	"double"	53	0	0	0
6793	6791	"val"	"timestamp"	7	0	1	1
6796	6795	"result"	"double"	53	0	0	0
6797	6795	"val"	"tinyint"	8	0	1	1
6800	6799	"result"	"double"	53	0	0	0
6801	6799	"val"	"smallint"	16	0	1	1
6804	6803	"result"	"double"	53	0	0	0
6805	6803	"val"	"int"	32	0	1	1
6808	6807	"result"	"double"	53	0	0	0
6809	6807	"val"	"wrd"	64	0	1	1
6812	6811	"result"	"double"	53	0	0	0
6813	6811	"val"	"bigint"	64	0	1	1
6816	6815	"result"	"double"	53	0	0	0
6817	6815	"val"	"real"	24	0	1	1
6820	6819	"result"	"double"	53	0	0	0
6821	6819	"val"	"double"	53	0	1	1
6824	6823	"result"	"double"	53	0	0	0
6825	6823	"val"	"date"	0	0	1	1
6828	6827	"result"	"double"	53	0	0	0
6829	6827	"val"	"time"	1	0	1	1
6832	6831	"result"	"double"	53	0	0	0
6833	6831	"val"	"timestamp"	7	0	1	1
6836	6835	"result"	"double"	53	0	0	0
6837	6835	"val"	"tinyint"	8	0	1	1
6840	6839	"result"	"double"	53	0	0	0
6841	6839	"val"	"smallint"	16	0	1	1
6844	6843	"result"	"double"	53	0	0	0
6845	6843	"val"	"int"	32	0	1	1
6848	6847	"result"	"double"	53	0	0	0
6849	6847	"val"	"wrd"	64	0	1	1
6852	6851	"result"	"double"	53	0	0	0
6853	6851	"val"	"bigint"	64	0	1	1
6856	6855	"result"	"double"	53	0	0	0
6857	6855	"val"	"real"	24	0	1	1
6860	6859	"result"	"double"	53	0	0	0
6861	6859	"val"	"double"	53	0	1	1
6864	6863	"result"	"double"	53	0	0	0
6865	6863	"val"	"date"	0	0	1	1
6868	6867	"result"	"double"	53	0	0	0
6869	6867	"val"	"time"	1	0	1	1
6872	6871	"result"	"double"	53	0	0	0
6873	6871	"val"	"timestamp"	7	0	1	1
6876	6875	"result"	"double"	53	0	0	0
6877	6875	"val"	"tinyint"	8	0	1	1
6880	6879	"result"	"double"	53	0	0	0
6881	6879	"val"	"smallint"	16	0	1	1
6884	6883	"result"	"double"	53	0	0	0
6885	6883	"val"	"int"	32	0	1	1
6888	6887	"result"	"double"	53	0	0	0
6889	6887	"val"	"wrd"	64	0	1	1
6892	6891	"result"	"double"	53	0	0	0
6893	6891	"val"	"bigint"	64	0	1	1
6896	6895	"result"	"double"	53	0	0	0
6897	6895	"val"	"real"	24	0	1	1
6900	6899	"result"	"double"	53	0	0	0
6901	6899	"val"	"double"	53	0	1	1
6904	6903	"result"	"double"	53	0	0	0
6905	6903	"val"	"date"	0	0	1	1
6908	6907	"result"	"double"	53	0	0	0
6909	6907	"val"	"time"	1	0	1	1
6912	6911	"result"	"double"	53	0	0	0
6913	6911	"val"	"timestamp"	7	0	1	1
6916	6915	"result"	"tinyint"	8	0	0	0
6917	6915	"val"	"tinyint"	8	0	1	1
6920	6919	"result"	"smallint"	16	0	0	0
6921	6919	"val"	"smallint"	16	0	1	1
6924	6923	"result"	"int"	32	0	0	0
6925	6923	"val"	"int"	32	0	1	1
6928	6927	"result"	"wrd"	64	0	0	0
6929	6927	"val"	"wrd"	64	0	1	1
6932	6931	"result"	"bigint"	64	0	0	0
6933	6931	"val"	"bigint"	64	0	1	1
6936	6935	"result"	"decimal"	18	3	0	0
6937	6935	"val"	"decimal"	18	3	1	1
6940	6939	"result"	"real"	24	0	0	0
6941	6939	"val"	"real"	24	0	1	1
6944	6943	"result"	"double"	53	0	0	0
6945	6943	"val"	"double"	53	0	1	1
6948	6947	"result"	"date"	0	0	0	0
6949	6947	"val"	"date"	0	0	1	1
6952	6951	"result"	"time"	1	0	0	0
6953	6951	"val"	"time"	1	0	1	1
6956	6955	"result"	"timestamp"	7	0	0	0
6957	6955	"val"	"timestamp"	7	0	1	1
6960	6959	"result"	"tinyint"	8	0	0	0
6961	6959	"val"	"tinyint"	8	0	1	1
6962	6959	"q"	"double"	53	0	1	2
6965	6964	"result"	"smallint"	16	0	0	0
6966	6964	"val"	"smallint"	16	0	1	1
6967	6964	"q"	"double"	53	0	1	2
6970	6969	"result"	"int"	32	0	0	0
6971	6969	"val"	"int"	32	0	1	1
6972	6969	"q"	"double"	53	0	1	2
6975	6974	"result"	"wrd"	64	0	0	0
6976	6974	"val"	"wrd"	64	0	1	1
6977	6974	"q"	"double"	53	0	1	2
6980	6979	"result"	"bigint"	64	0	0	0
6981	6979	"val"	"bigint"	64	0	1	1
6982	6979	"q"	"double"	53	0	1	2
6985	6984	"result"	"decimal"	18	3	0	0
6986	6984	"val"	"decimal"	18	3	1	1
6987	6984	"q"	"double"	53	0	1	2
6990	6989	"result"	"real"	24	0	0	0
6991	6989	"val"	"real"	24	0	1	1
6992	6989	"q"	"double"	53	0	1	2
6995	6994	"result"	"double"	53	0	0	0
6996	6994	"val"	"double"	53	0	1	1
6997	6994	"q"	"double"	53	0	1	2
7000	6999	"result"	"date"	0	0	0	0
7001	6999	"val"	"date"	0	0	1	1
7002	6999	"q"	"double"	53	0	1	2
7005	7004	"result"	"time"	1	0	0	0
7006	7004	"val"	"time"	1	0	1	1
7007	7004	"q"	"double"	53	0	1	2
7010	7009	"result"	"timestamp"	7	0	0	0
7011	7009	"val"	"timestamp"	7	0	1	1
7012	7009	"q"	"double"	53	0	1	2
7015	7014	"result"	"tinyint"	8	0	0	0
7016	7014	"e1"	"tinyint"	8	0	1	1
7017	7014	"e2"	"tinyint"	8	0	1	2
7020	7019	"result"	"smallint"	16	0	0	0
7021	7019	"e1"	"smallint"	16	0	1	1
7022	7019	"e2"	"smallint"	16	0	1	2
7025	7024	"result"	"int"	32	0	0	0
7026	7024	"e1"	"int"	32	0	1	1
7027	7024	"e2"	"int"	32	0	1	2
7030	7029	"result"	"wrd"	64	0	0	0
7031	7029	"e1"	"wrd"	64	0	1	1
7032	7029	"e2"	"wrd"	64	0	1	2
7035	7034	"result"	"bigint"	64	0	0	0
7036	7034	"e1"	"bigint"	64	0	1	1
7037	7034	"e2"	"bigint"	64	0	1	2
7040	7039	"result"	"real"	24	0	0	0
7041	7039	"e1"	"real"	24	0	1	1
7042	7039	"e2"	"real"	24	0	1	2
7045	7044	"result"	"double"	53	0	0	0
7046	7044	"e1"	"double"	53	0	1	1
7047	7044	"e2"	"double"	53	0	1	2
7050	7049	"result"	"double"	53	0	0	0
7051	7049	"val"	"hugeint"	128	0	1	1
7054	7053	"result"	"double"	53	0	0	0
7055	7053	"val"	"hugeint"	128	0	1	1
7058	7057	"result"	"double"	53	0	0	0
7059	7057	"val"	"hugeint"	128	0	1	1
7062	7061	"result"	"double"	53	0	0	0
7063	7061	"val"	"hugeint"	128	0	1	1
7066	7065	"result"	"hugeint"	128	0	0	0
7067	7065	"val"	"hugeint"	128	0	1	1
7070	7069	"result"	"hugeint"	128	0	0	0
7071	7069	"val"	"hugeint"	128	0	1	1
7072	7069	"q"	"double"	53	0	1	2
7075	7074	"result"	"hugeint"	128	0	0	0
7076	7074	"e1"	"hugeint"	128	0	1	1
7077	7074	"e2"	"hugeint"	128	0	1	2
7080	7079	"result"	"int"	32	0	0	0
7081	7079	"info"	"int"	32	0	1	1
7084	7083	"result"	"int"	32	0	0	0
7085	7083	"info"	"int"	32	0	1	1
7088	7087	"result"	"clob"	0	0	0	0
7089	7087	"info"	"int"	32	0	1	1
7090	7087	"format"	"int"	32	0	1	2
7112	7111	"result"	"mbr"	0	0	0	0
7113	7111	"geom"	"geometry"	0	0	1	1
7116	7115	"result"	"boolean"	1	0	0	0
7117	7115	"box1"	"mbr"	0	0	1	1
7118	7115	"box2"	"mbr"	0	0	1	2
7121	7120	"result"	"boolean"	1	0	0	0
7122	7120	"box1"	"mbr"	0	0	1	1
7123	7120	"box2"	"mbr"	0	0	1	2
7126	7125	"result"	"boolean"	1	0	0	0
7127	7125	"box1"	"mbr"	0	0	1	1
7128	7125	"box2"	"mbr"	0	0	1	2
7131	7130	"result"	"double"	53	0	0	0
7132	7130	"box1"	"mbr"	0	0	1	1
7133	7130	"box2"	"mbr"	0	0	1	2
7136	7135	"result"	"geometry"	0	0	0	0
7137	7135	"wkt"	"clob"	0	0	1	1
7140	7139	"result"	"geometry"	0	0	0	0
7141	7139	"geom"	"clob"	0	0	1	1
7144	7143	"result"	"clob"	0	0	0	0
7145	7143	"geom"	"geometry"	0	0	1	1
7148	7147	"result"	"clob"	0	0	0	0
7149	7147	"geom"	"geometry"	0	0	1	1
7152	7151	"result"	"int"	32	0	0	0
7153	7151	"geom"	"geometry"	0	0	1	1
7156	7155	"result"	"clob"	0	0	0	0
7157	7155	"geom"	"geometry"	0	0	1	1
7160	7159	"result"	"int"	32	0	0	0
7161	7159	"geom"	"geometry"	0	0	1	1
7164	7163	"result"	"geometry"	0	0	0	0
7165	7163	"geom"	"geometry"	0	0	1	1
7166	7163	"srid"	"int"	32	0	1	2
7169	7168	"result"	"boolean"	1	0	0	0
7170	7168	"geom"	"geometry"	0	0	1	1
7173	7172	"result"	"boolean"	1	0	0	0
7174	7172	"geom"	"geometry"	0	0	1	1
7177	7176	"result"	"geometry"	0	0	0	0
7178	7176	"geom"	"geometry"	0	0	1	1
7181	7180	"result"	"geometry"	0	0	0	0
7182	7180	"geom"	"geometry"	0	0	1	1
7185	7184	"result"	"boolean"	1	0	0	0
7186	7184	"geom1"	"geometry"	0	0	1	1
7187	7184	"geom2"	"geometry"	0	0	1	2
7190	7189	"result"	"boolean"	1	0	0	0
7191	7189	"geom1"	"geometry"	0	0	1	1
7192	7189	"geom2"	"geometry"	0	0	1	2
7195	7194	"result"	"boolean"	1	0	0	0
7196	7194	"geom1"	"geometry"	0	0	1	1
7197	7194	"geom2"	"geometry"	0	0	1	2
7200	7199	"result"	"boolean"	1	0	0	0
7201	7199	"geom1"	"geometry"	0	0	1	1
7202	7199	"geom2"	"geometry"	0	0	1	2
7205	7204	"result"	"boolean"	1	0	0	0
7206	7204	"geom1"	"geometry"	0	0	1	1
7207	7204	"geom2"	"geometry"	0	0	1	2
7210	7209	"result"	"boolean"	1	0	0	0
7211	7209	"geom1"	"geometry"	0	0	1	1
7212	7209	"geom2"	"geometry"	0	0	1	2
7215	7214	"result"	"boolean"	1	0	0	0
7216	7214	"geom1"	"geometry"	0	0	1	1
7217	7214	"geom2"	"geometry"	0	0	1	2
7220	7219	"result"	"boolean"	1	0	0	0
7221	7219	"geom1"	"geometry"	0	0	1	1
7222	7219	"geom2"	"geometry"	0	0	1	2
7225	7224	"result"	"boolean"	1	0	0	0
7226	7224	"geom1"	"geometry"	0	0	1	1
7227	7224	"geom2"	"geometry"	0	0	1	2
7228	7224	"intersection_matrix_pattern"	"clob"	0	0	1	3
7231	7230	"result"	"double"	53	0	0	0
7232	7230	"geom1"	"geometry"	0	0	1	1
7233	7230	"geom2"	"geometry"	0	0	1	2
7236	7235	"result"	"geometry"	0	0	0	0
7237	7235	"geom1"	"geometry"	0	0	1	1
7238	7235	"geom2"	"geometry"	0	0	1	2
7241	7240	"result"	"geometry"	0	0	0	0
7242	7240	"geom1"	"geometry"	0	0	1	1
7243	7240	"geom2"	"geometry"	0	0	1	2
7246	7245	"result"	"geometry"	0	0	0	0
7247	7245	"geom1"	"geometry"	0	0	1	1
7248	7245	"geom2"	"geometry"	0	0	1	2
7251	7250	"result"	"geometry"	0	0	0	0
7252	7250	"geom"	"geometry"	0	0	1	1
7255	7254	"result"	"geometry"	0	0	0	0
7256	7254	"geom1"	"geometry"	0	0	1	1
7257	7254	"geom2"	"geometry"	0	0	1	2
7260	7259	"result"	"geometry"	0	0	0	0
7261	7259	"geom"	"geometry"	0	0	1	1
7262	7259	"radius"	"double"	53	0	1	2
7265	7264	"result"	"geometry"	0	0	0	0
7266	7264	"geom"	"geometry"	0	0	1	1
7269	7268	"result"	"double"	53	0	0	0
7270	7268	"geom"	"geometry"	0	0	1	1
7273	7272	"result"	"double"	53	0	0	0
7274	7272	"geom"	"geometry"	0	0	1	1
7277	7276	"result"	"double"	53	0	0	0
7278	7276	"geom"	"geometry"	0	0	1	1
7281	7280	"result"	"geometry"	0	0	0	0
7282	7280	"geom"	"geometry"	0	0	1	1
7285	7284	"result"	"geometry"	0	0	0	0
7286	7284	"geom"	"geometry"	0	0	1	1
7289	7288	"result"	"boolean"	1	0	0	0
7290	7288	"geom"	"geometry"	0	0	1	1
7293	7292	"result"	"double"	53	0	0	0
7294	7292	"geom"	"geometry"	0	0	1	1
7297	7296	"result"	"boolean"	1	0	0	0
7298	7296	"geom"	"geometry"	0	0	1	1
7301	7300	"result"	"int"	32	0	0	0
7302	7300	"geom"	"geometry"	0	0	1	1
7305	7304	"result"	"geometry"	0	0	0	0
7306	7304	"geom"	"geometry"	0	0	1	1
7307	7304	"positionnum"	"int"	32	0	1	2
7310	7309	"result"	"geometry"	0	0	0	0
7311	7309	"geom"	"geometry"	0	0	1	1
7314	7313	"result"	"geometry"	0	0	0	0
7315	7313	"geom"	"geometry"	0	0	1	1
7318	7317	"result"	"double"	53	0	0	0
7319	7317	"geom"	"geometry"	0	0	1	1
7322	7321	"result"	"geometry"	0	0	0	0
7323	7321	"geom"	"geometry"	0	0	1	1
7326	7325	"result"	"geometry"	0	0	0	0
7327	7325	"geom"	"geometry"	0	0	1	1
7330	7329	"result"	"int"	32	0	0	0
7331	7329	"geom"	"geometry"	0	0	1	1
7334	7333	"result"	"geometry"	0	0	0	0
7335	7333	"geom"	"geometry"	0	0	1	1
7336	7333	"positionnum"	"int"	32	0	1	2
7339	7338	"result"	"geometrya"	0	0	0	0
7340	7338	"geom"	"geometry"	0	0	1	1
7343	7342	"result"	"int"	32	0	0	0
7344	7342	"geom"	"geometry"	0	0	1	1
7347	7346	"result"	"geometry"	0	0	0	0
7348	7346	"geom"	"geometry"	0	0	1	1
7349	7346	"positionnum"	"int"	32	0	1	2
7352	7351	"result"	"int"	32	0	0	0
7353	7351	"geom"	"geometry"	0	0	1	1
7356	7355	"result"	"geometry"	0	0	0	0
7357	7355	"geom"	"geometry"	0	0	1	1
7358	7355	"patchnum"	"int"	32	0	1	2
7361	7360	"result"	"geometry"	0	0	0	0
7362	7360	"wkt"	"clob"	0	0	1	1
7363	7360	"srid"	"int"	32	0	1	2
7366	7365	"result"	"geometry"	0	0	0	0
7367	7365	"wkt"	"clob"	0	0	1	1
7368	7365	"srid"	"int"	32	0	1	2
7371	7370	"result"	"geometry"	0	0	0	0
7372	7370	"wkt"	"clob"	0	0	1	1
7373	7370	"srid"	"int"	32	0	1	2
7376	7375	"result"	"geometry"	0	0	0	0
7377	7375	"wkt"	"clob"	0	0	1	1
7378	7375	"srid"	"int"	32	0	1	2
7381	7380	"result"	"geometry"	0	0	0	0
7382	7380	"wkt"	"clob"	0	0	1	1
7383	7380	"srid"	"int"	32	0	1	2
7386	7385	"result"	"geometry"	0	0	0	0
7387	7385	"wkt"	"clob"	0	0	1	1
7388	7385	"srid"	"int"	32	0	1	2
7391	7390	"result"	"geometry"	0	0	0	0
7392	7390	"wkt"	"clob"	0	0	1	1
7393	7390	"srid"	"int"	32	0	1	2
7396	7395	"result"	"geometry"	0	0	0	0
7397	7395	"wkt"	"clob"	0	0	1	1
7398	7395	"srid"	"int"	32	0	1	2
7401	7400	"result"	"geometry"	0	0	0	0
7402	7400	"wkt"	"clob"	0	0	1	1
7403	7400	"srid"	"int"	32	0	1	2
7406	7405	"result"	"geometry"	0	0	0	0
7407	7405	"wkt"	"clob"	0	0	1	1
7408	7405	"srid"	"int"	32	0	1	2
7411	7410	"result"	"geometry"	0	0	0	0
7412	7410	"wkt"	"clob"	0	0	1	1
7413	7410	"srid"	"int"	32	0	1	2
7416	7415	"result"	"geometry"	0	0	0	0
7417	7415	"wkt"	"clob"	0	0	1	1
7420	7419	"result"	"geometry"	0	0	0	0
7421	7419	"wkt"	"clob"	0	0	1	1
7424	7423	"result"	"geometry"	0	0	0	0
7425	7423	"wkt"	"clob"	0	0	1	1
7428	7427	"result"	"geometry"	0	0	0	0
7429	7427	"wkt"	"clob"	0	0	1	1
7432	7431	"result"	"geometry"	0	0	0	0
7433	7431	"wkt"	"clob"	0	0	1	1
7436	7435	"result"	"geometry"	0	0	0	0
7437	7435	"wkt"	"clob"	0	0	1	1
7440	7439	"result"	"geometry"	0	0	0	0
7441	7439	"wkt"	"clob"	0	0	1	1
7444	7443	"result"	"geometry"	0	0	0	0
7445	7443	"wkt"	"clob"	0	0	1	1
7448	7447	"result"	"geometry"	0	0	0	0
7449	7447	"wkt"	"clob"	0	0	1	1
7452	7451	"result"	"geometry"	0	0	0	0
7453	7451	"x"	"double"	53	0	1	1
7454	7451	"y"	"double"	53	0	1	2
7457	7456	"result"	"geometry"	0	0	0	0
7458	7456	"x"	"double"	53	0	1	1
7459	7456	"y"	"double"	53	0	1	2
7462	7461	"result"	"geometry"	0	0	0	0
7463	7461	"x"	"double"	53	0	1	1
7464	7461	"y"	"double"	53	0	1	2
7465	7461	"z"	"double"	53	0	1	3
7468	7467	"result"	"geometry"	0	0	0	0
7469	7467	"x"	"double"	53	0	1	1
7470	7467	"y"	"double"	53	0	1	2
7471	7467	"z"	"double"	53	0	1	3
7472	7467	"m"	"double"	53	0	1	4
7475	7474	"result"	"geometry"	0	0	0	0
7476	7474	"x"	"double"	53	0	1	1
7477	7474	"y"	"double"	53	0	1	2
7478	7474	"m"	"double"	53	0	1	3
7481	7480	"result"	"geometry"	0	0	0	0
7482	7480	"geom"	"geometry"	0	0	1	1
7485	7484	"result"	"geometry"	0	0	0	0
7486	7484	"geom1"	"geometry"	0	0	1	1
7487	7484	"geom2"	"geometry"	0	0	1	2
7490	7489	"result"	"geometry"	0	0	0	0
7491	7489	"xmin"	"double"	53	0	1	1
7492	7489	"ymin"	"double"	53	0	1	2
7493	7489	"xmax"	"double"	53	0	1	3
7494	7489	"ymax"	"double"	53	0	1	4
7495	7489	"srid"	"int"	32	0	1	5
7498	7497	"result"	"geometry"	0	0	0	0
7499	7497	"xmin"	"double"	53	0	1	1
7500	7497	"ymin"	"double"	53	0	1	2
7501	7497	"xmax"	"double"	53	0	1	3
7502	7497	"ymax"	"double"	53	0	1	4
7505	7504	"result"	"geometry"	0	0	0	0
7506	7504	"geom"	"geometry"	0	0	1	1
7509	7508	"result"	"geometry"	0	0	0	0
7510	7508	"geom"	"geometry"	0	0	1	1
7511	7508	"srid"	"int"	32	0	1	2
7514	7513	"result"	"mbr"	0	0	0	0
7515	7513	"lowleftpointgeom"	"geometry"	0	0	1	1
7516	7513	"uprightpointgeom"	"geometry"	0	0	1	2
7519	7518	"result"	"clob"	0	0	0	0
7520	7518	"geom"	"geometry"	0	0	1	1
7523	7522	"result"	"int"	32	0	0	0
7524	7522	"geom"	"geometry"	0	0	1	1
7527	7526	"result"	"boolean"	1	0	0	0
7528	7526	"geom"	"geometry"	0	0	1	1
7531	7530	"result"	"clob"	0	0	0	0
7532	7530	"geom"	"geometry"	0	0	1	1
7535	7534	"result"	"int"	32	0	0	0
7536	7534	"geom"	"geometry"	0	0	1	1
7539	7538	"result"	"int"	32	0	0	0
7540	7538	"geom"	"geometry"	0	0	1	1
7543	7542	"result"	"int"	32	0	0	0
7544	7542	"geom"	"geometry"	0	0	1	1
7547	7546	"result"	"double"	53	0	0	0
7548	7546	"geom"	"geometry"	0	0	1	1
7551	7550	"result"	"double"	53	0	0	0
7552	7550	"box"	"mbr"	0	0	1	1
7555	7554	"result"	"double"	53	0	0	0
7556	7554	"geom"	"geometry"	0	0	1	1
7559	7558	"result"	"double"	53	0	0	0
7560	7558	"box"	"mbr"	0	0	1	1
7563	7562	"result"	"double"	53	0	0	0
7564	7562	"geom"	"geometry"	0	0	1	1
7567	7566	"result"	"double"	53	0	0	0
7568	7566	"box"	"mbr"	0	0	1	1
7571	7570	"result"	"double"	53	0	0	0
7572	7570	"geom"	"geometry"	0	0	1	1
7575	7574	"result"	"double"	53	0	0	0
7576	7574	"box"	"mbr"	0	0	1	1
7579	7578	"result"	"geometry"	0	0	0	0
7580	7578	"geom"	"geometry"	0	0	1	1
7583	7582	"result"	"geometry"	0	0	0	0
7584	7582	"geom"	"geometry"	0	0	1	1
7587	7586	"result"	"geometry"	0	0	0	0
7588	7586	"geom"	"geometry"	0	0	1	1
7589	7586	"sz"	"double"	53	0	1	2
7592	7591	"result"	"clob"	0	0	0	0
7593	7591	"srid_in"	"int"	32	0	1	1
7596	7595	"result"	"geometry"	0	0	0	0
7597	7595	"geom"	"geometry"	0	0	1	1
7598	7595	"srid_src"	"int"	32	0	1	2
7599	7595	"srid_dest"	"int"	32	0	1	3
7600	7595	"proj4_src"	"clob"	0	0	1	4
7601	7595	"proj4_dest"	"clob"	0	0	1	5
7604	7603	"result"	"geometry"	0	0	0	0
7605	7603	"geom"	"geometry"	0	0	1	1
7606	7603	"srid"	"int"	32	0	1	2
7609	7608	"result"	"geometry"	0	0	0	0
7610	7608	"geom"	"geometry"	0	0	1	1
7611	7608	"dx"	"double"	53	0	1	2
7612	7608	"dy"	"double"	53	0	1	3
7615	7614	"result"	"geometry"	0	0	0	0
7616	7614	"geom"	"geometry"	0	0	1	1
7617	7614	"dx"	"double"	53	0	1	2
7618	7614	"dy"	"double"	53	0	1	3
7619	7614	"dz"	"double"	53	0	1	4
7622	7621	"result"	"clob"	0	0	0	0
7623	7621	"geom"	"geometry"	0	0	1	1
7626	7625	"result"	"boolean"	1	0	0	0
7627	7625	"geom1"	"geometry"	0	0	1	1
7628	7625	"geom2"	"geometry"	0	0	1	2
7631	7630	"result"	"boolean"	1	0	0	0
7632	7630	"geom1"	"geometry"	0	0	1	1
7633	7630	"geom2"	"geometry"	0	0	1	2
7636	7635	"result"	"boolean"	1	0	0	0
7637	7635	"geom1"	"geometry"	0	0	1	1
7638	7635	"geom2"	"geometry"	0	0	1	2
7639	7635	"dst"	"double"	53	0	1	3
7642	7641	"result"	"double"	53	0	0	0
7643	7641	"geom"	"geometry"	0	0	1	1
7646	7645	"result"	"geometry"	0	0	0	0
7647	7645	"geom1"	"geometry"	0	0	1	1
7648	7645	"geom2"	"geometry"	0	0	1	2
7651	7650	"result"	"geometry"	0	0	0	0
7652	7650	"geom"	"geometry"	0	0	1	1
7655	7654	"result"	"geometry"	0	0	0	0
7656	7654	"geom"	"geometry"	0	0	1	1
7657	7654	"tolerance"	"double"	53	0	1	2
7658	7654	"flags"	"int"	32	0	1	3
7661	7660	"id"	"clob"	0	0	0	0
7662	7660	"polygonwkb"	"geometry"	0	0	0	1
7663	7660	"geom"	"geometry"	0	0	1	2
7666	7665	"path"	"clob"	0	0	0	0
7667	7665	"pointg"	"geometry"	0	0	0	1
7668	7665	"geom"	"geometry"	0	0	1	2
7673	7672	"result"	"json"	0	0	0	0
7674	7672	"js"	"json"	0	0	1	1
7675	7672	"pathexpr"	"clob"	0	0	1	2
7678	7677	"result"	"json"	0	0	0	0
7679	7677	"js"	"json"	0	0	1	1
7680	7677	"name"	"tinyint"	8	0	1	2
7683	7682	"result"	"json"	0	0	0	0
7684	7682	"js"	"json"	0	0	1	1
7685	7682	"name"	"int"	32	0	1	2
7688	7687	"result"	"json"	0	0	0	0
7689	7687	"js"	"json"	0	0	1	1
7690	7687	"name"	"bigint"	64	0	1	2
7693	7692	"result"	"clob"	0	0	0	0
7694	7692	"js"	"json"	0	0	1	1
7695	7692	"e"	"clob"	0	0	1	2
7698	7697	"result"	"double"	53	0	0	0
7699	7697	"js"	"json"	0	0	1	1
7702	7701	"result"	"bigint"	64	0	0	0
7703	7701	"js"	"json"	0	0	1	1
7706	7705	"result"	"boolean"	1	0	0	0
7707	7705	"js"	"clob"	0	0	1	1
7710	7709	"result"	"boolean"	1	0	0	0
7711	7709	"js"	"clob"	0	0	1	1
7714	7713	"result"	"boolean"	1	0	0	0
7715	7713	"js"	"clob"	0	0	1	1
7718	7717	"result"	"boolean"	1	0	0	0
7719	7717	"js"	"json"	0	0	1	1
7722	7721	"result"	"boolean"	1	0	0	0
7723	7721	"js"	"json"	0	0	1	1
7726	7725	"result"	"boolean"	1	0	0	0
7727	7725	"js"	"json"	0	0	1	1
7730	7729	"result"	"int"	32	0	0	0
7731	7729	"js"	"json"	0	0	1	1
7734	7733	"result"	"json"	0	0	0	0
7735	7733	"js"	"json"	0	0	1	1
7738	7737	"result"	"json"	0	0	0	0
7739	7737	"js"	"json"	0	0	1	1
7742	7741	"result"	"clob"	0	0	0	0
7743	7741	"js"	"json"	0	0	1	1
7746	7745	"result"	"clob"	0	0	0	0
7747	7745	"js"	"clob"	0	0	1	1
7750	7749	"result"	"clob"	0	0	0	0
7751	7749	"js"	"int"	32	0	1	1
7754	7753	"result"	"clob"	0	0	0	0
7755	7753	"js"	"json"	0	0	1	1
7758	7757	"result"	"clob"	0	0	0	0
7759	7757	"x"	"clob"	0	0	1	1
7762	7761	"result"	"clob"	0	0	0	0
7763	7761	"x"	"double"	53	0	1	1
7766	7765	"result"	"json"	0	0	0	0
7767	7765	"js"	"json"	0	0	1	1
7768	7765	"name"	"hugeint"	128	0	1	2
7771	7770	"result"	"clob"	0	0	0	0
7772	7770	"v"	"clob"	0	0	1	1
7776	7775	"result"	"uuid"	0	0	0	0
7779	7778	"result"	"uuid"	0	0	0	0
7780	7778	"u"	"uuid"	0	0	1	1
7783	7782	"result"	"uuid"	0	0	0	0
7784	7782	"u"	"clob"	0	0	1	1
7787	7786	"result"	"double"	53	0	0	0
7788	7786	"chi2"	"double"	53	0	1	1
7789	7786	"datapoints"	"double"	53	0	1	2
7792	7791	"dirname"	"clob"	0	0	1	0
7795	7794	"fname"	"clob"	0	0	1	0
7798	7797	"tname"	"clob"	0	0	1	0
7801	7800	"dirname"	"clob"	0	0	1	0
7802	7800	"pat"	"clob"	0	0	1	1
7837	7836	"fname"	"varchar"	256	0	1	0
7840	7839	"fid"	"int"	32	0	1	0
7841	7839	"varnname"	"varchar"	256	0	1	1
7844	7843	"schema"	"clob"	0	0	0	0
7845	7843	"table"	"clob"	0	0	0	1
7846	7843	"column"	"clob"	0	0	0	2
7847	7843	"type"	"clob"	0	0	0	3
7848	7843	"mode"	"clob"	0	0	0	4
7849	7843	"location"	"clob"	0	0	0	5
7850	7843	"count"	"bigint"	64	0	0	6
7851	7843	"typewidth"	"int"	32	0	0	7
7852	7843	"columnsize"	"bigint"	64	0	0	8
7853	7843	"heapsize"	"bigint"	64	0	0	9
7854	7843	"hashes"	"bigint"	64	0	0	10
7855	7843	"phash"	"boolean"	1	0	0	11
7856	7843	"imprints"	"bigint"	64	0	0	12
7857	7843	"sorted"	"boolean"	1	0	0	13
7890	7889	"result"	"bigint"	64	0	0	0
7891	7889	"nme"	"clob"	0	0	1	1
7892	7889	"i"	"bigint"	64	0	1	2
7893	7889	"d"	"bigint"	64	0	1	3
7896	7895	"result"	"bigint"	64	0	0	0
7897	7895	"tpe"	"clob"	0	0	1	1
7898	7895	"i"	"bigint"	64	0	1	2
7899	7895	"w"	"int"	32	0	1	3
7902	7901	"result"	"bigint"	64	0	0	0
7903	7901	"b"	"boolean"	1	0	1	1
7904	7901	"i"	"bigint"	64	0	1	2
7907	7906	"result"	"bigint"	64	0	0	0
7908	7906	"i"	"bigint"	64	0	1	1
7909	7906	"nme"	"clob"	0	0	1	2
7912	7911	"schema"	"clob"	0	0	0	0
7913	7911	"table"	"clob"	0	0	0	1
7914	7911	"column"	"clob"	0	0	0	2
7915	7911	"type"	"clob"	0	0	0	3
7916	7911	"count"	"bigint"	64	0	0	4
7917	7911	"columnsize"	"bigint"	64	0	0	5
7918	7911	"heapsize"	"bigint"	64	0	0	6
7919	7911	"hashes"	"bigint"	64	0	0	7
7920	7911	"imprints"	"bigint"	64	0	0	8
7921	7911	"sorted"	"boolean"	1	0	0	9
7961	7960	"tbl"	"clob"	0	0	1	0
7964	7963	"sch"	"clob"	0	0	1	0
7965	7963	"tbl"	"clob"	0	0	1	1
7968	7967	"sch"	"clob"	0	0	1	0
7969	7967	"tbl"	"clob"	0	0	1	1
7970	7967	"col"	"clob"	0	0	1	2
7973	7972	"sample"	"bigint"	64	0	1	0
7976	7975	"tbl"	"clob"	0	0	1	0
7977	7975	"sample"	"bigint"	64	0	1	1
7980	7979	"sch"	"clob"	0	0	1	0
7981	7979	"tbl"	"clob"	0	0	1	1
7982	7979	"sample"	"bigint"	64	0	1	2
7985	7984	"sch"	"clob"	0	0	1	0
7986	7984	"tbl"	"clob"	0	0	1	1
7987	7984	"col"	"clob"	0	0	1	2
7988	7984	"sample"	"bigint"	64	0	1	3
7991	7990	"result"	"clob"	0	0	0	0
7992	7990	"src"	"clob"	0	0	1	1
7995	7994	"result"	"smallint"	16	0	0	0
7996	7994	"one"	"tinyint"	8	0	1	1
7997	7994	"two"	"tinyint"	8	0	1	2
8000	7999	"result"	"int"	32	0	0	0
8001	7999	"one"	"smallint"	16	0	1	1
8002	7999	"two"	"smallint"	16	0	1	2
8005	8004	"result"	"bigint"	64	0	0	0
8006	8004	"one"	"int"	32	0	1	1
8007	8004	"two"	"int"	32	0	1	2
8010	8009	"result"	"hugeint"	128	0	0	0
8011	8009	"one"	"bigint"	64	0	1	1
8012	8009	"two"	"bigint"	64	0	1	2
8016	8015	"bam_repos"	"clob"	0	0	1	0
8017	8015	"dbschema"	"smallint"	16	0	1	1
8018	8015	"nr_threads"	"smallint"	16	0	1	2
8021	8020	"bam_files"	"clob"	0	0	1	0
8022	8020	"dbschema"	"smallint"	16	0	1	1
8023	8020	"nr_threads"	"smallint"	16	0	1	2
8026	8025	"bam_file"	"clob"	0	0	1	0
8027	8025	"dbschema"	"smallint"	16	0	1	1
8030	8029	"file_id"	"bigint"	64	0	1	0
8031	8029	"dbschema"	"smallint"	16	0	1	1
8034	8033	"result"	"boolean"	1	0	0	0
8035	8033	"flag"	"smallint"	16	0	1	1
8036	8033	"name"	"clob"	0	0	1	2
8039	8038	"result"	"clob"	0	0	0	0
8040	8038	"seq"	"clob"	0	0	1	1
8043	8042	"result"	"clob"	0	0	0	0
8044	8042	"qual"	"clob"	0	0	1	1
8047	8046	"result"	"int"	32	0	0	0
8048	8046	"cigar"	"clob"	0	0	1	1
8051	8050	"output_path"	"clob"	0	0	1	0
8054	8053	"output_path"	"clob"	0	0	1	0
8124	8123	"value"	"tinyint"	8	0	0	0
8125	8123	"first"	"tinyint"	8	0	1	1
8126	8123	"last"	"tinyint"	8	0	1	2
8129	8128	"value"	"tinyint"	8	0	0	0
8130	8128	"first"	"tinyint"	8	0	1	1
8131	8128	"last"	"tinyint"	8	0	1	2
8132	8128	"stepsize"	"tinyint"	8	0	1	3
8135	8134	"value"	"smallint"	16	0	0	0
8136	8134	"first"	"smallint"	16	0	1	1
8137	8134	"last"	"smallint"	16	0	1	2
8140	8139	"value"	"smallint"	16	0	0	0
8141	8139	"first"	"smallint"	16	0	1	1
8142	8139	"last"	"smallint"	16	0	1	2
8143	8139	"stepsize"	"smallint"	16	0	1	3
8146	8145	"value"	"int"	32	0	0	0
8147	8145	"first"	"int"	32	0	1	1
8148	8145	"last"	"int"	32	0	1	2
8151	8150	"value"	"int"	32	0	0	0
8152	8150	"first"	"int"	32	0	1	1
8153	8150	"last"	"int"	32	0	1	2
8154	8150	"stepsize"	"int"	32	0	1	3
8157	8156	"value"	"bigint"	64	0	0	0
8158	8156	"first"	"bigint"	64	0	1	1
8159	8156	"last"	"bigint"	64	0	1	2
8162	8161	"value"	"bigint"	64	0	0	0
8163	8161	"first"	"bigint"	64	0	1	1
8164	8161	"last"	"bigint"	64	0	1	2
8165	8161	"stepsize"	"bigint"	64	0	1	3
8168	8167	"value"	"real"	24	0	0	0
8169	8167	"first"	"real"	24	0	1	1
8170	8167	"last"	"real"	24	0	1	2
8171	8167	"stepsize"	"real"	24	0	1	3
8174	8173	"value"	"double"	53	0	0	0
8175	8173	"first"	"double"	53	0	1	1
8176	8173	"last"	"double"	53	0	1	2
8177	8173	"stepsize"	"double"	53	0	1	3
8180	8179	"value"	"decimal"	10	2	0	0
8181	8179	"first"	"decimal"	10	2	1	1
8182	8179	"last"	"decimal"	10	2	1	2
8183	8179	"stepsize"	"decimal"	10	2	1	3
8186	8185	"value"	"timestamp"	7	0	0	0
8187	8185	"first"	"timestamp"	7	0	1	1
8188	8185	"last"	"timestamp"	7	0	1	2
8189	8185	"stepsize"	"sec_interval"	13	0	1	3
8192	8191	"value"	"hugeint"	128	0	0	0
8193	8191	"first"	"hugeint"	128	0	1	1
8194	8191	"last"	"hugeint"	128	0	1	2
8197	8196	"value"	"hugeint"	128	0	0	0
8198	8196	"first"	"hugeint"	128	0	1	1
8199	8196	"last"	"hugeint"	128	0	1	2
8200	8196	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 257 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
446	6223	7
447	6223	7
1193	6223	7
446	6227	7
447	6227	7
1193	6227	7
6376	6405	5
6386	6416	5
6376	6434	5
6386	6434	5
6445	6473	5
2003	6506	7
2001	6506	7
2002	6506	7
6187	6506	7
6196	6511	7
6194	6511	7
6195	6511	7
2005	6511	7
2001	6511	7
2003	6511	7
6155	6516	7
2047	6516	7
2046	6516	7
2049	6516	7
2048	6516	7
6155	6521	7
2088	6521	7
2086	6521	7
2090	6521	7
2083	6521	7
2079	6521	7
6155	6526	7
2047	6526	7
2046	6526	7
2049	6526	7
2092	6526	7
2091	6526	7
2048	6526	7
2093	6526	7
2094	6526	7
6155	6531	7
2081	6531	7
2079	6531	7
2084	6531	7
2080	6531	7
2083	6531	7
6155	6536	7
2047	6536	7
2046	6536	7
2049	6536	7
2017	6536	7
2016	6536	7
2048	6536	7
2018	6536	7
6165	6541	7
2047	6541	7
2046	6541	7
2049	6541	7
2048	6541	7
6155	6541	7
6165	6546	7
2081	6546	7
2079	6546	7
2084	6546	7
2103	6546	7
2102	6546	7
2104	6546	7
2080	6546	7
2083	6546	7
184	6546	7
62	6546	7
61	6546	7
63	6546	7
6165	6551	7
2088	6551	7
2086	6551	7
2090	6551	7
2083	6551	7
2079	6551	7
2087	6551	7
2103	6551	7
2102	6551	7
2104	6551	7
62	6551	7
61	6551	7
63	6551	7
6165	6556	7
2047	6556	7
2046	6556	7
2049	6556	7
2048	6556	7
2017	6556	7
2016	6556	7
2018	6556	7
6165	6561	7
2047	6561	7
2046	6561	7
2049	6561	7
2092	6561	7
2091	6561	7
2048	6561	7
2093	6561	7
6155	6566	7
2047	6566	7
2046	6566	7
2049	6566	7
2017	6566	7
2016	6566	7
2048	6566	7
2018	6566	7
6155	6571	7
2047	6571	7
2046	6571	7
2049	6571	7
2092	6571	7
2091	6571	7
2048	6571	7
2093	6571	7
2018	6576	7
2016	6576	7
2017	6576	7
2047	6576	7
2046	6576	7
2049	6576	7
2048	6576	7
2018	6581	7
2016	6581	7
2017	6581	7
2047	6581	7
2046	6581	7
2049	6581	7
2092	6581	7
2091	6581	7
2048	6581	7
2093	6581	7
2083	6586	7
2079	6586	7
2080	6586	7
2084	6586	7
6595	6609	5
148	6628	7
68	6628	7
66	6628	7
1334	6628	7
1320	6628	7
243	6628	7
1331	6628	7
244	6628	7
290	6628	7
63	6640	7
529	6640	7
148	6640	7
150	6640	7
65	6640	7
6635	6640	7
6681	6689	5
6691	6697	5
6717	6735	5
7092	7094	10
7092	7093	4
6697	7108	5
6155	7108	5
6165	7108	5
2010	7108	5
2007	7108	5
2009	7108	5
2002	7108	5
2001	7108	5
2003	7108	5
290	7108	5
244	7108	5
7079	7108	5
7083	7108	5
7087	7108	5
7342	7351	7
7346	7355	7
7098	7591	7
7099	7591	7
7092	7591	7
70	7591	7
7159	7603	7
7591	7603	7
65	7603	7
7595	7603	7
148	7603	7
150	7603	7
7843	7873	5
7875	7887	13
7885	7887	13
7876	7887	13
7877	7887	13
7878	7887	13
7879	7887	13
7880	7887	13
7881	7887	13
7882	7887	13
7883	7887	13
7884	7887	13
63	7889	7
245	7889	7
251	7889	7
147	7895	7
64	7895	7
290	7895	7
245	7895	7
63	7901	7
245	7901	7
148	7906	7
63	7906	7
406	7906	7
7875	7911	7
7885	7911	7
7876	7911	7
7877	7911	7
7878	7911	7
7880	7911	7
7881	7911	7
7882	7911	7
7883	7911	7
7884	7911	7
7889	7911	7
7895	7911	7
7901	7911	7
7906	7911	7
7911	7933	5
7911	7943	5
78	7943	5
85	7943	5
86	7943	5
81	7943	5
65	7943	5
63	7943	5
245	7943	5
8056	8063	10
8056	8062	4
8066	8074	10
8067	8074	10
8067	8076	10
8066	8073	4
8067	8073	4
8062	8075	11
8067	8075	11
8079	8093	10
8080	8093	10
8080	8095	10
8079	8092	4
8080	8092	4
8062	8094	11
8080	8094	11
8098	8105	10
8099	8105	10
8099	8107	10
8098	8104	4
8099	8104	4
8062	8106	11
8099	8106	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1771 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
32	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
33	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
34	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
35	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
36	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
37	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
38	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
39	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
40	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
41	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
42	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
43	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
44	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
45	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
46	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
47	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
48	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
49	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
50	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
51	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
52	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
53	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
54	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
55	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
56	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
57	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
59	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
60	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
61	"hash"	"hash"	"mkey"	0	1	false	false	false	0
62	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
63	"="	"="	"calc"	0	1	false	false	false	0
64	"<>"	"!="	"calc"	0	1	false	false	false	0
65	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
66	">"	">"	"calc"	0	1	false	false	false	0
67	">="	">="	"calc"	0	1	false	false	false	0
68	"<"	"<"	"calc"	0	1	false	false	false	0
69	"<="	"<="	"calc"	0	1	false	false	false	0
73	"in"	"in"	"calc"	0	1	false	false	false	0
74	"identity"	"identity"	"calc"	0	1	false	false	false	0
75	"rowid"	"identity"	"calc"	0	1	false	false	false	0
76	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
79	"sql_min"	"min"	"calc"	0	1	false	false	false	0
80	"sql_max"	"max"	"calc"	0	1	false	false	false	0
81	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
103	"mod"	"%"	"calc"	0	1	false	false	false	0
104	"mod"	"%"	"calc"	0	1	false	false	false	0
105	"mod"	"%"	"calc"	0	1	false	false	false	0
106	"mod"	"%"	"calc"	0	1	false	false	false	0
107	"mod"	"%"	"calc"	0	1	false	false	false	0
108	"mod"	"%"	"calc"	0	1	false	false	false	0
109	"mod"	"%"	"calc"	0	1	false	false	false	0
110	"mod"	"%"	"calc"	0	1	false	false	false	0
111	"mod"	"%"	"calc"	0	1	false	false	false	0
112	"mod"	"%"	"calc"	0	1	false	false	false	0
113	"mod"	"%"	"calc"	0	1	false	false	false	0
114	"mod"	"%"	"calc"	0	1	false	false	false	0
115	"mod"	"%"	"calc"	0	1	false	false	false	0
116	"mod"	"%"	"calc"	0	1	false	false	false	0
124	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
125	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
126	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
127	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
128	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
129	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
130	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
131	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
132	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
133	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
134	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
135	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
136	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
137	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
138	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
139	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
140	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
141	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
142	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
143	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
144	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
145	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
146	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
147	"and"	"and"	"calc"	0	1	false	false	false	0
148	"or"	"or"	"calc"	0	1	false	false	false	0
149	"xor"	"xor"	"calc"	0	1	false	false	false	0
150	"not"	"not"	"calc"	0	1	false	false	false	0
151	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
152	"sql_add"	"+"	"calc"	0	1	false	false	false	0
153	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
154	"sql_div"	"/"	"calc"	0	1	false	false	false	0
155	"bit_and"	"and"	"calc"	0	1	false	false	false	0
156	"bit_or"	"or"	"calc"	0	1	false	false	false	0
157	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
158	"bit_not"	"not"	"calc"	0	1	false	false	false	0
159	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
160	"right_shift"	">>"	"calc"	0	1	false	false	false	0
161	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
162	"abs"	"abs"	"calc"	0	1	false	false	false	0
163	"sign"	"sign"	"calc"	0	1	false	false	false	0
164	"scale_up"	"*"	"calc"	0	1	false	false	false	0
165	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
166	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
167	"sql_add"	"+"	"calc"	0	1	false	false	false	0
168	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
169	"sql_div"	"/"	"calc"	0	1	false	false	false	0
170	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
171	"sql_add"	"+"	"calc"	0	1	false	false	false	0
172	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
173	"sql_div"	"/"	"calc"	0	1	false	false	false	0
174	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
175	"sql_add"	"+"	"calc"	0	1	false	false	false	0
176	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
177	"sql_div"	"/"	"calc"	0	1	false	false	false	0
178	"bit_and"	"and"	"calc"	0	1	false	false	false	0
179	"bit_or"	"or"	"calc"	0	1	false	false	false	0
180	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
181	"bit_not"	"not"	"calc"	0	1	false	false	false	0
182	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
183	"right_shift"	">>"	"calc"	0	1	false	false	false	0
184	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
185	"abs"	"abs"	"calc"	0	1	false	false	false	0
186	"sign"	"sign"	"calc"	0	1	false	false	false	0
187	"scale_up"	"*"	"calc"	0	1	false	false	false	0
188	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
189	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
190	"sql_add"	"+"	"calc"	0	1	false	false	false	0
191	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
192	"sql_div"	"/"	"calc"	0	1	false	false	false	0
193	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
194	"sql_add"	"+"	"calc"	0	1	false	false	false	0
195	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
196	"sql_div"	"/"	"calc"	0	1	false	false	false	0
197	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
198	"sql_add"	"+"	"calc"	0	1	false	false	false	0
199	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
200	"sql_div"	"/"	"calc"	0	1	false	false	false	0
201	"bit_and"	"and"	"calc"	0	1	false	false	false	0
202	"bit_or"	"or"	"calc"	0	1	false	false	false	0
203	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
204	"bit_not"	"not"	"calc"	0	1	false	false	false	0
205	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
206	"right_shift"	">>"	"calc"	0	1	false	false	false	0
207	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
208	"abs"	"abs"	"calc"	0	1	false	false	false	0
209	"sign"	"sign"	"calc"	0	1	false	false	false	0
210	"scale_up"	"*"	"calc"	0	1	false	false	false	0
211	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
212	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
213	"sql_add"	"+"	"calc"	0	1	false	false	false	0
214	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
215	"sql_div"	"/"	"calc"	0	1	false	false	false	0
216	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
217	"sql_add"	"+"	"calc"	0	1	false	false	false	0
218	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
219	"sql_div"	"/"	"calc"	0	1	false	false	false	0
220	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
221	"sql_add"	"+"	"calc"	0	1	false	false	false	0
222	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
223	"sql_div"	"/"	"calc"	0	1	false	false	false	0
224	"bit_and"	"and"	"calc"	0	1	false	false	false	0
225	"bit_or"	"or"	"calc"	0	1	false	false	false	0
226	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
227	"bit_not"	"not"	"calc"	0	1	false	false	false	0
228	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
229	"right_shift"	">>"	"calc"	0	1	false	false	false	0
230	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
231	"abs"	"abs"	"calc"	0	1	false	false	false	0
232	"sign"	"sign"	"calc"	0	1	false	false	false	0
233	"scale_up"	"*"	"calc"	0	1	false	false	false	0
234	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
235	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
236	"sql_add"	"+"	"calc"	0	1	false	false	false	0
237	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
238	"sql_div"	"/"	"calc"	0	1	false	false	false	0
239	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
240	"sql_add"	"+"	"calc"	0	1	false	false	false	0
241	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
242	"sql_div"	"/"	"calc"	0	1	false	false	false	0
243	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
244	"sql_add"	"+"	"calc"	0	1	false	false	false	0
245	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
246	"sql_div"	"/"	"calc"	0	1	false	false	false	0
247	"bit_and"	"and"	"calc"	0	1	false	false	false	0
248	"bit_or"	"or"	"calc"	0	1	false	false	false	0
249	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
250	"bit_not"	"not"	"calc"	0	1	false	false	false	0
251	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
252	"right_shift"	">>"	"calc"	0	1	false	false	false	0
253	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
254	"abs"	"abs"	"calc"	0	1	false	false	false	0
255	"sign"	"sign"	"calc"	0	1	false	false	false	0
256	"scale_up"	"*"	"calc"	0	1	false	false	false	0
257	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
258	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
259	"sql_add"	"+"	"calc"	0	1	false	false	false	0
260	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
261	"sql_div"	"/"	"calc"	0	1	false	false	false	0
262	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
263	"sql_add"	"+"	"calc"	0	1	false	false	false	0
264	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
265	"sql_div"	"/"	"calc"	0	1	false	false	false	0
266	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
267	"sql_add"	"+"	"calc"	0	1	false	false	false	0
268	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
269	"sql_div"	"/"	"calc"	0	1	false	false	false	0
270	"bit_and"	"and"	"calc"	0	1	false	false	false	0
271	"bit_or"	"or"	"calc"	0	1	false	false	false	0
272	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
273	"bit_not"	"not"	"calc"	0	1	false	false	false	0
274	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
275	"right_shift"	">>"	"calc"	0	1	false	false	false	0
276	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
277	"abs"	"abs"	"calc"	0	1	false	false	false	0
278	"sign"	"sign"	"calc"	0	1	false	false	false	0
279	"scale_up"	"*"	"calc"	0	1	false	false	false	0
280	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
281	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
282	"sql_add"	"+"	"calc"	0	1	false	false	false	0
283	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
284	"sql_div"	"/"	"calc"	0	1	false	false	false	0
285	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
286	"sql_add"	"+"	"calc"	0	1	false	false	false	0
287	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
288	"sql_div"	"/"	"calc"	0	1	false	false	false	0
289	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
290	"sql_add"	"+"	"calc"	0	1	false	false	false	0
291	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
292	"sql_div"	"/"	"calc"	0	1	false	false	false	0
293	"bit_and"	"and"	"calc"	0	1	false	false	false	0
294	"bit_or"	"or"	"calc"	0	1	false	false	false	0
295	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
296	"bit_not"	"not"	"calc"	0	1	false	false	false	0
297	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
298	"right_shift"	">>"	"calc"	0	1	false	false	false	0
299	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
300	"abs"	"abs"	"calc"	0	1	false	false	false	0
301	"sign"	"sign"	"calc"	0	1	false	false	false	0
302	"scale_up"	"*"	"calc"	0	1	false	false	false	0
303	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
304	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
305	"sql_add"	"+"	"calc"	0	1	false	false	false	0
306	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
307	"sql_div"	"/"	"calc"	0	1	false	false	false	0
308	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
309	"sql_add"	"+"	"calc"	0	1	false	false	false	0
310	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
311	"sql_div"	"/"	"calc"	0	1	false	false	false	0
312	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
313	"sql_add"	"+"	"calc"	0	1	false	false	false	0
314	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
315	"sql_div"	"/"	"calc"	0	1	false	false	false	0
316	"bit_and"	"and"	"calc"	0	1	false	false	false	0
317	"bit_or"	"or"	"calc"	0	1	false	false	false	0
318	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
319	"bit_not"	"not"	"calc"	0	1	false	false	false	0
320	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
321	"right_shift"	">>"	"calc"	0	1	false	false	false	0
322	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
323	"abs"	"abs"	"calc"	0	1	false	false	false	0
324	"sign"	"sign"	"calc"	0	1	false	false	false	0
325	"scale_up"	"*"	"calc"	0	1	false	false	false	0
326	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
327	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
328	"sql_add"	"+"	"calc"	0	1	false	false	false	0
329	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
330	"sql_div"	"/"	"calc"	0	1	false	false	false	0
331	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
332	"sql_add"	"+"	"calc"	0	1	false	false	false	0
333	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
334	"sql_div"	"/"	"calc"	0	1	false	false	false	0
335	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
336	"sql_add"	"+"	"calc"	0	1	false	false	false	0
337	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
338	"sql_div"	"/"	"calc"	0	1	false	false	false	0
339	"bit_and"	"and"	"calc"	0	1	false	false	false	0
340	"bit_or"	"or"	"calc"	0	1	false	false	false	0
341	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
342	"bit_not"	"not"	"calc"	0	1	false	false	false	0
343	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
344	"right_shift"	">>"	"calc"	0	1	false	false	false	0
345	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
346	"abs"	"abs"	"calc"	0	1	false	false	false	0
347	"sign"	"sign"	"calc"	0	1	false	false	false	0
348	"scale_up"	"*"	"calc"	0	1	false	false	false	0
349	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
350	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
351	"sql_add"	"+"	"calc"	0	1	false	false	false	0
352	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
353	"sql_div"	"/"	"calc"	0	1	false	false	false	0
354	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
355	"sql_add"	"+"	"calc"	0	1	false	false	false	0
356	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
357	"sql_div"	"/"	"calc"	0	1	false	false	false	0
358	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
359	"sql_add"	"+"	"calc"	0	1	false	false	false	0
360	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
361	"sql_div"	"/"	"calc"	0	1	false	false	false	0
362	"bit_and"	"and"	"calc"	0	1	false	false	false	0
363	"bit_or"	"or"	"calc"	0	1	false	false	false	0
364	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
365	"bit_not"	"not"	"calc"	0	1	false	false	false	0
366	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
367	"right_shift"	">>"	"calc"	0	1	false	false	false	0
368	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
369	"abs"	"abs"	"calc"	0	1	false	false	false	0
370	"sign"	"sign"	"calc"	0	1	false	false	false	0
371	"scale_up"	"*"	"calc"	0	1	false	false	false	0
372	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
373	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
374	"sql_add"	"+"	"calc"	0	1	false	false	false	0
375	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
376	"sql_div"	"/"	"calc"	0	1	false	false	false	0
377	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
378	"sql_add"	"+"	"calc"	0	1	false	false	false	0
379	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
380	"sql_div"	"/"	"calc"	0	1	false	false	false	0
381	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
382	"sql_add"	"+"	"calc"	0	1	false	false	false	0
383	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
384	"sql_div"	"/"	"calc"	0	1	false	false	false	0
385	"bit_and"	"and"	"calc"	0	1	false	false	false	0
386	"bit_or"	"or"	"calc"	0	1	false	false	false	0
387	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
388	"bit_not"	"not"	"calc"	0	1	false	false	false	0
389	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
390	"right_shift"	">>"	"calc"	0	1	false	false	false	0
391	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
392	"abs"	"abs"	"calc"	0	1	false	false	false	0
393	"sign"	"sign"	"calc"	0	1	false	false	false	0
394	"scale_up"	"*"	"calc"	0	1	false	false	false	0
395	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
396	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
397	"sql_add"	"+"	"calc"	0	1	false	false	false	0
398	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
399	"sql_div"	"/"	"calc"	0	1	false	false	false	0
400	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
401	"sql_add"	"+"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_div"	"/"	"calc"	0	1	false	false	false	0
404	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
405	"sql_add"	"+"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_div"	"/"	"calc"	0	1	false	false	false	0
408	"bit_and"	"and"	"calc"	0	1	false	false	false	0
409	"bit_or"	"or"	"calc"	0	1	false	false	false	0
410	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
411	"bit_not"	"not"	"calc"	0	1	false	false	false	0
412	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
413	"right_shift"	">>"	"calc"	0	1	false	false	false	0
414	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
415	"abs"	"abs"	"calc"	0	1	false	false	false	0
416	"sign"	"sign"	"calc"	0	1	false	false	false	0
417	"scale_up"	"*"	"calc"	0	1	false	false	false	0
418	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
419	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
420	"sql_add"	"+"	"calc"	0	1	false	false	false	0
421	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
422	"sql_div"	"/"	"calc"	0	1	false	false	false	0
423	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
424	"sql_add"	"+"	"calc"	0	1	false	false	false	0
425	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
426	"sql_div"	"/"	"calc"	0	1	false	false	false	0
427	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
428	"sql_add"	"+"	"calc"	0	1	false	false	false	0
429	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
430	"sql_div"	"/"	"calc"	0	1	false	false	false	0
431	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
432	"abs"	"abs"	"calc"	0	1	false	false	false	0
433	"sign"	"sign"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
436	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
437	"sql_add"	"+"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_div"	"/"	"calc"	0	1	false	false	false	0
440	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
441	"sql_add"	"+"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_div"	"/"	"calc"	0	1	false	false	false	0
444	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
445	"sql_add"	"+"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_div"	"/"	"calc"	0	1	false	false	false	0
448	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
449	"abs"	"abs"	"calc"	0	1	false	false	false	0
450	"sign"	"sign"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
453	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
454	"sql_add"	"+"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_div"	"/"	"calc"	0	1	false	false	false	0
457	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
458	"sql_add"	"+"	"calc"	0	1	false	false	false	0
459	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
460	"sql_div"	"/"	"calc"	0	1	false	false	false	0
461	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
462	"sql_add"	"+"	"calc"	0	1	false	false	false	0
463	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
464	"sql_div"	"/"	"calc"	0	1	false	false	false	0
465	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
466	"abs"	"abs"	"calc"	0	1	false	false	false	0
467	"sign"	"sign"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
470	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
471	"sql_add"	"+"	"calc"	0	1	false	false	false	0
472	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
473	"sql_div"	"/"	"calc"	0	1	false	false	false	0
474	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
475	"abs"	"abs"	"calc"	0	1	false	false	false	0
476	"sign"	"sign"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
479	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
480	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
481	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
482	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
483	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
484	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
485	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
486	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
487	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
488	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
489	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
490	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
491	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
492	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
493	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
494	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
495	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
496	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
497	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
498	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
499	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
500	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
501	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
502	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
503	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
504	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
505	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
506	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
507	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
508	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
509	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
510	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
511	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
512	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
513	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
514	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
515	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
516	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
517	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
518	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
519	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
520	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
521	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
522	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
523	"round"	"round"	"sql"	0	1	false	false	false	0
524	"round"	"round"	"sql"	0	1	false	false	false	0
525	"round"	"round"	"sql"	0	1	false	false	false	0
526	"round"	"round"	"sql"	0	1	false	false	false	0
527	"round"	"round"	"sql"	0	1	false	false	false	0
528	"round"	"round"	"sql"	0	1	false	false	false	0
529	"round"	"round"	"sql"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"scale_up"	"*"	"calc"	0	1	false	false	false	0
988	"scale_up"	"*"	"calc"	0	1	false	false	false	0
989	"scale_up"	"*"	"calc"	0	1	false	false	false	0
990	"scale_up"	"*"	"calc"	0	1	false	false	false	0
991	"scale_up"	"*"	"calc"	0	1	false	false	false	0
992	"scale_up"	"*"	"calc"	0	1	false	false	false	0
993	"scale_up"	"*"	"calc"	0	1	false	false	false	0
994	"scale_up"	"*"	"calc"	0	1	false	false	false	0
995	"scale_up"	"*"	"calc"	0	1	false	false	false	0
996	"scale_up"	"*"	"calc"	0	1	false	false	false	0
997	"scale_up"	"*"	"calc"	0	1	false	false	false	0
998	"scale_up"	"*"	"calc"	0	1	false	false	false	0
999	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1000	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1001	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1002	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1003	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1004	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1005	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1006	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1007	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1008	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1009	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1010	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1011	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1012	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1013	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1014	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1015	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1016	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1017	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1018	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1019	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1020	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1021	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1022	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1023	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1024	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1025	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1026	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1027	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1028	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1029	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1030	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1031	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1032	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1033	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1034	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1035	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1036	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1037	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1038	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1039	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1040	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1041	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1042	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1043	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1044	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1045	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1046	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1047	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1048	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1049	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1050	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1051	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1052	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1053	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1054	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1055	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1056	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1057	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1058	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1059	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1060	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1061	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1062	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1063	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1064	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1065	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1066	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1067	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1068	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1069	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1070	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1071	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1072	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1073	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1074	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1075	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1076	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1077	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1078	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1079	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1080	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1081	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1082	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1083	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1084	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1085	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1086	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1087	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1088	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1089	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1090	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1091	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1092	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1093	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1094	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1095	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1096	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1097	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1098	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1099	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1100	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1101	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1102	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1103	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1104	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1105	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1106	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1107	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1108	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1109	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1110	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1111	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1112	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1113	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1114	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1115	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1116	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1117	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1118	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1119	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1120	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1121	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1122	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1123	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1124	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1125	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1126	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1127	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1128	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1129	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1130	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1131	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1132	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1133	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1134	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1135	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1136	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1137	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1138	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1139	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1140	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1141	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1142	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1143	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1144	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1145	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1146	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1147	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1148	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1149	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1150	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1151	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1152	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1153	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1154	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1155	"power"	"pow"	"mmath"	0	1	false	false	false	0
1156	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1157	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1158	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1159	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1160	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1161	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1162	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1163	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1164	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1165	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1166	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1167	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1168	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1169	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1170	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1171	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1172	"log"	"log"	"mmath"	0	1	false	false	false	0
1173	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1174	"power"	"pow"	"mmath"	0	1	false	false	false	0
1175	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1176	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1177	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1178	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1179	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1180	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1181	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1182	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1183	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1184	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1185	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1186	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1187	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1188	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1189	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1190	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1191	"log"	"log"	"mmath"	0	1	false	false	false	0
1192	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1193	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1194	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1195	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1196	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1197	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1198	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1199	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1200	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1201	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1202	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1203	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1204	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1205	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1206	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1207	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1208	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1209	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1210	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1211	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1212	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1213	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1214	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1215	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1216	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1217	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1218	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1219	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1220	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1221	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1222	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1223	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1224	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1225	"year"	"year"	"mtime"	0	1	false	false	false	0
1226	"month"	"month"	"mtime"	0	1	false	false	false	0
1227	"day"	"day"	"mtime"	0	1	false	false	false	0
1228	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1229	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1230	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1231	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1232	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1233	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1234	"year"	"year"	"mtime"	0	1	false	false	false	0
1235	"month"	"month"	"mtime"	0	1	false	false	false	0
1236	"day"	"day"	"mtime"	0	1	false	false	false	0
1237	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1238	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1239	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1240	"year"	"year"	"mtime"	0	1	false	false	false	0
1241	"month"	"month"	"mtime"	0	1	false	false	false	0
1242	"day"	"day"	"mtime"	0	1	false	false	false	0
1243	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1244	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1245	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1246	"year"	"year"	"mtime"	0	1	false	false	false	0
1247	"month"	"month"	"mtime"	0	1	false	false	false	0
1248	"day"	"day"	"mtime"	0	1	false	false	false	0
1249	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1250	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1251	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1252	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1253	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1254	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1255	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1256	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1257	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1258	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1259	"restart"	"restart"	"sql"	0	1	false	false	false	0
1260	"index"	"index"	"calc"	0	1	false	false	false	0
1261	"index"	"index"	"calc"	0	1	false	false	false	0
1262	"index"	"index"	"calc"	0	1	false	false	false	0
1263	"strings"	"strings"	"calc"	0	1	false	false	false	0
1264	"locate"	"locate"	"str"	0	1	false	false	false	0
1265	"locate"	"locate"	"str"	0	1	false	false	false	0
1266	"substring"	"substring"	"str"	0	1	false	false	false	0
1267	"substring"	"substring"	"str"	0	1	false	false	false	0
1268	"like"	"like"	"algebra"	0	1	false	false	false	0
1269	"like"	"like"	"algebra"	0	1	false	false	false	0
1270	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1271	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1272	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1273	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1274	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1275	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1276	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1277	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1278	"concat"	"+"	"calc"	0	1	false	false	false	0
1279	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1280	"code"	"unicode"	"str"	0	1	false	false	false	0
1281	"length"	"stringlength"	"str"	0	1	false	false	false	0
1282	"right"	"stringright"	"str"	0	1	false	false	false	0
1283	"left"	"stringleft"	"str"	0	1	false	false	false	0
1284	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1285	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1286	"lower"	"toLower"	"str"	0	1	false	false	false	0
1287	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1288	"trim"	"trim"	"str"	0	1	false	false	false	0
1289	"trim"	"trim"	"str"	0	1	false	false	false	0
1290	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1291	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1292	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1293	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1294	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1295	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1296	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1297	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1298	"insert"	"insert"	"str"	0	1	false	false	false	0
1299	"replace"	"replace"	"str"	0	1	false	false	false	0
1300	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1301	"space"	"space"	"str"	0	1	false	false	false	0
1302	"char_length"	"length"	"str"	0	1	false	false	false	0
1303	"character_length"	"length"	"str"	0	1	false	false	false	0
1304	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1305	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1306	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1307	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1308	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1309	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1310	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1311	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1312	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1313	"index"	"index"	"calc"	0	1	false	false	false	0
1314	"index"	"index"	"calc"	0	1	false	false	false	0
1315	"index"	"index"	"calc"	0	1	false	false	false	0
1316	"strings"	"strings"	"calc"	0	1	false	false	false	0
1317	"locate"	"locate"	"str"	0	1	false	false	false	0
1318	"locate"	"locate"	"str"	0	1	false	false	false	0
1319	"substring"	"substring"	"str"	0	1	false	false	false	0
1320	"substring"	"substring"	"str"	0	1	false	false	false	0
1321	"like"	"like"	"algebra"	0	1	false	false	false	0
1322	"like"	"like"	"algebra"	0	1	false	false	false	0
1323	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1324	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1325	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1326	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1327	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1328	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1329	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1330	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1331	"concat"	"+"	"calc"	0	1	false	false	false	0
1332	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1333	"code"	"unicode"	"str"	0	1	false	false	false	0
1334	"length"	"stringlength"	"str"	0	1	false	false	false	0
1335	"right"	"stringright"	"str"	0	1	false	false	false	0
1336	"left"	"stringleft"	"str"	0	1	false	false	false	0
1337	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1338	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1339	"lower"	"toLower"	"str"	0	1	false	false	false	0
1340	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1341	"trim"	"trim"	"str"	0	1	false	false	false	0
1342	"trim"	"trim"	"str"	0	1	false	false	false	0
1343	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1344	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1345	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1346	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1347	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1348	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1349	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1350	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1351	"insert"	"insert"	"str"	0	1	false	false	false	0
1352	"replace"	"replace"	"str"	0	1	false	false	false	0
1353	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1354	"space"	"space"	"str"	0	1	false	false	false	0
1355	"char_length"	"length"	"str"	0	1	false	false	false	0
1356	"character_length"	"length"	"str"	0	1	false	false	false	0
1357	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1358	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1359	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1360	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1361	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1362	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1363	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1364	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1365	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1366	"index"	"index"	"calc"	0	1	false	false	false	0
1367	"index"	"index"	"calc"	0	1	false	false	false	0
1368	"index"	"index"	"calc"	0	1	false	false	false	0
1369	"strings"	"strings"	"calc"	0	1	false	false	false	0
1370	"locate"	"locate"	"str"	0	1	false	false	false	0
1371	"locate"	"locate"	"str"	0	1	false	false	false	0
1372	"substring"	"substring"	"str"	0	1	false	false	false	0
1373	"substring"	"substring"	"str"	0	1	false	false	false	0
1374	"like"	"like"	"algebra"	0	1	false	false	false	0
1375	"like"	"like"	"algebra"	0	1	false	false	false	0
1376	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1377	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1378	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1379	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1380	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1381	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1382	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1383	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1384	"concat"	"+"	"calc"	0	1	false	false	false	0
1385	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1386	"code"	"unicode"	"str"	0	1	false	false	false	0
1387	"length"	"stringlength"	"str"	0	1	false	false	false	0
1388	"right"	"stringright"	"str"	0	1	false	false	false	0
1389	"left"	"stringleft"	"str"	0	1	false	false	false	0
1390	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1391	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1392	"lower"	"toLower"	"str"	0	1	false	false	false	0
1393	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1394	"trim"	"trim"	"str"	0	1	false	false	false	0
1395	"trim"	"trim"	"str"	0	1	false	false	false	0
1396	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1397	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1398	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1399	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1400	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1401	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1402	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1403	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1404	"insert"	"insert"	"str"	0	1	false	false	false	0
1405	"replace"	"replace"	"str"	0	1	false	false	false	0
1406	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1407	"space"	"space"	"str"	0	1	false	false	false	0
1408	"char_length"	"length"	"str"	0	1	false	false	false	0
1409	"character_length"	"length"	"str"	0	1	false	false	false	0
1410	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1411	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1412	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1413	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1414	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1415	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1416	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1417	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1418	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1419	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1420	"copyfrom"	"copyfrom"	"sql"	0	5	false	true	false	0
1421	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
58	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
70	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
71	"exist"	"exist"	"aggr"	0	3	false	false	false	0
72	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
77	"min"	"min"	"aggr"	0	3	false	false	false	0
78	"max"	"max"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"sum"	"sum"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"sum"	"sum"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"sum"	"sum"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"sum"	"sum"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"prod"	"prod"	"aggr"	0	3	false	false	false	0
94	"prod"	"prod"	"aggr"	0	3	false	false	false	0
95	"prod"	"prod"	"aggr"	0	3	false	false	false	0
96	"prod"	"prod"	"aggr"	0	3	false	false	false	0
97	"prod"	"prod"	"aggr"	0	3	false	false	false	0
98	"prod"	"prod"	"aggr"	0	3	false	false	false	0
99	"prod"	"prod"	"aggr"	0	3	false	false	false	0
100	"prod"	"prod"	"aggr"	0	3	false	false	false	0
101	"prod"	"prod"	"aggr"	0	3	false	false	false	0
102	"prod"	"prod"	"aggr"	0	3	false	false	false	0
117	"sum"	"sum"	"aggr"	0	3	false	false	false	0
118	"prod"	"prod"	"aggr"	0	3	false	false	false	0
119	"sum"	"sum"	"aggr"	0	3	false	false	false	0
120	"prod"	"prod"	"aggr"	0	3	false	false	false	0
121	"avg"	"avg"	"aggr"	0	3	false	false	false	0
122	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
123	"count"	"count"	"aggr"	0	3	false	false	false	0
6176	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
6179	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
6185	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
6205	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
6210	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
6215	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
6219	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
6223	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double) \nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
6227	"radians"	"create function radians(d double) \nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
6231	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
6234	"getanchor"	"create function getanchor( theurl url ) returns string \n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
6238	"getbasename"	"create function getbasename(theurl url) returns string       \n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
6242	"getcontent"	"create function getcontent(theurl url)   returns string       \n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
6246	"getcontext"	"create function getcontext(theurl url)   returns string       \n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
6250	"getdomain"	"create function getdomain(theurl url) returns string       \n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
6254	"getextension"	"create function getextension(theurl url) returns string       \n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
6258	"getfile"	"create function getfile(theurl url) returns string       \n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
6262	"gethost"	"create function gethost(theurl url)   returns string       \n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
6266	"getport"	"create function getport(theurl url) returns string       \n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
6270	"getprotocol"	"create function getprotocol(theurl url) returns string       \n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
6274	"getquery"	"create function getquery(theurl url) returns string       \n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
6278	"getuser"	"create function getuser(theurl url) returns string       \n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
6282	"getroboturl"	"create function getroboturl(theurl url) returns string       \n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
6286	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
6290	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string) \n\treturns url       \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
6297	"newurl"	"create function newurl(protocol string, hostname string, file string) \n\treturns url \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
6303	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
6308	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
6313	"convert"	"create function ""convert""(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
6319	"broadcast"	"create function ""broadcast"" (p inet) returns inet \n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
6323	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
6327	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
6331	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
6336	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
6340	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
6344	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
6348	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
6352	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
6356	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
6361	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
6366	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
6371	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
6376	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions. \n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t\t-- size of MAL plan\n\toptimize bigint \t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
6386	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the \n-- server during execution phase. \n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,  \t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
6436	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
6438	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
6440	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
6443	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
6445	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog() \n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20), \t-- wallclock, no mtime in kernel\n\t\tpc varchar(50), \t-- module.function[nr]\n\t\tthread int, \t\t-- thread identifier\n\t\tticks bigint, \t\t-- time in microseconds\n\t\trrsmb bigint, \t\t-- resident memory in MB\n\t\tvmmb bigint, \t\t-- virtual size in MB\n\t\treads bigint, \t\t-- number of blocks read\n\t\twrites bigint, \t\t-- number of blocks written\n\t\tminflt bigint, \t\t-- minor page faults\n\t\tmajflt bigint, \t\t-- major page faults\n\t\tnvcsw bigint, \t\t-- non-volantary conext switch\n\t\tstmt string\t\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
6475	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
6479	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
6482	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function ""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6486	"epoch"	"create function ""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6490	"epoch"	"create function ""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6494	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
6498	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
6502	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6506	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6511	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6516	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6521	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6526	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6531	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6536	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6541	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6546	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6551	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i \ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6556	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6561	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6566	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6571	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6576	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6581	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6586	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6591	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string) \n\treturns string \n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6595	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6611	"shutdown"	"create procedure sys.shutdown(delay tinyint) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6614	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6618	"settimeout"	"-- control the query and session time out \ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6621	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6625	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6628	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6635	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6640	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6646	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6652	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6657	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6662	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6666	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6670	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats () \n\treturns table (rewrite string, count int) \n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6674	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache() \n\treturns table (query string, count int) \n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6678	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string) \n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6681	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers () \n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6691	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6699	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp () \n\treturns table (id int, name string, htype string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int, \n\t\tlocation string, heat int, dirty string, \n\t\tstatus string, kind string) \n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6713	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6717	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6737	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6740	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6743	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6746	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6749	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6752	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6755	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6759	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6763	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6767	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6771	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6775	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6779	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6783	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6787	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6791	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6795	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6799	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6803	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6807	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6811	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6815	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6819	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6823	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6827	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6831	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6835	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6839	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6843	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6847	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6851	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6855	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6859	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6863	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6867	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6871	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6875	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6879	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6883	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6887	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6891	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6895	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6899	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6903	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6907	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6911	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6915	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6919	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6923	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6927	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6931	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6935	"median"	"create aggregate median(val decimal) returns decimal\n \texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6939	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6943	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6947	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6951	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6955	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6959	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6964	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6969	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6974	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6979	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6984	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6989	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6994	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6999	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7004	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7009	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7014	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7019	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7024	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7029	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7034	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7039	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7044	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7049	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
7053	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
7057	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
7061	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
7065	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7069	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7074	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7079	"has_z"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make sure you load the geom module before loading this sql module\n-- create spatial_ref_sys metadata table\n\ncreate function has_z(info integer) returns integer external name geom.""hasZ"";"	"geom"	1	1	false	false	false	2000
7083	"has_m"	"create function has_m(info integer) returns integer external name geom.""hasM"";"	"geom"	1	1	false	false	false	2000
7087	"get_type"	"create function get_type(info integer, format integer) returns string external name geom.""getType"";"	"geom"	1	1	false	false	false	2000
7111	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr(geom geometry) returns mbr external name geom.""mbr"";"	"geom"	1	1	false	false	false	2000
7115	"st_overlaps"	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.""mbrOverlaps"";"	"geom"	1	1	false	false	false	2000
7120	"st_contains"	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.""mbrContains"";"	"geom"	1	1	false	false	false	2000
7125	"st_equals"	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.""mbrEqual"";"	"geom"	1	1	false	false	false	2000
7130	"st_distance"	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.""mbrDistance"";"	"geom"	1	1	false	false	false	2000
7135	"st_wkttosql"	"--CREATE FUNCTION mbrOverlapOrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrLeft"";\n--CREATE FUNCTION mbrOverlapOrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrBelow"";\n--CREATE FUNCTION mbrOverlapOrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrRight"";\n--CREATE FUNCTION mbrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrLeft"";\n--CREATE FUNCTION mbrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrBelow"";\n--CREATE FUNCTION mbrEqual(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrEqual"";\n--CREATE FUNCTION mbrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrRight"";\n--CREATE FUNCTION mbrContained(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrContained"";\n--CREATE FUNCTION mbrOverlapOrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrAbove"";\n--CREATE FUNCTION mbrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrAbove"";\n\n\n-------------------------------------------------------------------------\n------------------------- Management Functions- -------------------------\n-------------------------------------------------------------------------\n--CREATE PROCEDURE AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) \n--CREATE FUNCTION AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) RETURNS string\n--BEGIN\n--\tDECLARE column_type string;\n--\tSET column_type = concat('geometry( ', geometryType);\n--\tSET column_type = concat(column_type, ', ');\n--\tSET column_type = concat(column_type, srid);\n--\tSET column_type = concat(column_type, ' )'); \n--\tALTER TABLE table_name ADD column_name column_type; --geometry('point', 28992);\n--\t\n--\tRETURN column_type;\n--END;\n\n--CREATE PROCEDURE t(table_name string, column_name string, column_type string)\n--BEGIN\n--\tALTER TABLE table_name ADD column_name;\n--END;\n\n--CREATE FUNCTION t(table_name string, column_name string, srid integer, type string, dimension integer) RETURNS string \n--BEGIN\n--\tEXECUTE PROCEDURE AddGeometryColumn(table_name, column_name, srid, type, dimension);\n--\tRETURN '';\n--END;\n\n\n\n---------------------------------\n-- OGC - Simple Feature Access --\n---------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_wkttosql(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7139	"st_wkbtosql"	"--Construct a Geometry from a WKB\ncreate function st_wkbtosql(geom string) returns geometry external name geom.""FromBinary"";"	"geom"	1	1	false	false	false	2000
7143	"st_astext"	"--Obtaining WKT from Geometry\ncreate function st_astext(geom geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
7147	"st_asbinary"	"--Obtainig WKB from Geometry\ncreate function st_asbinary(geom geometry) returns string external name geom.""AsBinary"";"	"geom"	1	1	false	false	false	2000
7151	"st_dimension"	"--Functions on Geometries\ncreate function st_dimension(geom geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
7155	"st_geometrytype"	"create function st_geometrytype(geom geometry) returns string external name geom.""GeometryType2"";"	"geom"	1	1	false	false	false	2000
7159	"st_srid"	"create function st_srid(geom geometry) returns integer external name geom.""getSRID"";"	"geom"	1	1	false	false	false	2000
7163	"st_setsrid"	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.""setSRID"";"	"geom"	1	1	false	false	false	2000
7168	"st_isempty"	"create function st_isempty(geom geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
7172	"st_issimple"	"create function st_issimple(geom geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
7176	"st_boundary"	"create function st_boundary(geom geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
7180	"st_envelope"	"create function st_envelope(geom geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
7184	"st_equals"	"--Functions testing spatial relations between Geometries\ncreate function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
7189	"st_disjoint"	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
7194	"st_intersects"	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.""Intersects"";"	"geom"	1	1	false	false	false	2000
7199	"st_touches"	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
7204	"st_crosses"	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
7209	"st_within"	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
7214	"st_contains"	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
7219	"st_overlaps"	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
7224	"st_relate"	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
7230	"st_distance"	"--Distance between Geometries\ncreate function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
7235	"st_intersection"	"--Functions that implement spatial operators\ncreate function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
7240	"st_difference"	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
7245	"st_union"	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7250	"st_union"	"create aggregate st_union(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7254	"st_symdifference"	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
7259	"st_buffer"	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
7264	"st_convexhull"	"create function st_convexhull(geom geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
7268	"st_x"	"--Functions on Point\ncreate function st_x(geom geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
7272	"st_y"	"create function st_y(geom geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
7276	"st_z"	"create function st_z(geom geometry) returns double external name geom.""Z"";"	"geom"	1	1	false	false	false	2000
7280	"st_startpoint"	"--Functions on Curve (i.e. LineString)\ncreate function st_startpoint(geom geometry) returns geometry external name geom.""StartPoint"";"	"geom"	1	1	false	false	false	2000
7284	"st_endpoint"	"create function st_endpoint(geom geometry) returns geometry external name geom.""EndPoint"";"	"geom"	1	1	false	false	false	2000
7288	"st_isring"	"create function st_isring(geom geometry) returns boolean external name geom.""IsRing"";"	"geom"	1	1	false	false	false	2000
7292	"st_length"	"create function st_length(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7296	"st_isclosed"	"--valid also for MultiCurve\ncreate function st_isclosed(geom geometry) returns boolean external name geom.""IsClosed"";"	"geom"	1	1	false	false	false	2000
7300	"st_numpoints"	"--valid also for MultiCurve\n\n--Functions on LineString\ncreate function st_numpoints(geom geometry) returns integer external name geom.""NumPoints"";"	"geom"	1	1	false	false	false	2000
7304	"st_pointn"	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.""PointN"";"	"geom"	1	1	false	false	false	2000
7309	"st_centroid"	"--Functions on Surface (i.e. Polygon and Polyhedral Surface) and MultiSurface\ncreate function st_centroid(geom geometry) returns geometry external name geom.""Centroid"";"	"geom"	1	1	false	false	false	2000
7313	"st_pointonsurface"	"create function st_pointonsurface(geom geometry) returns geometry external name geom.""PointOnSurface"";"	"geom"	1	1	false	false	false	2000
7317	"st_area"	"create function st_area(geom geometry) returns double external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
7321	"st_exteriorring"	"--Functions on Polygon\ncreate function st_exteriorring(geom geometry) returns geometry external name geom.""ExteriorRing"";"	"geom"	1	1	false	false	false	2000
7325	"st_setexteriorring"	"create function st_setexteriorring(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7329	"st_numinteriorring"	"--gets a linestring and creates a polygon (postGIS: ST_MakePolygon)\ncreate function st_numinteriorring(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7333	"st_interiorringn"	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.""InteriorRingN"";"	"geom"	1	1	false	false	false	2000
7338	"st_interiorrings"	"create function st_interiorrings(geom geometry) returns geometrya external name geom.""InteriorRings"";"	"geom"	1	1	false	false	false	2000
7342	"st_numgeometries"	"--CREATE FUNCTION ST_SetInteriorRings(geom GeometryA) RETURNS Geometry EXTERNAL NAME geom.""SetInteriorRings""; --what is this function supposed to do????\n\n--Functions on GeomCollection\ncreate function st_numgeometries(geom geometry) returns integer external name geom.""NumGeometries"";"	"geom"	1	1	false	false	false	2000
7346	"st_geometryn"	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.""GeometryN"";"	"geom"	1	1	false	false	false	2000
7351	"st_numpatches"	"--Functions on Polyhedral Surfaces (a simple surface, consisting of a number of Polygon pathes or facets)\n--CREATE FUNCTION ST_Geometries(geom Geometry) RETURNS TABLE(geom Geometries) EXTERNAL NAME geom.""Geometries"";\n--CREATE FUNCTION NumSurfaces(geom Geometry) RETURNS integer EXTERNAL NAME geom.""NumSurfaces"";\n--CREATE FUNCTION Surface(positionNum integer) RETURNS Geometry EXTERNAL NAME geom.""SurfaceN"";\n--from Part 1\ncreate function st_numpatches(geom geometry) returns integer --EXTERNAL NAME geom.""NumPatches""; --same with NumSurfaces\nbegin\n\treturn select st_numgeometries(geom);\nend;"	"user"	2	1	false	false	false	2000
7355	"st_patchn"	"create function st_patchn(geom geometry, patchnum integer) returns geometry --EXTERNAL NAME geom.""PatchN"" --same with Surface\nbegin\n\treturn select st_geometryn(geom, patchnum);\nend;"	"user"	2	1	false	false	false	2000
7360	"st_geomfromtext"	"--BoundingPolygons\n--IsClosed\n\n-------------------------------------------\n-- DEPRECATED BUT IMPLEMENTED BY postGIS --\n-------------------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7365	"st_pointfromtext"	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
7370	"st_linefromtext"	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
7375	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
7380	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
7385	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
7390	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
7395	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
7400	"st_bdpolyfromtext"	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdPolyFromText"";"	"geom"	1	1	false	false	false	2000
7405	"st_bdmpolyfromtext"	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdMPolyFromText"";"	"geom"	1	1	false	false	false	2000
7410	"st_geometryfromtext"	"--Construct a Geoemtry from a WKB\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_PolygonFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PolygonFromWKB"";\n--CREATE FUNCTION ST_MPointFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPointFromWKB"";\n--CREATE FUNCTION ST_MLineFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MLineFromWKB"";\n--CREATE FUNCTION ST_MPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPolyFromWKB"";\n--CREATE FUNCTION ST_GeomCollFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomCollFromWKB"";\n--CREATE FUNCTION ST_BdPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdPolyFromWKB""; \n--CREATE FUNCTION ST_BdMPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdMPolyFromWKB"";\n\n--CREATE FUNCTION ST_M(geom Geometry) RETURNS double EXTERNAL NAME geom.""M""; --geos does not support M coordinate (at least in the c version)\n--CREATE FUNCTION ST_CurveToLine RETURNS EXTERNAL NAME --geos does not support CIRCULARSTRING and does not have such function\n\n\n\n\n-------------\n-- PostGIS --\n-------------\n\n-------------------------------------------------------------------------\n------------------------- Geometry Constructors -------------------------\n-------------------------------------------------------------------------\n-- Create Geometry from text (wkt)\ncreate function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7415	"st_geomfromtext"	"create function st_geomfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7419	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7423	"st_pointfromtext"	"create function st_pointfromtext(wkt string) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
7427	"st_linefromtext"	"create function st_linefromtext(wkt string) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
7431	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
7435	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
7439	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
7443	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
7447	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
7451	"st_makepoint"	"--CREATE FUNCTION ST_GeogFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n--CREATE FUNCTION ST_GeographyFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n\n\n-- Create Geometry from raw representation (byte array)\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid smallint) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_GeogFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geography EXTERNAL NAME geom.""GeogFromWKB"";\n\n-- Create Geometry from simpler geometries\ncreate function st_makepoint(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7456	"st_point"	"create function st_point(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7461	"st_makepoint"	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7467	"st_makepoint"	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7474	"st_makepointm"	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.""MakePointM"";"	"geom"	1	1	false	false	false	2000
7480	"st_makeline"	"--CREATE FUNCTION ST_MakeLine(geometry set geoms)?????\ncreate aggregate st_makeline(geom geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	3	false	false	false	2000
7484	"st_makeline"	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	1	false	false	false	2000
7489	"st_makeenvelope"	"--two single geometries\n--CREATE FUNCTION ST_MakeLine(geoms_arr Geometry[]) RETURNS Geometry external name geom.""MakeLine"";\n--CREATE FUNCTION ST_LineFromMultiPoint(pointGeom Geometry) RETURNS Geometry external name geom.""LineFromMultiPoint""; --gets mutlipoint returns linestring\ncreate function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7497	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7504	"st_makepolygon"	"create function st_makepolygon(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7508	"st_polygon"	"--gets linestring\n--CREATE FUNCTION ST_MakePolygon(outerGeom Geometry, interiorGeoms table(g Geometry)) RETURNS Geometry external name geom.""MakePolygon""; --gets linestrings\ncreate function st_polygon(geom geometry, srid integer) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7513	"st_makebox2d"	"--gets linestring\ncreate function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.""MakeBox2D"";"	"geom"	1	1	false	false	false	2000
7518	"geometrytype"	"--gets 2d points\n--CREATE FUNCTION ST_3DMakeBox(lowLeftPointGeom Geometry, upRightPointGeom Geometry) RETURNS mbr external name geom.""MakeBox3D""; --gets 3d points\n\n-- Other constructors\n--CREATE FUNCTION ST_Box2dFromGeoHash() RETURNS mbr external name geom.""Box2dFromGeoHash"";\n--CREATE FUNCTION ST_GeomFromEWKB\n--CREATE FUNCTION ST_GeomFromEWKT\n--CREATE FUNCTION ST_GeomFromGML\n--CREATE FUNCTION ST_GeomFromGeoJSON\n--CREATE FUNCTION ST_GeomFromKML\n--CREATE FUNCTION ST_GMLToSQL\n--CREATE FUNCTION ST_PointFromGeoHash\n\n-------------------------------------------------------------------------\n-------------------------- Geometry Accessors ---------------------------\n-------------------------------------------------------------------------\ncreate function geometrytype(geom geometry) returns string external name geom.""GeometryType1"";"	"geom"	1	1	false	false	false	2000
7522	"st_coorddim"	"create function st_coorddim(geom geometry) returns integer external name geom.""CoordDim"";"	"geom"	1	1	false	false	false	2000
7526	"st_isvalid"	"--CREATE FUNCTION ST_IsCollection(geom Geometry) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalid(geom geometry) returns boolean external name geom.""IsValid"";"	"geom"	1	1	false	false	false	2000
7530	"st_isvalidreason"	"--CREATE FUNCTION ST_IsValid(geom Geometry, flags integer) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalidreason(geom geometry) returns string external name geom.""IsValidReason"";"	"geom"	1	1	false	false	false	2000
7534	"st_npoints"	"--CREATE FUNCTION ST_IsValidReason(geom Geometry, flags integer) RETURNS string EXTERNAL NAME\n--CREATE FUNCTION ST_IsValidDetail(geom Geometry) RETURNS string EXTERNAL NAME geom.""IsValidDetail""; \n--CREATE FUNCTION ST_IsValidDetail(geom Geometry, flags integer) RETURNS A_CUSTOM_ROW EXTERNAL NAME\n--CREATE FUNCTION ST_NDims(geom Geometry) RETURNS integer EXTERNAL NAME\ncreate function st_npoints(geom geometry) returns integer external name geom.""NPoints"";"	"geom"	1	1	false	false	false	2000
7538	"st_nrings"	"create function st_nrings(geom geometry) returns integer external name geom.""NRings"";"	"geom"	1	1	false	false	false	2000
7542	"st_numinteriorrings"	"--is meaningfull for polygon and multipolygon\ncreate function st_numinteriorrings(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7546	"st_xmax"	"--CREATE FUNCTION ST_Summary(geom Geometry) RETURNS string EXTERNAL NAME\ncreate function st_xmax(geom geometry) returns double external name geom.""XMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7550	"st_xmax"	"create function st_xmax(box mbr) returns double external name geom.""XMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7554	"st_xmin"	"create function st_xmin(geom geometry) returns double external name geom.""XMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7558	"st_xmin"	"create function st_xmin(box mbr) returns double external name geom.""XMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7562	"st_ymax"	"create function st_ymax(geom geometry) returns double external name geom.""YMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7566	"st_ymax"	"create function st_ymax(box mbr) returns double external name geom.""YMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7570	"st_ymin"	"create function st_ymin(geom geometry) returns double external name geom.""YMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7574	"st_ymin"	"create function st_ymin(box mbr) returns double external name geom.""YMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7578	"st_force2d"	"--GEOS creates only 2D Envelope\n--CREATE FUNCTION ST_ZMax(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMaxFromWKB"";\n--CREATE FUNCTION ST_ZMax(box mbr) RETURNS double EXTERNAL NAME geom.""ZMaxFromMBR"";\n--CREATE FUNCTION ST_ZMin(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMinFromWKB"";\n--CREATE FUNCTION ST_ZMin(box mbr) RETURNS double EXTERNAL NAME geom.""ZMinFromMBR"";\n--CREATE FUNCTION ST_Zmflag(geom Geometry) RETURNS smallint EXTERNAL NAME --0=2d, 1=3dm, 2=3dz, 4=4d\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Editors ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AddPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Affine RETURNS EXTERNAL NAME\ncreate function st_force2d(geom geometry) returns geometry external name geom.""Force2D"";"	"geom"	1	1	false	false	false	2000
7582	"st_force3d"	"create function st_force3d(geom geometry) returns geometry external name geom.""Force3D"";"	"geom"	1	1	false	false	false	2000
7586	"st_segmentize"	"--CREATE FUNCTION ST_Force3DZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force3DM RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force4D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceCollection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceRHR RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineMerge RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionExtract RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionHomogenize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Multi RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemovePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Reverse RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Rotate RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateX RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateY RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Scale RETURNS EXTERNAL NAME\ncreate function st_segmentize(geom geometry, sz double) returns geometry external name geom.""Segmentize"";"	"geom"	1	1	false	false	false	2000
7591	"getproj4"	"--CREATE FUNCTION ST_SetPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SnapToGrid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Snap RETURNS EXTERNAL NAME\ncreate function getproj4(srid_in integer) returns string \nbegin\n\treturn select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	"user"	2	1	false	false	false	2000
7595	"internaltransform"	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.""Transform"";"	"geom"	1	1	false	false	false	2000
7603	"st_transform"	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n\tdeclare srid_src integer;\n\tdeclare proj4_src string;\n\tdeclare proj4_dest string;\n\n\tselect st_srid(geom) into srid_src;\n\tselect getproj4(srid_src) into proj4_src;\n\tselect getproj4(srid) into proj4_dest;\n\n\tif proj4_src is null then\n\t\treturn select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n\telse\n\t\tif proj4_dest is null then\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n\t\telse\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n\t\tend if;\t\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
7608	"st_translate"	"--Translate moves all points of a geometry dx, dy, dz\ncreate function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7614	"st_translate"	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7621	"st_asewkt"	"--CREATE FUNCTION ST_TransScale RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Outputs ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AsEWKB RETURNS EXTERNAL NAME\ncreate function st_asewkt(geom geometry) returns string external name geom.""AsEWKT"";"	"geom"	1	1	false	false	false	2000
7625	"st_covers"	"--CREATE FUNCTION ST_AsGeoJSON RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsGML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsHEXEWKB RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsKML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsSVG RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsX3D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_GeoHash RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsLatLonText RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------------ Operators --------------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n---------------- Spatial Relationships and Measurements -----------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_3DClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DIntersects RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DMaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DShortestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Area(geog Geography, use_spheroid boolean) RETURNS flt EXTERNAL NAME geom.""Area"";\n--CREATE FUNCTION ST_Azimuth RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ContainsProperly RETURNS EXTERNAL NAME\ncreate function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.""Covers"";"	"geom"	1	1	false	false	false	2000
7630	"st_coveredby"	"--CREATE FUNCTION ST_Covers(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Covers"";\ncreate function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.""CoveredBy"";"	"geom"	1	1	false	false	false	2000
7635	"st_dwithin"	"--CREATE FUNCTION ST_CoveredBy(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""CoveredBy"";\n--CREATE FUNCTION ST_LineCrossingDirection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry) RETURNS double EXTERNAL NAME geom.""Distance""\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Distance""\ncreate function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.""DWithin"";"	"geom"	1	1	false	false	false	2000
7641	"st_length2d"	"--CREATE FUNCTION ST_HausdorffDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Sphere RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_DFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_HasArc RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersects(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Intersects"";\n--CREATE FUNCTION ST_Length(geog Geography, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Length"";\ncreate function st_length2d(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7645	"st_collect"	"--CREATE FUNCTION ST_3DLength RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length2D_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLength_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OrderingEquals RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter2D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DPerimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Project RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry, boundary_node_rule integer) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_RelateMatch RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ShortestLine RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------- Geometry Processing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, circle_quarters_num integer) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, buffer_style_parameters string) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geog Geography, radius double) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_BuildArea RETURNS EXTERNAL NAME\n--collect is the same to union. POstGIS just has a more efficient implementation for it compared to union\ncreate function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7650	"st_collect"	"create aggregate st_collect(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7654	"st_delaunaytriangles"	"--CREATE FUNCTION ST_ConcaveHull RETURNS EXTERNAL NAME\ncreate function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.""DelaunayTriangles"";"	"geom"	1	1	false	false	false	2000
7660	"st_dump"	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.""Dump"";"	"geom"	1	5	false	false	false	2000
7665	"st_dumppoints"	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.""DumpPoints"";"	"geom"	1	5	false	false	false	2000
7672	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7669
7677	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7669
7682	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7669
7687	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7669
7692	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7669
7697	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	7669
7701	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	7669
7705	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7669
7709	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7669
7713	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7669
7717	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7669
7721	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7669
7725	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7669
7729	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	7669
7733	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	7669
7737	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	7669
7741	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7669
7745	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7669
7749	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7669
7753	"output"	"-- The remainder awaits the implementation \n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	7669
7757	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7669
7761	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7669
7765	"filter"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7669
7770	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
7775	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
7778	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7782	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7786	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
7791	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7794	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7797	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7800	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7836	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7839	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7843	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (""schema"" string, ""table"" string, ""column"" string, ""type"" string, ""mode"" string, location string, ""count"" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7887	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7889	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int'\t then return 4 * i;\n\twhen nme = 'bigint'\t then return 8 * i;\n\twhen nme = 'hugeint'\t then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7895	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7901	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7906	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\t\n\t\tor nme = 'bigint'\t\n\t\tor nme = 'hugeint'\t\n\t\tor nme = 'decimal'\t\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7911	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count""\tbigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7958	"analyze"	"create procedure analyze()\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7960	"analyze"	"create procedure analyze(tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7963	"analyze"	"create procedure analyze(sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7967	"analyze"	"create procedure analyze(sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7972	"analyze"	"-- control the sample size\ncreate procedure analyze(""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7975	"analyze"	"create procedure analyze(tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7979	"analyze"	"create procedure analyze(sch string, tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7984	"analyze"	"create procedure analyze(sch string, tbl string, col string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7990	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7994	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7999	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8004	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8009	"fuse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8015	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	8013
8020	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	8013
8025	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	8013
8029	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	8013
8033	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	8013
8038	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	8013
8042	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	8013
8046	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	8013
8050	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	8013
8053	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	8013
8123	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8128	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8134	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8139	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8145	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8150	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8156	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8161	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8167	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8173	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8179	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8185	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8191	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8196	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 8 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
7094	7099	0	"spatial_ref_sys_srid_pkey"
8063	8064	0	"files_pkey_file_id"
8074	8077	0	"sq_pkey_sn_file_id"
8076	8077	1	"sq_fkey_file_id"
8093	8096	0	"rg_pkey_id_file_id"
8095	8096	1	"rg_fkey_file_id"
8105	8108	0	"pg_pkey_id_file_id"
8107	8108	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 8 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
7093	7099	0	"spatial_ref_sys_srid_pkey"	-1	-1
8062	8064	0	"files_pkey_file_id"	-1	-1
8073	8077	0	"sq_pkey_sn_file_id"	-1	-1
8075	8077	2	"sq_fkey_file_id"	8062	514
8092	8096	0	"rg_pkey_id_file_id"	-1	-1
8094	8096	2	"rg_fkey_file_id"	8062	514
8104	8108	0	"pg_pkey_id_file_id"	-1	-1
8106	8108	2	"pg_fkey_file_id"	8062	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 22 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
7094	"srid"	0
7093	"srid"	0
8063	"file_id"	0
8062	"file_id"	0
8074	"sn"	0
8074	"file_id"	1
8076	"file_id"	0
8073	"sn"	0
8073	"file_id"	1
8075	"file_id"	0
8093	"id"	0
8093	"file_id"	1
8095	"file_id"	0
8092	"id"	0
8092	"file_id"	1
8094	"file_id"	0
8105	"id"	0
8105	"file_id"	1
8107	"file_id"	0
8104	"id"	0
8104	"file_id"	1
8106	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
6155	1	1	0	0
6165	1	1	0	0
6191	1	1	0	0
6194	1	1	0	0
6198	1	1	0	0
8203	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
7669	"json"	3	3	true
8013	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1771 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
59
60
61
62
63
64
65
66
67
68
69
73
74
75
76
79
80
81
103
104
105
106
107
108
109
110
111
112
113
114
115
116
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
58
70
71
72
77
78
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
117
118
119
120
121
122
123
6176
6179
6185
6205
6210
6215
6219
6223
6227
6231
6234
6238
6242
6246
6250
6254
6258
6262
6266
6270
6274
6278
6282
6286
6290
6297
6303
6308
6313
6319
6323
6327
6331
6336
6340
6344
6348
6352
6356
6361
6366
6371
6376
6386
6436
6438
6440
6443
6445
6475
6479
6482
6486
6490
6494
6498
6502
6506
6511
6516
6521
6526
6531
6536
6541
6546
6551
6556
6561
6566
6571
6576
6581
6586
6591
6595
6611
6614
6618
6621
6625
6628
6635
6640
6646
6652
6657
6662
6666
6670
6674
6678
6681
6691
6699
6713
6717
6737
6740
6743
6746
6749
6752
6755
6759
6763
6767
6771
6775
6779
6783
6787
6791
6795
6799
6803
6807
6811
6815
6819
6823
6827
6831
6835
6839
6843
6847
6851
6855
6859
6863
6867
6871
6875
6879
6883
6887
6891
6895
6899
6903
6907
6911
6915
6919
6923
6927
6931
6935
6939
6943
6947
6951
6955
6959
6964
6969
6974
6979
6984
6989
6994
6999
7004
7009
7014
7019
7024
7029
7034
7039
7044
7049
7053
7057
7061
7065
7069
7074
7079
7083
7087
7111
7115
7120
7125
7130
7135
7139
7143
7147
7151
7155
7159
7163
7168
7172
7176
7180
7184
7189
7194
7199
7204
7209
7214
7219
7224
7230
7235
7240
7245
7250
7254
7259
7264
7268
7272
7276
7280
7284
7288
7292
7296
7300
7304
7309
7313
7317
7321
7325
7329
7333
7338
7342
7346
7351
7355
7360
7365
7370
7375
7380
7385
7390
7395
7400
7405
7410
7415
7419
7423
7427
7431
7435
7439
7443
7447
7451
7456
7461
7467
7474
7480
7484
7489
7497
7504
7508
7513
7518
7522
7526
7530
7534
7538
7542
7546
7550
7554
7558
7562
7566
7570
7574
7578
7582
7586
7591
7595
7603
7608
7614
7621
7625
7630
7635
7641
7645
7650
7654
7660
7665
7672
7677
7682
7687
7692
7697
7701
7705
7709
7713
7717
7721
7725
7729
7733
7737
7741
7745
7749
7753
7757
7761
7765
7770
7775
7778
7782
7786
7791
7794
7797
7800
7836
7839
7843
7887
7889
7895
7901
7906
7911
7958
7960
7963
7967
7972
7975
7979
7984
7990
7994
7999
8004
8009
8015
8020
8025
8029
8033
8038
8042
8046
8050
8053
8123
8128
8134
8139
8145
8150
8156
8161
8167
8173
8179
8185
8191
8196
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 37 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"hge"	"hugeint"	128	1	2	7	0
14	"bte"	"decimal"	2	1	10	10	0
15	"sht"	"decimal"	4	1	10	10	0
16	"int"	"decimal"	9	1	10	10	0
17	"lng"	"decimal"	18	1	10	10	0
18	"hge"	"decimal"	39	1	10	10	0
19	"flt"	"real"	24	2	2	11	0
20	"dbl"	"double"	53	2	2	11	0
21	"int"	"month_interval"	32	0	2	8	0
22	"lng"	"sec_interval"	19	1	10	9	0
23	"daytime"	"time"	7	0	0	12	0
24	"daytime"	"timetz"	7	1	0	12	0
25	"date"	"date"	0	0	0	13	0
26	"timestamp"	"timestamp"	7	0	0	14	0
27	"timestamp"	"timestamptz"	7	1	0	14	0
28	"sqlblob"	"blob"	0	0	0	5	0
29	"wkb"	"geometry"	0	0	0	15	0
30	"wkba"	"geometrya"	0	0	0	16	0
31	"mbr"	"mbr"	0	0	0	16	0
6232	"url"	"url"	0	0	0	16	2000
6317	"inet"	"inet"	0	0	0	16	2000
7109	"mbr"	"mbr"	0	0	0	16	2000
7670	"json"	"json"	0	0	0	16	2000
7773	"uuid"	"uuid"	0	0	0	16	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

