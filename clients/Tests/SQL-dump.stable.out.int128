stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_jsonstore.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:01:36 >  
# 15:01:36 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-13451" "--port=34237"
# 15:01:36 >  

SCHEMA  json
SCHEMA  tmp
SCHEMA         tmp
SCHEMA         json
SYSTEM SCHEMA  sys
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.cluster1
SYSTEM FUNCTION  sys.cluster2
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"readonly"      BOOLEAN
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"sql"         BOOLEAN,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"schema" CHARACTER LARGE OBJECT,
	"table"  CHARACTER LARGE OBJECT,
	"column" CHARACTER LARGE OBJECT,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.space, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys.storage as select * from sys.storage();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;
-- A summary of the table storage requirement is is available as a table view.
-- The auxillary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxillary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure analyze()
external name sql.analyze;
create procedure analyze(tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string)
external name sql.analyze;
-- control the sample size
create procedure analyze("sample" bigint)
external name sql.analyze;
create procedure analyze(tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string, "sample" bigint)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- Clustering a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Clustering of tables may improve IO performance
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure cluster1(sys string, tab string)
	external name sql.cluster1;
create procedure cluster2(sys string, tab string)
	external name sql.cluster2;
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra.ilikesubselect;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function length(g geometry) returns float external name geom."Length";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create filter function "like"(val string, pat string, esc string) external name algebra.likesubselect;
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";

-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- (co) Arjen de Rijke
-- Functions supporting jsonstore

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int,			-- percentage time waiting for IO to finish 
	space bigint		-- total storage size of intermediates created (in MB)
)
external name sql.querylog_calls;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys.storage()
returns table ("schema" string, "table" string, "column" string, "type" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, imprints bigint, sorted boolean)
external name sql.storage;
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.storage() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;

-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		"user" int, 		-- user identifier
		ticks bigint, 		-- time in microseconds
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		rbytes bigint,		-- amount of bytes touched
		wbytes bigint,		-- amount of bytes written
		type string,		-- return types
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- The contents of this file are subject to the MonetDB Public License
-- Version 1.1 (the "License"); you may not use this file except in
-- compliance with the License. You may obtain a copy of the License at
-- http://www.monetdb.org/Legal/MonetDBLicense
--
-- Software distributed under the License is distributed on an "AS IS"
-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
-- License for the specific language governing rights and limitations
-- under the License.
--
-- The Original Code is the MonetDB Database System.
--
-- The Initial Developer of the Original Code is CWI.
-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
-- Copyright August 2008-2014 MonetDB B.V.
-- All Rights Reserved.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 286 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"sql"	"boolean"	1	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"readonly"	"boolean"	1	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"readonly"	"boolean"	1	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5637	"id"	"int"	32	0	5636	NULL	true	0	NULL
5638	"name"	"varchar"	1024	0	5636	NULL	true	1	NULL
5639	"schema_id"	"int"	32	0	5636	NULL	true	2	NULL
5640	"query"	"varchar"	2048	0	5636	NULL	true	3	NULL
5641	"type"	"smallint"	16	0	5636	NULL	true	4	NULL
5642	"system"	"boolean"	1	0	5636	NULL	true	5	NULL
5643	"commit_action"	"smallint"	16	0	5636	NULL	true	6	NULL
5644	"readonly"	"boolean"	1	0	5636	NULL	true	7	NULL
5645	"temporary"	"smallint"	16	0	5636	NULL	true	8	NULL
5647	"id"	"int"	32	0	5646	NULL	true	0	NULL
5648	"name"	"varchar"	1024	0	5646	NULL	true	1	NULL
5649	"type"	"varchar"	1024	0	5646	NULL	true	2	NULL
5650	"type_digits"	"int"	32	0	5646	NULL	true	3	NULL
5651	"type_scale"	"int"	32	0	5646	NULL	true	4	NULL
5652	"table_id"	"int"	32	0	5646	NULL	true	5	NULL
5653	"default"	"varchar"	2048	0	5646	NULL	true	6	NULL
5654	"null"	"boolean"	1	0	5646	NULL	true	7	NULL
5655	"number"	"int"	32	0	5646	NULL	true	8	NULL
5656	"storage"	"varchar"	2048	0	5646	NULL	true	9	NULL
5663	"name"	"varchar"	1024	0	5662	NULL	true	0	NULL
5664	"fullname"	"varchar"	2048	0	5662	NULL	true	1	NULL
5665	"default_schema"	"int"	9	0	5662	NULL	true	2	NULL
5669	"name"	"varchar"	1024	0	5668	NULL	true	0	NULL
5670	"fullname"	"varchar"	2024	0	5668	NULL	true	1	NULL
5671	"default_schema"	"int"	9	0	5668	NULL	true	2	NULL
5673	"login_id"	"int"	32	0	5672	NULL	true	0	NULL
5674	"role_id"	"int"	32	0	5672	NULL	true	1	NULL
5676	"id"	"int"	32	0	5675	NULL	true	0	NULL
5677	"name"	"varchar"	1024	0	5675	NULL	true	1	NULL
5678	"grantor"	"int"	32	0	5675	NULL	true	2	NULL
5680	"obj_id"	"int"	32	0	5679	NULL	true	0	NULL
5681	"auth_id"	"int"	32	0	5679	NULL	true	1	NULL
5682	"privileges"	"int"	32	0	5679	NULL	true	2	NULL
5683	"grantor"	"int"	32	0	5679	NULL	true	3	NULL
5684	"grantable"	"int"	32	0	5679	NULL	true	4	NULL
5845	"id"	"oid"	63	0	5852	NULL	true	0	NULL
5846	"owner"	"clob"	0	0	5852	NULL	true	1	NULL
5847	"defined"	"timestamp"	7	0	5852	NULL	true	2	NULL
5848	"query"	"clob"	0	0	5852	NULL	true	3	NULL
5849	"pipe"	"clob"	0	0	5852	NULL	true	4	NULL
5850	"mal"	"int"	32	0	5852	NULL	true	5	NULL
5851	"optimize"	"bigint"	64	0	5852	NULL	true	6	NULL
5854	"id"	"oid"	63	0	5864	NULL	true	0	NULL
5855	"start"	"timestamp"	7	0	5864	NULL	true	1	NULL
5856	"stop"	"timestamp"	7	0	5864	NULL	true	2	NULL
5857	"arguments"	"clob"	0	0	5864	NULL	true	3	NULL
5858	"tuples"	"wrd"	64	0	5864	NULL	true	4	NULL
5859	"run"	"bigint"	64	0	5864	NULL	true	5	NULL
5860	"ship"	"bigint"	64	0	5864	NULL	true	6	NULL
5861	"cpu"	"int"	32	0	5864	NULL	true	7	NULL
5862	"io"	"int"	32	0	5864	NULL	true	8	NULL
5863	"space"	"bigint"	64	0	5864	NULL	true	9	NULL
5866	"id"	"oid"	63	0	5882	NULL	true	0	NULL
5867	"owner"	"clob"	0	0	5882	NULL	true	1	NULL
5868	"defined"	"timestamp"	7	0	5882	NULL	true	2	NULL
5869	"query"	"clob"	0	0	5882	NULL	true	3	NULL
5870	"pipe"	"clob"	0	0	5882	NULL	true	4	NULL
5871	"mal"	"int"	32	0	5882	NULL	true	5	NULL
5872	"optimize"	"bigint"	64	0	5882	NULL	true	6	NULL
5873	"start"	"timestamp"	7	0	5882	NULL	true	7	NULL
5874	"stop"	"timestamp"	7	0	5882	NULL	true	8	NULL
5875	"arguments"	"clob"	0	0	5882	NULL	true	9	NULL
5876	"tuples"	"wrd"	64	0	5882	NULL	true	10	NULL
5877	"run"	"bigint"	64	0	5882	NULL	true	11	NULL
5878	"ship"	"bigint"	64	0	5882	NULL	true	12	NULL
5879	"cpu"	"int"	32	0	5882	NULL	true	13	NULL
5880	"space"	"bigint"	64	0	5882	NULL	true	14	NULL
5881	"io"	"int"	32	0	5882	NULL	true	15	NULL
5907	"event"	"int"	32	0	5919	NULL	true	0	NULL
5908	"clk"	"varchar"	20	0	5919	NULL	true	1	NULL
5909	"pc"	"varchar"	50	0	5919	NULL	true	2	NULL
5910	"thread"	"int"	32	0	5919	NULL	true	3	NULL
5911	"user"	"int"	32	0	5919	NULL	true	4	NULL
5912	"ticks"	"bigint"	64	0	5919	NULL	true	5	NULL
5913	"reads"	"bigint"	64	0	5919	NULL	true	6	NULL
5914	"writes"	"bigint"	64	0	5919	NULL	true	7	NULL
5915	"rbytes"	"bigint"	64	0	5919	NULL	true	8	NULL
5916	"wbytes"	"bigint"	64	0	5919	NULL	true	9	NULL
5917	"type"	"clob"	0	0	5919	NULL	true	10	NULL
5918	"stmt"	"clob"	0	0	5919	NULL	true	11	NULL
6038	"user"	"clob"	0	0	6044	NULL	true	0	NULL
6039	"login"	"timestamp"	7	0	6044	NULL	true	1	NULL
6040	"sessiontimeout"	"bigint"	64	0	6044	NULL	true	2	NULL
6041	"lastcommand"	"timestamp"	7	0	6044	NULL	true	3	NULL
6042	"querytimeout"	"bigint"	64	0	6044	NULL	true	4	NULL
6043	"active"	"boolean"	1	0	6044	NULL	true	5	NULL
6121	"name"	"clob"	0	0	6124	NULL	true	0	NULL
6122	"def"	"clob"	0	0	6124	NULL	true	1	NULL
6123	"status"	"clob"	0	0	6124	NULL	true	2	NULL
6130	"name"	"clob"	0	0	6132	NULL	true	0	NULL
6131	"value"	"clob"	0	0	6132	NULL	true	1	NULL
6162	"qtag"	"bigint"	64	0	6170	NULL	true	0	NULL
6163	"user"	"clob"	0	0	6170	NULL	true	1	NULL
6164	"started"	"timestamp"	7	0	6170	NULL	true	2	NULL
6165	"estimate"	"timestamp"	7	0	6170	NULL	true	3	NULL
6166	"progress"	"int"	32	0	6170	NULL	true	4	NULL
6167	"status"	"clob"	0	0	6170	NULL	true	5	NULL
6168	"tag"	"oid"	63	0	6170	NULL	true	6	NULL
6169	"query"	"clob"	0	0	6170	NULL	true	7	NULL
6844	"schema"	"clob"	0	0	6856	NULL	true	0	NULL
6845	"table"	"clob"	0	0	6856	NULL	true	1	NULL
6846	"column"	"clob"	0	0	6856	NULL	true	2	NULL
6847	"type"	"clob"	0	0	6856	NULL	true	3	NULL
6848	"location"	"clob"	0	0	6856	NULL	true	4	NULL
6849	"count"	"bigint"	64	0	6856	NULL	true	5	NULL
6850	"typewidth"	"int"	32	0	6856	NULL	true	6	NULL
6851	"columnsize"	"bigint"	64	0	6856	NULL	true	7	NULL
6852	"heapsize"	"bigint"	64	0	6856	NULL	true	8	NULL
6853	"hashes"	"bigint"	64	0	6856	NULL	true	9	NULL
6854	"imprints"	"bigint"	64	0	6856	NULL	true	10	NULL
6855	"sorted"	"boolean"	1	0	6856	NULL	true	11	NULL
6858	"schema"	"clob"	0	0	6868	NULL	true	0	NULL
6859	"table"	"clob"	0	0	6868	NULL	true	1	NULL
6860	"column"	"clob"	0	0	6868	NULL	true	2	NULL
6861	"type"	"clob"	0	0	6868	NULL	true	3	NULL
6862	"typewidth"	"int"	32	0	6868	NULL	true	4	NULL
6863	"count"	"bigint"	64	0	6868	NULL	true	5	NULL
6864	"distinct"	"bigint"	64	0	6868	NULL	true	6	NULL
6865	"atomwidth"	"int"	32	0	6868	NULL	true	7	NULL
6866	"reference"	"boolean"	1	0	6868	NULL	true	8	NULL
6867	"sorted"	"boolean"	1	0	6868	NULL	true	9	NULL
6906	"schema"	"clob"	0	0	6916	NULL	true	0	NULL
6907	"table"	"clob"	0	0	6916	NULL	true	1	NULL
6908	"column"	"clob"	0	0	6916	NULL	true	2	NULL
6909	"type"	"clob"	0	0	6916	NULL	true	3	NULL
6910	"count"	"bigint"	64	0	6916	NULL	true	4	NULL
6911	"columnsize"	"bigint"	64	0	6916	NULL	true	5	NULL
6912	"heapsize"	"bigint"	64	0	6916	NULL	true	6	NULL
6913	"hashes"	"bigint"	64	0	6916	NULL	true	7	NULL
6914	"imprints"	"bigint"	64	0	6916	NULL	true	8	NULL
6915	"sorted"	"boolean"	1	0	6916	NULL	true	9	NULL
6918	"schema"	"clob"	0	0	6926	NULL	true	0	NULL
6919	"table"	"clob"	0	0	6926	NULL	true	1	NULL
6920	"count"	"bigint"	64	0	6926	NULL	true	2	NULL
6921	"columnsize"	"hugeint"	64	0	6926	NULL	true	3	NULL
6922	"heapsize"	"hugeint"	64	0	6926	NULL	true	4	NULL
6923	"hashes"	"hugeint"	64	0	6926	NULL	true	5	NULL
6924	"imprints"	"hugeint"	64	0	6926	NULL	true	6	NULL
6925	"auxillary"	"hugeint"	128	0	6926	NULL	true	7	NULL
6928	"schema"	"clob"	0	0	6941	NULL	true	0	NULL
6929	"table"	"clob"	0	0	6941	NULL	true	1	NULL
6930	"column"	"clob"	0	0	6941	NULL	true	2	NULL
6931	"type"	"clob"	0	0	6941	NULL	true	3	NULL
6932	"width"	"int"	32	0	6941	NULL	true	4	NULL
6933	"stamp"	"timestamp"	7	0	6941	NULL	true	5	NULL
6934	"sample"	"bigint"	64	0	6941	NULL	true	6	NULL
6935	"count"	"bigint"	64	0	6941	NULL	true	7	NULL
6936	"unique"	"bigint"	64	0	6941	NULL	true	8	NULL
6937	"nils"	"bigint"	64	0	6941	NULL	true	9	NULL
6938	"minval"	"clob"	0	0	6941	NULL	true	10	NULL
6939	"maxval"	"clob"	0	0	6941	NULL	true	11	NULL
6940	"sorted"	"boolean"	1	0	6941	NULL	true	12	NULL
6999	"function_id"	"int"	32	0	7000	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"readonly"      BOOLEAN
);
COPY 40 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	false
2007	"types"	2000	NULL	0	true	0	false
2016	"functions"	2000	NULL	0	true	0	false
2027	"args"	2000	NULL	0	true	0	false
2036	"sequences"	2000	NULL	0	true	0	false
2046	"dependencies"	2000	NULL	0	true	0	false
2050	"connections"	2000	NULL	0	true	0	false
2059	"_tables"	2000	NULL	0	true	0	false
2068	"_columns"	2000	NULL	0	true	0	false
2079	"keys"	2000	NULL	0	true	0	false
2086	"idxs"	2000	NULL	0	true	0	false
2091	"triggers"	2000	NULL	0	true	0	false
2102	"objects"	2000	NULL	0	true	0	false
2107	"_tables"	2106	NULL	0	true	2	false
2116	"_columns"	2106	NULL	0	true	2	false
2127	"keys"	2106	NULL	0	true	2	false
2134	"idxs"	2106	NULL	0	true	2	false
2139	"triggers"	2106	NULL	0	true	2	false
2150	"objects"	2106	NULL	0	true	2	false
5636	"tables"	2000	"SELECT * FROM (SELECT p.*, 0 AS ""temporary"" FROM ""sys"".""_tables"" AS p UNION ALL SELECT t.*, 1 AS ""temporary"" FROM ""tmp"".""_tables"" AS t) AS tables where tables.type <> 2;"	1	true	0	false
5646	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	false
5662	"db_user_info"	2000	NULL	0	true	0	false
5668	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	false
5672	"user_role"	2000	NULL	0	true	0	false
5675	"auths"	2000	NULL	0	true	0	false
5679	"privileges"	2000	NULL	0	true	0	false
5852	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	false
5864	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	false
5882	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.space, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	false
5919	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	false
6044	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	false
6124	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	false
6132	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	false
6170	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	false
6856	"storage"	2000	"create view sys.storage as select * from sys.storage();"	1	true	0	false
6868	"storagemodelinput"	2000	NULL	0	true	0	false
6916	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	false
6926	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxillary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxillary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	false
6941	"statistics"	2000	NULL	0	true	0	false
7000	"systemfunctions"	2000	NULL	0	true	0	false
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4131 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"oid"	63	0	0	0
2156	30	"arg_1"	"wrd"	64	0	1	1
2157	31	"res_0"	"oid"	63	0	0	0
2158	31	"arg_1"	"oid"	63	0	1	1
2159	32	"res_0"	"wrd"	64	0	0	0
2160	32	"arg_1"	"any"	0	0	1	1
2161	33	"res_0"	"wrd"	64	0	0	0
2162	33	"arg_1"	"wrd"	64	0	1	1
2163	33	"arg_2"	"int"	32	0	1	2
2164	33	"arg_3"	"any"	0	0	1	3
2165	34	"res_0"	"boolean"	1	0	0	0
2166	34	"arg_1"	"any"	0	0	1	1
2167	34	"arg_2"	"any"	0	0	1	2
2168	35	"res_0"	"boolean"	1	0	0	0
2169	35	"arg_1"	"any"	0	0	1	1
2170	35	"arg_2"	"any"	0	0	1	2
2171	36	"res_0"	"boolean"	1	0	0	0
2172	36	"arg_1"	"any"	0	0	1	1
2173	37	"res_0"	"boolean"	1	0	0	0
2174	37	"arg_1"	"any"	0	0	1	1
2175	37	"arg_2"	"any"	0	0	1	2
2176	38	"res_0"	"boolean"	1	0	0	0
2177	38	"arg_1"	"any"	0	0	1	1
2178	38	"arg_2"	"any"	0	0	1	2
2179	39	"res_0"	"boolean"	1	0	0	0
2180	39	"arg_1"	"any"	0	0	1	1
2181	39	"arg_2"	"any"	0	0	1	2
2182	40	"res_0"	"boolean"	1	0	0	0
2183	40	"arg_1"	"any"	0	0	1	1
2184	40	"arg_2"	"any"	0	0	1	2
2185	44	"res_0"	"boolean"	1	0	0	0
2186	44	"arg_1"	"any"	0	0	1	1
2187	44	"arg_2"	"any"	0	0	1	2
2188	45	"res_0"	"oid"	63	0	0	0
2189	45	"arg_1"	"any"	0	0	1	1
2190	46	"res_0"	"int"	32	0	0	0
2191	46	"arg_1"	"any"	0	0	1	1
2192	47	"res_0"	"oid"	63	0	0	0
2193	47	"arg_1"	"any"	0	0	1	1
2194	47	"arg_2"	"varchar"	0	0	1	2
2195	47	"arg_3"	"varchar"	0	0	1	3
2196	50	"res_0"	"any"	0	0	0	0
2197	50	"arg_1"	"any"	0	0	1	1
2198	50	"arg_2"	"any"	0	0	1	2
2199	51	"res_0"	"any"	0	0	0	0
2200	51	"arg_1"	"any"	0	0	1	1
2201	51	"arg_2"	"any"	0	0	1	2
2202	52	"res_0"	"any"	0	0	0	0
2203	52	"arg_1"	"boolean"	1	0	1	1
2204	52	"arg_2"	"any"	0	0	1	2
2205	52	"arg_3"	"any"	0	0	1	3
2206	74	"res_0"	"tinyint"	8	0	0	0
2207	74	"arg_1"	"tinyint"	8	0	1	1
2208	74	"arg_2"	"tinyint"	8	0	1	2
2209	75	"res_0"	"smallint"	16	0	0	0
2210	75	"arg_1"	"smallint"	16	0	1	1
2211	75	"arg_2"	"smallint"	16	0	1	2
2212	76	"res_0"	"int"	32	0	0	0
2213	76	"arg_1"	"int"	32	0	1	1
2214	76	"arg_2"	"int"	32	0	1	2
2215	77	"res_0"	"bigint"	64	0	0	0
2216	77	"arg_1"	"bigint"	64	0	1	1
2217	77	"arg_2"	"bigint"	64	0	1	2
2218	78	"res_0"	"oid"	63	0	0	0
2219	78	"arg_1"	"oid"	63	0	1	1
2220	78	"arg_2"	"oid"	63	0	1	2
2221	79	"res_0"	"wrd"	64	0	0	0
2222	79	"arg_1"	"wrd"	64	0	1	1
2223	79	"arg_2"	"wrd"	64	0	1	2
2224	80	"res_0"	"hugeint"	128	0	0	0
2225	80	"arg_1"	"hugeint"	128	0	1	1
2226	80	"arg_2"	"hugeint"	128	0	1	2
2227	81	"res_0"	"decimal"	2	0	0	0
2228	81	"arg_1"	"decimal"	2	0	1	1
2229	81	"arg_2"	"decimal"	2	0	1	2
2230	82	"res_0"	"decimal"	4	0	0	0
2231	82	"arg_1"	"decimal"	4	0	1	1
2232	82	"arg_2"	"decimal"	4	0	1	2
2233	83	"res_0"	"decimal"	9	0	0	0
2234	83	"arg_1"	"decimal"	9	0	1	1
2235	83	"arg_2"	"decimal"	9	0	1	2
2236	84	"res_0"	"decimal"	18	0	0	0
2237	84	"arg_1"	"decimal"	18	0	1	1
2238	84	"arg_2"	"decimal"	18	0	1	2
2239	85	"res_0"	"decimal"	39	0	0	0
2240	85	"arg_1"	"decimal"	39	0	1	1
2241	85	"arg_2"	"decimal"	39	0	1	2
2242	86	"res_0"	"real"	24	0	0	0
2243	86	"arg_1"	"real"	24	0	1	1
2244	86	"arg_2"	"real"	24	0	1	2
2245	87	"res_0"	"double"	53	0	0	0
2246	87	"arg_1"	"double"	53	0	1	1
2247	87	"arg_2"	"double"	53	0	1	2
2248	95	"res_0"	"int"	32	0	0	0
2249	95	"arg_1"	"any"	0	0	1	1
2250	96	"res_0"	"int"	32	0	0	0
2251	96	"arg_1"	"any"	0	0	1	1
2252	97	"res_0"	"int"	32	0	0	0
2253	97	"arg_1"	"any"	0	0	1	1
2254	98	"res_0"	"any"	0	0	0	0
2255	98	"arg_1"	"any"	0	0	1	1
2256	99	"res_0"	"int"	32	0	0	0
2257	99	"arg_1"	"any"	0	0	1	1
2258	100	"res_0"	"int"	32	0	0	0
2259	100	"arg_1"	"any"	0	0	1	1
2260	100	"arg_2"	"oid"	63	0	1	2
2261	100	"arg_3"	"any"	0	0	1	3
2262	101	"res_0"	"int"	32	0	0	0
2263	101	"arg_1"	"any"	0	0	1	1
2264	101	"arg_2"	"oid"	63	0	1	2
2265	101	"arg_3"	"any"	0	0	1	3
2266	102	"res_0"	"int"	32	0	0	0
2267	102	"arg_1"	"any"	0	0	1	1
2268	102	"arg_2"	"oid"	63	0	1	2
2269	102	"arg_3"	"any"	0	0	1	3
2270	103	"res_0"	"any"	0	0	0	0
2271	103	"arg_1"	"any"	0	0	1	1
2272	103	"arg_2"	"oid"	63	0	1	2
2273	103	"arg_3"	"any"	0	0	1	3
2274	104	"res_0"	"int"	32	0	0	0
2275	104	"arg_1"	"any"	0	0	1	1
2276	104	"arg_2"	"oid"	63	0	1	2
2277	104	"arg_3"	"any"	0	0	1	3
2278	105	"res_0"	"int"	32	0	0	0
2279	105	"arg_1"	"any"	0	0	1	1
2280	105	"arg_2"	"oid"	63	0	1	2
2281	105	"arg_3"	"oid"	63	0	1	3
2282	105	"arg_4"	"oid"	63	0	1	4
2283	106	"res_0"	"int"	32	0	0	0
2284	106	"arg_1"	"any"	0	0	1	1
2285	106	"arg_2"	"oid"	63	0	1	2
2286	106	"arg_3"	"oid"	63	0	1	3
2287	106	"arg_4"	"oid"	63	0	1	4
2288	107	"res_0"	"int"	32	0	0	0
2289	107	"arg_1"	"any"	0	0	1	1
2290	107	"arg_2"	"oid"	63	0	1	2
2291	107	"arg_3"	"oid"	63	0	1	3
2292	107	"arg_4"	"oid"	63	0	1	4
2293	108	"res_0"	"any"	0	0	0	0
2294	108	"arg_1"	"any"	0	0	1	1
2295	108	"arg_2"	"oid"	63	0	1	2
2296	108	"arg_3"	"oid"	63	0	1	3
2297	108	"arg_4"	"oid"	63	0	1	4
2298	109	"res_0"	"int"	32	0	0	0
2299	109	"arg_1"	"any"	0	0	1	1
2300	109	"arg_2"	"oid"	63	0	1	2
2301	109	"arg_3"	"oid"	63	0	1	3
2302	109	"arg_4"	"oid"	63	0	1	4
2303	110	"res_0"	"any"	0	0	0	0
2304	110	"arg_1"	"any"	0	0	1	1
2305	111	"res_0"	"any"	0	0	0	0
2306	111	"arg_1"	"any"	0	0	1	1
2307	112	"res_0"	"any"	0	0	0	0
2308	112	"arg_1"	"any"	0	0	1	1
2309	112	"arg_2"	"int"	32	0	1	2
2310	113	"res_0"	"any"	0	0	0	0
2311	113	"arg_1"	"any"	0	0	1	1
2312	113	"arg_2"	"int"	32	0	1	2
2313	114	"res_0"	"any"	0	0	0	0
2314	114	"arg_1"	"any"	0	0	1	1
2315	114	"arg_2"	"oid"	63	0	1	2
2316	114	"arg_3"	"oid"	63	0	1	3
2317	115	"res_0"	"any"	0	0	0	0
2318	115	"arg_1"	"any"	0	0	1	1
2319	115	"arg_2"	"oid"	63	0	1	2
2320	115	"arg_3"	"oid"	63	0	1	3
2321	116	"res_0"	"any"	0	0	0	0
2322	116	"arg_1"	"any"	0	0	1	1
2323	116	"arg_2"	"int"	32	0	1	2
2324	116	"arg_3"	"oid"	63	0	1	3
2325	116	"arg_4"	"oid"	63	0	1	4
2326	117	"res_0"	"any"	0	0	0	0
2327	117	"arg_1"	"any"	0	0	1	1
2328	117	"arg_2"	"int"	32	0	1	2
2329	117	"arg_3"	"oid"	63	0	1	3
2330	117	"arg_4"	"oid"	63	0	1	4
2331	118	"res_0"	"boolean"	1	0	0	0
2332	118	"arg_1"	"boolean"	1	0	1	1
2333	118	"arg_2"	"boolean"	1	0	1	2
2334	119	"res_0"	"boolean"	1	0	0	0
2335	119	"arg_1"	"boolean"	1	0	1	1
2336	119	"arg_2"	"boolean"	1	0	1	2
2337	120	"res_0"	"boolean"	1	0	0	0
2338	120	"arg_1"	"boolean"	1	0	1	1
2339	120	"arg_2"	"boolean"	1	0	1	2
2340	121	"res_0"	"boolean"	1	0	0	0
2341	121	"arg_1"	"boolean"	1	0	1	1
2342	122	"res_0"	"tinyint"	8	0	0	0
2343	122	"arg_1"	"tinyint"	8	0	1	1
2344	122	"arg_2"	"tinyint"	8	0	1	2
2345	123	"res_0"	"tinyint"	8	0	0	0
2346	123	"arg_1"	"tinyint"	8	0	1	1
2347	123	"arg_2"	"tinyint"	8	0	1	2
2348	124	"res_0"	"tinyint"	8	0	0	0
2349	124	"arg_1"	"tinyint"	8	0	1	1
2350	124	"arg_2"	"tinyint"	8	0	1	2
2351	125	"res_0"	"tinyint"	8	0	0	0
2352	125	"arg_1"	"tinyint"	8	0	1	1
2353	125	"arg_2"	"tinyint"	8	0	1	2
2354	126	"res_0"	"tinyint"	8	0	0	0
2355	126	"arg_1"	"tinyint"	8	0	1	1
2356	126	"arg_2"	"tinyint"	8	0	1	2
2357	127	"res_0"	"tinyint"	8	0	0	0
2358	127	"arg_1"	"tinyint"	8	0	1	1
2359	127	"arg_2"	"tinyint"	8	0	1	2
2360	128	"res_0"	"tinyint"	8	0	0	0
2361	128	"arg_1"	"tinyint"	8	0	1	1
2362	128	"arg_2"	"tinyint"	8	0	1	2
2363	129	"res_0"	"tinyint"	8	0	0	0
2364	129	"arg_1"	"tinyint"	8	0	1	1
2365	130	"res_0"	"tinyint"	8	0	0	0
2366	130	"arg_1"	"tinyint"	8	0	1	1
2367	130	"arg_2"	"int"	32	0	1	2
2368	131	"res_0"	"tinyint"	8	0	0	0
2369	131	"arg_1"	"tinyint"	8	0	1	1
2370	131	"arg_2"	"int"	32	0	1	2
2371	132	"res_0"	"tinyint"	8	0	0	0
2372	132	"arg_1"	"tinyint"	8	0	1	1
2373	133	"res_0"	"tinyint"	8	0	0	0
2374	133	"arg_1"	"tinyint"	8	0	1	1
2375	134	"res_0"	"tinyint"	8	0	0	0
2376	134	"arg_1"	"tinyint"	8	0	1	1
2377	135	"res_0"	"tinyint"	8	0	0	0
2378	135	"arg_1"	"tinyint"	8	0	1	1
2379	135	"arg_2"	"tinyint"	8	0	1	2
2380	136	"res_0"	"tinyint"	8	0	0	0
2381	136	"arg_1"	"tinyint"	8	0	1	1
2382	136	"arg_2"	"tinyint"	8	0	1	2
2383	137	"res_0"	"month_interval"	32	0	0	0
2384	137	"arg_1"	"month_interval"	32	0	1	1
2385	137	"arg_2"	"tinyint"	8	0	1	2
2386	138	"res_0"	"month_interval"	32	0	0	0
2387	138	"arg_1"	"month_interval"	32	0	1	1
2388	138	"arg_2"	"tinyint"	8	0	1	2
2389	139	"res_0"	"month_interval"	32	0	0	0
2390	139	"arg_1"	"month_interval"	32	0	1	1
2391	139	"arg_2"	"tinyint"	8	0	1	2
2392	140	"res_0"	"month_interval"	32	0	0	0
2393	140	"arg_1"	"month_interval"	32	0	1	1
2394	140	"arg_2"	"tinyint"	8	0	1	2
2395	141	"res_0"	"sec_interval"	19	0	0	0
2396	141	"arg_1"	"sec_interval"	19	0	1	1
2397	141	"arg_2"	"tinyint"	8	0	1	2
2398	142	"res_0"	"sec_interval"	19	0	0	0
2399	142	"arg_1"	"sec_interval"	19	0	1	1
2400	142	"arg_2"	"tinyint"	8	0	1	2
2401	143	"res_0"	"sec_interval"	19	0	0	0
2402	143	"arg_1"	"sec_interval"	19	0	1	1
2403	143	"arg_2"	"tinyint"	8	0	1	2
2404	144	"res_0"	"sec_interval"	19	0	0	0
2405	144	"arg_1"	"sec_interval"	19	0	1	1
2406	144	"arg_2"	"tinyint"	8	0	1	2
2407	145	"res_0"	"smallint"	16	0	0	0
2408	145	"arg_1"	"smallint"	16	0	1	1
2409	145	"arg_2"	"smallint"	16	0	1	2
2410	146	"res_0"	"smallint"	16	0	0	0
2411	146	"arg_1"	"smallint"	16	0	1	1
2412	146	"arg_2"	"smallint"	16	0	1	2
2413	147	"res_0"	"smallint"	16	0	0	0
2414	147	"arg_1"	"smallint"	16	0	1	1
2415	147	"arg_2"	"smallint"	16	0	1	2
2416	148	"res_0"	"smallint"	16	0	0	0
2417	148	"arg_1"	"smallint"	16	0	1	1
2418	148	"arg_2"	"smallint"	16	0	1	2
2419	149	"res_0"	"smallint"	16	0	0	0
2420	149	"arg_1"	"smallint"	16	0	1	1
2421	149	"arg_2"	"smallint"	16	0	1	2
2422	150	"res_0"	"smallint"	16	0	0	0
2423	150	"arg_1"	"smallint"	16	0	1	1
2424	150	"arg_2"	"smallint"	16	0	1	2
2425	151	"res_0"	"smallint"	16	0	0	0
2426	151	"arg_1"	"smallint"	16	0	1	1
2427	151	"arg_2"	"smallint"	16	0	1	2
2428	152	"res_0"	"smallint"	16	0	0	0
2429	152	"arg_1"	"smallint"	16	0	1	1
2430	153	"res_0"	"smallint"	16	0	0	0
2431	153	"arg_1"	"smallint"	16	0	1	1
2432	153	"arg_2"	"int"	32	0	1	2
2433	154	"res_0"	"smallint"	16	0	0	0
2434	154	"arg_1"	"smallint"	16	0	1	1
2435	154	"arg_2"	"int"	32	0	1	2
2436	155	"res_0"	"smallint"	16	0	0	0
2437	155	"arg_1"	"smallint"	16	0	1	1
2438	156	"res_0"	"smallint"	16	0	0	0
2439	156	"arg_1"	"smallint"	16	0	1	1
2440	157	"res_0"	"tinyint"	8	0	0	0
2441	157	"arg_1"	"smallint"	16	0	1	1
2442	158	"res_0"	"smallint"	16	0	0	0
2443	158	"arg_1"	"smallint"	16	0	1	1
2444	158	"arg_2"	"smallint"	16	0	1	2
2445	159	"res_0"	"smallint"	16	0	0	0
2446	159	"arg_1"	"smallint"	16	0	1	1
2447	159	"arg_2"	"smallint"	16	0	1	2
2448	160	"res_0"	"month_interval"	32	0	0	0
2449	160	"arg_1"	"month_interval"	32	0	1	1
2450	160	"arg_2"	"smallint"	16	0	1	2
2451	161	"res_0"	"month_interval"	32	0	0	0
2452	161	"arg_1"	"month_interval"	32	0	1	1
2453	161	"arg_2"	"smallint"	16	0	1	2
2454	162	"res_0"	"month_interval"	32	0	0	0
2455	162	"arg_1"	"month_interval"	32	0	1	1
2456	162	"arg_2"	"smallint"	16	0	1	2
2457	163	"res_0"	"month_interval"	32	0	0	0
2458	163	"arg_1"	"month_interval"	32	0	1	1
2459	163	"arg_2"	"smallint"	16	0	1	2
2460	164	"res_0"	"sec_interval"	19	0	0	0
2461	164	"arg_1"	"sec_interval"	19	0	1	1
2462	164	"arg_2"	"smallint"	16	0	1	2
2463	165	"res_0"	"sec_interval"	19	0	0	0
2464	165	"arg_1"	"sec_interval"	19	0	1	1
2465	165	"arg_2"	"smallint"	16	0	1	2
2466	166	"res_0"	"sec_interval"	19	0	0	0
2467	166	"arg_1"	"sec_interval"	19	0	1	1
2468	166	"arg_2"	"smallint"	16	0	1	2
2469	167	"res_0"	"sec_interval"	19	0	0	0
2470	167	"arg_1"	"sec_interval"	19	0	1	1
2471	167	"arg_2"	"smallint"	16	0	1	2
2472	168	"res_0"	"int"	32	0	0	0
2473	168	"arg_1"	"int"	32	0	1	1
2474	168	"arg_2"	"int"	32	0	1	2
2475	169	"res_0"	"int"	32	0	0	0
2476	169	"arg_1"	"int"	32	0	1	1
2477	169	"arg_2"	"int"	32	0	1	2
2478	170	"res_0"	"int"	32	0	0	0
2479	170	"arg_1"	"int"	32	0	1	1
2480	170	"arg_2"	"int"	32	0	1	2
2481	171	"res_0"	"int"	32	0	0	0
2482	171	"arg_1"	"int"	32	0	1	1
2483	171	"arg_2"	"int"	32	0	1	2
2484	172	"res_0"	"int"	32	0	0	0
2485	172	"arg_1"	"int"	32	0	1	1
2486	172	"arg_2"	"int"	32	0	1	2
2487	173	"res_0"	"int"	32	0	0	0
2488	173	"arg_1"	"int"	32	0	1	1
2489	173	"arg_2"	"int"	32	0	1	2
2490	174	"res_0"	"int"	32	0	0	0
2491	174	"arg_1"	"int"	32	0	1	1
2492	174	"arg_2"	"int"	32	0	1	2
2493	175	"res_0"	"int"	32	0	0	0
2494	175	"arg_1"	"int"	32	0	1	1
2495	176	"res_0"	"int"	32	0	0	0
2496	176	"arg_1"	"int"	32	0	1	1
2497	176	"arg_2"	"int"	32	0	1	2
2498	177	"res_0"	"int"	32	0	0	0
2499	177	"arg_1"	"int"	32	0	1	1
2500	177	"arg_2"	"int"	32	0	1	2
2501	178	"res_0"	"int"	32	0	0	0
2502	178	"arg_1"	"int"	32	0	1	1
2503	179	"res_0"	"int"	32	0	0	0
2504	179	"arg_1"	"int"	32	0	1	1
2505	180	"res_0"	"tinyint"	8	0	0	0
2506	180	"arg_1"	"int"	32	0	1	1
2507	181	"res_0"	"int"	32	0	0	0
2508	181	"arg_1"	"int"	32	0	1	1
2509	181	"arg_2"	"int"	32	0	1	2
2510	182	"res_0"	"int"	32	0	0	0
2511	182	"arg_1"	"int"	32	0	1	1
2512	182	"arg_2"	"int"	32	0	1	2
2513	183	"res_0"	"month_interval"	32	0	0	0
2514	183	"arg_1"	"month_interval"	32	0	1	1
2515	183	"arg_2"	"int"	32	0	1	2
2516	184	"res_0"	"month_interval"	32	0	0	0
2517	184	"arg_1"	"month_interval"	32	0	1	1
2518	184	"arg_2"	"int"	32	0	1	2
2519	185	"res_0"	"month_interval"	32	0	0	0
2520	185	"arg_1"	"month_interval"	32	0	1	1
2521	185	"arg_2"	"int"	32	0	1	2
2522	186	"res_0"	"month_interval"	32	0	0	0
2523	186	"arg_1"	"month_interval"	32	0	1	1
2524	186	"arg_2"	"int"	32	0	1	2
2525	187	"res_0"	"sec_interval"	19	0	0	0
2526	187	"arg_1"	"sec_interval"	19	0	1	1
2527	187	"arg_2"	"int"	32	0	1	2
2528	188	"res_0"	"sec_interval"	19	0	0	0
2529	188	"arg_1"	"sec_interval"	19	0	1	1
2530	188	"arg_2"	"int"	32	0	1	2
2531	189	"res_0"	"sec_interval"	19	0	0	0
2532	189	"arg_1"	"sec_interval"	19	0	1	1
2533	189	"arg_2"	"int"	32	0	1	2
2534	190	"res_0"	"sec_interval"	19	0	0	0
2535	190	"arg_1"	"sec_interval"	19	0	1	1
2536	190	"arg_2"	"int"	32	0	1	2
2537	191	"res_0"	"bigint"	64	0	0	0
2538	191	"arg_1"	"bigint"	64	0	1	1
2539	191	"arg_2"	"bigint"	64	0	1	2
2540	192	"res_0"	"bigint"	64	0	0	0
2541	192	"arg_1"	"bigint"	64	0	1	1
2542	192	"arg_2"	"bigint"	64	0	1	2
2543	193	"res_0"	"bigint"	64	0	0	0
2544	193	"arg_1"	"bigint"	64	0	1	1
2545	193	"arg_2"	"bigint"	64	0	1	2
2546	194	"res_0"	"bigint"	64	0	0	0
2547	194	"arg_1"	"bigint"	64	0	1	1
2548	194	"arg_2"	"bigint"	64	0	1	2
2549	195	"res_0"	"bigint"	64	0	0	0
2550	195	"arg_1"	"bigint"	64	0	1	1
2551	195	"arg_2"	"bigint"	64	0	1	2
2552	196	"res_0"	"bigint"	64	0	0	0
2553	196	"arg_1"	"bigint"	64	0	1	1
2554	196	"arg_2"	"bigint"	64	0	1	2
2555	197	"res_0"	"bigint"	64	0	0	0
2556	197	"arg_1"	"bigint"	64	0	1	1
2557	197	"arg_2"	"bigint"	64	0	1	2
2558	198	"res_0"	"bigint"	64	0	0	0
2559	198	"arg_1"	"bigint"	64	0	1	1
2560	199	"res_0"	"bigint"	64	0	0	0
2561	199	"arg_1"	"bigint"	64	0	1	1
2562	199	"arg_2"	"int"	32	0	1	2
2563	200	"res_0"	"bigint"	64	0	0	0
2564	200	"arg_1"	"bigint"	64	0	1	1
2565	200	"arg_2"	"int"	32	0	1	2
2566	201	"res_0"	"bigint"	64	0	0	0
2567	201	"arg_1"	"bigint"	64	0	1	1
2568	202	"res_0"	"bigint"	64	0	0	0
2569	202	"arg_1"	"bigint"	64	0	1	1
2570	203	"res_0"	"tinyint"	8	0	0	0
2571	203	"arg_1"	"bigint"	64	0	1	1
2572	204	"res_0"	"bigint"	64	0	0	0
2573	204	"arg_1"	"bigint"	64	0	1	1
2574	204	"arg_2"	"bigint"	64	0	1	2
2575	205	"res_0"	"bigint"	64	0	0	0
2576	205	"arg_1"	"bigint"	64	0	1	1
2577	205	"arg_2"	"bigint"	64	0	1	2
2578	206	"res_0"	"month_interval"	32	0	0	0
2579	206	"arg_1"	"month_interval"	32	0	1	1
2580	206	"arg_2"	"bigint"	64	0	1	2
2581	207	"res_0"	"month_interval"	32	0	0	0
2582	207	"arg_1"	"month_interval"	32	0	1	1
2583	207	"arg_2"	"bigint"	64	0	1	2
2584	208	"res_0"	"month_interval"	32	0	0	0
2585	208	"arg_1"	"month_interval"	32	0	1	1
2586	208	"arg_2"	"bigint"	64	0	1	2
2587	209	"res_0"	"month_interval"	32	0	0	0
2588	209	"arg_1"	"month_interval"	32	0	1	1
2589	209	"arg_2"	"bigint"	64	0	1	2
2590	210	"res_0"	"sec_interval"	19	0	0	0
2591	210	"arg_1"	"sec_interval"	19	0	1	1
2592	210	"arg_2"	"bigint"	64	0	1	2
2593	211	"res_0"	"sec_interval"	19	0	0	0
2594	211	"arg_1"	"sec_interval"	19	0	1	1
2595	211	"arg_2"	"bigint"	64	0	1	2
2596	212	"res_0"	"sec_interval"	19	0	0	0
2597	212	"arg_1"	"sec_interval"	19	0	1	1
2598	212	"arg_2"	"bigint"	64	0	1	2
2599	213	"res_0"	"sec_interval"	19	0	0	0
2600	213	"arg_1"	"sec_interval"	19	0	1	1
2601	213	"arg_2"	"bigint"	64	0	1	2
2602	214	"res_0"	"oid"	63	0	0	0
2603	214	"arg_1"	"oid"	63	0	1	1
2604	214	"arg_2"	"oid"	63	0	1	2
2605	215	"res_0"	"oid"	63	0	0	0
2606	215	"arg_1"	"oid"	63	0	1	1
2607	215	"arg_2"	"oid"	63	0	1	2
2608	216	"res_0"	"oid"	63	0	0	0
2609	216	"arg_1"	"oid"	63	0	1	1
2610	216	"arg_2"	"oid"	63	0	1	2
2611	217	"res_0"	"oid"	63	0	0	0
2612	217	"arg_1"	"oid"	63	0	1	1
2613	217	"arg_2"	"oid"	63	0	1	2
2614	218	"res_0"	"oid"	63	0	0	0
2615	218	"arg_1"	"oid"	63	0	1	1
2616	218	"arg_2"	"oid"	63	0	1	2
2617	219	"res_0"	"oid"	63	0	0	0
2618	219	"arg_1"	"oid"	63	0	1	1
2619	219	"arg_2"	"oid"	63	0	1	2
2620	220	"res_0"	"oid"	63	0	0	0
2621	220	"arg_1"	"oid"	63	0	1	1
2622	220	"arg_2"	"oid"	63	0	1	2
2623	221	"res_0"	"oid"	63	0	0	0
2624	221	"arg_1"	"oid"	63	0	1	1
2625	222	"res_0"	"oid"	63	0	0	0
2626	222	"arg_1"	"oid"	63	0	1	1
2627	222	"arg_2"	"int"	32	0	1	2
2628	223	"res_0"	"oid"	63	0	0	0
2629	223	"arg_1"	"oid"	63	0	1	1
2630	223	"arg_2"	"int"	32	0	1	2
2631	224	"res_0"	"oid"	63	0	0	0
2632	224	"arg_1"	"oid"	63	0	1	1
2633	225	"res_0"	"oid"	63	0	0	0
2634	225	"arg_1"	"oid"	63	0	1	1
2635	226	"res_0"	"tinyint"	8	0	0	0
2636	226	"arg_1"	"oid"	63	0	1	1
2637	227	"res_0"	"oid"	63	0	0	0
2638	227	"arg_1"	"oid"	63	0	1	1
2639	227	"arg_2"	"oid"	63	0	1	2
2640	228	"res_0"	"oid"	63	0	0	0
2641	228	"arg_1"	"oid"	63	0	1	1
2642	228	"arg_2"	"oid"	63	0	1	2
2643	229	"res_0"	"month_interval"	32	0	0	0
2644	229	"arg_1"	"month_interval"	32	0	1	1
2645	229	"arg_2"	"oid"	63	0	1	2
2646	230	"res_0"	"month_interval"	32	0	0	0
2647	230	"arg_1"	"month_interval"	32	0	1	1
2648	230	"arg_2"	"oid"	63	0	1	2
2649	231	"res_0"	"month_interval"	32	0	0	0
2650	231	"arg_1"	"month_interval"	32	0	1	1
2651	231	"arg_2"	"oid"	63	0	1	2
2652	232	"res_0"	"month_interval"	32	0	0	0
2653	232	"arg_1"	"month_interval"	32	0	1	1
2654	232	"arg_2"	"oid"	63	0	1	2
2655	233	"res_0"	"sec_interval"	19	0	0	0
2656	233	"arg_1"	"sec_interval"	19	0	1	1
2657	233	"arg_2"	"oid"	63	0	1	2
2658	234	"res_0"	"sec_interval"	19	0	0	0
2659	234	"arg_1"	"sec_interval"	19	0	1	1
2660	234	"arg_2"	"oid"	63	0	1	2
2661	235	"res_0"	"sec_interval"	19	0	0	0
2662	235	"arg_1"	"sec_interval"	19	0	1	1
2663	235	"arg_2"	"oid"	63	0	1	2
2664	236	"res_0"	"sec_interval"	19	0	0	0
2665	236	"arg_1"	"sec_interval"	19	0	1	1
2666	236	"arg_2"	"oid"	63	0	1	2
2667	237	"res_0"	"wrd"	64	0	0	0
2668	237	"arg_1"	"wrd"	64	0	1	1
2669	237	"arg_2"	"wrd"	64	0	1	2
2670	238	"res_0"	"wrd"	64	0	0	0
2671	238	"arg_1"	"wrd"	64	0	1	1
2672	238	"arg_2"	"wrd"	64	0	1	2
2673	239	"res_0"	"wrd"	64	0	0	0
2674	239	"arg_1"	"wrd"	64	0	1	1
2675	239	"arg_2"	"wrd"	64	0	1	2
2676	240	"res_0"	"wrd"	64	0	0	0
2677	240	"arg_1"	"wrd"	64	0	1	1
2678	240	"arg_2"	"wrd"	64	0	1	2
2679	241	"res_0"	"wrd"	64	0	0	0
2680	241	"arg_1"	"wrd"	64	0	1	1
2681	241	"arg_2"	"wrd"	64	0	1	2
2682	242	"res_0"	"wrd"	64	0	0	0
2683	242	"arg_1"	"wrd"	64	0	1	1
2684	242	"arg_2"	"wrd"	64	0	1	2
2685	243	"res_0"	"wrd"	64	0	0	0
2686	243	"arg_1"	"wrd"	64	0	1	1
2687	243	"arg_2"	"wrd"	64	0	1	2
2688	244	"res_0"	"wrd"	64	0	0	0
2689	244	"arg_1"	"wrd"	64	0	1	1
2690	245	"res_0"	"wrd"	64	0	0	0
2691	245	"arg_1"	"wrd"	64	0	1	1
2692	245	"arg_2"	"int"	32	0	1	2
2693	246	"res_0"	"wrd"	64	0	0	0
2694	246	"arg_1"	"wrd"	64	0	1	1
2695	246	"arg_2"	"int"	32	0	1	2
2696	247	"res_0"	"wrd"	64	0	0	0
2697	247	"arg_1"	"wrd"	64	0	1	1
2698	248	"res_0"	"wrd"	64	0	0	0
2699	248	"arg_1"	"wrd"	64	0	1	1
2700	249	"res_0"	"tinyint"	8	0	0	0
2701	249	"arg_1"	"wrd"	64	0	1	1
2702	250	"res_0"	"wrd"	64	0	0	0
2703	250	"arg_1"	"wrd"	64	0	1	1
2704	250	"arg_2"	"wrd"	64	0	1	2
2705	251	"res_0"	"wrd"	64	0	0	0
2706	251	"arg_1"	"wrd"	64	0	1	1
2707	251	"arg_2"	"wrd"	64	0	1	2
2708	252	"res_0"	"month_interval"	32	0	0	0
2709	252	"arg_1"	"month_interval"	32	0	1	1
2710	252	"arg_2"	"wrd"	64	0	1	2
2711	253	"res_0"	"month_interval"	32	0	0	0
2712	253	"arg_1"	"month_interval"	32	0	1	1
2713	253	"arg_2"	"wrd"	64	0	1	2
2714	254	"res_0"	"month_interval"	32	0	0	0
2715	254	"arg_1"	"month_interval"	32	0	1	1
2716	254	"arg_2"	"wrd"	64	0	1	2
2717	255	"res_0"	"month_interval"	32	0	0	0
2718	255	"arg_1"	"month_interval"	32	0	1	1
2719	255	"arg_2"	"wrd"	64	0	1	2
2720	256	"res_0"	"sec_interval"	19	0	0	0
2721	256	"arg_1"	"sec_interval"	19	0	1	1
2722	256	"arg_2"	"wrd"	64	0	1	2
2723	257	"res_0"	"sec_interval"	19	0	0	0
2724	257	"arg_1"	"sec_interval"	19	0	1	1
2725	257	"arg_2"	"wrd"	64	0	1	2
2726	258	"res_0"	"sec_interval"	19	0	0	0
2727	258	"arg_1"	"sec_interval"	19	0	1	1
2728	258	"arg_2"	"wrd"	64	0	1	2
2729	259	"res_0"	"sec_interval"	19	0	0	0
2730	259	"arg_1"	"sec_interval"	19	0	1	1
2731	259	"arg_2"	"wrd"	64	0	1	2
2732	260	"res_0"	"hugeint"	128	0	0	0
2733	260	"arg_1"	"hugeint"	128	0	1	1
2734	260	"arg_2"	"hugeint"	128	0	1	2
2735	261	"res_0"	"hugeint"	128	0	0	0
2736	261	"arg_1"	"hugeint"	128	0	1	1
2737	261	"arg_2"	"hugeint"	128	0	1	2
2738	262	"res_0"	"hugeint"	128	0	0	0
2739	262	"arg_1"	"hugeint"	128	0	1	1
2740	262	"arg_2"	"hugeint"	128	0	1	2
2741	263	"res_0"	"hugeint"	128	0	0	0
2742	263	"arg_1"	"hugeint"	128	0	1	1
2743	263	"arg_2"	"hugeint"	128	0	1	2
2744	264	"res_0"	"hugeint"	128	0	0	0
2745	264	"arg_1"	"hugeint"	128	0	1	1
2746	264	"arg_2"	"hugeint"	128	0	1	2
2747	265	"res_0"	"hugeint"	128	0	0	0
2748	265	"arg_1"	"hugeint"	128	0	1	1
2749	265	"arg_2"	"hugeint"	128	0	1	2
2750	266	"res_0"	"hugeint"	128	0	0	0
2751	266	"arg_1"	"hugeint"	128	0	1	1
2752	266	"arg_2"	"hugeint"	128	0	1	2
2753	267	"res_0"	"hugeint"	128	0	0	0
2754	267	"arg_1"	"hugeint"	128	0	1	1
2755	268	"res_0"	"hugeint"	128	0	0	0
2756	268	"arg_1"	"hugeint"	128	0	1	1
2757	268	"arg_2"	"int"	32	0	1	2
2758	269	"res_0"	"hugeint"	128	0	0	0
2759	269	"arg_1"	"hugeint"	128	0	1	1
2760	269	"arg_2"	"int"	32	0	1	2
2761	270	"res_0"	"hugeint"	128	0	0	0
2762	270	"arg_1"	"hugeint"	128	0	1	1
2763	271	"res_0"	"hugeint"	128	0	0	0
2764	271	"arg_1"	"hugeint"	128	0	1	1
2765	272	"res_0"	"tinyint"	8	0	0	0
2766	272	"arg_1"	"hugeint"	128	0	1	1
2767	273	"res_0"	"hugeint"	128	0	0	0
2768	273	"arg_1"	"hugeint"	128	0	1	1
2769	273	"arg_2"	"hugeint"	128	0	1	2
2770	274	"res_0"	"hugeint"	128	0	0	0
2771	274	"arg_1"	"hugeint"	128	0	1	1
2772	274	"arg_2"	"hugeint"	128	0	1	2
2773	275	"res_0"	"month_interval"	32	0	0	0
2774	275	"arg_1"	"month_interval"	32	0	1	1
2775	275	"arg_2"	"hugeint"	128	0	1	2
2776	276	"res_0"	"month_interval"	32	0	0	0
2777	276	"arg_1"	"month_interval"	32	0	1	1
2778	276	"arg_2"	"hugeint"	128	0	1	2
2779	277	"res_0"	"month_interval"	32	0	0	0
2780	277	"arg_1"	"month_interval"	32	0	1	1
2781	277	"arg_2"	"hugeint"	128	0	1	2
2782	278	"res_0"	"month_interval"	32	0	0	0
2783	278	"arg_1"	"month_interval"	32	0	1	1
2784	278	"arg_2"	"hugeint"	128	0	1	2
2785	279	"res_0"	"sec_interval"	19	0	0	0
2786	279	"arg_1"	"sec_interval"	19	0	1	1
2787	279	"arg_2"	"hugeint"	128	0	1	2
2788	280	"res_0"	"sec_interval"	19	0	0	0
2789	280	"arg_1"	"sec_interval"	19	0	1	1
2790	280	"arg_2"	"hugeint"	128	0	1	2
2791	281	"res_0"	"sec_interval"	19	0	0	0
2792	281	"arg_1"	"sec_interval"	19	0	1	1
2793	281	"arg_2"	"hugeint"	128	0	1	2
2794	282	"res_0"	"sec_interval"	19	0	0	0
2795	282	"arg_1"	"sec_interval"	19	0	1	1
2796	282	"arg_2"	"hugeint"	128	0	1	2
2797	283	"res_0"	"decimal"	2	0	0	0
2798	283	"arg_1"	"decimal"	2	0	1	1
2799	283	"arg_2"	"decimal"	2	0	1	2
2800	284	"res_0"	"decimal"	2	0	0	0
2801	284	"arg_1"	"decimal"	2	0	1	1
2802	284	"arg_2"	"decimal"	2	0	1	2
2803	285	"res_0"	"decimal"	2	0	0	0
2804	285	"arg_1"	"decimal"	2	0	1	1
2805	285	"arg_2"	"decimal"	2	0	1	2
2806	286	"res_0"	"decimal"	2	0	0	0
2807	286	"arg_1"	"decimal"	2	0	1	1
2808	286	"arg_2"	"decimal"	2	0	1	2
2809	287	"res_0"	"decimal"	2	0	0	0
2810	287	"arg_1"	"decimal"	2	0	1	1
2811	287	"arg_2"	"decimal"	2	0	1	2
2812	288	"res_0"	"decimal"	2	0	0	0
2813	288	"arg_1"	"decimal"	2	0	1	1
2814	288	"arg_2"	"decimal"	2	0	1	2
2815	289	"res_0"	"decimal"	2	0	0	0
2816	289	"arg_1"	"decimal"	2	0	1	1
2817	289	"arg_2"	"decimal"	2	0	1	2
2818	290	"res_0"	"decimal"	2	0	0	0
2819	290	"arg_1"	"decimal"	2	0	1	1
2820	291	"res_0"	"decimal"	2	0	0	0
2821	291	"arg_1"	"decimal"	2	0	1	1
2822	291	"arg_2"	"int"	32	0	1	2
2823	292	"res_0"	"decimal"	2	0	0	0
2824	292	"arg_1"	"decimal"	2	0	1	1
2825	292	"arg_2"	"int"	32	0	1	2
2826	293	"res_0"	"decimal"	2	0	0	0
2827	293	"arg_1"	"decimal"	2	0	1	1
2828	294	"res_0"	"decimal"	2	0	0	0
2829	294	"arg_1"	"decimal"	2	0	1	1
2830	295	"res_0"	"tinyint"	8	0	0	0
2831	295	"arg_1"	"decimal"	2	0	1	1
2832	296	"res_0"	"decimal"	2	0	0	0
2833	296	"arg_1"	"decimal"	2	0	1	1
2834	296	"arg_2"	"tinyint"	8	0	1	2
2835	297	"res_0"	"decimal"	2	0	0	0
2836	297	"arg_1"	"decimal"	2	0	1	1
2837	297	"arg_2"	"tinyint"	8	0	1	2
2838	298	"res_0"	"month_interval"	32	0	0	0
2839	298	"arg_1"	"month_interval"	32	0	1	1
2840	298	"arg_2"	"decimal"	2	0	1	2
2841	299	"res_0"	"month_interval"	32	0	0	0
2842	299	"arg_1"	"month_interval"	32	0	1	1
2843	299	"arg_2"	"decimal"	2	0	1	2
2844	300	"res_0"	"month_interval"	32	0	0	0
2845	300	"arg_1"	"month_interval"	32	0	1	1
2846	300	"arg_2"	"decimal"	2	0	1	2
2847	301	"res_0"	"month_interval"	32	0	0	0
2848	301	"arg_1"	"month_interval"	32	0	1	1
2849	301	"arg_2"	"decimal"	2	0	1	2
2850	302	"res_0"	"sec_interval"	19	0	0	0
2851	302	"arg_1"	"sec_interval"	19	0	1	1
2852	302	"arg_2"	"decimal"	2	0	1	2
2853	303	"res_0"	"sec_interval"	19	0	0	0
2854	303	"arg_1"	"sec_interval"	19	0	1	1
2855	303	"arg_2"	"decimal"	2	0	1	2
2856	304	"res_0"	"sec_interval"	19	0	0	0
2857	304	"arg_1"	"sec_interval"	19	0	1	1
2858	304	"arg_2"	"decimal"	2	0	1	2
2859	305	"res_0"	"sec_interval"	19	0	0	0
2860	305	"arg_1"	"sec_interval"	19	0	1	1
2861	305	"arg_2"	"decimal"	2	0	1	2
2862	306	"res_0"	"decimal"	4	0	0	0
2863	306	"arg_1"	"decimal"	4	0	1	1
2864	306	"arg_2"	"decimal"	4	0	1	2
2865	307	"res_0"	"decimal"	4	0	0	0
2866	307	"arg_1"	"decimal"	4	0	1	1
2867	307	"arg_2"	"decimal"	4	0	1	2
2868	308	"res_0"	"decimal"	4	0	0	0
2869	308	"arg_1"	"decimal"	4	0	1	1
2870	308	"arg_2"	"decimal"	4	0	1	2
2871	309	"res_0"	"decimal"	4	0	0	0
2872	309	"arg_1"	"decimal"	4	0	1	1
2873	309	"arg_2"	"decimal"	4	0	1	2
2874	310	"res_0"	"decimal"	4	0	0	0
2875	310	"arg_1"	"decimal"	4	0	1	1
2876	310	"arg_2"	"decimal"	4	0	1	2
2877	311	"res_0"	"decimal"	4	0	0	0
2878	311	"arg_1"	"decimal"	4	0	1	1
2879	311	"arg_2"	"decimal"	4	0	1	2
2880	312	"res_0"	"decimal"	4	0	0	0
2881	312	"arg_1"	"decimal"	4	0	1	1
2882	312	"arg_2"	"decimal"	4	0	1	2
2883	313	"res_0"	"decimal"	4	0	0	0
2884	313	"arg_1"	"decimal"	4	0	1	1
2885	314	"res_0"	"decimal"	4	0	0	0
2886	314	"arg_1"	"decimal"	4	0	1	1
2887	314	"arg_2"	"int"	32	0	1	2
2888	315	"res_0"	"decimal"	4	0	0	0
2889	315	"arg_1"	"decimal"	4	0	1	1
2890	315	"arg_2"	"int"	32	0	1	2
2891	316	"res_0"	"decimal"	4	0	0	0
2892	316	"arg_1"	"decimal"	4	0	1	1
2893	317	"res_0"	"decimal"	4	0	0	0
2894	317	"arg_1"	"decimal"	4	0	1	1
2895	318	"res_0"	"tinyint"	8	0	0	0
2896	318	"arg_1"	"decimal"	4	0	1	1
2897	319	"res_0"	"decimal"	4	0	0	0
2898	319	"arg_1"	"decimal"	4	0	1	1
2899	319	"arg_2"	"smallint"	16	0	1	2
2900	320	"res_0"	"decimal"	4	0	0	0
2901	320	"arg_1"	"decimal"	4	0	1	1
2902	320	"arg_2"	"smallint"	16	0	1	2
2903	321	"res_0"	"month_interval"	32	0	0	0
2904	321	"arg_1"	"month_interval"	32	0	1	1
2905	321	"arg_2"	"decimal"	4	0	1	2
2906	322	"res_0"	"month_interval"	32	0	0	0
2907	322	"arg_1"	"month_interval"	32	0	1	1
2908	322	"arg_2"	"decimal"	4	0	1	2
2909	323	"res_0"	"month_interval"	32	0	0	0
2910	323	"arg_1"	"month_interval"	32	0	1	1
2911	323	"arg_2"	"decimal"	4	0	1	2
2912	324	"res_0"	"month_interval"	32	0	0	0
2913	324	"arg_1"	"month_interval"	32	0	1	1
2914	324	"arg_2"	"decimal"	4	0	1	2
2915	325	"res_0"	"sec_interval"	19	0	0	0
2916	325	"arg_1"	"sec_interval"	19	0	1	1
2917	325	"arg_2"	"decimal"	4	0	1	2
2918	326	"res_0"	"sec_interval"	19	0	0	0
2919	326	"arg_1"	"sec_interval"	19	0	1	1
2920	326	"arg_2"	"decimal"	4	0	1	2
2921	327	"res_0"	"sec_interval"	19	0	0	0
2922	327	"arg_1"	"sec_interval"	19	0	1	1
2923	327	"arg_2"	"decimal"	4	0	1	2
2924	328	"res_0"	"sec_interval"	19	0	0	0
2925	328	"arg_1"	"sec_interval"	19	0	1	1
2926	328	"arg_2"	"decimal"	4	0	1	2
2927	329	"res_0"	"decimal"	9	0	0	0
2928	329	"arg_1"	"decimal"	9	0	1	1
2929	329	"arg_2"	"decimal"	9	0	1	2
2930	330	"res_0"	"decimal"	9	0	0	0
2931	330	"arg_1"	"decimal"	9	0	1	1
2932	330	"arg_2"	"decimal"	9	0	1	2
2933	331	"res_0"	"decimal"	9	0	0	0
2934	331	"arg_1"	"decimal"	9	0	1	1
2935	331	"arg_2"	"decimal"	9	0	1	2
2936	332	"res_0"	"decimal"	9	0	0	0
2937	332	"arg_1"	"decimal"	9	0	1	1
2938	332	"arg_2"	"decimal"	9	0	1	2
2939	333	"res_0"	"decimal"	9	0	0	0
2940	333	"arg_1"	"decimal"	9	0	1	1
2941	333	"arg_2"	"decimal"	9	0	1	2
2942	334	"res_0"	"decimal"	9	0	0	0
2943	334	"arg_1"	"decimal"	9	0	1	1
2944	334	"arg_2"	"decimal"	9	0	1	2
2945	335	"res_0"	"decimal"	9	0	0	0
2946	335	"arg_1"	"decimal"	9	0	1	1
2947	335	"arg_2"	"decimal"	9	0	1	2
2948	336	"res_0"	"decimal"	9	0	0	0
2949	336	"arg_1"	"decimal"	9	0	1	1
2950	337	"res_0"	"decimal"	9	0	0	0
2951	337	"arg_1"	"decimal"	9	0	1	1
2952	337	"arg_2"	"int"	32	0	1	2
2953	338	"res_0"	"decimal"	9	0	0	0
2954	338	"arg_1"	"decimal"	9	0	1	1
2955	338	"arg_2"	"int"	32	0	1	2
2956	339	"res_0"	"decimal"	9	0	0	0
2957	339	"arg_1"	"decimal"	9	0	1	1
2958	340	"res_0"	"decimal"	9	0	0	0
2959	340	"arg_1"	"decimal"	9	0	1	1
2960	341	"res_0"	"tinyint"	8	0	0	0
2961	341	"arg_1"	"decimal"	9	0	1	1
2962	342	"res_0"	"decimal"	9	0	0	0
2963	342	"arg_1"	"decimal"	9	0	1	1
2964	342	"arg_2"	"int"	32	0	1	2
2965	343	"res_0"	"decimal"	9	0	0	0
2966	343	"arg_1"	"decimal"	9	0	1	1
2967	343	"arg_2"	"int"	32	0	1	2
2968	344	"res_0"	"month_interval"	32	0	0	0
2969	344	"arg_1"	"month_interval"	32	0	1	1
2970	344	"arg_2"	"decimal"	9	0	1	2
2971	345	"res_0"	"month_interval"	32	0	0	0
2972	345	"arg_1"	"month_interval"	32	0	1	1
2973	345	"arg_2"	"decimal"	9	0	1	2
2974	346	"res_0"	"month_interval"	32	0	0	0
2975	346	"arg_1"	"month_interval"	32	0	1	1
2976	346	"arg_2"	"decimal"	9	0	1	2
2977	347	"res_0"	"month_interval"	32	0	0	0
2978	347	"arg_1"	"month_interval"	32	0	1	1
2979	347	"arg_2"	"decimal"	9	0	1	2
2980	348	"res_0"	"sec_interval"	19	0	0	0
2981	348	"arg_1"	"sec_interval"	19	0	1	1
2982	348	"arg_2"	"decimal"	9	0	1	2
2983	349	"res_0"	"sec_interval"	19	0	0	0
2984	349	"arg_1"	"sec_interval"	19	0	1	1
2985	349	"arg_2"	"decimal"	9	0	1	2
2986	350	"res_0"	"sec_interval"	19	0	0	0
2987	350	"arg_1"	"sec_interval"	19	0	1	1
2988	350	"arg_2"	"decimal"	9	0	1	2
2989	351	"res_0"	"sec_interval"	19	0	0	0
2990	351	"arg_1"	"sec_interval"	19	0	1	1
2991	351	"arg_2"	"decimal"	9	0	1	2
2992	352	"res_0"	"decimal"	18	0	0	0
2993	352	"arg_1"	"decimal"	18	0	1	1
2994	352	"arg_2"	"decimal"	18	0	1	2
2995	353	"res_0"	"decimal"	18	0	0	0
2996	353	"arg_1"	"decimal"	18	0	1	1
2997	353	"arg_2"	"decimal"	18	0	1	2
2998	354	"res_0"	"decimal"	18	0	0	0
2999	354	"arg_1"	"decimal"	18	0	1	1
3000	354	"arg_2"	"decimal"	18	0	1	2
3001	355	"res_0"	"decimal"	18	0	0	0
3002	355	"arg_1"	"decimal"	18	0	1	1
3003	355	"arg_2"	"decimal"	18	0	1	2
3004	356	"res_0"	"decimal"	18	0	0	0
3005	356	"arg_1"	"decimal"	18	0	1	1
3006	356	"arg_2"	"decimal"	18	0	1	2
3007	357	"res_0"	"decimal"	18	0	0	0
3008	357	"arg_1"	"decimal"	18	0	1	1
3009	357	"arg_2"	"decimal"	18	0	1	2
3010	358	"res_0"	"decimal"	18	0	0	0
3011	358	"arg_1"	"decimal"	18	0	1	1
3012	358	"arg_2"	"decimal"	18	0	1	2
3013	359	"res_0"	"decimal"	18	0	0	0
3014	359	"arg_1"	"decimal"	18	0	1	1
3015	360	"res_0"	"decimal"	18	0	0	0
3016	360	"arg_1"	"decimal"	18	0	1	1
3017	360	"arg_2"	"int"	32	0	1	2
3018	361	"res_0"	"decimal"	18	0	0	0
3019	361	"arg_1"	"decimal"	18	0	1	1
3020	361	"arg_2"	"int"	32	0	1	2
3021	362	"res_0"	"decimal"	18	0	0	0
3022	362	"arg_1"	"decimal"	18	0	1	1
3023	363	"res_0"	"decimal"	18	0	0	0
3024	363	"arg_1"	"decimal"	18	0	1	1
3025	364	"res_0"	"tinyint"	8	0	0	0
3026	364	"arg_1"	"decimal"	18	0	1	1
3027	365	"res_0"	"decimal"	18	0	0	0
3028	365	"arg_1"	"decimal"	18	0	1	1
3029	365	"arg_2"	"bigint"	64	0	1	2
3030	366	"res_0"	"decimal"	18	0	0	0
3031	366	"arg_1"	"decimal"	18	0	1	1
3032	366	"arg_2"	"bigint"	64	0	1	2
3033	367	"res_0"	"month_interval"	32	0	0	0
3034	367	"arg_1"	"month_interval"	32	0	1	1
3035	367	"arg_2"	"decimal"	18	0	1	2
3036	368	"res_0"	"month_interval"	32	0	0	0
3037	368	"arg_1"	"month_interval"	32	0	1	1
3038	368	"arg_2"	"decimal"	18	0	1	2
3039	369	"res_0"	"month_interval"	32	0	0	0
3040	369	"arg_1"	"month_interval"	32	0	1	1
3041	369	"arg_2"	"decimal"	18	0	1	2
3042	370	"res_0"	"month_interval"	32	0	0	0
3043	370	"arg_1"	"month_interval"	32	0	1	1
3044	370	"arg_2"	"decimal"	18	0	1	2
3045	371	"res_0"	"sec_interval"	19	0	0	0
3046	371	"arg_1"	"sec_interval"	19	0	1	1
3047	371	"arg_2"	"decimal"	18	0	1	2
3048	372	"res_0"	"sec_interval"	19	0	0	0
3049	372	"arg_1"	"sec_interval"	19	0	1	1
3050	372	"arg_2"	"decimal"	18	0	1	2
3051	373	"res_0"	"sec_interval"	19	0	0	0
3052	373	"arg_1"	"sec_interval"	19	0	1	1
3053	373	"arg_2"	"decimal"	18	0	1	2
3054	374	"res_0"	"sec_interval"	19	0	0	0
3055	374	"arg_1"	"sec_interval"	19	0	1	1
3056	374	"arg_2"	"decimal"	18	0	1	2
3057	375	"res_0"	"decimal"	39	0	0	0
3058	375	"arg_1"	"decimal"	39	0	1	1
3059	375	"arg_2"	"decimal"	39	0	1	2
3060	376	"res_0"	"decimal"	39	0	0	0
3061	376	"arg_1"	"decimal"	39	0	1	1
3062	376	"arg_2"	"decimal"	39	0	1	2
3063	377	"res_0"	"decimal"	39	0	0	0
3064	377	"arg_1"	"decimal"	39	0	1	1
3065	377	"arg_2"	"decimal"	39	0	1	2
3066	378	"res_0"	"decimal"	39	0	0	0
3067	378	"arg_1"	"decimal"	39	0	1	1
3068	378	"arg_2"	"decimal"	39	0	1	2
3069	379	"res_0"	"decimal"	39	0	0	0
3070	379	"arg_1"	"decimal"	39	0	1	1
3071	379	"arg_2"	"decimal"	39	0	1	2
3072	380	"res_0"	"decimal"	39	0	0	0
3073	380	"arg_1"	"decimal"	39	0	1	1
3074	380	"arg_2"	"decimal"	39	0	1	2
3075	381	"res_0"	"decimal"	39	0	0	0
3076	381	"arg_1"	"decimal"	39	0	1	1
3077	381	"arg_2"	"decimal"	39	0	1	2
3078	382	"res_0"	"decimal"	39	0	0	0
3079	382	"arg_1"	"decimal"	39	0	1	1
3080	383	"res_0"	"decimal"	39	0	0	0
3081	383	"arg_1"	"decimal"	39	0	1	1
3082	383	"arg_2"	"int"	32	0	1	2
3083	384	"res_0"	"decimal"	39	0	0	0
3084	384	"arg_1"	"decimal"	39	0	1	1
3085	384	"arg_2"	"int"	32	0	1	2
3086	385	"res_0"	"decimal"	39	0	0	0
3087	385	"arg_1"	"decimal"	39	0	1	1
3088	386	"res_0"	"decimal"	39	0	0	0
3089	386	"arg_1"	"decimal"	39	0	1	1
3090	387	"res_0"	"tinyint"	8	0	0	0
3091	387	"arg_1"	"decimal"	39	0	1	1
3092	388	"res_0"	"decimal"	39	0	0	0
3093	388	"arg_1"	"decimal"	39	0	1	1
3094	388	"arg_2"	"hugeint"	128	0	1	2
3095	389	"res_0"	"decimal"	39	0	0	0
3096	389	"arg_1"	"decimal"	39	0	1	1
3097	389	"arg_2"	"hugeint"	128	0	1	2
3098	390	"res_0"	"month_interval"	32	0	0	0
3099	390	"arg_1"	"month_interval"	32	0	1	1
3100	390	"arg_2"	"decimal"	39	0	1	2
3101	391	"res_0"	"month_interval"	32	0	0	0
3102	391	"arg_1"	"month_interval"	32	0	1	1
3103	391	"arg_2"	"decimal"	39	0	1	2
3104	392	"res_0"	"month_interval"	32	0	0	0
3105	392	"arg_1"	"month_interval"	32	0	1	1
3106	392	"arg_2"	"decimal"	39	0	1	2
3107	393	"res_0"	"month_interval"	32	0	0	0
3108	393	"arg_1"	"month_interval"	32	0	1	1
3109	393	"arg_2"	"decimal"	39	0	1	2
3110	394	"res_0"	"sec_interval"	19	0	0	0
3111	394	"arg_1"	"sec_interval"	19	0	1	1
3112	394	"arg_2"	"decimal"	39	0	1	2
3113	395	"res_0"	"sec_interval"	19	0	0	0
3114	395	"arg_1"	"sec_interval"	19	0	1	1
3115	395	"arg_2"	"decimal"	39	0	1	2
3116	396	"res_0"	"sec_interval"	19	0	0	0
3117	396	"arg_1"	"sec_interval"	19	0	1	1
3118	396	"arg_2"	"decimal"	39	0	1	2
3119	397	"res_0"	"sec_interval"	19	0	0	0
3120	397	"arg_1"	"sec_interval"	19	0	1	1
3121	397	"arg_2"	"decimal"	39	0	1	2
3122	398	"res_0"	"real"	24	0	0	0
3123	398	"arg_1"	"real"	24	0	1	1
3124	398	"arg_2"	"real"	24	0	1	2
3125	399	"res_0"	"real"	24	0	0	0
3126	399	"arg_1"	"real"	24	0	1	1
3127	399	"arg_2"	"real"	24	0	1	2
3128	400	"res_0"	"real"	24	0	0	0
3129	400	"arg_1"	"real"	24	0	1	1
3130	400	"arg_2"	"real"	24	0	1	2
3131	401	"res_0"	"real"	24	0	0	0
3132	401	"arg_1"	"real"	24	0	1	1
3133	401	"arg_2"	"real"	24	0	1	2
3134	402	"res_0"	"real"	24	0	0	0
3135	402	"arg_1"	"real"	24	0	1	1
3136	403	"res_0"	"real"	24	0	0	0
3137	403	"arg_1"	"real"	24	0	1	1
3138	404	"res_0"	"tinyint"	8	0	0	0
3139	404	"arg_1"	"real"	24	0	1	1
3140	405	"res_0"	"real"	24	0	0	0
3141	405	"arg_1"	"real"	24	0	1	1
3142	405	"arg_2"	"real"	24	0	1	2
3143	406	"res_0"	"real"	24	0	0	0
3144	406	"arg_1"	"real"	24	0	1	1
3145	406	"arg_2"	"real"	24	0	1	2
3146	407	"res_0"	"month_interval"	32	0	0	0
3147	407	"arg_1"	"month_interval"	32	0	1	1
3148	407	"arg_2"	"real"	24	0	1	2
3149	408	"res_0"	"month_interval"	32	0	0	0
3150	408	"arg_1"	"month_interval"	32	0	1	1
3151	408	"arg_2"	"real"	24	0	1	2
3152	409	"res_0"	"month_interval"	32	0	0	0
3153	409	"arg_1"	"month_interval"	32	0	1	1
3154	409	"arg_2"	"real"	24	0	1	2
3155	410	"res_0"	"month_interval"	32	0	0	0
3156	410	"arg_1"	"month_interval"	32	0	1	1
3157	410	"arg_2"	"real"	24	0	1	2
3158	411	"res_0"	"sec_interval"	19	0	0	0
3159	411	"arg_1"	"sec_interval"	19	0	1	1
3160	411	"arg_2"	"real"	24	0	1	2
3161	412	"res_0"	"sec_interval"	19	0	0	0
3162	412	"arg_1"	"sec_interval"	19	0	1	1
3163	412	"arg_2"	"real"	24	0	1	2
3164	413	"res_0"	"sec_interval"	19	0	0	0
3165	413	"arg_1"	"sec_interval"	19	0	1	1
3166	413	"arg_2"	"real"	24	0	1	2
3167	414	"res_0"	"sec_interval"	19	0	0	0
3168	414	"arg_1"	"sec_interval"	19	0	1	1
3169	414	"arg_2"	"real"	24	0	1	2
3170	415	"res_0"	"double"	53	0	0	0
3171	415	"arg_1"	"double"	53	0	1	1
3172	415	"arg_2"	"double"	53	0	1	2
3173	416	"res_0"	"double"	53	0	0	0
3174	416	"arg_1"	"double"	53	0	1	1
3175	416	"arg_2"	"double"	53	0	1	2
3176	417	"res_0"	"double"	53	0	0	0
3177	417	"arg_1"	"double"	53	0	1	1
3178	417	"arg_2"	"double"	53	0	1	2
3179	418	"res_0"	"double"	53	0	0	0
3180	418	"arg_1"	"double"	53	0	1	1
3181	418	"arg_2"	"double"	53	0	1	2
3182	419	"res_0"	"double"	53	0	0	0
3183	419	"arg_1"	"double"	53	0	1	1
3184	420	"res_0"	"double"	53	0	0	0
3185	420	"arg_1"	"double"	53	0	1	1
3186	421	"res_0"	"tinyint"	8	0	0	0
3187	421	"arg_1"	"double"	53	0	1	1
3188	422	"res_0"	"double"	53	0	0	0
3189	422	"arg_1"	"double"	53	0	1	1
3190	422	"arg_2"	"double"	53	0	1	2
3191	423	"res_0"	"double"	53	0	0	0
3192	423	"arg_1"	"double"	53	0	1	1
3193	423	"arg_2"	"double"	53	0	1	2
3194	424	"res_0"	"month_interval"	32	0	0	0
3195	424	"arg_1"	"month_interval"	32	0	1	1
3196	424	"arg_2"	"double"	53	0	1	2
3197	425	"res_0"	"month_interval"	32	0	0	0
3198	425	"arg_1"	"month_interval"	32	0	1	1
3199	425	"arg_2"	"double"	53	0	1	2
3200	426	"res_0"	"month_interval"	32	0	0	0
3201	426	"arg_1"	"month_interval"	32	0	1	1
3202	426	"arg_2"	"double"	53	0	1	2
3203	427	"res_0"	"month_interval"	32	0	0	0
3204	427	"arg_1"	"month_interval"	32	0	1	1
3205	427	"arg_2"	"double"	53	0	1	2
3206	428	"res_0"	"sec_interval"	19	0	0	0
3207	428	"arg_1"	"sec_interval"	19	0	1	1
3208	428	"arg_2"	"double"	53	0	1	2
3209	429	"res_0"	"sec_interval"	19	0	0	0
3210	429	"arg_1"	"sec_interval"	19	0	1	1
3211	429	"arg_2"	"double"	53	0	1	2
3212	430	"res_0"	"sec_interval"	19	0	0	0
3213	430	"arg_1"	"sec_interval"	19	0	1	1
3214	430	"arg_2"	"double"	53	0	1	2
3215	431	"res_0"	"sec_interval"	19	0	0	0
3216	431	"arg_1"	"sec_interval"	19	0	1	1
3217	431	"arg_2"	"double"	53	0	1	2
3218	432	"res_0"	"month_interval"	32	0	0	0
3219	432	"arg_1"	"month_interval"	32	0	1	1
3220	432	"arg_2"	"month_interval"	32	0	1	2
3221	433	"res_0"	"month_interval"	32	0	0	0
3222	433	"arg_1"	"month_interval"	32	0	1	1
3223	433	"arg_2"	"month_interval"	32	0	1	2
3224	434	"res_0"	"month_interval"	32	0	0	0
3225	434	"arg_1"	"month_interval"	32	0	1	1
3226	434	"arg_2"	"month_interval"	32	0	1	2
3227	435	"res_0"	"month_interval"	32	0	0	0
3228	435	"arg_1"	"month_interval"	32	0	1	1
3229	435	"arg_2"	"month_interval"	32	0	1	2
3230	436	"res_0"	"month_interval"	32	0	0	0
3231	436	"arg_1"	"month_interval"	32	0	1	1
3232	437	"res_0"	"month_interval"	32	0	0	0
3233	437	"arg_1"	"month_interval"	32	0	1	1
3234	438	"res_0"	"tinyint"	8	0	0	0
3235	438	"arg_1"	"month_interval"	32	0	1	1
3236	439	"res_0"	"month_interval"	32	0	0	0
3237	439	"arg_1"	"month_interval"	32	0	1	1
3238	439	"arg_2"	"int"	32	0	1	2
3239	440	"res_0"	"month_interval"	32	0	0	0
3240	440	"arg_1"	"month_interval"	32	0	1	1
3241	440	"arg_2"	"int"	32	0	1	2
3242	441	"res_0"	"sec_interval"	19	0	0	0
3243	441	"arg_1"	"sec_interval"	19	0	1	1
3244	441	"arg_2"	"sec_interval"	19	0	1	2
3245	442	"res_0"	"sec_interval"	19	0	0	0
3246	442	"arg_1"	"sec_interval"	19	0	1	1
3247	442	"arg_2"	"sec_interval"	19	0	1	2
3248	443	"res_0"	"sec_interval"	19	0	0	0
3249	443	"arg_1"	"sec_interval"	19	0	1	1
3250	443	"arg_2"	"sec_interval"	19	0	1	2
3251	444	"res_0"	"sec_interval"	19	0	0	0
3252	444	"arg_1"	"sec_interval"	19	0	1	1
3253	444	"arg_2"	"sec_interval"	19	0	1	2
3254	445	"res_0"	"sec_interval"	19	0	0	0
3255	445	"arg_1"	"sec_interval"	19	0	1	1
3256	446	"res_0"	"sec_interval"	19	0	0	0
3257	446	"arg_1"	"sec_interval"	19	0	1	1
3258	447	"res_0"	"tinyint"	8	0	0	0
3259	447	"arg_1"	"sec_interval"	19	0	1	1
3260	448	"res_0"	"sec_interval"	19	0	0	0
3261	448	"arg_1"	"sec_interval"	19	0	1	1
3262	448	"arg_2"	"bigint"	64	0	1	2
3263	449	"res_0"	"sec_interval"	19	0	0	0
3264	449	"arg_1"	"sec_interval"	19	0	1	1
3265	449	"arg_2"	"bigint"	64	0	1	2
3266	450	"res_0"	"decimal"	4	0	0	0
3267	450	"arg_1"	"decimal"	4	0	1	1
3268	450	"arg_2"	"tinyint"	8	0	1	2
3269	451	"res_0"	"decimal"	4	0	0	0
3270	451	"arg_1"	"tinyint"	8	0	1	1
3271	451	"arg_2"	"decimal"	4	0	1	2
3272	452	"res_0"	"decimal"	4	0	0	0
3273	452	"arg_1"	"decimal"	4	0	1	1
3274	452	"arg_2"	"decimal"	2	0	1	2
3275	453	"res_0"	"decimal"	4	0	0	0
3276	453	"arg_1"	"decimal"	2	0	1	1
3277	453	"arg_2"	"decimal"	4	0	1	2
3278	454	"res_0"	"decimal"	9	0	0	0
3279	454	"arg_1"	"decimal"	9	0	1	1
3280	454	"arg_2"	"tinyint"	8	0	1	2
3281	455	"res_0"	"decimal"	9	0	0	0
3282	455	"arg_1"	"tinyint"	8	0	1	1
3283	455	"arg_2"	"decimal"	9	0	1	2
3284	456	"res_0"	"decimal"	9	0	0	0
3285	456	"arg_1"	"decimal"	9	0	1	1
3286	456	"arg_2"	"smallint"	16	0	1	2
3287	457	"res_0"	"decimal"	9	0	0	0
3288	457	"arg_1"	"smallint"	16	0	1	1
3289	457	"arg_2"	"decimal"	9	0	1	2
3290	458	"res_0"	"decimal"	9	0	0	0
3291	458	"arg_1"	"decimal"	9	0	1	1
3292	458	"arg_2"	"decimal"	2	0	1	2
3293	459	"res_0"	"decimal"	9	0	0	0
3294	459	"arg_1"	"decimal"	2	0	1	1
3295	459	"arg_2"	"decimal"	9	0	1	2
3296	460	"res_0"	"decimal"	9	0	0	0
3297	460	"arg_1"	"decimal"	9	0	1	1
3298	460	"arg_2"	"decimal"	4	0	1	2
3299	461	"res_0"	"decimal"	9	0	0	0
3300	461	"arg_1"	"decimal"	4	0	1	1
3301	461	"arg_2"	"decimal"	9	0	1	2
3302	462	"res_0"	"decimal"	18	0	0	0
3303	462	"arg_1"	"decimal"	18	0	1	1
3304	462	"arg_2"	"tinyint"	8	0	1	2
3305	463	"res_0"	"decimal"	18	0	0	0
3306	463	"arg_1"	"tinyint"	8	0	1	1
3307	463	"arg_2"	"decimal"	18	0	1	2
3308	464	"res_0"	"decimal"	18	0	0	0
3309	464	"arg_1"	"decimal"	18	0	1	1
3310	464	"arg_2"	"smallint"	16	0	1	2
3311	465	"res_0"	"decimal"	18	0	0	0
3312	465	"arg_1"	"smallint"	16	0	1	1
3313	465	"arg_2"	"decimal"	18	0	1	2
3314	466	"res_0"	"decimal"	18	0	0	0
3315	466	"arg_1"	"decimal"	18	0	1	1
3316	466	"arg_2"	"int"	32	0	1	2
3317	467	"res_0"	"decimal"	18	0	0	0
3318	467	"arg_1"	"int"	32	0	1	1
3319	467	"arg_2"	"decimal"	18	0	1	2
3320	468	"res_0"	"decimal"	18	0	0	0
3321	468	"arg_1"	"decimal"	18	0	1	1
3322	468	"arg_2"	"wrd"	64	0	1	2
3323	469	"res_0"	"decimal"	18	0	0	0
3324	469	"arg_1"	"wrd"	64	0	1	1
3325	469	"arg_2"	"decimal"	18	0	1	2
3326	470	"res_0"	"decimal"	18	0	0	0
3327	470	"arg_1"	"decimal"	18	0	1	1
3328	470	"arg_2"	"decimal"	2	0	1	2
3329	471	"res_0"	"decimal"	18	0	0	0
3330	471	"arg_1"	"decimal"	2	0	1	1
3331	471	"arg_2"	"decimal"	18	0	1	2
3332	472	"res_0"	"decimal"	18	0	0	0
3333	472	"arg_1"	"decimal"	18	0	1	1
3334	472	"arg_2"	"decimal"	4	0	1	2
3335	473	"res_0"	"decimal"	18	0	0	0
3336	473	"arg_1"	"decimal"	4	0	1	1
3337	473	"arg_2"	"decimal"	18	0	1	2
3338	474	"res_0"	"decimal"	18	0	0	0
3339	474	"arg_1"	"decimal"	18	0	1	1
3340	474	"arg_2"	"decimal"	9	0	1	2
3341	475	"res_0"	"decimal"	18	0	0	0
3342	475	"arg_1"	"decimal"	9	0	1	1
3343	475	"arg_2"	"decimal"	18	0	1	2
3344	476	"res_0"	"decimal"	39	0	0	0
3345	476	"arg_1"	"decimal"	39	0	1	1
3346	476	"arg_2"	"tinyint"	8	0	1	2
3347	477	"res_0"	"decimal"	39	0	0	0
3348	477	"arg_1"	"tinyint"	8	0	1	1
3349	477	"arg_2"	"decimal"	39	0	1	2
3350	478	"res_0"	"decimal"	39	0	0	0
3351	478	"arg_1"	"decimal"	39	0	1	1
3352	478	"arg_2"	"smallint"	16	0	1	2
3353	479	"res_0"	"decimal"	39	0	0	0
3354	479	"arg_1"	"smallint"	16	0	1	1
3355	479	"arg_2"	"decimal"	39	0	1	2
3356	480	"res_0"	"decimal"	39	0	0	0
3357	480	"arg_1"	"decimal"	39	0	1	1
3358	480	"arg_2"	"int"	32	0	1	2
3359	481	"res_0"	"decimal"	39	0	0	0
3360	481	"arg_1"	"int"	32	0	1	1
3361	481	"arg_2"	"decimal"	39	0	1	2
3362	482	"res_0"	"decimal"	39	0	0	0
3363	482	"arg_1"	"decimal"	39	0	1	1
3364	482	"arg_2"	"bigint"	64	0	1	2
3365	483	"res_0"	"decimal"	39	0	0	0
3366	483	"arg_1"	"bigint"	64	0	1	1
3367	483	"arg_2"	"decimal"	39	0	1	2
3368	484	"res_0"	"decimal"	39	0	0	0
3369	484	"arg_1"	"decimal"	39	0	1	1
3370	484	"arg_2"	"wrd"	64	0	1	2
3371	485	"res_0"	"decimal"	39	0	0	0
3372	485	"arg_1"	"wrd"	64	0	1	1
3373	485	"arg_2"	"decimal"	39	0	1	2
3374	486	"res_0"	"decimal"	39	0	0	0
3375	486	"arg_1"	"decimal"	39	0	1	1
3376	486	"arg_2"	"decimal"	2	0	1	2
3377	487	"res_0"	"decimal"	39	0	0	0
3378	487	"arg_1"	"decimal"	2	0	1	1
3379	487	"arg_2"	"decimal"	39	0	1	2
3380	488	"res_0"	"decimal"	39	0	0	0
3381	488	"arg_1"	"decimal"	39	0	1	1
3382	488	"arg_2"	"decimal"	4	0	1	2
3383	489	"res_0"	"decimal"	39	0	0	0
3384	489	"arg_1"	"decimal"	4	0	1	1
3385	489	"arg_2"	"decimal"	39	0	1	2
3386	490	"res_0"	"decimal"	39	0	0	0
3387	490	"arg_1"	"decimal"	39	0	1	1
3388	490	"arg_2"	"decimal"	9	0	1	2
3389	491	"res_0"	"decimal"	39	0	0	0
3390	491	"arg_1"	"decimal"	9	0	1	1
3391	491	"arg_2"	"decimal"	39	0	1	2
3392	492	"res_0"	"decimal"	39	0	0	0
3393	492	"arg_1"	"decimal"	39	0	1	1
3394	492	"arg_2"	"decimal"	18	0	1	2
3395	493	"res_0"	"decimal"	39	0	0	0
3396	493	"arg_1"	"decimal"	18	0	1	1
3397	493	"arg_2"	"decimal"	39	0	1	2
3398	494	"res_0"	"decimal"	2	0	0	0
3399	494	"arg_1"	"decimal"	2	0	1	1
3400	494	"arg_2"	"tinyint"	8	0	1	2
3401	495	"res_0"	"decimal"	4	0	0	0
3402	495	"arg_1"	"decimal"	4	0	1	1
3403	495	"arg_2"	"tinyint"	8	0	1	2
3404	496	"res_0"	"decimal"	9	0	0	0
3405	496	"arg_1"	"decimal"	9	0	1	1
3406	496	"arg_2"	"tinyint"	8	0	1	2
3407	497	"res_0"	"decimal"	18	0	0	0
3408	497	"arg_1"	"decimal"	18	0	1	1
3409	497	"arg_2"	"tinyint"	8	0	1	2
3410	498	"res_0"	"decimal"	39	0	0	0
3411	498	"arg_1"	"decimal"	39	0	1	1
3412	498	"arg_2"	"tinyint"	8	0	1	2
3413	499	"res_0"	"real"	24	0	0	0
3414	499	"arg_1"	"real"	24	0	1	1
3415	499	"arg_2"	"tinyint"	8	0	1	2
3416	500	"res_0"	"double"	53	0	0	0
3417	500	"arg_1"	"double"	53	0	1	1
3418	500	"arg_2"	"tinyint"	8	0	1	2
3419	501	"res_0"	"tinyint"	8	0	0	0
3420	501	"arg_1"	"tinyint"	8	0	1	1
3421	501	"arg_2"	"tinyint"	8	0	1	2
3422	502	"res_0"	"tinyint"	8	0	0	0
3423	502	"arg_1"	"smallint"	16	0	1	1
3424	502	"arg_2"	"tinyint"	8	0	1	2
3425	503	"res_0"	"tinyint"	8	0	0	0
3426	503	"arg_1"	"int"	32	0	1	1
3427	503	"arg_2"	"tinyint"	8	0	1	2
3428	504	"res_0"	"tinyint"	8	0	0	0
3429	504	"arg_1"	"bigint"	64	0	1	1
3430	504	"arg_2"	"tinyint"	8	0	1	2
3431	505	"res_0"	"tinyint"	8	0	0	0
3432	505	"arg_1"	"oid"	63	0	1	1
3433	505	"arg_2"	"tinyint"	8	0	1	2
3434	506	"res_0"	"tinyint"	8	0	0	0
3435	506	"arg_1"	"wrd"	64	0	1	1
3436	506	"arg_2"	"tinyint"	8	0	1	2
3437	507	"res_0"	"tinyint"	8	0	0	0
3438	507	"arg_1"	"hugeint"	128	0	1	1
3439	507	"arg_2"	"tinyint"	8	0	1	2
3440	508	"res_0"	"tinyint"	8	0	0	0
3441	508	"arg_1"	"decimal"	2	0	1	1
3442	508	"arg_2"	"tinyint"	8	0	1	2
3443	509	"res_0"	"tinyint"	8	0	0	0
3444	509	"arg_1"	"decimal"	4	0	1	1
3445	509	"arg_2"	"tinyint"	8	0	1	2
3446	510	"res_0"	"tinyint"	8	0	0	0
3447	510	"arg_1"	"decimal"	9	0	1	1
3448	510	"arg_2"	"tinyint"	8	0	1	2
3449	511	"res_0"	"tinyint"	8	0	0	0
3450	511	"arg_1"	"decimal"	18	0	1	1
3451	511	"arg_2"	"tinyint"	8	0	1	2
3452	512	"res_0"	"tinyint"	8	0	0	0
3453	512	"arg_1"	"decimal"	39	0	1	1
3454	512	"arg_2"	"tinyint"	8	0	1	2
3455	513	"res_0"	"tinyint"	8	0	0	0
3456	513	"arg_1"	"real"	24	0	1	1
3457	513	"arg_2"	"tinyint"	8	0	1	2
3458	514	"res_0"	"tinyint"	8	0	0	0
3459	514	"arg_1"	"double"	53	0	1	1
3460	514	"arg_2"	"tinyint"	8	0	1	2
3461	515	"res_0"	"tinyint"	8	0	0	0
3462	515	"arg_1"	"month_interval"	32	0	1	1
3463	515	"arg_2"	"tinyint"	8	0	1	2
3464	516	"res_0"	"tinyint"	8	0	0	0
3465	516	"arg_1"	"sec_interval"	19	0	1	1
3466	516	"arg_2"	"tinyint"	8	0	1	2
3467	517	"res_0"	"tinyint"	8	0	0	0
3468	517	"arg_1"	"time"	7	0	1	1
3469	517	"arg_2"	"tinyint"	8	0	1	2
3470	518	"res_0"	"tinyint"	8	0	0	0
3471	518	"arg_1"	"timetz"	7	0	1	1
3472	518	"arg_2"	"tinyint"	8	0	1	2
3473	519	"res_0"	"tinyint"	8	0	0	0
3474	519	"arg_1"	"date"	0	0	1	1
3475	519	"arg_2"	"tinyint"	8	0	1	2
3476	520	"res_0"	"tinyint"	8	0	0	0
3477	520	"arg_1"	"timestamp"	7	0	1	1
3478	520	"arg_2"	"tinyint"	8	0	1	2
3479	521	"res_0"	"tinyint"	8	0	0	0
3480	521	"arg_1"	"timestamptz"	7	0	1	1
3481	521	"arg_2"	"tinyint"	8	0	1	2
3482	522	"res_0"	"tinyint"	8	0	0	0
3483	522	"arg_1"	"blob"	0	0	1	1
3484	522	"arg_2"	"tinyint"	8	0	1	2
3485	523	"res_0"	"smallint"	16	0	0	0
3486	523	"arg_1"	"tinyint"	8	0	1	1
3487	523	"arg_2"	"smallint"	16	0	1	2
3488	524	"res_0"	"smallint"	16	0	0	0
3489	524	"arg_1"	"smallint"	16	0	1	1
3490	524	"arg_2"	"smallint"	16	0	1	2
3491	525	"res_0"	"smallint"	16	0	0	0
3492	525	"arg_1"	"int"	32	0	1	1
3493	525	"arg_2"	"smallint"	16	0	1	2
3494	526	"res_0"	"smallint"	16	0	0	0
3495	526	"arg_1"	"bigint"	64	0	1	1
3496	526	"arg_2"	"smallint"	16	0	1	2
3497	527	"res_0"	"smallint"	16	0	0	0
3498	527	"arg_1"	"oid"	63	0	1	1
3499	527	"arg_2"	"smallint"	16	0	1	2
3500	528	"res_0"	"smallint"	16	0	0	0
3501	528	"arg_1"	"wrd"	64	0	1	1
3502	528	"arg_2"	"smallint"	16	0	1	2
3503	529	"res_0"	"smallint"	16	0	0	0
3504	529	"arg_1"	"hugeint"	128	0	1	1
3505	529	"arg_2"	"smallint"	16	0	1	2
3506	530	"res_0"	"smallint"	16	0	0	0
3507	530	"arg_1"	"decimal"	2	0	1	1
3508	530	"arg_2"	"smallint"	16	0	1	2
3509	531	"res_0"	"smallint"	16	0	0	0
3510	531	"arg_1"	"decimal"	4	0	1	1
3511	531	"arg_2"	"smallint"	16	0	1	2
3512	532	"res_0"	"smallint"	16	0	0	0
3513	532	"arg_1"	"decimal"	9	0	1	1
3514	532	"arg_2"	"smallint"	16	0	1	2
3515	533	"res_0"	"smallint"	16	0	0	0
3516	533	"arg_1"	"decimal"	18	0	1	1
3517	533	"arg_2"	"smallint"	16	0	1	2
3518	534	"res_0"	"smallint"	16	0	0	0
3519	534	"arg_1"	"decimal"	39	0	1	1
3520	534	"arg_2"	"smallint"	16	0	1	2
3521	535	"res_0"	"smallint"	16	0	0	0
3522	535	"arg_1"	"real"	24	0	1	1
3523	535	"arg_2"	"smallint"	16	0	1	2
3524	536	"res_0"	"smallint"	16	0	0	0
3525	536	"arg_1"	"double"	53	0	1	1
3526	536	"arg_2"	"smallint"	16	0	1	2
3527	537	"res_0"	"smallint"	16	0	0	0
3528	537	"arg_1"	"month_interval"	32	0	1	1
3529	537	"arg_2"	"smallint"	16	0	1	2
3530	538	"res_0"	"smallint"	16	0	0	0
3531	538	"arg_1"	"sec_interval"	19	0	1	1
3532	538	"arg_2"	"smallint"	16	0	1	2
3533	539	"res_0"	"smallint"	16	0	0	0
3534	539	"arg_1"	"time"	7	0	1	1
3535	539	"arg_2"	"smallint"	16	0	1	2
3536	540	"res_0"	"smallint"	16	0	0	0
3537	540	"arg_1"	"timetz"	7	0	1	1
3538	540	"arg_2"	"smallint"	16	0	1	2
3539	541	"res_0"	"smallint"	16	0	0	0
3540	541	"arg_1"	"date"	0	0	1	1
3541	541	"arg_2"	"smallint"	16	0	1	2
3542	542	"res_0"	"smallint"	16	0	0	0
3543	542	"arg_1"	"timestamp"	7	0	1	1
3544	542	"arg_2"	"smallint"	16	0	1	2
3545	543	"res_0"	"smallint"	16	0	0	0
3546	543	"arg_1"	"timestamptz"	7	0	1	1
3547	543	"arg_2"	"smallint"	16	0	1	2
3548	544	"res_0"	"smallint"	16	0	0	0
3549	544	"arg_1"	"blob"	0	0	1	1
3550	544	"arg_2"	"smallint"	16	0	1	2
3551	545	"res_0"	"int"	32	0	0	0
3552	545	"arg_1"	"tinyint"	8	0	1	1
3553	545	"arg_2"	"int"	32	0	1	2
3554	546	"res_0"	"int"	32	0	0	0
3555	546	"arg_1"	"smallint"	16	0	1	1
3556	546	"arg_2"	"int"	32	0	1	2
3557	547	"res_0"	"int"	32	0	0	0
3558	547	"arg_1"	"int"	32	0	1	1
3559	547	"arg_2"	"int"	32	0	1	2
3560	548	"res_0"	"int"	32	0	0	0
3561	548	"arg_1"	"bigint"	64	0	1	1
3562	548	"arg_2"	"int"	32	0	1	2
3563	549	"res_0"	"int"	32	0	0	0
3564	549	"arg_1"	"oid"	63	0	1	1
3565	549	"arg_2"	"int"	32	0	1	2
3566	550	"res_0"	"int"	32	0	0	0
3567	550	"arg_1"	"wrd"	64	0	1	1
3568	550	"arg_2"	"int"	32	0	1	2
3569	551	"res_0"	"int"	32	0	0	0
3570	551	"arg_1"	"hugeint"	128	0	1	1
3571	551	"arg_2"	"int"	32	0	1	2
3572	552	"res_0"	"int"	32	0	0	0
3573	552	"arg_1"	"decimal"	2	0	1	1
3574	552	"arg_2"	"int"	32	0	1	2
3575	553	"res_0"	"int"	32	0	0	0
3576	553	"arg_1"	"decimal"	4	0	1	1
3577	553	"arg_2"	"int"	32	0	1	2
3578	554	"res_0"	"int"	32	0	0	0
3579	554	"arg_1"	"decimal"	9	0	1	1
3580	554	"arg_2"	"int"	32	0	1	2
3581	555	"res_0"	"int"	32	0	0	0
3582	555	"arg_1"	"decimal"	18	0	1	1
3583	555	"arg_2"	"int"	32	0	1	2
3584	556	"res_0"	"int"	32	0	0	0
3585	556	"arg_1"	"decimal"	39	0	1	1
3586	556	"arg_2"	"int"	32	0	1	2
3587	557	"res_0"	"int"	32	0	0	0
3588	557	"arg_1"	"real"	24	0	1	1
3589	557	"arg_2"	"int"	32	0	1	2
3590	558	"res_0"	"int"	32	0	0	0
3591	558	"arg_1"	"double"	53	0	1	1
3592	558	"arg_2"	"int"	32	0	1	2
3593	559	"res_0"	"int"	32	0	0	0
3594	559	"arg_1"	"month_interval"	32	0	1	1
3595	559	"arg_2"	"int"	32	0	1	2
3596	560	"res_0"	"int"	32	0	0	0
3597	560	"arg_1"	"sec_interval"	19	0	1	1
3598	560	"arg_2"	"int"	32	0	1	2
3599	561	"res_0"	"int"	32	0	0	0
3600	561	"arg_1"	"time"	7	0	1	1
3601	561	"arg_2"	"int"	32	0	1	2
3602	562	"res_0"	"int"	32	0	0	0
3603	562	"arg_1"	"timetz"	7	0	1	1
3604	562	"arg_2"	"int"	32	0	1	2
3605	563	"res_0"	"int"	32	0	0	0
3606	563	"arg_1"	"date"	0	0	1	1
3607	563	"arg_2"	"int"	32	0	1	2
3608	564	"res_0"	"int"	32	0	0	0
3609	564	"arg_1"	"timestamp"	7	0	1	1
3610	564	"arg_2"	"int"	32	0	1	2
3611	565	"res_0"	"int"	32	0	0	0
3612	565	"arg_1"	"timestamptz"	7	0	1	1
3613	565	"arg_2"	"int"	32	0	1	2
3614	566	"res_0"	"int"	32	0	0	0
3615	566	"arg_1"	"blob"	0	0	1	1
3616	566	"arg_2"	"int"	32	0	1	2
3617	567	"res_0"	"bigint"	64	0	0	0
3618	567	"arg_1"	"tinyint"	8	0	1	1
3619	567	"arg_2"	"bigint"	64	0	1	2
3620	568	"res_0"	"bigint"	64	0	0	0
3621	568	"arg_1"	"smallint"	16	0	1	1
3622	568	"arg_2"	"bigint"	64	0	1	2
3623	569	"res_0"	"bigint"	64	0	0	0
3624	569	"arg_1"	"int"	32	0	1	1
3625	569	"arg_2"	"bigint"	64	0	1	2
3626	570	"res_0"	"bigint"	64	0	0	0
3627	570	"arg_1"	"bigint"	64	0	1	1
3628	570	"arg_2"	"bigint"	64	0	1	2
3629	571	"res_0"	"bigint"	64	0	0	0
3630	571	"arg_1"	"oid"	63	0	1	1
3631	571	"arg_2"	"bigint"	64	0	1	2
3632	572	"res_0"	"bigint"	64	0	0	0
3633	572	"arg_1"	"wrd"	64	0	1	1
3634	572	"arg_2"	"bigint"	64	0	1	2
3635	573	"res_0"	"bigint"	64	0	0	0
3636	573	"arg_1"	"hugeint"	128	0	1	1
3637	573	"arg_2"	"bigint"	64	0	1	2
3638	574	"res_0"	"bigint"	64	0	0	0
3639	574	"arg_1"	"decimal"	2	0	1	1
3640	574	"arg_2"	"bigint"	64	0	1	2
3641	575	"res_0"	"bigint"	64	0	0	0
3642	575	"arg_1"	"decimal"	4	0	1	1
3643	575	"arg_2"	"bigint"	64	0	1	2
3644	576	"res_0"	"bigint"	64	0	0	0
3645	576	"arg_1"	"decimal"	9	0	1	1
3646	576	"arg_2"	"bigint"	64	0	1	2
3647	577	"res_0"	"bigint"	64	0	0	0
3648	577	"arg_1"	"decimal"	18	0	1	1
3649	577	"arg_2"	"bigint"	64	0	1	2
3650	578	"res_0"	"bigint"	64	0	0	0
3651	578	"arg_1"	"decimal"	39	0	1	1
3652	578	"arg_2"	"bigint"	64	0	1	2
3653	579	"res_0"	"bigint"	64	0	0	0
3654	579	"arg_1"	"real"	24	0	1	1
3655	579	"arg_2"	"bigint"	64	0	1	2
3656	580	"res_0"	"bigint"	64	0	0	0
3657	580	"arg_1"	"double"	53	0	1	1
3658	580	"arg_2"	"bigint"	64	0	1	2
3659	581	"res_0"	"bigint"	64	0	0	0
3660	581	"arg_1"	"month_interval"	32	0	1	1
3661	581	"arg_2"	"bigint"	64	0	1	2
3662	582	"res_0"	"bigint"	64	0	0	0
3663	582	"arg_1"	"sec_interval"	19	0	1	1
3664	582	"arg_2"	"bigint"	64	0	1	2
3665	583	"res_0"	"bigint"	64	0	0	0
3666	583	"arg_1"	"time"	7	0	1	1
3667	583	"arg_2"	"bigint"	64	0	1	2
3668	584	"res_0"	"bigint"	64	0	0	0
3669	584	"arg_1"	"timetz"	7	0	1	1
3670	584	"arg_2"	"bigint"	64	0	1	2
3671	585	"res_0"	"bigint"	64	0	0	0
3672	585	"arg_1"	"date"	0	0	1	1
3673	585	"arg_2"	"bigint"	64	0	1	2
3674	586	"res_0"	"bigint"	64	0	0	0
3675	586	"arg_1"	"timestamp"	7	0	1	1
3676	586	"arg_2"	"bigint"	64	0	1	2
3677	587	"res_0"	"bigint"	64	0	0	0
3678	587	"arg_1"	"timestamptz"	7	0	1	1
3679	587	"arg_2"	"bigint"	64	0	1	2
3680	588	"res_0"	"bigint"	64	0	0	0
3681	588	"arg_1"	"blob"	0	0	1	1
3682	588	"arg_2"	"bigint"	64	0	1	2
3683	589	"res_0"	"oid"	63	0	0	0
3684	589	"arg_1"	"tinyint"	8	0	1	1
3685	589	"arg_2"	"oid"	63	0	1	2
3686	590	"res_0"	"oid"	63	0	0	0
3687	590	"arg_1"	"smallint"	16	0	1	1
3688	590	"arg_2"	"oid"	63	0	1	2
3689	591	"res_0"	"oid"	63	0	0	0
3690	591	"arg_1"	"int"	32	0	1	1
3691	591	"arg_2"	"oid"	63	0	1	2
3692	592	"res_0"	"oid"	63	0	0	0
3693	592	"arg_1"	"bigint"	64	0	1	1
3694	592	"arg_2"	"oid"	63	0	1	2
3695	593	"res_0"	"oid"	63	0	0	0
3696	593	"arg_1"	"oid"	63	0	1	1
3697	593	"arg_2"	"oid"	63	0	1	2
3698	594	"res_0"	"oid"	63	0	0	0
3699	594	"arg_1"	"wrd"	64	0	1	1
3700	594	"arg_2"	"oid"	63	0	1	2
3701	595	"res_0"	"oid"	63	0	0	0
3702	595	"arg_1"	"hugeint"	128	0	1	1
3703	595	"arg_2"	"oid"	63	0	1	2
3704	596	"res_0"	"oid"	63	0	0	0
3705	596	"arg_1"	"decimal"	2	0	1	1
3706	596	"arg_2"	"oid"	63	0	1	2
3707	597	"res_0"	"oid"	63	0	0	0
3708	597	"arg_1"	"decimal"	4	0	1	1
3709	597	"arg_2"	"oid"	63	0	1	2
3710	598	"res_0"	"oid"	63	0	0	0
3711	598	"arg_1"	"decimal"	9	0	1	1
3712	598	"arg_2"	"oid"	63	0	1	2
3713	599	"res_0"	"oid"	63	0	0	0
3714	599	"arg_1"	"decimal"	18	0	1	1
3715	599	"arg_2"	"oid"	63	0	1	2
3716	600	"res_0"	"oid"	63	0	0	0
3717	600	"arg_1"	"decimal"	39	0	1	1
3718	600	"arg_2"	"oid"	63	0	1	2
3719	601	"res_0"	"oid"	63	0	0	0
3720	601	"arg_1"	"real"	24	0	1	1
3721	601	"arg_2"	"oid"	63	0	1	2
3722	602	"res_0"	"oid"	63	0	0	0
3723	602	"arg_1"	"double"	53	0	1	1
3724	602	"arg_2"	"oid"	63	0	1	2
3725	603	"res_0"	"oid"	63	0	0	0
3726	603	"arg_1"	"month_interval"	32	0	1	1
3727	603	"arg_2"	"oid"	63	0	1	2
3728	604	"res_0"	"oid"	63	0	0	0
3729	604	"arg_1"	"sec_interval"	19	0	1	1
3730	604	"arg_2"	"oid"	63	0	1	2
3731	605	"res_0"	"oid"	63	0	0	0
3732	605	"arg_1"	"time"	7	0	1	1
3733	605	"arg_2"	"oid"	63	0	1	2
3734	606	"res_0"	"oid"	63	0	0	0
3735	606	"arg_1"	"timetz"	7	0	1	1
3736	606	"arg_2"	"oid"	63	0	1	2
3737	607	"res_0"	"oid"	63	0	0	0
3738	607	"arg_1"	"date"	0	0	1	1
3739	607	"arg_2"	"oid"	63	0	1	2
3740	608	"res_0"	"oid"	63	0	0	0
3741	608	"arg_1"	"timestamp"	7	0	1	1
3742	608	"arg_2"	"oid"	63	0	1	2
3743	609	"res_0"	"oid"	63	0	0	0
3744	609	"arg_1"	"timestamptz"	7	0	1	1
3745	609	"arg_2"	"oid"	63	0	1	2
3746	610	"res_0"	"oid"	63	0	0	0
3747	610	"arg_1"	"blob"	0	0	1	1
3748	610	"arg_2"	"oid"	63	0	1	2
3749	611	"res_0"	"wrd"	64	0	0	0
3750	611	"arg_1"	"tinyint"	8	0	1	1
3751	611	"arg_2"	"wrd"	64	0	1	2
3752	612	"res_0"	"wrd"	64	0	0	0
3753	612	"arg_1"	"smallint"	16	0	1	1
3754	612	"arg_2"	"wrd"	64	0	1	2
3755	613	"res_0"	"wrd"	64	0	0	0
3756	613	"arg_1"	"int"	32	0	1	1
3757	613	"arg_2"	"wrd"	64	0	1	2
3758	614	"res_0"	"wrd"	64	0	0	0
3759	614	"arg_1"	"bigint"	64	0	1	1
3760	614	"arg_2"	"wrd"	64	0	1	2
3761	615	"res_0"	"wrd"	64	0	0	0
3762	615	"arg_1"	"oid"	63	0	1	1
3763	615	"arg_2"	"wrd"	64	0	1	2
3764	616	"res_0"	"wrd"	64	0	0	0
3765	616	"arg_1"	"wrd"	64	0	1	1
3766	616	"arg_2"	"wrd"	64	0	1	2
3767	617	"res_0"	"wrd"	64	0	0	0
3768	617	"arg_1"	"hugeint"	128	0	1	1
3769	617	"arg_2"	"wrd"	64	0	1	2
3770	618	"res_0"	"wrd"	64	0	0	0
3771	618	"arg_1"	"decimal"	2	0	1	1
3772	618	"arg_2"	"wrd"	64	0	1	2
3773	619	"res_0"	"wrd"	64	0	0	0
3774	619	"arg_1"	"decimal"	4	0	1	1
3775	619	"arg_2"	"wrd"	64	0	1	2
3776	620	"res_0"	"wrd"	64	0	0	0
3777	620	"arg_1"	"decimal"	9	0	1	1
3778	620	"arg_2"	"wrd"	64	0	1	2
3779	621	"res_0"	"wrd"	64	0	0	0
3780	621	"arg_1"	"decimal"	18	0	1	1
3781	621	"arg_2"	"wrd"	64	0	1	2
3782	622	"res_0"	"wrd"	64	0	0	0
3783	622	"arg_1"	"decimal"	39	0	1	1
3784	622	"arg_2"	"wrd"	64	0	1	2
3785	623	"res_0"	"wrd"	64	0	0	0
3786	623	"arg_1"	"real"	24	0	1	1
3787	623	"arg_2"	"wrd"	64	0	1	2
3788	624	"res_0"	"wrd"	64	0	0	0
3789	624	"arg_1"	"double"	53	0	1	1
3790	624	"arg_2"	"wrd"	64	0	1	2
3791	625	"res_0"	"wrd"	64	0	0	0
3792	625	"arg_1"	"month_interval"	32	0	1	1
3793	625	"arg_2"	"wrd"	64	0	1	2
3794	626	"res_0"	"wrd"	64	0	0	0
3795	626	"arg_1"	"sec_interval"	19	0	1	1
3796	626	"arg_2"	"wrd"	64	0	1	2
3797	627	"res_0"	"wrd"	64	0	0	0
3798	627	"arg_1"	"time"	7	0	1	1
3799	627	"arg_2"	"wrd"	64	0	1	2
3800	628	"res_0"	"wrd"	64	0	0	0
3801	628	"arg_1"	"timetz"	7	0	1	1
3802	628	"arg_2"	"wrd"	64	0	1	2
3803	629	"res_0"	"wrd"	64	0	0	0
3804	629	"arg_1"	"date"	0	0	1	1
3805	629	"arg_2"	"wrd"	64	0	1	2
3806	630	"res_0"	"wrd"	64	0	0	0
3807	630	"arg_1"	"timestamp"	7	0	1	1
3808	630	"arg_2"	"wrd"	64	0	1	2
3809	631	"res_0"	"wrd"	64	0	0	0
3810	631	"arg_1"	"timestamptz"	7	0	1	1
3811	631	"arg_2"	"wrd"	64	0	1	2
3812	632	"res_0"	"wrd"	64	0	0	0
3813	632	"arg_1"	"blob"	0	0	1	1
3814	632	"arg_2"	"wrd"	64	0	1	2
3815	633	"res_0"	"hugeint"	128	0	0	0
3816	633	"arg_1"	"tinyint"	8	0	1	1
3817	633	"arg_2"	"hugeint"	128	0	1	2
3818	634	"res_0"	"hugeint"	128	0	0	0
3819	634	"arg_1"	"smallint"	16	0	1	1
3820	634	"arg_2"	"hugeint"	128	0	1	2
3821	635	"res_0"	"hugeint"	128	0	0	0
3822	635	"arg_1"	"int"	32	0	1	1
3823	635	"arg_2"	"hugeint"	128	0	1	2
3824	636	"res_0"	"hugeint"	128	0	0	0
3825	636	"arg_1"	"bigint"	64	0	1	1
3826	636	"arg_2"	"hugeint"	128	0	1	2
3827	637	"res_0"	"hugeint"	128	0	0	0
3828	637	"arg_1"	"oid"	63	0	1	1
3829	637	"arg_2"	"hugeint"	128	0	1	2
3830	638	"res_0"	"hugeint"	128	0	0	0
3831	638	"arg_1"	"wrd"	64	0	1	1
3832	638	"arg_2"	"hugeint"	128	0	1	2
3833	639	"res_0"	"hugeint"	128	0	0	0
3834	639	"arg_1"	"hugeint"	128	0	1	1
3835	639	"arg_2"	"hugeint"	128	0	1	2
3836	640	"res_0"	"hugeint"	128	0	0	0
3837	640	"arg_1"	"decimal"	2	0	1	1
3838	640	"arg_2"	"hugeint"	128	0	1	2
3839	641	"res_0"	"hugeint"	128	0	0	0
3840	641	"arg_1"	"decimal"	4	0	1	1
3841	641	"arg_2"	"hugeint"	128	0	1	2
3842	642	"res_0"	"hugeint"	128	0	0	0
3843	642	"arg_1"	"decimal"	9	0	1	1
3844	642	"arg_2"	"hugeint"	128	0	1	2
3845	643	"res_0"	"hugeint"	128	0	0	0
3846	643	"arg_1"	"decimal"	18	0	1	1
3847	643	"arg_2"	"hugeint"	128	0	1	2
3848	644	"res_0"	"hugeint"	128	0	0	0
3849	644	"arg_1"	"decimal"	39	0	1	1
3850	644	"arg_2"	"hugeint"	128	0	1	2
3851	645	"res_0"	"hugeint"	128	0	0	0
3852	645	"arg_1"	"real"	24	0	1	1
3853	645	"arg_2"	"hugeint"	128	0	1	2
3854	646	"res_0"	"hugeint"	128	0	0	0
3855	646	"arg_1"	"double"	53	0	1	1
3856	646	"arg_2"	"hugeint"	128	0	1	2
3857	647	"res_0"	"hugeint"	128	0	0	0
3858	647	"arg_1"	"month_interval"	32	0	1	1
3859	647	"arg_2"	"hugeint"	128	0	1	2
3860	648	"res_0"	"hugeint"	128	0	0	0
3861	648	"arg_1"	"sec_interval"	19	0	1	1
3862	648	"arg_2"	"hugeint"	128	0	1	2
3863	649	"res_0"	"hugeint"	128	0	0	0
3864	649	"arg_1"	"time"	7	0	1	1
3865	649	"arg_2"	"hugeint"	128	0	1	2
3866	650	"res_0"	"hugeint"	128	0	0	0
3867	650	"arg_1"	"timetz"	7	0	1	1
3868	650	"arg_2"	"hugeint"	128	0	1	2
3869	651	"res_0"	"hugeint"	128	0	0	0
3870	651	"arg_1"	"date"	0	0	1	1
3871	651	"arg_2"	"hugeint"	128	0	1	2
3872	652	"res_0"	"hugeint"	128	0	0	0
3873	652	"arg_1"	"timestamp"	7	0	1	1
3874	652	"arg_2"	"hugeint"	128	0	1	2
3875	653	"res_0"	"hugeint"	128	0	0	0
3876	653	"arg_1"	"timestamptz"	7	0	1	1
3877	653	"arg_2"	"hugeint"	128	0	1	2
3878	654	"res_0"	"hugeint"	128	0	0	0
3879	654	"arg_1"	"blob"	0	0	1	1
3880	654	"arg_2"	"hugeint"	128	0	1	2
3881	655	"res_0"	"decimal"	2	0	0	0
3882	655	"arg_1"	"tinyint"	8	0	1	1
3883	655	"arg_2"	"decimal"	2	0	1	2
3884	656	"res_0"	"decimal"	2	0	0	0
3885	656	"arg_1"	"smallint"	16	0	1	1
3886	656	"arg_2"	"decimal"	2	0	1	2
3887	657	"res_0"	"decimal"	2	0	0	0
3888	657	"arg_1"	"int"	32	0	1	1
3889	657	"arg_2"	"decimal"	2	0	1	2
3890	658	"res_0"	"decimal"	2	0	0	0
3891	658	"arg_1"	"bigint"	64	0	1	1
3892	658	"arg_2"	"decimal"	2	0	1	2
3893	659	"res_0"	"decimal"	2	0	0	0
3894	659	"arg_1"	"oid"	63	0	1	1
3895	659	"arg_2"	"decimal"	2	0	1	2
3896	660	"res_0"	"decimal"	2	0	0	0
3897	660	"arg_1"	"wrd"	64	0	1	1
3898	660	"arg_2"	"decimal"	2	0	1	2
3899	661	"res_0"	"decimal"	2	0	0	0
3900	661	"arg_1"	"hugeint"	128	0	1	1
3901	661	"arg_2"	"decimal"	2	0	1	2
3902	662	"res_0"	"decimal"	2	0	0	0
3903	662	"arg_1"	"decimal"	2	0	1	1
3904	662	"arg_2"	"decimal"	2	0	1	2
3905	663	"res_0"	"decimal"	2	0	0	0
3906	663	"arg_1"	"decimal"	4	0	1	1
3907	663	"arg_2"	"decimal"	2	0	1	2
3908	664	"res_0"	"decimal"	2	0	0	0
3909	664	"arg_1"	"decimal"	9	0	1	1
3910	664	"arg_2"	"decimal"	2	0	1	2
3911	665	"res_0"	"decimal"	2	0	0	0
3912	665	"arg_1"	"decimal"	18	0	1	1
3913	665	"arg_2"	"decimal"	2	0	1	2
3914	666	"res_0"	"decimal"	2	0	0	0
3915	666	"arg_1"	"decimal"	39	0	1	1
3916	666	"arg_2"	"decimal"	2	0	1	2
3917	667	"res_0"	"decimal"	2	0	0	0
3918	667	"arg_1"	"real"	24	0	1	1
3919	667	"arg_2"	"decimal"	2	0	1	2
3920	668	"res_0"	"decimal"	2	0	0	0
3921	668	"arg_1"	"double"	53	0	1	1
3922	668	"arg_2"	"decimal"	2	0	1	2
3923	669	"res_0"	"decimal"	2	0	0	0
3924	669	"arg_1"	"month_interval"	32	0	1	1
3925	669	"arg_2"	"decimal"	2	0	1	2
3926	670	"res_0"	"decimal"	2	0	0	0
3927	670	"arg_1"	"sec_interval"	19	0	1	1
3928	670	"arg_2"	"decimal"	2	0	1	2
3929	671	"res_0"	"decimal"	2	0	0	0
3930	671	"arg_1"	"time"	7	0	1	1
3931	671	"arg_2"	"decimal"	2	0	1	2
3932	672	"res_0"	"decimal"	2	0	0	0
3933	672	"arg_1"	"timetz"	7	0	1	1
3934	672	"arg_2"	"decimal"	2	0	1	2
3935	673	"res_0"	"decimal"	2	0	0	0
3936	673	"arg_1"	"date"	0	0	1	1
3937	673	"arg_2"	"decimal"	2	0	1	2
3938	674	"res_0"	"decimal"	2	0	0	0
3939	674	"arg_1"	"timestamp"	7	0	1	1
3940	674	"arg_2"	"decimal"	2	0	1	2
3941	675	"res_0"	"decimal"	2	0	0	0
3942	675	"arg_1"	"timestamptz"	7	0	1	1
3943	675	"arg_2"	"decimal"	2	0	1	2
3944	676	"res_0"	"decimal"	2	0	0	0
3945	676	"arg_1"	"blob"	0	0	1	1
3946	676	"arg_2"	"decimal"	2	0	1	2
3947	677	"res_0"	"decimal"	4	0	0	0
3948	677	"arg_1"	"tinyint"	8	0	1	1
3949	677	"arg_2"	"decimal"	4	0	1	2
3950	678	"res_0"	"decimal"	4	0	0	0
3951	678	"arg_1"	"smallint"	16	0	1	1
3952	678	"arg_2"	"decimal"	4	0	1	2
3953	679	"res_0"	"decimal"	4	0	0	0
3954	679	"arg_1"	"int"	32	0	1	1
3955	679	"arg_2"	"decimal"	4	0	1	2
3956	680	"res_0"	"decimal"	4	0	0	0
3957	680	"arg_1"	"bigint"	64	0	1	1
3958	680	"arg_2"	"decimal"	4	0	1	2
3959	681	"res_0"	"decimal"	4	0	0	0
3960	681	"arg_1"	"oid"	63	0	1	1
3961	681	"arg_2"	"decimal"	4	0	1	2
3962	682	"res_0"	"decimal"	4	0	0	0
3963	682	"arg_1"	"wrd"	64	0	1	1
3964	682	"arg_2"	"decimal"	4	0	1	2
3965	683	"res_0"	"decimal"	4	0	0	0
3966	683	"arg_1"	"hugeint"	128	0	1	1
3967	683	"arg_2"	"decimal"	4	0	1	2
3968	684	"res_0"	"decimal"	4	0	0	0
3969	684	"arg_1"	"decimal"	2	0	1	1
3970	684	"arg_2"	"decimal"	4	0	1	2
3971	685	"res_0"	"decimal"	4	0	0	0
3972	685	"arg_1"	"decimal"	4	0	1	1
3973	685	"arg_2"	"decimal"	4	0	1	2
3974	686	"res_0"	"decimal"	4	0	0	0
3975	686	"arg_1"	"decimal"	9	0	1	1
3976	686	"arg_2"	"decimal"	4	0	1	2
3977	687	"res_0"	"decimal"	4	0	0	0
3978	687	"arg_1"	"decimal"	18	0	1	1
3979	687	"arg_2"	"decimal"	4	0	1	2
3980	688	"res_0"	"decimal"	4	0	0	0
3981	688	"arg_1"	"decimal"	39	0	1	1
3982	688	"arg_2"	"decimal"	4	0	1	2
3983	689	"res_0"	"decimal"	4	0	0	0
3984	689	"arg_1"	"real"	24	0	1	1
3985	689	"arg_2"	"decimal"	4	0	1	2
3986	690	"res_0"	"decimal"	4	0	0	0
3987	690	"arg_1"	"double"	53	0	1	1
3988	690	"arg_2"	"decimal"	4	0	1	2
3989	691	"res_0"	"decimal"	4	0	0	0
3990	691	"arg_1"	"month_interval"	32	0	1	1
3991	691	"arg_2"	"decimal"	4	0	1	2
3992	692	"res_0"	"decimal"	4	0	0	0
3993	692	"arg_1"	"sec_interval"	19	0	1	1
3994	692	"arg_2"	"decimal"	4	0	1	2
3995	693	"res_0"	"decimal"	4	0	0	0
3996	693	"arg_1"	"time"	7	0	1	1
3997	693	"arg_2"	"decimal"	4	0	1	2
3998	694	"res_0"	"decimal"	4	0	0	0
3999	694	"arg_1"	"timetz"	7	0	1	1
4000	694	"arg_2"	"decimal"	4	0	1	2
4001	695	"res_0"	"decimal"	4	0	0	0
4002	695	"arg_1"	"date"	0	0	1	1
4003	695	"arg_2"	"decimal"	4	0	1	2
4004	696	"res_0"	"decimal"	4	0	0	0
4005	696	"arg_1"	"timestamp"	7	0	1	1
4006	696	"arg_2"	"decimal"	4	0	1	2
4007	697	"res_0"	"decimal"	4	0	0	0
4008	697	"arg_1"	"timestamptz"	7	0	1	1
4009	697	"arg_2"	"decimal"	4	0	1	2
4010	698	"res_0"	"decimal"	4	0	0	0
4011	698	"arg_1"	"blob"	0	0	1	1
4012	698	"arg_2"	"decimal"	4	0	1	2
4013	699	"res_0"	"decimal"	9	0	0	0
4014	699	"arg_1"	"tinyint"	8	0	1	1
4015	699	"arg_2"	"decimal"	9	0	1	2
4016	700	"res_0"	"decimal"	9	0	0	0
4017	700	"arg_1"	"smallint"	16	0	1	1
4018	700	"arg_2"	"decimal"	9	0	1	2
4019	701	"res_0"	"decimal"	9	0	0	0
4020	701	"arg_1"	"int"	32	0	1	1
4021	701	"arg_2"	"decimal"	9	0	1	2
4022	702	"res_0"	"decimal"	9	0	0	0
4023	702	"arg_1"	"bigint"	64	0	1	1
4024	702	"arg_2"	"decimal"	9	0	1	2
4025	703	"res_0"	"decimal"	9	0	0	0
4026	703	"arg_1"	"oid"	63	0	1	1
4027	703	"arg_2"	"decimal"	9	0	1	2
4028	704	"res_0"	"decimal"	9	0	0	0
4029	704	"arg_1"	"wrd"	64	0	1	1
4030	704	"arg_2"	"decimal"	9	0	1	2
4031	705	"res_0"	"decimal"	9	0	0	0
4032	705	"arg_1"	"hugeint"	128	0	1	1
4033	705	"arg_2"	"decimal"	9	0	1	2
4034	706	"res_0"	"decimal"	9	0	0	0
4035	706	"arg_1"	"decimal"	2	0	1	1
4036	706	"arg_2"	"decimal"	9	0	1	2
4037	707	"res_0"	"decimal"	9	0	0	0
4038	707	"arg_1"	"decimal"	4	0	1	1
4039	707	"arg_2"	"decimal"	9	0	1	2
4040	708	"res_0"	"decimal"	9	0	0	0
4041	708	"arg_1"	"decimal"	9	0	1	1
4042	708	"arg_2"	"decimal"	9	0	1	2
4043	709	"res_0"	"decimal"	9	0	0	0
4044	709	"arg_1"	"decimal"	18	0	1	1
4045	709	"arg_2"	"decimal"	9	0	1	2
4046	710	"res_0"	"decimal"	9	0	0	0
4047	710	"arg_1"	"decimal"	39	0	1	1
4048	710	"arg_2"	"decimal"	9	0	1	2
4049	711	"res_0"	"decimal"	9	0	0	0
4050	711	"arg_1"	"real"	24	0	1	1
4051	711	"arg_2"	"decimal"	9	0	1	2
4052	712	"res_0"	"decimal"	9	0	0	0
4053	712	"arg_1"	"double"	53	0	1	1
4054	712	"arg_2"	"decimal"	9	0	1	2
4055	713	"res_0"	"decimal"	9	0	0	0
4056	713	"arg_1"	"month_interval"	32	0	1	1
4057	713	"arg_2"	"decimal"	9	0	1	2
4058	714	"res_0"	"decimal"	9	0	0	0
4059	714	"arg_1"	"sec_interval"	19	0	1	1
4060	714	"arg_2"	"decimal"	9	0	1	2
4061	715	"res_0"	"decimal"	9	0	0	0
4062	715	"arg_1"	"time"	7	0	1	1
4063	715	"arg_2"	"decimal"	9	0	1	2
4064	716	"res_0"	"decimal"	9	0	0	0
4065	716	"arg_1"	"timetz"	7	0	1	1
4066	716	"arg_2"	"decimal"	9	0	1	2
4067	717	"res_0"	"decimal"	9	0	0	0
4068	717	"arg_1"	"date"	0	0	1	1
4069	717	"arg_2"	"decimal"	9	0	1	2
4070	718	"res_0"	"decimal"	9	0	0	0
4071	718	"arg_1"	"timestamp"	7	0	1	1
4072	718	"arg_2"	"decimal"	9	0	1	2
4073	719	"res_0"	"decimal"	9	0	0	0
4074	719	"arg_1"	"timestamptz"	7	0	1	1
4075	719	"arg_2"	"decimal"	9	0	1	2
4076	720	"res_0"	"decimal"	9	0	0	0
4077	720	"arg_1"	"blob"	0	0	1	1
4078	720	"arg_2"	"decimal"	9	0	1	2
4079	721	"res_0"	"decimal"	18	0	0	0
4080	721	"arg_1"	"tinyint"	8	0	1	1
4081	721	"arg_2"	"decimal"	18	0	1	2
4082	722	"res_0"	"decimal"	18	0	0	0
4083	722	"arg_1"	"smallint"	16	0	1	1
4084	722	"arg_2"	"decimal"	18	0	1	2
4085	723	"res_0"	"decimal"	18	0	0	0
4086	723	"arg_1"	"int"	32	0	1	1
4087	723	"arg_2"	"decimal"	18	0	1	2
4088	724	"res_0"	"decimal"	18	0	0	0
4089	724	"arg_1"	"bigint"	64	0	1	1
4090	724	"arg_2"	"decimal"	18	0	1	2
4091	725	"res_0"	"decimal"	18	0	0	0
4092	725	"arg_1"	"oid"	63	0	1	1
4093	725	"arg_2"	"decimal"	18	0	1	2
4094	726	"res_0"	"decimal"	18	0	0	0
4095	726	"arg_1"	"wrd"	64	0	1	1
4096	726	"arg_2"	"decimal"	18	0	1	2
4097	727	"res_0"	"decimal"	18	0	0	0
4098	727	"arg_1"	"hugeint"	128	0	1	1
4099	727	"arg_2"	"decimal"	18	0	1	2
4100	728	"res_0"	"decimal"	18	0	0	0
4101	728	"arg_1"	"decimal"	2	0	1	1
4102	728	"arg_2"	"decimal"	18	0	1	2
4103	729	"res_0"	"decimal"	18	0	0	0
4104	729	"arg_1"	"decimal"	4	0	1	1
4105	729	"arg_2"	"decimal"	18	0	1	2
4106	730	"res_0"	"decimal"	18	0	0	0
4107	730	"arg_1"	"decimal"	9	0	1	1
4108	730	"arg_2"	"decimal"	18	0	1	2
4109	731	"res_0"	"decimal"	18	0	0	0
4110	731	"arg_1"	"decimal"	18	0	1	1
4111	731	"arg_2"	"decimal"	18	0	1	2
4112	732	"res_0"	"decimal"	18	0	0	0
4113	732	"arg_1"	"decimal"	39	0	1	1
4114	732	"arg_2"	"decimal"	18	0	1	2
4115	733	"res_0"	"decimal"	18	0	0	0
4116	733	"arg_1"	"real"	24	0	1	1
4117	733	"arg_2"	"decimal"	18	0	1	2
4118	734	"res_0"	"decimal"	18	0	0	0
4119	734	"arg_1"	"double"	53	0	1	1
4120	734	"arg_2"	"decimal"	18	0	1	2
4121	735	"res_0"	"decimal"	18	0	0	0
4122	735	"arg_1"	"month_interval"	32	0	1	1
4123	735	"arg_2"	"decimal"	18	0	1	2
4124	736	"res_0"	"decimal"	18	0	0	0
4125	736	"arg_1"	"sec_interval"	19	0	1	1
4126	736	"arg_2"	"decimal"	18	0	1	2
4127	737	"res_0"	"decimal"	18	0	0	0
4128	737	"arg_1"	"time"	7	0	1	1
4129	737	"arg_2"	"decimal"	18	0	1	2
4130	738	"res_0"	"decimal"	18	0	0	0
4131	738	"arg_1"	"timetz"	7	0	1	1
4132	738	"arg_2"	"decimal"	18	0	1	2
4133	739	"res_0"	"decimal"	18	0	0	0
4134	739	"arg_1"	"date"	0	0	1	1
4135	739	"arg_2"	"decimal"	18	0	1	2
4136	740	"res_0"	"decimal"	18	0	0	0
4137	740	"arg_1"	"timestamp"	7	0	1	1
4138	740	"arg_2"	"decimal"	18	0	1	2
4139	741	"res_0"	"decimal"	18	0	0	0
4140	741	"arg_1"	"timestamptz"	7	0	1	1
4141	741	"arg_2"	"decimal"	18	0	1	2
4142	742	"res_0"	"decimal"	18	0	0	0
4143	742	"arg_1"	"blob"	0	0	1	1
4144	742	"arg_2"	"decimal"	18	0	1	2
4145	743	"res_0"	"decimal"	39	0	0	0
4146	743	"arg_1"	"tinyint"	8	0	1	1
4147	743	"arg_2"	"decimal"	39	0	1	2
4148	744	"res_0"	"decimal"	39	0	0	0
4149	744	"arg_1"	"smallint"	16	0	1	1
4150	744	"arg_2"	"decimal"	39	0	1	2
4151	745	"res_0"	"decimal"	39	0	0	0
4152	745	"arg_1"	"int"	32	0	1	1
4153	745	"arg_2"	"decimal"	39	0	1	2
4154	746	"res_0"	"decimal"	39	0	0	0
4155	746	"arg_1"	"bigint"	64	0	1	1
4156	746	"arg_2"	"decimal"	39	0	1	2
4157	747	"res_0"	"decimal"	39	0	0	0
4158	747	"arg_1"	"oid"	63	0	1	1
4159	747	"arg_2"	"decimal"	39	0	1	2
4160	748	"res_0"	"decimal"	39	0	0	0
4161	748	"arg_1"	"wrd"	64	0	1	1
4162	748	"arg_2"	"decimal"	39	0	1	2
4163	749	"res_0"	"decimal"	39	0	0	0
4164	749	"arg_1"	"hugeint"	128	0	1	1
4165	749	"arg_2"	"decimal"	39	0	1	2
4166	750	"res_0"	"decimal"	39	0	0	0
4167	750	"arg_1"	"decimal"	2	0	1	1
4168	750	"arg_2"	"decimal"	39	0	1	2
4169	751	"res_0"	"decimal"	39	0	0	0
4170	751	"arg_1"	"decimal"	4	0	1	1
4171	751	"arg_2"	"decimal"	39	0	1	2
4172	752	"res_0"	"decimal"	39	0	0	0
4173	752	"arg_1"	"decimal"	9	0	1	1
4174	752	"arg_2"	"decimal"	39	0	1	2
4175	753	"res_0"	"decimal"	39	0	0	0
4176	753	"arg_1"	"decimal"	18	0	1	1
4177	753	"arg_2"	"decimal"	39	0	1	2
4178	754	"res_0"	"decimal"	39	0	0	0
4179	754	"arg_1"	"decimal"	39	0	1	1
4180	754	"arg_2"	"decimal"	39	0	1	2
4181	755	"res_0"	"decimal"	39	0	0	0
4182	755	"arg_1"	"real"	24	0	1	1
4183	755	"arg_2"	"decimal"	39	0	1	2
4184	756	"res_0"	"decimal"	39	0	0	0
4185	756	"arg_1"	"double"	53	0	1	1
4186	756	"arg_2"	"decimal"	39	0	1	2
4187	757	"res_0"	"decimal"	39	0	0	0
4188	757	"arg_1"	"month_interval"	32	0	1	1
4189	757	"arg_2"	"decimal"	39	0	1	2
4190	758	"res_0"	"decimal"	39	0	0	0
4191	758	"arg_1"	"sec_interval"	19	0	1	1
4192	758	"arg_2"	"decimal"	39	0	1	2
4193	759	"res_0"	"decimal"	39	0	0	0
4194	759	"arg_1"	"time"	7	0	1	1
4195	759	"arg_2"	"decimal"	39	0	1	2
4196	760	"res_0"	"decimal"	39	0	0	0
4197	760	"arg_1"	"timetz"	7	0	1	1
4198	760	"arg_2"	"decimal"	39	0	1	2
4199	761	"res_0"	"decimal"	39	0	0	0
4200	761	"arg_1"	"date"	0	0	1	1
4201	761	"arg_2"	"decimal"	39	0	1	2
4202	762	"res_0"	"decimal"	39	0	0	0
4203	762	"arg_1"	"timestamp"	7	0	1	1
4204	762	"arg_2"	"decimal"	39	0	1	2
4205	763	"res_0"	"decimal"	39	0	0	0
4206	763	"arg_1"	"timestamptz"	7	0	1	1
4207	763	"arg_2"	"decimal"	39	0	1	2
4208	764	"res_0"	"decimal"	39	0	0	0
4209	764	"arg_1"	"blob"	0	0	1	1
4210	764	"arg_2"	"decimal"	39	0	1	2
4211	765	"res_0"	"real"	24	0	0	0
4212	765	"arg_1"	"tinyint"	8	0	1	1
4213	765	"arg_2"	"real"	24	0	1	2
4214	766	"res_0"	"real"	24	0	0	0
4215	766	"arg_1"	"smallint"	16	0	1	1
4216	766	"arg_2"	"real"	24	0	1	2
4217	767	"res_0"	"real"	24	0	0	0
4218	767	"arg_1"	"int"	32	0	1	1
4219	767	"arg_2"	"real"	24	0	1	2
4220	768	"res_0"	"real"	24	0	0	0
4221	768	"arg_1"	"bigint"	64	0	1	1
4222	768	"arg_2"	"real"	24	0	1	2
4223	769	"res_0"	"real"	24	0	0	0
4224	769	"arg_1"	"oid"	63	0	1	1
4225	769	"arg_2"	"real"	24	0	1	2
4226	770	"res_0"	"real"	24	0	0	0
4227	770	"arg_1"	"wrd"	64	0	1	1
4228	770	"arg_2"	"real"	24	0	1	2
4229	771	"res_0"	"real"	24	0	0	0
4230	771	"arg_1"	"hugeint"	128	0	1	1
4231	771	"arg_2"	"real"	24	0	1	2
4232	772	"res_0"	"real"	24	0	0	0
4233	772	"arg_1"	"decimal"	2	0	1	1
4234	772	"arg_2"	"real"	24	0	1	2
4235	773	"res_0"	"real"	24	0	0	0
4236	773	"arg_1"	"decimal"	4	0	1	1
4237	773	"arg_2"	"real"	24	0	1	2
4238	774	"res_0"	"real"	24	0	0	0
4239	774	"arg_1"	"decimal"	9	0	1	1
4240	774	"arg_2"	"real"	24	0	1	2
4241	775	"res_0"	"real"	24	0	0	0
4242	775	"arg_1"	"decimal"	18	0	1	1
4243	775	"arg_2"	"real"	24	0	1	2
4244	776	"res_0"	"real"	24	0	0	0
4245	776	"arg_1"	"decimal"	39	0	1	1
4246	776	"arg_2"	"real"	24	0	1	2
4247	777	"res_0"	"real"	24	0	0	0
4248	777	"arg_1"	"real"	24	0	1	1
4249	777	"arg_2"	"real"	24	0	1	2
4250	778	"res_0"	"real"	24	0	0	0
4251	778	"arg_1"	"double"	53	0	1	1
4252	778	"arg_2"	"real"	24	0	1	2
4253	779	"res_0"	"real"	24	0	0	0
4254	779	"arg_1"	"month_interval"	32	0	1	1
4255	779	"arg_2"	"real"	24	0	1	2
4256	780	"res_0"	"real"	24	0	0	0
4257	780	"arg_1"	"sec_interval"	19	0	1	1
4258	780	"arg_2"	"real"	24	0	1	2
4259	781	"res_0"	"real"	24	0	0	0
4260	781	"arg_1"	"time"	7	0	1	1
4261	781	"arg_2"	"real"	24	0	1	2
4262	782	"res_0"	"real"	24	0	0	0
4263	782	"arg_1"	"timetz"	7	0	1	1
4264	782	"arg_2"	"real"	24	0	1	2
4265	783	"res_0"	"real"	24	0	0	0
4266	783	"arg_1"	"date"	0	0	1	1
4267	783	"arg_2"	"real"	24	0	1	2
4268	784	"res_0"	"real"	24	0	0	0
4269	784	"arg_1"	"timestamp"	7	0	1	1
4270	784	"arg_2"	"real"	24	0	1	2
4271	785	"res_0"	"real"	24	0	0	0
4272	785	"arg_1"	"timestamptz"	7	0	1	1
4273	785	"arg_2"	"real"	24	0	1	2
4274	786	"res_0"	"real"	24	0	0	0
4275	786	"arg_1"	"blob"	0	0	1	1
4276	786	"arg_2"	"real"	24	0	1	2
4277	787	"res_0"	"double"	53	0	0	0
4278	787	"arg_1"	"tinyint"	8	0	1	1
4279	787	"arg_2"	"double"	53	0	1	2
4280	788	"res_0"	"double"	53	0	0	0
4281	788	"arg_1"	"smallint"	16	0	1	1
4282	788	"arg_2"	"double"	53	0	1	2
4283	789	"res_0"	"double"	53	0	0	0
4284	789	"arg_1"	"int"	32	0	1	1
4285	789	"arg_2"	"double"	53	0	1	2
4286	790	"res_0"	"double"	53	0	0	0
4287	790	"arg_1"	"bigint"	64	0	1	1
4288	790	"arg_2"	"double"	53	0	1	2
4289	791	"res_0"	"double"	53	0	0	0
4290	791	"arg_1"	"oid"	63	0	1	1
4291	791	"arg_2"	"double"	53	0	1	2
4292	792	"res_0"	"double"	53	0	0	0
4293	792	"arg_1"	"wrd"	64	0	1	1
4294	792	"arg_2"	"double"	53	0	1	2
4295	793	"res_0"	"double"	53	0	0	0
4296	793	"arg_1"	"hugeint"	128	0	1	1
4297	793	"arg_2"	"double"	53	0	1	2
4298	794	"res_0"	"double"	53	0	0	0
4299	794	"arg_1"	"decimal"	2	0	1	1
4300	794	"arg_2"	"double"	53	0	1	2
4301	795	"res_0"	"double"	53	0	0	0
4302	795	"arg_1"	"decimal"	4	0	1	1
4303	795	"arg_2"	"double"	53	0	1	2
4304	796	"res_0"	"double"	53	0	0	0
4305	796	"arg_1"	"decimal"	9	0	1	1
4306	796	"arg_2"	"double"	53	0	1	2
4307	797	"res_0"	"double"	53	0	0	0
4308	797	"arg_1"	"decimal"	18	0	1	1
4309	797	"arg_2"	"double"	53	0	1	2
4310	798	"res_0"	"double"	53	0	0	0
4311	798	"arg_1"	"decimal"	39	0	1	1
4312	798	"arg_2"	"double"	53	0	1	2
4313	799	"res_0"	"double"	53	0	0	0
4314	799	"arg_1"	"real"	24	0	1	1
4315	799	"arg_2"	"double"	53	0	1	2
4316	800	"res_0"	"double"	53	0	0	0
4317	800	"arg_1"	"double"	53	0	1	1
4318	800	"arg_2"	"double"	53	0	1	2
4319	801	"res_0"	"double"	53	0	0	0
4320	801	"arg_1"	"month_interval"	32	0	1	1
4321	801	"arg_2"	"double"	53	0	1	2
4322	802	"res_0"	"double"	53	0	0	0
4323	802	"arg_1"	"sec_interval"	19	0	1	1
4324	802	"arg_2"	"double"	53	0	1	2
4325	803	"res_0"	"double"	53	0	0	0
4326	803	"arg_1"	"time"	7	0	1	1
4327	803	"arg_2"	"double"	53	0	1	2
4328	804	"res_0"	"double"	53	0	0	0
4329	804	"arg_1"	"timetz"	7	0	1	1
4330	804	"arg_2"	"double"	53	0	1	2
4331	805	"res_0"	"double"	53	0	0	0
4332	805	"arg_1"	"date"	0	0	1	1
4333	805	"arg_2"	"double"	53	0	1	2
4334	806	"res_0"	"double"	53	0	0	0
4335	806	"arg_1"	"timestamp"	7	0	1	1
4336	806	"arg_2"	"double"	53	0	1	2
4337	807	"res_0"	"double"	53	0	0	0
4338	807	"arg_1"	"timestamptz"	7	0	1	1
4339	807	"arg_2"	"double"	53	0	1	2
4340	808	"res_0"	"double"	53	0	0	0
4341	808	"arg_1"	"blob"	0	0	1	1
4342	808	"arg_2"	"double"	53	0	1	2
4343	809	"res_0"	"month_interval"	32	0	0	0
4344	809	"arg_1"	"tinyint"	8	0	1	1
4345	809	"arg_2"	"month_interval"	32	0	1	2
4346	810	"res_0"	"month_interval"	32	0	0	0
4347	810	"arg_1"	"smallint"	16	0	1	1
4348	810	"arg_2"	"month_interval"	32	0	1	2
4349	811	"res_0"	"month_interval"	32	0	0	0
4350	811	"arg_1"	"int"	32	0	1	1
4351	811	"arg_2"	"month_interval"	32	0	1	2
4352	812	"res_0"	"month_interval"	32	0	0	0
4353	812	"arg_1"	"bigint"	64	0	1	1
4354	812	"arg_2"	"month_interval"	32	0	1	2
4355	813	"res_0"	"month_interval"	32	0	0	0
4356	813	"arg_1"	"oid"	63	0	1	1
4357	813	"arg_2"	"month_interval"	32	0	1	2
4358	814	"res_0"	"month_interval"	32	0	0	0
4359	814	"arg_1"	"wrd"	64	0	1	1
4360	814	"arg_2"	"month_interval"	32	0	1	2
4361	815	"res_0"	"month_interval"	32	0	0	0
4362	815	"arg_1"	"hugeint"	128	0	1	1
4363	815	"arg_2"	"month_interval"	32	0	1	2
4364	816	"res_0"	"month_interval"	32	0	0	0
4365	816	"arg_1"	"decimal"	2	0	1	1
4366	816	"arg_2"	"month_interval"	32	0	1	2
4367	817	"res_0"	"month_interval"	32	0	0	0
4368	817	"arg_1"	"decimal"	4	0	1	1
4369	817	"arg_2"	"month_interval"	32	0	1	2
4370	818	"res_0"	"month_interval"	32	0	0	0
4371	818	"arg_1"	"decimal"	9	0	1	1
4372	818	"arg_2"	"month_interval"	32	0	1	2
4373	819	"res_0"	"month_interval"	32	0	0	0
4374	819	"arg_1"	"decimal"	18	0	1	1
4375	819	"arg_2"	"month_interval"	32	0	1	2
4376	820	"res_0"	"month_interval"	32	0	0	0
4377	820	"arg_1"	"decimal"	39	0	1	1
4378	820	"arg_2"	"month_interval"	32	0	1	2
4379	821	"res_0"	"month_interval"	32	0	0	0
4380	821	"arg_1"	"real"	24	0	1	1
4381	821	"arg_2"	"month_interval"	32	0	1	2
4382	822	"res_0"	"month_interval"	32	0	0	0
4383	822	"arg_1"	"double"	53	0	1	1
4384	822	"arg_2"	"month_interval"	32	0	1	2
4385	823	"res_0"	"month_interval"	32	0	0	0
4386	823	"arg_1"	"month_interval"	32	0	1	1
4387	823	"arg_2"	"month_interval"	32	0	1	2
4388	824	"res_0"	"month_interval"	32	0	0	0
4389	824	"arg_1"	"sec_interval"	19	0	1	1
4390	824	"arg_2"	"month_interval"	32	0	1	2
4391	825	"res_0"	"month_interval"	32	0	0	0
4392	825	"arg_1"	"time"	7	0	1	1
4393	825	"arg_2"	"month_interval"	32	0	1	2
4394	826	"res_0"	"month_interval"	32	0	0	0
4395	826	"arg_1"	"timetz"	7	0	1	1
4396	826	"arg_2"	"month_interval"	32	0	1	2
4397	827	"res_0"	"month_interval"	32	0	0	0
4398	827	"arg_1"	"date"	0	0	1	1
4399	827	"arg_2"	"month_interval"	32	0	1	2
4400	828	"res_0"	"month_interval"	32	0	0	0
4401	828	"arg_1"	"timestamp"	7	0	1	1
4402	828	"arg_2"	"month_interval"	32	0	1	2
4403	829	"res_0"	"month_interval"	32	0	0	0
4404	829	"arg_1"	"timestamptz"	7	0	1	1
4405	829	"arg_2"	"month_interval"	32	0	1	2
4406	830	"res_0"	"month_interval"	32	0	0	0
4407	830	"arg_1"	"blob"	0	0	1	1
4408	830	"arg_2"	"month_interval"	32	0	1	2
4409	831	"res_0"	"sec_interval"	19	0	0	0
4410	831	"arg_1"	"tinyint"	8	0	1	1
4411	831	"arg_2"	"sec_interval"	19	0	1	2
4412	832	"res_0"	"sec_interval"	19	0	0	0
4413	832	"arg_1"	"smallint"	16	0	1	1
4414	832	"arg_2"	"sec_interval"	19	0	1	2
4415	833	"res_0"	"sec_interval"	19	0	0	0
4416	833	"arg_1"	"int"	32	0	1	1
4417	833	"arg_2"	"sec_interval"	19	0	1	2
4418	834	"res_0"	"sec_interval"	19	0	0	0
4419	834	"arg_1"	"bigint"	64	0	1	1
4420	834	"arg_2"	"sec_interval"	19	0	1	2
4421	835	"res_0"	"sec_interval"	19	0	0	0
4422	835	"arg_1"	"oid"	63	0	1	1
4423	835	"arg_2"	"sec_interval"	19	0	1	2
4424	836	"res_0"	"sec_interval"	19	0	0	0
4425	836	"arg_1"	"wrd"	64	0	1	1
4426	836	"arg_2"	"sec_interval"	19	0	1	2
4427	837	"res_0"	"sec_interval"	19	0	0	0
4428	837	"arg_1"	"hugeint"	128	0	1	1
4429	837	"arg_2"	"sec_interval"	19	0	1	2
4430	838	"res_0"	"sec_interval"	19	0	0	0
4431	838	"arg_1"	"decimal"	2	0	1	1
4432	838	"arg_2"	"sec_interval"	19	0	1	2
4433	839	"res_0"	"sec_interval"	19	0	0	0
4434	839	"arg_1"	"decimal"	4	0	1	1
4435	839	"arg_2"	"sec_interval"	19	0	1	2
4436	840	"res_0"	"sec_interval"	19	0	0	0
4437	840	"arg_1"	"decimal"	9	0	1	1
4438	840	"arg_2"	"sec_interval"	19	0	1	2
4439	841	"res_0"	"sec_interval"	19	0	0	0
4440	841	"arg_1"	"decimal"	18	0	1	1
4441	841	"arg_2"	"sec_interval"	19	0	1	2
4442	842	"res_0"	"sec_interval"	19	0	0	0
4443	842	"arg_1"	"decimal"	39	0	1	1
4444	842	"arg_2"	"sec_interval"	19	0	1	2
4445	843	"res_0"	"sec_interval"	19	0	0	0
4446	843	"arg_1"	"real"	24	0	1	1
4447	843	"arg_2"	"sec_interval"	19	0	1	2
4448	844	"res_0"	"sec_interval"	19	0	0	0
4449	844	"arg_1"	"double"	53	0	1	1
4450	844	"arg_2"	"sec_interval"	19	0	1	2
4451	845	"res_0"	"sec_interval"	19	0	0	0
4452	845	"arg_1"	"month_interval"	32	0	1	1
4453	845	"arg_2"	"sec_interval"	19	0	1	2
4454	846	"res_0"	"sec_interval"	19	0	0	0
4455	846	"arg_1"	"sec_interval"	19	0	1	1
4456	846	"arg_2"	"sec_interval"	19	0	1	2
4457	847	"res_0"	"sec_interval"	19	0	0	0
4458	847	"arg_1"	"time"	7	0	1	1
4459	847	"arg_2"	"sec_interval"	19	0	1	2
4460	848	"res_0"	"sec_interval"	19	0	0	0
4461	848	"arg_1"	"timetz"	7	0	1	1
4462	848	"arg_2"	"sec_interval"	19	0	1	2
4463	849	"res_0"	"sec_interval"	19	0	0	0
4464	849	"arg_1"	"date"	0	0	1	1
4465	849	"arg_2"	"sec_interval"	19	0	1	2
4466	850	"res_0"	"sec_interval"	19	0	0	0
4467	850	"arg_1"	"timestamp"	7	0	1	1
4468	850	"arg_2"	"sec_interval"	19	0	1	2
4469	851	"res_0"	"sec_interval"	19	0	0	0
4470	851	"arg_1"	"timestamptz"	7	0	1	1
4471	851	"arg_2"	"sec_interval"	19	0	1	2
4472	852	"res_0"	"sec_interval"	19	0	0	0
4473	852	"arg_1"	"blob"	0	0	1	1
4474	852	"arg_2"	"sec_interval"	19	0	1	2
4475	853	"res_0"	"time"	7	0	0	0
4476	853	"arg_1"	"tinyint"	8	0	1	1
4477	853	"arg_2"	"time"	7	0	1	2
4478	854	"res_0"	"time"	7	0	0	0
4479	854	"arg_1"	"smallint"	16	0	1	1
4480	854	"arg_2"	"time"	7	0	1	2
4481	855	"res_0"	"time"	7	0	0	0
4482	855	"arg_1"	"int"	32	0	1	1
4483	855	"arg_2"	"time"	7	0	1	2
4484	856	"res_0"	"time"	7	0	0	0
4485	856	"arg_1"	"bigint"	64	0	1	1
4486	856	"arg_2"	"time"	7	0	1	2
4487	857	"res_0"	"time"	7	0	0	0
4488	857	"arg_1"	"oid"	63	0	1	1
4489	857	"arg_2"	"time"	7	0	1	2
4490	858	"res_0"	"time"	7	0	0	0
4491	858	"arg_1"	"wrd"	64	0	1	1
4492	858	"arg_2"	"time"	7	0	1	2
4493	859	"res_0"	"time"	7	0	0	0
4494	859	"arg_1"	"hugeint"	128	0	1	1
4495	859	"arg_2"	"time"	7	0	1	2
4496	860	"res_0"	"time"	7	0	0	0
4497	860	"arg_1"	"decimal"	2	0	1	1
4498	860	"arg_2"	"time"	7	0	1	2
4499	861	"res_0"	"time"	7	0	0	0
4500	861	"arg_1"	"decimal"	4	0	1	1
4501	861	"arg_2"	"time"	7	0	1	2
4502	862	"res_0"	"time"	7	0	0	0
4503	862	"arg_1"	"decimal"	9	0	1	1
4504	862	"arg_2"	"time"	7	0	1	2
4505	863	"res_0"	"time"	7	0	0	0
4506	863	"arg_1"	"decimal"	18	0	1	1
4507	863	"arg_2"	"time"	7	0	1	2
4508	864	"res_0"	"time"	7	0	0	0
4509	864	"arg_1"	"decimal"	39	0	1	1
4510	864	"arg_2"	"time"	7	0	1	2
4511	865	"res_0"	"time"	7	0	0	0
4512	865	"arg_1"	"real"	24	0	1	1
4513	865	"arg_2"	"time"	7	0	1	2
4514	866	"res_0"	"time"	7	0	0	0
4515	866	"arg_1"	"double"	53	0	1	1
4516	866	"arg_2"	"time"	7	0	1	2
4517	867	"res_0"	"time"	7	0	0	0
4518	867	"arg_1"	"month_interval"	32	0	1	1
4519	867	"arg_2"	"time"	7	0	1	2
4520	868	"res_0"	"time"	7	0	0	0
4521	868	"arg_1"	"sec_interval"	19	0	1	1
4522	868	"arg_2"	"time"	7	0	1	2
4523	869	"res_0"	"time"	7	0	0	0
4524	869	"arg_1"	"time"	7	0	1	1
4525	869	"arg_2"	"time"	7	0	1	2
4526	870	"res_0"	"time"	7	0	0	0
4527	870	"arg_1"	"timetz"	7	0	1	1
4528	870	"arg_2"	"time"	7	0	1	2
4529	871	"res_0"	"time"	7	0	0	0
4530	871	"arg_1"	"date"	0	0	1	1
4531	871	"arg_2"	"time"	7	0	1	2
4532	872	"res_0"	"time"	7	0	0	0
4533	872	"arg_1"	"timestamp"	7	0	1	1
4534	872	"arg_2"	"time"	7	0	1	2
4535	873	"res_0"	"time"	7	0	0	0
4536	873	"arg_1"	"timestamptz"	7	0	1	1
4537	873	"arg_2"	"time"	7	0	1	2
4538	874	"res_0"	"time"	7	0	0	0
4539	874	"arg_1"	"blob"	0	0	1	1
4540	874	"arg_2"	"time"	7	0	1	2
4541	875	"res_0"	"timetz"	7	0	0	0
4542	875	"arg_1"	"tinyint"	8	0	1	1
4543	875	"arg_2"	"timetz"	7	0	1	2
4544	876	"res_0"	"timetz"	7	0	0	0
4545	876	"arg_1"	"smallint"	16	0	1	1
4546	876	"arg_2"	"timetz"	7	0	1	2
4547	877	"res_0"	"timetz"	7	0	0	0
4548	877	"arg_1"	"int"	32	0	1	1
4549	877	"arg_2"	"timetz"	7	0	1	2
4550	878	"res_0"	"timetz"	7	0	0	0
4551	878	"arg_1"	"bigint"	64	0	1	1
4552	878	"arg_2"	"timetz"	7	0	1	2
4553	879	"res_0"	"timetz"	7	0	0	0
4554	879	"arg_1"	"oid"	63	0	1	1
4555	879	"arg_2"	"timetz"	7	0	1	2
4556	880	"res_0"	"timetz"	7	0	0	0
4557	880	"arg_1"	"wrd"	64	0	1	1
4558	880	"arg_2"	"timetz"	7	0	1	2
4559	881	"res_0"	"timetz"	7	0	0	0
4560	881	"arg_1"	"hugeint"	128	0	1	1
4561	881	"arg_2"	"timetz"	7	0	1	2
4562	882	"res_0"	"timetz"	7	0	0	0
4563	882	"arg_1"	"decimal"	2	0	1	1
4564	882	"arg_2"	"timetz"	7	0	1	2
4565	883	"res_0"	"timetz"	7	0	0	0
4566	883	"arg_1"	"decimal"	4	0	1	1
4567	883	"arg_2"	"timetz"	7	0	1	2
4568	884	"res_0"	"timetz"	7	0	0	0
4569	884	"arg_1"	"decimal"	9	0	1	1
4570	884	"arg_2"	"timetz"	7	0	1	2
4571	885	"res_0"	"timetz"	7	0	0	0
4572	885	"arg_1"	"decimal"	18	0	1	1
4573	885	"arg_2"	"timetz"	7	0	1	2
4574	886	"res_0"	"timetz"	7	0	0	0
4575	886	"arg_1"	"decimal"	39	0	1	1
4576	886	"arg_2"	"timetz"	7	0	1	2
4577	887	"res_0"	"timetz"	7	0	0	0
4578	887	"arg_1"	"real"	24	0	1	1
4579	887	"arg_2"	"timetz"	7	0	1	2
4580	888	"res_0"	"timetz"	7	0	0	0
4581	888	"arg_1"	"double"	53	0	1	1
4582	888	"arg_2"	"timetz"	7	0	1	2
4583	889	"res_0"	"timetz"	7	0	0	0
4584	889	"arg_1"	"month_interval"	32	0	1	1
4585	889	"arg_2"	"timetz"	7	0	1	2
4586	890	"res_0"	"timetz"	7	0	0	0
4587	890	"arg_1"	"sec_interval"	19	0	1	1
4588	890	"arg_2"	"timetz"	7	0	1	2
4589	891	"res_0"	"timetz"	7	0	0	0
4590	891	"arg_1"	"time"	7	0	1	1
4591	891	"arg_2"	"timetz"	7	0	1	2
4592	892	"res_0"	"timetz"	7	0	0	0
4593	892	"arg_1"	"timetz"	7	0	1	1
4594	892	"arg_2"	"timetz"	7	0	1	2
4595	893	"res_0"	"timetz"	7	0	0	0
4596	893	"arg_1"	"date"	0	0	1	1
4597	893	"arg_2"	"timetz"	7	0	1	2
4598	894	"res_0"	"timetz"	7	0	0	0
4599	894	"arg_1"	"timestamp"	7	0	1	1
4600	894	"arg_2"	"timetz"	7	0	1	2
4601	895	"res_0"	"timetz"	7	0	0	0
4602	895	"arg_1"	"timestamptz"	7	0	1	1
4603	895	"arg_2"	"timetz"	7	0	1	2
4604	896	"res_0"	"timetz"	7	0	0	0
4605	896	"arg_1"	"blob"	0	0	1	1
4606	896	"arg_2"	"timetz"	7	0	1	2
4607	897	"res_0"	"date"	0	0	0	0
4608	897	"arg_1"	"tinyint"	8	0	1	1
4609	897	"arg_2"	"date"	0	0	1	2
4610	898	"res_0"	"date"	0	0	0	0
4611	898	"arg_1"	"smallint"	16	0	1	1
4612	898	"arg_2"	"date"	0	0	1	2
4613	899	"res_0"	"date"	0	0	0	0
4614	899	"arg_1"	"int"	32	0	1	1
4615	899	"arg_2"	"date"	0	0	1	2
4616	900	"res_0"	"date"	0	0	0	0
4617	900	"arg_1"	"bigint"	64	0	1	1
4618	900	"arg_2"	"date"	0	0	1	2
4619	901	"res_0"	"date"	0	0	0	0
4620	901	"arg_1"	"oid"	63	0	1	1
4621	901	"arg_2"	"date"	0	0	1	2
4622	902	"res_0"	"date"	0	0	0	0
4623	902	"arg_1"	"wrd"	64	0	1	1
4624	902	"arg_2"	"date"	0	0	1	2
4625	903	"res_0"	"date"	0	0	0	0
4626	903	"arg_1"	"hugeint"	128	0	1	1
4627	903	"arg_2"	"date"	0	0	1	2
4628	904	"res_0"	"date"	0	0	0	0
4629	904	"arg_1"	"decimal"	2	0	1	1
4630	904	"arg_2"	"date"	0	0	1	2
4631	905	"res_0"	"date"	0	0	0	0
4632	905	"arg_1"	"decimal"	4	0	1	1
4633	905	"arg_2"	"date"	0	0	1	2
4634	906	"res_0"	"date"	0	0	0	0
4635	906	"arg_1"	"decimal"	9	0	1	1
4636	906	"arg_2"	"date"	0	0	1	2
4637	907	"res_0"	"date"	0	0	0	0
4638	907	"arg_1"	"decimal"	18	0	1	1
4639	907	"arg_2"	"date"	0	0	1	2
4640	908	"res_0"	"date"	0	0	0	0
4641	908	"arg_1"	"decimal"	39	0	1	1
4642	908	"arg_2"	"date"	0	0	1	2
4643	909	"res_0"	"date"	0	0	0	0
4644	909	"arg_1"	"real"	24	0	1	1
4645	909	"arg_2"	"date"	0	0	1	2
4646	910	"res_0"	"date"	0	0	0	0
4647	910	"arg_1"	"double"	53	0	1	1
4648	910	"arg_2"	"date"	0	0	1	2
4649	911	"res_0"	"date"	0	0	0	0
4650	911	"arg_1"	"month_interval"	32	0	1	1
4651	911	"arg_2"	"date"	0	0	1	2
4652	912	"res_0"	"date"	0	0	0	0
4653	912	"arg_1"	"sec_interval"	19	0	1	1
4654	912	"arg_2"	"date"	0	0	1	2
4655	913	"res_0"	"date"	0	0	0	0
4656	913	"arg_1"	"time"	7	0	1	1
4657	913	"arg_2"	"date"	0	0	1	2
4658	914	"res_0"	"date"	0	0	0	0
4659	914	"arg_1"	"timetz"	7	0	1	1
4660	914	"arg_2"	"date"	0	0	1	2
4661	915	"res_0"	"date"	0	0	0	0
4662	915	"arg_1"	"date"	0	0	1	1
4663	915	"arg_2"	"date"	0	0	1	2
4664	916	"res_0"	"date"	0	0	0	0
4665	916	"arg_1"	"timestamp"	7	0	1	1
4666	916	"arg_2"	"date"	0	0	1	2
4667	917	"res_0"	"date"	0	0	0	0
4668	917	"arg_1"	"timestamptz"	7	0	1	1
4669	917	"arg_2"	"date"	0	0	1	2
4670	918	"res_0"	"date"	0	0	0	0
4671	918	"arg_1"	"blob"	0	0	1	1
4672	918	"arg_2"	"date"	0	0	1	2
4673	919	"res_0"	"timestamp"	7	0	0	0
4674	919	"arg_1"	"tinyint"	8	0	1	1
4675	919	"arg_2"	"timestamp"	7	0	1	2
4676	920	"res_0"	"timestamp"	7	0	0	0
4677	920	"arg_1"	"smallint"	16	0	1	1
4678	920	"arg_2"	"timestamp"	7	0	1	2
4679	921	"res_0"	"timestamp"	7	0	0	0
4680	921	"arg_1"	"int"	32	0	1	1
4681	921	"arg_2"	"timestamp"	7	0	1	2
4682	922	"res_0"	"timestamp"	7	0	0	0
4683	922	"arg_1"	"bigint"	64	0	1	1
4684	922	"arg_2"	"timestamp"	7	0	1	2
4685	923	"res_0"	"timestamp"	7	0	0	0
4686	923	"arg_1"	"oid"	63	0	1	1
4687	923	"arg_2"	"timestamp"	7	0	1	2
4688	924	"res_0"	"timestamp"	7	0	0	0
4689	924	"arg_1"	"wrd"	64	0	1	1
4690	924	"arg_2"	"timestamp"	7	0	1	2
4691	925	"res_0"	"timestamp"	7	0	0	0
4692	925	"arg_1"	"hugeint"	128	0	1	1
4693	925	"arg_2"	"timestamp"	7	0	1	2
4694	926	"res_0"	"timestamp"	7	0	0	0
4695	926	"arg_1"	"decimal"	2	0	1	1
4696	926	"arg_2"	"timestamp"	7	0	1	2
4697	927	"res_0"	"timestamp"	7	0	0	0
4698	927	"arg_1"	"decimal"	4	0	1	1
4699	927	"arg_2"	"timestamp"	7	0	1	2
4700	928	"res_0"	"timestamp"	7	0	0	0
4701	928	"arg_1"	"decimal"	9	0	1	1
4702	928	"arg_2"	"timestamp"	7	0	1	2
4703	929	"res_0"	"timestamp"	7	0	0	0
4704	929	"arg_1"	"decimal"	18	0	1	1
4705	929	"arg_2"	"timestamp"	7	0	1	2
4706	930	"res_0"	"timestamp"	7	0	0	0
4707	930	"arg_1"	"decimal"	39	0	1	1
4708	930	"arg_2"	"timestamp"	7	0	1	2
4709	931	"res_0"	"timestamp"	7	0	0	0
4710	931	"arg_1"	"real"	24	0	1	1
4711	931	"arg_2"	"timestamp"	7	0	1	2
4712	932	"res_0"	"timestamp"	7	0	0	0
4713	932	"arg_1"	"double"	53	0	1	1
4714	932	"arg_2"	"timestamp"	7	0	1	2
4715	933	"res_0"	"timestamp"	7	0	0	0
4716	933	"arg_1"	"month_interval"	32	0	1	1
4717	933	"arg_2"	"timestamp"	7	0	1	2
4718	934	"res_0"	"timestamp"	7	0	0	0
4719	934	"arg_1"	"sec_interval"	19	0	1	1
4720	934	"arg_2"	"timestamp"	7	0	1	2
4721	935	"res_0"	"timestamp"	7	0	0	0
4722	935	"arg_1"	"time"	7	0	1	1
4723	935	"arg_2"	"timestamp"	7	0	1	2
4724	936	"res_0"	"timestamp"	7	0	0	0
4725	936	"arg_1"	"timetz"	7	0	1	1
4726	936	"arg_2"	"timestamp"	7	0	1	2
4727	937	"res_0"	"timestamp"	7	0	0	0
4728	937	"arg_1"	"date"	0	0	1	1
4729	937	"arg_2"	"timestamp"	7	0	1	2
4730	938	"res_0"	"timestamp"	7	0	0	0
4731	938	"arg_1"	"timestamp"	7	0	1	1
4732	938	"arg_2"	"timestamp"	7	0	1	2
4733	939	"res_0"	"timestamp"	7	0	0	0
4734	939	"arg_1"	"timestamptz"	7	0	1	1
4735	939	"arg_2"	"timestamp"	7	0	1	2
4736	940	"res_0"	"timestamp"	7	0	0	0
4737	940	"arg_1"	"blob"	0	0	1	1
4738	940	"arg_2"	"timestamp"	7	0	1	2
4739	941	"res_0"	"timestamptz"	7	0	0	0
4740	941	"arg_1"	"tinyint"	8	0	1	1
4741	941	"arg_2"	"timestamptz"	7	0	1	2
4742	942	"res_0"	"timestamptz"	7	0	0	0
4743	942	"arg_1"	"smallint"	16	0	1	1
4744	942	"arg_2"	"timestamptz"	7	0	1	2
4745	943	"res_0"	"timestamptz"	7	0	0	0
4746	943	"arg_1"	"int"	32	0	1	1
4747	943	"arg_2"	"timestamptz"	7	0	1	2
4748	944	"res_0"	"timestamptz"	7	0	0	0
4749	944	"arg_1"	"bigint"	64	0	1	1
4750	944	"arg_2"	"timestamptz"	7	0	1	2
4751	945	"res_0"	"timestamptz"	7	0	0	0
4752	945	"arg_1"	"oid"	63	0	1	1
4753	945	"arg_2"	"timestamptz"	7	0	1	2
4754	946	"res_0"	"timestamptz"	7	0	0	0
4755	946	"arg_1"	"wrd"	64	0	1	1
4756	946	"arg_2"	"timestamptz"	7	0	1	2
4757	947	"res_0"	"timestamptz"	7	0	0	0
4758	947	"arg_1"	"hugeint"	128	0	1	1
4759	947	"arg_2"	"timestamptz"	7	0	1	2
4760	948	"res_0"	"timestamptz"	7	0	0	0
4761	948	"arg_1"	"decimal"	2	0	1	1
4762	948	"arg_2"	"timestamptz"	7	0	1	2
4763	949	"res_0"	"timestamptz"	7	0	0	0
4764	949	"arg_1"	"decimal"	4	0	1	1
4765	949	"arg_2"	"timestamptz"	7	0	1	2
4766	950	"res_0"	"timestamptz"	7	0	0	0
4767	950	"arg_1"	"decimal"	9	0	1	1
4768	950	"arg_2"	"timestamptz"	7	0	1	2
4769	951	"res_0"	"timestamptz"	7	0	0	0
4770	951	"arg_1"	"decimal"	18	0	1	1
4771	951	"arg_2"	"timestamptz"	7	0	1	2
4772	952	"res_0"	"timestamptz"	7	0	0	0
4773	952	"arg_1"	"decimal"	39	0	1	1
4774	952	"arg_2"	"timestamptz"	7	0	1	2
4775	953	"res_0"	"timestamptz"	7	0	0	0
4776	953	"arg_1"	"real"	24	0	1	1
4777	953	"arg_2"	"timestamptz"	7	0	1	2
4778	954	"res_0"	"timestamptz"	7	0	0	0
4779	954	"arg_1"	"double"	53	0	1	1
4780	954	"arg_2"	"timestamptz"	7	0	1	2
4781	955	"res_0"	"timestamptz"	7	0	0	0
4782	955	"arg_1"	"month_interval"	32	0	1	1
4783	955	"arg_2"	"timestamptz"	7	0	1	2
4784	956	"res_0"	"timestamptz"	7	0	0	0
4785	956	"arg_1"	"sec_interval"	19	0	1	1
4786	956	"arg_2"	"timestamptz"	7	0	1	2
4787	957	"res_0"	"timestamptz"	7	0	0	0
4788	957	"arg_1"	"time"	7	0	1	1
4789	957	"arg_2"	"timestamptz"	7	0	1	2
4790	958	"res_0"	"timestamptz"	7	0	0	0
4791	958	"arg_1"	"timetz"	7	0	1	1
4792	958	"arg_2"	"timestamptz"	7	0	1	2
4793	959	"res_0"	"timestamptz"	7	0	0	0
4794	959	"arg_1"	"date"	0	0	1	1
4795	959	"arg_2"	"timestamptz"	7	0	1	2
4796	960	"res_0"	"timestamptz"	7	0	0	0
4797	960	"arg_1"	"timestamp"	7	0	1	1
4798	960	"arg_2"	"timestamptz"	7	0	1	2
4799	961	"res_0"	"timestamptz"	7	0	0	0
4800	961	"arg_1"	"timestamptz"	7	0	1	1
4801	961	"arg_2"	"timestamptz"	7	0	1	2
4802	962	"res_0"	"timestamptz"	7	0	0	0
4803	962	"arg_1"	"blob"	0	0	1	1
4804	962	"arg_2"	"timestamptz"	7	0	1	2
4805	963	"res_0"	"blob"	0	0	0	0
4806	963	"arg_1"	"tinyint"	8	0	1	1
4807	963	"arg_2"	"blob"	0	0	1	2
4808	964	"res_0"	"blob"	0	0	0	0
4809	964	"arg_1"	"smallint"	16	0	1	1
4810	964	"arg_2"	"blob"	0	0	1	2
4811	965	"res_0"	"blob"	0	0	0	0
4812	965	"arg_1"	"int"	32	0	1	1
4813	965	"arg_2"	"blob"	0	0	1	2
4814	966	"res_0"	"blob"	0	0	0	0
4815	966	"arg_1"	"bigint"	64	0	1	1
4816	966	"arg_2"	"blob"	0	0	1	2
4817	967	"res_0"	"blob"	0	0	0	0
4818	967	"arg_1"	"oid"	63	0	1	1
4819	967	"arg_2"	"blob"	0	0	1	2
4820	968	"res_0"	"blob"	0	0	0	0
4821	968	"arg_1"	"wrd"	64	0	1	1
4822	968	"arg_2"	"blob"	0	0	1	2
4823	969	"res_0"	"blob"	0	0	0	0
4824	969	"arg_1"	"hugeint"	128	0	1	1
4825	969	"arg_2"	"blob"	0	0	1	2
4826	970	"res_0"	"blob"	0	0	0	0
4827	970	"arg_1"	"decimal"	2	0	1	1
4828	970	"arg_2"	"blob"	0	0	1	2
4829	971	"res_0"	"blob"	0	0	0	0
4830	971	"arg_1"	"decimal"	4	0	1	1
4831	971	"arg_2"	"blob"	0	0	1	2
4832	972	"res_0"	"blob"	0	0	0	0
4833	972	"arg_1"	"decimal"	9	0	1	1
4834	972	"arg_2"	"blob"	0	0	1	2
4835	973	"res_0"	"blob"	0	0	0	0
4836	973	"arg_1"	"decimal"	18	0	1	1
4837	973	"arg_2"	"blob"	0	0	1	2
4838	974	"res_0"	"blob"	0	0	0	0
4839	974	"arg_1"	"decimal"	39	0	1	1
4840	974	"arg_2"	"blob"	0	0	1	2
4841	975	"res_0"	"blob"	0	0	0	0
4842	975	"arg_1"	"real"	24	0	1	1
4843	975	"arg_2"	"blob"	0	0	1	2
4844	976	"res_0"	"blob"	0	0	0	0
4845	976	"arg_1"	"double"	53	0	1	1
4846	976	"arg_2"	"blob"	0	0	1	2
4847	977	"res_0"	"blob"	0	0	0	0
4848	977	"arg_1"	"month_interval"	32	0	1	1
4849	977	"arg_2"	"blob"	0	0	1	2
4850	978	"res_0"	"blob"	0	0	0	0
4851	978	"arg_1"	"sec_interval"	19	0	1	1
4852	978	"arg_2"	"blob"	0	0	1	2
4853	979	"res_0"	"blob"	0	0	0	0
4854	979	"arg_1"	"time"	7	0	1	1
4855	979	"arg_2"	"blob"	0	0	1	2
4856	980	"res_0"	"blob"	0	0	0	0
4857	980	"arg_1"	"timetz"	7	0	1	1
4858	980	"arg_2"	"blob"	0	0	1	2
4859	981	"res_0"	"blob"	0	0	0	0
4860	981	"arg_1"	"date"	0	0	1	1
4861	981	"arg_2"	"blob"	0	0	1	2
4862	982	"res_0"	"blob"	0	0	0	0
4863	982	"arg_1"	"timestamp"	7	0	1	1
4864	982	"arg_2"	"blob"	0	0	1	2
4865	983	"res_0"	"blob"	0	0	0	0
4866	983	"arg_1"	"timestamptz"	7	0	1	1
4867	983	"arg_2"	"blob"	0	0	1	2
4868	984	"res_0"	"blob"	0	0	0	0
4869	984	"arg_1"	"blob"	0	0	1	1
4870	984	"arg_2"	"blob"	0	0	1	2
4871	985	"res_0"	"double"	53	0	0	0
4872	985	"arg_1"	"double"	53	0	1	1
4873	985	"arg_2"	"double"	53	0	1	2
4874	986	"res_0"	"double"	53	0	0	0
4875	986	"arg_1"	"double"	53	0	1	1
4876	987	"res_0"	"double"	53	0	0	0
4877	987	"arg_1"	"double"	53	0	1	1
4878	988	"res_0"	"double"	53	0	0	0
4879	988	"arg_1"	"double"	53	0	1	1
4880	989	"res_0"	"double"	53	0	0	0
4881	989	"arg_1"	"double"	53	0	1	1
4882	990	"res_0"	"double"	53	0	0	0
4883	990	"arg_1"	"double"	53	0	1	1
4884	991	"res_0"	"double"	53	0	0	0
4885	991	"arg_1"	"double"	53	0	1	1
4886	992	"res_0"	"double"	53	0	0	0
4887	992	"arg_1"	"double"	53	0	1	1
4888	993	"res_0"	"double"	53	0	0	0
4889	993	"arg_1"	"double"	53	0	1	1
4890	994	"res_0"	"double"	53	0	0	0
4891	994	"arg_1"	"double"	53	0	1	1
4892	995	"res_0"	"double"	53	0	0	0
4893	995	"arg_1"	"double"	53	0	1	1
4894	995	"arg_2"	"double"	53	0	1	2
4895	996	"res_0"	"double"	53	0	0	0
4896	996	"arg_1"	"double"	53	0	1	1
4897	997	"res_0"	"double"	53	0	0	0
4898	997	"arg_1"	"double"	53	0	1	1
4899	998	"res_0"	"double"	53	0	0	0
4900	998	"arg_1"	"double"	53	0	1	1
4901	999	"res_0"	"double"	53	0	0	0
4902	999	"arg_1"	"double"	53	0	1	1
4903	1000	"res_0"	"double"	53	0	0	0
4904	1000	"arg_1"	"double"	53	0	1	1
4905	1001	"res_0"	"double"	53	0	0	0
4906	1001	"arg_1"	"double"	53	0	1	1
4907	1002	"res_0"	"double"	53	0	0	0
4908	1002	"arg_1"	"double"	53	0	1	1
4909	1003	"res_0"	"double"	53	0	0	0
4910	1003	"arg_1"	"double"	53	0	1	1
4911	1004	"res_0"	"real"	24	0	0	0
4912	1004	"arg_1"	"real"	24	0	1	1
4913	1004	"arg_2"	"real"	24	0	1	2
4914	1005	"res_0"	"real"	24	0	0	0
4915	1005	"arg_1"	"real"	24	0	1	1
4916	1006	"res_0"	"real"	24	0	0	0
4917	1006	"arg_1"	"real"	24	0	1	1
4918	1007	"res_0"	"real"	24	0	0	0
4919	1007	"arg_1"	"real"	24	0	1	1
4920	1008	"res_0"	"real"	24	0	0	0
4921	1008	"arg_1"	"real"	24	0	1	1
4922	1009	"res_0"	"real"	24	0	0	0
4923	1009	"arg_1"	"real"	24	0	1	1
4924	1010	"res_0"	"real"	24	0	0	0
4925	1010	"arg_1"	"real"	24	0	1	1
4926	1011	"res_0"	"real"	24	0	0	0
4927	1011	"arg_1"	"real"	24	0	1	1
4928	1012	"res_0"	"real"	24	0	0	0
4929	1012	"arg_1"	"real"	24	0	1	1
4930	1013	"res_0"	"real"	24	0	0	0
4931	1013	"arg_1"	"real"	24	0	1	1
4932	1014	"res_0"	"real"	24	0	0	0
4933	1014	"arg_1"	"real"	24	0	1	1
4934	1014	"arg_2"	"real"	24	0	1	2
4935	1015	"res_0"	"real"	24	0	0	0
4936	1015	"arg_1"	"real"	24	0	1	1
4937	1016	"res_0"	"real"	24	0	0	0
4938	1016	"arg_1"	"real"	24	0	1	1
4939	1017	"res_0"	"real"	24	0	0	0
4940	1017	"arg_1"	"real"	24	0	1	1
4941	1018	"res_0"	"real"	24	0	0	0
4942	1018	"arg_1"	"real"	24	0	1	1
4943	1019	"res_0"	"real"	24	0	0	0
4944	1019	"arg_1"	"real"	24	0	1	1
4945	1020	"res_0"	"real"	24	0	0	0
4946	1020	"arg_1"	"real"	24	0	1	1
4947	1021	"res_0"	"real"	24	0	0	0
4948	1021	"arg_1"	"real"	24	0	1	1
4949	1022	"res_0"	"real"	24	0	0	0
4950	1022	"arg_1"	"real"	24	0	1	1
4951	1023	"res_0"	"double"	53	0	0	0
4952	1024	"res_0"	"int"	32	0	0	0
4953	1025	"res_0"	"int"	32	0	0	0
4954	1025	"arg_1"	"int"	32	0	1	1
4955	1026	"res_0"	"date"	0	0	0	0
4956	1027	"res_0"	"date"	0	0	0	0
4957	1028	"res_0"	"timetz"	7	0	0	0
4958	1029	"res_0"	"timetz"	7	0	0	0
4959	1030	"res_0"	"timestamptz"	7	0	0	0
4960	1031	"res_0"	"time"	7	0	0	0
4961	1032	"res_0"	"timestamp"	7	0	0	0
4962	1033	"res_0"	"date"	0	0	0	0
4963	1033	"arg_1"	"date"	0	0	1	1
4964	1033	"arg_2"	"sec_interval"	19	0	1	2
4965	1034	"res_0"	"date"	0	0	0	0
4966	1034	"arg_1"	"date"	0	0	1	1
4967	1034	"arg_2"	"month_interval"	32	0	1	2
4968	1035	"res_0"	"timestamp"	7	0	0	0
4969	1035	"arg_1"	"timestamp"	7	0	1	1
4970	1035	"arg_2"	"sec_interval"	19	0	1	2
4971	1036	"res_0"	"timestamp"	7	0	0	0
4972	1036	"arg_1"	"timestamp"	7	0	1	1
4973	1036	"arg_2"	"month_interval"	32	0	1	2
4974	1037	"res_0"	"timestamptz"	7	0	0	0
4975	1037	"arg_1"	"timestamptz"	7	0	1	1
4976	1037	"arg_2"	"sec_interval"	19	0	1	2
4977	1038	"res_0"	"timestamptz"	7	0	0	0
4978	1038	"arg_1"	"timestamptz"	7	0	1	1
4979	1038	"arg_2"	"month_interval"	32	0	1	2
4980	1039	"res_0"	"time"	7	0	0	0
4981	1039	"arg_1"	"time"	7	0	1	1
4982	1039	"arg_2"	"sec_interval"	19	0	1	2
4983	1040	"res_0"	"int"	32	0	0	0
4984	1040	"arg_1"	"date"	0	0	1	1
4985	1040	"arg_2"	"date"	0	0	1	2
4986	1041	"res_0"	"bigint"	64	0	0	0
4987	1041	"arg_1"	"timestamp"	7	0	1	1
4988	1041	"arg_2"	"timestamp"	7	0	1	2
4989	1042	"res_0"	"bigint"	64	0	0	0
4990	1042	"arg_1"	"timestamptz"	7	0	1	1
4991	1042	"arg_2"	"timestamptz"	7	0	1	2
4992	1043	"res_0"	"date"	0	0	0	0
4993	1043	"arg_1"	"date"	0	0	1	1
4994	1043	"arg_2"	"sec_interval"	19	0	1	2
4995	1044	"res_0"	"date"	0	0	0	0
4996	1044	"arg_1"	"date"	0	0	1	1
4997	1044	"arg_2"	"month_interval"	32	0	1	2
4998	1045	"res_0"	"timestamp"	7	0	0	0
4999	1045	"arg_1"	"timestamp"	7	0	1	1
5000	1045	"arg_2"	"sec_interval"	19	0	1	2
5001	1046	"res_0"	"timestamp"	7	0	0	0
5002	1046	"arg_1"	"timestamp"	7	0	1	1
5003	1046	"arg_2"	"month_interval"	32	0	1	2
5004	1047	"res_0"	"timestamptz"	7	0	0	0
5005	1047	"arg_1"	"timestamptz"	7	0	1	1
5006	1047	"arg_2"	"sec_interval"	19	0	1	2
5007	1048	"res_0"	"timestamptz"	7	0	0	0
5008	1048	"arg_1"	"timestamptz"	7	0	1	1
5009	1048	"arg_2"	"month_interval"	32	0	1	2
5010	1049	"res_0"	"time"	7	0	0	0
5011	1049	"arg_1"	"time"	7	0	1	1
5012	1049	"arg_2"	"sec_interval"	19	0	1	2
5013	1050	"res_0"	"sec_interval"	19	0	0	0
5014	1051	"res_0"	"int"	32	0	0	0
5015	1051	"arg_1"	"date"	0	0	1	1
5016	1052	"res_0"	"int"	32	0	0	0
5017	1052	"arg_1"	"date"	0	0	1	1
5018	1053	"res_0"	"int"	32	0	0	0
5019	1053	"arg_1"	"date"	0	0	1	1
5020	1054	"res_0"	"int"	32	0	0	0
5021	1054	"arg_1"	"time"	7	0	1	1
5022	1055	"res_0"	"int"	32	0	0	0
5023	1055	"arg_1"	"time"	7	0	1	1
5024	1056	"res_0"	"decimal"	9	3	0	0
5025	1056	"arg_1"	"time"	7	0	1	1
5026	1057	"res_0"	"int"	32	0	0	0
5027	1057	"arg_1"	"timestamp"	7	0	1	1
5028	1058	"res_0"	"int"	32	0	0	0
5029	1058	"arg_1"	"timestamp"	7	0	1	1
5030	1059	"res_0"	"int"	32	0	0	0
5031	1059	"arg_1"	"timestamp"	7	0	1	1
5032	1060	"res_0"	"int"	32	0	0	0
5033	1060	"arg_1"	"timestamp"	7	0	1	1
5034	1061	"res_0"	"int"	32	0	0	0
5035	1061	"arg_1"	"timestamp"	7	0	1	1
5036	1062	"res_0"	"decimal"	9	3	0	0
5037	1062	"arg_1"	"timestamp"	7	0	1	1
5038	1063	"res_0"	"int"	32	0	0	0
5039	1063	"arg_1"	"timestamptz"	7	0	1	1
5040	1064	"res_0"	"int"	32	0	0	0
5041	1064	"arg_1"	"timestamptz"	7	0	1	1
5042	1065	"res_0"	"int"	32	0	0	0
5043	1065	"arg_1"	"timestamptz"	7	0	1	1
5044	1066	"res_0"	"int"	32	0	0	0
5045	1066	"arg_1"	"timestamptz"	7	0	1	1
5046	1067	"res_0"	"int"	32	0	0	0
5047	1067	"arg_1"	"timestamptz"	7	0	1	1
5048	1068	"res_0"	"decimal"	9	3	0	0
5049	1068	"arg_1"	"timestamptz"	7	0	1	1
5050	1069	"res_0"	"int"	32	0	0	0
5051	1069	"arg_1"	"month_interval"	32	0	1	1
5052	1070	"res_0"	"int"	32	0	0	0
5053	1070	"arg_1"	"month_interval"	32	0	1	1
5054	1071	"res_0"	"bigint"	64	0	0	0
5055	1071	"arg_1"	"sec_interval"	19	0	1	1
5056	1072	"res_0"	"int"	32	0	0	0
5057	1072	"arg_1"	"sec_interval"	19	0	1	1
5058	1073	"res_0"	"int"	32	0	0	0
5059	1073	"arg_1"	"sec_interval"	19	0	1	1
5060	1074	"res_0"	"int"	32	0	0	0
5061	1074	"arg_1"	"sec_interval"	19	0	1	1
5062	1075	"res_0"	"int"	32	0	0	0
5063	1075	"arg_1"	"date"	0	0	1	1
5064	1076	"res_0"	"int"	32	0	0	0
5065	1076	"arg_1"	"date"	0	0	1	1
5066	1077	"res_0"	"int"	32	0	0	0
5067	1077	"arg_1"	"date"	0	0	1	1
5068	1078	"res_0"	"int"	32	0	0	0
5069	1078	"arg_1"	"date"	0	0	1	1
5070	1079	"res_0"	"int"	32	0	0	0
5071	1079	"arg_1"	"date"	0	0	1	1
5072	1080	"res_0"	"bigint"	64	0	0	0
5073	1080	"arg_1"	"varchar"	0	0	1	1
5074	1080	"arg_2"	"varchar"	0	0	1	2
5075	1081	"res_0"	"bigint"	64	0	0	0
5076	1081	"arg_1"	"varchar"	0	0	1	1
5077	1081	"arg_2"	"varchar"	0	0	1	2
5078	1082	"res_0"	"bigint"	64	0	0	0
5079	1082	"arg_1"	"varchar"	0	0	1	1
5080	1082	"arg_2"	"varchar"	0	0	1	2
5081	1082	"arg_3"	"bigint"	64	0	1	3
5082	1083	"res_0"	"tinyint"	8	0	0	0
5083	1083	"arg_1"	"char"	0	0	1	1
5084	1083	"arg_2"	"boolean"	1	0	1	2
5085	1084	"res_0"	"smallint"	16	0	0	0
5086	1084	"arg_1"	"char"	0	0	1	1
5087	1084	"arg_2"	"boolean"	1	0	1	2
5088	1085	"res_0"	"int"	32	0	0	0
5089	1085	"arg_1"	"char"	0	0	1	1
5090	1085	"arg_2"	"boolean"	1	0	1	2
5091	1086	"res_0"	"char"	0	0	0	0
5092	1086	"arg_1"	"char"	0	0	1	1
5093	1087	"res_0"	"int"	32	0	0	0
5094	1087	"arg_1"	"char"	0	0	1	1
5095	1087	"arg_2"	"char"	0	0	1	2
5096	1088	"res_0"	"int"	32	0	0	0
5097	1088	"arg_1"	"char"	0	0	1	1
5098	1088	"arg_2"	"char"	0	0	1	2
5099	1088	"arg_3"	"int"	32	0	1	3
5100	1089	"res_0"	"char"	0	0	0	0
5101	1089	"arg_1"	"char"	0	0	1	1
5102	1089	"arg_2"	"int"	32	0	1	2
5103	1090	"res_0"	"char"	0	0	0	0
5104	1090	"arg_1"	"char"	0	0	1	1
5105	1090	"arg_2"	"int"	32	0	1	2
5106	1090	"arg_3"	"int"	32	0	1	3
5107	1091	"res_0"	"boolean"	1	0	0	0
5108	1091	"arg_1"	"char"	0	0	1	1
5109	1091	"arg_2"	"char"	0	0	1	2
5110	1092	"res_0"	"boolean"	1	0	0	0
5111	1092	"arg_1"	"char"	0	0	1	1
5112	1092	"arg_2"	"char"	0	0	1	2
5113	1092	"arg_3"	"char"	0	0	1	3
5114	1093	"res_0"	"boolean"	1	0	0	0
5115	1093	"arg_1"	"char"	0	0	1	1
5116	1093	"arg_2"	"char"	0	0	1	2
5117	1094	"res_0"	"boolean"	1	0	0	0
5118	1094	"arg_1"	"char"	0	0	1	1
5119	1094	"arg_2"	"char"	0	0	1	2
5120	1094	"arg_3"	"char"	0	0	1	3
5121	1095	"res_0"	"boolean"	1	0	0	0
5122	1095	"arg_1"	"char"	0	0	1	1
5123	1095	"arg_2"	"char"	0	0	1	2
5124	1096	"res_0"	"boolean"	1	0	0	0
5125	1096	"arg_1"	"char"	0	0	1	1
5126	1096	"arg_2"	"char"	0	0	1	2
5127	1096	"arg_3"	"char"	0	0	1	3
5128	1097	"res_0"	"boolean"	1	0	0	0
5129	1097	"arg_1"	"char"	0	0	1	1
5130	1097	"arg_2"	"char"	0	0	1	2
5131	1098	"res_0"	"boolean"	1	0	0	0
5132	1098	"arg_1"	"char"	0	0	1	1
5133	1098	"arg_2"	"char"	0	0	1	2
5134	1098	"arg_3"	"char"	0	0	1	3
5135	1099	"res_0"	"int"	32	0	0	0
5136	1099	"arg_1"	"char"	0	0	1	1
5137	1099	"arg_2"	"char"	0	0	1	2
5138	1100	"res_0"	"char"	0	0	0	0
5139	1100	"arg_1"	"char"	0	0	1	1
5140	1100	"arg_2"	"int"	32	0	1	2
5141	1101	"res_0"	"char"	0	0	0	0
5142	1101	"arg_1"	"char"	0	0	1	1
5143	1101	"arg_2"	"char"	0	0	1	2
5144	1102	"res_0"	"int"	32	0	0	0
5145	1102	"arg_1"	"char"	0	0	1	1
5146	1103	"res_0"	"char"	0	0	0	0
5147	1103	"arg_1"	"int"	32	0	1	1
5148	1104	"res_0"	"int"	32	0	0	0
5149	1104	"arg_1"	"char"	0	0	1	1
5150	1105	"res_0"	"char"	0	0	0	0
5151	1105	"arg_1"	"char"	0	0	1	1
5152	1105	"arg_2"	"int"	32	0	1	2
5153	1106	"res_0"	"char"	0	0	0	0
5154	1106	"arg_1"	"char"	0	0	1	1
5155	1106	"arg_2"	"int"	32	0	1	2
5156	1107	"res_0"	"char"	0	0	0	0
5157	1107	"arg_1"	"char"	0	0	1	1
5158	1108	"res_0"	"char"	0	0	0	0
5159	1108	"arg_1"	"char"	0	0	1	1
5160	1109	"res_0"	"char"	0	0	0	0
5161	1109	"arg_1"	"char"	0	0	1	1
5162	1110	"res_0"	"char"	0	0	0	0
5163	1110	"arg_1"	"char"	0	0	1	1
5164	1111	"res_0"	"char"	0	0	0	0
5165	1111	"arg_1"	"char"	0	0	1	1
5166	1112	"res_0"	"char"	0	0	0	0
5167	1112	"arg_1"	"char"	0	0	1	1
5168	1112	"arg_2"	"char"	0	0	1	2
5169	1113	"res_0"	"char"	0	0	0	0
5170	1113	"arg_1"	"char"	0	0	1	1
5171	1114	"res_0"	"char"	0	0	0	0
5172	1114	"arg_1"	"char"	0	0	1	1
5173	1114	"arg_2"	"char"	0	0	1	2
5174	1115	"res_0"	"char"	0	0	0	0
5175	1115	"arg_1"	"char"	0	0	1	1
5176	1116	"res_0"	"char"	0	0	0	0
5177	1116	"arg_1"	"char"	0	0	1	1
5178	1116	"arg_2"	"char"	0	0	1	2
5179	1117	"res_0"	"char"	0	0	0	0
5180	1117	"arg_1"	"char"	0	0	1	1
5181	1117	"arg_2"	"int"	32	0	1	2
5182	1118	"res_0"	"char"	0	0	0	0
5183	1118	"arg_1"	"char"	0	0	1	1
5184	1118	"arg_2"	"int"	32	0	1	2
5185	1118	"arg_3"	"char"	0	0	1	3
5186	1119	"res_0"	"char"	0	0	0	0
5187	1119	"arg_1"	"char"	0	0	1	1
5188	1119	"arg_2"	"int"	32	0	1	2
5189	1120	"res_0"	"char"	0	0	0	0
5190	1120	"arg_1"	"char"	0	0	1	1
5191	1120	"arg_2"	"int"	32	0	1	2
5192	1120	"arg_3"	"char"	0	0	1	3
5193	1121	"res_0"	"char"	0	0	0	0
5194	1121	"arg_1"	"char"	0	0	1	1
5195	1121	"arg_2"	"int"	32	0	1	2
5196	1121	"arg_3"	"int"	32	0	1	3
5197	1121	"arg_4"	"char"	0	0	1	4
5198	1122	"res_0"	"char"	0	0	0	0
5199	1122	"arg_1"	"char"	0	0	1	1
5200	1122	"arg_2"	"char"	0	0	1	2
5201	1122	"arg_3"	"char"	0	0	1	3
5202	1123	"res_0"	"char"	0	0	0	0
5203	1123	"arg_1"	"char"	0	0	1	1
5204	1123	"arg_2"	"int"	32	0	1	2
5205	1124	"res_0"	"char"	0	0	0	0
5206	1124	"arg_1"	"int"	32	0	1	1
5207	1125	"res_0"	"int"	32	0	0	0
5208	1125	"arg_1"	"char"	0	0	1	1
5209	1126	"res_0"	"int"	32	0	0	0
5210	1126	"arg_1"	"char"	0	0	1	1
5211	1127	"res_0"	"int"	32	0	0	0
5212	1127	"arg_1"	"char"	0	0	1	1
5213	1128	"res_0"	"char"	0	0	0	0
5214	1128	"arg_1"	"char"	0	0	1	1
5215	1129	"res_0"	"int"	32	0	0	0
5216	1129	"arg_1"	"char"	0	0	1	1
5217	1129	"arg_2"	"char"	0	0	1	2
5218	1130	"res_0"	"int"	32	0	0	0
5219	1130	"arg_1"	"char"	0	0	1	1
5220	1130	"arg_2"	"char"	0	0	1	2
5221	1131	"res_0"	"int"	32	0	0	0
5222	1131	"arg_1"	"char"	0	0	1	1
5223	1131	"arg_2"	"char"	0	0	1	2
5224	1132	"res_0"	"double"	53	0	0	0
5225	1132	"arg_1"	"char"	0	0	1	1
5226	1132	"arg_2"	"char"	0	0	1	2
5227	1133	"res_0"	"char"	0	0	0	0
5228	1133	"arg_1"	"char"	0	0	1	1
5229	1134	"res_0"	"int"	32	0	0	0
5230	1134	"arg_1"	"char"	0	0	1	1
5231	1134	"arg_2"	"char"	0	0	1	2
5232	1135	"res_0"	"int"	32	0	0	0
5233	1135	"arg_1"	"char"	0	0	1	1
5234	1135	"arg_2"	"char"	0	0	1	2
5235	1135	"arg_3"	"int"	32	0	1	3
5236	1135	"arg_4"	"int"	32	0	1	4
5237	1135	"arg_5"	"int"	32	0	1	5
5238	1136	"res_0"	"tinyint"	8	0	0	0
5239	1136	"arg_1"	"varchar"	0	0	1	1
5240	1136	"arg_2"	"boolean"	1	0	1	2
5241	1137	"res_0"	"smallint"	16	0	0	0
5242	1137	"arg_1"	"varchar"	0	0	1	1
5243	1137	"arg_2"	"boolean"	1	0	1	2
5244	1138	"res_0"	"int"	32	0	0	0
5245	1138	"arg_1"	"varchar"	0	0	1	1
5246	1138	"arg_2"	"boolean"	1	0	1	2
5247	1139	"res_0"	"varchar"	0	0	0	0
5248	1139	"arg_1"	"varchar"	0	0	1	1
5249	1140	"res_0"	"int"	32	0	0	0
5250	1140	"arg_1"	"varchar"	0	0	1	1
5251	1140	"arg_2"	"varchar"	0	0	1	2
5252	1141	"res_0"	"int"	32	0	0	0
5253	1141	"arg_1"	"varchar"	0	0	1	1
5254	1141	"arg_2"	"varchar"	0	0	1	2
5255	1141	"arg_3"	"int"	32	0	1	3
5256	1142	"res_0"	"varchar"	0	0	0	0
5257	1142	"arg_1"	"varchar"	0	0	1	1
5258	1142	"arg_2"	"int"	32	0	1	2
5259	1143	"res_0"	"varchar"	0	0	0	0
5260	1143	"arg_1"	"varchar"	0	0	1	1
5261	1143	"arg_2"	"int"	32	0	1	2
5262	1143	"arg_3"	"int"	32	0	1	3
5263	1144	"res_0"	"boolean"	1	0	0	0
5264	1144	"arg_1"	"varchar"	0	0	1	1
5265	1144	"arg_2"	"varchar"	0	0	1	2
5266	1145	"res_0"	"boolean"	1	0	0	0
5267	1145	"arg_1"	"varchar"	0	0	1	1
5268	1145	"arg_2"	"varchar"	0	0	1	2
5269	1145	"arg_3"	"varchar"	0	0	1	3
5270	1146	"res_0"	"boolean"	1	0	0	0
5271	1146	"arg_1"	"varchar"	0	0	1	1
5272	1146	"arg_2"	"varchar"	0	0	1	2
5273	1147	"res_0"	"boolean"	1	0	0	0
5274	1147	"arg_1"	"varchar"	0	0	1	1
5275	1147	"arg_2"	"varchar"	0	0	1	2
5276	1147	"arg_3"	"varchar"	0	0	1	3
5277	1148	"res_0"	"boolean"	1	0	0	0
5278	1148	"arg_1"	"varchar"	0	0	1	1
5279	1148	"arg_2"	"varchar"	0	0	1	2
5280	1149	"res_0"	"boolean"	1	0	0	0
5281	1149	"arg_1"	"varchar"	0	0	1	1
5282	1149	"arg_2"	"varchar"	0	0	1	2
5283	1149	"arg_3"	"varchar"	0	0	1	3
5284	1150	"res_0"	"boolean"	1	0	0	0
5285	1150	"arg_1"	"varchar"	0	0	1	1
5286	1150	"arg_2"	"varchar"	0	0	1	2
5287	1151	"res_0"	"boolean"	1	0	0	0
5288	1151	"arg_1"	"varchar"	0	0	1	1
5289	1151	"arg_2"	"varchar"	0	0	1	2
5290	1151	"arg_3"	"varchar"	0	0	1	3
5291	1152	"res_0"	"int"	32	0	0	0
5292	1152	"arg_1"	"varchar"	0	0	1	1
5293	1152	"arg_2"	"varchar"	0	0	1	2
5294	1153	"res_0"	"varchar"	0	0	0	0
5295	1153	"arg_1"	"varchar"	0	0	1	1
5296	1153	"arg_2"	"int"	32	0	1	2
5297	1154	"res_0"	"varchar"	0	0	0	0
5298	1154	"arg_1"	"varchar"	0	0	1	1
5299	1154	"arg_2"	"varchar"	0	0	1	2
5300	1155	"res_0"	"int"	32	0	0	0
5301	1155	"arg_1"	"varchar"	0	0	1	1
5302	1156	"res_0"	"varchar"	0	0	0	0
5303	1156	"arg_1"	"int"	32	0	1	1
5304	1157	"res_0"	"int"	32	0	0	0
5305	1157	"arg_1"	"varchar"	0	0	1	1
5306	1158	"res_0"	"varchar"	0	0	0	0
5307	1158	"arg_1"	"varchar"	0	0	1	1
5308	1158	"arg_2"	"int"	32	0	1	2
5309	1159	"res_0"	"varchar"	0	0	0	0
5310	1159	"arg_1"	"varchar"	0	0	1	1
5311	1159	"arg_2"	"int"	32	0	1	2
5312	1160	"res_0"	"varchar"	0	0	0	0
5313	1160	"arg_1"	"varchar"	0	0	1	1
5314	1161	"res_0"	"varchar"	0	0	0	0
5315	1161	"arg_1"	"varchar"	0	0	1	1
5316	1162	"res_0"	"varchar"	0	0	0	0
5317	1162	"arg_1"	"varchar"	0	0	1	1
5318	1163	"res_0"	"varchar"	0	0	0	0
5319	1163	"arg_1"	"varchar"	0	0	1	1
5320	1164	"res_0"	"varchar"	0	0	0	0
5321	1164	"arg_1"	"varchar"	0	0	1	1
5322	1165	"res_0"	"varchar"	0	0	0	0
5323	1165	"arg_1"	"varchar"	0	0	1	1
5324	1165	"arg_2"	"varchar"	0	0	1	2
5325	1166	"res_0"	"varchar"	0	0	0	0
5326	1166	"arg_1"	"varchar"	0	0	1	1
5327	1167	"res_0"	"varchar"	0	0	0	0
5328	1167	"arg_1"	"varchar"	0	0	1	1
5329	1167	"arg_2"	"varchar"	0	0	1	2
5330	1168	"res_0"	"varchar"	0	0	0	0
5331	1168	"arg_1"	"varchar"	0	0	1	1
5332	1169	"res_0"	"varchar"	0	0	0	0
5333	1169	"arg_1"	"varchar"	0	0	1	1
5334	1169	"arg_2"	"varchar"	0	0	1	2
5335	1170	"res_0"	"varchar"	0	0	0	0
5336	1170	"arg_1"	"varchar"	0	0	1	1
5337	1170	"arg_2"	"int"	32	0	1	2
5338	1171	"res_0"	"varchar"	0	0	0	0
5339	1171	"arg_1"	"varchar"	0	0	1	1
5340	1171	"arg_2"	"int"	32	0	1	2
5341	1171	"arg_3"	"varchar"	0	0	1	3
5342	1172	"res_0"	"varchar"	0	0	0	0
5343	1172	"arg_1"	"varchar"	0	0	1	1
5344	1172	"arg_2"	"int"	32	0	1	2
5345	1173	"res_0"	"varchar"	0	0	0	0
5346	1173	"arg_1"	"varchar"	0	0	1	1
5347	1173	"arg_2"	"int"	32	0	1	2
5348	1173	"arg_3"	"varchar"	0	0	1	3
5349	1174	"res_0"	"varchar"	0	0	0	0
5350	1174	"arg_1"	"varchar"	0	0	1	1
5351	1174	"arg_2"	"int"	32	0	1	2
5352	1174	"arg_3"	"int"	32	0	1	3
5353	1174	"arg_4"	"varchar"	0	0	1	4
5354	1175	"res_0"	"varchar"	0	0	0	0
5355	1175	"arg_1"	"varchar"	0	0	1	1
5356	1175	"arg_2"	"varchar"	0	0	1	2
5357	1175	"arg_3"	"varchar"	0	0	1	3
5358	1176	"res_0"	"varchar"	0	0	0	0
5359	1176	"arg_1"	"varchar"	0	0	1	1
5360	1176	"arg_2"	"int"	32	0	1	2
5361	1177	"res_0"	"varchar"	0	0	0	0
5362	1177	"arg_1"	"int"	32	0	1	1
5363	1178	"res_0"	"int"	32	0	0	0
5364	1178	"arg_1"	"varchar"	0	0	1	1
5365	1179	"res_0"	"int"	32	0	0	0
5366	1179	"arg_1"	"varchar"	0	0	1	1
5367	1180	"res_0"	"int"	32	0	0	0
5368	1180	"arg_1"	"varchar"	0	0	1	1
5369	1181	"res_0"	"varchar"	0	0	0	0
5370	1181	"arg_1"	"varchar"	0	0	1	1
5371	1182	"res_0"	"int"	32	0	0	0
5372	1182	"arg_1"	"varchar"	0	0	1	1
5373	1182	"arg_2"	"varchar"	0	0	1	2
5374	1183	"res_0"	"int"	32	0	0	0
5375	1183	"arg_1"	"varchar"	0	0	1	1
5376	1183	"arg_2"	"varchar"	0	0	1	2
5377	1184	"res_0"	"int"	32	0	0	0
5378	1184	"arg_1"	"varchar"	0	0	1	1
5379	1184	"arg_2"	"varchar"	0	0	1	2
5380	1185	"res_0"	"double"	53	0	0	0
5381	1185	"arg_1"	"varchar"	0	0	1	1
5382	1185	"arg_2"	"varchar"	0	0	1	2
5383	1186	"res_0"	"varchar"	0	0	0	0
5384	1186	"arg_1"	"varchar"	0	0	1	1
5385	1187	"res_0"	"int"	32	0	0	0
5386	1187	"arg_1"	"varchar"	0	0	1	1
5387	1187	"arg_2"	"varchar"	0	0	1	2
5388	1188	"res_0"	"int"	32	0	0	0
5389	1188	"arg_1"	"varchar"	0	0	1	1
5390	1188	"arg_2"	"varchar"	0	0	1	2
5391	1188	"arg_3"	"int"	32	0	1	3
5392	1188	"arg_4"	"int"	32	0	1	4
5393	1188	"arg_5"	"int"	32	0	1	5
5394	1189	"res_0"	"tinyint"	8	0	0	0
5395	1189	"arg_1"	"clob"	0	0	1	1
5396	1189	"arg_2"	"boolean"	1	0	1	2
5397	1190	"res_0"	"smallint"	16	0	0	0
5398	1190	"arg_1"	"clob"	0	0	1	1
5399	1190	"arg_2"	"boolean"	1	0	1	2
5400	1191	"res_0"	"int"	32	0	0	0
5401	1191	"arg_1"	"clob"	0	0	1	1
5402	1191	"arg_2"	"boolean"	1	0	1	2
5403	1192	"res_0"	"clob"	0	0	0	0
5404	1192	"arg_1"	"clob"	0	0	1	1
5405	1193	"res_0"	"int"	32	0	0	0
5406	1193	"arg_1"	"clob"	0	0	1	1
5407	1193	"arg_2"	"clob"	0	0	1	2
5408	1194	"res_0"	"int"	32	0	0	0
5409	1194	"arg_1"	"clob"	0	0	1	1
5410	1194	"arg_2"	"clob"	0	0	1	2
5411	1194	"arg_3"	"int"	32	0	1	3
5412	1195	"res_0"	"clob"	0	0	0	0
5413	1195	"arg_1"	"clob"	0	0	1	1
5414	1195	"arg_2"	"int"	32	0	1	2
5415	1196	"res_0"	"clob"	0	0	0	0
5416	1196	"arg_1"	"clob"	0	0	1	1
5417	1196	"arg_2"	"int"	32	0	1	2
5418	1196	"arg_3"	"int"	32	0	1	3
5419	1197	"res_0"	"boolean"	1	0	0	0
5420	1197	"arg_1"	"clob"	0	0	1	1
5421	1197	"arg_2"	"clob"	0	0	1	2
5422	1198	"res_0"	"boolean"	1	0	0	0
5423	1198	"arg_1"	"clob"	0	0	1	1
5424	1198	"arg_2"	"clob"	0	0	1	2
5425	1198	"arg_3"	"clob"	0	0	1	3
5426	1199	"res_0"	"boolean"	1	0	0	0
5427	1199	"arg_1"	"clob"	0	0	1	1
5428	1199	"arg_2"	"clob"	0	0	1	2
5429	1200	"res_0"	"boolean"	1	0	0	0
5430	1200	"arg_1"	"clob"	0	0	1	1
5431	1200	"arg_2"	"clob"	0	0	1	2
5432	1200	"arg_3"	"clob"	0	0	1	3
5433	1201	"res_0"	"boolean"	1	0	0	0
5434	1201	"arg_1"	"clob"	0	0	1	1
5435	1201	"arg_2"	"clob"	0	0	1	2
5436	1202	"res_0"	"boolean"	1	0	0	0
5437	1202	"arg_1"	"clob"	0	0	1	1
5438	1202	"arg_2"	"clob"	0	0	1	2
5439	1202	"arg_3"	"clob"	0	0	1	3
5440	1203	"res_0"	"boolean"	1	0	0	0
5441	1203	"arg_1"	"clob"	0	0	1	1
5442	1203	"arg_2"	"clob"	0	0	1	2
5443	1204	"res_0"	"boolean"	1	0	0	0
5444	1204	"arg_1"	"clob"	0	0	1	1
5445	1204	"arg_2"	"clob"	0	0	1	2
5446	1204	"arg_3"	"clob"	0	0	1	3
5447	1205	"res_0"	"int"	32	0	0	0
5448	1205	"arg_1"	"clob"	0	0	1	1
5449	1205	"arg_2"	"clob"	0	0	1	2
5450	1206	"res_0"	"clob"	0	0	0	0
5451	1206	"arg_1"	"clob"	0	0	1	1
5452	1206	"arg_2"	"int"	32	0	1	2
5453	1207	"res_0"	"clob"	0	0	0	0
5454	1207	"arg_1"	"clob"	0	0	1	1
5455	1207	"arg_2"	"clob"	0	0	1	2
5456	1208	"res_0"	"int"	32	0	0	0
5457	1208	"arg_1"	"clob"	0	0	1	1
5458	1209	"res_0"	"clob"	0	0	0	0
5459	1209	"arg_1"	"int"	32	0	1	1
5460	1210	"res_0"	"int"	32	0	0	0
5461	1210	"arg_1"	"clob"	0	0	1	1
5462	1211	"res_0"	"clob"	0	0	0	0
5463	1211	"arg_1"	"clob"	0	0	1	1
5464	1211	"arg_2"	"int"	32	0	1	2
5465	1212	"res_0"	"clob"	0	0	0	0
5466	1212	"arg_1"	"clob"	0	0	1	1
5467	1212	"arg_2"	"int"	32	0	1	2
5468	1213	"res_0"	"clob"	0	0	0	0
5469	1213	"arg_1"	"clob"	0	0	1	1
5470	1214	"res_0"	"clob"	0	0	0	0
5471	1214	"arg_1"	"clob"	0	0	1	1
5472	1215	"res_0"	"clob"	0	0	0	0
5473	1215	"arg_1"	"clob"	0	0	1	1
5474	1216	"res_0"	"clob"	0	0	0	0
5475	1216	"arg_1"	"clob"	0	0	1	1
5476	1217	"res_0"	"clob"	0	0	0	0
5477	1217	"arg_1"	"clob"	0	0	1	1
5478	1218	"res_0"	"clob"	0	0	0	0
5479	1218	"arg_1"	"clob"	0	0	1	1
5480	1218	"arg_2"	"clob"	0	0	1	2
5481	1219	"res_0"	"clob"	0	0	0	0
5482	1219	"arg_1"	"clob"	0	0	1	1
5483	1220	"res_0"	"clob"	0	0	0	0
5484	1220	"arg_1"	"clob"	0	0	1	1
5485	1220	"arg_2"	"clob"	0	0	1	2
5486	1221	"res_0"	"clob"	0	0	0	0
5487	1221	"arg_1"	"clob"	0	0	1	1
5488	1222	"res_0"	"clob"	0	0	0	0
5489	1222	"arg_1"	"clob"	0	0	1	1
5490	1222	"arg_2"	"clob"	0	0	1	2
5491	1223	"res_0"	"clob"	0	0	0	0
5492	1223	"arg_1"	"clob"	0	0	1	1
5493	1223	"arg_2"	"int"	32	0	1	2
5494	1224	"res_0"	"clob"	0	0	0	0
5495	1224	"arg_1"	"clob"	0	0	1	1
5496	1224	"arg_2"	"int"	32	0	1	2
5497	1224	"arg_3"	"clob"	0	0	1	3
5498	1225	"res_0"	"clob"	0	0	0	0
5499	1225	"arg_1"	"clob"	0	0	1	1
5500	1225	"arg_2"	"int"	32	0	1	2
5501	1226	"res_0"	"clob"	0	0	0	0
5502	1226	"arg_1"	"clob"	0	0	1	1
5503	1226	"arg_2"	"int"	32	0	1	2
5504	1226	"arg_3"	"clob"	0	0	1	3
5505	1227	"res_0"	"clob"	0	0	0	0
5506	1227	"arg_1"	"clob"	0	0	1	1
5507	1227	"arg_2"	"int"	32	0	1	2
5508	1227	"arg_3"	"int"	32	0	1	3
5509	1227	"arg_4"	"clob"	0	0	1	4
5510	1228	"res_0"	"clob"	0	0	0	0
5511	1228	"arg_1"	"clob"	0	0	1	1
5512	1228	"arg_2"	"clob"	0	0	1	2
5513	1228	"arg_3"	"clob"	0	0	1	3
5514	1229	"res_0"	"clob"	0	0	0	0
5515	1229	"arg_1"	"clob"	0	0	1	1
5516	1229	"arg_2"	"int"	32	0	1	2
5517	1230	"res_0"	"clob"	0	0	0	0
5518	1230	"arg_1"	"int"	32	0	1	1
5519	1231	"res_0"	"int"	32	0	0	0
5520	1231	"arg_1"	"clob"	0	0	1	1
5521	1232	"res_0"	"int"	32	0	0	0
5522	1232	"arg_1"	"clob"	0	0	1	1
5523	1233	"res_0"	"int"	32	0	0	0
5524	1233	"arg_1"	"clob"	0	0	1	1
5525	1234	"res_0"	"clob"	0	0	0	0
5526	1234	"arg_1"	"clob"	0	0	1	1
5527	1235	"res_0"	"int"	32	0	0	0
5528	1235	"arg_1"	"clob"	0	0	1	1
5529	1235	"arg_2"	"clob"	0	0	1	2
5530	1236	"res_0"	"int"	32	0	0	0
5531	1236	"arg_1"	"clob"	0	0	1	1
5532	1236	"arg_2"	"clob"	0	0	1	2
5533	1237	"res_0"	"int"	32	0	0	0
5534	1237	"arg_1"	"clob"	0	0	1	1
5535	1237	"arg_2"	"clob"	0	0	1	2
5536	1238	"res_0"	"double"	53	0	0	0
5537	1238	"arg_1"	"clob"	0	0	1	1
5538	1238	"arg_2"	"clob"	0	0	1	2
5539	1239	"res_0"	"clob"	0	0	0	0
5540	1239	"arg_1"	"clob"	0	0	1	1
5541	1240	"res_0"	"int"	32	0	0	0
5542	1240	"arg_1"	"clob"	0	0	1	1
5543	1240	"arg_2"	"clob"	0	0	1	2
5544	1241	"res_0"	"int"	32	0	0	0
5545	1241	"arg_1"	"clob"	0	0	1	1
5546	1241	"arg_2"	"clob"	0	0	1	2
5547	1241	"arg_3"	"int"	32	0	1	3
5548	1241	"arg_4"	"int"	32	0	1	4
5549	1241	"arg_5"	"int"	32	0	1	5
5550	1242	"res_0"	"table"	0	0	0	0
5551	1242	"arg_1"	"varchar"	0	0	1	1
5552	1242	"arg_2"	"varchar"	0	0	1	2
5553	1242	"arg_3"	"varchar"	0	0	1	3
5554	1242	"arg_4"	"varchar"	0	0	1	4
5555	1242	"arg_5"	"varchar"	0	0	1	5
5556	1242	"arg_6"	"varchar"	0	0	1	6
5557	1242	"arg_7"	"bigint"	64	0	1	7
5558	1242	"arg_8"	"bigint"	64	0	1	8
5559	1243	"res_0"	"table"	0	0	0	0
5560	1243	"arg_1"	"varchar"	0	0	1	1
5561	1243	"arg_2"	"varchar"	0	0	1	2
5562	1243	"arg_3"	"varchar"	0	0	1	3
5563	1243	"arg_4"	"varchar"	0	0	1	4
5564	1243	"arg_5"	"varchar"	0	0	1	5
5565	1243	"arg_6"	"bigint"	64	0	1	6
5566	1243	"arg_7"	"bigint"	64	0	1	7
5567	1244	"res_0"	"table"	0	0	0	0
5568	1244	"arg_1"	"varchar"	0	0	1	1
5569	1244	"arg_2"	"varchar"	0	0	1	2
5570	29	"res"	"boolean"	1	0	0	0
5571	29	"arg"	"oid"	63	0	1	1
5572	41	"res"	"any"	0	0	0	0
5573	41	"arg"	"any"	0	0	1	1
5574	42	"res"	"boolean"	1	0	0	0
5575	42	"arg"	"any"	0	0	1	1
5576	43	"res"	"boolean"	1	0	0	0
5577	43	"arg"	"any"	0	0	1	1
5578	48	"res"	"any"	0	0	0	0
5579	48	"arg"	"any"	0	0	1	1
5580	49	"res"	"any"	0	0	0	0
5581	49	"arg"	"any"	0	0	1	1
5582	53	"res"	"hugeint"	128	0	0	0
5583	53	"arg"	"tinyint"	8	0	1	1
5584	54	"res"	"hugeint"	128	0	0	0
5585	54	"arg"	"smallint"	16	0	1	1
5586	55	"res"	"hugeint"	128	0	0	0
5587	55	"arg"	"int"	32	0	1	1
5588	56	"res"	"hugeint"	128	0	0	0
5589	56	"arg"	"bigint"	64	0	1	1
5590	57	"res"	"hugeint"	128	0	0	0
5591	57	"arg"	"hugeint"	128	0	1	1
5592	58	"res"	"wrd"	64	0	0	0
5593	58	"arg"	"wrd"	64	0	1	1
5594	59	"res"	"decimal"	39	0	0	0
5595	59	"arg"	"decimal"	2	0	1	1
5596	60	"res"	"decimal"	39	0	0	0
5597	60	"arg"	"decimal"	4	0	1	1
5598	61	"res"	"decimal"	39	0	0	0
5599	61	"arg"	"decimal"	9	0	1	1
5600	62	"res"	"decimal"	39	0	0	0
5601	62	"arg"	"decimal"	18	0	1	1
5602	63	"res"	"decimal"	39	0	0	0
5603	63	"arg"	"decimal"	39	0	1	1
5604	64	"res"	"hugeint"	128	0	0	0
5605	64	"arg"	"tinyint"	8	0	1	1
5606	65	"res"	"hugeint"	128	0	0	0
5607	65	"arg"	"smallint"	16	0	1	1
5608	66	"res"	"hugeint"	128	0	0	0
5609	66	"arg"	"int"	32	0	1	1
5610	67	"res"	"hugeint"	128	0	0	0
5611	67	"arg"	"bigint"	64	0	1	1
5612	68	"res"	"hugeint"	128	0	0	0
5613	68	"arg"	"hugeint"	128	0	1	1
5614	69	"res"	"decimal"	39	0	0	0
5615	69	"arg"	"decimal"	2	0	1	1
5616	70	"res"	"decimal"	39	0	0	0
5617	70	"arg"	"decimal"	4	0	1	1
5618	71	"res"	"decimal"	39	0	0	0
5619	71	"arg"	"decimal"	9	0	1	1
5620	72	"res"	"decimal"	39	0	0	0
5621	72	"arg"	"decimal"	18	0	1	1
5622	73	"res"	"decimal"	39	0	0	0
5623	73	"arg"	"decimal"	39	0	1	1
5624	88	"res"	"real"	24	0	0	0
5625	88	"arg"	"real"	24	0	1	1
5626	89	"res"	"real"	24	0	0	0
5627	89	"arg"	"real"	24	0	1	1
5628	90	"res"	"double"	53	0	0	0
5629	90	"arg"	"double"	53	0	1	1
5630	91	"res"	"double"	53	0	0	0
5631	91	"arg"	"double"	53	0	1	1
5632	92	"res"	"double"	53	0	0	0
5633	92	"arg"	"double"	53	0	1	1
5634	93	"res"	"wrd"	64	0	0	0
5635	94	"res"	"wrd"	64	0	0	0
5658	5657	"name"	"varchar"	1024	0	0	0
5659	5657	"value"	"varchar"	2048	0	0	1
5661	5660	"name"	"varchar"	1024	0	0	0
5667	5666	"name"	"varchar"	2048	0	0	0
5687	5686	"val"	"clob"	0	0	1	0
5688	5686	"pat"	"clob"	0	0	1	1
5689	5686	"esc"	"clob"	0	0	1	2
5692	5691	"val"	"clob"	0	0	1	0
5693	5691	"pat"	"clob"	0	0	1	1
5694	5691	"esc"	"clob"	0	0	1	2
5697	5696	"result"	"double"	53	0	0	0
5698	5696	"r"	"double"	53	0	1	1
5701	5700	"result"	"double"	53	0	0	0
5702	5700	"d"	"double"	53	0	1	1
5708	5707	"result"	"clob"	0	0	0	0
5709	5707	"theurl"	"url"	0	0	1	1
5712	5711	"result"	"clob"	0	0	0	0
5713	5711	"theurl"	"url"	0	0	1	1
5716	5715	"result"	"clob"	0	0	0	0
5717	5715	"theurl"	"url"	0	0	1	1
5720	5719	"result"	"clob"	0	0	0	0
5721	5719	"theurl"	"url"	0	0	1	1
5724	5723	"result"	"clob"	0	0	0	0
5725	5723	"theurl"	"url"	0	0	1	1
5728	5727	"result"	"clob"	0	0	0	0
5729	5727	"theurl"	"url"	0	0	1	1
5732	5731	"result"	"clob"	0	0	0	0
5733	5731	"theurl"	"url"	0	0	1	1
5736	5735	"result"	"clob"	0	0	0	0
5737	5735	"theurl"	"url"	0	0	1	1
5740	5739	"result"	"clob"	0	0	0	0
5741	5739	"theurl"	"url"	0	0	1	1
5744	5743	"result"	"clob"	0	0	0	0
5745	5743	"theurl"	"url"	0	0	1	1
5748	5747	"result"	"clob"	0	0	0	0
5749	5747	"theurl"	"url"	0	0	1	1
5752	5751	"result"	"clob"	0	0	0	0
5753	5751	"theurl"	"url"	0	0	1	1
5756	5755	"result"	"clob"	0	0	0	0
5757	5755	"theurl"	"url"	0	0	1	1
5760	5759	"result"	"boolean"	1	0	0	0
5761	5759	"theurl"	"url"	0	0	1	1
5764	5763	"result"	"url"	0	0	0	0
5765	5763	"protocol"	"clob"	0	0	1	1
5766	5763	"hostname"	"clob"	0	0	1	2
5767	5763	"port"	"int"	32	0	1	3
5768	5763	"file"	"clob"	0	0	1	4
5771	5770	"result"	"url"	0	0	0	0
5772	5770	"protocol"	"clob"	0	0	1	1
5773	5770	"hostname"	"clob"	0	0	1	2
5774	5770	"file"	"clob"	0	0	1	3
5777	5776	"result"	"date"	0	0	0	0
5778	5776	"s"	"clob"	0	0	1	1
5779	5776	"format"	"clob"	0	0	1	2
5782	5781	"result"	"clob"	0	0	0	0
5783	5781	"d"	"date"	0	0	1	1
5784	5781	"format"	"clob"	0	0	1	2
5788	5787	"result"	"inet"	0	0	0	0
5789	5787	"p"	"inet"	0	0	1	1
5792	5791	"result"	"clob"	0	0	0	0
5793	5791	"p"	"inet"	0	0	1	1
5796	5795	"result"	"int"	32	0	0	0
5797	5795	"p"	"inet"	0	0	1	1
5800	5799	"result"	"inet"	0	0	0	0
5801	5799	"p"	"inet"	0	0	1	1
5802	5799	"mask"	"int"	32	0	1	2
5805	5804	"result"	"inet"	0	0	0	0
5806	5804	"p"	"inet"	0	0	1	1
5809	5808	"result"	"inet"	0	0	0	0
5810	5808	"p"	"inet"	0	0	1	1
5813	5812	"result"	"inet"	0	0	0	0
5814	5812	"p"	"inet"	0	0	1	1
5817	5816	"result"	"clob"	0	0	0	0
5818	5816	"p"	"inet"	0	0	1	1
5821	5820	"result"	"clob"	0	0	0	0
5822	5820	"p"	"inet"	0	0	1	1
5825	5824	"id"	"oid"	63	0	0	0
5826	5824	"owner"	"clob"	0	0	0	1
5827	5824	"defined"	"timestamp"	7	0	0	2
5828	5824	"query"	"clob"	0	0	0	3
5829	5824	"pipe"	"clob"	0	0	0	4
5830	5824	"mal"	"int"	32	0	0	5
5831	5824	"optimize"	"bigint"	64	0	0	6
5834	5833	"id"	"oid"	63	0	0	0
5835	5833	"start"	"timestamp"	7	0	0	1
5836	5833	"stop"	"timestamp"	7	0	0	2
5837	5833	"arguments"	"clob"	0	0	0	3
5838	5833	"tuples"	"wrd"	64	0	0	4
5839	5833	"run"	"bigint"	64	0	0	5
5840	5833	"ship"	"bigint"	64	0	0	6
5841	5833	"cpu"	"int"	32	0	0	7
5842	5833	"io"	"int"	32	0	0	8
5843	5833	"space"	"bigint"	64	0	0	9
5889	5888	"threshold"	"smallint"	16	0	1	0
5894	5893	"event"	"int"	32	0	0	0
5895	5893	"clk"	"varchar"	20	0	0	1
5896	5893	"pc"	"varchar"	50	0	0	2
5897	5893	"thread"	"int"	32	0	0	3
5898	5893	"user"	"int"	32	0	0	4
5899	5893	"ticks"	"bigint"	64	0	0	5
5900	5893	"reads"	"bigint"	64	0	0	6
5901	5893	"writes"	"bigint"	64	0	0	7
5902	5893	"rbytes"	"bigint"	64	0	0	8
5903	5893	"wbytes"	"bigint"	64	0	0	9
5904	5893	"type"	"clob"	0	0	0	10
5905	5893	"stmt"	"clob"	0	0	0	11
5922	5921	"sys"	"clob"	0	0	1	0
5923	5921	"tab"	"clob"	0	0	1	1
5926	5925	"sys"	"clob"	0	0	1	0
5927	5925	"tab"	"clob"	0	0	1	1
5930	5929	"sys"	"clob"	0	0	1	0
5931	5929	"tab"	"clob"	0	0	1	1
5934	5933	"sys"	"clob"	0	0	1	0
5935	5933	"tab"	"clob"	0	0	1	1
5938	5937	"sys"	"clob"	0	0	1	0
5939	5937	"tab"	"clob"	0	0	1	1
5942	5941	"sch"	"varchar"	100	0	0	0
5943	5941	"usr"	"varchar"	100	0	0	1
5944	5941	"dep_type"	"varchar"	32	0	0	2
5947	5946	"sch"	"varchar"	100	0	0	0
5948	5946	"usr"	"varchar"	100	0	0	1
5949	5946	"dep_type"	"varchar"	32	0	0	2
5952	5951	"sch"	"varchar"	100	0	0	0
5953	5951	"usr"	"varchar"	100	0	0	1
5954	5951	"dep_type"	"varchar"	32	0	0	2
5957	5956	"sch"	"varchar"	100	0	0	0
5958	5956	"usr"	"varchar"	100	0	0	1
5959	5956	"dep_type"	"varchar"	32	0	0	2
5962	5961	"sch"	"varchar"	100	0	0	0
5963	5961	"usr"	"varchar"	100	0	0	1
5964	5961	"dep_type"	"varchar"	32	0	0	2
5967	5966	"sch"	"varchar"	100	0	0	0
5968	5966	"usr"	"varchar"	100	0	0	1
5969	5966	"dep_type"	"varchar"	32	0	0	2
5972	5971	"sch"	"varchar"	100	0	0	0
5973	5971	"usr"	"varchar"	100	0	0	1
5974	5971	"dep_type"	"varchar"	32	0	0	2
5977	5976	"sch"	"varchar"	100	0	0	0
5978	5976	"usr"	"varchar"	100	0	0	1
5979	5976	"dep_type"	"varchar"	32	0	0	2
5982	5981	"sch"	"varchar"	100	0	0	0
5983	5981	"usr"	"varchar"	100	0	0	1
5984	5981	"dep_type"	"varchar"	32	0	0	2
5987	5986	"sch"	"varchar"	100	0	0	0
5988	5986	"usr"	"varchar"	100	0	0	1
5989	5986	"dep_type"	"varchar"	32	0	0	2
5992	5991	"sch"	"varchar"	100	0	0	0
5993	5991	"usr"	"varchar"	100	0	0	1
5994	5991	"dep_type"	"varchar"	32	0	0	2
5997	5996	"sch"	"varchar"	100	0	0	0
5998	5996	"usr"	"varchar"	100	0	0	1
5999	5996	"dep_type"	"varchar"	32	0	0	2
6002	6001	"sch"	"varchar"	100	0	0	0
6003	6001	"usr"	"varchar"	100	0	0	1
6004	6001	"dep_type"	"varchar"	32	0	0	2
6007	6006	"sch"	"varchar"	100	0	0	0
6008	6006	"usr"	"varchar"	100	0	0	1
6009	6006	"dep_type"	"varchar"	32	0	0	2
6012	6011	"sch"	"varchar"	100	0	0	0
6013	6011	"usr"	"varchar"	100	0	0	1
6014	6011	"dep_type"	"varchar"	32	0	0	2
6017	6016	"sch"	"varchar"	100	0	0	0
6018	6016	"usr"	"varchar"	100	0	0	1
6019	6016	"dep_type"	"varchar"	32	0	0	2
6022	6021	"sch"	"varchar"	100	0	0	0
6023	6021	"usr"	"varchar"	100	0	0	1
6024	6021	"dep_type"	"varchar"	32	0	0	2
6027	6026	"result"	"clob"	0	0	0	0
6028	6026	"username"	"clob"	0	0	1	1
6031	6030	"user"	"clob"	0	0	0	0
6032	6030	"login"	"timestamp"	7	0	0	1
6033	6030	"sessiontimeout"	"bigint"	64	0	0	2
6034	6030	"lastcommand"	"timestamp"	7	0	0	3
6035	6030	"querytimeout"	"bigint"	64	0	0	4
6036	6030	"active"	"boolean"	1	0	0	5
6047	6046	"delay"	"tinyint"	8	0	1	0
6050	6049	"delay"	"tinyint"	8	0	1	0
6051	6049	"force"	"boolean"	1	0	1	1
6054	6053	"query"	"bigint"	64	0	1	0
6057	6056	"query"	"bigint"	64	0	1	0
6058	6056	"session"	"bigint"	64	0	1	1
6061	6060	"timeout"	"bigint"	64	0	1	0
6064	6063	"result"	"varchar"	32	0	0	0
6065	6063	"s1"	"varchar"	32	0	1	1
6066	6063	"st"	"int"	32	0	1	2
6067	6063	"len"	"int"	32	0	1	3
6068	6063	"s3"	"varchar"	32	0	1	4
6071	6070	"result"	"double"	53	0	0	0
6072	6070	"num"	"double"	53	0	1	1
6073	6070	"prc"	"int"	32	0	1	2
6076	6075	"result"	"double"	53	0	0	0
6077	6075	"num"	"double"	53	0	1	1
6078	6075	"prc"	"int"	32	0	1	2
6079	6075	"truncat"	"int"	32	0	1	3
6082	6081	"result"	"clob"	0	0	0	0
6083	6081	"num"	"double"	53	0	1	1
6084	6081	"prc"	"int"	32	0	1	2
6085	6081	"truncat"	"int"	32	0	1	3
6088	6087	"result"	"double"	53	0	0	0
6089	6087	"pdec"	"double"	53	0	1	1
6090	6087	"pradius"	"double"	53	0	1	2
6093	6092	"result"	"oid"	63	0	0	0
6094	6092	"x"	"int"	32	0	1	1
6095	6092	"y"	"int"	32	0	1	2
6098	6097	"result"	"int"	32	0	0	0
6099	6097	"z"	"oid"	63	0	1	1
6102	6101	"result"	"int"	32	0	0	0
6103	6101	"z"	"oid"	63	0	1	1
6106	6105	"rewrite"	"clob"	0	0	0	0
6107	6105	"count"	"int"	32	0	0	1
6110	6109	"query"	"clob"	0	0	0	0
6111	6109	"count"	"int"	32	0	0	1
6114	6113	"filename"	"clob"	0	0	1	0
6117	6116	"name"	"clob"	0	0	0	0
6118	6116	"def"	"clob"	0	0	0	1
6119	6116	"status"	"clob"	0	0	0	2
6127	6126	"name"	"clob"	0	0	0	0
6128	6126	"value"	"clob"	0	0	0	1
6135	6134	"id"	"int"	32	0	0	0
6136	6134	"name"	"clob"	0	0	0	1
6137	6134	"htype"	"clob"	0	0	0	2
6138	6134	"ttype"	"clob"	0	0	0	3
6139	6134	"count"	"bigint"	64	0	0	4
6140	6134	"refcnt"	"int"	32	0	0	5
6141	6134	"lrefcnt"	"int"	32	0	0	6
6142	6134	"location"	"clob"	0	0	0	7
6143	6134	"heat"	"int"	32	0	0	8
6144	6134	"dirty"	"clob"	0	0	0	9
6145	6134	"status"	"clob"	0	0	0	10
6146	6134	"kind"	"clob"	0	0	0	11
6149	6148	"ra_stmt"	"clob"	0	0	1	0
6150	6148	"opt"	"boolean"	1	0	1	1
6153	6152	"qtag"	"bigint"	64	0	0	0
6154	6152	"user"	"clob"	0	0	0	1
6155	6152	"started"	"timestamp"	7	0	0	2
6156	6152	"estimate"	"timestamp"	7	0	0	3
6157	6152	"progress"	"int"	32	0	0	4
6158	6152	"status"	"clob"	0	0	0	5
6159	6152	"tag"	"oid"	63	0	0	6
6160	6152	"query"	"clob"	0	0	0	7
6173	6172	"tag"	"int"	32	0	1	0
6176	6175	"tag"	"int"	32	0	1	0
6179	6178	"tag"	"int"	32	0	1	0
6182	6181	"tag"	"bigint"	64	0	1	0
6185	6184	"tag"	"bigint"	64	0	1	0
6188	6187	"tag"	"bigint"	64	0	1	0
6191	6190	"result"	"double"	53	0	0	0
6192	6190	"val"	"tinyint"	8	0	1	1
6195	6194	"result"	"double"	53	0	0	0
6196	6194	"val"	"smallint"	16	0	1	1
6199	6198	"result"	"double"	53	0	0	0
6200	6198	"val"	"int"	32	0	1	1
6203	6202	"result"	"double"	53	0	0	0
6204	6202	"val"	"wrd"	64	0	1	1
6207	6206	"result"	"double"	53	0	0	0
6208	6206	"val"	"bigint"	64	0	1	1
6211	6210	"result"	"double"	53	0	0	0
6212	6210	"val"	"real"	24	0	1	1
6215	6214	"result"	"double"	53	0	0	0
6216	6214	"val"	"double"	53	0	1	1
6219	6218	"result"	"double"	53	0	0	0
6220	6218	"val"	"date"	0	0	1	1
6223	6222	"result"	"double"	53	0	0	0
6224	6222	"val"	"time"	1	0	1	1
6227	6226	"result"	"double"	53	0	0	0
6228	6226	"val"	"timestamp"	7	0	1	1
6231	6230	"result"	"double"	53	0	0	0
6232	6230	"val"	"tinyint"	8	0	1	1
6235	6234	"result"	"double"	53	0	0	0
6236	6234	"val"	"smallint"	16	0	1	1
6239	6238	"result"	"double"	53	0	0	0
6240	6238	"val"	"int"	32	0	1	1
6243	6242	"result"	"double"	53	0	0	0
6244	6242	"val"	"wrd"	64	0	1	1
6247	6246	"result"	"double"	53	0	0	0
6248	6246	"val"	"bigint"	64	0	1	1
6251	6250	"result"	"double"	53	0	0	0
6252	6250	"val"	"real"	24	0	1	1
6255	6254	"result"	"double"	53	0	0	0
6256	6254	"val"	"double"	53	0	1	1
6259	6258	"result"	"double"	53	0	0	0
6260	6258	"val"	"date"	0	0	1	1
6263	6262	"result"	"double"	53	0	0	0
6264	6262	"val"	"time"	1	0	1	1
6267	6266	"result"	"double"	53	0	0	0
6268	6266	"val"	"timestamp"	7	0	1	1
6271	6270	"result"	"double"	53	0	0	0
6272	6270	"val"	"tinyint"	8	0	1	1
6275	6274	"result"	"double"	53	0	0	0
6276	6274	"val"	"smallint"	16	0	1	1
6279	6278	"result"	"double"	53	0	0	0
6280	6278	"val"	"int"	32	0	1	1
6283	6282	"result"	"double"	53	0	0	0
6284	6282	"val"	"wrd"	64	0	1	1
6287	6286	"result"	"double"	53	0	0	0
6288	6286	"val"	"bigint"	64	0	1	1
6291	6290	"result"	"double"	53	0	0	0
6292	6290	"val"	"real"	24	0	1	1
6295	6294	"result"	"double"	53	0	0	0
6296	6294	"val"	"double"	53	0	1	1
6299	6298	"result"	"double"	53	0	0	0
6300	6298	"val"	"date"	0	0	1	1
6303	6302	"result"	"double"	53	0	0	0
6304	6302	"val"	"time"	1	0	1	1
6307	6306	"result"	"double"	53	0	0	0
6308	6306	"val"	"timestamp"	7	0	1	1
6311	6310	"result"	"double"	53	0	0	0
6312	6310	"val"	"tinyint"	8	0	1	1
6315	6314	"result"	"double"	53	0	0	0
6316	6314	"val"	"smallint"	16	0	1	1
6319	6318	"result"	"double"	53	0	0	0
6320	6318	"val"	"int"	32	0	1	1
6323	6322	"result"	"double"	53	0	0	0
6324	6322	"val"	"wrd"	64	0	1	1
6327	6326	"result"	"double"	53	0	0	0
6328	6326	"val"	"bigint"	64	0	1	1
6331	6330	"result"	"double"	53	0	0	0
6332	6330	"val"	"real"	24	0	1	1
6335	6334	"result"	"double"	53	0	0	0
6336	6334	"val"	"double"	53	0	1	1
6339	6338	"result"	"double"	53	0	0	0
6340	6338	"val"	"date"	0	0	1	1
6343	6342	"result"	"double"	53	0	0	0
6344	6342	"val"	"time"	1	0	1	1
6347	6346	"result"	"double"	53	0	0	0
6348	6346	"val"	"timestamp"	7	0	1	1
6351	6350	"result"	"tinyint"	8	0	0	0
6352	6350	"val"	"tinyint"	8	0	1	1
6355	6354	"result"	"smallint"	16	0	0	0
6356	6354	"val"	"smallint"	16	0	1	1
6359	6358	"result"	"int"	32	0	0	0
6360	6358	"val"	"int"	32	0	1	1
6363	6362	"result"	"wrd"	64	0	0	0
6364	6362	"val"	"wrd"	64	0	1	1
6367	6366	"result"	"bigint"	64	0	0	0
6368	6366	"val"	"bigint"	64	0	1	1
6371	6370	"result"	"decimal"	1	0	0	0
6372	6370	"val"	"decimal"	1	0	1	1
6375	6374	"result"	"real"	24	0	0	0
6376	6374	"val"	"real"	24	0	1	1
6379	6378	"result"	"double"	53	0	0	0
6380	6378	"val"	"double"	53	0	1	1
6383	6382	"result"	"date"	0	0	0	0
6384	6382	"val"	"date"	0	0	1	1
6387	6386	"result"	"time"	1	0	0	0
6388	6386	"val"	"time"	1	0	1	1
6391	6390	"result"	"timestamp"	7	0	0	0
6392	6390	"val"	"timestamp"	7	0	1	1
6395	6394	"result"	"tinyint"	8	0	0	0
6396	6394	"val"	"tinyint"	8	0	1	1
6397	6394	"q"	"double"	53	0	1	2
6400	6399	"result"	"smallint"	16	0	0	0
6401	6399	"val"	"smallint"	16	0	1	1
6402	6399	"q"	"double"	53	0	1	2
6405	6404	"result"	"int"	32	0	0	0
6406	6404	"val"	"int"	32	0	1	1
6407	6404	"q"	"double"	53	0	1	2
6410	6409	"result"	"wrd"	64	0	0	0
6411	6409	"val"	"wrd"	64	0	1	1
6412	6409	"q"	"double"	53	0	1	2
6415	6414	"result"	"bigint"	64	0	0	0
6416	6414	"val"	"bigint"	64	0	1	1
6417	6414	"q"	"double"	53	0	1	2
6420	6419	"result"	"decimal"	1	0	0	0
6421	6419	"val"	"decimal"	1	0	1	1
6422	6419	"q"	"double"	53	0	1	2
6425	6424	"result"	"real"	24	0	0	0
6426	6424	"val"	"real"	24	0	1	1
6427	6424	"q"	"double"	53	0	1	2
6430	6429	"result"	"double"	53	0	0	0
6431	6429	"val"	"double"	53	0	1	1
6432	6429	"q"	"double"	53	0	1	2
6435	6434	"result"	"date"	0	0	0	0
6436	6434	"val"	"date"	0	0	1	1
6437	6434	"q"	"double"	53	0	1	2
6440	6439	"result"	"time"	1	0	0	0
6441	6439	"val"	"time"	1	0	1	1
6442	6439	"q"	"double"	53	0	1	2
6445	6444	"result"	"timestamp"	7	0	0	0
6446	6444	"val"	"timestamp"	7	0	1	1
6447	6444	"q"	"double"	53	0	1	2
6450	6449	"result"	"tinyint"	8	0	0	0
6451	6449	"e1"	"tinyint"	8	0	1	1
6452	6449	"e2"	"tinyint"	8	0	1	2
6455	6454	"result"	"smallint"	16	0	0	0
6456	6454	"e1"	"smallint"	16	0	1	1
6457	6454	"e2"	"smallint"	16	0	1	2
6460	6459	"result"	"int"	32	0	0	0
6461	6459	"e1"	"int"	32	0	1	1
6462	6459	"e2"	"int"	32	0	1	2
6465	6464	"result"	"wrd"	64	0	0	0
6466	6464	"e1"	"wrd"	64	0	1	1
6467	6464	"e2"	"wrd"	64	0	1	2
6470	6469	"result"	"bigint"	64	0	0	0
6471	6469	"e1"	"bigint"	64	0	1	1
6472	6469	"e2"	"bigint"	64	0	1	2
6475	6474	"result"	"real"	24	0	0	0
6476	6474	"e1"	"real"	24	0	1	1
6477	6474	"e2"	"real"	24	0	1	2
6480	6479	"result"	"double"	53	0	0	0
6481	6479	"e1"	"double"	53	0	1	1
6482	6479	"e2"	"double"	53	0	1	2
6485	6484	"result"	"double"	53	0	0	0
6486	6484	"val"	"hugeint"	128	0	1	1
6489	6488	"result"	"double"	53	0	0	0
6490	6488	"val"	"hugeint"	128	0	1	1
6493	6492	"result"	"double"	53	0	0	0
6494	6492	"val"	"hugeint"	128	0	1	1
6497	6496	"result"	"double"	53	0	0	0
6498	6496	"val"	"hugeint"	128	0	1	1
6501	6500	"result"	"hugeint"	128	0	0	0
6502	6500	"val"	"hugeint"	128	0	1	1
6505	6504	"result"	"hugeint"	128	0	0	0
6506	6504	"val"	"hugeint"	128	0	1	1
6507	6504	"q"	"double"	53	0	1	2
6510	6509	"result"	"hugeint"	128	0	0	0
6511	6509	"e1"	"hugeint"	128	0	1	1
6512	6509	"e2"	"hugeint"	128	0	1	2
6528	6527	"result"	"mbr"	0	0	0	0
6529	6527	"g"	"geometry"	0	0	1	1
6532	6531	"result"	"boolean"	1	0	0	0
6533	6531	"a"	"mbr"	0	0	1	1
6534	6531	"b"	"mbr"	0	0	1	2
6537	6536	"result"	"geometry"	0	0	0	0
6538	6536	"wkt"	"clob"	0	0	1	1
6539	6536	"srid"	"smallint"	16	0	1	2
6542	6541	"result"	"point"	0	0	0	0
6543	6541	"wkt"	"clob"	0	0	1	1
6544	6541	"srid"	"smallint"	16	0	1	2
6547	6546	"result"	"linestring"	0	0	0	0
6548	6546	"wkt"	"clob"	0	0	1	1
6549	6546	"srid"	"smallint"	16	0	1	2
6552	6551	"result"	"polygon"	0	0	0	0
6553	6551	"wkt"	"clob"	0	0	1	1
6554	6551	"srid"	"smallint"	16	0	1	2
6557	6556	"result"	"multipoint"	0	0	0	0
6558	6556	"wkt"	"clob"	0	0	1	1
6559	6556	"srid"	"smallint"	16	0	1	2
6562	6561	"result"	"multilinestring"	0	0	0	0
6563	6561	"wkt"	"clob"	0	0	1	1
6564	6561	"srid"	"smallint"	16	0	1	2
6567	6566	"result"	"multipolygon"	0	0	0	0
6568	6566	"wkt"	"clob"	0	0	1	1
6569	6566	"srid"	"smallint"	16	0	1	2
6572	6571	"result"	"multipolygon"	0	0	0	0
6573	6571	"wkt"	"clob"	0	0	1	1
6574	6571	"srid"	"smallint"	16	0	1	2
6577	6576	"result"	"polygon"	0	0	0	0
6578	6576	"wkt"	"clob"	0	0	1	1
6579	6576	"srid"	"smallint"	16	0	1	2
6582	6581	"result"	"clob"	0	0	0	0
6583	6581	"g"	"geometry"	0	0	1	1
6586	6585	"result"	"double"	53	0	0	0
6587	6585	"g"	"geometry"	0	0	1	1
6590	6589	"result"	"double"	53	0	0	0
6591	6589	"g"	"geometry"	0	0	1	1
6594	6593	"result"	"point"	0	0	0	0
6595	6593	"x"	"double"	53	0	1	1
6596	6593	"y"	"double"	53	0	1	2
6599	6598	"result"	"int"	32	0	0	0
6600	6598	"g"	"geometry"	0	0	1	1
6603	6602	"result"	"int"	32	0	0	0
6604	6602	"g"	"geometry"	0	0	1	1
6607	6606	"result"	"int"	32	0	0	0
6608	6606	"g"	"geometry"	0	0	1	1
6611	6610	"result"	"geometry"	0	0	0	0
6612	6610	"g"	"geometry"	0	0	1	1
6615	6614	"result"	"boolean"	1	0	0	0
6616	6614	"g"	"geometry"	0	0	1	1
6619	6618	"result"	"boolean"	1	0	0	0
6620	6618	"g"	"geometry"	0	0	1	1
6623	6622	"result"	"geometry"	0	0	0	0
6624	6622	"g"	"geometry"	0	0	1	1
6627	6626	"result"	"boolean"	1	0	0	0
6628	6626	"a"	"geometry"	0	0	1	1
6629	6626	"b"	"geometry"	0	0	1	2
6632	6631	"result"	"boolean"	1	0	0	0
6633	6631	"a"	"geometry"	0	0	1	1
6634	6631	"b"	"geometry"	0	0	1	2
6637	6636	"result"	"boolean"	1	0	0	0
6638	6636	"a"	"geometry"	0	0	1	1
6639	6636	"b"	"geometry"	0	0	1	2
6642	6641	"result"	"boolean"	1	0	0	0
6643	6641	"a"	"geometry"	0	0	1	1
6644	6641	"b"	"geometry"	0	0	1	2
6647	6646	"result"	"boolean"	1	0	0	0
6648	6646	"a"	"geometry"	0	0	1	1
6649	6646	"b"	"geometry"	0	0	1	2
6652	6651	"result"	"boolean"	1	0	0	0
6653	6651	"a"	"geometry"	0	0	1	1
6654	6651	"b"	"geometry"	0	0	1	2
6657	6656	"result"	"boolean"	1	0	0	0
6658	6656	"a"	"geometry"	0	0	1	1
6659	6656	"b"	"geometry"	0	0	1	2
6662	6661	"result"	"boolean"	1	0	0	0
6663	6661	"a"	"geometry"	0	0	1	1
6664	6661	"b"	"geometry"	0	0	1	2
6667	6666	"result"	"boolean"	1	0	0	0
6668	6666	"a"	"geometry"	0	0	1	1
6669	6666	"b"	"geometry"	0	0	1	2
6670	6666	"pattern"	"clob"	0	0	1	3
6673	6672	"result"	"double"	53	0	0	0
6674	6672	"g"	"geometry"	0	0	1	1
6677	6676	"result"	"double"	53	0	0	0
6678	6676	"g"	"geometry"	0	0	1	1
6681	6680	"result"	"double"	53	0	0	0
6682	6680	"a"	"geometry"	0	0	1	1
6683	6680	"b"	"geometry"	0	0	1	2
6686	6685	"result"	"geometry"	0	0	0	0
6687	6685	"a"	"geometry"	0	0	1	1
6688	6685	"distance"	"double"	53	0	1	2
6691	6690	"result"	"geometry"	0	0	0	0
6692	6690	"a"	"geometry"	0	0	1	1
6695	6694	"result"	"geometry"	0	0	0	0
6696	6694	"a"	"geometry"	0	0	1	1
6697	6694	"b"	"geometry"	0	0	1	2
6700	6699	"result"	"geometry"	0	0	0	0
6701	6699	"a"	"geometry"	0	0	1	1
6702	6699	"b"	"geometry"	0	0	1	2
6705	6704	"result"	"geometry"	0	0	0	0
6706	6704	"a"	"geometry"	0	0	1	1
6707	6704	"b"	"geometry"	0	0	1	2
6710	6709	"result"	"geometry"	0	0	0	0
6711	6709	"a"	"geometry"	0	0	1	1
6712	6709	"b"	"geometry"	0	0	1	2
6717	6716	"result"	"json"	0	0	0	0
6718	6716	"js"	"json"	0	0	1	1
6719	6716	"pathexpr"	"clob"	0	0	1	2
6722	6721	"result"	"json"	0	0	0	0
6723	6721	"js"	"json"	0	0	1	1
6724	6721	"name"	"tinyint"	8	0	1	2
6727	6726	"result"	"json"	0	0	0	0
6728	6726	"js"	"json"	0	0	1	1
6729	6726	"name"	"int"	32	0	1	2
6732	6731	"result"	"json"	0	0	0	0
6733	6731	"js"	"json"	0	0	1	1
6734	6731	"name"	"bigint"	64	0	1	2
6737	6736	"result"	"clob"	0	0	0	0
6738	6736	"js"	"json"	0	0	1	1
6739	6736	"e"	"clob"	0	0	1	2
6742	6741	"result"	"double"	53	0	0	0
6743	6741	"js"	"json"	0	0	1	1
6746	6745	"result"	"bigint"	64	0	0	0
6747	6745	"js"	"json"	0	0	1	1
6750	6749	"result"	"boolean"	1	0	0	0
6751	6749	"js"	"clob"	0	0	1	1
6754	6753	"result"	"boolean"	1	0	0	0
6755	6753	"js"	"clob"	0	0	1	1
6758	6757	"result"	"boolean"	1	0	0	0
6759	6757	"js"	"clob"	0	0	1	1
6762	6761	"result"	"boolean"	1	0	0	0
6763	6761	"js"	"json"	0	0	1	1
6766	6765	"result"	"boolean"	1	0	0	0
6767	6765	"js"	"json"	0	0	1	1
6770	6769	"result"	"boolean"	1	0	0	0
6771	6769	"js"	"json"	0	0	1	1
6774	6773	"result"	"int"	32	0	0	0
6775	6773	"js"	"json"	0	0	1	1
6778	6777	"result"	"json"	0	0	0	0
6779	6777	"js"	"json"	0	0	1	1
6782	6781	"result"	"json"	0	0	0	0
6783	6781	"js"	"json"	0	0	1	1
6786	6785	"result"	"clob"	0	0	0	0
6787	6785	"js"	"json"	0	0	1	1
6790	6789	"result"	"clob"	0	0	0	0
6791	6789	"js"	"clob"	0	0	1	1
6794	6793	"result"	"clob"	0	0	0	0
6795	6793	"js"	"int"	32	0	1	1
6798	6797	"result"	"clob"	0	0	0	0
6799	6797	"js"	"json"	0	0	1	1
6802	6801	"result"	"clob"	0	0	0	0
6803	6801	"x"	"clob"	0	0	1	1
6806	6805	"result"	"clob"	0	0	0	0
6807	6805	"x"	"double"	53	0	1	1
6810	6809	"result"	"json"	0	0	0	0
6811	6809	"js"	"json"	0	0	1	1
6812	6809	"name"	"hugeint"	128	0	1	2
6815	6814	"result"	"clob"	0	0	0	0
6816	6814	"v"	"clob"	0	0	1	1
6820	6819	"result"	"uuid"	0	0	0	0
6823	6822	"result"	"uuid"	0	0	0	0
6824	6822	"u"	"uuid"	0	0	1	1
6827	6826	"result"	"uuid"	0	0	0	0
6828	6826	"u"	"clob"	0	0	1	1
6831	6830	"schema"	"clob"	0	0	0	0
6832	6830	"table"	"clob"	0	0	0	1
6833	6830	"column"	"clob"	0	0	0	2
6834	6830	"type"	"clob"	0	0	0	3
6835	6830	"location"	"clob"	0	0	0	4
6836	6830	"count"	"bigint"	64	0	0	5
6837	6830	"typewidth"	"int"	32	0	0	6
6838	6830	"columnsize"	"bigint"	64	0	0	7
6839	6830	"heapsize"	"bigint"	64	0	0	8
6840	6830	"hashes"	"bigint"	64	0	0	9
6841	6830	"imprints"	"bigint"	64	0	0	10
6842	6830	"sorted"	"boolean"	1	0	0	11
6873	6872	"result"	"bigint"	64	0	0	0
6874	6872	"nme"	"clob"	0	0	1	1
6875	6872	"i"	"bigint"	64	0	1	2
6876	6872	"d"	"bigint"	64	0	1	3
6879	6878	"result"	"bigint"	64	0	0	0
6880	6878	"tpe"	"clob"	0	0	1	1
6881	6878	"i"	"bigint"	64	0	1	2
6882	6878	"w"	"int"	32	0	1	3
6885	6884	"result"	"bigint"	64	0	0	0
6886	6884	"b"	"boolean"	1	0	1	1
6887	6884	"i"	"bigint"	64	0	1	2
6890	6889	"result"	"bigint"	64	0	0	0
6891	6889	"i"	"bigint"	64	0	1	1
6892	6889	"nme"	"clob"	0	0	1	2
6895	6894	"schema"	"clob"	0	0	0	0
6896	6894	"table"	"clob"	0	0	0	1
6897	6894	"column"	"clob"	0	0	0	2
6898	6894	"type"	"clob"	0	0	0	3
6899	6894	"count"	"bigint"	64	0	0	4
6900	6894	"columnsize"	"bigint"	64	0	0	5
6901	6894	"heapsize"	"bigint"	64	0	0	6
6902	6894	"hashes"	"bigint"	64	0	0	7
6903	6894	"imprints"	"bigint"	64	0	0	8
6904	6894	"sorted"	"boolean"	1	0	0	9
6946	6945	"tbl"	"clob"	0	0	1	0
6949	6948	"sch"	"clob"	0	0	1	0
6950	6948	"tbl"	"clob"	0	0	1	1
6953	6952	"sch"	"clob"	0	0	1	0
6954	6952	"tbl"	"clob"	0	0	1	1
6955	6952	"col"	"clob"	0	0	1	2
6958	6957	"sample"	"bigint"	64	0	1	0
6961	6960	"tbl"	"clob"	0	0	1	0
6962	6960	"sample"	"bigint"	64	0	1	1
6965	6964	"sch"	"clob"	0	0	1	0
6966	6964	"tbl"	"clob"	0	0	1	1
6967	6964	"sample"	"bigint"	64	0	1	2
6970	6969	"sch"	"clob"	0	0	1	0
6971	6969	"tbl"	"clob"	0	0	1	1
6972	6969	"col"	"clob"	0	0	1	2
6973	6969	"sample"	"bigint"	64	0	1	3
6976	6975	"result"	"clob"	0	0	0	0
6977	6975	"src"	"clob"	0	0	1	1
6980	6979	"result"	"smallint"	16	0	0	0
6981	6979	"one"	"tinyint"	8	0	1	1
6982	6979	"two"	"tinyint"	8	0	1	2
6985	6984	"result"	"int"	32	0	0	0
6986	6984	"one"	"smallint"	16	0	1	1
6987	6984	"two"	"smallint"	16	0	1	2
6990	6989	"result"	"bigint"	64	0	0	0
6991	6989	"one"	"int"	32	0	1	1
6992	6989	"two"	"int"	32	0	1	2
6995	6994	"result"	"hugeint"	128	0	0	0
6996	6994	"one"	"bigint"	64	0	1	1
6997	6994	"two"	"bigint"	64	0	1	2
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 206 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
417	5696	7
418	5696	7
1023	5696	7
417	5700	7
418	5700	7
1023	5700	7
5824	5852	5
5833	5864	5
5824	5882	5
5833	5882	5
5893	5919	5
2003	5941	7
2001	5941	7
2002	5941	7
5668	5941	7
5677	5946	7
5675	5946	7
5676	5946	7
2005	5946	7
2001	5946	7
2003	5946	7
5636	5951	7
2047	5951	7
2046	5951	7
2049	5951	7
2048	5951	7
5636	5956	7
2088	5956	7
2086	5956	7
2090	5956	7
2083	5956	7
2079	5956	7
36	5956	7
5636	5961	7
2047	5961	7
2046	5961	7
2049	5961	7
2092	5961	7
2091	5961	7
2048	5961	7
2093	5961	7
2094	5961	7
5636	5966	7
2081	5966	7
2079	5966	7
2084	5966	7
2080	5966	7
2083	5966	7
5636	5971	7
2047	5971	7
2046	5971	7
2049	5971	7
2017	5971	7
2016	5971	7
2048	5971	7
2018	5971	7
5646	5976	7
2047	5976	7
2046	5976	7
2049	5976	7
2048	5976	7
5636	5976	7
5646	5981	7
2081	5981	7
2079	5981	7
2084	5981	7
2103	5981	7
2102	5981	7
2104	5981	7
2080	5981	7
2083	5981	7
132	5981	7
33	5981	7
32	5981	7
34	5981	7
5646	5986	7
2088	5986	7
2086	5986	7
2090	5986	7
2083	5986	7
2079	5986	7
2087	5986	7
2103	5986	7
2102	5986	7
2104	5986	7
36	5986	7
33	5986	7
32	5986	7
34	5986	7
5646	5991	7
2047	5991	7
2046	5991	7
2049	5991	7
2048	5991	7
2017	5991	7
2016	5991	7
2018	5991	7
5646	5996	7
2047	5996	7
2046	5996	7
2049	5996	7
2092	5996	7
2091	5996	7
2048	5996	7
2093	5996	7
5636	6001	7
2047	6001	7
2046	6001	7
2049	6001	7
2017	6001	7
2016	6001	7
2048	6001	7
2018	6001	7
5636	6006	7
2047	6006	7
2046	6006	7
2049	6006	7
2092	6006	7
2091	6006	7
2048	6006	7
2093	6006	7
2018	6011	7
2016	6011	7
2017	6011	7
2047	6011	7
2046	6011	7
2049	6011	7
2048	6011	7
2018	6016	7
2016	6016	7
2017	6016	7
2047	6016	7
2046	6016	7
2049	6016	7
2092	6016	7
2091	6016	7
2048	6016	7
2093	6016	7
2083	6021	7
2079	6021	7
2080	6021	7
2084	6021	7
6030	6044	5
119	6063	7
39	6063	7
37	6063	7
1157	6063	7
1143	6063	7
191	6063	7
1154	6063	7
192	6063	7
261	6063	7
34	6075	7
500	6075	7
121	6075	7
6070	6075	7
6116	6124	5
6126	6132	5
6152	6170	5
6830	6856	5
6858	6870	13
6868	6870	13
6859	6870	13
6860	6870	13
6861	6870	13
6862	6870	13
6863	6870	13
6864	6870	13
6865	6870	13
6866	6870	13
6867	6870	13
34	6872	7
193	6872	7
199	6872	7
118	6878	7
35	6878	7
261	6878	7
193	6878	7
34	6884	7
193	6884	7
119	6889	7
34	6889	7
377	6889	7
6858	6894	7
6868	6894	7
6859	6894	7
6860	6894	7
6861	6894	7
6863	6894	7
6864	6894	7
6865	6894	7
6866	6894	7
6867	6894	7
6872	6894	7
6878	6894	7
6884	6894	7
6889	6894	7
6894	6916	5
6894	6926	5
49	6926	5
56	6926	5
57	6926	5
52	6926	5
36	6926	5
34	6926	5
193	6926	5
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"sql"         BOOLEAN,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1472 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"not_uniques"	"not_uniques"	"sql"	false	1	false	false	false	0
31	"not_uniques"	"not_uniques"	"sql"	false	1	false	false	false	0
32	"hash"	"hash"	"mkey"	false	1	false	false	false	0
33	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	false	1	false	false	false	0
34	"="	"="	"calc"	false	1	false	false	false	0
35	"<>"	"!="	"calc"	false	1	false	false	false	0
36	"isnull"	"isnil"	"calc"	false	1	false	false	false	0
37	">"	">"	"calc"	false	1	false	false	false	0
38	">="	">="	"calc"	false	1	false	false	false	0
39	"<"	"<"	"calc"	false	1	false	false	false	0
40	"<="	"<="	"calc"	false	1	false	false	false	0
44	"in"	"in"	"calc"	false	1	false	false	false	0
45	"identity"	"identity"	"calc"	false	1	false	false	false	0
46	"rowid"	"identity"	"calc"	false	1	false	false	false	0
47	"rowid"	"rowid"	"calc"	false	1	false	false	false	0
50	"sql_min"	"min"	"calc"	false	1	false	false	false	0
51	"sql_max"	"max"	"calc"	false	1	false	false	false	0
52	"ifthenelse"	"ifthenelse"	"calc"	false	1	false	false	false	0
74	"mod"	"%"	"calc"	false	1	false	false	false	0
75	"mod"	"%"	"calc"	false	1	false	false	false	0
76	"mod"	"%"	"calc"	false	1	false	false	false	0
77	"mod"	"%"	"calc"	false	1	false	false	false	0
78	"mod"	"%"	"calc"	false	1	false	false	false	0
79	"mod"	"%"	"calc"	false	1	false	false	false	0
80	"mod"	"%"	"calc"	false	1	false	false	false	0
81	"mod"	"%"	"calc"	false	1	false	false	false	0
82	"mod"	"%"	"calc"	false	1	false	false	false	0
83	"mod"	"%"	"calc"	false	1	false	false	false	0
84	"mod"	"%"	"calc"	false	1	false	false	false	0
85	"mod"	"%"	"calc"	false	1	false	false	false	0
86	"mod"	"%"	"calc"	false	1	false	false	false	0
87	"mod"	"%"	"calc"	false	1	false	false	false	0
95	"rank"	"rank_grp"	"calc"	false	1	false	false	false	0
96	"dense_rank"	"dense_rank_grp"	"calc"	false	1	false	false	false	0
97	"percent_rank"	"precent_rank_grp"	"calc"	false	1	false	false	false	0
98	"cume_dist"	"cume_dist_grp"	"calc"	false	1	false	false	false	0
99	"row_number"	"mark_grp"	"calc"	false	1	false	false	false	0
100	"rank"	"rank_grp"	"calc"	false	1	false	false	false	0
101	"dense_rank"	"dense_rank_grp"	"calc"	false	1	false	false	false	0
102	"percent_rank"	"precent_rank_grp"	"calc"	false	1	false	false	false	0
103	"cume_dist"	"cume_dist_grp"	"calc"	false	1	false	false	false	0
104	"row_number"	"mark_grp"	"calc"	false	1	false	false	false	0
105	"rank"	"rank_grp"	"calc"	false	1	false	false	false	0
106	"dense_rank"	"dense_rank_grp"	"calc"	false	1	false	false	false	0
107	"percent_rank"	"precent_rank_grp"	"calc"	false	1	false	false	false	0
108	"cume_dist"	"cume_dist_grp"	"calc"	false	1	false	false	false	0
109	"row_number"	"mark_grp"	"calc"	false	1	false	false	false	0
110	"lag"	"lag_grp"	"calc"	false	1	false	false	false	0
111	"lead"	"lead_grp"	"calc"	false	1	false	false	false	0
112	"lag"	"lag_grp"	"calc"	false	1	false	false	false	0
113	"lead"	"lead_grp"	"calc"	false	1	false	false	false	0
114	"lag"	"lag_grp"	"calc"	false	1	false	false	false	0
115	"lead"	"lead_grp"	"calc"	false	1	false	false	false	0
116	"lag"	"lag_grp"	"calc"	false	1	false	false	false	0
117	"lead"	"lead_grp"	"calc"	false	1	false	false	false	0
118	"and"	"and"	"calc"	false	1	false	false	false	0
119	"or"	"or"	"calc"	false	1	false	false	false	0
120	"xor"	"xor"	"calc"	false	1	false	false	false	0
121	"not"	"not"	"calc"	false	1	false	false	false	0
122	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
123	"sql_add"	"+"	"calc"	false	1	false	false	false	0
124	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
125	"sql_div"	"/"	"calc"	false	1	false	false	false	0
126	"bit_and"	"and"	"calc"	false	1	false	false	false	0
127	"bit_or"	"or"	"calc"	false	1	false	false	false	0
128	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
129	"bit_not"	"not"	"calc"	false	1	false	false	false	0
130	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
131	"right_shift"	">>"	"calc"	false	1	false	false	false	0
132	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
133	"abs"	"abs"	"calc"	false	1	false	false	false	0
134	"sign"	"sign"	"calc"	false	1	false	false	false	0
135	"scale_up"	"*"	"calc"	false	1	false	false	false	0
136	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
137	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
138	"sql_add"	"+"	"calc"	false	1	false	false	false	0
139	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
140	"sql_div"	"/"	"calc"	false	1	false	false	false	0
141	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
142	"sql_add"	"+"	"calc"	false	1	false	false	false	0
143	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
144	"sql_div"	"/"	"calc"	false	1	false	false	false	0
145	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
146	"sql_add"	"+"	"calc"	false	1	false	false	false	0
147	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
148	"sql_div"	"/"	"calc"	false	1	false	false	false	0
149	"bit_and"	"and"	"calc"	false	1	false	false	false	0
150	"bit_or"	"or"	"calc"	false	1	false	false	false	0
151	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
152	"bit_not"	"not"	"calc"	false	1	false	false	false	0
153	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
154	"right_shift"	">>"	"calc"	false	1	false	false	false	0
155	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
156	"abs"	"abs"	"calc"	false	1	false	false	false	0
157	"sign"	"sign"	"calc"	false	1	false	false	false	0
158	"scale_up"	"*"	"calc"	false	1	false	false	false	0
159	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
160	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
161	"sql_add"	"+"	"calc"	false	1	false	false	false	0
162	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
163	"sql_div"	"/"	"calc"	false	1	false	false	false	0
164	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
165	"sql_add"	"+"	"calc"	false	1	false	false	false	0
166	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
167	"sql_div"	"/"	"calc"	false	1	false	false	false	0
168	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
169	"sql_add"	"+"	"calc"	false	1	false	false	false	0
170	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
171	"sql_div"	"/"	"calc"	false	1	false	false	false	0
172	"bit_and"	"and"	"calc"	false	1	false	false	false	0
173	"bit_or"	"or"	"calc"	false	1	false	false	false	0
174	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
175	"bit_not"	"not"	"calc"	false	1	false	false	false	0
176	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
177	"right_shift"	">>"	"calc"	false	1	false	false	false	0
178	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
179	"abs"	"abs"	"calc"	false	1	false	false	false	0
180	"sign"	"sign"	"calc"	false	1	false	false	false	0
181	"scale_up"	"*"	"calc"	false	1	false	false	false	0
182	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
183	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
184	"sql_add"	"+"	"calc"	false	1	false	false	false	0
185	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
186	"sql_div"	"/"	"calc"	false	1	false	false	false	0
187	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
188	"sql_add"	"+"	"calc"	false	1	false	false	false	0
189	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
190	"sql_div"	"/"	"calc"	false	1	false	false	false	0
191	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
192	"sql_add"	"+"	"calc"	false	1	false	false	false	0
193	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
194	"sql_div"	"/"	"calc"	false	1	false	false	false	0
195	"bit_and"	"and"	"calc"	false	1	false	false	false	0
196	"bit_or"	"or"	"calc"	false	1	false	false	false	0
197	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
198	"bit_not"	"not"	"calc"	false	1	false	false	false	0
199	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
200	"right_shift"	">>"	"calc"	false	1	false	false	false	0
201	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
202	"abs"	"abs"	"calc"	false	1	false	false	false	0
203	"sign"	"sign"	"calc"	false	1	false	false	false	0
204	"scale_up"	"*"	"calc"	false	1	false	false	false	0
205	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
206	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
207	"sql_add"	"+"	"calc"	false	1	false	false	false	0
208	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
209	"sql_div"	"/"	"calc"	false	1	false	false	false	0
210	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
211	"sql_add"	"+"	"calc"	false	1	false	false	false	0
212	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
213	"sql_div"	"/"	"calc"	false	1	false	false	false	0
214	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
215	"sql_add"	"+"	"calc"	false	1	false	false	false	0
216	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
217	"sql_div"	"/"	"calc"	false	1	false	false	false	0
218	"bit_and"	"and"	"calc"	false	1	false	false	false	0
219	"bit_or"	"or"	"calc"	false	1	false	false	false	0
220	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
221	"bit_not"	"not"	"calc"	false	1	false	false	false	0
222	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
223	"right_shift"	">>"	"calc"	false	1	false	false	false	0
224	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
225	"abs"	"abs"	"calc"	false	1	false	false	false	0
226	"sign"	"sign"	"calc"	false	1	false	false	false	0
227	"scale_up"	"*"	"calc"	false	1	false	false	false	0
228	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
229	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
230	"sql_add"	"+"	"calc"	false	1	false	false	false	0
231	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
232	"sql_div"	"/"	"calc"	false	1	false	false	false	0
233	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
234	"sql_add"	"+"	"calc"	false	1	false	false	false	0
235	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
236	"sql_div"	"/"	"calc"	false	1	false	false	false	0
237	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
238	"sql_add"	"+"	"calc"	false	1	false	false	false	0
239	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
240	"sql_div"	"/"	"calc"	false	1	false	false	false	0
241	"bit_and"	"and"	"calc"	false	1	false	false	false	0
242	"bit_or"	"or"	"calc"	false	1	false	false	false	0
243	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
244	"bit_not"	"not"	"calc"	false	1	false	false	false	0
245	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
246	"right_shift"	">>"	"calc"	false	1	false	false	false	0
247	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
248	"abs"	"abs"	"calc"	false	1	false	false	false	0
249	"sign"	"sign"	"calc"	false	1	false	false	false	0
250	"scale_up"	"*"	"calc"	false	1	false	false	false	0
251	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
252	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
253	"sql_add"	"+"	"calc"	false	1	false	false	false	0
254	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
255	"sql_div"	"/"	"calc"	false	1	false	false	false	0
256	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
257	"sql_add"	"+"	"calc"	false	1	false	false	false	0
258	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
259	"sql_div"	"/"	"calc"	false	1	false	false	false	0
260	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
261	"sql_add"	"+"	"calc"	false	1	false	false	false	0
262	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
263	"sql_div"	"/"	"calc"	false	1	false	false	false	0
264	"bit_and"	"and"	"calc"	false	1	false	false	false	0
265	"bit_or"	"or"	"calc"	false	1	false	false	false	0
266	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
267	"bit_not"	"not"	"calc"	false	1	false	false	false	0
268	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
269	"right_shift"	">>"	"calc"	false	1	false	false	false	0
270	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
271	"abs"	"abs"	"calc"	false	1	false	false	false	0
272	"sign"	"sign"	"calc"	false	1	false	false	false	0
273	"scale_up"	"*"	"calc"	false	1	false	false	false	0
274	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
275	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
276	"sql_add"	"+"	"calc"	false	1	false	false	false	0
277	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
278	"sql_div"	"/"	"calc"	false	1	false	false	false	0
279	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
280	"sql_add"	"+"	"calc"	false	1	false	false	false	0
281	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
282	"sql_div"	"/"	"calc"	false	1	false	false	false	0
283	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
284	"sql_add"	"+"	"calc"	false	1	false	false	false	0
285	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
286	"sql_div"	"/"	"calc"	false	1	false	false	false	0
287	"bit_and"	"and"	"calc"	false	1	false	false	false	0
288	"bit_or"	"or"	"calc"	false	1	false	false	false	0
289	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
290	"bit_not"	"not"	"calc"	false	1	false	false	false	0
291	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
292	"right_shift"	">>"	"calc"	false	1	false	false	false	0
293	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
294	"abs"	"abs"	"calc"	false	1	false	false	false	0
295	"sign"	"sign"	"calc"	false	1	false	false	false	0
296	"scale_up"	"*"	"calc"	false	1	false	false	false	0
297	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
298	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
299	"sql_add"	"+"	"calc"	false	1	false	false	false	0
300	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
301	"sql_div"	"/"	"calc"	false	1	false	false	false	0
302	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
303	"sql_add"	"+"	"calc"	false	1	false	false	false	0
304	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
305	"sql_div"	"/"	"calc"	false	1	false	false	false	0
306	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
307	"sql_add"	"+"	"calc"	false	1	false	false	false	0
308	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
309	"sql_div"	"/"	"calc"	false	1	false	false	false	0
310	"bit_and"	"and"	"calc"	false	1	false	false	false	0
311	"bit_or"	"or"	"calc"	false	1	false	false	false	0
312	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
313	"bit_not"	"not"	"calc"	false	1	false	false	false	0
314	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
315	"right_shift"	">>"	"calc"	false	1	false	false	false	0
316	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
317	"abs"	"abs"	"calc"	false	1	false	false	false	0
318	"sign"	"sign"	"calc"	false	1	false	false	false	0
319	"scale_up"	"*"	"calc"	false	1	false	false	false	0
320	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
321	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
322	"sql_add"	"+"	"calc"	false	1	false	false	false	0
323	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
324	"sql_div"	"/"	"calc"	false	1	false	false	false	0
325	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
326	"sql_add"	"+"	"calc"	false	1	false	false	false	0
327	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
328	"sql_div"	"/"	"calc"	false	1	false	false	false	0
329	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
330	"sql_add"	"+"	"calc"	false	1	false	false	false	0
331	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
332	"sql_div"	"/"	"calc"	false	1	false	false	false	0
333	"bit_and"	"and"	"calc"	false	1	false	false	false	0
334	"bit_or"	"or"	"calc"	false	1	false	false	false	0
335	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
336	"bit_not"	"not"	"calc"	false	1	false	false	false	0
337	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
338	"right_shift"	">>"	"calc"	false	1	false	false	false	0
339	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
340	"abs"	"abs"	"calc"	false	1	false	false	false	0
341	"sign"	"sign"	"calc"	false	1	false	false	false	0
342	"scale_up"	"*"	"calc"	false	1	false	false	false	0
343	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
344	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
345	"sql_add"	"+"	"calc"	false	1	false	false	false	0
346	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
347	"sql_div"	"/"	"calc"	false	1	false	false	false	0
348	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
349	"sql_add"	"+"	"calc"	false	1	false	false	false	0
350	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
351	"sql_div"	"/"	"calc"	false	1	false	false	false	0
352	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
353	"sql_add"	"+"	"calc"	false	1	false	false	false	0
354	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
355	"sql_div"	"/"	"calc"	false	1	false	false	false	0
356	"bit_and"	"and"	"calc"	false	1	false	false	false	0
357	"bit_or"	"or"	"calc"	false	1	false	false	false	0
358	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
359	"bit_not"	"not"	"calc"	false	1	false	false	false	0
360	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
361	"right_shift"	">>"	"calc"	false	1	false	false	false	0
362	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
363	"abs"	"abs"	"calc"	false	1	false	false	false	0
364	"sign"	"sign"	"calc"	false	1	false	false	false	0
365	"scale_up"	"*"	"calc"	false	1	false	false	false	0
366	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
367	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
368	"sql_add"	"+"	"calc"	false	1	false	false	false	0
369	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
370	"sql_div"	"/"	"calc"	false	1	false	false	false	0
371	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
372	"sql_add"	"+"	"calc"	false	1	false	false	false	0
373	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
374	"sql_div"	"/"	"calc"	false	1	false	false	false	0
375	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
376	"sql_add"	"+"	"calc"	false	1	false	false	false	0
377	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
378	"sql_div"	"/"	"calc"	false	1	false	false	false	0
379	"bit_and"	"and"	"calc"	false	1	false	false	false	0
380	"bit_or"	"or"	"calc"	false	1	false	false	false	0
381	"bit_xor"	"xor"	"calc"	false	1	false	false	false	0
382	"bit_not"	"not"	"calc"	false	1	false	false	false	0
383	"left_shift"	"<<"	"calc"	false	1	false	false	false	0
384	"right_shift"	">>"	"calc"	false	1	false	false	false	0
385	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
386	"abs"	"abs"	"calc"	false	1	false	false	false	0
387	"sign"	"sign"	"calc"	false	1	false	false	false	0
388	"scale_up"	"*"	"calc"	false	1	false	false	false	0
389	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
390	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
391	"sql_add"	"+"	"calc"	false	1	false	false	false	0
392	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
393	"sql_div"	"/"	"calc"	false	1	false	false	false	0
394	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
395	"sql_add"	"+"	"calc"	false	1	false	false	false	0
396	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
397	"sql_div"	"/"	"calc"	false	1	false	false	false	0
398	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
399	"sql_add"	"+"	"calc"	false	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
401	"sql_div"	"/"	"calc"	false	1	false	false	false	0
402	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
403	"abs"	"abs"	"calc"	false	1	false	false	false	0
404	"sign"	"sign"	"calc"	false	1	false	false	false	0
405	"scale_up"	"*"	"calc"	false	1	false	false	false	0
406	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
407	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
408	"sql_add"	"+"	"calc"	false	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
410	"sql_div"	"/"	"calc"	false	1	false	false	false	0
411	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
412	"sql_add"	"+"	"calc"	false	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
414	"sql_div"	"/"	"calc"	false	1	false	false	false	0
415	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
416	"sql_add"	"+"	"calc"	false	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
418	"sql_div"	"/"	"calc"	false	1	false	false	false	0
419	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
420	"abs"	"abs"	"calc"	false	1	false	false	false	0
421	"sign"	"sign"	"calc"	false	1	false	false	false	0
422	"scale_up"	"*"	"calc"	false	1	false	false	false	0
423	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
424	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
425	"sql_add"	"+"	"calc"	false	1	false	false	false	0
426	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
427	"sql_div"	"/"	"calc"	false	1	false	false	false	0
428	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
429	"sql_add"	"+"	"calc"	false	1	false	false	false	0
430	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
431	"sql_div"	"/"	"calc"	false	1	false	false	false	0
432	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
433	"sql_add"	"+"	"calc"	false	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
435	"sql_div"	"/"	"calc"	false	1	false	false	false	0
436	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
437	"abs"	"abs"	"calc"	false	1	false	false	false	0
438	"sign"	"sign"	"calc"	false	1	false	false	false	0
439	"scale_up"	"*"	"calc"	false	1	false	false	false	0
440	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
441	"sql_sub"	"-"	"calc"	false	1	false	false	false	0
442	"sql_add"	"+"	"calc"	false	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
444	"sql_div"	"/"	"calc"	false	1	false	false	false	0
445	"sql_neg"	"-"	"calc"	false	1	false	false	false	0
446	"abs"	"abs"	"calc"	false	1	false	false	false	0
447	"sign"	"sign"	"calc"	false	1	false	false	false	0
448	"scale_up"	"*"	"calc"	false	1	false	false	false	0
449	"scale_down"	"dec_round"	"sql"	false	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
459	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
460	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
461	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
462	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
463	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
465	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
466	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
467	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
468	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
469	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
470	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
471	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
472	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
473	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
474	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
475	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
476	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
477	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
478	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
479	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
480	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
481	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
482	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
483	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
484	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
485	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
486	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
487	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
488	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
489	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
490	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
491	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
492	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
493	"sql_mul"	"*"	"calc"	false	1	false	false	false	0
494	"round"	"round"	"sql"	false	1	false	false	false	0
495	"round"	"round"	"sql"	false	1	false	false	false	0
496	"round"	"round"	"sql"	false	1	false	false	false	0
497	"round"	"round"	"sql"	false	1	false	false	false	0
498	"round"	"round"	"sql"	false	1	false	false	false	0
499	"round"	"round"	"sql"	false	1	false	false	false	0
500	"round"	"round"	"sql"	false	1	false	false	false	0
501	"scale_up"	"*"	"calc"	false	1	false	false	false	0
502	"scale_up"	"*"	"calc"	false	1	false	false	false	0
503	"scale_up"	"*"	"calc"	false	1	false	false	false	0
504	"scale_up"	"*"	"calc"	false	1	false	false	false	0
505	"scale_up"	"*"	"calc"	false	1	false	false	false	0
506	"scale_up"	"*"	"calc"	false	1	false	false	false	0
507	"scale_up"	"*"	"calc"	false	1	false	false	false	0
508	"scale_up"	"*"	"calc"	false	1	false	false	false	0
509	"scale_up"	"*"	"calc"	false	1	false	false	false	0
510	"scale_up"	"*"	"calc"	false	1	false	false	false	0
511	"scale_up"	"*"	"calc"	false	1	false	false	false	0
512	"scale_up"	"*"	"calc"	false	1	false	false	false	0
513	"scale_up"	"*"	"calc"	false	1	false	false	false	0
514	"scale_up"	"*"	"calc"	false	1	false	false	false	0
515	"scale_up"	"*"	"calc"	false	1	false	false	false	0
516	"scale_up"	"*"	"calc"	false	1	false	false	false	0
517	"scale_up"	"*"	"calc"	false	1	false	false	false	0
518	"scale_up"	"*"	"calc"	false	1	false	false	false	0
519	"scale_up"	"*"	"calc"	false	1	false	false	false	0
520	"scale_up"	"*"	"calc"	false	1	false	false	false	0
521	"scale_up"	"*"	"calc"	false	1	false	false	false	0
522	"scale_up"	"*"	"calc"	false	1	false	false	false	0
523	"scale_up"	"*"	"calc"	false	1	false	false	false	0
524	"scale_up"	"*"	"calc"	false	1	false	false	false	0
525	"scale_up"	"*"	"calc"	false	1	false	false	false	0
526	"scale_up"	"*"	"calc"	false	1	false	false	false	0
527	"scale_up"	"*"	"calc"	false	1	false	false	false	0
528	"scale_up"	"*"	"calc"	false	1	false	false	false	0
529	"scale_up"	"*"	"calc"	false	1	false	false	false	0
530	"scale_up"	"*"	"calc"	false	1	false	false	false	0
531	"scale_up"	"*"	"calc"	false	1	false	false	false	0
532	"scale_up"	"*"	"calc"	false	1	false	false	false	0
533	"scale_up"	"*"	"calc"	false	1	false	false	false	0
534	"scale_up"	"*"	"calc"	false	1	false	false	false	0
535	"scale_up"	"*"	"calc"	false	1	false	false	false	0
536	"scale_up"	"*"	"calc"	false	1	false	false	false	0
537	"scale_up"	"*"	"calc"	false	1	false	false	false	0
538	"scale_up"	"*"	"calc"	false	1	false	false	false	0
539	"scale_up"	"*"	"calc"	false	1	false	false	false	0
540	"scale_up"	"*"	"calc"	false	1	false	false	false	0
541	"scale_up"	"*"	"calc"	false	1	false	false	false	0
542	"scale_up"	"*"	"calc"	false	1	false	false	false	0
543	"scale_up"	"*"	"calc"	false	1	false	false	false	0
544	"scale_up"	"*"	"calc"	false	1	false	false	false	0
545	"scale_up"	"*"	"calc"	false	1	false	false	false	0
546	"scale_up"	"*"	"calc"	false	1	false	false	false	0
547	"scale_up"	"*"	"calc"	false	1	false	false	false	0
548	"scale_up"	"*"	"calc"	false	1	false	false	false	0
549	"scale_up"	"*"	"calc"	false	1	false	false	false	0
550	"scale_up"	"*"	"calc"	false	1	false	false	false	0
551	"scale_up"	"*"	"calc"	false	1	false	false	false	0
552	"scale_up"	"*"	"calc"	false	1	false	false	false	0
553	"scale_up"	"*"	"calc"	false	1	false	false	false	0
554	"scale_up"	"*"	"calc"	false	1	false	false	false	0
555	"scale_up"	"*"	"calc"	false	1	false	false	false	0
556	"scale_up"	"*"	"calc"	false	1	false	false	false	0
557	"scale_up"	"*"	"calc"	false	1	false	false	false	0
558	"scale_up"	"*"	"calc"	false	1	false	false	false	0
559	"scale_up"	"*"	"calc"	false	1	false	false	false	0
560	"scale_up"	"*"	"calc"	false	1	false	false	false	0
561	"scale_up"	"*"	"calc"	false	1	false	false	false	0
562	"scale_up"	"*"	"calc"	false	1	false	false	false	0
563	"scale_up"	"*"	"calc"	false	1	false	false	false	0
564	"scale_up"	"*"	"calc"	false	1	false	false	false	0
565	"scale_up"	"*"	"calc"	false	1	false	false	false	0
566	"scale_up"	"*"	"calc"	false	1	false	false	false	0
567	"scale_up"	"*"	"calc"	false	1	false	false	false	0
568	"scale_up"	"*"	"calc"	false	1	false	false	false	0
569	"scale_up"	"*"	"calc"	false	1	false	false	false	0
570	"scale_up"	"*"	"calc"	false	1	false	false	false	0
571	"scale_up"	"*"	"calc"	false	1	false	false	false	0
572	"scale_up"	"*"	"calc"	false	1	false	false	false	0
573	"scale_up"	"*"	"calc"	false	1	false	false	false	0
574	"scale_up"	"*"	"calc"	false	1	false	false	false	0
575	"scale_up"	"*"	"calc"	false	1	false	false	false	0
576	"scale_up"	"*"	"calc"	false	1	false	false	false	0
577	"scale_up"	"*"	"calc"	false	1	false	false	false	0
578	"scale_up"	"*"	"calc"	false	1	false	false	false	0
579	"scale_up"	"*"	"calc"	false	1	false	false	false	0
580	"scale_up"	"*"	"calc"	false	1	false	false	false	0
581	"scale_up"	"*"	"calc"	false	1	false	false	false	0
582	"scale_up"	"*"	"calc"	false	1	false	false	false	0
583	"scale_up"	"*"	"calc"	false	1	false	false	false	0
584	"scale_up"	"*"	"calc"	false	1	false	false	false	0
585	"scale_up"	"*"	"calc"	false	1	false	false	false	0
586	"scale_up"	"*"	"calc"	false	1	false	false	false	0
587	"scale_up"	"*"	"calc"	false	1	false	false	false	0
588	"scale_up"	"*"	"calc"	false	1	false	false	false	0
589	"scale_up"	"*"	"calc"	false	1	false	false	false	0
590	"scale_up"	"*"	"calc"	false	1	false	false	false	0
591	"scale_up"	"*"	"calc"	false	1	false	false	false	0
592	"scale_up"	"*"	"calc"	false	1	false	false	false	0
593	"scale_up"	"*"	"calc"	false	1	false	false	false	0
594	"scale_up"	"*"	"calc"	false	1	false	false	false	0
595	"scale_up"	"*"	"calc"	false	1	false	false	false	0
596	"scale_up"	"*"	"calc"	false	1	false	false	false	0
597	"scale_up"	"*"	"calc"	false	1	false	false	false	0
598	"scale_up"	"*"	"calc"	false	1	false	false	false	0
599	"scale_up"	"*"	"calc"	false	1	false	false	false	0
600	"scale_up"	"*"	"calc"	false	1	false	false	false	0
601	"scale_up"	"*"	"calc"	false	1	false	false	false	0
602	"scale_up"	"*"	"calc"	false	1	false	false	false	0
603	"scale_up"	"*"	"calc"	false	1	false	false	false	0
604	"scale_up"	"*"	"calc"	false	1	false	false	false	0
605	"scale_up"	"*"	"calc"	false	1	false	false	false	0
606	"scale_up"	"*"	"calc"	false	1	false	false	false	0
607	"scale_up"	"*"	"calc"	false	1	false	false	false	0
608	"scale_up"	"*"	"calc"	false	1	false	false	false	0
609	"scale_up"	"*"	"calc"	false	1	false	false	false	0
610	"scale_up"	"*"	"calc"	false	1	false	false	false	0
611	"scale_up"	"*"	"calc"	false	1	false	false	false	0
612	"scale_up"	"*"	"calc"	false	1	false	false	false	0
613	"scale_up"	"*"	"calc"	false	1	false	false	false	0
614	"scale_up"	"*"	"calc"	false	1	false	false	false	0
615	"scale_up"	"*"	"calc"	false	1	false	false	false	0
616	"scale_up"	"*"	"calc"	false	1	false	false	false	0
617	"scale_up"	"*"	"calc"	false	1	false	false	false	0
618	"scale_up"	"*"	"calc"	false	1	false	false	false	0
619	"scale_up"	"*"	"calc"	false	1	false	false	false	0
620	"scale_up"	"*"	"calc"	false	1	false	false	false	0
621	"scale_up"	"*"	"calc"	false	1	false	false	false	0
622	"scale_up"	"*"	"calc"	false	1	false	false	false	0
623	"scale_up"	"*"	"calc"	false	1	false	false	false	0
624	"scale_up"	"*"	"calc"	false	1	false	false	false	0
625	"scale_up"	"*"	"calc"	false	1	false	false	false	0
626	"scale_up"	"*"	"calc"	false	1	false	false	false	0
627	"scale_up"	"*"	"calc"	false	1	false	false	false	0
628	"scale_up"	"*"	"calc"	false	1	false	false	false	0
629	"scale_up"	"*"	"calc"	false	1	false	false	false	0
630	"scale_up"	"*"	"calc"	false	1	false	false	false	0
631	"scale_up"	"*"	"calc"	false	1	false	false	false	0
632	"scale_up"	"*"	"calc"	false	1	false	false	false	0
633	"scale_up"	"*"	"calc"	false	1	false	false	false	0
634	"scale_up"	"*"	"calc"	false	1	false	false	false	0
635	"scale_up"	"*"	"calc"	false	1	false	false	false	0
636	"scale_up"	"*"	"calc"	false	1	false	false	false	0
637	"scale_up"	"*"	"calc"	false	1	false	false	false	0
638	"scale_up"	"*"	"calc"	false	1	false	false	false	0
639	"scale_up"	"*"	"calc"	false	1	false	false	false	0
640	"scale_up"	"*"	"calc"	false	1	false	false	false	0
641	"scale_up"	"*"	"calc"	false	1	false	false	false	0
642	"scale_up"	"*"	"calc"	false	1	false	false	false	0
643	"scale_up"	"*"	"calc"	false	1	false	false	false	0
644	"scale_up"	"*"	"calc"	false	1	false	false	false	0
645	"scale_up"	"*"	"calc"	false	1	false	false	false	0
646	"scale_up"	"*"	"calc"	false	1	false	false	false	0
647	"scale_up"	"*"	"calc"	false	1	false	false	false	0
648	"scale_up"	"*"	"calc"	false	1	false	false	false	0
649	"scale_up"	"*"	"calc"	false	1	false	false	false	0
650	"scale_up"	"*"	"calc"	false	1	false	false	false	0
651	"scale_up"	"*"	"calc"	false	1	false	false	false	0
652	"scale_up"	"*"	"calc"	false	1	false	false	false	0
653	"scale_up"	"*"	"calc"	false	1	false	false	false	0
654	"scale_up"	"*"	"calc"	false	1	false	false	false	0
655	"scale_up"	"*"	"calc"	false	1	false	false	false	0
656	"scale_up"	"*"	"calc"	false	1	false	false	false	0
657	"scale_up"	"*"	"calc"	false	1	false	false	false	0
658	"scale_up"	"*"	"calc"	false	1	false	false	false	0
659	"scale_up"	"*"	"calc"	false	1	false	false	false	0
660	"scale_up"	"*"	"calc"	false	1	false	false	false	0
661	"scale_up"	"*"	"calc"	false	1	false	false	false	0
662	"scale_up"	"*"	"calc"	false	1	false	false	false	0
663	"scale_up"	"*"	"calc"	false	1	false	false	false	0
664	"scale_up"	"*"	"calc"	false	1	false	false	false	0
665	"scale_up"	"*"	"calc"	false	1	false	false	false	0
666	"scale_up"	"*"	"calc"	false	1	false	false	false	0
667	"scale_up"	"*"	"calc"	false	1	false	false	false	0
668	"scale_up"	"*"	"calc"	false	1	false	false	false	0
669	"scale_up"	"*"	"calc"	false	1	false	false	false	0
670	"scale_up"	"*"	"calc"	false	1	false	false	false	0
671	"scale_up"	"*"	"calc"	false	1	false	false	false	0
672	"scale_up"	"*"	"calc"	false	1	false	false	false	0
673	"scale_up"	"*"	"calc"	false	1	false	false	false	0
674	"scale_up"	"*"	"calc"	false	1	false	false	false	0
675	"scale_up"	"*"	"calc"	false	1	false	false	false	0
676	"scale_up"	"*"	"calc"	false	1	false	false	false	0
677	"scale_up"	"*"	"calc"	false	1	false	false	false	0
678	"scale_up"	"*"	"calc"	false	1	false	false	false	0
679	"scale_up"	"*"	"calc"	false	1	false	false	false	0
680	"scale_up"	"*"	"calc"	false	1	false	false	false	0
681	"scale_up"	"*"	"calc"	false	1	false	false	false	0
682	"scale_up"	"*"	"calc"	false	1	false	false	false	0
683	"scale_up"	"*"	"calc"	false	1	false	false	false	0
684	"scale_up"	"*"	"calc"	false	1	false	false	false	0
685	"scale_up"	"*"	"calc"	false	1	false	false	false	0
686	"scale_up"	"*"	"calc"	false	1	false	false	false	0
687	"scale_up"	"*"	"calc"	false	1	false	false	false	0
688	"scale_up"	"*"	"calc"	false	1	false	false	false	0
689	"scale_up"	"*"	"calc"	false	1	false	false	false	0
690	"scale_up"	"*"	"calc"	false	1	false	false	false	0
691	"scale_up"	"*"	"calc"	false	1	false	false	false	0
692	"scale_up"	"*"	"calc"	false	1	false	false	false	0
693	"scale_up"	"*"	"calc"	false	1	false	false	false	0
694	"scale_up"	"*"	"calc"	false	1	false	false	false	0
695	"scale_up"	"*"	"calc"	false	1	false	false	false	0
696	"scale_up"	"*"	"calc"	false	1	false	false	false	0
697	"scale_up"	"*"	"calc"	false	1	false	false	false	0
698	"scale_up"	"*"	"calc"	false	1	false	false	false	0
699	"scale_up"	"*"	"calc"	false	1	false	false	false	0
700	"scale_up"	"*"	"calc"	false	1	false	false	false	0
701	"scale_up"	"*"	"calc"	false	1	false	false	false	0
702	"scale_up"	"*"	"calc"	false	1	false	false	false	0
703	"scale_up"	"*"	"calc"	false	1	false	false	false	0
704	"scale_up"	"*"	"calc"	false	1	false	false	false	0
705	"scale_up"	"*"	"calc"	false	1	false	false	false	0
706	"scale_up"	"*"	"calc"	false	1	false	false	false	0
707	"scale_up"	"*"	"calc"	false	1	false	false	false	0
708	"scale_up"	"*"	"calc"	false	1	false	false	false	0
709	"scale_up"	"*"	"calc"	false	1	false	false	false	0
710	"scale_up"	"*"	"calc"	false	1	false	false	false	0
711	"scale_up"	"*"	"calc"	false	1	false	false	false	0
712	"scale_up"	"*"	"calc"	false	1	false	false	false	0
713	"scale_up"	"*"	"calc"	false	1	false	false	false	0
714	"scale_up"	"*"	"calc"	false	1	false	false	false	0
715	"scale_up"	"*"	"calc"	false	1	false	false	false	0
716	"scale_up"	"*"	"calc"	false	1	false	false	false	0
717	"scale_up"	"*"	"calc"	false	1	false	false	false	0
718	"scale_up"	"*"	"calc"	false	1	false	false	false	0
719	"scale_up"	"*"	"calc"	false	1	false	false	false	0
720	"scale_up"	"*"	"calc"	false	1	false	false	false	0
721	"scale_up"	"*"	"calc"	false	1	false	false	false	0
722	"scale_up"	"*"	"calc"	false	1	false	false	false	0
723	"scale_up"	"*"	"calc"	false	1	false	false	false	0
724	"scale_up"	"*"	"calc"	false	1	false	false	false	0
725	"scale_up"	"*"	"calc"	false	1	false	false	false	0
726	"scale_up"	"*"	"calc"	false	1	false	false	false	0
727	"scale_up"	"*"	"calc"	false	1	false	false	false	0
728	"scale_up"	"*"	"calc"	false	1	false	false	false	0
729	"scale_up"	"*"	"calc"	false	1	false	false	false	0
730	"scale_up"	"*"	"calc"	false	1	false	false	false	0
731	"scale_up"	"*"	"calc"	false	1	false	false	false	0
732	"scale_up"	"*"	"calc"	false	1	false	false	false	0
733	"scale_up"	"*"	"calc"	false	1	false	false	false	0
734	"scale_up"	"*"	"calc"	false	1	false	false	false	0
735	"scale_up"	"*"	"calc"	false	1	false	false	false	0
736	"scale_up"	"*"	"calc"	false	1	false	false	false	0
737	"scale_up"	"*"	"calc"	false	1	false	false	false	0
738	"scale_up"	"*"	"calc"	false	1	false	false	false	0
739	"scale_up"	"*"	"calc"	false	1	false	false	false	0
740	"scale_up"	"*"	"calc"	false	1	false	false	false	0
741	"scale_up"	"*"	"calc"	false	1	false	false	false	0
742	"scale_up"	"*"	"calc"	false	1	false	false	false	0
743	"scale_up"	"*"	"calc"	false	1	false	false	false	0
744	"scale_up"	"*"	"calc"	false	1	false	false	false	0
745	"scale_up"	"*"	"calc"	false	1	false	false	false	0
746	"scale_up"	"*"	"calc"	false	1	false	false	false	0
747	"scale_up"	"*"	"calc"	false	1	false	false	false	0
748	"scale_up"	"*"	"calc"	false	1	false	false	false	0
749	"scale_up"	"*"	"calc"	false	1	false	false	false	0
750	"scale_up"	"*"	"calc"	false	1	false	false	false	0
751	"scale_up"	"*"	"calc"	false	1	false	false	false	0
752	"scale_up"	"*"	"calc"	false	1	false	false	false	0
753	"scale_up"	"*"	"calc"	false	1	false	false	false	0
754	"scale_up"	"*"	"calc"	false	1	false	false	false	0
755	"scale_up"	"*"	"calc"	false	1	false	false	false	0
756	"scale_up"	"*"	"calc"	false	1	false	false	false	0
757	"scale_up"	"*"	"calc"	false	1	false	false	false	0
758	"scale_up"	"*"	"calc"	false	1	false	false	false	0
759	"scale_up"	"*"	"calc"	false	1	false	false	false	0
760	"scale_up"	"*"	"calc"	false	1	false	false	false	0
761	"scale_up"	"*"	"calc"	false	1	false	false	false	0
762	"scale_up"	"*"	"calc"	false	1	false	false	false	0
763	"scale_up"	"*"	"calc"	false	1	false	false	false	0
764	"scale_up"	"*"	"calc"	false	1	false	false	false	0
765	"scale_up"	"*"	"calc"	false	1	false	false	false	0
766	"scale_up"	"*"	"calc"	false	1	false	false	false	0
767	"scale_up"	"*"	"calc"	false	1	false	false	false	0
768	"scale_up"	"*"	"calc"	false	1	false	false	false	0
769	"scale_up"	"*"	"calc"	false	1	false	false	false	0
770	"scale_up"	"*"	"calc"	false	1	false	false	false	0
771	"scale_up"	"*"	"calc"	false	1	false	false	false	0
772	"scale_up"	"*"	"calc"	false	1	false	false	false	0
773	"scale_up"	"*"	"calc"	false	1	false	false	false	0
774	"scale_up"	"*"	"calc"	false	1	false	false	false	0
775	"scale_up"	"*"	"calc"	false	1	false	false	false	0
776	"scale_up"	"*"	"calc"	false	1	false	false	false	0
777	"scale_up"	"*"	"calc"	false	1	false	false	false	0
778	"scale_up"	"*"	"calc"	false	1	false	false	false	0
779	"scale_up"	"*"	"calc"	false	1	false	false	false	0
780	"scale_up"	"*"	"calc"	false	1	false	false	false	0
781	"scale_up"	"*"	"calc"	false	1	false	false	false	0
782	"scale_up"	"*"	"calc"	false	1	false	false	false	0
783	"scale_up"	"*"	"calc"	false	1	false	false	false	0
784	"scale_up"	"*"	"calc"	false	1	false	false	false	0
785	"scale_up"	"*"	"calc"	false	1	false	false	false	0
786	"scale_up"	"*"	"calc"	false	1	false	false	false	0
787	"scale_up"	"*"	"calc"	false	1	false	false	false	0
788	"scale_up"	"*"	"calc"	false	1	false	false	false	0
789	"scale_up"	"*"	"calc"	false	1	false	false	false	0
790	"scale_up"	"*"	"calc"	false	1	false	false	false	0
791	"scale_up"	"*"	"calc"	false	1	false	false	false	0
792	"scale_up"	"*"	"calc"	false	1	false	false	false	0
793	"scale_up"	"*"	"calc"	false	1	false	false	false	0
794	"scale_up"	"*"	"calc"	false	1	false	false	false	0
795	"scale_up"	"*"	"calc"	false	1	false	false	false	0
796	"scale_up"	"*"	"calc"	false	1	false	false	false	0
797	"scale_up"	"*"	"calc"	false	1	false	false	false	0
798	"scale_up"	"*"	"calc"	false	1	false	false	false	0
799	"scale_up"	"*"	"calc"	false	1	false	false	false	0
800	"scale_up"	"*"	"calc"	false	1	false	false	false	0
801	"scale_up"	"*"	"calc"	false	1	false	false	false	0
802	"scale_up"	"*"	"calc"	false	1	false	false	false	0
803	"scale_up"	"*"	"calc"	false	1	false	false	false	0
804	"scale_up"	"*"	"calc"	false	1	false	false	false	0
805	"scale_up"	"*"	"calc"	false	1	false	false	false	0
806	"scale_up"	"*"	"calc"	false	1	false	false	false	0
807	"scale_up"	"*"	"calc"	false	1	false	false	false	0
808	"scale_up"	"*"	"calc"	false	1	false	false	false	0
809	"scale_up"	"*"	"calc"	false	1	false	false	false	0
810	"scale_up"	"*"	"calc"	false	1	false	false	false	0
811	"scale_up"	"*"	"calc"	false	1	false	false	false	0
812	"scale_up"	"*"	"calc"	false	1	false	false	false	0
813	"scale_up"	"*"	"calc"	false	1	false	false	false	0
814	"scale_up"	"*"	"calc"	false	1	false	false	false	0
815	"scale_up"	"*"	"calc"	false	1	false	false	false	0
816	"scale_up"	"*"	"calc"	false	1	false	false	false	0
817	"scale_up"	"*"	"calc"	false	1	false	false	false	0
818	"scale_up"	"*"	"calc"	false	1	false	false	false	0
819	"scale_up"	"*"	"calc"	false	1	false	false	false	0
820	"scale_up"	"*"	"calc"	false	1	false	false	false	0
821	"scale_up"	"*"	"calc"	false	1	false	false	false	0
822	"scale_up"	"*"	"calc"	false	1	false	false	false	0
823	"scale_up"	"*"	"calc"	false	1	false	false	false	0
824	"scale_up"	"*"	"calc"	false	1	false	false	false	0
825	"scale_up"	"*"	"calc"	false	1	false	false	false	0
826	"scale_up"	"*"	"calc"	false	1	false	false	false	0
827	"scale_up"	"*"	"calc"	false	1	false	false	false	0
828	"scale_up"	"*"	"calc"	false	1	false	false	false	0
829	"scale_up"	"*"	"calc"	false	1	false	false	false	0
830	"scale_up"	"*"	"calc"	false	1	false	false	false	0
831	"scale_up"	"*"	"calc"	false	1	false	false	false	0
832	"scale_up"	"*"	"calc"	false	1	false	false	false	0
833	"scale_up"	"*"	"calc"	false	1	false	false	false	0
834	"scale_up"	"*"	"calc"	false	1	false	false	false	0
835	"scale_up"	"*"	"calc"	false	1	false	false	false	0
836	"scale_up"	"*"	"calc"	false	1	false	false	false	0
837	"scale_up"	"*"	"calc"	false	1	false	false	false	0
838	"scale_up"	"*"	"calc"	false	1	false	false	false	0
839	"scale_up"	"*"	"calc"	false	1	false	false	false	0
840	"scale_up"	"*"	"calc"	false	1	false	false	false	0
841	"scale_up"	"*"	"calc"	false	1	false	false	false	0
842	"scale_up"	"*"	"calc"	false	1	false	false	false	0
843	"scale_up"	"*"	"calc"	false	1	false	false	false	0
844	"scale_up"	"*"	"calc"	false	1	false	false	false	0
845	"scale_up"	"*"	"calc"	false	1	false	false	false	0
846	"scale_up"	"*"	"calc"	false	1	false	false	false	0
847	"scale_up"	"*"	"calc"	false	1	false	false	false	0
848	"scale_up"	"*"	"calc"	false	1	false	false	false	0
849	"scale_up"	"*"	"calc"	false	1	false	false	false	0
850	"scale_up"	"*"	"calc"	false	1	false	false	false	0
851	"scale_up"	"*"	"calc"	false	1	false	false	false	0
852	"scale_up"	"*"	"calc"	false	1	false	false	false	0
853	"scale_up"	"*"	"calc"	false	1	false	false	false	0
854	"scale_up"	"*"	"calc"	false	1	false	false	false	0
855	"scale_up"	"*"	"calc"	false	1	false	false	false	0
856	"scale_up"	"*"	"calc"	false	1	false	false	false	0
857	"scale_up"	"*"	"calc"	false	1	false	false	false	0
858	"scale_up"	"*"	"calc"	false	1	false	false	false	0
859	"scale_up"	"*"	"calc"	false	1	false	false	false	0
860	"scale_up"	"*"	"calc"	false	1	false	false	false	0
861	"scale_up"	"*"	"calc"	false	1	false	false	false	0
862	"scale_up"	"*"	"calc"	false	1	false	false	false	0
863	"scale_up"	"*"	"calc"	false	1	false	false	false	0
864	"scale_up"	"*"	"calc"	false	1	false	false	false	0
865	"scale_up"	"*"	"calc"	false	1	false	false	false	0
866	"scale_up"	"*"	"calc"	false	1	false	false	false	0
867	"scale_up"	"*"	"calc"	false	1	false	false	false	0
868	"scale_up"	"*"	"calc"	false	1	false	false	false	0
869	"scale_up"	"*"	"calc"	false	1	false	false	false	0
870	"scale_up"	"*"	"calc"	false	1	false	false	false	0
871	"scale_up"	"*"	"calc"	false	1	false	false	false	0
872	"scale_up"	"*"	"calc"	false	1	false	false	false	0
873	"scale_up"	"*"	"calc"	false	1	false	false	false	0
874	"scale_up"	"*"	"calc"	false	1	false	false	false	0
875	"scale_up"	"*"	"calc"	false	1	false	false	false	0
876	"scale_up"	"*"	"calc"	false	1	false	false	false	0
877	"scale_up"	"*"	"calc"	false	1	false	false	false	0
878	"scale_up"	"*"	"calc"	false	1	false	false	false	0
879	"scale_up"	"*"	"calc"	false	1	false	false	false	0
880	"scale_up"	"*"	"calc"	false	1	false	false	false	0
881	"scale_up"	"*"	"calc"	false	1	false	false	false	0
882	"scale_up"	"*"	"calc"	false	1	false	false	false	0
883	"scale_up"	"*"	"calc"	false	1	false	false	false	0
884	"scale_up"	"*"	"calc"	false	1	false	false	false	0
885	"scale_up"	"*"	"calc"	false	1	false	false	false	0
886	"scale_up"	"*"	"calc"	false	1	false	false	false	0
887	"scale_up"	"*"	"calc"	false	1	false	false	false	0
888	"scale_up"	"*"	"calc"	false	1	false	false	false	0
889	"scale_up"	"*"	"calc"	false	1	false	false	false	0
890	"scale_up"	"*"	"calc"	false	1	false	false	false	0
891	"scale_up"	"*"	"calc"	false	1	false	false	false	0
892	"scale_up"	"*"	"calc"	false	1	false	false	false	0
893	"scale_up"	"*"	"calc"	false	1	false	false	false	0
894	"scale_up"	"*"	"calc"	false	1	false	false	false	0
895	"scale_up"	"*"	"calc"	false	1	false	false	false	0
896	"scale_up"	"*"	"calc"	false	1	false	false	false	0
897	"scale_up"	"*"	"calc"	false	1	false	false	false	0
898	"scale_up"	"*"	"calc"	false	1	false	false	false	0
899	"scale_up"	"*"	"calc"	false	1	false	false	false	0
900	"scale_up"	"*"	"calc"	false	1	false	false	false	0
901	"scale_up"	"*"	"calc"	false	1	false	false	false	0
902	"scale_up"	"*"	"calc"	false	1	false	false	false	0
903	"scale_up"	"*"	"calc"	false	1	false	false	false	0
904	"scale_up"	"*"	"calc"	false	1	false	false	false	0
905	"scale_up"	"*"	"calc"	false	1	false	false	false	0
906	"scale_up"	"*"	"calc"	false	1	false	false	false	0
907	"scale_up"	"*"	"calc"	false	1	false	false	false	0
908	"scale_up"	"*"	"calc"	false	1	false	false	false	0
909	"scale_up"	"*"	"calc"	false	1	false	false	false	0
910	"scale_up"	"*"	"calc"	false	1	false	false	false	0
911	"scale_up"	"*"	"calc"	false	1	false	false	false	0
912	"scale_up"	"*"	"calc"	false	1	false	false	false	0
913	"scale_up"	"*"	"calc"	false	1	false	false	false	0
914	"scale_up"	"*"	"calc"	false	1	false	false	false	0
915	"scale_up"	"*"	"calc"	false	1	false	false	false	0
916	"scale_up"	"*"	"calc"	false	1	false	false	false	0
917	"scale_up"	"*"	"calc"	false	1	false	false	false	0
918	"scale_up"	"*"	"calc"	false	1	false	false	false	0
919	"scale_up"	"*"	"calc"	false	1	false	false	false	0
920	"scale_up"	"*"	"calc"	false	1	false	false	false	0
921	"scale_up"	"*"	"calc"	false	1	false	false	false	0
922	"scale_up"	"*"	"calc"	false	1	false	false	false	0
923	"scale_up"	"*"	"calc"	false	1	false	false	false	0
924	"scale_up"	"*"	"calc"	false	1	false	false	false	0
925	"scale_up"	"*"	"calc"	false	1	false	false	false	0
926	"scale_up"	"*"	"calc"	false	1	false	false	false	0
927	"scale_up"	"*"	"calc"	false	1	false	false	false	0
928	"scale_up"	"*"	"calc"	false	1	false	false	false	0
929	"scale_up"	"*"	"calc"	false	1	false	false	false	0
930	"scale_up"	"*"	"calc"	false	1	false	false	false	0
931	"scale_up"	"*"	"calc"	false	1	false	false	false	0
932	"scale_up"	"*"	"calc"	false	1	false	false	false	0
933	"scale_up"	"*"	"calc"	false	1	false	false	false	0
934	"scale_up"	"*"	"calc"	false	1	false	false	false	0
935	"scale_up"	"*"	"calc"	false	1	false	false	false	0
936	"scale_up"	"*"	"calc"	false	1	false	false	false	0
937	"scale_up"	"*"	"calc"	false	1	false	false	false	0
938	"scale_up"	"*"	"calc"	false	1	false	false	false	0
939	"scale_up"	"*"	"calc"	false	1	false	false	false	0
940	"scale_up"	"*"	"calc"	false	1	false	false	false	0
941	"scale_up"	"*"	"calc"	false	1	false	false	false	0
942	"scale_up"	"*"	"calc"	false	1	false	false	false	0
943	"scale_up"	"*"	"calc"	false	1	false	false	false	0
944	"scale_up"	"*"	"calc"	false	1	false	false	false	0
945	"scale_up"	"*"	"calc"	false	1	false	false	false	0
946	"scale_up"	"*"	"calc"	false	1	false	false	false	0
947	"scale_up"	"*"	"calc"	false	1	false	false	false	0
948	"scale_up"	"*"	"calc"	false	1	false	false	false	0
949	"scale_up"	"*"	"calc"	false	1	false	false	false	0
950	"scale_up"	"*"	"calc"	false	1	false	false	false	0
951	"scale_up"	"*"	"calc"	false	1	false	false	false	0
952	"scale_up"	"*"	"calc"	false	1	false	false	false	0
953	"scale_up"	"*"	"calc"	false	1	false	false	false	0
954	"scale_up"	"*"	"calc"	false	1	false	false	false	0
955	"scale_up"	"*"	"calc"	false	1	false	false	false	0
956	"scale_up"	"*"	"calc"	false	1	false	false	false	0
957	"scale_up"	"*"	"calc"	false	1	false	false	false	0
958	"scale_up"	"*"	"calc"	false	1	false	false	false	0
959	"scale_up"	"*"	"calc"	false	1	false	false	false	0
960	"scale_up"	"*"	"calc"	false	1	false	false	false	0
961	"scale_up"	"*"	"calc"	false	1	false	false	false	0
962	"scale_up"	"*"	"calc"	false	1	false	false	false	0
963	"scale_up"	"*"	"calc"	false	1	false	false	false	0
964	"scale_up"	"*"	"calc"	false	1	false	false	false	0
965	"scale_up"	"*"	"calc"	false	1	false	false	false	0
966	"scale_up"	"*"	"calc"	false	1	false	false	false	0
967	"scale_up"	"*"	"calc"	false	1	false	false	false	0
968	"scale_up"	"*"	"calc"	false	1	false	false	false	0
969	"scale_up"	"*"	"calc"	false	1	false	false	false	0
970	"scale_up"	"*"	"calc"	false	1	false	false	false	0
971	"scale_up"	"*"	"calc"	false	1	false	false	false	0
972	"scale_up"	"*"	"calc"	false	1	false	false	false	0
973	"scale_up"	"*"	"calc"	false	1	false	false	false	0
974	"scale_up"	"*"	"calc"	false	1	false	false	false	0
975	"scale_up"	"*"	"calc"	false	1	false	false	false	0
976	"scale_up"	"*"	"calc"	false	1	false	false	false	0
977	"scale_up"	"*"	"calc"	false	1	false	false	false	0
978	"scale_up"	"*"	"calc"	false	1	false	false	false	0
979	"scale_up"	"*"	"calc"	false	1	false	false	false	0
980	"scale_up"	"*"	"calc"	false	1	false	false	false	0
981	"scale_up"	"*"	"calc"	false	1	false	false	false	0
982	"scale_up"	"*"	"calc"	false	1	false	false	false	0
983	"scale_up"	"*"	"calc"	false	1	false	false	false	0
984	"scale_up"	"*"	"calc"	false	1	false	false	false	0
985	"power"	"pow"	"mmath"	false	1	false	false	false	0
986	"floor"	"floor"	"mmath"	false	1	false	false	false	0
987	"ceil"	"ceil"	"mmath"	false	1	false	false	false	0
988	"ceiling"	"ceil"	"mmath"	false	1	false	false	false	0
989	"sin"	"sin"	"mmath"	false	1	false	false	false	0
990	"cos"	"cos"	"mmath"	false	1	false	false	false	0
991	"tan"	"tan"	"mmath"	false	1	false	false	false	0
992	"asin"	"asin"	"mmath"	false	1	false	false	false	0
993	"acos"	"acos"	"mmath"	false	1	false	false	false	0
994	"atan"	"atan"	"mmath"	false	1	false	false	false	0
995	"atan"	"atan2"	"mmath"	false	1	false	false	false	0
996	"sinh"	"sinh"	"mmath"	false	1	false	false	false	0
997	"cot"	"cot"	"mmath"	false	1	false	false	false	0
998	"cosh"	"cosh"	"mmath"	false	1	false	false	false	0
999	"tanh"	"tanh"	"mmath"	false	1	false	false	false	0
1000	"sqrt"	"sqrt"	"mmath"	false	1	false	false	false	0
1001	"exp"	"exp"	"mmath"	false	1	false	false	false	0
1002	"log"	"log"	"mmath"	false	1	false	false	false	0
1003	"log10"	"log10"	"mmath"	false	1	false	false	false	0
1004	"power"	"pow"	"mmath"	false	1	false	false	false	0
1005	"floor"	"floor"	"mmath"	false	1	false	false	false	0
1006	"ceil"	"ceil"	"mmath"	false	1	false	false	false	0
1007	"ceiling"	"ceil"	"mmath"	false	1	false	false	false	0
1008	"sin"	"sin"	"mmath"	false	1	false	false	false	0
1009	"cos"	"cos"	"mmath"	false	1	false	false	false	0
1010	"tan"	"tan"	"mmath"	false	1	false	false	false	0
1011	"asin"	"asin"	"mmath"	false	1	false	false	false	0
1012	"acos"	"acos"	"mmath"	false	1	false	false	false	0
1013	"atan"	"atan"	"mmath"	false	1	false	false	false	0
1014	"atan"	"atan2"	"mmath"	false	1	false	false	false	0
1015	"sinh"	"sinh"	"mmath"	false	1	false	false	false	0
1016	"cot"	"cot"	"mmath"	false	1	false	false	false	0
1017	"cosh"	"cosh"	"mmath"	false	1	false	false	false	0
1018	"tanh"	"tanh"	"mmath"	false	1	false	false	false	0
1019	"sqrt"	"sqrt"	"mmath"	false	1	false	false	false	0
1020	"exp"	"exp"	"mmath"	false	1	false	false	false	0
1021	"log"	"log"	"mmath"	false	1	false	false	false	0
1022	"log10"	"log10"	"mmath"	false	1	false	false	false	0
1023	"pi"	"pi"	"mmath"	false	1	false	false	false	0
1024	"rand"	"rand"	"mmath"	false	1	true	false	false	0
1025	"rand"	"sqlrand"	"mmath"	false	1	true	false	false	0
1026	"curdate"	"current_date"	"mtime"	false	1	false	false	false	0
1027	"current_date"	"current_date"	"mtime"	false	1	false	false	false	0
1028	"curtime"	"current_time"	"mtime"	false	1	false	false	false	0
1029	"current_time"	"current_time"	"mtime"	false	1	false	false	false	0
1030	"current_timestamp"	"current_timestamp"	"mtime"	false	1	false	false	false	0
1031	"localtime"	"current_time"	"sql"	false	1	false	false	false	0
1032	"localtimestamp"	"current_timestamp"	"sql"	false	1	false	false	false	0
1033	"sql_sub"	"date_sub_msec_interval"	"mtime"	false	1	false	false	false	0
1034	"sql_sub"	"date_sub_month_interval"	"mtime"	false	1	false	false	false	0
1035	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	false	1	false	false	false	0
1036	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	false	1	false	false	false	0
1037	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	false	1	false	false	false	0
1038	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	false	1	false	false	false	0
1039	"sql_sub"	"time_sub_msec_interval"	"mtime"	false	1	false	false	false	0
1040	"sql_sub"	"diff"	"mtime"	false	1	false	false	false	0
1041	"sql_sub"	"diff"	"mtime"	false	1	false	false	false	0
1042	"sql_sub"	"diff"	"mtime"	false	1	false	false	false	0
1043	"sql_add"	"date_add_msec_interval"	"mtime"	false	1	false	false	false	0
1044	"sql_add"	"addmonths"	"mtime"	false	1	false	false	false	0
1045	"sql_add"	"timestamp_add_msec_interval"	"mtime"	false	1	false	false	false	0
1046	"sql_add"	"timestamp_add_month_interval"	"mtime"	false	1	false	false	false	0
1047	"sql_add"	"timestamp_add_msec_interval"	"mtime"	false	1	false	false	false	0
1048	"sql_add"	"timestamp_add_month_interval"	"mtime"	false	1	false	false	false	0
1049	"sql_add"	"time_add_msec_interval"	"mtime"	false	1	false	false	false	0
1050	"local_timezone"	"local_timezone"	"mtime"	false	1	false	false	false	0
1051	"year"	"year"	"mtime"	false	1	false	false	false	0
1052	"month"	"month"	"mtime"	false	1	false	false	false	0
1053	"day"	"day"	"mtime"	false	1	false	false	false	0
1054	"hour"	"hours"	"mtime"	false	1	false	false	false	0
1055	"minute"	"minutes"	"mtime"	false	1	false	false	false	0
1056	"second"	"sql_seconds"	"mtime"	false	1	false	false	false	0
1057	"year"	"year"	"mtime"	false	1	false	false	false	0
1058	"month"	"month"	"mtime"	false	1	false	false	false	0
1059	"day"	"day"	"mtime"	false	1	false	false	false	0
1060	"hour"	"hours"	"mtime"	false	1	false	false	false	0
1061	"minute"	"minutes"	"mtime"	false	1	false	false	false	0
1062	"second"	"sql_seconds"	"mtime"	false	1	false	false	false	0
1063	"year"	"year"	"mtime"	false	1	false	false	false	0
1064	"month"	"month"	"mtime"	false	1	false	false	false	0
1065	"day"	"day"	"mtime"	false	1	false	false	false	0
1066	"hour"	"hours"	"mtime"	false	1	false	false	false	0
1067	"minute"	"minutes"	"mtime"	false	1	false	false	false	0
1068	"second"	"sql_seconds"	"mtime"	false	1	false	false	false	0
1069	"year"	"year"	"mtime"	false	1	false	false	false	0
1070	"month"	"month"	"mtime"	false	1	false	false	false	0
1071	"day"	"day"	"mtime"	false	1	false	false	false	0
1072	"hour"	"hours"	"mtime"	false	1	false	false	false	0
1073	"minute"	"minutes"	"mtime"	false	1	false	false	false	0
1074	"second"	"seconds"	"mtime"	false	1	false	false	false	0
1075	"dayofyear"	"dayofyear"	"mtime"	false	1	false	false	false	0
1076	"weekofyear"	"weekofyear"	"mtime"	false	1	false	false	false	0
1077	"dayofweek"	"dayofweek"	"mtime"	false	1	false	false	false	0
1078	"dayofmonth"	"day"	"mtime"	false	1	false	false	false	0
1079	"week"	"weekofyear"	"mtime"	false	1	false	false	false	0
1080	"next_value_for"	"next_value"	"sql"	false	1	true	false	false	0
1081	"get_value_for"	"get_value"	"sql"	false	1	false	false	false	0
1082	"restart"	"restart"	"sql"	false	1	false	false	false	0
1083	"index"	"index"	"calc"	false	1	false	false	false	0
1084	"index"	"index"	"calc"	false	1	false	false	false	0
1085	"index"	"index"	"calc"	false	1	false	false	false	0
1086	"strings"	"strings"	"calc"	false	1	false	false	false	0
1087	"locate"	"locate"	"str"	false	1	false	false	false	0
1088	"locate"	"locate"	"str"	false	1	false	false	false	0
1089	"substring"	"substring"	"str"	false	1	false	false	false	0
1090	"substring"	"substring"	"str"	false	1	false	false	false	0
1091	"like"	"like"	"str"	false	1	false	false	false	0
1092	"like"	"like"	"str"	false	1	false	false	false	0
1093	"ilike"	"ilike"	"str"	false	1	false	false	false	0
1094	"ilike"	"ilike"	"str"	false	1	false	false	false	0
1095	"not_like"	"not_like"	"str"	false	1	false	false	false	0
1096	"not_like"	"not_like"	"str"	false	1	false	false	false	0
1097	"not_ilike"	"not_ilike"	"str"	false	1	false	false	false	0
1098	"not_ilike"	"not_ilike"	"str"	false	1	false	false	false	0
1099	"patindex"	"patindex"	"pcre"	false	1	false	false	false	0
1100	"truncate"	"stringleft"	"str"	false	1	false	false	false	0
1101	"concat"	"+"	"calc"	false	1	false	false	false	0
1102	"ascii"	"ascii"	"str"	false	1	false	false	false	0
1103	"code"	"unicode"	"str"	false	1	false	false	false	0
1104	"length"	"stringlength"	"str"	false	1	false	false	false	0
1105	"right"	"stringright"	"str"	false	1	false	false	false	0
1106	"left"	"stringleft"	"str"	false	1	false	false	false	0
1107	"upper"	"toUpper"	"str"	false	1	false	false	false	0
1108	"ucase"	"toUpper"	"str"	false	1	false	false	false	0
1109	"lower"	"toLower"	"str"	false	1	false	false	false	0
1110	"lcase"	"toLower"	"str"	false	1	false	false	false	0
1111	"trim"	"trim"	"str"	false	1	false	false	false	0
1112	"trim"	"trim"	"str"	false	1	false	false	false	0
1113	"ltrim"	"ltrim"	"str"	false	1	false	false	false	0
1114	"ltrim"	"ltrim"	"str"	false	1	false	false	false	0
1115	"rtrim"	"rtrim"	"str"	false	1	false	false	false	0
1116	"rtrim"	"rtrim"	"str"	false	1	false	false	false	0
1117	"lpad"	"lpad"	"str"	false	1	false	false	false	0
1118	"lpad"	"lpad"	"str"	false	1	false	false	false	0
1119	"rpad"	"rpad"	"str"	false	1	false	false	false	0
1120	"rpad"	"rpad"	"str"	false	1	false	false	false	0
1121	"insert"	"insert"	"str"	false	1	false	false	false	0
1122	"replace"	"replace"	"str"	false	1	false	false	false	0
1123	"repeat"	"repeat"	"str"	false	1	false	false	false	0
1124	"space"	"space"	"str"	false	1	false	false	false	0
1125	"char_length"	"length"	"str"	false	1	false	false	false	0
1126	"character_length"	"length"	"str"	false	1	false	false	false	0
1127	"octet_length"	"nbytes"	"str"	false	1	false	false	false	0
1128	"soundex"	"soundex"	"txtsim"	false	1	false	false	false	0
1129	"difference"	"stringdiff"	"txtsim"	false	1	false	false	false	0
1130	"editdistance"	"editdistance"	"txtsim"	false	1	false	false	false	0
1131	"editdistance2"	"editdistance2"	"txtsim"	false	1	false	false	false	0
1132	"similarity"	"similarity"	"txtsim"	false	1	false	false	false	0
1133	"qgramnormalize"	"qgramnormalize"	"txtsim"	false	1	false	false	false	0
1134	"levenshtein"	"levenshtein"	"txtsim"	false	1	false	false	false	0
1135	"levenshtein"	"levenshtein"	"txtsim"	false	1	false	false	false	0
1136	"index"	"index"	"calc"	false	1	false	false	false	0
1137	"index"	"index"	"calc"	false	1	false	false	false	0
1138	"index"	"index"	"calc"	false	1	false	false	false	0
1139	"strings"	"strings"	"calc"	false	1	false	false	false	0
1140	"locate"	"locate"	"str"	false	1	false	false	false	0
1141	"locate"	"locate"	"str"	false	1	false	false	false	0
1142	"substring"	"substring"	"str"	false	1	false	false	false	0
1143	"substring"	"substring"	"str"	false	1	false	false	false	0
1144	"like"	"like"	"str"	false	1	false	false	false	0
1145	"like"	"like"	"str"	false	1	false	false	false	0
1146	"ilike"	"ilike"	"str"	false	1	false	false	false	0
1147	"ilike"	"ilike"	"str"	false	1	false	false	false	0
1148	"not_like"	"not_like"	"str"	false	1	false	false	false	0
1149	"not_like"	"not_like"	"str"	false	1	false	false	false	0
1150	"not_ilike"	"not_ilike"	"str"	false	1	false	false	false	0
1151	"not_ilike"	"not_ilike"	"str"	false	1	false	false	false	0
1152	"patindex"	"patindex"	"pcre"	false	1	false	false	false	0
1153	"truncate"	"stringleft"	"str"	false	1	false	false	false	0
1154	"concat"	"+"	"calc"	false	1	false	false	false	0
1155	"ascii"	"ascii"	"str"	false	1	false	false	false	0
1156	"code"	"unicode"	"str"	false	1	false	false	false	0
1157	"length"	"stringlength"	"str"	false	1	false	false	false	0
1158	"right"	"stringright"	"str"	false	1	false	false	false	0
1159	"left"	"stringleft"	"str"	false	1	false	false	false	0
1160	"upper"	"toUpper"	"str"	false	1	false	false	false	0
1161	"ucase"	"toUpper"	"str"	false	1	false	false	false	0
1162	"lower"	"toLower"	"str"	false	1	false	false	false	0
1163	"lcase"	"toLower"	"str"	false	1	false	false	false	0
1164	"trim"	"trim"	"str"	false	1	false	false	false	0
1165	"trim"	"trim"	"str"	false	1	false	false	false	0
1166	"ltrim"	"ltrim"	"str"	false	1	false	false	false	0
1167	"ltrim"	"ltrim"	"str"	false	1	false	false	false	0
1168	"rtrim"	"rtrim"	"str"	false	1	false	false	false	0
1169	"rtrim"	"rtrim"	"str"	false	1	false	false	false	0
1170	"lpad"	"lpad"	"str"	false	1	false	false	false	0
1171	"lpad"	"lpad"	"str"	false	1	false	false	false	0
1172	"rpad"	"rpad"	"str"	false	1	false	false	false	0
1173	"rpad"	"rpad"	"str"	false	1	false	false	false	0
1174	"insert"	"insert"	"str"	false	1	false	false	false	0
1175	"replace"	"replace"	"str"	false	1	false	false	false	0
1176	"repeat"	"repeat"	"str"	false	1	false	false	false	0
1177	"space"	"space"	"str"	false	1	false	false	false	0
1178	"char_length"	"length"	"str"	false	1	false	false	false	0
1179	"character_length"	"length"	"str"	false	1	false	false	false	0
1180	"octet_length"	"nbytes"	"str"	false	1	false	false	false	0
1181	"soundex"	"soundex"	"txtsim"	false	1	false	false	false	0
1182	"difference"	"stringdiff"	"txtsim"	false	1	false	false	false	0
1183	"editdistance"	"editdistance"	"txtsim"	false	1	false	false	false	0
1184	"editdistance2"	"editdistance2"	"txtsim"	false	1	false	false	false	0
1185	"similarity"	"similarity"	"txtsim"	false	1	false	false	false	0
1186	"qgramnormalize"	"qgramnormalize"	"txtsim"	false	1	false	false	false	0
1187	"levenshtein"	"levenshtein"	"txtsim"	false	1	false	false	false	0
1188	"levenshtein"	"levenshtein"	"txtsim"	false	1	false	false	false	0
1189	"index"	"index"	"calc"	false	1	false	false	false	0
1190	"index"	"index"	"calc"	false	1	false	false	false	0
1191	"index"	"index"	"calc"	false	1	false	false	false	0
1192	"strings"	"strings"	"calc"	false	1	false	false	false	0
1193	"locate"	"locate"	"str"	false	1	false	false	false	0
1194	"locate"	"locate"	"str"	false	1	false	false	false	0
1195	"substring"	"substring"	"str"	false	1	false	false	false	0
1196	"substring"	"substring"	"str"	false	1	false	false	false	0
1197	"like"	"like"	"str"	false	1	false	false	false	0
1198	"like"	"like"	"str"	false	1	false	false	false	0
1199	"ilike"	"ilike"	"str"	false	1	false	false	false	0
1200	"ilike"	"ilike"	"str"	false	1	false	false	false	0
1201	"not_like"	"not_like"	"str"	false	1	false	false	false	0
1202	"not_like"	"not_like"	"str"	false	1	false	false	false	0
1203	"not_ilike"	"not_ilike"	"str"	false	1	false	false	false	0
1204	"not_ilike"	"not_ilike"	"str"	false	1	false	false	false	0
1205	"patindex"	"patindex"	"pcre"	false	1	false	false	false	0
1206	"truncate"	"stringleft"	"str"	false	1	false	false	false	0
1207	"concat"	"+"	"calc"	false	1	false	false	false	0
1208	"ascii"	"ascii"	"str"	false	1	false	false	false	0
1209	"code"	"unicode"	"str"	false	1	false	false	false	0
1210	"length"	"stringlength"	"str"	false	1	false	false	false	0
1211	"right"	"stringright"	"str"	false	1	false	false	false	0
1212	"left"	"stringleft"	"str"	false	1	false	false	false	0
1213	"upper"	"toUpper"	"str"	false	1	false	false	false	0
1214	"ucase"	"toUpper"	"str"	false	1	false	false	false	0
1215	"lower"	"toLower"	"str"	false	1	false	false	false	0
1216	"lcase"	"toLower"	"str"	false	1	false	false	false	0
1217	"trim"	"trim"	"str"	false	1	false	false	false	0
1218	"trim"	"trim"	"str"	false	1	false	false	false	0
1219	"ltrim"	"ltrim"	"str"	false	1	false	false	false	0
1220	"ltrim"	"ltrim"	"str"	false	1	false	false	false	0
1221	"rtrim"	"rtrim"	"str"	false	1	false	false	false	0
1222	"rtrim"	"rtrim"	"str"	false	1	false	false	false	0
1223	"lpad"	"lpad"	"str"	false	1	false	false	false	0
1224	"lpad"	"lpad"	"str"	false	1	false	false	false	0
1225	"rpad"	"rpad"	"str"	false	1	false	false	false	0
1226	"rpad"	"rpad"	"str"	false	1	false	false	false	0
1227	"insert"	"insert"	"str"	false	1	false	false	false	0
1228	"replace"	"replace"	"str"	false	1	false	false	false	0
1229	"repeat"	"repeat"	"str"	false	1	false	false	false	0
1230	"space"	"space"	"str"	false	1	false	false	false	0
1231	"char_length"	"length"	"str"	false	1	false	false	false	0
1232	"character_length"	"length"	"str"	false	1	false	false	false	0
1233	"octet_length"	"nbytes"	"str"	false	1	false	false	false	0
1234	"soundex"	"soundex"	"txtsim"	false	1	false	false	false	0
1235	"difference"	"stringdiff"	"txtsim"	false	1	false	false	false	0
1236	"editdistance"	"editdistance"	"txtsim"	false	1	false	false	false	0
1237	"editdistance2"	"editdistance2"	"txtsim"	false	1	false	false	false	0
1238	"similarity"	"similarity"	"txtsim"	false	1	false	false	false	0
1239	"qgramnormalize"	"qgramnormalize"	"txtsim"	false	1	false	false	false	0
1240	"levenshtein"	"levenshtein"	"txtsim"	false	1	false	false	false	0
1241	"levenshtein"	"levenshtein"	"txtsim"	false	1	false	false	false	0
1242	"copyfrom"	"copy_from"	"sql"	false	5	false	true	false	0
1243	"copyfrom"	"copyfrom"	"sql"	false	5	false	true	false	0
1244	"copyfrom"	"importTable"	"sql"	false	5	false	true	false	0
29	"not_unique"	"not_unique"	"sql"	false	3	false	false	false	0
41	"zero_or_one"	"zero_or_one"	"sql"	false	3	false	false	false	0
42	"exist"	"exist"	"aggr"	false	3	false	false	false	0
43	"not_exist"	"not_exist"	"aggr"	false	3	false	false	false	0
48	"min"	"min"	"aggr"	false	3	false	false	false	0
49	"max"	"max"	"aggr"	false	3	false	false	false	0
53	"sum"	"sum"	"aggr"	false	3	false	false	false	0
54	"sum"	"sum"	"aggr"	false	3	false	false	false	0
55	"sum"	"sum"	"aggr"	false	3	false	false	false	0
56	"sum"	"sum"	"aggr"	false	3	false	false	false	0
57	"sum"	"sum"	"aggr"	false	3	false	false	false	0
58	"sum"	"sum"	"aggr"	false	3	false	false	false	0
59	"sum"	"sum"	"aggr"	false	3	false	false	false	0
60	"sum"	"sum"	"aggr"	false	3	false	false	false	0
61	"sum"	"sum"	"aggr"	false	3	false	false	false	0
62	"sum"	"sum"	"aggr"	false	3	false	false	false	0
63	"sum"	"sum"	"aggr"	false	3	false	false	false	0
64	"prod"	"prod"	"aggr"	false	3	false	false	false	0
65	"prod"	"prod"	"aggr"	false	3	false	false	false	0
66	"prod"	"prod"	"aggr"	false	3	false	false	false	0
67	"prod"	"prod"	"aggr"	false	3	false	false	false	0
68	"prod"	"prod"	"aggr"	false	3	false	false	false	0
69	"prod"	"prod"	"aggr"	false	3	false	false	false	0
70	"prod"	"prod"	"aggr"	false	3	false	false	false	0
71	"prod"	"prod"	"aggr"	false	3	false	false	false	0
72	"prod"	"prod"	"aggr"	false	3	false	false	false	0
73	"prod"	"prod"	"aggr"	false	3	false	false	false	0
88	"sum"	"sum"	"aggr"	false	3	false	false	false	0
89	"prod"	"prod"	"aggr"	false	3	false	false	false	0
90	"sum"	"sum"	"aggr"	false	3	false	false	false	0
91	"prod"	"prod"	"aggr"	false	3	false	false	false	0
92	"avg"	"avg"	"aggr"	false	3	false	false	false	0
93	"count_no_nil"	"count_no_nil"	"aggr"	false	3	false	false	false	0
94	"count"	"count"	"aggr"	false	3	false	false	false	0
5657	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	true	5	false	false	false	2000
5660	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	true	5	false	false	false	2000
5666	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	true	5	false	false	false	2000
5686	"like"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.likesubselect;"	"algebra"	true	4	true	false	false	2000
5691	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.ilikesubselect;"	"algebra"	true	4	true	false	false	2000
5696	"degrees"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate function degrees(r double) \nreturns double\n\treturn r*180/pi();"	"user"	true	1	false	false	false	2000
5700	"radians"	"create function radians(d double) \nreturns double\n\treturn d*pi()/180;"	"user"	true	1	false	false	false	2000
5704	"times"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	true	2	true	false	false	2000
5707	"getanchor"	"create function getanchor( theurl url ) returns string \n\texternal name url.""getAnchor"";"	"url"	true	1	false	false	false	2000
5711	"getbasename"	"create function getbasename(theurl url) returns string       \n\texternal name url.""getBasename"";"	"url"	true	1	false	false	false	2000
5715	"getcontent"	"create function getcontent(theurl url)   returns string       \n\texternal name url.""getContent"";"	"url"	true	1	false	false	false	2000
5719	"getcontext"	"create function getcontext(theurl url)   returns string       \n\texternal name url.""getContext"";"	"url"	true	1	false	false	false	2000
5723	"getdomain"	"create function getdomain(theurl url) returns string       \n\texternal name url.""getDomain"";"	"url"	true	1	false	false	false	2000
5727	"getextension"	"create function getextension(theurl url) returns string       \n\texternal name url.""getExtension"";"	"url"	true	1	false	false	false	2000
5731	"getfile"	"create function getfile(theurl url) returns string       \n\texternal name url.""getFile"";"	"url"	true	1	false	false	false	2000
5735	"gethost"	"create function gethost(theurl url)   returns string       \n\texternal name url.""getHost"";"	"url"	true	1	false	false	false	2000
5739	"getport"	"create function getport(theurl url) returns string       \n\texternal name url.""getPort"";"	"url"	true	1	false	false	false	2000
5743	"getprotocol"	"create function getprotocol(theurl url) returns string       \n\texternal name url.""getProtocol"";"	"url"	true	1	false	false	false	2000
5747	"getquery"	"create function getquery(theurl url) returns string       \n\texternal name url.""getQuery"";"	"url"	true	1	false	false	false	2000
5751	"getuser"	"create function getuser(theurl url) returns string       \n\texternal name url.""getUser"";"	"url"	true	1	false	false	false	2000
5755	"getroboturl"	"create function getroboturl(theurl url) returns string       \n\texternal name url.""getRobotURL"";"	"url"	true	1	false	false	false	2000
5759	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	true	1	false	false	false	2000
5763	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string) \n\treturns url       \n\texternal name url.""new"";"	"url"	true	1	false	false	false	2000
5770	"newurl"	"create function newurl(protocol string, hostname string, file string) \n\treturns url \n\texternal name url.""new"";"	"url"	true	1	false	false	false	2000
5776	"str_to_date"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	true	1	false	false	false	2000
5781	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	true	1	false	false	false	2000
5787	"broadcast"	"create function ""broadcast"" (p inet) returns inet \n\texternal name inet.""broadcast"";"	"inet"	true	1	false	false	false	2000
5791	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	true	1	false	false	false	2000
5795	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	true	1	false	false	false	2000
5799	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	true	1	false	false	false	2000
5804	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	true	1	false	false	false	2000
5808	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	true	1	false	false	false	2000
5812	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	true	1	false	false	false	2000
5816	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	true	1	false	false	false	2000
5820	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	true	1	false	false	false	2000
5824	"querylog_catalog"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions. \n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\tmal int,\t\t\t-- size of MAL plan\n\toptimize bigint \t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	true	5	false	false	false	2000
5833	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the \n-- server during execution phase. \n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,  \t\t-- average cpu load percentage during execution\n\tio int,\t\t\t-- percentage time waiting for IO to finish \n\tspace bigint\t\t-- total storage size of intermediates created (in MB)\n)\nexternal name sql.querylog_calls;"	"sql"	true	5	false	false	false	2000
5884	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	true	2	true	false	false	2000
5886	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	true	2	true	false	false	2000
5888	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	true	2	true	false	false	2000
5891	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	true	2	true	false	false	2000
5893	"tracelog"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog() \n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20), \t-- wallclock, no mtime in kernel\n\t\tpc varchar(50), \t-- module.function[nr]\n\t\tthread int, \t\t-- thread identifier\n\t\t""user"" int, \t\t-- user identifier\n\t\tticks bigint, \t\t-- time in microseconds\n\t\treads bigint, \t\t-- number of blocks read\n\t\twrites bigint, \t-- number of blocks written\n\t\trbytes bigint,\t\t-- amount of bytes touched\n\t\twbytes bigint,\t\t-- amount of bytes written\n\t\ttype string,\t\t-- return types\n\t\tstmt string\t\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	true	5	false	false	false	2000
5921	"cluster1"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- Clustering a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Clustering of tables may improve IO performance\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure cluster1(sys string, tab string)\n\texternal name sql.cluster1;"	"sql"	true	2	true	false	false	2000
5925	"cluster2"	"create procedure cluster2(sys string, tab string)\n\texternal name sql.cluster2;"	"sql"	true	2	true	false	false	2000
5929	"shrink"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	true	2	true	false	false	2000
5933	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	true	2	true	false	false	2000
5937	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	true	2	true	false	false	2000
5941	"dependencies_schemas_on_users"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	true	5	false	false	false	2000
5946	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	true	5	false	false	false	2000
5951	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	true	5	false	false	false	2000
5956	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	true	5	false	false	false	2000
5961	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	true	5	false	false	false	2000
5966	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	true	5	false	false	false	2000
5971	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	true	5	false	false	false	2000
5976	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	true	5	false	false	false	2000
5981	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	true	5	false	false	false	2000
5986	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i \ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	true	5	false	false	false	2000
5991	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	true	5	false	false	false	2000
5996	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	true	5	false	false	false	2000
6001	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	true	5	false	false	false	2000
6006	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	true	5	false	false	false	2000
6011	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	true	5	false	false	false	2000
6016	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	true	5	false	false	false	2000
6021	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	true	5	false	false	false	2000
6026	"password_hash"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate function sys.password_hash (username string) \n\treturns string \n\texternal name sql.password;"	"sql"	true	1	false	false	false	2000
6030	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	true	5	false	false	false	2000
6046	"shutdown"	"create procedure sys.shutdown(delay tinyint) \nexternal name sql.shutdown;"	"sql"	true	2	true	false	false	2000
6049	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool) \nexternal name sql.shutdown;"	"sql"	true	2	true	false	false	2000
6053	"settimeout"	"-- control the query and session time out \ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	true	2	true	false	false	2000
6056	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	true	2	true	false	false	2000
6060	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	true	2	true	false	false	2000
6063	"ms_stuff"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	true	1	false	false	false	2000
6070	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	true	1	false	false	false	2000
6075	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	true	1	false	false	false	2000
6081	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	true	1	false	false	false	2000
6087	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	true	1	false	false	false	2000
6092	"zorder_encode"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	true	1	false	false	false	2000
6097	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	true	1	false	false	false	2000
6101	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	true	1	false	false	false	2000
6105	"optimizer_stats"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats () \n\treturns table (rewrite string, count int) \n\texternal name sql.dump_opt_stats;"	"sql"	true	5	false	false	false	2000
6109	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache() \n\treturns table (query string, count int) \n\texternal name sql.dump_cache;"	"sql"	true	5	false	false	false	2000
6113	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string) \n\texternal name sql.logfile;"	"sql"	true	2	true	false	false	2000
6116	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers () \n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	true	5	false	false	false	2000
6126	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	true	5	false	false	false	2000
6134	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp () \n\treturns table (id int, name string, htype string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int, \n\t\tlocation string, heat int, dirty string, \n\t\tstatus string, kind string) \n\texternal name bbp.get;"	"bbp"	true	5	false	false	false	2000
6148	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	true	2	true	false	false	2000
6152	"queue"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	true	5	false	false	false	2000
6172	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	true	2	true	false	false	2000
6175	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	true	2	true	false	false	2000
6178	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	true	2	true	false	false	2000
6181	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	true	2	true	false	false	2000
6184	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	true	2	true	false	false	2000
6187	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	true	2	true	false	false	2000
6190	"stddev_samp"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6194	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6198	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6202	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6206	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6210	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6214	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6218	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6222	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6226	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6230	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6234	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6238	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6242	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6246	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6250	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6254	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6258	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6262	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6266	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6270	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6274	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6278	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6282	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6286	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6290	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6294	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6298	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6302	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6306	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6310	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6314	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6318	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6322	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6326	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6330	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6334	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6338	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6342	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6346	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6350	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6354	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6358	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6362	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6366	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6370	"median"	"create aggregate median(val decimal) returns decimal\n \texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6374	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6378	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6382	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6386	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6390	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6394	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n \texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6399	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n \texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6404	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n \texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6409	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6414	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6419	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n \texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6424	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6429	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6434	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6439	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6444	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6449	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6454	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6459	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6464	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6469	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6474	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6479	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6484	"stddev_samp"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	true	3	false	false	false	2000
6488	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	true	3	false	false	false	2000
6492	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	true	3	false	false	false	2000
6496	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	true	3	false	false	false	2000
6500	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	true	3	false	false	false	2000
6504	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	true	3	false	false	false	2000
6509	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	true	3	false	false	false	2000
6527	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	true	1	false	false	false	2000
6531	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	true	1	false	false	false	2000
6536	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	true	1	false	false	false	2000
6541	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	true	1	false	false	false	2000
6546	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	true	1	false	false	false	2000
6551	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	true	1	false	false	false	2000
6556	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	true	1	false	false	false	2000
6561	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	true	1	false	false	false	2000
6566	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	true	1	false	false	false	2000
6571	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	true	1	false	false	false	2000
6576	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	true	1	false	false	false	2000
6581	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	true	1	false	false	false	2000
6585	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	true	1	false	false	false	2000
6589	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	true	1	false	false	false	2000
6593	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	true	1	false	false	false	2000
6598	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	true	1	false	false	false	2000
6602	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	true	1	false	false	false	2000
6606	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	true	1	false	false	false	2000
6610	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	true	1	false	false	false	2000
6614	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	true	1	false	false	false	2000
6618	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	true	1	false	false	false	2000
6622	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	true	1	false	false	false	2000
6626	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	true	1	false	false	false	2000
6631	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	true	1	false	false	false	2000
6636	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	true	1	false	false	false	2000
6641	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	true	1	false	false	false	2000
6646	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	true	1	false	false	false	2000
6651	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	true	1	false	false	false	2000
6656	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	true	1	false	false	false	2000
6661	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	true	1	false	false	false	2000
6666	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	true	1	false	false	false	2000
6672	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	true	1	false	false	false	2000
6676	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	true	1	false	false	false	2000
6680	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	true	1	false	false	false	2000
6685	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	true	1	false	false	false	2000
6690	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	true	1	false	false	false	2000
6694	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	true	1	false	false	false	2000
6699	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	true	1	false	false	false	2000
6704	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	true	1	false	false	false	2000
6709	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	true	1	false	false	false	2000
6716	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	true	1	false	false	false	6713
6721	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	true	1	false	false	false	6713
6726	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	true	1	false	false	false	6713
6731	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	true	1	false	false	false	6713
6736	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	true	1	false	false	false	6713
6741	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	true	1	false	false	false	6713
6745	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	true	1	false	false	false	6713
6749	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	true	1	false	false	false	6713
6753	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	true	1	false	false	false	6713
6757	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	true	1	false	false	false	6713
6761	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	true	1	false	false	false	6713
6765	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	true	1	false	false	false	6713
6769	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	true	1	false	false	false	6713
6773	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	true	1	false	false	false	6713
6777	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	true	1	false	false	false	6713
6781	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	true	1	false	false	false	6713
6785	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	true	1	false	false	false	6713
6789	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	true	1	false	false	false	6713
6793	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	true	1	false	false	false	6713
6797	"output"	"-- The remainder awaits the implementation \n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	true	3	false	false	false	6713
6801	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	true	3	false	false	false	6713
6805	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	true	3	false	false	false	6713
6809	"filter"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	true	1	false	false	false	6713
6814	"md5"	"\n-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- (co) Arjen de Rijke\n-- Functions supporting jsonstore\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	true	1	false	false	false	2000
6819	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	true	1	false	false	false	2000
6822	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	true	1	false	false	false	2000
6826	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	true	1	false	false	false	2000
6830	"storage"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.storage()\nreturns table (""schema"" string, ""table"" string, ""column"" string, ""type"" string, location string, ""count"" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, imprints bigint, sorted boolean)\nexternal name sql.storage;"	"sql"	true	5	false	false	false	2000
6870	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.storage() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	true	2	true	false	false	2000
6872	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int'\t then return 4 * i;\n\twhen nme = 'bigint'\t then return 8 * i;\n\twhen nme = 'hugeint'\t then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	true	1	false	false	false	2000
6878	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	true	1	false	false	false	2000
6884	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	true	1	false	false	false	2000
6889	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\t\n\t\tor nme = 'bigint'\t\n\t\tor nme = 'hugeint'\t\n\t\tor nme = 'decimal'\t\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	true	1	false	false	false	2000
6894	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count""\tbigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	true	5	false	false	false	2000
6943	"analyze"	"create procedure analyze()\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6945	"analyze"	"create procedure analyze(tbl string)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6948	"analyze"	"create procedure analyze(sch string, tbl string)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6952	"analyze"	"create procedure analyze(sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6957	"analyze"	"-- control the sample size\ncreate procedure analyze(""sample"" bigint)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6960	"analyze"	"create procedure analyze(tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6964	"analyze"	"create procedure analyze(sch string, tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6969	"analyze"	"create procedure analyze(sch string, tbl string, col string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	true	2	true	false	false	2000
6975	"reverse"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	true	1	false	false	false	2000
6979	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	true	1	false	false	false	2000
6984	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	true	1	false	false	false	2000
6989	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	true	1	false	false	false	2000
6994	"fuse"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	true	1	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5636	1	1	0	0
5646	1	1	0	0
5672	1	1	0	0
5675	1	1	0	0
5679	1	1	0	0
7000	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 3 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6713	"json"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"schema" CHARACTER LARGE OBJECT,
	"table"  CHARACTER LARGE OBJECT,
	"column" CHARACTER LARGE OBJECT,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1472 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
44
45
46
47
50
51
52
74
75
76
77
78
79
80
81
82
83
84
85
86
87
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
29
41
42
43
48
49
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
88
89
90
91
92
93
94
5657
5660
5666
5686
5691
5696
5700
5704
5707
5711
5715
5719
5723
5727
5731
5735
5739
5743
5747
5751
5755
5759
5763
5770
5776
5781
5787
5791
5795
5799
5804
5808
5812
5816
5820
5824
5833
5884
5886
5888
5891
5893
5921
5925
5929
5933
5937
5941
5946
5951
5956
5961
5966
5971
5976
5981
5986
5991
5996
6001
6006
6011
6016
6021
6026
6030
6046
6049
6053
6056
6060
6063
6070
6075
6081
6087
6092
6097
6101
6105
6109
6113
6116
6126
6134
6148
6152
6172
6175
6178
6181
6184
6187
6190
6194
6198
6202
6206
6210
6214
6218
6222
6226
6230
6234
6238
6242
6246
6250
6254
6258
6262
6266
6270
6274
6278
6282
6286
6290
6294
6298
6302
6306
6310
6314
6318
6322
6326
6330
6334
6338
6342
6346
6350
6354
6358
6362
6366
6370
6374
6378
6382
6386
6390
6394
6399
6404
6409
6414
6419
6424
6429
6434
6439
6444
6449
6454
6459
6464
6469
6474
6479
6484
6488
6492
6496
6500
6504
6509
6527
6531
6536
6541
6546
6551
6556
6561
6566
6571
6576
6581
6585
6589
6593
6598
6602
6606
6610
6614
6618
6622
6626
6631
6636
6641
6646
6651
6656
6661
6666
6672
6676
6680
6685
6690
6694
6699
6704
6709
6716
6721
6726
6731
6736
6741
6745
6749
6753
6757
6761
6765
6769
6773
6777
6781
6785
6789
6793
6797
6801
6805
6809
6814
6819
6822
6826
6830
6870
6872
6878
6884
6889
6894
6943
6945
6948
6952
6957
6960
6964
6969
6975
6979
6984
6989
6994
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 46 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"bte"	"tinyint"	8	1	2	6	0
8	"sht"	"smallint"	16	1	2	6	0
9	"int"	"int"	32	1	2	6	0
10	"lng"	"bigint"	64	1	2	6	0
11	"oid"	"oid"	63	0	2	6	0
12	"wrd"	"wrd"	64	1	2	6	0
13	"hge"	"hugeint"	128	1	2	6	0
14	"bte"	"decimal"	2	1	10	8	0
15	"sht"	"decimal"	4	1	10	8	0
16	"int"	"decimal"	9	1	10	8	0
17	"lng"	"decimal"	18	1	10	8	0
18	"hge"	"decimal"	39	1	10	8	0
19	"flt"	"real"	24	2	2	9	0
20	"dbl"	"double"	53	2	2	9	0
21	"int"	"month_interval"	32	0	2	7	0
22	"lng"	"sec_interval"	19	1	10	7	0
23	"daytime"	"time"	7	0	0	10	0
24	"daytime"	"timetz"	7	1	0	10	0
25	"date"	"date"	0	0	0	11	0
26	"timestamp"	"timestamp"	7	0	0	12	0
27	"timestamp"	"timestamptz"	7	1	0	12	0
28	"sqlblob"	"blob"	0	0	0	5	0
5705	"url"	"url"	0	0	0	13	2000
5785	"inet"	"inet"	0	0	0	13	2000
6513	"wkb"	"point"	0	0	0	13	2000
6514	"wkb"	"curve"	0	0	0	13	2000
6515	"wkb"	"linestring"	0	0	0	13	2000
6516	"wkb"	"surface"	0	0	0	13	2000
6517	"wkb"	"polygon"	0	0	0	13	2000
6518	"wkb"	"multipoint"	0	0	0	13	2000
6519	"wkb"	"multicurve"	0	0	0	13	2000
6520	"wkb"	"multilinestring"	0	0	0	13	2000
6521	"wkb"	"multisurface"	0	0	0	13	2000
6522	"wkb"	"multipolygon"	0	0	0	13	2000
6523	"wkb"	"geometry"	0	0	0	13	2000
6524	"wkb"	"geomcollection"	0	0	0	13	2000
6525	"mbr"	"mbr"	0	0	0	13	2000
6714	"json"	"json"	0	0	0	13	2000
6817	"uuid"	"uuid"	0	0	0	13	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

