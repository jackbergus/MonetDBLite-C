stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geometrytype
SYSTEM FUNCTION  sys.get_type
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.has_m
SYSTEM FUNCTION  sys.has_z
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.lidarattach
SYSTEM FUNCTION  sys.lidarload
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.st_area
SYSTEM FUNCTION  sys.st_asbinary
SYSTEM FUNCTION  sys.st_asewkt
SYSTEM FUNCTION  sys.st_astext
SYSTEM FUNCTION  sys.st_bdmpolyfromtext
SYSTEM FUNCTION  sys.st_bdpolyfromtext
SYSTEM FUNCTION  sys.st_boundary
SYSTEM FUNCTION  sys.st_buffer
SYSTEM FUNCTION  sys.st_centroid
SYSTEM FUNCTION  sys.st_collect
SYSTEM FUNCTION  sys.st_contains
SYSTEM FUNCTION  sys.st_convexhull
SYSTEM FUNCTION  sys.st_coorddim
SYSTEM FUNCTION  sys.st_coveredby
SYSTEM FUNCTION  sys.st_covers
SYSTEM FUNCTION  sys.st_crosses
SYSTEM FUNCTION  sys.st_delaunaytriangles
SYSTEM FUNCTION  sys.st_difference
SYSTEM FUNCTION  sys.st_dimension
SYSTEM FUNCTION  sys.st_disjoint
SYSTEM FUNCTION  sys.st_distance
SYSTEM FUNCTION  sys.st_dump
SYSTEM FUNCTION  sys.st_dumppoints
SYSTEM FUNCTION  sys.st_dwithin
SYSTEM FUNCTION  sys.st_endpoint
SYSTEM FUNCTION  sys.st_envelope
SYSTEM FUNCTION  sys.st_equals
SYSTEM FUNCTION  sys.st_exteriorring
SYSTEM FUNCTION  sys.st_force2d
SYSTEM FUNCTION  sys.st_force3d
SYSTEM FUNCTION  sys.st_geomcollfromtext
SYSTEM FUNCTION  sys.st_geometryfromtext
SYSTEM FUNCTION  sys.st_geometryn
SYSTEM FUNCTION  sys.st_geometrytype
SYSTEM FUNCTION  sys.st_geomfromtext
SYSTEM FUNCTION  sys.st_interiorringn
SYSTEM FUNCTION  sys.st_interiorrings
SYSTEM FUNCTION  sys.st_intersection
SYSTEM FUNCTION  sys.st_intersects
SYSTEM FUNCTION  sys.st_isclosed
SYSTEM FUNCTION  sys.st_isempty
SYSTEM FUNCTION  sys.st_isring
SYSTEM FUNCTION  sys.st_issimple
SYSTEM FUNCTION  sys.st_isvalid
SYSTEM FUNCTION  sys.st_isvalidreason
SYSTEM FUNCTION  sys.st_length
SYSTEM FUNCTION  sys.st_length2d
SYSTEM FUNCTION  sys.st_linefromtext
SYSTEM FUNCTION  sys.st_makebox2d
SYSTEM FUNCTION  sys.st_makeenvelope
SYSTEM FUNCTION  sys.st_makeline
SYSTEM FUNCTION  sys.st_makepoint
SYSTEM FUNCTION  sys.st_makepointm
SYSTEM FUNCTION  sys.st_makepolygon
SYSTEM FUNCTION  sys.st_mlinefromtext
SYSTEM FUNCTION  sys.st_mpointfromtext
SYSTEM FUNCTION  sys.st_mpolyfromtext
SYSTEM FUNCTION  sys.st_npoints
SYSTEM FUNCTION  sys.st_nrings
SYSTEM FUNCTION  sys.st_numgeometries
SYSTEM FUNCTION  sys.st_numinteriorring
SYSTEM FUNCTION  sys.st_numinteriorrings
SYSTEM FUNCTION  sys.st_numpatches
SYSTEM FUNCTION  sys.st_numpoints
SYSTEM FUNCTION  sys.st_overlaps
SYSTEM FUNCTION  sys.st_patchn
SYSTEM FUNCTION  sys.st_point
SYSTEM FUNCTION  sys.st_pointfromtext
SYSTEM FUNCTION  sys.st_pointn
SYSTEM FUNCTION  sys.st_pointonsurface
SYSTEM FUNCTION  sys.st_polygon
SYSTEM FUNCTION  sys.st_polygonfromtext
SYSTEM FUNCTION  sys.st_relate
SYSTEM FUNCTION  sys.st_segmentize
SYSTEM FUNCTION  sys.st_setexteriorring
SYSTEM FUNCTION  sys.st_setsrid
SYSTEM FUNCTION  sys.st_srid
SYSTEM FUNCTION  sys.st_startpoint
SYSTEM FUNCTION  sys.st_symdifference
SYSTEM FUNCTION  sys.st_touches
SYSTEM FUNCTION  sys.st_transform
SYSTEM FUNCTION  sys.st_translate
SYSTEM FUNCTION  sys.st_union
SYSTEM FUNCTION  sys.st_within
SYSTEM FUNCTION  sys.st_wkbtosql
SYSTEM FUNCTION  sys.st_wkttosql
SYSTEM FUNCTION  sys.st_x
SYSTEM FUNCTION  sys.st_xmax
SYSTEM FUNCTION  sys.st_xmin
SYSTEM FUNCTION  sys.st_y
SYSTEM FUNCTION  sys.st_ymax
SYSTEM FUNCTION  sys.st_ymin
SYSTEM FUNCTION  sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
--CREATE FUNCTION ST_DumpRings RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_FlipCoordinates RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Intersection(geog1 Geography, geog2 Geography) RETURNS Geography EXTERNAL NAME geom."Intersection";
--CREATE FUNCTION ST_LineToCurve RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_MakeValid RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_MemUnion RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_MinimumBoundingCircle RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Polygonize RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Node RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_OffsetCurve RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_RemoveRepeatedPoints RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_SharedPaths RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Shift_Longitude RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Simplify RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_SimplifyPreserveTopology RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Split RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_Union(geometry set geoms)?????
--CREATE FUNCTION ST_UnaryUnion RETURNS EXTERNAL NAME

-------------------------------------------------------------------------
-------------------------- Linear Referencing ---------------------------
-------------------------------------------------------------------------
--CREATE FUNCTION ST_LineInterpolatePoint RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_LineLocatePoint RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_LineSubstring RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_LocateAlong RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_LocateBetween RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_LocateBetweenElevations RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_InterpolatePoint RETURNS EXTERNAL NAME
--CREATE FUNCTION ST_AddMeasure RETURNS EXTERNAL NAME

-------------------------------------------------------------------------
---------------------- Long Transactions Support ------------------------
-------------------------------------------------------------------------

-------------------------------------------------------------------------
----------------------- Miscellaneous Functions -------------------------
-------------------------------------------------------------------------

-------------------------------------------------------------------------
------------------------ Exceptional Functions --------------------------
-------------------------------------------------------------------------


-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- assume milliseconds when converted to TIMESTAMP
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- fuse two (8-byte) integer values into one (16-byte) bigint value
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr(geom geometry) returns mbr external name geom."mbr";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
-- gr_name is "GLOBAL" or "ROOT" for classic NetCDF files
-- used for groups in HDF5 files
-- global attributes have obj_name=""

-- create function netcdfvar (fname varchar(256)) 
--	returns int external name netcdf.test;

create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- COPY into reject management

create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 373 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
6201	"id"	"int"	32	0	6200	NULL	true	0	NULL
6202	"name"	"varchar"	1024	0	6200	NULL	true	1	NULL
6203	"schema_id"	"int"	32	0	6200	NULL	true	2	NULL
6204	"query"	"varchar"	2048	0	6200	NULL	true	3	NULL
6205	"type"	"smallint"	16	0	6200	NULL	true	4	NULL
6206	"system"	"boolean"	1	0	6200	NULL	true	5	NULL
6207	"commit_action"	"smallint"	16	0	6200	NULL	true	6	NULL
6208	"access"	"smallint"	16	0	6200	NULL	true	7	NULL
6209	"temporary"	"smallint"	16	0	6200	NULL	true	8	NULL
6211	"id"	"int"	32	0	6210	NULL	true	0	NULL
6212	"name"	"varchar"	1024	0	6210	NULL	true	1	NULL
6213	"type"	"varchar"	1024	0	6210	NULL	true	2	NULL
6214	"type_digits"	"int"	32	0	6210	NULL	true	3	NULL
6215	"type_scale"	"int"	32	0	6210	NULL	true	4	NULL
6216	"table_id"	"int"	32	0	6210	NULL	true	5	NULL
6217	"default"	"varchar"	2048	0	6210	NULL	true	6	NULL
6218	"null"	"boolean"	1	0	6210	NULL	true	7	NULL
6219	"number"	"int"	32	0	6210	NULL	true	8	NULL
6220	"storage"	"varchar"	2048	0	6210	NULL	true	9	NULL
6227	"name"	"varchar"	1024	0	6226	NULL	true	0	NULL
6228	"fullname"	"varchar"	2048	0	6226	NULL	true	1	NULL
6229	"default_schema"	"int"	9	0	6226	NULL	true	2	NULL
6233	"name"	"varchar"	1024	0	6232	NULL	true	0	NULL
6234	"fullname"	"varchar"	2024	0	6232	NULL	true	1	NULL
6235	"default_schema"	"int"	9	0	6232	NULL	true	2	NULL
6237	"login_id"	"int"	32	0	6236	NULL	true	0	NULL
6238	"role_id"	"int"	32	0	6236	NULL	true	1	NULL
6240	"id"	"int"	32	0	6239	NULL	true	0	NULL
6241	"name"	"varchar"	1024	0	6239	NULL	true	1	NULL
6242	"grantor"	"int"	32	0	6239	NULL	true	2	NULL
6244	"obj_id"	"int"	32	0	6243	NULL	true	0	NULL
6245	"auth_id"	"int"	32	0	6243	NULL	true	1	NULL
6246	"privileges"	"int"	32	0	6243	NULL	true	2	NULL
6247	"grantor"	"int"	32	0	6243	NULL	true	3	NULL
6248	"grantable"	"int"	32	0	6243	NULL	true	4	NULL
6457	"id"	"oid"	63	0	6465	NULL	true	0	NULL
6458	"owner"	"clob"	0	0	6465	NULL	true	1	NULL
6459	"defined"	"timestamp"	7	0	6465	NULL	true	2	NULL
6460	"query"	"clob"	0	0	6465	NULL	true	3	NULL
6461	"pipe"	"clob"	0	0	6465	NULL	true	4	NULL
6462	"plan"	"clob"	0	0	6465	NULL	true	5	NULL
6463	"mal"	"int"	32	0	6465	NULL	true	6	NULL
6464	"optimize"	"bigint"	64	0	6465	NULL	true	7	NULL
6467	"id"	"oid"	63	0	6476	NULL	true	0	NULL
6468	"start"	"timestamp"	7	0	6476	NULL	true	1	NULL
6469	"stop"	"timestamp"	7	0	6476	NULL	true	2	NULL
6470	"arguments"	"clob"	0	0	6476	NULL	true	3	NULL
6471	"tuples"	"wrd"	64	0	6476	NULL	true	4	NULL
6472	"run"	"bigint"	64	0	6476	NULL	true	5	NULL
6473	"ship"	"bigint"	64	0	6476	NULL	true	6	NULL
6474	"cpu"	"int"	32	0	6476	NULL	true	7	NULL
6475	"io"	"int"	32	0	6476	NULL	true	8	NULL
6478	"id"	"oid"	63	0	6494	NULL	true	0	NULL
6479	"owner"	"clob"	0	0	6494	NULL	true	1	NULL
6480	"defined"	"timestamp"	7	0	6494	NULL	true	2	NULL
6481	"query"	"clob"	0	0	6494	NULL	true	3	NULL
6482	"pipe"	"clob"	0	0	6494	NULL	true	4	NULL
6483	"plan"	"clob"	0	0	6494	NULL	true	5	NULL
6484	"mal"	"int"	32	0	6494	NULL	true	6	NULL
6485	"optimize"	"bigint"	64	0	6494	NULL	true	7	NULL
6486	"start"	"timestamp"	7	0	6494	NULL	true	8	NULL
6487	"stop"	"timestamp"	7	0	6494	NULL	true	9	NULL
6488	"arguments"	"clob"	0	0	6494	NULL	true	10	NULL
6489	"tuples"	"wrd"	64	0	6494	NULL	true	11	NULL
6490	"run"	"bigint"	64	0	6494	NULL	true	12	NULL
6491	"ship"	"bigint"	64	0	6494	NULL	true	13	NULL
6492	"cpu"	"int"	32	0	6494	NULL	true	14	NULL
6493	"io"	"int"	32	0	6494	NULL	true	15	NULL
6520	"event"	"int"	32	0	6533	NULL	true	0	NULL
6521	"clk"	"varchar"	20	0	6533	NULL	true	1	NULL
6522	"pc"	"varchar"	50	0	6533	NULL	true	2	NULL
6523	"thread"	"int"	32	0	6533	NULL	true	3	NULL
6524	"ticks"	"bigint"	64	0	6533	NULL	true	4	NULL
6525	"rrsmb"	"bigint"	64	0	6533	NULL	true	5	NULL
6526	"vmmb"	"bigint"	64	0	6533	NULL	true	6	NULL
6527	"reads"	"bigint"	64	0	6533	NULL	true	7	NULL
6528	"writes"	"bigint"	64	0	6533	NULL	true	8	NULL
6529	"minflt"	"bigint"	64	0	6533	NULL	true	9	NULL
6530	"majflt"	"bigint"	64	0	6533	NULL	true	10	NULL
6531	"nvcsw"	"bigint"	64	0	6533	NULL	true	11	NULL
6532	"stmt"	"clob"	0	0	6533	NULL	true	12	NULL
6660	"user"	"clob"	0	0	6666	NULL	true	0	NULL
6661	"login"	"timestamp"	7	0	6666	NULL	true	1	NULL
6662	"sessiontimeout"	"bigint"	64	0	6666	NULL	true	2	NULL
6663	"lastcommand"	"timestamp"	7	0	6666	NULL	true	3	NULL
6664	"querytimeout"	"bigint"	64	0	6666	NULL	true	4	NULL
6665	"active"	"boolean"	1	0	6666	NULL	true	5	NULL
6743	"name"	"clob"	0	0	6746	NULL	true	0	NULL
6744	"def"	"clob"	0	0	6746	NULL	true	1	NULL
6745	"status"	"clob"	0	0	6746	NULL	true	2	NULL
6752	"name"	"clob"	0	0	6754	NULL	true	0	NULL
6753	"value"	"clob"	0	0	6754	NULL	true	1	NULL
6790	"qtag"	"bigint"	64	0	6798	NULL	true	0	NULL
6791	"user"	"clob"	0	0	6798	NULL	true	1	NULL
6792	"started"	"timestamp"	7	0	6798	NULL	true	2	NULL
6793	"estimate"	"timestamp"	7	0	6798	NULL	true	3	NULL
6794	"progress"	"int"	32	0	6798	NULL	true	4	NULL
6795	"status"	"clob"	0	0	6798	NULL	true	5	NULL
6796	"tag"	"oid"	63	0	6798	NULL	true	6	NULL
6797	"query"	"clob"	0	0	6798	NULL	true	7	NULL
6824	"rowid"	"bigint"	64	0	6828	NULL	true	0	NULL
6825	"fldid"	"int"	32	0	6828	NULL	true	1	NULL
6826	"message"	"clob"	0	0	6828	NULL	true	2	NULL
6827	"input"	"clob"	0	0	6828	NULL	true	3	NULL
7169	"srid"	"int"	32	0	7176	NULL	false	0	NULL
7172	"auth_name"	"varchar"	256	0	7176	NULL	true	1	NULL
7173	"auth_srid"	"int"	32	0	7176	NULL	true	2	NULL
7174	"srtext"	"varchar"	2048	0	7176	NULL	true	3	NULL
7175	"proj4text"	"varchar"	2048	0	7176	NULL	true	4	NULL
7178	"f_table_catalog"	"clob"	0	0	7185	NULL	true	0	NULL
7179	"f_table_schema"	"varchar"	1024	0	7185	NULL	true	1	NULL
7180	"f_table_name"	"varchar"	1024	0	7185	NULL	true	2	NULL
7181	"f_geometry_column"	"varchar"	1024	0	7185	NULL	true	3	NULL
7182	"coord_dimension"	"hugeint"	128	0	7185	NULL	true	4	NULL
7183	"srid"	"int"	32	0	7185	NULL	true	5	NULL
7184	"type"	"clob"	0	0	7185	NULL	true	6	NULL
7889	"keyword"	"varchar"	40	0	7892	NULL	false	0	NULL
7894	"table_type_id"	"smallint"	16	0	7900	NULL	false	0	NULL
7897	"table_type_name"	"varchar"	25	0	7900	NULL	false	1	NULL
7902	"dependency_type_id"	"smallint"	16	0	7908	NULL	false	0	NULL
7905	"dependency_type_name"	"varchar"	15	0	7908	NULL	false	1	NULL
7923	"file_id"	"int"	32	0	7925	NULL	true	0	NULL
7924	"location"	"char"	256	0	7925	NULL	true	1	NULL
7927	"dim_id"	"int"	32	0	7931	NULL	true	0	NULL
7928	"file_id"	"int"	32	0	7931	NULL	true	1	NULL
7929	"name"	"varchar"	64	0	7931	NULL	true	2	NULL
7930	"length"	"int"	32	0	7931	NULL	true	3	NULL
7933	"var_id"	"int"	32	0	7939	NULL	true	0	NULL
7934	"file_id"	"int"	32	0	7939	NULL	true	1	NULL
7935	"name"	"varchar"	64	0	7939	NULL	true	2	NULL
7936	"vartype"	"varchar"	64	0	7939	NULL	true	3	NULL
7937	"ndim"	"int"	32	0	7939	NULL	true	4	NULL
7938	"coord_dim_id"	"int"	32	0	7939	NULL	true	5	NULL
7941	"var_id"	"int"	32	0	7945	NULL	true	0	NULL
7942	"dim_id"	"int"	32	0	7945	NULL	true	1	NULL
7943	"file_id"	"int"	32	0	7945	NULL	true	2	NULL
7944	"dimpos"	"int"	32	0	7945	NULL	true	3	NULL
7947	"obj_name"	"varchar"	256	0	7953	NULL	true	0	NULL
7948	"att_name"	"varchar"	256	0	7953	NULL	true	1	NULL
7949	"att_type"	"varchar"	64	0	7953	NULL	true	2	NULL
7950	"value"	"clob"	0	0	7953	NULL	true	3	NULL
7951	"file_id"	"int"	32	0	7953	NULL	true	4	NULL
7952	"gr_name"	"varchar"	256	0	7953	NULL	true	5	NULL
7984	"schema"	"clob"	0	0	7998	NULL	true	0	NULL
7985	"table"	"clob"	0	0	7998	NULL	true	1	NULL
7986	"column"	"clob"	0	0	7998	NULL	true	2	NULL
7987	"type"	"clob"	0	0	7998	NULL	true	3	NULL
7988	"mode"	"clob"	0	0	7998	NULL	true	4	NULL
7989	"location"	"clob"	0	0	7998	NULL	true	5	NULL
7990	"count"	"bigint"	64	0	7998	NULL	true	6	NULL
7991	"typewidth"	"int"	32	0	7998	NULL	true	7	NULL
7992	"columnsize"	"bigint"	64	0	7998	NULL	true	8	NULL
7993	"heapsize"	"bigint"	64	0	7998	NULL	true	9	NULL
7994	"hashes"	"bigint"	64	0	7998	NULL	true	10	NULL
7995	"phash"	"boolean"	1	0	7998	NULL	true	11	NULL
7996	"imprints"	"bigint"	64	0	7998	NULL	true	12	NULL
7997	"sorted"	"boolean"	1	0	7998	NULL	true	13	NULL
8000	"schema"	"clob"	0	0	8010	NULL	true	0	NULL
8001	"table"	"clob"	0	0	8010	NULL	true	1	NULL
8002	"column"	"clob"	0	0	8010	NULL	true	2	NULL
8003	"type"	"clob"	0	0	8010	NULL	true	3	NULL
8004	"typewidth"	"int"	32	0	8010	NULL	true	4	NULL
8005	"count"	"bigint"	64	0	8010	NULL	true	5	NULL
8006	"distinct"	"bigint"	64	0	8010	NULL	true	6	NULL
8007	"atomwidth"	"int"	32	0	8010	NULL	true	7	NULL
8008	"reference"	"boolean"	1	0	8010	NULL	true	8	NULL
8009	"sorted"	"boolean"	1	0	8010	NULL	true	9	NULL
8048	"schema"	"clob"	0	0	8058	NULL	true	0	NULL
8049	"table"	"clob"	0	0	8058	NULL	true	1	NULL
8050	"column"	"clob"	0	0	8058	NULL	true	2	NULL
8051	"type"	"clob"	0	0	8058	NULL	true	3	NULL
8052	"count"	"bigint"	64	0	8058	NULL	true	4	NULL
8053	"columnsize"	"bigint"	64	0	8058	NULL	true	5	NULL
8054	"heapsize"	"bigint"	64	0	8058	NULL	true	6	NULL
8055	"hashes"	"bigint"	64	0	8058	NULL	true	7	NULL
8056	"imprints"	"bigint"	64	0	8058	NULL	true	8	NULL
8057	"sorted"	"boolean"	1	0	8058	NULL	true	9	NULL
8060	"schema"	"clob"	0	0	8068	NULL	true	0	NULL
8061	"table"	"clob"	0	0	8068	NULL	true	1	NULL
8062	"count"	"bigint"	64	0	8068	NULL	true	2	NULL
8063	"columnsize"	"hugeint"	128	0	8068	NULL	true	3	NULL
8064	"heapsize"	"hugeint"	128	0	8068	NULL	true	4	NULL
8065	"hashes"	"hugeint"	128	0	8068	NULL	true	5	NULL
8066	"imprints"	"hugeint"	128	0	8068	NULL	true	6	NULL
8067	"auxiliary"	"hugeint"	128	0	8068	NULL	true	7	NULL
8070	"column_id"	"int"	32	0	8081	NULL	true	0	NULL
8071	"type"	"clob"	0	0	8081	NULL	true	1	NULL
8072	"width"	"int"	32	0	8081	NULL	true	2	NULL
8073	"stamp"	"timestamp"	7	0	8081	NULL	true	3	NULL
8074	"sample"	"bigint"	64	0	8081	NULL	true	4	NULL
8075	"count"	"bigint"	64	0	8081	NULL	true	5	NULL
8076	"unique"	"bigint"	64	0	8081	NULL	true	6	NULL
8077	"nils"	"bigint"	64	0	8081	NULL	true	7	NULL
8078	"minval"	"clob"	0	0	8081	NULL	true	8	NULL
8079	"maxval"	"clob"	0	0	8081	NULL	true	9	NULL
8080	"sorted"	"boolean"	1	0	8081	NULL	true	10	NULL
8176	"file_id"	"bigint"	64	0	8184	NULL	false	0	NULL
8177	"file_location"	"clob"	0	0	8184	NULL	false	1	NULL
8178	"dbschema"	"smallint"	16	0	8184	NULL	false	2	NULL
8179	"format_version"	"varchar"	7	0	8184	NULL	true	3	NULL
8180	"sorting_order"	"varchar"	10	0	8184	NULL	true	4	NULL
8181	"comments"	"clob"	0	0	8184	NULL	true	5	NULL
8186	"sn"	"clob"	0	0	8197	NULL	false	0	NULL
8187	"file_id"	"bigint"	64	0	8197	NULL	false	1	NULL
8188	"ln"	"int"	32	0	8197	NULL	true	2	NULL
8189	"as"	"int"	32	0	8197	NULL	true	3	NULL
8190	"m5"	"clob"	0	0	8197	NULL	true	4	NULL
8191	"sp"	"clob"	0	0	8197	NULL	true	5	NULL
8192	"ur"	"clob"	0	0	8197	NULL	true	6	NULL
8199	"id"	"clob"	0	0	8216	NULL	false	0	NULL
8200	"file_id"	"bigint"	64	0	8216	NULL	false	1	NULL
8201	"cn"	"clob"	0	0	8216	NULL	true	2	NULL
8202	"ds"	"clob"	0	0	8216	NULL	true	3	NULL
8203	"dt"	"timestamp"	7	0	8216	NULL	true	4	NULL
8204	"fo"	"clob"	0	0	8216	NULL	true	5	NULL
8205	"ks"	"clob"	0	0	8216	NULL	true	6	NULL
8206	"lb"	"clob"	0	0	8216	NULL	true	7	NULL
8207	"pg"	"clob"	0	0	8216	NULL	true	8	NULL
8208	"pi"	"int"	32	0	8216	NULL	true	9	NULL
8209	"pl"	"clob"	0	0	8216	NULL	true	10	NULL
8210	"pu"	"clob"	0	0	8216	NULL	true	11	NULL
8211	"sm"	"clob"	0	0	8216	NULL	true	12	NULL
8218	"id"	"clob"	0	0	8228	NULL	false	0	NULL
8219	"file_id"	"bigint"	64	0	8228	NULL	false	1	NULL
8220	"pn"	"clob"	0	0	8228	NULL	true	2	NULL
8221	"cl"	"clob"	0	0	8228	NULL	true	3	NULL
8222	"pp"	"clob"	0	0	8228	NULL	true	4	NULL
8223	"vn"	"clob"	0	0	8228	NULL	true	5	NULL
8230	"qname"	"clob"	0	0	8241	NULL	false	0	NULL
8231	"flag"	"smallint"	16	0	8241	NULL	false	1	NULL
8232	"rname"	"clob"	0	0	8241	NULL	false	2	NULL
8233	"pos"	"int"	32	0	8241	NULL	false	3	NULL
8234	"mapq"	"smallint"	16	0	8241	NULL	false	4	NULL
8235	"cigar"	"clob"	0	0	8241	NULL	false	5	NULL
8236	"rnext"	"clob"	0	0	8241	NULL	false	6	NULL
8237	"pnext"	"int"	32	0	8241	NULL	false	7	NULL
8238	"tlen"	"int"	32	0	8241	NULL	false	8	NULL
8239	"seq"	"clob"	0	0	8241	NULL	false	9	NULL
8240	"qual"	"clob"	0	0	8241	NULL	false	10	NULL
8322	"function_id"	"int"	32	0	8323	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 56 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
6200	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
6210	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
6226	"db_user_info"	2000	NULL	0	true	0	0
6232	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
6236	"user_role"	2000	NULL	0	true	0	0
6239	"auths"	2000	NULL	0	true	0	0
6243	"privileges"	2000	NULL	0	true	0	0
6465	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
6476	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
6494	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
6533	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6666	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6746	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6754	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6798	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6828	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
7176	"spatial_ref_sys"	2000	NULL	0	true	0	0
7185	"geometry_columns"	2000	"-- create geometry_columns metadata view\ncreate view geometry_columns as\n\tselect e.value as f_table_catalog,\n\t\ts.name as f_table_schema,\n\t\ty.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type\n\tfrom schemas s, environment e, (\n\t\tselect t.schema_id,\n\t\t\tt.name as f_table_name,\n\t\t\tx.name as f_geometry_column,\n\t\t\thas_z(info)+has_m(info)+2 as coord_dimension,\n\t\t\tsrid, get_type(info, 0) as type\n\t\tfrom tables t, (\n\t\t\tselect name, table_id, type_digits as info, type_scale as srid\n\t\t\tfrom columns\n\t\t\twhere type in ( select distinct sqlname from types where systemname='wkb')\n\t\t\t) as x\n\t\twhere t.id=x.table_id\n\t\t) y\n\twhere y.schema_id=s.id and e.name='gdk_dbname';"	1	true	0	0
7892	"keywords"	2000	NULL	0	true	0	0
7900	"table_types"	2000	NULL	0	true	0	0
7908	"dependency_types"	2000	NULL	0	true	0	0
7925	"netcdf_files"	2000	NULL	0	true	0	0
7931	"netcdf_dims"	2000	NULL	0	true	0	0
7939	"netcdf_vars"	2000	NULL	0	true	0	0
7945	"netcdf_vardim"	2000	NULL	0	true	0	0
7953	"netcdf_attrs"	2000	NULL	0	true	0	0
7998	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
8010	"storagemodelinput"	2000	NULL	0	true	0	0
8058	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
8068	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
8081	"statistics"	2000	NULL	0	true	0	0
8184	"files"	8128	NULL	0	true	0	0
8197	"sq"	8128	NULL	0	true	0	0
8216	"rg"	8128	NULL	0	true	0	0
8228	"pg"	8128	NULL	0	true	0	0
8241	"export"	8128	NULL	0	true	0	0
8323	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 5047 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	32	"res_0"	"boolean"	1	0	0	0
2156	32	"arg_1"	"geometry"	0	0	1	1
2157	32	"arg_2"	"geometry"	0	0	1	2
2158	33	"res_0"	"boolean"	1	0	0	0
2159	33	"arg_1"	"mbr"	0	0	1	1
2160	33	"arg_2"	"mbr"	0	0	1	2
2161	34	"res_0"	"boolean"	1	0	0	0
2162	34	"arg_1"	"geometry"	0	0	1	1
2163	34	"arg_2"	"geometry"	0	0	1	2
2164	35	"res_0"	"boolean"	1	0	0	0
2165	35	"arg_1"	"mbr"	0	0	1	1
2166	35	"arg_2"	"mbr"	0	0	1	2
2167	36	"res_0"	"boolean"	1	0	0	0
2168	36	"arg_1"	"geometry"	0	0	1	1
2169	36	"arg_2"	"geometry"	0	0	1	2
2170	37	"res_0"	"boolean"	1	0	0	0
2171	37	"arg_1"	"mbr"	0	0	1	1
2172	37	"arg_2"	"mbr"	0	0	1	2
2173	38	"res_0"	"boolean"	1	0	0	0
2174	38	"arg_1"	"geometry"	0	0	1	1
2175	38	"arg_2"	"geometry"	0	0	1	2
2176	39	"res_0"	"boolean"	1	0	0	0
2177	39	"arg_1"	"mbr"	0	0	1	1
2178	39	"arg_2"	"mbr"	0	0	1	2
2179	40	"res_0"	"boolean"	1	0	0	0
2180	40	"arg_1"	"geometry"	0	0	1	1
2181	40	"arg_2"	"geometry"	0	0	1	2
2182	41	"res_0"	"boolean"	1	0	0	0
2183	41	"arg_1"	"mbr"	0	0	1	1
2184	41	"arg_2"	"mbr"	0	0	1	2
2185	42	"res_0"	"boolean"	1	0	0	0
2186	42	"arg_1"	"geometry"	0	0	1	1
2187	42	"arg_2"	"geometry"	0	0	1	2
2188	43	"res_0"	"boolean"	1	0	0	0
2189	43	"arg_1"	"mbr"	0	0	1	1
2190	43	"arg_2"	"mbr"	0	0	1	2
2191	44	"res_0"	"boolean"	1	0	0	0
2192	44	"arg_1"	"geometry"	0	0	1	1
2193	44	"arg_2"	"geometry"	0	0	1	2
2194	45	"res_0"	"boolean"	1	0	0	0
2195	45	"arg_1"	"mbr"	0	0	1	1
2196	45	"arg_2"	"mbr"	0	0	1	2
2197	46	"res_0"	"boolean"	1	0	0	0
2198	46	"arg_1"	"geometry"	0	0	1	1
2199	46	"arg_2"	"geometry"	0	0	1	2
2200	47	"res_0"	"boolean"	1	0	0	0
2201	47	"arg_1"	"mbr"	0	0	1	1
2202	47	"arg_2"	"mbr"	0	0	1	2
2203	48	"res_0"	"boolean"	1	0	0	0
2204	48	"arg_1"	"geometry"	0	0	1	1
2205	48	"arg_2"	"geometry"	0	0	1	2
2206	49	"res_0"	"boolean"	1	0	0	0
2207	49	"arg_1"	"mbr"	0	0	1	1
2208	49	"arg_2"	"mbr"	0	0	1	2
2209	50	"res_0"	"boolean"	1	0	0	0
2210	50	"arg_1"	"geometry"	0	0	1	1
2211	50	"arg_2"	"geometry"	0	0	1	2
2212	51	"res_0"	"boolean"	1	0	0	0
2213	51	"arg_1"	"mbr"	0	0	1	1
2214	51	"arg_2"	"mbr"	0	0	1	2
2215	52	"res_0"	"boolean"	1	0	0	0
2216	52	"arg_1"	"geometry"	0	0	1	1
2217	52	"arg_2"	"geometry"	0	0	1	2
2218	53	"res_0"	"boolean"	1	0	0	0
2219	53	"arg_1"	"mbr"	0	0	1	1
2220	53	"arg_2"	"mbr"	0	0	1	2
2221	54	"res_0"	"boolean"	1	0	0	0
2222	54	"arg_1"	"geometry"	0	0	1	1
2223	54	"arg_2"	"geometry"	0	0	1	2
2224	55	"res_0"	"boolean"	1	0	0	0
2225	55	"arg_1"	"mbr"	0	0	1	1
2226	55	"arg_2"	"mbr"	0	0	1	2
2227	56	"res_0"	"double"	53	0	0	0
2228	56	"arg_1"	"geometry"	0	0	1	1
2229	56	"arg_2"	"geometry"	0	0	1	2
2230	57	"res_0"	"double"	53	0	0	0
2231	57	"arg_1"	"mbr"	0	0	1	1
2232	57	"arg_2"	"mbr"	0	0	1	2
2233	58	"res_0"	"boolean"	1	0	0	0
2234	58	"arg_1"	"geometry"	0	0	1	1
2235	58	"arg_2"	"geometry"	0	0	1	2
2236	59	"res_0"	"boolean"	1	0	0	0
2237	59	"arg_1"	"mbr"	0	0	1	1
2238	59	"arg_2"	"mbr"	0	0	1	2
2239	60	"res_0"	"boolean"	1	0	0	0
2240	60	"arg_1"	"geometry"	0	0	1	1
2241	60	"arg_2"	"geometry"	0	0	1	2
2242	61	"res_0"	"boolean"	1	0	0	0
2243	61	"arg_1"	"mbr"	0	0	1	1
2244	61	"arg_2"	"mbr"	0	0	1	2
2245	63	"res_0"	"oid"	63	0	0	0
2246	63	"arg_1"	"wrd"	64	0	1	1
2247	64	"res_0"	"oid"	63	0	0	0
2248	64	"arg_1"	"oid"	63	0	1	1
2249	65	"res_0"	"wrd"	64	0	0	0
2250	65	"arg_1"	"any"	0	0	1	1
2251	66	"res_0"	"wrd"	64	0	0	0
2252	66	"arg_1"	"wrd"	64	0	1	1
2253	66	"arg_2"	"int"	32	0	1	2
2254	66	"arg_3"	"any"	0	0	1	3
2255	67	"res_0"	"boolean"	1	0	0	0
2256	67	"arg_1"	"any"	0	0	1	1
2257	67	"arg_2"	"any"	0	0	1	2
2258	68	"res_0"	"boolean"	1	0	0	0
2259	68	"arg_1"	"any"	0	0	1	1
2260	68	"arg_2"	"any"	0	0	1	2
2261	69	"res_0"	"boolean"	1	0	0	0
2262	69	"arg_1"	"any"	0	0	1	1
2263	70	"res_0"	"boolean"	1	0	0	0
2264	70	"arg_1"	"any"	0	0	1	1
2265	70	"arg_2"	"any"	0	0	1	2
2266	71	"res_0"	"boolean"	1	0	0	0
2267	71	"arg_1"	"any"	0	0	1	1
2268	71	"arg_2"	"any"	0	0	1	2
2269	72	"res_0"	"boolean"	1	0	0	0
2270	72	"arg_1"	"any"	0	0	1	1
2271	72	"arg_2"	"any"	0	0	1	2
2272	73	"res_0"	"boolean"	1	0	0	0
2273	73	"arg_1"	"any"	0	0	1	1
2274	73	"arg_2"	"any"	0	0	1	2
2275	77	"res_0"	"boolean"	1	0	0	0
2276	77	"arg_1"	"any"	0	0	1	1
2277	77	"arg_2"	"any"	0	0	1	2
2278	78	"res_0"	"oid"	63	0	0	0
2279	78	"arg_1"	"any"	0	0	1	1
2280	79	"res_0"	"int"	32	0	0	0
2281	79	"arg_1"	"any"	0	0	1	1
2282	80	"res_0"	"oid"	63	0	0	0
2283	80	"arg_1"	"any"	0	0	1	1
2284	80	"arg_2"	"varchar"	0	0	1	2
2285	80	"arg_3"	"varchar"	0	0	1	3
2286	83	"res_0"	"any"	0	0	0	0
2287	83	"arg_1"	"any"	0	0	1	1
2288	83	"arg_2"	"any"	0	0	1	2
2289	84	"res_0"	"any"	0	0	0	0
2290	84	"arg_1"	"any"	0	0	1	1
2291	84	"arg_2"	"any"	0	0	1	2
2292	85	"res_0"	"any"	0	0	0	0
2293	85	"arg_1"	"boolean"	1	0	1	1
2294	85	"arg_2"	"any"	0	0	1	2
2295	85	"arg_3"	"any"	0	0	1	3
2296	107	"res_0"	"oid"	63	0	0	0
2297	107	"arg_1"	"oid"	63	0	1	1
2298	107	"arg_2"	"oid"	63	0	1	2
2299	108	"res_0"	"tinyint"	8	0	0	0
2300	108	"arg_1"	"tinyint"	8	0	1	1
2301	108	"arg_2"	"tinyint"	8	0	1	2
2302	109	"res_0"	"smallint"	16	0	0	0
2303	109	"arg_1"	"smallint"	16	0	1	1
2304	109	"arg_2"	"smallint"	16	0	1	2
2305	110	"res_0"	"int"	32	0	0	0
2306	110	"arg_1"	"int"	32	0	1	1
2307	110	"arg_2"	"int"	32	0	1	2
2308	111	"res_0"	"bigint"	64	0	0	0
2309	111	"arg_1"	"bigint"	64	0	1	1
2310	111	"arg_2"	"bigint"	64	0	1	2
2311	112	"res_0"	"wrd"	64	0	0	0
2312	112	"arg_1"	"wrd"	64	0	1	1
2313	112	"arg_2"	"wrd"	64	0	1	2
2314	113	"res_0"	"hugeint"	128	0	0	0
2315	113	"arg_1"	"hugeint"	128	0	1	1
2316	113	"arg_2"	"hugeint"	128	0	1	2
2317	114	"res_0"	"decimal"	2	0	0	0
2318	114	"arg_1"	"decimal"	2	0	1	1
2319	114	"arg_2"	"decimal"	2	0	1	2
2320	115	"res_0"	"decimal"	4	0	0	0
2321	115	"arg_1"	"decimal"	4	0	1	1
2322	115	"arg_2"	"decimal"	4	0	1	2
2323	116	"res_0"	"decimal"	9	0	0	0
2324	116	"arg_1"	"decimal"	9	0	1	1
2325	116	"arg_2"	"decimal"	9	0	1	2
2326	117	"res_0"	"decimal"	18	0	0	0
2327	117	"arg_1"	"decimal"	18	0	1	1
2328	117	"arg_2"	"decimal"	18	0	1	2
2329	118	"res_0"	"decimal"	39	0	0	0
2330	118	"arg_1"	"decimal"	39	0	1	1
2331	118	"arg_2"	"decimal"	39	0	1	2
2332	119	"res_0"	"real"	24	0	0	0
2333	119	"arg_1"	"real"	24	0	1	1
2334	119	"arg_2"	"real"	24	0	1	2
2335	120	"res_0"	"double"	53	0	0	0
2336	120	"arg_1"	"double"	53	0	1	1
2337	120	"arg_2"	"double"	53	0	1	2
2338	130	"res_0"	"boolean"	1	0	0	0
2339	130	"arg_1"	"any"	0	0	1	1
2340	131	"res_0"	"boolean"	1	0	0	0
2341	131	"arg_1"	"boolean"	1	0	1	1
2342	131	"arg_2"	"any"	0	0	1	2
2343	132	"res_0"	"int"	32	0	0	0
2344	132	"arg_1"	"any"	0	0	1	1
2345	132	"arg_2"	"boolean"	1	0	1	2
2346	132	"arg_3"	"boolean"	1	0	1	3
2347	133	"res_0"	"int"	32	0	0	0
2348	133	"arg_1"	"any"	0	0	1	1
2349	133	"arg_2"	"boolean"	1	0	1	2
2350	133	"arg_3"	"boolean"	1	0	1	3
2351	134	"res_0"	"int"	32	0	0	0
2352	134	"arg_1"	"any"	0	0	1	1
2353	134	"arg_2"	"boolean"	1	0	1	2
2354	134	"arg_3"	"boolean"	1	0	1	3
2355	135	"res_0"	"boolean"	1	0	0	0
2356	135	"arg_1"	"boolean"	1	0	1	1
2357	135	"arg_2"	"boolean"	1	0	1	2
2358	136	"res_0"	"boolean"	1	0	0	0
2359	136	"arg_1"	"boolean"	1	0	1	1
2360	136	"arg_2"	"boolean"	1	0	1	2
2361	137	"res_0"	"boolean"	1	0	0	0
2362	137	"arg_1"	"boolean"	1	0	1	1
2363	137	"arg_2"	"boolean"	1	0	1	2
2364	138	"res_0"	"boolean"	1	0	0	0
2365	138	"arg_1"	"boolean"	1	0	1	1
2366	139	"res_0"	"smallint"	16	0	0	0
2367	139	"arg_1"	"smallint"	16	0	1	1
2368	139	"arg_2"	"tinyint"	8	0	1	2
2369	140	"res_0"	"smallint"	16	0	0	0
2370	140	"arg_1"	"smallint"	16	0	1	1
2371	140	"arg_2"	"tinyint"	8	0	1	2
2372	141	"res_0"	"int"	32	0	0	0
2373	141	"arg_1"	"int"	32	0	1	1
2374	141	"arg_2"	"tinyint"	8	0	1	2
2375	142	"res_0"	"int"	32	0	0	0
2376	142	"arg_1"	"int"	32	0	1	1
2377	142	"arg_2"	"tinyint"	8	0	1	2
2378	143	"res_0"	"int"	32	0	0	0
2379	143	"arg_1"	"int"	32	0	1	1
2380	143	"arg_2"	"smallint"	16	0	1	2
2381	144	"res_0"	"int"	32	0	0	0
2382	144	"arg_1"	"int"	32	0	1	1
2383	144	"arg_2"	"smallint"	16	0	1	2
2384	145	"res_0"	"bigint"	64	0	0	0
2385	145	"arg_1"	"bigint"	64	0	1	1
2386	145	"arg_2"	"tinyint"	8	0	1	2
2387	146	"res_0"	"bigint"	64	0	0	0
2388	146	"arg_1"	"bigint"	64	0	1	1
2389	146	"arg_2"	"tinyint"	8	0	1	2
2390	147	"res_0"	"bigint"	64	0	0	0
2391	147	"arg_1"	"bigint"	64	0	1	1
2392	147	"arg_2"	"smallint"	16	0	1	2
2393	148	"res_0"	"bigint"	64	0	0	0
2394	148	"arg_1"	"bigint"	64	0	1	1
2395	148	"arg_2"	"smallint"	16	0	1	2
2396	149	"res_0"	"bigint"	64	0	0	0
2397	149	"arg_1"	"bigint"	64	0	1	1
2398	149	"arg_2"	"int"	32	0	1	2
2399	150	"res_0"	"bigint"	64	0	0	0
2400	150	"arg_1"	"bigint"	64	0	1	1
2401	150	"arg_2"	"int"	32	0	1	2
2402	151	"res_0"	"bigint"	64	0	0	0
2403	151	"arg_1"	"bigint"	64	0	1	1
2404	151	"arg_2"	"wrd"	64	0	1	2
2405	152	"res_0"	"bigint"	64	0	0	0
2406	152	"arg_1"	"bigint"	64	0	1	1
2407	152	"arg_2"	"wrd"	64	0	1	2
2408	153	"res_0"	"wrd"	64	0	0	0
2409	153	"arg_1"	"wrd"	64	0	1	1
2410	153	"arg_2"	"tinyint"	8	0	1	2
2411	154	"res_0"	"wrd"	64	0	0	0
2412	154	"arg_1"	"wrd"	64	0	1	1
2413	154	"arg_2"	"tinyint"	8	0	1	2
2414	155	"res_0"	"wrd"	64	0	0	0
2415	155	"arg_1"	"wrd"	64	0	1	1
2416	155	"arg_2"	"smallint"	16	0	1	2
2417	156	"res_0"	"wrd"	64	0	0	0
2418	156	"arg_1"	"wrd"	64	0	1	1
2419	156	"arg_2"	"smallint"	16	0	1	2
2420	157	"res_0"	"wrd"	64	0	0	0
2421	157	"arg_1"	"wrd"	64	0	1	1
2422	157	"arg_2"	"int"	32	0	1	2
2423	158	"res_0"	"wrd"	64	0	0	0
2424	158	"arg_1"	"wrd"	64	0	1	1
2425	158	"arg_2"	"int"	32	0	1	2
2426	159	"res_0"	"hugeint"	128	0	0	0
2427	159	"arg_1"	"hugeint"	128	0	1	1
2428	159	"arg_2"	"tinyint"	8	0	1	2
2429	160	"res_0"	"hugeint"	128	0	0	0
2430	160	"arg_1"	"hugeint"	128	0	1	1
2431	160	"arg_2"	"tinyint"	8	0	1	2
2432	161	"res_0"	"hugeint"	128	0	0	0
2433	161	"arg_1"	"hugeint"	128	0	1	1
2434	161	"arg_2"	"smallint"	16	0	1	2
2435	162	"res_0"	"hugeint"	128	0	0	0
2436	162	"arg_1"	"hugeint"	128	0	1	1
2437	162	"arg_2"	"smallint"	16	0	1	2
2438	163	"res_0"	"hugeint"	128	0	0	0
2439	163	"arg_1"	"hugeint"	128	0	1	1
2440	163	"arg_2"	"int"	32	0	1	2
2441	164	"res_0"	"hugeint"	128	0	0	0
2442	164	"arg_1"	"hugeint"	128	0	1	1
2443	164	"arg_2"	"int"	32	0	1	2
2444	165	"res_0"	"hugeint"	128	0	0	0
2445	165	"arg_1"	"hugeint"	128	0	1	1
2446	165	"arg_2"	"bigint"	64	0	1	2
2447	166	"res_0"	"hugeint"	128	0	0	0
2448	166	"arg_1"	"hugeint"	128	0	1	1
2449	166	"arg_2"	"bigint"	64	0	1	2
2450	167	"res_0"	"hugeint"	128	0	0	0
2451	167	"arg_1"	"hugeint"	128	0	1	1
2452	167	"arg_2"	"wrd"	64	0	1	2
2453	168	"res_0"	"hugeint"	128	0	0	0
2454	168	"arg_1"	"hugeint"	128	0	1	1
2455	168	"arg_2"	"wrd"	64	0	1	2
2456	169	"res_0"	"oid"	63	0	0	0
2457	169	"arg_1"	"oid"	63	0	1	1
2458	169	"arg_2"	"oid"	63	0	1	2
2459	170	"res_0"	"oid"	63	0	0	0
2460	170	"arg_1"	"oid"	63	0	1	1
2461	170	"arg_2"	"oid"	63	0	1	2
2462	171	"res_0"	"oid"	63	0	0	0
2463	171	"arg_1"	"oid"	63	0	1	1
2464	171	"arg_2"	"oid"	63	0	1	2
2465	172	"res_0"	"oid"	63	0	0	0
2466	172	"arg_1"	"oid"	63	0	1	1
2467	172	"arg_2"	"oid"	63	0	1	2
2468	173	"res_0"	"oid"	63	0	0	0
2469	173	"arg_1"	"oid"	63	0	1	1
2470	173	"arg_2"	"oid"	63	0	1	2
2471	174	"res_0"	"oid"	63	0	0	0
2472	174	"arg_1"	"oid"	63	0	1	1
2473	174	"arg_2"	"oid"	63	0	1	2
2474	175	"res_0"	"oid"	63	0	0	0
2475	175	"arg_1"	"oid"	63	0	1	1
2476	175	"arg_2"	"oid"	63	0	1	2
2477	176	"res_0"	"oid"	63	0	0	0
2478	176	"arg_1"	"oid"	63	0	1	1
2479	177	"res_0"	"oid"	63	0	0	0
2480	177	"arg_1"	"oid"	63	0	1	1
2481	177	"arg_2"	"int"	32	0	1	2
2482	178	"res_0"	"oid"	63	0	0	0
2483	178	"arg_1"	"oid"	63	0	1	1
2484	178	"arg_2"	"int"	32	0	1	2
2485	179	"res_0"	"oid"	63	0	0	0
2486	179	"arg_1"	"oid"	63	0	1	1
2487	180	"res_0"	"oid"	63	0	0	0
2488	180	"arg_1"	"oid"	63	0	1	1
2489	181	"res_0"	"tinyint"	8	0	0	0
2490	181	"arg_1"	"oid"	63	0	1	1
2491	182	"res_0"	"oid"	63	0	0	0
2492	182	"arg_1"	"oid"	63	0	1	1
2493	182	"arg_2"	"oid"	63	0	1	2
2494	183	"res_0"	"oid"	63	0	0	0
2495	183	"arg_1"	"oid"	63	0	1	1
2496	183	"arg_2"	"oid"	63	0	1	2
2497	184	"res_0"	"month_interval"	32	0	0	0
2498	184	"arg_1"	"month_interval"	32	0	1	1
2499	184	"arg_2"	"oid"	63	0	1	2
2500	185	"res_0"	"month_interval"	32	0	0	0
2501	185	"arg_1"	"month_interval"	32	0	1	1
2502	185	"arg_2"	"oid"	63	0	1	2
2503	186	"res_0"	"month_interval"	32	0	0	0
2504	186	"arg_1"	"month_interval"	32	0	1	1
2505	186	"arg_2"	"oid"	63	0	1	2
2506	187	"res_0"	"month_interval"	32	0	0	0
2507	187	"arg_1"	"month_interval"	32	0	1	1
2508	187	"arg_2"	"oid"	63	0	1	2
2509	188	"res_0"	"sec_interval"	13	0	0	0
2510	188	"arg_1"	"sec_interval"	13	0	1	1
2511	188	"arg_2"	"oid"	63	0	1	2
2512	189	"res_0"	"sec_interval"	13	0	0	0
2513	189	"arg_1"	"sec_interval"	13	0	1	1
2514	189	"arg_2"	"oid"	63	0	1	2
2515	190	"res_0"	"sec_interval"	13	0	0	0
2516	190	"arg_1"	"sec_interval"	13	0	1	1
2517	190	"arg_2"	"oid"	63	0	1	2
2518	191	"res_0"	"sec_interval"	13	0	0	0
2519	191	"arg_1"	"sec_interval"	13	0	1	1
2520	191	"arg_2"	"oid"	63	0	1	2
2521	192	"res_0"	"tinyint"	8	0	0	0
2522	192	"arg_1"	"tinyint"	8	0	1	1
2523	192	"arg_2"	"tinyint"	8	0	1	2
2524	193	"res_0"	"tinyint"	8	0	0	0
2525	193	"arg_1"	"tinyint"	8	0	1	1
2526	193	"arg_2"	"tinyint"	8	0	1	2
2527	194	"res_0"	"tinyint"	8	0	0	0
2528	194	"arg_1"	"tinyint"	8	0	1	1
2529	194	"arg_2"	"tinyint"	8	0	1	2
2530	195	"res_0"	"tinyint"	8	0	0	0
2531	195	"arg_1"	"tinyint"	8	0	1	1
2532	195	"arg_2"	"tinyint"	8	0	1	2
2533	196	"res_0"	"tinyint"	8	0	0	0
2534	196	"arg_1"	"tinyint"	8	0	1	1
2535	196	"arg_2"	"tinyint"	8	0	1	2
2536	197	"res_0"	"tinyint"	8	0	0	0
2537	197	"arg_1"	"tinyint"	8	0	1	1
2538	197	"arg_2"	"tinyint"	8	0	1	2
2539	198	"res_0"	"tinyint"	8	0	0	0
2540	198	"arg_1"	"tinyint"	8	0	1	1
2541	198	"arg_2"	"tinyint"	8	0	1	2
2542	199	"res_0"	"tinyint"	8	0	0	0
2543	199	"arg_1"	"tinyint"	8	0	1	1
2544	200	"res_0"	"tinyint"	8	0	0	0
2545	200	"arg_1"	"tinyint"	8	0	1	1
2546	200	"arg_2"	"int"	32	0	1	2
2547	201	"res_0"	"tinyint"	8	0	0	0
2548	201	"arg_1"	"tinyint"	8	0	1	1
2549	201	"arg_2"	"int"	32	0	1	2
2550	202	"res_0"	"tinyint"	8	0	0	0
2551	202	"arg_1"	"tinyint"	8	0	1	1
2552	203	"res_0"	"tinyint"	8	0	0	0
2553	203	"arg_1"	"tinyint"	8	0	1	1
2554	204	"res_0"	"tinyint"	8	0	0	0
2555	204	"arg_1"	"tinyint"	8	0	1	1
2556	205	"res_0"	"tinyint"	8	0	0	0
2557	205	"arg_1"	"tinyint"	8	0	1	1
2558	205	"arg_2"	"tinyint"	8	0	1	2
2559	206	"res_0"	"tinyint"	8	0	0	0
2560	206	"arg_1"	"tinyint"	8	0	1	1
2561	206	"arg_2"	"tinyint"	8	0	1	2
2562	207	"res_0"	"month_interval"	32	0	0	0
2563	207	"arg_1"	"month_interval"	32	0	1	1
2564	207	"arg_2"	"tinyint"	8	0	1	2
2565	208	"res_0"	"month_interval"	32	0	0	0
2566	208	"arg_1"	"month_interval"	32	0	1	1
2567	208	"arg_2"	"tinyint"	8	0	1	2
2568	209	"res_0"	"month_interval"	32	0	0	0
2569	209	"arg_1"	"month_interval"	32	0	1	1
2570	209	"arg_2"	"tinyint"	8	0	1	2
2571	210	"res_0"	"month_interval"	32	0	0	0
2572	210	"arg_1"	"month_interval"	32	0	1	1
2573	210	"arg_2"	"tinyint"	8	0	1	2
2574	211	"res_0"	"sec_interval"	13	0	0	0
2575	211	"arg_1"	"sec_interval"	13	0	1	1
2576	211	"arg_2"	"tinyint"	8	0	1	2
2577	212	"res_0"	"sec_interval"	13	0	0	0
2578	212	"arg_1"	"sec_interval"	13	0	1	1
2579	212	"arg_2"	"tinyint"	8	0	1	2
2580	213	"res_0"	"sec_interval"	13	0	0	0
2581	213	"arg_1"	"sec_interval"	13	0	1	1
2582	213	"arg_2"	"tinyint"	8	0	1	2
2583	214	"res_0"	"sec_interval"	13	0	0	0
2584	214	"arg_1"	"sec_interval"	13	0	1	1
2585	214	"arg_2"	"tinyint"	8	0	1	2
2586	215	"res_0"	"smallint"	16	0	0	0
2587	215	"arg_1"	"smallint"	16	0	1	1
2588	215	"arg_2"	"smallint"	16	0	1	2
2589	216	"res_0"	"smallint"	16	0	0	0
2590	216	"arg_1"	"smallint"	16	0	1	1
2591	216	"arg_2"	"smallint"	16	0	1	2
2592	217	"res_0"	"smallint"	16	0	0	0
2593	217	"arg_1"	"smallint"	16	0	1	1
2594	217	"arg_2"	"smallint"	16	0	1	2
2595	218	"res_0"	"smallint"	16	0	0	0
2596	218	"arg_1"	"smallint"	16	0	1	1
2597	218	"arg_2"	"smallint"	16	0	1	2
2598	219	"res_0"	"smallint"	16	0	0	0
2599	219	"arg_1"	"smallint"	16	0	1	1
2600	219	"arg_2"	"smallint"	16	0	1	2
2601	220	"res_0"	"smallint"	16	0	0	0
2602	220	"arg_1"	"smallint"	16	0	1	1
2603	220	"arg_2"	"smallint"	16	0	1	2
2604	221	"res_0"	"smallint"	16	0	0	0
2605	221	"arg_1"	"smallint"	16	0	1	1
2606	221	"arg_2"	"smallint"	16	0	1	2
2607	222	"res_0"	"smallint"	16	0	0	0
2608	222	"arg_1"	"smallint"	16	0	1	1
2609	223	"res_0"	"smallint"	16	0	0	0
2610	223	"arg_1"	"smallint"	16	0	1	1
2611	223	"arg_2"	"int"	32	0	1	2
2612	224	"res_0"	"smallint"	16	0	0	0
2613	224	"arg_1"	"smallint"	16	0	1	1
2614	224	"arg_2"	"int"	32	0	1	2
2615	225	"res_0"	"smallint"	16	0	0	0
2616	225	"arg_1"	"smallint"	16	0	1	1
2617	226	"res_0"	"smallint"	16	0	0	0
2618	226	"arg_1"	"smallint"	16	0	1	1
2619	227	"res_0"	"tinyint"	8	0	0	0
2620	227	"arg_1"	"smallint"	16	0	1	1
2621	228	"res_0"	"smallint"	16	0	0	0
2622	228	"arg_1"	"smallint"	16	0	1	1
2623	228	"arg_2"	"smallint"	16	0	1	2
2624	229	"res_0"	"smallint"	16	0	0	0
2625	229	"arg_1"	"smallint"	16	0	1	1
2626	229	"arg_2"	"smallint"	16	0	1	2
2627	230	"res_0"	"month_interval"	32	0	0	0
2628	230	"arg_1"	"month_interval"	32	0	1	1
2629	230	"arg_2"	"smallint"	16	0	1	2
2630	231	"res_0"	"month_interval"	32	0	0	0
2631	231	"arg_1"	"month_interval"	32	0	1	1
2632	231	"arg_2"	"smallint"	16	0	1	2
2633	232	"res_0"	"month_interval"	32	0	0	0
2634	232	"arg_1"	"month_interval"	32	0	1	1
2635	232	"arg_2"	"smallint"	16	0	1	2
2636	233	"res_0"	"month_interval"	32	0	0	0
2637	233	"arg_1"	"month_interval"	32	0	1	1
2638	233	"arg_2"	"smallint"	16	0	1	2
2639	234	"res_0"	"sec_interval"	13	0	0	0
2640	234	"arg_1"	"sec_interval"	13	0	1	1
2641	234	"arg_2"	"smallint"	16	0	1	2
2642	235	"res_0"	"sec_interval"	13	0	0	0
2643	235	"arg_1"	"sec_interval"	13	0	1	1
2644	235	"arg_2"	"smallint"	16	0	1	2
2645	236	"res_0"	"sec_interval"	13	0	0	0
2646	236	"arg_1"	"sec_interval"	13	0	1	1
2647	236	"arg_2"	"smallint"	16	0	1	2
2648	237	"res_0"	"sec_interval"	13	0	0	0
2649	237	"arg_1"	"sec_interval"	13	0	1	1
2650	237	"arg_2"	"smallint"	16	0	1	2
2651	238	"res_0"	"int"	32	0	0	0
2652	238	"arg_1"	"int"	32	0	1	1
2653	238	"arg_2"	"int"	32	0	1	2
2654	239	"res_0"	"int"	32	0	0	0
2655	239	"arg_1"	"int"	32	0	1	1
2656	239	"arg_2"	"int"	32	0	1	2
2657	240	"res_0"	"int"	32	0	0	0
2658	240	"arg_1"	"int"	32	0	1	1
2659	240	"arg_2"	"int"	32	0	1	2
2660	241	"res_0"	"int"	32	0	0	0
2661	241	"arg_1"	"int"	32	0	1	1
2662	241	"arg_2"	"int"	32	0	1	2
2663	242	"res_0"	"int"	32	0	0	0
2664	242	"arg_1"	"int"	32	0	1	1
2665	242	"arg_2"	"int"	32	0	1	2
2666	243	"res_0"	"int"	32	0	0	0
2667	243	"arg_1"	"int"	32	0	1	1
2668	243	"arg_2"	"int"	32	0	1	2
2669	244	"res_0"	"int"	32	0	0	0
2670	244	"arg_1"	"int"	32	0	1	1
2671	244	"arg_2"	"int"	32	0	1	2
2672	245	"res_0"	"int"	32	0	0	0
2673	245	"arg_1"	"int"	32	0	1	1
2674	246	"res_0"	"int"	32	0	0	0
2675	246	"arg_1"	"int"	32	0	1	1
2676	246	"arg_2"	"int"	32	0	1	2
2677	247	"res_0"	"int"	32	0	0	0
2678	247	"arg_1"	"int"	32	0	1	1
2679	247	"arg_2"	"int"	32	0	1	2
2680	248	"res_0"	"int"	32	0	0	0
2681	248	"arg_1"	"int"	32	0	1	1
2682	249	"res_0"	"int"	32	0	0	0
2683	249	"arg_1"	"int"	32	0	1	1
2684	250	"res_0"	"tinyint"	8	0	0	0
2685	250	"arg_1"	"int"	32	0	1	1
2686	251	"res_0"	"int"	32	0	0	0
2687	251	"arg_1"	"int"	32	0	1	1
2688	251	"arg_2"	"int"	32	0	1	2
2689	252	"res_0"	"int"	32	0	0	0
2690	252	"arg_1"	"int"	32	0	1	1
2691	252	"arg_2"	"int"	32	0	1	2
2692	253	"res_0"	"month_interval"	32	0	0	0
2693	253	"arg_1"	"month_interval"	32	0	1	1
2694	253	"arg_2"	"int"	32	0	1	2
2695	254	"res_0"	"month_interval"	32	0	0	0
2696	254	"arg_1"	"month_interval"	32	0	1	1
2697	254	"arg_2"	"int"	32	0	1	2
2698	255	"res_0"	"month_interval"	32	0	0	0
2699	255	"arg_1"	"month_interval"	32	0	1	1
2700	255	"arg_2"	"int"	32	0	1	2
2701	256	"res_0"	"month_interval"	32	0	0	0
2702	256	"arg_1"	"month_interval"	32	0	1	1
2703	256	"arg_2"	"int"	32	0	1	2
2704	257	"res_0"	"sec_interval"	13	0	0	0
2705	257	"arg_1"	"sec_interval"	13	0	1	1
2706	257	"arg_2"	"int"	32	0	1	2
2707	258	"res_0"	"sec_interval"	13	0	0	0
2708	258	"arg_1"	"sec_interval"	13	0	1	1
2709	258	"arg_2"	"int"	32	0	1	2
2710	259	"res_0"	"sec_interval"	13	0	0	0
2711	259	"arg_1"	"sec_interval"	13	0	1	1
2712	259	"arg_2"	"int"	32	0	1	2
2713	260	"res_0"	"sec_interval"	13	0	0	0
2714	260	"arg_1"	"sec_interval"	13	0	1	1
2715	260	"arg_2"	"int"	32	0	1	2
2716	261	"res_0"	"bigint"	64	0	0	0
2717	261	"arg_1"	"bigint"	64	0	1	1
2718	261	"arg_2"	"bigint"	64	0	1	2
2719	262	"res_0"	"bigint"	64	0	0	0
2720	262	"arg_1"	"bigint"	64	0	1	1
2721	262	"arg_2"	"bigint"	64	0	1	2
2722	263	"res_0"	"bigint"	64	0	0	0
2723	263	"arg_1"	"bigint"	64	0	1	1
2724	263	"arg_2"	"bigint"	64	0	1	2
2725	264	"res_0"	"bigint"	64	0	0	0
2726	264	"arg_1"	"bigint"	64	0	1	1
2727	264	"arg_2"	"bigint"	64	0	1	2
2728	265	"res_0"	"bigint"	64	0	0	0
2729	265	"arg_1"	"bigint"	64	0	1	1
2730	265	"arg_2"	"bigint"	64	0	1	2
2731	266	"res_0"	"bigint"	64	0	0	0
2732	266	"arg_1"	"bigint"	64	0	1	1
2733	266	"arg_2"	"bigint"	64	0	1	2
2734	267	"res_0"	"bigint"	64	0	0	0
2735	267	"arg_1"	"bigint"	64	0	1	1
2736	267	"arg_2"	"bigint"	64	0	1	2
2737	268	"res_0"	"bigint"	64	0	0	0
2738	268	"arg_1"	"bigint"	64	0	1	1
2739	269	"res_0"	"bigint"	64	0	0	0
2740	269	"arg_1"	"bigint"	64	0	1	1
2741	269	"arg_2"	"int"	32	0	1	2
2742	270	"res_0"	"bigint"	64	0	0	0
2743	270	"arg_1"	"bigint"	64	0	1	1
2744	270	"arg_2"	"int"	32	0	1	2
2745	271	"res_0"	"bigint"	64	0	0	0
2746	271	"arg_1"	"bigint"	64	0	1	1
2747	272	"res_0"	"bigint"	64	0	0	0
2748	272	"arg_1"	"bigint"	64	0	1	1
2749	273	"res_0"	"tinyint"	8	0	0	0
2750	273	"arg_1"	"bigint"	64	0	1	1
2751	274	"res_0"	"bigint"	64	0	0	0
2752	274	"arg_1"	"bigint"	64	0	1	1
2753	274	"arg_2"	"bigint"	64	0	1	2
2754	275	"res_0"	"bigint"	64	0	0	0
2755	275	"arg_1"	"bigint"	64	0	1	1
2756	275	"arg_2"	"bigint"	64	0	1	2
2757	276	"res_0"	"month_interval"	32	0	0	0
2758	276	"arg_1"	"month_interval"	32	0	1	1
2759	276	"arg_2"	"bigint"	64	0	1	2
2760	277	"res_0"	"month_interval"	32	0	0	0
2761	277	"arg_1"	"month_interval"	32	0	1	1
2762	277	"arg_2"	"bigint"	64	0	1	2
2763	278	"res_0"	"month_interval"	32	0	0	0
2764	278	"arg_1"	"month_interval"	32	0	1	1
2765	278	"arg_2"	"bigint"	64	0	1	2
2766	279	"res_0"	"month_interval"	32	0	0	0
2767	279	"arg_1"	"month_interval"	32	0	1	1
2768	279	"arg_2"	"bigint"	64	0	1	2
2769	280	"res_0"	"sec_interval"	13	0	0	0
2770	280	"arg_1"	"sec_interval"	13	0	1	1
2771	280	"arg_2"	"bigint"	64	0	1	2
2772	281	"res_0"	"sec_interval"	13	0	0	0
2773	281	"arg_1"	"sec_interval"	13	0	1	1
2774	281	"arg_2"	"bigint"	64	0	1	2
2775	282	"res_0"	"sec_interval"	13	0	0	0
2776	282	"arg_1"	"sec_interval"	13	0	1	1
2777	282	"arg_2"	"bigint"	64	0	1	2
2778	283	"res_0"	"sec_interval"	13	0	0	0
2779	283	"arg_1"	"sec_interval"	13	0	1	1
2780	283	"arg_2"	"bigint"	64	0	1	2
2781	284	"res_0"	"wrd"	64	0	0	0
2782	284	"arg_1"	"wrd"	64	0	1	1
2783	284	"arg_2"	"wrd"	64	0	1	2
2784	285	"res_0"	"wrd"	64	0	0	0
2785	285	"arg_1"	"wrd"	64	0	1	1
2786	285	"arg_2"	"wrd"	64	0	1	2
2787	286	"res_0"	"wrd"	64	0	0	0
2788	286	"arg_1"	"wrd"	64	0	1	1
2789	286	"arg_2"	"wrd"	64	0	1	2
2790	287	"res_0"	"wrd"	64	0	0	0
2791	287	"arg_1"	"wrd"	64	0	1	1
2792	287	"arg_2"	"wrd"	64	0	1	2
2793	288	"res_0"	"wrd"	64	0	0	0
2794	288	"arg_1"	"wrd"	64	0	1	1
2795	288	"arg_2"	"wrd"	64	0	1	2
2796	289	"res_0"	"wrd"	64	0	0	0
2797	289	"arg_1"	"wrd"	64	0	1	1
2798	289	"arg_2"	"wrd"	64	0	1	2
2799	290	"res_0"	"wrd"	64	0	0	0
2800	290	"arg_1"	"wrd"	64	0	1	1
2801	290	"arg_2"	"wrd"	64	0	1	2
2802	291	"res_0"	"wrd"	64	0	0	0
2803	291	"arg_1"	"wrd"	64	0	1	1
2804	292	"res_0"	"wrd"	64	0	0	0
2805	292	"arg_1"	"wrd"	64	0	1	1
2806	292	"arg_2"	"int"	32	0	1	2
2807	293	"res_0"	"wrd"	64	0	0	0
2808	293	"arg_1"	"wrd"	64	0	1	1
2809	293	"arg_2"	"int"	32	0	1	2
2810	294	"res_0"	"wrd"	64	0	0	0
2811	294	"arg_1"	"wrd"	64	0	1	1
2812	295	"res_0"	"wrd"	64	0	0	0
2813	295	"arg_1"	"wrd"	64	0	1	1
2814	296	"res_0"	"tinyint"	8	0	0	0
2815	296	"arg_1"	"wrd"	64	0	1	1
2816	297	"res_0"	"wrd"	64	0	0	0
2817	297	"arg_1"	"wrd"	64	0	1	1
2818	297	"arg_2"	"wrd"	64	0	1	2
2819	298	"res_0"	"wrd"	64	0	0	0
2820	298	"arg_1"	"wrd"	64	0	1	1
2821	298	"arg_2"	"wrd"	64	0	1	2
2822	299	"res_0"	"month_interval"	32	0	0	0
2823	299	"arg_1"	"month_interval"	32	0	1	1
2824	299	"arg_2"	"wrd"	64	0	1	2
2825	300	"res_0"	"month_interval"	32	0	0	0
2826	300	"arg_1"	"month_interval"	32	0	1	1
2827	300	"arg_2"	"wrd"	64	0	1	2
2828	301	"res_0"	"month_interval"	32	0	0	0
2829	301	"arg_1"	"month_interval"	32	0	1	1
2830	301	"arg_2"	"wrd"	64	0	1	2
2831	302	"res_0"	"month_interval"	32	0	0	0
2832	302	"arg_1"	"month_interval"	32	0	1	1
2833	302	"arg_2"	"wrd"	64	0	1	2
2834	303	"res_0"	"sec_interval"	13	0	0	0
2835	303	"arg_1"	"sec_interval"	13	0	1	1
2836	303	"arg_2"	"wrd"	64	0	1	2
2837	304	"res_0"	"sec_interval"	13	0	0	0
2838	304	"arg_1"	"sec_interval"	13	0	1	1
2839	304	"arg_2"	"wrd"	64	0	1	2
2840	305	"res_0"	"sec_interval"	13	0	0	0
2841	305	"arg_1"	"sec_interval"	13	0	1	1
2842	305	"arg_2"	"wrd"	64	0	1	2
2843	306	"res_0"	"sec_interval"	13	0	0	0
2844	306	"arg_1"	"sec_interval"	13	0	1	1
2845	306	"arg_2"	"wrd"	64	0	1	2
2846	307	"res_0"	"hugeint"	128	0	0	0
2847	307	"arg_1"	"hugeint"	128	0	1	1
2848	307	"arg_2"	"hugeint"	128	0	1	2
2849	308	"res_0"	"hugeint"	128	0	0	0
2850	308	"arg_1"	"hugeint"	128	0	1	1
2851	308	"arg_2"	"hugeint"	128	0	1	2
2852	309	"res_0"	"hugeint"	128	0	0	0
2853	309	"arg_1"	"hugeint"	128	0	1	1
2854	309	"arg_2"	"hugeint"	128	0	1	2
2855	310	"res_0"	"hugeint"	128	0	0	0
2856	310	"arg_1"	"hugeint"	128	0	1	1
2857	310	"arg_2"	"hugeint"	128	0	1	2
2858	311	"res_0"	"hugeint"	128	0	0	0
2859	311	"arg_1"	"hugeint"	128	0	1	1
2860	311	"arg_2"	"hugeint"	128	0	1	2
2861	312	"res_0"	"hugeint"	128	0	0	0
2862	312	"arg_1"	"hugeint"	128	0	1	1
2863	312	"arg_2"	"hugeint"	128	0	1	2
2864	313	"res_0"	"hugeint"	128	0	0	0
2865	313	"arg_1"	"hugeint"	128	0	1	1
2866	313	"arg_2"	"hugeint"	128	0	1	2
2867	314	"res_0"	"hugeint"	128	0	0	0
2868	314	"arg_1"	"hugeint"	128	0	1	1
2869	315	"res_0"	"hugeint"	128	0	0	0
2870	315	"arg_1"	"hugeint"	128	0	1	1
2871	315	"arg_2"	"int"	32	0	1	2
2872	316	"res_0"	"hugeint"	128	0	0	0
2873	316	"arg_1"	"hugeint"	128	0	1	1
2874	316	"arg_2"	"int"	32	0	1	2
2875	317	"res_0"	"hugeint"	128	0	0	0
2876	317	"arg_1"	"hugeint"	128	0	1	1
2877	318	"res_0"	"hugeint"	128	0	0	0
2878	318	"arg_1"	"hugeint"	128	0	1	1
2879	319	"res_0"	"tinyint"	8	0	0	0
2880	319	"arg_1"	"hugeint"	128	0	1	1
2881	320	"res_0"	"hugeint"	128	0	0	0
2882	320	"arg_1"	"hugeint"	128	0	1	1
2883	320	"arg_2"	"hugeint"	128	0	1	2
2884	321	"res_0"	"hugeint"	128	0	0	0
2885	321	"arg_1"	"hugeint"	128	0	1	1
2886	321	"arg_2"	"hugeint"	128	0	1	2
2887	322	"res_0"	"month_interval"	32	0	0	0
2888	322	"arg_1"	"month_interval"	32	0	1	1
2889	322	"arg_2"	"hugeint"	128	0	1	2
2890	323	"res_0"	"month_interval"	32	0	0	0
2891	323	"arg_1"	"month_interval"	32	0	1	1
2892	323	"arg_2"	"hugeint"	128	0	1	2
2893	324	"res_0"	"month_interval"	32	0	0	0
2894	324	"arg_1"	"month_interval"	32	0	1	1
2895	324	"arg_2"	"hugeint"	128	0	1	2
2896	325	"res_0"	"month_interval"	32	0	0	0
2897	325	"arg_1"	"month_interval"	32	0	1	1
2898	325	"arg_2"	"hugeint"	128	0	1	2
2899	326	"res_0"	"sec_interval"	13	0	0	0
2900	326	"arg_1"	"sec_interval"	13	0	1	1
2901	326	"arg_2"	"hugeint"	128	0	1	2
2902	327	"res_0"	"sec_interval"	13	0	0	0
2903	327	"arg_1"	"sec_interval"	13	0	1	1
2904	327	"arg_2"	"hugeint"	128	0	1	2
2905	328	"res_0"	"sec_interval"	13	0	0	0
2906	328	"arg_1"	"sec_interval"	13	0	1	1
2907	328	"arg_2"	"hugeint"	128	0	1	2
2908	329	"res_0"	"sec_interval"	13	0	0	0
2909	329	"arg_1"	"sec_interval"	13	0	1	1
2910	329	"arg_2"	"hugeint"	128	0	1	2
2911	330	"res_0"	"decimal"	2	0	0	0
2912	330	"arg_1"	"decimal"	2	0	1	1
2913	330	"arg_2"	"decimal"	2	0	1	2
2914	331	"res_0"	"decimal"	2	0	0	0
2915	331	"arg_1"	"decimal"	2	0	1	1
2916	331	"arg_2"	"decimal"	2	0	1	2
2917	332	"res_0"	"decimal"	2	0	0	0
2918	332	"arg_1"	"decimal"	2	0	1	1
2919	332	"arg_2"	"decimal"	2	0	1	2
2920	333	"res_0"	"decimal"	2	0	0	0
2921	333	"arg_1"	"decimal"	2	0	1	1
2922	333	"arg_2"	"decimal"	2	0	1	2
2923	334	"res_0"	"decimal"	2	0	0	0
2924	334	"arg_1"	"decimal"	2	0	1	1
2925	334	"arg_2"	"decimal"	2	0	1	2
2926	335	"res_0"	"decimal"	2	0	0	0
2927	335	"arg_1"	"decimal"	2	0	1	1
2928	335	"arg_2"	"decimal"	2	0	1	2
2929	336	"res_0"	"decimal"	2	0	0	0
2930	336	"arg_1"	"decimal"	2	0	1	1
2931	336	"arg_2"	"decimal"	2	0	1	2
2932	337	"res_0"	"decimal"	2	0	0	0
2933	337	"arg_1"	"decimal"	2	0	1	1
2934	338	"res_0"	"decimal"	2	0	0	0
2935	338	"arg_1"	"decimal"	2	0	1	1
2936	338	"arg_2"	"int"	32	0	1	2
2937	339	"res_0"	"decimal"	2	0	0	0
2938	339	"arg_1"	"decimal"	2	0	1	1
2939	339	"arg_2"	"int"	32	0	1	2
2940	340	"res_0"	"decimal"	2	0	0	0
2941	340	"arg_1"	"decimal"	2	0	1	1
2942	341	"res_0"	"decimal"	2	0	0	0
2943	341	"arg_1"	"decimal"	2	0	1	1
2944	342	"res_0"	"tinyint"	8	0	0	0
2945	342	"arg_1"	"decimal"	2	0	1	1
2946	343	"res_0"	"decimal"	2	0	0	0
2947	343	"arg_1"	"decimal"	2	0	1	1
2948	343	"arg_2"	"tinyint"	8	0	1	2
2949	344	"res_0"	"decimal"	2	0	0	0
2950	344	"arg_1"	"decimal"	2	0	1	1
2951	344	"arg_2"	"tinyint"	8	0	1	2
2952	345	"res_0"	"month_interval"	32	0	0	0
2953	345	"arg_1"	"month_interval"	32	0	1	1
2954	345	"arg_2"	"decimal"	2	0	1	2
2955	346	"res_0"	"month_interval"	32	0	0	0
2956	346	"arg_1"	"month_interval"	32	0	1	1
2957	346	"arg_2"	"decimal"	2	0	1	2
2958	347	"res_0"	"month_interval"	32	0	0	0
2959	347	"arg_1"	"month_interval"	32	0	1	1
2960	347	"arg_2"	"decimal"	2	0	1	2
2961	348	"res_0"	"month_interval"	32	0	0	0
2962	348	"arg_1"	"month_interval"	32	0	1	1
2963	348	"arg_2"	"decimal"	2	0	1	2
2964	349	"res_0"	"sec_interval"	13	0	0	0
2965	349	"arg_1"	"sec_interval"	13	0	1	1
2966	349	"arg_2"	"decimal"	2	0	1	2
2967	350	"res_0"	"sec_interval"	13	0	0	0
2968	350	"arg_1"	"sec_interval"	13	0	1	1
2969	350	"arg_2"	"decimal"	2	0	1	2
2970	351	"res_0"	"sec_interval"	13	0	0	0
2971	351	"arg_1"	"sec_interval"	13	0	1	1
2972	351	"arg_2"	"decimal"	2	0	1	2
2973	352	"res_0"	"sec_interval"	13	0	0	0
2974	352	"arg_1"	"sec_interval"	13	0	1	1
2975	352	"arg_2"	"decimal"	2	0	1	2
2976	353	"res_0"	"decimal"	4	0	0	0
2977	353	"arg_1"	"decimal"	4	0	1	1
2978	353	"arg_2"	"decimal"	4	0	1	2
2979	354	"res_0"	"decimal"	4	0	0	0
2980	354	"arg_1"	"decimal"	4	0	1	1
2981	354	"arg_2"	"decimal"	4	0	1	2
2982	355	"res_0"	"decimal"	4	0	0	0
2983	355	"arg_1"	"decimal"	4	0	1	1
2984	355	"arg_2"	"decimal"	4	0	1	2
2985	356	"res_0"	"decimal"	4	0	0	0
2986	356	"arg_1"	"decimal"	4	0	1	1
2987	356	"arg_2"	"decimal"	4	0	1	2
2988	357	"res_0"	"decimal"	4	0	0	0
2989	357	"arg_1"	"decimal"	4	0	1	1
2990	357	"arg_2"	"decimal"	4	0	1	2
2991	358	"res_0"	"decimal"	4	0	0	0
2992	358	"arg_1"	"decimal"	4	0	1	1
2993	358	"arg_2"	"decimal"	4	0	1	2
2994	359	"res_0"	"decimal"	4	0	0	0
2995	359	"arg_1"	"decimal"	4	0	1	1
2996	359	"arg_2"	"decimal"	4	0	1	2
2997	360	"res_0"	"decimal"	4	0	0	0
2998	360	"arg_1"	"decimal"	4	0	1	1
2999	361	"res_0"	"decimal"	4	0	0	0
3000	361	"arg_1"	"decimal"	4	0	1	1
3001	361	"arg_2"	"int"	32	0	1	2
3002	362	"res_0"	"decimal"	4	0	0	0
3003	362	"arg_1"	"decimal"	4	0	1	1
3004	362	"arg_2"	"int"	32	0	1	2
3005	363	"res_0"	"decimal"	4	0	0	0
3006	363	"arg_1"	"decimal"	4	0	1	1
3007	364	"res_0"	"decimal"	4	0	0	0
3008	364	"arg_1"	"decimal"	4	0	1	1
3009	365	"res_0"	"tinyint"	8	0	0	0
3010	365	"arg_1"	"decimal"	4	0	1	1
3011	366	"res_0"	"decimal"	4	0	0	0
3012	366	"arg_1"	"decimal"	4	0	1	1
3013	366	"arg_2"	"smallint"	16	0	1	2
3014	367	"res_0"	"decimal"	4	0	0	0
3015	367	"arg_1"	"decimal"	4	0	1	1
3016	367	"arg_2"	"smallint"	16	0	1	2
3017	368	"res_0"	"month_interval"	32	0	0	0
3018	368	"arg_1"	"month_interval"	32	0	1	1
3019	368	"arg_2"	"decimal"	4	0	1	2
3020	369	"res_0"	"month_interval"	32	0	0	0
3021	369	"arg_1"	"month_interval"	32	0	1	1
3022	369	"arg_2"	"decimal"	4	0	1	2
3023	370	"res_0"	"month_interval"	32	0	0	0
3024	370	"arg_1"	"month_interval"	32	0	1	1
3025	370	"arg_2"	"decimal"	4	0	1	2
3026	371	"res_0"	"month_interval"	32	0	0	0
3027	371	"arg_1"	"month_interval"	32	0	1	1
3028	371	"arg_2"	"decimal"	4	0	1	2
3029	372	"res_0"	"sec_interval"	13	0	0	0
3030	372	"arg_1"	"sec_interval"	13	0	1	1
3031	372	"arg_2"	"decimal"	4	0	1	2
3032	373	"res_0"	"sec_interval"	13	0	0	0
3033	373	"arg_1"	"sec_interval"	13	0	1	1
3034	373	"arg_2"	"decimal"	4	0	1	2
3035	374	"res_0"	"sec_interval"	13	0	0	0
3036	374	"arg_1"	"sec_interval"	13	0	1	1
3037	374	"arg_2"	"decimal"	4	0	1	2
3038	375	"res_0"	"sec_interval"	13	0	0	0
3039	375	"arg_1"	"sec_interval"	13	0	1	1
3040	375	"arg_2"	"decimal"	4	0	1	2
3041	376	"res_0"	"decimal"	9	0	0	0
3042	376	"arg_1"	"decimal"	9	0	1	1
3043	376	"arg_2"	"decimal"	9	0	1	2
3044	377	"res_0"	"decimal"	9	0	0	0
3045	377	"arg_1"	"decimal"	9	0	1	1
3046	377	"arg_2"	"decimal"	9	0	1	2
3047	378	"res_0"	"decimal"	9	0	0	0
3048	378	"arg_1"	"decimal"	9	0	1	1
3049	378	"arg_2"	"decimal"	9	0	1	2
3050	379	"res_0"	"decimal"	9	0	0	0
3051	379	"arg_1"	"decimal"	9	0	1	1
3052	379	"arg_2"	"decimal"	9	0	1	2
3053	380	"res_0"	"decimal"	9	0	0	0
3054	380	"arg_1"	"decimal"	9	0	1	1
3055	380	"arg_2"	"decimal"	9	0	1	2
3056	381	"res_0"	"decimal"	9	0	0	0
3057	381	"arg_1"	"decimal"	9	0	1	1
3058	381	"arg_2"	"decimal"	9	0	1	2
3059	382	"res_0"	"decimal"	9	0	0	0
3060	382	"arg_1"	"decimal"	9	0	1	1
3061	382	"arg_2"	"decimal"	9	0	1	2
3062	383	"res_0"	"decimal"	9	0	0	0
3063	383	"arg_1"	"decimal"	9	0	1	1
3064	384	"res_0"	"decimal"	9	0	0	0
3065	384	"arg_1"	"decimal"	9	0	1	1
3066	384	"arg_2"	"int"	32	0	1	2
3067	385	"res_0"	"decimal"	9	0	0	0
3068	385	"arg_1"	"decimal"	9	0	1	1
3069	385	"arg_2"	"int"	32	0	1	2
3070	386	"res_0"	"decimal"	9	0	0	0
3071	386	"arg_1"	"decimal"	9	0	1	1
3072	387	"res_0"	"decimal"	9	0	0	0
3073	387	"arg_1"	"decimal"	9	0	1	1
3074	388	"res_0"	"tinyint"	8	0	0	0
3075	388	"arg_1"	"decimal"	9	0	1	1
3076	389	"res_0"	"decimal"	9	0	0	0
3077	389	"arg_1"	"decimal"	9	0	1	1
3078	389	"arg_2"	"int"	32	0	1	2
3079	390	"res_0"	"decimal"	9	0	0	0
3080	390	"arg_1"	"decimal"	9	0	1	1
3081	390	"arg_2"	"int"	32	0	1	2
3082	391	"res_0"	"month_interval"	32	0	0	0
3083	391	"arg_1"	"month_interval"	32	0	1	1
3084	391	"arg_2"	"decimal"	9	0	1	2
3085	392	"res_0"	"month_interval"	32	0	0	0
3086	392	"arg_1"	"month_interval"	32	0	1	1
3087	392	"arg_2"	"decimal"	9	0	1	2
3088	393	"res_0"	"month_interval"	32	0	0	0
3089	393	"arg_1"	"month_interval"	32	0	1	1
3090	393	"arg_2"	"decimal"	9	0	1	2
3091	394	"res_0"	"month_interval"	32	0	0	0
3092	394	"arg_1"	"month_interval"	32	0	1	1
3093	394	"arg_2"	"decimal"	9	0	1	2
3094	395	"res_0"	"sec_interval"	13	0	0	0
3095	395	"arg_1"	"sec_interval"	13	0	1	1
3096	395	"arg_2"	"decimal"	9	0	1	2
3097	396	"res_0"	"sec_interval"	13	0	0	0
3098	396	"arg_1"	"sec_interval"	13	0	1	1
3099	396	"arg_2"	"decimal"	9	0	1	2
3100	397	"res_0"	"sec_interval"	13	0	0	0
3101	397	"arg_1"	"sec_interval"	13	0	1	1
3102	397	"arg_2"	"decimal"	9	0	1	2
3103	398	"res_0"	"sec_interval"	13	0	0	0
3104	398	"arg_1"	"sec_interval"	13	0	1	1
3105	398	"arg_2"	"decimal"	9	0	1	2
3106	399	"res_0"	"decimal"	18	0	0	0
3107	399	"arg_1"	"decimal"	18	0	1	1
3108	399	"arg_2"	"decimal"	18	0	1	2
3109	400	"res_0"	"decimal"	18	0	0	0
3110	400	"arg_1"	"decimal"	18	0	1	1
3111	400	"arg_2"	"decimal"	18	0	1	2
3112	401	"res_0"	"decimal"	18	0	0	0
3113	401	"arg_1"	"decimal"	18	0	1	1
3114	401	"arg_2"	"decimal"	18	0	1	2
3115	402	"res_0"	"decimal"	18	0	0	0
3116	402	"arg_1"	"decimal"	18	0	1	1
3117	402	"arg_2"	"decimal"	18	0	1	2
3118	403	"res_0"	"decimal"	18	0	0	0
3119	403	"arg_1"	"decimal"	18	0	1	1
3120	403	"arg_2"	"decimal"	18	0	1	2
3121	404	"res_0"	"decimal"	18	0	0	0
3122	404	"arg_1"	"decimal"	18	0	1	1
3123	404	"arg_2"	"decimal"	18	0	1	2
3124	405	"res_0"	"decimal"	18	0	0	0
3125	405	"arg_1"	"decimal"	18	0	1	1
3126	405	"arg_2"	"decimal"	18	0	1	2
3127	406	"res_0"	"decimal"	18	0	0	0
3128	406	"arg_1"	"decimal"	18	0	1	1
3129	407	"res_0"	"decimal"	18	0	0	0
3130	407	"arg_1"	"decimal"	18	0	1	1
3131	407	"arg_2"	"int"	32	0	1	2
3132	408	"res_0"	"decimal"	18	0	0	0
3133	408	"arg_1"	"decimal"	18	0	1	1
3134	408	"arg_2"	"int"	32	0	1	2
3135	409	"res_0"	"decimal"	18	0	0	0
3136	409	"arg_1"	"decimal"	18	0	1	1
3137	410	"res_0"	"decimal"	18	0	0	0
3138	410	"arg_1"	"decimal"	18	0	1	1
3139	411	"res_0"	"tinyint"	8	0	0	0
3140	411	"arg_1"	"decimal"	18	0	1	1
3141	412	"res_0"	"decimal"	18	0	0	0
3142	412	"arg_1"	"decimal"	18	0	1	1
3143	412	"arg_2"	"bigint"	64	0	1	2
3144	413	"res_0"	"decimal"	18	0	0	0
3145	413	"arg_1"	"decimal"	18	0	1	1
3146	413	"arg_2"	"bigint"	64	0	1	2
3147	414	"res_0"	"month_interval"	32	0	0	0
3148	414	"arg_1"	"month_interval"	32	0	1	1
3149	414	"arg_2"	"decimal"	18	0	1	2
3150	415	"res_0"	"month_interval"	32	0	0	0
3151	415	"arg_1"	"month_interval"	32	0	1	1
3152	415	"arg_2"	"decimal"	18	0	1	2
3153	416	"res_0"	"month_interval"	32	0	0	0
3154	416	"arg_1"	"month_interval"	32	0	1	1
3155	416	"arg_2"	"decimal"	18	0	1	2
3156	417	"res_0"	"month_interval"	32	0	0	0
3157	417	"arg_1"	"month_interval"	32	0	1	1
3158	417	"arg_2"	"decimal"	18	0	1	2
3159	418	"res_0"	"sec_interval"	13	0	0	0
3160	418	"arg_1"	"sec_interval"	13	0	1	1
3161	418	"arg_2"	"decimal"	18	0	1	2
3162	419	"res_0"	"sec_interval"	13	0	0	0
3163	419	"arg_1"	"sec_interval"	13	0	1	1
3164	419	"arg_2"	"decimal"	18	0	1	2
3165	420	"res_0"	"sec_interval"	13	0	0	0
3166	420	"arg_1"	"sec_interval"	13	0	1	1
3167	420	"arg_2"	"decimal"	18	0	1	2
3168	421	"res_0"	"sec_interval"	13	0	0	0
3169	421	"arg_1"	"sec_interval"	13	0	1	1
3170	421	"arg_2"	"decimal"	18	0	1	2
3171	422	"res_0"	"decimal"	39	0	0	0
3172	422	"arg_1"	"decimal"	39	0	1	1
3173	422	"arg_2"	"decimal"	39	0	1	2
3174	423	"res_0"	"decimal"	39	0	0	0
3175	423	"arg_1"	"decimal"	39	0	1	1
3176	423	"arg_2"	"decimal"	39	0	1	2
3177	424	"res_0"	"decimal"	39	0	0	0
3178	424	"arg_1"	"decimal"	39	0	1	1
3179	424	"arg_2"	"decimal"	39	0	1	2
3180	425	"res_0"	"decimal"	39	0	0	0
3181	425	"arg_1"	"decimal"	39	0	1	1
3182	425	"arg_2"	"decimal"	39	0	1	2
3183	426	"res_0"	"decimal"	39	0	0	0
3184	426	"arg_1"	"decimal"	39	0	1	1
3185	426	"arg_2"	"decimal"	39	0	1	2
3186	427	"res_0"	"decimal"	39	0	0	0
3187	427	"arg_1"	"decimal"	39	0	1	1
3188	427	"arg_2"	"decimal"	39	0	1	2
3189	428	"res_0"	"decimal"	39	0	0	0
3190	428	"arg_1"	"decimal"	39	0	1	1
3191	428	"arg_2"	"decimal"	39	0	1	2
3192	429	"res_0"	"decimal"	39	0	0	0
3193	429	"arg_1"	"decimal"	39	0	1	1
3194	430	"res_0"	"decimal"	39	0	0	0
3195	430	"arg_1"	"decimal"	39	0	1	1
3196	430	"arg_2"	"int"	32	0	1	2
3197	431	"res_0"	"decimal"	39	0	0	0
3198	431	"arg_1"	"decimal"	39	0	1	1
3199	431	"arg_2"	"int"	32	0	1	2
3200	432	"res_0"	"decimal"	39	0	0	0
3201	432	"arg_1"	"decimal"	39	0	1	1
3202	433	"res_0"	"decimal"	39	0	0	0
3203	433	"arg_1"	"decimal"	39	0	1	1
3204	434	"res_0"	"tinyint"	8	0	0	0
3205	434	"arg_1"	"decimal"	39	0	1	1
3206	435	"res_0"	"decimal"	39	0	0	0
3207	435	"arg_1"	"decimal"	39	0	1	1
3208	435	"arg_2"	"hugeint"	128	0	1	2
3209	436	"res_0"	"decimal"	39	0	0	0
3210	436	"arg_1"	"decimal"	39	0	1	1
3211	436	"arg_2"	"hugeint"	128	0	1	2
3212	437	"res_0"	"month_interval"	32	0	0	0
3213	437	"arg_1"	"month_interval"	32	0	1	1
3214	437	"arg_2"	"decimal"	39	0	1	2
3215	438	"res_0"	"month_interval"	32	0	0	0
3216	438	"arg_1"	"month_interval"	32	0	1	1
3217	438	"arg_2"	"decimal"	39	0	1	2
3218	439	"res_0"	"month_interval"	32	0	0	0
3219	439	"arg_1"	"month_interval"	32	0	1	1
3220	439	"arg_2"	"decimal"	39	0	1	2
3221	440	"res_0"	"month_interval"	32	0	0	0
3222	440	"arg_1"	"month_interval"	32	0	1	1
3223	440	"arg_2"	"decimal"	39	0	1	2
3224	441	"res_0"	"sec_interval"	13	0	0	0
3225	441	"arg_1"	"sec_interval"	13	0	1	1
3226	441	"arg_2"	"decimal"	39	0	1	2
3227	442	"res_0"	"sec_interval"	13	0	0	0
3228	442	"arg_1"	"sec_interval"	13	0	1	1
3229	442	"arg_2"	"decimal"	39	0	1	2
3230	443	"res_0"	"sec_interval"	13	0	0	0
3231	443	"arg_1"	"sec_interval"	13	0	1	1
3232	443	"arg_2"	"decimal"	39	0	1	2
3233	444	"res_0"	"sec_interval"	13	0	0	0
3234	444	"arg_1"	"sec_interval"	13	0	1	1
3235	444	"arg_2"	"decimal"	39	0	1	2
3236	445	"res_0"	"real"	24	0	0	0
3237	445	"arg_1"	"real"	24	0	1	1
3238	445	"arg_2"	"real"	24	0	1	2
3239	446	"res_0"	"real"	24	0	0	0
3240	446	"arg_1"	"real"	24	0	1	1
3241	446	"arg_2"	"real"	24	0	1	2
3242	447	"res_0"	"real"	24	0	0	0
3243	447	"arg_1"	"real"	24	0	1	1
3244	447	"arg_2"	"real"	24	0	1	2
3245	448	"res_0"	"real"	24	0	0	0
3246	448	"arg_1"	"real"	24	0	1	1
3247	448	"arg_2"	"real"	24	0	1	2
3248	449	"res_0"	"real"	24	0	0	0
3249	449	"arg_1"	"real"	24	0	1	1
3250	450	"res_0"	"real"	24	0	0	0
3251	450	"arg_1"	"real"	24	0	1	1
3252	451	"res_0"	"tinyint"	8	0	0	0
3253	451	"arg_1"	"real"	24	0	1	1
3254	452	"res_0"	"real"	24	0	0	0
3255	452	"arg_1"	"real"	24	0	1	1
3256	452	"arg_2"	"real"	24	0	1	2
3257	453	"res_0"	"real"	24	0	0	0
3258	453	"arg_1"	"real"	24	0	1	1
3259	453	"arg_2"	"real"	24	0	1	2
3260	454	"res_0"	"month_interval"	32	0	0	0
3261	454	"arg_1"	"month_interval"	32	0	1	1
3262	454	"arg_2"	"real"	24	0	1	2
3263	455	"res_0"	"month_interval"	32	0	0	0
3264	455	"arg_1"	"month_interval"	32	0	1	1
3265	455	"arg_2"	"real"	24	0	1	2
3266	456	"res_0"	"month_interval"	32	0	0	0
3267	456	"arg_1"	"month_interval"	32	0	1	1
3268	456	"arg_2"	"real"	24	0	1	2
3269	457	"res_0"	"month_interval"	32	0	0	0
3270	457	"arg_1"	"month_interval"	32	0	1	1
3271	457	"arg_2"	"real"	24	0	1	2
3272	458	"res_0"	"sec_interval"	13	0	0	0
3273	458	"arg_1"	"sec_interval"	13	0	1	1
3274	458	"arg_2"	"real"	24	0	1	2
3275	459	"res_0"	"sec_interval"	13	0	0	0
3276	459	"arg_1"	"sec_interval"	13	0	1	1
3277	459	"arg_2"	"real"	24	0	1	2
3278	460	"res_0"	"sec_interval"	13	0	0	0
3279	460	"arg_1"	"sec_interval"	13	0	1	1
3280	460	"arg_2"	"real"	24	0	1	2
3281	461	"res_0"	"sec_interval"	13	0	0	0
3282	461	"arg_1"	"sec_interval"	13	0	1	1
3283	461	"arg_2"	"real"	24	0	1	2
3284	462	"res_0"	"double"	53	0	0	0
3285	462	"arg_1"	"double"	53	0	1	1
3286	462	"arg_2"	"double"	53	0	1	2
3287	463	"res_0"	"double"	53	0	0	0
3288	463	"arg_1"	"double"	53	0	1	1
3289	463	"arg_2"	"double"	53	0	1	2
3290	464	"res_0"	"double"	53	0	0	0
3291	464	"arg_1"	"double"	53	0	1	1
3292	464	"arg_2"	"double"	53	0	1	2
3293	465	"res_0"	"double"	53	0	0	0
3294	465	"arg_1"	"double"	53	0	1	1
3295	465	"arg_2"	"double"	53	0	1	2
3296	466	"res_0"	"double"	53	0	0	0
3297	466	"arg_1"	"double"	53	0	1	1
3298	467	"res_0"	"double"	53	0	0	0
3299	467	"arg_1"	"double"	53	0	1	1
3300	468	"res_0"	"tinyint"	8	0	0	0
3301	468	"arg_1"	"double"	53	0	1	1
3302	469	"res_0"	"double"	53	0	0	0
3303	469	"arg_1"	"double"	53	0	1	1
3304	469	"arg_2"	"double"	53	0	1	2
3305	470	"res_0"	"double"	53	0	0	0
3306	470	"arg_1"	"double"	53	0	1	1
3307	470	"arg_2"	"double"	53	0	1	2
3308	471	"res_0"	"month_interval"	32	0	0	0
3309	471	"arg_1"	"month_interval"	32	0	1	1
3310	471	"arg_2"	"double"	53	0	1	2
3311	472	"res_0"	"month_interval"	32	0	0	0
3312	472	"arg_1"	"month_interval"	32	0	1	1
3313	472	"arg_2"	"double"	53	0	1	2
3314	473	"res_0"	"month_interval"	32	0	0	0
3315	473	"arg_1"	"month_interval"	32	0	1	1
3316	473	"arg_2"	"double"	53	0	1	2
3317	474	"res_0"	"month_interval"	32	0	0	0
3318	474	"arg_1"	"month_interval"	32	0	1	1
3319	474	"arg_2"	"double"	53	0	1	2
3320	475	"res_0"	"sec_interval"	13	0	0	0
3321	475	"arg_1"	"sec_interval"	13	0	1	1
3322	475	"arg_2"	"double"	53	0	1	2
3323	476	"res_0"	"sec_interval"	13	0	0	0
3324	476	"arg_1"	"sec_interval"	13	0	1	1
3325	476	"arg_2"	"double"	53	0	1	2
3326	477	"res_0"	"sec_interval"	13	0	0	0
3327	477	"arg_1"	"sec_interval"	13	0	1	1
3328	477	"arg_2"	"double"	53	0	1	2
3329	478	"res_0"	"sec_interval"	13	0	0	0
3330	478	"arg_1"	"sec_interval"	13	0	1	1
3331	478	"arg_2"	"double"	53	0	1	2
3332	479	"res_0"	"month_interval"	32	0	0	0
3333	479	"arg_1"	"month_interval"	32	0	1	1
3334	479	"arg_2"	"month_interval"	32	0	1	2
3335	480	"res_0"	"month_interval"	32	0	0	0
3336	480	"arg_1"	"month_interval"	32	0	1	1
3337	480	"arg_2"	"month_interval"	32	0	1	2
3338	481	"res_0"	"month_interval"	32	0	0	0
3339	481	"arg_1"	"month_interval"	32	0	1	1
3340	481	"arg_2"	"month_interval"	32	0	1	2
3341	482	"res_0"	"month_interval"	32	0	0	0
3342	482	"arg_1"	"month_interval"	32	0	1	1
3343	482	"arg_2"	"month_interval"	32	0	1	2
3344	483	"res_0"	"month_interval"	32	0	0	0
3345	483	"arg_1"	"month_interval"	32	0	1	1
3346	484	"res_0"	"month_interval"	32	0	0	0
3347	484	"arg_1"	"month_interval"	32	0	1	1
3348	485	"res_0"	"tinyint"	8	0	0	0
3349	485	"arg_1"	"month_interval"	32	0	1	1
3350	486	"res_0"	"month_interval"	32	0	0	0
3351	486	"arg_1"	"month_interval"	32	0	1	1
3352	486	"arg_2"	"int"	32	0	1	2
3353	487	"res_0"	"month_interval"	32	0	0	0
3354	487	"arg_1"	"month_interval"	32	0	1	1
3355	487	"arg_2"	"int"	32	0	1	2
3356	488	"res_0"	"sec_interval"	13	0	0	0
3357	488	"arg_1"	"sec_interval"	13	0	1	1
3358	488	"arg_2"	"sec_interval"	13	0	1	2
3359	489	"res_0"	"sec_interval"	13	0	0	0
3360	489	"arg_1"	"sec_interval"	13	0	1	1
3361	489	"arg_2"	"sec_interval"	13	0	1	2
3362	490	"res_0"	"sec_interval"	13	0	0	0
3363	490	"arg_1"	"sec_interval"	13	0	1	1
3364	490	"arg_2"	"sec_interval"	13	0	1	2
3365	491	"res_0"	"sec_interval"	13	0	0	0
3366	491	"arg_1"	"sec_interval"	13	0	1	1
3367	491	"arg_2"	"sec_interval"	13	0	1	2
3368	492	"res_0"	"sec_interval"	13	0	0	0
3369	492	"arg_1"	"sec_interval"	13	0	1	1
3370	493	"res_0"	"sec_interval"	13	0	0	0
3371	493	"arg_1"	"sec_interval"	13	0	1	1
3372	494	"res_0"	"tinyint"	8	0	0	0
3373	494	"arg_1"	"sec_interval"	13	0	1	1
3374	495	"res_0"	"sec_interval"	13	0	0	0
3375	495	"arg_1"	"sec_interval"	13	0	1	1
3376	495	"arg_2"	"bigint"	64	0	1	2
3377	496	"res_0"	"sec_interval"	13	0	0	0
3378	496	"arg_1"	"sec_interval"	13	0	1	1
3379	496	"arg_2"	"bigint"	64	0	1	2
3380	497	"res_0"	"decimal"	4	0	0	0
3381	497	"arg_1"	"decimal"	4	0	1	1
3382	497	"arg_2"	"tinyint"	8	0	1	2
3383	498	"res_0"	"decimal"	4	0	0	0
3384	498	"arg_1"	"tinyint"	8	0	1	1
3385	498	"arg_2"	"decimal"	4	0	1	2
3386	499	"res_0"	"decimal"	4	0	0	0
3387	499	"arg_1"	"decimal"	4	0	1	1
3388	499	"arg_2"	"decimal"	2	0	1	2
3389	500	"res_0"	"decimal"	4	0	0	0
3390	500	"arg_1"	"decimal"	2	0	1	1
3391	500	"arg_2"	"decimal"	4	0	1	2
3392	501	"res_0"	"decimal"	9	0	0	0
3393	501	"arg_1"	"decimal"	9	0	1	1
3394	501	"arg_2"	"tinyint"	8	0	1	2
3395	502	"res_0"	"decimal"	9	0	0	0
3396	502	"arg_1"	"tinyint"	8	0	1	1
3397	502	"arg_2"	"decimal"	9	0	1	2
3398	503	"res_0"	"decimal"	9	0	0	0
3399	503	"arg_1"	"decimal"	9	0	1	1
3400	503	"arg_2"	"smallint"	16	0	1	2
3401	504	"res_0"	"decimal"	9	0	0	0
3402	504	"arg_1"	"smallint"	16	0	1	1
3403	504	"arg_2"	"decimal"	9	0	1	2
3404	505	"res_0"	"decimal"	9	0	0	0
3405	505	"arg_1"	"decimal"	9	0	1	1
3406	505	"arg_2"	"decimal"	2	0	1	2
3407	506	"res_0"	"decimal"	9	0	0	0
3408	506	"arg_1"	"decimal"	2	0	1	1
3409	506	"arg_2"	"decimal"	9	0	1	2
3410	507	"res_0"	"decimal"	9	0	0	0
3411	507	"arg_1"	"decimal"	9	0	1	1
3412	507	"arg_2"	"decimal"	4	0	1	2
3413	508	"res_0"	"decimal"	9	0	0	0
3414	508	"arg_1"	"decimal"	4	0	1	1
3415	508	"arg_2"	"decimal"	9	0	1	2
3416	509	"res_0"	"decimal"	18	0	0	0
3417	509	"arg_1"	"decimal"	18	0	1	1
3418	509	"arg_2"	"tinyint"	8	0	1	2
3419	510	"res_0"	"decimal"	18	0	0	0
3420	510	"arg_1"	"tinyint"	8	0	1	1
3421	510	"arg_2"	"decimal"	18	0	1	2
3422	511	"res_0"	"decimal"	18	0	0	0
3423	511	"arg_1"	"decimal"	18	0	1	1
3424	511	"arg_2"	"smallint"	16	0	1	2
3425	512	"res_0"	"decimal"	18	0	0	0
3426	512	"arg_1"	"smallint"	16	0	1	1
3427	512	"arg_2"	"decimal"	18	0	1	2
3428	513	"res_0"	"decimal"	18	0	0	0
3429	513	"arg_1"	"decimal"	18	0	1	1
3430	513	"arg_2"	"int"	32	0	1	2
3431	514	"res_0"	"decimal"	18	0	0	0
3432	514	"arg_1"	"int"	32	0	1	1
3433	514	"arg_2"	"decimal"	18	0	1	2
3434	515	"res_0"	"decimal"	18	0	0	0
3435	515	"arg_1"	"decimal"	18	0	1	1
3436	515	"arg_2"	"wrd"	64	0	1	2
3437	516	"res_0"	"decimal"	18	0	0	0
3438	516	"arg_1"	"wrd"	64	0	1	1
3439	516	"arg_2"	"decimal"	18	0	1	2
3440	517	"res_0"	"decimal"	18	0	0	0
3441	517	"arg_1"	"decimal"	18	0	1	1
3442	517	"arg_2"	"decimal"	2	0	1	2
3443	518	"res_0"	"decimal"	18	0	0	0
3444	518	"arg_1"	"decimal"	2	0	1	1
3445	518	"arg_2"	"decimal"	18	0	1	2
3446	519	"res_0"	"decimal"	18	0	0	0
3447	519	"arg_1"	"decimal"	18	0	1	1
3448	519	"arg_2"	"decimal"	4	0	1	2
3449	520	"res_0"	"decimal"	18	0	0	0
3450	520	"arg_1"	"decimal"	4	0	1	1
3451	520	"arg_2"	"decimal"	18	0	1	2
3452	521	"res_0"	"decimal"	18	0	0	0
3453	521	"arg_1"	"decimal"	18	0	1	1
3454	521	"arg_2"	"decimal"	9	0	1	2
3455	522	"res_0"	"decimal"	18	0	0	0
3456	522	"arg_1"	"decimal"	9	0	1	1
3457	522	"arg_2"	"decimal"	18	0	1	2
3458	523	"res_0"	"decimal"	39	0	0	0
3459	523	"arg_1"	"decimal"	39	0	1	1
3460	523	"arg_2"	"tinyint"	8	0	1	2
3461	524	"res_0"	"decimal"	39	0	0	0
3462	524	"arg_1"	"tinyint"	8	0	1	1
3463	524	"arg_2"	"decimal"	39	0	1	2
3464	525	"res_0"	"decimal"	39	0	0	0
3465	525	"arg_1"	"decimal"	39	0	1	1
3466	525	"arg_2"	"smallint"	16	0	1	2
3467	526	"res_0"	"decimal"	39	0	0	0
3468	526	"arg_1"	"smallint"	16	0	1	1
3469	526	"arg_2"	"decimal"	39	0	1	2
3470	527	"res_0"	"decimal"	39	0	0	0
3471	527	"arg_1"	"decimal"	39	0	1	1
3472	527	"arg_2"	"int"	32	0	1	2
3473	528	"res_0"	"decimal"	39	0	0	0
3474	528	"arg_1"	"int"	32	0	1	1
3475	528	"arg_2"	"decimal"	39	0	1	2
3476	529	"res_0"	"decimal"	39	0	0	0
3477	529	"arg_1"	"decimal"	39	0	1	1
3478	529	"arg_2"	"bigint"	64	0	1	2
3479	530	"res_0"	"decimal"	39	0	0	0
3480	530	"arg_1"	"bigint"	64	0	1	1
3481	530	"arg_2"	"decimal"	39	0	1	2
3482	531	"res_0"	"decimal"	39	0	0	0
3483	531	"arg_1"	"decimal"	39	0	1	1
3484	531	"arg_2"	"wrd"	64	0	1	2
3485	532	"res_0"	"decimal"	39	0	0	0
3486	532	"arg_1"	"wrd"	64	0	1	1
3487	532	"arg_2"	"decimal"	39	0	1	2
3488	533	"res_0"	"decimal"	39	0	0	0
3489	533	"arg_1"	"decimal"	39	0	1	1
3490	533	"arg_2"	"decimal"	2	0	1	2
3491	534	"res_0"	"decimal"	39	0	0	0
3492	534	"arg_1"	"decimal"	2	0	1	1
3493	534	"arg_2"	"decimal"	39	0	1	2
3494	535	"res_0"	"decimal"	39	0	0	0
3495	535	"arg_1"	"decimal"	39	0	1	1
3496	535	"arg_2"	"decimal"	4	0	1	2
3497	536	"res_0"	"decimal"	39	0	0	0
3498	536	"arg_1"	"decimal"	4	0	1	1
3499	536	"arg_2"	"decimal"	39	0	1	2
3500	537	"res_0"	"decimal"	39	0	0	0
3501	537	"arg_1"	"decimal"	39	0	1	1
3502	537	"arg_2"	"decimal"	9	0	1	2
3503	538	"res_0"	"decimal"	39	0	0	0
3504	538	"arg_1"	"decimal"	9	0	1	1
3505	538	"arg_2"	"decimal"	39	0	1	2
3506	539	"res_0"	"decimal"	39	0	0	0
3507	539	"arg_1"	"decimal"	39	0	1	1
3508	539	"arg_2"	"decimal"	18	0	1	2
3509	540	"res_0"	"decimal"	39	0	0	0
3510	540	"arg_1"	"decimal"	18	0	1	1
3511	540	"arg_2"	"decimal"	39	0	1	2
3512	541	"res_0"	"decimal"	2	0	0	0
3513	541	"arg_1"	"decimal"	2	0	1	1
3514	541	"arg_2"	"tinyint"	8	0	1	2
3515	542	"res_0"	"decimal"	4	0	0	0
3516	542	"arg_1"	"decimal"	4	0	1	1
3517	542	"arg_2"	"tinyint"	8	0	1	2
3518	543	"res_0"	"decimal"	9	0	0	0
3519	543	"arg_1"	"decimal"	9	0	1	1
3520	543	"arg_2"	"tinyint"	8	0	1	2
3521	544	"res_0"	"decimal"	18	0	0	0
3522	544	"arg_1"	"decimal"	18	0	1	1
3523	544	"arg_2"	"tinyint"	8	0	1	2
3524	545	"res_0"	"decimal"	39	0	0	0
3525	545	"arg_1"	"decimal"	39	0	1	1
3526	545	"arg_2"	"tinyint"	8	0	1	2
3527	546	"res_0"	"real"	24	0	0	0
3528	546	"arg_1"	"real"	24	0	1	1
3529	546	"arg_2"	"tinyint"	8	0	1	2
3530	547	"res_0"	"double"	53	0	0	0
3531	547	"arg_1"	"double"	53	0	1	1
3532	547	"arg_2"	"tinyint"	8	0	1	2
3533	548	"res_0"	"oid"	63	0	0	0
3534	548	"arg_1"	"oid"	63	0	1	1
3535	548	"arg_2"	"oid"	63	0	1	2
3536	549	"res_0"	"oid"	63	0	0	0
3537	549	"arg_1"	"tinyint"	8	0	1	1
3538	549	"arg_2"	"oid"	63	0	1	2
3539	550	"res_0"	"oid"	63	0	0	0
3540	550	"arg_1"	"smallint"	16	0	1	1
3541	550	"arg_2"	"oid"	63	0	1	2
3542	551	"res_0"	"oid"	63	0	0	0
3543	551	"arg_1"	"int"	32	0	1	1
3544	551	"arg_2"	"oid"	63	0	1	2
3545	552	"res_0"	"oid"	63	0	0	0
3546	552	"arg_1"	"bigint"	64	0	1	1
3547	552	"arg_2"	"oid"	63	0	1	2
3548	553	"res_0"	"oid"	63	0	0	0
3549	553	"arg_1"	"wrd"	64	0	1	1
3550	553	"arg_2"	"oid"	63	0	1	2
3551	554	"res_0"	"oid"	63	0	0	0
3552	554	"arg_1"	"hugeint"	128	0	1	1
3553	554	"arg_2"	"oid"	63	0	1	2
3554	555	"res_0"	"oid"	63	0	0	0
3555	555	"arg_1"	"decimal"	2	0	1	1
3556	555	"arg_2"	"oid"	63	0	1	2
3557	556	"res_0"	"oid"	63	0	0	0
3558	556	"arg_1"	"decimal"	4	0	1	1
3559	556	"arg_2"	"oid"	63	0	1	2
3560	557	"res_0"	"oid"	63	0	0	0
3561	557	"arg_1"	"decimal"	9	0	1	1
3562	557	"arg_2"	"oid"	63	0	1	2
3563	558	"res_0"	"oid"	63	0	0	0
3564	558	"arg_1"	"decimal"	18	0	1	1
3565	558	"arg_2"	"oid"	63	0	1	2
3566	559	"res_0"	"oid"	63	0	0	0
3567	559	"arg_1"	"decimal"	39	0	1	1
3568	559	"arg_2"	"oid"	63	0	1	2
3569	560	"res_0"	"oid"	63	0	0	0
3570	560	"arg_1"	"real"	24	0	1	1
3571	560	"arg_2"	"oid"	63	0	1	2
3572	561	"res_0"	"oid"	63	0	0	0
3573	561	"arg_1"	"double"	53	0	1	1
3574	561	"arg_2"	"oid"	63	0	1	2
3575	562	"res_0"	"oid"	63	0	0	0
3576	562	"arg_1"	"month_interval"	32	0	1	1
3577	562	"arg_2"	"oid"	63	0	1	2
3578	563	"res_0"	"oid"	63	0	0	0
3579	563	"arg_1"	"sec_interval"	13	0	1	1
3580	563	"arg_2"	"oid"	63	0	1	2
3581	564	"res_0"	"oid"	63	0	0	0
3582	564	"arg_1"	"time"	7	0	1	1
3583	564	"arg_2"	"oid"	63	0	1	2
3584	565	"res_0"	"oid"	63	0	0	0
3585	565	"arg_1"	"timetz"	7	0	1	1
3586	565	"arg_2"	"oid"	63	0	1	2
3587	566	"res_0"	"oid"	63	0	0	0
3588	566	"arg_1"	"date"	0	0	1	1
3589	566	"arg_2"	"oid"	63	0	1	2
3590	567	"res_0"	"oid"	63	0	0	0
3591	567	"arg_1"	"timestamp"	7	0	1	1
3592	567	"arg_2"	"oid"	63	0	1	2
3593	568	"res_0"	"oid"	63	0	0	0
3594	568	"arg_1"	"timestamptz"	7	0	1	1
3595	568	"arg_2"	"oid"	63	0	1	2
3596	569	"res_0"	"oid"	63	0	0	0
3597	569	"arg_1"	"blob"	0	0	1	1
3598	569	"arg_2"	"oid"	63	0	1	2
3599	570	"res_0"	"oid"	63	0	0	0
3600	570	"arg_1"	"geometry"	0	0	1	1
3601	570	"arg_2"	"oid"	63	0	1	2
3602	571	"res_0"	"oid"	63	0	0	0
3603	571	"arg_1"	"geometrya"	0	0	1	1
3604	571	"arg_2"	"oid"	63	0	1	2
3605	572	"res_0"	"oid"	63	0	0	0
3606	572	"arg_1"	"mbr"	0	0	1	1
3607	572	"arg_2"	"oid"	63	0	1	2
3608	573	"res_0"	"tinyint"	8	0	0	0
3609	573	"arg_1"	"oid"	63	0	1	1
3610	573	"arg_2"	"tinyint"	8	0	1	2
3611	574	"res_0"	"tinyint"	8	0	0	0
3612	574	"arg_1"	"tinyint"	8	0	1	1
3613	574	"arg_2"	"tinyint"	8	0	1	2
3614	575	"res_0"	"tinyint"	8	0	0	0
3615	575	"arg_1"	"smallint"	16	0	1	1
3616	575	"arg_2"	"tinyint"	8	0	1	2
3617	576	"res_0"	"tinyint"	8	0	0	0
3618	576	"arg_1"	"int"	32	0	1	1
3619	576	"arg_2"	"tinyint"	8	0	1	2
3620	577	"res_0"	"tinyint"	8	0	0	0
3621	577	"arg_1"	"bigint"	64	0	1	1
3622	577	"arg_2"	"tinyint"	8	0	1	2
3623	578	"res_0"	"tinyint"	8	0	0	0
3624	578	"arg_1"	"wrd"	64	0	1	1
3625	578	"arg_2"	"tinyint"	8	0	1	2
3626	579	"res_0"	"tinyint"	8	0	0	0
3627	579	"arg_1"	"hugeint"	128	0	1	1
3628	579	"arg_2"	"tinyint"	8	0	1	2
3629	580	"res_0"	"tinyint"	8	0	0	0
3630	580	"arg_1"	"decimal"	2	0	1	1
3631	580	"arg_2"	"tinyint"	8	0	1	2
3632	581	"res_0"	"tinyint"	8	0	0	0
3633	581	"arg_1"	"decimal"	4	0	1	1
3634	581	"arg_2"	"tinyint"	8	0	1	2
3635	582	"res_0"	"tinyint"	8	0	0	0
3636	582	"arg_1"	"decimal"	9	0	1	1
3637	582	"arg_2"	"tinyint"	8	0	1	2
3638	583	"res_0"	"tinyint"	8	0	0	0
3639	583	"arg_1"	"decimal"	18	0	1	1
3640	583	"arg_2"	"tinyint"	8	0	1	2
3641	584	"res_0"	"tinyint"	8	0	0	0
3642	584	"arg_1"	"decimal"	39	0	1	1
3643	584	"arg_2"	"tinyint"	8	0	1	2
3644	585	"res_0"	"tinyint"	8	0	0	0
3645	585	"arg_1"	"real"	24	0	1	1
3646	585	"arg_2"	"tinyint"	8	0	1	2
3647	586	"res_0"	"tinyint"	8	0	0	0
3648	586	"arg_1"	"double"	53	0	1	1
3649	586	"arg_2"	"tinyint"	8	0	1	2
3650	587	"res_0"	"tinyint"	8	0	0	0
3651	587	"arg_1"	"month_interval"	32	0	1	1
3652	587	"arg_2"	"tinyint"	8	0	1	2
3653	588	"res_0"	"tinyint"	8	0	0	0
3654	588	"arg_1"	"sec_interval"	13	0	1	1
3655	588	"arg_2"	"tinyint"	8	0	1	2
3656	589	"res_0"	"tinyint"	8	0	0	0
3657	589	"arg_1"	"time"	7	0	1	1
3658	589	"arg_2"	"tinyint"	8	0	1	2
3659	590	"res_0"	"tinyint"	8	0	0	0
3660	590	"arg_1"	"timetz"	7	0	1	1
3661	590	"arg_2"	"tinyint"	8	0	1	2
3662	591	"res_0"	"tinyint"	8	0	0	0
3663	591	"arg_1"	"date"	0	0	1	1
3664	591	"arg_2"	"tinyint"	8	0	1	2
3665	592	"res_0"	"tinyint"	8	0	0	0
3666	592	"arg_1"	"timestamp"	7	0	1	1
3667	592	"arg_2"	"tinyint"	8	0	1	2
3668	593	"res_0"	"tinyint"	8	0	0	0
3669	593	"arg_1"	"timestamptz"	7	0	1	1
3670	593	"arg_2"	"tinyint"	8	0	1	2
3671	594	"res_0"	"tinyint"	8	0	0	0
3672	594	"arg_1"	"blob"	0	0	1	1
3673	594	"arg_2"	"tinyint"	8	0	1	2
3674	595	"res_0"	"tinyint"	8	0	0	0
3675	595	"arg_1"	"geometry"	0	0	1	1
3676	595	"arg_2"	"tinyint"	8	0	1	2
3677	596	"res_0"	"tinyint"	8	0	0	0
3678	596	"arg_1"	"geometrya"	0	0	1	1
3679	596	"arg_2"	"tinyint"	8	0	1	2
3680	597	"res_0"	"tinyint"	8	0	0	0
3681	597	"arg_1"	"mbr"	0	0	1	1
3682	597	"arg_2"	"tinyint"	8	0	1	2
3683	598	"res_0"	"smallint"	16	0	0	0
3684	598	"arg_1"	"oid"	63	0	1	1
3685	598	"arg_2"	"smallint"	16	0	1	2
3686	599	"res_0"	"smallint"	16	0	0	0
3687	599	"arg_1"	"tinyint"	8	0	1	1
3688	599	"arg_2"	"smallint"	16	0	1	2
3689	600	"res_0"	"smallint"	16	0	0	0
3690	600	"arg_1"	"smallint"	16	0	1	1
3691	600	"arg_2"	"smallint"	16	0	1	2
3692	601	"res_0"	"smallint"	16	0	0	0
3693	601	"arg_1"	"int"	32	0	1	1
3694	601	"arg_2"	"smallint"	16	0	1	2
3695	602	"res_0"	"smallint"	16	0	0	0
3696	602	"arg_1"	"bigint"	64	0	1	1
3697	602	"arg_2"	"smallint"	16	0	1	2
3698	603	"res_0"	"smallint"	16	0	0	0
3699	603	"arg_1"	"wrd"	64	0	1	1
3700	603	"arg_2"	"smallint"	16	0	1	2
3701	604	"res_0"	"smallint"	16	0	0	0
3702	604	"arg_1"	"hugeint"	128	0	1	1
3703	604	"arg_2"	"smallint"	16	0	1	2
3704	605	"res_0"	"smallint"	16	0	0	0
3705	605	"arg_1"	"decimal"	2	0	1	1
3706	605	"arg_2"	"smallint"	16	0	1	2
3707	606	"res_0"	"smallint"	16	0	0	0
3708	606	"arg_1"	"decimal"	4	0	1	1
3709	606	"arg_2"	"smallint"	16	0	1	2
3710	607	"res_0"	"smallint"	16	0	0	0
3711	607	"arg_1"	"decimal"	9	0	1	1
3712	607	"arg_2"	"smallint"	16	0	1	2
3713	608	"res_0"	"smallint"	16	0	0	0
3714	608	"arg_1"	"decimal"	18	0	1	1
3715	608	"arg_2"	"smallint"	16	0	1	2
3716	609	"res_0"	"smallint"	16	0	0	0
3717	609	"arg_1"	"decimal"	39	0	1	1
3718	609	"arg_2"	"smallint"	16	0	1	2
3719	610	"res_0"	"smallint"	16	0	0	0
3720	610	"arg_1"	"real"	24	0	1	1
3721	610	"arg_2"	"smallint"	16	0	1	2
3722	611	"res_0"	"smallint"	16	0	0	0
3723	611	"arg_1"	"double"	53	0	1	1
3724	611	"arg_2"	"smallint"	16	0	1	2
3725	612	"res_0"	"smallint"	16	0	0	0
3726	612	"arg_1"	"month_interval"	32	0	1	1
3727	612	"arg_2"	"smallint"	16	0	1	2
3728	613	"res_0"	"smallint"	16	0	0	0
3729	613	"arg_1"	"sec_interval"	13	0	1	1
3730	613	"arg_2"	"smallint"	16	0	1	2
3731	614	"res_0"	"smallint"	16	0	0	0
3732	614	"arg_1"	"time"	7	0	1	1
3733	614	"arg_2"	"smallint"	16	0	1	2
3734	615	"res_0"	"smallint"	16	0	0	0
3735	615	"arg_1"	"timetz"	7	0	1	1
3736	615	"arg_2"	"smallint"	16	0	1	2
3737	616	"res_0"	"smallint"	16	0	0	0
3738	616	"arg_1"	"date"	0	0	1	1
3739	616	"arg_2"	"smallint"	16	0	1	2
3740	617	"res_0"	"smallint"	16	0	0	0
3741	617	"arg_1"	"timestamp"	7	0	1	1
3742	617	"arg_2"	"smallint"	16	0	1	2
3743	618	"res_0"	"smallint"	16	0	0	0
3744	618	"arg_1"	"timestamptz"	7	0	1	1
3745	618	"arg_2"	"smallint"	16	0	1	2
3746	619	"res_0"	"smallint"	16	0	0	0
3747	619	"arg_1"	"blob"	0	0	1	1
3748	619	"arg_2"	"smallint"	16	0	1	2
3749	620	"res_0"	"smallint"	16	0	0	0
3750	620	"arg_1"	"geometry"	0	0	1	1
3751	620	"arg_2"	"smallint"	16	0	1	2
3752	621	"res_0"	"smallint"	16	0	0	0
3753	621	"arg_1"	"geometrya"	0	0	1	1
3754	621	"arg_2"	"smallint"	16	0	1	2
3755	622	"res_0"	"smallint"	16	0	0	0
3756	622	"arg_1"	"mbr"	0	0	1	1
3757	622	"arg_2"	"smallint"	16	0	1	2
3758	623	"res_0"	"int"	32	0	0	0
3759	623	"arg_1"	"oid"	63	0	1	1
3760	623	"arg_2"	"int"	32	0	1	2
3761	624	"res_0"	"int"	32	0	0	0
3762	624	"arg_1"	"tinyint"	8	0	1	1
3763	624	"arg_2"	"int"	32	0	1	2
3764	625	"res_0"	"int"	32	0	0	0
3765	625	"arg_1"	"smallint"	16	0	1	1
3766	625	"arg_2"	"int"	32	0	1	2
3767	626	"res_0"	"int"	32	0	0	0
3768	626	"arg_1"	"int"	32	0	1	1
3769	626	"arg_2"	"int"	32	0	1	2
3770	627	"res_0"	"int"	32	0	0	0
3771	627	"arg_1"	"bigint"	64	0	1	1
3772	627	"arg_2"	"int"	32	0	1	2
3773	628	"res_0"	"int"	32	0	0	0
3774	628	"arg_1"	"wrd"	64	0	1	1
3775	628	"arg_2"	"int"	32	0	1	2
3776	629	"res_0"	"int"	32	0	0	0
3777	629	"arg_1"	"hugeint"	128	0	1	1
3778	629	"arg_2"	"int"	32	0	1	2
3779	630	"res_0"	"int"	32	0	0	0
3780	630	"arg_1"	"decimal"	2	0	1	1
3781	630	"arg_2"	"int"	32	0	1	2
3782	631	"res_0"	"int"	32	0	0	0
3783	631	"arg_1"	"decimal"	4	0	1	1
3784	631	"arg_2"	"int"	32	0	1	2
3785	632	"res_0"	"int"	32	0	0	0
3786	632	"arg_1"	"decimal"	9	0	1	1
3787	632	"arg_2"	"int"	32	0	1	2
3788	633	"res_0"	"int"	32	0	0	0
3789	633	"arg_1"	"decimal"	18	0	1	1
3790	633	"arg_2"	"int"	32	0	1	2
3791	634	"res_0"	"int"	32	0	0	0
3792	634	"arg_1"	"decimal"	39	0	1	1
3793	634	"arg_2"	"int"	32	0	1	2
3794	635	"res_0"	"int"	32	0	0	0
3795	635	"arg_1"	"real"	24	0	1	1
3796	635	"arg_2"	"int"	32	0	1	2
3797	636	"res_0"	"int"	32	0	0	0
3798	636	"arg_1"	"double"	53	0	1	1
3799	636	"arg_2"	"int"	32	0	1	2
3800	637	"res_0"	"int"	32	0	0	0
3801	637	"arg_1"	"month_interval"	32	0	1	1
3802	637	"arg_2"	"int"	32	0	1	2
3803	638	"res_0"	"int"	32	0	0	0
3804	638	"arg_1"	"sec_interval"	13	0	1	1
3805	638	"arg_2"	"int"	32	0	1	2
3806	639	"res_0"	"int"	32	0	0	0
3807	639	"arg_1"	"time"	7	0	1	1
3808	639	"arg_2"	"int"	32	0	1	2
3809	640	"res_0"	"int"	32	0	0	0
3810	640	"arg_1"	"timetz"	7	0	1	1
3811	640	"arg_2"	"int"	32	0	1	2
3812	641	"res_0"	"int"	32	0	0	0
3813	641	"arg_1"	"date"	0	0	1	1
3814	641	"arg_2"	"int"	32	0	1	2
3815	642	"res_0"	"int"	32	0	0	0
3816	642	"arg_1"	"timestamp"	7	0	1	1
3817	642	"arg_2"	"int"	32	0	1	2
3818	643	"res_0"	"int"	32	0	0	0
3819	643	"arg_1"	"timestamptz"	7	0	1	1
3820	643	"arg_2"	"int"	32	0	1	2
3821	644	"res_0"	"int"	32	0	0	0
3822	644	"arg_1"	"blob"	0	0	1	1
3823	644	"arg_2"	"int"	32	0	1	2
3824	645	"res_0"	"int"	32	0	0	0
3825	645	"arg_1"	"geometry"	0	0	1	1
3826	645	"arg_2"	"int"	32	0	1	2
3827	646	"res_0"	"int"	32	0	0	0
3828	646	"arg_1"	"geometrya"	0	0	1	1
3829	646	"arg_2"	"int"	32	0	1	2
3830	647	"res_0"	"int"	32	0	0	0
3831	647	"arg_1"	"mbr"	0	0	1	1
3832	647	"arg_2"	"int"	32	0	1	2
3833	648	"res_0"	"bigint"	64	0	0	0
3834	648	"arg_1"	"oid"	63	0	1	1
3835	648	"arg_2"	"bigint"	64	0	1	2
3836	649	"res_0"	"bigint"	64	0	0	0
3837	649	"arg_1"	"tinyint"	8	0	1	1
3838	649	"arg_2"	"bigint"	64	0	1	2
3839	650	"res_0"	"bigint"	64	0	0	0
3840	650	"arg_1"	"smallint"	16	0	1	1
3841	650	"arg_2"	"bigint"	64	0	1	2
3842	651	"res_0"	"bigint"	64	0	0	0
3843	651	"arg_1"	"int"	32	0	1	1
3844	651	"arg_2"	"bigint"	64	0	1	2
3845	652	"res_0"	"bigint"	64	0	0	0
3846	652	"arg_1"	"bigint"	64	0	1	1
3847	652	"arg_2"	"bigint"	64	0	1	2
3848	653	"res_0"	"bigint"	64	0	0	0
3849	653	"arg_1"	"wrd"	64	0	1	1
3850	653	"arg_2"	"bigint"	64	0	1	2
3851	654	"res_0"	"bigint"	64	0	0	0
3852	654	"arg_1"	"hugeint"	128	0	1	1
3853	654	"arg_2"	"bigint"	64	0	1	2
3854	655	"res_0"	"bigint"	64	0	0	0
3855	655	"arg_1"	"decimal"	2	0	1	1
3856	655	"arg_2"	"bigint"	64	0	1	2
3857	656	"res_0"	"bigint"	64	0	0	0
3858	656	"arg_1"	"decimal"	4	0	1	1
3859	656	"arg_2"	"bigint"	64	0	1	2
3860	657	"res_0"	"bigint"	64	0	0	0
3861	657	"arg_1"	"decimal"	9	0	1	1
3862	657	"arg_2"	"bigint"	64	0	1	2
3863	658	"res_0"	"bigint"	64	0	0	0
3864	658	"arg_1"	"decimal"	18	0	1	1
3865	658	"arg_2"	"bigint"	64	0	1	2
3866	659	"res_0"	"bigint"	64	0	0	0
3867	659	"arg_1"	"decimal"	39	0	1	1
3868	659	"arg_2"	"bigint"	64	0	1	2
3869	660	"res_0"	"bigint"	64	0	0	0
3870	660	"arg_1"	"real"	24	0	1	1
3871	660	"arg_2"	"bigint"	64	0	1	2
3872	661	"res_0"	"bigint"	64	0	0	0
3873	661	"arg_1"	"double"	53	0	1	1
3874	661	"arg_2"	"bigint"	64	0	1	2
3875	662	"res_0"	"bigint"	64	0	0	0
3876	662	"arg_1"	"month_interval"	32	0	1	1
3877	662	"arg_2"	"bigint"	64	0	1	2
3878	663	"res_0"	"bigint"	64	0	0	0
3879	663	"arg_1"	"sec_interval"	13	0	1	1
3880	663	"arg_2"	"bigint"	64	0	1	2
3881	664	"res_0"	"bigint"	64	0	0	0
3882	664	"arg_1"	"time"	7	0	1	1
3883	664	"arg_2"	"bigint"	64	0	1	2
3884	665	"res_0"	"bigint"	64	0	0	0
3885	665	"arg_1"	"timetz"	7	0	1	1
3886	665	"arg_2"	"bigint"	64	0	1	2
3887	666	"res_0"	"bigint"	64	0	0	0
3888	666	"arg_1"	"date"	0	0	1	1
3889	666	"arg_2"	"bigint"	64	0	1	2
3890	667	"res_0"	"bigint"	64	0	0	0
3891	667	"arg_1"	"timestamp"	7	0	1	1
3892	667	"arg_2"	"bigint"	64	0	1	2
3893	668	"res_0"	"bigint"	64	0	0	0
3894	668	"arg_1"	"timestamptz"	7	0	1	1
3895	668	"arg_2"	"bigint"	64	0	1	2
3896	669	"res_0"	"bigint"	64	0	0	0
3897	669	"arg_1"	"blob"	0	0	1	1
3898	669	"arg_2"	"bigint"	64	0	1	2
3899	670	"res_0"	"bigint"	64	0	0	0
3900	670	"arg_1"	"geometry"	0	0	1	1
3901	670	"arg_2"	"bigint"	64	0	1	2
3902	671	"res_0"	"bigint"	64	0	0	0
3903	671	"arg_1"	"geometrya"	0	0	1	1
3904	671	"arg_2"	"bigint"	64	0	1	2
3905	672	"res_0"	"bigint"	64	0	0	0
3906	672	"arg_1"	"mbr"	0	0	1	1
3907	672	"arg_2"	"bigint"	64	0	1	2
3908	673	"res_0"	"wrd"	64	0	0	0
3909	673	"arg_1"	"oid"	63	0	1	1
3910	673	"arg_2"	"wrd"	64	0	1	2
3911	674	"res_0"	"wrd"	64	0	0	0
3912	674	"arg_1"	"tinyint"	8	0	1	1
3913	674	"arg_2"	"wrd"	64	0	1	2
3914	675	"res_0"	"wrd"	64	0	0	0
3915	675	"arg_1"	"smallint"	16	0	1	1
3916	675	"arg_2"	"wrd"	64	0	1	2
3917	676	"res_0"	"wrd"	64	0	0	0
3918	676	"arg_1"	"int"	32	0	1	1
3919	676	"arg_2"	"wrd"	64	0	1	2
3920	677	"res_0"	"wrd"	64	0	0	0
3921	677	"arg_1"	"bigint"	64	0	1	1
3922	677	"arg_2"	"wrd"	64	0	1	2
3923	678	"res_0"	"wrd"	64	0	0	0
3924	678	"arg_1"	"wrd"	64	0	1	1
3925	678	"arg_2"	"wrd"	64	0	1	2
3926	679	"res_0"	"wrd"	64	0	0	0
3927	679	"arg_1"	"hugeint"	128	0	1	1
3928	679	"arg_2"	"wrd"	64	0	1	2
3929	680	"res_0"	"wrd"	64	0	0	0
3930	680	"arg_1"	"decimal"	2	0	1	1
3931	680	"arg_2"	"wrd"	64	0	1	2
3932	681	"res_0"	"wrd"	64	0	0	0
3933	681	"arg_1"	"decimal"	4	0	1	1
3934	681	"arg_2"	"wrd"	64	0	1	2
3935	682	"res_0"	"wrd"	64	0	0	0
3936	682	"arg_1"	"decimal"	9	0	1	1
3937	682	"arg_2"	"wrd"	64	0	1	2
3938	683	"res_0"	"wrd"	64	0	0	0
3939	683	"arg_1"	"decimal"	18	0	1	1
3940	683	"arg_2"	"wrd"	64	0	1	2
3941	684	"res_0"	"wrd"	64	0	0	0
3942	684	"arg_1"	"decimal"	39	0	1	1
3943	684	"arg_2"	"wrd"	64	0	1	2
3944	685	"res_0"	"wrd"	64	0	0	0
3945	685	"arg_1"	"real"	24	0	1	1
3946	685	"arg_2"	"wrd"	64	0	1	2
3947	686	"res_0"	"wrd"	64	0	0	0
3948	686	"arg_1"	"double"	53	0	1	1
3949	686	"arg_2"	"wrd"	64	0	1	2
3950	687	"res_0"	"wrd"	64	0	0	0
3951	687	"arg_1"	"month_interval"	32	0	1	1
3952	687	"arg_2"	"wrd"	64	0	1	2
3953	688	"res_0"	"wrd"	64	0	0	0
3954	688	"arg_1"	"sec_interval"	13	0	1	1
3955	688	"arg_2"	"wrd"	64	0	1	2
3956	689	"res_0"	"wrd"	64	0	0	0
3957	689	"arg_1"	"time"	7	0	1	1
3958	689	"arg_2"	"wrd"	64	0	1	2
3959	690	"res_0"	"wrd"	64	0	0	0
3960	690	"arg_1"	"timetz"	7	0	1	1
3961	690	"arg_2"	"wrd"	64	0	1	2
3962	691	"res_0"	"wrd"	64	0	0	0
3963	691	"arg_1"	"date"	0	0	1	1
3964	691	"arg_2"	"wrd"	64	0	1	2
3965	692	"res_0"	"wrd"	64	0	0	0
3966	692	"arg_1"	"timestamp"	7	0	1	1
3967	692	"arg_2"	"wrd"	64	0	1	2
3968	693	"res_0"	"wrd"	64	0	0	0
3969	693	"arg_1"	"timestamptz"	7	0	1	1
3970	693	"arg_2"	"wrd"	64	0	1	2
3971	694	"res_0"	"wrd"	64	0	0	0
3972	694	"arg_1"	"blob"	0	0	1	1
3973	694	"arg_2"	"wrd"	64	0	1	2
3974	695	"res_0"	"wrd"	64	0	0	0
3975	695	"arg_1"	"geometry"	0	0	1	1
3976	695	"arg_2"	"wrd"	64	0	1	2
3977	696	"res_0"	"wrd"	64	0	0	0
3978	696	"arg_1"	"geometrya"	0	0	1	1
3979	696	"arg_2"	"wrd"	64	0	1	2
3980	697	"res_0"	"wrd"	64	0	0	0
3981	697	"arg_1"	"mbr"	0	0	1	1
3982	697	"arg_2"	"wrd"	64	0	1	2
3983	698	"res_0"	"hugeint"	128	0	0	0
3984	698	"arg_1"	"oid"	63	0	1	1
3985	698	"arg_2"	"hugeint"	128	0	1	2
3986	699	"res_0"	"hugeint"	128	0	0	0
3987	699	"arg_1"	"tinyint"	8	0	1	1
3988	699	"arg_2"	"hugeint"	128	0	1	2
3989	700	"res_0"	"hugeint"	128	0	0	0
3990	700	"arg_1"	"smallint"	16	0	1	1
3991	700	"arg_2"	"hugeint"	128	0	1	2
3992	701	"res_0"	"hugeint"	128	0	0	0
3993	701	"arg_1"	"int"	32	0	1	1
3994	701	"arg_2"	"hugeint"	128	0	1	2
3995	702	"res_0"	"hugeint"	128	0	0	0
3996	702	"arg_1"	"bigint"	64	0	1	1
3997	702	"arg_2"	"hugeint"	128	0	1	2
3998	703	"res_0"	"hugeint"	128	0	0	0
3999	703	"arg_1"	"wrd"	64	0	1	1
4000	703	"arg_2"	"hugeint"	128	0	1	2
4001	704	"res_0"	"hugeint"	128	0	0	0
4002	704	"arg_1"	"hugeint"	128	0	1	1
4003	704	"arg_2"	"hugeint"	128	0	1	2
4004	705	"res_0"	"hugeint"	128	0	0	0
4005	705	"arg_1"	"decimal"	2	0	1	1
4006	705	"arg_2"	"hugeint"	128	0	1	2
4007	706	"res_0"	"hugeint"	128	0	0	0
4008	706	"arg_1"	"decimal"	4	0	1	1
4009	706	"arg_2"	"hugeint"	128	0	1	2
4010	707	"res_0"	"hugeint"	128	0	0	0
4011	707	"arg_1"	"decimal"	9	0	1	1
4012	707	"arg_2"	"hugeint"	128	0	1	2
4013	708	"res_0"	"hugeint"	128	0	0	0
4014	708	"arg_1"	"decimal"	18	0	1	1
4015	708	"arg_2"	"hugeint"	128	0	1	2
4016	709	"res_0"	"hugeint"	128	0	0	0
4017	709	"arg_1"	"decimal"	39	0	1	1
4018	709	"arg_2"	"hugeint"	128	0	1	2
4019	710	"res_0"	"hugeint"	128	0	0	0
4020	710	"arg_1"	"real"	24	0	1	1
4021	710	"arg_2"	"hugeint"	128	0	1	2
4022	711	"res_0"	"hugeint"	128	0	0	0
4023	711	"arg_1"	"double"	53	0	1	1
4024	711	"arg_2"	"hugeint"	128	0	1	2
4025	712	"res_0"	"hugeint"	128	0	0	0
4026	712	"arg_1"	"month_interval"	32	0	1	1
4027	712	"arg_2"	"hugeint"	128	0	1	2
4028	713	"res_0"	"hugeint"	128	0	0	0
4029	713	"arg_1"	"sec_interval"	13	0	1	1
4030	713	"arg_2"	"hugeint"	128	0	1	2
4031	714	"res_0"	"hugeint"	128	0	0	0
4032	714	"arg_1"	"time"	7	0	1	1
4033	714	"arg_2"	"hugeint"	128	0	1	2
4034	715	"res_0"	"hugeint"	128	0	0	0
4035	715	"arg_1"	"timetz"	7	0	1	1
4036	715	"arg_2"	"hugeint"	128	0	1	2
4037	716	"res_0"	"hugeint"	128	0	0	0
4038	716	"arg_1"	"date"	0	0	1	1
4039	716	"arg_2"	"hugeint"	128	0	1	2
4040	717	"res_0"	"hugeint"	128	0	0	0
4041	717	"arg_1"	"timestamp"	7	0	1	1
4042	717	"arg_2"	"hugeint"	128	0	1	2
4043	718	"res_0"	"hugeint"	128	0	0	0
4044	718	"arg_1"	"timestamptz"	7	0	1	1
4045	718	"arg_2"	"hugeint"	128	0	1	2
4046	719	"res_0"	"hugeint"	128	0	0	0
4047	719	"arg_1"	"blob"	0	0	1	1
4048	719	"arg_2"	"hugeint"	128	0	1	2
4049	720	"res_0"	"hugeint"	128	0	0	0
4050	720	"arg_1"	"geometry"	0	0	1	1
4051	720	"arg_2"	"hugeint"	128	0	1	2
4052	721	"res_0"	"hugeint"	128	0	0	0
4053	721	"arg_1"	"geometrya"	0	0	1	1
4054	721	"arg_2"	"hugeint"	128	0	1	2
4055	722	"res_0"	"hugeint"	128	0	0	0
4056	722	"arg_1"	"mbr"	0	0	1	1
4057	722	"arg_2"	"hugeint"	128	0	1	2
4058	723	"res_0"	"decimal"	2	0	0	0
4059	723	"arg_1"	"oid"	63	0	1	1
4060	723	"arg_2"	"decimal"	2	0	1	2
4061	724	"res_0"	"decimal"	2	0	0	0
4062	724	"arg_1"	"tinyint"	8	0	1	1
4063	724	"arg_2"	"decimal"	2	0	1	2
4064	725	"res_0"	"decimal"	2	0	0	0
4065	725	"arg_1"	"smallint"	16	0	1	1
4066	725	"arg_2"	"decimal"	2	0	1	2
4067	726	"res_0"	"decimal"	2	0	0	0
4068	726	"arg_1"	"int"	32	0	1	1
4069	726	"arg_2"	"decimal"	2	0	1	2
4070	727	"res_0"	"decimal"	2	0	0	0
4071	727	"arg_1"	"bigint"	64	0	1	1
4072	727	"arg_2"	"decimal"	2	0	1	2
4073	728	"res_0"	"decimal"	2	0	0	0
4074	728	"arg_1"	"wrd"	64	0	1	1
4075	728	"arg_2"	"decimal"	2	0	1	2
4076	729	"res_0"	"decimal"	2	0	0	0
4077	729	"arg_1"	"hugeint"	128	0	1	1
4078	729	"arg_2"	"decimal"	2	0	1	2
4079	730	"res_0"	"decimal"	2	0	0	0
4080	730	"arg_1"	"decimal"	2	0	1	1
4081	730	"arg_2"	"decimal"	2	0	1	2
4082	731	"res_0"	"decimal"	2	0	0	0
4083	731	"arg_1"	"decimal"	4	0	1	1
4084	731	"arg_2"	"decimal"	2	0	1	2
4085	732	"res_0"	"decimal"	2	0	0	0
4086	732	"arg_1"	"decimal"	9	0	1	1
4087	732	"arg_2"	"decimal"	2	0	1	2
4088	733	"res_0"	"decimal"	2	0	0	0
4089	733	"arg_1"	"decimal"	18	0	1	1
4090	733	"arg_2"	"decimal"	2	0	1	2
4091	734	"res_0"	"decimal"	2	0	0	0
4092	734	"arg_1"	"decimal"	39	0	1	1
4093	734	"arg_2"	"decimal"	2	0	1	2
4094	735	"res_0"	"decimal"	2	0	0	0
4095	735	"arg_1"	"real"	24	0	1	1
4096	735	"arg_2"	"decimal"	2	0	1	2
4097	736	"res_0"	"decimal"	2	0	0	0
4098	736	"arg_1"	"double"	53	0	1	1
4099	736	"arg_2"	"decimal"	2	0	1	2
4100	737	"res_0"	"decimal"	2	0	0	0
4101	737	"arg_1"	"month_interval"	32	0	1	1
4102	737	"arg_2"	"decimal"	2	0	1	2
4103	738	"res_0"	"decimal"	2	0	0	0
4104	738	"arg_1"	"sec_interval"	13	0	1	1
4105	738	"arg_2"	"decimal"	2	0	1	2
4106	739	"res_0"	"decimal"	2	0	0	0
4107	739	"arg_1"	"time"	7	0	1	1
4108	739	"arg_2"	"decimal"	2	0	1	2
4109	740	"res_0"	"decimal"	2	0	0	0
4110	740	"arg_1"	"timetz"	7	0	1	1
4111	740	"arg_2"	"decimal"	2	0	1	2
4112	741	"res_0"	"decimal"	2	0	0	0
4113	741	"arg_1"	"date"	0	0	1	1
4114	741	"arg_2"	"decimal"	2	0	1	2
4115	742	"res_0"	"decimal"	2	0	0	0
4116	742	"arg_1"	"timestamp"	7	0	1	1
4117	742	"arg_2"	"decimal"	2	0	1	2
4118	743	"res_0"	"decimal"	2	0	0	0
4119	743	"arg_1"	"timestamptz"	7	0	1	1
4120	743	"arg_2"	"decimal"	2	0	1	2
4121	744	"res_0"	"decimal"	2	0	0	0
4122	744	"arg_1"	"blob"	0	0	1	1
4123	744	"arg_2"	"decimal"	2	0	1	2
4124	745	"res_0"	"decimal"	2	0	0	0
4125	745	"arg_1"	"geometry"	0	0	1	1
4126	745	"arg_2"	"decimal"	2	0	1	2
4127	746	"res_0"	"decimal"	2	0	0	0
4128	746	"arg_1"	"geometrya"	0	0	1	1
4129	746	"arg_2"	"decimal"	2	0	1	2
4130	747	"res_0"	"decimal"	2	0	0	0
4131	747	"arg_1"	"mbr"	0	0	1	1
4132	747	"arg_2"	"decimal"	2	0	1	2
4133	748	"res_0"	"decimal"	4	0	0	0
4134	748	"arg_1"	"oid"	63	0	1	1
4135	748	"arg_2"	"decimal"	4	0	1	2
4136	749	"res_0"	"decimal"	4	0	0	0
4137	749	"arg_1"	"tinyint"	8	0	1	1
4138	749	"arg_2"	"decimal"	4	0	1	2
4139	750	"res_0"	"decimal"	4	0	0	0
4140	750	"arg_1"	"smallint"	16	0	1	1
4141	750	"arg_2"	"decimal"	4	0	1	2
4142	751	"res_0"	"decimal"	4	0	0	0
4143	751	"arg_1"	"int"	32	0	1	1
4144	751	"arg_2"	"decimal"	4	0	1	2
4145	752	"res_0"	"decimal"	4	0	0	0
4146	752	"arg_1"	"bigint"	64	0	1	1
4147	752	"arg_2"	"decimal"	4	0	1	2
4148	753	"res_0"	"decimal"	4	0	0	0
4149	753	"arg_1"	"wrd"	64	0	1	1
4150	753	"arg_2"	"decimal"	4	0	1	2
4151	754	"res_0"	"decimal"	4	0	0	0
4152	754	"arg_1"	"hugeint"	128	0	1	1
4153	754	"arg_2"	"decimal"	4	0	1	2
4154	755	"res_0"	"decimal"	4	0	0	0
4155	755	"arg_1"	"decimal"	2	0	1	1
4156	755	"arg_2"	"decimal"	4	0	1	2
4157	756	"res_0"	"decimal"	4	0	0	0
4158	756	"arg_1"	"decimal"	4	0	1	1
4159	756	"arg_2"	"decimal"	4	0	1	2
4160	757	"res_0"	"decimal"	4	0	0	0
4161	757	"arg_1"	"decimal"	9	0	1	1
4162	757	"arg_2"	"decimal"	4	0	1	2
4163	758	"res_0"	"decimal"	4	0	0	0
4164	758	"arg_1"	"decimal"	18	0	1	1
4165	758	"arg_2"	"decimal"	4	0	1	2
4166	759	"res_0"	"decimal"	4	0	0	0
4167	759	"arg_1"	"decimal"	39	0	1	1
4168	759	"arg_2"	"decimal"	4	0	1	2
4169	760	"res_0"	"decimal"	4	0	0	0
4170	760	"arg_1"	"real"	24	0	1	1
4171	760	"arg_2"	"decimal"	4	0	1	2
4172	761	"res_0"	"decimal"	4	0	0	0
4173	761	"arg_1"	"double"	53	0	1	1
4174	761	"arg_2"	"decimal"	4	0	1	2
4175	762	"res_0"	"decimal"	4	0	0	0
4176	762	"arg_1"	"month_interval"	32	0	1	1
4177	762	"arg_2"	"decimal"	4	0	1	2
4178	763	"res_0"	"decimal"	4	0	0	0
4179	763	"arg_1"	"sec_interval"	13	0	1	1
4180	763	"arg_2"	"decimal"	4	0	1	2
4181	764	"res_0"	"decimal"	4	0	0	0
4182	764	"arg_1"	"time"	7	0	1	1
4183	764	"arg_2"	"decimal"	4	0	1	2
4184	765	"res_0"	"decimal"	4	0	0	0
4185	765	"arg_1"	"timetz"	7	0	1	1
4186	765	"arg_2"	"decimal"	4	0	1	2
4187	766	"res_0"	"decimal"	4	0	0	0
4188	766	"arg_1"	"date"	0	0	1	1
4189	766	"arg_2"	"decimal"	4	0	1	2
4190	767	"res_0"	"decimal"	4	0	0	0
4191	767	"arg_1"	"timestamp"	7	0	1	1
4192	767	"arg_2"	"decimal"	4	0	1	2
4193	768	"res_0"	"decimal"	4	0	0	0
4194	768	"arg_1"	"timestamptz"	7	0	1	1
4195	768	"arg_2"	"decimal"	4	0	1	2
4196	769	"res_0"	"decimal"	4	0	0	0
4197	769	"arg_1"	"blob"	0	0	1	1
4198	769	"arg_2"	"decimal"	4	0	1	2
4199	770	"res_0"	"decimal"	4	0	0	0
4200	770	"arg_1"	"geometry"	0	0	1	1
4201	770	"arg_2"	"decimal"	4	0	1	2
4202	771	"res_0"	"decimal"	4	0	0	0
4203	771	"arg_1"	"geometrya"	0	0	1	1
4204	771	"arg_2"	"decimal"	4	0	1	2
4205	772	"res_0"	"decimal"	4	0	0	0
4206	772	"arg_1"	"mbr"	0	0	1	1
4207	772	"arg_2"	"decimal"	4	0	1	2
4208	773	"res_0"	"decimal"	9	0	0	0
4209	773	"arg_1"	"oid"	63	0	1	1
4210	773	"arg_2"	"decimal"	9	0	1	2
4211	774	"res_0"	"decimal"	9	0	0	0
4212	774	"arg_1"	"tinyint"	8	0	1	1
4213	774	"arg_2"	"decimal"	9	0	1	2
4214	775	"res_0"	"decimal"	9	0	0	0
4215	775	"arg_1"	"smallint"	16	0	1	1
4216	775	"arg_2"	"decimal"	9	0	1	2
4217	776	"res_0"	"decimal"	9	0	0	0
4218	776	"arg_1"	"int"	32	0	1	1
4219	776	"arg_2"	"decimal"	9	0	1	2
4220	777	"res_0"	"decimal"	9	0	0	0
4221	777	"arg_1"	"bigint"	64	0	1	1
4222	777	"arg_2"	"decimal"	9	0	1	2
4223	778	"res_0"	"decimal"	9	0	0	0
4224	778	"arg_1"	"wrd"	64	0	1	1
4225	778	"arg_2"	"decimal"	9	0	1	2
4226	779	"res_0"	"decimal"	9	0	0	0
4227	779	"arg_1"	"hugeint"	128	0	1	1
4228	779	"arg_2"	"decimal"	9	0	1	2
4229	780	"res_0"	"decimal"	9	0	0	0
4230	780	"arg_1"	"decimal"	2	0	1	1
4231	780	"arg_2"	"decimal"	9	0	1	2
4232	781	"res_0"	"decimal"	9	0	0	0
4233	781	"arg_1"	"decimal"	4	0	1	1
4234	781	"arg_2"	"decimal"	9	0	1	2
4235	782	"res_0"	"decimal"	9	0	0	0
4236	782	"arg_1"	"decimal"	9	0	1	1
4237	782	"arg_2"	"decimal"	9	0	1	2
4238	783	"res_0"	"decimal"	9	0	0	0
4239	783	"arg_1"	"decimal"	18	0	1	1
4240	783	"arg_2"	"decimal"	9	0	1	2
4241	784	"res_0"	"decimal"	9	0	0	0
4242	784	"arg_1"	"decimal"	39	0	1	1
4243	784	"arg_2"	"decimal"	9	0	1	2
4244	785	"res_0"	"decimal"	9	0	0	0
4245	785	"arg_1"	"real"	24	0	1	1
4246	785	"arg_2"	"decimal"	9	0	1	2
4247	786	"res_0"	"decimal"	9	0	0	0
4248	786	"arg_1"	"double"	53	0	1	1
4249	786	"arg_2"	"decimal"	9	0	1	2
4250	787	"res_0"	"decimal"	9	0	0	0
4251	787	"arg_1"	"month_interval"	32	0	1	1
4252	787	"arg_2"	"decimal"	9	0	1	2
4253	788	"res_0"	"decimal"	9	0	0	0
4254	788	"arg_1"	"sec_interval"	13	0	1	1
4255	788	"arg_2"	"decimal"	9	0	1	2
4256	789	"res_0"	"decimal"	9	0	0	0
4257	789	"arg_1"	"time"	7	0	1	1
4258	789	"arg_2"	"decimal"	9	0	1	2
4259	790	"res_0"	"decimal"	9	0	0	0
4260	790	"arg_1"	"timetz"	7	0	1	1
4261	790	"arg_2"	"decimal"	9	0	1	2
4262	791	"res_0"	"decimal"	9	0	0	0
4263	791	"arg_1"	"date"	0	0	1	1
4264	791	"arg_2"	"decimal"	9	0	1	2
4265	792	"res_0"	"decimal"	9	0	0	0
4266	792	"arg_1"	"timestamp"	7	0	1	1
4267	792	"arg_2"	"decimal"	9	0	1	2
4268	793	"res_0"	"decimal"	9	0	0	0
4269	793	"arg_1"	"timestamptz"	7	0	1	1
4270	793	"arg_2"	"decimal"	9	0	1	2
4271	794	"res_0"	"decimal"	9	0	0	0
4272	794	"arg_1"	"blob"	0	0	1	1
4273	794	"arg_2"	"decimal"	9	0	1	2
4274	795	"res_0"	"decimal"	9	0	0	0
4275	795	"arg_1"	"geometry"	0	0	1	1
4276	795	"arg_2"	"decimal"	9	0	1	2
4277	796	"res_0"	"decimal"	9	0	0	0
4278	796	"arg_1"	"geometrya"	0	0	1	1
4279	796	"arg_2"	"decimal"	9	0	1	2
4280	797	"res_0"	"decimal"	9	0	0	0
4281	797	"arg_1"	"mbr"	0	0	1	1
4282	797	"arg_2"	"decimal"	9	0	1	2
4283	798	"res_0"	"decimal"	18	0	0	0
4284	798	"arg_1"	"oid"	63	0	1	1
4285	798	"arg_2"	"decimal"	18	0	1	2
4286	799	"res_0"	"decimal"	18	0	0	0
4287	799	"arg_1"	"tinyint"	8	0	1	1
4288	799	"arg_2"	"decimal"	18	0	1	2
4289	800	"res_0"	"decimal"	18	0	0	0
4290	800	"arg_1"	"smallint"	16	0	1	1
4291	800	"arg_2"	"decimal"	18	0	1	2
4292	801	"res_0"	"decimal"	18	0	0	0
4293	801	"arg_1"	"int"	32	0	1	1
4294	801	"arg_2"	"decimal"	18	0	1	2
4295	802	"res_0"	"decimal"	18	0	0	0
4296	802	"arg_1"	"bigint"	64	0	1	1
4297	802	"arg_2"	"decimal"	18	0	1	2
4298	803	"res_0"	"decimal"	18	0	0	0
4299	803	"arg_1"	"wrd"	64	0	1	1
4300	803	"arg_2"	"decimal"	18	0	1	2
4301	804	"res_0"	"decimal"	18	0	0	0
4302	804	"arg_1"	"hugeint"	128	0	1	1
4303	804	"arg_2"	"decimal"	18	0	1	2
4304	805	"res_0"	"decimal"	18	0	0	0
4305	805	"arg_1"	"decimal"	2	0	1	1
4306	805	"arg_2"	"decimal"	18	0	1	2
4307	806	"res_0"	"decimal"	18	0	0	0
4308	806	"arg_1"	"decimal"	4	0	1	1
4309	806	"arg_2"	"decimal"	18	0	1	2
4310	807	"res_0"	"decimal"	18	0	0	0
4311	807	"arg_1"	"decimal"	9	0	1	1
4312	807	"arg_2"	"decimal"	18	0	1	2
4313	808	"res_0"	"decimal"	18	0	0	0
4314	808	"arg_1"	"decimal"	18	0	1	1
4315	808	"arg_2"	"decimal"	18	0	1	2
4316	809	"res_0"	"decimal"	18	0	0	0
4317	809	"arg_1"	"decimal"	39	0	1	1
4318	809	"arg_2"	"decimal"	18	0	1	2
4319	810	"res_0"	"decimal"	18	0	0	0
4320	810	"arg_1"	"real"	24	0	1	1
4321	810	"arg_2"	"decimal"	18	0	1	2
4322	811	"res_0"	"decimal"	18	0	0	0
4323	811	"arg_1"	"double"	53	0	1	1
4324	811	"arg_2"	"decimal"	18	0	1	2
4325	812	"res_0"	"decimal"	18	0	0	0
4326	812	"arg_1"	"month_interval"	32	0	1	1
4327	812	"arg_2"	"decimal"	18	0	1	2
4328	813	"res_0"	"decimal"	18	0	0	0
4329	813	"arg_1"	"sec_interval"	13	0	1	1
4330	813	"arg_2"	"decimal"	18	0	1	2
4331	814	"res_0"	"decimal"	18	0	0	0
4332	814	"arg_1"	"time"	7	0	1	1
4333	814	"arg_2"	"decimal"	18	0	1	2
4334	815	"res_0"	"decimal"	18	0	0	0
4335	815	"arg_1"	"timetz"	7	0	1	1
4336	815	"arg_2"	"decimal"	18	0	1	2
4337	816	"res_0"	"decimal"	18	0	0	0
4338	816	"arg_1"	"date"	0	0	1	1
4339	816	"arg_2"	"decimal"	18	0	1	2
4340	817	"res_0"	"decimal"	18	0	0	0
4341	817	"arg_1"	"timestamp"	7	0	1	1
4342	817	"arg_2"	"decimal"	18	0	1	2
4343	818	"res_0"	"decimal"	18	0	0	0
4344	818	"arg_1"	"timestamptz"	7	0	1	1
4345	818	"arg_2"	"decimal"	18	0	1	2
4346	819	"res_0"	"decimal"	18	0	0	0
4347	819	"arg_1"	"blob"	0	0	1	1
4348	819	"arg_2"	"decimal"	18	0	1	2
4349	820	"res_0"	"decimal"	18	0	0	0
4350	820	"arg_1"	"geometry"	0	0	1	1
4351	820	"arg_2"	"decimal"	18	0	1	2
4352	821	"res_0"	"decimal"	18	0	0	0
4353	821	"arg_1"	"geometrya"	0	0	1	1
4354	821	"arg_2"	"decimal"	18	0	1	2
4355	822	"res_0"	"decimal"	18	0	0	0
4356	822	"arg_1"	"mbr"	0	0	1	1
4357	822	"arg_2"	"decimal"	18	0	1	2
4358	823	"res_0"	"decimal"	39	0	0	0
4359	823	"arg_1"	"oid"	63	0	1	1
4360	823	"arg_2"	"decimal"	39	0	1	2
4361	824	"res_0"	"decimal"	39	0	0	0
4362	824	"arg_1"	"tinyint"	8	0	1	1
4363	824	"arg_2"	"decimal"	39	0	1	2
4364	825	"res_0"	"decimal"	39	0	0	0
4365	825	"arg_1"	"smallint"	16	0	1	1
4366	825	"arg_2"	"decimal"	39	0	1	2
4367	826	"res_0"	"decimal"	39	0	0	0
4368	826	"arg_1"	"int"	32	0	1	1
4369	826	"arg_2"	"decimal"	39	0	1	2
4370	827	"res_0"	"decimal"	39	0	0	0
4371	827	"arg_1"	"bigint"	64	0	1	1
4372	827	"arg_2"	"decimal"	39	0	1	2
4373	828	"res_0"	"decimal"	39	0	0	0
4374	828	"arg_1"	"wrd"	64	0	1	1
4375	828	"arg_2"	"decimal"	39	0	1	2
4376	829	"res_0"	"decimal"	39	0	0	0
4377	829	"arg_1"	"hugeint"	128	0	1	1
4378	829	"arg_2"	"decimal"	39	0	1	2
4379	830	"res_0"	"decimal"	39	0	0	0
4380	830	"arg_1"	"decimal"	2	0	1	1
4381	830	"arg_2"	"decimal"	39	0	1	2
4382	831	"res_0"	"decimal"	39	0	0	0
4383	831	"arg_1"	"decimal"	4	0	1	1
4384	831	"arg_2"	"decimal"	39	0	1	2
4385	832	"res_0"	"decimal"	39	0	0	0
4386	832	"arg_1"	"decimal"	9	0	1	1
4387	832	"arg_2"	"decimal"	39	0	1	2
4388	833	"res_0"	"decimal"	39	0	0	0
4389	833	"arg_1"	"decimal"	18	0	1	1
4390	833	"arg_2"	"decimal"	39	0	1	2
4391	834	"res_0"	"decimal"	39	0	0	0
4392	834	"arg_1"	"decimal"	39	0	1	1
4393	834	"arg_2"	"decimal"	39	0	1	2
4394	835	"res_0"	"decimal"	39	0	0	0
4395	835	"arg_1"	"real"	24	0	1	1
4396	835	"arg_2"	"decimal"	39	0	1	2
4397	836	"res_0"	"decimal"	39	0	0	0
4398	836	"arg_1"	"double"	53	0	1	1
4399	836	"arg_2"	"decimal"	39	0	1	2
4400	837	"res_0"	"decimal"	39	0	0	0
4401	837	"arg_1"	"month_interval"	32	0	1	1
4402	837	"arg_2"	"decimal"	39	0	1	2
4403	838	"res_0"	"decimal"	39	0	0	0
4404	838	"arg_1"	"sec_interval"	13	0	1	1
4405	838	"arg_2"	"decimal"	39	0	1	2
4406	839	"res_0"	"decimal"	39	0	0	0
4407	839	"arg_1"	"time"	7	0	1	1
4408	839	"arg_2"	"decimal"	39	0	1	2
4409	840	"res_0"	"decimal"	39	0	0	0
4410	840	"arg_1"	"timetz"	7	0	1	1
4411	840	"arg_2"	"decimal"	39	0	1	2
4412	841	"res_0"	"decimal"	39	0	0	0
4413	841	"arg_1"	"date"	0	0	1	1
4414	841	"arg_2"	"decimal"	39	0	1	2
4415	842	"res_0"	"decimal"	39	0	0	0
4416	842	"arg_1"	"timestamp"	7	0	1	1
4417	842	"arg_2"	"decimal"	39	0	1	2
4418	843	"res_0"	"decimal"	39	0	0	0
4419	843	"arg_1"	"timestamptz"	7	0	1	1
4420	843	"arg_2"	"decimal"	39	0	1	2
4421	844	"res_0"	"decimal"	39	0	0	0
4422	844	"arg_1"	"blob"	0	0	1	1
4423	844	"arg_2"	"decimal"	39	0	1	2
4424	845	"res_0"	"decimal"	39	0	0	0
4425	845	"arg_1"	"geometry"	0	0	1	1
4426	845	"arg_2"	"decimal"	39	0	1	2
4427	846	"res_0"	"decimal"	39	0	0	0
4428	846	"arg_1"	"geometrya"	0	0	1	1
4429	846	"arg_2"	"decimal"	39	0	1	2
4430	847	"res_0"	"decimal"	39	0	0	0
4431	847	"arg_1"	"mbr"	0	0	1	1
4432	847	"arg_2"	"decimal"	39	0	1	2
4433	848	"res_0"	"real"	24	0	0	0
4434	848	"arg_1"	"oid"	63	0	1	1
4435	848	"arg_2"	"real"	24	0	1	2
4436	849	"res_0"	"real"	24	0	0	0
4437	849	"arg_1"	"tinyint"	8	0	1	1
4438	849	"arg_2"	"real"	24	0	1	2
4439	850	"res_0"	"real"	24	0	0	0
4440	850	"arg_1"	"smallint"	16	0	1	1
4441	850	"arg_2"	"real"	24	0	1	2
4442	851	"res_0"	"real"	24	0	0	0
4443	851	"arg_1"	"int"	32	0	1	1
4444	851	"arg_2"	"real"	24	0	1	2
4445	852	"res_0"	"real"	24	0	0	0
4446	852	"arg_1"	"bigint"	64	0	1	1
4447	852	"arg_2"	"real"	24	0	1	2
4448	853	"res_0"	"real"	24	0	0	0
4449	853	"arg_1"	"wrd"	64	0	1	1
4450	853	"arg_2"	"real"	24	0	1	2
4451	854	"res_0"	"real"	24	0	0	0
4452	854	"arg_1"	"hugeint"	128	0	1	1
4453	854	"arg_2"	"real"	24	0	1	2
4454	855	"res_0"	"real"	24	0	0	0
4455	855	"arg_1"	"decimal"	2	0	1	1
4456	855	"arg_2"	"real"	24	0	1	2
4457	856	"res_0"	"real"	24	0	0	0
4458	856	"arg_1"	"decimal"	4	0	1	1
4459	856	"arg_2"	"real"	24	0	1	2
4460	857	"res_0"	"real"	24	0	0	0
4461	857	"arg_1"	"decimal"	9	0	1	1
4462	857	"arg_2"	"real"	24	0	1	2
4463	858	"res_0"	"real"	24	0	0	0
4464	858	"arg_1"	"decimal"	18	0	1	1
4465	858	"arg_2"	"real"	24	0	1	2
4466	859	"res_0"	"real"	24	0	0	0
4467	859	"arg_1"	"decimal"	39	0	1	1
4468	859	"arg_2"	"real"	24	0	1	2
4469	860	"res_0"	"real"	24	0	0	0
4470	860	"arg_1"	"real"	24	0	1	1
4471	860	"arg_2"	"real"	24	0	1	2
4472	861	"res_0"	"real"	24	0	0	0
4473	861	"arg_1"	"double"	53	0	1	1
4474	861	"arg_2"	"real"	24	0	1	2
4475	862	"res_0"	"real"	24	0	0	0
4476	862	"arg_1"	"month_interval"	32	0	1	1
4477	862	"arg_2"	"real"	24	0	1	2
4478	863	"res_0"	"real"	24	0	0	0
4479	863	"arg_1"	"sec_interval"	13	0	1	1
4480	863	"arg_2"	"real"	24	0	1	2
4481	864	"res_0"	"real"	24	0	0	0
4482	864	"arg_1"	"time"	7	0	1	1
4483	864	"arg_2"	"real"	24	0	1	2
4484	865	"res_0"	"real"	24	0	0	0
4485	865	"arg_1"	"timetz"	7	0	1	1
4486	865	"arg_2"	"real"	24	0	1	2
4487	866	"res_0"	"real"	24	0	0	0
4488	866	"arg_1"	"date"	0	0	1	1
4489	866	"arg_2"	"real"	24	0	1	2
4490	867	"res_0"	"real"	24	0	0	0
4491	867	"arg_1"	"timestamp"	7	0	1	1
4492	867	"arg_2"	"real"	24	0	1	2
4493	868	"res_0"	"real"	24	0	0	0
4494	868	"arg_1"	"timestamptz"	7	0	1	1
4495	868	"arg_2"	"real"	24	0	1	2
4496	869	"res_0"	"real"	24	0	0	0
4497	869	"arg_1"	"blob"	0	0	1	1
4498	869	"arg_2"	"real"	24	0	1	2
4499	870	"res_0"	"real"	24	0	0	0
4500	870	"arg_1"	"geometry"	0	0	1	1
4501	870	"arg_2"	"real"	24	0	1	2
4502	871	"res_0"	"real"	24	0	0	0
4503	871	"arg_1"	"geometrya"	0	0	1	1
4504	871	"arg_2"	"real"	24	0	1	2
4505	872	"res_0"	"real"	24	0	0	0
4506	872	"arg_1"	"mbr"	0	0	1	1
4507	872	"arg_2"	"real"	24	0	1	2
4508	873	"res_0"	"double"	53	0	0	0
4509	873	"arg_1"	"oid"	63	0	1	1
4510	873	"arg_2"	"double"	53	0	1	2
4511	874	"res_0"	"double"	53	0	0	0
4512	874	"arg_1"	"tinyint"	8	0	1	1
4513	874	"arg_2"	"double"	53	0	1	2
4514	875	"res_0"	"double"	53	0	0	0
4515	875	"arg_1"	"smallint"	16	0	1	1
4516	875	"arg_2"	"double"	53	0	1	2
4517	876	"res_0"	"double"	53	0	0	0
4518	876	"arg_1"	"int"	32	0	1	1
4519	876	"arg_2"	"double"	53	0	1	2
4520	877	"res_0"	"double"	53	0	0	0
4521	877	"arg_1"	"bigint"	64	0	1	1
4522	877	"arg_2"	"double"	53	0	1	2
4523	878	"res_0"	"double"	53	0	0	0
4524	878	"arg_1"	"wrd"	64	0	1	1
4525	878	"arg_2"	"double"	53	0	1	2
4526	879	"res_0"	"double"	53	0	0	0
4527	879	"arg_1"	"hugeint"	128	0	1	1
4528	879	"arg_2"	"double"	53	0	1	2
4529	880	"res_0"	"double"	53	0	0	0
4530	880	"arg_1"	"decimal"	2	0	1	1
4531	880	"arg_2"	"double"	53	0	1	2
4532	881	"res_0"	"double"	53	0	0	0
4533	881	"arg_1"	"decimal"	4	0	1	1
4534	881	"arg_2"	"double"	53	0	1	2
4535	882	"res_0"	"double"	53	0	0	0
4536	882	"arg_1"	"decimal"	9	0	1	1
4537	882	"arg_2"	"double"	53	0	1	2
4538	883	"res_0"	"double"	53	0	0	0
4539	883	"arg_1"	"decimal"	18	0	1	1
4540	883	"arg_2"	"double"	53	0	1	2
4541	884	"res_0"	"double"	53	0	0	0
4542	884	"arg_1"	"decimal"	39	0	1	1
4543	884	"arg_2"	"double"	53	0	1	2
4544	885	"res_0"	"double"	53	0	0	0
4545	885	"arg_1"	"real"	24	0	1	1
4546	885	"arg_2"	"double"	53	0	1	2
4547	886	"res_0"	"double"	53	0	0	0
4548	886	"arg_1"	"double"	53	0	1	1
4549	886	"arg_2"	"double"	53	0	1	2
4550	887	"res_0"	"double"	53	0	0	0
4551	887	"arg_1"	"month_interval"	32	0	1	1
4552	887	"arg_2"	"double"	53	0	1	2
4553	888	"res_0"	"double"	53	0	0	0
4554	888	"arg_1"	"sec_interval"	13	0	1	1
4555	888	"arg_2"	"double"	53	0	1	2
4556	889	"res_0"	"double"	53	0	0	0
4557	889	"arg_1"	"time"	7	0	1	1
4558	889	"arg_2"	"double"	53	0	1	2
4559	890	"res_0"	"double"	53	0	0	0
4560	890	"arg_1"	"timetz"	7	0	1	1
4561	890	"arg_2"	"double"	53	0	1	2
4562	891	"res_0"	"double"	53	0	0	0
4563	891	"arg_1"	"date"	0	0	1	1
4564	891	"arg_2"	"double"	53	0	1	2
4565	892	"res_0"	"double"	53	0	0	0
4566	892	"arg_1"	"timestamp"	7	0	1	1
4567	892	"arg_2"	"double"	53	0	1	2
4568	893	"res_0"	"double"	53	0	0	0
4569	893	"arg_1"	"timestamptz"	7	0	1	1
4570	893	"arg_2"	"double"	53	0	1	2
4571	894	"res_0"	"double"	53	0	0	0
4572	894	"arg_1"	"blob"	0	0	1	1
4573	894	"arg_2"	"double"	53	0	1	2
4574	895	"res_0"	"double"	53	0	0	0
4575	895	"arg_1"	"geometry"	0	0	1	1
4576	895	"arg_2"	"double"	53	0	1	2
4577	896	"res_0"	"double"	53	0	0	0
4578	896	"arg_1"	"geometrya"	0	0	1	1
4579	896	"arg_2"	"double"	53	0	1	2
4580	897	"res_0"	"double"	53	0	0	0
4581	897	"arg_1"	"mbr"	0	0	1	1
4582	897	"arg_2"	"double"	53	0	1	2
4583	898	"res_0"	"month_interval"	32	0	0	0
4584	898	"arg_1"	"oid"	63	0	1	1
4585	898	"arg_2"	"month_interval"	32	0	1	2
4586	899	"res_0"	"month_interval"	32	0	0	0
4587	899	"arg_1"	"tinyint"	8	0	1	1
4588	899	"arg_2"	"month_interval"	32	0	1	2
4589	900	"res_0"	"month_interval"	32	0	0	0
4590	900	"arg_1"	"smallint"	16	0	1	1
4591	900	"arg_2"	"month_interval"	32	0	1	2
4592	901	"res_0"	"month_interval"	32	0	0	0
4593	901	"arg_1"	"int"	32	0	1	1
4594	901	"arg_2"	"month_interval"	32	0	1	2
4595	902	"res_0"	"month_interval"	32	0	0	0
4596	902	"arg_1"	"bigint"	64	0	1	1
4597	902	"arg_2"	"month_interval"	32	0	1	2
4598	903	"res_0"	"month_interval"	32	0	0	0
4599	903	"arg_1"	"wrd"	64	0	1	1
4600	903	"arg_2"	"month_interval"	32	0	1	2
4601	904	"res_0"	"month_interval"	32	0	0	0
4602	904	"arg_1"	"hugeint"	128	0	1	1
4603	904	"arg_2"	"month_interval"	32	0	1	2
4604	905	"res_0"	"month_interval"	32	0	0	0
4605	905	"arg_1"	"decimal"	2	0	1	1
4606	905	"arg_2"	"month_interval"	32	0	1	2
4607	906	"res_0"	"month_interval"	32	0	0	0
4608	906	"arg_1"	"decimal"	4	0	1	1
4609	906	"arg_2"	"month_interval"	32	0	1	2
4610	907	"res_0"	"month_interval"	32	0	0	0
4611	907	"arg_1"	"decimal"	9	0	1	1
4612	907	"arg_2"	"month_interval"	32	0	1	2
4613	908	"res_0"	"month_interval"	32	0	0	0
4614	908	"arg_1"	"decimal"	18	0	1	1
4615	908	"arg_2"	"month_interval"	32	0	1	2
4616	909	"res_0"	"month_interval"	32	0	0	0
4617	909	"arg_1"	"decimal"	39	0	1	1
4618	909	"arg_2"	"month_interval"	32	0	1	2
4619	910	"res_0"	"month_interval"	32	0	0	0
4620	910	"arg_1"	"real"	24	0	1	1
4621	910	"arg_2"	"month_interval"	32	0	1	2
4622	911	"res_0"	"month_interval"	32	0	0	0
4623	911	"arg_1"	"double"	53	0	1	1
4624	911	"arg_2"	"month_interval"	32	0	1	2
4625	912	"res_0"	"month_interval"	32	0	0	0
4626	912	"arg_1"	"month_interval"	32	0	1	1
4627	912	"arg_2"	"month_interval"	32	0	1	2
4628	913	"res_0"	"month_interval"	32	0	0	0
4629	913	"arg_1"	"sec_interval"	13	0	1	1
4630	913	"arg_2"	"month_interval"	32	0	1	2
4631	914	"res_0"	"month_interval"	32	0	0	0
4632	914	"arg_1"	"time"	7	0	1	1
4633	914	"arg_2"	"month_interval"	32	0	1	2
4634	915	"res_0"	"month_interval"	32	0	0	0
4635	915	"arg_1"	"timetz"	7	0	1	1
4636	915	"arg_2"	"month_interval"	32	0	1	2
4637	916	"res_0"	"month_interval"	32	0	0	0
4638	916	"arg_1"	"date"	0	0	1	1
4639	916	"arg_2"	"month_interval"	32	0	1	2
4640	917	"res_0"	"month_interval"	32	0	0	0
4641	917	"arg_1"	"timestamp"	7	0	1	1
4642	917	"arg_2"	"month_interval"	32	0	1	2
4643	918	"res_0"	"month_interval"	32	0	0	0
4644	918	"arg_1"	"timestamptz"	7	0	1	1
4645	918	"arg_2"	"month_interval"	32	0	1	2
4646	919	"res_0"	"month_interval"	32	0	0	0
4647	919	"arg_1"	"blob"	0	0	1	1
4648	919	"arg_2"	"month_interval"	32	0	1	2
4649	920	"res_0"	"month_interval"	32	0	0	0
4650	920	"arg_1"	"geometry"	0	0	1	1
4651	920	"arg_2"	"month_interval"	32	0	1	2
4652	921	"res_0"	"month_interval"	32	0	0	0
4653	921	"arg_1"	"geometrya"	0	0	1	1
4654	921	"arg_2"	"month_interval"	32	0	1	2
4655	922	"res_0"	"month_interval"	32	0	0	0
4656	922	"arg_1"	"mbr"	0	0	1	1
4657	922	"arg_2"	"month_interval"	32	0	1	2
4658	923	"res_0"	"sec_interval"	13	0	0	0
4659	923	"arg_1"	"oid"	63	0	1	1
4660	923	"arg_2"	"sec_interval"	13	0	1	2
4661	924	"res_0"	"sec_interval"	13	0	0	0
4662	924	"arg_1"	"tinyint"	8	0	1	1
4663	924	"arg_2"	"sec_interval"	13	0	1	2
4664	925	"res_0"	"sec_interval"	13	0	0	0
4665	925	"arg_1"	"smallint"	16	0	1	1
4666	925	"arg_2"	"sec_interval"	13	0	1	2
4667	926	"res_0"	"sec_interval"	13	0	0	0
4668	926	"arg_1"	"int"	32	0	1	1
4669	926	"arg_2"	"sec_interval"	13	0	1	2
4670	927	"res_0"	"sec_interval"	13	0	0	0
4671	927	"arg_1"	"bigint"	64	0	1	1
4672	927	"arg_2"	"sec_interval"	13	0	1	2
4673	928	"res_0"	"sec_interval"	13	0	0	0
4674	928	"arg_1"	"wrd"	64	0	1	1
4675	928	"arg_2"	"sec_interval"	13	0	1	2
4676	929	"res_0"	"sec_interval"	13	0	0	0
4677	929	"arg_1"	"hugeint"	128	0	1	1
4678	929	"arg_2"	"sec_interval"	13	0	1	2
4679	930	"res_0"	"sec_interval"	13	0	0	0
4680	930	"arg_1"	"decimal"	2	0	1	1
4681	930	"arg_2"	"sec_interval"	13	0	1	2
4682	931	"res_0"	"sec_interval"	13	0	0	0
4683	931	"arg_1"	"decimal"	4	0	1	1
4684	931	"arg_2"	"sec_interval"	13	0	1	2
4685	932	"res_0"	"sec_interval"	13	0	0	0
4686	932	"arg_1"	"decimal"	9	0	1	1
4687	932	"arg_2"	"sec_interval"	13	0	1	2
4688	933	"res_0"	"sec_interval"	13	0	0	0
4689	933	"arg_1"	"decimal"	18	0	1	1
4690	933	"arg_2"	"sec_interval"	13	0	1	2
4691	934	"res_0"	"sec_interval"	13	0	0	0
4692	934	"arg_1"	"decimal"	39	0	1	1
4693	934	"arg_2"	"sec_interval"	13	0	1	2
4694	935	"res_0"	"sec_interval"	13	0	0	0
4695	935	"arg_1"	"real"	24	0	1	1
4696	935	"arg_2"	"sec_interval"	13	0	1	2
4697	936	"res_0"	"sec_interval"	13	0	0	0
4698	936	"arg_1"	"double"	53	0	1	1
4699	936	"arg_2"	"sec_interval"	13	0	1	2
4700	937	"res_0"	"sec_interval"	13	0	0	0
4701	937	"arg_1"	"month_interval"	32	0	1	1
4702	937	"arg_2"	"sec_interval"	13	0	1	2
4703	938	"res_0"	"sec_interval"	13	0	0	0
4704	938	"arg_1"	"sec_interval"	13	0	1	1
4705	938	"arg_2"	"sec_interval"	13	0	1	2
4706	939	"res_0"	"sec_interval"	13	0	0	0
4707	939	"arg_1"	"time"	7	0	1	1
4708	939	"arg_2"	"sec_interval"	13	0	1	2
4709	940	"res_0"	"sec_interval"	13	0	0	0
4710	940	"arg_1"	"timetz"	7	0	1	1
4711	940	"arg_2"	"sec_interval"	13	0	1	2
4712	941	"res_0"	"sec_interval"	13	0	0	0
4713	941	"arg_1"	"date"	0	0	1	1
4714	941	"arg_2"	"sec_interval"	13	0	1	2
4715	942	"res_0"	"sec_interval"	13	0	0	0
4716	942	"arg_1"	"timestamp"	7	0	1	1
4717	942	"arg_2"	"sec_interval"	13	0	1	2
4718	943	"res_0"	"sec_interval"	13	0	0	0
4719	943	"arg_1"	"timestamptz"	7	0	1	1
4720	943	"arg_2"	"sec_interval"	13	0	1	2
4721	944	"res_0"	"sec_interval"	13	0	0	0
4722	944	"arg_1"	"blob"	0	0	1	1
4723	944	"arg_2"	"sec_interval"	13	0	1	2
4724	945	"res_0"	"sec_interval"	13	0	0	0
4725	945	"arg_1"	"geometry"	0	0	1	1
4726	945	"arg_2"	"sec_interval"	13	0	1	2
4727	946	"res_0"	"sec_interval"	13	0	0	0
4728	946	"arg_1"	"geometrya"	0	0	1	1
4729	946	"arg_2"	"sec_interval"	13	0	1	2
4730	947	"res_0"	"sec_interval"	13	0	0	0
4731	947	"arg_1"	"mbr"	0	0	1	1
4732	947	"arg_2"	"sec_interval"	13	0	1	2
4733	948	"res_0"	"time"	7	0	0	0
4734	948	"arg_1"	"oid"	63	0	1	1
4735	948	"arg_2"	"time"	7	0	1	2
4736	949	"res_0"	"time"	7	0	0	0
4737	949	"arg_1"	"tinyint"	8	0	1	1
4738	949	"arg_2"	"time"	7	0	1	2
4739	950	"res_0"	"time"	7	0	0	0
4740	950	"arg_1"	"smallint"	16	0	1	1
4741	950	"arg_2"	"time"	7	0	1	2
4742	951	"res_0"	"time"	7	0	0	0
4743	951	"arg_1"	"int"	32	0	1	1
4744	951	"arg_2"	"time"	7	0	1	2
4745	952	"res_0"	"time"	7	0	0	0
4746	952	"arg_1"	"bigint"	64	0	1	1
4747	952	"arg_2"	"time"	7	0	1	2
4748	953	"res_0"	"time"	7	0	0	0
4749	953	"arg_1"	"wrd"	64	0	1	1
4750	953	"arg_2"	"time"	7	0	1	2
4751	954	"res_0"	"time"	7	0	0	0
4752	954	"arg_1"	"hugeint"	128	0	1	1
4753	954	"arg_2"	"time"	7	0	1	2
4754	955	"res_0"	"time"	7	0	0	0
4755	955	"arg_1"	"decimal"	2	0	1	1
4756	955	"arg_2"	"time"	7	0	1	2
4757	956	"res_0"	"time"	7	0	0	0
4758	956	"arg_1"	"decimal"	4	0	1	1
4759	956	"arg_2"	"time"	7	0	1	2
4760	957	"res_0"	"time"	7	0	0	0
4761	957	"arg_1"	"decimal"	9	0	1	1
4762	957	"arg_2"	"time"	7	0	1	2
4763	958	"res_0"	"time"	7	0	0	0
4764	958	"arg_1"	"decimal"	18	0	1	1
4765	958	"arg_2"	"time"	7	0	1	2
4766	959	"res_0"	"time"	7	0	0	0
4767	959	"arg_1"	"decimal"	39	0	1	1
4768	959	"arg_2"	"time"	7	0	1	2
4769	960	"res_0"	"time"	7	0	0	0
4770	960	"arg_1"	"real"	24	0	1	1
4771	960	"arg_2"	"time"	7	0	1	2
4772	961	"res_0"	"time"	7	0	0	0
4773	961	"arg_1"	"double"	53	0	1	1
4774	961	"arg_2"	"time"	7	0	1	2
4775	962	"res_0"	"time"	7	0	0	0
4776	962	"arg_1"	"month_interval"	32	0	1	1
4777	962	"arg_2"	"time"	7	0	1	2
4778	963	"res_0"	"time"	7	0	0	0
4779	963	"arg_1"	"sec_interval"	13	0	1	1
4780	963	"arg_2"	"time"	7	0	1	2
4781	964	"res_0"	"time"	7	0	0	0
4782	964	"arg_1"	"time"	7	0	1	1
4783	964	"arg_2"	"time"	7	0	1	2
4784	965	"res_0"	"time"	7	0	0	0
4785	965	"arg_1"	"timetz"	7	0	1	1
4786	965	"arg_2"	"time"	7	0	1	2
4787	966	"res_0"	"time"	7	0	0	0
4788	966	"arg_1"	"date"	0	0	1	1
4789	966	"arg_2"	"time"	7	0	1	2
4790	967	"res_0"	"time"	7	0	0	0
4791	967	"arg_1"	"timestamp"	7	0	1	1
4792	967	"arg_2"	"time"	7	0	1	2
4793	968	"res_0"	"time"	7	0	0	0
4794	968	"arg_1"	"timestamptz"	7	0	1	1
4795	968	"arg_2"	"time"	7	0	1	2
4796	969	"res_0"	"time"	7	0	0	0
4797	969	"arg_1"	"blob"	0	0	1	1
4798	969	"arg_2"	"time"	7	0	1	2
4799	970	"res_0"	"time"	7	0	0	0
4800	970	"arg_1"	"geometry"	0	0	1	1
4801	970	"arg_2"	"time"	7	0	1	2
4802	971	"res_0"	"time"	7	0	0	0
4803	971	"arg_1"	"geometrya"	0	0	1	1
4804	971	"arg_2"	"time"	7	0	1	2
4805	972	"res_0"	"time"	7	0	0	0
4806	972	"arg_1"	"mbr"	0	0	1	1
4807	972	"arg_2"	"time"	7	0	1	2
4808	973	"res_0"	"timetz"	7	0	0	0
4809	973	"arg_1"	"oid"	63	0	1	1
4810	973	"arg_2"	"timetz"	7	0	1	2
4811	974	"res_0"	"timetz"	7	0	0	0
4812	974	"arg_1"	"tinyint"	8	0	1	1
4813	974	"arg_2"	"timetz"	7	0	1	2
4814	975	"res_0"	"timetz"	7	0	0	0
4815	975	"arg_1"	"smallint"	16	0	1	1
4816	975	"arg_2"	"timetz"	7	0	1	2
4817	976	"res_0"	"timetz"	7	0	0	0
4818	976	"arg_1"	"int"	32	0	1	1
4819	976	"arg_2"	"timetz"	7	0	1	2
4820	977	"res_0"	"timetz"	7	0	0	0
4821	977	"arg_1"	"bigint"	64	0	1	1
4822	977	"arg_2"	"timetz"	7	0	1	2
4823	978	"res_0"	"timetz"	7	0	0	0
4824	978	"arg_1"	"wrd"	64	0	1	1
4825	978	"arg_2"	"timetz"	7	0	1	2
4826	979	"res_0"	"timetz"	7	0	0	0
4827	979	"arg_1"	"hugeint"	128	0	1	1
4828	979	"arg_2"	"timetz"	7	0	1	2
4829	980	"res_0"	"timetz"	7	0	0	0
4830	980	"arg_1"	"decimal"	2	0	1	1
4831	980	"arg_2"	"timetz"	7	0	1	2
4832	981	"res_0"	"timetz"	7	0	0	0
4833	981	"arg_1"	"decimal"	4	0	1	1
4834	981	"arg_2"	"timetz"	7	0	1	2
4835	982	"res_0"	"timetz"	7	0	0	0
4836	982	"arg_1"	"decimal"	9	0	1	1
4837	982	"arg_2"	"timetz"	7	0	1	2
4838	983	"res_0"	"timetz"	7	0	0	0
4839	983	"arg_1"	"decimal"	18	0	1	1
4840	983	"arg_2"	"timetz"	7	0	1	2
4841	984	"res_0"	"timetz"	7	0	0	0
4842	984	"arg_1"	"decimal"	39	0	1	1
4843	984	"arg_2"	"timetz"	7	0	1	2
4844	985	"res_0"	"timetz"	7	0	0	0
4845	985	"arg_1"	"real"	24	0	1	1
4846	985	"arg_2"	"timetz"	7	0	1	2
4847	986	"res_0"	"timetz"	7	0	0	0
4848	986	"arg_1"	"double"	53	0	1	1
4849	986	"arg_2"	"timetz"	7	0	1	2
4850	987	"res_0"	"timetz"	7	0	0	0
4851	987	"arg_1"	"month_interval"	32	0	1	1
4852	987	"arg_2"	"timetz"	7	0	1	2
4853	988	"res_0"	"timetz"	7	0	0	0
4854	988	"arg_1"	"sec_interval"	13	0	1	1
4855	988	"arg_2"	"timetz"	7	0	1	2
4856	989	"res_0"	"timetz"	7	0	0	0
4857	989	"arg_1"	"time"	7	0	1	1
4858	989	"arg_2"	"timetz"	7	0	1	2
4859	990	"res_0"	"timetz"	7	0	0	0
4860	990	"arg_1"	"timetz"	7	0	1	1
4861	990	"arg_2"	"timetz"	7	0	1	2
4862	991	"res_0"	"timetz"	7	0	0	0
4863	991	"arg_1"	"date"	0	0	1	1
4864	991	"arg_2"	"timetz"	7	0	1	2
4865	992	"res_0"	"timetz"	7	0	0	0
4866	992	"arg_1"	"timestamp"	7	0	1	1
4867	992	"arg_2"	"timetz"	7	0	1	2
4868	993	"res_0"	"timetz"	7	0	0	0
4869	993	"arg_1"	"timestamptz"	7	0	1	1
4870	993	"arg_2"	"timetz"	7	0	1	2
4871	994	"res_0"	"timetz"	7	0	0	0
4872	994	"arg_1"	"blob"	0	0	1	1
4873	994	"arg_2"	"timetz"	7	0	1	2
4874	995	"res_0"	"timetz"	7	0	0	0
4875	995	"arg_1"	"geometry"	0	0	1	1
4876	995	"arg_2"	"timetz"	7	0	1	2
4877	996	"res_0"	"timetz"	7	0	0	0
4878	996	"arg_1"	"geometrya"	0	0	1	1
4879	996	"arg_2"	"timetz"	7	0	1	2
4880	997	"res_0"	"timetz"	7	0	0	0
4881	997	"arg_1"	"mbr"	0	0	1	1
4882	997	"arg_2"	"timetz"	7	0	1	2
4883	998	"res_0"	"date"	0	0	0	0
4884	998	"arg_1"	"oid"	63	0	1	1
4885	998	"arg_2"	"date"	0	0	1	2
4886	999	"res_0"	"date"	0	0	0	0
4887	999	"arg_1"	"tinyint"	8	0	1	1
4888	999	"arg_2"	"date"	0	0	1	2
4889	1000	"res_0"	"date"	0	0	0	0
4890	1000	"arg_1"	"smallint"	16	0	1	1
4891	1000	"arg_2"	"date"	0	0	1	2
4892	1001	"res_0"	"date"	0	0	0	0
4893	1001	"arg_1"	"int"	32	0	1	1
4894	1001	"arg_2"	"date"	0	0	1	2
4895	1002	"res_0"	"date"	0	0	0	0
4896	1002	"arg_1"	"bigint"	64	0	1	1
4897	1002	"arg_2"	"date"	0	0	1	2
4898	1003	"res_0"	"date"	0	0	0	0
4899	1003	"arg_1"	"wrd"	64	0	1	1
4900	1003	"arg_2"	"date"	0	0	1	2
4901	1004	"res_0"	"date"	0	0	0	0
4902	1004	"arg_1"	"hugeint"	128	0	1	1
4903	1004	"arg_2"	"date"	0	0	1	2
4904	1005	"res_0"	"date"	0	0	0	0
4905	1005	"arg_1"	"decimal"	2	0	1	1
4906	1005	"arg_2"	"date"	0	0	1	2
4907	1006	"res_0"	"date"	0	0	0	0
4908	1006	"arg_1"	"decimal"	4	0	1	1
4909	1006	"arg_2"	"date"	0	0	1	2
4910	1007	"res_0"	"date"	0	0	0	0
4911	1007	"arg_1"	"decimal"	9	0	1	1
4912	1007	"arg_2"	"date"	0	0	1	2
4913	1008	"res_0"	"date"	0	0	0	0
4914	1008	"arg_1"	"decimal"	18	0	1	1
4915	1008	"arg_2"	"date"	0	0	1	2
4916	1009	"res_0"	"date"	0	0	0	0
4917	1009	"arg_1"	"decimal"	39	0	1	1
4918	1009	"arg_2"	"date"	0	0	1	2
4919	1010	"res_0"	"date"	0	0	0	0
4920	1010	"arg_1"	"real"	24	0	1	1
4921	1010	"arg_2"	"date"	0	0	1	2
4922	1011	"res_0"	"date"	0	0	0	0
4923	1011	"arg_1"	"double"	53	0	1	1
4924	1011	"arg_2"	"date"	0	0	1	2
4925	1012	"res_0"	"date"	0	0	0	0
4926	1012	"arg_1"	"month_interval"	32	0	1	1
4927	1012	"arg_2"	"date"	0	0	1	2
4928	1013	"res_0"	"date"	0	0	0	0
4929	1013	"arg_1"	"sec_interval"	13	0	1	1
4930	1013	"arg_2"	"date"	0	0	1	2
4931	1014	"res_0"	"date"	0	0	0	0
4932	1014	"arg_1"	"time"	7	0	1	1
4933	1014	"arg_2"	"date"	0	0	1	2
4934	1015	"res_0"	"date"	0	0	0	0
4935	1015	"arg_1"	"timetz"	7	0	1	1
4936	1015	"arg_2"	"date"	0	0	1	2
4937	1016	"res_0"	"date"	0	0	0	0
4938	1016	"arg_1"	"date"	0	0	1	1
4939	1016	"arg_2"	"date"	0	0	1	2
4940	1017	"res_0"	"date"	0	0	0	0
4941	1017	"arg_1"	"timestamp"	7	0	1	1
4942	1017	"arg_2"	"date"	0	0	1	2
4943	1018	"res_0"	"date"	0	0	0	0
4944	1018	"arg_1"	"timestamptz"	7	0	1	1
4945	1018	"arg_2"	"date"	0	0	1	2
4946	1019	"res_0"	"date"	0	0	0	0
4947	1019	"arg_1"	"blob"	0	0	1	1
4948	1019	"arg_2"	"date"	0	0	1	2
4949	1020	"res_0"	"date"	0	0	0	0
4950	1020	"arg_1"	"geometry"	0	0	1	1
4951	1020	"arg_2"	"date"	0	0	1	2
4952	1021	"res_0"	"date"	0	0	0	0
4953	1021	"arg_1"	"geometrya"	0	0	1	1
4954	1021	"arg_2"	"date"	0	0	1	2
4955	1022	"res_0"	"date"	0	0	0	0
4956	1022	"arg_1"	"mbr"	0	0	1	1
4957	1022	"arg_2"	"date"	0	0	1	2
4958	1023	"res_0"	"timestamp"	7	0	0	0
4959	1023	"arg_1"	"oid"	63	0	1	1
4960	1023	"arg_2"	"timestamp"	7	0	1	2
4961	1024	"res_0"	"timestamp"	7	0	0	0
4962	1024	"arg_1"	"tinyint"	8	0	1	1
4963	1024	"arg_2"	"timestamp"	7	0	1	2
4964	1025	"res_0"	"timestamp"	7	0	0	0
4965	1025	"arg_1"	"smallint"	16	0	1	1
4966	1025	"arg_2"	"timestamp"	7	0	1	2
4967	1026	"res_0"	"timestamp"	7	0	0	0
4968	1026	"arg_1"	"int"	32	0	1	1
4969	1026	"arg_2"	"timestamp"	7	0	1	2
4970	1027	"res_0"	"timestamp"	7	0	0	0
4971	1027	"arg_1"	"bigint"	64	0	1	1
4972	1027	"arg_2"	"timestamp"	7	0	1	2
4973	1028	"res_0"	"timestamp"	7	0	0	0
4974	1028	"arg_1"	"wrd"	64	0	1	1
4975	1028	"arg_2"	"timestamp"	7	0	1	2
4976	1029	"res_0"	"timestamp"	7	0	0	0
4977	1029	"arg_1"	"hugeint"	128	0	1	1
4978	1029	"arg_2"	"timestamp"	7	0	1	2
4979	1030	"res_0"	"timestamp"	7	0	0	0
4980	1030	"arg_1"	"decimal"	2	0	1	1
4981	1030	"arg_2"	"timestamp"	7	0	1	2
4982	1031	"res_0"	"timestamp"	7	0	0	0
4983	1031	"arg_1"	"decimal"	4	0	1	1
4984	1031	"arg_2"	"timestamp"	7	0	1	2
4985	1032	"res_0"	"timestamp"	7	0	0	0
4986	1032	"arg_1"	"decimal"	9	0	1	1
4987	1032	"arg_2"	"timestamp"	7	0	1	2
4988	1033	"res_0"	"timestamp"	7	0	0	0
4989	1033	"arg_1"	"decimal"	18	0	1	1
4990	1033	"arg_2"	"timestamp"	7	0	1	2
4991	1034	"res_0"	"timestamp"	7	0	0	0
4992	1034	"arg_1"	"decimal"	39	0	1	1
4993	1034	"arg_2"	"timestamp"	7	0	1	2
4994	1035	"res_0"	"timestamp"	7	0	0	0
4995	1035	"arg_1"	"real"	24	0	1	1
4996	1035	"arg_2"	"timestamp"	7	0	1	2
4997	1036	"res_0"	"timestamp"	7	0	0	0
4998	1036	"arg_1"	"double"	53	0	1	1
4999	1036	"arg_2"	"timestamp"	7	0	1	2
5000	1037	"res_0"	"timestamp"	7	0	0	0
5001	1037	"arg_1"	"month_interval"	32	0	1	1
5002	1037	"arg_2"	"timestamp"	7	0	1	2
5003	1038	"res_0"	"timestamp"	7	0	0	0
5004	1038	"arg_1"	"sec_interval"	13	0	1	1
5005	1038	"arg_2"	"timestamp"	7	0	1	2
5006	1039	"res_0"	"timestamp"	7	0	0	0
5007	1039	"arg_1"	"time"	7	0	1	1
5008	1039	"arg_2"	"timestamp"	7	0	1	2
5009	1040	"res_0"	"timestamp"	7	0	0	0
5010	1040	"arg_1"	"timetz"	7	0	1	1
5011	1040	"arg_2"	"timestamp"	7	0	1	2
5012	1041	"res_0"	"timestamp"	7	0	0	0
5013	1041	"arg_1"	"date"	0	0	1	1
5014	1041	"arg_2"	"timestamp"	7	0	1	2
5015	1042	"res_0"	"timestamp"	7	0	0	0
5016	1042	"arg_1"	"timestamp"	7	0	1	1
5017	1042	"arg_2"	"timestamp"	7	0	1	2
5018	1043	"res_0"	"timestamp"	7	0	0	0
5019	1043	"arg_1"	"timestamptz"	7	0	1	1
5020	1043	"arg_2"	"timestamp"	7	0	1	2
5021	1044	"res_0"	"timestamp"	7	0	0	0
5022	1044	"arg_1"	"blob"	0	0	1	1
5023	1044	"arg_2"	"timestamp"	7	0	1	2
5024	1045	"res_0"	"timestamp"	7	0	0	0
5025	1045	"arg_1"	"geometry"	0	0	1	1
5026	1045	"arg_2"	"timestamp"	7	0	1	2
5027	1046	"res_0"	"timestamp"	7	0	0	0
5028	1046	"arg_1"	"geometrya"	0	0	1	1
5029	1046	"arg_2"	"timestamp"	7	0	1	2
5030	1047	"res_0"	"timestamp"	7	0	0	0
5031	1047	"arg_1"	"mbr"	0	0	1	1
5032	1047	"arg_2"	"timestamp"	7	0	1	2
5033	1048	"res_0"	"timestamptz"	7	0	0	0
5034	1048	"arg_1"	"oid"	63	0	1	1
5035	1048	"arg_2"	"timestamptz"	7	0	1	2
5036	1049	"res_0"	"timestamptz"	7	0	0	0
5037	1049	"arg_1"	"tinyint"	8	0	1	1
5038	1049	"arg_2"	"timestamptz"	7	0	1	2
5039	1050	"res_0"	"timestamptz"	7	0	0	0
5040	1050	"arg_1"	"smallint"	16	0	1	1
5041	1050	"arg_2"	"timestamptz"	7	0	1	2
5042	1051	"res_0"	"timestamptz"	7	0	0	0
5043	1051	"arg_1"	"int"	32	0	1	1
5044	1051	"arg_2"	"timestamptz"	7	0	1	2
5045	1052	"res_0"	"timestamptz"	7	0	0	0
5046	1052	"arg_1"	"bigint"	64	0	1	1
5047	1052	"arg_2"	"timestamptz"	7	0	1	2
5048	1053	"res_0"	"timestamptz"	7	0	0	0
5049	1053	"arg_1"	"wrd"	64	0	1	1
5050	1053	"arg_2"	"timestamptz"	7	0	1	2
5051	1054	"res_0"	"timestamptz"	7	0	0	0
5052	1054	"arg_1"	"hugeint"	128	0	1	1
5053	1054	"arg_2"	"timestamptz"	7	0	1	2
5054	1055	"res_0"	"timestamptz"	7	0	0	0
5055	1055	"arg_1"	"decimal"	2	0	1	1
5056	1055	"arg_2"	"timestamptz"	7	0	1	2
5057	1056	"res_0"	"timestamptz"	7	0	0	0
5058	1056	"arg_1"	"decimal"	4	0	1	1
5059	1056	"arg_2"	"timestamptz"	7	0	1	2
5060	1057	"res_0"	"timestamptz"	7	0	0	0
5061	1057	"arg_1"	"decimal"	9	0	1	1
5062	1057	"arg_2"	"timestamptz"	7	0	1	2
5063	1058	"res_0"	"timestamptz"	7	0	0	0
5064	1058	"arg_1"	"decimal"	18	0	1	1
5065	1058	"arg_2"	"timestamptz"	7	0	1	2
5066	1059	"res_0"	"timestamptz"	7	0	0	0
5067	1059	"arg_1"	"decimal"	39	0	1	1
5068	1059	"arg_2"	"timestamptz"	7	0	1	2
5069	1060	"res_0"	"timestamptz"	7	0	0	0
5070	1060	"arg_1"	"real"	24	0	1	1
5071	1060	"arg_2"	"timestamptz"	7	0	1	2
5072	1061	"res_0"	"timestamptz"	7	0	0	0
5073	1061	"arg_1"	"double"	53	0	1	1
5074	1061	"arg_2"	"timestamptz"	7	0	1	2
5075	1062	"res_0"	"timestamptz"	7	0	0	0
5076	1062	"arg_1"	"month_interval"	32	0	1	1
5077	1062	"arg_2"	"timestamptz"	7	0	1	2
5078	1063	"res_0"	"timestamptz"	7	0	0	0
5079	1063	"arg_1"	"sec_interval"	13	0	1	1
5080	1063	"arg_2"	"timestamptz"	7	0	1	2
5081	1064	"res_0"	"timestamptz"	7	0	0	0
5082	1064	"arg_1"	"time"	7	0	1	1
5083	1064	"arg_2"	"timestamptz"	7	0	1	2
5084	1065	"res_0"	"timestamptz"	7	0	0	0
5085	1065	"arg_1"	"timetz"	7	0	1	1
5086	1065	"arg_2"	"timestamptz"	7	0	1	2
5087	1066	"res_0"	"timestamptz"	7	0	0	0
5088	1066	"arg_1"	"date"	0	0	1	1
5089	1066	"arg_2"	"timestamptz"	7	0	1	2
5090	1067	"res_0"	"timestamptz"	7	0	0	0
5091	1067	"arg_1"	"timestamp"	7	0	1	1
5092	1067	"arg_2"	"timestamptz"	7	0	1	2
5093	1068	"res_0"	"timestamptz"	7	0	0	0
5094	1068	"arg_1"	"timestamptz"	7	0	1	1
5095	1068	"arg_2"	"timestamptz"	7	0	1	2
5096	1069	"res_0"	"timestamptz"	7	0	0	0
5097	1069	"arg_1"	"blob"	0	0	1	1
5098	1069	"arg_2"	"timestamptz"	7	0	1	2
5099	1070	"res_0"	"timestamptz"	7	0	0	0
5100	1070	"arg_1"	"geometry"	0	0	1	1
5101	1070	"arg_2"	"timestamptz"	7	0	1	2
5102	1071	"res_0"	"timestamptz"	7	0	0	0
5103	1071	"arg_1"	"geometrya"	0	0	1	1
5104	1071	"arg_2"	"timestamptz"	7	0	1	2
5105	1072	"res_0"	"timestamptz"	7	0	0	0
5106	1072	"arg_1"	"mbr"	0	0	1	1
5107	1072	"arg_2"	"timestamptz"	7	0	1	2
5108	1073	"res_0"	"blob"	0	0	0	0
5109	1073	"arg_1"	"oid"	63	0	1	1
5110	1073	"arg_2"	"blob"	0	0	1	2
5111	1074	"res_0"	"blob"	0	0	0	0
5112	1074	"arg_1"	"tinyint"	8	0	1	1
5113	1074	"arg_2"	"blob"	0	0	1	2
5114	1075	"res_0"	"blob"	0	0	0	0
5115	1075	"arg_1"	"smallint"	16	0	1	1
5116	1075	"arg_2"	"blob"	0	0	1	2
5117	1076	"res_0"	"blob"	0	0	0	0
5118	1076	"arg_1"	"int"	32	0	1	1
5119	1076	"arg_2"	"blob"	0	0	1	2
5120	1077	"res_0"	"blob"	0	0	0	0
5121	1077	"arg_1"	"bigint"	64	0	1	1
5122	1077	"arg_2"	"blob"	0	0	1	2
5123	1078	"res_0"	"blob"	0	0	0	0
5124	1078	"arg_1"	"wrd"	64	0	1	1
5125	1078	"arg_2"	"blob"	0	0	1	2
5126	1079	"res_0"	"blob"	0	0	0	0
5127	1079	"arg_1"	"hugeint"	128	0	1	1
5128	1079	"arg_2"	"blob"	0	0	1	2
5129	1080	"res_0"	"blob"	0	0	0	0
5130	1080	"arg_1"	"decimal"	2	0	1	1
5131	1080	"arg_2"	"blob"	0	0	1	2
5132	1081	"res_0"	"blob"	0	0	0	0
5133	1081	"arg_1"	"decimal"	4	0	1	1
5134	1081	"arg_2"	"blob"	0	0	1	2
5135	1082	"res_0"	"blob"	0	0	0	0
5136	1082	"arg_1"	"decimal"	9	0	1	1
5137	1082	"arg_2"	"blob"	0	0	1	2
5138	1083	"res_0"	"blob"	0	0	0	0
5139	1083	"arg_1"	"decimal"	18	0	1	1
5140	1083	"arg_2"	"blob"	0	0	1	2
5141	1084	"res_0"	"blob"	0	0	0	0
5142	1084	"arg_1"	"decimal"	39	0	1	1
5143	1084	"arg_2"	"blob"	0	0	1	2
5144	1085	"res_0"	"blob"	0	0	0	0
5145	1085	"arg_1"	"real"	24	0	1	1
5146	1085	"arg_2"	"blob"	0	0	1	2
5147	1086	"res_0"	"blob"	0	0	0	0
5148	1086	"arg_1"	"double"	53	0	1	1
5149	1086	"arg_2"	"blob"	0	0	1	2
5150	1087	"res_0"	"blob"	0	0	0	0
5151	1087	"arg_1"	"month_interval"	32	0	1	1
5152	1087	"arg_2"	"blob"	0	0	1	2
5153	1088	"res_0"	"blob"	0	0	0	0
5154	1088	"arg_1"	"sec_interval"	13	0	1	1
5155	1088	"arg_2"	"blob"	0	0	1	2
5156	1089	"res_0"	"blob"	0	0	0	0
5157	1089	"arg_1"	"time"	7	0	1	1
5158	1089	"arg_2"	"blob"	0	0	1	2
5159	1090	"res_0"	"blob"	0	0	0	0
5160	1090	"arg_1"	"timetz"	7	0	1	1
5161	1090	"arg_2"	"blob"	0	0	1	2
5162	1091	"res_0"	"blob"	0	0	0	0
5163	1091	"arg_1"	"date"	0	0	1	1
5164	1091	"arg_2"	"blob"	0	0	1	2
5165	1092	"res_0"	"blob"	0	0	0	0
5166	1092	"arg_1"	"timestamp"	7	0	1	1
5167	1092	"arg_2"	"blob"	0	0	1	2
5168	1093	"res_0"	"blob"	0	0	0	0
5169	1093	"arg_1"	"timestamptz"	7	0	1	1
5170	1093	"arg_2"	"blob"	0	0	1	2
5171	1094	"res_0"	"blob"	0	0	0	0
5172	1094	"arg_1"	"blob"	0	0	1	1
5173	1094	"arg_2"	"blob"	0	0	1	2
5174	1095	"res_0"	"blob"	0	0	0	0
5175	1095	"arg_1"	"geometry"	0	0	1	1
5176	1095	"arg_2"	"blob"	0	0	1	2
5177	1096	"res_0"	"blob"	0	0	0	0
5178	1096	"arg_1"	"geometrya"	0	0	1	1
5179	1096	"arg_2"	"blob"	0	0	1	2
5180	1097	"res_0"	"blob"	0	0	0	0
5181	1097	"arg_1"	"mbr"	0	0	1	1
5182	1097	"arg_2"	"blob"	0	0	1	2
5183	1098	"res_0"	"geometry"	0	0	0	0
5184	1098	"arg_1"	"oid"	63	0	1	1
5185	1098	"arg_2"	"geometry"	0	0	1	2
5186	1099	"res_0"	"geometry"	0	0	0	0
5187	1099	"arg_1"	"tinyint"	8	0	1	1
5188	1099	"arg_2"	"geometry"	0	0	1	2
5189	1100	"res_0"	"geometry"	0	0	0	0
5190	1100	"arg_1"	"smallint"	16	0	1	1
5191	1100	"arg_2"	"geometry"	0	0	1	2
5192	1101	"res_0"	"geometry"	0	0	0	0
5193	1101	"arg_1"	"int"	32	0	1	1
5194	1101	"arg_2"	"geometry"	0	0	1	2
5195	1102	"res_0"	"geometry"	0	0	0	0
5196	1102	"arg_1"	"bigint"	64	0	1	1
5197	1102	"arg_2"	"geometry"	0	0	1	2
5198	1103	"res_0"	"geometry"	0	0	0	0
5199	1103	"arg_1"	"wrd"	64	0	1	1
5200	1103	"arg_2"	"geometry"	0	0	1	2
5201	1104	"res_0"	"geometry"	0	0	0	0
5202	1104	"arg_1"	"hugeint"	128	0	1	1
5203	1104	"arg_2"	"geometry"	0	0	1	2
5204	1105	"res_0"	"geometry"	0	0	0	0
5205	1105	"arg_1"	"decimal"	2	0	1	1
5206	1105	"arg_2"	"geometry"	0	0	1	2
5207	1106	"res_0"	"geometry"	0	0	0	0
5208	1106	"arg_1"	"decimal"	4	0	1	1
5209	1106	"arg_2"	"geometry"	0	0	1	2
5210	1107	"res_0"	"geometry"	0	0	0	0
5211	1107	"arg_1"	"decimal"	9	0	1	1
5212	1107	"arg_2"	"geometry"	0	0	1	2
5213	1108	"res_0"	"geometry"	0	0	0	0
5214	1108	"arg_1"	"decimal"	18	0	1	1
5215	1108	"arg_2"	"geometry"	0	0	1	2
5216	1109	"res_0"	"geometry"	0	0	0	0
5217	1109	"arg_1"	"decimal"	39	0	1	1
5218	1109	"arg_2"	"geometry"	0	0	1	2
5219	1110	"res_0"	"geometry"	0	0	0	0
5220	1110	"arg_1"	"real"	24	0	1	1
5221	1110	"arg_2"	"geometry"	0	0	1	2
5222	1111	"res_0"	"geometry"	0	0	0	0
5223	1111	"arg_1"	"double"	53	0	1	1
5224	1111	"arg_2"	"geometry"	0	0	1	2
5225	1112	"res_0"	"geometry"	0	0	0	0
5226	1112	"arg_1"	"month_interval"	32	0	1	1
5227	1112	"arg_2"	"geometry"	0	0	1	2
5228	1113	"res_0"	"geometry"	0	0	0	0
5229	1113	"arg_1"	"sec_interval"	13	0	1	1
5230	1113	"arg_2"	"geometry"	0	0	1	2
5231	1114	"res_0"	"geometry"	0	0	0	0
5232	1114	"arg_1"	"time"	7	0	1	1
5233	1114	"arg_2"	"geometry"	0	0	1	2
5234	1115	"res_0"	"geometry"	0	0	0	0
5235	1115	"arg_1"	"timetz"	7	0	1	1
5236	1115	"arg_2"	"geometry"	0	0	1	2
5237	1116	"res_0"	"geometry"	0	0	0	0
5238	1116	"arg_1"	"date"	0	0	1	1
5239	1116	"arg_2"	"geometry"	0	0	1	2
5240	1117	"res_0"	"geometry"	0	0	0	0
5241	1117	"arg_1"	"timestamp"	7	0	1	1
5242	1117	"arg_2"	"geometry"	0	0	1	2
5243	1118	"res_0"	"geometry"	0	0	0	0
5244	1118	"arg_1"	"timestamptz"	7	0	1	1
5245	1118	"arg_2"	"geometry"	0	0	1	2
5246	1119	"res_0"	"geometry"	0	0	0	0
5247	1119	"arg_1"	"blob"	0	0	1	1
5248	1119	"arg_2"	"geometry"	0	0	1	2
5249	1120	"res_0"	"geometry"	0	0	0	0
5250	1120	"arg_1"	"geometry"	0	0	1	1
5251	1120	"arg_2"	"geometry"	0	0	1	2
5252	1121	"res_0"	"geometry"	0	0	0	0
5253	1121	"arg_1"	"geometrya"	0	0	1	1
5254	1121	"arg_2"	"geometry"	0	0	1	2
5255	1122	"res_0"	"geometry"	0	0	0	0
5256	1122	"arg_1"	"mbr"	0	0	1	1
5257	1122	"arg_2"	"geometry"	0	0	1	2
5258	1123	"res_0"	"geometrya"	0	0	0	0
5259	1123	"arg_1"	"oid"	63	0	1	1
5260	1123	"arg_2"	"geometrya"	0	0	1	2
5261	1124	"res_0"	"geometrya"	0	0	0	0
5262	1124	"arg_1"	"tinyint"	8	0	1	1
5263	1124	"arg_2"	"geometrya"	0	0	1	2
5264	1125	"res_0"	"geometrya"	0	0	0	0
5265	1125	"arg_1"	"smallint"	16	0	1	1
5266	1125	"arg_2"	"geometrya"	0	0	1	2
5267	1126	"res_0"	"geometrya"	0	0	0	0
5268	1126	"arg_1"	"int"	32	0	1	1
5269	1126	"arg_2"	"geometrya"	0	0	1	2
5270	1127	"res_0"	"geometrya"	0	0	0	0
5271	1127	"arg_1"	"bigint"	64	0	1	1
5272	1127	"arg_2"	"geometrya"	0	0	1	2
5273	1128	"res_0"	"geometrya"	0	0	0	0
5274	1128	"arg_1"	"wrd"	64	0	1	1
5275	1128	"arg_2"	"geometrya"	0	0	1	2
5276	1129	"res_0"	"geometrya"	0	0	0	0
5277	1129	"arg_1"	"hugeint"	128	0	1	1
5278	1129	"arg_2"	"geometrya"	0	0	1	2
5279	1130	"res_0"	"geometrya"	0	0	0	0
5280	1130	"arg_1"	"decimal"	2	0	1	1
5281	1130	"arg_2"	"geometrya"	0	0	1	2
5282	1131	"res_0"	"geometrya"	0	0	0	0
5283	1131	"arg_1"	"decimal"	4	0	1	1
5284	1131	"arg_2"	"geometrya"	0	0	1	2
5285	1132	"res_0"	"geometrya"	0	0	0	0
5286	1132	"arg_1"	"decimal"	9	0	1	1
5287	1132	"arg_2"	"geometrya"	0	0	1	2
5288	1133	"res_0"	"geometrya"	0	0	0	0
5289	1133	"arg_1"	"decimal"	18	0	1	1
5290	1133	"arg_2"	"geometrya"	0	0	1	2
5291	1134	"res_0"	"geometrya"	0	0	0	0
5292	1134	"arg_1"	"decimal"	39	0	1	1
5293	1134	"arg_2"	"geometrya"	0	0	1	2
5294	1135	"res_0"	"geometrya"	0	0	0	0
5295	1135	"arg_1"	"real"	24	0	1	1
5296	1135	"arg_2"	"geometrya"	0	0	1	2
5297	1136	"res_0"	"geometrya"	0	0	0	0
5298	1136	"arg_1"	"double"	53	0	1	1
5299	1136	"arg_2"	"geometrya"	0	0	1	2
5300	1137	"res_0"	"geometrya"	0	0	0	0
5301	1137	"arg_1"	"month_interval"	32	0	1	1
5302	1137	"arg_2"	"geometrya"	0	0	1	2
5303	1138	"res_0"	"geometrya"	0	0	0	0
5304	1138	"arg_1"	"sec_interval"	13	0	1	1
5305	1138	"arg_2"	"geometrya"	0	0	1	2
5306	1139	"res_0"	"geometrya"	0	0	0	0
5307	1139	"arg_1"	"time"	7	0	1	1
5308	1139	"arg_2"	"geometrya"	0	0	1	2
5309	1140	"res_0"	"geometrya"	0	0	0	0
5310	1140	"arg_1"	"timetz"	7	0	1	1
5311	1140	"arg_2"	"geometrya"	0	0	1	2
5312	1141	"res_0"	"geometrya"	0	0	0	0
5313	1141	"arg_1"	"date"	0	0	1	1
5314	1141	"arg_2"	"geometrya"	0	0	1	2
5315	1142	"res_0"	"geometrya"	0	0	0	0
5316	1142	"arg_1"	"timestamp"	7	0	1	1
5317	1142	"arg_2"	"geometrya"	0	0	1	2
5318	1143	"res_0"	"geometrya"	0	0	0	0
5319	1143	"arg_1"	"timestamptz"	7	0	1	1
5320	1143	"arg_2"	"geometrya"	0	0	1	2
5321	1144	"res_0"	"geometrya"	0	0	0	0
5322	1144	"arg_1"	"blob"	0	0	1	1
5323	1144	"arg_2"	"geometrya"	0	0	1	2
5324	1145	"res_0"	"geometrya"	0	0	0	0
5325	1145	"arg_1"	"geometry"	0	0	1	1
5326	1145	"arg_2"	"geometrya"	0	0	1	2
5327	1146	"res_0"	"geometrya"	0	0	0	0
5328	1146	"arg_1"	"geometrya"	0	0	1	1
5329	1146	"arg_2"	"geometrya"	0	0	1	2
5330	1147	"res_0"	"geometrya"	0	0	0	0
5331	1147	"arg_1"	"mbr"	0	0	1	1
5332	1147	"arg_2"	"geometrya"	0	0	1	2
5333	1148	"res_0"	"mbr"	0	0	0	0
5334	1148	"arg_1"	"oid"	63	0	1	1
5335	1148	"arg_2"	"mbr"	0	0	1	2
5336	1149	"res_0"	"mbr"	0	0	0	0
5337	1149	"arg_1"	"tinyint"	8	0	1	1
5338	1149	"arg_2"	"mbr"	0	0	1	2
5339	1150	"res_0"	"mbr"	0	0	0	0
5340	1150	"arg_1"	"smallint"	16	0	1	1
5341	1150	"arg_2"	"mbr"	0	0	1	2
5342	1151	"res_0"	"mbr"	0	0	0	0
5343	1151	"arg_1"	"int"	32	0	1	1
5344	1151	"arg_2"	"mbr"	0	0	1	2
5345	1152	"res_0"	"mbr"	0	0	0	0
5346	1152	"arg_1"	"bigint"	64	0	1	1
5347	1152	"arg_2"	"mbr"	0	0	1	2
5348	1153	"res_0"	"mbr"	0	0	0	0
5349	1153	"arg_1"	"wrd"	64	0	1	1
5350	1153	"arg_2"	"mbr"	0	0	1	2
5351	1154	"res_0"	"mbr"	0	0	0	0
5352	1154	"arg_1"	"hugeint"	128	0	1	1
5353	1154	"arg_2"	"mbr"	0	0	1	2
5354	1155	"res_0"	"mbr"	0	0	0	0
5355	1155	"arg_1"	"decimal"	2	0	1	1
5356	1155	"arg_2"	"mbr"	0	0	1	2
5357	1156	"res_0"	"mbr"	0	0	0	0
5358	1156	"arg_1"	"decimal"	4	0	1	1
5359	1156	"arg_2"	"mbr"	0	0	1	2
5360	1157	"res_0"	"mbr"	0	0	0	0
5361	1157	"arg_1"	"decimal"	9	0	1	1
5362	1157	"arg_2"	"mbr"	0	0	1	2
5363	1158	"res_0"	"mbr"	0	0	0	0
5364	1158	"arg_1"	"decimal"	18	0	1	1
5365	1158	"arg_2"	"mbr"	0	0	1	2
5366	1159	"res_0"	"mbr"	0	0	0	0
5367	1159	"arg_1"	"decimal"	39	0	1	1
5368	1159	"arg_2"	"mbr"	0	0	1	2
5369	1160	"res_0"	"mbr"	0	0	0	0
5370	1160	"arg_1"	"real"	24	0	1	1
5371	1160	"arg_2"	"mbr"	0	0	1	2
5372	1161	"res_0"	"mbr"	0	0	0	0
5373	1161	"arg_1"	"double"	53	0	1	1
5374	1161	"arg_2"	"mbr"	0	0	1	2
5375	1162	"res_0"	"mbr"	0	0	0	0
5376	1162	"arg_1"	"month_interval"	32	0	1	1
5377	1162	"arg_2"	"mbr"	0	0	1	2
5378	1163	"res_0"	"mbr"	0	0	0	0
5379	1163	"arg_1"	"sec_interval"	13	0	1	1
5380	1163	"arg_2"	"mbr"	0	0	1	2
5381	1164	"res_0"	"mbr"	0	0	0	0
5382	1164	"arg_1"	"time"	7	0	1	1
5383	1164	"arg_2"	"mbr"	0	0	1	2
5384	1165	"res_0"	"mbr"	0	0	0	0
5385	1165	"arg_1"	"timetz"	7	0	1	1
5386	1165	"arg_2"	"mbr"	0	0	1	2
5387	1166	"res_0"	"mbr"	0	0	0	0
5388	1166	"arg_1"	"date"	0	0	1	1
5389	1166	"arg_2"	"mbr"	0	0	1	2
5390	1167	"res_0"	"mbr"	0	0	0	0
5391	1167	"arg_1"	"timestamp"	7	0	1	1
5392	1167	"arg_2"	"mbr"	0	0	1	2
5393	1168	"res_0"	"mbr"	0	0	0	0
5394	1168	"arg_1"	"timestamptz"	7	0	1	1
5395	1168	"arg_2"	"mbr"	0	0	1	2
5396	1169	"res_0"	"mbr"	0	0	0	0
5397	1169	"arg_1"	"blob"	0	0	1	1
5398	1169	"arg_2"	"mbr"	0	0	1	2
5399	1170	"res_0"	"mbr"	0	0	0	0
5400	1170	"arg_1"	"geometry"	0	0	1	1
5401	1170	"arg_2"	"mbr"	0	0	1	2
5402	1171	"res_0"	"mbr"	0	0	0	0
5403	1171	"arg_1"	"geometrya"	0	0	1	1
5404	1171	"arg_2"	"mbr"	0	0	1	2
5405	1172	"res_0"	"mbr"	0	0	0	0
5406	1172	"arg_1"	"mbr"	0	0	1	1
5407	1172	"arg_2"	"mbr"	0	0	1	2
5408	1173	"res_0"	"real"	24	0	0	0
5409	1173	"arg_1"	"real"	24	0	1	1
5410	1173	"arg_2"	"real"	24	0	1	2
5411	1174	"res_0"	"real"	24	0	0	0
5412	1174	"arg_1"	"real"	24	0	1	1
5413	1175	"res_0"	"real"	24	0	0	0
5414	1175	"arg_1"	"real"	24	0	1	1
5415	1176	"res_0"	"real"	24	0	0	0
5416	1176	"arg_1"	"real"	24	0	1	1
5417	1177	"res_0"	"real"	24	0	0	0
5418	1177	"arg_1"	"real"	24	0	1	1
5419	1178	"res_0"	"real"	24	0	0	0
5420	1178	"arg_1"	"real"	24	0	1	1
5421	1179	"res_0"	"real"	24	0	0	0
5422	1179	"arg_1"	"real"	24	0	1	1
5423	1180	"res_0"	"real"	24	0	0	0
5424	1180	"arg_1"	"real"	24	0	1	1
5425	1181	"res_0"	"real"	24	0	0	0
5426	1181	"arg_1"	"real"	24	0	1	1
5427	1182	"res_0"	"real"	24	0	0	0
5428	1182	"arg_1"	"real"	24	0	1	1
5429	1183	"res_0"	"real"	24	0	0	0
5430	1183	"arg_1"	"real"	24	0	1	1
5431	1183	"arg_2"	"real"	24	0	1	2
5432	1184	"res_0"	"real"	24	0	0	0
5433	1184	"arg_1"	"real"	24	0	1	1
5434	1185	"res_0"	"real"	24	0	0	0
5435	1185	"arg_1"	"real"	24	0	1	1
5436	1186	"res_0"	"real"	24	0	0	0
5437	1186	"arg_1"	"real"	24	0	1	1
5438	1187	"res_0"	"real"	24	0	0	0
5439	1187	"arg_1"	"real"	24	0	1	1
5440	1188	"res_0"	"real"	24	0	0	0
5441	1188	"arg_1"	"real"	24	0	1	1
5442	1189	"res_0"	"real"	24	0	0	0
5443	1189	"arg_1"	"real"	24	0	1	1
5444	1190	"res_0"	"real"	24	0	0	0
5445	1190	"arg_1"	"real"	24	0	1	1
5446	1191	"res_0"	"real"	24	0	0	0
5447	1191	"arg_1"	"real"	24	0	1	1
5448	1192	"res_0"	"double"	53	0	0	0
5449	1192	"arg_1"	"double"	53	0	1	1
5450	1192	"arg_2"	"double"	53	0	1	2
5451	1193	"res_0"	"double"	53	0	0	0
5452	1193	"arg_1"	"double"	53	0	1	1
5453	1194	"res_0"	"double"	53	0	0	0
5454	1194	"arg_1"	"double"	53	0	1	1
5455	1195	"res_0"	"double"	53	0	0	0
5456	1195	"arg_1"	"double"	53	0	1	1
5457	1196	"res_0"	"double"	53	0	0	0
5458	1196	"arg_1"	"double"	53	0	1	1
5459	1197	"res_0"	"double"	53	0	0	0
5460	1197	"arg_1"	"double"	53	0	1	1
5461	1198	"res_0"	"double"	53	0	0	0
5462	1198	"arg_1"	"double"	53	0	1	1
5463	1199	"res_0"	"double"	53	0	0	0
5464	1199	"arg_1"	"double"	53	0	1	1
5465	1200	"res_0"	"double"	53	0	0	0
5466	1200	"arg_1"	"double"	53	0	1	1
5467	1201	"res_0"	"double"	53	0	0	0
5468	1201	"arg_1"	"double"	53	0	1	1
5469	1202	"res_0"	"double"	53	0	0	0
5470	1202	"arg_1"	"double"	53	0	1	1
5471	1202	"arg_2"	"double"	53	0	1	2
5472	1203	"res_0"	"double"	53	0	0	0
5473	1203	"arg_1"	"double"	53	0	1	1
5474	1204	"res_0"	"double"	53	0	0	0
5475	1204	"arg_1"	"double"	53	0	1	1
5476	1205	"res_0"	"double"	53	0	0	0
5477	1205	"arg_1"	"double"	53	0	1	1
5478	1206	"res_0"	"double"	53	0	0	0
5479	1206	"arg_1"	"double"	53	0	1	1
5480	1207	"res_0"	"double"	53	0	0	0
5481	1207	"arg_1"	"double"	53	0	1	1
5482	1208	"res_0"	"double"	53	0	0	0
5483	1208	"arg_1"	"double"	53	0	1	1
5484	1209	"res_0"	"double"	53	0	0	0
5485	1209	"arg_1"	"double"	53	0	1	1
5486	1210	"res_0"	"double"	53	0	0	0
5487	1210	"arg_1"	"double"	53	0	1	1
5488	1211	"res_0"	"double"	53	0	0	0
5489	1212	"res_0"	"int"	32	0	0	0
5490	1213	"res_0"	"int"	32	0	0	0
5491	1213	"arg_1"	"int"	32	0	1	1
5492	1214	"res_0"	"date"	0	0	0	0
5493	1215	"res_0"	"date"	0	0	0	0
5494	1216	"res_0"	"timetz"	7	0	0	0
5495	1217	"res_0"	"timetz"	7	0	0	0
5496	1218	"res_0"	"timestamptz"	7	0	0	0
5497	1219	"res_0"	"time"	7	0	0	0
5498	1220	"res_0"	"timestamp"	7	0	0	0
5499	1221	"res_0"	"month_interval"	32	0	0	0
5500	1221	"arg_1"	"date"	0	0	1	1
5501	1221	"arg_2"	"date"	0	0	1	2
5502	1222	"res_0"	"sec_interval"	13	0	0	0
5503	1222	"arg_1"	"timetz"	7	0	1	1
5504	1222	"arg_2"	"timetz"	7	0	1	2
5505	1223	"res_0"	"sec_interval"	13	0	0	0
5506	1223	"arg_1"	"time"	7	0	1	1
5507	1223	"arg_2"	"time"	7	0	1	2
5508	1224	"res_0"	"sec_interval"	13	0	0	0
5509	1224	"arg_1"	"timestamptz"	7	0	1	1
5510	1224	"arg_2"	"timestamptz"	7	0	1	2
5511	1225	"res_0"	"sec_interval"	13	0	0	0
5512	1225	"arg_1"	"timestamp"	7	0	1	1
5513	1225	"arg_2"	"timestamp"	7	0	1	2
5514	1226	"res_0"	"date"	0	0	0	0
5515	1226	"arg_1"	"date"	0	0	1	1
5516	1226	"arg_2"	"sec_interval"	13	0	1	2
5517	1227	"res_0"	"date"	0	0	0	0
5518	1227	"arg_1"	"date"	0	0	1	1
5519	1227	"arg_2"	"month_interval"	32	0	1	2
5520	1228	"res_0"	"time"	7	0	0	0
5521	1228	"arg_1"	"time"	7	0	1	1
5522	1228	"arg_2"	"sec_interval"	13	0	1	2
5523	1229	"res_0"	"timetz"	7	0	0	0
5524	1229	"arg_1"	"timetz"	7	0	1	1
5525	1229	"arg_2"	"sec_interval"	13	0	1	2
5526	1230	"res_0"	"timestamp"	7	0	0	0
5527	1230	"arg_1"	"timestamp"	7	0	1	1
5528	1230	"arg_2"	"sec_interval"	13	0	1	2
5529	1231	"res_0"	"timestamp"	7	0	0	0
5530	1231	"arg_1"	"timestamp"	7	0	1	1
5531	1231	"arg_2"	"month_interval"	32	0	1	2
5532	1232	"res_0"	"timestamptz"	7	0	0	0
5533	1232	"arg_1"	"timestamptz"	7	0	1	1
5534	1232	"arg_2"	"sec_interval"	13	0	1	2
5535	1233	"res_0"	"timestamptz"	7	0	0	0
5536	1233	"arg_1"	"timestamptz"	7	0	1	1
5537	1233	"arg_2"	"month_interval"	32	0	1	2
5538	1234	"res_0"	"date"	0	0	0	0
5539	1234	"arg_1"	"date"	0	0	1	1
5540	1234	"arg_2"	"sec_interval"	13	0	1	2
5541	1235	"res_0"	"date"	0	0	0	0
5542	1235	"arg_1"	"date"	0	0	1	1
5543	1235	"arg_2"	"month_interval"	32	0	1	2
5544	1236	"res_0"	"timestamp"	7	0	0	0
5545	1236	"arg_1"	"timestamp"	7	0	1	1
5546	1236	"arg_2"	"sec_interval"	13	0	1	2
5547	1237	"res_0"	"timestamp"	7	0	0	0
5548	1237	"arg_1"	"timestamp"	7	0	1	1
5549	1237	"arg_2"	"month_interval"	32	0	1	2
5550	1238	"res_0"	"timestamptz"	7	0	0	0
5551	1238	"arg_1"	"timestamptz"	7	0	1	1
5552	1238	"arg_2"	"sec_interval"	13	0	1	2
5553	1239	"res_0"	"timestamptz"	7	0	0	0
5554	1239	"arg_1"	"timestamptz"	7	0	1	1
5555	1239	"arg_2"	"month_interval"	32	0	1	2
5556	1240	"res_0"	"time"	7	0	0	0
5557	1240	"arg_1"	"time"	7	0	1	1
5558	1240	"arg_2"	"sec_interval"	13	0	1	2
5559	1241	"res_0"	"timetz"	7	0	0	0
5560	1241	"arg_1"	"timetz"	7	0	1	1
5561	1241	"arg_2"	"sec_interval"	13	0	1	2
5562	1242	"res_0"	"sec_interval"	13	0	0	0
5563	1243	"res_0"	"int"	32	0	0	0
5564	1243	"arg_1"	"date"	0	0	1	1
5565	1244	"res_0"	"int"	32	0	0	0
5566	1244	"arg_1"	"date"	0	0	1	1
5567	1245	"res_0"	"int"	32	0	0	0
5568	1245	"arg_1"	"date"	0	0	1	1
5569	1246	"res_0"	"int"	32	0	0	0
5570	1246	"arg_1"	"time"	7	0	1	1
5571	1247	"res_0"	"int"	32	0	0	0
5572	1247	"arg_1"	"time"	7	0	1	1
5573	1248	"res_0"	"decimal"	9	3	0	0
5574	1248	"arg_1"	"time"	7	0	1	1
5575	1249	"res_0"	"int"	32	0	0	0
5576	1249	"arg_1"	"timetz"	7	0	1	1
5577	1250	"res_0"	"int"	32	0	0	0
5578	1250	"arg_1"	"timetz"	7	0	1	1
5579	1251	"res_0"	"decimal"	9	3	0	0
5580	1251	"arg_1"	"timetz"	7	0	1	1
5581	1252	"res_0"	"int"	32	0	0	0
5582	1252	"arg_1"	"timestamp"	7	0	1	1
5583	1253	"res_0"	"int"	32	0	0	0
5584	1253	"arg_1"	"timestamp"	7	0	1	1
5585	1254	"res_0"	"int"	32	0	0	0
5586	1254	"arg_1"	"timestamp"	7	0	1	1
5587	1255	"res_0"	"int"	32	0	0	0
5588	1255	"arg_1"	"timestamp"	7	0	1	1
5589	1256	"res_0"	"int"	32	0	0	0
5590	1256	"arg_1"	"timestamp"	7	0	1	1
5591	1257	"res_0"	"decimal"	9	3	0	0
5592	1257	"arg_1"	"timestamp"	7	0	1	1
5593	1258	"res_0"	"int"	32	0	0	0
5594	1258	"arg_1"	"timestamptz"	7	0	1	1
5595	1259	"res_0"	"int"	32	0	0	0
5596	1259	"arg_1"	"timestamptz"	7	0	1	1
5597	1260	"res_0"	"int"	32	0	0	0
5598	1260	"arg_1"	"timestamptz"	7	0	1	1
5599	1261	"res_0"	"int"	32	0	0	0
5600	1261	"arg_1"	"timestamptz"	7	0	1	1
5601	1262	"res_0"	"int"	32	0	0	0
5602	1262	"arg_1"	"timestamptz"	7	0	1	1
5603	1263	"res_0"	"decimal"	9	3	0	0
5604	1263	"arg_1"	"timestamptz"	7	0	1	1
5605	1264	"res_0"	"int"	32	0	0	0
5606	1264	"arg_1"	"month_interval"	32	0	1	1
5607	1265	"res_0"	"int"	32	0	0	0
5608	1265	"arg_1"	"month_interval"	32	0	1	1
5609	1266	"res_0"	"bigint"	64	0	0	0
5610	1266	"arg_1"	"sec_interval"	13	0	1	1
5611	1267	"res_0"	"int"	32	0	0	0
5612	1267	"arg_1"	"sec_interval"	13	0	1	1
5613	1268	"res_0"	"int"	32	0	0	0
5614	1268	"arg_1"	"sec_interval"	13	0	1	1
5615	1269	"res_0"	"int"	32	0	0	0
5616	1269	"arg_1"	"sec_interval"	13	0	1	1
5617	1270	"res_0"	"int"	32	0	0	0
5618	1270	"arg_1"	"date"	0	0	1	1
5619	1271	"res_0"	"int"	32	0	0	0
5620	1271	"arg_1"	"date"	0	0	1	1
5621	1272	"res_0"	"int"	32	0	0	0
5622	1272	"arg_1"	"date"	0	0	1	1
5623	1273	"res_0"	"int"	32	0	0	0
5624	1273	"arg_1"	"date"	0	0	1	1
5625	1274	"res_0"	"int"	32	0	0	0
5626	1274	"arg_1"	"date"	0	0	1	1
5627	1275	"res_0"	"bigint"	64	0	0	0
5628	1275	"arg_1"	"varchar"	0	0	1	1
5629	1275	"arg_2"	"varchar"	0	0	1	2
5630	1276	"res_0"	"bigint"	64	0	0	0
5631	1276	"arg_1"	"varchar"	0	0	1	1
5632	1276	"arg_2"	"varchar"	0	0	1	2
5633	1277	"res_0"	"bigint"	64	0	0	0
5634	1277	"arg_1"	"varchar"	0	0	1	1
5635	1277	"arg_2"	"varchar"	0	0	1	2
5636	1277	"arg_3"	"bigint"	64	0	1	3
5637	1278	"res_0"	"tinyint"	8	0	0	0
5638	1278	"arg_1"	"char"	0	0	1	1
5639	1278	"arg_2"	"boolean"	1	0	1	2
5640	1279	"res_0"	"smallint"	16	0	0	0
5641	1279	"arg_1"	"char"	0	0	1	1
5642	1279	"arg_2"	"boolean"	1	0	1	2
5643	1280	"res_0"	"int"	32	0	0	0
5644	1280	"arg_1"	"char"	0	0	1	1
5645	1280	"arg_2"	"boolean"	1	0	1	2
5646	1281	"res_0"	"char"	0	0	0	0
5647	1281	"arg_1"	"char"	0	0	1	1
5648	1282	"res_0"	"int"	32	0	0	0
5649	1282	"arg_1"	"char"	0	0	1	1
5650	1282	"arg_2"	"char"	0	0	1	2
5651	1283	"res_0"	"int"	32	0	0	0
5652	1283	"arg_1"	"char"	0	0	1	1
5653	1283	"arg_2"	"char"	0	0	1	2
5654	1283	"arg_3"	"int"	32	0	1	3
5655	1284	"res_0"	"char"	0	0	0	0
5656	1284	"arg_1"	"char"	0	0	1	1
5657	1284	"arg_2"	"char"	0	0	1	2
5658	1284	"arg_3"	"int"	32	0	1	3
5659	1285	"res_0"	"char"	0	0	0	0
5660	1285	"arg_1"	"char"	0	0	1	1
5661	1285	"arg_2"	"int"	32	0	1	2
5662	1286	"res_0"	"char"	0	0	0	0
5663	1286	"arg_1"	"char"	0	0	1	1
5664	1286	"arg_2"	"int"	32	0	1	2
5665	1286	"arg_3"	"int"	32	0	1	3
5666	1287	"res_0"	"boolean"	1	0	0	0
5667	1287	"arg_1"	"char"	0	0	1	1
5668	1287	"arg_2"	"char"	0	0	1	2
5669	1288	"res_0"	"boolean"	1	0	0	0
5670	1288	"arg_1"	"char"	0	0	1	1
5671	1288	"arg_2"	"char"	0	0	1	2
5672	1288	"arg_3"	"char"	0	0	1	3
5673	1289	"res_0"	"boolean"	1	0	0	0
5674	1289	"arg_1"	"char"	0	0	1	1
5675	1289	"arg_2"	"char"	0	0	1	2
5676	1290	"res_0"	"boolean"	1	0	0	0
5677	1290	"arg_1"	"char"	0	0	1	1
5678	1290	"arg_2"	"char"	0	0	1	2
5679	1290	"arg_3"	"char"	0	0	1	3
5680	1291	"res_0"	"boolean"	1	0	0	0
5681	1291	"arg_1"	"char"	0	0	1	1
5682	1291	"arg_2"	"char"	0	0	1	2
5683	1292	"res_0"	"boolean"	1	0	0	0
5684	1292	"arg_1"	"char"	0	0	1	1
5685	1292	"arg_2"	"char"	0	0	1	2
5686	1292	"arg_3"	"char"	0	0	1	3
5687	1293	"res_0"	"boolean"	1	0	0	0
5688	1293	"arg_1"	"char"	0	0	1	1
5689	1293	"arg_2"	"char"	0	0	1	2
5690	1294	"res_0"	"boolean"	1	0	0	0
5691	1294	"arg_1"	"char"	0	0	1	1
5692	1294	"arg_2"	"char"	0	0	1	2
5693	1294	"arg_3"	"char"	0	0	1	3
5694	1295	"res_0"	"int"	32	0	0	0
5695	1295	"arg_1"	"char"	0	0	1	1
5696	1295	"arg_2"	"char"	0	0	1	2
5697	1296	"res_0"	"char"	0	0	0	0
5698	1296	"arg_1"	"char"	0	0	1	1
5699	1296	"arg_2"	"int"	32	0	1	2
5700	1297	"res_0"	"char"	0	0	0	0
5701	1297	"arg_1"	"char"	0	0	1	1
5702	1297	"arg_2"	"char"	0	0	1	2
5703	1298	"res_0"	"int"	32	0	0	0
5704	1298	"arg_1"	"char"	0	0	1	1
5705	1299	"res_0"	"char"	0	0	0	0
5706	1299	"arg_1"	"int"	32	0	1	1
5707	1300	"res_0"	"int"	32	0	0	0
5708	1300	"arg_1"	"char"	0	0	1	1
5709	1301	"res_0"	"char"	0	0	0	0
5710	1301	"arg_1"	"char"	0	0	1	1
5711	1301	"arg_2"	"int"	32	0	1	2
5712	1302	"res_0"	"char"	0	0	0	0
5713	1302	"arg_1"	"char"	0	0	1	1
5714	1302	"arg_2"	"int"	32	0	1	2
5715	1303	"res_0"	"char"	0	0	0	0
5716	1303	"arg_1"	"char"	0	0	1	1
5717	1304	"res_0"	"char"	0	0	0	0
5718	1304	"arg_1"	"char"	0	0	1	1
5719	1305	"res_0"	"char"	0	0	0	0
5720	1305	"arg_1"	"char"	0	0	1	1
5721	1306	"res_0"	"char"	0	0	0	0
5722	1306	"arg_1"	"char"	0	0	1	1
5723	1307	"res_0"	"char"	0	0	0	0
5724	1307	"arg_1"	"char"	0	0	1	1
5725	1308	"res_0"	"char"	0	0	0	0
5726	1308	"arg_1"	"char"	0	0	1	1
5727	1308	"arg_2"	"char"	0	0	1	2
5728	1309	"res_0"	"char"	0	0	0	0
5729	1309	"arg_1"	"char"	0	0	1	1
5730	1310	"res_0"	"char"	0	0	0	0
5731	1310	"arg_1"	"char"	0	0	1	1
5732	1310	"arg_2"	"char"	0	0	1	2
5733	1311	"res_0"	"char"	0	0	0	0
5734	1311	"arg_1"	"char"	0	0	1	1
5735	1312	"res_0"	"char"	0	0	0	0
5736	1312	"arg_1"	"char"	0	0	1	1
5737	1312	"arg_2"	"char"	0	0	1	2
5738	1313	"res_0"	"char"	0	0	0	0
5739	1313	"arg_1"	"char"	0	0	1	1
5740	1313	"arg_2"	"int"	32	0	1	2
5741	1314	"res_0"	"char"	0	0	0	0
5742	1314	"arg_1"	"char"	0	0	1	1
5743	1314	"arg_2"	"int"	32	0	1	2
5744	1314	"arg_3"	"char"	0	0	1	3
5745	1315	"res_0"	"char"	0	0	0	0
5746	1315	"arg_1"	"char"	0	0	1	1
5747	1315	"arg_2"	"int"	32	0	1	2
5748	1316	"res_0"	"char"	0	0	0	0
5749	1316	"arg_1"	"char"	0	0	1	1
5750	1316	"arg_2"	"int"	32	0	1	2
5751	1316	"arg_3"	"char"	0	0	1	3
5752	1317	"res_0"	"char"	0	0	0	0
5753	1317	"arg_1"	"char"	0	0	1	1
5754	1317	"arg_2"	"int"	32	0	1	2
5755	1317	"arg_3"	"int"	32	0	1	3
5756	1317	"arg_4"	"char"	0	0	1	4
5757	1318	"res_0"	"char"	0	0	0	0
5758	1318	"arg_1"	"char"	0	0	1	1
5759	1318	"arg_2"	"char"	0	0	1	2
5760	1318	"arg_3"	"char"	0	0	1	3
5761	1319	"res_0"	"char"	0	0	0	0
5762	1319	"arg_1"	"char"	0	0	1	1
5763	1319	"arg_2"	"int"	32	0	1	2
5764	1320	"res_0"	"char"	0	0	0	0
5765	1320	"arg_1"	"int"	32	0	1	1
5766	1321	"res_0"	"int"	32	0	0	0
5767	1321	"arg_1"	"char"	0	0	1	1
5768	1322	"res_0"	"int"	32	0	0	0
5769	1322	"arg_1"	"char"	0	0	1	1
5770	1323	"res_0"	"int"	32	0	0	0
5771	1323	"arg_1"	"char"	0	0	1	1
5772	1324	"res_0"	"char"	0	0	0	0
5773	1324	"arg_1"	"char"	0	0	1	1
5774	1325	"res_0"	"int"	32	0	0	0
5775	1325	"arg_1"	"char"	0	0	1	1
5776	1325	"arg_2"	"char"	0	0	1	2
5777	1326	"res_0"	"int"	32	0	0	0
5778	1326	"arg_1"	"char"	0	0	1	1
5779	1326	"arg_2"	"char"	0	0	1	2
5780	1327	"res_0"	"int"	32	0	0	0
5781	1327	"arg_1"	"char"	0	0	1	1
5782	1327	"arg_2"	"char"	0	0	1	2
5783	1328	"res_0"	"double"	53	0	0	0
5784	1328	"arg_1"	"char"	0	0	1	1
5785	1328	"arg_2"	"char"	0	0	1	2
5786	1329	"res_0"	"char"	0	0	0	0
5787	1329	"arg_1"	"char"	0	0	1	1
5788	1330	"res_0"	"int"	32	0	0	0
5789	1330	"arg_1"	"char"	0	0	1	1
5790	1330	"arg_2"	"char"	0	0	1	2
5791	1331	"res_0"	"int"	32	0	0	0
5792	1331	"arg_1"	"char"	0	0	1	1
5793	1331	"arg_2"	"char"	0	0	1	2
5794	1331	"arg_3"	"int"	32	0	1	3
5795	1331	"arg_4"	"int"	32	0	1	4
5796	1331	"arg_5"	"int"	32	0	1	5
5797	1332	"res_0"	"tinyint"	8	0	0	0
5798	1332	"arg_1"	"varchar"	0	0	1	1
5799	1332	"arg_2"	"boolean"	1	0	1	2
5800	1333	"res_0"	"smallint"	16	0	0	0
5801	1333	"arg_1"	"varchar"	0	0	1	1
5802	1333	"arg_2"	"boolean"	1	0	1	2
5803	1334	"res_0"	"int"	32	0	0	0
5804	1334	"arg_1"	"varchar"	0	0	1	1
5805	1334	"arg_2"	"boolean"	1	0	1	2
5806	1335	"res_0"	"varchar"	0	0	0	0
5807	1335	"arg_1"	"varchar"	0	0	1	1
5808	1336	"res_0"	"int"	32	0	0	0
5809	1336	"arg_1"	"varchar"	0	0	1	1
5810	1336	"arg_2"	"varchar"	0	0	1	2
5811	1337	"res_0"	"int"	32	0	0	0
5812	1337	"arg_1"	"varchar"	0	0	1	1
5813	1337	"arg_2"	"varchar"	0	0	1	2
5814	1337	"arg_3"	"int"	32	0	1	3
5815	1338	"res_0"	"varchar"	0	0	0	0
5816	1338	"arg_1"	"varchar"	0	0	1	1
5817	1338	"arg_2"	"varchar"	0	0	1	2
5818	1338	"arg_3"	"int"	32	0	1	3
5819	1339	"res_0"	"varchar"	0	0	0	0
5820	1339	"arg_1"	"varchar"	0	0	1	1
5821	1339	"arg_2"	"int"	32	0	1	2
5822	1340	"res_0"	"varchar"	0	0	0	0
5823	1340	"arg_1"	"varchar"	0	0	1	1
5824	1340	"arg_2"	"int"	32	0	1	2
5825	1340	"arg_3"	"int"	32	0	1	3
5826	1341	"res_0"	"boolean"	1	0	0	0
5827	1341	"arg_1"	"varchar"	0	0	1	1
5828	1341	"arg_2"	"varchar"	0	0	1	2
5829	1342	"res_0"	"boolean"	1	0	0	0
5830	1342	"arg_1"	"varchar"	0	0	1	1
5831	1342	"arg_2"	"varchar"	0	0	1	2
5832	1342	"arg_3"	"varchar"	0	0	1	3
5833	1343	"res_0"	"boolean"	1	0	0	0
5834	1343	"arg_1"	"varchar"	0	0	1	1
5835	1343	"arg_2"	"varchar"	0	0	1	2
5836	1344	"res_0"	"boolean"	1	0	0	0
5837	1344	"arg_1"	"varchar"	0	0	1	1
5838	1344	"arg_2"	"varchar"	0	0	1	2
5839	1344	"arg_3"	"varchar"	0	0	1	3
5840	1345	"res_0"	"boolean"	1	0	0	0
5841	1345	"arg_1"	"varchar"	0	0	1	1
5842	1345	"arg_2"	"varchar"	0	0	1	2
5843	1346	"res_0"	"boolean"	1	0	0	0
5844	1346	"arg_1"	"varchar"	0	0	1	1
5845	1346	"arg_2"	"varchar"	0	0	1	2
5846	1346	"arg_3"	"varchar"	0	0	1	3
5847	1347	"res_0"	"boolean"	1	0	0	0
5848	1347	"arg_1"	"varchar"	0	0	1	1
5849	1347	"arg_2"	"varchar"	0	0	1	2
5850	1348	"res_0"	"boolean"	1	0	0	0
5851	1348	"arg_1"	"varchar"	0	0	1	1
5852	1348	"arg_2"	"varchar"	0	0	1	2
5853	1348	"arg_3"	"varchar"	0	0	1	3
5854	1349	"res_0"	"int"	32	0	0	0
5855	1349	"arg_1"	"varchar"	0	0	1	1
5856	1349	"arg_2"	"varchar"	0	0	1	2
5857	1350	"res_0"	"varchar"	0	0	0	0
5858	1350	"arg_1"	"varchar"	0	0	1	1
5859	1350	"arg_2"	"int"	32	0	1	2
5860	1351	"res_0"	"varchar"	0	0	0	0
5861	1351	"arg_1"	"varchar"	0	0	1	1
5862	1351	"arg_2"	"varchar"	0	0	1	2
5863	1352	"res_0"	"int"	32	0	0	0
5864	1352	"arg_1"	"varchar"	0	0	1	1
5865	1353	"res_0"	"varchar"	0	0	0	0
5866	1353	"arg_1"	"int"	32	0	1	1
5867	1354	"res_0"	"int"	32	0	0	0
5868	1354	"arg_1"	"varchar"	0	0	1	1
5869	1355	"res_0"	"varchar"	0	0	0	0
5870	1355	"arg_1"	"varchar"	0	0	1	1
5871	1355	"arg_2"	"int"	32	0	1	2
5872	1356	"res_0"	"varchar"	0	0	0	0
5873	1356	"arg_1"	"varchar"	0	0	1	1
5874	1356	"arg_2"	"int"	32	0	1	2
5875	1357	"res_0"	"varchar"	0	0	0	0
5876	1357	"arg_1"	"varchar"	0	0	1	1
5877	1358	"res_0"	"varchar"	0	0	0	0
5878	1358	"arg_1"	"varchar"	0	0	1	1
5879	1359	"res_0"	"varchar"	0	0	0	0
5880	1359	"arg_1"	"varchar"	0	0	1	1
5881	1360	"res_0"	"varchar"	0	0	0	0
5882	1360	"arg_1"	"varchar"	0	0	1	1
5883	1361	"res_0"	"varchar"	0	0	0	0
5884	1361	"arg_1"	"varchar"	0	0	1	1
5885	1362	"res_0"	"varchar"	0	0	0	0
5886	1362	"arg_1"	"varchar"	0	0	1	1
5887	1362	"arg_2"	"varchar"	0	0	1	2
5888	1363	"res_0"	"varchar"	0	0	0	0
5889	1363	"arg_1"	"varchar"	0	0	1	1
5890	1364	"res_0"	"varchar"	0	0	0	0
5891	1364	"arg_1"	"varchar"	0	0	1	1
5892	1364	"arg_2"	"varchar"	0	0	1	2
5893	1365	"res_0"	"varchar"	0	0	0	0
5894	1365	"arg_1"	"varchar"	0	0	1	1
5895	1366	"res_0"	"varchar"	0	0	0	0
5896	1366	"arg_1"	"varchar"	0	0	1	1
5897	1366	"arg_2"	"varchar"	0	0	1	2
5898	1367	"res_0"	"varchar"	0	0	0	0
5899	1367	"arg_1"	"varchar"	0	0	1	1
5900	1367	"arg_2"	"int"	32	0	1	2
5901	1368	"res_0"	"varchar"	0	0	0	0
5902	1368	"arg_1"	"varchar"	0	0	1	1
5903	1368	"arg_2"	"int"	32	0	1	2
5904	1368	"arg_3"	"varchar"	0	0	1	3
5905	1369	"res_0"	"varchar"	0	0	0	0
5906	1369	"arg_1"	"varchar"	0	0	1	1
5907	1369	"arg_2"	"int"	32	0	1	2
5908	1370	"res_0"	"varchar"	0	0	0	0
5909	1370	"arg_1"	"varchar"	0	0	1	1
5910	1370	"arg_2"	"int"	32	0	1	2
5911	1370	"arg_3"	"varchar"	0	0	1	3
5912	1371	"res_0"	"varchar"	0	0	0	0
5913	1371	"arg_1"	"varchar"	0	0	1	1
5914	1371	"arg_2"	"int"	32	0	1	2
5915	1371	"arg_3"	"int"	32	0	1	3
5916	1371	"arg_4"	"varchar"	0	0	1	4
5917	1372	"res_0"	"varchar"	0	0	0	0
5918	1372	"arg_1"	"varchar"	0	0	1	1
5919	1372	"arg_2"	"varchar"	0	0	1	2
5920	1372	"arg_3"	"varchar"	0	0	1	3
5921	1373	"res_0"	"varchar"	0	0	0	0
5922	1373	"arg_1"	"varchar"	0	0	1	1
5923	1373	"arg_2"	"int"	32	0	1	2
5924	1374	"res_0"	"varchar"	0	0	0	0
5925	1374	"arg_1"	"int"	32	0	1	1
5926	1375	"res_0"	"int"	32	0	0	0
5927	1375	"arg_1"	"varchar"	0	0	1	1
5928	1376	"res_0"	"int"	32	0	0	0
5929	1376	"arg_1"	"varchar"	0	0	1	1
5930	1377	"res_0"	"int"	32	0	0	0
5931	1377	"arg_1"	"varchar"	0	0	1	1
5932	1378	"res_0"	"varchar"	0	0	0	0
5933	1378	"arg_1"	"varchar"	0	0	1	1
5934	1379	"res_0"	"int"	32	0	0	0
5935	1379	"arg_1"	"varchar"	0	0	1	1
5936	1379	"arg_2"	"varchar"	0	0	1	2
5937	1380	"res_0"	"int"	32	0	0	0
5938	1380	"arg_1"	"varchar"	0	0	1	1
5939	1380	"arg_2"	"varchar"	0	0	1	2
5940	1381	"res_0"	"int"	32	0	0	0
5941	1381	"arg_1"	"varchar"	0	0	1	1
5942	1381	"arg_2"	"varchar"	0	0	1	2
5943	1382	"res_0"	"double"	53	0	0	0
5944	1382	"arg_1"	"varchar"	0	0	1	1
5945	1382	"arg_2"	"varchar"	0	0	1	2
5946	1383	"res_0"	"varchar"	0	0	0	0
5947	1383	"arg_1"	"varchar"	0	0	1	1
5948	1384	"res_0"	"int"	32	0	0	0
5949	1384	"arg_1"	"varchar"	0	0	1	1
5950	1384	"arg_2"	"varchar"	0	0	1	2
5951	1385	"res_0"	"int"	32	0	0	0
5952	1385	"arg_1"	"varchar"	0	0	1	1
5953	1385	"arg_2"	"varchar"	0	0	1	2
5954	1385	"arg_3"	"int"	32	0	1	3
5955	1385	"arg_4"	"int"	32	0	1	4
5956	1385	"arg_5"	"int"	32	0	1	5
5957	1386	"res_0"	"tinyint"	8	0	0	0
5958	1386	"arg_1"	"clob"	0	0	1	1
5959	1386	"arg_2"	"boolean"	1	0	1	2
5960	1387	"res_0"	"smallint"	16	0	0	0
5961	1387	"arg_1"	"clob"	0	0	1	1
5962	1387	"arg_2"	"boolean"	1	0	1	2
5963	1388	"res_0"	"int"	32	0	0	0
5964	1388	"arg_1"	"clob"	0	0	1	1
5965	1388	"arg_2"	"boolean"	1	0	1	2
5966	1389	"res_0"	"clob"	0	0	0	0
5967	1389	"arg_1"	"clob"	0	0	1	1
5968	1390	"res_0"	"int"	32	0	0	0
5969	1390	"arg_1"	"clob"	0	0	1	1
5970	1390	"arg_2"	"clob"	0	0	1	2
5971	1391	"res_0"	"int"	32	0	0	0
5972	1391	"arg_1"	"clob"	0	0	1	1
5973	1391	"arg_2"	"clob"	0	0	1	2
5974	1391	"arg_3"	"int"	32	0	1	3
5975	1392	"res_0"	"clob"	0	0	0	0
5976	1392	"arg_1"	"clob"	0	0	1	1
5977	1392	"arg_2"	"clob"	0	0	1	2
5978	1392	"arg_3"	"int"	32	0	1	3
5979	1393	"res_0"	"clob"	0	0	0	0
5980	1393	"arg_1"	"clob"	0	0	1	1
5981	1393	"arg_2"	"int"	32	0	1	2
5982	1394	"res_0"	"clob"	0	0	0	0
5983	1394	"arg_1"	"clob"	0	0	1	1
5984	1394	"arg_2"	"int"	32	0	1	2
5985	1394	"arg_3"	"int"	32	0	1	3
5986	1395	"res_0"	"boolean"	1	0	0	0
5987	1395	"arg_1"	"clob"	0	0	1	1
5988	1395	"arg_2"	"clob"	0	0	1	2
5989	1396	"res_0"	"boolean"	1	0	0	0
5990	1396	"arg_1"	"clob"	0	0	1	1
5991	1396	"arg_2"	"clob"	0	0	1	2
5992	1396	"arg_3"	"clob"	0	0	1	3
5993	1397	"res_0"	"boolean"	1	0	0	0
5994	1397	"arg_1"	"clob"	0	0	1	1
5995	1397	"arg_2"	"clob"	0	0	1	2
5996	1398	"res_0"	"boolean"	1	0	0	0
5997	1398	"arg_1"	"clob"	0	0	1	1
5998	1398	"arg_2"	"clob"	0	0	1	2
5999	1398	"arg_3"	"clob"	0	0	1	3
6000	1399	"res_0"	"boolean"	1	0	0	0
6001	1399	"arg_1"	"clob"	0	0	1	1
6002	1399	"arg_2"	"clob"	0	0	1	2
6003	1400	"res_0"	"boolean"	1	0	0	0
6004	1400	"arg_1"	"clob"	0	0	1	1
6005	1400	"arg_2"	"clob"	0	0	1	2
6006	1400	"arg_3"	"clob"	0	0	1	3
6007	1401	"res_0"	"boolean"	1	0	0	0
6008	1401	"arg_1"	"clob"	0	0	1	1
6009	1401	"arg_2"	"clob"	0	0	1	2
6010	1402	"res_0"	"boolean"	1	0	0	0
6011	1402	"arg_1"	"clob"	0	0	1	1
6012	1402	"arg_2"	"clob"	0	0	1	2
6013	1402	"arg_3"	"clob"	0	0	1	3
6014	1403	"res_0"	"int"	32	0	0	0
6015	1403	"arg_1"	"clob"	0	0	1	1
6016	1403	"arg_2"	"clob"	0	0	1	2
6017	1404	"res_0"	"clob"	0	0	0	0
6018	1404	"arg_1"	"clob"	0	0	1	1
6019	1404	"arg_2"	"int"	32	0	1	2
6020	1405	"res_0"	"clob"	0	0	0	0
6021	1405	"arg_1"	"clob"	0	0	1	1
6022	1405	"arg_2"	"clob"	0	0	1	2
6023	1406	"res_0"	"int"	32	0	0	0
6024	1406	"arg_1"	"clob"	0	0	1	1
6025	1407	"res_0"	"clob"	0	0	0	0
6026	1407	"arg_1"	"int"	32	0	1	1
6027	1408	"res_0"	"int"	32	0	0	0
6028	1408	"arg_1"	"clob"	0	0	1	1
6029	1409	"res_0"	"clob"	0	0	0	0
6030	1409	"arg_1"	"clob"	0	0	1	1
6031	1409	"arg_2"	"int"	32	0	1	2
6032	1410	"res_0"	"clob"	0	0	0	0
6033	1410	"arg_1"	"clob"	0	0	1	1
6034	1410	"arg_2"	"int"	32	0	1	2
6035	1411	"res_0"	"clob"	0	0	0	0
6036	1411	"arg_1"	"clob"	0	0	1	1
6037	1412	"res_0"	"clob"	0	0	0	0
6038	1412	"arg_1"	"clob"	0	0	1	1
6039	1413	"res_0"	"clob"	0	0	0	0
6040	1413	"arg_1"	"clob"	0	0	1	1
6041	1414	"res_0"	"clob"	0	0	0	0
6042	1414	"arg_1"	"clob"	0	0	1	1
6043	1415	"res_0"	"clob"	0	0	0	0
6044	1415	"arg_1"	"clob"	0	0	1	1
6045	1416	"res_0"	"clob"	0	0	0	0
6046	1416	"arg_1"	"clob"	0	0	1	1
6047	1416	"arg_2"	"clob"	0	0	1	2
6048	1417	"res_0"	"clob"	0	0	0	0
6049	1417	"arg_1"	"clob"	0	0	1	1
6050	1418	"res_0"	"clob"	0	0	0	0
6051	1418	"arg_1"	"clob"	0	0	1	1
6052	1418	"arg_2"	"clob"	0	0	1	2
6053	1419	"res_0"	"clob"	0	0	0	0
6054	1419	"arg_1"	"clob"	0	0	1	1
6055	1420	"res_0"	"clob"	0	0	0	0
6056	1420	"arg_1"	"clob"	0	0	1	1
6057	1420	"arg_2"	"clob"	0	0	1	2
6058	1421	"res_0"	"clob"	0	0	0	0
6059	1421	"arg_1"	"clob"	0	0	1	1
6060	1421	"arg_2"	"int"	32	0	1	2
6061	1422	"res_0"	"clob"	0	0	0	0
6062	1422	"arg_1"	"clob"	0	0	1	1
6063	1422	"arg_2"	"int"	32	0	1	2
6064	1422	"arg_3"	"clob"	0	0	1	3
6065	1423	"res_0"	"clob"	0	0	0	0
6066	1423	"arg_1"	"clob"	0	0	1	1
6067	1423	"arg_2"	"int"	32	0	1	2
6068	1424	"res_0"	"clob"	0	0	0	0
6069	1424	"arg_1"	"clob"	0	0	1	1
6070	1424	"arg_2"	"int"	32	0	1	2
6071	1424	"arg_3"	"clob"	0	0	1	3
6072	1425	"res_0"	"clob"	0	0	0	0
6073	1425	"arg_1"	"clob"	0	0	1	1
6074	1425	"arg_2"	"int"	32	0	1	2
6075	1425	"arg_3"	"int"	32	0	1	3
6076	1425	"arg_4"	"clob"	0	0	1	4
6077	1426	"res_0"	"clob"	0	0	0	0
6078	1426	"arg_1"	"clob"	0	0	1	1
6079	1426	"arg_2"	"clob"	0	0	1	2
6080	1426	"arg_3"	"clob"	0	0	1	3
6081	1427	"res_0"	"clob"	0	0	0	0
6082	1427	"arg_1"	"clob"	0	0	1	1
6083	1427	"arg_2"	"int"	32	0	1	2
6084	1428	"res_0"	"clob"	0	0	0	0
6085	1428	"arg_1"	"int"	32	0	1	1
6086	1429	"res_0"	"int"	32	0	0	0
6087	1429	"arg_1"	"clob"	0	0	1	1
6088	1430	"res_0"	"int"	32	0	0	0
6089	1430	"arg_1"	"clob"	0	0	1	1
6090	1431	"res_0"	"int"	32	0	0	0
6091	1431	"arg_1"	"clob"	0	0	1	1
6092	1432	"res_0"	"clob"	0	0	0	0
6093	1432	"arg_1"	"clob"	0	0	1	1
6094	1433	"res_0"	"int"	32	0	0	0
6095	1433	"arg_1"	"clob"	0	0	1	1
6096	1433	"arg_2"	"clob"	0	0	1	2
6097	1434	"res_0"	"int"	32	0	0	0
6098	1434	"arg_1"	"clob"	0	0	1	1
6099	1434	"arg_2"	"clob"	0	0	1	2
6100	1435	"res_0"	"int"	32	0	0	0
6101	1435	"arg_1"	"clob"	0	0	1	1
6102	1435	"arg_2"	"clob"	0	0	1	2
6103	1436	"res_0"	"double"	53	0	0	0
6104	1436	"arg_1"	"clob"	0	0	1	1
6105	1436	"arg_2"	"clob"	0	0	1	2
6106	1437	"res_0"	"clob"	0	0	0	0
6107	1437	"arg_1"	"clob"	0	0	1	1
6108	1438	"res_0"	"int"	32	0	0	0
6109	1438	"arg_1"	"clob"	0	0	1	1
6110	1438	"arg_2"	"clob"	0	0	1	2
6111	1439	"res_0"	"int"	32	0	0	0
6112	1439	"arg_1"	"clob"	0	0	1	1
6113	1439	"arg_2"	"clob"	0	0	1	2
6114	1439	"arg_3"	"int"	32	0	1	3
6115	1439	"arg_4"	"int"	32	0	1	4
6116	1439	"arg_5"	"int"	32	0	1	5
6117	1440	"res_0"	"table"	0	0	0	0
6118	1440	"arg_1"	"varchar"	0	0	1	1
6119	1440	"arg_2"	"varchar"	0	0	1	2
6120	1440	"arg_3"	"varchar"	0	0	1	3
6121	1440	"arg_4"	"varchar"	0	0	1	4
6122	1440	"arg_5"	"varchar"	0	0	1	5
6123	1440	"arg_6"	"varchar"	0	0	1	6
6124	1440	"arg_7"	"bigint"	64	0	1	7
6125	1440	"arg_8"	"bigint"	64	0	1	8
6126	1440	"arg_9"	"int"	32	0	1	9
6127	1441	"res_0"	"table"	0	0	0	0
6128	1441	"arg_1"	"varchar"	0	0	1	1
6129	1441	"arg_2"	"varchar"	0	0	1	2
6130	62	"res"	"boolean"	1	0	0	0
6131	62	"arg"	"oid"	63	0	1	1
6132	74	"res"	"any"	0	0	0	0
6133	74	"arg"	"any"	0	0	1	1
6134	75	"res"	"boolean"	1	0	0	0
6135	75	"arg"	"any"	0	0	1	1
6136	76	"res"	"boolean"	1	0	0	0
6137	76	"arg"	"any"	0	0	1	1
6138	81	"res"	"any"	0	0	0	0
6139	81	"arg"	"any"	0	0	1	1
6140	82	"res"	"any"	0	0	0	0
6141	82	"arg"	"any"	0	0	1	1
6142	86	"res"	"hugeint"	128	0	0	0
6143	86	"arg"	"tinyint"	8	0	1	1
6144	87	"res"	"hugeint"	128	0	0	0
6145	87	"arg"	"smallint"	16	0	1	1
6146	88	"res"	"hugeint"	128	0	0	0
6147	88	"arg"	"int"	32	0	1	1
6148	89	"res"	"hugeint"	128	0	0	0
6149	89	"arg"	"bigint"	64	0	1	1
6150	90	"res"	"hugeint"	128	0	0	0
6151	90	"arg"	"hugeint"	128	0	1	1
6152	91	"res"	"wrd"	64	0	0	0
6153	91	"arg"	"wrd"	64	0	1	1
6154	92	"res"	"decimal"	39	0	0	0
6155	92	"arg"	"decimal"	2	0	1	1
6156	93	"res"	"decimal"	39	0	0	0
6157	93	"arg"	"decimal"	4	0	1	1
6158	94	"res"	"decimal"	39	0	0	0
6159	94	"arg"	"decimal"	9	0	1	1
6160	95	"res"	"decimal"	39	0	0	0
6161	95	"arg"	"decimal"	18	0	1	1
6162	96	"res"	"decimal"	39	0	0	0
6163	96	"arg"	"decimal"	39	0	1	1
6164	97	"res"	"hugeint"	128	0	0	0
6165	97	"arg"	"tinyint"	8	0	1	1
6166	98	"res"	"hugeint"	128	0	0	0
6167	98	"arg"	"smallint"	16	0	1	1
6168	99	"res"	"hugeint"	128	0	0	0
6169	99	"arg"	"int"	32	0	1	1
6170	100	"res"	"hugeint"	128	0	0	0
6171	100	"arg"	"bigint"	64	0	1	1
6172	101	"res"	"hugeint"	128	0	0	0
6173	101	"arg"	"hugeint"	128	0	1	1
6174	102	"res"	"decimal"	39	0	0	0
6175	102	"arg"	"decimal"	2	0	1	1
6176	103	"res"	"decimal"	39	0	0	0
6177	103	"arg"	"decimal"	4	0	1	1
6178	104	"res"	"decimal"	39	0	0	0
6179	104	"arg"	"decimal"	9	0	1	1
6180	105	"res"	"decimal"	39	0	0	0
6181	105	"arg"	"decimal"	18	0	1	1
6182	106	"res"	"decimal"	39	0	0	0
6183	106	"arg"	"decimal"	39	0	1	1
6184	121	"res"	"real"	24	0	0	0
6185	121	"arg"	"real"	24	0	1	1
6186	122	"res"	"real"	24	0	0	0
6187	122	"arg"	"real"	24	0	1	1
6188	123	"res"	"double"	53	0	0	0
6189	123	"arg"	"double"	53	0	1	1
6190	124	"res"	"double"	53	0	0	0
6191	124	"arg"	"double"	53	0	1	1
6192	125	"res"	"month_interval"	32	0	0	0
6193	125	"arg"	"month_interval"	32	0	1	1
6194	126	"res"	"sec_interval"	13	0	0	0
6195	126	"arg"	"sec_interval"	13	0	1	1
6196	127	"res"	"double"	53	0	0	0
6197	127	"arg"	"double"	53	0	1	1
6198	128	"res"	"wrd"	64	0	0	0
6199	129	"res"	"wrd"	64	0	0	0
6222	6221	"name"	"varchar"	1024	0	0	0
6223	6221	"value"	"varchar"	2048	0	0	1
6225	6224	"name"	"varchar"	1024	0	0	0
6231	6230	"name"	"varchar"	2048	0	0	0
6251	6250	"val"	"clob"	0	0	1	0
6252	6250	"pat"	"clob"	0	0	1	1
6253	6250	"esc"	"clob"	0	0	1	2
6256	6255	"val"	"clob"	0	0	1	0
6257	6255	"pat"	"clob"	0	0	1	1
6258	6255	"esc"	"clob"	0	0	1	2
6261	6260	"val"	"clob"	0	0	1	0
6262	6260	"pat"	"clob"	0	0	1	1
6265	6264	"val"	"clob"	0	0	1	0
6266	6264	"pat"	"clob"	0	0	1	1
6269	6268	"result"	"double"	53	0	0	0
6270	6268	"r"	"double"	53	0	1	1
6273	6272	"result"	"double"	53	0	0	0
6274	6272	"d"	"double"	53	0	1	1
6280	6279	"result"	"clob"	0	0	0	0
6281	6279	"theurl"	"url"	0	0	1	1
6284	6283	"result"	"clob"	0	0	0	0
6285	6283	"theurl"	"url"	0	0	1	1
6288	6287	"result"	"clob"	0	0	0	0
6289	6287	"theurl"	"url"	0	0	1	1
6292	6291	"result"	"clob"	0	0	0	0
6293	6291	"theurl"	"url"	0	0	1	1
6296	6295	"result"	"clob"	0	0	0	0
6297	6295	"theurl"	"url"	0	0	1	1
6300	6299	"result"	"clob"	0	0	0	0
6301	6299	"theurl"	"url"	0	0	1	1
6304	6303	"result"	"clob"	0	0	0	0
6305	6303	"theurl"	"url"	0	0	1	1
6308	6307	"result"	"clob"	0	0	0	0
6309	6307	"theurl"	"url"	0	0	1	1
6312	6311	"result"	"clob"	0	0	0	0
6313	6311	"theurl"	"url"	0	0	1	1
6316	6315	"result"	"clob"	0	0	0	0
6317	6315	"theurl"	"url"	0	0	1	1
6320	6319	"result"	"clob"	0	0	0	0
6321	6319	"theurl"	"url"	0	0	1	1
6324	6323	"result"	"clob"	0	0	0	0
6325	6323	"theurl"	"url"	0	0	1	1
6328	6327	"result"	"clob"	0	0	0	0
6329	6327	"theurl"	"url"	0	0	1	1
6332	6331	"result"	"boolean"	1	0	0	0
6333	6331	"theurl"	"url"	0	0	1	1
6336	6335	"result"	"url"	0	0	0	0
6337	6335	"protocol"	"clob"	0	0	1	1
6338	6335	"hostname"	"clob"	0	0	1	2
6339	6335	"port"	"int"	32	0	1	3
6340	6335	"file"	"clob"	0	0	1	4
6343	6342	"result"	"url"	0	0	0	0
6344	6342	"protocol"	"clob"	0	0	1	1
6345	6342	"hostname"	"clob"	0	0	1	2
6346	6342	"file"	"clob"	0	0	1	3
6349	6348	"result"	"date"	0	0	0	0
6350	6348	"s"	"clob"	0	0	1	1
6351	6348	"format"	"clob"	0	0	1	2
6354	6353	"result"	"clob"	0	0	0	0
6355	6353	"d"	"date"	0	0	1	1
6356	6353	"format"	"clob"	0	0	1	2
6359	6358	"result"	"time"	1	0	0	0
6360	6358	"s"	"clob"	0	0	1	1
6361	6358	"format"	"clob"	0	0	1	2
6364	6363	"result"	"clob"	0	0	0	0
6365	6363	"d"	"time"	1	0	1	1
6366	6363	"format"	"clob"	0	0	1	2
6369	6368	"result"	"timestamp"	7	0	0	0
6370	6368	"s"	"clob"	0	0	1	1
6371	6368	"format"	"clob"	0	0	1	2
6374	6373	"result"	"clob"	0	0	0	0
6375	6373	"d"	"timestamp"	7	0	1	1
6376	6373	"format"	"clob"	0	0	1	2
6380	6379	"result"	"inet"	0	0	0	0
6381	6379	"p"	"inet"	0	0	1	1
6384	6383	"result"	"clob"	0	0	0	0
6385	6383	"p"	"inet"	0	0	1	1
6388	6387	"result"	"int"	32	0	0	0
6389	6387	"p"	"inet"	0	0	1	1
6392	6391	"result"	"inet"	0	0	0	0
6393	6391	"p"	"inet"	0	0	1	1
6394	6391	"mask"	"int"	32	0	1	2
6397	6396	"result"	"inet"	0	0	0	0
6398	6396	"p"	"inet"	0	0	1	1
6401	6400	"result"	"inet"	0	0	0	0
6402	6400	"p"	"inet"	0	0	1	1
6405	6404	"result"	"inet"	0	0	0	0
6406	6404	"p"	"inet"	0	0	1	1
6409	6408	"result"	"clob"	0	0	0	0
6410	6408	"p"	"inet"	0	0	1	1
6413	6412	"result"	"clob"	0	0	0	0
6414	6412	"p"	"inet"	0	0	1	1
6417	6416	"result"	"boolean"	1	0	0	0
6418	6416	"i1"	"inet"	0	0	1	1
6419	6416	"i2"	"inet"	0	0	1	2
6422	6421	"result"	"boolean"	1	0	0	0
6423	6421	"i1"	"inet"	0	0	1	1
6424	6421	"i2"	"inet"	0	0	1	2
6427	6426	"result"	"boolean"	1	0	0	0
6428	6426	"i1"	"inet"	0	0	1	1
6429	6426	"i2"	"inet"	0	0	1	2
6432	6431	"result"	"boolean"	1	0	0	0
6433	6431	"i1"	"inet"	0	0	1	1
6434	6431	"i2"	"inet"	0	0	1	2
6437	6436	"id"	"oid"	63	0	0	0
6438	6436	"owner"	"clob"	0	0	0	1
6439	6436	"defined"	"timestamp"	7	0	0	2
6440	6436	"query"	"clob"	0	0	0	3
6441	6436	"pipe"	"clob"	0	0	0	4
6442	6436	"plan"	"clob"	0	0	0	5
6443	6436	"mal"	"int"	32	0	0	6
6444	6436	"optimize"	"bigint"	64	0	0	7
6447	6446	"id"	"oid"	63	0	0	0
6448	6446	"start"	"timestamp"	7	0	0	1
6449	6446	"stop"	"timestamp"	7	0	0	2
6450	6446	"arguments"	"clob"	0	0	0	3
6451	6446	"tuples"	"wrd"	64	0	0	4
6452	6446	"run"	"bigint"	64	0	0	5
6453	6446	"ship"	"bigint"	64	0	0	6
6454	6446	"cpu"	"int"	32	0	0	7
6455	6446	"io"	"int"	32	0	0	8
6501	6500	"threshold"	"smallint"	16	0	1	0
6506	6505	"event"	"int"	32	0	0	0
6507	6505	"clk"	"varchar"	20	0	0	1
6508	6505	"pc"	"varchar"	50	0	0	2
6509	6505	"thread"	"int"	32	0	0	3
6510	6505	"ticks"	"bigint"	64	0	0	4
6511	6505	"rrsmb"	"bigint"	64	0	0	5
6512	6505	"vmmb"	"bigint"	64	0	0	6
6513	6505	"reads"	"bigint"	64	0	0	7
6514	6505	"writes"	"bigint"	64	0	0	8
6515	6505	"minflt"	"bigint"	64	0	0	9
6516	6505	"majflt"	"bigint"	64	0	0	10
6517	6505	"nvcsw"	"bigint"	64	0	0	11
6518	6505	"stmt"	"clob"	0	0	0	12
6536	6535	"result"	"timestamp"	7	0	0	0
6537	6535	"sec"	"bigint"	64	0	1	1
6540	6539	"result"	"timestamp"	7	0	0	0
6541	6539	"sec"	"int"	32	0	1	1
6544	6543	"result"	"int"	32	0	0	0
6545	6543	"ts"	"timestamp"	7	0	1	1
6548	6547	"result"	"int"	32	0	0	0
6549	6547	"ts"	"timestamptz"	7	0	1	1
6552	6551	"sys"	"clob"	0	0	1	0
6553	6551	"tab"	"clob"	0	0	1	1
6556	6555	"sys"	"clob"	0	0	1	0
6557	6555	"tab"	"clob"	0	0	1	1
6560	6559	"sys"	"clob"	0	0	1	0
6561	6559	"tab"	"clob"	0	0	1	1
6564	6563	"sch"	"varchar"	100	0	0	0
6565	6563	"usr"	"varchar"	100	0	0	1
6566	6563	"dep_type"	"varchar"	32	0	0	2
6569	6568	"sch"	"varchar"	100	0	0	0
6570	6568	"usr"	"varchar"	100	0	0	1
6571	6568	"dep_type"	"varchar"	32	0	0	2
6574	6573	"sch"	"varchar"	100	0	0	0
6575	6573	"usr"	"varchar"	100	0	0	1
6576	6573	"dep_type"	"varchar"	32	0	0	2
6579	6578	"sch"	"varchar"	100	0	0	0
6580	6578	"usr"	"varchar"	100	0	0	1
6581	6578	"dep_type"	"varchar"	32	0	0	2
6584	6583	"sch"	"varchar"	100	0	0	0
6585	6583	"usr"	"varchar"	100	0	0	1
6586	6583	"dep_type"	"varchar"	32	0	0	2
6589	6588	"sch"	"varchar"	100	0	0	0
6590	6588	"usr"	"varchar"	100	0	0	1
6591	6588	"dep_type"	"varchar"	32	0	0	2
6594	6593	"sch"	"varchar"	100	0	0	0
6595	6593	"usr"	"varchar"	100	0	0	1
6596	6593	"dep_type"	"varchar"	32	0	0	2
6599	6598	"sch"	"varchar"	100	0	0	0
6600	6598	"usr"	"varchar"	100	0	0	1
6601	6598	"dep_type"	"varchar"	32	0	0	2
6604	6603	"sch"	"varchar"	100	0	0	0
6605	6603	"usr"	"varchar"	100	0	0	1
6606	6603	"dep_type"	"varchar"	32	0	0	2
6609	6608	"sch"	"varchar"	100	0	0	0
6610	6608	"usr"	"varchar"	100	0	0	1
6611	6608	"dep_type"	"varchar"	32	0	0	2
6614	6613	"sch"	"varchar"	100	0	0	0
6615	6613	"usr"	"varchar"	100	0	0	1
6616	6613	"dep_type"	"varchar"	32	0	0	2
6619	6618	"sch"	"varchar"	100	0	0	0
6620	6618	"usr"	"varchar"	100	0	0	1
6621	6618	"dep_type"	"varchar"	32	0	0	2
6624	6623	"sch"	"varchar"	100	0	0	0
6625	6623	"usr"	"varchar"	100	0	0	1
6626	6623	"dep_type"	"varchar"	32	0	0	2
6629	6628	"sch"	"varchar"	100	0	0	0
6630	6628	"usr"	"varchar"	100	0	0	1
6631	6628	"dep_type"	"varchar"	32	0	0	2
6634	6633	"sch"	"varchar"	100	0	0	0
6635	6633	"usr"	"varchar"	100	0	0	1
6636	6633	"dep_type"	"varchar"	32	0	0	2
6639	6638	"sch"	"varchar"	100	0	0	0
6640	6638	"usr"	"varchar"	100	0	0	1
6641	6638	"dep_type"	"varchar"	32	0	0	2
6644	6643	"sch"	"varchar"	100	0	0	0
6645	6643	"usr"	"varchar"	100	0	0	1
6646	6643	"dep_type"	"varchar"	32	0	0	2
6649	6648	"result"	"clob"	0	0	0	0
6650	6648	"username"	"clob"	0	0	1	1
6653	6652	"user"	"clob"	0	0	0	0
6654	6652	"login"	"timestamp"	7	0	0	1
6655	6652	"sessiontimeout"	"bigint"	64	0	0	2
6656	6652	"lastcommand"	"timestamp"	7	0	0	3
6657	6652	"querytimeout"	"bigint"	64	0	0	4
6658	6652	"active"	"boolean"	1	0	0	5
6669	6668	"delay"	"tinyint"	8	0	1	0
6672	6671	"delay"	"tinyint"	8	0	1	0
6673	6671	"force"	"boolean"	1	0	1	1
6676	6675	"query"	"bigint"	64	0	1	0
6679	6678	"query"	"bigint"	64	0	1	0
6680	6678	"session"	"bigint"	64	0	1	1
6683	6682	"timeout"	"bigint"	64	0	1	0
6686	6685	"result"	"varchar"	32	0	0	0
6687	6685	"s1"	"varchar"	32	0	1	1
6688	6685	"st"	"int"	32	0	1	2
6689	6685	"len"	"int"	32	0	1	3
6690	6685	"s3"	"varchar"	32	0	1	4
6693	6692	"result"	"double"	53	0	0	0
6694	6692	"num"	"double"	53	0	1	1
6695	6692	"prc"	"int"	32	0	1	2
6698	6697	"result"	"double"	53	0	0	0
6699	6697	"num"	"double"	53	0	1	1
6700	6697	"prc"	"int"	32	0	1	2
6701	6697	"truncat"	"int"	32	0	1	3
6704	6703	"result"	"clob"	0	0	0	0
6705	6703	"num"	"double"	53	0	1	1
6706	6703	"prc"	"int"	32	0	1	2
6707	6703	"truncat"	"int"	32	0	1	3
6710	6709	"result"	"double"	53	0	0	0
6711	6709	"pdec"	"double"	53	0	1	1
6712	6709	"pradius"	"double"	53	0	1	2
6715	6714	"result"	"oid"	63	0	0	0
6716	6714	"x"	"int"	32	0	1	1
6717	6714	"y"	"int"	32	0	1	2
6720	6719	"result"	"int"	32	0	0	0
6721	6719	"z"	"oid"	63	0	1	1
6724	6723	"result"	"int"	32	0	0	0
6725	6723	"z"	"oid"	63	0	1	1
6728	6727	"rewrite"	"clob"	0	0	0	0
6729	6727	"count"	"int"	32	0	0	1
6732	6731	"query"	"clob"	0	0	0	0
6733	6731	"count"	"int"	32	0	0	1
6736	6735	"filename"	"clob"	0	0	1	0
6739	6738	"name"	"clob"	0	0	0	0
6740	6738	"def"	"clob"	0	0	0	1
6741	6738	"status"	"clob"	0	0	0	2
6749	6748	"name"	"clob"	0	0	0	0
6750	6748	"value"	"clob"	0	0	0	1
6757	6756	"id"	"int"	32	0	0	0
6758	6756	"name"	"clob"	0	0	0	1
6759	6756	"ttype"	"clob"	0	0	0	2
6760	6756	"count"	"bigint"	64	0	0	3
6761	6756	"refcnt"	"int"	32	0	0	4
6762	6756	"lrefcnt"	"int"	32	0	0	5
6763	6756	"location"	"clob"	0	0	0	6
6764	6756	"heat"	"int"	32	0	0	7
6765	6756	"dirty"	"clob"	0	0	0	8
6766	6756	"status"	"clob"	0	0	0	9
6767	6756	"kind"	"clob"	0	0	0	10
6770	6769	"signature"	"clob"	0	0	0	0
6771	6769	"address"	"clob"	0	0	0	1
6772	6769	"comment"	"clob"	0	0	0	2
6775	6774	"ra_stmt"	"clob"	0	0	1	0
6776	6774	"opt"	"boolean"	1	0	1	1
6781	6780	"qtag"	"bigint"	64	0	0	0
6782	6780	"user"	"clob"	0	0	0	1
6783	6780	"started"	"timestamp"	7	0	0	2
6784	6780	"estimate"	"timestamp"	7	0	0	3
6785	6780	"progress"	"int"	32	0	0	4
6786	6780	"status"	"clob"	0	0	0	5
6787	6780	"tag"	"oid"	63	0	0	6
6788	6780	"query"	"clob"	0	0	0	7
6801	6800	"tag"	"int"	32	0	1	0
6804	6803	"tag"	"int"	32	0	1	0
6807	6806	"tag"	"int"	32	0	1	0
6810	6809	"tag"	"bigint"	64	0	1	0
6813	6812	"tag"	"bigint"	64	0	1	0
6816	6815	"tag"	"bigint"	64	0	1	0
6819	6818	"rowid"	"bigint"	64	0	0	0
6820	6818	"fldid"	"int"	32	0	0	1
6821	6818	"message"	"clob"	0	0	0	2
6822	6818	"input"	"clob"	0	0	0	3
6833	6832	"result"	"double"	53	0	0	0
6834	6832	"val"	"tinyint"	8	0	1	1
6837	6836	"result"	"double"	53	0	0	0
6838	6836	"val"	"smallint"	16	0	1	1
6841	6840	"result"	"double"	53	0	0	0
6842	6840	"val"	"int"	32	0	1	1
6845	6844	"result"	"double"	53	0	0	0
6846	6844	"val"	"wrd"	64	0	1	1
6849	6848	"result"	"double"	53	0	0	0
6850	6848	"val"	"bigint"	64	0	1	1
6853	6852	"result"	"double"	53	0	0	0
6854	6852	"val"	"real"	24	0	1	1
6857	6856	"result"	"double"	53	0	0	0
6858	6856	"val"	"double"	53	0	1	1
6861	6860	"result"	"double"	53	0	0	0
6862	6860	"val"	"date"	0	0	1	1
6865	6864	"result"	"double"	53	0	0	0
6866	6864	"val"	"time"	1	0	1	1
6869	6868	"result"	"double"	53	0	0	0
6870	6868	"val"	"timestamp"	7	0	1	1
6873	6872	"result"	"double"	53	0	0	0
6874	6872	"val"	"tinyint"	8	0	1	1
6877	6876	"result"	"double"	53	0	0	0
6878	6876	"val"	"smallint"	16	0	1	1
6881	6880	"result"	"double"	53	0	0	0
6882	6880	"val"	"int"	32	0	1	1
6885	6884	"result"	"double"	53	0	0	0
6886	6884	"val"	"wrd"	64	0	1	1
6889	6888	"result"	"double"	53	0	0	0
6890	6888	"val"	"bigint"	64	0	1	1
6893	6892	"result"	"double"	53	0	0	0
6894	6892	"val"	"real"	24	0	1	1
6897	6896	"result"	"double"	53	0	0	0
6898	6896	"val"	"double"	53	0	1	1
6901	6900	"result"	"double"	53	0	0	0
6902	6900	"val"	"date"	0	0	1	1
6905	6904	"result"	"double"	53	0	0	0
6906	6904	"val"	"time"	1	0	1	1
6909	6908	"result"	"double"	53	0	0	0
6910	6908	"val"	"timestamp"	7	0	1	1
6913	6912	"result"	"double"	53	0	0	0
6914	6912	"val"	"tinyint"	8	0	1	1
6917	6916	"result"	"double"	53	0	0	0
6918	6916	"val"	"smallint"	16	0	1	1
6921	6920	"result"	"double"	53	0	0	0
6922	6920	"val"	"int"	32	0	1	1
6925	6924	"result"	"double"	53	0	0	0
6926	6924	"val"	"wrd"	64	0	1	1
6929	6928	"result"	"double"	53	0	0	0
6930	6928	"val"	"bigint"	64	0	1	1
6933	6932	"result"	"double"	53	0	0	0
6934	6932	"val"	"real"	24	0	1	1
6937	6936	"result"	"double"	53	0	0	0
6938	6936	"val"	"double"	53	0	1	1
6941	6940	"result"	"double"	53	0	0	0
6942	6940	"val"	"date"	0	0	1	1
6945	6944	"result"	"double"	53	0	0	0
6946	6944	"val"	"time"	1	0	1	1
6949	6948	"result"	"double"	53	0	0	0
6950	6948	"val"	"timestamp"	7	0	1	1
6953	6952	"result"	"double"	53	0	0	0
6954	6952	"val"	"tinyint"	8	0	1	1
6957	6956	"result"	"double"	53	0	0	0
6958	6956	"val"	"smallint"	16	0	1	1
6961	6960	"result"	"double"	53	0	0	0
6962	6960	"val"	"int"	32	0	1	1
6965	6964	"result"	"double"	53	0	0	0
6966	6964	"val"	"wrd"	64	0	1	1
6969	6968	"result"	"double"	53	0	0	0
6970	6968	"val"	"bigint"	64	0	1	1
6973	6972	"result"	"double"	53	0	0	0
6974	6972	"val"	"real"	24	0	1	1
6977	6976	"result"	"double"	53	0	0	0
6978	6976	"val"	"double"	53	0	1	1
6981	6980	"result"	"double"	53	0	0	0
6982	6980	"val"	"date"	0	0	1	1
6985	6984	"result"	"double"	53	0	0	0
6986	6984	"val"	"time"	1	0	1	1
6989	6988	"result"	"double"	53	0	0	0
6990	6988	"val"	"timestamp"	7	0	1	1
6993	6992	"result"	"tinyint"	8	0	0	0
6994	6992	"val"	"tinyint"	8	0	1	1
6997	6996	"result"	"smallint"	16	0	0	0
6998	6996	"val"	"smallint"	16	0	1	1
7001	7000	"result"	"int"	32	0	0	0
7002	7000	"val"	"int"	32	0	1	1
7005	7004	"result"	"wrd"	64	0	0	0
7006	7004	"val"	"wrd"	64	0	1	1
7009	7008	"result"	"bigint"	64	0	0	0
7010	7008	"val"	"bigint"	64	0	1	1
7013	7012	"result"	"decimal"	18	3	0	0
7014	7012	"val"	"decimal"	18	3	1	1
7017	7016	"result"	"real"	24	0	0	0
7018	7016	"val"	"real"	24	0	1	1
7021	7020	"result"	"double"	53	0	0	0
7022	7020	"val"	"double"	53	0	1	1
7025	7024	"result"	"date"	0	0	0	0
7026	7024	"val"	"date"	0	0	1	1
7029	7028	"result"	"time"	1	0	0	0
7030	7028	"val"	"time"	1	0	1	1
7033	7032	"result"	"timestamp"	7	0	0	0
7034	7032	"val"	"timestamp"	7	0	1	1
7037	7036	"result"	"tinyint"	8	0	0	0
7038	7036	"val"	"tinyint"	8	0	1	1
7039	7036	"q"	"double"	53	0	1	2
7042	7041	"result"	"smallint"	16	0	0	0
7043	7041	"val"	"smallint"	16	0	1	1
7044	7041	"q"	"double"	53	0	1	2
7047	7046	"result"	"int"	32	0	0	0
7048	7046	"val"	"int"	32	0	1	1
7049	7046	"q"	"double"	53	0	1	2
7052	7051	"result"	"wrd"	64	0	0	0
7053	7051	"val"	"wrd"	64	0	1	1
7054	7051	"q"	"double"	53	0	1	2
7057	7056	"result"	"bigint"	64	0	0	0
7058	7056	"val"	"bigint"	64	0	1	1
7059	7056	"q"	"double"	53	0	1	2
7062	7061	"result"	"decimal"	18	3	0	0
7063	7061	"val"	"decimal"	18	3	1	1
7064	7061	"q"	"double"	53	0	1	2
7067	7066	"result"	"real"	24	0	0	0
7068	7066	"val"	"real"	24	0	1	1
7069	7066	"q"	"double"	53	0	1	2
7072	7071	"result"	"double"	53	0	0	0
7073	7071	"val"	"double"	53	0	1	1
7074	7071	"q"	"double"	53	0	1	2
7077	7076	"result"	"date"	0	0	0	0
7078	7076	"val"	"date"	0	0	1	1
7079	7076	"q"	"double"	53	0	1	2
7082	7081	"result"	"time"	1	0	0	0
7083	7081	"val"	"time"	1	0	1	1
7084	7081	"q"	"double"	53	0	1	2
7087	7086	"result"	"timestamp"	7	0	0	0
7088	7086	"val"	"timestamp"	7	0	1	1
7089	7086	"q"	"double"	53	0	1	2
7092	7091	"result"	"tinyint"	8	0	0	0
7093	7091	"e1"	"tinyint"	8	0	1	1
7094	7091	"e2"	"tinyint"	8	0	1	2
7097	7096	"result"	"smallint"	16	0	0	0
7098	7096	"e1"	"smallint"	16	0	1	1
7099	7096	"e2"	"smallint"	16	0	1	2
7102	7101	"result"	"int"	32	0	0	0
7103	7101	"e1"	"int"	32	0	1	1
7104	7101	"e2"	"int"	32	0	1	2
7107	7106	"result"	"wrd"	64	0	0	0
7108	7106	"e1"	"wrd"	64	0	1	1
7109	7106	"e2"	"wrd"	64	0	1	2
7112	7111	"result"	"bigint"	64	0	0	0
7113	7111	"e1"	"bigint"	64	0	1	1
7114	7111	"e2"	"bigint"	64	0	1	2
7117	7116	"result"	"real"	24	0	0	0
7118	7116	"e1"	"real"	24	0	1	1
7119	7116	"e2"	"real"	24	0	1	2
7122	7121	"result"	"double"	53	0	0	0
7123	7121	"e1"	"double"	53	0	1	1
7124	7121	"e2"	"double"	53	0	1	2
7127	7126	"result"	"double"	53	0	0	0
7128	7126	"val"	"hugeint"	128	0	1	1
7131	7130	"result"	"double"	53	0	0	0
7132	7130	"val"	"hugeint"	128	0	1	1
7135	7134	"result"	"double"	53	0	0	0
7136	7134	"val"	"hugeint"	128	0	1	1
7139	7138	"result"	"double"	53	0	0	0
7140	7138	"val"	"hugeint"	128	0	1	1
7143	7142	"result"	"hugeint"	128	0	0	0
7144	7142	"val"	"hugeint"	128	0	1	1
7147	7146	"result"	"hugeint"	128	0	0	0
7148	7146	"val"	"hugeint"	128	0	1	1
7149	7146	"q"	"double"	53	0	1	2
7152	7151	"result"	"hugeint"	128	0	0	0
7153	7151	"e1"	"hugeint"	128	0	1	1
7154	7151	"e2"	"hugeint"	128	0	1	2
7157	7156	"result"	"int"	32	0	0	0
7158	7156	"info"	"int"	32	0	1	1
7161	7160	"result"	"int"	32	0	0	0
7162	7160	"info"	"int"	32	0	1	1
7165	7164	"result"	"clob"	0	0	0	0
7166	7164	"info"	"int"	32	0	1	1
7167	7164	"format"	"int"	32	0	1	2
7189	7188	"result"	"mbr"	0	0	0	0
7190	7188	"geom"	"geometry"	0	0	1	1
7193	7192	"result"	"boolean"	1	0	0	0
7194	7192	"box1"	"mbr"	0	0	1	1
7195	7192	"box2"	"mbr"	0	0	1	2
7198	7197	"result"	"boolean"	1	0	0	0
7199	7197	"box1"	"mbr"	0	0	1	1
7200	7197	"box2"	"mbr"	0	0	1	2
7203	7202	"result"	"boolean"	1	0	0	0
7204	7202	"box1"	"mbr"	0	0	1	1
7205	7202	"box2"	"mbr"	0	0	1	2
7208	7207	"result"	"double"	53	0	0	0
7209	7207	"box1"	"mbr"	0	0	1	1
7210	7207	"box2"	"mbr"	0	0	1	2
7213	7212	"result"	"geometry"	0	0	0	0
7214	7212	"wkt"	"clob"	0	0	1	1
7217	7216	"result"	"geometry"	0	0	0	0
7218	7216	"geom"	"clob"	0	0	1	1
7221	7220	"result"	"clob"	0	0	0	0
7222	7220	"geom"	"geometry"	0	0	1	1
7225	7224	"result"	"clob"	0	0	0	0
7226	7224	"geom"	"geometry"	0	0	1	1
7229	7228	"result"	"int"	32	0	0	0
7230	7228	"geom"	"geometry"	0	0	1	1
7233	7232	"result"	"clob"	0	0	0	0
7234	7232	"geom"	"geometry"	0	0	1	1
7237	7236	"result"	"int"	32	0	0	0
7238	7236	"geom"	"geometry"	0	0	1	1
7241	7240	"result"	"geometry"	0	0	0	0
7242	7240	"geom"	"geometry"	0	0	1	1
7243	7240	"srid"	"int"	32	0	1	2
7246	7245	"result"	"boolean"	1	0	0	0
7247	7245	"geom"	"geometry"	0	0	1	1
7250	7249	"result"	"boolean"	1	0	0	0
7251	7249	"geom"	"geometry"	0	0	1	1
7254	7253	"result"	"geometry"	0	0	0	0
7255	7253	"geom"	"geometry"	0	0	1	1
7258	7257	"result"	"geometry"	0	0	0	0
7259	7257	"geom"	"geometry"	0	0	1	1
7262	7261	"result"	"boolean"	1	0	0	0
7263	7261	"geom1"	"geometry"	0	0	1	1
7264	7261	"geom2"	"geometry"	0	0	1	2
7267	7266	"result"	"boolean"	1	0	0	0
7268	7266	"geom1"	"geometry"	0	0	1	1
7269	7266	"geom2"	"geometry"	0	0	1	2
7272	7271	"result"	"boolean"	1	0	0	0
7273	7271	"geom1"	"geometry"	0	0	1	1
7274	7271	"geom2"	"geometry"	0	0	1	2
7277	7276	"result"	"boolean"	1	0	0	0
7278	7276	"geom1"	"geometry"	0	0	1	1
7279	7276	"geom2"	"geometry"	0	0	1	2
7282	7281	"result"	"boolean"	1	0	0	0
7283	7281	"geom1"	"geometry"	0	0	1	1
7284	7281	"geom2"	"geometry"	0	0	1	2
7287	7286	"result"	"boolean"	1	0	0	0
7288	7286	"geom1"	"geometry"	0	0	1	1
7289	7286	"geom2"	"geometry"	0	0	1	2
7292	7291	"result"	"boolean"	1	0	0	0
7293	7291	"geom1"	"geometry"	0	0	1	1
7294	7291	"geom2"	"geometry"	0	0	1	2
7297	7296	"result"	"boolean"	1	0	0	0
7298	7296	"geom1"	"geometry"	0	0	1	1
7299	7296	"geom2"	"geometry"	0	0	1	2
7302	7301	"result"	"boolean"	1	0	0	0
7303	7301	"geom1"	"geometry"	0	0	1	1
7304	7301	"geom2"	"geometry"	0	0	1	2
7305	7301	"intersection_matrix_pattern"	"clob"	0	0	1	3
7308	7307	"result"	"double"	53	0	0	0
7309	7307	"geom1"	"geometry"	0	0	1	1
7310	7307	"geom2"	"geometry"	0	0	1	2
7313	7312	"result"	"geometry"	0	0	0	0
7314	7312	"geom1"	"geometry"	0	0	1	1
7315	7312	"geom2"	"geometry"	0	0	1	2
7318	7317	"result"	"geometry"	0	0	0	0
7319	7317	"geom1"	"geometry"	0	0	1	1
7320	7317	"geom2"	"geometry"	0	0	1	2
7323	7322	"result"	"geometry"	0	0	0	0
7324	7322	"geom1"	"geometry"	0	0	1	1
7325	7322	"geom2"	"geometry"	0	0	1	2
7328	7327	"result"	"geometry"	0	0	0	0
7329	7327	"geom"	"geometry"	0	0	1	1
7332	7331	"result"	"geometry"	0	0	0	0
7333	7331	"geom1"	"geometry"	0	0	1	1
7334	7331	"geom2"	"geometry"	0	0	1	2
7337	7336	"result"	"geometry"	0	0	0	0
7338	7336	"geom"	"geometry"	0	0	1	1
7339	7336	"radius"	"double"	53	0	1	2
7342	7341	"result"	"geometry"	0	0	0	0
7343	7341	"geom"	"geometry"	0	0	1	1
7346	7345	"result"	"double"	53	0	0	0
7347	7345	"geom"	"geometry"	0	0	1	1
7350	7349	"result"	"double"	53	0	0	0
7351	7349	"geom"	"geometry"	0	0	1	1
7354	7353	"result"	"double"	53	0	0	0
7355	7353	"geom"	"geometry"	0	0	1	1
7358	7357	"result"	"geometry"	0	0	0	0
7359	7357	"geom"	"geometry"	0	0	1	1
7362	7361	"result"	"geometry"	0	0	0	0
7363	7361	"geom"	"geometry"	0	0	1	1
7366	7365	"result"	"boolean"	1	0	0	0
7367	7365	"geom"	"geometry"	0	0	1	1
7370	7369	"result"	"double"	53	0	0	0
7371	7369	"geom"	"geometry"	0	0	1	1
7374	7373	"result"	"boolean"	1	0	0	0
7375	7373	"geom"	"geometry"	0	0	1	1
7378	7377	"result"	"int"	32	0	0	0
7379	7377	"geom"	"geometry"	0	0	1	1
7382	7381	"result"	"geometry"	0	0	0	0
7383	7381	"geom"	"geometry"	0	0	1	1
7384	7381	"positionnum"	"int"	32	0	1	2
7387	7386	"result"	"geometry"	0	0	0	0
7388	7386	"geom"	"geometry"	0	0	1	1
7391	7390	"result"	"geometry"	0	0	0	0
7392	7390	"geom"	"geometry"	0	0	1	1
7395	7394	"result"	"double"	53	0	0	0
7396	7394	"geom"	"geometry"	0	0	1	1
7399	7398	"result"	"geometry"	0	0	0	0
7400	7398	"geom"	"geometry"	0	0	1	1
7403	7402	"result"	"geometry"	0	0	0	0
7404	7402	"geom"	"geometry"	0	0	1	1
7407	7406	"result"	"int"	32	0	0	0
7408	7406	"geom"	"geometry"	0	0	1	1
7411	7410	"result"	"geometry"	0	0	0	0
7412	7410	"geom"	"geometry"	0	0	1	1
7413	7410	"positionnum"	"int"	32	0	1	2
7416	7415	"result"	"geometrya"	0	0	0	0
7417	7415	"geom"	"geometry"	0	0	1	1
7420	7419	"result"	"int"	32	0	0	0
7421	7419	"geom"	"geometry"	0	0	1	1
7424	7423	"result"	"geometry"	0	0	0	0
7425	7423	"geom"	"geometry"	0	0	1	1
7426	7423	"positionnum"	"int"	32	0	1	2
7429	7428	"result"	"int"	32	0	0	0
7430	7428	"geom"	"geometry"	0	0	1	1
7433	7432	"result"	"geometry"	0	0	0	0
7434	7432	"geom"	"geometry"	0	0	1	1
7435	7432	"patchnum"	"int"	32	0	1	2
7438	7437	"result"	"geometry"	0	0	0	0
7439	7437	"wkt"	"clob"	0	0	1	1
7440	7437	"srid"	"int"	32	0	1	2
7443	7442	"result"	"geometry"	0	0	0	0
7444	7442	"wkt"	"clob"	0	0	1	1
7445	7442	"srid"	"int"	32	0	1	2
7448	7447	"result"	"geometry"	0	0	0	0
7449	7447	"wkt"	"clob"	0	0	1	1
7450	7447	"srid"	"int"	32	0	1	2
7453	7452	"result"	"geometry"	0	0	0	0
7454	7452	"wkt"	"clob"	0	0	1	1
7455	7452	"srid"	"int"	32	0	1	2
7458	7457	"result"	"geometry"	0	0	0	0
7459	7457	"wkt"	"clob"	0	0	1	1
7460	7457	"srid"	"int"	32	0	1	2
7463	7462	"result"	"geometry"	0	0	0	0
7464	7462	"wkt"	"clob"	0	0	1	1
7465	7462	"srid"	"int"	32	0	1	2
7468	7467	"result"	"geometry"	0	0	0	0
7469	7467	"wkt"	"clob"	0	0	1	1
7470	7467	"srid"	"int"	32	0	1	2
7473	7472	"result"	"geometry"	0	0	0	0
7474	7472	"wkt"	"clob"	0	0	1	1
7475	7472	"srid"	"int"	32	0	1	2
7478	7477	"result"	"geometry"	0	0	0	0
7479	7477	"wkt"	"clob"	0	0	1	1
7480	7477	"srid"	"int"	32	0	1	2
7483	7482	"result"	"geometry"	0	0	0	0
7484	7482	"wkt"	"clob"	0	0	1	1
7485	7482	"srid"	"int"	32	0	1	2
7488	7487	"result"	"geometry"	0	0	0	0
7489	7487	"wkt"	"clob"	0	0	1	1
7490	7487	"srid"	"int"	32	0	1	2
7493	7492	"result"	"geometry"	0	0	0	0
7494	7492	"wkt"	"clob"	0	0	1	1
7497	7496	"result"	"geometry"	0	0	0	0
7498	7496	"wkt"	"clob"	0	0	1	1
7501	7500	"result"	"geometry"	0	0	0	0
7502	7500	"wkt"	"clob"	0	0	1	1
7505	7504	"result"	"geometry"	0	0	0	0
7506	7504	"wkt"	"clob"	0	0	1	1
7509	7508	"result"	"geometry"	0	0	0	0
7510	7508	"wkt"	"clob"	0	0	1	1
7513	7512	"result"	"geometry"	0	0	0	0
7514	7512	"wkt"	"clob"	0	0	1	1
7517	7516	"result"	"geometry"	0	0	0	0
7518	7516	"wkt"	"clob"	0	0	1	1
7521	7520	"result"	"geometry"	0	0	0	0
7522	7520	"wkt"	"clob"	0	0	1	1
7525	7524	"result"	"geometry"	0	0	0	0
7526	7524	"wkt"	"clob"	0	0	1	1
7529	7528	"result"	"geometry"	0	0	0	0
7530	7528	"x"	"double"	53	0	1	1
7531	7528	"y"	"double"	53	0	1	2
7534	7533	"result"	"geometry"	0	0	0	0
7535	7533	"x"	"double"	53	0	1	1
7536	7533	"y"	"double"	53	0	1	2
7539	7538	"result"	"geometry"	0	0	0	0
7540	7538	"x"	"double"	53	0	1	1
7541	7538	"y"	"double"	53	0	1	2
7542	7538	"z"	"double"	53	0	1	3
7545	7544	"result"	"geometry"	0	0	0	0
7546	7544	"x"	"double"	53	0	1	1
7547	7544	"y"	"double"	53	0	1	2
7548	7544	"z"	"double"	53	0	1	3
7549	7544	"m"	"double"	53	0	1	4
7552	7551	"result"	"geometry"	0	0	0	0
7553	7551	"x"	"double"	53	0	1	1
7554	7551	"y"	"double"	53	0	1	2
7555	7551	"m"	"double"	53	0	1	3
7558	7557	"result"	"geometry"	0	0	0	0
7559	7557	"geom"	"geometry"	0	0	1	1
7562	7561	"result"	"geometry"	0	0	0	0
7563	7561	"geom1"	"geometry"	0	0	1	1
7564	7561	"geom2"	"geometry"	0	0	1	2
7567	7566	"result"	"geometry"	0	0	0	0
7568	7566	"xmin"	"double"	53	0	1	1
7569	7566	"ymin"	"double"	53	0	1	2
7570	7566	"xmax"	"double"	53	0	1	3
7571	7566	"ymax"	"double"	53	0	1	4
7572	7566	"srid"	"int"	32	0	1	5
7575	7574	"result"	"geometry"	0	0	0	0
7576	7574	"xmin"	"double"	53	0	1	1
7577	7574	"ymin"	"double"	53	0	1	2
7578	7574	"xmax"	"double"	53	0	1	3
7579	7574	"ymax"	"double"	53	0	1	4
7582	7581	"result"	"geometry"	0	0	0	0
7583	7581	"geom"	"geometry"	0	0	1	1
7586	7585	"result"	"geometry"	0	0	0	0
7587	7585	"geom"	"geometry"	0	0	1	1
7588	7585	"srid"	"int"	32	0	1	2
7591	7590	"result"	"mbr"	0	0	0	0
7592	7590	"lowleftpointgeom"	"geometry"	0	0	1	1
7593	7590	"uprightpointgeom"	"geometry"	0	0	1	2
7596	7595	"result"	"clob"	0	0	0	0
7597	7595	"geom"	"geometry"	0	0	1	1
7600	7599	"result"	"int"	32	0	0	0
7601	7599	"geom"	"geometry"	0	0	1	1
7604	7603	"result"	"boolean"	1	0	0	0
7605	7603	"geom"	"geometry"	0	0	1	1
7608	7607	"result"	"clob"	0	0	0	0
7609	7607	"geom"	"geometry"	0	0	1	1
7612	7611	"result"	"int"	32	0	0	0
7613	7611	"geom"	"geometry"	0	0	1	1
7616	7615	"result"	"int"	32	0	0	0
7617	7615	"geom"	"geometry"	0	0	1	1
7620	7619	"result"	"int"	32	0	0	0
7621	7619	"geom"	"geometry"	0	0	1	1
7624	7623	"result"	"double"	53	0	0	0
7625	7623	"geom"	"geometry"	0	0	1	1
7628	7627	"result"	"double"	53	0	0	0
7629	7627	"box"	"mbr"	0	0	1	1
7632	7631	"result"	"double"	53	0	0	0
7633	7631	"geom"	"geometry"	0	0	1	1
7636	7635	"result"	"double"	53	0	0	0
7637	7635	"box"	"mbr"	0	0	1	1
7640	7639	"result"	"double"	53	0	0	0
7641	7639	"geom"	"geometry"	0	0	1	1
7644	7643	"result"	"double"	53	0	0	0
7645	7643	"box"	"mbr"	0	0	1	1
7648	7647	"result"	"double"	53	0	0	0
7649	7647	"geom"	"geometry"	0	0	1	1
7652	7651	"result"	"double"	53	0	0	0
7653	7651	"box"	"mbr"	0	0	1	1
7656	7655	"result"	"geometry"	0	0	0	0
7657	7655	"geom"	"geometry"	0	0	1	1
7660	7659	"result"	"geometry"	0	0	0	0
7661	7659	"geom"	"geometry"	0	0	1	1
7664	7663	"result"	"geometry"	0	0	0	0
7665	7663	"geom"	"geometry"	0	0	1	1
7666	7663	"sz"	"double"	53	0	1	2
7669	7668	"result"	"clob"	0	0	0	0
7670	7668	"srid_in"	"int"	32	0	1	1
7673	7672	"result"	"geometry"	0	0	0	0
7674	7672	"geom"	"geometry"	0	0	1	1
7675	7672	"srid_src"	"int"	32	0	1	2
7676	7672	"srid_dest"	"int"	32	0	1	3
7677	7672	"proj4_src"	"clob"	0	0	1	4
7678	7672	"proj4_dest"	"clob"	0	0	1	5
7681	7680	"result"	"geometry"	0	0	0	0
7682	7680	"geom"	"geometry"	0	0	1	1
7683	7680	"srid"	"int"	32	0	1	2
7686	7685	"result"	"geometry"	0	0	0	0
7687	7685	"geom"	"geometry"	0	0	1	1
7688	7685	"dx"	"double"	53	0	1	2
7689	7685	"dy"	"double"	53	0	1	3
7692	7691	"result"	"geometry"	0	0	0	0
7693	7691	"geom"	"geometry"	0	0	1	1
7694	7691	"dx"	"double"	53	0	1	2
7695	7691	"dy"	"double"	53	0	1	3
7696	7691	"dz"	"double"	53	0	1	4
7699	7698	"result"	"clob"	0	0	0	0
7700	7698	"geom"	"geometry"	0	0	1	1
7703	7702	"result"	"boolean"	1	0	0	0
7704	7702	"geom1"	"geometry"	0	0	1	1
7705	7702	"geom2"	"geometry"	0	0	1	2
7708	7707	"result"	"boolean"	1	0	0	0
7709	7707	"geom1"	"geometry"	0	0	1	1
7710	7707	"geom2"	"geometry"	0	0	1	2
7713	7712	"result"	"boolean"	1	0	0	0
7714	7712	"geom1"	"geometry"	0	0	1	1
7715	7712	"geom2"	"geometry"	0	0	1	2
7716	7712	"dst"	"double"	53	0	1	3
7719	7718	"result"	"double"	53	0	0	0
7720	7718	"geom"	"geometry"	0	0	1	1
7723	7722	"result"	"geometry"	0	0	0	0
7724	7722	"geom1"	"geometry"	0	0	1	1
7725	7722	"geom2"	"geometry"	0	0	1	2
7728	7727	"result"	"geometry"	0	0	0	0
7729	7727	"geom"	"geometry"	0	0	1	1
7732	7731	"result"	"geometry"	0	0	0	0
7733	7731	"geom"	"geometry"	0	0	1	1
7734	7731	"tolerance"	"double"	53	0	1	2
7735	7731	"flags"	"int"	32	0	1	3
7738	7737	"id"	"clob"	0	0	0	0
7739	7737	"polygonwkb"	"geometry"	0	0	0	1
7740	7737	"geom"	"geometry"	0	0	1	2
7743	7742	"path"	"clob"	0	0	0	0
7744	7742	"pointg"	"geometry"	0	0	0	1
7745	7742	"geom"	"geometry"	0	0	1	2
7748	7747	"result"	"boolean"	1	0	0	0
7749	7747	"a"	"geometry"	0	0	1	1
7750	7747	"x"	"double"	53	0	1	2
7751	7747	"y"	"double"	53	0	1	3
7756	7755	"result"	"json"	0	0	0	0
7757	7755	"js"	"json"	0	0	1	1
7758	7755	"pathexpr"	"clob"	0	0	1	2
7761	7760	"result"	"json"	0	0	0	0
7762	7760	"js"	"json"	0	0	1	1
7763	7760	"name"	"tinyint"	8	0	1	2
7766	7765	"result"	"json"	0	0	0	0
7767	7765	"js"	"json"	0	0	1	1
7768	7765	"name"	"int"	32	0	1	2
7771	7770	"result"	"json"	0	0	0	0
7772	7770	"js"	"json"	0	0	1	1
7773	7770	"name"	"bigint"	64	0	1	2
7776	7775	"result"	"clob"	0	0	0	0
7777	7775	"js"	"json"	0	0	1	1
7778	7775	"e"	"clob"	0	0	1	2
7781	7780	"result"	"double"	53	0	0	0
7782	7780	"js"	"json"	0	0	1	1
7785	7784	"result"	"bigint"	64	0	0	0
7786	7784	"js"	"json"	0	0	1	1
7789	7788	"result"	"boolean"	1	0	0	0
7790	7788	"js"	"clob"	0	0	1	1
7793	7792	"result"	"boolean"	1	0	0	0
7794	7792	"js"	"clob"	0	0	1	1
7797	7796	"result"	"boolean"	1	0	0	0
7798	7796	"js"	"clob"	0	0	1	1
7801	7800	"result"	"boolean"	1	0	0	0
7802	7800	"js"	"json"	0	0	1	1
7805	7804	"result"	"boolean"	1	0	0	0
7806	7804	"js"	"json"	0	0	1	1
7809	7808	"result"	"boolean"	1	0	0	0
7810	7808	"js"	"json"	0	0	1	1
7813	7812	"result"	"int"	32	0	0	0
7814	7812	"js"	"json"	0	0	1	1
7817	7816	"result"	"json"	0	0	0	0
7818	7816	"js"	"json"	0	0	1	1
7821	7820	"result"	"json"	0	0	0	0
7822	7820	"js"	"json"	0	0	1	1
7825	7824	"result"	"clob"	0	0	0	0
7826	7824	"js"	"json"	0	0	1	1
7829	7828	"result"	"clob"	0	0	0	0
7830	7828	"js"	"clob"	0	0	1	1
7833	7832	"result"	"clob"	0	0	0	0
7834	7832	"js"	"int"	32	0	1	1
7837	7836	"result"	"clob"	0	0	0	0
7838	7836	"js"	"json"	0	0	1	1
7841	7840	"result"	"clob"	0	0	0	0
7842	7840	"x"	"clob"	0	0	1	1
7845	7844	"result"	"clob"	0	0	0	0
7846	7844	"x"	"double"	53	0	1	1
7849	7848	"result"	"json"	0	0	0	0
7850	7848	"js"	"json"	0	0	1	1
7851	7848	"name"	"hugeint"	128	0	1	2
7854	7853	"result"	"clob"	0	0	0	0
7855	7853	"v"	"clob"	0	0	1	1
7859	7858	"result"	"uuid"	0	0	0	0
7862	7861	"result"	"uuid"	0	0	0	0
7863	7861	"u"	"uuid"	0	0	1	1
7866	7865	"result"	"uuid"	0	0	0	0
7867	7865	"u"	"clob"	0	0	1	1
7870	7869	"result"	"double"	53	0	0	0
7871	7869	"chi2"	"double"	53	0	1	1
7872	7869	"datapoints"	"double"	53	0	1	2
7880	7879	"beat"	"int"	32	0	1	0
7883	7882	"poolsize"	"int"	32	0	1	0
7886	7885	"host"	"clob"	0	0	1	0
7887	7885	"port"	"int"	32	0	1	1
7911	7910	"dirname"	"clob"	0	0	1	0
7914	7913	"fname"	"clob"	0	0	1	0
7917	7916	"tname"	"clob"	0	0	1	0
7920	7919	"dirname"	"clob"	0	0	1	0
7921	7919	"pat"	"clob"	0	0	1	1
7956	7955	"fname"	"varchar"	256	0	1	0
7959	7958	"fid"	"int"	32	0	1	0
7960	7958	"varnname"	"varchar"	256	0	1	1
7963	7962	"fname"	"clob"	0	0	1	0
7966	7965	"tname"	"clob"	0	0	1	0
7969	7968	"schema"	"clob"	0	0	0	0
7970	7968	"table"	"clob"	0	0	0	1
7971	7968	"column"	"clob"	0	0	0	2
7972	7968	"type"	"clob"	0	0	0	3
7973	7968	"mode"	"clob"	0	0	0	4
7974	7968	"location"	"clob"	0	0	0	5
7975	7968	"count"	"bigint"	64	0	0	6
7976	7968	"typewidth"	"int"	32	0	0	7
7977	7968	"columnsize"	"bigint"	64	0	0	8
7978	7968	"heapsize"	"bigint"	64	0	0	9
7979	7968	"hashes"	"bigint"	64	0	0	10
7980	7968	"phash"	"boolean"	1	0	0	11
7981	7968	"imprints"	"bigint"	64	0	0	12
7982	7968	"sorted"	"boolean"	1	0	0	13
8015	8014	"result"	"bigint"	64	0	0	0
8016	8014	"nme"	"clob"	0	0	1	1
8017	8014	"i"	"bigint"	64	0	1	2
8018	8014	"d"	"bigint"	64	0	1	3
8021	8020	"result"	"bigint"	64	0	0	0
8022	8020	"tpe"	"clob"	0	0	1	1
8023	8020	"i"	"bigint"	64	0	1	2
8024	8020	"w"	"int"	32	0	1	3
8027	8026	"result"	"bigint"	64	0	0	0
8028	8026	"b"	"boolean"	1	0	1	1
8029	8026	"i"	"bigint"	64	0	1	2
8032	8031	"result"	"bigint"	64	0	0	0
8033	8031	"i"	"bigint"	64	0	1	1
8034	8031	"nme"	"clob"	0	0	1	2
8037	8036	"schema"	"clob"	0	0	0	0
8038	8036	"table"	"clob"	0	0	0	1
8039	8036	"column"	"clob"	0	0	0	2
8040	8036	"type"	"clob"	0	0	0	3
8041	8036	"count"	"bigint"	64	0	0	4
8042	8036	"columnsize"	"bigint"	64	0	0	5
8043	8036	"heapsize"	"bigint"	64	0	0	6
8044	8036	"hashes"	"bigint"	64	0	0	7
8045	8036	"imprints"	"bigint"	64	0	0	8
8046	8036	"sorted"	"boolean"	1	0	0	9
8084	8083	"MinMax"	"int"	32	0	1	0
8085	8083	"sample"	"bigint"	64	0	1	1
8088	8087	"MinMax"	"int"	32	0	1	0
8089	8087	"sample"	"bigint"	64	0	1	1
8090	8087	"sch"	"clob"	0	0	1	2
8093	8092	"MinMax"	"int"	32	0	1	0
8094	8092	"sample"	"bigint"	64	0	1	1
8095	8092	"sch"	"clob"	0	0	1	2
8096	8092	"tbl"	"clob"	0	0	1	3
8099	8098	"MinMax"	"int"	32	0	1	0
8100	8098	"sample"	"bigint"	64	0	1	1
8101	8098	"sch"	"clob"	0	0	1	2
8102	8098	"tbl"	"clob"	0	0	1	3
8103	8098	"col"	"clob"	0	0	1	4
8106	8105	"result"	"clob"	0	0	0	0
8107	8105	"src"	"clob"	0	0	1	1
8110	8109	"result"	"smallint"	16	0	0	0
8111	8109	"one"	"tinyint"	8	0	1	1
8112	8109	"two"	"tinyint"	8	0	1	2
8115	8114	"result"	"int"	32	0	0	0
8116	8114	"one"	"smallint"	16	0	1	1
8117	8114	"two"	"smallint"	16	0	1	2
8120	8119	"result"	"bigint"	64	0	0	0
8121	8119	"one"	"int"	32	0	1	1
8122	8119	"two"	"int"	32	0	1	2
8125	8124	"result"	"hugeint"	128	0	0	0
8126	8124	"one"	"bigint"	64	0	1	1
8127	8124	"two"	"bigint"	64	0	1	2
8131	8130	"bam_repos"	"clob"	0	0	1	0
8132	8130	"dbschema"	"smallint"	16	0	1	1
8135	8134	"bam_files"	"clob"	0	0	1	0
8136	8134	"dbschema"	"smallint"	16	0	1	1
8139	8138	"bam_file"	"clob"	0	0	1	0
8140	8138	"dbschema"	"smallint"	16	0	1	1
8143	8142	"file_id"	"bigint"	64	0	1	0
8144	8142	"dbschema"	"smallint"	16	0	1	1
8147	8146	"result"	"boolean"	1	0	0	0
8148	8146	"flag"	"smallint"	16	0	1	1
8149	8146	"name"	"clob"	0	0	1	2
8152	8151	"result"	"clob"	0	0	0	0
8153	8151	"seq"	"clob"	0	0	1	1
8156	8155	"result"	"clob"	0	0	0	0
8157	8155	"qual"	"clob"	0	0	1	1
8160	8159	"result"	"int"	32	0	0	0
8161	8159	"cigar"	"clob"	0	0	1	1
8164	8163	"result"	"char"	1	0	0	0
8165	8163	"ref_pos"	"int"	32	0	1	1
8166	8163	"alg_seq"	"clob"	0	0	1	2
8167	8163	"alg_pos"	"int"	32	0	1	3
8168	8163	"alg_cigar"	"clob"	0	0	1	4
8171	8170	"output_path"	"clob"	0	0	1	0
8174	8173	"output_path"	"clob"	0	0	1	0
8244	8243	"value"	"tinyint"	8	0	0	0
8245	8243	"first"	"tinyint"	8	0	1	1
8246	8243	"last"	"tinyint"	8	0	1	2
8249	8248	"value"	"tinyint"	8	0	0	0
8250	8248	"first"	"tinyint"	8	0	1	1
8251	8248	"last"	"tinyint"	8	0	1	2
8252	8248	"stepsize"	"tinyint"	8	0	1	3
8255	8254	"value"	"smallint"	16	0	0	0
8256	8254	"first"	"smallint"	16	0	1	1
8257	8254	"last"	"smallint"	16	0	1	2
8260	8259	"value"	"smallint"	16	0	0	0
8261	8259	"first"	"smallint"	16	0	1	1
8262	8259	"last"	"smallint"	16	0	1	2
8263	8259	"stepsize"	"smallint"	16	0	1	3
8266	8265	"value"	"int"	32	0	0	0
8267	8265	"first"	"int"	32	0	1	1
8268	8265	"last"	"int"	32	0	1	2
8271	8270	"value"	"int"	32	0	0	0
8272	8270	"first"	"int"	32	0	1	1
8273	8270	"last"	"int"	32	0	1	2
8274	8270	"stepsize"	"int"	32	0	1	3
8277	8276	"value"	"bigint"	64	0	0	0
8278	8276	"first"	"bigint"	64	0	1	1
8279	8276	"last"	"bigint"	64	0	1	2
8282	8281	"value"	"bigint"	64	0	0	0
8283	8281	"first"	"bigint"	64	0	1	1
8284	8281	"last"	"bigint"	64	0	1	2
8285	8281	"stepsize"	"bigint"	64	0	1	3
8288	8287	"value"	"real"	24	0	0	0
8289	8287	"first"	"real"	24	0	1	1
8290	8287	"last"	"real"	24	0	1	2
8291	8287	"stepsize"	"real"	24	0	1	3
8294	8293	"value"	"double"	53	0	0	0
8295	8293	"first"	"double"	53	0	1	1
8296	8293	"last"	"double"	53	0	1	2
8297	8293	"stepsize"	"double"	53	0	1	3
8300	8299	"value"	"decimal"	10	2	0	0
8301	8299	"first"	"decimal"	10	2	1	1
8302	8299	"last"	"decimal"	10	2	1	2
8303	8299	"stepsize"	"decimal"	10	2	1	3
8306	8305	"value"	"timestamp"	7	0	0	0
8307	8305	"first"	"timestamp"	7	0	1	1
8308	8305	"last"	"timestamp"	7	0	1	2
8309	8305	"stepsize"	"sec_interval"	13	0	1	3
8312	8311	"value"	"hugeint"	128	0	0	0
8313	8311	"first"	"hugeint"	128	0	1	1
8314	8311	"last"	"hugeint"	128	0	1	2
8317	8316	"value"	"hugeint"	128	0	0	0
8318	8316	"first"	"hugeint"	128	0	1	1
8319	8316	"last"	"hugeint"	128	0	1	2
8320	8316	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 266 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
465	6268	7
464	6268	7
1211	6268	7
465	6272	7
464	6272	7
1211	6272	7
6436	6465	5
6446	6476	5
6436	6494	5
6446	6494	5
6505	6533	5
2003	6563	7
2001	6563	7
2002	6563	7
6232	6563	7
6241	6568	7
6239	6568	7
6240	6568	7
2005	6568	7
2001	6568	7
2003	6568	7
6200	6573	7
2047	6573	7
2046	6573	7
2049	6573	7
2048	6573	7
6200	6578	7
2088	6578	7
2086	6578	7
2090	6578	7
2083	6578	7
2079	6578	7
6200	6583	7
2047	6583	7
2046	6583	7
2049	6583	7
2092	6583	7
2091	6583	7
2048	6583	7
2093	6583	7
2094	6583	7
6200	6588	7
2081	6588	7
2079	6588	7
2084	6588	7
2080	6588	7
2083	6588	7
6200	6593	7
2047	6593	7
2046	6593	7
2049	6593	7
2017	6593	7
2016	6593	7
2048	6593	7
2018	6593	7
6210	6598	7
2047	6598	7
2046	6598	7
2049	6598	7
2048	6598	7
6200	6598	7
6210	6603	7
2081	6603	7
2079	6603	7
2084	6603	7
2103	6603	7
2102	6603	7
2104	6603	7
2080	6603	7
2083	6603	7
202	6603	7
66	6603	7
65	6603	7
67	6603	7
6210	6608	7
2088	6608	7
2086	6608	7
2090	6608	7
2083	6608	7
2079	6608	7
2087	6608	7
2103	6608	7
2102	6608	7
2104	6608	7
66	6608	7
65	6608	7
67	6608	7
6210	6613	7
2047	6613	7
2046	6613	7
2049	6613	7
2048	6613	7
2017	6613	7
2016	6613	7
2018	6613	7
6210	6618	7
2047	6618	7
2046	6618	7
2049	6618	7
2092	6618	7
2091	6618	7
2048	6618	7
2093	6618	7
6200	6623	7
2047	6623	7
2046	6623	7
2049	6623	7
2017	6623	7
2016	6623	7
2048	6623	7
2018	6623	7
6200	6628	7
2047	6628	7
2046	6628	7
2049	6628	7
2092	6628	7
2091	6628	7
2048	6628	7
2093	6628	7
2018	6633	7
2016	6633	7
2017	6633	7
2047	6633	7
2046	6633	7
2049	6633	7
2048	6633	7
2018	6638	7
2016	6638	7
2017	6638	7
2047	6638	7
2046	6638	7
2049	6638	7
2092	6638	7
2091	6638	7
2048	6638	7
2093	6638	7
2083	6643	7
2079	6643	7
2080	6643	7
2084	6643	7
6652	6666	5
136	6685	7
72	6685	7
70	6685	7
1354	6685	7
1340	6685	7
261	6685	7
1351	6685	7
262	6685	7
308	6685	7
67	6697	7
547	6697	7
136	6697	7
138	6697	7
69	6697	7
6692	6697	7
6738	6746	5
6748	6754	5
6780	6798	5
6818	6828	5
7169	7171	10
7169	7170	4
6754	7185	5
6200	7185	5
6210	7185	5
2010	7185	5
2007	7185	5
2009	7185	5
2002	7185	5
2001	7185	5
2003	7185	5
308	7185	5
262	7185	5
7156	7185	5
7160	7185	5
7164	7185	5
7419	7428	7
7423	7432	7
7175	7668	7
7176	7668	7
7169	7668	7
74	7668	7
7236	7680	7
7668	7680	7
69	7680	7
7672	7680	7
136	7680	7
138	7680	7
7889	7891	10
7889	7890	4
7894	7896	10
7897	7899	10
7894	7895	4
7902	7904	10
7905	7907	10
7902	7903	4
7968	7998	5
8000	8012	13
8010	8012	13
8001	8012	13
8002	8012	13
8003	8012	13
8004	8012	13
8005	8012	13
8006	8012	13
8007	8012	13
8008	8012	13
8009	8012	13
67	8014	7
145	8014	7
269	8014	7
135	8020	7
68	8020	7
308	8020	7
149	8020	7
67	8026	7
145	8026	7
136	8031	7
67	8031	7
424	8031	7
8000	8036	7
8010	8036	7
8001	8036	7
8002	8036	7
8003	8036	7
8005	8036	7
8006	8036	7
8007	8036	7
8008	8036	7
8009	8036	7
8014	8036	7
8020	8036	7
8026	8036	7
8031	8036	7
8036	8058	5
8036	8068	5
82	8068	5
89	8068	5
90	8068	5
85	8068	5
69	8068	5
67	8068	5
145	8068	5
8176	8183	10
8176	8182	4
8186	8194	10
8187	8194	10
8187	8196	10
8186	8193	4
8187	8193	4
8182	8195	11
8187	8195	11
8199	8213	10
8200	8213	10
8200	8215	10
8199	8212	4
8200	8212	4
8182	8214	11
8200	8214	11
8218	8225	10
8219	8225	10
8219	8227	10
8218	8224	4
8219	8224	4
8182	8226	11
8219	8226	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1802 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
32	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
33	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
34	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
35	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
36	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
37	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
38	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
39	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
40	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
41	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
42	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
43	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
44	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
45	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
46	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
47	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
48	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
49	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
50	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
51	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
52	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
53	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
54	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
55	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
56	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
57	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
58	"left_shift"	"mbrLeft"	"geom"	0	1	false	false	false	0
59	"left_shift"	"mbrLeft"	"geom"	0	1	false	false	false	0
60	"right_shift"	"mbrRight"	"geom"	0	1	false	false	false	0
61	"right_shift"	"mbrRight"	"geom"	0	1	false	false	false	0
63	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
64	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
65	"hash"	"hash"	"mkey"	0	1	false	false	false	0
66	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
67	"="	"="	"calc"	0	1	false	false	false	0
68	"<>"	"!="	"calc"	0	1	false	false	false	0
69	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
70	">"	">"	"calc"	0	1	false	false	false	0
71	">="	">="	"calc"	0	1	false	false	false	0
72	"<"	"<"	"calc"	0	1	false	false	false	0
73	"<="	"<="	"calc"	0	1	false	false	false	0
77	"in"	"in"	"calc"	0	1	false	false	false	0
78	"identity"	"identity"	"calc"	0	1	false	false	false	0
79	"rowid"	"identity"	"calc"	0	1	false	false	false	0
80	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
83	"sql_min"	"min"	"calc"	0	1	false	false	false	0
84	"sql_max"	"max"	"calc"	0	1	false	false	false	0
85	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
107	"mod"	"%"	"calc"	0	1	false	false	false	0
108	"mod"	"%"	"calc"	0	1	false	false	false	0
109	"mod"	"%"	"calc"	0	1	false	false	false	0
110	"mod"	"%"	"calc"	0	1	false	false	false	0
111	"mod"	"%"	"calc"	0	1	false	false	false	0
112	"mod"	"%"	"calc"	0	1	false	false	false	0
113	"mod"	"%"	"calc"	0	1	false	false	false	0
114	"mod"	"%"	"calc"	0	1	false	false	false	0
115	"mod"	"%"	"calc"	0	1	false	false	false	0
116	"mod"	"%"	"calc"	0	1	false	false	false	0
117	"mod"	"%"	"calc"	0	1	false	false	false	0
118	"mod"	"%"	"calc"	0	1	false	false	false	0
119	"mod"	"%"	"calc"	0	1	false	false	false	0
120	"mod"	"%"	"calc"	0	1	false	false	false	0
130	"diff"	"diff"	"sql"	0	6	false	false	false	0
131	"diff"	"diff"	"sql"	0	6	false	false	false	0
132	"rank"	"rank"	"sql"	0	6	false	false	false	0
133	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
134	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
135	"and"	"and"	"calc"	0	1	false	false	false	0
136	"or"	"or"	"calc"	0	1	false	false	false	0
137	"xor"	"xor"	"calc"	0	1	false	false	false	0
138	"not"	"not"	"calc"	0	1	false	false	false	0
139	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
140	"sql_div"	"/"	"calc"	0	1	false	false	false	0
141	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
142	"sql_div"	"/"	"calc"	0	1	false	false	false	0
143	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
144	"sql_div"	"/"	"calc"	0	1	false	false	false	0
145	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
146	"sql_div"	"/"	"calc"	0	1	false	false	false	0
147	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
148	"sql_div"	"/"	"calc"	0	1	false	false	false	0
149	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
150	"sql_div"	"/"	"calc"	0	1	false	false	false	0
151	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
152	"sql_div"	"/"	"calc"	0	1	false	false	false	0
153	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
154	"sql_div"	"/"	"calc"	0	1	false	false	false	0
155	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
156	"sql_div"	"/"	"calc"	0	1	false	false	false	0
157	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
158	"sql_div"	"/"	"calc"	0	1	false	false	false	0
159	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
160	"sql_div"	"/"	"calc"	0	1	false	false	false	0
161	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
162	"sql_div"	"/"	"calc"	0	1	false	false	false	0
163	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
164	"sql_div"	"/"	"calc"	0	1	false	false	false	0
165	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
166	"sql_div"	"/"	"calc"	0	1	false	false	false	0
167	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
168	"sql_div"	"/"	"calc"	0	1	false	false	false	0
169	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
170	"sql_add"	"+"	"calc"	0	1	false	false	false	0
171	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
172	"sql_div"	"/"	"calc"	0	1	false	false	false	0
173	"bit_and"	"and"	"calc"	0	1	false	false	false	0
174	"bit_or"	"or"	"calc"	0	1	false	false	false	0
175	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
176	"bit_not"	"not"	"calc"	0	1	false	false	false	0
177	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
178	"right_shift"	">>"	"calc"	0	1	false	false	false	0
179	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
180	"abs"	"abs"	"calc"	0	1	false	false	false	0
181	"sign"	"sign"	"calc"	0	1	false	false	false	0
182	"scale_up"	"*"	"calc"	0	1	false	false	false	0
183	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
184	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
185	"sql_add"	"+"	"calc"	0	1	false	false	false	0
186	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
187	"sql_div"	"/"	"calc"	0	1	false	false	false	0
188	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
189	"sql_add"	"+"	"calc"	0	1	false	false	false	0
190	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
191	"sql_div"	"/"	"calc"	0	1	false	false	false	0
192	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
193	"sql_add"	"+"	"calc"	0	1	false	false	false	0
194	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
195	"sql_div"	"/"	"calc"	0	1	false	false	false	0
196	"bit_and"	"and"	"calc"	0	1	false	false	false	0
197	"bit_or"	"or"	"calc"	0	1	false	false	false	0
198	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
199	"bit_not"	"not"	"calc"	0	1	false	false	false	0
200	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
201	"right_shift"	">>"	"calc"	0	1	false	false	false	0
202	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
203	"abs"	"abs"	"calc"	0	1	false	false	false	0
204	"sign"	"sign"	"calc"	0	1	false	false	false	0
205	"scale_up"	"*"	"calc"	0	1	false	false	false	0
206	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
207	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
208	"sql_add"	"+"	"calc"	0	1	false	false	false	0
209	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
210	"sql_div"	"/"	"calc"	0	1	false	false	false	0
211	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
212	"sql_add"	"+"	"calc"	0	1	false	false	false	0
213	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
214	"sql_div"	"/"	"calc"	0	1	false	false	false	0
215	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
216	"sql_add"	"+"	"calc"	0	1	false	false	false	0
217	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
218	"sql_div"	"/"	"calc"	0	1	false	false	false	0
219	"bit_and"	"and"	"calc"	0	1	false	false	false	0
220	"bit_or"	"or"	"calc"	0	1	false	false	false	0
221	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
222	"bit_not"	"not"	"calc"	0	1	false	false	false	0
223	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
224	"right_shift"	">>"	"calc"	0	1	false	false	false	0
225	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
226	"abs"	"abs"	"calc"	0	1	false	false	false	0
227	"sign"	"sign"	"calc"	0	1	false	false	false	0
228	"scale_up"	"*"	"calc"	0	1	false	false	false	0
229	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
230	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
231	"sql_add"	"+"	"calc"	0	1	false	false	false	0
232	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
233	"sql_div"	"/"	"calc"	0	1	false	false	false	0
234	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
235	"sql_add"	"+"	"calc"	0	1	false	false	false	0
236	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
237	"sql_div"	"/"	"calc"	0	1	false	false	false	0
238	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
239	"sql_add"	"+"	"calc"	0	1	false	false	false	0
240	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
241	"sql_div"	"/"	"calc"	0	1	false	false	false	0
242	"bit_and"	"and"	"calc"	0	1	false	false	false	0
243	"bit_or"	"or"	"calc"	0	1	false	false	false	0
244	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
245	"bit_not"	"not"	"calc"	0	1	false	false	false	0
246	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
247	"right_shift"	">>"	"calc"	0	1	false	false	false	0
248	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
249	"abs"	"abs"	"calc"	0	1	false	false	false	0
250	"sign"	"sign"	"calc"	0	1	false	false	false	0
251	"scale_up"	"*"	"calc"	0	1	false	false	false	0
252	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
253	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
254	"sql_add"	"+"	"calc"	0	1	false	false	false	0
255	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
256	"sql_div"	"/"	"calc"	0	1	false	false	false	0
257	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
258	"sql_add"	"+"	"calc"	0	1	false	false	false	0
259	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
260	"sql_div"	"/"	"calc"	0	1	false	false	false	0
261	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
262	"sql_add"	"+"	"calc"	0	1	false	false	false	0
263	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
264	"sql_div"	"/"	"calc"	0	1	false	false	false	0
265	"bit_and"	"and"	"calc"	0	1	false	false	false	0
266	"bit_or"	"or"	"calc"	0	1	false	false	false	0
267	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
268	"bit_not"	"not"	"calc"	0	1	false	false	false	0
269	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
270	"right_shift"	">>"	"calc"	0	1	false	false	false	0
271	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
272	"abs"	"abs"	"calc"	0	1	false	false	false	0
273	"sign"	"sign"	"calc"	0	1	false	false	false	0
274	"scale_up"	"*"	"calc"	0	1	false	false	false	0
275	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
276	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
277	"sql_add"	"+"	"calc"	0	1	false	false	false	0
278	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
279	"sql_div"	"/"	"calc"	0	1	false	false	false	0
280	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
281	"sql_add"	"+"	"calc"	0	1	false	false	false	0
282	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
283	"sql_div"	"/"	"calc"	0	1	false	false	false	0
284	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
285	"sql_add"	"+"	"calc"	0	1	false	false	false	0
286	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
287	"sql_div"	"/"	"calc"	0	1	false	false	false	0
288	"bit_and"	"and"	"calc"	0	1	false	false	false	0
289	"bit_or"	"or"	"calc"	0	1	false	false	false	0
290	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
291	"bit_not"	"not"	"calc"	0	1	false	false	false	0
292	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
293	"right_shift"	">>"	"calc"	0	1	false	false	false	0
294	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
295	"abs"	"abs"	"calc"	0	1	false	false	false	0
296	"sign"	"sign"	"calc"	0	1	false	false	false	0
297	"scale_up"	"*"	"calc"	0	1	false	false	false	0
298	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
299	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
300	"sql_add"	"+"	"calc"	0	1	false	false	false	0
301	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
302	"sql_div"	"/"	"calc"	0	1	false	false	false	0
303	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
304	"sql_add"	"+"	"calc"	0	1	false	false	false	0
305	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
306	"sql_div"	"/"	"calc"	0	1	false	false	false	0
307	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
308	"sql_add"	"+"	"calc"	0	1	false	false	false	0
309	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
310	"sql_div"	"/"	"calc"	0	1	false	false	false	0
311	"bit_and"	"and"	"calc"	0	1	false	false	false	0
312	"bit_or"	"or"	"calc"	0	1	false	false	false	0
313	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
314	"bit_not"	"not"	"calc"	0	1	false	false	false	0
315	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
316	"right_shift"	">>"	"calc"	0	1	false	false	false	0
317	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
318	"abs"	"abs"	"calc"	0	1	false	false	false	0
319	"sign"	"sign"	"calc"	0	1	false	false	false	0
320	"scale_up"	"*"	"calc"	0	1	false	false	false	0
321	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
322	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
323	"sql_add"	"+"	"calc"	0	1	false	false	false	0
324	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
325	"sql_div"	"/"	"calc"	0	1	false	false	false	0
326	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
327	"sql_add"	"+"	"calc"	0	1	false	false	false	0
328	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
329	"sql_div"	"/"	"calc"	0	1	false	false	false	0
330	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
331	"sql_add"	"+"	"calc"	0	1	false	false	false	0
332	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
333	"sql_div"	"/"	"calc"	0	1	false	false	false	0
334	"bit_and"	"and"	"calc"	0	1	false	false	false	0
335	"bit_or"	"or"	"calc"	0	1	false	false	false	0
336	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
337	"bit_not"	"not"	"calc"	0	1	false	false	false	0
338	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
339	"right_shift"	">>"	"calc"	0	1	false	false	false	0
340	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
341	"abs"	"abs"	"calc"	0	1	false	false	false	0
342	"sign"	"sign"	"calc"	0	1	false	false	false	0
343	"scale_up"	"*"	"calc"	0	1	false	false	false	0
344	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
345	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
346	"sql_add"	"+"	"calc"	0	1	false	false	false	0
347	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
348	"sql_div"	"/"	"calc"	0	1	false	false	false	0
349	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
350	"sql_add"	"+"	"calc"	0	1	false	false	false	0
351	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
352	"sql_div"	"/"	"calc"	0	1	false	false	false	0
353	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
354	"sql_add"	"+"	"calc"	0	1	false	false	false	0
355	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
356	"sql_div"	"/"	"calc"	0	1	false	false	false	0
357	"bit_and"	"and"	"calc"	0	1	false	false	false	0
358	"bit_or"	"or"	"calc"	0	1	false	false	false	0
359	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
360	"bit_not"	"not"	"calc"	0	1	false	false	false	0
361	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
362	"right_shift"	">>"	"calc"	0	1	false	false	false	0
363	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
364	"abs"	"abs"	"calc"	0	1	false	false	false	0
365	"sign"	"sign"	"calc"	0	1	false	false	false	0
366	"scale_up"	"*"	"calc"	0	1	false	false	false	0
367	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
368	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
369	"sql_add"	"+"	"calc"	0	1	false	false	false	0
370	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
371	"sql_div"	"/"	"calc"	0	1	false	false	false	0
372	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
373	"sql_add"	"+"	"calc"	0	1	false	false	false	0
374	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
375	"sql_div"	"/"	"calc"	0	1	false	false	false	0
376	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
377	"sql_add"	"+"	"calc"	0	1	false	false	false	0
378	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
379	"sql_div"	"/"	"calc"	0	1	false	false	false	0
380	"bit_and"	"and"	"calc"	0	1	false	false	false	0
381	"bit_or"	"or"	"calc"	0	1	false	false	false	0
382	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
383	"bit_not"	"not"	"calc"	0	1	false	false	false	0
384	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
385	"right_shift"	">>"	"calc"	0	1	false	false	false	0
386	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
387	"abs"	"abs"	"calc"	0	1	false	false	false	0
388	"sign"	"sign"	"calc"	0	1	false	false	false	0
389	"scale_up"	"*"	"calc"	0	1	false	false	false	0
390	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
391	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
392	"sql_add"	"+"	"calc"	0	1	false	false	false	0
393	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
394	"sql_div"	"/"	"calc"	0	1	false	false	false	0
395	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
396	"sql_add"	"+"	"calc"	0	1	false	false	false	0
397	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
398	"sql_div"	"/"	"calc"	0	1	false	false	false	0
399	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
400	"sql_add"	"+"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_div"	"/"	"calc"	0	1	false	false	false	0
403	"bit_and"	"and"	"calc"	0	1	false	false	false	0
404	"bit_or"	"or"	"calc"	0	1	false	false	false	0
405	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
406	"bit_not"	"not"	"calc"	0	1	false	false	false	0
407	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
408	"right_shift"	">>"	"calc"	0	1	false	false	false	0
409	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
410	"abs"	"abs"	"calc"	0	1	false	false	false	0
411	"sign"	"sign"	"calc"	0	1	false	false	false	0
412	"scale_up"	"*"	"calc"	0	1	false	false	false	0
413	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
414	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
415	"sql_add"	"+"	"calc"	0	1	false	false	false	0
416	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
417	"sql_div"	"/"	"calc"	0	1	false	false	false	0
418	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
419	"sql_add"	"+"	"calc"	0	1	false	false	false	0
420	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
421	"sql_div"	"/"	"calc"	0	1	false	false	false	0
422	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
423	"sql_add"	"+"	"calc"	0	1	false	false	false	0
424	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
425	"sql_div"	"/"	"calc"	0	1	false	false	false	0
426	"bit_and"	"and"	"calc"	0	1	false	false	false	0
427	"bit_or"	"or"	"calc"	0	1	false	false	false	0
428	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
429	"bit_not"	"not"	"calc"	0	1	false	false	false	0
430	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
431	"right_shift"	">>"	"calc"	0	1	false	false	false	0
432	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
433	"abs"	"abs"	"calc"	0	1	false	false	false	0
434	"sign"	"sign"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
437	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
438	"sql_add"	"+"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_div"	"/"	"calc"	0	1	false	false	false	0
441	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
442	"sql_add"	"+"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_div"	"/"	"calc"	0	1	false	false	false	0
445	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
446	"sql_add"	"+"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_div"	"/"	"calc"	0	1	false	false	false	0
449	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
450	"abs"	"abs"	"calc"	0	1	false	false	false	0
451	"sign"	"sign"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
454	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
455	"sql_add"	"+"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_div"	"/"	"calc"	0	1	false	false	false	0
458	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
459	"sql_add"	"+"	"calc"	0	1	false	false	false	0
460	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
461	"sql_div"	"/"	"calc"	0	1	false	false	false	0
462	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
463	"sql_add"	"+"	"calc"	0	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
465	"sql_div"	"/"	"calc"	0	1	false	false	false	0
466	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
467	"abs"	"abs"	"calc"	0	1	false	false	false	0
468	"sign"	"sign"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
471	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
472	"sql_add"	"+"	"calc"	0	1	false	false	false	0
473	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
474	"sql_div"	"/"	"calc"	0	1	false	false	false	0
475	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
476	"sql_add"	"+"	"calc"	0	1	false	false	false	0
477	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
478	"sql_div"	"/"	"calc"	0	1	false	false	false	0
479	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
480	"sql_add"	"+"	"calc"	0	1	false	false	false	0
481	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
482	"sql_div"	"/"	"calc"	0	1	false	false	false	0
483	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
484	"abs"	"abs"	"calc"	0	1	false	false	false	0
485	"sign"	"sign"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
488	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
489	"sql_add"	"+"	"calc"	0	1	false	false	false	0
490	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
491	"sql_div"	"/"	"calc"	0	1	false	false	false	0
492	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
493	"abs"	"abs"	"calc"	0	1	false	false	false	0
494	"sign"	"sign"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
497	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
498	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
499	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
500	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
501	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
502	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
503	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
504	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
505	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
506	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
507	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
508	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
509	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
510	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
511	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
512	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
513	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
514	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
515	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
516	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
517	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
518	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
519	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
520	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
521	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
522	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
523	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
524	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
525	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
526	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
527	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
528	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
529	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
530	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
531	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
532	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
533	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
534	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
535	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
536	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
537	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
538	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
539	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
540	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
541	"round"	"round"	"sql"	0	1	false	false	false	0
542	"round"	"round"	"sql"	0	1	false	false	false	0
543	"round"	"round"	"sql"	0	1	false	false	false	0
544	"round"	"round"	"sql"	0	1	false	false	false	0
545	"round"	"round"	"sql"	0	1	false	false	false	0
546	"round"	"round"	"sql"	0	1	false	false	false	0
547	"round"	"round"	"sql"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"scale_up"	"*"	"calc"	0	1	false	false	false	0
988	"scale_up"	"*"	"calc"	0	1	false	false	false	0
989	"scale_up"	"*"	"calc"	0	1	false	false	false	0
990	"scale_up"	"*"	"calc"	0	1	false	false	false	0
991	"scale_up"	"*"	"calc"	0	1	false	false	false	0
992	"scale_up"	"*"	"calc"	0	1	false	false	false	0
993	"scale_up"	"*"	"calc"	0	1	false	false	false	0
994	"scale_up"	"*"	"calc"	0	1	false	false	false	0
995	"scale_up"	"*"	"calc"	0	1	false	false	false	0
996	"scale_up"	"*"	"calc"	0	1	false	false	false	0
997	"scale_up"	"*"	"calc"	0	1	false	false	false	0
998	"scale_up"	"*"	"calc"	0	1	false	false	false	0
999	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1000	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1001	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1002	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1003	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1004	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1005	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1006	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1007	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1008	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1009	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1010	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1011	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1012	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1013	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1014	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1015	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1016	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1017	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1018	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1019	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1020	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1021	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1022	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1023	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1024	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1025	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1026	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1027	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1028	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1029	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1030	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1031	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1032	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1033	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1034	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1035	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1036	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1037	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1038	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1039	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1040	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1041	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1042	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1043	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1044	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1045	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1046	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1047	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1048	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1049	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1050	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1051	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1052	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1053	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1054	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1055	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1056	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1057	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1058	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1059	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1060	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1061	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1062	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1063	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1064	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1065	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1066	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1067	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1068	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1069	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1070	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1071	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1072	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1073	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1074	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1075	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1076	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1077	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1078	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1079	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1080	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1081	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1082	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1083	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1084	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1085	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1086	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1087	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1088	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1089	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1090	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1091	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1092	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1093	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1094	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1095	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1096	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1097	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1098	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1099	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1100	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1101	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1102	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1103	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1104	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1105	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1106	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1107	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1108	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1109	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1110	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1111	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1112	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1113	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1114	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1115	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1116	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1117	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1118	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1119	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1120	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1121	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1122	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1123	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1124	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1125	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1126	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1127	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1128	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1129	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1130	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1131	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1132	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1133	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1134	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1135	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1136	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1137	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1138	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1139	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1140	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1141	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1142	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1143	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1144	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1145	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1146	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1147	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1148	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1149	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1150	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1151	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1152	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1153	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1154	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1155	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1156	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1157	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1158	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1159	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1160	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1161	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1162	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1163	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1164	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1165	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1166	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1167	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1168	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1169	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1170	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1171	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1172	"scale_up"	"*"	"calc"	0	1	false	false	false	0
1173	"power"	"pow"	"mmath"	0	1	false	false	false	0
1174	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1175	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1176	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1177	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1178	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1179	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1180	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1181	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1182	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1183	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1184	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1185	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1186	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1187	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1188	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1189	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1190	"log"	"log"	"mmath"	0	1	false	false	false	0
1191	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1192	"power"	"pow"	"mmath"	0	1	false	false	false	0
1193	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1194	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1195	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1196	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1197	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1198	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1199	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1200	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1201	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1202	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1203	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1204	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1205	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1206	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1207	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1208	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1209	"log"	"log"	"mmath"	0	1	false	false	false	0
1210	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1211	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1212	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1213	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1214	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1215	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1216	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1217	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1218	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1219	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1220	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1221	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1222	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1223	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1224	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1225	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1226	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1227	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1228	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1229	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1230	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1231	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1232	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1233	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1234	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1235	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1236	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1237	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1238	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1239	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1240	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1241	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1242	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1243	"year"	"year"	"mtime"	0	1	false	false	false	0
1244	"month"	"month"	"mtime"	0	1	false	false	false	0
1245	"day"	"day"	"mtime"	0	1	false	false	false	0
1246	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1247	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1248	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1249	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1250	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1251	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1252	"year"	"year"	"mtime"	0	1	false	false	false	0
1253	"month"	"month"	"mtime"	0	1	false	false	false	0
1254	"day"	"day"	"mtime"	0	1	false	false	false	0
1255	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1256	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1257	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1258	"year"	"year"	"mtime"	0	1	false	false	false	0
1259	"month"	"month"	"mtime"	0	1	false	false	false	0
1260	"day"	"day"	"mtime"	0	1	false	false	false	0
1261	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1262	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1263	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1264	"year"	"year"	"mtime"	0	1	false	false	false	0
1265	"month"	"month"	"mtime"	0	1	false	false	false	0
1266	"day"	"day"	"mtime"	0	1	false	false	false	0
1267	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1268	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1269	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1270	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1271	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1272	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1273	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1274	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1275	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1276	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1277	"restart"	"restart"	"sql"	0	1	false	false	false	0
1278	"index"	"index"	"calc"	0	1	false	false	false	0
1279	"index"	"index"	"calc"	0	1	false	false	false	0
1280	"index"	"index"	"calc"	0	1	false	false	false	0
1281	"strings"	"strings"	"calc"	0	1	false	false	false	0
1282	"locate"	"locate"	"str"	0	1	false	false	false	0
1283	"locate"	"locate"	"str"	0	1	false	false	false	0
1284	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1285	"substring"	"substring"	"str"	0	1	false	false	false	0
1286	"substring"	"substring"	"str"	0	1	false	false	false	0
1287	"like"	"like"	"algebra"	0	1	false	false	false	0
1288	"like"	"like"	"algebra"	0	1	false	false	false	0
1289	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1290	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1291	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1292	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1293	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1294	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1295	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1296	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1297	"concat"	"+"	"calc"	0	1	false	false	false	0
1298	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1299	"code"	"unicode"	"str"	0	1	false	false	false	0
1300	"length"	"stringlength"	"str"	0	1	false	false	false	0
1301	"right"	"stringright"	"str"	0	1	false	false	false	0
1302	"left"	"stringleft"	"str"	0	1	false	false	false	0
1303	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1304	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1305	"lower"	"toLower"	"str"	0	1	false	false	false	0
1306	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1307	"trim"	"trim"	"str"	0	1	false	false	false	0
1308	"trim"	"trim"	"str"	0	1	false	false	false	0
1309	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1310	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1311	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1312	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1313	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1314	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1315	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1316	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1317	"insert"	"insert"	"str"	0	1	false	false	false	0
1318	"replace"	"replace"	"str"	0	1	false	false	false	0
1319	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1320	"space"	"space"	"str"	0	1	false	false	false	0
1321	"char_length"	"length"	"str"	0	1	false	false	false	0
1322	"character_length"	"length"	"str"	0	1	false	false	false	0
1323	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1324	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1325	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1326	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1327	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1328	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1329	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1330	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1331	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1332	"index"	"index"	"calc"	0	1	false	false	false	0
1333	"index"	"index"	"calc"	0	1	false	false	false	0
1334	"index"	"index"	"calc"	0	1	false	false	false	0
1335	"strings"	"strings"	"calc"	0	1	false	false	false	0
1336	"locate"	"locate"	"str"	0	1	false	false	false	0
1337	"locate"	"locate"	"str"	0	1	false	false	false	0
1338	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1339	"substring"	"substring"	"str"	0	1	false	false	false	0
1340	"substring"	"substring"	"str"	0	1	false	false	false	0
1341	"like"	"like"	"algebra"	0	1	false	false	false	0
1342	"like"	"like"	"algebra"	0	1	false	false	false	0
1343	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1344	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1345	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1346	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1347	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1348	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1349	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1350	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1351	"concat"	"+"	"calc"	0	1	false	false	false	0
1352	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1353	"code"	"unicode"	"str"	0	1	false	false	false	0
1354	"length"	"stringlength"	"str"	0	1	false	false	false	0
1355	"right"	"stringright"	"str"	0	1	false	false	false	0
1356	"left"	"stringleft"	"str"	0	1	false	false	false	0
1357	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1358	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1359	"lower"	"toLower"	"str"	0	1	false	false	false	0
1360	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1361	"trim"	"trim"	"str"	0	1	false	false	false	0
1362	"trim"	"trim"	"str"	0	1	false	false	false	0
1363	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1364	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1365	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1366	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1367	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1368	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1369	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1370	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1371	"insert"	"insert"	"str"	0	1	false	false	false	0
1372	"replace"	"replace"	"str"	0	1	false	false	false	0
1373	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1374	"space"	"space"	"str"	0	1	false	false	false	0
1375	"char_length"	"length"	"str"	0	1	false	false	false	0
1376	"character_length"	"length"	"str"	0	1	false	false	false	0
1377	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1378	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1379	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1380	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1381	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1382	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1383	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1384	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1385	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1386	"index"	"index"	"calc"	0	1	false	false	false	0
1387	"index"	"index"	"calc"	0	1	false	false	false	0
1388	"index"	"index"	"calc"	0	1	false	false	false	0
1389	"strings"	"strings"	"calc"	0	1	false	false	false	0
1390	"locate"	"locate"	"str"	0	1	false	false	false	0
1391	"locate"	"locate"	"str"	0	1	false	false	false	0
1392	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1393	"substring"	"substring"	"str"	0	1	false	false	false	0
1394	"substring"	"substring"	"str"	0	1	false	false	false	0
1395	"like"	"like"	"algebra"	0	1	false	false	false	0
1396	"like"	"like"	"algebra"	0	1	false	false	false	0
1397	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1398	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1399	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1400	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1401	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1402	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1403	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1404	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1405	"concat"	"+"	"calc"	0	1	false	false	false	0
1406	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1407	"code"	"unicode"	"str"	0	1	false	false	false	0
1408	"length"	"stringlength"	"str"	0	1	false	false	false	0
1409	"right"	"stringright"	"str"	0	1	false	false	false	0
1410	"left"	"stringleft"	"str"	0	1	false	false	false	0
1411	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1412	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1413	"lower"	"toLower"	"str"	0	1	false	false	false	0
1414	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1415	"trim"	"trim"	"str"	0	1	false	false	false	0
1416	"trim"	"trim"	"str"	0	1	false	false	false	0
1417	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1418	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1419	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1420	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1421	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1422	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1423	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1424	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1425	"insert"	"insert"	"str"	0	1	false	false	false	0
1426	"replace"	"replace"	"str"	0	1	false	false	false	0
1427	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1428	"space"	"space"	"str"	0	1	false	false	false	0
1429	"char_length"	"length"	"str"	0	1	false	false	false	0
1430	"character_length"	"length"	"str"	0	1	false	false	false	0
1431	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1432	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1433	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1434	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1435	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1436	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1437	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1438	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1439	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1440	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1441	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
62	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
74	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
75	"exist"	"exist"	"aggr"	0	3	false	false	false	0
76	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
81	"min"	"min"	"aggr"	0	3	false	false	false	0
82	"max"	"max"	"aggr"	0	3	false	false	false	0
86	"sum"	"sum"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"sum"	"sum"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"sum"	"sum"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"sum"	"sum"	"aggr"	0	3	false	false	false	0
94	"sum"	"sum"	"aggr"	0	3	false	false	false	0
95	"sum"	"sum"	"aggr"	0	3	false	false	false	0
96	"sum"	"sum"	"aggr"	0	3	false	false	false	0
97	"prod"	"prod"	"aggr"	0	3	false	false	false	0
98	"prod"	"prod"	"aggr"	0	3	false	false	false	0
99	"prod"	"prod"	"aggr"	0	3	false	false	false	0
100	"prod"	"prod"	"aggr"	0	3	false	false	false	0
101	"prod"	"prod"	"aggr"	0	3	false	false	false	0
102	"prod"	"prod"	"aggr"	0	3	false	false	false	0
103	"prod"	"prod"	"aggr"	0	3	false	false	false	0
104	"prod"	"prod"	"aggr"	0	3	false	false	false	0
105	"prod"	"prod"	"aggr"	0	3	false	false	false	0
106	"prod"	"prod"	"aggr"	0	3	false	false	false	0
121	"sum"	"sum"	"aggr"	0	3	false	false	false	0
122	"prod"	"prod"	"aggr"	0	3	false	false	false	0
123	"sum"	"sum"	"aggr"	0	3	false	false	false	0
124	"prod"	"prod"	"aggr"	0	3	false	false	false	0
125	"sum"	"sum"	"aggr"	0	3	false	false	false	0
126	"sum"	"sum"	"aggr"	0	3	false	false	false	0
127	"avg"	"avg"	"aggr"	0	3	false	false	false	0
128	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
129	"count"	"count"	"aggr"	0	3	false	false	false	0
6221	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
6224	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
6230	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
6250	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
6255	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
6260	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
6264	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
6268	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
6272	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
6276	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
6279	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
6283	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
6287	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
6291	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
6295	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
6299	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
6303	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
6307	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
6311	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
6315	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
6319	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
6323	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
6327	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
6331	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
6335	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
6342	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
6348	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
6353	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
6358	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
6363	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
6368	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
6373	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
6379	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
6383	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
6387	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
6391	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
6396	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
6400	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
6404	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
6408	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
6412	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
6416	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
6421	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
6426	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
6431	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
6436	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
6446	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
6496	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
6498	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
6500	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
6503	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
6505	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
6535	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6539	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6543	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6547	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6551	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
6555	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
6559	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6563	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6568	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6573	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6578	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6583	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6588	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6593	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6598	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6603	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6608	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6613	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6618	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6623	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6628	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6633	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6638	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6643	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6648	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6652	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6668	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6671	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6675	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6678	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6682	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6685	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6692	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6697	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6703	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6709	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6714	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6719	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6723	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6727	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6731	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6735	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6738	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6748	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6756	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6769	"malfunctions"	"create function sys.malfunctions()\n\treturns table(""signature"" string, ""address"" string, ""comment"" string)\n\texternal name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
6774	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6778	"flush_log"	"-- enqueue a flush log, ie as soon as no transactions are active \n-- flush the log and cleanup the used storage\ncreate procedure sys.flush_log ()\n\texternal name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6780	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6800	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6803	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6806	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6809	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6812	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6815	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6818	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6830	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6832	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6836	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6840	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6844	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6848	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6852	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6856	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6860	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6864	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6868	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6872	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6876	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6880	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6884	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6888	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6892	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6896	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6900	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6904	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6908	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6912	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6916	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6920	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6924	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6928	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6932	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6936	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6940	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6944	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6948	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6952	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6956	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6960	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6964	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6968	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6972	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6976	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6980	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6984	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6988	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6992	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6996	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7000	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7004	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7008	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7012	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7016	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7020	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7024	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7028	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7032	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7036	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7041	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7046	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7051	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7056	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7061	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7066	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7071	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7076	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7081	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7086	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7091	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7096	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7101	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7106	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7111	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7116	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7121	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7126	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val hugeint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
7130	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
7134	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
7138	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
7142	"median"	"create aggregate median(val hugeint) returns hugeint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
7146	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
7151	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
7156	"has_z"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make sure you load the geom module before loading this sql module\n-- create spatial_ref_sys metadata table\n\ncreate function has_z(info integer) returns integer external name geom.""hasZ"";"	"geom"	1	1	false	false	false	2000
7160	"has_m"	"create function has_m(info integer) returns integer external name geom.""hasM"";"	"geom"	1	1	false	false	false	2000
7164	"get_type"	"create function get_type(info integer, format integer) returns string external name geom.""getType"";"	"geom"	1	1	false	false	false	2000
7188	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr(geom geometry) returns mbr external name geom.""mbr"";"	"geom"	1	1	false	false	false	2000
7192	"st_overlaps"	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.""mbrOverlaps"";"	"geom"	1	1	false	false	false	2000
7197	"st_contains"	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.""mbrContains"";"	"geom"	1	1	false	false	false	2000
7202	"st_equals"	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.""mbrEqual"";"	"geom"	1	1	false	false	false	2000
7207	"st_distance"	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.""mbrDistance"";"	"geom"	1	1	false	false	false	2000
7212	"st_wkttosql"	"--CREATE FUNCTION mbrOverlapOrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrLeft"";\n--CREATE FUNCTION mbrOverlapOrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrBelow"";\n--CREATE FUNCTION mbrOverlapOrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrRight"";\n--CREATE FUNCTION mbrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrLeft"";\n--CREATE FUNCTION mbrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrBelow"";\n--CREATE FUNCTION mbrEqual(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrEqual"";\n--CREATE FUNCTION mbrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrRight"";\n--CREATE FUNCTION mbrContained(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrContained"";\n--CREATE FUNCTION mbrOverlapOrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrAbove"";\n--CREATE FUNCTION mbrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrAbove"";\n\n\n-------------------------------------------------------------------------\n------------------------- Management Functions- -------------------------\n-------------------------------------------------------------------------\n--CREATE PROCEDURE AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) \n--CREATE FUNCTION AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) RETURNS string\n--BEGIN\n--\tDECLARE column_type string;\n--\tSET column_type = concat('geometry( ', geometryType);\n--\tSET column_type = concat(column_type, ', ');\n--\tSET column_type = concat(column_type, srid);\n--\tSET column_type = concat(column_type, ' )'); \n--\tALTER TABLE table_name ADD column_name column_type; --geometry('point', 28992);\n--\t\n--\tRETURN column_type;\n--END;\n\n--CREATE PROCEDURE t(table_name string, column_name string, column_type string)\n--BEGIN\n--\tALTER TABLE table_name ADD column_name;\n--END;\n\n--CREATE FUNCTION t(table_name string, column_name string, srid integer, type string, dimension integer) RETURNS string \n--BEGIN\n--\tEXECUTE PROCEDURE AddGeometryColumn(table_name, column_name, srid, type, dimension);\n--\tRETURN '';\n--END;\n\n\n\n---------------------------------\n-- OGC - Simple Feature Access --\n---------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_wkttosql(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7216	"st_wkbtosql"	"--Construct a Geometry from a WKB\ncreate function st_wkbtosql(geom string) returns geometry external name geom.""FromBinary"";"	"geom"	1	1	false	false	false	2000
7220	"st_astext"	"--Obtaining WKT from Geometry\ncreate function st_astext(geom geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
7224	"st_asbinary"	"--Obtainig WKB from Geometry\ncreate function st_asbinary(geom geometry) returns string external name geom.""AsBinary"";"	"geom"	1	1	false	false	false	2000
7228	"st_dimension"	"--Functions on Geometries\ncreate function st_dimension(geom geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
7232	"st_geometrytype"	"create function st_geometrytype(geom geometry) returns string external name geom.""GeometryType2"";"	"geom"	1	1	false	false	false	2000
7236	"st_srid"	"create function st_srid(geom geometry) returns integer external name geom.""getSRID"";"	"geom"	1	1	false	false	false	2000
7240	"st_setsrid"	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.""setSRID"";"	"geom"	1	1	false	false	false	2000
7245	"st_isempty"	"create function st_isempty(geom geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
7249	"st_issimple"	"create function st_issimple(geom geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
7253	"st_boundary"	"create function st_boundary(geom geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
7257	"st_envelope"	"create function st_envelope(geom geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
7261	"st_equals"	"--Functions testing spatial relations between Geometries\ncreate function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
7266	"st_disjoint"	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
7271	"st_intersects"	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.""Intersects"";"	"geom"	1	1	false	false	false	2000
7276	"st_touches"	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
7281	"st_crosses"	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
7286	"st_within"	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
7291	"st_contains"	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
7296	"st_overlaps"	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
7301	"st_relate"	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
7307	"st_distance"	"--Distance between Geometries\ncreate function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
7312	"st_intersection"	"--Functions that implement spatial operators\ncreate function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
7317	"st_difference"	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
7322	"st_union"	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7327	"st_union"	"create aggregate st_union(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7331	"st_symdifference"	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
7336	"st_buffer"	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
7341	"st_convexhull"	"create function st_convexhull(geom geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
7345	"st_x"	"--Functions on Point\ncreate function st_x(geom geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
7349	"st_y"	"create function st_y(geom geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
7353	"st_z"	"create function st_z(geom geometry) returns double external name geom.""Z"";"	"geom"	1	1	false	false	false	2000
7357	"st_startpoint"	"--Functions on Curve (i.e. LineString)\ncreate function st_startpoint(geom geometry) returns geometry external name geom.""StartPoint"";"	"geom"	1	1	false	false	false	2000
7361	"st_endpoint"	"create function st_endpoint(geom geometry) returns geometry external name geom.""EndPoint"";"	"geom"	1	1	false	false	false	2000
7365	"st_isring"	"create function st_isring(geom geometry) returns boolean external name geom.""IsRing"";"	"geom"	1	1	false	false	false	2000
7369	"st_length"	"create function st_length(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7373	"st_isclosed"	"--valid also for MultiCurve\ncreate function st_isclosed(geom geometry) returns boolean external name geom.""IsClosed"";"	"geom"	1	1	false	false	false	2000
7377	"st_numpoints"	"--valid also for MultiCurve\n\n--Functions on LineString\ncreate function st_numpoints(geom geometry) returns integer external name geom.""NumPoints"";"	"geom"	1	1	false	false	false	2000
7381	"st_pointn"	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.""PointN"";"	"geom"	1	1	false	false	false	2000
7386	"st_centroid"	"--Functions on Surface (i.e. Polygon and Polyhedral Surface) and MultiSurface\ncreate function st_centroid(geom geometry) returns geometry external name geom.""Centroid"";"	"geom"	1	1	false	false	false	2000
7390	"st_pointonsurface"	"create function st_pointonsurface(geom geometry) returns geometry external name geom.""PointOnSurface"";"	"geom"	1	1	false	false	false	2000
7394	"st_area"	"create function st_area(geom geometry) returns double external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
7398	"st_exteriorring"	"--Functions on Polygon\ncreate function st_exteriorring(geom geometry) returns geometry external name geom.""ExteriorRing"";"	"geom"	1	1	false	false	false	2000
7402	"st_setexteriorring"	"create function st_setexteriorring(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7406	"st_numinteriorring"	"--gets a linestring and creates a polygon (postGIS: ST_MakePolygon)\ncreate function st_numinteriorring(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7410	"st_interiorringn"	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.""InteriorRingN"";"	"geom"	1	1	false	false	false	2000
7415	"st_interiorrings"	"create function st_interiorrings(geom geometry) returns geometrya external name geom.""InteriorRings"";"	"geom"	1	1	false	false	false	2000
7419	"st_numgeometries"	"--CREATE FUNCTION ST_SetInteriorRings(geom GeometryA) RETURNS Geometry EXTERNAL NAME geom.""SetInteriorRings""; --what is this function supposed to do????\n\n--Functions on GeomCollection\ncreate function st_numgeometries(geom geometry) returns integer external name geom.""NumGeometries"";"	"geom"	1	1	false	false	false	2000
7423	"st_geometryn"	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.""GeometryN"";"	"geom"	1	1	false	false	false	2000
7428	"st_numpatches"	"--Functions on Polyhedral Surfaces (a simple surface, consisting of a number of Polygon pathes or facets)\n--CREATE FUNCTION ST_Geometries(geom Geometry) RETURNS TABLE(geom Geometries) EXTERNAL NAME geom.""Geometries"";\n--CREATE FUNCTION NumSurfaces(geom Geometry) RETURNS integer EXTERNAL NAME geom.""NumSurfaces"";\n--CREATE FUNCTION Surface(positionNum integer) RETURNS Geometry EXTERNAL NAME geom.""SurfaceN"";\n--from Part 1\ncreate function st_numpatches(geom geometry) returns integer --EXTERNAL NAME geom.""NumPatches""; --same with NumSurfaces\nbegin\n\treturn select st_numgeometries(geom);\nend;"	"user"	2	1	false	false	false	2000
7432	"st_patchn"	"create function st_patchn(geom geometry, patchnum integer) returns geometry --EXTERNAL NAME geom.""PatchN"" --same with Surface\nbegin\n\treturn select st_geometryn(geom, patchnum);\nend;"	"user"	2	1	false	false	false	2000
7437	"st_geomfromtext"	"--BoundingPolygons\n--IsClosed\n\n-------------------------------------------\n-- DEPRECATED BUT IMPLEMENTED BY postGIS --\n-------------------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7442	"st_pointfromtext"	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
7447	"st_linefromtext"	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
7452	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
7457	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
7462	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
7467	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
7472	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
7477	"st_bdpolyfromtext"	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdPolyFromText"";"	"geom"	1	1	false	false	false	2000
7482	"st_bdmpolyfromtext"	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdMPolyFromText"";"	"geom"	1	1	false	false	false	2000
7487	"st_geometryfromtext"	"--Construct a Geoemtry from a WKB\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_PolygonFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PolygonFromWKB"";\n--CREATE FUNCTION ST_MPointFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPointFromWKB"";\n--CREATE FUNCTION ST_MLineFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MLineFromWKB"";\n--CREATE FUNCTION ST_MPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPolyFromWKB"";\n--CREATE FUNCTION ST_GeomCollFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomCollFromWKB"";\n--CREATE FUNCTION ST_BdPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdPolyFromWKB""; \n--CREATE FUNCTION ST_BdMPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdMPolyFromWKB"";\n\n--CREATE FUNCTION ST_M(geom Geometry) RETURNS double EXTERNAL NAME geom.""M""; --geos does not support M coordinate (at least in the c version)\n--CREATE FUNCTION ST_CurveToLine RETURNS EXTERNAL NAME --geos does not support CIRCULARSTRING and does not have such function\n\n\n\n\n-------------\n-- PostGIS --\n-------------\n\n-------------------------------------------------------------------------\n------------------------- Geometry Constructors -------------------------\n-------------------------------------------------------------------------\n-- Create Geometry from text (wkt)\ncreate function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7492	"st_geomfromtext"	"create function st_geomfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7496	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
7500	"st_pointfromtext"	"create function st_pointfromtext(wkt string) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
7504	"st_linefromtext"	"create function st_linefromtext(wkt string) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
7508	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
7512	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
7516	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
7520	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
7524	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
7528	"st_makepoint"	"--CREATE FUNCTION ST_GeogFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n--CREATE FUNCTION ST_GeographyFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n\n\n-- Create Geometry from raw representation (byte array)\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid smallint) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_GeogFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geography EXTERNAL NAME geom.""GeogFromWKB"";\n\n-- Create Geometry from simpler geometries\ncreate function st_makepoint(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7533	"st_point"	"create function st_point(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7538	"st_makepoint"	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7544	"st_makepoint"	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7551	"st_makepointm"	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.""MakePointM"";"	"geom"	1	1	false	false	false	2000
7557	"st_makeline"	"--CREATE FUNCTION ST_MakeLine(geometry set geoms)?????\ncreate aggregate st_makeline(geom geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	3	false	false	false	2000
7561	"st_makeline"	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	1	false	false	false	2000
7566	"st_makeenvelope"	"--two single geometries\n--CREATE FUNCTION ST_MakeLine(geoms_arr Geometry[]) RETURNS Geometry external name geom.""MakeLine"";\n--CREATE FUNCTION ST_LineFromMultiPoint(pointGeom Geometry) RETURNS Geometry external name geom.""LineFromMultiPoint""; --gets mutlipoint returns linestring\ncreate function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7574	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7581	"st_makepolygon"	"create function st_makepolygon(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7585	"st_polygon"	"--gets linestring\n--CREATE FUNCTION ST_MakePolygon(outerGeom Geometry, interiorGeoms table(g Geometry)) RETURNS Geometry external name geom.""MakePolygon""; --gets linestrings\ncreate function st_polygon(geom geometry, srid integer) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7590	"st_makebox2d"	"--gets linestring\ncreate function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.""MakeBox2D"";"	"geom"	1	1	false	false	false	2000
7595	"geometrytype"	"--gets 2d points\n--CREATE FUNCTION ST_3DMakeBox(lowLeftPointGeom Geometry, upRightPointGeom Geometry) RETURNS mbr external name geom.""MakeBox3D""; --gets 3d points\n\n-- Other constructors\n--CREATE FUNCTION ST_Box2dFromGeoHash() RETURNS mbr external name geom.""Box2dFromGeoHash"";\n--CREATE FUNCTION ST_GeomFromEWKB\n--CREATE FUNCTION ST_GeomFromEWKT\n--CREATE FUNCTION ST_GeomFromGML\n--CREATE FUNCTION ST_GeomFromGeoJSON\n--CREATE FUNCTION ST_GeomFromKML\n--CREATE FUNCTION ST_GMLToSQL\n--CREATE FUNCTION ST_PointFromGeoHash\n\n-------------------------------------------------------------------------\n-------------------------- Geometry Accessors ---------------------------\n-------------------------------------------------------------------------\ncreate function geometrytype(geom geometry) returns string external name geom.""GeometryType1"";"	"geom"	1	1	false	false	false	2000
7599	"st_coorddim"	"create function st_coorddim(geom geometry) returns integer external name geom.""CoordDim"";"	"geom"	1	1	false	false	false	2000
7603	"st_isvalid"	"--CREATE FUNCTION ST_IsCollection(geom Geometry) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalid(geom geometry) returns boolean external name geom.""IsValid"";"	"geom"	1	1	false	false	false	2000
7607	"st_isvalidreason"	"--CREATE FUNCTION ST_IsValid(geom Geometry, flags integer) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalidreason(geom geometry) returns string external name geom.""IsValidReason"";"	"geom"	1	1	false	false	false	2000
7611	"st_npoints"	"--CREATE FUNCTION ST_IsValidReason(geom Geometry, flags integer) RETURNS string EXTERNAL NAME\n--CREATE FUNCTION ST_IsValidDetail(geom Geometry) RETURNS string EXTERNAL NAME geom.""IsValidDetail""; \n--CREATE FUNCTION ST_IsValidDetail(geom Geometry, flags integer) RETURNS A_CUSTOM_ROW EXTERNAL NAME\n--CREATE FUNCTION ST_NDims(geom Geometry) RETURNS integer EXTERNAL NAME\ncreate function st_npoints(geom geometry) returns integer external name geom.""NPoints"";"	"geom"	1	1	false	false	false	2000
7615	"st_nrings"	"create function st_nrings(geom geometry) returns integer external name geom.""NRings"";"	"geom"	1	1	false	false	false	2000
7619	"st_numinteriorrings"	"--is meaningfull for polygon and multipolygon\ncreate function st_numinteriorrings(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7623	"st_xmax"	"--CREATE FUNCTION ST_Summary(geom Geometry) RETURNS string EXTERNAL NAME\ncreate function st_xmax(geom geometry) returns double external name geom.""XMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7627	"st_xmax"	"create function st_xmax(box mbr) returns double external name geom.""XMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7631	"st_xmin"	"create function st_xmin(geom geometry) returns double external name geom.""XMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7635	"st_xmin"	"create function st_xmin(box mbr) returns double external name geom.""XMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7639	"st_ymax"	"create function st_ymax(geom geometry) returns double external name geom.""YMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7643	"st_ymax"	"create function st_ymax(box mbr) returns double external name geom.""YMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7647	"st_ymin"	"create function st_ymin(geom geometry) returns double external name geom.""YMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7651	"st_ymin"	"create function st_ymin(box mbr) returns double external name geom.""YMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7655	"st_force2d"	"--GEOS creates only 2D Envelope\n--CREATE FUNCTION ST_ZMax(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMaxFromWKB"";\n--CREATE FUNCTION ST_ZMax(box mbr) RETURNS double EXTERNAL NAME geom.""ZMaxFromMBR"";\n--CREATE FUNCTION ST_ZMin(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMinFromWKB"";\n--CREATE FUNCTION ST_ZMin(box mbr) RETURNS double EXTERNAL NAME geom.""ZMinFromMBR"";\n--CREATE FUNCTION ST_Zmflag(geom Geometry) RETURNS smallint EXTERNAL NAME --0=2d, 1=3dm, 2=3dz, 4=4d\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Editors ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AddPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Affine RETURNS EXTERNAL NAME\ncreate function st_force2d(geom geometry) returns geometry external name geom.""Force2D"";"	"geom"	1	1	false	false	false	2000
7659	"st_force3d"	"create function st_force3d(geom geometry) returns geometry external name geom.""Force3D"";"	"geom"	1	1	false	false	false	2000
7663	"st_segmentize"	"--CREATE FUNCTION ST_Force3DZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force3DM RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force4D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceCollection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceRHR RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineMerge RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionExtract RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionHomogenize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Multi RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemovePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Reverse RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Rotate RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateX RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateY RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Scale RETURNS EXTERNAL NAME\ncreate function st_segmentize(geom geometry, sz double) returns geometry external name geom.""Segmentize"";"	"geom"	1	1	false	false	false	2000
7668	"getproj4"	"--CREATE FUNCTION ST_SetPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SnapToGrid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Snap RETURNS EXTERNAL NAME\ncreate function getproj4(srid_in integer) returns string \nbegin\n\treturn select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	"user"	2	1	false	false	false	2000
7672	"internaltransform"	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.""Transform"";"	"geom"	1	1	false	false	false	2000
7680	"st_transform"	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n\tdeclare srid_src integer;\n\tdeclare proj4_src string;\n\tdeclare proj4_dest string;\n\n\tselect st_srid(geom) into srid_src;\n\tselect getproj4(srid_src) into proj4_src;\n\tselect getproj4(srid) into proj4_dest;\n\n\tif proj4_src is null then\n\t\treturn select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n\telse\n\t\tif proj4_dest is null then\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n\t\telse\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n\t\tend if;\t\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
7685	"st_translate"	"--Translate moves all points of a geometry dx, dy, dz\ncreate function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7691	"st_translate"	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7698	"st_asewkt"	"--CREATE FUNCTION ST_TransScale RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Outputs ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AsEWKB RETURNS EXTERNAL NAME\ncreate function st_asewkt(geom geometry) returns string external name geom.""AsEWKT"";"	"geom"	1	1	false	false	false	2000
7702	"st_covers"	"--CREATE FUNCTION ST_AsGeoJSON RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsGML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsHEXEWKB RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsKML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsSVG RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsX3D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_GeoHash RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsLatLonText RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------------ Operators --------------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n---------------- Spatial Relationships and Measurements -----------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_3DClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DIntersects RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DMaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DShortestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Area(geog Geography, use_spheroid boolean) RETURNS flt EXTERNAL NAME geom.""Area"";\n--CREATE FUNCTION ST_Azimuth RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ContainsProperly RETURNS EXTERNAL NAME\ncreate function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.""Covers"";"	"geom"	1	1	false	false	false	2000
7707	"st_coveredby"	"--CREATE FUNCTION ST_Covers(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Covers"";\ncreate function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.""CoveredBy"";"	"geom"	1	1	false	false	false	2000
7712	"st_dwithin"	"--CREATE FUNCTION ST_CoveredBy(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""CoveredBy"";\n--CREATE FUNCTION ST_LineCrossingDirection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry) RETURNS double EXTERNAL NAME geom.""Distance""\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Distance""\ncreate function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.""DWithin"";"	"geom"	1	1	false	false	false	2000
7718	"st_length2d"	"--CREATE FUNCTION ST_HausdorffDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Sphere RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_DFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_HasArc RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersects(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Intersects"";\n--CREATE FUNCTION ST_Length(geog Geography, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Length"";\ncreate function st_length2d(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7722	"st_collect"	"--CREATE FUNCTION ST_3DLength RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length2D_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLength_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OrderingEquals RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter2D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DPerimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Project RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry, boundary_node_rule integer) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_RelateMatch RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ShortestLine RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------- Geometry Processing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, circle_quarters_num integer) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, buffer_style_parameters string) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geog Geography, radius double) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_BuildArea RETURNS EXTERNAL NAME\n--collect is the same to union. POstGIS just has a more efficient implementation for it compared to union\ncreate function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7727	"st_collect"	"create aggregate st_collect(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7731	"st_delaunaytriangles"	"--CREATE FUNCTION ST_ConcaveHull RETURNS EXTERNAL NAME\ncreate function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.""DelaunayTriangles"";"	"geom"	1	1	false	false	false	2000
7737	"st_dump"	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.""Dump"";"	"geom"	1	5	false	false	false	2000
7742	"st_dumppoints"	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.""DumpPoints"";"	"geom"	1	5	false	false	false	2000
7747	"contains"	"--CREATE FUNCTION ST_DumpRings RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_FlipCoordinates RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersection(geog1 Geography, geog2 Geography) RETURNS Geography EXTERNAL NAME geom.""Intersection"";\n--CREATE FUNCTION ST_LineToCurve RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MakeValid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MemUnion RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MinimumBoundingCircle RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Polygonize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Node RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OffsetCurve RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemoveRepeatedPoints RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SharedPaths RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Shift_Longitude RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Simplify RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SimplifyPreserveTopology RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Split RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Union(geometry set geoms)?????\n--CREATE FUNCTION ST_UnaryUnion RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n-------------------------- Linear Referencing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_LineInterpolatePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineLocatePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineSubstring RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LocateAlong RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LocateBetween RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LocateBetweenElevations RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_InterpolatePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AddMeasure RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n---------------------- Long Transactions Support ------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n----------------------- Miscellaneous Functions -------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n------------------------ Exceptional Functions --------------------------\n-------------------------------------------------------------------------\n\n\n-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\ncreate function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
7755	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7752
7760	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7752
7765	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7752
7770	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7752
7775	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7752
7780	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	7752
7784	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	7752
7788	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7752
7792	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7752
7796	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7752
7800	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7752
7804	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7752
7808	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7752
7812	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	7752
7816	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	7752
7820	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	7752
7824	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7752
7828	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7752
7832	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7752
7836	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	7752
7840	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7752
7844	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7752
7848	"filter"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Martin Kersten\n-- The JSON type comes with a few operators.\n\ncreate function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7752
7853	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
7858	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
7861	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7865	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7869	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
7875	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	7873
7877	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	7873
7879	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	7873
7882	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	7873
7885	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	7873
7910	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7913	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7916	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7919	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7955	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7958	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7962	"lidarattach"	"create procedure lidarattach(fname string) external name lidar.attach;"	"lidar"	1	2	true	false	false	2000
7965	"lidarload"	"create procedure lidarload(tname string) external name lidar.load;"	"lidar"	1	2	true	false	false	2000
7968	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
8012	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
8014	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
8020	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
8026	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
8031	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
8036	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
8083	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
8087	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
8092	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
8098	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
8105	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
8109	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8114	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8119	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8124	"fuse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- fuse two (8-byte) integer values into one (16-byte) bigint value\ncreate function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
8130	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	8128
8134	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	8128
8138	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	8128
8142	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	8128
8146	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	8128
8151	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	8128
8155	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	8128
8159	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	8128
8163	"seq_char"	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	"bam"	1	1	false	false	false	8128
8170	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	8128
8173	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	8128
8243	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8248	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8254	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8259	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8265	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8270	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8276	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8281	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8287	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8293	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8299	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8305	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8311	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
8316	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 13 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
7171	7176	0	"spatial_ref_sys_srid_pkey"
7891	7892	0	"keywords_keyword_pkey"
7896	7900	0	"table_types_table_type_id_pkey"
7899	7900	0	"table_types_table_type_name_unique"
7904	7908	0	"dependency_types_dependency_type_id_pkey"
7907	7908	0	"dependency_types_dependency_type_name_unique"
8183	8184	0	"files_pkey_file_id"
8194	8197	0	"sq_pkey_sn_file_id"
8196	8197	1	"sq_fkey_file_id"
8213	8216	0	"rg_pkey_id_file_id"
8215	8216	1	"rg_fkey_file_id"
8225	8228	0	"pg_pkey_id_file_id"
8227	8228	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 13 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
7170	7176	0	"spatial_ref_sys_srid_pkey"	-1	-1
7890	7892	0	"keywords_keyword_pkey"	-1	-1
7895	7900	0	"table_types_table_type_id_pkey"	-1	-1
7898	7900	1	"table_types_table_type_name_unique"	-1	-1
7903	7908	0	"dependency_types_dependency_type_id_pkey"	-1	-1
7906	7908	1	"dependency_types_dependency_type_name_unique"	-1	-1
8182	8184	0	"files_pkey_file_id"	-1	-1
8193	8197	0	"sq_pkey_sn_file_id"	-1	-1
8195	8197	2	"sq_fkey_file_id"	8182	514
8212	8216	0	"rg_pkey_id_file_id"	-1	-1
8214	8216	2	"rg_fkey_file_id"	8182	514
8224	8228	0	"pg_pkey_id_file_id"	-1	-1
8226	8228	2	"pg_fkey_file_id"	8182	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 32 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
7171	"srid"	0
7170	"srid"	0
7891	"keyword"	0
7890	"keyword"	0
7896	"table_type_id"	0
7899	"table_type_name"	0
7895	"table_type_id"	0
7898	"table_type_name"	0
7904	"dependency_type_id"	0
7907	"dependency_type_name"	0
7903	"dependency_type_id"	0
7906	"dependency_type_name"	0
8183	"file_id"	0
8182	"file_id"	0
8194	"sn"	0
8194	"file_id"	1
8196	"file_id"	0
8193	"sn"	0
8193	"file_id"	1
8195	"file_id"	0
8213	"id"	0
8213	"file_id"	1
8215	"file_id"	0
8212	"id"	0
8212	"file_id"	1
8214	"file_id"	0
8225	"id"	0
8225	"file_id"	1
8227	"file_id"	0
8224	"id"	0
8224	"file_id"	1
8226	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
6200	1	1	0	0
6210	1	1	0	0
6236	1	1	0	0
6239	1	1	0	0
6243	1	1	0	0
8323	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
7752	"json"	3	3	true
7873	"profiler"	3	3	true
8128	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1802 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
63
64
65
66
67
68
69
70
71
72
73
77
78
79
80
83
84
85
107
108
109
110
111
112
113
114
115
116
117
118
119
120
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1441
62
74
75
76
81
82
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
121
122
123
124
125
126
127
128
129
6221
6224
6230
6250
6255
6260
6264
6268
6272
6276
6279
6283
6287
6291
6295
6299
6303
6307
6311
6315
6319
6323
6327
6331
6335
6342
6348
6353
6358
6363
6368
6373
6379
6383
6387
6391
6396
6400
6404
6408
6412
6416
6421
6426
6431
6436
6446
6496
6498
6500
6503
6505
6535
6539
6543
6547
6551
6555
6559
6563
6568
6573
6578
6583
6588
6593
6598
6603
6608
6613
6618
6623
6628
6633
6638
6643
6648
6652
6668
6671
6675
6678
6682
6685
6692
6697
6703
6709
6714
6719
6723
6727
6731
6735
6738
6748
6756
6769
6774
6778
6780
6800
6803
6806
6809
6812
6815
6818
6830
6832
6836
6840
6844
6848
6852
6856
6860
6864
6868
6872
6876
6880
6884
6888
6892
6896
6900
6904
6908
6912
6916
6920
6924
6928
6932
6936
6940
6944
6948
6952
6956
6960
6964
6968
6972
6976
6980
6984
6988
6992
6996
7000
7004
7008
7012
7016
7020
7024
7028
7032
7036
7041
7046
7051
7056
7061
7066
7071
7076
7081
7086
7091
7096
7101
7106
7111
7116
7121
7126
7130
7134
7138
7142
7146
7151
7156
7160
7164
7188
7192
7197
7202
7207
7212
7216
7220
7224
7228
7232
7236
7240
7245
7249
7253
7257
7261
7266
7271
7276
7281
7286
7291
7296
7301
7307
7312
7317
7322
7327
7331
7336
7341
7345
7349
7353
7357
7361
7365
7369
7373
7377
7381
7386
7390
7394
7398
7402
7406
7410
7415
7419
7423
7428
7432
7437
7442
7447
7452
7457
7462
7467
7472
7477
7482
7487
7492
7496
7500
7504
7508
7512
7516
7520
7524
7528
7533
7538
7544
7551
7557
7561
7566
7574
7581
7585
7590
7595
7599
7603
7607
7611
7615
7619
7623
7627
7631
7635
7639
7643
7647
7651
7655
7659
7663
7668
7672
7680
7685
7691
7698
7702
7707
7712
7718
7722
7727
7731
7737
7742
7747
7755
7760
7765
7770
7775
7780
7784
7788
7792
7796
7800
7804
7808
7812
7816
7820
7824
7828
7832
7836
7840
7844
7848
7853
7858
7861
7865
7869
7875
7877
7879
7882
7885
7910
7913
7916
7919
7955
7958
7962
7965
7968
8012
8014
8020
8026
8031
8036
8083
8087
8092
8098
8105
8109
8114
8119
8124
8130
8134
8138
8142
8146
8151
8155
8159
8163
8170
8173
8243
8248
8254
8259
8265
8270
8276
8281
8287
8293
8299
8305
8311
8316
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 37 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"hge"	"hugeint"	128	1	2	7	0
14	"bte"	"decimal"	2	1	10	10	0
15	"sht"	"decimal"	4	1	10	10	0
16	"int"	"decimal"	9	1	10	10	0
17	"lng"	"decimal"	18	1	10	10	0
18	"hge"	"decimal"	39	1	10	10	0
19	"flt"	"real"	24	2	2	11	0
20	"dbl"	"double"	53	2	2	11	0
21	"int"	"month_interval"	32	0	2	8	0
22	"lng"	"sec_interval"	13	1	10	9	0
23	"daytime"	"time"	7	0	0	12	0
24	"daytime"	"timetz"	7	1	0	12	0
25	"date"	"date"	0	0	0	13	0
26	"timestamp"	"timestamp"	7	0	0	14	0
27	"timestamp"	"timestamptz"	7	1	0	14	0
28	"sqlblob"	"blob"	0	0	0	5	0
29	"wkb"	"geometry"	0	0	0	15	0
30	"wkba"	"geometrya"	0	0	0	16	0
31	"mbr"	"mbr"	0	0	0	16	0
6277	"url"	"url"	0	0	0	16	2000
6377	"inet"	"inet"	0	0	0	16	2000
7186	"mbr"	"mbr"	0	0	0	16	2000
7753	"json"	"json"	0	0	0	16	2000
7856	"uuid"	"uuid"	0	0	0	16	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

