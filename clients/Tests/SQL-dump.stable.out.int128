stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:16:56 >  
# 15:16:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9622" "--port=32080"
# 15:16:56 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.debug
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
create function degrees(r double) 
returns double
	return r*180/pi();
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
create function fuse(one bigint, two bigint)
returns hugeint external name udf.fuse;
create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
 
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create function length(g geometry) returns float external name geom."Length";
create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint
	external name "aggr"."quantile";
create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
create procedure sys.querylog(filename string) 
	external name sql.logfile;
create function sys.querylog_calls()
returns table(
 id oid, 
 "start" timestamp, 
 "stop" timestamp, 
 arguments string, 
 tuples bigint, 
 run bigint, 
 ship bigint, 
 cpu int, 
 io int 
)
external name sql.querylog_calls;
create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
 "plan" string, 
 mal int, 
 optimize bigint 
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
create procedure sys.querylog_empty()
external name sql.querylog_empty;
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val hugeint) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
 set "distinct" = "count" 
	where "type" = 'varchar' or "type"='clob';
end;
create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
create function sys.tracelog() 
	returns table (
 event integer, 
 clk varchar(20), 
 pc varchar(50), 
 thread int, 
 ticks bigint, 
 rrsmb bigint, 
 vmmb bigint, 
 reads bigint, 
 writes bigint, 
 minflt bigint, 
 majflt bigint, 
 nvcsw bigint, 
 stmt string 
	)
	external name sql.dump_trace;
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5447	"id"	"int"	32	0	5446	NULL	true	0	NULL
5448	"name"	"varchar"	1024	0	5446	NULL	true	1	NULL
5449	"schema_id"	"int"	32	0	5446	NULL	true	2	NULL
5450	"query"	"varchar"	2048	0	5446	NULL	true	3	NULL
5451	"type"	"smallint"	16	0	5446	NULL	true	4	NULL
5452	"system"	"boolean"	1	0	5446	NULL	true	5	NULL
5453	"commit_action"	"smallint"	16	0	5446	NULL	true	6	NULL
5454	"access"	"smallint"	16	0	5446	NULL	true	7	NULL
5455	"temporary"	"smallint"	16	0	5446	NULL	true	8	NULL
5457	"id"	"int"	32	0	5456	NULL	true	0	NULL
5458	"name"	"varchar"	1024	0	5456	NULL	true	1	NULL
5459	"type"	"varchar"	1024	0	5456	NULL	true	2	NULL
5460	"type_digits"	"int"	32	0	5456	NULL	true	3	NULL
5461	"type_scale"	"int"	32	0	5456	NULL	true	4	NULL
5462	"table_id"	"int"	32	0	5456	NULL	true	5	NULL
5463	"default"	"varchar"	2048	0	5456	NULL	true	6	NULL
5464	"null"	"boolean"	1	0	5456	NULL	true	7	NULL
5465	"number"	"int"	32	0	5456	NULL	true	8	NULL
5466	"storage"	"varchar"	2048	0	5456	NULL	true	9	NULL
5473	"name"	"varchar"	1024	0	5472	NULL	true	0	NULL
5474	"fullname"	"varchar"	2048	0	5472	NULL	true	1	NULL
5475	"default_schema"	"int"	9	0	5472	NULL	true	2	NULL
5479	"name"	"varchar"	1024	0	5478	NULL	true	0	NULL
5480	"fullname"	"varchar"	2024	0	5478	NULL	true	1	NULL
5481	"default_schema"	"int"	9	0	5478	NULL	true	2	NULL
5483	"login_id"	"int"	32	0	5482	NULL	true	0	NULL
5484	"role_id"	"int"	32	0	5482	NULL	true	1	NULL
5486	"id"	"int"	32	0	5485	NULL	true	0	NULL
5487	"name"	"varchar"	1024	0	5485	NULL	true	1	NULL
5488	"grantor"	"int"	32	0	5485	NULL	true	2	NULL
5490	"obj_id"	"int"	32	0	5489	NULL	true	0	NULL
5491	"auth_id"	"int"	32	0	5489	NULL	true	1	NULL
5492	"privileges"	"int"	32	0	5489	NULL	true	2	NULL
5493	"grantor"	"int"	32	0	5489	NULL	true	3	NULL
5494	"grantable"	"int"	32	0	5489	NULL	true	4	NULL
5703	"id"	"oid"	63	0	5711	NULL	true	0	NULL
5704	"owner"	"clob"	0	0	5711	NULL	true	1	NULL
5705	"defined"	"timestamp"	7	0	5711	NULL	true	2	NULL
5706	"query"	"clob"	0	0	5711	NULL	true	3	NULL
5707	"pipe"	"clob"	0	0	5711	NULL	true	4	NULL
5708	"plan"	"clob"	0	0	5711	NULL	true	5	NULL
5709	"mal"	"int"	32	0	5711	NULL	true	6	NULL
5710	"optimize"	"bigint"	64	0	5711	NULL	true	7	NULL
5713	"id"	"oid"	63	0	5722	NULL	true	0	NULL
5714	"start"	"timestamp"	7	0	5722	NULL	true	1	NULL
5715	"stop"	"timestamp"	7	0	5722	NULL	true	2	NULL
5716	"arguments"	"clob"	0	0	5722	NULL	true	3	NULL
5717	"tuples"	"bigint"	64	0	5722	NULL	true	4	NULL
5718	"run"	"bigint"	64	0	5722	NULL	true	5	NULL
5719	"ship"	"bigint"	64	0	5722	NULL	true	6	NULL
5720	"cpu"	"int"	32	0	5722	NULL	true	7	NULL
5721	"io"	"int"	32	0	5722	NULL	true	8	NULL
5724	"id"	"oid"	63	0	5740	NULL	true	0	NULL
5725	"owner"	"clob"	0	0	5740	NULL	true	1	NULL
5726	"defined"	"timestamp"	7	0	5740	NULL	true	2	NULL
5727	"query"	"clob"	0	0	5740	NULL	true	3	NULL
5728	"pipe"	"clob"	0	0	5740	NULL	true	4	NULL
5729	"plan"	"clob"	0	0	5740	NULL	true	5	NULL
5730	"mal"	"int"	32	0	5740	NULL	true	6	NULL
5731	"optimize"	"bigint"	64	0	5740	NULL	true	7	NULL
5732	"start"	"timestamp"	7	0	5740	NULL	true	8	NULL
5733	"stop"	"timestamp"	7	0	5740	NULL	true	9	NULL
5734	"arguments"	"clob"	0	0	5740	NULL	true	10	NULL
5735	"tuples"	"bigint"	64	0	5740	NULL	true	11	NULL
5736	"run"	"bigint"	64	0	5740	NULL	true	12	NULL
5737	"ship"	"bigint"	64	0	5740	NULL	true	13	NULL
5738	"cpu"	"int"	32	0	5740	NULL	true	14	NULL
5739	"io"	"int"	32	0	5740	NULL	true	15	NULL
5766	"event"	"int"	32	0	5779	NULL	true	0	NULL
5767	"clk"	"varchar"	20	0	5779	NULL	true	1	NULL
5768	"pc"	"varchar"	50	0	5779	NULL	true	2	NULL
5769	"thread"	"int"	32	0	5779	NULL	true	3	NULL
5770	"ticks"	"bigint"	64	0	5779	NULL	true	4	NULL
5771	"rrsmb"	"bigint"	64	0	5779	NULL	true	5	NULL
5772	"vmmb"	"bigint"	64	0	5779	NULL	true	6	NULL
5773	"reads"	"bigint"	64	0	5779	NULL	true	7	NULL
5774	"writes"	"bigint"	64	0	5779	NULL	true	8	NULL
5775	"minflt"	"bigint"	64	0	5779	NULL	true	9	NULL
5776	"majflt"	"bigint"	64	0	5779	NULL	true	10	NULL
5777	"nvcsw"	"bigint"	64	0	5779	NULL	true	11	NULL
5778	"stmt"	"clob"	0	0	5779	NULL	true	12	NULL
5906	"user"	"clob"	0	0	5912	NULL	true	0	NULL
5907	"login"	"timestamp"	7	0	5912	NULL	true	1	NULL
5908	"sessiontimeout"	"bigint"	64	0	5912	NULL	true	2	NULL
5909	"lastcommand"	"timestamp"	7	0	5912	NULL	true	3	NULL
5910	"querytimeout"	"bigint"	64	0	5912	NULL	true	4	NULL
5911	"active"	"boolean"	1	0	5912	NULL	true	5	NULL
5989	"name"	"clob"	0	0	5992	NULL	true	0	NULL
5990	"def"	"clob"	0	0	5992	NULL	true	1	NULL
5991	"status"	"clob"	0	0	5992	NULL	true	2	NULL
5998	"name"	"clob"	0	0	6000	NULL	true	0	NULL
5999	"value"	"clob"	0	0	6000	NULL	true	1	NULL
6040	"qtag"	"bigint"	64	0	6048	NULL	true	0	NULL
6041	"user"	"clob"	0	0	6048	NULL	true	1	NULL
6042	"started"	"timestamp"	7	0	6048	NULL	true	2	NULL
6043	"estimate"	"timestamp"	7	0	6048	NULL	true	3	NULL
6044	"progress"	"int"	32	0	6048	NULL	true	4	NULL
6045	"status"	"clob"	0	0	6048	NULL	true	5	NULL
6046	"tag"	"oid"	63	0	6048	NULL	true	6	NULL
6047	"query"	"clob"	0	0	6048	NULL	true	7	NULL
6074	"rowid"	"bigint"	64	0	6078	NULL	true	0	NULL
6075	"fldid"	"int"	32	0	6078	NULL	true	1	NULL
6076	"message"	"clob"	0	0	6078	NULL	true	2	NULL
6077	"input"	"clob"	0	0	6078	NULL	true	3	NULL
6718	"keyword"	"varchar"	40	0	6721	NULL	false	0	NULL
6723	"table_type_id"	"smallint"	16	0	6729	NULL	false	0	NULL
6726	"table_type_name"	"varchar"	25	0	6729	NULL	false	1	NULL
6731	"dependency_type_id"	"smallint"	16	0	6737	NULL	false	0	NULL
6734	"dependency_type_name"	"varchar"	15	0	6737	NULL	false	1	NULL
6752	"file_id"	"int"	32	0	6754	NULL	true	0	NULL
6753	"location"	"char"	256	0	6754	NULL	true	1	NULL
6756	"dim_id"	"int"	32	0	6760	NULL	true	0	NULL
6757	"file_id"	"int"	32	0	6760	NULL	true	1	NULL
6758	"name"	"varchar"	64	0	6760	NULL	true	2	NULL
6759	"length"	"int"	32	0	6760	NULL	true	3	NULL
6762	"var_id"	"int"	32	0	6768	NULL	true	0	NULL
6763	"file_id"	"int"	32	0	6768	NULL	true	1	NULL
6764	"name"	"varchar"	64	0	6768	NULL	true	2	NULL
6765	"vartype"	"varchar"	64	0	6768	NULL	true	3	NULL
6766	"ndim"	"int"	32	0	6768	NULL	true	4	NULL
6767	"coord_dim_id"	"int"	32	0	6768	NULL	true	5	NULL
6770	"var_id"	"int"	32	0	6774	NULL	true	0	NULL
6771	"dim_id"	"int"	32	0	6774	NULL	true	1	NULL
6772	"file_id"	"int"	32	0	6774	NULL	true	2	NULL
6773	"dimpos"	"int"	32	0	6774	NULL	true	3	NULL
6776	"obj_name"	"varchar"	256	0	6782	NULL	true	0	NULL
6777	"att_name"	"varchar"	256	0	6782	NULL	true	1	NULL
6778	"att_type"	"varchar"	64	0	6782	NULL	true	2	NULL
6779	"value"	"clob"	0	0	6782	NULL	true	3	NULL
6780	"file_id"	"int"	32	0	6782	NULL	true	4	NULL
6781	"gr_name"	"varchar"	256	0	6782	NULL	true	5	NULL
6807	"schema"	"clob"	0	0	6821	NULL	true	0	NULL
6808	"table"	"clob"	0	0	6821	NULL	true	1	NULL
6809	"column"	"clob"	0	0	6821	NULL	true	2	NULL
6810	"type"	"clob"	0	0	6821	NULL	true	3	NULL
6811	"mode"	"clob"	0	0	6821	NULL	true	4	NULL
6812	"location"	"clob"	0	0	6821	NULL	true	5	NULL
6813	"count"	"bigint"	64	0	6821	NULL	true	6	NULL
6814	"typewidth"	"int"	32	0	6821	NULL	true	7	NULL
6815	"columnsize"	"bigint"	64	0	6821	NULL	true	8	NULL
6816	"heapsize"	"bigint"	64	0	6821	NULL	true	9	NULL
6817	"hashes"	"bigint"	64	0	6821	NULL	true	10	NULL
6818	"phash"	"boolean"	1	0	6821	NULL	true	11	NULL
6819	"imprints"	"bigint"	64	0	6821	NULL	true	12	NULL
6820	"sorted"	"boolean"	1	0	6821	NULL	true	13	NULL
6823	"schema"	"clob"	0	0	6833	NULL	true	0	NULL
6824	"table"	"clob"	0	0	6833	NULL	true	1	NULL
6825	"column"	"clob"	0	0	6833	NULL	true	2	NULL
6826	"type"	"clob"	0	0	6833	NULL	true	3	NULL
6827	"typewidth"	"int"	32	0	6833	NULL	true	4	NULL
6828	"count"	"bigint"	64	0	6833	NULL	true	5	NULL
6829	"distinct"	"bigint"	64	0	6833	NULL	true	6	NULL
6830	"atomwidth"	"int"	32	0	6833	NULL	true	7	NULL
6831	"reference"	"boolean"	1	0	6833	NULL	true	8	NULL
6832	"sorted"	"boolean"	1	0	6833	NULL	true	9	NULL
6871	"schema"	"clob"	0	0	6881	NULL	true	0	NULL
6872	"table"	"clob"	0	0	6881	NULL	true	1	NULL
6873	"column"	"clob"	0	0	6881	NULL	true	2	NULL
6874	"type"	"clob"	0	0	6881	NULL	true	3	NULL
6875	"count"	"bigint"	64	0	6881	NULL	true	4	NULL
6876	"columnsize"	"bigint"	64	0	6881	NULL	true	5	NULL
6877	"heapsize"	"bigint"	64	0	6881	NULL	true	6	NULL
6878	"hashes"	"bigint"	64	0	6881	NULL	true	7	NULL
6879	"imprints"	"bigint"	64	0	6881	NULL	true	8	NULL
6880	"sorted"	"boolean"	1	0	6881	NULL	true	9	NULL
6883	"schema"	"clob"	0	0	6891	NULL	true	0	NULL
6884	"table"	"clob"	0	0	6891	NULL	true	1	NULL
6885	"count"	"bigint"	64	0	6891	NULL	true	2	NULL
6886	"columnsize"	"bigint"	64	0	6891	NULL	true	3	NULL
6887	"heapsize"	"bigint"	64	0	6891	NULL	true	4	NULL
6888	"hashes"	"bigint"	64	0	6891	NULL	true	5	NULL
6889	"imprints"	"bigint"	64	0	6891	NULL	true	6	NULL
6890	"auxiliary"	"hugeint"	128	0	6891	NULL	true	7	NULL
6893	"column_id"	"int"	32	0	6904	NULL	true	0	NULL
6894	"type"	"clob"	0	0	6904	NULL	true	1	NULL
6895	"width"	"int"	32	0	6904	NULL	true	2	NULL
6896	"stamp"	"timestamp"	7	0	6904	NULL	true	3	NULL
6897	"sample"	"bigint"	64	0	6904	NULL	true	4	NULL
6898	"count"	"bigint"	64	0	6904	NULL	true	5	NULL
6899	"unique"	"bigint"	64	0	6904	NULL	true	6	NULL
6900	"nils"	"bigint"	64	0	6904	NULL	true	7	NULL
6901	"minval"	"clob"	0	0	6904	NULL	true	8	NULL
6902	"maxval"	"clob"	0	0	6904	NULL	true	9	NULL
6903	"sorted"	"boolean"	1	0	6904	NULL	true	10	NULL
6999	"file_id"	"bigint"	64	0	7007	NULL	false	0	NULL
7000	"file_location"	"clob"	0	0	7007	NULL	false	1	NULL
7001	"dbschema"	"smallint"	16	0	7007	NULL	false	2	NULL
7002	"format_version"	"varchar"	7	0	7007	NULL	true	3	NULL
7003	"sorting_order"	"varchar"	10	0	7007	NULL	true	4	NULL
7004	"comments"	"clob"	0	0	7007	NULL	true	5	NULL
7009	"sn"	"clob"	0	0	7020	NULL	false	0	NULL
7010	"file_id"	"bigint"	64	0	7020	NULL	false	1	NULL
7011	"ln"	"int"	32	0	7020	NULL	true	2	NULL
7012	"as"	"int"	32	0	7020	NULL	true	3	NULL
7013	"m5"	"clob"	0	0	7020	NULL	true	4	NULL
7014	"sp"	"clob"	0	0	7020	NULL	true	5	NULL
7015	"ur"	"clob"	0	0	7020	NULL	true	6	NULL
7022	"id"	"clob"	0	0	7039	NULL	false	0	NULL
7023	"file_id"	"bigint"	64	0	7039	NULL	false	1	NULL
7024	"cn"	"clob"	0	0	7039	NULL	true	2	NULL
7025	"ds"	"clob"	0	0	7039	NULL	true	3	NULL
7026	"dt"	"timestamp"	7	0	7039	NULL	true	4	NULL
7027	"fo"	"clob"	0	0	7039	NULL	true	5	NULL
7028	"ks"	"clob"	0	0	7039	NULL	true	6	NULL
7029	"lb"	"clob"	0	0	7039	NULL	true	7	NULL
7030	"pg"	"clob"	0	0	7039	NULL	true	8	NULL
7031	"pi"	"int"	32	0	7039	NULL	true	9	NULL
7032	"pl"	"clob"	0	0	7039	NULL	true	10	NULL
7033	"pu"	"clob"	0	0	7039	NULL	true	11	NULL
7034	"sm"	"clob"	0	0	7039	NULL	true	12	NULL
7041	"id"	"clob"	0	0	7051	NULL	false	0	NULL
7042	"file_id"	"bigint"	64	0	7051	NULL	false	1	NULL
7043	"pn"	"clob"	0	0	7051	NULL	true	2	NULL
7044	"cl"	"clob"	0	0	7051	NULL	true	3	NULL
7045	"pp"	"clob"	0	0	7051	NULL	true	4	NULL
7046	"vn"	"clob"	0	0	7051	NULL	true	5	NULL
7053	"qname"	"clob"	0	0	7064	NULL	false	0	NULL
7054	"flag"	"smallint"	16	0	7064	NULL	false	1	NULL
7055	"rname"	"clob"	0	0	7064	NULL	false	2	NULL
7056	"pos"	"int"	32	0	7064	NULL	false	3	NULL
7057	"mapq"	"smallint"	16	0	7064	NULL	false	4	NULL
7058	"cigar"	"clob"	0	0	7064	NULL	false	5	NULL
7059	"rnext"	"clob"	0	0	7064	NULL	false	6	NULL
7060	"pnext"	"int"	32	0	7064	NULL	false	7	NULL
7061	"tlen"	"int"	32	0	7064	NULL	false	8	NULL
7062	"seq"	"clob"	0	0	7064	NULL	false	9	NULL
7063	"qual"	"clob"	0	0	7064	NULL	false	10	NULL
7145	"function_id"	"int"	32	0	7146	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5446	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5456	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5472	"db_user_info"	2000	NULL	0	true	0	0
5478	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5482	"user_role"	2000	NULL	0	true	0	0
5485	"auths"	2000	NULL	0	true	0	0
5489	"privileges"	2000	NULL	0	true	0	0
5711	"querylog_catalog"	2000	"create view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5722	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5740	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5779	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5912	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5992	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6000	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6048	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6078	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6721	"keywords"	2000	NULL	0	true	0	0
6729	"table_types"	2000	NULL	0	true	0	0
6737	"dependency_types"	2000	NULL	0	true	0	0
6754	"netcdf_files"	2000	NULL	0	true	0	0
6760	"netcdf_dims"	2000	NULL	0	true	0	0
6768	"netcdf_vars"	2000	NULL	0	true	0	0
6774	"netcdf_vardim"	2000	NULL	0	true	0	0
6782	"netcdf_attrs"	2000	NULL	0	true	0	0
6821	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6833	"storagemodelinput"	2000	NULL	0	true	0	0
6881	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6891	"tablestoragemodel"	2000	"create view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n sum(columnsize) as columnsize,\n sum(heapsize) as heapsize,\n sum(hashes) as hashes,\n sum(imprints) as imprints,\n sum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6904	"statistics"	2000	NULL	0	true	0	0
7007	"files"	6951	NULL	0	true	0	0
7020	"sq"	6951	NULL	0	true	0	0
7039	"rg"	6951	NULL	0	true	0	0
7051	"pg"	6951	NULL	0	true	0	0
7064	"export"	6951	NULL	0	true	0	0
7146	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4060 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	29	"res_0"	"oid"	63	0	0	0
2156	29	"arg_1"	"bigint"	64	0	1	1
2157	30	"res_0"	"oid"	63	0	0	0
2158	30	"arg_1"	"oid"	63	0	1	1
2159	31	"res_0"	"bigint"	64	0	0	0
2160	31	"arg_1"	"any"	0	0	1	1
2161	32	"res_0"	"bigint"	64	0	0	0
2162	32	"arg_1"	"bigint"	64	0	1	1
2163	32	"arg_2"	"int"	32	0	1	2
2164	32	"arg_3"	"any"	0	0	1	3
2165	33	"res_0"	"boolean"	1	0	0	0
2166	33	"arg_1"	"any"	0	0	1	1
2167	33	"arg_2"	"any"	0	0	1	2
2168	34	"res_0"	"boolean"	1	0	0	0
2169	34	"arg_1"	"any"	0	0	1	1
2170	34	"arg_2"	"any"	0	0	1	2
2171	35	"res_0"	"boolean"	1	0	0	0
2172	35	"arg_1"	"any"	0	0	1	1
2173	36	"res_0"	"boolean"	1	0	0	0
2174	36	"arg_1"	"any"	0	0	1	1
2175	36	"arg_2"	"any"	0	0	1	2
2176	37	"res_0"	"boolean"	1	0	0	0
2177	37	"arg_1"	"any"	0	0	1	1
2178	37	"arg_2"	"any"	0	0	1	2
2179	38	"res_0"	"boolean"	1	0	0	0
2180	38	"arg_1"	"any"	0	0	1	1
2181	38	"arg_2"	"any"	0	0	1	2
2182	39	"res_0"	"boolean"	1	0	0	0
2183	39	"arg_1"	"any"	0	0	1	1
2184	39	"arg_2"	"any"	0	0	1	2
2185	43	"res_0"	"boolean"	1	0	0	0
2186	43	"arg_1"	"any"	0	0	1	1
2187	43	"arg_2"	"any"	0	0	1	2
2188	44	"res_0"	"oid"	63	0	0	0
2189	44	"arg_1"	"any"	0	0	1	1
2190	45	"res_0"	"int"	32	0	0	0
2191	45	"arg_1"	"any"	0	0	1	1
2192	46	"res_0"	"oid"	63	0	0	0
2193	46	"arg_1"	"any"	0	0	1	1
2194	46	"arg_2"	"varchar"	0	0	1	2
2195	46	"arg_3"	"varchar"	0	0	1	3
2196	49	"res_0"	"any"	0	0	0	0
2197	49	"arg_1"	"any"	0	0	1	1
2198	49	"arg_2"	"any"	0	0	1	2
2199	50	"res_0"	"any"	0	0	0	0
2200	50	"arg_1"	"any"	0	0	1	1
2201	50	"arg_2"	"any"	0	0	1	2
2202	51	"res_0"	"any"	0	0	0	0
2203	51	"arg_1"	"boolean"	1	0	1	1
2204	51	"arg_2"	"any"	0	0	1	2
2205	51	"arg_3"	"any"	0	0	1	3
2206	72	"res_0"	"oid"	63	0	0	0
2207	72	"arg_1"	"oid"	63	0	1	1
2208	72	"arg_2"	"oid"	63	0	1	2
2209	73	"res_0"	"tinyint"	8	0	0	0
2210	73	"arg_1"	"tinyint"	8	0	1	1
2211	73	"arg_2"	"tinyint"	8	0	1	2
2212	74	"res_0"	"smallint"	16	0	0	0
2213	74	"arg_1"	"smallint"	16	0	1	1
2214	74	"arg_2"	"smallint"	16	0	1	2
2215	75	"res_0"	"int"	32	0	0	0
2216	75	"arg_1"	"int"	32	0	1	1
2217	75	"arg_2"	"int"	32	0	1	2
2218	76	"res_0"	"bigint"	64	0	0	0
2219	76	"arg_1"	"bigint"	64	0	1	1
2220	76	"arg_2"	"bigint"	64	0	1	2
2221	77	"res_0"	"hugeint"	128	0	0	0
2222	77	"arg_1"	"hugeint"	128	0	1	1
2223	77	"arg_2"	"hugeint"	128	0	1	2
2224	78	"res_0"	"decimal"	2	0	0	0
2225	78	"arg_1"	"decimal"	2	0	1	1
2226	78	"arg_2"	"decimal"	2	0	1	2
2227	79	"res_0"	"decimal"	4	0	0	0
2228	79	"arg_1"	"decimal"	4	0	1	1
2229	79	"arg_2"	"decimal"	4	0	1	2
2230	80	"res_0"	"decimal"	9	0	0	0
2231	80	"arg_1"	"decimal"	9	0	1	1
2232	80	"arg_2"	"decimal"	9	0	1	2
2233	81	"res_0"	"decimal"	18	0	0	0
2234	81	"arg_1"	"decimal"	18	0	1	1
2235	81	"arg_2"	"decimal"	18	0	1	2
2236	82	"res_0"	"decimal"	39	0	0	0
2237	82	"arg_1"	"decimal"	39	0	1	1
2238	82	"arg_2"	"decimal"	39	0	1	2
2239	83	"res_0"	"real"	24	0	0	0
2240	83	"arg_1"	"real"	24	0	1	1
2241	83	"arg_2"	"real"	24	0	1	2
2242	84	"res_0"	"double"	53	0	0	0
2243	84	"arg_1"	"double"	53	0	1	1
2244	84	"arg_2"	"double"	53	0	1	2
2245	94	"res_0"	"boolean"	1	0	0	0
2246	94	"arg_1"	"any"	0	0	1	1
2247	95	"res_0"	"boolean"	1	0	0	0
2248	95	"arg_1"	"boolean"	1	0	1	1
2249	95	"arg_2"	"any"	0	0	1	2
2250	96	"res_0"	"int"	32	0	0	0
2251	96	"arg_1"	"any"	0	0	1	1
2252	96	"arg_2"	"boolean"	1	0	1	2
2253	96	"arg_3"	"boolean"	1	0	1	3
2254	97	"res_0"	"int"	32	0	0	0
2255	97	"arg_1"	"any"	0	0	1	1
2256	97	"arg_2"	"boolean"	1	0	1	2
2257	97	"arg_3"	"boolean"	1	0	1	3
2258	98	"res_0"	"int"	32	0	0	0
2259	98	"arg_1"	"any"	0	0	1	1
2260	98	"arg_2"	"boolean"	1	0	1	2
2261	98	"arg_3"	"boolean"	1	0	1	3
2262	99	"res_0"	"boolean"	1	0	0	0
2263	99	"arg_1"	"boolean"	1	0	1	1
2264	99	"arg_2"	"boolean"	1	0	1	2
2265	100	"res_0"	"boolean"	1	0	0	0
2266	100	"arg_1"	"boolean"	1	0	1	1
2267	100	"arg_2"	"boolean"	1	0	1	2
2268	101	"res_0"	"boolean"	1	0	0	0
2269	101	"arg_1"	"boolean"	1	0	1	1
2270	101	"arg_2"	"boolean"	1	0	1	2
2271	102	"res_0"	"boolean"	1	0	0	0
2272	102	"arg_1"	"boolean"	1	0	1	1
2273	103	"res_0"	"smallint"	16	0	0	0
2274	103	"arg_1"	"smallint"	16	0	1	1
2275	103	"arg_2"	"tinyint"	8	0	1	2
2276	104	"res_0"	"smallint"	16	0	0	0
2277	104	"arg_1"	"smallint"	16	0	1	1
2278	104	"arg_2"	"tinyint"	8	0	1	2
2279	105	"res_0"	"int"	32	0	0	0
2280	105	"arg_1"	"int"	32	0	1	1
2281	105	"arg_2"	"tinyint"	8	0	1	2
2282	106	"res_0"	"int"	32	0	0	0
2283	106	"arg_1"	"int"	32	0	1	1
2284	106	"arg_2"	"tinyint"	8	0	1	2
2285	107	"res_0"	"int"	32	0	0	0
2286	107	"arg_1"	"int"	32	0	1	1
2287	107	"arg_2"	"smallint"	16	0	1	2
2288	108	"res_0"	"int"	32	0	0	0
2289	108	"arg_1"	"int"	32	0	1	1
2290	108	"arg_2"	"smallint"	16	0	1	2
2291	109	"res_0"	"bigint"	64	0	0	0
2292	109	"arg_1"	"bigint"	64	0	1	1
2293	109	"arg_2"	"tinyint"	8	0	1	2
2294	110	"res_0"	"bigint"	64	0	0	0
2295	110	"arg_1"	"bigint"	64	0	1	1
2296	110	"arg_2"	"tinyint"	8	0	1	2
2297	111	"res_0"	"bigint"	64	0	0	0
2298	111	"arg_1"	"bigint"	64	0	1	1
2299	111	"arg_2"	"smallint"	16	0	1	2
2300	112	"res_0"	"bigint"	64	0	0	0
2301	112	"arg_1"	"bigint"	64	0	1	1
2302	112	"arg_2"	"smallint"	16	0	1	2
2303	113	"res_0"	"bigint"	64	0	0	0
2304	113	"arg_1"	"bigint"	64	0	1	1
2305	113	"arg_2"	"int"	32	0	1	2
2306	114	"res_0"	"bigint"	64	0	0	0
2307	114	"arg_1"	"bigint"	64	0	1	1
2308	114	"arg_2"	"int"	32	0	1	2
2309	115	"res_0"	"hugeint"	128	0	0	0
2310	115	"arg_1"	"hugeint"	128	0	1	1
2311	115	"arg_2"	"tinyint"	8	0	1	2
2312	116	"res_0"	"hugeint"	128	0	0	0
2313	116	"arg_1"	"hugeint"	128	0	1	1
2314	116	"arg_2"	"tinyint"	8	0	1	2
2315	117	"res_0"	"hugeint"	128	0	0	0
2316	117	"arg_1"	"hugeint"	128	0	1	1
2317	117	"arg_2"	"smallint"	16	0	1	2
2318	118	"res_0"	"hugeint"	128	0	0	0
2319	118	"arg_1"	"hugeint"	128	0	1	1
2320	118	"arg_2"	"smallint"	16	0	1	2
2321	119	"res_0"	"hugeint"	128	0	0	0
2322	119	"arg_1"	"hugeint"	128	0	1	1
2323	119	"arg_2"	"int"	32	0	1	2
2324	120	"res_0"	"hugeint"	128	0	0	0
2325	120	"arg_1"	"hugeint"	128	0	1	1
2326	120	"arg_2"	"int"	32	0	1	2
2327	121	"res_0"	"hugeint"	128	0	0	0
2328	121	"arg_1"	"hugeint"	128	0	1	1
2329	121	"arg_2"	"bigint"	64	0	1	2
2330	122	"res_0"	"hugeint"	128	0	0	0
2331	122	"arg_1"	"hugeint"	128	0	1	1
2332	122	"arg_2"	"bigint"	64	0	1	2
2333	123	"res_0"	"oid"	63	0	0	0
2334	123	"arg_1"	"oid"	63	0	1	1
2335	123	"arg_2"	"oid"	63	0	1	2
2336	124	"res_0"	"oid"	63	0	0	0
2337	124	"arg_1"	"oid"	63	0	1	1
2338	124	"arg_2"	"oid"	63	0	1	2
2339	125	"res_0"	"oid"	63	0	0	0
2340	125	"arg_1"	"oid"	63	0	1	1
2341	125	"arg_2"	"oid"	63	0	1	2
2342	126	"res_0"	"oid"	63	0	0	0
2343	126	"arg_1"	"oid"	63	0	1	1
2344	126	"arg_2"	"oid"	63	0	1	2
2345	127	"res_0"	"oid"	63	0	0	0
2346	127	"arg_1"	"oid"	63	0	1	1
2347	127	"arg_2"	"oid"	63	0	1	2
2348	128	"res_0"	"oid"	63	0	0	0
2349	128	"arg_1"	"oid"	63	0	1	1
2350	128	"arg_2"	"oid"	63	0	1	2
2351	129	"res_0"	"oid"	63	0	0	0
2352	129	"arg_1"	"oid"	63	0	1	1
2353	129	"arg_2"	"oid"	63	0	1	2
2354	130	"res_0"	"oid"	63	0	0	0
2355	130	"arg_1"	"oid"	63	0	1	1
2356	131	"res_0"	"oid"	63	0	0	0
2357	131	"arg_1"	"oid"	63	0	1	1
2358	131	"arg_2"	"int"	32	0	1	2
2359	132	"res_0"	"oid"	63	0	0	0
2360	132	"arg_1"	"oid"	63	0	1	1
2361	132	"arg_2"	"int"	32	0	1	2
2362	133	"res_0"	"oid"	63	0	0	0
2363	133	"arg_1"	"oid"	63	0	1	1
2364	134	"res_0"	"oid"	63	0	0	0
2365	134	"arg_1"	"oid"	63	0	1	1
2366	135	"res_0"	"tinyint"	8	0	0	0
2367	135	"arg_1"	"oid"	63	0	1	1
2368	136	"res_0"	"oid"	63	0	0	0
2369	136	"arg_1"	"oid"	63	0	1	1
2370	136	"arg_2"	"oid"	63	0	1	2
2371	137	"res_0"	"oid"	63	0	0	0
2372	137	"arg_1"	"oid"	63	0	1	1
2373	137	"arg_2"	"oid"	63	0	1	2
2374	138	"res_0"	"month_interval"	32	0	0	0
2375	138	"arg_1"	"month_interval"	32	0	1	1
2376	138	"arg_2"	"oid"	63	0	1	2
2377	139	"res_0"	"month_interval"	32	0	0	0
2378	139	"arg_1"	"month_interval"	32	0	1	1
2379	139	"arg_2"	"oid"	63	0	1	2
2380	140	"res_0"	"month_interval"	32	0	0	0
2381	140	"arg_1"	"month_interval"	32	0	1	1
2382	140	"arg_2"	"oid"	63	0	1	2
2383	141	"res_0"	"month_interval"	32	0	0	0
2384	141	"arg_1"	"month_interval"	32	0	1	1
2385	141	"arg_2"	"oid"	63	0	1	2
2386	142	"res_0"	"sec_interval"	13	0	0	0
2387	142	"arg_1"	"sec_interval"	13	0	1	1
2388	142	"arg_2"	"oid"	63	0	1	2
2389	143	"res_0"	"sec_interval"	13	0	0	0
2390	143	"arg_1"	"sec_interval"	13	0	1	1
2391	143	"arg_2"	"oid"	63	0	1	2
2392	144	"res_0"	"sec_interval"	13	0	0	0
2393	144	"arg_1"	"sec_interval"	13	0	1	1
2394	144	"arg_2"	"oid"	63	0	1	2
2395	145	"res_0"	"sec_interval"	13	0	0	0
2396	145	"arg_1"	"sec_interval"	13	0	1	1
2397	145	"arg_2"	"oid"	63	0	1	2
2398	146	"res_0"	"tinyint"	8	0	0	0
2399	146	"arg_1"	"tinyint"	8	0	1	1
2400	146	"arg_2"	"tinyint"	8	0	1	2
2401	147	"res_0"	"tinyint"	8	0	0	0
2402	147	"arg_1"	"tinyint"	8	0	1	1
2403	147	"arg_2"	"tinyint"	8	0	1	2
2404	148	"res_0"	"tinyint"	8	0	0	0
2405	148	"arg_1"	"tinyint"	8	0	1	1
2406	148	"arg_2"	"tinyint"	8	0	1	2
2407	149	"res_0"	"tinyint"	8	0	0	0
2408	149	"arg_1"	"tinyint"	8	0	1	1
2409	149	"arg_2"	"tinyint"	8	0	1	2
2410	150	"res_0"	"tinyint"	8	0	0	0
2411	150	"arg_1"	"tinyint"	8	0	1	1
2412	150	"arg_2"	"tinyint"	8	0	1	2
2413	151	"res_0"	"tinyint"	8	0	0	0
2414	151	"arg_1"	"tinyint"	8	0	1	1
2415	151	"arg_2"	"tinyint"	8	0	1	2
2416	152	"res_0"	"tinyint"	8	0	0	0
2417	152	"arg_1"	"tinyint"	8	0	1	1
2418	152	"arg_2"	"tinyint"	8	0	1	2
2419	153	"res_0"	"tinyint"	8	0	0	0
2420	153	"arg_1"	"tinyint"	8	0	1	1
2421	154	"res_0"	"tinyint"	8	0	0	0
2422	154	"arg_1"	"tinyint"	8	0	1	1
2423	154	"arg_2"	"int"	32	0	1	2
2424	155	"res_0"	"tinyint"	8	0	0	0
2425	155	"arg_1"	"tinyint"	8	0	1	1
2426	155	"arg_2"	"int"	32	0	1	2
2427	156	"res_0"	"tinyint"	8	0	0	0
2428	156	"arg_1"	"tinyint"	8	0	1	1
2429	157	"res_0"	"tinyint"	8	0	0	0
2430	157	"arg_1"	"tinyint"	8	0	1	1
2431	158	"res_0"	"tinyint"	8	0	0	0
2432	158	"arg_1"	"tinyint"	8	0	1	1
2433	159	"res_0"	"tinyint"	8	0	0	0
2434	159	"arg_1"	"tinyint"	8	0	1	1
2435	159	"arg_2"	"tinyint"	8	0	1	2
2436	160	"res_0"	"tinyint"	8	0	0	0
2437	160	"arg_1"	"tinyint"	8	0	1	1
2438	160	"arg_2"	"tinyint"	8	0	1	2
2439	161	"res_0"	"month_interval"	32	0	0	0
2440	161	"arg_1"	"month_interval"	32	0	1	1
2441	161	"arg_2"	"tinyint"	8	0	1	2
2442	162	"res_0"	"month_interval"	32	0	0	0
2443	162	"arg_1"	"month_interval"	32	0	1	1
2444	162	"arg_2"	"tinyint"	8	0	1	2
2445	163	"res_0"	"month_interval"	32	0	0	0
2446	163	"arg_1"	"month_interval"	32	0	1	1
2447	163	"arg_2"	"tinyint"	8	0	1	2
2448	164	"res_0"	"month_interval"	32	0	0	0
2449	164	"arg_1"	"month_interval"	32	0	1	1
2450	164	"arg_2"	"tinyint"	8	0	1	2
2451	165	"res_0"	"sec_interval"	13	0	0	0
2452	165	"arg_1"	"sec_interval"	13	0	1	1
2453	165	"arg_2"	"tinyint"	8	0	1	2
2454	166	"res_0"	"sec_interval"	13	0	0	0
2455	166	"arg_1"	"sec_interval"	13	0	1	1
2456	166	"arg_2"	"tinyint"	8	0	1	2
2457	167	"res_0"	"sec_interval"	13	0	0	0
2458	167	"arg_1"	"sec_interval"	13	0	1	1
2459	167	"arg_2"	"tinyint"	8	0	1	2
2460	168	"res_0"	"sec_interval"	13	0	0	0
2461	168	"arg_1"	"sec_interval"	13	0	1	1
2462	168	"arg_2"	"tinyint"	8	0	1	2
2463	169	"res_0"	"smallint"	16	0	0	0
2464	169	"arg_1"	"smallint"	16	0	1	1
2465	169	"arg_2"	"smallint"	16	0	1	2
2466	170	"res_0"	"smallint"	16	0	0	0
2467	170	"arg_1"	"smallint"	16	0	1	1
2468	170	"arg_2"	"smallint"	16	0	1	2
2469	171	"res_0"	"smallint"	16	0	0	0
2470	171	"arg_1"	"smallint"	16	0	1	1
2471	171	"arg_2"	"smallint"	16	0	1	2
2472	172	"res_0"	"smallint"	16	0	0	0
2473	172	"arg_1"	"smallint"	16	0	1	1
2474	172	"arg_2"	"smallint"	16	0	1	2
2475	173	"res_0"	"smallint"	16	0	0	0
2476	173	"arg_1"	"smallint"	16	0	1	1
2477	173	"arg_2"	"smallint"	16	0	1	2
2478	174	"res_0"	"smallint"	16	0	0	0
2479	174	"arg_1"	"smallint"	16	0	1	1
2480	174	"arg_2"	"smallint"	16	0	1	2
2481	175	"res_0"	"smallint"	16	0	0	0
2482	175	"arg_1"	"smallint"	16	0	1	1
2483	175	"arg_2"	"smallint"	16	0	1	2
2484	176	"res_0"	"smallint"	16	0	0	0
2485	176	"arg_1"	"smallint"	16	0	1	1
2486	177	"res_0"	"smallint"	16	0	0	0
2487	177	"arg_1"	"smallint"	16	0	1	1
2488	177	"arg_2"	"int"	32	0	1	2
2489	178	"res_0"	"smallint"	16	0	0	0
2490	178	"arg_1"	"smallint"	16	0	1	1
2491	178	"arg_2"	"int"	32	0	1	2
2492	179	"res_0"	"smallint"	16	0	0	0
2493	179	"arg_1"	"smallint"	16	0	1	1
2494	180	"res_0"	"smallint"	16	0	0	0
2495	180	"arg_1"	"smallint"	16	0	1	1
2496	181	"res_0"	"tinyint"	8	0	0	0
2497	181	"arg_1"	"smallint"	16	0	1	1
2498	182	"res_0"	"smallint"	16	0	0	0
2499	182	"arg_1"	"smallint"	16	0	1	1
2500	182	"arg_2"	"smallint"	16	0	1	2
2501	183	"res_0"	"smallint"	16	0	0	0
2502	183	"arg_1"	"smallint"	16	0	1	1
2503	183	"arg_2"	"smallint"	16	0	1	2
2504	184	"res_0"	"month_interval"	32	0	0	0
2505	184	"arg_1"	"month_interval"	32	0	1	1
2506	184	"arg_2"	"smallint"	16	0	1	2
2507	185	"res_0"	"month_interval"	32	0	0	0
2508	185	"arg_1"	"month_interval"	32	0	1	1
2509	185	"arg_2"	"smallint"	16	0	1	2
2510	186	"res_0"	"month_interval"	32	0	0	0
2511	186	"arg_1"	"month_interval"	32	0	1	1
2512	186	"arg_2"	"smallint"	16	0	1	2
2513	187	"res_0"	"month_interval"	32	0	0	0
2514	187	"arg_1"	"month_interval"	32	0	1	1
2515	187	"arg_2"	"smallint"	16	0	1	2
2516	188	"res_0"	"sec_interval"	13	0	0	0
2517	188	"arg_1"	"sec_interval"	13	0	1	1
2518	188	"arg_2"	"smallint"	16	0	1	2
2519	189	"res_0"	"sec_interval"	13	0	0	0
2520	189	"arg_1"	"sec_interval"	13	0	1	1
2521	189	"arg_2"	"smallint"	16	0	1	2
2522	190	"res_0"	"sec_interval"	13	0	0	0
2523	190	"arg_1"	"sec_interval"	13	0	1	1
2524	190	"arg_2"	"smallint"	16	0	1	2
2525	191	"res_0"	"sec_interval"	13	0	0	0
2526	191	"arg_1"	"sec_interval"	13	0	1	1
2527	191	"arg_2"	"smallint"	16	0	1	2
2528	192	"res_0"	"int"	32	0	0	0
2529	192	"arg_1"	"int"	32	0	1	1
2530	192	"arg_2"	"int"	32	0	1	2
2531	193	"res_0"	"int"	32	0	0	0
2532	193	"arg_1"	"int"	32	0	1	1
2533	193	"arg_2"	"int"	32	0	1	2
2534	194	"res_0"	"int"	32	0	0	0
2535	194	"arg_1"	"int"	32	0	1	1
2536	194	"arg_2"	"int"	32	0	1	2
2537	195	"res_0"	"int"	32	0	0	0
2538	195	"arg_1"	"int"	32	0	1	1
2539	195	"arg_2"	"int"	32	0	1	2
2540	196	"res_0"	"int"	32	0	0	0
2541	196	"arg_1"	"int"	32	0	1	1
2542	196	"arg_2"	"int"	32	0	1	2
2543	197	"res_0"	"int"	32	0	0	0
2544	197	"arg_1"	"int"	32	0	1	1
2545	197	"arg_2"	"int"	32	0	1	2
2546	198	"res_0"	"int"	32	0	0	0
2547	198	"arg_1"	"int"	32	0	1	1
2548	198	"arg_2"	"int"	32	0	1	2
2549	199	"res_0"	"int"	32	0	0	0
2550	199	"arg_1"	"int"	32	0	1	1
2551	200	"res_0"	"int"	32	0	0	0
2552	200	"arg_1"	"int"	32	0	1	1
2553	200	"arg_2"	"int"	32	0	1	2
2554	201	"res_0"	"int"	32	0	0	0
2555	201	"arg_1"	"int"	32	0	1	1
2556	201	"arg_2"	"int"	32	0	1	2
2557	202	"res_0"	"int"	32	0	0	0
2558	202	"arg_1"	"int"	32	0	1	1
2559	203	"res_0"	"int"	32	0	0	0
2560	203	"arg_1"	"int"	32	0	1	1
2561	204	"res_0"	"tinyint"	8	0	0	0
2562	204	"arg_1"	"int"	32	0	1	1
2563	205	"res_0"	"int"	32	0	0	0
2564	205	"arg_1"	"int"	32	0	1	1
2565	205	"arg_2"	"int"	32	0	1	2
2566	206	"res_0"	"int"	32	0	0	0
2567	206	"arg_1"	"int"	32	0	1	1
2568	206	"arg_2"	"int"	32	0	1	2
2569	207	"res_0"	"month_interval"	32	0	0	0
2570	207	"arg_1"	"month_interval"	32	0	1	1
2571	207	"arg_2"	"int"	32	0	1	2
2572	208	"res_0"	"month_interval"	32	0	0	0
2573	208	"arg_1"	"month_interval"	32	0	1	1
2574	208	"arg_2"	"int"	32	0	1	2
2575	209	"res_0"	"month_interval"	32	0	0	0
2576	209	"arg_1"	"month_interval"	32	0	1	1
2577	209	"arg_2"	"int"	32	0	1	2
2578	210	"res_0"	"month_interval"	32	0	0	0
2579	210	"arg_1"	"month_interval"	32	0	1	1
2580	210	"arg_2"	"int"	32	0	1	2
2581	211	"res_0"	"sec_interval"	13	0	0	0
2582	211	"arg_1"	"sec_interval"	13	0	1	1
2583	211	"arg_2"	"int"	32	0	1	2
2584	212	"res_0"	"sec_interval"	13	0	0	0
2585	212	"arg_1"	"sec_interval"	13	0	1	1
2586	212	"arg_2"	"int"	32	0	1	2
2587	213	"res_0"	"sec_interval"	13	0	0	0
2588	213	"arg_1"	"sec_interval"	13	0	1	1
2589	213	"arg_2"	"int"	32	0	1	2
2590	214	"res_0"	"sec_interval"	13	0	0	0
2591	214	"arg_1"	"sec_interval"	13	0	1	1
2592	214	"arg_2"	"int"	32	0	1	2
2593	215	"res_0"	"bigint"	64	0	0	0
2594	215	"arg_1"	"bigint"	64	0	1	1
2595	215	"arg_2"	"bigint"	64	0	1	2
2596	216	"res_0"	"bigint"	64	0	0	0
2597	216	"arg_1"	"bigint"	64	0	1	1
2598	216	"arg_2"	"bigint"	64	0	1	2
2599	217	"res_0"	"bigint"	64	0	0	0
2600	217	"arg_1"	"bigint"	64	0	1	1
2601	217	"arg_2"	"bigint"	64	0	1	2
2602	218	"res_0"	"bigint"	64	0	0	0
2603	218	"arg_1"	"bigint"	64	0	1	1
2604	218	"arg_2"	"bigint"	64	0	1	2
2605	219	"res_0"	"bigint"	64	0	0	0
2606	219	"arg_1"	"bigint"	64	0	1	1
2607	219	"arg_2"	"bigint"	64	0	1	2
2608	220	"res_0"	"bigint"	64	0	0	0
2609	220	"arg_1"	"bigint"	64	0	1	1
2610	220	"arg_2"	"bigint"	64	0	1	2
2611	221	"res_0"	"bigint"	64	0	0	0
2612	221	"arg_1"	"bigint"	64	0	1	1
2613	221	"arg_2"	"bigint"	64	0	1	2
2614	222	"res_0"	"bigint"	64	0	0	0
2615	222	"arg_1"	"bigint"	64	0	1	1
2616	223	"res_0"	"bigint"	64	0	0	0
2617	223	"arg_1"	"bigint"	64	0	1	1
2618	223	"arg_2"	"int"	32	0	1	2
2619	224	"res_0"	"bigint"	64	0	0	0
2620	224	"arg_1"	"bigint"	64	0	1	1
2621	224	"arg_2"	"int"	32	0	1	2
2622	225	"res_0"	"bigint"	64	0	0	0
2623	225	"arg_1"	"bigint"	64	0	1	1
2624	226	"res_0"	"bigint"	64	0	0	0
2625	226	"arg_1"	"bigint"	64	0	1	1
2626	227	"res_0"	"tinyint"	8	0	0	0
2627	227	"arg_1"	"bigint"	64	0	1	1
2628	228	"res_0"	"bigint"	64	0	0	0
2629	228	"arg_1"	"bigint"	64	0	1	1
2630	228	"arg_2"	"bigint"	64	0	1	2
2631	229	"res_0"	"bigint"	64	0	0	0
2632	229	"arg_1"	"bigint"	64	0	1	1
2633	229	"arg_2"	"bigint"	64	0	1	2
2634	230	"res_0"	"month_interval"	32	0	0	0
2635	230	"arg_1"	"month_interval"	32	0	1	1
2636	230	"arg_2"	"bigint"	64	0	1	2
2637	231	"res_0"	"month_interval"	32	0	0	0
2638	231	"arg_1"	"month_interval"	32	0	1	1
2639	231	"arg_2"	"bigint"	64	0	1	2
2640	232	"res_0"	"month_interval"	32	0	0	0
2641	232	"arg_1"	"month_interval"	32	0	1	1
2642	232	"arg_2"	"bigint"	64	0	1	2
2643	233	"res_0"	"month_interval"	32	0	0	0
2644	233	"arg_1"	"month_interval"	32	0	1	1
2645	233	"arg_2"	"bigint"	64	0	1	2
2646	234	"res_0"	"sec_interval"	13	0	0	0
2647	234	"arg_1"	"sec_interval"	13	0	1	1
2648	234	"arg_2"	"bigint"	64	0	1	2
2649	235	"res_0"	"sec_interval"	13	0	0	0
2650	235	"arg_1"	"sec_interval"	13	0	1	1
2651	235	"arg_2"	"bigint"	64	0	1	2
2652	236	"res_0"	"sec_interval"	13	0	0	0
2653	236	"arg_1"	"sec_interval"	13	0	1	1
2654	236	"arg_2"	"bigint"	64	0	1	2
2655	237	"res_0"	"sec_interval"	13	0	0	0
2656	237	"arg_1"	"sec_interval"	13	0	1	1
2657	237	"arg_2"	"bigint"	64	0	1	2
2658	238	"res_0"	"hugeint"	128	0	0	0
2659	238	"arg_1"	"hugeint"	128	0	1	1
2660	238	"arg_2"	"hugeint"	128	0	1	2
2661	239	"res_0"	"hugeint"	128	0	0	0
2662	239	"arg_1"	"hugeint"	128	0	1	1
2663	239	"arg_2"	"hugeint"	128	0	1	2
2664	240	"res_0"	"hugeint"	128	0	0	0
2665	240	"arg_1"	"hugeint"	128	0	1	1
2666	240	"arg_2"	"hugeint"	128	0	1	2
2667	241	"res_0"	"hugeint"	128	0	0	0
2668	241	"arg_1"	"hugeint"	128	0	1	1
2669	241	"arg_2"	"hugeint"	128	0	1	2
2670	242	"res_0"	"hugeint"	128	0	0	0
2671	242	"arg_1"	"hugeint"	128	0	1	1
2672	242	"arg_2"	"hugeint"	128	0	1	2
2673	243	"res_0"	"hugeint"	128	0	0	0
2674	243	"arg_1"	"hugeint"	128	0	1	1
2675	243	"arg_2"	"hugeint"	128	0	1	2
2676	244	"res_0"	"hugeint"	128	0	0	0
2677	244	"arg_1"	"hugeint"	128	0	1	1
2678	244	"arg_2"	"hugeint"	128	0	1	2
2679	245	"res_0"	"hugeint"	128	0	0	0
2680	245	"arg_1"	"hugeint"	128	0	1	1
2681	246	"res_0"	"hugeint"	128	0	0	0
2682	246	"arg_1"	"hugeint"	128	0	1	1
2683	246	"arg_2"	"int"	32	0	1	2
2684	247	"res_0"	"hugeint"	128	0	0	0
2685	247	"arg_1"	"hugeint"	128	0	1	1
2686	247	"arg_2"	"int"	32	0	1	2
2687	248	"res_0"	"hugeint"	128	0	0	0
2688	248	"arg_1"	"hugeint"	128	0	1	1
2689	249	"res_0"	"hugeint"	128	0	0	0
2690	249	"arg_1"	"hugeint"	128	0	1	1
2691	250	"res_0"	"tinyint"	8	0	0	0
2692	250	"arg_1"	"hugeint"	128	0	1	1
2693	251	"res_0"	"hugeint"	128	0	0	0
2694	251	"arg_1"	"hugeint"	128	0	1	1
2695	251	"arg_2"	"hugeint"	128	0	1	2
2696	252	"res_0"	"hugeint"	128	0	0	0
2697	252	"arg_1"	"hugeint"	128	0	1	1
2698	252	"arg_2"	"hugeint"	128	0	1	2
2699	253	"res_0"	"month_interval"	32	0	0	0
2700	253	"arg_1"	"month_interval"	32	0	1	1
2701	253	"arg_2"	"hugeint"	128	0	1	2
2702	254	"res_0"	"month_interval"	32	0	0	0
2703	254	"arg_1"	"month_interval"	32	0	1	1
2704	254	"arg_2"	"hugeint"	128	0	1	2
2705	255	"res_0"	"month_interval"	32	0	0	0
2706	255	"arg_1"	"month_interval"	32	0	1	1
2707	255	"arg_2"	"hugeint"	128	0	1	2
2708	256	"res_0"	"month_interval"	32	0	0	0
2709	256	"arg_1"	"month_interval"	32	0	1	1
2710	256	"arg_2"	"hugeint"	128	0	1	2
2711	257	"res_0"	"sec_interval"	13	0	0	0
2712	257	"arg_1"	"sec_interval"	13	0	1	1
2713	257	"arg_2"	"hugeint"	128	0	1	2
2714	258	"res_0"	"sec_interval"	13	0	0	0
2715	258	"arg_1"	"sec_interval"	13	0	1	1
2716	258	"arg_2"	"hugeint"	128	0	1	2
2717	259	"res_0"	"sec_interval"	13	0	0	0
2718	259	"arg_1"	"sec_interval"	13	0	1	1
2719	259	"arg_2"	"hugeint"	128	0	1	2
2720	260	"res_0"	"sec_interval"	13	0	0	0
2721	260	"arg_1"	"sec_interval"	13	0	1	1
2722	260	"arg_2"	"hugeint"	128	0	1	2
2723	261	"res_0"	"decimal"	2	0	0	0
2724	261	"arg_1"	"decimal"	2	0	1	1
2725	261	"arg_2"	"decimal"	2	0	1	2
2726	262	"res_0"	"decimal"	2	0	0	0
2727	262	"arg_1"	"decimal"	2	0	1	1
2728	262	"arg_2"	"decimal"	2	0	1	2
2729	263	"res_0"	"decimal"	2	0	0	0
2730	263	"arg_1"	"decimal"	2	0	1	1
2731	263	"arg_2"	"decimal"	2	0	1	2
2732	264	"res_0"	"decimal"	2	0	0	0
2733	264	"arg_1"	"decimal"	2	0	1	1
2734	264	"arg_2"	"decimal"	2	0	1	2
2735	265	"res_0"	"decimal"	2	0	0	0
2736	265	"arg_1"	"decimal"	2	0	1	1
2737	265	"arg_2"	"decimal"	2	0	1	2
2738	266	"res_0"	"decimal"	2	0	0	0
2739	266	"arg_1"	"decimal"	2	0	1	1
2740	266	"arg_2"	"decimal"	2	0	1	2
2741	267	"res_0"	"decimal"	2	0	0	0
2742	267	"arg_1"	"decimal"	2	0	1	1
2743	267	"arg_2"	"decimal"	2	0	1	2
2744	268	"res_0"	"decimal"	2	0	0	0
2745	268	"arg_1"	"decimal"	2	0	1	1
2746	269	"res_0"	"decimal"	2	0	0	0
2747	269	"arg_1"	"decimal"	2	0	1	1
2748	269	"arg_2"	"int"	32	0	1	2
2749	270	"res_0"	"decimal"	2	0	0	0
2750	270	"arg_1"	"decimal"	2	0	1	1
2751	270	"arg_2"	"int"	32	0	1	2
2752	271	"res_0"	"decimal"	2	0	0	0
2753	271	"arg_1"	"decimal"	2	0	1	1
2754	272	"res_0"	"decimal"	2	0	0	0
2755	272	"arg_1"	"decimal"	2	0	1	1
2756	273	"res_0"	"tinyint"	8	0	0	0
2757	273	"arg_1"	"decimal"	2	0	1	1
2758	274	"res_0"	"decimal"	2	0	0	0
2759	274	"arg_1"	"decimal"	2	0	1	1
2760	274	"arg_2"	"tinyint"	8	0	1	2
2761	275	"res_0"	"decimal"	2	0	0	0
2762	275	"arg_1"	"decimal"	2	0	1	1
2763	275	"arg_2"	"tinyint"	8	0	1	2
2764	276	"res_0"	"month_interval"	32	0	0	0
2765	276	"arg_1"	"month_interval"	32	0	1	1
2766	276	"arg_2"	"decimal"	2	0	1	2
2767	277	"res_0"	"month_interval"	32	0	0	0
2768	277	"arg_1"	"month_interval"	32	0	1	1
2769	277	"arg_2"	"decimal"	2	0	1	2
2770	278	"res_0"	"month_interval"	32	0	0	0
2771	278	"arg_1"	"month_interval"	32	0	1	1
2772	278	"arg_2"	"decimal"	2	0	1	2
2773	279	"res_0"	"month_interval"	32	0	0	0
2774	279	"arg_1"	"month_interval"	32	0	1	1
2775	279	"arg_2"	"decimal"	2	0	1	2
2776	280	"res_0"	"sec_interval"	13	0	0	0
2777	280	"arg_1"	"sec_interval"	13	0	1	1
2778	280	"arg_2"	"decimal"	2	0	1	2
2779	281	"res_0"	"sec_interval"	13	0	0	0
2780	281	"arg_1"	"sec_interval"	13	0	1	1
2781	281	"arg_2"	"decimal"	2	0	1	2
2782	282	"res_0"	"sec_interval"	13	0	0	0
2783	282	"arg_1"	"sec_interval"	13	0	1	1
2784	282	"arg_2"	"decimal"	2	0	1	2
2785	283	"res_0"	"sec_interval"	13	0	0	0
2786	283	"arg_1"	"sec_interval"	13	0	1	1
2787	283	"arg_2"	"decimal"	2	0	1	2
2788	284	"res_0"	"decimal"	4	0	0	0
2789	284	"arg_1"	"decimal"	4	0	1	1
2790	284	"arg_2"	"decimal"	4	0	1	2
2791	285	"res_0"	"decimal"	4	0	0	0
2792	285	"arg_1"	"decimal"	4	0	1	1
2793	285	"arg_2"	"decimal"	4	0	1	2
2794	286	"res_0"	"decimal"	4	0	0	0
2795	286	"arg_1"	"decimal"	4	0	1	1
2796	286	"arg_2"	"decimal"	4	0	1	2
2797	287	"res_0"	"decimal"	4	0	0	0
2798	287	"arg_1"	"decimal"	4	0	1	1
2799	287	"arg_2"	"decimal"	4	0	1	2
2800	288	"res_0"	"decimal"	4	0	0	0
2801	288	"arg_1"	"decimal"	4	0	1	1
2802	288	"arg_2"	"decimal"	4	0	1	2
2803	289	"res_0"	"decimal"	4	0	0	0
2804	289	"arg_1"	"decimal"	4	0	1	1
2805	289	"arg_2"	"decimal"	4	0	1	2
2806	290	"res_0"	"decimal"	4	0	0	0
2807	290	"arg_1"	"decimal"	4	0	1	1
2808	290	"arg_2"	"decimal"	4	0	1	2
2809	291	"res_0"	"decimal"	4	0	0	0
2810	291	"arg_1"	"decimal"	4	0	1	1
2811	292	"res_0"	"decimal"	4	0	0	0
2812	292	"arg_1"	"decimal"	4	0	1	1
2813	292	"arg_2"	"int"	32	0	1	2
2814	293	"res_0"	"decimal"	4	0	0	0
2815	293	"arg_1"	"decimal"	4	0	1	1
2816	293	"arg_2"	"int"	32	0	1	2
2817	294	"res_0"	"decimal"	4	0	0	0
2818	294	"arg_1"	"decimal"	4	0	1	1
2819	295	"res_0"	"decimal"	4	0	0	0
2820	295	"arg_1"	"decimal"	4	0	1	1
2821	296	"res_0"	"tinyint"	8	0	0	0
2822	296	"arg_1"	"decimal"	4	0	1	1
2823	297	"res_0"	"decimal"	4	0	0	0
2824	297	"arg_1"	"decimal"	4	0	1	1
2825	297	"arg_2"	"smallint"	16	0	1	2
2826	298	"res_0"	"decimal"	4	0	0	0
2827	298	"arg_1"	"decimal"	4	0	1	1
2828	298	"arg_2"	"smallint"	16	0	1	2
2829	299	"res_0"	"month_interval"	32	0	0	0
2830	299	"arg_1"	"month_interval"	32	0	1	1
2831	299	"arg_2"	"decimal"	4	0	1	2
2832	300	"res_0"	"month_interval"	32	0	0	0
2833	300	"arg_1"	"month_interval"	32	0	1	1
2834	300	"arg_2"	"decimal"	4	0	1	2
2835	301	"res_0"	"month_interval"	32	0	0	0
2836	301	"arg_1"	"month_interval"	32	0	1	1
2837	301	"arg_2"	"decimal"	4	0	1	2
2838	302	"res_0"	"month_interval"	32	0	0	0
2839	302	"arg_1"	"month_interval"	32	0	1	1
2840	302	"arg_2"	"decimal"	4	0	1	2
2841	303	"res_0"	"sec_interval"	13	0	0	0
2842	303	"arg_1"	"sec_interval"	13	0	1	1
2843	303	"arg_2"	"decimal"	4	0	1	2
2844	304	"res_0"	"sec_interval"	13	0	0	0
2845	304	"arg_1"	"sec_interval"	13	0	1	1
2846	304	"arg_2"	"decimal"	4	0	1	2
2847	305	"res_0"	"sec_interval"	13	0	0	0
2848	305	"arg_1"	"sec_interval"	13	0	1	1
2849	305	"arg_2"	"decimal"	4	0	1	2
2850	306	"res_0"	"sec_interval"	13	0	0	0
2851	306	"arg_1"	"sec_interval"	13	0	1	1
2852	306	"arg_2"	"decimal"	4	0	1	2
2853	307	"res_0"	"decimal"	9	0	0	0
2854	307	"arg_1"	"decimal"	9	0	1	1
2855	307	"arg_2"	"decimal"	9	0	1	2
2856	308	"res_0"	"decimal"	9	0	0	0
2857	308	"arg_1"	"decimal"	9	0	1	1
2858	308	"arg_2"	"decimal"	9	0	1	2
2859	309	"res_0"	"decimal"	9	0	0	0
2860	309	"arg_1"	"decimal"	9	0	1	1
2861	309	"arg_2"	"decimal"	9	0	1	2
2862	310	"res_0"	"decimal"	9	0	0	0
2863	310	"arg_1"	"decimal"	9	0	1	1
2864	310	"arg_2"	"decimal"	9	0	1	2
2865	311	"res_0"	"decimal"	9	0	0	0
2866	311	"arg_1"	"decimal"	9	0	1	1
2867	311	"arg_2"	"decimal"	9	0	1	2
2868	312	"res_0"	"decimal"	9	0	0	0
2869	312	"arg_1"	"decimal"	9	0	1	1
2870	312	"arg_2"	"decimal"	9	0	1	2
2871	313	"res_0"	"decimal"	9	0	0	0
2872	313	"arg_1"	"decimal"	9	0	1	1
2873	313	"arg_2"	"decimal"	9	0	1	2
2874	314	"res_0"	"decimal"	9	0	0	0
2875	314	"arg_1"	"decimal"	9	0	1	1
2876	315	"res_0"	"decimal"	9	0	0	0
2877	315	"arg_1"	"decimal"	9	0	1	1
2878	315	"arg_2"	"int"	32	0	1	2
2879	316	"res_0"	"decimal"	9	0	0	0
2880	316	"arg_1"	"decimal"	9	0	1	1
2881	316	"arg_2"	"int"	32	0	1	2
2882	317	"res_0"	"decimal"	9	0	0	0
2883	317	"arg_1"	"decimal"	9	0	1	1
2884	318	"res_0"	"decimal"	9	0	0	0
2885	318	"arg_1"	"decimal"	9	0	1	1
2886	319	"res_0"	"tinyint"	8	0	0	0
2887	319	"arg_1"	"decimal"	9	0	1	1
2888	320	"res_0"	"decimal"	9	0	0	0
2889	320	"arg_1"	"decimal"	9	0	1	1
2890	320	"arg_2"	"int"	32	0	1	2
2891	321	"res_0"	"decimal"	9	0	0	0
2892	321	"arg_1"	"decimal"	9	0	1	1
2893	321	"arg_2"	"int"	32	0	1	2
2894	322	"res_0"	"month_interval"	32	0	0	0
2895	322	"arg_1"	"month_interval"	32	0	1	1
2896	322	"arg_2"	"decimal"	9	0	1	2
2897	323	"res_0"	"month_interval"	32	0	0	0
2898	323	"arg_1"	"month_interval"	32	0	1	1
2899	323	"arg_2"	"decimal"	9	0	1	2
2900	324	"res_0"	"month_interval"	32	0	0	0
2901	324	"arg_1"	"month_interval"	32	0	1	1
2902	324	"arg_2"	"decimal"	9	0	1	2
2903	325	"res_0"	"month_interval"	32	0	0	0
2904	325	"arg_1"	"month_interval"	32	0	1	1
2905	325	"arg_2"	"decimal"	9	0	1	2
2906	326	"res_0"	"sec_interval"	13	0	0	0
2907	326	"arg_1"	"sec_interval"	13	0	1	1
2908	326	"arg_2"	"decimal"	9	0	1	2
2909	327	"res_0"	"sec_interval"	13	0	0	0
2910	327	"arg_1"	"sec_interval"	13	0	1	1
2911	327	"arg_2"	"decimal"	9	0	1	2
2912	328	"res_0"	"sec_interval"	13	0	0	0
2913	328	"arg_1"	"sec_interval"	13	0	1	1
2914	328	"arg_2"	"decimal"	9	0	1	2
2915	329	"res_0"	"sec_interval"	13	0	0	0
2916	329	"arg_1"	"sec_interval"	13	0	1	1
2917	329	"arg_2"	"decimal"	9	0	1	2
2918	330	"res_0"	"decimal"	18	0	0	0
2919	330	"arg_1"	"decimal"	18	0	1	1
2920	330	"arg_2"	"decimal"	18	0	1	2
2921	331	"res_0"	"decimal"	18	0	0	0
2922	331	"arg_1"	"decimal"	18	0	1	1
2923	331	"arg_2"	"decimal"	18	0	1	2
2924	332	"res_0"	"decimal"	18	0	0	0
2925	332	"arg_1"	"decimal"	18	0	1	1
2926	332	"arg_2"	"decimal"	18	0	1	2
2927	333	"res_0"	"decimal"	18	0	0	0
2928	333	"arg_1"	"decimal"	18	0	1	1
2929	333	"arg_2"	"decimal"	18	0	1	2
2930	334	"res_0"	"decimal"	18	0	0	0
2931	334	"arg_1"	"decimal"	18	0	1	1
2932	334	"arg_2"	"decimal"	18	0	1	2
2933	335	"res_0"	"decimal"	18	0	0	0
2934	335	"arg_1"	"decimal"	18	0	1	1
2935	335	"arg_2"	"decimal"	18	0	1	2
2936	336	"res_0"	"decimal"	18	0	0	0
2937	336	"arg_1"	"decimal"	18	0	1	1
2938	336	"arg_2"	"decimal"	18	0	1	2
2939	337	"res_0"	"decimal"	18	0	0	0
2940	337	"arg_1"	"decimal"	18	0	1	1
2941	338	"res_0"	"decimal"	18	0	0	0
2942	338	"arg_1"	"decimal"	18	0	1	1
2943	338	"arg_2"	"int"	32	0	1	2
2944	339	"res_0"	"decimal"	18	0	0	0
2945	339	"arg_1"	"decimal"	18	0	1	1
2946	339	"arg_2"	"int"	32	0	1	2
2947	340	"res_0"	"decimal"	18	0	0	0
2948	340	"arg_1"	"decimal"	18	0	1	1
2949	341	"res_0"	"decimal"	18	0	0	0
2950	341	"arg_1"	"decimal"	18	0	1	1
2951	342	"res_0"	"tinyint"	8	0	0	0
2952	342	"arg_1"	"decimal"	18	0	1	1
2953	343	"res_0"	"decimal"	18	0	0	0
2954	343	"arg_1"	"decimal"	18	0	1	1
2955	343	"arg_2"	"bigint"	64	0	1	2
2956	344	"res_0"	"decimal"	18	0	0	0
2957	344	"arg_1"	"decimal"	18	0	1	1
2958	344	"arg_2"	"bigint"	64	0	1	2
2959	345	"res_0"	"month_interval"	32	0	0	0
2960	345	"arg_1"	"month_interval"	32	0	1	1
2961	345	"arg_2"	"decimal"	18	0	1	2
2962	346	"res_0"	"month_interval"	32	0	0	0
2963	346	"arg_1"	"month_interval"	32	0	1	1
2964	346	"arg_2"	"decimal"	18	0	1	2
2965	347	"res_0"	"month_interval"	32	0	0	0
2966	347	"arg_1"	"month_interval"	32	0	1	1
2967	347	"arg_2"	"decimal"	18	0	1	2
2968	348	"res_0"	"month_interval"	32	0	0	0
2969	348	"arg_1"	"month_interval"	32	0	1	1
2970	348	"arg_2"	"decimal"	18	0	1	2
2971	349	"res_0"	"sec_interval"	13	0	0	0
2972	349	"arg_1"	"sec_interval"	13	0	1	1
2973	349	"arg_2"	"decimal"	18	0	1	2
2974	350	"res_0"	"sec_interval"	13	0	0	0
2975	350	"arg_1"	"sec_interval"	13	0	1	1
2976	350	"arg_2"	"decimal"	18	0	1	2
2977	351	"res_0"	"sec_interval"	13	0	0	0
2978	351	"arg_1"	"sec_interval"	13	0	1	1
2979	351	"arg_2"	"decimal"	18	0	1	2
2980	352	"res_0"	"sec_interval"	13	0	0	0
2981	352	"arg_1"	"sec_interval"	13	0	1	1
2982	352	"arg_2"	"decimal"	18	0	1	2
2983	353	"res_0"	"decimal"	39	0	0	0
2984	353	"arg_1"	"decimal"	39	0	1	1
2985	353	"arg_2"	"decimal"	39	0	1	2
2986	354	"res_0"	"decimal"	39	0	0	0
2987	354	"arg_1"	"decimal"	39	0	1	1
2988	354	"arg_2"	"decimal"	39	0	1	2
2989	355	"res_0"	"decimal"	39	0	0	0
2990	355	"arg_1"	"decimal"	39	0	1	1
2991	355	"arg_2"	"decimal"	39	0	1	2
2992	356	"res_0"	"decimal"	39	0	0	0
2993	356	"arg_1"	"decimal"	39	0	1	1
2994	356	"arg_2"	"decimal"	39	0	1	2
2995	357	"res_0"	"decimal"	39	0	0	0
2996	357	"arg_1"	"decimal"	39	0	1	1
2997	357	"arg_2"	"decimal"	39	0	1	2
2998	358	"res_0"	"decimal"	39	0	0	0
2999	358	"arg_1"	"decimal"	39	0	1	1
3000	358	"arg_2"	"decimal"	39	0	1	2
3001	359	"res_0"	"decimal"	39	0	0	0
3002	359	"arg_1"	"decimal"	39	0	1	1
3003	359	"arg_2"	"decimal"	39	0	1	2
3004	360	"res_0"	"decimal"	39	0	0	0
3005	360	"arg_1"	"decimal"	39	0	1	1
3006	361	"res_0"	"decimal"	39	0	0	0
3007	361	"arg_1"	"decimal"	39	0	1	1
3008	361	"arg_2"	"int"	32	0	1	2
3009	362	"res_0"	"decimal"	39	0	0	0
3010	362	"arg_1"	"decimal"	39	0	1	1
3011	362	"arg_2"	"int"	32	0	1	2
3012	363	"res_0"	"decimal"	39	0	0	0
3013	363	"arg_1"	"decimal"	39	0	1	1
3014	364	"res_0"	"decimal"	39	0	0	0
3015	364	"arg_1"	"decimal"	39	0	1	1
3016	365	"res_0"	"tinyint"	8	0	0	0
3017	365	"arg_1"	"decimal"	39	0	1	1
3018	366	"res_0"	"decimal"	39	0	0	0
3019	366	"arg_1"	"decimal"	39	0	1	1
3020	366	"arg_2"	"hugeint"	128	0	1	2
3021	367	"res_0"	"decimal"	39	0	0	0
3022	367	"arg_1"	"decimal"	39	0	1	1
3023	367	"arg_2"	"hugeint"	128	0	1	2
3024	368	"res_0"	"month_interval"	32	0	0	0
3025	368	"arg_1"	"month_interval"	32	0	1	1
3026	368	"arg_2"	"decimal"	39	0	1	2
3027	369	"res_0"	"month_interval"	32	0	0	0
3028	369	"arg_1"	"month_interval"	32	0	1	1
3029	369	"arg_2"	"decimal"	39	0	1	2
3030	370	"res_0"	"month_interval"	32	0	0	0
3031	370	"arg_1"	"month_interval"	32	0	1	1
3032	370	"arg_2"	"decimal"	39	0	1	2
3033	371	"res_0"	"month_interval"	32	0	0	0
3034	371	"arg_1"	"month_interval"	32	0	1	1
3035	371	"arg_2"	"decimal"	39	0	1	2
3036	372	"res_0"	"sec_interval"	13	0	0	0
3037	372	"arg_1"	"sec_interval"	13	0	1	1
3038	372	"arg_2"	"decimal"	39	0	1	2
3039	373	"res_0"	"sec_interval"	13	0	0	0
3040	373	"arg_1"	"sec_interval"	13	0	1	1
3041	373	"arg_2"	"decimal"	39	0	1	2
3042	374	"res_0"	"sec_interval"	13	0	0	0
3043	374	"arg_1"	"sec_interval"	13	0	1	1
3044	374	"arg_2"	"decimal"	39	0	1	2
3045	375	"res_0"	"sec_interval"	13	0	0	0
3046	375	"arg_1"	"sec_interval"	13	0	1	1
3047	375	"arg_2"	"decimal"	39	0	1	2
3048	376	"res_0"	"real"	24	0	0	0
3049	376	"arg_1"	"real"	24	0	1	1
3050	376	"arg_2"	"real"	24	0	1	2
3051	377	"res_0"	"real"	24	0	0	0
3052	377	"arg_1"	"real"	24	0	1	1
3053	377	"arg_2"	"real"	24	0	1	2
3054	378	"res_0"	"real"	24	0	0	0
3055	378	"arg_1"	"real"	24	0	1	1
3056	378	"arg_2"	"real"	24	0	1	2
3057	379	"res_0"	"real"	24	0	0	0
3058	379	"arg_1"	"real"	24	0	1	1
3059	379	"arg_2"	"real"	24	0	1	2
3060	380	"res_0"	"real"	24	0	0	0
3061	380	"arg_1"	"real"	24	0	1	1
3062	381	"res_0"	"real"	24	0	0	0
3063	381	"arg_1"	"real"	24	0	1	1
3064	382	"res_0"	"tinyint"	8	0	0	0
3065	382	"arg_1"	"real"	24	0	1	1
3066	383	"res_0"	"real"	24	0	0	0
3067	383	"arg_1"	"real"	24	0	1	1
3068	383	"arg_2"	"real"	24	0	1	2
3069	384	"res_0"	"real"	24	0	0	0
3070	384	"arg_1"	"real"	24	0	1	1
3071	384	"arg_2"	"real"	24	0	1	2
3072	385	"res_0"	"month_interval"	32	0	0	0
3073	385	"arg_1"	"month_interval"	32	0	1	1
3074	385	"arg_2"	"real"	24	0	1	2
3075	386	"res_0"	"month_interval"	32	0	0	0
3076	386	"arg_1"	"month_interval"	32	0	1	1
3077	386	"arg_2"	"real"	24	0	1	2
3078	387	"res_0"	"month_interval"	32	0	0	0
3079	387	"arg_1"	"month_interval"	32	0	1	1
3080	387	"arg_2"	"real"	24	0	1	2
3081	388	"res_0"	"month_interval"	32	0	0	0
3082	388	"arg_1"	"month_interval"	32	0	1	1
3083	388	"arg_2"	"real"	24	0	1	2
3084	389	"res_0"	"sec_interval"	13	0	0	0
3085	389	"arg_1"	"sec_interval"	13	0	1	1
3086	389	"arg_2"	"real"	24	0	1	2
3087	390	"res_0"	"sec_interval"	13	0	0	0
3088	390	"arg_1"	"sec_interval"	13	0	1	1
3089	390	"arg_2"	"real"	24	0	1	2
3090	391	"res_0"	"sec_interval"	13	0	0	0
3091	391	"arg_1"	"sec_interval"	13	0	1	1
3092	391	"arg_2"	"real"	24	0	1	2
3093	392	"res_0"	"sec_interval"	13	0	0	0
3094	392	"arg_1"	"sec_interval"	13	0	1	1
3095	392	"arg_2"	"real"	24	0	1	2
3096	393	"res_0"	"double"	53	0	0	0
3097	393	"arg_1"	"double"	53	0	1	1
3098	393	"arg_2"	"double"	53	0	1	2
3099	394	"res_0"	"double"	53	0	0	0
3100	394	"arg_1"	"double"	53	0	1	1
3101	394	"arg_2"	"double"	53	0	1	2
3102	395	"res_0"	"double"	53	0	0	0
3103	395	"arg_1"	"double"	53	0	1	1
3104	395	"arg_2"	"double"	53	0	1	2
3105	396	"res_0"	"double"	53	0	0	0
3106	396	"arg_1"	"double"	53	0	1	1
3107	396	"arg_2"	"double"	53	0	1	2
3108	397	"res_0"	"double"	53	0	0	0
3109	397	"arg_1"	"double"	53	0	1	1
3110	398	"res_0"	"double"	53	0	0	0
3111	398	"arg_1"	"double"	53	0	1	1
3112	399	"res_0"	"tinyint"	8	0	0	0
3113	399	"arg_1"	"double"	53	0	1	1
3114	400	"res_0"	"double"	53	0	0	0
3115	400	"arg_1"	"double"	53	0	1	1
3116	400	"arg_2"	"double"	53	0	1	2
3117	401	"res_0"	"double"	53	0	0	0
3118	401	"arg_1"	"double"	53	0	1	1
3119	401	"arg_2"	"double"	53	0	1	2
3120	402	"res_0"	"month_interval"	32	0	0	0
3121	402	"arg_1"	"month_interval"	32	0	1	1
3122	402	"arg_2"	"double"	53	0	1	2
3123	403	"res_0"	"month_interval"	32	0	0	0
3124	403	"arg_1"	"month_interval"	32	0	1	1
3125	403	"arg_2"	"double"	53	0	1	2
3126	404	"res_0"	"month_interval"	32	0	0	0
3127	404	"arg_1"	"month_interval"	32	0	1	1
3128	404	"arg_2"	"double"	53	0	1	2
3129	405	"res_0"	"month_interval"	32	0	0	0
3130	405	"arg_1"	"month_interval"	32	0	1	1
3131	405	"arg_2"	"double"	53	0	1	2
3132	406	"res_0"	"sec_interval"	13	0	0	0
3133	406	"arg_1"	"sec_interval"	13	0	1	1
3134	406	"arg_2"	"double"	53	0	1	2
3135	407	"res_0"	"sec_interval"	13	0	0	0
3136	407	"arg_1"	"sec_interval"	13	0	1	1
3137	407	"arg_2"	"double"	53	0	1	2
3138	408	"res_0"	"sec_interval"	13	0	0	0
3139	408	"arg_1"	"sec_interval"	13	0	1	1
3140	408	"arg_2"	"double"	53	0	1	2
3141	409	"res_0"	"sec_interval"	13	0	0	0
3142	409	"arg_1"	"sec_interval"	13	0	1	1
3143	409	"arg_2"	"double"	53	0	1	2
3144	410	"res_0"	"month_interval"	32	0	0	0
3145	410	"arg_1"	"month_interval"	32	0	1	1
3146	410	"arg_2"	"month_interval"	32	0	1	2
3147	411	"res_0"	"month_interval"	32	0	0	0
3148	411	"arg_1"	"month_interval"	32	0	1	1
3149	411	"arg_2"	"month_interval"	32	0	1	2
3150	412	"res_0"	"month_interval"	32	0	0	0
3151	412	"arg_1"	"month_interval"	32	0	1	1
3152	412	"arg_2"	"month_interval"	32	0	1	2
3153	413	"res_0"	"month_interval"	32	0	0	0
3154	413	"arg_1"	"month_interval"	32	0	1	1
3155	413	"arg_2"	"month_interval"	32	0	1	2
3156	414	"res_0"	"month_interval"	32	0	0	0
3157	414	"arg_1"	"month_interval"	32	0	1	1
3158	415	"res_0"	"month_interval"	32	0	0	0
3159	415	"arg_1"	"month_interval"	32	0	1	1
3160	416	"res_0"	"tinyint"	8	0	0	0
3161	416	"arg_1"	"month_interval"	32	0	1	1
3162	417	"res_0"	"month_interval"	32	0	0	0
3163	417	"arg_1"	"month_interval"	32	0	1	1
3164	417	"arg_2"	"int"	32	0	1	2
3165	418	"res_0"	"month_interval"	32	0	0	0
3166	418	"arg_1"	"month_interval"	32	0	1	1
3167	418	"arg_2"	"int"	32	0	1	2
3168	419	"res_0"	"sec_interval"	13	0	0	0
3169	419	"arg_1"	"sec_interval"	13	0	1	1
3170	419	"arg_2"	"sec_interval"	13	0	1	2
3171	420	"res_0"	"sec_interval"	13	0	0	0
3172	420	"arg_1"	"sec_interval"	13	0	1	1
3173	420	"arg_2"	"sec_interval"	13	0	1	2
3174	421	"res_0"	"sec_interval"	13	0	0	0
3175	421	"arg_1"	"sec_interval"	13	0	1	1
3176	421	"arg_2"	"sec_interval"	13	0	1	2
3177	422	"res_0"	"sec_interval"	13	0	0	0
3178	422	"arg_1"	"sec_interval"	13	0	1	1
3179	422	"arg_2"	"sec_interval"	13	0	1	2
3180	423	"res_0"	"sec_interval"	13	0	0	0
3181	423	"arg_1"	"sec_interval"	13	0	1	1
3182	424	"res_0"	"sec_interval"	13	0	0	0
3183	424	"arg_1"	"sec_interval"	13	0	1	1
3184	425	"res_0"	"tinyint"	8	0	0	0
3185	425	"arg_1"	"sec_interval"	13	0	1	1
3186	426	"res_0"	"sec_interval"	13	0	0	0
3187	426	"arg_1"	"sec_interval"	13	0	1	1
3188	426	"arg_2"	"bigint"	64	0	1	2
3189	427	"res_0"	"sec_interval"	13	0	0	0
3190	427	"arg_1"	"sec_interval"	13	0	1	1
3191	427	"arg_2"	"bigint"	64	0	1	2
3192	428	"res_0"	"decimal"	4	0	0	0
3193	428	"arg_1"	"decimal"	4	0	1	1
3194	428	"arg_2"	"tinyint"	8	0	1	2
3195	429	"res_0"	"decimal"	4	0	0	0
3196	429	"arg_1"	"tinyint"	8	0	1	1
3197	429	"arg_2"	"decimal"	4	0	1	2
3198	430	"res_0"	"decimal"	4	0	0	0
3199	430	"arg_1"	"decimal"	4	0	1	1
3200	430	"arg_2"	"decimal"	2	0	1	2
3201	431	"res_0"	"decimal"	4	0	0	0
3202	431	"arg_1"	"decimal"	2	0	1	1
3203	431	"arg_2"	"decimal"	4	0	1	2
3204	432	"res_0"	"decimal"	9	0	0	0
3205	432	"arg_1"	"decimal"	9	0	1	1
3206	432	"arg_2"	"tinyint"	8	0	1	2
3207	433	"res_0"	"decimal"	9	0	0	0
3208	433	"arg_1"	"tinyint"	8	0	1	1
3209	433	"arg_2"	"decimal"	9	0	1	2
3210	434	"res_0"	"decimal"	9	0	0	0
3211	434	"arg_1"	"decimal"	9	0	1	1
3212	434	"arg_2"	"smallint"	16	0	1	2
3213	435	"res_0"	"decimal"	9	0	0	0
3214	435	"arg_1"	"smallint"	16	0	1	1
3215	435	"arg_2"	"decimal"	9	0	1	2
3216	436	"res_0"	"decimal"	9	0	0	0
3217	436	"arg_1"	"decimal"	9	0	1	1
3218	436	"arg_2"	"decimal"	2	0	1	2
3219	437	"res_0"	"decimal"	9	0	0	0
3220	437	"arg_1"	"decimal"	2	0	1	1
3221	437	"arg_2"	"decimal"	9	0	1	2
3222	438	"res_0"	"decimal"	9	0	0	0
3223	438	"arg_1"	"decimal"	9	0	1	1
3224	438	"arg_2"	"decimal"	4	0	1	2
3225	439	"res_0"	"decimal"	9	0	0	0
3226	439	"arg_1"	"decimal"	4	0	1	1
3227	439	"arg_2"	"decimal"	9	0	1	2
3228	440	"res_0"	"decimal"	18	0	0	0
3229	440	"arg_1"	"decimal"	18	0	1	1
3230	440	"arg_2"	"tinyint"	8	0	1	2
3231	441	"res_0"	"decimal"	18	0	0	0
3232	441	"arg_1"	"tinyint"	8	0	1	1
3233	441	"arg_2"	"decimal"	18	0	1	2
3234	442	"res_0"	"decimal"	18	0	0	0
3235	442	"arg_1"	"decimal"	18	0	1	1
3236	442	"arg_2"	"smallint"	16	0	1	2
3237	443	"res_0"	"decimal"	18	0	0	0
3238	443	"arg_1"	"smallint"	16	0	1	1
3239	443	"arg_2"	"decimal"	18	0	1	2
3240	444	"res_0"	"decimal"	18	0	0	0
3241	444	"arg_1"	"decimal"	18	0	1	1
3242	444	"arg_2"	"int"	32	0	1	2
3243	445	"res_0"	"decimal"	18	0	0	0
3244	445	"arg_1"	"int"	32	0	1	1
3245	445	"arg_2"	"decimal"	18	0	1	2
3246	446	"res_0"	"decimal"	18	0	0	0
3247	446	"arg_1"	"decimal"	18	0	1	1
3248	446	"arg_2"	"decimal"	2	0	1	2
3249	447	"res_0"	"decimal"	18	0	0	0
3250	447	"arg_1"	"decimal"	2	0	1	1
3251	447	"arg_2"	"decimal"	18	0	1	2
3252	448	"res_0"	"decimal"	18	0	0	0
3253	448	"arg_1"	"decimal"	18	0	1	1
3254	448	"arg_2"	"decimal"	4	0	1	2
3255	449	"res_0"	"decimal"	18	0	0	0
3256	449	"arg_1"	"decimal"	4	0	1	1
3257	449	"arg_2"	"decimal"	18	0	1	2
3258	450	"res_0"	"decimal"	18	0	0	0
3259	450	"arg_1"	"decimal"	18	0	1	1
3260	450	"arg_2"	"decimal"	9	0	1	2
3261	451	"res_0"	"decimal"	18	0	0	0
3262	451	"arg_1"	"decimal"	9	0	1	1
3263	451	"arg_2"	"decimal"	18	0	1	2
3264	452	"res_0"	"decimal"	39	0	0	0
3265	452	"arg_1"	"decimal"	39	0	1	1
3266	452	"arg_2"	"tinyint"	8	0	1	2
3267	453	"res_0"	"decimal"	39	0	0	0
3268	453	"arg_1"	"tinyint"	8	0	1	1
3269	453	"arg_2"	"decimal"	39	0	1	2
3270	454	"res_0"	"decimal"	39	0	0	0
3271	454	"arg_1"	"decimal"	39	0	1	1
3272	454	"arg_2"	"smallint"	16	0	1	2
3273	455	"res_0"	"decimal"	39	0	0	0
3274	455	"arg_1"	"smallint"	16	0	1	1
3275	455	"arg_2"	"decimal"	39	0	1	2
3276	456	"res_0"	"decimal"	39	0	0	0
3277	456	"arg_1"	"decimal"	39	0	1	1
3278	456	"arg_2"	"int"	32	0	1	2
3279	457	"res_0"	"decimal"	39	0	0	0
3280	457	"arg_1"	"int"	32	0	1	1
3281	457	"arg_2"	"decimal"	39	0	1	2
3282	458	"res_0"	"decimal"	39	0	0	0
3283	458	"arg_1"	"decimal"	39	0	1	1
3284	458	"arg_2"	"bigint"	64	0	1	2
3285	459	"res_0"	"decimal"	39	0	0	0
3286	459	"arg_1"	"bigint"	64	0	1	1
3287	459	"arg_2"	"decimal"	39	0	1	2
3288	460	"res_0"	"decimal"	39	0	0	0
3289	460	"arg_1"	"decimal"	39	0	1	1
3290	460	"arg_2"	"decimal"	2	0	1	2
3291	461	"res_0"	"decimal"	39	0	0	0
3292	461	"arg_1"	"decimal"	2	0	1	1
3293	461	"arg_2"	"decimal"	39	0	1	2
3294	462	"res_0"	"decimal"	39	0	0	0
3295	462	"arg_1"	"decimal"	39	0	1	1
3296	462	"arg_2"	"decimal"	4	0	1	2
3297	463	"res_0"	"decimal"	39	0	0	0
3298	463	"arg_1"	"decimal"	4	0	1	1
3299	463	"arg_2"	"decimal"	39	0	1	2
3300	464	"res_0"	"decimal"	39	0	0	0
3301	464	"arg_1"	"decimal"	39	0	1	1
3302	464	"arg_2"	"decimal"	9	0	1	2
3303	465	"res_0"	"decimal"	39	0	0	0
3304	465	"arg_1"	"decimal"	9	0	1	1
3305	465	"arg_2"	"decimal"	39	0	1	2
3306	466	"res_0"	"decimal"	39	0	0	0
3307	466	"arg_1"	"decimal"	39	0	1	1
3308	466	"arg_2"	"decimal"	18	0	1	2
3309	467	"res_0"	"decimal"	39	0	0	0
3310	467	"arg_1"	"decimal"	18	0	1	1
3311	467	"arg_2"	"decimal"	39	0	1	2
3312	468	"res_0"	"decimal"	2	0	0	0
3313	468	"arg_1"	"decimal"	2	0	1	1
3314	468	"arg_2"	"tinyint"	8	0	1	2
3315	469	"res_0"	"decimal"	4	0	0	0
3316	469	"arg_1"	"decimal"	4	0	1	1
3317	469	"arg_2"	"tinyint"	8	0	1	2
3318	470	"res_0"	"decimal"	9	0	0	0
3319	470	"arg_1"	"decimal"	9	0	1	1
3320	470	"arg_2"	"tinyint"	8	0	1	2
3321	471	"res_0"	"decimal"	18	0	0	0
3322	471	"arg_1"	"decimal"	18	0	1	1
3323	471	"arg_2"	"tinyint"	8	0	1	2
3324	472	"res_0"	"decimal"	39	0	0	0
3325	472	"arg_1"	"decimal"	39	0	1	1
3326	472	"arg_2"	"tinyint"	8	0	1	2
3327	473	"res_0"	"real"	24	0	0	0
3328	473	"arg_1"	"real"	24	0	1	1
3329	473	"arg_2"	"tinyint"	8	0	1	2
3330	474	"res_0"	"double"	53	0	0	0
3331	474	"arg_1"	"double"	53	0	1	1
3332	474	"arg_2"	"tinyint"	8	0	1	2
3333	475	"res_0"	"oid"	63	0	0	0
3334	475	"arg_1"	"oid"	63	0	1	1
3335	475	"arg_2"	"oid"	63	0	1	2
3336	476	"res_0"	"oid"	63	0	0	0
3337	476	"arg_1"	"tinyint"	8	0	1	1
3338	476	"arg_2"	"oid"	63	0	1	2
3339	477	"res_0"	"oid"	63	0	0	0
3340	477	"arg_1"	"smallint"	16	0	1	1
3341	477	"arg_2"	"oid"	63	0	1	2
3342	478	"res_0"	"oid"	63	0	0	0
3343	478	"arg_1"	"int"	32	0	1	1
3344	478	"arg_2"	"oid"	63	0	1	2
3345	479	"res_0"	"oid"	63	0	0	0
3346	479	"arg_1"	"bigint"	64	0	1	1
3347	479	"arg_2"	"oid"	63	0	1	2
3348	480	"res_0"	"oid"	63	0	0	0
3349	480	"arg_1"	"hugeint"	128	0	1	1
3350	480	"arg_2"	"oid"	63	0	1	2
3351	481	"res_0"	"oid"	63	0	0	0
3352	481	"arg_1"	"decimal"	2	0	1	1
3353	481	"arg_2"	"oid"	63	0	1	2
3354	482	"res_0"	"oid"	63	0	0	0
3355	482	"arg_1"	"decimal"	4	0	1	1
3356	482	"arg_2"	"oid"	63	0	1	2
3357	483	"res_0"	"oid"	63	0	0	0
3358	483	"arg_1"	"decimal"	9	0	1	1
3359	483	"arg_2"	"oid"	63	0	1	2
3360	484	"res_0"	"oid"	63	0	0	0
3361	484	"arg_1"	"decimal"	18	0	1	1
3362	484	"arg_2"	"oid"	63	0	1	2
3363	485	"res_0"	"oid"	63	0	0	0
3364	485	"arg_1"	"decimal"	39	0	1	1
3365	485	"arg_2"	"oid"	63	0	1	2
3366	486	"res_0"	"oid"	63	0	0	0
3367	486	"arg_1"	"real"	24	0	1	1
3368	486	"arg_2"	"oid"	63	0	1	2
3369	487	"res_0"	"oid"	63	0	0	0
3370	487	"arg_1"	"double"	53	0	1	1
3371	487	"arg_2"	"oid"	63	0	1	2
3372	488	"res_0"	"oid"	63	0	0	0
3373	488	"arg_1"	"month_interval"	32	0	1	1
3374	488	"arg_2"	"oid"	63	0	1	2
3375	489	"res_0"	"oid"	63	0	0	0
3376	489	"arg_1"	"sec_interval"	13	0	1	1
3377	489	"arg_2"	"oid"	63	0	1	2
3378	490	"res_0"	"oid"	63	0	0	0
3379	490	"arg_1"	"time"	7	0	1	1
3380	490	"arg_2"	"oid"	63	0	1	2
3381	491	"res_0"	"oid"	63	0	0	0
3382	491	"arg_1"	"timetz"	7	0	1	1
3383	491	"arg_2"	"oid"	63	0	1	2
3384	492	"res_0"	"oid"	63	0	0	0
3385	492	"arg_1"	"date"	0	0	1	1
3386	492	"arg_2"	"oid"	63	0	1	2
3387	493	"res_0"	"oid"	63	0	0	0
3388	493	"arg_1"	"timestamp"	7	0	1	1
3389	493	"arg_2"	"oid"	63	0	1	2
3390	494	"res_0"	"oid"	63	0	0	0
3391	494	"arg_1"	"timestamptz"	7	0	1	1
3392	494	"arg_2"	"oid"	63	0	1	2
3393	495	"res_0"	"oid"	63	0	0	0
3394	495	"arg_1"	"blob"	0	0	1	1
3395	495	"arg_2"	"oid"	63	0	1	2
3396	496	"res_0"	"tinyint"	8	0	0	0
3397	496	"arg_1"	"oid"	63	0	1	1
3398	496	"arg_2"	"tinyint"	8	0	1	2
3399	497	"res_0"	"tinyint"	8	0	0	0
3400	497	"arg_1"	"tinyint"	8	0	1	1
3401	497	"arg_2"	"tinyint"	8	0	1	2
3402	498	"res_0"	"tinyint"	8	0	0	0
3403	498	"arg_1"	"smallint"	16	0	1	1
3404	498	"arg_2"	"tinyint"	8	0	1	2
3405	499	"res_0"	"tinyint"	8	0	0	0
3406	499	"arg_1"	"int"	32	0	1	1
3407	499	"arg_2"	"tinyint"	8	0	1	2
3408	500	"res_0"	"tinyint"	8	0	0	0
3409	500	"arg_1"	"bigint"	64	0	1	1
3410	500	"arg_2"	"tinyint"	8	0	1	2
3411	501	"res_0"	"tinyint"	8	0	0	0
3412	501	"arg_1"	"hugeint"	128	0	1	1
3413	501	"arg_2"	"tinyint"	8	0	1	2
3414	502	"res_0"	"tinyint"	8	0	0	0
3415	502	"arg_1"	"decimal"	2	0	1	1
3416	502	"arg_2"	"tinyint"	8	0	1	2
3417	503	"res_0"	"tinyint"	8	0	0	0
3418	503	"arg_1"	"decimal"	4	0	1	1
3419	503	"arg_2"	"tinyint"	8	0	1	2
3420	504	"res_0"	"tinyint"	8	0	0	0
3421	504	"arg_1"	"decimal"	9	0	1	1
3422	504	"arg_2"	"tinyint"	8	0	1	2
3423	505	"res_0"	"tinyint"	8	0	0	0
3424	505	"arg_1"	"decimal"	18	0	1	1
3425	505	"arg_2"	"tinyint"	8	0	1	2
3426	506	"res_0"	"tinyint"	8	0	0	0
3427	506	"arg_1"	"decimal"	39	0	1	1
3428	506	"arg_2"	"tinyint"	8	0	1	2
3429	507	"res_0"	"tinyint"	8	0	0	0
3430	507	"arg_1"	"real"	24	0	1	1
3431	507	"arg_2"	"tinyint"	8	0	1	2
3432	508	"res_0"	"tinyint"	8	0	0	0
3433	508	"arg_1"	"double"	53	0	1	1
3434	508	"arg_2"	"tinyint"	8	0	1	2
3435	509	"res_0"	"tinyint"	8	0	0	0
3436	509	"arg_1"	"month_interval"	32	0	1	1
3437	509	"arg_2"	"tinyint"	8	0	1	2
3438	510	"res_0"	"tinyint"	8	0	0	0
3439	510	"arg_1"	"sec_interval"	13	0	1	1
3440	510	"arg_2"	"tinyint"	8	0	1	2
3441	511	"res_0"	"tinyint"	8	0	0	0
3442	511	"arg_1"	"time"	7	0	1	1
3443	511	"arg_2"	"tinyint"	8	0	1	2
3444	512	"res_0"	"tinyint"	8	0	0	0
3445	512	"arg_1"	"timetz"	7	0	1	1
3446	512	"arg_2"	"tinyint"	8	0	1	2
3447	513	"res_0"	"tinyint"	8	0	0	0
3448	513	"arg_1"	"date"	0	0	1	1
3449	513	"arg_2"	"tinyint"	8	0	1	2
3450	514	"res_0"	"tinyint"	8	0	0	0
3451	514	"arg_1"	"timestamp"	7	0	1	1
3452	514	"arg_2"	"tinyint"	8	0	1	2
3453	515	"res_0"	"tinyint"	8	0	0	0
3454	515	"arg_1"	"timestamptz"	7	0	1	1
3455	515	"arg_2"	"tinyint"	8	0	1	2
3456	516	"res_0"	"tinyint"	8	0	0	0
3457	516	"arg_1"	"blob"	0	0	1	1
3458	516	"arg_2"	"tinyint"	8	0	1	2
3459	517	"res_0"	"smallint"	16	0	0	0
3460	517	"arg_1"	"oid"	63	0	1	1
3461	517	"arg_2"	"smallint"	16	0	1	2
3462	518	"res_0"	"smallint"	16	0	0	0
3463	518	"arg_1"	"tinyint"	8	0	1	1
3464	518	"arg_2"	"smallint"	16	0	1	2
3465	519	"res_0"	"smallint"	16	0	0	0
3466	519	"arg_1"	"smallint"	16	0	1	1
3467	519	"arg_2"	"smallint"	16	0	1	2
3468	520	"res_0"	"smallint"	16	0	0	0
3469	520	"arg_1"	"int"	32	0	1	1
3470	520	"arg_2"	"smallint"	16	0	1	2
3471	521	"res_0"	"smallint"	16	0	0	0
3472	521	"arg_1"	"bigint"	64	0	1	1
3473	521	"arg_2"	"smallint"	16	0	1	2
3474	522	"res_0"	"smallint"	16	0	0	0
3475	522	"arg_1"	"hugeint"	128	0	1	1
3476	522	"arg_2"	"smallint"	16	0	1	2
3477	523	"res_0"	"smallint"	16	0	0	0
3478	523	"arg_1"	"decimal"	2	0	1	1
3479	523	"arg_2"	"smallint"	16	0	1	2
3480	524	"res_0"	"smallint"	16	0	0	0
3481	524	"arg_1"	"decimal"	4	0	1	1
3482	524	"arg_2"	"smallint"	16	0	1	2
3483	525	"res_0"	"smallint"	16	0	0	0
3484	525	"arg_1"	"decimal"	9	0	1	1
3485	525	"arg_2"	"smallint"	16	0	1	2
3486	526	"res_0"	"smallint"	16	0	0	0
3487	526	"arg_1"	"decimal"	18	0	1	1
3488	526	"arg_2"	"smallint"	16	0	1	2
3489	527	"res_0"	"smallint"	16	0	0	0
3490	527	"arg_1"	"decimal"	39	0	1	1
3491	527	"arg_2"	"smallint"	16	0	1	2
3492	528	"res_0"	"smallint"	16	0	0	0
3493	528	"arg_1"	"real"	24	0	1	1
3494	528	"arg_2"	"smallint"	16	0	1	2
3495	529	"res_0"	"smallint"	16	0	0	0
3496	529	"arg_1"	"double"	53	0	1	1
3497	529	"arg_2"	"smallint"	16	0	1	2
3498	530	"res_0"	"smallint"	16	0	0	0
3499	530	"arg_1"	"month_interval"	32	0	1	1
3500	530	"arg_2"	"smallint"	16	0	1	2
3501	531	"res_0"	"smallint"	16	0	0	0
3502	531	"arg_1"	"sec_interval"	13	0	1	1
3503	531	"arg_2"	"smallint"	16	0	1	2
3504	532	"res_0"	"smallint"	16	0	0	0
3505	532	"arg_1"	"time"	7	0	1	1
3506	532	"arg_2"	"smallint"	16	0	1	2
3507	533	"res_0"	"smallint"	16	0	0	0
3508	533	"arg_1"	"timetz"	7	0	1	1
3509	533	"arg_2"	"smallint"	16	0	1	2
3510	534	"res_0"	"smallint"	16	0	0	0
3511	534	"arg_1"	"date"	0	0	1	1
3512	534	"arg_2"	"smallint"	16	0	1	2
3513	535	"res_0"	"smallint"	16	0	0	0
3514	535	"arg_1"	"timestamp"	7	0	1	1
3515	535	"arg_2"	"smallint"	16	0	1	2
3516	536	"res_0"	"smallint"	16	0	0	0
3517	536	"arg_1"	"timestamptz"	7	0	1	1
3518	536	"arg_2"	"smallint"	16	0	1	2
3519	537	"res_0"	"smallint"	16	0	0	0
3520	537	"arg_1"	"blob"	0	0	1	1
3521	537	"arg_2"	"smallint"	16	0	1	2
3522	538	"res_0"	"int"	32	0	0	0
3523	538	"arg_1"	"oid"	63	0	1	1
3524	538	"arg_2"	"int"	32	0	1	2
3525	539	"res_0"	"int"	32	0	0	0
3526	539	"arg_1"	"tinyint"	8	0	1	1
3527	539	"arg_2"	"int"	32	0	1	2
3528	540	"res_0"	"int"	32	0	0	0
3529	540	"arg_1"	"smallint"	16	0	1	1
3530	540	"arg_2"	"int"	32	0	1	2
3531	541	"res_0"	"int"	32	0	0	0
3532	541	"arg_1"	"int"	32	0	1	1
3533	541	"arg_2"	"int"	32	0	1	2
3534	542	"res_0"	"int"	32	0	0	0
3535	542	"arg_1"	"bigint"	64	0	1	1
3536	542	"arg_2"	"int"	32	0	1	2
3537	543	"res_0"	"int"	32	0	0	0
3538	543	"arg_1"	"hugeint"	128	0	1	1
3539	543	"arg_2"	"int"	32	0	1	2
3540	544	"res_0"	"int"	32	0	0	0
3541	544	"arg_1"	"decimal"	2	0	1	1
3542	544	"arg_2"	"int"	32	0	1	2
3543	545	"res_0"	"int"	32	0	0	0
3544	545	"arg_1"	"decimal"	4	0	1	1
3545	545	"arg_2"	"int"	32	0	1	2
3546	546	"res_0"	"int"	32	0	0	0
3547	546	"arg_1"	"decimal"	9	0	1	1
3548	546	"arg_2"	"int"	32	0	1	2
3549	547	"res_0"	"int"	32	0	0	0
3550	547	"arg_1"	"decimal"	18	0	1	1
3551	547	"arg_2"	"int"	32	0	1	2
3552	548	"res_0"	"int"	32	0	0	0
3553	548	"arg_1"	"decimal"	39	0	1	1
3554	548	"arg_2"	"int"	32	0	1	2
3555	549	"res_0"	"int"	32	0	0	0
3556	549	"arg_1"	"real"	24	0	1	1
3557	549	"arg_2"	"int"	32	0	1	2
3558	550	"res_0"	"int"	32	0	0	0
3559	550	"arg_1"	"double"	53	0	1	1
3560	550	"arg_2"	"int"	32	0	1	2
3561	551	"res_0"	"int"	32	0	0	0
3562	551	"arg_1"	"month_interval"	32	0	1	1
3563	551	"arg_2"	"int"	32	0	1	2
3564	552	"res_0"	"int"	32	0	0	0
3565	552	"arg_1"	"sec_interval"	13	0	1	1
3566	552	"arg_2"	"int"	32	0	1	2
3567	553	"res_0"	"int"	32	0	0	0
3568	553	"arg_1"	"time"	7	0	1	1
3569	553	"arg_2"	"int"	32	0	1	2
3570	554	"res_0"	"int"	32	0	0	0
3571	554	"arg_1"	"timetz"	7	0	1	1
3572	554	"arg_2"	"int"	32	0	1	2
3573	555	"res_0"	"int"	32	0	0	0
3574	555	"arg_1"	"date"	0	0	1	1
3575	555	"arg_2"	"int"	32	0	1	2
3576	556	"res_0"	"int"	32	0	0	0
3577	556	"arg_1"	"timestamp"	7	0	1	1
3578	556	"arg_2"	"int"	32	0	1	2
3579	557	"res_0"	"int"	32	0	0	0
3580	557	"arg_1"	"timestamptz"	7	0	1	1
3581	557	"arg_2"	"int"	32	0	1	2
3582	558	"res_0"	"int"	32	0	0	0
3583	558	"arg_1"	"blob"	0	0	1	1
3584	558	"arg_2"	"int"	32	0	1	2
3585	559	"res_0"	"bigint"	64	0	0	0
3586	559	"arg_1"	"oid"	63	0	1	1
3587	559	"arg_2"	"bigint"	64	0	1	2
3588	560	"res_0"	"bigint"	64	0	0	0
3589	560	"arg_1"	"tinyint"	8	0	1	1
3590	560	"arg_2"	"bigint"	64	0	1	2
3591	561	"res_0"	"bigint"	64	0	0	0
3592	561	"arg_1"	"smallint"	16	0	1	1
3593	561	"arg_2"	"bigint"	64	0	1	2
3594	562	"res_0"	"bigint"	64	0	0	0
3595	562	"arg_1"	"int"	32	0	1	1
3596	562	"arg_2"	"bigint"	64	0	1	2
3597	563	"res_0"	"bigint"	64	0	0	0
3598	563	"arg_1"	"bigint"	64	0	1	1
3599	563	"arg_2"	"bigint"	64	0	1	2
3600	564	"res_0"	"bigint"	64	0	0	0
3601	564	"arg_1"	"hugeint"	128	0	1	1
3602	564	"arg_2"	"bigint"	64	0	1	2
3603	565	"res_0"	"bigint"	64	0	0	0
3604	565	"arg_1"	"decimal"	2	0	1	1
3605	565	"arg_2"	"bigint"	64	0	1	2
3606	566	"res_0"	"bigint"	64	0	0	0
3607	566	"arg_1"	"decimal"	4	0	1	1
3608	566	"arg_2"	"bigint"	64	0	1	2
3609	567	"res_0"	"bigint"	64	0	0	0
3610	567	"arg_1"	"decimal"	9	0	1	1
3611	567	"arg_2"	"bigint"	64	0	1	2
3612	568	"res_0"	"bigint"	64	0	0	0
3613	568	"arg_1"	"decimal"	18	0	1	1
3614	568	"arg_2"	"bigint"	64	0	1	2
3615	569	"res_0"	"bigint"	64	0	0	0
3616	569	"arg_1"	"decimal"	39	0	1	1
3617	569	"arg_2"	"bigint"	64	0	1	2
3618	570	"res_0"	"bigint"	64	0	0	0
3619	570	"arg_1"	"real"	24	0	1	1
3620	570	"arg_2"	"bigint"	64	0	1	2
3621	571	"res_0"	"bigint"	64	0	0	0
3622	571	"arg_1"	"double"	53	0	1	1
3623	571	"arg_2"	"bigint"	64	0	1	2
3624	572	"res_0"	"bigint"	64	0	0	0
3625	572	"arg_1"	"month_interval"	32	0	1	1
3626	572	"arg_2"	"bigint"	64	0	1	2
3627	573	"res_0"	"bigint"	64	0	0	0
3628	573	"arg_1"	"sec_interval"	13	0	1	1
3629	573	"arg_2"	"bigint"	64	0	1	2
3630	574	"res_0"	"bigint"	64	0	0	0
3631	574	"arg_1"	"time"	7	0	1	1
3632	574	"arg_2"	"bigint"	64	0	1	2
3633	575	"res_0"	"bigint"	64	0	0	0
3634	575	"arg_1"	"timetz"	7	0	1	1
3635	575	"arg_2"	"bigint"	64	0	1	2
3636	576	"res_0"	"bigint"	64	0	0	0
3637	576	"arg_1"	"date"	0	0	1	1
3638	576	"arg_2"	"bigint"	64	0	1	2
3639	577	"res_0"	"bigint"	64	0	0	0
3640	577	"arg_1"	"timestamp"	7	0	1	1
3641	577	"arg_2"	"bigint"	64	0	1	2
3642	578	"res_0"	"bigint"	64	0	0	0
3643	578	"arg_1"	"timestamptz"	7	0	1	1
3644	578	"arg_2"	"bigint"	64	0	1	2
3645	579	"res_0"	"bigint"	64	0	0	0
3646	579	"arg_1"	"blob"	0	0	1	1
3647	579	"arg_2"	"bigint"	64	0	1	2
3648	580	"res_0"	"hugeint"	128	0	0	0
3649	580	"arg_1"	"oid"	63	0	1	1
3650	580	"arg_2"	"hugeint"	128	0	1	2
3651	581	"res_0"	"hugeint"	128	0	0	0
3652	581	"arg_1"	"tinyint"	8	0	1	1
3653	581	"arg_2"	"hugeint"	128	0	1	2
3654	582	"res_0"	"hugeint"	128	0	0	0
3655	582	"arg_1"	"smallint"	16	0	1	1
3656	582	"arg_2"	"hugeint"	128	0	1	2
3657	583	"res_0"	"hugeint"	128	0	0	0
3658	583	"arg_1"	"int"	32	0	1	1
3659	583	"arg_2"	"hugeint"	128	0	1	2
3660	584	"res_0"	"hugeint"	128	0	0	0
3661	584	"arg_1"	"bigint"	64	0	1	1
3662	584	"arg_2"	"hugeint"	128	0	1	2
3663	585	"res_0"	"hugeint"	128	0	0	0
3664	585	"arg_1"	"hugeint"	128	0	1	1
3665	585	"arg_2"	"hugeint"	128	0	1	2
3666	586	"res_0"	"hugeint"	128	0	0	0
3667	586	"arg_1"	"decimal"	2	0	1	1
3668	586	"arg_2"	"hugeint"	128	0	1	2
3669	587	"res_0"	"hugeint"	128	0	0	0
3670	587	"arg_1"	"decimal"	4	0	1	1
3671	587	"arg_2"	"hugeint"	128	0	1	2
3672	588	"res_0"	"hugeint"	128	0	0	0
3673	588	"arg_1"	"decimal"	9	0	1	1
3674	588	"arg_2"	"hugeint"	128	0	1	2
3675	589	"res_0"	"hugeint"	128	0	0	0
3676	589	"arg_1"	"decimal"	18	0	1	1
3677	589	"arg_2"	"hugeint"	128	0	1	2
3678	590	"res_0"	"hugeint"	128	0	0	0
3679	590	"arg_1"	"decimal"	39	0	1	1
3680	590	"arg_2"	"hugeint"	128	0	1	2
3681	591	"res_0"	"hugeint"	128	0	0	0
3682	591	"arg_1"	"real"	24	0	1	1
3683	591	"arg_2"	"hugeint"	128	0	1	2
3684	592	"res_0"	"hugeint"	128	0	0	0
3685	592	"arg_1"	"double"	53	0	1	1
3686	592	"arg_2"	"hugeint"	128	0	1	2
3687	593	"res_0"	"hugeint"	128	0	0	0
3688	593	"arg_1"	"month_interval"	32	0	1	1
3689	593	"arg_2"	"hugeint"	128	0	1	2
3690	594	"res_0"	"hugeint"	128	0	0	0
3691	594	"arg_1"	"sec_interval"	13	0	1	1
3692	594	"arg_2"	"hugeint"	128	0	1	2
3693	595	"res_0"	"hugeint"	128	0	0	0
3694	595	"arg_1"	"time"	7	0	1	1
3695	595	"arg_2"	"hugeint"	128	0	1	2
3696	596	"res_0"	"hugeint"	128	0	0	0
3697	596	"arg_1"	"timetz"	7	0	1	1
3698	596	"arg_2"	"hugeint"	128	0	1	2
3699	597	"res_0"	"hugeint"	128	0	0	0
3700	597	"arg_1"	"date"	0	0	1	1
3701	597	"arg_2"	"hugeint"	128	0	1	2
3702	598	"res_0"	"hugeint"	128	0	0	0
3703	598	"arg_1"	"timestamp"	7	0	1	1
3704	598	"arg_2"	"hugeint"	128	0	1	2
3705	599	"res_0"	"hugeint"	128	0	0	0
3706	599	"arg_1"	"timestamptz"	7	0	1	1
3707	599	"arg_2"	"hugeint"	128	0	1	2
3708	600	"res_0"	"hugeint"	128	0	0	0
3709	600	"arg_1"	"blob"	0	0	1	1
3710	600	"arg_2"	"hugeint"	128	0	1	2
3711	601	"res_0"	"decimal"	2	0	0	0
3712	601	"arg_1"	"oid"	63	0	1	1
3713	601	"arg_2"	"decimal"	2	0	1	2
3714	602	"res_0"	"decimal"	2	0	0	0
3715	602	"arg_1"	"tinyint"	8	0	1	1
3716	602	"arg_2"	"decimal"	2	0	1	2
3717	603	"res_0"	"decimal"	2	0	0	0
3718	603	"arg_1"	"smallint"	16	0	1	1
3719	603	"arg_2"	"decimal"	2	0	1	2
3720	604	"res_0"	"decimal"	2	0	0	0
3721	604	"arg_1"	"int"	32	0	1	1
3722	604	"arg_2"	"decimal"	2	0	1	2
3723	605	"res_0"	"decimal"	2	0	0	0
3724	605	"arg_1"	"bigint"	64	0	1	1
3725	605	"arg_2"	"decimal"	2	0	1	2
3726	606	"res_0"	"decimal"	2	0	0	0
3727	606	"arg_1"	"hugeint"	128	0	1	1
3728	606	"arg_2"	"decimal"	2	0	1	2
3729	607	"res_0"	"decimal"	2	0	0	0
3730	607	"arg_1"	"decimal"	2	0	1	1
3731	607	"arg_2"	"decimal"	2	0	1	2
3732	608	"res_0"	"decimal"	2	0	0	0
3733	608	"arg_1"	"decimal"	4	0	1	1
3734	608	"arg_2"	"decimal"	2	0	1	2
3735	609	"res_0"	"decimal"	2	0	0	0
3736	609	"arg_1"	"decimal"	9	0	1	1
3737	609	"arg_2"	"decimal"	2	0	1	2
3738	610	"res_0"	"decimal"	2	0	0	0
3739	610	"arg_1"	"decimal"	18	0	1	1
3740	610	"arg_2"	"decimal"	2	0	1	2
3741	611	"res_0"	"decimal"	2	0	0	0
3742	611	"arg_1"	"decimal"	39	0	1	1
3743	611	"arg_2"	"decimal"	2	0	1	2
3744	612	"res_0"	"decimal"	2	0	0	0
3745	612	"arg_1"	"real"	24	0	1	1
3746	612	"arg_2"	"decimal"	2	0	1	2
3747	613	"res_0"	"decimal"	2	0	0	0
3748	613	"arg_1"	"double"	53	0	1	1
3749	613	"arg_2"	"decimal"	2	0	1	2
3750	614	"res_0"	"decimal"	2	0	0	0
3751	614	"arg_1"	"month_interval"	32	0	1	1
3752	614	"arg_2"	"decimal"	2	0	1	2
3753	615	"res_0"	"decimal"	2	0	0	0
3754	615	"arg_1"	"sec_interval"	13	0	1	1
3755	615	"arg_2"	"decimal"	2	0	1	2
3756	616	"res_0"	"decimal"	2	0	0	0
3757	616	"arg_1"	"time"	7	0	1	1
3758	616	"arg_2"	"decimal"	2	0	1	2
3759	617	"res_0"	"decimal"	2	0	0	0
3760	617	"arg_1"	"timetz"	7	0	1	1
3761	617	"arg_2"	"decimal"	2	0	1	2
3762	618	"res_0"	"decimal"	2	0	0	0
3763	618	"arg_1"	"date"	0	0	1	1
3764	618	"arg_2"	"decimal"	2	0	1	2
3765	619	"res_0"	"decimal"	2	0	0	0
3766	619	"arg_1"	"timestamp"	7	0	1	1
3767	619	"arg_2"	"decimal"	2	0	1	2
3768	620	"res_0"	"decimal"	2	0	0	0
3769	620	"arg_1"	"timestamptz"	7	0	1	1
3770	620	"arg_2"	"decimal"	2	0	1	2
3771	621	"res_0"	"decimal"	2	0	0	0
3772	621	"arg_1"	"blob"	0	0	1	1
3773	621	"arg_2"	"decimal"	2	0	1	2
3774	622	"res_0"	"decimal"	4	0	0	0
3775	622	"arg_1"	"oid"	63	0	1	1
3776	622	"arg_2"	"decimal"	4	0	1	2
3777	623	"res_0"	"decimal"	4	0	0	0
3778	623	"arg_1"	"tinyint"	8	0	1	1
3779	623	"arg_2"	"decimal"	4	0	1	2
3780	624	"res_0"	"decimal"	4	0	0	0
3781	624	"arg_1"	"smallint"	16	0	1	1
3782	624	"arg_2"	"decimal"	4	0	1	2
3783	625	"res_0"	"decimal"	4	0	0	0
3784	625	"arg_1"	"int"	32	0	1	1
3785	625	"arg_2"	"decimal"	4	0	1	2
3786	626	"res_0"	"decimal"	4	0	0	0
3787	626	"arg_1"	"bigint"	64	0	1	1
3788	626	"arg_2"	"decimal"	4	0	1	2
3789	627	"res_0"	"decimal"	4	0	0	0
3790	627	"arg_1"	"hugeint"	128	0	1	1
3791	627	"arg_2"	"decimal"	4	0	1	2
3792	628	"res_0"	"decimal"	4	0	0	0
3793	628	"arg_1"	"decimal"	2	0	1	1
3794	628	"arg_2"	"decimal"	4	0	1	2
3795	629	"res_0"	"decimal"	4	0	0	0
3796	629	"arg_1"	"decimal"	4	0	1	1
3797	629	"arg_2"	"decimal"	4	0	1	2
3798	630	"res_0"	"decimal"	4	0	0	0
3799	630	"arg_1"	"decimal"	9	0	1	1
3800	630	"arg_2"	"decimal"	4	0	1	2
3801	631	"res_0"	"decimal"	4	0	0	0
3802	631	"arg_1"	"decimal"	18	0	1	1
3803	631	"arg_2"	"decimal"	4	0	1	2
3804	632	"res_0"	"decimal"	4	0	0	0
3805	632	"arg_1"	"decimal"	39	0	1	1
3806	632	"arg_2"	"decimal"	4	0	1	2
3807	633	"res_0"	"decimal"	4	0	0	0
3808	633	"arg_1"	"real"	24	0	1	1
3809	633	"arg_2"	"decimal"	4	0	1	2
3810	634	"res_0"	"decimal"	4	0	0	0
3811	634	"arg_1"	"double"	53	0	1	1
3812	634	"arg_2"	"decimal"	4	0	1	2
3813	635	"res_0"	"decimal"	4	0	0	0
3814	635	"arg_1"	"month_interval"	32	0	1	1
3815	635	"arg_2"	"decimal"	4	0	1	2
3816	636	"res_0"	"decimal"	4	0	0	0
3817	636	"arg_1"	"sec_interval"	13	0	1	1
3818	636	"arg_2"	"decimal"	4	0	1	2
3819	637	"res_0"	"decimal"	4	0	0	0
3820	637	"arg_1"	"time"	7	0	1	1
3821	637	"arg_2"	"decimal"	4	0	1	2
3822	638	"res_0"	"decimal"	4	0	0	0
3823	638	"arg_1"	"timetz"	7	0	1	1
3824	638	"arg_2"	"decimal"	4	0	1	2
3825	639	"res_0"	"decimal"	4	0	0	0
3826	639	"arg_1"	"date"	0	0	1	1
3827	639	"arg_2"	"decimal"	4	0	1	2
3828	640	"res_0"	"decimal"	4	0	0	0
3829	640	"arg_1"	"timestamp"	7	0	1	1
3830	640	"arg_2"	"decimal"	4	0	1	2
3831	641	"res_0"	"decimal"	4	0	0	0
3832	641	"arg_1"	"timestamptz"	7	0	1	1
3833	641	"arg_2"	"decimal"	4	0	1	2
3834	642	"res_0"	"decimal"	4	0	0	0
3835	642	"arg_1"	"blob"	0	0	1	1
3836	642	"arg_2"	"decimal"	4	0	1	2
3837	643	"res_0"	"decimal"	9	0	0	0
3838	643	"arg_1"	"oid"	63	0	1	1
3839	643	"arg_2"	"decimal"	9	0	1	2
3840	644	"res_0"	"decimal"	9	0	0	0
3841	644	"arg_1"	"tinyint"	8	0	1	1
3842	644	"arg_2"	"decimal"	9	0	1	2
3843	645	"res_0"	"decimal"	9	0	0	0
3844	645	"arg_1"	"smallint"	16	0	1	1
3845	645	"arg_2"	"decimal"	9	0	1	2
3846	646	"res_0"	"decimal"	9	0	0	0
3847	646	"arg_1"	"int"	32	0	1	1
3848	646	"arg_2"	"decimal"	9	0	1	2
3849	647	"res_0"	"decimal"	9	0	0	0
3850	647	"arg_1"	"bigint"	64	0	1	1
3851	647	"arg_2"	"decimal"	9	0	1	2
3852	648	"res_0"	"decimal"	9	0	0	0
3853	648	"arg_1"	"hugeint"	128	0	1	1
3854	648	"arg_2"	"decimal"	9	0	1	2
3855	649	"res_0"	"decimal"	9	0	0	0
3856	649	"arg_1"	"decimal"	2	0	1	1
3857	649	"arg_2"	"decimal"	9	0	1	2
3858	650	"res_0"	"decimal"	9	0	0	0
3859	650	"arg_1"	"decimal"	4	0	1	1
3860	650	"arg_2"	"decimal"	9	0	1	2
3861	651	"res_0"	"decimal"	9	0	0	0
3862	651	"arg_1"	"decimal"	9	0	1	1
3863	651	"arg_2"	"decimal"	9	0	1	2
3864	652	"res_0"	"decimal"	9	0	0	0
3865	652	"arg_1"	"decimal"	18	0	1	1
3866	652	"arg_2"	"decimal"	9	0	1	2
3867	653	"res_0"	"decimal"	9	0	0	0
3868	653	"arg_1"	"decimal"	39	0	1	1
3869	653	"arg_2"	"decimal"	9	0	1	2
3870	654	"res_0"	"decimal"	9	0	0	0
3871	654	"arg_1"	"real"	24	0	1	1
3872	654	"arg_2"	"decimal"	9	0	1	2
3873	655	"res_0"	"decimal"	9	0	0	0
3874	655	"arg_1"	"double"	53	0	1	1
3875	655	"arg_2"	"decimal"	9	0	1	2
3876	656	"res_0"	"decimal"	9	0	0	0
3877	656	"arg_1"	"month_interval"	32	0	1	1
3878	656	"arg_2"	"decimal"	9	0	1	2
3879	657	"res_0"	"decimal"	9	0	0	0
3880	657	"arg_1"	"sec_interval"	13	0	1	1
3881	657	"arg_2"	"decimal"	9	0	1	2
3882	658	"res_0"	"decimal"	9	0	0	0
3883	658	"arg_1"	"time"	7	0	1	1
3884	658	"arg_2"	"decimal"	9	0	1	2
3885	659	"res_0"	"decimal"	9	0	0	0
3886	659	"arg_1"	"timetz"	7	0	1	1
3887	659	"arg_2"	"decimal"	9	0	1	2
3888	660	"res_0"	"decimal"	9	0	0	0
3889	660	"arg_1"	"date"	0	0	1	1
3890	660	"arg_2"	"decimal"	9	0	1	2
3891	661	"res_0"	"decimal"	9	0	0	0
3892	661	"arg_1"	"timestamp"	7	0	1	1
3893	661	"arg_2"	"decimal"	9	0	1	2
3894	662	"res_0"	"decimal"	9	0	0	0
3895	662	"arg_1"	"timestamptz"	7	0	1	1
3896	662	"arg_2"	"decimal"	9	0	1	2
3897	663	"res_0"	"decimal"	9	0	0	0
3898	663	"arg_1"	"blob"	0	0	1	1
3899	663	"arg_2"	"decimal"	9	0	1	2
3900	664	"res_0"	"decimal"	18	0	0	0
3901	664	"arg_1"	"oid"	63	0	1	1
3902	664	"arg_2"	"decimal"	18	0	1	2
3903	665	"res_0"	"decimal"	18	0	0	0
3904	665	"arg_1"	"tinyint"	8	0	1	1
3905	665	"arg_2"	"decimal"	18	0	1	2
3906	666	"res_0"	"decimal"	18	0	0	0
3907	666	"arg_1"	"smallint"	16	0	1	1
3908	666	"arg_2"	"decimal"	18	0	1	2
3909	667	"res_0"	"decimal"	18	0	0	0
3910	667	"arg_1"	"int"	32	0	1	1
3911	667	"arg_2"	"decimal"	18	0	1	2
3912	668	"res_0"	"decimal"	18	0	0	0
3913	668	"arg_1"	"bigint"	64	0	1	1
3914	668	"arg_2"	"decimal"	18	0	1	2
3915	669	"res_0"	"decimal"	18	0	0	0
3916	669	"arg_1"	"hugeint"	128	0	1	1
3917	669	"arg_2"	"decimal"	18	0	1	2
3918	670	"res_0"	"decimal"	18	0	0	0
3919	670	"arg_1"	"decimal"	2	0	1	1
3920	670	"arg_2"	"decimal"	18	0	1	2
3921	671	"res_0"	"decimal"	18	0	0	0
3922	671	"arg_1"	"decimal"	4	0	1	1
3923	671	"arg_2"	"decimal"	18	0	1	2
3924	672	"res_0"	"decimal"	18	0	0	0
3925	672	"arg_1"	"decimal"	9	0	1	1
3926	672	"arg_2"	"decimal"	18	0	1	2
3927	673	"res_0"	"decimal"	18	0	0	0
3928	673	"arg_1"	"decimal"	18	0	1	1
3929	673	"arg_2"	"decimal"	18	0	1	2
3930	674	"res_0"	"decimal"	18	0	0	0
3931	674	"arg_1"	"decimal"	39	0	1	1
3932	674	"arg_2"	"decimal"	18	0	1	2
3933	675	"res_0"	"decimal"	18	0	0	0
3934	675	"arg_1"	"real"	24	0	1	1
3935	675	"arg_2"	"decimal"	18	0	1	2
3936	676	"res_0"	"decimal"	18	0	0	0
3937	676	"arg_1"	"double"	53	0	1	1
3938	676	"arg_2"	"decimal"	18	0	1	2
3939	677	"res_0"	"decimal"	18	0	0	0
3940	677	"arg_1"	"month_interval"	32	0	1	1
3941	677	"arg_2"	"decimal"	18	0	1	2
3942	678	"res_0"	"decimal"	18	0	0	0
3943	678	"arg_1"	"sec_interval"	13	0	1	1
3944	678	"arg_2"	"decimal"	18	0	1	2
3945	679	"res_0"	"decimal"	18	0	0	0
3946	679	"arg_1"	"time"	7	0	1	1
3947	679	"arg_2"	"decimal"	18	0	1	2
3948	680	"res_0"	"decimal"	18	0	0	0
3949	680	"arg_1"	"timetz"	7	0	1	1
3950	680	"arg_2"	"decimal"	18	0	1	2
3951	681	"res_0"	"decimal"	18	0	0	0
3952	681	"arg_1"	"date"	0	0	1	1
3953	681	"arg_2"	"decimal"	18	0	1	2
3954	682	"res_0"	"decimal"	18	0	0	0
3955	682	"arg_1"	"timestamp"	7	0	1	1
3956	682	"arg_2"	"decimal"	18	0	1	2
3957	683	"res_0"	"decimal"	18	0	0	0
3958	683	"arg_1"	"timestamptz"	7	0	1	1
3959	683	"arg_2"	"decimal"	18	0	1	2
3960	684	"res_0"	"decimal"	18	0	0	0
3961	684	"arg_1"	"blob"	0	0	1	1
3962	684	"arg_2"	"decimal"	18	0	1	2
3963	685	"res_0"	"decimal"	39	0	0	0
3964	685	"arg_1"	"oid"	63	0	1	1
3965	685	"arg_2"	"decimal"	39	0	1	2
3966	686	"res_0"	"decimal"	39	0	0	0
3967	686	"arg_1"	"tinyint"	8	0	1	1
3968	686	"arg_2"	"decimal"	39	0	1	2
3969	687	"res_0"	"decimal"	39	0	0	0
3970	687	"arg_1"	"smallint"	16	0	1	1
3971	687	"arg_2"	"decimal"	39	0	1	2
3972	688	"res_0"	"decimal"	39	0	0	0
3973	688	"arg_1"	"int"	32	0	1	1
3974	688	"arg_2"	"decimal"	39	0	1	2
3975	689	"res_0"	"decimal"	39	0	0	0
3976	689	"arg_1"	"bigint"	64	0	1	1
3977	689	"arg_2"	"decimal"	39	0	1	2
3978	690	"res_0"	"decimal"	39	0	0	0
3979	690	"arg_1"	"hugeint"	128	0	1	1
3980	690	"arg_2"	"decimal"	39	0	1	2
3981	691	"res_0"	"decimal"	39	0	0	0
3982	691	"arg_1"	"decimal"	2	0	1	1
3983	691	"arg_2"	"decimal"	39	0	1	2
3984	692	"res_0"	"decimal"	39	0	0	0
3985	692	"arg_1"	"decimal"	4	0	1	1
3986	692	"arg_2"	"decimal"	39	0	1	2
3987	693	"res_0"	"decimal"	39	0	0	0
3988	693	"arg_1"	"decimal"	9	0	1	1
3989	693	"arg_2"	"decimal"	39	0	1	2
3990	694	"res_0"	"decimal"	39	0	0	0
3991	694	"arg_1"	"decimal"	18	0	1	1
3992	694	"arg_2"	"decimal"	39	0	1	2
3993	695	"res_0"	"decimal"	39	0	0	0
3994	695	"arg_1"	"decimal"	39	0	1	1
3995	695	"arg_2"	"decimal"	39	0	1	2
3996	696	"res_0"	"decimal"	39	0	0	0
3997	696	"arg_1"	"real"	24	0	1	1
3998	696	"arg_2"	"decimal"	39	0	1	2
3999	697	"res_0"	"decimal"	39	0	0	0
4000	697	"arg_1"	"double"	53	0	1	1
4001	697	"arg_2"	"decimal"	39	0	1	2
4002	698	"res_0"	"decimal"	39	0	0	0
4003	698	"arg_1"	"month_interval"	32	0	1	1
4004	698	"arg_2"	"decimal"	39	0	1	2
4005	699	"res_0"	"decimal"	39	0	0	0
4006	699	"arg_1"	"sec_interval"	13	0	1	1
4007	699	"arg_2"	"decimal"	39	0	1	2
4008	700	"res_0"	"decimal"	39	0	0	0
4009	700	"arg_1"	"time"	7	0	1	1
4010	700	"arg_2"	"decimal"	39	0	1	2
4011	701	"res_0"	"decimal"	39	0	0	0
4012	701	"arg_1"	"timetz"	7	0	1	1
4013	701	"arg_2"	"decimal"	39	0	1	2
4014	702	"res_0"	"decimal"	39	0	0	0
4015	702	"arg_1"	"date"	0	0	1	1
4016	702	"arg_2"	"decimal"	39	0	1	2
4017	703	"res_0"	"decimal"	39	0	0	0
4018	703	"arg_1"	"timestamp"	7	0	1	1
4019	703	"arg_2"	"decimal"	39	0	1	2
4020	704	"res_0"	"decimal"	39	0	0	0
4021	704	"arg_1"	"timestamptz"	7	0	1	1
4022	704	"arg_2"	"decimal"	39	0	1	2
4023	705	"res_0"	"decimal"	39	0	0	0
4024	705	"arg_1"	"blob"	0	0	1	1
4025	705	"arg_2"	"decimal"	39	0	1	2
4026	706	"res_0"	"real"	24	0	0	0
4027	706	"arg_1"	"oid"	63	0	1	1
4028	706	"arg_2"	"real"	24	0	1	2
4029	707	"res_0"	"real"	24	0	0	0
4030	707	"arg_1"	"tinyint"	8	0	1	1
4031	707	"arg_2"	"real"	24	0	1	2
4032	708	"res_0"	"real"	24	0	0	0
4033	708	"arg_1"	"smallint"	16	0	1	1
4034	708	"arg_2"	"real"	24	0	1	2
4035	709	"res_0"	"real"	24	0	0	0
4036	709	"arg_1"	"int"	32	0	1	1
4037	709	"arg_2"	"real"	24	0	1	2
4038	710	"res_0"	"real"	24	0	0	0
4039	710	"arg_1"	"bigint"	64	0	1	1
4040	710	"arg_2"	"real"	24	0	1	2
4041	711	"res_0"	"real"	24	0	0	0
4042	711	"arg_1"	"hugeint"	128	0	1	1
4043	711	"arg_2"	"real"	24	0	1	2
4044	712	"res_0"	"real"	24	0	0	0
4045	712	"arg_1"	"decimal"	2	0	1	1
4046	712	"arg_2"	"real"	24	0	1	2
4047	713	"res_0"	"real"	24	0	0	0
4048	713	"arg_1"	"decimal"	4	0	1	1
4049	713	"arg_2"	"real"	24	0	1	2
4050	714	"res_0"	"real"	24	0	0	0
4051	714	"arg_1"	"decimal"	9	0	1	1
4052	714	"arg_2"	"real"	24	0	1	2
4053	715	"res_0"	"real"	24	0	0	0
4054	715	"arg_1"	"decimal"	18	0	1	1
4055	715	"arg_2"	"real"	24	0	1	2
4056	716	"res_0"	"real"	24	0	0	0
4057	716	"arg_1"	"decimal"	39	0	1	1
4058	716	"arg_2"	"real"	24	0	1	2
4059	717	"res_0"	"real"	24	0	0	0
4060	717	"arg_1"	"real"	24	0	1	1
4061	717	"arg_2"	"real"	24	0	1	2
4062	718	"res_0"	"real"	24	0	0	0
4063	718	"arg_1"	"double"	53	0	1	1
4064	718	"arg_2"	"real"	24	0	1	2
4065	719	"res_0"	"real"	24	0	0	0
4066	719	"arg_1"	"month_interval"	32	0	1	1
4067	719	"arg_2"	"real"	24	0	1	2
4068	720	"res_0"	"real"	24	0	0	0
4069	720	"arg_1"	"sec_interval"	13	0	1	1
4070	720	"arg_2"	"real"	24	0	1	2
4071	721	"res_0"	"real"	24	0	0	0
4072	721	"arg_1"	"time"	7	0	1	1
4073	721	"arg_2"	"real"	24	0	1	2
4074	722	"res_0"	"real"	24	0	0	0
4075	722	"arg_1"	"timetz"	7	0	1	1
4076	722	"arg_2"	"real"	24	0	1	2
4077	723	"res_0"	"real"	24	0	0	0
4078	723	"arg_1"	"date"	0	0	1	1
4079	723	"arg_2"	"real"	24	0	1	2
4080	724	"res_0"	"real"	24	0	0	0
4081	724	"arg_1"	"timestamp"	7	0	1	1
4082	724	"arg_2"	"real"	24	0	1	2
4083	725	"res_0"	"real"	24	0	0	0
4084	725	"arg_1"	"timestamptz"	7	0	1	1
4085	725	"arg_2"	"real"	24	0	1	2
4086	726	"res_0"	"real"	24	0	0	0
4087	726	"arg_1"	"blob"	0	0	1	1
4088	726	"arg_2"	"real"	24	0	1	2
4089	727	"res_0"	"double"	53	0	0	0
4090	727	"arg_1"	"oid"	63	0	1	1
4091	727	"arg_2"	"double"	53	0	1	2
4092	728	"res_0"	"double"	53	0	0	0
4093	728	"arg_1"	"tinyint"	8	0	1	1
4094	728	"arg_2"	"double"	53	0	1	2
4095	729	"res_0"	"double"	53	0	0	0
4096	729	"arg_1"	"smallint"	16	0	1	1
4097	729	"arg_2"	"double"	53	0	1	2
4098	730	"res_0"	"double"	53	0	0	0
4099	730	"arg_1"	"int"	32	0	1	1
4100	730	"arg_2"	"double"	53	0	1	2
4101	731	"res_0"	"double"	53	0	0	0
4102	731	"arg_1"	"bigint"	64	0	1	1
4103	731	"arg_2"	"double"	53	0	1	2
4104	732	"res_0"	"double"	53	0	0	0
4105	732	"arg_1"	"hugeint"	128	0	1	1
4106	732	"arg_2"	"double"	53	0	1	2
4107	733	"res_0"	"double"	53	0	0	0
4108	733	"arg_1"	"decimal"	2	0	1	1
4109	733	"arg_2"	"double"	53	0	1	2
4110	734	"res_0"	"double"	53	0	0	0
4111	734	"arg_1"	"decimal"	4	0	1	1
4112	734	"arg_2"	"double"	53	0	1	2
4113	735	"res_0"	"double"	53	0	0	0
4114	735	"arg_1"	"decimal"	9	0	1	1
4115	735	"arg_2"	"double"	53	0	1	2
4116	736	"res_0"	"double"	53	0	0	0
4117	736	"arg_1"	"decimal"	18	0	1	1
4118	736	"arg_2"	"double"	53	0	1	2
4119	737	"res_0"	"double"	53	0	0	0
4120	737	"arg_1"	"decimal"	39	0	1	1
4121	737	"arg_2"	"double"	53	0	1	2
4122	738	"res_0"	"double"	53	0	0	0
4123	738	"arg_1"	"real"	24	0	1	1
4124	738	"arg_2"	"double"	53	0	1	2
4125	739	"res_0"	"double"	53	0	0	0
4126	739	"arg_1"	"double"	53	0	1	1
4127	739	"arg_2"	"double"	53	0	1	2
4128	740	"res_0"	"double"	53	0	0	0
4129	740	"arg_1"	"month_interval"	32	0	1	1
4130	740	"arg_2"	"double"	53	0	1	2
4131	741	"res_0"	"double"	53	0	0	0
4132	741	"arg_1"	"sec_interval"	13	0	1	1
4133	741	"arg_2"	"double"	53	0	1	2
4134	742	"res_0"	"double"	53	0	0	0
4135	742	"arg_1"	"time"	7	0	1	1
4136	742	"arg_2"	"double"	53	0	1	2
4137	743	"res_0"	"double"	53	0	0	0
4138	743	"arg_1"	"timetz"	7	0	1	1
4139	743	"arg_2"	"double"	53	0	1	2
4140	744	"res_0"	"double"	53	0	0	0
4141	744	"arg_1"	"date"	0	0	1	1
4142	744	"arg_2"	"double"	53	0	1	2
4143	745	"res_0"	"double"	53	0	0	0
4144	745	"arg_1"	"timestamp"	7	0	1	1
4145	745	"arg_2"	"double"	53	0	1	2
4146	746	"res_0"	"double"	53	0	0	0
4147	746	"arg_1"	"timestamptz"	7	0	1	1
4148	746	"arg_2"	"double"	53	0	1	2
4149	747	"res_0"	"double"	53	0	0	0
4150	747	"arg_1"	"blob"	0	0	1	1
4151	747	"arg_2"	"double"	53	0	1	2
4152	748	"res_0"	"month_interval"	32	0	0	0
4153	748	"arg_1"	"oid"	63	0	1	1
4154	748	"arg_2"	"month_interval"	32	0	1	2
4155	749	"res_0"	"month_interval"	32	0	0	0
4156	749	"arg_1"	"tinyint"	8	0	1	1
4157	749	"arg_2"	"month_interval"	32	0	1	2
4158	750	"res_0"	"month_interval"	32	0	0	0
4159	750	"arg_1"	"smallint"	16	0	1	1
4160	750	"arg_2"	"month_interval"	32	0	1	2
4161	751	"res_0"	"month_interval"	32	0	0	0
4162	751	"arg_1"	"int"	32	0	1	1
4163	751	"arg_2"	"month_interval"	32	0	1	2
4164	752	"res_0"	"month_interval"	32	0	0	0
4165	752	"arg_1"	"bigint"	64	0	1	1
4166	752	"arg_2"	"month_interval"	32	0	1	2
4167	753	"res_0"	"month_interval"	32	0	0	0
4168	753	"arg_1"	"hugeint"	128	0	1	1
4169	753	"arg_2"	"month_interval"	32	0	1	2
4170	754	"res_0"	"month_interval"	32	0	0	0
4171	754	"arg_1"	"decimal"	2	0	1	1
4172	754	"arg_2"	"month_interval"	32	0	1	2
4173	755	"res_0"	"month_interval"	32	0	0	0
4174	755	"arg_1"	"decimal"	4	0	1	1
4175	755	"arg_2"	"month_interval"	32	0	1	2
4176	756	"res_0"	"month_interval"	32	0	0	0
4177	756	"arg_1"	"decimal"	9	0	1	1
4178	756	"arg_2"	"month_interval"	32	0	1	2
4179	757	"res_0"	"month_interval"	32	0	0	0
4180	757	"arg_1"	"decimal"	18	0	1	1
4181	757	"arg_2"	"month_interval"	32	0	1	2
4182	758	"res_0"	"month_interval"	32	0	0	0
4183	758	"arg_1"	"decimal"	39	0	1	1
4184	758	"arg_2"	"month_interval"	32	0	1	2
4185	759	"res_0"	"month_interval"	32	0	0	0
4186	759	"arg_1"	"real"	24	0	1	1
4187	759	"arg_2"	"month_interval"	32	0	1	2
4188	760	"res_0"	"month_interval"	32	0	0	0
4189	760	"arg_1"	"double"	53	0	1	1
4190	760	"arg_2"	"month_interval"	32	0	1	2
4191	761	"res_0"	"month_interval"	32	0	0	0
4192	761	"arg_1"	"month_interval"	32	0	1	1
4193	761	"arg_2"	"month_interval"	32	0	1	2
4194	762	"res_0"	"month_interval"	32	0	0	0
4195	762	"arg_1"	"sec_interval"	13	0	1	1
4196	762	"arg_2"	"month_interval"	32	0	1	2
4197	763	"res_0"	"month_interval"	32	0	0	0
4198	763	"arg_1"	"time"	7	0	1	1
4199	763	"arg_2"	"month_interval"	32	0	1	2
4200	764	"res_0"	"month_interval"	32	0	0	0
4201	764	"arg_1"	"timetz"	7	0	1	1
4202	764	"arg_2"	"month_interval"	32	0	1	2
4203	765	"res_0"	"month_interval"	32	0	0	0
4204	765	"arg_1"	"date"	0	0	1	1
4205	765	"arg_2"	"month_interval"	32	0	1	2
4206	766	"res_0"	"month_interval"	32	0	0	0
4207	766	"arg_1"	"timestamp"	7	0	1	1
4208	766	"arg_2"	"month_interval"	32	0	1	2
4209	767	"res_0"	"month_interval"	32	0	0	0
4210	767	"arg_1"	"timestamptz"	7	0	1	1
4211	767	"arg_2"	"month_interval"	32	0	1	2
4212	768	"res_0"	"month_interval"	32	0	0	0
4213	768	"arg_1"	"blob"	0	0	1	1
4214	768	"arg_2"	"month_interval"	32	0	1	2
4215	769	"res_0"	"sec_interval"	13	0	0	0
4216	769	"arg_1"	"oid"	63	0	1	1
4217	769	"arg_2"	"sec_interval"	13	0	1	2
4218	770	"res_0"	"sec_interval"	13	0	0	0
4219	770	"arg_1"	"tinyint"	8	0	1	1
4220	770	"arg_2"	"sec_interval"	13	0	1	2
4221	771	"res_0"	"sec_interval"	13	0	0	0
4222	771	"arg_1"	"smallint"	16	0	1	1
4223	771	"arg_2"	"sec_interval"	13	0	1	2
4224	772	"res_0"	"sec_interval"	13	0	0	0
4225	772	"arg_1"	"int"	32	0	1	1
4226	772	"arg_2"	"sec_interval"	13	0	1	2
4227	773	"res_0"	"sec_interval"	13	0	0	0
4228	773	"arg_1"	"bigint"	64	0	1	1
4229	773	"arg_2"	"sec_interval"	13	0	1	2
4230	774	"res_0"	"sec_interval"	13	0	0	0
4231	774	"arg_1"	"hugeint"	128	0	1	1
4232	774	"arg_2"	"sec_interval"	13	0	1	2
4233	775	"res_0"	"sec_interval"	13	0	0	0
4234	775	"arg_1"	"decimal"	2	0	1	1
4235	775	"arg_2"	"sec_interval"	13	0	1	2
4236	776	"res_0"	"sec_interval"	13	0	0	0
4237	776	"arg_1"	"decimal"	4	0	1	1
4238	776	"arg_2"	"sec_interval"	13	0	1	2
4239	777	"res_0"	"sec_interval"	13	0	0	0
4240	777	"arg_1"	"decimal"	9	0	1	1
4241	777	"arg_2"	"sec_interval"	13	0	1	2
4242	778	"res_0"	"sec_interval"	13	0	0	0
4243	778	"arg_1"	"decimal"	18	0	1	1
4244	778	"arg_2"	"sec_interval"	13	0	1	2
4245	779	"res_0"	"sec_interval"	13	0	0	0
4246	779	"arg_1"	"decimal"	39	0	1	1
4247	779	"arg_2"	"sec_interval"	13	0	1	2
4248	780	"res_0"	"sec_interval"	13	0	0	0
4249	780	"arg_1"	"real"	24	0	1	1
4250	780	"arg_2"	"sec_interval"	13	0	1	2
4251	781	"res_0"	"sec_interval"	13	0	0	0
4252	781	"arg_1"	"double"	53	0	1	1
4253	781	"arg_2"	"sec_interval"	13	0	1	2
4254	782	"res_0"	"sec_interval"	13	0	0	0
4255	782	"arg_1"	"month_interval"	32	0	1	1
4256	782	"arg_2"	"sec_interval"	13	0	1	2
4257	783	"res_0"	"sec_interval"	13	0	0	0
4258	783	"arg_1"	"sec_interval"	13	0	1	1
4259	783	"arg_2"	"sec_interval"	13	0	1	2
4260	784	"res_0"	"sec_interval"	13	0	0	0
4261	784	"arg_1"	"time"	7	0	1	1
4262	784	"arg_2"	"sec_interval"	13	0	1	2
4263	785	"res_0"	"sec_interval"	13	0	0	0
4264	785	"arg_1"	"timetz"	7	0	1	1
4265	785	"arg_2"	"sec_interval"	13	0	1	2
4266	786	"res_0"	"sec_interval"	13	0	0	0
4267	786	"arg_1"	"date"	0	0	1	1
4268	786	"arg_2"	"sec_interval"	13	0	1	2
4269	787	"res_0"	"sec_interval"	13	0	0	0
4270	787	"arg_1"	"timestamp"	7	0	1	1
4271	787	"arg_2"	"sec_interval"	13	0	1	2
4272	788	"res_0"	"sec_interval"	13	0	0	0
4273	788	"arg_1"	"timestamptz"	7	0	1	1
4274	788	"arg_2"	"sec_interval"	13	0	1	2
4275	789	"res_0"	"sec_interval"	13	0	0	0
4276	789	"arg_1"	"blob"	0	0	1	1
4277	789	"arg_2"	"sec_interval"	13	0	1	2
4278	790	"res_0"	"time"	7	0	0	0
4279	790	"arg_1"	"oid"	63	0	1	1
4280	790	"arg_2"	"time"	7	0	1	2
4281	791	"res_0"	"time"	7	0	0	0
4282	791	"arg_1"	"tinyint"	8	0	1	1
4283	791	"arg_2"	"time"	7	0	1	2
4284	792	"res_0"	"time"	7	0	0	0
4285	792	"arg_1"	"smallint"	16	0	1	1
4286	792	"arg_2"	"time"	7	0	1	2
4287	793	"res_0"	"time"	7	0	0	0
4288	793	"arg_1"	"int"	32	0	1	1
4289	793	"arg_2"	"time"	7	0	1	2
4290	794	"res_0"	"time"	7	0	0	0
4291	794	"arg_1"	"bigint"	64	0	1	1
4292	794	"arg_2"	"time"	7	0	1	2
4293	795	"res_0"	"time"	7	0	0	0
4294	795	"arg_1"	"hugeint"	128	0	1	1
4295	795	"arg_2"	"time"	7	0	1	2
4296	796	"res_0"	"time"	7	0	0	0
4297	796	"arg_1"	"decimal"	2	0	1	1
4298	796	"arg_2"	"time"	7	0	1	2
4299	797	"res_0"	"time"	7	0	0	0
4300	797	"arg_1"	"decimal"	4	0	1	1
4301	797	"arg_2"	"time"	7	0	1	2
4302	798	"res_0"	"time"	7	0	0	0
4303	798	"arg_1"	"decimal"	9	0	1	1
4304	798	"arg_2"	"time"	7	0	1	2
4305	799	"res_0"	"time"	7	0	0	0
4306	799	"arg_1"	"decimal"	18	0	1	1
4307	799	"arg_2"	"time"	7	0	1	2
4308	800	"res_0"	"time"	7	0	0	0
4309	800	"arg_1"	"decimal"	39	0	1	1
4310	800	"arg_2"	"time"	7	0	1	2
4311	801	"res_0"	"time"	7	0	0	0
4312	801	"arg_1"	"real"	24	0	1	1
4313	801	"arg_2"	"time"	7	0	1	2
4314	802	"res_0"	"time"	7	0	0	0
4315	802	"arg_1"	"double"	53	0	1	1
4316	802	"arg_2"	"time"	7	0	1	2
4317	803	"res_0"	"time"	7	0	0	0
4318	803	"arg_1"	"month_interval"	32	0	1	1
4319	803	"arg_2"	"time"	7	0	1	2
4320	804	"res_0"	"time"	7	0	0	0
4321	804	"arg_1"	"sec_interval"	13	0	1	1
4322	804	"arg_2"	"time"	7	0	1	2
4323	805	"res_0"	"time"	7	0	0	0
4324	805	"arg_1"	"time"	7	0	1	1
4325	805	"arg_2"	"time"	7	0	1	2
4326	806	"res_0"	"time"	7	0	0	0
4327	806	"arg_1"	"timetz"	7	0	1	1
4328	806	"arg_2"	"time"	7	0	1	2
4329	807	"res_0"	"time"	7	0	0	0
4330	807	"arg_1"	"date"	0	0	1	1
4331	807	"arg_2"	"time"	7	0	1	2
4332	808	"res_0"	"time"	7	0	0	0
4333	808	"arg_1"	"timestamp"	7	0	1	1
4334	808	"arg_2"	"time"	7	0	1	2
4335	809	"res_0"	"time"	7	0	0	0
4336	809	"arg_1"	"timestamptz"	7	0	1	1
4337	809	"arg_2"	"time"	7	0	1	2
4338	810	"res_0"	"time"	7	0	0	0
4339	810	"arg_1"	"blob"	0	0	1	1
4340	810	"arg_2"	"time"	7	0	1	2
4341	811	"res_0"	"timetz"	7	0	0	0
4342	811	"arg_1"	"oid"	63	0	1	1
4343	811	"arg_2"	"timetz"	7	0	1	2
4344	812	"res_0"	"timetz"	7	0	0	0
4345	812	"arg_1"	"tinyint"	8	0	1	1
4346	812	"arg_2"	"timetz"	7	0	1	2
4347	813	"res_0"	"timetz"	7	0	0	0
4348	813	"arg_1"	"smallint"	16	0	1	1
4349	813	"arg_2"	"timetz"	7	0	1	2
4350	814	"res_0"	"timetz"	7	0	0	0
4351	814	"arg_1"	"int"	32	0	1	1
4352	814	"arg_2"	"timetz"	7	0	1	2
4353	815	"res_0"	"timetz"	7	0	0	0
4354	815	"arg_1"	"bigint"	64	0	1	1
4355	815	"arg_2"	"timetz"	7	0	1	2
4356	816	"res_0"	"timetz"	7	0	0	0
4357	816	"arg_1"	"hugeint"	128	0	1	1
4358	816	"arg_2"	"timetz"	7	0	1	2
4359	817	"res_0"	"timetz"	7	0	0	0
4360	817	"arg_1"	"decimal"	2	0	1	1
4361	817	"arg_2"	"timetz"	7	0	1	2
4362	818	"res_0"	"timetz"	7	0	0	0
4363	818	"arg_1"	"decimal"	4	0	1	1
4364	818	"arg_2"	"timetz"	7	0	1	2
4365	819	"res_0"	"timetz"	7	0	0	0
4366	819	"arg_1"	"decimal"	9	0	1	1
4367	819	"arg_2"	"timetz"	7	0	1	2
4368	820	"res_0"	"timetz"	7	0	0	0
4369	820	"arg_1"	"decimal"	18	0	1	1
4370	820	"arg_2"	"timetz"	7	0	1	2
4371	821	"res_0"	"timetz"	7	0	0	0
4372	821	"arg_1"	"decimal"	39	0	1	1
4373	821	"arg_2"	"timetz"	7	0	1	2
4374	822	"res_0"	"timetz"	7	0	0	0
4375	822	"arg_1"	"real"	24	0	1	1
4376	822	"arg_2"	"timetz"	7	0	1	2
4377	823	"res_0"	"timetz"	7	0	0	0
4378	823	"arg_1"	"double"	53	0	1	1
4379	823	"arg_2"	"timetz"	7	0	1	2
4380	824	"res_0"	"timetz"	7	0	0	0
4381	824	"arg_1"	"month_interval"	32	0	1	1
4382	824	"arg_2"	"timetz"	7	0	1	2
4383	825	"res_0"	"timetz"	7	0	0	0
4384	825	"arg_1"	"sec_interval"	13	0	1	1
4385	825	"arg_2"	"timetz"	7	0	1	2
4386	826	"res_0"	"timetz"	7	0	0	0
4387	826	"arg_1"	"time"	7	0	1	1
4388	826	"arg_2"	"timetz"	7	0	1	2
4389	827	"res_0"	"timetz"	7	0	0	0
4390	827	"arg_1"	"timetz"	7	0	1	1
4391	827	"arg_2"	"timetz"	7	0	1	2
4392	828	"res_0"	"timetz"	7	0	0	0
4393	828	"arg_1"	"date"	0	0	1	1
4394	828	"arg_2"	"timetz"	7	0	1	2
4395	829	"res_0"	"timetz"	7	0	0	0
4396	829	"arg_1"	"timestamp"	7	0	1	1
4397	829	"arg_2"	"timetz"	7	0	1	2
4398	830	"res_0"	"timetz"	7	0	0	0
4399	830	"arg_1"	"timestamptz"	7	0	1	1
4400	830	"arg_2"	"timetz"	7	0	1	2
4401	831	"res_0"	"timetz"	7	0	0	0
4402	831	"arg_1"	"blob"	0	0	1	1
4403	831	"arg_2"	"timetz"	7	0	1	2
4404	832	"res_0"	"date"	0	0	0	0
4405	832	"arg_1"	"oid"	63	0	1	1
4406	832	"arg_2"	"date"	0	0	1	2
4407	833	"res_0"	"date"	0	0	0	0
4408	833	"arg_1"	"tinyint"	8	0	1	1
4409	833	"arg_2"	"date"	0	0	1	2
4410	834	"res_0"	"date"	0	0	0	0
4411	834	"arg_1"	"smallint"	16	0	1	1
4412	834	"arg_2"	"date"	0	0	1	2
4413	835	"res_0"	"date"	0	0	0	0
4414	835	"arg_1"	"int"	32	0	1	1
4415	835	"arg_2"	"date"	0	0	1	2
4416	836	"res_0"	"date"	0	0	0	0
4417	836	"arg_1"	"bigint"	64	0	1	1
4418	836	"arg_2"	"date"	0	0	1	2
4419	837	"res_0"	"date"	0	0	0	0
4420	837	"arg_1"	"hugeint"	128	0	1	1
4421	837	"arg_2"	"date"	0	0	1	2
4422	838	"res_0"	"date"	0	0	0	0
4423	838	"arg_1"	"decimal"	2	0	1	1
4424	838	"arg_2"	"date"	0	0	1	2
4425	839	"res_0"	"date"	0	0	0	0
4426	839	"arg_1"	"decimal"	4	0	1	1
4427	839	"arg_2"	"date"	0	0	1	2
4428	840	"res_0"	"date"	0	0	0	0
4429	840	"arg_1"	"decimal"	9	0	1	1
4430	840	"arg_2"	"date"	0	0	1	2
4431	841	"res_0"	"date"	0	0	0	0
4432	841	"arg_1"	"decimal"	18	0	1	1
4433	841	"arg_2"	"date"	0	0	1	2
4434	842	"res_0"	"date"	0	0	0	0
4435	842	"arg_1"	"decimal"	39	0	1	1
4436	842	"arg_2"	"date"	0	0	1	2
4437	843	"res_0"	"date"	0	0	0	0
4438	843	"arg_1"	"real"	24	0	1	1
4439	843	"arg_2"	"date"	0	0	1	2
4440	844	"res_0"	"date"	0	0	0	0
4441	844	"arg_1"	"double"	53	0	1	1
4442	844	"arg_2"	"date"	0	0	1	2
4443	845	"res_0"	"date"	0	0	0	0
4444	845	"arg_1"	"month_interval"	32	0	1	1
4445	845	"arg_2"	"date"	0	0	1	2
4446	846	"res_0"	"date"	0	0	0	0
4447	846	"arg_1"	"sec_interval"	13	0	1	1
4448	846	"arg_2"	"date"	0	0	1	2
4449	847	"res_0"	"date"	0	0	0	0
4450	847	"arg_1"	"time"	7	0	1	1
4451	847	"arg_2"	"date"	0	0	1	2
4452	848	"res_0"	"date"	0	0	0	0
4453	848	"arg_1"	"timetz"	7	0	1	1
4454	848	"arg_2"	"date"	0	0	1	2
4455	849	"res_0"	"date"	0	0	0	0
4456	849	"arg_1"	"date"	0	0	1	1
4457	849	"arg_2"	"date"	0	0	1	2
4458	850	"res_0"	"date"	0	0	0	0
4459	850	"arg_1"	"timestamp"	7	0	1	1
4460	850	"arg_2"	"date"	0	0	1	2
4461	851	"res_0"	"date"	0	0	0	0
4462	851	"arg_1"	"timestamptz"	7	0	1	1
4463	851	"arg_2"	"date"	0	0	1	2
4464	852	"res_0"	"date"	0	0	0	0
4465	852	"arg_1"	"blob"	0	0	1	1
4466	852	"arg_2"	"date"	0	0	1	2
4467	853	"res_0"	"timestamp"	7	0	0	0
4468	853	"arg_1"	"oid"	63	0	1	1
4469	853	"arg_2"	"timestamp"	7	0	1	2
4470	854	"res_0"	"timestamp"	7	0	0	0
4471	854	"arg_1"	"tinyint"	8	0	1	1
4472	854	"arg_2"	"timestamp"	7	0	1	2
4473	855	"res_0"	"timestamp"	7	0	0	0
4474	855	"arg_1"	"smallint"	16	0	1	1
4475	855	"arg_2"	"timestamp"	7	0	1	2
4476	856	"res_0"	"timestamp"	7	0	0	0
4477	856	"arg_1"	"int"	32	0	1	1
4478	856	"arg_2"	"timestamp"	7	0	1	2
4479	857	"res_0"	"timestamp"	7	0	0	0
4480	857	"arg_1"	"bigint"	64	0	1	1
4481	857	"arg_2"	"timestamp"	7	0	1	2
4482	858	"res_0"	"timestamp"	7	0	0	0
4483	858	"arg_1"	"hugeint"	128	0	1	1
4484	858	"arg_2"	"timestamp"	7	0	1	2
4485	859	"res_0"	"timestamp"	7	0	0	0
4486	859	"arg_1"	"decimal"	2	0	1	1
4487	859	"arg_2"	"timestamp"	7	0	1	2
4488	860	"res_0"	"timestamp"	7	0	0	0
4489	860	"arg_1"	"decimal"	4	0	1	1
4490	860	"arg_2"	"timestamp"	7	0	1	2
4491	861	"res_0"	"timestamp"	7	0	0	0
4492	861	"arg_1"	"decimal"	9	0	1	1
4493	861	"arg_2"	"timestamp"	7	0	1	2
4494	862	"res_0"	"timestamp"	7	0	0	0
4495	862	"arg_1"	"decimal"	18	0	1	1
4496	862	"arg_2"	"timestamp"	7	0	1	2
4497	863	"res_0"	"timestamp"	7	0	0	0
4498	863	"arg_1"	"decimal"	39	0	1	1
4499	863	"arg_2"	"timestamp"	7	0	1	2
4500	864	"res_0"	"timestamp"	7	0	0	0
4501	864	"arg_1"	"real"	24	0	1	1
4502	864	"arg_2"	"timestamp"	7	0	1	2
4503	865	"res_0"	"timestamp"	7	0	0	0
4504	865	"arg_1"	"double"	53	0	1	1
4505	865	"arg_2"	"timestamp"	7	0	1	2
4506	866	"res_0"	"timestamp"	7	0	0	0
4507	866	"arg_1"	"month_interval"	32	0	1	1
4508	866	"arg_2"	"timestamp"	7	0	1	2
4509	867	"res_0"	"timestamp"	7	0	0	0
4510	867	"arg_1"	"sec_interval"	13	0	1	1
4511	867	"arg_2"	"timestamp"	7	0	1	2
4512	868	"res_0"	"timestamp"	7	0	0	0
4513	868	"arg_1"	"time"	7	0	1	1
4514	868	"arg_2"	"timestamp"	7	0	1	2
4515	869	"res_0"	"timestamp"	7	0	0	0
4516	869	"arg_1"	"timetz"	7	0	1	1
4517	869	"arg_2"	"timestamp"	7	0	1	2
4518	870	"res_0"	"timestamp"	7	0	0	0
4519	870	"arg_1"	"date"	0	0	1	1
4520	870	"arg_2"	"timestamp"	7	0	1	2
4521	871	"res_0"	"timestamp"	7	0	0	0
4522	871	"arg_1"	"timestamp"	7	0	1	1
4523	871	"arg_2"	"timestamp"	7	0	1	2
4524	872	"res_0"	"timestamp"	7	0	0	0
4525	872	"arg_1"	"timestamptz"	7	0	1	1
4526	872	"arg_2"	"timestamp"	7	0	1	2
4527	873	"res_0"	"timestamp"	7	0	0	0
4528	873	"arg_1"	"blob"	0	0	1	1
4529	873	"arg_2"	"timestamp"	7	0	1	2
4530	874	"res_0"	"timestamptz"	7	0	0	0
4531	874	"arg_1"	"oid"	63	0	1	1
4532	874	"arg_2"	"timestamptz"	7	0	1	2
4533	875	"res_0"	"timestamptz"	7	0	0	0
4534	875	"arg_1"	"tinyint"	8	0	1	1
4535	875	"arg_2"	"timestamptz"	7	0	1	2
4536	876	"res_0"	"timestamptz"	7	0	0	0
4537	876	"arg_1"	"smallint"	16	0	1	1
4538	876	"arg_2"	"timestamptz"	7	0	1	2
4539	877	"res_0"	"timestamptz"	7	0	0	0
4540	877	"arg_1"	"int"	32	0	1	1
4541	877	"arg_2"	"timestamptz"	7	0	1	2
4542	878	"res_0"	"timestamptz"	7	0	0	0
4543	878	"arg_1"	"bigint"	64	0	1	1
4544	878	"arg_2"	"timestamptz"	7	0	1	2
4545	879	"res_0"	"timestamptz"	7	0	0	0
4546	879	"arg_1"	"hugeint"	128	0	1	1
4547	879	"arg_2"	"timestamptz"	7	0	1	2
4548	880	"res_0"	"timestamptz"	7	0	0	0
4549	880	"arg_1"	"decimal"	2	0	1	1
4550	880	"arg_2"	"timestamptz"	7	0	1	2
4551	881	"res_0"	"timestamptz"	7	0	0	0
4552	881	"arg_1"	"decimal"	4	0	1	1
4553	881	"arg_2"	"timestamptz"	7	0	1	2
4554	882	"res_0"	"timestamptz"	7	0	0	0
4555	882	"arg_1"	"decimal"	9	0	1	1
4556	882	"arg_2"	"timestamptz"	7	0	1	2
4557	883	"res_0"	"timestamptz"	7	0	0	0
4558	883	"arg_1"	"decimal"	18	0	1	1
4559	883	"arg_2"	"timestamptz"	7	0	1	2
4560	884	"res_0"	"timestamptz"	7	0	0	0
4561	884	"arg_1"	"decimal"	39	0	1	1
4562	884	"arg_2"	"timestamptz"	7	0	1	2
4563	885	"res_0"	"timestamptz"	7	0	0	0
4564	885	"arg_1"	"real"	24	0	1	1
4565	885	"arg_2"	"timestamptz"	7	0	1	2
4566	886	"res_0"	"timestamptz"	7	0	0	0
4567	886	"arg_1"	"double"	53	0	1	1
4568	886	"arg_2"	"timestamptz"	7	0	1	2
4569	887	"res_0"	"timestamptz"	7	0	0	0
4570	887	"arg_1"	"month_interval"	32	0	1	1
4571	887	"arg_2"	"timestamptz"	7	0	1	2
4572	888	"res_0"	"timestamptz"	7	0	0	0
4573	888	"arg_1"	"sec_interval"	13	0	1	1
4574	888	"arg_2"	"timestamptz"	7	0	1	2
4575	889	"res_0"	"timestamptz"	7	0	0	0
4576	889	"arg_1"	"time"	7	0	1	1
4577	889	"arg_2"	"timestamptz"	7	0	1	2
4578	890	"res_0"	"timestamptz"	7	0	0	0
4579	890	"arg_1"	"timetz"	7	0	1	1
4580	890	"arg_2"	"timestamptz"	7	0	1	2
4581	891	"res_0"	"timestamptz"	7	0	0	0
4582	891	"arg_1"	"date"	0	0	1	1
4583	891	"arg_2"	"timestamptz"	7	0	1	2
4584	892	"res_0"	"timestamptz"	7	0	0	0
4585	892	"arg_1"	"timestamp"	7	0	1	1
4586	892	"arg_2"	"timestamptz"	7	0	1	2
4587	893	"res_0"	"timestamptz"	7	0	0	0
4588	893	"arg_1"	"timestamptz"	7	0	1	1
4589	893	"arg_2"	"timestamptz"	7	0	1	2
4590	894	"res_0"	"timestamptz"	7	0	0	0
4591	894	"arg_1"	"blob"	0	0	1	1
4592	894	"arg_2"	"timestamptz"	7	0	1	2
4593	895	"res_0"	"blob"	0	0	0	0
4594	895	"arg_1"	"oid"	63	0	1	1
4595	895	"arg_2"	"blob"	0	0	1	2
4596	896	"res_0"	"blob"	0	0	0	0
4597	896	"arg_1"	"tinyint"	8	0	1	1
4598	896	"arg_2"	"blob"	0	0	1	2
4599	897	"res_0"	"blob"	0	0	0	0
4600	897	"arg_1"	"smallint"	16	0	1	1
4601	897	"arg_2"	"blob"	0	0	1	2
4602	898	"res_0"	"blob"	0	0	0	0
4603	898	"arg_1"	"int"	32	0	1	1
4604	898	"arg_2"	"blob"	0	0	1	2
4605	899	"res_0"	"blob"	0	0	0	0
4606	899	"arg_1"	"bigint"	64	0	1	1
4607	899	"arg_2"	"blob"	0	0	1	2
4608	900	"res_0"	"blob"	0	0	0	0
4609	900	"arg_1"	"hugeint"	128	0	1	1
4610	900	"arg_2"	"blob"	0	0	1	2
4611	901	"res_0"	"blob"	0	0	0	0
4612	901	"arg_1"	"decimal"	2	0	1	1
4613	901	"arg_2"	"blob"	0	0	1	2
4614	902	"res_0"	"blob"	0	0	0	0
4615	902	"arg_1"	"decimal"	4	0	1	1
4616	902	"arg_2"	"blob"	0	0	1	2
4617	903	"res_0"	"blob"	0	0	0	0
4618	903	"arg_1"	"decimal"	9	0	1	1
4619	903	"arg_2"	"blob"	0	0	1	2
4620	904	"res_0"	"blob"	0	0	0	0
4621	904	"arg_1"	"decimal"	18	0	1	1
4622	904	"arg_2"	"blob"	0	0	1	2
4623	905	"res_0"	"blob"	0	0	0	0
4624	905	"arg_1"	"decimal"	39	0	1	1
4625	905	"arg_2"	"blob"	0	0	1	2
4626	906	"res_0"	"blob"	0	0	0	0
4627	906	"arg_1"	"real"	24	0	1	1
4628	906	"arg_2"	"blob"	0	0	1	2
4629	907	"res_0"	"blob"	0	0	0	0
4630	907	"arg_1"	"double"	53	0	1	1
4631	907	"arg_2"	"blob"	0	0	1	2
4632	908	"res_0"	"blob"	0	0	0	0
4633	908	"arg_1"	"month_interval"	32	0	1	1
4634	908	"arg_2"	"blob"	0	0	1	2
4635	909	"res_0"	"blob"	0	0	0	0
4636	909	"arg_1"	"sec_interval"	13	0	1	1
4637	909	"arg_2"	"blob"	0	0	1	2
4638	910	"res_0"	"blob"	0	0	0	0
4639	910	"arg_1"	"time"	7	0	1	1
4640	910	"arg_2"	"blob"	0	0	1	2
4641	911	"res_0"	"blob"	0	0	0	0
4642	911	"arg_1"	"timetz"	7	0	1	1
4643	911	"arg_2"	"blob"	0	0	1	2
4644	912	"res_0"	"blob"	0	0	0	0
4645	912	"arg_1"	"date"	0	0	1	1
4646	912	"arg_2"	"blob"	0	0	1	2
4647	913	"res_0"	"blob"	0	0	0	0
4648	913	"arg_1"	"timestamp"	7	0	1	1
4649	913	"arg_2"	"blob"	0	0	1	2
4650	914	"res_0"	"blob"	0	0	0	0
4651	914	"arg_1"	"timestamptz"	7	0	1	1
4652	914	"arg_2"	"blob"	0	0	1	2
4653	915	"res_0"	"blob"	0	0	0	0
4654	915	"arg_1"	"blob"	0	0	1	1
4655	915	"arg_2"	"blob"	0	0	1	2
4656	916	"res_0"	"real"	24	0	0	0
4657	916	"arg_1"	"real"	24	0	1	1
4658	916	"arg_2"	"real"	24	0	1	2
4659	917	"res_0"	"real"	24	0	0	0
4660	917	"arg_1"	"real"	24	0	1	1
4661	918	"res_0"	"real"	24	0	0	0
4662	918	"arg_1"	"real"	24	0	1	1
4663	919	"res_0"	"real"	24	0	0	0
4664	919	"arg_1"	"real"	24	0	1	1
4665	920	"res_0"	"real"	24	0	0	0
4666	920	"arg_1"	"real"	24	0	1	1
4667	921	"res_0"	"real"	24	0	0	0
4668	921	"arg_1"	"real"	24	0	1	1
4669	922	"res_0"	"real"	24	0	0	0
4670	922	"arg_1"	"real"	24	0	1	1
4671	923	"res_0"	"real"	24	0	0	0
4672	923	"arg_1"	"real"	24	0	1	1
4673	924	"res_0"	"real"	24	0	0	0
4674	924	"arg_1"	"real"	24	0	1	1
4675	925	"res_0"	"real"	24	0	0	0
4676	925	"arg_1"	"real"	24	0	1	1
4677	926	"res_0"	"real"	24	0	0	0
4678	926	"arg_1"	"real"	24	0	1	1
4679	926	"arg_2"	"real"	24	0	1	2
4680	927	"res_0"	"real"	24	0	0	0
4681	927	"arg_1"	"real"	24	0	1	1
4682	928	"res_0"	"real"	24	0	0	0
4683	928	"arg_1"	"real"	24	0	1	1
4684	929	"res_0"	"real"	24	0	0	0
4685	929	"arg_1"	"real"	24	0	1	1
4686	930	"res_0"	"real"	24	0	0	0
4687	930	"arg_1"	"real"	24	0	1	1
4688	931	"res_0"	"real"	24	0	0	0
4689	931	"arg_1"	"real"	24	0	1	1
4690	932	"res_0"	"real"	24	0	0	0
4691	932	"arg_1"	"real"	24	0	1	1
4692	933	"res_0"	"real"	24	0	0	0
4693	933	"arg_1"	"real"	24	0	1	1
4694	934	"res_0"	"real"	24	0	0	0
4695	934	"arg_1"	"real"	24	0	1	1
4696	935	"res_0"	"double"	53	0	0	0
4697	935	"arg_1"	"double"	53	0	1	1
4698	935	"arg_2"	"double"	53	0	1	2
4699	936	"res_0"	"double"	53	0	0	0
4700	936	"arg_1"	"double"	53	0	1	1
4701	937	"res_0"	"double"	53	0	0	0
4702	937	"arg_1"	"double"	53	0	1	1
4703	938	"res_0"	"double"	53	0	0	0
4704	938	"arg_1"	"double"	53	0	1	1
4705	939	"res_0"	"double"	53	0	0	0
4706	939	"arg_1"	"double"	53	0	1	1
4707	940	"res_0"	"double"	53	0	0	0
4708	940	"arg_1"	"double"	53	0	1	1
4709	941	"res_0"	"double"	53	0	0	0
4710	941	"arg_1"	"double"	53	0	1	1
4711	942	"res_0"	"double"	53	0	0	0
4712	942	"arg_1"	"double"	53	0	1	1
4713	943	"res_0"	"double"	53	0	0	0
4714	943	"arg_1"	"double"	53	0	1	1
4715	944	"res_0"	"double"	53	0	0	0
4716	944	"arg_1"	"double"	53	0	1	1
4717	945	"res_0"	"double"	53	0	0	0
4718	945	"arg_1"	"double"	53	0	1	1
4719	945	"arg_2"	"double"	53	0	1	2
4720	946	"res_0"	"double"	53	0	0	0
4721	946	"arg_1"	"double"	53	0	1	1
4722	947	"res_0"	"double"	53	0	0	0
4723	947	"arg_1"	"double"	53	0	1	1
4724	948	"res_0"	"double"	53	0	0	0
4725	948	"arg_1"	"double"	53	0	1	1
4726	949	"res_0"	"double"	53	0	0	0
4727	949	"arg_1"	"double"	53	0	1	1
4728	950	"res_0"	"double"	53	0	0	0
4729	950	"arg_1"	"double"	53	0	1	1
4730	951	"res_0"	"double"	53	0	0	0
4731	951	"arg_1"	"double"	53	0	1	1
4732	952	"res_0"	"double"	53	0	0	0
4733	952	"arg_1"	"double"	53	0	1	1
4734	953	"res_0"	"double"	53	0	0	0
4735	953	"arg_1"	"double"	53	0	1	1
4736	954	"res_0"	"double"	53	0	0	0
4737	955	"res_0"	"int"	32	0	0	0
4738	956	"res_0"	"int"	32	0	0	0
4739	956	"arg_1"	"int"	32	0	1	1
4740	957	"res_0"	"date"	0	0	0	0
4741	958	"res_0"	"date"	0	0	0	0
4742	959	"res_0"	"timetz"	7	0	0	0
4743	960	"res_0"	"timetz"	7	0	0	0
4744	961	"res_0"	"timestamptz"	7	0	0	0
4745	962	"res_0"	"time"	7	0	0	0
4746	963	"res_0"	"timestamp"	7	0	0	0
4747	964	"res_0"	"month_interval"	32	0	0	0
4748	964	"arg_1"	"date"	0	0	1	1
4749	964	"arg_2"	"date"	0	0	1	2
4750	965	"res_0"	"sec_interval"	13	0	0	0
4751	965	"arg_1"	"timetz"	7	0	1	1
4752	965	"arg_2"	"timetz"	7	0	1	2
4753	966	"res_0"	"sec_interval"	13	0	0	0
4754	966	"arg_1"	"time"	7	0	1	1
4755	966	"arg_2"	"time"	7	0	1	2
4756	967	"res_0"	"sec_interval"	13	0	0	0
4757	967	"arg_1"	"timestamptz"	7	0	1	1
4758	967	"arg_2"	"timestamptz"	7	0	1	2
4759	968	"res_0"	"sec_interval"	13	0	0	0
4760	968	"arg_1"	"timestamp"	7	0	1	1
4761	968	"arg_2"	"timestamp"	7	0	1	2
4762	969	"res_0"	"date"	0	0	0	0
4763	969	"arg_1"	"date"	0	0	1	1
4764	969	"arg_2"	"sec_interval"	13	0	1	2
4765	970	"res_0"	"date"	0	0	0	0
4766	970	"arg_1"	"date"	0	0	1	1
4767	970	"arg_2"	"month_interval"	32	0	1	2
4768	971	"res_0"	"time"	7	0	0	0
4769	971	"arg_1"	"time"	7	0	1	1
4770	971	"arg_2"	"sec_interval"	13	0	1	2
4771	972	"res_0"	"timetz"	7	0	0	0
4772	972	"arg_1"	"timetz"	7	0	1	1
4773	972	"arg_2"	"sec_interval"	13	0	1	2
4774	973	"res_0"	"timestamp"	7	0	0	0
4775	973	"arg_1"	"timestamp"	7	0	1	1
4776	973	"arg_2"	"sec_interval"	13	0	1	2
4777	974	"res_0"	"timestamp"	7	0	0	0
4778	974	"arg_1"	"timestamp"	7	0	1	1
4779	974	"arg_2"	"month_interval"	32	0	1	2
4780	975	"res_0"	"timestamptz"	7	0	0	0
4781	975	"arg_1"	"timestamptz"	7	0	1	1
4782	975	"arg_2"	"sec_interval"	13	0	1	2
4783	976	"res_0"	"timestamptz"	7	0	0	0
4784	976	"arg_1"	"timestamptz"	7	0	1	1
4785	976	"arg_2"	"month_interval"	32	0	1	2
4786	977	"res_0"	"date"	0	0	0	0
4787	977	"arg_1"	"date"	0	0	1	1
4788	977	"arg_2"	"sec_interval"	13	0	1	2
4789	978	"res_0"	"date"	0	0	0	0
4790	978	"arg_1"	"date"	0	0	1	1
4791	978	"arg_2"	"month_interval"	32	0	1	2
4792	979	"res_0"	"timestamp"	7	0	0	0
4793	979	"arg_1"	"timestamp"	7	0	1	1
4794	979	"arg_2"	"sec_interval"	13	0	1	2
4795	980	"res_0"	"timestamp"	7	0	0	0
4796	980	"arg_1"	"timestamp"	7	0	1	1
4797	980	"arg_2"	"month_interval"	32	0	1	2
4798	981	"res_0"	"timestamptz"	7	0	0	0
4799	981	"arg_1"	"timestamptz"	7	0	1	1
4800	981	"arg_2"	"sec_interval"	13	0	1	2
4801	982	"res_0"	"timestamptz"	7	0	0	0
4802	982	"arg_1"	"timestamptz"	7	0	1	1
4803	982	"arg_2"	"month_interval"	32	0	1	2
4804	983	"res_0"	"time"	7	0	0	0
4805	983	"arg_1"	"time"	7	0	1	1
4806	983	"arg_2"	"sec_interval"	13	0	1	2
4807	984	"res_0"	"timetz"	7	0	0	0
4808	984	"arg_1"	"timetz"	7	0	1	1
4809	984	"arg_2"	"sec_interval"	13	0	1	2
4810	985	"res_0"	"sec_interval"	13	0	0	0
4811	986	"res_0"	"int"	32	0	0	0
4812	986	"arg_1"	"date"	0	0	1	1
4813	987	"res_0"	"int"	32	0	0	0
4814	987	"arg_1"	"date"	0	0	1	1
4815	988	"res_0"	"int"	32	0	0	0
4816	988	"arg_1"	"date"	0	0	1	1
4817	989	"res_0"	"int"	32	0	0	0
4818	989	"arg_1"	"time"	7	0	1	1
4819	990	"res_0"	"int"	32	0	0	0
4820	990	"arg_1"	"time"	7	0	1	1
4821	991	"res_0"	"decimal"	9	3	0	0
4822	991	"arg_1"	"time"	7	0	1	1
4823	992	"res_0"	"int"	32	0	0	0
4824	992	"arg_1"	"timetz"	7	0	1	1
4825	993	"res_0"	"int"	32	0	0	0
4826	993	"arg_1"	"timetz"	7	0	1	1
4827	994	"res_0"	"decimal"	9	3	0	0
4828	994	"arg_1"	"timetz"	7	0	1	1
4829	995	"res_0"	"int"	32	0	0	0
4830	995	"arg_1"	"timestamp"	7	0	1	1
4831	996	"res_0"	"int"	32	0	0	0
4832	996	"arg_1"	"timestamp"	7	0	1	1
4833	997	"res_0"	"int"	32	0	0	0
4834	997	"arg_1"	"timestamp"	7	0	1	1
4835	998	"res_0"	"int"	32	0	0	0
4836	998	"arg_1"	"timestamp"	7	0	1	1
4837	999	"res_0"	"int"	32	0	0	0
4838	999	"arg_1"	"timestamp"	7	0	1	1
4839	1000	"res_0"	"decimal"	9	3	0	0
4840	1000	"arg_1"	"timestamp"	7	0	1	1
4841	1001	"res_0"	"int"	32	0	0	0
4842	1001	"arg_1"	"timestamptz"	7	0	1	1
4843	1002	"res_0"	"int"	32	0	0	0
4844	1002	"arg_1"	"timestamptz"	7	0	1	1
4845	1003	"res_0"	"int"	32	0	0	0
4846	1003	"arg_1"	"timestamptz"	7	0	1	1
4847	1004	"res_0"	"int"	32	0	0	0
4848	1004	"arg_1"	"timestamptz"	7	0	1	1
4849	1005	"res_0"	"int"	32	0	0	0
4850	1005	"arg_1"	"timestamptz"	7	0	1	1
4851	1006	"res_0"	"decimal"	9	3	0	0
4852	1006	"arg_1"	"timestamptz"	7	0	1	1
4853	1007	"res_0"	"int"	32	0	0	0
4854	1007	"arg_1"	"month_interval"	32	0	1	1
4855	1008	"res_0"	"int"	32	0	0	0
4856	1008	"arg_1"	"month_interval"	32	0	1	1
4857	1009	"res_0"	"bigint"	64	0	0	0
4858	1009	"arg_1"	"sec_interval"	13	0	1	1
4859	1010	"res_0"	"int"	32	0	0	0
4860	1010	"arg_1"	"sec_interval"	13	0	1	1
4861	1011	"res_0"	"int"	32	0	0	0
4862	1011	"arg_1"	"sec_interval"	13	0	1	1
4863	1012	"res_0"	"int"	32	0	0	0
4864	1012	"arg_1"	"sec_interval"	13	0	1	1
4865	1013	"res_0"	"int"	32	0	0	0
4866	1013	"arg_1"	"date"	0	0	1	1
4867	1014	"res_0"	"int"	32	0	0	0
4868	1014	"arg_1"	"date"	0	0	1	1
4869	1015	"res_0"	"int"	32	0	0	0
4870	1015	"arg_1"	"date"	0	0	1	1
4871	1016	"res_0"	"int"	32	0	0	0
4872	1016	"arg_1"	"date"	0	0	1	1
4873	1017	"res_0"	"int"	32	0	0	0
4874	1017	"arg_1"	"date"	0	0	1	1
4875	1018	"res_0"	"bigint"	64	0	0	0
4876	1018	"arg_1"	"varchar"	0	0	1	1
4877	1018	"arg_2"	"varchar"	0	0	1	2
4878	1019	"res_0"	"bigint"	64	0	0	0
4879	1019	"arg_1"	"varchar"	0	0	1	1
4880	1019	"arg_2"	"varchar"	0	0	1	2
4881	1020	"res_0"	"bigint"	64	0	0	0
4882	1020	"arg_1"	"varchar"	0	0	1	1
4883	1020	"arg_2"	"varchar"	0	0	1	2
4884	1020	"arg_3"	"bigint"	64	0	1	3
4885	1021	"res_0"	"tinyint"	8	0	0	0
4886	1021	"arg_1"	"char"	0	0	1	1
4887	1021	"arg_2"	"boolean"	1	0	1	2
4888	1022	"res_0"	"smallint"	16	0	0	0
4889	1022	"arg_1"	"char"	0	0	1	1
4890	1022	"arg_2"	"boolean"	1	0	1	2
4891	1023	"res_0"	"int"	32	0	0	0
4892	1023	"arg_1"	"char"	0	0	1	1
4893	1023	"arg_2"	"boolean"	1	0	1	2
4894	1024	"res_0"	"char"	0	0	0	0
4895	1024	"arg_1"	"char"	0	0	1	1
4896	1025	"res_0"	"int"	32	0	0	0
4897	1025	"arg_1"	"char"	0	0	1	1
4898	1025	"arg_2"	"char"	0	0	1	2
4899	1026	"res_0"	"int"	32	0	0	0
4900	1026	"arg_1"	"char"	0	0	1	1
4901	1026	"arg_2"	"char"	0	0	1	2
4902	1026	"arg_3"	"int"	32	0	1	3
4903	1027	"res_0"	"char"	0	0	0	0
4904	1027	"arg_1"	"char"	0	0	1	1
4905	1027	"arg_2"	"char"	0	0	1	2
4906	1027	"arg_3"	"int"	32	0	1	3
4907	1028	"res_0"	"char"	0	0	0	0
4908	1028	"arg_1"	"char"	0	0	1	1
4909	1028	"arg_2"	"int"	32	0	1	2
4910	1029	"res_0"	"char"	0	0	0	0
4911	1029	"arg_1"	"char"	0	0	1	1
4912	1029	"arg_2"	"int"	32	0	1	2
4913	1029	"arg_3"	"int"	32	0	1	3
4914	1030	"res_0"	"boolean"	1	0	0	0
4915	1030	"arg_1"	"char"	0	0	1	1
4916	1030	"arg_2"	"char"	0	0	1	2
4917	1031	"res_0"	"boolean"	1	0	0	0
4918	1031	"arg_1"	"char"	0	0	1	1
4919	1031	"arg_2"	"char"	0	0	1	2
4920	1031	"arg_3"	"char"	0	0	1	3
4921	1032	"res_0"	"boolean"	1	0	0	0
4922	1032	"arg_1"	"char"	0	0	1	1
4923	1032	"arg_2"	"char"	0	0	1	2
4924	1033	"res_0"	"boolean"	1	0	0	0
4925	1033	"arg_1"	"char"	0	0	1	1
4926	1033	"arg_2"	"char"	0	0	1	2
4927	1033	"arg_3"	"char"	0	0	1	3
4928	1034	"res_0"	"boolean"	1	0	0	0
4929	1034	"arg_1"	"char"	0	0	1	1
4930	1034	"arg_2"	"char"	0	0	1	2
4931	1035	"res_0"	"boolean"	1	0	0	0
4932	1035	"arg_1"	"char"	0	0	1	1
4933	1035	"arg_2"	"char"	0	0	1	2
4934	1035	"arg_3"	"char"	0	0	1	3
4935	1036	"res_0"	"boolean"	1	0	0	0
4936	1036	"arg_1"	"char"	0	0	1	1
4937	1036	"arg_2"	"char"	0	0	1	2
4938	1037	"res_0"	"boolean"	1	0	0	0
4939	1037	"arg_1"	"char"	0	0	1	1
4940	1037	"arg_2"	"char"	0	0	1	2
4941	1037	"arg_3"	"char"	0	0	1	3
4942	1038	"res_0"	"int"	32	0	0	0
4943	1038	"arg_1"	"char"	0	0	1	1
4944	1038	"arg_2"	"char"	0	0	1	2
4945	1039	"res_0"	"char"	0	0	0	0
4946	1039	"arg_1"	"char"	0	0	1	1
4947	1039	"arg_2"	"int"	32	0	1	2
4948	1040	"res_0"	"char"	0	0	0	0
4949	1040	"arg_1"	"char"	0	0	1	1
4950	1040	"arg_2"	"char"	0	0	1	2
4951	1041	"res_0"	"int"	32	0	0	0
4952	1041	"arg_1"	"char"	0	0	1	1
4953	1042	"res_0"	"char"	0	0	0	0
4954	1042	"arg_1"	"int"	32	0	1	1
4955	1043	"res_0"	"int"	32	0	0	0
4956	1043	"arg_1"	"char"	0	0	1	1
4957	1044	"res_0"	"char"	0	0	0	0
4958	1044	"arg_1"	"char"	0	0	1	1
4959	1044	"arg_2"	"int"	32	0	1	2
4960	1045	"res_0"	"char"	0	0	0	0
4961	1045	"arg_1"	"char"	0	0	1	1
4962	1045	"arg_2"	"int"	32	0	1	2
4963	1046	"res_0"	"char"	0	0	0	0
4964	1046	"arg_1"	"char"	0	0	1	1
4965	1047	"res_0"	"char"	0	0	0	0
4966	1047	"arg_1"	"char"	0	0	1	1
4967	1048	"res_0"	"char"	0	0	0	0
4968	1048	"arg_1"	"char"	0	0	1	1
4969	1049	"res_0"	"char"	0	0	0	0
4970	1049	"arg_1"	"char"	0	0	1	1
4971	1050	"res_0"	"char"	0	0	0	0
4972	1050	"arg_1"	"char"	0	0	1	1
4973	1051	"res_0"	"char"	0	0	0	0
4974	1051	"arg_1"	"char"	0	0	1	1
4975	1051	"arg_2"	"char"	0	0	1	2
4976	1052	"res_0"	"char"	0	0	0	0
4977	1052	"arg_1"	"char"	0	0	1	1
4978	1053	"res_0"	"char"	0	0	0	0
4979	1053	"arg_1"	"char"	0	0	1	1
4980	1053	"arg_2"	"char"	0	0	1	2
4981	1054	"res_0"	"char"	0	0	0	0
4982	1054	"arg_1"	"char"	0	0	1	1
4983	1055	"res_0"	"char"	0	0	0	0
4984	1055	"arg_1"	"char"	0	0	1	1
4985	1055	"arg_2"	"char"	0	0	1	2
4986	1056	"res_0"	"char"	0	0	0	0
4987	1056	"arg_1"	"char"	0	0	1	1
4988	1056	"arg_2"	"int"	32	0	1	2
4989	1057	"res_0"	"char"	0	0	0	0
4990	1057	"arg_1"	"char"	0	0	1	1
4991	1057	"arg_2"	"int"	32	0	1	2
4992	1057	"arg_3"	"char"	0	0	1	3
4993	1058	"res_0"	"char"	0	0	0	0
4994	1058	"arg_1"	"char"	0	0	1	1
4995	1058	"arg_2"	"int"	32	0	1	2
4996	1059	"res_0"	"char"	0	0	0	0
4997	1059	"arg_1"	"char"	0	0	1	1
4998	1059	"arg_2"	"int"	32	0	1	2
4999	1059	"arg_3"	"char"	0	0	1	3
5000	1060	"res_0"	"char"	0	0	0	0
5001	1060	"arg_1"	"char"	0	0	1	1
5002	1060	"arg_2"	"int"	32	0	1	2
5003	1060	"arg_3"	"int"	32	0	1	3
5004	1060	"arg_4"	"char"	0	0	1	4
5005	1061	"res_0"	"char"	0	0	0	0
5006	1061	"arg_1"	"char"	0	0	1	1
5007	1061	"arg_2"	"char"	0	0	1	2
5008	1061	"arg_3"	"char"	0	0	1	3
5009	1062	"res_0"	"char"	0	0	0	0
5010	1062	"arg_1"	"char"	0	0	1	1
5011	1062	"arg_2"	"int"	32	0	1	2
5012	1063	"res_0"	"char"	0	0	0	0
5013	1063	"arg_1"	"int"	32	0	1	1
5014	1064	"res_0"	"int"	32	0	0	0
5015	1064	"arg_1"	"char"	0	0	1	1
5016	1065	"res_0"	"int"	32	0	0	0
5017	1065	"arg_1"	"char"	0	0	1	1
5018	1066	"res_0"	"int"	32	0	0	0
5019	1066	"arg_1"	"char"	0	0	1	1
5020	1067	"res_0"	"char"	0	0	0	0
5021	1067	"arg_1"	"char"	0	0	1	1
5022	1068	"res_0"	"int"	32	0	0	0
5023	1068	"arg_1"	"char"	0	0	1	1
5024	1068	"arg_2"	"char"	0	0	1	2
5025	1069	"res_0"	"int"	32	0	0	0
5026	1069	"arg_1"	"char"	0	0	1	1
5027	1069	"arg_2"	"char"	0	0	1	2
5028	1070	"res_0"	"int"	32	0	0	0
5029	1070	"arg_1"	"char"	0	0	1	1
5030	1070	"arg_2"	"char"	0	0	1	2
5031	1071	"res_0"	"double"	53	0	0	0
5032	1071	"arg_1"	"char"	0	0	1	1
5033	1071	"arg_2"	"char"	0	0	1	2
5034	1072	"res_0"	"char"	0	0	0	0
5035	1072	"arg_1"	"char"	0	0	1	1
5036	1073	"res_0"	"int"	32	0	0	0
5037	1073	"arg_1"	"char"	0	0	1	1
5038	1073	"arg_2"	"char"	0	0	1	2
5039	1074	"res_0"	"int"	32	0	0	0
5040	1074	"arg_1"	"char"	0	0	1	1
5041	1074	"arg_2"	"char"	0	0	1	2
5042	1074	"arg_3"	"int"	32	0	1	3
5043	1074	"arg_4"	"int"	32	0	1	4
5044	1074	"arg_5"	"int"	32	0	1	5
5045	1075	"res_0"	"tinyint"	8	0	0	0
5046	1075	"arg_1"	"varchar"	0	0	1	1
5047	1075	"arg_2"	"boolean"	1	0	1	2
5048	1076	"res_0"	"smallint"	16	0	0	0
5049	1076	"arg_1"	"varchar"	0	0	1	1
5050	1076	"arg_2"	"boolean"	1	0	1	2
5051	1077	"res_0"	"int"	32	0	0	0
5052	1077	"arg_1"	"varchar"	0	0	1	1
5053	1077	"arg_2"	"boolean"	1	0	1	2
5054	1078	"res_0"	"varchar"	0	0	0	0
5055	1078	"arg_1"	"varchar"	0	0	1	1
5056	1079	"res_0"	"int"	32	0	0	0
5057	1079	"arg_1"	"varchar"	0	0	1	1
5058	1079	"arg_2"	"varchar"	0	0	1	2
5059	1080	"res_0"	"int"	32	0	0	0
5060	1080	"arg_1"	"varchar"	0	0	1	1
5061	1080	"arg_2"	"varchar"	0	0	1	2
5062	1080	"arg_3"	"int"	32	0	1	3
5063	1081	"res_0"	"varchar"	0	0	0	0
5064	1081	"arg_1"	"varchar"	0	0	1	1
5065	1081	"arg_2"	"varchar"	0	0	1	2
5066	1081	"arg_3"	"int"	32	0	1	3
5067	1082	"res_0"	"varchar"	0	0	0	0
5068	1082	"arg_1"	"varchar"	0	0	1	1
5069	1082	"arg_2"	"int"	32	0	1	2
5070	1083	"res_0"	"varchar"	0	0	0	0
5071	1083	"arg_1"	"varchar"	0	0	1	1
5072	1083	"arg_2"	"int"	32	0	1	2
5073	1083	"arg_3"	"int"	32	0	1	3
5074	1084	"res_0"	"boolean"	1	0	0	0
5075	1084	"arg_1"	"varchar"	0	0	1	1
5076	1084	"arg_2"	"varchar"	0	0	1	2
5077	1085	"res_0"	"boolean"	1	0	0	0
5078	1085	"arg_1"	"varchar"	0	0	1	1
5079	1085	"arg_2"	"varchar"	0	0	1	2
5080	1085	"arg_3"	"varchar"	0	0	1	3
5081	1086	"res_0"	"boolean"	1	0	0	0
5082	1086	"arg_1"	"varchar"	0	0	1	1
5083	1086	"arg_2"	"varchar"	0	0	1	2
5084	1087	"res_0"	"boolean"	1	0	0	0
5085	1087	"arg_1"	"varchar"	0	0	1	1
5086	1087	"arg_2"	"varchar"	0	0	1	2
5087	1087	"arg_3"	"varchar"	0	0	1	3
5088	1088	"res_0"	"boolean"	1	0	0	0
5089	1088	"arg_1"	"varchar"	0	0	1	1
5090	1088	"arg_2"	"varchar"	0	0	1	2
5091	1089	"res_0"	"boolean"	1	0	0	0
5092	1089	"arg_1"	"varchar"	0	0	1	1
5093	1089	"arg_2"	"varchar"	0	0	1	2
5094	1089	"arg_3"	"varchar"	0	0	1	3
5095	1090	"res_0"	"boolean"	1	0	0	0
5096	1090	"arg_1"	"varchar"	0	0	1	1
5097	1090	"arg_2"	"varchar"	0	0	1	2
5098	1091	"res_0"	"boolean"	1	0	0	0
5099	1091	"arg_1"	"varchar"	0	0	1	1
5100	1091	"arg_2"	"varchar"	0	0	1	2
5101	1091	"arg_3"	"varchar"	0	0	1	3
5102	1092	"res_0"	"int"	32	0	0	0
5103	1092	"arg_1"	"varchar"	0	0	1	1
5104	1092	"arg_2"	"varchar"	0	0	1	2
5105	1093	"res_0"	"varchar"	0	0	0	0
5106	1093	"arg_1"	"varchar"	0	0	1	1
5107	1093	"arg_2"	"int"	32	0	1	2
5108	1094	"res_0"	"varchar"	0	0	0	0
5109	1094	"arg_1"	"varchar"	0	0	1	1
5110	1094	"arg_2"	"varchar"	0	0	1	2
5111	1095	"res_0"	"int"	32	0	0	0
5112	1095	"arg_1"	"varchar"	0	0	1	1
5113	1096	"res_0"	"varchar"	0	0	0	0
5114	1096	"arg_1"	"int"	32	0	1	1
5115	1097	"res_0"	"int"	32	0	0	0
5116	1097	"arg_1"	"varchar"	0	0	1	1
5117	1098	"res_0"	"varchar"	0	0	0	0
5118	1098	"arg_1"	"varchar"	0	0	1	1
5119	1098	"arg_2"	"int"	32	0	1	2
5120	1099	"res_0"	"varchar"	0	0	0	0
5121	1099	"arg_1"	"varchar"	0	0	1	1
5122	1099	"arg_2"	"int"	32	0	1	2
5123	1100	"res_0"	"varchar"	0	0	0	0
5124	1100	"arg_1"	"varchar"	0	0	1	1
5125	1101	"res_0"	"varchar"	0	0	0	0
5126	1101	"arg_1"	"varchar"	0	0	1	1
5127	1102	"res_0"	"varchar"	0	0	0	0
5128	1102	"arg_1"	"varchar"	0	0	1	1
5129	1103	"res_0"	"varchar"	0	0	0	0
5130	1103	"arg_1"	"varchar"	0	0	1	1
5131	1104	"res_0"	"varchar"	0	0	0	0
5132	1104	"arg_1"	"varchar"	0	0	1	1
5133	1105	"res_0"	"varchar"	0	0	0	0
5134	1105	"arg_1"	"varchar"	0	0	1	1
5135	1105	"arg_2"	"varchar"	0	0	1	2
5136	1106	"res_0"	"varchar"	0	0	0	0
5137	1106	"arg_1"	"varchar"	0	0	1	1
5138	1107	"res_0"	"varchar"	0	0	0	0
5139	1107	"arg_1"	"varchar"	0	0	1	1
5140	1107	"arg_2"	"varchar"	0	0	1	2
5141	1108	"res_0"	"varchar"	0	0	0	0
5142	1108	"arg_1"	"varchar"	0	0	1	1
5143	1109	"res_0"	"varchar"	0	0	0	0
5144	1109	"arg_1"	"varchar"	0	0	1	1
5145	1109	"arg_2"	"varchar"	0	0	1	2
5146	1110	"res_0"	"varchar"	0	0	0	0
5147	1110	"arg_1"	"varchar"	0	0	1	1
5148	1110	"arg_2"	"int"	32	0	1	2
5149	1111	"res_0"	"varchar"	0	0	0	0
5150	1111	"arg_1"	"varchar"	0	0	1	1
5151	1111	"arg_2"	"int"	32	0	1	2
5152	1111	"arg_3"	"varchar"	0	0	1	3
5153	1112	"res_0"	"varchar"	0	0	0	0
5154	1112	"arg_1"	"varchar"	0	0	1	1
5155	1112	"arg_2"	"int"	32	0	1	2
5156	1113	"res_0"	"varchar"	0	0	0	0
5157	1113	"arg_1"	"varchar"	0	0	1	1
5158	1113	"arg_2"	"int"	32	0	1	2
5159	1113	"arg_3"	"varchar"	0	0	1	3
5160	1114	"res_0"	"varchar"	0	0	0	0
5161	1114	"arg_1"	"varchar"	0	0	1	1
5162	1114	"arg_2"	"int"	32	0	1	2
5163	1114	"arg_3"	"int"	32	0	1	3
5164	1114	"arg_4"	"varchar"	0	0	1	4
5165	1115	"res_0"	"varchar"	0	0	0	0
5166	1115	"arg_1"	"varchar"	0	0	1	1
5167	1115	"arg_2"	"varchar"	0	0	1	2
5168	1115	"arg_3"	"varchar"	0	0	1	3
5169	1116	"res_0"	"varchar"	0	0	0	0
5170	1116	"arg_1"	"varchar"	0	0	1	1
5171	1116	"arg_2"	"int"	32	0	1	2
5172	1117	"res_0"	"varchar"	0	0	0	0
5173	1117	"arg_1"	"int"	32	0	1	1
5174	1118	"res_0"	"int"	32	0	0	0
5175	1118	"arg_1"	"varchar"	0	0	1	1
5176	1119	"res_0"	"int"	32	0	0	0
5177	1119	"arg_1"	"varchar"	0	0	1	1
5178	1120	"res_0"	"int"	32	0	0	0
5179	1120	"arg_1"	"varchar"	0	0	1	1
5180	1121	"res_0"	"varchar"	0	0	0	0
5181	1121	"arg_1"	"varchar"	0	0	1	1
5182	1122	"res_0"	"int"	32	0	0	0
5183	1122	"arg_1"	"varchar"	0	0	1	1
5184	1122	"arg_2"	"varchar"	0	0	1	2
5185	1123	"res_0"	"int"	32	0	0	0
5186	1123	"arg_1"	"varchar"	0	0	1	1
5187	1123	"arg_2"	"varchar"	0	0	1	2
5188	1124	"res_0"	"int"	32	0	0	0
5189	1124	"arg_1"	"varchar"	0	0	1	1
5190	1124	"arg_2"	"varchar"	0	0	1	2
5191	1125	"res_0"	"double"	53	0	0	0
5192	1125	"arg_1"	"varchar"	0	0	1	1
5193	1125	"arg_2"	"varchar"	0	0	1	2
5194	1126	"res_0"	"varchar"	0	0	0	0
5195	1126	"arg_1"	"varchar"	0	0	1	1
5196	1127	"res_0"	"int"	32	0	0	0
5197	1127	"arg_1"	"varchar"	0	0	1	1
5198	1127	"arg_2"	"varchar"	0	0	1	2
5199	1128	"res_0"	"int"	32	0	0	0
5200	1128	"arg_1"	"varchar"	0	0	1	1
5201	1128	"arg_2"	"varchar"	0	0	1	2
5202	1128	"arg_3"	"int"	32	0	1	3
5203	1128	"arg_4"	"int"	32	0	1	4
5204	1128	"arg_5"	"int"	32	0	1	5
5205	1129	"res_0"	"tinyint"	8	0	0	0
5206	1129	"arg_1"	"clob"	0	0	1	1
5207	1129	"arg_2"	"boolean"	1	0	1	2
5208	1130	"res_0"	"smallint"	16	0	0	0
5209	1130	"arg_1"	"clob"	0	0	1	1
5210	1130	"arg_2"	"boolean"	1	0	1	2
5211	1131	"res_0"	"int"	32	0	0	0
5212	1131	"arg_1"	"clob"	0	0	1	1
5213	1131	"arg_2"	"boolean"	1	0	1	2
5214	1132	"res_0"	"clob"	0	0	0	0
5215	1132	"arg_1"	"clob"	0	0	1	1
5216	1133	"res_0"	"int"	32	0	0	0
5217	1133	"arg_1"	"clob"	0	0	1	1
5218	1133	"arg_2"	"clob"	0	0	1	2
5219	1134	"res_0"	"int"	32	0	0	0
5220	1134	"arg_1"	"clob"	0	0	1	1
5221	1134	"arg_2"	"clob"	0	0	1	2
5222	1134	"arg_3"	"int"	32	0	1	3
5223	1135	"res_0"	"clob"	0	0	0	0
5224	1135	"arg_1"	"clob"	0	0	1	1
5225	1135	"arg_2"	"clob"	0	0	1	2
5226	1135	"arg_3"	"int"	32	0	1	3
5227	1136	"res_0"	"clob"	0	0	0	0
5228	1136	"arg_1"	"clob"	0	0	1	1
5229	1136	"arg_2"	"int"	32	0	1	2
5230	1137	"res_0"	"clob"	0	0	0	0
5231	1137	"arg_1"	"clob"	0	0	1	1
5232	1137	"arg_2"	"int"	32	0	1	2
5233	1137	"arg_3"	"int"	32	0	1	3
5234	1138	"res_0"	"boolean"	1	0	0	0
5235	1138	"arg_1"	"clob"	0	0	1	1
5236	1138	"arg_2"	"clob"	0	0	1	2
5237	1139	"res_0"	"boolean"	1	0	0	0
5238	1139	"arg_1"	"clob"	0	0	1	1
5239	1139	"arg_2"	"clob"	0	0	1	2
5240	1139	"arg_3"	"clob"	0	0	1	3
5241	1140	"res_0"	"boolean"	1	0	0	0
5242	1140	"arg_1"	"clob"	0	0	1	1
5243	1140	"arg_2"	"clob"	0	0	1	2
5244	1141	"res_0"	"boolean"	1	0	0	0
5245	1141	"arg_1"	"clob"	0	0	1	1
5246	1141	"arg_2"	"clob"	0	0	1	2
5247	1141	"arg_3"	"clob"	0	0	1	3
5248	1142	"res_0"	"boolean"	1	0	0	0
5249	1142	"arg_1"	"clob"	0	0	1	1
5250	1142	"arg_2"	"clob"	0	0	1	2
5251	1143	"res_0"	"boolean"	1	0	0	0
5252	1143	"arg_1"	"clob"	0	0	1	1
5253	1143	"arg_2"	"clob"	0	0	1	2
5254	1143	"arg_3"	"clob"	0	0	1	3
5255	1144	"res_0"	"boolean"	1	0	0	0
5256	1144	"arg_1"	"clob"	0	0	1	1
5257	1144	"arg_2"	"clob"	0	0	1	2
5258	1145	"res_0"	"boolean"	1	0	0	0
5259	1145	"arg_1"	"clob"	0	0	1	1
5260	1145	"arg_2"	"clob"	0	0	1	2
5261	1145	"arg_3"	"clob"	0	0	1	3
5262	1146	"res_0"	"int"	32	0	0	0
5263	1146	"arg_1"	"clob"	0	0	1	1
5264	1146	"arg_2"	"clob"	0	0	1	2
5265	1147	"res_0"	"clob"	0	0	0	0
5266	1147	"arg_1"	"clob"	0	0	1	1
5267	1147	"arg_2"	"int"	32	0	1	2
5268	1148	"res_0"	"clob"	0	0	0	0
5269	1148	"arg_1"	"clob"	0	0	1	1
5270	1148	"arg_2"	"clob"	0	0	1	2
5271	1149	"res_0"	"int"	32	0	0	0
5272	1149	"arg_1"	"clob"	0	0	1	1
5273	1150	"res_0"	"clob"	0	0	0	0
5274	1150	"arg_1"	"int"	32	0	1	1
5275	1151	"res_0"	"int"	32	0	0	0
5276	1151	"arg_1"	"clob"	0	0	1	1
5277	1152	"res_0"	"clob"	0	0	0	0
5278	1152	"arg_1"	"clob"	0	0	1	1
5279	1152	"arg_2"	"int"	32	0	1	2
5280	1153	"res_0"	"clob"	0	0	0	0
5281	1153	"arg_1"	"clob"	0	0	1	1
5282	1153	"arg_2"	"int"	32	0	1	2
5283	1154	"res_0"	"clob"	0	0	0	0
5284	1154	"arg_1"	"clob"	0	0	1	1
5285	1155	"res_0"	"clob"	0	0	0	0
5286	1155	"arg_1"	"clob"	0	0	1	1
5287	1156	"res_0"	"clob"	0	0	0	0
5288	1156	"arg_1"	"clob"	0	0	1	1
5289	1157	"res_0"	"clob"	0	0	0	0
5290	1157	"arg_1"	"clob"	0	0	1	1
5291	1158	"res_0"	"clob"	0	0	0	0
5292	1158	"arg_1"	"clob"	0	0	1	1
5293	1159	"res_0"	"clob"	0	0	0	0
5294	1159	"arg_1"	"clob"	0	0	1	1
5295	1159	"arg_2"	"clob"	0	0	1	2
5296	1160	"res_0"	"clob"	0	0	0	0
5297	1160	"arg_1"	"clob"	0	0	1	1
5298	1161	"res_0"	"clob"	0	0	0	0
5299	1161	"arg_1"	"clob"	0	0	1	1
5300	1161	"arg_2"	"clob"	0	0	1	2
5301	1162	"res_0"	"clob"	0	0	0	0
5302	1162	"arg_1"	"clob"	0	0	1	1
5303	1163	"res_0"	"clob"	0	0	0	0
5304	1163	"arg_1"	"clob"	0	0	1	1
5305	1163	"arg_2"	"clob"	0	0	1	2
5306	1164	"res_0"	"clob"	0	0	0	0
5307	1164	"arg_1"	"clob"	0	0	1	1
5308	1164	"arg_2"	"int"	32	0	1	2
5309	1165	"res_0"	"clob"	0	0	0	0
5310	1165	"arg_1"	"clob"	0	0	1	1
5311	1165	"arg_2"	"int"	32	0	1	2
5312	1165	"arg_3"	"clob"	0	0	1	3
5313	1166	"res_0"	"clob"	0	0	0	0
5314	1166	"arg_1"	"clob"	0	0	1	1
5315	1166	"arg_2"	"int"	32	0	1	2
5316	1167	"res_0"	"clob"	0	0	0	0
5317	1167	"arg_1"	"clob"	0	0	1	1
5318	1167	"arg_2"	"int"	32	0	1	2
5319	1167	"arg_3"	"clob"	0	0	1	3
5320	1168	"res_0"	"clob"	0	0	0	0
5321	1168	"arg_1"	"clob"	0	0	1	1
5322	1168	"arg_2"	"int"	32	0	1	2
5323	1168	"arg_3"	"int"	32	0	1	3
5324	1168	"arg_4"	"clob"	0	0	1	4
5325	1169	"res_0"	"clob"	0	0	0	0
5326	1169	"arg_1"	"clob"	0	0	1	1
5327	1169	"arg_2"	"clob"	0	0	1	2
5328	1169	"arg_3"	"clob"	0	0	1	3
5329	1170	"res_0"	"clob"	0	0	0	0
5330	1170	"arg_1"	"clob"	0	0	1	1
5331	1170	"arg_2"	"int"	32	0	1	2
5332	1171	"res_0"	"clob"	0	0	0	0
5333	1171	"arg_1"	"int"	32	0	1	1
5334	1172	"res_0"	"int"	32	0	0	0
5335	1172	"arg_1"	"clob"	0	0	1	1
5336	1173	"res_0"	"int"	32	0	0	0
5337	1173	"arg_1"	"clob"	0	0	1	1
5338	1174	"res_0"	"int"	32	0	0	0
5339	1174	"arg_1"	"clob"	0	0	1	1
5340	1175	"res_0"	"clob"	0	0	0	0
5341	1175	"arg_1"	"clob"	0	0	1	1
5342	1176	"res_0"	"int"	32	0	0	0
5343	1176	"arg_1"	"clob"	0	0	1	1
5344	1176	"arg_2"	"clob"	0	0	1	2
5345	1177	"res_0"	"int"	32	0	0	0
5346	1177	"arg_1"	"clob"	0	0	1	1
5347	1177	"arg_2"	"clob"	0	0	1	2
5348	1178	"res_0"	"int"	32	0	0	0
5349	1178	"arg_1"	"clob"	0	0	1	1
5350	1178	"arg_2"	"clob"	0	0	1	2
5351	1179	"res_0"	"double"	53	0	0	0
5352	1179	"arg_1"	"clob"	0	0	1	1
5353	1179	"arg_2"	"clob"	0	0	1	2
5354	1180	"res_0"	"clob"	0	0	0	0
5355	1180	"arg_1"	"clob"	0	0	1	1
5356	1181	"res_0"	"int"	32	0	0	0
5357	1181	"arg_1"	"clob"	0	0	1	1
5358	1181	"arg_2"	"clob"	0	0	1	2
5359	1182	"res_0"	"int"	32	0	0	0
5360	1182	"arg_1"	"clob"	0	0	1	1
5361	1182	"arg_2"	"clob"	0	0	1	2
5362	1182	"arg_3"	"int"	32	0	1	3
5363	1182	"arg_4"	"int"	32	0	1	4
5364	1182	"arg_5"	"int"	32	0	1	5
5365	1183	"res_0"	"table"	0	0	0	0
5366	1183	"arg_1"	"varchar"	0	0	1	1
5367	1183	"arg_2"	"varchar"	0	0	1	2
5368	1183	"arg_3"	"varchar"	0	0	1	3
5369	1183	"arg_4"	"varchar"	0	0	1	4
5370	1183	"arg_5"	"varchar"	0	0	1	5
5371	1183	"arg_6"	"varchar"	0	0	1	6
5372	1183	"arg_7"	"bigint"	64	0	1	7
5373	1183	"arg_8"	"bigint"	64	0	1	8
5374	1183	"arg_9"	"int"	32	0	1	9
5375	1184	"res_0"	"table"	0	0	0	0
5376	1184	"arg_1"	"varchar"	0	0	1	1
5377	1184	"arg_2"	"varchar"	0	0	1	2
5378	28	"res"	"boolean"	1	0	0	0
5379	28	"arg"	"oid"	63	0	1	1
5380	40	"res"	"any"	0	0	0	0
5381	40	"arg"	"any"	0	0	1	1
5382	41	"res"	"boolean"	1	0	0	0
5383	41	"arg"	"any"	0	0	1	1
5384	42	"res"	"boolean"	1	0	0	0
5385	42	"arg"	"any"	0	0	1	1
5386	47	"res"	"any"	0	0	0	0
5387	47	"arg"	"any"	0	0	1	1
5388	48	"res"	"any"	0	0	0	0
5389	48	"arg"	"any"	0	0	1	1
5390	52	"res"	"hugeint"	128	0	0	0
5391	52	"arg"	"tinyint"	8	0	1	1
5392	53	"res"	"hugeint"	128	0	0	0
5393	53	"arg"	"smallint"	16	0	1	1
5394	54	"res"	"hugeint"	128	0	0	0
5395	54	"arg"	"int"	32	0	1	1
5396	55	"res"	"hugeint"	128	0	0	0
5397	55	"arg"	"hugeint"	128	0	1	1
5398	56	"res"	"bigint"	64	0	0	0
5399	56	"arg"	"bigint"	64	0	1	1
5400	57	"res"	"decimal"	39	0	0	0
5401	57	"arg"	"decimal"	2	0	1	1
5402	58	"res"	"decimal"	39	0	0	0
5403	58	"arg"	"decimal"	4	0	1	1
5404	59	"res"	"decimal"	39	0	0	0
5405	59	"arg"	"decimal"	9	0	1	1
5406	60	"res"	"decimal"	39	0	0	0
5407	60	"arg"	"decimal"	18	0	1	1
5408	61	"res"	"decimal"	39	0	0	0
5409	61	"arg"	"decimal"	39	0	1	1
5410	62	"res"	"hugeint"	128	0	0	0
5411	62	"arg"	"tinyint"	8	0	1	1
5412	63	"res"	"hugeint"	128	0	0	0
5413	63	"arg"	"smallint"	16	0	1	1
5414	64	"res"	"hugeint"	128	0	0	0
5415	64	"arg"	"int"	32	0	1	1
5416	65	"res"	"hugeint"	128	0	0	0
5417	65	"arg"	"bigint"	64	0	1	1
5418	66	"res"	"hugeint"	128	0	0	0
5419	66	"arg"	"hugeint"	128	0	1	1
5420	67	"res"	"decimal"	39	0	0	0
5421	67	"arg"	"decimal"	2	0	1	1
5422	68	"res"	"decimal"	39	0	0	0
5423	68	"arg"	"decimal"	4	0	1	1
5424	69	"res"	"decimal"	39	0	0	0
5425	69	"arg"	"decimal"	9	0	1	1
5426	70	"res"	"decimal"	39	0	0	0
5427	70	"arg"	"decimal"	18	0	1	1
5428	71	"res"	"decimal"	39	0	0	0
5429	71	"arg"	"decimal"	39	0	1	1
5430	85	"res"	"real"	24	0	0	0
5431	85	"arg"	"real"	24	0	1	1
5432	86	"res"	"real"	24	0	0	0
5433	86	"arg"	"real"	24	0	1	1
5434	87	"res"	"double"	53	0	0	0
5435	87	"arg"	"double"	53	0	1	1
5436	88	"res"	"double"	53	0	0	0
5437	88	"arg"	"double"	53	0	1	1
5438	89	"res"	"month_interval"	32	0	0	0
5439	89	"arg"	"month_interval"	32	0	1	1
5440	90	"res"	"sec_interval"	13	0	0	0
5441	90	"arg"	"sec_interval"	13	0	1	1
5442	91	"res"	"double"	53	0	0	0
5443	91	"arg"	"double"	53	0	1	1
5444	92	"res"	"bigint"	64	0	0	0
5445	93	"res"	"bigint"	64	0	0	0
5468	5467	"name"	"varchar"	1024	0	0	0
5469	5467	"value"	"varchar"	2048	0	0	1
5471	5470	"name"	"varchar"	1024	0	0	0
5477	5476	"name"	"varchar"	2048	0	0	0
5497	5496	"val"	"clob"	0	0	1	0
5498	5496	"pat"	"clob"	0	0	1	1
5499	5496	"esc"	"clob"	0	0	1	2
5502	5501	"val"	"clob"	0	0	1	0
5503	5501	"pat"	"clob"	0	0	1	1
5504	5501	"esc"	"clob"	0	0	1	2
5507	5506	"val"	"clob"	0	0	1	0
5508	5506	"pat"	"clob"	0	0	1	1
5511	5510	"val"	"clob"	0	0	1	0
5512	5510	"pat"	"clob"	0	0	1	1
5515	5514	"result"	"double"	53	0	0	0
5516	5514	"r"	"double"	53	0	1	1
5519	5518	"result"	"double"	53	0	0	0
5520	5518	"d"	"double"	53	0	1	1
5526	5525	"result"	"clob"	0	0	0	0
5527	5525	"theurl"	"url"	0	0	1	1
5530	5529	"result"	"clob"	0	0	0	0
5531	5529	"theurl"	"url"	0	0	1	1
5534	5533	"result"	"clob"	0	0	0	0
5535	5533	"theurl"	"url"	0	0	1	1
5538	5537	"result"	"clob"	0	0	0	0
5539	5537	"theurl"	"url"	0	0	1	1
5542	5541	"result"	"clob"	0	0	0	0
5543	5541	"theurl"	"url"	0	0	1	1
5546	5545	"result"	"clob"	0	0	0	0
5547	5545	"theurl"	"url"	0	0	1	1
5550	5549	"result"	"clob"	0	0	0	0
5551	5549	"theurl"	"url"	0	0	1	1
5554	5553	"result"	"clob"	0	0	0	0
5555	5553	"theurl"	"url"	0	0	1	1
5558	5557	"result"	"clob"	0	0	0	0
5559	5557	"theurl"	"url"	0	0	1	1
5562	5561	"result"	"clob"	0	0	0	0
5563	5561	"theurl"	"url"	0	0	1	1
5566	5565	"result"	"clob"	0	0	0	0
5567	5565	"theurl"	"url"	0	0	1	1
5570	5569	"result"	"clob"	0	0	0	0
5571	5569	"theurl"	"url"	0	0	1	1
5574	5573	"result"	"clob"	0	0	0	0
5575	5573	"theurl"	"url"	0	0	1	1
5578	5577	"result"	"boolean"	1	0	0	0
5579	5577	"theurl"	"url"	0	0	1	1
5582	5581	"result"	"url"	0	0	0	0
5583	5581	"protocol"	"clob"	0	0	1	1
5584	5581	"hostname"	"clob"	0	0	1	2
5585	5581	"port"	"int"	32	0	1	3
5586	5581	"file"	"clob"	0	0	1	4
5589	5588	"result"	"url"	0	0	0	0
5590	5588	"protocol"	"clob"	0	0	1	1
5591	5588	"hostname"	"clob"	0	0	1	2
5592	5588	"file"	"clob"	0	0	1	3
5595	5594	"result"	"date"	0	0	0	0
5596	5594	"s"	"clob"	0	0	1	1
5597	5594	"format"	"clob"	0	0	1	2
5600	5599	"result"	"clob"	0	0	0	0
5601	5599	"d"	"date"	0	0	1	1
5602	5599	"format"	"clob"	0	0	1	2
5605	5604	"result"	"time"	1	0	0	0
5606	5604	"s"	"clob"	0	0	1	1
5607	5604	"format"	"clob"	0	0	1	2
5610	5609	"result"	"clob"	0	0	0	0
5611	5609	"d"	"time"	1	0	1	1
5612	5609	"format"	"clob"	0	0	1	2
5615	5614	"result"	"timestamp"	7	0	0	0
5616	5614	"s"	"clob"	0	0	1	1
5617	5614	"format"	"clob"	0	0	1	2
5620	5619	"result"	"clob"	0	0	0	0
5621	5619	"d"	"timestamp"	7	0	1	1
5622	5619	"format"	"clob"	0	0	1	2
5626	5625	"result"	"inet"	0	0	0	0
5627	5625	"p"	"inet"	0	0	1	1
5630	5629	"result"	"clob"	0	0	0	0
5631	5629	"p"	"inet"	0	0	1	1
5634	5633	"result"	"int"	32	0	0	0
5635	5633	"p"	"inet"	0	0	1	1
5638	5637	"result"	"inet"	0	0	0	0
5639	5637	"p"	"inet"	0	0	1	1
5640	5637	"mask"	"int"	32	0	1	2
5643	5642	"result"	"inet"	0	0	0	0
5644	5642	"p"	"inet"	0	0	1	1
5647	5646	"result"	"inet"	0	0	0	0
5648	5646	"p"	"inet"	0	0	1	1
5651	5650	"result"	"inet"	0	0	0	0
5652	5650	"p"	"inet"	0	0	1	1
5655	5654	"result"	"clob"	0	0	0	0
5656	5654	"p"	"inet"	0	0	1	1
5659	5658	"result"	"clob"	0	0	0	0
5660	5658	"p"	"inet"	0	0	1	1
5663	5662	"result"	"boolean"	1	0	0	0
5664	5662	"i1"	"inet"	0	0	1	1
5665	5662	"i2"	"inet"	0	0	1	2
5668	5667	"result"	"boolean"	1	0	0	0
5669	5667	"i1"	"inet"	0	0	1	1
5670	5667	"i2"	"inet"	0	0	1	2
5673	5672	"result"	"boolean"	1	0	0	0
5674	5672	"i1"	"inet"	0	0	1	1
5675	5672	"i2"	"inet"	0	0	1	2
5678	5677	"result"	"boolean"	1	0	0	0
5679	5677	"i1"	"inet"	0	0	1	1
5680	5677	"i2"	"inet"	0	0	1	2
5683	5682	"id"	"oid"	63	0	0	0
5684	5682	"owner"	"clob"	0	0	0	1
5685	5682	"defined"	"timestamp"	7	0	0	2
5686	5682	"query"	"clob"	0	0	0	3
5687	5682	"pipe"	"clob"	0	0	0	4
5688	5682	"plan"	"clob"	0	0	0	5
5689	5682	"mal"	"int"	32	0	0	6
5690	5682	"optimize"	"bigint"	64	0	0	7
5693	5692	"id"	"oid"	63	0	0	0
5694	5692	"start"	"timestamp"	7	0	0	1
5695	5692	"stop"	"timestamp"	7	0	0	2
5696	5692	"arguments"	"clob"	0	0	0	3
5697	5692	"tuples"	"bigint"	64	0	0	4
5698	5692	"run"	"bigint"	64	0	0	5
5699	5692	"ship"	"bigint"	64	0	0	6
5700	5692	"cpu"	"int"	32	0	0	7
5701	5692	"io"	"int"	32	0	0	8
5747	5746	"threshold"	"smallint"	16	0	1	0
5752	5751	"event"	"int"	32	0	0	0
5753	5751	"clk"	"varchar"	20	0	0	1
5754	5751	"pc"	"varchar"	50	0	0	2
5755	5751	"thread"	"int"	32	0	0	3
5756	5751	"ticks"	"bigint"	64	0	0	4
5757	5751	"rrsmb"	"bigint"	64	0	0	5
5758	5751	"vmmb"	"bigint"	64	0	0	6
5759	5751	"reads"	"bigint"	64	0	0	7
5760	5751	"writes"	"bigint"	64	0	0	8
5761	5751	"minflt"	"bigint"	64	0	0	9
5762	5751	"majflt"	"bigint"	64	0	0	10
5763	5751	"nvcsw"	"bigint"	64	0	0	11
5764	5751	"stmt"	"clob"	0	0	0	12
5782	5781	"result"	"timestamp"	7	0	0	0
5783	5781	"sec"	"bigint"	64	0	1	1
5786	5785	"result"	"timestamp"	7	0	0	0
5787	5785	"sec"	"int"	32	0	1	1
5790	5789	"result"	"int"	32	0	0	0
5791	5789	"ts"	"timestamp"	7	0	1	1
5794	5793	"result"	"int"	32	0	0	0
5795	5793	"ts"	"timestamptz"	7	0	1	1
5798	5797	"sys"	"clob"	0	0	1	0
5799	5797	"tab"	"clob"	0	0	1	1
5802	5801	"sys"	"clob"	0	0	1	0
5803	5801	"tab"	"clob"	0	0	1	1
5806	5805	"sys"	"clob"	0	0	1	0
5807	5805	"tab"	"clob"	0	0	1	1
5810	5809	"sch"	"varchar"	100	0	0	0
5811	5809	"usr"	"varchar"	100	0	0	1
5812	5809	"dep_type"	"varchar"	32	0	0	2
5815	5814	"sch"	"varchar"	100	0	0	0
5816	5814	"usr"	"varchar"	100	0	0	1
5817	5814	"dep_type"	"varchar"	32	0	0	2
5820	5819	"sch"	"varchar"	100	0	0	0
5821	5819	"usr"	"varchar"	100	0	0	1
5822	5819	"dep_type"	"varchar"	32	0	0	2
5825	5824	"sch"	"varchar"	100	0	0	0
5826	5824	"usr"	"varchar"	100	0	0	1
5827	5824	"dep_type"	"varchar"	32	0	0	2
5830	5829	"sch"	"varchar"	100	0	0	0
5831	5829	"usr"	"varchar"	100	0	0	1
5832	5829	"dep_type"	"varchar"	32	0	0	2
5835	5834	"sch"	"varchar"	100	0	0	0
5836	5834	"usr"	"varchar"	100	0	0	1
5837	5834	"dep_type"	"varchar"	32	0	0	2
5840	5839	"sch"	"varchar"	100	0	0	0
5841	5839	"usr"	"varchar"	100	0	0	1
5842	5839	"dep_type"	"varchar"	32	0	0	2
5845	5844	"sch"	"varchar"	100	0	0	0
5846	5844	"usr"	"varchar"	100	0	0	1
5847	5844	"dep_type"	"varchar"	32	0	0	2
5850	5849	"sch"	"varchar"	100	0	0	0
5851	5849	"usr"	"varchar"	100	0	0	1
5852	5849	"dep_type"	"varchar"	32	0	0	2
5855	5854	"sch"	"varchar"	100	0	0	0
5856	5854	"usr"	"varchar"	100	0	0	1
5857	5854	"dep_type"	"varchar"	32	0	0	2
5860	5859	"sch"	"varchar"	100	0	0	0
5861	5859	"usr"	"varchar"	100	0	0	1
5862	5859	"dep_type"	"varchar"	32	0	0	2
5865	5864	"sch"	"varchar"	100	0	0	0
5866	5864	"usr"	"varchar"	100	0	0	1
5867	5864	"dep_type"	"varchar"	32	0	0	2
5870	5869	"sch"	"varchar"	100	0	0	0
5871	5869	"usr"	"varchar"	100	0	0	1
5872	5869	"dep_type"	"varchar"	32	0	0	2
5875	5874	"sch"	"varchar"	100	0	0	0
5876	5874	"usr"	"varchar"	100	0	0	1
5877	5874	"dep_type"	"varchar"	32	0	0	2
5880	5879	"sch"	"varchar"	100	0	0	0
5881	5879	"usr"	"varchar"	100	0	0	1
5882	5879	"dep_type"	"varchar"	32	0	0	2
5885	5884	"sch"	"varchar"	100	0	0	0
5886	5884	"usr"	"varchar"	100	0	0	1
5887	5884	"dep_type"	"varchar"	32	0	0	2
5890	5889	"sch"	"varchar"	100	0	0	0
5891	5889	"usr"	"varchar"	100	0	0	1
5892	5889	"dep_type"	"varchar"	32	0	0	2
5895	5894	"result"	"clob"	0	0	0	0
5896	5894	"username"	"clob"	0	0	1	1
5899	5898	"user"	"clob"	0	0	0	0
5900	5898	"login"	"timestamp"	7	0	0	1
5901	5898	"sessiontimeout"	"bigint"	64	0	0	2
5902	5898	"lastcommand"	"timestamp"	7	0	0	3
5903	5898	"querytimeout"	"bigint"	64	0	0	4
5904	5898	"active"	"boolean"	1	0	0	5
5915	5914	"delay"	"tinyint"	8	0	1	0
5918	5917	"delay"	"tinyint"	8	0	1	0
5919	5917	"force"	"boolean"	1	0	1	1
5922	5921	"query"	"bigint"	64	0	1	0
5925	5924	"query"	"bigint"	64	0	1	0
5926	5924	"session"	"bigint"	64	0	1	1
5929	5928	"timeout"	"bigint"	64	0	1	0
5932	5931	"result"	"varchar"	32	0	0	0
5933	5931	"s1"	"varchar"	32	0	1	1
5934	5931	"st"	"int"	32	0	1	2
5935	5931	"len"	"int"	32	0	1	3
5936	5931	"s3"	"varchar"	32	0	1	4
5939	5938	"result"	"double"	53	0	0	0
5940	5938	"num"	"double"	53	0	1	1
5941	5938	"prc"	"int"	32	0	1	2
5944	5943	"result"	"double"	53	0	0	0
5945	5943	"num"	"double"	53	0	1	1
5946	5943	"prc"	"int"	32	0	1	2
5947	5943	"truncat"	"int"	32	0	1	3
5950	5949	"result"	"clob"	0	0	0	0
5951	5949	"num"	"double"	53	0	1	1
5952	5949	"prc"	"int"	32	0	1	2
5953	5949	"truncat"	"int"	32	0	1	3
5956	5955	"result"	"double"	53	0	0	0
5957	5955	"pdec"	"double"	53	0	1	1
5958	5955	"pradius"	"double"	53	0	1	2
5961	5960	"result"	"oid"	63	0	0	0
5962	5960	"x"	"int"	32	0	1	1
5963	5960	"y"	"int"	32	0	1	2
5966	5965	"result"	"int"	32	0	0	0
5967	5965	"z"	"oid"	63	0	1	1
5970	5969	"result"	"int"	32	0	0	0
5971	5969	"z"	"oid"	63	0	1	1
5974	5973	"rewrite"	"clob"	0	0	0	0
5975	5973	"count"	"int"	32	0	0	1
5978	5977	"query"	"clob"	0	0	0	0
5979	5977	"count"	"int"	32	0	0	1
5982	5981	"filename"	"clob"	0	0	1	0
5985	5984	"name"	"clob"	0	0	0	0
5986	5984	"def"	"clob"	0	0	0	1
5987	5984	"status"	"clob"	0	0	0	2
5995	5994	"name"	"clob"	0	0	0	0
5996	5994	"value"	"clob"	0	0	0	1
6003	6002	"id"	"int"	32	0	0	0
6004	6002	"name"	"clob"	0	0	0	1
6005	6002	"ttype"	"clob"	0	0	0	2
6006	6002	"count"	"bigint"	64	0	0	3
6007	6002	"refcnt"	"int"	32	0	0	4
6008	6002	"lrefcnt"	"int"	32	0	0	5
6009	6002	"location"	"clob"	0	0	0	6
6010	6002	"heat"	"int"	32	0	0	7
6011	6002	"dirty"	"clob"	0	0	0	8
6012	6002	"status"	"clob"	0	0	0	9
6013	6002	"kind"	"clob"	0	0	0	10
6016	6015	"signature"	"clob"	0	0	0	0
6017	6015	"address"	"clob"	0	0	0	1
6018	6015	"comment"	"clob"	0	0	0	2
6021	6020	"ra_stmt"	"clob"	0	0	1	0
6022	6020	"opt"	"boolean"	1	0	1	1
6027	6026	"result"	"int"	32	0	0	0
6028	6026	"debug"	"int"	32	0	1	1
6031	6030	"qtag"	"bigint"	64	0	0	0
6032	6030	"user"	"clob"	0	0	0	1
6033	6030	"started"	"timestamp"	7	0	0	2
6034	6030	"estimate"	"timestamp"	7	0	0	3
6035	6030	"progress"	"int"	32	0	0	4
6036	6030	"status"	"clob"	0	0	0	5
6037	6030	"tag"	"oid"	63	0	0	6
6038	6030	"query"	"clob"	0	0	0	7
6051	6050	"tag"	"int"	32	0	1	0
6054	6053	"tag"	"int"	32	0	1	0
6057	6056	"tag"	"int"	32	0	1	0
6060	6059	"tag"	"bigint"	64	0	1	0
6063	6062	"tag"	"bigint"	64	0	1	0
6066	6065	"tag"	"bigint"	64	0	1	0
6069	6068	"rowid"	"bigint"	64	0	0	0
6070	6068	"fldid"	"int"	32	0	0	1
6071	6068	"message"	"clob"	0	0	0	2
6072	6068	"input"	"clob"	0	0	0	3
6083	6082	"result"	"double"	53	0	0	0
6084	6082	"val"	"tinyint"	8	0	1	1
6087	6086	"result"	"double"	53	0	0	0
6088	6086	"val"	"smallint"	16	0	1	1
6091	6090	"result"	"double"	53	0	0	0
6092	6090	"val"	"int"	32	0	1	1
6095	6094	"result"	"double"	53	0	0	0
6096	6094	"val"	"bigint"	64	0	1	1
6099	6098	"result"	"double"	53	0	0	0
6100	6098	"val"	"real"	24	0	1	1
6103	6102	"result"	"double"	53	0	0	0
6104	6102	"val"	"double"	53	0	1	1
6107	6106	"result"	"double"	53	0	0	0
6108	6106	"val"	"date"	0	0	1	1
6111	6110	"result"	"double"	53	0	0	0
6112	6110	"val"	"time"	1	0	1	1
6115	6114	"result"	"double"	53	0	0	0
6116	6114	"val"	"timestamp"	7	0	1	1
6119	6118	"result"	"double"	53	0	0	0
6120	6118	"val"	"tinyint"	8	0	1	1
6123	6122	"result"	"double"	53	0	0	0
6124	6122	"val"	"smallint"	16	0	1	1
6127	6126	"result"	"double"	53	0	0	0
6128	6126	"val"	"int"	32	0	1	1
6131	6130	"result"	"double"	53	0	0	0
6132	6130	"val"	"bigint"	64	0	1	1
6135	6134	"result"	"double"	53	0	0	0
6136	6134	"val"	"real"	24	0	1	1
6139	6138	"result"	"double"	53	0	0	0
6140	6138	"val"	"double"	53	0	1	1
6143	6142	"result"	"double"	53	0	0	0
6144	6142	"val"	"date"	0	0	1	1
6147	6146	"result"	"double"	53	0	0	0
6148	6146	"val"	"time"	1	0	1	1
6151	6150	"result"	"double"	53	0	0	0
6152	6150	"val"	"timestamp"	7	0	1	1
6155	6154	"result"	"double"	53	0	0	0
6156	6154	"val"	"tinyint"	8	0	1	1
6159	6158	"result"	"double"	53	0	0	0
6160	6158	"val"	"smallint"	16	0	1	1
6163	6162	"result"	"double"	53	0	0	0
6164	6162	"val"	"int"	32	0	1	1
6167	6166	"result"	"double"	53	0	0	0
6168	6166	"val"	"bigint"	64	0	1	1
6171	6170	"result"	"double"	53	0	0	0
6172	6170	"val"	"real"	24	0	1	1
6175	6174	"result"	"double"	53	0	0	0
6176	6174	"val"	"double"	53	0	1	1
6179	6178	"result"	"double"	53	0	0	0
6180	6178	"val"	"date"	0	0	1	1
6183	6182	"result"	"double"	53	0	0	0
6184	6182	"val"	"time"	1	0	1	1
6187	6186	"result"	"double"	53	0	0	0
6188	6186	"val"	"timestamp"	7	0	1	1
6191	6190	"result"	"double"	53	0	0	0
6192	6190	"val"	"tinyint"	8	0	1	1
6195	6194	"result"	"double"	53	0	0	0
6196	6194	"val"	"smallint"	16	0	1	1
6199	6198	"result"	"double"	53	0	0	0
6200	6198	"val"	"int"	32	0	1	1
6203	6202	"result"	"double"	53	0	0	0
6204	6202	"val"	"bigint"	64	0	1	1
6207	6206	"result"	"double"	53	0	0	0
6208	6206	"val"	"real"	24	0	1	1
6211	6210	"result"	"double"	53	0	0	0
6212	6210	"val"	"double"	53	0	1	1
6215	6214	"result"	"double"	53	0	0	0
6216	6214	"val"	"date"	0	0	1	1
6219	6218	"result"	"double"	53	0	0	0
6220	6218	"val"	"time"	1	0	1	1
6223	6222	"result"	"double"	53	0	0	0
6224	6222	"val"	"timestamp"	7	0	1	1
6227	6226	"result"	"tinyint"	8	0	0	0
6228	6226	"val"	"tinyint"	8	0	1	1
6231	6230	"result"	"smallint"	16	0	0	0
6232	6230	"val"	"smallint"	16	0	1	1
6235	6234	"result"	"int"	32	0	0	0
6236	6234	"val"	"int"	32	0	1	1
6239	6238	"result"	"bigint"	64	0	0	0
6240	6238	"val"	"bigint"	64	0	1	1
6243	6242	"result"	"decimal"	18	3	0	0
6244	6242	"val"	"decimal"	18	3	1	1
6247	6246	"result"	"real"	24	0	0	0
6248	6246	"val"	"real"	24	0	1	1
6251	6250	"result"	"double"	53	0	0	0
6252	6250	"val"	"double"	53	0	1	1
6255	6254	"result"	"date"	0	0	0	0
6256	6254	"val"	"date"	0	0	1	1
6259	6258	"result"	"time"	1	0	0	0
6260	6258	"val"	"time"	1	0	1	1
6263	6262	"result"	"timestamp"	7	0	0	0
6264	6262	"val"	"timestamp"	7	0	1	1
6267	6266	"result"	"tinyint"	8	0	0	0
6268	6266	"val"	"tinyint"	8	0	1	1
6269	6266	"q"	"double"	53	0	1	2
6272	6271	"result"	"smallint"	16	0	0	0
6273	6271	"val"	"smallint"	16	0	1	1
6274	6271	"q"	"double"	53	0	1	2
6277	6276	"result"	"int"	32	0	0	0
6278	6276	"val"	"int"	32	0	1	1
6279	6276	"q"	"double"	53	0	1	2
6282	6281	"result"	"bigint"	64	0	0	0
6283	6281	"val"	"bigint"	64	0	1	1
6284	6281	"q"	"double"	53	0	1	2
6287	6286	"result"	"decimal"	18	3	0	0
6288	6286	"val"	"decimal"	18	3	1	1
6289	6286	"q"	"double"	53	0	1	2
6292	6291	"result"	"real"	24	0	0	0
6293	6291	"val"	"real"	24	0	1	1
6294	6291	"q"	"double"	53	0	1	2
6297	6296	"result"	"double"	53	0	0	0
6298	6296	"val"	"double"	53	0	1	1
6299	6296	"q"	"double"	53	0	1	2
6302	6301	"result"	"date"	0	0	0	0
6303	6301	"val"	"date"	0	0	1	1
6304	6301	"q"	"double"	53	0	1	2
6307	6306	"result"	"time"	1	0	0	0
6308	6306	"val"	"time"	1	0	1	1
6309	6306	"q"	"double"	53	0	1	2
6312	6311	"result"	"timestamp"	7	0	0	0
6313	6311	"val"	"timestamp"	7	0	1	1
6314	6311	"q"	"double"	53	0	1	2
6317	6316	"result"	"tinyint"	8	0	0	0
6318	6316	"e1"	"tinyint"	8	0	1	1
6319	6316	"e2"	"tinyint"	8	0	1	2
6322	6321	"result"	"smallint"	16	0	0	0
6323	6321	"e1"	"smallint"	16	0	1	1
6324	6321	"e2"	"smallint"	16	0	1	2
6327	6326	"result"	"int"	32	0	0	0
6328	6326	"e1"	"int"	32	0	1	1
6329	6326	"e2"	"int"	32	0	1	2
6332	6331	"result"	"bigint"	64	0	0	0
6333	6331	"e1"	"bigint"	64	0	1	1
6334	6331	"e2"	"bigint"	64	0	1	2
6337	6336	"result"	"real"	24	0	0	0
6338	6336	"e1"	"real"	24	0	1	1
6339	6336	"e2"	"real"	24	0	1	2
6342	6341	"result"	"double"	53	0	0	0
6343	6341	"e1"	"double"	53	0	1	1
6344	6341	"e2"	"double"	53	0	1	2
6347	6346	"result"	"double"	53	0	0	0
6348	6346	"val"	"hugeint"	128	0	1	1
6351	6350	"result"	"double"	53	0	0	0
6352	6350	"val"	"hugeint"	128	0	1	1
6355	6354	"result"	"double"	53	0	0	0
6356	6354	"val"	"hugeint"	128	0	1	1
6359	6358	"result"	"double"	53	0	0	0
6360	6358	"val"	"hugeint"	128	0	1	1
6363	6362	"result"	"hugeint"	128	0	0	0
6364	6362	"val"	"hugeint"	128	0	1	1
6367	6366	"result"	"hugeint"	128	0	0	0
6368	6366	"val"	"hugeint"	128	0	1	1
6369	6366	"q"	"double"	53	0	1	2
6372	6371	"result"	"hugeint"	128	0	0	0
6373	6371	"e1"	"hugeint"	128	0	1	1
6374	6371	"e2"	"hugeint"	128	0	1	2
6390	6389	"result"	"mbr"	0	0	0	0
6391	6389	"g"	"geometry"	0	0	1	1
6394	6393	"result"	"boolean"	1	0	0	0
6395	6393	"a"	"mbr"	0	0	1	1
6396	6393	"b"	"mbr"	0	0	1	2
6399	6398	"result"	"geometry"	0	0	0	0
6400	6398	"wkt"	"clob"	0	0	1	1
6401	6398	"srid"	"smallint"	16	0	1	2
6404	6403	"result"	"point"	0	0	0	0
6405	6403	"wkt"	"clob"	0	0	1	1
6406	6403	"srid"	"smallint"	16	0	1	2
6409	6408	"result"	"linestring"	0	0	0	0
6410	6408	"wkt"	"clob"	0	0	1	1
6411	6408	"srid"	"smallint"	16	0	1	2
6414	6413	"result"	"polygon"	0	0	0	0
6415	6413	"wkt"	"clob"	0	0	1	1
6416	6413	"srid"	"smallint"	16	0	1	2
6419	6418	"result"	"multipoint"	0	0	0	0
6420	6418	"wkt"	"clob"	0	0	1	1
6421	6418	"srid"	"smallint"	16	0	1	2
6424	6423	"result"	"multilinestring"	0	0	0	0
6425	6423	"wkt"	"clob"	0	0	1	1
6426	6423	"srid"	"smallint"	16	0	1	2
6429	6428	"result"	"multipolygon"	0	0	0	0
6430	6428	"wkt"	"clob"	0	0	1	1
6431	6428	"srid"	"smallint"	16	0	1	2
6434	6433	"result"	"multipolygon"	0	0	0	0
6435	6433	"wkt"	"clob"	0	0	1	1
6436	6433	"srid"	"smallint"	16	0	1	2
6439	6438	"result"	"polygon"	0	0	0	0
6440	6438	"wkt"	"clob"	0	0	1	1
6441	6438	"srid"	"smallint"	16	0	1	2
6444	6443	"result"	"clob"	0	0	0	0
6445	6443	"g"	"geometry"	0	0	1	1
6448	6447	"result"	"double"	53	0	0	0
6449	6447	"g"	"geometry"	0	0	1	1
6452	6451	"result"	"double"	53	0	0	0
6453	6451	"g"	"geometry"	0	0	1	1
6456	6455	"result"	"point"	0	0	0	0
6457	6455	"x"	"double"	53	0	1	1
6458	6455	"y"	"double"	53	0	1	2
6461	6460	"result"	"int"	32	0	0	0
6462	6460	"g"	"geometry"	0	0	1	1
6465	6464	"result"	"int"	32	0	0	0
6466	6464	"g"	"geometry"	0	0	1	1
6469	6468	"result"	"int"	32	0	0	0
6470	6468	"g"	"geometry"	0	0	1	1
6473	6472	"result"	"geometry"	0	0	0	0
6474	6472	"g"	"geometry"	0	0	1	1
6477	6476	"result"	"boolean"	1	0	0	0
6478	6476	"g"	"geometry"	0	0	1	1
6481	6480	"result"	"boolean"	1	0	0	0
6482	6480	"g"	"geometry"	0	0	1	1
6485	6484	"result"	"geometry"	0	0	0	0
6486	6484	"g"	"geometry"	0	0	1	1
6489	6488	"result"	"boolean"	1	0	0	0
6490	6488	"a"	"geometry"	0	0	1	1
6491	6488	"b"	"geometry"	0	0	1	2
6494	6493	"result"	"boolean"	1	0	0	0
6495	6493	"a"	"geometry"	0	0	1	1
6496	6493	"b"	"geometry"	0	0	1	2
6499	6498	"result"	"boolean"	1	0	0	0
6500	6498	"a"	"geometry"	0	0	1	1
6501	6498	"b"	"geometry"	0	0	1	2
6504	6503	"result"	"boolean"	1	0	0	0
6505	6503	"a"	"geometry"	0	0	1	1
6506	6503	"b"	"geometry"	0	0	1	2
6509	6508	"result"	"boolean"	1	0	0	0
6510	6508	"a"	"geometry"	0	0	1	1
6511	6508	"b"	"geometry"	0	0	1	2
6514	6513	"result"	"boolean"	1	0	0	0
6515	6513	"a"	"geometry"	0	0	1	1
6516	6513	"b"	"geometry"	0	0	1	2
6519	6518	"result"	"boolean"	1	0	0	0
6520	6518	"a"	"geometry"	0	0	1	1
6521	6518	"b"	"geometry"	0	0	1	2
6524	6523	"result"	"boolean"	1	0	0	0
6525	6523	"a"	"geometry"	0	0	1	1
6526	6523	"x"	"double"	53	0	1	2
6527	6523	"y"	"double"	53	0	1	3
6530	6529	"result"	"boolean"	1	0	0	0
6531	6529	"a"	"geometry"	0	0	1	1
6532	6529	"b"	"geometry"	0	0	1	2
6535	6534	"result"	"boolean"	1	0	0	0
6536	6534	"a"	"geometry"	0	0	1	1
6537	6534	"b"	"geometry"	0	0	1	2
6538	6534	"pattern"	"clob"	0	0	1	3
6541	6540	"result"	"double"	53	0	0	0
6542	6540	"g"	"geometry"	0	0	1	1
6545	6544	"result"	"double"	53	0	0	0
6546	6544	"g"	"geometry"	0	0	1	1
6549	6548	"result"	"double"	53	0	0	0
6550	6548	"a"	"geometry"	0	0	1	1
6551	6548	"b"	"geometry"	0	0	1	2
6554	6553	"result"	"geometry"	0	0	0	0
6555	6553	"a"	"geometry"	0	0	1	1
6556	6553	"distance"	"double"	53	0	1	2
6559	6558	"result"	"geometry"	0	0	0	0
6560	6558	"a"	"geometry"	0	0	1	1
6563	6562	"result"	"geometry"	0	0	0	0
6564	6562	"a"	"geometry"	0	0	1	1
6565	6562	"b"	"geometry"	0	0	1	2
6568	6567	"result"	"geometry"	0	0	0	0
6569	6567	"a"	"geometry"	0	0	1	1
6570	6567	"b"	"geometry"	0	0	1	2
6573	6572	"result"	"geometry"	0	0	0	0
6574	6572	"a"	"geometry"	0	0	1	1
6575	6572	"b"	"geometry"	0	0	1	2
6578	6577	"result"	"geometry"	0	0	0	0
6579	6577	"a"	"geometry"	0	0	1	1
6580	6577	"b"	"geometry"	0	0	1	2
6585	6584	"result"	"json"	0	0	0	0
6586	6584	"js"	"json"	0	0	1	1
6587	6584	"pathexpr"	"clob"	0	0	1	2
6590	6589	"result"	"json"	0	0	0	0
6591	6589	"js"	"json"	0	0	1	1
6592	6589	"name"	"tinyint"	8	0	1	2
6595	6594	"result"	"json"	0	0	0	0
6596	6594	"js"	"json"	0	0	1	1
6597	6594	"name"	"int"	32	0	1	2
6600	6599	"result"	"json"	0	0	0	0
6601	6599	"js"	"json"	0	0	1	1
6602	6599	"name"	"bigint"	64	0	1	2
6605	6604	"result"	"clob"	0	0	0	0
6606	6604	"js"	"json"	0	0	1	1
6607	6604	"e"	"clob"	0	0	1	2
6610	6609	"result"	"double"	53	0	0	0
6611	6609	"js"	"json"	0	0	1	1
6614	6613	"result"	"bigint"	64	0	0	0
6615	6613	"js"	"json"	0	0	1	1
6618	6617	"result"	"boolean"	1	0	0	0
6619	6617	"js"	"clob"	0	0	1	1
6622	6621	"result"	"boolean"	1	0	0	0
6623	6621	"js"	"clob"	0	0	1	1
6626	6625	"result"	"boolean"	1	0	0	0
6627	6625	"js"	"clob"	0	0	1	1
6630	6629	"result"	"boolean"	1	0	0	0
6631	6629	"js"	"json"	0	0	1	1
6634	6633	"result"	"boolean"	1	0	0	0
6635	6633	"js"	"json"	0	0	1	1
6638	6637	"result"	"boolean"	1	0	0	0
6639	6637	"js"	"json"	0	0	1	1
6642	6641	"result"	"int"	32	0	0	0
6643	6641	"js"	"json"	0	0	1	1
6646	6645	"result"	"json"	0	0	0	0
6647	6645	"js"	"json"	0	0	1	1
6650	6649	"result"	"json"	0	0	0	0
6651	6649	"js"	"json"	0	0	1	1
6654	6653	"result"	"clob"	0	0	0	0
6655	6653	"js"	"json"	0	0	1	1
6658	6657	"result"	"clob"	0	0	0	0
6659	6657	"js"	"clob"	0	0	1	1
6662	6661	"result"	"clob"	0	0	0	0
6663	6661	"js"	"int"	32	0	1	1
6666	6665	"result"	"clob"	0	0	0	0
6667	6665	"js"	"json"	0	0	1	1
6670	6669	"result"	"clob"	0	0	0	0
6671	6669	"x"	"clob"	0	0	1	1
6674	6673	"result"	"clob"	0	0	0	0
6675	6673	"x"	"double"	53	0	1	1
6678	6677	"result"	"json"	0	0	0	0
6679	6677	"js"	"json"	0	0	1	1
6680	6677	"name"	"hugeint"	128	0	1	2
6683	6682	"result"	"clob"	0	0	0	0
6684	6682	"v"	"clob"	0	0	1	1
6688	6687	"result"	"uuid"	0	0	0	0
6691	6690	"result"	"uuid"	0	0	0	0
6692	6690	"u"	"uuid"	0	0	1	1
6695	6694	"result"	"uuid"	0	0	0	0
6696	6694	"u"	"clob"	0	0	1	1
6699	6698	"result"	"double"	53	0	0	0
6700	6698	"chi2"	"double"	53	0	1	1
6701	6698	"datapoints"	"double"	53	0	1	2
6709	6708	"beat"	"int"	32	0	1	0
6712	6711	"poolsize"	"int"	32	0	1	0
6715	6714	"host"	"clob"	0	0	1	0
6716	6714	"port"	"int"	32	0	1	1
6740	6739	"dirname"	"clob"	0	0	1	0
6743	6742	"fname"	"clob"	0	0	1	0
6746	6745	"tname"	"clob"	0	0	1	0
6749	6748	"dirname"	"clob"	0	0	1	0
6750	6748	"pat"	"clob"	0	0	1	1
6785	6784	"fname"	"varchar"	256	0	1	0
6788	6787	"fid"	"int"	32	0	1	0
6789	6787	"varnname"	"varchar"	256	0	1	1
6792	6791	"schema"	"clob"	0	0	0	0
6793	6791	"table"	"clob"	0	0	0	1
6794	6791	"column"	"clob"	0	0	0	2
6795	6791	"type"	"clob"	0	0	0	3
6796	6791	"mode"	"clob"	0	0	0	4
6797	6791	"location"	"clob"	0	0	0	5
6798	6791	"count"	"bigint"	64	0	0	6
6799	6791	"typewidth"	"int"	32	0	0	7
6800	6791	"columnsize"	"bigint"	64	0	0	8
6801	6791	"heapsize"	"bigint"	64	0	0	9
6802	6791	"hashes"	"bigint"	64	0	0	10
6803	6791	"phash"	"boolean"	1	0	0	11
6804	6791	"imprints"	"bigint"	64	0	0	12
6805	6791	"sorted"	"boolean"	1	0	0	13
6838	6837	"result"	"bigint"	64	0	0	0
6839	6837	"nme"	"clob"	0	0	1	1
6840	6837	"i"	"bigint"	64	0	1	2
6841	6837	"d"	"bigint"	64	0	1	3
6844	6843	"result"	"bigint"	64	0	0	0
6845	6843	"tpe"	"clob"	0	0	1	1
6846	6843	"i"	"bigint"	64	0	1	2
6847	6843	"w"	"int"	32	0	1	3
6850	6849	"result"	"bigint"	64	0	0	0
6851	6849	"b"	"boolean"	1	0	1	1
6852	6849	"i"	"bigint"	64	0	1	2
6855	6854	"result"	"bigint"	64	0	0	0
6856	6854	"i"	"bigint"	64	0	1	1
6857	6854	"nme"	"clob"	0	0	1	2
6860	6859	"schema"	"clob"	0	0	0	0
6861	6859	"table"	"clob"	0	0	0	1
6862	6859	"column"	"clob"	0	0	0	2
6863	6859	"type"	"clob"	0	0	0	3
6864	6859	"count"	"bigint"	64	0	0	4
6865	6859	"columnsize"	"bigint"	64	0	0	5
6866	6859	"heapsize"	"bigint"	64	0	0	6
6867	6859	"hashes"	"bigint"	64	0	0	7
6868	6859	"imprints"	"bigint"	64	0	0	8
6869	6859	"sorted"	"boolean"	1	0	0	9
6907	6906	"MinMax"	"int"	32	0	1	0
6908	6906	"sample"	"bigint"	64	0	1	1
6911	6910	"MinMax"	"int"	32	0	1	0
6912	6910	"sample"	"bigint"	64	0	1	1
6913	6910	"sch"	"clob"	0	0	1	2
6916	6915	"MinMax"	"int"	32	0	1	0
6917	6915	"sample"	"bigint"	64	0	1	1
6918	6915	"sch"	"clob"	0	0	1	2
6919	6915	"tbl"	"clob"	0	0	1	3
6922	6921	"MinMax"	"int"	32	0	1	0
6923	6921	"sample"	"bigint"	64	0	1	1
6924	6921	"sch"	"clob"	0	0	1	2
6925	6921	"tbl"	"clob"	0	0	1	3
6926	6921	"col"	"clob"	0	0	1	4
6929	6928	"result"	"clob"	0	0	0	0
6930	6928	"src"	"clob"	0	0	1	1
6933	6932	"result"	"smallint"	16	0	0	0
6934	6932	"one"	"tinyint"	8	0	1	1
6935	6932	"two"	"tinyint"	8	0	1	2
6938	6937	"result"	"int"	32	0	0	0
6939	6937	"one"	"smallint"	16	0	1	1
6940	6937	"two"	"smallint"	16	0	1	2
6943	6942	"result"	"bigint"	64	0	0	0
6944	6942	"one"	"int"	32	0	1	1
6945	6942	"two"	"int"	32	0	1	2
6948	6947	"result"	"hugeint"	128	0	0	0
6949	6947	"one"	"bigint"	64	0	1	1
6950	6947	"two"	"bigint"	64	0	1	2
6954	6953	"bam_repos"	"clob"	0	0	1	0
6955	6953	"dbschema"	"smallint"	16	0	1	1
6958	6957	"bam_files"	"clob"	0	0	1	0
6959	6957	"dbschema"	"smallint"	16	0	1	1
6962	6961	"bam_file"	"clob"	0	0	1	0
6963	6961	"dbschema"	"smallint"	16	0	1	1
6966	6965	"file_id"	"bigint"	64	0	1	0
6967	6965	"dbschema"	"smallint"	16	0	1	1
6970	6969	"result"	"boolean"	1	0	0	0
6971	6969	"flag"	"smallint"	16	0	1	1
6972	6969	"name"	"clob"	0	0	1	2
6975	6974	"result"	"clob"	0	0	0	0
6976	6974	"seq"	"clob"	0	0	1	1
6979	6978	"result"	"clob"	0	0	0	0
6980	6978	"qual"	"clob"	0	0	1	1
6983	6982	"result"	"int"	32	0	0	0
6984	6982	"cigar"	"clob"	0	0	1	1
6987	6986	"result"	"char"	1	0	0	0
6988	6986	"ref_pos"	"int"	32	0	1	1
6989	6986	"alg_seq"	"clob"	0	0	1	2
6990	6986	"alg_pos"	"int"	32	0	1	3
6991	6986	"alg_cigar"	"clob"	0	0	1	4
6994	6993	"output_path"	"clob"	0	0	1	0
6997	6996	"output_path"	"clob"	0	0	1	0
7067	7066	"value"	"tinyint"	8	0	0	0
7068	7066	"first"	"tinyint"	8	0	1	1
7069	7066	"last"	"tinyint"	8	0	1	2
7072	7071	"value"	"tinyint"	8	0	0	0
7073	7071	"first"	"tinyint"	8	0	1	1
7074	7071	"last"	"tinyint"	8	0	1	2
7075	7071	"stepsize"	"tinyint"	8	0	1	3
7078	7077	"value"	"smallint"	16	0	0	0
7079	7077	"first"	"smallint"	16	0	1	1
7080	7077	"last"	"smallint"	16	0	1	2
7083	7082	"value"	"smallint"	16	0	0	0
7084	7082	"first"	"smallint"	16	0	1	1
7085	7082	"last"	"smallint"	16	0	1	2
7086	7082	"stepsize"	"smallint"	16	0	1	3
7089	7088	"value"	"int"	32	0	0	0
7090	7088	"first"	"int"	32	0	1	1
7091	7088	"last"	"int"	32	0	1	2
7094	7093	"value"	"int"	32	0	0	0
7095	7093	"first"	"int"	32	0	1	1
7096	7093	"last"	"int"	32	0	1	2
7097	7093	"stepsize"	"int"	32	0	1	3
7100	7099	"value"	"bigint"	64	0	0	0
7101	7099	"first"	"bigint"	64	0	1	1
7102	7099	"last"	"bigint"	64	0	1	2
7105	7104	"value"	"bigint"	64	0	0	0
7106	7104	"first"	"bigint"	64	0	1	1
7107	7104	"last"	"bigint"	64	0	1	2
7108	7104	"stepsize"	"bigint"	64	0	1	3
7111	7110	"value"	"real"	24	0	0	0
7112	7110	"first"	"real"	24	0	1	1
7113	7110	"last"	"real"	24	0	1	2
7114	7110	"stepsize"	"real"	24	0	1	3
7117	7116	"value"	"double"	53	0	0	0
7118	7116	"first"	"double"	53	0	1	1
7119	7116	"last"	"double"	53	0	1	2
7120	7116	"stepsize"	"double"	53	0	1	3
7123	7122	"value"	"decimal"	10	2	0	0
7124	7122	"first"	"decimal"	10	2	1	1
7125	7122	"last"	"decimal"	10	2	1	2
7126	7122	"stepsize"	"decimal"	10	2	1	3
7129	7128	"value"	"timestamp"	7	0	0	0
7130	7128	"first"	"timestamp"	7	0	1	1
7131	7128	"last"	"timestamp"	7	0	1	2
7132	7128	"stepsize"	"sec_interval"	13	0	1	3
7135	7134	"value"	"hugeint"	128	0	0	0
7136	7134	"first"	"hugeint"	128	0	1	1
7137	7134	"last"	"hugeint"	128	0	1	2
7140	7139	"value"	"hugeint"	128	0	0	0
7141	7139	"first"	"hugeint"	128	0	1	1
7142	7139	"last"	"hugeint"	128	0	1	2
7143	7139	"stepsize"	"hugeint"	128	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 328 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
396	5514	7
395	5514	7
954	5514	7
396	5518	7
395	5518	7
954	5518	7
5523	5525	15
5523	5529	15
5523	5533	15
5523	5537	15
5523	5541	15
5523	5545	15
5523	5549	15
5523	5553	15
5523	5557	15
5523	5561	15
5523	5565	15
5523	5569	15
5523	5573	15
5523	5577	15
5523	5581	15
5523	5588	15
5623	5625	15
5623	5629	15
5623	5633	15
5623	5637	15
5623	5642	15
5623	5646	15
5623	5650	15
5623	5654	15
5623	5658	15
5623	5662	15
5623	5667	15
5623	5672	15
5623	5677	15
5682	5711	5
5692	5722	5
5682	5740	5
5692	5740	5
5751	5779	5
2003	5809	7
2001	5809	7
2002	5809	7
5478	5809	7
5487	5814	7
5485	5814	7
5486	5814	7
2005	5814	7
2001	5814	7
2003	5814	7
5446	5819	7
2047	5819	7
2046	5819	7
2049	5819	7
2048	5819	7
5446	5824	7
2088	5824	7
2086	5824	7
2090	5824	7
2083	5824	7
2079	5824	7
5446	5829	7
2047	5829	7
2046	5829	7
2049	5829	7
2092	5829	7
2091	5829	7
2048	5829	7
2093	5829	7
2094	5829	7
5446	5834	7
2081	5834	7
2079	5834	7
2084	5834	7
2080	5834	7
2083	5834	7
5446	5839	7
2047	5839	7
2046	5839	7
2049	5839	7
2017	5839	7
2016	5839	7
2048	5839	7
2018	5839	7
5456	5844	7
2047	5844	7
2046	5844	7
2049	5844	7
2048	5844	7
5446	5844	7
5456	5849	7
2081	5849	7
2079	5849	7
2084	5849	7
2103	5849	7
2102	5849	7
2104	5849	7
2080	5849	7
2083	5849	7
156	5849	7
32	5849	7
31	5849	7
33	5849	7
5456	5854	7
2088	5854	7
2086	5854	7
2090	5854	7
2083	5854	7
2079	5854	7
2087	5854	7
2103	5854	7
2102	5854	7
2104	5854	7
32	5854	7
31	5854	7
33	5854	7
5456	5859	7
2047	5859	7
2046	5859	7
2049	5859	7
2048	5859	7
2017	5859	7
2016	5859	7
2018	5859	7
5456	5864	7
2047	5864	7
2046	5864	7
2049	5864	7
2092	5864	7
2091	5864	7
2048	5864	7
2093	5864	7
5446	5869	7
2047	5869	7
2046	5869	7
2049	5869	7
2017	5869	7
2016	5869	7
2048	5869	7
2018	5869	7
5446	5874	7
2047	5874	7
2046	5874	7
2049	5874	7
2092	5874	7
2091	5874	7
2048	5874	7
2093	5874	7
2018	5879	7
2016	5879	7
2017	5879	7
2047	5879	7
2046	5879	7
2049	5879	7
2048	5879	7
2018	5884	7
2016	5884	7
2017	5884	7
2047	5884	7
2046	5884	7
2049	5884	7
2092	5884	7
2091	5884	7
2048	5884	7
2093	5884	7
2083	5889	7
2079	5889	7
2080	5889	7
2084	5889	7
5898	5912	5
100	5931	7
38	5931	7
36	5931	7
1097	5931	7
1083	5931	7
215	5931	7
1094	5931	7
216	5931	7
239	5931	7
33	5943	7
474	5943	7
100	5943	7
102	5943	7
35	5943	7
5938	5943	7
5984	5992	5
5994	6000	5
6030	6048	5
6068	6078	5
6385	6389	15
6387	6389	15
6387	6393	15
6385	6398	15
6375	6403	15
6377	6408	15
6379	6413	15
6380	6418	15
6382	6423	15
6384	6428	15
6384	6433	15
6379	6438	15
6385	6443	15
6385	6447	15
6385	6451	15
6375	6455	15
6385	6460	15
6385	6464	15
6385	6468	15
6385	6472	15
6385	6476	15
6385	6480	15
6385	6484	15
6385	6488	15
6385	6493	15
6385	6498	15
6385	6503	15
6385	6508	15
6385	6513	15
6385	6518	15
6385	6523	15
6385	6529	15
6385	6534	15
6385	6540	15
6385	6544	15
6385	6548	15
6385	6553	15
6385	6558	15
6385	6562	15
6385	6567	15
6385	6572	15
6385	6577	15
6582	6584	15
6582	6589	15
6582	6594	15
6582	6599	15
6582	6604	15
6582	6609	15
6582	6613	15
6582	6629	15
6582	6633	15
6582	6637	15
6582	6641	15
6582	6645	15
6582	6649	15
6582	6653	15
6582	6665	15
6582	6677	15
6685	6687	15
6685	6690	15
6685	6694	15
6718	6720	10
6718	6719	4
6723	6725	10
6726	6728	10
6723	6724	4
6731	6733	10
6734	6736	10
6731	6732	4
6791	6821	5
6823	6835	13
6833	6835	13
6824	6835	13
6825	6835	13
6826	6835	13
6827	6835	13
6828	6835	13
6829	6835	13
6830	6835	13
6831	6835	13
6832	6835	13
33	6837	7
109	6837	7
223	6837	7
99	6843	7
34	6843	7
239	6843	7
113	6843	7
33	6849	7
109	6849	7
100	6854	7
33	6854	7
355	6854	7
6823	6859	7
6833	6859	7
6824	6859	7
6825	6859	7
6826	6859	7
6828	6859	7
6829	6859	7
6830	6859	7
6831	6859	7
6832	6859	7
6837	6859	7
6843	6859	7
6849	6859	7
6854	6859	7
6859	6881	5
6859	6891	5
48	6891	5
56	6891	5
55	6891	5
51	6891	5
35	6891	5
33	6891	5
109	6891	5
6999	7006	10
6999	7005	4
7009	7017	10
7010	7017	10
7010	7019	10
7009	7016	4
7010	7016	4
7005	7018	11
7010	7018	11
7022	7036	10
7023	7036	10
7023	7038	10
7022	7035	4
7023	7035	4
7005	7037	11
7023	7037	11
7041	7048	10
7042	7048	10
7042	7050	10
7041	7047	4
7042	7047	4
7005	7049	11
7042	7049	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1457 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
29	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
30	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
31	"hash"	"hash"	"mkey"	0	1	false	false	false	0
32	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
33	"="	"="	"calc"	0	1	false	false	false	0
34	"<>"	"!="	"calc"	0	1	false	false	false	0
35	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
36	">"	">"	"calc"	0	1	false	false	false	0
37	">="	">="	"calc"	0	1	false	false	false	0
38	"<"	"<"	"calc"	0	1	false	false	false	0
39	"<="	"<="	"calc"	0	1	false	false	false	0
43	"in"	"in"	"calc"	0	1	false	false	false	0
44	"identity"	"identity"	"calc"	0	1	false	false	false	0
45	"rowid"	"identity"	"calc"	0	1	false	false	false	0
46	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
49	"sql_min"	"min"	"calc"	0	1	false	false	false	0
50	"sql_max"	"max"	"calc"	0	1	false	false	false	0
51	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
80	"mod"	"%"	"calc"	0	1	false	false	false	0
81	"mod"	"%"	"calc"	0	1	false	false	false	0
82	"mod"	"%"	"calc"	0	1	false	false	false	0
83	"mod"	"%"	"calc"	0	1	false	false	false	0
84	"mod"	"%"	"calc"	0	1	false	false	false	0
94	"diff"	"diff"	"sql"	0	6	false	false	false	0
95	"diff"	"diff"	"sql"	0	6	false	false	false	0
96	"rank"	"rank"	"sql"	0	6	false	false	false	0
97	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
98	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
99	"and"	"and"	"calc"	0	1	false	false	false	0
100	"or"	"or"	"calc"	0	1	false	false	false	0
101	"xor"	"xor"	"calc"	0	1	false	false	false	0
102	"not"	"not"	"calc"	0	1	false	false	false	0
103	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
104	"sql_div"	"/"	"calc"	0	1	false	false	false	0
105	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
106	"sql_div"	"/"	"calc"	0	1	false	false	false	0
107	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
108	"sql_div"	"/"	"calc"	0	1	false	false	false	0
109	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
110	"sql_div"	"/"	"calc"	0	1	false	false	false	0
111	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
112	"sql_div"	"/"	"calc"	0	1	false	false	false	0
113	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
114	"sql_div"	"/"	"calc"	0	1	false	false	false	0
115	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
116	"sql_div"	"/"	"calc"	0	1	false	false	false	0
117	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
118	"sql_div"	"/"	"calc"	0	1	false	false	false	0
119	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
120	"sql_div"	"/"	"calc"	0	1	false	false	false	0
121	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
122	"sql_div"	"/"	"calc"	0	1	false	false	false	0
123	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
124	"sql_add"	"+"	"calc"	0	1	false	false	false	0
125	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
126	"sql_div"	"/"	"calc"	0	1	false	false	false	0
127	"bit_and"	"and"	"calc"	0	1	false	false	false	0
128	"bit_or"	"or"	"calc"	0	1	false	false	false	0
129	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
130	"bit_not"	"not"	"calc"	0	1	false	false	false	0
131	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
132	"right_shift"	">>"	"calc"	0	1	false	false	false	0
133	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
134	"abs"	"abs"	"calc"	0	1	false	false	false	0
135	"sign"	"sign"	"calc"	0	1	false	false	false	0
136	"scale_up"	"*"	"calc"	0	1	false	false	false	0
137	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
138	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
139	"sql_add"	"+"	"calc"	0	1	false	false	false	0
140	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
141	"sql_div"	"/"	"calc"	0	1	false	false	false	0
142	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
143	"sql_add"	"+"	"calc"	0	1	false	false	false	0
144	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
145	"sql_div"	"/"	"calc"	0	1	false	false	false	0
146	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
147	"sql_add"	"+"	"calc"	0	1	false	false	false	0
148	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
149	"sql_div"	"/"	"calc"	0	1	false	false	false	0
150	"bit_and"	"and"	"calc"	0	1	false	false	false	0
151	"bit_or"	"or"	"calc"	0	1	false	false	false	0
152	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
153	"bit_not"	"not"	"calc"	0	1	false	false	false	0
154	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
155	"right_shift"	">>"	"calc"	0	1	false	false	false	0
156	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
157	"abs"	"abs"	"calc"	0	1	false	false	false	0
158	"sign"	"sign"	"calc"	0	1	false	false	false	0
159	"scale_up"	"*"	"calc"	0	1	false	false	false	0
160	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
161	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
162	"sql_add"	"+"	"calc"	0	1	false	false	false	0
163	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
164	"sql_div"	"/"	"calc"	0	1	false	false	false	0
165	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
166	"sql_add"	"+"	"calc"	0	1	false	false	false	0
167	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
168	"sql_div"	"/"	"calc"	0	1	false	false	false	0
169	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
170	"sql_add"	"+"	"calc"	0	1	false	false	false	0
171	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
172	"sql_div"	"/"	"calc"	0	1	false	false	false	0
173	"bit_and"	"and"	"calc"	0	1	false	false	false	0
174	"bit_or"	"or"	"calc"	0	1	false	false	false	0
175	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
176	"bit_not"	"not"	"calc"	0	1	false	false	false	0
177	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
178	"right_shift"	">>"	"calc"	0	1	false	false	false	0
179	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
180	"abs"	"abs"	"calc"	0	1	false	false	false	0
181	"sign"	"sign"	"calc"	0	1	false	false	false	0
182	"scale_up"	"*"	"calc"	0	1	false	false	false	0
183	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
184	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
185	"sql_add"	"+"	"calc"	0	1	false	false	false	0
186	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
187	"sql_div"	"/"	"calc"	0	1	false	false	false	0
188	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
189	"sql_add"	"+"	"calc"	0	1	false	false	false	0
190	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
191	"sql_div"	"/"	"calc"	0	1	false	false	false	0
192	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
193	"sql_add"	"+"	"calc"	0	1	false	false	false	0
194	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
195	"sql_div"	"/"	"calc"	0	1	false	false	false	0
196	"bit_and"	"and"	"calc"	0	1	false	false	false	0
197	"bit_or"	"or"	"calc"	0	1	false	false	false	0
198	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
199	"bit_not"	"not"	"calc"	0	1	false	false	false	0
200	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
201	"right_shift"	">>"	"calc"	0	1	false	false	false	0
202	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
203	"abs"	"abs"	"calc"	0	1	false	false	false	0
204	"sign"	"sign"	"calc"	0	1	false	false	false	0
205	"scale_up"	"*"	"calc"	0	1	false	false	false	0
206	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
207	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
208	"sql_add"	"+"	"calc"	0	1	false	false	false	0
209	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
210	"sql_div"	"/"	"calc"	0	1	false	false	false	0
211	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
212	"sql_add"	"+"	"calc"	0	1	false	false	false	0
213	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
214	"sql_div"	"/"	"calc"	0	1	false	false	false	0
215	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
216	"sql_add"	"+"	"calc"	0	1	false	false	false	0
217	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
218	"sql_div"	"/"	"calc"	0	1	false	false	false	0
219	"bit_and"	"and"	"calc"	0	1	false	false	false	0
220	"bit_or"	"or"	"calc"	0	1	false	false	false	0
221	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
222	"bit_not"	"not"	"calc"	0	1	false	false	false	0
223	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
224	"right_shift"	">>"	"calc"	0	1	false	false	false	0
225	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
226	"abs"	"abs"	"calc"	0	1	false	false	false	0
227	"sign"	"sign"	"calc"	0	1	false	false	false	0
228	"scale_up"	"*"	"calc"	0	1	false	false	false	0
229	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
230	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
231	"sql_add"	"+"	"calc"	0	1	false	false	false	0
232	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
233	"sql_div"	"/"	"calc"	0	1	false	false	false	0
234	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
235	"sql_add"	"+"	"calc"	0	1	false	false	false	0
236	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
237	"sql_div"	"/"	"calc"	0	1	false	false	false	0
238	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
239	"sql_add"	"+"	"calc"	0	1	false	false	false	0
240	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
241	"sql_div"	"/"	"calc"	0	1	false	false	false	0
242	"bit_and"	"and"	"calc"	0	1	false	false	false	0
243	"bit_or"	"or"	"calc"	0	1	false	false	false	0
244	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
245	"bit_not"	"not"	"calc"	0	1	false	false	false	0
246	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
247	"right_shift"	">>"	"calc"	0	1	false	false	false	0
248	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
249	"abs"	"abs"	"calc"	0	1	false	false	false	0
250	"sign"	"sign"	"calc"	0	1	false	false	false	0
251	"scale_up"	"*"	"calc"	0	1	false	false	false	0
252	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
253	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
254	"sql_add"	"+"	"calc"	0	1	false	false	false	0
255	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
256	"sql_div"	"/"	"calc"	0	1	false	false	false	0
257	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
258	"sql_add"	"+"	"calc"	0	1	false	false	false	0
259	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
260	"sql_div"	"/"	"calc"	0	1	false	false	false	0
261	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
262	"sql_add"	"+"	"calc"	0	1	false	false	false	0
263	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
264	"sql_div"	"/"	"calc"	0	1	false	false	false	0
265	"bit_and"	"and"	"calc"	0	1	false	false	false	0
266	"bit_or"	"or"	"calc"	0	1	false	false	false	0
267	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
268	"bit_not"	"not"	"calc"	0	1	false	false	false	0
269	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
270	"right_shift"	">>"	"calc"	0	1	false	false	false	0
271	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
272	"abs"	"abs"	"calc"	0	1	false	false	false	0
273	"sign"	"sign"	"calc"	0	1	false	false	false	0
274	"scale_up"	"*"	"calc"	0	1	false	false	false	0
275	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
276	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
277	"sql_add"	"+"	"calc"	0	1	false	false	false	0
278	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
279	"sql_div"	"/"	"calc"	0	1	false	false	false	0
280	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
281	"sql_add"	"+"	"calc"	0	1	false	false	false	0
282	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
283	"sql_div"	"/"	"calc"	0	1	false	false	false	0
284	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
285	"sql_add"	"+"	"calc"	0	1	false	false	false	0
286	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
287	"sql_div"	"/"	"calc"	0	1	false	false	false	0
288	"bit_and"	"and"	"calc"	0	1	false	false	false	0
289	"bit_or"	"or"	"calc"	0	1	false	false	false	0
290	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
291	"bit_not"	"not"	"calc"	0	1	false	false	false	0
292	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
293	"right_shift"	">>"	"calc"	0	1	false	false	false	0
294	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
295	"abs"	"abs"	"calc"	0	1	false	false	false	0
296	"sign"	"sign"	"calc"	0	1	false	false	false	0
297	"scale_up"	"*"	"calc"	0	1	false	false	false	0
298	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
299	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
300	"sql_add"	"+"	"calc"	0	1	false	false	false	0
301	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
302	"sql_div"	"/"	"calc"	0	1	false	false	false	0
303	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
304	"sql_add"	"+"	"calc"	0	1	false	false	false	0
305	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
306	"sql_div"	"/"	"calc"	0	1	false	false	false	0
307	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
308	"sql_add"	"+"	"calc"	0	1	false	false	false	0
309	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
310	"sql_div"	"/"	"calc"	0	1	false	false	false	0
311	"bit_and"	"and"	"calc"	0	1	false	false	false	0
312	"bit_or"	"or"	"calc"	0	1	false	false	false	0
313	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
314	"bit_not"	"not"	"calc"	0	1	false	false	false	0
315	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
316	"right_shift"	">>"	"calc"	0	1	false	false	false	0
317	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
318	"abs"	"abs"	"calc"	0	1	false	false	false	0
319	"sign"	"sign"	"calc"	0	1	false	false	false	0
320	"scale_up"	"*"	"calc"	0	1	false	false	false	0
321	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
322	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
323	"sql_add"	"+"	"calc"	0	1	false	false	false	0
324	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
325	"sql_div"	"/"	"calc"	0	1	false	false	false	0
326	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
327	"sql_add"	"+"	"calc"	0	1	false	false	false	0
328	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
329	"sql_div"	"/"	"calc"	0	1	false	false	false	0
330	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
331	"sql_add"	"+"	"calc"	0	1	false	false	false	0
332	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
333	"sql_div"	"/"	"calc"	0	1	false	false	false	0
334	"bit_and"	"and"	"calc"	0	1	false	false	false	0
335	"bit_or"	"or"	"calc"	0	1	false	false	false	0
336	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
337	"bit_not"	"not"	"calc"	0	1	false	false	false	0
338	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
339	"right_shift"	">>"	"calc"	0	1	false	false	false	0
340	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
341	"abs"	"abs"	"calc"	0	1	false	false	false	0
342	"sign"	"sign"	"calc"	0	1	false	false	false	0
343	"scale_up"	"*"	"calc"	0	1	false	false	false	0
344	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
345	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
346	"sql_add"	"+"	"calc"	0	1	false	false	false	0
347	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
348	"sql_div"	"/"	"calc"	0	1	false	false	false	0
349	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
350	"sql_add"	"+"	"calc"	0	1	false	false	false	0
351	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
352	"sql_div"	"/"	"calc"	0	1	false	false	false	0
353	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
354	"sql_add"	"+"	"calc"	0	1	false	false	false	0
355	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
356	"sql_div"	"/"	"calc"	0	1	false	false	false	0
357	"bit_and"	"and"	"calc"	0	1	false	false	false	0
358	"bit_or"	"or"	"calc"	0	1	false	false	false	0
359	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
360	"bit_not"	"not"	"calc"	0	1	false	false	false	0
361	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
362	"right_shift"	">>"	"calc"	0	1	false	false	false	0
363	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
364	"abs"	"abs"	"calc"	0	1	false	false	false	0
365	"sign"	"sign"	"calc"	0	1	false	false	false	0
366	"scale_up"	"*"	"calc"	0	1	false	false	false	0
367	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
368	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
369	"sql_add"	"+"	"calc"	0	1	false	false	false	0
370	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
371	"sql_div"	"/"	"calc"	0	1	false	false	false	0
372	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
373	"sql_add"	"+"	"calc"	0	1	false	false	false	0
374	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
375	"sql_div"	"/"	"calc"	0	1	false	false	false	0
376	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
377	"sql_add"	"+"	"calc"	0	1	false	false	false	0
378	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
379	"sql_div"	"/"	"calc"	0	1	false	false	false	0
380	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
381	"abs"	"abs"	"calc"	0	1	false	false	false	0
382	"sign"	"sign"	"calc"	0	1	false	false	false	0
383	"scale_up"	"*"	"calc"	0	1	false	false	false	0
384	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
385	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
386	"sql_add"	"+"	"calc"	0	1	false	false	false	0
387	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
388	"sql_div"	"/"	"calc"	0	1	false	false	false	0
389	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
390	"sql_add"	"+"	"calc"	0	1	false	false	false	0
391	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
392	"sql_div"	"/"	"calc"	0	1	false	false	false	0
393	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
394	"sql_add"	"+"	"calc"	0	1	false	false	false	0
395	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
396	"sql_div"	"/"	"calc"	0	1	false	false	false	0
397	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
398	"abs"	"abs"	"calc"	0	1	false	false	false	0
399	"sign"	"sign"	"calc"	0	1	false	false	false	0
400	"scale_up"	"*"	"calc"	0	1	false	false	false	0
401	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
402	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
403	"sql_add"	"+"	"calc"	0	1	false	false	false	0
404	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
405	"sql_div"	"/"	"calc"	0	1	false	false	false	0
406	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
407	"sql_add"	"+"	"calc"	0	1	false	false	false	0
408	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
409	"sql_div"	"/"	"calc"	0	1	false	false	false	0
410	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
411	"sql_add"	"+"	"calc"	0	1	false	false	false	0
412	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
413	"sql_div"	"/"	"calc"	0	1	false	false	false	0
414	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
415	"abs"	"abs"	"calc"	0	1	false	false	false	0
416	"sign"	"sign"	"calc"	0	1	false	false	false	0
417	"scale_up"	"*"	"calc"	0	1	false	false	false	0
418	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
419	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
420	"sql_add"	"+"	"calc"	0	1	false	false	false	0
421	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
422	"sql_div"	"/"	"calc"	0	1	false	false	false	0
423	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
424	"abs"	"abs"	"calc"	0	1	false	false	false	0
425	"sign"	"sign"	"calc"	0	1	false	false	false	0
426	"scale_up"	"*"	"calc"	0	1	false	false	false	0
427	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
428	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
429	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
430	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
431	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
432	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
433	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
435	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
459	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
460	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
461	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
462	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
463	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
464	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
465	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
466	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
467	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
468	"round"	"round"	"sql"	0	1	false	false	false	0
469	"round"	"round"	"sql"	0	1	false	false	false	0
470	"round"	"round"	"sql"	0	1	false	false	false	0
471	"round"	"round"	"sql"	0	1	false	false	false	0
472	"round"	"round"	"sql"	0	1	false	false	false	0
473	"round"	"round"	"sql"	0	1	false	false	false	0
474	"round"	"round"	"sql"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"power"	"pow"	"mmath"	0	1	false	false	false	0
917	"floor"	"floor"	"mmath"	0	1	false	false	false	0
918	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
919	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
920	"sin"	"sin"	"mmath"	0	1	false	false	false	0
921	"cos"	"cos"	"mmath"	0	1	false	false	false	0
922	"tan"	"tan"	"mmath"	0	1	false	false	false	0
923	"asin"	"asin"	"mmath"	0	1	false	false	false	0
924	"acos"	"acos"	"mmath"	0	1	false	false	false	0
925	"atan"	"atan"	"mmath"	0	1	false	false	false	0
926	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
927	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
928	"cot"	"cot"	"mmath"	0	1	false	false	false	0
929	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
930	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
931	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
932	"exp"	"exp"	"mmath"	0	1	false	false	false	0
933	"log"	"log"	"mmath"	0	1	false	false	false	0
934	"log10"	"log10"	"mmath"	0	1	false	false	false	0
935	"power"	"pow"	"mmath"	0	1	false	false	false	0
936	"floor"	"floor"	"mmath"	0	1	false	false	false	0
937	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
938	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
939	"sin"	"sin"	"mmath"	0	1	false	false	false	0
940	"cos"	"cos"	"mmath"	0	1	false	false	false	0
941	"tan"	"tan"	"mmath"	0	1	false	false	false	0
942	"asin"	"asin"	"mmath"	0	1	false	false	false	0
943	"acos"	"acos"	"mmath"	0	1	false	false	false	0
944	"atan"	"atan"	"mmath"	0	1	false	false	false	0
945	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
946	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
947	"cot"	"cot"	"mmath"	0	1	false	false	false	0
948	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
949	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
950	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
951	"exp"	"exp"	"mmath"	0	1	false	false	false	0
952	"log"	"log"	"mmath"	0	1	false	false	false	0
953	"log10"	"log10"	"mmath"	0	1	false	false	false	0
954	"pi"	"pi"	"mmath"	0	1	false	false	false	0
955	"rand"	"rand"	"mmath"	0	1	true	false	false	0
956	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
957	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
958	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
959	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
960	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
961	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
962	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
963	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
964	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
965	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
966	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
967	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
968	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
969	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
970	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
971	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
972	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
973	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
974	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
975	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
976	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
977	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
978	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
979	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
980	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
981	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
982	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
983	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
984	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
985	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
986	"year"	"year"	"mtime"	0	1	false	false	false	0
987	"month"	"month"	"mtime"	0	1	false	false	false	0
988	"day"	"day"	"mtime"	0	1	false	false	false	0
989	"hour"	"hours"	"mtime"	0	1	false	false	false	0
990	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
991	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
992	"hour"	"hours"	"mtime"	0	1	false	false	false	0
993	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
994	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
995	"year"	"year"	"mtime"	0	1	false	false	false	0
996	"month"	"month"	"mtime"	0	1	false	false	false	0
997	"day"	"day"	"mtime"	0	1	false	false	false	0
998	"hour"	"hours"	"mtime"	0	1	false	false	false	0
999	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1000	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1001	"year"	"year"	"mtime"	0	1	false	false	false	0
1002	"month"	"month"	"mtime"	0	1	false	false	false	0
1003	"day"	"day"	"mtime"	0	1	false	false	false	0
1004	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1005	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1006	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1007	"year"	"year"	"mtime"	0	1	false	false	false	0
1008	"month"	"month"	"mtime"	0	1	false	false	false	0
1009	"day"	"day"	"mtime"	0	1	false	false	false	0
1010	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1011	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1012	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1013	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1014	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1015	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1016	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1017	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1018	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1019	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1020	"restart"	"restart"	"sql"	0	1	false	false	false	0
1021	"index"	"index"	"calc"	0	1	false	false	false	0
1022	"index"	"index"	"calc"	0	1	false	false	false	0
1023	"index"	"index"	"calc"	0	1	false	false	false	0
1024	"strings"	"strings"	"calc"	0	1	false	false	false	0
1025	"locate"	"locate"	"str"	0	1	false	false	false	0
1026	"locate"	"locate"	"str"	0	1	false	false	false	0
1027	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1028	"substring"	"substring"	"str"	0	1	false	false	false	0
1029	"substring"	"substring"	"str"	0	1	false	false	false	0
1030	"like"	"like"	"algebra"	0	1	false	false	false	0
1031	"like"	"like"	"algebra"	0	1	false	false	false	0
1032	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1033	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1034	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1035	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1036	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1037	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1038	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1039	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1040	"concat"	"+"	"calc"	0	1	false	false	false	0
1041	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1042	"code"	"unicode"	"str"	0	1	false	false	false	0
1043	"length"	"stringlength"	"str"	0	1	false	false	false	0
1044	"right"	"stringright"	"str"	0	1	false	false	false	0
1045	"left"	"stringleft"	"str"	0	1	false	false	false	0
1046	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1047	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1048	"lower"	"toLower"	"str"	0	1	false	false	false	0
1049	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1050	"trim"	"trim"	"str"	0	1	false	false	false	0
1051	"trim"	"trim"	"str"	0	1	false	false	false	0
1052	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1053	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1054	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1055	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1056	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1057	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1058	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1059	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1060	"insert"	"insert"	"str"	0	1	false	false	false	0
1061	"replace"	"replace"	"str"	0	1	false	false	false	0
1062	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1063	"space"	"space"	"str"	0	1	false	false	false	0
1064	"char_length"	"length"	"str"	0	1	false	false	false	0
1065	"character_length"	"length"	"str"	0	1	false	false	false	0
1066	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1067	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1068	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1069	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1070	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1071	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1072	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1073	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1074	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1075	"index"	"index"	"calc"	0	1	false	false	false	0
1076	"index"	"index"	"calc"	0	1	false	false	false	0
1077	"index"	"index"	"calc"	0	1	false	false	false	0
1078	"strings"	"strings"	"calc"	0	1	false	false	false	0
1079	"locate"	"locate"	"str"	0	1	false	false	false	0
1080	"locate"	"locate"	"str"	0	1	false	false	false	0
1081	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1082	"substring"	"substring"	"str"	0	1	false	false	false	0
1083	"substring"	"substring"	"str"	0	1	false	false	false	0
1084	"like"	"like"	"algebra"	0	1	false	false	false	0
1085	"like"	"like"	"algebra"	0	1	false	false	false	0
1086	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1087	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1088	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1089	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1090	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1091	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1092	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1093	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1094	"concat"	"+"	"calc"	0	1	false	false	false	0
1095	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1096	"code"	"unicode"	"str"	0	1	false	false	false	0
1097	"length"	"stringlength"	"str"	0	1	false	false	false	0
1098	"right"	"stringright"	"str"	0	1	false	false	false	0
1099	"left"	"stringleft"	"str"	0	1	false	false	false	0
1100	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1101	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1102	"lower"	"toLower"	"str"	0	1	false	false	false	0
1103	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1104	"trim"	"trim"	"str"	0	1	false	false	false	0
1105	"trim"	"trim"	"str"	0	1	false	false	false	0
1106	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1107	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1108	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1109	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1110	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1111	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1112	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1113	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1114	"insert"	"insert"	"str"	0	1	false	false	false	0
1115	"replace"	"replace"	"str"	0	1	false	false	false	0
1116	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1117	"space"	"space"	"str"	0	1	false	false	false	0
1118	"char_length"	"length"	"str"	0	1	false	false	false	0
1119	"character_length"	"length"	"str"	0	1	false	false	false	0
1120	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1121	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1122	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1123	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1124	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1125	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1126	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1127	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1128	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1129	"index"	"index"	"calc"	0	1	false	false	false	0
1130	"index"	"index"	"calc"	0	1	false	false	false	0
1131	"index"	"index"	"calc"	0	1	false	false	false	0
1132	"strings"	"strings"	"calc"	0	1	false	false	false	0
1133	"locate"	"locate"	"str"	0	1	false	false	false	0
1134	"locate"	"locate"	"str"	0	1	false	false	false	0
1135	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1136	"substring"	"substring"	"str"	0	1	false	false	false	0
1137	"substring"	"substring"	"str"	0	1	false	false	false	0
1138	"like"	"like"	"algebra"	0	1	false	false	false	0
1139	"like"	"like"	"algebra"	0	1	false	false	false	0
1140	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1141	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1142	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1143	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1144	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1145	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1146	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1147	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1148	"concat"	"+"	"calc"	0	1	false	false	false	0
1149	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1150	"code"	"unicode"	"str"	0	1	false	false	false	0
1151	"length"	"stringlength"	"str"	0	1	false	false	false	0
1152	"right"	"stringright"	"str"	0	1	false	false	false	0
1153	"left"	"stringleft"	"str"	0	1	false	false	false	0
1154	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1155	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1156	"lower"	"toLower"	"str"	0	1	false	false	false	0
1157	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1158	"trim"	"trim"	"str"	0	1	false	false	false	0
1159	"trim"	"trim"	"str"	0	1	false	false	false	0
1160	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1161	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1162	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1163	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1164	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1165	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1166	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1167	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1168	"insert"	"insert"	"str"	0	1	false	false	false	0
1169	"replace"	"replace"	"str"	0	1	false	false	false	0
1170	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1171	"space"	"space"	"str"	0	1	false	false	false	0
1172	"char_length"	"length"	"str"	0	1	false	false	false	0
1173	"character_length"	"length"	"str"	0	1	false	false	false	0
1174	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1175	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1176	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1177	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1178	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1179	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1180	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1181	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1182	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1183	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1184	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
28	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
40	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
41	"exist"	"exist"	"aggr"	0	3	false	false	false	0
42	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
47	"min"	"min"	"aggr"	0	3	false	false	false	0
48	"max"	"max"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"sum"	"sum"	"aggr"	0	3	false	false	false	0
61	"sum"	"sum"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
68	"prod"	"prod"	"aggr"	0	3	false	false	false	0
69	"prod"	"prod"	"aggr"	0	3	false	false	false	0
70	"prod"	"prod"	"aggr"	0	3	false	false	false	0
71	"prod"	"prod"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"prod"	"prod"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"prod"	"prod"	"aggr"	0	3	false	false	false	0
89	"sum"	"sum"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"avg"	"avg"	"aggr"	0	3	false	false	false	0
92	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
93	"count"	"count"	"aggr"	0	3	false	false	false	0
5467	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5470	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5476	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5496	"like"	"create filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5501	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5506	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5510	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5514	"degrees"	"create function degrees(r double)\nreturns double\n return r*180/pi();"	"user"	2	1	false	false	false	2000
5518	"radians"	"create function radians(d double)\nreturns double\n return d*pi()/180;"	"user"	2	1	false	false	false	2000
5522	"times"	"create procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5525	"getanchor"	"create function getanchor( theurl url ) returns string\n external name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5529	"getbasename"	"create function getbasename(theurl url) returns string\n external name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5533	"getcontent"	"create function getcontent(theurl url) returns string\n external name url.""getContent"";"	"url"	1	1	false	false	false	2000
5537	"getcontext"	"create function getcontext(theurl url) returns string\n external name url.""getContext"";"	"url"	1	1	false	false	false	2000
5541	"getdomain"	"create function getdomain(theurl url) returns string\n external name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5545	"getextension"	"create function getextension(theurl url) returns string\n external name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5549	"getfile"	"create function getfile(theurl url) returns string\n external name url.""getFile"";"	"url"	1	1	false	false	false	2000
5553	"gethost"	"create function gethost(theurl url) returns string\n external name url.""getHost"";"	"url"	1	1	false	false	false	2000
5557	"getport"	"create function getport(theurl url) returns string\n external name url.""getPort"";"	"url"	1	1	false	false	false	2000
5561	"getprotocol"	"create function getprotocol(theurl url) returns string\n external name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5565	"getquery"	"create function getquery(theurl url) returns string\n external name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5569	"getuser"	"create function getuser(theurl url) returns string\n external name url.""getUser"";"	"url"	1	1	false	false	false	2000
5573	"getroboturl"	"create function getroboturl(theurl url) returns string\n external name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5577	"isaurl"	"create function isaurl(theurl url) returns bool\n external name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5581	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5588	"newurl"	"create function newurl(protocol string, hostname string, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5594	"str_to_date"	"create function str_to_date(s string, format string) returns date\n external name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5599	"date_to_str"	"create function date_to_str(d date, format string) returns string\n external name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5604	"str_to_time"	"create function str_to_time(s string, format string) returns time\n external name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5609	"time_to_str"	"create function time_to_str(d time, format string) returns string\n external name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5614	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n external name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5619	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n external name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5625	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n external name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5629	"host"	"create function ""host"" (p inet) returns clob\n external name inet.""host"";"	"inet"	1	1	false	false	false	2000
5633	"masklen"	"create function ""masklen"" (p inet) returns int\n external name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5637	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n external name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5642	"netmask"	"create function ""netmask"" (p inet) returns inet\n external name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5646	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n external name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5650	"network"	"create function ""network"" (p inet) returns inet\n external name inet.""network"";"	"inet"	1	1	false	false	false	2000
5654	"text"	"create function ""text"" (p inet) returns clob\n external name inet.""text"";"	"inet"	1	1	false	false	false	2000
5658	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n external name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5662	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n external name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5667	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n external name inet."">>"";"	"inet"	1	1	false	false	false	2000
5672	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5677	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet."">>="";"	"inet"	1	1	false	false	false	2000
5682	"querylog_catalog"	"create function sys.querylog_catalog()\nreturns table(\n id oid,\n owner string,\n defined timestamp,\n query string,\n pipe string,\n ""plan"" string, \n mal int, \n optimize bigint \n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5692	"querylog_calls"	"create function sys.querylog_calls()\nreturns table(\n id oid, \n ""start"" timestamp, \n ""stop"" timestamp, \n arguments string, \n tuples bigint, \n run bigint, \n ship bigint, \n cpu int, \n io int \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5742	"querylog_empty"	"create procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5744	"querylog_enable"	"create procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5746	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5749	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5751	"tracelog"	"create function sys.tracelog()\n returns table (\n event integer, \n clk varchar(20), \n pc varchar(50), \n thread int, \n ticks bigint, \n rrsmb bigint, \n vmmb bigint, \n reads bigint, \n writes bigint, \n minflt bigint, \n majflt bigint, \n nvcsw bigint, \n stmt string \n )\n external name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5781	"epoch"	"create function sys.""epoch""(sec bigint) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5785	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5789	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5793	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5797	"shrink"	"create procedure shrink(sys string, tab string)\n external name sql.shrink;"	"sql"	1	2	true	false	false	2000
5801	"reuse"	"create procedure reuse(sys string, tab string)\n external name sql.reuse;"	"sql"	1	2	true	false	false	2000
5805	"vacuum"	"create procedure vacuum(sys string, tab string)\n external name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5809	"dependencies_schemas_on_users"	"create function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5814	"dependencies_owners_on_schemas"	"create function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5819	"dependencies_tables_on_views"	"create function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5824	"dependencies_tables_on_indexes"	"create function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5829	"dependencies_tables_on_triggers"	"create function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5834	"dependencies_tables_on_foreignkeys"	"create function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5839	"dependencies_tables_on_functions"	"create function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5844	"dependencies_columns_on_views"	"create function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5849	"dependencies_columns_on_keys"	"create function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5854	"dependencies_columns_on_indexes"	"create function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5859	"dependencies_columns_on_functions"	"create function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5864	"dependencies_columns_on_triggers"	"create function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5869	"dependencies_views_on_functions"	"create function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5874	"dependencies_views_on_triggers"	"create function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5879	"dependencies_functions_on_functions"	"create function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5884	"dependencies_functions_os_triggers"	"create function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5889	"dependencies_keys_on_foreignkeys"	"create function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5894	"password_hash"	"create function sys.password_hash (username string)\n returns string\n external name sql.password;"	"sql"	1	1	false	false	false	2000
5898	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5914	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5917	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5921	"settimeout"	"create procedure sys.settimeout(""query"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5924	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5928	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n external name sql.setsession;"	"sql"	1	2	true	false	false	2000
5931	"ms_stuff"	"create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n declare res varchar(32), aux varchar(32);\n declare ofset int;\n if ( st < 0 or st > length(s1))\n then return '';\n end if;\n set ofset = 1;\n set res = substring(s1,ofset,st-1);\n set res = res || s3;\n set ofset = st + len;\n set aux = substring(s1,ofset,length(s1)-ofset+1);\n set res = res || aux;\n return res;\nend;"	"user"	2	1	false	false	false	2000
5938	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5943	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n if (truncat = 0)\n then return round(num, prc);\n else return ms_trunc(num, prc);\n end if;\nend;"	"user"	2	1	false	false	false	2000
5949	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5955	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5960	"zorder_encode"	"create function zorder_encode(x integer, y integer) returns oid\n external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5965	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5969	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5973	"optimizer_stats"	"create function sys.optimizer_stats ()\n returns table (rewrite string, count int)\n external name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5977	"querycache"	"create function sys.querycache()\n returns table (query string, count int)\n external name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5981	"querylog"	"create procedure sys.querylog(filename string)\n external name sql.logfile;"	"sql"	1	2	true	false	false	2000
5984	"optimizers"	"create function sys.optimizers ()\n returns table (name string, def string, status string)\n external name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5994	"environment"	"create function sys.environment()\n returns table (""name"" string, value string)\n external name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6002	"bbp"	"create function sys.bbp ()\n returns table (id int, name string, \n ttype string, count bigint, refcnt int, lrefcnt int,\n location string, heat int, dirty string,\n status string, kind string)\n external name bbp.get;"	"bbp"	1	5	false	false	false	2000
6015	"malfunctions"	"create function sys.malfunctions()\n returns table(""signature"" string, ""address"" string, ""comment"" string)\n external name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
6020	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n external name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6024	"flush_log"	"create procedure sys.flush_log ()\n external name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6026	"debug"	"create function sys.debug(debug int) returns integer\n external name mdb.""setDebug"";"	"mdb"	1	1	false	false	false	2000
6030	"queue"	"create function sys.queue()\nreturns table(\n qtag bigint,\n ""user"" string,\n started timestamp,\n estimate timestamp,\n progress int,\n status string,\n tag oid,\n query string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6050	"pause"	"create procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6053	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6056	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6059	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6062	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6065	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6068	"rejects"	"create function sys.rejects()\nreturns table(\n rowid bigint,\n fldid int,\n ""message"" string,\n ""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6080	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6082	"stddev_samp"	"create aggregate stddev_samp(val tinyint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6086	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6090	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6094	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6098	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6102	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6106	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6110	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6114	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6118	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6122	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6126	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6130	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6134	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6138	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6142	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6146	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6150	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6154	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6158	"var_samp"	"create aggregate var_samp(val smallint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6162	"var_samp"	"create aggregate var_samp(val integer) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6166	"var_samp"	"create aggregate var_samp(val bigint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6170	"var_samp"	"create aggregate var_samp(val real) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6174	"var_samp"	"create aggregate var_samp(val double) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6178	"var_samp"	"create aggregate var_samp(val date) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6182	"var_samp"	"create aggregate var_samp(val time) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6186	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6190	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6194	"var_pop"	"create aggregate var_pop(val smallint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6198	"var_pop"	"create aggregate var_pop(val integer) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6202	"var_pop"	"create aggregate var_pop(val bigint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6206	"var_pop"	"create aggregate var_pop(val real) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6210	"var_pop"	"create aggregate var_pop(val double) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6214	"var_pop"	"create aggregate var_pop(val date) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6218	"var_pop"	"create aggregate var_pop(val time) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6222	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6226	"median"	"create aggregate median(val tinyint) returns tinyint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6230	"median"	"create aggregate median(val smallint) returns smallint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6234	"median"	"create aggregate median(val integer) returns integer\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6238	"median"	"create aggregate median(val bigint) returns bigint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6242	"median"	"create aggregate median(val decimal) returns decimal\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6246	"median"	"create aggregate median(val real) returns real\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6250	"median"	"create aggregate median(val double) returns double\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6254	"median"	"create aggregate median(val date) returns date\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6258	"median"	"create aggregate median(val time) returns time\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6262	"median"	"create aggregate median(val timestamp) returns timestamp\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6266	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6271	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6276	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6281	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6286	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6291	"quantile"	"create aggregate quantile(val real, q double) returns real\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6296	"quantile"	"create aggregate quantile(val double, q double) returns double\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6301	"quantile"	"create aggregate quantile(val date, q double) returns date\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6306	"quantile"	"create aggregate quantile(val time, q double) returns time\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6311	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6316	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6321	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6326	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6331	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6336	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6341	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6346	"stddev_samp"	"create aggregate stddev_samp(val hugeint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6350	"stddev_pop"	"create aggregate stddev_pop(val hugeint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6354	"var_samp"	"create aggregate var_samp(val hugeint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6358	"var_pop"	"create aggregate var_pop(val hugeint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6362	"median"	"create aggregate median(val hugeint) returns hugeint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6366	"quantile"	"create aggregate quantile(val hugeint, q double) returns hugeint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6371	"corr"	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6389	"mbr"	"create function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6393	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6398	"geomfromtext"	"create function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6403	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6408	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6413	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6418	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6423	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6428	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6433	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6438	"polygonfromtext"	"create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6443	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6447	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6451	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6455	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6460	"dimension"	"create function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6464	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6468	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6472	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6476	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6480	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6484	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6488	"equals"	"create function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6493	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6498	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6503	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6508	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6513	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6518	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6523	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6529	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6534	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6540	"area"	"create function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6544	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6548	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6553	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6558	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6562	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6567	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6572	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6577	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6584	"filter"	"create function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6581
6589	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6581
6594	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6581
6599	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6581
6604	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6581
6609	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6581
6613	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6581
6617	"isvalid"	"create function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6581
6621	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6581
6625	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6581
6629	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6581
6633	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6581
6637	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6581
6641	"length"	"create function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6581
6645	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6581
6649	"valuearray"	"create function json.valuearray(js json)\nreturns json external name json.valuearray;"	"json"	1	1	false	false	false	6581
6653	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6581
6657	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6581
6661	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6581
6665	"output"	"create aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6581
6669	"tojsonarray"	"create aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6581
6673	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6581
6677	"filter"	"create function json.filter(js json, name hugeint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6581
6682	"md5"	"create function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6687	"uuid"	"create function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6690	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6694	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6698	"chi2prob"	"create function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6704	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	6702
6706	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	6702
6708	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	6702
6711	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	6702
6714	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	6702
6739	"listdir"	"create procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6742	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6745	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6748	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6784	"netcdf_attach"	"create procedure netcdf_attach(fname varchar(256))\n external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6787	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6791	"storage"	"create function sys.""storage""()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6835	"storagemodelinit"	"create procedure sys.storagemodelinit()\nbegin\n delete from sys.storagemodelinput;\n insert into sys.storagemodelinput\n select x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n update sys.storagemodelinput\n set reference = true\n where concat(concat(""schema"",""table""), ""column"") in (\n select concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n from ""sys"".""keys"" as ""fkkey"",\n ""sys"".""objects"" as ""fkkeycol"",\n ""sys"".""tables"" as ""fktable"",\n ""sys"".""schemas"" as ""fkschema""\n where ""fktable"".""id"" = ""fkkey"".""table_id""\n and ""fkkey"".""id"" = ""fkkeycol"".""id""\n and ""fkschema"".""id"" = ""fktable"".""schema_id""\n and ""fkkey"".""rkey"" > -1);\n update sys.storagemodelinput\n set ""distinct"" = ""count"" \n where ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6837	"columnsize"	"create function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n case\n when nme = 'boolean' then return i;\n when nme = 'char' then return 2*i;\n when nme = 'smallint' then return 2 * i;\n when nme = 'int' then return 4 * i;\n when nme = 'bigint' then return 8 * i;\n when nme = 'hugeint' then return 16 * i;\n when nme = 'timestamp' then return 8 * i;\n when nme = 'varchar' then\n case\n when cast(d as bigint) << 8 then return i;\n when cast(d as bigint) << 16 then return 2 * i;\n when cast(d as bigint) << 32 then return 4 * i;\n else return 8 * i;\n end case;\n else return 8 * i;\n end case;\nend;"	"user"	2	1	false	false	false	2000
6843	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n if tpe <> 'varchar' and tpe <> 'clob'\n then\n return 0;\n end if;\n return 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6849	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n \n if b = true\n then\n return 8 * i;\n end if;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
6854	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n if nme = 'boolean'\n or nme = 'tinyint'\n or nme = 'smallint'\n or nme = 'int'\n or nme = 'bigint'\n or nme = 'hugeint'\n or nme = 'decimal'\n or nme = 'date'\n or nme = 'timestamp'\n or nme = 'real'\n or nme = 'double'\n then\n return cast( i * 0.12 as bigint);\n end if ;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
6859	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""count"" bigint,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n imprints bigint,\n sorted boolean)\nbegin\n return select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n columnsize(i.""type"", i.count, i.""distinct""),\n heapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n hashsize(i.""reference"", i.""count""),\n imprintsize(i.""count"",i.""type""),\n i.sorted\n from sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6906	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6910	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6915	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6921	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6928	"reverse"	"create function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6932	"fuse"	"create function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6937	"fuse"	"create function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6942	"fuse"	"create function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6947	"fuse"	"create function fuse(one bigint, two bigint)\nreturns hugeint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6953	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6951
6957	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6951
6961	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6951
6965	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6951
6969	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6951
6974	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6951
6978	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6951
6982	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6951
6986	"seq_char"	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	"bam"	1	1	false	false	false	6951
6993	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6951
6996	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6951
7066	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7071	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7077	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7082	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7088	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7093	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7099	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7104	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7110	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7116	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7122	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7128	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7134	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7139	"generate_series"	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)\nreturns table (value hugeint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6720	6721	0	"keywords_keyword_pkey"
6725	6729	0	"table_types_table_type_id_pkey"
6728	6729	0	"table_types_table_type_name_unique"
6733	6737	0	"dependency_types_dependency_type_id_pkey"
6736	6737	0	"dependency_types_dependency_type_name_unique"
7006	7007	0	"files_pkey_file_id"
7017	7020	0	"sq_pkey_sn_file_id"
7019	7020	1	"sq_fkey_file_id"
7036	7039	0	"rg_pkey_id_file_id"
7038	7039	1	"rg_fkey_file_id"
7048	7051	0	"pg_pkey_id_file_id"
7050	7051	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6719	6721	0	"keywords_keyword_pkey"	-1	-1
6724	6729	0	"table_types_table_type_id_pkey"	-1	-1
6727	6729	1	"table_types_table_type_name_unique"	-1	-1
6732	6737	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6735	6737	1	"dependency_types_dependency_type_name_unique"	-1	-1
7005	7007	0	"files_pkey_file_id"	-1	-1
7016	7020	0	"sq_pkey_sn_file_id"	-1	-1
7018	7020	2	"sq_fkey_file_id"	7005	514
7035	7039	0	"rg_pkey_id_file_id"	-1	-1
7037	7039	2	"rg_fkey_file_id"	7005	514
7047	7051	0	"pg_pkey_id_file_id"	-1	-1
7049	7051	2	"pg_fkey_file_id"	7005	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6720	"keyword"	0
6719	"keyword"	0
6725	"table_type_id"	0
6728	"table_type_name"	0
6724	"table_type_id"	0
6727	"table_type_name"	0
6733	"dependency_type_id"	0
6736	"dependency_type_name"	0
6732	"dependency_type_id"	0
6735	"dependency_type_name"	0
7006	"file_id"	0
7005	"file_id"	0
7017	"sn"	0
7017	"file_id"	1
7019	"file_id"	0
7016	"sn"	0
7016	"file_id"	1
7018	"file_id"	0
7036	"id"	0
7036	"file_id"	1
7038	"file_id"	0
7035	"id"	0
7035	"file_id"	1
7037	"file_id"	0
7048	"id"	0
7048	"file_id"	1
7050	"file_id"	0
7047	"id"	0
7047	"file_id"	1
7049	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 46 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5446	1	1	0	0
5456	1	1	0	0
5482	1	1	0	0
5485	1	1	0	0
5489	1	1	0	0
5496	1	16	3	0
5501	1	16	3	0
5506	1	16	3	0
5510	1	16	3	0
5514	1	16	3	0
5518	1	16	3	0
5522	1	16	3	0
5594	1	16	3	0
5599	1	16	3	0
5604	1	16	3	0
5609	1	16	3	0
5614	1	16	3	0
5619	1	16	3	0
5781	1	16	3	0
5785	1	16	3	0
5789	1	16	3	0
5793	1	16	3	0
5931	1	16	3	0
5938	1	16	3	0
5943	1	16	3	0
5949	1	16	3	0
5955	1	16	3	0
5960	1	16	3	0
5965	1	16	3	0
5969	1	16	3	0
6068	1	16	3	0
6682	1	16	3	0
7146	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6581	"json"	3	3	true
6702	"profiler"	3	3	true
6951	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1457 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
29
30
31
32
33
34
35
36
37
38
39
43
44
45
46
49
50
51
72
73
74
75
76
77
78
79
80
81
82
83
84
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
28
40
41
42
47
48
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
85
86
87
88
89
90
91
92
93
5467
5470
5476
5496
5501
5506
5510
5514
5518
5522
5525
5529
5533
5537
5541
5545
5549
5553
5557
5561
5565
5569
5573
5577
5581
5588
5594
5599
5604
5609
5614
5619
5625
5629
5633
5637
5642
5646
5650
5654
5658
5662
5667
5672
5677
5682
5692
5742
5744
5746
5749
5751
5781
5785
5789
5793
5797
5801
5805
5809
5814
5819
5824
5829
5834
5839
5844
5849
5854
5859
5864
5869
5874
5879
5884
5889
5894
5898
5914
5917
5921
5924
5928
5931
5938
5943
5949
5955
5960
5965
5969
5973
5977
5981
5984
5994
6002
6015
6020
6024
6026
6030
6050
6053
6056
6059
6062
6065
6068
6080
6082
6086
6090
6094
6098
6102
6106
6110
6114
6118
6122
6126
6130
6134
6138
6142
6146
6150
6154
6158
6162
6166
6170
6174
6178
6182
6186
6190
6194
6198
6202
6206
6210
6214
6218
6222
6226
6230
6234
6238
6242
6246
6250
6254
6258
6262
6266
6271
6276
6281
6286
6291
6296
6301
6306
6311
6316
6321
6326
6331
6336
6341
6346
6350
6354
6358
6362
6366
6371
6389
6393
6398
6403
6408
6413
6418
6423
6428
6433
6438
6443
6447
6451
6455
6460
6464
6468
6472
6476
6480
6484
6488
6493
6498
6503
6508
6513
6518
6523
6529
6534
6540
6544
6548
6553
6558
6562
6567
6572
6577
6584
6589
6594
6599
6604
6609
6613
6617
6621
6625
6629
6633
6637
6641
6645
6649
6653
6657
6661
6665
6669
6673
6677
6682
6687
6690
6694
6698
6704
6706
6708
6711
6714
6739
6742
6745
6748
6784
6787
6791
6835
6837
6843
6849
6854
6859
6906
6910
6915
6921
6928
6932
6937
6942
6947
6953
6957
6961
6965
6969
6974
6978
6982
6986
6993
6996
7066
7071
7077
7082
7088
7093
7099
7104
7110
7116
7122
7128
7134
7139
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 45 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"hge"	"hugeint"	128	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	18	1	10	10	0
17	"hge"	"decimal"	39	1	10	10	0
18	"flt"	"real"	24	2	2	11	0
19	"dbl"	"double"	53	2	2	11	0
20	"int"	"month_interval"	32	0	2	8	0
21	"lng"	"sec_interval"	13	1	10	9	0
22	"daytime"	"time"	7	0	0	12	0
23	"daytime"	"timetz"	7	1	0	12	0
24	"date"	"date"	0	0	0	13	0
25	"timestamp"	"timestamp"	7	0	0	14	0
26	"timestamp"	"timestamptz"	7	1	0	14	0
27	"sqlblob"	"blob"	0	0	0	5	0
5523	"url"	"url"	0	0	0	15	2000
5623	"inet"	"inet"	0	0	0	15	2000
6375	"wkb"	"point"	0	0	0	15	2000
6376	"wkb"	"curve"	0	0	0	15	2000
6377	"wkb"	"linestring"	0	0	0	15	2000
6378	"wkb"	"surface"	0	0	0	15	2000
6379	"wkb"	"polygon"	0	0	0	15	2000
6380	"wkb"	"multipoint"	0	0	0	15	2000
6381	"wkb"	"multicurve"	0	0	0	15	2000
6382	"wkb"	"multilinestring"	0	0	0	15	2000
6383	"wkb"	"multisurface"	0	0	0	15	2000
6384	"wkb"	"multipolygon"	0	0	0	15	2000
6385	"wkb"	"geometry"	0	0	0	15	2000
6386	"wkb"	"geomcollection"	0	0	0	15	2000
6387	"mbr"	"mbr"	0	0	0	15	2000
6582	"json"	"json"	0	0	0	15	2000
6685	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 15:15:20 >  
# 15:15:20 >  "Done."
# 15:15:20 >  

