stdout of test 'exports` in directory '.` itself:


# 15:10:42 >  
# 15:10:42 >  "/usr/bin/python" "exports.py" "exports"
# 15:10:42 >  

# gdk
int ALIGNsetH(BAT *b1, BAT *b2);
int ALIGNsynced(BAT *b1, BAT *b2);
int ATOMcmp(int id, ptr v_1, ptr v_2);
ptr ATOMdup(int id, ptr val);
chr ATOMelmshift(int sz);
int ATOMformat(int id, ptr val, char **buf);
int ATOMindex(char *nme);
int ATOMlen(int id, ptr v);
str ATOMname(int id);
ptr ATOMnil(int id);
int ATOMprint(int id, ptr val, stream *fd);
void ATOMproperty(char *nme, char *property, GDKfcn fcn, int val);
BAT *BAT_select_(BAT *b, ptr tl, ptr th, bit li, bit hi, bit tail, bit anti, bit preserve_order);
size_t BATaccess(BAT *b, int what, int advice, int load);
BAT *BATalpha(BAT *b);
BAT *BATantijoin(BAT *l, BAT *r);
BAT *BATantiuselect_(BAT *b, ptr tl, ptr th, bit li, bit hi);
BAT *BATappend(BAT *b, BAT *c, bit force);
atomDesc BATatoms[];
BAT *BATattach(int tt, const char *heapfile);
BAT *BATbandjoin(BAT *l, BAT *r, ptr mnus, ptr plus, bit li, bit hi);
BAT *BATclear(BAT *b);
BAT *BATcol_name(BAT *b, const char *tnme);
BAT *BATcommit(BAT *b);
BAT *BATconst(BAT *l, int tt, ptr val);
BAT *BATcopy(BAT *b, int ht, int tt, int writeable);
BUN BATcount(BAT *b);
BUN BATcount_no_nil(BAT *b);
BATstore *BATcreatedesc(int ht, int tt, int heapnames);
BAT *BATcross(BAT *l, BAT *r);
BAT *BATdel(BAT *b, BAT *c, bit force);
BAT *BATdelHead(BAT *b, BAT *c, bit force);
int BATdelete(BAT *b);
BAT *BATdelta(BAT *b);
BAT *BATextend(BAT *b, BUN newcap);
BAT *BATfakeCommit(BAT *b);
BAT *BATfetch(BAT *b, BAT *s);
BAT *BATfetchjoin(BAT *b, BAT *s, BUN estimate);
int BATgetaccess(BAT *b);
PROPrec *BATgetprop(BAT *b, int idx);
BAT *BATgroup(BAT *b, int start, int incr, int grpsize);
BUN BATgrows(BAT *b);
BAT *BAThash(BAT *b, BUN masksize);
BAT *BAThashjoin(BAT *l, BAT *r, BUN estimate);
BAT *BAThashsplit(BAT *b, BUN n, int unary);
BAT *BAThistogram(BAT *b);
void BATinit_idents(BAT *bn);
BAT *BATins(BAT *b, BAT *c, bit force);
BAT *BATjoin(BAT *l, BAT *r, BUN estimate);
BAT *BATkdiff(BAT *b, BAT *c);
BAT *BATkey(BAT *b, int onoff);
BAT *BATkintersect(BAT *b, BAT *c);
BAT *BATkunion(BAT *b, BAT *c);
BAT *BATkunique(BAT *b);
BAT *BATleftfetchjoin(BAT *b, BAT *s, BUN estimate);
BAT *BATleftjoin(BAT *l, BAT *r, BUN estimate);
BAT *BATleftmergejoin(BAT *l, BAT *r, BUN estimate);
BAT *BATleftthetajoin(BAT *l, BAT *r, int mode, BUN estimate);
int BATmadvise(BAT *b, int hb, int tb, int hh, int th);
BAT *BATmark(BAT *b, oid base);
BAT *BATmark_grp(BAT *b, BAT *g, oid *base);
BAT *BATmaterialize(BAT *b);
BAT *BATmaterializeh(BAT *b);
size_t BATmemsize(BAT *b, int dirty);
BAT *BATmergejoin(BAT *l, BAT *r, BUN estimate);
int BATmmap(BAT *b, int hb, int tb, int hh, int th, int force);
BAT *BATmode(BAT *b, int onoff);
int BATmultiprintf(stream *f, int argc, BAT *argv[], int printoid, int order, int printorderby);
int BATname(BAT *b, const char *nme);
BAT *BATnew(int hdtype, int tltype, BUN capacity);
BAT *BATnlthetajoin(BAT *l, BAT *r, int mode, BUN estimate);
BAT *BATnumber(BAT *b);
BAT *BATorder(BAT *b);
BAT *BATorder_rev(BAT *b);
int BATordered(BAT *b);
int BATordered_rev(BAT *b);
BAT *BATouterjoin(BAT *l, BAT *r, BUN estimate);
BAT *BATprev(BAT *b);
int BATprint(BAT *b);
int BATprintf(stream *f, BAT *b);
BAT *BATpropcheck(BAT *b, int mode);
BAT *BATrangejoin(BAT *l, BAT *rl, BAT *rh, bit li, bit hi);
BAT *BATrangesplit(BAT *b, BUN n, int unary);
str BATrename(BAT *b, const char *nme);
BAT *BATreplace(BAT *b, BAT *n, bit force);
BAT *BATrestrict(BAT *b, ptr hl, ptr hh, ptr tl, ptr th);
BAT *BATrevert(BAT *b);
BAT *BATroles(BAT *b, const char *hnme, const char *tnme);
BAT *BATsample(BAT *b, BUN n);
BAT *BATsave(BAT *b);
BAT *BATsdiff(BAT *b, BAT *c);
BAT *BATselect(BAT *b, ptr tl, ptr th);
BAT *BATselect_(BAT *b, ptr tl, ptr th, bit li, bit hi);
BAT *BATsemijoin(BAT *l, BAT *r);
BAT *BATseqbase(BAT *b, oid o);
BAT *BATset(BAT *b, int onoff);
BAT *BATsetaccess(BAT *b, int mode);
void BATsetcapacity(BAT *b, BUN cnt);
void BATsetcount(BAT *b, BUN cnt);
void BATsetprop(BAT *b, int idx, int type, void *v);
BAT *BATsintersect(BAT *b, BAT *c);
BAT *BATslice(BAT *b, BUN low, BUN high);
BAT *BATsorder(BAT *b);
BAT *BATsorder_rev(BAT *b);
BAT *BATsort(BAT *b);
BAT *BATsort_rev(BAT *b);
BAT *BATssort(BAT *b);
BAT *BATssort_rev(BAT *b);
BAT *BATsunion(BAT *b, BAT *c);
BAT *BATsunique(BAT *b);
BAT *BATthetajoin(BAT *l, BAT *r, int mode, BUN estimate);
int BATtopN(BAT *b, BUN topN);
BAT *BATundo(BAT *b);
BAT *BATuselect(BAT *b, ptr tl, ptr th);
BAT *BATuselect_(BAT *b, ptr tl, ptr th, bit li, bit hi);
BBPrec *BBP;
int BBP_curstamp;
void BBPcacheit(BATstore *bs, int lock);
void BBPclear(bat bid);
void BBPcold(bat b);
int BBPdecref(bat b, int logical);
BAT *BBPdescriptor(bat b);
int BBPdir(int cnt, bat *subcommit);
BATstore *BBPgetdesc(bat i);
void BBPhot(bat b);
bat BBPimportEntry(char *nme);
int BBPin;
int BBPincref(bat b, int logical);
bat BBPindex(const char *nme);
void BBPkeepref(bat i);
bat BBPlimit;
void BBPlock(const char *s);
str BBPlogical(bat b, str buf);
bat BBPmaxsize;
int BBPout;
str BBPphysical(bat b, str buf);
BAT *BBPquickdesc(bat b, int delaccess);
int BBPreclaim(BAT *b);
void BBPreleaselref(bat i);
void BBPreleaseref(bat i);
int BBPrename(bat bid, const char *nme);
int BBPsave(BAT *b);
void BBPshare(bat b);
int BBPsize;
int BBPsync(int cnt, bat *subcommit);
void BBPunlock(const char *s);
BAT *BUNappend(BAT *b, ptr right, bit force);
BAT *BUNdel(BAT *b, ptr left, ptr right, bit force);
BAT *BUNdelHead(BAT *b, ptr left, bit force);
BUN BUNdelete(BAT *b, BUN p, bit force);
BAT *BUNfastins(BAT *b, ptr left, ptr right);
BUN BUNfnd(BAT *b, ptr left);
BAT *BUNinplace(BAT *b, BUN p, ptr left, ptr right, bit force);
BAT *BUNins(BAT *b, ptr left, ptr right, bit force);
BUN BUNlocate(BAT *b, ptr left, ptr right);
BAT *BUNreplace(BAT *b, ptr left, ptr right, bit force);
size_t GDK_mem_bigsize;
size_t GDK_mem_maxsize;
int GDK_mem_pagebits;
size_t GDK_vm_maxsize;
int GDK_vm_trim;
int GDKatomcnt;
int GDKcreatedir(const char *nme);
int GDKdebug;
int GDKembedded;
BAT *GDKenv;
int GDKerror(_In_z_ _Printf_format_string_ const char *format, ...)__attribute__((__format__(__printf__, 1, 2)));
void GDKexit(int status);
int GDKfatal(_In_z_ _Printf_format_string_ const char *format, ...)__attribute__((__format__(__printf__, 1, 2)));
void GDKfilepath(str path, const char *nme, const char *mode, const char *ext);
void GDKfree(void *blk);
char *GDKgetenv(const char *name);
int GDKgetenv_istrue(const char *name);
int GDKgetenv_isyes(const char *name);
int GDKinit(opt *set, int setlen);
void GDKlockHome(void);
void *GDKmalloc(size_t size);
size_t GDKmem_cursize(void);
size_t GDKmem_heapinuse(void);
size_t GDKmem_heapsize(void);
size_t GDKmem_inuse(void);
void *GDKmmap(char *path, int mode, off_t off, size_t len);
int GDKmove(const char *dir1, const char *nme1, const char *ext1, const char *dir2, const char *nme2, const char *ext2);
int GDKms(void);
int GDKnr_threads;
void GDKprotect(void);
int GDKprotected;
void GDKqsort(void *h, void *t, void *base, size_t n, int hs, int ts, int tpe);
void GDKqsort_rev(void *h, void *t, void *base, size_t n, int hs, int ts, int tpe);
void *GDKrealloc(void *pold, size_t size);
int GDKrecovery;
int GDKremovedir(const char *nme);
void GDKsetenv(str name, str value);
ssize_t GDKstrFromStr(unsigned char *src, unsigned char *dst, ssize_t len);
str GDKstrdup(const char *s);
int GDKsyserror(_In_z_ _Printf_format_string_ const char *format, ...)__attribute__((__format__(__printf__, 1, 2)));
ThreadRec GDKthreads[THREADS];
int GDKupgradevarheap(COLrec *c, var_t v, int copyall);
lng GDKusec(void);
const char *GDKversion(void);
size_t GDKvm_cursize(void);
size_t GDKvm_heapsize(void);
void GDKvminc(size_t len);
void *GDKzalloc(size_t size);
void HASHdestroy(BAT *b);
BUN HASHlist(Hash *h, BUN i);
BUN HASHprobe(Hash *h, ptr v);
void HASHremove(BAT *b);
void HEAP_free(Heap *heap, var_t block);
void HEAP_initialize(Heap *heap, size_t nbytes, size_t nprivate, int alignment);
var_t HEAP_malloc(Heap *heap, size_t nbytes);
int HEAPalloc(Heap *h, size_t nitems, size_t itemsize);
int HEAPcopy(Heap *dst, Heap *src);
int HEAPextend(Heap *h, size_t size);
int HEAPfree(Heap *h);
size_t HEAPmemsize(Heap *h);
size_t HEAPvmsize(Heap *h);
int MT_check_nr_cores(void);
unsigned long long MT_clock();
int MT_create_thread(MT_Id *t, void( *function)(void *), void *arg, enum MT_thr_detach d);
void MT_exit_thread(int status)__attribute__((__noreturn__));
MT_Id MT_getpid(void);
size_t MT_getrss(void);
void MT_global_exit(int status)__attribute__((__noreturn__));
char *MT_heapbase;
char *MT_heapcur(void);
void MT_init(void);
int MT_join_thread(MT_Id t);
int MT_kill_thread(MT_Id t);
int MT_lockf(char *filename, int mode, off_t off, off_t len);
MT_Id MT_locktrace;
unsigned long long MT_locktrace_cnt[65536];
void MT_locktrace_end();
char *MT_locktrace_nme[65536];
void MT_locktrace_start();
struct Mallinfo MT_mallinfo(void);
void *MT_mmap(char *path, int mode, off_t off, size_t len);
void MT_mmap_close(MT_mmap_hdl *hdl);
void *MT_mmap_open(MT_mmap_hdl *hdl, char *path, int mode, off_t off, size_t len, size_t nremaps);
void *MT_mmap_remap(MT_mmap_hdl *hdl, off_t off, size_t len);
int MT_msync(void *p, size_t off, size_t len, int mode);
int MT_munmap(void *p, size_t len);
int MT_path_absolute(const char *path);
void MT_sleep_ms(unsigned int ms);
MT_Lock MT_system_lock;
oid OIDbase(oid base);
int OIDfromStr(str src, int *len, oid **dst);
oid OIDnew(oid inc);
int OIDtoStr(str *dst, int *len, oid *src);
void PROPdestroy(PROPrec *p);
BUN SORTfnd(BAT *b, ptr v);
BUN SORTfnd_bte(BAT *b, ptr v);
BUN SORTfnd_chr(BAT *b, ptr v);
BUN SORTfnd_dbl(BAT *b, ptr v);
BUN SORTfnd_flt(BAT *b, ptr v);
BUN SORTfnd_int(BAT *b, ptr v);
BUN SORTfnd_lng(BAT *b, ptr v);
BUN SORTfnd_loc(BAT *b, ptr v);
BUN SORTfnd_sht(BAT *b, ptr v);
BUN SORTfnd_var(BAT *b, ptr v);
BUN SORTfndfirst_bte(BAT *b, ptr v);
BUN SORTfndfirst_chr(BAT *b, ptr v);
BUN SORTfndfirst_dbl(BAT *b, ptr v);
BUN SORTfndfirst_flt(BAT *b, ptr v);
BUN SORTfndfirst_int(BAT *b, ptr v);
BUN SORTfndfirst_lng(BAT *b, ptr v);
BUN SORTfndfirst_loc(BAT *b, ptr v);
BUN SORTfndfirst_sht(BAT *b, ptr v);
BUN SORTfndfirst_var(BAT *b, ptr v);
BUN SORTfndlast_bte(BAT *b, ptr v);
BUN SORTfndlast_chr(BAT *b, ptr v);
BUN SORTfndlast_dbl(BAT *b, ptr v);
BUN SORTfndlast_flt(BAT *b, ptr v);
BUN SORTfndlast_int(BAT *b, ptr v);
BUN SORTfndlast_lng(BAT *b, ptr v);
BUN SORTfndlast_loc(BAT *b, ptr v);
BUN SORTfndlast_sht(BAT *b, ptr v);
BUN SORTfndlast_var(BAT *b, ptr v);
void *THRdata[16];
void THRdel(Thread t);
Thread THRget(int tid);
void *THRgetdata(int);
int THRgettid(void);
int THRhighwater(void);
Thread THRnew(MT_Id pid, str name);
int THRprintf(stream *s, _In_z_ _Printf_format_string_ const char *format, ...)__attribute__((__format__(__printf__, 2, 3)));
void THRsetdata(int, ptr);
int TMabort(void);
int TMcommit(void);
int TMsubcommit(BAT *bl);
int TMsubcommit_list(bat *subcommit, int cnt);
void VALclear(ValPtr v);
int VALcmp(ValPtr p, ValPtr q);
ptr VALconvert(int typ, ValPtr t);
ValPtr VALcopy(ValPtr dst, ValPtr src);
void VALempty(ValPtr v);
int VALformat(char **buf, ValPtr res);
void *VALget(ValPtr v);
ValPtr VALinit(ValPtr d, int tpe, ptr s);
int VALprint(stream *fd, ValPtr res);
ValPtr VALset(ValPtr v, int t, ptr p);
void VIEWbounds(BAT *b, BAT *view, BUN l, BUN h);
BAT *VIEWcombine(BAT *b);
BAT *VIEWcreate(BAT *h, BAT *t);
BAT *VIEWcreate_(BAT *h, BAT *t, int stable);
BAT *VIEWhead(BAT *b);
BAT *VIEWhead_(BAT *b, int mode);
size_t _MT_npages;
size_t _MT_pagesize;
int batFromStr(str src, int *len, bat **dst);
int batToStr(str *dst, int *len, bat *src);
int bitFromStr(str src, int *len, bit **dst);
int bitToStr(str *dst, int *len, bit *src);
int bteFromStr(str src, int *len, bte **dst);
int bteToStr(str *dst, int *len, bte *src);
const bte bte_nil;
int chrFromStr(str src, int *len, chr **dst);
int chrToStr(str *dst, int *len, chr *src);
const chr chr_nil;
int closedir(DIR *dir);
int dblFromStr(str src, int *len, dbl **dst);
int dblToStr(str *dst, int *len, dbl *src);
const dbl dbl_nil;
char *dirname(char *path);
int dlclose(void *handle);
char *dlerror(void);
void *dlopen(const char *file, int mode);
void *dlsym(void *handle, const char *name);
int escapedStr(char *dst, const char *src, int dstlen);
int escapedStrlen(const char *src);
int fltFromStr(str src, int *len, flt **dst);
int fltToStr(str *dst, int *len, flt *src);
const flt flt_nil;
int ftruncate(int fd, off_t size);
char *get_bin_path(void);
int gettimeofday(struct timeval *tv, int *ignore_zone);
int gprof_pthread_create(pthread_t *__restrict, __const pthread_attr_t *__restrict, void *( *fcn)(void *), void *__restrict);
int intFromStr(str src, int *len, int **dst);
int intToStr(str *dst, int *len, int *src);
const int int_nil;
int lngFromStr(str src, int *len, lng **dst);
int lngToStr(str *dst, int *len, lng *src);
const lng lng_nil;
int log_abort(logger *lg);
int log_bat(logger *lg, BAT *b, char *n);
int log_bat_clear(logger *lg, char *n);
int log_bat_persists(logger *lg, BAT *b, char *n);
int log_bat_transient(logger *lg, char *n);
int log_delta(logger *lg, BAT *b, char *n);
int log_sequence(logger *lg, int seq, lng id);
int log_tend(logger *lg);
int log_tstart(logger *lg);
log_bid logger_add_bat(logger *lg, BAT *b, char *name);
size_t logger_changes(logger *lg);
int logger_cleanup(logger *lg);
logger *logger_create(int debug, char *fn, char *logdir, char *dbname, int version, preversionfix_fptr prefuncp, postversionfix_fptr postfuncp);
void logger_del_bat(logger *lg, log_bid bid);
void logger_destroy(logger *lg);
int logger_exit(logger *lg);
log_bid logger_find_bat(logger *lg, char *name);
int logger_restart(logger *lg);
int logger_sequence(logger *lg, int seq, lng *id);
void *mdlopen(const char *library, int mode);
int mo_add_option(opt **Set, int setlen, opt_kind kind, const char *name, const char *value);
int mo_builtin_settings(opt **Set);
char *mo_find_option(opt *set, int setlen, const char *name);
void mo_free_options(opt *set, int setlen);
void mo_print_options(opt *set, int setlen);
int mo_system_config(opt **Set, int setlen);
char *msab_deserialise(sabdb **ret, char *sabdb);
char *msab_freeStatus(sabdb **ret);
char *msab_getDBfarm(char **ret);
char *msab_getDBname(char **ret);
char *msab_getMyStatus(sabdb **ret);
char *msab_getStatus(sabdb **ret, char *dbname);
char *msab_getUplogInfo(sabuplog *ret, const sabdb *db);
void msab_init(char *dbfarm, char *dbname);
char *msab_marchConnection(const char *host, const int port);
char *msab_marchScenario(const char *lang);
char *msab_registerStart(void);
char *msab_registerStop(void);
char *msab_retreatScenario(const char *lang);
char *msab_serialise(char **ret, const sabdb *db);
char *msab_wildRetreat(void);
const oid oid_nil;
DIR *opendir(const char *dirname);
void print_trace(void);
int pthread_cond_destroy(pthread_cond_t *);
int pthread_cond_init(pthread_cond_t *, pthread_condattr_t *);
int pthread_cond_signal(pthread_cond_t *);
int pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);
void pthread_mutex_destroy(pthread_mutex_t *);
void pthread_mutex_init(pthread_mutex_t *, const pthread_mutexattr_t *);
int pthread_mutex_lock(pthread_mutex_t *);
int pthread_mutex_trylock(pthread_mutex_t *);
int pthread_mutex_unlock(pthread_mutex_t *);
void pthread_sema_destroy(pthread_sema_t *s);
void pthread_sema_destroy(pthread_sema_t *s);
void pthread_sema_down(pthread_sema_t *s);
void pthread_sema_down(pthread_sema_t *s);
void pthread_sema_init(pthread_sema_t *s, int flag, int nresources);
void pthread_sema_init(pthread_sema_t *s, int flag, int nresources);
void pthread_sema_up(pthread_sema_t *s);
void pthread_sema_up(pthread_sema_t *s);
int ptrFromStr(str src, int *len, ptr **dst);
int ptrToStr(str *dst, int *len, ptr *src);
const ptr ptr_nil;
struct dirent *readdir(DIR *dir);
void rewinddir(DIR *dir);
int shtFromStr(str src, int *len, sht **dst);
int shtToStr(str *dst, int *len, sht *src);
const sht sht_nil;
int strFromStr(str src, int *len, str *dst);
BUN strHash(const char *s);
int strLen(const char *s);
int strNil(const char *s);
int strToStr(str *dst, int *len, str src);
const char str_nil[2];
int void_inplace(BAT *b, oid id, ptr val, bit force);
BUN void_replace_bat(BAT *b, BAT *u, bit force);
int *win_errno(void);
int win_mkdir(const char *, const int mode);
int win_rename(const char *, const char *);
int win_rmdir(const char *);
int win_stat(const char *, struct stat *);
int win_unlink(const char *);
const wrd wrd_nil;

# mapi
MapiMsg mapi_bind(MapiHdl hdl, int fnr, char **ptr);
MapiMsg mapi_bind_numeric(MapiHdl hdl, int fnr, int scale, int precision, void *ptr);
MapiMsg mapi_bind_var(MapiHdl hdl, int fnr, int type, void *ptr);
MapiMsg mapi_cache_freeup(MapiHdl hdl, int percentage);
MapiMsg mapi_cache_limit(Mapi mid, int limit);
MapiMsg mapi_cache_shuffle(MapiHdl hdl, int percentage);
MapiMsg mapi_clear_bindings(MapiHdl hdl);
MapiMsg mapi_clear_params(MapiHdl hdl);
MapiMsg mapi_close_handle(MapiHdl hdl);
Mapi mapi_connect(const char *host, int port, const char *username, const char *password, const char *lang, const char *dbname);
MapiMsg mapi_destroy(Mapi mid);
MapiMsg mapi_disconnect(Mapi mid);
MapiMsg mapi_error(Mapi mid);
char *mapi_error_str(Mapi mid);
MapiMsg mapi_execute(MapiHdl hdl);
MapiMsg mapi_execute_array(MapiHdl hdl, char **val);
MapiMsg mapi_explain(Mapi mid, FILE *fd);
MapiMsg mapi_explain_query(MapiHdl hdl, FILE *fd);
MapiMsg mapi_explain_result(MapiHdl hdl, FILE *fd);
mapi_int64 mapi_fetch_all_rows(MapiHdl hdl);
char *mapi_fetch_field(MapiHdl hdl, int fnr);
char **mapi_fetch_field_array(MapiHdl hdl);
size_t mapi_fetch_field_len(MapiHdl hdl, int fnr);
char *mapi_fetch_line(MapiHdl hdl);
MapiMsg mapi_fetch_reset(MapiHdl hdl);
int mapi_fetch_row(MapiHdl hdl);
MapiMsg mapi_finish(MapiHdl hdl);
MapiHdl mapi_get_active(Mapi mid);
int mapi_get_autocommit(Mapi mid);
char *mapi_get_dbname(Mapi mid);
int mapi_get_digits(MapiHdl hdl, int fnr);
int mapi_get_field_count(MapiHdl hdl);
stream *mapi_get_from(Mapi mid);
char *mapi_get_host(Mapi mid);
char *mapi_get_lang(Mapi mid);
mapi_int64 mapi_get_last_id(MapiHdl hdl);
int mapi_get_len(MapiHdl hdl, int fnr);
char *mapi_get_mapi_version(Mapi mid);
char *mapi_get_monet_version(Mapi mid);
char *mapi_get_motd(Mapi mid);
char *mapi_get_name(MapiHdl hdl, int fnr);
char *mapi_get_query(MapiHdl hdl);
int mapi_get_querytype(MapiHdl hdl);
mapi_int64 mapi_get_row_count(MapiHdl hdl);
int mapi_get_scale(MapiHdl hdl, int fnr);
char *mapi_get_table(MapiHdl hdl, int fnr);
int mapi_get_tableid(MapiHdl hdl);
stream *mapi_get_to(Mapi mid);
int mapi_get_trace(Mapi mid);
char *mapi_get_type(MapiHdl hdl, int fnr);
char *mapi_get_uri(Mapi mid);
char *mapi_get_user(Mapi mid);
int mapi_is_connected(Mapi mid);
MapiMsg mapi_log(Mapi mid, const char *nme);
Mapi mapi_mapi(const char *host, int port, const char *username, const char *password, const char *lang, const char *dbname);
Mapi mapi_mapiuri(const char *url, const char *user, const char *pass, const char *lang);
int mapi_more_results(MapiHdl hdl);
MapiMsg mapi_needmore(MapiHdl hdl);
MapiHdl mapi_new_handle(Mapi mid);
MapiMsg mapi_next_result(MapiHdl hdl);
void mapi_noexplain(Mapi mid, char *errorprefix);
MapiMsg mapi_param(MapiHdl hdl, int fnr, char **ptr);
MapiMsg mapi_param_numeric(MapiHdl hdl, int fnr, int scale, int precision, void *ptr);
MapiMsg mapi_param_string(MapiHdl hdl, int fnr, int sqltype, char *ptr, int *sizeptr);
MapiMsg mapi_param_type(MapiHdl hdl, int fnr, int ctype, int sqltype, void *ptr);
MapiMsg mapi_ping(Mapi mid);
MapiHdl mapi_prepare(Mapi mid, const char *cmd);
MapiHdl mapi_prepare_array(Mapi mid, const char *cmd, char **val);
MapiMsg mapi_prepare_handle(MapiHdl hdl, const char *cmd);
MapiHdl mapi_query(Mapi mid, const char *cmd);
MapiHdl mapi_query_array(Mapi mid, const char *cmd, char **val);
MapiMsg mapi_query_done(MapiHdl hdl);
MapiMsg mapi_query_handle(MapiHdl hdl, const char *cmd);
MapiMsg mapi_query_part(MapiHdl hdl, const char *cmd, size_t size);
MapiHdl mapi_query_prep(Mapi mid);
MapiHdl mapi_quick_query(Mapi mid, const char *cmd, FILE *fd);
MapiHdl mapi_quick_query_array(Mapi mid, const char *cmd, char **val, FILE *fd);
MapiMsg mapi_quick_response(MapiHdl hdl, FILE *fd);
char *mapi_quote(const char *msg, int size);
MapiMsg mapi_read_response(MapiHdl hdl);
MapiMsg mapi_reconnect(Mapi mid);
MapiMsg mapi_release_id(Mapi mid, int id);
char **mapi_resolve(const char *host, int port, const char *pattern);
char *mapi_result_error(MapiHdl hdl);
mapi_int64 mapi_rows_affected(MapiHdl hdl);
MapiMsg mapi_seek_row(MapiHdl hdl, mapi_int64 rowne, int whence);
MapiHdl mapi_send(Mapi mid, const char *cmd);
MapiMsg mapi_setAutocommit(Mapi mid, int autocommit);
MapiMsg mapi_set_size_header(Mapi mid, int value);
int mapi_split_line(MapiHdl hdl);
MapiMsg mapi_start_talking(Mapi mid);
MapiMsg mapi_store_field(MapiHdl hdl, int fnr, int outtype, void *outparam);
MapiHdl mapi_stream_query(Mapi mid, const char *cmd, int windowsize);
MapiMsg mapi_timeout(Mapi mid, int time);
MapiMsg mapi_trace(Mapi mid, int flag);
char *mapi_unquote(char *msg);
MapiMsg mapi_virtual_result(MapiHdl hdl, int columns, const char **columnnames, const char **columntypes, const int *columnlengths, int tuplecount, const char ***tuples);

# monetdb5
str ALARMctime(str *res);
str ALARMepilogue(void);
str ALARMepoch(int *res);
str ALARMprelude(void);
str ALARMsetalarm(int *res, int *secs, str *action);
str ALARMsleep(int *res, int *secs);
str ALARMtime(int *res);
str ALARMtimers(int *res);
str ALARMusec(lng *ret);
str ALGBATmaximum(ptr *result, int *bid);
str ALGBATminimum(ptr *result, int *bid);
str ALGantijoin(int *result, int *lid, int *rid);
str ALGantiuselect1(int *result, int *bid, ptr value);
str ALGantiuselectInclusive(int *result, int *bid, ptr low, ptr high, bit *lin, bit *rin);
str ALGavg_bte(dbl *res, int *bid);
str ALGavg_dbl(dbl *res, int *bid);
str ALGavg_flt(dbl *res, int *bid);
str ALGavg_int(dbl *res, int *bid);
str ALGavg_lng(dbl *res, int *bid);
str ALGavg_sht(dbl *res, int *bid);
str ALGavg_wrd(dbl *res, int *bid);
str ALGbandjoin(int *result, int *lid, int *rid, ptr *minus, ptr *plus, bit *li, bit *hi);
str ALGbandjoin_default(int *result, int *lid, int *rid, ptr *minus, ptr *plus);
str ALGcard(lng *result, int *bid);
str ALGcopy(int *result, int *bid);
str ALGcount_bat(wrd *result, int *bid);
str ALGcount_nil(wrd *result, int *bid, bit *ignore_nils);
str ALGcount_no_nil(wrd *result, int *bid);
str ALGcross(int *result, int *lid, int *rid);
str ALGderiveCount(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ALGderivePath(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ALGderivePath(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ALGderiveSum(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ALGexist(bit *ret, int *bid, ptr val);
str ALGexistBUN(bit *ret, int *bid, ptr val, ptr tval);
str ALGfetch(ptr ret, int *bid, lng *pos);
str ALGfetchbat(int *ret, int *bid, int *sid);
str ALGfetchint(int *ret, int *bid, int *pos);
str ALGfetchjoin(int *result, int *lid, int *rid);
str ALGfetchjoinestimate(int *result, int *lid, int *rid, lng *estimate);
str ALGfetchoid(int *ret, int *bid, oid *pos);
str ALGfind(ptr ret, int *bid, ptr val);
str ALGfragment(int *result, int *bid, ptr hlow, ptr hhigh, ptr tlow, ptr thigh);
str ALGgroupby(int *res, int *bid);
str ALGhashjoin(int *result, int *lid, int *rid);
str ALGhashsplit(int *result, int *bid, int *nfrag);
str ALGhistogram(int *result, int *bid);
str ALGhistogram_rev(int *result, int *bid);
str ALGhmarkp(int *result, int *bid, int *nr_parts, int *part_nr);
str ALGhsort(int *result, int *bid);
str ALGhsort_rev(int *result, int *bid);
str ALGhtsort(int *result, int *lid);
str ALGidentity(int *ret, int *bid);
str ALGindexjoin(int *result, int *lid, int *rid);
str ALGjoin(int *result, int *lid, int *rid);
str ALGjoinPath(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
BAT *ALGjoinPathBody(Client cntxt, int top, BAT **joins, int flag);
str ALGjoinestimate(int *result, int *lid, int *rid, lng *estimate);
str ALGkdiff(int *result, int *lid, int *rid);
str ALGkintersect(int *result, int *lid, int *rid);
str ALGkunion(int *result, int *lid, int *rid);
str ALGkunique(int *result, int *bid);
str ALGleftfetchjoin(int *result, int *lid, int *rid);
str ALGleftfetchjoinestimate(int *result, int *lid, int *rid, lng *estimate);
str ALGleftjoin(int *result, int *lid, int *rid);
str ALGleftjoinestimate(int *result, int *lid, int *rid, lng *estimate);
str ALGlike(int *ret, int *bid, str *k);
str ALGmarkHead(int *result, int *bid, oid *base);
str ALGmarkHead_default(int *result, int *bid);
str ALGmark_grp_1(int *result, int *bid, int *gid);
str ALGmark_grp_2(int *result, int *bid, int *gid, oid *base);
str ALGmaterialize(int *ret, int *bid);
str ALGmax_bte(bte *res, int *bid);
str ALGmax_dbl(dbl *res, int *bid);
str ALGmax_flt(flt *res, int *bid);
str ALGmax_int(int *res, int *bid);
str ALGmax_lng(lng *res, int *bid);
str ALGmax_sht(sht *res, int *bid);
str ALGmax_wrd(wrd *res, int *bid);
str ALGmaxany(ptr result, int *bid);
str ALGmerge(int *result, int *bid);
str ALGmergejoin(int *result, int *lid, int *rid);
str ALGmin_bte(bte *res, int *bid);
str ALGmin_dbl(dbl *res, int *bid);
str ALGmin_flt(flt *res, int *bid);
str ALGmin_int(int *res, int *bid);
str ALGmin_lng(lng *res, int *bid);
str ALGmin_sht(sht *res, int *bid);
str ALGmin_wrd(wrd *res, int *bid);
str ALGminany(ptr result, int *bid);
str ALGnumber(int *result, int *bid);
str ALGouterjoin(int *result, int *lid, int *rid);
str ALGouterjoinestimate(int *result, int *lid, int *rid, lng *estimate);
str ALGposition(wrd *retval, int *bid, ptr val);
str ALGpositionBUN(wrd *retval, int *bid, ptr val, ptr tval);
str ALGprejoin(int *rl, int *rr, int *l, int *r);
str ALGprod_bte_bte(bte *res, int *bid, bit *empty_is_nil);
str ALGprod_bte_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_bte_int(int *res, int *bid, bit *empty_is_nil);
str ALGprod_bte_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGprod_bte_sht(sht *res, int *bid, bit *empty_is_nil);
str ALGprod_bte_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGprod_dbl_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_flt_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_flt_flt(flt *res, int *bid, bit *empty_is_nil);
str ALGprod_int_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_int_int(int *res, int *bid, bit *empty_is_nil);
str ALGprod_int_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGprod_int_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGprod_lng_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_lng_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGprod_sht_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_sht_int(int *res, int *bid, bit *empty_is_nil);
str ALGprod_sht_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGprod_sht_sht(sht *res, int *bid, bit *empty_is_nil);
str ALGprod_sht_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGprod_wrd_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGprod_wrd_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGprod_wrd_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGprojectCst(Client cntxt,MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ALGprojectCstBody(bat *result, int *bid, ptr *p, int tt);
str ALGprojectNIL(int *ret, int *bid);
str ALGprojecthead_bit(int *ret,ptr *val, int *bid);
str ALGprojecthead_chr(int *ret,ptr *val, int *bid);
str ALGprojecthead_dbl(int *ret,ptr *val, int *bid);
str ALGprojecthead_flt(int *ret,ptr *val, int *bid);
str ALGprojecthead_int(int *ret,ptr *val, int *bid);
str ALGprojecthead_lng(int *ret,ptr *val, int *bid);
str ALGprojecthead_oid(int *ret,ptr *val, int *bid);
str ALGprojecthead_sht(int *ret,ptr *val, int *bid);
str ALGprojecthead_str(int *ret,ptr *val, int *bid);
str ALGprojecttail_bit(int *ret,int *bid, ptr *val);
str ALGprojecttail_chr(int *ret,int *bid, ptr *val);
str ALGprojecttail_dbl(int *ret,int *bid, ptr *val);
str ALGprojecttail_flt(int *ret,int *bid, ptr *val);
str ALGprojecttail_int(int *ret,int *bid, ptr *val);
str ALGprojecttail_lng(int *ret,int *bid, ptr *val);
str ALGprojecttail_oid(int *ret,int *bid, ptr *val);
str ALGprojecttail_sht(int *ret,int *bid, ptr *val);
str ALGprojecttail_str(int *ret,int *bid, ptr *val);
str ALGrangejoin(int *result, int *lid, int *rlid, int *rhid, bit *li, bit *hi);
str ALGrangesplit(int *result, int *bid, int *nfrag);
str ALGreuse(int *ret, int *bid);
str ALGrevert(int *result, int *bid);
str ALGsample(int *result, int *bid, int *param);
str ALGsdiff(int *result, int *lid, int *rid);
str ALGselect(int *result, int *bid, ptr low, ptr high);
str ALGselect1(int *result, int *bid, ptr value);
str ALGselect1Head(int *result, int *bid, ptr value);
str ALGselectHead(int *result, int *bid, ptr low, ptr high);
str ALGselectInclusive(int *result, int *bid, ptr low, ptr high, bit *lin, bit *rin);
str ALGselectInclusiveHead(int *result, int *bid, ptr low, ptr high, bit *lin, bit *rin);
str ALGselectNotNil(int *result, int *bid);
str ALGsemijoin(int *result, int *lid, int *rid);
str ALGsintersect(int *result, int *lid, int *rid);
str ALGslice(int *ret, bat *bid, lng *start, lng *end);
str ALGslice_int(int *ret, bat *bid, int *start, int *end);
str ALGslice_wrd(int *ret, bat *bid, wrd *start, wrd *end);
str ALGsplit(int *result, int *bid);
str ALGssort(int *result, int *bid);
str ALGssort_rev(int *result, int *bid);
str ALGstdev_bte(dbl *res, int *bid);
str ALGstdev_dbl(dbl *res, int *bid);
str ALGstdev_flt(dbl *res, int *bid);
str ALGstdev_int(dbl *res, int *bid);
str ALGstdev_lng(dbl *res, int *bid);
str ALGstdev_sht(dbl *res, int *bid);
str ALGstdev_wrd(dbl *res, int *bid);
str ALGsum_bte_bte(bte *res, int *bid, bit *empty_is_nil);
str ALGsum_bte_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_bte_int(int *res, int *bid, bit *empty_is_nil);
str ALGsum_bte_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGsum_bte_sht(sht *res, int *bid, bit *empty_is_nil);
str ALGsum_bte_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGsum_dbl_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_flt_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_flt_flt(flt *res, int *bid, bit *empty_is_nil);
str ALGsum_int_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_int_int(int *res, int *bid, bit *empty_is_nil);
str ALGsum_int_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGsum_int_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGsum_lng_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_lng_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGsum_sht_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_sht_int(int *res, int *bid, bit *empty_is_nil);
str ALGsum_sht_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGsum_sht_sht(sht *res, int *bid, bit *empty_is_nil);
str ALGsum_sht_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGsum_wrd_dbl(dbl *res, int *bid, bit *empty_is_nil);
str ALGsum_wrd_lng(lng *res, int *bid, bit *empty_is_nil);
str ALGsum_wrd_wrd(wrd *res, int *bid, bit *empty_is_nil);
str ALGsunion(int *result, int *lid, int *rid);
str ALGsunique(int *result, int *bid);
str ALGthetajoin(int *result, int *lid, int *rid, int *opc);
str ALGthetajoinEstimate(int *result, int *lid, int *rid, int *opc, lng *estimate);
str ALGthetaselect(int *result, int *bid, ptr low, str *op);
str ALGthetauselect(int *result, int *bid, ptr value, str *op);
str ALGthsort(int *result, int *lid);
str ALGtmark(int *result, int *bid, oid *base);
str ALGtmark_default(int *result, int *bid);
str ALGtmarkp(int *result, int *bid, int *nr_parts, int *part_nr);
str ALGtopN(int *res, int *bid, lng *top);
str ALGtsort(int *result, int *bid);
str ALGtsort_rev(int *result, int *bid);
str ALGtunique(int *result, int *bid);
str ALGuhashsplit(int *result, int *bid, int *nfrag);
str ALGurangesplit(int *result, int *bid, int *nfrag);
str ALGuselect(int *result, int *bid, ptr low, ptr high);
str ALGuselect1(int *result, int *bid, ptr value);
str ALGuselectInclusive(int *result, int *bid, ptr low, ptr high, bit *lin, bit *rin);
str ARRAYgridBAT_int(int *ret, int *bid, int *groups, int *groupsize, int *clustersize, int *offset);
str ARRAYgridBAT_lng(lng *ret, lng *bid, lng *groups, lng *groupsize, lng *clustersize, lng *offset);
str ARRAYgridBATshift_int(int *ret, int *bid, int *groups, int *groupsize, int *clustersize, int *offset, int *shift);
str ARRAYgridBATshift_lng(lng *ret, lng *bid, lng *groups, lng *groupsize, lng *clustersize, lng *offset, lng *shift);
str ARRAYgridShift_int(int *ret, int *groups, int *groupsize, int *clustersize, int *offset, int *shift);
str ARRAYgridShift_lng(lng *ret, lng *groups, lng *groupsize, lng *clustersize, lng *offset, lng *shift);
str ARRAYgrid_int(int *ret, int *groups, int *groupsize, int *clustersize, int *offset);
str ARRAYgrid_lng(lng *ret, lng *groups, lng *groupsize, lng *clustersize, lng *offset);
str ARRAYmultiply_int_int(int *ret, int *bid, int *rid);
str ARRAYmultiply_int_lng(int *ret, int *bid, int *rid);
str ARRAYmultiply_lng_lng(int *ret, int *bid, int *rid);
str ARRAYmultiply_sht_int(int *ret, int *bid, int *rid);
str ARRAYmultiply_sht_lng(int *ret, int *bid, int *rid);
str ARRAYproduct(int *ret, int *bid, int *rid);
str ARRAYproject(int *ret, int *bid, int *cst);
str ATTbind(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ATTbindPartition(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str ATTlocation(str *fnme, int *bid);
str AUTHaddUser(oid *ret, Client *c, str *user, str *pass);
str AUTHchangePassword(Client *c, str *oldpass, str *passwd);
str AUTHchangeUsername(Client *c, str *olduser, str *newuser);
str AUTHcheckCredentials(oid *ret, Client *c, str *user, str *passwd, str *challenge, str *algo);
str AUTHgetPasswordHash(str *ret, Client *c, str *username);
str AUTHgetUsername(str *ret, Client *c);
str AUTHgetUsers(BAT **ret, Client *c);
str AUTHinitTables(void);
str AUTHremoveUser(Client *c, str *username);
str AUTHrequireAdmin(Client *c);
str AUTHrequireAdminOrUser(Client *c, str *username);
str AUTHresolveUser(str *ret, oid *uid);
str AUTHsetPassword(Client *c, str *username, str *passwd);
str AUTHunlockVault(str *password);
str AX3aggrX3_avg3_bte(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg3_dbl(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg3_flt(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg3_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg3_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg3_sht(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg3_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_avg_bte(int *retid, int *bid, int *eid);
str AX3aggrX3_avg_dbl(int *retid, int *bid, int *eid);
str AX3aggrX3_avg_flt(int *retid, int *bid, int *eid);
str AX3aggrX3_avg_int(int *retid, int *bid, int *eid);
str AX3aggrX3_avg_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_avg_sht(int *retid, int *bid, int *eid);
str AX3aggrX3_avg_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_count(int *retid, int *bid, int *eid, bit *ignore_nils);
str AX3aggrX3_count2Nils(int *retid, int *bid, int *eid);
str AX3aggrX3_count3(int *retid, int *bid, int *gid, int *eid, bit *ignore_nils);
str AX3aggrX3_count3Nils(int *retid, int *bid, int *gid, int *eid);
str AX3aggrX3_max(int *ret, int *bid, int *eid);
str AX3aggrX3_max3(int *ret,int *bid, int *gid, int *eid);
str AX3aggrX3_min(int *ret, int *bid, int *eid);
str AX3aggrX3_min3(int *ret,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_bte_bte(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_bte_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_bte_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_bte_sht(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_bte_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_dbl_dbl(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_flt_dbl(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_flt_flt(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_int_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_int_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_int_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_lng_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_lng_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_sht_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_sht_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_sht_sht(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_sht_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_wrd_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod3_wrd_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_prod_bte_bte(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_bte_int(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_bte_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_bte_sht(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_bte_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_dbl_dbl(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_flt_dbl(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_flt_flt(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_int_int(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_int_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_int_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_lng_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_lng_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_sht_int(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_sht_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_sht_sht(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_sht_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_wrd_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_prod_wrd_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_size(int *retid, int *bid, int *eid);
str AX3aggrX3_sum3_bte_bte(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_bte_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_bte_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_bte_sht(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_bte_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_dbl_dbl(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_flt_dbl(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_flt_flt(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_int_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_int_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_int_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_lng_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_lng_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_sht_int(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_sht_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_sht_sht(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_sht_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_wrd_lng(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum3_wrd_wrd(int *retid,int *bid, int *gid, int *eid);
str AX3aggrX3_sum_bte_bte(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_bte_int(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_bte_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_bte_sht(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_bte_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_dbl_dbl(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_flt_dbl(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_flt_flt(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_int_int(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_int_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_int_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_lng_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_lng_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_sht_int(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_sht_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_sht_sht(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_sht_wrd(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_wrd_lng(int *retid, int *bid, int *eid);
str AX3aggrX3_sum_wrd_wrd(int *retid, int *bid, int *eid);
str AX3count_no_nil2(int *retid, int *bid, int *eid);
str AX3count_no_nil3(int *retid, int *bid, int *gid, int *eid);
str BATPCREilike(int *ret, int *b, str *pat, str *esc);
str BATPCREilike2(int *ret, int *b, str *pat);
str BATPCRElike(int *ret, int *b, str *pat, str *esc);
str BATPCRElike2(int *ret, int *b, str *pat);
str BATPCREnotilike(int *ret, int *b, str *pat, str *esc);
str BATPCREnotilike2(int *ret, int *b, str *pat);
str BATPCREnotlike(int *ret, int *b, str *pat, str *esc);
str BATPCREnotlike2(int *ret, int *b, str *pat);
str BATXMLagg(int *ret, int *bid, int *grp);
str BATXMLagg3(int *ret, int *bid, int *grp, int *e);
str BATXMLattribute(int *ret, str *name, int *bid);
str BATXMLcomment(int *x, int *s);
str BATXMLconcat(int *ret, int *bid, int *rid);
str BATXMLcontent(int *x, int *s);
str BATXMLdocument(int *x, int *s);
str BATXMLelement(int *ret, str *name, xml *ns, xml *attr, int *bid);
str BATXMLelementSmall(int *x, str *name, int *s);
str BATXMLforest(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str BATXMLgroup(xml *ret, int *bid);
str BATXMLisdocument(int *x, int *s);
str BATXMLoptions(int *x, str *name, str *options, int *s);
str BATXMLparse(int *x, str *doccont, int *s, str *option);
str BATXMLpi(int *x, str *tgt, int *s);
str BATXMLroot(int *ret, int *bid, str *version, str *standalone);
str BATXMLstr2xml(int *x, int *s);
str BATXMLxml2str(int *ret, int *bid);
str BATXMLxmltext(int *ret, int *bid);
str BATXMLxquery(int *x, int *s, str *expr);
ptr BATmax(BAT *b, ptr aggr);
ptr BATmin(BAT *b, ptr aggr);
char BBPTraceCall(Client cntxt, MalBlkPtr mb, MalStkPtr stk, int pc);
str BKCaccbuild(int *ret, int *bid, str *acc, ptr *param);
str BKCaccbuild_std(int *ret, int *bid, int *acc);
str BKCaccess(int *res, int *bid, int *m);
str BKCappend_force_wrap(int *r, int *bid, int *uid, bit *force);
str BKCappend_reverse_val_wrap(int *r, int *bid, ptr u);
str BKCappend_val_force_wrap(int *r, int *bid, ptr u, bit *force);
str BKCappend_val_wrap(int *r, int *bid, ptr u);
str BKCappend_wrap(int *r, int *bid, int *uid);
str BKCattach(int *ret, int *tt, str *heapfile);
char *BKCbat_append_val_wrap(int *r, int *bid, ptr u);
char *BKCbat_append_void_bat_wrap(int *r, int *bid, int *uid);
str BKCbat_inplace(int *r, int *bid, int *rid);
str BKCbat_inplace_force(int *r, int *bid, int *rid, bit *force);
str BKCbatdisksize(lng *tot, int *bid);
str BKCbatsize(lng *tot, int *bid);
str BKCbatvmsize(lng *tot, int *bid);
str BKCbun_inplace(int *r, int *bid, oid *id, ptr t);
str BKCbun_inplace_force(int *r, int *bid, oid *id, ptr t, bit *force);
str BKCcold(int *res, str *input);
str BKCcoldBAT(int *res, int *bid);
char *BKCdelete(int *r, int *bid, ptr h);
str BKCdelete_all(int *r, int *bid);
char *BKCdelete_bat(int *r, int *bid, int *bnid);
str BKCdelete_bat(int *r, int *bid, int *sid);
str BKCdelete_bat_bun(int *r, int *bid, int *sid);
char *BKCdelete_bun(int *r, int *bid, ptr h, ptr t);
str BKCdensebat(int *ret, wrd *size);
char *BKCdestroy(signed char *r, int *bid);
char *BKCdestroyImmediate(signed char *r, int *bid);
str BKCdestroy_bat(bit *r, str *input);
str BKCgetAccess(str *res, int *bid);
char *BKCgetAlpha(int *r, int *bid);
str BKCgetBBPname(str *ret, int *bid);
str BKCgetCapacity(lng *res, int *bid);
char *BKCgetDelta(int *r, int *bid);
str BKCgetHeadType(str *res, int *bid);
str BKCgetKey(bit *ret, int *bid);
str BKCgetRole(str *res, int *bid);
str BKCgetSequenceBase(oid *r, int *bid);
str BKCgetSpaceUsed(lng *tot, int *bid);
str BKCgetStorageSize(lng *tot, int *bid);
str BKCgetStorageSize_str(lng *tot, str batname);
str BKCgetTailType(str *res, int *bid);
str BKChasAppendMode(bit *res, int *bid);
str BKChasReadMode(bit *res, int *bid);
str BKChasWriteMode(bit *res, int *bid);
str BKCheat(int *res, str *input);
str BKChot(int *res, str *input);
str BKChotBAT(int *res, int *bid);
str BKCinfo(int *retval, int *bid);
str BKCinsert_bat(int *r, int *bid, int *sid);
str BKCinsert_bat_force(int *r, int *bid, int *sid, bit *force);
char *BKCinsert_bun(int *r, int *bid, ptr h, ptr t);
char *BKCinsert_bun_force(int *r, int *bid, ptr h, ptr t, bit *force);
str BKCisCached(bit *res, int *bid);
str BKCisPersistent(bit *res, int *bid);
str BKCisSorted(bit *res, int *bid);
str BKCisSortedReverse(bit *res, int *bid);
str BKCisSynced(bit *ret, int *bid1, int *bid2);
str BKCisTransient(bit *res, int *bid);
str BKCisaSet(bit *res, int *bid);
str BKCload(int *res, str *input);
str BKCmadvise(bit *res, int *bid, int *hbns, int *tbns, int *hhp, int *thp);
str BKCmadvise2(bit *res, int *bid, int *mode);
str BKCmirror(int *ret, int *bid);
str BKCmmap(bit *res, int *bid, int *hbns, int *tbns, int *hhp, int *thp);
str BKCmmap2(bit *res, int *bid, int *bns);
str BKCnewBAT(int *res, int *ht, int *tt, BUN *cap);
str BKCorder(int *ret, int *bid);
str BKCorder_rev(int *ret, int *bid);
str BKCpersists(int *r, int *bid, bit *flg);
str BKCreplace_bat(int *r, int *bid, int *sid);
str BKCreplace_bat_force(int *r, int *bid, int *sid, bit *force);
str BKCreplace_bun(int *r, int *bid, ptr h, ptr t);
str BKCreplace_bun_force(int *r, int *bid, ptr h, ptr t, bit *force);
str BKCreuseBAT(int *ret, int *bid, int *did);
str BKCreuseBATmap(int *ret, int *bid, int *did);
str BKCreverse(int *ret, int *bid);
str BKCrevert(int *ret, int *bid);
str BKCsave(bit *res, str *input);
str BKCsave2(int *r, int *bid);
str BKCsetAccess(int *res, int *bid, str *param);
str BKCsetAppendMode(int *res, int *bid);
str BKCsetColumn(int *r, int *bid, str *tname);
str BKCsetColumns(int *r, int *bid, str *hname, str *tname);
str BKCsetHash(bit *ret, int *bid, bit *prop);
str BKCsetName(int *r, int *bid, str *s);
str BKCsetPersistent(int *r, int *bid);
str BKCsetReadMode(int *res, int *bid);
char *BKCsetRole(int *r, int *bid, char **hname, char **tname);
str BKCsetSequenceBase(int *r, int *bid, oid *o);
str BKCsetSequenceBaseNil(int *r, int *bid, oid *o);
str BKCsetSet(int *res, int *bid, bit *param);
str BKCsetSorted(bit *res, int *bid);
str BKCsetTransient(int *r, int *bid);
str BKCsetWriteMode(int *res, int *bid);
str BKCsetkey(int *res, int *bid, bit *param);
str BKCshrinkBAT(int *ret, int *bid, int *did);
str BKCshrinkBATmap(int *ret, int *bid, int *did);
str BKCunload(bit *res, str *input);
str BLOB_isnil(bit *retval, blob *val);
str BLOBblob_blob(blob **d, blob **s);
str BLOBblob_fromstr(blob **b, str *d);
void BLOBconvert(blob *b, int direction);
void BLOBdel(Heap *h, var_t *index);
str BLOBeoln(char *src, char *end);
str BLOBfromblob(str *retval, blob **b);
str BLOBfromidx(str *retval, blob **binp, int *index);
int BLOBfromstr(char *instr, int *l, blob **val);
int BLOBget(Heap *h, int *bun, int *l, blob **val);
BUN BLOBhash(blob *b);
void BLOBheap(Heap *heap, size_t capacity);
int BLOBlength(blob *p);
int BLOBnequal(blob *l, blob *r);
int BLOBnitems(int *ret, blob *b);
blob *BLOBnull(void);
str BLOBprelude(void);
var_t BLOBput(Heap *h, var_t *bun, blob *val);
blob *BLOBread(blob *a, stream *s, size_t cnt);
str BLOBsqlblob_fromstr(sqlblob **b, str *d);
str BLOBtoblob(blob **retval, str *s);
int BLOBtostr(str *tostr, int *l, blob *pin);
int BLOBwrite(blob *a, stream *s, size_t cnt);
str BOXclose(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXdeposit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXdestroy(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXdiscard(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXgetBoxNames(int *bid);
str BOXiterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXopen(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXrelease(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXreleaseAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXtake(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str BOXtoString(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CALCBAT2bat(bat *res, int *bid);
str CALCbat2BAT(int *res, bat *bid);
str CALCbat2batid(int *ret, int *bid);
str CALCbat2str(str *ret, bat *val);
str CALCbatid2bat(int *bid, int *ret);
str CALCbinaryADDbtebte(bte *res, bte *a, bte *b);
str CALCbinaryADDbtechr(bte *res, bte *a, chr *b);
str CALCbinaryADDbtedbl(dbl *res, bte *a, dbl *b);
str CALCbinaryADDbteflt(flt *res, bte *a, flt *b);
str CALCbinaryADDbteint(int *res, bte *a, int *b);
str CALCbinaryADDbtelng(lng *res, bte *a, lng *b);
str CALCbinaryADDbtesht(sht *res, bte *a, sht *b);
str CALCbinaryADDbtewrd(wrd *res, bte *a, wrd *b);
str CALCbinaryADDchrbte(bte *res, chr *a, bte *b);
str CALCbinaryADDchrchr(chr *res, chr *a, chr *b);
str CALCbinaryADDchrdbl(dbl *res, chr *a, dbl *b);
str CALCbinaryADDchrflt(flt *res, chr *a, flt *b);
str CALCbinaryADDchrint(int *res, chr *a, int *b);
str CALCbinaryADDchrlng(lng *res, chr *a, lng *b);
str CALCbinaryADDchrsht(sht *res, chr *a, sht *b);
str CALCbinaryADDchrwrd(wrd *res, chr *a, wrd *b);
str CALCbinaryADDdblbte(dbl *res, dbl *a, bte *b);
str CALCbinaryADDdblchr(dbl *res, dbl *a, chr *b);
str CALCbinaryADDdbldbl(dbl *res, dbl *a, dbl *b);
str CALCbinaryADDdblflt(dbl *res, dbl *a, flt *b);
str CALCbinaryADDdblint(dbl *res, dbl *a, int *b);
str CALCbinaryADDdbllng(dbl *res, dbl *a, lng *b);
str CALCbinaryADDdblsht(dbl *res, dbl *a, sht *b);
str CALCbinaryADDdblwrd(dbl *res, dbl *a, wrd *b);
str CALCbinaryADDfltbte(flt *res, flt *a, bte *b);
str CALCbinaryADDfltchr(flt *res, flt *a, chr *b);
str CALCbinaryADDfltdbl(dbl *res, flt *a, dbl *b);
str CALCbinaryADDfltflt(flt *res, flt *a, flt *b);
str CALCbinaryADDfltint(flt *res, flt *a, int *b);
str CALCbinaryADDfltlng(flt *res, flt *a, lng *b);
str CALCbinaryADDfltsht(flt *res, flt *a, sht *b);
str CALCbinaryADDfltwrd(flt *res, flt *a, wrd *b);
str CALCbinaryADDintbte(int *res, int *a, bte *b);
str CALCbinaryADDintchr(int *res, int *a, chr *b);
str CALCbinaryADDintdbl(dbl *res, int *a, dbl *b);
str CALCbinaryADDintflt(flt *res, int *a, flt *b);
str CALCbinaryADDintint(int *res, int *a, int *b);
str CALCbinaryADDintlng(lng *res, int *a, lng *b);
str CALCbinaryADDintsht(int *res, int *a, sht *b);
str CALCbinaryADDintwrd(wrd *res, int *a, wrd *b);
str CALCbinaryADDlngbte(lng *res, lng *a, bte *b);
str CALCbinaryADDlngchr(lng *res, lng *a, chr *b);
str CALCbinaryADDlngdbl(dbl *res, lng *a, dbl *b);
str CALCbinaryADDlngflt(dbl *res, lng *a, flt *b);
str CALCbinaryADDlngint(lng *res, lng *a, int *b);
str CALCbinaryADDlnglng(lng *res, lng *a, lng *b);
str CALCbinaryADDlngsht(lng *res, lng *a, sht *b);
str CALCbinaryADDlngwrd(lng *res, lng *a, wrd *b);
str CALCbinaryADDoidoid(oid *res, oid *a, oid *b);
str CALCbinaryADDshtbte(sht *res, sht *a, bte *b);
str CALCbinaryADDshtchr(sht *res, sht *a, chr *b);
str CALCbinaryADDshtdbl(dbl *res, sht *a, dbl *b);
str CALCbinaryADDshtflt(flt *res, sht *a, flt *b);
str CALCbinaryADDshtint(int *res, sht *a, int *b);
str CALCbinaryADDshtlng(lng *res, sht *a, lng *b);
str CALCbinaryADDshtsht(sht *res, sht *a, sht *b);
str CALCbinaryADDshtwrd(wrd *res, sht *a, wrd *b);
str CALCbinaryADDwrdbte(wrd *res, wrd *a, bte *b);
str CALCbinaryADDwrdchr(wrd *res, wrd *a, chr *b);
str CALCbinaryADDwrddbl(dbl *res, wrd *a, dbl *b);
str CALCbinaryADDwrdflt(flt *res, wrd *a, flt *b);
str CALCbinaryADDwrdint(wrd *res, wrd *a, int *b);
str CALCbinaryADDwrdlng(lng *res, wrd *a, lng *b);
str CALCbinaryADDwrdsht(wrd *res, wrd *a, sht *b);
str CALCbinaryADDwrdwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryANDbit(bit *retval, bit *v1, bit *v2);
str CALCbinaryANDbtebte(bte *res, bte *a, bte *b);
str CALCbinaryANDchrchr(chr *res, chr *a, chr *b);
str CALCbinaryANDintint(int *res, int *a, int *b);
str CALCbinaryANDlnglng(lng *res, lng *a, lng *b);
str CALCbinaryANDshtsht(sht *res, sht *a, sht *b);
str CALCbinaryLSHbteint(bte *res, bte *a, int *b);
str CALCbinaryLSHchrint(chr *res, chr *a, int *b);
str CALCbinaryLSHintint(int *res, int *a, int *b);
str CALCbinaryLSHlngint(lng *ret, lng *val, int *shift);
str CALCbinaryLSHshtint(sht *res, sht *a, int *b);
str CALCbinaryMAX_NO_NILbit(bit *res, bit *a, bit *b);
str CALCbinaryMAX_NO_NILbte(bte *res, bte *a, bte *b);
str CALCbinaryMAX_NO_NILchr(chr *res, chr *a, chr *b);
str CALCbinaryMAX_NO_NILdbl(dbl *res, dbl *a, dbl *b);
str CALCbinaryMAX_NO_NILflt(flt *res, flt *a, flt *b);
str CALCbinaryMAX_NO_NILint(int *res, int *a, int *b);
str CALCbinaryMAX_NO_NILlng(lng *res, lng *a, lng *b);
str CALCbinaryMAX_NO_NILoid(oid *res, oid *a, oid *b);
str CALCbinaryMAX_NO_NILsht(sht *res, sht *a, sht *b);
str CALCbinaryMAX_NO_NILwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryMAX_no_nilany(ptr ret, ptr v1, int t, ptr v2);
str CALCbinaryMAXany(ptr ret, ptr v1, int t, ptr v2);
str CALCbinaryMAXbit(bit *res, bit *a, bit *b);
str CALCbinaryMAXbte(bte *res, bte *a, bte *b);
str CALCbinaryMAXchr(chr *res, chr *a, chr *b);
str CALCbinaryMAXdbl(dbl *res, dbl *a, dbl *b);
str CALCbinaryMAXflt(flt *res, flt *a, flt *b);
str CALCbinaryMAXint(int *res, int *a, int *b);
str CALCbinaryMAXlng(lng *res, lng *a, lng *b);
str CALCbinaryMAXoid(oid *res, oid *a, oid *b);
str CALCbinaryMAXsht(sht *res, sht *a, sht *b);
str CALCbinaryMAXwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryMIN_NO_NILbit(bit *res, bit *a, bit *b);
str CALCbinaryMIN_NO_NILbte(bte *res, bte *a, bte *b);
str CALCbinaryMIN_NO_NILchr(chr *res, chr *a, chr *b);
str CALCbinaryMIN_NO_NILdbl(dbl *res, dbl *a, dbl *b);
str CALCbinaryMIN_NO_NILflt(flt *res, flt *a, flt *b);
str CALCbinaryMIN_NO_NILint(int *res, int *a, int *b);
str CALCbinaryMIN_NO_NILlng(lng *res, lng *a, lng *b);
str CALCbinaryMIN_NO_NILoid(oid *res, oid *a, oid *b);
str CALCbinaryMIN_NO_NILsht(sht *res, sht *a, sht *b);
str CALCbinaryMIN_NO_NILwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryMIN_no_nilany(ptr ret, ptr v1, int t, ptr v2);
str CALCbinaryMINany(ptr ret, ptr v1, int t, ptr v2);
str CALCbinaryMINbit(bit *res, bit *a, bit *b);
str CALCbinaryMINbte(bte *res, bte *a, bte *b);
str CALCbinaryMINchr(chr *res, chr *a, chr *b);
str CALCbinaryMINdbl(dbl *res, dbl *a, dbl *b);
str CALCbinaryMINflt(flt *res, flt *a, flt *b);
str CALCbinaryMINint(int *res, int *a, int *b);
str CALCbinaryMINlng(lng *res, lng *a, lng *b);
str CALCbinaryMINoid(oid *res, oid *a, oid *b);
str CALCbinaryMINsht(sht *res, sht *a, sht *b);
str CALCbinaryMINwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryMULbtebte(bte *res, bte *a, bte *b);
str CALCbinaryMULbtechr(bte *res, bte *a, chr *b);
str CALCbinaryMULbtedbl(dbl *res, bte *a, dbl *b);
str CALCbinaryMULbteflt(flt *res, bte *a, flt *b);
str CALCbinaryMULbteint(int *res, bte *a, int *b);
str CALCbinaryMULbtelng(lng *res, bte *a, lng *b);
str CALCbinaryMULbtesht(sht *res, bte *a, sht *b);
str CALCbinaryMULbtewrd(wrd *res, bte *a, wrd *b);
str CALCbinaryMULchrbte(bte *res, chr *a, bte *b);
str CALCbinaryMULchrchr(chr *res, chr *a, chr *b);
str CALCbinaryMULchrdbl(dbl *res, chr *a, dbl *b);
str CALCbinaryMULchrflt(flt *res, chr *a, flt *b);
str CALCbinaryMULchrint(int *res, chr *a, int *b);
str CALCbinaryMULchrlng(lng *res, chr *a, lng *b);
str CALCbinaryMULchrsht(sht *res, chr *a, sht *b);
str CALCbinaryMULchrwrd(wrd *res, chr *a, wrd *b);
str CALCbinaryMULdblbte(dbl *res, dbl *a, bte *b);
str CALCbinaryMULdblchr(dbl *res, dbl *a, chr *b);
str CALCbinaryMULdbldbl(dbl *res, dbl *a, dbl *b);
str CALCbinaryMULdblflt(dbl *res, dbl *a, flt *b);
str CALCbinaryMULdblint(dbl *res, dbl *a, int *b);
str CALCbinaryMULdbllng(dbl *res, dbl *a, lng *b);
str CALCbinaryMULdblsht(dbl *res, dbl *a, sht *b);
str CALCbinaryMULdblwrd(dbl *res, dbl *a, wrd *b);
str CALCbinaryMULfltbte(flt *res, flt *a, bte *b);
str CALCbinaryMULfltchr(flt *res, flt *a, chr *b);
str CALCbinaryMULfltdbl(dbl *res, flt *a, dbl *b);
str CALCbinaryMULfltflt(flt *res, flt *a, flt *b);
str CALCbinaryMULfltint(flt *res, flt *a, int *b);
str CALCbinaryMULfltlng(flt *res, flt *a, lng *b);
str CALCbinaryMULfltsht(flt *res, flt *a, sht *b);
str CALCbinaryMULfltwrd(flt *res, flt *a, wrd *b);
str CALCbinaryMULintbte(int *res, int *a, bte *b);
str CALCbinaryMULintchr(int *res, int *a, chr *b);
str CALCbinaryMULintdbl(dbl *res, int *a, dbl *b);
str CALCbinaryMULintflt(flt *res, int *a, flt *b);
str CALCbinaryMULintint(int *res, int *a, int *b);
str CALCbinaryMULintlng(lng *res, int *a, lng *b);
str CALCbinaryMULintsht(int *res, int *a, sht *b);
str CALCbinaryMULintwrd(wrd *res, int *a, wrd *b);
str CALCbinaryMULlngbte(lng *res, lng *a, bte *b);
str CALCbinaryMULlngchr(lng *res, lng *a, chr *b);
str CALCbinaryMULlngdbl(dbl *res, lng *a, dbl *b);
str CALCbinaryMULlngflt(dbl *res, lng *a, flt *b);
str CALCbinaryMULlngint(lng *res, lng *a, int *b);
str CALCbinaryMULlnglng(lng *res, lng *a, lng *b);
str CALCbinaryMULlngsht(lng *res, lng *a, sht *b);
str CALCbinaryMULlngwrd(lng *res, lng *a, wrd *b);
str CALCbinaryMULoidoid(oid *res, oid *a, oid *b);
str CALCbinaryMULshtbte(sht *res, sht *a, bte *b);
str CALCbinaryMULshtchr(sht *res, sht *a, chr *b);
str CALCbinaryMULshtdbl(dbl *res, sht *a, dbl *b);
str CALCbinaryMULshtflt(flt *res, sht *a, flt *b);
str CALCbinaryMULshtint(int *res, sht *a, int *b);
str CALCbinaryMULshtlng(lng *res, sht *a, lng *b);
str CALCbinaryMULshtsht(sht *res, sht *a, sht *b);
str CALCbinaryMULshtwrd(wrd *res, sht *a, wrd *b);
str CALCbinaryMULwrdbte(wrd *res, wrd *a, bte *b);
str CALCbinaryMULwrdchr(wrd *res, wrd *a, chr *b);
str CALCbinaryMULwrddbl(dbl *res, wrd *a, dbl *b);
str CALCbinaryMULwrdflt(flt *res, wrd *a, flt *b);
str CALCbinaryMULwrdint(wrd *res, wrd *a, int *b);
str CALCbinaryMULwrdlng(lng *res, wrd *a, lng *b);
str CALCbinaryMULwrdsht(wrd *res, wrd *a, sht *b);
str CALCbinaryMULwrdwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryORbit(bit *retval, bit *v1, bit *v2);
str CALCbinaryORbtebte(bte *res, bte *a, bte *b);
str CALCbinaryORchrchr(chr *res, chr *a, chr *b);
str CALCbinaryORintint(int *res, int *a, int *b);
str CALCbinaryORlnglng(lng *res, lng *a, lng *b);
str CALCbinaryORshtsht(sht *res, sht *a, sht *b);
str CALCbinaryRSHbteint(bte *res, bte *a, int *b);
str CALCbinaryRSHchrint(chr *res, chr *a, int *b);
str CALCbinaryRSHintint(int *res, int *a, int *b);
str CALCbinaryRSHlngint(lng *ret, lng *val, int *shift);
str CALCbinaryRSHshtint(sht *res, sht *a, int *b);
str CALCbinarySQLADDbtebte(bte *res, bte *a, bte *b);
str CALCbinarySQLADDbtechr(bte *res, bte *a, chr *b);
str CALCbinarySQLADDbtedbl(dbl *res, bte *a, dbl *b);
str CALCbinarySQLADDbteflt(flt *res, bte *a, flt *b);
str CALCbinarySQLADDbteint(int *res, bte *a, int *b);
str CALCbinarySQLADDbtelng(lng *res, bte *a, lng *b);
str CALCbinarySQLADDbtesht(sht *res, bte *a, sht *b);
str CALCbinarySQLADDbtewrd(wrd *res, bte *a, wrd *b);
str CALCbinarySQLADDchrbte(bte *res, chr *a, bte *b);
str CALCbinarySQLADDchrchr(chr *res, chr *a, chr *b);
str CALCbinarySQLADDchrdbl(dbl *res, chr *a, dbl *b);
str CALCbinarySQLADDchrflt(flt *res, chr *a, flt *b);
str CALCbinarySQLADDchrint(int *res, chr *a, int *b);
str CALCbinarySQLADDchrlng(lng *res, chr *a, lng *b);
str CALCbinarySQLADDchrsht(sht *res, chr *a, sht *b);
str CALCbinarySQLADDchrwrd(wrd *res, chr *a, wrd *b);
str CALCbinarySQLADDdblbte(dbl *res, dbl *a, bte *b);
str CALCbinarySQLADDdblchr(dbl *res, dbl *a, chr *b);
str CALCbinarySQLADDdbldbl(dbl *res, dbl *a, dbl *b);
str CALCbinarySQLADDdblflt(dbl *res, dbl *a, flt *b);
str CALCbinarySQLADDdblint(dbl *res, dbl *a, int *b);
str CALCbinarySQLADDdbllng(dbl *res, dbl *a, lng *b);
str CALCbinarySQLADDdblsht(dbl *res, dbl *a, sht *b);
str CALCbinarySQLADDdblwrd(dbl *res, dbl *a, wrd *b);
str CALCbinarySQLADDfltbte(flt *res, flt *a, bte *b);
str CALCbinarySQLADDfltchr(flt *res, flt *a, chr *b);
str CALCbinarySQLADDfltdbl(dbl *res, flt *a, dbl *b);
str CALCbinarySQLADDfltflt(flt *res, flt *a, flt *b);
str CALCbinarySQLADDfltint(flt *res, flt *a, int *b);
str CALCbinarySQLADDfltlng(flt *res, flt *a, lng *b);
str CALCbinarySQLADDfltsht(flt *res, flt *a, sht *b);
str CALCbinarySQLADDfltwrd(flt *res, flt *a, wrd *b);
str CALCbinarySQLADDintbte(int *res, int *a, bte *b);
str CALCbinarySQLADDintchr(int *res, int *a, chr *b);
str CALCbinarySQLADDintdbl(dbl *res, int *a, dbl *b);
str CALCbinarySQLADDintflt(flt *res, int *a, flt *b);
str CALCbinarySQLADDintint(int *res, int *a, int *b);
str CALCbinarySQLADDintlng(lng *res, int *a, lng *b);
str CALCbinarySQLADDintsht(int *res, int *a, sht *b);
str CALCbinarySQLADDintwrd(wrd *res, int *a, wrd *b);
str CALCbinarySQLADDlngbte(lng *res, lng *a, bte *b);
str CALCbinarySQLADDlngchr(lng *res, lng *a, chr *b);
str CALCbinarySQLADDlngdbl(dbl *res, lng *a, dbl *b);
str CALCbinarySQLADDlngflt(dbl *res, lng *a, flt *b);
str CALCbinarySQLADDlngint(lng *res, lng *a, int *b);
str CALCbinarySQLADDlnglng(lng *res, lng *a, lng *b);
str CALCbinarySQLADDlngsht(lng *res, lng *a, sht *b);
str CALCbinarySQLADDlngwrd(lng *res, lng *a, wrd *b);
str CALCbinarySQLADDoidoid(oid *res, oid *a, oid *b);
str CALCbinarySQLADDshtbte(sht *res, sht *a, bte *b);
str CALCbinarySQLADDshtchr(sht *res, sht *a, chr *b);
str CALCbinarySQLADDshtdbl(dbl *res, sht *a, dbl *b);
str CALCbinarySQLADDshtflt(flt *res, sht *a, flt *b);
str CALCbinarySQLADDshtint(int *res, sht *a, int *b);
str CALCbinarySQLADDshtlng(lng *res, sht *a, lng *b);
str CALCbinarySQLADDshtsht(sht *res, sht *a, sht *b);
str CALCbinarySQLADDshtwrd(wrd *res, sht *a, wrd *b);
str CALCbinarySQLADDwrdbte(wrd *res, wrd *a, bte *b);
str CALCbinarySQLADDwrdchr(wrd *res, wrd *a, chr *b);
str CALCbinarySQLADDwrddbl(dbl *res, wrd *a, dbl *b);
str CALCbinarySQLADDwrdflt(flt *res, wrd *a, flt *b);
str CALCbinarySQLADDwrdint(wrd *res, wrd *a, int *b);
str CALCbinarySQLADDwrdlng(lng *res, wrd *a, lng *b);
str CALCbinarySQLADDwrdsht(wrd *res, wrd *a, sht *b);
str CALCbinarySQLADDwrdwrd(wrd *res, wrd *a, wrd *b);
str CALCbinarySUBbtebte(bte *res, bte *a, bte *b);
str CALCbinarySUBbtechr(bte *res, bte *a, chr *b);
str CALCbinarySUBbtedbl(dbl *res, bte *a, dbl *b);
str CALCbinarySUBbteflt(flt *res, bte *a, flt *b);
str CALCbinarySUBbteint(int *res, bte *a, int *b);
str CALCbinarySUBbtelng(lng *res, bte *a, lng *b);
str CALCbinarySUBbtesht(sht *res, bte *a, sht *b);
str CALCbinarySUBbtewrd(wrd *res, bte *a, wrd *b);
str CALCbinarySUBchrbte(bte *res, chr *a, bte *b);
str CALCbinarySUBchrchr(chr *res, chr *a, chr *b);
str CALCbinarySUBchrdbl(dbl *res, chr *a, dbl *b);
str CALCbinarySUBchrflt(flt *res, chr *a, flt *b);
str CALCbinarySUBchrint(int *res, chr *a, int *b);
str CALCbinarySUBchrlng(lng *res, chr *a, lng *b);
str CALCbinarySUBchrsht(sht *res, chr *a, sht *b);
str CALCbinarySUBchrwrd(wrd *res, chr *a, wrd *b);
str CALCbinarySUBdblbte(dbl *res, dbl *a, bte *b);
str CALCbinarySUBdblchr(dbl *res, dbl *a, chr *b);
str CALCbinarySUBdbldbl(dbl *res, dbl *a, dbl *b);
str CALCbinarySUBdblflt(dbl *res, dbl *a, flt *b);
str CALCbinarySUBdblint(dbl *res, dbl *a, int *b);
str CALCbinarySUBdbllng(dbl *res, dbl *a, lng *b);
str CALCbinarySUBdblsht(dbl *res, dbl *a, sht *b);
str CALCbinarySUBdblwrd(dbl *res, dbl *a, wrd *b);
str CALCbinarySUBfltbte(flt *res, flt *a, bte *b);
str CALCbinarySUBfltchr(flt *res, flt *a, chr *b);
str CALCbinarySUBfltdbl(dbl *res, flt *a, dbl *b);
str CALCbinarySUBfltflt(flt *res, flt *a, flt *b);
str CALCbinarySUBfltint(flt *res, flt *a, int *b);
str CALCbinarySUBfltlng(flt *res, flt *a, lng *b);
str CALCbinarySUBfltsht(flt *res, flt *a, sht *b);
str CALCbinarySUBfltwrd(flt *res, flt *a, wrd *b);
str CALCbinarySUBintbte(int *res, int *a, bte *b);
str CALCbinarySUBintchr(int *res, int *a, chr *b);
str CALCbinarySUBintdbl(dbl *res, int *a, dbl *b);
str CALCbinarySUBintflt(flt *res, int *a, flt *b);
str CALCbinarySUBintint(int *res, int *a, int *b);
str CALCbinarySUBintlng(lng *res, int *a, lng *b);
str CALCbinarySUBintsht(int *res, int *a, sht *b);
str CALCbinarySUBintwrd(wrd *res, int *a, wrd *b);
str CALCbinarySUBlngbte(lng *res, lng *a, bte *b);
str CALCbinarySUBlngchr(lng *res, lng *a, chr *b);
str CALCbinarySUBlngdbl(dbl *res, lng *a, dbl *b);
str CALCbinarySUBlngflt(dbl *res, lng *a, flt *b);
str CALCbinarySUBlngint(lng *res, lng *a, int *b);
str CALCbinarySUBlnglng(lng *res, lng *a, lng *b);
str CALCbinarySUBlngsht(lng *res, lng *a, sht *b);
str CALCbinarySUBlngwrd(lng *res, lng *a, wrd *b);
str CALCbinarySUBoidoid(oid *res, oid *a, oid *b);
str CALCbinarySUBshtbte(sht *res, sht *a, bte *b);
str CALCbinarySUBshtchr(sht *res, sht *a, chr *b);
str CALCbinarySUBshtdbl(dbl *res, sht *a, dbl *b);
str CALCbinarySUBshtflt(flt *res, sht *a, flt *b);
str CALCbinarySUBshtint(int *res, sht *a, int *b);
str CALCbinarySUBshtlng(lng *res, sht *a, lng *b);
str CALCbinarySUBshtsht(sht *res, sht *a, sht *b);
str CALCbinarySUBshtwrd(wrd *res, sht *a, wrd *b);
str CALCbinarySUBwrdbte(wrd *res, wrd *a, bte *b);
str CALCbinarySUBwrdchr(wrd *res, wrd *a, chr *b);
str CALCbinarySUBwrddbl(dbl *res, wrd *a, dbl *b);
str CALCbinarySUBwrdflt(flt *res, wrd *a, flt *b);
str CALCbinarySUBwrdint(wrd *res, wrd *a, int *b);
str CALCbinarySUBwrdlng(lng *res, wrd *a, lng *b);
str CALCbinarySUBwrdsht(wrd *res, wrd *a, sht *b);
str CALCbinarySUBwrdwrd(wrd *res, wrd *a, wrd *b);
str CALCbinaryXORbit(bit *retval, bit *v1, bit *v2);
str CALCbinaryXORbtebte(bte *res, bte *a, bte *b);
str CALCbinaryXORchrchr(chr *res, chr *a, chr *b);
str CALCbinaryXORintint(int *res, int *a, int *b);
str CALCbinaryXORlnglng(lng *res, lng *a, lng *b);
str CALCbinaryXORshtsht(sht *res, sht *a, sht *b);
str CALCbinarycheckDIVbtebte(bte *res, bte *a, bte *b);
str CALCbinarycheckDIVbtechr(bte *res, bte *a, chr *b);
str CALCbinarycheckDIVbtedbl(dbl *res, bte *a, dbl *b);
str CALCbinarycheckDIVbteflt(flt *res, bte *a, flt *b);
str CALCbinarycheckDIVbteint(int *res, bte *a, int *b);
str CALCbinarycheckDIVbtelng(lng *res, bte *a, lng *b);
str CALCbinarycheckDIVbtesht(sht *res, bte *a, sht *b);
str CALCbinarycheckDIVbtewrd(wrd *res, bte *a, wrd *b);
str CALCbinarycheckDIVchrbte(bte *res, chr *a, bte *b);
str CALCbinarycheckDIVchrchr(chr *res, chr *a, chr *b);
str CALCbinarycheckDIVchrdbl(dbl *res, chr *a, dbl *b);
str CALCbinarycheckDIVchrflt(flt *res, chr *a, flt *b);
str CALCbinarycheckDIVchrint(int *res, chr *a, int *b);
str CALCbinarycheckDIVchrlng(lng *res, chr *a, lng *b);
str CALCbinarycheckDIVchrsht(sht *res, chr *a, sht *b);
str CALCbinarycheckDIVchrwrd(wrd *res, chr *a, wrd *b);
str CALCbinarycheckDIVdblbte(dbl *res, dbl *a, bte *b);
str CALCbinarycheckDIVdblchr(dbl *res, dbl *a, chr *b);
str CALCbinarycheckDIVdbldbl(dbl *res, dbl *a, dbl *b);
str CALCbinarycheckDIVdblflt(dbl *res, dbl *a, flt *b);
str CALCbinarycheckDIVdblint(dbl *res, dbl *a, int *b);
str CALCbinarycheckDIVdbllng(dbl *res, dbl *a, lng *b);
str CALCbinarycheckDIVdblsht(dbl *res, dbl *a, sht *b);
str CALCbinarycheckDIVdblwrd(dbl *res, dbl *a, wrd *b);
str CALCbinarycheckDIVfltbte(flt *res, flt *a, bte *b);
str CALCbinarycheckDIVfltchr(flt *res, flt *a, chr *b);
str CALCbinarycheckDIVfltdbl(dbl *res, flt *a, dbl *b);
str CALCbinarycheckDIVfltflt(flt *res, flt *a, flt *b);
str CALCbinarycheckDIVfltint(flt *res, flt *a, int *b);
str CALCbinarycheckDIVfltlng(flt *res, flt *a, lng *b);
str CALCbinarycheckDIVfltsht(flt *res, flt *a, sht *b);
str CALCbinarycheckDIVfltwrd(flt *res, flt *a, wrd *b);
str CALCbinarycheckDIVintbte(int *res, int *a, bte *b);
str CALCbinarycheckDIVintchr(int *res, int *a, chr *b);
str CALCbinarycheckDIVintdbl(dbl *res, int *a, dbl *b);
str CALCbinarycheckDIVintflt(flt *res, int *a, flt *b);
str CALCbinarycheckDIVintint(int *res, int *a, int *b);
str CALCbinarycheckDIVintlng(lng *res, int *a, lng *b);
str CALCbinarycheckDIVintsht(int *res, int *a, sht *b);
str CALCbinarycheckDIVintwrd(wrd *res, int *a, wrd *b);
str CALCbinarycheckDIVlngbte(lng *res, lng *a, bte *b);
str CALCbinarycheckDIVlngchr(lng *res, lng *a, chr *b);
str CALCbinarycheckDIVlngdbl(dbl *res, lng *a, dbl *b);
str CALCbinarycheckDIVlngflt(dbl *res, lng *a, flt *b);
str CALCbinarycheckDIVlngint(lng *res, lng *a, int *b);
str CALCbinarycheckDIVlnglng(lng *res, lng *a, lng *b);
str CALCbinarycheckDIVlngsht(lng *res, lng *a, sht *b);
str CALCbinarycheckDIVlngwrd(lng *res, lng *a, wrd *b);
str CALCbinarycheckDIVoidoid(oid *res, oid *a, oid *b);
str CALCbinarycheckDIVshtbte(sht *res, sht *a, bte *b);
str CALCbinarycheckDIVshtchr(sht *res, sht *a, chr *b);
str CALCbinarycheckDIVshtdbl(dbl *res, sht *a, dbl *b);
str CALCbinarycheckDIVshtflt(flt *res, sht *a, flt *b);
str CALCbinarycheckDIVshtint(int *res, sht *a, int *b);
str CALCbinarycheckDIVshtlng(lng *res, sht *a, lng *b);
str CALCbinarycheckDIVshtsht(sht *res, sht *a, sht *b);
str CALCbinarycheckDIVshtwrd(wrd *res, sht *a, wrd *b);
str CALCbinarycheckDIVwrdbte(wrd *res, wrd *a, bte *b);
str CALCbinarycheckDIVwrdchr(wrd *res, wrd *a, chr *b);
str CALCbinarycheckDIVwrddbl(dbl *res, wrd *a, dbl *b);
str CALCbinarycheckDIVwrdflt(flt *res, wrd *a, flt *b);
str CALCbinarycheckDIVwrdint(wrd *res, wrd *a, int *b);
str CALCbinarycheckDIVwrdlng(lng *res, wrd *a, lng *b);
str CALCbinarycheckDIVwrdsht(wrd *res, wrd *a, sht *b);
str CALCbinarycheckDIVwrdwrd(wrd *res, wrd *a, wrd *b);
str CALCbinarycheckMODbtebte(bte *res, bte *a, bte *b);
str CALCbinarycheckMODbtechr(bte *res, bte *a, chr *b);
str CALCbinarycheckMODbtedbl(dbl *res, bte *a, dbl *b);
str CALCbinarycheckMODbteflt(flt *res, bte *a, flt *b);
str CALCbinarycheckMODbteint(int *res, bte *a, int *b);
str CALCbinarycheckMODbtelng(lng *res, bte *a, lng *b);
str CALCbinarycheckMODbtesht(sht *res, bte *a, sht *b);
str CALCbinarycheckMODbtewrd(wrd *res, bte *a, wrd *b);
str CALCbinarycheckMODchrbte(bte *res, chr *a, bte *b);
str CALCbinarycheckMODchrchr(chr *res, chr *a, chr *b);
str CALCbinarycheckMODchrdbl(dbl *res, chr *a, dbl *b);
str CALCbinarycheckMODchrflt(flt *res, chr *a, flt *b);
str CALCbinarycheckMODchrint(int *res, chr *a, int *b);
str CALCbinarycheckMODchrlng(lng *res, chr *a, lng *b);
str CALCbinarycheckMODchrsht(sht *res, chr *a, sht *b);
str CALCbinarycheckMODchrwrd(wrd *res, chr *a, wrd *b);
str CALCbinarycheckMODdblbte(dbl *res, dbl *a, bte *b);
str CALCbinarycheckMODdblchr(dbl *res, dbl *a, chr *b);
str CALCbinarycheckMODdbldbl(dbl *res, dbl *a, dbl *b);
str CALCbinarycheckMODdblflt(dbl *res, dbl *a, flt *b);
str CALCbinarycheckMODdblint(dbl *res, dbl *a, int *b);
str CALCbinarycheckMODdbllng(dbl *res, dbl *a, lng *b);
str CALCbinarycheckMODdblsht(dbl *res, dbl *a, sht *b);
str CALCbinarycheckMODdblwrd(dbl *res, dbl *a, wrd *b);
str CALCbinarycheckMODfltbte(flt *res, flt *a, bte *b);
str CALCbinarycheckMODfltchr(flt *res, flt *a, chr *b);
str CALCbinarycheckMODfltdbl(dbl *res, flt *a, dbl *b);
str CALCbinarycheckMODfltflt(flt *res, flt *a, flt *b);
str CALCbinarycheckMODfltint(flt *res, flt *a, int *b);
str CALCbinarycheckMODfltlng(flt *res, flt *a, lng *b);
str CALCbinarycheckMODfltsht(flt *res, flt *a, sht *b);
str CALCbinarycheckMODfltwrd(flt *res, flt *a, wrd *b);
str CALCbinarycheckMODintbte(int *res, int *a, bte *b);
str CALCbinarycheckMODintchr(int *res, int *a, chr *b);
str CALCbinarycheckMODintdbl(dbl *res, int *a, dbl *b);
str CALCbinarycheckMODintflt(flt *res, int *a, flt *b);
str CALCbinarycheckMODintint(int *res, int *a, int *b);
str CALCbinarycheckMODintlng(lng *res, int *a, lng *b);
str CALCbinarycheckMODintsht(int *res, int *a, sht *b);
str CALCbinarycheckMODintwrd(wrd *res, int *a, wrd *b);
str CALCbinarycheckMODlngbte(lng *res, lng *a, bte *b);
str CALCbinarycheckMODlngchr(lng *res, lng *a, chr *b);
str CALCbinarycheckMODlngdbl(dbl *res, lng *a, dbl *b);
str CALCbinarycheckMODlngflt(dbl *res, lng *a, flt *b);
str CALCbinarycheckMODlngint(lng *res, lng *a, int *b);
str CALCbinarycheckMODlnglng(lng *res, lng *a, lng *b);
str CALCbinarycheckMODlngsht(lng *res, lng *a, sht *b);
str CALCbinarycheckMODlngwrd(lng *res, lng *a, wrd *b);
str CALCbinarycheckMODoidoid(oid *res, oid *a, oid *b);
str CALCbinarycheckMODshtbte(sht *res, sht *a, bte *b);
str CALCbinarycheckMODshtchr(sht *res, sht *a, chr *b);
str CALCbinarycheckMODshtdbl(dbl *res, sht *a, dbl *b);
str CALCbinarycheckMODshtflt(flt *res, sht *a, flt *b);
str CALCbinarycheckMODshtint(int *res, sht *a, int *b);
str CALCbinarycheckMODshtlng(lng *res, sht *a, lng *b);
str CALCbinarycheckMODshtsht(sht *res, sht *a, sht *b);
str CALCbinarycheckMODshtwrd(wrd *res, sht *a, wrd *b);
str CALCbinarycheckMODwrdbte(wrd *res, wrd *a, bte *b);
str CALCbinarycheckMODwrdchr(wrd *res, wrd *a, chr *b);
str CALCbinarycheckMODwrddbl(dbl *res, wrd *a, dbl *b);
str CALCbinarycheckMODwrdflt(flt *res, wrd *a, flt *b);
str CALCbinarycheckMODwrdint(wrd *res, wrd *a, int *b);
str CALCbinarycheckMODwrdlng(lng *res, wrd *a, lng *b);
str CALCbinarycheckMODwrdsht(wrd *res, wrd *a, sht *b);
str CALCbinarycheckMODwrdwrd(wrd *res, wrd *a, wrd *b);
str CALCbit2bit(bit *res, bit *a);
str CALCbit2bte(bte *res, bit *a);
str CALCbit2chr(chr *res, bit *a);
str CALCbit2int(int *res, bit *a);
str CALCbit2lng(lng *res, bit *a);
str CALCbit2oid(oid *res, bit *a);
str CALCbit2sht(sht *res, bit *a);
str CALCbit2str(str *ret, bit *val);
str CALCbit2wrd(wrd *res, bit *a);
str CALCbte2bit(bit *res, bte *a);
str CALCbte2bte(bte *res, bte *a);
str CALCbte2chr(chr *res, bte *a);
str CALCbte2dbl(dbl *res, bte *a);
str CALCbte2flt(flt *res, bte *a);
str CALCbte2int(int *res, bte *a);
str CALCbte2lng(lng *res, bte *a);
str CALCbte2oid(oid *res, bte *a);
str CALCbte2sht(sht *res, bte *a);
str CALCbte2str(str *ret, bte *val);
str CALCbte2wrd(wrd *res, bte *a);
str CALCchr2bit(bit *res, chr *a);
str CALCchr2bte(bte *res, chr *a);
str CALCchr2chr(chr *res, chr *a);
str CALCchr2dbl(dbl *res, chr *a);
str CALCchr2flt(flt *res, chr *a);
str CALCchr2int(int *res, chr *a);
str CALCchr2lng(lng *res, chr *a);
str CALCchr2oid(oid *res, chr *a);
str CALCchr2sht(sht *res, chr *a);
str CALCchr2str(str *ret, chr *val);
str CALCchr2wrd(wrd *res, chr *a);
str CALCcompBetweenany(bit *retval, ptr *val, int tpe, ptr *low, ptr *high);
str CALCcompBetweenbte(bit *retval, bte *v, bte *low, bte *high);
str CALCcompBetweenchr(bit *retval, chr *v, chr *low, chr *high);
str CALCcompBetweendbl(bit *retval, dbl *v, dbl *low, dbl *high);
str CALCcompBetweenflt(bit *retval, flt *v, flt *low, flt *high);
str CALCcompBetweenint(bit *retval, int *v, int *low, int *high);
str CALCcompBetweenlng(bit *retval, lng *v, lng *low, lng *high);
str CALCcompBetweenoid(bit *retval, oid *v, oid *low, oid *high);
str CALCcompBetweensht(bit *retval, sht *v, sht *low, sht *high);
str CALCcompBetweenstr(bit *retval, str *val, str *low, str *high);
str CALCcompBetweenwrd(bit *retval, wrd *v, wrd *low, wrd *high);
str CALCcompEQany(bit *retval, ptr *v1, int tpe, ptr *v2);
str CALCcompEQbitbit(bit *retval, bit *v1, bit *v2);
str CALCcompEQbitbte(bit *retval, bit *v1, bte *v2);
str CALCcompEQbitchr(bit *retval, bit *v1, chr *v2);
str CALCcompEQbitint(bit *retval, bit *v1, int *v2);
str CALCcompEQbitlng(bit *retval, bit *v1, lng *v2);
str CALCcompEQbitsht(bit *retval, bit *v1, sht *v2);
str CALCcompEQbitwrd(bit *retval, bit *v1, wrd *v2);
str CALCcompEQbtebte(bit *retval, bte *v1, bte *v2);
str CALCcompEQbtechr(bit *retval, bte *v1, chr *v2);
str CALCcompEQbteint(bit *retval, bte *v1, int *v2);
str CALCcompEQbtelng(bit *retval, bte *v1, lng *v2);
str CALCcompEQbtesht(bit *retval, bte *v1, sht *v2);
str CALCcompEQbtewrd(bit *retval, bte *v1, wrd *v2);
str CALCcompEQchrbte(bit *retval, chr *v1, bte *v2);
str CALCcompEQchrchr(bit *retval, chr *v1, chr *v2);
str CALCcompEQchrint(bit *retval, chr *v1, int *v2);
str CALCcompEQchrlng(bit *retval, chr *v1, lng *v2);
str CALCcompEQchrsht(bit *retval, chr *v1, sht *v2);
str CALCcompEQchrwrd(bit *retval, chr *v1, wrd *v2);
str CALCcompEQdbldbl(bit *retval, dbl *v1, dbl *v2);
str CALCcompEQfltdbl(bit *retval, flt *v1, dbl *v2);
str CALCcompEQfltflt(bit *retval, flt *v1, flt *v2);
str CALCcompEQintbte(bit *retval, int *v1, bte *v2);
str CALCcompEQintchr(bit *retval, int *v1, chr *v2);
str CALCcompEQintint(bit *retval, int *v1, int *v2);
str CALCcompEQintlng(bit *retval, int *v1, lng *v2);
str CALCcompEQintsht(bit *retval, int *v1, sht *v2);
str CALCcompEQintwrd(bit *retval, int *v1, wrd *v2);
str CALCcompEQlngbte(bit *retval, lng *v1, bte *v2);
str CALCcompEQlngchr(bit *retval, lng *v1, chr *v2);
str CALCcompEQlngint(bit *retval, lng *v1, int *v2);
str CALCcompEQlnglng(bit *retval, lng *v1, lng *v2);
str CALCcompEQlngsht(bit *retval, lng *v1, sht *v2);
str CALCcompEQlngwrd(bit *retval, lng *v1, wrd *v2);
str CALCcompEQoidoid(bit *retval, oid *v1, oid *v2);
str CALCcompEQshtbte(bit *retval, sht *v1, bte *v2);
str CALCcompEQshtchr(bit *retval, sht *v1, chr *v2);
str CALCcompEQshtint(bit *retval, sht *v1, int *v2);
str CALCcompEQshtlng(bit *retval, sht *v1, lng *v2);
str CALCcompEQshtsht(bit *retval, sht *v1, sht *v2);
str CALCcompEQshtwrd(bit *retval, sht *v1, wrd *v2);
str CALCcompEQstrstr(bit *retval, str *s1, str *s2);
str CALCcompEQwrdbte(bit *retval, wrd *v1, bte *v2);
str CALCcompEQwrdchr(bit *retval, wrd *v1, chr *v2);
str CALCcompEQwrdint(bit *retval, wrd *v1, int *v2);
str CALCcompEQwrdlng(bit *retval, wrd *v1, lng *v2);
str CALCcompEQwrdsht(bit *retval, wrd *v1, sht *v2);
str CALCcompEQwrdwrd(bit *retval, wrd *v1, wrd *v2);
str CALCcompGEany(bit *retval, ptr *v1, int tpe, ptr *v2);
str CALCcompGEbitbit(bit *retval, bit *v1, bit *v2);
str CALCcompGEbitbte(bit *retval, bit *v1, bte *v2);
str CALCcompGEbitchr(bit *retval, bit *v1, chr *v2);
str CALCcompGEbitint(bit *retval, bit *v1, int *v2);
str CALCcompGEbitlng(bit *retval, bit *v1, lng *v2);
str CALCcompGEbitsht(bit *retval, bit *v1, sht *v2);
str CALCcompGEbitwrd(bit *retval, bit *v1, wrd *v2);
str CALCcompGEbtebte(bit *retval, bte *v1, bte *v2);
str CALCcompGEbtechr(bit *retval, bte *v1, chr *v2);
str CALCcompGEbteint(bit *retval, bte *v1, int *v2);
str CALCcompGEbtelng(bit *retval, bte *v1, lng *v2);
str CALCcompGEbtesht(bit *retval, bte *v1, sht *v2);
str CALCcompGEbtewrd(bit *retval, bte *v1, wrd *v2);
str CALCcompGEchrbte(bit *retval, chr *v1, bte *v2);
str CALCcompGEchrchr(bit *retval, chr *v1, chr *v2);
str CALCcompGEchrint(bit *retval, chr *v1, int *v2);
str CALCcompGEchrlng(bit *retval, chr *v1, lng *v2);
str CALCcompGEchrsht(bit *retval, chr *v1, sht *v2);
str CALCcompGEchrwrd(bit *retval, chr *v1, wrd *v2);
str CALCcompGEdbldbl(bit *retval, dbl *v1, dbl *v2);
str CALCcompGEfltdbl(bit *retval, flt *v1, dbl *v2);
str CALCcompGEfltflt(bit *retval, flt *v1, flt *v2);
str CALCcompGEintbte(bit *retval, int *v1, bte *v2);
str CALCcompGEintchr(bit *retval, int *v1, chr *v2);
str CALCcompGEintint(bit *retval, int *v1, int *v2);
str CALCcompGEintlng(bit *retval, int *v1, lng *v2);
str CALCcompGEintsht(bit *retval, int *v1, sht *v2);
str CALCcompGEintwrd(bit *retval, int *v1, wrd *v2);
str CALCcompGElngbte(bit *retval, lng *v1, bte *v2);
str CALCcompGElngchr(bit *retval, lng *v1, chr *v2);
str CALCcompGElngint(bit *retval, lng *v1, int *v2);
str CALCcompGElnglng(bit *retval, lng *v1, lng *v2);
str CALCcompGElngsht(bit *retval, lng *v1, sht *v2);
str CALCcompGElngwrd(bit *retval, lng *v1, wrd *v2);
str CALCcompGEoidoid(bit *retval, oid *v1, oid *v2);
str CALCcompGEshtbte(bit *retval, sht *v1, bte *v2);
str CALCcompGEshtchr(bit *retval, sht *v1, chr *v2);
str CALCcompGEshtint(bit *retval, sht *v1, int *v2);
str CALCcompGEshtlng(bit *retval, sht *v1, lng *v2);
str CALCcompGEshtsht(bit *retval, sht *v1, sht *v2);
str CALCcompGEshtwrd(bit *retval, sht *v1, wrd *v2);
str CALCcompGEstrstr(bit *retval, str *s1, str *s2);
str CALCcompGEwrdbte(bit *retval, wrd *v1, bte *v2);
str CALCcompGEwrdchr(bit *retval, wrd *v1, chr *v2);
str CALCcompGEwrdint(bit *retval, wrd *v1, int *v2);
str CALCcompGEwrdlng(bit *retval, wrd *v1, lng *v2);
str CALCcompGEwrdsht(bit *retval, wrd *v1, sht *v2);
str CALCcompGEwrdwrd(bit *retval, wrd *v1, wrd *v2);
str CALCcompGTany(bit *retval, ptr *v1, int tpe, ptr *v2);
str CALCcompGTbitbit(bit *retval, bit *v1, bit *v2);
str CALCcompGTbitbte(bit *retval, bit *v1, bte *v2);
str CALCcompGTbitchr(bit *retval, bit *v1, chr *v2);
str CALCcompGTbitint(bit *retval, bit *v1, int *v2);
str CALCcompGTbitlng(bit *retval, bit *v1, lng *v2);
str CALCcompGTbitsht(bit *retval, bit *v1, sht *v2);
str CALCcompGTbitwrd(bit *retval, bit *v1, wrd *v2);
str CALCcompGTbtebte(bit *retval, bte *v1, bte *v2);
str CALCcompGTbtechr(bit *retval, bte *v1, chr *v2);
str CALCcompGTbteint(bit *retval, bte *v1, int *v2);
str CALCcompGTbtelng(bit *retval, bte *v1, lng *v2);
str CALCcompGTbtesht(bit *retval, bte *v1, sht *v2);
str CALCcompGTbtewrd(bit *retval, bte *v1, wrd *v2);
str CALCcompGTchrbte(bit *retval, chr *v1, bte *v2);
str CALCcompGTchrchr(bit *retval, chr *v1, chr *v2);
str CALCcompGTchrint(bit *retval, chr *v1, int *v2);
str CALCcompGTchrlng(bit *retval, chr *v1, lng *v2);
str CALCcompGTchrsht(bit *retval, chr *v1, sht *v2);
str CALCcompGTchrwrd(bit *retval, chr *v1, wrd *v2);
str CALCcompGTdbldbl(bit *retval, dbl *v1, dbl *v2);
str CALCcompGTfltdbl(bit *retval, flt *v1, dbl *v2);
str CALCcompGTfltflt(bit *retval, flt *v1, flt *v2);
str CALCcompGTintbte(bit *retval, int *v1, bte *v2);
str CALCcompGTintchr(bit *retval, int *v1, chr *v2);
str CALCcompGTintint(bit *retval, int *v1, int *v2);
str CALCcompGTintlng(bit *retval, int *v1, lng *v2);
str CALCcompGTintsht(bit *retval, int *v1, sht *v2);
str CALCcompGTintwrd(bit *retval, int *v1, wrd *v2);
str CALCcompGTlngbte(bit *retval, lng *v1, bte *v2);
str CALCcompGTlngchr(bit *retval, lng *v1, chr *v2);
str CALCcompGTlngint(bit *retval, lng *v1, int *v2);
str CALCcompGTlnglng(bit *retval, lng *v1, lng *v2);
str CALCcompGTlngsht(bit *retval, lng *v1, sht *v2);
str CALCcompGTlngwrd(bit *retval, lng *v1, wrd *v2);
str CALCcompGToidoid(bit *retval, oid *v1, oid *v2);
str CALCcompGTshtbte(bit *retval, sht *v1, bte *v2);
str CALCcompGTshtchr(bit *retval, sht *v1, chr *v2);
str CALCcompGTshtint(bit *retval, sht *v1, int *v2);
str CALCcompGTshtlng(bit *retval, sht *v1, lng *v2);
str CALCcompGTshtsht(bit *retval, sht *v1, sht *v2);
str CALCcompGTshtwrd(bit *retval, sht *v1, wrd *v2);
str CALCcompGTstrstr(bit *retval, str *s1, str *s2);
str CALCcompGTwrdbte(bit *retval, wrd *v1, bte *v2);
str CALCcompGTwrdchr(bit *retval, wrd *v1, chr *v2);
str CALCcompGTwrdint(bit *retval, wrd *v1, int *v2);
str CALCcompGTwrdlng(bit *retval, wrd *v1, lng *v2);
str CALCcompGTwrdsht(bit *retval, wrd *v1, sht *v2);
str CALCcompGTwrdwrd(bit *retval, wrd *v1, wrd *v2);
str CALCcompLEany(bit *retval, ptr *v1, int tpe, ptr *v2);
str CALCcompLEbitbit(bit *retval, bit *v1, bit *v2);
str CALCcompLEbitbte(bit *retval, bit *v1, bte *v2);
str CALCcompLEbitchr(bit *retval, bit *v1, chr *v2);
str CALCcompLEbitint(bit *retval, bit *v1, int *v2);
str CALCcompLEbitlng(bit *retval, bit *v1, lng *v2);
str CALCcompLEbitsht(bit *retval, bit *v1, sht *v2);
str CALCcompLEbitwrd(bit *retval, bit *v1, wrd *v2);
str CALCcompLEbtebte(bit *retval, bte *v1, bte *v2);
str CALCcompLEbtechr(bit *retval, bte *v1, chr *v2);
str CALCcompLEbteint(bit *retval, bte *v1, int *v2);
str CALCcompLEbtelng(bit *retval, bte *v1, lng *v2);
str CALCcompLEbtesht(bit *retval, bte *v1, sht *v2);
str CALCcompLEbtewrd(bit *retval, bte *v1, wrd *v2);
str CALCcompLEchrbte(bit *retval, chr *v1, bte *v2);
str CALCcompLEchrchr(bit *retval, chr *v1, chr *v2);
str CALCcompLEchrint(bit *retval, chr *v1, int *v2);
str CALCcompLEchrlng(bit *retval, chr *v1, lng *v2);
str CALCcompLEchrsht(bit *retval, chr *v1, sht *v2);
str CALCcompLEchrwrd(bit *retval, chr *v1, wrd *v2);
str CALCcompLEdbldbl(bit *retval, dbl *v1, dbl *v2);
str CALCcompLEfltdbl(bit *retval, flt *v1, dbl *v2);
str CALCcompLEfltflt(bit *retval, flt *v1, flt *v2);
str CALCcompLEintbte(bit *retval, int *v1, bte *v2);
str CALCcompLEintchr(bit *retval, int *v1, chr *v2);
str CALCcompLEintint(bit *retval, int *v1, int *v2);
str CALCcompLEintlng(bit *retval, int *v1, lng *v2);
str CALCcompLEintsht(bit *retval, int *v1, sht *v2);
str CALCcompLEintwrd(bit *retval, int *v1, wrd *v2);
str CALCcompLElngbte(bit *retval, lng *v1, bte *v2);
str CALCcompLElngchr(bit *retval, lng *v1, chr *v2);
str CALCcompLElngint(bit *retval, lng *v1, int *v2);
str CALCcompLElnglng(bit *retval, lng *v1, lng *v2);
str CALCcompLElngsht(bit *retval, lng *v1, sht *v2);
str CALCcompLElngwrd(bit *retval, lng *v1, wrd *v2);
str CALCcompLEoidoid(bit *retval, oid *v1, oid *v2);
str CALCcompLEshtbte(bit *retval, sht *v1, bte *v2);
str CALCcompLEshtchr(bit *retval, sht *v1, chr *v2);
str CALCcompLEshtint(bit *retval, sht *v1, int *v2);
str CALCcompLEshtlng(bit *retval, sht *v1, lng *v2);
str CALCcompLEshtsht(bit *retval, sht *v1, sht *v2);
str CALCcompLEshtwrd(bit *retval, sht *v1, wrd *v2);
str CALCcompLEstrstr(bit *retval, str *s1, str *s2);
str CALCcompLEwrdbte(bit *retval, wrd *v1, bte *v2);
str CALCcompLEwrdchr(bit *retval, wrd *v1, chr *v2);
str CALCcompLEwrdint(bit *retval, wrd *v1, int *v2);
str CALCcompLEwrdlng(bit *retval, wrd *v1, lng *v2);
str CALCcompLEwrdsht(bit *retval, wrd *v1, sht *v2);
str CALCcompLEwrdwrd(bit *retval, wrd *v1, wrd *v2);
str CALCcompLTany(bit *retval, ptr *v1, int tpe, ptr *v2);
str CALCcompLTbitbit(bit *retval, bit *v1, bit *v2);
str CALCcompLTbitbte(bit *retval, bit *v1, bte *v2);
str CALCcompLTbitchr(bit *retval, bit *v1, chr *v2);
str CALCcompLTbitint(bit *retval, bit *v1, int *v2);
str CALCcompLTbitlng(bit *retval, bit *v1, lng *v2);
str CALCcompLTbitsht(bit *retval, bit *v1, sht *v2);
str CALCcompLTbitwrd(bit *retval, bit *v1, wrd *v2);
str CALCcompLTbtebte(bit *retval, bte *v1, bte *v2);
str CALCcompLTbtechr(bit *retval, bte *v1, chr *v2);
str CALCcompLTbteint(bit *retval, bte *v1, int *v2);
str CALCcompLTbtelng(bit *retval, bte *v1, lng *v2);
str CALCcompLTbtesht(bit *retval, bte *v1, sht *v2);
str CALCcompLTbtewrd(bit *retval, bte *v1, wrd *v2);
str CALCcompLTchrbte(bit *retval, chr *v1, bte *v2);
str CALCcompLTchrchr(bit *retval, chr *v1, chr *v2);
str CALCcompLTchrint(bit *retval, chr *v1, int *v2);
str CALCcompLTchrlng(bit *retval, chr *v1, lng *v2);
str CALCcompLTchrsht(bit *retval, chr *v1, sht *v2);
str CALCcompLTchrwrd(bit *retval, chr *v1, wrd *v2);
str CALCcompLTdbldbl(bit *retval, dbl *v1, dbl *v2);
str CALCcompLTfltdbl(bit *retval, flt *v1, dbl *v2);
str CALCcompLTfltflt(bit *retval, flt *v1, flt *v2);
str CALCcompLTintbte(bit *retval, int *v1, bte *v2);
str CALCcompLTintchr(bit *retval, int *v1, chr *v2);
str CALCcompLTintint(bit *retval, int *v1, int *v2);
str CALCcompLTintlng(bit *retval, int *v1, lng *v2);
str CALCcompLTintsht(bit *retval, int *v1, sht *v2);
str CALCcompLTintwrd(bit *retval, int *v1, wrd *v2);
str CALCcompLTlngbte(bit *retval, lng *v1, bte *v2);
str CALCcompLTlngchr(bit *retval, lng *v1, chr *v2);
str CALCcompLTlngint(bit *retval, lng *v1, int *v2);
str CALCcompLTlnglng(bit *retval, lng *v1, lng *v2);
str CALCcompLTlngsht(bit *retval, lng *v1, sht *v2);
str CALCcompLTlngwrd(bit *retval, lng *v1, wrd *v2);
str CALCcompLToidoid(bit *retval, oid *v1, oid *v2);
str CALCcompLTshtbte(bit *retval, sht *v1, bte *v2);
str CALCcompLTshtchr(bit *retval, sht *v1, chr *v2);
str CALCcompLTshtint(bit *retval, sht *v1, int *v2);
str CALCcompLTshtlng(bit *retval, sht *v1, lng *v2);
str CALCcompLTshtsht(bit *retval, sht *v1, sht *v2);
str CALCcompLTshtwrd(bit *retval, sht *v1, wrd *v2);
str CALCcompLTstrstr(bit *retval, str *s1, str *s2);
str CALCcompLTwrdbte(bit *retval, wrd *v1, bte *v2);
str CALCcompLTwrdchr(bit *retval, wrd *v1, chr *v2);
str CALCcompLTwrdint(bit *retval, wrd *v1, int *v2);
str CALCcompLTwrdlng(bit *retval, wrd *v1, lng *v2);
str CALCcompLTwrdsht(bit *retval, wrd *v1, sht *v2);
str CALCcompLTwrdwrd(bit *retval, wrd *v1, wrd *v2);
str CALCcompNEQany(bit *retval, ptr *v1, int tpe, ptr *v2);
str CALCcompNEQbitbit(bit *retval, bit *v1, bit *v2);
str CALCcompNEQbitbte(bit *retval, bit *v1, bte *v2);
str CALCcompNEQbitchr(bit *retval, bit *v1, chr *v2);
str CALCcompNEQbitint(bit *retval, bit *v1, int *v2);
str CALCcompNEQbitlng(bit *retval, bit *v1, lng *v2);
str CALCcompNEQbitsht(bit *retval, bit *v1, sht *v2);
str CALCcompNEQbitwrd(bit *retval, bit *v1, wrd *v2);
str CALCcompNEQbtebte(bit *retval, bte *v1, bte *v2);
str CALCcompNEQbtechr(bit *retval, bte *v1, chr *v2);
str CALCcompNEQbteint(bit *retval, bte *v1, int *v2);
str CALCcompNEQbtelng(bit *retval, bte *v1, lng *v2);
str CALCcompNEQbtesht(bit *retval, bte *v1, sht *v2);
str CALCcompNEQbtewrd(bit *retval, bte *v1, wrd *v2);
str CALCcompNEQchrbte(bit *retval, chr *v1, bte *v2);
str CALCcompNEQchrchr(bit *retval, chr *v1, chr *v2);
str CALCcompNEQchrint(bit *retval, chr *v1, int *v2);
str CALCcompNEQchrlng(bit *retval, chr *v1, lng *v2);
str CALCcompNEQchrsht(bit *retval, chr *v1, sht *v2);
str CALCcompNEQchrwrd(bit *retval, chr *v1, wrd *v2);
str CALCcompNEQdbldbl(bit *retval, dbl *v1, dbl *v2);
str CALCcompNEQfltdbl(bit *retval, flt *v1, dbl *v2);
str CALCcompNEQfltflt(bit *retval, flt *v1, flt *v2);
str CALCcompNEQintbte(bit *retval, int *v1, bte *v2);
str CALCcompNEQintchr(bit *retval, int *v1, chr *v2);
str CALCcompNEQintint(bit *retval, int *v1, int *v2);
str CALCcompNEQintlng(bit *retval, int *v1, lng *v2);
str CALCcompNEQintsht(bit *retval, int *v1, sht *v2);
str CALCcompNEQintwrd(bit *retval, int *v1, wrd *v2);
str CALCcompNEQlngbte(bit *retval, lng *v1, bte *v2);
str CALCcompNEQlngchr(bit *retval, lng *v1, chr *v2);
str CALCcompNEQlngint(bit *retval, lng *v1, int *v2);
str CALCcompNEQlnglng(bit *retval, lng *v1, lng *v2);
str CALCcompNEQlngsht(bit *retval, lng *v1, sht *v2);
str CALCcompNEQlngwrd(bit *retval, lng *v1, wrd *v2);
str CALCcompNEQoidoid(bit *retval, oid *v1, oid *v2);
str CALCcompNEQshtbte(bit *retval, sht *v1, bte *v2);
str CALCcompNEQshtchr(bit *retval, sht *v1, chr *v2);
str CALCcompNEQshtint(bit *retval, sht *v1, int *v2);
str CALCcompNEQshtlng(bit *retval, sht *v1, lng *v2);
str CALCcompNEQshtsht(bit *retval, sht *v1, sht *v2);
str CALCcompNEQshtwrd(bit *retval, sht *v1, wrd *v2);
str CALCcompNEQstrstr(bit *retval, str *s1, str *s2);
str CALCcompNEQwrdbte(bit *retval, wrd *v1, bte *v2);
str CALCcompNEQwrdchr(bit *retval, wrd *v1, chr *v2);
str CALCcompNEQwrdint(bit *retval, wrd *v1, int *v2);
str CALCcompNEQwrdlng(bit *retval, wrd *v1, lng *v2);
str CALCcompNEQwrdsht(bit *retval, wrd *v1, sht *v2);
str CALCcompNEQwrdwrd(bit *retval, wrd *v1, wrd *v2);
str CALCdbl2bit(bit *res, dbl *a);
str CALCdbl2bte(bte *res, dbl *a);
str CALCdbl2chr(chr *res, dbl *a);
str CALCdbl2dbl(dbl *res, dbl *a);
str CALCdbl2flt(flt *res, dbl *a);
str CALCdbl2int(int *res, dbl *a);
str CALCdbl2lng(lng *res, dbl *a);
str CALCdbl2oid(oid *res, dbl *a);
str CALCdbl2sht(sht *res, dbl *a);
str CALCdbl2str(str *ret, dbl *val);
str CALCdbl2wrd(wrd *res, dbl *a);
str CALCflt2bit(bit *res, flt *a);
str CALCflt2bte(bte *res, flt *a);
str CALCflt2chr(chr *res, flt *a);
str CALCflt2dbl(dbl *res, flt *a);
str CALCflt2flt(flt *res, flt *a);
str CALCflt2int(int *res, flt *a);
str CALCflt2lng(lng *res, flt *a);
str CALCflt2oid(oid *res, flt *a);
str CALCflt2sht(sht *res, flt *a);
str CALCflt2str(str *ret, flt *val);
str CALCflt2wrd(wrd *res, flt *a);
str CALCint2bit(bit *res, int *a);
str CALCint2bte(bte *res, int *a);
str CALCint2chr(chr *res, int *a);
str CALCint2dbl(dbl *res, int *a);
str CALCint2flt(flt *res, int *a);
str CALCint2int(int *res, int *a);
str CALCint2lng(lng *res, int *a);
str CALCint2oid(oid *res, int *a);
str CALCint2sht(sht *res, int *a);
str CALCint2str(str *ret, int *val);
str CALCint2void(oid *ret, int *val);
str CALCint2wrd(wrd *res, int *a);
str CALCisnil_any(bit *retval, ptr *val, int tpe);
str CALCisnil_bat(bit *retval, bat *val);
str CALCisnil_bit(bit *retval, bit *val);
str CALCisnil_bte(bit *retval, bte *val);
str CALCisnil_chr(bit *retval, chr *val);
str CALCisnil_dbl(bit *retval, dbl *val);
str CALCisnil_flt(bit *retval, flt *val);
str CALCisnil_int(bit *retval, int *val);
str CALCisnil_lng(bit *retval, lng *val);
str CALCisnil_oid(bit *retval, oid *val);
str CALCisnil_ptr(bit *retval, ptr *val);
str CALCisnil_sht(bit *retval, sht *val);
str CALCisnil_str(bit *retval, str *val);
str CALCisnil_void(bit *retval, oid *val);
str CALCisnil_wrd(bit *retval, wrd *val);
str CALCisnotnil_bat(bit *retval, bat *val);
str CALCisnotnil_bit(bit *retval, bit *val);
str CALCisnotnil_bte(bit *retval, bte *val);
str CALCisnotnil_chr(bit *retval, chr *val);
str CALCisnotnil_dbl(bit *retval, dbl *val);
str CALCisnotnil_flt(bit *retval, flt *val);
str CALCisnotnil_int(bit *retval, int *val);
str CALCisnotnil_lng(bit *retval, lng *val);
str CALCisnotnil_oid(bit *retval, oid *val);
str CALCisnotnil_ptr(bit *retval, ptr *val);
str CALCisnotnil_sht(bit *retval, sht *val);
str CALCisnotnil_str(bit *retval, str *val);
str CALCisnotnil_void(bit *retval, oid *val);
str CALCisnotnil_wrd(bit *retval, wrd *val);
str CALClengthstr(int *res, str *a);
str CALClng2bit(bit *res, lng *a);
str CALClng2bte(bte *res, lng *a);
str CALClng2chr(chr *res, lng *a);
str CALClng2dbl(dbl *res, lng *a);
str CALClng2flt(flt *res, lng *a);
str CALClng2int(int *res, lng *a);
str CALClng2lng(lng *res, lng *a);
str CALClng2oid(oid *res, lng *a);
str CALClng2oid(oid *res, lng *a);
str CALClng2sht(sht *res, lng *a);
str CALClng2str(str *ret, lng *val);
str CALClng2void(oid *ret, lng *val);
str CALClng2wrd(wrd *res, lng *a);
str CALClng2wrd(wrd *res, lng *a);
str CALCnewoidBase(oid *res);
str CALCnewoidInc(oid *res, int *inc);
str CALCnewoidInclng(oid *res, lng *inc);
str CALCnil2bat(bat *retval, ptr val);
str CALCnil2bit(bit *retval, ptr val);
str CALCnil2bte(bte *retval, ptr val);
str CALCnil2chr(chr *retval, ptr val);
str CALCnil2dbl(dbl *retval, ptr val);
str CALCnil2flt(flt *retval, ptr val);
str CALCnil2int(int *retval, ptr val);
str CALCnil2lng(lng *retval, ptr val);
str CALCnil2oid(oid *retval, ptr val);
str CALCnil2ptr(ptr *retval, ptr val);
str CALCnil2sht(sht *retval, ptr val);
str CALCnil2str(str *ret, void *val);
str CALCnil2void(oid *ret, ptr *val);
str CALCnil2wrd(wrd *retval, ptr val);
str CALCoid2bit(bit *res, oid *a);
str CALCoid2bte(bte *res, oid *a);
str CALCoid2chr(chr *res, oid *a);
str CALCoid2int(int *res, oid *a);
str CALCoid2int(int *res, oid *a);
str CALCoid2lng(lng *res, oid *a);
str CALCoid2oid(oid *res, oid *a);
str CALCoid2sht(sht *res, oid *a);
str CALCoid2str(str *ret, oid *val);
str CALCoid2wrd(wrd *res, oid *a);
str CALCptr2ptr(ptr *res, ptr *a);
str CALCptr2str(str *ret, ptr *val);
str CALCsetoidBase(oid *res);
str CALCsetoidInc(oid *res, oid *inc);
str CALCsht2bit(bit *res, sht *a);
str CALCsht2bte(bte *res, sht *a);
str CALCsht2chr(chr *res, sht *a);
str CALCsht2dbl(dbl *res, sht *a);
str CALCsht2flt(flt *res, sht *a);
str CALCsht2int(int *res, sht *a);
str CALCsht2lng(lng *res, sht *a);
str CALCsht2oid(oid *res, sht *a);
str CALCsht2sht(sht *res, sht *a);
str CALCsht2str(str *ret, sht *val);
str CALCsht2void(oid *ret, sht *val);
str CALCsht2wrd(wrd *res, sht *a);
str CALCsizeofbit(int *res, bit *a);
str CALCsizeofbte(int *res, bte *a);
str CALCsizeofchr(int *res, chr *a);
str CALCsizeofdbl(int *res, dbl *a);
str CALCsizeofflt(int *res, flt *a);
str CALCsizeofint(int *res, int *a);
str CALCsizeoflng(int *res, lng *a);
str CALCsizeofsht(int *res, sht *a);
str CALCsizeofwrd(int *res, wrd *a);
str CALCstr2bat(bat *ret, str *val);
str CALCstr2bit(bit *ret, str *val);
str CALCstr2bte(bte *ret, str *val);
str CALCstr2chr(chr *ret, str *val);
str CALCstr2dbl(dbl *ret, str *val);
str CALCstr2flt(flt *ret, str *val);
str CALCstr2int(int *ret, str *val);
str CALCstr2lng(lng *ret, str *val);
str CALCstr2nil(str *retval, str *val);
str CALCstr2oid(oid *ret, str *val);
str CALCstr2ptr(ptr *ret, str *val);
str CALCstr2sht(sht *ret, str *val);
str CALCstr2str(str *ret, str *val);
str CALCstrConcat(str *ret, str *l, str *r);
str CALCstrConcatInt(str *ret, str *l, int *r);
str CALCswitchbit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str CALCunarybitABS(bit *res, bit *a);
str CALCunarybitNEG(bit *res, bit *a);
str CALCunarybitNOT(bit *retval, bit *value);
str CALCunarybitSIGN(int *res, bit *a);
str CALCunarybteABS(bte *res, bte *a);
str CALCunarybteNEG(bte *res, bte *a);
str CALCunarybteNOT(bte *res, bte *a);
str CALCunarybteSIGN(int *res, bte *a);
str CALCunarycheckbitINV(bit *res, bit *a);
str CALCunarycheckbteINV(bte *res, bte *a);
str CALCunarycheckchrINV(chr *res, chr *a);
str CALCunarycheckdblINV(dbl *res, dbl *a);
str CALCunarycheckfltINV(flt *res, flt *a);
str CALCunarycheckintINV(int *res, int *a);
str CALCunarychecklngINV(lng *res, lng *a);
str CALCunarycheckshtINV(sht *res, sht *a);
str CALCunarycheckwrdINV(wrd *res, wrd *a);
str CALCunarychrABS(chr *res, chr *a);
str CALCunarychrNEG(chr *res, chr *a);
str CALCunarychrNOT(chr *res, chr *a);
str CALCunarychrSIGN(int *res, chr *a);
str CALCunarydblABS(dbl *res, dbl *a);
str CALCunarydblNEG(dbl *res, dbl *a);
str CALCunarydblSIGN(int *res, dbl *a);
str CALCunaryfltABS(flt *res, flt *a);
str CALCunaryfltNEG(flt *res, flt *a);
str CALCunaryfltSIGN(int *res, flt *a);
str CALCunaryintABS(int *res, int *a);
str CALCunaryintNEG(int *res, int *a);
str CALCunaryintNOT(int *res, int *a);
str CALCunaryintSIGN(int *res, int *a);
str CALCunarylngABS(lng *res, lng *a);
str CALCunarylngNEG(lng *res, lng *a);
str CALCunarylngNOT(lng *res, lng *a);
str CALCunarylngSIGN(int *res, lng *a);
str CALCunaryshtABS(sht *res, sht *a);
str CALCunaryshtNEG(sht *res, sht *a);
str CALCunaryshtNOT(sht *res, sht *a);
str CALCunaryshtSIGN(int *res, sht *a);
str CALCunarywrdABS(wrd *res, wrd *a);
str CALCunarywrdNEG(wrd *res, wrd *a);
str CALCunarywrdSIGN(int *res, wrd *a);
str CALCwrd2bit(bit *res, wrd *a);
str CALCwrd2bte(bte *res, wrd *a);
str CALCwrd2chr(chr *res, wrd *a);
str CALCwrd2dbl(dbl *res, wrd *a);
str CALCwrd2flt(flt *res, wrd *a);
str CALCwrd2int(int *res, wrd *a);
str CALCwrd2int(int *res, wrd *a);
str CALCwrd2lng(lng *res, wrd *a);
str CALCwrd2oid(oid *res, wrd *a);
str CALCwrd2sht(sht *res, wrd *a);
str CALCwrd2wrd(wrd *res, wrd *a);
str CHPbunHasMoreElements(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CHPbunIterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CHPgetHead(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CHPgetTail(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CHPhasMoreElements(lng *res, int *vid, int *bid, lng *granule);
str CHPnewChunkIterator(lng *res, int *vid, int *bid, lng *granule);
str CLRbatBlue(int *ret, int *l);
str CLRbatCb(int *ret, int *l);
str CLRbatColor(int *ret, int *l);
str CLRbatCr(int *ret, int *l);
str CLRbatGreen(int *ret, int *l);
str CLRbatHsv(int *ret, int *l, int *bid2, int *bid3);
str CLRbatHue(int *ret, int *l);
str CLRbatHueInt(int *ret, int *l);
str CLRbatLuminance(int *ret, int *l);
str CLRbatRed(int *ret, int *l);
str CLRbatRgb(int *ret, int *l, int *bid2, int *bid3);
str CLRbatSaturation(int *ret, int *l);
str CLRbatSaturationInt(int *ret, int *l);
str CLRbatStr(int *ret, int *l);
str CLRbatValue(int *ret, int *l);
str CLRbatValueInt(int *ret, int *l);
str CLRbatycc(int *ret, int *l, int *bid2, int *bid3);
str CLRblue(int *b, color *c);
str CLRcb(int *g, color *c);
str CLRcolor(color *c, str *val);
str CLRcr(int *r, color *c);
str CLRgreen(int *g, color *c);
str CLRhsv(color *c, flt *h, flt *s, flt *v);
str CLRhue(flt *r, color *c);
str CLRhueInt(int *r, color *c);
str CLRluminance(int *r, color *c);
str CLRred(int *r, color *c);
str CLRrgb(color *rgb, int *r, int *g, int *b);
str CLRsaturation(flt *g, color *c);
str CLRsaturationInt(int *g, color *c);
str CLRstr(str *val, color *c);
str CLRvalue(flt *b, color *c);
str CLRvalueInt(int *b, color *c);
str CLRycc(color *c, int *y, int *cr, int *cb);
str CLS_create2_bte(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_chr(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_dbl(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_flt(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_int(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_lng(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_sht(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create2_wrd(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset, bit *order);
str CLS_create_bte(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_chr(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_dbl(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_flt(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_int(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_lng(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_sht(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_create_wrd(bat *rpsum, bat *rcmap, bat *b, unsigned int *bits, unsigned int *offset);
str CLS_map(bat *rb, bat *cmap, bat *b);
str CLS_map2(bat *rb, bat *psum, bat *cmap, bat *b);
str CLS_split(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTActions(int *ret);
str CLTInfo(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTLastCommand(int *ret);
str CLTLogin(int *ret);
str CLTTime(int *ret);
str CLTaddUser(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTbackendsum(str *ret, str *pw);
str CLTchangePassword(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTchangeUsername(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTcheckPermission(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTgetClientId(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTgetPasswordHash(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTgetScenario(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTgetTimeout(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTgetUsername(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTgetUsers(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTmd5sum(str *ret, str *pw);
str CLTquit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTremoveUser(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTripemd160sum(str *ret, str *pw);
str CLTsetHistory(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTsetListing(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTsetPassword(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTsetScenario(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTsetTimeout(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTsha1sum(str *ret, str *pw);
str CLTsha2sum(str *ret, str *pw, int *bits);
str CLTshutdown(int *ret, bit *forced);
str CLTstop(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTsuspend(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLTusers(int *ret);
str CLTwakeup(int *ret, int *id);
str CLUSTER_apply(bat *bid, BAT *nb, BAT *cmap);
str CLUSTER_column(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CLUSTER_key(bat *M, bat *B);
str CLUSTER_map(bat *RB, bat *B);
str CLUSTER_table(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDBATclone(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
str CMDBATderivedByName(int *ret, str *nme);
str CMDBATflush(int *res, int *bid);
str CMDBATnew(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
str CMDBATnewDerived(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
str CMDBATnewint(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
str CMDBATreduce(int *ret, int *bid);
str CMDBATsetGarbage(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDBBPproject(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDBBPprojectNil(int *ret, int *bid);
str CMD_AND_bit(int *ret, int *l, int *r);
str CMD_AND_bit_cst(int *ret, int *l, bit *cst);
str CMD_AND_cst_bit(int *ret, bit *cst, int *l);
str CMD_EQ_bit(int *ret, int *l, int *r);
str CMD_EQ_bit_cst(int *ret, int *l, bit *cst);
str CMD_EQ_bte(int *ret, int *l, int *r);
str CMD_EQ_bte_cst(int *ret, int *l, bte *cst);
str CMD_EQ_cst_bit(int *ret, bit *cst, int *l);
str CMD_EQ_cst_bte(int *ret, bte *cst, int *l);
str CMD_EQ_cst_dbl(int *ret, dbl *cst, int *l);
str CMD_EQ_cst_flt(int *ret, flt *cst, int *l);
str CMD_EQ_cst_int(int *ret, int *cst, int *l);
str CMD_EQ_cst_lng(int *ret, lng *cst, int *l);
str CMD_EQ_cst_oid(int *ret, oid *cst, int *l);
str CMD_EQ_cst_sht(int *ret, sht *cst, int *l);
str CMD_EQ_cst_wrd(int *ret, wrd *cst, int *l);
str CMD_EQ_dbl(int *ret, int *l, int *r);
str CMD_EQ_dbl_cst(int *ret, int *l, dbl *cst);
str CMD_EQ_flt(int *ret, int *l, int *r);
str CMD_EQ_flt_cst(int *ret, int *l, flt *cst);
str CMD_EQ_int(int *ret, int *l, int *r);
str CMD_EQ_int_cst(int *ret, int *l, int *cst);
str CMD_EQ_lng(int *ret, int *l, int *r);
str CMD_EQ_lng_cst(int *ret, int *l, lng *cst);
str CMD_EQ_oid(int *ret, int *l, int *r);
str CMD_EQ_oid_cst(int *ret, int *l, oid *cst);
str CMD_EQ_sht(int *ret, int *l, int *r);
str CMD_EQ_sht_cst(int *ret, int *l, sht *cst);
str CMD_EQ_wrd(int *ret, int *l, int *r);
str CMD_EQ_wrd_cst(int *ret, int *l, wrd *cst);
str CMD_GE_bit(int *ret, int *l, int *r);
str CMD_GE_bit_cst(int *ret, int *l, bit *cst);
str CMD_GE_bte(int *ret, int *l, int *r);
str CMD_GE_bte_cst(int *ret, int *l, bte *cst);
str CMD_GE_cst_bit(int *ret, bit *cst, int *l);
str CMD_GE_cst_bte(int *ret, bte *cst, int *l);
str CMD_GE_cst_dbl(int *ret, dbl *cst, int *l);
str CMD_GE_cst_flt(int *ret, flt *cst, int *l);
str CMD_GE_cst_int(int *ret, int *cst, int *l);
str CMD_GE_cst_lng(int *ret, lng *cst, int *l);
str CMD_GE_cst_oid(int *ret, oid *cst, int *l);
str CMD_GE_cst_sht(int *ret, sht *cst, int *l);
str CMD_GE_cst_wrd(int *ret, wrd *cst, int *l);
str CMD_GE_dbl(int *ret, int *l, int *r);
str CMD_GE_dbl_cst(int *ret, int *l, dbl *cst);
str CMD_GE_flt(int *ret, int *l, int *r);
str CMD_GE_flt_cst(int *ret, int *l, flt *cst);
str CMD_GE_int(int *ret, int *l, int *r);
str CMD_GE_int_cst(int *ret, int *l, int *cst);
str CMD_GE_lng(int *ret, int *l, int *r);
str CMD_GE_lng_cst(int *ret, int *l, lng *cst);
str CMD_GE_oid(int *ret, int *l, int *r);
str CMD_GE_oid_cst(int *ret, int *l, oid *cst);
str CMD_GE_sht(int *ret, int *l, int *r);
str CMD_GE_sht_cst(int *ret, int *l, sht *cst);
str CMD_GE_wrd(int *ret, int *l, int *r);
str CMD_GE_wrd_cst(int *ret, int *l, wrd *cst);
str CMD_GT_bit(int *ret, int *l, int *r);
str CMD_GT_bit_cst(int *ret, int *l, bit *cst);
str CMD_GT_bte(int *ret, int *l, int *r);
str CMD_GT_bte_cst(int *ret, int *l, bte *cst);
str CMD_GT_cst_bit(int *ret, bit *cst, int *l);
str CMD_GT_cst_bte(int *ret, bte *cst, int *l);
str CMD_GT_cst_dbl(int *ret, dbl *cst, int *l);
str CMD_GT_cst_flt(int *ret, flt *cst, int *l);
str CMD_GT_cst_int(int *ret, int *cst, int *l);
str CMD_GT_cst_lng(int *ret, lng *cst, int *l);
str CMD_GT_cst_oid(int *ret, oid *cst, int *l);
str CMD_GT_cst_sht(int *ret, sht *cst, int *l);
str CMD_GT_cst_wrd(int *ret, wrd *cst, int *l);
str CMD_GT_dbl(int *ret, int *l, int *r);
str CMD_GT_dbl_cst(int *ret, int *l, dbl *cst);
str CMD_GT_flt(int *ret, int *l, int *r);
str CMD_GT_flt_cst(int *ret, int *l, flt *cst);
str CMD_GT_int(int *ret, int *l, int *r);
str CMD_GT_int_cst(int *ret, int *l, int *cst);
str CMD_GT_lng(int *ret, int *l, int *r);
str CMD_GT_lng_cst(int *ret, int *l, lng *cst);
str CMD_GT_oid(int *ret, int *l, int *r);
str CMD_GT_oid_cst(int *ret, int *l, oid *cst);
str CMD_GT_sht(int *ret, int *l, int *r);
str CMD_GT_sht_cst(int *ret, int *l, sht *cst);
str CMD_GT_wrd(int *ret, int *l, int *r);
str CMD_GT_wrd_cst(int *ret, int *l, wrd *cst);
str CMD_LE_bit(int *ret, int *l, int *r);
str CMD_LE_bit_cst(int *ret, int *l, bit *cst);
str CMD_LE_bte(int *ret, int *l, int *r);
str CMD_LE_bte_cst(int *ret, int *l, bte *cst);
str CMD_LE_cst_bit(int *ret, bit *cst, int *l);
str CMD_LE_cst_bte(int *ret, bte *cst, int *l);
str CMD_LE_cst_dbl(int *ret, dbl *cst, int *l);
str CMD_LE_cst_flt(int *ret, flt *cst, int *l);
str CMD_LE_cst_int(int *ret, int *cst, int *l);
str CMD_LE_cst_lng(int *ret, lng *cst, int *l);
str CMD_LE_cst_oid(int *ret, oid *cst, int *l);
str CMD_LE_cst_sht(int *ret, sht *cst, int *l);
str CMD_LE_cst_wrd(int *ret, wrd *cst, int *l);
str CMD_LE_dbl(int *ret, int *l, int *r);
str CMD_LE_dbl_cst(int *ret, int *l, dbl *cst);
str CMD_LE_flt(int *ret, int *l, int *r);
str CMD_LE_flt_cst(int *ret, int *l, flt *cst);
str CMD_LE_int(int *ret, int *l, int *r);
str CMD_LE_int_cst(int *ret, int *l, int *cst);
str CMD_LE_lng(int *ret, int *l, int *r);
str CMD_LE_lng_cst(int *ret, int *l, lng *cst);
str CMD_LE_oid(int *ret, int *l, int *r);
str CMD_LE_oid_cst(int *ret, int *l, oid *cst);
str CMD_LE_sht(int *ret, int *l, int *r);
str CMD_LE_sht_cst(int *ret, int *l, sht *cst);
str CMD_LE_wrd(int *ret, int *l, int *r);
str CMD_LE_wrd_cst(int *ret, int *l, wrd *cst);
str CMD_LT_bit(int *ret, int *l, int *r);
str CMD_LT_bit_cst(int *ret, int *l, bit *cst);
str CMD_LT_bte(int *ret, int *l, int *r);
str CMD_LT_bte_cst(int *ret, int *l, bte *cst);
str CMD_LT_cst_bit(int *ret, bit *cst, int *l);
str CMD_LT_cst_bte(int *ret, bte *cst, int *l);
str CMD_LT_cst_dbl(int *ret, dbl *cst, int *l);
str CMD_LT_cst_flt(int *ret, flt *cst, int *l);
str CMD_LT_cst_int(int *ret, int *cst, int *l);
str CMD_LT_cst_lng(int *ret, lng *cst, int *l);
str CMD_LT_cst_oid(int *ret, oid *cst, int *l);
str CMD_LT_cst_sht(int *ret, sht *cst, int *l);
str CMD_LT_cst_wrd(int *ret, wrd *cst, int *l);
str CMD_LT_dbl(int *ret, int *l, int *r);
str CMD_LT_dbl_cst(int *ret, int *l, dbl *cst);
str CMD_LT_flt(int *ret, int *l, int *r);
str CMD_LT_flt_cst(int *ret, int *l, flt *cst);
str CMD_LT_int(int *ret, int *l, int *r);
str CMD_LT_int_cst(int *ret, int *l, int *cst);
str CMD_LT_lng(int *ret, int *l, int *r);
str CMD_LT_lng_cst(int *ret, int *l, lng *cst);
str CMD_LT_oid(int *ret, int *l, int *r);
str CMD_LT_oid_cst(int *ret, int *l, oid *cst);
str CMD_LT_sht(int *ret, int *l, int *r);
str CMD_LT_sht_cst(int *ret, int *l, sht *cst);
str CMD_LT_wrd(int *ret, int *l, int *r);
str CMD_LT_wrd_cst(int *ret, int *l, wrd *cst);
str CMD_NEQ_bit(int *ret, int *l, int *r);
str CMD_NEQ_bit_cst(int *ret, int *l, bit *cst);
str CMD_NEQ_bte(int *ret, int *l, int *r);
str CMD_NEQ_bte_cst(int *ret, int *l, bte *cst);
str CMD_NEQ_cst_bit(int *ret, bit *cst, int *l);
str CMD_NEQ_cst_bte(int *ret, bte *cst, int *l);
str CMD_NEQ_cst_dbl(int *ret, dbl *cst, int *l);
str CMD_NEQ_cst_flt(int *ret, flt *cst, int *l);
str CMD_NEQ_cst_int(int *ret, int *cst, int *l);
str CMD_NEQ_cst_lng(int *ret, lng *cst, int *l);
str CMD_NEQ_cst_oid(int *ret, oid *cst, int *l);
str CMD_NEQ_cst_sht(int *ret, sht *cst, int *l);
str CMD_NEQ_cst_wrd(int *ret, wrd *cst, int *l);
str CMD_NEQ_dbl(int *ret, int *l, int *r);
str CMD_NEQ_dbl_cst(int *ret, int *l, dbl *cst);
str CMD_NEQ_flt(int *ret, int *l, int *r);
str CMD_NEQ_flt_cst(int *ret, int *l, flt *cst);
str CMD_NEQ_int(int *ret, int *l, int *r);
str CMD_NEQ_int_cst(int *ret, int *l, int *cst);
str CMD_NEQ_lng(int *ret, int *l, int *r);
str CMD_NEQ_lng_cst(int *ret, int *l, lng *cst);
str CMD_NEQ_oid(int *ret, int *l, int *r);
str CMD_NEQ_oid_cst(int *ret, int *l, oid *cst);
str CMD_NEQ_sht(int *ret, int *l, int *r);
str CMD_NEQ_sht_cst(int *ret, int *l, sht *cst);
str CMD_NEQ_wrd(int *ret, int *l, int *r);
str CMD_NEQ_wrd_cst(int *ret, int *l, wrd *cst);
str CMD_OR_bit(int *ret, int *l, int *r);
str CMD_OR_bit_cst(int *ret, int *l, bit *cst);
str CMD_OR_cst_bit(int *ret, bit *cst, int *l);
str CMDaccum_AND_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_AND_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_AND_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_EQ_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_EQ_bte(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_bte_cst(int *ret, int *r, int *l, bte *cst);
str CMDaccum_EQ_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_EQ_cst_bte(int *ret, int *r, bte *cst, int *l);
str CMDaccum_EQ_cst_dbl(int *ret, int *r, dbl *cst, int *l);
str CMDaccum_EQ_cst_flt(int *ret, int *r, flt *cst, int *l);
str CMDaccum_EQ_cst_int(int *ret, int *r, int *cst, int *l);
str CMDaccum_EQ_cst_lng(int *ret, int *r, lng *cst, int *l);
str CMDaccum_EQ_cst_oid(int *ret, int *r, oid *cst, int *l);
str CMDaccum_EQ_cst_sht(int *ret, int *r, sht *cst, int *l);
str CMDaccum_EQ_cst_wrd(int *ret, int *r, wrd *cst, int *l);
str CMDaccum_EQ_dbl(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_dbl_cst(int *ret, int *r, int *l, dbl *cst);
str CMDaccum_EQ_flt(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_flt_cst(int *ret, int *r, int *l, flt *cst);
str CMDaccum_EQ_int(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_int_cst(int *ret, int *r, int *l, int *cst);
str CMDaccum_EQ_lng(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_lng_cst(int *ret, int *r, int *l, lng *cst);
str CMDaccum_EQ_oid(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_oid_cst(int *ret, int *r, int *l, oid *cst);
str CMDaccum_EQ_sht(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_sht_cst(int *ret, int *r, int *l, sht *cst);
str CMDaccum_EQ_wrd(int *ret, int *d, int *l, int *r);
str CMDaccum_EQ_wrd_cst(int *ret, int *r, int *l, wrd *cst);
str CMDaccum_GE_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_GE_bte(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_bte_cst(int *ret, int *r, int *l, bte *cst);
str CMDaccum_GE_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_GE_cst_bte(int *ret, int *r, bte *cst, int *l);
str CMDaccum_GE_cst_dbl(int *ret, int *r, dbl *cst, int *l);
str CMDaccum_GE_cst_flt(int *ret, int *r, flt *cst, int *l);
str CMDaccum_GE_cst_int(int *ret, int *r, int *cst, int *l);
str CMDaccum_GE_cst_lng(int *ret, int *r, lng *cst, int *l);
str CMDaccum_GE_cst_oid(int *ret, int *r, oid *cst, int *l);
str CMDaccum_GE_cst_sht(int *ret, int *r, sht *cst, int *l);
str CMDaccum_GE_cst_wrd(int *ret, int *r, wrd *cst, int *l);
str CMDaccum_GE_dbl(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_dbl_cst(int *ret, int *r, int *l, dbl *cst);
str CMDaccum_GE_flt(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_flt_cst(int *ret, int *r, int *l, flt *cst);
str CMDaccum_GE_int(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_int_cst(int *ret, int *r, int *l, int *cst);
str CMDaccum_GE_lng(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_lng_cst(int *ret, int *r, int *l, lng *cst);
str CMDaccum_GE_oid(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_oid_cst(int *ret, int *r, int *l, oid *cst);
str CMDaccum_GE_sht(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_sht_cst(int *ret, int *r, int *l, sht *cst);
str CMDaccum_GE_wrd(int *ret, int *d, int *l, int *r);
str CMDaccum_GE_wrd_cst(int *ret, int *r, int *l, wrd *cst);
str CMDaccum_GT_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_GT_bte(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_bte_cst(int *ret, int *r, int *l, bte *cst);
str CMDaccum_GT_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_GT_cst_bte(int *ret, int *r, bte *cst, int *l);
str CMDaccum_GT_cst_dbl(int *ret, int *r, dbl *cst, int *l);
str CMDaccum_GT_cst_flt(int *ret, int *r, flt *cst, int *l);
str CMDaccum_GT_cst_int(int *ret, int *r, int *cst, int *l);
str CMDaccum_GT_cst_lng(int *ret, int *r, lng *cst, int *l);
str CMDaccum_GT_cst_oid(int *ret, int *r, oid *cst, int *l);
str CMDaccum_GT_cst_sht(int *ret, int *r, sht *cst, int *l);
str CMDaccum_GT_cst_wrd(int *ret, int *r, wrd *cst, int *l);
str CMDaccum_GT_dbl(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_dbl_cst(int *ret, int *r, int *l, dbl *cst);
str CMDaccum_GT_flt(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_flt_cst(int *ret, int *r, int *l, flt *cst);
str CMDaccum_GT_int(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_int_cst(int *ret, int *r, int *l, int *cst);
str CMDaccum_GT_lng(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_lng_cst(int *ret, int *r, int *l, lng *cst);
str CMDaccum_GT_oid(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_oid_cst(int *ret, int *r, int *l, oid *cst);
str CMDaccum_GT_sht(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_sht_cst(int *ret, int *r, int *l, sht *cst);
str CMDaccum_GT_wrd(int *ret, int *d, int *l, int *r);
str CMDaccum_GT_wrd_cst(int *ret, int *r, int *l, wrd *cst);
str CMDaccum_LE_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_LE_bte(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_bte_cst(int *ret, int *r, int *l, bte *cst);
str CMDaccum_LE_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_LE_cst_bte(int *ret, int *r, bte *cst, int *l);
str CMDaccum_LE_cst_dbl(int *ret, int *r, dbl *cst, int *l);
str CMDaccum_LE_cst_flt(int *ret, int *r, flt *cst, int *l);
str CMDaccum_LE_cst_int(int *ret, int *r, int *cst, int *l);
str CMDaccum_LE_cst_lng(int *ret, int *r, lng *cst, int *l);
str CMDaccum_LE_cst_oid(int *ret, int *r, oid *cst, int *l);
str CMDaccum_LE_cst_sht(int *ret, int *r, sht *cst, int *l);
str CMDaccum_LE_cst_wrd(int *ret, int *r, wrd *cst, int *l);
str CMDaccum_LE_dbl(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_dbl_cst(int *ret, int *r, int *l, dbl *cst);
str CMDaccum_LE_flt(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_flt_cst(int *ret, int *r, int *l, flt *cst);
str CMDaccum_LE_int(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_int_cst(int *ret, int *r, int *l, int *cst);
str CMDaccum_LE_lng(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_lng_cst(int *ret, int *r, int *l, lng *cst);
str CMDaccum_LE_oid(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_oid_cst(int *ret, int *r, int *l, oid *cst);
str CMDaccum_LE_sht(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_sht_cst(int *ret, int *r, int *l, sht *cst);
str CMDaccum_LE_wrd(int *ret, int *d, int *l, int *r);
str CMDaccum_LE_wrd_cst(int *ret, int *r, int *l, wrd *cst);
str CMDaccum_LT_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_LT_bte(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_bte_cst(int *ret, int *r, int *l, bte *cst);
str CMDaccum_LT_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_LT_cst_bte(int *ret, int *r, bte *cst, int *l);
str CMDaccum_LT_cst_dbl(int *ret, int *r, dbl *cst, int *l);
str CMDaccum_LT_cst_flt(int *ret, int *r, flt *cst, int *l);
str CMDaccum_LT_cst_int(int *ret, int *r, int *cst, int *l);
str CMDaccum_LT_cst_lng(int *ret, int *r, lng *cst, int *l);
str CMDaccum_LT_cst_oid(int *ret, int *r, oid *cst, int *l);
str CMDaccum_LT_cst_sht(int *ret, int *r, sht *cst, int *l);
str CMDaccum_LT_cst_wrd(int *ret, int *r, wrd *cst, int *l);
str CMDaccum_LT_dbl(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_dbl_cst(int *ret, int *r, int *l, dbl *cst);
str CMDaccum_LT_flt(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_flt_cst(int *ret, int *r, int *l, flt *cst);
str CMDaccum_LT_int(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_int_cst(int *ret, int *r, int *l, int *cst);
str CMDaccum_LT_lng(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_lng_cst(int *ret, int *r, int *l, lng *cst);
str CMDaccum_LT_oid(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_oid_cst(int *ret, int *r, int *l, oid *cst);
str CMDaccum_LT_sht(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_sht_cst(int *ret, int *r, int *l, sht *cst);
str CMDaccum_LT_wrd(int *ret, int *d, int *l, int *r);
str CMDaccum_LT_wrd_cst(int *ret, int *r, int *l, wrd *cst);
str CMDaccum_NEQ_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_NEQ_bte(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_bte_cst(int *ret, int *r, int *l, bte *cst);
str CMDaccum_NEQ_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDaccum_NEQ_cst_bte(int *ret, int *r, bte *cst, int *l);
str CMDaccum_NEQ_cst_dbl(int *ret, int *r, dbl *cst, int *l);
str CMDaccum_NEQ_cst_flt(int *ret, int *r, flt *cst, int *l);
str CMDaccum_NEQ_cst_int(int *ret, int *r, int *cst, int *l);
str CMDaccum_NEQ_cst_lng(int *ret, int *r, lng *cst, int *l);
str CMDaccum_NEQ_cst_oid(int *ret, int *r, oid *cst, int *l);
str CMDaccum_NEQ_cst_sht(int *ret, int *r, sht *cst, int *l);
str CMDaccum_NEQ_cst_wrd(int *ret, int *r, wrd *cst, int *l);
str CMDaccum_NEQ_dbl(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_dbl_cst(int *ret, int *r, int *l, dbl *cst);
str CMDaccum_NEQ_flt(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_flt_cst(int *ret, int *r, int *l, flt *cst);
str CMDaccum_NEQ_int(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_int_cst(int *ret, int *r, int *l, int *cst);
str CMDaccum_NEQ_lng(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_lng_cst(int *ret, int *r, int *l, lng *cst);
str CMDaccum_NEQ_oid(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_oid_cst(int *ret, int *r, int *l, oid *cst);
str CMDaccum_NEQ_sht(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_sht_cst(int *ret, int *r, int *l, sht *cst);
str CMDaccum_NEQ_wrd(int *ret, int *d, int *l, int *r);
str CMDaccum_NEQ_wrd_cst(int *ret, int *r, int *l, wrd *cst);
str CMDaccum_OR_bit(int *ret, int *d, int *l, int *r);
str CMDaccum_OR_bit_cst(int *ret, int *r, int *l, bit *cst);
str CMDaccum_OR_cst_bit(int *ret, int *r, bit *cst, int *l);
str CMDactivateProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbatADD_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatADD_bte_bte_int(int *ret, int *l, int *r);
str CMDbatADD_bte_bte_lng(int *ret, int *l, int *r);
str CMDbatADD_bte_bte_sht(int *ret, int *l, int *r);
str CMDbatADD_bte_bte_wrd(int *ret, int *l, int *r);
str CMDbatADD_bte_int_int(int *ret, int *l, int *r);
str CMDbatADD_bte_int_lng(int *ret, int *l, int *r);
str CMDbatADD_bte_int_wrd(int *ret, int *l, int *r);
str CMDbatADD_bte_lng_lng(int *ret, int *l, int *r);
str CMDbatADD_bte_sht_int(int *ret, int *l, int *r);
str CMDbatADD_bte_sht_lng(int *ret, int *l, int *r);
str CMDbatADD_bte_sht_sht(int *ret, int *l, int *r);
str CMDbatADD_bte_sht_wrd(int *ret, int *l, int *r);
str CMDbatADD_bte_wrd_lng(int *ret, int *l, int *r);
str CMDbatADD_bte_wrd_wrd(int *ret, int *l, int *r);
str CMDbatADD_dbl_dbl_dbl(int *ret, int *l, int *r);
str CMDbatADD_dbl_flt_dbl(int *ret, int *l, int *r);
str CMDbatADD_flt_dbl_dbl(int *ret, int *l, int *r);
str CMDbatADD_flt_flt_dbl(int *ret, int *l, int *r);
str CMDbatADD_flt_flt_flt(int *ret, int *l, int *r);
str CMDbatADD_int_bte_int(int *ret, int *l, int *r);
str CMDbatADD_int_bte_lng(int *ret, int *l, int *r);
str CMDbatADD_int_bte_wrd(int *ret, int *l, int *r);
str CMDbatADD_int_int_int(int *ret, int *l, int *r);
str CMDbatADD_int_int_lng(int *ret, int *l, int *r);
str CMDbatADD_int_int_wrd(int *ret, int *l, int *r);
str CMDbatADD_int_lng_lng(int *ret, int *l, int *r);
str CMDbatADD_int_sht_int(int *ret, int *l, int *r);
str CMDbatADD_int_sht_lng(int *ret, int *l, int *r);
str CMDbatADD_int_sht_wrd(int *ret, int *l, int *r);
str CMDbatADD_int_wrd_lng(int *ret, int *l, int *r);
str CMDbatADD_int_wrd_wrd(int *ret, int *l, int *r);
str CMDbatADD_lng_bte_lng(int *ret, int *l, int *r);
str CMDbatADD_lng_int_lng(int *ret, int *l, int *r);
str CMDbatADD_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatADD_lng_sht_lng(int *ret, int *l, int *r);
str CMDbatADD_lng_wrd_lng(int *ret, int *l, int *r);
str CMDbatADD_sht_bte_int(int *ret, int *l, int *r);
str CMDbatADD_sht_bte_lng(int *ret, int *l, int *r);
str CMDbatADD_sht_bte_sht(int *ret, int *l, int *r);
str CMDbatADD_sht_bte_wrd(int *ret, int *l, int *r);
str CMDbatADD_sht_int_int(int *ret, int *l, int *r);
str CMDbatADD_sht_int_lng(int *ret, int *l, int *r);
str CMDbatADD_sht_int_wrd(int *ret, int *l, int *r);
str CMDbatADD_sht_lng_lng(int *ret, int *l, int *r);
str CMDbatADD_sht_sht_int(int *ret, int *l, int *r);
str CMDbatADD_sht_sht_lng(int *ret, int *l, int *r);
str CMDbatADD_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatADD_sht_sht_wrd(int *ret, int *l, int *r);
str CMDbatADD_sht_wrd_lng(int *ret, int *l, int *r);
str CMDbatADD_sht_wrd_wrd(int *ret, int *l, int *r);
str CMDbatADD_wrd_bte_lng(int *ret, int *l, int *r);
str CMDbatADD_wrd_bte_wrd(int *ret, int *l, int *r);
str CMDbatADD_wrd_int_lng(int *ret, int *l, int *r);
str CMDbatADD_wrd_int_wrd(int *ret, int *l, int *r);
str CMDbatADD_wrd_lng_lng(int *ret, int *l, int *r);
str CMDbatADD_wrd_sht_lng(int *ret, int *l, int *r);
str CMDbatADD_wrd_sht_wrd(int *ret, int *l, int *r);
str CMDbatADD_wrd_wrd_lng(int *ret, int *l, int *r);
str CMDbatADD_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatADDcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_bte_int(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_bte_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_bte_sht(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_bte_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_int_int(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_int_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_int_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_lng_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_sht_int(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_sht_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_sht_sht(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_sht_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_wrd_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_bte_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_dbl_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatADDcst_dbl_flt_dbl(int *ret, int *l, void *cst);
str CMDbatADDcst_flt_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatADDcst_flt_flt_dbl(int *ret, int *l, void *cst);
str CMDbatADDcst_flt_flt_flt(int *ret, int *l, void *cst);
str CMDbatADDcst_int_bte_int(int *ret, int *l, void *cst);
str CMDbatADDcst_int_bte_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_int_bte_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatADDcst_int_int_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_int_int_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_int_lng_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_int_sht_int(int *ret, int *l, void *cst);
str CMDbatADDcst_int_sht_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_int_sht_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_int_wrd_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_int_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_lng_bte_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_lng_int_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_lng_sht_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_lng_wrd_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_bte_int(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_bte_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_bte_sht(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_bte_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_int_int(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_int_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_int_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_lng_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_sht_int(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_sht_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_sht_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_wrd_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_sht_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_bte_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_bte_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_int_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_int_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_lng_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_sht_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_sht_wrd(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_wrd_lng(int *ret, int *l, void *cst);
str CMDbatADDcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatAND_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatAND_int_int_int(int *ret, int *l, int *r);
str CMDbatAND_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatAND_oid_oid_oid(int *ret, int *l, int *r);
str CMDbatAND_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatAND_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatANDcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatANDcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatANDcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatANDcst_oid_oid_oid(int *ret, int *l, void *cst);
str CMDbatANDcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatANDcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatDIV_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatDIV_bte_bte_int(int *ret, int *l, int *r);
str CMDbatDIV_bte_bte_lng(int *ret, int *l, int *r);
str CMDbatDIV_bte_bte_sht(int *ret, int *l, int *r);
str CMDbatDIV_bte_bte_wrd(int *ret, int *l, int *r);
str CMDbatDIV_bte_int_int(int *ret, int *l, int *r);
str CMDbatDIV_bte_int_lng(int *ret, int *l, int *r);
str CMDbatDIV_bte_int_wrd(int *ret, int *l, int *r);
str CMDbatDIV_bte_lng_lng(int *ret, int *l, int *r);
str CMDbatDIV_bte_sht_int(int *ret, int *l, int *r);
str CMDbatDIV_bte_sht_lng(int *ret, int *l, int *r);
str CMDbatDIV_bte_sht_sht(int *ret, int *l, int *r);
str CMDbatDIV_bte_sht_wrd(int *ret, int *l, int *r);
str CMDbatDIV_bte_wrd_lng(int *ret, int *l, int *r);
str CMDbatDIV_bte_wrd_wrd(int *ret, int *l, int *r);
str CMDbatDIV_dbl_dbl_dbl(int *ret, int *l, int *r);
str CMDbatDIV_dbl_flt_dbl(int *ret, int *l, int *r);
str CMDbatDIV_flt_dbl_dbl(int *ret, int *l, int *r);
str CMDbatDIV_flt_flt_dbl(int *ret, int *l, int *r);
str CMDbatDIV_flt_flt_flt(int *ret, int *l, int *r);
str CMDbatDIV_int_bte_int(int *ret, int *l, int *r);
str CMDbatDIV_int_bte_lng(int *ret, int *l, int *r);
str CMDbatDIV_int_bte_wrd(int *ret, int *l, int *r);
str CMDbatDIV_int_int_int(int *ret, int *l, int *r);
str CMDbatDIV_int_int_lng(int *ret, int *l, int *r);
str CMDbatDIV_int_int_wrd(int *ret, int *l, int *r);
str CMDbatDIV_int_lng_lng(int *ret, int *l, int *r);
str CMDbatDIV_int_sht_int(int *ret, int *l, int *r);
str CMDbatDIV_int_sht_lng(int *ret, int *l, int *r);
str CMDbatDIV_int_sht_wrd(int *ret, int *l, int *r);
str CMDbatDIV_int_wrd_lng(int *ret, int *l, int *r);
str CMDbatDIV_int_wrd_wrd(int *ret, int *l, int *r);
str CMDbatDIV_lng_bte_lng(int *ret, int *l, int *r);
str CMDbatDIV_lng_int_lng(int *ret, int *l, int *r);
str CMDbatDIV_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatDIV_lng_sht_lng(int *ret, int *l, int *r);
str CMDbatDIV_lng_wrd_lng(int *ret, int *l, int *r);
str CMDbatDIV_sht_bte_int(int *ret, int *l, int *r);
str CMDbatDIV_sht_bte_lng(int *ret, int *l, int *r);
str CMDbatDIV_sht_bte_sht(int *ret, int *l, int *r);
str CMDbatDIV_sht_bte_wrd(int *ret, int *l, int *r);
str CMDbatDIV_sht_int_int(int *ret, int *l, int *r);
str CMDbatDIV_sht_int_lng(int *ret, int *l, int *r);
str CMDbatDIV_sht_int_wrd(int *ret, int *l, int *r);
str CMDbatDIV_sht_lng_lng(int *ret, int *l, int *r);
str CMDbatDIV_sht_sht_int(int *ret, int *l, int *r);
str CMDbatDIV_sht_sht_lng(int *ret, int *l, int *r);
str CMDbatDIV_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatDIV_sht_sht_wrd(int *ret, int *l, int *r);
str CMDbatDIV_sht_wrd_lng(int *ret, int *l, int *r);
str CMDbatDIV_sht_wrd_wrd(int *ret, int *l, int *r);
str CMDbatDIV_wrd_bte_lng(int *ret, int *l, int *r);
str CMDbatDIV_wrd_bte_wrd(int *ret, int *l, int *r);
str CMDbatDIV_wrd_int_lng(int *ret, int *l, int *r);
str CMDbatDIV_wrd_int_wrd(int *ret, int *l, int *r);
str CMDbatDIV_wrd_lng_lng(int *ret, int *l, int *r);
str CMDbatDIV_wrd_sht_lng(int *ret, int *l, int *r);
str CMDbatDIV_wrd_sht_wrd(int *ret, int *l, int *r);
str CMDbatDIV_wrd_wrd_lng(int *ret, int *l, int *r);
str CMDbatDIV_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatDIVcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_bte_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_bte_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_bte_sht(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_bte_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_int_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_int_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_int_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_lng_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_sht_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_sht_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_sht_sht(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_sht_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_wrd_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_bte_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_dbl_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatDIVcst_dbl_flt_dbl(int *ret, int *l, void *cst);
str CMDbatDIVcst_flt_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatDIVcst_flt_flt_dbl(int *ret, int *l, void *cst);
str CMDbatDIVcst_flt_flt_flt(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_bte_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_bte_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_bte_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_int_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_int_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_lng_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_sht_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_sht_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_sht_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_wrd_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_int_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_lng_bte_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_lng_int_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_lng_sht_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_lng_wrd_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_bte_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_bte_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_bte_sht(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_bte_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_int_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_int_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_int_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_lng_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_sht_int(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_sht_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_sht_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_wrd_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_sht_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_bte_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_bte_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_int_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_int_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_lng_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_sht_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_sht_wrd(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_wrd_lng(int *ret, int *l, void *cst);
str CMDbatDIVcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatLSH_bte_int_bte(int *ret, int *l, int *r);
str CMDbatLSH_int_int_int(int *ret, int *l, int *r);
str CMDbatLSH_lng_int_lng(int *ret, int *l, int *r);
str CMDbatLSH_oid_int_oid(int *ret, int *l, int *r);
str CMDbatLSH_sht_int_sht(int *ret, int *l, int *r);
str CMDbatLSH_wrd_int_wrd(int *ret, int *l, int *r);
str CMDbatLSHcst_bte_int_bte(int *ret, int *l, void *cst);
str CMDbatLSHcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatLSHcst_lng_int_lng(int *ret, int *l, void *cst);
str CMDbatLSHcst_oid_int_oid(int *ret, int *l, void *cst);
str CMDbatLSHcst_sht_int_sht(int *ret, int *l, void *cst);
str CMDbatLSHcst_wrd_int_wrd(int *ret, int *l, void *cst);
str CMDbatMOD_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatMOD_int_int_int(int *ret, int *l, int *r);
str CMDbatMOD_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatMOD_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatMOD_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatMODcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatMODcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatMODcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatMODcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatMODcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatMUL_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatMUL_bte_bte_int(int *ret, int *l, int *r);
str CMDbatMUL_bte_bte_lng(int *ret, int *l, int *r);
str CMDbatMUL_bte_bte_sht(int *ret, int *l, int *r);
str CMDbatMUL_bte_bte_wrd(int *ret, int *l, int *r);
str CMDbatMUL_bte_int_int(int *ret, int *l, int *r);
str CMDbatMUL_bte_int_lng(int *ret, int *l, int *r);
str CMDbatMUL_bte_int_wrd(int *ret, int *l, int *r);
str CMDbatMUL_bte_lng_lng(int *ret, int *l, int *r);
str CMDbatMUL_bte_sht_int(int *ret, int *l, int *r);
str CMDbatMUL_bte_sht_lng(int *ret, int *l, int *r);
str CMDbatMUL_bte_sht_sht(int *ret, int *l, int *r);
str CMDbatMUL_bte_sht_wrd(int *ret, int *l, int *r);
str CMDbatMUL_bte_wrd_lng(int *ret, int *l, int *r);
str CMDbatMUL_bte_wrd_wrd(int *ret, int *l, int *r);
str CMDbatMUL_dbl_dbl_dbl(int *ret, int *l, int *r);
str CMDbatMUL_dbl_flt_dbl(int *ret, int *l, int *r);
str CMDbatMUL_flt_dbl_dbl(int *ret, int *l, int *r);
str CMDbatMUL_flt_flt_dbl(int *ret, int *l, int *r);
str CMDbatMUL_flt_flt_flt(int *ret, int *l, int *r);
str CMDbatMUL_int_bte_int(int *ret, int *l, int *r);
str CMDbatMUL_int_bte_lng(int *ret, int *l, int *r);
str CMDbatMUL_int_bte_wrd(int *ret, int *l, int *r);
str CMDbatMUL_int_int_int(int *ret, int *l, int *r);
str CMDbatMUL_int_int_lng(int *ret, int *l, int *r);
str CMDbatMUL_int_int_wrd(int *ret, int *l, int *r);
str CMDbatMUL_int_lng_lng(int *ret, int *l, int *r);
str CMDbatMUL_int_sht_int(int *ret, int *l, int *r);
str CMDbatMUL_int_sht_lng(int *ret, int *l, int *r);
str CMDbatMUL_int_sht_wrd(int *ret, int *l, int *r);
str CMDbatMUL_int_wrd_lng(int *ret, int *l, int *r);
str CMDbatMUL_int_wrd_wrd(int *ret, int *l, int *r);
str CMDbatMUL_lng_bte_lng(int *ret, int *l, int *r);
str CMDbatMUL_lng_int_lng(int *ret, int *l, int *r);
str CMDbatMUL_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatMUL_lng_sht_lng(int *ret, int *l, int *r);
str CMDbatMUL_lng_wrd_lng(int *ret, int *l, int *r);
str CMDbatMUL_sht_bte_int(int *ret, int *l, int *r);
str CMDbatMUL_sht_bte_lng(int *ret, int *l, int *r);
str CMDbatMUL_sht_bte_sht(int *ret, int *l, int *r);
str CMDbatMUL_sht_bte_wrd(int *ret, int *l, int *r);
str CMDbatMUL_sht_int_int(int *ret, int *l, int *r);
str CMDbatMUL_sht_int_lng(int *ret, int *l, int *r);
str CMDbatMUL_sht_int_wrd(int *ret, int *l, int *r);
str CMDbatMUL_sht_lng_lng(int *ret, int *l, int *r);
str CMDbatMUL_sht_sht_int(int *ret, int *l, int *r);
str CMDbatMUL_sht_sht_lng(int *ret, int *l, int *r);
str CMDbatMUL_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatMUL_sht_sht_wrd(int *ret, int *l, int *r);
str CMDbatMUL_sht_wrd_lng(int *ret, int *l, int *r);
str CMDbatMUL_sht_wrd_wrd(int *ret, int *l, int *r);
str CMDbatMUL_wrd_bte_lng(int *ret, int *l, int *r);
str CMDbatMUL_wrd_bte_wrd(int *ret, int *l, int *r);
str CMDbatMUL_wrd_int_lng(int *ret, int *l, int *r);
str CMDbatMUL_wrd_int_wrd(int *ret, int *l, int *r);
str CMDbatMUL_wrd_lng_lng(int *ret, int *l, int *r);
str CMDbatMUL_wrd_sht_lng(int *ret, int *l, int *r);
str CMDbatMUL_wrd_sht_wrd(int *ret, int *l, int *r);
str CMDbatMUL_wrd_wrd_lng(int *ret, int *l, int *r);
str CMDbatMUL_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatMULcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_bte_int(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_bte_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_bte_sht(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_bte_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_int_int(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_int_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_int_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_lng_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_sht_int(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_sht_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_sht_sht(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_sht_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_wrd_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_bte_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_dbl_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatMULcst_dbl_flt_dbl(int *ret, int *l, void *cst);
str CMDbatMULcst_flt_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatMULcst_flt_flt_dbl(int *ret, int *l, void *cst);
str CMDbatMULcst_flt_flt_flt(int *ret, int *l, void *cst);
str CMDbatMULcst_int_bte_int(int *ret, int *l, void *cst);
str CMDbatMULcst_int_bte_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_int_bte_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatMULcst_int_int_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_int_int_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_int_lng_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_int_sht_int(int *ret, int *l, void *cst);
str CMDbatMULcst_int_sht_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_int_sht_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_int_wrd_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_int_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_lng_bte_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_lng_int_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_lng_sht_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_lng_wrd_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_bte_int(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_bte_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_bte_sht(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_bte_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_int_int(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_int_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_int_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_lng_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_sht_int(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_sht_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_sht_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_wrd_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_sht_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_bte_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_bte_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_int_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_int_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_lng_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_sht_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_sht_wrd(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_wrd_lng(int *ret, int *l, void *cst);
str CMDbatMULcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatOR_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatOR_int_int_int(int *ret, int *l, int *r);
str CMDbatOR_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatOR_oid_oid_oid(int *ret, int *l, int *r);
str CMDbatOR_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatOR_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatORcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatORcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatORcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatORcst_oid_oid_oid(int *ret, int *l, void *cst);
str CMDbatORcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatORcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatRSH_bte_int_bte(int *ret, int *l, int *r);
str CMDbatRSH_int_int_int(int *ret, int *l, int *r);
str CMDbatRSH_lng_int_lng(int *ret, int *l, int *r);
str CMDbatRSH_oid_int_oid(int *ret, int *l, int *r);
str CMDbatRSH_sht_int_sht(int *ret, int *l, int *r);
str CMDbatRSH_wrd_int_wrd(int *ret, int *l, int *r);
str CMDbatRSHcst_bte_int_bte(int *ret, int *l, void *cst);
str CMDbatRSHcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatRSHcst_lng_int_lng(int *ret, int *l, void *cst);
str CMDbatRSHcst_oid_int_oid(int *ret, int *l, void *cst);
str CMDbatRSHcst_sht_int_sht(int *ret, int *l, void *cst);
str CMDbatRSHcst_wrd_int_wrd(int *ret, int *l, void *cst);
str CMDbatSUB_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatSUB_bte_bte_int(int *ret, int *l, int *r);
str CMDbatSUB_bte_bte_lng(int *ret, int *l, int *r);
str CMDbatSUB_bte_bte_sht(int *ret, int *l, int *r);
str CMDbatSUB_bte_bte_wrd(int *ret, int *l, int *r);
str CMDbatSUB_bte_int_int(int *ret, int *l, int *r);
str CMDbatSUB_bte_int_lng(int *ret, int *l, int *r);
str CMDbatSUB_bte_int_wrd(int *ret, int *l, int *r);
str CMDbatSUB_bte_lng_lng(int *ret, int *l, int *r);
str CMDbatSUB_bte_sht_int(int *ret, int *l, int *r);
str CMDbatSUB_bte_sht_lng(int *ret, int *l, int *r);
str CMDbatSUB_bte_sht_sht(int *ret, int *l, int *r);
str CMDbatSUB_bte_sht_wrd(int *ret, int *l, int *r);
str CMDbatSUB_bte_wrd_lng(int *ret, int *l, int *r);
str CMDbatSUB_bte_wrd_wrd(int *ret, int *l, int *r);
str CMDbatSUB_dbl_dbl_dbl(int *ret, int *l, int *r);
str CMDbatSUB_dbl_flt_dbl(int *ret, int *l, int *r);
str CMDbatSUB_flt_dbl_dbl(int *ret, int *l, int *r);
str CMDbatSUB_flt_flt_dbl(int *ret, int *l, int *r);
str CMDbatSUB_flt_flt_flt(int *ret, int *l, int *r);
str CMDbatSUB_int_bte_int(int *ret, int *l, int *r);
str CMDbatSUB_int_bte_lng(int *ret, int *l, int *r);
str CMDbatSUB_int_bte_wrd(int *ret, int *l, int *r);
str CMDbatSUB_int_int_int(int *ret, int *l, int *r);
str CMDbatSUB_int_int_lng(int *ret, int *l, int *r);
str CMDbatSUB_int_int_wrd(int *ret, int *l, int *r);
str CMDbatSUB_int_lng_lng(int *ret, int *l, int *r);
str CMDbatSUB_int_sht_int(int *ret, int *l, int *r);
str CMDbatSUB_int_sht_lng(int *ret, int *l, int *r);
str CMDbatSUB_int_sht_wrd(int *ret, int *l, int *r);
str CMDbatSUB_int_wrd_lng(int *ret, int *l, int *r);
str CMDbatSUB_int_wrd_wrd(int *ret, int *l, int *r);
str CMDbatSUB_lng_bte_lng(int *ret, int *l, int *r);
str CMDbatSUB_lng_int_lng(int *ret, int *l, int *r);
str CMDbatSUB_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatSUB_lng_sht_lng(int *ret, int *l, int *r);
str CMDbatSUB_lng_wrd_lng(int *ret, int *l, int *r);
str CMDbatSUB_sht_bte_int(int *ret, int *l, int *r);
str CMDbatSUB_sht_bte_lng(int *ret, int *l, int *r);
str CMDbatSUB_sht_bte_sht(int *ret, int *l, int *r);
str CMDbatSUB_sht_bte_wrd(int *ret, int *l, int *r);
str CMDbatSUB_sht_int_int(int *ret, int *l, int *r);
str CMDbatSUB_sht_int_lng(int *ret, int *l, int *r);
str CMDbatSUB_sht_int_wrd(int *ret, int *l, int *r);
str CMDbatSUB_sht_lng_lng(int *ret, int *l, int *r);
str CMDbatSUB_sht_sht_int(int *ret, int *l, int *r);
str CMDbatSUB_sht_sht_lng(int *ret, int *l, int *r);
str CMDbatSUB_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatSUB_sht_sht_wrd(int *ret, int *l, int *r);
str CMDbatSUB_sht_wrd_lng(int *ret, int *l, int *r);
str CMDbatSUB_sht_wrd_wrd(int *ret, int *l, int *r);
str CMDbatSUB_wrd_bte_lng(int *ret, int *l, int *r);
str CMDbatSUB_wrd_bte_wrd(int *ret, int *l, int *r);
str CMDbatSUB_wrd_int_lng(int *ret, int *l, int *r);
str CMDbatSUB_wrd_int_wrd(int *ret, int *l, int *r);
str CMDbatSUB_wrd_lng_lng(int *ret, int *l, int *r);
str CMDbatSUB_wrd_sht_lng(int *ret, int *l, int *r);
str CMDbatSUB_wrd_sht_wrd(int *ret, int *l, int *r);
str CMDbatSUB_wrd_wrd_lng(int *ret, int *l, int *r);
str CMDbatSUB_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatSUBcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_bte_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_bte_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_bte_sht(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_bte_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_int_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_int_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_int_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_lng_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_sht_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_sht_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_sht_sht(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_sht_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_wrd_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_bte_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_dbl_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatSUBcst_dbl_flt_dbl(int *ret, int *l, void *cst);
str CMDbatSUBcst_flt_dbl_dbl(int *ret, int *l, void *cst);
str CMDbatSUBcst_flt_flt_dbl(int *ret, int *l, void *cst);
str CMDbatSUBcst_flt_flt_flt(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_bte_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_bte_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_bte_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_int_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_int_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_lng_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_sht_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_sht_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_sht_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_wrd_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_int_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_lng_bte_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_lng_int_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_lng_sht_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_lng_wrd_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_bte_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_bte_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_bte_sht(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_bte_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_int_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_int_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_int_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_lng_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_sht_int(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_sht_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_sht_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_wrd_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_sht_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_bte_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_bte_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_int_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_int_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_lng_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_sht_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_sht_wrd(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_wrd_lng(int *ret, int *l, void *cst);
str CMDbatSUBcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbatXOR_bte_bte_bte(int *ret, int *l, int *r);
str CMDbatXOR_int_int_int(int *ret, int *l, int *r);
str CMDbatXOR_lng_lng_lng(int *ret, int *l, int *r);
str CMDbatXOR_oid_oid_oid(int *ret, int *l, int *r);
str CMDbatXOR_sht_sht_sht(int *ret, int *l, int *r);
str CMDbatXOR_wrd_wrd_wrd(int *ret, int *l, int *r);
str CMDbatXORcst_bte_bte_bte(int *ret, int *l, void *cst);
str CMDbatXORcst_int_int_int(int *ret, int *l, void *cst);
str CMDbatXORcst_lng_lng_lng(int *ret, int *l, void *cst);
str CMDbatXORcst_oid_oid_oid(int *ret, int *l, void *cst);
str CMDbatXORcst_sht_sht_sht(int *ret, int *l, void *cst);
str CMDbatXORcst_wrd_wrd_wrd(int *ret, int *l, void *cst);
str CMDbataccumADD_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_bte_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_bte_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_bte_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_bte_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_dbl_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_dbl_flt_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_flt_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_flt_flt_flt(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_int_bte_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_int_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_int_sht_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_int_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_lng_bte_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_lng_int_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_lng_sht_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_lng_wrd_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_sht_bte_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_sht_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_sht_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_sht_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_wrd_bte_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_wrd_int_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_wrd_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_wrd_sht_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADD_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_bte_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_bte_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_bte_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_bte_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_dbl_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_dbl_flt_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_flt_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_flt_flt_flt(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_int_bte_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_int_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_int_sht_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_int_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_lng_bte_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_lng_int_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_lng_sht_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_lng_wrd_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_sht_bte_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_sht_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_sht_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_sht_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_wrd_bte_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_wrd_int_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_wrd_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_wrd_sht_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumADDcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_bte_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_bte_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_bte_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_bte_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_dbl_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_dbl_flt_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_flt_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_flt_flt_flt(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_int_bte_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_int_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_int_sht_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_int_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_lng_bte_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_lng_int_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_lng_sht_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_lng_wrd_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_sht_bte_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_sht_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_sht_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_sht_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_wrd_bte_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_wrd_int_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_wrd_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_wrd_sht_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumADDcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumAND_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumAND_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumAND_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumAND_oid_oid_oid(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumAND_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumAND_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst2_oid_oid_oid(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumANDcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumANDcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumANDcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumANDcst_oid_oid_oid(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumANDcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumANDcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIV_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_bte_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_bte_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_bte_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_bte_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_dbl_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_dbl_flt_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_flt_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_flt_flt_flt(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_int_bte_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_int_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_int_sht_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_int_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_lng_bte_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_lng_int_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_lng_sht_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_lng_wrd_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_sht_bte_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_sht_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_sht_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_sht_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_wrd_bte_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_wrd_int_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_wrd_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_wrd_sht_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIV_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_bte_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_bte_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_bte_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_bte_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_dbl_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_dbl_flt_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_flt_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_flt_flt_flt(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_int_bte_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_int_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_int_sht_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_int_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_lng_bte_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_lng_int_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_lng_sht_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_lng_wrd_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_sht_bte_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_sht_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_sht_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_sht_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_wrd_bte_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_wrd_int_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_wrd_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_wrd_sht_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_bte_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_bte_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_bte_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_bte_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_dbl_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_dbl_flt_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_flt_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_flt_flt_flt(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_int_bte_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_int_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_int_sht_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_int_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_lng_bte_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_lng_int_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_lng_sht_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_lng_wrd_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_sht_bte_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_sht_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_sht_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_sht_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_wrd_bte_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_wrd_int_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_wrd_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_wrd_sht_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumDIVcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumLSH_bte_int_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSH_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSH_lng_int_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSH_oid_int_oid(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSH_sht_int_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSH_wrd_int_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst2_bte_int_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst2_lng_int_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst2_oid_int_oid(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst2_sht_int_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst2_wrd_int_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumLSHcst_bte_int_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumLSHcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumLSHcst_lng_int_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumLSHcst_oid_int_oid(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumLSHcst_sht_int_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumLSHcst_wrd_int_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMOD_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMOD_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMOD_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMOD_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMOD_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMODcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMODcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMODcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMODcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMODcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMODcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMODcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMODcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMODcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMODcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMUL_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_bte_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_bte_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_bte_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_bte_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_dbl_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_dbl_flt_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_flt_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_flt_flt_flt(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_int_bte_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_int_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_int_sht_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_int_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_lng_bte_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_lng_int_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_lng_sht_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_lng_wrd_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_sht_bte_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_sht_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_sht_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_sht_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_wrd_bte_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_wrd_int_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_wrd_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_wrd_sht_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMUL_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_bte_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_bte_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_bte_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_bte_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_dbl_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_dbl_flt_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_flt_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_flt_flt_flt(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_int_bte_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_int_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_int_sht_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_int_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_lng_bte_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_lng_int_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_lng_sht_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_lng_wrd_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_sht_bte_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_sht_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_sht_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_sht_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_wrd_bte_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_wrd_int_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_wrd_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_wrd_sht_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumMULcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_bte_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_bte_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_bte_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_bte_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_dbl_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_dbl_flt_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_flt_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_flt_flt_flt(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_int_bte_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_int_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_int_sht_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_int_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_lng_bte_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_lng_int_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_lng_sht_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_lng_wrd_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_sht_bte_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_sht_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_sht_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_sht_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_wrd_bte_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_wrd_int_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_wrd_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_wrd_sht_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumMULcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumOR_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumOR_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumOR_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumOR_oid_oid_oid(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumOR_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumOR_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst2_oid_oid_oid(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumORcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumORcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumORcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumORcst_oid_oid_oid(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumORcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumORcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumRSH_bte_int_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSH_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSH_lng_int_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSH_oid_int_oid(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSH_sht_int_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSH_wrd_int_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst2_bte_int_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst2_lng_int_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst2_oid_int_oid(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst2_sht_int_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst2_wrd_int_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumRSHcst_bte_int_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumRSHcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumRSHcst_lng_int_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumRSHcst_oid_int_oid(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumRSHcst_sht_int_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumRSHcst_wrd_int_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUB_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_bte_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_bte_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_bte_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_bte_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_dbl_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_dbl_flt_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_flt_dbl_dbl(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_flt_flt_flt(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_int_bte_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_int_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_int_sht_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_int_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_lng_bte_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_lng_int_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_lng_sht_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_lng_wrd_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_sht_bte_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_sht_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_sht_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_sht_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_wrd_bte_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_wrd_int_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_wrd_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_wrd_sht_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUB_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_bte_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_bte_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_bte_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_bte_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_dbl_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_dbl_flt_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_flt_dbl_dbl(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_flt_flt_flt(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_int_bte_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_int_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_int_sht_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_int_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_lng_bte_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_lng_int_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_lng_sht_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_lng_wrd_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_sht_bte_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_sht_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_sht_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_sht_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_wrd_bte_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_wrd_int_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_wrd_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_wrd_sht_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_bte_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_bte_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_bte_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_bte_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_dbl_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_dbl_flt_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_flt_dbl_dbl(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_flt_flt_flt(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_int_bte_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_int_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_int_sht_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_int_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_lng_bte_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_lng_int_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_lng_sht_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_lng_wrd_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_sht_bte_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_sht_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_sht_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_sht_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_wrd_bte_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_wrd_int_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_wrd_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_wrd_sht_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumSUBcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumXOR_bte_bte_bte(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumXOR_int_int_int(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumXOR_lng_lng_lng(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumXOR_oid_oid_oid(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumXOR_sht_sht_sht(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumXOR_wrd_wrd_wrd(int *ret, int *l, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst2_bte_bte_bte(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst2_int_int_int(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst2_lng_lng_lng(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst2_oid_oid_oid(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst2_sht_sht_sht(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst2_wrd_wrd_wrd(int *ret, void *cst, int *r, bit *lflag, bit *rflag);
str CMDbataccumXORcst_bte_bte_bte(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumXORcst_int_int_int(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumXORcst_lng_lng_lng(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumXORcst_oid_oid_oid(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumXORcst_sht_sht_sht(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbataccumXORcst_wrd_wrd_wrd(int *ret, int *l, void *cst, bit *lflag, bit *rflag);
str CMDbatpack(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbatpartition(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbatpartition2(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbatsingleton(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbatunpack(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbp(int *NS, int *HT, int *TT, int *CNT, int *REFCNT, int *LREFCNT, int *LOCATION, int *HEAT, int *DIRTY, int *STATUS, int *KIND);
str CMDbbpCount(int *ret);
str CMDbbpDirty(int *ret);
str CMDbbpDiskReads(lng *ret);
str CMDbbpDiskSpace(lng *ret);
str CMDbbpDiskWrites(lng *ret);
str CMDbbpGetObjects(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpHeadType(int *ret);
str CMDbbpHeat(int *ret);
str CMDbbpKind(int *ret);
str CMDbbpLRefCount(int *ret);
str CMDbbpLocation(int *ret);
str CMDbbpName(str *ret, int *bid);
str CMDbbpNames(int *ret);
str CMDbbpRNames(int *ret);
str CMDbbpRefCount(int *ret);
str CMDbbpReleaseAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpStatus(int *ret);
str CMDbbpSubCommit(int *ret, int *bid);
str CMDbbpTailType(int *ret);
str CMDbbpbind(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpbind2(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str CMDbbpbindDefinition(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpbindindex(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpclose(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpcompress(int *ret, int *bid, str *fnme);
str CMDbbpdecompress(int *ret, int *bid, str *fnme);
str CMDbbpdeposit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpdestroy(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpdestroyBAT(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpdestroyBAT1(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpdiscard(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpexpand(int *ret, int *bid, str *fnme);
str CMDbbpgetIndex(int *res, int *bid);
str CMDbbpiterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpopen(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpprelude(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbprelease(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbpreleaseBAT(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbptake(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbptoStr(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDbbptruncate(int *ret, int *bid, str *fnme);
str CMDbitbatNOT(int *ret, int *bid);
str CMDbitbataccumNOT(int *ret, int *d, int *l);
str CMDcallBAT(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDcallString(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDcleanup(int *ret);
str CMDclearEvent(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDclearTrace(int *res);
str CMDcloseProfilerStream(int *res);
str CMDclrFilterProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDclrFilterVariable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str CMDconvert_bit(int *ret, int *bid);
str CMDconvert_bit_bte(int *ret, int *bid);
str CMDconvert_bit_int(int *ret, int *bid);
str CMDconvert_bit_lng(int *ret, int *bid);
str CMDconvert_bit_sht(int *ret, int *bid);
str CMDconvert_bit_str(int *ret, int *bid);
str CMDconvert_bit_wrd(int *ret, int *bid);
str CMDconvert_bte(int *ret, int *bid);
str CMDconvert_bte_bit(int *ret, int *bid);
str CMDconvert_bte_dbl(int *ret, int *bid);
str CMDconvert_bte_flt(int *ret, int *bid);
str CMDconvert_bte_int(int *ret, int *bid);
str CMDconvert_bte_lng(int *ret, int *bid);
str CMDconvert_bte_oid(int *ret, int *bid);
str CMDconvert_bte_sht(int *ret, int *bid);
str CMDconvert_bte_str(int *ret, int *bid);
str CMDconvert_bte_wrd(int *ret, int *bid);
str CMDconvert_chr(int *ret, int *bid);
str CMDconvert_chr_str(int *ret, int *bid);
str CMDconvert_dbl(int *ret, int *bid);
str CMDconvert_dbl_bte(int *ret, int *bid);
str CMDconvert_dbl_flt(int *ret, int *bid);
str CMDconvert_dbl_int(int *ret, int *bid);
str CMDconvert_dbl_lng(int *ret, int *bid);
str CMDconvert_dbl_sht(int *ret, int *bid);
str CMDconvert_dbl_str(int *ret, int *bid);
str CMDconvert_dbl_wrd(int *ret, int *bid);
str CMDconvert_flt(int *ret, int *bid);
str CMDconvert_flt_bte(int *ret, int *bid);
str CMDconvert_flt_dbl(int *ret, int *bid);
str CMDconvert_flt_int(int *ret, int *bid);
str CMDconvert_flt_lng(int *ret, int *bid);
str CMDconvert_flt_sht(int *ret, int *bid);
str CMDconvert_flt_str(int *ret, int *bid);
str CMDconvert_flt_wrd(int *ret, int *bid);
str CMDconvert_int(int *ret, int *bid);
str CMDconvert_int_bit(int *ret, int *bid);
str CMDconvert_int_bte(int *ret, int *bid);
str CMDconvert_int_dbl(int *ret, int *bid);
str CMDconvert_int_flt(int *ret, int *bid);
str CMDconvert_int_lng(int *ret, int *bid);
str CMDconvert_int_oid(int *ret, int *bid);
str CMDconvert_int_sht(int *ret, int *bid);
str CMDconvert_int_str(int *ret, int *bid);
str CMDconvert_int_wrd(int *ret, int *bid);
str CMDconvert_lng(int *ret, int *bid);
str CMDconvert_lng_bit(int *ret, int *bid);
str CMDconvert_lng_bte(int *ret, int *bid);
str CMDconvert_lng_dbl(int *ret, int *bid);
str CMDconvert_lng_flt(int *ret, int *bid);
str CMDconvert_lng_int(int *ret, int *bid);
str CMDconvert_lng_oid(int *ret, int *bid);
str CMDconvert_lng_sht(int *ret, int *bid);
str CMDconvert_lng_str(int *ret, int *bid);
str CMDconvert_lng_wrd(int *ret, int *bid);
str CMDconvert_oid(int *ret, int *bid);
str CMDconvert_oid_bte(int *ret, int *bid);
str CMDconvert_oid_dbl(int *ret, int *bid);
str CMDconvert_oid_flt(int *ret, int *bid);
str CMDconvert_oid_int(int *ret, int *bid);
str CMDconvert_oid_lng(int *ret, int *bid);
str CMDconvert_oid_sht(int *ret, int *bid);
str CMDconvert_oid_wrd(int *ret, int *bid);
str CMDconvert_sht(int *ret, int *bid);
str CMDconvert_sht_bit(int *ret, int *bid);
str CMDconvert_sht_bte(int *ret, int *bid);
str CMDconvert_sht_dbl(int *ret, int *bid);
str CMDconvert_sht_flt(int *ret, int *bid);
str CMDconvert_sht_int(int *ret, int *bid);
str CMDconvert_sht_lng(int *ret, int *bid);
str CMDconvert_sht_oid(int *ret, int *bid);
str CMDconvert_sht_str(int *ret, int *bid);
str CMDconvert_sht_wrd(int *ret, int *bid);
str CMDconvert_str(int *ret, int *bid);
str CMDconvert_str_bit(int *ret, int *bid);
str CMDconvert_str_bte(int *ret, int *bid);
str CMDconvert_str_chr(int *ret, int *bid);
str CMDconvert_str_dbl(int *ret, int *bid);
str CMDconvert_str_flt(int *ret, int *bid);
str CMDconvert_str_int(int *ret, int *bid);
str CMDconvert_str_lng(int *ret, int *bid);
str CMDconvert_str_sht(int *ret, int *bid);
str CMDconvert_wrd(int *ret, int *bid);
str CMDconvert_wrd_bit(int *ret, int *bid);
str CMDconvert_wrd_bte(int *ret, int *bid);
str CMDconvert_wrd_dbl(int *ret, int *bid);
str CMDconvert_wrd_flt(int *ret, int *bid);
str CMDconvert_wrd_int(int *ret, int *bid);
str CMDconvert_wrd_lng(int *ret, int *bid);
str CMDconvert_wrd_oid(int *ret, int *bid);
str CMDconvert_wrd_sht(int *ret, int *bid);
str CMDcstADDbat_bte_bte_bte(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_bte_int(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_bte_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_bte_sht(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_bte_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_int_int(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_int_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_int_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_lng_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_sht_int(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_sht_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_sht_sht(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_sht_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_wrd_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_bte_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_dbl_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstADDbat_dbl_flt_dbl(int *ret, void *cst, int *l);
str CMDcstADDbat_flt_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstADDbat_flt_flt_dbl(int *ret, void *cst, int *l);
str CMDcstADDbat_flt_flt_flt(int *ret, void *cst, int *l);
str CMDcstADDbat_int_bte_int(int *ret, void *cst, int *l);
str CMDcstADDbat_int_bte_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_int_bte_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_int_int_int(int *ret, void *cst, int *l);
str CMDcstADDbat_int_int_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_int_int_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_int_lng_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_int_sht_int(int *ret, void *cst, int *l);
str CMDcstADDbat_int_sht_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_int_sht_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_int_wrd_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_int_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_lng_bte_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_lng_int_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_lng_lng_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_lng_sht_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_lng_wrd_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_bte_int(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_bte_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_bte_sht(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_bte_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_int_int(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_int_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_int_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_lng_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_sht_int(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_sht_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_sht_sht(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_sht_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_wrd_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_sht_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_bte_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_bte_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_int_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_int_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_lng_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_sht_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_sht_wrd(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_wrd_lng(int *ret, void *cst, int *l);
str CMDcstADDbat_wrd_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstANDbat_bte_bte_bte(int *ret,void *cst, int *l);
str CMDcstANDbat_int_int_int(int *ret,void *cst, int *l);
str CMDcstANDbat_lng_lng_lng(int *ret,void *cst, int *l);
str CMDcstANDbat_oid_oid_oid(int *ret,void *cst, int *l);
str CMDcstANDbat_sht_sht_sht(int *ret,void *cst, int *l);
str CMDcstANDbat_wrd_wrd_wrd(int *ret,void *cst, int *l);
str CMDcstDIVbat_bte_bte_bte(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_bte_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_bte_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_bte_sht(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_bte_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_int_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_int_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_int_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_lng_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_sht_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_sht_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_sht_sht(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_sht_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_wrd_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_bte_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_dbl_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstDIVbat_dbl_flt_dbl(int *ret, void *cst, int *l);
str CMDcstDIVbat_flt_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstDIVbat_flt_flt_dbl(int *ret, void *cst, int *l);
str CMDcstDIVbat_flt_flt_flt(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_bte_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_bte_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_bte_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_int_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_int_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_int_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_lng_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_sht_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_sht_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_sht_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_wrd_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_int_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_lng_bte_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_lng_int_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_lng_lng_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_lng_sht_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_lng_wrd_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_bte_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_bte_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_bte_sht(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_bte_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_int_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_int_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_int_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_lng_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_sht_int(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_sht_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_sht_sht(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_sht_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_wrd_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_sht_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_bte_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_bte_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_int_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_int_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_lng_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_sht_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_sht_wrd(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_wrd_lng(int *ret, void *cst, int *l);
str CMDcstDIVbat_wrd_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstLSHbat_bte_int_bte(int *ret,void *cst, int *l);
str CMDcstLSHbat_int_int_int(int *ret,void *cst, int *l);
str CMDcstLSHbat_lng_int_lng(int *ret,void *cst, int *l);
str CMDcstLSHbat_oid_int_oid(int *ret,void *cst, int *l);
str CMDcstLSHbat_sht_int_sht(int *ret,void *cst, int *l);
str CMDcstLSHbat_wrd_int_wrd(int *ret,void *cst, int *l);
str CMDcstMODbat_bte_bte_bte(int *ret,void *cst, int *l);
str CMDcstMODbat_int_int_int(int *ret,void *cst, int *l);
str CMDcstMODbat_lng_lng_lng(int *ret,void *cst, int *l);
str CMDcstMODbat_sht_sht_sht(int *ret,void *cst, int *l);
str CMDcstMODbat_wrd_wrd_wrd(int *ret,void *cst, int *l);
str CMDcstMULbat_bte_bte_bte(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_bte_int(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_bte_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_bte_sht(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_bte_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_int_int(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_int_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_int_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_lng_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_sht_int(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_sht_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_sht_sht(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_sht_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_wrd_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_bte_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_dbl_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstMULbat_dbl_flt_dbl(int *ret, void *cst, int *l);
str CMDcstMULbat_flt_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstMULbat_flt_flt_dbl(int *ret, void *cst, int *l);
str CMDcstMULbat_flt_flt_flt(int *ret, void *cst, int *l);
str CMDcstMULbat_int_bte_int(int *ret, void *cst, int *l);
str CMDcstMULbat_int_bte_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_int_bte_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_int_int_int(int *ret, void *cst, int *l);
str CMDcstMULbat_int_int_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_int_int_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_int_lng_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_int_sht_int(int *ret, void *cst, int *l);
str CMDcstMULbat_int_sht_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_int_sht_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_int_wrd_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_int_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_lng_bte_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_lng_int_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_lng_lng_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_lng_sht_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_lng_wrd_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_bte_int(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_bte_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_bte_sht(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_bte_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_int_int(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_int_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_int_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_lng_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_sht_int(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_sht_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_sht_sht(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_sht_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_wrd_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_sht_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_bte_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_bte_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_int_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_int_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_lng_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_sht_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_sht_wrd(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_wrd_lng(int *ret, void *cst, int *l);
str CMDcstMULbat_wrd_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstORbat_bte_bte_bte(int *ret,void *cst, int *l);
str CMDcstORbat_int_int_int(int *ret,void *cst, int *l);
str CMDcstORbat_lng_lng_lng(int *ret,void *cst, int *l);
str CMDcstORbat_oid_oid_oid(int *ret,void *cst, int *l);
str CMDcstORbat_sht_sht_sht(int *ret,void *cst, int *l);
str CMDcstORbat_wrd_wrd_wrd(int *ret,void *cst, int *l);
str CMDcstRSHbat_bte_int_bte(int *ret,void *cst, int *l);
str CMDcstRSHbat_int_int_int(int *ret,void *cst, int *l);
str CMDcstRSHbat_lng_int_lng(int *ret,void *cst, int *l);
str CMDcstRSHbat_oid_int_oid(int *ret,void *cst, int *l);
str CMDcstRSHbat_sht_int_sht(int *ret,void *cst, int *l);
str CMDcstRSHbat_wrd_int_wrd(int *ret,void *cst, int *l);
str CMDcstSUBbat_bte_bte_bte(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_bte_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_bte_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_bte_sht(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_bte_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_int_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_int_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_int_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_lng_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_sht_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_sht_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_sht_sht(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_sht_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_wrd_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_bte_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_dbl_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstSUBbat_dbl_flt_dbl(int *ret, void *cst, int *l);
str CMDcstSUBbat_flt_dbl_dbl(int *ret, void *cst, int *l);
str CMDcstSUBbat_flt_flt_dbl(int *ret, void *cst, int *l);
str CMDcstSUBbat_flt_flt_flt(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_bte_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_bte_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_bte_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_int_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_int_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_int_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_lng_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_sht_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_sht_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_sht_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_wrd_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_int_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_lng_bte_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_lng_int_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_lng_lng_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_lng_sht_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_lng_wrd_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_bte_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_bte_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_bte_sht(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_bte_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_int_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_int_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_int_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_lng_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_sht_int(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_sht_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_sht_sht(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_sht_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_wrd_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_sht_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_bte_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_bte_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_int_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_int_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_lng_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_sht_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_sht_wrd(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_wrd_lng(int *ret, void *cst, int *l);
str CMDcstSUBbat_wrd_wrd_wrd(int *ret, void *cst, int *l);
str CMDcstXORbat_bte_bte_bte(int *ret,void *cst, int *l);
str CMDcstXORbat_int_int_int(int *ret,void *cst, int *l);
str CMDcstXORbat_lng_lng_lng(int *ret,void *cst, int *l);
str CMDcstXORbat_oid_oid_oid(int *ret,void *cst, int *l);
str CMDcstXORbat_sht_sht_sht(int *ret,void *cst, int *l);
str CMDcstXORbat_wrd_wrd_wrd(int *ret,void *cst, int *l);
str CMDdeactivateProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDdebug(int *ret, int *flg);
str CMDdumpTrace(int *res);
str CMDendPointProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDevalFile(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDgetBATlrefcnt(int *res, int *bid);
str CMDgetBATrefcnt(int *res, int *bid);
str CMDgetDiskReads(lng *ret);
str CMDgetDiskWrites(lng *ret);
str CMDgetEvent(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDgetFootprint(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDgetMemory(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDgetPageSize(int *ret);
str CMDgetSystemTime(lng *ret);
str CMDgetTrace(int *res, str *ev);
str CMDgetUserTime(lng *ret);
str CMDifThenCst_bit(int *ret, int *bid, bit *tid);
str CMDifThenCst_bte(int *ret, int *bid, bte *tid);
str CMDifThenCst_chr(int *ret, int *bid, chr *tid);
str CMDifThenCst_dbl(int *ret, int *bid, dbl *tid);
str CMDifThenCst_flt(int *ret, int *bid, flt *tid);
str CMDifThenCst_int(int *ret, int *bid, int *tid);
str CMDifThenCst_lng(int *ret, int *bid, lng *tid);
str CMDifThenCst_oid(int *ret, int *bid, oid *tid);
str CMDifThenCst_sht(int *ret, int *bid, sht *tid);
str CMDifThenCst_str(int *ret, int *bid, str *tid);
str CMDifThenElseCst1_bit(int *ret, int *bid, bit *val, int *eid);
str CMDifThenElseCst1_bte(int *ret, int *bid, bte *val, int *eid);
str CMDifThenElseCst1_chr(int *ret, int *bid, chr *val, int *eid);
str CMDifThenElseCst1_dbl(int *ret, int *bid, dbl *val, int *eid);
str CMDifThenElseCst1_flt(int *ret, int *bid, flt *val, int *eid);
str CMDifThenElseCst1_int(int *ret, int *bid, int *val, int *eid);
str CMDifThenElseCst1_lng(int *ret, int *bid, lng *val, int *eid);
str CMDifThenElseCst1_oid(int *ret, int *bid, oid *val, int *eid);
str CMDifThenElseCst1_sht(int *ret, int *bid, sht *val, int *eid);
str CMDifThenElseCst1_str(int *ret, int *bid, str *val, int *eid);
str CMDifThenElseCst2_bit(int *ret, int *bid, int *tid, bit *val);
str CMDifThenElseCst2_bte(int *ret, int *bid, int *tid, bte *val);
str CMDifThenElseCst2_chr(int *ret, int *bid, int *tid, chr *val);
str CMDifThenElseCst2_dbl(int *ret, int *bid, int *tid, dbl *val);
str CMDifThenElseCst2_flt(int *ret, int *bid, int *tid, flt *val);
str CMDifThenElseCst2_int(int *ret, int *bid, int *tid, int *val);
str CMDifThenElseCst2_lng(int *ret, int *bid, int *tid, lng *val);
str CMDifThenElseCst2_oid(int *ret, int *bid, int *tid, oid *val);
str CMDifThenElseCst2_sht(int *ret, int *bid, int *tid, sht *val);
str CMDifThenElseCst2_str(int *ret, int *bid, int *tid, str *val);
str CMDifThenElseCst_bit(int *ret, int *bid, bit *tid, bit *eid);
str CMDifThenElseCst_bte(int *ret, int *bid, bte *tid, bte *eid);
str CMDifThenElseCst_chr(int *ret, int *bid, chr *tid, chr *eid);
str CMDifThenElseCst_dbl(int *ret, int *bid, dbl *tid, dbl *eid);
str CMDifThenElseCst_flt(int *ret, int *bid, flt *tid, flt *eid);
str CMDifThenElseCst_int(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElseCst_lng(int *ret, int *bid, lng *tid, lng *eid);
str CMDifThenElseCst_oid(int *ret, int *bid, oid *tid, oid *eid);
str CMDifThenElseCst_sht(int *ret, int *bid, sht *tid, sht *eid);
str CMDifThenElseCst_str(int *ret, int *bid, str *tid, str *eid);
str CMDifThenElse_bit(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_bte(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_chr(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_dbl(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_flt(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_int(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_lng(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_oid(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_sht(int *ret, int *bid, int *tid, int *eid);
str CMDifThenElse_str(int *ret, int *bid, int *tid, int *eid);
str CMDifThen_bit(int *ret, int *bid, int *tid);
str CMDifThen_bte(int *ret, int *bid, int *tid);
str CMDifThen_chr(int *ret, int *bid, int *tid);
str CMDifThen_dbl(int *ret, int *bid, int *tid);
str CMDifThen_flt(int *ret, int *bid, int *tid);
str CMDifThen_int(int *ret, int *bid, int *tid);
str CMDifThen_lng(int *ret, int *bid, int *tid);
str CMDifThen_oid(int *ret, int *bid, int *tid);
str CMDifThen_sht(int *ret, int *bid, int *tid);
str CMDifThen_str(int *ret, int *bid, int *tid);
str CMDincludeFile(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDmodules(int *bid);
str CMDnoopProfiler(int *res);
str CMDopenProfilerStream(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDqgramnormalize(str *res, str *input);
str CMDqgramselfjoin(BAT **res, BAT *qgram, BAT *id, BAT *pos, BAT *len, flt *c, int *k);
str CMDraise(str *ret, str *msg);
str CMDregisterFunction(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDscience_bat_cst_atan2_dbl(int *ret, int *bid, dbl *d);
str CMDscience_bat_cst_atan2_flt(int *ret, int *bid, flt *d);
str CMDscience_bat_cst_fmod_dbl(int *ret, int *bid, dbl *d);
str CMDscience_bat_cst_fmod_flt(int *ret, int *bid, flt *d);
str CMDscience_bat_cst_pow_dbl(int *ret, int *bid, dbl *d);
str CMDscience_bat_cst_pow_flt(int *ret, int *bid, flt *d);
str CMDscience_bat_dbl_acos(int *ret, int *bid);
str CMDscience_bat_dbl_asin(int *ret, int *bid);
str CMDscience_bat_dbl_atan(int *ret, int *bid);
str CMDscience_bat_dbl_ceil(int *ret, int *bid);
str CMDscience_bat_dbl_cos(int *ret, int *bid);
str CMDscience_bat_dbl_cosh(int *ret, int *bid);
str CMDscience_bat_dbl_degrees(int *ret, int *bid);
str CMDscience_bat_dbl_exp(int *ret, int *bid);
str CMDscience_bat_dbl_fabs(int *ret, int *bid);
str CMDscience_bat_dbl_floor(int *ret, int *bid);
str CMDscience_bat_dbl_log(int *ret, int *bid);
str CMDscience_bat_dbl_log10(int *ret, int *bid);
str CMDscience_bat_dbl_radians(int *ret, int *bid);
str CMDscience_bat_dbl_sin(int *ret, int *bid);
str CMDscience_bat_dbl_sinh(int *ret, int *bid);
str CMDscience_bat_dbl_sqrt(int *ret, int *bid);
str CMDscience_bat_dbl_tan(int *ret, int *bid);
str CMDscience_bat_dbl_tanh(int *ret, int *bid);
str CMDscience_bat_flt_acos(int *ret, int *bid);
str CMDscience_bat_flt_asin(int *ret, int *bid);
str CMDscience_bat_flt_atan(int *ret, int *bid);
str CMDscience_bat_flt_ceil(int *ret, int *bid);
str CMDscience_bat_flt_cos(int *ret, int *bid);
str CMDscience_bat_flt_cosh(int *ret, int *bid);
str CMDscience_bat_flt_degrees(int *ret, int *bid);
str CMDscience_bat_flt_exp(int *ret, int *bid);
str CMDscience_bat_flt_fabs(int *ret, int *bid);
str CMDscience_bat_flt_floor(int *ret, int *bid);
str CMDscience_bat_flt_log(int *ret, int *bid);
str CMDscience_bat_flt_log10(int *ret, int *bid);
str CMDscience_bat_flt_radians(int *ret, int *bid);
str CMDscience_bat_flt_sin(int *ret, int *bid);
str CMDscience_bat_flt_sinh(int *ret, int *bid);
str CMDscience_bat_flt_sqrt(int *ret, int *bid);
str CMDscience_bat_flt_tan(int *ret, int *bid);
str CMDscience_bat_flt_tanh(int *ret, int *bid);
str CMDsetAllProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str CMDsetBase(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetFilterProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetFilterVariable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str CMDsetFootprintFlag(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetIOTrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetMemoryFlag(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetMemoryTrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetNoneProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetProfilerFile(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetProfilerStream(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetThreadTrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDsetTimerTrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDstartPointProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDstartProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDstopProfiler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CMDtablet_dump(int *ret, int *nameid, int *sepid, int *bids, str *filename, int *nr);
str CMDtablet_input(int *ret, int *nameid, int *sepid, int *typeid, stream *s, int *nr);
str CMDtablet_load(int *ret, int *nameid, int *sepid, int *typeid, str *filename, int *nr);
str CMDtablet_output(int *ret, int *nameid, int *sepid, int *bids, void **s);
str CMDunaryABS(int *ret, int *bid);
str CMDunaryISNIL(int *ret, int *bid);
str CMDunaryMIN(int *ret, int *bid);
str CMDunaryMINMIN(int *ret, int *bid);
str CMDunaryPLUSPLUS(int *ret, int *bid);
str CNTRScounter2bat(int *bid, int *idx);
str CNTRScounter2str(str *ret, int *idx);
str CNTRSeventName(str *ret, int *nr);
str CNTRSeventNumber(int *ret, str *nme);
str CNTRSinit(int *ret);
str CNTRSnativeEvents(int *ret);
str CNTRSreset(int *ret, int *idx, int *ev1, int *ev2);
str CNTRSstart(int *ret, int *ev1, int *ev2);
str CNTRSstop(int *ret, int *idx);
str CNTRSunifiedEvents(int *ret);
str CSTclose(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTdeposit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTdestroy(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTdiscard(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTepilogue(int *ret);
str CSThasMoreElements(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTnewIterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTopen(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTprelude(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTrelease(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTreleaseAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTtake(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str CSTtoString(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
int CTrefine(BAT **res, BAT *b, BAT *a);
int CTrefine_rev(BAT **res, BAT *b, BAT *a);
str CemptySet(int *k, int *bid);
str DCYbind(int *ret, str *sch, str *tab, str *col, int *kind, int *part, int *fbun, int *lbun);
str DCYcopy(int *ret_bat, int *ret_id, str *sch, str *tab, str *col, int *kind, int *part, int *fbun, int *lbun);
str DCYpin(int *ret, int *bid);
str DCYunpin(int *ret, int *bid);
int DFLOWadmission(lng argclaim, lng hotclaim);
str DICTbind(int *idx, int *val, str *nme);
str DICTcompress(int *idx, str *nme, int *bid);
str DICTdecompress(int *ret, str *nme);
str DICTencode(int *ridx, int *val, int *bid);
str DICTexpand(int *rval, int *val, int *bid);
str DICTgroupid(int *ret, int *idx, int *val);
str DICTgroupid(int *ret, int *idx, int *val){ BAT *bi, *bv, *b;
str DICTinitialize(int *ret);
str FCTgetArrival(int *ret);
str FCTgetCaller(int *ret);
str FCTgetDeparture(int *ret);
str FCTgetLocations(int *ret);
str FCTgetOwners(int *ret);
str FCTgetPlants(int *ret, int *ret2);
str FCTsetLocation(int *ret, str *loc);
str FCTshutdown(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str GRPaggr_count(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPavg_bte(int *ret, int *bid, int *eid);
str GRPavg_dbl(int *ret, int *bid, int *eid);
str GRPavg_flt(int *ret, int *bid, int *eid);
str GRPavg_int(int *ret, int *bid, int *eid);
str GRPavg_lng(int *ret, int *bid, int *eid);
str GRPavg_oid(int *ret, int *bid, int *eid);
str GRPavg_sht(int *ret, int *bid, int *eid);
str GRPavg_wrd(int *ret, int *bid, int *eid);
str GRPderive(int *hid, int *mid, int *ct_histoid, int *ct_mapid, int *bid);
str GRPgroup(int *rethisto, int *retbid, int *bid);
str GRPgroup0(int *ret, int *bid, int *start, int *incr, int *grpsize);
str GRPgroup_custom(int *rethisto, int *retbid, int *bid, int *N, int *rng);
str GRPmax(int *retval, int *bid, int *eid);
str GRPmin(int *retval, int *bid, int *eid);
str GRPprelude(void);
str GRPprod_bte_bte(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_bte_int(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_bte_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_bte_sht(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_bte_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_dbl_dbl(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_flt_dbl(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_flt_flt(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_int_int(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_int_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_int_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_lng_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_oid_oid(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_sht_int(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_sht_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_sht_sht(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_sht_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_wrd_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPprod_wrd_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPrefine(int *retid, int *bid, int *aid);
str GRPrefine_rev(int *retid, int *bid, int *aid);
str GRPsize(int *retval, int *bid, int *eid);
str GRPslidingsum_bte(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_dbl(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_flt(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_int(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_lng(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_oid(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_sht(int *retval, int *bid, int *size, int *shift);
str GRPslidingsum_wrd(int *retval, int *bid, int *size, int *shift);
str GRPsum_bte_bte(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_bte_int(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_bte_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_bte_sht(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_bte_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_dbl_dbl(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_flt_dbl(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_flt_flt(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_int_int(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_int_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_int_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_lng_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_oid_oid(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_sht_int(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_sht_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_sht_sht(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_sht_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_wrd_lng(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPsum_wrd_wrd(int *retval, int *bid, int *eid, bit *ignore_nils);
str GRPvar_bte(int *ret, int *bid, int *eid);
str GRPvar_dbl(int *ret, int *bid, int *eid);
str GRPvar_flt(int *ret, int *bid, int *eid);
str GRPvar_int(int *ret, int *bid, int *eid);
str GRPvar_lng(int *ret, int *bid, int *eid);
str GRPvar_oid(int *ret, int *bid, int *eid);
str GRPvar_sht(int *ret, int *bid, int *eid);
str GRPvar_wrd(int *ret, int *bid, int *eid);
str GRPwindowsum_bte(int *retval, int *bid, int *size);
str GRPwindowsum_dbl(int *retval, int *bid, int *size);
str GRPwindowsum_flt(int *retval, int *bid, int *size);
str GRPwindowsum_int(int *retval, int *bid, int *size);
str GRPwindowsum_lng(int *retval, int *bid, int *size);
str GRPwindowsum_oid(int *retval, int *bid, int *size);
str GRPwindowsum_sht(int *retval, int *bid, int *size);
str GRPwindowsum_wrd(int *retval, int *bid, int *size);
dbl HSTbinrelative(Histogram h1, Histogram h2);
dbl HSTbinrelativeWhatIf(Histogram h1, Histogram h2, ValPtr val, dbl *whatIfDistance);
int HSTbinrelativeWhatIfMove(Histogram h1, Histogram h2, ValPtr val, dbl *whatIfDistance);
dbl HSTchebyshev(Histogram h1, Histogram h2);
dbl HSTchebyshevDelta(Histogram h1, Histogram h2, dbl d, int idx, int cnt);
dbl HSTcityblock(Histogram h1, Histogram h2);
dbl HSTcityblockDelta(Histogram h1, Histogram h2, dbl d, int idx, int cnt);
void HSTdecrement(Histogram h, ValPtr val);
dbl HSTeuclidian(Histogram h1, Histogram h2);
dbl HSTeuclidianDelta(Histogram h1, Histogram h2, dbl d, int idx, int cnt);
dbl HSTeuclidianNorm(Histogram h1, Histogram h2);
dbl HSTeuclidianNormWhatIf(Histogram h1, Histogram h2, ValPtr val, dbl *whatIfDistance);
int HSTeuclidianNormWhatIfMove(Histogram h1, Histogram h2, ValPtr val, dbl *whatIfDistance);
int HSTeuclidianWhatIf(Histogram h1, Histogram h2, ValPtr val);
int HSTeuclidianWhatIfMove(Histogram h1, Histogram h2, ValPtr val);
int HSTgetIndex(Histogram h, ValPtr val);
int HSTincrement(Histogram h, ValPtr val);
Histogram HSTnew(int bins, ValPtr minval, ValPtr maxval);
void HSTprint(stream *s, Histogram h);
void HSTprintf(Histogram h);
int HSTwhichbin(Histogram h1, Histogram h2);
int HSTwhichbinNorm(Histogram h1, Histogram h2);
str IDentifier(str *retval, str *in);
int IDfromString(str src, int *len, str *retval);
str IDprelude(void);
int IDtoString(str *retval, int *len, str handle);
str INET_comp_CS(bit *retval, inet *val1, inet *val2);
str INET_comp_CSE(bit *retval, inet *val1, inet *val2);
str INET_comp_CW(bit *retval, inet *val1, inet *val2);
str INET_comp_CWE(bit *retval, inet *val1, inet *val2);
str INET_comp_EQ(bit *retval, inet *val1, inet *val2);
str INET_comp_GE(bit *retval, inet *val1, inet *val2);
str INET_comp_GT(bit *retval, inet *val1, inet *val2);
str INET_comp_LE(bit *retval, inet *val1, inet *val2);
str INET_comp_LT(bit *retval, inet *val1, inet *val2);
str INET_comp_NEQ(bit *retval, inet *val1, inet *val2);
str INET_fromstr(inet *ret, str *s);
str INET_inet(inet *d, inet *s);
str INET_isnil(bit *retval, inet *val);
str INETabbrev(str *retval, inet *val);
str INETbroadcast(inet *retval, inet *val);
int INETfromString(str src, int *len, inet **retval);
str INEThost(str *retval, inet *val);
str INEThostmask(inet *retval, inet *val);
str INETmasklen(int *retval, inet *val);
str INETnetmask(inet *retval, inet *val);
str INETnetwork(inet *retval, inet *val);
str INETnew(inet *retval, str *in);
str INETsetmasklen(inet *retval, inet *val, int *mask);
str INETtext(str *retval, inet *val);
int INETtoString(str *retval, int *len, inet *handle);
str INSPECTatom_names(int *ret);
str INSPECTatom_sizes(int *ret);
str INSPECTatom_sup_names(int *ret);
str INSPECTequalType(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetAddress(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetAllAddresses(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetAllFunctions(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetAllModules(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetAllSignatures(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetComment(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetDefinition(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetEnvironment(int *ret);
str INSPECTgetFunction(int *ret);
str INSPECTgetFunctionSize(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str INSPECTgetModule(int *ret);
str INSPECTgetModuleSize(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str INSPECTgetSignature(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetSize(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str INSPECTgetSource(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTgetkind(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTshowFunction(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str INSPECTshowFunction3(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str INSPECTsymbolType(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str INSPECTtype(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTtypeIndex(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTtypeName(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str INSPECTtypename(str *ret, int *tpe);
str IOdatafile(str *ret, str *fnme);
str IOexport(bit *ret, int *bid, str *fnme);
str IOfotable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOftable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOimport(int *ret, int *bid, str *fnme);
str IOotable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOprintBoth(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci, int indx, str hd, str tl, int nobat);
str IOprintBoth(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci, int indx, str hd, str tl, int nobat);
str IOprint_tables(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str IOprint_tables(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str IOprint_val(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str IOprintf(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOprintfStream(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOprompt_val(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOtable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOtableAll(stream *f, Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci, int i, int order, int printhead, int printorder);
str IOtableAll(stream *f, Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci, int i, int order, int printhead, int printorderby);
str IOtotable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str IOttable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str LCKcreate(monet_lock *l);
str LCKdestroy(int *res, monet_lock *l);
str LCKset(int *res, monet_lock *l);
str LCKtry(int *res, monet_lock *l);
str LCKunset(int *res, monet_lock *l);
char *M5OutOfMemory;
str MACROprocessor(Client cntxt, MalBlkPtr mb, Symbol t);
int MAL_MAXCLIENTS;
str MALassertBit(int *ret, bit *val, str *msg);
str MALassertInt(int *ret, int *val, str *msg);
str MALassertLng(int *ret, lng *val, str *msg);
str MALassertOid(int *ret, oid *val, str *msg);
str MALassertSht(int *ret, sht *val, str *msg);
str MALassertStr(int *ret, str *val, str *msg);
str MALassertTriple(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
int MALcommentsOnly(MalBlkPtr mb);
str MALengine(Client c);
str MALexitClient(Client c);
str MALinitClient(Client c);
int MALkeyword(Client cntxt, str kw, int length);
int MALlookahead(Client cntxt, str kw, int length);
str MALoptimizer(Client c);
str MALparser(Client c);
str MALpipeline(Client c);
str MALreader(Client c);
str MALstartDataflow(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALcompletion(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALcreate0(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALcreate1(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALcreateIndex(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALcreateSection(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALcreateSummary(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALhelp(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MANUALsearch(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MATHbinary_ATAN2dbl(dbl *res, dbl *a, dbl *b);
str MATHbinary_ATAN2flt(flt *res, flt *a, flt *b);
str MATHbinary_FMODdbl(dbl *res, dbl *a, dbl *b);
str MATHbinary_FMODflt(flt *res, flt *a, flt *b);
str MATHbinary_POWdbl(dbl *res, dbl *a, dbl *b);
str MATHbinary_POWflt(flt *res, flt *a, flt *b);
str MATHbinary_ROUNDdbl(dbl *res, dbl *a, int *b);
str MATHbinary_ROUNDflt(flt *res, flt *a, int *b);
str MATHpi(dbl *pi);
str MATHrandint(int *res);
str MATHsqlrandint(int *res, int *seed);
str MATHsrandint(int *seed);
str MATHunary_ACOSdbl(dbl *res, dbl *a);
str MATHunary_ACOSflt(flt *res, flt *a);
str MATHunary_ASINdbl(dbl *res, dbl *a);
str MATHunary_ASINflt(flt *res, flt *a);
str MATHunary_ATANdbl(dbl *res, dbl *a);
str MATHunary_ATANflt(flt *res, flt *a);
str MATHunary_CEILdbl(dbl *res, dbl *a);
str MATHunary_CEILflt(flt *res, flt *a);
str MATHunary_COSHdbl(dbl *res, dbl *a);
str MATHunary_COSHflt(flt *res, flt *a);
str MATHunary_COSdbl(dbl *res, dbl *a);
str MATHunary_COSflt(flt *res, flt *a);
str MATHunary_COTdbl(dbl *res, dbl *a);
str MATHunary_COTflt(flt *res, flt *a);
str MATHunary_DEGREESdbl(dbl *res, dbl *a);
str MATHunary_DEGREESflt(flt *res, flt *a);
str MATHunary_EXPdbl(dbl *res, dbl *a);
str MATHunary_EXPflt(flt *res, flt *a);
str MATHunary_FABSdbl(dbl *res, dbl *a);
str MATHunary_FINITE(bit *res, dbl *a);
str MATHunary_FLOORdbl(dbl *res, dbl *a);
str MATHunary_FLOORflt(flt *res, flt *a);
str MATHunary_ISINF(int *res, dbl *a);
str MATHunary_ISNAN(bit *res, dbl *a);
str MATHunary_LOG10dbl(dbl *res, dbl *a);
str MATHunary_LOG10flt(flt *res, flt *a);
str MATHunary_LOGdbl(dbl *res, dbl *a);
str MATHunary_LOGflt(flt *res, flt *a);
str MATHunary_RADIANSdbl(dbl *res, dbl *a);
str MATHunary_RADIANSflt(flt *res, flt *a);
str MATHunary_SINHdbl(dbl *res, dbl *a);
str MATHunary_SINHflt(flt *res, flt *a);
str MATHunary_SINdbl(dbl *res, dbl *a);
str MATHunary_SINflt(flt *res, flt *a);
str MATHunary_SQRTdbl(dbl *res, dbl *a);
str MATHunary_SQRTflt(flt *res, flt *a);
str MATHunary_TANHdbl(dbl *res, dbl *a);
str MATHunary_TANHflt(flt *res, flt *a);
str MATHunary_TANdbl(dbl *res, dbl *a);
str MATHunary_TANflt(flt *res, flt *a);
str MATdummy(int *ret, str *grp);
str MAThasMoreElements(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATinfo(int *ret, str *grp, str *elm);
str MATnewIterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATpack(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATpack2(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATpack3(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATpackSlice(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATpackValues(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATprint(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MATproject(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MATrefine(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MATrefineReverse(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MATsortReverseTail(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MATsortTail(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MBMmix(int *ret, int *batid);
str MBMnormal(int *ret, oid *base, int *size, int *domain, int *stddev, int *mean);
str MBMrandom(int *ret, oid *base, int *size, int *domain);
str MBMskewed(int *ret, oid *base, int *size, int *domain, int *skew);
str MBMuniform(int *ret, oid *base, int *size, int *domain);
str MCawakeClient(int id);
void MCcleanupClients(void);
void MCcloseClient(Client c);
int MCcountClients(void);
int MCdefault;
Client MCforkClient(Client c);
Client MCgetClient(int id);
void MCinit(void);
Client MCinitClient(oid user, bstream *fin, stream *fout);
int MCinitClientThread(Client c);
void MCpopClientInput(Client c);
int MCpushClientInput(Client c, bstream *new_input, int listing, char *prompt);
int MCreadClient(Client c);
str MCsuspendClient(int id, unsigned int timeout);
void MCtraceAllClients(int flag);
void MCtraceClient(oid which, int flag);
str MDBStkDepth(Client cntxt, MalBlkPtr mb, MalStkPtr s, InstrPtr p);
str MDBStkTrace(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
int MDBdelay;
str MDBdummy(int *ret);
str MDBdump(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBgetDebug(int *ret);
str MDBgetDefinition(Client cntxt, MalBlkPtr m, MalStkPtr stk, InstrPtr p);
str MDBgetExceptionContext(str *ret, str *msg);
str MDBgetExceptionReason(str *ret, str *msg);
str MDBgetExceptionVariable(str *ret, str *msg);
str MDBgetStackFrame(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
str MDBgetStackFrameN(Client cntxt, MalBlkPtr m, MalStkPtr s, InstrPtr p);
str MDBgrapTrappedProcess(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBinspect(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBlifespan(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBlist(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBlist3(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBlist3Detail(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBlistDetail(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBlistMapi(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBsetBigfoot(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetCatch(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBsetCount(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetDebug(int *ret, int *flg);
str MDBsetDebugStr(int *ret, str *nme);
str MDBsetFlow(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetIO(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetMemory(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetThread(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetTimer(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBsetTrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBsetVarTrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBshowFlowGraph(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBstart(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBstartFactory(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBstop(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBtrapFunction(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str MDBvar(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MDBvar3(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MKEYbathash(bat *res, bat *bid);
str MKEYbulk_rotate_xor_hash(int *ret, int *hid, int *nbits,int *bid);
str MKEYbulkconst_rotate_xor_hash(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MKEYconstbulk_rotate_xor_hash(int *ret, wrd *h, int *nbits,int *bid);
str MKEYhash(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str MKEYhash_bit(wrd *ret, bit *v);
str MKEYhash_bte(wrd *ret, bte *v);
str MKEYhash_chr(wrd *ret, chr *v);
str MKEYhash_dbl(wrd *ret, dbl *v);
str MKEYhash_flt(wrd *ret, flt *v);
str MKEYhash_int(wrd *ret, int *v);
str MKEYhash_lng(wrd *ret, lng *v);
str MKEYhash_sht(wrd *ret, sht *v);
str MKEYhash_str(wrd *ret, str *v);
str MKEYhash_wrd(wrd *ret, wrd *v);
str MKEYrotate(wrd *ret, wrd *v, int *nbits);
str MKEYrotate_xor_hash(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void MPresetProfiler(stream *fdout);
str MRgetCloud(int *ret, str *nme);
char *MSP_locate_script(const char *mod_name);
char *MSP_locate_sqlscript(const char *mod_name, bit recurse);
void MSinitClientPrg(Client cntxt, str mod, str nme);
void MSresetInstructions(MalBlkPtr mb, int start);
void MSresetVariables(Client cntxt, MalBlkPtr mb, MalStkPtr glb, int start);
void MSscheduleClient(str command, str challenge, bstream *fin, stream *fout);
void MSserveClient(void *dummy);
str MTIMEaccum_date_EQ(int *ret, int *d, int *l, int *r);
str MTIMEaccum_date_EQ_cst(int *ret, int *r, int *l, date *cst);
str MTIMEaccum_date_GE(int *ret, int *d, int *l, int *r);
str MTIMEaccum_date_GE_cst(int *ret, int *r, int *l, date *cst);
str MTIMEaccum_date_GT(int *ret, int *d, int *l, int *r);
str MTIMEaccum_date_GT_cst(int *ret, int *r, int *l, date *cst);
str MTIMEaccum_date_LE(int *ret, int *d, int *l, int *r);
str MTIMEaccum_date_LE_cst(int *ret, int *r, int *l, date *cst);
str MTIMEaccum_date_LT(int *ret, int *d, int *l, int *r);
str MTIMEaccum_date_LT_cst(int *ret, int *r, int *l, date *cst);
str MTIMEaccum_date_NEQ(int *ret, int *d, int *l, int *r);
str MTIMEaccum_date_NEQ_cst(int *ret, int *r, int *l, date *cst);
str MTIMEaccum_date_cst_EQ(int *ret, int *r, date *cst, int *l);
str MTIMEaccum_date_cst_GE(int *ret, int *r, date *cst, int *l);
str MTIMEaccum_date_cst_GT(int *ret, int *r, date *cst, int *l);
str MTIMEaccum_date_cst_LE(int *ret, int *r, date *cst, int *l);
str MTIMEaccum_date_cst_LT(int *ret, int *r, date *cst, int *l);
str MTIMEaccum_date_cst_NEQ(int *ret, int *r, date *cst, int *l);
str MTIMEaccum_daytime_EQ(int *ret, int *d, int *l, int *r);
str MTIMEaccum_daytime_EQ_cst(int *ret, int *r, int *l, daytime *cst);
str MTIMEaccum_daytime_GE(int *ret, int *d, int *l, int *r);
str MTIMEaccum_daytime_GE_cst(int *ret, int *r, int *l, daytime *cst);
str MTIMEaccum_daytime_GT(int *ret, int *d, int *l, int *r);
str MTIMEaccum_daytime_GT_cst(int *ret, int *r, int *l, daytime *cst);
str MTIMEaccum_daytime_LE(int *ret, int *d, int *l, int *r);
str MTIMEaccum_daytime_LE_cst(int *ret, int *r, int *l, daytime *cst);
str MTIMEaccum_daytime_LT(int *ret, int *d, int *l, int *r);
str MTIMEaccum_daytime_LT_cst(int *ret, int *r, int *l, daytime *cst);
str MTIMEaccum_daytime_NEQ(int *ret, int *d, int *l, int *r);
str MTIMEaccum_daytime_NEQ_cst(int *ret, int *r, int *l, daytime *cst);
str MTIMEaccum_daytime_cst_EQ(int *ret, int *r, daytime *cst, int *l);
str MTIMEaccum_daytime_cst_GE(int *ret, int *r, daytime *cst, int *l);
str MTIMEaccum_daytime_cst_GT(int *ret, int *r, daytime *cst, int *l);
str MTIMEaccum_daytime_cst_LE(int *ret, int *r, daytime *cst, int *l);
str MTIMEaccum_daytime_cst_LT(int *ret, int *r, daytime *cst, int *l);
str MTIMEaccum_daytime_cst_NEQ(int *ret, int *r, daytime *cst, int *l);
str MTIMEaccum_timestamp_EQ(int *ret, int *d, int *l, int *r);
str MTIMEaccum_timestamp_EQ_cst(int *ret, int *r, int *l, timestamp *cst);
str MTIMEaccum_timestamp_GE(int *ret, int *d, int *l, int *r);
str MTIMEaccum_timestamp_GE_cst(int *ret, int *r, int *l, timestamp *cst);
str MTIMEaccum_timestamp_GT(int *ret, int *d, int *l, int *r);
str MTIMEaccum_timestamp_GT_cst(int *ret, int *r, int *l, timestamp *cst);
str MTIMEaccum_timestamp_LE(int *ret, int *d, int *l, int *r);
str MTIMEaccum_timestamp_LE_cst(int *ret, int *r, int *l, timestamp *cst);
str MTIMEaccum_timestamp_LT(int *ret, int *d, int *l, int *r);
str MTIMEaccum_timestamp_LT_cst(int *ret, int *r, int *l, timestamp *cst);
str MTIMEaccum_timestamp_NEQ(int *ret, int *d, int *l, int *r);
str MTIMEaccum_timestamp_NEQ_cst(int *ret, int *r, int *l, timestamp *cst);
str MTIMEaccum_timestamp_cst_EQ(int *ret, int *r, timestamp *cst, int *l);
str MTIMEaccum_timestamp_cst_GE(int *ret, int *r, timestamp *cst, int *l);
str MTIMEaccum_timestamp_cst_GT(int *ret, int *r, timestamp *cst, int *l);
str MTIMEaccum_timestamp_cst_LE(int *ret, int *r, timestamp *cst, int *l);
str MTIMEaccum_timestamp_cst_LT(int *ret, int *r, timestamp *cst, int *l);
str MTIMEaccum_timestamp_cst_NEQ(int *ret, int *r, timestamp *cst, int *l);
str MTIMEbat_date_EQ(int *ret, int *l, int *r);
str MTIMEbat_date_EQ_cst(int *ret, int *l, date *cst);
str MTIMEbat_date_GE(int *ret, int *l, int *r);
str MTIMEbat_date_GE_cst(int *ret, int *l, date *cst);
str MTIMEbat_date_GT(int *ret, int *l, int *r);
str MTIMEbat_date_GT_cst(int *ret, int *l, date *cst);
str MTIMEbat_date_LE(int *ret, int *l, int *r);
str MTIMEbat_date_LE_cst(int *ret, int *l, date *cst);
str MTIMEbat_date_LT(int *ret, int *l, int *r);
str MTIMEbat_date_LT_cst(int *ret, int *l, date *cst);
str MTIMEbat_date_NEQ(int *ret, int *l, int *r);
str MTIMEbat_date_NEQ_cst(int *ret, int *l, date *cst);
str MTIMEbat_date_cst_EQ(int *ret, date *cst, int *l);
str MTIMEbat_date_cst_GE(int *ret, date *cst, int *l);
str MTIMEbat_date_cst_GT(int *ret, date *cst, int *l);
str MTIMEbat_date_cst_LE(int *ret, date *cst, int *l);
str MTIMEbat_date_cst_LT(int *ret, date *cst, int *l);
str MTIMEbat_date_cst_NEQ(int *ret, date *cst, int *l);
str MTIMEbat_daytime_EQ(int *ret, int *l, int *r);
str MTIMEbat_daytime_EQ_cst(int *ret, int *l, daytime *cst);
str MTIMEbat_daytime_GE(int *ret, int *l, int *r);
str MTIMEbat_daytime_GE_cst(int *ret, int *l, daytime *cst);
str MTIMEbat_daytime_GT(int *ret, int *l, int *r);
str MTIMEbat_daytime_GT_cst(int *ret, int *l, daytime *cst);
str MTIMEbat_daytime_LE(int *ret, int *l, int *r);
str MTIMEbat_daytime_LE_cst(int *ret, int *l, daytime *cst);
str MTIMEbat_daytime_LT(int *ret, int *l, int *r);
str MTIMEbat_daytime_LT_cst(int *ret, int *l, daytime *cst);
str MTIMEbat_daytime_NEQ(int *ret, int *l, int *r);
str MTIMEbat_daytime_NEQ_cst(int *ret, int *l, daytime *cst);
str MTIMEbat_daytime_cst_EQ(int *ret, daytime *cst, int *l);
str MTIMEbat_daytime_cst_GE(int *ret, daytime *cst, int *l);
str MTIMEbat_daytime_cst_GT(int *ret, daytime *cst, int *l);
str MTIMEbat_daytime_cst_LE(int *ret, daytime *cst, int *l);
str MTIMEbat_daytime_cst_LT(int *ret, daytime *cst, int *l);
str MTIMEbat_daytime_cst_NEQ(int *ret, daytime *cst, int *l);
str MTIMEbat_timestamp_EQ(int *ret, int *l, int *r);
str MTIMEbat_timestamp_EQ_cst(int *ret, int *l, timestamp *cst);
str MTIMEbat_timestamp_GE(int *ret, int *l, int *r);
str MTIMEbat_timestamp_GE_cst(int *ret, int *l, timestamp *cst);
str MTIMEbat_timestamp_GT(int *ret, int *l, int *r);
str MTIMEbat_timestamp_GT_cst(int *ret, int *l, timestamp *cst);
str MTIMEbat_timestamp_LE(int *ret, int *l, int *r);
str MTIMEbat_timestamp_LE_cst(int *ret, int *l, timestamp *cst);
str MTIMEbat_timestamp_LT(int *ret, int *l, int *r);
str MTIMEbat_timestamp_LT_cst(int *ret, int *l, timestamp *cst);
str MTIMEbat_timestamp_NEQ(int *ret, int *l, int *r);
str MTIMEbat_timestamp_NEQ_cst(int *ret, int *l, timestamp *cst);
str MTIMEbat_timestamp_cst_EQ(int *ret, timestamp *cst, int *l);
str MTIMEbat_timestamp_cst_GE(int *ret, timestamp *cst, int *l);
str MTIMEbat_timestamp_cst_GT(int *ret, timestamp *cst, int *l);
str MTIMEbat_timestamp_cst_LE(int *ret, timestamp *cst, int *l);
str MTIMEbat_timestamp_cst_LT(int *ret, timestamp *cst, int *l);
str MTIMEbat_timestamp_cst_NEQ(int *ret, timestamp *cst, int *l);
str MTIMEcompute_rule_foryear(date *ret, rule *val, int *year);
str MTIMEcurrent_date(date *d);
str MTIMEcurrent_date(date *d);
str MTIMEcurrent_time(daytime *t);
str MTIMEcurrent_time(daytime *t);
str MTIMEcurrent_timestamp(timestamp *t);
str MTIMEcurrent_timestamp(timestamp *t);
str MTIMEdate2date(date *ret, date *src);
str MTIMEdate_EQ(bit *ret, date *v, date *w);
str MTIMEdate_GE(bit *ret, date *v, date *w);
str MTIMEdate_GT(bit *ret, date *v, date *w);
str MTIMEdate_LE(bit *ret, date *v, date *w);
str MTIMEdate_LT(bit *ret, date *v, date *w);
str MTIMEdate_NEQ(bit *ret, date *v, date *w);
str MTIMEdate_add_msec_interval_lng_wrap(date *ret, date *t, lng *msec);
str MTIMEdate_add_sec_interval_wrap(date *ret, date *t, int *sec);
str MTIMEdate_adddays(date *ret, date *v, int *delta);
str MTIMEdate_addmonths(date *ret, date *v, int *delta);
str MTIMEdate_addyears(date *ret, date *v, int *delta);
str MTIMEdate_create(date *ret, int *year, int *month, int *day);
str MTIMEdate_date(date *d, date *s);
str MTIMEdate_diff(int *ret, date *v1, date *v2);
str MTIMEdate_extract_day(int *ret, date *v);
str MTIMEdate_extract_day_bulk(int *ret, int *bid);
str MTIMEdate_extract_dayofweek(int *ret, date *v);
str MTIMEdate_extract_dayofyear(int *ret, date *v);
str MTIMEdate_extract_month(int *ret, date *v);
str MTIMEdate_extract_month_bulk(int *ret, int *bid);
str MTIMEdate_extract_weekofyear(int *ret, date *v);
str MTIMEdate_extract_year(int *ret, date *v);
str MTIMEdate_extract_year_bulk(int *ret, int *bid);
str MTIMEdate_fromstr(date *ret, str *s);
str MTIMEdate_isnil(bit *ret, date *v);
str MTIMEdate_max(date *ret, date *v, date *w);
str MTIMEdate_max_no_nil(date *ret, date *v, date *w);
str MTIMEdate_min(date *ret, date *v, date *w);
str MTIMEdate_min_no_nil(date *ret, date *v, date *w);
str MTIMEdate_sub_msec_interval_lng_wrap(date *ret, date *t, lng *msec);
str MTIMEdate_sub_sec_interval_wrap(date *ret, date *t, int *sec);
str MTIMEdate_tostr(str *ret, date *d);
str MTIMEday_from_str(int *ret, str *day);
str MTIMEday_to_str(str *ret, int *day);
str MTIMEdaytime1(daytime *ret, int *h);
str MTIMEdaytime2(daytime *ret, int *h, int *m);
str MTIMEdaytime2daytime(daytime *ret, daytime *src);
str MTIMEdaytime3(daytime *ret, int *h, int *m, int *s);
str MTIMEdaytime_EQ(bit *ret, daytime *v, daytime *w);
str MTIMEdaytime_GE(bit *ret, daytime *v, daytime *w);
str MTIMEdaytime_GT(bit *ret, daytime *v, daytime *w);
str MTIMEdaytime_LE(bit *ret, daytime *v, daytime *w);
str MTIMEdaytime_LT(bit *ret, daytime *v, daytime *w);
str MTIMEdaytime_NEQ(bit *ret, daytime *v, daytime *w);
str MTIMEdaytime_create(daytime *ret, int *hour, int *min, int *sec, int *msec);
str MTIMEdaytime_extract_hours(int *ret, daytime *v);
str MTIMEdaytime_extract_hours_bulk(int *ret, int *bid);
str MTIMEdaytime_extract_milliseconds(int *ret, daytime *v);
str MTIMEdaytime_extract_milliseconds_bulk(int *ret, int *bid);
str MTIMEdaytime_extract_minutes(int *ret, daytime *v);
str MTIMEdaytime_extract_minutes_bulk(int *ret, int *bid);
str MTIMEdaytime_extract_seconds(int *ret, daytime *v);
str MTIMEdaytime_extract_seconds_bulk(int *ret, int *bid);
str MTIMEdaytime_extract_sql_seconds(int *ret, daytime *v);
str MTIMEdaytime_extract_sql_seconds_bulk(int *ret, int *bid);
str MTIMEdaytime_fromstr(daytime *ret, str *s);
str MTIMEdaytime_isnil(bit *ret, daytime *v);
str MTIMEdaytime_max(daytime *ret, daytime *v, daytime *w);
str MTIMEdaytime_max_no_nil(daytime *ret, daytime *v, daytime *w);
str MTIMEdaytime_min(daytime *ret, daytime *v, daytime *w);
str MTIMEdaytime_min_no_nil(daytime *ret, daytime *v, daytime *w);
str MTIMEdaytime_tostr(str *ret, daytime *d);
str MTIMEepilogue(void);
str MTIMEepoch(timestamp *ret);
str MTIMEepoch2int(int *res, timestamp *ts);
str MTIMElocal_timezone(lng *res);
str MTIMEmonth_from_str(int *ret, str *month);
str MTIMEmonth_to_str(str *ret, int *month);
str MTIMEmsec(lng *r);
str MTIMEmsecs(lng *ret, int *d, int *h, int *m, int *s, int *ms);
str MTIMEnil2date(date *ret, int *src);
str MTIMEolddate(date *d, str *buf);
str MTIMEoldduration(int *ndays, str *s);
str MTIMEprelude(void);
str MTIMEruleDef0(rule *ret, int *m, int *d, int *w, int *h, int *mint);
str MTIMEruleDef1(rule *ret, int *m, str *dnme, int *w, int *h, int *mint);
str MTIMEruleDef2(rule *ret, int *m, str *dnme, int *w, int *mint);
str MTIMErule_create(rule *ret, int *month, int *day, int *weekday, int *minutes);
str MTIMErule_extract_day(int *ret, rule *r);
str MTIMErule_extract_minutes(int *ret, rule *r);
str MTIMErule_extract_month(int *ret, rule *r);
str MTIMErule_extract_weekday(int *ret, rule *r);
str MTIMErule_fromstr(rule *ret, str *s);
str MTIMErule_fromstr(rule *ret, str *s);
str MTIMErule_tostr(str *s, rule *r);
str MTIMEsecs2daytime(daytime *ret, lng *src);
str MTIMEsql_day(lng *ret, lng *t);
str MTIMEsql_hours(int *ret, lng *t);
str MTIMEsql_minutes(int *ret, lng *t);
str MTIMEsql_month(int *ret, int *t);
str MTIMEsql_seconds(int *ret, lng *t);
str MTIMEsql_year(int *ret, int *t);
str MTIMEstrftime(str *s, date *d, str *format);
str MTIMEstrptime(date *d, str *s, str *format);
str MTIMEsynonyms(bit *allow);
str MTIMEtime_add_msec_interval_wrap(daytime *ret, daytime *t, lng *msec);
str MTIMEtime_sub_msec_interval_wrap(daytime *ret, daytime *t, lng *msec);
str MTIMEtimestamp(timestamp *ret, int *sec);
str MTIMEtimestamp2timestamp(timestamp *ret, timestamp *src);
str MTIMEtimestamp_EQ(bit *retval, timestamp *val1, timestamp *val2);
str MTIMEtimestamp_GE(bit *retval, timestamp *val1, timestamp *val2);
str MTIMEtimestamp_GT(bit *retval, timestamp *val1, timestamp *val2);
str MTIMEtimestamp_LE(bit *retval, timestamp *val1, timestamp *val2);
str MTIMEtimestamp_LT(bit *retval, timestamp *val1, timestamp *val2);
str MTIMEtimestamp_NEQ(bit *retval, timestamp *val1, timestamp *val2);
str MTIMEtimestamp_add(timestamp *ret, timestamp *v, lng *msecs);
str MTIMEtimestamp_add_month_interval_wrap(timestamp *ret, timestamp *t, int *months);
str MTIMEtimestamp_add_msec_interval_lng_wrap(timestamp *ret, timestamp *t, lng *msec);
str MTIMEtimestamp_create(timestamp *ret, date *d, daytime *t, tzone *z);
str MTIMEtimestamp_create_default(timestamp *ret, date *d, daytime *t);
str MTIMEtimestamp_create_from_date(timestamp *ret, date *d);
str MTIMEtimestamp_day(int *ret, timestamp *t);
str MTIMEtimestamp_diff(lng *ret, timestamp *v1, timestamp *v2);
str MTIMEtimestamp_extract_date(date *ret, timestamp *t, tzone *z);
str MTIMEtimestamp_extract_date_default(date *ret, timestamp *t);
str MTIMEtimestamp_extract_daytime(daytime *ret, timestamp *t, tzone *z);
str MTIMEtimestamp_extract_daytime_default(daytime *ret, timestamp *t);
str MTIMEtimestamp_fromstr(timestamp *ret, str *d);
str MTIMEtimestamp_hours(int *ret, timestamp *t);
str MTIMEtimestamp_inside_dst(bit *ret, timestamp *p, tzone *z);
str MTIMEtimestamp_isnil(bit *retval, timestamp *val);
str MTIMEtimestamp_lng(timestamp *ret, lng *msecs);
str MTIMEtimestamp_max(timestamp *ret, timestamp *v, timestamp *w);
str MTIMEtimestamp_max_no_nil(timestamp *ret, timestamp *v, timestamp *w);
str MTIMEtimestamp_milliseconds(int *ret, timestamp *t);
str MTIMEtimestamp_min(timestamp *ret, timestamp *v, timestamp *w);
str MTIMEtimestamp_min_no_nil(timestamp *ret, timestamp *v, timestamp *w);
str MTIMEtimestamp_minutes(int *ret, timestamp *t);
str MTIMEtimestamp_month(int *ret, timestamp *t);
str MTIMEtimestamp_seconds(int *ret, timestamp *t);
str MTIMEtimestamp_sql_seconds(int *ret, timestamp *t);
str MTIMEtimestamp_sub_month_interval_wrap(timestamp *ret, timestamp *t, int *months);
str MTIMEtimestamp_sub_msec_interval_lng_wrap(timestamp *ret, timestamp *t, lng *msec);
str MTIMEtimestamp_timestamp(timestamp *d, timestamp *s);
str MTIMEtimestamp_year(int *ret, timestamp *t);
str MTIMEtimezone(tzone *z, str *name);
str MTIMEtzone_create(tzone *ret, int *minutes);
str MTIMEtzone_create_dst(tzone *ret, int *minutes, rule *start, rule *end);
str MTIMEtzone_extract_end(rule *ret, tzone *t);
str MTIMEtzone_extract_minutes(int *ret, tzone *t);
str MTIMEtzone_extract_start(rule *ret, tzone *t);
str MTIMEtzone_fromstr(tzone *ret, str *s);
str MTIMEtzone_get_local(tzone *z);
str MTIMEtzone_isnil(bit *retval, tzone *val);
str MTIMEtzone_set_local(int res, tzone *z);
str MTIMEtzone_tostr(str *s, tzone *ret);
str MTIMEunaryISNIL(int *ret, int *bid);
str MTIMEunix_epoch(timestamp *ret);
str OCTOPUSbidding(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OCTOPUSconnect(str *c, str *dbname);
str OCTOPUSdiscoverRegister(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OCTOPUSgetVersion(int *res);
str OCTOPUSmakeSchedule(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OCTOPUSregister(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OCTOPUSrun(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTaccessmode(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTaccumulators(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void OPTaliasRemap(InstrPtr p, int *alias);
str OPTaliases(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTcentipede(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTcentipedeMaterialize(int *result, int *bid, ptr low, ptr high);
str OPTcluster(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTcoercion(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTcommonTerms(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTcompress(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTconstants(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTcostModel(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTdatacyclotron(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTdataflow(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTdeadcode(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTderivePath(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTdictionary(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTdumpQEP(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTemptySet(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTevaluate(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTfactorize(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTforgetPrevious(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OPTgarbageCollector(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTheuristics(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPThistory(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTinline(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
int OPTisAlias(InstrPtr p);
str OPTjoinPath(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTjoinselect(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTlegAdvice(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
int OPTlegAdviceInternal(MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OPTmacro(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTmapreduce(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTmergetable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTmitosis(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTmultiplex(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
int OPTmultiplexImplementation(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OPTmultiplexSimple(Client cntxt);
str OPToctopus(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTorcam(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTorigin(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTpeephole(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTpeers(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OPTprejoin(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTpushranges(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTrecycle(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTreduce(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTremap(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTremapMultiplex(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTremoteQueries(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTreorder(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTsetDebugStr(int *ret, str *nme);
str OPTsingleton(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTstrengthReduction(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTtrace(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str OPTtraceCall(MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str OPTvector(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str PCREcompile_wrap(pcre **res, str *pattern);
str PCREexec_wrap(bit *res, pcre *pattern, str *s);
str PCREfromstr(str instr, int *l, pcre **val);
str PCREilike2(bit *ret, str *s, str *pat);
str PCREilike3(bit *ret, str *s, str *pat, str *esc);
str PCREilike_join_pcre(int *ret, int *b, int *pat, str *esc);
str PCREilike_select_pcre(int *ret, int *b, str *pat, str *esc);
str PCREilike_uselect_pcre(int *ret, int *b, str *pat, str *esc);
str PCREimatch(bit *ret, str *val, str *pat);
str PCREindex(int *ret, pcre *pat, str *val);
str PCRElike2(bit *ret, str *s, str *pat);
str PCRElike3(bit *ret, str *s, str *pat, str *esc);
str PCRElike_join_pcre(int *ret, int *b, int *pat, str *esc);
str PCRElike_select_pcre(int *ret, int *b, str *pat, str *esc);
str PCRElike_uselect_pcre(int *ret, int *b, str *pat, str *esc);
str PCREmatch(bit *ret, str *val, str *pat);
str PCREnotilike2(bit *ret, str *s, str *pat);
str PCREnotilike3(bit *ret, str *s, str *pat, str *esc);
str PCREnotlike2(bit *ret, str *s, str *pat);
str PCREnotlike3(bit *ret, str *s, str *pat, str *esc);
str PCREpatindex(int *ret, str *pat, str *val);
str PCREquote(str *r, str *v);
str PCREreplace_bat_wrap(int *res, int *or, str *pat, str *repl, str *flags);
str PCREreplace_wrap(str *res, str *or, str *pat, str *repl, str *flags);
str PCREselect(int *res, str *pattern, int *bid, bit *ignore);
str PCREselectDef(int *res, str *pattern, int *bid);
str PCREsql2pcre(str *ret, str *pat, str *esc);
str PCREuselect(int *res, str *pattern, int *bid, bit *ignore);
str PCREuselectDef(int *res, str *pattern, int *bid);
str PMAbulkdel_bte(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_bte(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_chr(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_chr(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_dbl(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_dbl(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_flt(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_flt(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_int(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_int(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_lng(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_lng(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_sht(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_sht(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkdel_wrd(void *dummy, bat *b, oid *lo, oid *hi);
str PMAbulkdel_wrd(void *dummy, bat *bid, oid *lo, oid *hi){ BUN i, j, k, ht, lv, snum, wbeg, wsz, sz, psz, cnt, icnt, scl, scr, nsz, slen;
str PMAbulkins_bte(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_bte(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_chr(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_chr(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_dbl(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_dbl(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_flt(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_flt(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_int(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_int(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_lng(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_lng(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_sht(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_sht(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAbulkins_wrd(oid *pos_res, bat *b, oid *pos, bat *bi);
str PMAbulkins_wrd(oid *pos_res, bat *bid, oid *pos, bat *ibid){ bit fgw, fg;
str PMAdel_bte(void *dummy, bat *b, oid *pos);
str PMAdel_bte(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_chr(void *dummy, bat *b, oid *pos);
str PMAdel_chr(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_dbl(void *dummy, bat *b, oid *pos);
str PMAdel_dbl(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_flt(void *dummy, bat *b, oid *pos);
str PMAdel_flt(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_int(void *dummy, bat *b, oid *pos);
str PMAdel_int(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_lng(void *dummy, bat *b, oid *pos);
str PMAdel_lng(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_sht(void *dummy, bat *b, oid *pos);
str PMAdel_sht(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAdel_wrd(void *dummy, bat *b, oid *pos);
str PMAdel_wrd(void *dummy, bat *bid, oid *pos){ bit fg, fgw;
str PMAfnd_bte(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, bte *val);
str PMAfnd_bte(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, bte *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_chr(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, chr *val);
str PMAfnd_chr(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, chr *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_dbl(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, dbl *val);
str PMAfnd_dbl(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, dbl *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_flt(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, flt *val);
str PMAfnd_flt(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, flt *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_int(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, int *val);
str PMAfnd_int(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, int *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_lng(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, lng *val);
str PMAfnd_lng(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, lng *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_sht(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, sht *val);
str PMAfnd_sht(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, sht *val){ BAT *b = BATdescriptor( *bid);
str PMAfnd_wrd(oid *lo_res, oid *hi_res, bat *b, oid *lo, oid *hi, wrd *val);
str PMAfnd_wrd(oid *lo_res, oid *hi_res, bat *bid, oid *lo, oid *hi, wrd *val){ BAT *b = BATdescriptor( *bid);
str PMAins_bte(oid *pos_res, bat *b, oid *pos, bte *val);
str PMAins_bte(oid *pos_res, bat *bid, oid *pos, bte *val){ bit fgw, fg;
str PMAins_chr(oid *pos_res, bat *b, oid *pos, chr *val);
str PMAins_chr(oid *pos_res, bat *bid, oid *pos, chr *val){ bit fgw, fg;
str PMAins_dbl(oid *pos_res, bat *b, oid *pos, dbl *val);
str PMAins_dbl(oid *pos_res, bat *bid, oid *pos, dbl *val){ bit fgw, fg;
str PMAins_flt(oid *pos_res, bat *b, oid *pos, flt *val);
str PMAins_flt(oid *pos_res, bat *bid, oid *pos, flt *val){ bit fgw, fg;
str PMAins_int(oid *pos_res, bat *b, oid *pos, int *val);
str PMAins_int(oid *pos_res, bat *bid, oid *pos, int *val){ bit fgw, fg;
str PMAins_lng(oid *pos_res, bat *b, oid *pos, lng *val);
str PMAins_lng(oid *pos_res, bat *bid, oid *pos, lng *val){ bit fgw, fg;
str PMAins_sht(oid *pos_res, bat *b, oid *pos, sht *val);
str PMAins_sht(oid *pos_res, bat *bid, oid *pos, sht *val){ bit fgw, fg;
str PMAins_wrd(oid *pos_res, bat *b, oid *pos, wrd *val);
str PMAins_wrd(oid *pos_res, bat *bid, oid *pos, wrd *val){ bit fgw, fg;
str PMAnew_wrd(bat *res, int *tpe, wrd *_sz){ BUN sz;
str PMAnew_wrd(bat *res, int *tpe, wrd *sz);
str PMAtestdel_bte(void *dummy, bat *b);
str PMAtestdel_bte(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_chr(void *dummy, bat *b);
str PMAtestdel_chr(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_dbl(void *dummy, bat *b);
str PMAtestdel_dbl(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_flt(void *dummy, bat *b);
str PMAtestdel_flt(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_int(void *dummy, bat *b);
str PMAtestdel_int(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_lng(void *dummy, bat *b);
str PMAtestdel_lng(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_sht(void *dummy, bat *b);
str PMAtestdel_sht(void *dummy, bat *bid){ oid sz, pos;
str PMAtestdel_wrd(void *dummy, bat *b);
str PMAtestdel_wrd(void *dummy, bat *bid){ oid sz, pos;
str PMAtestins_bte(void *dummy, bat *b, int *val);
str PMAtestins_bte(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_chr(void *dummy, bat *b, int *val);
str PMAtestins_chr(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_dbl(void *dummy, bat *b, int *val);
str PMAtestins_dbl(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_flt(void *dummy, bat *b, int *val);
str PMAtestins_flt(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_int(void *dummy, bat *b, int *val);
str PMAtestins_int(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_lng(void *dummy, bat *b, int *val);
str PMAtestins_lng(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_sht(void *dummy, bat *b, int *val);
str PMAtestins_sht(void *dummy, bat *bid, int *num){ BAT *b;
str PMAtestins_wrd(void *dummy, bat *b, int *val);
str PMAtestins_wrd(void *dummy, bat *bid, int *num){ BAT *b;
str PQdequeue_anymax(int *ret, int *bid);
str PQdequeue_anymin(int *ret, int *bid);
str PQdequeue_btemax(int *ret, int *bid);
str PQdequeue_btemin(int *ret, int *bid);
str PQdequeue_chrmax(int *ret, int *bid);
str PQdequeue_chrmin(int *ret, int *bid);
str PQdequeue_dblmax(int *ret, int *bid);
str PQdequeue_dblmin(int *ret, int *bid);
str PQdequeue_fltmax(int *ret, int *bid);
str PQdequeue_fltmin(int *ret, int *bid);
str PQdequeue_intmax(int *ret, int *bid);
str PQdequeue_intmin(int *ret, int *bid);
str PQdequeue_lngmax(int *ret, int *bid);
str PQdequeue_lngmin(int *ret, int *bid);
str PQdequeue_oidmax(int *ret, int *bid);
str PQdequeue_oidmin(int *ret, int *bid);
str PQdequeue_ptrmax(int *ret, int *bid);
str PQdequeue_ptrmin(int *ret, int *bid);
str PQdequeue_shtmax(int *ret, int *bid);
str PQdequeue_shtmin(int *ret, int *bid);
str PQdequeue_wrdmax(int *ret, int *bid);
str PQdequeue_wrdmin(int *ret, int *bid);
str PQenqueue_anymax(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str PQenqueue_anymin(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str PQenqueue_btemax(int *ret, int *bid, oid *idx, bte *el);
str PQenqueue_btemin(int *ret, int *bid, oid *idx, bte *el);
str PQenqueue_chrmax(int *ret, int *bid, oid *idx, chr *el);
str PQenqueue_chrmin(int *ret, int *bid, oid *idx, chr *el);
str PQenqueue_dblmax(int *ret, int *bid, oid *idx, dbl *el);
str PQenqueue_dblmin(int *ret, int *bid, oid *idx, dbl *el);
str PQenqueue_fltmax(int *ret, int *bid, oid *idx, flt *el);
str PQenqueue_fltmin(int *ret, int *bid, oid *idx, flt *el);
str PQenqueue_intmax(int *ret, int *bid, oid *idx, int *el);
str PQenqueue_intmin(int *ret, int *bid, oid *idx, int *el);
str PQenqueue_lngmax(int *ret, int *bid, oid *idx, lng *el);
str PQenqueue_lngmin(int *ret, int *bid, oid *idx, lng *el);
str PQenqueue_oidmax(int *ret, int *bid, oid *idx, oid *el);
str PQenqueue_oidmin(int *ret, int *bid, oid *idx, oid *el);
str PQenqueue_ptrmax(int *ret, int *bid, oid *idx, ptr *el);
str PQenqueue_ptrmin(int *ret, int *bid, oid *idx, ptr *el);
str PQenqueue_shtmax(int *ret, int *bid, oid *idx, sht *el);
str PQenqueue_shtmin(int *ret, int *bid, oid *idx, sht *el);
str PQenqueue_wrdmax(int *ret, int *bid, oid *idx, wrd *el);
str PQenqueue_wrdmin(int *ret, int *bid, oid *idx, wrd *el);
str PQinit(int *ret, int *bid, wrd *maxsize);
str PQmovedowntop_anymax(int *ret, int *bid);
str PQmovedowntop_anymin(int *ret, int *bid);
str PQmovedowntop_btemax(int *ret, int *bid);
str PQmovedowntop_btemin(int *ret, int *bid);
str PQmovedowntop_chrmax(int *ret, int *bid);
str PQmovedowntop_chrmin(int *ret, int *bid);
str PQmovedowntop_dblmax(int *ret, int *bid);
str PQmovedowntop_dblmin(int *ret, int *bid);
str PQmovedowntop_fltmax(int *ret, int *bid);
str PQmovedowntop_fltmin(int *ret, int *bid);
str PQmovedowntop_intmax(int *ret, int *bid);
str PQmovedowntop_intmin(int *ret, int *bid);
str PQmovedowntop_lngmax(int *ret, int *bid);
str PQmovedowntop_lngmin(int *ret, int *bid);
str PQmovedowntop_oidmax(int *ret, int *bid);
str PQmovedowntop_oidmin(int *ret, int *bid);
str PQmovedowntop_ptrmax(int *ret, int *bid);
str PQmovedowntop_ptrmin(int *ret, int *bid);
str PQmovedowntop_shtmax(int *ret, int *bid);
str PQmovedowntop_shtmin(int *ret, int *bid);
str PQmovedowntop_wrdmax(int *ret, int *bid);
str PQmovedowntop_wrdmin(int *ret, int *bid);
str PQtopn2_anymax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_anymin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_btemax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_btemin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_chrmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_chrmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_dblmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_dblmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_fltmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_fltmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_intmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_intmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_lngmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_lngmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_oidmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_oidmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_ptrmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_ptrmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_shtmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_shtmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_wrdmax(int *ret, int *aid, int *bid, wrd *N);
str PQtopn2_wrdmin(int *ret, int *aid, int *bid, wrd *N);
str PQtopn_anymax(int *ret, int *bid, wrd *N);
str PQtopn_anymin(int *ret, int *bid, wrd *N);
str PQtopn_btemax(int *ret, int *bid, wrd *N);
str PQtopn_btemin(int *ret, int *bid, wrd *N);
str PQtopn_chrmax(int *ret, int *bid, wrd *N);
str PQtopn_chrmin(int *ret, int *bid, wrd *N);
str PQtopn_dblmax(int *ret, int *bid, wrd *N);
str PQtopn_dblmin(int *ret, int *bid, wrd *N);
str PQtopn_fltmax(int *ret, int *bid, wrd *N);
str PQtopn_fltmin(int *ret, int *bid, wrd *N);
str PQtopn_intmax(int *ret, int *bid, wrd *N);
str PQtopn_intmin(int *ret, int *bid, wrd *N);
str PQtopn_lngmax(int *ret, int *bid, wrd *N);
str PQtopn_lngmin(int *ret, int *bid, wrd *N);
str PQtopn_oidmax(int *ret, int *bid, wrd *N);
str PQtopn_oidmin(int *ret, int *bid, wrd *N);
str PQtopn_ptrmax(int *ret, int *bid, wrd *N);
str PQtopn_ptrmin(int *ret, int *bid, wrd *N);
str PQtopn_shtmax(int *ret, int *bid, wrd *N);
str PQtopn_shtmin(int *ret, int *bid, wrd *N);
str PQtopn_wrdmax(int *ret, int *bid, wrd *N);
str PQtopn_wrdmin(int *ret, int *bid, wrd *N);
str PQtopreplace_anymax(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str PQtopreplace_anymin(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str PQtopreplace_btemax(int *ret, int *bid, oid *idx, bte *el);
str PQtopreplace_btemin(int *ret, int *bid, oid *idx, bte *el);
str PQtopreplace_chrmax(int *ret, int *bid, oid *idx, chr *el);
str PQtopreplace_chrmin(int *ret, int *bid, oid *idx, chr *el);
str PQtopreplace_dblmax(int *ret, int *bid, oid *idx, dbl *el);
str PQtopreplace_dblmin(int *ret, int *bid, oid *idx, dbl *el);
str PQtopreplace_fltmax(int *ret, int *bid, oid *idx, flt *el);
str PQtopreplace_fltmin(int *ret, int *bid, oid *idx, flt *el);
str PQtopreplace_intmax(int *ret, int *bid, oid *idx, int *el);
str PQtopreplace_intmin(int *ret, int *bid, oid *idx, int *el);
str PQtopreplace_lngmax(int *ret, int *bid, oid *idx, lng *el);
str PQtopreplace_lngmin(int *ret, int *bid, oid *idx, lng *el);
str PQtopreplace_oidmax(int *ret, int *bid, oid *idx, oid *el);
str PQtopreplace_oidmin(int *ret, int *bid, oid *idx, oid *el);
str PQtopreplace_ptrmax(int *ret, int *bid, oid *idx, ptr *el);
str PQtopreplace_ptrmin(int *ret, int *bid, oid *idx, ptr *el);
str PQtopreplace_shtmax(int *ret, int *bid, oid *idx, sht *el);
str PQtopreplace_shtmin(int *ret, int *bid, oid *idx, sht *el);
str PQtopreplace_wrdmax(int *ret, int *bid, oid *idx, wrd *el);
str PQtopreplace_wrdmin(int *ret, int *bid, oid *idx, wrd *el);
str PQutopn2_anymax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_anymin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_btemax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_btemin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_chrmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_chrmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_dblmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_dblmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_fltmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_fltmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_intmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_intmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_lngmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_lngmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_oidmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_oidmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_ptrmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_ptrmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_shtmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_shtmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_wrdmax(int *ret, int *aid, int *bid, wrd *N);
str PQutopn2_wrdmin(int *ret, int *aid, int *bid, wrd *N);
str PQutopn_anymax(int *ret, int *bid, wrd *N);
str PQutopn_anymin(int *ret, int *bid, wrd *N);
str PQutopn_btemax(int *ret, int *bid, wrd *N);
str PQutopn_btemin(int *ret, int *bid, wrd *N);
str PQutopn_chrmax(int *ret, int *bid, wrd *N);
str PQutopn_chrmin(int *ret, int *bid, wrd *N);
str PQutopn_dblmax(int *ret, int *bid, wrd *N);
str PQutopn_dblmin(int *ret, int *bid, wrd *N);
str PQutopn_fltmax(int *ret, int *bid, wrd *N);
str PQutopn_fltmin(int *ret, int *bid, wrd *N);
str PQutopn_intmax(int *ret, int *bid, wrd *N);
str PQutopn_intmin(int *ret, int *bid, wrd *N);
str PQutopn_lngmax(int *ret, int *bid, wrd *N);
str PQutopn_lngmin(int *ret, int *bid, wrd *N);
str PQutopn_oidmax(int *ret, int *bid, wrd *N);
str PQutopn_oidmin(int *ret, int *bid, wrd *N);
str PQutopn_ptrmax(int *ret, int *bid, wrd *N);
str PQutopn_ptrmin(int *ret, int *bid, wrd *N);
str PQutopn_shtmax(int *ret, int *bid, wrd *N);
str PQutopn_shtmin(int *ret, int *bid, wrd *N);
str PQutopn_wrdmax(int *ret, int *bid, wrd *N);
str PQutopn_wrdmin(int *ret, int *bid, wrd *N);
sht PropertyIndex(str name);
str PropertyName(sht idx);
prop_op_t PropertyOperator(str s);
str PropertyOperatorString(prop_op_t op);
str QOTclrdebugOptimizers(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str QOTdebugOptimizers(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str QOTgetStatistics(int *ret, str *nme);
BUN QOTjoinEstimate(BAT *l, BAT *r);
str QOToptimize(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str QOTshowFlowGraph(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str QOTshowPlan(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void QOTstatisticsExit(void);
void QOTupdateStatistics(str nme, int prop, lng val);
str RECYCLEdumpQPatWrap(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RECYCLEdumpWrap(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
int RECYCLEentry(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RECYCLEepilogue(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void RECYCLEexit(Client cntxt,MalBlkPtr mb, MalStkPtr stk, InstrPtr p, lng ticks);
str RECYCLEgetAdmission(int *p);
str RECYCLEgetCache(int *p);
bte RECYCLEgetQryCat(int qidx);
str RECYCLEgetReuse(int *p);
void RECYCLEinit(void);
void RECYCLEinitQPat(int sz);
int RECYCLEinterest(InstrPtr p);
str RECYCLElog(int *d, str *nm);
str RECYCLEmonitor(int *d, int *p);
int RECYCLEnewQryStat(MalBlkPtr mb);
str RECYCLEprelude(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void RECYCLEreset(Client cntxt,MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RECYCLEresetCMD(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RECYCLEsetAdmission(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RECYCLEsetCache(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RECYCLEsetReuse(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void RECYCLEshutdown(Client cntxt);
str RECYCLEshutdownWrap(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RECYCLEstart(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RECYCLEstop(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTbatload(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTbincopyfrom(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTbincopyto(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTbintype(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTconnect(str *ret, str *uri, str *user, str *passwd);
str RMTconnectScen(str *ret, str *ouri, str *user, str *passwd, str *scen);
str RMTdisconnect(Client cntxt, str *conn);
str RMTepilogue(int *ret);
str RMTexec(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTget(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTisalive(int *ret, str *conn);
str RMTprelude(int *ret);
str RMTput(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTregister(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str RMTregisterInternal(Client cntxt, str conn, str mod, str fcn);
str RMTresolve(int *ret, str *pat);
str RMTresolve(int *ret, str *pat){ #ifdef WIN32 throw(MAL, "remote.resolve", "merovingian is not available on " "your platform, sorry");
str RNGnewRange_dbl(bit *res, dbl *i, dbl *first);
str RNGnewRange_flt(bit *res, flt *i, flt *first);
str RNGnewRange_int(bit *res, int *i, int *first);
str RNGnewRange_lng(bit *res, lng *i, lng *first);
str RNGnewRange_oid(bit *res, oid *i, oid *first);
str RNGnewRange_sht(bit *res, sht *i, sht *first);
str RNGnextElement_dbl(bit *res, dbl *i, dbl *step, dbl *last);
str RNGnextElement_flt(bit *res, flt *i, flt *step, flt *last);
str RNGnextElement_int(bit *res, int *i, int *step, int *last);
str RNGnextElement_lng(bit *res, lng *i, lng *step, lng *last);
str RNGnextElement_oid(bit *res, oid *i, oid *step, oid *last);
str RNGnextElement_sht(bit *res, sht *i, sht *step, sht *last);
str RUNadder(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RUNchoice(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RUNcostPrediction(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RUNisolation(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RUNpickResult(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str RUNvolumeCost(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str SABAOTHdeserialise(sabdb **ret, str *sabdb);
str SABAOTHfreeStatus(sabdb **ret);
str SABAOTHgetDBfarm(str *ret);
str SABAOTHgetDBname(str *ret);
str SABAOTHgetLocalConnection(str *ret);
str SABAOTHgetMyStatus(sabdb **ret);
str SABAOTHgetStatus(sabdb **ret, str dbname);
str SABAOTHgetUplogInfo(sabuplog *ret, sabdb *db);
void SABAOTHinit(str dbfarm, str dbname);
str SABAOTHmarchConnection(int *ret, str *host, int *port);
str SABAOTHmarchScenario(int *ret, str *lang);
str SABAOTHregisterStart(int *ret);
str SABAOTHregisterStop(int *ret);
str SABAOTHretreatScenario(int *ret, str *lang);
str SABAOTHserialise(str *ret, sabdb *db);
str SABAOTHwildRetreat(int *ret);
str SABepilogue(int *ret);
str SABgetLocalConnectionHost(str *ret);
str SABgetLocalConnectionPort(int *ret);
str SABgetLocalConnectionURI(str *ret);
str SABmarchConnection(int *ret, str *host, int *port);
str SABmarchScenario(int *ret, str *lang);
str SABprelude(int *ret);
str SABretreatScenario(int *ret, str *lang);
str SABwildRetreat(int *ret);
str SAMPLEuniform(bat *r, bat *b, ptr s);
str SAMPLEuniform(bat *r, bat *b, ptr s){ BAT *br, *bb;
str SAMPLEuniform_dbl(bat *r, bat *b, ptr p);
str SAMPLEuniform_dbl(bat *r, bat *b, ptr p){ BAT *bb;
str SEMAcreate(monet_sema *res, int *init);
str SEMAdestroy(int *res, monet_sema *s);
str SEMAdown(int *res, monet_sema *s);
str SEMAup(int *res, monet_sema *s);
str SERVERbindBAT(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SERVERclient(int *res, stream **In, stream **Out);
str SERVERconnect(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str SERVERdestroy(int *ret, int *mid);
str SERVERdisconnect(int *ret, int *mid);
str SERVERdisconnectALL(int *ret);
str SERVERdisconnectWithAlias(int *ret, str *db_alias);
str SERVERerror(int *ret, int *idx);
str SERVERexecute(int *ret, int *idx);
void SERVERexit(void);
str SERVERexplain(str *ret, int *idx);
str SERVERfetch_all_rows(lng *ret, int *idx);
str SERVERfetch_field_bat(int *bid, int *idx);
str SERVERfetch_field_chr(chr *ret, int *idx, int *fnr);
str SERVERfetch_field_int(int *ret, int *idx, int *fnr);
str SERVERfetch_field_lng(lng *ret, int *idx, int *fnr);
str SERVERfetch_field_oid(oid *ret, int *idx, int *fnr);
str SERVERfetch_field_sht(sht *ret, int *idx, int *fnr);
str SERVERfetch_field_str(str *ret, int *idx, int *fnr);
str SERVERfetch_field_void(oid *ret, int *idx, int *fnr);
str SERVERfetch_line(str *ret, int *key);
str SERVERfetch_reset(int *ret, int *key);
str SERVERfetch_row(int *ret, int *idx);
str SERVERfinish(int *ret, int *idx);
str SERVERgetError(str *ret, int *idx);
str SERVERget_field_count(int *ret, int *idx);
str SERVERget_row_count(lng *ret, int *idx);
str SERVERlisten(int *Port, str *Usockfile, int *Maxusers);
str SERVERlisten_default(int *ret);
str SERVERlisten_port(int *ret, int *pid);
str SERVERlisten_usock(int *ret, str *usock);
str SERVERlookup(int *ret, str *dbalias);
str SERVERmapi_rpc_bat(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SERVERmapi_rpc_single_bat(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SERVERmapi_rpc_single_row(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SERVERnext_result(int *ret, int *key);
str SERVERping(int *ret, int *mid);
str SERVERprepare(int *ret, int *key, str *qry);
str SERVERput(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SERVERputLocal(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SERVERquery(int *ret, int *mid, str *qry);
str SERVERquery_array(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str SERVERquery_handle(int *ret, int *mid, str *qry);
str SERVERreconnect(int *ret, int *mid);
str SERVERreconnectAlias(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str SERVERreconnectWithoutAlias(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
str SERVERresume(int *ret);
str SERVERrows_affected(lng *ret, int *idx);
str SERVERsetAlias(int *ret, int *mid, str *dbalias);
str SERVERstop(int *ret);
str SERVERsuspend(int *ret);
str SERVERtrace(int *ret, int *mid, int *flag);
int SQLBLOBfromstr(char *instr, int *l, blob **val);
int SQLBLOBtostr(str *tostr, int *l, blob *pin);
BUN SQLload_file(Client cntxt, Tablet *as, bstream *b, stream *out, char *csep, char *rsep, char quote, lng skip, lng maxrow);
str SRVPOOLconnect(str *c, str *dbname);
str SRVPOOLexec(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str SRVPOOLlocal(int *res, int *flag);
str SRVPOOLquery(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SRVPOOLregister(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SRVPOOLreset(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str SRVPOOLscheduler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str SRVsetServers(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATclose(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATdeposit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATdepositStr(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATdestroy(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATdiscard(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATdiscard2(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATdrop(str nme);
str STATdump(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATenroll(int *ret, str *nme);
str STATenrollHistogram(int *ret, str *nme);
str STATepilogue(int *ret);
str STATforceUpdate(int *ret, str *nme);
str STATforceUpdateAll(int *ret);
str STATforceUpdateAll(int *ret);
str STATgetCount(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATgetHistogram(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATgetHotset(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATgetMax(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATgetMin(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATgetObjects(int *bid);
str STATgetSize(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STAThasMoreElements(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATnewIterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATopen(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATprelude(int *ret);
str STATrelease(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATreleaseAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATreleaseStr(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATtake(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATtoString(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str STATupdate(int *ret);
str STATupdateAll(int *ret, int forced);
str STRBytes(int *res, str *arg1);
str STRChrAt(chr *res, str *arg1, int *at);
str STRChrSearch(int *res, str *arg1, chr *c);
str STRConcat(str *res, str *val1, str *val2);
str STRFromWChr(str *res, int *at);
str STRIconv(str *res, str *o, str *fp, str *tp);
str STRLength(int *res, str *arg1);
str STRLower(str *res, str *arg1);
str STRLtrim(str *res, str *arg1);
str STRPrefix(bit *res, str *arg1, str *arg2);
str STRReverseChrSearch(int *res, str *arg1, chr *c);
str STRReverseStrSearch(int *res, str *arg1, str *arg2);
str STRRtrim(str *res, str *arg1);
str STRStrip(str *res, str *arg1);
str STRSubString(str *res, str *arg1, int *offset, int *length);
str STRSubstitute(str *res, str *arg1, str *arg2, str *arg3, bit *g);
str STRSuffix(bit *res, str *arg1, str *arg2);
str STRTail(str *res, str *arg1, int *offset);
str STRUpper(str *res, str *arg1);
str STRWChrAt(int *res, str *arg1, int *at);
str STRascii(int *ret, str *s);
str STRbatBytes(int *ret, int *l);
str STRbatChrAt(int *ret, int *l, int *r);
str STRbatChrAtcst(int *ret, int *l, int *cst);
str STRbatConcat(int *ret, int *l, int *r);
str STRbatConcatcst(int *ret, int *l, str *cst);
str STRbatEqual(int *ret, int *l, int *r);
str STRbatEqualCst(int *ret, int *l, str *cst);
str STRbatLength(int *ret, int *l);
str STRbatLower(int *ret, int *l);
str STRbatLtrim(int *ret, int *l);
str STRbatNotEqual(int *ret, int *l, int *r);
str STRbatNotEqualCst(int *ret, int *l, str *cst);
str STRbatPrefix(int *ret, int *l, int *r);
str STRbatPrefixcst(int *ret, int *l, str *cst);
str STRbatRstrSearch(int *ret, int *l, int *r);
str STRbatRstrSearchcst(int *ret, int *l, str *cst);
str STRbatRtrim(int *ret, int *l);
str STRbatStrip(int *ret, int *l);
str STRbatSubstitutecst(int *ret, int *l, str *arg2, str *arg3, bit *rep);
str STRbatSuffix(int *ret, int *l, int *r);
str STRbatSuffixcst(int *ret, int *l, str *cst);
str STRbatTail(int *ret, int *l, int *r);
str STRbatTailcst(int *ret, int *l, int *cst);
str STRbatUpper(int *ret, int *l);
str STRbatWChrAt(int *ret, int *l, int *r);
str STRbatWChrAtcst(int *ret, int *l, int *cst);
str STRbatlike_uselect(int *ret, int *bid, str *pat, str *esc);
str STRbatlike_uselect2(int *ret, int *bid, str *pat);
str STRbatreplace(int *ret, int *l, str *pat, str *s2);
str STRbatstrSearch(int *ret, int *l, int *r);
str STRbatstrSearchcst(int *ret, int *l, str *cst);
str STRbatstringLength(int *ret, int *l);
str STRbatsubstring(int *ret, int *l, int *r, int *t);
str STRbatsubstringcst(int *ret, int *bid, int *start, int *length);
str STRchrSearch(int *res, str *arg1, chr *c);
str STRcodeset(str *res);
str STRcstConcatbat(int *ret, str *cst, int *r);
str STRcstPrefixbat(int *ret, str *cst, int *r);
str STRcstRstrSearchbat(int *ret, str *cst, int *r);
str STRcstSuffixbat(int *ret, str *cst, int *r);
str STRcststrSearchbat(int *ret, str *cst, int *r);
str STRfindUnescapedOccurrence(str b, str c, str esc);
str STRinsert(str *ret, str *s, int *start, int *l, str *s2);
int STRlike(str s, str pat, str esc);
str STRlikewrap(bit *ret, str *s, str *pat, str *esc);
str STRlikewrap2(bit *ret, str *s, str *pat);
str STRlocate(int *ret, str *s1, str *s2);
str STRlocate2(int *ret, str *s1, str *s2, int *start);
str STRmax(str *res, str *left, str *right);
str STRmax_no_nil(str *res, str *left, str *right);
str STRmin(str *res, str *left, str *right);
str STRmin_no_nil(str *res, str *left, str *right);
str STRprefix(str *ret, str *s, int *l);
str STRrepeat(str *ret, str *s, int *c);
str STRreplace(str *ret, str *s1, str *s2, str *s3);
str STRspace(str *ret, int *l);
str STRstrSearch(int *res, str *arg1, str *arg2);
str STRstringLength(int *res, str *s);
str STRsubstring(str *ret, str *s, int *start, int *l);
str STRsubstringTail(str *ret, str *s, int *start);
str STRsuffix(str *ret, str *s, int *l);
str STRtostr(str *res, str *src);
str SYScpuStatistics(int *ret);
str SYSgdkEnv(int *ret);
str SYSgdkThread(int *ret);
str SYSgetmem_cursize(lng *num);
str SYSgetmem_maxsize(lng *num);
str SYSgetvm_cursize(lng *num);
str SYSgetvm_maxsize(lng *num);
str SYSioStatistics(int *ret);
str SYSmemStatistics(int *ret);
str SYSmem_usage(int *ret, lng *minsize);
str SYSsetmem_maxsize(int *ret, lng *num);
str SYSsetvm_maxsize(lng *num);
str SYSvm_usage(int *ret, lng *minsize);
ptr *TABLETadt_frStr(Column *c, int type, char *s, char *e, char quote);
int TABLETadt_toStr(void *extra, char **buf, int *len, int type, ptr a);
BUN TABLETassign_BATs(Tablet *as, BAT *bats);
BAT **TABLETcollect(Tablet *as);
BAT *TABLETcollect_bats(Tablet *as);
BAT **TABLETcollect_parts(Tablet *as, BUN offset);
int TABLETcreate_bats(Tablet *as, BUN est);
void TABLETdestroy_format(Tablet *as);
void TABLETdump(BAT *names, BAT *seps, BAT *bats, char *datafile, BUN nr);
BAT *TABLETload(Tablet *as, char *datafile);
BUN TABLETload_file(Tablet *as, bstream *b, stream *out);
BUN TABLEToutput(BAT *order, BAT *seps, BAT *bats, stream *s);
int TABLEToutput_file(Tablet *as, BAT *order, stream *s);
ptr *TABLETstrFrStr(Column *c, char *s, char *e);
str TABdisplayRow(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABdisplayTable(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABdump(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABfinishReport(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABfirstPage(int *ret);
str TABgetPage(int *ret, int *pnr);
str TABgetPageCnt(int *ret);
str TABheader(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABlastPage(int *ret);
str TABnextPage(int *ret);
str TABpage(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABprelude(int *ret);
str TABprevPage(int *ret);
str TABsetColumn(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnBracket(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnDecimal(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnDecimal(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnName(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnNull(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnPosition(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetColumnWidth(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetComplaints(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetDelimiter(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetFormat(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetPivot(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetProperties(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetRowBracket(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetStream(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetTableBracket(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TABsetTryAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
void TABshowHeader(Tablet *t);
void TABshowRange(Tablet *t, lng first, lng last);
void TABshowRow(Tablet *t);
str TKNZRappend(oid *pos, str *tuple);
str TKNZRclose(int *r);
str TKNZRdepositFile(int *r, str *fnme);
str TKNZRgetCardinality(int *r);
str TKNZRgetCount(int *r);
str TKNZRgetIndex(int *r);
str TKNZRgetLevel(int *r, int *level);
str TKNZRlocate(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TKNZRopen(int *r, str *name);
str TKNZRtakeOid(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
void TRACEtable(BAT **r);
str TRADERmakeBid(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TRADERmakeBids(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str TRNglobal_abort(bit *ret);
str TRNglobal_commit(bit *ret);
str TRNglobal_sync(bit *ret);
str TRNsub_commit(bit *ret, int *bid);
str TRNsubcommit(bit *ret, int *bid);
str TRNtrans_abort(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str TRNtrans_alpha(int *ret, int *bid);
str TRNtrans_clean(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str TRNtrans_commit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
str TRNtrans_delta(int *ret, int *bid);
str TRNtrans_prev(int *ret, int *bid);
int TYPE_blob;
int TYPE_date;
int TYPE_daytime;
int TYPE_identifier;
int TYPE_rule;
int TYPE_sqlblob;
int TYPE_timestamp;
int TYPE_tzone;
int TYPE_xml;
str UNIXgetRSS(lng *res);
str UNIXgetenv(str *res, str *varname);
str UNIXsetenv(bit *res, str *name, str *value);
str UNIXsync(int *res);
str URLBOXclose(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXdeposit(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXdepositFile(int *r, str *fnme);
str URLBOXdestroy(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXdiscard(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXdiscardAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXdiscardOid(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXgetCardinality(int *r);
str URLBOXgetCount(int *r);
str URLBOXgetLevel(int *r, int *level);
str URLBOXgetNames(int *r);
str URLBOXgetSize(int *r);
str URLBOXhasMoreElements(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXnewIterator(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXopen(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXprelude(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXrelease(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXreleaseAll(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXreleaseOid(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXtake(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str URLBOXtoString(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
int URLfromString(str src, int *len, str *url);
str URLgetAnchor(str *retval, str *val);
str URLgetBasename(str *retval, str *t);
str URLgetContent(str *retval, str *Str1);
str URLgetContext(str *retval, str *val);
str URLgetDirectory(int *ret, str *tv);
str URLgetDomain(str *retval, str *tv);
str URLgetExtension(str *retval, str *tv);
str URLgetFile(str *retval, str *tv);
str URLgetHost(str *retval, str *tv);
str URLgetPort(str *retval, str *tv);
str URLgetProtocol(str *retval, str *tv);
str URLgetQuery(str *retval, str *tv);
str URLgetQueryArg(int *ret, str *tv);
str URLgetRobotURL(str *retval, str *tv);
str URLgetUser(str *retval, str *tv);
str URLisaURL(bit *retval, str *tv);
str URLnew(str *url, str *val);
str URLnew3(str *url, str *protocol, str *server, str *file);
str URLnew4(str *url, str *protocol, str *server, int *port, str *file);
str URLnoop(str *url, str *val);
int URLtoString(str *s, int *len, str src);
str XMLattribute(xml *ret, str *name, str *val);
str XMLcomment(xml *x, str *s);
str XMLconcat(xml *ret, xml *left, xml *right);
str XMLcontent(xml *x, str *s);
str XMLdocument(xml *x, str *s);
str XMLelement(xml *ret, str *name, xml *nspace, xml *attr, xml *val);
str XMLelementSmall(xml *ret, str *name, xml *val);
str XMLforest(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
int XMLfromString(str src, int *len, xml *x);
str XMLisdocument(bit *x, str *s);
str XMLparse(xml *x, str *doccont, str *s, str *option);
str XMLpi(xml *x, str *target, str *s);
str XMLprelude(void);
size_t XMLquotestring(const char *s, char *buf, size_t len);
str XMLroot(str *x, str *v, str *version, str *standalone);
str XMLstr2xml(xml *x, str *s);
int XMLtoString(str *s, int *len, xml src);
size_t XMLunquotestring(char **p, char q, char *buf);
str XMLxml2str(str *s, xml *x);
str XMLxml2xml(xml *x, xml *s);
str XMLxmltext(str *s, xml *x);
str ZORDbatdecode_int_oid(int *x, int *y, int *z);
str ZORDbatdecode_int_oid_x(int *x, int *z);
str ZORDbatdecode_int_oid_y(int *y, int *z);
str ZORDbatencode_int_oid(int *z, int *x, int *y);
str ZORDdecode_int_oid(int *x, int *y, oid *z);
str ZORDdecode_int_oid_x(int *x, oid *z);
str ZORDdecode_int_oid_y(int *y, oid *z);
str ZORDencode_int_oid(oid *z, int *x, int *y);
str ZORDslice_int(int *r, int *xb, int *yb, int *xt, int *yt);
str ZORDslice_int(int *r, int *xb, int *yb, int *xt, int *yt){ BAT *bn;
str ZORDsql_slice_int(int *r, int *xb, int *yb, int *xt, int *yt);
str ZORDsql_slice_int(int *r, int *xb, int *yb, int *xt, int *yt){ int slice_ret;
void _initTrace(void);
str activateCounter(str name);
str addPipeDefinition(str name, str pipe);
str addRegWrap(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pc);
DCYcatalog *addRegist(str sch, str tab, str col, int acc, int part, int f_bun, int l_bun);
void addtoMalBlkHistory(MalBlkPtr mb,str marker);
int admissionPolicy;
str affectedRowsRef;
str aggrRef;
str alarmRef;
str algebraRef;
int allTargetsVisible(MalBlkPtr mb, Lifespan span, int pc,int qc);
str antijoinRef;
str antiuselectRef;
str appendRef;
str appendidxRef;
str assertRef;
str attachRef;
str avgRef;
str bandjoinRef;
str basketRef;
void batAfterCall(ValPtr v, ValPtr bak);
void batBeforeCall(ValPtr v, ValPtr bak);
str batRef;
str bataccumAND_bte_bte_bte(BAT *bn, BAT *b, BAT *right);
str bataccumAND_int_int_int(BAT *bn, BAT *b, BAT *right);
str bataccumAND_lng_lng_lng(BAT *bn, BAT *b, BAT *right);
str bataccumAND_oid_oid_oid(BAT *bn, BAT *b, BAT *right);
str bataccumAND_sht_sht_sht(BAT *bn, BAT *b, BAT *right);
str bataccumAND_wrd_wrd_wrd(BAT *bn, BAT *b, BAT *right);
str bataccumLSH_bte_int_bte(BAT *bn, BAT *b, BAT *right);
str bataccumLSH_int_int_int(BAT *bn, BAT *b, BAT *right);
str bataccumLSH_lng_int_lng(BAT *bn, BAT *b, BAT *right);
str bataccumLSH_oid_int_oid(BAT *bn, BAT *b, BAT *right);
str bataccumLSH_sht_int_sht(BAT *bn, BAT *b, BAT *right);
str bataccumLSH_wrd_int_wrd(BAT *bn, BAT *b, BAT *right);
str bataccumMOD_bte_bte_bte(BAT *bn, BAT *b, BAT *right);
str bataccumMOD_int_int_int(BAT *bn, BAT *b, BAT *right);
str bataccumMOD_lng_lng_lng(BAT *bn, BAT *b, BAT *right);
str bataccumMOD_sht_sht_sht(BAT *bn, BAT *b, BAT *right);
str bataccumMOD_wrd_wrd_wrd(BAT *bn, BAT *b, BAT *right);
str bataccumOR_bte_bte_bte(BAT *bn, BAT *b, BAT *right);
str bataccumOR_int_int_int(BAT *bn, BAT *b, BAT *right);
str bataccumOR_lng_lng_lng(BAT *bn, BAT *b, BAT *right);
str bataccumOR_oid_oid_oid(BAT *bn, BAT *b, BAT *right);
str bataccumOR_sht_sht_sht(BAT *bn, BAT *b, BAT *right);
str bataccumOR_wrd_wrd_wrd(BAT *bn, BAT *b, BAT *right);
str bataccumRSH_bte_int_bte(BAT *bn, BAT *b, BAT *right);
str bataccumRSH_int_int_int(BAT *bn, BAT *b, BAT *right);
str bataccumRSH_lng_int_lng(BAT *bn, BAT *b, BAT *right);
str bataccumRSH_oid_int_oid(BAT *bn, BAT *b, BAT *right);
str bataccumRSH_sht_int_sht(BAT *bn, BAT *b, BAT *right);
str bataccumRSH_wrd_int_wrd(BAT *bn, BAT *b, BAT *right);
str bataccumXOR_bte_bte_bte(BAT *bn, BAT *b, BAT *right);
str bataccumXOR_int_int_int(BAT *bn, BAT *b, BAT *right);
str bataccumXOR_lng_lng_lng(BAT *bn, BAT *b, BAT *right);
str bataccumXOR_oid_oid_oid(BAT *bn, BAT *b, BAT *right);
str bataccumXOR_sht_sht_sht(BAT *bn, BAT *b, BAT *right);
str bataccumXOR_wrd_wrd_wrd(BAT *bn, BAT *b, BAT *right);
str batcalcRef;
str batmmathRef;
str batmtimeRef;
str batstrRef;
str bbpRef;
int bindBAT(Box box, str name, str location);
str bindRef;
str binddbatRef;
str bindidxRef;
var_t blobsize(size_t nitems);
str boxRef;
str bpmRef;
str bstreamRef;
int bstream_create_wrap(Bstream *BS, Stream *S, int *bufsize);
str bstream_create_wrapwrap(Bstream *Bs, Stream *S, int *bufsize);
int bstream_destroy_wrap(Bstream *BS);
str bstream_destroy_wrapwrap(int *ret, Bstream *BS);
int bstream_read_wrap(int *res, Bstream *BS, int *size);
str bstream_read_wrapwrap(int *res, Bstream *BS, int *size);
str calcRef;
str callFactory(Client cntxt, MalBlkPtr mb, ValPtr argv[],char flag);
str callMAL(Client cntxt, MalBlkPtr mb, MalStkPtr *glb, ValPtr argv[], char debug);
int callString(Client c, str s, int listing);
int canBeCrackedProp;
int canBeJoinselectProp;
str catalogRef;
str catchKernelException(Client cntxt, str ret);
str centipedeRef;
int charCst(Client cntxt, ValPtr val);
void chkDeclarations(MalBlkPtr mb);
void chkFlow(MalBlkPtr mb);
void chkInstruction(Module s, MalBlkPtr mb, InstrPtr p);
void chkProgram(Module s, MalBlkPtr mb);
void chkTypes(Module s, MalBlkPtr mb, int silent);
str cleanupProfiler(void);
void clearStack(MalStkPtr s);
void clearTrace(void);
void clearVariable(MalBlkPtr mb, int varid);
str clear_tableRef;
Symbol cloneFunction(Module scope, Symbol proc, MalBlkPtr mb, InstrPtr p);
int cloneVariable(MalBlkPtr dst, MalBlkPtr src, int varid);
int closeBox(str name, int flag);
str closeProfilerStream(void);
str closeRef;
void clrAllTypes(MalBlkPtr mb);
void clrDeclarations(MalBlkPtr mb);
void clrFilter(Module cntxt, str mod, str fcn);
void clrFilterVariable(MalBlkPtr mb, int i);
void clrFunction(InstrPtr p);
void clrInstruction(InstrPtr p);
int codeset(str *res);
int color_fromstr(char *colorStr, int *len, color **c);
int color_tostr(char **colorStr, int *len, color *c);
str columnBindRef;
str columnRef;
str commitRef;
str compileString(Symbol *fcn, Client c, str s);
str compressRef;
str connectRef;
str constraintsRef;
str convertConstant(malType type, ValPtr vr);
InstrPtr copyInstruction(InstrPtr p);
MalBlkPtr copyMalBlk(MalBlkPtr mb);
str copyRef;
void copyVariable(MalBlkPtr dst, VarPtr v);
str copy_fromRef;
str countRef;
str count_no_nilRef;
int cpyConstant(MalBlkPtr mb, VarPtr vr);
str createException(enum malexception, const char *, _In_z_ _Printf_format_string_ const char *, ...)__attribute__((__format__(__printf__, 3, 4)));
str createRef;
str createScriptException(MalBlkPtr, int, enum malexception, const char *, _In_z_ _Printf_format_string_ const char *, ...)__attribute__((__format__(__printf__, 5, 6)));
str crossRef;
int cstToken(Client cntxt, ValPtr val);
str datacellRef;
str datacyclotronRef;
str dataflowRef;
int date_fromstr(str buf, int *len, date **d);
int date_tostr(str *buf, int *len, date *val);
int daytime_fromstr(str buf, int *len, daytime **ret);
int daytime_tostr(str *buf, int *len, daytime *val);
int daytime_tz_fromstr(str buf, int *len, daytime **ret);
str dblFromfltImpl(dbl *res, flt *val);
str dblRef;
str deactivateCounter(str name);
void debugLifespan(Client cntxt, MalBlkPtr mb, Lifespan span);
void debugModule(stream *f, Module v, str nme);
str debugOptimizers(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
void debugParser(int i);
str debugScheduler(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str decompressRef;
int defConstant(MalBlkPtr mb, int type, ValPtr cst);
str defaultScenario(Client c);
void delArgument(InstrPtr p, int varid);
void delName(str nme, size_t len);
void delVariable(MalBlkPtr mb, int varid);
str deleteRef;
void deleteSymbol(Module scope, Symbol prg);
int deletesProp;
str dense_rank_grpRef;
int depositBox(Box box, str name, int type, ValPtr val);
str depositRef;
void deriveModule(Module scope, str nme);
str derivePathRef;
str deriveRef;
malType destinationType(MalBlkPtr mb, InstrPtr p);
void destroyBox(str name);
str differenceRef;
int discardBox(Box box, str name);
str disconnectRef;
int displayModule(stream *f, Module v, str fcn,int listing);
str divRef;
str doALGfetch(ptr ret, BAT *b, lng *pos);
str doneRef;
int dropRegist(str sch, str tab, str col, int acc);
void dumpExceptionsToStream(stream *out, str msg);
void dumpHelpTable(stream *f, Module s, str text, int flag);
void dumpManual(stream *f, Module v, int recursive);
void dumpManualFooter(stream *f);
void dumpManualHeader(stream *f);
void dumpManualHelp(stream *f, Module s, int recursive);
void dumpManualOverview(stream *f, Module v, int recursive);
void dumpManualSection(stream *f, Module v);
void dumpNamespaceStatistics(stream *f, int details);
void dumpSearchTable(stream *f, str text);
InstrPtr dynamicTypeChecker(Module scope,MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
void echoInput(Client cntxt);
str escape_str(str *retval, str s);
str evalFile(Client c, str fname, int listing);
str evalRef;
str exceptionToString(enum malexception);
str execRef;
void exitScenario(Client c);
void expandMacro(MalBlkPtr mb, InstrPtr p, MalBlkPtr mc);
void expandMalBlk(MalBlkPtr mb, int lines);
str expandRef;
str exportOperationRef;
int factoryHasFreeSpace(void);
int fcnBinder(Module scope, MalBlkPtr mb, InstrPtr p);
str fcnClass(InstrPtr p);
str fcnDefinition(MalBlkPtr mb, InstrPtr p, str s, int flg, str base, size_t len);
int fileProp;
Box findBox(str name);
int findGDKtype(int type);
int findInstruction(Module scope, MalBlkPtr mb, InstrPtr pci);
Module findModule(Module scope, str name);
DCYcatalog *findRegist(str sch, str tab, str col, int acc);
Scenario findScenario(str nme);
Symbol findSymbol(Module nspace, str mod, str fcn);
Symbol findSymbolInModule(Module v, str fcn);
int findTmpVariable(MalBlkPtr mb, int type);
int findVariable(MalBlkPtr mb, str name);
int findVariableLength(MalBlkPtr mb, str name, int len);
str finishFactory(Client cntxt, MalBlkPtr mb, InstrPtr pp, int pc);
void finishNamespace(void);
str finishRef;
Module fixModule(Module scope, str nme);
int fndConstant(MalBlkPtr mb, ValPtr cst,int depth);
void formatVolume(str buf, int len, lng vol);
void freeInstruction(InstrPtr p);
void freeMalBlk(MalBlkPtr mb);
void freeModule(Module cur);
void freeModuleList(Module cur);
void freeStack(MalStkPtr stk);
void freeSymbol(Symbol s);
void freeSymbolList(Symbol s);
void freeVariable(MalBlkPtr mb, int varid);
void fromdate(int n, int *d, int *m, int *y);
void fromtime(int n, int *hour, int *min, int *sec, int *msec);
str fstrcmp0_impl(dbl *ret, str *string1, str *string2);
str fstrcmp_impl(dbl *ret, str *string1, str *string2, dbl *minimum);
str function2str(MalBlkPtr mb, int flg);
void garbageCollector(Client cntxt, MalBlkPtr mb, MalStkPtr stk, int flag);
void garbageElement(Client cntxt, ValPtr v);
MALfcn getAddress(str filename, str modnme, str fcnname,int silent);
str getArgDefault(MalBlkPtr mb, InstrPtr p, int idx);
ptr getArgReference(MalStkPtr stk, InstrPtr pci, int k);
int getBarrierEnvelop(MalBlkPtr mb);
int getBlockBegin(MalBlkPtr mb,int pc);
int getBlockExit(MalBlkPtr mb,int pc);
str getBoxName(Box box, lng i);
str getBoxNames(int *bid);
char *getConsoleInput(Client c, const char *prompt, int linemode, int exit_on_error);
lng getDiskReads(void);
lng getDiskSpace(void);
lng getDiskWrites(void);
str getExceptionMessage(str);
str getExceptionPlace(str);
enum malexception getExceptionType(str);
Scenario getFreeScenario(void);
Symbol getFunctionSymbol(Module scope, InstrPtr p);
int getGDKType(int tpe);
char **getHelp(Module m, str pat, int flag);
char **getHelpMatch(char *pat);
MalBlkPtr getMalBlkHistory(MalBlkPtr mb,int idx);
MalBlkPtr getMalBlkMarker(MalBlkPtr mb, str marker);
str getName(str nme, size_t len);
int getPC(MalBlkPtr mb, InstrPtr p);
str getPipeCatalog(int *nme, int *def);
str getPipeDefinition(str name);
str getRef;
str getRefName(MalBlkPtr mb, int i);
str getScenarioLanguage(Client c);
lng getSystemTime(void);
BAT *getTrace(str ev);
int getTraceType(str nme);
malType getType(MalBlkPtr mb, str nme);
str getTypeIdentifier(malType tpe);
int getTypeIndex(str nme, int len, int deftpe);
str getTypeName(malType tpe);
lng getUserTime(void);
str getVarName(MalBlkPtr mb, int i);
wrd getVarRows(MalBlkPtr mb, int v);
lng getVolume(MalStkPtr stk, InstrPtr pci, int rd);
MalBlkPtr gotoMalBlkMarker(MalBlkPtr mb, str marker);
str grabRef;
str groupRef;
str groupbyRef;
int hasCommonResults(InstrPtr p, InstrPtr q);
int hasSameArguments(MalBlkPtr mb, InstrPtr p, InstrPtr q);
int hasSameSignature(MalBlkPtr mb, InstrPtr p, InstrPtr q, int stop);
int hasSideEffects(InstrPtr p, int strict);
int has_whitespace(char *sep);
str hashRef;
int headProp;
str histogramRef;
int hlbProp;
int horiginProp;
int hubProp;
int idLength(Client cntxt);
int idcmp(str n, str m);
str identityRef;
str ifthenelseRef;
str ilikeselectRef;
str ilikeuselectRef;
void initLibraries(void);
void initNamespace(void);
void initParser(void);
void initProfiler(MalBlkPtr mb);
int inlineMALblock(MalBlkPtr mb, int pc, MalBlkPtr mc);
int inlineProp;
str inplaceRef;
void insertInstruction(MalBlkPtr mb, InstrPtr p, int pc);
str insertRef;
void insertSymbol(Module scope, Symbol prg);
void insertToBox(Box box, str name, str val);
int insert_line(Tablet *as, char *line, ptr key, BUN col1, BUN col2);
int insertionsProp;
int instrFilter(InstrPtr pci, str mod, str fcn);
str instruction2str(MalBlkPtr mb, MalStkPtr stl, InstrPtr p, int hidden);
str instructionCall(MalBlkPtr mb, InstrPtr p, str s, str base, size_t len);
str intFrombitImpl(int *res, bit *val);
str intFromshtImpl(int *res, sht *val);
str intRef;
str intSetoidImpl(str *ret, int *v);
str ioRef;
str io_stderr(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str io_stdin(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str io_stdout(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
int isAllScalar(MalBlkPtr mb, InstrPtr p);
int isAmbiguousType(int type);
bit isBindInstr(InstrPtr p);
int isBlocking(InstrPtr p);
int isDependent(InstrPtr p, InstrPtr q);
int isDiffOp(InstrPtr q);
int isExceptionVariable(str nme);
int isFragmentGroup(InstrPtr q);
int isIdentifier(str s);
int isInvariant(MalBlkPtr mb, int pcf, int pcl, int varid);
int isLoaded(str modulename);
int isLoopBarrier(MalBlkPtr mb, int pc);
int isMapOp(InstrPtr q);
int isMatJoinOp(InstrPtr q);
int isModuleDefined(Module scope, str name);
int isOptimizerEnabled(MalBlkPtr mb, str opt);
int isOrderby(InstrPtr q);
int isPreloaded(str nme);
int isProcedure(MalBlkPtr mb, InstrPtr p);
int isProjection(InstrPtr p);
int isSelect(InstrPtr p);
int isSideEffectFree(MalBlkPtr mb);
int isSlice(InstrPtr q);
int isTmpName(str n);
int isTopn(InstrPtr q);
int isTypeName(str n);
int isUnsafeFunction(InstrPtr q);
int isUnsafeInstruction(InstrPtr q);
int isUpdateInstruction(InstrPtr p);
int isUpdated(MalBlkPtr mb, int pc);
str joinPathRef;
str joinRef;
str kdifferenceRef;
int keepProp;
str kunionRef;
str kuniqueRef;
str languageRef;
str lastline(Client cntxt);
str leftjoinPathRef;
str leftjoinRef;
str levenshtein_impl(int *result, str *s, str *t, int *insdel_cost, int *replace_cost, int *transpose_cost);
str levenshteinbasic2_impl(int *result, str *s, str *t);
str levenshteinbasic_impl(int *result, str *s, str *t);
str likeRef;
str likeselectRef;
str likeuselectRef;
void listFunction(stream *fd, MalBlkPtr mb, MalStkPtr stk, int flg, int first, int step);
str listRef;
str lngFrombitImpl(lng *res, bit *val);
str lngFromintImpl(lng *res, int *val);
str lngFromoidImpl(lng *res, oid *val);
str lngFromshtImpl(lng *res, sht *val);
str lngSetoidImpl(str *ret, lng *v);
void loadBox(str nme);
str loadLibrary(str modulename, int flag);
str lockRef;
int lockToStr(char **dst, int *len, ptr *src);
int log_abort_wrap(logger *L);
int log_bat_clear_wrap(logger *L, str nme);
int log_bat_persists_wrap(logger *L, BAT *b, str nme);
int log_bat_transient_wrap(logger *L, str nme);
int log_bat_wrap(logger *L, BAT *b, str nme);
int log_delta_wrap(logger *L, BAT *b, str nme);
int log_tend_wrap(logger *L);
int log_tstart_wrap(logger *L);
int logger_add_bat_wrap(int *bid, logger *L, BAT *b, str nme);
int logger_changes_wrap(int *r, logger *L);
int logger_cleanup_wrap(logger *L);
str logger_create_wrap(logger *L, int *debug, str *fn, str *dirname, str *dbname, int *version);
int logger_del_bat_wrap(logger *L, int *bid);
str logger_destroy_wrap(logger *L);
int logger_exit_wrap(logger *L);
int logger_find_bat_wrap(int *bid, logger *L, str nme);
int logger_restart_wrap(logger *L);
str lookupRef;
malType malAnyBatType(malType t1, malType t2);
int malAtomArray(int tpe, int idx);
void malAtomDefinition(str name,int tpe);
int malAtomFixed(int size, int align, char *name);
int malAtomProperty(MalBlkPtr mb, InstrPtr pci);
int malAtomSize(int size, int align, char *name);
int malBootstrap(void);
void malGarbageCollector(MalBlkPtr mb);
str malInclude(Client c, str name, int listing);
str malLoadScript(Client c, str name, bstream **fdin);
int malProfileMode;
str malRef;
ClientRec *mal_clients;
MT_Lock mal_contextLock;
MT_Lock mal_copyLock;
void mal_exit(void);
int mal_init(void);
MT_Lock mal_profileLock;
str mal_quote(const char *msg, size_t size);
MT_Lock mal_remoteLock;
void mal_unquote(char *msg);
str mapiRef;
str markHRef;
str markTRef;
str mark_grpRef;
str matRef;
str materializeRef;
str materializeRef;
aggrFun maxAggr;
str maxRef;
str max_no_nilRef;
void mdbClrBreakRequest(Client cntxt, str name);
void mdbCommand(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p, int pc);
void mdbDump(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
str mdbGrab(Client cntxt, MalBlkPtr mb1, MalStkPtr stk1, InstrPtr pc1);
void mdbHelp(stream *f);
void mdbInit(void);
str mdbRef;
int mdbSession(void);
void mdbSetBreakRequest(Client cntxt, MalBlkPtr mb, str request, char cmd);
void mdbSetBreakpoint(Client cntxt, MalBlkPtr mb, int pc, char cmd);
int mdbSetTrap(Client cntxt, str modnme, str fcnnme, int flag);
void mdbShowBreakpoints(Client cntxt);
void mdbStep(Client cntxt, MalBlkPtr mb, MalStkPtr stk, int pc);
str mdbTrap(Client cntxt, MalBlkPtr mb, MalStkPtr stk, int pc);
str mdbTrapClient(Client cntxt, MalBlkPtr mb1, MalStkPtr stk1, InstrPtr pc1);
aggrFun minAggr;
str minRef;
str min_no_nilRef;
str mirrorRef;
str mkeyRef;
str mmathRef;
int mnstr_close_stream(Stream *S);
str mnstr_close_streamwrap(int *ret, Stream *s);
int mnstr_flush_stream(Stream *S);
str mnstr_flush_streamwrap(int *ret, Stream *s);
str mnstr_open_rastreamwrap(Stream *S, str *filename);
str mnstr_open_rstreamwrap(Stream *S, str *filename);
str mnstr_open_wastreamwrap(Stream *S, str *filename);
str mnstr_open_wstreamwrap(Stream *S, str *filename);
int mnstr_readInt_wrap(int *data, Stream *S);
str mnstr_readIntwrap(int *ret, Stream *S);
str mnstr_readIntwrap(int *ret, Stream *S);
int mnstr_read_string(str *res, Stream *S);
str mnstr_read_stringwrap(str *res, Stream *s);
str mnstr_read_stringwrap(str *res, Stream *s);
str mnstr_socket_rastreamwrap(Stream *S, int *socket, str *name);
str mnstr_socket_rstreamwrap(Stream *S, int *socket, str *name);
str mnstr_socket_wastreamwrap(Stream *S, int *socket, str *name);
str mnstr_socket_wstreamwrap(Stream *S, int *socket, str *name);
str mnstr_stream_rstreamwrap(Stream *sout, Stream *sin);
str mnstr_stream_wstreamwrap(Stream *sout, Stream *sin);
int mnstr_writeInt_wrap(Stream *S, int *data);
str mnstr_writeIntwrap(int *ret, Stream *S, int *data);
int mnstr_write_string(Stream *S, str data);
str mnstr_write_stringwrap(int *ret, Stream *S, str *data);
char monet_cwd[PATHLENGTH];
int monet_daemon;
size_t monet_memory;
str *monet_script;
int monet_welcome;
int monitorRecycler;
int moreClients(int reruns);
void moveInstruction(MalBlkPtr mb, int pc, int target);
lng msComputeTime;
lng msFindTime;
str mtimeRef;
str multiplexRef;
str mvcRef;
InstrPtr newAssignment(MalBlkPtr mb);
InstrPtr newAssignmentId(MalBlkPtr mb, str nme);
InstrPtr newCall(Module scope, str fcnname, int kind);
InstrPtr newCatchStmt(MalBlkPtr mb, str nme);
InstrPtr newComment(MalBlkPtr mb, const char *val);
InstrPtr newExitStmt(MalBlkPtr mb, str nme);
InstrPtr newFcnCall(MalBlkPtr mb, char *mod, char *fcn);
Symbol newFunction(str mod, str nme,int kind);
MalStkPtr newGlobalStack(int size);
InstrPtr newInstruction(MalBlkPtr mb, int kind);
MalBlkPtr newMalBlk(int maxvars, int maxstmts);
int newMalBlkStmt(MalBlkPtr mb, int maxstmts);
Module newModule(Module scope, str nme);
Plant newPlant(MalBlkPtr mb);
int newProperty(MalBlkPtr mb);
InstrPtr newRaiseStmt(MalBlkPtr mb, str nme);
str newRef;
InstrPtr newStmt(MalBlkPtr mb, char *module, char *name);
InstrPtr newStmt1(MalBlkPtr mb, str module, char *name);
InstrPtr newStmt2(MalBlkPtr mb, str module, char *name);
InstrPtr newStmtId(MalBlkPtr mb, char *id, char *module, char *name);
Symbol newSymbol(str nme, int kind);
str newTmpName(char tag, int i);
int newTmpSink(MalBlkPtr mb, malType type);
int newTmpVariable(MalBlkPtr mb, malType type);
int newTypeVariable(MalBlkPtr mb, malType type);
int newVariable(MalBlkPtr mb, str name, malType type);
int nextBoxElement(Box box, lng *cursor, ValPtr v);
str notRef;
str not_uniqueRef;
int notnilProp;
int nrservers;
str octopusRef;
str oidFromintImpl(oid *res, int *val);
str oidFromlngImpl(oid *res, lng *val);
str oidFromoidImpl(oid *ret, oid *val);
str oidFromshtImpl(oid *res, sht *val);
str oidFromvoidImpl(oid *ret, void *val);
str oidRef;
str oidSetoidImpl(str *ret, oid *v);
void oldmoveInstruction(InstrPtr dst, InstrPtr src);
Box openBox(str name);
str openProfilerStream(stream *fd);
str openRef;
int open_block_stream(Stream *S, Stream *is);
str open_block_streamwrap(Stream *S, Stream *is);
str operatorCopy(Client cntxt, int length);
int operatorLength(Client cntxt);
str operatorName(int i);
lng optDebug;
str optimizeMALBlock(Client cntxt, MalBlkPtr mb);
str optimizerCheck(Client cntxt, MalBlkPtr mb, str name, int actions, lng usec, int flag);
void optimizerDebug(Client cntxt, MalBlkPtr mb, str name, int actions, lng usec);
void optimizerInit(void);
str optimizerRef;
str optimizer_prelude(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr p);
int output_file_dense(Tablet *as, stream *fd);
str pack2Ref;
str packRef;
str parseError(Client cntxt, str msg);
int parseMAL(Client cntxt, Symbol curPrg);
str partitionRef;
str pcreRef;
void pcre_del(Heap *h, var_t *index);
int pcre_fromstr(str instr, int *l, pcre **val);
BUN pcre_hash(pcre *b);
void pcre_heap(Heap *heap, size_t capacity);
str pcre_init(void);
int pcre_length(pcre *p);
int pcre_nequal(pcre *l, pcre *r);
pcre *pcre_null(void);
var_t pcre_put(Heap *h, var_t *bun, pcre *val);
int pcre_tostr(str *tostr, int *l, pcre *p);
str pinRef;
int pivotDisjunctiveProp;
int pivotProp;
str plusRef;
long position(Client cntxt);
str postludeRef;
str pqueueRef;
str preludeRef;
MalStkPtr prepareMALstack(MalBlkPtr mb, int size);
void prepareMalBlk(MalBlkPtr mb, str s);
void printBATelm(stream *f, int i, BUN cnt, BUN first);
void printBBPinfo(stream *out);
void printBatDetails(stream *f, int bid);
void printBatInfo(stream *f, VarPtr n, ValPtr v);
void printBatProperties(stream *f, VarPtr n, ValPtr v, str props);
void printFunction(stream *fd, MalBlkPtr mb, MalStkPtr stk, int flg);
void printInstruction(stream *fd, MalBlkPtr mb, MalStkPtr stk, InstrPtr p, int flg);
str printRef;
str printRegists(void);
void printSignature(stream *fd, Symbol s, int flg);
void printStack(stream *f, MalBlkPtr mb, MalStkPtr s);
void printTraceCall(stream *out, MalBlkPtr mb, MalStkPtr stk, int pc, int flags);
str prodRef;
int profilerAvailable(void);
void profilerEvent(int idx, MalBlkPtr mb, MalStkPtr stk, int pc, int start);
str profilerRef;
str projectRef;
void promptInstruction(stream *fd, MalBlkPtr mb, MalStkPtr stk, InstrPtr p, int flg);
InstrPtr pushArgument(MalBlkPtr mb, InstrPtr p, int varid);
InstrPtr pushArgumentId(MalBlkPtr mb, InstrPtr p, str name);
InstrPtr pushBit(MalBlkPtr mb, InstrPtr q, bit val);
InstrPtr pushBte(MalBlkPtr mb, InstrPtr q, bte val);
InstrPtr pushChr(MalBlkPtr mb, InstrPtr q, chr val);
InstrPtr pushDbl(MalBlkPtr mb, InstrPtr q, dbl val);
InstrPtr pushEmptyBAT(MalBlkPtr mb, InstrPtr q, int tpe);
void pushEndInstruction(MalBlkPtr mb);
InstrPtr pushFlt(MalBlkPtr mb, InstrPtr q, flt val);
void pushInstruction(MalBlkPtr mb, InstrPtr p);
InstrPtr pushInt(MalBlkPtr mb, InstrPtr q, int val);
InstrPtr pushLng(MalBlkPtr mb, InstrPtr q, lng val);
InstrPtr pushNil(MalBlkPtr mb, InstrPtr q, int tpe);
InstrPtr pushNilType(MalBlkPtr mb, InstrPtr q, char *tpe);
InstrPtr pushOid(MalBlkPtr mb, InstrPtr q, oid val);
InstrPtr pushReturn(MalBlkPtr mb, InstrPtr p, int varid);
InstrPtr pushStr(MalBlkPtr mb, InstrPtr q, const char *val);
InstrPtr pushType(MalBlkPtr mb, InstrPtr q, int tpe);
InstrPtr pushValue(MalBlkPtr mb, InstrPtr q, ValPtr cst);
InstrPtr pushVoid(MalBlkPtr mb, InstrPtr q);
InstrPtr pushWrd(MalBlkPtr mb, InstrPtr q, wrd val);
InstrPtr pushZero(MalBlkPtr mb, InstrPtr q, int tpe);
str putName(str nme, size_t len);
str putRef;
str queryRef;
str rank_grpRef;
int rcachePolicy;
int readConsole(Client cntxt);
MalStkPtr reallocGlobalStack(MalStkPtr s, int cnt);
MalStkPtr reallocStack(MalStkPtr s, int cnt);
str reconnectRef;
double recycleAlpha;
MalBlkPtr recycleBlk;
int recycleCacheLimit;
int recycleMaxInterest;
lng recycleMemory;
QryPatPtr recycleQPat;
str recycleRef;
lng recycleSearchTime;
lng recycleTime;
lng recyclerUsedMemory;
str reenterMAL(Client cntxt, MalBlkPtr mb, int startpc, int stoppc, MalStkPtr stk, MalStkPtr env, InstrPtr pcicaller);
str refineRef;
str refine_reverseRef;
str registerRef;
int releaseAllBox(Box box);
void releaseBAT(MalBlkPtr mb, MalStkPtr stk, int bid);
int releaseBox(Box box, str name);
str remapRef;
str remoteRef;
void removeDataflow(InstrPtr *old, int limit);
void removeInstruction(MalBlkPtr mb, InstrPtr p);
void removeInstructionBlock(MalBlkPtr mb, int pc, int cnt);
DCYcatalog *removePartRegist(str sch, str tab, str col, int acc, int part);
int removeProp;
void removeVariable(MalBlkPtr mb, int varid);
void renameVariable(MalBlkPtr mb, int i, str name);
str replaceRef;
str replicatorRef;
void resetMalBlk(MalBlkPtr mb, int stop);
void resetScenario(Client c);
void resetVarName(MalBlkPtr mb, int i);
int resolveType(int dsttype, int srctype);
str resultSetRef;
int reusePolicy;
str reuseRef;
malType reverseBatType(malType v);
str reverseRef;
int rowsProp;
str rpcRef;
str rsColumnRef;
int rule_fromstr(str buf, int *len, rule **d);
int rule_tostr(str *buf, int *len, rule *r);
str runFactory(Client cntxt, MalBlkPtr mb, MalBlkPtr mbcaller, MalStkPtr stk, InstrPtr pci);
str runMAL(Client c, MalBlkPtr mb, int startpc, MalBlkPtr mbcaller, MalStkPtr env, InstrPtr pcicaller);
str runMALDebugger(Client cntxt, Symbol s);
str runMALdataflow(Client cntxt, MalBlkPtr mb, int startpc, int stoppc, MalStkPtr stk, MalStkPtr env, InstrPtr pcicaller);
str runMALdataflow(Client cntxt, MalBlkPtr mb, int startpc, int stoppc, MalStkPtr stk, MalStkPtr env, InstrPtr pcicaller);
str runMALprocess(Client cntxt, MalBlkPtr mb, MalStkPtr stk, int start, int stop);
str runScenario(Client c);
int runonceProp;
str safeguardStack(Client cntxt, MalBlkPtr mb, MalStkPtr stk, InstrPtr pci);
int safetyBarrier(InstrPtr p, InstrPtr q);
int saveBox(Box box, int flag);
str schedulerRef;
str selectNotNilRef;
str selectRef;
str semaRef;
str semijoinRef;
str setAccessRef;
void setArgType(MalBlkPtr mb, InstrPtr p, int i, int tpe);
InstrPtr setArgument(MalBlkPtr mb, InstrPtr p, int idx, int varid);
str setEndPoint(Module cntxt, str mod, str fcn);
void setFilter(Module cntxt, str mod, str fcn);
void setFilterOnBlock(MalBlkPtr mb, str mod, str fcn);
void setFilterVariable(MalBlkPtr mb, int i);
Module setInheritance(Module head,Module first, Module second);
void setInheritanceMode(Module head,int flag);
Lifespan setLifespan(MalBlkPtr mb);
str setLogFile(stream *fd, Module cntxt, str fname);
str setLogStream(Module cntxt, str host, int port);
str setLogStreamStream(Module cntxt, stream *s);
void setModuleJump(str nme, Module cur);
void setPolymorphic(InstrPtr p, int tpe, int force);
void setReturnArgument(InstrPtr p, int varid);
str setScenario(Client c, str nme);
str setStartPoint(Module cntxt, str mod, str fcn);
void setVarType(MalBlkPtr mb, int i, int tpe);
str setWriteModeRef;
void showAllScenarios(stream *f);
void showAtoms(stream *fd);
void showCurrentScenario(void);
void showErrors(Client cntxt);
void showException(enum malexception, const char *, _In_z_ _Printf_format_string_ const char *, ...)__attribute__((__format__(__printf__, 3, 4)));
void showFlowGraph(MalBlkPtr mb, MalStkPtr stk, str fname);
void showHelp(Module m, str txt,stream *fs);
void showMalBlkHistory(MalBlkPtr mb);
void showModuleStatistics(stream *f,Module s);
void showModules(stream *f, Module v);
void showOptimizerHistory(void);
void showOptimizerStep(str fnme,int i, int flg);
void showScenario(stream *f, Scenario s);
void showScenarioByName(stream *f, str s);
void showScriptException(MalBlkPtr, int, enum malexception, _In_z_ _Printf_format_string_ const char *, ...)__attribute__((__format__(__printf__, 4, 5)));
str shtFromintImpl(sht *res, int *val);
str shtFromlngImpl(sht *res, lng *val);
str shutdownFactory(Client cntxt, MalBlkPtr mb);
str shutdownFactoryByName(Client cntxt, Module m,str nme);
int sidewaysSelectProp;
str singleRef;
int singletonProp;
void slash_2_dir_sep(str fname);
str sliceRef;
str sortHRef;
str sortHTRef;
str sortRef;
str sortReverseTailRef;
str sortTHRef;
str sortTailRef;
str soundex_impl(str *res, str *Name);
str sqlRef;
int sqlblob_fromstr(char *instr, int *l, blob **val);
int sqlblob_tostr(str *tostr, int *l, blob *p);
int sqlfunctionProp;
str sqlplusRef;
str srvpoolRef;
int stableProp;
str startProfiling(void);
str startRef;
str stopProfiling(void);
str stopRef;
void strAfterCall(ValPtr v, ValPtr bak);
void strBeforeCall(ValPtr v, ValPtr bak);
int strBytes(int *res, str s);
int strChrAt(chr *res, str val, int *at);
int strChrSearch(int *res, str s, chr *c);
int strConcat(str *res, str s, ptr val, int t);
str strEpilogue(void);
int strFromWChr(str *res, int *c);
int strIconv(str *res, str org, str f, str t);
int strLength(int *res, str s);
int strLower(str *res, str s);
int strLtrim(str *res, str s);
int strPrefix(bit *res, str s, str prefix);
bat *strPrelude(void);
str strRef;
int strReverseChrSearch(int *res, str s, chr *c);
int strReverseStrSearch(int *res, str s, str s2);
int strRtrim(str *res, str s);
int strSQLLength(int *res, str s);
int strStrSearch(int *res, str s, str s2);
int strStrip(str *res, str s);
int strSubString(str *res, str s, int *offset, int *length);
int strSubstitute(str *res, str s, str src, str dst, bit *g);
int strSuffix(bit *res, str s, str suffix);
int strTail(str *res, str s, int *offset);
int strUpper(str *res, str s);
int strWChrAt(int *res, str val, int *at);
str streamsRef;
int stringLength(Client cntxt);
str stringdiff_impl(int *res, str *s1, str *s2);
str sumRef;
str sunionRef;
int tableProp;
int takeBox(Box box, str name, ValPtr val, int tpe);
str takeRef;
str thetajoinRef;
str thetaselectRef;
str thetauselectRef;
int timestamp_fromstr(str buf, int *len, timestamp **ret);
timestamp *timestamp_nil;
int timestamp_tostr(str *buf, int *len, timestamp *val);
int timestamp_tostr(str *buf, int *len, timestamp *val);
int timestamp_tz_tostr(str *buf, int *len, timestamp *val, tzone *timezone);
int tlbProp;
str toString(Box box, lng i);
str topn_maxRef;
str topn_minRef;
int toriginProp;
void trimMalBlk(MalBlkPtr mb);
void trimMalVariables(MalBlkPtr mb);
void trimMalVariables_(MalBlkPtr mb, bit *used, MalStkPtr glb);
int tubProp;
str tuniqueRef;
void typeChecker(Module scope, MalBlkPtr mb, InstrPtr p, int silent);
int tzone_fromstr(str buf, int *len, tzone **d);
int tzone_fromstr(str buf, int *len, tzone **d);
tzone tzone_local;
int tzone_tostr(str *buf, int *len, tzone *z);
str unescape_str(str *retval, str s);
str unionRef;
void unloadLibraries(void);
str unlockRef;
str unpackRef;
str unpinRef;
int unsafeProp;
str updateRef;
void updateScenario(str scen, str nme, MALfcn fcn);
int updatesProp;
str uselectRef;
str userRef;
str utopn_maxRef;
str utopn_minRef;
VarPtr varGetProp(MalBlkPtr mb, int var, int prop);
str varGetPropStr(MalBlkPtr mb, int var);
void varSetProp(MalBlkPtr mb, int var, int prop, int op, ValPtr cst);
str vectorRef;
char *xmlChr(str s);
str yieldFactory(MalBlkPtr mb, InstrPtr p, int pc);
int yieldResult(MalBlkPtr mb, InstrPtr p, int pc);
str zero_or_oneRef;

# stream
stream *append_wastream(const char *filename);
stream *append_wstream(const char *filename);
stream *attach_teestream(stream *orig, stream *log);
stream *block_stream(stream *s);
ssize_t bs_read_next(stream *s, void *buf, size_t nbytes, int *last);
bstream *bstream_create(stream *rs, size_t chunk_size);
void bstream_destroy(bstream *s);
ssize_t bstream_next(bstream *s);
ssize_t bstream_read(bstream *s, size_t size);
buffer *buffer_create(size_t size);
void buffer_destroy(buffer *b);
char *buffer_get_buf(buffer *b);
void buffer_init(buffer *b, char *buf, size_t size);
stream *buffer_rastream(buffer *b, const char *name);
stream *buffer_wastream(buffer *b, const char *name);
void close_stream(stream *s);
void detach_teestream(stream *ts);
stream *dupFileStream(stream *s);
stream *file_rastream(FILE *fp, const char *name);
stream *file_rstream(FILE *fp, const char *name);
stream *file_wastream(FILE *fp, const char *name);
stream *file_wstream(FILE *fp, const char *name);
FILE *getFile(stream *s);
stream *iconv_rstream(stream *ss, const char *charset, const char *name);
stream *iconv_wstream(stream *ss, const char *charset, const char *name);
int isa_block_stream(stream *s);
int mnstr_byteorder(stream *s);
void mnstr_clearerr(stream *s);
void mnstr_close(stream *s);
void mnstr_destroy(stream *s);
int mnstr_errnr(stream *s);
char *mnstr_error(stream *s);
int mnstr_fgetpos(stream *s, lng *p);
int mnstr_flush(stream *s);
int mnstr_fsetpos(stream *s, lng p);
int mnstr_fsync(stream *s);
buffer *mnstr_get_buffer(stream *s);
int mnstr_init(void);
char *mnstr_name(stream *s);
int mnstr_printf(stream *s, _In_z_ _Printf_format_string_ const char *format, ...)__attribute__((__format__(__printf__, 2, 3)));
ssize_t mnstr_read(stream *s, void *buf, size_t elmsize, size_t cnt);
int mnstr_readBte(stream *s, signed char *val);
int mnstr_readBteArray(stream *s, signed char *val, size_t cnt);
int mnstr_readInt(stream *s, int *val);
int mnstr_readIntArray(stream *s, int *val, size_t cnt);
int mnstr_readLng(stream *s, lng *val);
int mnstr_readLngArray(stream *s, lng *val, size_t cnt);
int mnstr_readSht(stream *s, short *val);
int mnstr_readShtArray(stream *s, short *val, size_t cnt);
ssize_t mnstr_read_block(stream *s, void *buf, size_t elmsize, size_t cnt);
ssize_t mnstr_readline(stream *s, void *buf, size_t maxcnt);
stream *mnstr_rstream(stream *s);
void mnstr_set_byteorder(stream *s, char bigendian);
int mnstr_type(stream *s);
ssize_t mnstr_write(stream *s, const void *buf, size_t elmsize, size_t cnt);
int mnstr_writeBte(stream *s, signed char val);
int mnstr_writeBteArray(stream *s, const signed char *val, size_t cnt);
int mnstr_writeInt(stream *s, int val);
int mnstr_writeIntArray(stream *s, const int *val, size_t cnt);
int mnstr_writeLng(stream *s, lng val);
int mnstr_writeLngArray(stream *s, const lng *val, size_t cnt);
int mnstr_writeSht(stream *s, short val);
int mnstr_writeShtArray(stream *s, const short *val, size_t cnt);
stream *mnstr_wstream(stream *s);
stream *open_bzrastream(const char *filename);
stream *open_bzrstream(const char *filename);
stream *open_bzwastream(const char *filename);
stream *open_bzwstream(const char *filename);
stream *open_gzrastream(const char *filename);
stream *open_gzrstream(const char *filename);
stream *open_gzwastream(const char *filename);
stream *open_gzwstream(const char *filename);
stream *open_rastream(const char *filename);
stream *open_rstream(const char *filename);
stream *open_urlstream(const char *url);
stream *open_wastream(const char *filename);
stream *open_wstream(const char *filename);
stream *socket_rastream(SOCKET socket, const char *name);
stream *socket_rstream(SOCKET socket, const char *name);
stream *socket_wastream(SOCKET socket, const char *name);
stream *socket_wstream(SOCKET socket, const char *name);
stream *udp_rastream(char *hostname, int port, const char *name);
stream *udp_wastream(char *hostname, int port, const char *name);
stream *wbstream(stream *s, size_t buflen);


# 15:11:17 >  
# 15:11:17 >  "Done."
# 15:11:17 >  

