stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.debug
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geometrytype
SYSTEM FUNCTION  sys.get_type
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.has_m
SYSTEM FUNCTION  sys.has_z
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.st_area
SYSTEM FUNCTION  sys.st_asbinary
SYSTEM FUNCTION  sys.st_asewkt
SYSTEM FUNCTION  sys.st_astext
SYSTEM FUNCTION  sys.st_bdmpolyfromtext
SYSTEM FUNCTION  sys.st_bdpolyfromtext
SYSTEM FUNCTION  sys.st_boundary
SYSTEM FUNCTION  sys.st_buffer
SYSTEM FUNCTION  sys.st_centroid
SYSTEM FUNCTION  sys.st_collect
SYSTEM FUNCTION  sys.st_contains
SYSTEM FUNCTION  sys.st_convexhull
SYSTEM FUNCTION  sys.st_coorddim
SYSTEM FUNCTION  sys.st_coveredby
SYSTEM FUNCTION  sys.st_covers
SYSTEM FUNCTION  sys.st_crosses
SYSTEM FUNCTION  sys.st_delaunaytriangles
SYSTEM FUNCTION  sys.st_difference
SYSTEM FUNCTION  sys.st_dimension
SYSTEM FUNCTION  sys.st_disjoint
SYSTEM FUNCTION  sys.st_distance
SYSTEM FUNCTION  sys.st_dump
SYSTEM FUNCTION  sys.st_dumppoints
SYSTEM FUNCTION  sys.st_dwithin
SYSTEM FUNCTION  sys.st_endpoint
SYSTEM FUNCTION  sys.st_envelope
SYSTEM FUNCTION  sys.st_equals
SYSTEM FUNCTION  sys.st_exteriorring
SYSTEM FUNCTION  sys.st_force2d
SYSTEM FUNCTION  sys.st_force3d
SYSTEM FUNCTION  sys.st_geomcollfromtext
SYSTEM FUNCTION  sys.st_geometryfromtext
SYSTEM FUNCTION  sys.st_geometryn
SYSTEM FUNCTION  sys.st_geometrytype
SYSTEM FUNCTION  sys.st_geomfromtext
SYSTEM FUNCTION  sys.st_interiorringn
SYSTEM FUNCTION  sys.st_interiorrings
SYSTEM FUNCTION  sys.st_intersection
SYSTEM FUNCTION  sys.st_intersects
SYSTEM FUNCTION  sys.st_isclosed
SYSTEM FUNCTION  sys.st_isempty
SYSTEM FUNCTION  sys.st_isring
SYSTEM FUNCTION  sys.st_issimple
SYSTEM FUNCTION  sys.st_isvalid
SYSTEM FUNCTION  sys.st_isvalidreason
SYSTEM FUNCTION  sys.st_length
SYSTEM FUNCTION  sys.st_length2d
SYSTEM FUNCTION  sys.st_linefromtext
SYSTEM FUNCTION  sys.st_makebox2d
SYSTEM FUNCTION  sys.st_makeenvelope
SYSTEM FUNCTION  sys.st_makeline
SYSTEM FUNCTION  sys.st_makepoint
SYSTEM FUNCTION  sys.st_makepointm
SYSTEM FUNCTION  sys.st_makepolygon
SYSTEM FUNCTION  sys.st_mlinefromtext
SYSTEM FUNCTION  sys.st_mpointfromtext
SYSTEM FUNCTION  sys.st_mpolyfromtext
SYSTEM FUNCTION  sys.st_npoints
SYSTEM FUNCTION  sys.st_nrings
SYSTEM FUNCTION  sys.st_numgeometries
SYSTEM FUNCTION  sys.st_numinteriorring
SYSTEM FUNCTION  sys.st_numinteriorrings
SYSTEM FUNCTION  sys.st_numpatches
SYSTEM FUNCTION  sys.st_numpoints
SYSTEM FUNCTION  sys.st_overlaps
SYSTEM FUNCTION  sys.st_patchn
SYSTEM FUNCTION  sys.st_point
SYSTEM FUNCTION  sys.st_pointfromtext
SYSTEM FUNCTION  sys.st_pointn
SYSTEM FUNCTION  sys.st_pointonsurface
SYSTEM FUNCTION  sys.st_polygon
SYSTEM FUNCTION  sys.st_polygonfromtext
SYSTEM FUNCTION  sys.st_relate
SYSTEM FUNCTION  sys.st_segmentize
SYSTEM FUNCTION  sys.st_setexteriorring
SYSTEM FUNCTION  sys.st_setsrid
SYSTEM FUNCTION  sys.st_srid
SYSTEM FUNCTION  sys.st_startpoint
SYSTEM FUNCTION  sys.st_symdifference
SYSTEM FUNCTION  sys.st_touches
SYSTEM FUNCTION  sys.st_transform
SYSTEM FUNCTION  sys.st_translate
SYSTEM FUNCTION  sys.st_union
SYSTEM FUNCTION  sys.st_within
SYSTEM FUNCTION  sys.st_wkbtosql
SYSTEM FUNCTION  sys.st_wkttosql
SYSTEM FUNCTION  sys.st_x
SYSTEM FUNCTION  sys.st_xmax
SYSTEM FUNCTION  sys.st_xmin
SYSTEM FUNCTION  sys.st_y
SYSTEM FUNCTION  sys.st_ymax
SYSTEM FUNCTION  sys.st_ymin
SYSTEM FUNCTION  sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
create function degrees(r double) 
returns double
	return r*180/pi();
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
 
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
create function mbr(geom geometry) returns mbr external name geom."mbr";
create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
create procedure sys.querylog(filename string) 
	external name sql.logfile;
create function sys.querylog_calls()
returns table(
 id oid, 
 "start" timestamp, 
 "stop" timestamp, 
 arguments string, 
 tuples wrd, 
 run bigint, 
 ship bigint, 
 cpu int, 
 io int 
)
external name sql.querylog_calls;
create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
 "plan" string, 
 mal int, 
 optimize bigint 
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
create procedure sys.querylog_empty()
external name sql.querylog_empty;
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys."storage"( sname string)
returns table (
 "schema" string,
 "table" string,
 "column" string,
 "type" string,
 "mode" string,
 location string,
 "count" bigint,
 typewidth int,
 columnsize bigint,
 heapsize bigint,
 hashes bigint,
 phash boolean,
 imprints bigint,
 sorted boolean
)
external name sql."storage";
create function sys."storage"( sname string, tname string)
returns table (
 "schema" string,
 "table" string,
 "column" string,
 "type" string,
 "mode" string,
 location string,
 "count" bigint,
 typewidth int,
 columnsize bigint,
 heapsize bigint,
 hashes bigint,
 phash boolean,
 imprints bigint,
 sorted boolean
)
external name sql."storage";
create function sys."storage"( sname string, tname string, cname string)
returns table (
 "schema" string,
 "table" string,
 "column" string,
 "type" string,
 "mode" string,
 location string,
 "count" bigint,
 typewidth int,
 columnsize bigint,
 heapsize bigint,
 hashes bigint,
 phash boolean,
 imprints bigint,
 sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
 set "distinct" = "count" 
	where "type" = 'varchar' or "type"='clob';
end;
create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function sys.tracelog() 
	returns table (
 event integer, 
 clk varchar(20), 
 pc varchar(50), 
 thread int, 
 ticks bigint, 
 rrsmb bigint, 
 vmmb bigint, 
 reads bigint, 
 writes bigint, 
 minflt bigint, 
 majflt bigint, 
 nvcsw bigint, 
 stmt string 
	)
	external name sql.dump_trace;
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 373 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5682	"id"	"int"	32	0	5681	NULL	true	0	NULL
5683	"name"	"varchar"	1024	0	5681	NULL	true	1	NULL
5684	"schema_id"	"int"	32	0	5681	NULL	true	2	NULL
5685	"query"	"varchar"	2048	0	5681	NULL	true	3	NULL
5686	"type"	"smallint"	16	0	5681	NULL	true	4	NULL
5687	"system"	"boolean"	1	0	5681	NULL	true	5	NULL
5688	"commit_action"	"smallint"	16	0	5681	NULL	true	6	NULL
5689	"access"	"smallint"	16	0	5681	NULL	true	7	NULL
5690	"temporary"	"smallint"	16	0	5681	NULL	true	8	NULL
5692	"id"	"int"	32	0	5691	NULL	true	0	NULL
5693	"name"	"varchar"	1024	0	5691	NULL	true	1	NULL
5694	"type"	"varchar"	1024	0	5691	NULL	true	2	NULL
5695	"type_digits"	"int"	32	0	5691	NULL	true	3	NULL
5696	"type_scale"	"int"	32	0	5691	NULL	true	4	NULL
5697	"table_id"	"int"	32	0	5691	NULL	true	5	NULL
5698	"default"	"varchar"	2048	0	5691	NULL	true	6	NULL
5699	"null"	"boolean"	1	0	5691	NULL	true	7	NULL
5700	"number"	"int"	32	0	5691	NULL	true	8	NULL
5701	"storage"	"varchar"	2048	0	5691	NULL	true	9	NULL
5708	"name"	"varchar"	1024	0	5707	NULL	true	0	NULL
5709	"fullname"	"varchar"	2048	0	5707	NULL	true	1	NULL
5710	"default_schema"	"int"	9	0	5707	NULL	true	2	NULL
5714	"name"	"varchar"	1024	0	5713	NULL	true	0	NULL
5715	"fullname"	"varchar"	2024	0	5713	NULL	true	1	NULL
5716	"default_schema"	"int"	9	0	5713	NULL	true	2	NULL
5718	"login_id"	"int"	32	0	5717	NULL	true	0	NULL
5719	"role_id"	"int"	32	0	5717	NULL	true	1	NULL
5721	"id"	"int"	32	0	5720	NULL	true	0	NULL
5722	"name"	"varchar"	1024	0	5720	NULL	true	1	NULL
5723	"grantor"	"int"	32	0	5720	NULL	true	2	NULL
5725	"obj_id"	"int"	32	0	5724	NULL	true	0	NULL
5726	"auth_id"	"int"	32	0	5724	NULL	true	1	NULL
5727	"privileges"	"int"	32	0	5724	NULL	true	2	NULL
5728	"grantor"	"int"	32	0	5724	NULL	true	3	NULL
5729	"grantable"	"int"	32	0	5724	NULL	true	4	NULL
5938	"id"	"oid"	63	0	5946	NULL	true	0	NULL
5939	"owner"	"clob"	0	0	5946	NULL	true	1	NULL
5940	"defined"	"timestamp"	7	0	5946	NULL	true	2	NULL
5941	"query"	"clob"	0	0	5946	NULL	true	3	NULL
5942	"pipe"	"clob"	0	0	5946	NULL	true	4	NULL
5943	"plan"	"clob"	0	0	5946	NULL	true	5	NULL
5944	"mal"	"int"	32	0	5946	NULL	true	6	NULL
5945	"optimize"	"bigint"	64	0	5946	NULL	true	7	NULL
5948	"id"	"oid"	63	0	5957	NULL	true	0	NULL
5949	"start"	"timestamp"	7	0	5957	NULL	true	1	NULL
5950	"stop"	"timestamp"	7	0	5957	NULL	true	2	NULL
5951	"arguments"	"clob"	0	0	5957	NULL	true	3	NULL
5952	"tuples"	"wrd"	64	0	5957	NULL	true	4	NULL
5953	"run"	"bigint"	64	0	5957	NULL	true	5	NULL
5954	"ship"	"bigint"	64	0	5957	NULL	true	6	NULL
5955	"cpu"	"int"	32	0	5957	NULL	true	7	NULL
5956	"io"	"int"	32	0	5957	NULL	true	8	NULL
5959	"id"	"oid"	63	0	5975	NULL	true	0	NULL
5960	"owner"	"clob"	0	0	5975	NULL	true	1	NULL
5961	"defined"	"timestamp"	7	0	5975	NULL	true	2	NULL
5962	"query"	"clob"	0	0	5975	NULL	true	3	NULL
5963	"pipe"	"clob"	0	0	5975	NULL	true	4	NULL
5964	"plan"	"clob"	0	0	5975	NULL	true	5	NULL
5965	"mal"	"int"	32	0	5975	NULL	true	6	NULL
5966	"optimize"	"bigint"	64	0	5975	NULL	true	7	NULL
5967	"start"	"timestamp"	7	0	5975	NULL	true	8	NULL
5968	"stop"	"timestamp"	7	0	5975	NULL	true	9	NULL
5969	"arguments"	"clob"	0	0	5975	NULL	true	10	NULL
5970	"tuples"	"wrd"	64	0	5975	NULL	true	11	NULL
5971	"run"	"bigint"	64	0	5975	NULL	true	12	NULL
5972	"ship"	"bigint"	64	0	5975	NULL	true	13	NULL
5973	"cpu"	"int"	32	0	5975	NULL	true	14	NULL
5974	"io"	"int"	32	0	5975	NULL	true	15	NULL
6001	"event"	"int"	32	0	6014	NULL	true	0	NULL
6002	"clk"	"varchar"	20	0	6014	NULL	true	1	NULL
6003	"pc"	"varchar"	50	0	6014	NULL	true	2	NULL
6004	"thread"	"int"	32	0	6014	NULL	true	3	NULL
6005	"ticks"	"bigint"	64	0	6014	NULL	true	4	NULL
6006	"rrsmb"	"bigint"	64	0	6014	NULL	true	5	NULL
6007	"vmmb"	"bigint"	64	0	6014	NULL	true	6	NULL
6008	"reads"	"bigint"	64	0	6014	NULL	true	7	NULL
6009	"writes"	"bigint"	64	0	6014	NULL	true	8	NULL
6010	"minflt"	"bigint"	64	0	6014	NULL	true	9	NULL
6011	"majflt"	"bigint"	64	0	6014	NULL	true	10	NULL
6012	"nvcsw"	"bigint"	64	0	6014	NULL	true	11	NULL
6013	"stmt"	"clob"	0	0	6014	NULL	true	12	NULL
6141	"user"	"clob"	0	0	6147	NULL	true	0	NULL
6142	"login"	"timestamp"	7	0	6147	NULL	true	1	NULL
6143	"sessiontimeout"	"bigint"	64	0	6147	NULL	true	2	NULL
6144	"lastcommand"	"timestamp"	7	0	6147	NULL	true	3	NULL
6145	"querytimeout"	"bigint"	64	0	6147	NULL	true	4	NULL
6146	"active"	"boolean"	1	0	6147	NULL	true	5	NULL
6224	"name"	"clob"	0	0	6227	NULL	true	0	NULL
6225	"def"	"clob"	0	0	6227	NULL	true	1	NULL
6226	"status"	"clob"	0	0	6227	NULL	true	2	NULL
6233	"name"	"clob"	0	0	6235	NULL	true	0	NULL
6234	"value"	"clob"	0	0	6235	NULL	true	1	NULL
6275	"qtag"	"bigint"	64	0	6283	NULL	true	0	NULL
6276	"user"	"clob"	0	0	6283	NULL	true	1	NULL
6277	"started"	"timestamp"	7	0	6283	NULL	true	2	NULL
6278	"estimate"	"timestamp"	7	0	6283	NULL	true	3	NULL
6279	"progress"	"int"	32	0	6283	NULL	true	4	NULL
6280	"status"	"clob"	0	0	6283	NULL	true	5	NULL
6281	"tag"	"oid"	63	0	6283	NULL	true	6	NULL
6282	"query"	"clob"	0	0	6283	NULL	true	7	NULL
6309	"rowid"	"bigint"	64	0	6313	NULL	true	0	NULL
6310	"fldid"	"int"	32	0	6313	NULL	true	1	NULL
6311	"message"	"clob"	0	0	6313	NULL	true	2	NULL
6312	"input"	"clob"	0	0	6313	NULL	true	3	NULL
6624	"srid"	"int"	32	0	6631	NULL	false	0	NULL
6627	"auth_name"	"varchar"	256	0	6631	NULL	true	1	NULL
6628	"auth_srid"	"int"	32	0	6631	NULL	true	2	NULL
6629	"srtext"	"varchar"	2048	0	6631	NULL	true	3	NULL
6630	"proj4text"	"varchar"	2048	0	6631	NULL	true	4	NULL
6633	"f_table_catalog"	"clob"	0	0	6640	NULL	true	0	NULL
6634	"f_table_schema"	"varchar"	1024	0	6640	NULL	true	1	NULL
6635	"f_table_name"	"varchar"	1024	0	6640	NULL	true	2	NULL
6636	"f_geometry_column"	"varchar"	1024	0	6640	NULL	true	3	NULL
6637	"coord_dimension"	"bigint"	64	0	6640	NULL	true	4	NULL
6638	"srid"	"int"	32	0	6640	NULL	true	5	NULL
6639	"type"	"clob"	0	0	6640	NULL	true	6	NULL
7338	"keyword"	"varchar"	40	0	7341	NULL	false	0	NULL
7343	"table_type_id"	"smallint"	16	0	7349	NULL	false	0	NULL
7346	"table_type_name"	"varchar"	25	0	7349	NULL	false	1	NULL
7351	"dependency_type_id"	"smallint"	16	0	7357	NULL	false	0	NULL
7354	"dependency_type_name"	"varchar"	15	0	7357	NULL	false	1	NULL
7372	"file_id"	"int"	32	0	7374	NULL	true	0	NULL
7373	"location"	"char"	256	0	7374	NULL	true	1	NULL
7376	"dim_id"	"int"	32	0	7380	NULL	true	0	NULL
7377	"file_id"	"int"	32	0	7380	NULL	true	1	NULL
7378	"name"	"varchar"	64	0	7380	NULL	true	2	NULL
7379	"length"	"int"	32	0	7380	NULL	true	3	NULL
7382	"var_id"	"int"	32	0	7388	NULL	true	0	NULL
7383	"file_id"	"int"	32	0	7388	NULL	true	1	NULL
7384	"name"	"varchar"	64	0	7388	NULL	true	2	NULL
7385	"vartype"	"varchar"	64	0	7388	NULL	true	3	NULL
7386	"ndim"	"int"	32	0	7388	NULL	true	4	NULL
7387	"coord_dim_id"	"int"	32	0	7388	NULL	true	5	NULL
7390	"var_id"	"int"	32	0	7394	NULL	true	0	NULL
7391	"dim_id"	"int"	32	0	7394	NULL	true	1	NULL
7392	"file_id"	"int"	32	0	7394	NULL	true	2	NULL
7393	"dimpos"	"int"	32	0	7394	NULL	true	3	NULL
7396	"obj_name"	"varchar"	256	0	7402	NULL	true	0	NULL
7397	"att_name"	"varchar"	256	0	7402	NULL	true	1	NULL
7398	"att_type"	"varchar"	64	0	7402	NULL	true	2	NULL
7399	"value"	"clob"	0	0	7402	NULL	true	3	NULL
7400	"file_id"	"int"	32	0	7402	NULL	true	4	NULL
7401	"gr_name"	"varchar"	256	0	7402	NULL	true	5	NULL
7427	"schema"	"clob"	0	0	7441	NULL	true	0	NULL
7428	"table"	"clob"	0	0	7441	NULL	true	1	NULL
7429	"column"	"clob"	0	0	7441	NULL	true	2	NULL
7430	"type"	"clob"	0	0	7441	NULL	true	3	NULL
7431	"mode"	"clob"	0	0	7441	NULL	true	4	NULL
7432	"location"	"clob"	0	0	7441	NULL	true	5	NULL
7433	"count"	"bigint"	64	0	7441	NULL	true	6	NULL
7434	"typewidth"	"int"	32	0	7441	NULL	true	7	NULL
7435	"columnsize"	"bigint"	64	0	7441	NULL	true	8	NULL
7436	"heapsize"	"bigint"	64	0	7441	NULL	true	9	NULL
7437	"hashes"	"bigint"	64	0	7441	NULL	true	10	NULL
7438	"phash"	"boolean"	1	0	7441	NULL	true	11	NULL
7439	"imprints"	"bigint"	64	0	7441	NULL	true	12	NULL
7440	"sorted"	"boolean"	1	0	7441	NULL	true	13	NULL
7497	"schema"	"clob"	0	0	7507	NULL	true	0	NULL
7498	"table"	"clob"	0	0	7507	NULL	true	1	NULL
7499	"column"	"clob"	0	0	7507	NULL	true	2	NULL
7500	"type"	"clob"	0	0	7507	NULL	true	3	NULL
7501	"typewidth"	"int"	32	0	7507	NULL	true	4	NULL
7502	"count"	"bigint"	64	0	7507	NULL	true	5	NULL
7503	"distinct"	"bigint"	64	0	7507	NULL	true	6	NULL
7504	"atomwidth"	"int"	32	0	7507	NULL	true	7	NULL
7505	"reference"	"boolean"	1	0	7507	NULL	true	8	NULL
7506	"sorted"	"boolean"	1	0	7507	NULL	true	9	NULL
7545	"schema"	"clob"	0	0	7555	NULL	true	0	NULL
7546	"table"	"clob"	0	0	7555	NULL	true	1	NULL
7547	"column"	"clob"	0	0	7555	NULL	true	2	NULL
7548	"type"	"clob"	0	0	7555	NULL	true	3	NULL
7549	"count"	"bigint"	64	0	7555	NULL	true	4	NULL
7550	"columnsize"	"bigint"	64	0	7555	NULL	true	5	NULL
7551	"heapsize"	"bigint"	64	0	7555	NULL	true	6	NULL
7552	"hashes"	"bigint"	64	0	7555	NULL	true	7	NULL
7553	"imprints"	"bigint"	64	0	7555	NULL	true	8	NULL
7554	"sorted"	"boolean"	1	0	7555	NULL	true	9	NULL
7557	"schema"	"clob"	0	0	7565	NULL	true	0	NULL
7558	"table"	"clob"	0	0	7565	NULL	true	1	NULL
7559	"count"	"bigint"	64	0	7565	NULL	true	2	NULL
7560	"columnsize"	"bigint"	64	0	7565	NULL	true	3	NULL
7561	"heapsize"	"bigint"	64	0	7565	NULL	true	4	NULL
7562	"hashes"	"bigint"	64	0	7565	NULL	true	5	NULL
7563	"imprints"	"bigint"	64	0	7565	NULL	true	6	NULL
7564	"auxiliary"	"bigint"	64	0	7565	NULL	true	7	NULL
7567	"column_id"	"int"	32	0	7578	NULL	true	0	NULL
7568	"type"	"clob"	0	0	7578	NULL	true	1	NULL
7569	"width"	"int"	32	0	7578	NULL	true	2	NULL
7570	"stamp"	"timestamp"	7	0	7578	NULL	true	3	NULL
7571	"sample"	"bigint"	64	0	7578	NULL	true	4	NULL
7572	"count"	"bigint"	64	0	7578	NULL	true	5	NULL
7573	"unique"	"bigint"	64	0	7578	NULL	true	6	NULL
7574	"nils"	"bigint"	64	0	7578	NULL	true	7	NULL
7575	"minval"	"clob"	0	0	7578	NULL	true	8	NULL
7576	"maxval"	"clob"	0	0	7578	NULL	true	9	NULL
7577	"sorted"	"boolean"	1	0	7578	NULL	true	10	NULL
7668	"file_id"	"bigint"	64	0	7676	NULL	false	0	NULL
7669	"file_location"	"clob"	0	0	7676	NULL	false	1	NULL
7670	"dbschema"	"smallint"	16	0	7676	NULL	false	2	NULL
7671	"format_version"	"varchar"	7	0	7676	NULL	true	3	NULL
7672	"sorting_order"	"varchar"	10	0	7676	NULL	true	4	NULL
7673	"comments"	"clob"	0	0	7676	NULL	true	5	NULL
7678	"sn"	"clob"	0	0	7689	NULL	false	0	NULL
7679	"file_id"	"bigint"	64	0	7689	NULL	false	1	NULL
7680	"ln"	"int"	32	0	7689	NULL	true	2	NULL
7681	"as"	"int"	32	0	7689	NULL	true	3	NULL
7682	"m5"	"clob"	0	0	7689	NULL	true	4	NULL
7683	"sp"	"clob"	0	0	7689	NULL	true	5	NULL
7684	"ur"	"clob"	0	0	7689	NULL	true	6	NULL
7691	"id"	"clob"	0	0	7708	NULL	false	0	NULL
7692	"file_id"	"bigint"	64	0	7708	NULL	false	1	NULL
7693	"cn"	"clob"	0	0	7708	NULL	true	2	NULL
7694	"ds"	"clob"	0	0	7708	NULL	true	3	NULL
7695	"dt"	"timestamp"	7	0	7708	NULL	true	4	NULL
7696	"fo"	"clob"	0	0	7708	NULL	true	5	NULL
7697	"ks"	"clob"	0	0	7708	NULL	true	6	NULL
7698	"lb"	"clob"	0	0	7708	NULL	true	7	NULL
7699	"pg"	"clob"	0	0	7708	NULL	true	8	NULL
7700	"pi"	"int"	32	0	7708	NULL	true	9	NULL
7701	"pl"	"clob"	0	0	7708	NULL	true	10	NULL
7702	"pu"	"clob"	0	0	7708	NULL	true	11	NULL
7703	"sm"	"clob"	0	0	7708	NULL	true	12	NULL
7710	"id"	"clob"	0	0	7720	NULL	false	0	NULL
7711	"file_id"	"bigint"	64	0	7720	NULL	false	1	NULL
7712	"pn"	"clob"	0	0	7720	NULL	true	2	NULL
7713	"cl"	"clob"	0	0	7720	NULL	true	3	NULL
7714	"pp"	"clob"	0	0	7720	NULL	true	4	NULL
7715	"vn"	"clob"	0	0	7720	NULL	true	5	NULL
7722	"qname"	"clob"	0	0	7733	NULL	false	0	NULL
7723	"flag"	"smallint"	16	0	7733	NULL	false	1	NULL
7724	"rname"	"clob"	0	0	7733	NULL	false	2	NULL
7725	"pos"	"int"	32	0	7733	NULL	false	3	NULL
7726	"mapq"	"smallint"	16	0	7733	NULL	false	4	NULL
7727	"cigar"	"clob"	0	0	7733	NULL	false	5	NULL
7728	"rnext"	"clob"	0	0	7733	NULL	false	6	NULL
7729	"pnext"	"int"	32	0	7733	NULL	false	7	NULL
7730	"tlen"	"int"	32	0	7733	NULL	false	8	NULL
7731	"seq"	"clob"	0	0	7733	NULL	false	9	NULL
7732	"qual"	"clob"	0	0	7733	NULL	false	10	NULL
7803	"function_id"	"int"	32	0	7804	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 56 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5681	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5691	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5707	"db_user_info"	2000	NULL	0	true	0	0
5713	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5717	"user_role"	2000	NULL	0	true	0	0
5720	"auths"	2000	NULL	0	true	0	0
5724	"privileges"	2000	NULL	0	true	0	0
5946	"querylog_catalog"	2000	"create view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5957	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5975	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
6014	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6147	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6227	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6235	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6283	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6313	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6631	"spatial_ref_sys"	2000	NULL	0	true	0	0
6640	"geometry_columns"	2000	"create view geometry_columns as\n select e.value as f_table_catalog,\n s.name as f_table_schema,\n y.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type\n from schemas s, environment e, (\n select t.schema_id,\n t.name as f_table_name,\n x.name as f_geometry_column,\n has_z(info)+has_m(info)+2 as coord_dimension,\n srid, get_type(info, 0) as type\n from tables t, (\n select name, table_id, type_digits as info, type_scale as srid\n from columns\n where type in ( select distinct sqlname from types where systemname='wkb')\n ) as x\n where t.id=x.table_id\n ) y\n where y.schema_id=s.id and e.name='gdk_dbname';"	1	true	0	0
7341	"keywords"	2000	NULL	0	true	0	0
7349	"table_types"	2000	NULL	0	true	0	0
7357	"dependency_types"	2000	NULL	0	true	0	0
7374	"netcdf_files"	2000	NULL	0	true	0	0
7380	"netcdf_dims"	2000	NULL	0	true	0	0
7388	"netcdf_vars"	2000	NULL	0	true	0	0
7394	"netcdf_vardim"	2000	NULL	0	true	0	0
7402	"netcdf_attrs"	2000	NULL	0	true	0	0
7441	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7507	"storagemodelinput"	2000	NULL	0	true	0	0
7555	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7565	"tablestoragemodel"	2000	"create view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n sum(columnsize) as columnsize,\n sum(heapsize) as heapsize,\n sum(hashes) as hashes,\n sum(imprints) as imprints,\n sum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7578	"statistics"	2000	NULL	0	true	0	0
7676	"files"	7620	NULL	0	true	0	0
7689	"sq"	7620	NULL	0	true	0	0
7708	"rg"	7620	NULL	0	true	0	0
7720	"pg"	7620	NULL	0	true	0	0
7733	"export"	7620	NULL	0	true	0	0
7804	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4547 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"boolean"	1	0	0	0
2156	30	"arg_1"	"geometry"	0	0	1	1
2157	30	"arg_2"	"geometry"	0	0	1	2
2158	31	"res_0"	"boolean"	1	0	0	0
2159	31	"arg_1"	"mbr"	0	0	1	1
2160	31	"arg_2"	"mbr"	0	0	1	2
2161	32	"res_0"	"boolean"	1	0	0	0
2162	32	"arg_1"	"geometry"	0	0	1	1
2163	32	"arg_2"	"geometry"	0	0	1	2
2164	33	"res_0"	"boolean"	1	0	0	0
2165	33	"arg_1"	"mbr"	0	0	1	1
2166	33	"arg_2"	"mbr"	0	0	1	2
2167	34	"res_0"	"boolean"	1	0	0	0
2168	34	"arg_1"	"geometry"	0	0	1	1
2169	34	"arg_2"	"geometry"	0	0	1	2
2170	35	"res_0"	"boolean"	1	0	0	0
2171	35	"arg_1"	"mbr"	0	0	1	1
2172	35	"arg_2"	"mbr"	0	0	1	2
2173	36	"res_0"	"boolean"	1	0	0	0
2174	36	"arg_1"	"geometry"	0	0	1	1
2175	36	"arg_2"	"geometry"	0	0	1	2
2176	37	"res_0"	"boolean"	1	0	0	0
2177	37	"arg_1"	"mbr"	0	0	1	1
2178	37	"arg_2"	"mbr"	0	0	1	2
2179	38	"res_0"	"boolean"	1	0	0	0
2180	38	"arg_1"	"geometry"	0	0	1	1
2181	38	"arg_2"	"geometry"	0	0	1	2
2182	39	"res_0"	"boolean"	1	0	0	0
2183	39	"arg_1"	"mbr"	0	0	1	1
2184	39	"arg_2"	"mbr"	0	0	1	2
2185	40	"res_0"	"boolean"	1	0	0	0
2186	40	"arg_1"	"geometry"	0	0	1	1
2187	40	"arg_2"	"geometry"	0	0	1	2
2188	41	"res_0"	"boolean"	1	0	0	0
2189	41	"arg_1"	"mbr"	0	0	1	1
2190	41	"arg_2"	"mbr"	0	0	1	2
2191	42	"res_0"	"boolean"	1	0	0	0
2192	42	"arg_1"	"geometry"	0	0	1	1
2193	42	"arg_2"	"geometry"	0	0	1	2
2194	43	"res_0"	"boolean"	1	0	0	0
2195	43	"arg_1"	"mbr"	0	0	1	1
2196	43	"arg_2"	"mbr"	0	0	1	2
2197	44	"res_0"	"boolean"	1	0	0	0
2198	44	"arg_1"	"geometry"	0	0	1	1
2199	44	"arg_2"	"geometry"	0	0	1	2
2200	45	"res_0"	"boolean"	1	0	0	0
2201	45	"arg_1"	"mbr"	0	0	1	1
2202	45	"arg_2"	"mbr"	0	0	1	2
2203	46	"res_0"	"boolean"	1	0	0	0
2204	46	"arg_1"	"geometry"	0	0	1	1
2205	46	"arg_2"	"geometry"	0	0	1	2
2206	47	"res_0"	"boolean"	1	0	0	0
2207	47	"arg_1"	"mbr"	0	0	1	1
2208	47	"arg_2"	"mbr"	0	0	1	2
2209	48	"res_0"	"boolean"	1	0	0	0
2210	48	"arg_1"	"geometry"	0	0	1	1
2211	48	"arg_2"	"geometry"	0	0	1	2
2212	49	"res_0"	"boolean"	1	0	0	0
2213	49	"arg_1"	"mbr"	0	0	1	1
2214	49	"arg_2"	"mbr"	0	0	1	2
2215	50	"res_0"	"boolean"	1	0	0	0
2216	50	"arg_1"	"geometry"	0	0	1	1
2217	50	"arg_2"	"geometry"	0	0	1	2
2218	51	"res_0"	"boolean"	1	0	0	0
2219	51	"arg_1"	"mbr"	0	0	1	1
2220	51	"arg_2"	"mbr"	0	0	1	2
2221	52	"res_0"	"boolean"	1	0	0	0
2222	52	"arg_1"	"geometry"	0	0	1	1
2223	52	"arg_2"	"geometry"	0	0	1	2
2224	53	"res_0"	"boolean"	1	0	0	0
2225	53	"arg_1"	"mbr"	0	0	1	1
2226	53	"arg_2"	"mbr"	0	0	1	2
2227	54	"res_0"	"double"	53	0	0	0
2228	54	"arg_1"	"geometry"	0	0	1	1
2229	54	"arg_2"	"geometry"	0	0	1	2
2230	55	"res_0"	"double"	53	0	0	0
2231	55	"arg_1"	"mbr"	0	0	1	1
2232	55	"arg_2"	"mbr"	0	0	1	2
2233	56	"res_0"	"boolean"	1	0	0	0
2234	56	"arg_1"	"geometry"	0	0	1	1
2235	56	"arg_2"	"geometry"	0	0	1	2
2236	57	"res_0"	"boolean"	1	0	0	0
2237	57	"arg_1"	"mbr"	0	0	1	1
2238	57	"arg_2"	"mbr"	0	0	1	2
2239	58	"res_0"	"boolean"	1	0	0	0
2240	58	"arg_1"	"geometry"	0	0	1	1
2241	58	"arg_2"	"geometry"	0	0	1	2
2242	59	"res_0"	"boolean"	1	0	0	0
2243	59	"arg_1"	"mbr"	0	0	1	1
2244	59	"arg_2"	"mbr"	0	0	1	2
2245	61	"res_0"	"oid"	63	0	0	0
2246	61	"arg_1"	"wrd"	64	0	1	1
2247	62	"res_0"	"oid"	63	0	0	0
2248	62	"arg_1"	"oid"	63	0	1	1
2249	63	"res_0"	"wrd"	64	0	0	0
2250	63	"arg_1"	"any"	0	0	1	1
2251	64	"res_0"	"wrd"	64	0	0	0
2252	64	"arg_1"	"wrd"	64	0	1	1
2253	64	"arg_2"	"int"	32	0	1	2
2254	64	"arg_3"	"any"	0	0	1	3
2255	65	"res_0"	"boolean"	1	0	0	0
2256	65	"arg_1"	"any"	0	0	1	1
2257	65	"arg_2"	"any"	0	0	1	2
2258	66	"res_0"	"boolean"	1	0	0	0
2259	66	"arg_1"	"any"	0	0	1	1
2260	66	"arg_2"	"any"	0	0	1	2
2261	67	"res_0"	"boolean"	1	0	0	0
2262	67	"arg_1"	"any"	0	0	1	1
2263	68	"res_0"	"boolean"	1	0	0	0
2264	68	"arg_1"	"any"	0	0	1	1
2265	68	"arg_2"	"any"	0	0	1	2
2266	69	"res_0"	"boolean"	1	0	0	0
2267	69	"arg_1"	"any"	0	0	1	1
2268	69	"arg_2"	"any"	0	0	1	2
2269	70	"res_0"	"boolean"	1	0	0	0
2270	70	"arg_1"	"any"	0	0	1	1
2271	70	"arg_2"	"any"	0	0	1	2
2272	71	"res_0"	"boolean"	1	0	0	0
2273	71	"arg_1"	"any"	0	0	1	1
2274	71	"arg_2"	"any"	0	0	1	2
2275	75	"res_0"	"boolean"	1	0	0	0
2276	75	"arg_1"	"any"	0	0	1	1
2277	75	"arg_2"	"any"	0	0	1	2
2278	76	"res_0"	"oid"	63	0	0	0
2279	76	"arg_1"	"any"	0	0	1	1
2280	77	"res_0"	"int"	32	0	0	0
2281	77	"arg_1"	"any"	0	0	1	1
2282	78	"res_0"	"oid"	63	0	0	0
2283	78	"arg_1"	"any"	0	0	1	1
2284	78	"arg_2"	"varchar"	0	0	1	2
2285	78	"arg_3"	"varchar"	0	0	1	3
2286	81	"res_0"	"any"	0	0	0	0
2287	81	"arg_1"	"any"	0	0	1	1
2288	81	"arg_2"	"any"	0	0	1	2
2289	82	"res_0"	"any"	0	0	0	0
2290	82	"arg_1"	"any"	0	0	1	1
2291	82	"arg_2"	"any"	0	0	1	2
2292	83	"res_0"	"any"	0	0	0	0
2293	83	"arg_1"	"boolean"	1	0	1	1
2294	83	"arg_2"	"any"	0	0	1	2
2295	83	"arg_3"	"any"	0	0	1	3
2296	101	"res_0"	"oid"	63	0	0	0
2297	101	"arg_1"	"oid"	63	0	1	1
2298	101	"arg_2"	"oid"	63	0	1	2
2299	102	"res_0"	"tinyint"	8	0	0	0
2300	102	"arg_1"	"tinyint"	8	0	1	1
2301	102	"arg_2"	"tinyint"	8	0	1	2
2302	103	"res_0"	"smallint"	16	0	0	0
2303	103	"arg_1"	"smallint"	16	0	1	1
2304	103	"arg_2"	"smallint"	16	0	1	2
2305	104	"res_0"	"int"	32	0	0	0
2306	104	"arg_1"	"int"	32	0	1	1
2307	104	"arg_2"	"int"	32	0	1	2
2308	105	"res_0"	"bigint"	64	0	0	0
2309	105	"arg_1"	"bigint"	64	0	1	1
2310	105	"arg_2"	"bigint"	64	0	1	2
2311	106	"res_0"	"wrd"	64	0	0	0
2312	106	"arg_1"	"wrd"	64	0	1	1
2313	106	"arg_2"	"wrd"	64	0	1	2
2314	107	"res_0"	"decimal"	2	0	0	0
2315	107	"arg_1"	"decimal"	2	0	1	1
2316	107	"arg_2"	"decimal"	2	0	1	2
2317	108	"res_0"	"decimal"	4	0	0	0
2318	108	"arg_1"	"decimal"	4	0	1	1
2319	108	"arg_2"	"decimal"	4	0	1	2
2320	109	"res_0"	"decimal"	9	0	0	0
2321	109	"arg_1"	"decimal"	9	0	1	1
2322	109	"arg_2"	"decimal"	9	0	1	2
2323	110	"res_0"	"decimal"	19	0	0	0
2324	110	"arg_1"	"decimal"	19	0	1	1
2325	110	"arg_2"	"decimal"	19	0	1	2
2326	111	"res_0"	"real"	24	0	0	0
2327	111	"arg_1"	"real"	24	0	1	1
2328	111	"arg_2"	"real"	24	0	1	2
2329	112	"res_0"	"double"	53	0	0	0
2330	112	"arg_1"	"double"	53	0	1	1
2331	112	"arg_2"	"double"	53	0	1	2
2332	122	"res_0"	"boolean"	1	0	0	0
2333	122	"arg_1"	"any"	0	0	1	1
2334	123	"res_0"	"boolean"	1	0	0	0
2335	123	"arg_1"	"boolean"	1	0	1	1
2336	123	"arg_2"	"any"	0	0	1	2
2337	124	"res_0"	"int"	32	0	0	0
2338	124	"arg_1"	"any"	0	0	1	1
2339	124	"arg_2"	"boolean"	1	0	1	2
2340	124	"arg_3"	"boolean"	1	0	1	3
2341	125	"res_0"	"int"	32	0	0	0
2342	125	"arg_1"	"any"	0	0	1	1
2343	125	"arg_2"	"boolean"	1	0	1	2
2344	125	"arg_3"	"boolean"	1	0	1	3
2345	126	"res_0"	"int"	32	0	0	0
2346	126	"arg_1"	"any"	0	0	1	1
2347	126	"arg_2"	"boolean"	1	0	1	2
2348	126	"arg_3"	"boolean"	1	0	1	3
2349	127	"res_0"	"boolean"	1	0	0	0
2350	127	"arg_1"	"boolean"	1	0	1	1
2351	127	"arg_2"	"boolean"	1	0	1	2
2352	128	"res_0"	"boolean"	1	0	0	0
2353	128	"arg_1"	"boolean"	1	0	1	1
2354	128	"arg_2"	"boolean"	1	0	1	2
2355	129	"res_0"	"boolean"	1	0	0	0
2356	129	"arg_1"	"boolean"	1	0	1	1
2357	129	"arg_2"	"boolean"	1	0	1	2
2358	130	"res_0"	"boolean"	1	0	0	0
2359	130	"arg_1"	"boolean"	1	0	1	1
2360	131	"res_0"	"smallint"	16	0	0	0
2361	131	"arg_1"	"smallint"	16	0	1	1
2362	131	"arg_2"	"tinyint"	8	0	1	2
2363	132	"res_0"	"smallint"	16	0	0	0
2364	132	"arg_1"	"smallint"	16	0	1	1
2365	132	"arg_2"	"tinyint"	8	0	1	2
2366	133	"res_0"	"int"	32	0	0	0
2367	133	"arg_1"	"int"	32	0	1	1
2368	133	"arg_2"	"tinyint"	8	0	1	2
2369	134	"res_0"	"int"	32	0	0	0
2370	134	"arg_1"	"int"	32	0	1	1
2371	134	"arg_2"	"tinyint"	8	0	1	2
2372	135	"res_0"	"int"	32	0	0	0
2373	135	"arg_1"	"int"	32	0	1	1
2374	135	"arg_2"	"smallint"	16	0	1	2
2375	136	"res_0"	"int"	32	0	0	0
2376	136	"arg_1"	"int"	32	0	1	1
2377	136	"arg_2"	"smallint"	16	0	1	2
2378	137	"res_0"	"bigint"	64	0	0	0
2379	137	"arg_1"	"bigint"	64	0	1	1
2380	137	"arg_2"	"tinyint"	8	0	1	2
2381	138	"res_0"	"bigint"	64	0	0	0
2382	138	"arg_1"	"bigint"	64	0	1	1
2383	138	"arg_2"	"tinyint"	8	0	1	2
2384	139	"res_0"	"bigint"	64	0	0	0
2385	139	"arg_1"	"bigint"	64	0	1	1
2386	139	"arg_2"	"smallint"	16	0	1	2
2387	140	"res_0"	"bigint"	64	0	0	0
2388	140	"arg_1"	"bigint"	64	0	1	1
2389	140	"arg_2"	"smallint"	16	0	1	2
2390	141	"res_0"	"bigint"	64	0	0	0
2391	141	"arg_1"	"bigint"	64	0	1	1
2392	141	"arg_2"	"int"	32	0	1	2
2393	142	"res_0"	"bigint"	64	0	0	0
2394	142	"arg_1"	"bigint"	64	0	1	1
2395	142	"arg_2"	"int"	32	0	1	2
2396	143	"res_0"	"bigint"	64	0	0	0
2397	143	"arg_1"	"bigint"	64	0	1	1
2398	143	"arg_2"	"wrd"	64	0	1	2
2399	144	"res_0"	"bigint"	64	0	0	0
2400	144	"arg_1"	"bigint"	64	0	1	1
2401	144	"arg_2"	"wrd"	64	0	1	2
2402	145	"res_0"	"wrd"	64	0	0	0
2403	145	"arg_1"	"wrd"	64	0	1	1
2404	145	"arg_2"	"tinyint"	8	0	1	2
2405	146	"res_0"	"wrd"	64	0	0	0
2406	146	"arg_1"	"wrd"	64	0	1	1
2407	146	"arg_2"	"tinyint"	8	0	1	2
2408	147	"res_0"	"wrd"	64	0	0	0
2409	147	"arg_1"	"wrd"	64	0	1	1
2410	147	"arg_2"	"smallint"	16	0	1	2
2411	148	"res_0"	"wrd"	64	0	0	0
2412	148	"arg_1"	"wrd"	64	0	1	1
2413	148	"arg_2"	"smallint"	16	0	1	2
2414	149	"res_0"	"wrd"	64	0	0	0
2415	149	"arg_1"	"wrd"	64	0	1	1
2416	149	"arg_2"	"int"	32	0	1	2
2417	150	"res_0"	"wrd"	64	0	0	0
2418	150	"arg_1"	"wrd"	64	0	1	1
2419	150	"arg_2"	"int"	32	0	1	2
2420	151	"res_0"	"oid"	63	0	0	0
2421	151	"arg_1"	"oid"	63	0	1	1
2422	151	"arg_2"	"oid"	63	0	1	2
2423	152	"res_0"	"oid"	63	0	0	0
2424	152	"arg_1"	"oid"	63	0	1	1
2425	152	"arg_2"	"oid"	63	0	1	2
2426	153	"res_0"	"oid"	63	0	0	0
2427	153	"arg_1"	"oid"	63	0	1	1
2428	153	"arg_2"	"oid"	63	0	1	2
2429	154	"res_0"	"oid"	63	0	0	0
2430	154	"arg_1"	"oid"	63	0	1	1
2431	154	"arg_2"	"oid"	63	0	1	2
2432	155	"res_0"	"oid"	63	0	0	0
2433	155	"arg_1"	"oid"	63	0	1	1
2434	155	"arg_2"	"oid"	63	0	1	2
2435	156	"res_0"	"oid"	63	0	0	0
2436	156	"arg_1"	"oid"	63	0	1	1
2437	156	"arg_2"	"oid"	63	0	1	2
2438	157	"res_0"	"oid"	63	0	0	0
2439	157	"arg_1"	"oid"	63	0	1	1
2440	157	"arg_2"	"oid"	63	0	1	2
2441	158	"res_0"	"oid"	63	0	0	0
2442	158	"arg_1"	"oid"	63	0	1	1
2443	159	"res_0"	"oid"	63	0	0	0
2444	159	"arg_1"	"oid"	63	0	1	1
2445	159	"arg_2"	"int"	32	0	1	2
2446	160	"res_0"	"oid"	63	0	0	0
2447	160	"arg_1"	"oid"	63	0	1	1
2448	160	"arg_2"	"int"	32	0	1	2
2449	161	"res_0"	"oid"	63	0	0	0
2450	161	"arg_1"	"oid"	63	0	1	1
2451	162	"res_0"	"oid"	63	0	0	0
2452	162	"arg_1"	"oid"	63	0	1	1
2453	163	"res_0"	"tinyint"	8	0	0	0
2454	163	"arg_1"	"oid"	63	0	1	1
2455	164	"res_0"	"oid"	63	0	0	0
2456	164	"arg_1"	"oid"	63	0	1	1
2457	164	"arg_2"	"oid"	63	0	1	2
2458	165	"res_0"	"oid"	63	0	0	0
2459	165	"arg_1"	"oid"	63	0	1	1
2460	165	"arg_2"	"oid"	63	0	1	2
2461	166	"res_0"	"month_interval"	32	0	0	0
2462	166	"arg_1"	"month_interval"	32	0	1	1
2463	166	"arg_2"	"oid"	63	0	1	2
2464	167	"res_0"	"month_interval"	32	0	0	0
2465	167	"arg_1"	"month_interval"	32	0	1	1
2466	167	"arg_2"	"oid"	63	0	1	2
2467	168	"res_0"	"month_interval"	32	0	0	0
2468	168	"arg_1"	"month_interval"	32	0	1	1
2469	168	"arg_2"	"oid"	63	0	1	2
2470	169	"res_0"	"month_interval"	32	0	0	0
2471	169	"arg_1"	"month_interval"	32	0	1	1
2472	169	"arg_2"	"oid"	63	0	1	2
2473	170	"res_0"	"sec_interval"	13	0	0	0
2474	170	"arg_1"	"sec_interval"	13	0	1	1
2475	170	"arg_2"	"oid"	63	0	1	2
2476	171	"res_0"	"sec_interval"	13	0	0	0
2477	171	"arg_1"	"sec_interval"	13	0	1	1
2478	171	"arg_2"	"oid"	63	0	1	2
2479	172	"res_0"	"sec_interval"	13	0	0	0
2480	172	"arg_1"	"sec_interval"	13	0	1	1
2481	172	"arg_2"	"oid"	63	0	1	2
2482	173	"res_0"	"sec_interval"	13	0	0	0
2483	173	"arg_1"	"sec_interval"	13	0	1	1
2484	173	"arg_2"	"oid"	63	0	1	2
2485	174	"res_0"	"tinyint"	8	0	0	0
2486	174	"arg_1"	"tinyint"	8	0	1	1
2487	174	"arg_2"	"tinyint"	8	0	1	2
2488	175	"res_0"	"tinyint"	8	0	0	0
2489	175	"arg_1"	"tinyint"	8	0	1	1
2490	175	"arg_2"	"tinyint"	8	0	1	2
2491	176	"res_0"	"tinyint"	8	0	0	0
2492	176	"arg_1"	"tinyint"	8	0	1	1
2493	176	"arg_2"	"tinyint"	8	0	1	2
2494	177	"res_0"	"tinyint"	8	0	0	0
2495	177	"arg_1"	"tinyint"	8	0	1	1
2496	177	"arg_2"	"tinyint"	8	0	1	2
2497	178	"res_0"	"tinyint"	8	0	0	0
2498	178	"arg_1"	"tinyint"	8	0	1	1
2499	178	"arg_2"	"tinyint"	8	0	1	2
2500	179	"res_0"	"tinyint"	8	0	0	0
2501	179	"arg_1"	"tinyint"	8	0	1	1
2502	179	"arg_2"	"tinyint"	8	0	1	2
2503	180	"res_0"	"tinyint"	8	0	0	0
2504	180	"arg_1"	"tinyint"	8	0	1	1
2505	180	"arg_2"	"tinyint"	8	0	1	2
2506	181	"res_0"	"tinyint"	8	0	0	0
2507	181	"arg_1"	"tinyint"	8	0	1	1
2508	182	"res_0"	"tinyint"	8	0	0	0
2509	182	"arg_1"	"tinyint"	8	0	1	1
2510	182	"arg_2"	"int"	32	0	1	2
2511	183	"res_0"	"tinyint"	8	0	0	0
2512	183	"arg_1"	"tinyint"	8	0	1	1
2513	183	"arg_2"	"int"	32	0	1	2
2514	184	"res_0"	"tinyint"	8	0	0	0
2515	184	"arg_1"	"tinyint"	8	0	1	1
2516	185	"res_0"	"tinyint"	8	0	0	0
2517	185	"arg_1"	"tinyint"	8	0	1	1
2518	186	"res_0"	"tinyint"	8	0	0	0
2519	186	"arg_1"	"tinyint"	8	0	1	1
2520	187	"res_0"	"tinyint"	8	0	0	0
2521	187	"arg_1"	"tinyint"	8	0	1	1
2522	187	"arg_2"	"tinyint"	8	0	1	2
2523	188	"res_0"	"tinyint"	8	0	0	0
2524	188	"arg_1"	"tinyint"	8	0	1	1
2525	188	"arg_2"	"tinyint"	8	0	1	2
2526	189	"res_0"	"month_interval"	32	0	0	0
2527	189	"arg_1"	"month_interval"	32	0	1	1
2528	189	"arg_2"	"tinyint"	8	0	1	2
2529	190	"res_0"	"month_interval"	32	0	0	0
2530	190	"arg_1"	"month_interval"	32	0	1	1
2531	190	"arg_2"	"tinyint"	8	0	1	2
2532	191	"res_0"	"month_interval"	32	0	0	0
2533	191	"arg_1"	"month_interval"	32	0	1	1
2534	191	"arg_2"	"tinyint"	8	0	1	2
2535	192	"res_0"	"month_interval"	32	0	0	0
2536	192	"arg_1"	"month_interval"	32	0	1	1
2537	192	"arg_2"	"tinyint"	8	0	1	2
2538	193	"res_0"	"sec_interval"	13	0	0	0
2539	193	"arg_1"	"sec_interval"	13	0	1	1
2540	193	"arg_2"	"tinyint"	8	0	1	2
2541	194	"res_0"	"sec_interval"	13	0	0	0
2542	194	"arg_1"	"sec_interval"	13	0	1	1
2543	194	"arg_2"	"tinyint"	8	0	1	2
2544	195	"res_0"	"sec_interval"	13	0	0	0
2545	195	"arg_1"	"sec_interval"	13	0	1	1
2546	195	"arg_2"	"tinyint"	8	0	1	2
2547	196	"res_0"	"sec_interval"	13	0	0	0
2548	196	"arg_1"	"sec_interval"	13	0	1	1
2549	196	"arg_2"	"tinyint"	8	0	1	2
2550	197	"res_0"	"smallint"	16	0	0	0
2551	197	"arg_1"	"smallint"	16	0	1	1
2552	197	"arg_2"	"smallint"	16	0	1	2
2553	198	"res_0"	"smallint"	16	0	0	0
2554	198	"arg_1"	"smallint"	16	0	1	1
2555	198	"arg_2"	"smallint"	16	0	1	2
2556	199	"res_0"	"smallint"	16	0	0	0
2557	199	"arg_1"	"smallint"	16	0	1	1
2558	199	"arg_2"	"smallint"	16	0	1	2
2559	200	"res_0"	"smallint"	16	0	0	0
2560	200	"arg_1"	"smallint"	16	0	1	1
2561	200	"arg_2"	"smallint"	16	0	1	2
2562	201	"res_0"	"smallint"	16	0	0	0
2563	201	"arg_1"	"smallint"	16	0	1	1
2564	201	"arg_2"	"smallint"	16	0	1	2
2565	202	"res_0"	"smallint"	16	0	0	0
2566	202	"arg_1"	"smallint"	16	0	1	1
2567	202	"arg_2"	"smallint"	16	0	1	2
2568	203	"res_0"	"smallint"	16	0	0	0
2569	203	"arg_1"	"smallint"	16	0	1	1
2570	203	"arg_2"	"smallint"	16	0	1	2
2571	204	"res_0"	"smallint"	16	0	0	0
2572	204	"arg_1"	"smallint"	16	0	1	1
2573	205	"res_0"	"smallint"	16	0	0	0
2574	205	"arg_1"	"smallint"	16	0	1	1
2575	205	"arg_2"	"int"	32	0	1	2
2576	206	"res_0"	"smallint"	16	0	0	0
2577	206	"arg_1"	"smallint"	16	0	1	1
2578	206	"arg_2"	"int"	32	0	1	2
2579	207	"res_0"	"smallint"	16	0	0	0
2580	207	"arg_1"	"smallint"	16	0	1	1
2581	208	"res_0"	"smallint"	16	0	0	0
2582	208	"arg_1"	"smallint"	16	0	1	1
2583	209	"res_0"	"tinyint"	8	0	0	0
2584	209	"arg_1"	"smallint"	16	0	1	1
2585	210	"res_0"	"smallint"	16	0	0	0
2586	210	"arg_1"	"smallint"	16	0	1	1
2587	210	"arg_2"	"smallint"	16	0	1	2
2588	211	"res_0"	"smallint"	16	0	0	0
2589	211	"arg_1"	"smallint"	16	0	1	1
2590	211	"arg_2"	"smallint"	16	0	1	2
2591	212	"res_0"	"month_interval"	32	0	0	0
2592	212	"arg_1"	"month_interval"	32	0	1	1
2593	212	"arg_2"	"smallint"	16	0	1	2
2594	213	"res_0"	"month_interval"	32	0	0	0
2595	213	"arg_1"	"month_interval"	32	0	1	1
2596	213	"arg_2"	"smallint"	16	0	1	2
2597	214	"res_0"	"month_interval"	32	0	0	0
2598	214	"arg_1"	"month_interval"	32	0	1	1
2599	214	"arg_2"	"smallint"	16	0	1	2
2600	215	"res_0"	"month_interval"	32	0	0	0
2601	215	"arg_1"	"month_interval"	32	0	1	1
2602	215	"arg_2"	"smallint"	16	0	1	2
2603	216	"res_0"	"sec_interval"	13	0	0	0
2604	216	"arg_1"	"sec_interval"	13	0	1	1
2605	216	"arg_2"	"smallint"	16	0	1	2
2606	217	"res_0"	"sec_interval"	13	0	0	0
2607	217	"arg_1"	"sec_interval"	13	0	1	1
2608	217	"arg_2"	"smallint"	16	0	1	2
2609	218	"res_0"	"sec_interval"	13	0	0	0
2610	218	"arg_1"	"sec_interval"	13	0	1	1
2611	218	"arg_2"	"smallint"	16	0	1	2
2612	219	"res_0"	"sec_interval"	13	0	0	0
2613	219	"arg_1"	"sec_interval"	13	0	1	1
2614	219	"arg_2"	"smallint"	16	0	1	2
2615	220	"res_0"	"int"	32	0	0	0
2616	220	"arg_1"	"int"	32	0	1	1
2617	220	"arg_2"	"int"	32	0	1	2
2618	221	"res_0"	"int"	32	0	0	0
2619	221	"arg_1"	"int"	32	0	1	1
2620	221	"arg_2"	"int"	32	0	1	2
2621	222	"res_0"	"int"	32	0	0	0
2622	222	"arg_1"	"int"	32	0	1	1
2623	222	"arg_2"	"int"	32	0	1	2
2624	223	"res_0"	"int"	32	0	0	0
2625	223	"arg_1"	"int"	32	0	1	1
2626	223	"arg_2"	"int"	32	0	1	2
2627	224	"res_0"	"int"	32	0	0	0
2628	224	"arg_1"	"int"	32	0	1	1
2629	224	"arg_2"	"int"	32	0	1	2
2630	225	"res_0"	"int"	32	0	0	0
2631	225	"arg_1"	"int"	32	0	1	1
2632	225	"arg_2"	"int"	32	0	1	2
2633	226	"res_0"	"int"	32	0	0	0
2634	226	"arg_1"	"int"	32	0	1	1
2635	226	"arg_2"	"int"	32	0	1	2
2636	227	"res_0"	"int"	32	0	0	0
2637	227	"arg_1"	"int"	32	0	1	1
2638	228	"res_0"	"int"	32	0	0	0
2639	228	"arg_1"	"int"	32	0	1	1
2640	228	"arg_2"	"int"	32	0	1	2
2641	229	"res_0"	"int"	32	0	0	0
2642	229	"arg_1"	"int"	32	0	1	1
2643	229	"arg_2"	"int"	32	0	1	2
2644	230	"res_0"	"int"	32	0	0	0
2645	230	"arg_1"	"int"	32	0	1	1
2646	231	"res_0"	"int"	32	0	0	0
2647	231	"arg_1"	"int"	32	0	1	1
2648	232	"res_0"	"tinyint"	8	0	0	0
2649	232	"arg_1"	"int"	32	0	1	1
2650	233	"res_0"	"int"	32	0	0	0
2651	233	"arg_1"	"int"	32	0	1	1
2652	233	"arg_2"	"int"	32	0	1	2
2653	234	"res_0"	"int"	32	0	0	0
2654	234	"arg_1"	"int"	32	0	1	1
2655	234	"arg_2"	"int"	32	0	1	2
2656	235	"res_0"	"month_interval"	32	0	0	0
2657	235	"arg_1"	"month_interval"	32	0	1	1
2658	235	"arg_2"	"int"	32	0	1	2
2659	236	"res_0"	"month_interval"	32	0	0	0
2660	236	"arg_1"	"month_interval"	32	0	1	1
2661	236	"arg_2"	"int"	32	0	1	2
2662	237	"res_0"	"month_interval"	32	0	0	0
2663	237	"arg_1"	"month_interval"	32	0	1	1
2664	237	"arg_2"	"int"	32	0	1	2
2665	238	"res_0"	"month_interval"	32	0	0	0
2666	238	"arg_1"	"month_interval"	32	0	1	1
2667	238	"arg_2"	"int"	32	0	1	2
2668	239	"res_0"	"sec_interval"	13	0	0	0
2669	239	"arg_1"	"sec_interval"	13	0	1	1
2670	239	"arg_2"	"int"	32	0	1	2
2671	240	"res_0"	"sec_interval"	13	0	0	0
2672	240	"arg_1"	"sec_interval"	13	0	1	1
2673	240	"arg_2"	"int"	32	0	1	2
2674	241	"res_0"	"sec_interval"	13	0	0	0
2675	241	"arg_1"	"sec_interval"	13	0	1	1
2676	241	"arg_2"	"int"	32	0	1	2
2677	242	"res_0"	"sec_interval"	13	0	0	0
2678	242	"arg_1"	"sec_interval"	13	0	1	1
2679	242	"arg_2"	"int"	32	0	1	2
2680	243	"res_0"	"bigint"	64	0	0	0
2681	243	"arg_1"	"bigint"	64	0	1	1
2682	243	"arg_2"	"bigint"	64	0	1	2
2683	244	"res_0"	"bigint"	64	0	0	0
2684	244	"arg_1"	"bigint"	64	0	1	1
2685	244	"arg_2"	"bigint"	64	0	1	2
2686	245	"res_0"	"bigint"	64	0	0	0
2687	245	"arg_1"	"bigint"	64	0	1	1
2688	245	"arg_2"	"bigint"	64	0	1	2
2689	246	"res_0"	"bigint"	64	0	0	0
2690	246	"arg_1"	"bigint"	64	0	1	1
2691	246	"arg_2"	"bigint"	64	0	1	2
2692	247	"res_0"	"bigint"	64	0	0	0
2693	247	"arg_1"	"bigint"	64	0	1	1
2694	247	"arg_2"	"bigint"	64	0	1	2
2695	248	"res_0"	"bigint"	64	0	0	0
2696	248	"arg_1"	"bigint"	64	0	1	1
2697	248	"arg_2"	"bigint"	64	0	1	2
2698	249	"res_0"	"bigint"	64	0	0	0
2699	249	"arg_1"	"bigint"	64	0	1	1
2700	249	"arg_2"	"bigint"	64	0	1	2
2701	250	"res_0"	"bigint"	64	0	0	0
2702	250	"arg_1"	"bigint"	64	0	1	1
2703	251	"res_0"	"bigint"	64	0	0	0
2704	251	"arg_1"	"bigint"	64	0	1	1
2705	251	"arg_2"	"int"	32	0	1	2
2706	252	"res_0"	"bigint"	64	0	0	0
2707	252	"arg_1"	"bigint"	64	0	1	1
2708	252	"arg_2"	"int"	32	0	1	2
2709	253	"res_0"	"bigint"	64	0	0	0
2710	253	"arg_1"	"bigint"	64	0	1	1
2711	254	"res_0"	"bigint"	64	0	0	0
2712	254	"arg_1"	"bigint"	64	0	1	1
2713	255	"res_0"	"tinyint"	8	0	0	0
2714	255	"arg_1"	"bigint"	64	0	1	1
2715	256	"res_0"	"bigint"	64	0	0	0
2716	256	"arg_1"	"bigint"	64	0	1	1
2717	256	"arg_2"	"bigint"	64	0	1	2
2718	257	"res_0"	"bigint"	64	0	0	0
2719	257	"arg_1"	"bigint"	64	0	1	1
2720	257	"arg_2"	"bigint"	64	0	1	2
2721	258	"res_0"	"month_interval"	32	0	0	0
2722	258	"arg_1"	"month_interval"	32	0	1	1
2723	258	"arg_2"	"bigint"	64	0	1	2
2724	259	"res_0"	"month_interval"	32	0	0	0
2725	259	"arg_1"	"month_interval"	32	0	1	1
2726	259	"arg_2"	"bigint"	64	0	1	2
2727	260	"res_0"	"month_interval"	32	0	0	0
2728	260	"arg_1"	"month_interval"	32	0	1	1
2729	260	"arg_2"	"bigint"	64	0	1	2
2730	261	"res_0"	"month_interval"	32	0	0	0
2731	261	"arg_1"	"month_interval"	32	0	1	1
2732	261	"arg_2"	"bigint"	64	0	1	2
2733	262	"res_0"	"sec_interval"	13	0	0	0
2734	262	"arg_1"	"sec_interval"	13	0	1	1
2735	262	"arg_2"	"bigint"	64	0	1	2
2736	263	"res_0"	"sec_interval"	13	0	0	0
2737	263	"arg_1"	"sec_interval"	13	0	1	1
2738	263	"arg_2"	"bigint"	64	0	1	2
2739	264	"res_0"	"sec_interval"	13	0	0	0
2740	264	"arg_1"	"sec_interval"	13	0	1	1
2741	264	"arg_2"	"bigint"	64	0	1	2
2742	265	"res_0"	"sec_interval"	13	0	0	0
2743	265	"arg_1"	"sec_interval"	13	0	1	1
2744	265	"arg_2"	"bigint"	64	0	1	2
2745	266	"res_0"	"wrd"	64	0	0	0
2746	266	"arg_1"	"wrd"	64	0	1	1
2747	266	"arg_2"	"wrd"	64	0	1	2
2748	267	"res_0"	"wrd"	64	0	0	0
2749	267	"arg_1"	"wrd"	64	0	1	1
2750	267	"arg_2"	"wrd"	64	0	1	2
2751	268	"res_0"	"wrd"	64	0	0	0
2752	268	"arg_1"	"wrd"	64	0	1	1
2753	268	"arg_2"	"wrd"	64	0	1	2
2754	269	"res_0"	"wrd"	64	0	0	0
2755	269	"arg_1"	"wrd"	64	0	1	1
2756	269	"arg_2"	"wrd"	64	0	1	2
2757	270	"res_0"	"wrd"	64	0	0	0
2758	270	"arg_1"	"wrd"	64	0	1	1
2759	270	"arg_2"	"wrd"	64	0	1	2
2760	271	"res_0"	"wrd"	64	0	0	0
2761	271	"arg_1"	"wrd"	64	0	1	1
2762	271	"arg_2"	"wrd"	64	0	1	2
2763	272	"res_0"	"wrd"	64	0	0	0
2764	272	"arg_1"	"wrd"	64	0	1	1
2765	272	"arg_2"	"wrd"	64	0	1	2
2766	273	"res_0"	"wrd"	64	0	0	0
2767	273	"arg_1"	"wrd"	64	0	1	1
2768	274	"res_0"	"wrd"	64	0	0	0
2769	274	"arg_1"	"wrd"	64	0	1	1
2770	274	"arg_2"	"int"	32	0	1	2
2771	275	"res_0"	"wrd"	64	0	0	0
2772	275	"arg_1"	"wrd"	64	0	1	1
2773	275	"arg_2"	"int"	32	0	1	2
2774	276	"res_0"	"wrd"	64	0	0	0
2775	276	"arg_1"	"wrd"	64	0	1	1
2776	277	"res_0"	"wrd"	64	0	0	0
2777	277	"arg_1"	"wrd"	64	0	1	1
2778	278	"res_0"	"tinyint"	8	0	0	0
2779	278	"arg_1"	"wrd"	64	0	1	1
2780	279	"res_0"	"wrd"	64	0	0	0
2781	279	"arg_1"	"wrd"	64	0	1	1
2782	279	"arg_2"	"wrd"	64	0	1	2
2783	280	"res_0"	"wrd"	64	0	0	0
2784	280	"arg_1"	"wrd"	64	0	1	1
2785	280	"arg_2"	"wrd"	64	0	1	2
2786	281	"res_0"	"month_interval"	32	0	0	0
2787	281	"arg_1"	"month_interval"	32	0	1	1
2788	281	"arg_2"	"wrd"	64	0	1	2
2789	282	"res_0"	"month_interval"	32	0	0	0
2790	282	"arg_1"	"month_interval"	32	0	1	1
2791	282	"arg_2"	"wrd"	64	0	1	2
2792	283	"res_0"	"month_interval"	32	0	0	0
2793	283	"arg_1"	"month_interval"	32	0	1	1
2794	283	"arg_2"	"wrd"	64	0	1	2
2795	284	"res_0"	"month_interval"	32	0	0	0
2796	284	"arg_1"	"month_interval"	32	0	1	1
2797	284	"arg_2"	"wrd"	64	0	1	2
2798	285	"res_0"	"sec_interval"	13	0	0	0
2799	285	"arg_1"	"sec_interval"	13	0	1	1
2800	285	"arg_2"	"wrd"	64	0	1	2
2801	286	"res_0"	"sec_interval"	13	0	0	0
2802	286	"arg_1"	"sec_interval"	13	0	1	1
2803	286	"arg_2"	"wrd"	64	0	1	2
2804	287	"res_0"	"sec_interval"	13	0	0	0
2805	287	"arg_1"	"sec_interval"	13	0	1	1
2806	287	"arg_2"	"wrd"	64	0	1	2
2807	288	"res_0"	"sec_interval"	13	0	0	0
2808	288	"arg_1"	"sec_interval"	13	0	1	1
2809	288	"arg_2"	"wrd"	64	0	1	2
2810	289	"res_0"	"decimal"	2	0	0	0
2811	289	"arg_1"	"decimal"	2	0	1	1
2812	289	"arg_2"	"decimal"	2	0	1	2
2813	290	"res_0"	"decimal"	2	0	0	0
2814	290	"arg_1"	"decimal"	2	0	1	1
2815	290	"arg_2"	"decimal"	2	0	1	2
2816	291	"res_0"	"decimal"	2	0	0	0
2817	291	"arg_1"	"decimal"	2	0	1	1
2818	291	"arg_2"	"decimal"	2	0	1	2
2819	292	"res_0"	"decimal"	2	0	0	0
2820	292	"arg_1"	"decimal"	2	0	1	1
2821	292	"arg_2"	"decimal"	2	0	1	2
2822	293	"res_0"	"decimal"	2	0	0	0
2823	293	"arg_1"	"decimal"	2	0	1	1
2824	293	"arg_2"	"decimal"	2	0	1	2
2825	294	"res_0"	"decimal"	2	0	0	0
2826	294	"arg_1"	"decimal"	2	0	1	1
2827	294	"arg_2"	"decimal"	2	0	1	2
2828	295	"res_0"	"decimal"	2	0	0	0
2829	295	"arg_1"	"decimal"	2	0	1	1
2830	295	"arg_2"	"decimal"	2	0	1	2
2831	296	"res_0"	"decimal"	2	0	0	0
2832	296	"arg_1"	"decimal"	2	0	1	1
2833	297	"res_0"	"decimal"	2	0	0	0
2834	297	"arg_1"	"decimal"	2	0	1	1
2835	297	"arg_2"	"int"	32	0	1	2
2836	298	"res_0"	"decimal"	2	0	0	0
2837	298	"arg_1"	"decimal"	2	0	1	1
2838	298	"arg_2"	"int"	32	0	1	2
2839	299	"res_0"	"decimal"	2	0	0	0
2840	299	"arg_1"	"decimal"	2	0	1	1
2841	300	"res_0"	"decimal"	2	0	0	0
2842	300	"arg_1"	"decimal"	2	0	1	1
2843	301	"res_0"	"tinyint"	8	0	0	0
2844	301	"arg_1"	"decimal"	2	0	1	1
2845	302	"res_0"	"decimal"	2	0	0	0
2846	302	"arg_1"	"decimal"	2	0	1	1
2847	302	"arg_2"	"tinyint"	8	0	1	2
2848	303	"res_0"	"decimal"	2	0	0	0
2849	303	"arg_1"	"decimal"	2	0	1	1
2850	303	"arg_2"	"tinyint"	8	0	1	2
2851	304	"res_0"	"month_interval"	32	0	0	0
2852	304	"arg_1"	"month_interval"	32	0	1	1
2853	304	"arg_2"	"decimal"	2	0	1	2
2854	305	"res_0"	"month_interval"	32	0	0	0
2855	305	"arg_1"	"month_interval"	32	0	1	1
2856	305	"arg_2"	"decimal"	2	0	1	2
2857	306	"res_0"	"month_interval"	32	0	0	0
2858	306	"arg_1"	"month_interval"	32	0	1	1
2859	306	"arg_2"	"decimal"	2	0	1	2
2860	307	"res_0"	"month_interval"	32	0	0	0
2861	307	"arg_1"	"month_interval"	32	0	1	1
2862	307	"arg_2"	"decimal"	2	0	1	2
2863	308	"res_0"	"sec_interval"	13	0	0	0
2864	308	"arg_1"	"sec_interval"	13	0	1	1
2865	308	"arg_2"	"decimal"	2	0	1	2
2866	309	"res_0"	"sec_interval"	13	0	0	0
2867	309	"arg_1"	"sec_interval"	13	0	1	1
2868	309	"arg_2"	"decimal"	2	0	1	2
2869	310	"res_0"	"sec_interval"	13	0	0	0
2870	310	"arg_1"	"sec_interval"	13	0	1	1
2871	310	"arg_2"	"decimal"	2	0	1	2
2872	311	"res_0"	"sec_interval"	13	0	0	0
2873	311	"arg_1"	"sec_interval"	13	0	1	1
2874	311	"arg_2"	"decimal"	2	0	1	2
2875	312	"res_0"	"decimal"	4	0	0	0
2876	312	"arg_1"	"decimal"	4	0	1	1
2877	312	"arg_2"	"decimal"	4	0	1	2
2878	313	"res_0"	"decimal"	4	0	0	0
2879	313	"arg_1"	"decimal"	4	0	1	1
2880	313	"arg_2"	"decimal"	4	0	1	2
2881	314	"res_0"	"decimal"	4	0	0	0
2882	314	"arg_1"	"decimal"	4	0	1	1
2883	314	"arg_2"	"decimal"	4	0	1	2
2884	315	"res_0"	"decimal"	4	0	0	0
2885	315	"arg_1"	"decimal"	4	0	1	1
2886	315	"arg_2"	"decimal"	4	0	1	2
2887	316	"res_0"	"decimal"	4	0	0	0
2888	316	"arg_1"	"decimal"	4	0	1	1
2889	316	"arg_2"	"decimal"	4	0	1	2
2890	317	"res_0"	"decimal"	4	0	0	0
2891	317	"arg_1"	"decimal"	4	0	1	1
2892	317	"arg_2"	"decimal"	4	0	1	2
2893	318	"res_0"	"decimal"	4	0	0	0
2894	318	"arg_1"	"decimal"	4	0	1	1
2895	318	"arg_2"	"decimal"	4	0	1	2
2896	319	"res_0"	"decimal"	4	0	0	0
2897	319	"arg_1"	"decimal"	4	0	1	1
2898	320	"res_0"	"decimal"	4	0	0	0
2899	320	"arg_1"	"decimal"	4	0	1	1
2900	320	"arg_2"	"int"	32	0	1	2
2901	321	"res_0"	"decimal"	4	0	0	0
2902	321	"arg_1"	"decimal"	4	0	1	1
2903	321	"arg_2"	"int"	32	0	1	2
2904	322	"res_0"	"decimal"	4	0	0	0
2905	322	"arg_1"	"decimal"	4	0	1	1
2906	323	"res_0"	"decimal"	4	0	0	0
2907	323	"arg_1"	"decimal"	4	0	1	1
2908	324	"res_0"	"tinyint"	8	0	0	0
2909	324	"arg_1"	"decimal"	4	0	1	1
2910	325	"res_0"	"decimal"	4	0	0	0
2911	325	"arg_1"	"decimal"	4	0	1	1
2912	325	"arg_2"	"smallint"	16	0	1	2
2913	326	"res_0"	"decimal"	4	0	0	0
2914	326	"arg_1"	"decimal"	4	0	1	1
2915	326	"arg_2"	"smallint"	16	0	1	2
2916	327	"res_0"	"month_interval"	32	0	0	0
2917	327	"arg_1"	"month_interval"	32	0	1	1
2918	327	"arg_2"	"decimal"	4	0	1	2
2919	328	"res_0"	"month_interval"	32	0	0	0
2920	328	"arg_1"	"month_interval"	32	0	1	1
2921	328	"arg_2"	"decimal"	4	0	1	2
2922	329	"res_0"	"month_interval"	32	0	0	0
2923	329	"arg_1"	"month_interval"	32	0	1	1
2924	329	"arg_2"	"decimal"	4	0	1	2
2925	330	"res_0"	"month_interval"	32	0	0	0
2926	330	"arg_1"	"month_interval"	32	0	1	1
2927	330	"arg_2"	"decimal"	4	0	1	2
2928	331	"res_0"	"sec_interval"	13	0	0	0
2929	331	"arg_1"	"sec_interval"	13	0	1	1
2930	331	"arg_2"	"decimal"	4	0	1	2
2931	332	"res_0"	"sec_interval"	13	0	0	0
2932	332	"arg_1"	"sec_interval"	13	0	1	1
2933	332	"arg_2"	"decimal"	4	0	1	2
2934	333	"res_0"	"sec_interval"	13	0	0	0
2935	333	"arg_1"	"sec_interval"	13	0	1	1
2936	333	"arg_2"	"decimal"	4	0	1	2
2937	334	"res_0"	"sec_interval"	13	0	0	0
2938	334	"arg_1"	"sec_interval"	13	0	1	1
2939	334	"arg_2"	"decimal"	4	0	1	2
2940	335	"res_0"	"decimal"	9	0	0	0
2941	335	"arg_1"	"decimal"	9	0	1	1
2942	335	"arg_2"	"decimal"	9	0	1	2
2943	336	"res_0"	"decimal"	9	0	0	0
2944	336	"arg_1"	"decimal"	9	0	1	1
2945	336	"arg_2"	"decimal"	9	0	1	2
2946	337	"res_0"	"decimal"	9	0	0	0
2947	337	"arg_1"	"decimal"	9	0	1	1
2948	337	"arg_2"	"decimal"	9	0	1	2
2949	338	"res_0"	"decimal"	9	0	0	0
2950	338	"arg_1"	"decimal"	9	0	1	1
2951	338	"arg_2"	"decimal"	9	0	1	2
2952	339	"res_0"	"decimal"	9	0	0	0
2953	339	"arg_1"	"decimal"	9	0	1	1
2954	339	"arg_2"	"decimal"	9	0	1	2
2955	340	"res_0"	"decimal"	9	0	0	0
2956	340	"arg_1"	"decimal"	9	0	1	1
2957	340	"arg_2"	"decimal"	9	0	1	2
2958	341	"res_0"	"decimal"	9	0	0	0
2959	341	"arg_1"	"decimal"	9	0	1	1
2960	341	"arg_2"	"decimal"	9	0	1	2
2961	342	"res_0"	"decimal"	9	0	0	0
2962	342	"arg_1"	"decimal"	9	0	1	1
2963	343	"res_0"	"decimal"	9	0	0	0
2964	343	"arg_1"	"decimal"	9	0	1	1
2965	343	"arg_2"	"int"	32	0	1	2
2966	344	"res_0"	"decimal"	9	0	0	0
2967	344	"arg_1"	"decimal"	9	0	1	1
2968	344	"arg_2"	"int"	32	0	1	2
2969	345	"res_0"	"decimal"	9	0	0	0
2970	345	"arg_1"	"decimal"	9	0	1	1
2971	346	"res_0"	"decimal"	9	0	0	0
2972	346	"arg_1"	"decimal"	9	0	1	1
2973	347	"res_0"	"tinyint"	8	0	0	0
2974	347	"arg_1"	"decimal"	9	0	1	1
2975	348	"res_0"	"decimal"	9	0	0	0
2976	348	"arg_1"	"decimal"	9	0	1	1
2977	348	"arg_2"	"int"	32	0	1	2
2978	349	"res_0"	"decimal"	9	0	0	0
2979	349	"arg_1"	"decimal"	9	0	1	1
2980	349	"arg_2"	"int"	32	0	1	2
2981	350	"res_0"	"month_interval"	32	0	0	0
2982	350	"arg_1"	"month_interval"	32	0	1	1
2983	350	"arg_2"	"decimal"	9	0	1	2
2984	351	"res_0"	"month_interval"	32	0	0	0
2985	351	"arg_1"	"month_interval"	32	0	1	1
2986	351	"arg_2"	"decimal"	9	0	1	2
2987	352	"res_0"	"month_interval"	32	0	0	0
2988	352	"arg_1"	"month_interval"	32	0	1	1
2989	352	"arg_2"	"decimal"	9	0	1	2
2990	353	"res_0"	"month_interval"	32	0	0	0
2991	353	"arg_1"	"month_interval"	32	0	1	1
2992	353	"arg_2"	"decimal"	9	0	1	2
2993	354	"res_0"	"sec_interval"	13	0	0	0
2994	354	"arg_1"	"sec_interval"	13	0	1	1
2995	354	"arg_2"	"decimal"	9	0	1	2
2996	355	"res_0"	"sec_interval"	13	0	0	0
2997	355	"arg_1"	"sec_interval"	13	0	1	1
2998	355	"arg_2"	"decimal"	9	0	1	2
2999	356	"res_0"	"sec_interval"	13	0	0	0
3000	356	"arg_1"	"sec_interval"	13	0	1	1
3001	356	"arg_2"	"decimal"	9	0	1	2
3002	357	"res_0"	"sec_interval"	13	0	0	0
3003	357	"arg_1"	"sec_interval"	13	0	1	1
3004	357	"arg_2"	"decimal"	9	0	1	2
3005	358	"res_0"	"decimal"	19	0	0	0
3006	358	"arg_1"	"decimal"	19	0	1	1
3007	358	"arg_2"	"decimal"	19	0	1	2
3008	359	"res_0"	"decimal"	19	0	0	0
3009	359	"arg_1"	"decimal"	19	0	1	1
3010	359	"arg_2"	"decimal"	19	0	1	2
3011	360	"res_0"	"decimal"	19	0	0	0
3012	360	"arg_1"	"decimal"	19	0	1	1
3013	360	"arg_2"	"decimal"	19	0	1	2
3014	361	"res_0"	"decimal"	19	0	0	0
3015	361	"arg_1"	"decimal"	19	0	1	1
3016	361	"arg_2"	"decimal"	19	0	1	2
3017	362	"res_0"	"decimal"	19	0	0	0
3018	362	"arg_1"	"decimal"	19	0	1	1
3019	362	"arg_2"	"decimal"	19	0	1	2
3020	363	"res_0"	"decimal"	19	0	0	0
3021	363	"arg_1"	"decimal"	19	0	1	1
3022	363	"arg_2"	"decimal"	19	0	1	2
3023	364	"res_0"	"decimal"	19	0	0	0
3024	364	"arg_1"	"decimal"	19	0	1	1
3025	364	"arg_2"	"decimal"	19	0	1	2
3026	365	"res_0"	"decimal"	19	0	0	0
3027	365	"arg_1"	"decimal"	19	0	1	1
3028	366	"res_0"	"decimal"	19	0	0	0
3029	366	"arg_1"	"decimal"	19	0	1	1
3030	366	"arg_2"	"int"	32	0	1	2
3031	367	"res_0"	"decimal"	19	0	0	0
3032	367	"arg_1"	"decimal"	19	0	1	1
3033	367	"arg_2"	"int"	32	0	1	2
3034	368	"res_0"	"decimal"	19	0	0	0
3035	368	"arg_1"	"decimal"	19	0	1	1
3036	369	"res_0"	"decimal"	19	0	0	0
3037	369	"arg_1"	"decimal"	19	0	1	1
3038	370	"res_0"	"tinyint"	8	0	0	0
3039	370	"arg_1"	"decimal"	19	0	1	1
3040	371	"res_0"	"decimal"	19	0	0	0
3041	371	"arg_1"	"decimal"	19	0	1	1
3042	371	"arg_2"	"bigint"	64	0	1	2
3043	372	"res_0"	"decimal"	19	0	0	0
3044	372	"arg_1"	"decimal"	19	0	1	1
3045	372	"arg_2"	"bigint"	64	0	1	2
3046	373	"res_0"	"month_interval"	32	0	0	0
3047	373	"arg_1"	"month_interval"	32	0	1	1
3048	373	"arg_2"	"decimal"	19	0	1	2
3049	374	"res_0"	"month_interval"	32	0	0	0
3050	374	"arg_1"	"month_interval"	32	0	1	1
3051	374	"arg_2"	"decimal"	19	0	1	2
3052	375	"res_0"	"month_interval"	32	0	0	0
3053	375	"arg_1"	"month_interval"	32	0	1	1
3054	375	"arg_2"	"decimal"	19	0	1	2
3055	376	"res_0"	"month_interval"	32	0	0	0
3056	376	"arg_1"	"month_interval"	32	0	1	1
3057	376	"arg_2"	"decimal"	19	0	1	2
3058	377	"res_0"	"sec_interval"	13	0	0	0
3059	377	"arg_1"	"sec_interval"	13	0	1	1
3060	377	"arg_2"	"decimal"	19	0	1	2
3061	378	"res_0"	"sec_interval"	13	0	0	0
3062	378	"arg_1"	"sec_interval"	13	0	1	1
3063	378	"arg_2"	"decimal"	19	0	1	2
3064	379	"res_0"	"sec_interval"	13	0	0	0
3065	379	"arg_1"	"sec_interval"	13	0	1	1
3066	379	"arg_2"	"decimal"	19	0	1	2
3067	380	"res_0"	"sec_interval"	13	0	0	0
3068	380	"arg_1"	"sec_interval"	13	0	1	1
3069	380	"arg_2"	"decimal"	19	0	1	2
3070	381	"res_0"	"real"	24	0	0	0
3071	381	"arg_1"	"real"	24	0	1	1
3072	381	"arg_2"	"real"	24	0	1	2
3073	382	"res_0"	"real"	24	0	0	0
3074	382	"arg_1"	"real"	24	0	1	1
3075	382	"arg_2"	"real"	24	0	1	2
3076	383	"res_0"	"real"	24	0	0	0
3077	383	"arg_1"	"real"	24	0	1	1
3078	383	"arg_2"	"real"	24	0	1	2
3079	384	"res_0"	"real"	24	0	0	0
3080	384	"arg_1"	"real"	24	0	1	1
3081	384	"arg_2"	"real"	24	0	1	2
3082	385	"res_0"	"real"	24	0	0	0
3083	385	"arg_1"	"real"	24	0	1	1
3084	386	"res_0"	"real"	24	0	0	0
3085	386	"arg_1"	"real"	24	0	1	1
3086	387	"res_0"	"tinyint"	8	0	0	0
3087	387	"arg_1"	"real"	24	0	1	1
3088	388	"res_0"	"real"	24	0	0	0
3089	388	"arg_1"	"real"	24	0	1	1
3090	388	"arg_2"	"real"	24	0	1	2
3091	389	"res_0"	"real"	24	0	0	0
3092	389	"arg_1"	"real"	24	0	1	1
3093	389	"arg_2"	"real"	24	0	1	2
3094	390	"res_0"	"month_interval"	32	0	0	0
3095	390	"arg_1"	"month_interval"	32	0	1	1
3096	390	"arg_2"	"real"	24	0	1	2
3097	391	"res_0"	"month_interval"	32	0	0	0
3098	391	"arg_1"	"month_interval"	32	0	1	1
3099	391	"arg_2"	"real"	24	0	1	2
3100	392	"res_0"	"month_interval"	32	0	0	0
3101	392	"arg_1"	"month_interval"	32	0	1	1
3102	392	"arg_2"	"real"	24	0	1	2
3103	393	"res_0"	"month_interval"	32	0	0	0
3104	393	"arg_1"	"month_interval"	32	0	1	1
3105	393	"arg_2"	"real"	24	0	1	2
3106	394	"res_0"	"sec_interval"	13	0	0	0
3107	394	"arg_1"	"sec_interval"	13	0	1	1
3108	394	"arg_2"	"real"	24	0	1	2
3109	395	"res_0"	"sec_interval"	13	0	0	0
3110	395	"arg_1"	"sec_interval"	13	0	1	1
3111	395	"arg_2"	"real"	24	0	1	2
3112	396	"res_0"	"sec_interval"	13	0	0	0
3113	396	"arg_1"	"sec_interval"	13	0	1	1
3114	396	"arg_2"	"real"	24	0	1	2
3115	397	"res_0"	"sec_interval"	13	0	0	0
3116	397	"arg_1"	"sec_interval"	13	0	1	1
3117	397	"arg_2"	"real"	24	0	1	2
3118	398	"res_0"	"double"	53	0	0	0
3119	398	"arg_1"	"double"	53	0	1	1
3120	398	"arg_2"	"double"	53	0	1	2
3121	399	"res_0"	"double"	53	0	0	0
3122	399	"arg_1"	"double"	53	0	1	1
3123	399	"arg_2"	"double"	53	0	1	2
3124	400	"res_0"	"double"	53	0	0	0
3125	400	"arg_1"	"double"	53	0	1	1
3126	400	"arg_2"	"double"	53	0	1	2
3127	401	"res_0"	"double"	53	0	0	0
3128	401	"arg_1"	"double"	53	0	1	1
3129	401	"arg_2"	"double"	53	0	1	2
3130	402	"res_0"	"double"	53	0	0	0
3131	402	"arg_1"	"double"	53	0	1	1
3132	403	"res_0"	"double"	53	0	0	0
3133	403	"arg_1"	"double"	53	0	1	1
3134	404	"res_0"	"tinyint"	8	0	0	0
3135	404	"arg_1"	"double"	53	0	1	1
3136	405	"res_0"	"double"	53	0	0	0
3137	405	"arg_1"	"double"	53	0	1	1
3138	405	"arg_2"	"double"	53	0	1	2
3139	406	"res_0"	"double"	53	0	0	0
3140	406	"arg_1"	"double"	53	0	1	1
3141	406	"arg_2"	"double"	53	0	1	2
3142	407	"res_0"	"month_interval"	32	0	0	0
3143	407	"arg_1"	"month_interval"	32	0	1	1
3144	407	"arg_2"	"double"	53	0	1	2
3145	408	"res_0"	"month_interval"	32	0	0	0
3146	408	"arg_1"	"month_interval"	32	0	1	1
3147	408	"arg_2"	"double"	53	0	1	2
3148	409	"res_0"	"month_interval"	32	0	0	0
3149	409	"arg_1"	"month_interval"	32	0	1	1
3150	409	"arg_2"	"double"	53	0	1	2
3151	410	"res_0"	"month_interval"	32	0	0	0
3152	410	"arg_1"	"month_interval"	32	0	1	1
3153	410	"arg_2"	"double"	53	0	1	2
3154	411	"res_0"	"sec_interval"	13	0	0	0
3155	411	"arg_1"	"sec_interval"	13	0	1	1
3156	411	"arg_2"	"double"	53	0	1	2
3157	412	"res_0"	"sec_interval"	13	0	0	0
3158	412	"arg_1"	"sec_interval"	13	0	1	1
3159	412	"arg_2"	"double"	53	0	1	2
3160	413	"res_0"	"sec_interval"	13	0	0	0
3161	413	"arg_1"	"sec_interval"	13	0	1	1
3162	413	"arg_2"	"double"	53	0	1	2
3163	414	"res_0"	"sec_interval"	13	0	0	0
3164	414	"arg_1"	"sec_interval"	13	0	1	1
3165	414	"arg_2"	"double"	53	0	1	2
3166	415	"res_0"	"month_interval"	32	0	0	0
3167	415	"arg_1"	"month_interval"	32	0	1	1
3168	415	"arg_2"	"month_interval"	32	0	1	2
3169	416	"res_0"	"month_interval"	32	0	0	0
3170	416	"arg_1"	"month_interval"	32	0	1	1
3171	416	"arg_2"	"month_interval"	32	0	1	2
3172	417	"res_0"	"month_interval"	32	0	0	0
3173	417	"arg_1"	"month_interval"	32	0	1	1
3174	417	"arg_2"	"month_interval"	32	0	1	2
3175	418	"res_0"	"month_interval"	32	0	0	0
3176	418	"arg_1"	"month_interval"	32	0	1	1
3177	418	"arg_2"	"month_interval"	32	0	1	2
3178	419	"res_0"	"month_interval"	32	0	0	0
3179	419	"arg_1"	"month_interval"	32	0	1	1
3180	420	"res_0"	"month_interval"	32	0	0	0
3181	420	"arg_1"	"month_interval"	32	0	1	1
3182	421	"res_0"	"tinyint"	8	0	0	0
3183	421	"arg_1"	"month_interval"	32	0	1	1
3184	422	"res_0"	"month_interval"	32	0	0	0
3185	422	"arg_1"	"month_interval"	32	0	1	1
3186	422	"arg_2"	"int"	32	0	1	2
3187	423	"res_0"	"month_interval"	32	0	0	0
3188	423	"arg_1"	"month_interval"	32	0	1	1
3189	423	"arg_2"	"int"	32	0	1	2
3190	424	"res_0"	"sec_interval"	13	0	0	0
3191	424	"arg_1"	"sec_interval"	13	0	1	1
3192	424	"arg_2"	"sec_interval"	13	0	1	2
3193	425	"res_0"	"sec_interval"	13	0	0	0
3194	425	"arg_1"	"sec_interval"	13	0	1	1
3195	425	"arg_2"	"sec_interval"	13	0	1	2
3196	426	"res_0"	"sec_interval"	13	0	0	0
3197	426	"arg_1"	"sec_interval"	13	0	1	1
3198	426	"arg_2"	"sec_interval"	13	0	1	2
3199	427	"res_0"	"sec_interval"	13	0	0	0
3200	427	"arg_1"	"sec_interval"	13	0	1	1
3201	427	"arg_2"	"sec_interval"	13	0	1	2
3202	428	"res_0"	"sec_interval"	13	0	0	0
3203	428	"arg_1"	"sec_interval"	13	0	1	1
3204	429	"res_0"	"sec_interval"	13	0	0	0
3205	429	"arg_1"	"sec_interval"	13	0	1	1
3206	430	"res_0"	"tinyint"	8	0	0	0
3207	430	"arg_1"	"sec_interval"	13	0	1	1
3208	431	"res_0"	"sec_interval"	13	0	0	0
3209	431	"arg_1"	"sec_interval"	13	0	1	1
3210	431	"arg_2"	"bigint"	64	0	1	2
3211	432	"res_0"	"sec_interval"	13	0	0	0
3212	432	"arg_1"	"sec_interval"	13	0	1	1
3213	432	"arg_2"	"bigint"	64	0	1	2
3214	433	"res_0"	"decimal"	4	0	0	0
3215	433	"arg_1"	"decimal"	4	0	1	1
3216	433	"arg_2"	"tinyint"	8	0	1	2
3217	434	"res_0"	"decimal"	4	0	0	0
3218	434	"arg_1"	"tinyint"	8	0	1	1
3219	434	"arg_2"	"decimal"	4	0	1	2
3220	435	"res_0"	"decimal"	4	0	0	0
3221	435	"arg_1"	"decimal"	4	0	1	1
3222	435	"arg_2"	"decimal"	2	0	1	2
3223	436	"res_0"	"decimal"	4	0	0	0
3224	436	"arg_1"	"decimal"	2	0	1	1
3225	436	"arg_2"	"decimal"	4	0	1	2
3226	437	"res_0"	"decimal"	9	0	0	0
3227	437	"arg_1"	"decimal"	9	0	1	1
3228	437	"arg_2"	"tinyint"	8	0	1	2
3229	438	"res_0"	"decimal"	9	0	0	0
3230	438	"arg_1"	"tinyint"	8	0	1	1
3231	438	"arg_2"	"decimal"	9	0	1	2
3232	439	"res_0"	"decimal"	9	0	0	0
3233	439	"arg_1"	"decimal"	9	0	1	1
3234	439	"arg_2"	"smallint"	16	0	1	2
3235	440	"res_0"	"decimal"	9	0	0	0
3236	440	"arg_1"	"smallint"	16	0	1	1
3237	440	"arg_2"	"decimal"	9	0	1	2
3238	441	"res_0"	"decimal"	9	0	0	0
3239	441	"arg_1"	"decimal"	9	0	1	1
3240	441	"arg_2"	"decimal"	2	0	1	2
3241	442	"res_0"	"decimal"	9	0	0	0
3242	442	"arg_1"	"decimal"	2	0	1	1
3243	442	"arg_2"	"decimal"	9	0	1	2
3244	443	"res_0"	"decimal"	9	0	0	0
3245	443	"arg_1"	"decimal"	9	0	1	1
3246	443	"arg_2"	"decimal"	4	0	1	2
3247	444	"res_0"	"decimal"	9	0	0	0
3248	444	"arg_1"	"decimal"	4	0	1	1
3249	444	"arg_2"	"decimal"	9	0	1	2
3250	445	"res_0"	"decimal"	19	0	0	0
3251	445	"arg_1"	"decimal"	19	0	1	1
3252	445	"arg_2"	"tinyint"	8	0	1	2
3253	446	"res_0"	"decimal"	19	0	0	0
3254	446	"arg_1"	"tinyint"	8	0	1	1
3255	446	"arg_2"	"decimal"	19	0	1	2
3256	447	"res_0"	"decimal"	19	0	0	0
3257	447	"arg_1"	"decimal"	19	0	1	1
3258	447	"arg_2"	"smallint"	16	0	1	2
3259	448	"res_0"	"decimal"	19	0	0	0
3260	448	"arg_1"	"smallint"	16	0	1	1
3261	448	"arg_2"	"decimal"	19	0	1	2
3262	449	"res_0"	"decimal"	19	0	0	0
3263	449	"arg_1"	"decimal"	19	0	1	1
3264	449	"arg_2"	"int"	32	0	1	2
3265	450	"res_0"	"decimal"	19	0	0	0
3266	450	"arg_1"	"int"	32	0	1	1
3267	450	"arg_2"	"decimal"	19	0	1	2
3268	451	"res_0"	"decimal"	19	0	0	0
3269	451	"arg_1"	"decimal"	19	0	1	1
3270	451	"arg_2"	"wrd"	64	0	1	2
3271	452	"res_0"	"decimal"	19	0	0	0
3272	452	"arg_1"	"wrd"	64	0	1	1
3273	452	"arg_2"	"decimal"	19	0	1	2
3274	453	"res_0"	"decimal"	19	0	0	0
3275	453	"arg_1"	"decimal"	19	0	1	1
3276	453	"arg_2"	"decimal"	2	0	1	2
3277	454	"res_0"	"decimal"	19	0	0	0
3278	454	"arg_1"	"decimal"	2	0	1	1
3279	454	"arg_2"	"decimal"	19	0	1	2
3280	455	"res_0"	"decimal"	19	0	0	0
3281	455	"arg_1"	"decimal"	19	0	1	1
3282	455	"arg_2"	"decimal"	4	0	1	2
3283	456	"res_0"	"decimal"	19	0	0	0
3284	456	"arg_1"	"decimal"	4	0	1	1
3285	456	"arg_2"	"decimal"	19	0	1	2
3286	457	"res_0"	"decimal"	19	0	0	0
3287	457	"arg_1"	"decimal"	19	0	1	1
3288	457	"arg_2"	"decimal"	9	0	1	2
3289	458	"res_0"	"decimal"	19	0	0	0
3290	458	"arg_1"	"decimal"	9	0	1	1
3291	458	"arg_2"	"decimal"	19	0	1	2
3292	459	"res_0"	"decimal"	2	0	0	0
3293	459	"arg_1"	"decimal"	2	0	1	1
3294	459	"arg_2"	"tinyint"	8	0	1	2
3295	460	"res_0"	"decimal"	4	0	0	0
3296	460	"arg_1"	"decimal"	4	0	1	1
3297	460	"arg_2"	"tinyint"	8	0	1	2
3298	461	"res_0"	"decimal"	9	0	0	0
3299	461	"arg_1"	"decimal"	9	0	1	1
3300	461	"arg_2"	"tinyint"	8	0	1	2
3301	462	"res_0"	"decimal"	19	0	0	0
3302	462	"arg_1"	"decimal"	19	0	1	1
3303	462	"arg_2"	"tinyint"	8	0	1	2
3304	463	"res_0"	"real"	24	0	0	0
3305	463	"arg_1"	"real"	24	0	1	1
3306	463	"arg_2"	"tinyint"	8	0	1	2
3307	464	"res_0"	"double"	53	0	0	0
3308	464	"arg_1"	"double"	53	0	1	1
3309	464	"arg_2"	"tinyint"	8	0	1	2
3310	465	"res_0"	"oid"	63	0	0	0
3311	465	"arg_1"	"oid"	63	0	1	1
3312	465	"arg_2"	"oid"	63	0	1	2
3313	466	"res_0"	"oid"	63	0	0	0
3314	466	"arg_1"	"tinyint"	8	0	1	1
3315	466	"arg_2"	"oid"	63	0	1	2
3316	467	"res_0"	"oid"	63	0	0	0
3317	467	"arg_1"	"smallint"	16	0	1	1
3318	467	"arg_2"	"oid"	63	0	1	2
3319	468	"res_0"	"oid"	63	0	0	0
3320	468	"arg_1"	"int"	32	0	1	1
3321	468	"arg_2"	"oid"	63	0	1	2
3322	469	"res_0"	"oid"	63	0	0	0
3323	469	"arg_1"	"bigint"	64	0	1	1
3324	469	"arg_2"	"oid"	63	0	1	2
3325	470	"res_0"	"oid"	63	0	0	0
3326	470	"arg_1"	"wrd"	64	0	1	1
3327	470	"arg_2"	"oid"	63	0	1	2
3328	471	"res_0"	"oid"	63	0	0	0
3329	471	"arg_1"	"decimal"	2	0	1	1
3330	471	"arg_2"	"oid"	63	0	1	2
3331	472	"res_0"	"oid"	63	0	0	0
3332	472	"arg_1"	"decimal"	4	0	1	1
3333	472	"arg_2"	"oid"	63	0	1	2
3334	473	"res_0"	"oid"	63	0	0	0
3335	473	"arg_1"	"decimal"	9	0	1	1
3336	473	"arg_2"	"oid"	63	0	1	2
3337	474	"res_0"	"oid"	63	0	0	0
3338	474	"arg_1"	"decimal"	19	0	1	1
3339	474	"arg_2"	"oid"	63	0	1	2
3340	475	"res_0"	"oid"	63	0	0	0
3341	475	"arg_1"	"real"	24	0	1	1
3342	475	"arg_2"	"oid"	63	0	1	2
3343	476	"res_0"	"oid"	63	0	0	0
3344	476	"arg_1"	"double"	53	0	1	1
3345	476	"arg_2"	"oid"	63	0	1	2
3346	477	"res_0"	"oid"	63	0	0	0
3347	477	"arg_1"	"month_interval"	32	0	1	1
3348	477	"arg_2"	"oid"	63	0	1	2
3349	478	"res_0"	"oid"	63	0	0	0
3350	478	"arg_1"	"sec_interval"	13	0	1	1
3351	478	"arg_2"	"oid"	63	0	1	2
3352	479	"res_0"	"oid"	63	0	0	0
3353	479	"arg_1"	"time"	7	0	1	1
3354	479	"arg_2"	"oid"	63	0	1	2
3355	480	"res_0"	"oid"	63	0	0	0
3356	480	"arg_1"	"timetz"	7	0	1	1
3357	480	"arg_2"	"oid"	63	0	1	2
3358	481	"res_0"	"oid"	63	0	0	0
3359	481	"arg_1"	"date"	0	0	1	1
3360	481	"arg_2"	"oid"	63	0	1	2
3361	482	"res_0"	"oid"	63	0	0	0
3362	482	"arg_1"	"timestamp"	7	0	1	1
3363	482	"arg_2"	"oid"	63	0	1	2
3364	483	"res_0"	"oid"	63	0	0	0
3365	483	"arg_1"	"timestamptz"	7	0	1	1
3366	483	"arg_2"	"oid"	63	0	1	2
3367	484	"res_0"	"oid"	63	0	0	0
3368	484	"arg_1"	"blob"	0	0	1	1
3369	484	"arg_2"	"oid"	63	0	1	2
3370	485	"res_0"	"oid"	63	0	0	0
3371	485	"arg_1"	"geometry"	0	0	1	1
3372	485	"arg_2"	"oid"	63	0	1	2
3373	486	"res_0"	"oid"	63	0	0	0
3374	486	"arg_1"	"geometrya"	0	0	1	1
3375	486	"arg_2"	"oid"	63	0	1	2
3376	487	"res_0"	"oid"	63	0	0	0
3377	487	"arg_1"	"mbr"	0	0	1	1
3378	487	"arg_2"	"oid"	63	0	1	2
3379	488	"res_0"	"tinyint"	8	0	0	0
3380	488	"arg_1"	"oid"	63	0	1	1
3381	488	"arg_2"	"tinyint"	8	0	1	2
3382	489	"res_0"	"tinyint"	8	0	0	0
3383	489	"arg_1"	"tinyint"	8	0	1	1
3384	489	"arg_2"	"tinyint"	8	0	1	2
3385	490	"res_0"	"tinyint"	8	0	0	0
3386	490	"arg_1"	"smallint"	16	0	1	1
3387	490	"arg_2"	"tinyint"	8	0	1	2
3388	491	"res_0"	"tinyint"	8	0	0	0
3389	491	"arg_1"	"int"	32	0	1	1
3390	491	"arg_2"	"tinyint"	8	0	1	2
3391	492	"res_0"	"tinyint"	8	0	0	0
3392	492	"arg_1"	"bigint"	64	0	1	1
3393	492	"arg_2"	"tinyint"	8	0	1	2
3394	493	"res_0"	"tinyint"	8	0	0	0
3395	493	"arg_1"	"wrd"	64	0	1	1
3396	493	"arg_2"	"tinyint"	8	0	1	2
3397	494	"res_0"	"tinyint"	8	0	0	0
3398	494	"arg_1"	"decimal"	2	0	1	1
3399	494	"arg_2"	"tinyint"	8	0	1	2
3400	495	"res_0"	"tinyint"	8	0	0	0
3401	495	"arg_1"	"decimal"	4	0	1	1
3402	495	"arg_2"	"tinyint"	8	0	1	2
3403	496	"res_0"	"tinyint"	8	0	0	0
3404	496	"arg_1"	"decimal"	9	0	1	1
3405	496	"arg_2"	"tinyint"	8	0	1	2
3406	497	"res_0"	"tinyint"	8	0	0	0
3407	497	"arg_1"	"decimal"	19	0	1	1
3408	497	"arg_2"	"tinyint"	8	0	1	2
3409	498	"res_0"	"tinyint"	8	0	0	0
3410	498	"arg_1"	"real"	24	0	1	1
3411	498	"arg_2"	"tinyint"	8	0	1	2
3412	499	"res_0"	"tinyint"	8	0	0	0
3413	499	"arg_1"	"double"	53	0	1	1
3414	499	"arg_2"	"tinyint"	8	0	1	2
3415	500	"res_0"	"tinyint"	8	0	0	0
3416	500	"arg_1"	"month_interval"	32	0	1	1
3417	500	"arg_2"	"tinyint"	8	0	1	2
3418	501	"res_0"	"tinyint"	8	0	0	0
3419	501	"arg_1"	"sec_interval"	13	0	1	1
3420	501	"arg_2"	"tinyint"	8	0	1	2
3421	502	"res_0"	"tinyint"	8	0	0	0
3422	502	"arg_1"	"time"	7	0	1	1
3423	502	"arg_2"	"tinyint"	8	0	1	2
3424	503	"res_0"	"tinyint"	8	0	0	0
3425	503	"arg_1"	"timetz"	7	0	1	1
3426	503	"arg_2"	"tinyint"	8	0	1	2
3427	504	"res_0"	"tinyint"	8	0	0	0
3428	504	"arg_1"	"date"	0	0	1	1
3429	504	"arg_2"	"tinyint"	8	0	1	2
3430	505	"res_0"	"tinyint"	8	0	0	0
3431	505	"arg_1"	"timestamp"	7	0	1	1
3432	505	"arg_2"	"tinyint"	8	0	1	2
3433	506	"res_0"	"tinyint"	8	0	0	0
3434	506	"arg_1"	"timestamptz"	7	0	1	1
3435	506	"arg_2"	"tinyint"	8	0	1	2
3436	507	"res_0"	"tinyint"	8	0	0	0
3437	507	"arg_1"	"blob"	0	0	1	1
3438	507	"arg_2"	"tinyint"	8	0	1	2
3439	508	"res_0"	"tinyint"	8	0	0	0
3440	508	"arg_1"	"geometry"	0	0	1	1
3441	508	"arg_2"	"tinyint"	8	0	1	2
3442	509	"res_0"	"tinyint"	8	0	0	0
3443	509	"arg_1"	"geometrya"	0	0	1	1
3444	509	"arg_2"	"tinyint"	8	0	1	2
3445	510	"res_0"	"tinyint"	8	0	0	0
3446	510	"arg_1"	"mbr"	0	0	1	1
3447	510	"arg_2"	"tinyint"	8	0	1	2
3448	511	"res_0"	"smallint"	16	0	0	0
3449	511	"arg_1"	"oid"	63	0	1	1
3450	511	"arg_2"	"smallint"	16	0	1	2
3451	512	"res_0"	"smallint"	16	0	0	0
3452	512	"arg_1"	"tinyint"	8	0	1	1
3453	512	"arg_2"	"smallint"	16	0	1	2
3454	513	"res_0"	"smallint"	16	0	0	0
3455	513	"arg_1"	"smallint"	16	0	1	1
3456	513	"arg_2"	"smallint"	16	0	1	2
3457	514	"res_0"	"smallint"	16	0	0	0
3458	514	"arg_1"	"int"	32	0	1	1
3459	514	"arg_2"	"smallint"	16	0	1	2
3460	515	"res_0"	"smallint"	16	0	0	0
3461	515	"arg_1"	"bigint"	64	0	1	1
3462	515	"arg_2"	"smallint"	16	0	1	2
3463	516	"res_0"	"smallint"	16	0	0	0
3464	516	"arg_1"	"wrd"	64	0	1	1
3465	516	"arg_2"	"smallint"	16	0	1	2
3466	517	"res_0"	"smallint"	16	0	0	0
3467	517	"arg_1"	"decimal"	2	0	1	1
3468	517	"arg_2"	"smallint"	16	0	1	2
3469	518	"res_0"	"smallint"	16	0	0	0
3470	518	"arg_1"	"decimal"	4	0	1	1
3471	518	"arg_2"	"smallint"	16	0	1	2
3472	519	"res_0"	"smallint"	16	0	0	0
3473	519	"arg_1"	"decimal"	9	0	1	1
3474	519	"arg_2"	"smallint"	16	0	1	2
3475	520	"res_0"	"smallint"	16	0	0	0
3476	520	"arg_1"	"decimal"	19	0	1	1
3477	520	"arg_2"	"smallint"	16	0	1	2
3478	521	"res_0"	"smallint"	16	0	0	0
3479	521	"arg_1"	"real"	24	0	1	1
3480	521	"arg_2"	"smallint"	16	0	1	2
3481	522	"res_0"	"smallint"	16	0	0	0
3482	522	"arg_1"	"double"	53	0	1	1
3483	522	"arg_2"	"smallint"	16	0	1	2
3484	523	"res_0"	"smallint"	16	0	0	0
3485	523	"arg_1"	"month_interval"	32	0	1	1
3486	523	"arg_2"	"smallint"	16	0	1	2
3487	524	"res_0"	"smallint"	16	0	0	0
3488	524	"arg_1"	"sec_interval"	13	0	1	1
3489	524	"arg_2"	"smallint"	16	0	1	2
3490	525	"res_0"	"smallint"	16	0	0	0
3491	525	"arg_1"	"time"	7	0	1	1
3492	525	"arg_2"	"smallint"	16	0	1	2
3493	526	"res_0"	"smallint"	16	0	0	0
3494	526	"arg_1"	"timetz"	7	0	1	1
3495	526	"arg_2"	"smallint"	16	0	1	2
3496	527	"res_0"	"smallint"	16	0	0	0
3497	527	"arg_1"	"date"	0	0	1	1
3498	527	"arg_2"	"smallint"	16	0	1	2
3499	528	"res_0"	"smallint"	16	0	0	0
3500	528	"arg_1"	"timestamp"	7	0	1	1
3501	528	"arg_2"	"smallint"	16	0	1	2
3502	529	"res_0"	"smallint"	16	0	0	0
3503	529	"arg_1"	"timestamptz"	7	0	1	1
3504	529	"arg_2"	"smallint"	16	0	1	2
3505	530	"res_0"	"smallint"	16	0	0	0
3506	530	"arg_1"	"blob"	0	0	1	1
3507	530	"arg_2"	"smallint"	16	0	1	2
3508	531	"res_0"	"smallint"	16	0	0	0
3509	531	"arg_1"	"geometry"	0	0	1	1
3510	531	"arg_2"	"smallint"	16	0	1	2
3511	532	"res_0"	"smallint"	16	0	0	0
3512	532	"arg_1"	"geometrya"	0	0	1	1
3513	532	"arg_2"	"smallint"	16	0	1	2
3514	533	"res_0"	"smallint"	16	0	0	0
3515	533	"arg_1"	"mbr"	0	0	1	1
3516	533	"arg_2"	"smallint"	16	0	1	2
3517	534	"res_0"	"int"	32	0	0	0
3518	534	"arg_1"	"oid"	63	0	1	1
3519	534	"arg_2"	"int"	32	0	1	2
3520	535	"res_0"	"int"	32	0	0	0
3521	535	"arg_1"	"tinyint"	8	0	1	1
3522	535	"arg_2"	"int"	32	0	1	2
3523	536	"res_0"	"int"	32	0	0	0
3524	536	"arg_1"	"smallint"	16	0	1	1
3525	536	"arg_2"	"int"	32	0	1	2
3526	537	"res_0"	"int"	32	0	0	0
3527	537	"arg_1"	"int"	32	0	1	1
3528	537	"arg_2"	"int"	32	0	1	2
3529	538	"res_0"	"int"	32	0	0	0
3530	538	"arg_1"	"bigint"	64	0	1	1
3531	538	"arg_2"	"int"	32	0	1	2
3532	539	"res_0"	"int"	32	0	0	0
3533	539	"arg_1"	"wrd"	64	0	1	1
3534	539	"arg_2"	"int"	32	0	1	2
3535	540	"res_0"	"int"	32	0	0	0
3536	540	"arg_1"	"decimal"	2	0	1	1
3537	540	"arg_2"	"int"	32	0	1	2
3538	541	"res_0"	"int"	32	0	0	0
3539	541	"arg_1"	"decimal"	4	0	1	1
3540	541	"arg_2"	"int"	32	0	1	2
3541	542	"res_0"	"int"	32	0	0	0
3542	542	"arg_1"	"decimal"	9	0	1	1
3543	542	"arg_2"	"int"	32	0	1	2
3544	543	"res_0"	"int"	32	0	0	0
3545	543	"arg_1"	"decimal"	19	0	1	1
3546	543	"arg_2"	"int"	32	0	1	2
3547	544	"res_0"	"int"	32	0	0	0
3548	544	"arg_1"	"real"	24	0	1	1
3549	544	"arg_2"	"int"	32	0	1	2
3550	545	"res_0"	"int"	32	0	0	0
3551	545	"arg_1"	"double"	53	0	1	1
3552	545	"arg_2"	"int"	32	0	1	2
3553	546	"res_0"	"int"	32	0	0	0
3554	546	"arg_1"	"month_interval"	32	0	1	1
3555	546	"arg_2"	"int"	32	0	1	2
3556	547	"res_0"	"int"	32	0	0	0
3557	547	"arg_1"	"sec_interval"	13	0	1	1
3558	547	"arg_2"	"int"	32	0	1	2
3559	548	"res_0"	"int"	32	0	0	0
3560	548	"arg_1"	"time"	7	0	1	1
3561	548	"arg_2"	"int"	32	0	1	2
3562	549	"res_0"	"int"	32	0	0	0
3563	549	"arg_1"	"timetz"	7	0	1	1
3564	549	"arg_2"	"int"	32	0	1	2
3565	550	"res_0"	"int"	32	0	0	0
3566	550	"arg_1"	"date"	0	0	1	1
3567	550	"arg_2"	"int"	32	0	1	2
3568	551	"res_0"	"int"	32	0	0	0
3569	551	"arg_1"	"timestamp"	7	0	1	1
3570	551	"arg_2"	"int"	32	0	1	2
3571	552	"res_0"	"int"	32	0	0	0
3572	552	"arg_1"	"timestamptz"	7	0	1	1
3573	552	"arg_2"	"int"	32	0	1	2
3574	553	"res_0"	"int"	32	0	0	0
3575	553	"arg_1"	"blob"	0	0	1	1
3576	553	"arg_2"	"int"	32	0	1	2
3577	554	"res_0"	"int"	32	0	0	0
3578	554	"arg_1"	"geometry"	0	0	1	1
3579	554	"arg_2"	"int"	32	0	1	2
3580	555	"res_0"	"int"	32	0	0	0
3581	555	"arg_1"	"geometrya"	0	0	1	1
3582	555	"arg_2"	"int"	32	0	1	2
3583	556	"res_0"	"int"	32	0	0	0
3584	556	"arg_1"	"mbr"	0	0	1	1
3585	556	"arg_2"	"int"	32	0	1	2
3586	557	"res_0"	"bigint"	64	0	0	0
3587	557	"arg_1"	"oid"	63	0	1	1
3588	557	"arg_2"	"bigint"	64	0	1	2
3589	558	"res_0"	"bigint"	64	0	0	0
3590	558	"arg_1"	"tinyint"	8	0	1	1
3591	558	"arg_2"	"bigint"	64	0	1	2
3592	559	"res_0"	"bigint"	64	0	0	0
3593	559	"arg_1"	"smallint"	16	0	1	1
3594	559	"arg_2"	"bigint"	64	0	1	2
3595	560	"res_0"	"bigint"	64	0	0	0
3596	560	"arg_1"	"int"	32	0	1	1
3597	560	"arg_2"	"bigint"	64	0	1	2
3598	561	"res_0"	"bigint"	64	0	0	0
3599	561	"arg_1"	"bigint"	64	0	1	1
3600	561	"arg_2"	"bigint"	64	0	1	2
3601	562	"res_0"	"bigint"	64	0	0	0
3602	562	"arg_1"	"wrd"	64	0	1	1
3603	562	"arg_2"	"bigint"	64	0	1	2
3604	563	"res_0"	"bigint"	64	0	0	0
3605	563	"arg_1"	"decimal"	2	0	1	1
3606	563	"arg_2"	"bigint"	64	0	1	2
3607	564	"res_0"	"bigint"	64	0	0	0
3608	564	"arg_1"	"decimal"	4	0	1	1
3609	564	"arg_2"	"bigint"	64	0	1	2
3610	565	"res_0"	"bigint"	64	0	0	0
3611	565	"arg_1"	"decimal"	9	0	1	1
3612	565	"arg_2"	"bigint"	64	0	1	2
3613	566	"res_0"	"bigint"	64	0	0	0
3614	566	"arg_1"	"decimal"	19	0	1	1
3615	566	"arg_2"	"bigint"	64	0	1	2
3616	567	"res_0"	"bigint"	64	0	0	0
3617	567	"arg_1"	"real"	24	0	1	1
3618	567	"arg_2"	"bigint"	64	0	1	2
3619	568	"res_0"	"bigint"	64	0	0	0
3620	568	"arg_1"	"double"	53	0	1	1
3621	568	"arg_2"	"bigint"	64	0	1	2
3622	569	"res_0"	"bigint"	64	0	0	0
3623	569	"arg_1"	"month_interval"	32	0	1	1
3624	569	"arg_2"	"bigint"	64	0	1	2
3625	570	"res_0"	"bigint"	64	0	0	0
3626	570	"arg_1"	"sec_interval"	13	0	1	1
3627	570	"arg_2"	"bigint"	64	0	1	2
3628	571	"res_0"	"bigint"	64	0	0	0
3629	571	"arg_1"	"time"	7	0	1	1
3630	571	"arg_2"	"bigint"	64	0	1	2
3631	572	"res_0"	"bigint"	64	0	0	0
3632	572	"arg_1"	"timetz"	7	0	1	1
3633	572	"arg_2"	"bigint"	64	0	1	2
3634	573	"res_0"	"bigint"	64	0	0	0
3635	573	"arg_1"	"date"	0	0	1	1
3636	573	"arg_2"	"bigint"	64	0	1	2
3637	574	"res_0"	"bigint"	64	0	0	0
3638	574	"arg_1"	"timestamp"	7	0	1	1
3639	574	"arg_2"	"bigint"	64	0	1	2
3640	575	"res_0"	"bigint"	64	0	0	0
3641	575	"arg_1"	"timestamptz"	7	0	1	1
3642	575	"arg_2"	"bigint"	64	0	1	2
3643	576	"res_0"	"bigint"	64	0	0	0
3644	576	"arg_1"	"blob"	0	0	1	1
3645	576	"arg_2"	"bigint"	64	0	1	2
3646	577	"res_0"	"bigint"	64	0	0	0
3647	577	"arg_1"	"geometry"	0	0	1	1
3648	577	"arg_2"	"bigint"	64	0	1	2
3649	578	"res_0"	"bigint"	64	0	0	0
3650	578	"arg_1"	"geometrya"	0	0	1	1
3651	578	"arg_2"	"bigint"	64	0	1	2
3652	579	"res_0"	"bigint"	64	0	0	0
3653	579	"arg_1"	"mbr"	0	0	1	1
3654	579	"arg_2"	"bigint"	64	0	1	2
3655	580	"res_0"	"wrd"	64	0	0	0
3656	580	"arg_1"	"oid"	63	0	1	1
3657	580	"arg_2"	"wrd"	64	0	1	2
3658	581	"res_0"	"wrd"	64	0	0	0
3659	581	"arg_1"	"tinyint"	8	0	1	1
3660	581	"arg_2"	"wrd"	64	0	1	2
3661	582	"res_0"	"wrd"	64	0	0	0
3662	582	"arg_1"	"smallint"	16	0	1	1
3663	582	"arg_2"	"wrd"	64	0	1	2
3664	583	"res_0"	"wrd"	64	0	0	0
3665	583	"arg_1"	"int"	32	0	1	1
3666	583	"arg_2"	"wrd"	64	0	1	2
3667	584	"res_0"	"wrd"	64	0	0	0
3668	584	"arg_1"	"bigint"	64	0	1	1
3669	584	"arg_2"	"wrd"	64	0	1	2
3670	585	"res_0"	"wrd"	64	0	0	0
3671	585	"arg_1"	"wrd"	64	0	1	1
3672	585	"arg_2"	"wrd"	64	0	1	2
3673	586	"res_0"	"wrd"	64	0	0	0
3674	586	"arg_1"	"decimal"	2	0	1	1
3675	586	"arg_2"	"wrd"	64	0	1	2
3676	587	"res_0"	"wrd"	64	0	0	0
3677	587	"arg_1"	"decimal"	4	0	1	1
3678	587	"arg_2"	"wrd"	64	0	1	2
3679	588	"res_0"	"wrd"	64	0	0	0
3680	588	"arg_1"	"decimal"	9	0	1	1
3681	588	"arg_2"	"wrd"	64	0	1	2
3682	589	"res_0"	"wrd"	64	0	0	0
3683	589	"arg_1"	"decimal"	19	0	1	1
3684	589	"arg_2"	"wrd"	64	0	1	2
3685	590	"res_0"	"wrd"	64	0	0	0
3686	590	"arg_1"	"real"	24	0	1	1
3687	590	"arg_2"	"wrd"	64	0	1	2
3688	591	"res_0"	"wrd"	64	0	0	0
3689	591	"arg_1"	"double"	53	0	1	1
3690	591	"arg_2"	"wrd"	64	0	1	2
3691	592	"res_0"	"wrd"	64	0	0	0
3692	592	"arg_1"	"month_interval"	32	0	1	1
3693	592	"arg_2"	"wrd"	64	0	1	2
3694	593	"res_0"	"wrd"	64	0	0	0
3695	593	"arg_1"	"sec_interval"	13	0	1	1
3696	593	"arg_2"	"wrd"	64	0	1	2
3697	594	"res_0"	"wrd"	64	0	0	0
3698	594	"arg_1"	"time"	7	0	1	1
3699	594	"arg_2"	"wrd"	64	0	1	2
3700	595	"res_0"	"wrd"	64	0	0	0
3701	595	"arg_1"	"timetz"	7	0	1	1
3702	595	"arg_2"	"wrd"	64	0	1	2
3703	596	"res_0"	"wrd"	64	0	0	0
3704	596	"arg_1"	"date"	0	0	1	1
3705	596	"arg_2"	"wrd"	64	0	1	2
3706	597	"res_0"	"wrd"	64	0	0	0
3707	597	"arg_1"	"timestamp"	7	0	1	1
3708	597	"arg_2"	"wrd"	64	0	1	2
3709	598	"res_0"	"wrd"	64	0	0	0
3710	598	"arg_1"	"timestamptz"	7	0	1	1
3711	598	"arg_2"	"wrd"	64	0	1	2
3712	599	"res_0"	"wrd"	64	0	0	0
3713	599	"arg_1"	"blob"	0	0	1	1
3714	599	"arg_2"	"wrd"	64	0	1	2
3715	600	"res_0"	"wrd"	64	0	0	0
3716	600	"arg_1"	"geometry"	0	0	1	1
3717	600	"arg_2"	"wrd"	64	0	1	2
3718	601	"res_0"	"wrd"	64	0	0	0
3719	601	"arg_1"	"geometrya"	0	0	1	1
3720	601	"arg_2"	"wrd"	64	0	1	2
3721	602	"res_0"	"wrd"	64	0	0	0
3722	602	"arg_1"	"mbr"	0	0	1	1
3723	602	"arg_2"	"wrd"	64	0	1	2
3724	603	"res_0"	"decimal"	2	0	0	0
3725	603	"arg_1"	"oid"	63	0	1	1
3726	603	"arg_2"	"decimal"	2	0	1	2
3727	604	"res_0"	"decimal"	2	0	0	0
3728	604	"arg_1"	"tinyint"	8	0	1	1
3729	604	"arg_2"	"decimal"	2	0	1	2
3730	605	"res_0"	"decimal"	2	0	0	0
3731	605	"arg_1"	"smallint"	16	0	1	1
3732	605	"arg_2"	"decimal"	2	0	1	2
3733	606	"res_0"	"decimal"	2	0	0	0
3734	606	"arg_1"	"int"	32	0	1	1
3735	606	"arg_2"	"decimal"	2	0	1	2
3736	607	"res_0"	"decimal"	2	0	0	0
3737	607	"arg_1"	"bigint"	64	0	1	1
3738	607	"arg_2"	"decimal"	2	0	1	2
3739	608	"res_0"	"decimal"	2	0	0	0
3740	608	"arg_1"	"wrd"	64	0	1	1
3741	608	"arg_2"	"decimal"	2	0	1	2
3742	609	"res_0"	"decimal"	2	0	0	0
3743	609	"arg_1"	"decimal"	2	0	1	1
3744	609	"arg_2"	"decimal"	2	0	1	2
3745	610	"res_0"	"decimal"	2	0	0	0
3746	610	"arg_1"	"decimal"	4	0	1	1
3747	610	"arg_2"	"decimal"	2	0	1	2
3748	611	"res_0"	"decimal"	2	0	0	0
3749	611	"arg_1"	"decimal"	9	0	1	1
3750	611	"arg_2"	"decimal"	2	0	1	2
3751	612	"res_0"	"decimal"	2	0	0	0
3752	612	"arg_1"	"decimal"	19	0	1	1
3753	612	"arg_2"	"decimal"	2	0	1	2
3754	613	"res_0"	"decimal"	2	0	0	0
3755	613	"arg_1"	"real"	24	0	1	1
3756	613	"arg_2"	"decimal"	2	0	1	2
3757	614	"res_0"	"decimal"	2	0	0	0
3758	614	"arg_1"	"double"	53	0	1	1
3759	614	"arg_2"	"decimal"	2	0	1	2
3760	615	"res_0"	"decimal"	2	0	0	0
3761	615	"arg_1"	"month_interval"	32	0	1	1
3762	615	"arg_2"	"decimal"	2	0	1	2
3763	616	"res_0"	"decimal"	2	0	0	0
3764	616	"arg_1"	"sec_interval"	13	0	1	1
3765	616	"arg_2"	"decimal"	2	0	1	2
3766	617	"res_0"	"decimal"	2	0	0	0
3767	617	"arg_1"	"time"	7	0	1	1
3768	617	"arg_2"	"decimal"	2	0	1	2
3769	618	"res_0"	"decimal"	2	0	0	0
3770	618	"arg_1"	"timetz"	7	0	1	1
3771	618	"arg_2"	"decimal"	2	0	1	2
3772	619	"res_0"	"decimal"	2	0	0	0
3773	619	"arg_1"	"date"	0	0	1	1
3774	619	"arg_2"	"decimal"	2	0	1	2
3775	620	"res_0"	"decimal"	2	0	0	0
3776	620	"arg_1"	"timestamp"	7	0	1	1
3777	620	"arg_2"	"decimal"	2	0	1	2
3778	621	"res_0"	"decimal"	2	0	0	0
3779	621	"arg_1"	"timestamptz"	7	0	1	1
3780	621	"arg_2"	"decimal"	2	0	1	2
3781	622	"res_0"	"decimal"	2	0	0	0
3782	622	"arg_1"	"blob"	0	0	1	1
3783	622	"arg_2"	"decimal"	2	0	1	2
3784	623	"res_0"	"decimal"	2	0	0	0
3785	623	"arg_1"	"geometry"	0	0	1	1
3786	623	"arg_2"	"decimal"	2	0	1	2
3787	624	"res_0"	"decimal"	2	0	0	0
3788	624	"arg_1"	"geometrya"	0	0	1	1
3789	624	"arg_2"	"decimal"	2	0	1	2
3790	625	"res_0"	"decimal"	2	0	0	0
3791	625	"arg_1"	"mbr"	0	0	1	1
3792	625	"arg_2"	"decimal"	2	0	1	2
3793	626	"res_0"	"decimal"	4	0	0	0
3794	626	"arg_1"	"oid"	63	0	1	1
3795	626	"arg_2"	"decimal"	4	0	1	2
3796	627	"res_0"	"decimal"	4	0	0	0
3797	627	"arg_1"	"tinyint"	8	0	1	1
3798	627	"arg_2"	"decimal"	4	0	1	2
3799	628	"res_0"	"decimal"	4	0	0	0
3800	628	"arg_1"	"smallint"	16	0	1	1
3801	628	"arg_2"	"decimal"	4	0	1	2
3802	629	"res_0"	"decimal"	4	0	0	0
3803	629	"arg_1"	"int"	32	0	1	1
3804	629	"arg_2"	"decimal"	4	0	1	2
3805	630	"res_0"	"decimal"	4	0	0	0
3806	630	"arg_1"	"bigint"	64	0	1	1
3807	630	"arg_2"	"decimal"	4	0	1	2
3808	631	"res_0"	"decimal"	4	0	0	0
3809	631	"arg_1"	"wrd"	64	0	1	1
3810	631	"arg_2"	"decimal"	4	0	1	2
3811	632	"res_0"	"decimal"	4	0	0	0
3812	632	"arg_1"	"decimal"	2	0	1	1
3813	632	"arg_2"	"decimal"	4	0	1	2
3814	633	"res_0"	"decimal"	4	0	0	0
3815	633	"arg_1"	"decimal"	4	0	1	1
3816	633	"arg_2"	"decimal"	4	0	1	2
3817	634	"res_0"	"decimal"	4	0	0	0
3818	634	"arg_1"	"decimal"	9	0	1	1
3819	634	"arg_2"	"decimal"	4	0	1	2
3820	635	"res_0"	"decimal"	4	0	0	0
3821	635	"arg_1"	"decimal"	19	0	1	1
3822	635	"arg_2"	"decimal"	4	0	1	2
3823	636	"res_0"	"decimal"	4	0	0	0
3824	636	"arg_1"	"real"	24	0	1	1
3825	636	"arg_2"	"decimal"	4	0	1	2
3826	637	"res_0"	"decimal"	4	0	0	0
3827	637	"arg_1"	"double"	53	0	1	1
3828	637	"arg_2"	"decimal"	4	0	1	2
3829	638	"res_0"	"decimal"	4	0	0	0
3830	638	"arg_1"	"month_interval"	32	0	1	1
3831	638	"arg_2"	"decimal"	4	0	1	2
3832	639	"res_0"	"decimal"	4	0	0	0
3833	639	"arg_1"	"sec_interval"	13	0	1	1
3834	639	"arg_2"	"decimal"	4	0	1	2
3835	640	"res_0"	"decimal"	4	0	0	0
3836	640	"arg_1"	"time"	7	0	1	1
3837	640	"arg_2"	"decimal"	4	0	1	2
3838	641	"res_0"	"decimal"	4	0	0	0
3839	641	"arg_1"	"timetz"	7	0	1	1
3840	641	"arg_2"	"decimal"	4	0	1	2
3841	642	"res_0"	"decimal"	4	0	0	0
3842	642	"arg_1"	"date"	0	0	1	1
3843	642	"arg_2"	"decimal"	4	0	1	2
3844	643	"res_0"	"decimal"	4	0	0	0
3845	643	"arg_1"	"timestamp"	7	0	1	1
3846	643	"arg_2"	"decimal"	4	0	1	2
3847	644	"res_0"	"decimal"	4	0	0	0
3848	644	"arg_1"	"timestamptz"	7	0	1	1
3849	644	"arg_2"	"decimal"	4	0	1	2
3850	645	"res_0"	"decimal"	4	0	0	0
3851	645	"arg_1"	"blob"	0	0	1	1
3852	645	"arg_2"	"decimal"	4	0	1	2
3853	646	"res_0"	"decimal"	4	0	0	0
3854	646	"arg_1"	"geometry"	0	0	1	1
3855	646	"arg_2"	"decimal"	4	0	1	2
3856	647	"res_0"	"decimal"	4	0	0	0
3857	647	"arg_1"	"geometrya"	0	0	1	1
3858	647	"arg_2"	"decimal"	4	0	1	2
3859	648	"res_0"	"decimal"	4	0	0	0
3860	648	"arg_1"	"mbr"	0	0	1	1
3861	648	"arg_2"	"decimal"	4	0	1	2
3862	649	"res_0"	"decimal"	9	0	0	0
3863	649	"arg_1"	"oid"	63	0	1	1
3864	649	"arg_2"	"decimal"	9	0	1	2
3865	650	"res_0"	"decimal"	9	0	0	0
3866	650	"arg_1"	"tinyint"	8	0	1	1
3867	650	"arg_2"	"decimal"	9	0	1	2
3868	651	"res_0"	"decimal"	9	0	0	0
3869	651	"arg_1"	"smallint"	16	0	1	1
3870	651	"arg_2"	"decimal"	9	0	1	2
3871	652	"res_0"	"decimal"	9	0	0	0
3872	652	"arg_1"	"int"	32	0	1	1
3873	652	"arg_2"	"decimal"	9	0	1	2
3874	653	"res_0"	"decimal"	9	0	0	0
3875	653	"arg_1"	"bigint"	64	0	1	1
3876	653	"arg_2"	"decimal"	9	0	1	2
3877	654	"res_0"	"decimal"	9	0	0	0
3878	654	"arg_1"	"wrd"	64	0	1	1
3879	654	"arg_2"	"decimal"	9	0	1	2
3880	655	"res_0"	"decimal"	9	0	0	0
3881	655	"arg_1"	"decimal"	2	0	1	1
3882	655	"arg_2"	"decimal"	9	0	1	2
3883	656	"res_0"	"decimal"	9	0	0	0
3884	656	"arg_1"	"decimal"	4	0	1	1
3885	656	"arg_2"	"decimal"	9	0	1	2
3886	657	"res_0"	"decimal"	9	0	0	0
3887	657	"arg_1"	"decimal"	9	0	1	1
3888	657	"arg_2"	"decimal"	9	0	1	2
3889	658	"res_0"	"decimal"	9	0	0	0
3890	658	"arg_1"	"decimal"	19	0	1	1
3891	658	"arg_2"	"decimal"	9	0	1	2
3892	659	"res_0"	"decimal"	9	0	0	0
3893	659	"arg_1"	"real"	24	0	1	1
3894	659	"arg_2"	"decimal"	9	0	1	2
3895	660	"res_0"	"decimal"	9	0	0	0
3896	660	"arg_1"	"double"	53	0	1	1
3897	660	"arg_2"	"decimal"	9	0	1	2
3898	661	"res_0"	"decimal"	9	0	0	0
3899	661	"arg_1"	"month_interval"	32	0	1	1
3900	661	"arg_2"	"decimal"	9	0	1	2
3901	662	"res_0"	"decimal"	9	0	0	0
3902	662	"arg_1"	"sec_interval"	13	0	1	1
3903	662	"arg_2"	"decimal"	9	0	1	2
3904	663	"res_0"	"decimal"	9	0	0	0
3905	663	"arg_1"	"time"	7	0	1	1
3906	663	"arg_2"	"decimal"	9	0	1	2
3907	664	"res_0"	"decimal"	9	0	0	0
3908	664	"arg_1"	"timetz"	7	0	1	1
3909	664	"arg_2"	"decimal"	9	0	1	2
3910	665	"res_0"	"decimal"	9	0	0	0
3911	665	"arg_1"	"date"	0	0	1	1
3912	665	"arg_2"	"decimal"	9	0	1	2
3913	666	"res_0"	"decimal"	9	0	0	0
3914	666	"arg_1"	"timestamp"	7	0	1	1
3915	666	"arg_2"	"decimal"	9	0	1	2
3916	667	"res_0"	"decimal"	9	0	0	0
3917	667	"arg_1"	"timestamptz"	7	0	1	1
3918	667	"arg_2"	"decimal"	9	0	1	2
3919	668	"res_0"	"decimal"	9	0	0	0
3920	668	"arg_1"	"blob"	0	0	1	1
3921	668	"arg_2"	"decimal"	9	0	1	2
3922	669	"res_0"	"decimal"	9	0	0	0
3923	669	"arg_1"	"geometry"	0	0	1	1
3924	669	"arg_2"	"decimal"	9	0	1	2
3925	670	"res_0"	"decimal"	9	0	0	0
3926	670	"arg_1"	"geometrya"	0	0	1	1
3927	670	"arg_2"	"decimal"	9	0	1	2
3928	671	"res_0"	"decimal"	9	0	0	0
3929	671	"arg_1"	"mbr"	0	0	1	1
3930	671	"arg_2"	"decimal"	9	0	1	2
3931	672	"res_0"	"decimal"	19	0	0	0
3932	672	"arg_1"	"oid"	63	0	1	1
3933	672	"arg_2"	"decimal"	19	0	1	2
3934	673	"res_0"	"decimal"	19	0	0	0
3935	673	"arg_1"	"tinyint"	8	0	1	1
3936	673	"arg_2"	"decimal"	19	0	1	2
3937	674	"res_0"	"decimal"	19	0	0	0
3938	674	"arg_1"	"smallint"	16	0	1	1
3939	674	"arg_2"	"decimal"	19	0	1	2
3940	675	"res_0"	"decimal"	19	0	0	0
3941	675	"arg_1"	"int"	32	0	1	1
3942	675	"arg_2"	"decimal"	19	0	1	2
3943	676	"res_0"	"decimal"	19	0	0	0
3944	676	"arg_1"	"bigint"	64	0	1	1
3945	676	"arg_2"	"decimal"	19	0	1	2
3946	677	"res_0"	"decimal"	19	0	0	0
3947	677	"arg_1"	"wrd"	64	0	1	1
3948	677	"arg_2"	"decimal"	19	0	1	2
3949	678	"res_0"	"decimal"	19	0	0	0
3950	678	"arg_1"	"decimal"	2	0	1	1
3951	678	"arg_2"	"decimal"	19	0	1	2
3952	679	"res_0"	"decimal"	19	0	0	0
3953	679	"arg_1"	"decimal"	4	0	1	1
3954	679	"arg_2"	"decimal"	19	0	1	2
3955	680	"res_0"	"decimal"	19	0	0	0
3956	680	"arg_1"	"decimal"	9	0	1	1
3957	680	"arg_2"	"decimal"	19	0	1	2
3958	681	"res_0"	"decimal"	19	0	0	0
3959	681	"arg_1"	"decimal"	19	0	1	1
3960	681	"arg_2"	"decimal"	19	0	1	2
3961	682	"res_0"	"decimal"	19	0	0	0
3962	682	"arg_1"	"real"	24	0	1	1
3963	682	"arg_2"	"decimal"	19	0	1	2
3964	683	"res_0"	"decimal"	19	0	0	0
3965	683	"arg_1"	"double"	53	0	1	1
3966	683	"arg_2"	"decimal"	19	0	1	2
3967	684	"res_0"	"decimal"	19	0	0	0
3968	684	"arg_1"	"month_interval"	32	0	1	1
3969	684	"arg_2"	"decimal"	19	0	1	2
3970	685	"res_0"	"decimal"	19	0	0	0
3971	685	"arg_1"	"sec_interval"	13	0	1	1
3972	685	"arg_2"	"decimal"	19	0	1	2
3973	686	"res_0"	"decimal"	19	0	0	0
3974	686	"arg_1"	"time"	7	0	1	1
3975	686	"arg_2"	"decimal"	19	0	1	2
3976	687	"res_0"	"decimal"	19	0	0	0
3977	687	"arg_1"	"timetz"	7	0	1	1
3978	687	"arg_2"	"decimal"	19	0	1	2
3979	688	"res_0"	"decimal"	19	0	0	0
3980	688	"arg_1"	"date"	0	0	1	1
3981	688	"arg_2"	"decimal"	19	0	1	2
3982	689	"res_0"	"decimal"	19	0	0	0
3983	689	"arg_1"	"timestamp"	7	0	1	1
3984	689	"arg_2"	"decimal"	19	0	1	2
3985	690	"res_0"	"decimal"	19	0	0	0
3986	690	"arg_1"	"timestamptz"	7	0	1	1
3987	690	"arg_2"	"decimal"	19	0	1	2
3988	691	"res_0"	"decimal"	19	0	0	0
3989	691	"arg_1"	"blob"	0	0	1	1
3990	691	"arg_2"	"decimal"	19	0	1	2
3991	692	"res_0"	"decimal"	19	0	0	0
3992	692	"arg_1"	"geometry"	0	0	1	1
3993	692	"arg_2"	"decimal"	19	0	1	2
3994	693	"res_0"	"decimal"	19	0	0	0
3995	693	"arg_1"	"geometrya"	0	0	1	1
3996	693	"arg_2"	"decimal"	19	0	1	2
3997	694	"res_0"	"decimal"	19	0	0	0
3998	694	"arg_1"	"mbr"	0	0	1	1
3999	694	"arg_2"	"decimal"	19	0	1	2
4000	695	"res_0"	"real"	24	0	0	0
4001	695	"arg_1"	"oid"	63	0	1	1
4002	695	"arg_2"	"real"	24	0	1	2
4003	696	"res_0"	"real"	24	0	0	0
4004	696	"arg_1"	"tinyint"	8	0	1	1
4005	696	"arg_2"	"real"	24	0	1	2
4006	697	"res_0"	"real"	24	0	0	0
4007	697	"arg_1"	"smallint"	16	0	1	1
4008	697	"arg_2"	"real"	24	0	1	2
4009	698	"res_0"	"real"	24	0	0	0
4010	698	"arg_1"	"int"	32	0	1	1
4011	698	"arg_2"	"real"	24	0	1	2
4012	699	"res_0"	"real"	24	0	0	0
4013	699	"arg_1"	"bigint"	64	0	1	1
4014	699	"arg_2"	"real"	24	0	1	2
4015	700	"res_0"	"real"	24	0	0	0
4016	700	"arg_1"	"wrd"	64	0	1	1
4017	700	"arg_2"	"real"	24	0	1	2
4018	701	"res_0"	"real"	24	0	0	0
4019	701	"arg_1"	"decimal"	2	0	1	1
4020	701	"arg_2"	"real"	24	0	1	2
4021	702	"res_0"	"real"	24	0	0	0
4022	702	"arg_1"	"decimal"	4	0	1	1
4023	702	"arg_2"	"real"	24	0	1	2
4024	703	"res_0"	"real"	24	0	0	0
4025	703	"arg_1"	"decimal"	9	0	1	1
4026	703	"arg_2"	"real"	24	0	1	2
4027	704	"res_0"	"real"	24	0	0	0
4028	704	"arg_1"	"decimal"	19	0	1	1
4029	704	"arg_2"	"real"	24	0	1	2
4030	705	"res_0"	"real"	24	0	0	0
4031	705	"arg_1"	"real"	24	0	1	1
4032	705	"arg_2"	"real"	24	0	1	2
4033	706	"res_0"	"real"	24	0	0	0
4034	706	"arg_1"	"double"	53	0	1	1
4035	706	"arg_2"	"real"	24	0	1	2
4036	707	"res_0"	"real"	24	0	0	0
4037	707	"arg_1"	"month_interval"	32	0	1	1
4038	707	"arg_2"	"real"	24	0	1	2
4039	708	"res_0"	"real"	24	0	0	0
4040	708	"arg_1"	"sec_interval"	13	0	1	1
4041	708	"arg_2"	"real"	24	0	1	2
4042	709	"res_0"	"real"	24	0	0	0
4043	709	"arg_1"	"time"	7	0	1	1
4044	709	"arg_2"	"real"	24	0	1	2
4045	710	"res_0"	"real"	24	0	0	0
4046	710	"arg_1"	"timetz"	7	0	1	1
4047	710	"arg_2"	"real"	24	0	1	2
4048	711	"res_0"	"real"	24	0	0	0
4049	711	"arg_1"	"date"	0	0	1	1
4050	711	"arg_2"	"real"	24	0	1	2
4051	712	"res_0"	"real"	24	0	0	0
4052	712	"arg_1"	"timestamp"	7	0	1	1
4053	712	"arg_2"	"real"	24	0	1	2
4054	713	"res_0"	"real"	24	0	0	0
4055	713	"arg_1"	"timestamptz"	7	0	1	1
4056	713	"arg_2"	"real"	24	0	1	2
4057	714	"res_0"	"real"	24	0	0	0
4058	714	"arg_1"	"blob"	0	0	1	1
4059	714	"arg_2"	"real"	24	0	1	2
4060	715	"res_0"	"real"	24	0	0	0
4061	715	"arg_1"	"geometry"	0	0	1	1
4062	715	"arg_2"	"real"	24	0	1	2
4063	716	"res_0"	"real"	24	0	0	0
4064	716	"arg_1"	"geometrya"	0	0	1	1
4065	716	"arg_2"	"real"	24	0	1	2
4066	717	"res_0"	"real"	24	0	0	0
4067	717	"arg_1"	"mbr"	0	0	1	1
4068	717	"arg_2"	"real"	24	0	1	2
4069	718	"res_0"	"double"	53	0	0	0
4070	718	"arg_1"	"oid"	63	0	1	1
4071	718	"arg_2"	"double"	53	0	1	2
4072	719	"res_0"	"double"	53	0	0	0
4073	719	"arg_1"	"tinyint"	8	0	1	1
4074	719	"arg_2"	"double"	53	0	1	2
4075	720	"res_0"	"double"	53	0	0	0
4076	720	"arg_1"	"smallint"	16	0	1	1
4077	720	"arg_2"	"double"	53	0	1	2
4078	721	"res_0"	"double"	53	0	0	0
4079	721	"arg_1"	"int"	32	0	1	1
4080	721	"arg_2"	"double"	53	0	1	2
4081	722	"res_0"	"double"	53	0	0	0
4082	722	"arg_1"	"bigint"	64	0	1	1
4083	722	"arg_2"	"double"	53	0	1	2
4084	723	"res_0"	"double"	53	0	0	0
4085	723	"arg_1"	"wrd"	64	0	1	1
4086	723	"arg_2"	"double"	53	0	1	2
4087	724	"res_0"	"double"	53	0	0	0
4088	724	"arg_1"	"decimal"	2	0	1	1
4089	724	"arg_2"	"double"	53	0	1	2
4090	725	"res_0"	"double"	53	0	0	0
4091	725	"arg_1"	"decimal"	4	0	1	1
4092	725	"arg_2"	"double"	53	0	1	2
4093	726	"res_0"	"double"	53	0	0	0
4094	726	"arg_1"	"decimal"	9	0	1	1
4095	726	"arg_2"	"double"	53	0	1	2
4096	727	"res_0"	"double"	53	0	0	0
4097	727	"arg_1"	"decimal"	19	0	1	1
4098	727	"arg_2"	"double"	53	0	1	2
4099	728	"res_0"	"double"	53	0	0	0
4100	728	"arg_1"	"real"	24	0	1	1
4101	728	"arg_2"	"double"	53	0	1	2
4102	729	"res_0"	"double"	53	0	0	0
4103	729	"arg_1"	"double"	53	0	1	1
4104	729	"arg_2"	"double"	53	0	1	2
4105	730	"res_0"	"double"	53	0	0	0
4106	730	"arg_1"	"month_interval"	32	0	1	1
4107	730	"arg_2"	"double"	53	0	1	2
4108	731	"res_0"	"double"	53	0	0	0
4109	731	"arg_1"	"sec_interval"	13	0	1	1
4110	731	"arg_2"	"double"	53	0	1	2
4111	732	"res_0"	"double"	53	0	0	0
4112	732	"arg_1"	"time"	7	0	1	1
4113	732	"arg_2"	"double"	53	0	1	2
4114	733	"res_0"	"double"	53	0	0	0
4115	733	"arg_1"	"timetz"	7	0	1	1
4116	733	"arg_2"	"double"	53	0	1	2
4117	734	"res_0"	"double"	53	0	0	0
4118	734	"arg_1"	"date"	0	0	1	1
4119	734	"arg_2"	"double"	53	0	1	2
4120	735	"res_0"	"double"	53	0	0	0
4121	735	"arg_1"	"timestamp"	7	0	1	1
4122	735	"arg_2"	"double"	53	0	1	2
4123	736	"res_0"	"double"	53	0	0	0
4124	736	"arg_1"	"timestamptz"	7	0	1	1
4125	736	"arg_2"	"double"	53	0	1	2
4126	737	"res_0"	"double"	53	0	0	0
4127	737	"arg_1"	"blob"	0	0	1	1
4128	737	"arg_2"	"double"	53	0	1	2
4129	738	"res_0"	"double"	53	0	0	0
4130	738	"arg_1"	"geometry"	0	0	1	1
4131	738	"arg_2"	"double"	53	0	1	2
4132	739	"res_0"	"double"	53	0	0	0
4133	739	"arg_1"	"geometrya"	0	0	1	1
4134	739	"arg_2"	"double"	53	0	1	2
4135	740	"res_0"	"double"	53	0	0	0
4136	740	"arg_1"	"mbr"	0	0	1	1
4137	740	"arg_2"	"double"	53	0	1	2
4138	741	"res_0"	"month_interval"	32	0	0	0
4139	741	"arg_1"	"oid"	63	0	1	1
4140	741	"arg_2"	"month_interval"	32	0	1	2
4141	742	"res_0"	"month_interval"	32	0	0	0
4142	742	"arg_1"	"tinyint"	8	0	1	1
4143	742	"arg_2"	"month_interval"	32	0	1	2
4144	743	"res_0"	"month_interval"	32	0	0	0
4145	743	"arg_1"	"smallint"	16	0	1	1
4146	743	"arg_2"	"month_interval"	32	0	1	2
4147	744	"res_0"	"month_interval"	32	0	0	0
4148	744	"arg_1"	"int"	32	0	1	1
4149	744	"arg_2"	"month_interval"	32	0	1	2
4150	745	"res_0"	"month_interval"	32	0	0	0
4151	745	"arg_1"	"bigint"	64	0	1	1
4152	745	"arg_2"	"month_interval"	32	0	1	2
4153	746	"res_0"	"month_interval"	32	0	0	0
4154	746	"arg_1"	"wrd"	64	0	1	1
4155	746	"arg_2"	"month_interval"	32	0	1	2
4156	747	"res_0"	"month_interval"	32	0	0	0
4157	747	"arg_1"	"decimal"	2	0	1	1
4158	747	"arg_2"	"month_interval"	32	0	1	2
4159	748	"res_0"	"month_interval"	32	0	0	0
4160	748	"arg_1"	"decimal"	4	0	1	1
4161	748	"arg_2"	"month_interval"	32	0	1	2
4162	749	"res_0"	"month_interval"	32	0	0	0
4163	749	"arg_1"	"decimal"	9	0	1	1
4164	749	"arg_2"	"month_interval"	32	0	1	2
4165	750	"res_0"	"month_interval"	32	0	0	0
4166	750	"arg_1"	"decimal"	19	0	1	1
4167	750	"arg_2"	"month_interval"	32	0	1	2
4168	751	"res_0"	"month_interval"	32	0	0	0
4169	751	"arg_1"	"real"	24	0	1	1
4170	751	"arg_2"	"month_interval"	32	0	1	2
4171	752	"res_0"	"month_interval"	32	0	0	0
4172	752	"arg_1"	"double"	53	0	1	1
4173	752	"arg_2"	"month_interval"	32	0	1	2
4174	753	"res_0"	"month_interval"	32	0	0	0
4175	753	"arg_1"	"month_interval"	32	0	1	1
4176	753	"arg_2"	"month_interval"	32	0	1	2
4177	754	"res_0"	"month_interval"	32	0	0	0
4178	754	"arg_1"	"sec_interval"	13	0	1	1
4179	754	"arg_2"	"month_interval"	32	0	1	2
4180	755	"res_0"	"month_interval"	32	0	0	0
4181	755	"arg_1"	"time"	7	0	1	1
4182	755	"arg_2"	"month_interval"	32	0	1	2
4183	756	"res_0"	"month_interval"	32	0	0	0
4184	756	"arg_1"	"timetz"	7	0	1	1
4185	756	"arg_2"	"month_interval"	32	0	1	2
4186	757	"res_0"	"month_interval"	32	0	0	0
4187	757	"arg_1"	"date"	0	0	1	1
4188	757	"arg_2"	"month_interval"	32	0	1	2
4189	758	"res_0"	"month_interval"	32	0	0	0
4190	758	"arg_1"	"timestamp"	7	0	1	1
4191	758	"arg_2"	"month_interval"	32	0	1	2
4192	759	"res_0"	"month_interval"	32	0	0	0
4193	759	"arg_1"	"timestamptz"	7	0	1	1
4194	759	"arg_2"	"month_interval"	32	0	1	2
4195	760	"res_0"	"month_interval"	32	0	0	0
4196	760	"arg_1"	"blob"	0	0	1	1
4197	760	"arg_2"	"month_interval"	32	0	1	2
4198	761	"res_0"	"month_interval"	32	0	0	0
4199	761	"arg_1"	"geometry"	0	0	1	1
4200	761	"arg_2"	"month_interval"	32	0	1	2
4201	762	"res_0"	"month_interval"	32	0	0	0
4202	762	"arg_1"	"geometrya"	0	0	1	1
4203	762	"arg_2"	"month_interval"	32	0	1	2
4204	763	"res_0"	"month_interval"	32	0	0	0
4205	763	"arg_1"	"mbr"	0	0	1	1
4206	763	"arg_2"	"month_interval"	32	0	1	2
4207	764	"res_0"	"sec_interval"	13	0	0	0
4208	764	"arg_1"	"oid"	63	0	1	1
4209	764	"arg_2"	"sec_interval"	13	0	1	2
4210	765	"res_0"	"sec_interval"	13	0	0	0
4211	765	"arg_1"	"tinyint"	8	0	1	1
4212	765	"arg_2"	"sec_interval"	13	0	1	2
4213	766	"res_0"	"sec_interval"	13	0	0	0
4214	766	"arg_1"	"smallint"	16	0	1	1
4215	766	"arg_2"	"sec_interval"	13	0	1	2
4216	767	"res_0"	"sec_interval"	13	0	0	0
4217	767	"arg_1"	"int"	32	0	1	1
4218	767	"arg_2"	"sec_interval"	13	0	1	2
4219	768	"res_0"	"sec_interval"	13	0	0	0
4220	768	"arg_1"	"bigint"	64	0	1	1
4221	768	"arg_2"	"sec_interval"	13	0	1	2
4222	769	"res_0"	"sec_interval"	13	0	0	0
4223	769	"arg_1"	"wrd"	64	0	1	1
4224	769	"arg_2"	"sec_interval"	13	0	1	2
4225	770	"res_0"	"sec_interval"	13	0	0	0
4226	770	"arg_1"	"decimal"	2	0	1	1
4227	770	"arg_2"	"sec_interval"	13	0	1	2
4228	771	"res_0"	"sec_interval"	13	0	0	0
4229	771	"arg_1"	"decimal"	4	0	1	1
4230	771	"arg_2"	"sec_interval"	13	0	1	2
4231	772	"res_0"	"sec_interval"	13	0	0	0
4232	772	"arg_1"	"decimal"	9	0	1	1
4233	772	"arg_2"	"sec_interval"	13	0	1	2
4234	773	"res_0"	"sec_interval"	13	0	0	0
4235	773	"arg_1"	"decimal"	19	0	1	1
4236	773	"arg_2"	"sec_interval"	13	0	1	2
4237	774	"res_0"	"sec_interval"	13	0	0	0
4238	774	"arg_1"	"real"	24	0	1	1
4239	774	"arg_2"	"sec_interval"	13	0	1	2
4240	775	"res_0"	"sec_interval"	13	0	0	0
4241	775	"arg_1"	"double"	53	0	1	1
4242	775	"arg_2"	"sec_interval"	13	0	1	2
4243	776	"res_0"	"sec_interval"	13	0	0	0
4244	776	"arg_1"	"month_interval"	32	0	1	1
4245	776	"arg_2"	"sec_interval"	13	0	1	2
4246	777	"res_0"	"sec_interval"	13	0	0	0
4247	777	"arg_1"	"sec_interval"	13	0	1	1
4248	777	"arg_2"	"sec_interval"	13	0	1	2
4249	778	"res_0"	"sec_interval"	13	0	0	0
4250	778	"arg_1"	"time"	7	0	1	1
4251	778	"arg_2"	"sec_interval"	13	0	1	2
4252	779	"res_0"	"sec_interval"	13	0	0	0
4253	779	"arg_1"	"timetz"	7	0	1	1
4254	779	"arg_2"	"sec_interval"	13	0	1	2
4255	780	"res_0"	"sec_interval"	13	0	0	0
4256	780	"arg_1"	"date"	0	0	1	1
4257	780	"arg_2"	"sec_interval"	13	0	1	2
4258	781	"res_0"	"sec_interval"	13	0	0	0
4259	781	"arg_1"	"timestamp"	7	0	1	1
4260	781	"arg_2"	"sec_interval"	13	0	1	2
4261	782	"res_0"	"sec_interval"	13	0	0	0
4262	782	"arg_1"	"timestamptz"	7	0	1	1
4263	782	"arg_2"	"sec_interval"	13	0	1	2
4264	783	"res_0"	"sec_interval"	13	0	0	0
4265	783	"arg_1"	"blob"	0	0	1	1
4266	783	"arg_2"	"sec_interval"	13	0	1	2
4267	784	"res_0"	"sec_interval"	13	0	0	0
4268	784	"arg_1"	"geometry"	0	0	1	1
4269	784	"arg_2"	"sec_interval"	13	0	1	2
4270	785	"res_0"	"sec_interval"	13	0	0	0
4271	785	"arg_1"	"geometrya"	0	0	1	1
4272	785	"arg_2"	"sec_interval"	13	0	1	2
4273	786	"res_0"	"sec_interval"	13	0	0	0
4274	786	"arg_1"	"mbr"	0	0	1	1
4275	786	"arg_2"	"sec_interval"	13	0	1	2
4276	787	"res_0"	"time"	7	0	0	0
4277	787	"arg_1"	"oid"	63	0	1	1
4278	787	"arg_2"	"time"	7	0	1	2
4279	788	"res_0"	"time"	7	0	0	0
4280	788	"arg_1"	"tinyint"	8	0	1	1
4281	788	"arg_2"	"time"	7	0	1	2
4282	789	"res_0"	"time"	7	0	0	0
4283	789	"arg_1"	"smallint"	16	0	1	1
4284	789	"arg_2"	"time"	7	0	1	2
4285	790	"res_0"	"time"	7	0	0	0
4286	790	"arg_1"	"int"	32	0	1	1
4287	790	"arg_2"	"time"	7	0	1	2
4288	791	"res_0"	"time"	7	0	0	0
4289	791	"arg_1"	"bigint"	64	0	1	1
4290	791	"arg_2"	"time"	7	0	1	2
4291	792	"res_0"	"time"	7	0	0	0
4292	792	"arg_1"	"wrd"	64	0	1	1
4293	792	"arg_2"	"time"	7	0	1	2
4294	793	"res_0"	"time"	7	0	0	0
4295	793	"arg_1"	"decimal"	2	0	1	1
4296	793	"arg_2"	"time"	7	0	1	2
4297	794	"res_0"	"time"	7	0	0	0
4298	794	"arg_1"	"decimal"	4	0	1	1
4299	794	"arg_2"	"time"	7	0	1	2
4300	795	"res_0"	"time"	7	0	0	0
4301	795	"arg_1"	"decimal"	9	0	1	1
4302	795	"arg_2"	"time"	7	0	1	2
4303	796	"res_0"	"time"	7	0	0	0
4304	796	"arg_1"	"decimal"	19	0	1	1
4305	796	"arg_2"	"time"	7	0	1	2
4306	797	"res_0"	"time"	7	0	0	0
4307	797	"arg_1"	"real"	24	0	1	1
4308	797	"arg_2"	"time"	7	0	1	2
4309	798	"res_0"	"time"	7	0	0	0
4310	798	"arg_1"	"double"	53	0	1	1
4311	798	"arg_2"	"time"	7	0	1	2
4312	799	"res_0"	"time"	7	0	0	0
4313	799	"arg_1"	"month_interval"	32	0	1	1
4314	799	"arg_2"	"time"	7	0	1	2
4315	800	"res_0"	"time"	7	0	0	0
4316	800	"arg_1"	"sec_interval"	13	0	1	1
4317	800	"arg_2"	"time"	7	0	1	2
4318	801	"res_0"	"time"	7	0	0	0
4319	801	"arg_1"	"time"	7	0	1	1
4320	801	"arg_2"	"time"	7	0	1	2
4321	802	"res_0"	"time"	7	0	0	0
4322	802	"arg_1"	"timetz"	7	0	1	1
4323	802	"arg_2"	"time"	7	0	1	2
4324	803	"res_0"	"time"	7	0	0	0
4325	803	"arg_1"	"date"	0	0	1	1
4326	803	"arg_2"	"time"	7	0	1	2
4327	804	"res_0"	"time"	7	0	0	0
4328	804	"arg_1"	"timestamp"	7	0	1	1
4329	804	"arg_2"	"time"	7	0	1	2
4330	805	"res_0"	"time"	7	0	0	0
4331	805	"arg_1"	"timestamptz"	7	0	1	1
4332	805	"arg_2"	"time"	7	0	1	2
4333	806	"res_0"	"time"	7	0	0	0
4334	806	"arg_1"	"blob"	0	0	1	1
4335	806	"arg_2"	"time"	7	0	1	2
4336	807	"res_0"	"time"	7	0	0	0
4337	807	"arg_1"	"geometry"	0	0	1	1
4338	807	"arg_2"	"time"	7	0	1	2
4339	808	"res_0"	"time"	7	0	0	0
4340	808	"arg_1"	"geometrya"	0	0	1	1
4341	808	"arg_2"	"time"	7	0	1	2
4342	809	"res_0"	"time"	7	0	0	0
4343	809	"arg_1"	"mbr"	0	0	1	1
4344	809	"arg_2"	"time"	7	0	1	2
4345	810	"res_0"	"timetz"	7	0	0	0
4346	810	"arg_1"	"oid"	63	0	1	1
4347	810	"arg_2"	"timetz"	7	0	1	2
4348	811	"res_0"	"timetz"	7	0	0	0
4349	811	"arg_1"	"tinyint"	8	0	1	1
4350	811	"arg_2"	"timetz"	7	0	1	2
4351	812	"res_0"	"timetz"	7	0	0	0
4352	812	"arg_1"	"smallint"	16	0	1	1
4353	812	"arg_2"	"timetz"	7	0	1	2
4354	813	"res_0"	"timetz"	7	0	0	0
4355	813	"arg_1"	"int"	32	0	1	1
4356	813	"arg_2"	"timetz"	7	0	1	2
4357	814	"res_0"	"timetz"	7	0	0	0
4358	814	"arg_1"	"bigint"	64	0	1	1
4359	814	"arg_2"	"timetz"	7	0	1	2
4360	815	"res_0"	"timetz"	7	0	0	0
4361	815	"arg_1"	"wrd"	64	0	1	1
4362	815	"arg_2"	"timetz"	7	0	1	2
4363	816	"res_0"	"timetz"	7	0	0	0
4364	816	"arg_1"	"decimal"	2	0	1	1
4365	816	"arg_2"	"timetz"	7	0	1	2
4366	817	"res_0"	"timetz"	7	0	0	0
4367	817	"arg_1"	"decimal"	4	0	1	1
4368	817	"arg_2"	"timetz"	7	0	1	2
4369	818	"res_0"	"timetz"	7	0	0	0
4370	818	"arg_1"	"decimal"	9	0	1	1
4371	818	"arg_2"	"timetz"	7	0	1	2
4372	819	"res_0"	"timetz"	7	0	0	0
4373	819	"arg_1"	"decimal"	19	0	1	1
4374	819	"arg_2"	"timetz"	7	0	1	2
4375	820	"res_0"	"timetz"	7	0	0	0
4376	820	"arg_1"	"real"	24	0	1	1
4377	820	"arg_2"	"timetz"	7	0	1	2
4378	821	"res_0"	"timetz"	7	0	0	0
4379	821	"arg_1"	"double"	53	0	1	1
4380	821	"arg_2"	"timetz"	7	0	1	2
4381	822	"res_0"	"timetz"	7	0	0	0
4382	822	"arg_1"	"month_interval"	32	0	1	1
4383	822	"arg_2"	"timetz"	7	0	1	2
4384	823	"res_0"	"timetz"	7	0	0	0
4385	823	"arg_1"	"sec_interval"	13	0	1	1
4386	823	"arg_2"	"timetz"	7	0	1	2
4387	824	"res_0"	"timetz"	7	0	0	0
4388	824	"arg_1"	"time"	7	0	1	1
4389	824	"arg_2"	"timetz"	7	0	1	2
4390	825	"res_0"	"timetz"	7	0	0	0
4391	825	"arg_1"	"timetz"	7	0	1	1
4392	825	"arg_2"	"timetz"	7	0	1	2
4393	826	"res_0"	"timetz"	7	0	0	0
4394	826	"arg_1"	"date"	0	0	1	1
4395	826	"arg_2"	"timetz"	7	0	1	2
4396	827	"res_0"	"timetz"	7	0	0	0
4397	827	"arg_1"	"timestamp"	7	0	1	1
4398	827	"arg_2"	"timetz"	7	0	1	2
4399	828	"res_0"	"timetz"	7	0	0	0
4400	828	"arg_1"	"timestamptz"	7	0	1	1
4401	828	"arg_2"	"timetz"	7	0	1	2
4402	829	"res_0"	"timetz"	7	0	0	0
4403	829	"arg_1"	"blob"	0	0	1	1
4404	829	"arg_2"	"timetz"	7	0	1	2
4405	830	"res_0"	"timetz"	7	0	0	0
4406	830	"arg_1"	"geometry"	0	0	1	1
4407	830	"arg_2"	"timetz"	7	0	1	2
4408	831	"res_0"	"timetz"	7	0	0	0
4409	831	"arg_1"	"geometrya"	0	0	1	1
4410	831	"arg_2"	"timetz"	7	0	1	2
4411	832	"res_0"	"timetz"	7	0	0	0
4412	832	"arg_1"	"mbr"	0	0	1	1
4413	832	"arg_2"	"timetz"	7	0	1	2
4414	833	"res_0"	"date"	0	0	0	0
4415	833	"arg_1"	"oid"	63	0	1	1
4416	833	"arg_2"	"date"	0	0	1	2
4417	834	"res_0"	"date"	0	0	0	0
4418	834	"arg_1"	"tinyint"	8	0	1	1
4419	834	"arg_2"	"date"	0	0	1	2
4420	835	"res_0"	"date"	0	0	0	0
4421	835	"arg_1"	"smallint"	16	0	1	1
4422	835	"arg_2"	"date"	0	0	1	2
4423	836	"res_0"	"date"	0	0	0	0
4424	836	"arg_1"	"int"	32	0	1	1
4425	836	"arg_2"	"date"	0	0	1	2
4426	837	"res_0"	"date"	0	0	0	0
4427	837	"arg_1"	"bigint"	64	0	1	1
4428	837	"arg_2"	"date"	0	0	1	2
4429	838	"res_0"	"date"	0	0	0	0
4430	838	"arg_1"	"wrd"	64	0	1	1
4431	838	"arg_2"	"date"	0	0	1	2
4432	839	"res_0"	"date"	0	0	0	0
4433	839	"arg_1"	"decimal"	2	0	1	1
4434	839	"arg_2"	"date"	0	0	1	2
4435	840	"res_0"	"date"	0	0	0	0
4436	840	"arg_1"	"decimal"	4	0	1	1
4437	840	"arg_2"	"date"	0	0	1	2
4438	841	"res_0"	"date"	0	0	0	0
4439	841	"arg_1"	"decimal"	9	0	1	1
4440	841	"arg_2"	"date"	0	0	1	2
4441	842	"res_0"	"date"	0	0	0	0
4442	842	"arg_1"	"decimal"	19	0	1	1
4443	842	"arg_2"	"date"	0	0	1	2
4444	843	"res_0"	"date"	0	0	0	0
4445	843	"arg_1"	"real"	24	0	1	1
4446	843	"arg_2"	"date"	0	0	1	2
4447	844	"res_0"	"date"	0	0	0	0
4448	844	"arg_1"	"double"	53	0	1	1
4449	844	"arg_2"	"date"	0	0	1	2
4450	845	"res_0"	"date"	0	0	0	0
4451	845	"arg_1"	"month_interval"	32	0	1	1
4452	845	"arg_2"	"date"	0	0	1	2
4453	846	"res_0"	"date"	0	0	0	0
4454	846	"arg_1"	"sec_interval"	13	0	1	1
4455	846	"arg_2"	"date"	0	0	1	2
4456	847	"res_0"	"date"	0	0	0	0
4457	847	"arg_1"	"time"	7	0	1	1
4458	847	"arg_2"	"date"	0	0	1	2
4459	848	"res_0"	"date"	0	0	0	0
4460	848	"arg_1"	"timetz"	7	0	1	1
4461	848	"arg_2"	"date"	0	0	1	2
4462	849	"res_0"	"date"	0	0	0	0
4463	849	"arg_1"	"date"	0	0	1	1
4464	849	"arg_2"	"date"	0	0	1	2
4465	850	"res_0"	"date"	0	0	0	0
4466	850	"arg_1"	"timestamp"	7	0	1	1
4467	850	"arg_2"	"date"	0	0	1	2
4468	851	"res_0"	"date"	0	0	0	0
4469	851	"arg_1"	"timestamptz"	7	0	1	1
4470	851	"arg_2"	"date"	0	0	1	2
4471	852	"res_0"	"date"	0	0	0	0
4472	852	"arg_1"	"blob"	0	0	1	1
4473	852	"arg_2"	"date"	0	0	1	2
4474	853	"res_0"	"date"	0	0	0	0
4475	853	"arg_1"	"geometry"	0	0	1	1
4476	853	"arg_2"	"date"	0	0	1	2
4477	854	"res_0"	"date"	0	0	0	0
4478	854	"arg_1"	"geometrya"	0	0	1	1
4479	854	"arg_2"	"date"	0	0	1	2
4480	855	"res_0"	"date"	0	0	0	0
4481	855	"arg_1"	"mbr"	0	0	1	1
4482	855	"arg_2"	"date"	0	0	1	2
4483	856	"res_0"	"timestamp"	7	0	0	0
4484	856	"arg_1"	"oid"	63	0	1	1
4485	856	"arg_2"	"timestamp"	7	0	1	2
4486	857	"res_0"	"timestamp"	7	0	0	0
4487	857	"arg_1"	"tinyint"	8	0	1	1
4488	857	"arg_2"	"timestamp"	7	0	1	2
4489	858	"res_0"	"timestamp"	7	0	0	0
4490	858	"arg_1"	"smallint"	16	0	1	1
4491	858	"arg_2"	"timestamp"	7	0	1	2
4492	859	"res_0"	"timestamp"	7	0	0	0
4493	859	"arg_1"	"int"	32	0	1	1
4494	859	"arg_2"	"timestamp"	7	0	1	2
4495	860	"res_0"	"timestamp"	7	0	0	0
4496	860	"arg_1"	"bigint"	64	0	1	1
4497	860	"arg_2"	"timestamp"	7	0	1	2
4498	861	"res_0"	"timestamp"	7	0	0	0
4499	861	"arg_1"	"wrd"	64	0	1	1
4500	861	"arg_2"	"timestamp"	7	0	1	2
4501	862	"res_0"	"timestamp"	7	0	0	0
4502	862	"arg_1"	"decimal"	2	0	1	1
4503	862	"arg_2"	"timestamp"	7	0	1	2
4504	863	"res_0"	"timestamp"	7	0	0	0
4505	863	"arg_1"	"decimal"	4	0	1	1
4506	863	"arg_2"	"timestamp"	7	0	1	2
4507	864	"res_0"	"timestamp"	7	0	0	0
4508	864	"arg_1"	"decimal"	9	0	1	1
4509	864	"arg_2"	"timestamp"	7	0	1	2
4510	865	"res_0"	"timestamp"	7	0	0	0
4511	865	"arg_1"	"decimal"	19	0	1	1
4512	865	"arg_2"	"timestamp"	7	0	1	2
4513	866	"res_0"	"timestamp"	7	0	0	0
4514	866	"arg_1"	"real"	24	0	1	1
4515	866	"arg_2"	"timestamp"	7	0	1	2
4516	867	"res_0"	"timestamp"	7	0	0	0
4517	867	"arg_1"	"double"	53	0	1	1
4518	867	"arg_2"	"timestamp"	7	0	1	2
4519	868	"res_0"	"timestamp"	7	0	0	0
4520	868	"arg_1"	"month_interval"	32	0	1	1
4521	868	"arg_2"	"timestamp"	7	0	1	2
4522	869	"res_0"	"timestamp"	7	0	0	0
4523	869	"arg_1"	"sec_interval"	13	0	1	1
4524	869	"arg_2"	"timestamp"	7	0	1	2
4525	870	"res_0"	"timestamp"	7	0	0	0
4526	870	"arg_1"	"time"	7	0	1	1
4527	870	"arg_2"	"timestamp"	7	0	1	2
4528	871	"res_0"	"timestamp"	7	0	0	0
4529	871	"arg_1"	"timetz"	7	0	1	1
4530	871	"arg_2"	"timestamp"	7	0	1	2
4531	872	"res_0"	"timestamp"	7	0	0	0
4532	872	"arg_1"	"date"	0	0	1	1
4533	872	"arg_2"	"timestamp"	7	0	1	2
4534	873	"res_0"	"timestamp"	7	0	0	0
4535	873	"arg_1"	"timestamp"	7	0	1	1
4536	873	"arg_2"	"timestamp"	7	0	1	2
4537	874	"res_0"	"timestamp"	7	0	0	0
4538	874	"arg_1"	"timestamptz"	7	0	1	1
4539	874	"arg_2"	"timestamp"	7	0	1	2
4540	875	"res_0"	"timestamp"	7	0	0	0
4541	875	"arg_1"	"blob"	0	0	1	1
4542	875	"arg_2"	"timestamp"	7	0	1	2
4543	876	"res_0"	"timestamp"	7	0	0	0
4544	876	"arg_1"	"geometry"	0	0	1	1
4545	876	"arg_2"	"timestamp"	7	0	1	2
4546	877	"res_0"	"timestamp"	7	0	0	0
4547	877	"arg_1"	"geometrya"	0	0	1	1
4548	877	"arg_2"	"timestamp"	7	0	1	2
4549	878	"res_0"	"timestamp"	7	0	0	0
4550	878	"arg_1"	"mbr"	0	0	1	1
4551	878	"arg_2"	"timestamp"	7	0	1	2
4552	879	"res_0"	"timestamptz"	7	0	0	0
4553	879	"arg_1"	"oid"	63	0	1	1
4554	879	"arg_2"	"timestamptz"	7	0	1	2
4555	880	"res_0"	"timestamptz"	7	0	0	0
4556	880	"arg_1"	"tinyint"	8	0	1	1
4557	880	"arg_2"	"timestamptz"	7	0	1	2
4558	881	"res_0"	"timestamptz"	7	0	0	0
4559	881	"arg_1"	"smallint"	16	0	1	1
4560	881	"arg_2"	"timestamptz"	7	0	1	2
4561	882	"res_0"	"timestamptz"	7	0	0	0
4562	882	"arg_1"	"int"	32	0	1	1
4563	882	"arg_2"	"timestamptz"	7	0	1	2
4564	883	"res_0"	"timestamptz"	7	0	0	0
4565	883	"arg_1"	"bigint"	64	0	1	1
4566	883	"arg_2"	"timestamptz"	7	0	1	2
4567	884	"res_0"	"timestamptz"	7	0	0	0
4568	884	"arg_1"	"wrd"	64	0	1	1
4569	884	"arg_2"	"timestamptz"	7	0	1	2
4570	885	"res_0"	"timestamptz"	7	0	0	0
4571	885	"arg_1"	"decimal"	2	0	1	1
4572	885	"arg_2"	"timestamptz"	7	0	1	2
4573	886	"res_0"	"timestamptz"	7	0	0	0
4574	886	"arg_1"	"decimal"	4	0	1	1
4575	886	"arg_2"	"timestamptz"	7	0	1	2
4576	887	"res_0"	"timestamptz"	7	0	0	0
4577	887	"arg_1"	"decimal"	9	0	1	1
4578	887	"arg_2"	"timestamptz"	7	0	1	2
4579	888	"res_0"	"timestamptz"	7	0	0	0
4580	888	"arg_1"	"decimal"	19	0	1	1
4581	888	"arg_2"	"timestamptz"	7	0	1	2
4582	889	"res_0"	"timestamptz"	7	0	0	0
4583	889	"arg_1"	"real"	24	0	1	1
4584	889	"arg_2"	"timestamptz"	7	0	1	2
4585	890	"res_0"	"timestamptz"	7	0	0	0
4586	890	"arg_1"	"double"	53	0	1	1
4587	890	"arg_2"	"timestamptz"	7	0	1	2
4588	891	"res_0"	"timestamptz"	7	0	0	0
4589	891	"arg_1"	"month_interval"	32	0	1	1
4590	891	"arg_2"	"timestamptz"	7	0	1	2
4591	892	"res_0"	"timestamptz"	7	0	0	0
4592	892	"arg_1"	"sec_interval"	13	0	1	1
4593	892	"arg_2"	"timestamptz"	7	0	1	2
4594	893	"res_0"	"timestamptz"	7	0	0	0
4595	893	"arg_1"	"time"	7	0	1	1
4596	893	"arg_2"	"timestamptz"	7	0	1	2
4597	894	"res_0"	"timestamptz"	7	0	0	0
4598	894	"arg_1"	"timetz"	7	0	1	1
4599	894	"arg_2"	"timestamptz"	7	0	1	2
4600	895	"res_0"	"timestamptz"	7	0	0	0
4601	895	"arg_1"	"date"	0	0	1	1
4602	895	"arg_2"	"timestamptz"	7	0	1	2
4603	896	"res_0"	"timestamptz"	7	0	0	0
4604	896	"arg_1"	"timestamp"	7	0	1	1
4605	896	"arg_2"	"timestamptz"	7	0	1	2
4606	897	"res_0"	"timestamptz"	7	0	0	0
4607	897	"arg_1"	"timestamptz"	7	0	1	1
4608	897	"arg_2"	"timestamptz"	7	0	1	2
4609	898	"res_0"	"timestamptz"	7	0	0	0
4610	898	"arg_1"	"blob"	0	0	1	1
4611	898	"arg_2"	"timestamptz"	7	0	1	2
4612	899	"res_0"	"timestamptz"	7	0	0	0
4613	899	"arg_1"	"geometry"	0	0	1	1
4614	899	"arg_2"	"timestamptz"	7	0	1	2
4615	900	"res_0"	"timestamptz"	7	0	0	0
4616	900	"arg_1"	"geometrya"	0	0	1	1
4617	900	"arg_2"	"timestamptz"	7	0	1	2
4618	901	"res_0"	"timestamptz"	7	0	0	0
4619	901	"arg_1"	"mbr"	0	0	1	1
4620	901	"arg_2"	"timestamptz"	7	0	1	2
4621	902	"res_0"	"blob"	0	0	0	0
4622	902	"arg_1"	"oid"	63	0	1	1
4623	902	"arg_2"	"blob"	0	0	1	2
4624	903	"res_0"	"blob"	0	0	0	0
4625	903	"arg_1"	"tinyint"	8	0	1	1
4626	903	"arg_2"	"blob"	0	0	1	2
4627	904	"res_0"	"blob"	0	0	0	0
4628	904	"arg_1"	"smallint"	16	0	1	1
4629	904	"arg_2"	"blob"	0	0	1	2
4630	905	"res_0"	"blob"	0	0	0	0
4631	905	"arg_1"	"int"	32	0	1	1
4632	905	"arg_2"	"blob"	0	0	1	2
4633	906	"res_0"	"blob"	0	0	0	0
4634	906	"arg_1"	"bigint"	64	0	1	1
4635	906	"arg_2"	"blob"	0	0	1	2
4636	907	"res_0"	"blob"	0	0	0	0
4637	907	"arg_1"	"wrd"	64	0	1	1
4638	907	"arg_2"	"blob"	0	0	1	2
4639	908	"res_0"	"blob"	0	0	0	0
4640	908	"arg_1"	"decimal"	2	0	1	1
4641	908	"arg_2"	"blob"	0	0	1	2
4642	909	"res_0"	"blob"	0	0	0	0
4643	909	"arg_1"	"decimal"	4	0	1	1
4644	909	"arg_2"	"blob"	0	0	1	2
4645	910	"res_0"	"blob"	0	0	0	0
4646	910	"arg_1"	"decimal"	9	0	1	1
4647	910	"arg_2"	"blob"	0	0	1	2
4648	911	"res_0"	"blob"	0	0	0	0
4649	911	"arg_1"	"decimal"	19	0	1	1
4650	911	"arg_2"	"blob"	0	0	1	2
4651	912	"res_0"	"blob"	0	0	0	0
4652	912	"arg_1"	"real"	24	0	1	1
4653	912	"arg_2"	"blob"	0	0	1	2
4654	913	"res_0"	"blob"	0	0	0	0
4655	913	"arg_1"	"double"	53	0	1	1
4656	913	"arg_2"	"blob"	0	0	1	2
4657	914	"res_0"	"blob"	0	0	0	0
4658	914	"arg_1"	"month_interval"	32	0	1	1
4659	914	"arg_2"	"blob"	0	0	1	2
4660	915	"res_0"	"blob"	0	0	0	0
4661	915	"arg_1"	"sec_interval"	13	0	1	1
4662	915	"arg_2"	"blob"	0	0	1	2
4663	916	"res_0"	"blob"	0	0	0	0
4664	916	"arg_1"	"time"	7	0	1	1
4665	916	"arg_2"	"blob"	0	0	1	2
4666	917	"res_0"	"blob"	0	0	0	0
4667	917	"arg_1"	"timetz"	7	0	1	1
4668	917	"arg_2"	"blob"	0	0	1	2
4669	918	"res_0"	"blob"	0	0	0	0
4670	918	"arg_1"	"date"	0	0	1	1
4671	918	"arg_2"	"blob"	0	0	1	2
4672	919	"res_0"	"blob"	0	0	0	0
4673	919	"arg_1"	"timestamp"	7	0	1	1
4674	919	"arg_2"	"blob"	0	0	1	2
4675	920	"res_0"	"blob"	0	0	0	0
4676	920	"arg_1"	"timestamptz"	7	0	1	1
4677	920	"arg_2"	"blob"	0	0	1	2
4678	921	"res_0"	"blob"	0	0	0	0
4679	921	"arg_1"	"blob"	0	0	1	1
4680	921	"arg_2"	"blob"	0	0	1	2
4681	922	"res_0"	"blob"	0	0	0	0
4682	922	"arg_1"	"geometry"	0	0	1	1
4683	922	"arg_2"	"blob"	0	0	1	2
4684	923	"res_0"	"blob"	0	0	0	0
4685	923	"arg_1"	"geometrya"	0	0	1	1
4686	923	"arg_2"	"blob"	0	0	1	2
4687	924	"res_0"	"blob"	0	0	0	0
4688	924	"arg_1"	"mbr"	0	0	1	1
4689	924	"arg_2"	"blob"	0	0	1	2
4690	925	"res_0"	"geometry"	0	0	0	0
4691	925	"arg_1"	"oid"	63	0	1	1
4692	925	"arg_2"	"geometry"	0	0	1	2
4693	926	"res_0"	"geometry"	0	0	0	0
4694	926	"arg_1"	"tinyint"	8	0	1	1
4695	926	"arg_2"	"geometry"	0	0	1	2
4696	927	"res_0"	"geometry"	0	0	0	0
4697	927	"arg_1"	"smallint"	16	0	1	1
4698	927	"arg_2"	"geometry"	0	0	1	2
4699	928	"res_0"	"geometry"	0	0	0	0
4700	928	"arg_1"	"int"	32	0	1	1
4701	928	"arg_2"	"geometry"	0	0	1	2
4702	929	"res_0"	"geometry"	0	0	0	0
4703	929	"arg_1"	"bigint"	64	0	1	1
4704	929	"arg_2"	"geometry"	0	0	1	2
4705	930	"res_0"	"geometry"	0	0	0	0
4706	930	"arg_1"	"wrd"	64	0	1	1
4707	930	"arg_2"	"geometry"	0	0	1	2
4708	931	"res_0"	"geometry"	0	0	0	0
4709	931	"arg_1"	"decimal"	2	0	1	1
4710	931	"arg_2"	"geometry"	0	0	1	2
4711	932	"res_0"	"geometry"	0	0	0	0
4712	932	"arg_1"	"decimal"	4	0	1	1
4713	932	"arg_2"	"geometry"	0	0	1	2
4714	933	"res_0"	"geometry"	0	0	0	0
4715	933	"arg_1"	"decimal"	9	0	1	1
4716	933	"arg_2"	"geometry"	0	0	1	2
4717	934	"res_0"	"geometry"	0	0	0	0
4718	934	"arg_1"	"decimal"	19	0	1	1
4719	934	"arg_2"	"geometry"	0	0	1	2
4720	935	"res_0"	"geometry"	0	0	0	0
4721	935	"arg_1"	"real"	24	0	1	1
4722	935	"arg_2"	"geometry"	0	0	1	2
4723	936	"res_0"	"geometry"	0	0	0	0
4724	936	"arg_1"	"double"	53	0	1	1
4725	936	"arg_2"	"geometry"	0	0	1	2
4726	937	"res_0"	"geometry"	0	0	0	0
4727	937	"arg_1"	"month_interval"	32	0	1	1
4728	937	"arg_2"	"geometry"	0	0	1	2
4729	938	"res_0"	"geometry"	0	0	0	0
4730	938	"arg_1"	"sec_interval"	13	0	1	1
4731	938	"arg_2"	"geometry"	0	0	1	2
4732	939	"res_0"	"geometry"	0	0	0	0
4733	939	"arg_1"	"time"	7	0	1	1
4734	939	"arg_2"	"geometry"	0	0	1	2
4735	940	"res_0"	"geometry"	0	0	0	0
4736	940	"arg_1"	"timetz"	7	0	1	1
4737	940	"arg_2"	"geometry"	0	0	1	2
4738	941	"res_0"	"geometry"	0	0	0	0
4739	941	"arg_1"	"date"	0	0	1	1
4740	941	"arg_2"	"geometry"	0	0	1	2
4741	942	"res_0"	"geometry"	0	0	0	0
4742	942	"arg_1"	"timestamp"	7	0	1	1
4743	942	"arg_2"	"geometry"	0	0	1	2
4744	943	"res_0"	"geometry"	0	0	0	0
4745	943	"arg_1"	"timestamptz"	7	0	1	1
4746	943	"arg_2"	"geometry"	0	0	1	2
4747	944	"res_0"	"geometry"	0	0	0	0
4748	944	"arg_1"	"blob"	0	0	1	1
4749	944	"arg_2"	"geometry"	0	0	1	2
4750	945	"res_0"	"geometry"	0	0	0	0
4751	945	"arg_1"	"geometry"	0	0	1	1
4752	945	"arg_2"	"geometry"	0	0	1	2
4753	946	"res_0"	"geometry"	0	0	0	0
4754	946	"arg_1"	"geometrya"	0	0	1	1
4755	946	"arg_2"	"geometry"	0	0	1	2
4756	947	"res_0"	"geometry"	0	0	0	0
4757	947	"arg_1"	"mbr"	0	0	1	1
4758	947	"arg_2"	"geometry"	0	0	1	2
4759	948	"res_0"	"geometrya"	0	0	0	0
4760	948	"arg_1"	"oid"	63	0	1	1
4761	948	"arg_2"	"geometrya"	0	0	1	2
4762	949	"res_0"	"geometrya"	0	0	0	0
4763	949	"arg_1"	"tinyint"	8	0	1	1
4764	949	"arg_2"	"geometrya"	0	0	1	2
4765	950	"res_0"	"geometrya"	0	0	0	0
4766	950	"arg_1"	"smallint"	16	0	1	1
4767	950	"arg_2"	"geometrya"	0	0	1	2
4768	951	"res_0"	"geometrya"	0	0	0	0
4769	951	"arg_1"	"int"	32	0	1	1
4770	951	"arg_2"	"geometrya"	0	0	1	2
4771	952	"res_0"	"geometrya"	0	0	0	0
4772	952	"arg_1"	"bigint"	64	0	1	1
4773	952	"arg_2"	"geometrya"	0	0	1	2
4774	953	"res_0"	"geometrya"	0	0	0	0
4775	953	"arg_1"	"wrd"	64	0	1	1
4776	953	"arg_2"	"geometrya"	0	0	1	2
4777	954	"res_0"	"geometrya"	0	0	0	0
4778	954	"arg_1"	"decimal"	2	0	1	1
4779	954	"arg_2"	"geometrya"	0	0	1	2
4780	955	"res_0"	"geometrya"	0	0	0	0
4781	955	"arg_1"	"decimal"	4	0	1	1
4782	955	"arg_2"	"geometrya"	0	0	1	2
4783	956	"res_0"	"geometrya"	0	0	0	0
4784	956	"arg_1"	"decimal"	9	0	1	1
4785	956	"arg_2"	"geometrya"	0	0	1	2
4786	957	"res_0"	"geometrya"	0	0	0	0
4787	957	"arg_1"	"decimal"	19	0	1	1
4788	957	"arg_2"	"geometrya"	0	0	1	2
4789	958	"res_0"	"geometrya"	0	0	0	0
4790	958	"arg_1"	"real"	24	0	1	1
4791	958	"arg_2"	"geometrya"	0	0	1	2
4792	959	"res_0"	"geometrya"	0	0	0	0
4793	959	"arg_1"	"double"	53	0	1	1
4794	959	"arg_2"	"geometrya"	0	0	1	2
4795	960	"res_0"	"geometrya"	0	0	0	0
4796	960	"arg_1"	"month_interval"	32	0	1	1
4797	960	"arg_2"	"geometrya"	0	0	1	2
4798	961	"res_0"	"geometrya"	0	0	0	0
4799	961	"arg_1"	"sec_interval"	13	0	1	1
4800	961	"arg_2"	"geometrya"	0	0	1	2
4801	962	"res_0"	"geometrya"	0	0	0	0
4802	962	"arg_1"	"time"	7	0	1	1
4803	962	"arg_2"	"geometrya"	0	0	1	2
4804	963	"res_0"	"geometrya"	0	0	0	0
4805	963	"arg_1"	"timetz"	7	0	1	1
4806	963	"arg_2"	"geometrya"	0	0	1	2
4807	964	"res_0"	"geometrya"	0	0	0	0
4808	964	"arg_1"	"date"	0	0	1	1
4809	964	"arg_2"	"geometrya"	0	0	1	2
4810	965	"res_0"	"geometrya"	0	0	0	0
4811	965	"arg_1"	"timestamp"	7	0	1	1
4812	965	"arg_2"	"geometrya"	0	0	1	2
4813	966	"res_0"	"geometrya"	0	0	0	0
4814	966	"arg_1"	"timestamptz"	7	0	1	1
4815	966	"arg_2"	"geometrya"	0	0	1	2
4816	967	"res_0"	"geometrya"	0	0	0	0
4817	967	"arg_1"	"blob"	0	0	1	1
4818	967	"arg_2"	"geometrya"	0	0	1	2
4819	968	"res_0"	"geometrya"	0	0	0	0
4820	968	"arg_1"	"geometry"	0	0	1	1
4821	968	"arg_2"	"geometrya"	0	0	1	2
4822	969	"res_0"	"geometrya"	0	0	0	0
4823	969	"arg_1"	"geometrya"	0	0	1	1
4824	969	"arg_2"	"geometrya"	0	0	1	2
4825	970	"res_0"	"geometrya"	0	0	0	0
4826	970	"arg_1"	"mbr"	0	0	1	1
4827	970	"arg_2"	"geometrya"	0	0	1	2
4828	971	"res_0"	"mbr"	0	0	0	0
4829	971	"arg_1"	"oid"	63	0	1	1
4830	971	"arg_2"	"mbr"	0	0	1	2
4831	972	"res_0"	"mbr"	0	0	0	0
4832	972	"arg_1"	"tinyint"	8	0	1	1
4833	972	"arg_2"	"mbr"	0	0	1	2
4834	973	"res_0"	"mbr"	0	0	0	0
4835	973	"arg_1"	"smallint"	16	0	1	1
4836	973	"arg_2"	"mbr"	0	0	1	2
4837	974	"res_0"	"mbr"	0	0	0	0
4838	974	"arg_1"	"int"	32	0	1	1
4839	974	"arg_2"	"mbr"	0	0	1	2
4840	975	"res_0"	"mbr"	0	0	0	0
4841	975	"arg_1"	"bigint"	64	0	1	1
4842	975	"arg_2"	"mbr"	0	0	1	2
4843	976	"res_0"	"mbr"	0	0	0	0
4844	976	"arg_1"	"wrd"	64	0	1	1
4845	976	"arg_2"	"mbr"	0	0	1	2
4846	977	"res_0"	"mbr"	0	0	0	0
4847	977	"arg_1"	"decimal"	2	0	1	1
4848	977	"arg_2"	"mbr"	0	0	1	2
4849	978	"res_0"	"mbr"	0	0	0	0
4850	978	"arg_1"	"decimal"	4	0	1	1
4851	978	"arg_2"	"mbr"	0	0	1	2
4852	979	"res_0"	"mbr"	0	0	0	0
4853	979	"arg_1"	"decimal"	9	0	1	1
4854	979	"arg_2"	"mbr"	0	0	1	2
4855	980	"res_0"	"mbr"	0	0	0	0
4856	980	"arg_1"	"decimal"	19	0	1	1
4857	980	"arg_2"	"mbr"	0	0	1	2
4858	981	"res_0"	"mbr"	0	0	0	0
4859	981	"arg_1"	"real"	24	0	1	1
4860	981	"arg_2"	"mbr"	0	0	1	2
4861	982	"res_0"	"mbr"	0	0	0	0
4862	982	"arg_1"	"double"	53	0	1	1
4863	982	"arg_2"	"mbr"	0	0	1	2
4864	983	"res_0"	"mbr"	0	0	0	0
4865	983	"arg_1"	"month_interval"	32	0	1	1
4866	983	"arg_2"	"mbr"	0	0	1	2
4867	984	"res_0"	"mbr"	0	0	0	0
4868	984	"arg_1"	"sec_interval"	13	0	1	1
4869	984	"arg_2"	"mbr"	0	0	1	2
4870	985	"res_0"	"mbr"	0	0	0	0
4871	985	"arg_1"	"time"	7	0	1	1
4872	985	"arg_2"	"mbr"	0	0	1	2
4873	986	"res_0"	"mbr"	0	0	0	0
4874	986	"arg_1"	"timetz"	7	0	1	1
4875	986	"arg_2"	"mbr"	0	0	1	2
4876	987	"res_0"	"mbr"	0	0	0	0
4877	987	"arg_1"	"date"	0	0	1	1
4878	987	"arg_2"	"mbr"	0	0	1	2
4879	988	"res_0"	"mbr"	0	0	0	0
4880	988	"arg_1"	"timestamp"	7	0	1	1
4881	988	"arg_2"	"mbr"	0	0	1	2
4882	989	"res_0"	"mbr"	0	0	0	0
4883	989	"arg_1"	"timestamptz"	7	0	1	1
4884	989	"arg_2"	"mbr"	0	0	1	2
4885	990	"res_0"	"mbr"	0	0	0	0
4886	990	"arg_1"	"blob"	0	0	1	1
4887	990	"arg_2"	"mbr"	0	0	1	2
4888	991	"res_0"	"mbr"	0	0	0	0
4889	991	"arg_1"	"geometry"	0	0	1	1
4890	991	"arg_2"	"mbr"	0	0	1	2
4891	992	"res_0"	"mbr"	0	0	0	0
4892	992	"arg_1"	"geometrya"	0	0	1	1
4893	992	"arg_2"	"mbr"	0	0	1	2
4894	993	"res_0"	"mbr"	0	0	0	0
4895	993	"arg_1"	"mbr"	0	0	1	1
4896	993	"arg_2"	"mbr"	0	0	1	2
4897	994	"res_0"	"real"	24	0	0	0
4898	994	"arg_1"	"real"	24	0	1	1
4899	994	"arg_2"	"real"	24	0	1	2
4900	995	"res_0"	"real"	24	0	0	0
4901	995	"arg_1"	"real"	24	0	1	1
4902	996	"res_0"	"real"	24	0	0	0
4903	996	"arg_1"	"real"	24	0	1	1
4904	997	"res_0"	"real"	24	0	0	0
4905	997	"arg_1"	"real"	24	0	1	1
4906	998	"res_0"	"real"	24	0	0	0
4907	998	"arg_1"	"real"	24	0	1	1
4908	999	"res_0"	"real"	24	0	0	0
4909	999	"arg_1"	"real"	24	0	1	1
4910	1000	"res_0"	"real"	24	0	0	0
4911	1000	"arg_1"	"real"	24	0	1	1
4912	1001	"res_0"	"real"	24	0	0	0
4913	1001	"arg_1"	"real"	24	0	1	1
4914	1002	"res_0"	"real"	24	0	0	0
4915	1002	"arg_1"	"real"	24	0	1	1
4916	1003	"res_0"	"real"	24	0	0	0
4917	1003	"arg_1"	"real"	24	0	1	1
4918	1004	"res_0"	"real"	24	0	0	0
4919	1004	"arg_1"	"real"	24	0	1	1
4920	1004	"arg_2"	"real"	24	0	1	2
4921	1005	"res_0"	"real"	24	0	0	0
4922	1005	"arg_1"	"real"	24	0	1	1
4923	1006	"res_0"	"real"	24	0	0	0
4924	1006	"arg_1"	"real"	24	0	1	1
4925	1007	"res_0"	"real"	24	0	0	0
4926	1007	"arg_1"	"real"	24	0	1	1
4927	1008	"res_0"	"real"	24	0	0	0
4928	1008	"arg_1"	"real"	24	0	1	1
4929	1009	"res_0"	"real"	24	0	0	0
4930	1009	"arg_1"	"real"	24	0	1	1
4931	1010	"res_0"	"real"	24	0	0	0
4932	1010	"arg_1"	"real"	24	0	1	1
4933	1011	"res_0"	"real"	24	0	0	0
4934	1011	"arg_1"	"real"	24	0	1	1
4935	1012	"res_0"	"real"	24	0	0	0
4936	1012	"arg_1"	"real"	24	0	1	1
4937	1013	"res_0"	"double"	53	0	0	0
4938	1013	"arg_1"	"double"	53	0	1	1
4939	1013	"arg_2"	"double"	53	0	1	2
4940	1014	"res_0"	"double"	53	0	0	0
4941	1014	"arg_1"	"double"	53	0	1	1
4942	1015	"res_0"	"double"	53	0	0	0
4943	1015	"arg_1"	"double"	53	0	1	1
4944	1016	"res_0"	"double"	53	0	0	0
4945	1016	"arg_1"	"double"	53	0	1	1
4946	1017	"res_0"	"double"	53	0	0	0
4947	1017	"arg_1"	"double"	53	0	1	1
4948	1018	"res_0"	"double"	53	0	0	0
4949	1018	"arg_1"	"double"	53	0	1	1
4950	1019	"res_0"	"double"	53	0	0	0
4951	1019	"arg_1"	"double"	53	0	1	1
4952	1020	"res_0"	"double"	53	0	0	0
4953	1020	"arg_1"	"double"	53	0	1	1
4954	1021	"res_0"	"double"	53	0	0	0
4955	1021	"arg_1"	"double"	53	0	1	1
4956	1022	"res_0"	"double"	53	0	0	0
4957	1022	"arg_1"	"double"	53	0	1	1
4958	1023	"res_0"	"double"	53	0	0	0
4959	1023	"arg_1"	"double"	53	0	1	1
4960	1023	"arg_2"	"double"	53	0	1	2
4961	1024	"res_0"	"double"	53	0	0	0
4962	1024	"arg_1"	"double"	53	0	1	1
4963	1025	"res_0"	"double"	53	0	0	0
4964	1025	"arg_1"	"double"	53	0	1	1
4965	1026	"res_0"	"double"	53	0	0	0
4966	1026	"arg_1"	"double"	53	0	1	1
4967	1027	"res_0"	"double"	53	0	0	0
4968	1027	"arg_1"	"double"	53	0	1	1
4969	1028	"res_0"	"double"	53	0	0	0
4970	1028	"arg_1"	"double"	53	0	1	1
4971	1029	"res_0"	"double"	53	0	0	0
4972	1029	"arg_1"	"double"	53	0	1	1
4973	1030	"res_0"	"double"	53	0	0	0
4974	1030	"arg_1"	"double"	53	0	1	1
4975	1031	"res_0"	"double"	53	0	0	0
4976	1031	"arg_1"	"double"	53	0	1	1
4977	1032	"res_0"	"double"	53	0	0	0
4978	1033	"res_0"	"int"	32	0	0	0
4979	1034	"res_0"	"int"	32	0	0	0
4980	1034	"arg_1"	"int"	32	0	1	1
4981	1035	"res_0"	"date"	0	0	0	0
4982	1036	"res_0"	"date"	0	0	0	0
4983	1037	"res_0"	"timetz"	7	0	0	0
4984	1038	"res_0"	"timetz"	7	0	0	0
4985	1039	"res_0"	"timestamptz"	7	0	0	0
4986	1040	"res_0"	"time"	7	0	0	0
4987	1041	"res_0"	"timestamp"	7	0	0	0
4988	1042	"res_0"	"month_interval"	32	0	0	0
4989	1042	"arg_1"	"date"	0	0	1	1
4990	1042	"arg_2"	"date"	0	0	1	2
4991	1043	"res_0"	"sec_interval"	13	0	0	0
4992	1043	"arg_1"	"timetz"	7	0	1	1
4993	1043	"arg_2"	"timetz"	7	0	1	2
4994	1044	"res_0"	"sec_interval"	13	0	0	0
4995	1044	"arg_1"	"time"	7	0	1	1
4996	1044	"arg_2"	"time"	7	0	1	2
4997	1045	"res_0"	"sec_interval"	13	0	0	0
4998	1045	"arg_1"	"timestamptz"	7	0	1	1
4999	1045	"arg_2"	"timestamptz"	7	0	1	2
5000	1046	"res_0"	"sec_interval"	13	0	0	0
5001	1046	"arg_1"	"timestamp"	7	0	1	1
5002	1046	"arg_2"	"timestamp"	7	0	1	2
5003	1047	"res_0"	"date"	0	0	0	0
5004	1047	"arg_1"	"date"	0	0	1	1
5005	1047	"arg_2"	"sec_interval"	13	0	1	2
5006	1048	"res_0"	"date"	0	0	0	0
5007	1048	"arg_1"	"date"	0	0	1	1
5008	1048	"arg_2"	"month_interval"	32	0	1	2
5009	1049	"res_0"	"time"	7	0	0	0
5010	1049	"arg_1"	"time"	7	0	1	1
5011	1049	"arg_2"	"sec_interval"	13	0	1	2
5012	1050	"res_0"	"timetz"	7	0	0	0
5013	1050	"arg_1"	"timetz"	7	0	1	1
5014	1050	"arg_2"	"sec_interval"	13	0	1	2
5015	1051	"res_0"	"timestamp"	7	0	0	0
5016	1051	"arg_1"	"timestamp"	7	0	1	1
5017	1051	"arg_2"	"sec_interval"	13	0	1	2
5018	1052	"res_0"	"timestamp"	7	0	0	0
5019	1052	"arg_1"	"timestamp"	7	0	1	1
5020	1052	"arg_2"	"month_interval"	32	0	1	2
5021	1053	"res_0"	"timestamptz"	7	0	0	0
5022	1053	"arg_1"	"timestamptz"	7	0	1	1
5023	1053	"arg_2"	"sec_interval"	13	0	1	2
5024	1054	"res_0"	"timestamptz"	7	0	0	0
5025	1054	"arg_1"	"timestamptz"	7	0	1	1
5026	1054	"arg_2"	"month_interval"	32	0	1	2
5027	1055	"res_0"	"date"	0	0	0	0
5028	1055	"arg_1"	"date"	0	0	1	1
5029	1055	"arg_2"	"sec_interval"	13	0	1	2
5030	1056	"res_0"	"date"	0	0	0	0
5031	1056	"arg_1"	"date"	0	0	1	1
5032	1056	"arg_2"	"month_interval"	32	0	1	2
5033	1057	"res_0"	"timestamp"	7	0	0	0
5034	1057	"arg_1"	"timestamp"	7	0	1	1
5035	1057	"arg_2"	"sec_interval"	13	0	1	2
5036	1058	"res_0"	"timestamp"	7	0	0	0
5037	1058	"arg_1"	"timestamp"	7	0	1	1
5038	1058	"arg_2"	"month_interval"	32	0	1	2
5039	1059	"res_0"	"timestamptz"	7	0	0	0
5040	1059	"arg_1"	"timestamptz"	7	0	1	1
5041	1059	"arg_2"	"sec_interval"	13	0	1	2
5042	1060	"res_0"	"timestamptz"	7	0	0	0
5043	1060	"arg_1"	"timestamptz"	7	0	1	1
5044	1060	"arg_2"	"month_interval"	32	0	1	2
5045	1061	"res_0"	"time"	7	0	0	0
5046	1061	"arg_1"	"time"	7	0	1	1
5047	1061	"arg_2"	"sec_interval"	13	0	1	2
5048	1062	"res_0"	"timetz"	7	0	0	0
5049	1062	"arg_1"	"timetz"	7	0	1	1
5050	1062	"arg_2"	"sec_interval"	13	0	1	2
5051	1063	"res_0"	"sec_interval"	13	0	0	0
5052	1064	"res_0"	"int"	32	0	0	0
5053	1064	"arg_1"	"date"	0	0	1	1
5054	1065	"res_0"	"int"	32	0	0	0
5055	1065	"arg_1"	"date"	0	0	1	1
5056	1066	"res_0"	"int"	32	0	0	0
5057	1066	"arg_1"	"date"	0	0	1	1
5058	1067	"res_0"	"int"	32	0	0	0
5059	1067	"arg_1"	"time"	7	0	1	1
5060	1068	"res_0"	"int"	32	0	0	0
5061	1068	"arg_1"	"time"	7	0	1	1
5062	1069	"res_0"	"decimal"	9	3	0	0
5063	1069	"arg_1"	"time"	7	0	1	1
5064	1070	"res_0"	"int"	32	0	0	0
5065	1070	"arg_1"	"timetz"	7	0	1	1
5066	1071	"res_0"	"int"	32	0	0	0
5067	1071	"arg_1"	"timetz"	7	0	1	1
5068	1072	"res_0"	"decimal"	9	3	0	0
5069	1072	"arg_1"	"timetz"	7	0	1	1
5070	1073	"res_0"	"int"	32	0	0	0
5071	1073	"arg_1"	"timestamp"	7	0	1	1
5072	1074	"res_0"	"int"	32	0	0	0
5073	1074	"arg_1"	"timestamp"	7	0	1	1
5074	1075	"res_0"	"int"	32	0	0	0
5075	1075	"arg_1"	"timestamp"	7	0	1	1
5076	1076	"res_0"	"int"	32	0	0	0
5077	1076	"arg_1"	"timestamp"	7	0	1	1
5078	1077	"res_0"	"int"	32	0	0	0
5079	1077	"arg_1"	"timestamp"	7	0	1	1
5080	1078	"res_0"	"decimal"	9	3	0	0
5081	1078	"arg_1"	"timestamp"	7	0	1	1
5082	1079	"res_0"	"int"	32	0	0	0
5083	1079	"arg_1"	"timestamptz"	7	0	1	1
5084	1080	"res_0"	"int"	32	0	0	0
5085	1080	"arg_1"	"timestamptz"	7	0	1	1
5086	1081	"res_0"	"int"	32	0	0	0
5087	1081	"arg_1"	"timestamptz"	7	0	1	1
5088	1082	"res_0"	"int"	32	0	0	0
5089	1082	"arg_1"	"timestamptz"	7	0	1	1
5090	1083	"res_0"	"int"	32	0	0	0
5091	1083	"arg_1"	"timestamptz"	7	0	1	1
5092	1084	"res_0"	"decimal"	9	3	0	0
5093	1084	"arg_1"	"timestamptz"	7	0	1	1
5094	1085	"res_0"	"int"	32	0	0	0
5095	1085	"arg_1"	"month_interval"	32	0	1	1
5096	1086	"res_0"	"int"	32	0	0	0
5097	1086	"arg_1"	"month_interval"	32	0	1	1
5098	1087	"res_0"	"bigint"	64	0	0	0
5099	1087	"arg_1"	"sec_interval"	13	0	1	1
5100	1088	"res_0"	"int"	32	0	0	0
5101	1088	"arg_1"	"sec_interval"	13	0	1	1
5102	1089	"res_0"	"int"	32	0	0	0
5103	1089	"arg_1"	"sec_interval"	13	0	1	1
5104	1090	"res_0"	"int"	32	0	0	0
5105	1090	"arg_1"	"sec_interval"	13	0	1	1
5106	1091	"res_0"	"int"	32	0	0	0
5107	1091	"arg_1"	"date"	0	0	1	1
5108	1092	"res_0"	"int"	32	0	0	0
5109	1092	"arg_1"	"date"	0	0	1	1
5110	1093	"res_0"	"int"	32	0	0	0
5111	1093	"arg_1"	"date"	0	0	1	1
5112	1094	"res_0"	"int"	32	0	0	0
5113	1094	"arg_1"	"date"	0	0	1	1
5114	1095	"res_0"	"int"	32	0	0	0
5115	1095	"arg_1"	"date"	0	0	1	1
5116	1096	"res_0"	"bigint"	64	0	0	0
5117	1096	"arg_1"	"varchar"	0	0	1	1
5118	1096	"arg_2"	"varchar"	0	0	1	2
5119	1097	"res_0"	"bigint"	64	0	0	0
5120	1097	"arg_1"	"varchar"	0	0	1	1
5121	1097	"arg_2"	"varchar"	0	0	1	2
5122	1098	"res_0"	"bigint"	64	0	0	0
5123	1098	"arg_1"	"varchar"	0	0	1	1
5124	1098	"arg_2"	"varchar"	0	0	1	2
5125	1098	"arg_3"	"bigint"	64	0	1	3
5126	1099	"res_0"	"tinyint"	8	0	0	0
5127	1099	"arg_1"	"char"	0	0	1	1
5128	1099	"arg_2"	"boolean"	1	0	1	2
5129	1100	"res_0"	"smallint"	16	0	0	0
5130	1100	"arg_1"	"char"	0	0	1	1
5131	1100	"arg_2"	"boolean"	1	0	1	2
5132	1101	"res_0"	"int"	32	0	0	0
5133	1101	"arg_1"	"char"	0	0	1	1
5134	1101	"arg_2"	"boolean"	1	0	1	2
5135	1102	"res_0"	"char"	0	0	0	0
5136	1102	"arg_1"	"char"	0	0	1	1
5137	1103	"res_0"	"int"	32	0	0	0
5138	1103	"arg_1"	"char"	0	0	1	1
5139	1103	"arg_2"	"char"	0	0	1	2
5140	1104	"res_0"	"int"	32	0	0	0
5141	1104	"arg_1"	"char"	0	0	1	1
5142	1104	"arg_2"	"char"	0	0	1	2
5143	1104	"arg_3"	"int"	32	0	1	3
5144	1105	"res_0"	"char"	0	0	0	0
5145	1105	"arg_1"	"char"	0	0	1	1
5146	1105	"arg_2"	"char"	0	0	1	2
5147	1105	"arg_3"	"int"	32	0	1	3
5148	1106	"res_0"	"char"	0	0	0	0
5149	1106	"arg_1"	"char"	0	0	1	1
5150	1106	"arg_2"	"int"	32	0	1	2
5151	1107	"res_0"	"char"	0	0	0	0
5152	1107	"arg_1"	"char"	0	0	1	1
5153	1107	"arg_2"	"int"	32	0	1	2
5154	1107	"arg_3"	"int"	32	0	1	3
5155	1108	"res_0"	"boolean"	1	0	0	0
5156	1108	"arg_1"	"char"	0	0	1	1
5157	1108	"arg_2"	"char"	0	0	1	2
5158	1109	"res_0"	"boolean"	1	0	0	0
5159	1109	"arg_1"	"char"	0	0	1	1
5160	1109	"arg_2"	"char"	0	0	1	2
5161	1109	"arg_3"	"char"	0	0	1	3
5162	1110	"res_0"	"boolean"	1	0	0	0
5163	1110	"arg_1"	"char"	0	0	1	1
5164	1110	"arg_2"	"char"	0	0	1	2
5165	1111	"res_0"	"boolean"	1	0	0	0
5166	1111	"arg_1"	"char"	0	0	1	1
5167	1111	"arg_2"	"char"	0	0	1	2
5168	1111	"arg_3"	"char"	0	0	1	3
5169	1112	"res_0"	"boolean"	1	0	0	0
5170	1112	"arg_1"	"char"	0	0	1	1
5171	1112	"arg_2"	"char"	0	0	1	2
5172	1113	"res_0"	"boolean"	1	0	0	0
5173	1113	"arg_1"	"char"	0	0	1	1
5174	1113	"arg_2"	"char"	0	0	1	2
5175	1113	"arg_3"	"char"	0	0	1	3
5176	1114	"res_0"	"boolean"	1	0	0	0
5177	1114	"arg_1"	"char"	0	0	1	1
5178	1114	"arg_2"	"char"	0	0	1	2
5179	1115	"res_0"	"boolean"	1	0	0	0
5180	1115	"arg_1"	"char"	0	0	1	1
5181	1115	"arg_2"	"char"	0	0	1	2
5182	1115	"arg_3"	"char"	0	0	1	3
5183	1116	"res_0"	"int"	32	0	0	0
5184	1116	"arg_1"	"char"	0	0	1	1
5185	1116	"arg_2"	"char"	0	0	1	2
5186	1117	"res_0"	"char"	0	0	0	0
5187	1117	"arg_1"	"char"	0	0	1	1
5188	1117	"arg_2"	"int"	32	0	1	2
5189	1118	"res_0"	"char"	0	0	0	0
5190	1118	"arg_1"	"char"	0	0	1	1
5191	1118	"arg_2"	"char"	0	0	1	2
5192	1119	"res_0"	"int"	32	0	0	0
5193	1119	"arg_1"	"char"	0	0	1	1
5194	1120	"res_0"	"char"	0	0	0	0
5195	1120	"arg_1"	"int"	32	0	1	1
5196	1121	"res_0"	"int"	32	0	0	0
5197	1121	"arg_1"	"char"	0	0	1	1
5198	1122	"res_0"	"char"	0	0	0	0
5199	1122	"arg_1"	"char"	0	0	1	1
5200	1122	"arg_2"	"int"	32	0	1	2
5201	1123	"res_0"	"char"	0	0	0	0
5202	1123	"arg_1"	"char"	0	0	1	1
5203	1123	"arg_2"	"int"	32	0	1	2
5204	1124	"res_0"	"char"	0	0	0	0
5205	1124	"arg_1"	"char"	0	0	1	1
5206	1125	"res_0"	"char"	0	0	0	0
5207	1125	"arg_1"	"char"	0	0	1	1
5208	1126	"res_0"	"char"	0	0	0	0
5209	1126	"arg_1"	"char"	0	0	1	1
5210	1127	"res_0"	"char"	0	0	0	0
5211	1127	"arg_1"	"char"	0	0	1	1
5212	1128	"res_0"	"char"	0	0	0	0
5213	1128	"arg_1"	"char"	0	0	1	1
5214	1129	"res_0"	"char"	0	0	0	0
5215	1129	"arg_1"	"char"	0	0	1	1
5216	1129	"arg_2"	"char"	0	0	1	2
5217	1130	"res_0"	"char"	0	0	0	0
5218	1130	"arg_1"	"char"	0	0	1	1
5219	1131	"res_0"	"char"	0	0	0	0
5220	1131	"arg_1"	"char"	0	0	1	1
5221	1131	"arg_2"	"char"	0	0	1	2
5222	1132	"res_0"	"char"	0	0	0	0
5223	1132	"arg_1"	"char"	0	0	1	1
5224	1133	"res_0"	"char"	0	0	0	0
5225	1133	"arg_1"	"char"	0	0	1	1
5226	1133	"arg_2"	"char"	0	0	1	2
5227	1134	"res_0"	"char"	0	0	0	0
5228	1134	"arg_1"	"char"	0	0	1	1
5229	1134	"arg_2"	"int"	32	0	1	2
5230	1135	"res_0"	"char"	0	0	0	0
5231	1135	"arg_1"	"char"	0	0	1	1
5232	1135	"arg_2"	"int"	32	0	1	2
5233	1135	"arg_3"	"char"	0	0	1	3
5234	1136	"res_0"	"char"	0	0	0	0
5235	1136	"arg_1"	"char"	0	0	1	1
5236	1136	"arg_2"	"int"	32	0	1	2
5237	1137	"res_0"	"char"	0	0	0	0
5238	1137	"arg_1"	"char"	0	0	1	1
5239	1137	"arg_2"	"int"	32	0	1	2
5240	1137	"arg_3"	"char"	0	0	1	3
5241	1138	"res_0"	"char"	0	0	0	0
5242	1138	"arg_1"	"char"	0	0	1	1
5243	1138	"arg_2"	"int"	32	0	1	2
5244	1138	"arg_3"	"int"	32	0	1	3
5245	1138	"arg_4"	"char"	0	0	1	4
5246	1139	"res_0"	"char"	0	0	0	0
5247	1139	"arg_1"	"char"	0	0	1	1
5248	1139	"arg_2"	"char"	0	0	1	2
5249	1139	"arg_3"	"char"	0	0	1	3
5250	1140	"res_0"	"char"	0	0	0	0
5251	1140	"arg_1"	"char"	0	0	1	1
5252	1140	"arg_2"	"int"	32	0	1	2
5253	1141	"res_0"	"char"	0	0	0	0
5254	1141	"arg_1"	"int"	32	0	1	1
5255	1142	"res_0"	"int"	32	0	0	0
5256	1142	"arg_1"	"char"	0	0	1	1
5257	1143	"res_0"	"int"	32	0	0	0
5258	1143	"arg_1"	"char"	0	0	1	1
5259	1144	"res_0"	"int"	32	0	0	0
5260	1144	"arg_1"	"char"	0	0	1	1
5261	1145	"res_0"	"char"	0	0	0	0
5262	1145	"arg_1"	"char"	0	0	1	1
5263	1146	"res_0"	"int"	32	0	0	0
5264	1146	"arg_1"	"char"	0	0	1	1
5265	1146	"arg_2"	"char"	0	0	1	2
5266	1147	"res_0"	"int"	32	0	0	0
5267	1147	"arg_1"	"char"	0	0	1	1
5268	1147	"arg_2"	"char"	0	0	1	2
5269	1148	"res_0"	"int"	32	0	0	0
5270	1148	"arg_1"	"char"	0	0	1	1
5271	1148	"arg_2"	"char"	0	0	1	2
5272	1149	"res_0"	"double"	53	0	0	0
5273	1149	"arg_1"	"char"	0	0	1	1
5274	1149	"arg_2"	"char"	0	0	1	2
5275	1150	"res_0"	"char"	0	0	0	0
5276	1150	"arg_1"	"char"	0	0	1	1
5277	1151	"res_0"	"int"	32	0	0	0
5278	1151	"arg_1"	"char"	0	0	1	1
5279	1151	"arg_2"	"char"	0	0	1	2
5280	1152	"res_0"	"int"	32	0	0	0
5281	1152	"arg_1"	"char"	0	0	1	1
5282	1152	"arg_2"	"char"	0	0	1	2
5283	1152	"arg_3"	"int"	32	0	1	3
5284	1152	"arg_4"	"int"	32	0	1	4
5285	1152	"arg_5"	"int"	32	0	1	5
5286	1153	"res_0"	"tinyint"	8	0	0	0
5287	1153	"arg_1"	"varchar"	0	0	1	1
5288	1153	"arg_2"	"boolean"	1	0	1	2
5289	1154	"res_0"	"smallint"	16	0	0	0
5290	1154	"arg_1"	"varchar"	0	0	1	1
5291	1154	"arg_2"	"boolean"	1	0	1	2
5292	1155	"res_0"	"int"	32	0	0	0
5293	1155	"arg_1"	"varchar"	0	0	1	1
5294	1155	"arg_2"	"boolean"	1	0	1	2
5295	1156	"res_0"	"varchar"	0	0	0	0
5296	1156	"arg_1"	"varchar"	0	0	1	1
5297	1157	"res_0"	"int"	32	0	0	0
5298	1157	"arg_1"	"varchar"	0	0	1	1
5299	1157	"arg_2"	"varchar"	0	0	1	2
5300	1158	"res_0"	"int"	32	0	0	0
5301	1158	"arg_1"	"varchar"	0	0	1	1
5302	1158	"arg_2"	"varchar"	0	0	1	2
5303	1158	"arg_3"	"int"	32	0	1	3
5304	1159	"res_0"	"varchar"	0	0	0	0
5305	1159	"arg_1"	"varchar"	0	0	1	1
5306	1159	"arg_2"	"varchar"	0	0	1	2
5307	1159	"arg_3"	"int"	32	0	1	3
5308	1160	"res_0"	"varchar"	0	0	0	0
5309	1160	"arg_1"	"varchar"	0	0	1	1
5310	1160	"arg_2"	"int"	32	0	1	2
5311	1161	"res_0"	"varchar"	0	0	0	0
5312	1161	"arg_1"	"varchar"	0	0	1	1
5313	1161	"arg_2"	"int"	32	0	1	2
5314	1161	"arg_3"	"int"	32	0	1	3
5315	1162	"res_0"	"boolean"	1	0	0	0
5316	1162	"arg_1"	"varchar"	0	0	1	1
5317	1162	"arg_2"	"varchar"	0	0	1	2
5318	1163	"res_0"	"boolean"	1	0	0	0
5319	1163	"arg_1"	"varchar"	0	0	1	1
5320	1163	"arg_2"	"varchar"	0	0	1	2
5321	1163	"arg_3"	"varchar"	0	0	1	3
5322	1164	"res_0"	"boolean"	1	0	0	0
5323	1164	"arg_1"	"varchar"	0	0	1	1
5324	1164	"arg_2"	"varchar"	0	0	1	2
5325	1165	"res_0"	"boolean"	1	0	0	0
5326	1165	"arg_1"	"varchar"	0	0	1	1
5327	1165	"arg_2"	"varchar"	0	0	1	2
5328	1165	"arg_3"	"varchar"	0	0	1	3
5329	1166	"res_0"	"boolean"	1	0	0	0
5330	1166	"arg_1"	"varchar"	0	0	1	1
5331	1166	"arg_2"	"varchar"	0	0	1	2
5332	1167	"res_0"	"boolean"	1	0	0	0
5333	1167	"arg_1"	"varchar"	0	0	1	1
5334	1167	"arg_2"	"varchar"	0	0	1	2
5335	1167	"arg_3"	"varchar"	0	0	1	3
5336	1168	"res_0"	"boolean"	1	0	0	0
5337	1168	"arg_1"	"varchar"	0	0	1	1
5338	1168	"arg_2"	"varchar"	0	0	1	2
5339	1169	"res_0"	"boolean"	1	0	0	0
5340	1169	"arg_1"	"varchar"	0	0	1	1
5341	1169	"arg_2"	"varchar"	0	0	1	2
5342	1169	"arg_3"	"varchar"	0	0	1	3
5343	1170	"res_0"	"int"	32	0	0	0
5344	1170	"arg_1"	"varchar"	0	0	1	1
5345	1170	"arg_2"	"varchar"	0	0	1	2
5346	1171	"res_0"	"varchar"	0	0	0	0
5347	1171	"arg_1"	"varchar"	0	0	1	1
5348	1171	"arg_2"	"int"	32	0	1	2
5349	1172	"res_0"	"varchar"	0	0	0	0
5350	1172	"arg_1"	"varchar"	0	0	1	1
5351	1172	"arg_2"	"varchar"	0	0	1	2
5352	1173	"res_0"	"int"	32	0	0	0
5353	1173	"arg_1"	"varchar"	0	0	1	1
5354	1174	"res_0"	"varchar"	0	0	0	0
5355	1174	"arg_1"	"int"	32	0	1	1
5356	1175	"res_0"	"int"	32	0	0	0
5357	1175	"arg_1"	"varchar"	0	0	1	1
5358	1176	"res_0"	"varchar"	0	0	0	0
5359	1176	"arg_1"	"varchar"	0	0	1	1
5360	1176	"arg_2"	"int"	32	0	1	2
5361	1177	"res_0"	"varchar"	0	0	0	0
5362	1177	"arg_1"	"varchar"	0	0	1	1
5363	1177	"arg_2"	"int"	32	0	1	2
5364	1178	"res_0"	"varchar"	0	0	0	0
5365	1178	"arg_1"	"varchar"	0	0	1	1
5366	1179	"res_0"	"varchar"	0	0	0	0
5367	1179	"arg_1"	"varchar"	0	0	1	1
5368	1180	"res_0"	"varchar"	0	0	0	0
5369	1180	"arg_1"	"varchar"	0	0	1	1
5370	1181	"res_0"	"varchar"	0	0	0	0
5371	1181	"arg_1"	"varchar"	0	0	1	1
5372	1182	"res_0"	"varchar"	0	0	0	0
5373	1182	"arg_1"	"varchar"	0	0	1	1
5374	1183	"res_0"	"varchar"	0	0	0	0
5375	1183	"arg_1"	"varchar"	0	0	1	1
5376	1183	"arg_2"	"varchar"	0	0	1	2
5377	1184	"res_0"	"varchar"	0	0	0	0
5378	1184	"arg_1"	"varchar"	0	0	1	1
5379	1185	"res_0"	"varchar"	0	0	0	0
5380	1185	"arg_1"	"varchar"	0	0	1	1
5381	1185	"arg_2"	"varchar"	0	0	1	2
5382	1186	"res_0"	"varchar"	0	0	0	0
5383	1186	"arg_1"	"varchar"	0	0	1	1
5384	1187	"res_0"	"varchar"	0	0	0	0
5385	1187	"arg_1"	"varchar"	0	0	1	1
5386	1187	"arg_2"	"varchar"	0	0	1	2
5387	1188	"res_0"	"varchar"	0	0	0	0
5388	1188	"arg_1"	"varchar"	0	0	1	1
5389	1188	"arg_2"	"int"	32	0	1	2
5390	1189	"res_0"	"varchar"	0	0	0	0
5391	1189	"arg_1"	"varchar"	0	0	1	1
5392	1189	"arg_2"	"int"	32	0	1	2
5393	1189	"arg_3"	"varchar"	0	0	1	3
5394	1190	"res_0"	"varchar"	0	0	0	0
5395	1190	"arg_1"	"varchar"	0	0	1	1
5396	1190	"arg_2"	"int"	32	0	1	2
5397	1191	"res_0"	"varchar"	0	0	0	0
5398	1191	"arg_1"	"varchar"	0	0	1	1
5399	1191	"arg_2"	"int"	32	0	1	2
5400	1191	"arg_3"	"varchar"	0	0	1	3
5401	1192	"res_0"	"varchar"	0	0	0	0
5402	1192	"arg_1"	"varchar"	0	0	1	1
5403	1192	"arg_2"	"int"	32	0	1	2
5404	1192	"arg_3"	"int"	32	0	1	3
5405	1192	"arg_4"	"varchar"	0	0	1	4
5406	1193	"res_0"	"varchar"	0	0	0	0
5407	1193	"arg_1"	"varchar"	0	0	1	1
5408	1193	"arg_2"	"varchar"	0	0	1	2
5409	1193	"arg_3"	"varchar"	0	0	1	3
5410	1194	"res_0"	"varchar"	0	0	0	0
5411	1194	"arg_1"	"varchar"	0	0	1	1
5412	1194	"arg_2"	"int"	32	0	1	2
5413	1195	"res_0"	"varchar"	0	0	0	0
5414	1195	"arg_1"	"int"	32	0	1	1
5415	1196	"res_0"	"int"	32	0	0	0
5416	1196	"arg_1"	"varchar"	0	0	1	1
5417	1197	"res_0"	"int"	32	0	0	0
5418	1197	"arg_1"	"varchar"	0	0	1	1
5419	1198	"res_0"	"int"	32	0	0	0
5420	1198	"arg_1"	"varchar"	0	0	1	1
5421	1199	"res_0"	"varchar"	0	0	0	0
5422	1199	"arg_1"	"varchar"	0	0	1	1
5423	1200	"res_0"	"int"	32	0	0	0
5424	1200	"arg_1"	"varchar"	0	0	1	1
5425	1200	"arg_2"	"varchar"	0	0	1	2
5426	1201	"res_0"	"int"	32	0	0	0
5427	1201	"arg_1"	"varchar"	0	0	1	1
5428	1201	"arg_2"	"varchar"	0	0	1	2
5429	1202	"res_0"	"int"	32	0	0	0
5430	1202	"arg_1"	"varchar"	0	0	1	1
5431	1202	"arg_2"	"varchar"	0	0	1	2
5432	1203	"res_0"	"double"	53	0	0	0
5433	1203	"arg_1"	"varchar"	0	0	1	1
5434	1203	"arg_2"	"varchar"	0	0	1	2
5435	1204	"res_0"	"varchar"	0	0	0	0
5436	1204	"arg_1"	"varchar"	0	0	1	1
5437	1205	"res_0"	"int"	32	0	0	0
5438	1205	"arg_1"	"varchar"	0	0	1	1
5439	1205	"arg_2"	"varchar"	0	0	1	2
5440	1206	"res_0"	"int"	32	0	0	0
5441	1206	"arg_1"	"varchar"	0	0	1	1
5442	1206	"arg_2"	"varchar"	0	0	1	2
5443	1206	"arg_3"	"int"	32	0	1	3
5444	1206	"arg_4"	"int"	32	0	1	4
5445	1206	"arg_5"	"int"	32	0	1	5
5446	1207	"res_0"	"tinyint"	8	0	0	0
5447	1207	"arg_1"	"clob"	0	0	1	1
5448	1207	"arg_2"	"boolean"	1	0	1	2
5449	1208	"res_0"	"smallint"	16	0	0	0
5450	1208	"arg_1"	"clob"	0	0	1	1
5451	1208	"arg_2"	"boolean"	1	0	1	2
5452	1209	"res_0"	"int"	32	0	0	0
5453	1209	"arg_1"	"clob"	0	0	1	1
5454	1209	"arg_2"	"boolean"	1	0	1	2
5455	1210	"res_0"	"clob"	0	0	0	0
5456	1210	"arg_1"	"clob"	0	0	1	1
5457	1211	"res_0"	"int"	32	0	0	0
5458	1211	"arg_1"	"clob"	0	0	1	1
5459	1211	"arg_2"	"clob"	0	0	1	2
5460	1212	"res_0"	"int"	32	0	0	0
5461	1212	"arg_1"	"clob"	0	0	1	1
5462	1212	"arg_2"	"clob"	0	0	1	2
5463	1212	"arg_3"	"int"	32	0	1	3
5464	1213	"res_0"	"clob"	0	0	0	0
5465	1213	"arg_1"	"clob"	0	0	1	1
5466	1213	"arg_2"	"clob"	0	0	1	2
5467	1213	"arg_3"	"int"	32	0	1	3
5468	1214	"res_0"	"clob"	0	0	0	0
5469	1214	"arg_1"	"clob"	0	0	1	1
5470	1214	"arg_2"	"int"	32	0	1	2
5471	1215	"res_0"	"clob"	0	0	0	0
5472	1215	"arg_1"	"clob"	0	0	1	1
5473	1215	"arg_2"	"int"	32	0	1	2
5474	1215	"arg_3"	"int"	32	0	1	3
5475	1216	"res_0"	"boolean"	1	0	0	0
5476	1216	"arg_1"	"clob"	0	0	1	1
5477	1216	"arg_2"	"clob"	0	0	1	2
5478	1217	"res_0"	"boolean"	1	0	0	0
5479	1217	"arg_1"	"clob"	0	0	1	1
5480	1217	"arg_2"	"clob"	0	0	1	2
5481	1217	"arg_3"	"clob"	0	0	1	3
5482	1218	"res_0"	"boolean"	1	0	0	0
5483	1218	"arg_1"	"clob"	0	0	1	1
5484	1218	"arg_2"	"clob"	0	0	1	2
5485	1219	"res_0"	"boolean"	1	0	0	0
5486	1219	"arg_1"	"clob"	0	0	1	1
5487	1219	"arg_2"	"clob"	0	0	1	2
5488	1219	"arg_3"	"clob"	0	0	1	3
5489	1220	"res_0"	"boolean"	1	0	0	0
5490	1220	"arg_1"	"clob"	0	0	1	1
5491	1220	"arg_2"	"clob"	0	0	1	2
5492	1221	"res_0"	"boolean"	1	0	0	0
5493	1221	"arg_1"	"clob"	0	0	1	1
5494	1221	"arg_2"	"clob"	0	0	1	2
5495	1221	"arg_3"	"clob"	0	0	1	3
5496	1222	"res_0"	"boolean"	1	0	0	0
5497	1222	"arg_1"	"clob"	0	0	1	1
5498	1222	"arg_2"	"clob"	0	0	1	2
5499	1223	"res_0"	"boolean"	1	0	0	0
5500	1223	"arg_1"	"clob"	0	0	1	1
5501	1223	"arg_2"	"clob"	0	0	1	2
5502	1223	"arg_3"	"clob"	0	0	1	3
5503	1224	"res_0"	"int"	32	0	0	0
5504	1224	"arg_1"	"clob"	0	0	1	1
5505	1224	"arg_2"	"clob"	0	0	1	2
5506	1225	"res_0"	"clob"	0	0	0	0
5507	1225	"arg_1"	"clob"	0	0	1	1
5508	1225	"arg_2"	"int"	32	0	1	2
5509	1226	"res_0"	"clob"	0	0	0	0
5510	1226	"arg_1"	"clob"	0	0	1	1
5511	1226	"arg_2"	"clob"	0	0	1	2
5512	1227	"res_0"	"int"	32	0	0	0
5513	1227	"arg_1"	"clob"	0	0	1	1
5514	1228	"res_0"	"clob"	0	0	0	0
5515	1228	"arg_1"	"int"	32	0	1	1
5516	1229	"res_0"	"int"	32	0	0	0
5517	1229	"arg_1"	"clob"	0	0	1	1
5518	1230	"res_0"	"clob"	0	0	0	0
5519	1230	"arg_1"	"clob"	0	0	1	1
5520	1230	"arg_2"	"int"	32	0	1	2
5521	1231	"res_0"	"clob"	0	0	0	0
5522	1231	"arg_1"	"clob"	0	0	1	1
5523	1231	"arg_2"	"int"	32	0	1	2
5524	1232	"res_0"	"clob"	0	0	0	0
5525	1232	"arg_1"	"clob"	0	0	1	1
5526	1233	"res_0"	"clob"	0	0	0	0
5527	1233	"arg_1"	"clob"	0	0	1	1
5528	1234	"res_0"	"clob"	0	0	0	0
5529	1234	"arg_1"	"clob"	0	0	1	1
5530	1235	"res_0"	"clob"	0	0	0	0
5531	1235	"arg_1"	"clob"	0	0	1	1
5532	1236	"res_0"	"clob"	0	0	0	0
5533	1236	"arg_1"	"clob"	0	0	1	1
5534	1237	"res_0"	"clob"	0	0	0	0
5535	1237	"arg_1"	"clob"	0	0	1	1
5536	1237	"arg_2"	"clob"	0	0	1	2
5537	1238	"res_0"	"clob"	0	0	0	0
5538	1238	"arg_1"	"clob"	0	0	1	1
5539	1239	"res_0"	"clob"	0	0	0	0
5540	1239	"arg_1"	"clob"	0	0	1	1
5541	1239	"arg_2"	"clob"	0	0	1	2
5542	1240	"res_0"	"clob"	0	0	0	0
5543	1240	"arg_1"	"clob"	0	0	1	1
5544	1241	"res_0"	"clob"	0	0	0	0
5545	1241	"arg_1"	"clob"	0	0	1	1
5546	1241	"arg_2"	"clob"	0	0	1	2
5547	1242	"res_0"	"clob"	0	0	0	0
5548	1242	"arg_1"	"clob"	0	0	1	1
5549	1242	"arg_2"	"int"	32	0	1	2
5550	1243	"res_0"	"clob"	0	0	0	0
5551	1243	"arg_1"	"clob"	0	0	1	1
5552	1243	"arg_2"	"int"	32	0	1	2
5553	1243	"arg_3"	"clob"	0	0	1	3
5554	1244	"res_0"	"clob"	0	0	0	0
5555	1244	"arg_1"	"clob"	0	0	1	1
5556	1244	"arg_2"	"int"	32	0	1	2
5557	1245	"res_0"	"clob"	0	0	0	0
5558	1245	"arg_1"	"clob"	0	0	1	1
5559	1245	"arg_2"	"int"	32	0	1	2
5560	1245	"arg_3"	"clob"	0	0	1	3
5561	1246	"res_0"	"clob"	0	0	0	0
5562	1246	"arg_1"	"clob"	0	0	1	1
5563	1246	"arg_2"	"int"	32	0	1	2
5564	1246	"arg_3"	"int"	32	0	1	3
5565	1246	"arg_4"	"clob"	0	0	1	4
5566	1247	"res_0"	"clob"	0	0	0	0
5567	1247	"arg_1"	"clob"	0	0	1	1
5568	1247	"arg_2"	"clob"	0	0	1	2
5569	1247	"arg_3"	"clob"	0	0	1	3
5570	1248	"res_0"	"clob"	0	0	0	0
5571	1248	"arg_1"	"clob"	0	0	1	1
5572	1248	"arg_2"	"int"	32	0	1	2
5573	1249	"res_0"	"clob"	0	0	0	0
5574	1249	"arg_1"	"int"	32	0	1	1
5575	1250	"res_0"	"int"	32	0	0	0
5576	1250	"arg_1"	"clob"	0	0	1	1
5577	1251	"res_0"	"int"	32	0	0	0
5578	1251	"arg_1"	"clob"	0	0	1	1
5579	1252	"res_0"	"int"	32	0	0	0
5580	1252	"arg_1"	"clob"	0	0	1	1
5581	1253	"res_0"	"clob"	0	0	0	0
5582	1253	"arg_1"	"clob"	0	0	1	1
5583	1254	"res_0"	"int"	32	0	0	0
5584	1254	"arg_1"	"clob"	0	0	1	1
5585	1254	"arg_2"	"clob"	0	0	1	2
5586	1255	"res_0"	"int"	32	0	0	0
5587	1255	"arg_1"	"clob"	0	0	1	1
5588	1255	"arg_2"	"clob"	0	0	1	2
5589	1256	"res_0"	"int"	32	0	0	0
5590	1256	"arg_1"	"clob"	0	0	1	1
5591	1256	"arg_2"	"clob"	0	0	1	2
5592	1257	"res_0"	"double"	53	0	0	0
5593	1257	"arg_1"	"clob"	0	0	1	1
5594	1257	"arg_2"	"clob"	0	0	1	2
5595	1258	"res_0"	"clob"	0	0	0	0
5596	1258	"arg_1"	"clob"	0	0	1	1
5597	1259	"res_0"	"int"	32	0	0	0
5598	1259	"arg_1"	"clob"	0	0	1	1
5599	1259	"arg_2"	"clob"	0	0	1	2
5600	1260	"res_0"	"int"	32	0	0	0
5601	1260	"arg_1"	"clob"	0	0	1	1
5602	1260	"arg_2"	"clob"	0	0	1	2
5603	1260	"arg_3"	"int"	32	0	1	3
5604	1260	"arg_4"	"int"	32	0	1	4
5605	1260	"arg_5"	"int"	32	0	1	5
5606	1261	"res_0"	"table"	0	0	0	0
5607	1261	"arg_1"	"varchar"	0	0	1	1
5608	1261	"arg_2"	"varchar"	0	0	1	2
5609	1261	"arg_3"	"varchar"	0	0	1	3
5610	1261	"arg_4"	"varchar"	0	0	1	4
5611	1261	"arg_5"	"varchar"	0	0	1	5
5612	1261	"arg_6"	"varchar"	0	0	1	6
5613	1261	"arg_7"	"bigint"	64	0	1	7
5614	1261	"arg_8"	"bigint"	64	0	1	8
5615	1261	"arg_9"	"int"	32	0	1	9
5616	1262	"res_0"	"table"	0	0	0	0
5617	1262	"arg_1"	"varchar"	0	0	1	1
5618	1262	"arg_2"	"varchar"	0	0	1	2
5619	60	"res"	"boolean"	1	0	0	0
5620	60	"arg"	"oid"	63	0	1	1
5621	72	"res"	"any"	0	0	0	0
5622	72	"arg"	"any"	0	0	1	1
5623	73	"res"	"boolean"	1	0	0	0
5624	73	"arg"	"any"	0	0	1	1
5625	74	"res"	"boolean"	1	0	0	0
5626	74	"arg"	"any"	0	0	1	1
5627	79	"res"	"any"	0	0	0	0
5628	79	"arg"	"any"	0	0	1	1
5629	80	"res"	"any"	0	0	0	0
5630	80	"arg"	"any"	0	0	1	1
5631	84	"res"	"bigint"	64	0	0	0
5632	84	"arg"	"tinyint"	8	0	1	1
5633	85	"res"	"bigint"	64	0	0	0
5634	85	"arg"	"smallint"	16	0	1	1
5635	86	"res"	"bigint"	64	0	0	0
5636	86	"arg"	"int"	32	0	1	1
5637	87	"res"	"bigint"	64	0	0	0
5638	87	"arg"	"bigint"	64	0	1	1
5639	88	"res"	"wrd"	64	0	0	0
5640	88	"arg"	"wrd"	64	0	1	1
5641	89	"res"	"decimal"	19	0	0	0
5642	89	"arg"	"decimal"	2	0	1	1
5643	90	"res"	"decimal"	19	0	0	0
5644	90	"arg"	"decimal"	4	0	1	1
5645	91	"res"	"decimal"	19	0	0	0
5646	91	"arg"	"decimal"	9	0	1	1
5647	92	"res"	"decimal"	19	0	0	0
5648	92	"arg"	"decimal"	19	0	1	1
5649	93	"res"	"bigint"	64	0	0	0
5650	93	"arg"	"tinyint"	8	0	1	1
5651	94	"res"	"bigint"	64	0	0	0
5652	94	"arg"	"smallint"	16	0	1	1
5653	95	"res"	"bigint"	64	0	0	0
5654	95	"arg"	"int"	32	0	1	1
5655	96	"res"	"bigint"	64	0	0	0
5656	96	"arg"	"bigint"	64	0	1	1
5657	97	"res"	"decimal"	19	0	0	0
5658	97	"arg"	"decimal"	2	0	1	1
5659	98	"res"	"decimal"	19	0	0	0
5660	98	"arg"	"decimal"	4	0	1	1
5661	99	"res"	"decimal"	19	0	0	0
5662	99	"arg"	"decimal"	9	0	1	1
5663	100	"res"	"decimal"	19	0	0	0
5664	100	"arg"	"decimal"	19	0	1	1
5665	113	"res"	"real"	24	0	0	0
5666	113	"arg"	"real"	24	0	1	1
5667	114	"res"	"real"	24	0	0	0
5668	114	"arg"	"real"	24	0	1	1
5669	115	"res"	"double"	53	0	0	0
5670	115	"arg"	"double"	53	0	1	1
5671	116	"res"	"double"	53	0	0	0
5672	116	"arg"	"double"	53	0	1	1
5673	117	"res"	"month_interval"	32	0	0	0
5674	117	"arg"	"month_interval"	32	0	1	1
5675	118	"res"	"sec_interval"	13	0	0	0
5676	118	"arg"	"sec_interval"	13	0	1	1
5677	119	"res"	"double"	53	0	0	0
5678	119	"arg"	"double"	53	0	1	1
5679	120	"res"	"wrd"	64	0	0	0
5680	121	"res"	"wrd"	64	0	0	0
5703	5702	"name"	"varchar"	1024	0	0	0
5704	5702	"value"	"varchar"	2048	0	0	1
5706	5705	"name"	"varchar"	1024	0	0	0
5712	5711	"name"	"varchar"	2048	0	0	0
5732	5731	"val"	"clob"	0	0	1	0
5733	5731	"pat"	"clob"	0	0	1	1
5734	5731	"esc"	"clob"	0	0	1	2
5737	5736	"val"	"clob"	0	0	1	0
5738	5736	"pat"	"clob"	0	0	1	1
5739	5736	"esc"	"clob"	0	0	1	2
5742	5741	"val"	"clob"	0	0	1	0
5743	5741	"pat"	"clob"	0	0	1	1
5746	5745	"val"	"clob"	0	0	1	0
5747	5745	"pat"	"clob"	0	0	1	1
5750	5749	"result"	"double"	53	0	0	0
5751	5749	"r"	"double"	53	0	1	1
5754	5753	"result"	"double"	53	0	0	0
5755	5753	"d"	"double"	53	0	1	1
5761	5760	"result"	"clob"	0	0	0	0
5762	5760	"theurl"	"url"	0	0	1	1
5765	5764	"result"	"clob"	0	0	0	0
5766	5764	"theurl"	"url"	0	0	1	1
5769	5768	"result"	"clob"	0	0	0	0
5770	5768	"theurl"	"url"	0	0	1	1
5773	5772	"result"	"clob"	0	0	0	0
5774	5772	"theurl"	"url"	0	0	1	1
5777	5776	"result"	"clob"	0	0	0	0
5778	5776	"theurl"	"url"	0	0	1	1
5781	5780	"result"	"clob"	0	0	0	0
5782	5780	"theurl"	"url"	0	0	1	1
5785	5784	"result"	"clob"	0	0	0	0
5786	5784	"theurl"	"url"	0	0	1	1
5789	5788	"result"	"clob"	0	0	0	0
5790	5788	"theurl"	"url"	0	0	1	1
5793	5792	"result"	"clob"	0	0	0	0
5794	5792	"theurl"	"url"	0	0	1	1
5797	5796	"result"	"clob"	0	0	0	0
5798	5796	"theurl"	"url"	0	0	1	1
5801	5800	"result"	"clob"	0	0	0	0
5802	5800	"theurl"	"url"	0	0	1	1
5805	5804	"result"	"clob"	0	0	0	0
5806	5804	"theurl"	"url"	0	0	1	1
5809	5808	"result"	"clob"	0	0	0	0
5810	5808	"theurl"	"url"	0	0	1	1
5813	5812	"result"	"boolean"	1	0	0	0
5814	5812	"theurl"	"url"	0	0	1	1
5817	5816	"result"	"url"	0	0	0	0
5818	5816	"protocol"	"clob"	0	0	1	1
5819	5816	"hostname"	"clob"	0	0	1	2
5820	5816	"port"	"int"	32	0	1	3
5821	5816	"file"	"clob"	0	0	1	4
5824	5823	"result"	"url"	0	0	0	0
5825	5823	"protocol"	"clob"	0	0	1	1
5826	5823	"hostname"	"clob"	0	0	1	2
5827	5823	"file"	"clob"	0	0	1	3
5830	5829	"result"	"date"	0	0	0	0
5831	5829	"s"	"clob"	0	0	1	1
5832	5829	"format"	"clob"	0	0	1	2
5835	5834	"result"	"clob"	0	0	0	0
5836	5834	"d"	"date"	0	0	1	1
5837	5834	"format"	"clob"	0	0	1	2
5840	5839	"result"	"time"	1	0	0	0
5841	5839	"s"	"clob"	0	0	1	1
5842	5839	"format"	"clob"	0	0	1	2
5845	5844	"result"	"clob"	0	0	0	0
5846	5844	"d"	"time"	1	0	1	1
5847	5844	"format"	"clob"	0	0	1	2
5850	5849	"result"	"timestamp"	7	0	0	0
5851	5849	"s"	"clob"	0	0	1	1
5852	5849	"format"	"clob"	0	0	1	2
5855	5854	"result"	"clob"	0	0	0	0
5856	5854	"d"	"timestamp"	7	0	1	1
5857	5854	"format"	"clob"	0	0	1	2
5861	5860	"result"	"inet"	0	0	0	0
5862	5860	"p"	"inet"	0	0	1	1
5865	5864	"result"	"clob"	0	0	0	0
5866	5864	"p"	"inet"	0	0	1	1
5869	5868	"result"	"int"	32	0	0	0
5870	5868	"p"	"inet"	0	0	1	1
5873	5872	"result"	"inet"	0	0	0	0
5874	5872	"p"	"inet"	0	0	1	1
5875	5872	"mask"	"int"	32	0	1	2
5878	5877	"result"	"inet"	0	0	0	0
5879	5877	"p"	"inet"	0	0	1	1
5882	5881	"result"	"inet"	0	0	0	0
5883	5881	"p"	"inet"	0	0	1	1
5886	5885	"result"	"inet"	0	0	0	0
5887	5885	"p"	"inet"	0	0	1	1
5890	5889	"result"	"clob"	0	0	0	0
5891	5889	"p"	"inet"	0	0	1	1
5894	5893	"result"	"clob"	0	0	0	0
5895	5893	"p"	"inet"	0	0	1	1
5898	5897	"result"	"boolean"	1	0	0	0
5899	5897	"i1"	"inet"	0	0	1	1
5900	5897	"i2"	"inet"	0	0	1	2
5903	5902	"result"	"boolean"	1	0	0	0
5904	5902	"i1"	"inet"	0	0	1	1
5905	5902	"i2"	"inet"	0	0	1	2
5908	5907	"result"	"boolean"	1	0	0	0
5909	5907	"i1"	"inet"	0	0	1	1
5910	5907	"i2"	"inet"	0	0	1	2
5913	5912	"result"	"boolean"	1	0	0	0
5914	5912	"i1"	"inet"	0	0	1	1
5915	5912	"i2"	"inet"	0	0	1	2
5918	5917	"id"	"oid"	63	0	0	0
5919	5917	"owner"	"clob"	0	0	0	1
5920	5917	"defined"	"timestamp"	7	0	0	2
5921	5917	"query"	"clob"	0	0	0	3
5922	5917	"pipe"	"clob"	0	0	0	4
5923	5917	"plan"	"clob"	0	0	0	5
5924	5917	"mal"	"int"	32	0	0	6
5925	5917	"optimize"	"bigint"	64	0	0	7
5928	5927	"id"	"oid"	63	0	0	0
5929	5927	"start"	"timestamp"	7	0	0	1
5930	5927	"stop"	"timestamp"	7	0	0	2
5931	5927	"arguments"	"clob"	0	0	0	3
5932	5927	"tuples"	"wrd"	64	0	0	4
5933	5927	"run"	"bigint"	64	0	0	5
5934	5927	"ship"	"bigint"	64	0	0	6
5935	5927	"cpu"	"int"	32	0	0	7
5936	5927	"io"	"int"	32	0	0	8
5982	5981	"threshold"	"smallint"	16	0	1	0
5987	5986	"event"	"int"	32	0	0	0
5988	5986	"clk"	"varchar"	20	0	0	1
5989	5986	"pc"	"varchar"	50	0	0	2
5990	5986	"thread"	"int"	32	0	0	3
5991	5986	"ticks"	"bigint"	64	0	0	4
5992	5986	"rrsmb"	"bigint"	64	0	0	5
5993	5986	"vmmb"	"bigint"	64	0	0	6
5994	5986	"reads"	"bigint"	64	0	0	7
5995	5986	"writes"	"bigint"	64	0	0	8
5996	5986	"minflt"	"bigint"	64	0	0	9
5997	5986	"majflt"	"bigint"	64	0	0	10
5998	5986	"nvcsw"	"bigint"	64	0	0	11
5999	5986	"stmt"	"clob"	0	0	0	12
6017	6016	"result"	"timestamp"	7	0	0	0
6018	6016	"sec"	"bigint"	64	0	1	1
6021	6020	"result"	"timestamp"	7	0	0	0
6022	6020	"sec"	"int"	32	0	1	1
6025	6024	"result"	"int"	32	0	0	0
6026	6024	"ts"	"timestamp"	7	0	1	1
6029	6028	"result"	"int"	32	0	0	0
6030	6028	"ts"	"timestamptz"	7	0	1	1
6033	6032	"sys"	"clob"	0	0	1	0
6034	6032	"tab"	"clob"	0	0	1	1
6037	6036	"sys"	"clob"	0	0	1	0
6038	6036	"tab"	"clob"	0	0	1	1
6041	6040	"sys"	"clob"	0	0	1	0
6042	6040	"tab"	"clob"	0	0	1	1
6045	6044	"sch"	"varchar"	100	0	0	0
6046	6044	"usr"	"varchar"	100	0	0	1
6047	6044	"dep_type"	"varchar"	32	0	0	2
6050	6049	"sch"	"varchar"	100	0	0	0
6051	6049	"usr"	"varchar"	100	0	0	1
6052	6049	"dep_type"	"varchar"	32	0	0	2
6055	6054	"sch"	"varchar"	100	0	0	0
6056	6054	"usr"	"varchar"	100	0	0	1
6057	6054	"dep_type"	"varchar"	32	0	0	2
6060	6059	"sch"	"varchar"	100	0	0	0
6061	6059	"usr"	"varchar"	100	0	0	1
6062	6059	"dep_type"	"varchar"	32	0	0	2
6065	6064	"sch"	"varchar"	100	0	0	0
6066	6064	"usr"	"varchar"	100	0	0	1
6067	6064	"dep_type"	"varchar"	32	0	0	2
6070	6069	"sch"	"varchar"	100	0	0	0
6071	6069	"usr"	"varchar"	100	0	0	1
6072	6069	"dep_type"	"varchar"	32	0	0	2
6075	6074	"sch"	"varchar"	100	0	0	0
6076	6074	"usr"	"varchar"	100	0	0	1
6077	6074	"dep_type"	"varchar"	32	0	0	2
6080	6079	"sch"	"varchar"	100	0	0	0
6081	6079	"usr"	"varchar"	100	0	0	1
6082	6079	"dep_type"	"varchar"	32	0	0	2
6085	6084	"sch"	"varchar"	100	0	0	0
6086	6084	"usr"	"varchar"	100	0	0	1
6087	6084	"dep_type"	"varchar"	32	0	0	2
6090	6089	"sch"	"varchar"	100	0	0	0
6091	6089	"usr"	"varchar"	100	0	0	1
6092	6089	"dep_type"	"varchar"	32	0	0	2
6095	6094	"sch"	"varchar"	100	0	0	0
6096	6094	"usr"	"varchar"	100	0	0	1
6097	6094	"dep_type"	"varchar"	32	0	0	2
6100	6099	"sch"	"varchar"	100	0	0	0
6101	6099	"usr"	"varchar"	100	0	0	1
6102	6099	"dep_type"	"varchar"	32	0	0	2
6105	6104	"sch"	"varchar"	100	0	0	0
6106	6104	"usr"	"varchar"	100	0	0	1
6107	6104	"dep_type"	"varchar"	32	0	0	2
6110	6109	"sch"	"varchar"	100	0	0	0
6111	6109	"usr"	"varchar"	100	0	0	1
6112	6109	"dep_type"	"varchar"	32	0	0	2
6115	6114	"sch"	"varchar"	100	0	0	0
6116	6114	"usr"	"varchar"	100	0	0	1
6117	6114	"dep_type"	"varchar"	32	0	0	2
6120	6119	"sch"	"varchar"	100	0	0	0
6121	6119	"usr"	"varchar"	100	0	0	1
6122	6119	"dep_type"	"varchar"	32	0	0	2
6125	6124	"sch"	"varchar"	100	0	0	0
6126	6124	"usr"	"varchar"	100	0	0	1
6127	6124	"dep_type"	"varchar"	32	0	0	2
6130	6129	"result"	"clob"	0	0	0	0
6131	6129	"username"	"clob"	0	0	1	1
6134	6133	"user"	"clob"	0	0	0	0
6135	6133	"login"	"timestamp"	7	0	0	1
6136	6133	"sessiontimeout"	"bigint"	64	0	0	2
6137	6133	"lastcommand"	"timestamp"	7	0	0	3
6138	6133	"querytimeout"	"bigint"	64	0	0	4
6139	6133	"active"	"boolean"	1	0	0	5
6150	6149	"delay"	"tinyint"	8	0	1	0
6153	6152	"delay"	"tinyint"	8	0	1	0
6154	6152	"force"	"boolean"	1	0	1	1
6157	6156	"query"	"bigint"	64	0	1	0
6160	6159	"query"	"bigint"	64	0	1	0
6161	6159	"session"	"bigint"	64	0	1	1
6164	6163	"timeout"	"bigint"	64	0	1	0
6167	6166	"result"	"varchar"	32	0	0	0
6168	6166	"s1"	"varchar"	32	0	1	1
6169	6166	"st"	"int"	32	0	1	2
6170	6166	"len"	"int"	32	0	1	3
6171	6166	"s3"	"varchar"	32	0	1	4
6174	6173	"result"	"double"	53	0	0	0
6175	6173	"num"	"double"	53	0	1	1
6176	6173	"prc"	"int"	32	0	1	2
6179	6178	"result"	"double"	53	0	0	0
6180	6178	"num"	"double"	53	0	1	1
6181	6178	"prc"	"int"	32	0	1	2
6182	6178	"truncat"	"int"	32	0	1	3
6185	6184	"result"	"clob"	0	0	0	0
6186	6184	"num"	"double"	53	0	1	1
6187	6184	"prc"	"int"	32	0	1	2
6188	6184	"truncat"	"int"	32	0	1	3
6191	6190	"result"	"double"	53	0	0	0
6192	6190	"pdec"	"double"	53	0	1	1
6193	6190	"pradius"	"double"	53	0	1	2
6196	6195	"result"	"oid"	63	0	0	0
6197	6195	"x"	"int"	32	0	1	1
6198	6195	"y"	"int"	32	0	1	2
6201	6200	"result"	"int"	32	0	0	0
6202	6200	"z"	"oid"	63	0	1	1
6205	6204	"result"	"int"	32	0	0	0
6206	6204	"z"	"oid"	63	0	1	1
6209	6208	"rewrite"	"clob"	0	0	0	0
6210	6208	"count"	"int"	32	0	0	1
6213	6212	"query"	"clob"	0	0	0	0
6214	6212	"count"	"int"	32	0	0	1
6217	6216	"filename"	"clob"	0	0	1	0
6220	6219	"name"	"clob"	0	0	0	0
6221	6219	"def"	"clob"	0	0	0	1
6222	6219	"status"	"clob"	0	0	0	2
6230	6229	"name"	"clob"	0	0	0	0
6231	6229	"value"	"clob"	0	0	0	1
6238	6237	"id"	"int"	32	0	0	0
6239	6237	"name"	"clob"	0	0	0	1
6240	6237	"ttype"	"clob"	0	0	0	2
6241	6237	"count"	"bigint"	64	0	0	3
6242	6237	"refcnt"	"int"	32	0	0	4
6243	6237	"lrefcnt"	"int"	32	0	0	5
6244	6237	"location"	"clob"	0	0	0	6
6245	6237	"heat"	"int"	32	0	0	7
6246	6237	"dirty"	"clob"	0	0	0	8
6247	6237	"status"	"clob"	0	0	0	9
6248	6237	"kind"	"clob"	0	0	0	10
6251	6250	"signature"	"clob"	0	0	0	0
6252	6250	"address"	"clob"	0	0	0	1
6253	6250	"comment"	"clob"	0	0	0	2
6256	6255	"ra_stmt"	"clob"	0	0	1	0
6257	6255	"opt"	"boolean"	1	0	1	1
6262	6261	"result"	"int"	32	0	0	0
6263	6261	"debug"	"int"	32	0	1	1
6266	6265	"qtag"	"bigint"	64	0	0	0
6267	6265	"user"	"clob"	0	0	0	1
6268	6265	"started"	"timestamp"	7	0	0	2
6269	6265	"estimate"	"timestamp"	7	0	0	3
6270	6265	"progress"	"int"	32	0	0	4
6271	6265	"status"	"clob"	0	0	0	5
6272	6265	"tag"	"oid"	63	0	0	6
6273	6265	"query"	"clob"	0	0	0	7
6286	6285	"tag"	"int"	32	0	1	0
6289	6288	"tag"	"int"	32	0	1	0
6292	6291	"tag"	"int"	32	0	1	0
6295	6294	"tag"	"bigint"	64	0	1	0
6298	6297	"tag"	"bigint"	64	0	1	0
6301	6300	"tag"	"bigint"	64	0	1	0
6304	6303	"rowid"	"bigint"	64	0	0	0
6305	6303	"fldid"	"int"	32	0	0	1
6306	6303	"message"	"clob"	0	0	0	2
6307	6303	"input"	"clob"	0	0	0	3
6318	6317	"result"	"double"	53	0	0	0
6319	6317	"val"	"tinyint"	8	0	1	1
6322	6321	"result"	"double"	53	0	0	0
6323	6321	"val"	"smallint"	16	0	1	1
6326	6325	"result"	"double"	53	0	0	0
6327	6325	"val"	"int"	32	0	1	1
6330	6329	"result"	"double"	53	0	0	0
6331	6329	"val"	"wrd"	64	0	1	1
6334	6333	"result"	"double"	53	0	0	0
6335	6333	"val"	"bigint"	64	0	1	1
6338	6337	"result"	"double"	53	0	0	0
6339	6337	"val"	"real"	24	0	1	1
6342	6341	"result"	"double"	53	0	0	0
6343	6341	"val"	"double"	53	0	1	1
6346	6345	"result"	"double"	53	0	0	0
6347	6345	"val"	"date"	0	0	1	1
6350	6349	"result"	"double"	53	0	0	0
6351	6349	"val"	"time"	1	0	1	1
6354	6353	"result"	"double"	53	0	0	0
6355	6353	"val"	"timestamp"	7	0	1	1
6358	6357	"result"	"double"	53	0	0	0
6359	6357	"val"	"tinyint"	8	0	1	1
6362	6361	"result"	"double"	53	0	0	0
6363	6361	"val"	"smallint"	16	0	1	1
6366	6365	"result"	"double"	53	0	0	0
6367	6365	"val"	"int"	32	0	1	1
6370	6369	"result"	"double"	53	0	0	0
6371	6369	"val"	"wrd"	64	0	1	1
6374	6373	"result"	"double"	53	0	0	0
6375	6373	"val"	"bigint"	64	0	1	1
6378	6377	"result"	"double"	53	0	0	0
6379	6377	"val"	"real"	24	0	1	1
6382	6381	"result"	"double"	53	0	0	0
6383	6381	"val"	"double"	53	0	1	1
6386	6385	"result"	"double"	53	0	0	0
6387	6385	"val"	"date"	0	0	1	1
6390	6389	"result"	"double"	53	0	0	0
6391	6389	"val"	"time"	1	0	1	1
6394	6393	"result"	"double"	53	0	0	0
6395	6393	"val"	"timestamp"	7	0	1	1
6398	6397	"result"	"double"	53	0	0	0
6399	6397	"val"	"tinyint"	8	0	1	1
6402	6401	"result"	"double"	53	0	0	0
6403	6401	"val"	"smallint"	16	0	1	1
6406	6405	"result"	"double"	53	0	0	0
6407	6405	"val"	"int"	32	0	1	1
6410	6409	"result"	"double"	53	0	0	0
6411	6409	"val"	"wrd"	64	0	1	1
6414	6413	"result"	"double"	53	0	0	0
6415	6413	"val"	"bigint"	64	0	1	1
6418	6417	"result"	"double"	53	0	0	0
6419	6417	"val"	"real"	24	0	1	1
6422	6421	"result"	"double"	53	0	0	0
6423	6421	"val"	"double"	53	0	1	1
6426	6425	"result"	"double"	53	0	0	0
6427	6425	"val"	"date"	0	0	1	1
6430	6429	"result"	"double"	53	0	0	0
6431	6429	"val"	"time"	1	0	1	1
6434	6433	"result"	"double"	53	0	0	0
6435	6433	"val"	"timestamp"	7	0	1	1
6438	6437	"result"	"double"	53	0	0	0
6439	6437	"val"	"tinyint"	8	0	1	1
6442	6441	"result"	"double"	53	0	0	0
6443	6441	"val"	"smallint"	16	0	1	1
6446	6445	"result"	"double"	53	0	0	0
6447	6445	"val"	"int"	32	0	1	1
6450	6449	"result"	"double"	53	0	0	0
6451	6449	"val"	"wrd"	64	0	1	1
6454	6453	"result"	"double"	53	0	0	0
6455	6453	"val"	"bigint"	64	0	1	1
6458	6457	"result"	"double"	53	0	0	0
6459	6457	"val"	"real"	24	0	1	1
6462	6461	"result"	"double"	53	0	0	0
6463	6461	"val"	"double"	53	0	1	1
6466	6465	"result"	"double"	53	0	0	0
6467	6465	"val"	"date"	0	0	1	1
6470	6469	"result"	"double"	53	0	0	0
6471	6469	"val"	"time"	1	0	1	1
6474	6473	"result"	"double"	53	0	0	0
6475	6473	"val"	"timestamp"	7	0	1	1
6478	6477	"result"	"tinyint"	8	0	0	0
6479	6477	"val"	"tinyint"	8	0	1	1
6482	6481	"result"	"smallint"	16	0	0	0
6483	6481	"val"	"smallint"	16	0	1	1
6486	6485	"result"	"int"	32	0	0	0
6487	6485	"val"	"int"	32	0	1	1
6490	6489	"result"	"wrd"	64	0	0	0
6491	6489	"val"	"wrd"	64	0	1	1
6494	6493	"result"	"bigint"	64	0	0	0
6495	6493	"val"	"bigint"	64	0	1	1
6498	6497	"result"	"decimal"	18	3	0	0
6499	6497	"val"	"decimal"	18	3	1	1
6502	6501	"result"	"real"	24	0	0	0
6503	6501	"val"	"real"	24	0	1	1
6506	6505	"result"	"double"	53	0	0	0
6507	6505	"val"	"double"	53	0	1	1
6510	6509	"result"	"date"	0	0	0	0
6511	6509	"val"	"date"	0	0	1	1
6514	6513	"result"	"time"	1	0	0	0
6515	6513	"val"	"time"	1	0	1	1
6518	6517	"result"	"timestamp"	7	0	0	0
6519	6517	"val"	"timestamp"	7	0	1	1
6522	6521	"result"	"tinyint"	8	0	0	0
6523	6521	"val"	"tinyint"	8	0	1	1
6524	6521	"q"	"double"	53	0	1	2
6527	6526	"result"	"smallint"	16	0	0	0
6528	6526	"val"	"smallint"	16	0	1	1
6529	6526	"q"	"double"	53	0	1	2
6532	6531	"result"	"int"	32	0	0	0
6533	6531	"val"	"int"	32	0	1	1
6534	6531	"q"	"double"	53	0	1	2
6537	6536	"result"	"wrd"	64	0	0	0
6538	6536	"val"	"wrd"	64	0	1	1
6539	6536	"q"	"double"	53	0	1	2
6542	6541	"result"	"bigint"	64	0	0	0
6543	6541	"val"	"bigint"	64	0	1	1
6544	6541	"q"	"double"	53	0	1	2
6547	6546	"result"	"decimal"	18	3	0	0
6548	6546	"val"	"decimal"	18	3	1	1
6549	6546	"q"	"double"	53	0	1	2
6552	6551	"result"	"real"	24	0	0	0
6553	6551	"val"	"real"	24	0	1	1
6554	6551	"q"	"double"	53	0	1	2
6557	6556	"result"	"double"	53	0	0	0
6558	6556	"val"	"double"	53	0	1	1
6559	6556	"q"	"double"	53	0	1	2
6562	6561	"result"	"date"	0	0	0	0
6563	6561	"val"	"date"	0	0	1	1
6564	6561	"q"	"double"	53	0	1	2
6567	6566	"result"	"time"	1	0	0	0
6568	6566	"val"	"time"	1	0	1	1
6569	6566	"q"	"double"	53	0	1	2
6572	6571	"result"	"timestamp"	7	0	0	0
6573	6571	"val"	"timestamp"	7	0	1	1
6574	6571	"q"	"double"	53	0	1	2
6577	6576	"result"	"tinyint"	8	0	0	0
6578	6576	"e1"	"tinyint"	8	0	1	1
6579	6576	"e2"	"tinyint"	8	0	1	2
6582	6581	"result"	"smallint"	16	0	0	0
6583	6581	"e1"	"smallint"	16	0	1	1
6584	6581	"e2"	"smallint"	16	0	1	2
6587	6586	"result"	"int"	32	0	0	0
6588	6586	"e1"	"int"	32	0	1	1
6589	6586	"e2"	"int"	32	0	1	2
6592	6591	"result"	"wrd"	64	0	0	0
6593	6591	"e1"	"wrd"	64	0	1	1
6594	6591	"e2"	"wrd"	64	0	1	2
6597	6596	"result"	"bigint"	64	0	0	0
6598	6596	"e1"	"bigint"	64	0	1	1
6599	6596	"e2"	"bigint"	64	0	1	2
6602	6601	"result"	"real"	24	0	0	0
6603	6601	"e1"	"real"	24	0	1	1
6604	6601	"e2"	"real"	24	0	1	2
6607	6606	"result"	"double"	53	0	0	0
6608	6606	"e1"	"double"	53	0	1	1
6609	6606	"e2"	"double"	53	0	1	2
6612	6611	"result"	"int"	32	0	0	0
6613	6611	"info"	"int"	32	0	1	1
6616	6615	"result"	"int"	32	0	0	0
6617	6615	"info"	"int"	32	0	1	1
6620	6619	"result"	"clob"	0	0	0	0
6621	6619	"info"	"int"	32	0	1	1
6622	6619	"format"	"int"	32	0	1	2
6643	6642	"result"	"mbr"	0	0	0	0
6644	6642	"geom"	"geometry"	0	0	1	1
6647	6646	"result"	"boolean"	1	0	0	0
6648	6646	"box1"	"mbr"	0	0	1	1
6649	6646	"box2"	"mbr"	0	0	1	2
6652	6651	"result"	"boolean"	1	0	0	0
6653	6651	"box1"	"mbr"	0	0	1	1
6654	6651	"box2"	"mbr"	0	0	1	2
6657	6656	"result"	"boolean"	1	0	0	0
6658	6656	"box1"	"mbr"	0	0	1	1
6659	6656	"box2"	"mbr"	0	0	1	2
6662	6661	"result"	"double"	53	0	0	0
6663	6661	"box1"	"mbr"	0	0	1	1
6664	6661	"box2"	"mbr"	0	0	1	2
6667	6666	"result"	"geometry"	0	0	0	0
6668	6666	"wkt"	"clob"	0	0	1	1
6671	6670	"result"	"geometry"	0	0	0	0
6672	6670	"geom"	"clob"	0	0	1	1
6675	6674	"result"	"clob"	0	0	0	0
6676	6674	"geom"	"geometry"	0	0	1	1
6679	6678	"result"	"clob"	0	0	0	0
6680	6678	"geom"	"geometry"	0	0	1	1
6683	6682	"result"	"int"	32	0	0	0
6684	6682	"geom"	"geometry"	0	0	1	1
6687	6686	"result"	"clob"	0	0	0	0
6688	6686	"geom"	"geometry"	0	0	1	1
6691	6690	"result"	"int"	32	0	0	0
6692	6690	"geom"	"geometry"	0	0	1	1
6695	6694	"result"	"geometry"	0	0	0	0
6696	6694	"geom"	"geometry"	0	0	1	1
6697	6694	"srid"	"int"	32	0	1	2
6700	6699	"result"	"boolean"	1	0	0	0
6701	6699	"geom"	"geometry"	0	0	1	1
6704	6703	"result"	"boolean"	1	0	0	0
6705	6703	"geom"	"geometry"	0	0	1	1
6708	6707	"result"	"geometry"	0	0	0	0
6709	6707	"geom"	"geometry"	0	0	1	1
6712	6711	"result"	"geometry"	0	0	0	0
6713	6711	"geom"	"geometry"	0	0	1	1
6716	6715	"result"	"boolean"	1	0	0	0
6717	6715	"geom1"	"geometry"	0	0	1	1
6718	6715	"geom2"	"geometry"	0	0	1	2
6721	6720	"result"	"boolean"	1	0	0	0
6722	6720	"geom1"	"geometry"	0	0	1	1
6723	6720	"geom2"	"geometry"	0	0	1	2
6726	6725	"result"	"boolean"	1	0	0	0
6727	6725	"geom1"	"geometry"	0	0	1	1
6728	6725	"geom2"	"geometry"	0	0	1	2
6731	6730	"result"	"boolean"	1	0	0	0
6732	6730	"geom1"	"geometry"	0	0	1	1
6733	6730	"geom2"	"geometry"	0	0	1	2
6736	6735	"result"	"boolean"	1	0	0	0
6737	6735	"geom1"	"geometry"	0	0	1	1
6738	6735	"geom2"	"geometry"	0	0	1	2
6741	6740	"result"	"boolean"	1	0	0	0
6742	6740	"geom1"	"geometry"	0	0	1	1
6743	6740	"geom2"	"geometry"	0	0	1	2
6746	6745	"result"	"boolean"	1	0	0	0
6747	6745	"geom1"	"geometry"	0	0	1	1
6748	6745	"geom2"	"geometry"	0	0	1	2
6751	6750	"result"	"boolean"	1	0	0	0
6752	6750	"geom1"	"geometry"	0	0	1	1
6753	6750	"geom2"	"geometry"	0	0	1	2
6756	6755	"result"	"boolean"	1	0	0	0
6757	6755	"geom1"	"geometry"	0	0	1	1
6758	6755	"geom2"	"geometry"	0	0	1	2
6759	6755	"intersection_matrix_pattern"	"clob"	0	0	1	3
6762	6761	"result"	"double"	53	0	0	0
6763	6761	"geom1"	"geometry"	0	0	1	1
6764	6761	"geom2"	"geometry"	0	0	1	2
6767	6766	"result"	"geometry"	0	0	0	0
6768	6766	"geom1"	"geometry"	0	0	1	1
6769	6766	"geom2"	"geometry"	0	0	1	2
6772	6771	"result"	"geometry"	0	0	0	0
6773	6771	"geom1"	"geometry"	0	0	1	1
6774	6771	"geom2"	"geometry"	0	0	1	2
6777	6776	"result"	"geometry"	0	0	0	0
6778	6776	"geom1"	"geometry"	0	0	1	1
6779	6776	"geom2"	"geometry"	0	0	1	2
6782	6781	"result"	"geometry"	0	0	0	0
6783	6781	"geom"	"geometry"	0	0	1	1
6786	6785	"result"	"geometry"	0	0	0	0
6787	6785	"geom1"	"geometry"	0	0	1	1
6788	6785	"geom2"	"geometry"	0	0	1	2
6791	6790	"result"	"geometry"	0	0	0	0
6792	6790	"geom"	"geometry"	0	0	1	1
6793	6790	"radius"	"double"	53	0	1	2
6796	6795	"result"	"geometry"	0	0	0	0
6797	6795	"geom"	"geometry"	0	0	1	1
6800	6799	"result"	"double"	53	0	0	0
6801	6799	"geom"	"geometry"	0	0	1	1
6804	6803	"result"	"double"	53	0	0	0
6805	6803	"geom"	"geometry"	0	0	1	1
6808	6807	"result"	"double"	53	0	0	0
6809	6807	"geom"	"geometry"	0	0	1	1
6812	6811	"result"	"geometry"	0	0	0	0
6813	6811	"geom"	"geometry"	0	0	1	1
6816	6815	"result"	"geometry"	0	0	0	0
6817	6815	"geom"	"geometry"	0	0	1	1
6820	6819	"result"	"boolean"	1	0	0	0
6821	6819	"geom"	"geometry"	0	0	1	1
6824	6823	"result"	"double"	53	0	0	0
6825	6823	"geom"	"geometry"	0	0	1	1
6828	6827	"result"	"boolean"	1	0	0	0
6829	6827	"geom"	"geometry"	0	0	1	1
6832	6831	"result"	"int"	32	0	0	0
6833	6831	"geom"	"geometry"	0	0	1	1
6836	6835	"result"	"geometry"	0	0	0	0
6837	6835	"geom"	"geometry"	0	0	1	1
6838	6835	"positionnum"	"int"	32	0	1	2
6841	6840	"result"	"geometry"	0	0	0	0
6842	6840	"geom"	"geometry"	0	0	1	1
6845	6844	"result"	"geometry"	0	0	0	0
6846	6844	"geom"	"geometry"	0	0	1	1
6849	6848	"result"	"double"	53	0	0	0
6850	6848	"geom"	"geometry"	0	0	1	1
6853	6852	"result"	"geometry"	0	0	0	0
6854	6852	"geom"	"geometry"	0	0	1	1
6857	6856	"result"	"geometry"	0	0	0	0
6858	6856	"geom"	"geometry"	0	0	1	1
6861	6860	"result"	"int"	32	0	0	0
6862	6860	"geom"	"geometry"	0	0	1	1
6865	6864	"result"	"geometry"	0	0	0	0
6866	6864	"geom"	"geometry"	0	0	1	1
6867	6864	"positionnum"	"int"	32	0	1	2
6870	6869	"result"	"geometrya"	0	0	0	0
6871	6869	"geom"	"geometry"	0	0	1	1
6874	6873	"result"	"int"	32	0	0	0
6875	6873	"geom"	"geometry"	0	0	1	1
6878	6877	"result"	"geometry"	0	0	0	0
6879	6877	"geom"	"geometry"	0	0	1	1
6880	6877	"positionnum"	"int"	32	0	1	2
6883	6882	"result"	"int"	32	0	0	0
6884	6882	"geom"	"geometry"	0	0	1	1
6887	6886	"result"	"geometry"	0	0	0	0
6888	6886	"geom"	"geometry"	0	0	1	1
6889	6886	"patchnum"	"int"	32	0	1	2
6892	6891	"result"	"geometry"	0	0	0	0
6893	6891	"wkt"	"clob"	0	0	1	1
6894	6891	"srid"	"int"	32	0	1	2
6897	6896	"result"	"geometry"	0	0	0	0
6898	6896	"wkt"	"clob"	0	0	1	1
6899	6896	"srid"	"int"	32	0	1	2
6902	6901	"result"	"geometry"	0	0	0	0
6903	6901	"wkt"	"clob"	0	0	1	1
6904	6901	"srid"	"int"	32	0	1	2
6907	6906	"result"	"geometry"	0	0	0	0
6908	6906	"wkt"	"clob"	0	0	1	1
6909	6906	"srid"	"int"	32	0	1	2
6912	6911	"result"	"geometry"	0	0	0	0
6913	6911	"wkt"	"clob"	0	0	1	1
6914	6911	"srid"	"int"	32	0	1	2
6917	6916	"result"	"geometry"	0	0	0	0
6918	6916	"wkt"	"clob"	0	0	1	1
6919	6916	"srid"	"int"	32	0	1	2
6922	6921	"result"	"geometry"	0	0	0	0
6923	6921	"wkt"	"clob"	0	0	1	1
6924	6921	"srid"	"int"	32	0	1	2
6927	6926	"result"	"geometry"	0	0	0	0
6928	6926	"wkt"	"clob"	0	0	1	1
6929	6926	"srid"	"int"	32	0	1	2
6932	6931	"result"	"geometry"	0	0	0	0
6933	6931	"wkt"	"clob"	0	0	1	1
6934	6931	"srid"	"int"	32	0	1	2
6937	6936	"result"	"geometry"	0	0	0	0
6938	6936	"wkt"	"clob"	0	0	1	1
6939	6936	"srid"	"int"	32	0	1	2
6942	6941	"result"	"geometry"	0	0	0	0
6943	6941	"wkt"	"clob"	0	0	1	1
6944	6941	"srid"	"int"	32	0	1	2
6947	6946	"result"	"geometry"	0	0	0	0
6948	6946	"wkt"	"clob"	0	0	1	1
6951	6950	"result"	"geometry"	0	0	0	0
6952	6950	"wkt"	"clob"	0	0	1	1
6955	6954	"result"	"geometry"	0	0	0	0
6956	6954	"wkt"	"clob"	0	0	1	1
6959	6958	"result"	"geometry"	0	0	0	0
6960	6958	"wkt"	"clob"	0	0	1	1
6963	6962	"result"	"geometry"	0	0	0	0
6964	6962	"wkt"	"clob"	0	0	1	1
6967	6966	"result"	"geometry"	0	0	0	0
6968	6966	"wkt"	"clob"	0	0	1	1
6971	6970	"result"	"geometry"	0	0	0	0
6972	6970	"wkt"	"clob"	0	0	1	1
6975	6974	"result"	"geometry"	0	0	0	0
6976	6974	"wkt"	"clob"	0	0	1	1
6979	6978	"result"	"geometry"	0	0	0	0
6980	6978	"wkt"	"clob"	0	0	1	1
6983	6982	"result"	"geometry"	0	0	0	0
6984	6982	"x"	"double"	53	0	1	1
6985	6982	"y"	"double"	53	0	1	2
6988	6987	"result"	"geometry"	0	0	0	0
6989	6987	"x"	"double"	53	0	1	1
6990	6987	"y"	"double"	53	0	1	2
6993	6992	"result"	"geometry"	0	0	0	0
6994	6992	"x"	"double"	53	0	1	1
6995	6992	"y"	"double"	53	0	1	2
6996	6992	"z"	"double"	53	0	1	3
6999	6998	"result"	"geometry"	0	0	0	0
7000	6998	"x"	"double"	53	0	1	1
7001	6998	"y"	"double"	53	0	1	2
7002	6998	"z"	"double"	53	0	1	3
7003	6998	"m"	"double"	53	0	1	4
7006	7005	"result"	"geometry"	0	0	0	0
7007	7005	"x"	"double"	53	0	1	1
7008	7005	"y"	"double"	53	0	1	2
7009	7005	"m"	"double"	53	0	1	3
7012	7011	"result"	"geometry"	0	0	0	0
7013	7011	"geom"	"geometry"	0	0	1	1
7016	7015	"result"	"geometry"	0	0	0	0
7017	7015	"geom1"	"geometry"	0	0	1	1
7018	7015	"geom2"	"geometry"	0	0	1	2
7021	7020	"result"	"geometry"	0	0	0	0
7022	7020	"xmin"	"double"	53	0	1	1
7023	7020	"ymin"	"double"	53	0	1	2
7024	7020	"xmax"	"double"	53	0	1	3
7025	7020	"ymax"	"double"	53	0	1	4
7026	7020	"srid"	"int"	32	0	1	5
7029	7028	"result"	"geometry"	0	0	0	0
7030	7028	"xmin"	"double"	53	0	1	1
7031	7028	"ymin"	"double"	53	0	1	2
7032	7028	"xmax"	"double"	53	0	1	3
7033	7028	"ymax"	"double"	53	0	1	4
7036	7035	"result"	"geometry"	0	0	0	0
7037	7035	"geom"	"geometry"	0	0	1	1
7040	7039	"result"	"geometry"	0	0	0	0
7041	7039	"geom"	"geometry"	0	0	1	1
7042	7039	"srid"	"int"	32	0	1	2
7045	7044	"result"	"mbr"	0	0	0	0
7046	7044	"lowleftpointgeom"	"geometry"	0	0	1	1
7047	7044	"uprightpointgeom"	"geometry"	0	0	1	2
7050	7049	"result"	"clob"	0	0	0	0
7051	7049	"geom"	"geometry"	0	0	1	1
7054	7053	"result"	"int"	32	0	0	0
7055	7053	"geom"	"geometry"	0	0	1	1
7058	7057	"result"	"boolean"	1	0	0	0
7059	7057	"geom"	"geometry"	0	0	1	1
7062	7061	"result"	"clob"	0	0	0	0
7063	7061	"geom"	"geometry"	0	0	1	1
7066	7065	"result"	"int"	32	0	0	0
7067	7065	"geom"	"geometry"	0	0	1	1
7070	7069	"result"	"int"	32	0	0	0
7071	7069	"geom"	"geometry"	0	0	1	1
7074	7073	"result"	"int"	32	0	0	0
7075	7073	"geom"	"geometry"	0	0	1	1
7078	7077	"result"	"double"	53	0	0	0
7079	7077	"geom"	"geometry"	0	0	1	1
7082	7081	"result"	"double"	53	0	0	0
7083	7081	"box"	"mbr"	0	0	1	1
7086	7085	"result"	"double"	53	0	0	0
7087	7085	"geom"	"geometry"	0	0	1	1
7090	7089	"result"	"double"	53	0	0	0
7091	7089	"box"	"mbr"	0	0	1	1
7094	7093	"result"	"double"	53	0	0	0
7095	7093	"geom"	"geometry"	0	0	1	1
7098	7097	"result"	"double"	53	0	0	0
7099	7097	"box"	"mbr"	0	0	1	1
7102	7101	"result"	"double"	53	0	0	0
7103	7101	"geom"	"geometry"	0	0	1	1
7106	7105	"result"	"double"	53	0	0	0
7107	7105	"box"	"mbr"	0	0	1	1
7110	7109	"result"	"geometry"	0	0	0	0
7111	7109	"geom"	"geometry"	0	0	1	1
7114	7113	"result"	"geometry"	0	0	0	0
7115	7113	"geom"	"geometry"	0	0	1	1
7118	7117	"result"	"geometry"	0	0	0	0
7119	7117	"geom"	"geometry"	0	0	1	1
7120	7117	"sz"	"double"	53	0	1	2
7123	7122	"result"	"clob"	0	0	0	0
7124	7122	"srid_in"	"int"	32	0	1	1
7127	7126	"result"	"geometry"	0	0	0	0
7128	7126	"geom"	"geometry"	0	0	1	1
7129	7126	"srid_src"	"int"	32	0	1	2
7130	7126	"srid_dest"	"int"	32	0	1	3
7131	7126	"proj4_src"	"clob"	0	0	1	4
7132	7126	"proj4_dest"	"clob"	0	0	1	5
7135	7134	"result"	"geometry"	0	0	0	0
7136	7134	"geom"	"geometry"	0	0	1	1
7137	7134	"srid"	"int"	32	0	1	2
7140	7139	"result"	"geometry"	0	0	0	0
7141	7139	"geom"	"geometry"	0	0	1	1
7142	7139	"dx"	"double"	53	0	1	2
7143	7139	"dy"	"double"	53	0	1	3
7146	7145	"result"	"geometry"	0	0	0	0
7147	7145	"geom"	"geometry"	0	0	1	1
7148	7145	"dx"	"double"	53	0	1	2
7149	7145	"dy"	"double"	53	0	1	3
7150	7145	"dz"	"double"	53	0	1	4
7153	7152	"result"	"clob"	0	0	0	0
7154	7152	"geom"	"geometry"	0	0	1	1
7157	7156	"result"	"boolean"	1	0	0	0
7158	7156	"geom1"	"geometry"	0	0	1	1
7159	7156	"geom2"	"geometry"	0	0	1	2
7162	7161	"result"	"boolean"	1	0	0	0
7163	7161	"geom1"	"geometry"	0	0	1	1
7164	7161	"geom2"	"geometry"	0	0	1	2
7167	7166	"result"	"boolean"	1	0	0	0
7168	7166	"geom1"	"geometry"	0	0	1	1
7169	7166	"geom2"	"geometry"	0	0	1	2
7170	7166	"dst"	"double"	53	0	1	3
7173	7172	"result"	"double"	53	0	0	0
7174	7172	"geom"	"geometry"	0	0	1	1
7177	7176	"result"	"geometry"	0	0	0	0
7178	7176	"geom1"	"geometry"	0	0	1	1
7179	7176	"geom2"	"geometry"	0	0	1	2
7182	7181	"result"	"geometry"	0	0	0	0
7183	7181	"geom"	"geometry"	0	0	1	1
7186	7185	"result"	"geometry"	0	0	0	0
7187	7185	"geom"	"geometry"	0	0	1	1
7188	7185	"tolerance"	"double"	53	0	1	2
7189	7185	"flags"	"int"	32	0	1	3
7192	7191	"id"	"clob"	0	0	0	0
7193	7191	"polygonwkb"	"geometry"	0	0	0	1
7194	7191	"geom"	"geometry"	0	0	1	2
7197	7196	"path"	"clob"	0	0	0	0
7198	7196	"pointg"	"geometry"	0	0	0	1
7199	7196	"geom"	"geometry"	0	0	1	2
7202	7201	"result"	"boolean"	1	0	0	0
7203	7201	"a"	"geometry"	0	0	1	1
7204	7201	"x"	"double"	53	0	1	2
7205	7201	"y"	"double"	53	0	1	3
7210	7209	"result"	"json"	0	0	0	0
7211	7209	"js"	"json"	0	0	1	1
7212	7209	"pathexpr"	"clob"	0	0	1	2
7215	7214	"result"	"json"	0	0	0	0
7216	7214	"js"	"json"	0	0	1	1
7217	7214	"name"	"tinyint"	8	0	1	2
7220	7219	"result"	"json"	0	0	0	0
7221	7219	"js"	"json"	0	0	1	1
7222	7219	"name"	"int"	32	0	1	2
7225	7224	"result"	"json"	0	0	0	0
7226	7224	"js"	"json"	0	0	1	1
7227	7224	"name"	"bigint"	64	0	1	2
7230	7229	"result"	"clob"	0	0	0	0
7231	7229	"js"	"json"	0	0	1	1
7232	7229	"e"	"clob"	0	0	1	2
7235	7234	"result"	"double"	53	0	0	0
7236	7234	"js"	"json"	0	0	1	1
7239	7238	"result"	"bigint"	64	0	0	0
7240	7238	"js"	"json"	0	0	1	1
7243	7242	"result"	"boolean"	1	0	0	0
7244	7242	"js"	"clob"	0	0	1	1
7247	7246	"result"	"boolean"	1	0	0	0
7248	7246	"js"	"clob"	0	0	1	1
7251	7250	"result"	"boolean"	1	0	0	0
7252	7250	"js"	"clob"	0	0	1	1
7255	7254	"result"	"boolean"	1	0	0	0
7256	7254	"js"	"json"	0	0	1	1
7259	7258	"result"	"boolean"	1	0	0	0
7260	7258	"js"	"json"	0	0	1	1
7263	7262	"result"	"boolean"	1	0	0	0
7264	7262	"js"	"json"	0	0	1	1
7267	7266	"result"	"int"	32	0	0	0
7268	7266	"js"	"json"	0	0	1	1
7271	7270	"result"	"json"	0	0	0	0
7272	7270	"js"	"json"	0	0	1	1
7275	7274	"result"	"json"	0	0	0	0
7276	7274	"js"	"json"	0	0	1	1
7279	7278	"result"	"clob"	0	0	0	0
7280	7278	"js"	"json"	0	0	1	1
7283	7282	"result"	"clob"	0	0	0	0
7284	7282	"js"	"clob"	0	0	1	1
7287	7286	"result"	"clob"	0	0	0	0
7288	7286	"js"	"int"	32	0	1	1
7291	7290	"result"	"clob"	0	0	0	0
7292	7290	"js"	"json"	0	0	1	1
7295	7294	"result"	"clob"	0	0	0	0
7296	7294	"x"	"clob"	0	0	1	1
7299	7298	"result"	"clob"	0	0	0	0
7300	7298	"x"	"double"	53	0	1	1
7303	7302	"result"	"clob"	0	0	0	0
7304	7302	"v"	"clob"	0	0	1	1
7308	7307	"result"	"uuid"	0	0	0	0
7311	7310	"result"	"uuid"	0	0	0	0
7312	7310	"u"	"uuid"	0	0	1	1
7315	7314	"result"	"uuid"	0	0	0	0
7316	7314	"u"	"clob"	0	0	1	1
7319	7318	"result"	"double"	53	0	0	0
7320	7318	"chi2"	"double"	53	0	1	1
7321	7318	"datapoints"	"double"	53	0	1	2
7329	7328	"beat"	"int"	32	0	1	0
7332	7331	"poolsize"	"int"	32	0	1	0
7335	7334	"host"	"clob"	0	0	1	0
7336	7334	"port"	"int"	32	0	1	1
7360	7359	"dirname"	"clob"	0	0	1	0
7363	7362	"fname"	"clob"	0	0	1	0
7366	7365	"tname"	"clob"	0	0	1	0
7369	7368	"dirname"	"clob"	0	0	1	0
7370	7368	"pat"	"clob"	0	0	1	1
7405	7404	"fname"	"varchar"	256	0	1	0
7408	7407	"fid"	"int"	32	0	1	0
7409	7407	"varnname"	"varchar"	256	0	1	1
7412	7411	"schema"	"clob"	0	0	0	0
7413	7411	"table"	"clob"	0	0	0	1
7414	7411	"column"	"clob"	0	0	0	2
7415	7411	"type"	"clob"	0	0	0	3
7416	7411	"mode"	"clob"	0	0	0	4
7417	7411	"location"	"clob"	0	0	0	5
7418	7411	"count"	"bigint"	64	0	0	6
7419	7411	"typewidth"	"int"	32	0	0	7
7420	7411	"columnsize"	"bigint"	64	0	0	8
7421	7411	"heapsize"	"bigint"	64	0	0	9
7422	7411	"hashes"	"bigint"	64	0	0	10
7423	7411	"phash"	"boolean"	1	0	0	11
7424	7411	"imprints"	"bigint"	64	0	0	12
7425	7411	"sorted"	"boolean"	1	0	0	13
7444	7443	"schema"	"clob"	0	0	0	0
7445	7443	"table"	"clob"	0	0	0	1
7446	7443	"column"	"clob"	0	0	0	2
7447	7443	"type"	"clob"	0	0	0	3
7448	7443	"mode"	"clob"	0	0	0	4
7449	7443	"location"	"clob"	0	0	0	5
7450	7443	"count"	"bigint"	64	0	0	6
7451	7443	"typewidth"	"int"	32	0	0	7
7452	7443	"columnsize"	"bigint"	64	0	0	8
7453	7443	"heapsize"	"bigint"	64	0	0	9
7454	7443	"hashes"	"bigint"	64	0	0	10
7455	7443	"phash"	"boolean"	1	0	0	11
7456	7443	"imprints"	"bigint"	64	0	0	12
7457	7443	"sorted"	"boolean"	1	0	0	13
7458	7443	"sname"	"clob"	0	0	1	14
7461	7460	"schema"	"clob"	0	0	0	0
7462	7460	"table"	"clob"	0	0	0	1
7463	7460	"column"	"clob"	0	0	0	2
7464	7460	"type"	"clob"	0	0	0	3
7465	7460	"mode"	"clob"	0	0	0	4
7466	7460	"location"	"clob"	0	0	0	5
7467	7460	"count"	"bigint"	64	0	0	6
7468	7460	"typewidth"	"int"	32	0	0	7
7469	7460	"columnsize"	"bigint"	64	0	0	8
7470	7460	"heapsize"	"bigint"	64	0	0	9
7471	7460	"hashes"	"bigint"	64	0	0	10
7472	7460	"phash"	"boolean"	1	0	0	11
7473	7460	"imprints"	"bigint"	64	0	0	12
7474	7460	"sorted"	"boolean"	1	0	0	13
7475	7460	"sname"	"clob"	0	0	1	14
7476	7460	"tname"	"clob"	0	0	1	15
7479	7478	"schema"	"clob"	0	0	0	0
7480	7478	"table"	"clob"	0	0	0	1
7481	7478	"column"	"clob"	0	0	0	2
7482	7478	"type"	"clob"	0	0	0	3
7483	7478	"mode"	"clob"	0	0	0	4
7484	7478	"location"	"clob"	0	0	0	5
7485	7478	"count"	"bigint"	64	0	0	6
7486	7478	"typewidth"	"int"	32	0	0	7
7487	7478	"columnsize"	"bigint"	64	0	0	8
7488	7478	"heapsize"	"bigint"	64	0	0	9
7489	7478	"hashes"	"bigint"	64	0	0	10
7490	7478	"phash"	"boolean"	1	0	0	11
7491	7478	"imprints"	"bigint"	64	0	0	12
7492	7478	"sorted"	"boolean"	1	0	0	13
7493	7478	"sname"	"clob"	0	0	1	14
7494	7478	"tname"	"clob"	0	0	1	15
7495	7478	"cname"	"clob"	0	0	1	16
7512	7511	"result"	"bigint"	64	0	0	0
7513	7511	"nme"	"clob"	0	0	1	1
7514	7511	"i"	"bigint"	64	0	1	2
7515	7511	"d"	"bigint"	64	0	1	3
7518	7517	"result"	"bigint"	64	0	0	0
7519	7517	"tpe"	"clob"	0	0	1	1
7520	7517	"i"	"bigint"	64	0	1	2
7521	7517	"w"	"int"	32	0	1	3
7524	7523	"result"	"bigint"	64	0	0	0
7525	7523	"b"	"boolean"	1	0	1	1
7526	7523	"i"	"bigint"	64	0	1	2
7529	7528	"result"	"bigint"	64	0	0	0
7530	7528	"i"	"bigint"	64	0	1	1
7531	7528	"nme"	"clob"	0	0	1	2
7534	7533	"schema"	"clob"	0	0	0	0
7535	7533	"table"	"clob"	0	0	0	1
7536	7533	"column"	"clob"	0	0	0	2
7537	7533	"type"	"clob"	0	0	0	3
7538	7533	"count"	"bigint"	64	0	0	4
7539	7533	"columnsize"	"bigint"	64	0	0	5
7540	7533	"heapsize"	"bigint"	64	0	0	6
7541	7533	"hashes"	"bigint"	64	0	0	7
7542	7533	"imprints"	"bigint"	64	0	0	8
7543	7533	"sorted"	"boolean"	1	0	0	9
7581	7580	"MinMax"	"int"	32	0	1	0
7582	7580	"sample"	"bigint"	64	0	1	1
7585	7584	"MinMax"	"int"	32	0	1	0
7586	7584	"sample"	"bigint"	64	0	1	1
7587	7584	"sch"	"clob"	0	0	1	2
7590	7589	"MinMax"	"int"	32	0	1	0
7591	7589	"sample"	"bigint"	64	0	1	1
7592	7589	"sch"	"clob"	0	0	1	2
7593	7589	"tbl"	"clob"	0	0	1	3
7596	7595	"MinMax"	"int"	32	0	1	0
7597	7595	"sample"	"bigint"	64	0	1	1
7598	7595	"sch"	"clob"	0	0	1	2
7599	7595	"tbl"	"clob"	0	0	1	3
7600	7595	"col"	"clob"	0	0	1	4
7603	7602	"result"	"clob"	0	0	0	0
7604	7602	"src"	"clob"	0	0	1	1
7607	7606	"result"	"smallint"	16	0	0	0
7608	7606	"one"	"tinyint"	8	0	1	1
7609	7606	"two"	"tinyint"	8	0	1	2
7612	7611	"result"	"int"	32	0	0	0
7613	7611	"one"	"smallint"	16	0	1	1
7614	7611	"two"	"smallint"	16	0	1	2
7617	7616	"result"	"bigint"	64	0	0	0
7618	7616	"one"	"int"	32	0	1	1
7619	7616	"two"	"int"	32	0	1	2
7623	7622	"bam_repos"	"clob"	0	0	1	0
7624	7622	"dbschema"	"smallint"	16	0	1	1
7627	7626	"bam_files"	"clob"	0	0	1	0
7628	7626	"dbschema"	"smallint"	16	0	1	1
7631	7630	"bam_file"	"clob"	0	0	1	0
7632	7630	"dbschema"	"smallint"	16	0	1	1
7635	7634	"file_id"	"bigint"	64	0	1	0
7636	7634	"dbschema"	"smallint"	16	0	1	1
7639	7638	"result"	"boolean"	1	0	0	0
7640	7638	"flag"	"smallint"	16	0	1	1
7641	7638	"name"	"clob"	0	0	1	2
7644	7643	"result"	"clob"	0	0	0	0
7645	7643	"seq"	"clob"	0	0	1	1
7648	7647	"result"	"clob"	0	0	0	0
7649	7647	"qual"	"clob"	0	0	1	1
7652	7651	"result"	"int"	32	0	0	0
7653	7651	"cigar"	"clob"	0	0	1	1
7656	7655	"result"	"char"	1	0	0	0
7657	7655	"ref_pos"	"int"	32	0	1	1
7658	7655	"alg_seq"	"clob"	0	0	1	2
7659	7655	"alg_pos"	"int"	32	0	1	3
7660	7655	"alg_cigar"	"clob"	0	0	1	4
7663	7662	"output_path"	"clob"	0	0	1	0
7666	7665	"output_path"	"clob"	0	0	1	0
7736	7735	"value"	"tinyint"	8	0	0	0
7737	7735	"first"	"tinyint"	8	0	1	1
7738	7735	"last"	"tinyint"	8	0	1	2
7741	7740	"value"	"tinyint"	8	0	0	0
7742	7740	"first"	"tinyint"	8	0	1	1
7743	7740	"last"	"tinyint"	8	0	1	2
7744	7740	"stepsize"	"tinyint"	8	0	1	3
7747	7746	"value"	"smallint"	16	0	0	0
7748	7746	"first"	"smallint"	16	0	1	1
7749	7746	"last"	"smallint"	16	0	1	2
7752	7751	"value"	"smallint"	16	0	0	0
7753	7751	"first"	"smallint"	16	0	1	1
7754	7751	"last"	"smallint"	16	0	1	2
7755	7751	"stepsize"	"smallint"	16	0	1	3
7758	7757	"value"	"int"	32	0	0	0
7759	7757	"first"	"int"	32	0	1	1
7760	7757	"last"	"int"	32	0	1	2
7763	7762	"value"	"int"	32	0	0	0
7764	7762	"first"	"int"	32	0	1	1
7765	7762	"last"	"int"	32	0	1	2
7766	7762	"stepsize"	"int"	32	0	1	3
7769	7768	"value"	"bigint"	64	0	0	0
7770	7768	"first"	"bigint"	64	0	1	1
7771	7768	"last"	"bigint"	64	0	1	2
7774	7773	"value"	"bigint"	64	0	0	0
7775	7773	"first"	"bigint"	64	0	1	1
7776	7773	"last"	"bigint"	64	0	1	2
7777	7773	"stepsize"	"bigint"	64	0	1	3
7780	7779	"value"	"real"	24	0	0	0
7781	7779	"first"	"real"	24	0	1	1
7782	7779	"last"	"real"	24	0	1	2
7783	7779	"stepsize"	"real"	24	0	1	3
7786	7785	"value"	"double"	53	0	0	0
7787	7785	"first"	"double"	53	0	1	1
7788	7785	"last"	"double"	53	0	1	2
7789	7785	"stepsize"	"double"	53	0	1	3
7792	7791	"value"	"decimal"	10	2	0	0
7793	7791	"first"	"decimal"	10	2	1	1
7794	7791	"last"	"decimal"	10	2	1	2
7795	7791	"stepsize"	"decimal"	10	2	1	3
7798	7797	"value"	"timestamp"	7	0	0	0
7799	7797	"first"	"timestamp"	7	0	1	1
7800	7797	"last"	"timestamp"	7	0	1	2
7801	7797	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 310 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
401	5749	7
400	5749	7
1032	5749	7
401	5753	7
400	5753	7
1032	5753	7
5758	5760	15
5758	5764	15
5758	5768	15
5758	5772	15
5758	5776	15
5758	5780	15
5758	5784	15
5758	5788	15
5758	5792	15
5758	5796	15
5758	5800	15
5758	5804	15
5758	5808	15
5758	5812	15
5758	5816	15
5758	5823	15
5858	5860	15
5858	5864	15
5858	5868	15
5858	5872	15
5858	5877	15
5858	5881	15
5858	5885	15
5858	5889	15
5858	5893	15
5858	5897	15
5858	5902	15
5858	5907	15
5858	5912	15
5917	5946	5
5927	5957	5
5917	5975	5
5927	5975	5
5986	6014	5
2003	6044	7
2001	6044	7
2002	6044	7
5713	6044	7
5722	6049	7
5720	6049	7
5721	6049	7
2005	6049	7
2001	6049	7
2003	6049	7
5681	6054	7
2047	6054	7
2046	6054	7
2049	6054	7
2048	6054	7
5681	6059	7
2088	6059	7
2086	6059	7
2090	6059	7
2083	6059	7
2079	6059	7
5681	6064	7
2047	6064	7
2046	6064	7
2049	6064	7
2092	6064	7
2091	6064	7
2048	6064	7
2093	6064	7
2094	6064	7
5681	6069	7
2081	6069	7
2079	6069	7
2084	6069	7
2080	6069	7
2083	6069	7
5681	6074	7
2047	6074	7
2046	6074	7
2049	6074	7
2017	6074	7
2016	6074	7
2048	6074	7
2018	6074	7
5691	6079	7
2047	6079	7
2046	6079	7
2049	6079	7
2048	6079	7
5681	6079	7
5691	6084	7
2081	6084	7
2079	6084	7
2084	6084	7
2103	6084	7
2102	6084	7
2104	6084	7
2080	6084	7
2083	6084	7
184	6084	7
64	6084	7
63	6084	7
65	6084	7
5691	6089	7
2088	6089	7
2086	6089	7
2090	6089	7
2083	6089	7
2079	6089	7
2087	6089	7
2103	6089	7
2102	6089	7
2104	6089	7
64	6089	7
63	6089	7
65	6089	7
5691	6094	7
2047	6094	7
2046	6094	7
2049	6094	7
2048	6094	7
2017	6094	7
2016	6094	7
2018	6094	7
5691	6099	7
2047	6099	7
2046	6099	7
2049	6099	7
2092	6099	7
2091	6099	7
2048	6099	7
2093	6099	7
5681	6104	7
2047	6104	7
2046	6104	7
2049	6104	7
2017	6104	7
2016	6104	7
2048	6104	7
2018	6104	7
5681	6109	7
2047	6109	7
2046	6109	7
2049	6109	7
2092	6109	7
2091	6109	7
2048	6109	7
2093	6109	7
2018	6114	7
2016	6114	7
2017	6114	7
2047	6114	7
2046	6114	7
2049	6114	7
2048	6114	7
2018	6119	7
2016	6119	7
2017	6119	7
2047	6119	7
2046	6119	7
2049	6119	7
2092	6119	7
2091	6119	7
2048	6119	7
2093	6119	7
2083	6124	7
2079	6124	7
2080	6124	7
2084	6124	7
6133	6147	5
128	6166	7
70	6166	7
68	6166	7
1175	6166	7
1161	6166	7
243	6166	7
1172	6166	7
244	6166	7
65	6178	7
464	6178	7
128	6178	7
130	6178	7
67	6178	7
6173	6178	7
6219	6227	5
6229	6235	5
6265	6283	5
6303	6313	5
6624	6626	10
6624	6625	4
6235	6640	5
5681	6640	5
5691	6640	5
2010	6640	5
2007	6640	5
2009	6640	5
2002	6640	5
2001	6640	5
2003	6640	5
244	6640	5
6611	6640	5
6615	6640	5
6619	6640	5
6873	6882	7
6877	6886	7
6630	7122	7
6631	7122	7
6624	7122	7
72	7122	7
6690	7134	7
7122	7134	7
67	7134	7
7126	7134	7
128	7134	7
130	7134	7
7207	7209	15
7207	7214	15
7207	7219	15
7207	7224	15
7207	7229	15
7207	7234	15
7207	7238	15
7207	7254	15
7207	7258	15
7207	7262	15
7207	7266	15
7207	7270	15
7207	7274	15
7207	7278	15
7207	7290	15
7305	7307	15
7305	7310	15
7305	7314	15
7338	7340	10
7338	7339	4
7343	7345	10
7346	7348	10
7343	7344	4
7351	7353	10
7354	7356	10
7351	7352	4
7411	7441	5
7497	7509	13
7507	7509	13
7498	7509	13
7499	7509	13
7500	7509	13
7501	7509	13
7502	7509	13
7503	7509	13
7504	7509	13
7505	7509	13
7506	7509	13
65	7511	7
137	7511	7
251	7511	7
127	7517	7
66	7517	7
244	7517	7
141	7517	7
65	7523	7
137	7523	7
128	7528	7
65	7528	7
360	7528	7
7497	7533	7
7507	7533	7
7498	7533	7
7499	7533	7
7500	7533	7
7502	7533	7
7503	7533	7
7504	7533	7
7505	7533	7
7506	7533	7
7511	7533	7
7517	7533	7
7523	7533	7
7528	7533	7
7533	7555	5
7533	7565	5
80	7565	5
87	7565	5
83	7565	5
67	7565	5
65	7565	5
137	7565	5
7668	7675	10
7668	7674	4
7678	7686	10
7679	7686	10
7679	7688	10
7678	7685	4
7679	7685	4
7674	7687	11
7679	7687	11
7691	7705	10
7692	7705	10
7692	7707	10
7691	7704	4
7692	7704	4
7674	7706	11
7692	7706	11
7710	7717	10
7711	7717	10
7711	7719	10
7710	7716	4
7711	7716	4
7674	7718	11
7711	7718	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1616 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
31	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
32	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
33	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
34	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
35	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
36	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
37	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
38	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
39	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
40	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
41	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
42	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
43	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
44	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
45	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
46	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
47	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
48	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
49	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
50	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
51	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
52	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
53	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
54	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
55	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
56	"left_shift"	"mbrLeft"	"geom"	0	1	false	false	false	0
57	"left_shift"	"mbrLeft"	"geom"	0	1	false	false	false	0
58	"right_shift"	"mbrRight"	"geom"	0	1	false	false	false	0
59	"right_shift"	"mbrRight"	"geom"	0	1	false	false	false	0
61	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
62	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
63	"hash"	"hash"	"mkey"	0	1	false	false	false	0
64	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
65	"="	"="	"calc"	0	1	false	false	false	0
66	"<>"	"!="	"calc"	0	1	false	false	false	0
67	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
68	">"	">"	"calc"	0	1	false	false	false	0
69	">="	">="	"calc"	0	1	false	false	false	0
70	"<"	"<"	"calc"	0	1	false	false	false	0
71	"<="	"<="	"calc"	0	1	false	false	false	0
75	"in"	"in"	"calc"	0	1	false	false	false	0
76	"identity"	"identity"	"calc"	0	1	false	false	false	0
77	"rowid"	"identity"	"calc"	0	1	false	false	false	0
78	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
81	"sql_min"	"min"	"calc"	0	1	false	false	false	0
82	"sql_max"	"max"	"calc"	0	1	false	false	false	0
83	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
101	"mod"	"%"	"calc"	0	1	false	false	false	0
102	"mod"	"%"	"calc"	0	1	false	false	false	0
103	"mod"	"%"	"calc"	0	1	false	false	false	0
104	"mod"	"%"	"calc"	0	1	false	false	false	0
105	"mod"	"%"	"calc"	0	1	false	false	false	0
106	"mod"	"%"	"calc"	0	1	false	false	false	0
107	"mod"	"%"	"calc"	0	1	false	false	false	0
108	"mod"	"%"	"calc"	0	1	false	false	false	0
109	"mod"	"%"	"calc"	0	1	false	false	false	0
110	"mod"	"%"	"calc"	0	1	false	false	false	0
111	"mod"	"%"	"calc"	0	1	false	false	false	0
112	"mod"	"%"	"calc"	0	1	false	false	false	0
122	"diff"	"diff"	"sql"	0	6	false	false	false	0
123	"diff"	"diff"	"sql"	0	6	false	false	false	0
124	"rank"	"rank"	"sql"	0	6	false	false	false	0
125	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
126	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
127	"and"	"and"	"calc"	0	1	false	false	false	0
128	"or"	"or"	"calc"	0	1	false	false	false	0
129	"xor"	"xor"	"calc"	0	1	false	false	false	0
130	"not"	"not"	"calc"	0	1	false	false	false	0
131	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
132	"sql_div"	"/"	"calc"	0	1	false	false	false	0
133	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
134	"sql_div"	"/"	"calc"	0	1	false	false	false	0
135	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
136	"sql_div"	"/"	"calc"	0	1	false	false	false	0
137	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
138	"sql_div"	"/"	"calc"	0	1	false	false	false	0
139	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
140	"sql_div"	"/"	"calc"	0	1	false	false	false	0
141	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
142	"sql_div"	"/"	"calc"	0	1	false	false	false	0
143	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
144	"sql_div"	"/"	"calc"	0	1	false	false	false	0
145	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
146	"sql_div"	"/"	"calc"	0	1	false	false	false	0
147	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
148	"sql_div"	"/"	"calc"	0	1	false	false	false	0
149	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
150	"sql_div"	"/"	"calc"	0	1	false	false	false	0
151	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
152	"sql_add"	"+"	"calc"	0	1	false	false	false	0
153	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
154	"sql_div"	"/"	"calc"	0	1	false	false	false	0
155	"bit_and"	"and"	"calc"	0	1	false	false	false	0
156	"bit_or"	"or"	"calc"	0	1	false	false	false	0
157	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
158	"bit_not"	"not"	"calc"	0	1	false	false	false	0
159	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
160	"right_shift"	">>"	"calc"	0	1	false	false	false	0
161	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
162	"abs"	"abs"	"calc"	0	1	false	false	false	0
163	"sign"	"sign"	"calc"	0	1	false	false	false	0
164	"scale_up"	"*"	"calc"	0	1	false	false	false	0
165	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
166	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
167	"sql_add"	"+"	"calc"	0	1	false	false	false	0
168	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
169	"sql_div"	"/"	"calc"	0	1	false	false	false	0
170	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
171	"sql_add"	"+"	"calc"	0	1	false	false	false	0
172	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
173	"sql_div"	"/"	"calc"	0	1	false	false	false	0
174	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
175	"sql_add"	"+"	"calc"	0	1	false	false	false	0
176	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
177	"sql_div"	"/"	"calc"	0	1	false	false	false	0
178	"bit_and"	"and"	"calc"	0	1	false	false	false	0
179	"bit_or"	"or"	"calc"	0	1	false	false	false	0
180	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
181	"bit_not"	"not"	"calc"	0	1	false	false	false	0
182	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
183	"right_shift"	">>"	"calc"	0	1	false	false	false	0
184	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
185	"abs"	"abs"	"calc"	0	1	false	false	false	0
186	"sign"	"sign"	"calc"	0	1	false	false	false	0
187	"scale_up"	"*"	"calc"	0	1	false	false	false	0
188	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
189	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
190	"sql_add"	"+"	"calc"	0	1	false	false	false	0
191	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
192	"sql_div"	"/"	"calc"	0	1	false	false	false	0
193	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
194	"sql_add"	"+"	"calc"	0	1	false	false	false	0
195	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
196	"sql_div"	"/"	"calc"	0	1	false	false	false	0
197	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
198	"sql_add"	"+"	"calc"	0	1	false	false	false	0
199	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
200	"sql_div"	"/"	"calc"	0	1	false	false	false	0
201	"bit_and"	"and"	"calc"	0	1	false	false	false	0
202	"bit_or"	"or"	"calc"	0	1	false	false	false	0
203	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
204	"bit_not"	"not"	"calc"	0	1	false	false	false	0
205	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
206	"right_shift"	">>"	"calc"	0	1	false	false	false	0
207	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
208	"abs"	"abs"	"calc"	0	1	false	false	false	0
209	"sign"	"sign"	"calc"	0	1	false	false	false	0
210	"scale_up"	"*"	"calc"	0	1	false	false	false	0
211	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
212	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
213	"sql_add"	"+"	"calc"	0	1	false	false	false	0
214	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
215	"sql_div"	"/"	"calc"	0	1	false	false	false	0
216	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
217	"sql_add"	"+"	"calc"	0	1	false	false	false	0
218	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
219	"sql_div"	"/"	"calc"	0	1	false	false	false	0
220	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
221	"sql_add"	"+"	"calc"	0	1	false	false	false	0
222	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
223	"sql_div"	"/"	"calc"	0	1	false	false	false	0
224	"bit_and"	"and"	"calc"	0	1	false	false	false	0
225	"bit_or"	"or"	"calc"	0	1	false	false	false	0
226	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
227	"bit_not"	"not"	"calc"	0	1	false	false	false	0
228	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
229	"right_shift"	">>"	"calc"	0	1	false	false	false	0
230	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
231	"abs"	"abs"	"calc"	0	1	false	false	false	0
232	"sign"	"sign"	"calc"	0	1	false	false	false	0
233	"scale_up"	"*"	"calc"	0	1	false	false	false	0
234	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
235	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
236	"sql_add"	"+"	"calc"	0	1	false	false	false	0
237	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
238	"sql_div"	"/"	"calc"	0	1	false	false	false	0
239	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
240	"sql_add"	"+"	"calc"	0	1	false	false	false	0
241	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
242	"sql_div"	"/"	"calc"	0	1	false	false	false	0
243	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
244	"sql_add"	"+"	"calc"	0	1	false	false	false	0
245	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
246	"sql_div"	"/"	"calc"	0	1	false	false	false	0
247	"bit_and"	"and"	"calc"	0	1	false	false	false	0
248	"bit_or"	"or"	"calc"	0	1	false	false	false	0
249	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
250	"bit_not"	"not"	"calc"	0	1	false	false	false	0
251	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
252	"right_shift"	">>"	"calc"	0	1	false	false	false	0
253	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
254	"abs"	"abs"	"calc"	0	1	false	false	false	0
255	"sign"	"sign"	"calc"	0	1	false	false	false	0
256	"scale_up"	"*"	"calc"	0	1	false	false	false	0
257	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
258	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
259	"sql_add"	"+"	"calc"	0	1	false	false	false	0
260	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
261	"sql_div"	"/"	"calc"	0	1	false	false	false	0
262	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
263	"sql_add"	"+"	"calc"	0	1	false	false	false	0
264	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
265	"sql_div"	"/"	"calc"	0	1	false	false	false	0
266	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
267	"sql_add"	"+"	"calc"	0	1	false	false	false	0
268	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
269	"sql_div"	"/"	"calc"	0	1	false	false	false	0
270	"bit_and"	"and"	"calc"	0	1	false	false	false	0
271	"bit_or"	"or"	"calc"	0	1	false	false	false	0
272	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
273	"bit_not"	"not"	"calc"	0	1	false	false	false	0
274	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
275	"right_shift"	">>"	"calc"	0	1	false	false	false	0
276	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
277	"abs"	"abs"	"calc"	0	1	false	false	false	0
278	"sign"	"sign"	"calc"	0	1	false	false	false	0
279	"scale_up"	"*"	"calc"	0	1	false	false	false	0
280	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
281	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
282	"sql_add"	"+"	"calc"	0	1	false	false	false	0
283	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
284	"sql_div"	"/"	"calc"	0	1	false	false	false	0
285	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
286	"sql_add"	"+"	"calc"	0	1	false	false	false	0
287	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
288	"sql_div"	"/"	"calc"	0	1	false	false	false	0
289	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
290	"sql_add"	"+"	"calc"	0	1	false	false	false	0
291	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
292	"sql_div"	"/"	"calc"	0	1	false	false	false	0
293	"bit_and"	"and"	"calc"	0	1	false	false	false	0
294	"bit_or"	"or"	"calc"	0	1	false	false	false	0
295	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
296	"bit_not"	"not"	"calc"	0	1	false	false	false	0
297	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
298	"right_shift"	">>"	"calc"	0	1	false	false	false	0
299	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
300	"abs"	"abs"	"calc"	0	1	false	false	false	0
301	"sign"	"sign"	"calc"	0	1	false	false	false	0
302	"scale_up"	"*"	"calc"	0	1	false	false	false	0
303	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
304	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
305	"sql_add"	"+"	"calc"	0	1	false	false	false	0
306	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
307	"sql_div"	"/"	"calc"	0	1	false	false	false	0
308	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
309	"sql_add"	"+"	"calc"	0	1	false	false	false	0
310	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
311	"sql_div"	"/"	"calc"	0	1	false	false	false	0
312	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
313	"sql_add"	"+"	"calc"	0	1	false	false	false	0
314	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
315	"sql_div"	"/"	"calc"	0	1	false	false	false	0
316	"bit_and"	"and"	"calc"	0	1	false	false	false	0
317	"bit_or"	"or"	"calc"	0	1	false	false	false	0
318	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
319	"bit_not"	"not"	"calc"	0	1	false	false	false	0
320	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
321	"right_shift"	">>"	"calc"	0	1	false	false	false	0
322	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
323	"abs"	"abs"	"calc"	0	1	false	false	false	0
324	"sign"	"sign"	"calc"	0	1	false	false	false	0
325	"scale_up"	"*"	"calc"	0	1	false	false	false	0
326	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
327	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
328	"sql_add"	"+"	"calc"	0	1	false	false	false	0
329	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
330	"sql_div"	"/"	"calc"	0	1	false	false	false	0
331	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
332	"sql_add"	"+"	"calc"	0	1	false	false	false	0
333	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
334	"sql_div"	"/"	"calc"	0	1	false	false	false	0
335	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
336	"sql_add"	"+"	"calc"	0	1	false	false	false	0
337	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
338	"sql_div"	"/"	"calc"	0	1	false	false	false	0
339	"bit_and"	"and"	"calc"	0	1	false	false	false	0
340	"bit_or"	"or"	"calc"	0	1	false	false	false	0
341	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
342	"bit_not"	"not"	"calc"	0	1	false	false	false	0
343	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
344	"right_shift"	">>"	"calc"	0	1	false	false	false	0
345	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
346	"abs"	"abs"	"calc"	0	1	false	false	false	0
347	"sign"	"sign"	"calc"	0	1	false	false	false	0
348	"scale_up"	"*"	"calc"	0	1	false	false	false	0
349	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
350	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
351	"sql_add"	"+"	"calc"	0	1	false	false	false	0
352	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
353	"sql_div"	"/"	"calc"	0	1	false	false	false	0
354	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
355	"sql_add"	"+"	"calc"	0	1	false	false	false	0
356	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
357	"sql_div"	"/"	"calc"	0	1	false	false	false	0
358	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
359	"sql_add"	"+"	"calc"	0	1	false	false	false	0
360	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
361	"sql_div"	"/"	"calc"	0	1	false	false	false	0
362	"bit_and"	"and"	"calc"	0	1	false	false	false	0
363	"bit_or"	"or"	"calc"	0	1	false	false	false	0
364	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
365	"bit_not"	"not"	"calc"	0	1	false	false	false	0
366	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
367	"right_shift"	">>"	"calc"	0	1	false	false	false	0
368	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
369	"abs"	"abs"	"calc"	0	1	false	false	false	0
370	"sign"	"sign"	"calc"	0	1	false	false	false	0
371	"scale_up"	"*"	"calc"	0	1	false	false	false	0
372	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
373	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
374	"sql_add"	"+"	"calc"	0	1	false	false	false	0
375	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
376	"sql_div"	"/"	"calc"	0	1	false	false	false	0
377	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
378	"sql_add"	"+"	"calc"	0	1	false	false	false	0
379	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
380	"sql_div"	"/"	"calc"	0	1	false	false	false	0
381	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
382	"sql_add"	"+"	"calc"	0	1	false	false	false	0
383	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
384	"sql_div"	"/"	"calc"	0	1	false	false	false	0
385	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
386	"abs"	"abs"	"calc"	0	1	false	false	false	0
387	"sign"	"sign"	"calc"	0	1	false	false	false	0
388	"scale_up"	"*"	"calc"	0	1	false	false	false	0
389	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
390	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
391	"sql_add"	"+"	"calc"	0	1	false	false	false	0
392	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
393	"sql_div"	"/"	"calc"	0	1	false	false	false	0
394	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
395	"sql_add"	"+"	"calc"	0	1	false	false	false	0
396	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
397	"sql_div"	"/"	"calc"	0	1	false	false	false	0
398	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
399	"sql_add"	"+"	"calc"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_div"	"/"	"calc"	0	1	false	false	false	0
402	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
403	"abs"	"abs"	"calc"	0	1	false	false	false	0
404	"sign"	"sign"	"calc"	0	1	false	false	false	0
405	"scale_up"	"*"	"calc"	0	1	false	false	false	0
406	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
407	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
408	"sql_add"	"+"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_div"	"/"	"calc"	0	1	false	false	false	0
411	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
412	"sql_add"	"+"	"calc"	0	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
414	"sql_div"	"/"	"calc"	0	1	false	false	false	0
415	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
416	"sql_add"	"+"	"calc"	0	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
418	"sql_div"	"/"	"calc"	0	1	false	false	false	0
419	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
420	"abs"	"abs"	"calc"	0	1	false	false	false	0
421	"sign"	"sign"	"calc"	0	1	false	false	false	0
422	"scale_up"	"*"	"calc"	0	1	false	false	false	0
423	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
424	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
425	"sql_add"	"+"	"calc"	0	1	false	false	false	0
426	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
427	"sql_div"	"/"	"calc"	0	1	false	false	false	0
428	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
429	"abs"	"abs"	"calc"	0	1	false	false	false	0
430	"sign"	"sign"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
433	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
435	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
459	"round"	"round"	"sql"	0	1	false	false	false	0
460	"round"	"round"	"sql"	0	1	false	false	false	0
461	"round"	"round"	"sql"	0	1	false	false	false	0
462	"round"	"round"	"sql"	0	1	false	false	false	0
463	"round"	"round"	"sql"	0	1	false	false	false	0
464	"round"	"round"	"sql"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"scale_up"	"*"	"calc"	0	1	false	false	false	0
988	"scale_up"	"*"	"calc"	0	1	false	false	false	0
989	"scale_up"	"*"	"calc"	0	1	false	false	false	0
990	"scale_up"	"*"	"calc"	0	1	false	false	false	0
991	"scale_up"	"*"	"calc"	0	1	false	false	false	0
992	"scale_up"	"*"	"calc"	0	1	false	false	false	0
993	"scale_up"	"*"	"calc"	0	1	false	false	false	0
994	"power"	"pow"	"mmath"	0	1	false	false	false	0
995	"floor"	"floor"	"mmath"	0	1	false	false	false	0
996	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
997	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
998	"sin"	"sin"	"mmath"	0	1	false	false	false	0
999	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1000	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1001	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1002	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1003	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1004	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1005	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1006	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1007	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1008	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1009	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1010	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1011	"log"	"log"	"mmath"	0	1	false	false	false	0
1012	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1013	"power"	"pow"	"mmath"	0	1	false	false	false	0
1014	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1015	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1016	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1017	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1018	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1019	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1020	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1021	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1022	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1023	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1024	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1025	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1026	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1027	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1028	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1029	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1030	"log"	"log"	"mmath"	0	1	false	false	false	0
1031	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1032	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1033	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1034	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1035	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1036	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1037	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1038	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1039	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1040	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1041	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1042	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1043	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1044	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1045	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1046	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1047	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1048	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1049	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1050	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1051	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1052	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1053	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1054	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1055	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1056	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1057	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1058	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1059	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1060	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1061	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1062	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1063	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1064	"year"	"year"	"mtime"	0	1	false	false	false	0
1065	"month"	"month"	"mtime"	0	1	false	false	false	0
1066	"day"	"day"	"mtime"	0	1	false	false	false	0
1067	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1068	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1069	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1070	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1071	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1072	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1073	"year"	"year"	"mtime"	0	1	false	false	false	0
1074	"month"	"month"	"mtime"	0	1	false	false	false	0
1075	"day"	"day"	"mtime"	0	1	false	false	false	0
1076	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1077	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1078	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1079	"year"	"year"	"mtime"	0	1	false	false	false	0
1080	"month"	"month"	"mtime"	0	1	false	false	false	0
1081	"day"	"day"	"mtime"	0	1	false	false	false	0
1082	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1083	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1084	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1085	"year"	"year"	"mtime"	0	1	false	false	false	0
1086	"month"	"month"	"mtime"	0	1	false	false	false	0
1087	"day"	"day"	"mtime"	0	1	false	false	false	0
1088	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1089	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1090	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1091	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1092	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1093	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1094	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1095	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1096	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1097	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1098	"restart"	"restart"	"sql"	0	1	false	false	false	0
1099	"index"	"index"	"calc"	0	1	false	false	false	0
1100	"index"	"index"	"calc"	0	1	false	false	false	0
1101	"index"	"index"	"calc"	0	1	false	false	false	0
1102	"strings"	"strings"	"calc"	0	1	false	false	false	0
1103	"locate"	"locate"	"str"	0	1	false	false	false	0
1104	"locate"	"locate"	"str"	0	1	false	false	false	0
1105	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1106	"substring"	"substring"	"str"	0	1	false	false	false	0
1107	"substring"	"substring"	"str"	0	1	false	false	false	0
1108	"like"	"like"	"algebra"	0	1	false	false	false	0
1109	"like"	"like"	"algebra"	0	1	false	false	false	0
1110	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1111	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1112	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1113	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1114	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1115	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1116	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1117	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1118	"concat"	"+"	"calc"	0	1	false	false	false	0
1119	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1120	"code"	"unicode"	"str"	0	1	false	false	false	0
1121	"length"	"stringlength"	"str"	0	1	false	false	false	0
1122	"right"	"stringright"	"str"	0	1	false	false	false	0
1123	"left"	"stringleft"	"str"	0	1	false	false	false	0
1124	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1125	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1126	"lower"	"toLower"	"str"	0	1	false	false	false	0
1127	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1128	"trim"	"trim"	"str"	0	1	false	false	false	0
1129	"trim"	"trim"	"str"	0	1	false	false	false	0
1130	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1131	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1132	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1133	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1134	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1135	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1136	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1137	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1138	"insert"	"insert"	"str"	0	1	false	false	false	0
1139	"replace"	"replace"	"str"	0	1	false	false	false	0
1140	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1141	"space"	"space"	"str"	0	1	false	false	false	0
1142	"char_length"	"length"	"str"	0	1	false	false	false	0
1143	"character_length"	"length"	"str"	0	1	false	false	false	0
1144	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1145	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1146	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1147	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1148	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1149	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1150	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1151	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1152	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1153	"index"	"index"	"calc"	0	1	false	false	false	0
1154	"index"	"index"	"calc"	0	1	false	false	false	0
1155	"index"	"index"	"calc"	0	1	false	false	false	0
1156	"strings"	"strings"	"calc"	0	1	false	false	false	0
1157	"locate"	"locate"	"str"	0	1	false	false	false	0
1158	"locate"	"locate"	"str"	0	1	false	false	false	0
1159	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1160	"substring"	"substring"	"str"	0	1	false	false	false	0
1161	"substring"	"substring"	"str"	0	1	false	false	false	0
1162	"like"	"like"	"algebra"	0	1	false	false	false	0
1163	"like"	"like"	"algebra"	0	1	false	false	false	0
1164	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1165	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1166	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1167	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1168	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1169	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1170	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1171	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1172	"concat"	"+"	"calc"	0	1	false	false	false	0
1173	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1174	"code"	"unicode"	"str"	0	1	false	false	false	0
1175	"length"	"stringlength"	"str"	0	1	false	false	false	0
1176	"right"	"stringright"	"str"	0	1	false	false	false	0
1177	"left"	"stringleft"	"str"	0	1	false	false	false	0
1178	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1179	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1180	"lower"	"toLower"	"str"	0	1	false	false	false	0
1181	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1182	"trim"	"trim"	"str"	0	1	false	false	false	0
1183	"trim"	"trim"	"str"	0	1	false	false	false	0
1184	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1185	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1186	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1187	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1188	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1189	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1190	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1191	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1192	"insert"	"insert"	"str"	0	1	false	false	false	0
1193	"replace"	"replace"	"str"	0	1	false	false	false	0
1194	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1195	"space"	"space"	"str"	0	1	false	false	false	0
1196	"char_length"	"length"	"str"	0	1	false	false	false	0
1197	"character_length"	"length"	"str"	0	1	false	false	false	0
1198	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1199	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1200	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1201	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1202	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1203	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1204	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1205	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1206	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1207	"index"	"index"	"calc"	0	1	false	false	false	0
1208	"index"	"index"	"calc"	0	1	false	false	false	0
1209	"index"	"index"	"calc"	0	1	false	false	false	0
1210	"strings"	"strings"	"calc"	0	1	false	false	false	0
1211	"locate"	"locate"	"str"	0	1	false	false	false	0
1212	"locate"	"locate"	"str"	0	1	false	false	false	0
1213	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1214	"substring"	"substring"	"str"	0	1	false	false	false	0
1215	"substring"	"substring"	"str"	0	1	false	false	false	0
1216	"like"	"like"	"algebra"	0	1	false	false	false	0
1217	"like"	"like"	"algebra"	0	1	false	false	false	0
1218	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1219	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1220	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1221	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1222	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1223	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1224	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1225	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1226	"concat"	"+"	"calc"	0	1	false	false	false	0
1227	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1228	"code"	"unicode"	"str"	0	1	false	false	false	0
1229	"length"	"stringlength"	"str"	0	1	false	false	false	0
1230	"right"	"stringright"	"str"	0	1	false	false	false	0
1231	"left"	"stringleft"	"str"	0	1	false	false	false	0
1232	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1233	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1234	"lower"	"toLower"	"str"	0	1	false	false	false	0
1235	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1236	"trim"	"trim"	"str"	0	1	false	false	false	0
1237	"trim"	"trim"	"str"	0	1	false	false	false	0
1238	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1239	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1240	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1241	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1242	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1243	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1244	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1245	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1246	"insert"	"insert"	"str"	0	1	false	false	false	0
1247	"replace"	"replace"	"str"	0	1	false	false	false	0
1248	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1249	"space"	"space"	"str"	0	1	false	false	false	0
1250	"char_length"	"length"	"str"	0	1	false	false	false	0
1251	"character_length"	"length"	"str"	0	1	false	false	false	0
1252	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1253	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1254	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1255	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1256	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1257	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1258	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1259	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1260	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1261	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1262	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
60	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
72	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
73	"exist"	"exist"	"aggr"	0	3	false	false	false	0
74	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
79	"min"	"min"	"aggr"	0	3	false	false	false	0
80	"max"	"max"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"sum"	"sum"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"sum"	"sum"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"sum"	"sum"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"prod"	"prod"	"aggr"	0	3	false	false	false	0
94	"prod"	"prod"	"aggr"	0	3	false	false	false	0
95	"prod"	"prod"	"aggr"	0	3	false	false	false	0
96	"prod"	"prod"	"aggr"	0	3	false	false	false	0
97	"prod"	"prod"	"aggr"	0	3	false	false	false	0
98	"prod"	"prod"	"aggr"	0	3	false	false	false	0
99	"prod"	"prod"	"aggr"	0	3	false	false	false	0
100	"prod"	"prod"	"aggr"	0	3	false	false	false	0
113	"sum"	"sum"	"aggr"	0	3	false	false	false	0
114	"prod"	"prod"	"aggr"	0	3	false	false	false	0
115	"sum"	"sum"	"aggr"	0	3	false	false	false	0
116	"prod"	"prod"	"aggr"	0	3	false	false	false	0
117	"sum"	"sum"	"aggr"	0	3	false	false	false	0
118	"sum"	"sum"	"aggr"	0	3	false	false	false	0
119	"avg"	"avg"	"aggr"	0	3	false	false	false	0
120	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
121	"count"	"count"	"aggr"	0	3	false	false	false	0
5702	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5705	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5711	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5731	"like"	"create filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5736	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5741	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5745	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5749	"degrees"	"create function degrees(r double)\nreturns double\n return r*180/pi();"	"user"	2	1	false	false	false	2000
5753	"radians"	"create function radians(d double)\nreturns double\n return d*pi()/180;"	"user"	2	1	false	false	false	2000
5757	"times"	"create procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5760	"getanchor"	"create function getanchor( theurl url ) returns string\n external name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5764	"getbasename"	"create function getbasename(theurl url) returns string\n external name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5768	"getcontent"	"create function getcontent(theurl url) returns string\n external name url.""getContent"";"	"url"	1	1	false	false	false	2000
5772	"getcontext"	"create function getcontext(theurl url) returns string\n external name url.""getContext"";"	"url"	1	1	false	false	false	2000
5776	"getdomain"	"create function getdomain(theurl url) returns string\n external name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5780	"getextension"	"create function getextension(theurl url) returns string\n external name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5784	"getfile"	"create function getfile(theurl url) returns string\n external name url.""getFile"";"	"url"	1	1	false	false	false	2000
5788	"gethost"	"create function gethost(theurl url) returns string\n external name url.""getHost"";"	"url"	1	1	false	false	false	2000
5792	"getport"	"create function getport(theurl url) returns string\n external name url.""getPort"";"	"url"	1	1	false	false	false	2000
5796	"getprotocol"	"create function getprotocol(theurl url) returns string\n external name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5800	"getquery"	"create function getquery(theurl url) returns string\n external name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5804	"getuser"	"create function getuser(theurl url) returns string\n external name url.""getUser"";"	"url"	1	1	false	false	false	2000
5808	"getroboturl"	"create function getroboturl(theurl url) returns string\n external name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5812	"isaurl"	"create function isaurl(theurl url) returns bool\n external name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5816	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5823	"newurl"	"create function newurl(protocol string, hostname string, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5829	"str_to_date"	"create function str_to_date(s string, format string) returns date\n external name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5834	"date_to_str"	"create function date_to_str(d date, format string) returns string\n external name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5839	"str_to_time"	"create function str_to_time(s string, format string) returns time\n external name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5844	"time_to_str"	"create function time_to_str(d time, format string) returns string\n external name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5849	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n external name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5854	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n external name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5860	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n external name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5864	"host"	"create function ""host"" (p inet) returns clob\n external name inet.""host"";"	"inet"	1	1	false	false	false	2000
5868	"masklen"	"create function ""masklen"" (p inet) returns int\n external name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5872	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n external name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5877	"netmask"	"create function ""netmask"" (p inet) returns inet\n external name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5881	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n external name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5885	"network"	"create function ""network"" (p inet) returns inet\n external name inet.""network"";"	"inet"	1	1	false	false	false	2000
5889	"text"	"create function ""text"" (p inet) returns clob\n external name inet.""text"";"	"inet"	1	1	false	false	false	2000
5893	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n external name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5897	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n external name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5902	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n external name inet."">>"";"	"inet"	1	1	false	false	false	2000
5907	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5912	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet."">>="";"	"inet"	1	1	false	false	false	2000
5917	"querylog_catalog"	"create function sys.querylog_catalog()\nreturns table(\n id oid,\n owner string,\n defined timestamp,\n query string,\n pipe string,\n ""plan"" string, \n mal int, \n optimize bigint \n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5927	"querylog_calls"	"create function sys.querylog_calls()\nreturns table(\n id oid, \n ""start"" timestamp, \n ""stop"" timestamp, \n arguments string, \n tuples wrd, \n run bigint, \n ship bigint, \n cpu int, \n io int \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5977	"querylog_empty"	"create procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5979	"querylog_enable"	"create procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5981	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5984	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5986	"tracelog"	"create function sys.tracelog()\n returns table (\n event integer, \n clk varchar(20), \n pc varchar(50), \n thread int, \n ticks bigint, \n rrsmb bigint, \n vmmb bigint, \n reads bigint, \n writes bigint, \n minflt bigint, \n majflt bigint, \n nvcsw bigint, \n stmt string \n )\n external name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
6016	"epoch"	"create function sys.""epoch""(sec bigint) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6020	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6024	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6028	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6032	"shrink"	"create procedure shrink(sys string, tab string)\n external name sql.shrink;"	"sql"	1	2	true	false	false	2000
6036	"reuse"	"create procedure reuse(sys string, tab string)\n external name sql.reuse;"	"sql"	1	2	true	false	false	2000
6040	"vacuum"	"create procedure vacuum(sys string, tab string)\n external name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6044	"dependencies_schemas_on_users"	"create function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6049	"dependencies_owners_on_schemas"	"create function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6054	"dependencies_tables_on_views"	"create function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6059	"dependencies_tables_on_indexes"	"create function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6064	"dependencies_tables_on_triggers"	"create function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6069	"dependencies_tables_on_foreignkeys"	"create function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6074	"dependencies_tables_on_functions"	"create function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6079	"dependencies_columns_on_views"	"create function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6084	"dependencies_columns_on_keys"	"create function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6089	"dependencies_columns_on_indexes"	"create function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6094	"dependencies_columns_on_functions"	"create function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6099	"dependencies_columns_on_triggers"	"create function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6104	"dependencies_views_on_functions"	"create function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6109	"dependencies_views_on_triggers"	"create function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6114	"dependencies_functions_on_functions"	"create function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6119	"dependencies_functions_os_triggers"	"create function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6124	"dependencies_keys_on_foreignkeys"	"create function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6129	"password_hash"	"create function sys.password_hash (username string)\n returns string\n external name sql.password;"	"sql"	1	1	false	false	false	2000
6133	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6149	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6152	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6156	"settimeout"	"create procedure sys.settimeout(""query"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6159	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6163	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n external name sql.setsession;"	"sql"	1	2	true	false	false	2000
6166	"ms_stuff"	"create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n declare res varchar(32), aux varchar(32);\n declare ofset int;\n if ( st < 0 or st > length(s1))\n then return '';\n end if;\n set ofset = 1;\n set res = substring(s1,ofset,st-1);\n set res = res || s3;\n set ofset = st + len;\n set aux = substring(s1,ofset,length(s1)-ofset+1);\n set res = res || aux;\n return res;\nend;"	"user"	2	1	false	false	false	2000
6173	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6178	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n if (truncat = 0)\n then return round(num, prc);\n else return ms_trunc(num, prc);\n end if;\nend;"	"user"	2	1	false	false	false	2000
6184	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6190	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6195	"zorder_encode"	"create function zorder_encode(x integer, y integer) returns oid\n external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6200	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6204	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6208	"optimizer_stats"	"create function sys.optimizer_stats ()\n returns table (rewrite string, count int)\n external name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6212	"querycache"	"create function sys.querycache()\n returns table (query string, count int)\n external name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6216	"querylog"	"create procedure sys.querylog(filename string)\n external name sql.logfile;"	"sql"	1	2	true	false	false	2000
6219	"optimizers"	"create function sys.optimizers ()\n returns table (name string, def string, status string)\n external name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6229	"environment"	"create function sys.environment()\n returns table (""name"" string, value string)\n external name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6237	"bbp"	"create function sys.bbp ()\n returns table (id int, name string, \n ttype string, count bigint, refcnt int, lrefcnt int,\n location string, heat int, dirty string,\n status string, kind string)\n external name bbp.get;"	"bbp"	1	5	false	false	false	2000
6250	"malfunctions"	"create function sys.malfunctions()\n returns table(""signature"" string, ""address"" string, ""comment"" string)\n external name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
6255	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n external name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6259	"flush_log"	"create procedure sys.flush_log ()\n external name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6261	"debug"	"create function sys.debug(debug int) returns integer\n external name mdb.""setDebug"";"	"mdb"	1	1	false	false	false	2000
6265	"queue"	"create function sys.queue()\nreturns table(\n qtag bigint,\n ""user"" string,\n started timestamp,\n estimate timestamp,\n progress int,\n status string,\n tag oid,\n query string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6285	"pause"	"create procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6288	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6291	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6294	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6297	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6300	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6303	"rejects"	"create function sys.rejects()\nreturns table(\n rowid bigint,\n fldid int,\n ""message"" string,\n ""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6315	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6317	"stddev_samp"	"create aggregate stddev_samp(val tinyint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6321	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6325	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6329	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6333	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6337	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6341	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6345	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6349	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6353	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6357	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6361	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6365	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6369	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6373	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6377	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6381	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6385	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6389	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6393	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6397	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6401	"var_samp"	"create aggregate var_samp(val smallint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6405	"var_samp"	"create aggregate var_samp(val integer) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6409	"var_samp"	"create aggregate var_samp(val wrd) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6413	"var_samp"	"create aggregate var_samp(val bigint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6417	"var_samp"	"create aggregate var_samp(val real) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6421	"var_samp"	"create aggregate var_samp(val double) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6425	"var_samp"	"create aggregate var_samp(val date) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6429	"var_samp"	"create aggregate var_samp(val time) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6433	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6437	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6441	"var_pop"	"create aggregate var_pop(val smallint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6445	"var_pop"	"create aggregate var_pop(val integer) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6449	"var_pop"	"create aggregate var_pop(val wrd) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6453	"var_pop"	"create aggregate var_pop(val bigint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6457	"var_pop"	"create aggregate var_pop(val real) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6461	"var_pop"	"create aggregate var_pop(val double) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6465	"var_pop"	"create aggregate var_pop(val date) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6469	"var_pop"	"create aggregate var_pop(val time) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6473	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6477	"median"	"create aggregate median(val tinyint) returns tinyint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6481	"median"	"create aggregate median(val smallint) returns smallint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6485	"median"	"create aggregate median(val integer) returns integer\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6489	"median"	"create aggregate median(val wrd) returns wrd\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6493	"median"	"create aggregate median(val bigint) returns bigint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6497	"median"	"create aggregate median(val decimal) returns decimal\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6501	"median"	"create aggregate median(val real) returns real\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6505	"median"	"create aggregate median(val double) returns double\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6509	"median"	"create aggregate median(val date) returns date\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6513	"median"	"create aggregate median(val time) returns time\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6517	"median"	"create aggregate median(val timestamp) returns timestamp\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6521	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6526	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6531	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6536	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6541	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6546	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6551	"quantile"	"create aggregate quantile(val real, q double) returns real\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6556	"quantile"	"create aggregate quantile(val double, q double) returns double\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6561	"quantile"	"create aggregate quantile(val date, q double) returns date\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6566	"quantile"	"create aggregate quantile(val time, q double) returns time\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6571	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6576	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6581	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6586	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6591	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6596	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6601	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6606	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6611	"has_z"	"create function has_z(info integer) returns integer external name geom.""hasZ"";"	"geom"	1	1	false	false	false	2000
6615	"has_m"	"create function has_m(info integer) returns integer external name geom.""hasM"";"	"geom"	1	1	false	false	false	2000
6619	"get_type"	"create function get_type(info integer, format integer) returns string external name geom.""getType"";"	"geom"	1	1	false	false	false	2000
6642	"mbr"	"create function mbr(geom geometry) returns mbr external name geom.""mbr"";"	"geom"	1	1	false	false	false	2000
6646	"st_overlaps"	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.""mbrOverlaps"";"	"geom"	1	1	false	false	false	2000
6651	"st_contains"	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.""mbrContains"";"	"geom"	1	1	false	false	false	2000
6656	"st_equals"	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.""mbrEqual"";"	"geom"	1	1	false	false	false	2000
6661	"st_distance"	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.""mbrDistance"";"	"geom"	1	1	false	false	false	2000
6666	"st_wkttosql"	"create function st_wkttosql(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6670	"st_wkbtosql"	"create function st_wkbtosql(geom string) returns geometry external name geom.""FromBinary"";"	"geom"	1	1	false	false	false	2000
6674	"st_astext"	"create function st_astext(geom geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6678	"st_asbinary"	"create function st_asbinary(geom geometry) returns string external name geom.""AsBinary"";"	"geom"	1	1	false	false	false	2000
6682	"st_dimension"	"create function st_dimension(geom geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6686	"st_geometrytype"	"create function st_geometrytype(geom geometry) returns string external name geom.""GeometryType2"";"	"geom"	1	1	false	false	false	2000
6690	"st_srid"	"create function st_srid(geom geometry) returns integer external name geom.""getSRID"";"	"geom"	1	1	false	false	false	2000
6694	"st_setsrid"	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.""setSRID"";"	"geom"	1	1	false	false	false	2000
6699	"st_isempty"	"create function st_isempty(geom geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6703	"st_issimple"	"create function st_issimple(geom geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6707	"st_boundary"	"create function st_boundary(geom geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6711	"st_envelope"	"create function st_envelope(geom geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6715	"st_equals"	"create function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6720	"st_disjoint"	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6725	"st_intersects"	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.""Intersects"";"	"geom"	1	1	false	false	false	2000
6730	"st_touches"	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6735	"st_crosses"	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6740	"st_within"	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6745	"st_contains"	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6750	"st_overlaps"	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6755	"st_relate"	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6761	"st_distance"	"create function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6766	"st_intersection"	"create function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6771	"st_difference"	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6776	"st_union"	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6781	"st_union"	"create aggregate st_union(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
6785	"st_symdifference"	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6790	"st_buffer"	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6795	"st_convexhull"	"create function st_convexhull(geom geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6799	"st_x"	"create function st_x(geom geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6803	"st_y"	"create function st_y(geom geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6807	"st_z"	"create function st_z(geom geometry) returns double external name geom.""Z"";"	"geom"	1	1	false	false	false	2000
6811	"st_startpoint"	"create function st_startpoint(geom geometry) returns geometry external name geom.""StartPoint"";"	"geom"	1	1	false	false	false	2000
6815	"st_endpoint"	"create function st_endpoint(geom geometry) returns geometry external name geom.""EndPoint"";"	"geom"	1	1	false	false	false	2000
6819	"st_isring"	"create function st_isring(geom geometry) returns boolean external name geom.""IsRing"";"	"geom"	1	1	false	false	false	2000
6823	"st_length"	"create function st_length(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6827	"st_isclosed"	"create function st_isclosed(geom geometry) returns boolean external name geom.""IsClosed"";"	"geom"	1	1	false	false	false	2000
6831	"st_numpoints"	"create function st_numpoints(geom geometry) returns integer external name geom.""NumPoints"";"	"geom"	1	1	false	false	false	2000
6835	"st_pointn"	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.""PointN"";"	"geom"	1	1	false	false	false	2000
6840	"st_centroid"	"create function st_centroid(geom geometry) returns geometry external name geom.""Centroid"";"	"geom"	1	1	false	false	false	2000
6844	"st_pointonsurface"	"create function st_pointonsurface(geom geometry) returns geometry external name geom.""PointOnSurface"";"	"geom"	1	1	false	false	false	2000
6848	"st_area"	"create function st_area(geom geometry) returns double external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6852	"st_exteriorring"	"create function st_exteriorring(geom geometry) returns geometry external name geom.""ExteriorRing"";"	"geom"	1	1	false	false	false	2000
6856	"st_setexteriorring"	"create function st_setexteriorring(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6860	"st_numinteriorring"	"create function st_numinteriorring(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
6864	"st_interiorringn"	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.""InteriorRingN"";"	"geom"	1	1	false	false	false	2000
6869	"st_interiorrings"	"create function st_interiorrings(geom geometry) returns geometrya external name geom.""InteriorRings"";"	"geom"	1	1	false	false	false	2000
6873	"st_numgeometries"	"create function st_numgeometries(geom geometry) returns integer external name geom.""NumGeometries"";"	"geom"	1	1	false	false	false	2000
6877	"st_geometryn"	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.""GeometryN"";"	"geom"	1	1	false	false	false	2000
6882	"st_numpatches"	"create function st_numpatches(geom geometry) returns integer \nbegin\n return select st_numgeometries(geom);\nend;"	"user"	2	1	false	false	false	2000
6886	"st_patchn"	"create function st_patchn(geom geometry, patchnum integer) returns geometry \nbegin\n return select st_geometryn(geom, patchnum);\nend;"	"user"	2	1	false	false	false	2000
6891	"st_geomfromtext"	"create function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6896	"st_pointfromtext"	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6901	"st_linefromtext"	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6906	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6911	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6916	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6921	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6926	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6931	"st_bdpolyfromtext"	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdPolyFromText"";"	"geom"	1	1	false	false	false	2000
6936	"st_bdmpolyfromtext"	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdMPolyFromText"";"	"geom"	1	1	false	false	false	2000
6941	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6946	"st_geomfromtext"	"create function st_geomfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6950	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6954	"st_pointfromtext"	"create function st_pointfromtext(wkt string) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6958	"st_linefromtext"	"create function st_linefromtext(wkt string) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6962	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6966	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6970	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6974	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6978	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6982	"st_makepoint"	"create function st_makepoint(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6987	"st_point"	"create function st_point(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6992	"st_makepoint"	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6998	"st_makepoint"	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7005	"st_makepointm"	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.""MakePointM"";"	"geom"	1	1	false	false	false	2000
7011	"st_makeline"	"create aggregate st_makeline(geom geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	3	false	false	false	2000
7015	"st_makeline"	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	1	false	false	false	2000
7020	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7028	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7035	"st_makepolygon"	"create function st_makepolygon(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7039	"st_polygon"	"create function st_polygon(geom geometry, srid integer) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7044	"st_makebox2d"	"create function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.""MakeBox2D"";"	"geom"	1	1	false	false	false	2000
7049	"geometrytype"	"create function geometrytype(geom geometry) returns string external name geom.""GeometryType1"";"	"geom"	1	1	false	false	false	2000
7053	"st_coorddim"	"create function st_coorddim(geom geometry) returns integer external name geom.""CoordDim"";"	"geom"	1	1	false	false	false	2000
7057	"st_isvalid"	"create function st_isvalid(geom geometry) returns boolean external name geom.""IsValid"";"	"geom"	1	1	false	false	false	2000
7061	"st_isvalidreason"	"create function st_isvalidreason(geom geometry) returns string external name geom.""IsValidReason"";"	"geom"	1	1	false	false	false	2000
7065	"st_npoints"	"create function st_npoints(geom geometry) returns integer external name geom.""NPoints"";"	"geom"	1	1	false	false	false	2000
7069	"st_nrings"	"create function st_nrings(geom geometry) returns integer external name geom.""NRings"";"	"geom"	1	1	false	false	false	2000
7073	"st_numinteriorrings"	"create function st_numinteriorrings(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7077	"st_xmax"	"create function st_xmax(geom geometry) returns double external name geom.""XMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7081	"st_xmax"	"create function st_xmax(box mbr) returns double external name geom.""XMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7085	"st_xmin"	"create function st_xmin(geom geometry) returns double external name geom.""XMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7089	"st_xmin"	"create function st_xmin(box mbr) returns double external name geom.""XMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7093	"st_ymax"	"create function st_ymax(geom geometry) returns double external name geom.""YMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7097	"st_ymax"	"create function st_ymax(box mbr) returns double external name geom.""YMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7101	"st_ymin"	"create function st_ymin(geom geometry) returns double external name geom.""YMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7105	"st_ymin"	"create function st_ymin(box mbr) returns double external name geom.""YMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7109	"st_force2d"	"create function st_force2d(geom geometry) returns geometry external name geom.""Force2D"";"	"geom"	1	1	false	false	false	2000
7113	"st_force3d"	"create function st_force3d(geom geometry) returns geometry external name geom.""Force3D"";"	"geom"	1	1	false	false	false	2000
7117	"st_segmentize"	"create function st_segmentize(geom geometry, sz double) returns geometry external name geom.""Segmentize"";"	"geom"	1	1	false	false	false	2000
7122	"getproj4"	"create function getproj4(srid_in integer) returns string \nbegin\n return select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	"user"	2	1	false	false	false	2000
7126	"internaltransform"	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.""Transform"";"	"geom"	1	1	false	false	false	2000
7134	"st_transform"	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n declare srid_src integer;\n declare proj4_src string;\n declare proj4_dest string;\n select st_srid(geom) into srid_src;\n select getproj4(srid_src) into proj4_src;\n select getproj4(srid) into proj4_dest;\n if proj4_src is null then\n return select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n else\n if proj4_dest is null then\n return select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n else\n return select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n end if; \n end if;\nend;"	"user"	2	1	false	false	false	2000
7139	"st_translate"	"create function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7145	"st_translate"	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7152	"st_asewkt"	"create function st_asewkt(geom geometry) returns string external name geom.""AsEWKT"";"	"geom"	1	1	false	false	false	2000
7156	"st_covers"	"create function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.""Covers"";"	"geom"	1	1	false	false	false	2000
7161	"st_coveredby"	"create function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.""CoveredBy"";"	"geom"	1	1	false	false	false	2000
7166	"st_dwithin"	"create function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.""DWithin"";"	"geom"	1	1	false	false	false	2000
7172	"st_length2d"	"create function st_length2d(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7176	"st_collect"	"create function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7181	"st_collect"	"create aggregate st_collect(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7185	"st_delaunaytriangles"	"create function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.""DelaunayTriangles"";"	"geom"	1	1	false	false	false	2000
7191	"st_dump"	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.""Dump"";"	"geom"	1	5	false	false	false	2000
7196	"st_dumppoints"	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.""DumpPoints"";"	"geom"	1	5	false	false	false	2000
7201	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
7209	"filter"	"create function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7206
7214	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7206
7219	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7206
7224	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7206
7229	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7206
7234	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	7206
7238	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	7206
7242	"isvalid"	"create function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7206
7246	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7206
7250	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7206
7254	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7206
7258	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7206
7262	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7206
7266	"length"	"create function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	7206
7270	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	7206
7274	"valuearray"	"create function json.valuearray(js json)\nreturns json external name json.valuearray;"	"json"	1	1	false	false	false	7206
7278	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7206
7282	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7206
7286	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7206
7290	"output"	"create aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	7206
7294	"tojsonarray"	"create aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7206
7298	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7206
7302	"md5"	"create function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
7307	"uuid"	"create function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
7310	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7314	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7318	"chi2prob"	"create function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
7324	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	7322
7326	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	7322
7328	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	7322
7331	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	7322
7334	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	7322
7359	"listdir"	"create procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7362	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7365	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7368	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7404	"netcdf_attach"	"create procedure netcdf_attach(fname varchar(256))\n external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7407	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7411	"storage"	"create function sys.""storage""()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7443	"storage"	"create function sys.""storage""( sname string)\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7460	"storage"	"create function sys.""storage""( sname string, tname string)\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7478	"storage"	"create function sys.""storage""( sname string, tname string, cname string)\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7509	"storagemodelinit"	"create procedure sys.storagemodelinit()\nbegin\n delete from sys.storagemodelinput;\n insert into sys.storagemodelinput\n select x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n update sys.storagemodelinput\n set reference = true\n where concat(concat(""schema"",""table""), ""column"") in (\n select concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n from ""sys"".""keys"" as ""fkkey"",\n ""sys"".""objects"" as ""fkkeycol"",\n ""sys"".""tables"" as ""fktable"",\n ""sys"".""schemas"" as ""fkschema""\n where ""fktable"".""id"" = ""fkkey"".""table_id""\n and ""fkkey"".""id"" = ""fkkeycol"".""id""\n and ""fkschema"".""id"" = ""fktable"".""schema_id""\n and ""fkkey"".""rkey"" > -1);\n update sys.storagemodelinput\n set ""distinct"" = ""count"" \n where ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7511	"columnsize"	"create function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n case\n when nme = 'boolean' then return i;\n when nme = 'char' then return 2*i;\n when nme = 'smallint' then return 2 * i;\n when nme = 'int' then return 4 * i;\n when nme = 'bigint' then return 8 * i;\n when nme = 'hugeint' then return 16 * i;\n when nme = 'timestamp' then return 8 * i;\n when nme = 'varchar' then\n case\n when cast(d as bigint) << 8 then return i;\n when cast(d as bigint) << 16 then return 2 * i;\n when cast(d as bigint) << 32 then return 4 * i;\n else return 8 * i;\n end case;\n else return 8 * i;\n end case;\nend;"	"user"	2	1	false	false	false	2000
7517	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n if tpe <> 'varchar' and tpe <> 'clob'\n then\n return 0;\n end if;\n return 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7523	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n \n if b = true\n then\n return 8 * i;\n end if;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
7528	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n if nme = 'boolean'\n or nme = 'tinyint'\n or nme = 'smallint'\n or nme = 'int'\n or nme = 'bigint'\n or nme = 'hugeint'\n or nme = 'decimal'\n or nme = 'date'\n or nme = 'timestamp'\n or nme = 'real'\n or nme = 'double'\n then\n return cast( i * 0.12 as bigint);\n end if ;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
7533	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""count"" bigint,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n imprints bigint,\n sorted boolean)\nbegin\n return select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n columnsize(i.""type"", i.count, i.""distinct""),\n heapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n hashsize(i.""reference"", i.""count""),\n imprintsize(i.""count"",i.""type""),\n i.sorted\n from sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7580	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7584	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7589	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7595	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7602	"reverse"	"create function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7606	"fuse"	"create function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7611	"fuse"	"create function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7616	"fuse"	"create function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7622	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7620
7626	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7620
7630	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7620
7634	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7620
7638	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7620
7643	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7620
7647	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7620
7651	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7620
7655	"seq_char"	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	"bam"	1	1	false	false	false	7620
7662	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7620
7665	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7620
7735	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7740	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7746	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7751	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7757	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7762	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7768	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7773	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7779	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7785	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7791	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7797	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 13 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6626	6631	0	"spatial_ref_sys_srid_pkey"
7340	7341	0	"keywords_keyword_pkey"
7345	7349	0	"table_types_table_type_id_pkey"
7348	7349	0	"table_types_table_type_name_unique"
7353	7357	0	"dependency_types_dependency_type_id_pkey"
7356	7357	0	"dependency_types_dependency_type_name_unique"
7675	7676	0	"files_pkey_file_id"
7686	7689	0	"sq_pkey_sn_file_id"
7688	7689	1	"sq_fkey_file_id"
7705	7708	0	"rg_pkey_id_file_id"
7707	7708	1	"rg_fkey_file_id"
7717	7720	0	"pg_pkey_id_file_id"
7719	7720	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 13 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6625	6631	0	"spatial_ref_sys_srid_pkey"	-1	-1
7339	7341	0	"keywords_keyword_pkey"	-1	-1
7344	7349	0	"table_types_table_type_id_pkey"	-1	-1
7347	7349	1	"table_types_table_type_name_unique"	-1	-1
7352	7357	0	"dependency_types_dependency_type_id_pkey"	-1	-1
7355	7357	1	"dependency_types_dependency_type_name_unique"	-1	-1
7674	7676	0	"files_pkey_file_id"	-1	-1
7685	7689	0	"sq_pkey_sn_file_id"	-1	-1
7687	7689	2	"sq_fkey_file_id"	7674	514
7704	7708	0	"rg_pkey_id_file_id"	-1	-1
7706	7708	2	"rg_fkey_file_id"	7674	514
7716	7720	0	"pg_pkey_id_file_id"	-1	-1
7718	7720	2	"pg_fkey_file_id"	7674	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 32 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6626	"srid"	0
6625	"srid"	0
7340	"keyword"	0
7339	"keyword"	0
7345	"table_type_id"	0
7348	"table_type_name"	0
7344	"table_type_id"	0
7347	"table_type_name"	0
7353	"dependency_type_id"	0
7356	"dependency_type_name"	0
7352	"dependency_type_id"	0
7355	"dependency_type_name"	0
7675	"file_id"	0
7674	"file_id"	0
7686	"sn"	0
7686	"file_id"	1
7688	"file_id"	0
7685	"sn"	0
7685	"file_id"	1
7687	"file_id"	0
7705	"id"	0
7705	"file_id"	1
7707	"file_id"	0
7704	"id"	0
7704	"file_id"	1
7706	"file_id"	0
7717	"id"	0
7717	"file_id"	1
7719	"file_id"	0
7716	"id"	0
7716	"file_id"	1
7718	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 46 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5681	1	1	0	0
5691	1	1	0	0
5717	1	1	0	0
5720	1	1	0	0
5724	1	1	0	0
5731	1	16	3	0
5736	1	16	3	0
5741	1	16	3	0
5745	1	16	3	0
5749	1	16	3	0
5753	1	16	3	0
5757	1	16	3	0
5829	1	16	3	0
5834	1	16	3	0
5839	1	16	3	0
5844	1	16	3	0
5849	1	16	3	0
5854	1	16	3	0
6016	1	16	3	0
6020	1	16	3	0
6024	1	16	3	0
6028	1	16	3	0
6166	1	16	3	0
6173	1	16	3	0
6178	1	16	3	0
6184	1	16	3	0
6190	1	16	3	0
6195	1	16	3	0
6200	1	16	3	0
6204	1	16	3	0
6303	1	16	3	0
7302	1	16	3	0
7804	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
7206	"json"	3	3	true
7322	"profiler"	3	3	true
7620	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1616 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
61
62
63
64
65
66
67
68
69
70
71
75
76
77
78
81
82
83
101
102
103
104
105
106
107
108
109
110
111
112
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
60
72
73
74
79
80
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
113
114
115
116
117
118
119
120
121
5702
5705
5711
5731
5736
5741
5745
5749
5753
5757
5760
5764
5768
5772
5776
5780
5784
5788
5792
5796
5800
5804
5808
5812
5816
5823
5829
5834
5839
5844
5849
5854
5860
5864
5868
5872
5877
5881
5885
5889
5893
5897
5902
5907
5912
5917
5927
5977
5979
5981
5984
5986
6016
6020
6024
6028
6032
6036
6040
6044
6049
6054
6059
6064
6069
6074
6079
6084
6089
6094
6099
6104
6109
6114
6119
6124
6129
6133
6149
6152
6156
6159
6163
6166
6173
6178
6184
6190
6195
6200
6204
6208
6212
6216
6219
6229
6237
6250
6255
6259
6261
6265
6285
6288
6291
6294
6297
6300
6303
6315
6317
6321
6325
6329
6333
6337
6341
6345
6349
6353
6357
6361
6365
6369
6373
6377
6381
6385
6389
6393
6397
6401
6405
6409
6413
6417
6421
6425
6429
6433
6437
6441
6445
6449
6453
6457
6461
6465
6469
6473
6477
6481
6485
6489
6493
6497
6501
6505
6509
6513
6517
6521
6526
6531
6536
6541
6546
6551
6556
6561
6566
6571
6576
6581
6586
6591
6596
6601
6606
6611
6615
6619
6642
6646
6651
6656
6661
6666
6670
6674
6678
6682
6686
6690
6694
6699
6703
6707
6711
6715
6720
6725
6730
6735
6740
6745
6750
6755
6761
6766
6771
6776
6781
6785
6790
6795
6799
6803
6807
6811
6815
6819
6823
6827
6831
6835
6840
6844
6848
6852
6856
6860
6864
6869
6873
6877
6882
6886
6891
6896
6901
6906
6911
6916
6921
6926
6931
6936
6941
6946
6950
6954
6958
6962
6966
6970
6974
6978
6982
6987
6992
6998
7005
7011
7015
7020
7028
7035
7039
7044
7049
7053
7057
7061
7065
7069
7073
7077
7081
7085
7089
7093
7097
7101
7105
7109
7113
7117
7122
7126
7134
7139
7145
7152
7156
7161
7166
7172
7176
7181
7185
7191
7196
7201
7209
7214
7219
7224
7229
7234
7238
7242
7246
7250
7254
7258
7262
7266
7270
7274
7278
7282
7286
7290
7294
7298
7302
7307
7310
7314
7318
7324
7326
7328
7331
7334
7359
7362
7365
7368
7404
7407
7411
7443
7460
7478
7509
7511
7517
7523
7528
7533
7580
7584
7589
7595
7602
7606
7611
7616
7622
7626
7630
7634
7638
7643
7647
7651
7655
7662
7665
7735
7740
7746
7751
7757
7762
7768
7773
7779
7785
7791
7797
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 34 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	13	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
27	"wkb"	"geometry"	0	0	0	15	0
28	"wkba"	"geometrya"	0	0	0	16	0
29	"mbr"	"mbr"	0	0	0	16	0
5758	"url"	"url"	0	0	0	16	2000
5858	"inet"	"inet"	0	0	0	16	2000
7207	"json"	"json"	0	0	0	16	2000
7305	"uuid"	"uuid"	0	0	0	16	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

