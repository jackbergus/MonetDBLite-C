stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.convert
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geometrytype
SYSTEM FUNCTION  sys.get_type
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.has_m
SYSTEM FUNCTION  sys.has_z
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.st_area
SYSTEM FUNCTION  sys.st_asbinary
SYSTEM FUNCTION  sys.st_asewkt
SYSTEM FUNCTION  sys.st_astext
SYSTEM FUNCTION  sys.st_bdmpolyfromtext
SYSTEM FUNCTION  sys.st_bdpolyfromtext
SYSTEM FUNCTION  sys.st_boundary
SYSTEM FUNCTION  sys.st_buffer
SYSTEM FUNCTION  sys.st_centroid
SYSTEM FUNCTION  sys.st_collect
SYSTEM FUNCTION  sys.st_contains
SYSTEM FUNCTION  sys.st_convexhull
SYSTEM FUNCTION  sys.st_coorddim
SYSTEM FUNCTION  sys.st_coveredby
SYSTEM FUNCTION  sys.st_covers
SYSTEM FUNCTION  sys.st_crosses
SYSTEM FUNCTION  sys.st_delaunaytriangles
SYSTEM FUNCTION  sys.st_difference
SYSTEM FUNCTION  sys.st_dimension
SYSTEM FUNCTION  sys.st_disjoint
SYSTEM FUNCTION  sys.st_distance
SYSTEM FUNCTION  sys.st_dump
SYSTEM FUNCTION  sys.st_dumppoints
SYSTEM FUNCTION  sys.st_dwithin
SYSTEM FUNCTION  sys.st_endpoint
SYSTEM FUNCTION  sys.st_envelope
SYSTEM FUNCTION  sys.st_equals
SYSTEM FUNCTION  sys.st_exteriorring
SYSTEM FUNCTION  sys.st_force2d
SYSTEM FUNCTION  sys.st_force3d
SYSTEM FUNCTION  sys.st_geomcollfromtext
SYSTEM FUNCTION  sys.st_geometryfromtext
SYSTEM FUNCTION  sys.st_geometryn
SYSTEM FUNCTION  sys.st_geometrytype
SYSTEM FUNCTION  sys.st_geomfromtext
SYSTEM FUNCTION  sys.st_interiorringn
SYSTEM FUNCTION  sys.st_interiorrings
SYSTEM FUNCTION  sys.st_intersection
SYSTEM FUNCTION  sys.st_intersects
SYSTEM FUNCTION  sys.st_isclosed
SYSTEM FUNCTION  sys.st_isempty
SYSTEM FUNCTION  sys.st_isring
SYSTEM FUNCTION  sys.st_issimple
SYSTEM FUNCTION  sys.st_isvalid
SYSTEM FUNCTION  sys.st_isvalidreason
SYSTEM FUNCTION  sys.st_length
SYSTEM FUNCTION  sys.st_length2d
SYSTEM FUNCTION  sys.st_linefromtext
SYSTEM FUNCTION  sys.st_makebox2d
SYSTEM FUNCTION  sys.st_makeenvelope
SYSTEM FUNCTION  sys.st_makeline
SYSTEM FUNCTION  sys.st_makepoint
SYSTEM FUNCTION  sys.st_makepointm
SYSTEM FUNCTION  sys.st_makepolygon
SYSTEM FUNCTION  sys.st_mlinefromtext
SYSTEM FUNCTION  sys.st_mpointfromtext
SYSTEM FUNCTION  sys.st_mpolyfromtext
SYSTEM FUNCTION  sys.st_npoints
SYSTEM FUNCTION  sys.st_nrings
SYSTEM FUNCTION  sys.st_numgeometries
SYSTEM FUNCTION  sys.st_numinteriorring
SYSTEM FUNCTION  sys.st_numinteriorrings
SYSTEM FUNCTION  sys.st_numpatches
SYSTEM FUNCTION  sys.st_numpoints
SYSTEM FUNCTION  sys.st_overlaps
SYSTEM FUNCTION  sys.st_patchn
SYSTEM FUNCTION  sys.st_point
SYSTEM FUNCTION  sys.st_pointfromtext
SYSTEM FUNCTION  sys.st_pointn
SYSTEM FUNCTION  sys.st_pointonsurface
SYSTEM FUNCTION  sys.st_polygon
SYSTEM FUNCTION  sys.st_polygonfromtext
SYSTEM FUNCTION  sys.st_relate
SYSTEM FUNCTION  sys.st_segmentize
SYSTEM FUNCTION  sys.st_setexteriorring
SYSTEM FUNCTION  sys.st_setsrid
SYSTEM FUNCTION  sys.st_srid
SYSTEM FUNCTION  sys.st_startpoint
SYSTEM FUNCTION  sys.st_symdifference
SYSTEM FUNCTION  sys.st_touches
SYSTEM FUNCTION  sys.st_transform
SYSTEM FUNCTION  sys.st_translate
SYSTEM FUNCTION  sys.st_union
SYSTEM FUNCTION  sys.st_within
SYSTEM FUNCTION  sys.st_wkbtosql
SYSTEM FUNCTION  sys.st_wkttosql
SYSTEM FUNCTION  sys.st_x
SYSTEM FUNCTION  sys.st_xmax
SYSTEM FUNCTION  sys.st_xmin
SYSTEM FUNCTION  sys.st_y
SYSTEM FUNCTION  sys.st_ymax
SYSTEM FUNCTION  sys.st_ymin
SYSTEM FUNCTION  sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure analyze()
external name sql.analyze;
create procedure analyze(tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string)
external name sql.analyze;
-- control the sample size
create procedure analyze("sample" bigint)
external name sql.analyze;
create procedure analyze(tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string, "sample" bigint)
external name sql.analyze;

-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr(geom geometry) returns mbr external name geom."mbr";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 364 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5668	"id"	"int"	32	0	5667	NULL	true	0	NULL
5669	"name"	"varchar"	1024	0	5667	NULL	true	1	NULL
5670	"schema_id"	"int"	32	0	5667	NULL	true	2	NULL
5671	"query"	"varchar"	2048	0	5667	NULL	true	3	NULL
5672	"type"	"smallint"	16	0	5667	NULL	true	4	NULL
5673	"system"	"boolean"	1	0	5667	NULL	true	5	NULL
5674	"commit_action"	"smallint"	16	0	5667	NULL	true	6	NULL
5675	"access"	"smallint"	16	0	5667	NULL	true	7	NULL
5676	"temporary"	"smallint"	16	0	5667	NULL	true	8	NULL
5678	"id"	"int"	32	0	5677	NULL	true	0	NULL
5679	"name"	"varchar"	1024	0	5677	NULL	true	1	NULL
5680	"type"	"varchar"	1024	0	5677	NULL	true	2	NULL
5681	"type_digits"	"int"	32	0	5677	NULL	true	3	NULL
5682	"type_scale"	"int"	32	0	5677	NULL	true	4	NULL
5683	"table_id"	"int"	32	0	5677	NULL	true	5	NULL
5684	"default"	"varchar"	2048	0	5677	NULL	true	6	NULL
5685	"null"	"boolean"	1	0	5677	NULL	true	7	NULL
5686	"number"	"int"	32	0	5677	NULL	true	8	NULL
5687	"storage"	"varchar"	2048	0	5677	NULL	true	9	NULL
5694	"name"	"varchar"	1024	0	5693	NULL	true	0	NULL
5695	"fullname"	"varchar"	2048	0	5693	NULL	true	1	NULL
5696	"default_schema"	"int"	9	0	5693	NULL	true	2	NULL
5700	"name"	"varchar"	1024	0	5699	NULL	true	0	NULL
5701	"fullname"	"varchar"	2024	0	5699	NULL	true	1	NULL
5702	"default_schema"	"int"	9	0	5699	NULL	true	2	NULL
5704	"login_id"	"int"	32	0	5703	NULL	true	0	NULL
5705	"role_id"	"int"	32	0	5703	NULL	true	1	NULL
5707	"id"	"int"	32	0	5706	NULL	true	0	NULL
5708	"name"	"varchar"	1024	0	5706	NULL	true	1	NULL
5709	"grantor"	"int"	32	0	5706	NULL	true	2	NULL
5711	"obj_id"	"int"	32	0	5710	NULL	true	0	NULL
5712	"auth_id"	"int"	32	0	5710	NULL	true	1	NULL
5713	"privileges"	"int"	32	0	5710	NULL	true	2	NULL
5714	"grantor"	"int"	32	0	5710	NULL	true	3	NULL
5715	"grantable"	"int"	32	0	5710	NULL	true	4	NULL
5909	"id"	"oid"	63	0	5917	NULL	true	0	NULL
5910	"owner"	"clob"	0	0	5917	NULL	true	1	NULL
5911	"defined"	"timestamp"	7	0	5917	NULL	true	2	NULL
5912	"query"	"clob"	0	0	5917	NULL	true	3	NULL
5913	"pipe"	"clob"	0	0	5917	NULL	true	4	NULL
5914	"plan"	"clob"	0	0	5917	NULL	true	5	NULL
5915	"mal"	"int"	32	0	5917	NULL	true	6	NULL
5916	"optimize"	"bigint"	64	0	5917	NULL	true	7	NULL
5919	"id"	"oid"	63	0	5928	NULL	true	0	NULL
5920	"start"	"timestamp"	7	0	5928	NULL	true	1	NULL
5921	"stop"	"timestamp"	7	0	5928	NULL	true	2	NULL
5922	"arguments"	"clob"	0	0	5928	NULL	true	3	NULL
5923	"tuples"	"wrd"	64	0	5928	NULL	true	4	NULL
5924	"run"	"bigint"	64	0	5928	NULL	true	5	NULL
5925	"ship"	"bigint"	64	0	5928	NULL	true	6	NULL
5926	"cpu"	"int"	32	0	5928	NULL	true	7	NULL
5927	"io"	"int"	32	0	5928	NULL	true	8	NULL
5930	"id"	"oid"	63	0	5946	NULL	true	0	NULL
5931	"owner"	"clob"	0	0	5946	NULL	true	1	NULL
5932	"defined"	"timestamp"	7	0	5946	NULL	true	2	NULL
5933	"query"	"clob"	0	0	5946	NULL	true	3	NULL
5934	"pipe"	"clob"	0	0	5946	NULL	true	4	NULL
5935	"plan"	"clob"	0	0	5946	NULL	true	5	NULL
5936	"mal"	"int"	32	0	5946	NULL	true	6	NULL
5937	"optimize"	"bigint"	64	0	5946	NULL	true	7	NULL
5938	"start"	"timestamp"	7	0	5946	NULL	true	8	NULL
5939	"stop"	"timestamp"	7	0	5946	NULL	true	9	NULL
5940	"arguments"	"clob"	0	0	5946	NULL	true	10	NULL
5941	"tuples"	"wrd"	64	0	5946	NULL	true	11	NULL
5942	"run"	"bigint"	64	0	5946	NULL	true	12	NULL
5943	"ship"	"bigint"	64	0	5946	NULL	true	13	NULL
5944	"cpu"	"int"	32	0	5946	NULL	true	14	NULL
5945	"io"	"int"	32	0	5946	NULL	true	15	NULL
5972	"event"	"int"	32	0	5985	NULL	true	0	NULL
5973	"clk"	"varchar"	20	0	5985	NULL	true	1	NULL
5974	"pc"	"varchar"	50	0	5985	NULL	true	2	NULL
5975	"thread"	"int"	32	0	5985	NULL	true	3	NULL
5976	"ticks"	"bigint"	64	0	5985	NULL	true	4	NULL
5977	"rrsmb"	"bigint"	64	0	5985	NULL	true	5	NULL
5978	"vmmb"	"bigint"	64	0	5985	NULL	true	6	NULL
5979	"reads"	"bigint"	64	0	5985	NULL	true	7	NULL
5980	"writes"	"bigint"	64	0	5985	NULL	true	8	NULL
5981	"minflt"	"bigint"	64	0	5985	NULL	true	9	NULL
5982	"majflt"	"bigint"	64	0	5985	NULL	true	10	NULL
5983	"nvcsw"	"bigint"	64	0	5985	NULL	true	11	NULL
5984	"stmt"	"clob"	0	0	5985	NULL	true	12	NULL
6115	"user"	"clob"	0	0	6121	NULL	true	0	NULL
6116	"login"	"timestamp"	7	0	6121	NULL	true	1	NULL
6117	"sessiontimeout"	"bigint"	64	0	6121	NULL	true	2	NULL
6118	"lastcommand"	"timestamp"	7	0	6121	NULL	true	3	NULL
6119	"querytimeout"	"bigint"	64	0	6121	NULL	true	4	NULL
6120	"active"	"boolean"	1	0	6121	NULL	true	5	NULL
6198	"name"	"clob"	0	0	6201	NULL	true	0	NULL
6199	"def"	"clob"	0	0	6201	NULL	true	1	NULL
6200	"status"	"clob"	0	0	6201	NULL	true	2	NULL
6207	"name"	"clob"	0	0	6209	NULL	true	0	NULL
6208	"value"	"clob"	0	0	6209	NULL	true	1	NULL
6239	"qtag"	"bigint"	64	0	6247	NULL	true	0	NULL
6240	"user"	"clob"	0	0	6247	NULL	true	1	NULL
6241	"started"	"timestamp"	7	0	6247	NULL	true	2	NULL
6242	"estimate"	"timestamp"	7	0	6247	NULL	true	3	NULL
6243	"progress"	"int"	32	0	6247	NULL	true	4	NULL
6244	"status"	"clob"	0	0	6247	NULL	true	5	NULL
6245	"tag"	"oid"	63	0	6247	NULL	true	6	NULL
6246	"query"	"clob"	0	0	6247	NULL	true	7	NULL
6574	"srid"	"int"	32	0	6581	NULL	false	0	NULL
6577	"auth_name"	"varchar"	256	0	6581	NULL	true	1	NULL
6578	"auth_srid"	"int"	32	0	6581	NULL	true	2	NULL
6579	"srtext"	"varchar"	2048	0	6581	NULL	true	3	NULL
6580	"proj4text"	"varchar"	2048	0	6581	NULL	true	4	NULL
6583	"f_table_catalog"	"clob"	0	0	6590	NULL	true	0	NULL
6584	"f_table_schema"	"varchar"	1024	0	6590	NULL	true	1	NULL
6585	"f_table_name"	"varchar"	1024	0	6590	NULL	true	2	NULL
6586	"f_geometry_column"	"varchar"	1024	0	6590	NULL	true	3	NULL
6587	"coord_dimension"	"bigint"	64	0	6590	NULL	true	4	NULL
6588	"srid"	"int"	32	0	6590	NULL	true	5	NULL
6589	"type"	"clob"	0	0	6590	NULL	true	6	NULL
7281	"file_id"	"int"	32	0	7283	NULL	true	0	NULL
7282	"location"	"char"	256	0	7283	NULL	true	1	NULL
7285	"dim_id"	"int"	32	0	7289	NULL	true	0	NULL
7286	"file_id"	"int"	32	0	7289	NULL	true	1	NULL
7287	"name"	"varchar"	64	0	7289	NULL	true	2	NULL
7288	"length"	"int"	32	0	7289	NULL	true	3	NULL
7291	"var_id"	"int"	32	0	7297	NULL	true	0	NULL
7292	"file_id"	"int"	32	0	7297	NULL	true	1	NULL
7293	"name"	"varchar"	64	0	7297	NULL	true	2	NULL
7294	"vartype"	"varchar"	64	0	7297	NULL	true	3	NULL
7295	"ndim"	"int"	32	0	7297	NULL	true	4	NULL
7296	"coord_dim_id"	"int"	32	0	7297	NULL	true	5	NULL
7299	"var_id"	"int"	32	0	7303	NULL	true	0	NULL
7300	"dim_id"	"int"	32	0	7303	NULL	true	1	NULL
7301	"file_id"	"int"	32	0	7303	NULL	true	2	NULL
7302	"dimpos"	"int"	32	0	7303	NULL	true	3	NULL
7305	"obj_name"	"varchar"	256	0	7311	NULL	true	0	NULL
7306	"att_name"	"varchar"	256	0	7311	NULL	true	1	NULL
7307	"att_type"	"varchar"	64	0	7311	NULL	true	2	NULL
7308	"value"	"clob"	0	0	7311	NULL	true	3	NULL
7309	"file_id"	"int"	32	0	7311	NULL	true	4	NULL
7310	"gr_name"	"varchar"	256	0	7311	NULL	true	5	NULL
7336	"schema"	"clob"	0	0	7350	NULL	true	0	NULL
7337	"table"	"clob"	0	0	7350	NULL	true	1	NULL
7338	"column"	"clob"	0	0	7350	NULL	true	2	NULL
7339	"type"	"clob"	0	0	7350	NULL	true	3	NULL
7340	"mode"	"clob"	0	0	7350	NULL	true	4	NULL
7341	"location"	"clob"	0	0	7350	NULL	true	5	NULL
7342	"count"	"bigint"	64	0	7350	NULL	true	6	NULL
7343	"typewidth"	"int"	32	0	7350	NULL	true	7	NULL
7344	"columnsize"	"bigint"	64	0	7350	NULL	true	8	NULL
7345	"heapsize"	"bigint"	64	0	7350	NULL	true	9	NULL
7346	"hashes"	"bigint"	64	0	7350	NULL	true	10	NULL
7347	"phash"	"boolean"	1	0	7350	NULL	true	11	NULL
7348	"imprints"	"bigint"	64	0	7350	NULL	true	12	NULL
7349	"sorted"	"boolean"	1	0	7350	NULL	true	13	NULL
7352	"schema"	"clob"	0	0	7362	NULL	true	0	NULL
7353	"table"	"clob"	0	0	7362	NULL	true	1	NULL
7354	"column"	"clob"	0	0	7362	NULL	true	2	NULL
7355	"type"	"clob"	0	0	7362	NULL	true	3	NULL
7356	"typewidth"	"int"	32	0	7362	NULL	true	4	NULL
7357	"count"	"bigint"	64	0	7362	NULL	true	5	NULL
7358	"distinct"	"bigint"	64	0	7362	NULL	true	6	NULL
7359	"atomwidth"	"int"	32	0	7362	NULL	true	7	NULL
7360	"reference"	"boolean"	1	0	7362	NULL	true	8	NULL
7361	"sorted"	"boolean"	1	0	7362	NULL	true	9	NULL
7400	"schema"	"clob"	0	0	7410	NULL	true	0	NULL
7401	"table"	"clob"	0	0	7410	NULL	true	1	NULL
7402	"column"	"clob"	0	0	7410	NULL	true	2	NULL
7403	"type"	"clob"	0	0	7410	NULL	true	3	NULL
7404	"count"	"bigint"	64	0	7410	NULL	true	4	NULL
7405	"columnsize"	"bigint"	64	0	7410	NULL	true	5	NULL
7406	"heapsize"	"bigint"	64	0	7410	NULL	true	6	NULL
7407	"hashes"	"bigint"	64	0	7410	NULL	true	7	NULL
7408	"imprints"	"bigint"	64	0	7410	NULL	true	8	NULL
7409	"sorted"	"boolean"	1	0	7410	NULL	true	9	NULL
7412	"schema"	"clob"	0	0	7420	NULL	true	0	NULL
7413	"table"	"clob"	0	0	7420	NULL	true	1	NULL
7414	"count"	"bigint"	64	0	7420	NULL	true	2	NULL
7415	"columnsize"	"bigint"	64	0	7420	NULL	true	3	NULL
7416	"heapsize"	"bigint"	64	0	7420	NULL	true	4	NULL
7417	"hashes"	"bigint"	64	0	7420	NULL	true	5	NULL
7418	"imprints"	"bigint"	64	0	7420	NULL	true	6	NULL
7419	"auxiliary"	"bigint"	64	0	7420	NULL	true	7	NULL
7422	"column_id"	"int"	32	0	7433	NULL	true	0	NULL
7423	"type"	"clob"	0	0	7433	NULL	true	1	NULL
7424	"width"	"int"	32	0	7433	NULL	true	2	NULL
7425	"stamp"	"timestamp"	7	0	7433	NULL	true	3	NULL
7426	"sample"	"bigint"	64	0	7433	NULL	true	4	NULL
7427	"count"	"bigint"	64	0	7433	NULL	true	5	NULL
7428	"unique"	"bigint"	64	0	7433	NULL	true	6	NULL
7429	"nils"	"bigint"	64	0	7433	NULL	true	7	NULL
7430	"minval"	"clob"	0	0	7433	NULL	true	8	NULL
7431	"maxval"	"clob"	0	0	7433	NULL	true	9	NULL
7432	"sorted"	"boolean"	1	0	7433	NULL	true	10	NULL
7528	"file_id"	"bigint"	64	0	7536	NULL	false	0	NULL
7529	"file_location"	"clob"	0	0	7536	NULL	false	1	NULL
7530	"dbschema"	"smallint"	16	0	7536	NULL	false	2	NULL
7531	"format_version"	"varchar"	7	0	7536	NULL	true	3	NULL
7532	"sorting_order"	"varchar"	10	0	7536	NULL	true	4	NULL
7533	"comments"	"clob"	0	0	7536	NULL	true	5	NULL
7538	"sn"	"clob"	0	0	7549	NULL	false	0	NULL
7539	"file_id"	"bigint"	64	0	7549	NULL	false	1	NULL
7540	"ln"	"int"	32	0	7549	NULL	true	2	NULL
7541	"as"	"int"	32	0	7549	NULL	true	3	NULL
7542	"m5"	"clob"	0	0	7549	NULL	true	4	NULL
7543	"sp"	"clob"	0	0	7549	NULL	true	5	NULL
7544	"ur"	"clob"	0	0	7549	NULL	true	6	NULL
7551	"id"	"clob"	0	0	7568	NULL	false	0	NULL
7552	"file_id"	"bigint"	64	0	7568	NULL	false	1	NULL
7553	"cn"	"clob"	0	0	7568	NULL	true	2	NULL
7554	"ds"	"clob"	0	0	7568	NULL	true	3	NULL
7555	"dt"	"timestamp"	7	0	7568	NULL	true	4	NULL
7556	"fo"	"clob"	0	0	7568	NULL	true	5	NULL
7557	"ks"	"clob"	0	0	7568	NULL	true	6	NULL
7558	"lb"	"clob"	0	0	7568	NULL	true	7	NULL
7559	"pg"	"clob"	0	0	7568	NULL	true	8	NULL
7560	"pi"	"int"	32	0	7568	NULL	true	9	NULL
7561	"pl"	"clob"	0	0	7568	NULL	true	10	NULL
7562	"pu"	"clob"	0	0	7568	NULL	true	11	NULL
7563	"sm"	"clob"	0	0	7568	NULL	true	12	NULL
7570	"id"	"clob"	0	0	7580	NULL	false	0	NULL
7571	"file_id"	"bigint"	64	0	7580	NULL	false	1	NULL
7572	"pn"	"clob"	0	0	7580	NULL	true	2	NULL
7573	"cl"	"clob"	0	0	7580	NULL	true	3	NULL
7574	"pp"	"clob"	0	0	7580	NULL	true	4	NULL
7575	"vn"	"clob"	0	0	7580	NULL	true	5	NULL
7582	"qname"	"clob"	0	0	7593	NULL	false	0	NULL
7583	"flag"	"smallint"	16	0	7593	NULL	false	1	NULL
7584	"rname"	"clob"	0	0	7593	NULL	false	2	NULL
7585	"pos"	"int"	32	0	7593	NULL	false	3	NULL
7586	"mapq"	"smallint"	16	0	7593	NULL	false	4	NULL
7587	"cigar"	"clob"	0	0	7593	NULL	false	5	NULL
7588	"rnext"	"clob"	0	0	7593	NULL	false	6	NULL
7589	"pnext"	"int"	32	0	7593	NULL	false	7	NULL
7590	"tlen"	"int"	32	0	7593	NULL	false	8	NULL
7591	"seq"	"clob"	0	0	7593	NULL	false	9	NULL
7592	"qual"	"clob"	0	0	7593	NULL	false	10	NULL
7663	"function_id"	"int"	32	0	7664	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 52 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5667	"tables"	2000	"SELECT * FROM (SELECT p.*, 0 AS ""temporary"" FROM ""sys"".""_tables"" AS p UNION ALL SELECT t.*, 1 AS ""temporary"" FROM ""tmp"".""_tables"" AS t) AS tables where tables.type <> 2;"	1	true	0	0
5677	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5693	"db_user_info"	2000	NULL	0	true	0	0
5699	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5703	"user_role"	2000	NULL	0	true	0	0
5706	"auths"	2000	NULL	0	true	0	0
5710	"privileges"	2000	NULL	0	true	0	0
5917	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5928	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5946	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5985	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6121	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6201	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6209	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6247	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6581	"spatial_ref_sys"	2000	NULL	0	true	0	0
6590	"geometry_columns"	2000	"-- create geometry_columns metadata view\ncreate view geometry_columns as\n\tselect e.value as f_table_catalog,\n\t\ts.name as f_table_schema,\n\t\ty.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type\n\tfrom schemas s, environment e, (\n\t\tselect t.schema_id,\n\t\t\tt.name as f_table_name,\n\t\t\tx.name as f_geometry_column,\n\t\t\thas_z(info)+has_m(info)+2 as coord_dimension,\n\t\t\tsrid, get_type(info, 0) as type\n\t\tfrom tables t, (\n\t\t\tselect name, table_id, type_digits as info, type_scale as srid\n\t\t\tfrom columns\n\t\t\twhere type in ( select distinct sqlname from types where systemname='wkb')\n\t\t\t) as x\n\t\twhere t.id=x.table_id\n\t\t) y\n\twhere y.schema_id=s.id and e.name='gdk_dbname';"	1	true	0	0
7283	"netcdf_files"	2000	NULL	0	true	0	0
7289	"netcdf_dims"	2000	NULL	0	true	0	0
7297	"netcdf_vars"	2000	NULL	0	true	0	0
7303	"netcdf_vardim"	2000	NULL	0	true	0	0
7311	"netcdf_attrs"	2000	NULL	0	true	0	0
7350	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7362	"storagemodelinput"	2000	NULL	0	true	0	0
7410	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7420	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7433	"statistics"	2000	NULL	0	true	0	0
7536	"files"	7485	NULL	0	true	0	0
7549	"sq"	7485	NULL	0	true	0	0
7568	"rg"	7485	NULL	0	true	0	0
7580	"pg"	7485	NULL	0	true	0	0
7593	"export"	7485	NULL	0	true	0	0
7664	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4460 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"boolean"	1	0	0	0
2156	30	"arg_1"	"geometry"	0	0	1	1
2157	30	"arg_2"	"geometry"	0	0	1	2
2158	31	"res_0"	"boolean"	1	0	0	0
2159	31	"arg_1"	"mbr"	0	0	1	1
2160	31	"arg_2"	"mbr"	0	0	1	2
2161	32	"res_0"	"boolean"	1	0	0	0
2162	32	"arg_1"	"geometry"	0	0	1	1
2163	32	"arg_2"	"geometry"	0	0	1	2
2164	33	"res_0"	"boolean"	1	0	0	0
2165	33	"arg_1"	"mbr"	0	0	1	1
2166	33	"arg_2"	"mbr"	0	0	1	2
2167	34	"res_0"	"boolean"	1	0	0	0
2168	34	"arg_1"	"geometry"	0	0	1	1
2169	34	"arg_2"	"geometry"	0	0	1	2
2170	35	"res_0"	"boolean"	1	0	0	0
2171	35	"arg_1"	"mbr"	0	0	1	1
2172	35	"arg_2"	"mbr"	0	0	1	2
2173	36	"res_0"	"boolean"	1	0	0	0
2174	36	"arg_1"	"geometry"	0	0	1	1
2175	36	"arg_2"	"geometry"	0	0	1	2
2176	37	"res_0"	"boolean"	1	0	0	0
2177	37	"arg_1"	"mbr"	0	0	1	1
2178	37	"arg_2"	"mbr"	0	0	1	2
2179	38	"res_0"	"boolean"	1	0	0	0
2180	38	"arg_1"	"geometry"	0	0	1	1
2181	38	"arg_2"	"geometry"	0	0	1	2
2182	39	"res_0"	"boolean"	1	0	0	0
2183	39	"arg_1"	"mbr"	0	0	1	1
2184	39	"arg_2"	"mbr"	0	0	1	2
2185	40	"res_0"	"boolean"	1	0	0	0
2186	40	"arg_1"	"geometry"	0	0	1	1
2187	40	"arg_2"	"geometry"	0	0	1	2
2188	41	"res_0"	"boolean"	1	0	0	0
2189	41	"arg_1"	"mbr"	0	0	1	1
2190	41	"arg_2"	"mbr"	0	0	1	2
2191	42	"res_0"	"boolean"	1	0	0	0
2192	42	"arg_1"	"geometry"	0	0	1	1
2193	42	"arg_2"	"geometry"	0	0	1	2
2194	43	"res_0"	"boolean"	1	0	0	0
2195	43	"arg_1"	"mbr"	0	0	1	1
2196	43	"arg_2"	"mbr"	0	0	1	2
2197	44	"res_0"	"boolean"	1	0	0	0
2198	44	"arg_1"	"geometry"	0	0	1	1
2199	44	"arg_2"	"geometry"	0	0	1	2
2200	45	"res_0"	"boolean"	1	0	0	0
2201	45	"arg_1"	"mbr"	0	0	1	1
2202	45	"arg_2"	"mbr"	0	0	1	2
2203	46	"res_0"	"boolean"	1	0	0	0
2204	46	"arg_1"	"geometry"	0	0	1	1
2205	46	"arg_2"	"geometry"	0	0	1	2
2206	47	"res_0"	"boolean"	1	0	0	0
2207	47	"arg_1"	"mbr"	0	0	1	1
2208	47	"arg_2"	"mbr"	0	0	1	2
2209	48	"res_0"	"boolean"	1	0	0	0
2210	48	"arg_1"	"geometry"	0	0	1	1
2211	48	"arg_2"	"geometry"	0	0	1	2
2212	49	"res_0"	"boolean"	1	0	0	0
2213	49	"arg_1"	"mbr"	0	0	1	1
2214	49	"arg_2"	"mbr"	0	0	1	2
2215	50	"res_0"	"boolean"	1	0	0	0
2216	50	"arg_1"	"geometry"	0	0	1	1
2217	50	"arg_2"	"geometry"	0	0	1	2
2218	51	"res_0"	"boolean"	1	0	0	0
2219	51	"arg_1"	"mbr"	0	0	1	1
2220	51	"arg_2"	"mbr"	0	0	1	2
2221	52	"res_0"	"boolean"	1	0	0	0
2222	52	"arg_1"	"geometry"	0	0	1	1
2223	52	"arg_2"	"geometry"	0	0	1	2
2224	53	"res_0"	"boolean"	1	0	0	0
2225	53	"arg_1"	"mbr"	0	0	1	1
2226	53	"arg_2"	"mbr"	0	0	1	2
2227	54	"res_0"	"boolean"	1	0	0	0
2228	54	"arg_1"	"geometry"	0	0	1	1
2229	54	"arg_2"	"geometry"	0	0	1	2
2230	55	"res_0"	"boolean"	1	0	0	0
2231	55	"arg_1"	"mbr"	0	0	1	1
2232	55	"arg_2"	"mbr"	0	0	1	2
2233	57	"res_0"	"oid"	63	0	0	0
2234	57	"arg_1"	"wrd"	64	0	1	1
2235	58	"res_0"	"oid"	63	0	0	0
2236	58	"arg_1"	"oid"	63	0	1	1
2237	59	"res_0"	"wrd"	64	0	0	0
2238	59	"arg_1"	"any"	0	0	1	1
2239	60	"res_0"	"wrd"	64	0	0	0
2240	60	"arg_1"	"wrd"	64	0	1	1
2241	60	"arg_2"	"int"	32	0	1	2
2242	60	"arg_3"	"any"	0	0	1	3
2243	61	"res_0"	"boolean"	1	0	0	0
2244	61	"arg_1"	"any"	0	0	1	1
2245	61	"arg_2"	"any"	0	0	1	2
2246	62	"res_0"	"boolean"	1	0	0	0
2247	62	"arg_1"	"any"	0	0	1	1
2248	62	"arg_2"	"any"	0	0	1	2
2249	63	"res_0"	"boolean"	1	0	0	0
2250	63	"arg_1"	"any"	0	0	1	1
2251	64	"res_0"	"boolean"	1	0	0	0
2252	64	"arg_1"	"any"	0	0	1	1
2253	64	"arg_2"	"any"	0	0	1	2
2254	65	"res_0"	"boolean"	1	0	0	0
2255	65	"arg_1"	"any"	0	0	1	1
2256	65	"arg_2"	"any"	0	0	1	2
2257	66	"res_0"	"boolean"	1	0	0	0
2258	66	"arg_1"	"any"	0	0	1	1
2259	66	"arg_2"	"any"	0	0	1	2
2260	67	"res_0"	"boolean"	1	0	0	0
2261	67	"arg_1"	"any"	0	0	1	1
2262	67	"arg_2"	"any"	0	0	1	2
2263	71	"res_0"	"boolean"	1	0	0	0
2264	71	"arg_1"	"any"	0	0	1	1
2265	71	"arg_2"	"any"	0	0	1	2
2266	72	"res_0"	"oid"	63	0	0	0
2267	72	"arg_1"	"any"	0	0	1	1
2268	73	"res_0"	"int"	32	0	0	0
2269	73	"arg_1"	"any"	0	0	1	1
2270	74	"res_0"	"oid"	63	0	0	0
2271	74	"arg_1"	"any"	0	0	1	1
2272	74	"arg_2"	"varchar"	0	0	1	2
2273	74	"arg_3"	"varchar"	0	0	1	3
2274	77	"res_0"	"any"	0	0	0	0
2275	77	"arg_1"	"any"	0	0	1	1
2276	77	"arg_2"	"any"	0	0	1	2
2277	78	"res_0"	"any"	0	0	0	0
2278	78	"arg_1"	"any"	0	0	1	1
2279	78	"arg_2"	"any"	0	0	1	2
2280	79	"res_0"	"any"	0	0	0	0
2281	79	"arg_1"	"boolean"	1	0	1	1
2282	79	"arg_2"	"any"	0	0	1	2
2283	79	"arg_3"	"any"	0	0	1	3
2284	98	"res_0"	"oid"	63	0	0	0
2285	98	"arg_1"	"oid"	63	0	1	1
2286	98	"arg_2"	"oid"	63	0	1	2
2287	99	"res_0"	"tinyint"	8	0	0	0
2288	99	"arg_1"	"tinyint"	8	0	1	1
2289	99	"arg_2"	"tinyint"	8	0	1	2
2290	100	"res_0"	"smallint"	16	0	0	0
2291	100	"arg_1"	"smallint"	16	0	1	1
2292	100	"arg_2"	"smallint"	16	0	1	2
2293	101	"res_0"	"int"	32	0	0	0
2294	101	"arg_1"	"int"	32	0	1	1
2295	101	"arg_2"	"int"	32	0	1	2
2296	102	"res_0"	"bigint"	64	0	0	0
2297	102	"arg_1"	"bigint"	64	0	1	1
2298	102	"arg_2"	"bigint"	64	0	1	2
2299	103	"res_0"	"wrd"	64	0	0	0
2300	103	"arg_1"	"wrd"	64	0	1	1
2301	103	"arg_2"	"wrd"	64	0	1	2
2302	104	"res_0"	"decimal"	2	0	0	0
2303	104	"arg_1"	"decimal"	2	0	1	1
2304	104	"arg_2"	"decimal"	2	0	1	2
2305	105	"res_0"	"decimal"	4	0	0	0
2306	105	"arg_1"	"decimal"	4	0	1	1
2307	105	"arg_2"	"decimal"	4	0	1	2
2308	106	"res_0"	"decimal"	9	0	0	0
2309	106	"arg_1"	"decimal"	9	0	1	1
2310	106	"arg_2"	"decimal"	9	0	1	2
2311	107	"res_0"	"decimal"	19	0	0	0
2312	107	"arg_1"	"decimal"	19	0	1	1
2313	107	"arg_2"	"decimal"	19	0	1	2
2314	108	"res_0"	"real"	24	0	0	0
2315	108	"arg_1"	"real"	24	0	1	1
2316	108	"arg_2"	"real"	24	0	1	2
2317	109	"res_0"	"double"	53	0	0	0
2318	109	"arg_1"	"double"	53	0	1	1
2319	109	"arg_2"	"double"	53	0	1	2
2320	117	"res_0"	"int"	32	0	0	0
2321	117	"arg_1"	"any"	0	0	1	1
2322	118	"res_0"	"int"	32	0	0	0
2323	118	"arg_1"	"any"	0	0	1	1
2324	119	"res_0"	"int"	32	0	0	0
2325	119	"arg_1"	"any"	0	0	1	1
2326	120	"res_0"	"any"	0	0	0	0
2327	120	"arg_1"	"any"	0	0	1	1
2328	121	"res_0"	"int"	32	0	0	0
2329	121	"arg_1"	"any"	0	0	1	1
2330	122	"res_0"	"int"	32	0	0	0
2331	122	"arg_1"	"any"	0	0	1	1
2332	122	"arg_2"	"oid"	63	0	1	2
2333	122	"arg_3"	"any"	0	0	1	3
2334	123	"res_0"	"int"	32	0	0	0
2335	123	"arg_1"	"any"	0	0	1	1
2336	123	"arg_2"	"oid"	63	0	1	2
2337	123	"arg_3"	"any"	0	0	1	3
2338	124	"res_0"	"int"	32	0	0	0
2339	124	"arg_1"	"any"	0	0	1	1
2340	124	"arg_2"	"oid"	63	0	1	2
2341	124	"arg_3"	"any"	0	0	1	3
2342	125	"res_0"	"any"	0	0	0	0
2343	125	"arg_1"	"any"	0	0	1	1
2344	125	"arg_2"	"oid"	63	0	1	2
2345	125	"arg_3"	"any"	0	0	1	3
2346	126	"res_0"	"int"	32	0	0	0
2347	126	"arg_1"	"any"	0	0	1	1
2348	126	"arg_2"	"oid"	63	0	1	2
2349	126	"arg_3"	"any"	0	0	1	3
2350	127	"res_0"	"int"	32	0	0	0
2351	127	"arg_1"	"any"	0	0	1	1
2352	127	"arg_2"	"oid"	63	0	1	2
2353	127	"arg_3"	"oid"	63	0	1	3
2354	127	"arg_4"	"oid"	63	0	1	4
2355	128	"res_0"	"int"	32	0	0	0
2356	128	"arg_1"	"any"	0	0	1	1
2357	128	"arg_2"	"oid"	63	0	1	2
2358	128	"arg_3"	"oid"	63	0	1	3
2359	128	"arg_4"	"oid"	63	0	1	4
2360	129	"res_0"	"int"	32	0	0	0
2361	129	"arg_1"	"any"	0	0	1	1
2362	129	"arg_2"	"oid"	63	0	1	2
2363	129	"arg_3"	"oid"	63	0	1	3
2364	129	"arg_4"	"oid"	63	0	1	4
2365	130	"res_0"	"any"	0	0	0	0
2366	130	"arg_1"	"any"	0	0	1	1
2367	130	"arg_2"	"oid"	63	0	1	2
2368	130	"arg_3"	"oid"	63	0	1	3
2369	130	"arg_4"	"oid"	63	0	1	4
2370	131	"res_0"	"int"	32	0	0	0
2371	131	"arg_1"	"any"	0	0	1	1
2372	131	"arg_2"	"oid"	63	0	1	2
2373	131	"arg_3"	"oid"	63	0	1	3
2374	131	"arg_4"	"oid"	63	0	1	4
2375	132	"res_0"	"any"	0	0	0	0
2376	132	"arg_1"	"any"	0	0	1	1
2377	133	"res_0"	"any"	0	0	0	0
2378	133	"arg_1"	"any"	0	0	1	1
2379	134	"res_0"	"any"	0	0	0	0
2380	134	"arg_1"	"any"	0	0	1	1
2381	134	"arg_2"	"int"	32	0	1	2
2382	135	"res_0"	"any"	0	0	0	0
2383	135	"arg_1"	"any"	0	0	1	1
2384	135	"arg_2"	"int"	32	0	1	2
2385	136	"res_0"	"any"	0	0	0	0
2386	136	"arg_1"	"any"	0	0	1	1
2387	136	"arg_2"	"oid"	63	0	1	2
2388	136	"arg_3"	"oid"	63	0	1	3
2389	137	"res_0"	"any"	0	0	0	0
2390	137	"arg_1"	"any"	0	0	1	1
2391	137	"arg_2"	"oid"	63	0	1	2
2392	137	"arg_3"	"oid"	63	0	1	3
2393	138	"res_0"	"any"	0	0	0	0
2394	138	"arg_1"	"any"	0	0	1	1
2395	138	"arg_2"	"int"	32	0	1	2
2396	138	"arg_3"	"oid"	63	0	1	3
2397	138	"arg_4"	"oid"	63	0	1	4
2398	139	"res_0"	"any"	0	0	0	0
2399	139	"arg_1"	"any"	0	0	1	1
2400	139	"arg_2"	"int"	32	0	1	2
2401	139	"arg_3"	"oid"	63	0	1	3
2402	139	"arg_4"	"oid"	63	0	1	4
2403	140	"res_0"	"boolean"	1	0	0	0
2404	140	"arg_1"	"boolean"	1	0	1	1
2405	140	"arg_2"	"boolean"	1	0	1	2
2406	141	"res_0"	"boolean"	1	0	0	0
2407	141	"arg_1"	"boolean"	1	0	1	1
2408	141	"arg_2"	"boolean"	1	0	1	2
2409	142	"res_0"	"boolean"	1	0	0	0
2410	142	"arg_1"	"boolean"	1	0	1	1
2411	142	"arg_2"	"boolean"	1	0	1	2
2412	143	"res_0"	"boolean"	1	0	0	0
2413	143	"arg_1"	"boolean"	1	0	1	1
2414	144	"res_0"	"oid"	63	0	0	0
2415	144	"arg_1"	"oid"	63	0	1	1
2416	144	"arg_2"	"oid"	63	0	1	2
2417	145	"res_0"	"oid"	63	0	0	0
2418	145	"arg_1"	"oid"	63	0	1	1
2419	145	"arg_2"	"oid"	63	0	1	2
2420	146	"res_0"	"oid"	63	0	0	0
2421	146	"arg_1"	"oid"	63	0	1	1
2422	146	"arg_2"	"oid"	63	0	1	2
2423	147	"res_0"	"oid"	63	0	0	0
2424	147	"arg_1"	"oid"	63	0	1	1
2425	147	"arg_2"	"oid"	63	0	1	2
2426	148	"res_0"	"oid"	63	0	0	0
2427	148	"arg_1"	"oid"	63	0	1	1
2428	148	"arg_2"	"oid"	63	0	1	2
2429	149	"res_0"	"oid"	63	0	0	0
2430	149	"arg_1"	"oid"	63	0	1	1
2431	149	"arg_2"	"oid"	63	0	1	2
2432	150	"res_0"	"oid"	63	0	0	0
2433	150	"arg_1"	"oid"	63	0	1	1
2434	150	"arg_2"	"oid"	63	0	1	2
2435	151	"res_0"	"oid"	63	0	0	0
2436	151	"arg_1"	"oid"	63	0	1	1
2437	152	"res_0"	"oid"	63	0	0	0
2438	152	"arg_1"	"oid"	63	0	1	1
2439	152	"arg_2"	"int"	32	0	1	2
2440	153	"res_0"	"oid"	63	0	0	0
2441	153	"arg_1"	"oid"	63	0	1	1
2442	153	"arg_2"	"int"	32	0	1	2
2443	154	"res_0"	"oid"	63	0	0	0
2444	154	"arg_1"	"oid"	63	0	1	1
2445	155	"res_0"	"oid"	63	0	0	0
2446	155	"arg_1"	"oid"	63	0	1	1
2447	156	"res_0"	"tinyint"	8	0	0	0
2448	156	"arg_1"	"oid"	63	0	1	1
2449	157	"res_0"	"oid"	63	0	0	0
2450	157	"arg_1"	"oid"	63	0	1	1
2451	157	"arg_2"	"oid"	63	0	1	2
2452	158	"res_0"	"oid"	63	0	0	0
2453	158	"arg_1"	"oid"	63	0	1	1
2454	158	"arg_2"	"oid"	63	0	1	2
2455	159	"res_0"	"month_interval"	32	0	0	0
2456	159	"arg_1"	"month_interval"	32	0	1	1
2457	159	"arg_2"	"oid"	63	0	1	2
2458	160	"res_0"	"month_interval"	32	0	0	0
2459	160	"arg_1"	"month_interval"	32	0	1	1
2460	160	"arg_2"	"oid"	63	0	1	2
2461	161	"res_0"	"month_interval"	32	0	0	0
2462	161	"arg_1"	"month_interval"	32	0	1	1
2463	161	"arg_2"	"oid"	63	0	1	2
2464	162	"res_0"	"month_interval"	32	0	0	0
2465	162	"arg_1"	"month_interval"	32	0	1	1
2466	162	"arg_2"	"oid"	63	0	1	2
2467	163	"res_0"	"sec_interval"	19	0	0	0
2468	163	"arg_1"	"sec_interval"	19	0	1	1
2469	163	"arg_2"	"oid"	63	0	1	2
2470	164	"res_0"	"sec_interval"	19	0	0	0
2471	164	"arg_1"	"sec_interval"	19	0	1	1
2472	164	"arg_2"	"oid"	63	0	1	2
2473	165	"res_0"	"sec_interval"	19	0	0	0
2474	165	"arg_1"	"sec_interval"	19	0	1	1
2475	165	"arg_2"	"oid"	63	0	1	2
2476	166	"res_0"	"sec_interval"	19	0	0	0
2477	166	"arg_1"	"sec_interval"	19	0	1	1
2478	166	"arg_2"	"oid"	63	0	1	2
2479	167	"res_0"	"tinyint"	8	0	0	0
2480	167	"arg_1"	"tinyint"	8	0	1	1
2481	167	"arg_2"	"tinyint"	8	0	1	2
2482	168	"res_0"	"tinyint"	8	0	0	0
2483	168	"arg_1"	"tinyint"	8	0	1	1
2484	168	"arg_2"	"tinyint"	8	0	1	2
2485	169	"res_0"	"tinyint"	8	0	0	0
2486	169	"arg_1"	"tinyint"	8	0	1	1
2487	169	"arg_2"	"tinyint"	8	0	1	2
2488	170	"res_0"	"tinyint"	8	0	0	0
2489	170	"arg_1"	"tinyint"	8	0	1	1
2490	170	"arg_2"	"tinyint"	8	0	1	2
2491	171	"res_0"	"tinyint"	8	0	0	0
2492	171	"arg_1"	"tinyint"	8	0	1	1
2493	171	"arg_2"	"tinyint"	8	0	1	2
2494	172	"res_0"	"tinyint"	8	0	0	0
2495	172	"arg_1"	"tinyint"	8	0	1	1
2496	172	"arg_2"	"tinyint"	8	0	1	2
2497	173	"res_0"	"tinyint"	8	0	0	0
2498	173	"arg_1"	"tinyint"	8	0	1	1
2499	173	"arg_2"	"tinyint"	8	0	1	2
2500	174	"res_0"	"tinyint"	8	0	0	0
2501	174	"arg_1"	"tinyint"	8	0	1	1
2502	175	"res_0"	"tinyint"	8	0	0	0
2503	175	"arg_1"	"tinyint"	8	0	1	1
2504	175	"arg_2"	"int"	32	0	1	2
2505	176	"res_0"	"tinyint"	8	0	0	0
2506	176	"arg_1"	"tinyint"	8	0	1	1
2507	176	"arg_2"	"int"	32	0	1	2
2508	177	"res_0"	"tinyint"	8	0	0	0
2509	177	"arg_1"	"tinyint"	8	0	1	1
2510	178	"res_0"	"tinyint"	8	0	0	0
2511	178	"arg_1"	"tinyint"	8	0	1	1
2512	179	"res_0"	"tinyint"	8	0	0	0
2513	179	"arg_1"	"tinyint"	8	0	1	1
2514	180	"res_0"	"tinyint"	8	0	0	0
2515	180	"arg_1"	"tinyint"	8	0	1	1
2516	180	"arg_2"	"tinyint"	8	0	1	2
2517	181	"res_0"	"tinyint"	8	0	0	0
2518	181	"arg_1"	"tinyint"	8	0	1	1
2519	181	"arg_2"	"tinyint"	8	0	1	2
2520	182	"res_0"	"month_interval"	32	0	0	0
2521	182	"arg_1"	"month_interval"	32	0	1	1
2522	182	"arg_2"	"tinyint"	8	0	1	2
2523	183	"res_0"	"month_interval"	32	0	0	0
2524	183	"arg_1"	"month_interval"	32	0	1	1
2525	183	"arg_2"	"tinyint"	8	0	1	2
2526	184	"res_0"	"month_interval"	32	0	0	0
2527	184	"arg_1"	"month_interval"	32	0	1	1
2528	184	"arg_2"	"tinyint"	8	0	1	2
2529	185	"res_0"	"month_interval"	32	0	0	0
2530	185	"arg_1"	"month_interval"	32	0	1	1
2531	185	"arg_2"	"tinyint"	8	0	1	2
2532	186	"res_0"	"sec_interval"	19	0	0	0
2533	186	"arg_1"	"sec_interval"	19	0	1	1
2534	186	"arg_2"	"tinyint"	8	0	1	2
2535	187	"res_0"	"sec_interval"	19	0	0	0
2536	187	"arg_1"	"sec_interval"	19	0	1	1
2537	187	"arg_2"	"tinyint"	8	0	1	2
2538	188	"res_0"	"sec_interval"	19	0	0	0
2539	188	"arg_1"	"sec_interval"	19	0	1	1
2540	188	"arg_2"	"tinyint"	8	0	1	2
2541	189	"res_0"	"sec_interval"	19	0	0	0
2542	189	"arg_1"	"sec_interval"	19	0	1	1
2543	189	"arg_2"	"tinyint"	8	0	1	2
2544	190	"res_0"	"smallint"	16	0	0	0
2545	190	"arg_1"	"smallint"	16	0	1	1
2546	190	"arg_2"	"smallint"	16	0	1	2
2547	191	"res_0"	"smallint"	16	0	0	0
2548	191	"arg_1"	"smallint"	16	0	1	1
2549	191	"arg_2"	"smallint"	16	0	1	2
2550	192	"res_0"	"smallint"	16	0	0	0
2551	192	"arg_1"	"smallint"	16	0	1	1
2552	192	"arg_2"	"smallint"	16	0	1	2
2553	193	"res_0"	"smallint"	16	0	0	0
2554	193	"arg_1"	"smallint"	16	0	1	1
2555	193	"arg_2"	"smallint"	16	0	1	2
2556	194	"res_0"	"smallint"	16	0	0	0
2557	194	"arg_1"	"smallint"	16	0	1	1
2558	194	"arg_2"	"smallint"	16	0	1	2
2559	195	"res_0"	"smallint"	16	0	0	0
2560	195	"arg_1"	"smallint"	16	0	1	1
2561	195	"arg_2"	"smallint"	16	0	1	2
2562	196	"res_0"	"smallint"	16	0	0	0
2563	196	"arg_1"	"smallint"	16	0	1	1
2564	196	"arg_2"	"smallint"	16	0	1	2
2565	197	"res_0"	"smallint"	16	0	0	0
2566	197	"arg_1"	"smallint"	16	0	1	1
2567	198	"res_0"	"smallint"	16	0	0	0
2568	198	"arg_1"	"smallint"	16	0	1	1
2569	198	"arg_2"	"int"	32	0	1	2
2570	199	"res_0"	"smallint"	16	0	0	0
2571	199	"arg_1"	"smallint"	16	0	1	1
2572	199	"arg_2"	"int"	32	0	1	2
2573	200	"res_0"	"smallint"	16	0	0	0
2574	200	"arg_1"	"smallint"	16	0	1	1
2575	201	"res_0"	"smallint"	16	0	0	0
2576	201	"arg_1"	"smallint"	16	0	1	1
2577	202	"res_0"	"tinyint"	8	0	0	0
2578	202	"arg_1"	"smallint"	16	0	1	1
2579	203	"res_0"	"smallint"	16	0	0	0
2580	203	"arg_1"	"smallint"	16	0	1	1
2581	203	"arg_2"	"smallint"	16	0	1	2
2582	204	"res_0"	"smallint"	16	0	0	0
2583	204	"arg_1"	"smallint"	16	0	1	1
2584	204	"arg_2"	"smallint"	16	0	1	2
2585	205	"res_0"	"month_interval"	32	0	0	0
2586	205	"arg_1"	"month_interval"	32	0	1	1
2587	205	"arg_2"	"smallint"	16	0	1	2
2588	206	"res_0"	"month_interval"	32	0	0	0
2589	206	"arg_1"	"month_interval"	32	0	1	1
2590	206	"arg_2"	"smallint"	16	0	1	2
2591	207	"res_0"	"month_interval"	32	0	0	0
2592	207	"arg_1"	"month_interval"	32	0	1	1
2593	207	"arg_2"	"smallint"	16	0	1	2
2594	208	"res_0"	"month_interval"	32	0	0	0
2595	208	"arg_1"	"month_interval"	32	0	1	1
2596	208	"arg_2"	"smallint"	16	0	1	2
2597	209	"res_0"	"sec_interval"	19	0	0	0
2598	209	"arg_1"	"sec_interval"	19	0	1	1
2599	209	"arg_2"	"smallint"	16	0	1	2
2600	210	"res_0"	"sec_interval"	19	0	0	0
2601	210	"arg_1"	"sec_interval"	19	0	1	1
2602	210	"arg_2"	"smallint"	16	0	1	2
2603	211	"res_0"	"sec_interval"	19	0	0	0
2604	211	"arg_1"	"sec_interval"	19	0	1	1
2605	211	"arg_2"	"smallint"	16	0	1	2
2606	212	"res_0"	"sec_interval"	19	0	0	0
2607	212	"arg_1"	"sec_interval"	19	0	1	1
2608	212	"arg_2"	"smallint"	16	0	1	2
2609	213	"res_0"	"int"	32	0	0	0
2610	213	"arg_1"	"int"	32	0	1	1
2611	213	"arg_2"	"int"	32	0	1	2
2612	214	"res_0"	"int"	32	0	0	0
2613	214	"arg_1"	"int"	32	0	1	1
2614	214	"arg_2"	"int"	32	0	1	2
2615	215	"res_0"	"int"	32	0	0	0
2616	215	"arg_1"	"int"	32	0	1	1
2617	215	"arg_2"	"int"	32	0	1	2
2618	216	"res_0"	"int"	32	0	0	0
2619	216	"arg_1"	"int"	32	0	1	1
2620	216	"arg_2"	"int"	32	0	1	2
2621	217	"res_0"	"int"	32	0	0	0
2622	217	"arg_1"	"int"	32	0	1	1
2623	217	"arg_2"	"int"	32	0	1	2
2624	218	"res_0"	"int"	32	0	0	0
2625	218	"arg_1"	"int"	32	0	1	1
2626	218	"arg_2"	"int"	32	0	1	2
2627	219	"res_0"	"int"	32	0	0	0
2628	219	"arg_1"	"int"	32	0	1	1
2629	219	"arg_2"	"int"	32	0	1	2
2630	220	"res_0"	"int"	32	0	0	0
2631	220	"arg_1"	"int"	32	0	1	1
2632	221	"res_0"	"int"	32	0	0	0
2633	221	"arg_1"	"int"	32	0	1	1
2634	221	"arg_2"	"int"	32	0	1	2
2635	222	"res_0"	"int"	32	0	0	0
2636	222	"arg_1"	"int"	32	0	1	1
2637	222	"arg_2"	"int"	32	0	1	2
2638	223	"res_0"	"int"	32	0	0	0
2639	223	"arg_1"	"int"	32	0	1	1
2640	224	"res_0"	"int"	32	0	0	0
2641	224	"arg_1"	"int"	32	0	1	1
2642	225	"res_0"	"tinyint"	8	0	0	0
2643	225	"arg_1"	"int"	32	0	1	1
2644	226	"res_0"	"int"	32	0	0	0
2645	226	"arg_1"	"int"	32	0	1	1
2646	226	"arg_2"	"int"	32	0	1	2
2647	227	"res_0"	"int"	32	0	0	0
2648	227	"arg_1"	"int"	32	0	1	1
2649	227	"arg_2"	"int"	32	0	1	2
2650	228	"res_0"	"month_interval"	32	0	0	0
2651	228	"arg_1"	"month_interval"	32	0	1	1
2652	228	"arg_2"	"int"	32	0	1	2
2653	229	"res_0"	"month_interval"	32	0	0	0
2654	229	"arg_1"	"month_interval"	32	0	1	1
2655	229	"arg_2"	"int"	32	0	1	2
2656	230	"res_0"	"month_interval"	32	0	0	0
2657	230	"arg_1"	"month_interval"	32	0	1	1
2658	230	"arg_2"	"int"	32	0	1	2
2659	231	"res_0"	"month_interval"	32	0	0	0
2660	231	"arg_1"	"month_interval"	32	0	1	1
2661	231	"arg_2"	"int"	32	0	1	2
2662	232	"res_0"	"sec_interval"	19	0	0	0
2663	232	"arg_1"	"sec_interval"	19	0	1	1
2664	232	"arg_2"	"int"	32	0	1	2
2665	233	"res_0"	"sec_interval"	19	0	0	0
2666	233	"arg_1"	"sec_interval"	19	0	1	1
2667	233	"arg_2"	"int"	32	0	1	2
2668	234	"res_0"	"sec_interval"	19	0	0	0
2669	234	"arg_1"	"sec_interval"	19	0	1	1
2670	234	"arg_2"	"int"	32	0	1	2
2671	235	"res_0"	"sec_interval"	19	0	0	0
2672	235	"arg_1"	"sec_interval"	19	0	1	1
2673	235	"arg_2"	"int"	32	0	1	2
2674	236	"res_0"	"bigint"	64	0	0	0
2675	236	"arg_1"	"bigint"	64	0	1	1
2676	236	"arg_2"	"bigint"	64	0	1	2
2677	237	"res_0"	"bigint"	64	0	0	0
2678	237	"arg_1"	"bigint"	64	0	1	1
2679	237	"arg_2"	"bigint"	64	0	1	2
2680	238	"res_0"	"bigint"	64	0	0	0
2681	238	"arg_1"	"bigint"	64	0	1	1
2682	238	"arg_2"	"bigint"	64	0	1	2
2683	239	"res_0"	"bigint"	64	0	0	0
2684	239	"arg_1"	"bigint"	64	0	1	1
2685	239	"arg_2"	"bigint"	64	0	1	2
2686	240	"res_0"	"bigint"	64	0	0	0
2687	240	"arg_1"	"bigint"	64	0	1	1
2688	240	"arg_2"	"bigint"	64	0	1	2
2689	241	"res_0"	"bigint"	64	0	0	0
2690	241	"arg_1"	"bigint"	64	0	1	1
2691	241	"arg_2"	"bigint"	64	0	1	2
2692	242	"res_0"	"bigint"	64	0	0	0
2693	242	"arg_1"	"bigint"	64	0	1	1
2694	242	"arg_2"	"bigint"	64	0	1	2
2695	243	"res_0"	"bigint"	64	0	0	0
2696	243	"arg_1"	"bigint"	64	0	1	1
2697	244	"res_0"	"bigint"	64	0	0	0
2698	244	"arg_1"	"bigint"	64	0	1	1
2699	244	"arg_2"	"int"	32	0	1	2
2700	245	"res_0"	"bigint"	64	0	0	0
2701	245	"arg_1"	"bigint"	64	0	1	1
2702	245	"arg_2"	"int"	32	0	1	2
2703	246	"res_0"	"bigint"	64	0	0	0
2704	246	"arg_1"	"bigint"	64	0	1	1
2705	247	"res_0"	"bigint"	64	0	0	0
2706	247	"arg_1"	"bigint"	64	0	1	1
2707	248	"res_0"	"tinyint"	8	0	0	0
2708	248	"arg_1"	"bigint"	64	0	1	1
2709	249	"res_0"	"bigint"	64	0	0	0
2710	249	"arg_1"	"bigint"	64	0	1	1
2711	249	"arg_2"	"bigint"	64	0	1	2
2712	250	"res_0"	"bigint"	64	0	0	0
2713	250	"arg_1"	"bigint"	64	0	1	1
2714	250	"arg_2"	"bigint"	64	0	1	2
2715	251	"res_0"	"month_interval"	32	0	0	0
2716	251	"arg_1"	"month_interval"	32	0	1	1
2717	251	"arg_2"	"bigint"	64	0	1	2
2718	252	"res_0"	"month_interval"	32	0	0	0
2719	252	"arg_1"	"month_interval"	32	0	1	1
2720	252	"arg_2"	"bigint"	64	0	1	2
2721	253	"res_0"	"month_interval"	32	0	0	0
2722	253	"arg_1"	"month_interval"	32	0	1	1
2723	253	"arg_2"	"bigint"	64	0	1	2
2724	254	"res_0"	"month_interval"	32	0	0	0
2725	254	"arg_1"	"month_interval"	32	0	1	1
2726	254	"arg_2"	"bigint"	64	0	1	2
2727	255	"res_0"	"sec_interval"	19	0	0	0
2728	255	"arg_1"	"sec_interval"	19	0	1	1
2729	255	"arg_2"	"bigint"	64	0	1	2
2730	256	"res_0"	"sec_interval"	19	0	0	0
2731	256	"arg_1"	"sec_interval"	19	0	1	1
2732	256	"arg_2"	"bigint"	64	0	1	2
2733	257	"res_0"	"sec_interval"	19	0	0	0
2734	257	"arg_1"	"sec_interval"	19	0	1	1
2735	257	"arg_2"	"bigint"	64	0	1	2
2736	258	"res_0"	"sec_interval"	19	0	0	0
2737	258	"arg_1"	"sec_interval"	19	0	1	1
2738	258	"arg_2"	"bigint"	64	0	1	2
2739	259	"res_0"	"wrd"	64	0	0	0
2740	259	"arg_1"	"wrd"	64	0	1	1
2741	259	"arg_2"	"wrd"	64	0	1	2
2742	260	"res_0"	"wrd"	64	0	0	0
2743	260	"arg_1"	"wrd"	64	0	1	1
2744	260	"arg_2"	"wrd"	64	0	1	2
2745	261	"res_0"	"wrd"	64	0	0	0
2746	261	"arg_1"	"wrd"	64	0	1	1
2747	261	"arg_2"	"wrd"	64	0	1	2
2748	262	"res_0"	"wrd"	64	0	0	0
2749	262	"arg_1"	"wrd"	64	0	1	1
2750	262	"arg_2"	"wrd"	64	0	1	2
2751	263	"res_0"	"wrd"	64	0	0	0
2752	263	"arg_1"	"wrd"	64	0	1	1
2753	263	"arg_2"	"wrd"	64	0	1	2
2754	264	"res_0"	"wrd"	64	0	0	0
2755	264	"arg_1"	"wrd"	64	0	1	1
2756	264	"arg_2"	"wrd"	64	0	1	2
2757	265	"res_0"	"wrd"	64	0	0	0
2758	265	"arg_1"	"wrd"	64	0	1	1
2759	265	"arg_2"	"wrd"	64	0	1	2
2760	266	"res_0"	"wrd"	64	0	0	0
2761	266	"arg_1"	"wrd"	64	0	1	1
2762	267	"res_0"	"wrd"	64	0	0	0
2763	267	"arg_1"	"wrd"	64	0	1	1
2764	267	"arg_2"	"int"	32	0	1	2
2765	268	"res_0"	"wrd"	64	0	0	0
2766	268	"arg_1"	"wrd"	64	0	1	1
2767	268	"arg_2"	"int"	32	0	1	2
2768	269	"res_0"	"wrd"	64	0	0	0
2769	269	"arg_1"	"wrd"	64	0	1	1
2770	270	"res_0"	"wrd"	64	0	0	0
2771	270	"arg_1"	"wrd"	64	0	1	1
2772	271	"res_0"	"tinyint"	8	0	0	0
2773	271	"arg_1"	"wrd"	64	0	1	1
2774	272	"res_0"	"wrd"	64	0	0	0
2775	272	"arg_1"	"wrd"	64	0	1	1
2776	272	"arg_2"	"wrd"	64	0	1	2
2777	273	"res_0"	"wrd"	64	0	0	0
2778	273	"arg_1"	"wrd"	64	0	1	1
2779	273	"arg_2"	"wrd"	64	0	1	2
2780	274	"res_0"	"month_interval"	32	0	0	0
2781	274	"arg_1"	"month_interval"	32	0	1	1
2782	274	"arg_2"	"wrd"	64	0	1	2
2783	275	"res_0"	"month_interval"	32	0	0	0
2784	275	"arg_1"	"month_interval"	32	0	1	1
2785	275	"arg_2"	"wrd"	64	0	1	2
2786	276	"res_0"	"month_interval"	32	0	0	0
2787	276	"arg_1"	"month_interval"	32	0	1	1
2788	276	"arg_2"	"wrd"	64	0	1	2
2789	277	"res_0"	"month_interval"	32	0	0	0
2790	277	"arg_1"	"month_interval"	32	0	1	1
2791	277	"arg_2"	"wrd"	64	0	1	2
2792	278	"res_0"	"sec_interval"	19	0	0	0
2793	278	"arg_1"	"sec_interval"	19	0	1	1
2794	278	"arg_2"	"wrd"	64	0	1	2
2795	279	"res_0"	"sec_interval"	19	0	0	0
2796	279	"arg_1"	"sec_interval"	19	0	1	1
2797	279	"arg_2"	"wrd"	64	0	1	2
2798	280	"res_0"	"sec_interval"	19	0	0	0
2799	280	"arg_1"	"sec_interval"	19	0	1	1
2800	280	"arg_2"	"wrd"	64	0	1	2
2801	281	"res_0"	"sec_interval"	19	0	0	0
2802	281	"arg_1"	"sec_interval"	19	0	1	1
2803	281	"arg_2"	"wrd"	64	0	1	2
2804	282	"res_0"	"decimal"	2	0	0	0
2805	282	"arg_1"	"decimal"	2	0	1	1
2806	282	"arg_2"	"decimal"	2	0	1	2
2807	283	"res_0"	"decimal"	2	0	0	0
2808	283	"arg_1"	"decimal"	2	0	1	1
2809	283	"arg_2"	"decimal"	2	0	1	2
2810	284	"res_0"	"decimal"	2	0	0	0
2811	284	"arg_1"	"decimal"	2	0	1	1
2812	284	"arg_2"	"decimal"	2	0	1	2
2813	285	"res_0"	"decimal"	2	0	0	0
2814	285	"arg_1"	"decimal"	2	0	1	1
2815	285	"arg_2"	"decimal"	2	0	1	2
2816	286	"res_0"	"decimal"	2	0	0	0
2817	286	"arg_1"	"decimal"	2	0	1	1
2818	286	"arg_2"	"decimal"	2	0	1	2
2819	287	"res_0"	"decimal"	2	0	0	0
2820	287	"arg_1"	"decimal"	2	0	1	1
2821	287	"arg_2"	"decimal"	2	0	1	2
2822	288	"res_0"	"decimal"	2	0	0	0
2823	288	"arg_1"	"decimal"	2	0	1	1
2824	288	"arg_2"	"decimal"	2	0	1	2
2825	289	"res_0"	"decimal"	2	0	0	0
2826	289	"arg_1"	"decimal"	2	0	1	1
2827	290	"res_0"	"decimal"	2	0	0	0
2828	290	"arg_1"	"decimal"	2	0	1	1
2829	290	"arg_2"	"int"	32	0	1	2
2830	291	"res_0"	"decimal"	2	0	0	0
2831	291	"arg_1"	"decimal"	2	0	1	1
2832	291	"arg_2"	"int"	32	0	1	2
2833	292	"res_0"	"decimal"	2	0	0	0
2834	292	"arg_1"	"decimal"	2	0	1	1
2835	293	"res_0"	"decimal"	2	0	0	0
2836	293	"arg_1"	"decimal"	2	0	1	1
2837	294	"res_0"	"tinyint"	8	0	0	0
2838	294	"arg_1"	"decimal"	2	0	1	1
2839	295	"res_0"	"decimal"	2	0	0	0
2840	295	"arg_1"	"decimal"	2	0	1	1
2841	295	"arg_2"	"tinyint"	8	0	1	2
2842	296	"res_0"	"decimal"	2	0	0	0
2843	296	"arg_1"	"decimal"	2	0	1	1
2844	296	"arg_2"	"tinyint"	8	0	1	2
2845	297	"res_0"	"month_interval"	32	0	0	0
2846	297	"arg_1"	"month_interval"	32	0	1	1
2847	297	"arg_2"	"decimal"	2	0	1	2
2848	298	"res_0"	"month_interval"	32	0	0	0
2849	298	"arg_1"	"month_interval"	32	0	1	1
2850	298	"arg_2"	"decimal"	2	0	1	2
2851	299	"res_0"	"month_interval"	32	0	0	0
2852	299	"arg_1"	"month_interval"	32	0	1	1
2853	299	"arg_2"	"decimal"	2	0	1	2
2854	300	"res_0"	"month_interval"	32	0	0	0
2855	300	"arg_1"	"month_interval"	32	0	1	1
2856	300	"arg_2"	"decimal"	2	0	1	2
2857	301	"res_0"	"sec_interval"	19	0	0	0
2858	301	"arg_1"	"sec_interval"	19	0	1	1
2859	301	"arg_2"	"decimal"	2	0	1	2
2860	302	"res_0"	"sec_interval"	19	0	0	0
2861	302	"arg_1"	"sec_interval"	19	0	1	1
2862	302	"arg_2"	"decimal"	2	0	1	2
2863	303	"res_0"	"sec_interval"	19	0	0	0
2864	303	"arg_1"	"sec_interval"	19	0	1	1
2865	303	"arg_2"	"decimal"	2	0	1	2
2866	304	"res_0"	"sec_interval"	19	0	0	0
2867	304	"arg_1"	"sec_interval"	19	0	1	1
2868	304	"arg_2"	"decimal"	2	0	1	2
2869	305	"res_0"	"decimal"	4	0	0	0
2870	305	"arg_1"	"decimal"	4	0	1	1
2871	305	"arg_2"	"decimal"	4	0	1	2
2872	306	"res_0"	"decimal"	4	0	0	0
2873	306	"arg_1"	"decimal"	4	0	1	1
2874	306	"arg_2"	"decimal"	4	0	1	2
2875	307	"res_0"	"decimal"	4	0	0	0
2876	307	"arg_1"	"decimal"	4	0	1	1
2877	307	"arg_2"	"decimal"	4	0	1	2
2878	308	"res_0"	"decimal"	4	0	0	0
2879	308	"arg_1"	"decimal"	4	0	1	1
2880	308	"arg_2"	"decimal"	4	0	1	2
2881	309	"res_0"	"decimal"	4	0	0	0
2882	309	"arg_1"	"decimal"	4	0	1	1
2883	309	"arg_2"	"decimal"	4	0	1	2
2884	310	"res_0"	"decimal"	4	0	0	0
2885	310	"arg_1"	"decimal"	4	0	1	1
2886	310	"arg_2"	"decimal"	4	0	1	2
2887	311	"res_0"	"decimal"	4	0	0	0
2888	311	"arg_1"	"decimal"	4	0	1	1
2889	311	"arg_2"	"decimal"	4	0	1	2
2890	312	"res_0"	"decimal"	4	0	0	0
2891	312	"arg_1"	"decimal"	4	0	1	1
2892	313	"res_0"	"decimal"	4	0	0	0
2893	313	"arg_1"	"decimal"	4	0	1	1
2894	313	"arg_2"	"int"	32	0	1	2
2895	314	"res_0"	"decimal"	4	0	0	0
2896	314	"arg_1"	"decimal"	4	0	1	1
2897	314	"arg_2"	"int"	32	0	1	2
2898	315	"res_0"	"decimal"	4	0	0	0
2899	315	"arg_1"	"decimal"	4	0	1	1
2900	316	"res_0"	"decimal"	4	0	0	0
2901	316	"arg_1"	"decimal"	4	0	1	1
2902	317	"res_0"	"tinyint"	8	0	0	0
2903	317	"arg_1"	"decimal"	4	0	1	1
2904	318	"res_0"	"decimal"	4	0	0	0
2905	318	"arg_1"	"decimal"	4	0	1	1
2906	318	"arg_2"	"smallint"	16	0	1	2
2907	319	"res_0"	"decimal"	4	0	0	0
2908	319	"arg_1"	"decimal"	4	0	1	1
2909	319	"arg_2"	"smallint"	16	0	1	2
2910	320	"res_0"	"month_interval"	32	0	0	0
2911	320	"arg_1"	"month_interval"	32	0	1	1
2912	320	"arg_2"	"decimal"	4	0	1	2
2913	321	"res_0"	"month_interval"	32	0	0	0
2914	321	"arg_1"	"month_interval"	32	0	1	1
2915	321	"arg_2"	"decimal"	4	0	1	2
2916	322	"res_0"	"month_interval"	32	0	0	0
2917	322	"arg_1"	"month_interval"	32	0	1	1
2918	322	"arg_2"	"decimal"	4	0	1	2
2919	323	"res_0"	"month_interval"	32	0	0	0
2920	323	"arg_1"	"month_interval"	32	0	1	1
2921	323	"arg_2"	"decimal"	4	0	1	2
2922	324	"res_0"	"sec_interval"	19	0	0	0
2923	324	"arg_1"	"sec_interval"	19	0	1	1
2924	324	"arg_2"	"decimal"	4	0	1	2
2925	325	"res_0"	"sec_interval"	19	0	0	0
2926	325	"arg_1"	"sec_interval"	19	0	1	1
2927	325	"arg_2"	"decimal"	4	0	1	2
2928	326	"res_0"	"sec_interval"	19	0	0	0
2929	326	"arg_1"	"sec_interval"	19	0	1	1
2930	326	"arg_2"	"decimal"	4	0	1	2
2931	327	"res_0"	"sec_interval"	19	0	0	0
2932	327	"arg_1"	"sec_interval"	19	0	1	1
2933	327	"arg_2"	"decimal"	4	0	1	2
2934	328	"res_0"	"decimal"	9	0	0	0
2935	328	"arg_1"	"decimal"	9	0	1	1
2936	328	"arg_2"	"decimal"	9	0	1	2
2937	329	"res_0"	"decimal"	9	0	0	0
2938	329	"arg_1"	"decimal"	9	0	1	1
2939	329	"arg_2"	"decimal"	9	0	1	2
2940	330	"res_0"	"decimal"	9	0	0	0
2941	330	"arg_1"	"decimal"	9	0	1	1
2942	330	"arg_2"	"decimal"	9	0	1	2
2943	331	"res_0"	"decimal"	9	0	0	0
2944	331	"arg_1"	"decimal"	9	0	1	1
2945	331	"arg_2"	"decimal"	9	0	1	2
2946	332	"res_0"	"decimal"	9	0	0	0
2947	332	"arg_1"	"decimal"	9	0	1	1
2948	332	"arg_2"	"decimal"	9	0	1	2
2949	333	"res_0"	"decimal"	9	0	0	0
2950	333	"arg_1"	"decimal"	9	0	1	1
2951	333	"arg_2"	"decimal"	9	0	1	2
2952	334	"res_0"	"decimal"	9	0	0	0
2953	334	"arg_1"	"decimal"	9	0	1	1
2954	334	"arg_2"	"decimal"	9	0	1	2
2955	335	"res_0"	"decimal"	9	0	0	0
2956	335	"arg_1"	"decimal"	9	0	1	1
2957	336	"res_0"	"decimal"	9	0	0	0
2958	336	"arg_1"	"decimal"	9	0	1	1
2959	336	"arg_2"	"int"	32	0	1	2
2960	337	"res_0"	"decimal"	9	0	0	0
2961	337	"arg_1"	"decimal"	9	0	1	1
2962	337	"arg_2"	"int"	32	0	1	2
2963	338	"res_0"	"decimal"	9	0	0	0
2964	338	"arg_1"	"decimal"	9	0	1	1
2965	339	"res_0"	"decimal"	9	0	0	0
2966	339	"arg_1"	"decimal"	9	0	1	1
2967	340	"res_0"	"tinyint"	8	0	0	0
2968	340	"arg_1"	"decimal"	9	0	1	1
2969	341	"res_0"	"decimal"	9	0	0	0
2970	341	"arg_1"	"decimal"	9	0	1	1
2971	341	"arg_2"	"int"	32	0	1	2
2972	342	"res_0"	"decimal"	9	0	0	0
2973	342	"arg_1"	"decimal"	9	0	1	1
2974	342	"arg_2"	"int"	32	0	1	2
2975	343	"res_0"	"month_interval"	32	0	0	0
2976	343	"arg_1"	"month_interval"	32	0	1	1
2977	343	"arg_2"	"decimal"	9	0	1	2
2978	344	"res_0"	"month_interval"	32	0	0	0
2979	344	"arg_1"	"month_interval"	32	0	1	1
2980	344	"arg_2"	"decimal"	9	0	1	2
2981	345	"res_0"	"month_interval"	32	0	0	0
2982	345	"arg_1"	"month_interval"	32	0	1	1
2983	345	"arg_2"	"decimal"	9	0	1	2
2984	346	"res_0"	"month_interval"	32	0	0	0
2985	346	"arg_1"	"month_interval"	32	0	1	1
2986	346	"arg_2"	"decimal"	9	0	1	2
2987	347	"res_0"	"sec_interval"	19	0	0	0
2988	347	"arg_1"	"sec_interval"	19	0	1	1
2989	347	"arg_2"	"decimal"	9	0	1	2
2990	348	"res_0"	"sec_interval"	19	0	0	0
2991	348	"arg_1"	"sec_interval"	19	0	1	1
2992	348	"arg_2"	"decimal"	9	0	1	2
2993	349	"res_0"	"sec_interval"	19	0	0	0
2994	349	"arg_1"	"sec_interval"	19	0	1	1
2995	349	"arg_2"	"decimal"	9	0	1	2
2996	350	"res_0"	"sec_interval"	19	0	0	0
2997	350	"arg_1"	"sec_interval"	19	0	1	1
2998	350	"arg_2"	"decimal"	9	0	1	2
2999	351	"res_0"	"decimal"	19	0	0	0
3000	351	"arg_1"	"decimal"	19	0	1	1
3001	351	"arg_2"	"decimal"	19	0	1	2
3002	352	"res_0"	"decimal"	19	0	0	0
3003	352	"arg_1"	"decimal"	19	0	1	1
3004	352	"arg_2"	"decimal"	19	0	1	2
3005	353	"res_0"	"decimal"	19	0	0	0
3006	353	"arg_1"	"decimal"	19	0	1	1
3007	353	"arg_2"	"decimal"	19	0	1	2
3008	354	"res_0"	"decimal"	19	0	0	0
3009	354	"arg_1"	"decimal"	19	0	1	1
3010	354	"arg_2"	"decimal"	19	0	1	2
3011	355	"res_0"	"decimal"	19	0	0	0
3012	355	"arg_1"	"decimal"	19	0	1	1
3013	355	"arg_2"	"decimal"	19	0	1	2
3014	356	"res_0"	"decimal"	19	0	0	0
3015	356	"arg_1"	"decimal"	19	0	1	1
3016	356	"arg_2"	"decimal"	19	0	1	2
3017	357	"res_0"	"decimal"	19	0	0	0
3018	357	"arg_1"	"decimal"	19	0	1	1
3019	357	"arg_2"	"decimal"	19	0	1	2
3020	358	"res_0"	"decimal"	19	0	0	0
3021	358	"arg_1"	"decimal"	19	0	1	1
3022	359	"res_0"	"decimal"	19	0	0	0
3023	359	"arg_1"	"decimal"	19	0	1	1
3024	359	"arg_2"	"int"	32	0	1	2
3025	360	"res_0"	"decimal"	19	0	0	0
3026	360	"arg_1"	"decimal"	19	0	1	1
3027	360	"arg_2"	"int"	32	0	1	2
3028	361	"res_0"	"decimal"	19	0	0	0
3029	361	"arg_1"	"decimal"	19	0	1	1
3030	362	"res_0"	"decimal"	19	0	0	0
3031	362	"arg_1"	"decimal"	19	0	1	1
3032	363	"res_0"	"tinyint"	8	0	0	0
3033	363	"arg_1"	"decimal"	19	0	1	1
3034	364	"res_0"	"decimal"	19	0	0	0
3035	364	"arg_1"	"decimal"	19	0	1	1
3036	364	"arg_2"	"bigint"	64	0	1	2
3037	365	"res_0"	"decimal"	19	0	0	0
3038	365	"arg_1"	"decimal"	19	0	1	1
3039	365	"arg_2"	"bigint"	64	0	1	2
3040	366	"res_0"	"month_interval"	32	0	0	0
3041	366	"arg_1"	"month_interval"	32	0	1	1
3042	366	"arg_2"	"decimal"	19	0	1	2
3043	367	"res_0"	"month_interval"	32	0	0	0
3044	367	"arg_1"	"month_interval"	32	0	1	1
3045	367	"arg_2"	"decimal"	19	0	1	2
3046	368	"res_0"	"month_interval"	32	0	0	0
3047	368	"arg_1"	"month_interval"	32	0	1	1
3048	368	"arg_2"	"decimal"	19	0	1	2
3049	369	"res_0"	"month_interval"	32	0	0	0
3050	369	"arg_1"	"month_interval"	32	0	1	1
3051	369	"arg_2"	"decimal"	19	0	1	2
3052	370	"res_0"	"sec_interval"	19	0	0	0
3053	370	"arg_1"	"sec_interval"	19	0	1	1
3054	370	"arg_2"	"decimal"	19	0	1	2
3055	371	"res_0"	"sec_interval"	19	0	0	0
3056	371	"arg_1"	"sec_interval"	19	0	1	1
3057	371	"arg_2"	"decimal"	19	0	1	2
3058	372	"res_0"	"sec_interval"	19	0	0	0
3059	372	"arg_1"	"sec_interval"	19	0	1	1
3060	372	"arg_2"	"decimal"	19	0	1	2
3061	373	"res_0"	"sec_interval"	19	0	0	0
3062	373	"arg_1"	"sec_interval"	19	0	1	1
3063	373	"arg_2"	"decimal"	19	0	1	2
3064	374	"res_0"	"real"	24	0	0	0
3065	374	"arg_1"	"real"	24	0	1	1
3066	374	"arg_2"	"real"	24	0	1	2
3067	375	"res_0"	"real"	24	0	0	0
3068	375	"arg_1"	"real"	24	0	1	1
3069	375	"arg_2"	"real"	24	0	1	2
3070	376	"res_0"	"real"	24	0	0	0
3071	376	"arg_1"	"real"	24	0	1	1
3072	376	"arg_2"	"real"	24	0	1	2
3073	377	"res_0"	"real"	24	0	0	0
3074	377	"arg_1"	"real"	24	0	1	1
3075	377	"arg_2"	"real"	24	0	1	2
3076	378	"res_0"	"real"	24	0	0	0
3077	378	"arg_1"	"real"	24	0	1	1
3078	379	"res_0"	"real"	24	0	0	0
3079	379	"arg_1"	"real"	24	0	1	1
3080	380	"res_0"	"tinyint"	8	0	0	0
3081	380	"arg_1"	"real"	24	0	1	1
3082	381	"res_0"	"real"	24	0	0	0
3083	381	"arg_1"	"real"	24	0	1	1
3084	381	"arg_2"	"real"	24	0	1	2
3085	382	"res_0"	"real"	24	0	0	0
3086	382	"arg_1"	"real"	24	0	1	1
3087	382	"arg_2"	"real"	24	0	1	2
3088	383	"res_0"	"month_interval"	32	0	0	0
3089	383	"arg_1"	"month_interval"	32	0	1	1
3090	383	"arg_2"	"real"	24	0	1	2
3091	384	"res_0"	"month_interval"	32	0	0	0
3092	384	"arg_1"	"month_interval"	32	0	1	1
3093	384	"arg_2"	"real"	24	0	1	2
3094	385	"res_0"	"month_interval"	32	0	0	0
3095	385	"arg_1"	"month_interval"	32	0	1	1
3096	385	"arg_2"	"real"	24	0	1	2
3097	386	"res_0"	"month_interval"	32	0	0	0
3098	386	"arg_1"	"month_interval"	32	0	1	1
3099	386	"arg_2"	"real"	24	0	1	2
3100	387	"res_0"	"sec_interval"	19	0	0	0
3101	387	"arg_1"	"sec_interval"	19	0	1	1
3102	387	"arg_2"	"real"	24	0	1	2
3103	388	"res_0"	"sec_interval"	19	0	0	0
3104	388	"arg_1"	"sec_interval"	19	0	1	1
3105	388	"arg_2"	"real"	24	0	1	2
3106	389	"res_0"	"sec_interval"	19	0	0	0
3107	389	"arg_1"	"sec_interval"	19	0	1	1
3108	389	"arg_2"	"real"	24	0	1	2
3109	390	"res_0"	"sec_interval"	19	0	0	0
3110	390	"arg_1"	"sec_interval"	19	0	1	1
3111	390	"arg_2"	"real"	24	0	1	2
3112	391	"res_0"	"double"	53	0	0	0
3113	391	"arg_1"	"double"	53	0	1	1
3114	391	"arg_2"	"double"	53	0	1	2
3115	392	"res_0"	"double"	53	0	0	0
3116	392	"arg_1"	"double"	53	0	1	1
3117	392	"arg_2"	"double"	53	0	1	2
3118	393	"res_0"	"double"	53	0	0	0
3119	393	"arg_1"	"double"	53	0	1	1
3120	393	"arg_2"	"double"	53	0	1	2
3121	394	"res_0"	"double"	53	0	0	0
3122	394	"arg_1"	"double"	53	0	1	1
3123	394	"arg_2"	"double"	53	0	1	2
3124	395	"res_0"	"double"	53	0	0	0
3125	395	"arg_1"	"double"	53	0	1	1
3126	396	"res_0"	"double"	53	0	0	0
3127	396	"arg_1"	"double"	53	0	1	1
3128	397	"res_0"	"tinyint"	8	0	0	0
3129	397	"arg_1"	"double"	53	0	1	1
3130	398	"res_0"	"double"	53	0	0	0
3131	398	"arg_1"	"double"	53	0	1	1
3132	398	"arg_2"	"double"	53	0	1	2
3133	399	"res_0"	"double"	53	0	0	0
3134	399	"arg_1"	"double"	53	0	1	1
3135	399	"arg_2"	"double"	53	0	1	2
3136	400	"res_0"	"month_interval"	32	0	0	0
3137	400	"arg_1"	"month_interval"	32	0	1	1
3138	400	"arg_2"	"double"	53	0	1	2
3139	401	"res_0"	"month_interval"	32	0	0	0
3140	401	"arg_1"	"month_interval"	32	0	1	1
3141	401	"arg_2"	"double"	53	0	1	2
3142	402	"res_0"	"month_interval"	32	0	0	0
3143	402	"arg_1"	"month_interval"	32	0	1	1
3144	402	"arg_2"	"double"	53	0	1	2
3145	403	"res_0"	"month_interval"	32	0	0	0
3146	403	"arg_1"	"month_interval"	32	0	1	1
3147	403	"arg_2"	"double"	53	0	1	2
3148	404	"res_0"	"sec_interval"	19	0	0	0
3149	404	"arg_1"	"sec_interval"	19	0	1	1
3150	404	"arg_2"	"double"	53	0	1	2
3151	405	"res_0"	"sec_interval"	19	0	0	0
3152	405	"arg_1"	"sec_interval"	19	0	1	1
3153	405	"arg_2"	"double"	53	0	1	2
3154	406	"res_0"	"sec_interval"	19	0	0	0
3155	406	"arg_1"	"sec_interval"	19	0	1	1
3156	406	"arg_2"	"double"	53	0	1	2
3157	407	"res_0"	"sec_interval"	19	0	0	0
3158	407	"arg_1"	"sec_interval"	19	0	1	1
3159	407	"arg_2"	"double"	53	0	1	2
3160	408	"res_0"	"month_interval"	32	0	0	0
3161	408	"arg_1"	"month_interval"	32	0	1	1
3162	408	"arg_2"	"month_interval"	32	0	1	2
3163	409	"res_0"	"month_interval"	32	0	0	0
3164	409	"arg_1"	"month_interval"	32	0	1	1
3165	409	"arg_2"	"month_interval"	32	0	1	2
3166	410	"res_0"	"month_interval"	32	0	0	0
3167	410	"arg_1"	"month_interval"	32	0	1	1
3168	410	"arg_2"	"month_interval"	32	0	1	2
3169	411	"res_0"	"month_interval"	32	0	0	0
3170	411	"arg_1"	"month_interval"	32	0	1	1
3171	411	"arg_2"	"month_interval"	32	0	1	2
3172	412	"res_0"	"month_interval"	32	0	0	0
3173	412	"arg_1"	"month_interval"	32	0	1	1
3174	413	"res_0"	"month_interval"	32	0	0	0
3175	413	"arg_1"	"month_interval"	32	0	1	1
3176	414	"res_0"	"tinyint"	8	0	0	0
3177	414	"arg_1"	"month_interval"	32	0	1	1
3178	415	"res_0"	"month_interval"	32	0	0	0
3179	415	"arg_1"	"month_interval"	32	0	1	1
3180	415	"arg_2"	"int"	32	0	1	2
3181	416	"res_0"	"month_interval"	32	0	0	0
3182	416	"arg_1"	"month_interval"	32	0	1	1
3183	416	"arg_2"	"int"	32	0	1	2
3184	417	"res_0"	"sec_interval"	19	0	0	0
3185	417	"arg_1"	"sec_interval"	19	0	1	1
3186	417	"arg_2"	"sec_interval"	19	0	1	2
3187	418	"res_0"	"sec_interval"	19	0	0	0
3188	418	"arg_1"	"sec_interval"	19	0	1	1
3189	418	"arg_2"	"sec_interval"	19	0	1	2
3190	419	"res_0"	"sec_interval"	19	0	0	0
3191	419	"arg_1"	"sec_interval"	19	0	1	1
3192	419	"arg_2"	"sec_interval"	19	0	1	2
3193	420	"res_0"	"sec_interval"	19	0	0	0
3194	420	"arg_1"	"sec_interval"	19	0	1	1
3195	420	"arg_2"	"sec_interval"	19	0	1	2
3196	421	"res_0"	"sec_interval"	19	0	0	0
3197	421	"arg_1"	"sec_interval"	19	0	1	1
3198	422	"res_0"	"sec_interval"	19	0	0	0
3199	422	"arg_1"	"sec_interval"	19	0	1	1
3200	423	"res_0"	"tinyint"	8	0	0	0
3201	423	"arg_1"	"sec_interval"	19	0	1	1
3202	424	"res_0"	"sec_interval"	19	0	0	0
3203	424	"arg_1"	"sec_interval"	19	0	1	1
3204	424	"arg_2"	"bigint"	64	0	1	2
3205	425	"res_0"	"sec_interval"	19	0	0	0
3206	425	"arg_1"	"sec_interval"	19	0	1	1
3207	425	"arg_2"	"bigint"	64	0	1	2
3208	426	"res_0"	"decimal"	4	0	0	0
3209	426	"arg_1"	"decimal"	4	0	1	1
3210	426	"arg_2"	"tinyint"	8	0	1	2
3211	427	"res_0"	"decimal"	4	0	0	0
3212	427	"arg_1"	"tinyint"	8	0	1	1
3213	427	"arg_2"	"decimal"	4	0	1	2
3214	428	"res_0"	"decimal"	4	0	0	0
3215	428	"arg_1"	"decimal"	4	0	1	1
3216	428	"arg_2"	"decimal"	2	0	1	2
3217	429	"res_0"	"decimal"	4	0	0	0
3218	429	"arg_1"	"decimal"	2	0	1	1
3219	429	"arg_2"	"decimal"	4	0	1	2
3220	430	"res_0"	"decimal"	9	0	0	0
3221	430	"arg_1"	"decimal"	9	0	1	1
3222	430	"arg_2"	"tinyint"	8	0	1	2
3223	431	"res_0"	"decimal"	9	0	0	0
3224	431	"arg_1"	"tinyint"	8	0	1	1
3225	431	"arg_2"	"decimal"	9	0	1	2
3226	432	"res_0"	"decimal"	9	0	0	0
3227	432	"arg_1"	"decimal"	9	0	1	1
3228	432	"arg_2"	"smallint"	16	0	1	2
3229	433	"res_0"	"decimal"	9	0	0	0
3230	433	"arg_1"	"smallint"	16	0	1	1
3231	433	"arg_2"	"decimal"	9	0	1	2
3232	434	"res_0"	"decimal"	9	0	0	0
3233	434	"arg_1"	"decimal"	9	0	1	1
3234	434	"arg_2"	"decimal"	2	0	1	2
3235	435	"res_0"	"decimal"	9	0	0	0
3236	435	"arg_1"	"decimal"	2	0	1	1
3237	435	"arg_2"	"decimal"	9	0	1	2
3238	436	"res_0"	"decimal"	9	0	0	0
3239	436	"arg_1"	"decimal"	9	0	1	1
3240	436	"arg_2"	"decimal"	4	0	1	2
3241	437	"res_0"	"decimal"	9	0	0	0
3242	437	"arg_1"	"decimal"	4	0	1	1
3243	437	"arg_2"	"decimal"	9	0	1	2
3244	438	"res_0"	"decimal"	19	0	0	0
3245	438	"arg_1"	"decimal"	19	0	1	1
3246	438	"arg_2"	"tinyint"	8	0	1	2
3247	439	"res_0"	"decimal"	19	0	0	0
3248	439	"arg_1"	"tinyint"	8	0	1	1
3249	439	"arg_2"	"decimal"	19	0	1	2
3250	440	"res_0"	"decimal"	19	0	0	0
3251	440	"arg_1"	"decimal"	19	0	1	1
3252	440	"arg_2"	"smallint"	16	0	1	2
3253	441	"res_0"	"decimal"	19	0	0	0
3254	441	"arg_1"	"smallint"	16	0	1	1
3255	441	"arg_2"	"decimal"	19	0	1	2
3256	442	"res_0"	"decimal"	19	0	0	0
3257	442	"arg_1"	"decimal"	19	0	1	1
3258	442	"arg_2"	"int"	32	0	1	2
3259	443	"res_0"	"decimal"	19	0	0	0
3260	443	"arg_1"	"int"	32	0	1	1
3261	443	"arg_2"	"decimal"	19	0	1	2
3262	444	"res_0"	"decimal"	19	0	0	0
3263	444	"arg_1"	"decimal"	19	0	1	1
3264	444	"arg_2"	"wrd"	64	0	1	2
3265	445	"res_0"	"decimal"	19	0	0	0
3266	445	"arg_1"	"wrd"	64	0	1	1
3267	445	"arg_2"	"decimal"	19	0	1	2
3268	446	"res_0"	"decimal"	19	0	0	0
3269	446	"arg_1"	"decimal"	19	0	1	1
3270	446	"arg_2"	"decimal"	2	0	1	2
3271	447	"res_0"	"decimal"	19	0	0	0
3272	447	"arg_1"	"decimal"	2	0	1	1
3273	447	"arg_2"	"decimal"	19	0	1	2
3274	448	"res_0"	"decimal"	19	0	0	0
3275	448	"arg_1"	"decimal"	19	0	1	1
3276	448	"arg_2"	"decimal"	4	0	1	2
3277	449	"res_0"	"decimal"	19	0	0	0
3278	449	"arg_1"	"decimal"	4	0	1	1
3279	449	"arg_2"	"decimal"	19	0	1	2
3280	450	"res_0"	"decimal"	19	0	0	0
3281	450	"arg_1"	"decimal"	19	0	1	1
3282	450	"arg_2"	"decimal"	9	0	1	2
3283	451	"res_0"	"decimal"	19	0	0	0
3284	451	"arg_1"	"decimal"	9	0	1	1
3285	451	"arg_2"	"decimal"	19	0	1	2
3286	452	"res_0"	"decimal"	2	0	0	0
3287	452	"arg_1"	"decimal"	2	0	1	1
3288	452	"arg_2"	"tinyint"	8	0	1	2
3289	453	"res_0"	"decimal"	4	0	0	0
3290	453	"arg_1"	"decimal"	4	0	1	1
3291	453	"arg_2"	"tinyint"	8	0	1	2
3292	454	"res_0"	"decimal"	9	0	0	0
3293	454	"arg_1"	"decimal"	9	0	1	1
3294	454	"arg_2"	"tinyint"	8	0	1	2
3295	455	"res_0"	"decimal"	19	0	0	0
3296	455	"arg_1"	"decimal"	19	0	1	1
3297	455	"arg_2"	"tinyint"	8	0	1	2
3298	456	"res_0"	"real"	24	0	0	0
3299	456	"arg_1"	"real"	24	0	1	1
3300	456	"arg_2"	"tinyint"	8	0	1	2
3301	457	"res_0"	"double"	53	0	0	0
3302	457	"arg_1"	"double"	53	0	1	1
3303	457	"arg_2"	"tinyint"	8	0	1	2
3304	458	"res_0"	"oid"	63	0	0	0
3305	458	"arg_1"	"oid"	63	0	1	1
3306	458	"arg_2"	"oid"	63	0	1	2
3307	459	"res_0"	"oid"	63	0	0	0
3308	459	"arg_1"	"tinyint"	8	0	1	1
3309	459	"arg_2"	"oid"	63	0	1	2
3310	460	"res_0"	"oid"	63	0	0	0
3311	460	"arg_1"	"smallint"	16	0	1	1
3312	460	"arg_2"	"oid"	63	0	1	2
3313	461	"res_0"	"oid"	63	0	0	0
3314	461	"arg_1"	"int"	32	0	1	1
3315	461	"arg_2"	"oid"	63	0	1	2
3316	462	"res_0"	"oid"	63	0	0	0
3317	462	"arg_1"	"bigint"	64	0	1	1
3318	462	"arg_2"	"oid"	63	0	1	2
3319	463	"res_0"	"oid"	63	0	0	0
3320	463	"arg_1"	"wrd"	64	0	1	1
3321	463	"arg_2"	"oid"	63	0	1	2
3322	464	"res_0"	"oid"	63	0	0	0
3323	464	"arg_1"	"decimal"	2	0	1	1
3324	464	"arg_2"	"oid"	63	0	1	2
3325	465	"res_0"	"oid"	63	0	0	0
3326	465	"arg_1"	"decimal"	4	0	1	1
3327	465	"arg_2"	"oid"	63	0	1	2
3328	466	"res_0"	"oid"	63	0	0	0
3329	466	"arg_1"	"decimal"	9	0	1	1
3330	466	"arg_2"	"oid"	63	0	1	2
3331	467	"res_0"	"oid"	63	0	0	0
3332	467	"arg_1"	"decimal"	19	0	1	1
3333	467	"arg_2"	"oid"	63	0	1	2
3334	468	"res_0"	"oid"	63	0	0	0
3335	468	"arg_1"	"real"	24	0	1	1
3336	468	"arg_2"	"oid"	63	0	1	2
3337	469	"res_0"	"oid"	63	0	0	0
3338	469	"arg_1"	"double"	53	0	1	1
3339	469	"arg_2"	"oid"	63	0	1	2
3340	470	"res_0"	"oid"	63	0	0	0
3341	470	"arg_1"	"month_interval"	32	0	1	1
3342	470	"arg_2"	"oid"	63	0	1	2
3343	471	"res_0"	"oid"	63	0	0	0
3344	471	"arg_1"	"sec_interval"	19	0	1	1
3345	471	"arg_2"	"oid"	63	0	1	2
3346	472	"res_0"	"oid"	63	0	0	0
3347	472	"arg_1"	"time"	7	0	1	1
3348	472	"arg_2"	"oid"	63	0	1	2
3349	473	"res_0"	"oid"	63	0	0	0
3350	473	"arg_1"	"timetz"	7	0	1	1
3351	473	"arg_2"	"oid"	63	0	1	2
3352	474	"res_0"	"oid"	63	0	0	0
3353	474	"arg_1"	"date"	0	0	1	1
3354	474	"arg_2"	"oid"	63	0	1	2
3355	475	"res_0"	"oid"	63	0	0	0
3356	475	"arg_1"	"timestamp"	7	0	1	1
3357	475	"arg_2"	"oid"	63	0	1	2
3358	476	"res_0"	"oid"	63	0	0	0
3359	476	"arg_1"	"timestamptz"	7	0	1	1
3360	476	"arg_2"	"oid"	63	0	1	2
3361	477	"res_0"	"oid"	63	0	0	0
3362	477	"arg_1"	"blob"	0	0	1	1
3363	477	"arg_2"	"oid"	63	0	1	2
3364	478	"res_0"	"oid"	63	0	0	0
3365	478	"arg_1"	"geometry"	0	0	1	1
3366	478	"arg_2"	"oid"	63	0	1	2
3367	479	"res_0"	"oid"	63	0	0	0
3368	479	"arg_1"	"geometrya"	0	0	1	1
3369	479	"arg_2"	"oid"	63	0	1	2
3370	480	"res_0"	"oid"	63	0	0	0
3371	480	"arg_1"	"mbr"	0	0	1	1
3372	480	"arg_2"	"oid"	63	0	1	2
3373	481	"res_0"	"tinyint"	8	0	0	0
3374	481	"arg_1"	"oid"	63	0	1	1
3375	481	"arg_2"	"tinyint"	8	0	1	2
3376	482	"res_0"	"tinyint"	8	0	0	0
3377	482	"arg_1"	"tinyint"	8	0	1	1
3378	482	"arg_2"	"tinyint"	8	0	1	2
3379	483	"res_0"	"tinyint"	8	0	0	0
3380	483	"arg_1"	"smallint"	16	0	1	1
3381	483	"arg_2"	"tinyint"	8	0	1	2
3382	484	"res_0"	"tinyint"	8	0	0	0
3383	484	"arg_1"	"int"	32	0	1	1
3384	484	"arg_2"	"tinyint"	8	0	1	2
3385	485	"res_0"	"tinyint"	8	0	0	0
3386	485	"arg_1"	"bigint"	64	0	1	1
3387	485	"arg_2"	"tinyint"	8	0	1	2
3388	486	"res_0"	"tinyint"	8	0	0	0
3389	486	"arg_1"	"wrd"	64	0	1	1
3390	486	"arg_2"	"tinyint"	8	0	1	2
3391	487	"res_0"	"tinyint"	8	0	0	0
3392	487	"arg_1"	"decimal"	2	0	1	1
3393	487	"arg_2"	"tinyint"	8	0	1	2
3394	488	"res_0"	"tinyint"	8	0	0	0
3395	488	"arg_1"	"decimal"	4	0	1	1
3396	488	"arg_2"	"tinyint"	8	0	1	2
3397	489	"res_0"	"tinyint"	8	0	0	0
3398	489	"arg_1"	"decimal"	9	0	1	1
3399	489	"arg_2"	"tinyint"	8	0	1	2
3400	490	"res_0"	"tinyint"	8	0	0	0
3401	490	"arg_1"	"decimal"	19	0	1	1
3402	490	"arg_2"	"tinyint"	8	0	1	2
3403	491	"res_0"	"tinyint"	8	0	0	0
3404	491	"arg_1"	"real"	24	0	1	1
3405	491	"arg_2"	"tinyint"	8	0	1	2
3406	492	"res_0"	"tinyint"	8	0	0	0
3407	492	"arg_1"	"double"	53	0	1	1
3408	492	"arg_2"	"tinyint"	8	0	1	2
3409	493	"res_0"	"tinyint"	8	0	0	0
3410	493	"arg_1"	"month_interval"	32	0	1	1
3411	493	"arg_2"	"tinyint"	8	0	1	2
3412	494	"res_0"	"tinyint"	8	0	0	0
3413	494	"arg_1"	"sec_interval"	19	0	1	1
3414	494	"arg_2"	"tinyint"	8	0	1	2
3415	495	"res_0"	"tinyint"	8	0	0	0
3416	495	"arg_1"	"time"	7	0	1	1
3417	495	"arg_2"	"tinyint"	8	0	1	2
3418	496	"res_0"	"tinyint"	8	0	0	0
3419	496	"arg_1"	"timetz"	7	0	1	1
3420	496	"arg_2"	"tinyint"	8	0	1	2
3421	497	"res_0"	"tinyint"	8	0	0	0
3422	497	"arg_1"	"date"	0	0	1	1
3423	497	"arg_2"	"tinyint"	8	0	1	2
3424	498	"res_0"	"tinyint"	8	0	0	0
3425	498	"arg_1"	"timestamp"	7	0	1	1
3426	498	"arg_2"	"tinyint"	8	0	1	2
3427	499	"res_0"	"tinyint"	8	0	0	0
3428	499	"arg_1"	"timestamptz"	7	0	1	1
3429	499	"arg_2"	"tinyint"	8	0	1	2
3430	500	"res_0"	"tinyint"	8	0	0	0
3431	500	"arg_1"	"blob"	0	0	1	1
3432	500	"arg_2"	"tinyint"	8	0	1	2
3433	501	"res_0"	"tinyint"	8	0	0	0
3434	501	"arg_1"	"geometry"	0	0	1	1
3435	501	"arg_2"	"tinyint"	8	0	1	2
3436	502	"res_0"	"tinyint"	8	0	0	0
3437	502	"arg_1"	"geometrya"	0	0	1	1
3438	502	"arg_2"	"tinyint"	8	0	1	2
3439	503	"res_0"	"tinyint"	8	0	0	0
3440	503	"arg_1"	"mbr"	0	0	1	1
3441	503	"arg_2"	"tinyint"	8	0	1	2
3442	504	"res_0"	"smallint"	16	0	0	0
3443	504	"arg_1"	"oid"	63	0	1	1
3444	504	"arg_2"	"smallint"	16	0	1	2
3445	505	"res_0"	"smallint"	16	0	0	0
3446	505	"arg_1"	"tinyint"	8	0	1	1
3447	505	"arg_2"	"smallint"	16	0	1	2
3448	506	"res_0"	"smallint"	16	0	0	0
3449	506	"arg_1"	"smallint"	16	0	1	1
3450	506	"arg_2"	"smallint"	16	0	1	2
3451	507	"res_0"	"smallint"	16	0	0	0
3452	507	"arg_1"	"int"	32	0	1	1
3453	507	"arg_2"	"smallint"	16	0	1	2
3454	508	"res_0"	"smallint"	16	0	0	0
3455	508	"arg_1"	"bigint"	64	0	1	1
3456	508	"arg_2"	"smallint"	16	0	1	2
3457	509	"res_0"	"smallint"	16	0	0	0
3458	509	"arg_1"	"wrd"	64	0	1	1
3459	509	"arg_2"	"smallint"	16	0	1	2
3460	510	"res_0"	"smallint"	16	0	0	0
3461	510	"arg_1"	"decimal"	2	0	1	1
3462	510	"arg_2"	"smallint"	16	0	1	2
3463	511	"res_0"	"smallint"	16	0	0	0
3464	511	"arg_1"	"decimal"	4	0	1	1
3465	511	"arg_2"	"smallint"	16	0	1	2
3466	512	"res_0"	"smallint"	16	0	0	0
3467	512	"arg_1"	"decimal"	9	0	1	1
3468	512	"arg_2"	"smallint"	16	0	1	2
3469	513	"res_0"	"smallint"	16	0	0	0
3470	513	"arg_1"	"decimal"	19	0	1	1
3471	513	"arg_2"	"smallint"	16	0	1	2
3472	514	"res_0"	"smallint"	16	0	0	0
3473	514	"arg_1"	"real"	24	0	1	1
3474	514	"arg_2"	"smallint"	16	0	1	2
3475	515	"res_0"	"smallint"	16	0	0	0
3476	515	"arg_1"	"double"	53	0	1	1
3477	515	"arg_2"	"smallint"	16	0	1	2
3478	516	"res_0"	"smallint"	16	0	0	0
3479	516	"arg_1"	"month_interval"	32	0	1	1
3480	516	"arg_2"	"smallint"	16	0	1	2
3481	517	"res_0"	"smallint"	16	0	0	0
3482	517	"arg_1"	"sec_interval"	19	0	1	1
3483	517	"arg_2"	"smallint"	16	0	1	2
3484	518	"res_0"	"smallint"	16	0	0	0
3485	518	"arg_1"	"time"	7	0	1	1
3486	518	"arg_2"	"smallint"	16	0	1	2
3487	519	"res_0"	"smallint"	16	0	0	0
3488	519	"arg_1"	"timetz"	7	0	1	1
3489	519	"arg_2"	"smallint"	16	0	1	2
3490	520	"res_0"	"smallint"	16	0	0	0
3491	520	"arg_1"	"date"	0	0	1	1
3492	520	"arg_2"	"smallint"	16	0	1	2
3493	521	"res_0"	"smallint"	16	0	0	0
3494	521	"arg_1"	"timestamp"	7	0	1	1
3495	521	"arg_2"	"smallint"	16	0	1	2
3496	522	"res_0"	"smallint"	16	0	0	0
3497	522	"arg_1"	"timestamptz"	7	0	1	1
3498	522	"arg_2"	"smallint"	16	0	1	2
3499	523	"res_0"	"smallint"	16	0	0	0
3500	523	"arg_1"	"blob"	0	0	1	1
3501	523	"arg_2"	"smallint"	16	0	1	2
3502	524	"res_0"	"smallint"	16	0	0	0
3503	524	"arg_1"	"geometry"	0	0	1	1
3504	524	"arg_2"	"smallint"	16	0	1	2
3505	525	"res_0"	"smallint"	16	0	0	0
3506	525	"arg_1"	"geometrya"	0	0	1	1
3507	525	"arg_2"	"smallint"	16	0	1	2
3508	526	"res_0"	"smallint"	16	0	0	0
3509	526	"arg_1"	"mbr"	0	0	1	1
3510	526	"arg_2"	"smallint"	16	0	1	2
3511	527	"res_0"	"int"	32	0	0	0
3512	527	"arg_1"	"oid"	63	0	1	1
3513	527	"arg_2"	"int"	32	0	1	2
3514	528	"res_0"	"int"	32	0	0	0
3515	528	"arg_1"	"tinyint"	8	0	1	1
3516	528	"arg_2"	"int"	32	0	1	2
3517	529	"res_0"	"int"	32	0	0	0
3518	529	"arg_1"	"smallint"	16	0	1	1
3519	529	"arg_2"	"int"	32	0	1	2
3520	530	"res_0"	"int"	32	0	0	0
3521	530	"arg_1"	"int"	32	0	1	1
3522	530	"arg_2"	"int"	32	0	1	2
3523	531	"res_0"	"int"	32	0	0	0
3524	531	"arg_1"	"bigint"	64	0	1	1
3525	531	"arg_2"	"int"	32	0	1	2
3526	532	"res_0"	"int"	32	0	0	0
3527	532	"arg_1"	"wrd"	64	0	1	1
3528	532	"arg_2"	"int"	32	0	1	2
3529	533	"res_0"	"int"	32	0	0	0
3530	533	"arg_1"	"decimal"	2	0	1	1
3531	533	"arg_2"	"int"	32	0	1	2
3532	534	"res_0"	"int"	32	0	0	0
3533	534	"arg_1"	"decimal"	4	0	1	1
3534	534	"arg_2"	"int"	32	0	1	2
3535	535	"res_0"	"int"	32	0	0	0
3536	535	"arg_1"	"decimal"	9	0	1	1
3537	535	"arg_2"	"int"	32	0	1	2
3538	536	"res_0"	"int"	32	0	0	0
3539	536	"arg_1"	"decimal"	19	0	1	1
3540	536	"arg_2"	"int"	32	0	1	2
3541	537	"res_0"	"int"	32	0	0	0
3542	537	"arg_1"	"real"	24	0	1	1
3543	537	"arg_2"	"int"	32	0	1	2
3544	538	"res_0"	"int"	32	0	0	0
3545	538	"arg_1"	"double"	53	0	1	1
3546	538	"arg_2"	"int"	32	0	1	2
3547	539	"res_0"	"int"	32	0	0	0
3548	539	"arg_1"	"month_interval"	32	0	1	1
3549	539	"arg_2"	"int"	32	0	1	2
3550	540	"res_0"	"int"	32	0	0	0
3551	540	"arg_1"	"sec_interval"	19	0	1	1
3552	540	"arg_2"	"int"	32	0	1	2
3553	541	"res_0"	"int"	32	0	0	0
3554	541	"arg_1"	"time"	7	0	1	1
3555	541	"arg_2"	"int"	32	0	1	2
3556	542	"res_0"	"int"	32	0	0	0
3557	542	"arg_1"	"timetz"	7	0	1	1
3558	542	"arg_2"	"int"	32	0	1	2
3559	543	"res_0"	"int"	32	0	0	0
3560	543	"arg_1"	"date"	0	0	1	1
3561	543	"arg_2"	"int"	32	0	1	2
3562	544	"res_0"	"int"	32	0	0	0
3563	544	"arg_1"	"timestamp"	7	0	1	1
3564	544	"arg_2"	"int"	32	0	1	2
3565	545	"res_0"	"int"	32	0	0	0
3566	545	"arg_1"	"timestamptz"	7	0	1	1
3567	545	"arg_2"	"int"	32	0	1	2
3568	546	"res_0"	"int"	32	0	0	0
3569	546	"arg_1"	"blob"	0	0	1	1
3570	546	"arg_2"	"int"	32	0	1	2
3571	547	"res_0"	"int"	32	0	0	0
3572	547	"arg_1"	"geometry"	0	0	1	1
3573	547	"arg_2"	"int"	32	0	1	2
3574	548	"res_0"	"int"	32	0	0	0
3575	548	"arg_1"	"geometrya"	0	0	1	1
3576	548	"arg_2"	"int"	32	0	1	2
3577	549	"res_0"	"int"	32	0	0	0
3578	549	"arg_1"	"mbr"	0	0	1	1
3579	549	"arg_2"	"int"	32	0	1	2
3580	550	"res_0"	"bigint"	64	0	0	0
3581	550	"arg_1"	"oid"	63	0	1	1
3582	550	"arg_2"	"bigint"	64	0	1	2
3583	551	"res_0"	"bigint"	64	0	0	0
3584	551	"arg_1"	"tinyint"	8	0	1	1
3585	551	"arg_2"	"bigint"	64	0	1	2
3586	552	"res_0"	"bigint"	64	0	0	0
3587	552	"arg_1"	"smallint"	16	0	1	1
3588	552	"arg_2"	"bigint"	64	0	1	2
3589	553	"res_0"	"bigint"	64	0	0	0
3590	553	"arg_1"	"int"	32	0	1	1
3591	553	"arg_2"	"bigint"	64	0	1	2
3592	554	"res_0"	"bigint"	64	0	0	0
3593	554	"arg_1"	"bigint"	64	0	1	1
3594	554	"arg_2"	"bigint"	64	0	1	2
3595	555	"res_0"	"bigint"	64	0	0	0
3596	555	"arg_1"	"wrd"	64	0	1	1
3597	555	"arg_2"	"bigint"	64	0	1	2
3598	556	"res_0"	"bigint"	64	0	0	0
3599	556	"arg_1"	"decimal"	2	0	1	1
3600	556	"arg_2"	"bigint"	64	0	1	2
3601	557	"res_0"	"bigint"	64	0	0	0
3602	557	"arg_1"	"decimal"	4	0	1	1
3603	557	"arg_2"	"bigint"	64	0	1	2
3604	558	"res_0"	"bigint"	64	0	0	0
3605	558	"arg_1"	"decimal"	9	0	1	1
3606	558	"arg_2"	"bigint"	64	0	1	2
3607	559	"res_0"	"bigint"	64	0	0	0
3608	559	"arg_1"	"decimal"	19	0	1	1
3609	559	"arg_2"	"bigint"	64	0	1	2
3610	560	"res_0"	"bigint"	64	0	0	0
3611	560	"arg_1"	"real"	24	0	1	1
3612	560	"arg_2"	"bigint"	64	0	1	2
3613	561	"res_0"	"bigint"	64	0	0	0
3614	561	"arg_1"	"double"	53	0	1	1
3615	561	"arg_2"	"bigint"	64	0	1	2
3616	562	"res_0"	"bigint"	64	0	0	0
3617	562	"arg_1"	"month_interval"	32	0	1	1
3618	562	"arg_2"	"bigint"	64	0	1	2
3619	563	"res_0"	"bigint"	64	0	0	0
3620	563	"arg_1"	"sec_interval"	19	0	1	1
3621	563	"arg_2"	"bigint"	64	0	1	2
3622	564	"res_0"	"bigint"	64	0	0	0
3623	564	"arg_1"	"time"	7	0	1	1
3624	564	"arg_2"	"bigint"	64	0	1	2
3625	565	"res_0"	"bigint"	64	0	0	0
3626	565	"arg_1"	"timetz"	7	0	1	1
3627	565	"arg_2"	"bigint"	64	0	1	2
3628	566	"res_0"	"bigint"	64	0	0	0
3629	566	"arg_1"	"date"	0	0	1	1
3630	566	"arg_2"	"bigint"	64	0	1	2
3631	567	"res_0"	"bigint"	64	0	0	0
3632	567	"arg_1"	"timestamp"	7	0	1	1
3633	567	"arg_2"	"bigint"	64	0	1	2
3634	568	"res_0"	"bigint"	64	0	0	0
3635	568	"arg_1"	"timestamptz"	7	0	1	1
3636	568	"arg_2"	"bigint"	64	0	1	2
3637	569	"res_0"	"bigint"	64	0	0	0
3638	569	"arg_1"	"blob"	0	0	1	1
3639	569	"arg_2"	"bigint"	64	0	1	2
3640	570	"res_0"	"bigint"	64	0	0	0
3641	570	"arg_1"	"geometry"	0	0	1	1
3642	570	"arg_2"	"bigint"	64	0	1	2
3643	571	"res_0"	"bigint"	64	0	0	0
3644	571	"arg_1"	"geometrya"	0	0	1	1
3645	571	"arg_2"	"bigint"	64	0	1	2
3646	572	"res_0"	"bigint"	64	0	0	0
3647	572	"arg_1"	"mbr"	0	0	1	1
3648	572	"arg_2"	"bigint"	64	0	1	2
3649	573	"res_0"	"wrd"	64	0	0	0
3650	573	"arg_1"	"oid"	63	0	1	1
3651	573	"arg_2"	"wrd"	64	0	1	2
3652	574	"res_0"	"wrd"	64	0	0	0
3653	574	"arg_1"	"tinyint"	8	0	1	1
3654	574	"arg_2"	"wrd"	64	0	1	2
3655	575	"res_0"	"wrd"	64	0	0	0
3656	575	"arg_1"	"smallint"	16	0	1	1
3657	575	"arg_2"	"wrd"	64	0	1	2
3658	576	"res_0"	"wrd"	64	0	0	0
3659	576	"arg_1"	"int"	32	0	1	1
3660	576	"arg_2"	"wrd"	64	0	1	2
3661	577	"res_0"	"wrd"	64	0	0	0
3662	577	"arg_1"	"bigint"	64	0	1	1
3663	577	"arg_2"	"wrd"	64	0	1	2
3664	578	"res_0"	"wrd"	64	0	0	0
3665	578	"arg_1"	"wrd"	64	0	1	1
3666	578	"arg_2"	"wrd"	64	0	1	2
3667	579	"res_0"	"wrd"	64	0	0	0
3668	579	"arg_1"	"decimal"	2	0	1	1
3669	579	"arg_2"	"wrd"	64	0	1	2
3670	580	"res_0"	"wrd"	64	0	0	0
3671	580	"arg_1"	"decimal"	4	0	1	1
3672	580	"arg_2"	"wrd"	64	0	1	2
3673	581	"res_0"	"wrd"	64	0	0	0
3674	581	"arg_1"	"decimal"	9	0	1	1
3675	581	"arg_2"	"wrd"	64	0	1	2
3676	582	"res_0"	"wrd"	64	0	0	0
3677	582	"arg_1"	"decimal"	19	0	1	1
3678	582	"arg_2"	"wrd"	64	0	1	2
3679	583	"res_0"	"wrd"	64	0	0	0
3680	583	"arg_1"	"real"	24	0	1	1
3681	583	"arg_2"	"wrd"	64	0	1	2
3682	584	"res_0"	"wrd"	64	0	0	0
3683	584	"arg_1"	"double"	53	0	1	1
3684	584	"arg_2"	"wrd"	64	0	1	2
3685	585	"res_0"	"wrd"	64	0	0	0
3686	585	"arg_1"	"month_interval"	32	0	1	1
3687	585	"arg_2"	"wrd"	64	0	1	2
3688	586	"res_0"	"wrd"	64	0	0	0
3689	586	"arg_1"	"sec_interval"	19	0	1	1
3690	586	"arg_2"	"wrd"	64	0	1	2
3691	587	"res_0"	"wrd"	64	0	0	0
3692	587	"arg_1"	"time"	7	0	1	1
3693	587	"arg_2"	"wrd"	64	0	1	2
3694	588	"res_0"	"wrd"	64	0	0	0
3695	588	"arg_1"	"timetz"	7	0	1	1
3696	588	"arg_2"	"wrd"	64	0	1	2
3697	589	"res_0"	"wrd"	64	0	0	0
3698	589	"arg_1"	"date"	0	0	1	1
3699	589	"arg_2"	"wrd"	64	0	1	2
3700	590	"res_0"	"wrd"	64	0	0	0
3701	590	"arg_1"	"timestamp"	7	0	1	1
3702	590	"arg_2"	"wrd"	64	0	1	2
3703	591	"res_0"	"wrd"	64	0	0	0
3704	591	"arg_1"	"timestamptz"	7	0	1	1
3705	591	"arg_2"	"wrd"	64	0	1	2
3706	592	"res_0"	"wrd"	64	0	0	0
3707	592	"arg_1"	"blob"	0	0	1	1
3708	592	"arg_2"	"wrd"	64	0	1	2
3709	593	"res_0"	"wrd"	64	0	0	0
3710	593	"arg_1"	"geometry"	0	0	1	1
3711	593	"arg_2"	"wrd"	64	0	1	2
3712	594	"res_0"	"wrd"	64	0	0	0
3713	594	"arg_1"	"geometrya"	0	0	1	1
3714	594	"arg_2"	"wrd"	64	0	1	2
3715	595	"res_0"	"wrd"	64	0	0	0
3716	595	"arg_1"	"mbr"	0	0	1	1
3717	595	"arg_2"	"wrd"	64	0	1	2
3718	596	"res_0"	"decimal"	2	0	0	0
3719	596	"arg_1"	"oid"	63	0	1	1
3720	596	"arg_2"	"decimal"	2	0	1	2
3721	597	"res_0"	"decimal"	2	0	0	0
3722	597	"arg_1"	"tinyint"	8	0	1	1
3723	597	"arg_2"	"decimal"	2	0	1	2
3724	598	"res_0"	"decimal"	2	0	0	0
3725	598	"arg_1"	"smallint"	16	0	1	1
3726	598	"arg_2"	"decimal"	2	0	1	2
3727	599	"res_0"	"decimal"	2	0	0	0
3728	599	"arg_1"	"int"	32	0	1	1
3729	599	"arg_2"	"decimal"	2	0	1	2
3730	600	"res_0"	"decimal"	2	0	0	0
3731	600	"arg_1"	"bigint"	64	0	1	1
3732	600	"arg_2"	"decimal"	2	0	1	2
3733	601	"res_0"	"decimal"	2	0	0	0
3734	601	"arg_1"	"wrd"	64	0	1	1
3735	601	"arg_2"	"decimal"	2	0	1	2
3736	602	"res_0"	"decimal"	2	0	0	0
3737	602	"arg_1"	"decimal"	2	0	1	1
3738	602	"arg_2"	"decimal"	2	0	1	2
3739	603	"res_0"	"decimal"	2	0	0	0
3740	603	"arg_1"	"decimal"	4	0	1	1
3741	603	"arg_2"	"decimal"	2	0	1	2
3742	604	"res_0"	"decimal"	2	0	0	0
3743	604	"arg_1"	"decimal"	9	0	1	1
3744	604	"arg_2"	"decimal"	2	0	1	2
3745	605	"res_0"	"decimal"	2	0	0	0
3746	605	"arg_1"	"decimal"	19	0	1	1
3747	605	"arg_2"	"decimal"	2	0	1	2
3748	606	"res_0"	"decimal"	2	0	0	0
3749	606	"arg_1"	"real"	24	0	1	1
3750	606	"arg_2"	"decimal"	2	0	1	2
3751	607	"res_0"	"decimal"	2	0	0	0
3752	607	"arg_1"	"double"	53	0	1	1
3753	607	"arg_2"	"decimal"	2	0	1	2
3754	608	"res_0"	"decimal"	2	0	0	0
3755	608	"arg_1"	"month_interval"	32	0	1	1
3756	608	"arg_2"	"decimal"	2	0	1	2
3757	609	"res_0"	"decimal"	2	0	0	0
3758	609	"arg_1"	"sec_interval"	19	0	1	1
3759	609	"arg_2"	"decimal"	2	0	1	2
3760	610	"res_0"	"decimal"	2	0	0	0
3761	610	"arg_1"	"time"	7	0	1	1
3762	610	"arg_2"	"decimal"	2	0	1	2
3763	611	"res_0"	"decimal"	2	0	0	0
3764	611	"arg_1"	"timetz"	7	0	1	1
3765	611	"arg_2"	"decimal"	2	0	1	2
3766	612	"res_0"	"decimal"	2	0	0	0
3767	612	"arg_1"	"date"	0	0	1	1
3768	612	"arg_2"	"decimal"	2	0	1	2
3769	613	"res_0"	"decimal"	2	0	0	0
3770	613	"arg_1"	"timestamp"	7	0	1	1
3771	613	"arg_2"	"decimal"	2	0	1	2
3772	614	"res_0"	"decimal"	2	0	0	0
3773	614	"arg_1"	"timestamptz"	7	0	1	1
3774	614	"arg_2"	"decimal"	2	0	1	2
3775	615	"res_0"	"decimal"	2	0	0	0
3776	615	"arg_1"	"blob"	0	0	1	1
3777	615	"arg_2"	"decimal"	2	0	1	2
3778	616	"res_0"	"decimal"	2	0	0	0
3779	616	"arg_1"	"geometry"	0	0	1	1
3780	616	"arg_2"	"decimal"	2	0	1	2
3781	617	"res_0"	"decimal"	2	0	0	0
3782	617	"arg_1"	"geometrya"	0	0	1	1
3783	617	"arg_2"	"decimal"	2	0	1	2
3784	618	"res_0"	"decimal"	2	0	0	0
3785	618	"arg_1"	"mbr"	0	0	1	1
3786	618	"arg_2"	"decimal"	2	0	1	2
3787	619	"res_0"	"decimal"	4	0	0	0
3788	619	"arg_1"	"oid"	63	0	1	1
3789	619	"arg_2"	"decimal"	4	0	1	2
3790	620	"res_0"	"decimal"	4	0	0	0
3791	620	"arg_1"	"tinyint"	8	0	1	1
3792	620	"arg_2"	"decimal"	4	0	1	2
3793	621	"res_0"	"decimal"	4	0	0	0
3794	621	"arg_1"	"smallint"	16	0	1	1
3795	621	"arg_2"	"decimal"	4	0	1	2
3796	622	"res_0"	"decimal"	4	0	0	0
3797	622	"arg_1"	"int"	32	0	1	1
3798	622	"arg_2"	"decimal"	4	0	1	2
3799	623	"res_0"	"decimal"	4	0	0	0
3800	623	"arg_1"	"bigint"	64	0	1	1
3801	623	"arg_2"	"decimal"	4	0	1	2
3802	624	"res_0"	"decimal"	4	0	0	0
3803	624	"arg_1"	"wrd"	64	0	1	1
3804	624	"arg_2"	"decimal"	4	0	1	2
3805	625	"res_0"	"decimal"	4	0	0	0
3806	625	"arg_1"	"decimal"	2	0	1	1
3807	625	"arg_2"	"decimal"	4	0	1	2
3808	626	"res_0"	"decimal"	4	0	0	0
3809	626	"arg_1"	"decimal"	4	0	1	1
3810	626	"arg_2"	"decimal"	4	0	1	2
3811	627	"res_0"	"decimal"	4	0	0	0
3812	627	"arg_1"	"decimal"	9	0	1	1
3813	627	"arg_2"	"decimal"	4	0	1	2
3814	628	"res_0"	"decimal"	4	0	0	0
3815	628	"arg_1"	"decimal"	19	0	1	1
3816	628	"arg_2"	"decimal"	4	0	1	2
3817	629	"res_0"	"decimal"	4	0	0	0
3818	629	"arg_1"	"real"	24	0	1	1
3819	629	"arg_2"	"decimal"	4	0	1	2
3820	630	"res_0"	"decimal"	4	0	0	0
3821	630	"arg_1"	"double"	53	0	1	1
3822	630	"arg_2"	"decimal"	4	0	1	2
3823	631	"res_0"	"decimal"	4	0	0	0
3824	631	"arg_1"	"month_interval"	32	0	1	1
3825	631	"arg_2"	"decimal"	4	0	1	2
3826	632	"res_0"	"decimal"	4	0	0	0
3827	632	"arg_1"	"sec_interval"	19	0	1	1
3828	632	"arg_2"	"decimal"	4	0	1	2
3829	633	"res_0"	"decimal"	4	0	0	0
3830	633	"arg_1"	"time"	7	0	1	1
3831	633	"arg_2"	"decimal"	4	0	1	2
3832	634	"res_0"	"decimal"	4	0	0	0
3833	634	"arg_1"	"timetz"	7	0	1	1
3834	634	"arg_2"	"decimal"	4	0	1	2
3835	635	"res_0"	"decimal"	4	0	0	0
3836	635	"arg_1"	"date"	0	0	1	1
3837	635	"arg_2"	"decimal"	4	0	1	2
3838	636	"res_0"	"decimal"	4	0	0	0
3839	636	"arg_1"	"timestamp"	7	0	1	1
3840	636	"arg_2"	"decimal"	4	0	1	2
3841	637	"res_0"	"decimal"	4	0	0	0
3842	637	"arg_1"	"timestamptz"	7	0	1	1
3843	637	"arg_2"	"decimal"	4	0	1	2
3844	638	"res_0"	"decimal"	4	0	0	0
3845	638	"arg_1"	"blob"	0	0	1	1
3846	638	"arg_2"	"decimal"	4	0	1	2
3847	639	"res_0"	"decimal"	4	0	0	0
3848	639	"arg_1"	"geometry"	0	0	1	1
3849	639	"arg_2"	"decimal"	4	0	1	2
3850	640	"res_0"	"decimal"	4	0	0	0
3851	640	"arg_1"	"geometrya"	0	0	1	1
3852	640	"arg_2"	"decimal"	4	0	1	2
3853	641	"res_0"	"decimal"	4	0	0	0
3854	641	"arg_1"	"mbr"	0	0	1	1
3855	641	"arg_2"	"decimal"	4	0	1	2
3856	642	"res_0"	"decimal"	9	0	0	0
3857	642	"arg_1"	"oid"	63	0	1	1
3858	642	"arg_2"	"decimal"	9	0	1	2
3859	643	"res_0"	"decimal"	9	0	0	0
3860	643	"arg_1"	"tinyint"	8	0	1	1
3861	643	"arg_2"	"decimal"	9	0	1	2
3862	644	"res_0"	"decimal"	9	0	0	0
3863	644	"arg_1"	"smallint"	16	0	1	1
3864	644	"arg_2"	"decimal"	9	0	1	2
3865	645	"res_0"	"decimal"	9	0	0	0
3866	645	"arg_1"	"int"	32	0	1	1
3867	645	"arg_2"	"decimal"	9	0	1	2
3868	646	"res_0"	"decimal"	9	0	0	0
3869	646	"arg_1"	"bigint"	64	0	1	1
3870	646	"arg_2"	"decimal"	9	0	1	2
3871	647	"res_0"	"decimal"	9	0	0	0
3872	647	"arg_1"	"wrd"	64	0	1	1
3873	647	"arg_2"	"decimal"	9	0	1	2
3874	648	"res_0"	"decimal"	9	0	0	0
3875	648	"arg_1"	"decimal"	2	0	1	1
3876	648	"arg_2"	"decimal"	9	0	1	2
3877	649	"res_0"	"decimal"	9	0	0	0
3878	649	"arg_1"	"decimal"	4	0	1	1
3879	649	"arg_2"	"decimal"	9	0	1	2
3880	650	"res_0"	"decimal"	9	0	0	0
3881	650	"arg_1"	"decimal"	9	0	1	1
3882	650	"arg_2"	"decimal"	9	0	1	2
3883	651	"res_0"	"decimal"	9	0	0	0
3884	651	"arg_1"	"decimal"	19	0	1	1
3885	651	"arg_2"	"decimal"	9	0	1	2
3886	652	"res_0"	"decimal"	9	0	0	0
3887	652	"arg_1"	"real"	24	0	1	1
3888	652	"arg_2"	"decimal"	9	0	1	2
3889	653	"res_0"	"decimal"	9	0	0	0
3890	653	"arg_1"	"double"	53	0	1	1
3891	653	"arg_2"	"decimal"	9	0	1	2
3892	654	"res_0"	"decimal"	9	0	0	0
3893	654	"arg_1"	"month_interval"	32	0	1	1
3894	654	"arg_2"	"decimal"	9	0	1	2
3895	655	"res_0"	"decimal"	9	0	0	0
3896	655	"arg_1"	"sec_interval"	19	0	1	1
3897	655	"arg_2"	"decimal"	9	0	1	2
3898	656	"res_0"	"decimal"	9	0	0	0
3899	656	"arg_1"	"time"	7	0	1	1
3900	656	"arg_2"	"decimal"	9	0	1	2
3901	657	"res_0"	"decimal"	9	0	0	0
3902	657	"arg_1"	"timetz"	7	0	1	1
3903	657	"arg_2"	"decimal"	9	0	1	2
3904	658	"res_0"	"decimal"	9	0	0	0
3905	658	"arg_1"	"date"	0	0	1	1
3906	658	"arg_2"	"decimal"	9	0	1	2
3907	659	"res_0"	"decimal"	9	0	0	0
3908	659	"arg_1"	"timestamp"	7	0	1	1
3909	659	"arg_2"	"decimal"	9	0	1	2
3910	660	"res_0"	"decimal"	9	0	0	0
3911	660	"arg_1"	"timestamptz"	7	0	1	1
3912	660	"arg_2"	"decimal"	9	0	1	2
3913	661	"res_0"	"decimal"	9	0	0	0
3914	661	"arg_1"	"blob"	0	0	1	1
3915	661	"arg_2"	"decimal"	9	0	1	2
3916	662	"res_0"	"decimal"	9	0	0	0
3917	662	"arg_1"	"geometry"	0	0	1	1
3918	662	"arg_2"	"decimal"	9	0	1	2
3919	663	"res_0"	"decimal"	9	0	0	0
3920	663	"arg_1"	"geometrya"	0	0	1	1
3921	663	"arg_2"	"decimal"	9	0	1	2
3922	664	"res_0"	"decimal"	9	0	0	0
3923	664	"arg_1"	"mbr"	0	0	1	1
3924	664	"arg_2"	"decimal"	9	0	1	2
3925	665	"res_0"	"decimal"	19	0	0	0
3926	665	"arg_1"	"oid"	63	0	1	1
3927	665	"arg_2"	"decimal"	19	0	1	2
3928	666	"res_0"	"decimal"	19	0	0	0
3929	666	"arg_1"	"tinyint"	8	0	1	1
3930	666	"arg_2"	"decimal"	19	0	1	2
3931	667	"res_0"	"decimal"	19	0	0	0
3932	667	"arg_1"	"smallint"	16	0	1	1
3933	667	"arg_2"	"decimal"	19	0	1	2
3934	668	"res_0"	"decimal"	19	0	0	0
3935	668	"arg_1"	"int"	32	0	1	1
3936	668	"arg_2"	"decimal"	19	0	1	2
3937	669	"res_0"	"decimal"	19	0	0	0
3938	669	"arg_1"	"bigint"	64	0	1	1
3939	669	"arg_2"	"decimal"	19	0	1	2
3940	670	"res_0"	"decimal"	19	0	0	0
3941	670	"arg_1"	"wrd"	64	0	1	1
3942	670	"arg_2"	"decimal"	19	0	1	2
3943	671	"res_0"	"decimal"	19	0	0	0
3944	671	"arg_1"	"decimal"	2	0	1	1
3945	671	"arg_2"	"decimal"	19	0	1	2
3946	672	"res_0"	"decimal"	19	0	0	0
3947	672	"arg_1"	"decimal"	4	0	1	1
3948	672	"arg_2"	"decimal"	19	0	1	2
3949	673	"res_0"	"decimal"	19	0	0	0
3950	673	"arg_1"	"decimal"	9	0	1	1
3951	673	"arg_2"	"decimal"	19	0	1	2
3952	674	"res_0"	"decimal"	19	0	0	0
3953	674	"arg_1"	"decimal"	19	0	1	1
3954	674	"arg_2"	"decimal"	19	0	1	2
3955	675	"res_0"	"decimal"	19	0	0	0
3956	675	"arg_1"	"real"	24	0	1	1
3957	675	"arg_2"	"decimal"	19	0	1	2
3958	676	"res_0"	"decimal"	19	0	0	0
3959	676	"arg_1"	"double"	53	0	1	1
3960	676	"arg_2"	"decimal"	19	0	1	2
3961	677	"res_0"	"decimal"	19	0	0	0
3962	677	"arg_1"	"month_interval"	32	0	1	1
3963	677	"arg_2"	"decimal"	19	0	1	2
3964	678	"res_0"	"decimal"	19	0	0	0
3965	678	"arg_1"	"sec_interval"	19	0	1	1
3966	678	"arg_2"	"decimal"	19	0	1	2
3967	679	"res_0"	"decimal"	19	0	0	0
3968	679	"arg_1"	"time"	7	0	1	1
3969	679	"arg_2"	"decimal"	19	0	1	2
3970	680	"res_0"	"decimal"	19	0	0	0
3971	680	"arg_1"	"timetz"	7	0	1	1
3972	680	"arg_2"	"decimal"	19	0	1	2
3973	681	"res_0"	"decimal"	19	0	0	0
3974	681	"arg_1"	"date"	0	0	1	1
3975	681	"arg_2"	"decimal"	19	0	1	2
3976	682	"res_0"	"decimal"	19	0	0	0
3977	682	"arg_1"	"timestamp"	7	0	1	1
3978	682	"arg_2"	"decimal"	19	0	1	2
3979	683	"res_0"	"decimal"	19	0	0	0
3980	683	"arg_1"	"timestamptz"	7	0	1	1
3981	683	"arg_2"	"decimal"	19	0	1	2
3982	684	"res_0"	"decimal"	19	0	0	0
3983	684	"arg_1"	"blob"	0	0	1	1
3984	684	"arg_2"	"decimal"	19	0	1	2
3985	685	"res_0"	"decimal"	19	0	0	0
3986	685	"arg_1"	"geometry"	0	0	1	1
3987	685	"arg_2"	"decimal"	19	0	1	2
3988	686	"res_0"	"decimal"	19	0	0	0
3989	686	"arg_1"	"geometrya"	0	0	1	1
3990	686	"arg_2"	"decimal"	19	0	1	2
3991	687	"res_0"	"decimal"	19	0	0	0
3992	687	"arg_1"	"mbr"	0	0	1	1
3993	687	"arg_2"	"decimal"	19	0	1	2
3994	688	"res_0"	"real"	24	0	0	0
3995	688	"arg_1"	"oid"	63	0	1	1
3996	688	"arg_2"	"real"	24	0	1	2
3997	689	"res_0"	"real"	24	0	0	0
3998	689	"arg_1"	"tinyint"	8	0	1	1
3999	689	"arg_2"	"real"	24	0	1	2
4000	690	"res_0"	"real"	24	0	0	0
4001	690	"arg_1"	"smallint"	16	0	1	1
4002	690	"arg_2"	"real"	24	0	1	2
4003	691	"res_0"	"real"	24	0	0	0
4004	691	"arg_1"	"int"	32	0	1	1
4005	691	"arg_2"	"real"	24	0	1	2
4006	692	"res_0"	"real"	24	0	0	0
4007	692	"arg_1"	"bigint"	64	0	1	1
4008	692	"arg_2"	"real"	24	0	1	2
4009	693	"res_0"	"real"	24	0	0	0
4010	693	"arg_1"	"wrd"	64	0	1	1
4011	693	"arg_2"	"real"	24	0	1	2
4012	694	"res_0"	"real"	24	0	0	0
4013	694	"arg_1"	"decimal"	2	0	1	1
4014	694	"arg_2"	"real"	24	0	1	2
4015	695	"res_0"	"real"	24	0	0	0
4016	695	"arg_1"	"decimal"	4	0	1	1
4017	695	"arg_2"	"real"	24	0	1	2
4018	696	"res_0"	"real"	24	0	0	0
4019	696	"arg_1"	"decimal"	9	0	1	1
4020	696	"arg_2"	"real"	24	0	1	2
4021	697	"res_0"	"real"	24	0	0	0
4022	697	"arg_1"	"decimal"	19	0	1	1
4023	697	"arg_2"	"real"	24	0	1	2
4024	698	"res_0"	"real"	24	0	0	0
4025	698	"arg_1"	"real"	24	0	1	1
4026	698	"arg_2"	"real"	24	0	1	2
4027	699	"res_0"	"real"	24	0	0	0
4028	699	"arg_1"	"double"	53	0	1	1
4029	699	"arg_2"	"real"	24	0	1	2
4030	700	"res_0"	"real"	24	0	0	0
4031	700	"arg_1"	"month_interval"	32	0	1	1
4032	700	"arg_2"	"real"	24	0	1	2
4033	701	"res_0"	"real"	24	0	0	0
4034	701	"arg_1"	"sec_interval"	19	0	1	1
4035	701	"arg_2"	"real"	24	0	1	2
4036	702	"res_0"	"real"	24	0	0	0
4037	702	"arg_1"	"time"	7	0	1	1
4038	702	"arg_2"	"real"	24	0	1	2
4039	703	"res_0"	"real"	24	0	0	0
4040	703	"arg_1"	"timetz"	7	0	1	1
4041	703	"arg_2"	"real"	24	0	1	2
4042	704	"res_0"	"real"	24	0	0	0
4043	704	"arg_1"	"date"	0	0	1	1
4044	704	"arg_2"	"real"	24	0	1	2
4045	705	"res_0"	"real"	24	0	0	0
4046	705	"arg_1"	"timestamp"	7	0	1	1
4047	705	"arg_2"	"real"	24	0	1	2
4048	706	"res_0"	"real"	24	0	0	0
4049	706	"arg_1"	"timestamptz"	7	0	1	1
4050	706	"arg_2"	"real"	24	0	1	2
4051	707	"res_0"	"real"	24	0	0	0
4052	707	"arg_1"	"blob"	0	0	1	1
4053	707	"arg_2"	"real"	24	0	1	2
4054	708	"res_0"	"real"	24	0	0	0
4055	708	"arg_1"	"geometry"	0	0	1	1
4056	708	"arg_2"	"real"	24	0	1	2
4057	709	"res_0"	"real"	24	0	0	0
4058	709	"arg_1"	"geometrya"	0	0	1	1
4059	709	"arg_2"	"real"	24	0	1	2
4060	710	"res_0"	"real"	24	0	0	0
4061	710	"arg_1"	"mbr"	0	0	1	1
4062	710	"arg_2"	"real"	24	0	1	2
4063	711	"res_0"	"double"	53	0	0	0
4064	711	"arg_1"	"oid"	63	0	1	1
4065	711	"arg_2"	"double"	53	0	1	2
4066	712	"res_0"	"double"	53	0	0	0
4067	712	"arg_1"	"tinyint"	8	0	1	1
4068	712	"arg_2"	"double"	53	0	1	2
4069	713	"res_0"	"double"	53	0	0	0
4070	713	"arg_1"	"smallint"	16	0	1	1
4071	713	"arg_2"	"double"	53	0	1	2
4072	714	"res_0"	"double"	53	0	0	0
4073	714	"arg_1"	"int"	32	0	1	1
4074	714	"arg_2"	"double"	53	0	1	2
4075	715	"res_0"	"double"	53	0	0	0
4076	715	"arg_1"	"bigint"	64	0	1	1
4077	715	"arg_2"	"double"	53	0	1	2
4078	716	"res_0"	"double"	53	0	0	0
4079	716	"arg_1"	"wrd"	64	0	1	1
4080	716	"arg_2"	"double"	53	0	1	2
4081	717	"res_0"	"double"	53	0	0	0
4082	717	"arg_1"	"decimal"	2	0	1	1
4083	717	"arg_2"	"double"	53	0	1	2
4084	718	"res_0"	"double"	53	0	0	0
4085	718	"arg_1"	"decimal"	4	0	1	1
4086	718	"arg_2"	"double"	53	0	1	2
4087	719	"res_0"	"double"	53	0	0	0
4088	719	"arg_1"	"decimal"	9	0	1	1
4089	719	"arg_2"	"double"	53	0	1	2
4090	720	"res_0"	"double"	53	0	0	0
4091	720	"arg_1"	"decimal"	19	0	1	1
4092	720	"arg_2"	"double"	53	0	1	2
4093	721	"res_0"	"double"	53	0	0	0
4094	721	"arg_1"	"real"	24	0	1	1
4095	721	"arg_2"	"double"	53	0	1	2
4096	722	"res_0"	"double"	53	0	0	0
4097	722	"arg_1"	"double"	53	0	1	1
4098	722	"arg_2"	"double"	53	0	1	2
4099	723	"res_0"	"double"	53	0	0	0
4100	723	"arg_1"	"month_interval"	32	0	1	1
4101	723	"arg_2"	"double"	53	0	1	2
4102	724	"res_0"	"double"	53	0	0	0
4103	724	"arg_1"	"sec_interval"	19	0	1	1
4104	724	"arg_2"	"double"	53	0	1	2
4105	725	"res_0"	"double"	53	0	0	0
4106	725	"arg_1"	"time"	7	0	1	1
4107	725	"arg_2"	"double"	53	0	1	2
4108	726	"res_0"	"double"	53	0	0	0
4109	726	"arg_1"	"timetz"	7	0	1	1
4110	726	"arg_2"	"double"	53	0	1	2
4111	727	"res_0"	"double"	53	0	0	0
4112	727	"arg_1"	"date"	0	0	1	1
4113	727	"arg_2"	"double"	53	0	1	2
4114	728	"res_0"	"double"	53	0	0	0
4115	728	"arg_1"	"timestamp"	7	0	1	1
4116	728	"arg_2"	"double"	53	0	1	2
4117	729	"res_0"	"double"	53	0	0	0
4118	729	"arg_1"	"timestamptz"	7	0	1	1
4119	729	"arg_2"	"double"	53	0	1	2
4120	730	"res_0"	"double"	53	0	0	0
4121	730	"arg_1"	"blob"	0	0	1	1
4122	730	"arg_2"	"double"	53	0	1	2
4123	731	"res_0"	"double"	53	0	0	0
4124	731	"arg_1"	"geometry"	0	0	1	1
4125	731	"arg_2"	"double"	53	0	1	2
4126	732	"res_0"	"double"	53	0	0	0
4127	732	"arg_1"	"geometrya"	0	0	1	1
4128	732	"arg_2"	"double"	53	0	1	2
4129	733	"res_0"	"double"	53	0	0	0
4130	733	"arg_1"	"mbr"	0	0	1	1
4131	733	"arg_2"	"double"	53	0	1	2
4132	734	"res_0"	"month_interval"	32	0	0	0
4133	734	"arg_1"	"oid"	63	0	1	1
4134	734	"arg_2"	"month_interval"	32	0	1	2
4135	735	"res_0"	"month_interval"	32	0	0	0
4136	735	"arg_1"	"tinyint"	8	0	1	1
4137	735	"arg_2"	"month_interval"	32	0	1	2
4138	736	"res_0"	"month_interval"	32	0	0	0
4139	736	"arg_1"	"smallint"	16	0	1	1
4140	736	"arg_2"	"month_interval"	32	0	1	2
4141	737	"res_0"	"month_interval"	32	0	0	0
4142	737	"arg_1"	"int"	32	0	1	1
4143	737	"arg_2"	"month_interval"	32	0	1	2
4144	738	"res_0"	"month_interval"	32	0	0	0
4145	738	"arg_1"	"bigint"	64	0	1	1
4146	738	"arg_2"	"month_interval"	32	0	1	2
4147	739	"res_0"	"month_interval"	32	0	0	0
4148	739	"arg_1"	"wrd"	64	0	1	1
4149	739	"arg_2"	"month_interval"	32	0	1	2
4150	740	"res_0"	"month_interval"	32	0	0	0
4151	740	"arg_1"	"decimal"	2	0	1	1
4152	740	"arg_2"	"month_interval"	32	0	1	2
4153	741	"res_0"	"month_interval"	32	0	0	0
4154	741	"arg_1"	"decimal"	4	0	1	1
4155	741	"arg_2"	"month_interval"	32	0	1	2
4156	742	"res_0"	"month_interval"	32	0	0	0
4157	742	"arg_1"	"decimal"	9	0	1	1
4158	742	"arg_2"	"month_interval"	32	0	1	2
4159	743	"res_0"	"month_interval"	32	0	0	0
4160	743	"arg_1"	"decimal"	19	0	1	1
4161	743	"arg_2"	"month_interval"	32	0	1	2
4162	744	"res_0"	"month_interval"	32	0	0	0
4163	744	"arg_1"	"real"	24	0	1	1
4164	744	"arg_2"	"month_interval"	32	0	1	2
4165	745	"res_0"	"month_interval"	32	0	0	0
4166	745	"arg_1"	"double"	53	0	1	1
4167	745	"arg_2"	"month_interval"	32	0	1	2
4168	746	"res_0"	"month_interval"	32	0	0	0
4169	746	"arg_1"	"month_interval"	32	0	1	1
4170	746	"arg_2"	"month_interval"	32	0	1	2
4171	747	"res_0"	"month_interval"	32	0	0	0
4172	747	"arg_1"	"sec_interval"	19	0	1	1
4173	747	"arg_2"	"month_interval"	32	0	1	2
4174	748	"res_0"	"month_interval"	32	0	0	0
4175	748	"arg_1"	"time"	7	0	1	1
4176	748	"arg_2"	"month_interval"	32	0	1	2
4177	749	"res_0"	"month_interval"	32	0	0	0
4178	749	"arg_1"	"timetz"	7	0	1	1
4179	749	"arg_2"	"month_interval"	32	0	1	2
4180	750	"res_0"	"month_interval"	32	0	0	0
4181	750	"arg_1"	"date"	0	0	1	1
4182	750	"arg_2"	"month_interval"	32	0	1	2
4183	751	"res_0"	"month_interval"	32	0	0	0
4184	751	"arg_1"	"timestamp"	7	0	1	1
4185	751	"arg_2"	"month_interval"	32	0	1	2
4186	752	"res_0"	"month_interval"	32	0	0	0
4187	752	"arg_1"	"timestamptz"	7	0	1	1
4188	752	"arg_2"	"month_interval"	32	0	1	2
4189	753	"res_0"	"month_interval"	32	0	0	0
4190	753	"arg_1"	"blob"	0	0	1	1
4191	753	"arg_2"	"month_interval"	32	0	1	2
4192	754	"res_0"	"month_interval"	32	0	0	0
4193	754	"arg_1"	"geometry"	0	0	1	1
4194	754	"arg_2"	"month_interval"	32	0	1	2
4195	755	"res_0"	"month_interval"	32	0	0	0
4196	755	"arg_1"	"geometrya"	0	0	1	1
4197	755	"arg_2"	"month_interval"	32	0	1	2
4198	756	"res_0"	"month_interval"	32	0	0	0
4199	756	"arg_1"	"mbr"	0	0	1	1
4200	756	"arg_2"	"month_interval"	32	0	1	2
4201	757	"res_0"	"sec_interval"	19	0	0	0
4202	757	"arg_1"	"oid"	63	0	1	1
4203	757	"arg_2"	"sec_interval"	19	0	1	2
4204	758	"res_0"	"sec_interval"	19	0	0	0
4205	758	"arg_1"	"tinyint"	8	0	1	1
4206	758	"arg_2"	"sec_interval"	19	0	1	2
4207	759	"res_0"	"sec_interval"	19	0	0	0
4208	759	"arg_1"	"smallint"	16	0	1	1
4209	759	"arg_2"	"sec_interval"	19	0	1	2
4210	760	"res_0"	"sec_interval"	19	0	0	0
4211	760	"arg_1"	"int"	32	0	1	1
4212	760	"arg_2"	"sec_interval"	19	0	1	2
4213	761	"res_0"	"sec_interval"	19	0	0	0
4214	761	"arg_1"	"bigint"	64	0	1	1
4215	761	"arg_2"	"sec_interval"	19	0	1	2
4216	762	"res_0"	"sec_interval"	19	0	0	0
4217	762	"arg_1"	"wrd"	64	0	1	1
4218	762	"arg_2"	"sec_interval"	19	0	1	2
4219	763	"res_0"	"sec_interval"	19	0	0	0
4220	763	"arg_1"	"decimal"	2	0	1	1
4221	763	"arg_2"	"sec_interval"	19	0	1	2
4222	764	"res_0"	"sec_interval"	19	0	0	0
4223	764	"arg_1"	"decimal"	4	0	1	1
4224	764	"arg_2"	"sec_interval"	19	0	1	2
4225	765	"res_0"	"sec_interval"	19	0	0	0
4226	765	"arg_1"	"decimal"	9	0	1	1
4227	765	"arg_2"	"sec_interval"	19	0	1	2
4228	766	"res_0"	"sec_interval"	19	0	0	0
4229	766	"arg_1"	"decimal"	19	0	1	1
4230	766	"arg_2"	"sec_interval"	19	0	1	2
4231	767	"res_0"	"sec_interval"	19	0	0	0
4232	767	"arg_1"	"real"	24	0	1	1
4233	767	"arg_2"	"sec_interval"	19	0	1	2
4234	768	"res_0"	"sec_interval"	19	0	0	0
4235	768	"arg_1"	"double"	53	0	1	1
4236	768	"arg_2"	"sec_interval"	19	0	1	2
4237	769	"res_0"	"sec_interval"	19	0	0	0
4238	769	"arg_1"	"month_interval"	32	0	1	1
4239	769	"arg_2"	"sec_interval"	19	0	1	2
4240	770	"res_0"	"sec_interval"	19	0	0	0
4241	770	"arg_1"	"sec_interval"	19	0	1	1
4242	770	"arg_2"	"sec_interval"	19	0	1	2
4243	771	"res_0"	"sec_interval"	19	0	0	0
4244	771	"arg_1"	"time"	7	0	1	1
4245	771	"arg_2"	"sec_interval"	19	0	1	2
4246	772	"res_0"	"sec_interval"	19	0	0	0
4247	772	"arg_1"	"timetz"	7	0	1	1
4248	772	"arg_2"	"sec_interval"	19	0	1	2
4249	773	"res_0"	"sec_interval"	19	0	0	0
4250	773	"arg_1"	"date"	0	0	1	1
4251	773	"arg_2"	"sec_interval"	19	0	1	2
4252	774	"res_0"	"sec_interval"	19	0	0	0
4253	774	"arg_1"	"timestamp"	7	0	1	1
4254	774	"arg_2"	"sec_interval"	19	0	1	2
4255	775	"res_0"	"sec_interval"	19	0	0	0
4256	775	"arg_1"	"timestamptz"	7	0	1	1
4257	775	"arg_2"	"sec_interval"	19	0	1	2
4258	776	"res_0"	"sec_interval"	19	0	0	0
4259	776	"arg_1"	"blob"	0	0	1	1
4260	776	"arg_2"	"sec_interval"	19	0	1	2
4261	777	"res_0"	"sec_interval"	19	0	0	0
4262	777	"arg_1"	"geometry"	0	0	1	1
4263	777	"arg_2"	"sec_interval"	19	0	1	2
4264	778	"res_0"	"sec_interval"	19	0	0	0
4265	778	"arg_1"	"geometrya"	0	0	1	1
4266	778	"arg_2"	"sec_interval"	19	0	1	2
4267	779	"res_0"	"sec_interval"	19	0	0	0
4268	779	"arg_1"	"mbr"	0	0	1	1
4269	779	"arg_2"	"sec_interval"	19	0	1	2
4270	780	"res_0"	"time"	7	0	0	0
4271	780	"arg_1"	"oid"	63	0	1	1
4272	780	"arg_2"	"time"	7	0	1	2
4273	781	"res_0"	"time"	7	0	0	0
4274	781	"arg_1"	"tinyint"	8	0	1	1
4275	781	"arg_2"	"time"	7	0	1	2
4276	782	"res_0"	"time"	7	0	0	0
4277	782	"arg_1"	"smallint"	16	0	1	1
4278	782	"arg_2"	"time"	7	0	1	2
4279	783	"res_0"	"time"	7	0	0	0
4280	783	"arg_1"	"int"	32	0	1	1
4281	783	"arg_2"	"time"	7	0	1	2
4282	784	"res_0"	"time"	7	0	0	0
4283	784	"arg_1"	"bigint"	64	0	1	1
4284	784	"arg_2"	"time"	7	0	1	2
4285	785	"res_0"	"time"	7	0	0	0
4286	785	"arg_1"	"wrd"	64	0	1	1
4287	785	"arg_2"	"time"	7	0	1	2
4288	786	"res_0"	"time"	7	0	0	0
4289	786	"arg_1"	"decimal"	2	0	1	1
4290	786	"arg_2"	"time"	7	0	1	2
4291	787	"res_0"	"time"	7	0	0	0
4292	787	"arg_1"	"decimal"	4	0	1	1
4293	787	"arg_2"	"time"	7	0	1	2
4294	788	"res_0"	"time"	7	0	0	0
4295	788	"arg_1"	"decimal"	9	0	1	1
4296	788	"arg_2"	"time"	7	0	1	2
4297	789	"res_0"	"time"	7	0	0	0
4298	789	"arg_1"	"decimal"	19	0	1	1
4299	789	"arg_2"	"time"	7	0	1	2
4300	790	"res_0"	"time"	7	0	0	0
4301	790	"arg_1"	"real"	24	0	1	1
4302	790	"arg_2"	"time"	7	0	1	2
4303	791	"res_0"	"time"	7	0	0	0
4304	791	"arg_1"	"double"	53	0	1	1
4305	791	"arg_2"	"time"	7	0	1	2
4306	792	"res_0"	"time"	7	0	0	0
4307	792	"arg_1"	"month_interval"	32	0	1	1
4308	792	"arg_2"	"time"	7	0	1	2
4309	793	"res_0"	"time"	7	0	0	0
4310	793	"arg_1"	"sec_interval"	19	0	1	1
4311	793	"arg_2"	"time"	7	0	1	2
4312	794	"res_0"	"time"	7	0	0	0
4313	794	"arg_1"	"time"	7	0	1	1
4314	794	"arg_2"	"time"	7	0	1	2
4315	795	"res_0"	"time"	7	0	0	0
4316	795	"arg_1"	"timetz"	7	0	1	1
4317	795	"arg_2"	"time"	7	0	1	2
4318	796	"res_0"	"time"	7	0	0	0
4319	796	"arg_1"	"date"	0	0	1	1
4320	796	"arg_2"	"time"	7	0	1	2
4321	797	"res_0"	"time"	7	0	0	0
4322	797	"arg_1"	"timestamp"	7	0	1	1
4323	797	"arg_2"	"time"	7	0	1	2
4324	798	"res_0"	"time"	7	0	0	0
4325	798	"arg_1"	"timestamptz"	7	0	1	1
4326	798	"arg_2"	"time"	7	0	1	2
4327	799	"res_0"	"time"	7	0	0	0
4328	799	"arg_1"	"blob"	0	0	1	1
4329	799	"arg_2"	"time"	7	0	1	2
4330	800	"res_0"	"time"	7	0	0	0
4331	800	"arg_1"	"geometry"	0	0	1	1
4332	800	"arg_2"	"time"	7	0	1	2
4333	801	"res_0"	"time"	7	0	0	0
4334	801	"arg_1"	"geometrya"	0	0	1	1
4335	801	"arg_2"	"time"	7	0	1	2
4336	802	"res_0"	"time"	7	0	0	0
4337	802	"arg_1"	"mbr"	0	0	1	1
4338	802	"arg_2"	"time"	7	0	1	2
4339	803	"res_0"	"timetz"	7	0	0	0
4340	803	"arg_1"	"oid"	63	0	1	1
4341	803	"arg_2"	"timetz"	7	0	1	2
4342	804	"res_0"	"timetz"	7	0	0	0
4343	804	"arg_1"	"tinyint"	8	0	1	1
4344	804	"arg_2"	"timetz"	7	0	1	2
4345	805	"res_0"	"timetz"	7	0	0	0
4346	805	"arg_1"	"smallint"	16	0	1	1
4347	805	"arg_2"	"timetz"	7	0	1	2
4348	806	"res_0"	"timetz"	7	0	0	0
4349	806	"arg_1"	"int"	32	0	1	1
4350	806	"arg_2"	"timetz"	7	0	1	2
4351	807	"res_0"	"timetz"	7	0	0	0
4352	807	"arg_1"	"bigint"	64	0	1	1
4353	807	"arg_2"	"timetz"	7	0	1	2
4354	808	"res_0"	"timetz"	7	0	0	0
4355	808	"arg_1"	"wrd"	64	0	1	1
4356	808	"arg_2"	"timetz"	7	0	1	2
4357	809	"res_0"	"timetz"	7	0	0	0
4358	809	"arg_1"	"decimal"	2	0	1	1
4359	809	"arg_2"	"timetz"	7	0	1	2
4360	810	"res_0"	"timetz"	7	0	0	0
4361	810	"arg_1"	"decimal"	4	0	1	1
4362	810	"arg_2"	"timetz"	7	0	1	2
4363	811	"res_0"	"timetz"	7	0	0	0
4364	811	"arg_1"	"decimal"	9	0	1	1
4365	811	"arg_2"	"timetz"	7	0	1	2
4366	812	"res_0"	"timetz"	7	0	0	0
4367	812	"arg_1"	"decimal"	19	0	1	1
4368	812	"arg_2"	"timetz"	7	0	1	2
4369	813	"res_0"	"timetz"	7	0	0	0
4370	813	"arg_1"	"real"	24	0	1	1
4371	813	"arg_2"	"timetz"	7	0	1	2
4372	814	"res_0"	"timetz"	7	0	0	0
4373	814	"arg_1"	"double"	53	0	1	1
4374	814	"arg_2"	"timetz"	7	0	1	2
4375	815	"res_0"	"timetz"	7	0	0	0
4376	815	"arg_1"	"month_interval"	32	0	1	1
4377	815	"arg_2"	"timetz"	7	0	1	2
4378	816	"res_0"	"timetz"	7	0	0	0
4379	816	"arg_1"	"sec_interval"	19	0	1	1
4380	816	"arg_2"	"timetz"	7	0	1	2
4381	817	"res_0"	"timetz"	7	0	0	0
4382	817	"arg_1"	"time"	7	0	1	1
4383	817	"arg_2"	"timetz"	7	0	1	2
4384	818	"res_0"	"timetz"	7	0	0	0
4385	818	"arg_1"	"timetz"	7	0	1	1
4386	818	"arg_2"	"timetz"	7	0	1	2
4387	819	"res_0"	"timetz"	7	0	0	0
4388	819	"arg_1"	"date"	0	0	1	1
4389	819	"arg_2"	"timetz"	7	0	1	2
4390	820	"res_0"	"timetz"	7	0	0	0
4391	820	"arg_1"	"timestamp"	7	0	1	1
4392	820	"arg_2"	"timetz"	7	0	1	2
4393	821	"res_0"	"timetz"	7	0	0	0
4394	821	"arg_1"	"timestamptz"	7	0	1	1
4395	821	"arg_2"	"timetz"	7	0	1	2
4396	822	"res_0"	"timetz"	7	0	0	0
4397	822	"arg_1"	"blob"	0	0	1	1
4398	822	"arg_2"	"timetz"	7	0	1	2
4399	823	"res_0"	"timetz"	7	0	0	0
4400	823	"arg_1"	"geometry"	0	0	1	1
4401	823	"arg_2"	"timetz"	7	0	1	2
4402	824	"res_0"	"timetz"	7	0	0	0
4403	824	"arg_1"	"geometrya"	0	0	1	1
4404	824	"arg_2"	"timetz"	7	0	1	2
4405	825	"res_0"	"timetz"	7	0	0	0
4406	825	"arg_1"	"mbr"	0	0	1	1
4407	825	"arg_2"	"timetz"	7	0	1	2
4408	826	"res_0"	"date"	0	0	0	0
4409	826	"arg_1"	"oid"	63	0	1	1
4410	826	"arg_2"	"date"	0	0	1	2
4411	827	"res_0"	"date"	0	0	0	0
4412	827	"arg_1"	"tinyint"	8	0	1	1
4413	827	"arg_2"	"date"	0	0	1	2
4414	828	"res_0"	"date"	0	0	0	0
4415	828	"arg_1"	"smallint"	16	0	1	1
4416	828	"arg_2"	"date"	0	0	1	2
4417	829	"res_0"	"date"	0	0	0	0
4418	829	"arg_1"	"int"	32	0	1	1
4419	829	"arg_2"	"date"	0	0	1	2
4420	830	"res_0"	"date"	0	0	0	0
4421	830	"arg_1"	"bigint"	64	0	1	1
4422	830	"arg_2"	"date"	0	0	1	2
4423	831	"res_0"	"date"	0	0	0	0
4424	831	"arg_1"	"wrd"	64	0	1	1
4425	831	"arg_2"	"date"	0	0	1	2
4426	832	"res_0"	"date"	0	0	0	0
4427	832	"arg_1"	"decimal"	2	0	1	1
4428	832	"arg_2"	"date"	0	0	1	2
4429	833	"res_0"	"date"	0	0	0	0
4430	833	"arg_1"	"decimal"	4	0	1	1
4431	833	"arg_2"	"date"	0	0	1	2
4432	834	"res_0"	"date"	0	0	0	0
4433	834	"arg_1"	"decimal"	9	0	1	1
4434	834	"arg_2"	"date"	0	0	1	2
4435	835	"res_0"	"date"	0	0	0	0
4436	835	"arg_1"	"decimal"	19	0	1	1
4437	835	"arg_2"	"date"	0	0	1	2
4438	836	"res_0"	"date"	0	0	0	0
4439	836	"arg_1"	"real"	24	0	1	1
4440	836	"arg_2"	"date"	0	0	1	2
4441	837	"res_0"	"date"	0	0	0	0
4442	837	"arg_1"	"double"	53	0	1	1
4443	837	"arg_2"	"date"	0	0	1	2
4444	838	"res_0"	"date"	0	0	0	0
4445	838	"arg_1"	"month_interval"	32	0	1	1
4446	838	"arg_2"	"date"	0	0	1	2
4447	839	"res_0"	"date"	0	0	0	0
4448	839	"arg_1"	"sec_interval"	19	0	1	1
4449	839	"arg_2"	"date"	0	0	1	2
4450	840	"res_0"	"date"	0	0	0	0
4451	840	"arg_1"	"time"	7	0	1	1
4452	840	"arg_2"	"date"	0	0	1	2
4453	841	"res_0"	"date"	0	0	0	0
4454	841	"arg_1"	"timetz"	7	0	1	1
4455	841	"arg_2"	"date"	0	0	1	2
4456	842	"res_0"	"date"	0	0	0	0
4457	842	"arg_1"	"date"	0	0	1	1
4458	842	"arg_2"	"date"	0	0	1	2
4459	843	"res_0"	"date"	0	0	0	0
4460	843	"arg_1"	"timestamp"	7	0	1	1
4461	843	"arg_2"	"date"	0	0	1	2
4462	844	"res_0"	"date"	0	0	0	0
4463	844	"arg_1"	"timestamptz"	7	0	1	1
4464	844	"arg_2"	"date"	0	0	1	2
4465	845	"res_0"	"date"	0	0	0	0
4466	845	"arg_1"	"blob"	0	0	1	1
4467	845	"arg_2"	"date"	0	0	1	2
4468	846	"res_0"	"date"	0	0	0	0
4469	846	"arg_1"	"geometry"	0	0	1	1
4470	846	"arg_2"	"date"	0	0	1	2
4471	847	"res_0"	"date"	0	0	0	0
4472	847	"arg_1"	"geometrya"	0	0	1	1
4473	847	"arg_2"	"date"	0	0	1	2
4474	848	"res_0"	"date"	0	0	0	0
4475	848	"arg_1"	"mbr"	0	0	1	1
4476	848	"arg_2"	"date"	0	0	1	2
4477	849	"res_0"	"timestamp"	7	0	0	0
4478	849	"arg_1"	"oid"	63	0	1	1
4479	849	"arg_2"	"timestamp"	7	0	1	2
4480	850	"res_0"	"timestamp"	7	0	0	0
4481	850	"arg_1"	"tinyint"	8	0	1	1
4482	850	"arg_2"	"timestamp"	7	0	1	2
4483	851	"res_0"	"timestamp"	7	0	0	0
4484	851	"arg_1"	"smallint"	16	0	1	1
4485	851	"arg_2"	"timestamp"	7	0	1	2
4486	852	"res_0"	"timestamp"	7	0	0	0
4487	852	"arg_1"	"int"	32	0	1	1
4488	852	"arg_2"	"timestamp"	7	0	1	2
4489	853	"res_0"	"timestamp"	7	0	0	0
4490	853	"arg_1"	"bigint"	64	0	1	1
4491	853	"arg_2"	"timestamp"	7	0	1	2
4492	854	"res_0"	"timestamp"	7	0	0	0
4493	854	"arg_1"	"wrd"	64	0	1	1
4494	854	"arg_2"	"timestamp"	7	0	1	2
4495	855	"res_0"	"timestamp"	7	0	0	0
4496	855	"arg_1"	"decimal"	2	0	1	1
4497	855	"arg_2"	"timestamp"	7	0	1	2
4498	856	"res_0"	"timestamp"	7	0	0	0
4499	856	"arg_1"	"decimal"	4	0	1	1
4500	856	"arg_2"	"timestamp"	7	0	1	2
4501	857	"res_0"	"timestamp"	7	0	0	0
4502	857	"arg_1"	"decimal"	9	0	1	1
4503	857	"arg_2"	"timestamp"	7	0	1	2
4504	858	"res_0"	"timestamp"	7	0	0	0
4505	858	"arg_1"	"decimal"	19	0	1	1
4506	858	"arg_2"	"timestamp"	7	0	1	2
4507	859	"res_0"	"timestamp"	7	0	0	0
4508	859	"arg_1"	"real"	24	0	1	1
4509	859	"arg_2"	"timestamp"	7	0	1	2
4510	860	"res_0"	"timestamp"	7	0	0	0
4511	860	"arg_1"	"double"	53	0	1	1
4512	860	"arg_2"	"timestamp"	7	0	1	2
4513	861	"res_0"	"timestamp"	7	0	0	0
4514	861	"arg_1"	"month_interval"	32	0	1	1
4515	861	"arg_2"	"timestamp"	7	0	1	2
4516	862	"res_0"	"timestamp"	7	0	0	0
4517	862	"arg_1"	"sec_interval"	19	0	1	1
4518	862	"arg_2"	"timestamp"	7	0	1	2
4519	863	"res_0"	"timestamp"	7	0	0	0
4520	863	"arg_1"	"time"	7	0	1	1
4521	863	"arg_2"	"timestamp"	7	0	1	2
4522	864	"res_0"	"timestamp"	7	0	0	0
4523	864	"arg_1"	"timetz"	7	0	1	1
4524	864	"arg_2"	"timestamp"	7	0	1	2
4525	865	"res_0"	"timestamp"	7	0	0	0
4526	865	"arg_1"	"date"	0	0	1	1
4527	865	"arg_2"	"timestamp"	7	0	1	2
4528	866	"res_0"	"timestamp"	7	0	0	0
4529	866	"arg_1"	"timestamp"	7	0	1	1
4530	866	"arg_2"	"timestamp"	7	0	1	2
4531	867	"res_0"	"timestamp"	7	0	0	0
4532	867	"arg_1"	"timestamptz"	7	0	1	1
4533	867	"arg_2"	"timestamp"	7	0	1	2
4534	868	"res_0"	"timestamp"	7	0	0	0
4535	868	"arg_1"	"blob"	0	0	1	1
4536	868	"arg_2"	"timestamp"	7	0	1	2
4537	869	"res_0"	"timestamp"	7	0	0	0
4538	869	"arg_1"	"geometry"	0	0	1	1
4539	869	"arg_2"	"timestamp"	7	0	1	2
4540	870	"res_0"	"timestamp"	7	0	0	0
4541	870	"arg_1"	"geometrya"	0	0	1	1
4542	870	"arg_2"	"timestamp"	7	0	1	2
4543	871	"res_0"	"timestamp"	7	0	0	0
4544	871	"arg_1"	"mbr"	0	0	1	1
4545	871	"arg_2"	"timestamp"	7	0	1	2
4546	872	"res_0"	"timestamptz"	7	0	0	0
4547	872	"arg_1"	"oid"	63	0	1	1
4548	872	"arg_2"	"timestamptz"	7	0	1	2
4549	873	"res_0"	"timestamptz"	7	0	0	0
4550	873	"arg_1"	"tinyint"	8	0	1	1
4551	873	"arg_2"	"timestamptz"	7	0	1	2
4552	874	"res_0"	"timestamptz"	7	0	0	0
4553	874	"arg_1"	"smallint"	16	0	1	1
4554	874	"arg_2"	"timestamptz"	7	0	1	2
4555	875	"res_0"	"timestamptz"	7	0	0	0
4556	875	"arg_1"	"int"	32	0	1	1
4557	875	"arg_2"	"timestamptz"	7	0	1	2
4558	876	"res_0"	"timestamptz"	7	0	0	0
4559	876	"arg_1"	"bigint"	64	0	1	1
4560	876	"arg_2"	"timestamptz"	7	0	1	2
4561	877	"res_0"	"timestamptz"	7	0	0	0
4562	877	"arg_1"	"wrd"	64	0	1	1
4563	877	"arg_2"	"timestamptz"	7	0	1	2
4564	878	"res_0"	"timestamptz"	7	0	0	0
4565	878	"arg_1"	"decimal"	2	0	1	1
4566	878	"arg_2"	"timestamptz"	7	0	1	2
4567	879	"res_0"	"timestamptz"	7	0	0	0
4568	879	"arg_1"	"decimal"	4	0	1	1
4569	879	"arg_2"	"timestamptz"	7	0	1	2
4570	880	"res_0"	"timestamptz"	7	0	0	0
4571	880	"arg_1"	"decimal"	9	0	1	1
4572	880	"arg_2"	"timestamptz"	7	0	1	2
4573	881	"res_0"	"timestamptz"	7	0	0	0
4574	881	"arg_1"	"decimal"	19	0	1	1
4575	881	"arg_2"	"timestamptz"	7	0	1	2
4576	882	"res_0"	"timestamptz"	7	0	0	0
4577	882	"arg_1"	"real"	24	0	1	1
4578	882	"arg_2"	"timestamptz"	7	0	1	2
4579	883	"res_0"	"timestamptz"	7	0	0	0
4580	883	"arg_1"	"double"	53	0	1	1
4581	883	"arg_2"	"timestamptz"	7	0	1	2
4582	884	"res_0"	"timestamptz"	7	0	0	0
4583	884	"arg_1"	"month_interval"	32	0	1	1
4584	884	"arg_2"	"timestamptz"	7	0	1	2
4585	885	"res_0"	"timestamptz"	7	0	0	0
4586	885	"arg_1"	"sec_interval"	19	0	1	1
4587	885	"arg_2"	"timestamptz"	7	0	1	2
4588	886	"res_0"	"timestamptz"	7	0	0	0
4589	886	"arg_1"	"time"	7	0	1	1
4590	886	"arg_2"	"timestamptz"	7	0	1	2
4591	887	"res_0"	"timestamptz"	7	0	0	0
4592	887	"arg_1"	"timetz"	7	0	1	1
4593	887	"arg_2"	"timestamptz"	7	0	1	2
4594	888	"res_0"	"timestamptz"	7	0	0	0
4595	888	"arg_1"	"date"	0	0	1	1
4596	888	"arg_2"	"timestamptz"	7	0	1	2
4597	889	"res_0"	"timestamptz"	7	0	0	0
4598	889	"arg_1"	"timestamp"	7	0	1	1
4599	889	"arg_2"	"timestamptz"	7	0	1	2
4600	890	"res_0"	"timestamptz"	7	0	0	0
4601	890	"arg_1"	"timestamptz"	7	0	1	1
4602	890	"arg_2"	"timestamptz"	7	0	1	2
4603	891	"res_0"	"timestamptz"	7	0	0	0
4604	891	"arg_1"	"blob"	0	0	1	1
4605	891	"arg_2"	"timestamptz"	7	0	1	2
4606	892	"res_0"	"timestamptz"	7	0	0	0
4607	892	"arg_1"	"geometry"	0	0	1	1
4608	892	"arg_2"	"timestamptz"	7	0	1	2
4609	893	"res_0"	"timestamptz"	7	0	0	0
4610	893	"arg_1"	"geometrya"	0	0	1	1
4611	893	"arg_2"	"timestamptz"	7	0	1	2
4612	894	"res_0"	"timestamptz"	7	0	0	0
4613	894	"arg_1"	"mbr"	0	0	1	1
4614	894	"arg_2"	"timestamptz"	7	0	1	2
4615	895	"res_0"	"blob"	0	0	0	0
4616	895	"arg_1"	"oid"	63	0	1	1
4617	895	"arg_2"	"blob"	0	0	1	2
4618	896	"res_0"	"blob"	0	0	0	0
4619	896	"arg_1"	"tinyint"	8	0	1	1
4620	896	"arg_2"	"blob"	0	0	1	2
4621	897	"res_0"	"blob"	0	0	0	0
4622	897	"arg_1"	"smallint"	16	0	1	1
4623	897	"arg_2"	"blob"	0	0	1	2
4624	898	"res_0"	"blob"	0	0	0	0
4625	898	"arg_1"	"int"	32	0	1	1
4626	898	"arg_2"	"blob"	0	0	1	2
4627	899	"res_0"	"blob"	0	0	0	0
4628	899	"arg_1"	"bigint"	64	0	1	1
4629	899	"arg_2"	"blob"	0	0	1	2
4630	900	"res_0"	"blob"	0	0	0	0
4631	900	"arg_1"	"wrd"	64	0	1	1
4632	900	"arg_2"	"blob"	0	0	1	2
4633	901	"res_0"	"blob"	0	0	0	0
4634	901	"arg_1"	"decimal"	2	0	1	1
4635	901	"arg_2"	"blob"	0	0	1	2
4636	902	"res_0"	"blob"	0	0	0	0
4637	902	"arg_1"	"decimal"	4	0	1	1
4638	902	"arg_2"	"blob"	0	0	1	2
4639	903	"res_0"	"blob"	0	0	0	0
4640	903	"arg_1"	"decimal"	9	0	1	1
4641	903	"arg_2"	"blob"	0	0	1	2
4642	904	"res_0"	"blob"	0	0	0	0
4643	904	"arg_1"	"decimal"	19	0	1	1
4644	904	"arg_2"	"blob"	0	0	1	2
4645	905	"res_0"	"blob"	0	0	0	0
4646	905	"arg_1"	"real"	24	0	1	1
4647	905	"arg_2"	"blob"	0	0	1	2
4648	906	"res_0"	"blob"	0	0	0	0
4649	906	"arg_1"	"double"	53	0	1	1
4650	906	"arg_2"	"blob"	0	0	1	2
4651	907	"res_0"	"blob"	0	0	0	0
4652	907	"arg_1"	"month_interval"	32	0	1	1
4653	907	"arg_2"	"blob"	0	0	1	2
4654	908	"res_0"	"blob"	0	0	0	0
4655	908	"arg_1"	"sec_interval"	19	0	1	1
4656	908	"arg_2"	"blob"	0	0	1	2
4657	909	"res_0"	"blob"	0	0	0	0
4658	909	"arg_1"	"time"	7	0	1	1
4659	909	"arg_2"	"blob"	0	0	1	2
4660	910	"res_0"	"blob"	0	0	0	0
4661	910	"arg_1"	"timetz"	7	0	1	1
4662	910	"arg_2"	"blob"	0	0	1	2
4663	911	"res_0"	"blob"	0	0	0	0
4664	911	"arg_1"	"date"	0	0	1	1
4665	911	"arg_2"	"blob"	0	0	1	2
4666	912	"res_0"	"blob"	0	0	0	0
4667	912	"arg_1"	"timestamp"	7	0	1	1
4668	912	"arg_2"	"blob"	0	0	1	2
4669	913	"res_0"	"blob"	0	0	0	0
4670	913	"arg_1"	"timestamptz"	7	0	1	1
4671	913	"arg_2"	"blob"	0	0	1	2
4672	914	"res_0"	"blob"	0	0	0	0
4673	914	"arg_1"	"blob"	0	0	1	1
4674	914	"arg_2"	"blob"	0	0	1	2
4675	915	"res_0"	"blob"	0	0	0	0
4676	915	"arg_1"	"geometry"	0	0	1	1
4677	915	"arg_2"	"blob"	0	0	1	2
4678	916	"res_0"	"blob"	0	0	0	0
4679	916	"arg_1"	"geometrya"	0	0	1	1
4680	916	"arg_2"	"blob"	0	0	1	2
4681	917	"res_0"	"blob"	0	0	0	0
4682	917	"arg_1"	"mbr"	0	0	1	1
4683	917	"arg_2"	"blob"	0	0	1	2
4684	918	"res_0"	"geometry"	0	0	0	0
4685	918	"arg_1"	"oid"	63	0	1	1
4686	918	"arg_2"	"geometry"	0	0	1	2
4687	919	"res_0"	"geometry"	0	0	0	0
4688	919	"arg_1"	"tinyint"	8	0	1	1
4689	919	"arg_2"	"geometry"	0	0	1	2
4690	920	"res_0"	"geometry"	0	0	0	0
4691	920	"arg_1"	"smallint"	16	0	1	1
4692	920	"arg_2"	"geometry"	0	0	1	2
4693	921	"res_0"	"geometry"	0	0	0	0
4694	921	"arg_1"	"int"	32	0	1	1
4695	921	"arg_2"	"geometry"	0	0	1	2
4696	922	"res_0"	"geometry"	0	0	0	0
4697	922	"arg_1"	"bigint"	64	0	1	1
4698	922	"arg_2"	"geometry"	0	0	1	2
4699	923	"res_0"	"geometry"	0	0	0	0
4700	923	"arg_1"	"wrd"	64	0	1	1
4701	923	"arg_2"	"geometry"	0	0	1	2
4702	924	"res_0"	"geometry"	0	0	0	0
4703	924	"arg_1"	"decimal"	2	0	1	1
4704	924	"arg_2"	"geometry"	0	0	1	2
4705	925	"res_0"	"geometry"	0	0	0	0
4706	925	"arg_1"	"decimal"	4	0	1	1
4707	925	"arg_2"	"geometry"	0	0	1	2
4708	926	"res_0"	"geometry"	0	0	0	0
4709	926	"arg_1"	"decimal"	9	0	1	1
4710	926	"arg_2"	"geometry"	0	0	1	2
4711	927	"res_0"	"geometry"	0	0	0	0
4712	927	"arg_1"	"decimal"	19	0	1	1
4713	927	"arg_2"	"geometry"	0	0	1	2
4714	928	"res_0"	"geometry"	0	0	0	0
4715	928	"arg_1"	"real"	24	0	1	1
4716	928	"arg_2"	"geometry"	0	0	1	2
4717	929	"res_0"	"geometry"	0	0	0	0
4718	929	"arg_1"	"double"	53	0	1	1
4719	929	"arg_2"	"geometry"	0	0	1	2
4720	930	"res_0"	"geometry"	0	0	0	0
4721	930	"arg_1"	"month_interval"	32	0	1	1
4722	930	"arg_2"	"geometry"	0	0	1	2
4723	931	"res_0"	"geometry"	0	0	0	0
4724	931	"arg_1"	"sec_interval"	19	0	1	1
4725	931	"arg_2"	"geometry"	0	0	1	2
4726	932	"res_0"	"geometry"	0	0	0	0
4727	932	"arg_1"	"time"	7	0	1	1
4728	932	"arg_2"	"geometry"	0	0	1	2
4729	933	"res_0"	"geometry"	0	0	0	0
4730	933	"arg_1"	"timetz"	7	0	1	1
4731	933	"arg_2"	"geometry"	0	0	1	2
4732	934	"res_0"	"geometry"	0	0	0	0
4733	934	"arg_1"	"date"	0	0	1	1
4734	934	"arg_2"	"geometry"	0	0	1	2
4735	935	"res_0"	"geometry"	0	0	0	0
4736	935	"arg_1"	"timestamp"	7	0	1	1
4737	935	"arg_2"	"geometry"	0	0	1	2
4738	936	"res_0"	"geometry"	0	0	0	0
4739	936	"arg_1"	"timestamptz"	7	0	1	1
4740	936	"arg_2"	"geometry"	0	0	1	2
4741	937	"res_0"	"geometry"	0	0	0	0
4742	937	"arg_1"	"blob"	0	0	1	1
4743	937	"arg_2"	"geometry"	0	0	1	2
4744	938	"res_0"	"geometry"	0	0	0	0
4745	938	"arg_1"	"geometry"	0	0	1	1
4746	938	"arg_2"	"geometry"	0	0	1	2
4747	939	"res_0"	"geometry"	0	0	0	0
4748	939	"arg_1"	"geometrya"	0	0	1	1
4749	939	"arg_2"	"geometry"	0	0	1	2
4750	940	"res_0"	"geometry"	0	0	0	0
4751	940	"arg_1"	"mbr"	0	0	1	1
4752	940	"arg_2"	"geometry"	0	0	1	2
4753	941	"res_0"	"geometrya"	0	0	0	0
4754	941	"arg_1"	"oid"	63	0	1	1
4755	941	"arg_2"	"geometrya"	0	0	1	2
4756	942	"res_0"	"geometrya"	0	0	0	0
4757	942	"arg_1"	"tinyint"	8	0	1	1
4758	942	"arg_2"	"geometrya"	0	0	1	2
4759	943	"res_0"	"geometrya"	0	0	0	0
4760	943	"arg_1"	"smallint"	16	0	1	1
4761	943	"arg_2"	"geometrya"	0	0	1	2
4762	944	"res_0"	"geometrya"	0	0	0	0
4763	944	"arg_1"	"int"	32	0	1	1
4764	944	"arg_2"	"geometrya"	0	0	1	2
4765	945	"res_0"	"geometrya"	0	0	0	0
4766	945	"arg_1"	"bigint"	64	0	1	1
4767	945	"arg_2"	"geometrya"	0	0	1	2
4768	946	"res_0"	"geometrya"	0	0	0	0
4769	946	"arg_1"	"wrd"	64	0	1	1
4770	946	"arg_2"	"geometrya"	0	0	1	2
4771	947	"res_0"	"geometrya"	0	0	0	0
4772	947	"arg_1"	"decimal"	2	0	1	1
4773	947	"arg_2"	"geometrya"	0	0	1	2
4774	948	"res_0"	"geometrya"	0	0	0	0
4775	948	"arg_1"	"decimal"	4	0	1	1
4776	948	"arg_2"	"geometrya"	0	0	1	2
4777	949	"res_0"	"geometrya"	0	0	0	0
4778	949	"arg_1"	"decimal"	9	0	1	1
4779	949	"arg_2"	"geometrya"	0	0	1	2
4780	950	"res_0"	"geometrya"	0	0	0	0
4781	950	"arg_1"	"decimal"	19	0	1	1
4782	950	"arg_2"	"geometrya"	0	0	1	2
4783	951	"res_0"	"geometrya"	0	0	0	0
4784	951	"arg_1"	"real"	24	0	1	1
4785	951	"arg_2"	"geometrya"	0	0	1	2
4786	952	"res_0"	"geometrya"	0	0	0	0
4787	952	"arg_1"	"double"	53	0	1	1
4788	952	"arg_2"	"geometrya"	0	0	1	2
4789	953	"res_0"	"geometrya"	0	0	0	0
4790	953	"arg_1"	"month_interval"	32	0	1	1
4791	953	"arg_2"	"geometrya"	0	0	1	2
4792	954	"res_0"	"geometrya"	0	0	0	0
4793	954	"arg_1"	"sec_interval"	19	0	1	1
4794	954	"arg_2"	"geometrya"	0	0	1	2
4795	955	"res_0"	"geometrya"	0	0	0	0
4796	955	"arg_1"	"time"	7	0	1	1
4797	955	"arg_2"	"geometrya"	0	0	1	2
4798	956	"res_0"	"geometrya"	0	0	0	0
4799	956	"arg_1"	"timetz"	7	0	1	1
4800	956	"arg_2"	"geometrya"	0	0	1	2
4801	957	"res_0"	"geometrya"	0	0	0	0
4802	957	"arg_1"	"date"	0	0	1	1
4803	957	"arg_2"	"geometrya"	0	0	1	2
4804	958	"res_0"	"geometrya"	0	0	0	0
4805	958	"arg_1"	"timestamp"	7	0	1	1
4806	958	"arg_2"	"geometrya"	0	0	1	2
4807	959	"res_0"	"geometrya"	0	0	0	0
4808	959	"arg_1"	"timestamptz"	7	0	1	1
4809	959	"arg_2"	"geometrya"	0	0	1	2
4810	960	"res_0"	"geometrya"	0	0	0	0
4811	960	"arg_1"	"blob"	0	0	1	1
4812	960	"arg_2"	"geometrya"	0	0	1	2
4813	961	"res_0"	"geometrya"	0	0	0	0
4814	961	"arg_1"	"geometry"	0	0	1	1
4815	961	"arg_2"	"geometrya"	0	0	1	2
4816	962	"res_0"	"geometrya"	0	0	0	0
4817	962	"arg_1"	"geometrya"	0	0	1	1
4818	962	"arg_2"	"geometrya"	0	0	1	2
4819	963	"res_0"	"geometrya"	0	0	0	0
4820	963	"arg_1"	"mbr"	0	0	1	1
4821	963	"arg_2"	"geometrya"	0	0	1	2
4822	964	"res_0"	"mbr"	0	0	0	0
4823	964	"arg_1"	"oid"	63	0	1	1
4824	964	"arg_2"	"mbr"	0	0	1	2
4825	965	"res_0"	"mbr"	0	0	0	0
4826	965	"arg_1"	"tinyint"	8	0	1	1
4827	965	"arg_2"	"mbr"	0	0	1	2
4828	966	"res_0"	"mbr"	0	0	0	0
4829	966	"arg_1"	"smallint"	16	0	1	1
4830	966	"arg_2"	"mbr"	0	0	1	2
4831	967	"res_0"	"mbr"	0	0	0	0
4832	967	"arg_1"	"int"	32	0	1	1
4833	967	"arg_2"	"mbr"	0	0	1	2
4834	968	"res_0"	"mbr"	0	0	0	0
4835	968	"arg_1"	"bigint"	64	0	1	1
4836	968	"arg_2"	"mbr"	0	0	1	2
4837	969	"res_0"	"mbr"	0	0	0	0
4838	969	"arg_1"	"wrd"	64	0	1	1
4839	969	"arg_2"	"mbr"	0	0	1	2
4840	970	"res_0"	"mbr"	0	0	0	0
4841	970	"arg_1"	"decimal"	2	0	1	1
4842	970	"arg_2"	"mbr"	0	0	1	2
4843	971	"res_0"	"mbr"	0	0	0	0
4844	971	"arg_1"	"decimal"	4	0	1	1
4845	971	"arg_2"	"mbr"	0	0	1	2
4846	972	"res_0"	"mbr"	0	0	0	0
4847	972	"arg_1"	"decimal"	9	0	1	1
4848	972	"arg_2"	"mbr"	0	0	1	2
4849	973	"res_0"	"mbr"	0	0	0	0
4850	973	"arg_1"	"decimal"	19	0	1	1
4851	973	"arg_2"	"mbr"	0	0	1	2
4852	974	"res_0"	"mbr"	0	0	0	0
4853	974	"arg_1"	"real"	24	0	1	1
4854	974	"arg_2"	"mbr"	0	0	1	2
4855	975	"res_0"	"mbr"	0	0	0	0
4856	975	"arg_1"	"double"	53	0	1	1
4857	975	"arg_2"	"mbr"	0	0	1	2
4858	976	"res_0"	"mbr"	0	0	0	0
4859	976	"arg_1"	"month_interval"	32	0	1	1
4860	976	"arg_2"	"mbr"	0	0	1	2
4861	977	"res_0"	"mbr"	0	0	0	0
4862	977	"arg_1"	"sec_interval"	19	0	1	1
4863	977	"arg_2"	"mbr"	0	0	1	2
4864	978	"res_0"	"mbr"	0	0	0	0
4865	978	"arg_1"	"time"	7	0	1	1
4866	978	"arg_2"	"mbr"	0	0	1	2
4867	979	"res_0"	"mbr"	0	0	0	0
4868	979	"arg_1"	"timetz"	7	0	1	1
4869	979	"arg_2"	"mbr"	0	0	1	2
4870	980	"res_0"	"mbr"	0	0	0	0
4871	980	"arg_1"	"date"	0	0	1	1
4872	980	"arg_2"	"mbr"	0	0	1	2
4873	981	"res_0"	"mbr"	0	0	0	0
4874	981	"arg_1"	"timestamp"	7	0	1	1
4875	981	"arg_2"	"mbr"	0	0	1	2
4876	982	"res_0"	"mbr"	0	0	0	0
4877	982	"arg_1"	"timestamptz"	7	0	1	1
4878	982	"arg_2"	"mbr"	0	0	1	2
4879	983	"res_0"	"mbr"	0	0	0	0
4880	983	"arg_1"	"blob"	0	0	1	1
4881	983	"arg_2"	"mbr"	0	0	1	2
4882	984	"res_0"	"mbr"	0	0	0	0
4883	984	"arg_1"	"geometry"	0	0	1	1
4884	984	"arg_2"	"mbr"	0	0	1	2
4885	985	"res_0"	"mbr"	0	0	0	0
4886	985	"arg_1"	"geometrya"	0	0	1	1
4887	985	"arg_2"	"mbr"	0	0	1	2
4888	986	"res_0"	"mbr"	0	0	0	0
4889	986	"arg_1"	"mbr"	0	0	1	1
4890	986	"arg_2"	"mbr"	0	0	1	2
4891	987	"res_0"	"real"	24	0	0	0
4892	987	"arg_1"	"real"	24	0	1	1
4893	987	"arg_2"	"real"	24	0	1	2
4894	988	"res_0"	"real"	24	0	0	0
4895	988	"arg_1"	"real"	24	0	1	1
4896	989	"res_0"	"real"	24	0	0	0
4897	989	"arg_1"	"real"	24	0	1	1
4898	990	"res_0"	"real"	24	0	0	0
4899	990	"arg_1"	"real"	24	0	1	1
4900	991	"res_0"	"real"	24	0	0	0
4901	991	"arg_1"	"real"	24	0	1	1
4902	992	"res_0"	"real"	24	0	0	0
4903	992	"arg_1"	"real"	24	0	1	1
4904	993	"res_0"	"real"	24	0	0	0
4905	993	"arg_1"	"real"	24	0	1	1
4906	994	"res_0"	"real"	24	0	0	0
4907	994	"arg_1"	"real"	24	0	1	1
4908	995	"res_0"	"real"	24	0	0	0
4909	995	"arg_1"	"real"	24	0	1	1
4910	996	"res_0"	"real"	24	0	0	0
4911	996	"arg_1"	"real"	24	0	1	1
4912	997	"res_0"	"real"	24	0	0	0
4913	997	"arg_1"	"real"	24	0	1	1
4914	997	"arg_2"	"real"	24	0	1	2
4915	998	"res_0"	"real"	24	0	0	0
4916	998	"arg_1"	"real"	24	0	1	1
4917	999	"res_0"	"real"	24	0	0	0
4918	999	"arg_1"	"real"	24	0	1	1
4919	1000	"res_0"	"real"	24	0	0	0
4920	1000	"arg_1"	"real"	24	0	1	1
4921	1001	"res_0"	"real"	24	0	0	0
4922	1001	"arg_1"	"real"	24	0	1	1
4923	1002	"res_0"	"real"	24	0	0	0
4924	1002	"arg_1"	"real"	24	0	1	1
4925	1003	"res_0"	"real"	24	0	0	0
4926	1003	"arg_1"	"real"	24	0	1	1
4927	1004	"res_0"	"real"	24	0	0	0
4928	1004	"arg_1"	"real"	24	0	1	1
4929	1005	"res_0"	"real"	24	0	0	0
4930	1005	"arg_1"	"real"	24	0	1	1
4931	1006	"res_0"	"double"	53	0	0	0
4932	1006	"arg_1"	"double"	53	0	1	1
4933	1006	"arg_2"	"double"	53	0	1	2
4934	1007	"res_0"	"double"	53	0	0	0
4935	1007	"arg_1"	"double"	53	0	1	1
4936	1008	"res_0"	"double"	53	0	0	0
4937	1008	"arg_1"	"double"	53	0	1	1
4938	1009	"res_0"	"double"	53	0	0	0
4939	1009	"arg_1"	"double"	53	0	1	1
4940	1010	"res_0"	"double"	53	0	0	0
4941	1010	"arg_1"	"double"	53	0	1	1
4942	1011	"res_0"	"double"	53	0	0	0
4943	1011	"arg_1"	"double"	53	0	1	1
4944	1012	"res_0"	"double"	53	0	0	0
4945	1012	"arg_1"	"double"	53	0	1	1
4946	1013	"res_0"	"double"	53	0	0	0
4947	1013	"arg_1"	"double"	53	0	1	1
4948	1014	"res_0"	"double"	53	0	0	0
4949	1014	"arg_1"	"double"	53	0	1	1
4950	1015	"res_0"	"double"	53	0	0	0
4951	1015	"arg_1"	"double"	53	0	1	1
4952	1016	"res_0"	"double"	53	0	0	0
4953	1016	"arg_1"	"double"	53	0	1	1
4954	1016	"arg_2"	"double"	53	0	1	2
4955	1017	"res_0"	"double"	53	0	0	0
4956	1017	"arg_1"	"double"	53	0	1	1
4957	1018	"res_0"	"double"	53	0	0	0
4958	1018	"arg_1"	"double"	53	0	1	1
4959	1019	"res_0"	"double"	53	0	0	0
4960	1019	"arg_1"	"double"	53	0	1	1
4961	1020	"res_0"	"double"	53	0	0	0
4962	1020	"arg_1"	"double"	53	0	1	1
4963	1021	"res_0"	"double"	53	0	0	0
4964	1021	"arg_1"	"double"	53	0	1	1
4965	1022	"res_0"	"double"	53	0	0	0
4966	1022	"arg_1"	"double"	53	0	1	1
4967	1023	"res_0"	"double"	53	0	0	0
4968	1023	"arg_1"	"double"	53	0	1	1
4969	1024	"res_0"	"double"	53	0	0	0
4970	1024	"arg_1"	"double"	53	0	1	1
4971	1025	"res_0"	"double"	53	0	0	0
4972	1026	"res_0"	"int"	32	0	0	0
4973	1027	"res_0"	"int"	32	0	0	0
4974	1027	"arg_1"	"int"	32	0	1	1
4975	1028	"res_0"	"date"	0	0	0	0
4976	1029	"res_0"	"date"	0	0	0	0
4977	1030	"res_0"	"timetz"	7	0	0	0
4978	1031	"res_0"	"timetz"	7	0	0	0
4979	1032	"res_0"	"timestamptz"	7	0	0	0
4980	1033	"res_0"	"time"	7	0	0	0
4981	1034	"res_0"	"timestamp"	7	0	0	0
4982	1035	"res_0"	"month_interval"	32	0	0	0
4983	1035	"arg_1"	"date"	0	0	1	1
4984	1035	"arg_2"	"date"	0	0	1	2
4985	1036	"res_0"	"sec_interval"	19	0	0	0
4986	1036	"arg_1"	"timetz"	7	0	1	1
4987	1036	"arg_2"	"timetz"	7	0	1	2
4988	1037	"res_0"	"sec_interval"	19	0	0	0
4989	1037	"arg_1"	"time"	7	0	1	1
4990	1037	"arg_2"	"time"	7	0	1	2
4991	1038	"res_0"	"sec_interval"	19	0	0	0
4992	1038	"arg_1"	"timestamptz"	7	0	1	1
4993	1038	"arg_2"	"timestamptz"	7	0	1	2
4994	1039	"res_0"	"sec_interval"	19	0	0	0
4995	1039	"arg_1"	"timestamp"	7	0	1	1
4996	1039	"arg_2"	"timestamp"	7	0	1	2
4997	1040	"res_0"	"date"	0	0	0	0
4998	1040	"arg_1"	"date"	0	0	1	1
4999	1040	"arg_2"	"sec_interval"	19	0	1	2
5000	1041	"res_0"	"date"	0	0	0	0
5001	1041	"arg_1"	"date"	0	0	1	1
5002	1041	"arg_2"	"month_interval"	32	0	1	2
5003	1042	"res_0"	"time"	7	0	0	0
5004	1042	"arg_1"	"time"	7	0	1	1
5005	1042	"arg_2"	"sec_interval"	19	0	1	2
5006	1043	"res_0"	"timetz"	7	0	0	0
5007	1043	"arg_1"	"timetz"	7	0	1	1
5008	1043	"arg_2"	"sec_interval"	19	0	1	2
5009	1044	"res_0"	"timestamp"	7	0	0	0
5010	1044	"arg_1"	"timestamp"	7	0	1	1
5011	1044	"arg_2"	"sec_interval"	19	0	1	2
5012	1045	"res_0"	"timestamp"	7	0	0	0
5013	1045	"arg_1"	"timestamp"	7	0	1	1
5014	1045	"arg_2"	"month_interval"	32	0	1	2
5015	1046	"res_0"	"timestamptz"	7	0	0	0
5016	1046	"arg_1"	"timestamptz"	7	0	1	1
5017	1046	"arg_2"	"sec_interval"	19	0	1	2
5018	1047	"res_0"	"timestamptz"	7	0	0	0
5019	1047	"arg_1"	"timestamptz"	7	0	1	1
5020	1047	"arg_2"	"month_interval"	32	0	1	2
5021	1048	"res_0"	"date"	0	0	0	0
5022	1048	"arg_1"	"date"	0	0	1	1
5023	1048	"arg_2"	"sec_interval"	19	0	1	2
5024	1049	"res_0"	"date"	0	0	0	0
5025	1049	"arg_1"	"date"	0	0	1	1
5026	1049	"arg_2"	"month_interval"	32	0	1	2
5027	1050	"res_0"	"timestamp"	7	0	0	0
5028	1050	"arg_1"	"timestamp"	7	0	1	1
5029	1050	"arg_2"	"sec_interval"	19	0	1	2
5030	1051	"res_0"	"timestamp"	7	0	0	0
5031	1051	"arg_1"	"timestamp"	7	0	1	1
5032	1051	"arg_2"	"month_interval"	32	0	1	2
5033	1052	"res_0"	"timestamptz"	7	0	0	0
5034	1052	"arg_1"	"timestamptz"	7	0	1	1
5035	1052	"arg_2"	"sec_interval"	19	0	1	2
5036	1053	"res_0"	"timestamptz"	7	0	0	0
5037	1053	"arg_1"	"timestamptz"	7	0	1	1
5038	1053	"arg_2"	"month_interval"	32	0	1	2
5039	1054	"res_0"	"time"	7	0	0	0
5040	1054	"arg_1"	"time"	7	0	1	1
5041	1054	"arg_2"	"sec_interval"	19	0	1	2
5042	1055	"res_0"	"timetz"	7	0	0	0
5043	1055	"arg_1"	"timetz"	7	0	1	1
5044	1055	"arg_2"	"sec_interval"	19	0	1	2
5045	1056	"res_0"	"sec_interval"	19	0	0	0
5046	1057	"res_0"	"int"	32	0	0	0
5047	1057	"arg_1"	"date"	0	0	1	1
5048	1058	"res_0"	"int"	32	0	0	0
5049	1058	"arg_1"	"date"	0	0	1	1
5050	1059	"res_0"	"int"	32	0	0	0
5051	1059	"arg_1"	"date"	0	0	1	1
5052	1060	"res_0"	"int"	32	0	0	0
5053	1060	"arg_1"	"time"	7	0	1	1
5054	1061	"res_0"	"int"	32	0	0	0
5055	1061	"arg_1"	"time"	7	0	1	1
5056	1062	"res_0"	"decimal"	9	3	0	0
5057	1062	"arg_1"	"time"	7	0	1	1
5058	1063	"res_0"	"int"	32	0	0	0
5059	1063	"arg_1"	"timetz"	7	0	1	1
5060	1064	"res_0"	"int"	32	0	0	0
5061	1064	"arg_1"	"timetz"	7	0	1	1
5062	1065	"res_0"	"decimal"	9	3	0	0
5063	1065	"arg_1"	"timetz"	7	0	1	1
5064	1066	"res_0"	"int"	32	0	0	0
5065	1066	"arg_1"	"timestamp"	7	0	1	1
5066	1067	"res_0"	"int"	32	0	0	0
5067	1067	"arg_1"	"timestamp"	7	0	1	1
5068	1068	"res_0"	"int"	32	0	0	0
5069	1068	"arg_1"	"timestamp"	7	0	1	1
5070	1069	"res_0"	"int"	32	0	0	0
5071	1069	"arg_1"	"timestamp"	7	0	1	1
5072	1070	"res_0"	"int"	32	0	0	0
5073	1070	"arg_1"	"timestamp"	7	0	1	1
5074	1071	"res_0"	"decimal"	9	3	0	0
5075	1071	"arg_1"	"timestamp"	7	0	1	1
5076	1072	"res_0"	"int"	32	0	0	0
5077	1072	"arg_1"	"timestamptz"	7	0	1	1
5078	1073	"res_0"	"int"	32	0	0	0
5079	1073	"arg_1"	"timestamptz"	7	0	1	1
5080	1074	"res_0"	"int"	32	0	0	0
5081	1074	"arg_1"	"timestamptz"	7	0	1	1
5082	1075	"res_0"	"int"	32	0	0	0
5083	1075	"arg_1"	"timestamptz"	7	0	1	1
5084	1076	"res_0"	"int"	32	0	0	0
5085	1076	"arg_1"	"timestamptz"	7	0	1	1
5086	1077	"res_0"	"decimal"	9	3	0	0
5087	1077	"arg_1"	"timestamptz"	7	0	1	1
5088	1078	"res_0"	"int"	32	0	0	0
5089	1078	"arg_1"	"month_interval"	32	0	1	1
5090	1079	"res_0"	"int"	32	0	0	0
5091	1079	"arg_1"	"month_interval"	32	0	1	1
5092	1080	"res_0"	"bigint"	64	0	0	0
5093	1080	"arg_1"	"sec_interval"	19	0	1	1
5094	1081	"res_0"	"int"	32	0	0	0
5095	1081	"arg_1"	"sec_interval"	19	0	1	1
5096	1082	"res_0"	"int"	32	0	0	0
5097	1082	"arg_1"	"sec_interval"	19	0	1	1
5098	1083	"res_0"	"int"	32	0	0	0
5099	1083	"arg_1"	"sec_interval"	19	0	1	1
5100	1084	"res_0"	"int"	32	0	0	0
5101	1084	"arg_1"	"date"	0	0	1	1
5102	1085	"res_0"	"int"	32	0	0	0
5103	1085	"arg_1"	"date"	0	0	1	1
5104	1086	"res_0"	"int"	32	0	0	0
5105	1086	"arg_1"	"date"	0	0	1	1
5106	1087	"res_0"	"int"	32	0	0	0
5107	1087	"arg_1"	"date"	0	0	1	1
5108	1088	"res_0"	"int"	32	0	0	0
5109	1088	"arg_1"	"date"	0	0	1	1
5110	1089	"res_0"	"bigint"	64	0	0	0
5111	1089	"arg_1"	"varchar"	0	0	1	1
5112	1089	"arg_2"	"varchar"	0	0	1	2
5113	1090	"res_0"	"bigint"	64	0	0	0
5114	1090	"arg_1"	"varchar"	0	0	1	1
5115	1090	"arg_2"	"varchar"	0	0	1	2
5116	1091	"res_0"	"bigint"	64	0	0	0
5117	1091	"arg_1"	"varchar"	0	0	1	1
5118	1091	"arg_2"	"varchar"	0	0	1	2
5119	1091	"arg_3"	"bigint"	64	0	1	3
5120	1092	"res_0"	"tinyint"	8	0	0	0
5121	1092	"arg_1"	"char"	0	0	1	1
5122	1092	"arg_2"	"boolean"	1	0	1	2
5123	1093	"res_0"	"smallint"	16	0	0	0
5124	1093	"arg_1"	"char"	0	0	1	1
5125	1093	"arg_2"	"boolean"	1	0	1	2
5126	1094	"res_0"	"int"	32	0	0	0
5127	1094	"arg_1"	"char"	0	0	1	1
5128	1094	"arg_2"	"boolean"	1	0	1	2
5129	1095	"res_0"	"char"	0	0	0	0
5130	1095	"arg_1"	"char"	0	0	1	1
5131	1096	"res_0"	"int"	32	0	0	0
5132	1096	"arg_1"	"char"	0	0	1	1
5133	1096	"arg_2"	"char"	0	0	1	2
5134	1097	"res_0"	"int"	32	0	0	0
5135	1097	"arg_1"	"char"	0	0	1	1
5136	1097	"arg_2"	"char"	0	0	1	2
5137	1097	"arg_3"	"int"	32	0	1	3
5138	1098	"res_0"	"char"	0	0	0	0
5139	1098	"arg_1"	"char"	0	0	1	1
5140	1098	"arg_2"	"int"	32	0	1	2
5141	1099	"res_0"	"char"	0	0	0	0
5142	1099	"arg_1"	"char"	0	0	1	1
5143	1099	"arg_2"	"int"	32	0	1	2
5144	1099	"arg_3"	"int"	32	0	1	3
5145	1100	"res_0"	"boolean"	1	0	0	0
5146	1100	"arg_1"	"char"	0	0	1	1
5147	1100	"arg_2"	"char"	0	0	1	2
5148	1101	"res_0"	"boolean"	1	0	0	0
5149	1101	"arg_1"	"char"	0	0	1	1
5150	1101	"arg_2"	"char"	0	0	1	2
5151	1101	"arg_3"	"char"	0	0	1	3
5152	1102	"res_0"	"boolean"	1	0	0	0
5153	1102	"arg_1"	"char"	0	0	1	1
5154	1102	"arg_2"	"char"	0	0	1	2
5155	1103	"res_0"	"boolean"	1	0	0	0
5156	1103	"arg_1"	"char"	0	0	1	1
5157	1103	"arg_2"	"char"	0	0	1	2
5158	1103	"arg_3"	"char"	0	0	1	3
5159	1104	"res_0"	"boolean"	1	0	0	0
5160	1104	"arg_1"	"char"	0	0	1	1
5161	1104	"arg_2"	"char"	0	0	1	2
5162	1105	"res_0"	"boolean"	1	0	0	0
5163	1105	"arg_1"	"char"	0	0	1	1
5164	1105	"arg_2"	"char"	0	0	1	2
5165	1105	"arg_3"	"char"	0	0	1	3
5166	1106	"res_0"	"boolean"	1	0	0	0
5167	1106	"arg_1"	"char"	0	0	1	1
5168	1106	"arg_2"	"char"	0	0	1	2
5169	1107	"res_0"	"boolean"	1	0	0	0
5170	1107	"arg_1"	"char"	0	0	1	1
5171	1107	"arg_2"	"char"	0	0	1	2
5172	1107	"arg_3"	"char"	0	0	1	3
5173	1108	"res_0"	"int"	32	0	0	0
5174	1108	"arg_1"	"char"	0	0	1	1
5175	1108	"arg_2"	"char"	0	0	1	2
5176	1109	"res_0"	"char"	0	0	0	0
5177	1109	"arg_1"	"char"	0	0	1	1
5178	1109	"arg_2"	"int"	32	0	1	2
5179	1110	"res_0"	"char"	0	0	0	0
5180	1110	"arg_1"	"char"	0	0	1	1
5181	1110	"arg_2"	"char"	0	0	1	2
5182	1111	"res_0"	"int"	32	0	0	0
5183	1111	"arg_1"	"char"	0	0	1	1
5184	1112	"res_0"	"char"	0	0	0	0
5185	1112	"arg_1"	"int"	32	0	1	1
5186	1113	"res_0"	"int"	32	0	0	0
5187	1113	"arg_1"	"char"	0	0	1	1
5188	1114	"res_0"	"char"	0	0	0	0
5189	1114	"arg_1"	"char"	0	0	1	1
5190	1114	"arg_2"	"int"	32	0	1	2
5191	1115	"res_0"	"char"	0	0	0	0
5192	1115	"arg_1"	"char"	0	0	1	1
5193	1115	"arg_2"	"int"	32	0	1	2
5194	1116	"res_0"	"char"	0	0	0	0
5195	1116	"arg_1"	"char"	0	0	1	1
5196	1117	"res_0"	"char"	0	0	0	0
5197	1117	"arg_1"	"char"	0	0	1	1
5198	1118	"res_0"	"char"	0	0	0	0
5199	1118	"arg_1"	"char"	0	0	1	1
5200	1119	"res_0"	"char"	0	0	0	0
5201	1119	"arg_1"	"char"	0	0	1	1
5202	1120	"res_0"	"char"	0	0	0	0
5203	1120	"arg_1"	"char"	0	0	1	1
5204	1121	"res_0"	"char"	0	0	0	0
5205	1121	"arg_1"	"char"	0	0	1	1
5206	1121	"arg_2"	"char"	0	0	1	2
5207	1122	"res_0"	"char"	0	0	0	0
5208	1122	"arg_1"	"char"	0	0	1	1
5209	1123	"res_0"	"char"	0	0	0	0
5210	1123	"arg_1"	"char"	0	0	1	1
5211	1123	"arg_2"	"char"	0	0	1	2
5212	1124	"res_0"	"char"	0	0	0	0
5213	1124	"arg_1"	"char"	0	0	1	1
5214	1125	"res_0"	"char"	0	0	0	0
5215	1125	"arg_1"	"char"	0	0	1	1
5216	1125	"arg_2"	"char"	0	0	1	2
5217	1126	"res_0"	"char"	0	0	0	0
5218	1126	"arg_1"	"char"	0	0	1	1
5219	1126	"arg_2"	"int"	32	0	1	2
5220	1127	"res_0"	"char"	0	0	0	0
5221	1127	"arg_1"	"char"	0	0	1	1
5222	1127	"arg_2"	"int"	32	0	1	2
5223	1127	"arg_3"	"char"	0	0	1	3
5224	1128	"res_0"	"char"	0	0	0	0
5225	1128	"arg_1"	"char"	0	0	1	1
5226	1128	"arg_2"	"int"	32	0	1	2
5227	1129	"res_0"	"char"	0	0	0	0
5228	1129	"arg_1"	"char"	0	0	1	1
5229	1129	"arg_2"	"int"	32	0	1	2
5230	1129	"arg_3"	"char"	0	0	1	3
5231	1130	"res_0"	"char"	0	0	0	0
5232	1130	"arg_1"	"char"	0	0	1	1
5233	1130	"arg_2"	"int"	32	0	1	2
5234	1130	"arg_3"	"int"	32	0	1	3
5235	1130	"arg_4"	"char"	0	0	1	4
5236	1131	"res_0"	"char"	0	0	0	0
5237	1131	"arg_1"	"char"	0	0	1	1
5238	1131	"arg_2"	"char"	0	0	1	2
5239	1131	"arg_3"	"char"	0	0	1	3
5240	1132	"res_0"	"char"	0	0	0	0
5241	1132	"arg_1"	"char"	0	0	1	1
5242	1132	"arg_2"	"int"	32	0	1	2
5243	1133	"res_0"	"char"	0	0	0	0
5244	1133	"arg_1"	"int"	32	0	1	1
5245	1134	"res_0"	"int"	32	0	0	0
5246	1134	"arg_1"	"char"	0	0	1	1
5247	1135	"res_0"	"int"	32	0	0	0
5248	1135	"arg_1"	"char"	0	0	1	1
5249	1136	"res_0"	"int"	32	0	0	0
5250	1136	"arg_1"	"char"	0	0	1	1
5251	1137	"res_0"	"char"	0	0	0	0
5252	1137	"arg_1"	"char"	0	0	1	1
5253	1138	"res_0"	"int"	32	0	0	0
5254	1138	"arg_1"	"char"	0	0	1	1
5255	1138	"arg_2"	"char"	0	0	1	2
5256	1139	"res_0"	"int"	32	0	0	0
5257	1139	"arg_1"	"char"	0	0	1	1
5258	1139	"arg_2"	"char"	0	0	1	2
5259	1140	"res_0"	"int"	32	0	0	0
5260	1140	"arg_1"	"char"	0	0	1	1
5261	1140	"arg_2"	"char"	0	0	1	2
5262	1141	"res_0"	"double"	53	0	0	0
5263	1141	"arg_1"	"char"	0	0	1	1
5264	1141	"arg_2"	"char"	0	0	1	2
5265	1142	"res_0"	"char"	0	0	0	0
5266	1142	"arg_1"	"char"	0	0	1	1
5267	1143	"res_0"	"int"	32	0	0	0
5268	1143	"arg_1"	"char"	0	0	1	1
5269	1143	"arg_2"	"char"	0	0	1	2
5270	1144	"res_0"	"int"	32	0	0	0
5271	1144	"arg_1"	"char"	0	0	1	1
5272	1144	"arg_2"	"char"	0	0	1	2
5273	1144	"arg_3"	"int"	32	0	1	3
5274	1144	"arg_4"	"int"	32	0	1	4
5275	1144	"arg_5"	"int"	32	0	1	5
5276	1145	"res_0"	"tinyint"	8	0	0	0
5277	1145	"arg_1"	"varchar"	0	0	1	1
5278	1145	"arg_2"	"boolean"	1	0	1	2
5279	1146	"res_0"	"smallint"	16	0	0	0
5280	1146	"arg_1"	"varchar"	0	0	1	1
5281	1146	"arg_2"	"boolean"	1	0	1	2
5282	1147	"res_0"	"int"	32	0	0	0
5283	1147	"arg_1"	"varchar"	0	0	1	1
5284	1147	"arg_2"	"boolean"	1	0	1	2
5285	1148	"res_0"	"varchar"	0	0	0	0
5286	1148	"arg_1"	"varchar"	0	0	1	1
5287	1149	"res_0"	"int"	32	0	0	0
5288	1149	"arg_1"	"varchar"	0	0	1	1
5289	1149	"arg_2"	"varchar"	0	0	1	2
5290	1150	"res_0"	"int"	32	0	0	0
5291	1150	"arg_1"	"varchar"	0	0	1	1
5292	1150	"arg_2"	"varchar"	0	0	1	2
5293	1150	"arg_3"	"int"	32	0	1	3
5294	1151	"res_0"	"varchar"	0	0	0	0
5295	1151	"arg_1"	"varchar"	0	0	1	1
5296	1151	"arg_2"	"int"	32	0	1	2
5297	1152	"res_0"	"varchar"	0	0	0	0
5298	1152	"arg_1"	"varchar"	0	0	1	1
5299	1152	"arg_2"	"int"	32	0	1	2
5300	1152	"arg_3"	"int"	32	0	1	3
5301	1153	"res_0"	"boolean"	1	0	0	0
5302	1153	"arg_1"	"varchar"	0	0	1	1
5303	1153	"arg_2"	"varchar"	0	0	1	2
5304	1154	"res_0"	"boolean"	1	0	0	0
5305	1154	"arg_1"	"varchar"	0	0	1	1
5306	1154	"arg_2"	"varchar"	0	0	1	2
5307	1154	"arg_3"	"varchar"	0	0	1	3
5308	1155	"res_0"	"boolean"	1	0	0	0
5309	1155	"arg_1"	"varchar"	0	0	1	1
5310	1155	"arg_2"	"varchar"	0	0	1	2
5311	1156	"res_0"	"boolean"	1	0	0	0
5312	1156	"arg_1"	"varchar"	0	0	1	1
5313	1156	"arg_2"	"varchar"	0	0	1	2
5314	1156	"arg_3"	"varchar"	0	0	1	3
5315	1157	"res_0"	"boolean"	1	0	0	0
5316	1157	"arg_1"	"varchar"	0	0	1	1
5317	1157	"arg_2"	"varchar"	0	0	1	2
5318	1158	"res_0"	"boolean"	1	0	0	0
5319	1158	"arg_1"	"varchar"	0	0	1	1
5320	1158	"arg_2"	"varchar"	0	0	1	2
5321	1158	"arg_3"	"varchar"	0	0	1	3
5322	1159	"res_0"	"boolean"	1	0	0	0
5323	1159	"arg_1"	"varchar"	0	0	1	1
5324	1159	"arg_2"	"varchar"	0	0	1	2
5325	1160	"res_0"	"boolean"	1	0	0	0
5326	1160	"arg_1"	"varchar"	0	0	1	1
5327	1160	"arg_2"	"varchar"	0	0	1	2
5328	1160	"arg_3"	"varchar"	0	0	1	3
5329	1161	"res_0"	"int"	32	0	0	0
5330	1161	"arg_1"	"varchar"	0	0	1	1
5331	1161	"arg_2"	"varchar"	0	0	1	2
5332	1162	"res_0"	"varchar"	0	0	0	0
5333	1162	"arg_1"	"varchar"	0	0	1	1
5334	1162	"arg_2"	"int"	32	0	1	2
5335	1163	"res_0"	"varchar"	0	0	0	0
5336	1163	"arg_1"	"varchar"	0	0	1	1
5337	1163	"arg_2"	"varchar"	0	0	1	2
5338	1164	"res_0"	"int"	32	0	0	0
5339	1164	"arg_1"	"varchar"	0	0	1	1
5340	1165	"res_0"	"varchar"	0	0	0	0
5341	1165	"arg_1"	"int"	32	0	1	1
5342	1166	"res_0"	"int"	32	0	0	0
5343	1166	"arg_1"	"varchar"	0	0	1	1
5344	1167	"res_0"	"varchar"	0	0	0	0
5345	1167	"arg_1"	"varchar"	0	0	1	1
5346	1167	"arg_2"	"int"	32	0	1	2
5347	1168	"res_0"	"varchar"	0	0	0	0
5348	1168	"arg_1"	"varchar"	0	0	1	1
5349	1168	"arg_2"	"int"	32	0	1	2
5350	1169	"res_0"	"varchar"	0	0	0	0
5351	1169	"arg_1"	"varchar"	0	0	1	1
5352	1170	"res_0"	"varchar"	0	0	0	0
5353	1170	"arg_1"	"varchar"	0	0	1	1
5354	1171	"res_0"	"varchar"	0	0	0	0
5355	1171	"arg_1"	"varchar"	0	0	1	1
5356	1172	"res_0"	"varchar"	0	0	0	0
5357	1172	"arg_1"	"varchar"	0	0	1	1
5358	1173	"res_0"	"varchar"	0	0	0	0
5359	1173	"arg_1"	"varchar"	0	0	1	1
5360	1174	"res_0"	"varchar"	0	0	0	0
5361	1174	"arg_1"	"varchar"	0	0	1	1
5362	1174	"arg_2"	"varchar"	0	0	1	2
5363	1175	"res_0"	"varchar"	0	0	0	0
5364	1175	"arg_1"	"varchar"	0	0	1	1
5365	1176	"res_0"	"varchar"	0	0	0	0
5366	1176	"arg_1"	"varchar"	0	0	1	1
5367	1176	"arg_2"	"varchar"	0	0	1	2
5368	1177	"res_0"	"varchar"	0	0	0	0
5369	1177	"arg_1"	"varchar"	0	0	1	1
5370	1178	"res_0"	"varchar"	0	0	0	0
5371	1178	"arg_1"	"varchar"	0	0	1	1
5372	1178	"arg_2"	"varchar"	0	0	1	2
5373	1179	"res_0"	"varchar"	0	0	0	0
5374	1179	"arg_1"	"varchar"	0	0	1	1
5375	1179	"arg_2"	"int"	32	0	1	2
5376	1180	"res_0"	"varchar"	0	0	0	0
5377	1180	"arg_1"	"varchar"	0	0	1	1
5378	1180	"arg_2"	"int"	32	0	1	2
5379	1180	"arg_3"	"varchar"	0	0	1	3
5380	1181	"res_0"	"varchar"	0	0	0	0
5381	1181	"arg_1"	"varchar"	0	0	1	1
5382	1181	"arg_2"	"int"	32	0	1	2
5383	1182	"res_0"	"varchar"	0	0	0	0
5384	1182	"arg_1"	"varchar"	0	0	1	1
5385	1182	"arg_2"	"int"	32	0	1	2
5386	1182	"arg_3"	"varchar"	0	0	1	3
5387	1183	"res_0"	"varchar"	0	0	0	0
5388	1183	"arg_1"	"varchar"	0	0	1	1
5389	1183	"arg_2"	"int"	32	0	1	2
5390	1183	"arg_3"	"int"	32	0	1	3
5391	1183	"arg_4"	"varchar"	0	0	1	4
5392	1184	"res_0"	"varchar"	0	0	0	0
5393	1184	"arg_1"	"varchar"	0	0	1	1
5394	1184	"arg_2"	"varchar"	0	0	1	2
5395	1184	"arg_3"	"varchar"	0	0	1	3
5396	1185	"res_0"	"varchar"	0	0	0	0
5397	1185	"arg_1"	"varchar"	0	0	1	1
5398	1185	"arg_2"	"int"	32	0	1	2
5399	1186	"res_0"	"varchar"	0	0	0	0
5400	1186	"arg_1"	"int"	32	0	1	1
5401	1187	"res_0"	"int"	32	0	0	0
5402	1187	"arg_1"	"varchar"	0	0	1	1
5403	1188	"res_0"	"int"	32	0	0	0
5404	1188	"arg_1"	"varchar"	0	0	1	1
5405	1189	"res_0"	"int"	32	0	0	0
5406	1189	"arg_1"	"varchar"	0	0	1	1
5407	1190	"res_0"	"varchar"	0	0	0	0
5408	1190	"arg_1"	"varchar"	0	0	1	1
5409	1191	"res_0"	"int"	32	0	0	0
5410	1191	"arg_1"	"varchar"	0	0	1	1
5411	1191	"arg_2"	"varchar"	0	0	1	2
5412	1192	"res_0"	"int"	32	0	0	0
5413	1192	"arg_1"	"varchar"	0	0	1	1
5414	1192	"arg_2"	"varchar"	0	0	1	2
5415	1193	"res_0"	"int"	32	0	0	0
5416	1193	"arg_1"	"varchar"	0	0	1	1
5417	1193	"arg_2"	"varchar"	0	0	1	2
5418	1194	"res_0"	"double"	53	0	0	0
5419	1194	"arg_1"	"varchar"	0	0	1	1
5420	1194	"arg_2"	"varchar"	0	0	1	2
5421	1195	"res_0"	"varchar"	0	0	0	0
5422	1195	"arg_1"	"varchar"	0	0	1	1
5423	1196	"res_0"	"int"	32	0	0	0
5424	1196	"arg_1"	"varchar"	0	0	1	1
5425	1196	"arg_2"	"varchar"	0	0	1	2
5426	1197	"res_0"	"int"	32	0	0	0
5427	1197	"arg_1"	"varchar"	0	0	1	1
5428	1197	"arg_2"	"varchar"	0	0	1	2
5429	1197	"arg_3"	"int"	32	0	1	3
5430	1197	"arg_4"	"int"	32	0	1	4
5431	1197	"arg_5"	"int"	32	0	1	5
5432	1198	"res_0"	"tinyint"	8	0	0	0
5433	1198	"arg_1"	"clob"	0	0	1	1
5434	1198	"arg_2"	"boolean"	1	0	1	2
5435	1199	"res_0"	"smallint"	16	0	0	0
5436	1199	"arg_1"	"clob"	0	0	1	1
5437	1199	"arg_2"	"boolean"	1	0	1	2
5438	1200	"res_0"	"int"	32	0	0	0
5439	1200	"arg_1"	"clob"	0	0	1	1
5440	1200	"arg_2"	"boolean"	1	0	1	2
5441	1201	"res_0"	"clob"	0	0	0	0
5442	1201	"arg_1"	"clob"	0	0	1	1
5443	1202	"res_0"	"int"	32	0	0	0
5444	1202	"arg_1"	"clob"	0	0	1	1
5445	1202	"arg_2"	"clob"	0	0	1	2
5446	1203	"res_0"	"int"	32	0	0	0
5447	1203	"arg_1"	"clob"	0	0	1	1
5448	1203	"arg_2"	"clob"	0	0	1	2
5449	1203	"arg_3"	"int"	32	0	1	3
5450	1204	"res_0"	"clob"	0	0	0	0
5451	1204	"arg_1"	"clob"	0	0	1	1
5452	1204	"arg_2"	"int"	32	0	1	2
5453	1205	"res_0"	"clob"	0	0	0	0
5454	1205	"arg_1"	"clob"	0	0	1	1
5455	1205	"arg_2"	"int"	32	0	1	2
5456	1205	"arg_3"	"int"	32	0	1	3
5457	1206	"res_0"	"boolean"	1	0	0	0
5458	1206	"arg_1"	"clob"	0	0	1	1
5459	1206	"arg_2"	"clob"	0	0	1	2
5460	1207	"res_0"	"boolean"	1	0	0	0
5461	1207	"arg_1"	"clob"	0	0	1	1
5462	1207	"arg_2"	"clob"	0	0	1	2
5463	1207	"arg_3"	"clob"	0	0	1	3
5464	1208	"res_0"	"boolean"	1	0	0	0
5465	1208	"arg_1"	"clob"	0	0	1	1
5466	1208	"arg_2"	"clob"	0	0	1	2
5467	1209	"res_0"	"boolean"	1	0	0	0
5468	1209	"arg_1"	"clob"	0	0	1	1
5469	1209	"arg_2"	"clob"	0	0	1	2
5470	1209	"arg_3"	"clob"	0	0	1	3
5471	1210	"res_0"	"boolean"	1	0	0	0
5472	1210	"arg_1"	"clob"	0	0	1	1
5473	1210	"arg_2"	"clob"	0	0	1	2
5474	1211	"res_0"	"boolean"	1	0	0	0
5475	1211	"arg_1"	"clob"	0	0	1	1
5476	1211	"arg_2"	"clob"	0	0	1	2
5477	1211	"arg_3"	"clob"	0	0	1	3
5478	1212	"res_0"	"boolean"	1	0	0	0
5479	1212	"arg_1"	"clob"	0	0	1	1
5480	1212	"arg_2"	"clob"	0	0	1	2
5481	1213	"res_0"	"boolean"	1	0	0	0
5482	1213	"arg_1"	"clob"	0	0	1	1
5483	1213	"arg_2"	"clob"	0	0	1	2
5484	1213	"arg_3"	"clob"	0	0	1	3
5485	1214	"res_0"	"int"	32	0	0	0
5486	1214	"arg_1"	"clob"	0	0	1	1
5487	1214	"arg_2"	"clob"	0	0	1	2
5488	1215	"res_0"	"clob"	0	0	0	0
5489	1215	"arg_1"	"clob"	0	0	1	1
5490	1215	"arg_2"	"int"	32	0	1	2
5491	1216	"res_0"	"clob"	0	0	0	0
5492	1216	"arg_1"	"clob"	0	0	1	1
5493	1216	"arg_2"	"clob"	0	0	1	2
5494	1217	"res_0"	"int"	32	0	0	0
5495	1217	"arg_1"	"clob"	0	0	1	1
5496	1218	"res_0"	"clob"	0	0	0	0
5497	1218	"arg_1"	"int"	32	0	1	1
5498	1219	"res_0"	"int"	32	0	0	0
5499	1219	"arg_1"	"clob"	0	0	1	1
5500	1220	"res_0"	"clob"	0	0	0	0
5501	1220	"arg_1"	"clob"	0	0	1	1
5502	1220	"arg_2"	"int"	32	0	1	2
5503	1221	"res_0"	"clob"	0	0	0	0
5504	1221	"arg_1"	"clob"	0	0	1	1
5505	1221	"arg_2"	"int"	32	0	1	2
5506	1222	"res_0"	"clob"	0	0	0	0
5507	1222	"arg_1"	"clob"	0	0	1	1
5508	1223	"res_0"	"clob"	0	0	0	0
5509	1223	"arg_1"	"clob"	0	0	1	1
5510	1224	"res_0"	"clob"	0	0	0	0
5511	1224	"arg_1"	"clob"	0	0	1	1
5512	1225	"res_0"	"clob"	0	0	0	0
5513	1225	"arg_1"	"clob"	0	0	1	1
5514	1226	"res_0"	"clob"	0	0	0	0
5515	1226	"arg_1"	"clob"	0	0	1	1
5516	1227	"res_0"	"clob"	0	0	0	0
5517	1227	"arg_1"	"clob"	0	0	1	1
5518	1227	"arg_2"	"clob"	0	0	1	2
5519	1228	"res_0"	"clob"	0	0	0	0
5520	1228	"arg_1"	"clob"	0	0	1	1
5521	1229	"res_0"	"clob"	0	0	0	0
5522	1229	"arg_1"	"clob"	0	0	1	1
5523	1229	"arg_2"	"clob"	0	0	1	2
5524	1230	"res_0"	"clob"	0	0	0	0
5525	1230	"arg_1"	"clob"	0	0	1	1
5526	1231	"res_0"	"clob"	0	0	0	0
5527	1231	"arg_1"	"clob"	0	0	1	1
5528	1231	"arg_2"	"clob"	0	0	1	2
5529	1232	"res_0"	"clob"	0	0	0	0
5530	1232	"arg_1"	"clob"	0	0	1	1
5531	1232	"arg_2"	"int"	32	0	1	2
5532	1233	"res_0"	"clob"	0	0	0	0
5533	1233	"arg_1"	"clob"	0	0	1	1
5534	1233	"arg_2"	"int"	32	0	1	2
5535	1233	"arg_3"	"clob"	0	0	1	3
5536	1234	"res_0"	"clob"	0	0	0	0
5537	1234	"arg_1"	"clob"	0	0	1	1
5538	1234	"arg_2"	"int"	32	0	1	2
5539	1235	"res_0"	"clob"	0	0	0	0
5540	1235	"arg_1"	"clob"	0	0	1	1
5541	1235	"arg_2"	"int"	32	0	1	2
5542	1235	"arg_3"	"clob"	0	0	1	3
5543	1236	"res_0"	"clob"	0	0	0	0
5544	1236	"arg_1"	"clob"	0	0	1	1
5545	1236	"arg_2"	"int"	32	0	1	2
5546	1236	"arg_3"	"int"	32	0	1	3
5547	1236	"arg_4"	"clob"	0	0	1	4
5548	1237	"res_0"	"clob"	0	0	0	0
5549	1237	"arg_1"	"clob"	0	0	1	1
5550	1237	"arg_2"	"clob"	0	0	1	2
5551	1237	"arg_3"	"clob"	0	0	1	3
5552	1238	"res_0"	"clob"	0	0	0	0
5553	1238	"arg_1"	"clob"	0	0	1	1
5554	1238	"arg_2"	"int"	32	0	1	2
5555	1239	"res_0"	"clob"	0	0	0	0
5556	1239	"arg_1"	"int"	32	0	1	1
5557	1240	"res_0"	"int"	32	0	0	0
5558	1240	"arg_1"	"clob"	0	0	1	1
5559	1241	"res_0"	"int"	32	0	0	0
5560	1241	"arg_1"	"clob"	0	0	1	1
5561	1242	"res_0"	"int"	32	0	0	0
5562	1242	"arg_1"	"clob"	0	0	1	1
5563	1243	"res_0"	"clob"	0	0	0	0
5564	1243	"arg_1"	"clob"	0	0	1	1
5565	1244	"res_0"	"int"	32	0	0	0
5566	1244	"arg_1"	"clob"	0	0	1	1
5567	1244	"arg_2"	"clob"	0	0	1	2
5568	1245	"res_0"	"int"	32	0	0	0
5569	1245	"arg_1"	"clob"	0	0	1	1
5570	1245	"arg_2"	"clob"	0	0	1	2
5571	1246	"res_0"	"int"	32	0	0	0
5572	1246	"arg_1"	"clob"	0	0	1	1
5573	1246	"arg_2"	"clob"	0	0	1	2
5574	1247	"res_0"	"double"	53	0	0	0
5575	1247	"arg_1"	"clob"	0	0	1	1
5576	1247	"arg_2"	"clob"	0	0	1	2
5577	1248	"res_0"	"clob"	0	0	0	0
5578	1248	"arg_1"	"clob"	0	0	1	1
5579	1249	"res_0"	"int"	32	0	0	0
5580	1249	"arg_1"	"clob"	0	0	1	1
5581	1249	"arg_2"	"clob"	0	0	1	2
5582	1250	"res_0"	"int"	32	0	0	0
5583	1250	"arg_1"	"clob"	0	0	1	1
5584	1250	"arg_2"	"clob"	0	0	1	2
5585	1250	"arg_3"	"int"	32	0	1	3
5586	1250	"arg_4"	"int"	32	0	1	4
5587	1250	"arg_5"	"int"	32	0	1	5
5588	1251	"res_0"	"table"	0	0	0	0
5589	1251	"arg_1"	"varchar"	0	0	1	1
5590	1251	"arg_2"	"varchar"	0	0	1	2
5591	1251	"arg_3"	"varchar"	0	0	1	3
5592	1251	"arg_4"	"varchar"	0	0	1	4
5593	1251	"arg_5"	"varchar"	0	0	1	5
5594	1251	"arg_6"	"varchar"	0	0	1	6
5595	1251	"arg_7"	"bigint"	64	0	1	7
5596	1251	"arg_8"	"bigint"	64	0	1	8
5597	1252	"res_0"	"table"	0	0	0	0
5598	1252	"arg_1"	"varchar"	0	0	1	1
5599	1252	"arg_2"	"varchar"	0	0	1	2
5600	1252	"arg_3"	"varchar"	0	0	1	3
5601	1252	"arg_4"	"varchar"	0	0	1	4
5602	1252	"arg_5"	"varchar"	0	0	1	5
5603	1252	"arg_6"	"bigint"	64	0	1	6
5604	1252	"arg_7"	"bigint"	64	0	1	7
5605	1253	"res_0"	"table"	0	0	0	0
5606	1253	"arg_1"	"varchar"	0	0	1	1
5607	1253	"arg_2"	"varchar"	0	0	1	2
5608	56	"res"	"boolean"	1	0	0	0
5609	56	"arg"	"oid"	63	0	1	1
5610	68	"res"	"any"	0	0	0	0
5611	68	"arg"	"any"	0	0	1	1
5612	69	"res"	"boolean"	1	0	0	0
5613	69	"arg"	"any"	0	0	1	1
5614	70	"res"	"boolean"	1	0	0	0
5615	70	"arg"	"any"	0	0	1	1
5616	75	"res"	"any"	0	0	0	0
5617	75	"arg"	"any"	0	0	1	1
5618	76	"res"	"any"	0	0	0	0
5619	76	"arg"	"any"	0	0	1	1
5620	80	"res"	"bigint"	64	0	0	0
5621	80	"arg"	"tinyint"	8	0	1	1
5622	81	"res"	"bigint"	64	0	0	0
5623	81	"arg"	"smallint"	16	0	1	1
5624	82	"res"	"bigint"	64	0	0	0
5625	82	"arg"	"int"	32	0	1	1
5626	83	"res"	"bigint"	64	0	0	0
5627	83	"arg"	"bigint"	64	0	1	1
5628	84	"res"	"wrd"	64	0	0	0
5629	84	"arg"	"wrd"	64	0	1	1
5630	85	"res"	"decimal"	19	0	0	0
5631	85	"arg"	"decimal"	2	0	1	1
5632	86	"res"	"decimal"	19	0	0	0
5633	86	"arg"	"decimal"	4	0	1	1
5634	87	"res"	"decimal"	19	0	0	0
5635	87	"arg"	"decimal"	9	0	1	1
5636	88	"res"	"decimal"	19	0	0	0
5637	88	"arg"	"decimal"	19	0	1	1
5638	89	"res"	"bigint"	64	0	0	0
5639	89	"arg"	"tinyint"	8	0	1	1
5640	90	"res"	"bigint"	64	0	0	0
5641	90	"arg"	"smallint"	16	0	1	1
5642	91	"res"	"bigint"	64	0	0	0
5643	91	"arg"	"int"	32	0	1	1
5644	92	"res"	"bigint"	64	0	0	0
5645	92	"arg"	"bigint"	64	0	1	1
5646	93	"res"	"bigint"	64	0	0	0
5647	94	"res"	"decimal"	19	0	0	0
5648	94	"arg"	"decimal"	2	0	1	1
5649	95	"res"	"decimal"	19	0	0	0
5650	95	"arg"	"decimal"	4	0	1	1
5651	96	"res"	"decimal"	19	0	0	0
5652	96	"arg"	"decimal"	9	0	1	1
5653	97	"res"	"decimal"	19	0	0	0
5654	97	"arg"	"decimal"	19	0	1	1
5655	110	"res"	"real"	24	0	0	0
5656	110	"arg"	"real"	24	0	1	1
5657	111	"res"	"real"	24	0	0	0
5658	111	"arg"	"real"	24	0	1	1
5659	112	"res"	"double"	53	0	0	0
5660	112	"arg"	"double"	53	0	1	1
5661	113	"res"	"double"	53	0	0	0
5662	113	"arg"	"double"	53	0	1	1
5663	114	"res"	"double"	53	0	0	0
5664	114	"arg"	"double"	53	0	1	1
5665	115	"res"	"wrd"	64	0	0	0
5666	116	"res"	"wrd"	64	0	0	0
5689	5688	"name"	"varchar"	1024	0	0	0
5690	5688	"value"	"varchar"	2048	0	0	1
5692	5691	"name"	"varchar"	1024	0	0	0
5698	5697	"name"	"varchar"	2048	0	0	0
5718	5717	"val"	"clob"	0	0	1	0
5719	5717	"pat"	"clob"	0	0	1	1
5720	5717	"esc"	"clob"	0	0	1	2
5723	5722	"val"	"clob"	0	0	1	0
5724	5722	"pat"	"clob"	0	0	1	1
5725	5722	"esc"	"clob"	0	0	1	2
5728	5727	"val"	"clob"	0	0	1	0
5729	5727	"pat"	"clob"	0	0	1	1
5732	5731	"val"	"clob"	0	0	1	0
5733	5731	"pat"	"clob"	0	0	1	1
5736	5735	"result"	"double"	53	0	0	0
5737	5735	"r"	"double"	53	0	1	1
5740	5739	"result"	"double"	53	0	0	0
5741	5739	"d"	"double"	53	0	1	1
5747	5746	"result"	"clob"	0	0	0	0
5748	5746	"theurl"	"url"	0	0	1	1
5751	5750	"result"	"clob"	0	0	0	0
5752	5750	"theurl"	"url"	0	0	1	1
5755	5754	"result"	"clob"	0	0	0	0
5756	5754	"theurl"	"url"	0	0	1	1
5759	5758	"result"	"clob"	0	0	0	0
5760	5758	"theurl"	"url"	0	0	1	1
5763	5762	"result"	"clob"	0	0	0	0
5764	5762	"theurl"	"url"	0	0	1	1
5767	5766	"result"	"clob"	0	0	0	0
5768	5766	"theurl"	"url"	0	0	1	1
5771	5770	"result"	"clob"	0	0	0	0
5772	5770	"theurl"	"url"	0	0	1	1
5775	5774	"result"	"clob"	0	0	0	0
5776	5774	"theurl"	"url"	0	0	1	1
5779	5778	"result"	"clob"	0	0	0	0
5780	5778	"theurl"	"url"	0	0	1	1
5783	5782	"result"	"clob"	0	0	0	0
5784	5782	"theurl"	"url"	0	0	1	1
5787	5786	"result"	"clob"	0	0	0	0
5788	5786	"theurl"	"url"	0	0	1	1
5791	5790	"result"	"clob"	0	0	0	0
5792	5790	"theurl"	"url"	0	0	1	1
5795	5794	"result"	"clob"	0	0	0	0
5796	5794	"theurl"	"url"	0	0	1	1
5799	5798	"result"	"boolean"	1	0	0	0
5800	5798	"theurl"	"url"	0	0	1	1
5803	5802	"result"	"url"	0	0	0	0
5804	5802	"protocol"	"clob"	0	0	1	1
5805	5802	"hostname"	"clob"	0	0	1	2
5806	5802	"port"	"int"	32	0	1	3
5807	5802	"file"	"clob"	0	0	1	4
5810	5809	"result"	"url"	0	0	0	0
5811	5809	"protocol"	"clob"	0	0	1	1
5812	5809	"hostname"	"clob"	0	0	1	2
5813	5809	"file"	"clob"	0	0	1	3
5816	5815	"result"	"date"	0	0	0	0
5817	5815	"s"	"clob"	0	0	1	1
5818	5815	"format"	"clob"	0	0	1	2
5821	5820	"result"	"clob"	0	0	0	0
5822	5820	"d"	"date"	0	0	1	1
5823	5820	"format"	"clob"	0	0	1	2
5826	5825	"result"	"date"	0	0	0	0
5827	5825	"s"	"clob"	0	0	1	1
5828	5825	"format"	"clob"	0	0	1	2
5832	5831	"result"	"inet"	0	0	0	0
5833	5831	"p"	"inet"	0	0	1	1
5836	5835	"result"	"clob"	0	0	0	0
5837	5835	"p"	"inet"	0	0	1	1
5840	5839	"result"	"int"	32	0	0	0
5841	5839	"p"	"inet"	0	0	1	1
5844	5843	"result"	"inet"	0	0	0	0
5845	5843	"p"	"inet"	0	0	1	1
5846	5843	"mask"	"int"	32	0	1	2
5849	5848	"result"	"inet"	0	0	0	0
5850	5848	"p"	"inet"	0	0	1	1
5853	5852	"result"	"inet"	0	0	0	0
5854	5852	"p"	"inet"	0	0	1	1
5857	5856	"result"	"inet"	0	0	0	0
5858	5856	"p"	"inet"	0	0	1	1
5861	5860	"result"	"clob"	0	0	0	0
5862	5860	"p"	"inet"	0	0	1	1
5865	5864	"result"	"clob"	0	0	0	0
5866	5864	"p"	"inet"	0	0	1	1
5869	5868	"result"	"boolean"	1	0	0	0
5870	5868	"i1"	"inet"	0	0	1	1
5871	5868	"i2"	"inet"	0	0	1	2
5874	5873	"result"	"boolean"	1	0	0	0
5875	5873	"i1"	"inet"	0	0	1	1
5876	5873	"i2"	"inet"	0	0	1	2
5879	5878	"result"	"boolean"	1	0	0	0
5880	5878	"i1"	"inet"	0	0	1	1
5881	5878	"i2"	"inet"	0	0	1	2
5884	5883	"result"	"boolean"	1	0	0	0
5885	5883	"i1"	"inet"	0	0	1	1
5886	5883	"i2"	"inet"	0	0	1	2
5889	5888	"id"	"oid"	63	0	0	0
5890	5888	"owner"	"clob"	0	0	0	1
5891	5888	"defined"	"timestamp"	7	0	0	2
5892	5888	"query"	"clob"	0	0	0	3
5893	5888	"pipe"	"clob"	0	0	0	4
5894	5888	"plan"	"clob"	0	0	0	5
5895	5888	"mal"	"int"	32	0	0	6
5896	5888	"optimize"	"bigint"	64	0	0	7
5899	5898	"id"	"oid"	63	0	0	0
5900	5898	"start"	"timestamp"	7	0	0	1
5901	5898	"stop"	"timestamp"	7	0	0	2
5902	5898	"arguments"	"clob"	0	0	0	3
5903	5898	"tuples"	"wrd"	64	0	0	4
5904	5898	"run"	"bigint"	64	0	0	5
5905	5898	"ship"	"bigint"	64	0	0	6
5906	5898	"cpu"	"int"	32	0	0	7
5907	5898	"io"	"int"	32	0	0	8
5953	5952	"threshold"	"smallint"	16	0	1	0
5958	5957	"event"	"int"	32	0	0	0
5959	5957	"clk"	"varchar"	20	0	0	1
5960	5957	"pc"	"varchar"	50	0	0	2
5961	5957	"thread"	"int"	32	0	0	3
5962	5957	"ticks"	"bigint"	64	0	0	4
5963	5957	"rrsmb"	"bigint"	64	0	0	5
5964	5957	"vmmb"	"bigint"	64	0	0	6
5965	5957	"reads"	"bigint"	64	0	0	7
5966	5957	"writes"	"bigint"	64	0	0	8
5967	5957	"minflt"	"bigint"	64	0	0	9
5968	5957	"majflt"	"bigint"	64	0	0	10
5969	5957	"nvcsw"	"bigint"	64	0	0	11
5970	5957	"stmt"	"clob"	0	0	0	12
5988	5987	"host"	"clob"	0	0	1	0
5989	5987	"port"	"int"	32	0	1	1
5992	5991	"ticks"	"int"	32	0	1	0
5995	5994	"result"	"timestamp"	7	0	0	0
5996	5994	"sec"	"bigint"	64	0	1	1
5999	5998	"result"	"timestamp"	7	0	0	0
6000	5998	"sec"	"int"	32	0	1	1
6003	6002	"result"	"int"	32	0	0	0
6004	6002	"ts"	"timestamp"	7	0	1	1
6007	6006	"sys"	"clob"	0	0	1	0
6008	6006	"tab"	"clob"	0	0	1	1
6011	6010	"sys"	"clob"	0	0	1	0
6012	6010	"tab"	"clob"	0	0	1	1
6015	6014	"sys"	"clob"	0	0	1	0
6016	6014	"tab"	"clob"	0	0	1	1
6019	6018	"sch"	"varchar"	100	0	0	0
6020	6018	"usr"	"varchar"	100	0	0	1
6021	6018	"dep_type"	"varchar"	32	0	0	2
6024	6023	"sch"	"varchar"	100	0	0	0
6025	6023	"usr"	"varchar"	100	0	0	1
6026	6023	"dep_type"	"varchar"	32	0	0	2
6029	6028	"sch"	"varchar"	100	0	0	0
6030	6028	"usr"	"varchar"	100	0	0	1
6031	6028	"dep_type"	"varchar"	32	0	0	2
6034	6033	"sch"	"varchar"	100	0	0	0
6035	6033	"usr"	"varchar"	100	0	0	1
6036	6033	"dep_type"	"varchar"	32	0	0	2
6039	6038	"sch"	"varchar"	100	0	0	0
6040	6038	"usr"	"varchar"	100	0	0	1
6041	6038	"dep_type"	"varchar"	32	0	0	2
6044	6043	"sch"	"varchar"	100	0	0	0
6045	6043	"usr"	"varchar"	100	0	0	1
6046	6043	"dep_type"	"varchar"	32	0	0	2
6049	6048	"sch"	"varchar"	100	0	0	0
6050	6048	"usr"	"varchar"	100	0	0	1
6051	6048	"dep_type"	"varchar"	32	0	0	2
6054	6053	"sch"	"varchar"	100	0	0	0
6055	6053	"usr"	"varchar"	100	0	0	1
6056	6053	"dep_type"	"varchar"	32	0	0	2
6059	6058	"sch"	"varchar"	100	0	0	0
6060	6058	"usr"	"varchar"	100	0	0	1
6061	6058	"dep_type"	"varchar"	32	0	0	2
6064	6063	"sch"	"varchar"	100	0	0	0
6065	6063	"usr"	"varchar"	100	0	0	1
6066	6063	"dep_type"	"varchar"	32	0	0	2
6069	6068	"sch"	"varchar"	100	0	0	0
6070	6068	"usr"	"varchar"	100	0	0	1
6071	6068	"dep_type"	"varchar"	32	0	0	2
6074	6073	"sch"	"varchar"	100	0	0	0
6075	6073	"usr"	"varchar"	100	0	0	1
6076	6073	"dep_type"	"varchar"	32	0	0	2
6079	6078	"sch"	"varchar"	100	0	0	0
6080	6078	"usr"	"varchar"	100	0	0	1
6081	6078	"dep_type"	"varchar"	32	0	0	2
6084	6083	"sch"	"varchar"	100	0	0	0
6085	6083	"usr"	"varchar"	100	0	0	1
6086	6083	"dep_type"	"varchar"	32	0	0	2
6089	6088	"sch"	"varchar"	100	0	0	0
6090	6088	"usr"	"varchar"	100	0	0	1
6091	6088	"dep_type"	"varchar"	32	0	0	2
6094	6093	"sch"	"varchar"	100	0	0	0
6095	6093	"usr"	"varchar"	100	0	0	1
6096	6093	"dep_type"	"varchar"	32	0	0	2
6099	6098	"sch"	"varchar"	100	0	0	0
6100	6098	"usr"	"varchar"	100	0	0	1
6101	6098	"dep_type"	"varchar"	32	0	0	2
6104	6103	"result"	"clob"	0	0	0	0
6105	6103	"username"	"clob"	0	0	1	1
6108	6107	"user"	"clob"	0	0	0	0
6109	6107	"login"	"timestamp"	7	0	0	1
6110	6107	"sessiontimeout"	"bigint"	64	0	0	2
6111	6107	"lastcommand"	"timestamp"	7	0	0	3
6112	6107	"querytimeout"	"bigint"	64	0	0	4
6113	6107	"active"	"boolean"	1	0	0	5
6124	6123	"delay"	"tinyint"	8	0	1	0
6127	6126	"delay"	"tinyint"	8	0	1	0
6128	6126	"force"	"boolean"	1	0	1	1
6131	6130	"query"	"bigint"	64	0	1	0
6134	6133	"query"	"bigint"	64	0	1	0
6135	6133	"session"	"bigint"	64	0	1	1
6138	6137	"timeout"	"bigint"	64	0	1	0
6141	6140	"result"	"varchar"	32	0	0	0
6142	6140	"s1"	"varchar"	32	0	1	1
6143	6140	"st"	"int"	32	0	1	2
6144	6140	"len"	"int"	32	0	1	3
6145	6140	"s3"	"varchar"	32	0	1	4
6148	6147	"result"	"double"	53	0	0	0
6149	6147	"num"	"double"	53	0	1	1
6150	6147	"prc"	"int"	32	0	1	2
6153	6152	"result"	"double"	53	0	0	0
6154	6152	"num"	"double"	53	0	1	1
6155	6152	"prc"	"int"	32	0	1	2
6156	6152	"truncat"	"int"	32	0	1	3
6159	6158	"result"	"clob"	0	0	0	0
6160	6158	"num"	"double"	53	0	1	1
6161	6158	"prc"	"int"	32	0	1	2
6162	6158	"truncat"	"int"	32	0	1	3
6165	6164	"result"	"double"	53	0	0	0
6166	6164	"pdec"	"double"	53	0	1	1
6167	6164	"pradius"	"double"	53	0	1	2
6170	6169	"result"	"oid"	63	0	0	0
6171	6169	"x"	"int"	32	0	1	1
6172	6169	"y"	"int"	32	0	1	2
6175	6174	"result"	"int"	32	0	0	0
6176	6174	"z"	"oid"	63	0	1	1
6179	6178	"result"	"int"	32	0	0	0
6180	6178	"z"	"oid"	63	0	1	1
6183	6182	"rewrite"	"clob"	0	0	0	0
6184	6182	"count"	"int"	32	0	0	1
6187	6186	"query"	"clob"	0	0	0	0
6188	6186	"count"	"int"	32	0	0	1
6191	6190	"filename"	"clob"	0	0	1	0
6194	6193	"name"	"clob"	0	0	0	0
6195	6193	"def"	"clob"	0	0	0	1
6196	6193	"status"	"clob"	0	0	0	2
6204	6203	"name"	"clob"	0	0	0	0
6205	6203	"value"	"clob"	0	0	0	1
6212	6211	"id"	"int"	32	0	0	0
6213	6211	"name"	"clob"	0	0	0	1
6214	6211	"htype"	"clob"	0	0	0	2
6215	6211	"ttype"	"clob"	0	0	0	3
6216	6211	"count"	"bigint"	64	0	0	4
6217	6211	"refcnt"	"int"	32	0	0	5
6218	6211	"lrefcnt"	"int"	32	0	0	6
6219	6211	"location"	"clob"	0	0	0	7
6220	6211	"heat"	"int"	32	0	0	8
6221	6211	"dirty"	"clob"	0	0	0	9
6222	6211	"status"	"clob"	0	0	0	10
6223	6211	"kind"	"clob"	0	0	0	11
6226	6225	"ra_stmt"	"clob"	0	0	1	0
6227	6225	"opt"	"boolean"	1	0	1	1
6230	6229	"qtag"	"bigint"	64	0	0	0
6231	6229	"user"	"clob"	0	0	0	1
6232	6229	"started"	"timestamp"	7	0	0	2
6233	6229	"estimate"	"timestamp"	7	0	0	3
6234	6229	"progress"	"int"	32	0	0	4
6235	6229	"status"	"clob"	0	0	0	5
6236	6229	"tag"	"oid"	63	0	0	6
6237	6229	"query"	"clob"	0	0	0	7
6250	6249	"tag"	"int"	32	0	1	0
6253	6252	"tag"	"int"	32	0	1	0
6256	6255	"tag"	"int"	32	0	1	0
6259	6258	"tag"	"bigint"	64	0	1	0
6262	6261	"tag"	"bigint"	64	0	1	0
6265	6264	"tag"	"bigint"	64	0	1	0
6268	6267	"result"	"double"	53	0	0	0
6269	6267	"val"	"tinyint"	8	0	1	1
6272	6271	"result"	"double"	53	0	0	0
6273	6271	"val"	"smallint"	16	0	1	1
6276	6275	"result"	"double"	53	0	0	0
6277	6275	"val"	"int"	32	0	1	1
6280	6279	"result"	"double"	53	0	0	0
6281	6279	"val"	"wrd"	64	0	1	1
6284	6283	"result"	"double"	53	0	0	0
6285	6283	"val"	"bigint"	64	0	1	1
6288	6287	"result"	"double"	53	0	0	0
6289	6287	"val"	"real"	24	0	1	1
6292	6291	"result"	"double"	53	0	0	0
6293	6291	"val"	"double"	53	0	1	1
6296	6295	"result"	"double"	53	0	0	0
6297	6295	"val"	"date"	0	0	1	1
6300	6299	"result"	"double"	53	0	0	0
6301	6299	"val"	"time"	1	0	1	1
6304	6303	"result"	"double"	53	0	0	0
6305	6303	"val"	"timestamp"	7	0	1	1
6308	6307	"result"	"double"	53	0	0	0
6309	6307	"val"	"tinyint"	8	0	1	1
6312	6311	"result"	"double"	53	0	0	0
6313	6311	"val"	"smallint"	16	0	1	1
6316	6315	"result"	"double"	53	0	0	0
6317	6315	"val"	"int"	32	0	1	1
6320	6319	"result"	"double"	53	0	0	0
6321	6319	"val"	"wrd"	64	0	1	1
6324	6323	"result"	"double"	53	0	0	0
6325	6323	"val"	"bigint"	64	0	1	1
6328	6327	"result"	"double"	53	0	0	0
6329	6327	"val"	"real"	24	0	1	1
6332	6331	"result"	"double"	53	0	0	0
6333	6331	"val"	"double"	53	0	1	1
6336	6335	"result"	"double"	53	0	0	0
6337	6335	"val"	"date"	0	0	1	1
6340	6339	"result"	"double"	53	0	0	0
6341	6339	"val"	"time"	1	0	1	1
6344	6343	"result"	"double"	53	0	0	0
6345	6343	"val"	"timestamp"	7	0	1	1
6348	6347	"result"	"double"	53	0	0	0
6349	6347	"val"	"tinyint"	8	0	1	1
6352	6351	"result"	"double"	53	0	0	0
6353	6351	"val"	"smallint"	16	0	1	1
6356	6355	"result"	"double"	53	0	0	0
6357	6355	"val"	"int"	32	0	1	1
6360	6359	"result"	"double"	53	0	0	0
6361	6359	"val"	"wrd"	64	0	1	1
6364	6363	"result"	"double"	53	0	0	0
6365	6363	"val"	"bigint"	64	0	1	1
6368	6367	"result"	"double"	53	0	0	0
6369	6367	"val"	"real"	24	0	1	1
6372	6371	"result"	"double"	53	0	0	0
6373	6371	"val"	"double"	53	0	1	1
6376	6375	"result"	"double"	53	0	0	0
6377	6375	"val"	"date"	0	0	1	1
6380	6379	"result"	"double"	53	0	0	0
6381	6379	"val"	"time"	1	0	1	1
6384	6383	"result"	"double"	53	0	0	0
6385	6383	"val"	"timestamp"	7	0	1	1
6388	6387	"result"	"double"	53	0	0	0
6389	6387	"val"	"tinyint"	8	0	1	1
6392	6391	"result"	"double"	53	0	0	0
6393	6391	"val"	"smallint"	16	0	1	1
6396	6395	"result"	"double"	53	0	0	0
6397	6395	"val"	"int"	32	0	1	1
6400	6399	"result"	"double"	53	0	0	0
6401	6399	"val"	"wrd"	64	0	1	1
6404	6403	"result"	"double"	53	0	0	0
6405	6403	"val"	"bigint"	64	0	1	1
6408	6407	"result"	"double"	53	0	0	0
6409	6407	"val"	"real"	24	0	1	1
6412	6411	"result"	"double"	53	0	0	0
6413	6411	"val"	"double"	53	0	1	1
6416	6415	"result"	"double"	53	0	0	0
6417	6415	"val"	"date"	0	0	1	1
6420	6419	"result"	"double"	53	0	0	0
6421	6419	"val"	"time"	1	0	1	1
6424	6423	"result"	"double"	53	0	0	0
6425	6423	"val"	"timestamp"	7	0	1	1
6428	6427	"result"	"tinyint"	8	0	0	0
6429	6427	"val"	"tinyint"	8	0	1	1
6432	6431	"result"	"smallint"	16	0	0	0
6433	6431	"val"	"smallint"	16	0	1	1
6436	6435	"result"	"int"	32	0	0	0
6437	6435	"val"	"int"	32	0	1	1
6440	6439	"result"	"wrd"	64	0	0	0
6441	6439	"val"	"wrd"	64	0	1	1
6444	6443	"result"	"bigint"	64	0	0	0
6445	6443	"val"	"bigint"	64	0	1	1
6448	6447	"result"	"decimal"	18	3	0	0
6449	6447	"val"	"decimal"	18	3	1	1
6452	6451	"result"	"real"	24	0	0	0
6453	6451	"val"	"real"	24	0	1	1
6456	6455	"result"	"double"	53	0	0	0
6457	6455	"val"	"double"	53	0	1	1
6460	6459	"result"	"date"	0	0	0	0
6461	6459	"val"	"date"	0	0	1	1
6464	6463	"result"	"time"	1	0	0	0
6465	6463	"val"	"time"	1	0	1	1
6468	6467	"result"	"timestamp"	7	0	0	0
6469	6467	"val"	"timestamp"	7	0	1	1
6472	6471	"result"	"tinyint"	8	0	0	0
6473	6471	"val"	"tinyint"	8	0	1	1
6474	6471	"q"	"double"	53	0	1	2
6477	6476	"result"	"smallint"	16	0	0	0
6478	6476	"val"	"smallint"	16	0	1	1
6479	6476	"q"	"double"	53	0	1	2
6482	6481	"result"	"int"	32	0	0	0
6483	6481	"val"	"int"	32	0	1	1
6484	6481	"q"	"double"	53	0	1	2
6487	6486	"result"	"wrd"	64	0	0	0
6488	6486	"val"	"wrd"	64	0	1	1
6489	6486	"q"	"double"	53	0	1	2
6492	6491	"result"	"bigint"	64	0	0	0
6493	6491	"val"	"bigint"	64	0	1	1
6494	6491	"q"	"double"	53	0	1	2
6497	6496	"result"	"decimal"	18	3	0	0
6498	6496	"val"	"decimal"	18	3	1	1
6499	6496	"q"	"double"	53	0	1	2
6502	6501	"result"	"real"	24	0	0	0
6503	6501	"val"	"real"	24	0	1	1
6504	6501	"q"	"double"	53	0	1	2
6507	6506	"result"	"double"	53	0	0	0
6508	6506	"val"	"double"	53	0	1	1
6509	6506	"q"	"double"	53	0	1	2
6512	6511	"result"	"date"	0	0	0	0
6513	6511	"val"	"date"	0	0	1	1
6514	6511	"q"	"double"	53	0	1	2
6517	6516	"result"	"time"	1	0	0	0
6518	6516	"val"	"time"	1	0	1	1
6519	6516	"q"	"double"	53	0	1	2
6522	6521	"result"	"timestamp"	7	0	0	0
6523	6521	"val"	"timestamp"	7	0	1	1
6524	6521	"q"	"double"	53	0	1	2
6527	6526	"result"	"tinyint"	8	0	0	0
6528	6526	"e1"	"tinyint"	8	0	1	1
6529	6526	"e2"	"tinyint"	8	0	1	2
6532	6531	"result"	"smallint"	16	0	0	0
6533	6531	"e1"	"smallint"	16	0	1	1
6534	6531	"e2"	"smallint"	16	0	1	2
6537	6536	"result"	"int"	32	0	0	0
6538	6536	"e1"	"int"	32	0	1	1
6539	6536	"e2"	"int"	32	0	1	2
6542	6541	"result"	"wrd"	64	0	0	0
6543	6541	"e1"	"wrd"	64	0	1	1
6544	6541	"e2"	"wrd"	64	0	1	2
6547	6546	"result"	"bigint"	64	0	0	0
6548	6546	"e1"	"bigint"	64	0	1	1
6549	6546	"e2"	"bigint"	64	0	1	2
6552	6551	"result"	"real"	24	0	0	0
6553	6551	"e1"	"real"	24	0	1	1
6554	6551	"e2"	"real"	24	0	1	2
6557	6556	"result"	"double"	53	0	0	0
6558	6556	"e1"	"double"	53	0	1	1
6559	6556	"e2"	"double"	53	0	1	2
6562	6561	"result"	"int"	32	0	0	0
6563	6561	"info"	"int"	32	0	1	1
6566	6565	"result"	"int"	32	0	0	0
6567	6565	"info"	"int"	32	0	1	1
6570	6569	"result"	"clob"	0	0	0	0
6571	6569	"info"	"int"	32	0	1	1
6572	6569	"format"	"int"	32	0	1	2
6594	6593	"result"	"mbr"	0	0	0	0
6595	6593	"geom"	"geometry"	0	0	1	1
6598	6597	"result"	"boolean"	1	0	0	0
6599	6597	"box1"	"mbr"	0	0	1	1
6600	6597	"box2"	"mbr"	0	0	1	2
6603	6602	"result"	"boolean"	1	0	0	0
6604	6602	"box1"	"mbr"	0	0	1	1
6605	6602	"box2"	"mbr"	0	0	1	2
6608	6607	"result"	"boolean"	1	0	0	0
6609	6607	"box1"	"mbr"	0	0	1	1
6610	6607	"box2"	"mbr"	0	0	1	2
6613	6612	"result"	"double"	53	0	0	0
6614	6612	"box1"	"mbr"	0	0	1	1
6615	6612	"box2"	"mbr"	0	0	1	2
6618	6617	"result"	"geometry"	0	0	0	0
6619	6617	"wkt"	"clob"	0	0	1	1
6622	6621	"result"	"geometry"	0	0	0	0
6623	6621	"geom"	"clob"	0	0	1	1
6626	6625	"result"	"clob"	0	0	0	0
6627	6625	"geom"	"geometry"	0	0	1	1
6630	6629	"result"	"clob"	0	0	0	0
6631	6629	"geom"	"geometry"	0	0	1	1
6634	6633	"result"	"int"	32	0	0	0
6635	6633	"geom"	"geometry"	0	0	1	1
6638	6637	"result"	"clob"	0	0	0	0
6639	6637	"geom"	"geometry"	0	0	1	1
6642	6641	"result"	"int"	32	0	0	0
6643	6641	"geom"	"geometry"	0	0	1	1
6646	6645	"result"	"geometry"	0	0	0	0
6647	6645	"geom"	"geometry"	0	0	1	1
6648	6645	"srid"	"int"	32	0	1	2
6651	6650	"result"	"boolean"	1	0	0	0
6652	6650	"geom"	"geometry"	0	0	1	1
6655	6654	"result"	"boolean"	1	0	0	0
6656	6654	"geom"	"geometry"	0	0	1	1
6659	6658	"result"	"geometry"	0	0	0	0
6660	6658	"geom"	"geometry"	0	0	1	1
6663	6662	"result"	"geometry"	0	0	0	0
6664	6662	"geom"	"geometry"	0	0	1	1
6667	6666	"result"	"boolean"	1	0	0	0
6668	6666	"geom1"	"geometry"	0	0	1	1
6669	6666	"geom2"	"geometry"	0	0	1	2
6672	6671	"result"	"boolean"	1	0	0	0
6673	6671	"geom1"	"geometry"	0	0	1	1
6674	6671	"geom2"	"geometry"	0	0	1	2
6677	6676	"result"	"boolean"	1	0	0	0
6678	6676	"geom1"	"geometry"	0	0	1	1
6679	6676	"geom2"	"geometry"	0	0	1	2
6682	6681	"result"	"boolean"	1	0	0	0
6683	6681	"geom1"	"geometry"	0	0	1	1
6684	6681	"geom2"	"geometry"	0	0	1	2
6687	6686	"result"	"boolean"	1	0	0	0
6688	6686	"geom1"	"geometry"	0	0	1	1
6689	6686	"geom2"	"geometry"	0	0	1	2
6692	6691	"result"	"boolean"	1	0	0	0
6693	6691	"geom1"	"geometry"	0	0	1	1
6694	6691	"geom2"	"geometry"	0	0	1	2
6697	6696	"result"	"boolean"	1	0	0	0
6698	6696	"geom1"	"geometry"	0	0	1	1
6699	6696	"geom2"	"geometry"	0	0	1	2
6702	6701	"result"	"boolean"	1	0	0	0
6703	6701	"geom1"	"geometry"	0	0	1	1
6704	6701	"geom2"	"geometry"	0	0	1	2
6707	6706	"result"	"boolean"	1	0	0	0
6708	6706	"geom1"	"geometry"	0	0	1	1
6709	6706	"geom2"	"geometry"	0	0	1	2
6710	6706	"intersection_matrix_pattern"	"clob"	0	0	1	3
6713	6712	"result"	"double"	53	0	0	0
6714	6712	"geom1"	"geometry"	0	0	1	1
6715	6712	"geom2"	"geometry"	0	0	1	2
6718	6717	"result"	"geometry"	0	0	0	0
6719	6717	"geom1"	"geometry"	0	0	1	1
6720	6717	"geom2"	"geometry"	0	0	1	2
6723	6722	"result"	"geometry"	0	0	0	0
6724	6722	"geom1"	"geometry"	0	0	1	1
6725	6722	"geom2"	"geometry"	0	0	1	2
6728	6727	"result"	"geometry"	0	0	0	0
6729	6727	"geom1"	"geometry"	0	0	1	1
6730	6727	"geom2"	"geometry"	0	0	1	2
6733	6732	"result"	"geometry"	0	0	0	0
6734	6732	"geom"	"geometry"	0	0	1	1
6737	6736	"result"	"geometry"	0	0	0	0
6738	6736	"geom1"	"geometry"	0	0	1	1
6739	6736	"geom2"	"geometry"	0	0	1	2
6742	6741	"result"	"geometry"	0	0	0	0
6743	6741	"geom"	"geometry"	0	0	1	1
6744	6741	"radius"	"double"	53	0	1	2
6747	6746	"result"	"geometry"	0	0	0	0
6748	6746	"geom"	"geometry"	0	0	1	1
6751	6750	"result"	"double"	53	0	0	0
6752	6750	"geom"	"geometry"	0	0	1	1
6755	6754	"result"	"double"	53	0	0	0
6756	6754	"geom"	"geometry"	0	0	1	1
6759	6758	"result"	"double"	53	0	0	0
6760	6758	"geom"	"geometry"	0	0	1	1
6763	6762	"result"	"geometry"	0	0	0	0
6764	6762	"geom"	"geometry"	0	0	1	1
6767	6766	"result"	"geometry"	0	0	0	0
6768	6766	"geom"	"geometry"	0	0	1	1
6771	6770	"result"	"boolean"	1	0	0	0
6772	6770	"geom"	"geometry"	0	0	1	1
6775	6774	"result"	"double"	53	0	0	0
6776	6774	"geom"	"geometry"	0	0	1	1
6779	6778	"result"	"boolean"	1	0	0	0
6780	6778	"geom"	"geometry"	0	0	1	1
6783	6782	"result"	"int"	32	0	0	0
6784	6782	"geom"	"geometry"	0	0	1	1
6787	6786	"result"	"geometry"	0	0	0	0
6788	6786	"geom"	"geometry"	0	0	1	1
6789	6786	"positionnum"	"int"	32	0	1	2
6792	6791	"result"	"geometry"	0	0	0	0
6793	6791	"geom"	"geometry"	0	0	1	1
6796	6795	"result"	"geometry"	0	0	0	0
6797	6795	"geom"	"geometry"	0	0	1	1
6800	6799	"result"	"double"	53	0	0	0
6801	6799	"geom"	"geometry"	0	0	1	1
6804	6803	"result"	"geometry"	0	0	0	0
6805	6803	"geom"	"geometry"	0	0	1	1
6808	6807	"result"	"geometry"	0	0	0	0
6809	6807	"geom"	"geometry"	0	0	1	1
6812	6811	"result"	"int"	32	0	0	0
6813	6811	"geom"	"geometry"	0	0	1	1
6816	6815	"result"	"geometry"	0	0	0	0
6817	6815	"geom"	"geometry"	0	0	1	1
6818	6815	"positionnum"	"int"	32	0	1	2
6821	6820	"result"	"geometrya"	0	0	0	0
6822	6820	"geom"	"geometry"	0	0	1	1
6825	6824	"result"	"int"	32	0	0	0
6826	6824	"geom"	"geometry"	0	0	1	1
6829	6828	"result"	"geometry"	0	0	0	0
6830	6828	"geom"	"geometry"	0	0	1	1
6831	6828	"positionnum"	"int"	32	0	1	2
6834	6833	"result"	"int"	32	0	0	0
6835	6833	"geom"	"geometry"	0	0	1	1
6838	6837	"result"	"geometry"	0	0	0	0
6839	6837	"geom"	"geometry"	0	0	1	1
6840	6837	"patchnum"	"int"	32	0	1	2
6843	6842	"result"	"geometry"	0	0	0	0
6844	6842	"wkt"	"clob"	0	0	1	1
6845	6842	"srid"	"int"	32	0	1	2
6848	6847	"result"	"geometry"	0	0	0	0
6849	6847	"wkt"	"clob"	0	0	1	1
6850	6847	"srid"	"int"	32	0	1	2
6853	6852	"result"	"geometry"	0	0	0	0
6854	6852	"wkt"	"clob"	0	0	1	1
6855	6852	"srid"	"int"	32	0	1	2
6858	6857	"result"	"geometry"	0	0	0	0
6859	6857	"wkt"	"clob"	0	0	1	1
6860	6857	"srid"	"int"	32	0	1	2
6863	6862	"result"	"geometry"	0	0	0	0
6864	6862	"wkt"	"clob"	0	0	1	1
6865	6862	"srid"	"int"	32	0	1	2
6868	6867	"result"	"geometry"	0	0	0	0
6869	6867	"wkt"	"clob"	0	0	1	1
6870	6867	"srid"	"int"	32	0	1	2
6873	6872	"result"	"geometry"	0	0	0	0
6874	6872	"wkt"	"clob"	0	0	1	1
6875	6872	"srid"	"int"	32	0	1	2
6878	6877	"result"	"geometry"	0	0	0	0
6879	6877	"wkt"	"clob"	0	0	1	1
6880	6877	"srid"	"int"	32	0	1	2
6883	6882	"result"	"geometry"	0	0	0	0
6884	6882	"wkt"	"clob"	0	0	1	1
6885	6882	"srid"	"int"	32	0	1	2
6888	6887	"result"	"geometry"	0	0	0	0
6889	6887	"wkt"	"clob"	0	0	1	1
6890	6887	"srid"	"int"	32	0	1	2
6893	6892	"result"	"geometry"	0	0	0	0
6894	6892	"wkt"	"clob"	0	0	1	1
6895	6892	"srid"	"int"	32	0	1	2
6898	6897	"result"	"geometry"	0	0	0	0
6899	6897	"wkt"	"clob"	0	0	1	1
6902	6901	"result"	"geometry"	0	0	0	0
6903	6901	"wkt"	"clob"	0	0	1	1
6906	6905	"result"	"geometry"	0	0	0	0
6907	6905	"wkt"	"clob"	0	0	1	1
6910	6909	"result"	"geometry"	0	0	0	0
6911	6909	"wkt"	"clob"	0	0	1	1
6914	6913	"result"	"geometry"	0	0	0	0
6915	6913	"wkt"	"clob"	0	0	1	1
6918	6917	"result"	"geometry"	0	0	0	0
6919	6917	"wkt"	"clob"	0	0	1	1
6922	6921	"result"	"geometry"	0	0	0	0
6923	6921	"wkt"	"clob"	0	0	1	1
6926	6925	"result"	"geometry"	0	0	0	0
6927	6925	"wkt"	"clob"	0	0	1	1
6930	6929	"result"	"geometry"	0	0	0	0
6931	6929	"wkt"	"clob"	0	0	1	1
6934	6933	"result"	"geometry"	0	0	0	0
6935	6933	"x"	"double"	53	0	1	1
6936	6933	"y"	"double"	53	0	1	2
6939	6938	"result"	"geometry"	0	0	0	0
6940	6938	"x"	"double"	53	0	1	1
6941	6938	"y"	"double"	53	0	1	2
6944	6943	"result"	"geometry"	0	0	0	0
6945	6943	"x"	"double"	53	0	1	1
6946	6943	"y"	"double"	53	0	1	2
6947	6943	"z"	"double"	53	0	1	3
6950	6949	"result"	"geometry"	0	0	0	0
6951	6949	"x"	"double"	53	0	1	1
6952	6949	"y"	"double"	53	0	1	2
6953	6949	"z"	"double"	53	0	1	3
6954	6949	"m"	"double"	53	0	1	4
6957	6956	"result"	"geometry"	0	0	0	0
6958	6956	"x"	"double"	53	0	1	1
6959	6956	"y"	"double"	53	0	1	2
6960	6956	"m"	"double"	53	0	1	3
6963	6962	"result"	"geometry"	0	0	0	0
6964	6962	"geom"	"geometry"	0	0	1	1
6967	6966	"result"	"geometry"	0	0	0	0
6968	6966	"geom1"	"geometry"	0	0	1	1
6969	6966	"geom2"	"geometry"	0	0	1	2
6972	6971	"result"	"geometry"	0	0	0	0
6973	6971	"xmin"	"double"	53	0	1	1
6974	6971	"ymin"	"double"	53	0	1	2
6975	6971	"xmax"	"double"	53	0	1	3
6976	6971	"ymax"	"double"	53	0	1	4
6977	6971	"srid"	"int"	32	0	1	5
6980	6979	"result"	"geometry"	0	0	0	0
6981	6979	"xmin"	"double"	53	0	1	1
6982	6979	"ymin"	"double"	53	0	1	2
6983	6979	"xmax"	"double"	53	0	1	3
6984	6979	"ymax"	"double"	53	0	1	4
6987	6986	"result"	"geometry"	0	0	0	0
6988	6986	"geom"	"geometry"	0	0	1	1
6991	6990	"result"	"geometry"	0	0	0	0
6992	6990	"geom"	"geometry"	0	0	1	1
6993	6990	"srid"	"int"	32	0	1	2
6996	6995	"result"	"mbr"	0	0	0	0
6997	6995	"lowleftpointgeom"	"geometry"	0	0	1	1
6998	6995	"uprightpointgeom"	"geometry"	0	0	1	2
7001	7000	"result"	"clob"	0	0	0	0
7002	7000	"geom"	"geometry"	0	0	1	1
7005	7004	"result"	"int"	32	0	0	0
7006	7004	"geom"	"geometry"	0	0	1	1
7009	7008	"result"	"boolean"	1	0	0	0
7010	7008	"geom"	"geometry"	0	0	1	1
7013	7012	"result"	"clob"	0	0	0	0
7014	7012	"geom"	"geometry"	0	0	1	1
7017	7016	"result"	"int"	32	0	0	0
7018	7016	"geom"	"geometry"	0	0	1	1
7021	7020	"result"	"int"	32	0	0	0
7022	7020	"geom"	"geometry"	0	0	1	1
7025	7024	"result"	"int"	32	0	0	0
7026	7024	"geom"	"geometry"	0	0	1	1
7029	7028	"result"	"double"	53	0	0	0
7030	7028	"geom"	"geometry"	0	0	1	1
7033	7032	"result"	"double"	53	0	0	0
7034	7032	"box"	"mbr"	0	0	1	1
7037	7036	"result"	"double"	53	0	0	0
7038	7036	"geom"	"geometry"	0	0	1	1
7041	7040	"result"	"double"	53	0	0	0
7042	7040	"box"	"mbr"	0	0	1	1
7045	7044	"result"	"double"	53	0	0	0
7046	7044	"geom"	"geometry"	0	0	1	1
7049	7048	"result"	"double"	53	0	0	0
7050	7048	"box"	"mbr"	0	0	1	1
7053	7052	"result"	"double"	53	0	0	0
7054	7052	"geom"	"geometry"	0	0	1	1
7057	7056	"result"	"double"	53	0	0	0
7058	7056	"box"	"mbr"	0	0	1	1
7061	7060	"result"	"geometry"	0	0	0	0
7062	7060	"geom"	"geometry"	0	0	1	1
7065	7064	"result"	"geometry"	0	0	0	0
7066	7064	"geom"	"geometry"	0	0	1	1
7069	7068	"result"	"geometry"	0	0	0	0
7070	7068	"geom"	"geometry"	0	0	1	1
7071	7068	"sz"	"double"	53	0	1	2
7074	7073	"result"	"clob"	0	0	0	0
7075	7073	"srid_in"	"int"	32	0	1	1
7078	7077	"result"	"geometry"	0	0	0	0
7079	7077	"geom"	"geometry"	0	0	1	1
7080	7077	"srid_src"	"int"	32	0	1	2
7081	7077	"srid_dest"	"int"	32	0	1	3
7082	7077	"proj4_src"	"clob"	0	0	1	4
7083	7077	"proj4_dest"	"clob"	0	0	1	5
7086	7085	"result"	"geometry"	0	0	0	0
7087	7085	"geom"	"geometry"	0	0	1	1
7088	7085	"srid"	"int"	32	0	1	2
7091	7090	"result"	"geometry"	0	0	0	0
7092	7090	"geom"	"geometry"	0	0	1	1
7093	7090	"dx"	"double"	53	0	1	2
7094	7090	"dy"	"double"	53	0	1	3
7097	7096	"result"	"geometry"	0	0	0	0
7098	7096	"geom"	"geometry"	0	0	1	1
7099	7096	"dx"	"double"	53	0	1	2
7100	7096	"dy"	"double"	53	0	1	3
7101	7096	"dz"	"double"	53	0	1	4
7104	7103	"result"	"clob"	0	0	0	0
7105	7103	"geom"	"geometry"	0	0	1	1
7108	7107	"result"	"boolean"	1	0	0	0
7109	7107	"geom1"	"geometry"	0	0	1	1
7110	7107	"geom2"	"geometry"	0	0	1	2
7113	7112	"result"	"boolean"	1	0	0	0
7114	7112	"geom1"	"geometry"	0	0	1	1
7115	7112	"geom2"	"geometry"	0	0	1	2
7118	7117	"result"	"boolean"	1	0	0	0
7119	7117	"geom1"	"geometry"	0	0	1	1
7120	7117	"geom2"	"geometry"	0	0	1	2
7121	7117	"dst"	"double"	53	0	1	3
7124	7123	"result"	"double"	53	0	0	0
7125	7123	"geom"	"geometry"	0	0	1	1
7128	7127	"result"	"geometry"	0	0	0	0
7129	7127	"geom1"	"geometry"	0	0	1	1
7130	7127	"geom2"	"geometry"	0	0	1	2
7133	7132	"result"	"geometry"	0	0	0	0
7134	7132	"geom"	"geometry"	0	0	1	1
7137	7136	"result"	"geometry"	0	0	0	0
7138	7136	"geom"	"geometry"	0	0	1	1
7139	7136	"tolerance"	"double"	53	0	1	2
7140	7136	"flags"	"int"	32	0	1	3
7143	7142	"id"	"int"	32	0	0	0
7144	7142	"polygonwkb"	"geometry"	0	0	0	1
7145	7142	"geom"	"geometry"	0	0	1	2
7148	7147	"path"	"clob"	0	0	0	0
7149	7147	"pointg"	"geometry"	0	0	0	1
7150	7147	"geom"	"geometry"	0	0	1	2
7155	7154	"result"	"json"	0	0	0	0
7156	7154	"js"	"json"	0	0	1	1
7157	7154	"pathexpr"	"clob"	0	0	1	2
7160	7159	"result"	"json"	0	0	0	0
7161	7159	"js"	"json"	0	0	1	1
7162	7159	"name"	"tinyint"	8	0	1	2
7165	7164	"result"	"json"	0	0	0	0
7166	7164	"js"	"json"	0	0	1	1
7167	7164	"name"	"int"	32	0	1	2
7170	7169	"result"	"json"	0	0	0	0
7171	7169	"js"	"json"	0	0	1	1
7172	7169	"name"	"bigint"	64	0	1	2
7175	7174	"result"	"clob"	0	0	0	0
7176	7174	"js"	"json"	0	0	1	1
7177	7174	"e"	"clob"	0	0	1	2
7180	7179	"result"	"double"	53	0	0	0
7181	7179	"js"	"json"	0	0	1	1
7184	7183	"result"	"bigint"	64	0	0	0
7185	7183	"js"	"json"	0	0	1	1
7188	7187	"result"	"boolean"	1	0	0	0
7189	7187	"js"	"clob"	0	0	1	1
7192	7191	"result"	"boolean"	1	0	0	0
7193	7191	"js"	"clob"	0	0	1	1
7196	7195	"result"	"boolean"	1	0	0	0
7197	7195	"js"	"clob"	0	0	1	1
7200	7199	"result"	"boolean"	1	0	0	0
7201	7199	"js"	"json"	0	0	1	1
7204	7203	"result"	"boolean"	1	0	0	0
7205	7203	"js"	"json"	0	0	1	1
7208	7207	"result"	"boolean"	1	0	0	0
7209	7207	"js"	"json"	0	0	1	1
7212	7211	"result"	"int"	32	0	0	0
7213	7211	"js"	"json"	0	0	1	1
7216	7215	"result"	"json"	0	0	0	0
7217	7215	"js"	"json"	0	0	1	1
7220	7219	"result"	"json"	0	0	0	0
7221	7219	"js"	"json"	0	0	1	1
7224	7223	"result"	"clob"	0	0	0	0
7225	7223	"js"	"json"	0	0	1	1
7228	7227	"result"	"clob"	0	0	0	0
7229	7227	"js"	"clob"	0	0	1	1
7232	7231	"result"	"clob"	0	0	0	0
7233	7231	"js"	"int"	32	0	1	1
7236	7235	"result"	"clob"	0	0	0	0
7237	7235	"js"	"json"	0	0	1	1
7240	7239	"result"	"clob"	0	0	0	0
7241	7239	"x"	"clob"	0	0	1	1
7244	7243	"result"	"clob"	0	0	0	0
7245	7243	"x"	"double"	53	0	1	1
7248	7247	"result"	"clob"	0	0	0	0
7249	7247	"v"	"clob"	0	0	1	1
7253	7252	"result"	"uuid"	0	0	0	0
7256	7255	"result"	"uuid"	0	0	0	0
7257	7255	"u"	"uuid"	0	0	1	1
7260	7259	"result"	"uuid"	0	0	0	0
7261	7259	"u"	"clob"	0	0	1	1
7264	7263	"result"	"double"	53	0	0	0
7265	7263	"chi2"	"double"	53	0	1	1
7266	7263	"datapoints"	"double"	53	0	1	2
7269	7268	"dirname"	"clob"	0	0	1	0
7272	7271	"fname"	"clob"	0	0	1	0
7275	7274	"tname"	"clob"	0	0	1	0
7278	7277	"dirname"	"clob"	0	0	1	0
7279	7277	"pat"	"clob"	0	0	1	1
7314	7313	"fname"	"varchar"	256	0	1	0
7317	7316	"fid"	"int"	32	0	1	0
7318	7316	"varnname"	"varchar"	256	0	1	1
7321	7320	"schema"	"clob"	0	0	0	0
7322	7320	"table"	"clob"	0	0	0	1
7323	7320	"column"	"clob"	0	0	0	2
7324	7320	"type"	"clob"	0	0	0	3
7325	7320	"mode"	"clob"	0	0	0	4
7326	7320	"location"	"clob"	0	0	0	5
7327	7320	"count"	"bigint"	64	0	0	6
7328	7320	"typewidth"	"int"	32	0	0	7
7329	7320	"columnsize"	"bigint"	64	0	0	8
7330	7320	"heapsize"	"bigint"	64	0	0	9
7331	7320	"hashes"	"bigint"	64	0	0	10
7332	7320	"phash"	"boolean"	1	0	0	11
7333	7320	"imprints"	"bigint"	64	0	0	12
7334	7320	"sorted"	"boolean"	1	0	0	13
7367	7366	"result"	"bigint"	64	0	0	0
7368	7366	"nme"	"clob"	0	0	1	1
7369	7366	"i"	"bigint"	64	0	1	2
7370	7366	"d"	"bigint"	64	0	1	3
7373	7372	"result"	"bigint"	64	0	0	0
7374	7372	"tpe"	"clob"	0	0	1	1
7375	7372	"i"	"bigint"	64	0	1	2
7376	7372	"w"	"int"	32	0	1	3
7379	7378	"result"	"bigint"	64	0	0	0
7380	7378	"b"	"boolean"	1	0	1	1
7381	7378	"i"	"bigint"	64	0	1	2
7384	7383	"result"	"bigint"	64	0	0	0
7385	7383	"i"	"bigint"	64	0	1	1
7386	7383	"nme"	"clob"	0	0	1	2
7389	7388	"schema"	"clob"	0	0	0	0
7390	7388	"table"	"clob"	0	0	0	1
7391	7388	"column"	"clob"	0	0	0	2
7392	7388	"type"	"clob"	0	0	0	3
7393	7388	"count"	"bigint"	64	0	0	4
7394	7388	"columnsize"	"bigint"	64	0	0	5
7395	7388	"heapsize"	"bigint"	64	0	0	6
7396	7388	"hashes"	"bigint"	64	0	0	7
7397	7388	"imprints"	"bigint"	64	0	0	8
7398	7388	"sorted"	"boolean"	1	0	0	9
7438	7437	"tbl"	"clob"	0	0	1	0
7441	7440	"sch"	"clob"	0	0	1	0
7442	7440	"tbl"	"clob"	0	0	1	1
7445	7444	"sch"	"clob"	0	0	1	0
7446	7444	"tbl"	"clob"	0	0	1	1
7447	7444	"col"	"clob"	0	0	1	2
7450	7449	"sample"	"bigint"	64	0	1	0
7453	7452	"tbl"	"clob"	0	0	1	0
7454	7452	"sample"	"bigint"	64	0	1	1
7457	7456	"sch"	"clob"	0	0	1	0
7458	7456	"tbl"	"clob"	0	0	1	1
7459	7456	"sample"	"bigint"	64	0	1	2
7462	7461	"sch"	"clob"	0	0	1	0
7463	7461	"tbl"	"clob"	0	0	1	1
7464	7461	"col"	"clob"	0	0	1	2
7465	7461	"sample"	"bigint"	64	0	1	3
7468	7467	"result"	"clob"	0	0	0	0
7469	7467	"src"	"clob"	0	0	1	1
7472	7471	"result"	"smallint"	16	0	0	0
7473	7471	"one"	"tinyint"	8	0	1	1
7474	7471	"two"	"tinyint"	8	0	1	2
7477	7476	"result"	"int"	32	0	0	0
7478	7476	"one"	"smallint"	16	0	1	1
7479	7476	"two"	"smallint"	16	0	1	2
7482	7481	"result"	"bigint"	64	0	0	0
7483	7481	"one"	"int"	32	0	1	1
7484	7481	"two"	"int"	32	0	1	2
7488	7487	"bam_repos"	"clob"	0	0	1	0
7489	7487	"dbschema"	"smallint"	16	0	1	1
7490	7487	"nr_threads"	"smallint"	16	0	1	2
7493	7492	"bam_files"	"clob"	0	0	1	0
7494	7492	"dbschema"	"smallint"	16	0	1	1
7495	7492	"nr_threads"	"smallint"	16	0	1	2
7498	7497	"bam_file"	"clob"	0	0	1	0
7499	7497	"dbschema"	"smallint"	16	0	1	1
7502	7501	"file_id"	"bigint"	64	0	1	0
7503	7501	"dbschema"	"smallint"	16	0	1	1
7506	7505	"result"	"boolean"	1	0	0	0
7507	7505	"flag"	"smallint"	16	0	1	1
7508	7505	"name"	"clob"	0	0	1	2
7511	7510	"result"	"clob"	0	0	0	0
7512	7510	"seq"	"clob"	0	0	1	1
7515	7514	"result"	"clob"	0	0	0	0
7516	7514	"qual"	"clob"	0	0	1	1
7519	7518	"result"	"int"	32	0	0	0
7520	7518	"cigar"	"clob"	0	0	1	1
7523	7522	"output_path"	"clob"	0	0	1	0
7526	7525	"output_path"	"clob"	0	0	1	0
7596	7595	"value"	"tinyint"	8	0	0	0
7597	7595	"first"	"tinyint"	8	0	1	1
7598	7595	"last"	"tinyint"	8	0	1	2
7601	7600	"value"	"tinyint"	8	0	0	0
7602	7600	"first"	"tinyint"	8	0	1	1
7603	7600	"last"	"tinyint"	8	0	1	2
7604	7600	"stepsize"	"tinyint"	8	0	1	3
7607	7606	"value"	"smallint"	16	0	0	0
7608	7606	"first"	"smallint"	16	0	1	1
7609	7606	"last"	"smallint"	16	0	1	2
7612	7611	"value"	"smallint"	16	0	0	0
7613	7611	"first"	"smallint"	16	0	1	1
7614	7611	"last"	"smallint"	16	0	1	2
7615	7611	"stepsize"	"smallint"	16	0	1	3
7618	7617	"value"	"int"	32	0	0	0
7619	7617	"first"	"int"	32	0	1	1
7620	7617	"last"	"int"	32	0	1	2
7623	7622	"value"	"int"	32	0	0	0
7624	7622	"first"	"int"	32	0	1	1
7625	7622	"last"	"int"	32	0	1	2
7626	7622	"stepsize"	"int"	32	0	1	3
7629	7628	"value"	"bigint"	64	0	0	0
7630	7628	"first"	"bigint"	64	0	1	1
7631	7628	"last"	"bigint"	64	0	1	2
7634	7633	"value"	"bigint"	64	0	0	0
7635	7633	"first"	"bigint"	64	0	1	1
7636	7633	"last"	"bigint"	64	0	1	2
7637	7633	"stepsize"	"bigint"	64	0	1	3
7640	7639	"value"	"real"	24	0	0	0
7641	7639	"first"	"real"	24	0	1	1
7642	7639	"last"	"real"	24	0	1	2
7643	7639	"stepsize"	"real"	24	0	1	3
7646	7645	"value"	"double"	53	0	0	0
7647	7645	"first"	"double"	53	0	1	1
7648	7645	"last"	"double"	53	0	1	2
7649	7645	"stepsize"	"double"	53	0	1	3
7652	7651	"value"	"decimal"	10	2	0	0
7653	7651	"first"	"decimal"	10	2	1	1
7654	7651	"last"	"decimal"	10	2	1	2
7655	7651	"stepsize"	"decimal"	10	2	1	3
7658	7657	"value"	"timestamp"	7	0	0	0
7659	7657	"first"	"timestamp"	7	0	1	1
7660	7657	"last"	"timestamp"	7	0	1	2
7661	7657	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 254 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
393	5735	7
394	5735	7
1025	5735	7
393	5739	7
394	5739	7
1025	5739	7
5888	5917	5
5898	5928	5
5888	5946	5
5898	5946	5
5957	5985	5
2003	6018	7
2001	6018	7
2002	6018	7
5699	6018	7
5708	6023	7
5706	6023	7
5707	6023	7
2005	6023	7
2001	6023	7
2003	6023	7
5667	6028	7
2047	6028	7
2046	6028	7
2049	6028	7
2048	6028	7
5667	6033	7
2088	6033	7
2086	6033	7
2090	6033	7
2083	6033	7
2079	6033	7
5667	6038	7
2047	6038	7
2046	6038	7
2049	6038	7
2092	6038	7
2091	6038	7
2048	6038	7
2093	6038	7
2094	6038	7
5667	6043	7
2081	6043	7
2079	6043	7
2084	6043	7
2080	6043	7
2083	6043	7
5667	6048	7
2047	6048	7
2046	6048	7
2049	6048	7
2017	6048	7
2016	6048	7
2048	6048	7
2018	6048	7
5677	6053	7
2047	6053	7
2046	6053	7
2049	6053	7
2048	6053	7
5667	6053	7
5677	6058	7
2081	6058	7
2079	6058	7
2084	6058	7
2103	6058	7
2102	6058	7
2104	6058	7
2080	6058	7
2083	6058	7
177	6058	7
60	6058	7
59	6058	7
61	6058	7
5677	6063	7
2088	6063	7
2086	6063	7
2090	6063	7
2083	6063	7
2079	6063	7
2087	6063	7
2103	6063	7
2102	6063	7
2104	6063	7
60	6063	7
59	6063	7
61	6063	7
5677	6068	7
2047	6068	7
2046	6068	7
2049	6068	7
2048	6068	7
2017	6068	7
2016	6068	7
2018	6068	7
5677	6073	7
2047	6073	7
2046	6073	7
2049	6073	7
2092	6073	7
2091	6073	7
2048	6073	7
2093	6073	7
5667	6078	7
2047	6078	7
2046	6078	7
2049	6078	7
2017	6078	7
2016	6078	7
2048	6078	7
2018	6078	7
5667	6083	7
2047	6083	7
2046	6083	7
2049	6083	7
2092	6083	7
2091	6083	7
2048	6083	7
2093	6083	7
2018	6088	7
2016	6088	7
2017	6088	7
2047	6088	7
2046	6088	7
2049	6088	7
2048	6088	7
2018	6093	7
2016	6093	7
2017	6093	7
2047	6093	7
2046	6093	7
2049	6093	7
2092	6093	7
2091	6093	7
2048	6093	7
2093	6093	7
2083	6098	7
2079	6098	7
2080	6098	7
2084	6098	7
6107	6121	5
141	6140	7
66	6140	7
64	6140	7
1166	6140	7
1152	6140	7
236	6140	7
1163	6140	7
237	6140	7
61	6152	7
457	6152	7
141	6152	7
143	6152	7
63	6152	7
6147	6152	7
6193	6201	5
6203	6209	5
6229	6247	5
6574	6576	10
6574	6575	4
6209	6590	5
5667	6590	5
5677	6590	5
2010	6590	5
2007	6590	5
2009	6590	5
2002	6590	5
2001	6590	5
2003	6590	5
237	6590	5
6561	6590	5
6565	6590	5
6569	6590	5
6824	6833	7
6828	6837	7
6580	7073	7
6581	7073	7
6574	7073	7
68	7073	7
6641	7085	7
7073	7085	7
63	7085	7
7077	7085	7
141	7085	7
143	7085	7
7320	7350	5
7352	7364	13
7362	7364	13
7353	7364	13
7354	7364	13
7355	7364	13
7356	7364	13
7357	7364	13
7358	7364	13
7359	7364	13
7360	7364	13
7361	7364	13
61	7366	7
238	7366	7
244	7366	7
140	7372	7
62	7372	7
237	7372	7
238	7372	7
61	7378	7
238	7378	7
141	7383	7
61	7383	7
353	7383	7
7352	7388	7
7362	7388	7
7353	7388	7
7354	7388	7
7355	7388	7
7357	7388	7
7358	7388	7
7359	7388	7
7360	7388	7
7361	7388	7
7366	7388	7
7372	7388	7
7378	7388	7
7383	7388	7
7388	7410	5
7388	7420	5
76	7420	5
83	7420	5
79	7420	5
63	7420	5
61	7420	5
238	7420	5
7528	7535	10
7528	7534	4
7538	7546	10
7539	7546	10
7539	7548	10
7538	7545	4
7539	7545	4
7534	7547	11
7539	7547	11
7551	7565	10
7552	7565	10
7552	7567	10
7551	7564	4
7552	7564	4
7534	7566	11
7552	7566	11
7570	7577	10
7571	7577	10
7571	7579	10
7570	7576	4
7571	7576	4
7534	7578	11
7571	7578	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1594 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
31	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
32	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
33	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
34	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
35	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
36	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
37	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
38	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
39	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
40	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
41	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
42	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
43	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
44	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
45	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
46	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
47	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
48	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
49	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
50	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
51	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
52	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
53	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
54	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
55	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
57	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
58	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
59	"hash"	"hash"	"mkey"	0	1	false	false	false	0
60	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
61	"="	"="	"calc"	0	1	false	false	false	0
62	"<>"	"!="	"calc"	0	1	false	false	false	0
63	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
64	">"	">"	"calc"	0	1	false	false	false	0
65	">="	">="	"calc"	0	1	false	false	false	0
66	"<"	"<"	"calc"	0	1	false	false	false	0
67	"<="	"<="	"calc"	0	1	false	false	false	0
71	"in"	"in"	"calc"	0	1	false	false	false	0
72	"identity"	"identity"	"calc"	0	1	false	false	false	0
73	"rowid"	"identity"	"calc"	0	1	false	false	false	0
74	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
77	"sql_min"	"min"	"calc"	0	1	false	false	false	0
78	"sql_max"	"max"	"calc"	0	1	false	false	false	0
79	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
98	"mod"	"%"	"calc"	0	1	false	false	false	0
99	"mod"	"%"	"calc"	0	1	false	false	false	0
100	"mod"	"%"	"calc"	0	1	false	false	false	0
101	"mod"	"%"	"calc"	0	1	false	false	false	0
102	"mod"	"%"	"calc"	0	1	false	false	false	0
103	"mod"	"%"	"calc"	0	1	false	false	false	0
104	"mod"	"%"	"calc"	0	1	false	false	false	0
105	"mod"	"%"	"calc"	0	1	false	false	false	0
106	"mod"	"%"	"calc"	0	1	false	false	false	0
107	"mod"	"%"	"calc"	0	1	false	false	false	0
108	"mod"	"%"	"calc"	0	1	false	false	false	0
109	"mod"	"%"	"calc"	0	1	false	false	false	0
117	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
118	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
119	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
120	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
121	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
122	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
123	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
124	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
125	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
126	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
127	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
128	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
129	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
130	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
131	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
132	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
133	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
134	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
135	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
136	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
137	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
138	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
139	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
140	"and"	"and"	"calc"	0	1	false	false	false	0
141	"or"	"or"	"calc"	0	1	false	false	false	0
142	"xor"	"xor"	"calc"	0	1	false	false	false	0
143	"not"	"not"	"calc"	0	1	false	false	false	0
144	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
145	"sql_add"	"+"	"calc"	0	1	false	false	false	0
146	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
147	"sql_div"	"/"	"calc"	0	1	false	false	false	0
148	"bit_and"	"and"	"calc"	0	1	false	false	false	0
149	"bit_or"	"or"	"calc"	0	1	false	false	false	0
150	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
151	"bit_not"	"not"	"calc"	0	1	false	false	false	0
152	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
153	"right_shift"	">>"	"calc"	0	1	false	false	false	0
154	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
155	"abs"	"abs"	"calc"	0	1	false	false	false	0
156	"sign"	"sign"	"calc"	0	1	false	false	false	0
157	"scale_up"	"*"	"calc"	0	1	false	false	false	0
158	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
159	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
160	"sql_add"	"+"	"calc"	0	1	false	false	false	0
161	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
162	"sql_div"	"/"	"calc"	0	1	false	false	false	0
163	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
164	"sql_add"	"+"	"calc"	0	1	false	false	false	0
165	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
166	"sql_div"	"/"	"calc"	0	1	false	false	false	0
167	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
168	"sql_add"	"+"	"calc"	0	1	false	false	false	0
169	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
170	"sql_div"	"/"	"calc"	0	1	false	false	false	0
171	"bit_and"	"and"	"calc"	0	1	false	false	false	0
172	"bit_or"	"or"	"calc"	0	1	false	false	false	0
173	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
174	"bit_not"	"not"	"calc"	0	1	false	false	false	0
175	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
176	"right_shift"	">>"	"calc"	0	1	false	false	false	0
177	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
178	"abs"	"abs"	"calc"	0	1	false	false	false	0
179	"sign"	"sign"	"calc"	0	1	false	false	false	0
180	"scale_up"	"*"	"calc"	0	1	false	false	false	0
181	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
182	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
183	"sql_add"	"+"	"calc"	0	1	false	false	false	0
184	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
185	"sql_div"	"/"	"calc"	0	1	false	false	false	0
186	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
187	"sql_add"	"+"	"calc"	0	1	false	false	false	0
188	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
189	"sql_div"	"/"	"calc"	0	1	false	false	false	0
190	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
191	"sql_add"	"+"	"calc"	0	1	false	false	false	0
192	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
193	"sql_div"	"/"	"calc"	0	1	false	false	false	0
194	"bit_and"	"and"	"calc"	0	1	false	false	false	0
195	"bit_or"	"or"	"calc"	0	1	false	false	false	0
196	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
197	"bit_not"	"not"	"calc"	0	1	false	false	false	0
198	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
199	"right_shift"	">>"	"calc"	0	1	false	false	false	0
200	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
201	"abs"	"abs"	"calc"	0	1	false	false	false	0
202	"sign"	"sign"	"calc"	0	1	false	false	false	0
203	"scale_up"	"*"	"calc"	0	1	false	false	false	0
204	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
205	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
206	"sql_add"	"+"	"calc"	0	1	false	false	false	0
207	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
208	"sql_div"	"/"	"calc"	0	1	false	false	false	0
209	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
210	"sql_add"	"+"	"calc"	0	1	false	false	false	0
211	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
212	"sql_div"	"/"	"calc"	0	1	false	false	false	0
213	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
214	"sql_add"	"+"	"calc"	0	1	false	false	false	0
215	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
216	"sql_div"	"/"	"calc"	0	1	false	false	false	0
217	"bit_and"	"and"	"calc"	0	1	false	false	false	0
218	"bit_or"	"or"	"calc"	0	1	false	false	false	0
219	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
220	"bit_not"	"not"	"calc"	0	1	false	false	false	0
221	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
222	"right_shift"	">>"	"calc"	0	1	false	false	false	0
223	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
224	"abs"	"abs"	"calc"	0	1	false	false	false	0
225	"sign"	"sign"	"calc"	0	1	false	false	false	0
226	"scale_up"	"*"	"calc"	0	1	false	false	false	0
227	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
228	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
229	"sql_add"	"+"	"calc"	0	1	false	false	false	0
230	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
231	"sql_div"	"/"	"calc"	0	1	false	false	false	0
232	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
233	"sql_add"	"+"	"calc"	0	1	false	false	false	0
234	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
235	"sql_div"	"/"	"calc"	0	1	false	false	false	0
236	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
237	"sql_add"	"+"	"calc"	0	1	false	false	false	0
238	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
239	"sql_div"	"/"	"calc"	0	1	false	false	false	0
240	"bit_and"	"and"	"calc"	0	1	false	false	false	0
241	"bit_or"	"or"	"calc"	0	1	false	false	false	0
242	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
243	"bit_not"	"not"	"calc"	0	1	false	false	false	0
244	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
245	"right_shift"	">>"	"calc"	0	1	false	false	false	0
246	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
247	"abs"	"abs"	"calc"	0	1	false	false	false	0
248	"sign"	"sign"	"calc"	0	1	false	false	false	0
249	"scale_up"	"*"	"calc"	0	1	false	false	false	0
250	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
251	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
252	"sql_add"	"+"	"calc"	0	1	false	false	false	0
253	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
254	"sql_div"	"/"	"calc"	0	1	false	false	false	0
255	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
256	"sql_add"	"+"	"calc"	0	1	false	false	false	0
257	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
258	"sql_div"	"/"	"calc"	0	1	false	false	false	0
259	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
260	"sql_add"	"+"	"calc"	0	1	false	false	false	0
261	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
262	"sql_div"	"/"	"calc"	0	1	false	false	false	0
263	"bit_and"	"and"	"calc"	0	1	false	false	false	0
264	"bit_or"	"or"	"calc"	0	1	false	false	false	0
265	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
266	"bit_not"	"not"	"calc"	0	1	false	false	false	0
267	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
268	"right_shift"	">>"	"calc"	0	1	false	false	false	0
269	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
270	"abs"	"abs"	"calc"	0	1	false	false	false	0
271	"sign"	"sign"	"calc"	0	1	false	false	false	0
272	"scale_up"	"*"	"calc"	0	1	false	false	false	0
273	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
274	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
275	"sql_add"	"+"	"calc"	0	1	false	false	false	0
276	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
277	"sql_div"	"/"	"calc"	0	1	false	false	false	0
278	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
279	"sql_add"	"+"	"calc"	0	1	false	false	false	0
280	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
281	"sql_div"	"/"	"calc"	0	1	false	false	false	0
282	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
283	"sql_add"	"+"	"calc"	0	1	false	false	false	0
284	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
285	"sql_div"	"/"	"calc"	0	1	false	false	false	0
286	"bit_and"	"and"	"calc"	0	1	false	false	false	0
287	"bit_or"	"or"	"calc"	0	1	false	false	false	0
288	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
289	"bit_not"	"not"	"calc"	0	1	false	false	false	0
290	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
291	"right_shift"	">>"	"calc"	0	1	false	false	false	0
292	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
293	"abs"	"abs"	"calc"	0	1	false	false	false	0
294	"sign"	"sign"	"calc"	0	1	false	false	false	0
295	"scale_up"	"*"	"calc"	0	1	false	false	false	0
296	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
297	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
298	"sql_add"	"+"	"calc"	0	1	false	false	false	0
299	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
300	"sql_div"	"/"	"calc"	0	1	false	false	false	0
301	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
302	"sql_add"	"+"	"calc"	0	1	false	false	false	0
303	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
304	"sql_div"	"/"	"calc"	0	1	false	false	false	0
305	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
306	"sql_add"	"+"	"calc"	0	1	false	false	false	0
307	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
308	"sql_div"	"/"	"calc"	0	1	false	false	false	0
309	"bit_and"	"and"	"calc"	0	1	false	false	false	0
310	"bit_or"	"or"	"calc"	0	1	false	false	false	0
311	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
312	"bit_not"	"not"	"calc"	0	1	false	false	false	0
313	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
314	"right_shift"	">>"	"calc"	0	1	false	false	false	0
315	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
316	"abs"	"abs"	"calc"	0	1	false	false	false	0
317	"sign"	"sign"	"calc"	0	1	false	false	false	0
318	"scale_up"	"*"	"calc"	0	1	false	false	false	0
319	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
320	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
321	"sql_add"	"+"	"calc"	0	1	false	false	false	0
322	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
323	"sql_div"	"/"	"calc"	0	1	false	false	false	0
324	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
325	"sql_add"	"+"	"calc"	0	1	false	false	false	0
326	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
327	"sql_div"	"/"	"calc"	0	1	false	false	false	0
328	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
329	"sql_add"	"+"	"calc"	0	1	false	false	false	0
330	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
331	"sql_div"	"/"	"calc"	0	1	false	false	false	0
332	"bit_and"	"and"	"calc"	0	1	false	false	false	0
333	"bit_or"	"or"	"calc"	0	1	false	false	false	0
334	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
335	"bit_not"	"not"	"calc"	0	1	false	false	false	0
336	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
337	"right_shift"	">>"	"calc"	0	1	false	false	false	0
338	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
339	"abs"	"abs"	"calc"	0	1	false	false	false	0
340	"sign"	"sign"	"calc"	0	1	false	false	false	0
341	"scale_up"	"*"	"calc"	0	1	false	false	false	0
342	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
343	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
344	"sql_add"	"+"	"calc"	0	1	false	false	false	0
345	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
346	"sql_div"	"/"	"calc"	0	1	false	false	false	0
347	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
348	"sql_add"	"+"	"calc"	0	1	false	false	false	0
349	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
350	"sql_div"	"/"	"calc"	0	1	false	false	false	0
351	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
352	"sql_add"	"+"	"calc"	0	1	false	false	false	0
353	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
354	"sql_div"	"/"	"calc"	0	1	false	false	false	0
355	"bit_and"	"and"	"calc"	0	1	false	false	false	0
356	"bit_or"	"or"	"calc"	0	1	false	false	false	0
357	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
358	"bit_not"	"not"	"calc"	0	1	false	false	false	0
359	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
360	"right_shift"	">>"	"calc"	0	1	false	false	false	0
361	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
362	"abs"	"abs"	"calc"	0	1	false	false	false	0
363	"sign"	"sign"	"calc"	0	1	false	false	false	0
364	"scale_up"	"*"	"calc"	0	1	false	false	false	0
365	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
366	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
367	"sql_add"	"+"	"calc"	0	1	false	false	false	0
368	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
369	"sql_div"	"/"	"calc"	0	1	false	false	false	0
370	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
371	"sql_add"	"+"	"calc"	0	1	false	false	false	0
372	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
373	"sql_div"	"/"	"calc"	0	1	false	false	false	0
374	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
375	"sql_add"	"+"	"calc"	0	1	false	false	false	0
376	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
377	"sql_div"	"/"	"calc"	0	1	false	false	false	0
378	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
379	"abs"	"abs"	"calc"	0	1	false	false	false	0
380	"sign"	"sign"	"calc"	0	1	false	false	false	0
381	"scale_up"	"*"	"calc"	0	1	false	false	false	0
382	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
383	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
384	"sql_add"	"+"	"calc"	0	1	false	false	false	0
385	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
386	"sql_div"	"/"	"calc"	0	1	false	false	false	0
387	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
388	"sql_add"	"+"	"calc"	0	1	false	false	false	0
389	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
390	"sql_div"	"/"	"calc"	0	1	false	false	false	0
391	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
392	"sql_add"	"+"	"calc"	0	1	false	false	false	0
393	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
394	"sql_div"	"/"	"calc"	0	1	false	false	false	0
395	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
396	"abs"	"abs"	"calc"	0	1	false	false	false	0
397	"sign"	"sign"	"calc"	0	1	false	false	false	0
398	"scale_up"	"*"	"calc"	0	1	false	false	false	0
399	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
400	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
401	"sql_add"	"+"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_div"	"/"	"calc"	0	1	false	false	false	0
404	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
405	"sql_add"	"+"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_div"	"/"	"calc"	0	1	false	false	false	0
408	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
409	"sql_add"	"+"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_div"	"/"	"calc"	0	1	false	false	false	0
412	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
413	"abs"	"abs"	"calc"	0	1	false	false	false	0
414	"sign"	"sign"	"calc"	0	1	false	false	false	0
415	"scale_up"	"*"	"calc"	0	1	false	false	false	0
416	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
417	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
418	"sql_add"	"+"	"calc"	0	1	false	false	false	0
419	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
420	"sql_div"	"/"	"calc"	0	1	false	false	false	0
421	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
422	"abs"	"abs"	"calc"	0	1	false	false	false	0
423	"sign"	"sign"	"calc"	0	1	false	false	false	0
424	"scale_up"	"*"	"calc"	0	1	false	false	false	0
425	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
426	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
427	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
428	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
429	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
430	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
431	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
432	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
433	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
435	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
452	"round"	"round"	"sql"	0	1	false	false	false	0
453	"round"	"round"	"sql"	0	1	false	false	false	0
454	"round"	"round"	"sql"	0	1	false	false	false	0
455	"round"	"round"	"sql"	0	1	false	false	false	0
456	"round"	"round"	"sql"	0	1	false	false	false	0
457	"round"	"round"	"sql"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"power"	"pow"	"mmath"	0	1	false	false	false	0
988	"floor"	"floor"	"mmath"	0	1	false	false	false	0
989	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
990	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
991	"sin"	"sin"	"mmath"	0	1	false	false	false	0
992	"cos"	"cos"	"mmath"	0	1	false	false	false	0
993	"tan"	"tan"	"mmath"	0	1	false	false	false	0
994	"asin"	"asin"	"mmath"	0	1	false	false	false	0
995	"acos"	"acos"	"mmath"	0	1	false	false	false	0
996	"atan"	"atan"	"mmath"	0	1	false	false	false	0
997	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
998	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
999	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1000	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1001	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1002	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1003	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1004	"log"	"log"	"mmath"	0	1	false	false	false	0
1005	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1006	"power"	"pow"	"mmath"	0	1	false	false	false	0
1007	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1008	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1009	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1010	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1011	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1012	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1013	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1014	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1015	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1016	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1017	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1018	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1019	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1020	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1021	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1022	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1023	"log"	"log"	"mmath"	0	1	false	false	false	0
1024	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1025	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1026	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1027	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1028	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1029	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1030	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1031	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1032	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1033	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1034	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1035	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1036	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1037	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1038	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1039	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1040	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1041	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1042	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1043	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1044	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1045	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1046	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1047	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1048	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1049	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1050	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1051	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1052	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1053	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1054	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1055	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1056	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1057	"year"	"year"	"mtime"	0	1	false	false	false	0
1058	"month"	"month"	"mtime"	0	1	false	false	false	0
1059	"day"	"day"	"mtime"	0	1	false	false	false	0
1060	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1061	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1062	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1063	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1064	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1065	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1066	"year"	"year"	"mtime"	0	1	false	false	false	0
1067	"month"	"month"	"mtime"	0	1	false	false	false	0
1068	"day"	"day"	"mtime"	0	1	false	false	false	0
1069	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1070	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1071	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1072	"year"	"year"	"mtime"	0	1	false	false	false	0
1073	"month"	"month"	"mtime"	0	1	false	false	false	0
1074	"day"	"day"	"mtime"	0	1	false	false	false	0
1075	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1076	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1077	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1078	"year"	"year"	"mtime"	0	1	false	false	false	0
1079	"month"	"month"	"mtime"	0	1	false	false	false	0
1080	"day"	"day"	"mtime"	0	1	false	false	false	0
1081	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1082	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1083	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1084	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1085	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1086	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1087	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1088	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1089	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1090	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1091	"restart"	"restart"	"sql"	0	1	false	false	false	0
1092	"index"	"index"	"calc"	0	1	false	false	false	0
1093	"index"	"index"	"calc"	0	1	false	false	false	0
1094	"index"	"index"	"calc"	0	1	false	false	false	0
1095	"strings"	"strings"	"calc"	0	1	false	false	false	0
1096	"locate"	"locate"	"str"	0	1	false	false	false	0
1097	"locate"	"locate"	"str"	0	1	false	false	false	0
1098	"substring"	"substring"	"str"	0	1	false	false	false	0
1099	"substring"	"substring"	"str"	0	1	false	false	false	0
1100	"like"	"like"	"algebra"	0	1	false	false	false	0
1101	"like"	"like"	"algebra"	0	1	false	false	false	0
1102	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1103	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1104	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1105	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1106	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1107	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1108	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1109	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1110	"concat"	"+"	"calc"	0	1	false	false	false	0
1111	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1112	"code"	"unicode"	"str"	0	1	false	false	false	0
1113	"length"	"stringlength"	"str"	0	1	false	false	false	0
1114	"right"	"stringright"	"str"	0	1	false	false	false	0
1115	"left"	"stringleft"	"str"	0	1	false	false	false	0
1116	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1117	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1118	"lower"	"toLower"	"str"	0	1	false	false	false	0
1119	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1120	"trim"	"trim"	"str"	0	1	false	false	false	0
1121	"trim"	"trim"	"str"	0	1	false	false	false	0
1122	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1123	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1124	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1125	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1126	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1127	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1128	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1129	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1130	"insert"	"insert"	"str"	0	1	false	false	false	0
1131	"replace"	"replace"	"str"	0	1	false	false	false	0
1132	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1133	"space"	"space"	"str"	0	1	false	false	false	0
1134	"char_length"	"length"	"str"	0	1	false	false	false	0
1135	"character_length"	"length"	"str"	0	1	false	false	false	0
1136	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1137	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1138	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1139	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1140	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1141	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1142	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1143	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1144	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1145	"index"	"index"	"calc"	0	1	false	false	false	0
1146	"index"	"index"	"calc"	0	1	false	false	false	0
1147	"index"	"index"	"calc"	0	1	false	false	false	0
1148	"strings"	"strings"	"calc"	0	1	false	false	false	0
1149	"locate"	"locate"	"str"	0	1	false	false	false	0
1150	"locate"	"locate"	"str"	0	1	false	false	false	0
1151	"substring"	"substring"	"str"	0	1	false	false	false	0
1152	"substring"	"substring"	"str"	0	1	false	false	false	0
1153	"like"	"like"	"algebra"	0	1	false	false	false	0
1154	"like"	"like"	"algebra"	0	1	false	false	false	0
1155	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1156	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1157	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1158	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1159	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1160	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1161	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1162	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1163	"concat"	"+"	"calc"	0	1	false	false	false	0
1164	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1165	"code"	"unicode"	"str"	0	1	false	false	false	0
1166	"length"	"stringlength"	"str"	0	1	false	false	false	0
1167	"right"	"stringright"	"str"	0	1	false	false	false	0
1168	"left"	"stringleft"	"str"	0	1	false	false	false	0
1169	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1170	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1171	"lower"	"toLower"	"str"	0	1	false	false	false	0
1172	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1173	"trim"	"trim"	"str"	0	1	false	false	false	0
1174	"trim"	"trim"	"str"	0	1	false	false	false	0
1175	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1176	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1177	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1178	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1179	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1180	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1181	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1182	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1183	"insert"	"insert"	"str"	0	1	false	false	false	0
1184	"replace"	"replace"	"str"	0	1	false	false	false	0
1185	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1186	"space"	"space"	"str"	0	1	false	false	false	0
1187	"char_length"	"length"	"str"	0	1	false	false	false	0
1188	"character_length"	"length"	"str"	0	1	false	false	false	0
1189	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1190	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1191	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1192	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1193	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1194	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1195	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1196	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1197	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1198	"index"	"index"	"calc"	0	1	false	false	false	0
1199	"index"	"index"	"calc"	0	1	false	false	false	0
1200	"index"	"index"	"calc"	0	1	false	false	false	0
1201	"strings"	"strings"	"calc"	0	1	false	false	false	0
1202	"locate"	"locate"	"str"	0	1	false	false	false	0
1203	"locate"	"locate"	"str"	0	1	false	false	false	0
1204	"substring"	"substring"	"str"	0	1	false	false	false	0
1205	"substring"	"substring"	"str"	0	1	false	false	false	0
1206	"like"	"like"	"algebra"	0	1	false	false	false	0
1207	"like"	"like"	"algebra"	0	1	false	false	false	0
1208	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1209	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1210	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1211	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1212	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1213	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1214	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1215	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1216	"concat"	"+"	"calc"	0	1	false	false	false	0
1217	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1218	"code"	"unicode"	"str"	0	1	false	false	false	0
1219	"length"	"stringlength"	"str"	0	1	false	false	false	0
1220	"right"	"stringright"	"str"	0	1	false	false	false	0
1221	"left"	"stringleft"	"str"	0	1	false	false	false	0
1222	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1223	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1224	"lower"	"toLower"	"str"	0	1	false	false	false	0
1225	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1226	"trim"	"trim"	"str"	0	1	false	false	false	0
1227	"trim"	"trim"	"str"	0	1	false	false	false	0
1228	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1229	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1230	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1231	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1232	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1233	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1234	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1235	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1236	"insert"	"insert"	"str"	0	1	false	false	false	0
1237	"replace"	"replace"	"str"	0	1	false	false	false	0
1238	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1239	"space"	"space"	"str"	0	1	false	false	false	0
1240	"char_length"	"length"	"str"	0	1	false	false	false	0
1241	"character_length"	"length"	"str"	0	1	false	false	false	0
1242	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1243	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1244	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1245	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1246	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1247	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1248	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1249	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1250	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1251	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1252	"copyfrom"	"copyfrom"	"sql"	0	5	false	true	false	0
1253	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
56	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
68	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
69	"exist"	"exist"	"aggr"	0	3	false	false	false	0
70	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
75	"min"	"min"	"aggr"	0	3	false	false	false	0
76	"max"	"max"	"aggr"	0	3	false	false	false	0
80	"sum"	"sum"	"aggr"	0	3	false	false	false	0
81	"sum"	"sum"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"sum"	"sum"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"sum"	"sum"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"prod"	"prod"	"aggr"	0	3	false	false	false	0
90	"prod"	"prod"	"aggr"	0	3	false	false	false	0
91	"prod"	"prod"	"aggr"	0	3	false	false	false	0
92	"prod"	"prod"	"aggr"	0	3	false	false	false	0
93	"prod"	"prod"	"aggr"	0	3	false	false	false	0
94	"prod"	"prod"	"aggr"	0	3	false	false	false	0
95	"prod"	"prod"	"aggr"	0	3	false	false	false	0
96	"prod"	"prod"	"aggr"	0	3	false	false	false	0
97	"prod"	"prod"	"aggr"	0	3	false	false	false	0
110	"sum"	"sum"	"aggr"	0	3	false	false	false	0
111	"prod"	"prod"	"aggr"	0	3	false	false	false	0
112	"sum"	"sum"	"aggr"	0	3	false	false	false	0
113	"prod"	"prod"	"aggr"	0	3	false	false	false	0
114	"avg"	"avg"	"aggr"	0	3	false	false	false	0
115	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
116	"count"	"count"	"aggr"	0	3	false	false	false	0
5688	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5691	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5697	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5717	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5722	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5727	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5731	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5735	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double) \nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5739	"radians"	"create function radians(d double) \nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5743	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5746	"getanchor"	"create function getanchor( theurl url ) returns string \n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5750	"getbasename"	"create function getbasename(theurl url) returns string       \n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5754	"getcontent"	"create function getcontent(theurl url)   returns string       \n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5758	"getcontext"	"create function getcontext(theurl url)   returns string       \n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5762	"getdomain"	"create function getdomain(theurl url) returns string       \n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5766	"getextension"	"create function getextension(theurl url) returns string       \n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5770	"getfile"	"create function getfile(theurl url) returns string       \n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5774	"gethost"	"create function gethost(theurl url)   returns string       \n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5778	"getport"	"create function getport(theurl url) returns string       \n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5782	"getprotocol"	"create function getprotocol(theurl url) returns string       \n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5786	"getquery"	"create function getquery(theurl url) returns string       \n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5790	"getuser"	"create function getuser(theurl url) returns string       \n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5794	"getroboturl"	"create function getroboturl(theurl url) returns string       \n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5798	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5802	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string) \n\treturns url       \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5809	"newurl"	"create function newurl(protocol string, hostname string, file string) \n\treturns url \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5815	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5820	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5825	"convert"	"create function ""convert""(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5831	"broadcast"	"create function ""broadcast"" (p inet) returns inet \n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5835	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5839	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5843	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5848	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5852	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5856	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5860	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5864	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5868	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5873	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5878	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5883	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5888	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions. \n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t\t-- size of MAL plan\n\toptimize bigint \t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5898	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the \n-- server during execution phase. \n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,  \t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5948	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5950	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5952	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5955	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5957	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog() \n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20), \t-- wallclock, no mtime in kernel\n\t\tpc varchar(50), \t-- module.function[nr]\n\t\tthread int, \t\t-- thread identifier\n\t\tticks bigint, \t\t-- time in microseconds\n\t\trrsmb bigint, \t\t-- resident memory in MB\n\t\tvmmb bigint, \t\t-- virtual size in MB\n\t\treads bigint, \t\t-- number of blocks read\n\t\twrites bigint, \t\t-- number of blocks written\n\t\tminflt bigint, \t\t-- minor page faults\n\t\tmajflt bigint, \t\t-- major page faults\n\t\tnvcsw bigint, \t\t-- non-volantary conext switch\n\t\tstmt string\t\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5987	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5991	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5994	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function ""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5998	"epoch"	"create function ""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6002	"epoch"	"create function ""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6006	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
6010	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
6014	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6018	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6023	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6028	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6033	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6038	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6043	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6048	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6053	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6058	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6063	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i \ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6068	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6073	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6078	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6083	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6088	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6093	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6098	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6103	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string) \n\treturns string \n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6107	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6123	"shutdown"	"create procedure sys.shutdown(delay tinyint) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6126	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6130	"settimeout"	"-- control the query and session time out \ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6133	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6137	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6140	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6147	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6152	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6158	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6164	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6169	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6174	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6178	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6182	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats () \n\treturns table (rewrite string, count int) \n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6186	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache() \n\treturns table (query string, count int) \n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6190	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string) \n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6193	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers () \n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6203	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6211	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp () \n\treturns table (id int, name string, htype string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int, \n\t\tlocation string, heat int, dirty string, \n\t\tstatus string, kind string) \n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6225	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6229	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6249	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6252	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6255	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6258	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6261	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6264	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6267	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6271	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6275	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6279	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6283	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6287	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6291	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6295	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6299	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6303	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6307	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6311	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6315	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6319	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6323	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6327	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6331	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6335	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6339	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6343	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6347	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6351	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6355	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6359	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6363	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6367	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6371	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6375	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6379	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6383	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6387	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6391	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6395	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6399	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6403	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6407	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6411	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6415	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6419	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6423	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6427	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6431	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6435	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6439	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6443	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6447	"median"	"create aggregate median(val decimal) returns decimal\n \texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6451	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6455	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6459	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6463	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6467	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6471	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6476	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6481	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6486	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6491	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6496	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6501	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6506	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6511	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6516	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6521	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6526	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6531	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6536	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6541	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6546	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6551	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6556	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6561	"has_z"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make sure you load the geom module before loading this sql module\n-- create spatial_ref_sys metadata table\n\ncreate function has_z(info integer) returns integer external name geom.""hasZ"";"	"geom"	1	1	false	false	false	2000
6565	"has_m"	"create function has_m(info integer) returns integer external name geom.""hasM"";"	"geom"	1	1	false	false	false	2000
6569	"get_type"	"create function get_type(info integer, format integer) returns string external name geom.""getType"";"	"geom"	1	1	false	false	false	2000
6593	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr(geom geometry) returns mbr external name geom.""mbr"";"	"geom"	1	1	false	false	false	2000
6597	"st_overlaps"	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.""mbrOverlaps"";"	"geom"	1	1	false	false	false	2000
6602	"st_contains"	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.""mbrContains"";"	"geom"	1	1	false	false	false	2000
6607	"st_equals"	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.""mbrEqual"";"	"geom"	1	1	false	false	false	2000
6612	"st_distance"	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.""mbrDistance"";"	"geom"	1	1	false	false	false	2000
6617	"st_wkttosql"	"--CREATE FUNCTION mbrOverlapOrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrLeft"";\n--CREATE FUNCTION mbrOverlapOrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrBelow"";\n--CREATE FUNCTION mbrOverlapOrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrRight"";\n--CREATE FUNCTION mbrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrLeft"";\n--CREATE FUNCTION mbrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrBelow"";\n--CREATE FUNCTION mbrEqual(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrEqual"";\n--CREATE FUNCTION mbrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrRight"";\n--CREATE FUNCTION mbrContained(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrContained"";\n--CREATE FUNCTION mbrOverlapOrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrAbove"";\n--CREATE FUNCTION mbrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrAbove"";\n\n\n-------------------------------------------------------------------------\n------------------------- Management Functions- -------------------------\n-------------------------------------------------------------------------\n--CREATE PROCEDURE AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) \n--CREATE FUNCTION AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) RETURNS string\n--BEGIN\n--\tDECLARE column_type string;\n--\tSET column_type = concat('geometry( ', geometryType);\n--\tSET column_type = concat(column_type, ', ');\n--\tSET column_type = concat(column_type, srid);\n--\tSET column_type = concat(column_type, ' )'); \n--\tALTER TABLE table_name ADD column_name column_type; --geometry('point', 28992);\n--\t\n--\tRETURN column_type;\n--END;\n\n--CREATE PROCEDURE t(table_name string, column_name string, column_type string)\n--BEGIN\n--\tALTER TABLE table_name ADD column_name;\n--END;\n\n--CREATE FUNCTION t(table_name string, column_name string, srid integer, type string, dimension integer) RETURNS string \n--BEGIN\n--\tEXECUTE PROCEDURE AddGeometryColumn(table_name, column_name, srid, type, dimension);\n--\tRETURN '';\n--END;\n\n\n\n---------------------------------\n-- OGC - Simple Feature Access --\n---------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_wkttosql(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6621	"st_wkbtosql"	"--Construct a Geometry from a WKB\ncreate function st_wkbtosql(geom string) returns geometry external name geom.""FromBinary"";"	"geom"	1	1	false	false	false	2000
6625	"st_astext"	"--Obtaining WKT from Geometry\ncreate function st_astext(geom geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6629	"st_asbinary"	"--Obtainig WKB from Geometry\ncreate function st_asbinary(geom geometry) returns string external name geom.""AsBinary"";"	"geom"	1	1	false	false	false	2000
6633	"st_dimension"	"--Functions on Geometries\ncreate function st_dimension(geom geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6637	"st_geometrytype"	"create function st_geometrytype(geom geometry) returns string external name geom.""GeometryType2"";"	"geom"	1	1	false	false	false	2000
6641	"st_srid"	"create function st_srid(geom geometry) returns integer external name geom.""getSRID"";"	"geom"	1	1	false	false	false	2000
6645	"st_setsrid"	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.""setSRID"";"	"geom"	1	1	false	false	false	2000
6650	"st_isempty"	"create function st_isempty(geom geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6654	"st_issimple"	"create function st_issimple(geom geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6658	"st_boundary"	"create function st_boundary(geom geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6662	"st_envelope"	"create function st_envelope(geom geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6666	"st_equals"	"--Functions testing spatial relations between Geometries\ncreate function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6671	"st_disjoint"	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6676	"st_intersects"	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.""Intersects"";"	"geom"	1	1	false	false	false	2000
6681	"st_touches"	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6686	"st_crosses"	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6691	"st_within"	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6696	"st_contains"	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6701	"st_overlaps"	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6706	"st_relate"	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6712	"st_distance"	"--Distance between Geometries\ncreate function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6717	"st_intersection"	"--Functions that implement spatial operators\ncreate function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6722	"st_difference"	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6727	"st_union"	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6732	"st_union"	"create aggregate st_union(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
6736	"st_symdifference"	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6741	"st_buffer"	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6746	"st_convexhull"	"create function st_convexhull(geom geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6750	"st_x"	"--Functions on Point\ncreate function st_x(geom geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6754	"st_y"	"create function st_y(geom geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6758	"st_z"	"create function st_z(geom geometry) returns double external name geom.""Z"";"	"geom"	1	1	false	false	false	2000
6762	"st_startpoint"	"--Functions on Curve (i.e. LineString)\ncreate function st_startpoint(geom geometry) returns geometry external name geom.""StartPoint"";"	"geom"	1	1	false	false	false	2000
6766	"st_endpoint"	"create function st_endpoint(geom geometry) returns geometry external name geom.""EndPoint"";"	"geom"	1	1	false	false	false	2000
6770	"st_isring"	"create function st_isring(geom geometry) returns boolean external name geom.""IsRing"";"	"geom"	1	1	false	false	false	2000
6774	"st_length"	"create function st_length(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6778	"st_isclosed"	"--valid also for MultiCurve\ncreate function st_isclosed(geom geometry) returns boolean external name geom.""IsClosed"";"	"geom"	1	1	false	false	false	2000
6782	"st_numpoints"	"--valid also for MultiCurve\n\n--Functions on LineString\ncreate function st_numpoints(geom geometry) returns integer external name geom.""NumPoints"";"	"geom"	1	1	false	false	false	2000
6786	"st_pointn"	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.""PointN"";"	"geom"	1	1	false	false	false	2000
6791	"st_centroid"	"--Functions on Surface (i.e. Polygon and Polyhedral Surface) and MultiSurface\ncreate function st_centroid(geom geometry) returns geometry external name geom.""Centroid"";"	"geom"	1	1	false	false	false	2000
6795	"st_pointonsurface"	"create function st_pointonsurface(geom geometry) returns geometry external name geom.""PointOnSurface"";"	"geom"	1	1	false	false	false	2000
6799	"st_area"	"create function st_area(geom geometry) returns double external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6803	"st_exteriorring"	"--Functions on Polygon\ncreate function st_exteriorring(geom geometry) returns geometry external name geom.""ExteriorRing"";"	"geom"	1	1	false	false	false	2000
6807	"st_setexteriorring"	"create function st_setexteriorring(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6811	"st_numinteriorring"	"--gets a linestring and creates a polygon (postGIS: ST_MakePolygon)\ncreate function st_numinteriorring(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
6815	"st_interiorringn"	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.""InteriorRingN"";"	"geom"	1	1	false	false	false	2000
6820	"st_interiorrings"	"create function st_interiorrings(geom geometry) returns geometrya external name geom.""InteriorRings"";"	"geom"	1	1	false	false	false	2000
6824	"st_numgeometries"	"--CREATE FUNCTION ST_SetInteriorRings(geom GeometryA) RETURNS Geometry EXTERNAL NAME geom.""SetInteriorRings""; --what is this function supposed to do????\n\n--Functions on GeomCollection\ncreate function st_numgeometries(geom geometry) returns integer external name geom.""NumGeometries"";"	"geom"	1	1	false	false	false	2000
6828	"st_geometryn"	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.""GeometryN"";"	"geom"	1	1	false	false	false	2000
6833	"st_numpatches"	"--Functions on Polyhedral Surfaces (a simple surface, consisting of a number of Polygon pathes or facets)\n--CREATE FUNCTION ST_Geometries(geom Geometry) RETURNS TABLE(geom Geometries) EXTERNAL NAME geom.""Geometries"";\n--CREATE FUNCTION NumSurfaces(geom Geometry) RETURNS integer EXTERNAL NAME geom.""NumSurfaces"";\n--CREATE FUNCTION Surface(positionNum integer) RETURNS Geometry EXTERNAL NAME geom.""SurfaceN"";\n--from Part 1\ncreate function st_numpatches(geom geometry) returns integer --EXTERNAL NAME geom.""NumPatches""; --same with NumSurfaces\nbegin\n\treturn select st_numgeometries(geom);\nend;"	"user"	2	1	false	false	false	2000
6837	"st_patchn"	"create function st_patchn(geom geometry, patchnum integer) returns geometry --EXTERNAL NAME geom.""PatchN"" --same with Surface\nbegin\n\treturn select st_geometryn(geom, patchnum);\nend;"	"user"	2	1	false	false	false	2000
6842	"st_geomfromtext"	"--BoundingPolygons\n--IsClosed\n\n-------------------------------------------\n-- DEPRECATED BUT IMPLEMENTED BY postGIS --\n-------------------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6847	"st_pointfromtext"	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6852	"st_linefromtext"	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6857	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6862	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6867	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6872	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6877	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6882	"st_bdpolyfromtext"	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdPolyFromText"";"	"geom"	1	1	false	false	false	2000
6887	"st_bdmpolyfromtext"	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdMPolyFromText"";"	"geom"	1	1	false	false	false	2000
6892	"st_geometryfromtext"	"--Construct a Geoemtry from a WKB\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_PolygonFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PolygonFromWKB"";\n--CREATE FUNCTION ST_MPointFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPointFromWKB"";\n--CREATE FUNCTION ST_MLineFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MLineFromWKB"";\n--CREATE FUNCTION ST_MPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPolyFromWKB"";\n--CREATE FUNCTION ST_GeomCollFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomCollFromWKB"";\n--CREATE FUNCTION ST_BdPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdPolyFromWKB""; \n--CREATE FUNCTION ST_BdMPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdMPolyFromWKB"";\n\n--CREATE FUNCTION ST_M(geom Geometry) RETURNS double EXTERNAL NAME geom.""M""; --geos does not support M coordinate (at least in the c version)\n--CREATE FUNCTION ST_CurveToLine RETURNS EXTERNAL NAME --geos does not support CIRCULARSTRING and does not have such function\n\n\n\n\n-------------\n-- PostGIS --\n-------------\n\n-------------------------------------------------------------------------\n------------------------- Geometry Constructors -------------------------\n-------------------------------------------------------------------------\n-- Create Geometry from text (wkt)\ncreate function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6897	"st_geomfromtext"	"create function st_geomfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6901	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6905	"st_pointfromtext"	"create function st_pointfromtext(wkt string) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6909	"st_linefromtext"	"create function st_linefromtext(wkt string) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6913	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6917	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6921	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6925	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6929	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6933	"st_makepoint"	"--CREATE FUNCTION ST_GeogFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n--CREATE FUNCTION ST_GeographyFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n\n\n-- Create Geometry from raw representation (byte array)\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid smallint) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_GeogFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geography EXTERNAL NAME geom.""GeogFromWKB"";\n\n-- Create Geometry from simpler geometries\ncreate function st_makepoint(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6938	"st_point"	"create function st_point(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6943	"st_makepoint"	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6949	"st_makepoint"	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6956	"st_makepointm"	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.""MakePointM"";"	"geom"	1	1	false	false	false	2000
6962	"st_makeline"	"--CREATE FUNCTION ST_MakeLine(geometry set geoms)?????\ncreate aggregate st_makeline(geom geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	3	false	false	false	2000
6966	"st_makeline"	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	1	false	false	false	2000
6971	"st_makeenvelope"	"--two single geometries\n--CREATE FUNCTION ST_MakeLine(geoms_arr Geometry[]) RETURNS Geometry external name geom.""MakeLine"";\n--CREATE FUNCTION ST_LineFromMultiPoint(pointGeom Geometry) RETURNS Geometry external name geom.""LineFromMultiPoint""; --gets mutlipoint returns linestring\ncreate function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
6979	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
6986	"st_makepolygon"	"create function st_makepolygon(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6990	"st_polygon"	"--gets linestring\n--CREATE FUNCTION ST_MakePolygon(outerGeom Geometry, interiorGeoms table(g Geometry)) RETURNS Geometry external name geom.""MakePolygon""; --gets linestrings\ncreate function st_polygon(geom geometry, srid integer) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6995	"st_makebox2d"	"--gets linestring\ncreate function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.""MakeBox2D"";"	"geom"	1	1	false	false	false	2000
7000	"geometrytype"	"--gets 2d points\n--CREATE FUNCTION ST_3DMakeBox(lowLeftPointGeom Geometry, upRightPointGeom Geometry) RETURNS mbr external name geom.""MakeBox3D""; --gets 3d points\n\n-- Other constructors\n--CREATE FUNCTION ST_Box2dFromGeoHash() RETURNS mbr external name geom.""Box2dFromGeoHash"";\n--CREATE FUNCTION ST_GeomFromEWKB\n--CREATE FUNCTION ST_GeomFromEWKT\n--CREATE FUNCTION ST_GeomFromGML\n--CREATE FUNCTION ST_GeomFromGeoJSON\n--CREATE FUNCTION ST_GeomFromKML\n--CREATE FUNCTION ST_GMLToSQL\n--CREATE FUNCTION ST_PointFromGeoHash\n\n-------------------------------------------------------------------------\n-------------------------- Geometry Accessors ---------------------------\n-------------------------------------------------------------------------\ncreate function geometrytype(geom geometry) returns string external name geom.""GeometryType1"";"	"geom"	1	1	false	false	false	2000
7004	"st_coorddim"	"create function st_coorddim(geom geometry) returns integer external name geom.""CoordDim"";"	"geom"	1	1	false	false	false	2000
7008	"st_isvalid"	"--CREATE FUNCTION ST_IsCollection(geom Geometry) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalid(geom geometry) returns boolean external name geom.""IsValid"";"	"geom"	1	1	false	false	false	2000
7012	"st_isvalidreason"	"--CREATE FUNCTION ST_IsValid(geom Geometry, flags integer) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalidreason(geom geometry) returns string external name geom.""IsValidReason"";"	"geom"	1	1	false	false	false	2000
7016	"st_npoints"	"--CREATE FUNCTION ST_IsValidReason(geom Geometry, flags integer) RETURNS string EXTERNAL NAME\n--CREATE FUNCTION ST_IsValidDetail(geom Geometry) RETURNS string EXTERNAL NAME geom.""IsValidDetail""; \n--CREATE FUNCTION ST_IsValidDetail(geom Geometry, flags integer) RETURNS A_CUSTOM_ROW EXTERNAL NAME\n--CREATE FUNCTION ST_NDims(geom Geometry) RETURNS integer EXTERNAL NAME\ncreate function st_npoints(geom geometry) returns integer external name geom.""NPoints"";"	"geom"	1	1	false	false	false	2000
7020	"st_nrings"	"create function st_nrings(geom geometry) returns integer external name geom.""NRings"";"	"geom"	1	1	false	false	false	2000
7024	"st_numinteriorrings"	"--is meaningfull for polygon and multipolygon\ncreate function st_numinteriorrings(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7028	"st_xmax"	"--CREATE FUNCTION ST_Summary(geom Geometry) RETURNS string EXTERNAL NAME\ncreate function st_xmax(geom geometry) returns double external name geom.""XMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7032	"st_xmax"	"create function st_xmax(box mbr) returns double external name geom.""XMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7036	"st_xmin"	"create function st_xmin(geom geometry) returns double external name geom.""XMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7040	"st_xmin"	"create function st_xmin(box mbr) returns double external name geom.""XMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7044	"st_ymax"	"create function st_ymax(geom geometry) returns double external name geom.""YMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7048	"st_ymax"	"create function st_ymax(box mbr) returns double external name geom.""YMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7052	"st_ymin"	"create function st_ymin(geom geometry) returns double external name geom.""YMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7056	"st_ymin"	"create function st_ymin(box mbr) returns double external name geom.""YMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7060	"st_force2d"	"--GEOS creates only 2D Envelope\n--CREATE FUNCTION ST_ZMax(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMaxFromWKB"";\n--CREATE FUNCTION ST_ZMax(box mbr) RETURNS double EXTERNAL NAME geom.""ZMaxFromMBR"";\n--CREATE FUNCTION ST_ZMin(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMinFromWKB"";\n--CREATE FUNCTION ST_ZMin(box mbr) RETURNS double EXTERNAL NAME geom.""ZMinFromMBR"";\n--CREATE FUNCTION ST_Zmflag(geom Geometry) RETURNS smallint EXTERNAL NAME --0=2d, 1=3dm, 2=3dz, 4=4d\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Editors ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AddPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Affine RETURNS EXTERNAL NAME\ncreate function st_force2d(geom geometry) returns geometry external name geom.""Force2D"";"	"geom"	1	1	false	false	false	2000
7064	"st_force3d"	"create function st_force3d(geom geometry) returns geometry external name geom.""Force3D"";"	"geom"	1	1	false	false	false	2000
7068	"st_segmentize"	"--CREATE FUNCTION ST_Force3DZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force3DM RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force4D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceCollection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceRHR RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineMerge RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionExtract RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionHomogenize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Multi RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemovePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Reverse RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Rotate RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateX RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateY RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Scale RETURNS EXTERNAL NAME\ncreate function st_segmentize(geom geometry, sz double) returns geometry external name geom.""Segmentize"";"	"geom"	1	1	false	false	false	2000
7073	"getproj4"	"--CREATE FUNCTION ST_SetPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SnapToGrid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Snap RETURNS EXTERNAL NAME\ncreate function getproj4(srid_in integer) returns string \nbegin\n\treturn select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	"user"	2	1	false	false	false	2000
7077	"internaltransform"	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.""Transform"";"	"geom"	1	1	false	false	false	2000
7085	"st_transform"	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n\tdeclare srid_src integer;\n\tdeclare proj4_src string;\n\tdeclare proj4_dest string;\n\n\tselect st_srid(geom) into srid_src;\n\tselect getproj4(srid_src) into proj4_src;\n\tselect getproj4(srid) into proj4_dest;\n\n\tif proj4_src is null then\n\t\treturn select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n\telse\n\t\tif proj4_dest is null then\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n\t\telse\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n\t\tend if;\t\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
7090	"st_translate"	"--Translate moves all points of a geometry dx, dy, dz\ncreate function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7096	"st_translate"	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7103	"st_asewkt"	"--CREATE FUNCTION ST_TransScale RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Outputs ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AsEWKB RETURNS EXTERNAL NAME\ncreate function st_asewkt(geom geometry) returns string external name geom.""AsEWKT"";"	"geom"	1	1	false	false	false	2000
7107	"st_covers"	"--CREATE FUNCTION ST_AsGeoJSON RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsGML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsHEXEWKB RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsKML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsSVG RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsX3D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_GeoHash RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsLatLonText RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------------ Operators --------------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n---------------- Spatial Relationships and Measurements -----------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_3DClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DIntersects RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DMaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DShortestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Area(geog Geography, use_spheroid boolean) RETURNS flt EXTERNAL NAME geom.""Area"";\n--CREATE FUNCTION ST_Azimuth RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ContainsProperly RETURNS EXTERNAL NAME\ncreate function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.""Covers"";"	"geom"	1	1	false	false	false	2000
7112	"st_coveredby"	"--CREATE FUNCTION ST_Covers(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Covers"";\ncreate function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.""CoveredBy"";"	"geom"	1	1	false	false	false	2000
7117	"st_dwithin"	"--CREATE FUNCTION ST_CoveredBy(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""CoveredBy"";\n--CREATE FUNCTION ST_LineCrossingDirection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry) RETURNS double EXTERNAL NAME geom.""Distance""\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Distance""\ncreate function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.""DWithin"";"	"geom"	1	1	false	false	false	2000
7123	"st_length2d"	"--CREATE FUNCTION ST_HausdorffDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Sphere RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_DFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_HasArc RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersects(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Intersects"";\n--CREATE FUNCTION ST_Length(geog Geography, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Length"";\ncreate function st_length2d(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7127	"st_collect"	"--CREATE FUNCTION ST_3DLength RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length2D_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLength_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OrderingEquals RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter2D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DPerimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Project RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry, boundary_node_rule integer) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_RelateMatch RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ShortestLine RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------- Geometry Processing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, circle_quarters_num integer) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, buffer_style_parameters string) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geog Geography, radius double) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_BuildArea RETURNS EXTERNAL NAME\n--collect is the same to union. POstGIS just has a more efficient implementation for it compared to union\ncreate function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7132	"st_collect"	"create aggregate st_collect(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7136	"st_delaunaytriangles"	"--CREATE FUNCTION ST_ConcaveHull RETURNS EXTERNAL NAME\ncreate function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.""DelaunayTriangles"";"	"geom"	1	1	false	false	false	2000
7142	"st_dump"	"create function st_dump(geom geometry) returns table(id integer, polygonwkb geometry) external name geom.""Dump"";"	"geom"	1	5	false	false	false	2000
7147	"st_dumppoints"	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.""DumpPoints"";"	"geom"	1	5	false	false	false	2000
7154	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7151
7159	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7151
7164	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7151
7169	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7151
7174	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7151
7179	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	7151
7183	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	7151
7187	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7151
7191	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7151
7195	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7151
7199	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7151
7203	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7151
7207	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7151
7211	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	7151
7215	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	7151
7219	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	7151
7223	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7151
7227	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7151
7231	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7151
7235	"output"	"-- The remainder awaits the implementation \n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	7151
7239	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7151
7243	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7151
7247	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
7252	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
7255	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7259	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7263	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
7268	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7271	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7274	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7277	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7313	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7316	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7320	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (""schema"" string, ""table"" string, ""column"" string, ""type"" string, ""mode"" string, location string, ""count"" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7364	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7366	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int'\t then return 4 * i;\n\twhen nme = 'bigint'\t then return 8 * i;\n\twhen nme = 'hugeint'\t then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7372	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7378	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7383	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\t\n\t\tor nme = 'bigint'\t\n\t\tor nme = 'hugeint'\t\n\t\tor nme = 'decimal'\t\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7388	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count""\tbigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7435	"analyze"	"create procedure analyze()\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7437	"analyze"	"create procedure analyze(tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7440	"analyze"	"create procedure analyze(sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7444	"analyze"	"create procedure analyze(sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7449	"analyze"	"-- control the sample size\ncreate procedure analyze(""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7452	"analyze"	"create procedure analyze(tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7456	"analyze"	"create procedure analyze(sch string, tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7461	"analyze"	"create procedure analyze(sch string, tbl string, col string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7467	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7471	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7476	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7481	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7487	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7485
7492	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7485
7497	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7485
7501	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7485
7505	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7485
7510	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7485
7514	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7485
7518	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7485
7522	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7485
7525	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7485
7595	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7600	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7606	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7611	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7617	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7622	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7628	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7633	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7639	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7645	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7651	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7657	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 8 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6576	6581	0	"spatial_ref_sys_srid_pkey"
7535	7536	0	"files_pkey_file_id"
7546	7549	0	"sq_pkey_sn_file_id"
7548	7549	1	"sq_fkey_file_id"
7565	7568	0	"rg_pkey_id_file_id"
7567	7568	1	"rg_fkey_file_id"
7577	7580	0	"pg_pkey_id_file_id"
7579	7580	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 8 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6575	6581	0	"spatial_ref_sys_srid_pkey"	-1	-1
7534	7536	0	"files_pkey_file_id"	-1	-1
7545	7549	0	"sq_pkey_sn_file_id"	-1	-1
7547	7549	2	"sq_fkey_file_id"	7534	514
7564	7568	0	"rg_pkey_id_file_id"	-1	-1
7566	7568	2	"rg_fkey_file_id"	7534	514
7576	7580	0	"pg_pkey_id_file_id"	-1	-1
7578	7580	2	"pg_fkey_file_id"	7534	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 22 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6576	"srid"	0
6575	"srid"	0
7535	"file_id"	0
7534	"file_id"	0
7546	"sn"	0
7546	"file_id"	1
7548	"file_id"	0
7545	"sn"	0
7545	"file_id"	1
7547	"file_id"	0
7565	"id"	0
7565	"file_id"	1
7567	"file_id"	0
7564	"id"	0
7564	"file_id"	1
7566	"file_id"	0
7577	"id"	0
7577	"file_id"	1
7579	"file_id"	0
7576	"id"	0
7576	"file_id"	1
7578	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5667	1	1	0	0
5677	1	1	0	0
5703	1	1	0	0
5706	1	1	0	0
5710	1	1	0	0
7664	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
7151	"json"	3	3	true
7485	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1594 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
57
58
59
60
61
62
63
64
65
66
67
71
72
73
74
77
78
79
98
99
100
101
102
103
104
105
106
107
108
109
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
56
68
69
70
75
76
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
110
111
112
113
114
115
116
5688
5691
5697
5717
5722
5727
5731
5735
5739
5743
5746
5750
5754
5758
5762
5766
5770
5774
5778
5782
5786
5790
5794
5798
5802
5809
5815
5820
5825
5831
5835
5839
5843
5848
5852
5856
5860
5864
5868
5873
5878
5883
5888
5898
5948
5950
5952
5955
5957
5987
5991
5994
5998
6002
6006
6010
6014
6018
6023
6028
6033
6038
6043
6048
6053
6058
6063
6068
6073
6078
6083
6088
6093
6098
6103
6107
6123
6126
6130
6133
6137
6140
6147
6152
6158
6164
6169
6174
6178
6182
6186
6190
6193
6203
6211
6225
6229
6249
6252
6255
6258
6261
6264
6267
6271
6275
6279
6283
6287
6291
6295
6299
6303
6307
6311
6315
6319
6323
6327
6331
6335
6339
6343
6347
6351
6355
6359
6363
6367
6371
6375
6379
6383
6387
6391
6395
6399
6403
6407
6411
6415
6419
6423
6427
6431
6435
6439
6443
6447
6451
6455
6459
6463
6467
6471
6476
6481
6486
6491
6496
6501
6506
6511
6516
6521
6526
6531
6536
6541
6546
6551
6556
6561
6565
6569
6593
6597
6602
6607
6612
6617
6621
6625
6629
6633
6637
6641
6645
6650
6654
6658
6662
6666
6671
6676
6681
6686
6691
6696
6701
6706
6712
6717
6722
6727
6732
6736
6741
6746
6750
6754
6758
6762
6766
6770
6774
6778
6782
6786
6791
6795
6799
6803
6807
6811
6815
6820
6824
6828
6833
6837
6842
6847
6852
6857
6862
6867
6872
6877
6882
6887
6892
6897
6901
6905
6909
6913
6917
6921
6925
6929
6933
6938
6943
6949
6956
6962
6966
6971
6979
6986
6990
6995
7000
7004
7008
7012
7016
7020
7024
7028
7032
7036
7040
7044
7048
7052
7056
7060
7064
7068
7073
7077
7085
7090
7096
7103
7107
7112
7117
7123
7127
7132
7136
7142
7147
7154
7159
7164
7169
7174
7179
7183
7187
7191
7195
7199
7203
7207
7211
7215
7219
7223
7227
7231
7235
7239
7243
7247
7252
7255
7259
7263
7268
7271
7274
7277
7313
7316
7320
7364
7366
7372
7378
7383
7388
7435
7437
7440
7444
7449
7452
7456
7461
7467
7471
7476
7481
7487
7492
7497
7501
7505
7510
7514
7518
7522
7525
7595
7600
7606
7611
7617
7622
7628
7633
7639
7645
7651
7657
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 35 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	19	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
27	"wkb"	"geometry"	0	0	0	15	0
28	"wkba"	"geometrya"	0	0	0	16	0
29	"mbr"	"mbr"	0	0	0	16	0
5744	"url"	"url"	0	0	0	16	2000
5829	"inet"	"inet"	0	0	0	16	2000
6591	"mbr"	"mbr"	0	0	0	16	2000
7152	"json"	"json"	0	0	0	16	2000
7250	"uuid"	"uuid"	0	0	0	16	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

