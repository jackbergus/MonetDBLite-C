stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.convert
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geometrytype
SYSTEM FUNCTION  sys.get_type
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.has_m
SYSTEM FUNCTION  sys.has_z
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.st_area
SYSTEM FUNCTION  sys.st_asbinary
SYSTEM FUNCTION  sys.st_asewkt
SYSTEM FUNCTION  sys.st_astext
SYSTEM FUNCTION  sys.st_bdmpolyfromtext
SYSTEM FUNCTION  sys.st_bdpolyfromtext
SYSTEM FUNCTION  sys.st_boundary
SYSTEM FUNCTION  sys.st_buffer
SYSTEM FUNCTION  sys.st_centroid
SYSTEM FUNCTION  sys.st_collect
SYSTEM FUNCTION  sys.st_contains
SYSTEM FUNCTION  sys.st_convexhull
SYSTEM FUNCTION  sys.st_coorddim
SYSTEM FUNCTION  sys.st_coveredby
SYSTEM FUNCTION  sys.st_covers
SYSTEM FUNCTION  sys.st_crosses
SYSTEM FUNCTION  sys.st_delaunaytriangles
SYSTEM FUNCTION  sys.st_difference
SYSTEM FUNCTION  sys.st_dimension
SYSTEM FUNCTION  sys.st_disjoint
SYSTEM FUNCTION  sys.st_distance
SYSTEM FUNCTION  sys.st_dump
SYSTEM FUNCTION  sys.st_dumppoints
SYSTEM FUNCTION  sys.st_dwithin
SYSTEM FUNCTION  sys.st_endpoint
SYSTEM FUNCTION  sys.st_envelope
SYSTEM FUNCTION  sys.st_equals
SYSTEM FUNCTION  sys.st_exteriorring
SYSTEM FUNCTION  sys.st_force2d
SYSTEM FUNCTION  sys.st_force3d
SYSTEM FUNCTION  sys.st_geomcollfromtext
SYSTEM FUNCTION  sys.st_geometryfromtext
SYSTEM FUNCTION  sys.st_geometryn
SYSTEM FUNCTION  sys.st_geometrytype
SYSTEM FUNCTION  sys.st_geomfromtext
SYSTEM FUNCTION  sys.st_interiorringn
SYSTEM FUNCTION  sys.st_interiorrings
SYSTEM FUNCTION  sys.st_intersection
SYSTEM FUNCTION  sys.st_intersects
SYSTEM FUNCTION  sys.st_isclosed
SYSTEM FUNCTION  sys.st_isempty
SYSTEM FUNCTION  sys.st_isring
SYSTEM FUNCTION  sys.st_issimple
SYSTEM FUNCTION  sys.st_isvalid
SYSTEM FUNCTION  sys.st_isvalidreason
SYSTEM FUNCTION  sys.st_length
SYSTEM FUNCTION  sys.st_length2d
SYSTEM FUNCTION  sys.st_linefromtext
SYSTEM FUNCTION  sys.st_makebox2d
SYSTEM FUNCTION  sys.st_makeenvelope
SYSTEM FUNCTION  sys.st_makeline
SYSTEM FUNCTION  sys.st_makepoint
SYSTEM FUNCTION  sys.st_makepointm
SYSTEM FUNCTION  sys.st_makepolygon
SYSTEM FUNCTION  sys.st_mlinefromtext
SYSTEM FUNCTION  sys.st_mpointfromtext
SYSTEM FUNCTION  sys.st_mpolyfromtext
SYSTEM FUNCTION  sys.st_npoints
SYSTEM FUNCTION  sys.st_nrings
SYSTEM FUNCTION  sys.st_numgeometries
SYSTEM FUNCTION  sys.st_numinteriorring
SYSTEM FUNCTION  sys.st_numinteriorrings
SYSTEM FUNCTION  sys.st_numpatches
SYSTEM FUNCTION  sys.st_numpoints
SYSTEM FUNCTION  sys.st_overlaps
SYSTEM FUNCTION  sys.st_patchn
SYSTEM FUNCTION  sys.st_point
SYSTEM FUNCTION  sys.st_pointfromtext
SYSTEM FUNCTION  sys.st_pointn
SYSTEM FUNCTION  sys.st_pointonsurface
SYSTEM FUNCTION  sys.st_polygon
SYSTEM FUNCTION  sys.st_polygonfromtext
SYSTEM FUNCTION  sys.st_relate
SYSTEM FUNCTION  sys.st_segmentize
SYSTEM FUNCTION  sys.st_setexteriorring
SYSTEM FUNCTION  sys.st_setsrid
SYSTEM FUNCTION  sys.st_srid
SYSTEM FUNCTION  sys.st_startpoint
SYSTEM FUNCTION  sys.st_symdifference
SYSTEM FUNCTION  sys.st_touches
SYSTEM FUNCTION  sys.st_transform
SYSTEM FUNCTION  sys.st_translate
SYSTEM FUNCTION  sys.st_union
SYSTEM FUNCTION  sys.st_within
SYSTEM FUNCTION  sys.st_wkbtosql
SYSTEM FUNCTION  sys.st_wkttosql
SYSTEM FUNCTION  sys.st_x
SYSTEM FUNCTION  sys.st_xmax
SYSTEM FUNCTION  sys.st_xmin
SYSTEM FUNCTION  sys.st_y
SYSTEM FUNCTION  sys.st_ymax
SYSTEM FUNCTION  sys.st_ymin
SYSTEM FUNCTION  sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure analyze()
external name sql.analyze;
create procedure analyze(tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string)
external name sql.analyze;
-- control the sample size
create procedure analyze("sample" bigint)
external name sql.analyze;
create procedure analyze(tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string, "sample" bigint)
external name sql.analyze;

-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr(geom geometry) returns mbr external name geom."mbr";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 364 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5667	"id"	"int"	32	0	5666	NULL	true	0	NULL
5668	"name"	"varchar"	1024	0	5666	NULL	true	1	NULL
5669	"schema_id"	"int"	32	0	5666	NULL	true	2	NULL
5670	"query"	"varchar"	2048	0	5666	NULL	true	3	NULL
5671	"type"	"smallint"	16	0	5666	NULL	true	4	NULL
5672	"system"	"boolean"	1	0	5666	NULL	true	5	NULL
5673	"commit_action"	"smallint"	16	0	5666	NULL	true	6	NULL
5674	"access"	"smallint"	16	0	5666	NULL	true	7	NULL
5675	"temporary"	"smallint"	16	0	5666	NULL	true	8	NULL
5677	"id"	"int"	32	0	5676	NULL	true	0	NULL
5678	"name"	"varchar"	1024	0	5676	NULL	true	1	NULL
5679	"type"	"varchar"	1024	0	5676	NULL	true	2	NULL
5680	"type_digits"	"int"	32	0	5676	NULL	true	3	NULL
5681	"type_scale"	"int"	32	0	5676	NULL	true	4	NULL
5682	"table_id"	"int"	32	0	5676	NULL	true	5	NULL
5683	"default"	"varchar"	2048	0	5676	NULL	true	6	NULL
5684	"null"	"boolean"	1	0	5676	NULL	true	7	NULL
5685	"number"	"int"	32	0	5676	NULL	true	8	NULL
5686	"storage"	"varchar"	2048	0	5676	NULL	true	9	NULL
5693	"name"	"varchar"	1024	0	5692	NULL	true	0	NULL
5694	"fullname"	"varchar"	2048	0	5692	NULL	true	1	NULL
5695	"default_schema"	"int"	9	0	5692	NULL	true	2	NULL
5699	"name"	"varchar"	1024	0	5698	NULL	true	0	NULL
5700	"fullname"	"varchar"	2024	0	5698	NULL	true	1	NULL
5701	"default_schema"	"int"	9	0	5698	NULL	true	2	NULL
5703	"login_id"	"int"	32	0	5702	NULL	true	0	NULL
5704	"role_id"	"int"	32	0	5702	NULL	true	1	NULL
5706	"id"	"int"	32	0	5705	NULL	true	0	NULL
5707	"name"	"varchar"	1024	0	5705	NULL	true	1	NULL
5708	"grantor"	"int"	32	0	5705	NULL	true	2	NULL
5710	"obj_id"	"int"	32	0	5709	NULL	true	0	NULL
5711	"auth_id"	"int"	32	0	5709	NULL	true	1	NULL
5712	"privileges"	"int"	32	0	5709	NULL	true	2	NULL
5713	"grantor"	"int"	32	0	5709	NULL	true	3	NULL
5714	"grantable"	"int"	32	0	5709	NULL	true	4	NULL
5908	"id"	"oid"	63	0	5916	NULL	true	0	NULL
5909	"owner"	"clob"	0	0	5916	NULL	true	1	NULL
5910	"defined"	"timestamp"	7	0	5916	NULL	true	2	NULL
5911	"query"	"clob"	0	0	5916	NULL	true	3	NULL
5912	"pipe"	"clob"	0	0	5916	NULL	true	4	NULL
5913	"plan"	"clob"	0	0	5916	NULL	true	5	NULL
5914	"mal"	"int"	32	0	5916	NULL	true	6	NULL
5915	"optimize"	"bigint"	64	0	5916	NULL	true	7	NULL
5918	"id"	"oid"	63	0	5927	NULL	true	0	NULL
5919	"start"	"timestamp"	7	0	5927	NULL	true	1	NULL
5920	"stop"	"timestamp"	7	0	5927	NULL	true	2	NULL
5921	"arguments"	"clob"	0	0	5927	NULL	true	3	NULL
5922	"tuples"	"wrd"	64	0	5927	NULL	true	4	NULL
5923	"run"	"bigint"	64	0	5927	NULL	true	5	NULL
5924	"ship"	"bigint"	64	0	5927	NULL	true	6	NULL
5925	"cpu"	"int"	32	0	5927	NULL	true	7	NULL
5926	"io"	"int"	32	0	5927	NULL	true	8	NULL
5929	"id"	"oid"	63	0	5945	NULL	true	0	NULL
5930	"owner"	"clob"	0	0	5945	NULL	true	1	NULL
5931	"defined"	"timestamp"	7	0	5945	NULL	true	2	NULL
5932	"query"	"clob"	0	0	5945	NULL	true	3	NULL
5933	"pipe"	"clob"	0	0	5945	NULL	true	4	NULL
5934	"plan"	"clob"	0	0	5945	NULL	true	5	NULL
5935	"mal"	"int"	32	0	5945	NULL	true	6	NULL
5936	"optimize"	"bigint"	64	0	5945	NULL	true	7	NULL
5937	"start"	"timestamp"	7	0	5945	NULL	true	8	NULL
5938	"stop"	"timestamp"	7	0	5945	NULL	true	9	NULL
5939	"arguments"	"clob"	0	0	5945	NULL	true	10	NULL
5940	"tuples"	"wrd"	64	0	5945	NULL	true	11	NULL
5941	"run"	"bigint"	64	0	5945	NULL	true	12	NULL
5942	"ship"	"bigint"	64	0	5945	NULL	true	13	NULL
5943	"cpu"	"int"	32	0	5945	NULL	true	14	NULL
5944	"io"	"int"	32	0	5945	NULL	true	15	NULL
5971	"event"	"int"	32	0	5984	NULL	true	0	NULL
5972	"clk"	"varchar"	20	0	5984	NULL	true	1	NULL
5973	"pc"	"varchar"	50	0	5984	NULL	true	2	NULL
5974	"thread"	"int"	32	0	5984	NULL	true	3	NULL
5975	"ticks"	"bigint"	64	0	5984	NULL	true	4	NULL
5976	"rrsmb"	"bigint"	64	0	5984	NULL	true	5	NULL
5977	"vmmb"	"bigint"	64	0	5984	NULL	true	6	NULL
5978	"reads"	"bigint"	64	0	5984	NULL	true	7	NULL
5979	"writes"	"bigint"	64	0	5984	NULL	true	8	NULL
5980	"minflt"	"bigint"	64	0	5984	NULL	true	9	NULL
5981	"majflt"	"bigint"	64	0	5984	NULL	true	10	NULL
5982	"nvcsw"	"bigint"	64	0	5984	NULL	true	11	NULL
5983	"stmt"	"clob"	0	0	5984	NULL	true	12	NULL
6114	"user"	"clob"	0	0	6120	NULL	true	0	NULL
6115	"login"	"timestamp"	7	0	6120	NULL	true	1	NULL
6116	"sessiontimeout"	"bigint"	64	0	6120	NULL	true	2	NULL
6117	"lastcommand"	"timestamp"	7	0	6120	NULL	true	3	NULL
6118	"querytimeout"	"bigint"	64	0	6120	NULL	true	4	NULL
6119	"active"	"boolean"	1	0	6120	NULL	true	5	NULL
6197	"name"	"clob"	0	0	6200	NULL	true	0	NULL
6198	"def"	"clob"	0	0	6200	NULL	true	1	NULL
6199	"status"	"clob"	0	0	6200	NULL	true	2	NULL
6206	"name"	"clob"	0	0	6208	NULL	true	0	NULL
6207	"value"	"clob"	0	0	6208	NULL	true	1	NULL
6238	"qtag"	"bigint"	64	0	6246	NULL	true	0	NULL
6239	"user"	"clob"	0	0	6246	NULL	true	1	NULL
6240	"started"	"timestamp"	7	0	6246	NULL	true	2	NULL
6241	"estimate"	"timestamp"	7	0	6246	NULL	true	3	NULL
6242	"progress"	"int"	32	0	6246	NULL	true	4	NULL
6243	"status"	"clob"	0	0	6246	NULL	true	5	NULL
6244	"tag"	"oid"	63	0	6246	NULL	true	6	NULL
6245	"query"	"clob"	0	0	6246	NULL	true	7	NULL
6573	"srid"	"int"	32	0	6580	NULL	false	0	NULL
6576	"auth_name"	"varchar"	256	0	6580	NULL	true	1	NULL
6577	"auth_srid"	"int"	32	0	6580	NULL	true	2	NULL
6578	"srtext"	"varchar"	2048	0	6580	NULL	true	3	NULL
6579	"proj4text"	"varchar"	2048	0	6580	NULL	true	4	NULL
6582	"f_table_catalog"	"clob"	0	0	6589	NULL	true	0	NULL
6583	"f_table_schema"	"varchar"	1024	0	6589	NULL	true	1	NULL
6584	"f_table_name"	"varchar"	1024	0	6589	NULL	true	2	NULL
6585	"f_geometry_column"	"varchar"	1024	0	6589	NULL	true	3	NULL
6586	"coord_dimension"	"bigint"	64	0	6589	NULL	true	4	NULL
6587	"srid"	"int"	32	0	6589	NULL	true	5	NULL
6588	"type"	"clob"	0	0	6589	NULL	true	6	NULL
7280	"file_id"	"int"	32	0	7282	NULL	true	0	NULL
7281	"location"	"char"	256	0	7282	NULL	true	1	NULL
7284	"dim_id"	"int"	32	0	7288	NULL	true	0	NULL
7285	"file_id"	"int"	32	0	7288	NULL	true	1	NULL
7286	"name"	"varchar"	64	0	7288	NULL	true	2	NULL
7287	"length"	"int"	32	0	7288	NULL	true	3	NULL
7290	"var_id"	"int"	32	0	7296	NULL	true	0	NULL
7291	"file_id"	"int"	32	0	7296	NULL	true	1	NULL
7292	"name"	"varchar"	64	0	7296	NULL	true	2	NULL
7293	"vartype"	"varchar"	64	0	7296	NULL	true	3	NULL
7294	"ndim"	"int"	32	0	7296	NULL	true	4	NULL
7295	"coord_dim_id"	"int"	32	0	7296	NULL	true	5	NULL
7298	"var_id"	"int"	32	0	7302	NULL	true	0	NULL
7299	"dim_id"	"int"	32	0	7302	NULL	true	1	NULL
7300	"file_id"	"int"	32	0	7302	NULL	true	2	NULL
7301	"dimpos"	"int"	32	0	7302	NULL	true	3	NULL
7304	"obj_name"	"varchar"	256	0	7310	NULL	true	0	NULL
7305	"att_name"	"varchar"	256	0	7310	NULL	true	1	NULL
7306	"att_type"	"varchar"	64	0	7310	NULL	true	2	NULL
7307	"value"	"clob"	0	0	7310	NULL	true	3	NULL
7308	"file_id"	"int"	32	0	7310	NULL	true	4	NULL
7309	"gr_name"	"varchar"	256	0	7310	NULL	true	5	NULL
7335	"schema"	"clob"	0	0	7349	NULL	true	0	NULL
7336	"table"	"clob"	0	0	7349	NULL	true	1	NULL
7337	"column"	"clob"	0	0	7349	NULL	true	2	NULL
7338	"type"	"clob"	0	0	7349	NULL	true	3	NULL
7339	"mode"	"clob"	0	0	7349	NULL	true	4	NULL
7340	"location"	"clob"	0	0	7349	NULL	true	5	NULL
7341	"count"	"bigint"	64	0	7349	NULL	true	6	NULL
7342	"typewidth"	"int"	32	0	7349	NULL	true	7	NULL
7343	"columnsize"	"bigint"	64	0	7349	NULL	true	8	NULL
7344	"heapsize"	"bigint"	64	0	7349	NULL	true	9	NULL
7345	"hashes"	"bigint"	64	0	7349	NULL	true	10	NULL
7346	"phash"	"boolean"	1	0	7349	NULL	true	11	NULL
7347	"imprints"	"bigint"	64	0	7349	NULL	true	12	NULL
7348	"sorted"	"boolean"	1	0	7349	NULL	true	13	NULL
7351	"schema"	"clob"	0	0	7361	NULL	true	0	NULL
7352	"table"	"clob"	0	0	7361	NULL	true	1	NULL
7353	"column"	"clob"	0	0	7361	NULL	true	2	NULL
7354	"type"	"clob"	0	0	7361	NULL	true	3	NULL
7355	"typewidth"	"int"	32	0	7361	NULL	true	4	NULL
7356	"count"	"bigint"	64	0	7361	NULL	true	5	NULL
7357	"distinct"	"bigint"	64	0	7361	NULL	true	6	NULL
7358	"atomwidth"	"int"	32	0	7361	NULL	true	7	NULL
7359	"reference"	"boolean"	1	0	7361	NULL	true	8	NULL
7360	"sorted"	"boolean"	1	0	7361	NULL	true	9	NULL
7399	"schema"	"clob"	0	0	7409	NULL	true	0	NULL
7400	"table"	"clob"	0	0	7409	NULL	true	1	NULL
7401	"column"	"clob"	0	0	7409	NULL	true	2	NULL
7402	"type"	"clob"	0	0	7409	NULL	true	3	NULL
7403	"count"	"bigint"	64	0	7409	NULL	true	4	NULL
7404	"columnsize"	"bigint"	64	0	7409	NULL	true	5	NULL
7405	"heapsize"	"bigint"	64	0	7409	NULL	true	6	NULL
7406	"hashes"	"bigint"	64	0	7409	NULL	true	7	NULL
7407	"imprints"	"bigint"	64	0	7409	NULL	true	8	NULL
7408	"sorted"	"boolean"	1	0	7409	NULL	true	9	NULL
7411	"schema"	"clob"	0	0	7419	NULL	true	0	NULL
7412	"table"	"clob"	0	0	7419	NULL	true	1	NULL
7413	"count"	"bigint"	64	0	7419	NULL	true	2	NULL
7414	"columnsize"	"bigint"	64	0	7419	NULL	true	3	NULL
7415	"heapsize"	"bigint"	64	0	7419	NULL	true	4	NULL
7416	"hashes"	"bigint"	64	0	7419	NULL	true	5	NULL
7417	"imprints"	"bigint"	64	0	7419	NULL	true	6	NULL
7418	"auxiliary"	"bigint"	64	0	7419	NULL	true	7	NULL
7421	"column_id"	"int"	32	0	7432	NULL	true	0	NULL
7422	"type"	"clob"	0	0	7432	NULL	true	1	NULL
7423	"width"	"int"	32	0	7432	NULL	true	2	NULL
7424	"stamp"	"timestamp"	7	0	7432	NULL	true	3	NULL
7425	"sample"	"bigint"	64	0	7432	NULL	true	4	NULL
7426	"count"	"bigint"	64	0	7432	NULL	true	5	NULL
7427	"unique"	"bigint"	64	0	7432	NULL	true	6	NULL
7428	"nils"	"bigint"	64	0	7432	NULL	true	7	NULL
7429	"minval"	"clob"	0	0	7432	NULL	true	8	NULL
7430	"maxval"	"clob"	0	0	7432	NULL	true	9	NULL
7431	"sorted"	"boolean"	1	0	7432	NULL	true	10	NULL
7527	"file_id"	"bigint"	64	0	7535	NULL	false	0	NULL
7528	"file_location"	"clob"	0	0	7535	NULL	false	1	NULL
7529	"dbschema"	"smallint"	16	0	7535	NULL	false	2	NULL
7530	"format_version"	"varchar"	7	0	7535	NULL	true	3	NULL
7531	"sorting_order"	"varchar"	10	0	7535	NULL	true	4	NULL
7532	"comments"	"clob"	0	0	7535	NULL	true	5	NULL
7537	"sn"	"clob"	0	0	7548	NULL	false	0	NULL
7538	"file_id"	"bigint"	64	0	7548	NULL	false	1	NULL
7539	"ln"	"int"	32	0	7548	NULL	true	2	NULL
7540	"as"	"int"	32	0	7548	NULL	true	3	NULL
7541	"m5"	"clob"	0	0	7548	NULL	true	4	NULL
7542	"sp"	"clob"	0	0	7548	NULL	true	5	NULL
7543	"ur"	"clob"	0	0	7548	NULL	true	6	NULL
7550	"id"	"clob"	0	0	7567	NULL	false	0	NULL
7551	"file_id"	"bigint"	64	0	7567	NULL	false	1	NULL
7552	"cn"	"clob"	0	0	7567	NULL	true	2	NULL
7553	"ds"	"clob"	0	0	7567	NULL	true	3	NULL
7554	"dt"	"timestamp"	7	0	7567	NULL	true	4	NULL
7555	"fo"	"clob"	0	0	7567	NULL	true	5	NULL
7556	"ks"	"clob"	0	0	7567	NULL	true	6	NULL
7557	"lb"	"clob"	0	0	7567	NULL	true	7	NULL
7558	"pg"	"clob"	0	0	7567	NULL	true	8	NULL
7559	"pi"	"int"	32	0	7567	NULL	true	9	NULL
7560	"pl"	"clob"	0	0	7567	NULL	true	10	NULL
7561	"pu"	"clob"	0	0	7567	NULL	true	11	NULL
7562	"sm"	"clob"	0	0	7567	NULL	true	12	NULL
7569	"id"	"clob"	0	0	7579	NULL	false	0	NULL
7570	"file_id"	"bigint"	64	0	7579	NULL	false	1	NULL
7571	"pn"	"clob"	0	0	7579	NULL	true	2	NULL
7572	"cl"	"clob"	0	0	7579	NULL	true	3	NULL
7573	"pp"	"clob"	0	0	7579	NULL	true	4	NULL
7574	"vn"	"clob"	0	0	7579	NULL	true	5	NULL
7581	"qname"	"clob"	0	0	7592	NULL	false	0	NULL
7582	"flag"	"smallint"	16	0	7592	NULL	false	1	NULL
7583	"rname"	"clob"	0	0	7592	NULL	false	2	NULL
7584	"pos"	"int"	32	0	7592	NULL	false	3	NULL
7585	"mapq"	"smallint"	16	0	7592	NULL	false	4	NULL
7586	"cigar"	"clob"	0	0	7592	NULL	false	5	NULL
7587	"rnext"	"clob"	0	0	7592	NULL	false	6	NULL
7588	"pnext"	"int"	32	0	7592	NULL	false	7	NULL
7589	"tlen"	"int"	32	0	7592	NULL	false	8	NULL
7590	"seq"	"clob"	0	0	7592	NULL	false	9	NULL
7591	"qual"	"clob"	0	0	7592	NULL	false	10	NULL
7662	"function_id"	"int"	32	0	7663	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 52 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5666	"tables"	2000	"SELECT * FROM (SELECT p.*, 0 AS ""temporary"" FROM ""sys"".""_tables"" AS p UNION ALL SELECT t.*, 1 AS ""temporary"" FROM ""tmp"".""_tables"" AS t) AS tables where tables.type <> 2;"	1	true	0	0
5676	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5692	"db_user_info"	2000	NULL	0	true	0	0
5698	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5702	"user_role"	2000	NULL	0	true	0	0
5705	"auths"	2000	NULL	0	true	0	0
5709	"privileges"	2000	NULL	0	true	0	0
5916	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5927	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5945	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5984	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6120	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6200	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6208	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6246	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6580	"spatial_ref_sys"	2000	NULL	0	true	0	0
6589	"geometry_columns"	2000	"-- create geometry_columns metadata view\ncreate view geometry_columns as\n\tselect e.value as f_table_catalog,\n\t\ts.name as f_table_schema,\n\t\ty.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type\n\tfrom schemas s, environment e, (\n\t\tselect t.schema_id,\n\t\t\tt.name as f_table_name,\n\t\t\tx.name as f_geometry_column,\n\t\t\thas_z(info)+has_m(info)+2 as coord_dimension,\n\t\t\tsrid, get_type(info, 0) as type\n\t\tfrom tables t, (\n\t\t\tselect name, table_id, type_digits as info, type_scale as srid\n\t\t\tfrom columns\n\t\t\twhere type in ( select distinct sqlname from types where systemname='wkb')\n\t\t\t) as x\n\t\twhere t.id=x.table_id\n\t\t) y\n\twhere y.schema_id=s.id and e.name='gdk_dbname';"	1	true	0	0
7282	"netcdf_files"	2000	NULL	0	true	0	0
7288	"netcdf_dims"	2000	NULL	0	true	0	0
7296	"netcdf_vars"	2000	NULL	0	true	0	0
7302	"netcdf_vardim"	2000	NULL	0	true	0	0
7310	"netcdf_attrs"	2000	NULL	0	true	0	0
7349	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7361	"storagemodelinput"	2000	NULL	0	true	0	0
7409	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7419	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7432	"statistics"	2000	NULL	0	true	0	0
7535	"files"	7484	NULL	0	true	0	0
7548	"sq"	7484	NULL	0	true	0	0
7567	"rg"	7484	NULL	0	true	0	0
7579	"pg"	7484	NULL	0	true	0	0
7592	"export"	7484	NULL	0	true	0	0
7663	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4459 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"boolean"	1	0	0	0
2156	30	"arg_1"	"geometry"	0	0	1	1
2157	30	"arg_2"	"geometry"	0	0	1	2
2158	31	"res_0"	"boolean"	1	0	0	0
2159	31	"arg_1"	"mbr"	0	0	1	1
2160	31	"arg_2"	"mbr"	0	0	1	2
2161	32	"res_0"	"boolean"	1	0	0	0
2162	32	"arg_1"	"geometry"	0	0	1	1
2163	32	"arg_2"	"geometry"	0	0	1	2
2164	33	"res_0"	"boolean"	1	0	0	0
2165	33	"arg_1"	"mbr"	0	0	1	1
2166	33	"arg_2"	"mbr"	0	0	1	2
2167	34	"res_0"	"boolean"	1	0	0	0
2168	34	"arg_1"	"geometry"	0	0	1	1
2169	34	"arg_2"	"geometry"	0	0	1	2
2170	35	"res_0"	"boolean"	1	0	0	0
2171	35	"arg_1"	"mbr"	0	0	1	1
2172	35	"arg_2"	"mbr"	0	0	1	2
2173	36	"res_0"	"boolean"	1	0	0	0
2174	36	"arg_1"	"geometry"	0	0	1	1
2175	36	"arg_2"	"geometry"	0	0	1	2
2176	37	"res_0"	"boolean"	1	0	0	0
2177	37	"arg_1"	"mbr"	0	0	1	1
2178	37	"arg_2"	"mbr"	0	0	1	2
2179	38	"res_0"	"boolean"	1	0	0	0
2180	38	"arg_1"	"geometry"	0	0	1	1
2181	38	"arg_2"	"geometry"	0	0	1	2
2182	39	"res_0"	"boolean"	1	0	0	0
2183	39	"arg_1"	"mbr"	0	0	1	1
2184	39	"arg_2"	"mbr"	0	0	1	2
2185	40	"res_0"	"boolean"	1	0	0	0
2186	40	"arg_1"	"geometry"	0	0	1	1
2187	40	"arg_2"	"geometry"	0	0	1	2
2188	41	"res_0"	"boolean"	1	0	0	0
2189	41	"arg_1"	"mbr"	0	0	1	1
2190	41	"arg_2"	"mbr"	0	0	1	2
2191	42	"res_0"	"boolean"	1	0	0	0
2192	42	"arg_1"	"geometry"	0	0	1	1
2193	42	"arg_2"	"geometry"	0	0	1	2
2194	43	"res_0"	"boolean"	1	0	0	0
2195	43	"arg_1"	"mbr"	0	0	1	1
2196	43	"arg_2"	"mbr"	0	0	1	2
2197	44	"res_0"	"boolean"	1	0	0	0
2198	44	"arg_1"	"geometry"	0	0	1	1
2199	44	"arg_2"	"geometry"	0	0	1	2
2200	45	"res_0"	"boolean"	1	0	0	0
2201	45	"arg_1"	"mbr"	0	0	1	1
2202	45	"arg_2"	"mbr"	0	0	1	2
2203	46	"res_0"	"boolean"	1	0	0	0
2204	46	"arg_1"	"geometry"	0	0	1	1
2205	46	"arg_2"	"geometry"	0	0	1	2
2206	47	"res_0"	"boolean"	1	0	0	0
2207	47	"arg_1"	"mbr"	0	0	1	1
2208	47	"arg_2"	"mbr"	0	0	1	2
2209	48	"res_0"	"boolean"	1	0	0	0
2210	48	"arg_1"	"geometry"	0	0	1	1
2211	48	"arg_2"	"geometry"	0	0	1	2
2212	49	"res_0"	"boolean"	1	0	0	0
2213	49	"arg_1"	"mbr"	0	0	1	1
2214	49	"arg_2"	"mbr"	0	0	1	2
2215	50	"res_0"	"boolean"	1	0	0	0
2216	50	"arg_1"	"geometry"	0	0	1	1
2217	50	"arg_2"	"geometry"	0	0	1	2
2218	51	"res_0"	"boolean"	1	0	0	0
2219	51	"arg_1"	"mbr"	0	0	1	1
2220	51	"arg_2"	"mbr"	0	0	1	2
2221	52	"res_0"	"boolean"	1	0	0	0
2222	52	"arg_1"	"geometry"	0	0	1	1
2223	52	"arg_2"	"geometry"	0	0	1	2
2224	53	"res_0"	"boolean"	1	0	0	0
2225	53	"arg_1"	"mbr"	0	0	1	1
2226	53	"arg_2"	"mbr"	0	0	1	2
2227	54	"res_0"	"boolean"	1	0	0	0
2228	54	"arg_1"	"geometry"	0	0	1	1
2229	54	"arg_2"	"geometry"	0	0	1	2
2230	55	"res_0"	"boolean"	1	0	0	0
2231	55	"arg_1"	"mbr"	0	0	1	1
2232	55	"arg_2"	"mbr"	0	0	1	2
2233	57	"res_0"	"oid"	63	0	0	0
2234	57	"arg_1"	"wrd"	64	0	1	1
2235	58	"res_0"	"oid"	63	0	0	0
2236	58	"arg_1"	"oid"	63	0	1	1
2237	59	"res_0"	"wrd"	64	0	0	0
2238	59	"arg_1"	"any"	0	0	1	1
2239	60	"res_0"	"wrd"	64	0	0	0
2240	60	"arg_1"	"wrd"	64	0	1	1
2241	60	"arg_2"	"int"	32	0	1	2
2242	60	"arg_3"	"any"	0	0	1	3
2243	61	"res_0"	"boolean"	1	0	0	0
2244	61	"arg_1"	"any"	0	0	1	1
2245	61	"arg_2"	"any"	0	0	1	2
2246	62	"res_0"	"boolean"	1	0	0	0
2247	62	"arg_1"	"any"	0	0	1	1
2248	62	"arg_2"	"any"	0	0	1	2
2249	63	"res_0"	"boolean"	1	0	0	0
2250	63	"arg_1"	"any"	0	0	1	1
2251	64	"res_0"	"boolean"	1	0	0	0
2252	64	"arg_1"	"any"	0	0	1	1
2253	64	"arg_2"	"any"	0	0	1	2
2254	65	"res_0"	"boolean"	1	0	0	0
2255	65	"arg_1"	"any"	0	0	1	1
2256	65	"arg_2"	"any"	0	0	1	2
2257	66	"res_0"	"boolean"	1	0	0	0
2258	66	"arg_1"	"any"	0	0	1	1
2259	66	"arg_2"	"any"	0	0	1	2
2260	67	"res_0"	"boolean"	1	0	0	0
2261	67	"arg_1"	"any"	0	0	1	1
2262	67	"arg_2"	"any"	0	0	1	2
2263	71	"res_0"	"boolean"	1	0	0	0
2264	71	"arg_1"	"any"	0	0	1	1
2265	71	"arg_2"	"any"	0	0	1	2
2266	72	"res_0"	"oid"	63	0	0	0
2267	72	"arg_1"	"any"	0	0	1	1
2268	73	"res_0"	"int"	32	0	0	0
2269	73	"arg_1"	"any"	0	0	1	1
2270	74	"res_0"	"oid"	63	0	0	0
2271	74	"arg_1"	"any"	0	0	1	1
2272	74	"arg_2"	"varchar"	0	0	1	2
2273	74	"arg_3"	"varchar"	0	0	1	3
2274	77	"res_0"	"any"	0	0	0	0
2275	77	"arg_1"	"any"	0	0	1	1
2276	77	"arg_2"	"any"	0	0	1	2
2277	78	"res_0"	"any"	0	0	0	0
2278	78	"arg_1"	"any"	0	0	1	1
2279	78	"arg_2"	"any"	0	0	1	2
2280	79	"res_0"	"any"	0	0	0	0
2281	79	"arg_1"	"boolean"	1	0	1	1
2282	79	"arg_2"	"any"	0	0	1	2
2283	79	"arg_3"	"any"	0	0	1	3
2284	97	"res_0"	"oid"	63	0	0	0
2285	97	"arg_1"	"oid"	63	0	1	1
2286	97	"arg_2"	"oid"	63	0	1	2
2287	98	"res_0"	"tinyint"	8	0	0	0
2288	98	"arg_1"	"tinyint"	8	0	1	1
2289	98	"arg_2"	"tinyint"	8	0	1	2
2290	99	"res_0"	"smallint"	16	0	0	0
2291	99	"arg_1"	"smallint"	16	0	1	1
2292	99	"arg_2"	"smallint"	16	0	1	2
2293	100	"res_0"	"int"	32	0	0	0
2294	100	"arg_1"	"int"	32	0	1	1
2295	100	"arg_2"	"int"	32	0	1	2
2296	101	"res_0"	"bigint"	64	0	0	0
2297	101	"arg_1"	"bigint"	64	0	1	1
2298	101	"arg_2"	"bigint"	64	0	1	2
2299	102	"res_0"	"wrd"	64	0	0	0
2300	102	"arg_1"	"wrd"	64	0	1	1
2301	102	"arg_2"	"wrd"	64	0	1	2
2302	103	"res_0"	"decimal"	2	0	0	0
2303	103	"arg_1"	"decimal"	2	0	1	1
2304	103	"arg_2"	"decimal"	2	0	1	2
2305	104	"res_0"	"decimal"	4	0	0	0
2306	104	"arg_1"	"decimal"	4	0	1	1
2307	104	"arg_2"	"decimal"	4	0	1	2
2308	105	"res_0"	"decimal"	9	0	0	0
2309	105	"arg_1"	"decimal"	9	0	1	1
2310	105	"arg_2"	"decimal"	9	0	1	2
2311	106	"res_0"	"decimal"	19	0	0	0
2312	106	"arg_1"	"decimal"	19	0	1	1
2313	106	"arg_2"	"decimal"	19	0	1	2
2314	107	"res_0"	"real"	24	0	0	0
2315	107	"arg_1"	"real"	24	0	1	1
2316	107	"arg_2"	"real"	24	0	1	2
2317	108	"res_0"	"double"	53	0	0	0
2318	108	"arg_1"	"double"	53	0	1	1
2319	108	"arg_2"	"double"	53	0	1	2
2320	116	"res_0"	"int"	32	0	0	0
2321	116	"arg_1"	"any"	0	0	1	1
2322	117	"res_0"	"int"	32	0	0	0
2323	117	"arg_1"	"any"	0	0	1	1
2324	118	"res_0"	"int"	32	0	0	0
2325	118	"arg_1"	"any"	0	0	1	1
2326	119	"res_0"	"any"	0	0	0	0
2327	119	"arg_1"	"any"	0	0	1	1
2328	120	"res_0"	"int"	32	0	0	0
2329	120	"arg_1"	"any"	0	0	1	1
2330	121	"res_0"	"int"	32	0	0	0
2331	121	"arg_1"	"any"	0	0	1	1
2332	121	"arg_2"	"oid"	63	0	1	2
2333	121	"arg_3"	"any"	0	0	1	3
2334	122	"res_0"	"int"	32	0	0	0
2335	122	"arg_1"	"any"	0	0	1	1
2336	122	"arg_2"	"oid"	63	0	1	2
2337	122	"arg_3"	"any"	0	0	1	3
2338	123	"res_0"	"int"	32	0	0	0
2339	123	"arg_1"	"any"	0	0	1	1
2340	123	"arg_2"	"oid"	63	0	1	2
2341	123	"arg_3"	"any"	0	0	1	3
2342	124	"res_0"	"any"	0	0	0	0
2343	124	"arg_1"	"any"	0	0	1	1
2344	124	"arg_2"	"oid"	63	0	1	2
2345	124	"arg_3"	"any"	0	0	1	3
2346	125	"res_0"	"int"	32	0	0	0
2347	125	"arg_1"	"any"	0	0	1	1
2348	125	"arg_2"	"oid"	63	0	1	2
2349	125	"arg_3"	"any"	0	0	1	3
2350	126	"res_0"	"int"	32	0	0	0
2351	126	"arg_1"	"any"	0	0	1	1
2352	126	"arg_2"	"oid"	63	0	1	2
2353	126	"arg_3"	"oid"	63	0	1	3
2354	126	"arg_4"	"oid"	63	0	1	4
2355	127	"res_0"	"int"	32	0	0	0
2356	127	"arg_1"	"any"	0	0	1	1
2357	127	"arg_2"	"oid"	63	0	1	2
2358	127	"arg_3"	"oid"	63	0	1	3
2359	127	"arg_4"	"oid"	63	0	1	4
2360	128	"res_0"	"int"	32	0	0	0
2361	128	"arg_1"	"any"	0	0	1	1
2362	128	"arg_2"	"oid"	63	0	1	2
2363	128	"arg_3"	"oid"	63	0	1	3
2364	128	"arg_4"	"oid"	63	0	1	4
2365	129	"res_0"	"any"	0	0	0	0
2366	129	"arg_1"	"any"	0	0	1	1
2367	129	"arg_2"	"oid"	63	0	1	2
2368	129	"arg_3"	"oid"	63	0	1	3
2369	129	"arg_4"	"oid"	63	0	1	4
2370	130	"res_0"	"int"	32	0	0	0
2371	130	"arg_1"	"any"	0	0	1	1
2372	130	"arg_2"	"oid"	63	0	1	2
2373	130	"arg_3"	"oid"	63	0	1	3
2374	130	"arg_4"	"oid"	63	0	1	4
2375	131	"res_0"	"any"	0	0	0	0
2376	131	"arg_1"	"any"	0	0	1	1
2377	132	"res_0"	"any"	0	0	0	0
2378	132	"arg_1"	"any"	0	0	1	1
2379	133	"res_0"	"any"	0	0	0	0
2380	133	"arg_1"	"any"	0	0	1	1
2381	133	"arg_2"	"int"	32	0	1	2
2382	134	"res_0"	"any"	0	0	0	0
2383	134	"arg_1"	"any"	0	0	1	1
2384	134	"arg_2"	"int"	32	0	1	2
2385	135	"res_0"	"any"	0	0	0	0
2386	135	"arg_1"	"any"	0	0	1	1
2387	135	"arg_2"	"oid"	63	0	1	2
2388	135	"arg_3"	"oid"	63	0	1	3
2389	136	"res_0"	"any"	0	0	0	0
2390	136	"arg_1"	"any"	0	0	1	1
2391	136	"arg_2"	"oid"	63	0	1	2
2392	136	"arg_3"	"oid"	63	0	1	3
2393	137	"res_0"	"any"	0	0	0	0
2394	137	"arg_1"	"any"	0	0	1	1
2395	137	"arg_2"	"int"	32	0	1	2
2396	137	"arg_3"	"oid"	63	0	1	3
2397	137	"arg_4"	"oid"	63	0	1	4
2398	138	"res_0"	"any"	0	0	0	0
2399	138	"arg_1"	"any"	0	0	1	1
2400	138	"arg_2"	"int"	32	0	1	2
2401	138	"arg_3"	"oid"	63	0	1	3
2402	138	"arg_4"	"oid"	63	0	1	4
2403	139	"res_0"	"boolean"	1	0	0	0
2404	139	"arg_1"	"boolean"	1	0	1	1
2405	139	"arg_2"	"boolean"	1	0	1	2
2406	140	"res_0"	"boolean"	1	0	0	0
2407	140	"arg_1"	"boolean"	1	0	1	1
2408	140	"arg_2"	"boolean"	1	0	1	2
2409	141	"res_0"	"boolean"	1	0	0	0
2410	141	"arg_1"	"boolean"	1	0	1	1
2411	141	"arg_2"	"boolean"	1	0	1	2
2412	142	"res_0"	"boolean"	1	0	0	0
2413	142	"arg_1"	"boolean"	1	0	1	1
2414	143	"res_0"	"oid"	63	0	0	0
2415	143	"arg_1"	"oid"	63	0	1	1
2416	143	"arg_2"	"oid"	63	0	1	2
2417	144	"res_0"	"oid"	63	0	0	0
2418	144	"arg_1"	"oid"	63	0	1	1
2419	144	"arg_2"	"oid"	63	0	1	2
2420	145	"res_0"	"oid"	63	0	0	0
2421	145	"arg_1"	"oid"	63	0	1	1
2422	145	"arg_2"	"oid"	63	0	1	2
2423	146	"res_0"	"oid"	63	0	0	0
2424	146	"arg_1"	"oid"	63	0	1	1
2425	146	"arg_2"	"oid"	63	0	1	2
2426	147	"res_0"	"oid"	63	0	0	0
2427	147	"arg_1"	"oid"	63	0	1	1
2428	147	"arg_2"	"oid"	63	0	1	2
2429	148	"res_0"	"oid"	63	0	0	0
2430	148	"arg_1"	"oid"	63	0	1	1
2431	148	"arg_2"	"oid"	63	0	1	2
2432	149	"res_0"	"oid"	63	0	0	0
2433	149	"arg_1"	"oid"	63	0	1	1
2434	149	"arg_2"	"oid"	63	0	1	2
2435	150	"res_0"	"oid"	63	0	0	0
2436	150	"arg_1"	"oid"	63	0	1	1
2437	151	"res_0"	"oid"	63	0	0	0
2438	151	"arg_1"	"oid"	63	0	1	1
2439	151	"arg_2"	"int"	32	0	1	2
2440	152	"res_0"	"oid"	63	0	0	0
2441	152	"arg_1"	"oid"	63	0	1	1
2442	152	"arg_2"	"int"	32	0	1	2
2443	153	"res_0"	"oid"	63	0	0	0
2444	153	"arg_1"	"oid"	63	0	1	1
2445	154	"res_0"	"oid"	63	0	0	0
2446	154	"arg_1"	"oid"	63	0	1	1
2447	155	"res_0"	"tinyint"	8	0	0	0
2448	155	"arg_1"	"oid"	63	0	1	1
2449	156	"res_0"	"oid"	63	0	0	0
2450	156	"arg_1"	"oid"	63	0	1	1
2451	156	"arg_2"	"oid"	63	0	1	2
2452	157	"res_0"	"oid"	63	0	0	0
2453	157	"arg_1"	"oid"	63	0	1	1
2454	157	"arg_2"	"oid"	63	0	1	2
2455	158	"res_0"	"month_interval"	32	0	0	0
2456	158	"arg_1"	"month_interval"	32	0	1	1
2457	158	"arg_2"	"oid"	63	0	1	2
2458	159	"res_0"	"month_interval"	32	0	0	0
2459	159	"arg_1"	"month_interval"	32	0	1	1
2460	159	"arg_2"	"oid"	63	0	1	2
2461	160	"res_0"	"month_interval"	32	0	0	0
2462	160	"arg_1"	"month_interval"	32	0	1	1
2463	160	"arg_2"	"oid"	63	0	1	2
2464	161	"res_0"	"month_interval"	32	0	0	0
2465	161	"arg_1"	"month_interval"	32	0	1	1
2466	161	"arg_2"	"oid"	63	0	1	2
2467	162	"res_0"	"sec_interval"	19	0	0	0
2468	162	"arg_1"	"sec_interval"	19	0	1	1
2469	162	"arg_2"	"oid"	63	0	1	2
2470	163	"res_0"	"sec_interval"	19	0	0	0
2471	163	"arg_1"	"sec_interval"	19	0	1	1
2472	163	"arg_2"	"oid"	63	0	1	2
2473	164	"res_0"	"sec_interval"	19	0	0	0
2474	164	"arg_1"	"sec_interval"	19	0	1	1
2475	164	"arg_2"	"oid"	63	0	1	2
2476	165	"res_0"	"sec_interval"	19	0	0	0
2477	165	"arg_1"	"sec_interval"	19	0	1	1
2478	165	"arg_2"	"oid"	63	0	1	2
2479	166	"res_0"	"tinyint"	8	0	0	0
2480	166	"arg_1"	"tinyint"	8	0	1	1
2481	166	"arg_2"	"tinyint"	8	0	1	2
2482	167	"res_0"	"tinyint"	8	0	0	0
2483	167	"arg_1"	"tinyint"	8	0	1	1
2484	167	"arg_2"	"tinyint"	8	0	1	2
2485	168	"res_0"	"tinyint"	8	0	0	0
2486	168	"arg_1"	"tinyint"	8	0	1	1
2487	168	"arg_2"	"tinyint"	8	0	1	2
2488	169	"res_0"	"tinyint"	8	0	0	0
2489	169	"arg_1"	"tinyint"	8	0	1	1
2490	169	"arg_2"	"tinyint"	8	0	1	2
2491	170	"res_0"	"tinyint"	8	0	0	0
2492	170	"arg_1"	"tinyint"	8	0	1	1
2493	170	"arg_2"	"tinyint"	8	0	1	2
2494	171	"res_0"	"tinyint"	8	0	0	0
2495	171	"arg_1"	"tinyint"	8	0	1	1
2496	171	"arg_2"	"tinyint"	8	0	1	2
2497	172	"res_0"	"tinyint"	8	0	0	0
2498	172	"arg_1"	"tinyint"	8	0	1	1
2499	172	"arg_2"	"tinyint"	8	0	1	2
2500	173	"res_0"	"tinyint"	8	0	0	0
2501	173	"arg_1"	"tinyint"	8	0	1	1
2502	174	"res_0"	"tinyint"	8	0	0	0
2503	174	"arg_1"	"tinyint"	8	0	1	1
2504	174	"arg_2"	"int"	32	0	1	2
2505	175	"res_0"	"tinyint"	8	0	0	0
2506	175	"arg_1"	"tinyint"	8	0	1	1
2507	175	"arg_2"	"int"	32	0	1	2
2508	176	"res_0"	"tinyint"	8	0	0	0
2509	176	"arg_1"	"tinyint"	8	0	1	1
2510	177	"res_0"	"tinyint"	8	0	0	0
2511	177	"arg_1"	"tinyint"	8	0	1	1
2512	178	"res_0"	"tinyint"	8	0	0	0
2513	178	"arg_1"	"tinyint"	8	0	1	1
2514	179	"res_0"	"tinyint"	8	0	0	0
2515	179	"arg_1"	"tinyint"	8	0	1	1
2516	179	"arg_2"	"tinyint"	8	0	1	2
2517	180	"res_0"	"tinyint"	8	0	0	0
2518	180	"arg_1"	"tinyint"	8	0	1	1
2519	180	"arg_2"	"tinyint"	8	0	1	2
2520	181	"res_0"	"month_interval"	32	0	0	0
2521	181	"arg_1"	"month_interval"	32	0	1	1
2522	181	"arg_2"	"tinyint"	8	0	1	2
2523	182	"res_0"	"month_interval"	32	0	0	0
2524	182	"arg_1"	"month_interval"	32	0	1	1
2525	182	"arg_2"	"tinyint"	8	0	1	2
2526	183	"res_0"	"month_interval"	32	0	0	0
2527	183	"arg_1"	"month_interval"	32	0	1	1
2528	183	"arg_2"	"tinyint"	8	0	1	2
2529	184	"res_0"	"month_interval"	32	0	0	0
2530	184	"arg_1"	"month_interval"	32	0	1	1
2531	184	"arg_2"	"tinyint"	8	0	1	2
2532	185	"res_0"	"sec_interval"	19	0	0	0
2533	185	"arg_1"	"sec_interval"	19	0	1	1
2534	185	"arg_2"	"tinyint"	8	0	1	2
2535	186	"res_0"	"sec_interval"	19	0	0	0
2536	186	"arg_1"	"sec_interval"	19	0	1	1
2537	186	"arg_2"	"tinyint"	8	0	1	2
2538	187	"res_0"	"sec_interval"	19	0	0	0
2539	187	"arg_1"	"sec_interval"	19	0	1	1
2540	187	"arg_2"	"tinyint"	8	0	1	2
2541	188	"res_0"	"sec_interval"	19	0	0	0
2542	188	"arg_1"	"sec_interval"	19	0	1	1
2543	188	"arg_2"	"tinyint"	8	0	1	2
2544	189	"res_0"	"smallint"	16	0	0	0
2545	189	"arg_1"	"smallint"	16	0	1	1
2546	189	"arg_2"	"smallint"	16	0	1	2
2547	190	"res_0"	"smallint"	16	0	0	0
2548	190	"arg_1"	"smallint"	16	0	1	1
2549	190	"arg_2"	"smallint"	16	0	1	2
2550	191	"res_0"	"smallint"	16	0	0	0
2551	191	"arg_1"	"smallint"	16	0	1	1
2552	191	"arg_2"	"smallint"	16	0	1	2
2553	192	"res_0"	"smallint"	16	0	0	0
2554	192	"arg_1"	"smallint"	16	0	1	1
2555	192	"arg_2"	"smallint"	16	0	1	2
2556	193	"res_0"	"smallint"	16	0	0	0
2557	193	"arg_1"	"smallint"	16	0	1	1
2558	193	"arg_2"	"smallint"	16	0	1	2
2559	194	"res_0"	"smallint"	16	0	0	0
2560	194	"arg_1"	"smallint"	16	0	1	1
2561	194	"arg_2"	"smallint"	16	0	1	2
2562	195	"res_0"	"smallint"	16	0	0	0
2563	195	"arg_1"	"smallint"	16	0	1	1
2564	195	"arg_2"	"smallint"	16	0	1	2
2565	196	"res_0"	"smallint"	16	0	0	0
2566	196	"arg_1"	"smallint"	16	0	1	1
2567	197	"res_0"	"smallint"	16	0	0	0
2568	197	"arg_1"	"smallint"	16	0	1	1
2569	197	"arg_2"	"int"	32	0	1	2
2570	198	"res_0"	"smallint"	16	0	0	0
2571	198	"arg_1"	"smallint"	16	0	1	1
2572	198	"arg_2"	"int"	32	0	1	2
2573	199	"res_0"	"smallint"	16	0	0	0
2574	199	"arg_1"	"smallint"	16	0	1	1
2575	200	"res_0"	"smallint"	16	0	0	0
2576	200	"arg_1"	"smallint"	16	0	1	1
2577	201	"res_0"	"tinyint"	8	0	0	0
2578	201	"arg_1"	"smallint"	16	0	1	1
2579	202	"res_0"	"smallint"	16	0	0	0
2580	202	"arg_1"	"smallint"	16	0	1	1
2581	202	"arg_2"	"smallint"	16	0	1	2
2582	203	"res_0"	"smallint"	16	0	0	0
2583	203	"arg_1"	"smallint"	16	0	1	1
2584	203	"arg_2"	"smallint"	16	0	1	2
2585	204	"res_0"	"month_interval"	32	0	0	0
2586	204	"arg_1"	"month_interval"	32	0	1	1
2587	204	"arg_2"	"smallint"	16	0	1	2
2588	205	"res_0"	"month_interval"	32	0	0	0
2589	205	"arg_1"	"month_interval"	32	0	1	1
2590	205	"arg_2"	"smallint"	16	0	1	2
2591	206	"res_0"	"month_interval"	32	0	0	0
2592	206	"arg_1"	"month_interval"	32	0	1	1
2593	206	"arg_2"	"smallint"	16	0	1	2
2594	207	"res_0"	"month_interval"	32	0	0	0
2595	207	"arg_1"	"month_interval"	32	0	1	1
2596	207	"arg_2"	"smallint"	16	0	1	2
2597	208	"res_0"	"sec_interval"	19	0	0	0
2598	208	"arg_1"	"sec_interval"	19	0	1	1
2599	208	"arg_2"	"smallint"	16	0	1	2
2600	209	"res_0"	"sec_interval"	19	0	0	0
2601	209	"arg_1"	"sec_interval"	19	0	1	1
2602	209	"arg_2"	"smallint"	16	0	1	2
2603	210	"res_0"	"sec_interval"	19	0	0	0
2604	210	"arg_1"	"sec_interval"	19	0	1	1
2605	210	"arg_2"	"smallint"	16	0	1	2
2606	211	"res_0"	"sec_interval"	19	0	0	0
2607	211	"arg_1"	"sec_interval"	19	0	1	1
2608	211	"arg_2"	"smallint"	16	0	1	2
2609	212	"res_0"	"int"	32	0	0	0
2610	212	"arg_1"	"int"	32	0	1	1
2611	212	"arg_2"	"int"	32	0	1	2
2612	213	"res_0"	"int"	32	0	0	0
2613	213	"arg_1"	"int"	32	0	1	1
2614	213	"arg_2"	"int"	32	0	1	2
2615	214	"res_0"	"int"	32	0	0	0
2616	214	"arg_1"	"int"	32	0	1	1
2617	214	"arg_2"	"int"	32	0	1	2
2618	215	"res_0"	"int"	32	0	0	0
2619	215	"arg_1"	"int"	32	0	1	1
2620	215	"arg_2"	"int"	32	0	1	2
2621	216	"res_0"	"int"	32	0	0	0
2622	216	"arg_1"	"int"	32	0	1	1
2623	216	"arg_2"	"int"	32	0	1	2
2624	217	"res_0"	"int"	32	0	0	0
2625	217	"arg_1"	"int"	32	0	1	1
2626	217	"arg_2"	"int"	32	0	1	2
2627	218	"res_0"	"int"	32	0	0	0
2628	218	"arg_1"	"int"	32	0	1	1
2629	218	"arg_2"	"int"	32	0	1	2
2630	219	"res_0"	"int"	32	0	0	0
2631	219	"arg_1"	"int"	32	0	1	1
2632	220	"res_0"	"int"	32	0	0	0
2633	220	"arg_1"	"int"	32	0	1	1
2634	220	"arg_2"	"int"	32	0	1	2
2635	221	"res_0"	"int"	32	0	0	0
2636	221	"arg_1"	"int"	32	0	1	1
2637	221	"arg_2"	"int"	32	0	1	2
2638	222	"res_0"	"int"	32	0	0	0
2639	222	"arg_1"	"int"	32	0	1	1
2640	223	"res_0"	"int"	32	0	0	0
2641	223	"arg_1"	"int"	32	0	1	1
2642	224	"res_0"	"tinyint"	8	0	0	0
2643	224	"arg_1"	"int"	32	0	1	1
2644	225	"res_0"	"int"	32	0	0	0
2645	225	"arg_1"	"int"	32	0	1	1
2646	225	"arg_2"	"int"	32	0	1	2
2647	226	"res_0"	"int"	32	0	0	0
2648	226	"arg_1"	"int"	32	0	1	1
2649	226	"arg_2"	"int"	32	0	1	2
2650	227	"res_0"	"month_interval"	32	0	0	0
2651	227	"arg_1"	"month_interval"	32	0	1	1
2652	227	"arg_2"	"int"	32	0	1	2
2653	228	"res_0"	"month_interval"	32	0	0	0
2654	228	"arg_1"	"month_interval"	32	0	1	1
2655	228	"arg_2"	"int"	32	0	1	2
2656	229	"res_0"	"month_interval"	32	0	0	0
2657	229	"arg_1"	"month_interval"	32	0	1	1
2658	229	"arg_2"	"int"	32	0	1	2
2659	230	"res_0"	"month_interval"	32	0	0	0
2660	230	"arg_1"	"month_interval"	32	0	1	1
2661	230	"arg_2"	"int"	32	0	1	2
2662	231	"res_0"	"sec_interval"	19	0	0	0
2663	231	"arg_1"	"sec_interval"	19	0	1	1
2664	231	"arg_2"	"int"	32	0	1	2
2665	232	"res_0"	"sec_interval"	19	0	0	0
2666	232	"arg_1"	"sec_interval"	19	0	1	1
2667	232	"arg_2"	"int"	32	0	1	2
2668	233	"res_0"	"sec_interval"	19	0	0	0
2669	233	"arg_1"	"sec_interval"	19	0	1	1
2670	233	"arg_2"	"int"	32	0	1	2
2671	234	"res_0"	"sec_interval"	19	0	0	0
2672	234	"arg_1"	"sec_interval"	19	0	1	1
2673	234	"arg_2"	"int"	32	0	1	2
2674	235	"res_0"	"bigint"	64	0	0	0
2675	235	"arg_1"	"bigint"	64	0	1	1
2676	235	"arg_2"	"bigint"	64	0	1	2
2677	236	"res_0"	"bigint"	64	0	0	0
2678	236	"arg_1"	"bigint"	64	0	1	1
2679	236	"arg_2"	"bigint"	64	0	1	2
2680	237	"res_0"	"bigint"	64	0	0	0
2681	237	"arg_1"	"bigint"	64	0	1	1
2682	237	"arg_2"	"bigint"	64	0	1	2
2683	238	"res_0"	"bigint"	64	0	0	0
2684	238	"arg_1"	"bigint"	64	0	1	1
2685	238	"arg_2"	"bigint"	64	0	1	2
2686	239	"res_0"	"bigint"	64	0	0	0
2687	239	"arg_1"	"bigint"	64	0	1	1
2688	239	"arg_2"	"bigint"	64	0	1	2
2689	240	"res_0"	"bigint"	64	0	0	0
2690	240	"arg_1"	"bigint"	64	0	1	1
2691	240	"arg_2"	"bigint"	64	0	1	2
2692	241	"res_0"	"bigint"	64	0	0	0
2693	241	"arg_1"	"bigint"	64	0	1	1
2694	241	"arg_2"	"bigint"	64	0	1	2
2695	242	"res_0"	"bigint"	64	0	0	0
2696	242	"arg_1"	"bigint"	64	0	1	1
2697	243	"res_0"	"bigint"	64	0	0	0
2698	243	"arg_1"	"bigint"	64	0	1	1
2699	243	"arg_2"	"int"	32	0	1	2
2700	244	"res_0"	"bigint"	64	0	0	0
2701	244	"arg_1"	"bigint"	64	0	1	1
2702	244	"arg_2"	"int"	32	0	1	2
2703	245	"res_0"	"bigint"	64	0	0	0
2704	245	"arg_1"	"bigint"	64	0	1	1
2705	246	"res_0"	"bigint"	64	0	0	0
2706	246	"arg_1"	"bigint"	64	0	1	1
2707	247	"res_0"	"tinyint"	8	0	0	0
2708	247	"arg_1"	"bigint"	64	0	1	1
2709	248	"res_0"	"bigint"	64	0	0	0
2710	248	"arg_1"	"bigint"	64	0	1	1
2711	248	"arg_2"	"bigint"	64	0	1	2
2712	249	"res_0"	"bigint"	64	0	0	0
2713	249	"arg_1"	"bigint"	64	0	1	1
2714	249	"arg_2"	"bigint"	64	0	1	2
2715	250	"res_0"	"month_interval"	32	0	0	0
2716	250	"arg_1"	"month_interval"	32	0	1	1
2717	250	"arg_2"	"bigint"	64	0	1	2
2718	251	"res_0"	"month_interval"	32	0	0	0
2719	251	"arg_1"	"month_interval"	32	0	1	1
2720	251	"arg_2"	"bigint"	64	0	1	2
2721	252	"res_0"	"month_interval"	32	0	0	0
2722	252	"arg_1"	"month_interval"	32	0	1	1
2723	252	"arg_2"	"bigint"	64	0	1	2
2724	253	"res_0"	"month_interval"	32	0	0	0
2725	253	"arg_1"	"month_interval"	32	0	1	1
2726	253	"arg_2"	"bigint"	64	0	1	2
2727	254	"res_0"	"sec_interval"	19	0	0	0
2728	254	"arg_1"	"sec_interval"	19	0	1	1
2729	254	"arg_2"	"bigint"	64	0	1	2
2730	255	"res_0"	"sec_interval"	19	0	0	0
2731	255	"arg_1"	"sec_interval"	19	0	1	1
2732	255	"arg_2"	"bigint"	64	0	1	2
2733	256	"res_0"	"sec_interval"	19	0	0	0
2734	256	"arg_1"	"sec_interval"	19	0	1	1
2735	256	"arg_2"	"bigint"	64	0	1	2
2736	257	"res_0"	"sec_interval"	19	0	0	0
2737	257	"arg_1"	"sec_interval"	19	0	1	1
2738	257	"arg_2"	"bigint"	64	0	1	2
2739	258	"res_0"	"wrd"	64	0	0	0
2740	258	"arg_1"	"wrd"	64	0	1	1
2741	258	"arg_2"	"wrd"	64	0	1	2
2742	259	"res_0"	"wrd"	64	0	0	0
2743	259	"arg_1"	"wrd"	64	0	1	1
2744	259	"arg_2"	"wrd"	64	0	1	2
2745	260	"res_0"	"wrd"	64	0	0	0
2746	260	"arg_1"	"wrd"	64	0	1	1
2747	260	"arg_2"	"wrd"	64	0	1	2
2748	261	"res_0"	"wrd"	64	0	0	0
2749	261	"arg_1"	"wrd"	64	0	1	1
2750	261	"arg_2"	"wrd"	64	0	1	2
2751	262	"res_0"	"wrd"	64	0	0	0
2752	262	"arg_1"	"wrd"	64	0	1	1
2753	262	"arg_2"	"wrd"	64	0	1	2
2754	263	"res_0"	"wrd"	64	0	0	0
2755	263	"arg_1"	"wrd"	64	0	1	1
2756	263	"arg_2"	"wrd"	64	0	1	2
2757	264	"res_0"	"wrd"	64	0	0	0
2758	264	"arg_1"	"wrd"	64	0	1	1
2759	264	"arg_2"	"wrd"	64	0	1	2
2760	265	"res_0"	"wrd"	64	0	0	0
2761	265	"arg_1"	"wrd"	64	0	1	1
2762	266	"res_0"	"wrd"	64	0	0	0
2763	266	"arg_1"	"wrd"	64	0	1	1
2764	266	"arg_2"	"int"	32	0	1	2
2765	267	"res_0"	"wrd"	64	0	0	0
2766	267	"arg_1"	"wrd"	64	0	1	1
2767	267	"arg_2"	"int"	32	0	1	2
2768	268	"res_0"	"wrd"	64	0	0	0
2769	268	"arg_1"	"wrd"	64	0	1	1
2770	269	"res_0"	"wrd"	64	0	0	0
2771	269	"arg_1"	"wrd"	64	0	1	1
2772	270	"res_0"	"tinyint"	8	0	0	0
2773	270	"arg_1"	"wrd"	64	0	1	1
2774	271	"res_0"	"wrd"	64	0	0	0
2775	271	"arg_1"	"wrd"	64	0	1	1
2776	271	"arg_2"	"wrd"	64	0	1	2
2777	272	"res_0"	"wrd"	64	0	0	0
2778	272	"arg_1"	"wrd"	64	0	1	1
2779	272	"arg_2"	"wrd"	64	0	1	2
2780	273	"res_0"	"month_interval"	32	0	0	0
2781	273	"arg_1"	"month_interval"	32	0	1	1
2782	273	"arg_2"	"wrd"	64	0	1	2
2783	274	"res_0"	"month_interval"	32	0	0	0
2784	274	"arg_1"	"month_interval"	32	0	1	1
2785	274	"arg_2"	"wrd"	64	0	1	2
2786	275	"res_0"	"month_interval"	32	0	0	0
2787	275	"arg_1"	"month_interval"	32	0	1	1
2788	275	"arg_2"	"wrd"	64	0	1	2
2789	276	"res_0"	"month_interval"	32	0	0	0
2790	276	"arg_1"	"month_interval"	32	0	1	1
2791	276	"arg_2"	"wrd"	64	0	1	2
2792	277	"res_0"	"sec_interval"	19	0	0	0
2793	277	"arg_1"	"sec_interval"	19	0	1	1
2794	277	"arg_2"	"wrd"	64	0	1	2
2795	278	"res_0"	"sec_interval"	19	0	0	0
2796	278	"arg_1"	"sec_interval"	19	0	1	1
2797	278	"arg_2"	"wrd"	64	0	1	2
2798	279	"res_0"	"sec_interval"	19	0	0	0
2799	279	"arg_1"	"sec_interval"	19	0	1	1
2800	279	"arg_2"	"wrd"	64	0	1	2
2801	280	"res_0"	"sec_interval"	19	0	0	0
2802	280	"arg_1"	"sec_interval"	19	0	1	1
2803	280	"arg_2"	"wrd"	64	0	1	2
2804	281	"res_0"	"decimal"	2	0	0	0
2805	281	"arg_1"	"decimal"	2	0	1	1
2806	281	"arg_2"	"decimal"	2	0	1	2
2807	282	"res_0"	"decimal"	2	0	0	0
2808	282	"arg_1"	"decimal"	2	0	1	1
2809	282	"arg_2"	"decimal"	2	0	1	2
2810	283	"res_0"	"decimal"	2	0	0	0
2811	283	"arg_1"	"decimal"	2	0	1	1
2812	283	"arg_2"	"decimal"	2	0	1	2
2813	284	"res_0"	"decimal"	2	0	0	0
2814	284	"arg_1"	"decimal"	2	0	1	1
2815	284	"arg_2"	"decimal"	2	0	1	2
2816	285	"res_0"	"decimal"	2	0	0	0
2817	285	"arg_1"	"decimal"	2	0	1	1
2818	285	"arg_2"	"decimal"	2	0	1	2
2819	286	"res_0"	"decimal"	2	0	0	0
2820	286	"arg_1"	"decimal"	2	0	1	1
2821	286	"arg_2"	"decimal"	2	0	1	2
2822	287	"res_0"	"decimal"	2	0	0	0
2823	287	"arg_1"	"decimal"	2	0	1	1
2824	287	"arg_2"	"decimal"	2	0	1	2
2825	288	"res_0"	"decimal"	2	0	0	0
2826	288	"arg_1"	"decimal"	2	0	1	1
2827	289	"res_0"	"decimal"	2	0	0	0
2828	289	"arg_1"	"decimal"	2	0	1	1
2829	289	"arg_2"	"int"	32	0	1	2
2830	290	"res_0"	"decimal"	2	0	0	0
2831	290	"arg_1"	"decimal"	2	0	1	1
2832	290	"arg_2"	"int"	32	0	1	2
2833	291	"res_0"	"decimal"	2	0	0	0
2834	291	"arg_1"	"decimal"	2	0	1	1
2835	292	"res_0"	"decimal"	2	0	0	0
2836	292	"arg_1"	"decimal"	2	0	1	1
2837	293	"res_0"	"tinyint"	8	0	0	0
2838	293	"arg_1"	"decimal"	2	0	1	1
2839	294	"res_0"	"decimal"	2	0	0	0
2840	294	"arg_1"	"decimal"	2	0	1	1
2841	294	"arg_2"	"tinyint"	8	0	1	2
2842	295	"res_0"	"decimal"	2	0	0	0
2843	295	"arg_1"	"decimal"	2	0	1	1
2844	295	"arg_2"	"tinyint"	8	0	1	2
2845	296	"res_0"	"month_interval"	32	0	0	0
2846	296	"arg_1"	"month_interval"	32	0	1	1
2847	296	"arg_2"	"decimal"	2	0	1	2
2848	297	"res_0"	"month_interval"	32	0	0	0
2849	297	"arg_1"	"month_interval"	32	0	1	1
2850	297	"arg_2"	"decimal"	2	0	1	2
2851	298	"res_0"	"month_interval"	32	0	0	0
2852	298	"arg_1"	"month_interval"	32	0	1	1
2853	298	"arg_2"	"decimal"	2	0	1	2
2854	299	"res_0"	"month_interval"	32	0	0	0
2855	299	"arg_1"	"month_interval"	32	0	1	1
2856	299	"arg_2"	"decimal"	2	0	1	2
2857	300	"res_0"	"sec_interval"	19	0	0	0
2858	300	"arg_1"	"sec_interval"	19	0	1	1
2859	300	"arg_2"	"decimal"	2	0	1	2
2860	301	"res_0"	"sec_interval"	19	0	0	0
2861	301	"arg_1"	"sec_interval"	19	0	1	1
2862	301	"arg_2"	"decimal"	2	0	1	2
2863	302	"res_0"	"sec_interval"	19	0	0	0
2864	302	"arg_1"	"sec_interval"	19	0	1	1
2865	302	"arg_2"	"decimal"	2	0	1	2
2866	303	"res_0"	"sec_interval"	19	0	0	0
2867	303	"arg_1"	"sec_interval"	19	0	1	1
2868	303	"arg_2"	"decimal"	2	0	1	2
2869	304	"res_0"	"decimal"	4	0	0	0
2870	304	"arg_1"	"decimal"	4	0	1	1
2871	304	"arg_2"	"decimal"	4	0	1	2
2872	305	"res_0"	"decimal"	4	0	0	0
2873	305	"arg_1"	"decimal"	4	0	1	1
2874	305	"arg_2"	"decimal"	4	0	1	2
2875	306	"res_0"	"decimal"	4	0	0	0
2876	306	"arg_1"	"decimal"	4	0	1	1
2877	306	"arg_2"	"decimal"	4	0	1	2
2878	307	"res_0"	"decimal"	4	0	0	0
2879	307	"arg_1"	"decimal"	4	0	1	1
2880	307	"arg_2"	"decimal"	4	0	1	2
2881	308	"res_0"	"decimal"	4	0	0	0
2882	308	"arg_1"	"decimal"	4	0	1	1
2883	308	"arg_2"	"decimal"	4	0	1	2
2884	309	"res_0"	"decimal"	4	0	0	0
2885	309	"arg_1"	"decimal"	4	0	1	1
2886	309	"arg_2"	"decimal"	4	0	1	2
2887	310	"res_0"	"decimal"	4	0	0	0
2888	310	"arg_1"	"decimal"	4	0	1	1
2889	310	"arg_2"	"decimal"	4	0	1	2
2890	311	"res_0"	"decimal"	4	0	0	0
2891	311	"arg_1"	"decimal"	4	0	1	1
2892	312	"res_0"	"decimal"	4	0	0	0
2893	312	"arg_1"	"decimal"	4	0	1	1
2894	312	"arg_2"	"int"	32	0	1	2
2895	313	"res_0"	"decimal"	4	0	0	0
2896	313	"arg_1"	"decimal"	4	0	1	1
2897	313	"arg_2"	"int"	32	0	1	2
2898	314	"res_0"	"decimal"	4	0	0	0
2899	314	"arg_1"	"decimal"	4	0	1	1
2900	315	"res_0"	"decimal"	4	0	0	0
2901	315	"arg_1"	"decimal"	4	0	1	1
2902	316	"res_0"	"tinyint"	8	0	0	0
2903	316	"arg_1"	"decimal"	4	0	1	1
2904	317	"res_0"	"decimal"	4	0	0	0
2905	317	"arg_1"	"decimal"	4	0	1	1
2906	317	"arg_2"	"smallint"	16	0	1	2
2907	318	"res_0"	"decimal"	4	0	0	0
2908	318	"arg_1"	"decimal"	4	0	1	1
2909	318	"arg_2"	"smallint"	16	0	1	2
2910	319	"res_0"	"month_interval"	32	0	0	0
2911	319	"arg_1"	"month_interval"	32	0	1	1
2912	319	"arg_2"	"decimal"	4	0	1	2
2913	320	"res_0"	"month_interval"	32	0	0	0
2914	320	"arg_1"	"month_interval"	32	0	1	1
2915	320	"arg_2"	"decimal"	4	0	1	2
2916	321	"res_0"	"month_interval"	32	0	0	0
2917	321	"arg_1"	"month_interval"	32	0	1	1
2918	321	"arg_2"	"decimal"	4	0	1	2
2919	322	"res_0"	"month_interval"	32	0	0	0
2920	322	"arg_1"	"month_interval"	32	0	1	1
2921	322	"arg_2"	"decimal"	4	0	1	2
2922	323	"res_0"	"sec_interval"	19	0	0	0
2923	323	"arg_1"	"sec_interval"	19	0	1	1
2924	323	"arg_2"	"decimal"	4	0	1	2
2925	324	"res_0"	"sec_interval"	19	0	0	0
2926	324	"arg_1"	"sec_interval"	19	0	1	1
2927	324	"arg_2"	"decimal"	4	0	1	2
2928	325	"res_0"	"sec_interval"	19	0	0	0
2929	325	"arg_1"	"sec_interval"	19	0	1	1
2930	325	"arg_2"	"decimal"	4	0	1	2
2931	326	"res_0"	"sec_interval"	19	0	0	0
2932	326	"arg_1"	"sec_interval"	19	0	1	1
2933	326	"arg_2"	"decimal"	4	0	1	2
2934	327	"res_0"	"decimal"	9	0	0	0
2935	327	"arg_1"	"decimal"	9	0	1	1
2936	327	"arg_2"	"decimal"	9	0	1	2
2937	328	"res_0"	"decimal"	9	0	0	0
2938	328	"arg_1"	"decimal"	9	0	1	1
2939	328	"arg_2"	"decimal"	9	0	1	2
2940	329	"res_0"	"decimal"	9	0	0	0
2941	329	"arg_1"	"decimal"	9	0	1	1
2942	329	"arg_2"	"decimal"	9	0	1	2
2943	330	"res_0"	"decimal"	9	0	0	0
2944	330	"arg_1"	"decimal"	9	0	1	1
2945	330	"arg_2"	"decimal"	9	0	1	2
2946	331	"res_0"	"decimal"	9	0	0	0
2947	331	"arg_1"	"decimal"	9	0	1	1
2948	331	"arg_2"	"decimal"	9	0	1	2
2949	332	"res_0"	"decimal"	9	0	0	0
2950	332	"arg_1"	"decimal"	9	0	1	1
2951	332	"arg_2"	"decimal"	9	0	1	2
2952	333	"res_0"	"decimal"	9	0	0	0
2953	333	"arg_1"	"decimal"	9	0	1	1
2954	333	"arg_2"	"decimal"	9	0	1	2
2955	334	"res_0"	"decimal"	9	0	0	0
2956	334	"arg_1"	"decimal"	9	0	1	1
2957	335	"res_0"	"decimal"	9	0	0	0
2958	335	"arg_1"	"decimal"	9	0	1	1
2959	335	"arg_2"	"int"	32	0	1	2
2960	336	"res_0"	"decimal"	9	0	0	0
2961	336	"arg_1"	"decimal"	9	0	1	1
2962	336	"arg_2"	"int"	32	0	1	2
2963	337	"res_0"	"decimal"	9	0	0	0
2964	337	"arg_1"	"decimal"	9	0	1	1
2965	338	"res_0"	"decimal"	9	0	0	0
2966	338	"arg_1"	"decimal"	9	0	1	1
2967	339	"res_0"	"tinyint"	8	0	0	0
2968	339	"arg_1"	"decimal"	9	0	1	1
2969	340	"res_0"	"decimal"	9	0	0	0
2970	340	"arg_1"	"decimal"	9	0	1	1
2971	340	"arg_2"	"int"	32	0	1	2
2972	341	"res_0"	"decimal"	9	0	0	0
2973	341	"arg_1"	"decimal"	9	0	1	1
2974	341	"arg_2"	"int"	32	0	1	2
2975	342	"res_0"	"month_interval"	32	0	0	0
2976	342	"arg_1"	"month_interval"	32	0	1	1
2977	342	"arg_2"	"decimal"	9	0	1	2
2978	343	"res_0"	"month_interval"	32	0	0	0
2979	343	"arg_1"	"month_interval"	32	0	1	1
2980	343	"arg_2"	"decimal"	9	0	1	2
2981	344	"res_0"	"month_interval"	32	0	0	0
2982	344	"arg_1"	"month_interval"	32	0	1	1
2983	344	"arg_2"	"decimal"	9	0	1	2
2984	345	"res_0"	"month_interval"	32	0	0	0
2985	345	"arg_1"	"month_interval"	32	0	1	1
2986	345	"arg_2"	"decimal"	9	0	1	2
2987	346	"res_0"	"sec_interval"	19	0	0	0
2988	346	"arg_1"	"sec_interval"	19	0	1	1
2989	346	"arg_2"	"decimal"	9	0	1	2
2990	347	"res_0"	"sec_interval"	19	0	0	0
2991	347	"arg_1"	"sec_interval"	19	0	1	1
2992	347	"arg_2"	"decimal"	9	0	1	2
2993	348	"res_0"	"sec_interval"	19	0	0	0
2994	348	"arg_1"	"sec_interval"	19	0	1	1
2995	348	"arg_2"	"decimal"	9	0	1	2
2996	349	"res_0"	"sec_interval"	19	0	0	0
2997	349	"arg_1"	"sec_interval"	19	0	1	1
2998	349	"arg_2"	"decimal"	9	0	1	2
2999	350	"res_0"	"decimal"	19	0	0	0
3000	350	"arg_1"	"decimal"	19	0	1	1
3001	350	"arg_2"	"decimal"	19	0	1	2
3002	351	"res_0"	"decimal"	19	0	0	0
3003	351	"arg_1"	"decimal"	19	0	1	1
3004	351	"arg_2"	"decimal"	19	0	1	2
3005	352	"res_0"	"decimal"	19	0	0	0
3006	352	"arg_1"	"decimal"	19	0	1	1
3007	352	"arg_2"	"decimal"	19	0	1	2
3008	353	"res_0"	"decimal"	19	0	0	0
3009	353	"arg_1"	"decimal"	19	0	1	1
3010	353	"arg_2"	"decimal"	19	0	1	2
3011	354	"res_0"	"decimal"	19	0	0	0
3012	354	"arg_1"	"decimal"	19	0	1	1
3013	354	"arg_2"	"decimal"	19	0	1	2
3014	355	"res_0"	"decimal"	19	0	0	0
3015	355	"arg_1"	"decimal"	19	0	1	1
3016	355	"arg_2"	"decimal"	19	0	1	2
3017	356	"res_0"	"decimal"	19	0	0	0
3018	356	"arg_1"	"decimal"	19	0	1	1
3019	356	"arg_2"	"decimal"	19	0	1	2
3020	357	"res_0"	"decimal"	19	0	0	0
3021	357	"arg_1"	"decimal"	19	0	1	1
3022	358	"res_0"	"decimal"	19	0	0	0
3023	358	"arg_1"	"decimal"	19	0	1	1
3024	358	"arg_2"	"int"	32	0	1	2
3025	359	"res_0"	"decimal"	19	0	0	0
3026	359	"arg_1"	"decimal"	19	0	1	1
3027	359	"arg_2"	"int"	32	0	1	2
3028	360	"res_0"	"decimal"	19	0	0	0
3029	360	"arg_1"	"decimal"	19	0	1	1
3030	361	"res_0"	"decimal"	19	0	0	0
3031	361	"arg_1"	"decimal"	19	0	1	1
3032	362	"res_0"	"tinyint"	8	0	0	0
3033	362	"arg_1"	"decimal"	19	0	1	1
3034	363	"res_0"	"decimal"	19	0	0	0
3035	363	"arg_1"	"decimal"	19	0	1	1
3036	363	"arg_2"	"bigint"	64	0	1	2
3037	364	"res_0"	"decimal"	19	0	0	0
3038	364	"arg_1"	"decimal"	19	0	1	1
3039	364	"arg_2"	"bigint"	64	0	1	2
3040	365	"res_0"	"month_interval"	32	0	0	0
3041	365	"arg_1"	"month_interval"	32	0	1	1
3042	365	"arg_2"	"decimal"	19	0	1	2
3043	366	"res_0"	"month_interval"	32	0	0	0
3044	366	"arg_1"	"month_interval"	32	0	1	1
3045	366	"arg_2"	"decimal"	19	0	1	2
3046	367	"res_0"	"month_interval"	32	0	0	0
3047	367	"arg_1"	"month_interval"	32	0	1	1
3048	367	"arg_2"	"decimal"	19	0	1	2
3049	368	"res_0"	"month_interval"	32	0	0	0
3050	368	"arg_1"	"month_interval"	32	0	1	1
3051	368	"arg_2"	"decimal"	19	0	1	2
3052	369	"res_0"	"sec_interval"	19	0	0	0
3053	369	"arg_1"	"sec_interval"	19	0	1	1
3054	369	"arg_2"	"decimal"	19	0	1	2
3055	370	"res_0"	"sec_interval"	19	0	0	0
3056	370	"arg_1"	"sec_interval"	19	0	1	1
3057	370	"arg_2"	"decimal"	19	0	1	2
3058	371	"res_0"	"sec_interval"	19	0	0	0
3059	371	"arg_1"	"sec_interval"	19	0	1	1
3060	371	"arg_2"	"decimal"	19	0	1	2
3061	372	"res_0"	"sec_interval"	19	0	0	0
3062	372	"arg_1"	"sec_interval"	19	0	1	1
3063	372	"arg_2"	"decimal"	19	0	1	2
3064	373	"res_0"	"real"	24	0	0	0
3065	373	"arg_1"	"real"	24	0	1	1
3066	373	"arg_2"	"real"	24	0	1	2
3067	374	"res_0"	"real"	24	0	0	0
3068	374	"arg_1"	"real"	24	0	1	1
3069	374	"arg_2"	"real"	24	0	1	2
3070	375	"res_0"	"real"	24	0	0	0
3071	375	"arg_1"	"real"	24	0	1	1
3072	375	"arg_2"	"real"	24	0	1	2
3073	376	"res_0"	"real"	24	0	0	0
3074	376	"arg_1"	"real"	24	0	1	1
3075	376	"arg_2"	"real"	24	0	1	2
3076	377	"res_0"	"real"	24	0	0	0
3077	377	"arg_1"	"real"	24	0	1	1
3078	378	"res_0"	"real"	24	0	0	0
3079	378	"arg_1"	"real"	24	0	1	1
3080	379	"res_0"	"tinyint"	8	0	0	0
3081	379	"arg_1"	"real"	24	0	1	1
3082	380	"res_0"	"real"	24	0	0	0
3083	380	"arg_1"	"real"	24	0	1	1
3084	380	"arg_2"	"real"	24	0	1	2
3085	381	"res_0"	"real"	24	0	0	0
3086	381	"arg_1"	"real"	24	0	1	1
3087	381	"arg_2"	"real"	24	0	1	2
3088	382	"res_0"	"month_interval"	32	0	0	0
3089	382	"arg_1"	"month_interval"	32	0	1	1
3090	382	"arg_2"	"real"	24	0	1	2
3091	383	"res_0"	"month_interval"	32	0	0	0
3092	383	"arg_1"	"month_interval"	32	0	1	1
3093	383	"arg_2"	"real"	24	0	1	2
3094	384	"res_0"	"month_interval"	32	0	0	0
3095	384	"arg_1"	"month_interval"	32	0	1	1
3096	384	"arg_2"	"real"	24	0	1	2
3097	385	"res_0"	"month_interval"	32	0	0	0
3098	385	"arg_1"	"month_interval"	32	0	1	1
3099	385	"arg_2"	"real"	24	0	1	2
3100	386	"res_0"	"sec_interval"	19	0	0	0
3101	386	"arg_1"	"sec_interval"	19	0	1	1
3102	386	"arg_2"	"real"	24	0	1	2
3103	387	"res_0"	"sec_interval"	19	0	0	0
3104	387	"arg_1"	"sec_interval"	19	0	1	1
3105	387	"arg_2"	"real"	24	0	1	2
3106	388	"res_0"	"sec_interval"	19	0	0	0
3107	388	"arg_1"	"sec_interval"	19	0	1	1
3108	388	"arg_2"	"real"	24	0	1	2
3109	389	"res_0"	"sec_interval"	19	0	0	0
3110	389	"arg_1"	"sec_interval"	19	0	1	1
3111	389	"arg_2"	"real"	24	0	1	2
3112	390	"res_0"	"double"	53	0	0	0
3113	390	"arg_1"	"double"	53	0	1	1
3114	390	"arg_2"	"double"	53	0	1	2
3115	391	"res_0"	"double"	53	0	0	0
3116	391	"arg_1"	"double"	53	0	1	1
3117	391	"arg_2"	"double"	53	0	1	2
3118	392	"res_0"	"double"	53	0	0	0
3119	392	"arg_1"	"double"	53	0	1	1
3120	392	"arg_2"	"double"	53	0	1	2
3121	393	"res_0"	"double"	53	0	0	0
3122	393	"arg_1"	"double"	53	0	1	1
3123	393	"arg_2"	"double"	53	0	1	2
3124	394	"res_0"	"double"	53	0	0	0
3125	394	"arg_1"	"double"	53	0	1	1
3126	395	"res_0"	"double"	53	0	0	0
3127	395	"arg_1"	"double"	53	0	1	1
3128	396	"res_0"	"tinyint"	8	0	0	0
3129	396	"arg_1"	"double"	53	0	1	1
3130	397	"res_0"	"double"	53	0	0	0
3131	397	"arg_1"	"double"	53	0	1	1
3132	397	"arg_2"	"double"	53	0	1	2
3133	398	"res_0"	"double"	53	0	0	0
3134	398	"arg_1"	"double"	53	0	1	1
3135	398	"arg_2"	"double"	53	0	1	2
3136	399	"res_0"	"month_interval"	32	0	0	0
3137	399	"arg_1"	"month_interval"	32	0	1	1
3138	399	"arg_2"	"double"	53	0	1	2
3139	400	"res_0"	"month_interval"	32	0	0	0
3140	400	"arg_1"	"month_interval"	32	0	1	1
3141	400	"arg_2"	"double"	53	0	1	2
3142	401	"res_0"	"month_interval"	32	0	0	0
3143	401	"arg_1"	"month_interval"	32	0	1	1
3144	401	"arg_2"	"double"	53	0	1	2
3145	402	"res_0"	"month_interval"	32	0	0	0
3146	402	"arg_1"	"month_interval"	32	0	1	1
3147	402	"arg_2"	"double"	53	0	1	2
3148	403	"res_0"	"sec_interval"	19	0	0	0
3149	403	"arg_1"	"sec_interval"	19	0	1	1
3150	403	"arg_2"	"double"	53	0	1	2
3151	404	"res_0"	"sec_interval"	19	0	0	0
3152	404	"arg_1"	"sec_interval"	19	0	1	1
3153	404	"arg_2"	"double"	53	0	1	2
3154	405	"res_0"	"sec_interval"	19	0	0	0
3155	405	"arg_1"	"sec_interval"	19	0	1	1
3156	405	"arg_2"	"double"	53	0	1	2
3157	406	"res_0"	"sec_interval"	19	0	0	0
3158	406	"arg_1"	"sec_interval"	19	0	1	1
3159	406	"arg_2"	"double"	53	0	1	2
3160	407	"res_0"	"month_interval"	32	0	0	0
3161	407	"arg_1"	"month_interval"	32	0	1	1
3162	407	"arg_2"	"month_interval"	32	0	1	2
3163	408	"res_0"	"month_interval"	32	0	0	0
3164	408	"arg_1"	"month_interval"	32	0	1	1
3165	408	"arg_2"	"month_interval"	32	0	1	2
3166	409	"res_0"	"month_interval"	32	0	0	0
3167	409	"arg_1"	"month_interval"	32	0	1	1
3168	409	"arg_2"	"month_interval"	32	0	1	2
3169	410	"res_0"	"month_interval"	32	0	0	0
3170	410	"arg_1"	"month_interval"	32	0	1	1
3171	410	"arg_2"	"month_interval"	32	0	1	2
3172	411	"res_0"	"month_interval"	32	0	0	0
3173	411	"arg_1"	"month_interval"	32	0	1	1
3174	412	"res_0"	"month_interval"	32	0	0	0
3175	412	"arg_1"	"month_interval"	32	0	1	1
3176	413	"res_0"	"tinyint"	8	0	0	0
3177	413	"arg_1"	"month_interval"	32	0	1	1
3178	414	"res_0"	"month_interval"	32	0	0	0
3179	414	"arg_1"	"month_interval"	32	0	1	1
3180	414	"arg_2"	"int"	32	0	1	2
3181	415	"res_0"	"month_interval"	32	0	0	0
3182	415	"arg_1"	"month_interval"	32	0	1	1
3183	415	"arg_2"	"int"	32	0	1	2
3184	416	"res_0"	"sec_interval"	19	0	0	0
3185	416	"arg_1"	"sec_interval"	19	0	1	1
3186	416	"arg_2"	"sec_interval"	19	0	1	2
3187	417	"res_0"	"sec_interval"	19	0	0	0
3188	417	"arg_1"	"sec_interval"	19	0	1	1
3189	417	"arg_2"	"sec_interval"	19	0	1	2
3190	418	"res_0"	"sec_interval"	19	0	0	0
3191	418	"arg_1"	"sec_interval"	19	0	1	1
3192	418	"arg_2"	"sec_interval"	19	0	1	2
3193	419	"res_0"	"sec_interval"	19	0	0	0
3194	419	"arg_1"	"sec_interval"	19	0	1	1
3195	419	"arg_2"	"sec_interval"	19	0	1	2
3196	420	"res_0"	"sec_interval"	19	0	0	0
3197	420	"arg_1"	"sec_interval"	19	0	1	1
3198	421	"res_0"	"sec_interval"	19	0	0	0
3199	421	"arg_1"	"sec_interval"	19	0	1	1
3200	422	"res_0"	"tinyint"	8	0	0	0
3201	422	"arg_1"	"sec_interval"	19	0	1	1
3202	423	"res_0"	"sec_interval"	19	0	0	0
3203	423	"arg_1"	"sec_interval"	19	0	1	1
3204	423	"arg_2"	"bigint"	64	0	1	2
3205	424	"res_0"	"sec_interval"	19	0	0	0
3206	424	"arg_1"	"sec_interval"	19	0	1	1
3207	424	"arg_2"	"bigint"	64	0	1	2
3208	425	"res_0"	"decimal"	4	0	0	0
3209	425	"arg_1"	"decimal"	4	0	1	1
3210	425	"arg_2"	"tinyint"	8	0	1	2
3211	426	"res_0"	"decimal"	4	0	0	0
3212	426	"arg_1"	"tinyint"	8	0	1	1
3213	426	"arg_2"	"decimal"	4	0	1	2
3214	427	"res_0"	"decimal"	4	0	0	0
3215	427	"arg_1"	"decimal"	4	0	1	1
3216	427	"arg_2"	"decimal"	2	0	1	2
3217	428	"res_0"	"decimal"	4	0	0	0
3218	428	"arg_1"	"decimal"	2	0	1	1
3219	428	"arg_2"	"decimal"	4	0	1	2
3220	429	"res_0"	"decimal"	9	0	0	0
3221	429	"arg_1"	"decimal"	9	0	1	1
3222	429	"arg_2"	"tinyint"	8	0	1	2
3223	430	"res_0"	"decimal"	9	0	0	0
3224	430	"arg_1"	"tinyint"	8	0	1	1
3225	430	"arg_2"	"decimal"	9	0	1	2
3226	431	"res_0"	"decimal"	9	0	0	0
3227	431	"arg_1"	"decimal"	9	0	1	1
3228	431	"arg_2"	"smallint"	16	0	1	2
3229	432	"res_0"	"decimal"	9	0	0	0
3230	432	"arg_1"	"smallint"	16	0	1	1
3231	432	"arg_2"	"decimal"	9	0	1	2
3232	433	"res_0"	"decimal"	9	0	0	0
3233	433	"arg_1"	"decimal"	9	0	1	1
3234	433	"arg_2"	"decimal"	2	0	1	2
3235	434	"res_0"	"decimal"	9	0	0	0
3236	434	"arg_1"	"decimal"	2	0	1	1
3237	434	"arg_2"	"decimal"	9	0	1	2
3238	435	"res_0"	"decimal"	9	0	0	0
3239	435	"arg_1"	"decimal"	9	0	1	1
3240	435	"arg_2"	"decimal"	4	0	1	2
3241	436	"res_0"	"decimal"	9	0	0	0
3242	436	"arg_1"	"decimal"	4	0	1	1
3243	436	"arg_2"	"decimal"	9	0	1	2
3244	437	"res_0"	"decimal"	19	0	0	0
3245	437	"arg_1"	"decimal"	19	0	1	1
3246	437	"arg_2"	"tinyint"	8	0	1	2
3247	438	"res_0"	"decimal"	19	0	0	0
3248	438	"arg_1"	"tinyint"	8	0	1	1
3249	438	"arg_2"	"decimal"	19	0	1	2
3250	439	"res_0"	"decimal"	19	0	0	0
3251	439	"arg_1"	"decimal"	19	0	1	1
3252	439	"arg_2"	"smallint"	16	0	1	2
3253	440	"res_0"	"decimal"	19	0	0	0
3254	440	"arg_1"	"smallint"	16	0	1	1
3255	440	"arg_2"	"decimal"	19	0	1	2
3256	441	"res_0"	"decimal"	19	0	0	0
3257	441	"arg_1"	"decimal"	19	0	1	1
3258	441	"arg_2"	"int"	32	0	1	2
3259	442	"res_0"	"decimal"	19	0	0	0
3260	442	"arg_1"	"int"	32	0	1	1
3261	442	"arg_2"	"decimal"	19	0	1	2
3262	443	"res_0"	"decimal"	19	0	0	0
3263	443	"arg_1"	"decimal"	19	0	1	1
3264	443	"arg_2"	"wrd"	64	0	1	2
3265	444	"res_0"	"decimal"	19	0	0	0
3266	444	"arg_1"	"wrd"	64	0	1	1
3267	444	"arg_2"	"decimal"	19	0	1	2
3268	445	"res_0"	"decimal"	19	0	0	0
3269	445	"arg_1"	"decimal"	19	0	1	1
3270	445	"arg_2"	"decimal"	2	0	1	2
3271	446	"res_0"	"decimal"	19	0	0	0
3272	446	"arg_1"	"decimal"	2	0	1	1
3273	446	"arg_2"	"decimal"	19	0	1	2
3274	447	"res_0"	"decimal"	19	0	0	0
3275	447	"arg_1"	"decimal"	19	0	1	1
3276	447	"arg_2"	"decimal"	4	0	1	2
3277	448	"res_0"	"decimal"	19	0	0	0
3278	448	"arg_1"	"decimal"	4	0	1	1
3279	448	"arg_2"	"decimal"	19	0	1	2
3280	449	"res_0"	"decimal"	19	0	0	0
3281	449	"arg_1"	"decimal"	19	0	1	1
3282	449	"arg_2"	"decimal"	9	0	1	2
3283	450	"res_0"	"decimal"	19	0	0	0
3284	450	"arg_1"	"decimal"	9	0	1	1
3285	450	"arg_2"	"decimal"	19	0	1	2
3286	451	"res_0"	"decimal"	2	0	0	0
3287	451	"arg_1"	"decimal"	2	0	1	1
3288	451	"arg_2"	"tinyint"	8	0	1	2
3289	452	"res_0"	"decimal"	4	0	0	0
3290	452	"arg_1"	"decimal"	4	0	1	1
3291	452	"arg_2"	"tinyint"	8	0	1	2
3292	453	"res_0"	"decimal"	9	0	0	0
3293	453	"arg_1"	"decimal"	9	0	1	1
3294	453	"arg_2"	"tinyint"	8	0	1	2
3295	454	"res_0"	"decimal"	19	0	0	0
3296	454	"arg_1"	"decimal"	19	0	1	1
3297	454	"arg_2"	"tinyint"	8	0	1	2
3298	455	"res_0"	"real"	24	0	0	0
3299	455	"arg_1"	"real"	24	0	1	1
3300	455	"arg_2"	"tinyint"	8	0	1	2
3301	456	"res_0"	"double"	53	0	0	0
3302	456	"arg_1"	"double"	53	0	1	1
3303	456	"arg_2"	"tinyint"	8	0	1	2
3304	457	"res_0"	"oid"	63	0	0	0
3305	457	"arg_1"	"oid"	63	0	1	1
3306	457	"arg_2"	"oid"	63	0	1	2
3307	458	"res_0"	"oid"	63	0	0	0
3308	458	"arg_1"	"tinyint"	8	0	1	1
3309	458	"arg_2"	"oid"	63	0	1	2
3310	459	"res_0"	"oid"	63	0	0	0
3311	459	"arg_1"	"smallint"	16	0	1	1
3312	459	"arg_2"	"oid"	63	0	1	2
3313	460	"res_0"	"oid"	63	0	0	0
3314	460	"arg_1"	"int"	32	0	1	1
3315	460	"arg_2"	"oid"	63	0	1	2
3316	461	"res_0"	"oid"	63	0	0	0
3317	461	"arg_1"	"bigint"	64	0	1	1
3318	461	"arg_2"	"oid"	63	0	1	2
3319	462	"res_0"	"oid"	63	0	0	0
3320	462	"arg_1"	"wrd"	64	0	1	1
3321	462	"arg_2"	"oid"	63	0	1	2
3322	463	"res_0"	"oid"	63	0	0	0
3323	463	"arg_1"	"decimal"	2	0	1	1
3324	463	"arg_2"	"oid"	63	0	1	2
3325	464	"res_0"	"oid"	63	0	0	0
3326	464	"arg_1"	"decimal"	4	0	1	1
3327	464	"arg_2"	"oid"	63	0	1	2
3328	465	"res_0"	"oid"	63	0	0	0
3329	465	"arg_1"	"decimal"	9	0	1	1
3330	465	"arg_2"	"oid"	63	0	1	2
3331	466	"res_0"	"oid"	63	0	0	0
3332	466	"arg_1"	"decimal"	19	0	1	1
3333	466	"arg_2"	"oid"	63	0	1	2
3334	467	"res_0"	"oid"	63	0	0	0
3335	467	"arg_1"	"real"	24	0	1	1
3336	467	"arg_2"	"oid"	63	0	1	2
3337	468	"res_0"	"oid"	63	0	0	0
3338	468	"arg_1"	"double"	53	0	1	1
3339	468	"arg_2"	"oid"	63	0	1	2
3340	469	"res_0"	"oid"	63	0	0	0
3341	469	"arg_1"	"month_interval"	32	0	1	1
3342	469	"arg_2"	"oid"	63	0	1	2
3343	470	"res_0"	"oid"	63	0	0	0
3344	470	"arg_1"	"sec_interval"	19	0	1	1
3345	470	"arg_2"	"oid"	63	0	1	2
3346	471	"res_0"	"oid"	63	0	0	0
3347	471	"arg_1"	"time"	7	0	1	1
3348	471	"arg_2"	"oid"	63	0	1	2
3349	472	"res_0"	"oid"	63	0	0	0
3350	472	"arg_1"	"timetz"	7	0	1	1
3351	472	"arg_2"	"oid"	63	0	1	2
3352	473	"res_0"	"oid"	63	0	0	0
3353	473	"arg_1"	"date"	0	0	1	1
3354	473	"arg_2"	"oid"	63	0	1	2
3355	474	"res_0"	"oid"	63	0	0	0
3356	474	"arg_1"	"timestamp"	7	0	1	1
3357	474	"arg_2"	"oid"	63	0	1	2
3358	475	"res_0"	"oid"	63	0	0	0
3359	475	"arg_1"	"timestamptz"	7	0	1	1
3360	475	"arg_2"	"oid"	63	0	1	2
3361	476	"res_0"	"oid"	63	0	0	0
3362	476	"arg_1"	"blob"	0	0	1	1
3363	476	"arg_2"	"oid"	63	0	1	2
3364	477	"res_0"	"oid"	63	0	0	0
3365	477	"arg_1"	"geometry"	0	0	1	1
3366	477	"arg_2"	"oid"	63	0	1	2
3367	478	"res_0"	"oid"	63	0	0	0
3368	478	"arg_1"	"geometrya"	0	0	1	1
3369	478	"arg_2"	"oid"	63	0	1	2
3370	479	"res_0"	"oid"	63	0	0	0
3371	479	"arg_1"	"mbr"	0	0	1	1
3372	479	"arg_2"	"oid"	63	0	1	2
3373	480	"res_0"	"tinyint"	8	0	0	0
3374	480	"arg_1"	"oid"	63	0	1	1
3375	480	"arg_2"	"tinyint"	8	0	1	2
3376	481	"res_0"	"tinyint"	8	0	0	0
3377	481	"arg_1"	"tinyint"	8	0	1	1
3378	481	"arg_2"	"tinyint"	8	0	1	2
3379	482	"res_0"	"tinyint"	8	0	0	0
3380	482	"arg_1"	"smallint"	16	0	1	1
3381	482	"arg_2"	"tinyint"	8	0	1	2
3382	483	"res_0"	"tinyint"	8	0	0	0
3383	483	"arg_1"	"int"	32	0	1	1
3384	483	"arg_2"	"tinyint"	8	0	1	2
3385	484	"res_0"	"tinyint"	8	0	0	0
3386	484	"arg_1"	"bigint"	64	0	1	1
3387	484	"arg_2"	"tinyint"	8	0	1	2
3388	485	"res_0"	"tinyint"	8	0	0	0
3389	485	"arg_1"	"wrd"	64	0	1	1
3390	485	"arg_2"	"tinyint"	8	0	1	2
3391	486	"res_0"	"tinyint"	8	0	0	0
3392	486	"arg_1"	"decimal"	2	0	1	1
3393	486	"arg_2"	"tinyint"	8	0	1	2
3394	487	"res_0"	"tinyint"	8	0	0	0
3395	487	"arg_1"	"decimal"	4	0	1	1
3396	487	"arg_2"	"tinyint"	8	0	1	2
3397	488	"res_0"	"tinyint"	8	0	0	0
3398	488	"arg_1"	"decimal"	9	0	1	1
3399	488	"arg_2"	"tinyint"	8	0	1	2
3400	489	"res_0"	"tinyint"	8	0	0	0
3401	489	"arg_1"	"decimal"	19	0	1	1
3402	489	"arg_2"	"tinyint"	8	0	1	2
3403	490	"res_0"	"tinyint"	8	0	0	0
3404	490	"arg_1"	"real"	24	0	1	1
3405	490	"arg_2"	"tinyint"	8	0	1	2
3406	491	"res_0"	"tinyint"	8	0	0	0
3407	491	"arg_1"	"double"	53	0	1	1
3408	491	"arg_2"	"tinyint"	8	0	1	2
3409	492	"res_0"	"tinyint"	8	0	0	0
3410	492	"arg_1"	"month_interval"	32	0	1	1
3411	492	"arg_2"	"tinyint"	8	0	1	2
3412	493	"res_0"	"tinyint"	8	0	0	0
3413	493	"arg_1"	"sec_interval"	19	0	1	1
3414	493	"arg_2"	"tinyint"	8	0	1	2
3415	494	"res_0"	"tinyint"	8	0	0	0
3416	494	"arg_1"	"time"	7	0	1	1
3417	494	"arg_2"	"tinyint"	8	0	1	2
3418	495	"res_0"	"tinyint"	8	0	0	0
3419	495	"arg_1"	"timetz"	7	0	1	1
3420	495	"arg_2"	"tinyint"	8	0	1	2
3421	496	"res_0"	"tinyint"	8	0	0	0
3422	496	"arg_1"	"date"	0	0	1	1
3423	496	"arg_2"	"tinyint"	8	0	1	2
3424	497	"res_0"	"tinyint"	8	0	0	0
3425	497	"arg_1"	"timestamp"	7	0	1	1
3426	497	"arg_2"	"tinyint"	8	0	1	2
3427	498	"res_0"	"tinyint"	8	0	0	0
3428	498	"arg_1"	"timestamptz"	7	0	1	1
3429	498	"arg_2"	"tinyint"	8	0	1	2
3430	499	"res_0"	"tinyint"	8	0	0	0
3431	499	"arg_1"	"blob"	0	0	1	1
3432	499	"arg_2"	"tinyint"	8	0	1	2
3433	500	"res_0"	"tinyint"	8	0	0	0
3434	500	"arg_1"	"geometry"	0	0	1	1
3435	500	"arg_2"	"tinyint"	8	0	1	2
3436	501	"res_0"	"tinyint"	8	0	0	0
3437	501	"arg_1"	"geometrya"	0	0	1	1
3438	501	"arg_2"	"tinyint"	8	0	1	2
3439	502	"res_0"	"tinyint"	8	0	0	0
3440	502	"arg_1"	"mbr"	0	0	1	1
3441	502	"arg_2"	"tinyint"	8	0	1	2
3442	503	"res_0"	"smallint"	16	0	0	0
3443	503	"arg_1"	"oid"	63	0	1	1
3444	503	"arg_2"	"smallint"	16	0	1	2
3445	504	"res_0"	"smallint"	16	0	0	0
3446	504	"arg_1"	"tinyint"	8	0	1	1
3447	504	"arg_2"	"smallint"	16	0	1	2
3448	505	"res_0"	"smallint"	16	0	0	0
3449	505	"arg_1"	"smallint"	16	0	1	1
3450	505	"arg_2"	"smallint"	16	0	1	2
3451	506	"res_0"	"smallint"	16	0	0	0
3452	506	"arg_1"	"int"	32	0	1	1
3453	506	"arg_2"	"smallint"	16	0	1	2
3454	507	"res_0"	"smallint"	16	0	0	0
3455	507	"arg_1"	"bigint"	64	0	1	1
3456	507	"arg_2"	"smallint"	16	0	1	2
3457	508	"res_0"	"smallint"	16	0	0	0
3458	508	"arg_1"	"wrd"	64	0	1	1
3459	508	"arg_2"	"smallint"	16	0	1	2
3460	509	"res_0"	"smallint"	16	0	0	0
3461	509	"arg_1"	"decimal"	2	0	1	1
3462	509	"arg_2"	"smallint"	16	0	1	2
3463	510	"res_0"	"smallint"	16	0	0	0
3464	510	"arg_1"	"decimal"	4	0	1	1
3465	510	"arg_2"	"smallint"	16	0	1	2
3466	511	"res_0"	"smallint"	16	0	0	0
3467	511	"arg_1"	"decimal"	9	0	1	1
3468	511	"arg_2"	"smallint"	16	0	1	2
3469	512	"res_0"	"smallint"	16	0	0	0
3470	512	"arg_1"	"decimal"	19	0	1	1
3471	512	"arg_2"	"smallint"	16	0	1	2
3472	513	"res_0"	"smallint"	16	0	0	0
3473	513	"arg_1"	"real"	24	0	1	1
3474	513	"arg_2"	"smallint"	16	0	1	2
3475	514	"res_0"	"smallint"	16	0	0	0
3476	514	"arg_1"	"double"	53	0	1	1
3477	514	"arg_2"	"smallint"	16	0	1	2
3478	515	"res_0"	"smallint"	16	0	0	0
3479	515	"arg_1"	"month_interval"	32	0	1	1
3480	515	"arg_2"	"smallint"	16	0	1	2
3481	516	"res_0"	"smallint"	16	0	0	0
3482	516	"arg_1"	"sec_interval"	19	0	1	1
3483	516	"arg_2"	"smallint"	16	0	1	2
3484	517	"res_0"	"smallint"	16	0	0	0
3485	517	"arg_1"	"time"	7	0	1	1
3486	517	"arg_2"	"smallint"	16	0	1	2
3487	518	"res_0"	"smallint"	16	0	0	0
3488	518	"arg_1"	"timetz"	7	0	1	1
3489	518	"arg_2"	"smallint"	16	0	1	2
3490	519	"res_0"	"smallint"	16	0	0	0
3491	519	"arg_1"	"date"	0	0	1	1
3492	519	"arg_2"	"smallint"	16	0	1	2
3493	520	"res_0"	"smallint"	16	0	0	0
3494	520	"arg_1"	"timestamp"	7	0	1	1
3495	520	"arg_2"	"smallint"	16	0	1	2
3496	521	"res_0"	"smallint"	16	0	0	0
3497	521	"arg_1"	"timestamptz"	7	0	1	1
3498	521	"arg_2"	"smallint"	16	0	1	2
3499	522	"res_0"	"smallint"	16	0	0	0
3500	522	"arg_1"	"blob"	0	0	1	1
3501	522	"arg_2"	"smallint"	16	0	1	2
3502	523	"res_0"	"smallint"	16	0	0	0
3503	523	"arg_1"	"geometry"	0	0	1	1
3504	523	"arg_2"	"smallint"	16	0	1	2
3505	524	"res_0"	"smallint"	16	0	0	0
3506	524	"arg_1"	"geometrya"	0	0	1	1
3507	524	"arg_2"	"smallint"	16	0	1	2
3508	525	"res_0"	"smallint"	16	0	0	0
3509	525	"arg_1"	"mbr"	0	0	1	1
3510	525	"arg_2"	"smallint"	16	0	1	2
3511	526	"res_0"	"int"	32	0	0	0
3512	526	"arg_1"	"oid"	63	0	1	1
3513	526	"arg_2"	"int"	32	0	1	2
3514	527	"res_0"	"int"	32	0	0	0
3515	527	"arg_1"	"tinyint"	8	0	1	1
3516	527	"arg_2"	"int"	32	0	1	2
3517	528	"res_0"	"int"	32	0	0	0
3518	528	"arg_1"	"smallint"	16	0	1	1
3519	528	"arg_2"	"int"	32	0	1	2
3520	529	"res_0"	"int"	32	0	0	0
3521	529	"arg_1"	"int"	32	0	1	1
3522	529	"arg_2"	"int"	32	0	1	2
3523	530	"res_0"	"int"	32	0	0	0
3524	530	"arg_1"	"bigint"	64	0	1	1
3525	530	"arg_2"	"int"	32	0	1	2
3526	531	"res_0"	"int"	32	0	0	0
3527	531	"arg_1"	"wrd"	64	0	1	1
3528	531	"arg_2"	"int"	32	0	1	2
3529	532	"res_0"	"int"	32	0	0	0
3530	532	"arg_1"	"decimal"	2	0	1	1
3531	532	"arg_2"	"int"	32	0	1	2
3532	533	"res_0"	"int"	32	0	0	0
3533	533	"arg_1"	"decimal"	4	0	1	1
3534	533	"arg_2"	"int"	32	0	1	2
3535	534	"res_0"	"int"	32	0	0	0
3536	534	"arg_1"	"decimal"	9	0	1	1
3537	534	"arg_2"	"int"	32	0	1	2
3538	535	"res_0"	"int"	32	0	0	0
3539	535	"arg_1"	"decimal"	19	0	1	1
3540	535	"arg_2"	"int"	32	0	1	2
3541	536	"res_0"	"int"	32	0	0	0
3542	536	"arg_1"	"real"	24	0	1	1
3543	536	"arg_2"	"int"	32	0	1	2
3544	537	"res_0"	"int"	32	0	0	0
3545	537	"arg_1"	"double"	53	0	1	1
3546	537	"arg_2"	"int"	32	0	1	2
3547	538	"res_0"	"int"	32	0	0	0
3548	538	"arg_1"	"month_interval"	32	0	1	1
3549	538	"arg_2"	"int"	32	0	1	2
3550	539	"res_0"	"int"	32	0	0	0
3551	539	"arg_1"	"sec_interval"	19	0	1	1
3552	539	"arg_2"	"int"	32	0	1	2
3553	540	"res_0"	"int"	32	0	0	0
3554	540	"arg_1"	"time"	7	0	1	1
3555	540	"arg_2"	"int"	32	0	1	2
3556	541	"res_0"	"int"	32	0	0	0
3557	541	"arg_1"	"timetz"	7	0	1	1
3558	541	"arg_2"	"int"	32	0	1	2
3559	542	"res_0"	"int"	32	0	0	0
3560	542	"arg_1"	"date"	0	0	1	1
3561	542	"arg_2"	"int"	32	0	1	2
3562	543	"res_0"	"int"	32	0	0	0
3563	543	"arg_1"	"timestamp"	7	0	1	1
3564	543	"arg_2"	"int"	32	0	1	2
3565	544	"res_0"	"int"	32	0	0	0
3566	544	"arg_1"	"timestamptz"	7	0	1	1
3567	544	"arg_2"	"int"	32	0	1	2
3568	545	"res_0"	"int"	32	0	0	0
3569	545	"arg_1"	"blob"	0	0	1	1
3570	545	"arg_2"	"int"	32	0	1	2
3571	546	"res_0"	"int"	32	0	0	0
3572	546	"arg_1"	"geometry"	0	0	1	1
3573	546	"arg_2"	"int"	32	0	1	2
3574	547	"res_0"	"int"	32	0	0	0
3575	547	"arg_1"	"geometrya"	0	0	1	1
3576	547	"arg_2"	"int"	32	0	1	2
3577	548	"res_0"	"int"	32	0	0	0
3578	548	"arg_1"	"mbr"	0	0	1	1
3579	548	"arg_2"	"int"	32	0	1	2
3580	549	"res_0"	"bigint"	64	0	0	0
3581	549	"arg_1"	"oid"	63	0	1	1
3582	549	"arg_2"	"bigint"	64	0	1	2
3583	550	"res_0"	"bigint"	64	0	0	0
3584	550	"arg_1"	"tinyint"	8	0	1	1
3585	550	"arg_2"	"bigint"	64	0	1	2
3586	551	"res_0"	"bigint"	64	0	0	0
3587	551	"arg_1"	"smallint"	16	0	1	1
3588	551	"arg_2"	"bigint"	64	0	1	2
3589	552	"res_0"	"bigint"	64	0	0	0
3590	552	"arg_1"	"int"	32	0	1	1
3591	552	"arg_2"	"bigint"	64	0	1	2
3592	553	"res_0"	"bigint"	64	0	0	0
3593	553	"arg_1"	"bigint"	64	0	1	1
3594	553	"arg_2"	"bigint"	64	0	1	2
3595	554	"res_0"	"bigint"	64	0	0	0
3596	554	"arg_1"	"wrd"	64	0	1	1
3597	554	"arg_2"	"bigint"	64	0	1	2
3598	555	"res_0"	"bigint"	64	0	0	0
3599	555	"arg_1"	"decimal"	2	0	1	1
3600	555	"arg_2"	"bigint"	64	0	1	2
3601	556	"res_0"	"bigint"	64	0	0	0
3602	556	"arg_1"	"decimal"	4	0	1	1
3603	556	"arg_2"	"bigint"	64	0	1	2
3604	557	"res_0"	"bigint"	64	0	0	0
3605	557	"arg_1"	"decimal"	9	0	1	1
3606	557	"arg_2"	"bigint"	64	0	1	2
3607	558	"res_0"	"bigint"	64	0	0	0
3608	558	"arg_1"	"decimal"	19	0	1	1
3609	558	"arg_2"	"bigint"	64	0	1	2
3610	559	"res_0"	"bigint"	64	0	0	0
3611	559	"arg_1"	"real"	24	0	1	1
3612	559	"arg_2"	"bigint"	64	0	1	2
3613	560	"res_0"	"bigint"	64	0	0	0
3614	560	"arg_1"	"double"	53	0	1	1
3615	560	"arg_2"	"bigint"	64	0	1	2
3616	561	"res_0"	"bigint"	64	0	0	0
3617	561	"arg_1"	"month_interval"	32	0	1	1
3618	561	"arg_2"	"bigint"	64	0	1	2
3619	562	"res_0"	"bigint"	64	0	0	0
3620	562	"arg_1"	"sec_interval"	19	0	1	1
3621	562	"arg_2"	"bigint"	64	0	1	2
3622	563	"res_0"	"bigint"	64	0	0	0
3623	563	"arg_1"	"time"	7	0	1	1
3624	563	"arg_2"	"bigint"	64	0	1	2
3625	564	"res_0"	"bigint"	64	0	0	0
3626	564	"arg_1"	"timetz"	7	0	1	1
3627	564	"arg_2"	"bigint"	64	0	1	2
3628	565	"res_0"	"bigint"	64	0	0	0
3629	565	"arg_1"	"date"	0	0	1	1
3630	565	"arg_2"	"bigint"	64	0	1	2
3631	566	"res_0"	"bigint"	64	0	0	0
3632	566	"arg_1"	"timestamp"	7	0	1	1
3633	566	"arg_2"	"bigint"	64	0	1	2
3634	567	"res_0"	"bigint"	64	0	0	0
3635	567	"arg_1"	"timestamptz"	7	0	1	1
3636	567	"arg_2"	"bigint"	64	0	1	2
3637	568	"res_0"	"bigint"	64	0	0	0
3638	568	"arg_1"	"blob"	0	0	1	1
3639	568	"arg_2"	"bigint"	64	0	1	2
3640	569	"res_0"	"bigint"	64	0	0	0
3641	569	"arg_1"	"geometry"	0	0	1	1
3642	569	"arg_2"	"bigint"	64	0	1	2
3643	570	"res_0"	"bigint"	64	0	0	0
3644	570	"arg_1"	"geometrya"	0	0	1	1
3645	570	"arg_2"	"bigint"	64	0	1	2
3646	571	"res_0"	"bigint"	64	0	0	0
3647	571	"arg_1"	"mbr"	0	0	1	1
3648	571	"arg_2"	"bigint"	64	0	1	2
3649	572	"res_0"	"wrd"	64	0	0	0
3650	572	"arg_1"	"oid"	63	0	1	1
3651	572	"arg_2"	"wrd"	64	0	1	2
3652	573	"res_0"	"wrd"	64	0	0	0
3653	573	"arg_1"	"tinyint"	8	0	1	1
3654	573	"arg_2"	"wrd"	64	0	1	2
3655	574	"res_0"	"wrd"	64	0	0	0
3656	574	"arg_1"	"smallint"	16	0	1	1
3657	574	"arg_2"	"wrd"	64	0	1	2
3658	575	"res_0"	"wrd"	64	0	0	0
3659	575	"arg_1"	"int"	32	0	1	1
3660	575	"arg_2"	"wrd"	64	0	1	2
3661	576	"res_0"	"wrd"	64	0	0	0
3662	576	"arg_1"	"bigint"	64	0	1	1
3663	576	"arg_2"	"wrd"	64	0	1	2
3664	577	"res_0"	"wrd"	64	0	0	0
3665	577	"arg_1"	"wrd"	64	0	1	1
3666	577	"arg_2"	"wrd"	64	0	1	2
3667	578	"res_0"	"wrd"	64	0	0	0
3668	578	"arg_1"	"decimal"	2	0	1	1
3669	578	"arg_2"	"wrd"	64	0	1	2
3670	579	"res_0"	"wrd"	64	0	0	0
3671	579	"arg_1"	"decimal"	4	0	1	1
3672	579	"arg_2"	"wrd"	64	0	1	2
3673	580	"res_0"	"wrd"	64	0	0	0
3674	580	"arg_1"	"decimal"	9	0	1	1
3675	580	"arg_2"	"wrd"	64	0	1	2
3676	581	"res_0"	"wrd"	64	0	0	0
3677	581	"arg_1"	"decimal"	19	0	1	1
3678	581	"arg_2"	"wrd"	64	0	1	2
3679	582	"res_0"	"wrd"	64	0	0	0
3680	582	"arg_1"	"real"	24	0	1	1
3681	582	"arg_2"	"wrd"	64	0	1	2
3682	583	"res_0"	"wrd"	64	0	0	0
3683	583	"arg_1"	"double"	53	0	1	1
3684	583	"arg_2"	"wrd"	64	0	1	2
3685	584	"res_0"	"wrd"	64	0	0	0
3686	584	"arg_1"	"month_interval"	32	0	1	1
3687	584	"arg_2"	"wrd"	64	0	1	2
3688	585	"res_0"	"wrd"	64	0	0	0
3689	585	"arg_1"	"sec_interval"	19	0	1	1
3690	585	"arg_2"	"wrd"	64	0	1	2
3691	586	"res_0"	"wrd"	64	0	0	0
3692	586	"arg_1"	"time"	7	0	1	1
3693	586	"arg_2"	"wrd"	64	0	1	2
3694	587	"res_0"	"wrd"	64	0	0	0
3695	587	"arg_1"	"timetz"	7	0	1	1
3696	587	"arg_2"	"wrd"	64	0	1	2
3697	588	"res_0"	"wrd"	64	0	0	0
3698	588	"arg_1"	"date"	0	0	1	1
3699	588	"arg_2"	"wrd"	64	0	1	2
3700	589	"res_0"	"wrd"	64	0	0	0
3701	589	"arg_1"	"timestamp"	7	0	1	1
3702	589	"arg_2"	"wrd"	64	0	1	2
3703	590	"res_0"	"wrd"	64	0	0	0
3704	590	"arg_1"	"timestamptz"	7	0	1	1
3705	590	"arg_2"	"wrd"	64	0	1	2
3706	591	"res_0"	"wrd"	64	0	0	0
3707	591	"arg_1"	"blob"	0	0	1	1
3708	591	"arg_2"	"wrd"	64	0	1	2
3709	592	"res_0"	"wrd"	64	0	0	0
3710	592	"arg_1"	"geometry"	0	0	1	1
3711	592	"arg_2"	"wrd"	64	0	1	2
3712	593	"res_0"	"wrd"	64	0	0	0
3713	593	"arg_1"	"geometrya"	0	0	1	1
3714	593	"arg_2"	"wrd"	64	0	1	2
3715	594	"res_0"	"wrd"	64	0	0	0
3716	594	"arg_1"	"mbr"	0	0	1	1
3717	594	"arg_2"	"wrd"	64	0	1	2
3718	595	"res_0"	"decimal"	2	0	0	0
3719	595	"arg_1"	"oid"	63	0	1	1
3720	595	"arg_2"	"decimal"	2	0	1	2
3721	596	"res_0"	"decimal"	2	0	0	0
3722	596	"arg_1"	"tinyint"	8	0	1	1
3723	596	"arg_2"	"decimal"	2	0	1	2
3724	597	"res_0"	"decimal"	2	0	0	0
3725	597	"arg_1"	"smallint"	16	0	1	1
3726	597	"arg_2"	"decimal"	2	0	1	2
3727	598	"res_0"	"decimal"	2	0	0	0
3728	598	"arg_1"	"int"	32	0	1	1
3729	598	"arg_2"	"decimal"	2	0	1	2
3730	599	"res_0"	"decimal"	2	0	0	0
3731	599	"arg_1"	"bigint"	64	0	1	1
3732	599	"arg_2"	"decimal"	2	0	1	2
3733	600	"res_0"	"decimal"	2	0	0	0
3734	600	"arg_1"	"wrd"	64	0	1	1
3735	600	"arg_2"	"decimal"	2	0	1	2
3736	601	"res_0"	"decimal"	2	0	0	0
3737	601	"arg_1"	"decimal"	2	0	1	1
3738	601	"arg_2"	"decimal"	2	0	1	2
3739	602	"res_0"	"decimal"	2	0	0	0
3740	602	"arg_1"	"decimal"	4	0	1	1
3741	602	"arg_2"	"decimal"	2	0	1	2
3742	603	"res_0"	"decimal"	2	0	0	0
3743	603	"arg_1"	"decimal"	9	0	1	1
3744	603	"arg_2"	"decimal"	2	0	1	2
3745	604	"res_0"	"decimal"	2	0	0	0
3746	604	"arg_1"	"decimal"	19	0	1	1
3747	604	"arg_2"	"decimal"	2	0	1	2
3748	605	"res_0"	"decimal"	2	0	0	0
3749	605	"arg_1"	"real"	24	0	1	1
3750	605	"arg_2"	"decimal"	2	0	1	2
3751	606	"res_0"	"decimal"	2	0	0	0
3752	606	"arg_1"	"double"	53	0	1	1
3753	606	"arg_2"	"decimal"	2	0	1	2
3754	607	"res_0"	"decimal"	2	0	0	0
3755	607	"arg_1"	"month_interval"	32	0	1	1
3756	607	"arg_2"	"decimal"	2	0	1	2
3757	608	"res_0"	"decimal"	2	0	0	0
3758	608	"arg_1"	"sec_interval"	19	0	1	1
3759	608	"arg_2"	"decimal"	2	0	1	2
3760	609	"res_0"	"decimal"	2	0	0	0
3761	609	"arg_1"	"time"	7	0	1	1
3762	609	"arg_2"	"decimal"	2	0	1	2
3763	610	"res_0"	"decimal"	2	0	0	0
3764	610	"arg_1"	"timetz"	7	0	1	1
3765	610	"arg_2"	"decimal"	2	0	1	2
3766	611	"res_0"	"decimal"	2	0	0	0
3767	611	"arg_1"	"date"	0	0	1	1
3768	611	"arg_2"	"decimal"	2	0	1	2
3769	612	"res_0"	"decimal"	2	0	0	0
3770	612	"arg_1"	"timestamp"	7	0	1	1
3771	612	"arg_2"	"decimal"	2	0	1	2
3772	613	"res_0"	"decimal"	2	0	0	0
3773	613	"arg_1"	"timestamptz"	7	0	1	1
3774	613	"arg_2"	"decimal"	2	0	1	2
3775	614	"res_0"	"decimal"	2	0	0	0
3776	614	"arg_1"	"blob"	0	0	1	1
3777	614	"arg_2"	"decimal"	2	0	1	2
3778	615	"res_0"	"decimal"	2	0	0	0
3779	615	"arg_1"	"geometry"	0	0	1	1
3780	615	"arg_2"	"decimal"	2	0	1	2
3781	616	"res_0"	"decimal"	2	0	0	0
3782	616	"arg_1"	"geometrya"	0	0	1	1
3783	616	"arg_2"	"decimal"	2	0	1	2
3784	617	"res_0"	"decimal"	2	0	0	0
3785	617	"arg_1"	"mbr"	0	0	1	1
3786	617	"arg_2"	"decimal"	2	0	1	2
3787	618	"res_0"	"decimal"	4	0	0	0
3788	618	"arg_1"	"oid"	63	0	1	1
3789	618	"arg_2"	"decimal"	4	0	1	2
3790	619	"res_0"	"decimal"	4	0	0	0
3791	619	"arg_1"	"tinyint"	8	0	1	1
3792	619	"arg_2"	"decimal"	4	0	1	2
3793	620	"res_0"	"decimal"	4	0	0	0
3794	620	"arg_1"	"smallint"	16	0	1	1
3795	620	"arg_2"	"decimal"	4	0	1	2
3796	621	"res_0"	"decimal"	4	0	0	0
3797	621	"arg_1"	"int"	32	0	1	1
3798	621	"arg_2"	"decimal"	4	0	1	2
3799	622	"res_0"	"decimal"	4	0	0	0
3800	622	"arg_1"	"bigint"	64	0	1	1
3801	622	"arg_2"	"decimal"	4	0	1	2
3802	623	"res_0"	"decimal"	4	0	0	0
3803	623	"arg_1"	"wrd"	64	0	1	1
3804	623	"arg_2"	"decimal"	4	0	1	2
3805	624	"res_0"	"decimal"	4	0	0	0
3806	624	"arg_1"	"decimal"	2	0	1	1
3807	624	"arg_2"	"decimal"	4	0	1	2
3808	625	"res_0"	"decimal"	4	0	0	0
3809	625	"arg_1"	"decimal"	4	0	1	1
3810	625	"arg_2"	"decimal"	4	0	1	2
3811	626	"res_0"	"decimal"	4	0	0	0
3812	626	"arg_1"	"decimal"	9	0	1	1
3813	626	"arg_2"	"decimal"	4	0	1	2
3814	627	"res_0"	"decimal"	4	0	0	0
3815	627	"arg_1"	"decimal"	19	0	1	1
3816	627	"arg_2"	"decimal"	4	0	1	2
3817	628	"res_0"	"decimal"	4	0	0	0
3818	628	"arg_1"	"real"	24	0	1	1
3819	628	"arg_2"	"decimal"	4	0	1	2
3820	629	"res_0"	"decimal"	4	0	0	0
3821	629	"arg_1"	"double"	53	0	1	1
3822	629	"arg_2"	"decimal"	4	0	1	2
3823	630	"res_0"	"decimal"	4	0	0	0
3824	630	"arg_1"	"month_interval"	32	0	1	1
3825	630	"arg_2"	"decimal"	4	0	1	2
3826	631	"res_0"	"decimal"	4	0	0	0
3827	631	"arg_1"	"sec_interval"	19	0	1	1
3828	631	"arg_2"	"decimal"	4	0	1	2
3829	632	"res_0"	"decimal"	4	0	0	0
3830	632	"arg_1"	"time"	7	0	1	1
3831	632	"arg_2"	"decimal"	4	0	1	2
3832	633	"res_0"	"decimal"	4	0	0	0
3833	633	"arg_1"	"timetz"	7	0	1	1
3834	633	"arg_2"	"decimal"	4	0	1	2
3835	634	"res_0"	"decimal"	4	0	0	0
3836	634	"arg_1"	"date"	0	0	1	1
3837	634	"arg_2"	"decimal"	4	0	1	2
3838	635	"res_0"	"decimal"	4	0	0	0
3839	635	"arg_1"	"timestamp"	7	0	1	1
3840	635	"arg_2"	"decimal"	4	0	1	2
3841	636	"res_0"	"decimal"	4	0	0	0
3842	636	"arg_1"	"timestamptz"	7	0	1	1
3843	636	"arg_2"	"decimal"	4	0	1	2
3844	637	"res_0"	"decimal"	4	0	0	0
3845	637	"arg_1"	"blob"	0	0	1	1
3846	637	"arg_2"	"decimal"	4	0	1	2
3847	638	"res_0"	"decimal"	4	0	0	0
3848	638	"arg_1"	"geometry"	0	0	1	1
3849	638	"arg_2"	"decimal"	4	0	1	2
3850	639	"res_0"	"decimal"	4	0	0	0
3851	639	"arg_1"	"geometrya"	0	0	1	1
3852	639	"arg_2"	"decimal"	4	0	1	2
3853	640	"res_0"	"decimal"	4	0	0	0
3854	640	"arg_1"	"mbr"	0	0	1	1
3855	640	"arg_2"	"decimal"	4	0	1	2
3856	641	"res_0"	"decimal"	9	0	0	0
3857	641	"arg_1"	"oid"	63	0	1	1
3858	641	"arg_2"	"decimal"	9	0	1	2
3859	642	"res_0"	"decimal"	9	0	0	0
3860	642	"arg_1"	"tinyint"	8	0	1	1
3861	642	"arg_2"	"decimal"	9	0	1	2
3862	643	"res_0"	"decimal"	9	0	0	0
3863	643	"arg_1"	"smallint"	16	0	1	1
3864	643	"arg_2"	"decimal"	9	0	1	2
3865	644	"res_0"	"decimal"	9	0	0	0
3866	644	"arg_1"	"int"	32	0	1	1
3867	644	"arg_2"	"decimal"	9	0	1	2
3868	645	"res_0"	"decimal"	9	0	0	0
3869	645	"arg_1"	"bigint"	64	0	1	1
3870	645	"arg_2"	"decimal"	9	0	1	2
3871	646	"res_0"	"decimal"	9	0	0	0
3872	646	"arg_1"	"wrd"	64	0	1	1
3873	646	"arg_2"	"decimal"	9	0	1	2
3874	647	"res_0"	"decimal"	9	0	0	0
3875	647	"arg_1"	"decimal"	2	0	1	1
3876	647	"arg_2"	"decimal"	9	0	1	2
3877	648	"res_0"	"decimal"	9	0	0	0
3878	648	"arg_1"	"decimal"	4	0	1	1
3879	648	"arg_2"	"decimal"	9	0	1	2
3880	649	"res_0"	"decimal"	9	0	0	0
3881	649	"arg_1"	"decimal"	9	0	1	1
3882	649	"arg_2"	"decimal"	9	0	1	2
3883	650	"res_0"	"decimal"	9	0	0	0
3884	650	"arg_1"	"decimal"	19	0	1	1
3885	650	"arg_2"	"decimal"	9	0	1	2
3886	651	"res_0"	"decimal"	9	0	0	0
3887	651	"arg_1"	"real"	24	0	1	1
3888	651	"arg_2"	"decimal"	9	0	1	2
3889	652	"res_0"	"decimal"	9	0	0	0
3890	652	"arg_1"	"double"	53	0	1	1
3891	652	"arg_2"	"decimal"	9	0	1	2
3892	653	"res_0"	"decimal"	9	0	0	0
3893	653	"arg_1"	"month_interval"	32	0	1	1
3894	653	"arg_2"	"decimal"	9	0	1	2
3895	654	"res_0"	"decimal"	9	0	0	0
3896	654	"arg_1"	"sec_interval"	19	0	1	1
3897	654	"arg_2"	"decimal"	9	0	1	2
3898	655	"res_0"	"decimal"	9	0	0	0
3899	655	"arg_1"	"time"	7	0	1	1
3900	655	"arg_2"	"decimal"	9	0	1	2
3901	656	"res_0"	"decimal"	9	0	0	0
3902	656	"arg_1"	"timetz"	7	0	1	1
3903	656	"arg_2"	"decimal"	9	0	1	2
3904	657	"res_0"	"decimal"	9	0	0	0
3905	657	"arg_1"	"date"	0	0	1	1
3906	657	"arg_2"	"decimal"	9	0	1	2
3907	658	"res_0"	"decimal"	9	0	0	0
3908	658	"arg_1"	"timestamp"	7	0	1	1
3909	658	"arg_2"	"decimal"	9	0	1	2
3910	659	"res_0"	"decimal"	9	0	0	0
3911	659	"arg_1"	"timestamptz"	7	0	1	1
3912	659	"arg_2"	"decimal"	9	0	1	2
3913	660	"res_0"	"decimal"	9	0	0	0
3914	660	"arg_1"	"blob"	0	0	1	1
3915	660	"arg_2"	"decimal"	9	0	1	2
3916	661	"res_0"	"decimal"	9	0	0	0
3917	661	"arg_1"	"geometry"	0	0	1	1
3918	661	"arg_2"	"decimal"	9	0	1	2
3919	662	"res_0"	"decimal"	9	0	0	0
3920	662	"arg_1"	"geometrya"	0	0	1	1
3921	662	"arg_2"	"decimal"	9	0	1	2
3922	663	"res_0"	"decimal"	9	0	0	0
3923	663	"arg_1"	"mbr"	0	0	1	1
3924	663	"arg_2"	"decimal"	9	0	1	2
3925	664	"res_0"	"decimal"	19	0	0	0
3926	664	"arg_1"	"oid"	63	0	1	1
3927	664	"arg_2"	"decimal"	19	0	1	2
3928	665	"res_0"	"decimal"	19	0	0	0
3929	665	"arg_1"	"tinyint"	8	0	1	1
3930	665	"arg_2"	"decimal"	19	0	1	2
3931	666	"res_0"	"decimal"	19	0	0	0
3932	666	"arg_1"	"smallint"	16	0	1	1
3933	666	"arg_2"	"decimal"	19	0	1	2
3934	667	"res_0"	"decimal"	19	0	0	0
3935	667	"arg_1"	"int"	32	0	1	1
3936	667	"arg_2"	"decimal"	19	0	1	2
3937	668	"res_0"	"decimal"	19	0	0	0
3938	668	"arg_1"	"bigint"	64	0	1	1
3939	668	"arg_2"	"decimal"	19	0	1	2
3940	669	"res_0"	"decimal"	19	0	0	0
3941	669	"arg_1"	"wrd"	64	0	1	1
3942	669	"arg_2"	"decimal"	19	0	1	2
3943	670	"res_0"	"decimal"	19	0	0	0
3944	670	"arg_1"	"decimal"	2	0	1	1
3945	670	"arg_2"	"decimal"	19	0	1	2
3946	671	"res_0"	"decimal"	19	0	0	0
3947	671	"arg_1"	"decimal"	4	0	1	1
3948	671	"arg_2"	"decimal"	19	0	1	2
3949	672	"res_0"	"decimal"	19	0	0	0
3950	672	"arg_1"	"decimal"	9	0	1	1
3951	672	"arg_2"	"decimal"	19	0	1	2
3952	673	"res_0"	"decimal"	19	0	0	0
3953	673	"arg_1"	"decimal"	19	0	1	1
3954	673	"arg_2"	"decimal"	19	0	1	2
3955	674	"res_0"	"decimal"	19	0	0	0
3956	674	"arg_1"	"real"	24	0	1	1
3957	674	"arg_2"	"decimal"	19	0	1	2
3958	675	"res_0"	"decimal"	19	0	0	0
3959	675	"arg_1"	"double"	53	0	1	1
3960	675	"arg_2"	"decimal"	19	0	1	2
3961	676	"res_0"	"decimal"	19	0	0	0
3962	676	"arg_1"	"month_interval"	32	0	1	1
3963	676	"arg_2"	"decimal"	19	0	1	2
3964	677	"res_0"	"decimal"	19	0	0	0
3965	677	"arg_1"	"sec_interval"	19	0	1	1
3966	677	"arg_2"	"decimal"	19	0	1	2
3967	678	"res_0"	"decimal"	19	0	0	0
3968	678	"arg_1"	"time"	7	0	1	1
3969	678	"arg_2"	"decimal"	19	0	1	2
3970	679	"res_0"	"decimal"	19	0	0	0
3971	679	"arg_1"	"timetz"	7	0	1	1
3972	679	"arg_2"	"decimal"	19	0	1	2
3973	680	"res_0"	"decimal"	19	0	0	0
3974	680	"arg_1"	"date"	0	0	1	1
3975	680	"arg_2"	"decimal"	19	0	1	2
3976	681	"res_0"	"decimal"	19	0	0	0
3977	681	"arg_1"	"timestamp"	7	0	1	1
3978	681	"arg_2"	"decimal"	19	0	1	2
3979	682	"res_0"	"decimal"	19	0	0	0
3980	682	"arg_1"	"timestamptz"	7	0	1	1
3981	682	"arg_2"	"decimal"	19	0	1	2
3982	683	"res_0"	"decimal"	19	0	0	0
3983	683	"arg_1"	"blob"	0	0	1	1
3984	683	"arg_2"	"decimal"	19	0	1	2
3985	684	"res_0"	"decimal"	19	0	0	0
3986	684	"arg_1"	"geometry"	0	0	1	1
3987	684	"arg_2"	"decimal"	19	0	1	2
3988	685	"res_0"	"decimal"	19	0	0	0
3989	685	"arg_1"	"geometrya"	0	0	1	1
3990	685	"arg_2"	"decimal"	19	0	1	2
3991	686	"res_0"	"decimal"	19	0	0	0
3992	686	"arg_1"	"mbr"	0	0	1	1
3993	686	"arg_2"	"decimal"	19	0	1	2
3994	687	"res_0"	"real"	24	0	0	0
3995	687	"arg_1"	"oid"	63	0	1	1
3996	687	"arg_2"	"real"	24	0	1	2
3997	688	"res_0"	"real"	24	0	0	0
3998	688	"arg_1"	"tinyint"	8	0	1	1
3999	688	"arg_2"	"real"	24	0	1	2
4000	689	"res_0"	"real"	24	0	0	0
4001	689	"arg_1"	"smallint"	16	0	1	1
4002	689	"arg_2"	"real"	24	0	1	2
4003	690	"res_0"	"real"	24	0	0	0
4004	690	"arg_1"	"int"	32	0	1	1
4005	690	"arg_2"	"real"	24	0	1	2
4006	691	"res_0"	"real"	24	0	0	0
4007	691	"arg_1"	"bigint"	64	0	1	1
4008	691	"arg_2"	"real"	24	0	1	2
4009	692	"res_0"	"real"	24	0	0	0
4010	692	"arg_1"	"wrd"	64	0	1	1
4011	692	"arg_2"	"real"	24	0	1	2
4012	693	"res_0"	"real"	24	0	0	0
4013	693	"arg_1"	"decimal"	2	0	1	1
4014	693	"arg_2"	"real"	24	0	1	2
4015	694	"res_0"	"real"	24	0	0	0
4016	694	"arg_1"	"decimal"	4	0	1	1
4017	694	"arg_2"	"real"	24	0	1	2
4018	695	"res_0"	"real"	24	0	0	0
4019	695	"arg_1"	"decimal"	9	0	1	1
4020	695	"arg_2"	"real"	24	0	1	2
4021	696	"res_0"	"real"	24	0	0	0
4022	696	"arg_1"	"decimal"	19	0	1	1
4023	696	"arg_2"	"real"	24	0	1	2
4024	697	"res_0"	"real"	24	0	0	0
4025	697	"arg_1"	"real"	24	0	1	1
4026	697	"arg_2"	"real"	24	0	1	2
4027	698	"res_0"	"real"	24	0	0	0
4028	698	"arg_1"	"double"	53	0	1	1
4029	698	"arg_2"	"real"	24	0	1	2
4030	699	"res_0"	"real"	24	0	0	0
4031	699	"arg_1"	"month_interval"	32	0	1	1
4032	699	"arg_2"	"real"	24	0	1	2
4033	700	"res_0"	"real"	24	0	0	0
4034	700	"arg_1"	"sec_interval"	19	0	1	1
4035	700	"arg_2"	"real"	24	0	1	2
4036	701	"res_0"	"real"	24	0	0	0
4037	701	"arg_1"	"time"	7	0	1	1
4038	701	"arg_2"	"real"	24	0	1	2
4039	702	"res_0"	"real"	24	0	0	0
4040	702	"arg_1"	"timetz"	7	0	1	1
4041	702	"arg_2"	"real"	24	0	1	2
4042	703	"res_0"	"real"	24	0	0	0
4043	703	"arg_1"	"date"	0	0	1	1
4044	703	"arg_2"	"real"	24	0	1	2
4045	704	"res_0"	"real"	24	0	0	0
4046	704	"arg_1"	"timestamp"	7	0	1	1
4047	704	"arg_2"	"real"	24	0	1	2
4048	705	"res_0"	"real"	24	0	0	0
4049	705	"arg_1"	"timestamptz"	7	0	1	1
4050	705	"arg_2"	"real"	24	0	1	2
4051	706	"res_0"	"real"	24	0	0	0
4052	706	"arg_1"	"blob"	0	0	1	1
4053	706	"arg_2"	"real"	24	0	1	2
4054	707	"res_0"	"real"	24	0	0	0
4055	707	"arg_1"	"geometry"	0	0	1	1
4056	707	"arg_2"	"real"	24	0	1	2
4057	708	"res_0"	"real"	24	0	0	0
4058	708	"arg_1"	"geometrya"	0	0	1	1
4059	708	"arg_2"	"real"	24	0	1	2
4060	709	"res_0"	"real"	24	0	0	0
4061	709	"arg_1"	"mbr"	0	0	1	1
4062	709	"arg_2"	"real"	24	0	1	2
4063	710	"res_0"	"double"	53	0	0	0
4064	710	"arg_1"	"oid"	63	0	1	1
4065	710	"arg_2"	"double"	53	0	1	2
4066	711	"res_0"	"double"	53	0	0	0
4067	711	"arg_1"	"tinyint"	8	0	1	1
4068	711	"arg_2"	"double"	53	0	1	2
4069	712	"res_0"	"double"	53	0	0	0
4070	712	"arg_1"	"smallint"	16	0	1	1
4071	712	"arg_2"	"double"	53	0	1	2
4072	713	"res_0"	"double"	53	0	0	0
4073	713	"arg_1"	"int"	32	0	1	1
4074	713	"arg_2"	"double"	53	0	1	2
4075	714	"res_0"	"double"	53	0	0	0
4076	714	"arg_1"	"bigint"	64	0	1	1
4077	714	"arg_2"	"double"	53	0	1	2
4078	715	"res_0"	"double"	53	0	0	0
4079	715	"arg_1"	"wrd"	64	0	1	1
4080	715	"arg_2"	"double"	53	0	1	2
4081	716	"res_0"	"double"	53	0	0	0
4082	716	"arg_1"	"decimal"	2	0	1	1
4083	716	"arg_2"	"double"	53	0	1	2
4084	717	"res_0"	"double"	53	0	0	0
4085	717	"arg_1"	"decimal"	4	0	1	1
4086	717	"arg_2"	"double"	53	0	1	2
4087	718	"res_0"	"double"	53	0	0	0
4088	718	"arg_1"	"decimal"	9	0	1	1
4089	718	"arg_2"	"double"	53	0	1	2
4090	719	"res_0"	"double"	53	0	0	0
4091	719	"arg_1"	"decimal"	19	0	1	1
4092	719	"arg_2"	"double"	53	0	1	2
4093	720	"res_0"	"double"	53	0	0	0
4094	720	"arg_1"	"real"	24	0	1	1
4095	720	"arg_2"	"double"	53	0	1	2
4096	721	"res_0"	"double"	53	0	0	0
4097	721	"arg_1"	"double"	53	0	1	1
4098	721	"arg_2"	"double"	53	0	1	2
4099	722	"res_0"	"double"	53	0	0	0
4100	722	"arg_1"	"month_interval"	32	0	1	1
4101	722	"arg_2"	"double"	53	0	1	2
4102	723	"res_0"	"double"	53	0	0	0
4103	723	"arg_1"	"sec_interval"	19	0	1	1
4104	723	"arg_2"	"double"	53	0	1	2
4105	724	"res_0"	"double"	53	0	0	0
4106	724	"arg_1"	"time"	7	0	1	1
4107	724	"arg_2"	"double"	53	0	1	2
4108	725	"res_0"	"double"	53	0	0	0
4109	725	"arg_1"	"timetz"	7	0	1	1
4110	725	"arg_2"	"double"	53	0	1	2
4111	726	"res_0"	"double"	53	0	0	0
4112	726	"arg_1"	"date"	0	0	1	1
4113	726	"arg_2"	"double"	53	0	1	2
4114	727	"res_0"	"double"	53	0	0	0
4115	727	"arg_1"	"timestamp"	7	0	1	1
4116	727	"arg_2"	"double"	53	0	1	2
4117	728	"res_0"	"double"	53	0	0	0
4118	728	"arg_1"	"timestamptz"	7	0	1	1
4119	728	"arg_2"	"double"	53	0	1	2
4120	729	"res_0"	"double"	53	0	0	0
4121	729	"arg_1"	"blob"	0	0	1	1
4122	729	"arg_2"	"double"	53	0	1	2
4123	730	"res_0"	"double"	53	0	0	0
4124	730	"arg_1"	"geometry"	0	0	1	1
4125	730	"arg_2"	"double"	53	0	1	2
4126	731	"res_0"	"double"	53	0	0	0
4127	731	"arg_1"	"geometrya"	0	0	1	1
4128	731	"arg_2"	"double"	53	0	1	2
4129	732	"res_0"	"double"	53	0	0	0
4130	732	"arg_1"	"mbr"	0	0	1	1
4131	732	"arg_2"	"double"	53	0	1	2
4132	733	"res_0"	"month_interval"	32	0	0	0
4133	733	"arg_1"	"oid"	63	0	1	1
4134	733	"arg_2"	"month_interval"	32	0	1	2
4135	734	"res_0"	"month_interval"	32	0	0	0
4136	734	"arg_1"	"tinyint"	8	0	1	1
4137	734	"arg_2"	"month_interval"	32	0	1	2
4138	735	"res_0"	"month_interval"	32	0	0	0
4139	735	"arg_1"	"smallint"	16	0	1	1
4140	735	"arg_2"	"month_interval"	32	0	1	2
4141	736	"res_0"	"month_interval"	32	0	0	0
4142	736	"arg_1"	"int"	32	0	1	1
4143	736	"arg_2"	"month_interval"	32	0	1	2
4144	737	"res_0"	"month_interval"	32	0	0	0
4145	737	"arg_1"	"bigint"	64	0	1	1
4146	737	"arg_2"	"month_interval"	32	0	1	2
4147	738	"res_0"	"month_interval"	32	0	0	0
4148	738	"arg_1"	"wrd"	64	0	1	1
4149	738	"arg_2"	"month_interval"	32	0	1	2
4150	739	"res_0"	"month_interval"	32	0	0	0
4151	739	"arg_1"	"decimal"	2	0	1	1
4152	739	"arg_2"	"month_interval"	32	0	1	2
4153	740	"res_0"	"month_interval"	32	0	0	0
4154	740	"arg_1"	"decimal"	4	0	1	1
4155	740	"arg_2"	"month_interval"	32	0	1	2
4156	741	"res_0"	"month_interval"	32	0	0	0
4157	741	"arg_1"	"decimal"	9	0	1	1
4158	741	"arg_2"	"month_interval"	32	0	1	2
4159	742	"res_0"	"month_interval"	32	0	0	0
4160	742	"arg_1"	"decimal"	19	0	1	1
4161	742	"arg_2"	"month_interval"	32	0	1	2
4162	743	"res_0"	"month_interval"	32	0	0	0
4163	743	"arg_1"	"real"	24	0	1	1
4164	743	"arg_2"	"month_interval"	32	0	1	2
4165	744	"res_0"	"month_interval"	32	0	0	0
4166	744	"arg_1"	"double"	53	0	1	1
4167	744	"arg_2"	"month_interval"	32	0	1	2
4168	745	"res_0"	"month_interval"	32	0	0	0
4169	745	"arg_1"	"month_interval"	32	0	1	1
4170	745	"arg_2"	"month_interval"	32	0	1	2
4171	746	"res_0"	"month_interval"	32	0	0	0
4172	746	"arg_1"	"sec_interval"	19	0	1	1
4173	746	"arg_2"	"month_interval"	32	0	1	2
4174	747	"res_0"	"month_interval"	32	0	0	0
4175	747	"arg_1"	"time"	7	0	1	1
4176	747	"arg_2"	"month_interval"	32	0	1	2
4177	748	"res_0"	"month_interval"	32	0	0	0
4178	748	"arg_1"	"timetz"	7	0	1	1
4179	748	"arg_2"	"month_interval"	32	0	1	2
4180	749	"res_0"	"month_interval"	32	0	0	0
4181	749	"arg_1"	"date"	0	0	1	1
4182	749	"arg_2"	"month_interval"	32	0	1	2
4183	750	"res_0"	"month_interval"	32	0	0	0
4184	750	"arg_1"	"timestamp"	7	0	1	1
4185	750	"arg_2"	"month_interval"	32	0	1	2
4186	751	"res_0"	"month_interval"	32	0	0	0
4187	751	"arg_1"	"timestamptz"	7	0	1	1
4188	751	"arg_2"	"month_interval"	32	0	1	2
4189	752	"res_0"	"month_interval"	32	0	0	0
4190	752	"arg_1"	"blob"	0	0	1	1
4191	752	"arg_2"	"month_interval"	32	0	1	2
4192	753	"res_0"	"month_interval"	32	0	0	0
4193	753	"arg_1"	"geometry"	0	0	1	1
4194	753	"arg_2"	"month_interval"	32	0	1	2
4195	754	"res_0"	"month_interval"	32	0	0	0
4196	754	"arg_1"	"geometrya"	0	0	1	1
4197	754	"arg_2"	"month_interval"	32	0	1	2
4198	755	"res_0"	"month_interval"	32	0	0	0
4199	755	"arg_1"	"mbr"	0	0	1	1
4200	755	"arg_2"	"month_interval"	32	0	1	2
4201	756	"res_0"	"sec_interval"	19	0	0	0
4202	756	"arg_1"	"oid"	63	0	1	1
4203	756	"arg_2"	"sec_interval"	19	0	1	2
4204	757	"res_0"	"sec_interval"	19	0	0	0
4205	757	"arg_1"	"tinyint"	8	0	1	1
4206	757	"arg_2"	"sec_interval"	19	0	1	2
4207	758	"res_0"	"sec_interval"	19	0	0	0
4208	758	"arg_1"	"smallint"	16	0	1	1
4209	758	"arg_2"	"sec_interval"	19	0	1	2
4210	759	"res_0"	"sec_interval"	19	0	0	0
4211	759	"arg_1"	"int"	32	0	1	1
4212	759	"arg_2"	"sec_interval"	19	0	1	2
4213	760	"res_0"	"sec_interval"	19	0	0	0
4214	760	"arg_1"	"bigint"	64	0	1	1
4215	760	"arg_2"	"sec_interval"	19	0	1	2
4216	761	"res_0"	"sec_interval"	19	0	0	0
4217	761	"arg_1"	"wrd"	64	0	1	1
4218	761	"arg_2"	"sec_interval"	19	0	1	2
4219	762	"res_0"	"sec_interval"	19	0	0	0
4220	762	"arg_1"	"decimal"	2	0	1	1
4221	762	"arg_2"	"sec_interval"	19	0	1	2
4222	763	"res_0"	"sec_interval"	19	0	0	0
4223	763	"arg_1"	"decimal"	4	0	1	1
4224	763	"arg_2"	"sec_interval"	19	0	1	2
4225	764	"res_0"	"sec_interval"	19	0	0	0
4226	764	"arg_1"	"decimal"	9	0	1	1
4227	764	"arg_2"	"sec_interval"	19	0	1	2
4228	765	"res_0"	"sec_interval"	19	0	0	0
4229	765	"arg_1"	"decimal"	19	0	1	1
4230	765	"arg_2"	"sec_interval"	19	0	1	2
4231	766	"res_0"	"sec_interval"	19	0	0	0
4232	766	"arg_1"	"real"	24	0	1	1
4233	766	"arg_2"	"sec_interval"	19	0	1	2
4234	767	"res_0"	"sec_interval"	19	0	0	0
4235	767	"arg_1"	"double"	53	0	1	1
4236	767	"arg_2"	"sec_interval"	19	0	1	2
4237	768	"res_0"	"sec_interval"	19	0	0	0
4238	768	"arg_1"	"month_interval"	32	0	1	1
4239	768	"arg_2"	"sec_interval"	19	0	1	2
4240	769	"res_0"	"sec_interval"	19	0	0	0
4241	769	"arg_1"	"sec_interval"	19	0	1	1
4242	769	"arg_2"	"sec_interval"	19	0	1	2
4243	770	"res_0"	"sec_interval"	19	0	0	0
4244	770	"arg_1"	"time"	7	0	1	1
4245	770	"arg_2"	"sec_interval"	19	0	1	2
4246	771	"res_0"	"sec_interval"	19	0	0	0
4247	771	"arg_1"	"timetz"	7	0	1	1
4248	771	"arg_2"	"sec_interval"	19	0	1	2
4249	772	"res_0"	"sec_interval"	19	0	0	0
4250	772	"arg_1"	"date"	0	0	1	1
4251	772	"arg_2"	"sec_interval"	19	0	1	2
4252	773	"res_0"	"sec_interval"	19	0	0	0
4253	773	"arg_1"	"timestamp"	7	0	1	1
4254	773	"arg_2"	"sec_interval"	19	0	1	2
4255	774	"res_0"	"sec_interval"	19	0	0	0
4256	774	"arg_1"	"timestamptz"	7	0	1	1
4257	774	"arg_2"	"sec_interval"	19	0	1	2
4258	775	"res_0"	"sec_interval"	19	0	0	0
4259	775	"arg_1"	"blob"	0	0	1	1
4260	775	"arg_2"	"sec_interval"	19	0	1	2
4261	776	"res_0"	"sec_interval"	19	0	0	0
4262	776	"arg_1"	"geometry"	0	0	1	1
4263	776	"arg_2"	"sec_interval"	19	0	1	2
4264	777	"res_0"	"sec_interval"	19	0	0	0
4265	777	"arg_1"	"geometrya"	0	0	1	1
4266	777	"arg_2"	"sec_interval"	19	0	1	2
4267	778	"res_0"	"sec_interval"	19	0	0	0
4268	778	"arg_1"	"mbr"	0	0	1	1
4269	778	"arg_2"	"sec_interval"	19	0	1	2
4270	779	"res_0"	"time"	7	0	0	0
4271	779	"arg_1"	"oid"	63	0	1	1
4272	779	"arg_2"	"time"	7	0	1	2
4273	780	"res_0"	"time"	7	0	0	0
4274	780	"arg_1"	"tinyint"	8	0	1	1
4275	780	"arg_2"	"time"	7	0	1	2
4276	781	"res_0"	"time"	7	0	0	0
4277	781	"arg_1"	"smallint"	16	0	1	1
4278	781	"arg_2"	"time"	7	0	1	2
4279	782	"res_0"	"time"	7	0	0	0
4280	782	"arg_1"	"int"	32	0	1	1
4281	782	"arg_2"	"time"	7	0	1	2
4282	783	"res_0"	"time"	7	0	0	0
4283	783	"arg_1"	"bigint"	64	0	1	1
4284	783	"arg_2"	"time"	7	0	1	2
4285	784	"res_0"	"time"	7	0	0	0
4286	784	"arg_1"	"wrd"	64	0	1	1
4287	784	"arg_2"	"time"	7	0	1	2
4288	785	"res_0"	"time"	7	0	0	0
4289	785	"arg_1"	"decimal"	2	0	1	1
4290	785	"arg_2"	"time"	7	0	1	2
4291	786	"res_0"	"time"	7	0	0	0
4292	786	"arg_1"	"decimal"	4	0	1	1
4293	786	"arg_2"	"time"	7	0	1	2
4294	787	"res_0"	"time"	7	0	0	0
4295	787	"arg_1"	"decimal"	9	0	1	1
4296	787	"arg_2"	"time"	7	0	1	2
4297	788	"res_0"	"time"	7	0	0	0
4298	788	"arg_1"	"decimal"	19	0	1	1
4299	788	"arg_2"	"time"	7	0	1	2
4300	789	"res_0"	"time"	7	0	0	0
4301	789	"arg_1"	"real"	24	0	1	1
4302	789	"arg_2"	"time"	7	0	1	2
4303	790	"res_0"	"time"	7	0	0	0
4304	790	"arg_1"	"double"	53	0	1	1
4305	790	"arg_2"	"time"	7	0	1	2
4306	791	"res_0"	"time"	7	0	0	0
4307	791	"arg_1"	"month_interval"	32	0	1	1
4308	791	"arg_2"	"time"	7	0	1	2
4309	792	"res_0"	"time"	7	0	0	0
4310	792	"arg_1"	"sec_interval"	19	0	1	1
4311	792	"arg_2"	"time"	7	0	1	2
4312	793	"res_0"	"time"	7	0	0	0
4313	793	"arg_1"	"time"	7	0	1	1
4314	793	"arg_2"	"time"	7	0	1	2
4315	794	"res_0"	"time"	7	0	0	0
4316	794	"arg_1"	"timetz"	7	0	1	1
4317	794	"arg_2"	"time"	7	0	1	2
4318	795	"res_0"	"time"	7	0	0	0
4319	795	"arg_1"	"date"	0	0	1	1
4320	795	"arg_2"	"time"	7	0	1	2
4321	796	"res_0"	"time"	7	0	0	0
4322	796	"arg_1"	"timestamp"	7	0	1	1
4323	796	"arg_2"	"time"	7	0	1	2
4324	797	"res_0"	"time"	7	0	0	0
4325	797	"arg_1"	"timestamptz"	7	0	1	1
4326	797	"arg_2"	"time"	7	0	1	2
4327	798	"res_0"	"time"	7	0	0	0
4328	798	"arg_1"	"blob"	0	0	1	1
4329	798	"arg_2"	"time"	7	0	1	2
4330	799	"res_0"	"time"	7	0	0	0
4331	799	"arg_1"	"geometry"	0	0	1	1
4332	799	"arg_2"	"time"	7	0	1	2
4333	800	"res_0"	"time"	7	0	0	0
4334	800	"arg_1"	"geometrya"	0	0	1	1
4335	800	"arg_2"	"time"	7	0	1	2
4336	801	"res_0"	"time"	7	0	0	0
4337	801	"arg_1"	"mbr"	0	0	1	1
4338	801	"arg_2"	"time"	7	0	1	2
4339	802	"res_0"	"timetz"	7	0	0	0
4340	802	"arg_1"	"oid"	63	0	1	1
4341	802	"arg_2"	"timetz"	7	0	1	2
4342	803	"res_0"	"timetz"	7	0	0	0
4343	803	"arg_1"	"tinyint"	8	0	1	1
4344	803	"arg_2"	"timetz"	7	0	1	2
4345	804	"res_0"	"timetz"	7	0	0	0
4346	804	"arg_1"	"smallint"	16	0	1	1
4347	804	"arg_2"	"timetz"	7	0	1	2
4348	805	"res_0"	"timetz"	7	0	0	0
4349	805	"arg_1"	"int"	32	0	1	1
4350	805	"arg_2"	"timetz"	7	0	1	2
4351	806	"res_0"	"timetz"	7	0	0	0
4352	806	"arg_1"	"bigint"	64	0	1	1
4353	806	"arg_2"	"timetz"	7	0	1	2
4354	807	"res_0"	"timetz"	7	0	0	0
4355	807	"arg_1"	"wrd"	64	0	1	1
4356	807	"arg_2"	"timetz"	7	0	1	2
4357	808	"res_0"	"timetz"	7	0	0	0
4358	808	"arg_1"	"decimal"	2	0	1	1
4359	808	"arg_2"	"timetz"	7	0	1	2
4360	809	"res_0"	"timetz"	7	0	0	0
4361	809	"arg_1"	"decimal"	4	0	1	1
4362	809	"arg_2"	"timetz"	7	0	1	2
4363	810	"res_0"	"timetz"	7	0	0	0
4364	810	"arg_1"	"decimal"	9	0	1	1
4365	810	"arg_2"	"timetz"	7	0	1	2
4366	811	"res_0"	"timetz"	7	0	0	0
4367	811	"arg_1"	"decimal"	19	0	1	1
4368	811	"arg_2"	"timetz"	7	0	1	2
4369	812	"res_0"	"timetz"	7	0	0	0
4370	812	"arg_1"	"real"	24	0	1	1
4371	812	"arg_2"	"timetz"	7	0	1	2
4372	813	"res_0"	"timetz"	7	0	0	0
4373	813	"arg_1"	"double"	53	0	1	1
4374	813	"arg_2"	"timetz"	7	0	1	2
4375	814	"res_0"	"timetz"	7	0	0	0
4376	814	"arg_1"	"month_interval"	32	0	1	1
4377	814	"arg_2"	"timetz"	7	0	1	2
4378	815	"res_0"	"timetz"	7	0	0	0
4379	815	"arg_1"	"sec_interval"	19	0	1	1
4380	815	"arg_2"	"timetz"	7	0	1	2
4381	816	"res_0"	"timetz"	7	0	0	0
4382	816	"arg_1"	"time"	7	0	1	1
4383	816	"arg_2"	"timetz"	7	0	1	2
4384	817	"res_0"	"timetz"	7	0	0	0
4385	817	"arg_1"	"timetz"	7	0	1	1
4386	817	"arg_2"	"timetz"	7	0	1	2
4387	818	"res_0"	"timetz"	7	0	0	0
4388	818	"arg_1"	"date"	0	0	1	1
4389	818	"arg_2"	"timetz"	7	0	1	2
4390	819	"res_0"	"timetz"	7	0	0	0
4391	819	"arg_1"	"timestamp"	7	0	1	1
4392	819	"arg_2"	"timetz"	7	0	1	2
4393	820	"res_0"	"timetz"	7	0	0	0
4394	820	"arg_1"	"timestamptz"	7	0	1	1
4395	820	"arg_2"	"timetz"	7	0	1	2
4396	821	"res_0"	"timetz"	7	0	0	0
4397	821	"arg_1"	"blob"	0	0	1	1
4398	821	"arg_2"	"timetz"	7	0	1	2
4399	822	"res_0"	"timetz"	7	0	0	0
4400	822	"arg_1"	"geometry"	0	0	1	1
4401	822	"arg_2"	"timetz"	7	0	1	2
4402	823	"res_0"	"timetz"	7	0	0	0
4403	823	"arg_1"	"geometrya"	0	0	1	1
4404	823	"arg_2"	"timetz"	7	0	1	2
4405	824	"res_0"	"timetz"	7	0	0	0
4406	824	"arg_1"	"mbr"	0	0	1	1
4407	824	"arg_2"	"timetz"	7	0	1	2
4408	825	"res_0"	"date"	0	0	0	0
4409	825	"arg_1"	"oid"	63	0	1	1
4410	825	"arg_2"	"date"	0	0	1	2
4411	826	"res_0"	"date"	0	0	0	0
4412	826	"arg_1"	"tinyint"	8	0	1	1
4413	826	"arg_2"	"date"	0	0	1	2
4414	827	"res_0"	"date"	0	0	0	0
4415	827	"arg_1"	"smallint"	16	0	1	1
4416	827	"arg_2"	"date"	0	0	1	2
4417	828	"res_0"	"date"	0	0	0	0
4418	828	"arg_1"	"int"	32	0	1	1
4419	828	"arg_2"	"date"	0	0	1	2
4420	829	"res_0"	"date"	0	0	0	0
4421	829	"arg_1"	"bigint"	64	0	1	1
4422	829	"arg_2"	"date"	0	0	1	2
4423	830	"res_0"	"date"	0	0	0	0
4424	830	"arg_1"	"wrd"	64	0	1	1
4425	830	"arg_2"	"date"	0	0	1	2
4426	831	"res_0"	"date"	0	0	0	0
4427	831	"arg_1"	"decimal"	2	0	1	1
4428	831	"arg_2"	"date"	0	0	1	2
4429	832	"res_0"	"date"	0	0	0	0
4430	832	"arg_1"	"decimal"	4	0	1	1
4431	832	"arg_2"	"date"	0	0	1	2
4432	833	"res_0"	"date"	0	0	0	0
4433	833	"arg_1"	"decimal"	9	0	1	1
4434	833	"arg_2"	"date"	0	0	1	2
4435	834	"res_0"	"date"	0	0	0	0
4436	834	"arg_1"	"decimal"	19	0	1	1
4437	834	"arg_2"	"date"	0	0	1	2
4438	835	"res_0"	"date"	0	0	0	0
4439	835	"arg_1"	"real"	24	0	1	1
4440	835	"arg_2"	"date"	0	0	1	2
4441	836	"res_0"	"date"	0	0	0	0
4442	836	"arg_1"	"double"	53	0	1	1
4443	836	"arg_2"	"date"	0	0	1	2
4444	837	"res_0"	"date"	0	0	0	0
4445	837	"arg_1"	"month_interval"	32	0	1	1
4446	837	"arg_2"	"date"	0	0	1	2
4447	838	"res_0"	"date"	0	0	0	0
4448	838	"arg_1"	"sec_interval"	19	0	1	1
4449	838	"arg_2"	"date"	0	0	1	2
4450	839	"res_0"	"date"	0	0	0	0
4451	839	"arg_1"	"time"	7	0	1	1
4452	839	"arg_2"	"date"	0	0	1	2
4453	840	"res_0"	"date"	0	0	0	0
4454	840	"arg_1"	"timetz"	7	0	1	1
4455	840	"arg_2"	"date"	0	0	1	2
4456	841	"res_0"	"date"	0	0	0	0
4457	841	"arg_1"	"date"	0	0	1	1
4458	841	"arg_2"	"date"	0	0	1	2
4459	842	"res_0"	"date"	0	0	0	0
4460	842	"arg_1"	"timestamp"	7	0	1	1
4461	842	"arg_2"	"date"	0	0	1	2
4462	843	"res_0"	"date"	0	0	0	0
4463	843	"arg_1"	"timestamptz"	7	0	1	1
4464	843	"arg_2"	"date"	0	0	1	2
4465	844	"res_0"	"date"	0	0	0	0
4466	844	"arg_1"	"blob"	0	0	1	1
4467	844	"arg_2"	"date"	0	0	1	2
4468	845	"res_0"	"date"	0	0	0	0
4469	845	"arg_1"	"geometry"	0	0	1	1
4470	845	"arg_2"	"date"	0	0	1	2
4471	846	"res_0"	"date"	0	0	0	0
4472	846	"arg_1"	"geometrya"	0	0	1	1
4473	846	"arg_2"	"date"	0	0	1	2
4474	847	"res_0"	"date"	0	0	0	0
4475	847	"arg_1"	"mbr"	0	0	1	1
4476	847	"arg_2"	"date"	0	0	1	2
4477	848	"res_0"	"timestamp"	7	0	0	0
4478	848	"arg_1"	"oid"	63	0	1	1
4479	848	"arg_2"	"timestamp"	7	0	1	2
4480	849	"res_0"	"timestamp"	7	0	0	0
4481	849	"arg_1"	"tinyint"	8	0	1	1
4482	849	"arg_2"	"timestamp"	7	0	1	2
4483	850	"res_0"	"timestamp"	7	0	0	0
4484	850	"arg_1"	"smallint"	16	0	1	1
4485	850	"arg_2"	"timestamp"	7	0	1	2
4486	851	"res_0"	"timestamp"	7	0	0	0
4487	851	"arg_1"	"int"	32	0	1	1
4488	851	"arg_2"	"timestamp"	7	0	1	2
4489	852	"res_0"	"timestamp"	7	0	0	0
4490	852	"arg_1"	"bigint"	64	0	1	1
4491	852	"arg_2"	"timestamp"	7	0	1	2
4492	853	"res_0"	"timestamp"	7	0	0	0
4493	853	"arg_1"	"wrd"	64	0	1	1
4494	853	"arg_2"	"timestamp"	7	0	1	2
4495	854	"res_0"	"timestamp"	7	0	0	0
4496	854	"arg_1"	"decimal"	2	0	1	1
4497	854	"arg_2"	"timestamp"	7	0	1	2
4498	855	"res_0"	"timestamp"	7	0	0	0
4499	855	"arg_1"	"decimal"	4	0	1	1
4500	855	"arg_2"	"timestamp"	7	0	1	2
4501	856	"res_0"	"timestamp"	7	0	0	0
4502	856	"arg_1"	"decimal"	9	0	1	1
4503	856	"arg_2"	"timestamp"	7	0	1	2
4504	857	"res_0"	"timestamp"	7	0	0	0
4505	857	"arg_1"	"decimal"	19	0	1	1
4506	857	"arg_2"	"timestamp"	7	0	1	2
4507	858	"res_0"	"timestamp"	7	0	0	0
4508	858	"arg_1"	"real"	24	0	1	1
4509	858	"arg_2"	"timestamp"	7	0	1	2
4510	859	"res_0"	"timestamp"	7	0	0	0
4511	859	"arg_1"	"double"	53	0	1	1
4512	859	"arg_2"	"timestamp"	7	0	1	2
4513	860	"res_0"	"timestamp"	7	0	0	0
4514	860	"arg_1"	"month_interval"	32	0	1	1
4515	860	"arg_2"	"timestamp"	7	0	1	2
4516	861	"res_0"	"timestamp"	7	0	0	0
4517	861	"arg_1"	"sec_interval"	19	0	1	1
4518	861	"arg_2"	"timestamp"	7	0	1	2
4519	862	"res_0"	"timestamp"	7	0	0	0
4520	862	"arg_1"	"time"	7	0	1	1
4521	862	"arg_2"	"timestamp"	7	0	1	2
4522	863	"res_0"	"timestamp"	7	0	0	0
4523	863	"arg_1"	"timetz"	7	0	1	1
4524	863	"arg_2"	"timestamp"	7	0	1	2
4525	864	"res_0"	"timestamp"	7	0	0	0
4526	864	"arg_1"	"date"	0	0	1	1
4527	864	"arg_2"	"timestamp"	7	0	1	2
4528	865	"res_0"	"timestamp"	7	0	0	0
4529	865	"arg_1"	"timestamp"	7	0	1	1
4530	865	"arg_2"	"timestamp"	7	0	1	2
4531	866	"res_0"	"timestamp"	7	0	0	0
4532	866	"arg_1"	"timestamptz"	7	0	1	1
4533	866	"arg_2"	"timestamp"	7	0	1	2
4534	867	"res_0"	"timestamp"	7	0	0	0
4535	867	"arg_1"	"blob"	0	0	1	1
4536	867	"arg_2"	"timestamp"	7	0	1	2
4537	868	"res_0"	"timestamp"	7	0	0	0
4538	868	"arg_1"	"geometry"	0	0	1	1
4539	868	"arg_2"	"timestamp"	7	0	1	2
4540	869	"res_0"	"timestamp"	7	0	0	0
4541	869	"arg_1"	"geometrya"	0	0	1	1
4542	869	"arg_2"	"timestamp"	7	0	1	2
4543	870	"res_0"	"timestamp"	7	0	0	0
4544	870	"arg_1"	"mbr"	0	0	1	1
4545	870	"arg_2"	"timestamp"	7	0	1	2
4546	871	"res_0"	"timestamptz"	7	0	0	0
4547	871	"arg_1"	"oid"	63	0	1	1
4548	871	"arg_2"	"timestamptz"	7	0	1	2
4549	872	"res_0"	"timestamptz"	7	0	0	0
4550	872	"arg_1"	"tinyint"	8	0	1	1
4551	872	"arg_2"	"timestamptz"	7	0	1	2
4552	873	"res_0"	"timestamptz"	7	0	0	0
4553	873	"arg_1"	"smallint"	16	0	1	1
4554	873	"arg_2"	"timestamptz"	7	0	1	2
4555	874	"res_0"	"timestamptz"	7	0	0	0
4556	874	"arg_1"	"int"	32	0	1	1
4557	874	"arg_2"	"timestamptz"	7	0	1	2
4558	875	"res_0"	"timestamptz"	7	0	0	0
4559	875	"arg_1"	"bigint"	64	0	1	1
4560	875	"arg_2"	"timestamptz"	7	0	1	2
4561	876	"res_0"	"timestamptz"	7	0	0	0
4562	876	"arg_1"	"wrd"	64	0	1	1
4563	876	"arg_2"	"timestamptz"	7	0	1	2
4564	877	"res_0"	"timestamptz"	7	0	0	0
4565	877	"arg_1"	"decimal"	2	0	1	1
4566	877	"arg_2"	"timestamptz"	7	0	1	2
4567	878	"res_0"	"timestamptz"	7	0	0	0
4568	878	"arg_1"	"decimal"	4	0	1	1
4569	878	"arg_2"	"timestamptz"	7	0	1	2
4570	879	"res_0"	"timestamptz"	7	0	0	0
4571	879	"arg_1"	"decimal"	9	0	1	1
4572	879	"arg_2"	"timestamptz"	7	0	1	2
4573	880	"res_0"	"timestamptz"	7	0	0	0
4574	880	"arg_1"	"decimal"	19	0	1	1
4575	880	"arg_2"	"timestamptz"	7	0	1	2
4576	881	"res_0"	"timestamptz"	7	0	0	0
4577	881	"arg_1"	"real"	24	0	1	1
4578	881	"arg_2"	"timestamptz"	7	0	1	2
4579	882	"res_0"	"timestamptz"	7	0	0	0
4580	882	"arg_1"	"double"	53	0	1	1
4581	882	"arg_2"	"timestamptz"	7	0	1	2
4582	883	"res_0"	"timestamptz"	7	0	0	0
4583	883	"arg_1"	"month_interval"	32	0	1	1
4584	883	"arg_2"	"timestamptz"	7	0	1	2
4585	884	"res_0"	"timestamptz"	7	0	0	0
4586	884	"arg_1"	"sec_interval"	19	0	1	1
4587	884	"arg_2"	"timestamptz"	7	0	1	2
4588	885	"res_0"	"timestamptz"	7	0	0	0
4589	885	"arg_1"	"time"	7	0	1	1
4590	885	"arg_2"	"timestamptz"	7	0	1	2
4591	886	"res_0"	"timestamptz"	7	0	0	0
4592	886	"arg_1"	"timetz"	7	0	1	1
4593	886	"arg_2"	"timestamptz"	7	0	1	2
4594	887	"res_0"	"timestamptz"	7	0	0	0
4595	887	"arg_1"	"date"	0	0	1	1
4596	887	"arg_2"	"timestamptz"	7	0	1	2
4597	888	"res_0"	"timestamptz"	7	0	0	0
4598	888	"arg_1"	"timestamp"	7	0	1	1
4599	888	"arg_2"	"timestamptz"	7	0	1	2
4600	889	"res_0"	"timestamptz"	7	0	0	0
4601	889	"arg_1"	"timestamptz"	7	0	1	1
4602	889	"arg_2"	"timestamptz"	7	0	1	2
4603	890	"res_0"	"timestamptz"	7	0	0	0
4604	890	"arg_1"	"blob"	0	0	1	1
4605	890	"arg_2"	"timestamptz"	7	0	1	2
4606	891	"res_0"	"timestamptz"	7	0	0	0
4607	891	"arg_1"	"geometry"	0	0	1	1
4608	891	"arg_2"	"timestamptz"	7	0	1	2
4609	892	"res_0"	"timestamptz"	7	0	0	0
4610	892	"arg_1"	"geometrya"	0	0	1	1
4611	892	"arg_2"	"timestamptz"	7	0	1	2
4612	893	"res_0"	"timestamptz"	7	0	0	0
4613	893	"arg_1"	"mbr"	0	0	1	1
4614	893	"arg_2"	"timestamptz"	7	0	1	2
4615	894	"res_0"	"blob"	0	0	0	0
4616	894	"arg_1"	"oid"	63	0	1	1
4617	894	"arg_2"	"blob"	0	0	1	2
4618	895	"res_0"	"blob"	0	0	0	0
4619	895	"arg_1"	"tinyint"	8	0	1	1
4620	895	"arg_2"	"blob"	0	0	1	2
4621	896	"res_0"	"blob"	0	0	0	0
4622	896	"arg_1"	"smallint"	16	0	1	1
4623	896	"arg_2"	"blob"	0	0	1	2
4624	897	"res_0"	"blob"	0	0	0	0
4625	897	"arg_1"	"int"	32	0	1	1
4626	897	"arg_2"	"blob"	0	0	1	2
4627	898	"res_0"	"blob"	0	0	0	0
4628	898	"arg_1"	"bigint"	64	0	1	1
4629	898	"arg_2"	"blob"	0	0	1	2
4630	899	"res_0"	"blob"	0	0	0	0
4631	899	"arg_1"	"wrd"	64	0	1	1
4632	899	"arg_2"	"blob"	0	0	1	2
4633	900	"res_0"	"blob"	0	0	0	0
4634	900	"arg_1"	"decimal"	2	0	1	1
4635	900	"arg_2"	"blob"	0	0	1	2
4636	901	"res_0"	"blob"	0	0	0	0
4637	901	"arg_1"	"decimal"	4	0	1	1
4638	901	"arg_2"	"blob"	0	0	1	2
4639	902	"res_0"	"blob"	0	0	0	0
4640	902	"arg_1"	"decimal"	9	0	1	1
4641	902	"arg_2"	"blob"	0	0	1	2
4642	903	"res_0"	"blob"	0	0	0	0
4643	903	"arg_1"	"decimal"	19	0	1	1
4644	903	"arg_2"	"blob"	0	0	1	2
4645	904	"res_0"	"blob"	0	0	0	0
4646	904	"arg_1"	"real"	24	0	1	1
4647	904	"arg_2"	"blob"	0	0	1	2
4648	905	"res_0"	"blob"	0	0	0	0
4649	905	"arg_1"	"double"	53	0	1	1
4650	905	"arg_2"	"blob"	0	0	1	2
4651	906	"res_0"	"blob"	0	0	0	0
4652	906	"arg_1"	"month_interval"	32	0	1	1
4653	906	"arg_2"	"blob"	0	0	1	2
4654	907	"res_0"	"blob"	0	0	0	0
4655	907	"arg_1"	"sec_interval"	19	0	1	1
4656	907	"arg_2"	"blob"	0	0	1	2
4657	908	"res_0"	"blob"	0	0	0	0
4658	908	"arg_1"	"time"	7	0	1	1
4659	908	"arg_2"	"blob"	0	0	1	2
4660	909	"res_0"	"blob"	0	0	0	0
4661	909	"arg_1"	"timetz"	7	0	1	1
4662	909	"arg_2"	"blob"	0	0	1	2
4663	910	"res_0"	"blob"	0	0	0	0
4664	910	"arg_1"	"date"	0	0	1	1
4665	910	"arg_2"	"blob"	0	0	1	2
4666	911	"res_0"	"blob"	0	0	0	0
4667	911	"arg_1"	"timestamp"	7	0	1	1
4668	911	"arg_2"	"blob"	0	0	1	2
4669	912	"res_0"	"blob"	0	0	0	0
4670	912	"arg_1"	"timestamptz"	7	0	1	1
4671	912	"arg_2"	"blob"	0	0	1	2
4672	913	"res_0"	"blob"	0	0	0	0
4673	913	"arg_1"	"blob"	0	0	1	1
4674	913	"arg_2"	"blob"	0	0	1	2
4675	914	"res_0"	"blob"	0	0	0	0
4676	914	"arg_1"	"geometry"	0	0	1	1
4677	914	"arg_2"	"blob"	0	0	1	2
4678	915	"res_0"	"blob"	0	0	0	0
4679	915	"arg_1"	"geometrya"	0	0	1	1
4680	915	"arg_2"	"blob"	0	0	1	2
4681	916	"res_0"	"blob"	0	0	0	0
4682	916	"arg_1"	"mbr"	0	0	1	1
4683	916	"arg_2"	"blob"	0	0	1	2
4684	917	"res_0"	"geometry"	0	0	0	0
4685	917	"arg_1"	"oid"	63	0	1	1
4686	917	"arg_2"	"geometry"	0	0	1	2
4687	918	"res_0"	"geometry"	0	0	0	0
4688	918	"arg_1"	"tinyint"	8	0	1	1
4689	918	"arg_2"	"geometry"	0	0	1	2
4690	919	"res_0"	"geometry"	0	0	0	0
4691	919	"arg_1"	"smallint"	16	0	1	1
4692	919	"arg_2"	"geometry"	0	0	1	2
4693	920	"res_0"	"geometry"	0	0	0	0
4694	920	"arg_1"	"int"	32	0	1	1
4695	920	"arg_2"	"geometry"	0	0	1	2
4696	921	"res_0"	"geometry"	0	0	0	0
4697	921	"arg_1"	"bigint"	64	0	1	1
4698	921	"arg_2"	"geometry"	0	0	1	2
4699	922	"res_0"	"geometry"	0	0	0	0
4700	922	"arg_1"	"wrd"	64	0	1	1
4701	922	"arg_2"	"geometry"	0	0	1	2
4702	923	"res_0"	"geometry"	0	0	0	0
4703	923	"arg_1"	"decimal"	2	0	1	1
4704	923	"arg_2"	"geometry"	0	0	1	2
4705	924	"res_0"	"geometry"	0	0	0	0
4706	924	"arg_1"	"decimal"	4	0	1	1
4707	924	"arg_2"	"geometry"	0	0	1	2
4708	925	"res_0"	"geometry"	0	0	0	0
4709	925	"arg_1"	"decimal"	9	0	1	1
4710	925	"arg_2"	"geometry"	0	0	1	2
4711	926	"res_0"	"geometry"	0	0	0	0
4712	926	"arg_1"	"decimal"	19	0	1	1
4713	926	"arg_2"	"geometry"	0	0	1	2
4714	927	"res_0"	"geometry"	0	0	0	0
4715	927	"arg_1"	"real"	24	0	1	1
4716	927	"arg_2"	"geometry"	0	0	1	2
4717	928	"res_0"	"geometry"	0	0	0	0
4718	928	"arg_1"	"double"	53	0	1	1
4719	928	"arg_2"	"geometry"	0	0	1	2
4720	929	"res_0"	"geometry"	0	0	0	0
4721	929	"arg_1"	"month_interval"	32	0	1	1
4722	929	"arg_2"	"geometry"	0	0	1	2
4723	930	"res_0"	"geometry"	0	0	0	0
4724	930	"arg_1"	"sec_interval"	19	0	1	1
4725	930	"arg_2"	"geometry"	0	0	1	2
4726	931	"res_0"	"geometry"	0	0	0	0
4727	931	"arg_1"	"time"	7	0	1	1
4728	931	"arg_2"	"geometry"	0	0	1	2
4729	932	"res_0"	"geometry"	0	0	0	0
4730	932	"arg_1"	"timetz"	7	0	1	1
4731	932	"arg_2"	"geometry"	0	0	1	2
4732	933	"res_0"	"geometry"	0	0	0	0
4733	933	"arg_1"	"date"	0	0	1	1
4734	933	"arg_2"	"geometry"	0	0	1	2
4735	934	"res_0"	"geometry"	0	0	0	0
4736	934	"arg_1"	"timestamp"	7	0	1	1
4737	934	"arg_2"	"geometry"	0	0	1	2
4738	935	"res_0"	"geometry"	0	0	0	0
4739	935	"arg_1"	"timestamptz"	7	0	1	1
4740	935	"arg_2"	"geometry"	0	0	1	2
4741	936	"res_0"	"geometry"	0	0	0	0
4742	936	"arg_1"	"blob"	0	0	1	1
4743	936	"arg_2"	"geometry"	0	0	1	2
4744	937	"res_0"	"geometry"	0	0	0	0
4745	937	"arg_1"	"geometry"	0	0	1	1
4746	937	"arg_2"	"geometry"	0	0	1	2
4747	938	"res_0"	"geometry"	0	0	0	0
4748	938	"arg_1"	"geometrya"	0	0	1	1
4749	938	"arg_2"	"geometry"	0	0	1	2
4750	939	"res_0"	"geometry"	0	0	0	0
4751	939	"arg_1"	"mbr"	0	0	1	1
4752	939	"arg_2"	"geometry"	0	0	1	2
4753	940	"res_0"	"geometrya"	0	0	0	0
4754	940	"arg_1"	"oid"	63	0	1	1
4755	940	"arg_2"	"geometrya"	0	0	1	2
4756	941	"res_0"	"geometrya"	0	0	0	0
4757	941	"arg_1"	"tinyint"	8	0	1	1
4758	941	"arg_2"	"geometrya"	0	0	1	2
4759	942	"res_0"	"geometrya"	0	0	0	0
4760	942	"arg_1"	"smallint"	16	0	1	1
4761	942	"arg_2"	"geometrya"	0	0	1	2
4762	943	"res_0"	"geometrya"	0	0	0	0
4763	943	"arg_1"	"int"	32	0	1	1
4764	943	"arg_2"	"geometrya"	0	0	1	2
4765	944	"res_0"	"geometrya"	0	0	0	0
4766	944	"arg_1"	"bigint"	64	0	1	1
4767	944	"arg_2"	"geometrya"	0	0	1	2
4768	945	"res_0"	"geometrya"	0	0	0	0
4769	945	"arg_1"	"wrd"	64	0	1	1
4770	945	"arg_2"	"geometrya"	0	0	1	2
4771	946	"res_0"	"geometrya"	0	0	0	0
4772	946	"arg_1"	"decimal"	2	0	1	1
4773	946	"arg_2"	"geometrya"	0	0	1	2
4774	947	"res_0"	"geometrya"	0	0	0	0
4775	947	"arg_1"	"decimal"	4	0	1	1
4776	947	"arg_2"	"geometrya"	0	0	1	2
4777	948	"res_0"	"geometrya"	0	0	0	0
4778	948	"arg_1"	"decimal"	9	0	1	1
4779	948	"arg_2"	"geometrya"	0	0	1	2
4780	949	"res_0"	"geometrya"	0	0	0	0
4781	949	"arg_1"	"decimal"	19	0	1	1
4782	949	"arg_2"	"geometrya"	0	0	1	2
4783	950	"res_0"	"geometrya"	0	0	0	0
4784	950	"arg_1"	"real"	24	0	1	1
4785	950	"arg_2"	"geometrya"	0	0	1	2
4786	951	"res_0"	"geometrya"	0	0	0	0
4787	951	"arg_1"	"double"	53	0	1	1
4788	951	"arg_2"	"geometrya"	0	0	1	2
4789	952	"res_0"	"geometrya"	0	0	0	0
4790	952	"arg_1"	"month_interval"	32	0	1	1
4791	952	"arg_2"	"geometrya"	0	0	1	2
4792	953	"res_0"	"geometrya"	0	0	0	0
4793	953	"arg_1"	"sec_interval"	19	0	1	1
4794	953	"arg_2"	"geometrya"	0	0	1	2
4795	954	"res_0"	"geometrya"	0	0	0	0
4796	954	"arg_1"	"time"	7	0	1	1
4797	954	"arg_2"	"geometrya"	0	0	1	2
4798	955	"res_0"	"geometrya"	0	0	0	0
4799	955	"arg_1"	"timetz"	7	0	1	1
4800	955	"arg_2"	"geometrya"	0	0	1	2
4801	956	"res_0"	"geometrya"	0	0	0	0
4802	956	"arg_1"	"date"	0	0	1	1
4803	956	"arg_2"	"geometrya"	0	0	1	2
4804	957	"res_0"	"geometrya"	0	0	0	0
4805	957	"arg_1"	"timestamp"	7	0	1	1
4806	957	"arg_2"	"geometrya"	0	0	1	2
4807	958	"res_0"	"geometrya"	0	0	0	0
4808	958	"arg_1"	"timestamptz"	7	0	1	1
4809	958	"arg_2"	"geometrya"	0	0	1	2
4810	959	"res_0"	"geometrya"	0	0	0	0
4811	959	"arg_1"	"blob"	0	0	1	1
4812	959	"arg_2"	"geometrya"	0	0	1	2
4813	960	"res_0"	"geometrya"	0	0	0	0
4814	960	"arg_1"	"geometry"	0	0	1	1
4815	960	"arg_2"	"geometrya"	0	0	1	2
4816	961	"res_0"	"geometrya"	0	0	0	0
4817	961	"arg_1"	"geometrya"	0	0	1	1
4818	961	"arg_2"	"geometrya"	0	0	1	2
4819	962	"res_0"	"geometrya"	0	0	0	0
4820	962	"arg_1"	"mbr"	0	0	1	1
4821	962	"arg_2"	"geometrya"	0	0	1	2
4822	963	"res_0"	"mbr"	0	0	0	0
4823	963	"arg_1"	"oid"	63	0	1	1
4824	963	"arg_2"	"mbr"	0	0	1	2
4825	964	"res_0"	"mbr"	0	0	0	0
4826	964	"arg_1"	"tinyint"	8	0	1	1
4827	964	"arg_2"	"mbr"	0	0	1	2
4828	965	"res_0"	"mbr"	0	0	0	0
4829	965	"arg_1"	"smallint"	16	0	1	1
4830	965	"arg_2"	"mbr"	0	0	1	2
4831	966	"res_0"	"mbr"	0	0	0	0
4832	966	"arg_1"	"int"	32	0	1	1
4833	966	"arg_2"	"mbr"	0	0	1	2
4834	967	"res_0"	"mbr"	0	0	0	0
4835	967	"arg_1"	"bigint"	64	0	1	1
4836	967	"arg_2"	"mbr"	0	0	1	2
4837	968	"res_0"	"mbr"	0	0	0	0
4838	968	"arg_1"	"wrd"	64	0	1	1
4839	968	"arg_2"	"mbr"	0	0	1	2
4840	969	"res_0"	"mbr"	0	0	0	0
4841	969	"arg_1"	"decimal"	2	0	1	1
4842	969	"arg_2"	"mbr"	0	0	1	2
4843	970	"res_0"	"mbr"	0	0	0	0
4844	970	"arg_1"	"decimal"	4	0	1	1
4845	970	"arg_2"	"mbr"	0	0	1	2
4846	971	"res_0"	"mbr"	0	0	0	0
4847	971	"arg_1"	"decimal"	9	0	1	1
4848	971	"arg_2"	"mbr"	0	0	1	2
4849	972	"res_0"	"mbr"	0	0	0	0
4850	972	"arg_1"	"decimal"	19	0	1	1
4851	972	"arg_2"	"mbr"	0	0	1	2
4852	973	"res_0"	"mbr"	0	0	0	0
4853	973	"arg_1"	"real"	24	0	1	1
4854	973	"arg_2"	"mbr"	0	0	1	2
4855	974	"res_0"	"mbr"	0	0	0	0
4856	974	"arg_1"	"double"	53	0	1	1
4857	974	"arg_2"	"mbr"	0	0	1	2
4858	975	"res_0"	"mbr"	0	0	0	0
4859	975	"arg_1"	"month_interval"	32	0	1	1
4860	975	"arg_2"	"mbr"	0	0	1	2
4861	976	"res_0"	"mbr"	0	0	0	0
4862	976	"arg_1"	"sec_interval"	19	0	1	1
4863	976	"arg_2"	"mbr"	0	0	1	2
4864	977	"res_0"	"mbr"	0	0	0	0
4865	977	"arg_1"	"time"	7	0	1	1
4866	977	"arg_2"	"mbr"	0	0	1	2
4867	978	"res_0"	"mbr"	0	0	0	0
4868	978	"arg_1"	"timetz"	7	0	1	1
4869	978	"arg_2"	"mbr"	0	0	1	2
4870	979	"res_0"	"mbr"	0	0	0	0
4871	979	"arg_1"	"date"	0	0	1	1
4872	979	"arg_2"	"mbr"	0	0	1	2
4873	980	"res_0"	"mbr"	0	0	0	0
4874	980	"arg_1"	"timestamp"	7	0	1	1
4875	980	"arg_2"	"mbr"	0	0	1	2
4876	981	"res_0"	"mbr"	0	0	0	0
4877	981	"arg_1"	"timestamptz"	7	0	1	1
4878	981	"arg_2"	"mbr"	0	0	1	2
4879	982	"res_0"	"mbr"	0	0	0	0
4880	982	"arg_1"	"blob"	0	0	1	1
4881	982	"arg_2"	"mbr"	0	0	1	2
4882	983	"res_0"	"mbr"	0	0	0	0
4883	983	"arg_1"	"geometry"	0	0	1	1
4884	983	"arg_2"	"mbr"	0	0	1	2
4885	984	"res_0"	"mbr"	0	0	0	0
4886	984	"arg_1"	"geometrya"	0	0	1	1
4887	984	"arg_2"	"mbr"	0	0	1	2
4888	985	"res_0"	"mbr"	0	0	0	0
4889	985	"arg_1"	"mbr"	0	0	1	1
4890	985	"arg_2"	"mbr"	0	0	1	2
4891	986	"res_0"	"real"	24	0	0	0
4892	986	"arg_1"	"real"	24	0	1	1
4893	986	"arg_2"	"real"	24	0	1	2
4894	987	"res_0"	"real"	24	0	0	0
4895	987	"arg_1"	"real"	24	0	1	1
4896	988	"res_0"	"real"	24	0	0	0
4897	988	"arg_1"	"real"	24	0	1	1
4898	989	"res_0"	"real"	24	0	0	0
4899	989	"arg_1"	"real"	24	0	1	1
4900	990	"res_0"	"real"	24	0	0	0
4901	990	"arg_1"	"real"	24	0	1	1
4902	991	"res_0"	"real"	24	0	0	0
4903	991	"arg_1"	"real"	24	0	1	1
4904	992	"res_0"	"real"	24	0	0	0
4905	992	"arg_1"	"real"	24	0	1	1
4906	993	"res_0"	"real"	24	0	0	0
4907	993	"arg_1"	"real"	24	0	1	1
4908	994	"res_0"	"real"	24	0	0	0
4909	994	"arg_1"	"real"	24	0	1	1
4910	995	"res_0"	"real"	24	0	0	0
4911	995	"arg_1"	"real"	24	0	1	1
4912	996	"res_0"	"real"	24	0	0	0
4913	996	"arg_1"	"real"	24	0	1	1
4914	996	"arg_2"	"real"	24	0	1	2
4915	997	"res_0"	"real"	24	0	0	0
4916	997	"arg_1"	"real"	24	0	1	1
4917	998	"res_0"	"real"	24	0	0	0
4918	998	"arg_1"	"real"	24	0	1	1
4919	999	"res_0"	"real"	24	0	0	0
4920	999	"arg_1"	"real"	24	0	1	1
4921	1000	"res_0"	"real"	24	0	0	0
4922	1000	"arg_1"	"real"	24	0	1	1
4923	1001	"res_0"	"real"	24	0	0	0
4924	1001	"arg_1"	"real"	24	0	1	1
4925	1002	"res_0"	"real"	24	0	0	0
4926	1002	"arg_1"	"real"	24	0	1	1
4927	1003	"res_0"	"real"	24	0	0	0
4928	1003	"arg_1"	"real"	24	0	1	1
4929	1004	"res_0"	"real"	24	0	0	0
4930	1004	"arg_1"	"real"	24	0	1	1
4931	1005	"res_0"	"double"	53	0	0	0
4932	1005	"arg_1"	"double"	53	0	1	1
4933	1005	"arg_2"	"double"	53	0	1	2
4934	1006	"res_0"	"double"	53	0	0	0
4935	1006	"arg_1"	"double"	53	0	1	1
4936	1007	"res_0"	"double"	53	0	0	0
4937	1007	"arg_1"	"double"	53	0	1	1
4938	1008	"res_0"	"double"	53	0	0	0
4939	1008	"arg_1"	"double"	53	0	1	1
4940	1009	"res_0"	"double"	53	0	0	0
4941	1009	"arg_1"	"double"	53	0	1	1
4942	1010	"res_0"	"double"	53	0	0	0
4943	1010	"arg_1"	"double"	53	0	1	1
4944	1011	"res_0"	"double"	53	0	0	0
4945	1011	"arg_1"	"double"	53	0	1	1
4946	1012	"res_0"	"double"	53	0	0	0
4947	1012	"arg_1"	"double"	53	0	1	1
4948	1013	"res_0"	"double"	53	0	0	0
4949	1013	"arg_1"	"double"	53	0	1	1
4950	1014	"res_0"	"double"	53	0	0	0
4951	1014	"arg_1"	"double"	53	0	1	1
4952	1015	"res_0"	"double"	53	0	0	0
4953	1015	"arg_1"	"double"	53	0	1	1
4954	1015	"arg_2"	"double"	53	0	1	2
4955	1016	"res_0"	"double"	53	0	0	0
4956	1016	"arg_1"	"double"	53	0	1	1
4957	1017	"res_0"	"double"	53	0	0	0
4958	1017	"arg_1"	"double"	53	0	1	1
4959	1018	"res_0"	"double"	53	0	0	0
4960	1018	"arg_1"	"double"	53	0	1	1
4961	1019	"res_0"	"double"	53	0	0	0
4962	1019	"arg_1"	"double"	53	0	1	1
4963	1020	"res_0"	"double"	53	0	0	0
4964	1020	"arg_1"	"double"	53	0	1	1
4965	1021	"res_0"	"double"	53	0	0	0
4966	1021	"arg_1"	"double"	53	0	1	1
4967	1022	"res_0"	"double"	53	0	0	0
4968	1022	"arg_1"	"double"	53	0	1	1
4969	1023	"res_0"	"double"	53	0	0	0
4970	1023	"arg_1"	"double"	53	0	1	1
4971	1024	"res_0"	"double"	53	0	0	0
4972	1025	"res_0"	"int"	32	0	0	0
4973	1026	"res_0"	"int"	32	0	0	0
4974	1026	"arg_1"	"int"	32	0	1	1
4975	1027	"res_0"	"date"	0	0	0	0
4976	1028	"res_0"	"date"	0	0	0	0
4977	1029	"res_0"	"timetz"	7	0	0	0
4978	1030	"res_0"	"timetz"	7	0	0	0
4979	1031	"res_0"	"timestamptz"	7	0	0	0
4980	1032	"res_0"	"time"	7	0	0	0
4981	1033	"res_0"	"timestamp"	7	0	0	0
4982	1034	"res_0"	"month_interval"	32	0	0	0
4983	1034	"arg_1"	"date"	0	0	1	1
4984	1034	"arg_2"	"date"	0	0	1	2
4985	1035	"res_0"	"sec_interval"	19	0	0	0
4986	1035	"arg_1"	"timetz"	7	0	1	1
4987	1035	"arg_2"	"timetz"	7	0	1	2
4988	1036	"res_0"	"sec_interval"	19	0	0	0
4989	1036	"arg_1"	"time"	7	0	1	1
4990	1036	"arg_2"	"time"	7	0	1	2
4991	1037	"res_0"	"sec_interval"	19	0	0	0
4992	1037	"arg_1"	"timestamptz"	7	0	1	1
4993	1037	"arg_2"	"timestamptz"	7	0	1	2
4994	1038	"res_0"	"sec_interval"	19	0	0	0
4995	1038	"arg_1"	"timestamp"	7	0	1	1
4996	1038	"arg_2"	"timestamp"	7	0	1	2
4997	1039	"res_0"	"date"	0	0	0	0
4998	1039	"arg_1"	"date"	0	0	1	1
4999	1039	"arg_2"	"sec_interval"	19	0	1	2
5000	1040	"res_0"	"date"	0	0	0	0
5001	1040	"arg_1"	"date"	0	0	1	1
5002	1040	"arg_2"	"month_interval"	32	0	1	2
5003	1041	"res_0"	"time"	7	0	0	0
5004	1041	"arg_1"	"time"	7	0	1	1
5005	1041	"arg_2"	"sec_interval"	19	0	1	2
5006	1042	"res_0"	"timetz"	7	0	0	0
5007	1042	"arg_1"	"timetz"	7	0	1	1
5008	1042	"arg_2"	"sec_interval"	19	0	1	2
5009	1043	"res_0"	"timestamp"	7	0	0	0
5010	1043	"arg_1"	"timestamp"	7	0	1	1
5011	1043	"arg_2"	"sec_interval"	19	0	1	2
5012	1044	"res_0"	"timestamp"	7	0	0	0
5013	1044	"arg_1"	"timestamp"	7	0	1	1
5014	1044	"arg_2"	"month_interval"	32	0	1	2
5015	1045	"res_0"	"timestamptz"	7	0	0	0
5016	1045	"arg_1"	"timestamptz"	7	0	1	1
5017	1045	"arg_2"	"sec_interval"	19	0	1	2
5018	1046	"res_0"	"timestamptz"	7	0	0	0
5019	1046	"arg_1"	"timestamptz"	7	0	1	1
5020	1046	"arg_2"	"month_interval"	32	0	1	2
5021	1047	"res_0"	"date"	0	0	0	0
5022	1047	"arg_1"	"date"	0	0	1	1
5023	1047	"arg_2"	"sec_interval"	19	0	1	2
5024	1048	"res_0"	"date"	0	0	0	0
5025	1048	"arg_1"	"date"	0	0	1	1
5026	1048	"arg_2"	"month_interval"	32	0	1	2
5027	1049	"res_0"	"timestamp"	7	0	0	0
5028	1049	"arg_1"	"timestamp"	7	0	1	1
5029	1049	"arg_2"	"sec_interval"	19	0	1	2
5030	1050	"res_0"	"timestamp"	7	0	0	0
5031	1050	"arg_1"	"timestamp"	7	0	1	1
5032	1050	"arg_2"	"month_interval"	32	0	1	2
5033	1051	"res_0"	"timestamptz"	7	0	0	0
5034	1051	"arg_1"	"timestamptz"	7	0	1	1
5035	1051	"arg_2"	"sec_interval"	19	0	1	2
5036	1052	"res_0"	"timestamptz"	7	0	0	0
5037	1052	"arg_1"	"timestamptz"	7	0	1	1
5038	1052	"arg_2"	"month_interval"	32	0	1	2
5039	1053	"res_0"	"time"	7	0	0	0
5040	1053	"arg_1"	"time"	7	0	1	1
5041	1053	"arg_2"	"sec_interval"	19	0	1	2
5042	1054	"res_0"	"timetz"	7	0	0	0
5043	1054	"arg_1"	"timetz"	7	0	1	1
5044	1054	"arg_2"	"sec_interval"	19	0	1	2
5045	1055	"res_0"	"sec_interval"	19	0	0	0
5046	1056	"res_0"	"int"	32	0	0	0
5047	1056	"arg_1"	"date"	0	0	1	1
5048	1057	"res_0"	"int"	32	0	0	0
5049	1057	"arg_1"	"date"	0	0	1	1
5050	1058	"res_0"	"int"	32	0	0	0
5051	1058	"arg_1"	"date"	0	0	1	1
5052	1059	"res_0"	"int"	32	0	0	0
5053	1059	"arg_1"	"time"	7	0	1	1
5054	1060	"res_0"	"int"	32	0	0	0
5055	1060	"arg_1"	"time"	7	0	1	1
5056	1061	"res_0"	"decimal"	9	3	0	0
5057	1061	"arg_1"	"time"	7	0	1	1
5058	1062	"res_0"	"int"	32	0	0	0
5059	1062	"arg_1"	"timetz"	7	0	1	1
5060	1063	"res_0"	"int"	32	0	0	0
5061	1063	"arg_1"	"timetz"	7	0	1	1
5062	1064	"res_0"	"decimal"	9	3	0	0
5063	1064	"arg_1"	"timetz"	7	0	1	1
5064	1065	"res_0"	"int"	32	0	0	0
5065	1065	"arg_1"	"timestamp"	7	0	1	1
5066	1066	"res_0"	"int"	32	0	0	0
5067	1066	"arg_1"	"timestamp"	7	0	1	1
5068	1067	"res_0"	"int"	32	0	0	0
5069	1067	"arg_1"	"timestamp"	7	0	1	1
5070	1068	"res_0"	"int"	32	0	0	0
5071	1068	"arg_1"	"timestamp"	7	0	1	1
5072	1069	"res_0"	"int"	32	0	0	0
5073	1069	"arg_1"	"timestamp"	7	0	1	1
5074	1070	"res_0"	"decimal"	9	3	0	0
5075	1070	"arg_1"	"timestamp"	7	0	1	1
5076	1071	"res_0"	"int"	32	0	0	0
5077	1071	"arg_1"	"timestamptz"	7	0	1	1
5078	1072	"res_0"	"int"	32	0	0	0
5079	1072	"arg_1"	"timestamptz"	7	0	1	1
5080	1073	"res_0"	"int"	32	0	0	0
5081	1073	"arg_1"	"timestamptz"	7	0	1	1
5082	1074	"res_0"	"int"	32	0	0	0
5083	1074	"arg_1"	"timestamptz"	7	0	1	1
5084	1075	"res_0"	"int"	32	0	0	0
5085	1075	"arg_1"	"timestamptz"	7	0	1	1
5086	1076	"res_0"	"decimal"	9	3	0	0
5087	1076	"arg_1"	"timestamptz"	7	0	1	1
5088	1077	"res_0"	"int"	32	0	0	0
5089	1077	"arg_1"	"month_interval"	32	0	1	1
5090	1078	"res_0"	"int"	32	0	0	0
5091	1078	"arg_1"	"month_interval"	32	0	1	1
5092	1079	"res_0"	"bigint"	64	0	0	0
5093	1079	"arg_1"	"sec_interval"	19	0	1	1
5094	1080	"res_0"	"int"	32	0	0	0
5095	1080	"arg_1"	"sec_interval"	19	0	1	1
5096	1081	"res_0"	"int"	32	0	0	0
5097	1081	"arg_1"	"sec_interval"	19	0	1	1
5098	1082	"res_0"	"int"	32	0	0	0
5099	1082	"arg_1"	"sec_interval"	19	0	1	1
5100	1083	"res_0"	"int"	32	0	0	0
5101	1083	"arg_1"	"date"	0	0	1	1
5102	1084	"res_0"	"int"	32	0	0	0
5103	1084	"arg_1"	"date"	0	0	1	1
5104	1085	"res_0"	"int"	32	0	0	0
5105	1085	"arg_1"	"date"	0	0	1	1
5106	1086	"res_0"	"int"	32	0	0	0
5107	1086	"arg_1"	"date"	0	0	1	1
5108	1087	"res_0"	"int"	32	0	0	0
5109	1087	"arg_1"	"date"	0	0	1	1
5110	1088	"res_0"	"bigint"	64	0	0	0
5111	1088	"arg_1"	"varchar"	0	0	1	1
5112	1088	"arg_2"	"varchar"	0	0	1	2
5113	1089	"res_0"	"bigint"	64	0	0	0
5114	1089	"arg_1"	"varchar"	0	0	1	1
5115	1089	"arg_2"	"varchar"	0	0	1	2
5116	1090	"res_0"	"bigint"	64	0	0	0
5117	1090	"arg_1"	"varchar"	0	0	1	1
5118	1090	"arg_2"	"varchar"	0	0	1	2
5119	1090	"arg_3"	"bigint"	64	0	1	3
5120	1091	"res_0"	"tinyint"	8	0	0	0
5121	1091	"arg_1"	"char"	0	0	1	1
5122	1091	"arg_2"	"boolean"	1	0	1	2
5123	1092	"res_0"	"smallint"	16	0	0	0
5124	1092	"arg_1"	"char"	0	0	1	1
5125	1092	"arg_2"	"boolean"	1	0	1	2
5126	1093	"res_0"	"int"	32	0	0	0
5127	1093	"arg_1"	"char"	0	0	1	1
5128	1093	"arg_2"	"boolean"	1	0	1	2
5129	1094	"res_0"	"char"	0	0	0	0
5130	1094	"arg_1"	"char"	0	0	1	1
5131	1095	"res_0"	"int"	32	0	0	0
5132	1095	"arg_1"	"char"	0	0	1	1
5133	1095	"arg_2"	"char"	0	0	1	2
5134	1096	"res_0"	"int"	32	0	0	0
5135	1096	"arg_1"	"char"	0	0	1	1
5136	1096	"arg_2"	"char"	0	0	1	2
5137	1096	"arg_3"	"int"	32	0	1	3
5138	1097	"res_0"	"char"	0	0	0	0
5139	1097	"arg_1"	"char"	0	0	1	1
5140	1097	"arg_2"	"int"	32	0	1	2
5141	1098	"res_0"	"char"	0	0	0	0
5142	1098	"arg_1"	"char"	0	0	1	1
5143	1098	"arg_2"	"int"	32	0	1	2
5144	1098	"arg_3"	"int"	32	0	1	3
5145	1099	"res_0"	"boolean"	1	0	0	0
5146	1099	"arg_1"	"char"	0	0	1	1
5147	1099	"arg_2"	"char"	0	0	1	2
5148	1100	"res_0"	"boolean"	1	0	0	0
5149	1100	"arg_1"	"char"	0	0	1	1
5150	1100	"arg_2"	"char"	0	0	1	2
5151	1100	"arg_3"	"char"	0	0	1	3
5152	1101	"res_0"	"boolean"	1	0	0	0
5153	1101	"arg_1"	"char"	0	0	1	1
5154	1101	"arg_2"	"char"	0	0	1	2
5155	1102	"res_0"	"boolean"	1	0	0	0
5156	1102	"arg_1"	"char"	0	0	1	1
5157	1102	"arg_2"	"char"	0	0	1	2
5158	1102	"arg_3"	"char"	0	0	1	3
5159	1103	"res_0"	"boolean"	1	0	0	0
5160	1103	"arg_1"	"char"	0	0	1	1
5161	1103	"arg_2"	"char"	0	0	1	2
5162	1104	"res_0"	"boolean"	1	0	0	0
5163	1104	"arg_1"	"char"	0	0	1	1
5164	1104	"arg_2"	"char"	0	0	1	2
5165	1104	"arg_3"	"char"	0	0	1	3
5166	1105	"res_0"	"boolean"	1	0	0	0
5167	1105	"arg_1"	"char"	0	0	1	1
5168	1105	"arg_2"	"char"	0	0	1	2
5169	1106	"res_0"	"boolean"	1	0	0	0
5170	1106	"arg_1"	"char"	0	0	1	1
5171	1106	"arg_2"	"char"	0	0	1	2
5172	1106	"arg_3"	"char"	0	0	1	3
5173	1107	"res_0"	"int"	32	0	0	0
5174	1107	"arg_1"	"char"	0	0	1	1
5175	1107	"arg_2"	"char"	0	0	1	2
5176	1108	"res_0"	"char"	0	0	0	0
5177	1108	"arg_1"	"char"	0	0	1	1
5178	1108	"arg_2"	"int"	32	0	1	2
5179	1109	"res_0"	"char"	0	0	0	0
5180	1109	"arg_1"	"char"	0	0	1	1
5181	1109	"arg_2"	"char"	0	0	1	2
5182	1110	"res_0"	"int"	32	0	0	0
5183	1110	"arg_1"	"char"	0	0	1	1
5184	1111	"res_0"	"char"	0	0	0	0
5185	1111	"arg_1"	"int"	32	0	1	1
5186	1112	"res_0"	"int"	32	0	0	0
5187	1112	"arg_1"	"char"	0	0	1	1
5188	1113	"res_0"	"char"	0	0	0	0
5189	1113	"arg_1"	"char"	0	0	1	1
5190	1113	"arg_2"	"int"	32	0	1	2
5191	1114	"res_0"	"char"	0	0	0	0
5192	1114	"arg_1"	"char"	0	0	1	1
5193	1114	"arg_2"	"int"	32	0	1	2
5194	1115	"res_0"	"char"	0	0	0	0
5195	1115	"arg_1"	"char"	0	0	1	1
5196	1116	"res_0"	"char"	0	0	0	0
5197	1116	"arg_1"	"char"	0	0	1	1
5198	1117	"res_0"	"char"	0	0	0	0
5199	1117	"arg_1"	"char"	0	0	1	1
5200	1118	"res_0"	"char"	0	0	0	0
5201	1118	"arg_1"	"char"	0	0	1	1
5202	1119	"res_0"	"char"	0	0	0	0
5203	1119	"arg_1"	"char"	0	0	1	1
5204	1120	"res_0"	"char"	0	0	0	0
5205	1120	"arg_1"	"char"	0	0	1	1
5206	1120	"arg_2"	"char"	0	0	1	2
5207	1121	"res_0"	"char"	0	0	0	0
5208	1121	"arg_1"	"char"	0	0	1	1
5209	1122	"res_0"	"char"	0	0	0	0
5210	1122	"arg_1"	"char"	0	0	1	1
5211	1122	"arg_2"	"char"	0	0	1	2
5212	1123	"res_0"	"char"	0	0	0	0
5213	1123	"arg_1"	"char"	0	0	1	1
5214	1124	"res_0"	"char"	0	0	0	0
5215	1124	"arg_1"	"char"	0	0	1	1
5216	1124	"arg_2"	"char"	0	0	1	2
5217	1125	"res_0"	"char"	0	0	0	0
5218	1125	"arg_1"	"char"	0	0	1	1
5219	1125	"arg_2"	"int"	32	0	1	2
5220	1126	"res_0"	"char"	0	0	0	0
5221	1126	"arg_1"	"char"	0	0	1	1
5222	1126	"arg_2"	"int"	32	0	1	2
5223	1126	"arg_3"	"char"	0	0	1	3
5224	1127	"res_0"	"char"	0	0	0	0
5225	1127	"arg_1"	"char"	0	0	1	1
5226	1127	"arg_2"	"int"	32	0	1	2
5227	1128	"res_0"	"char"	0	0	0	0
5228	1128	"arg_1"	"char"	0	0	1	1
5229	1128	"arg_2"	"int"	32	0	1	2
5230	1128	"arg_3"	"char"	0	0	1	3
5231	1129	"res_0"	"char"	0	0	0	0
5232	1129	"arg_1"	"char"	0	0	1	1
5233	1129	"arg_2"	"int"	32	0	1	2
5234	1129	"arg_3"	"int"	32	0	1	3
5235	1129	"arg_4"	"char"	0	0	1	4
5236	1130	"res_0"	"char"	0	0	0	0
5237	1130	"arg_1"	"char"	0	0	1	1
5238	1130	"arg_2"	"char"	0	0	1	2
5239	1130	"arg_3"	"char"	0	0	1	3
5240	1131	"res_0"	"char"	0	0	0	0
5241	1131	"arg_1"	"char"	0	0	1	1
5242	1131	"arg_2"	"int"	32	0	1	2
5243	1132	"res_0"	"char"	0	0	0	0
5244	1132	"arg_1"	"int"	32	0	1	1
5245	1133	"res_0"	"int"	32	0	0	0
5246	1133	"arg_1"	"char"	0	0	1	1
5247	1134	"res_0"	"int"	32	0	0	0
5248	1134	"arg_1"	"char"	0	0	1	1
5249	1135	"res_0"	"int"	32	0	0	0
5250	1135	"arg_1"	"char"	0	0	1	1
5251	1136	"res_0"	"char"	0	0	0	0
5252	1136	"arg_1"	"char"	0	0	1	1
5253	1137	"res_0"	"int"	32	0	0	0
5254	1137	"arg_1"	"char"	0	0	1	1
5255	1137	"arg_2"	"char"	0	0	1	2
5256	1138	"res_0"	"int"	32	0	0	0
5257	1138	"arg_1"	"char"	0	0	1	1
5258	1138	"arg_2"	"char"	0	0	1	2
5259	1139	"res_0"	"int"	32	0	0	0
5260	1139	"arg_1"	"char"	0	0	1	1
5261	1139	"arg_2"	"char"	0	0	1	2
5262	1140	"res_0"	"double"	53	0	0	0
5263	1140	"arg_1"	"char"	0	0	1	1
5264	1140	"arg_2"	"char"	0	0	1	2
5265	1141	"res_0"	"char"	0	0	0	0
5266	1141	"arg_1"	"char"	0	0	1	1
5267	1142	"res_0"	"int"	32	0	0	0
5268	1142	"arg_1"	"char"	0	0	1	1
5269	1142	"arg_2"	"char"	0	0	1	2
5270	1143	"res_0"	"int"	32	0	0	0
5271	1143	"arg_1"	"char"	0	0	1	1
5272	1143	"arg_2"	"char"	0	0	1	2
5273	1143	"arg_3"	"int"	32	0	1	3
5274	1143	"arg_4"	"int"	32	0	1	4
5275	1143	"arg_5"	"int"	32	0	1	5
5276	1144	"res_0"	"tinyint"	8	0	0	0
5277	1144	"arg_1"	"varchar"	0	0	1	1
5278	1144	"arg_2"	"boolean"	1	0	1	2
5279	1145	"res_0"	"smallint"	16	0	0	0
5280	1145	"arg_1"	"varchar"	0	0	1	1
5281	1145	"arg_2"	"boolean"	1	0	1	2
5282	1146	"res_0"	"int"	32	0	0	0
5283	1146	"arg_1"	"varchar"	0	0	1	1
5284	1146	"arg_2"	"boolean"	1	0	1	2
5285	1147	"res_0"	"varchar"	0	0	0	0
5286	1147	"arg_1"	"varchar"	0	0	1	1
5287	1148	"res_0"	"int"	32	0	0	0
5288	1148	"arg_1"	"varchar"	0	0	1	1
5289	1148	"arg_2"	"varchar"	0	0	1	2
5290	1149	"res_0"	"int"	32	0	0	0
5291	1149	"arg_1"	"varchar"	0	0	1	1
5292	1149	"arg_2"	"varchar"	0	0	1	2
5293	1149	"arg_3"	"int"	32	0	1	3
5294	1150	"res_0"	"varchar"	0	0	0	0
5295	1150	"arg_1"	"varchar"	0	0	1	1
5296	1150	"arg_2"	"int"	32	0	1	2
5297	1151	"res_0"	"varchar"	0	0	0	0
5298	1151	"arg_1"	"varchar"	0	0	1	1
5299	1151	"arg_2"	"int"	32	0	1	2
5300	1151	"arg_3"	"int"	32	0	1	3
5301	1152	"res_0"	"boolean"	1	0	0	0
5302	1152	"arg_1"	"varchar"	0	0	1	1
5303	1152	"arg_2"	"varchar"	0	0	1	2
5304	1153	"res_0"	"boolean"	1	0	0	0
5305	1153	"arg_1"	"varchar"	0	0	1	1
5306	1153	"arg_2"	"varchar"	0	0	1	2
5307	1153	"arg_3"	"varchar"	0	0	1	3
5308	1154	"res_0"	"boolean"	1	0	0	0
5309	1154	"arg_1"	"varchar"	0	0	1	1
5310	1154	"arg_2"	"varchar"	0	0	1	2
5311	1155	"res_0"	"boolean"	1	0	0	0
5312	1155	"arg_1"	"varchar"	0	0	1	1
5313	1155	"arg_2"	"varchar"	0	0	1	2
5314	1155	"arg_3"	"varchar"	0	0	1	3
5315	1156	"res_0"	"boolean"	1	0	0	0
5316	1156	"arg_1"	"varchar"	0	0	1	1
5317	1156	"arg_2"	"varchar"	0	0	1	2
5318	1157	"res_0"	"boolean"	1	0	0	0
5319	1157	"arg_1"	"varchar"	0	0	1	1
5320	1157	"arg_2"	"varchar"	0	0	1	2
5321	1157	"arg_3"	"varchar"	0	0	1	3
5322	1158	"res_0"	"boolean"	1	0	0	0
5323	1158	"arg_1"	"varchar"	0	0	1	1
5324	1158	"arg_2"	"varchar"	0	0	1	2
5325	1159	"res_0"	"boolean"	1	0	0	0
5326	1159	"arg_1"	"varchar"	0	0	1	1
5327	1159	"arg_2"	"varchar"	0	0	1	2
5328	1159	"arg_3"	"varchar"	0	0	1	3
5329	1160	"res_0"	"int"	32	0	0	0
5330	1160	"arg_1"	"varchar"	0	0	1	1
5331	1160	"arg_2"	"varchar"	0	0	1	2
5332	1161	"res_0"	"varchar"	0	0	0	0
5333	1161	"arg_1"	"varchar"	0	0	1	1
5334	1161	"arg_2"	"int"	32	0	1	2
5335	1162	"res_0"	"varchar"	0	0	0	0
5336	1162	"arg_1"	"varchar"	0	0	1	1
5337	1162	"arg_2"	"varchar"	0	0	1	2
5338	1163	"res_0"	"int"	32	0	0	0
5339	1163	"arg_1"	"varchar"	0	0	1	1
5340	1164	"res_0"	"varchar"	0	0	0	0
5341	1164	"arg_1"	"int"	32	0	1	1
5342	1165	"res_0"	"int"	32	0	0	0
5343	1165	"arg_1"	"varchar"	0	0	1	1
5344	1166	"res_0"	"varchar"	0	0	0	0
5345	1166	"arg_1"	"varchar"	0	0	1	1
5346	1166	"arg_2"	"int"	32	0	1	2
5347	1167	"res_0"	"varchar"	0	0	0	0
5348	1167	"arg_1"	"varchar"	0	0	1	1
5349	1167	"arg_2"	"int"	32	0	1	2
5350	1168	"res_0"	"varchar"	0	0	0	0
5351	1168	"arg_1"	"varchar"	0	0	1	1
5352	1169	"res_0"	"varchar"	0	0	0	0
5353	1169	"arg_1"	"varchar"	0	0	1	1
5354	1170	"res_0"	"varchar"	0	0	0	0
5355	1170	"arg_1"	"varchar"	0	0	1	1
5356	1171	"res_0"	"varchar"	0	0	0	0
5357	1171	"arg_1"	"varchar"	0	0	1	1
5358	1172	"res_0"	"varchar"	0	0	0	0
5359	1172	"arg_1"	"varchar"	0	0	1	1
5360	1173	"res_0"	"varchar"	0	0	0	0
5361	1173	"arg_1"	"varchar"	0	0	1	1
5362	1173	"arg_2"	"varchar"	0	0	1	2
5363	1174	"res_0"	"varchar"	0	0	0	0
5364	1174	"arg_1"	"varchar"	0	0	1	1
5365	1175	"res_0"	"varchar"	0	0	0	0
5366	1175	"arg_1"	"varchar"	0	0	1	1
5367	1175	"arg_2"	"varchar"	0	0	1	2
5368	1176	"res_0"	"varchar"	0	0	0	0
5369	1176	"arg_1"	"varchar"	0	0	1	1
5370	1177	"res_0"	"varchar"	0	0	0	0
5371	1177	"arg_1"	"varchar"	0	0	1	1
5372	1177	"arg_2"	"varchar"	0	0	1	2
5373	1178	"res_0"	"varchar"	0	0	0	0
5374	1178	"arg_1"	"varchar"	0	0	1	1
5375	1178	"arg_2"	"int"	32	0	1	2
5376	1179	"res_0"	"varchar"	0	0	0	0
5377	1179	"arg_1"	"varchar"	0	0	1	1
5378	1179	"arg_2"	"int"	32	0	1	2
5379	1179	"arg_3"	"varchar"	0	0	1	3
5380	1180	"res_0"	"varchar"	0	0	0	0
5381	1180	"arg_1"	"varchar"	0	0	1	1
5382	1180	"arg_2"	"int"	32	0	1	2
5383	1181	"res_0"	"varchar"	0	0	0	0
5384	1181	"arg_1"	"varchar"	0	0	1	1
5385	1181	"arg_2"	"int"	32	0	1	2
5386	1181	"arg_3"	"varchar"	0	0	1	3
5387	1182	"res_0"	"varchar"	0	0	0	0
5388	1182	"arg_1"	"varchar"	0	0	1	1
5389	1182	"arg_2"	"int"	32	0	1	2
5390	1182	"arg_3"	"int"	32	0	1	3
5391	1182	"arg_4"	"varchar"	0	0	1	4
5392	1183	"res_0"	"varchar"	0	0	0	0
5393	1183	"arg_1"	"varchar"	0	0	1	1
5394	1183	"arg_2"	"varchar"	0	0	1	2
5395	1183	"arg_3"	"varchar"	0	0	1	3
5396	1184	"res_0"	"varchar"	0	0	0	0
5397	1184	"arg_1"	"varchar"	0	0	1	1
5398	1184	"arg_2"	"int"	32	0	1	2
5399	1185	"res_0"	"varchar"	0	0	0	0
5400	1185	"arg_1"	"int"	32	0	1	1
5401	1186	"res_0"	"int"	32	0	0	0
5402	1186	"arg_1"	"varchar"	0	0	1	1
5403	1187	"res_0"	"int"	32	0	0	0
5404	1187	"arg_1"	"varchar"	0	0	1	1
5405	1188	"res_0"	"int"	32	0	0	0
5406	1188	"arg_1"	"varchar"	0	0	1	1
5407	1189	"res_0"	"varchar"	0	0	0	0
5408	1189	"arg_1"	"varchar"	0	0	1	1
5409	1190	"res_0"	"int"	32	0	0	0
5410	1190	"arg_1"	"varchar"	0	0	1	1
5411	1190	"arg_2"	"varchar"	0	0	1	2
5412	1191	"res_0"	"int"	32	0	0	0
5413	1191	"arg_1"	"varchar"	0	0	1	1
5414	1191	"arg_2"	"varchar"	0	0	1	2
5415	1192	"res_0"	"int"	32	0	0	0
5416	1192	"arg_1"	"varchar"	0	0	1	1
5417	1192	"arg_2"	"varchar"	0	0	1	2
5418	1193	"res_0"	"double"	53	0	0	0
5419	1193	"arg_1"	"varchar"	0	0	1	1
5420	1193	"arg_2"	"varchar"	0	0	1	2
5421	1194	"res_0"	"varchar"	0	0	0	0
5422	1194	"arg_1"	"varchar"	0	0	1	1
5423	1195	"res_0"	"int"	32	0	0	0
5424	1195	"arg_1"	"varchar"	0	0	1	1
5425	1195	"arg_2"	"varchar"	0	0	1	2
5426	1196	"res_0"	"int"	32	0	0	0
5427	1196	"arg_1"	"varchar"	0	0	1	1
5428	1196	"arg_2"	"varchar"	0	0	1	2
5429	1196	"arg_3"	"int"	32	0	1	3
5430	1196	"arg_4"	"int"	32	0	1	4
5431	1196	"arg_5"	"int"	32	0	1	5
5432	1197	"res_0"	"tinyint"	8	0	0	0
5433	1197	"arg_1"	"clob"	0	0	1	1
5434	1197	"arg_2"	"boolean"	1	0	1	2
5435	1198	"res_0"	"smallint"	16	0	0	0
5436	1198	"arg_1"	"clob"	0	0	1	1
5437	1198	"arg_2"	"boolean"	1	0	1	2
5438	1199	"res_0"	"int"	32	0	0	0
5439	1199	"arg_1"	"clob"	0	0	1	1
5440	1199	"arg_2"	"boolean"	1	0	1	2
5441	1200	"res_0"	"clob"	0	0	0	0
5442	1200	"arg_1"	"clob"	0	0	1	1
5443	1201	"res_0"	"int"	32	0	0	0
5444	1201	"arg_1"	"clob"	0	0	1	1
5445	1201	"arg_2"	"clob"	0	0	1	2
5446	1202	"res_0"	"int"	32	0	0	0
5447	1202	"arg_1"	"clob"	0	0	1	1
5448	1202	"arg_2"	"clob"	0	0	1	2
5449	1202	"arg_3"	"int"	32	0	1	3
5450	1203	"res_0"	"clob"	0	0	0	0
5451	1203	"arg_1"	"clob"	0	0	1	1
5452	1203	"arg_2"	"int"	32	0	1	2
5453	1204	"res_0"	"clob"	0	0	0	0
5454	1204	"arg_1"	"clob"	0	0	1	1
5455	1204	"arg_2"	"int"	32	0	1	2
5456	1204	"arg_3"	"int"	32	0	1	3
5457	1205	"res_0"	"boolean"	1	0	0	0
5458	1205	"arg_1"	"clob"	0	0	1	1
5459	1205	"arg_2"	"clob"	0	0	1	2
5460	1206	"res_0"	"boolean"	1	0	0	0
5461	1206	"arg_1"	"clob"	0	0	1	1
5462	1206	"arg_2"	"clob"	0	0	1	2
5463	1206	"arg_3"	"clob"	0	0	1	3
5464	1207	"res_0"	"boolean"	1	0	0	0
5465	1207	"arg_1"	"clob"	0	0	1	1
5466	1207	"arg_2"	"clob"	0	0	1	2
5467	1208	"res_0"	"boolean"	1	0	0	0
5468	1208	"arg_1"	"clob"	0	0	1	1
5469	1208	"arg_2"	"clob"	0	0	1	2
5470	1208	"arg_3"	"clob"	0	0	1	3
5471	1209	"res_0"	"boolean"	1	0	0	0
5472	1209	"arg_1"	"clob"	0	0	1	1
5473	1209	"arg_2"	"clob"	0	0	1	2
5474	1210	"res_0"	"boolean"	1	0	0	0
5475	1210	"arg_1"	"clob"	0	0	1	1
5476	1210	"arg_2"	"clob"	0	0	1	2
5477	1210	"arg_3"	"clob"	0	0	1	3
5478	1211	"res_0"	"boolean"	1	0	0	0
5479	1211	"arg_1"	"clob"	0	0	1	1
5480	1211	"arg_2"	"clob"	0	0	1	2
5481	1212	"res_0"	"boolean"	1	0	0	0
5482	1212	"arg_1"	"clob"	0	0	1	1
5483	1212	"arg_2"	"clob"	0	0	1	2
5484	1212	"arg_3"	"clob"	0	0	1	3
5485	1213	"res_0"	"int"	32	0	0	0
5486	1213	"arg_1"	"clob"	0	0	1	1
5487	1213	"arg_2"	"clob"	0	0	1	2
5488	1214	"res_0"	"clob"	0	0	0	0
5489	1214	"arg_1"	"clob"	0	0	1	1
5490	1214	"arg_2"	"int"	32	0	1	2
5491	1215	"res_0"	"clob"	0	0	0	0
5492	1215	"arg_1"	"clob"	0	0	1	1
5493	1215	"arg_2"	"clob"	0	0	1	2
5494	1216	"res_0"	"int"	32	0	0	0
5495	1216	"arg_1"	"clob"	0	0	1	1
5496	1217	"res_0"	"clob"	0	0	0	0
5497	1217	"arg_1"	"int"	32	0	1	1
5498	1218	"res_0"	"int"	32	0	0	0
5499	1218	"arg_1"	"clob"	0	0	1	1
5500	1219	"res_0"	"clob"	0	0	0	0
5501	1219	"arg_1"	"clob"	0	0	1	1
5502	1219	"arg_2"	"int"	32	0	1	2
5503	1220	"res_0"	"clob"	0	0	0	0
5504	1220	"arg_1"	"clob"	0	0	1	1
5505	1220	"arg_2"	"int"	32	0	1	2
5506	1221	"res_0"	"clob"	0	0	0	0
5507	1221	"arg_1"	"clob"	0	0	1	1
5508	1222	"res_0"	"clob"	0	0	0	0
5509	1222	"arg_1"	"clob"	0	0	1	1
5510	1223	"res_0"	"clob"	0	0	0	0
5511	1223	"arg_1"	"clob"	0	0	1	1
5512	1224	"res_0"	"clob"	0	0	0	0
5513	1224	"arg_1"	"clob"	0	0	1	1
5514	1225	"res_0"	"clob"	0	0	0	0
5515	1225	"arg_1"	"clob"	0	0	1	1
5516	1226	"res_0"	"clob"	0	0	0	0
5517	1226	"arg_1"	"clob"	0	0	1	1
5518	1226	"arg_2"	"clob"	0	0	1	2
5519	1227	"res_0"	"clob"	0	0	0	0
5520	1227	"arg_1"	"clob"	0	0	1	1
5521	1228	"res_0"	"clob"	0	0	0	0
5522	1228	"arg_1"	"clob"	0	0	1	1
5523	1228	"arg_2"	"clob"	0	0	1	2
5524	1229	"res_0"	"clob"	0	0	0	0
5525	1229	"arg_1"	"clob"	0	0	1	1
5526	1230	"res_0"	"clob"	0	0	0	0
5527	1230	"arg_1"	"clob"	0	0	1	1
5528	1230	"arg_2"	"clob"	0	0	1	2
5529	1231	"res_0"	"clob"	0	0	0	0
5530	1231	"arg_1"	"clob"	0	0	1	1
5531	1231	"arg_2"	"int"	32	0	1	2
5532	1232	"res_0"	"clob"	0	0	0	0
5533	1232	"arg_1"	"clob"	0	0	1	1
5534	1232	"arg_2"	"int"	32	0	1	2
5535	1232	"arg_3"	"clob"	0	0	1	3
5536	1233	"res_0"	"clob"	0	0	0	0
5537	1233	"arg_1"	"clob"	0	0	1	1
5538	1233	"arg_2"	"int"	32	0	1	2
5539	1234	"res_0"	"clob"	0	0	0	0
5540	1234	"arg_1"	"clob"	0	0	1	1
5541	1234	"arg_2"	"int"	32	0	1	2
5542	1234	"arg_3"	"clob"	0	0	1	3
5543	1235	"res_0"	"clob"	0	0	0	0
5544	1235	"arg_1"	"clob"	0	0	1	1
5545	1235	"arg_2"	"int"	32	0	1	2
5546	1235	"arg_3"	"int"	32	0	1	3
5547	1235	"arg_4"	"clob"	0	0	1	4
5548	1236	"res_0"	"clob"	0	0	0	0
5549	1236	"arg_1"	"clob"	0	0	1	1
5550	1236	"arg_2"	"clob"	0	0	1	2
5551	1236	"arg_3"	"clob"	0	0	1	3
5552	1237	"res_0"	"clob"	0	0	0	0
5553	1237	"arg_1"	"clob"	0	0	1	1
5554	1237	"arg_2"	"int"	32	0	1	2
5555	1238	"res_0"	"clob"	0	0	0	0
5556	1238	"arg_1"	"int"	32	0	1	1
5557	1239	"res_0"	"int"	32	0	0	0
5558	1239	"arg_1"	"clob"	0	0	1	1
5559	1240	"res_0"	"int"	32	0	0	0
5560	1240	"arg_1"	"clob"	0	0	1	1
5561	1241	"res_0"	"int"	32	0	0	0
5562	1241	"arg_1"	"clob"	0	0	1	1
5563	1242	"res_0"	"clob"	0	0	0	0
5564	1242	"arg_1"	"clob"	0	0	1	1
5565	1243	"res_0"	"int"	32	0	0	0
5566	1243	"arg_1"	"clob"	0	0	1	1
5567	1243	"arg_2"	"clob"	0	0	1	2
5568	1244	"res_0"	"int"	32	0	0	0
5569	1244	"arg_1"	"clob"	0	0	1	1
5570	1244	"arg_2"	"clob"	0	0	1	2
5571	1245	"res_0"	"int"	32	0	0	0
5572	1245	"arg_1"	"clob"	0	0	1	1
5573	1245	"arg_2"	"clob"	0	0	1	2
5574	1246	"res_0"	"double"	53	0	0	0
5575	1246	"arg_1"	"clob"	0	0	1	1
5576	1246	"arg_2"	"clob"	0	0	1	2
5577	1247	"res_0"	"clob"	0	0	0	0
5578	1247	"arg_1"	"clob"	0	0	1	1
5579	1248	"res_0"	"int"	32	0	0	0
5580	1248	"arg_1"	"clob"	0	0	1	1
5581	1248	"arg_2"	"clob"	0	0	1	2
5582	1249	"res_0"	"int"	32	0	0	0
5583	1249	"arg_1"	"clob"	0	0	1	1
5584	1249	"arg_2"	"clob"	0	0	1	2
5585	1249	"arg_3"	"int"	32	0	1	3
5586	1249	"arg_4"	"int"	32	0	1	4
5587	1249	"arg_5"	"int"	32	0	1	5
5588	1250	"res_0"	"table"	0	0	0	0
5589	1250	"arg_1"	"varchar"	0	0	1	1
5590	1250	"arg_2"	"varchar"	0	0	1	2
5591	1250	"arg_3"	"varchar"	0	0	1	3
5592	1250	"arg_4"	"varchar"	0	0	1	4
5593	1250	"arg_5"	"varchar"	0	0	1	5
5594	1250	"arg_6"	"varchar"	0	0	1	6
5595	1250	"arg_7"	"bigint"	64	0	1	7
5596	1250	"arg_8"	"bigint"	64	0	1	8
5597	1251	"res_0"	"table"	0	0	0	0
5598	1251	"arg_1"	"varchar"	0	0	1	1
5599	1251	"arg_2"	"varchar"	0	0	1	2
5600	1251	"arg_3"	"varchar"	0	0	1	3
5601	1251	"arg_4"	"varchar"	0	0	1	4
5602	1251	"arg_5"	"varchar"	0	0	1	5
5603	1251	"arg_6"	"bigint"	64	0	1	6
5604	1251	"arg_7"	"bigint"	64	0	1	7
5605	1252	"res_0"	"table"	0	0	0	0
5606	1252	"arg_1"	"varchar"	0	0	1	1
5607	1252	"arg_2"	"varchar"	0	0	1	2
5608	56	"res"	"boolean"	1	0	0	0
5609	56	"arg"	"oid"	63	0	1	1
5610	68	"res"	"any"	0	0	0	0
5611	68	"arg"	"any"	0	0	1	1
5612	69	"res"	"boolean"	1	0	0	0
5613	69	"arg"	"any"	0	0	1	1
5614	70	"res"	"boolean"	1	0	0	0
5615	70	"arg"	"any"	0	0	1	1
5616	75	"res"	"any"	0	0	0	0
5617	75	"arg"	"any"	0	0	1	1
5618	76	"res"	"any"	0	0	0	0
5619	76	"arg"	"any"	0	0	1	1
5620	80	"res"	"bigint"	64	0	0	0
5621	80	"arg"	"tinyint"	8	0	1	1
5622	81	"res"	"bigint"	64	0	0	0
5623	81	"arg"	"smallint"	16	0	1	1
5624	82	"res"	"bigint"	64	0	0	0
5625	82	"arg"	"int"	32	0	1	1
5626	83	"res"	"bigint"	64	0	0	0
5627	83	"arg"	"bigint"	64	0	1	1
5628	84	"res"	"wrd"	64	0	0	0
5629	84	"arg"	"wrd"	64	0	1	1
5630	85	"res"	"decimal"	19	0	0	0
5631	85	"arg"	"decimal"	2	0	1	1
5632	86	"res"	"decimal"	19	0	0	0
5633	86	"arg"	"decimal"	4	0	1	1
5634	87	"res"	"decimal"	19	0	0	0
5635	87	"arg"	"decimal"	9	0	1	1
5636	88	"res"	"decimal"	19	0	0	0
5637	88	"arg"	"decimal"	19	0	1	1
5638	89	"res"	"bigint"	64	0	0	0
5639	89	"arg"	"tinyint"	8	0	1	1
5640	90	"res"	"bigint"	64	0	0	0
5641	90	"arg"	"smallint"	16	0	1	1
5642	91	"res"	"bigint"	64	0	0	0
5643	91	"arg"	"int"	32	0	1	1
5644	92	"res"	"bigint"	64	0	0	0
5645	92	"arg"	"bigint"	64	0	1	1
5646	93	"res"	"decimal"	19	0	0	0
5647	93	"arg"	"decimal"	2	0	1	1
5648	94	"res"	"decimal"	19	0	0	0
5649	94	"arg"	"decimal"	4	0	1	1
5650	95	"res"	"decimal"	19	0	0	0
5651	95	"arg"	"decimal"	9	0	1	1
5652	96	"res"	"decimal"	19	0	0	0
5653	96	"arg"	"decimal"	19	0	1	1
5654	109	"res"	"real"	24	0	0	0
5655	109	"arg"	"real"	24	0	1	1
5656	110	"res"	"real"	24	0	0	0
5657	110	"arg"	"real"	24	0	1	1
5658	111	"res"	"double"	53	0	0	0
5659	111	"arg"	"double"	53	0	1	1
5660	112	"res"	"double"	53	0	0	0
5661	112	"arg"	"double"	53	0	1	1
5662	113	"res"	"double"	53	0	0	0
5663	113	"arg"	"double"	53	0	1	1
5664	114	"res"	"wrd"	64	0	0	0
5665	115	"res"	"wrd"	64	0	0	0
5688	5687	"name"	"varchar"	1024	0	0	0
5689	5687	"value"	"varchar"	2048	0	0	1
5691	5690	"name"	"varchar"	1024	0	0	0
5697	5696	"name"	"varchar"	2048	0	0	0
5717	5716	"val"	"clob"	0	0	1	0
5718	5716	"pat"	"clob"	0	0	1	1
5719	5716	"esc"	"clob"	0	0	1	2
5722	5721	"val"	"clob"	0	0	1	0
5723	5721	"pat"	"clob"	0	0	1	1
5724	5721	"esc"	"clob"	0	0	1	2
5727	5726	"val"	"clob"	0	0	1	0
5728	5726	"pat"	"clob"	0	0	1	1
5731	5730	"val"	"clob"	0	0	1	0
5732	5730	"pat"	"clob"	0	0	1	1
5735	5734	"result"	"double"	53	0	0	0
5736	5734	"r"	"double"	53	0	1	1
5739	5738	"result"	"double"	53	0	0	0
5740	5738	"d"	"double"	53	0	1	1
5746	5745	"result"	"clob"	0	0	0	0
5747	5745	"theurl"	"url"	0	0	1	1
5750	5749	"result"	"clob"	0	0	0	0
5751	5749	"theurl"	"url"	0	0	1	1
5754	5753	"result"	"clob"	0	0	0	0
5755	5753	"theurl"	"url"	0	0	1	1
5758	5757	"result"	"clob"	0	0	0	0
5759	5757	"theurl"	"url"	0	0	1	1
5762	5761	"result"	"clob"	0	0	0	0
5763	5761	"theurl"	"url"	0	0	1	1
5766	5765	"result"	"clob"	0	0	0	0
5767	5765	"theurl"	"url"	0	0	1	1
5770	5769	"result"	"clob"	0	0	0	0
5771	5769	"theurl"	"url"	0	0	1	1
5774	5773	"result"	"clob"	0	0	0	0
5775	5773	"theurl"	"url"	0	0	1	1
5778	5777	"result"	"clob"	0	0	0	0
5779	5777	"theurl"	"url"	0	0	1	1
5782	5781	"result"	"clob"	0	0	0	0
5783	5781	"theurl"	"url"	0	0	1	1
5786	5785	"result"	"clob"	0	0	0	0
5787	5785	"theurl"	"url"	0	0	1	1
5790	5789	"result"	"clob"	0	0	0	0
5791	5789	"theurl"	"url"	0	0	1	1
5794	5793	"result"	"clob"	0	0	0	0
5795	5793	"theurl"	"url"	0	0	1	1
5798	5797	"result"	"boolean"	1	0	0	0
5799	5797	"theurl"	"url"	0	0	1	1
5802	5801	"result"	"url"	0	0	0	0
5803	5801	"protocol"	"clob"	0	0	1	1
5804	5801	"hostname"	"clob"	0	0	1	2
5805	5801	"port"	"int"	32	0	1	3
5806	5801	"file"	"clob"	0	0	1	4
5809	5808	"result"	"url"	0	0	0	0
5810	5808	"protocol"	"clob"	0	0	1	1
5811	5808	"hostname"	"clob"	0	0	1	2
5812	5808	"file"	"clob"	0	0	1	3
5815	5814	"result"	"date"	0	0	0	0
5816	5814	"s"	"clob"	0	0	1	1
5817	5814	"format"	"clob"	0	0	1	2
5820	5819	"result"	"clob"	0	0	0	0
5821	5819	"d"	"date"	0	0	1	1
5822	5819	"format"	"clob"	0	0	1	2
5825	5824	"result"	"date"	0	0	0	0
5826	5824	"s"	"clob"	0	0	1	1
5827	5824	"format"	"clob"	0	0	1	2
5831	5830	"result"	"inet"	0	0	0	0
5832	5830	"p"	"inet"	0	0	1	1
5835	5834	"result"	"clob"	0	0	0	0
5836	5834	"p"	"inet"	0	0	1	1
5839	5838	"result"	"int"	32	0	0	0
5840	5838	"p"	"inet"	0	0	1	1
5843	5842	"result"	"inet"	0	0	0	0
5844	5842	"p"	"inet"	0	0	1	1
5845	5842	"mask"	"int"	32	0	1	2
5848	5847	"result"	"inet"	0	0	0	0
5849	5847	"p"	"inet"	0	0	1	1
5852	5851	"result"	"inet"	0	0	0	0
5853	5851	"p"	"inet"	0	0	1	1
5856	5855	"result"	"inet"	0	0	0	0
5857	5855	"p"	"inet"	0	0	1	1
5860	5859	"result"	"clob"	0	0	0	0
5861	5859	"p"	"inet"	0	0	1	1
5864	5863	"result"	"clob"	0	0	0	0
5865	5863	"p"	"inet"	0	0	1	1
5868	5867	"result"	"boolean"	1	0	0	0
5869	5867	"i1"	"inet"	0	0	1	1
5870	5867	"i2"	"inet"	0	0	1	2
5873	5872	"result"	"boolean"	1	0	0	0
5874	5872	"i1"	"inet"	0	0	1	1
5875	5872	"i2"	"inet"	0	0	1	2
5878	5877	"result"	"boolean"	1	0	0	0
5879	5877	"i1"	"inet"	0	0	1	1
5880	5877	"i2"	"inet"	0	0	1	2
5883	5882	"result"	"boolean"	1	0	0	0
5884	5882	"i1"	"inet"	0	0	1	1
5885	5882	"i2"	"inet"	0	0	1	2
5888	5887	"id"	"oid"	63	0	0	0
5889	5887	"owner"	"clob"	0	0	0	1
5890	5887	"defined"	"timestamp"	7	0	0	2
5891	5887	"query"	"clob"	0	0	0	3
5892	5887	"pipe"	"clob"	0	0	0	4
5893	5887	"plan"	"clob"	0	0	0	5
5894	5887	"mal"	"int"	32	0	0	6
5895	5887	"optimize"	"bigint"	64	0	0	7
5898	5897	"id"	"oid"	63	0	0	0
5899	5897	"start"	"timestamp"	7	0	0	1
5900	5897	"stop"	"timestamp"	7	0	0	2
5901	5897	"arguments"	"clob"	0	0	0	3
5902	5897	"tuples"	"wrd"	64	0	0	4
5903	5897	"run"	"bigint"	64	0	0	5
5904	5897	"ship"	"bigint"	64	0	0	6
5905	5897	"cpu"	"int"	32	0	0	7
5906	5897	"io"	"int"	32	0	0	8
5952	5951	"threshold"	"smallint"	16	0	1	0
5957	5956	"event"	"int"	32	0	0	0
5958	5956	"clk"	"varchar"	20	0	0	1
5959	5956	"pc"	"varchar"	50	0	0	2
5960	5956	"thread"	"int"	32	0	0	3
5961	5956	"ticks"	"bigint"	64	0	0	4
5962	5956	"rrsmb"	"bigint"	64	0	0	5
5963	5956	"vmmb"	"bigint"	64	0	0	6
5964	5956	"reads"	"bigint"	64	0	0	7
5965	5956	"writes"	"bigint"	64	0	0	8
5966	5956	"minflt"	"bigint"	64	0	0	9
5967	5956	"majflt"	"bigint"	64	0	0	10
5968	5956	"nvcsw"	"bigint"	64	0	0	11
5969	5956	"stmt"	"clob"	0	0	0	12
5987	5986	"host"	"clob"	0	0	1	0
5988	5986	"port"	"int"	32	0	1	1
5991	5990	"ticks"	"int"	32	0	1	0
5994	5993	"result"	"timestamp"	7	0	0	0
5995	5993	"sec"	"bigint"	64	0	1	1
5998	5997	"result"	"timestamp"	7	0	0	0
5999	5997	"sec"	"int"	32	0	1	1
6002	6001	"result"	"int"	32	0	0	0
6003	6001	"ts"	"timestamp"	7	0	1	1
6006	6005	"sys"	"clob"	0	0	1	0
6007	6005	"tab"	"clob"	0	0	1	1
6010	6009	"sys"	"clob"	0	0	1	0
6011	6009	"tab"	"clob"	0	0	1	1
6014	6013	"sys"	"clob"	0	0	1	0
6015	6013	"tab"	"clob"	0	0	1	1
6018	6017	"sch"	"varchar"	100	0	0	0
6019	6017	"usr"	"varchar"	100	0	0	1
6020	6017	"dep_type"	"varchar"	32	0	0	2
6023	6022	"sch"	"varchar"	100	0	0	0
6024	6022	"usr"	"varchar"	100	0	0	1
6025	6022	"dep_type"	"varchar"	32	0	0	2
6028	6027	"sch"	"varchar"	100	0	0	0
6029	6027	"usr"	"varchar"	100	0	0	1
6030	6027	"dep_type"	"varchar"	32	0	0	2
6033	6032	"sch"	"varchar"	100	0	0	0
6034	6032	"usr"	"varchar"	100	0	0	1
6035	6032	"dep_type"	"varchar"	32	0	0	2
6038	6037	"sch"	"varchar"	100	0	0	0
6039	6037	"usr"	"varchar"	100	0	0	1
6040	6037	"dep_type"	"varchar"	32	0	0	2
6043	6042	"sch"	"varchar"	100	0	0	0
6044	6042	"usr"	"varchar"	100	0	0	1
6045	6042	"dep_type"	"varchar"	32	0	0	2
6048	6047	"sch"	"varchar"	100	0	0	0
6049	6047	"usr"	"varchar"	100	0	0	1
6050	6047	"dep_type"	"varchar"	32	0	0	2
6053	6052	"sch"	"varchar"	100	0	0	0
6054	6052	"usr"	"varchar"	100	0	0	1
6055	6052	"dep_type"	"varchar"	32	0	0	2
6058	6057	"sch"	"varchar"	100	0	0	0
6059	6057	"usr"	"varchar"	100	0	0	1
6060	6057	"dep_type"	"varchar"	32	0	0	2
6063	6062	"sch"	"varchar"	100	0	0	0
6064	6062	"usr"	"varchar"	100	0	0	1
6065	6062	"dep_type"	"varchar"	32	0	0	2
6068	6067	"sch"	"varchar"	100	0	0	0
6069	6067	"usr"	"varchar"	100	0	0	1
6070	6067	"dep_type"	"varchar"	32	0	0	2
6073	6072	"sch"	"varchar"	100	0	0	0
6074	6072	"usr"	"varchar"	100	0	0	1
6075	6072	"dep_type"	"varchar"	32	0	0	2
6078	6077	"sch"	"varchar"	100	0	0	0
6079	6077	"usr"	"varchar"	100	0	0	1
6080	6077	"dep_type"	"varchar"	32	0	0	2
6083	6082	"sch"	"varchar"	100	0	0	0
6084	6082	"usr"	"varchar"	100	0	0	1
6085	6082	"dep_type"	"varchar"	32	0	0	2
6088	6087	"sch"	"varchar"	100	0	0	0
6089	6087	"usr"	"varchar"	100	0	0	1
6090	6087	"dep_type"	"varchar"	32	0	0	2
6093	6092	"sch"	"varchar"	100	0	0	0
6094	6092	"usr"	"varchar"	100	0	0	1
6095	6092	"dep_type"	"varchar"	32	0	0	2
6098	6097	"sch"	"varchar"	100	0	0	0
6099	6097	"usr"	"varchar"	100	0	0	1
6100	6097	"dep_type"	"varchar"	32	0	0	2
6103	6102	"result"	"clob"	0	0	0	0
6104	6102	"username"	"clob"	0	0	1	1
6107	6106	"user"	"clob"	0	0	0	0
6108	6106	"login"	"timestamp"	7	0	0	1
6109	6106	"sessiontimeout"	"bigint"	64	0	0	2
6110	6106	"lastcommand"	"timestamp"	7	0	0	3
6111	6106	"querytimeout"	"bigint"	64	0	0	4
6112	6106	"active"	"boolean"	1	0	0	5
6123	6122	"delay"	"tinyint"	8	0	1	0
6126	6125	"delay"	"tinyint"	8	0	1	0
6127	6125	"force"	"boolean"	1	0	1	1
6130	6129	"query"	"bigint"	64	0	1	0
6133	6132	"query"	"bigint"	64	0	1	0
6134	6132	"session"	"bigint"	64	0	1	1
6137	6136	"timeout"	"bigint"	64	0	1	0
6140	6139	"result"	"varchar"	32	0	0	0
6141	6139	"s1"	"varchar"	32	0	1	1
6142	6139	"st"	"int"	32	0	1	2
6143	6139	"len"	"int"	32	0	1	3
6144	6139	"s3"	"varchar"	32	0	1	4
6147	6146	"result"	"double"	53	0	0	0
6148	6146	"num"	"double"	53	0	1	1
6149	6146	"prc"	"int"	32	0	1	2
6152	6151	"result"	"double"	53	0	0	0
6153	6151	"num"	"double"	53	0	1	1
6154	6151	"prc"	"int"	32	0	1	2
6155	6151	"truncat"	"int"	32	0	1	3
6158	6157	"result"	"clob"	0	0	0	0
6159	6157	"num"	"double"	53	0	1	1
6160	6157	"prc"	"int"	32	0	1	2
6161	6157	"truncat"	"int"	32	0	1	3
6164	6163	"result"	"double"	53	0	0	0
6165	6163	"pdec"	"double"	53	0	1	1
6166	6163	"pradius"	"double"	53	0	1	2
6169	6168	"result"	"oid"	63	0	0	0
6170	6168	"x"	"int"	32	0	1	1
6171	6168	"y"	"int"	32	0	1	2
6174	6173	"result"	"int"	32	0	0	0
6175	6173	"z"	"oid"	63	0	1	1
6178	6177	"result"	"int"	32	0	0	0
6179	6177	"z"	"oid"	63	0	1	1
6182	6181	"rewrite"	"clob"	0	0	0	0
6183	6181	"count"	"int"	32	0	0	1
6186	6185	"query"	"clob"	0	0	0	0
6187	6185	"count"	"int"	32	0	0	1
6190	6189	"filename"	"clob"	0	0	1	0
6193	6192	"name"	"clob"	0	0	0	0
6194	6192	"def"	"clob"	0	0	0	1
6195	6192	"status"	"clob"	0	0	0	2
6203	6202	"name"	"clob"	0	0	0	0
6204	6202	"value"	"clob"	0	0	0	1
6211	6210	"id"	"int"	32	0	0	0
6212	6210	"name"	"clob"	0	0	0	1
6213	6210	"htype"	"clob"	0	0	0	2
6214	6210	"ttype"	"clob"	0	0	0	3
6215	6210	"count"	"bigint"	64	0	0	4
6216	6210	"refcnt"	"int"	32	0	0	5
6217	6210	"lrefcnt"	"int"	32	0	0	6
6218	6210	"location"	"clob"	0	0	0	7
6219	6210	"heat"	"int"	32	0	0	8
6220	6210	"dirty"	"clob"	0	0	0	9
6221	6210	"status"	"clob"	0	0	0	10
6222	6210	"kind"	"clob"	0	0	0	11
6225	6224	"ra_stmt"	"clob"	0	0	1	0
6226	6224	"opt"	"boolean"	1	0	1	1
6229	6228	"qtag"	"bigint"	64	0	0	0
6230	6228	"user"	"clob"	0	0	0	1
6231	6228	"started"	"timestamp"	7	0	0	2
6232	6228	"estimate"	"timestamp"	7	0	0	3
6233	6228	"progress"	"int"	32	0	0	4
6234	6228	"status"	"clob"	0	0	0	5
6235	6228	"tag"	"oid"	63	0	0	6
6236	6228	"query"	"clob"	0	0	0	7
6249	6248	"tag"	"int"	32	0	1	0
6252	6251	"tag"	"int"	32	0	1	0
6255	6254	"tag"	"int"	32	0	1	0
6258	6257	"tag"	"bigint"	64	0	1	0
6261	6260	"tag"	"bigint"	64	0	1	0
6264	6263	"tag"	"bigint"	64	0	1	0
6267	6266	"result"	"double"	53	0	0	0
6268	6266	"val"	"tinyint"	8	0	1	1
6271	6270	"result"	"double"	53	0	0	0
6272	6270	"val"	"smallint"	16	0	1	1
6275	6274	"result"	"double"	53	0	0	0
6276	6274	"val"	"int"	32	0	1	1
6279	6278	"result"	"double"	53	0	0	0
6280	6278	"val"	"wrd"	64	0	1	1
6283	6282	"result"	"double"	53	0	0	0
6284	6282	"val"	"bigint"	64	0	1	1
6287	6286	"result"	"double"	53	0	0	0
6288	6286	"val"	"real"	24	0	1	1
6291	6290	"result"	"double"	53	0	0	0
6292	6290	"val"	"double"	53	0	1	1
6295	6294	"result"	"double"	53	0	0	0
6296	6294	"val"	"date"	0	0	1	1
6299	6298	"result"	"double"	53	0	0	0
6300	6298	"val"	"time"	1	0	1	1
6303	6302	"result"	"double"	53	0	0	0
6304	6302	"val"	"timestamp"	7	0	1	1
6307	6306	"result"	"double"	53	0	0	0
6308	6306	"val"	"tinyint"	8	0	1	1
6311	6310	"result"	"double"	53	0	0	0
6312	6310	"val"	"smallint"	16	0	1	1
6315	6314	"result"	"double"	53	0	0	0
6316	6314	"val"	"int"	32	0	1	1
6319	6318	"result"	"double"	53	0	0	0
6320	6318	"val"	"wrd"	64	0	1	1
6323	6322	"result"	"double"	53	0	0	0
6324	6322	"val"	"bigint"	64	0	1	1
6327	6326	"result"	"double"	53	0	0	0
6328	6326	"val"	"real"	24	0	1	1
6331	6330	"result"	"double"	53	0	0	0
6332	6330	"val"	"double"	53	0	1	1
6335	6334	"result"	"double"	53	0	0	0
6336	6334	"val"	"date"	0	0	1	1
6339	6338	"result"	"double"	53	0	0	0
6340	6338	"val"	"time"	1	0	1	1
6343	6342	"result"	"double"	53	0	0	0
6344	6342	"val"	"timestamp"	7	0	1	1
6347	6346	"result"	"double"	53	0	0	0
6348	6346	"val"	"tinyint"	8	0	1	1
6351	6350	"result"	"double"	53	0	0	0
6352	6350	"val"	"smallint"	16	0	1	1
6355	6354	"result"	"double"	53	0	0	0
6356	6354	"val"	"int"	32	0	1	1
6359	6358	"result"	"double"	53	0	0	0
6360	6358	"val"	"wrd"	64	0	1	1
6363	6362	"result"	"double"	53	0	0	0
6364	6362	"val"	"bigint"	64	0	1	1
6367	6366	"result"	"double"	53	0	0	0
6368	6366	"val"	"real"	24	0	1	1
6371	6370	"result"	"double"	53	0	0	0
6372	6370	"val"	"double"	53	0	1	1
6375	6374	"result"	"double"	53	0	0	0
6376	6374	"val"	"date"	0	0	1	1
6379	6378	"result"	"double"	53	0	0	0
6380	6378	"val"	"time"	1	0	1	1
6383	6382	"result"	"double"	53	0	0	0
6384	6382	"val"	"timestamp"	7	0	1	1
6387	6386	"result"	"double"	53	0	0	0
6388	6386	"val"	"tinyint"	8	0	1	1
6391	6390	"result"	"double"	53	0	0	0
6392	6390	"val"	"smallint"	16	0	1	1
6395	6394	"result"	"double"	53	0	0	0
6396	6394	"val"	"int"	32	0	1	1
6399	6398	"result"	"double"	53	0	0	0
6400	6398	"val"	"wrd"	64	0	1	1
6403	6402	"result"	"double"	53	0	0	0
6404	6402	"val"	"bigint"	64	0	1	1
6407	6406	"result"	"double"	53	0	0	0
6408	6406	"val"	"real"	24	0	1	1
6411	6410	"result"	"double"	53	0	0	0
6412	6410	"val"	"double"	53	0	1	1
6415	6414	"result"	"double"	53	0	0	0
6416	6414	"val"	"date"	0	0	1	1
6419	6418	"result"	"double"	53	0	0	0
6420	6418	"val"	"time"	1	0	1	1
6423	6422	"result"	"double"	53	0	0	0
6424	6422	"val"	"timestamp"	7	0	1	1
6427	6426	"result"	"tinyint"	8	0	0	0
6428	6426	"val"	"tinyint"	8	0	1	1
6431	6430	"result"	"smallint"	16	0	0	0
6432	6430	"val"	"smallint"	16	0	1	1
6435	6434	"result"	"int"	32	0	0	0
6436	6434	"val"	"int"	32	0	1	1
6439	6438	"result"	"wrd"	64	0	0	0
6440	6438	"val"	"wrd"	64	0	1	1
6443	6442	"result"	"bigint"	64	0	0	0
6444	6442	"val"	"bigint"	64	0	1	1
6447	6446	"result"	"decimal"	18	3	0	0
6448	6446	"val"	"decimal"	18	3	1	1
6451	6450	"result"	"real"	24	0	0	0
6452	6450	"val"	"real"	24	0	1	1
6455	6454	"result"	"double"	53	0	0	0
6456	6454	"val"	"double"	53	0	1	1
6459	6458	"result"	"date"	0	0	0	0
6460	6458	"val"	"date"	0	0	1	1
6463	6462	"result"	"time"	1	0	0	0
6464	6462	"val"	"time"	1	0	1	1
6467	6466	"result"	"timestamp"	7	0	0	0
6468	6466	"val"	"timestamp"	7	0	1	1
6471	6470	"result"	"tinyint"	8	0	0	0
6472	6470	"val"	"tinyint"	8	0	1	1
6473	6470	"q"	"double"	53	0	1	2
6476	6475	"result"	"smallint"	16	0	0	0
6477	6475	"val"	"smallint"	16	0	1	1
6478	6475	"q"	"double"	53	0	1	2
6481	6480	"result"	"int"	32	0	0	0
6482	6480	"val"	"int"	32	0	1	1
6483	6480	"q"	"double"	53	0	1	2
6486	6485	"result"	"wrd"	64	0	0	0
6487	6485	"val"	"wrd"	64	0	1	1
6488	6485	"q"	"double"	53	0	1	2
6491	6490	"result"	"bigint"	64	0	0	0
6492	6490	"val"	"bigint"	64	0	1	1
6493	6490	"q"	"double"	53	0	1	2
6496	6495	"result"	"decimal"	18	3	0	0
6497	6495	"val"	"decimal"	18	3	1	1
6498	6495	"q"	"double"	53	0	1	2
6501	6500	"result"	"real"	24	0	0	0
6502	6500	"val"	"real"	24	0	1	1
6503	6500	"q"	"double"	53	0	1	2
6506	6505	"result"	"double"	53	0	0	0
6507	6505	"val"	"double"	53	0	1	1
6508	6505	"q"	"double"	53	0	1	2
6511	6510	"result"	"date"	0	0	0	0
6512	6510	"val"	"date"	0	0	1	1
6513	6510	"q"	"double"	53	0	1	2
6516	6515	"result"	"time"	1	0	0	0
6517	6515	"val"	"time"	1	0	1	1
6518	6515	"q"	"double"	53	0	1	2
6521	6520	"result"	"timestamp"	7	0	0	0
6522	6520	"val"	"timestamp"	7	0	1	1
6523	6520	"q"	"double"	53	0	1	2
6526	6525	"result"	"tinyint"	8	0	0	0
6527	6525	"e1"	"tinyint"	8	0	1	1
6528	6525	"e2"	"tinyint"	8	0	1	2
6531	6530	"result"	"smallint"	16	0	0	0
6532	6530	"e1"	"smallint"	16	0	1	1
6533	6530	"e2"	"smallint"	16	0	1	2
6536	6535	"result"	"int"	32	0	0	0
6537	6535	"e1"	"int"	32	0	1	1
6538	6535	"e2"	"int"	32	0	1	2
6541	6540	"result"	"wrd"	64	0	0	0
6542	6540	"e1"	"wrd"	64	0	1	1
6543	6540	"e2"	"wrd"	64	0	1	2
6546	6545	"result"	"bigint"	64	0	0	0
6547	6545	"e1"	"bigint"	64	0	1	1
6548	6545	"e2"	"bigint"	64	0	1	2
6551	6550	"result"	"real"	24	0	0	0
6552	6550	"e1"	"real"	24	0	1	1
6553	6550	"e2"	"real"	24	0	1	2
6556	6555	"result"	"double"	53	0	0	0
6557	6555	"e1"	"double"	53	0	1	1
6558	6555	"e2"	"double"	53	0	1	2
6561	6560	"result"	"int"	32	0	0	0
6562	6560	"info"	"int"	32	0	1	1
6565	6564	"result"	"int"	32	0	0	0
6566	6564	"info"	"int"	32	0	1	1
6569	6568	"result"	"clob"	0	0	0	0
6570	6568	"info"	"int"	32	0	1	1
6571	6568	"format"	"int"	32	0	1	2
6593	6592	"result"	"mbr"	0	0	0	0
6594	6592	"geom"	"geometry"	0	0	1	1
6597	6596	"result"	"boolean"	1	0	0	0
6598	6596	"box1"	"mbr"	0	0	1	1
6599	6596	"box2"	"mbr"	0	0	1	2
6602	6601	"result"	"boolean"	1	0	0	0
6603	6601	"box1"	"mbr"	0	0	1	1
6604	6601	"box2"	"mbr"	0	0	1	2
6607	6606	"result"	"boolean"	1	0	0	0
6608	6606	"box1"	"mbr"	0	0	1	1
6609	6606	"box2"	"mbr"	0	0	1	2
6612	6611	"result"	"double"	53	0	0	0
6613	6611	"box1"	"mbr"	0	0	1	1
6614	6611	"box2"	"mbr"	0	0	1	2
6617	6616	"result"	"geometry"	0	0	0	0
6618	6616	"wkt"	"clob"	0	0	1	1
6621	6620	"result"	"geometry"	0	0	0	0
6622	6620	"geom"	"clob"	0	0	1	1
6625	6624	"result"	"clob"	0	0	0	0
6626	6624	"geom"	"geometry"	0	0	1	1
6629	6628	"result"	"clob"	0	0	0	0
6630	6628	"geom"	"geometry"	0	0	1	1
6633	6632	"result"	"int"	32	0	0	0
6634	6632	"geom"	"geometry"	0	0	1	1
6637	6636	"result"	"clob"	0	0	0	0
6638	6636	"geom"	"geometry"	0	0	1	1
6641	6640	"result"	"int"	32	0	0	0
6642	6640	"geom"	"geometry"	0	0	1	1
6645	6644	"result"	"geometry"	0	0	0	0
6646	6644	"geom"	"geometry"	0	0	1	1
6647	6644	"srid"	"int"	32	0	1	2
6650	6649	"result"	"boolean"	1	0	0	0
6651	6649	"geom"	"geometry"	0	0	1	1
6654	6653	"result"	"boolean"	1	0	0	0
6655	6653	"geom"	"geometry"	0	0	1	1
6658	6657	"result"	"geometry"	0	0	0	0
6659	6657	"geom"	"geometry"	0	0	1	1
6662	6661	"result"	"geometry"	0	0	0	0
6663	6661	"geom"	"geometry"	0	0	1	1
6666	6665	"result"	"boolean"	1	0	0	0
6667	6665	"geom1"	"geometry"	0	0	1	1
6668	6665	"geom2"	"geometry"	0	0	1	2
6671	6670	"result"	"boolean"	1	0	0	0
6672	6670	"geom1"	"geometry"	0	0	1	1
6673	6670	"geom2"	"geometry"	0	0	1	2
6676	6675	"result"	"boolean"	1	0	0	0
6677	6675	"geom1"	"geometry"	0	0	1	1
6678	6675	"geom2"	"geometry"	0	0	1	2
6681	6680	"result"	"boolean"	1	0	0	0
6682	6680	"geom1"	"geometry"	0	0	1	1
6683	6680	"geom2"	"geometry"	0	0	1	2
6686	6685	"result"	"boolean"	1	0	0	0
6687	6685	"geom1"	"geometry"	0	0	1	1
6688	6685	"geom2"	"geometry"	0	0	1	2
6691	6690	"result"	"boolean"	1	0	0	0
6692	6690	"geom1"	"geometry"	0	0	1	1
6693	6690	"geom2"	"geometry"	0	0	1	2
6696	6695	"result"	"boolean"	1	0	0	0
6697	6695	"geom1"	"geometry"	0	0	1	1
6698	6695	"geom2"	"geometry"	0	0	1	2
6701	6700	"result"	"boolean"	1	0	0	0
6702	6700	"geom1"	"geometry"	0	0	1	1
6703	6700	"geom2"	"geometry"	0	0	1	2
6706	6705	"result"	"boolean"	1	0	0	0
6707	6705	"geom1"	"geometry"	0	0	1	1
6708	6705	"geom2"	"geometry"	0	0	1	2
6709	6705	"intersection_matrix_pattern"	"clob"	0	0	1	3
6712	6711	"result"	"double"	53	0	0	0
6713	6711	"geom1"	"geometry"	0	0	1	1
6714	6711	"geom2"	"geometry"	0	0	1	2
6717	6716	"result"	"geometry"	0	0	0	0
6718	6716	"geom1"	"geometry"	0	0	1	1
6719	6716	"geom2"	"geometry"	0	0	1	2
6722	6721	"result"	"geometry"	0	0	0	0
6723	6721	"geom1"	"geometry"	0	0	1	1
6724	6721	"geom2"	"geometry"	0	0	1	2
6727	6726	"result"	"geometry"	0	0	0	0
6728	6726	"geom1"	"geometry"	0	0	1	1
6729	6726	"geom2"	"geometry"	0	0	1	2
6732	6731	"result"	"geometry"	0	0	0	0
6733	6731	"geom"	"geometry"	0	0	1	1
6736	6735	"result"	"geometry"	0	0	0	0
6737	6735	"geom1"	"geometry"	0	0	1	1
6738	6735	"geom2"	"geometry"	0	0	1	2
6741	6740	"result"	"geometry"	0	0	0	0
6742	6740	"geom"	"geometry"	0	0	1	1
6743	6740	"radius"	"double"	53	0	1	2
6746	6745	"result"	"geometry"	0	0	0	0
6747	6745	"geom"	"geometry"	0	0	1	1
6750	6749	"result"	"double"	53	0	0	0
6751	6749	"geom"	"geometry"	0	0	1	1
6754	6753	"result"	"double"	53	0	0	0
6755	6753	"geom"	"geometry"	0	0	1	1
6758	6757	"result"	"double"	53	0	0	0
6759	6757	"geom"	"geometry"	0	0	1	1
6762	6761	"result"	"geometry"	0	0	0	0
6763	6761	"geom"	"geometry"	0	0	1	1
6766	6765	"result"	"geometry"	0	0	0	0
6767	6765	"geom"	"geometry"	0	0	1	1
6770	6769	"result"	"boolean"	1	0	0	0
6771	6769	"geom"	"geometry"	0	0	1	1
6774	6773	"result"	"double"	53	0	0	0
6775	6773	"geom"	"geometry"	0	0	1	1
6778	6777	"result"	"boolean"	1	0	0	0
6779	6777	"geom"	"geometry"	0	0	1	1
6782	6781	"result"	"int"	32	0	0	0
6783	6781	"geom"	"geometry"	0	0	1	1
6786	6785	"result"	"geometry"	0	0	0	0
6787	6785	"geom"	"geometry"	0	0	1	1
6788	6785	"positionnum"	"int"	32	0	1	2
6791	6790	"result"	"geometry"	0	0	0	0
6792	6790	"geom"	"geometry"	0	0	1	1
6795	6794	"result"	"geometry"	0	0	0	0
6796	6794	"geom"	"geometry"	0	0	1	1
6799	6798	"result"	"double"	53	0	0	0
6800	6798	"geom"	"geometry"	0	0	1	1
6803	6802	"result"	"geometry"	0	0	0	0
6804	6802	"geom"	"geometry"	0	0	1	1
6807	6806	"result"	"geometry"	0	0	0	0
6808	6806	"geom"	"geometry"	0	0	1	1
6811	6810	"result"	"int"	32	0	0	0
6812	6810	"geom"	"geometry"	0	0	1	1
6815	6814	"result"	"geometry"	0	0	0	0
6816	6814	"geom"	"geometry"	0	0	1	1
6817	6814	"positionnum"	"int"	32	0	1	2
6820	6819	"result"	"geometrya"	0	0	0	0
6821	6819	"geom"	"geometry"	0	0	1	1
6824	6823	"result"	"int"	32	0	0	0
6825	6823	"geom"	"geometry"	0	0	1	1
6828	6827	"result"	"geometry"	0	0	0	0
6829	6827	"geom"	"geometry"	0	0	1	1
6830	6827	"positionnum"	"int"	32	0	1	2
6833	6832	"result"	"int"	32	0	0	0
6834	6832	"geom"	"geometry"	0	0	1	1
6837	6836	"result"	"geometry"	0	0	0	0
6838	6836	"geom"	"geometry"	0	0	1	1
6839	6836	"patchnum"	"int"	32	0	1	2
6842	6841	"result"	"geometry"	0	0	0	0
6843	6841	"wkt"	"clob"	0	0	1	1
6844	6841	"srid"	"int"	32	0	1	2
6847	6846	"result"	"geometry"	0	0	0	0
6848	6846	"wkt"	"clob"	0	0	1	1
6849	6846	"srid"	"int"	32	0	1	2
6852	6851	"result"	"geometry"	0	0	0	0
6853	6851	"wkt"	"clob"	0	0	1	1
6854	6851	"srid"	"int"	32	0	1	2
6857	6856	"result"	"geometry"	0	0	0	0
6858	6856	"wkt"	"clob"	0	0	1	1
6859	6856	"srid"	"int"	32	0	1	2
6862	6861	"result"	"geometry"	0	0	0	0
6863	6861	"wkt"	"clob"	0	0	1	1
6864	6861	"srid"	"int"	32	0	1	2
6867	6866	"result"	"geometry"	0	0	0	0
6868	6866	"wkt"	"clob"	0	0	1	1
6869	6866	"srid"	"int"	32	0	1	2
6872	6871	"result"	"geometry"	0	0	0	0
6873	6871	"wkt"	"clob"	0	0	1	1
6874	6871	"srid"	"int"	32	0	1	2
6877	6876	"result"	"geometry"	0	0	0	0
6878	6876	"wkt"	"clob"	0	0	1	1
6879	6876	"srid"	"int"	32	0	1	2
6882	6881	"result"	"geometry"	0	0	0	0
6883	6881	"wkt"	"clob"	0	0	1	1
6884	6881	"srid"	"int"	32	0	1	2
6887	6886	"result"	"geometry"	0	0	0	0
6888	6886	"wkt"	"clob"	0	0	1	1
6889	6886	"srid"	"int"	32	0	1	2
6892	6891	"result"	"geometry"	0	0	0	0
6893	6891	"wkt"	"clob"	0	0	1	1
6894	6891	"srid"	"int"	32	0	1	2
6897	6896	"result"	"geometry"	0	0	0	0
6898	6896	"wkt"	"clob"	0	0	1	1
6901	6900	"result"	"geometry"	0	0	0	0
6902	6900	"wkt"	"clob"	0	0	1	1
6905	6904	"result"	"geometry"	0	0	0	0
6906	6904	"wkt"	"clob"	0	0	1	1
6909	6908	"result"	"geometry"	0	0	0	0
6910	6908	"wkt"	"clob"	0	0	1	1
6913	6912	"result"	"geometry"	0	0	0	0
6914	6912	"wkt"	"clob"	0	0	1	1
6917	6916	"result"	"geometry"	0	0	0	0
6918	6916	"wkt"	"clob"	0	0	1	1
6921	6920	"result"	"geometry"	0	0	0	0
6922	6920	"wkt"	"clob"	0	0	1	1
6925	6924	"result"	"geometry"	0	0	0	0
6926	6924	"wkt"	"clob"	0	0	1	1
6929	6928	"result"	"geometry"	0	0	0	0
6930	6928	"wkt"	"clob"	0	0	1	1
6933	6932	"result"	"geometry"	0	0	0	0
6934	6932	"x"	"double"	53	0	1	1
6935	6932	"y"	"double"	53	0	1	2
6938	6937	"result"	"geometry"	0	0	0	0
6939	6937	"x"	"double"	53	0	1	1
6940	6937	"y"	"double"	53	0	1	2
6943	6942	"result"	"geometry"	0	0	0	0
6944	6942	"x"	"double"	53	0	1	1
6945	6942	"y"	"double"	53	0	1	2
6946	6942	"z"	"double"	53	0	1	3
6949	6948	"result"	"geometry"	0	0	0	0
6950	6948	"x"	"double"	53	0	1	1
6951	6948	"y"	"double"	53	0	1	2
6952	6948	"z"	"double"	53	0	1	3
6953	6948	"m"	"double"	53	0	1	4
6956	6955	"result"	"geometry"	0	0	0	0
6957	6955	"x"	"double"	53	0	1	1
6958	6955	"y"	"double"	53	0	1	2
6959	6955	"m"	"double"	53	0	1	3
6962	6961	"result"	"geometry"	0	0	0	0
6963	6961	"geom"	"geometry"	0	0	1	1
6966	6965	"result"	"geometry"	0	0	0	0
6967	6965	"geom1"	"geometry"	0	0	1	1
6968	6965	"geom2"	"geometry"	0	0	1	2
6971	6970	"result"	"geometry"	0	0	0	0
6972	6970	"xmin"	"double"	53	0	1	1
6973	6970	"ymin"	"double"	53	0	1	2
6974	6970	"xmax"	"double"	53	0	1	3
6975	6970	"ymax"	"double"	53	0	1	4
6976	6970	"srid"	"int"	32	0	1	5
6979	6978	"result"	"geometry"	0	0	0	0
6980	6978	"xmin"	"double"	53	0	1	1
6981	6978	"ymin"	"double"	53	0	1	2
6982	6978	"xmax"	"double"	53	0	1	3
6983	6978	"ymax"	"double"	53	0	1	4
6986	6985	"result"	"geometry"	0	0	0	0
6987	6985	"geom"	"geometry"	0	0	1	1
6990	6989	"result"	"geometry"	0	0	0	0
6991	6989	"geom"	"geometry"	0	0	1	1
6992	6989	"srid"	"int"	32	0	1	2
6995	6994	"result"	"mbr"	0	0	0	0
6996	6994	"lowleftpointgeom"	"geometry"	0	0	1	1
6997	6994	"uprightpointgeom"	"geometry"	0	0	1	2
7000	6999	"result"	"clob"	0	0	0	0
7001	6999	"geom"	"geometry"	0	0	1	1
7004	7003	"result"	"int"	32	0	0	0
7005	7003	"geom"	"geometry"	0	0	1	1
7008	7007	"result"	"boolean"	1	0	0	0
7009	7007	"geom"	"geometry"	0	0	1	1
7012	7011	"result"	"clob"	0	0	0	0
7013	7011	"geom"	"geometry"	0	0	1	1
7016	7015	"result"	"int"	32	0	0	0
7017	7015	"geom"	"geometry"	0	0	1	1
7020	7019	"result"	"int"	32	0	0	0
7021	7019	"geom"	"geometry"	0	0	1	1
7024	7023	"result"	"int"	32	0	0	0
7025	7023	"geom"	"geometry"	0	0	1	1
7028	7027	"result"	"double"	53	0	0	0
7029	7027	"geom"	"geometry"	0	0	1	1
7032	7031	"result"	"double"	53	0	0	0
7033	7031	"box"	"mbr"	0	0	1	1
7036	7035	"result"	"double"	53	0	0	0
7037	7035	"geom"	"geometry"	0	0	1	1
7040	7039	"result"	"double"	53	0	0	0
7041	7039	"box"	"mbr"	0	0	1	1
7044	7043	"result"	"double"	53	0	0	0
7045	7043	"geom"	"geometry"	0	0	1	1
7048	7047	"result"	"double"	53	0	0	0
7049	7047	"box"	"mbr"	0	0	1	1
7052	7051	"result"	"double"	53	0	0	0
7053	7051	"geom"	"geometry"	0	0	1	1
7056	7055	"result"	"double"	53	0	0	0
7057	7055	"box"	"mbr"	0	0	1	1
7060	7059	"result"	"geometry"	0	0	0	0
7061	7059	"geom"	"geometry"	0	0	1	1
7064	7063	"result"	"geometry"	0	0	0	0
7065	7063	"geom"	"geometry"	0	0	1	1
7068	7067	"result"	"geometry"	0	0	0	0
7069	7067	"geom"	"geometry"	0	0	1	1
7070	7067	"sz"	"double"	53	0	1	2
7073	7072	"result"	"clob"	0	0	0	0
7074	7072	"srid_in"	"int"	32	0	1	1
7077	7076	"result"	"geometry"	0	0	0	0
7078	7076	"geom"	"geometry"	0	0	1	1
7079	7076	"srid_src"	"int"	32	0	1	2
7080	7076	"srid_dest"	"int"	32	0	1	3
7081	7076	"proj4_src"	"clob"	0	0	1	4
7082	7076	"proj4_dest"	"clob"	0	0	1	5
7085	7084	"result"	"geometry"	0	0	0	0
7086	7084	"geom"	"geometry"	0	0	1	1
7087	7084	"srid"	"int"	32	0	1	2
7090	7089	"result"	"geometry"	0	0	0	0
7091	7089	"geom"	"geometry"	0	0	1	1
7092	7089	"dx"	"double"	53	0	1	2
7093	7089	"dy"	"double"	53	0	1	3
7096	7095	"result"	"geometry"	0	0	0	0
7097	7095	"geom"	"geometry"	0	0	1	1
7098	7095	"dx"	"double"	53	0	1	2
7099	7095	"dy"	"double"	53	0	1	3
7100	7095	"dz"	"double"	53	0	1	4
7103	7102	"result"	"clob"	0	0	0	0
7104	7102	"geom"	"geometry"	0	0	1	1
7107	7106	"result"	"boolean"	1	0	0	0
7108	7106	"geom1"	"geometry"	0	0	1	1
7109	7106	"geom2"	"geometry"	0	0	1	2
7112	7111	"result"	"boolean"	1	0	0	0
7113	7111	"geom1"	"geometry"	0	0	1	1
7114	7111	"geom2"	"geometry"	0	0	1	2
7117	7116	"result"	"boolean"	1	0	0	0
7118	7116	"geom1"	"geometry"	0	0	1	1
7119	7116	"geom2"	"geometry"	0	0	1	2
7120	7116	"dst"	"double"	53	0	1	3
7123	7122	"result"	"double"	53	0	0	0
7124	7122	"geom"	"geometry"	0	0	1	1
7127	7126	"result"	"geometry"	0	0	0	0
7128	7126	"geom1"	"geometry"	0	0	1	1
7129	7126	"geom2"	"geometry"	0	0	1	2
7132	7131	"result"	"geometry"	0	0	0	0
7133	7131	"geom"	"geometry"	0	0	1	1
7136	7135	"result"	"geometry"	0	0	0	0
7137	7135	"geom"	"geometry"	0	0	1	1
7138	7135	"tolerance"	"double"	53	0	1	2
7139	7135	"flags"	"int"	32	0	1	3
7142	7141	"id"	"clob"	0	0	0	0
7143	7141	"polygonwkb"	"geometry"	0	0	0	1
7144	7141	"geom"	"geometry"	0	0	1	2
7147	7146	"path"	"clob"	0	0	0	0
7148	7146	"pointg"	"geometry"	0	0	0	1
7149	7146	"geom"	"geometry"	0	0	1	2
7154	7153	"result"	"json"	0	0	0	0
7155	7153	"js"	"json"	0	0	1	1
7156	7153	"pathexpr"	"clob"	0	0	1	2
7159	7158	"result"	"json"	0	0	0	0
7160	7158	"js"	"json"	0	0	1	1
7161	7158	"name"	"tinyint"	8	0	1	2
7164	7163	"result"	"json"	0	0	0	0
7165	7163	"js"	"json"	0	0	1	1
7166	7163	"name"	"int"	32	0	1	2
7169	7168	"result"	"json"	0	0	0	0
7170	7168	"js"	"json"	0	0	1	1
7171	7168	"name"	"bigint"	64	0	1	2
7174	7173	"result"	"clob"	0	0	0	0
7175	7173	"js"	"json"	0	0	1	1
7176	7173	"e"	"clob"	0	0	1	2
7179	7178	"result"	"double"	53	0	0	0
7180	7178	"js"	"json"	0	0	1	1
7183	7182	"result"	"bigint"	64	0	0	0
7184	7182	"js"	"json"	0	0	1	1
7187	7186	"result"	"boolean"	1	0	0	0
7188	7186	"js"	"clob"	0	0	1	1
7191	7190	"result"	"boolean"	1	0	0	0
7192	7190	"js"	"clob"	0	0	1	1
7195	7194	"result"	"boolean"	1	0	0	0
7196	7194	"js"	"clob"	0	0	1	1
7199	7198	"result"	"boolean"	1	0	0	0
7200	7198	"js"	"json"	0	0	1	1
7203	7202	"result"	"boolean"	1	0	0	0
7204	7202	"js"	"json"	0	0	1	1
7207	7206	"result"	"boolean"	1	0	0	0
7208	7206	"js"	"json"	0	0	1	1
7211	7210	"result"	"int"	32	0	0	0
7212	7210	"js"	"json"	0	0	1	1
7215	7214	"result"	"json"	0	0	0	0
7216	7214	"js"	"json"	0	0	1	1
7219	7218	"result"	"json"	0	0	0	0
7220	7218	"js"	"json"	0	0	1	1
7223	7222	"result"	"clob"	0	0	0	0
7224	7222	"js"	"json"	0	0	1	1
7227	7226	"result"	"clob"	0	0	0	0
7228	7226	"js"	"clob"	0	0	1	1
7231	7230	"result"	"clob"	0	0	0	0
7232	7230	"js"	"int"	32	0	1	1
7235	7234	"result"	"clob"	0	0	0	0
7236	7234	"js"	"json"	0	0	1	1
7239	7238	"result"	"clob"	0	0	0	0
7240	7238	"x"	"clob"	0	0	1	1
7243	7242	"result"	"clob"	0	0	0	0
7244	7242	"x"	"double"	53	0	1	1
7247	7246	"result"	"clob"	0	0	0	0
7248	7246	"v"	"clob"	0	0	1	1
7252	7251	"result"	"uuid"	0	0	0	0
7255	7254	"result"	"uuid"	0	0	0	0
7256	7254	"u"	"uuid"	0	0	1	1
7259	7258	"result"	"uuid"	0	0	0	0
7260	7258	"u"	"clob"	0	0	1	1
7263	7262	"result"	"double"	53	0	0	0
7264	7262	"chi2"	"double"	53	0	1	1
7265	7262	"datapoints"	"double"	53	0	1	2
7268	7267	"dirname"	"clob"	0	0	1	0
7271	7270	"fname"	"clob"	0	0	1	0
7274	7273	"tname"	"clob"	0	0	1	0
7277	7276	"dirname"	"clob"	0	0	1	0
7278	7276	"pat"	"clob"	0	0	1	1
7313	7312	"fname"	"varchar"	256	0	1	0
7316	7315	"fid"	"int"	32	0	1	0
7317	7315	"varnname"	"varchar"	256	0	1	1
7320	7319	"schema"	"clob"	0	0	0	0
7321	7319	"table"	"clob"	0	0	0	1
7322	7319	"column"	"clob"	0	0	0	2
7323	7319	"type"	"clob"	0	0	0	3
7324	7319	"mode"	"clob"	0	0	0	4
7325	7319	"location"	"clob"	0	0	0	5
7326	7319	"count"	"bigint"	64	0	0	6
7327	7319	"typewidth"	"int"	32	0	0	7
7328	7319	"columnsize"	"bigint"	64	0	0	8
7329	7319	"heapsize"	"bigint"	64	0	0	9
7330	7319	"hashes"	"bigint"	64	0	0	10
7331	7319	"phash"	"boolean"	1	0	0	11
7332	7319	"imprints"	"bigint"	64	0	0	12
7333	7319	"sorted"	"boolean"	1	0	0	13
7366	7365	"result"	"bigint"	64	0	0	0
7367	7365	"nme"	"clob"	0	0	1	1
7368	7365	"i"	"bigint"	64	0	1	2
7369	7365	"d"	"bigint"	64	0	1	3
7372	7371	"result"	"bigint"	64	0	0	0
7373	7371	"tpe"	"clob"	0	0	1	1
7374	7371	"i"	"bigint"	64	0	1	2
7375	7371	"w"	"int"	32	0	1	3
7378	7377	"result"	"bigint"	64	0	0	0
7379	7377	"b"	"boolean"	1	0	1	1
7380	7377	"i"	"bigint"	64	0	1	2
7383	7382	"result"	"bigint"	64	0	0	0
7384	7382	"i"	"bigint"	64	0	1	1
7385	7382	"nme"	"clob"	0	0	1	2
7388	7387	"schema"	"clob"	0	0	0	0
7389	7387	"table"	"clob"	0	0	0	1
7390	7387	"column"	"clob"	0	0	0	2
7391	7387	"type"	"clob"	0	0	0	3
7392	7387	"count"	"bigint"	64	0	0	4
7393	7387	"columnsize"	"bigint"	64	0	0	5
7394	7387	"heapsize"	"bigint"	64	0	0	6
7395	7387	"hashes"	"bigint"	64	0	0	7
7396	7387	"imprints"	"bigint"	64	0	0	8
7397	7387	"sorted"	"boolean"	1	0	0	9
7437	7436	"tbl"	"clob"	0	0	1	0
7440	7439	"sch"	"clob"	0	0	1	0
7441	7439	"tbl"	"clob"	0	0	1	1
7444	7443	"sch"	"clob"	0	0	1	0
7445	7443	"tbl"	"clob"	0	0	1	1
7446	7443	"col"	"clob"	0	0	1	2
7449	7448	"sample"	"bigint"	64	0	1	0
7452	7451	"tbl"	"clob"	0	0	1	0
7453	7451	"sample"	"bigint"	64	0	1	1
7456	7455	"sch"	"clob"	0	0	1	0
7457	7455	"tbl"	"clob"	0	0	1	1
7458	7455	"sample"	"bigint"	64	0	1	2
7461	7460	"sch"	"clob"	0	0	1	0
7462	7460	"tbl"	"clob"	0	0	1	1
7463	7460	"col"	"clob"	0	0	1	2
7464	7460	"sample"	"bigint"	64	0	1	3
7467	7466	"result"	"clob"	0	0	0	0
7468	7466	"src"	"clob"	0	0	1	1
7471	7470	"result"	"smallint"	16	0	0	0
7472	7470	"one"	"tinyint"	8	0	1	1
7473	7470	"two"	"tinyint"	8	0	1	2
7476	7475	"result"	"int"	32	0	0	0
7477	7475	"one"	"smallint"	16	0	1	1
7478	7475	"two"	"smallint"	16	0	1	2
7481	7480	"result"	"bigint"	64	0	0	0
7482	7480	"one"	"int"	32	0	1	1
7483	7480	"two"	"int"	32	0	1	2
7487	7486	"bam_repos"	"clob"	0	0	1	0
7488	7486	"dbschema"	"smallint"	16	0	1	1
7489	7486	"nr_threads"	"smallint"	16	0	1	2
7492	7491	"bam_files"	"clob"	0	0	1	0
7493	7491	"dbschema"	"smallint"	16	0	1	1
7494	7491	"nr_threads"	"smallint"	16	0	1	2
7497	7496	"bam_file"	"clob"	0	0	1	0
7498	7496	"dbschema"	"smallint"	16	0	1	1
7501	7500	"file_id"	"bigint"	64	0	1	0
7502	7500	"dbschema"	"smallint"	16	0	1	1
7505	7504	"result"	"boolean"	1	0	0	0
7506	7504	"flag"	"smallint"	16	0	1	1
7507	7504	"name"	"clob"	0	0	1	2
7510	7509	"result"	"clob"	0	0	0	0
7511	7509	"seq"	"clob"	0	0	1	1
7514	7513	"result"	"clob"	0	0	0	0
7515	7513	"qual"	"clob"	0	0	1	1
7518	7517	"result"	"int"	32	0	0	0
7519	7517	"cigar"	"clob"	0	0	1	1
7522	7521	"output_path"	"clob"	0	0	1	0
7525	7524	"output_path"	"clob"	0	0	1	0
7595	7594	"value"	"tinyint"	8	0	0	0
7596	7594	"first"	"tinyint"	8	0	1	1
7597	7594	"last"	"tinyint"	8	0	1	2
7600	7599	"value"	"tinyint"	8	0	0	0
7601	7599	"first"	"tinyint"	8	0	1	1
7602	7599	"last"	"tinyint"	8	0	1	2
7603	7599	"stepsize"	"tinyint"	8	0	1	3
7606	7605	"value"	"smallint"	16	0	0	0
7607	7605	"first"	"smallint"	16	0	1	1
7608	7605	"last"	"smallint"	16	0	1	2
7611	7610	"value"	"smallint"	16	0	0	0
7612	7610	"first"	"smallint"	16	0	1	1
7613	7610	"last"	"smallint"	16	0	1	2
7614	7610	"stepsize"	"smallint"	16	0	1	3
7617	7616	"value"	"int"	32	0	0	0
7618	7616	"first"	"int"	32	0	1	1
7619	7616	"last"	"int"	32	0	1	2
7622	7621	"value"	"int"	32	0	0	0
7623	7621	"first"	"int"	32	0	1	1
7624	7621	"last"	"int"	32	0	1	2
7625	7621	"stepsize"	"int"	32	0	1	3
7628	7627	"value"	"bigint"	64	0	0	0
7629	7627	"first"	"bigint"	64	0	1	1
7630	7627	"last"	"bigint"	64	0	1	2
7633	7632	"value"	"bigint"	64	0	0	0
7634	7632	"first"	"bigint"	64	0	1	1
7635	7632	"last"	"bigint"	64	0	1	2
7636	7632	"stepsize"	"bigint"	64	0	1	3
7639	7638	"value"	"real"	24	0	0	0
7640	7638	"first"	"real"	24	0	1	1
7641	7638	"last"	"real"	24	0	1	2
7642	7638	"stepsize"	"real"	24	0	1	3
7645	7644	"value"	"double"	53	0	0	0
7646	7644	"first"	"double"	53	0	1	1
7647	7644	"last"	"double"	53	0	1	2
7648	7644	"stepsize"	"double"	53	0	1	3
7651	7650	"value"	"decimal"	10	2	0	0
7652	7650	"first"	"decimal"	10	2	1	1
7653	7650	"last"	"decimal"	10	2	1	2
7654	7650	"stepsize"	"decimal"	10	2	1	3
7657	7656	"value"	"timestamp"	7	0	0	0
7658	7656	"first"	"timestamp"	7	0	1	1
7659	7656	"last"	"timestamp"	7	0	1	2
7660	7656	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 254 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
392	5734	7
393	5734	7
1024	5734	7
392	5738	7
393	5738	7
1024	5738	7
5887	5916	5
5897	5927	5
5887	5945	5
5897	5945	5
5956	5984	5
2003	6017	7
2001	6017	7
2002	6017	7
5698	6017	7
5707	6022	7
5705	6022	7
5706	6022	7
2005	6022	7
2001	6022	7
2003	6022	7
5666	6027	7
2047	6027	7
2046	6027	7
2049	6027	7
2048	6027	7
5666	6032	7
2088	6032	7
2086	6032	7
2090	6032	7
2083	6032	7
2079	6032	7
5666	6037	7
2047	6037	7
2046	6037	7
2049	6037	7
2092	6037	7
2091	6037	7
2048	6037	7
2093	6037	7
2094	6037	7
5666	6042	7
2081	6042	7
2079	6042	7
2084	6042	7
2080	6042	7
2083	6042	7
5666	6047	7
2047	6047	7
2046	6047	7
2049	6047	7
2017	6047	7
2016	6047	7
2048	6047	7
2018	6047	7
5676	6052	7
2047	6052	7
2046	6052	7
2049	6052	7
2048	6052	7
5666	6052	7
5676	6057	7
2081	6057	7
2079	6057	7
2084	6057	7
2103	6057	7
2102	6057	7
2104	6057	7
2080	6057	7
2083	6057	7
176	6057	7
60	6057	7
59	6057	7
61	6057	7
5676	6062	7
2088	6062	7
2086	6062	7
2090	6062	7
2083	6062	7
2079	6062	7
2087	6062	7
2103	6062	7
2102	6062	7
2104	6062	7
60	6062	7
59	6062	7
61	6062	7
5676	6067	7
2047	6067	7
2046	6067	7
2049	6067	7
2048	6067	7
2017	6067	7
2016	6067	7
2018	6067	7
5676	6072	7
2047	6072	7
2046	6072	7
2049	6072	7
2092	6072	7
2091	6072	7
2048	6072	7
2093	6072	7
5666	6077	7
2047	6077	7
2046	6077	7
2049	6077	7
2017	6077	7
2016	6077	7
2048	6077	7
2018	6077	7
5666	6082	7
2047	6082	7
2046	6082	7
2049	6082	7
2092	6082	7
2091	6082	7
2048	6082	7
2093	6082	7
2018	6087	7
2016	6087	7
2017	6087	7
2047	6087	7
2046	6087	7
2049	6087	7
2048	6087	7
2018	6092	7
2016	6092	7
2017	6092	7
2047	6092	7
2046	6092	7
2049	6092	7
2092	6092	7
2091	6092	7
2048	6092	7
2093	6092	7
2083	6097	7
2079	6097	7
2080	6097	7
2084	6097	7
6106	6120	5
140	6139	7
66	6139	7
64	6139	7
1165	6139	7
1151	6139	7
235	6139	7
1162	6139	7
236	6139	7
61	6151	7
456	6151	7
140	6151	7
142	6151	7
63	6151	7
6146	6151	7
6192	6200	5
6202	6208	5
6228	6246	5
6573	6575	10
6573	6574	4
6208	6589	5
5666	6589	5
5676	6589	5
2010	6589	5
2007	6589	5
2009	6589	5
2002	6589	5
2001	6589	5
2003	6589	5
236	6589	5
6560	6589	5
6564	6589	5
6568	6589	5
6823	6832	7
6827	6836	7
6579	7072	7
6580	7072	7
6573	7072	7
68	7072	7
6640	7084	7
7072	7084	7
63	7084	7
7076	7084	7
140	7084	7
142	7084	7
7319	7349	5
7351	7363	13
7361	7363	13
7352	7363	13
7353	7363	13
7354	7363	13
7355	7363	13
7356	7363	13
7357	7363	13
7358	7363	13
7359	7363	13
7360	7363	13
61	7365	7
237	7365	7
243	7365	7
139	7371	7
62	7371	7
236	7371	7
237	7371	7
61	7377	7
237	7377	7
140	7382	7
61	7382	7
352	7382	7
7351	7387	7
7361	7387	7
7352	7387	7
7353	7387	7
7354	7387	7
7356	7387	7
7357	7387	7
7358	7387	7
7359	7387	7
7360	7387	7
7365	7387	7
7371	7387	7
7377	7387	7
7382	7387	7
7387	7409	5
7387	7419	5
76	7419	5
83	7419	5
79	7419	5
63	7419	5
61	7419	5
237	7419	5
7527	7534	10
7527	7533	4
7537	7545	10
7538	7545	10
7538	7547	10
7537	7544	4
7538	7544	4
7533	7546	11
7538	7546	11
7550	7564	10
7551	7564	10
7551	7566	10
7550	7563	4
7551	7563	4
7533	7565	11
7551	7565	11
7569	7576	10
7570	7576	10
7570	7578	10
7569	7575	4
7570	7575	4
7533	7577	11
7570	7577	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1593 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
31	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
32	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
33	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
34	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
35	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
36	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
37	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
38	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
39	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
40	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
41	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
42	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
43	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
44	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
45	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
46	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
47	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
48	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
49	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
50	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
51	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
52	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
53	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
54	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
55	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
57	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
58	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
59	"hash"	"hash"	"mkey"	0	1	false	false	false	0
60	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
61	"="	"="	"calc"	0	1	false	false	false	0
62	"<>"	"!="	"calc"	0	1	false	false	false	0
63	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
64	">"	">"	"calc"	0	1	false	false	false	0
65	">="	">="	"calc"	0	1	false	false	false	0
66	"<"	"<"	"calc"	0	1	false	false	false	0
67	"<="	"<="	"calc"	0	1	false	false	false	0
71	"in"	"in"	"calc"	0	1	false	false	false	0
72	"identity"	"identity"	"calc"	0	1	false	false	false	0
73	"rowid"	"identity"	"calc"	0	1	false	false	false	0
74	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
77	"sql_min"	"min"	"calc"	0	1	false	false	false	0
78	"sql_max"	"max"	"calc"	0	1	false	false	false	0
79	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
97	"mod"	"%"	"calc"	0	1	false	false	false	0
98	"mod"	"%"	"calc"	0	1	false	false	false	0
99	"mod"	"%"	"calc"	0	1	false	false	false	0
100	"mod"	"%"	"calc"	0	1	false	false	false	0
101	"mod"	"%"	"calc"	0	1	false	false	false	0
102	"mod"	"%"	"calc"	0	1	false	false	false	0
103	"mod"	"%"	"calc"	0	1	false	false	false	0
104	"mod"	"%"	"calc"	0	1	false	false	false	0
105	"mod"	"%"	"calc"	0	1	false	false	false	0
106	"mod"	"%"	"calc"	0	1	false	false	false	0
107	"mod"	"%"	"calc"	0	1	false	false	false	0
108	"mod"	"%"	"calc"	0	1	false	false	false	0
116	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
117	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
118	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
119	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
120	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
121	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
122	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
123	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
124	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
125	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
126	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
127	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
128	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
129	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
130	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
131	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
132	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
133	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
134	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
135	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
136	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
137	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
138	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
139	"and"	"and"	"calc"	0	1	false	false	false	0
140	"or"	"or"	"calc"	0	1	false	false	false	0
141	"xor"	"xor"	"calc"	0	1	false	false	false	0
142	"not"	"not"	"calc"	0	1	false	false	false	0
143	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
144	"sql_add"	"+"	"calc"	0	1	false	false	false	0
145	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
146	"sql_div"	"/"	"calc"	0	1	false	false	false	0
147	"bit_and"	"and"	"calc"	0	1	false	false	false	0
148	"bit_or"	"or"	"calc"	0	1	false	false	false	0
149	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
150	"bit_not"	"not"	"calc"	0	1	false	false	false	0
151	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
152	"right_shift"	">>"	"calc"	0	1	false	false	false	0
153	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
154	"abs"	"abs"	"calc"	0	1	false	false	false	0
155	"sign"	"sign"	"calc"	0	1	false	false	false	0
156	"scale_up"	"*"	"calc"	0	1	false	false	false	0
157	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
158	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
159	"sql_add"	"+"	"calc"	0	1	false	false	false	0
160	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
161	"sql_div"	"/"	"calc"	0	1	false	false	false	0
162	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
163	"sql_add"	"+"	"calc"	0	1	false	false	false	0
164	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
165	"sql_div"	"/"	"calc"	0	1	false	false	false	0
166	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
167	"sql_add"	"+"	"calc"	0	1	false	false	false	0
168	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
169	"sql_div"	"/"	"calc"	0	1	false	false	false	0
170	"bit_and"	"and"	"calc"	0	1	false	false	false	0
171	"bit_or"	"or"	"calc"	0	1	false	false	false	0
172	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
173	"bit_not"	"not"	"calc"	0	1	false	false	false	0
174	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
175	"right_shift"	">>"	"calc"	0	1	false	false	false	0
176	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
177	"abs"	"abs"	"calc"	0	1	false	false	false	0
178	"sign"	"sign"	"calc"	0	1	false	false	false	0
179	"scale_up"	"*"	"calc"	0	1	false	false	false	0
180	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
181	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
182	"sql_add"	"+"	"calc"	0	1	false	false	false	0
183	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
184	"sql_div"	"/"	"calc"	0	1	false	false	false	0
185	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
186	"sql_add"	"+"	"calc"	0	1	false	false	false	0
187	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
188	"sql_div"	"/"	"calc"	0	1	false	false	false	0
189	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
190	"sql_add"	"+"	"calc"	0	1	false	false	false	0
191	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
192	"sql_div"	"/"	"calc"	0	1	false	false	false	0
193	"bit_and"	"and"	"calc"	0	1	false	false	false	0
194	"bit_or"	"or"	"calc"	0	1	false	false	false	0
195	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
196	"bit_not"	"not"	"calc"	0	1	false	false	false	0
197	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
198	"right_shift"	">>"	"calc"	0	1	false	false	false	0
199	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
200	"abs"	"abs"	"calc"	0	1	false	false	false	0
201	"sign"	"sign"	"calc"	0	1	false	false	false	0
202	"scale_up"	"*"	"calc"	0	1	false	false	false	0
203	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
204	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
205	"sql_add"	"+"	"calc"	0	1	false	false	false	0
206	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
207	"sql_div"	"/"	"calc"	0	1	false	false	false	0
208	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
209	"sql_add"	"+"	"calc"	0	1	false	false	false	0
210	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
211	"sql_div"	"/"	"calc"	0	1	false	false	false	0
212	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
213	"sql_add"	"+"	"calc"	0	1	false	false	false	0
214	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
215	"sql_div"	"/"	"calc"	0	1	false	false	false	0
216	"bit_and"	"and"	"calc"	0	1	false	false	false	0
217	"bit_or"	"or"	"calc"	0	1	false	false	false	0
218	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
219	"bit_not"	"not"	"calc"	0	1	false	false	false	0
220	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
221	"right_shift"	">>"	"calc"	0	1	false	false	false	0
222	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
223	"abs"	"abs"	"calc"	0	1	false	false	false	0
224	"sign"	"sign"	"calc"	0	1	false	false	false	0
225	"scale_up"	"*"	"calc"	0	1	false	false	false	0
226	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
227	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
228	"sql_add"	"+"	"calc"	0	1	false	false	false	0
229	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
230	"sql_div"	"/"	"calc"	0	1	false	false	false	0
231	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
232	"sql_add"	"+"	"calc"	0	1	false	false	false	0
233	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
234	"sql_div"	"/"	"calc"	0	1	false	false	false	0
235	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
236	"sql_add"	"+"	"calc"	0	1	false	false	false	0
237	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
238	"sql_div"	"/"	"calc"	0	1	false	false	false	0
239	"bit_and"	"and"	"calc"	0	1	false	false	false	0
240	"bit_or"	"or"	"calc"	0	1	false	false	false	0
241	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
242	"bit_not"	"not"	"calc"	0	1	false	false	false	0
243	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
244	"right_shift"	">>"	"calc"	0	1	false	false	false	0
245	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
246	"abs"	"abs"	"calc"	0	1	false	false	false	0
247	"sign"	"sign"	"calc"	0	1	false	false	false	0
248	"scale_up"	"*"	"calc"	0	1	false	false	false	0
249	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
250	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
251	"sql_add"	"+"	"calc"	0	1	false	false	false	0
252	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
253	"sql_div"	"/"	"calc"	0	1	false	false	false	0
254	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
255	"sql_add"	"+"	"calc"	0	1	false	false	false	0
256	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
257	"sql_div"	"/"	"calc"	0	1	false	false	false	0
258	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
259	"sql_add"	"+"	"calc"	0	1	false	false	false	0
260	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
261	"sql_div"	"/"	"calc"	0	1	false	false	false	0
262	"bit_and"	"and"	"calc"	0	1	false	false	false	0
263	"bit_or"	"or"	"calc"	0	1	false	false	false	0
264	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
265	"bit_not"	"not"	"calc"	0	1	false	false	false	0
266	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
267	"right_shift"	">>"	"calc"	0	1	false	false	false	0
268	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
269	"abs"	"abs"	"calc"	0	1	false	false	false	0
270	"sign"	"sign"	"calc"	0	1	false	false	false	0
271	"scale_up"	"*"	"calc"	0	1	false	false	false	0
272	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
273	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
274	"sql_add"	"+"	"calc"	0	1	false	false	false	0
275	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
276	"sql_div"	"/"	"calc"	0	1	false	false	false	0
277	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
278	"sql_add"	"+"	"calc"	0	1	false	false	false	0
279	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
280	"sql_div"	"/"	"calc"	0	1	false	false	false	0
281	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
282	"sql_add"	"+"	"calc"	0	1	false	false	false	0
283	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
284	"sql_div"	"/"	"calc"	0	1	false	false	false	0
285	"bit_and"	"and"	"calc"	0	1	false	false	false	0
286	"bit_or"	"or"	"calc"	0	1	false	false	false	0
287	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
288	"bit_not"	"not"	"calc"	0	1	false	false	false	0
289	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
290	"right_shift"	">>"	"calc"	0	1	false	false	false	0
291	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
292	"abs"	"abs"	"calc"	0	1	false	false	false	0
293	"sign"	"sign"	"calc"	0	1	false	false	false	0
294	"scale_up"	"*"	"calc"	0	1	false	false	false	0
295	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
296	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
297	"sql_add"	"+"	"calc"	0	1	false	false	false	0
298	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
299	"sql_div"	"/"	"calc"	0	1	false	false	false	0
300	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
301	"sql_add"	"+"	"calc"	0	1	false	false	false	0
302	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
303	"sql_div"	"/"	"calc"	0	1	false	false	false	0
304	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
305	"sql_add"	"+"	"calc"	0	1	false	false	false	0
306	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
307	"sql_div"	"/"	"calc"	0	1	false	false	false	0
308	"bit_and"	"and"	"calc"	0	1	false	false	false	0
309	"bit_or"	"or"	"calc"	0	1	false	false	false	0
310	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
311	"bit_not"	"not"	"calc"	0	1	false	false	false	0
312	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
313	"right_shift"	">>"	"calc"	0	1	false	false	false	0
314	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
315	"abs"	"abs"	"calc"	0	1	false	false	false	0
316	"sign"	"sign"	"calc"	0	1	false	false	false	0
317	"scale_up"	"*"	"calc"	0	1	false	false	false	0
318	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
319	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
320	"sql_add"	"+"	"calc"	0	1	false	false	false	0
321	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
322	"sql_div"	"/"	"calc"	0	1	false	false	false	0
323	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
324	"sql_add"	"+"	"calc"	0	1	false	false	false	0
325	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
326	"sql_div"	"/"	"calc"	0	1	false	false	false	0
327	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
328	"sql_add"	"+"	"calc"	0	1	false	false	false	0
329	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
330	"sql_div"	"/"	"calc"	0	1	false	false	false	0
331	"bit_and"	"and"	"calc"	0	1	false	false	false	0
332	"bit_or"	"or"	"calc"	0	1	false	false	false	0
333	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
334	"bit_not"	"not"	"calc"	0	1	false	false	false	0
335	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
336	"right_shift"	">>"	"calc"	0	1	false	false	false	0
337	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
338	"abs"	"abs"	"calc"	0	1	false	false	false	0
339	"sign"	"sign"	"calc"	0	1	false	false	false	0
340	"scale_up"	"*"	"calc"	0	1	false	false	false	0
341	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
342	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
343	"sql_add"	"+"	"calc"	0	1	false	false	false	0
344	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
345	"sql_div"	"/"	"calc"	0	1	false	false	false	0
346	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
347	"sql_add"	"+"	"calc"	0	1	false	false	false	0
348	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
349	"sql_div"	"/"	"calc"	0	1	false	false	false	0
350	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
351	"sql_add"	"+"	"calc"	0	1	false	false	false	0
352	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
353	"sql_div"	"/"	"calc"	0	1	false	false	false	0
354	"bit_and"	"and"	"calc"	0	1	false	false	false	0
355	"bit_or"	"or"	"calc"	0	1	false	false	false	0
356	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
357	"bit_not"	"not"	"calc"	0	1	false	false	false	0
358	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
359	"right_shift"	">>"	"calc"	0	1	false	false	false	0
360	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
361	"abs"	"abs"	"calc"	0	1	false	false	false	0
362	"sign"	"sign"	"calc"	0	1	false	false	false	0
363	"scale_up"	"*"	"calc"	0	1	false	false	false	0
364	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
365	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
366	"sql_add"	"+"	"calc"	0	1	false	false	false	0
367	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
368	"sql_div"	"/"	"calc"	0	1	false	false	false	0
369	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
370	"sql_add"	"+"	"calc"	0	1	false	false	false	0
371	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
372	"sql_div"	"/"	"calc"	0	1	false	false	false	0
373	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
374	"sql_add"	"+"	"calc"	0	1	false	false	false	0
375	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
376	"sql_div"	"/"	"calc"	0	1	false	false	false	0
377	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
378	"abs"	"abs"	"calc"	0	1	false	false	false	0
379	"sign"	"sign"	"calc"	0	1	false	false	false	0
380	"scale_up"	"*"	"calc"	0	1	false	false	false	0
381	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
382	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
383	"sql_add"	"+"	"calc"	0	1	false	false	false	0
384	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
385	"sql_div"	"/"	"calc"	0	1	false	false	false	0
386	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
387	"sql_add"	"+"	"calc"	0	1	false	false	false	0
388	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
389	"sql_div"	"/"	"calc"	0	1	false	false	false	0
390	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
391	"sql_add"	"+"	"calc"	0	1	false	false	false	0
392	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
393	"sql_div"	"/"	"calc"	0	1	false	false	false	0
394	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
395	"abs"	"abs"	"calc"	0	1	false	false	false	0
396	"sign"	"sign"	"calc"	0	1	false	false	false	0
397	"scale_up"	"*"	"calc"	0	1	false	false	false	0
398	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
399	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
400	"sql_add"	"+"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_div"	"/"	"calc"	0	1	false	false	false	0
403	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
404	"sql_add"	"+"	"calc"	0	1	false	false	false	0
405	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
406	"sql_div"	"/"	"calc"	0	1	false	false	false	0
407	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
408	"sql_add"	"+"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_div"	"/"	"calc"	0	1	false	false	false	0
411	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
412	"abs"	"abs"	"calc"	0	1	false	false	false	0
413	"sign"	"sign"	"calc"	0	1	false	false	false	0
414	"scale_up"	"*"	"calc"	0	1	false	false	false	0
415	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
416	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
417	"sql_add"	"+"	"calc"	0	1	false	false	false	0
418	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
419	"sql_div"	"/"	"calc"	0	1	false	false	false	0
420	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
421	"abs"	"abs"	"calc"	0	1	false	false	false	0
422	"sign"	"sign"	"calc"	0	1	false	false	false	0
423	"scale_up"	"*"	"calc"	0	1	false	false	false	0
424	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
425	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
426	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
427	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
428	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
429	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
430	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
431	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
432	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
433	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
435	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"round"	"round"	"sql"	0	1	false	false	false	0
452	"round"	"round"	"sql"	0	1	false	false	false	0
453	"round"	"round"	"sql"	0	1	false	false	false	0
454	"round"	"round"	"sql"	0	1	false	false	false	0
455	"round"	"round"	"sql"	0	1	false	false	false	0
456	"round"	"round"	"sql"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"power"	"pow"	"mmath"	0	1	false	false	false	0
987	"floor"	"floor"	"mmath"	0	1	false	false	false	0
988	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
989	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
990	"sin"	"sin"	"mmath"	0	1	false	false	false	0
991	"cos"	"cos"	"mmath"	0	1	false	false	false	0
992	"tan"	"tan"	"mmath"	0	1	false	false	false	0
993	"asin"	"asin"	"mmath"	0	1	false	false	false	0
994	"acos"	"acos"	"mmath"	0	1	false	false	false	0
995	"atan"	"atan"	"mmath"	0	1	false	false	false	0
996	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
997	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
998	"cot"	"cot"	"mmath"	0	1	false	false	false	0
999	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1000	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1001	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1002	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1003	"log"	"log"	"mmath"	0	1	false	false	false	0
1004	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1005	"power"	"pow"	"mmath"	0	1	false	false	false	0
1006	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1007	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1008	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1009	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1010	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1011	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1012	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1013	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1014	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1015	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1016	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1017	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1018	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1019	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1020	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1021	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1022	"log"	"log"	"mmath"	0	1	false	false	false	0
1023	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1024	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1025	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1026	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1027	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1028	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1029	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1030	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1031	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1032	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1033	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1034	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1035	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1036	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1037	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1038	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1039	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1040	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1041	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1042	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1043	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1044	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1045	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1046	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1047	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1048	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1049	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1050	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1051	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1052	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1053	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1054	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1055	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1056	"year"	"year"	"mtime"	0	1	false	false	false	0
1057	"month"	"month"	"mtime"	0	1	false	false	false	0
1058	"day"	"day"	"mtime"	0	1	false	false	false	0
1059	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1060	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1061	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1062	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1063	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1064	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1065	"year"	"year"	"mtime"	0	1	false	false	false	0
1066	"month"	"month"	"mtime"	0	1	false	false	false	0
1067	"day"	"day"	"mtime"	0	1	false	false	false	0
1068	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1069	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1070	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1071	"year"	"year"	"mtime"	0	1	false	false	false	0
1072	"month"	"month"	"mtime"	0	1	false	false	false	0
1073	"day"	"day"	"mtime"	0	1	false	false	false	0
1074	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1075	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1076	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1077	"year"	"year"	"mtime"	0	1	false	false	false	0
1078	"month"	"month"	"mtime"	0	1	false	false	false	0
1079	"day"	"day"	"mtime"	0	1	false	false	false	0
1080	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1081	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1082	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1083	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1084	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1085	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1086	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1087	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1088	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1089	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1090	"restart"	"restart"	"sql"	0	1	false	false	false	0
1091	"index"	"index"	"calc"	0	1	false	false	false	0
1092	"index"	"index"	"calc"	0	1	false	false	false	0
1093	"index"	"index"	"calc"	0	1	false	false	false	0
1094	"strings"	"strings"	"calc"	0	1	false	false	false	0
1095	"locate"	"locate"	"str"	0	1	false	false	false	0
1096	"locate"	"locate"	"str"	0	1	false	false	false	0
1097	"substring"	"substring"	"str"	0	1	false	false	false	0
1098	"substring"	"substring"	"str"	0	1	false	false	false	0
1099	"like"	"like"	"algebra"	0	1	false	false	false	0
1100	"like"	"like"	"algebra"	0	1	false	false	false	0
1101	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1102	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1103	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1104	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1105	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1106	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1107	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1108	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1109	"concat"	"+"	"calc"	0	1	false	false	false	0
1110	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1111	"code"	"unicode"	"str"	0	1	false	false	false	0
1112	"length"	"stringlength"	"str"	0	1	false	false	false	0
1113	"right"	"stringright"	"str"	0	1	false	false	false	0
1114	"left"	"stringleft"	"str"	0	1	false	false	false	0
1115	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1116	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1117	"lower"	"toLower"	"str"	0	1	false	false	false	0
1118	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1119	"trim"	"trim"	"str"	0	1	false	false	false	0
1120	"trim"	"trim"	"str"	0	1	false	false	false	0
1121	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1122	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1123	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1124	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1125	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1126	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1127	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1128	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1129	"insert"	"insert"	"str"	0	1	false	false	false	0
1130	"replace"	"replace"	"str"	0	1	false	false	false	0
1131	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1132	"space"	"space"	"str"	0	1	false	false	false	0
1133	"char_length"	"length"	"str"	0	1	false	false	false	0
1134	"character_length"	"length"	"str"	0	1	false	false	false	0
1135	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1136	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1137	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1138	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1139	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1140	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1141	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1142	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1143	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1144	"index"	"index"	"calc"	0	1	false	false	false	0
1145	"index"	"index"	"calc"	0	1	false	false	false	0
1146	"index"	"index"	"calc"	0	1	false	false	false	0
1147	"strings"	"strings"	"calc"	0	1	false	false	false	0
1148	"locate"	"locate"	"str"	0	1	false	false	false	0
1149	"locate"	"locate"	"str"	0	1	false	false	false	0
1150	"substring"	"substring"	"str"	0	1	false	false	false	0
1151	"substring"	"substring"	"str"	0	1	false	false	false	0
1152	"like"	"like"	"algebra"	0	1	false	false	false	0
1153	"like"	"like"	"algebra"	0	1	false	false	false	0
1154	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1155	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1156	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1157	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1158	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1159	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1160	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1161	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1162	"concat"	"+"	"calc"	0	1	false	false	false	0
1163	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1164	"code"	"unicode"	"str"	0	1	false	false	false	0
1165	"length"	"stringlength"	"str"	0	1	false	false	false	0
1166	"right"	"stringright"	"str"	0	1	false	false	false	0
1167	"left"	"stringleft"	"str"	0	1	false	false	false	0
1168	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1169	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1170	"lower"	"toLower"	"str"	0	1	false	false	false	0
1171	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1172	"trim"	"trim"	"str"	0	1	false	false	false	0
1173	"trim"	"trim"	"str"	0	1	false	false	false	0
1174	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1175	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1176	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1177	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1178	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1179	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1180	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1181	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1182	"insert"	"insert"	"str"	0	1	false	false	false	0
1183	"replace"	"replace"	"str"	0	1	false	false	false	0
1184	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1185	"space"	"space"	"str"	0	1	false	false	false	0
1186	"char_length"	"length"	"str"	0	1	false	false	false	0
1187	"character_length"	"length"	"str"	0	1	false	false	false	0
1188	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1189	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1190	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1191	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1192	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1193	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1194	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1195	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1196	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1197	"index"	"index"	"calc"	0	1	false	false	false	0
1198	"index"	"index"	"calc"	0	1	false	false	false	0
1199	"index"	"index"	"calc"	0	1	false	false	false	0
1200	"strings"	"strings"	"calc"	0	1	false	false	false	0
1201	"locate"	"locate"	"str"	0	1	false	false	false	0
1202	"locate"	"locate"	"str"	0	1	false	false	false	0
1203	"substring"	"substring"	"str"	0	1	false	false	false	0
1204	"substring"	"substring"	"str"	0	1	false	false	false	0
1205	"like"	"like"	"algebra"	0	1	false	false	false	0
1206	"like"	"like"	"algebra"	0	1	false	false	false	0
1207	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1208	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1209	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1210	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1211	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1212	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1213	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1214	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1215	"concat"	"+"	"calc"	0	1	false	false	false	0
1216	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1217	"code"	"unicode"	"str"	0	1	false	false	false	0
1218	"length"	"stringlength"	"str"	0	1	false	false	false	0
1219	"right"	"stringright"	"str"	0	1	false	false	false	0
1220	"left"	"stringleft"	"str"	0	1	false	false	false	0
1221	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1222	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1223	"lower"	"toLower"	"str"	0	1	false	false	false	0
1224	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1225	"trim"	"trim"	"str"	0	1	false	false	false	0
1226	"trim"	"trim"	"str"	0	1	false	false	false	0
1227	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1228	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1229	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1230	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1231	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1232	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1233	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1234	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1235	"insert"	"insert"	"str"	0	1	false	false	false	0
1236	"replace"	"replace"	"str"	0	1	false	false	false	0
1237	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1238	"space"	"space"	"str"	0	1	false	false	false	0
1239	"char_length"	"length"	"str"	0	1	false	false	false	0
1240	"character_length"	"length"	"str"	0	1	false	false	false	0
1241	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1242	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1243	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1244	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1245	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1246	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1247	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1248	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1249	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1250	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1251	"copyfrom"	"copyfrom"	"sql"	0	5	false	true	false	0
1252	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
56	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
68	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
69	"exist"	"exist"	"aggr"	0	3	false	false	false	0
70	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
75	"min"	"min"	"aggr"	0	3	false	false	false	0
76	"max"	"max"	"aggr"	0	3	false	false	false	0
80	"sum"	"sum"	"aggr"	0	3	false	false	false	0
81	"sum"	"sum"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"sum"	"sum"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"sum"	"sum"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"prod"	"prod"	"aggr"	0	3	false	false	false	0
90	"prod"	"prod"	"aggr"	0	3	false	false	false	0
91	"prod"	"prod"	"aggr"	0	3	false	false	false	0
92	"prod"	"prod"	"aggr"	0	3	false	false	false	0
93	"prod"	"prod"	"aggr"	0	3	false	false	false	0
94	"prod"	"prod"	"aggr"	0	3	false	false	false	0
95	"prod"	"prod"	"aggr"	0	3	false	false	false	0
96	"prod"	"prod"	"aggr"	0	3	false	false	false	0
109	"sum"	"sum"	"aggr"	0	3	false	false	false	0
110	"prod"	"prod"	"aggr"	0	3	false	false	false	0
111	"sum"	"sum"	"aggr"	0	3	false	false	false	0
112	"prod"	"prod"	"aggr"	0	3	false	false	false	0
113	"avg"	"avg"	"aggr"	0	3	false	false	false	0
114	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
115	"count"	"count"	"aggr"	0	3	false	false	false	0
5687	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5690	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5696	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5716	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5721	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5726	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5730	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5734	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double) \nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5738	"radians"	"create function radians(d double) \nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5742	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5745	"getanchor"	"create function getanchor( theurl url ) returns string \n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5749	"getbasename"	"create function getbasename(theurl url) returns string       \n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5753	"getcontent"	"create function getcontent(theurl url)   returns string       \n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5757	"getcontext"	"create function getcontext(theurl url)   returns string       \n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5761	"getdomain"	"create function getdomain(theurl url) returns string       \n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5765	"getextension"	"create function getextension(theurl url) returns string       \n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5769	"getfile"	"create function getfile(theurl url) returns string       \n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5773	"gethost"	"create function gethost(theurl url)   returns string       \n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5777	"getport"	"create function getport(theurl url) returns string       \n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5781	"getprotocol"	"create function getprotocol(theurl url) returns string       \n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5785	"getquery"	"create function getquery(theurl url) returns string       \n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5789	"getuser"	"create function getuser(theurl url) returns string       \n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5793	"getroboturl"	"create function getroboturl(theurl url) returns string       \n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5797	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5801	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string) \n\treturns url       \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5808	"newurl"	"create function newurl(protocol string, hostname string, file string) \n\treturns url \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5814	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5819	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5824	"convert"	"create function ""convert""(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5830	"broadcast"	"create function ""broadcast"" (p inet) returns inet \n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5834	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5838	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5842	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5847	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5851	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5855	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5859	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5863	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5867	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5872	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5877	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5882	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5887	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions. \n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t\t-- size of MAL plan\n\toptimize bigint \t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5897	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the \n-- server during execution phase. \n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,  \t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5947	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5949	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5951	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5954	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5956	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog() \n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20), \t-- wallclock, no mtime in kernel\n\t\tpc varchar(50), \t-- module.function[nr]\n\t\tthread int, \t\t-- thread identifier\n\t\tticks bigint, \t\t-- time in microseconds\n\t\trrsmb bigint, \t\t-- resident memory in MB\n\t\tvmmb bigint, \t\t-- virtual size in MB\n\t\treads bigint, \t\t-- number of blocks read\n\t\twrites bigint, \t\t-- number of blocks written\n\t\tminflt bigint, \t\t-- minor page faults\n\t\tmajflt bigint, \t\t-- major page faults\n\t\tnvcsw bigint, \t\t-- non-volantary conext switch\n\t\tstmt string\t\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5986	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5990	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5993	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function ""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5997	"epoch"	"create function ""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6001	"epoch"	"create function ""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6005	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
6009	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
6013	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6017	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6022	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6027	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6032	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6037	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6042	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6047	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6052	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6057	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6062	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i \ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6067	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6072	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6077	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6082	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6087	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6092	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6097	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6102	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string) \n\treturns string \n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
6106	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6122	"shutdown"	"create procedure sys.shutdown(delay tinyint) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6125	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6129	"settimeout"	"-- control the query and session time out \ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6132	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6136	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
6139	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
6146	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6151	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
6157	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6163	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6168	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6173	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6177	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6181	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats () \n\treturns table (rewrite string, count int) \n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6185	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache() \n\treturns table (query string, count int) \n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6189	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string) \n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
6192	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers () \n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6202	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6210	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp () \n\treturns table (id int, name string, htype string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int, \n\t\tlocation string, heat int, dirty string, \n\t\tstatus string, kind string) \n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
6224	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6228	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6248	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6251	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6254	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6257	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6260	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6263	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6266	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6270	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6274	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6278	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6282	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6286	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6290	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6294	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6298	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6302	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6306	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6310	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6314	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6318	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6322	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6326	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6330	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6334	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6338	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6342	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6346	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6350	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6354	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6358	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6362	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6366	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6370	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6374	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6378	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6382	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6386	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6390	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6394	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6398	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6402	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6406	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6410	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6414	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6418	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6422	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6426	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6430	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6434	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6438	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6442	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6446	"median"	"create aggregate median(val decimal) returns decimal\n \texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6450	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6454	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6458	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6462	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6466	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6470	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6475	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6480	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6485	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6490	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6495	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6500	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6505	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6510	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6515	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6520	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6525	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6530	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6535	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6540	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6545	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6550	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6555	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6560	"has_z"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make sure you load the geom module before loading this sql module\n-- create spatial_ref_sys metadata table\n\ncreate function has_z(info integer) returns integer external name geom.""hasZ"";"	"geom"	1	1	false	false	false	2000
6564	"has_m"	"create function has_m(info integer) returns integer external name geom.""hasM"";"	"geom"	1	1	false	false	false	2000
6568	"get_type"	"create function get_type(info integer, format integer) returns string external name geom.""getType"";"	"geom"	1	1	false	false	false	2000
6592	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr(geom geometry) returns mbr external name geom.""mbr"";"	"geom"	1	1	false	false	false	2000
6596	"st_overlaps"	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.""mbrOverlaps"";"	"geom"	1	1	false	false	false	2000
6601	"st_contains"	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.""mbrContains"";"	"geom"	1	1	false	false	false	2000
6606	"st_equals"	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.""mbrEqual"";"	"geom"	1	1	false	false	false	2000
6611	"st_distance"	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.""mbrDistance"";"	"geom"	1	1	false	false	false	2000
6616	"st_wkttosql"	"--CREATE FUNCTION mbrOverlapOrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrLeft"";\n--CREATE FUNCTION mbrOverlapOrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrBelow"";\n--CREATE FUNCTION mbrOverlapOrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrRight"";\n--CREATE FUNCTION mbrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrLeft"";\n--CREATE FUNCTION mbrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrBelow"";\n--CREATE FUNCTION mbrEqual(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrEqual"";\n--CREATE FUNCTION mbrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrRight"";\n--CREATE FUNCTION mbrContained(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrContained"";\n--CREATE FUNCTION mbrOverlapOrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrOverlapOrAbove"";\n--CREATE FUNCTION mbrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.""mbrAbove"";\n\n\n-------------------------------------------------------------------------\n------------------------- Management Functions- -------------------------\n-------------------------------------------------------------------------\n--CREATE PROCEDURE AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) \n--CREATE FUNCTION AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) RETURNS string\n--BEGIN\n--\tDECLARE column_type string;\n--\tSET column_type = concat('geometry( ', geometryType);\n--\tSET column_type = concat(column_type, ', ');\n--\tSET column_type = concat(column_type, srid);\n--\tSET column_type = concat(column_type, ' )'); \n--\tALTER TABLE table_name ADD column_name column_type; --geometry('point', 28992);\n--\t\n--\tRETURN column_type;\n--END;\n\n--CREATE PROCEDURE t(table_name string, column_name string, column_type string)\n--BEGIN\n--\tALTER TABLE table_name ADD column_name;\n--END;\n\n--CREATE FUNCTION t(table_name string, column_name string, srid integer, type string, dimension integer) RETURNS string \n--BEGIN\n--\tEXECUTE PROCEDURE AddGeometryColumn(table_name, column_name, srid, type, dimension);\n--\tRETURN '';\n--END;\n\n\n\n---------------------------------\n-- OGC - Simple Feature Access --\n---------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_wkttosql(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6620	"st_wkbtosql"	"--Construct a Geometry from a WKB\ncreate function st_wkbtosql(geom string) returns geometry external name geom.""FromBinary"";"	"geom"	1	1	false	false	false	2000
6624	"st_astext"	"--Obtaining WKT from Geometry\ncreate function st_astext(geom geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6628	"st_asbinary"	"--Obtainig WKB from Geometry\ncreate function st_asbinary(geom geometry) returns string external name geom.""AsBinary"";"	"geom"	1	1	false	false	false	2000
6632	"st_dimension"	"--Functions on Geometries\ncreate function st_dimension(geom geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6636	"st_geometrytype"	"create function st_geometrytype(geom geometry) returns string external name geom.""GeometryType2"";"	"geom"	1	1	false	false	false	2000
6640	"st_srid"	"create function st_srid(geom geometry) returns integer external name geom.""getSRID"";"	"geom"	1	1	false	false	false	2000
6644	"st_setsrid"	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.""setSRID"";"	"geom"	1	1	false	false	false	2000
6649	"st_isempty"	"create function st_isempty(geom geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6653	"st_issimple"	"create function st_issimple(geom geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6657	"st_boundary"	"create function st_boundary(geom geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6661	"st_envelope"	"create function st_envelope(geom geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6665	"st_equals"	"--Functions testing spatial relations between Geometries\ncreate function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6670	"st_disjoint"	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6675	"st_intersects"	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.""Intersects"";"	"geom"	1	1	false	false	false	2000
6680	"st_touches"	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6685	"st_crosses"	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6690	"st_within"	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6695	"st_contains"	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6700	"st_overlaps"	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6705	"st_relate"	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6711	"st_distance"	"--Distance between Geometries\ncreate function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6716	"st_intersection"	"--Functions that implement spatial operators\ncreate function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6721	"st_difference"	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6726	"st_union"	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6731	"st_union"	"create aggregate st_union(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
6735	"st_symdifference"	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6740	"st_buffer"	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6745	"st_convexhull"	"create function st_convexhull(geom geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6749	"st_x"	"--Functions on Point\ncreate function st_x(geom geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6753	"st_y"	"create function st_y(geom geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6757	"st_z"	"create function st_z(geom geometry) returns double external name geom.""Z"";"	"geom"	1	1	false	false	false	2000
6761	"st_startpoint"	"--Functions on Curve (i.e. LineString)\ncreate function st_startpoint(geom geometry) returns geometry external name geom.""StartPoint"";"	"geom"	1	1	false	false	false	2000
6765	"st_endpoint"	"create function st_endpoint(geom geometry) returns geometry external name geom.""EndPoint"";"	"geom"	1	1	false	false	false	2000
6769	"st_isring"	"create function st_isring(geom geometry) returns boolean external name geom.""IsRing"";"	"geom"	1	1	false	false	false	2000
6773	"st_length"	"create function st_length(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6777	"st_isclosed"	"--valid also for MultiCurve\ncreate function st_isclosed(geom geometry) returns boolean external name geom.""IsClosed"";"	"geom"	1	1	false	false	false	2000
6781	"st_numpoints"	"--valid also for MultiCurve\n\n--Functions on LineString\ncreate function st_numpoints(geom geometry) returns integer external name geom.""NumPoints"";"	"geom"	1	1	false	false	false	2000
6785	"st_pointn"	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.""PointN"";"	"geom"	1	1	false	false	false	2000
6790	"st_centroid"	"--Functions on Surface (i.e. Polygon and Polyhedral Surface) and MultiSurface\ncreate function st_centroid(geom geometry) returns geometry external name geom.""Centroid"";"	"geom"	1	1	false	false	false	2000
6794	"st_pointonsurface"	"create function st_pointonsurface(geom geometry) returns geometry external name geom.""PointOnSurface"";"	"geom"	1	1	false	false	false	2000
6798	"st_area"	"create function st_area(geom geometry) returns double external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6802	"st_exteriorring"	"--Functions on Polygon\ncreate function st_exteriorring(geom geometry) returns geometry external name geom.""ExteriorRing"";"	"geom"	1	1	false	false	false	2000
6806	"st_setexteriorring"	"create function st_setexteriorring(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6810	"st_numinteriorring"	"--gets a linestring and creates a polygon (postGIS: ST_MakePolygon)\ncreate function st_numinteriorring(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
6814	"st_interiorringn"	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.""InteriorRingN"";"	"geom"	1	1	false	false	false	2000
6819	"st_interiorrings"	"create function st_interiorrings(geom geometry) returns geometrya external name geom.""InteriorRings"";"	"geom"	1	1	false	false	false	2000
6823	"st_numgeometries"	"--CREATE FUNCTION ST_SetInteriorRings(geom GeometryA) RETURNS Geometry EXTERNAL NAME geom.""SetInteriorRings""; --what is this function supposed to do????\n\n--Functions on GeomCollection\ncreate function st_numgeometries(geom geometry) returns integer external name geom.""NumGeometries"";"	"geom"	1	1	false	false	false	2000
6827	"st_geometryn"	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.""GeometryN"";"	"geom"	1	1	false	false	false	2000
6832	"st_numpatches"	"--Functions on Polyhedral Surfaces (a simple surface, consisting of a number of Polygon pathes or facets)\n--CREATE FUNCTION ST_Geometries(geom Geometry) RETURNS TABLE(geom Geometries) EXTERNAL NAME geom.""Geometries"";\n--CREATE FUNCTION NumSurfaces(geom Geometry) RETURNS integer EXTERNAL NAME geom.""NumSurfaces"";\n--CREATE FUNCTION Surface(positionNum integer) RETURNS Geometry EXTERNAL NAME geom.""SurfaceN"";\n--from Part 1\ncreate function st_numpatches(geom geometry) returns integer --EXTERNAL NAME geom.""NumPatches""; --same with NumSurfaces\nbegin\n\treturn select st_numgeometries(geom);\nend;"	"user"	2	1	false	false	false	2000
6836	"st_patchn"	"create function st_patchn(geom geometry, patchnum integer) returns geometry --EXTERNAL NAME geom.""PatchN"" --same with Surface\nbegin\n\treturn select st_geometryn(geom, patchnum);\nend;"	"user"	2	1	false	false	false	2000
6841	"st_geomfromtext"	"--BoundingPolygons\n--IsClosed\n\n-------------------------------------------\n-- DEPRECATED BUT IMPLEMENTED BY postGIS --\n-------------------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6846	"st_pointfromtext"	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6851	"st_linefromtext"	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6856	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6861	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6866	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6871	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6876	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6881	"st_bdpolyfromtext"	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdPolyFromText"";"	"geom"	1	1	false	false	false	2000
6886	"st_bdmpolyfromtext"	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdMPolyFromText"";"	"geom"	1	1	false	false	false	2000
6891	"st_geometryfromtext"	"--Construct a Geoemtry from a WKB\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_PolygonFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""PolygonFromWKB"";\n--CREATE FUNCTION ST_MPointFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPointFromWKB"";\n--CREATE FUNCTION ST_MLineFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MLineFromWKB"";\n--CREATE FUNCTION ST_MPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""MPolyFromWKB"";\n--CREATE FUNCTION ST_GeomCollFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.""GeomCollFromWKB"";\n--CREATE FUNCTION ST_BdPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdPolyFromWKB""; \n--CREATE FUNCTION ST_BdMPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.""BdMPolyFromWKB"";\n\n--CREATE FUNCTION ST_M(geom Geometry) RETURNS double EXTERNAL NAME geom.""M""; --geos does not support M coordinate (at least in the c version)\n--CREATE FUNCTION ST_CurveToLine RETURNS EXTERNAL NAME --geos does not support CIRCULARSTRING and does not have such function\n\n\n\n\n-------------\n-- PostGIS --\n-------------\n\n-------------------------------------------------------------------------\n------------------------- Geometry Constructors -------------------------\n-------------------------------------------------------------------------\n-- Create Geometry from text (wkt)\ncreate function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6896	"st_geomfromtext"	"create function st_geomfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6900	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6904	"st_pointfromtext"	"create function st_pointfromtext(wkt string) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6908	"st_linefromtext"	"create function st_linefromtext(wkt string) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6912	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6916	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6920	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6924	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6928	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6932	"st_makepoint"	"--CREATE FUNCTION ST_GeogFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n--CREATE FUNCTION ST_GeographyFromText(wkt string) RETURNS Geography external name geom.""GeographyFromText"";\n\n\n-- Create Geometry from raw representation (byte array)\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid smallint) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""GeomFromWKB"";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""PointFromWKB"";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.""LineFromWKB"";\n--CREATE FUNCTION ST_GeogFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geography EXTERNAL NAME geom.""GeogFromWKB"";\n\n-- Create Geometry from simpler geometries\ncreate function st_makepoint(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6937	"st_point"	"create function st_point(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6942	"st_makepoint"	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6948	"st_makepoint"	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
6955	"st_makepointm"	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.""MakePointM"";"	"geom"	1	1	false	false	false	2000
6961	"st_makeline"	"--CREATE FUNCTION ST_MakeLine(geometry set geoms)?????\ncreate aggregate st_makeline(geom geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	3	false	false	false	2000
6965	"st_makeline"	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	1	false	false	false	2000
6970	"st_makeenvelope"	"--two single geometries\n--CREATE FUNCTION ST_MakeLine(geoms_arr Geometry[]) RETURNS Geometry external name geom.""MakeLine"";\n--CREATE FUNCTION ST_LineFromMultiPoint(pointGeom Geometry) RETURNS Geometry external name geom.""LineFromMultiPoint""; --gets mutlipoint returns linestring\ncreate function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
6978	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
6985	"st_makepolygon"	"create function st_makepolygon(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6989	"st_polygon"	"--gets linestring\n--CREATE FUNCTION ST_MakePolygon(outerGeom Geometry, interiorGeoms table(g Geometry)) RETURNS Geometry external name geom.""MakePolygon""; --gets linestrings\ncreate function st_polygon(geom geometry, srid integer) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6994	"st_makebox2d"	"--gets linestring\ncreate function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.""MakeBox2D"";"	"geom"	1	1	false	false	false	2000
6999	"geometrytype"	"--gets 2d points\n--CREATE FUNCTION ST_3DMakeBox(lowLeftPointGeom Geometry, upRightPointGeom Geometry) RETURNS mbr external name geom.""MakeBox3D""; --gets 3d points\n\n-- Other constructors\n--CREATE FUNCTION ST_Box2dFromGeoHash() RETURNS mbr external name geom.""Box2dFromGeoHash"";\n--CREATE FUNCTION ST_GeomFromEWKB\n--CREATE FUNCTION ST_GeomFromEWKT\n--CREATE FUNCTION ST_GeomFromGML\n--CREATE FUNCTION ST_GeomFromGeoJSON\n--CREATE FUNCTION ST_GeomFromKML\n--CREATE FUNCTION ST_GMLToSQL\n--CREATE FUNCTION ST_PointFromGeoHash\n\n-------------------------------------------------------------------------\n-------------------------- Geometry Accessors ---------------------------\n-------------------------------------------------------------------------\ncreate function geometrytype(geom geometry) returns string external name geom.""GeometryType1"";"	"geom"	1	1	false	false	false	2000
7003	"st_coorddim"	"create function st_coorddim(geom geometry) returns integer external name geom.""CoordDim"";"	"geom"	1	1	false	false	false	2000
7007	"st_isvalid"	"--CREATE FUNCTION ST_IsCollection(geom Geometry) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalid(geom geometry) returns boolean external name geom.""IsValid"";"	"geom"	1	1	false	false	false	2000
7011	"st_isvalidreason"	"--CREATE FUNCTION ST_IsValid(geom Geometry, flags integer) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalidreason(geom geometry) returns string external name geom.""IsValidReason"";"	"geom"	1	1	false	false	false	2000
7015	"st_npoints"	"--CREATE FUNCTION ST_IsValidReason(geom Geometry, flags integer) RETURNS string EXTERNAL NAME\n--CREATE FUNCTION ST_IsValidDetail(geom Geometry) RETURNS string EXTERNAL NAME geom.""IsValidDetail""; \n--CREATE FUNCTION ST_IsValidDetail(geom Geometry, flags integer) RETURNS A_CUSTOM_ROW EXTERNAL NAME\n--CREATE FUNCTION ST_NDims(geom Geometry) RETURNS integer EXTERNAL NAME\ncreate function st_npoints(geom geometry) returns integer external name geom.""NPoints"";"	"geom"	1	1	false	false	false	2000
7019	"st_nrings"	"create function st_nrings(geom geometry) returns integer external name geom.""NRings"";"	"geom"	1	1	false	false	false	2000
7023	"st_numinteriorrings"	"--is meaningfull for polygon and multipolygon\ncreate function st_numinteriorrings(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7027	"st_xmax"	"--CREATE FUNCTION ST_Summary(geom Geometry) RETURNS string EXTERNAL NAME\ncreate function st_xmax(geom geometry) returns double external name geom.""XMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7031	"st_xmax"	"create function st_xmax(box mbr) returns double external name geom.""XMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7035	"st_xmin"	"create function st_xmin(geom geometry) returns double external name geom.""XMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7039	"st_xmin"	"create function st_xmin(box mbr) returns double external name geom.""XMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7043	"st_ymax"	"create function st_ymax(geom geometry) returns double external name geom.""YMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7047	"st_ymax"	"create function st_ymax(box mbr) returns double external name geom.""YMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7051	"st_ymin"	"create function st_ymin(geom geometry) returns double external name geom.""YMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7055	"st_ymin"	"create function st_ymin(box mbr) returns double external name geom.""YMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7059	"st_force2d"	"--GEOS creates only 2D Envelope\n--CREATE FUNCTION ST_ZMax(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMaxFromWKB"";\n--CREATE FUNCTION ST_ZMax(box mbr) RETURNS double EXTERNAL NAME geom.""ZMaxFromMBR"";\n--CREATE FUNCTION ST_ZMin(geom Geometry) RETURNS double EXTERNAL NAME geom.""ZMinFromWKB"";\n--CREATE FUNCTION ST_ZMin(box mbr) RETURNS double EXTERNAL NAME geom.""ZMinFromMBR"";\n--CREATE FUNCTION ST_Zmflag(geom Geometry) RETURNS smallint EXTERNAL NAME --0=2d, 1=3dm, 2=3dz, 4=4d\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Editors ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AddPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Affine RETURNS EXTERNAL NAME\ncreate function st_force2d(geom geometry) returns geometry external name geom.""Force2D"";"	"geom"	1	1	false	false	false	2000
7063	"st_force3d"	"create function st_force3d(geom geometry) returns geometry external name geom.""Force3D"";"	"geom"	1	1	false	false	false	2000
7067	"st_segmentize"	"--CREATE FUNCTION ST_Force3DZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force3DM RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force4D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceCollection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceRHR RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineMerge RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionExtract RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionHomogenize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Multi RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemovePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Reverse RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Rotate RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateX RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateY RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Scale RETURNS EXTERNAL NAME\ncreate function st_segmentize(geom geometry, sz double) returns geometry external name geom.""Segmentize"";"	"geom"	1	1	false	false	false	2000
7072	"getproj4"	"--CREATE FUNCTION ST_SetPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SnapToGrid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Snap RETURNS EXTERNAL NAME\ncreate function getproj4(srid_in integer) returns string \nbegin\n\treturn select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	"user"	2	1	false	false	false	2000
7076	"internaltransform"	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.""Transform"";"	"geom"	1	1	false	false	false	2000
7084	"st_transform"	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n\tdeclare srid_src integer;\n\tdeclare proj4_src string;\n\tdeclare proj4_dest string;\n\n\tselect st_srid(geom) into srid_src;\n\tselect getproj4(srid_src) into proj4_src;\n\tselect getproj4(srid) into proj4_dest;\n\n\tif proj4_src is null then\n\t\treturn select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n\telse\n\t\tif proj4_dest is null then\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n\t\telse\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n\t\tend if;\t\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
7089	"st_translate"	"--Translate moves all points of a geometry dx, dy, dz\ncreate function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7095	"st_translate"	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7102	"st_asewkt"	"--CREATE FUNCTION ST_TransScale RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Outputs ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AsEWKB RETURNS EXTERNAL NAME\ncreate function st_asewkt(geom geometry) returns string external name geom.""AsEWKT"";"	"geom"	1	1	false	false	false	2000
7106	"st_covers"	"--CREATE FUNCTION ST_AsGeoJSON RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsGML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsHEXEWKB RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsKML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsSVG RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsX3D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_GeoHash RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsLatLonText RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------------ Operators --------------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n---------------- Spatial Relationships and Measurements -----------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_3DClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DIntersects RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DMaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DShortestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Area(geog Geography, use_spheroid boolean) RETURNS flt EXTERNAL NAME geom.""Area"";\n--CREATE FUNCTION ST_Azimuth RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ContainsProperly RETURNS EXTERNAL NAME\ncreate function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.""Covers"";"	"geom"	1	1	false	false	false	2000
7111	"st_coveredby"	"--CREATE FUNCTION ST_Covers(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Covers"";\ncreate function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.""CoveredBy"";"	"geom"	1	1	false	false	false	2000
7116	"st_dwithin"	"--CREATE FUNCTION ST_CoveredBy(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""CoveredBy"";\n--CREATE FUNCTION ST_LineCrossingDirection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry) RETURNS double EXTERNAL NAME geom.""Distance""\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Distance""\ncreate function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.""DWithin"";"	"geom"	1	1	false	false	false	2000
7122	"st_length2d"	"--CREATE FUNCTION ST_HausdorffDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Sphere RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_DFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_HasArc RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersects(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.""Intersects"";\n--CREATE FUNCTION ST_Length(geog Geography, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.""Length"";\ncreate function st_length2d(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7126	"st_collect"	"--CREATE FUNCTION ST_3DLength RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length2D_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLength_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OrderingEquals RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter2D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DPerimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Project RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry, boundary_node_rule integer) RETURNS string EXTERNAL NAME geom.""Relate"";\n--CREATE FUNCTION ST_RelateMatch RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ShortestLine RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------- Geometry Processing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, circle_quarters_num integer) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, buffer_style_parameters string) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_Buffer(geog Geography, radius double) RETURNS Geometry EXTERNAL NAME geom.""Buffer"";\n--CREATE FUNCTION ST_BuildArea RETURNS EXTERNAL NAME\n--collect is the same to union. POstGIS just has a more efficient implementation for it compared to union\ncreate function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7131	"st_collect"	"create aggregate st_collect(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7135	"st_delaunaytriangles"	"--CREATE FUNCTION ST_ConcaveHull RETURNS EXTERNAL NAME\ncreate function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.""DelaunayTriangles"";"	"geom"	1	1	false	false	false	2000
7141	"st_dump"	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.""Dump"";"	"geom"	1	5	false	false	false	2000
7146	"st_dumppoints"	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.""DumpPoints"";"	"geom"	1	5	false	false	false	2000
7153	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7150
7158	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7150
7163	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7150
7168	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7150
7173	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7150
7178	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	7150
7182	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	7150
7186	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7150
7190	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7150
7194	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7150
7198	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7150
7202	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7150
7206	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7150
7210	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	7150
7214	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	7150
7218	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	7150
7222	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7150
7226	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7150
7230	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7150
7234	"output"	"-- The remainder awaits the implementation \n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	7150
7238	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7150
7242	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7150
7246	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
7251	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
7254	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7258	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7262	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
7267	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7270	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7273	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7276	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7312	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7315	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7319	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (""schema"" string, ""table"" string, ""column"" string, ""type"" string, ""mode"" string, location string, ""count"" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7363	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7365	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int'\t then return 4 * i;\n\twhen nme = 'bigint'\t then return 8 * i;\n\twhen nme = 'hugeint'\t then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
7371	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7377	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7382	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\t\n\t\tor nme = 'bigint'\t\n\t\tor nme = 'hugeint'\t\n\t\tor nme = 'decimal'\t\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
7387	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count""\tbigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7434	"analyze"	"create procedure analyze()\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7436	"analyze"	"create procedure analyze(tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7439	"analyze"	"create procedure analyze(sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7443	"analyze"	"create procedure analyze(sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7448	"analyze"	"-- control the sample size\ncreate procedure analyze(""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7451	"analyze"	"create procedure analyze(tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7455	"analyze"	"create procedure analyze(sch string, tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7460	"analyze"	"create procedure analyze(sch string, tbl string, col string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7466	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7470	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7475	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7480	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7486	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7484
7491	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7484
7496	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7484
7500	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7484
7504	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7484
7509	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7484
7513	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7484
7517	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7484
7521	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7484
7524	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7484
7594	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7599	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7605	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7610	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7616	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7621	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7627	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7632	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7638	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7644	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7650	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7656	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 8 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6575	6580	0	"spatial_ref_sys_srid_pkey"
7534	7535	0	"files_pkey_file_id"
7545	7548	0	"sq_pkey_sn_file_id"
7547	7548	1	"sq_fkey_file_id"
7564	7567	0	"rg_pkey_id_file_id"
7566	7567	1	"rg_fkey_file_id"
7576	7579	0	"pg_pkey_id_file_id"
7578	7579	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 8 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6574	6580	0	"spatial_ref_sys_srid_pkey"	-1	-1
7533	7535	0	"files_pkey_file_id"	-1	-1
7544	7548	0	"sq_pkey_sn_file_id"	-1	-1
7546	7548	2	"sq_fkey_file_id"	7533	514
7563	7567	0	"rg_pkey_id_file_id"	-1	-1
7565	7567	2	"rg_fkey_file_id"	7533	514
7575	7579	0	"pg_pkey_id_file_id"	-1	-1
7577	7579	2	"pg_fkey_file_id"	7533	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 22 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6575	"srid"	0
6574	"srid"	0
7534	"file_id"	0
7533	"file_id"	0
7545	"sn"	0
7545	"file_id"	1
7547	"file_id"	0
7544	"sn"	0
7544	"file_id"	1
7546	"file_id"	0
7564	"id"	0
7564	"file_id"	1
7566	"file_id"	0
7563	"id"	0
7563	"file_id"	1
7565	"file_id"	0
7576	"id"	0
7576	"file_id"	1
7578	"file_id"	0
7575	"id"	0
7575	"file_id"	1
7577	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5666	1	1	0	0
5676	1	1	0	0
5702	1	1	0	0
5705	1	1	0	0
5709	1	1	0	0
7663	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
7150	"json"	3	3	true
7484	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1593 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
57
58
59
60
61
62
63
64
65
66
67
71
72
73
74
77
78
79
97
98
99
100
101
102
103
104
105
106
107
108
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
56
68
69
70
75
76
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
109
110
111
112
113
114
115
5687
5690
5696
5716
5721
5726
5730
5734
5738
5742
5745
5749
5753
5757
5761
5765
5769
5773
5777
5781
5785
5789
5793
5797
5801
5808
5814
5819
5824
5830
5834
5838
5842
5847
5851
5855
5859
5863
5867
5872
5877
5882
5887
5897
5947
5949
5951
5954
5956
5986
5990
5993
5997
6001
6005
6009
6013
6017
6022
6027
6032
6037
6042
6047
6052
6057
6062
6067
6072
6077
6082
6087
6092
6097
6102
6106
6122
6125
6129
6132
6136
6139
6146
6151
6157
6163
6168
6173
6177
6181
6185
6189
6192
6202
6210
6224
6228
6248
6251
6254
6257
6260
6263
6266
6270
6274
6278
6282
6286
6290
6294
6298
6302
6306
6310
6314
6318
6322
6326
6330
6334
6338
6342
6346
6350
6354
6358
6362
6366
6370
6374
6378
6382
6386
6390
6394
6398
6402
6406
6410
6414
6418
6422
6426
6430
6434
6438
6442
6446
6450
6454
6458
6462
6466
6470
6475
6480
6485
6490
6495
6500
6505
6510
6515
6520
6525
6530
6535
6540
6545
6550
6555
6560
6564
6568
6592
6596
6601
6606
6611
6616
6620
6624
6628
6632
6636
6640
6644
6649
6653
6657
6661
6665
6670
6675
6680
6685
6690
6695
6700
6705
6711
6716
6721
6726
6731
6735
6740
6745
6749
6753
6757
6761
6765
6769
6773
6777
6781
6785
6790
6794
6798
6802
6806
6810
6814
6819
6823
6827
6832
6836
6841
6846
6851
6856
6861
6866
6871
6876
6881
6886
6891
6896
6900
6904
6908
6912
6916
6920
6924
6928
6932
6937
6942
6948
6955
6961
6965
6970
6978
6985
6989
6994
6999
7003
7007
7011
7015
7019
7023
7027
7031
7035
7039
7043
7047
7051
7055
7059
7063
7067
7072
7076
7084
7089
7095
7102
7106
7111
7116
7122
7126
7131
7135
7141
7146
7153
7158
7163
7168
7173
7178
7182
7186
7190
7194
7198
7202
7206
7210
7214
7218
7222
7226
7230
7234
7238
7242
7246
7251
7254
7258
7262
7267
7270
7273
7276
7312
7315
7319
7363
7365
7371
7377
7382
7387
7434
7436
7439
7443
7448
7451
7455
7460
7466
7470
7475
7480
7486
7491
7496
7500
7504
7509
7513
7517
7521
7524
7594
7599
7605
7610
7616
7621
7627
7632
7638
7644
7650
7656
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 35 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	19	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
27	"wkb"	"geometry"	0	0	0	15	0
28	"wkba"	"geometrya"	0	0	0	16	0
29	"mbr"	"mbr"	0	0	0	16	0
5743	"url"	"url"	0	0	0	16	2000
5828	"inet"	"inet"	0	0	0	16	2000
6590	"mbr"	"mbr"	0	0	0	16	2000
7151	"json"	"json"	0	0	0	16	2000
7249	"uuid"	"uuid"	0	0	0	16	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

