stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.debug
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- assume milliseconds when converted to TIMESTAMP
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
-- gr_name is "GLOBAL" or "ROOT" for classic NetCDF files
-- used for groups in HDF5 files
-- global attributes have obj_name=""

-- create function netcdfvar (fname varchar(256)) 
--	returns int external name netcdf.test;

create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- COPY into reject management

create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By changing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table producing function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5205	"id"	"int"	32	0	5204	NULL	true	0	NULL
5206	"name"	"varchar"	1024	0	5204	NULL	true	1	NULL
5207	"schema_id"	"int"	32	0	5204	NULL	true	2	NULL
5208	"query"	"varchar"	2048	0	5204	NULL	true	3	NULL
5209	"type"	"smallint"	16	0	5204	NULL	true	4	NULL
5210	"system"	"boolean"	1	0	5204	NULL	true	5	NULL
5211	"commit_action"	"smallint"	16	0	5204	NULL	true	6	NULL
5212	"access"	"smallint"	16	0	5204	NULL	true	7	NULL
5213	"temporary"	"smallint"	16	0	5204	NULL	true	8	NULL
5215	"id"	"int"	32	0	5214	NULL	true	0	NULL
5216	"name"	"varchar"	1024	0	5214	NULL	true	1	NULL
5217	"type"	"varchar"	1024	0	5214	NULL	true	2	NULL
5218	"type_digits"	"int"	32	0	5214	NULL	true	3	NULL
5219	"type_scale"	"int"	32	0	5214	NULL	true	4	NULL
5220	"table_id"	"int"	32	0	5214	NULL	true	5	NULL
5221	"default"	"varchar"	2048	0	5214	NULL	true	6	NULL
5222	"null"	"boolean"	1	0	5214	NULL	true	7	NULL
5223	"number"	"int"	32	0	5214	NULL	true	8	NULL
5224	"storage"	"varchar"	2048	0	5214	NULL	true	9	NULL
5231	"name"	"varchar"	1024	0	5230	NULL	true	0	NULL
5232	"fullname"	"varchar"	2048	0	5230	NULL	true	1	NULL
5233	"default_schema"	"int"	9	0	5230	NULL	true	2	NULL
5237	"name"	"varchar"	1024	0	5236	NULL	true	0	NULL
5238	"fullname"	"varchar"	2024	0	5236	NULL	true	1	NULL
5239	"default_schema"	"int"	9	0	5236	NULL	true	2	NULL
5241	"login_id"	"int"	32	0	5240	NULL	true	0	NULL
5242	"role_id"	"int"	32	0	5240	NULL	true	1	NULL
5244	"id"	"int"	32	0	5243	NULL	true	0	NULL
5245	"name"	"varchar"	1024	0	5243	NULL	true	1	NULL
5246	"grantor"	"int"	32	0	5243	NULL	true	2	NULL
5248	"obj_id"	"int"	32	0	5247	NULL	true	0	NULL
5249	"auth_id"	"int"	32	0	5247	NULL	true	1	NULL
5250	"privileges"	"int"	32	0	5247	NULL	true	2	NULL
5251	"grantor"	"int"	32	0	5247	NULL	true	3	NULL
5252	"grantable"	"int"	32	0	5247	NULL	true	4	NULL
5461	"id"	"oid"	63	0	5469	NULL	true	0	NULL
5462	"owner"	"clob"	0	0	5469	NULL	true	1	NULL
5463	"defined"	"timestamp"	7	0	5469	NULL	true	2	NULL
5464	"query"	"clob"	0	0	5469	NULL	true	3	NULL
5465	"pipe"	"clob"	0	0	5469	NULL	true	4	NULL
5466	"plan"	"clob"	0	0	5469	NULL	true	5	NULL
5467	"mal"	"int"	32	0	5469	NULL	true	6	NULL
5468	"optimize"	"bigint"	64	0	5469	NULL	true	7	NULL
5471	"id"	"oid"	63	0	5480	NULL	true	0	NULL
5472	"start"	"timestamp"	7	0	5480	NULL	true	1	NULL
5473	"stop"	"timestamp"	7	0	5480	NULL	true	2	NULL
5474	"arguments"	"clob"	0	0	5480	NULL	true	3	NULL
5475	"tuples"	"wrd"	64	0	5480	NULL	true	4	NULL
5476	"run"	"bigint"	64	0	5480	NULL	true	5	NULL
5477	"ship"	"bigint"	64	0	5480	NULL	true	6	NULL
5478	"cpu"	"int"	32	0	5480	NULL	true	7	NULL
5479	"io"	"int"	32	0	5480	NULL	true	8	NULL
5482	"id"	"oid"	63	0	5498	NULL	true	0	NULL
5483	"owner"	"clob"	0	0	5498	NULL	true	1	NULL
5484	"defined"	"timestamp"	7	0	5498	NULL	true	2	NULL
5485	"query"	"clob"	0	0	5498	NULL	true	3	NULL
5486	"pipe"	"clob"	0	0	5498	NULL	true	4	NULL
5487	"plan"	"clob"	0	0	5498	NULL	true	5	NULL
5488	"mal"	"int"	32	0	5498	NULL	true	6	NULL
5489	"optimize"	"bigint"	64	0	5498	NULL	true	7	NULL
5490	"start"	"timestamp"	7	0	5498	NULL	true	8	NULL
5491	"stop"	"timestamp"	7	0	5498	NULL	true	9	NULL
5492	"arguments"	"clob"	0	0	5498	NULL	true	10	NULL
5493	"tuples"	"wrd"	64	0	5498	NULL	true	11	NULL
5494	"run"	"bigint"	64	0	5498	NULL	true	12	NULL
5495	"ship"	"bigint"	64	0	5498	NULL	true	13	NULL
5496	"cpu"	"int"	32	0	5498	NULL	true	14	NULL
5497	"io"	"int"	32	0	5498	NULL	true	15	NULL
5524	"event"	"int"	32	0	5537	NULL	true	0	NULL
5525	"clk"	"varchar"	20	0	5537	NULL	true	1	NULL
5526	"pc"	"varchar"	50	0	5537	NULL	true	2	NULL
5527	"thread"	"int"	32	0	5537	NULL	true	3	NULL
5528	"ticks"	"bigint"	64	0	5537	NULL	true	4	NULL
5529	"rrsmb"	"bigint"	64	0	5537	NULL	true	5	NULL
5530	"vmmb"	"bigint"	64	0	5537	NULL	true	6	NULL
5531	"reads"	"bigint"	64	0	5537	NULL	true	7	NULL
5532	"writes"	"bigint"	64	0	5537	NULL	true	8	NULL
5533	"minflt"	"bigint"	64	0	5537	NULL	true	9	NULL
5534	"majflt"	"bigint"	64	0	5537	NULL	true	10	NULL
5535	"nvcsw"	"bigint"	64	0	5537	NULL	true	11	NULL
5536	"stmt"	"clob"	0	0	5537	NULL	true	12	NULL
5664	"user"	"clob"	0	0	5670	NULL	true	0	NULL
5665	"login"	"timestamp"	7	0	5670	NULL	true	1	NULL
5666	"sessiontimeout"	"bigint"	64	0	5670	NULL	true	2	NULL
5667	"lastcommand"	"timestamp"	7	0	5670	NULL	true	3	NULL
5668	"querytimeout"	"bigint"	64	0	5670	NULL	true	4	NULL
5669	"active"	"boolean"	1	0	5670	NULL	true	5	NULL
5747	"name"	"clob"	0	0	5750	NULL	true	0	NULL
5748	"def"	"clob"	0	0	5750	NULL	true	1	NULL
5749	"status"	"clob"	0	0	5750	NULL	true	2	NULL
5756	"name"	"clob"	0	0	5758	NULL	true	0	NULL
5757	"value"	"clob"	0	0	5758	NULL	true	1	NULL
5798	"qtag"	"bigint"	64	0	5806	NULL	true	0	NULL
5799	"user"	"clob"	0	0	5806	NULL	true	1	NULL
5800	"started"	"timestamp"	7	0	5806	NULL	true	2	NULL
5801	"estimate"	"timestamp"	7	0	5806	NULL	true	3	NULL
5802	"progress"	"int"	32	0	5806	NULL	true	4	NULL
5803	"status"	"clob"	0	0	5806	NULL	true	5	NULL
5804	"tag"	"oid"	63	0	5806	NULL	true	6	NULL
5805	"query"	"clob"	0	0	5806	NULL	true	7	NULL
5832	"rowid"	"bigint"	64	0	5836	NULL	true	0	NULL
5833	"fldid"	"int"	32	0	5836	NULL	true	1	NULL
5834	"message"	"clob"	0	0	5836	NULL	true	2	NULL
5835	"input"	"clob"	0	0	5836	NULL	true	3	NULL
6471	"keyword"	"varchar"	40	0	6474	NULL	false	0	NULL
6476	"table_type_id"	"smallint"	16	0	6482	NULL	false	0	NULL
6479	"table_type_name"	"varchar"	25	0	6482	NULL	false	1	NULL
6484	"dependency_type_id"	"smallint"	16	0	6490	NULL	false	0	NULL
6487	"dependency_type_name"	"varchar"	15	0	6490	NULL	false	1	NULL
6505	"file_id"	"int"	32	0	6507	NULL	true	0	NULL
6506	"location"	"char"	256	0	6507	NULL	true	1	NULL
6509	"dim_id"	"int"	32	0	6513	NULL	true	0	NULL
6510	"file_id"	"int"	32	0	6513	NULL	true	1	NULL
6511	"name"	"varchar"	64	0	6513	NULL	true	2	NULL
6512	"length"	"int"	32	0	6513	NULL	true	3	NULL
6515	"var_id"	"int"	32	0	6521	NULL	true	0	NULL
6516	"file_id"	"int"	32	0	6521	NULL	true	1	NULL
6517	"name"	"varchar"	64	0	6521	NULL	true	2	NULL
6518	"vartype"	"varchar"	64	0	6521	NULL	true	3	NULL
6519	"ndim"	"int"	32	0	6521	NULL	true	4	NULL
6520	"coord_dim_id"	"int"	32	0	6521	NULL	true	5	NULL
6523	"var_id"	"int"	32	0	6527	NULL	true	0	NULL
6524	"dim_id"	"int"	32	0	6527	NULL	true	1	NULL
6525	"file_id"	"int"	32	0	6527	NULL	true	2	NULL
6526	"dimpos"	"int"	32	0	6527	NULL	true	3	NULL
6529	"obj_name"	"varchar"	256	0	6535	NULL	true	0	NULL
6530	"att_name"	"varchar"	256	0	6535	NULL	true	1	NULL
6531	"att_type"	"varchar"	64	0	6535	NULL	true	2	NULL
6532	"value"	"clob"	0	0	6535	NULL	true	3	NULL
6533	"file_id"	"int"	32	0	6535	NULL	true	4	NULL
6534	"gr_name"	"varchar"	256	0	6535	NULL	true	5	NULL
6560	"schema"	"clob"	0	0	6574	NULL	true	0	NULL
6561	"table"	"clob"	0	0	6574	NULL	true	1	NULL
6562	"column"	"clob"	0	0	6574	NULL	true	2	NULL
6563	"type"	"clob"	0	0	6574	NULL	true	3	NULL
6564	"mode"	"clob"	0	0	6574	NULL	true	4	NULL
6565	"location"	"clob"	0	0	6574	NULL	true	5	NULL
6566	"count"	"bigint"	64	0	6574	NULL	true	6	NULL
6567	"typewidth"	"int"	32	0	6574	NULL	true	7	NULL
6568	"columnsize"	"bigint"	64	0	6574	NULL	true	8	NULL
6569	"heapsize"	"bigint"	64	0	6574	NULL	true	9	NULL
6570	"hashes"	"bigint"	64	0	6574	NULL	true	10	NULL
6571	"phash"	"boolean"	1	0	6574	NULL	true	11	NULL
6572	"imprints"	"bigint"	64	0	6574	NULL	true	12	NULL
6573	"sorted"	"boolean"	1	0	6574	NULL	true	13	NULL
6576	"schema"	"clob"	0	0	6586	NULL	true	0	NULL
6577	"table"	"clob"	0	0	6586	NULL	true	1	NULL
6578	"column"	"clob"	0	0	6586	NULL	true	2	NULL
6579	"type"	"clob"	0	0	6586	NULL	true	3	NULL
6580	"typewidth"	"int"	32	0	6586	NULL	true	4	NULL
6581	"count"	"bigint"	64	0	6586	NULL	true	5	NULL
6582	"distinct"	"bigint"	64	0	6586	NULL	true	6	NULL
6583	"atomwidth"	"int"	32	0	6586	NULL	true	7	NULL
6584	"reference"	"boolean"	1	0	6586	NULL	true	8	NULL
6585	"sorted"	"boolean"	1	0	6586	NULL	true	9	NULL
6624	"schema"	"clob"	0	0	6634	NULL	true	0	NULL
6625	"table"	"clob"	0	0	6634	NULL	true	1	NULL
6626	"column"	"clob"	0	0	6634	NULL	true	2	NULL
6627	"type"	"clob"	0	0	6634	NULL	true	3	NULL
6628	"count"	"bigint"	64	0	6634	NULL	true	4	NULL
6629	"columnsize"	"bigint"	64	0	6634	NULL	true	5	NULL
6630	"heapsize"	"bigint"	64	0	6634	NULL	true	6	NULL
6631	"hashes"	"bigint"	64	0	6634	NULL	true	7	NULL
6632	"imprints"	"bigint"	64	0	6634	NULL	true	8	NULL
6633	"sorted"	"boolean"	1	0	6634	NULL	true	9	NULL
6636	"schema"	"clob"	0	0	6644	NULL	true	0	NULL
6637	"table"	"clob"	0	0	6644	NULL	true	1	NULL
6638	"count"	"bigint"	64	0	6644	NULL	true	2	NULL
6639	"columnsize"	"bigint"	64	0	6644	NULL	true	3	NULL
6640	"heapsize"	"bigint"	64	0	6644	NULL	true	4	NULL
6641	"hashes"	"bigint"	64	0	6644	NULL	true	5	NULL
6642	"imprints"	"bigint"	64	0	6644	NULL	true	6	NULL
6643	"auxiliary"	"bigint"	64	0	6644	NULL	true	7	NULL
6646	"column_id"	"int"	32	0	6657	NULL	true	0	NULL
6647	"type"	"clob"	0	0	6657	NULL	true	1	NULL
6648	"width"	"int"	32	0	6657	NULL	true	2	NULL
6649	"stamp"	"timestamp"	7	0	6657	NULL	true	3	NULL
6650	"sample"	"bigint"	64	0	6657	NULL	true	4	NULL
6651	"count"	"bigint"	64	0	6657	NULL	true	5	NULL
6652	"unique"	"bigint"	64	0	6657	NULL	true	6	NULL
6653	"nils"	"bigint"	64	0	6657	NULL	true	7	NULL
6654	"minval"	"clob"	0	0	6657	NULL	true	8	NULL
6655	"maxval"	"clob"	0	0	6657	NULL	true	9	NULL
6656	"sorted"	"boolean"	1	0	6657	NULL	true	10	NULL
6747	"file_id"	"bigint"	64	0	6755	NULL	false	0	NULL
6748	"file_location"	"clob"	0	0	6755	NULL	false	1	NULL
6749	"dbschema"	"smallint"	16	0	6755	NULL	false	2	NULL
6750	"format_version"	"varchar"	7	0	6755	NULL	true	3	NULL
6751	"sorting_order"	"varchar"	10	0	6755	NULL	true	4	NULL
6752	"comments"	"clob"	0	0	6755	NULL	true	5	NULL
6757	"sn"	"clob"	0	0	6768	NULL	false	0	NULL
6758	"file_id"	"bigint"	64	0	6768	NULL	false	1	NULL
6759	"ln"	"int"	32	0	6768	NULL	true	2	NULL
6760	"as"	"int"	32	0	6768	NULL	true	3	NULL
6761	"m5"	"clob"	0	0	6768	NULL	true	4	NULL
6762	"sp"	"clob"	0	0	6768	NULL	true	5	NULL
6763	"ur"	"clob"	0	0	6768	NULL	true	6	NULL
6770	"id"	"clob"	0	0	6787	NULL	false	0	NULL
6771	"file_id"	"bigint"	64	0	6787	NULL	false	1	NULL
6772	"cn"	"clob"	0	0	6787	NULL	true	2	NULL
6773	"ds"	"clob"	0	0	6787	NULL	true	3	NULL
6774	"dt"	"timestamp"	7	0	6787	NULL	true	4	NULL
6775	"fo"	"clob"	0	0	6787	NULL	true	5	NULL
6776	"ks"	"clob"	0	0	6787	NULL	true	6	NULL
6777	"lb"	"clob"	0	0	6787	NULL	true	7	NULL
6778	"pg"	"clob"	0	0	6787	NULL	true	8	NULL
6779	"pi"	"int"	32	0	6787	NULL	true	9	NULL
6780	"pl"	"clob"	0	0	6787	NULL	true	10	NULL
6781	"pu"	"clob"	0	0	6787	NULL	true	11	NULL
6782	"sm"	"clob"	0	0	6787	NULL	true	12	NULL
6789	"id"	"clob"	0	0	6799	NULL	false	0	NULL
6790	"file_id"	"bigint"	64	0	6799	NULL	false	1	NULL
6791	"pn"	"clob"	0	0	6799	NULL	true	2	NULL
6792	"cl"	"clob"	0	0	6799	NULL	true	3	NULL
6793	"pp"	"clob"	0	0	6799	NULL	true	4	NULL
6794	"vn"	"clob"	0	0	6799	NULL	true	5	NULL
6801	"qname"	"clob"	0	0	6812	NULL	false	0	NULL
6802	"flag"	"smallint"	16	0	6812	NULL	false	1	NULL
6803	"rname"	"clob"	0	0	6812	NULL	false	2	NULL
6804	"pos"	"int"	32	0	6812	NULL	false	3	NULL
6805	"mapq"	"smallint"	16	0	6812	NULL	false	4	NULL
6806	"cigar"	"clob"	0	0	6812	NULL	false	5	NULL
6807	"rnext"	"clob"	0	0	6812	NULL	false	6	NULL
6808	"pnext"	"int"	32	0	6812	NULL	false	7	NULL
6809	"tlen"	"int"	32	0	6812	NULL	false	8	NULL
6810	"seq"	"clob"	0	0	6812	NULL	false	9	NULL
6811	"qual"	"clob"	0	0	6812	NULL	false	10	NULL
6882	"function_id"	"int"	32	0	6883	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5204	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5214	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5230	"db_user_info"	2000	NULL	0	true	0	0
5236	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5240	"user_role"	2000	NULL	0	true	0	0
5243	"auths"	2000	NULL	0	true	0	0
5247	"privileges"	2000	NULL	0	true	0	0
5469	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5480	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5498	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5537	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5670	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5750	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
5758	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
5806	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
5836	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6474	"keywords"	2000	NULL	0	true	0	0
6482	"table_types"	2000	NULL	0	true	0	0
6490	"dependency_types"	2000	NULL	0	true	0	0
6507	"netcdf_files"	2000	NULL	0	true	0	0
6513	"netcdf_dims"	2000	NULL	0	true	0	0
6521	"netcdf_vars"	2000	NULL	0	true	0	0
6527	"netcdf_vardim"	2000	NULL	0	true	0	0
6535	"netcdf_attrs"	2000	NULL	0	true	0	0
6574	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6586	"storagemodelinput"	2000	NULL	0	true	0	0
6634	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6644	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6657	"statistics"	2000	NULL	0	true	0	0
6755	"files"	6699	NULL	0	true	0	0
6768	"sq"	6699	NULL	0	true	0	0
6787	"rg"	6699	NULL	0	true	0	0
6799	"pg"	6699	NULL	0	true	0	0
6812	"export"	6699	NULL	0	true	0	0
6883	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 3805 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	28	"res_0"	"oid"	63	0	0	0
2156	28	"arg_1"	"wrd"	64	0	1	1
2157	29	"res_0"	"oid"	63	0	0	0
2158	29	"arg_1"	"oid"	63	0	1	1
2159	30	"res_0"	"wrd"	64	0	0	0
2160	30	"arg_1"	"any"	0	0	1	1
2161	31	"res_0"	"wrd"	64	0	0	0
2162	31	"arg_1"	"wrd"	64	0	1	1
2163	31	"arg_2"	"int"	32	0	1	2
2164	31	"arg_3"	"any"	0	0	1	3
2165	32	"res_0"	"boolean"	1	0	0	0
2166	32	"arg_1"	"any"	0	0	1	1
2167	32	"arg_2"	"any"	0	0	1	2
2168	33	"res_0"	"boolean"	1	0	0	0
2169	33	"arg_1"	"any"	0	0	1	1
2170	33	"arg_2"	"any"	0	0	1	2
2171	34	"res_0"	"boolean"	1	0	0	0
2172	34	"arg_1"	"any"	0	0	1	1
2173	35	"res_0"	"boolean"	1	0	0	0
2174	35	"arg_1"	"any"	0	0	1	1
2175	35	"arg_2"	"any"	0	0	1	2
2176	36	"res_0"	"boolean"	1	0	0	0
2177	36	"arg_1"	"any"	0	0	1	1
2178	36	"arg_2"	"any"	0	0	1	2
2179	37	"res_0"	"boolean"	1	0	0	0
2180	37	"arg_1"	"any"	0	0	1	1
2181	37	"arg_2"	"any"	0	0	1	2
2182	38	"res_0"	"boolean"	1	0	0	0
2183	38	"arg_1"	"any"	0	0	1	1
2184	38	"arg_2"	"any"	0	0	1	2
2185	42	"res_0"	"boolean"	1	0	0	0
2186	42	"arg_1"	"any"	0	0	1	1
2187	42	"arg_2"	"any"	0	0	1	2
2188	43	"res_0"	"oid"	63	0	0	0
2189	43	"arg_1"	"any"	0	0	1	1
2190	44	"res_0"	"int"	32	0	0	0
2191	44	"arg_1"	"any"	0	0	1	1
2192	45	"res_0"	"oid"	63	0	0	0
2193	45	"arg_1"	"any"	0	0	1	1
2194	45	"arg_2"	"varchar"	0	0	1	2
2195	45	"arg_3"	"varchar"	0	0	1	3
2196	48	"res_0"	"any"	0	0	0	0
2197	48	"arg_1"	"any"	0	0	1	1
2198	48	"arg_2"	"any"	0	0	1	2
2199	49	"res_0"	"any"	0	0	0	0
2200	49	"arg_1"	"any"	0	0	1	1
2201	49	"arg_2"	"any"	0	0	1	2
2202	50	"res_0"	"any"	0	0	0	0
2203	50	"arg_1"	"boolean"	1	0	1	1
2204	50	"arg_2"	"any"	0	0	1	2
2205	50	"arg_3"	"any"	0	0	1	3
2206	68	"res_0"	"oid"	63	0	0	0
2207	68	"arg_1"	"oid"	63	0	1	1
2208	68	"arg_2"	"oid"	63	0	1	2
2209	69	"res_0"	"tinyint"	8	0	0	0
2210	69	"arg_1"	"tinyint"	8	0	1	1
2211	69	"arg_2"	"tinyint"	8	0	1	2
2212	70	"res_0"	"smallint"	16	0	0	0
2213	70	"arg_1"	"smallint"	16	0	1	1
2214	70	"arg_2"	"smallint"	16	0	1	2
2215	71	"res_0"	"int"	32	0	0	0
2216	71	"arg_1"	"int"	32	0	1	1
2217	71	"arg_2"	"int"	32	0	1	2
2218	72	"res_0"	"bigint"	64	0	0	0
2219	72	"arg_1"	"bigint"	64	0	1	1
2220	72	"arg_2"	"bigint"	64	0	1	2
2221	73	"res_0"	"wrd"	64	0	0	0
2222	73	"arg_1"	"wrd"	64	0	1	1
2223	73	"arg_2"	"wrd"	64	0	1	2
2224	74	"res_0"	"decimal"	2	0	0	0
2225	74	"arg_1"	"decimal"	2	0	1	1
2226	74	"arg_2"	"decimal"	2	0	1	2
2227	75	"res_0"	"decimal"	4	0	0	0
2228	75	"arg_1"	"decimal"	4	0	1	1
2229	75	"arg_2"	"decimal"	4	0	1	2
2230	76	"res_0"	"decimal"	9	0	0	0
2231	76	"arg_1"	"decimal"	9	0	1	1
2232	76	"arg_2"	"decimal"	9	0	1	2
2233	77	"res_0"	"decimal"	19	0	0	0
2234	77	"arg_1"	"decimal"	19	0	1	1
2235	77	"arg_2"	"decimal"	19	0	1	2
2236	78	"res_0"	"real"	24	0	0	0
2237	78	"arg_1"	"real"	24	0	1	1
2238	78	"arg_2"	"real"	24	0	1	2
2239	79	"res_0"	"double"	53	0	0	0
2240	79	"arg_1"	"double"	53	0	1	1
2241	79	"arg_2"	"double"	53	0	1	2
2242	89	"res_0"	"boolean"	1	0	0	0
2243	89	"arg_1"	"any"	0	0	1	1
2244	90	"res_0"	"boolean"	1	0	0	0
2245	90	"arg_1"	"boolean"	1	0	1	1
2246	90	"arg_2"	"any"	0	0	1	2
2247	91	"res_0"	"int"	32	0	0	0
2248	91	"arg_1"	"any"	0	0	1	1
2249	91	"arg_2"	"boolean"	1	0	1	2
2250	91	"arg_3"	"boolean"	1	0	1	3
2251	92	"res_0"	"int"	32	0	0	0
2252	92	"arg_1"	"any"	0	0	1	1
2253	92	"arg_2"	"boolean"	1	0	1	2
2254	92	"arg_3"	"boolean"	1	0	1	3
2255	93	"res_0"	"int"	32	0	0	0
2256	93	"arg_1"	"any"	0	0	1	1
2257	93	"arg_2"	"boolean"	1	0	1	2
2258	93	"arg_3"	"boolean"	1	0	1	3
2259	94	"res_0"	"boolean"	1	0	0	0
2260	94	"arg_1"	"boolean"	1	0	1	1
2261	94	"arg_2"	"boolean"	1	0	1	2
2262	95	"res_0"	"boolean"	1	0	0	0
2263	95	"arg_1"	"boolean"	1	0	1	1
2264	95	"arg_2"	"boolean"	1	0	1	2
2265	96	"res_0"	"boolean"	1	0	0	0
2266	96	"arg_1"	"boolean"	1	0	1	1
2267	96	"arg_2"	"boolean"	1	0	1	2
2268	97	"res_0"	"boolean"	1	0	0	0
2269	97	"arg_1"	"boolean"	1	0	1	1
2270	98	"res_0"	"smallint"	16	0	0	0
2271	98	"arg_1"	"smallint"	16	0	1	1
2272	98	"arg_2"	"tinyint"	8	0	1	2
2273	99	"res_0"	"smallint"	16	0	0	0
2274	99	"arg_1"	"smallint"	16	0	1	1
2275	99	"arg_2"	"tinyint"	8	0	1	2
2276	100	"res_0"	"int"	32	0	0	0
2277	100	"arg_1"	"int"	32	0	1	1
2278	100	"arg_2"	"tinyint"	8	0	1	2
2279	101	"res_0"	"int"	32	0	0	0
2280	101	"arg_1"	"int"	32	0	1	1
2281	101	"arg_2"	"tinyint"	8	0	1	2
2282	102	"res_0"	"int"	32	0	0	0
2283	102	"arg_1"	"int"	32	0	1	1
2284	102	"arg_2"	"smallint"	16	0	1	2
2285	103	"res_0"	"int"	32	0	0	0
2286	103	"arg_1"	"int"	32	0	1	1
2287	103	"arg_2"	"smallint"	16	0	1	2
2288	104	"res_0"	"bigint"	64	0	0	0
2289	104	"arg_1"	"bigint"	64	0	1	1
2290	104	"arg_2"	"tinyint"	8	0	1	2
2291	105	"res_0"	"bigint"	64	0	0	0
2292	105	"arg_1"	"bigint"	64	0	1	1
2293	105	"arg_2"	"tinyint"	8	0	1	2
2294	106	"res_0"	"bigint"	64	0	0	0
2295	106	"arg_1"	"bigint"	64	0	1	1
2296	106	"arg_2"	"smallint"	16	0	1	2
2297	107	"res_0"	"bigint"	64	0	0	0
2298	107	"arg_1"	"bigint"	64	0	1	1
2299	107	"arg_2"	"smallint"	16	0	1	2
2300	108	"res_0"	"bigint"	64	0	0	0
2301	108	"arg_1"	"bigint"	64	0	1	1
2302	108	"arg_2"	"int"	32	0	1	2
2303	109	"res_0"	"bigint"	64	0	0	0
2304	109	"arg_1"	"bigint"	64	0	1	1
2305	109	"arg_2"	"int"	32	0	1	2
2306	110	"res_0"	"bigint"	64	0	0	0
2307	110	"arg_1"	"bigint"	64	0	1	1
2308	110	"arg_2"	"wrd"	64	0	1	2
2309	111	"res_0"	"bigint"	64	0	0	0
2310	111	"arg_1"	"bigint"	64	0	1	1
2311	111	"arg_2"	"wrd"	64	0	1	2
2312	112	"res_0"	"wrd"	64	0	0	0
2313	112	"arg_1"	"wrd"	64	0	1	1
2314	112	"arg_2"	"tinyint"	8	0	1	2
2315	113	"res_0"	"wrd"	64	0	0	0
2316	113	"arg_1"	"wrd"	64	0	1	1
2317	113	"arg_2"	"tinyint"	8	0	1	2
2318	114	"res_0"	"wrd"	64	0	0	0
2319	114	"arg_1"	"wrd"	64	0	1	1
2320	114	"arg_2"	"smallint"	16	0	1	2
2321	115	"res_0"	"wrd"	64	0	0	0
2322	115	"arg_1"	"wrd"	64	0	1	1
2323	115	"arg_2"	"smallint"	16	0	1	2
2324	116	"res_0"	"wrd"	64	0	0	0
2325	116	"arg_1"	"wrd"	64	0	1	1
2326	116	"arg_2"	"int"	32	0	1	2
2327	117	"res_0"	"wrd"	64	0	0	0
2328	117	"arg_1"	"wrd"	64	0	1	1
2329	117	"arg_2"	"int"	32	0	1	2
2330	118	"res_0"	"oid"	63	0	0	0
2331	118	"arg_1"	"oid"	63	0	1	1
2332	118	"arg_2"	"oid"	63	0	1	2
2333	119	"res_0"	"oid"	63	0	0	0
2334	119	"arg_1"	"oid"	63	0	1	1
2335	119	"arg_2"	"oid"	63	0	1	2
2336	120	"res_0"	"oid"	63	0	0	0
2337	120	"arg_1"	"oid"	63	0	1	1
2338	120	"arg_2"	"oid"	63	0	1	2
2339	121	"res_0"	"oid"	63	0	0	0
2340	121	"arg_1"	"oid"	63	0	1	1
2341	121	"arg_2"	"oid"	63	0	1	2
2342	122	"res_0"	"oid"	63	0	0	0
2343	122	"arg_1"	"oid"	63	0	1	1
2344	122	"arg_2"	"oid"	63	0	1	2
2345	123	"res_0"	"oid"	63	0	0	0
2346	123	"arg_1"	"oid"	63	0	1	1
2347	123	"arg_2"	"oid"	63	0	1	2
2348	124	"res_0"	"oid"	63	0	0	0
2349	124	"arg_1"	"oid"	63	0	1	1
2350	124	"arg_2"	"oid"	63	0	1	2
2351	125	"res_0"	"oid"	63	0	0	0
2352	125	"arg_1"	"oid"	63	0	1	1
2353	126	"res_0"	"oid"	63	0	0	0
2354	126	"arg_1"	"oid"	63	0	1	1
2355	126	"arg_2"	"int"	32	0	1	2
2356	127	"res_0"	"oid"	63	0	0	0
2357	127	"arg_1"	"oid"	63	0	1	1
2358	127	"arg_2"	"int"	32	0	1	2
2359	128	"res_0"	"oid"	63	0	0	0
2360	128	"arg_1"	"oid"	63	0	1	1
2361	129	"res_0"	"oid"	63	0	0	0
2362	129	"arg_1"	"oid"	63	0	1	1
2363	130	"res_0"	"tinyint"	8	0	0	0
2364	130	"arg_1"	"oid"	63	0	1	1
2365	131	"res_0"	"oid"	63	0	0	0
2366	131	"arg_1"	"oid"	63	0	1	1
2367	131	"arg_2"	"oid"	63	0	1	2
2368	132	"res_0"	"oid"	63	0	0	0
2369	132	"arg_1"	"oid"	63	0	1	1
2370	132	"arg_2"	"oid"	63	0	1	2
2371	133	"res_0"	"month_interval"	32	0	0	0
2372	133	"arg_1"	"month_interval"	32	0	1	1
2373	133	"arg_2"	"oid"	63	0	1	2
2374	134	"res_0"	"month_interval"	32	0	0	0
2375	134	"arg_1"	"month_interval"	32	0	1	1
2376	134	"arg_2"	"oid"	63	0	1	2
2377	135	"res_0"	"month_interval"	32	0	0	0
2378	135	"arg_1"	"month_interval"	32	0	1	1
2379	135	"arg_2"	"oid"	63	0	1	2
2380	136	"res_0"	"month_interval"	32	0	0	0
2381	136	"arg_1"	"month_interval"	32	0	1	1
2382	136	"arg_2"	"oid"	63	0	1	2
2383	137	"res_0"	"sec_interval"	13	0	0	0
2384	137	"arg_1"	"sec_interval"	13	0	1	1
2385	137	"arg_2"	"oid"	63	0	1	2
2386	138	"res_0"	"sec_interval"	13	0	0	0
2387	138	"arg_1"	"sec_interval"	13	0	1	1
2388	138	"arg_2"	"oid"	63	0	1	2
2389	139	"res_0"	"sec_interval"	13	0	0	0
2390	139	"arg_1"	"sec_interval"	13	0	1	1
2391	139	"arg_2"	"oid"	63	0	1	2
2392	140	"res_0"	"sec_interval"	13	0	0	0
2393	140	"arg_1"	"sec_interval"	13	0	1	1
2394	140	"arg_2"	"oid"	63	0	1	2
2395	141	"res_0"	"tinyint"	8	0	0	0
2396	141	"arg_1"	"tinyint"	8	0	1	1
2397	141	"arg_2"	"tinyint"	8	0	1	2
2398	142	"res_0"	"tinyint"	8	0	0	0
2399	142	"arg_1"	"tinyint"	8	0	1	1
2400	142	"arg_2"	"tinyint"	8	0	1	2
2401	143	"res_0"	"tinyint"	8	0	0	0
2402	143	"arg_1"	"tinyint"	8	0	1	1
2403	143	"arg_2"	"tinyint"	8	0	1	2
2404	144	"res_0"	"tinyint"	8	0	0	0
2405	144	"arg_1"	"tinyint"	8	0	1	1
2406	144	"arg_2"	"tinyint"	8	0	1	2
2407	145	"res_0"	"tinyint"	8	0	0	0
2408	145	"arg_1"	"tinyint"	8	0	1	1
2409	145	"arg_2"	"tinyint"	8	0	1	2
2410	146	"res_0"	"tinyint"	8	0	0	0
2411	146	"arg_1"	"tinyint"	8	0	1	1
2412	146	"arg_2"	"tinyint"	8	0	1	2
2413	147	"res_0"	"tinyint"	8	0	0	0
2414	147	"arg_1"	"tinyint"	8	0	1	1
2415	147	"arg_2"	"tinyint"	8	0	1	2
2416	148	"res_0"	"tinyint"	8	0	0	0
2417	148	"arg_1"	"tinyint"	8	0	1	1
2418	149	"res_0"	"tinyint"	8	0	0	0
2419	149	"arg_1"	"tinyint"	8	0	1	1
2420	149	"arg_2"	"int"	32	0	1	2
2421	150	"res_0"	"tinyint"	8	0	0	0
2422	150	"arg_1"	"tinyint"	8	0	1	1
2423	150	"arg_2"	"int"	32	0	1	2
2424	151	"res_0"	"tinyint"	8	0	0	0
2425	151	"arg_1"	"tinyint"	8	0	1	1
2426	152	"res_0"	"tinyint"	8	0	0	0
2427	152	"arg_1"	"tinyint"	8	0	1	1
2428	153	"res_0"	"tinyint"	8	0	0	0
2429	153	"arg_1"	"tinyint"	8	0	1	1
2430	154	"res_0"	"tinyint"	8	0	0	0
2431	154	"arg_1"	"tinyint"	8	0	1	1
2432	154	"arg_2"	"tinyint"	8	0	1	2
2433	155	"res_0"	"tinyint"	8	0	0	0
2434	155	"arg_1"	"tinyint"	8	0	1	1
2435	155	"arg_2"	"tinyint"	8	0	1	2
2436	156	"res_0"	"month_interval"	32	0	0	0
2437	156	"arg_1"	"month_interval"	32	0	1	1
2438	156	"arg_2"	"tinyint"	8	0	1	2
2439	157	"res_0"	"month_interval"	32	0	0	0
2440	157	"arg_1"	"month_interval"	32	0	1	1
2441	157	"arg_2"	"tinyint"	8	0	1	2
2442	158	"res_0"	"month_interval"	32	0	0	0
2443	158	"arg_1"	"month_interval"	32	0	1	1
2444	158	"arg_2"	"tinyint"	8	0	1	2
2445	159	"res_0"	"month_interval"	32	0	0	0
2446	159	"arg_1"	"month_interval"	32	0	1	1
2447	159	"arg_2"	"tinyint"	8	0	1	2
2448	160	"res_0"	"sec_interval"	13	0	0	0
2449	160	"arg_1"	"sec_interval"	13	0	1	1
2450	160	"arg_2"	"tinyint"	8	0	1	2
2451	161	"res_0"	"sec_interval"	13	0	0	0
2452	161	"arg_1"	"sec_interval"	13	0	1	1
2453	161	"arg_2"	"tinyint"	8	0	1	2
2454	162	"res_0"	"sec_interval"	13	0	0	0
2455	162	"arg_1"	"sec_interval"	13	0	1	1
2456	162	"arg_2"	"tinyint"	8	0	1	2
2457	163	"res_0"	"sec_interval"	13	0	0	0
2458	163	"arg_1"	"sec_interval"	13	0	1	1
2459	163	"arg_2"	"tinyint"	8	0	1	2
2460	164	"res_0"	"smallint"	16	0	0	0
2461	164	"arg_1"	"smallint"	16	0	1	1
2462	164	"arg_2"	"smallint"	16	0	1	2
2463	165	"res_0"	"smallint"	16	0	0	0
2464	165	"arg_1"	"smallint"	16	0	1	1
2465	165	"arg_2"	"smallint"	16	0	1	2
2466	166	"res_0"	"smallint"	16	0	0	0
2467	166	"arg_1"	"smallint"	16	0	1	1
2468	166	"arg_2"	"smallint"	16	0	1	2
2469	167	"res_0"	"smallint"	16	0	0	0
2470	167	"arg_1"	"smallint"	16	0	1	1
2471	167	"arg_2"	"smallint"	16	0	1	2
2472	168	"res_0"	"smallint"	16	0	0	0
2473	168	"arg_1"	"smallint"	16	0	1	1
2474	168	"arg_2"	"smallint"	16	0	1	2
2475	169	"res_0"	"smallint"	16	0	0	0
2476	169	"arg_1"	"smallint"	16	0	1	1
2477	169	"arg_2"	"smallint"	16	0	1	2
2478	170	"res_0"	"smallint"	16	0	0	0
2479	170	"arg_1"	"smallint"	16	0	1	1
2480	170	"arg_2"	"smallint"	16	0	1	2
2481	171	"res_0"	"smallint"	16	0	0	0
2482	171	"arg_1"	"smallint"	16	0	1	1
2483	172	"res_0"	"smallint"	16	0	0	0
2484	172	"arg_1"	"smallint"	16	0	1	1
2485	172	"arg_2"	"int"	32	0	1	2
2486	173	"res_0"	"smallint"	16	0	0	0
2487	173	"arg_1"	"smallint"	16	0	1	1
2488	173	"arg_2"	"int"	32	0	1	2
2489	174	"res_0"	"smallint"	16	0	0	0
2490	174	"arg_1"	"smallint"	16	0	1	1
2491	175	"res_0"	"smallint"	16	0	0	0
2492	175	"arg_1"	"smallint"	16	0	1	1
2493	176	"res_0"	"tinyint"	8	0	0	0
2494	176	"arg_1"	"smallint"	16	0	1	1
2495	177	"res_0"	"smallint"	16	0	0	0
2496	177	"arg_1"	"smallint"	16	0	1	1
2497	177	"arg_2"	"smallint"	16	0	1	2
2498	178	"res_0"	"smallint"	16	0	0	0
2499	178	"arg_1"	"smallint"	16	0	1	1
2500	178	"arg_2"	"smallint"	16	0	1	2
2501	179	"res_0"	"month_interval"	32	0	0	0
2502	179	"arg_1"	"month_interval"	32	0	1	1
2503	179	"arg_2"	"smallint"	16	0	1	2
2504	180	"res_0"	"month_interval"	32	0	0	0
2505	180	"arg_1"	"month_interval"	32	0	1	1
2506	180	"arg_2"	"smallint"	16	0	1	2
2507	181	"res_0"	"month_interval"	32	0	0	0
2508	181	"arg_1"	"month_interval"	32	0	1	1
2509	181	"arg_2"	"smallint"	16	0	1	2
2510	182	"res_0"	"month_interval"	32	0	0	0
2511	182	"arg_1"	"month_interval"	32	0	1	1
2512	182	"arg_2"	"smallint"	16	0	1	2
2513	183	"res_0"	"sec_interval"	13	0	0	0
2514	183	"arg_1"	"sec_interval"	13	0	1	1
2515	183	"arg_2"	"smallint"	16	0	1	2
2516	184	"res_0"	"sec_interval"	13	0	0	0
2517	184	"arg_1"	"sec_interval"	13	0	1	1
2518	184	"arg_2"	"smallint"	16	0	1	2
2519	185	"res_0"	"sec_interval"	13	0	0	0
2520	185	"arg_1"	"sec_interval"	13	0	1	1
2521	185	"arg_2"	"smallint"	16	0	1	2
2522	186	"res_0"	"sec_interval"	13	0	0	0
2523	186	"arg_1"	"sec_interval"	13	0	1	1
2524	186	"arg_2"	"smallint"	16	0	1	2
2525	187	"res_0"	"int"	32	0	0	0
2526	187	"arg_1"	"int"	32	0	1	1
2527	187	"arg_2"	"int"	32	0	1	2
2528	188	"res_0"	"int"	32	0	0	0
2529	188	"arg_1"	"int"	32	0	1	1
2530	188	"arg_2"	"int"	32	0	1	2
2531	189	"res_0"	"int"	32	0	0	0
2532	189	"arg_1"	"int"	32	0	1	1
2533	189	"arg_2"	"int"	32	0	1	2
2534	190	"res_0"	"int"	32	0	0	0
2535	190	"arg_1"	"int"	32	0	1	1
2536	190	"arg_2"	"int"	32	0	1	2
2537	191	"res_0"	"int"	32	0	0	0
2538	191	"arg_1"	"int"	32	0	1	1
2539	191	"arg_2"	"int"	32	0	1	2
2540	192	"res_0"	"int"	32	0	0	0
2541	192	"arg_1"	"int"	32	0	1	1
2542	192	"arg_2"	"int"	32	0	1	2
2543	193	"res_0"	"int"	32	0	0	0
2544	193	"arg_1"	"int"	32	0	1	1
2545	193	"arg_2"	"int"	32	0	1	2
2546	194	"res_0"	"int"	32	0	0	0
2547	194	"arg_1"	"int"	32	0	1	1
2548	195	"res_0"	"int"	32	0	0	0
2549	195	"arg_1"	"int"	32	0	1	1
2550	195	"arg_2"	"int"	32	0	1	2
2551	196	"res_0"	"int"	32	0	0	0
2552	196	"arg_1"	"int"	32	0	1	1
2553	196	"arg_2"	"int"	32	0	1	2
2554	197	"res_0"	"int"	32	0	0	0
2555	197	"arg_1"	"int"	32	0	1	1
2556	198	"res_0"	"int"	32	0	0	0
2557	198	"arg_1"	"int"	32	0	1	1
2558	199	"res_0"	"tinyint"	8	0	0	0
2559	199	"arg_1"	"int"	32	0	1	1
2560	200	"res_0"	"int"	32	0	0	0
2561	200	"arg_1"	"int"	32	0	1	1
2562	200	"arg_2"	"int"	32	0	1	2
2563	201	"res_0"	"int"	32	0	0	0
2564	201	"arg_1"	"int"	32	0	1	1
2565	201	"arg_2"	"int"	32	0	1	2
2566	202	"res_0"	"month_interval"	32	0	0	0
2567	202	"arg_1"	"month_interval"	32	0	1	1
2568	202	"arg_2"	"int"	32	0	1	2
2569	203	"res_0"	"month_interval"	32	0	0	0
2570	203	"arg_1"	"month_interval"	32	0	1	1
2571	203	"arg_2"	"int"	32	0	1	2
2572	204	"res_0"	"month_interval"	32	0	0	0
2573	204	"arg_1"	"month_interval"	32	0	1	1
2574	204	"arg_2"	"int"	32	0	1	2
2575	205	"res_0"	"month_interval"	32	0	0	0
2576	205	"arg_1"	"month_interval"	32	0	1	1
2577	205	"arg_2"	"int"	32	0	1	2
2578	206	"res_0"	"sec_interval"	13	0	0	0
2579	206	"arg_1"	"sec_interval"	13	0	1	1
2580	206	"arg_2"	"int"	32	0	1	2
2581	207	"res_0"	"sec_interval"	13	0	0	0
2582	207	"arg_1"	"sec_interval"	13	0	1	1
2583	207	"arg_2"	"int"	32	0	1	2
2584	208	"res_0"	"sec_interval"	13	0	0	0
2585	208	"arg_1"	"sec_interval"	13	0	1	1
2586	208	"arg_2"	"int"	32	0	1	2
2587	209	"res_0"	"sec_interval"	13	0	0	0
2588	209	"arg_1"	"sec_interval"	13	0	1	1
2589	209	"arg_2"	"int"	32	0	1	2
2590	210	"res_0"	"bigint"	64	0	0	0
2591	210	"arg_1"	"bigint"	64	0	1	1
2592	210	"arg_2"	"bigint"	64	0	1	2
2593	211	"res_0"	"bigint"	64	0	0	0
2594	211	"arg_1"	"bigint"	64	0	1	1
2595	211	"arg_2"	"bigint"	64	0	1	2
2596	212	"res_0"	"bigint"	64	0	0	0
2597	212	"arg_1"	"bigint"	64	0	1	1
2598	212	"arg_2"	"bigint"	64	0	1	2
2599	213	"res_0"	"bigint"	64	0	0	0
2600	213	"arg_1"	"bigint"	64	0	1	1
2601	213	"arg_2"	"bigint"	64	0	1	2
2602	214	"res_0"	"bigint"	64	0	0	0
2603	214	"arg_1"	"bigint"	64	0	1	1
2604	214	"arg_2"	"bigint"	64	0	1	2
2605	215	"res_0"	"bigint"	64	0	0	0
2606	215	"arg_1"	"bigint"	64	0	1	1
2607	215	"arg_2"	"bigint"	64	0	1	2
2608	216	"res_0"	"bigint"	64	0	0	0
2609	216	"arg_1"	"bigint"	64	0	1	1
2610	216	"arg_2"	"bigint"	64	0	1	2
2611	217	"res_0"	"bigint"	64	0	0	0
2612	217	"arg_1"	"bigint"	64	0	1	1
2613	218	"res_0"	"bigint"	64	0	0	0
2614	218	"arg_1"	"bigint"	64	0	1	1
2615	218	"arg_2"	"int"	32	0	1	2
2616	219	"res_0"	"bigint"	64	0	0	0
2617	219	"arg_1"	"bigint"	64	0	1	1
2618	219	"arg_2"	"int"	32	0	1	2
2619	220	"res_0"	"bigint"	64	0	0	0
2620	220	"arg_1"	"bigint"	64	0	1	1
2621	221	"res_0"	"bigint"	64	0	0	0
2622	221	"arg_1"	"bigint"	64	0	1	1
2623	222	"res_0"	"tinyint"	8	0	0	0
2624	222	"arg_1"	"bigint"	64	0	1	1
2625	223	"res_0"	"bigint"	64	0	0	0
2626	223	"arg_1"	"bigint"	64	0	1	1
2627	223	"arg_2"	"bigint"	64	0	1	2
2628	224	"res_0"	"bigint"	64	0	0	0
2629	224	"arg_1"	"bigint"	64	0	1	1
2630	224	"arg_2"	"bigint"	64	0	1	2
2631	225	"res_0"	"month_interval"	32	0	0	0
2632	225	"arg_1"	"month_interval"	32	0	1	1
2633	225	"arg_2"	"bigint"	64	0	1	2
2634	226	"res_0"	"month_interval"	32	0	0	0
2635	226	"arg_1"	"month_interval"	32	0	1	1
2636	226	"arg_2"	"bigint"	64	0	1	2
2637	227	"res_0"	"month_interval"	32	0	0	0
2638	227	"arg_1"	"month_interval"	32	0	1	1
2639	227	"arg_2"	"bigint"	64	0	1	2
2640	228	"res_0"	"month_interval"	32	0	0	0
2641	228	"arg_1"	"month_interval"	32	0	1	1
2642	228	"arg_2"	"bigint"	64	0	1	2
2643	229	"res_0"	"sec_interval"	13	0	0	0
2644	229	"arg_1"	"sec_interval"	13	0	1	1
2645	229	"arg_2"	"bigint"	64	0	1	2
2646	230	"res_0"	"sec_interval"	13	0	0	0
2647	230	"arg_1"	"sec_interval"	13	0	1	1
2648	230	"arg_2"	"bigint"	64	0	1	2
2649	231	"res_0"	"sec_interval"	13	0	0	0
2650	231	"arg_1"	"sec_interval"	13	0	1	1
2651	231	"arg_2"	"bigint"	64	0	1	2
2652	232	"res_0"	"sec_interval"	13	0	0	0
2653	232	"arg_1"	"sec_interval"	13	0	1	1
2654	232	"arg_2"	"bigint"	64	0	1	2
2655	233	"res_0"	"wrd"	64	0	0	0
2656	233	"arg_1"	"wrd"	64	0	1	1
2657	233	"arg_2"	"wrd"	64	0	1	2
2658	234	"res_0"	"wrd"	64	0	0	0
2659	234	"arg_1"	"wrd"	64	0	1	1
2660	234	"arg_2"	"wrd"	64	0	1	2
2661	235	"res_0"	"wrd"	64	0	0	0
2662	235	"arg_1"	"wrd"	64	0	1	1
2663	235	"arg_2"	"wrd"	64	0	1	2
2664	236	"res_0"	"wrd"	64	0	0	0
2665	236	"arg_1"	"wrd"	64	0	1	1
2666	236	"arg_2"	"wrd"	64	0	1	2
2667	237	"res_0"	"wrd"	64	0	0	0
2668	237	"arg_1"	"wrd"	64	0	1	1
2669	237	"arg_2"	"wrd"	64	0	1	2
2670	238	"res_0"	"wrd"	64	0	0	0
2671	238	"arg_1"	"wrd"	64	0	1	1
2672	238	"arg_2"	"wrd"	64	0	1	2
2673	239	"res_0"	"wrd"	64	0	0	0
2674	239	"arg_1"	"wrd"	64	0	1	1
2675	239	"arg_2"	"wrd"	64	0	1	2
2676	240	"res_0"	"wrd"	64	0	0	0
2677	240	"arg_1"	"wrd"	64	0	1	1
2678	241	"res_0"	"wrd"	64	0	0	0
2679	241	"arg_1"	"wrd"	64	0	1	1
2680	241	"arg_2"	"int"	32	0	1	2
2681	242	"res_0"	"wrd"	64	0	0	0
2682	242	"arg_1"	"wrd"	64	0	1	1
2683	242	"arg_2"	"int"	32	0	1	2
2684	243	"res_0"	"wrd"	64	0	0	0
2685	243	"arg_1"	"wrd"	64	0	1	1
2686	244	"res_0"	"wrd"	64	0	0	0
2687	244	"arg_1"	"wrd"	64	0	1	1
2688	245	"res_0"	"tinyint"	8	0	0	0
2689	245	"arg_1"	"wrd"	64	0	1	1
2690	246	"res_0"	"wrd"	64	0	0	0
2691	246	"arg_1"	"wrd"	64	0	1	1
2692	246	"arg_2"	"wrd"	64	0	1	2
2693	247	"res_0"	"wrd"	64	0	0	0
2694	247	"arg_1"	"wrd"	64	0	1	1
2695	247	"arg_2"	"wrd"	64	0	1	2
2696	248	"res_0"	"month_interval"	32	0	0	0
2697	248	"arg_1"	"month_interval"	32	0	1	1
2698	248	"arg_2"	"wrd"	64	0	1	2
2699	249	"res_0"	"month_interval"	32	0	0	0
2700	249	"arg_1"	"month_interval"	32	0	1	1
2701	249	"arg_2"	"wrd"	64	0	1	2
2702	250	"res_0"	"month_interval"	32	0	0	0
2703	250	"arg_1"	"month_interval"	32	0	1	1
2704	250	"arg_2"	"wrd"	64	0	1	2
2705	251	"res_0"	"month_interval"	32	0	0	0
2706	251	"arg_1"	"month_interval"	32	0	1	1
2707	251	"arg_2"	"wrd"	64	0	1	2
2708	252	"res_0"	"sec_interval"	13	0	0	0
2709	252	"arg_1"	"sec_interval"	13	0	1	1
2710	252	"arg_2"	"wrd"	64	0	1	2
2711	253	"res_0"	"sec_interval"	13	0	0	0
2712	253	"arg_1"	"sec_interval"	13	0	1	1
2713	253	"arg_2"	"wrd"	64	0	1	2
2714	254	"res_0"	"sec_interval"	13	0	0	0
2715	254	"arg_1"	"sec_interval"	13	0	1	1
2716	254	"arg_2"	"wrd"	64	0	1	2
2717	255	"res_0"	"sec_interval"	13	0	0	0
2718	255	"arg_1"	"sec_interval"	13	0	1	1
2719	255	"arg_2"	"wrd"	64	0	1	2
2720	256	"res_0"	"decimal"	2	0	0	0
2721	256	"arg_1"	"decimal"	2	0	1	1
2722	256	"arg_2"	"decimal"	2	0	1	2
2723	257	"res_0"	"decimal"	2	0	0	0
2724	257	"arg_1"	"decimal"	2	0	1	1
2725	257	"arg_2"	"decimal"	2	0	1	2
2726	258	"res_0"	"decimal"	2	0	0	0
2727	258	"arg_1"	"decimal"	2	0	1	1
2728	258	"arg_2"	"decimal"	2	0	1	2
2729	259	"res_0"	"decimal"	2	0	0	0
2730	259	"arg_1"	"decimal"	2	0	1	1
2731	259	"arg_2"	"decimal"	2	0	1	2
2732	260	"res_0"	"decimal"	2	0	0	0
2733	260	"arg_1"	"decimal"	2	0	1	1
2734	260	"arg_2"	"decimal"	2	0	1	2
2735	261	"res_0"	"decimal"	2	0	0	0
2736	261	"arg_1"	"decimal"	2	0	1	1
2737	261	"arg_2"	"decimal"	2	0	1	2
2738	262	"res_0"	"decimal"	2	0	0	0
2739	262	"arg_1"	"decimal"	2	0	1	1
2740	262	"arg_2"	"decimal"	2	0	1	2
2741	263	"res_0"	"decimal"	2	0	0	0
2742	263	"arg_1"	"decimal"	2	0	1	1
2743	264	"res_0"	"decimal"	2	0	0	0
2744	264	"arg_1"	"decimal"	2	0	1	1
2745	264	"arg_2"	"int"	32	0	1	2
2746	265	"res_0"	"decimal"	2	0	0	0
2747	265	"arg_1"	"decimal"	2	0	1	1
2748	265	"arg_2"	"int"	32	0	1	2
2749	266	"res_0"	"decimal"	2	0	0	0
2750	266	"arg_1"	"decimal"	2	0	1	1
2751	267	"res_0"	"decimal"	2	0	0	0
2752	267	"arg_1"	"decimal"	2	0	1	1
2753	268	"res_0"	"tinyint"	8	0	0	0
2754	268	"arg_1"	"decimal"	2	0	1	1
2755	269	"res_0"	"decimal"	2	0	0	0
2756	269	"arg_1"	"decimal"	2	0	1	1
2757	269	"arg_2"	"tinyint"	8	0	1	2
2758	270	"res_0"	"decimal"	2	0	0	0
2759	270	"arg_1"	"decimal"	2	0	1	1
2760	270	"arg_2"	"tinyint"	8	0	1	2
2761	271	"res_0"	"month_interval"	32	0	0	0
2762	271	"arg_1"	"month_interval"	32	0	1	1
2763	271	"arg_2"	"decimal"	2	0	1	2
2764	272	"res_0"	"month_interval"	32	0	0	0
2765	272	"arg_1"	"month_interval"	32	0	1	1
2766	272	"arg_2"	"decimal"	2	0	1	2
2767	273	"res_0"	"month_interval"	32	0	0	0
2768	273	"arg_1"	"month_interval"	32	0	1	1
2769	273	"arg_2"	"decimal"	2	0	1	2
2770	274	"res_0"	"month_interval"	32	0	0	0
2771	274	"arg_1"	"month_interval"	32	0	1	1
2772	274	"arg_2"	"decimal"	2	0	1	2
2773	275	"res_0"	"sec_interval"	13	0	0	0
2774	275	"arg_1"	"sec_interval"	13	0	1	1
2775	275	"arg_2"	"decimal"	2	0	1	2
2776	276	"res_0"	"sec_interval"	13	0	0	0
2777	276	"arg_1"	"sec_interval"	13	0	1	1
2778	276	"arg_2"	"decimal"	2	0	1	2
2779	277	"res_0"	"sec_interval"	13	0	0	0
2780	277	"arg_1"	"sec_interval"	13	0	1	1
2781	277	"arg_2"	"decimal"	2	0	1	2
2782	278	"res_0"	"sec_interval"	13	0	0	0
2783	278	"arg_1"	"sec_interval"	13	0	1	1
2784	278	"arg_2"	"decimal"	2	0	1	2
2785	279	"res_0"	"decimal"	4	0	0	0
2786	279	"arg_1"	"decimal"	4	0	1	1
2787	279	"arg_2"	"decimal"	4	0	1	2
2788	280	"res_0"	"decimal"	4	0	0	0
2789	280	"arg_1"	"decimal"	4	0	1	1
2790	280	"arg_2"	"decimal"	4	0	1	2
2791	281	"res_0"	"decimal"	4	0	0	0
2792	281	"arg_1"	"decimal"	4	0	1	1
2793	281	"arg_2"	"decimal"	4	0	1	2
2794	282	"res_0"	"decimal"	4	0	0	0
2795	282	"arg_1"	"decimal"	4	0	1	1
2796	282	"arg_2"	"decimal"	4	0	1	2
2797	283	"res_0"	"decimal"	4	0	0	0
2798	283	"arg_1"	"decimal"	4	0	1	1
2799	283	"arg_2"	"decimal"	4	0	1	2
2800	284	"res_0"	"decimal"	4	0	0	0
2801	284	"arg_1"	"decimal"	4	0	1	1
2802	284	"arg_2"	"decimal"	4	0	1	2
2803	285	"res_0"	"decimal"	4	0	0	0
2804	285	"arg_1"	"decimal"	4	0	1	1
2805	285	"arg_2"	"decimal"	4	0	1	2
2806	286	"res_0"	"decimal"	4	0	0	0
2807	286	"arg_1"	"decimal"	4	0	1	1
2808	287	"res_0"	"decimal"	4	0	0	0
2809	287	"arg_1"	"decimal"	4	0	1	1
2810	287	"arg_2"	"int"	32	0	1	2
2811	288	"res_0"	"decimal"	4	0	0	0
2812	288	"arg_1"	"decimal"	4	0	1	1
2813	288	"arg_2"	"int"	32	0	1	2
2814	289	"res_0"	"decimal"	4	0	0	0
2815	289	"arg_1"	"decimal"	4	0	1	1
2816	290	"res_0"	"decimal"	4	0	0	0
2817	290	"arg_1"	"decimal"	4	0	1	1
2818	291	"res_0"	"tinyint"	8	0	0	0
2819	291	"arg_1"	"decimal"	4	0	1	1
2820	292	"res_0"	"decimal"	4	0	0	0
2821	292	"arg_1"	"decimal"	4	0	1	1
2822	292	"arg_2"	"smallint"	16	0	1	2
2823	293	"res_0"	"decimal"	4	0	0	0
2824	293	"arg_1"	"decimal"	4	0	1	1
2825	293	"arg_2"	"smallint"	16	0	1	2
2826	294	"res_0"	"month_interval"	32	0	0	0
2827	294	"arg_1"	"month_interval"	32	0	1	1
2828	294	"arg_2"	"decimal"	4	0	1	2
2829	295	"res_0"	"month_interval"	32	0	0	0
2830	295	"arg_1"	"month_interval"	32	0	1	1
2831	295	"arg_2"	"decimal"	4	0	1	2
2832	296	"res_0"	"month_interval"	32	0	0	0
2833	296	"arg_1"	"month_interval"	32	0	1	1
2834	296	"arg_2"	"decimal"	4	0	1	2
2835	297	"res_0"	"month_interval"	32	0	0	0
2836	297	"arg_1"	"month_interval"	32	0	1	1
2837	297	"arg_2"	"decimal"	4	0	1	2
2838	298	"res_0"	"sec_interval"	13	0	0	0
2839	298	"arg_1"	"sec_interval"	13	0	1	1
2840	298	"arg_2"	"decimal"	4	0	1	2
2841	299	"res_0"	"sec_interval"	13	0	0	0
2842	299	"arg_1"	"sec_interval"	13	0	1	1
2843	299	"arg_2"	"decimal"	4	0	1	2
2844	300	"res_0"	"sec_interval"	13	0	0	0
2845	300	"arg_1"	"sec_interval"	13	0	1	1
2846	300	"arg_2"	"decimal"	4	0	1	2
2847	301	"res_0"	"sec_interval"	13	0	0	0
2848	301	"arg_1"	"sec_interval"	13	0	1	1
2849	301	"arg_2"	"decimal"	4	0	1	2
2850	302	"res_0"	"decimal"	9	0	0	0
2851	302	"arg_1"	"decimal"	9	0	1	1
2852	302	"arg_2"	"decimal"	9	0	1	2
2853	303	"res_0"	"decimal"	9	0	0	0
2854	303	"arg_1"	"decimal"	9	0	1	1
2855	303	"arg_2"	"decimal"	9	0	1	2
2856	304	"res_0"	"decimal"	9	0	0	0
2857	304	"arg_1"	"decimal"	9	0	1	1
2858	304	"arg_2"	"decimal"	9	0	1	2
2859	305	"res_0"	"decimal"	9	0	0	0
2860	305	"arg_1"	"decimal"	9	0	1	1
2861	305	"arg_2"	"decimal"	9	0	1	2
2862	306	"res_0"	"decimal"	9	0	0	0
2863	306	"arg_1"	"decimal"	9	0	1	1
2864	306	"arg_2"	"decimal"	9	0	1	2
2865	307	"res_0"	"decimal"	9	0	0	0
2866	307	"arg_1"	"decimal"	9	0	1	1
2867	307	"arg_2"	"decimal"	9	0	1	2
2868	308	"res_0"	"decimal"	9	0	0	0
2869	308	"arg_1"	"decimal"	9	0	1	1
2870	308	"arg_2"	"decimal"	9	0	1	2
2871	309	"res_0"	"decimal"	9	0	0	0
2872	309	"arg_1"	"decimal"	9	0	1	1
2873	310	"res_0"	"decimal"	9	0	0	0
2874	310	"arg_1"	"decimal"	9	0	1	1
2875	310	"arg_2"	"int"	32	0	1	2
2876	311	"res_0"	"decimal"	9	0	0	0
2877	311	"arg_1"	"decimal"	9	0	1	1
2878	311	"arg_2"	"int"	32	0	1	2
2879	312	"res_0"	"decimal"	9	0	0	0
2880	312	"arg_1"	"decimal"	9	0	1	1
2881	313	"res_0"	"decimal"	9	0	0	0
2882	313	"arg_1"	"decimal"	9	0	1	1
2883	314	"res_0"	"tinyint"	8	0	0	0
2884	314	"arg_1"	"decimal"	9	0	1	1
2885	315	"res_0"	"decimal"	9	0	0	0
2886	315	"arg_1"	"decimal"	9	0	1	1
2887	315	"arg_2"	"int"	32	0	1	2
2888	316	"res_0"	"decimal"	9	0	0	0
2889	316	"arg_1"	"decimal"	9	0	1	1
2890	316	"arg_2"	"int"	32	0	1	2
2891	317	"res_0"	"month_interval"	32	0	0	0
2892	317	"arg_1"	"month_interval"	32	0	1	1
2893	317	"arg_2"	"decimal"	9	0	1	2
2894	318	"res_0"	"month_interval"	32	0	0	0
2895	318	"arg_1"	"month_interval"	32	0	1	1
2896	318	"arg_2"	"decimal"	9	0	1	2
2897	319	"res_0"	"month_interval"	32	0	0	0
2898	319	"arg_1"	"month_interval"	32	0	1	1
2899	319	"arg_2"	"decimal"	9	0	1	2
2900	320	"res_0"	"month_interval"	32	0	0	0
2901	320	"arg_1"	"month_interval"	32	0	1	1
2902	320	"arg_2"	"decimal"	9	0	1	2
2903	321	"res_0"	"sec_interval"	13	0	0	0
2904	321	"arg_1"	"sec_interval"	13	0	1	1
2905	321	"arg_2"	"decimal"	9	0	1	2
2906	322	"res_0"	"sec_interval"	13	0	0	0
2907	322	"arg_1"	"sec_interval"	13	0	1	1
2908	322	"arg_2"	"decimal"	9	0	1	2
2909	323	"res_0"	"sec_interval"	13	0	0	0
2910	323	"arg_1"	"sec_interval"	13	0	1	1
2911	323	"arg_2"	"decimal"	9	0	1	2
2912	324	"res_0"	"sec_interval"	13	0	0	0
2913	324	"arg_1"	"sec_interval"	13	0	1	1
2914	324	"arg_2"	"decimal"	9	0	1	2
2915	325	"res_0"	"decimal"	19	0	0	0
2916	325	"arg_1"	"decimal"	19	0	1	1
2917	325	"arg_2"	"decimal"	19	0	1	2
2918	326	"res_0"	"decimal"	19	0	0	0
2919	326	"arg_1"	"decimal"	19	0	1	1
2920	326	"arg_2"	"decimal"	19	0	1	2
2921	327	"res_0"	"decimal"	19	0	0	0
2922	327	"arg_1"	"decimal"	19	0	1	1
2923	327	"arg_2"	"decimal"	19	0	1	2
2924	328	"res_0"	"decimal"	19	0	0	0
2925	328	"arg_1"	"decimal"	19	0	1	1
2926	328	"arg_2"	"decimal"	19	0	1	2
2927	329	"res_0"	"decimal"	19	0	0	0
2928	329	"arg_1"	"decimal"	19	0	1	1
2929	329	"arg_2"	"decimal"	19	0	1	2
2930	330	"res_0"	"decimal"	19	0	0	0
2931	330	"arg_1"	"decimal"	19	0	1	1
2932	330	"arg_2"	"decimal"	19	0	1	2
2933	331	"res_0"	"decimal"	19	0	0	0
2934	331	"arg_1"	"decimal"	19	0	1	1
2935	331	"arg_2"	"decimal"	19	0	1	2
2936	332	"res_0"	"decimal"	19	0	0	0
2937	332	"arg_1"	"decimal"	19	0	1	1
2938	333	"res_0"	"decimal"	19	0	0	0
2939	333	"arg_1"	"decimal"	19	0	1	1
2940	333	"arg_2"	"int"	32	0	1	2
2941	334	"res_0"	"decimal"	19	0	0	0
2942	334	"arg_1"	"decimal"	19	0	1	1
2943	334	"arg_2"	"int"	32	0	1	2
2944	335	"res_0"	"decimal"	19	0	0	0
2945	335	"arg_1"	"decimal"	19	0	1	1
2946	336	"res_0"	"decimal"	19	0	0	0
2947	336	"arg_1"	"decimal"	19	0	1	1
2948	337	"res_0"	"tinyint"	8	0	0	0
2949	337	"arg_1"	"decimal"	19	0	1	1
2950	338	"res_0"	"decimal"	19	0	0	0
2951	338	"arg_1"	"decimal"	19	0	1	1
2952	338	"arg_2"	"bigint"	64	0	1	2
2953	339	"res_0"	"decimal"	19	0	0	0
2954	339	"arg_1"	"decimal"	19	0	1	1
2955	339	"arg_2"	"bigint"	64	0	1	2
2956	340	"res_0"	"month_interval"	32	0	0	0
2957	340	"arg_1"	"month_interval"	32	0	1	1
2958	340	"arg_2"	"decimal"	19	0	1	2
2959	341	"res_0"	"month_interval"	32	0	0	0
2960	341	"arg_1"	"month_interval"	32	0	1	1
2961	341	"arg_2"	"decimal"	19	0	1	2
2962	342	"res_0"	"month_interval"	32	0	0	0
2963	342	"arg_1"	"month_interval"	32	0	1	1
2964	342	"arg_2"	"decimal"	19	0	1	2
2965	343	"res_0"	"month_interval"	32	0	0	0
2966	343	"arg_1"	"month_interval"	32	0	1	1
2967	343	"arg_2"	"decimal"	19	0	1	2
2968	344	"res_0"	"sec_interval"	13	0	0	0
2969	344	"arg_1"	"sec_interval"	13	0	1	1
2970	344	"arg_2"	"decimal"	19	0	1	2
2971	345	"res_0"	"sec_interval"	13	0	0	0
2972	345	"arg_1"	"sec_interval"	13	0	1	1
2973	345	"arg_2"	"decimal"	19	0	1	2
2974	346	"res_0"	"sec_interval"	13	0	0	0
2975	346	"arg_1"	"sec_interval"	13	0	1	1
2976	346	"arg_2"	"decimal"	19	0	1	2
2977	347	"res_0"	"sec_interval"	13	0	0	0
2978	347	"arg_1"	"sec_interval"	13	0	1	1
2979	347	"arg_2"	"decimal"	19	0	1	2
2980	348	"res_0"	"real"	24	0	0	0
2981	348	"arg_1"	"real"	24	0	1	1
2982	348	"arg_2"	"real"	24	0	1	2
2983	349	"res_0"	"real"	24	0	0	0
2984	349	"arg_1"	"real"	24	0	1	1
2985	349	"arg_2"	"real"	24	0	1	2
2986	350	"res_0"	"real"	24	0	0	0
2987	350	"arg_1"	"real"	24	0	1	1
2988	350	"arg_2"	"real"	24	0	1	2
2989	351	"res_0"	"real"	24	0	0	0
2990	351	"arg_1"	"real"	24	0	1	1
2991	351	"arg_2"	"real"	24	0	1	2
2992	352	"res_0"	"real"	24	0	0	0
2993	352	"arg_1"	"real"	24	0	1	1
2994	353	"res_0"	"real"	24	0	0	0
2995	353	"arg_1"	"real"	24	0	1	1
2996	354	"res_0"	"tinyint"	8	0	0	0
2997	354	"arg_1"	"real"	24	0	1	1
2998	355	"res_0"	"real"	24	0	0	0
2999	355	"arg_1"	"real"	24	0	1	1
3000	355	"arg_2"	"real"	24	0	1	2
3001	356	"res_0"	"real"	24	0	0	0
3002	356	"arg_1"	"real"	24	0	1	1
3003	356	"arg_2"	"real"	24	0	1	2
3004	357	"res_0"	"month_interval"	32	0	0	0
3005	357	"arg_1"	"month_interval"	32	0	1	1
3006	357	"arg_2"	"real"	24	0	1	2
3007	358	"res_0"	"month_interval"	32	0	0	0
3008	358	"arg_1"	"month_interval"	32	0	1	1
3009	358	"arg_2"	"real"	24	0	1	2
3010	359	"res_0"	"month_interval"	32	0	0	0
3011	359	"arg_1"	"month_interval"	32	0	1	1
3012	359	"arg_2"	"real"	24	0	1	2
3013	360	"res_0"	"month_interval"	32	0	0	0
3014	360	"arg_1"	"month_interval"	32	0	1	1
3015	360	"arg_2"	"real"	24	0	1	2
3016	361	"res_0"	"sec_interval"	13	0	0	0
3017	361	"arg_1"	"sec_interval"	13	0	1	1
3018	361	"arg_2"	"real"	24	0	1	2
3019	362	"res_0"	"sec_interval"	13	0	0	0
3020	362	"arg_1"	"sec_interval"	13	0	1	1
3021	362	"arg_2"	"real"	24	0	1	2
3022	363	"res_0"	"sec_interval"	13	0	0	0
3023	363	"arg_1"	"sec_interval"	13	0	1	1
3024	363	"arg_2"	"real"	24	0	1	2
3025	364	"res_0"	"sec_interval"	13	0	0	0
3026	364	"arg_1"	"sec_interval"	13	0	1	1
3027	364	"arg_2"	"real"	24	0	1	2
3028	365	"res_0"	"double"	53	0	0	0
3029	365	"arg_1"	"double"	53	0	1	1
3030	365	"arg_2"	"double"	53	0	1	2
3031	366	"res_0"	"double"	53	0	0	0
3032	366	"arg_1"	"double"	53	0	1	1
3033	366	"arg_2"	"double"	53	0	1	2
3034	367	"res_0"	"double"	53	0	0	0
3035	367	"arg_1"	"double"	53	0	1	1
3036	367	"arg_2"	"double"	53	0	1	2
3037	368	"res_0"	"double"	53	0	0	0
3038	368	"arg_1"	"double"	53	0	1	1
3039	368	"arg_2"	"double"	53	0	1	2
3040	369	"res_0"	"double"	53	0	0	0
3041	369	"arg_1"	"double"	53	0	1	1
3042	370	"res_0"	"double"	53	0	0	0
3043	370	"arg_1"	"double"	53	0	1	1
3044	371	"res_0"	"tinyint"	8	0	0	0
3045	371	"arg_1"	"double"	53	0	1	1
3046	372	"res_0"	"double"	53	0	0	0
3047	372	"arg_1"	"double"	53	0	1	1
3048	372	"arg_2"	"double"	53	0	1	2
3049	373	"res_0"	"double"	53	0	0	0
3050	373	"arg_1"	"double"	53	0	1	1
3051	373	"arg_2"	"double"	53	0	1	2
3052	374	"res_0"	"month_interval"	32	0	0	0
3053	374	"arg_1"	"month_interval"	32	0	1	1
3054	374	"arg_2"	"double"	53	0	1	2
3055	375	"res_0"	"month_interval"	32	0	0	0
3056	375	"arg_1"	"month_interval"	32	0	1	1
3057	375	"arg_2"	"double"	53	0	1	2
3058	376	"res_0"	"month_interval"	32	0	0	0
3059	376	"arg_1"	"month_interval"	32	0	1	1
3060	376	"arg_2"	"double"	53	0	1	2
3061	377	"res_0"	"month_interval"	32	0	0	0
3062	377	"arg_1"	"month_interval"	32	0	1	1
3063	377	"arg_2"	"double"	53	0	1	2
3064	378	"res_0"	"sec_interval"	13	0	0	0
3065	378	"arg_1"	"sec_interval"	13	0	1	1
3066	378	"arg_2"	"double"	53	0	1	2
3067	379	"res_0"	"sec_interval"	13	0	0	0
3068	379	"arg_1"	"sec_interval"	13	0	1	1
3069	379	"arg_2"	"double"	53	0	1	2
3070	380	"res_0"	"sec_interval"	13	0	0	0
3071	380	"arg_1"	"sec_interval"	13	0	1	1
3072	380	"arg_2"	"double"	53	0	1	2
3073	381	"res_0"	"sec_interval"	13	0	0	0
3074	381	"arg_1"	"sec_interval"	13	0	1	1
3075	381	"arg_2"	"double"	53	0	1	2
3076	382	"res_0"	"month_interval"	32	0	0	0
3077	382	"arg_1"	"month_interval"	32	0	1	1
3078	382	"arg_2"	"month_interval"	32	0	1	2
3079	383	"res_0"	"month_interval"	32	0	0	0
3080	383	"arg_1"	"month_interval"	32	0	1	1
3081	383	"arg_2"	"month_interval"	32	0	1	2
3082	384	"res_0"	"month_interval"	32	0	0	0
3083	384	"arg_1"	"month_interval"	32	0	1	1
3084	384	"arg_2"	"month_interval"	32	0	1	2
3085	385	"res_0"	"month_interval"	32	0	0	0
3086	385	"arg_1"	"month_interval"	32	0	1	1
3087	385	"arg_2"	"month_interval"	32	0	1	2
3088	386	"res_0"	"month_interval"	32	0	0	0
3089	386	"arg_1"	"month_interval"	32	0	1	1
3090	387	"res_0"	"month_interval"	32	0	0	0
3091	387	"arg_1"	"month_interval"	32	0	1	1
3092	388	"res_0"	"tinyint"	8	0	0	0
3093	388	"arg_1"	"month_interval"	32	0	1	1
3094	389	"res_0"	"month_interval"	32	0	0	0
3095	389	"arg_1"	"month_interval"	32	0	1	1
3096	389	"arg_2"	"int"	32	0	1	2
3097	390	"res_0"	"month_interval"	32	0	0	0
3098	390	"arg_1"	"month_interval"	32	0	1	1
3099	390	"arg_2"	"int"	32	0	1	2
3100	391	"res_0"	"sec_interval"	13	0	0	0
3101	391	"arg_1"	"sec_interval"	13	0	1	1
3102	391	"arg_2"	"sec_interval"	13	0	1	2
3103	392	"res_0"	"sec_interval"	13	0	0	0
3104	392	"arg_1"	"sec_interval"	13	0	1	1
3105	392	"arg_2"	"sec_interval"	13	0	1	2
3106	393	"res_0"	"sec_interval"	13	0	0	0
3107	393	"arg_1"	"sec_interval"	13	0	1	1
3108	393	"arg_2"	"sec_interval"	13	0	1	2
3109	394	"res_0"	"sec_interval"	13	0	0	0
3110	394	"arg_1"	"sec_interval"	13	0	1	1
3111	394	"arg_2"	"sec_interval"	13	0	1	2
3112	395	"res_0"	"sec_interval"	13	0	0	0
3113	395	"arg_1"	"sec_interval"	13	0	1	1
3114	396	"res_0"	"sec_interval"	13	0	0	0
3115	396	"arg_1"	"sec_interval"	13	0	1	1
3116	397	"res_0"	"tinyint"	8	0	0	0
3117	397	"arg_1"	"sec_interval"	13	0	1	1
3118	398	"res_0"	"sec_interval"	13	0	0	0
3119	398	"arg_1"	"sec_interval"	13	0	1	1
3120	398	"arg_2"	"bigint"	64	0	1	2
3121	399	"res_0"	"sec_interval"	13	0	0	0
3122	399	"arg_1"	"sec_interval"	13	0	1	1
3123	399	"arg_2"	"bigint"	64	0	1	2
3124	400	"res_0"	"decimal"	4	0	0	0
3125	400	"arg_1"	"decimal"	4	0	1	1
3126	400	"arg_2"	"tinyint"	8	0	1	2
3127	401	"res_0"	"decimal"	4	0	0	0
3128	401	"arg_1"	"tinyint"	8	0	1	1
3129	401	"arg_2"	"decimal"	4	0	1	2
3130	402	"res_0"	"decimal"	4	0	0	0
3131	402	"arg_1"	"decimal"	4	0	1	1
3132	402	"arg_2"	"decimal"	2	0	1	2
3133	403	"res_0"	"decimal"	4	0	0	0
3134	403	"arg_1"	"decimal"	2	0	1	1
3135	403	"arg_2"	"decimal"	4	0	1	2
3136	404	"res_0"	"decimal"	9	0	0	0
3137	404	"arg_1"	"decimal"	9	0	1	1
3138	404	"arg_2"	"tinyint"	8	0	1	2
3139	405	"res_0"	"decimal"	9	0	0	0
3140	405	"arg_1"	"tinyint"	8	0	1	1
3141	405	"arg_2"	"decimal"	9	0	1	2
3142	406	"res_0"	"decimal"	9	0	0	0
3143	406	"arg_1"	"decimal"	9	0	1	1
3144	406	"arg_2"	"smallint"	16	0	1	2
3145	407	"res_0"	"decimal"	9	0	0	0
3146	407	"arg_1"	"smallint"	16	0	1	1
3147	407	"arg_2"	"decimal"	9	0	1	2
3148	408	"res_0"	"decimal"	9	0	0	0
3149	408	"arg_1"	"decimal"	9	0	1	1
3150	408	"arg_2"	"decimal"	2	0	1	2
3151	409	"res_0"	"decimal"	9	0	0	0
3152	409	"arg_1"	"decimal"	2	0	1	1
3153	409	"arg_2"	"decimal"	9	0	1	2
3154	410	"res_0"	"decimal"	9	0	0	0
3155	410	"arg_1"	"decimal"	9	0	1	1
3156	410	"arg_2"	"decimal"	4	0	1	2
3157	411	"res_0"	"decimal"	9	0	0	0
3158	411	"arg_1"	"decimal"	4	0	1	1
3159	411	"arg_2"	"decimal"	9	0	1	2
3160	412	"res_0"	"decimal"	19	0	0	0
3161	412	"arg_1"	"decimal"	19	0	1	1
3162	412	"arg_2"	"tinyint"	8	0	1	2
3163	413	"res_0"	"decimal"	19	0	0	0
3164	413	"arg_1"	"tinyint"	8	0	1	1
3165	413	"arg_2"	"decimal"	19	0	1	2
3166	414	"res_0"	"decimal"	19	0	0	0
3167	414	"arg_1"	"decimal"	19	0	1	1
3168	414	"arg_2"	"smallint"	16	0	1	2
3169	415	"res_0"	"decimal"	19	0	0	0
3170	415	"arg_1"	"smallint"	16	0	1	1
3171	415	"arg_2"	"decimal"	19	0	1	2
3172	416	"res_0"	"decimal"	19	0	0	0
3173	416	"arg_1"	"decimal"	19	0	1	1
3174	416	"arg_2"	"int"	32	0	1	2
3175	417	"res_0"	"decimal"	19	0	0	0
3176	417	"arg_1"	"int"	32	0	1	1
3177	417	"arg_2"	"decimal"	19	0	1	2
3178	418	"res_0"	"decimal"	19	0	0	0
3179	418	"arg_1"	"decimal"	19	0	1	1
3180	418	"arg_2"	"wrd"	64	0	1	2
3181	419	"res_0"	"decimal"	19	0	0	0
3182	419	"arg_1"	"wrd"	64	0	1	1
3183	419	"arg_2"	"decimal"	19	0	1	2
3184	420	"res_0"	"decimal"	19	0	0	0
3185	420	"arg_1"	"decimal"	19	0	1	1
3186	420	"arg_2"	"decimal"	2	0	1	2
3187	421	"res_0"	"decimal"	19	0	0	0
3188	421	"arg_1"	"decimal"	2	0	1	1
3189	421	"arg_2"	"decimal"	19	0	1	2
3190	422	"res_0"	"decimal"	19	0	0	0
3191	422	"arg_1"	"decimal"	19	0	1	1
3192	422	"arg_2"	"decimal"	4	0	1	2
3193	423	"res_0"	"decimal"	19	0	0	0
3194	423	"arg_1"	"decimal"	4	0	1	1
3195	423	"arg_2"	"decimal"	19	0	1	2
3196	424	"res_0"	"decimal"	19	0	0	0
3197	424	"arg_1"	"decimal"	19	0	1	1
3198	424	"arg_2"	"decimal"	9	0	1	2
3199	425	"res_0"	"decimal"	19	0	0	0
3200	425	"arg_1"	"decimal"	9	0	1	1
3201	425	"arg_2"	"decimal"	19	0	1	2
3202	426	"res_0"	"decimal"	2	0	0	0
3203	426	"arg_1"	"decimal"	2	0	1	1
3204	426	"arg_2"	"tinyint"	8	0	1	2
3205	427	"res_0"	"decimal"	4	0	0	0
3206	427	"arg_1"	"decimal"	4	0	1	1
3207	427	"arg_2"	"tinyint"	8	0	1	2
3208	428	"res_0"	"decimal"	9	0	0	0
3209	428	"arg_1"	"decimal"	9	0	1	1
3210	428	"arg_2"	"tinyint"	8	0	1	2
3211	429	"res_0"	"decimal"	19	0	0	0
3212	429	"arg_1"	"decimal"	19	0	1	1
3213	429	"arg_2"	"tinyint"	8	0	1	2
3214	430	"res_0"	"real"	24	0	0	0
3215	430	"arg_1"	"real"	24	0	1	1
3216	430	"arg_2"	"tinyint"	8	0	1	2
3217	431	"res_0"	"double"	53	0	0	0
3218	431	"arg_1"	"double"	53	0	1	1
3219	431	"arg_2"	"tinyint"	8	0	1	2
3220	432	"res_0"	"oid"	63	0	0	0
3221	432	"arg_1"	"oid"	63	0	1	1
3222	432	"arg_2"	"oid"	63	0	1	2
3223	433	"res_0"	"oid"	63	0	0	0
3224	433	"arg_1"	"tinyint"	8	0	1	1
3225	433	"arg_2"	"oid"	63	0	1	2
3226	434	"res_0"	"oid"	63	0	0	0
3227	434	"arg_1"	"smallint"	16	0	1	1
3228	434	"arg_2"	"oid"	63	0	1	2
3229	435	"res_0"	"oid"	63	0	0	0
3230	435	"arg_1"	"int"	32	0	1	1
3231	435	"arg_2"	"oid"	63	0	1	2
3232	436	"res_0"	"oid"	63	0	0	0
3233	436	"arg_1"	"bigint"	64	0	1	1
3234	436	"arg_2"	"oid"	63	0	1	2
3235	437	"res_0"	"oid"	63	0	0	0
3236	437	"arg_1"	"wrd"	64	0	1	1
3237	437	"arg_2"	"oid"	63	0	1	2
3238	438	"res_0"	"oid"	63	0	0	0
3239	438	"arg_1"	"decimal"	2	0	1	1
3240	438	"arg_2"	"oid"	63	0	1	2
3241	439	"res_0"	"oid"	63	0	0	0
3242	439	"arg_1"	"decimal"	4	0	1	1
3243	439	"arg_2"	"oid"	63	0	1	2
3244	440	"res_0"	"oid"	63	0	0	0
3245	440	"arg_1"	"decimal"	9	0	1	1
3246	440	"arg_2"	"oid"	63	0	1	2
3247	441	"res_0"	"oid"	63	0	0	0
3248	441	"arg_1"	"decimal"	19	0	1	1
3249	441	"arg_2"	"oid"	63	0	1	2
3250	442	"res_0"	"oid"	63	0	0	0
3251	442	"arg_1"	"real"	24	0	1	1
3252	442	"arg_2"	"oid"	63	0	1	2
3253	443	"res_0"	"oid"	63	0	0	0
3254	443	"arg_1"	"double"	53	0	1	1
3255	443	"arg_2"	"oid"	63	0	1	2
3256	444	"res_0"	"oid"	63	0	0	0
3257	444	"arg_1"	"month_interval"	32	0	1	1
3258	444	"arg_2"	"oid"	63	0	1	2
3259	445	"res_0"	"oid"	63	0	0	0
3260	445	"arg_1"	"sec_interval"	13	0	1	1
3261	445	"arg_2"	"oid"	63	0	1	2
3262	446	"res_0"	"oid"	63	0	0	0
3263	446	"arg_1"	"time"	7	0	1	1
3264	446	"arg_2"	"oid"	63	0	1	2
3265	447	"res_0"	"oid"	63	0	0	0
3266	447	"arg_1"	"timetz"	7	0	1	1
3267	447	"arg_2"	"oid"	63	0	1	2
3268	448	"res_0"	"oid"	63	0	0	0
3269	448	"arg_1"	"date"	0	0	1	1
3270	448	"arg_2"	"oid"	63	0	1	2
3271	449	"res_0"	"oid"	63	0	0	0
3272	449	"arg_1"	"timestamp"	7	0	1	1
3273	449	"arg_2"	"oid"	63	0	1	2
3274	450	"res_0"	"oid"	63	0	0	0
3275	450	"arg_1"	"timestamptz"	7	0	1	1
3276	450	"arg_2"	"oid"	63	0	1	2
3277	451	"res_0"	"oid"	63	0	0	0
3278	451	"arg_1"	"blob"	0	0	1	1
3279	451	"arg_2"	"oid"	63	0	1	2
3280	452	"res_0"	"tinyint"	8	0	0	0
3281	452	"arg_1"	"oid"	63	0	1	1
3282	452	"arg_2"	"tinyint"	8	0	1	2
3283	453	"res_0"	"tinyint"	8	0	0	0
3284	453	"arg_1"	"tinyint"	8	0	1	1
3285	453	"arg_2"	"tinyint"	8	0	1	2
3286	454	"res_0"	"tinyint"	8	0	0	0
3287	454	"arg_1"	"smallint"	16	0	1	1
3288	454	"arg_2"	"tinyint"	8	0	1	2
3289	455	"res_0"	"tinyint"	8	0	0	0
3290	455	"arg_1"	"int"	32	0	1	1
3291	455	"arg_2"	"tinyint"	8	0	1	2
3292	456	"res_0"	"tinyint"	8	0	0	0
3293	456	"arg_1"	"bigint"	64	0	1	1
3294	456	"arg_2"	"tinyint"	8	0	1	2
3295	457	"res_0"	"tinyint"	8	0	0	0
3296	457	"arg_1"	"wrd"	64	0	1	1
3297	457	"arg_2"	"tinyint"	8	0	1	2
3298	458	"res_0"	"tinyint"	8	0	0	0
3299	458	"arg_1"	"decimal"	2	0	1	1
3300	458	"arg_2"	"tinyint"	8	0	1	2
3301	459	"res_0"	"tinyint"	8	0	0	0
3302	459	"arg_1"	"decimal"	4	0	1	1
3303	459	"arg_2"	"tinyint"	8	0	1	2
3304	460	"res_0"	"tinyint"	8	0	0	0
3305	460	"arg_1"	"decimal"	9	0	1	1
3306	460	"arg_2"	"tinyint"	8	0	1	2
3307	461	"res_0"	"tinyint"	8	0	0	0
3308	461	"arg_1"	"decimal"	19	0	1	1
3309	461	"arg_2"	"tinyint"	8	0	1	2
3310	462	"res_0"	"tinyint"	8	0	0	0
3311	462	"arg_1"	"real"	24	0	1	1
3312	462	"arg_2"	"tinyint"	8	0	1	2
3313	463	"res_0"	"tinyint"	8	0	0	0
3314	463	"arg_1"	"double"	53	0	1	1
3315	463	"arg_2"	"tinyint"	8	0	1	2
3316	464	"res_0"	"tinyint"	8	0	0	0
3317	464	"arg_1"	"month_interval"	32	0	1	1
3318	464	"arg_2"	"tinyint"	8	0	1	2
3319	465	"res_0"	"tinyint"	8	0	0	0
3320	465	"arg_1"	"sec_interval"	13	0	1	1
3321	465	"arg_2"	"tinyint"	8	0	1	2
3322	466	"res_0"	"tinyint"	8	0	0	0
3323	466	"arg_1"	"time"	7	0	1	1
3324	466	"arg_2"	"tinyint"	8	0	1	2
3325	467	"res_0"	"tinyint"	8	0	0	0
3326	467	"arg_1"	"timetz"	7	0	1	1
3327	467	"arg_2"	"tinyint"	8	0	1	2
3328	468	"res_0"	"tinyint"	8	0	0	0
3329	468	"arg_1"	"date"	0	0	1	1
3330	468	"arg_2"	"tinyint"	8	0	1	2
3331	469	"res_0"	"tinyint"	8	0	0	0
3332	469	"arg_1"	"timestamp"	7	0	1	1
3333	469	"arg_2"	"tinyint"	8	0	1	2
3334	470	"res_0"	"tinyint"	8	0	0	0
3335	470	"arg_1"	"timestamptz"	7	0	1	1
3336	470	"arg_2"	"tinyint"	8	0	1	2
3337	471	"res_0"	"tinyint"	8	0	0	0
3338	471	"arg_1"	"blob"	0	0	1	1
3339	471	"arg_2"	"tinyint"	8	0	1	2
3340	472	"res_0"	"smallint"	16	0	0	0
3341	472	"arg_1"	"oid"	63	0	1	1
3342	472	"arg_2"	"smallint"	16	0	1	2
3343	473	"res_0"	"smallint"	16	0	0	0
3344	473	"arg_1"	"tinyint"	8	0	1	1
3345	473	"arg_2"	"smallint"	16	0	1	2
3346	474	"res_0"	"smallint"	16	0	0	0
3347	474	"arg_1"	"smallint"	16	0	1	1
3348	474	"arg_2"	"smallint"	16	0	1	2
3349	475	"res_0"	"smallint"	16	0	0	0
3350	475	"arg_1"	"int"	32	0	1	1
3351	475	"arg_2"	"smallint"	16	0	1	2
3352	476	"res_0"	"smallint"	16	0	0	0
3353	476	"arg_1"	"bigint"	64	0	1	1
3354	476	"arg_2"	"smallint"	16	0	1	2
3355	477	"res_0"	"smallint"	16	0	0	0
3356	477	"arg_1"	"wrd"	64	0	1	1
3357	477	"arg_2"	"smallint"	16	0	1	2
3358	478	"res_0"	"smallint"	16	0	0	0
3359	478	"arg_1"	"decimal"	2	0	1	1
3360	478	"arg_2"	"smallint"	16	0	1	2
3361	479	"res_0"	"smallint"	16	0	0	0
3362	479	"arg_1"	"decimal"	4	0	1	1
3363	479	"arg_2"	"smallint"	16	0	1	2
3364	480	"res_0"	"smallint"	16	0	0	0
3365	480	"arg_1"	"decimal"	9	0	1	1
3366	480	"arg_2"	"smallint"	16	0	1	2
3367	481	"res_0"	"smallint"	16	0	0	0
3368	481	"arg_1"	"decimal"	19	0	1	1
3369	481	"arg_2"	"smallint"	16	0	1	2
3370	482	"res_0"	"smallint"	16	0	0	0
3371	482	"arg_1"	"real"	24	0	1	1
3372	482	"arg_2"	"smallint"	16	0	1	2
3373	483	"res_0"	"smallint"	16	0	0	0
3374	483	"arg_1"	"double"	53	0	1	1
3375	483	"arg_2"	"smallint"	16	0	1	2
3376	484	"res_0"	"smallint"	16	0	0	0
3377	484	"arg_1"	"month_interval"	32	0	1	1
3378	484	"arg_2"	"smallint"	16	0	1	2
3379	485	"res_0"	"smallint"	16	0	0	0
3380	485	"arg_1"	"sec_interval"	13	0	1	1
3381	485	"arg_2"	"smallint"	16	0	1	2
3382	486	"res_0"	"smallint"	16	0	0	0
3383	486	"arg_1"	"time"	7	0	1	1
3384	486	"arg_2"	"smallint"	16	0	1	2
3385	487	"res_0"	"smallint"	16	0	0	0
3386	487	"arg_1"	"timetz"	7	0	1	1
3387	487	"arg_2"	"smallint"	16	0	1	2
3388	488	"res_0"	"smallint"	16	0	0	0
3389	488	"arg_1"	"date"	0	0	1	1
3390	488	"arg_2"	"smallint"	16	0	1	2
3391	489	"res_0"	"smallint"	16	0	0	0
3392	489	"arg_1"	"timestamp"	7	0	1	1
3393	489	"arg_2"	"smallint"	16	0	1	2
3394	490	"res_0"	"smallint"	16	0	0	0
3395	490	"arg_1"	"timestamptz"	7	0	1	1
3396	490	"arg_2"	"smallint"	16	0	1	2
3397	491	"res_0"	"smallint"	16	0	0	0
3398	491	"arg_1"	"blob"	0	0	1	1
3399	491	"arg_2"	"smallint"	16	0	1	2
3400	492	"res_0"	"int"	32	0	0	0
3401	492	"arg_1"	"oid"	63	0	1	1
3402	492	"arg_2"	"int"	32	0	1	2
3403	493	"res_0"	"int"	32	0	0	0
3404	493	"arg_1"	"tinyint"	8	0	1	1
3405	493	"arg_2"	"int"	32	0	1	2
3406	494	"res_0"	"int"	32	0	0	0
3407	494	"arg_1"	"smallint"	16	0	1	1
3408	494	"arg_2"	"int"	32	0	1	2
3409	495	"res_0"	"int"	32	0	0	0
3410	495	"arg_1"	"int"	32	0	1	1
3411	495	"arg_2"	"int"	32	0	1	2
3412	496	"res_0"	"int"	32	0	0	0
3413	496	"arg_1"	"bigint"	64	0	1	1
3414	496	"arg_2"	"int"	32	0	1	2
3415	497	"res_0"	"int"	32	0	0	0
3416	497	"arg_1"	"wrd"	64	0	1	1
3417	497	"arg_2"	"int"	32	0	1	2
3418	498	"res_0"	"int"	32	0	0	0
3419	498	"arg_1"	"decimal"	2	0	1	1
3420	498	"arg_2"	"int"	32	0	1	2
3421	499	"res_0"	"int"	32	0	0	0
3422	499	"arg_1"	"decimal"	4	0	1	1
3423	499	"arg_2"	"int"	32	0	1	2
3424	500	"res_0"	"int"	32	0	0	0
3425	500	"arg_1"	"decimal"	9	0	1	1
3426	500	"arg_2"	"int"	32	0	1	2
3427	501	"res_0"	"int"	32	0	0	0
3428	501	"arg_1"	"decimal"	19	0	1	1
3429	501	"arg_2"	"int"	32	0	1	2
3430	502	"res_0"	"int"	32	0	0	0
3431	502	"arg_1"	"real"	24	0	1	1
3432	502	"arg_2"	"int"	32	0	1	2
3433	503	"res_0"	"int"	32	0	0	0
3434	503	"arg_1"	"double"	53	0	1	1
3435	503	"arg_2"	"int"	32	0	1	2
3436	504	"res_0"	"int"	32	0	0	0
3437	504	"arg_1"	"month_interval"	32	0	1	1
3438	504	"arg_2"	"int"	32	0	1	2
3439	505	"res_0"	"int"	32	0	0	0
3440	505	"arg_1"	"sec_interval"	13	0	1	1
3441	505	"arg_2"	"int"	32	0	1	2
3442	506	"res_0"	"int"	32	0	0	0
3443	506	"arg_1"	"time"	7	0	1	1
3444	506	"arg_2"	"int"	32	0	1	2
3445	507	"res_0"	"int"	32	0	0	0
3446	507	"arg_1"	"timetz"	7	0	1	1
3447	507	"arg_2"	"int"	32	0	1	2
3448	508	"res_0"	"int"	32	0	0	0
3449	508	"arg_1"	"date"	0	0	1	1
3450	508	"arg_2"	"int"	32	0	1	2
3451	509	"res_0"	"int"	32	0	0	0
3452	509	"arg_1"	"timestamp"	7	0	1	1
3453	509	"arg_2"	"int"	32	0	1	2
3454	510	"res_0"	"int"	32	0	0	0
3455	510	"arg_1"	"timestamptz"	7	0	1	1
3456	510	"arg_2"	"int"	32	0	1	2
3457	511	"res_0"	"int"	32	0	0	0
3458	511	"arg_1"	"blob"	0	0	1	1
3459	511	"arg_2"	"int"	32	0	1	2
3460	512	"res_0"	"bigint"	64	0	0	0
3461	512	"arg_1"	"oid"	63	0	1	1
3462	512	"arg_2"	"bigint"	64	0	1	2
3463	513	"res_0"	"bigint"	64	0	0	0
3464	513	"arg_1"	"tinyint"	8	0	1	1
3465	513	"arg_2"	"bigint"	64	0	1	2
3466	514	"res_0"	"bigint"	64	0	0	0
3467	514	"arg_1"	"smallint"	16	0	1	1
3468	514	"arg_2"	"bigint"	64	0	1	2
3469	515	"res_0"	"bigint"	64	0	0	0
3470	515	"arg_1"	"int"	32	0	1	1
3471	515	"arg_2"	"bigint"	64	0	1	2
3472	516	"res_0"	"bigint"	64	0	0	0
3473	516	"arg_1"	"bigint"	64	0	1	1
3474	516	"arg_2"	"bigint"	64	0	1	2
3475	517	"res_0"	"bigint"	64	0	0	0
3476	517	"arg_1"	"wrd"	64	0	1	1
3477	517	"arg_2"	"bigint"	64	0	1	2
3478	518	"res_0"	"bigint"	64	0	0	0
3479	518	"arg_1"	"decimal"	2	0	1	1
3480	518	"arg_2"	"bigint"	64	0	1	2
3481	519	"res_0"	"bigint"	64	0	0	0
3482	519	"arg_1"	"decimal"	4	0	1	1
3483	519	"arg_2"	"bigint"	64	0	1	2
3484	520	"res_0"	"bigint"	64	0	0	0
3485	520	"arg_1"	"decimal"	9	0	1	1
3486	520	"arg_2"	"bigint"	64	0	1	2
3487	521	"res_0"	"bigint"	64	0	0	0
3488	521	"arg_1"	"decimal"	19	0	1	1
3489	521	"arg_2"	"bigint"	64	0	1	2
3490	522	"res_0"	"bigint"	64	0	0	0
3491	522	"arg_1"	"real"	24	0	1	1
3492	522	"arg_2"	"bigint"	64	0	1	2
3493	523	"res_0"	"bigint"	64	0	0	0
3494	523	"arg_1"	"double"	53	0	1	1
3495	523	"arg_2"	"bigint"	64	0	1	2
3496	524	"res_0"	"bigint"	64	0	0	0
3497	524	"arg_1"	"month_interval"	32	0	1	1
3498	524	"arg_2"	"bigint"	64	0	1	2
3499	525	"res_0"	"bigint"	64	0	0	0
3500	525	"arg_1"	"sec_interval"	13	0	1	1
3501	525	"arg_2"	"bigint"	64	0	1	2
3502	526	"res_0"	"bigint"	64	0	0	0
3503	526	"arg_1"	"time"	7	0	1	1
3504	526	"arg_2"	"bigint"	64	0	1	2
3505	527	"res_0"	"bigint"	64	0	0	0
3506	527	"arg_1"	"timetz"	7	0	1	1
3507	527	"arg_2"	"bigint"	64	0	1	2
3508	528	"res_0"	"bigint"	64	0	0	0
3509	528	"arg_1"	"date"	0	0	1	1
3510	528	"arg_2"	"bigint"	64	0	1	2
3511	529	"res_0"	"bigint"	64	0	0	0
3512	529	"arg_1"	"timestamp"	7	0	1	1
3513	529	"arg_2"	"bigint"	64	0	1	2
3514	530	"res_0"	"bigint"	64	0	0	0
3515	530	"arg_1"	"timestamptz"	7	0	1	1
3516	530	"arg_2"	"bigint"	64	0	1	2
3517	531	"res_0"	"bigint"	64	0	0	0
3518	531	"arg_1"	"blob"	0	0	1	1
3519	531	"arg_2"	"bigint"	64	0	1	2
3520	532	"res_0"	"wrd"	64	0	0	0
3521	532	"arg_1"	"oid"	63	0	1	1
3522	532	"arg_2"	"wrd"	64	0	1	2
3523	533	"res_0"	"wrd"	64	0	0	0
3524	533	"arg_1"	"tinyint"	8	0	1	1
3525	533	"arg_2"	"wrd"	64	0	1	2
3526	534	"res_0"	"wrd"	64	0	0	0
3527	534	"arg_1"	"smallint"	16	0	1	1
3528	534	"arg_2"	"wrd"	64	0	1	2
3529	535	"res_0"	"wrd"	64	0	0	0
3530	535	"arg_1"	"int"	32	0	1	1
3531	535	"arg_2"	"wrd"	64	0	1	2
3532	536	"res_0"	"wrd"	64	0	0	0
3533	536	"arg_1"	"bigint"	64	0	1	1
3534	536	"arg_2"	"wrd"	64	0	1	2
3535	537	"res_0"	"wrd"	64	0	0	0
3536	537	"arg_1"	"wrd"	64	0	1	1
3537	537	"arg_2"	"wrd"	64	0	1	2
3538	538	"res_0"	"wrd"	64	0	0	0
3539	538	"arg_1"	"decimal"	2	0	1	1
3540	538	"arg_2"	"wrd"	64	0	1	2
3541	539	"res_0"	"wrd"	64	0	0	0
3542	539	"arg_1"	"decimal"	4	0	1	1
3543	539	"arg_2"	"wrd"	64	0	1	2
3544	540	"res_0"	"wrd"	64	0	0	0
3545	540	"arg_1"	"decimal"	9	0	1	1
3546	540	"arg_2"	"wrd"	64	0	1	2
3547	541	"res_0"	"wrd"	64	0	0	0
3548	541	"arg_1"	"decimal"	19	0	1	1
3549	541	"arg_2"	"wrd"	64	0	1	2
3550	542	"res_0"	"wrd"	64	0	0	0
3551	542	"arg_1"	"real"	24	0	1	1
3552	542	"arg_2"	"wrd"	64	0	1	2
3553	543	"res_0"	"wrd"	64	0	0	0
3554	543	"arg_1"	"double"	53	0	1	1
3555	543	"arg_2"	"wrd"	64	0	1	2
3556	544	"res_0"	"wrd"	64	0	0	0
3557	544	"arg_1"	"month_interval"	32	0	1	1
3558	544	"arg_2"	"wrd"	64	0	1	2
3559	545	"res_0"	"wrd"	64	0	0	0
3560	545	"arg_1"	"sec_interval"	13	0	1	1
3561	545	"arg_2"	"wrd"	64	0	1	2
3562	546	"res_0"	"wrd"	64	0	0	0
3563	546	"arg_1"	"time"	7	0	1	1
3564	546	"arg_2"	"wrd"	64	0	1	2
3565	547	"res_0"	"wrd"	64	0	0	0
3566	547	"arg_1"	"timetz"	7	0	1	1
3567	547	"arg_2"	"wrd"	64	0	1	2
3568	548	"res_0"	"wrd"	64	0	0	0
3569	548	"arg_1"	"date"	0	0	1	1
3570	548	"arg_2"	"wrd"	64	0	1	2
3571	549	"res_0"	"wrd"	64	0	0	0
3572	549	"arg_1"	"timestamp"	7	0	1	1
3573	549	"arg_2"	"wrd"	64	0	1	2
3574	550	"res_0"	"wrd"	64	0	0	0
3575	550	"arg_1"	"timestamptz"	7	0	1	1
3576	550	"arg_2"	"wrd"	64	0	1	2
3577	551	"res_0"	"wrd"	64	0	0	0
3578	551	"arg_1"	"blob"	0	0	1	1
3579	551	"arg_2"	"wrd"	64	0	1	2
3580	552	"res_0"	"decimal"	2	0	0	0
3581	552	"arg_1"	"oid"	63	0	1	1
3582	552	"arg_2"	"decimal"	2	0	1	2
3583	553	"res_0"	"decimal"	2	0	0	0
3584	553	"arg_1"	"tinyint"	8	0	1	1
3585	553	"arg_2"	"decimal"	2	0	1	2
3586	554	"res_0"	"decimal"	2	0	0	0
3587	554	"arg_1"	"smallint"	16	0	1	1
3588	554	"arg_2"	"decimal"	2	0	1	2
3589	555	"res_0"	"decimal"	2	0	0	0
3590	555	"arg_1"	"int"	32	0	1	1
3591	555	"arg_2"	"decimal"	2	0	1	2
3592	556	"res_0"	"decimal"	2	0	0	0
3593	556	"arg_1"	"bigint"	64	0	1	1
3594	556	"arg_2"	"decimal"	2	0	1	2
3595	557	"res_0"	"decimal"	2	0	0	0
3596	557	"arg_1"	"wrd"	64	0	1	1
3597	557	"arg_2"	"decimal"	2	0	1	2
3598	558	"res_0"	"decimal"	2	0	0	0
3599	558	"arg_1"	"decimal"	2	0	1	1
3600	558	"arg_2"	"decimal"	2	0	1	2
3601	559	"res_0"	"decimal"	2	0	0	0
3602	559	"arg_1"	"decimal"	4	0	1	1
3603	559	"arg_2"	"decimal"	2	0	1	2
3604	560	"res_0"	"decimal"	2	0	0	0
3605	560	"arg_1"	"decimal"	9	0	1	1
3606	560	"arg_2"	"decimal"	2	0	1	2
3607	561	"res_0"	"decimal"	2	0	0	0
3608	561	"arg_1"	"decimal"	19	0	1	1
3609	561	"arg_2"	"decimal"	2	0	1	2
3610	562	"res_0"	"decimal"	2	0	0	0
3611	562	"arg_1"	"real"	24	0	1	1
3612	562	"arg_2"	"decimal"	2	0	1	2
3613	563	"res_0"	"decimal"	2	0	0	0
3614	563	"arg_1"	"double"	53	0	1	1
3615	563	"arg_2"	"decimal"	2	0	1	2
3616	564	"res_0"	"decimal"	2	0	0	0
3617	564	"arg_1"	"month_interval"	32	0	1	1
3618	564	"arg_2"	"decimal"	2	0	1	2
3619	565	"res_0"	"decimal"	2	0	0	0
3620	565	"arg_1"	"sec_interval"	13	0	1	1
3621	565	"arg_2"	"decimal"	2	0	1	2
3622	566	"res_0"	"decimal"	2	0	0	0
3623	566	"arg_1"	"time"	7	0	1	1
3624	566	"arg_2"	"decimal"	2	0	1	2
3625	567	"res_0"	"decimal"	2	0	0	0
3626	567	"arg_1"	"timetz"	7	0	1	1
3627	567	"arg_2"	"decimal"	2	0	1	2
3628	568	"res_0"	"decimal"	2	0	0	0
3629	568	"arg_1"	"date"	0	0	1	1
3630	568	"arg_2"	"decimal"	2	0	1	2
3631	569	"res_0"	"decimal"	2	0	0	0
3632	569	"arg_1"	"timestamp"	7	0	1	1
3633	569	"arg_2"	"decimal"	2	0	1	2
3634	570	"res_0"	"decimal"	2	0	0	0
3635	570	"arg_1"	"timestamptz"	7	0	1	1
3636	570	"arg_2"	"decimal"	2	0	1	2
3637	571	"res_0"	"decimal"	2	0	0	0
3638	571	"arg_1"	"blob"	0	0	1	1
3639	571	"arg_2"	"decimal"	2	0	1	2
3640	572	"res_0"	"decimal"	4	0	0	0
3641	572	"arg_1"	"oid"	63	0	1	1
3642	572	"arg_2"	"decimal"	4	0	1	2
3643	573	"res_0"	"decimal"	4	0	0	0
3644	573	"arg_1"	"tinyint"	8	0	1	1
3645	573	"arg_2"	"decimal"	4	0	1	2
3646	574	"res_0"	"decimal"	4	0	0	0
3647	574	"arg_1"	"smallint"	16	0	1	1
3648	574	"arg_2"	"decimal"	4	0	1	2
3649	575	"res_0"	"decimal"	4	0	0	0
3650	575	"arg_1"	"int"	32	0	1	1
3651	575	"arg_2"	"decimal"	4	0	1	2
3652	576	"res_0"	"decimal"	4	0	0	0
3653	576	"arg_1"	"bigint"	64	0	1	1
3654	576	"arg_2"	"decimal"	4	0	1	2
3655	577	"res_0"	"decimal"	4	0	0	0
3656	577	"arg_1"	"wrd"	64	0	1	1
3657	577	"arg_2"	"decimal"	4	0	1	2
3658	578	"res_0"	"decimal"	4	0	0	0
3659	578	"arg_1"	"decimal"	2	0	1	1
3660	578	"arg_2"	"decimal"	4	0	1	2
3661	579	"res_0"	"decimal"	4	0	0	0
3662	579	"arg_1"	"decimal"	4	0	1	1
3663	579	"arg_2"	"decimal"	4	0	1	2
3664	580	"res_0"	"decimal"	4	0	0	0
3665	580	"arg_1"	"decimal"	9	0	1	1
3666	580	"arg_2"	"decimal"	4	0	1	2
3667	581	"res_0"	"decimal"	4	0	0	0
3668	581	"arg_1"	"decimal"	19	0	1	1
3669	581	"arg_2"	"decimal"	4	0	1	2
3670	582	"res_0"	"decimal"	4	0	0	0
3671	582	"arg_1"	"real"	24	0	1	1
3672	582	"arg_2"	"decimal"	4	0	1	2
3673	583	"res_0"	"decimal"	4	0	0	0
3674	583	"arg_1"	"double"	53	0	1	1
3675	583	"arg_2"	"decimal"	4	0	1	2
3676	584	"res_0"	"decimal"	4	0	0	0
3677	584	"arg_1"	"month_interval"	32	0	1	1
3678	584	"arg_2"	"decimal"	4	0	1	2
3679	585	"res_0"	"decimal"	4	0	0	0
3680	585	"arg_1"	"sec_interval"	13	0	1	1
3681	585	"arg_2"	"decimal"	4	0	1	2
3682	586	"res_0"	"decimal"	4	0	0	0
3683	586	"arg_1"	"time"	7	0	1	1
3684	586	"arg_2"	"decimal"	4	0	1	2
3685	587	"res_0"	"decimal"	4	0	0	0
3686	587	"arg_1"	"timetz"	7	0	1	1
3687	587	"arg_2"	"decimal"	4	0	1	2
3688	588	"res_0"	"decimal"	4	0	0	0
3689	588	"arg_1"	"date"	0	0	1	1
3690	588	"arg_2"	"decimal"	4	0	1	2
3691	589	"res_0"	"decimal"	4	0	0	0
3692	589	"arg_1"	"timestamp"	7	0	1	1
3693	589	"arg_2"	"decimal"	4	0	1	2
3694	590	"res_0"	"decimal"	4	0	0	0
3695	590	"arg_1"	"timestamptz"	7	0	1	1
3696	590	"arg_2"	"decimal"	4	0	1	2
3697	591	"res_0"	"decimal"	4	0	0	0
3698	591	"arg_1"	"blob"	0	0	1	1
3699	591	"arg_2"	"decimal"	4	0	1	2
3700	592	"res_0"	"decimal"	9	0	0	0
3701	592	"arg_1"	"oid"	63	0	1	1
3702	592	"arg_2"	"decimal"	9	0	1	2
3703	593	"res_0"	"decimal"	9	0	0	0
3704	593	"arg_1"	"tinyint"	8	0	1	1
3705	593	"arg_2"	"decimal"	9	0	1	2
3706	594	"res_0"	"decimal"	9	0	0	0
3707	594	"arg_1"	"smallint"	16	0	1	1
3708	594	"arg_2"	"decimal"	9	0	1	2
3709	595	"res_0"	"decimal"	9	0	0	0
3710	595	"arg_1"	"int"	32	0	1	1
3711	595	"arg_2"	"decimal"	9	0	1	2
3712	596	"res_0"	"decimal"	9	0	0	0
3713	596	"arg_1"	"bigint"	64	0	1	1
3714	596	"arg_2"	"decimal"	9	0	1	2
3715	597	"res_0"	"decimal"	9	0	0	0
3716	597	"arg_1"	"wrd"	64	0	1	1
3717	597	"arg_2"	"decimal"	9	0	1	2
3718	598	"res_0"	"decimal"	9	0	0	0
3719	598	"arg_1"	"decimal"	2	0	1	1
3720	598	"arg_2"	"decimal"	9	0	1	2
3721	599	"res_0"	"decimal"	9	0	0	0
3722	599	"arg_1"	"decimal"	4	0	1	1
3723	599	"arg_2"	"decimal"	9	0	1	2
3724	600	"res_0"	"decimal"	9	0	0	0
3725	600	"arg_1"	"decimal"	9	0	1	1
3726	600	"arg_2"	"decimal"	9	0	1	2
3727	601	"res_0"	"decimal"	9	0	0	0
3728	601	"arg_1"	"decimal"	19	0	1	1
3729	601	"arg_2"	"decimal"	9	0	1	2
3730	602	"res_0"	"decimal"	9	0	0	0
3731	602	"arg_1"	"real"	24	0	1	1
3732	602	"arg_2"	"decimal"	9	0	1	2
3733	603	"res_0"	"decimal"	9	0	0	0
3734	603	"arg_1"	"double"	53	0	1	1
3735	603	"arg_2"	"decimal"	9	0	1	2
3736	604	"res_0"	"decimal"	9	0	0	0
3737	604	"arg_1"	"month_interval"	32	0	1	1
3738	604	"arg_2"	"decimal"	9	0	1	2
3739	605	"res_0"	"decimal"	9	0	0	0
3740	605	"arg_1"	"sec_interval"	13	0	1	1
3741	605	"arg_2"	"decimal"	9	0	1	2
3742	606	"res_0"	"decimal"	9	0	0	0
3743	606	"arg_1"	"time"	7	0	1	1
3744	606	"arg_2"	"decimal"	9	0	1	2
3745	607	"res_0"	"decimal"	9	0	0	0
3746	607	"arg_1"	"timetz"	7	0	1	1
3747	607	"arg_2"	"decimal"	9	0	1	2
3748	608	"res_0"	"decimal"	9	0	0	0
3749	608	"arg_1"	"date"	0	0	1	1
3750	608	"arg_2"	"decimal"	9	0	1	2
3751	609	"res_0"	"decimal"	9	0	0	0
3752	609	"arg_1"	"timestamp"	7	0	1	1
3753	609	"arg_2"	"decimal"	9	0	1	2
3754	610	"res_0"	"decimal"	9	0	0	0
3755	610	"arg_1"	"timestamptz"	7	0	1	1
3756	610	"arg_2"	"decimal"	9	0	1	2
3757	611	"res_0"	"decimal"	9	0	0	0
3758	611	"arg_1"	"blob"	0	0	1	1
3759	611	"arg_2"	"decimal"	9	0	1	2
3760	612	"res_0"	"decimal"	19	0	0	0
3761	612	"arg_1"	"oid"	63	0	1	1
3762	612	"arg_2"	"decimal"	19	0	1	2
3763	613	"res_0"	"decimal"	19	0	0	0
3764	613	"arg_1"	"tinyint"	8	0	1	1
3765	613	"arg_2"	"decimal"	19	0	1	2
3766	614	"res_0"	"decimal"	19	0	0	0
3767	614	"arg_1"	"smallint"	16	0	1	1
3768	614	"arg_2"	"decimal"	19	0	1	2
3769	615	"res_0"	"decimal"	19	0	0	0
3770	615	"arg_1"	"int"	32	0	1	1
3771	615	"arg_2"	"decimal"	19	0	1	2
3772	616	"res_0"	"decimal"	19	0	0	0
3773	616	"arg_1"	"bigint"	64	0	1	1
3774	616	"arg_2"	"decimal"	19	0	1	2
3775	617	"res_0"	"decimal"	19	0	0	0
3776	617	"arg_1"	"wrd"	64	0	1	1
3777	617	"arg_2"	"decimal"	19	0	1	2
3778	618	"res_0"	"decimal"	19	0	0	0
3779	618	"arg_1"	"decimal"	2	0	1	1
3780	618	"arg_2"	"decimal"	19	0	1	2
3781	619	"res_0"	"decimal"	19	0	0	0
3782	619	"arg_1"	"decimal"	4	0	1	1
3783	619	"arg_2"	"decimal"	19	0	1	2
3784	620	"res_0"	"decimal"	19	0	0	0
3785	620	"arg_1"	"decimal"	9	0	1	1
3786	620	"arg_2"	"decimal"	19	0	1	2
3787	621	"res_0"	"decimal"	19	0	0	0
3788	621	"arg_1"	"decimal"	19	0	1	1
3789	621	"arg_2"	"decimal"	19	0	1	2
3790	622	"res_0"	"decimal"	19	0	0	0
3791	622	"arg_1"	"real"	24	0	1	1
3792	622	"arg_2"	"decimal"	19	0	1	2
3793	623	"res_0"	"decimal"	19	0	0	0
3794	623	"arg_1"	"double"	53	0	1	1
3795	623	"arg_2"	"decimal"	19	0	1	2
3796	624	"res_0"	"decimal"	19	0	0	0
3797	624	"arg_1"	"month_interval"	32	0	1	1
3798	624	"arg_2"	"decimal"	19	0	1	2
3799	625	"res_0"	"decimal"	19	0	0	0
3800	625	"arg_1"	"sec_interval"	13	0	1	1
3801	625	"arg_2"	"decimal"	19	0	1	2
3802	626	"res_0"	"decimal"	19	0	0	0
3803	626	"arg_1"	"time"	7	0	1	1
3804	626	"arg_2"	"decimal"	19	0	1	2
3805	627	"res_0"	"decimal"	19	0	0	0
3806	627	"arg_1"	"timetz"	7	0	1	1
3807	627	"arg_2"	"decimal"	19	0	1	2
3808	628	"res_0"	"decimal"	19	0	0	0
3809	628	"arg_1"	"date"	0	0	1	1
3810	628	"arg_2"	"decimal"	19	0	1	2
3811	629	"res_0"	"decimal"	19	0	0	0
3812	629	"arg_1"	"timestamp"	7	0	1	1
3813	629	"arg_2"	"decimal"	19	0	1	2
3814	630	"res_0"	"decimal"	19	0	0	0
3815	630	"arg_1"	"timestamptz"	7	0	1	1
3816	630	"arg_2"	"decimal"	19	0	1	2
3817	631	"res_0"	"decimal"	19	0	0	0
3818	631	"arg_1"	"blob"	0	0	1	1
3819	631	"arg_2"	"decimal"	19	0	1	2
3820	632	"res_0"	"real"	24	0	0	0
3821	632	"arg_1"	"oid"	63	0	1	1
3822	632	"arg_2"	"real"	24	0	1	2
3823	633	"res_0"	"real"	24	0	0	0
3824	633	"arg_1"	"tinyint"	8	0	1	1
3825	633	"arg_2"	"real"	24	0	1	2
3826	634	"res_0"	"real"	24	0	0	0
3827	634	"arg_1"	"smallint"	16	0	1	1
3828	634	"arg_2"	"real"	24	0	1	2
3829	635	"res_0"	"real"	24	0	0	0
3830	635	"arg_1"	"int"	32	0	1	1
3831	635	"arg_2"	"real"	24	0	1	2
3832	636	"res_0"	"real"	24	0	0	0
3833	636	"arg_1"	"bigint"	64	0	1	1
3834	636	"arg_2"	"real"	24	0	1	2
3835	637	"res_0"	"real"	24	0	0	0
3836	637	"arg_1"	"wrd"	64	0	1	1
3837	637	"arg_2"	"real"	24	0	1	2
3838	638	"res_0"	"real"	24	0	0	0
3839	638	"arg_1"	"decimal"	2	0	1	1
3840	638	"arg_2"	"real"	24	0	1	2
3841	639	"res_0"	"real"	24	0	0	0
3842	639	"arg_1"	"decimal"	4	0	1	1
3843	639	"arg_2"	"real"	24	0	1	2
3844	640	"res_0"	"real"	24	0	0	0
3845	640	"arg_1"	"decimal"	9	0	1	1
3846	640	"arg_2"	"real"	24	0	1	2
3847	641	"res_0"	"real"	24	0	0	0
3848	641	"arg_1"	"decimal"	19	0	1	1
3849	641	"arg_2"	"real"	24	0	1	2
3850	642	"res_0"	"real"	24	0	0	0
3851	642	"arg_1"	"real"	24	0	1	1
3852	642	"arg_2"	"real"	24	0	1	2
3853	643	"res_0"	"real"	24	0	0	0
3854	643	"arg_1"	"double"	53	0	1	1
3855	643	"arg_2"	"real"	24	0	1	2
3856	644	"res_0"	"real"	24	0	0	0
3857	644	"arg_1"	"month_interval"	32	0	1	1
3858	644	"arg_2"	"real"	24	0	1	2
3859	645	"res_0"	"real"	24	0	0	0
3860	645	"arg_1"	"sec_interval"	13	0	1	1
3861	645	"arg_2"	"real"	24	0	1	2
3862	646	"res_0"	"real"	24	0	0	0
3863	646	"arg_1"	"time"	7	0	1	1
3864	646	"arg_2"	"real"	24	0	1	2
3865	647	"res_0"	"real"	24	0	0	0
3866	647	"arg_1"	"timetz"	7	0	1	1
3867	647	"arg_2"	"real"	24	0	1	2
3868	648	"res_0"	"real"	24	0	0	0
3869	648	"arg_1"	"date"	0	0	1	1
3870	648	"arg_2"	"real"	24	0	1	2
3871	649	"res_0"	"real"	24	0	0	0
3872	649	"arg_1"	"timestamp"	7	0	1	1
3873	649	"arg_2"	"real"	24	0	1	2
3874	650	"res_0"	"real"	24	0	0	0
3875	650	"arg_1"	"timestamptz"	7	0	1	1
3876	650	"arg_2"	"real"	24	0	1	2
3877	651	"res_0"	"real"	24	0	0	0
3878	651	"arg_1"	"blob"	0	0	1	1
3879	651	"arg_2"	"real"	24	0	1	2
3880	652	"res_0"	"double"	53	0	0	0
3881	652	"arg_1"	"oid"	63	0	1	1
3882	652	"arg_2"	"double"	53	0	1	2
3883	653	"res_0"	"double"	53	0	0	0
3884	653	"arg_1"	"tinyint"	8	0	1	1
3885	653	"arg_2"	"double"	53	0	1	2
3886	654	"res_0"	"double"	53	0	0	0
3887	654	"arg_1"	"smallint"	16	0	1	1
3888	654	"arg_2"	"double"	53	0	1	2
3889	655	"res_0"	"double"	53	0	0	0
3890	655	"arg_1"	"int"	32	0	1	1
3891	655	"arg_2"	"double"	53	0	1	2
3892	656	"res_0"	"double"	53	0	0	0
3893	656	"arg_1"	"bigint"	64	0	1	1
3894	656	"arg_2"	"double"	53	0	1	2
3895	657	"res_0"	"double"	53	0	0	0
3896	657	"arg_1"	"wrd"	64	0	1	1
3897	657	"arg_2"	"double"	53	0	1	2
3898	658	"res_0"	"double"	53	0	0	0
3899	658	"arg_1"	"decimal"	2	0	1	1
3900	658	"arg_2"	"double"	53	0	1	2
3901	659	"res_0"	"double"	53	0	0	0
3902	659	"arg_1"	"decimal"	4	0	1	1
3903	659	"arg_2"	"double"	53	0	1	2
3904	660	"res_0"	"double"	53	0	0	0
3905	660	"arg_1"	"decimal"	9	0	1	1
3906	660	"arg_2"	"double"	53	0	1	2
3907	661	"res_0"	"double"	53	0	0	0
3908	661	"arg_1"	"decimal"	19	0	1	1
3909	661	"arg_2"	"double"	53	0	1	2
3910	662	"res_0"	"double"	53	0	0	0
3911	662	"arg_1"	"real"	24	0	1	1
3912	662	"arg_2"	"double"	53	0	1	2
3913	663	"res_0"	"double"	53	0	0	0
3914	663	"arg_1"	"double"	53	0	1	1
3915	663	"arg_2"	"double"	53	0	1	2
3916	664	"res_0"	"double"	53	0	0	0
3917	664	"arg_1"	"month_interval"	32	0	1	1
3918	664	"arg_2"	"double"	53	0	1	2
3919	665	"res_0"	"double"	53	0	0	0
3920	665	"arg_1"	"sec_interval"	13	0	1	1
3921	665	"arg_2"	"double"	53	0	1	2
3922	666	"res_0"	"double"	53	0	0	0
3923	666	"arg_1"	"time"	7	0	1	1
3924	666	"arg_2"	"double"	53	0	1	2
3925	667	"res_0"	"double"	53	0	0	0
3926	667	"arg_1"	"timetz"	7	0	1	1
3927	667	"arg_2"	"double"	53	0	1	2
3928	668	"res_0"	"double"	53	0	0	0
3929	668	"arg_1"	"date"	0	0	1	1
3930	668	"arg_2"	"double"	53	0	1	2
3931	669	"res_0"	"double"	53	0	0	0
3932	669	"arg_1"	"timestamp"	7	0	1	1
3933	669	"arg_2"	"double"	53	0	1	2
3934	670	"res_0"	"double"	53	0	0	0
3935	670	"arg_1"	"timestamptz"	7	0	1	1
3936	670	"arg_2"	"double"	53	0	1	2
3937	671	"res_0"	"double"	53	0	0	0
3938	671	"arg_1"	"blob"	0	0	1	1
3939	671	"arg_2"	"double"	53	0	1	2
3940	672	"res_0"	"month_interval"	32	0	0	0
3941	672	"arg_1"	"oid"	63	0	1	1
3942	672	"arg_2"	"month_interval"	32	0	1	2
3943	673	"res_0"	"month_interval"	32	0	0	0
3944	673	"arg_1"	"tinyint"	8	0	1	1
3945	673	"arg_2"	"month_interval"	32	0	1	2
3946	674	"res_0"	"month_interval"	32	0	0	0
3947	674	"arg_1"	"smallint"	16	0	1	1
3948	674	"arg_2"	"month_interval"	32	0	1	2
3949	675	"res_0"	"month_interval"	32	0	0	0
3950	675	"arg_1"	"int"	32	0	1	1
3951	675	"arg_2"	"month_interval"	32	0	1	2
3952	676	"res_0"	"month_interval"	32	0	0	0
3953	676	"arg_1"	"bigint"	64	0	1	1
3954	676	"arg_2"	"month_interval"	32	0	1	2
3955	677	"res_0"	"month_interval"	32	0	0	0
3956	677	"arg_1"	"wrd"	64	0	1	1
3957	677	"arg_2"	"month_interval"	32	0	1	2
3958	678	"res_0"	"month_interval"	32	0	0	0
3959	678	"arg_1"	"decimal"	2	0	1	1
3960	678	"arg_2"	"month_interval"	32	0	1	2
3961	679	"res_0"	"month_interval"	32	0	0	0
3962	679	"arg_1"	"decimal"	4	0	1	1
3963	679	"arg_2"	"month_interval"	32	0	1	2
3964	680	"res_0"	"month_interval"	32	0	0	0
3965	680	"arg_1"	"decimal"	9	0	1	1
3966	680	"arg_2"	"month_interval"	32	0	1	2
3967	681	"res_0"	"month_interval"	32	0	0	0
3968	681	"arg_1"	"decimal"	19	0	1	1
3969	681	"arg_2"	"month_interval"	32	0	1	2
3970	682	"res_0"	"month_interval"	32	0	0	0
3971	682	"arg_1"	"real"	24	0	1	1
3972	682	"arg_2"	"month_interval"	32	0	1	2
3973	683	"res_0"	"month_interval"	32	0	0	0
3974	683	"arg_1"	"double"	53	0	1	1
3975	683	"arg_2"	"month_interval"	32	0	1	2
3976	684	"res_0"	"month_interval"	32	0	0	0
3977	684	"arg_1"	"month_interval"	32	0	1	1
3978	684	"arg_2"	"month_interval"	32	0	1	2
3979	685	"res_0"	"month_interval"	32	0	0	0
3980	685	"arg_1"	"sec_interval"	13	0	1	1
3981	685	"arg_2"	"month_interval"	32	0	1	2
3982	686	"res_0"	"month_interval"	32	0	0	0
3983	686	"arg_1"	"time"	7	0	1	1
3984	686	"arg_2"	"month_interval"	32	0	1	2
3985	687	"res_0"	"month_interval"	32	0	0	0
3986	687	"arg_1"	"timetz"	7	0	1	1
3987	687	"arg_2"	"month_interval"	32	0	1	2
3988	688	"res_0"	"month_interval"	32	0	0	0
3989	688	"arg_1"	"date"	0	0	1	1
3990	688	"arg_2"	"month_interval"	32	0	1	2
3991	689	"res_0"	"month_interval"	32	0	0	0
3992	689	"arg_1"	"timestamp"	7	0	1	1
3993	689	"arg_2"	"month_interval"	32	0	1	2
3994	690	"res_0"	"month_interval"	32	0	0	0
3995	690	"arg_1"	"timestamptz"	7	0	1	1
3996	690	"arg_2"	"month_interval"	32	0	1	2
3997	691	"res_0"	"month_interval"	32	0	0	0
3998	691	"arg_1"	"blob"	0	0	1	1
3999	691	"arg_2"	"month_interval"	32	0	1	2
4000	692	"res_0"	"sec_interval"	13	0	0	0
4001	692	"arg_1"	"oid"	63	0	1	1
4002	692	"arg_2"	"sec_interval"	13	0	1	2
4003	693	"res_0"	"sec_interval"	13	0	0	0
4004	693	"arg_1"	"tinyint"	8	0	1	1
4005	693	"arg_2"	"sec_interval"	13	0	1	2
4006	694	"res_0"	"sec_interval"	13	0	0	0
4007	694	"arg_1"	"smallint"	16	0	1	1
4008	694	"arg_2"	"sec_interval"	13	0	1	2
4009	695	"res_0"	"sec_interval"	13	0	0	0
4010	695	"arg_1"	"int"	32	0	1	1
4011	695	"arg_2"	"sec_interval"	13	0	1	2
4012	696	"res_0"	"sec_interval"	13	0	0	0
4013	696	"arg_1"	"bigint"	64	0	1	1
4014	696	"arg_2"	"sec_interval"	13	0	1	2
4015	697	"res_0"	"sec_interval"	13	0	0	0
4016	697	"arg_1"	"wrd"	64	0	1	1
4017	697	"arg_2"	"sec_interval"	13	0	1	2
4018	698	"res_0"	"sec_interval"	13	0	0	0
4019	698	"arg_1"	"decimal"	2	0	1	1
4020	698	"arg_2"	"sec_interval"	13	0	1	2
4021	699	"res_0"	"sec_interval"	13	0	0	0
4022	699	"arg_1"	"decimal"	4	0	1	1
4023	699	"arg_2"	"sec_interval"	13	0	1	2
4024	700	"res_0"	"sec_interval"	13	0	0	0
4025	700	"arg_1"	"decimal"	9	0	1	1
4026	700	"arg_2"	"sec_interval"	13	0	1	2
4027	701	"res_0"	"sec_interval"	13	0	0	0
4028	701	"arg_1"	"decimal"	19	0	1	1
4029	701	"arg_2"	"sec_interval"	13	0	1	2
4030	702	"res_0"	"sec_interval"	13	0	0	0
4031	702	"arg_1"	"real"	24	0	1	1
4032	702	"arg_2"	"sec_interval"	13	0	1	2
4033	703	"res_0"	"sec_interval"	13	0	0	0
4034	703	"arg_1"	"double"	53	0	1	1
4035	703	"arg_2"	"sec_interval"	13	0	1	2
4036	704	"res_0"	"sec_interval"	13	0	0	0
4037	704	"arg_1"	"month_interval"	32	0	1	1
4038	704	"arg_2"	"sec_interval"	13	0	1	2
4039	705	"res_0"	"sec_interval"	13	0	0	0
4040	705	"arg_1"	"sec_interval"	13	0	1	1
4041	705	"arg_2"	"sec_interval"	13	0	1	2
4042	706	"res_0"	"sec_interval"	13	0	0	0
4043	706	"arg_1"	"time"	7	0	1	1
4044	706	"arg_2"	"sec_interval"	13	0	1	2
4045	707	"res_0"	"sec_interval"	13	0	0	0
4046	707	"arg_1"	"timetz"	7	0	1	1
4047	707	"arg_2"	"sec_interval"	13	0	1	2
4048	708	"res_0"	"sec_interval"	13	0	0	0
4049	708	"arg_1"	"date"	0	0	1	1
4050	708	"arg_2"	"sec_interval"	13	0	1	2
4051	709	"res_0"	"sec_interval"	13	0	0	0
4052	709	"arg_1"	"timestamp"	7	0	1	1
4053	709	"arg_2"	"sec_interval"	13	0	1	2
4054	710	"res_0"	"sec_interval"	13	0	0	0
4055	710	"arg_1"	"timestamptz"	7	0	1	1
4056	710	"arg_2"	"sec_interval"	13	0	1	2
4057	711	"res_0"	"sec_interval"	13	0	0	0
4058	711	"arg_1"	"blob"	0	0	1	1
4059	711	"arg_2"	"sec_interval"	13	0	1	2
4060	712	"res_0"	"time"	7	0	0	0
4061	712	"arg_1"	"oid"	63	0	1	1
4062	712	"arg_2"	"time"	7	0	1	2
4063	713	"res_0"	"time"	7	0	0	0
4064	713	"arg_1"	"tinyint"	8	0	1	1
4065	713	"arg_2"	"time"	7	0	1	2
4066	714	"res_0"	"time"	7	0	0	0
4067	714	"arg_1"	"smallint"	16	0	1	1
4068	714	"arg_2"	"time"	7	0	1	2
4069	715	"res_0"	"time"	7	0	0	0
4070	715	"arg_1"	"int"	32	0	1	1
4071	715	"arg_2"	"time"	7	0	1	2
4072	716	"res_0"	"time"	7	0	0	0
4073	716	"arg_1"	"bigint"	64	0	1	1
4074	716	"arg_2"	"time"	7	0	1	2
4075	717	"res_0"	"time"	7	0	0	0
4076	717	"arg_1"	"wrd"	64	0	1	1
4077	717	"arg_2"	"time"	7	0	1	2
4078	718	"res_0"	"time"	7	0	0	0
4079	718	"arg_1"	"decimal"	2	0	1	1
4080	718	"arg_2"	"time"	7	0	1	2
4081	719	"res_0"	"time"	7	0	0	0
4082	719	"arg_1"	"decimal"	4	0	1	1
4083	719	"arg_2"	"time"	7	0	1	2
4084	720	"res_0"	"time"	7	0	0	0
4085	720	"arg_1"	"decimal"	9	0	1	1
4086	720	"arg_2"	"time"	7	0	1	2
4087	721	"res_0"	"time"	7	0	0	0
4088	721	"arg_1"	"decimal"	19	0	1	1
4089	721	"arg_2"	"time"	7	0	1	2
4090	722	"res_0"	"time"	7	0	0	0
4091	722	"arg_1"	"real"	24	0	1	1
4092	722	"arg_2"	"time"	7	0	1	2
4093	723	"res_0"	"time"	7	0	0	0
4094	723	"arg_1"	"double"	53	0	1	1
4095	723	"arg_2"	"time"	7	0	1	2
4096	724	"res_0"	"time"	7	0	0	0
4097	724	"arg_1"	"month_interval"	32	0	1	1
4098	724	"arg_2"	"time"	7	0	1	2
4099	725	"res_0"	"time"	7	0	0	0
4100	725	"arg_1"	"sec_interval"	13	0	1	1
4101	725	"arg_2"	"time"	7	0	1	2
4102	726	"res_0"	"time"	7	0	0	0
4103	726	"arg_1"	"time"	7	0	1	1
4104	726	"arg_2"	"time"	7	0	1	2
4105	727	"res_0"	"time"	7	0	0	0
4106	727	"arg_1"	"timetz"	7	0	1	1
4107	727	"arg_2"	"time"	7	0	1	2
4108	728	"res_0"	"time"	7	0	0	0
4109	728	"arg_1"	"date"	0	0	1	1
4110	728	"arg_2"	"time"	7	0	1	2
4111	729	"res_0"	"time"	7	0	0	0
4112	729	"arg_1"	"timestamp"	7	0	1	1
4113	729	"arg_2"	"time"	7	0	1	2
4114	730	"res_0"	"time"	7	0	0	0
4115	730	"arg_1"	"timestamptz"	7	0	1	1
4116	730	"arg_2"	"time"	7	0	1	2
4117	731	"res_0"	"time"	7	0	0	0
4118	731	"arg_1"	"blob"	0	0	1	1
4119	731	"arg_2"	"time"	7	0	1	2
4120	732	"res_0"	"timetz"	7	0	0	0
4121	732	"arg_1"	"oid"	63	0	1	1
4122	732	"arg_2"	"timetz"	7	0	1	2
4123	733	"res_0"	"timetz"	7	0	0	0
4124	733	"arg_1"	"tinyint"	8	0	1	1
4125	733	"arg_2"	"timetz"	7	0	1	2
4126	734	"res_0"	"timetz"	7	0	0	0
4127	734	"arg_1"	"smallint"	16	0	1	1
4128	734	"arg_2"	"timetz"	7	0	1	2
4129	735	"res_0"	"timetz"	7	0	0	0
4130	735	"arg_1"	"int"	32	0	1	1
4131	735	"arg_2"	"timetz"	7	0	1	2
4132	736	"res_0"	"timetz"	7	0	0	0
4133	736	"arg_1"	"bigint"	64	0	1	1
4134	736	"arg_2"	"timetz"	7	0	1	2
4135	737	"res_0"	"timetz"	7	0	0	0
4136	737	"arg_1"	"wrd"	64	0	1	1
4137	737	"arg_2"	"timetz"	7	0	1	2
4138	738	"res_0"	"timetz"	7	0	0	0
4139	738	"arg_1"	"decimal"	2	0	1	1
4140	738	"arg_2"	"timetz"	7	0	1	2
4141	739	"res_0"	"timetz"	7	0	0	0
4142	739	"arg_1"	"decimal"	4	0	1	1
4143	739	"arg_2"	"timetz"	7	0	1	2
4144	740	"res_0"	"timetz"	7	0	0	0
4145	740	"arg_1"	"decimal"	9	0	1	1
4146	740	"arg_2"	"timetz"	7	0	1	2
4147	741	"res_0"	"timetz"	7	0	0	0
4148	741	"arg_1"	"decimal"	19	0	1	1
4149	741	"arg_2"	"timetz"	7	0	1	2
4150	742	"res_0"	"timetz"	7	0	0	0
4151	742	"arg_1"	"real"	24	0	1	1
4152	742	"arg_2"	"timetz"	7	0	1	2
4153	743	"res_0"	"timetz"	7	0	0	0
4154	743	"arg_1"	"double"	53	0	1	1
4155	743	"arg_2"	"timetz"	7	0	1	2
4156	744	"res_0"	"timetz"	7	0	0	0
4157	744	"arg_1"	"month_interval"	32	0	1	1
4158	744	"arg_2"	"timetz"	7	0	1	2
4159	745	"res_0"	"timetz"	7	0	0	0
4160	745	"arg_1"	"sec_interval"	13	0	1	1
4161	745	"arg_2"	"timetz"	7	0	1	2
4162	746	"res_0"	"timetz"	7	0	0	0
4163	746	"arg_1"	"time"	7	0	1	1
4164	746	"arg_2"	"timetz"	7	0	1	2
4165	747	"res_0"	"timetz"	7	0	0	0
4166	747	"arg_1"	"timetz"	7	0	1	1
4167	747	"arg_2"	"timetz"	7	0	1	2
4168	748	"res_0"	"timetz"	7	0	0	0
4169	748	"arg_1"	"date"	0	0	1	1
4170	748	"arg_2"	"timetz"	7	0	1	2
4171	749	"res_0"	"timetz"	7	0	0	0
4172	749	"arg_1"	"timestamp"	7	0	1	1
4173	749	"arg_2"	"timetz"	7	0	1	2
4174	750	"res_0"	"timetz"	7	0	0	0
4175	750	"arg_1"	"timestamptz"	7	0	1	1
4176	750	"arg_2"	"timetz"	7	0	1	2
4177	751	"res_0"	"timetz"	7	0	0	0
4178	751	"arg_1"	"blob"	0	0	1	1
4179	751	"arg_2"	"timetz"	7	0	1	2
4180	752	"res_0"	"date"	0	0	0	0
4181	752	"arg_1"	"oid"	63	0	1	1
4182	752	"arg_2"	"date"	0	0	1	2
4183	753	"res_0"	"date"	0	0	0	0
4184	753	"arg_1"	"tinyint"	8	0	1	1
4185	753	"arg_2"	"date"	0	0	1	2
4186	754	"res_0"	"date"	0	0	0	0
4187	754	"arg_1"	"smallint"	16	0	1	1
4188	754	"arg_2"	"date"	0	0	1	2
4189	755	"res_0"	"date"	0	0	0	0
4190	755	"arg_1"	"int"	32	0	1	1
4191	755	"arg_2"	"date"	0	0	1	2
4192	756	"res_0"	"date"	0	0	0	0
4193	756	"arg_1"	"bigint"	64	0	1	1
4194	756	"arg_2"	"date"	0	0	1	2
4195	757	"res_0"	"date"	0	0	0	0
4196	757	"arg_1"	"wrd"	64	0	1	1
4197	757	"arg_2"	"date"	0	0	1	2
4198	758	"res_0"	"date"	0	0	0	0
4199	758	"arg_1"	"decimal"	2	0	1	1
4200	758	"arg_2"	"date"	0	0	1	2
4201	759	"res_0"	"date"	0	0	0	0
4202	759	"arg_1"	"decimal"	4	0	1	1
4203	759	"arg_2"	"date"	0	0	1	2
4204	760	"res_0"	"date"	0	0	0	0
4205	760	"arg_1"	"decimal"	9	0	1	1
4206	760	"arg_2"	"date"	0	0	1	2
4207	761	"res_0"	"date"	0	0	0	0
4208	761	"arg_1"	"decimal"	19	0	1	1
4209	761	"arg_2"	"date"	0	0	1	2
4210	762	"res_0"	"date"	0	0	0	0
4211	762	"arg_1"	"real"	24	0	1	1
4212	762	"arg_2"	"date"	0	0	1	2
4213	763	"res_0"	"date"	0	0	0	0
4214	763	"arg_1"	"double"	53	0	1	1
4215	763	"arg_2"	"date"	0	0	1	2
4216	764	"res_0"	"date"	0	0	0	0
4217	764	"arg_1"	"month_interval"	32	0	1	1
4218	764	"arg_2"	"date"	0	0	1	2
4219	765	"res_0"	"date"	0	0	0	0
4220	765	"arg_1"	"sec_interval"	13	0	1	1
4221	765	"arg_2"	"date"	0	0	1	2
4222	766	"res_0"	"date"	0	0	0	0
4223	766	"arg_1"	"time"	7	0	1	1
4224	766	"arg_2"	"date"	0	0	1	2
4225	767	"res_0"	"date"	0	0	0	0
4226	767	"arg_1"	"timetz"	7	0	1	1
4227	767	"arg_2"	"date"	0	0	1	2
4228	768	"res_0"	"date"	0	0	0	0
4229	768	"arg_1"	"date"	0	0	1	1
4230	768	"arg_2"	"date"	0	0	1	2
4231	769	"res_0"	"date"	0	0	0	0
4232	769	"arg_1"	"timestamp"	7	0	1	1
4233	769	"arg_2"	"date"	0	0	1	2
4234	770	"res_0"	"date"	0	0	0	0
4235	770	"arg_1"	"timestamptz"	7	0	1	1
4236	770	"arg_2"	"date"	0	0	1	2
4237	771	"res_0"	"date"	0	0	0	0
4238	771	"arg_1"	"blob"	0	0	1	1
4239	771	"arg_2"	"date"	0	0	1	2
4240	772	"res_0"	"timestamp"	7	0	0	0
4241	772	"arg_1"	"oid"	63	0	1	1
4242	772	"arg_2"	"timestamp"	7	0	1	2
4243	773	"res_0"	"timestamp"	7	0	0	0
4244	773	"arg_1"	"tinyint"	8	0	1	1
4245	773	"arg_2"	"timestamp"	7	0	1	2
4246	774	"res_0"	"timestamp"	7	0	0	0
4247	774	"arg_1"	"smallint"	16	0	1	1
4248	774	"arg_2"	"timestamp"	7	0	1	2
4249	775	"res_0"	"timestamp"	7	0	0	0
4250	775	"arg_1"	"int"	32	0	1	1
4251	775	"arg_2"	"timestamp"	7	0	1	2
4252	776	"res_0"	"timestamp"	7	0	0	0
4253	776	"arg_1"	"bigint"	64	0	1	1
4254	776	"arg_2"	"timestamp"	7	0	1	2
4255	777	"res_0"	"timestamp"	7	0	0	0
4256	777	"arg_1"	"wrd"	64	0	1	1
4257	777	"arg_2"	"timestamp"	7	0	1	2
4258	778	"res_0"	"timestamp"	7	0	0	0
4259	778	"arg_1"	"decimal"	2	0	1	1
4260	778	"arg_2"	"timestamp"	7	0	1	2
4261	779	"res_0"	"timestamp"	7	0	0	0
4262	779	"arg_1"	"decimal"	4	0	1	1
4263	779	"arg_2"	"timestamp"	7	0	1	2
4264	780	"res_0"	"timestamp"	7	0	0	0
4265	780	"arg_1"	"decimal"	9	0	1	1
4266	780	"arg_2"	"timestamp"	7	0	1	2
4267	781	"res_0"	"timestamp"	7	0	0	0
4268	781	"arg_1"	"decimal"	19	0	1	1
4269	781	"arg_2"	"timestamp"	7	0	1	2
4270	782	"res_0"	"timestamp"	7	0	0	0
4271	782	"arg_1"	"real"	24	0	1	1
4272	782	"arg_2"	"timestamp"	7	0	1	2
4273	783	"res_0"	"timestamp"	7	0	0	0
4274	783	"arg_1"	"double"	53	0	1	1
4275	783	"arg_2"	"timestamp"	7	0	1	2
4276	784	"res_0"	"timestamp"	7	0	0	0
4277	784	"arg_1"	"month_interval"	32	0	1	1
4278	784	"arg_2"	"timestamp"	7	0	1	2
4279	785	"res_0"	"timestamp"	7	0	0	0
4280	785	"arg_1"	"sec_interval"	13	0	1	1
4281	785	"arg_2"	"timestamp"	7	0	1	2
4282	786	"res_0"	"timestamp"	7	0	0	0
4283	786	"arg_1"	"time"	7	0	1	1
4284	786	"arg_2"	"timestamp"	7	0	1	2
4285	787	"res_0"	"timestamp"	7	0	0	0
4286	787	"arg_1"	"timetz"	7	0	1	1
4287	787	"arg_2"	"timestamp"	7	0	1	2
4288	788	"res_0"	"timestamp"	7	0	0	0
4289	788	"arg_1"	"date"	0	0	1	1
4290	788	"arg_2"	"timestamp"	7	0	1	2
4291	789	"res_0"	"timestamp"	7	0	0	0
4292	789	"arg_1"	"timestamp"	7	0	1	1
4293	789	"arg_2"	"timestamp"	7	0	1	2
4294	790	"res_0"	"timestamp"	7	0	0	0
4295	790	"arg_1"	"timestamptz"	7	0	1	1
4296	790	"arg_2"	"timestamp"	7	0	1	2
4297	791	"res_0"	"timestamp"	7	0	0	0
4298	791	"arg_1"	"blob"	0	0	1	1
4299	791	"arg_2"	"timestamp"	7	0	1	2
4300	792	"res_0"	"timestamptz"	7	0	0	0
4301	792	"arg_1"	"oid"	63	0	1	1
4302	792	"arg_2"	"timestamptz"	7	0	1	2
4303	793	"res_0"	"timestamptz"	7	0	0	0
4304	793	"arg_1"	"tinyint"	8	0	1	1
4305	793	"arg_2"	"timestamptz"	7	0	1	2
4306	794	"res_0"	"timestamptz"	7	0	0	0
4307	794	"arg_1"	"smallint"	16	0	1	1
4308	794	"arg_2"	"timestamptz"	7	0	1	2
4309	795	"res_0"	"timestamptz"	7	0	0	0
4310	795	"arg_1"	"int"	32	0	1	1
4311	795	"arg_2"	"timestamptz"	7	0	1	2
4312	796	"res_0"	"timestamptz"	7	0	0	0
4313	796	"arg_1"	"bigint"	64	0	1	1
4314	796	"arg_2"	"timestamptz"	7	0	1	2
4315	797	"res_0"	"timestamptz"	7	0	0	0
4316	797	"arg_1"	"wrd"	64	0	1	1
4317	797	"arg_2"	"timestamptz"	7	0	1	2
4318	798	"res_0"	"timestamptz"	7	0	0	0
4319	798	"arg_1"	"decimal"	2	0	1	1
4320	798	"arg_2"	"timestamptz"	7	0	1	2
4321	799	"res_0"	"timestamptz"	7	0	0	0
4322	799	"arg_1"	"decimal"	4	0	1	1
4323	799	"arg_2"	"timestamptz"	7	0	1	2
4324	800	"res_0"	"timestamptz"	7	0	0	0
4325	800	"arg_1"	"decimal"	9	0	1	1
4326	800	"arg_2"	"timestamptz"	7	0	1	2
4327	801	"res_0"	"timestamptz"	7	0	0	0
4328	801	"arg_1"	"decimal"	19	0	1	1
4329	801	"arg_2"	"timestamptz"	7	0	1	2
4330	802	"res_0"	"timestamptz"	7	0	0	0
4331	802	"arg_1"	"real"	24	0	1	1
4332	802	"arg_2"	"timestamptz"	7	0	1	2
4333	803	"res_0"	"timestamptz"	7	0	0	0
4334	803	"arg_1"	"double"	53	0	1	1
4335	803	"arg_2"	"timestamptz"	7	0	1	2
4336	804	"res_0"	"timestamptz"	7	0	0	0
4337	804	"arg_1"	"month_interval"	32	0	1	1
4338	804	"arg_2"	"timestamptz"	7	0	1	2
4339	805	"res_0"	"timestamptz"	7	0	0	0
4340	805	"arg_1"	"sec_interval"	13	0	1	1
4341	805	"arg_2"	"timestamptz"	7	0	1	2
4342	806	"res_0"	"timestamptz"	7	0	0	0
4343	806	"arg_1"	"time"	7	0	1	1
4344	806	"arg_2"	"timestamptz"	7	0	1	2
4345	807	"res_0"	"timestamptz"	7	0	0	0
4346	807	"arg_1"	"timetz"	7	0	1	1
4347	807	"arg_2"	"timestamptz"	7	0	1	2
4348	808	"res_0"	"timestamptz"	7	0	0	0
4349	808	"arg_1"	"date"	0	0	1	1
4350	808	"arg_2"	"timestamptz"	7	0	1	2
4351	809	"res_0"	"timestamptz"	7	0	0	0
4352	809	"arg_1"	"timestamp"	7	0	1	1
4353	809	"arg_2"	"timestamptz"	7	0	1	2
4354	810	"res_0"	"timestamptz"	7	0	0	0
4355	810	"arg_1"	"timestamptz"	7	0	1	1
4356	810	"arg_2"	"timestamptz"	7	0	1	2
4357	811	"res_0"	"timestamptz"	7	0	0	0
4358	811	"arg_1"	"blob"	0	0	1	1
4359	811	"arg_2"	"timestamptz"	7	0	1	2
4360	812	"res_0"	"blob"	0	0	0	0
4361	812	"arg_1"	"oid"	63	0	1	1
4362	812	"arg_2"	"blob"	0	0	1	2
4363	813	"res_0"	"blob"	0	0	0	0
4364	813	"arg_1"	"tinyint"	8	0	1	1
4365	813	"arg_2"	"blob"	0	0	1	2
4366	814	"res_0"	"blob"	0	0	0	0
4367	814	"arg_1"	"smallint"	16	0	1	1
4368	814	"arg_2"	"blob"	0	0	1	2
4369	815	"res_0"	"blob"	0	0	0	0
4370	815	"arg_1"	"int"	32	0	1	1
4371	815	"arg_2"	"blob"	0	0	1	2
4372	816	"res_0"	"blob"	0	0	0	0
4373	816	"arg_1"	"bigint"	64	0	1	1
4374	816	"arg_2"	"blob"	0	0	1	2
4375	817	"res_0"	"blob"	0	0	0	0
4376	817	"arg_1"	"wrd"	64	0	1	1
4377	817	"arg_2"	"blob"	0	0	1	2
4378	818	"res_0"	"blob"	0	0	0	0
4379	818	"arg_1"	"decimal"	2	0	1	1
4380	818	"arg_2"	"blob"	0	0	1	2
4381	819	"res_0"	"blob"	0	0	0	0
4382	819	"arg_1"	"decimal"	4	0	1	1
4383	819	"arg_2"	"blob"	0	0	1	2
4384	820	"res_0"	"blob"	0	0	0	0
4385	820	"arg_1"	"decimal"	9	0	1	1
4386	820	"arg_2"	"blob"	0	0	1	2
4387	821	"res_0"	"blob"	0	0	0	0
4388	821	"arg_1"	"decimal"	19	0	1	1
4389	821	"arg_2"	"blob"	0	0	1	2
4390	822	"res_0"	"blob"	0	0	0	0
4391	822	"arg_1"	"real"	24	0	1	1
4392	822	"arg_2"	"blob"	0	0	1	2
4393	823	"res_0"	"blob"	0	0	0	0
4394	823	"arg_1"	"double"	53	0	1	1
4395	823	"arg_2"	"blob"	0	0	1	2
4396	824	"res_0"	"blob"	0	0	0	0
4397	824	"arg_1"	"month_interval"	32	0	1	1
4398	824	"arg_2"	"blob"	0	0	1	2
4399	825	"res_0"	"blob"	0	0	0	0
4400	825	"arg_1"	"sec_interval"	13	0	1	1
4401	825	"arg_2"	"blob"	0	0	1	2
4402	826	"res_0"	"blob"	0	0	0	0
4403	826	"arg_1"	"time"	7	0	1	1
4404	826	"arg_2"	"blob"	0	0	1	2
4405	827	"res_0"	"blob"	0	0	0	0
4406	827	"arg_1"	"timetz"	7	0	1	1
4407	827	"arg_2"	"blob"	0	0	1	2
4408	828	"res_0"	"blob"	0	0	0	0
4409	828	"arg_1"	"date"	0	0	1	1
4410	828	"arg_2"	"blob"	0	0	1	2
4411	829	"res_0"	"blob"	0	0	0	0
4412	829	"arg_1"	"timestamp"	7	0	1	1
4413	829	"arg_2"	"blob"	0	0	1	2
4414	830	"res_0"	"blob"	0	0	0	0
4415	830	"arg_1"	"timestamptz"	7	0	1	1
4416	830	"arg_2"	"blob"	0	0	1	2
4417	831	"res_0"	"blob"	0	0	0	0
4418	831	"arg_1"	"blob"	0	0	1	1
4419	831	"arg_2"	"blob"	0	0	1	2
4420	832	"res_0"	"real"	24	0	0	0
4421	832	"arg_1"	"real"	24	0	1	1
4422	832	"arg_2"	"real"	24	0	1	2
4423	833	"res_0"	"real"	24	0	0	0
4424	833	"arg_1"	"real"	24	0	1	1
4425	834	"res_0"	"real"	24	0	0	0
4426	834	"arg_1"	"real"	24	0	1	1
4427	835	"res_0"	"real"	24	0	0	0
4428	835	"arg_1"	"real"	24	0	1	1
4429	836	"res_0"	"real"	24	0	0	0
4430	836	"arg_1"	"real"	24	0	1	1
4431	837	"res_0"	"real"	24	0	0	0
4432	837	"arg_1"	"real"	24	0	1	1
4433	838	"res_0"	"real"	24	0	0	0
4434	838	"arg_1"	"real"	24	0	1	1
4435	839	"res_0"	"real"	24	0	0	0
4436	839	"arg_1"	"real"	24	0	1	1
4437	840	"res_0"	"real"	24	0	0	0
4438	840	"arg_1"	"real"	24	0	1	1
4439	841	"res_0"	"real"	24	0	0	0
4440	841	"arg_1"	"real"	24	0	1	1
4441	842	"res_0"	"real"	24	0	0	0
4442	842	"arg_1"	"real"	24	0	1	1
4443	842	"arg_2"	"real"	24	0	1	2
4444	843	"res_0"	"real"	24	0	0	0
4445	843	"arg_1"	"real"	24	0	1	1
4446	844	"res_0"	"real"	24	0	0	0
4447	844	"arg_1"	"real"	24	0	1	1
4448	845	"res_0"	"real"	24	0	0	0
4449	845	"arg_1"	"real"	24	0	1	1
4450	846	"res_0"	"real"	24	0	0	0
4451	846	"arg_1"	"real"	24	0	1	1
4452	847	"res_0"	"real"	24	0	0	0
4453	847	"arg_1"	"real"	24	0	1	1
4454	848	"res_0"	"real"	24	0	0	0
4455	848	"arg_1"	"real"	24	0	1	1
4456	849	"res_0"	"real"	24	0	0	0
4457	849	"arg_1"	"real"	24	0	1	1
4458	850	"res_0"	"real"	24	0	0	0
4459	850	"arg_1"	"real"	24	0	1	1
4460	851	"res_0"	"double"	53	0	0	0
4461	851	"arg_1"	"double"	53	0	1	1
4462	851	"arg_2"	"double"	53	0	1	2
4463	852	"res_0"	"double"	53	0	0	0
4464	852	"arg_1"	"double"	53	0	1	1
4465	853	"res_0"	"double"	53	0	0	0
4466	853	"arg_1"	"double"	53	0	1	1
4467	854	"res_0"	"double"	53	0	0	0
4468	854	"arg_1"	"double"	53	0	1	1
4469	855	"res_0"	"double"	53	0	0	0
4470	855	"arg_1"	"double"	53	0	1	1
4471	856	"res_0"	"double"	53	0	0	0
4472	856	"arg_1"	"double"	53	0	1	1
4473	857	"res_0"	"double"	53	0	0	0
4474	857	"arg_1"	"double"	53	0	1	1
4475	858	"res_0"	"double"	53	0	0	0
4476	858	"arg_1"	"double"	53	0	1	1
4477	859	"res_0"	"double"	53	0	0	0
4478	859	"arg_1"	"double"	53	0	1	1
4479	860	"res_0"	"double"	53	0	0	0
4480	860	"arg_1"	"double"	53	0	1	1
4481	861	"res_0"	"double"	53	0	0	0
4482	861	"arg_1"	"double"	53	0	1	1
4483	861	"arg_2"	"double"	53	0	1	2
4484	862	"res_0"	"double"	53	0	0	0
4485	862	"arg_1"	"double"	53	0	1	1
4486	863	"res_0"	"double"	53	0	0	0
4487	863	"arg_1"	"double"	53	0	1	1
4488	864	"res_0"	"double"	53	0	0	0
4489	864	"arg_1"	"double"	53	0	1	1
4490	865	"res_0"	"double"	53	0	0	0
4491	865	"arg_1"	"double"	53	0	1	1
4492	866	"res_0"	"double"	53	0	0	0
4493	866	"arg_1"	"double"	53	0	1	1
4494	867	"res_0"	"double"	53	0	0	0
4495	867	"arg_1"	"double"	53	0	1	1
4496	868	"res_0"	"double"	53	0	0	0
4497	868	"arg_1"	"double"	53	0	1	1
4498	869	"res_0"	"double"	53	0	0	0
4499	869	"arg_1"	"double"	53	0	1	1
4500	870	"res_0"	"double"	53	0	0	0
4501	871	"res_0"	"int"	32	0	0	0
4502	872	"res_0"	"int"	32	0	0	0
4503	872	"arg_1"	"int"	32	0	1	1
4504	873	"res_0"	"date"	0	0	0	0
4505	874	"res_0"	"date"	0	0	0	0
4506	875	"res_0"	"timetz"	7	0	0	0
4507	876	"res_0"	"timetz"	7	0	0	0
4508	877	"res_0"	"timestamptz"	7	0	0	0
4509	878	"res_0"	"time"	7	0	0	0
4510	879	"res_0"	"timestamp"	7	0	0	0
4511	880	"res_0"	"month_interval"	32	0	0	0
4512	880	"arg_1"	"date"	0	0	1	1
4513	880	"arg_2"	"date"	0	0	1	2
4514	881	"res_0"	"sec_interval"	13	0	0	0
4515	881	"arg_1"	"timetz"	7	0	1	1
4516	881	"arg_2"	"timetz"	7	0	1	2
4517	882	"res_0"	"sec_interval"	13	0	0	0
4518	882	"arg_1"	"time"	7	0	1	1
4519	882	"arg_2"	"time"	7	0	1	2
4520	883	"res_0"	"sec_interval"	13	0	0	0
4521	883	"arg_1"	"timestamptz"	7	0	1	1
4522	883	"arg_2"	"timestamptz"	7	0	1	2
4523	884	"res_0"	"sec_interval"	13	0	0	0
4524	884	"arg_1"	"timestamp"	7	0	1	1
4525	884	"arg_2"	"timestamp"	7	0	1	2
4526	885	"res_0"	"date"	0	0	0	0
4527	885	"arg_1"	"date"	0	0	1	1
4528	885	"arg_2"	"sec_interval"	13	0	1	2
4529	886	"res_0"	"date"	0	0	0	0
4530	886	"arg_1"	"date"	0	0	1	1
4531	886	"arg_2"	"month_interval"	32	0	1	2
4532	887	"res_0"	"time"	7	0	0	0
4533	887	"arg_1"	"time"	7	0	1	1
4534	887	"arg_2"	"sec_interval"	13	0	1	2
4535	888	"res_0"	"timetz"	7	0	0	0
4536	888	"arg_1"	"timetz"	7	0	1	1
4537	888	"arg_2"	"sec_interval"	13	0	1	2
4538	889	"res_0"	"timestamp"	7	0	0	0
4539	889	"arg_1"	"timestamp"	7	0	1	1
4540	889	"arg_2"	"sec_interval"	13	0	1	2
4541	890	"res_0"	"timestamp"	7	0	0	0
4542	890	"arg_1"	"timestamp"	7	0	1	1
4543	890	"arg_2"	"month_interval"	32	0	1	2
4544	891	"res_0"	"timestamptz"	7	0	0	0
4545	891	"arg_1"	"timestamptz"	7	0	1	1
4546	891	"arg_2"	"sec_interval"	13	0	1	2
4547	892	"res_0"	"timestamptz"	7	0	0	0
4548	892	"arg_1"	"timestamptz"	7	0	1	1
4549	892	"arg_2"	"month_interval"	32	0	1	2
4550	893	"res_0"	"date"	0	0	0	0
4551	893	"arg_1"	"date"	0	0	1	1
4552	893	"arg_2"	"sec_interval"	13	0	1	2
4553	894	"res_0"	"date"	0	0	0	0
4554	894	"arg_1"	"date"	0	0	1	1
4555	894	"arg_2"	"month_interval"	32	0	1	2
4556	895	"res_0"	"timestamp"	7	0	0	0
4557	895	"arg_1"	"timestamp"	7	0	1	1
4558	895	"arg_2"	"sec_interval"	13	0	1	2
4559	896	"res_0"	"timestamp"	7	0	0	0
4560	896	"arg_1"	"timestamp"	7	0	1	1
4561	896	"arg_2"	"month_interval"	32	0	1	2
4562	897	"res_0"	"timestamptz"	7	0	0	0
4563	897	"arg_1"	"timestamptz"	7	0	1	1
4564	897	"arg_2"	"sec_interval"	13	0	1	2
4565	898	"res_0"	"timestamptz"	7	0	0	0
4566	898	"arg_1"	"timestamptz"	7	0	1	1
4567	898	"arg_2"	"month_interval"	32	0	1	2
4568	899	"res_0"	"time"	7	0	0	0
4569	899	"arg_1"	"time"	7	0	1	1
4570	899	"arg_2"	"sec_interval"	13	0	1	2
4571	900	"res_0"	"timetz"	7	0	0	0
4572	900	"arg_1"	"timetz"	7	0	1	1
4573	900	"arg_2"	"sec_interval"	13	0	1	2
4574	901	"res_0"	"sec_interval"	13	0	0	0
4575	902	"res_0"	"int"	32	0	0	0
4576	902	"arg_1"	"date"	0	0	1	1
4577	903	"res_0"	"int"	32	0	0	0
4578	903	"arg_1"	"date"	0	0	1	1
4579	904	"res_0"	"int"	32	0	0	0
4580	904	"arg_1"	"date"	0	0	1	1
4581	905	"res_0"	"int"	32	0	0	0
4582	905	"arg_1"	"time"	7	0	1	1
4583	906	"res_0"	"int"	32	0	0	0
4584	906	"arg_1"	"time"	7	0	1	1
4585	907	"res_0"	"decimal"	9	3	0	0
4586	907	"arg_1"	"time"	7	0	1	1
4587	908	"res_0"	"int"	32	0	0	0
4588	908	"arg_1"	"timetz"	7	0	1	1
4589	909	"res_0"	"int"	32	0	0	0
4590	909	"arg_1"	"timetz"	7	0	1	1
4591	910	"res_0"	"decimal"	9	3	0	0
4592	910	"arg_1"	"timetz"	7	0	1	1
4593	911	"res_0"	"int"	32	0	0	0
4594	911	"arg_1"	"timestamp"	7	0	1	1
4595	912	"res_0"	"int"	32	0	0	0
4596	912	"arg_1"	"timestamp"	7	0	1	1
4597	913	"res_0"	"int"	32	0	0	0
4598	913	"arg_1"	"timestamp"	7	0	1	1
4599	914	"res_0"	"int"	32	0	0	0
4600	914	"arg_1"	"timestamp"	7	0	1	1
4601	915	"res_0"	"int"	32	0	0	0
4602	915	"arg_1"	"timestamp"	7	0	1	1
4603	916	"res_0"	"decimal"	9	3	0	0
4604	916	"arg_1"	"timestamp"	7	0	1	1
4605	917	"res_0"	"int"	32	0	0	0
4606	917	"arg_1"	"timestamptz"	7	0	1	1
4607	918	"res_0"	"int"	32	0	0	0
4608	918	"arg_1"	"timestamptz"	7	0	1	1
4609	919	"res_0"	"int"	32	0	0	0
4610	919	"arg_1"	"timestamptz"	7	0	1	1
4611	920	"res_0"	"int"	32	0	0	0
4612	920	"arg_1"	"timestamptz"	7	0	1	1
4613	921	"res_0"	"int"	32	0	0	0
4614	921	"arg_1"	"timestamptz"	7	0	1	1
4615	922	"res_0"	"decimal"	9	3	0	0
4616	922	"arg_1"	"timestamptz"	7	0	1	1
4617	923	"res_0"	"int"	32	0	0	0
4618	923	"arg_1"	"month_interval"	32	0	1	1
4619	924	"res_0"	"int"	32	0	0	0
4620	924	"arg_1"	"month_interval"	32	0	1	1
4621	925	"res_0"	"bigint"	64	0	0	0
4622	925	"arg_1"	"sec_interval"	13	0	1	1
4623	926	"res_0"	"int"	32	0	0	0
4624	926	"arg_1"	"sec_interval"	13	0	1	1
4625	927	"res_0"	"int"	32	0	0	0
4626	927	"arg_1"	"sec_interval"	13	0	1	1
4627	928	"res_0"	"int"	32	0	0	0
4628	928	"arg_1"	"sec_interval"	13	0	1	1
4629	929	"res_0"	"int"	32	0	0	0
4630	929	"arg_1"	"date"	0	0	1	1
4631	930	"res_0"	"int"	32	0	0	0
4632	930	"arg_1"	"date"	0	0	1	1
4633	931	"res_0"	"int"	32	0	0	0
4634	931	"arg_1"	"date"	0	0	1	1
4635	932	"res_0"	"int"	32	0	0	0
4636	932	"arg_1"	"date"	0	0	1	1
4637	933	"res_0"	"int"	32	0	0	0
4638	933	"arg_1"	"date"	0	0	1	1
4639	934	"res_0"	"bigint"	64	0	0	0
4640	934	"arg_1"	"varchar"	0	0	1	1
4641	934	"arg_2"	"varchar"	0	0	1	2
4642	935	"res_0"	"bigint"	64	0	0	0
4643	935	"arg_1"	"varchar"	0	0	1	1
4644	935	"arg_2"	"varchar"	0	0	1	2
4645	936	"res_0"	"bigint"	64	0	0	0
4646	936	"arg_1"	"varchar"	0	0	1	1
4647	936	"arg_2"	"varchar"	0	0	1	2
4648	936	"arg_3"	"bigint"	64	0	1	3
4649	937	"res_0"	"tinyint"	8	0	0	0
4650	937	"arg_1"	"char"	0	0	1	1
4651	937	"arg_2"	"boolean"	1	0	1	2
4652	938	"res_0"	"smallint"	16	0	0	0
4653	938	"arg_1"	"char"	0	0	1	1
4654	938	"arg_2"	"boolean"	1	0	1	2
4655	939	"res_0"	"int"	32	0	0	0
4656	939	"arg_1"	"char"	0	0	1	1
4657	939	"arg_2"	"boolean"	1	0	1	2
4658	940	"res_0"	"char"	0	0	0	0
4659	940	"arg_1"	"char"	0	0	1	1
4660	941	"res_0"	"int"	32	0	0	0
4661	941	"arg_1"	"char"	0	0	1	1
4662	941	"arg_2"	"char"	0	0	1	2
4663	942	"res_0"	"int"	32	0	0	0
4664	942	"arg_1"	"char"	0	0	1	1
4665	942	"arg_2"	"char"	0	0	1	2
4666	942	"arg_3"	"int"	32	0	1	3
4667	943	"res_0"	"char"	0	0	0	0
4668	943	"arg_1"	"char"	0	0	1	1
4669	943	"arg_2"	"char"	0	0	1	2
4670	943	"arg_3"	"int"	32	0	1	3
4671	944	"res_0"	"char"	0	0	0	0
4672	944	"arg_1"	"char"	0	0	1	1
4673	944	"arg_2"	"int"	32	0	1	2
4674	945	"res_0"	"char"	0	0	0	0
4675	945	"arg_1"	"char"	0	0	1	1
4676	945	"arg_2"	"int"	32	0	1	2
4677	945	"arg_3"	"int"	32	0	1	3
4678	946	"res_0"	"boolean"	1	0	0	0
4679	946	"arg_1"	"char"	0	0	1	1
4680	946	"arg_2"	"char"	0	0	1	2
4681	947	"res_0"	"boolean"	1	0	0	0
4682	947	"arg_1"	"char"	0	0	1	1
4683	947	"arg_2"	"char"	0	0	1	2
4684	947	"arg_3"	"char"	0	0	1	3
4685	948	"res_0"	"boolean"	1	0	0	0
4686	948	"arg_1"	"char"	0	0	1	1
4687	948	"arg_2"	"char"	0	0	1	2
4688	949	"res_0"	"boolean"	1	0	0	0
4689	949	"arg_1"	"char"	0	0	1	1
4690	949	"arg_2"	"char"	0	0	1	2
4691	949	"arg_3"	"char"	0	0	1	3
4692	950	"res_0"	"boolean"	1	0	0	0
4693	950	"arg_1"	"char"	0	0	1	1
4694	950	"arg_2"	"char"	0	0	1	2
4695	951	"res_0"	"boolean"	1	0	0	0
4696	951	"arg_1"	"char"	0	0	1	1
4697	951	"arg_2"	"char"	0	0	1	2
4698	951	"arg_3"	"char"	0	0	1	3
4699	952	"res_0"	"boolean"	1	0	0	0
4700	952	"arg_1"	"char"	0	0	1	1
4701	952	"arg_2"	"char"	0	0	1	2
4702	953	"res_0"	"boolean"	1	0	0	0
4703	953	"arg_1"	"char"	0	0	1	1
4704	953	"arg_2"	"char"	0	0	1	2
4705	953	"arg_3"	"char"	0	0	1	3
4706	954	"res_0"	"int"	32	0	0	0
4707	954	"arg_1"	"char"	0	0	1	1
4708	954	"arg_2"	"char"	0	0	1	2
4709	955	"res_0"	"char"	0	0	0	0
4710	955	"arg_1"	"char"	0	0	1	1
4711	955	"arg_2"	"int"	32	0	1	2
4712	956	"res_0"	"char"	0	0	0	0
4713	956	"arg_1"	"char"	0	0	1	1
4714	956	"arg_2"	"char"	0	0	1	2
4715	957	"res_0"	"int"	32	0	0	0
4716	957	"arg_1"	"char"	0	0	1	1
4717	958	"res_0"	"char"	0	0	0	0
4718	958	"arg_1"	"int"	32	0	1	1
4719	959	"res_0"	"int"	32	0	0	0
4720	959	"arg_1"	"char"	0	0	1	1
4721	960	"res_0"	"char"	0	0	0	0
4722	960	"arg_1"	"char"	0	0	1	1
4723	960	"arg_2"	"int"	32	0	1	2
4724	961	"res_0"	"char"	0	0	0	0
4725	961	"arg_1"	"char"	0	0	1	1
4726	961	"arg_2"	"int"	32	0	1	2
4727	962	"res_0"	"char"	0	0	0	0
4728	962	"arg_1"	"char"	0	0	1	1
4729	963	"res_0"	"char"	0	0	0	0
4730	963	"arg_1"	"char"	0	0	1	1
4731	964	"res_0"	"char"	0	0	0	0
4732	964	"arg_1"	"char"	0	0	1	1
4733	965	"res_0"	"char"	0	0	0	0
4734	965	"arg_1"	"char"	0	0	1	1
4735	966	"res_0"	"char"	0	0	0	0
4736	966	"arg_1"	"char"	0	0	1	1
4737	967	"res_0"	"char"	0	0	0	0
4738	967	"arg_1"	"char"	0	0	1	1
4739	967	"arg_2"	"char"	0	0	1	2
4740	968	"res_0"	"char"	0	0	0	0
4741	968	"arg_1"	"char"	0	0	1	1
4742	969	"res_0"	"char"	0	0	0	0
4743	969	"arg_1"	"char"	0	0	1	1
4744	969	"arg_2"	"char"	0	0	1	2
4745	970	"res_0"	"char"	0	0	0	0
4746	970	"arg_1"	"char"	0	0	1	1
4747	971	"res_0"	"char"	0	0	0	0
4748	971	"arg_1"	"char"	0	0	1	1
4749	971	"arg_2"	"char"	0	0	1	2
4750	972	"res_0"	"char"	0	0	0	0
4751	972	"arg_1"	"char"	0	0	1	1
4752	972	"arg_2"	"int"	32	0	1	2
4753	973	"res_0"	"char"	0	0	0	0
4754	973	"arg_1"	"char"	0	0	1	1
4755	973	"arg_2"	"int"	32	0	1	2
4756	973	"arg_3"	"char"	0	0	1	3
4757	974	"res_0"	"char"	0	0	0	0
4758	974	"arg_1"	"char"	0	0	1	1
4759	974	"arg_2"	"int"	32	0	1	2
4760	975	"res_0"	"char"	0	0	0	0
4761	975	"arg_1"	"char"	0	0	1	1
4762	975	"arg_2"	"int"	32	0	1	2
4763	975	"arg_3"	"char"	0	0	1	3
4764	976	"res_0"	"char"	0	0	0	0
4765	976	"arg_1"	"char"	0	0	1	1
4766	976	"arg_2"	"int"	32	0	1	2
4767	976	"arg_3"	"int"	32	0	1	3
4768	976	"arg_4"	"char"	0	0	1	4
4769	977	"res_0"	"char"	0	0	0	0
4770	977	"arg_1"	"char"	0	0	1	1
4771	977	"arg_2"	"char"	0	0	1	2
4772	977	"arg_3"	"char"	0	0	1	3
4773	978	"res_0"	"char"	0	0	0	0
4774	978	"arg_1"	"char"	0	0	1	1
4775	978	"arg_2"	"int"	32	0	1	2
4776	979	"res_0"	"char"	0	0	0	0
4777	979	"arg_1"	"int"	32	0	1	1
4778	980	"res_0"	"int"	32	0	0	0
4779	980	"arg_1"	"char"	0	0	1	1
4780	981	"res_0"	"int"	32	0	0	0
4781	981	"arg_1"	"char"	0	0	1	1
4782	982	"res_0"	"int"	32	0	0	0
4783	982	"arg_1"	"char"	0	0	1	1
4784	983	"res_0"	"char"	0	0	0	0
4785	983	"arg_1"	"char"	0	0	1	1
4786	984	"res_0"	"int"	32	0	0	0
4787	984	"arg_1"	"char"	0	0	1	1
4788	984	"arg_2"	"char"	0	0	1	2
4789	985	"res_0"	"int"	32	0	0	0
4790	985	"arg_1"	"char"	0	0	1	1
4791	985	"arg_2"	"char"	0	0	1	2
4792	986	"res_0"	"int"	32	0	0	0
4793	986	"arg_1"	"char"	0	0	1	1
4794	986	"arg_2"	"char"	0	0	1	2
4795	987	"res_0"	"double"	53	0	0	0
4796	987	"arg_1"	"char"	0	0	1	1
4797	987	"arg_2"	"char"	0	0	1	2
4798	988	"res_0"	"char"	0	0	0	0
4799	988	"arg_1"	"char"	0	0	1	1
4800	989	"res_0"	"int"	32	0	0	0
4801	989	"arg_1"	"char"	0	0	1	1
4802	989	"arg_2"	"char"	0	0	1	2
4803	990	"res_0"	"int"	32	0	0	0
4804	990	"arg_1"	"char"	0	0	1	1
4805	990	"arg_2"	"char"	0	0	1	2
4806	990	"arg_3"	"int"	32	0	1	3
4807	990	"arg_4"	"int"	32	0	1	4
4808	990	"arg_5"	"int"	32	0	1	5
4809	991	"res_0"	"tinyint"	8	0	0	0
4810	991	"arg_1"	"varchar"	0	0	1	1
4811	991	"arg_2"	"boolean"	1	0	1	2
4812	992	"res_0"	"smallint"	16	0	0	0
4813	992	"arg_1"	"varchar"	0	0	1	1
4814	992	"arg_2"	"boolean"	1	0	1	2
4815	993	"res_0"	"int"	32	0	0	0
4816	993	"arg_1"	"varchar"	0	0	1	1
4817	993	"arg_2"	"boolean"	1	0	1	2
4818	994	"res_0"	"varchar"	0	0	0	0
4819	994	"arg_1"	"varchar"	0	0	1	1
4820	995	"res_0"	"int"	32	0	0	0
4821	995	"arg_1"	"varchar"	0	0	1	1
4822	995	"arg_2"	"varchar"	0	0	1	2
4823	996	"res_0"	"int"	32	0	0	0
4824	996	"arg_1"	"varchar"	0	0	1	1
4825	996	"arg_2"	"varchar"	0	0	1	2
4826	996	"arg_3"	"int"	32	0	1	3
4827	997	"res_0"	"varchar"	0	0	0	0
4828	997	"arg_1"	"varchar"	0	0	1	1
4829	997	"arg_2"	"varchar"	0	0	1	2
4830	997	"arg_3"	"int"	32	0	1	3
4831	998	"res_0"	"varchar"	0	0	0	0
4832	998	"arg_1"	"varchar"	0	0	1	1
4833	998	"arg_2"	"int"	32	0	1	2
4834	999	"res_0"	"varchar"	0	0	0	0
4835	999	"arg_1"	"varchar"	0	0	1	1
4836	999	"arg_2"	"int"	32	0	1	2
4837	999	"arg_3"	"int"	32	0	1	3
4838	1000	"res_0"	"boolean"	1	0	0	0
4839	1000	"arg_1"	"varchar"	0	0	1	1
4840	1000	"arg_2"	"varchar"	0	0	1	2
4841	1001	"res_0"	"boolean"	1	0	0	0
4842	1001	"arg_1"	"varchar"	0	0	1	1
4843	1001	"arg_2"	"varchar"	0	0	1	2
4844	1001	"arg_3"	"varchar"	0	0	1	3
4845	1002	"res_0"	"boolean"	1	0	0	0
4846	1002	"arg_1"	"varchar"	0	0	1	1
4847	1002	"arg_2"	"varchar"	0	0	1	2
4848	1003	"res_0"	"boolean"	1	0	0	0
4849	1003	"arg_1"	"varchar"	0	0	1	1
4850	1003	"arg_2"	"varchar"	0	0	1	2
4851	1003	"arg_3"	"varchar"	0	0	1	3
4852	1004	"res_0"	"boolean"	1	0	0	0
4853	1004	"arg_1"	"varchar"	0	0	1	1
4854	1004	"arg_2"	"varchar"	0	0	1	2
4855	1005	"res_0"	"boolean"	1	0	0	0
4856	1005	"arg_1"	"varchar"	0	0	1	1
4857	1005	"arg_2"	"varchar"	0	0	1	2
4858	1005	"arg_3"	"varchar"	0	0	1	3
4859	1006	"res_0"	"boolean"	1	0	0	0
4860	1006	"arg_1"	"varchar"	0	0	1	1
4861	1006	"arg_2"	"varchar"	0	0	1	2
4862	1007	"res_0"	"boolean"	1	0	0	0
4863	1007	"arg_1"	"varchar"	0	0	1	1
4864	1007	"arg_2"	"varchar"	0	0	1	2
4865	1007	"arg_3"	"varchar"	0	0	1	3
4866	1008	"res_0"	"int"	32	0	0	0
4867	1008	"arg_1"	"varchar"	0	0	1	1
4868	1008	"arg_2"	"varchar"	0	0	1	2
4869	1009	"res_0"	"varchar"	0	0	0	0
4870	1009	"arg_1"	"varchar"	0	0	1	1
4871	1009	"arg_2"	"int"	32	0	1	2
4872	1010	"res_0"	"varchar"	0	0	0	0
4873	1010	"arg_1"	"varchar"	0	0	1	1
4874	1010	"arg_2"	"varchar"	0	0	1	2
4875	1011	"res_0"	"int"	32	0	0	0
4876	1011	"arg_1"	"varchar"	0	0	1	1
4877	1012	"res_0"	"varchar"	0	0	0	0
4878	1012	"arg_1"	"int"	32	0	1	1
4879	1013	"res_0"	"int"	32	0	0	0
4880	1013	"arg_1"	"varchar"	0	0	1	1
4881	1014	"res_0"	"varchar"	0	0	0	0
4882	1014	"arg_1"	"varchar"	0	0	1	1
4883	1014	"arg_2"	"int"	32	0	1	2
4884	1015	"res_0"	"varchar"	0	0	0	0
4885	1015	"arg_1"	"varchar"	0	0	1	1
4886	1015	"arg_2"	"int"	32	0	1	2
4887	1016	"res_0"	"varchar"	0	0	0	0
4888	1016	"arg_1"	"varchar"	0	0	1	1
4889	1017	"res_0"	"varchar"	0	0	0	0
4890	1017	"arg_1"	"varchar"	0	0	1	1
4891	1018	"res_0"	"varchar"	0	0	0	0
4892	1018	"arg_1"	"varchar"	0	0	1	1
4893	1019	"res_0"	"varchar"	0	0	0	0
4894	1019	"arg_1"	"varchar"	0	0	1	1
4895	1020	"res_0"	"varchar"	0	0	0	0
4896	1020	"arg_1"	"varchar"	0	0	1	1
4897	1021	"res_0"	"varchar"	0	0	0	0
4898	1021	"arg_1"	"varchar"	0	0	1	1
4899	1021	"arg_2"	"varchar"	0	0	1	2
4900	1022	"res_0"	"varchar"	0	0	0	0
4901	1022	"arg_1"	"varchar"	0	0	1	1
4902	1023	"res_0"	"varchar"	0	0	0	0
4903	1023	"arg_1"	"varchar"	0	0	1	1
4904	1023	"arg_2"	"varchar"	0	0	1	2
4905	1024	"res_0"	"varchar"	0	0	0	0
4906	1024	"arg_1"	"varchar"	0	0	1	1
4907	1025	"res_0"	"varchar"	0	0	0	0
4908	1025	"arg_1"	"varchar"	0	0	1	1
4909	1025	"arg_2"	"varchar"	0	0	1	2
4910	1026	"res_0"	"varchar"	0	0	0	0
4911	1026	"arg_1"	"varchar"	0	0	1	1
4912	1026	"arg_2"	"int"	32	0	1	2
4913	1027	"res_0"	"varchar"	0	0	0	0
4914	1027	"arg_1"	"varchar"	0	0	1	1
4915	1027	"arg_2"	"int"	32	0	1	2
4916	1027	"arg_3"	"varchar"	0	0	1	3
4917	1028	"res_0"	"varchar"	0	0	0	0
4918	1028	"arg_1"	"varchar"	0	0	1	1
4919	1028	"arg_2"	"int"	32	0	1	2
4920	1029	"res_0"	"varchar"	0	0	0	0
4921	1029	"arg_1"	"varchar"	0	0	1	1
4922	1029	"arg_2"	"int"	32	0	1	2
4923	1029	"arg_3"	"varchar"	0	0	1	3
4924	1030	"res_0"	"varchar"	0	0	0	0
4925	1030	"arg_1"	"varchar"	0	0	1	1
4926	1030	"arg_2"	"int"	32	0	1	2
4927	1030	"arg_3"	"int"	32	0	1	3
4928	1030	"arg_4"	"varchar"	0	0	1	4
4929	1031	"res_0"	"varchar"	0	0	0	0
4930	1031	"arg_1"	"varchar"	0	0	1	1
4931	1031	"arg_2"	"varchar"	0	0	1	2
4932	1031	"arg_3"	"varchar"	0	0	1	3
4933	1032	"res_0"	"varchar"	0	0	0	0
4934	1032	"arg_1"	"varchar"	0	0	1	1
4935	1032	"arg_2"	"int"	32	0	1	2
4936	1033	"res_0"	"varchar"	0	0	0	0
4937	1033	"arg_1"	"int"	32	0	1	1
4938	1034	"res_0"	"int"	32	0	0	0
4939	1034	"arg_1"	"varchar"	0	0	1	1
4940	1035	"res_0"	"int"	32	0	0	0
4941	1035	"arg_1"	"varchar"	0	0	1	1
4942	1036	"res_0"	"int"	32	0	0	0
4943	1036	"arg_1"	"varchar"	0	0	1	1
4944	1037	"res_0"	"varchar"	0	0	0	0
4945	1037	"arg_1"	"varchar"	0	0	1	1
4946	1038	"res_0"	"int"	32	0	0	0
4947	1038	"arg_1"	"varchar"	0	0	1	1
4948	1038	"arg_2"	"varchar"	0	0	1	2
4949	1039	"res_0"	"int"	32	0	0	0
4950	1039	"arg_1"	"varchar"	0	0	1	1
4951	1039	"arg_2"	"varchar"	0	0	1	2
4952	1040	"res_0"	"int"	32	0	0	0
4953	1040	"arg_1"	"varchar"	0	0	1	1
4954	1040	"arg_2"	"varchar"	0	0	1	2
4955	1041	"res_0"	"double"	53	0	0	0
4956	1041	"arg_1"	"varchar"	0	0	1	1
4957	1041	"arg_2"	"varchar"	0	0	1	2
4958	1042	"res_0"	"varchar"	0	0	0	0
4959	1042	"arg_1"	"varchar"	0	0	1	1
4960	1043	"res_0"	"int"	32	0	0	0
4961	1043	"arg_1"	"varchar"	0	0	1	1
4962	1043	"arg_2"	"varchar"	0	0	1	2
4963	1044	"res_0"	"int"	32	0	0	0
4964	1044	"arg_1"	"varchar"	0	0	1	1
4965	1044	"arg_2"	"varchar"	0	0	1	2
4966	1044	"arg_3"	"int"	32	0	1	3
4967	1044	"arg_4"	"int"	32	0	1	4
4968	1044	"arg_5"	"int"	32	0	1	5
4969	1045	"res_0"	"tinyint"	8	0	0	0
4970	1045	"arg_1"	"clob"	0	0	1	1
4971	1045	"arg_2"	"boolean"	1	0	1	2
4972	1046	"res_0"	"smallint"	16	0	0	0
4973	1046	"arg_1"	"clob"	0	0	1	1
4974	1046	"arg_2"	"boolean"	1	0	1	2
4975	1047	"res_0"	"int"	32	0	0	0
4976	1047	"arg_1"	"clob"	0	0	1	1
4977	1047	"arg_2"	"boolean"	1	0	1	2
4978	1048	"res_0"	"clob"	0	0	0	0
4979	1048	"arg_1"	"clob"	0	0	1	1
4980	1049	"res_0"	"int"	32	0	0	0
4981	1049	"arg_1"	"clob"	0	0	1	1
4982	1049	"arg_2"	"clob"	0	0	1	2
4983	1050	"res_0"	"int"	32	0	0	0
4984	1050	"arg_1"	"clob"	0	0	1	1
4985	1050	"arg_2"	"clob"	0	0	1	2
4986	1050	"arg_3"	"int"	32	0	1	3
4987	1051	"res_0"	"clob"	0	0	0	0
4988	1051	"arg_1"	"clob"	0	0	1	1
4989	1051	"arg_2"	"clob"	0	0	1	2
4990	1051	"arg_3"	"int"	32	0	1	3
4991	1052	"res_0"	"clob"	0	0	0	0
4992	1052	"arg_1"	"clob"	0	0	1	1
4993	1052	"arg_2"	"int"	32	0	1	2
4994	1053	"res_0"	"clob"	0	0	0	0
4995	1053	"arg_1"	"clob"	0	0	1	1
4996	1053	"arg_2"	"int"	32	0	1	2
4997	1053	"arg_3"	"int"	32	0	1	3
4998	1054	"res_0"	"boolean"	1	0	0	0
4999	1054	"arg_1"	"clob"	0	0	1	1
5000	1054	"arg_2"	"clob"	0	0	1	2
5001	1055	"res_0"	"boolean"	1	0	0	0
5002	1055	"arg_1"	"clob"	0	0	1	1
5003	1055	"arg_2"	"clob"	0	0	1	2
5004	1055	"arg_3"	"clob"	0	0	1	3
5005	1056	"res_0"	"boolean"	1	0	0	0
5006	1056	"arg_1"	"clob"	0	0	1	1
5007	1056	"arg_2"	"clob"	0	0	1	2
5008	1057	"res_0"	"boolean"	1	0	0	0
5009	1057	"arg_1"	"clob"	0	0	1	1
5010	1057	"arg_2"	"clob"	0	0	1	2
5011	1057	"arg_3"	"clob"	0	0	1	3
5012	1058	"res_0"	"boolean"	1	0	0	0
5013	1058	"arg_1"	"clob"	0	0	1	1
5014	1058	"arg_2"	"clob"	0	0	1	2
5015	1059	"res_0"	"boolean"	1	0	0	0
5016	1059	"arg_1"	"clob"	0	0	1	1
5017	1059	"arg_2"	"clob"	0	0	1	2
5018	1059	"arg_3"	"clob"	0	0	1	3
5019	1060	"res_0"	"boolean"	1	0	0	0
5020	1060	"arg_1"	"clob"	0	0	1	1
5021	1060	"arg_2"	"clob"	0	0	1	2
5022	1061	"res_0"	"boolean"	1	0	0	0
5023	1061	"arg_1"	"clob"	0	0	1	1
5024	1061	"arg_2"	"clob"	0	0	1	2
5025	1061	"arg_3"	"clob"	0	0	1	3
5026	1062	"res_0"	"int"	32	0	0	0
5027	1062	"arg_1"	"clob"	0	0	1	1
5028	1062	"arg_2"	"clob"	0	0	1	2
5029	1063	"res_0"	"clob"	0	0	0	0
5030	1063	"arg_1"	"clob"	0	0	1	1
5031	1063	"arg_2"	"int"	32	0	1	2
5032	1064	"res_0"	"clob"	0	0	0	0
5033	1064	"arg_1"	"clob"	0	0	1	1
5034	1064	"arg_2"	"clob"	0	0	1	2
5035	1065	"res_0"	"int"	32	0	0	0
5036	1065	"arg_1"	"clob"	0	0	1	1
5037	1066	"res_0"	"clob"	0	0	0	0
5038	1066	"arg_1"	"int"	32	0	1	1
5039	1067	"res_0"	"int"	32	0	0	0
5040	1067	"arg_1"	"clob"	0	0	1	1
5041	1068	"res_0"	"clob"	0	0	0	0
5042	1068	"arg_1"	"clob"	0	0	1	1
5043	1068	"arg_2"	"int"	32	0	1	2
5044	1069	"res_0"	"clob"	0	0	0	0
5045	1069	"arg_1"	"clob"	0	0	1	1
5046	1069	"arg_2"	"int"	32	0	1	2
5047	1070	"res_0"	"clob"	0	0	0	0
5048	1070	"arg_1"	"clob"	0	0	1	1
5049	1071	"res_0"	"clob"	0	0	0	0
5050	1071	"arg_1"	"clob"	0	0	1	1
5051	1072	"res_0"	"clob"	0	0	0	0
5052	1072	"arg_1"	"clob"	0	0	1	1
5053	1073	"res_0"	"clob"	0	0	0	0
5054	1073	"arg_1"	"clob"	0	0	1	1
5055	1074	"res_0"	"clob"	0	0	0	0
5056	1074	"arg_1"	"clob"	0	0	1	1
5057	1075	"res_0"	"clob"	0	0	0	0
5058	1075	"arg_1"	"clob"	0	0	1	1
5059	1075	"arg_2"	"clob"	0	0	1	2
5060	1076	"res_0"	"clob"	0	0	0	0
5061	1076	"arg_1"	"clob"	0	0	1	1
5062	1077	"res_0"	"clob"	0	0	0	0
5063	1077	"arg_1"	"clob"	0	0	1	1
5064	1077	"arg_2"	"clob"	0	0	1	2
5065	1078	"res_0"	"clob"	0	0	0	0
5066	1078	"arg_1"	"clob"	0	0	1	1
5067	1079	"res_0"	"clob"	0	0	0	0
5068	1079	"arg_1"	"clob"	0	0	1	1
5069	1079	"arg_2"	"clob"	0	0	1	2
5070	1080	"res_0"	"clob"	0	0	0	0
5071	1080	"arg_1"	"clob"	0	0	1	1
5072	1080	"arg_2"	"int"	32	0	1	2
5073	1081	"res_0"	"clob"	0	0	0	0
5074	1081	"arg_1"	"clob"	0	0	1	1
5075	1081	"arg_2"	"int"	32	0	1	2
5076	1081	"arg_3"	"clob"	0	0	1	3
5077	1082	"res_0"	"clob"	0	0	0	0
5078	1082	"arg_1"	"clob"	0	0	1	1
5079	1082	"arg_2"	"int"	32	0	1	2
5080	1083	"res_0"	"clob"	0	0	0	0
5081	1083	"arg_1"	"clob"	0	0	1	1
5082	1083	"arg_2"	"int"	32	0	1	2
5083	1083	"arg_3"	"clob"	0	0	1	3
5084	1084	"res_0"	"clob"	0	0	0	0
5085	1084	"arg_1"	"clob"	0	0	1	1
5086	1084	"arg_2"	"int"	32	0	1	2
5087	1084	"arg_3"	"int"	32	0	1	3
5088	1084	"arg_4"	"clob"	0	0	1	4
5089	1085	"res_0"	"clob"	0	0	0	0
5090	1085	"arg_1"	"clob"	0	0	1	1
5091	1085	"arg_2"	"clob"	0	0	1	2
5092	1085	"arg_3"	"clob"	0	0	1	3
5093	1086	"res_0"	"clob"	0	0	0	0
5094	1086	"arg_1"	"clob"	0	0	1	1
5095	1086	"arg_2"	"int"	32	0	1	2
5096	1087	"res_0"	"clob"	0	0	0	0
5097	1087	"arg_1"	"int"	32	0	1	1
5098	1088	"res_0"	"int"	32	0	0	0
5099	1088	"arg_1"	"clob"	0	0	1	1
5100	1089	"res_0"	"int"	32	0	0	0
5101	1089	"arg_1"	"clob"	0	0	1	1
5102	1090	"res_0"	"int"	32	0	0	0
5103	1090	"arg_1"	"clob"	0	0	1	1
5104	1091	"res_0"	"clob"	0	0	0	0
5105	1091	"arg_1"	"clob"	0	0	1	1
5106	1092	"res_0"	"int"	32	0	0	0
5107	1092	"arg_1"	"clob"	0	0	1	1
5108	1092	"arg_2"	"clob"	0	0	1	2
5109	1093	"res_0"	"int"	32	0	0	0
5110	1093	"arg_1"	"clob"	0	0	1	1
5111	1093	"arg_2"	"clob"	0	0	1	2
5112	1094	"res_0"	"int"	32	0	0	0
5113	1094	"arg_1"	"clob"	0	0	1	1
5114	1094	"arg_2"	"clob"	0	0	1	2
5115	1095	"res_0"	"double"	53	0	0	0
5116	1095	"arg_1"	"clob"	0	0	1	1
5117	1095	"arg_2"	"clob"	0	0	1	2
5118	1096	"res_0"	"clob"	0	0	0	0
5119	1096	"arg_1"	"clob"	0	0	1	1
5120	1097	"res_0"	"int"	32	0	0	0
5121	1097	"arg_1"	"clob"	0	0	1	1
5122	1097	"arg_2"	"clob"	0	0	1	2
5123	1098	"res_0"	"int"	32	0	0	0
5124	1098	"arg_1"	"clob"	0	0	1	1
5125	1098	"arg_2"	"clob"	0	0	1	2
5126	1098	"arg_3"	"int"	32	0	1	3
5127	1098	"arg_4"	"int"	32	0	1	4
5128	1098	"arg_5"	"int"	32	0	1	5
5129	1099	"res_0"	"table"	0	0	0	0
5130	1099	"arg_1"	"varchar"	0	0	1	1
5131	1099	"arg_2"	"varchar"	0	0	1	2
5132	1099	"arg_3"	"varchar"	0	0	1	3
5133	1099	"arg_4"	"varchar"	0	0	1	4
5134	1099	"arg_5"	"varchar"	0	0	1	5
5135	1099	"arg_6"	"varchar"	0	0	1	6
5136	1099	"arg_7"	"bigint"	64	0	1	7
5137	1099	"arg_8"	"bigint"	64	0	1	8
5138	1099	"arg_9"	"int"	32	0	1	9
5139	1100	"res_0"	"table"	0	0	0	0
5140	1100	"arg_1"	"varchar"	0	0	1	1
5141	1100	"arg_2"	"varchar"	0	0	1	2
5142	27	"res"	"boolean"	1	0	0	0
5143	27	"arg"	"oid"	63	0	1	1
5144	39	"res"	"any"	0	0	0	0
5145	39	"arg"	"any"	0	0	1	1
5146	40	"res"	"boolean"	1	0	0	0
5147	40	"arg"	"any"	0	0	1	1
5148	41	"res"	"boolean"	1	0	0	0
5149	41	"arg"	"any"	0	0	1	1
5150	46	"res"	"any"	0	0	0	0
5151	46	"arg"	"any"	0	0	1	1
5152	47	"res"	"any"	0	0	0	0
5153	47	"arg"	"any"	0	0	1	1
5154	51	"res"	"bigint"	64	0	0	0
5155	51	"arg"	"tinyint"	8	0	1	1
5156	52	"res"	"bigint"	64	0	0	0
5157	52	"arg"	"smallint"	16	0	1	1
5158	53	"res"	"bigint"	64	0	0	0
5159	53	"arg"	"int"	32	0	1	1
5160	54	"res"	"bigint"	64	0	0	0
5161	54	"arg"	"bigint"	64	0	1	1
5162	55	"res"	"wrd"	64	0	0	0
5163	55	"arg"	"wrd"	64	0	1	1
5164	56	"res"	"decimal"	19	0	0	0
5165	56	"arg"	"decimal"	2	0	1	1
5166	57	"res"	"decimal"	19	0	0	0
5167	57	"arg"	"decimal"	4	0	1	1
5168	58	"res"	"decimal"	19	0	0	0
5169	58	"arg"	"decimal"	9	0	1	1
5170	59	"res"	"decimal"	19	0	0	0
5171	59	"arg"	"decimal"	19	0	1	1
5172	60	"res"	"bigint"	64	0	0	0
5173	60	"arg"	"tinyint"	8	0	1	1
5174	61	"res"	"bigint"	64	0	0	0
5175	61	"arg"	"smallint"	16	0	1	1
5176	62	"res"	"bigint"	64	0	0	0
5177	62	"arg"	"int"	32	0	1	1
5178	63	"res"	"bigint"	64	0	0	0
5179	63	"arg"	"bigint"	64	0	1	1
5180	64	"res"	"decimal"	19	0	0	0
5181	64	"arg"	"decimal"	2	0	1	1
5182	65	"res"	"decimal"	19	0	0	0
5183	65	"arg"	"decimal"	4	0	1	1
5184	66	"res"	"decimal"	19	0	0	0
5185	66	"arg"	"decimal"	9	0	1	1
5186	67	"res"	"decimal"	19	0	0	0
5187	67	"arg"	"decimal"	19	0	1	1
5188	80	"res"	"real"	24	0	0	0
5189	80	"arg"	"real"	24	0	1	1
5190	81	"res"	"real"	24	0	0	0
5191	81	"arg"	"real"	24	0	1	1
5192	82	"res"	"double"	53	0	0	0
5193	82	"arg"	"double"	53	0	1	1
5194	83	"res"	"double"	53	0	0	0
5195	83	"arg"	"double"	53	0	1	1
5196	84	"res"	"month_interval"	32	0	0	0
5197	84	"arg"	"month_interval"	32	0	1	1
5198	85	"res"	"sec_interval"	13	0	0	0
5199	85	"arg"	"sec_interval"	13	0	1	1
5200	86	"res"	"double"	53	0	0	0
5201	86	"arg"	"double"	53	0	1	1
5202	87	"res"	"wrd"	64	0	0	0
5203	88	"res"	"wrd"	64	0	0	0
5226	5225	"name"	"varchar"	1024	0	0	0
5227	5225	"value"	"varchar"	2048	0	0	1
5229	5228	"name"	"varchar"	1024	0	0	0
5235	5234	"name"	"varchar"	2048	0	0	0
5255	5254	"val"	"clob"	0	0	1	0
5256	5254	"pat"	"clob"	0	0	1	1
5257	5254	"esc"	"clob"	0	0	1	2
5260	5259	"val"	"clob"	0	0	1	0
5261	5259	"pat"	"clob"	0	0	1	1
5262	5259	"esc"	"clob"	0	0	1	2
5265	5264	"val"	"clob"	0	0	1	0
5266	5264	"pat"	"clob"	0	0	1	1
5269	5268	"val"	"clob"	0	0	1	0
5270	5268	"pat"	"clob"	0	0	1	1
5273	5272	"result"	"double"	53	0	0	0
5274	5272	"r"	"double"	53	0	1	1
5277	5276	"result"	"double"	53	0	0	0
5278	5276	"d"	"double"	53	0	1	1
5284	5283	"result"	"clob"	0	0	0	0
5285	5283	"theurl"	"url"	0	0	1	1
5288	5287	"result"	"clob"	0	0	0	0
5289	5287	"theurl"	"url"	0	0	1	1
5292	5291	"result"	"clob"	0	0	0	0
5293	5291	"theurl"	"url"	0	0	1	1
5296	5295	"result"	"clob"	0	0	0	0
5297	5295	"theurl"	"url"	0	0	1	1
5300	5299	"result"	"clob"	0	0	0	0
5301	5299	"theurl"	"url"	0	0	1	1
5304	5303	"result"	"clob"	0	0	0	0
5305	5303	"theurl"	"url"	0	0	1	1
5308	5307	"result"	"clob"	0	0	0	0
5309	5307	"theurl"	"url"	0	0	1	1
5312	5311	"result"	"clob"	0	0	0	0
5313	5311	"theurl"	"url"	0	0	1	1
5316	5315	"result"	"clob"	0	0	0	0
5317	5315	"theurl"	"url"	0	0	1	1
5320	5319	"result"	"clob"	0	0	0	0
5321	5319	"theurl"	"url"	0	0	1	1
5324	5323	"result"	"clob"	0	0	0	0
5325	5323	"theurl"	"url"	0	0	1	1
5328	5327	"result"	"clob"	0	0	0	0
5329	5327	"theurl"	"url"	0	0	1	1
5332	5331	"result"	"clob"	0	0	0	0
5333	5331	"theurl"	"url"	0	0	1	1
5336	5335	"result"	"boolean"	1	0	0	0
5337	5335	"theurl"	"url"	0	0	1	1
5340	5339	"result"	"url"	0	0	0	0
5341	5339	"protocol"	"clob"	0	0	1	1
5342	5339	"hostname"	"clob"	0	0	1	2
5343	5339	"port"	"int"	32	0	1	3
5344	5339	"file"	"clob"	0	0	1	4
5347	5346	"result"	"url"	0	0	0	0
5348	5346	"protocol"	"clob"	0	0	1	1
5349	5346	"hostname"	"clob"	0	0	1	2
5350	5346	"file"	"clob"	0	0	1	3
5353	5352	"result"	"date"	0	0	0	0
5354	5352	"s"	"clob"	0	0	1	1
5355	5352	"format"	"clob"	0	0	1	2
5358	5357	"result"	"clob"	0	0	0	0
5359	5357	"d"	"date"	0	0	1	1
5360	5357	"format"	"clob"	0	0	1	2
5363	5362	"result"	"time"	1	0	0	0
5364	5362	"s"	"clob"	0	0	1	1
5365	5362	"format"	"clob"	0	0	1	2
5368	5367	"result"	"clob"	0	0	0	0
5369	5367	"d"	"time"	1	0	1	1
5370	5367	"format"	"clob"	0	0	1	2
5373	5372	"result"	"timestamp"	7	0	0	0
5374	5372	"s"	"clob"	0	0	1	1
5375	5372	"format"	"clob"	0	0	1	2
5378	5377	"result"	"clob"	0	0	0	0
5379	5377	"d"	"timestamp"	7	0	1	1
5380	5377	"format"	"clob"	0	0	1	2
5384	5383	"result"	"inet"	0	0	0	0
5385	5383	"p"	"inet"	0	0	1	1
5388	5387	"result"	"clob"	0	0	0	0
5389	5387	"p"	"inet"	0	0	1	1
5392	5391	"result"	"int"	32	0	0	0
5393	5391	"p"	"inet"	0	0	1	1
5396	5395	"result"	"inet"	0	0	0	0
5397	5395	"p"	"inet"	0	0	1	1
5398	5395	"mask"	"int"	32	0	1	2
5401	5400	"result"	"inet"	0	0	0	0
5402	5400	"p"	"inet"	0	0	1	1
5405	5404	"result"	"inet"	0	0	0	0
5406	5404	"p"	"inet"	0	0	1	1
5409	5408	"result"	"inet"	0	0	0	0
5410	5408	"p"	"inet"	0	0	1	1
5413	5412	"result"	"clob"	0	0	0	0
5414	5412	"p"	"inet"	0	0	1	1
5417	5416	"result"	"clob"	0	0	0	0
5418	5416	"p"	"inet"	0	0	1	1
5421	5420	"result"	"boolean"	1	0	0	0
5422	5420	"i1"	"inet"	0	0	1	1
5423	5420	"i2"	"inet"	0	0	1	2
5426	5425	"result"	"boolean"	1	0	0	0
5427	5425	"i1"	"inet"	0	0	1	1
5428	5425	"i2"	"inet"	0	0	1	2
5431	5430	"result"	"boolean"	1	0	0	0
5432	5430	"i1"	"inet"	0	0	1	1
5433	5430	"i2"	"inet"	0	0	1	2
5436	5435	"result"	"boolean"	1	0	0	0
5437	5435	"i1"	"inet"	0	0	1	1
5438	5435	"i2"	"inet"	0	0	1	2
5441	5440	"id"	"oid"	63	0	0	0
5442	5440	"owner"	"clob"	0	0	0	1
5443	5440	"defined"	"timestamp"	7	0	0	2
5444	5440	"query"	"clob"	0	0	0	3
5445	5440	"pipe"	"clob"	0	0	0	4
5446	5440	"plan"	"clob"	0	0	0	5
5447	5440	"mal"	"int"	32	0	0	6
5448	5440	"optimize"	"bigint"	64	0	0	7
5451	5450	"id"	"oid"	63	0	0	0
5452	5450	"start"	"timestamp"	7	0	0	1
5453	5450	"stop"	"timestamp"	7	0	0	2
5454	5450	"arguments"	"clob"	0	0	0	3
5455	5450	"tuples"	"wrd"	64	0	0	4
5456	5450	"run"	"bigint"	64	0	0	5
5457	5450	"ship"	"bigint"	64	0	0	6
5458	5450	"cpu"	"int"	32	0	0	7
5459	5450	"io"	"int"	32	0	0	8
5505	5504	"threshold"	"smallint"	16	0	1	0
5510	5509	"event"	"int"	32	0	0	0
5511	5509	"clk"	"varchar"	20	0	0	1
5512	5509	"pc"	"varchar"	50	0	0	2
5513	5509	"thread"	"int"	32	0	0	3
5514	5509	"ticks"	"bigint"	64	0	0	4
5515	5509	"rrsmb"	"bigint"	64	0	0	5
5516	5509	"vmmb"	"bigint"	64	0	0	6
5517	5509	"reads"	"bigint"	64	0	0	7
5518	5509	"writes"	"bigint"	64	0	0	8
5519	5509	"minflt"	"bigint"	64	0	0	9
5520	5509	"majflt"	"bigint"	64	0	0	10
5521	5509	"nvcsw"	"bigint"	64	0	0	11
5522	5509	"stmt"	"clob"	0	0	0	12
5540	5539	"result"	"timestamp"	7	0	0	0
5541	5539	"sec"	"bigint"	64	0	1	1
5544	5543	"result"	"timestamp"	7	0	0	0
5545	5543	"sec"	"int"	32	0	1	1
5548	5547	"result"	"int"	32	0	0	0
5549	5547	"ts"	"timestamp"	7	0	1	1
5552	5551	"result"	"int"	32	0	0	0
5553	5551	"ts"	"timestamptz"	7	0	1	1
5556	5555	"sys"	"clob"	0	0	1	0
5557	5555	"tab"	"clob"	0	0	1	1
5560	5559	"sys"	"clob"	0	0	1	0
5561	5559	"tab"	"clob"	0	0	1	1
5564	5563	"sys"	"clob"	0	0	1	0
5565	5563	"tab"	"clob"	0	0	1	1
5568	5567	"sch"	"varchar"	100	0	0	0
5569	5567	"usr"	"varchar"	100	0	0	1
5570	5567	"dep_type"	"varchar"	32	0	0	2
5573	5572	"sch"	"varchar"	100	0	0	0
5574	5572	"usr"	"varchar"	100	0	0	1
5575	5572	"dep_type"	"varchar"	32	0	0	2
5578	5577	"sch"	"varchar"	100	0	0	0
5579	5577	"usr"	"varchar"	100	0	0	1
5580	5577	"dep_type"	"varchar"	32	0	0	2
5583	5582	"sch"	"varchar"	100	0	0	0
5584	5582	"usr"	"varchar"	100	0	0	1
5585	5582	"dep_type"	"varchar"	32	0	0	2
5588	5587	"sch"	"varchar"	100	0	0	0
5589	5587	"usr"	"varchar"	100	0	0	1
5590	5587	"dep_type"	"varchar"	32	0	0	2
5593	5592	"sch"	"varchar"	100	0	0	0
5594	5592	"usr"	"varchar"	100	0	0	1
5595	5592	"dep_type"	"varchar"	32	0	0	2
5598	5597	"sch"	"varchar"	100	0	0	0
5599	5597	"usr"	"varchar"	100	0	0	1
5600	5597	"dep_type"	"varchar"	32	0	0	2
5603	5602	"sch"	"varchar"	100	0	0	0
5604	5602	"usr"	"varchar"	100	0	0	1
5605	5602	"dep_type"	"varchar"	32	0	0	2
5608	5607	"sch"	"varchar"	100	0	0	0
5609	5607	"usr"	"varchar"	100	0	0	1
5610	5607	"dep_type"	"varchar"	32	0	0	2
5613	5612	"sch"	"varchar"	100	0	0	0
5614	5612	"usr"	"varchar"	100	0	0	1
5615	5612	"dep_type"	"varchar"	32	0	0	2
5618	5617	"sch"	"varchar"	100	0	0	0
5619	5617	"usr"	"varchar"	100	0	0	1
5620	5617	"dep_type"	"varchar"	32	0	0	2
5623	5622	"sch"	"varchar"	100	0	0	0
5624	5622	"usr"	"varchar"	100	0	0	1
5625	5622	"dep_type"	"varchar"	32	0	0	2
5628	5627	"sch"	"varchar"	100	0	0	0
5629	5627	"usr"	"varchar"	100	0	0	1
5630	5627	"dep_type"	"varchar"	32	0	0	2
5633	5632	"sch"	"varchar"	100	0	0	0
5634	5632	"usr"	"varchar"	100	0	0	1
5635	5632	"dep_type"	"varchar"	32	0	0	2
5638	5637	"sch"	"varchar"	100	0	0	0
5639	5637	"usr"	"varchar"	100	0	0	1
5640	5637	"dep_type"	"varchar"	32	0	0	2
5643	5642	"sch"	"varchar"	100	0	0	0
5644	5642	"usr"	"varchar"	100	0	0	1
5645	5642	"dep_type"	"varchar"	32	0	0	2
5648	5647	"sch"	"varchar"	100	0	0	0
5649	5647	"usr"	"varchar"	100	0	0	1
5650	5647	"dep_type"	"varchar"	32	0	0	2
5653	5652	"result"	"clob"	0	0	0	0
5654	5652	"username"	"clob"	0	0	1	1
5657	5656	"user"	"clob"	0	0	0	0
5658	5656	"login"	"timestamp"	7	0	0	1
5659	5656	"sessiontimeout"	"bigint"	64	0	0	2
5660	5656	"lastcommand"	"timestamp"	7	0	0	3
5661	5656	"querytimeout"	"bigint"	64	0	0	4
5662	5656	"active"	"boolean"	1	0	0	5
5673	5672	"delay"	"tinyint"	8	0	1	0
5676	5675	"delay"	"tinyint"	8	0	1	0
5677	5675	"force"	"boolean"	1	0	1	1
5680	5679	"query"	"bigint"	64	0	1	0
5683	5682	"query"	"bigint"	64	0	1	0
5684	5682	"session"	"bigint"	64	0	1	1
5687	5686	"timeout"	"bigint"	64	0	1	0
5690	5689	"result"	"varchar"	32	0	0	0
5691	5689	"s1"	"varchar"	32	0	1	1
5692	5689	"st"	"int"	32	0	1	2
5693	5689	"len"	"int"	32	0	1	3
5694	5689	"s3"	"varchar"	32	0	1	4
5697	5696	"result"	"double"	53	0	0	0
5698	5696	"num"	"double"	53	0	1	1
5699	5696	"prc"	"int"	32	0	1	2
5702	5701	"result"	"double"	53	0	0	0
5703	5701	"num"	"double"	53	0	1	1
5704	5701	"prc"	"int"	32	0	1	2
5705	5701	"truncat"	"int"	32	0	1	3
5708	5707	"result"	"clob"	0	0	0	0
5709	5707	"num"	"double"	53	0	1	1
5710	5707	"prc"	"int"	32	0	1	2
5711	5707	"truncat"	"int"	32	0	1	3
5714	5713	"result"	"double"	53	0	0	0
5715	5713	"pdec"	"double"	53	0	1	1
5716	5713	"pradius"	"double"	53	0	1	2
5719	5718	"result"	"oid"	63	0	0	0
5720	5718	"x"	"int"	32	0	1	1
5721	5718	"y"	"int"	32	0	1	2
5724	5723	"result"	"int"	32	0	0	0
5725	5723	"z"	"oid"	63	0	1	1
5728	5727	"result"	"int"	32	0	0	0
5729	5727	"z"	"oid"	63	0	1	1
5732	5731	"rewrite"	"clob"	0	0	0	0
5733	5731	"count"	"int"	32	0	0	1
5736	5735	"query"	"clob"	0	0	0	0
5737	5735	"count"	"int"	32	0	0	1
5740	5739	"filename"	"clob"	0	0	1	0
5743	5742	"name"	"clob"	0	0	0	0
5744	5742	"def"	"clob"	0	0	0	1
5745	5742	"status"	"clob"	0	0	0	2
5753	5752	"name"	"clob"	0	0	0	0
5754	5752	"value"	"clob"	0	0	0	1
5761	5760	"id"	"int"	32	0	0	0
5762	5760	"name"	"clob"	0	0	0	1
5763	5760	"ttype"	"clob"	0	0	0	2
5764	5760	"count"	"bigint"	64	0	0	3
5765	5760	"refcnt"	"int"	32	0	0	4
5766	5760	"lrefcnt"	"int"	32	0	0	5
5767	5760	"location"	"clob"	0	0	0	6
5768	5760	"heat"	"int"	32	0	0	7
5769	5760	"dirty"	"clob"	0	0	0	8
5770	5760	"status"	"clob"	0	0	0	9
5771	5760	"kind"	"clob"	0	0	0	10
5774	5773	"signature"	"clob"	0	0	0	0
5775	5773	"address"	"clob"	0	0	0	1
5776	5773	"comment"	"clob"	0	0	0	2
5779	5778	"ra_stmt"	"clob"	0	0	1	0
5780	5778	"opt"	"boolean"	1	0	1	1
5785	5784	"result"	"int"	32	0	0	0
5786	5784	"debug"	"int"	32	0	1	1
5789	5788	"qtag"	"bigint"	64	0	0	0
5790	5788	"user"	"clob"	0	0	0	1
5791	5788	"started"	"timestamp"	7	0	0	2
5792	5788	"estimate"	"timestamp"	7	0	0	3
5793	5788	"progress"	"int"	32	0	0	4
5794	5788	"status"	"clob"	0	0	0	5
5795	5788	"tag"	"oid"	63	0	0	6
5796	5788	"query"	"clob"	0	0	0	7
5809	5808	"tag"	"int"	32	0	1	0
5812	5811	"tag"	"int"	32	0	1	0
5815	5814	"tag"	"int"	32	0	1	0
5818	5817	"tag"	"bigint"	64	0	1	0
5821	5820	"tag"	"bigint"	64	0	1	0
5824	5823	"tag"	"bigint"	64	0	1	0
5827	5826	"rowid"	"bigint"	64	0	0	0
5828	5826	"fldid"	"int"	32	0	0	1
5829	5826	"message"	"clob"	0	0	0	2
5830	5826	"input"	"clob"	0	0	0	3
5841	5840	"result"	"double"	53	0	0	0
5842	5840	"val"	"tinyint"	8	0	1	1
5845	5844	"result"	"double"	53	0	0	0
5846	5844	"val"	"smallint"	16	0	1	1
5849	5848	"result"	"double"	53	0	0	0
5850	5848	"val"	"int"	32	0	1	1
5853	5852	"result"	"double"	53	0	0	0
5854	5852	"val"	"wrd"	64	0	1	1
5857	5856	"result"	"double"	53	0	0	0
5858	5856	"val"	"bigint"	64	0	1	1
5861	5860	"result"	"double"	53	0	0	0
5862	5860	"val"	"real"	24	0	1	1
5865	5864	"result"	"double"	53	0	0	0
5866	5864	"val"	"double"	53	0	1	1
5869	5868	"result"	"double"	53	0	0	0
5870	5868	"val"	"date"	0	0	1	1
5873	5872	"result"	"double"	53	0	0	0
5874	5872	"val"	"time"	1	0	1	1
5877	5876	"result"	"double"	53	0	0	0
5878	5876	"val"	"timestamp"	7	0	1	1
5881	5880	"result"	"double"	53	0	0	0
5882	5880	"val"	"tinyint"	8	0	1	1
5885	5884	"result"	"double"	53	0	0	0
5886	5884	"val"	"smallint"	16	0	1	1
5889	5888	"result"	"double"	53	0	0	0
5890	5888	"val"	"int"	32	0	1	1
5893	5892	"result"	"double"	53	0	0	0
5894	5892	"val"	"wrd"	64	0	1	1
5897	5896	"result"	"double"	53	0	0	0
5898	5896	"val"	"bigint"	64	0	1	1
5901	5900	"result"	"double"	53	0	0	0
5902	5900	"val"	"real"	24	0	1	1
5905	5904	"result"	"double"	53	0	0	0
5906	5904	"val"	"double"	53	0	1	1
5909	5908	"result"	"double"	53	0	0	0
5910	5908	"val"	"date"	0	0	1	1
5913	5912	"result"	"double"	53	0	0	0
5914	5912	"val"	"time"	1	0	1	1
5917	5916	"result"	"double"	53	0	0	0
5918	5916	"val"	"timestamp"	7	0	1	1
5921	5920	"result"	"double"	53	0	0	0
5922	5920	"val"	"tinyint"	8	0	1	1
5925	5924	"result"	"double"	53	0	0	0
5926	5924	"val"	"smallint"	16	0	1	1
5929	5928	"result"	"double"	53	0	0	0
5930	5928	"val"	"int"	32	0	1	1
5933	5932	"result"	"double"	53	0	0	0
5934	5932	"val"	"wrd"	64	0	1	1
5937	5936	"result"	"double"	53	0	0	0
5938	5936	"val"	"bigint"	64	0	1	1
5941	5940	"result"	"double"	53	0	0	0
5942	5940	"val"	"real"	24	0	1	1
5945	5944	"result"	"double"	53	0	0	0
5946	5944	"val"	"double"	53	0	1	1
5949	5948	"result"	"double"	53	0	0	0
5950	5948	"val"	"date"	0	0	1	1
5953	5952	"result"	"double"	53	0	0	0
5954	5952	"val"	"time"	1	0	1	1
5957	5956	"result"	"double"	53	0	0	0
5958	5956	"val"	"timestamp"	7	0	1	1
5961	5960	"result"	"double"	53	0	0	0
5962	5960	"val"	"tinyint"	8	0	1	1
5965	5964	"result"	"double"	53	0	0	0
5966	5964	"val"	"smallint"	16	0	1	1
5969	5968	"result"	"double"	53	0	0	0
5970	5968	"val"	"int"	32	0	1	1
5973	5972	"result"	"double"	53	0	0	0
5974	5972	"val"	"wrd"	64	0	1	1
5977	5976	"result"	"double"	53	0	0	0
5978	5976	"val"	"bigint"	64	0	1	1
5981	5980	"result"	"double"	53	0	0	0
5982	5980	"val"	"real"	24	0	1	1
5985	5984	"result"	"double"	53	0	0	0
5986	5984	"val"	"double"	53	0	1	1
5989	5988	"result"	"double"	53	0	0	0
5990	5988	"val"	"date"	0	0	1	1
5993	5992	"result"	"double"	53	0	0	0
5994	5992	"val"	"time"	1	0	1	1
5997	5996	"result"	"double"	53	0	0	0
5998	5996	"val"	"timestamp"	7	0	1	1
6001	6000	"result"	"tinyint"	8	0	0	0
6002	6000	"val"	"tinyint"	8	0	1	1
6005	6004	"result"	"smallint"	16	0	0	0
6006	6004	"val"	"smallint"	16	0	1	1
6009	6008	"result"	"int"	32	0	0	0
6010	6008	"val"	"int"	32	0	1	1
6013	6012	"result"	"wrd"	64	0	0	0
6014	6012	"val"	"wrd"	64	0	1	1
6017	6016	"result"	"bigint"	64	0	0	0
6018	6016	"val"	"bigint"	64	0	1	1
6021	6020	"result"	"decimal"	18	3	0	0
6022	6020	"val"	"decimal"	18	3	1	1
6025	6024	"result"	"real"	24	0	0	0
6026	6024	"val"	"real"	24	0	1	1
6029	6028	"result"	"double"	53	0	0	0
6030	6028	"val"	"double"	53	0	1	1
6033	6032	"result"	"date"	0	0	0	0
6034	6032	"val"	"date"	0	0	1	1
6037	6036	"result"	"time"	1	0	0	0
6038	6036	"val"	"time"	1	0	1	1
6041	6040	"result"	"timestamp"	7	0	0	0
6042	6040	"val"	"timestamp"	7	0	1	1
6045	6044	"result"	"tinyint"	8	0	0	0
6046	6044	"val"	"tinyint"	8	0	1	1
6047	6044	"q"	"double"	53	0	1	2
6050	6049	"result"	"smallint"	16	0	0	0
6051	6049	"val"	"smallint"	16	0	1	1
6052	6049	"q"	"double"	53	0	1	2
6055	6054	"result"	"int"	32	0	0	0
6056	6054	"val"	"int"	32	0	1	1
6057	6054	"q"	"double"	53	0	1	2
6060	6059	"result"	"wrd"	64	0	0	0
6061	6059	"val"	"wrd"	64	0	1	1
6062	6059	"q"	"double"	53	0	1	2
6065	6064	"result"	"bigint"	64	0	0	0
6066	6064	"val"	"bigint"	64	0	1	1
6067	6064	"q"	"double"	53	0	1	2
6070	6069	"result"	"decimal"	18	3	0	0
6071	6069	"val"	"decimal"	18	3	1	1
6072	6069	"q"	"double"	53	0	1	2
6075	6074	"result"	"real"	24	0	0	0
6076	6074	"val"	"real"	24	0	1	1
6077	6074	"q"	"double"	53	0	1	2
6080	6079	"result"	"double"	53	0	0	0
6081	6079	"val"	"double"	53	0	1	1
6082	6079	"q"	"double"	53	0	1	2
6085	6084	"result"	"date"	0	0	0	0
6086	6084	"val"	"date"	0	0	1	1
6087	6084	"q"	"double"	53	0	1	2
6090	6089	"result"	"time"	1	0	0	0
6091	6089	"val"	"time"	1	0	1	1
6092	6089	"q"	"double"	53	0	1	2
6095	6094	"result"	"timestamp"	7	0	0	0
6096	6094	"val"	"timestamp"	7	0	1	1
6097	6094	"q"	"double"	53	0	1	2
6100	6099	"result"	"tinyint"	8	0	0	0
6101	6099	"e1"	"tinyint"	8	0	1	1
6102	6099	"e2"	"tinyint"	8	0	1	2
6105	6104	"result"	"smallint"	16	0	0	0
6106	6104	"e1"	"smallint"	16	0	1	1
6107	6104	"e2"	"smallint"	16	0	1	2
6110	6109	"result"	"int"	32	0	0	0
6111	6109	"e1"	"int"	32	0	1	1
6112	6109	"e2"	"int"	32	0	1	2
6115	6114	"result"	"wrd"	64	0	0	0
6116	6114	"e1"	"wrd"	64	0	1	1
6117	6114	"e2"	"wrd"	64	0	1	2
6120	6119	"result"	"bigint"	64	0	0	0
6121	6119	"e1"	"bigint"	64	0	1	1
6122	6119	"e2"	"bigint"	64	0	1	2
6125	6124	"result"	"real"	24	0	0	0
6126	6124	"e1"	"real"	24	0	1	1
6127	6124	"e2"	"real"	24	0	1	2
6130	6129	"result"	"double"	53	0	0	0
6131	6129	"e1"	"double"	53	0	1	1
6132	6129	"e2"	"double"	53	0	1	2
6148	6147	"result"	"mbr"	0	0	0	0
6149	6147	"g"	"geometry"	0	0	1	1
6152	6151	"result"	"boolean"	1	0	0	0
6153	6151	"a"	"mbr"	0	0	1	1
6154	6151	"b"	"mbr"	0	0	1	2
6157	6156	"result"	"geometry"	0	0	0	0
6158	6156	"wkt"	"clob"	0	0	1	1
6159	6156	"srid"	"smallint"	16	0	1	2
6162	6161	"result"	"point"	0	0	0	0
6163	6161	"wkt"	"clob"	0	0	1	1
6164	6161	"srid"	"smallint"	16	0	1	2
6167	6166	"result"	"linestring"	0	0	0	0
6168	6166	"wkt"	"clob"	0	0	1	1
6169	6166	"srid"	"smallint"	16	0	1	2
6172	6171	"result"	"polygon"	0	0	0	0
6173	6171	"wkt"	"clob"	0	0	1	1
6174	6171	"srid"	"smallint"	16	0	1	2
6177	6176	"result"	"multipoint"	0	0	0	0
6178	6176	"wkt"	"clob"	0	0	1	1
6179	6176	"srid"	"smallint"	16	0	1	2
6182	6181	"result"	"multilinestring"	0	0	0	0
6183	6181	"wkt"	"clob"	0	0	1	1
6184	6181	"srid"	"smallint"	16	0	1	2
6187	6186	"result"	"multipolygon"	0	0	0	0
6188	6186	"wkt"	"clob"	0	0	1	1
6189	6186	"srid"	"smallint"	16	0	1	2
6192	6191	"result"	"multipolygon"	0	0	0	0
6193	6191	"wkt"	"clob"	0	0	1	1
6194	6191	"srid"	"smallint"	16	0	1	2
6197	6196	"result"	"polygon"	0	0	0	0
6198	6196	"wkt"	"clob"	0	0	1	1
6199	6196	"srid"	"smallint"	16	0	1	2
6202	6201	"result"	"clob"	0	0	0	0
6203	6201	"g"	"geometry"	0	0	1	1
6206	6205	"result"	"double"	53	0	0	0
6207	6205	"g"	"geometry"	0	0	1	1
6210	6209	"result"	"double"	53	0	0	0
6211	6209	"g"	"geometry"	0	0	1	1
6214	6213	"result"	"point"	0	0	0	0
6215	6213	"x"	"double"	53	0	1	1
6216	6213	"y"	"double"	53	0	1	2
6219	6218	"result"	"int"	32	0	0	0
6220	6218	"g"	"geometry"	0	0	1	1
6223	6222	"result"	"int"	32	0	0	0
6224	6222	"g"	"geometry"	0	0	1	1
6227	6226	"result"	"int"	32	0	0	0
6228	6226	"g"	"geometry"	0	0	1	1
6231	6230	"result"	"geometry"	0	0	0	0
6232	6230	"g"	"geometry"	0	0	1	1
6235	6234	"result"	"boolean"	1	0	0	0
6236	6234	"g"	"geometry"	0	0	1	1
6239	6238	"result"	"boolean"	1	0	0	0
6240	6238	"g"	"geometry"	0	0	1	1
6243	6242	"result"	"geometry"	0	0	0	0
6244	6242	"g"	"geometry"	0	0	1	1
6247	6246	"result"	"boolean"	1	0	0	0
6248	6246	"a"	"geometry"	0	0	1	1
6249	6246	"b"	"geometry"	0	0	1	2
6252	6251	"result"	"boolean"	1	0	0	0
6253	6251	"a"	"geometry"	0	0	1	1
6254	6251	"b"	"geometry"	0	0	1	2
6257	6256	"result"	"boolean"	1	0	0	0
6258	6256	"a"	"geometry"	0	0	1	1
6259	6256	"b"	"geometry"	0	0	1	2
6262	6261	"result"	"boolean"	1	0	0	0
6263	6261	"a"	"geometry"	0	0	1	1
6264	6261	"b"	"geometry"	0	0	1	2
6267	6266	"result"	"boolean"	1	0	0	0
6268	6266	"a"	"geometry"	0	0	1	1
6269	6266	"b"	"geometry"	0	0	1	2
6272	6271	"result"	"boolean"	1	0	0	0
6273	6271	"a"	"geometry"	0	0	1	1
6274	6271	"b"	"geometry"	0	0	1	2
6277	6276	"result"	"boolean"	1	0	0	0
6278	6276	"a"	"geometry"	0	0	1	1
6279	6276	"b"	"geometry"	0	0	1	2
6282	6281	"result"	"boolean"	1	0	0	0
6283	6281	"a"	"geometry"	0	0	1	1
6284	6281	"x"	"double"	53	0	1	2
6285	6281	"y"	"double"	53	0	1	3
6288	6287	"result"	"boolean"	1	0	0	0
6289	6287	"a"	"geometry"	0	0	1	1
6290	6287	"b"	"geometry"	0	0	1	2
6293	6292	"result"	"boolean"	1	0	0	0
6294	6292	"a"	"geometry"	0	0	1	1
6295	6292	"b"	"geometry"	0	0	1	2
6296	6292	"pattern"	"clob"	0	0	1	3
6299	6298	"result"	"double"	53	0	0	0
6300	6298	"g"	"geometry"	0	0	1	1
6303	6302	"result"	"double"	53	0	0	0
6304	6302	"g"	"geometry"	0	0	1	1
6307	6306	"result"	"double"	53	0	0	0
6308	6306	"a"	"geometry"	0	0	1	1
6309	6306	"b"	"geometry"	0	0	1	2
6312	6311	"result"	"geometry"	0	0	0	0
6313	6311	"a"	"geometry"	0	0	1	1
6314	6311	"distance"	"double"	53	0	1	2
6317	6316	"result"	"geometry"	0	0	0	0
6318	6316	"a"	"geometry"	0	0	1	1
6321	6320	"result"	"geometry"	0	0	0	0
6322	6320	"a"	"geometry"	0	0	1	1
6323	6320	"b"	"geometry"	0	0	1	2
6326	6325	"result"	"geometry"	0	0	0	0
6327	6325	"a"	"geometry"	0	0	1	1
6328	6325	"b"	"geometry"	0	0	1	2
6331	6330	"result"	"geometry"	0	0	0	0
6332	6330	"a"	"geometry"	0	0	1	1
6333	6330	"b"	"geometry"	0	0	1	2
6336	6335	"result"	"geometry"	0	0	0	0
6337	6335	"a"	"geometry"	0	0	1	1
6338	6335	"b"	"geometry"	0	0	1	2
6343	6342	"result"	"json"	0	0	0	0
6344	6342	"js"	"json"	0	0	1	1
6345	6342	"pathexpr"	"clob"	0	0	1	2
6348	6347	"result"	"json"	0	0	0	0
6349	6347	"js"	"json"	0	0	1	1
6350	6347	"name"	"tinyint"	8	0	1	2
6353	6352	"result"	"json"	0	0	0	0
6354	6352	"js"	"json"	0	0	1	1
6355	6352	"name"	"int"	32	0	1	2
6358	6357	"result"	"json"	0	0	0	0
6359	6357	"js"	"json"	0	0	1	1
6360	6357	"name"	"bigint"	64	0	1	2
6363	6362	"result"	"clob"	0	0	0	0
6364	6362	"js"	"json"	0	0	1	1
6365	6362	"e"	"clob"	0	0	1	2
6368	6367	"result"	"double"	53	0	0	0
6369	6367	"js"	"json"	0	0	1	1
6372	6371	"result"	"bigint"	64	0	0	0
6373	6371	"js"	"json"	0	0	1	1
6376	6375	"result"	"boolean"	1	0	0	0
6377	6375	"js"	"clob"	0	0	1	1
6380	6379	"result"	"boolean"	1	0	0	0
6381	6379	"js"	"clob"	0	0	1	1
6384	6383	"result"	"boolean"	1	0	0	0
6385	6383	"js"	"clob"	0	0	1	1
6388	6387	"result"	"boolean"	1	0	0	0
6389	6387	"js"	"json"	0	0	1	1
6392	6391	"result"	"boolean"	1	0	0	0
6393	6391	"js"	"json"	0	0	1	1
6396	6395	"result"	"boolean"	1	0	0	0
6397	6395	"js"	"json"	0	0	1	1
6400	6399	"result"	"int"	32	0	0	0
6401	6399	"js"	"json"	0	0	1	1
6404	6403	"result"	"json"	0	0	0	0
6405	6403	"js"	"json"	0	0	1	1
6408	6407	"result"	"json"	0	0	0	0
6409	6407	"js"	"json"	0	0	1	1
6412	6411	"result"	"clob"	0	0	0	0
6413	6411	"js"	"json"	0	0	1	1
6416	6415	"result"	"clob"	0	0	0	0
6417	6415	"js"	"clob"	0	0	1	1
6420	6419	"result"	"clob"	0	0	0	0
6421	6419	"js"	"int"	32	0	1	1
6424	6423	"result"	"clob"	0	0	0	0
6425	6423	"js"	"json"	0	0	1	1
6428	6427	"result"	"clob"	0	0	0	0
6429	6427	"x"	"clob"	0	0	1	1
6432	6431	"result"	"clob"	0	0	0	0
6433	6431	"x"	"double"	53	0	1	1
6436	6435	"result"	"clob"	0	0	0	0
6437	6435	"v"	"clob"	0	0	1	1
6441	6440	"result"	"uuid"	0	0	0	0
6444	6443	"result"	"uuid"	0	0	0	0
6445	6443	"u"	"uuid"	0	0	1	1
6448	6447	"result"	"uuid"	0	0	0	0
6449	6447	"u"	"clob"	0	0	1	1
6452	6451	"result"	"double"	53	0	0	0
6453	6451	"chi2"	"double"	53	0	1	1
6454	6451	"datapoints"	"double"	53	0	1	2
6462	6461	"beat"	"int"	32	0	1	0
6465	6464	"poolsize"	"int"	32	0	1	0
6468	6467	"host"	"clob"	0	0	1	0
6469	6467	"port"	"int"	32	0	1	1
6493	6492	"dirname"	"clob"	0	0	1	0
6496	6495	"fname"	"clob"	0	0	1	0
6499	6498	"tname"	"clob"	0	0	1	0
6502	6501	"dirname"	"clob"	0	0	1	0
6503	6501	"pat"	"clob"	0	0	1	1
6538	6537	"fname"	"varchar"	256	0	1	0
6541	6540	"fid"	"int"	32	0	1	0
6542	6540	"varnname"	"varchar"	256	0	1	1
6545	6544	"schema"	"clob"	0	0	0	0
6546	6544	"table"	"clob"	0	0	0	1
6547	6544	"column"	"clob"	0	0	0	2
6548	6544	"type"	"clob"	0	0	0	3
6549	6544	"mode"	"clob"	0	0	0	4
6550	6544	"location"	"clob"	0	0	0	5
6551	6544	"count"	"bigint"	64	0	0	6
6552	6544	"typewidth"	"int"	32	0	0	7
6553	6544	"columnsize"	"bigint"	64	0	0	8
6554	6544	"heapsize"	"bigint"	64	0	0	9
6555	6544	"hashes"	"bigint"	64	0	0	10
6556	6544	"phash"	"boolean"	1	0	0	11
6557	6544	"imprints"	"bigint"	64	0	0	12
6558	6544	"sorted"	"boolean"	1	0	0	13
6591	6590	"result"	"bigint"	64	0	0	0
6592	6590	"nme"	"clob"	0	0	1	1
6593	6590	"i"	"bigint"	64	0	1	2
6594	6590	"d"	"bigint"	64	0	1	3
6597	6596	"result"	"bigint"	64	0	0	0
6598	6596	"tpe"	"clob"	0	0	1	1
6599	6596	"i"	"bigint"	64	0	1	2
6600	6596	"w"	"int"	32	0	1	3
6603	6602	"result"	"bigint"	64	0	0	0
6604	6602	"b"	"boolean"	1	0	1	1
6605	6602	"i"	"bigint"	64	0	1	2
6608	6607	"result"	"bigint"	64	0	0	0
6609	6607	"i"	"bigint"	64	0	1	1
6610	6607	"nme"	"clob"	0	0	1	2
6613	6612	"schema"	"clob"	0	0	0	0
6614	6612	"table"	"clob"	0	0	0	1
6615	6612	"column"	"clob"	0	0	0	2
6616	6612	"type"	"clob"	0	0	0	3
6617	6612	"count"	"bigint"	64	0	0	4
6618	6612	"columnsize"	"bigint"	64	0	0	5
6619	6612	"heapsize"	"bigint"	64	0	0	6
6620	6612	"hashes"	"bigint"	64	0	0	7
6621	6612	"imprints"	"bigint"	64	0	0	8
6622	6612	"sorted"	"boolean"	1	0	0	9
6660	6659	"MinMax"	"int"	32	0	1	0
6661	6659	"sample"	"bigint"	64	0	1	1
6664	6663	"MinMax"	"int"	32	0	1	0
6665	6663	"sample"	"bigint"	64	0	1	1
6666	6663	"sch"	"clob"	0	0	1	2
6669	6668	"MinMax"	"int"	32	0	1	0
6670	6668	"sample"	"bigint"	64	0	1	1
6671	6668	"sch"	"clob"	0	0	1	2
6672	6668	"tbl"	"clob"	0	0	1	3
6675	6674	"MinMax"	"int"	32	0	1	0
6676	6674	"sample"	"bigint"	64	0	1	1
6677	6674	"sch"	"clob"	0	0	1	2
6678	6674	"tbl"	"clob"	0	0	1	3
6679	6674	"col"	"clob"	0	0	1	4
6682	6681	"result"	"clob"	0	0	0	0
6683	6681	"src"	"clob"	0	0	1	1
6686	6685	"result"	"smallint"	16	0	0	0
6687	6685	"one"	"tinyint"	8	0	1	1
6688	6685	"two"	"tinyint"	8	0	1	2
6691	6690	"result"	"int"	32	0	0	0
6692	6690	"one"	"smallint"	16	0	1	1
6693	6690	"two"	"smallint"	16	0	1	2
6696	6695	"result"	"bigint"	64	0	0	0
6697	6695	"one"	"int"	32	0	1	1
6698	6695	"two"	"int"	32	0	1	2
6702	6701	"bam_repos"	"clob"	0	0	1	0
6703	6701	"dbschema"	"smallint"	16	0	1	1
6706	6705	"bam_files"	"clob"	0	0	1	0
6707	6705	"dbschema"	"smallint"	16	0	1	1
6710	6709	"bam_file"	"clob"	0	0	1	0
6711	6709	"dbschema"	"smallint"	16	0	1	1
6714	6713	"file_id"	"bigint"	64	0	1	0
6715	6713	"dbschema"	"smallint"	16	0	1	1
6718	6717	"result"	"boolean"	1	0	0	0
6719	6717	"flag"	"smallint"	16	0	1	1
6720	6717	"name"	"clob"	0	0	1	2
6723	6722	"result"	"clob"	0	0	0	0
6724	6722	"seq"	"clob"	0	0	1	1
6727	6726	"result"	"clob"	0	0	0	0
6728	6726	"qual"	"clob"	0	0	1	1
6731	6730	"result"	"int"	32	0	0	0
6732	6730	"cigar"	"clob"	0	0	1	1
6735	6734	"result"	"char"	1	0	0	0
6736	6734	"ref_pos"	"int"	32	0	1	1
6737	6734	"alg_seq"	"clob"	0	0	1	2
6738	6734	"alg_pos"	"int"	32	0	1	3
6739	6734	"alg_cigar"	"clob"	0	0	1	4
6742	6741	"output_path"	"clob"	0	0	1	0
6745	6744	"output_path"	"clob"	0	0	1	0
6815	6814	"value"	"tinyint"	8	0	0	0
6816	6814	"first"	"tinyint"	8	0	1	1
6817	6814	"last"	"tinyint"	8	0	1	2
6820	6819	"value"	"tinyint"	8	0	0	0
6821	6819	"first"	"tinyint"	8	0	1	1
6822	6819	"last"	"tinyint"	8	0	1	2
6823	6819	"stepsize"	"tinyint"	8	0	1	3
6826	6825	"value"	"smallint"	16	0	0	0
6827	6825	"first"	"smallint"	16	0	1	1
6828	6825	"last"	"smallint"	16	0	1	2
6831	6830	"value"	"smallint"	16	0	0	0
6832	6830	"first"	"smallint"	16	0	1	1
6833	6830	"last"	"smallint"	16	0	1	2
6834	6830	"stepsize"	"smallint"	16	0	1	3
6837	6836	"value"	"int"	32	0	0	0
6838	6836	"first"	"int"	32	0	1	1
6839	6836	"last"	"int"	32	0	1	2
6842	6841	"value"	"int"	32	0	0	0
6843	6841	"first"	"int"	32	0	1	1
6844	6841	"last"	"int"	32	0	1	2
6845	6841	"stepsize"	"int"	32	0	1	3
6848	6847	"value"	"bigint"	64	0	0	0
6849	6847	"first"	"bigint"	64	0	1	1
6850	6847	"last"	"bigint"	64	0	1	2
6853	6852	"value"	"bigint"	64	0	0	0
6854	6852	"first"	"bigint"	64	0	1	1
6855	6852	"last"	"bigint"	64	0	1	2
6856	6852	"stepsize"	"bigint"	64	0	1	3
6859	6858	"value"	"real"	24	0	0	0
6860	6858	"first"	"real"	24	0	1	1
6861	6858	"last"	"real"	24	0	1	2
6862	6858	"stepsize"	"real"	24	0	1	3
6865	6864	"value"	"double"	53	0	0	0
6866	6864	"first"	"double"	53	0	1	1
6867	6864	"last"	"double"	53	0	1	2
6868	6864	"stepsize"	"double"	53	0	1	3
6871	6870	"value"	"decimal"	10	2	0	0
6872	6870	"first"	"decimal"	10	2	1	1
6873	6870	"last"	"decimal"	10	2	1	2
6874	6870	"stepsize"	"decimal"	10	2	1	3
6877	6876	"value"	"timestamp"	7	0	0	0
6878	6876	"first"	"timestamp"	7	0	1	1
6879	6876	"last"	"timestamp"	7	0	1	2
6880	6876	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 325 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
368	5272	7
367	5272	7
870	5272	7
368	5276	7
367	5276	7
870	5276	7
5281	5283	15
5281	5287	15
5281	5291	15
5281	5295	15
5281	5299	15
5281	5303	15
5281	5307	15
5281	5311	15
5281	5315	15
5281	5319	15
5281	5323	15
5281	5327	15
5281	5331	15
5281	5335	15
5281	5339	15
5281	5346	15
5381	5383	15
5381	5387	15
5381	5391	15
5381	5395	15
5381	5400	15
5381	5404	15
5381	5408	15
5381	5412	15
5381	5416	15
5381	5420	15
5381	5425	15
5381	5430	15
5381	5435	15
5440	5469	5
5450	5480	5
5440	5498	5
5450	5498	5
5509	5537	5
2003	5567	7
2001	5567	7
2002	5567	7
5236	5567	7
5245	5572	7
5243	5572	7
5244	5572	7
2005	5572	7
2001	5572	7
2003	5572	7
5204	5577	7
2047	5577	7
2046	5577	7
2049	5577	7
2048	5577	7
5204	5582	7
2088	5582	7
2086	5582	7
2090	5582	7
2083	5582	7
2079	5582	7
5204	5587	7
2047	5587	7
2046	5587	7
2049	5587	7
2092	5587	7
2091	5587	7
2048	5587	7
2093	5587	7
2094	5587	7
5204	5592	7
2081	5592	7
2079	5592	7
2084	5592	7
2080	5592	7
2083	5592	7
5204	5597	7
2047	5597	7
2046	5597	7
2049	5597	7
2017	5597	7
2016	5597	7
2048	5597	7
2018	5597	7
5214	5602	7
2047	5602	7
2046	5602	7
2049	5602	7
2048	5602	7
5204	5602	7
5214	5607	7
2081	5607	7
2079	5607	7
2084	5607	7
2103	5607	7
2102	5607	7
2104	5607	7
2080	5607	7
2083	5607	7
151	5607	7
31	5607	7
30	5607	7
32	5607	7
5214	5612	7
2088	5612	7
2086	5612	7
2090	5612	7
2083	5612	7
2079	5612	7
2087	5612	7
2103	5612	7
2102	5612	7
2104	5612	7
31	5612	7
30	5612	7
32	5612	7
5214	5617	7
2047	5617	7
2046	5617	7
2049	5617	7
2048	5617	7
2017	5617	7
2016	5617	7
2018	5617	7
5214	5622	7
2047	5622	7
2046	5622	7
2049	5622	7
2092	5622	7
2091	5622	7
2048	5622	7
2093	5622	7
5204	5627	7
2047	5627	7
2046	5627	7
2049	5627	7
2017	5627	7
2016	5627	7
2048	5627	7
2018	5627	7
5204	5632	7
2047	5632	7
2046	5632	7
2049	5632	7
2092	5632	7
2091	5632	7
2048	5632	7
2093	5632	7
2018	5637	7
2016	5637	7
2017	5637	7
2047	5637	7
2046	5637	7
2049	5637	7
2048	5637	7
2018	5642	7
2016	5642	7
2017	5642	7
2047	5642	7
2046	5642	7
2049	5642	7
2092	5642	7
2091	5642	7
2048	5642	7
2093	5642	7
2083	5647	7
2079	5647	7
2080	5647	7
2084	5647	7
5656	5670	5
95	5689	7
37	5689	7
35	5689	7
1013	5689	7
999	5689	7
210	5689	7
1010	5689	7
211	5689	7
32	5701	7
431	5701	7
95	5701	7
97	5701	7
34	5701	7
5696	5701	7
5742	5750	5
5752	5758	5
5788	5806	5
5826	5836	5
6143	6147	15
6145	6147	15
6145	6151	15
6143	6156	15
6133	6161	15
6135	6166	15
6137	6171	15
6138	6176	15
6140	6181	15
6142	6186	15
6142	6191	15
6137	6196	15
6143	6201	15
6143	6205	15
6143	6209	15
6133	6213	15
6143	6218	15
6143	6222	15
6143	6226	15
6143	6230	15
6143	6234	15
6143	6238	15
6143	6242	15
6143	6246	15
6143	6251	15
6143	6256	15
6143	6261	15
6143	6266	15
6143	6271	15
6143	6276	15
6143	6281	15
6143	6287	15
6143	6292	15
6143	6298	15
6143	6302	15
6143	6306	15
6143	6311	15
6143	6316	15
6143	6320	15
6143	6325	15
6143	6330	15
6143	6335	15
6340	6342	15
6340	6347	15
6340	6352	15
6340	6357	15
6340	6362	15
6340	6367	15
6340	6371	15
6340	6387	15
6340	6391	15
6340	6395	15
6340	6399	15
6340	6403	15
6340	6407	15
6340	6411	15
6340	6423	15
6438	6440	15
6438	6443	15
6438	6447	15
6471	6473	10
6471	6472	4
6476	6478	10
6479	6481	10
6476	6477	4
6484	6486	10
6487	6489	10
6484	6485	4
6544	6574	5
6576	6588	13
6586	6588	13
6577	6588	13
6578	6588	13
6579	6588	13
6580	6588	13
6581	6588	13
6582	6588	13
6583	6588	13
6584	6588	13
6585	6588	13
32	6590	7
104	6590	7
218	6590	7
94	6596	7
33	6596	7
211	6596	7
108	6596	7
32	6602	7
104	6602	7
95	6607	7
32	6607	7
327	6607	7
6576	6612	7
6586	6612	7
6577	6612	7
6578	6612	7
6579	6612	7
6581	6612	7
6582	6612	7
6583	6612	7
6584	6612	7
6585	6612	7
6590	6612	7
6596	6612	7
6602	6612	7
6607	6612	7
6612	6634	5
6612	6644	5
47	6644	5
54	6644	5
50	6644	5
34	6644	5
32	6644	5
104	6644	5
6747	6754	10
6747	6753	4
6757	6765	10
6758	6765	10
6758	6767	10
6757	6764	4
6758	6764	4
6753	6766	11
6758	6766	11
6770	6784	10
6771	6784	10
6771	6786	10
6770	6783	4
6771	6783	4
6753	6785	11
6771	6785	11
6789	6796	10
6790	6796	10
6790	6798	10
6789	6795	4
6790	6795	4
6753	6797	11
6790	6797	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1370 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
28	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
29	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
30	"hash"	"hash"	"mkey"	0	1	false	false	false	0
31	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
32	"="	"="	"calc"	0	1	false	false	false	0
33	"<>"	"!="	"calc"	0	1	false	false	false	0
34	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
35	">"	">"	"calc"	0	1	false	false	false	0
36	">="	">="	"calc"	0	1	false	false	false	0
37	"<"	"<"	"calc"	0	1	false	false	false	0
38	"<="	"<="	"calc"	0	1	false	false	false	0
42	"in"	"in"	"calc"	0	1	false	false	false	0
43	"identity"	"identity"	"calc"	0	1	false	false	false	0
44	"rowid"	"identity"	"calc"	0	1	false	false	false	0
45	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
48	"sql_min"	"min"	"calc"	0	1	false	false	false	0
49	"sql_max"	"max"	"calc"	0	1	false	false	false	0
50	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
68	"mod"	"%"	"calc"	0	1	false	false	false	0
69	"mod"	"%"	"calc"	0	1	false	false	false	0
70	"mod"	"%"	"calc"	0	1	false	false	false	0
71	"mod"	"%"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
89	"diff"	"diff"	"sql"	0	6	false	false	false	0
90	"diff"	"diff"	"sql"	0	6	false	false	false	0
91	"rank"	"rank"	"sql"	0	6	false	false	false	0
92	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
93	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
94	"and"	"and"	"calc"	0	1	false	false	false	0
95	"or"	"or"	"calc"	0	1	false	false	false	0
96	"xor"	"xor"	"calc"	0	1	false	false	false	0
97	"not"	"not"	"calc"	0	1	false	false	false	0
98	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
99	"sql_div"	"/"	"calc"	0	1	false	false	false	0
100	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
101	"sql_div"	"/"	"calc"	0	1	false	false	false	0
102	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
103	"sql_div"	"/"	"calc"	0	1	false	false	false	0
104	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
105	"sql_div"	"/"	"calc"	0	1	false	false	false	0
106	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
107	"sql_div"	"/"	"calc"	0	1	false	false	false	0
108	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
109	"sql_div"	"/"	"calc"	0	1	false	false	false	0
110	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
111	"sql_div"	"/"	"calc"	0	1	false	false	false	0
112	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
113	"sql_div"	"/"	"calc"	0	1	false	false	false	0
114	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
115	"sql_div"	"/"	"calc"	0	1	false	false	false	0
116	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
117	"sql_div"	"/"	"calc"	0	1	false	false	false	0
118	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
119	"sql_add"	"+"	"calc"	0	1	false	false	false	0
120	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
121	"sql_div"	"/"	"calc"	0	1	false	false	false	0
122	"bit_and"	"and"	"calc"	0	1	false	false	false	0
123	"bit_or"	"or"	"calc"	0	1	false	false	false	0
124	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
125	"bit_not"	"not"	"calc"	0	1	false	false	false	0
126	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
127	"right_shift"	">>"	"calc"	0	1	false	false	false	0
128	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
129	"abs"	"abs"	"calc"	0	1	false	false	false	0
130	"sign"	"sign"	"calc"	0	1	false	false	false	0
131	"scale_up"	"*"	"calc"	0	1	false	false	false	0
132	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
133	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
134	"sql_add"	"+"	"calc"	0	1	false	false	false	0
135	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
136	"sql_div"	"/"	"calc"	0	1	false	false	false	0
137	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
138	"sql_add"	"+"	"calc"	0	1	false	false	false	0
139	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
140	"sql_div"	"/"	"calc"	0	1	false	false	false	0
141	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
142	"sql_add"	"+"	"calc"	0	1	false	false	false	0
143	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
144	"sql_div"	"/"	"calc"	0	1	false	false	false	0
145	"bit_and"	"and"	"calc"	0	1	false	false	false	0
146	"bit_or"	"or"	"calc"	0	1	false	false	false	0
147	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
148	"bit_not"	"not"	"calc"	0	1	false	false	false	0
149	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
150	"right_shift"	">>"	"calc"	0	1	false	false	false	0
151	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
152	"abs"	"abs"	"calc"	0	1	false	false	false	0
153	"sign"	"sign"	"calc"	0	1	false	false	false	0
154	"scale_up"	"*"	"calc"	0	1	false	false	false	0
155	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
156	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
157	"sql_add"	"+"	"calc"	0	1	false	false	false	0
158	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
159	"sql_div"	"/"	"calc"	0	1	false	false	false	0
160	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
161	"sql_add"	"+"	"calc"	0	1	false	false	false	0
162	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
163	"sql_div"	"/"	"calc"	0	1	false	false	false	0
164	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
165	"sql_add"	"+"	"calc"	0	1	false	false	false	0
166	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
167	"sql_div"	"/"	"calc"	0	1	false	false	false	0
168	"bit_and"	"and"	"calc"	0	1	false	false	false	0
169	"bit_or"	"or"	"calc"	0	1	false	false	false	0
170	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
171	"bit_not"	"not"	"calc"	0	1	false	false	false	0
172	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
173	"right_shift"	">>"	"calc"	0	1	false	false	false	0
174	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
175	"abs"	"abs"	"calc"	0	1	false	false	false	0
176	"sign"	"sign"	"calc"	0	1	false	false	false	0
177	"scale_up"	"*"	"calc"	0	1	false	false	false	0
178	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
179	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
180	"sql_add"	"+"	"calc"	0	1	false	false	false	0
181	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
182	"sql_div"	"/"	"calc"	0	1	false	false	false	0
183	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
184	"sql_add"	"+"	"calc"	0	1	false	false	false	0
185	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
186	"sql_div"	"/"	"calc"	0	1	false	false	false	0
187	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
188	"sql_add"	"+"	"calc"	0	1	false	false	false	0
189	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
190	"sql_div"	"/"	"calc"	0	1	false	false	false	0
191	"bit_and"	"and"	"calc"	0	1	false	false	false	0
192	"bit_or"	"or"	"calc"	0	1	false	false	false	0
193	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
194	"bit_not"	"not"	"calc"	0	1	false	false	false	0
195	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
196	"right_shift"	">>"	"calc"	0	1	false	false	false	0
197	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
198	"abs"	"abs"	"calc"	0	1	false	false	false	0
199	"sign"	"sign"	"calc"	0	1	false	false	false	0
200	"scale_up"	"*"	"calc"	0	1	false	false	false	0
201	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
202	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
203	"sql_add"	"+"	"calc"	0	1	false	false	false	0
204	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
205	"sql_div"	"/"	"calc"	0	1	false	false	false	0
206	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
207	"sql_add"	"+"	"calc"	0	1	false	false	false	0
208	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
209	"sql_div"	"/"	"calc"	0	1	false	false	false	0
210	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
211	"sql_add"	"+"	"calc"	0	1	false	false	false	0
212	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
213	"sql_div"	"/"	"calc"	0	1	false	false	false	0
214	"bit_and"	"and"	"calc"	0	1	false	false	false	0
215	"bit_or"	"or"	"calc"	0	1	false	false	false	0
216	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
217	"bit_not"	"not"	"calc"	0	1	false	false	false	0
218	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
219	"right_shift"	">>"	"calc"	0	1	false	false	false	0
220	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
221	"abs"	"abs"	"calc"	0	1	false	false	false	0
222	"sign"	"sign"	"calc"	0	1	false	false	false	0
223	"scale_up"	"*"	"calc"	0	1	false	false	false	0
224	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
225	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
226	"sql_add"	"+"	"calc"	0	1	false	false	false	0
227	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
228	"sql_div"	"/"	"calc"	0	1	false	false	false	0
229	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
230	"sql_add"	"+"	"calc"	0	1	false	false	false	0
231	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
232	"sql_div"	"/"	"calc"	0	1	false	false	false	0
233	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
234	"sql_add"	"+"	"calc"	0	1	false	false	false	0
235	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
236	"sql_div"	"/"	"calc"	0	1	false	false	false	0
237	"bit_and"	"and"	"calc"	0	1	false	false	false	0
238	"bit_or"	"or"	"calc"	0	1	false	false	false	0
239	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
240	"bit_not"	"not"	"calc"	0	1	false	false	false	0
241	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
242	"right_shift"	">>"	"calc"	0	1	false	false	false	0
243	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
244	"abs"	"abs"	"calc"	0	1	false	false	false	0
245	"sign"	"sign"	"calc"	0	1	false	false	false	0
246	"scale_up"	"*"	"calc"	0	1	false	false	false	0
247	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
248	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
249	"sql_add"	"+"	"calc"	0	1	false	false	false	0
250	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
251	"sql_div"	"/"	"calc"	0	1	false	false	false	0
252	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
253	"sql_add"	"+"	"calc"	0	1	false	false	false	0
254	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
255	"sql_div"	"/"	"calc"	0	1	false	false	false	0
256	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
257	"sql_add"	"+"	"calc"	0	1	false	false	false	0
258	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
259	"sql_div"	"/"	"calc"	0	1	false	false	false	0
260	"bit_and"	"and"	"calc"	0	1	false	false	false	0
261	"bit_or"	"or"	"calc"	0	1	false	false	false	0
262	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
263	"bit_not"	"not"	"calc"	0	1	false	false	false	0
264	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
265	"right_shift"	">>"	"calc"	0	1	false	false	false	0
266	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
267	"abs"	"abs"	"calc"	0	1	false	false	false	0
268	"sign"	"sign"	"calc"	0	1	false	false	false	0
269	"scale_up"	"*"	"calc"	0	1	false	false	false	0
270	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
271	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
272	"sql_add"	"+"	"calc"	0	1	false	false	false	0
273	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
274	"sql_div"	"/"	"calc"	0	1	false	false	false	0
275	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
276	"sql_add"	"+"	"calc"	0	1	false	false	false	0
277	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
278	"sql_div"	"/"	"calc"	0	1	false	false	false	0
279	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
280	"sql_add"	"+"	"calc"	0	1	false	false	false	0
281	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
282	"sql_div"	"/"	"calc"	0	1	false	false	false	0
283	"bit_and"	"and"	"calc"	0	1	false	false	false	0
284	"bit_or"	"or"	"calc"	0	1	false	false	false	0
285	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
286	"bit_not"	"not"	"calc"	0	1	false	false	false	0
287	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
288	"right_shift"	">>"	"calc"	0	1	false	false	false	0
289	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
290	"abs"	"abs"	"calc"	0	1	false	false	false	0
291	"sign"	"sign"	"calc"	0	1	false	false	false	0
292	"scale_up"	"*"	"calc"	0	1	false	false	false	0
293	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
294	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
295	"sql_add"	"+"	"calc"	0	1	false	false	false	0
296	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
297	"sql_div"	"/"	"calc"	0	1	false	false	false	0
298	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
299	"sql_add"	"+"	"calc"	0	1	false	false	false	0
300	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
301	"sql_div"	"/"	"calc"	0	1	false	false	false	0
302	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
303	"sql_add"	"+"	"calc"	0	1	false	false	false	0
304	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
305	"sql_div"	"/"	"calc"	0	1	false	false	false	0
306	"bit_and"	"and"	"calc"	0	1	false	false	false	0
307	"bit_or"	"or"	"calc"	0	1	false	false	false	0
308	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
309	"bit_not"	"not"	"calc"	0	1	false	false	false	0
310	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
311	"right_shift"	">>"	"calc"	0	1	false	false	false	0
312	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
313	"abs"	"abs"	"calc"	0	1	false	false	false	0
314	"sign"	"sign"	"calc"	0	1	false	false	false	0
315	"scale_up"	"*"	"calc"	0	1	false	false	false	0
316	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
317	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
318	"sql_add"	"+"	"calc"	0	1	false	false	false	0
319	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
320	"sql_div"	"/"	"calc"	0	1	false	false	false	0
321	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
322	"sql_add"	"+"	"calc"	0	1	false	false	false	0
323	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
324	"sql_div"	"/"	"calc"	0	1	false	false	false	0
325	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
326	"sql_add"	"+"	"calc"	0	1	false	false	false	0
327	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
328	"sql_div"	"/"	"calc"	0	1	false	false	false	0
329	"bit_and"	"and"	"calc"	0	1	false	false	false	0
330	"bit_or"	"or"	"calc"	0	1	false	false	false	0
331	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
332	"bit_not"	"not"	"calc"	0	1	false	false	false	0
333	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
334	"right_shift"	">>"	"calc"	0	1	false	false	false	0
335	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
336	"abs"	"abs"	"calc"	0	1	false	false	false	0
337	"sign"	"sign"	"calc"	0	1	false	false	false	0
338	"scale_up"	"*"	"calc"	0	1	false	false	false	0
339	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
340	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
341	"sql_add"	"+"	"calc"	0	1	false	false	false	0
342	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
343	"sql_div"	"/"	"calc"	0	1	false	false	false	0
344	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
345	"sql_add"	"+"	"calc"	0	1	false	false	false	0
346	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
347	"sql_div"	"/"	"calc"	0	1	false	false	false	0
348	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
349	"sql_add"	"+"	"calc"	0	1	false	false	false	0
350	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
351	"sql_div"	"/"	"calc"	0	1	false	false	false	0
352	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
353	"abs"	"abs"	"calc"	0	1	false	false	false	0
354	"sign"	"sign"	"calc"	0	1	false	false	false	0
355	"scale_up"	"*"	"calc"	0	1	false	false	false	0
356	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
357	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
358	"sql_add"	"+"	"calc"	0	1	false	false	false	0
359	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
360	"sql_div"	"/"	"calc"	0	1	false	false	false	0
361	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
362	"sql_add"	"+"	"calc"	0	1	false	false	false	0
363	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
364	"sql_div"	"/"	"calc"	0	1	false	false	false	0
365	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
366	"sql_add"	"+"	"calc"	0	1	false	false	false	0
367	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
368	"sql_div"	"/"	"calc"	0	1	false	false	false	0
369	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
370	"abs"	"abs"	"calc"	0	1	false	false	false	0
371	"sign"	"sign"	"calc"	0	1	false	false	false	0
372	"scale_up"	"*"	"calc"	0	1	false	false	false	0
373	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
374	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
375	"sql_add"	"+"	"calc"	0	1	false	false	false	0
376	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
377	"sql_div"	"/"	"calc"	0	1	false	false	false	0
378	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
379	"sql_add"	"+"	"calc"	0	1	false	false	false	0
380	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
381	"sql_div"	"/"	"calc"	0	1	false	false	false	0
382	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
383	"sql_add"	"+"	"calc"	0	1	false	false	false	0
384	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
385	"sql_div"	"/"	"calc"	0	1	false	false	false	0
386	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
387	"abs"	"abs"	"calc"	0	1	false	false	false	0
388	"sign"	"sign"	"calc"	0	1	false	false	false	0
389	"scale_up"	"*"	"calc"	0	1	false	false	false	0
390	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
391	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
392	"sql_add"	"+"	"calc"	0	1	false	false	false	0
393	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
394	"sql_div"	"/"	"calc"	0	1	false	false	false	0
395	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
396	"abs"	"abs"	"calc"	0	1	false	false	false	0
397	"sign"	"sign"	"calc"	0	1	false	false	false	0
398	"scale_up"	"*"	"calc"	0	1	false	false	false	0
399	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
404	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
405	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
408	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
412	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
414	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
415	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
416	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
418	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
419	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
420	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
421	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
422	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
423	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
424	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
425	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
426	"round"	"round"	"sql"	0	1	false	false	false	0
427	"round"	"round"	"sql"	0	1	false	false	false	0
428	"round"	"round"	"sql"	0	1	false	false	false	0
429	"round"	"round"	"sql"	0	1	false	false	false	0
430	"round"	"round"	"sql"	0	1	false	false	false	0
431	"round"	"round"	"sql"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_up"	"*"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_up"	"*"	"calc"	0	1	false	false	false	0
438	"scale_up"	"*"	"calc"	0	1	false	false	false	0
439	"scale_up"	"*"	"calc"	0	1	false	false	false	0
440	"scale_up"	"*"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_up"	"*"	"calc"	0	1	false	false	false	0
443	"scale_up"	"*"	"calc"	0	1	false	false	false	0
444	"scale_up"	"*"	"calc"	0	1	false	false	false	0
445	"scale_up"	"*"	"calc"	0	1	false	false	false	0
446	"scale_up"	"*"	"calc"	0	1	false	false	false	0
447	"scale_up"	"*"	"calc"	0	1	false	false	false	0
448	"scale_up"	"*"	"calc"	0	1	false	false	false	0
449	"scale_up"	"*"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_up"	"*"	"calc"	0	1	false	false	false	0
455	"scale_up"	"*"	"calc"	0	1	false	false	false	0
456	"scale_up"	"*"	"calc"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"power"	"pow"	"mmath"	0	1	false	false	false	0
833	"floor"	"floor"	"mmath"	0	1	false	false	false	0
834	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
835	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
836	"sin"	"sin"	"mmath"	0	1	false	false	false	0
837	"cos"	"cos"	"mmath"	0	1	false	false	false	0
838	"tan"	"tan"	"mmath"	0	1	false	false	false	0
839	"asin"	"asin"	"mmath"	0	1	false	false	false	0
840	"acos"	"acos"	"mmath"	0	1	false	false	false	0
841	"atan"	"atan"	"mmath"	0	1	false	false	false	0
842	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
843	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
844	"cot"	"cot"	"mmath"	0	1	false	false	false	0
845	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
846	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
847	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
848	"exp"	"exp"	"mmath"	0	1	false	false	false	0
849	"log"	"log"	"mmath"	0	1	false	false	false	0
850	"log10"	"log10"	"mmath"	0	1	false	false	false	0
851	"power"	"pow"	"mmath"	0	1	false	false	false	0
852	"floor"	"floor"	"mmath"	0	1	false	false	false	0
853	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
854	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
855	"sin"	"sin"	"mmath"	0	1	false	false	false	0
856	"cos"	"cos"	"mmath"	0	1	false	false	false	0
857	"tan"	"tan"	"mmath"	0	1	false	false	false	0
858	"asin"	"asin"	"mmath"	0	1	false	false	false	0
859	"acos"	"acos"	"mmath"	0	1	false	false	false	0
860	"atan"	"atan"	"mmath"	0	1	false	false	false	0
861	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
862	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
863	"cot"	"cot"	"mmath"	0	1	false	false	false	0
864	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
865	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
866	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
867	"exp"	"exp"	"mmath"	0	1	false	false	false	0
868	"log"	"log"	"mmath"	0	1	false	false	false	0
869	"log10"	"log10"	"mmath"	0	1	false	false	false	0
870	"pi"	"pi"	"mmath"	0	1	false	false	false	0
871	"rand"	"rand"	"mmath"	0	1	true	false	false	0
872	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
873	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
874	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
875	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
876	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
877	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
878	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
879	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
880	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
881	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
882	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
883	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
884	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
885	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
886	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
887	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
888	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
889	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
890	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
891	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
892	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
893	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
894	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
895	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
896	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
897	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
898	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
899	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
900	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
901	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
902	"year"	"year"	"mtime"	0	1	false	false	false	0
903	"month"	"month"	"mtime"	0	1	false	false	false	0
904	"day"	"day"	"mtime"	0	1	false	false	false	0
905	"hour"	"hours"	"mtime"	0	1	false	false	false	0
906	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
907	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
908	"hour"	"hours"	"mtime"	0	1	false	false	false	0
909	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
910	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
911	"year"	"year"	"mtime"	0	1	false	false	false	0
912	"month"	"month"	"mtime"	0	1	false	false	false	0
913	"day"	"day"	"mtime"	0	1	false	false	false	0
914	"hour"	"hours"	"mtime"	0	1	false	false	false	0
915	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
916	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
917	"year"	"year"	"mtime"	0	1	false	false	false	0
918	"month"	"month"	"mtime"	0	1	false	false	false	0
919	"day"	"day"	"mtime"	0	1	false	false	false	0
920	"hour"	"hours"	"mtime"	0	1	false	false	false	0
921	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
922	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
923	"year"	"year"	"mtime"	0	1	false	false	false	0
924	"month"	"month"	"mtime"	0	1	false	false	false	0
925	"day"	"day"	"mtime"	0	1	false	false	false	0
926	"hour"	"hours"	"mtime"	0	1	false	false	false	0
927	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
928	"second"	"seconds"	"mtime"	0	1	false	false	false	0
929	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
930	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
931	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
932	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
933	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
934	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
935	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
936	"restart"	"restart"	"sql"	0	1	false	false	false	0
937	"index"	"index"	"calc"	0	1	false	false	false	0
938	"index"	"index"	"calc"	0	1	false	false	false	0
939	"index"	"index"	"calc"	0	1	false	false	false	0
940	"strings"	"strings"	"calc"	0	1	false	false	false	0
941	"locate"	"locate"	"str"	0	1	false	false	false	0
942	"locate"	"locate"	"str"	0	1	false	false	false	0
943	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
944	"substring"	"substring"	"str"	0	1	false	false	false	0
945	"substring"	"substring"	"str"	0	1	false	false	false	0
946	"like"	"like"	"algebra"	0	1	false	false	false	0
947	"like"	"like"	"algebra"	0	1	false	false	false	0
948	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
949	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
950	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
951	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
952	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
953	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
954	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
955	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
956	"concat"	"+"	"calc"	0	1	false	false	false	0
957	"ascii"	"ascii"	"str"	0	1	false	false	false	0
958	"code"	"unicode"	"str"	0	1	false	false	false	0
959	"length"	"stringlength"	"str"	0	1	false	false	false	0
960	"right"	"stringright"	"str"	0	1	false	false	false	0
961	"left"	"stringleft"	"str"	0	1	false	false	false	0
962	"upper"	"toUpper"	"str"	0	1	false	false	false	0
963	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
964	"lower"	"toLower"	"str"	0	1	false	false	false	0
965	"lcase"	"toLower"	"str"	0	1	false	false	false	0
966	"trim"	"trim"	"str"	0	1	false	false	false	0
967	"trim"	"trim"	"str"	0	1	false	false	false	0
968	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
969	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
970	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
971	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
972	"lpad"	"lpad"	"str"	0	1	false	false	false	0
973	"lpad"	"lpad"	"str"	0	1	false	false	false	0
974	"rpad"	"rpad"	"str"	0	1	false	false	false	0
975	"rpad"	"rpad"	"str"	0	1	false	false	false	0
976	"insert"	"insert"	"str"	0	1	false	false	false	0
977	"replace"	"replace"	"str"	0	1	false	false	false	0
978	"repeat"	"repeat"	"str"	0	1	false	false	false	0
979	"space"	"space"	"str"	0	1	false	false	false	0
980	"char_length"	"length"	"str"	0	1	false	false	false	0
981	"character_length"	"length"	"str"	0	1	false	false	false	0
982	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
983	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
984	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
985	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
986	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
987	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
988	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
989	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
990	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
991	"index"	"index"	"calc"	0	1	false	false	false	0
992	"index"	"index"	"calc"	0	1	false	false	false	0
993	"index"	"index"	"calc"	0	1	false	false	false	0
994	"strings"	"strings"	"calc"	0	1	false	false	false	0
995	"locate"	"locate"	"str"	0	1	false	false	false	0
996	"locate"	"locate"	"str"	0	1	false	false	false	0
997	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
998	"substring"	"substring"	"str"	0	1	false	false	false	0
999	"substring"	"substring"	"str"	0	1	false	false	false	0
1000	"like"	"like"	"algebra"	0	1	false	false	false	0
1001	"like"	"like"	"algebra"	0	1	false	false	false	0
1002	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1003	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1004	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1005	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1006	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1007	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1008	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1009	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1010	"concat"	"+"	"calc"	0	1	false	false	false	0
1011	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1012	"code"	"unicode"	"str"	0	1	false	false	false	0
1013	"length"	"stringlength"	"str"	0	1	false	false	false	0
1014	"right"	"stringright"	"str"	0	1	false	false	false	0
1015	"left"	"stringleft"	"str"	0	1	false	false	false	0
1016	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1017	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1018	"lower"	"toLower"	"str"	0	1	false	false	false	0
1019	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1020	"trim"	"trim"	"str"	0	1	false	false	false	0
1021	"trim"	"trim"	"str"	0	1	false	false	false	0
1022	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1023	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1024	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1025	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1026	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1027	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1028	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1029	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1030	"insert"	"insert"	"str"	0	1	false	false	false	0
1031	"replace"	"replace"	"str"	0	1	false	false	false	0
1032	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1033	"space"	"space"	"str"	0	1	false	false	false	0
1034	"char_length"	"length"	"str"	0	1	false	false	false	0
1035	"character_length"	"length"	"str"	0	1	false	false	false	0
1036	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1037	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1038	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1039	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1040	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1041	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1042	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1043	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1044	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1045	"index"	"index"	"calc"	0	1	false	false	false	0
1046	"index"	"index"	"calc"	0	1	false	false	false	0
1047	"index"	"index"	"calc"	0	1	false	false	false	0
1048	"strings"	"strings"	"calc"	0	1	false	false	false	0
1049	"locate"	"locate"	"str"	0	1	false	false	false	0
1050	"locate"	"locate"	"str"	0	1	false	false	false	0
1051	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1052	"substring"	"substring"	"str"	0	1	false	false	false	0
1053	"substring"	"substring"	"str"	0	1	false	false	false	0
1054	"like"	"like"	"algebra"	0	1	false	false	false	0
1055	"like"	"like"	"algebra"	0	1	false	false	false	0
1056	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1057	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1058	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1059	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1060	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1061	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1062	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1063	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1064	"concat"	"+"	"calc"	0	1	false	false	false	0
1065	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1066	"code"	"unicode"	"str"	0	1	false	false	false	0
1067	"length"	"stringlength"	"str"	0	1	false	false	false	0
1068	"right"	"stringright"	"str"	0	1	false	false	false	0
1069	"left"	"stringleft"	"str"	0	1	false	false	false	0
1070	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1071	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1072	"lower"	"toLower"	"str"	0	1	false	false	false	0
1073	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1074	"trim"	"trim"	"str"	0	1	false	false	false	0
1075	"trim"	"trim"	"str"	0	1	false	false	false	0
1076	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1077	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1078	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1079	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1080	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1081	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1082	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1083	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1084	"insert"	"insert"	"str"	0	1	false	false	false	0
1085	"replace"	"replace"	"str"	0	1	false	false	false	0
1086	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1087	"space"	"space"	"str"	0	1	false	false	false	0
1088	"char_length"	"length"	"str"	0	1	false	false	false	0
1089	"character_length"	"length"	"str"	0	1	false	false	false	0
1090	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1091	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1092	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1093	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1094	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1095	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1096	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1097	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1098	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1099	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1100	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
27	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
39	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
40	"exist"	"exist"	"aggr"	0	3	false	false	false	0
41	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
46	"min"	"min"	"aggr"	0	3	false	false	false	0
47	"max"	"max"	"aggr"	0	3	false	false	false	0
51	"sum"	"sum"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"prod"	"prod"	"aggr"	0	3	false	false	false	0
61	"prod"	"prod"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
80	"sum"	"sum"	"aggr"	0	3	false	false	false	0
81	"prod"	"prod"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"prod"	"prod"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"avg"	"avg"	"aggr"	0	3	false	false	false	0
87	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
88	"count"	"count"	"aggr"	0	3	false	false	false	0
5225	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5228	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5234	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5254	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5259	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5264	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5268	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5272	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5276	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5280	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5283	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5287	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5291	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5295	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5299	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5303	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5307	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5311	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5315	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5319	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5323	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5327	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5331	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5335	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5339	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5346	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5352	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5357	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5362	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5367	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5372	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5377	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5383	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5387	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5391	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5395	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5400	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5404	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5408	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5412	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5416	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5420	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5425	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5430	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5435	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5440	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5450	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5500	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5502	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5504	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5507	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5509	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5539	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5543	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5547	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5551	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5555	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5559	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5563	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5567	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5572	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5577	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5582	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5587	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5592	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5597	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5602	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5607	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5612	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5617	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5622	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5627	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5632	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5637	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5642	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5647	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5652	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
5656	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5672	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5675	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5679	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5682	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5686	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
5689	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
5696	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5701	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
5707	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5713	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5718	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5723	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5727	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5731	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5735	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5739	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
5742	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5752	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
5760	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
5773	"malfunctions"	"create function sys.malfunctions()\n\treturns table(""signature"" string, ""address"" string, ""comment"" string)\n\texternal name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
5778	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
5782	"flush_log"	"-- enqueue a flush log, ie as soon as no transactions are active \n-- flush the log and cleanup the used storage\ncreate procedure sys.flush_log ()\n\texternal name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
5784	"debug"	"create function sys.debug(debug int) returns integer\n\texternal name mdb.""setDebug"";"	"mdb"	1	1	false	false	false	2000
5788	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
5808	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5811	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5814	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5817	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5820	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5823	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5826	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
5838	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
5840	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5844	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5848	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5852	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5856	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5860	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5864	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5868	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5872	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5876	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5880	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5884	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5888	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5892	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5896	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5900	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5904	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5908	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5912	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5916	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5920	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5924	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5928	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5932	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5936	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5940	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5944	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5948	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5952	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5956	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5960	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5964	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5968	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5972	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5976	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5980	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5984	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5988	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5992	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5996	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6000	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6004	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6008	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6012	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6016	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6020	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6024	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6028	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6032	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6036	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6040	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6044	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6049	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6054	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6059	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6064	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6069	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6074	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6079	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6084	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6089	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6094	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6099	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6104	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6109	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6114	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6119	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6124	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6129	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6147	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6151	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6156	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6161	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6166	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6171	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6176	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6181	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6186	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6191	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6196	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6201	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6205	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6209	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6213	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6218	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6222	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6226	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6230	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6234	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6238	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6242	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6246	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6251	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6256	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6261	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6266	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6271	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6276	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6281	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6287	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6292	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6298	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6302	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6306	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6311	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6316	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6320	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6325	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6330	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6335	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6342	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6339
6347	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6339
6352	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6339
6357	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6339
6362	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6339
6367	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6339
6371	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6339
6375	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6339
6379	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6339
6383	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6339
6387	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6339
6391	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6339
6395	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6339
6399	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6339
6403	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6339
6407	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6339
6411	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6339
6415	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6339
6419	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6339
6423	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6339
6427	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6339
6431	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6339
6435	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6440	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6443	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6447	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6451	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6457	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	6455
6459	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	6455
6461	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	6455
6464	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	6455
6467	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	6455
6492	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6495	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6498	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6501	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6537	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6540	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6544	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By changing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table producing function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6588	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6590	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
6596	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6602	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6607	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6612	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6659	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6663	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6668	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6674	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6681	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6685	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6690	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6695	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6701	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6699
6705	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6699
6709	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6699
6713	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6699
6717	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6699
6722	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6699
6726	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6699
6730	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6699
6734	"seq_char"	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	"bam"	1	1	false	false	false	6699
6741	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6699
6744	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6699
6814	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6819	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6825	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6830	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6836	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6841	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6847	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6852	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6858	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6864	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6870	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6876	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6473	6474	0	"keywords_keyword_pkey"
6478	6482	0	"table_types_table_type_id_pkey"
6481	6482	0	"table_types_table_type_name_unique"
6486	6490	0	"dependency_types_dependency_type_id_pkey"
6489	6490	0	"dependency_types_dependency_type_name_unique"
6754	6755	0	"files_pkey_file_id"
6765	6768	0	"sq_pkey_sn_file_id"
6767	6768	1	"sq_fkey_file_id"
6784	6787	0	"rg_pkey_id_file_id"
6786	6787	1	"rg_fkey_file_id"
6796	6799	0	"pg_pkey_id_file_id"
6798	6799	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6472	6474	0	"keywords_keyword_pkey"	-1	-1
6477	6482	0	"table_types_table_type_id_pkey"	-1	-1
6480	6482	1	"table_types_table_type_name_unique"	-1	-1
6485	6490	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6488	6490	1	"dependency_types_dependency_type_name_unique"	-1	-1
6753	6755	0	"files_pkey_file_id"	-1	-1
6764	6768	0	"sq_pkey_sn_file_id"	-1	-1
6766	6768	2	"sq_fkey_file_id"	6753	514
6783	6787	0	"rg_pkey_id_file_id"	-1	-1
6785	6787	2	"rg_fkey_file_id"	6753	514
6795	6799	0	"pg_pkey_id_file_id"	-1	-1
6797	6799	2	"pg_fkey_file_id"	6753	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6473	"keyword"	0
6472	"keyword"	0
6478	"table_type_id"	0
6481	"table_type_name"	0
6477	"table_type_id"	0
6480	"table_type_name"	0
6486	"dependency_type_id"	0
6489	"dependency_type_name"	0
6485	"dependency_type_id"	0
6488	"dependency_type_name"	0
6754	"file_id"	0
6753	"file_id"	0
6765	"sn"	0
6765	"file_id"	1
6767	"file_id"	0
6764	"sn"	0
6764	"file_id"	1
6766	"file_id"	0
6784	"id"	0
6784	"file_id"	1
6786	"file_id"	0
6783	"id"	0
6783	"file_id"	1
6785	"file_id"	0
6796	"id"	0
6796	"file_id"	1
6798	"file_id"	0
6795	"id"	0
6795	"file_id"	1
6797	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 46 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5204	1	1	0	0
5214	1	1	0	0
5240	1	1	0	0
5243	1	1	0	0
5247	1	1	0	0
5254	1	16	3	0
5259	1	16	3	0
5264	1	16	3	0
5268	1	16	3	0
5272	1	16	3	0
5276	1	16	3	0
5280	1	16	3	0
5352	1	16	3	0
5357	1	16	3	0
5362	1	16	3	0
5367	1	16	3	0
5372	1	16	3	0
5377	1	16	3	0
5539	1	16	3	0
5543	1	16	3	0
5547	1	16	3	0
5551	1	16	3	0
5689	1	16	3	0
5696	1	16	3	0
5701	1	16	3	0
5707	1	16	3	0
5713	1	16	3	0
5718	1	16	3	0
5723	1	16	3	0
5727	1	16	3	0
5826	1	16	3	0
6435	1	16	3	0
6883	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6339	"json"	3	3	true
6455	"profiler"	3	3	true
6699	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1370 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
28
29
30
31
32
33
34
35
36
37
38
42
43
44
45
48
49
50
68
69
70
71
72
73
74
75
76
77
78
79
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
27
39
40
41
46
47
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
80
81
82
83
84
85
86
87
88
5225
5228
5234
5254
5259
5264
5268
5272
5276
5280
5283
5287
5291
5295
5299
5303
5307
5311
5315
5319
5323
5327
5331
5335
5339
5346
5352
5357
5362
5367
5372
5377
5383
5387
5391
5395
5400
5404
5408
5412
5416
5420
5425
5430
5435
5440
5450
5500
5502
5504
5507
5509
5539
5543
5547
5551
5555
5559
5563
5567
5572
5577
5582
5587
5592
5597
5602
5607
5612
5617
5622
5627
5632
5637
5642
5647
5652
5656
5672
5675
5679
5682
5686
5689
5696
5701
5707
5713
5718
5723
5727
5731
5735
5739
5742
5752
5760
5773
5778
5782
5784
5788
5808
5811
5814
5817
5820
5823
5826
5838
5840
5844
5848
5852
5856
5860
5864
5868
5872
5876
5880
5884
5888
5892
5896
5900
5904
5908
5912
5916
5920
5924
5928
5932
5936
5940
5944
5948
5952
5956
5960
5964
5968
5972
5976
5980
5984
5988
5992
5996
6000
6004
6008
6012
6016
6020
6024
6028
6032
6036
6040
6044
6049
6054
6059
6064
6069
6074
6079
6084
6089
6094
6099
6104
6109
6114
6119
6124
6129
6147
6151
6156
6161
6166
6171
6176
6181
6186
6191
6196
6201
6205
6209
6213
6218
6222
6226
6230
6234
6238
6242
6246
6251
6256
6261
6266
6271
6276
6281
6287
6292
6298
6302
6306
6311
6316
6320
6325
6330
6335
6342
6347
6352
6357
6362
6367
6371
6375
6379
6383
6387
6391
6395
6399
6403
6407
6411
6415
6419
6423
6427
6431
6435
6440
6443
6447
6451
6457
6459
6461
6464
6467
6492
6495
6498
6501
6537
6540
6544
6588
6590
6596
6602
6607
6612
6659
6663
6668
6674
6681
6685
6690
6695
6701
6705
6709
6713
6717
6722
6726
6730
6734
6741
6744
6814
6819
6825
6830
6836
6841
6847
6852
6858
6864
6870
6876
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 44 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	13	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
5281	"url"	"url"	0	0	0	15	2000
5381	"inet"	"inet"	0	0	0	15	2000
6133	"wkb"	"point"	0	0	0	15	2000
6134	"wkb"	"curve"	0	0	0	15	2000
6135	"wkb"	"linestring"	0	0	0	15	2000
6136	"wkb"	"surface"	0	0	0	15	2000
6137	"wkb"	"polygon"	0	0	0	15	2000
6138	"wkb"	"multipoint"	0	0	0	15	2000
6139	"wkb"	"multicurve"	0	0	0	15	2000
6140	"wkb"	"multilinestring"	0	0	0	15	2000
6141	"wkb"	"multisurface"	0	0	0	15	2000
6142	"wkb"	"multipolygon"	0	0	0	15	2000
6143	"wkb"	"geometry"	0	0	0	15	2000
6144	"wkb"	"geomcollection"	0	0	0	15	2000
6145	"mbr"	"mbr"	0	0	0	15	2000
6340	"json"	"json"	0	0	0	15	2000
6438	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

