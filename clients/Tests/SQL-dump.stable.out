stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5145	"id"	"int"	32	0	5144	NULL	true	0	NULL
5146	"name"	"varchar"	1024	0	5144	NULL	true	1	NULL
5147	"schema_id"	"int"	32	0	5144	NULL	true	2	NULL
5148	"query"	"varchar"	2048	0	5144	NULL	true	3	NULL
5149	"type"	"smallint"	16	0	5144	NULL	true	4	NULL
5150	"system"	"boolean"	1	0	5144	NULL	true	5	NULL
5151	"commit_action"	"smallint"	16	0	5144	NULL	true	6	NULL
5152	"access"	"smallint"	16	0	5144	NULL	true	7	NULL
5153	"temporary"	"smallint"	16	0	5144	NULL	true	8	NULL
5155	"id"	"int"	32	0	5154	NULL	true	0	NULL
5156	"name"	"varchar"	1024	0	5154	NULL	true	1	NULL
5157	"type"	"varchar"	1024	0	5154	NULL	true	2	NULL
5158	"type_digits"	"int"	32	0	5154	NULL	true	3	NULL
5159	"type_scale"	"int"	32	0	5154	NULL	true	4	NULL
5160	"table_id"	"int"	32	0	5154	NULL	true	5	NULL
5161	"default"	"varchar"	2048	0	5154	NULL	true	6	NULL
5162	"null"	"boolean"	1	0	5154	NULL	true	7	NULL
5163	"number"	"int"	32	0	5154	NULL	true	8	NULL
5164	"storage"	"varchar"	2048	0	5154	NULL	true	9	NULL
5171	"name"	"varchar"	1024	0	5170	NULL	true	0	NULL
5172	"fullname"	"varchar"	2048	0	5170	NULL	true	1	NULL
5173	"default_schema"	"int"	9	0	5170	NULL	true	2	NULL
5177	"name"	"varchar"	1024	0	5176	NULL	true	0	NULL
5178	"fullname"	"varchar"	2024	0	5176	NULL	true	1	NULL
5179	"default_schema"	"int"	9	0	5176	NULL	true	2	NULL
5181	"login_id"	"int"	32	0	5180	NULL	true	0	NULL
5182	"role_id"	"int"	32	0	5180	NULL	true	1	NULL
5184	"id"	"int"	32	0	5183	NULL	true	0	NULL
5185	"name"	"varchar"	1024	0	5183	NULL	true	1	NULL
5186	"grantor"	"int"	32	0	5183	NULL	true	2	NULL
5188	"obj_id"	"int"	32	0	5187	NULL	true	0	NULL
5189	"auth_id"	"int"	32	0	5187	NULL	true	1	NULL
5190	"privileges"	"int"	32	0	5187	NULL	true	2	NULL
5191	"grantor"	"int"	32	0	5187	NULL	true	3	NULL
5192	"grantable"	"int"	32	0	5187	NULL	true	4	NULL
5401	"id"	"oid"	63	0	5409	NULL	true	0	NULL
5402	"owner"	"clob"	0	0	5409	NULL	true	1	NULL
5403	"defined"	"timestamp"	7	0	5409	NULL	true	2	NULL
5404	"query"	"clob"	0	0	5409	NULL	true	3	NULL
5405	"pipe"	"clob"	0	0	5409	NULL	true	4	NULL
5406	"plan"	"clob"	0	0	5409	NULL	true	5	NULL
5407	"mal"	"int"	32	0	5409	NULL	true	6	NULL
5408	"optimize"	"bigint"	64	0	5409	NULL	true	7	NULL
5411	"id"	"oid"	63	0	5420	NULL	true	0	NULL
5412	"start"	"timestamp"	7	0	5420	NULL	true	1	NULL
5413	"stop"	"timestamp"	7	0	5420	NULL	true	2	NULL
5414	"arguments"	"clob"	0	0	5420	NULL	true	3	NULL
5415	"tuples"	"wrd"	64	0	5420	NULL	true	4	NULL
5416	"run"	"bigint"	64	0	5420	NULL	true	5	NULL
5417	"ship"	"bigint"	64	0	5420	NULL	true	6	NULL
5418	"cpu"	"int"	32	0	5420	NULL	true	7	NULL
5419	"io"	"int"	32	0	5420	NULL	true	8	NULL
5422	"id"	"oid"	63	0	5438	NULL	true	0	NULL
5423	"owner"	"clob"	0	0	5438	NULL	true	1	NULL
5424	"defined"	"timestamp"	7	0	5438	NULL	true	2	NULL
5425	"query"	"clob"	0	0	5438	NULL	true	3	NULL
5426	"pipe"	"clob"	0	0	5438	NULL	true	4	NULL
5427	"plan"	"clob"	0	0	5438	NULL	true	5	NULL
5428	"mal"	"int"	32	0	5438	NULL	true	6	NULL
5429	"optimize"	"bigint"	64	0	5438	NULL	true	7	NULL
5430	"start"	"timestamp"	7	0	5438	NULL	true	8	NULL
5431	"stop"	"timestamp"	7	0	5438	NULL	true	9	NULL
5432	"arguments"	"clob"	0	0	5438	NULL	true	10	NULL
5433	"tuples"	"wrd"	64	0	5438	NULL	true	11	NULL
5434	"run"	"bigint"	64	0	5438	NULL	true	12	NULL
5435	"ship"	"bigint"	64	0	5438	NULL	true	13	NULL
5436	"cpu"	"int"	32	0	5438	NULL	true	14	NULL
5437	"io"	"int"	32	0	5438	NULL	true	15	NULL
5464	"event"	"int"	32	0	5477	NULL	true	0	NULL
5465	"clk"	"varchar"	20	0	5477	NULL	true	1	NULL
5466	"pc"	"varchar"	50	0	5477	NULL	true	2	NULL
5467	"thread"	"int"	32	0	5477	NULL	true	3	NULL
5468	"ticks"	"bigint"	64	0	5477	NULL	true	4	NULL
5469	"rrsmb"	"bigint"	64	0	5477	NULL	true	5	NULL
5470	"vmmb"	"bigint"	64	0	5477	NULL	true	6	NULL
5471	"reads"	"bigint"	64	0	5477	NULL	true	7	NULL
5472	"writes"	"bigint"	64	0	5477	NULL	true	8	NULL
5473	"minflt"	"bigint"	64	0	5477	NULL	true	9	NULL
5474	"majflt"	"bigint"	64	0	5477	NULL	true	10	NULL
5475	"nvcsw"	"bigint"	64	0	5477	NULL	true	11	NULL
5476	"stmt"	"clob"	0	0	5477	NULL	true	12	NULL
5611	"user"	"clob"	0	0	5617	NULL	true	0	NULL
5612	"login"	"timestamp"	7	0	5617	NULL	true	1	NULL
5613	"sessiontimeout"	"bigint"	64	0	5617	NULL	true	2	NULL
5614	"lastcommand"	"timestamp"	7	0	5617	NULL	true	3	NULL
5615	"querytimeout"	"bigint"	64	0	5617	NULL	true	4	NULL
5616	"active"	"boolean"	1	0	5617	NULL	true	5	NULL
5694	"name"	"clob"	0	0	5697	NULL	true	0	NULL
5695	"def"	"clob"	0	0	5697	NULL	true	1	NULL
5696	"status"	"clob"	0	0	5697	NULL	true	2	NULL
5703	"name"	"clob"	0	0	5705	NULL	true	0	NULL
5704	"value"	"clob"	0	0	5705	NULL	true	1	NULL
5737	"qtag"	"bigint"	64	0	5745	NULL	true	0	NULL
5738	"user"	"clob"	0	0	5745	NULL	true	1	NULL
5739	"started"	"timestamp"	7	0	5745	NULL	true	2	NULL
5740	"estimate"	"timestamp"	7	0	5745	NULL	true	3	NULL
5741	"progress"	"int"	32	0	5745	NULL	true	4	NULL
5742	"status"	"clob"	0	0	5745	NULL	true	5	NULL
5743	"tag"	"oid"	63	0	5745	NULL	true	6	NULL
5744	"query"	"clob"	0	0	5745	NULL	true	7	NULL
5771	"rowid"	"bigint"	64	0	5775	NULL	true	0	NULL
5772	"fldid"	"int"	32	0	5775	NULL	true	1	NULL
5773	"message"	"clob"	0	0	5775	NULL	true	2	NULL
5774	"input"	"clob"	0	0	5775	NULL	true	3	NULL
6395	"keyword"	"varchar"	40	0	6398	NULL	false	0	NULL
6400	"table_type_id"	"smallint"	16	0	6406	NULL	false	0	NULL
6403	"table_type_name"	"varchar"	25	0	6406	NULL	false	1	NULL
6408	"dependency_type_id"	"smallint"	16	0	6414	NULL	false	0	NULL
6411	"dependency_type_name"	"varchar"	15	0	6414	NULL	false	1	NULL
6429	"file_id"	"int"	32	0	6431	NULL	true	0	NULL
6430	"location"	"char"	256	0	6431	NULL	true	1	NULL
6433	"dim_id"	"int"	32	0	6437	NULL	true	0	NULL
6434	"file_id"	"int"	32	0	6437	NULL	true	1	NULL
6435	"name"	"varchar"	64	0	6437	NULL	true	2	NULL
6436	"length"	"int"	32	0	6437	NULL	true	3	NULL
6439	"var_id"	"int"	32	0	6445	NULL	true	0	NULL
6440	"file_id"	"int"	32	0	6445	NULL	true	1	NULL
6441	"name"	"varchar"	64	0	6445	NULL	true	2	NULL
6442	"vartype"	"varchar"	64	0	6445	NULL	true	3	NULL
6443	"ndim"	"int"	32	0	6445	NULL	true	4	NULL
6444	"coord_dim_id"	"int"	32	0	6445	NULL	true	5	NULL
6447	"var_id"	"int"	32	0	6451	NULL	true	0	NULL
6448	"dim_id"	"int"	32	0	6451	NULL	true	1	NULL
6449	"file_id"	"int"	32	0	6451	NULL	true	2	NULL
6450	"dimpos"	"int"	32	0	6451	NULL	true	3	NULL
6453	"obj_name"	"varchar"	256	0	6459	NULL	true	0	NULL
6454	"att_name"	"varchar"	256	0	6459	NULL	true	1	NULL
6455	"att_type"	"varchar"	64	0	6459	NULL	true	2	NULL
6456	"value"	"clob"	0	0	6459	NULL	true	3	NULL
6457	"file_id"	"int"	32	0	6459	NULL	true	4	NULL
6458	"gr_name"	"varchar"	256	0	6459	NULL	true	5	NULL
6484	"schema"	"clob"	0	0	6498	NULL	true	0	NULL
6485	"table"	"clob"	0	0	6498	NULL	true	1	NULL
6486	"column"	"clob"	0	0	6498	NULL	true	2	NULL
6487	"type"	"clob"	0	0	6498	NULL	true	3	NULL
6488	"mode"	"clob"	0	0	6498	NULL	true	4	NULL
6489	"location"	"clob"	0	0	6498	NULL	true	5	NULL
6490	"count"	"bigint"	64	0	6498	NULL	true	6	NULL
6491	"typewidth"	"int"	32	0	6498	NULL	true	7	NULL
6492	"columnsize"	"bigint"	64	0	6498	NULL	true	8	NULL
6493	"heapsize"	"bigint"	64	0	6498	NULL	true	9	NULL
6494	"hashes"	"bigint"	64	0	6498	NULL	true	10	NULL
6495	"phash"	"boolean"	1	0	6498	NULL	true	11	NULL
6496	"imprints"	"bigint"	64	0	6498	NULL	true	12	NULL
6497	"sorted"	"boolean"	1	0	6498	NULL	true	13	NULL
6500	"schema"	"clob"	0	0	6510	NULL	true	0	NULL
6501	"table"	"clob"	0	0	6510	NULL	true	1	NULL
6502	"column"	"clob"	0	0	6510	NULL	true	2	NULL
6503	"type"	"clob"	0	0	6510	NULL	true	3	NULL
6504	"typewidth"	"int"	32	0	6510	NULL	true	4	NULL
6505	"count"	"bigint"	64	0	6510	NULL	true	5	NULL
6506	"distinct"	"bigint"	64	0	6510	NULL	true	6	NULL
6507	"atomwidth"	"int"	32	0	6510	NULL	true	7	NULL
6508	"reference"	"boolean"	1	0	6510	NULL	true	8	NULL
6509	"sorted"	"boolean"	1	0	6510	NULL	true	9	NULL
6548	"schema"	"clob"	0	0	6558	NULL	true	0	NULL
6549	"table"	"clob"	0	0	6558	NULL	true	1	NULL
6550	"column"	"clob"	0	0	6558	NULL	true	2	NULL
6551	"type"	"clob"	0	0	6558	NULL	true	3	NULL
6552	"count"	"bigint"	64	0	6558	NULL	true	4	NULL
6553	"columnsize"	"bigint"	64	0	6558	NULL	true	5	NULL
6554	"heapsize"	"bigint"	64	0	6558	NULL	true	6	NULL
6555	"hashes"	"bigint"	64	0	6558	NULL	true	7	NULL
6556	"imprints"	"bigint"	64	0	6558	NULL	true	8	NULL
6557	"sorted"	"boolean"	1	0	6558	NULL	true	9	NULL
6560	"schema"	"clob"	0	0	6568	NULL	true	0	NULL
6561	"table"	"clob"	0	0	6568	NULL	true	1	NULL
6562	"count"	"bigint"	64	0	6568	NULL	true	2	NULL
6563	"columnsize"	"bigint"	64	0	6568	NULL	true	3	NULL
6564	"heapsize"	"bigint"	64	0	6568	NULL	true	4	NULL
6565	"hashes"	"bigint"	64	0	6568	NULL	true	5	NULL
6566	"imprints"	"bigint"	64	0	6568	NULL	true	6	NULL
6567	"auxiliary"	"bigint"	64	0	6568	NULL	true	7	NULL
6570	"column_id"	"int"	32	0	6581	NULL	true	0	NULL
6571	"type"	"clob"	0	0	6581	NULL	true	1	NULL
6572	"width"	"int"	32	0	6581	NULL	true	2	NULL
6573	"stamp"	"timestamp"	7	0	6581	NULL	true	3	NULL
6574	"sample"	"bigint"	64	0	6581	NULL	true	4	NULL
6575	"count"	"bigint"	64	0	6581	NULL	true	5	NULL
6576	"unique"	"bigint"	64	0	6581	NULL	true	6	NULL
6577	"nils"	"bigint"	64	0	6581	NULL	true	7	NULL
6578	"minval"	"clob"	0	0	6581	NULL	true	8	NULL
6579	"maxval"	"clob"	0	0	6581	NULL	true	9	NULL
6580	"sorted"	"boolean"	1	0	6581	NULL	true	10	NULL
6666	"file_id"	"bigint"	64	0	6674	NULL	false	0	NULL
6667	"file_location"	"clob"	0	0	6674	NULL	false	1	NULL
6668	"dbschema"	"smallint"	16	0	6674	NULL	false	2	NULL
6669	"format_version"	"varchar"	7	0	6674	NULL	true	3	NULL
6670	"sorting_order"	"varchar"	10	0	6674	NULL	true	4	NULL
6671	"comments"	"clob"	0	0	6674	NULL	true	5	NULL
6676	"sn"	"clob"	0	0	6687	NULL	false	0	NULL
6677	"file_id"	"bigint"	64	0	6687	NULL	false	1	NULL
6678	"ln"	"int"	32	0	6687	NULL	true	2	NULL
6679	"as"	"int"	32	0	6687	NULL	true	3	NULL
6680	"m5"	"clob"	0	0	6687	NULL	true	4	NULL
6681	"sp"	"clob"	0	0	6687	NULL	true	5	NULL
6682	"ur"	"clob"	0	0	6687	NULL	true	6	NULL
6689	"id"	"clob"	0	0	6706	NULL	false	0	NULL
6690	"file_id"	"bigint"	64	0	6706	NULL	false	1	NULL
6691	"cn"	"clob"	0	0	6706	NULL	true	2	NULL
6692	"ds"	"clob"	0	0	6706	NULL	true	3	NULL
6693	"dt"	"timestamp"	7	0	6706	NULL	true	4	NULL
6694	"fo"	"clob"	0	0	6706	NULL	true	5	NULL
6695	"ks"	"clob"	0	0	6706	NULL	true	6	NULL
6696	"lb"	"clob"	0	0	6706	NULL	true	7	NULL
6697	"pg"	"clob"	0	0	6706	NULL	true	8	NULL
6698	"pi"	"int"	32	0	6706	NULL	true	9	NULL
6699	"pl"	"clob"	0	0	6706	NULL	true	10	NULL
6700	"pu"	"clob"	0	0	6706	NULL	true	11	NULL
6701	"sm"	"clob"	0	0	6706	NULL	true	12	NULL
6708	"id"	"clob"	0	0	6718	NULL	false	0	NULL
6709	"file_id"	"bigint"	64	0	6718	NULL	false	1	NULL
6710	"pn"	"clob"	0	0	6718	NULL	true	2	NULL
6711	"cl"	"clob"	0	0	6718	NULL	true	3	NULL
6712	"pp"	"clob"	0	0	6718	NULL	true	4	NULL
6713	"vn"	"clob"	0	0	6718	NULL	true	5	NULL
6720	"qname"	"clob"	0	0	6731	NULL	false	0	NULL
6721	"flag"	"smallint"	16	0	6731	NULL	false	1	NULL
6722	"rname"	"clob"	0	0	6731	NULL	false	2	NULL
6723	"pos"	"int"	32	0	6731	NULL	false	3	NULL
6724	"mapq"	"smallint"	16	0	6731	NULL	false	4	NULL
6725	"cigar"	"clob"	0	0	6731	NULL	false	5	NULL
6726	"rnext"	"clob"	0	0	6731	NULL	false	6	NULL
6727	"pnext"	"int"	32	0	6731	NULL	false	7	NULL
6728	"tlen"	"int"	32	0	6731	NULL	false	8	NULL
6729	"seq"	"clob"	0	0	6731	NULL	false	9	NULL
6730	"qual"	"clob"	0	0	6731	NULL	false	10	NULL
6801	"function_id"	"int"	32	0	6802	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5144	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5154	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5170	"db_user_info"	2000	NULL	0	true	0	0
5176	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5180	"user_role"	2000	NULL	0	true	0	0
5183	"auths"	2000	NULL	0	true	0	0
5187	"privileges"	2000	NULL	0	true	0	0
5409	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5420	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5438	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5477	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5617	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5697	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
5705	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
5745	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
5775	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6398	"keywords"	2000	NULL	0	true	0	0
6406	"table_types"	2000	NULL	0	true	0	0
6414	"dependency_types"	2000	NULL	0	true	0	0
6431	"netcdf_files"	2000	NULL	0	true	0	0
6437	"netcdf_dims"	2000	NULL	0	true	0	0
6445	"netcdf_vars"	2000	NULL	0	true	0	0
6451	"netcdf_vardim"	2000	NULL	0	true	0	0
6459	"netcdf_attrs"	2000	NULL	0	true	0	0
6498	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6510	"storagemodelinput"	2000	NULL	0	true	0	0
6558	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6568	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6581	"statistics"	2000	NULL	0	true	0	0
6674	"files"	6623	NULL	0	true	0	0
6687	"sq"	6623	NULL	0	true	0	0
6706	"rg"	6623	NULL	0	true	0	0
6718	"pg"	6623	NULL	0	true	0	0
6731	"export"	6623	NULL	0	true	0	0
6802	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 3737 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	28	"res_0"	"oid"	63	0	0	0
2156	28	"arg_1"	"wrd"	64	0	1	1
2157	29	"res_0"	"oid"	63	0	0	0
2158	29	"arg_1"	"oid"	63	0	1	1
2159	30	"res_0"	"wrd"	64	0	0	0
2160	30	"arg_1"	"any"	0	0	1	1
2161	31	"res_0"	"wrd"	64	0	0	0
2162	31	"arg_1"	"wrd"	64	0	1	1
2163	31	"arg_2"	"int"	32	0	1	2
2164	31	"arg_3"	"any"	0	0	1	3
2165	32	"res_0"	"boolean"	1	0	0	0
2166	32	"arg_1"	"any"	0	0	1	1
2167	32	"arg_2"	"any"	0	0	1	2
2168	33	"res_0"	"boolean"	1	0	0	0
2169	33	"arg_1"	"any"	0	0	1	1
2170	33	"arg_2"	"any"	0	0	1	2
2171	34	"res_0"	"boolean"	1	0	0	0
2172	34	"arg_1"	"any"	0	0	1	1
2173	35	"res_0"	"boolean"	1	0	0	0
2174	35	"arg_1"	"any"	0	0	1	1
2175	35	"arg_2"	"any"	0	0	1	2
2176	36	"res_0"	"boolean"	1	0	0	0
2177	36	"arg_1"	"any"	0	0	1	1
2178	36	"arg_2"	"any"	0	0	1	2
2179	37	"res_0"	"boolean"	1	0	0	0
2180	37	"arg_1"	"any"	0	0	1	1
2181	37	"arg_2"	"any"	0	0	1	2
2182	38	"res_0"	"boolean"	1	0	0	0
2183	38	"arg_1"	"any"	0	0	1	1
2184	38	"arg_2"	"any"	0	0	1	2
2185	42	"res_0"	"boolean"	1	0	0	0
2186	42	"arg_1"	"any"	0	0	1	1
2187	42	"arg_2"	"any"	0	0	1	2
2188	43	"res_0"	"oid"	63	0	0	0
2189	43	"arg_1"	"any"	0	0	1	1
2190	44	"res_0"	"int"	32	0	0	0
2191	44	"arg_1"	"any"	0	0	1	1
2192	45	"res_0"	"oid"	63	0	0	0
2193	45	"arg_1"	"any"	0	0	1	1
2194	45	"arg_2"	"varchar"	0	0	1	2
2195	45	"arg_3"	"varchar"	0	0	1	3
2196	48	"res_0"	"any"	0	0	0	0
2197	48	"arg_1"	"any"	0	0	1	1
2198	48	"arg_2"	"any"	0	0	1	2
2199	49	"res_0"	"any"	0	0	0	0
2200	49	"arg_1"	"any"	0	0	1	1
2201	49	"arg_2"	"any"	0	0	1	2
2202	50	"res_0"	"any"	0	0	0	0
2203	50	"arg_1"	"boolean"	1	0	1	1
2204	50	"arg_2"	"any"	0	0	1	2
2205	50	"arg_3"	"any"	0	0	1	3
2206	68	"res_0"	"oid"	63	0	0	0
2207	68	"arg_1"	"oid"	63	0	1	1
2208	68	"arg_2"	"oid"	63	0	1	2
2209	69	"res_0"	"tinyint"	8	0	0	0
2210	69	"arg_1"	"tinyint"	8	0	1	1
2211	69	"arg_2"	"tinyint"	8	0	1	2
2212	70	"res_0"	"smallint"	16	0	0	0
2213	70	"arg_1"	"smallint"	16	0	1	1
2214	70	"arg_2"	"smallint"	16	0	1	2
2215	71	"res_0"	"int"	32	0	0	0
2216	71	"arg_1"	"int"	32	0	1	1
2217	71	"arg_2"	"int"	32	0	1	2
2218	72	"res_0"	"bigint"	64	0	0	0
2219	72	"arg_1"	"bigint"	64	0	1	1
2220	72	"arg_2"	"bigint"	64	0	1	2
2221	73	"res_0"	"wrd"	64	0	0	0
2222	73	"arg_1"	"wrd"	64	0	1	1
2223	73	"arg_2"	"wrd"	64	0	1	2
2224	74	"res_0"	"decimal"	2	0	0	0
2225	74	"arg_1"	"decimal"	2	0	1	1
2226	74	"arg_2"	"decimal"	2	0	1	2
2227	75	"res_0"	"decimal"	4	0	0	0
2228	75	"arg_1"	"decimal"	4	0	1	1
2229	75	"arg_2"	"decimal"	4	0	1	2
2230	76	"res_0"	"decimal"	9	0	0	0
2231	76	"arg_1"	"decimal"	9	0	1	1
2232	76	"arg_2"	"decimal"	9	0	1	2
2233	77	"res_0"	"decimal"	19	0	0	0
2234	77	"arg_1"	"decimal"	19	0	1	1
2235	77	"arg_2"	"decimal"	19	0	1	2
2236	78	"res_0"	"real"	24	0	0	0
2237	78	"arg_1"	"real"	24	0	1	1
2238	78	"arg_2"	"real"	24	0	1	2
2239	79	"res_0"	"double"	53	0	0	0
2240	79	"arg_1"	"double"	53	0	1	1
2241	79	"arg_2"	"double"	53	0	1	2
2242	89	"res_0"	"boolean"	1	0	0	0
2243	89	"arg_1"	"any"	0	0	1	1
2244	90	"res_0"	"boolean"	1	0	0	0
2245	90	"arg_1"	"boolean"	1	0	1	1
2246	90	"arg_2"	"any"	0	0	1	2
2247	91	"res_0"	"int"	32	0	0	0
2248	91	"arg_1"	"any"	0	0	1	1
2249	91	"arg_2"	"boolean"	1	0	1	2
2250	91	"arg_3"	"boolean"	1	0	1	3
2251	92	"res_0"	"int"	32	0	0	0
2252	92	"arg_1"	"any"	0	0	1	1
2253	92	"arg_2"	"boolean"	1	0	1	2
2254	92	"arg_3"	"boolean"	1	0	1	3
2255	93	"res_0"	"int"	32	0	0	0
2256	93	"arg_1"	"any"	0	0	1	1
2257	93	"arg_2"	"boolean"	1	0	1	2
2258	93	"arg_3"	"boolean"	1	0	1	3
2259	94	"res_0"	"boolean"	1	0	0	0
2260	94	"arg_1"	"boolean"	1	0	1	1
2261	94	"arg_2"	"boolean"	1	0	1	2
2262	95	"res_0"	"boolean"	1	0	0	0
2263	95	"arg_1"	"boolean"	1	0	1	1
2264	95	"arg_2"	"boolean"	1	0	1	2
2265	96	"res_0"	"boolean"	1	0	0	0
2266	96	"arg_1"	"boolean"	1	0	1	1
2267	96	"arg_2"	"boolean"	1	0	1	2
2268	97	"res_0"	"boolean"	1	0	0	0
2269	97	"arg_1"	"boolean"	1	0	1	1
2270	98	"res_0"	"oid"	63	0	0	0
2271	98	"arg_1"	"oid"	63	0	1	1
2272	98	"arg_2"	"oid"	63	0	1	2
2273	99	"res_0"	"oid"	63	0	0	0
2274	99	"arg_1"	"oid"	63	0	1	1
2275	99	"arg_2"	"oid"	63	0	1	2
2276	100	"res_0"	"oid"	63	0	0	0
2277	100	"arg_1"	"oid"	63	0	1	1
2278	100	"arg_2"	"oid"	63	0	1	2
2279	101	"res_0"	"oid"	63	0	0	0
2280	101	"arg_1"	"oid"	63	0	1	1
2281	101	"arg_2"	"oid"	63	0	1	2
2282	102	"res_0"	"oid"	63	0	0	0
2283	102	"arg_1"	"oid"	63	0	1	1
2284	102	"arg_2"	"oid"	63	0	1	2
2285	103	"res_0"	"oid"	63	0	0	0
2286	103	"arg_1"	"oid"	63	0	1	1
2287	103	"arg_2"	"oid"	63	0	1	2
2288	104	"res_0"	"oid"	63	0	0	0
2289	104	"arg_1"	"oid"	63	0	1	1
2290	104	"arg_2"	"oid"	63	0	1	2
2291	105	"res_0"	"oid"	63	0	0	0
2292	105	"arg_1"	"oid"	63	0	1	1
2293	106	"res_0"	"oid"	63	0	0	0
2294	106	"arg_1"	"oid"	63	0	1	1
2295	106	"arg_2"	"int"	32	0	1	2
2296	107	"res_0"	"oid"	63	0	0	0
2297	107	"arg_1"	"oid"	63	0	1	1
2298	107	"arg_2"	"int"	32	0	1	2
2299	108	"res_0"	"oid"	63	0	0	0
2300	108	"arg_1"	"oid"	63	0	1	1
2301	109	"res_0"	"oid"	63	0	0	0
2302	109	"arg_1"	"oid"	63	0	1	1
2303	110	"res_0"	"tinyint"	8	0	0	0
2304	110	"arg_1"	"oid"	63	0	1	1
2305	111	"res_0"	"oid"	63	0	0	0
2306	111	"arg_1"	"oid"	63	0	1	1
2307	111	"arg_2"	"oid"	63	0	1	2
2308	112	"res_0"	"oid"	63	0	0	0
2309	112	"arg_1"	"oid"	63	0	1	1
2310	112	"arg_2"	"oid"	63	0	1	2
2311	113	"res_0"	"month_interval"	32	0	0	0
2312	113	"arg_1"	"month_interval"	32	0	1	1
2313	113	"arg_2"	"oid"	63	0	1	2
2314	114	"res_0"	"month_interval"	32	0	0	0
2315	114	"arg_1"	"month_interval"	32	0	1	1
2316	114	"arg_2"	"oid"	63	0	1	2
2317	115	"res_0"	"month_interval"	32	0	0	0
2318	115	"arg_1"	"month_interval"	32	0	1	1
2319	115	"arg_2"	"oid"	63	0	1	2
2320	116	"res_0"	"month_interval"	32	0	0	0
2321	116	"arg_1"	"month_interval"	32	0	1	1
2322	116	"arg_2"	"oid"	63	0	1	2
2323	117	"res_0"	"sec_interval"	13	0	0	0
2324	117	"arg_1"	"sec_interval"	13	0	1	1
2325	117	"arg_2"	"oid"	63	0	1	2
2326	118	"res_0"	"sec_interval"	13	0	0	0
2327	118	"arg_1"	"sec_interval"	13	0	1	1
2328	118	"arg_2"	"oid"	63	0	1	2
2329	119	"res_0"	"sec_interval"	13	0	0	0
2330	119	"arg_1"	"sec_interval"	13	0	1	1
2331	119	"arg_2"	"oid"	63	0	1	2
2332	120	"res_0"	"sec_interval"	13	0	0	0
2333	120	"arg_1"	"sec_interval"	13	0	1	1
2334	120	"arg_2"	"oid"	63	0	1	2
2335	121	"res_0"	"tinyint"	8	0	0	0
2336	121	"arg_1"	"tinyint"	8	0	1	1
2337	121	"arg_2"	"tinyint"	8	0	1	2
2338	122	"res_0"	"tinyint"	8	0	0	0
2339	122	"arg_1"	"tinyint"	8	0	1	1
2340	122	"arg_2"	"tinyint"	8	0	1	2
2341	123	"res_0"	"tinyint"	8	0	0	0
2342	123	"arg_1"	"tinyint"	8	0	1	1
2343	123	"arg_2"	"tinyint"	8	0	1	2
2344	124	"res_0"	"tinyint"	8	0	0	0
2345	124	"arg_1"	"tinyint"	8	0	1	1
2346	124	"arg_2"	"tinyint"	8	0	1	2
2347	125	"res_0"	"tinyint"	8	0	0	0
2348	125	"arg_1"	"tinyint"	8	0	1	1
2349	125	"arg_2"	"tinyint"	8	0	1	2
2350	126	"res_0"	"tinyint"	8	0	0	0
2351	126	"arg_1"	"tinyint"	8	0	1	1
2352	126	"arg_2"	"tinyint"	8	0	1	2
2353	127	"res_0"	"tinyint"	8	0	0	0
2354	127	"arg_1"	"tinyint"	8	0	1	1
2355	127	"arg_2"	"tinyint"	8	0	1	2
2356	128	"res_0"	"tinyint"	8	0	0	0
2357	128	"arg_1"	"tinyint"	8	0	1	1
2358	129	"res_0"	"tinyint"	8	0	0	0
2359	129	"arg_1"	"tinyint"	8	0	1	1
2360	129	"arg_2"	"int"	32	0	1	2
2361	130	"res_0"	"tinyint"	8	0	0	0
2362	130	"arg_1"	"tinyint"	8	0	1	1
2363	130	"arg_2"	"int"	32	0	1	2
2364	131	"res_0"	"tinyint"	8	0	0	0
2365	131	"arg_1"	"tinyint"	8	0	1	1
2366	132	"res_0"	"tinyint"	8	0	0	0
2367	132	"arg_1"	"tinyint"	8	0	1	1
2368	133	"res_0"	"tinyint"	8	0	0	0
2369	133	"arg_1"	"tinyint"	8	0	1	1
2370	134	"res_0"	"tinyint"	8	0	0	0
2371	134	"arg_1"	"tinyint"	8	0	1	1
2372	134	"arg_2"	"tinyint"	8	0	1	2
2373	135	"res_0"	"tinyint"	8	0	0	0
2374	135	"arg_1"	"tinyint"	8	0	1	1
2375	135	"arg_2"	"tinyint"	8	0	1	2
2376	136	"res_0"	"month_interval"	32	0	0	0
2377	136	"arg_1"	"month_interval"	32	0	1	1
2378	136	"arg_2"	"tinyint"	8	0	1	2
2379	137	"res_0"	"month_interval"	32	0	0	0
2380	137	"arg_1"	"month_interval"	32	0	1	1
2381	137	"arg_2"	"tinyint"	8	0	1	2
2382	138	"res_0"	"month_interval"	32	0	0	0
2383	138	"arg_1"	"month_interval"	32	0	1	1
2384	138	"arg_2"	"tinyint"	8	0	1	2
2385	139	"res_0"	"month_interval"	32	0	0	0
2386	139	"arg_1"	"month_interval"	32	0	1	1
2387	139	"arg_2"	"tinyint"	8	0	1	2
2388	140	"res_0"	"sec_interval"	13	0	0	0
2389	140	"arg_1"	"sec_interval"	13	0	1	1
2390	140	"arg_2"	"tinyint"	8	0	1	2
2391	141	"res_0"	"sec_interval"	13	0	0	0
2392	141	"arg_1"	"sec_interval"	13	0	1	1
2393	141	"arg_2"	"tinyint"	8	0	1	2
2394	142	"res_0"	"sec_interval"	13	0	0	0
2395	142	"arg_1"	"sec_interval"	13	0	1	1
2396	142	"arg_2"	"tinyint"	8	0	1	2
2397	143	"res_0"	"sec_interval"	13	0	0	0
2398	143	"arg_1"	"sec_interval"	13	0	1	1
2399	143	"arg_2"	"tinyint"	8	0	1	2
2400	144	"res_0"	"smallint"	16	0	0	0
2401	144	"arg_1"	"smallint"	16	0	1	1
2402	144	"arg_2"	"smallint"	16	0	1	2
2403	145	"res_0"	"smallint"	16	0	0	0
2404	145	"arg_1"	"smallint"	16	0	1	1
2405	145	"arg_2"	"smallint"	16	0	1	2
2406	146	"res_0"	"smallint"	16	0	0	0
2407	146	"arg_1"	"smallint"	16	0	1	1
2408	146	"arg_2"	"smallint"	16	0	1	2
2409	147	"res_0"	"smallint"	16	0	0	0
2410	147	"arg_1"	"smallint"	16	0	1	1
2411	147	"arg_2"	"smallint"	16	0	1	2
2412	148	"res_0"	"smallint"	16	0	0	0
2413	148	"arg_1"	"smallint"	16	0	1	1
2414	148	"arg_2"	"smallint"	16	0	1	2
2415	149	"res_0"	"smallint"	16	0	0	0
2416	149	"arg_1"	"smallint"	16	0	1	1
2417	149	"arg_2"	"smallint"	16	0	1	2
2418	150	"res_0"	"smallint"	16	0	0	0
2419	150	"arg_1"	"smallint"	16	0	1	1
2420	150	"arg_2"	"smallint"	16	0	1	2
2421	151	"res_0"	"smallint"	16	0	0	0
2422	151	"arg_1"	"smallint"	16	0	1	1
2423	152	"res_0"	"smallint"	16	0	0	0
2424	152	"arg_1"	"smallint"	16	0	1	1
2425	152	"arg_2"	"int"	32	0	1	2
2426	153	"res_0"	"smallint"	16	0	0	0
2427	153	"arg_1"	"smallint"	16	0	1	1
2428	153	"arg_2"	"int"	32	0	1	2
2429	154	"res_0"	"smallint"	16	0	0	0
2430	154	"arg_1"	"smallint"	16	0	1	1
2431	155	"res_0"	"smallint"	16	0	0	0
2432	155	"arg_1"	"smallint"	16	0	1	1
2433	156	"res_0"	"tinyint"	8	0	0	0
2434	156	"arg_1"	"smallint"	16	0	1	1
2435	157	"res_0"	"smallint"	16	0	0	0
2436	157	"arg_1"	"smallint"	16	0	1	1
2437	157	"arg_2"	"smallint"	16	0	1	2
2438	158	"res_0"	"smallint"	16	0	0	0
2439	158	"arg_1"	"smallint"	16	0	1	1
2440	158	"arg_2"	"smallint"	16	0	1	2
2441	159	"res_0"	"month_interval"	32	0	0	0
2442	159	"arg_1"	"month_interval"	32	0	1	1
2443	159	"arg_2"	"smallint"	16	0	1	2
2444	160	"res_0"	"month_interval"	32	0	0	0
2445	160	"arg_1"	"month_interval"	32	0	1	1
2446	160	"arg_2"	"smallint"	16	0	1	2
2447	161	"res_0"	"month_interval"	32	0	0	0
2448	161	"arg_1"	"month_interval"	32	0	1	1
2449	161	"arg_2"	"smallint"	16	0	1	2
2450	162	"res_0"	"month_interval"	32	0	0	0
2451	162	"arg_1"	"month_interval"	32	0	1	1
2452	162	"arg_2"	"smallint"	16	0	1	2
2453	163	"res_0"	"sec_interval"	13	0	0	0
2454	163	"arg_1"	"sec_interval"	13	0	1	1
2455	163	"arg_2"	"smallint"	16	0	1	2
2456	164	"res_0"	"sec_interval"	13	0	0	0
2457	164	"arg_1"	"sec_interval"	13	0	1	1
2458	164	"arg_2"	"smallint"	16	0	1	2
2459	165	"res_0"	"sec_interval"	13	0	0	0
2460	165	"arg_1"	"sec_interval"	13	0	1	1
2461	165	"arg_2"	"smallint"	16	0	1	2
2462	166	"res_0"	"sec_interval"	13	0	0	0
2463	166	"arg_1"	"sec_interval"	13	0	1	1
2464	166	"arg_2"	"smallint"	16	0	1	2
2465	167	"res_0"	"int"	32	0	0	0
2466	167	"arg_1"	"int"	32	0	1	1
2467	167	"arg_2"	"int"	32	0	1	2
2468	168	"res_0"	"int"	32	0	0	0
2469	168	"arg_1"	"int"	32	0	1	1
2470	168	"arg_2"	"int"	32	0	1	2
2471	169	"res_0"	"int"	32	0	0	0
2472	169	"arg_1"	"int"	32	0	1	1
2473	169	"arg_2"	"int"	32	0	1	2
2474	170	"res_0"	"int"	32	0	0	0
2475	170	"arg_1"	"int"	32	0	1	1
2476	170	"arg_2"	"int"	32	0	1	2
2477	171	"res_0"	"int"	32	0	0	0
2478	171	"arg_1"	"int"	32	0	1	1
2479	171	"arg_2"	"int"	32	0	1	2
2480	172	"res_0"	"int"	32	0	0	0
2481	172	"arg_1"	"int"	32	0	1	1
2482	172	"arg_2"	"int"	32	0	1	2
2483	173	"res_0"	"int"	32	0	0	0
2484	173	"arg_1"	"int"	32	0	1	1
2485	173	"arg_2"	"int"	32	0	1	2
2486	174	"res_0"	"int"	32	0	0	0
2487	174	"arg_1"	"int"	32	0	1	1
2488	175	"res_0"	"int"	32	0	0	0
2489	175	"arg_1"	"int"	32	0	1	1
2490	175	"arg_2"	"int"	32	0	1	2
2491	176	"res_0"	"int"	32	0	0	0
2492	176	"arg_1"	"int"	32	0	1	1
2493	176	"arg_2"	"int"	32	0	1	2
2494	177	"res_0"	"int"	32	0	0	0
2495	177	"arg_1"	"int"	32	0	1	1
2496	178	"res_0"	"int"	32	0	0	0
2497	178	"arg_1"	"int"	32	0	1	1
2498	179	"res_0"	"tinyint"	8	0	0	0
2499	179	"arg_1"	"int"	32	0	1	1
2500	180	"res_0"	"int"	32	0	0	0
2501	180	"arg_1"	"int"	32	0	1	1
2502	180	"arg_2"	"int"	32	0	1	2
2503	181	"res_0"	"int"	32	0	0	0
2504	181	"arg_1"	"int"	32	0	1	1
2505	181	"arg_2"	"int"	32	0	1	2
2506	182	"res_0"	"month_interval"	32	0	0	0
2507	182	"arg_1"	"month_interval"	32	0	1	1
2508	182	"arg_2"	"int"	32	0	1	2
2509	183	"res_0"	"month_interval"	32	0	0	0
2510	183	"arg_1"	"month_interval"	32	0	1	1
2511	183	"arg_2"	"int"	32	0	1	2
2512	184	"res_0"	"month_interval"	32	0	0	0
2513	184	"arg_1"	"month_interval"	32	0	1	1
2514	184	"arg_2"	"int"	32	0	1	2
2515	185	"res_0"	"month_interval"	32	0	0	0
2516	185	"arg_1"	"month_interval"	32	0	1	1
2517	185	"arg_2"	"int"	32	0	1	2
2518	186	"res_0"	"sec_interval"	13	0	0	0
2519	186	"arg_1"	"sec_interval"	13	0	1	1
2520	186	"arg_2"	"int"	32	0	1	2
2521	187	"res_0"	"sec_interval"	13	0	0	0
2522	187	"arg_1"	"sec_interval"	13	0	1	1
2523	187	"arg_2"	"int"	32	0	1	2
2524	188	"res_0"	"sec_interval"	13	0	0	0
2525	188	"arg_1"	"sec_interval"	13	0	1	1
2526	188	"arg_2"	"int"	32	0	1	2
2527	189	"res_0"	"sec_interval"	13	0	0	0
2528	189	"arg_1"	"sec_interval"	13	0	1	1
2529	189	"arg_2"	"int"	32	0	1	2
2530	190	"res_0"	"bigint"	64	0	0	0
2531	190	"arg_1"	"bigint"	64	0	1	1
2532	190	"arg_2"	"bigint"	64	0	1	2
2533	191	"res_0"	"bigint"	64	0	0	0
2534	191	"arg_1"	"bigint"	64	0	1	1
2535	191	"arg_2"	"bigint"	64	0	1	2
2536	192	"res_0"	"bigint"	64	0	0	0
2537	192	"arg_1"	"bigint"	64	0	1	1
2538	192	"arg_2"	"bigint"	64	0	1	2
2539	193	"res_0"	"bigint"	64	0	0	0
2540	193	"arg_1"	"bigint"	64	0	1	1
2541	193	"arg_2"	"bigint"	64	0	1	2
2542	194	"res_0"	"bigint"	64	0	0	0
2543	194	"arg_1"	"bigint"	64	0	1	1
2544	194	"arg_2"	"bigint"	64	0	1	2
2545	195	"res_0"	"bigint"	64	0	0	0
2546	195	"arg_1"	"bigint"	64	0	1	1
2547	195	"arg_2"	"bigint"	64	0	1	2
2548	196	"res_0"	"bigint"	64	0	0	0
2549	196	"arg_1"	"bigint"	64	0	1	1
2550	196	"arg_2"	"bigint"	64	0	1	2
2551	197	"res_0"	"bigint"	64	0	0	0
2552	197	"arg_1"	"bigint"	64	0	1	1
2553	198	"res_0"	"bigint"	64	0	0	0
2554	198	"arg_1"	"bigint"	64	0	1	1
2555	198	"arg_2"	"int"	32	0	1	2
2556	199	"res_0"	"bigint"	64	0	0	0
2557	199	"arg_1"	"bigint"	64	0	1	1
2558	199	"arg_2"	"int"	32	0	1	2
2559	200	"res_0"	"bigint"	64	0	0	0
2560	200	"arg_1"	"bigint"	64	0	1	1
2561	201	"res_0"	"bigint"	64	0	0	0
2562	201	"arg_1"	"bigint"	64	0	1	1
2563	202	"res_0"	"tinyint"	8	0	0	0
2564	202	"arg_1"	"bigint"	64	0	1	1
2565	203	"res_0"	"bigint"	64	0	0	0
2566	203	"arg_1"	"bigint"	64	0	1	1
2567	203	"arg_2"	"bigint"	64	0	1	2
2568	204	"res_0"	"bigint"	64	0	0	0
2569	204	"arg_1"	"bigint"	64	0	1	1
2570	204	"arg_2"	"bigint"	64	0	1	2
2571	205	"res_0"	"month_interval"	32	0	0	0
2572	205	"arg_1"	"month_interval"	32	0	1	1
2573	205	"arg_2"	"bigint"	64	0	1	2
2574	206	"res_0"	"month_interval"	32	0	0	0
2575	206	"arg_1"	"month_interval"	32	0	1	1
2576	206	"arg_2"	"bigint"	64	0	1	2
2577	207	"res_0"	"month_interval"	32	0	0	0
2578	207	"arg_1"	"month_interval"	32	0	1	1
2579	207	"arg_2"	"bigint"	64	0	1	2
2580	208	"res_0"	"month_interval"	32	0	0	0
2581	208	"arg_1"	"month_interval"	32	0	1	1
2582	208	"arg_2"	"bigint"	64	0	1	2
2583	209	"res_0"	"sec_interval"	13	0	0	0
2584	209	"arg_1"	"sec_interval"	13	0	1	1
2585	209	"arg_2"	"bigint"	64	0	1	2
2586	210	"res_0"	"sec_interval"	13	0	0	0
2587	210	"arg_1"	"sec_interval"	13	0	1	1
2588	210	"arg_2"	"bigint"	64	0	1	2
2589	211	"res_0"	"sec_interval"	13	0	0	0
2590	211	"arg_1"	"sec_interval"	13	0	1	1
2591	211	"arg_2"	"bigint"	64	0	1	2
2592	212	"res_0"	"sec_interval"	13	0	0	0
2593	212	"arg_1"	"sec_interval"	13	0	1	1
2594	212	"arg_2"	"bigint"	64	0	1	2
2595	213	"res_0"	"wrd"	64	0	0	0
2596	213	"arg_1"	"wrd"	64	0	1	1
2597	213	"arg_2"	"wrd"	64	0	1	2
2598	214	"res_0"	"wrd"	64	0	0	0
2599	214	"arg_1"	"wrd"	64	0	1	1
2600	214	"arg_2"	"wrd"	64	0	1	2
2601	215	"res_0"	"wrd"	64	0	0	0
2602	215	"arg_1"	"wrd"	64	0	1	1
2603	215	"arg_2"	"wrd"	64	0	1	2
2604	216	"res_0"	"wrd"	64	0	0	0
2605	216	"arg_1"	"wrd"	64	0	1	1
2606	216	"arg_2"	"wrd"	64	0	1	2
2607	217	"res_0"	"wrd"	64	0	0	0
2608	217	"arg_1"	"wrd"	64	0	1	1
2609	217	"arg_2"	"wrd"	64	0	1	2
2610	218	"res_0"	"wrd"	64	0	0	0
2611	218	"arg_1"	"wrd"	64	0	1	1
2612	218	"arg_2"	"wrd"	64	0	1	2
2613	219	"res_0"	"wrd"	64	0	0	0
2614	219	"arg_1"	"wrd"	64	0	1	1
2615	219	"arg_2"	"wrd"	64	0	1	2
2616	220	"res_0"	"wrd"	64	0	0	0
2617	220	"arg_1"	"wrd"	64	0	1	1
2618	221	"res_0"	"wrd"	64	0	0	0
2619	221	"arg_1"	"wrd"	64	0	1	1
2620	221	"arg_2"	"int"	32	0	1	2
2621	222	"res_0"	"wrd"	64	0	0	0
2622	222	"arg_1"	"wrd"	64	0	1	1
2623	222	"arg_2"	"int"	32	0	1	2
2624	223	"res_0"	"wrd"	64	0	0	0
2625	223	"arg_1"	"wrd"	64	0	1	1
2626	224	"res_0"	"wrd"	64	0	0	0
2627	224	"arg_1"	"wrd"	64	0	1	1
2628	225	"res_0"	"tinyint"	8	0	0	0
2629	225	"arg_1"	"wrd"	64	0	1	1
2630	226	"res_0"	"wrd"	64	0	0	0
2631	226	"arg_1"	"wrd"	64	0	1	1
2632	226	"arg_2"	"wrd"	64	0	1	2
2633	227	"res_0"	"wrd"	64	0	0	0
2634	227	"arg_1"	"wrd"	64	0	1	1
2635	227	"arg_2"	"wrd"	64	0	1	2
2636	228	"res_0"	"month_interval"	32	0	0	0
2637	228	"arg_1"	"month_interval"	32	0	1	1
2638	228	"arg_2"	"wrd"	64	0	1	2
2639	229	"res_0"	"month_interval"	32	0	0	0
2640	229	"arg_1"	"month_interval"	32	0	1	1
2641	229	"arg_2"	"wrd"	64	0	1	2
2642	230	"res_0"	"month_interval"	32	0	0	0
2643	230	"arg_1"	"month_interval"	32	0	1	1
2644	230	"arg_2"	"wrd"	64	0	1	2
2645	231	"res_0"	"month_interval"	32	0	0	0
2646	231	"arg_1"	"month_interval"	32	0	1	1
2647	231	"arg_2"	"wrd"	64	0	1	2
2648	232	"res_0"	"sec_interval"	13	0	0	0
2649	232	"arg_1"	"sec_interval"	13	0	1	1
2650	232	"arg_2"	"wrd"	64	0	1	2
2651	233	"res_0"	"sec_interval"	13	0	0	0
2652	233	"arg_1"	"sec_interval"	13	0	1	1
2653	233	"arg_2"	"wrd"	64	0	1	2
2654	234	"res_0"	"sec_interval"	13	0	0	0
2655	234	"arg_1"	"sec_interval"	13	0	1	1
2656	234	"arg_2"	"wrd"	64	0	1	2
2657	235	"res_0"	"sec_interval"	13	0	0	0
2658	235	"arg_1"	"sec_interval"	13	0	1	1
2659	235	"arg_2"	"wrd"	64	0	1	2
2660	236	"res_0"	"decimal"	2	0	0	0
2661	236	"arg_1"	"decimal"	2	0	1	1
2662	236	"arg_2"	"decimal"	2	0	1	2
2663	237	"res_0"	"decimal"	2	0	0	0
2664	237	"arg_1"	"decimal"	2	0	1	1
2665	237	"arg_2"	"decimal"	2	0	1	2
2666	238	"res_0"	"decimal"	2	0	0	0
2667	238	"arg_1"	"decimal"	2	0	1	1
2668	238	"arg_2"	"decimal"	2	0	1	2
2669	239	"res_0"	"decimal"	2	0	0	0
2670	239	"arg_1"	"decimal"	2	0	1	1
2671	239	"arg_2"	"decimal"	2	0	1	2
2672	240	"res_0"	"decimal"	2	0	0	0
2673	240	"arg_1"	"decimal"	2	0	1	1
2674	240	"arg_2"	"decimal"	2	0	1	2
2675	241	"res_0"	"decimal"	2	0	0	0
2676	241	"arg_1"	"decimal"	2	0	1	1
2677	241	"arg_2"	"decimal"	2	0	1	2
2678	242	"res_0"	"decimal"	2	0	0	0
2679	242	"arg_1"	"decimal"	2	0	1	1
2680	242	"arg_2"	"decimal"	2	0	1	2
2681	243	"res_0"	"decimal"	2	0	0	0
2682	243	"arg_1"	"decimal"	2	0	1	1
2683	244	"res_0"	"decimal"	2	0	0	0
2684	244	"arg_1"	"decimal"	2	0	1	1
2685	244	"arg_2"	"int"	32	0	1	2
2686	245	"res_0"	"decimal"	2	0	0	0
2687	245	"arg_1"	"decimal"	2	0	1	1
2688	245	"arg_2"	"int"	32	0	1	2
2689	246	"res_0"	"decimal"	2	0	0	0
2690	246	"arg_1"	"decimal"	2	0	1	1
2691	247	"res_0"	"decimal"	2	0	0	0
2692	247	"arg_1"	"decimal"	2	0	1	1
2693	248	"res_0"	"tinyint"	8	0	0	0
2694	248	"arg_1"	"decimal"	2	0	1	1
2695	249	"res_0"	"decimal"	2	0	0	0
2696	249	"arg_1"	"decimal"	2	0	1	1
2697	249	"arg_2"	"tinyint"	8	0	1	2
2698	250	"res_0"	"decimal"	2	0	0	0
2699	250	"arg_1"	"decimal"	2	0	1	1
2700	250	"arg_2"	"tinyint"	8	0	1	2
2701	251	"res_0"	"month_interval"	32	0	0	0
2702	251	"arg_1"	"month_interval"	32	0	1	1
2703	251	"arg_2"	"decimal"	2	0	1	2
2704	252	"res_0"	"month_interval"	32	0	0	0
2705	252	"arg_1"	"month_interval"	32	0	1	1
2706	252	"arg_2"	"decimal"	2	0	1	2
2707	253	"res_0"	"month_interval"	32	0	0	0
2708	253	"arg_1"	"month_interval"	32	0	1	1
2709	253	"arg_2"	"decimal"	2	0	1	2
2710	254	"res_0"	"month_interval"	32	0	0	0
2711	254	"arg_1"	"month_interval"	32	0	1	1
2712	254	"arg_2"	"decimal"	2	0	1	2
2713	255	"res_0"	"sec_interval"	13	0	0	0
2714	255	"arg_1"	"sec_interval"	13	0	1	1
2715	255	"arg_2"	"decimal"	2	0	1	2
2716	256	"res_0"	"sec_interval"	13	0	0	0
2717	256	"arg_1"	"sec_interval"	13	0	1	1
2718	256	"arg_2"	"decimal"	2	0	1	2
2719	257	"res_0"	"sec_interval"	13	0	0	0
2720	257	"arg_1"	"sec_interval"	13	0	1	1
2721	257	"arg_2"	"decimal"	2	0	1	2
2722	258	"res_0"	"sec_interval"	13	0	0	0
2723	258	"arg_1"	"sec_interval"	13	0	1	1
2724	258	"arg_2"	"decimal"	2	0	1	2
2725	259	"res_0"	"decimal"	4	0	0	0
2726	259	"arg_1"	"decimal"	4	0	1	1
2727	259	"arg_2"	"decimal"	4	0	1	2
2728	260	"res_0"	"decimal"	4	0	0	0
2729	260	"arg_1"	"decimal"	4	0	1	1
2730	260	"arg_2"	"decimal"	4	0	1	2
2731	261	"res_0"	"decimal"	4	0	0	0
2732	261	"arg_1"	"decimal"	4	0	1	1
2733	261	"arg_2"	"decimal"	4	0	1	2
2734	262	"res_0"	"decimal"	4	0	0	0
2735	262	"arg_1"	"decimal"	4	0	1	1
2736	262	"arg_2"	"decimal"	4	0	1	2
2737	263	"res_0"	"decimal"	4	0	0	0
2738	263	"arg_1"	"decimal"	4	0	1	1
2739	263	"arg_2"	"decimal"	4	0	1	2
2740	264	"res_0"	"decimal"	4	0	0	0
2741	264	"arg_1"	"decimal"	4	0	1	1
2742	264	"arg_2"	"decimal"	4	0	1	2
2743	265	"res_0"	"decimal"	4	0	0	0
2744	265	"arg_1"	"decimal"	4	0	1	1
2745	265	"arg_2"	"decimal"	4	0	1	2
2746	266	"res_0"	"decimal"	4	0	0	0
2747	266	"arg_1"	"decimal"	4	0	1	1
2748	267	"res_0"	"decimal"	4	0	0	0
2749	267	"arg_1"	"decimal"	4	0	1	1
2750	267	"arg_2"	"int"	32	0	1	2
2751	268	"res_0"	"decimal"	4	0	0	0
2752	268	"arg_1"	"decimal"	4	0	1	1
2753	268	"arg_2"	"int"	32	0	1	2
2754	269	"res_0"	"decimal"	4	0	0	0
2755	269	"arg_1"	"decimal"	4	0	1	1
2756	270	"res_0"	"decimal"	4	0	0	0
2757	270	"arg_1"	"decimal"	4	0	1	1
2758	271	"res_0"	"tinyint"	8	0	0	0
2759	271	"arg_1"	"decimal"	4	0	1	1
2760	272	"res_0"	"decimal"	4	0	0	0
2761	272	"arg_1"	"decimal"	4	0	1	1
2762	272	"arg_2"	"smallint"	16	0	1	2
2763	273	"res_0"	"decimal"	4	0	0	0
2764	273	"arg_1"	"decimal"	4	0	1	1
2765	273	"arg_2"	"smallint"	16	0	1	2
2766	274	"res_0"	"month_interval"	32	0	0	0
2767	274	"arg_1"	"month_interval"	32	0	1	1
2768	274	"arg_2"	"decimal"	4	0	1	2
2769	275	"res_0"	"month_interval"	32	0	0	0
2770	275	"arg_1"	"month_interval"	32	0	1	1
2771	275	"arg_2"	"decimal"	4	0	1	2
2772	276	"res_0"	"month_interval"	32	0	0	0
2773	276	"arg_1"	"month_interval"	32	0	1	1
2774	276	"arg_2"	"decimal"	4	0	1	2
2775	277	"res_0"	"month_interval"	32	0	0	0
2776	277	"arg_1"	"month_interval"	32	0	1	1
2777	277	"arg_2"	"decimal"	4	0	1	2
2778	278	"res_0"	"sec_interval"	13	0	0	0
2779	278	"arg_1"	"sec_interval"	13	0	1	1
2780	278	"arg_2"	"decimal"	4	0	1	2
2781	279	"res_0"	"sec_interval"	13	0	0	0
2782	279	"arg_1"	"sec_interval"	13	0	1	1
2783	279	"arg_2"	"decimal"	4	0	1	2
2784	280	"res_0"	"sec_interval"	13	0	0	0
2785	280	"arg_1"	"sec_interval"	13	0	1	1
2786	280	"arg_2"	"decimal"	4	0	1	2
2787	281	"res_0"	"sec_interval"	13	0	0	0
2788	281	"arg_1"	"sec_interval"	13	0	1	1
2789	281	"arg_2"	"decimal"	4	0	1	2
2790	282	"res_0"	"decimal"	9	0	0	0
2791	282	"arg_1"	"decimal"	9	0	1	1
2792	282	"arg_2"	"decimal"	9	0	1	2
2793	283	"res_0"	"decimal"	9	0	0	0
2794	283	"arg_1"	"decimal"	9	0	1	1
2795	283	"arg_2"	"decimal"	9	0	1	2
2796	284	"res_0"	"decimal"	9	0	0	0
2797	284	"arg_1"	"decimal"	9	0	1	1
2798	284	"arg_2"	"decimal"	9	0	1	2
2799	285	"res_0"	"decimal"	9	0	0	0
2800	285	"arg_1"	"decimal"	9	0	1	1
2801	285	"arg_2"	"decimal"	9	0	1	2
2802	286	"res_0"	"decimal"	9	0	0	0
2803	286	"arg_1"	"decimal"	9	0	1	1
2804	286	"arg_2"	"decimal"	9	0	1	2
2805	287	"res_0"	"decimal"	9	0	0	0
2806	287	"arg_1"	"decimal"	9	0	1	1
2807	287	"arg_2"	"decimal"	9	0	1	2
2808	288	"res_0"	"decimal"	9	0	0	0
2809	288	"arg_1"	"decimal"	9	0	1	1
2810	288	"arg_2"	"decimal"	9	0	1	2
2811	289	"res_0"	"decimal"	9	0	0	0
2812	289	"arg_1"	"decimal"	9	0	1	1
2813	290	"res_0"	"decimal"	9	0	0	0
2814	290	"arg_1"	"decimal"	9	0	1	1
2815	290	"arg_2"	"int"	32	0	1	2
2816	291	"res_0"	"decimal"	9	0	0	0
2817	291	"arg_1"	"decimal"	9	0	1	1
2818	291	"arg_2"	"int"	32	0	1	2
2819	292	"res_0"	"decimal"	9	0	0	0
2820	292	"arg_1"	"decimal"	9	0	1	1
2821	293	"res_0"	"decimal"	9	0	0	0
2822	293	"arg_1"	"decimal"	9	0	1	1
2823	294	"res_0"	"tinyint"	8	0	0	0
2824	294	"arg_1"	"decimal"	9	0	1	1
2825	295	"res_0"	"decimal"	9	0	0	0
2826	295	"arg_1"	"decimal"	9	0	1	1
2827	295	"arg_2"	"int"	32	0	1	2
2828	296	"res_0"	"decimal"	9	0	0	0
2829	296	"arg_1"	"decimal"	9	0	1	1
2830	296	"arg_2"	"int"	32	0	1	2
2831	297	"res_0"	"month_interval"	32	0	0	0
2832	297	"arg_1"	"month_interval"	32	0	1	1
2833	297	"arg_2"	"decimal"	9	0	1	2
2834	298	"res_0"	"month_interval"	32	0	0	0
2835	298	"arg_1"	"month_interval"	32	0	1	1
2836	298	"arg_2"	"decimal"	9	0	1	2
2837	299	"res_0"	"month_interval"	32	0	0	0
2838	299	"arg_1"	"month_interval"	32	0	1	1
2839	299	"arg_2"	"decimal"	9	0	1	2
2840	300	"res_0"	"month_interval"	32	0	0	0
2841	300	"arg_1"	"month_interval"	32	0	1	1
2842	300	"arg_2"	"decimal"	9	0	1	2
2843	301	"res_0"	"sec_interval"	13	0	0	0
2844	301	"arg_1"	"sec_interval"	13	0	1	1
2845	301	"arg_2"	"decimal"	9	0	1	2
2846	302	"res_0"	"sec_interval"	13	0	0	0
2847	302	"arg_1"	"sec_interval"	13	0	1	1
2848	302	"arg_2"	"decimal"	9	0	1	2
2849	303	"res_0"	"sec_interval"	13	0	0	0
2850	303	"arg_1"	"sec_interval"	13	0	1	1
2851	303	"arg_2"	"decimal"	9	0	1	2
2852	304	"res_0"	"sec_interval"	13	0	0	0
2853	304	"arg_1"	"sec_interval"	13	0	1	1
2854	304	"arg_2"	"decimal"	9	0	1	2
2855	305	"res_0"	"decimal"	19	0	0	0
2856	305	"arg_1"	"decimal"	19	0	1	1
2857	305	"arg_2"	"decimal"	19	0	1	2
2858	306	"res_0"	"decimal"	19	0	0	0
2859	306	"arg_1"	"decimal"	19	0	1	1
2860	306	"arg_2"	"decimal"	19	0	1	2
2861	307	"res_0"	"decimal"	19	0	0	0
2862	307	"arg_1"	"decimal"	19	0	1	1
2863	307	"arg_2"	"decimal"	19	0	1	2
2864	308	"res_0"	"decimal"	19	0	0	0
2865	308	"arg_1"	"decimal"	19	0	1	1
2866	308	"arg_2"	"decimal"	19	0	1	2
2867	309	"res_0"	"decimal"	19	0	0	0
2868	309	"arg_1"	"decimal"	19	0	1	1
2869	309	"arg_2"	"decimal"	19	0	1	2
2870	310	"res_0"	"decimal"	19	0	0	0
2871	310	"arg_1"	"decimal"	19	0	1	1
2872	310	"arg_2"	"decimal"	19	0	1	2
2873	311	"res_0"	"decimal"	19	0	0	0
2874	311	"arg_1"	"decimal"	19	0	1	1
2875	311	"arg_2"	"decimal"	19	0	1	2
2876	312	"res_0"	"decimal"	19	0	0	0
2877	312	"arg_1"	"decimal"	19	0	1	1
2878	313	"res_0"	"decimal"	19	0	0	0
2879	313	"arg_1"	"decimal"	19	0	1	1
2880	313	"arg_2"	"int"	32	0	1	2
2881	314	"res_0"	"decimal"	19	0	0	0
2882	314	"arg_1"	"decimal"	19	0	1	1
2883	314	"arg_2"	"int"	32	0	1	2
2884	315	"res_0"	"decimal"	19	0	0	0
2885	315	"arg_1"	"decimal"	19	0	1	1
2886	316	"res_0"	"decimal"	19	0	0	0
2887	316	"arg_1"	"decimal"	19	0	1	1
2888	317	"res_0"	"tinyint"	8	0	0	0
2889	317	"arg_1"	"decimal"	19	0	1	1
2890	318	"res_0"	"decimal"	19	0	0	0
2891	318	"arg_1"	"decimal"	19	0	1	1
2892	318	"arg_2"	"bigint"	64	0	1	2
2893	319	"res_0"	"decimal"	19	0	0	0
2894	319	"arg_1"	"decimal"	19	0	1	1
2895	319	"arg_2"	"bigint"	64	0	1	2
2896	320	"res_0"	"month_interval"	32	0	0	0
2897	320	"arg_1"	"month_interval"	32	0	1	1
2898	320	"arg_2"	"decimal"	19	0	1	2
2899	321	"res_0"	"month_interval"	32	0	0	0
2900	321	"arg_1"	"month_interval"	32	0	1	1
2901	321	"arg_2"	"decimal"	19	0	1	2
2902	322	"res_0"	"month_interval"	32	0	0	0
2903	322	"arg_1"	"month_interval"	32	0	1	1
2904	322	"arg_2"	"decimal"	19	0	1	2
2905	323	"res_0"	"month_interval"	32	0	0	0
2906	323	"arg_1"	"month_interval"	32	0	1	1
2907	323	"arg_2"	"decimal"	19	0	1	2
2908	324	"res_0"	"sec_interval"	13	0	0	0
2909	324	"arg_1"	"sec_interval"	13	0	1	1
2910	324	"arg_2"	"decimal"	19	0	1	2
2911	325	"res_0"	"sec_interval"	13	0	0	0
2912	325	"arg_1"	"sec_interval"	13	0	1	1
2913	325	"arg_2"	"decimal"	19	0	1	2
2914	326	"res_0"	"sec_interval"	13	0	0	0
2915	326	"arg_1"	"sec_interval"	13	0	1	1
2916	326	"arg_2"	"decimal"	19	0	1	2
2917	327	"res_0"	"sec_interval"	13	0	0	0
2918	327	"arg_1"	"sec_interval"	13	0	1	1
2919	327	"arg_2"	"decimal"	19	0	1	2
2920	328	"res_0"	"real"	24	0	0	0
2921	328	"arg_1"	"real"	24	0	1	1
2922	328	"arg_2"	"real"	24	0	1	2
2923	329	"res_0"	"real"	24	0	0	0
2924	329	"arg_1"	"real"	24	0	1	1
2925	329	"arg_2"	"real"	24	0	1	2
2926	330	"res_0"	"real"	24	0	0	0
2927	330	"arg_1"	"real"	24	0	1	1
2928	330	"arg_2"	"real"	24	0	1	2
2929	331	"res_0"	"real"	24	0	0	0
2930	331	"arg_1"	"real"	24	0	1	1
2931	331	"arg_2"	"real"	24	0	1	2
2932	332	"res_0"	"real"	24	0	0	0
2933	332	"arg_1"	"real"	24	0	1	1
2934	333	"res_0"	"real"	24	0	0	0
2935	333	"arg_1"	"real"	24	0	1	1
2936	334	"res_0"	"tinyint"	8	0	0	0
2937	334	"arg_1"	"real"	24	0	1	1
2938	335	"res_0"	"real"	24	0	0	0
2939	335	"arg_1"	"real"	24	0	1	1
2940	335	"arg_2"	"real"	24	0	1	2
2941	336	"res_0"	"real"	24	0	0	0
2942	336	"arg_1"	"real"	24	0	1	1
2943	336	"arg_2"	"real"	24	0	1	2
2944	337	"res_0"	"month_interval"	32	0	0	0
2945	337	"arg_1"	"month_interval"	32	0	1	1
2946	337	"arg_2"	"real"	24	0	1	2
2947	338	"res_0"	"month_interval"	32	0	0	0
2948	338	"arg_1"	"month_interval"	32	0	1	1
2949	338	"arg_2"	"real"	24	0	1	2
2950	339	"res_0"	"month_interval"	32	0	0	0
2951	339	"arg_1"	"month_interval"	32	0	1	1
2952	339	"arg_2"	"real"	24	0	1	2
2953	340	"res_0"	"month_interval"	32	0	0	0
2954	340	"arg_1"	"month_interval"	32	0	1	1
2955	340	"arg_2"	"real"	24	0	1	2
2956	341	"res_0"	"sec_interval"	13	0	0	0
2957	341	"arg_1"	"sec_interval"	13	0	1	1
2958	341	"arg_2"	"real"	24	0	1	2
2959	342	"res_0"	"sec_interval"	13	0	0	0
2960	342	"arg_1"	"sec_interval"	13	0	1	1
2961	342	"arg_2"	"real"	24	0	1	2
2962	343	"res_0"	"sec_interval"	13	0	0	0
2963	343	"arg_1"	"sec_interval"	13	0	1	1
2964	343	"arg_2"	"real"	24	0	1	2
2965	344	"res_0"	"sec_interval"	13	0	0	0
2966	344	"arg_1"	"sec_interval"	13	0	1	1
2967	344	"arg_2"	"real"	24	0	1	2
2968	345	"res_0"	"double"	53	0	0	0
2969	345	"arg_1"	"double"	53	0	1	1
2970	345	"arg_2"	"double"	53	0	1	2
2971	346	"res_0"	"double"	53	0	0	0
2972	346	"arg_1"	"double"	53	0	1	1
2973	346	"arg_2"	"double"	53	0	1	2
2974	347	"res_0"	"double"	53	0	0	0
2975	347	"arg_1"	"double"	53	0	1	1
2976	347	"arg_2"	"double"	53	0	1	2
2977	348	"res_0"	"double"	53	0	0	0
2978	348	"arg_1"	"double"	53	0	1	1
2979	348	"arg_2"	"double"	53	0	1	2
2980	349	"res_0"	"double"	53	0	0	0
2981	349	"arg_1"	"double"	53	0	1	1
2982	350	"res_0"	"double"	53	0	0	0
2983	350	"arg_1"	"double"	53	0	1	1
2984	351	"res_0"	"tinyint"	8	0	0	0
2985	351	"arg_1"	"double"	53	0	1	1
2986	352	"res_0"	"double"	53	0	0	0
2987	352	"arg_1"	"double"	53	0	1	1
2988	352	"arg_2"	"double"	53	0	1	2
2989	353	"res_0"	"double"	53	0	0	0
2990	353	"arg_1"	"double"	53	0	1	1
2991	353	"arg_2"	"double"	53	0	1	2
2992	354	"res_0"	"month_interval"	32	0	0	0
2993	354	"arg_1"	"month_interval"	32	0	1	1
2994	354	"arg_2"	"double"	53	0	1	2
2995	355	"res_0"	"month_interval"	32	0	0	0
2996	355	"arg_1"	"month_interval"	32	0	1	1
2997	355	"arg_2"	"double"	53	0	1	2
2998	356	"res_0"	"month_interval"	32	0	0	0
2999	356	"arg_1"	"month_interval"	32	0	1	1
3000	356	"arg_2"	"double"	53	0	1	2
3001	357	"res_0"	"month_interval"	32	0	0	0
3002	357	"arg_1"	"month_interval"	32	0	1	1
3003	357	"arg_2"	"double"	53	0	1	2
3004	358	"res_0"	"sec_interval"	13	0	0	0
3005	358	"arg_1"	"sec_interval"	13	0	1	1
3006	358	"arg_2"	"double"	53	0	1	2
3007	359	"res_0"	"sec_interval"	13	0	0	0
3008	359	"arg_1"	"sec_interval"	13	0	1	1
3009	359	"arg_2"	"double"	53	0	1	2
3010	360	"res_0"	"sec_interval"	13	0	0	0
3011	360	"arg_1"	"sec_interval"	13	0	1	1
3012	360	"arg_2"	"double"	53	0	1	2
3013	361	"res_0"	"sec_interval"	13	0	0	0
3014	361	"arg_1"	"sec_interval"	13	0	1	1
3015	361	"arg_2"	"double"	53	0	1	2
3016	362	"res_0"	"month_interval"	32	0	0	0
3017	362	"arg_1"	"month_interval"	32	0	1	1
3018	362	"arg_2"	"month_interval"	32	0	1	2
3019	363	"res_0"	"month_interval"	32	0	0	0
3020	363	"arg_1"	"month_interval"	32	0	1	1
3021	363	"arg_2"	"month_interval"	32	0	1	2
3022	364	"res_0"	"month_interval"	32	0	0	0
3023	364	"arg_1"	"month_interval"	32	0	1	1
3024	364	"arg_2"	"month_interval"	32	0	1	2
3025	365	"res_0"	"month_interval"	32	0	0	0
3026	365	"arg_1"	"month_interval"	32	0	1	1
3027	365	"arg_2"	"month_interval"	32	0	1	2
3028	366	"res_0"	"month_interval"	32	0	0	0
3029	366	"arg_1"	"month_interval"	32	0	1	1
3030	367	"res_0"	"month_interval"	32	0	0	0
3031	367	"arg_1"	"month_interval"	32	0	1	1
3032	368	"res_0"	"tinyint"	8	0	0	0
3033	368	"arg_1"	"month_interval"	32	0	1	1
3034	369	"res_0"	"month_interval"	32	0	0	0
3035	369	"arg_1"	"month_interval"	32	0	1	1
3036	369	"arg_2"	"int"	32	0	1	2
3037	370	"res_0"	"month_interval"	32	0	0	0
3038	370	"arg_1"	"month_interval"	32	0	1	1
3039	370	"arg_2"	"int"	32	0	1	2
3040	371	"res_0"	"sec_interval"	13	0	0	0
3041	371	"arg_1"	"sec_interval"	13	0	1	1
3042	371	"arg_2"	"sec_interval"	13	0	1	2
3043	372	"res_0"	"sec_interval"	13	0	0	0
3044	372	"arg_1"	"sec_interval"	13	0	1	1
3045	372	"arg_2"	"sec_interval"	13	0	1	2
3046	373	"res_0"	"sec_interval"	13	0	0	0
3047	373	"arg_1"	"sec_interval"	13	0	1	1
3048	373	"arg_2"	"sec_interval"	13	0	1	2
3049	374	"res_0"	"sec_interval"	13	0	0	0
3050	374	"arg_1"	"sec_interval"	13	0	1	1
3051	374	"arg_2"	"sec_interval"	13	0	1	2
3052	375	"res_0"	"sec_interval"	13	0	0	0
3053	375	"arg_1"	"sec_interval"	13	0	1	1
3054	376	"res_0"	"sec_interval"	13	0	0	0
3055	376	"arg_1"	"sec_interval"	13	0	1	1
3056	377	"res_0"	"tinyint"	8	0	0	0
3057	377	"arg_1"	"sec_interval"	13	0	1	1
3058	378	"res_0"	"sec_interval"	13	0	0	0
3059	378	"arg_1"	"sec_interval"	13	0	1	1
3060	378	"arg_2"	"bigint"	64	0	1	2
3061	379	"res_0"	"sec_interval"	13	0	0	0
3062	379	"arg_1"	"sec_interval"	13	0	1	1
3063	379	"arg_2"	"bigint"	64	0	1	2
3064	380	"res_0"	"decimal"	4	0	0	0
3065	380	"arg_1"	"decimal"	4	0	1	1
3066	380	"arg_2"	"tinyint"	8	0	1	2
3067	381	"res_0"	"decimal"	4	0	0	0
3068	381	"arg_1"	"tinyint"	8	0	1	1
3069	381	"arg_2"	"decimal"	4	0	1	2
3070	382	"res_0"	"decimal"	4	0	0	0
3071	382	"arg_1"	"decimal"	4	0	1	1
3072	382	"arg_2"	"decimal"	2	0	1	2
3073	383	"res_0"	"decimal"	4	0	0	0
3074	383	"arg_1"	"decimal"	2	0	1	1
3075	383	"arg_2"	"decimal"	4	0	1	2
3076	384	"res_0"	"decimal"	9	0	0	0
3077	384	"arg_1"	"decimal"	9	0	1	1
3078	384	"arg_2"	"tinyint"	8	0	1	2
3079	385	"res_0"	"decimal"	9	0	0	0
3080	385	"arg_1"	"tinyint"	8	0	1	1
3081	385	"arg_2"	"decimal"	9	0	1	2
3082	386	"res_0"	"decimal"	9	0	0	0
3083	386	"arg_1"	"decimal"	9	0	1	1
3084	386	"arg_2"	"smallint"	16	0	1	2
3085	387	"res_0"	"decimal"	9	0	0	0
3086	387	"arg_1"	"smallint"	16	0	1	1
3087	387	"arg_2"	"decimal"	9	0	1	2
3088	388	"res_0"	"decimal"	9	0	0	0
3089	388	"arg_1"	"decimal"	9	0	1	1
3090	388	"arg_2"	"decimal"	2	0	1	2
3091	389	"res_0"	"decimal"	9	0	0	0
3092	389	"arg_1"	"decimal"	2	0	1	1
3093	389	"arg_2"	"decimal"	9	0	1	2
3094	390	"res_0"	"decimal"	9	0	0	0
3095	390	"arg_1"	"decimal"	9	0	1	1
3096	390	"arg_2"	"decimal"	4	0	1	2
3097	391	"res_0"	"decimal"	9	0	0	0
3098	391	"arg_1"	"decimal"	4	0	1	1
3099	391	"arg_2"	"decimal"	9	0	1	2
3100	392	"res_0"	"decimal"	19	0	0	0
3101	392	"arg_1"	"decimal"	19	0	1	1
3102	392	"arg_2"	"tinyint"	8	0	1	2
3103	393	"res_0"	"decimal"	19	0	0	0
3104	393	"arg_1"	"tinyint"	8	0	1	1
3105	393	"arg_2"	"decimal"	19	0	1	2
3106	394	"res_0"	"decimal"	19	0	0	0
3107	394	"arg_1"	"decimal"	19	0	1	1
3108	394	"arg_2"	"smallint"	16	0	1	2
3109	395	"res_0"	"decimal"	19	0	0	0
3110	395	"arg_1"	"smallint"	16	0	1	1
3111	395	"arg_2"	"decimal"	19	0	1	2
3112	396	"res_0"	"decimal"	19	0	0	0
3113	396	"arg_1"	"decimal"	19	0	1	1
3114	396	"arg_2"	"int"	32	0	1	2
3115	397	"res_0"	"decimal"	19	0	0	0
3116	397	"arg_1"	"int"	32	0	1	1
3117	397	"arg_2"	"decimal"	19	0	1	2
3118	398	"res_0"	"decimal"	19	0	0	0
3119	398	"arg_1"	"decimal"	19	0	1	1
3120	398	"arg_2"	"wrd"	64	0	1	2
3121	399	"res_0"	"decimal"	19	0	0	0
3122	399	"arg_1"	"wrd"	64	0	1	1
3123	399	"arg_2"	"decimal"	19	0	1	2
3124	400	"res_0"	"decimal"	19	0	0	0
3125	400	"arg_1"	"decimal"	19	0	1	1
3126	400	"arg_2"	"decimal"	2	0	1	2
3127	401	"res_0"	"decimal"	19	0	0	0
3128	401	"arg_1"	"decimal"	2	0	1	1
3129	401	"arg_2"	"decimal"	19	0	1	2
3130	402	"res_0"	"decimal"	19	0	0	0
3131	402	"arg_1"	"decimal"	19	0	1	1
3132	402	"arg_2"	"decimal"	4	0	1	2
3133	403	"res_0"	"decimal"	19	0	0	0
3134	403	"arg_1"	"decimal"	4	0	1	1
3135	403	"arg_2"	"decimal"	19	0	1	2
3136	404	"res_0"	"decimal"	19	0	0	0
3137	404	"arg_1"	"decimal"	19	0	1	1
3138	404	"arg_2"	"decimal"	9	0	1	2
3139	405	"res_0"	"decimal"	19	0	0	0
3140	405	"arg_1"	"decimal"	9	0	1	1
3141	405	"arg_2"	"decimal"	19	0	1	2
3142	406	"res_0"	"decimal"	2	0	0	0
3143	406	"arg_1"	"decimal"	2	0	1	1
3144	406	"arg_2"	"tinyint"	8	0	1	2
3145	407	"res_0"	"decimal"	4	0	0	0
3146	407	"arg_1"	"decimal"	4	0	1	1
3147	407	"arg_2"	"tinyint"	8	0	1	2
3148	408	"res_0"	"decimal"	9	0	0	0
3149	408	"arg_1"	"decimal"	9	0	1	1
3150	408	"arg_2"	"tinyint"	8	0	1	2
3151	409	"res_0"	"decimal"	19	0	0	0
3152	409	"arg_1"	"decimal"	19	0	1	1
3153	409	"arg_2"	"tinyint"	8	0	1	2
3154	410	"res_0"	"real"	24	0	0	0
3155	410	"arg_1"	"real"	24	0	1	1
3156	410	"arg_2"	"tinyint"	8	0	1	2
3157	411	"res_0"	"double"	53	0	0	0
3158	411	"arg_1"	"double"	53	0	1	1
3159	411	"arg_2"	"tinyint"	8	0	1	2
3160	412	"res_0"	"oid"	63	0	0	0
3161	412	"arg_1"	"oid"	63	0	1	1
3162	412	"arg_2"	"oid"	63	0	1	2
3163	413	"res_0"	"oid"	63	0	0	0
3164	413	"arg_1"	"tinyint"	8	0	1	1
3165	413	"arg_2"	"oid"	63	0	1	2
3166	414	"res_0"	"oid"	63	0	0	0
3167	414	"arg_1"	"smallint"	16	0	1	1
3168	414	"arg_2"	"oid"	63	0	1	2
3169	415	"res_0"	"oid"	63	0	0	0
3170	415	"arg_1"	"int"	32	0	1	1
3171	415	"arg_2"	"oid"	63	0	1	2
3172	416	"res_0"	"oid"	63	0	0	0
3173	416	"arg_1"	"bigint"	64	0	1	1
3174	416	"arg_2"	"oid"	63	0	1	2
3175	417	"res_0"	"oid"	63	0	0	0
3176	417	"arg_1"	"wrd"	64	0	1	1
3177	417	"arg_2"	"oid"	63	0	1	2
3178	418	"res_0"	"oid"	63	0	0	0
3179	418	"arg_1"	"decimal"	2	0	1	1
3180	418	"arg_2"	"oid"	63	0	1	2
3181	419	"res_0"	"oid"	63	0	0	0
3182	419	"arg_1"	"decimal"	4	0	1	1
3183	419	"arg_2"	"oid"	63	0	1	2
3184	420	"res_0"	"oid"	63	0	0	0
3185	420	"arg_1"	"decimal"	9	0	1	1
3186	420	"arg_2"	"oid"	63	0	1	2
3187	421	"res_0"	"oid"	63	0	0	0
3188	421	"arg_1"	"decimal"	19	0	1	1
3189	421	"arg_2"	"oid"	63	0	1	2
3190	422	"res_0"	"oid"	63	0	0	0
3191	422	"arg_1"	"real"	24	0	1	1
3192	422	"arg_2"	"oid"	63	0	1	2
3193	423	"res_0"	"oid"	63	0	0	0
3194	423	"arg_1"	"double"	53	0	1	1
3195	423	"arg_2"	"oid"	63	0	1	2
3196	424	"res_0"	"oid"	63	0	0	0
3197	424	"arg_1"	"month_interval"	32	0	1	1
3198	424	"arg_2"	"oid"	63	0	1	2
3199	425	"res_0"	"oid"	63	0	0	0
3200	425	"arg_1"	"sec_interval"	13	0	1	1
3201	425	"arg_2"	"oid"	63	0	1	2
3202	426	"res_0"	"oid"	63	0	0	0
3203	426	"arg_1"	"time"	7	0	1	1
3204	426	"arg_2"	"oid"	63	0	1	2
3205	427	"res_0"	"oid"	63	0	0	0
3206	427	"arg_1"	"timetz"	7	0	1	1
3207	427	"arg_2"	"oid"	63	0	1	2
3208	428	"res_0"	"oid"	63	0	0	0
3209	428	"arg_1"	"date"	0	0	1	1
3210	428	"arg_2"	"oid"	63	0	1	2
3211	429	"res_0"	"oid"	63	0	0	0
3212	429	"arg_1"	"timestamp"	7	0	1	1
3213	429	"arg_2"	"oid"	63	0	1	2
3214	430	"res_0"	"oid"	63	0	0	0
3215	430	"arg_1"	"timestamptz"	7	0	1	1
3216	430	"arg_2"	"oid"	63	0	1	2
3217	431	"res_0"	"oid"	63	0	0	0
3218	431	"arg_1"	"blob"	0	0	1	1
3219	431	"arg_2"	"oid"	63	0	1	2
3220	432	"res_0"	"tinyint"	8	0	0	0
3221	432	"arg_1"	"oid"	63	0	1	1
3222	432	"arg_2"	"tinyint"	8	0	1	2
3223	433	"res_0"	"tinyint"	8	0	0	0
3224	433	"arg_1"	"tinyint"	8	0	1	1
3225	433	"arg_2"	"tinyint"	8	0	1	2
3226	434	"res_0"	"tinyint"	8	0	0	0
3227	434	"arg_1"	"smallint"	16	0	1	1
3228	434	"arg_2"	"tinyint"	8	0	1	2
3229	435	"res_0"	"tinyint"	8	0	0	0
3230	435	"arg_1"	"int"	32	0	1	1
3231	435	"arg_2"	"tinyint"	8	0	1	2
3232	436	"res_0"	"tinyint"	8	0	0	0
3233	436	"arg_1"	"bigint"	64	0	1	1
3234	436	"arg_2"	"tinyint"	8	0	1	2
3235	437	"res_0"	"tinyint"	8	0	0	0
3236	437	"arg_1"	"wrd"	64	0	1	1
3237	437	"arg_2"	"tinyint"	8	0	1	2
3238	438	"res_0"	"tinyint"	8	0	0	0
3239	438	"arg_1"	"decimal"	2	0	1	1
3240	438	"arg_2"	"tinyint"	8	0	1	2
3241	439	"res_0"	"tinyint"	8	0	0	0
3242	439	"arg_1"	"decimal"	4	0	1	1
3243	439	"arg_2"	"tinyint"	8	0	1	2
3244	440	"res_0"	"tinyint"	8	0	0	0
3245	440	"arg_1"	"decimal"	9	0	1	1
3246	440	"arg_2"	"tinyint"	8	0	1	2
3247	441	"res_0"	"tinyint"	8	0	0	0
3248	441	"arg_1"	"decimal"	19	0	1	1
3249	441	"arg_2"	"tinyint"	8	0	1	2
3250	442	"res_0"	"tinyint"	8	0	0	0
3251	442	"arg_1"	"real"	24	0	1	1
3252	442	"arg_2"	"tinyint"	8	0	1	2
3253	443	"res_0"	"tinyint"	8	0	0	0
3254	443	"arg_1"	"double"	53	0	1	1
3255	443	"arg_2"	"tinyint"	8	0	1	2
3256	444	"res_0"	"tinyint"	8	0	0	0
3257	444	"arg_1"	"month_interval"	32	0	1	1
3258	444	"arg_2"	"tinyint"	8	0	1	2
3259	445	"res_0"	"tinyint"	8	0	0	0
3260	445	"arg_1"	"sec_interval"	13	0	1	1
3261	445	"arg_2"	"tinyint"	8	0	1	2
3262	446	"res_0"	"tinyint"	8	0	0	0
3263	446	"arg_1"	"time"	7	0	1	1
3264	446	"arg_2"	"tinyint"	8	0	1	2
3265	447	"res_0"	"tinyint"	8	0	0	0
3266	447	"arg_1"	"timetz"	7	0	1	1
3267	447	"arg_2"	"tinyint"	8	0	1	2
3268	448	"res_0"	"tinyint"	8	0	0	0
3269	448	"arg_1"	"date"	0	0	1	1
3270	448	"arg_2"	"tinyint"	8	0	1	2
3271	449	"res_0"	"tinyint"	8	0	0	0
3272	449	"arg_1"	"timestamp"	7	0	1	1
3273	449	"arg_2"	"tinyint"	8	0	1	2
3274	450	"res_0"	"tinyint"	8	0	0	0
3275	450	"arg_1"	"timestamptz"	7	0	1	1
3276	450	"arg_2"	"tinyint"	8	0	1	2
3277	451	"res_0"	"tinyint"	8	0	0	0
3278	451	"arg_1"	"blob"	0	0	1	1
3279	451	"arg_2"	"tinyint"	8	0	1	2
3280	452	"res_0"	"smallint"	16	0	0	0
3281	452	"arg_1"	"oid"	63	0	1	1
3282	452	"arg_2"	"smallint"	16	0	1	2
3283	453	"res_0"	"smallint"	16	0	0	0
3284	453	"arg_1"	"tinyint"	8	0	1	1
3285	453	"arg_2"	"smallint"	16	0	1	2
3286	454	"res_0"	"smallint"	16	0	0	0
3287	454	"arg_1"	"smallint"	16	0	1	1
3288	454	"arg_2"	"smallint"	16	0	1	2
3289	455	"res_0"	"smallint"	16	0	0	0
3290	455	"arg_1"	"int"	32	0	1	1
3291	455	"arg_2"	"smallint"	16	0	1	2
3292	456	"res_0"	"smallint"	16	0	0	0
3293	456	"arg_1"	"bigint"	64	0	1	1
3294	456	"arg_2"	"smallint"	16	0	1	2
3295	457	"res_0"	"smallint"	16	0	0	0
3296	457	"arg_1"	"wrd"	64	0	1	1
3297	457	"arg_2"	"smallint"	16	0	1	2
3298	458	"res_0"	"smallint"	16	0	0	0
3299	458	"arg_1"	"decimal"	2	0	1	1
3300	458	"arg_2"	"smallint"	16	0	1	2
3301	459	"res_0"	"smallint"	16	0	0	0
3302	459	"arg_1"	"decimal"	4	0	1	1
3303	459	"arg_2"	"smallint"	16	0	1	2
3304	460	"res_0"	"smallint"	16	0	0	0
3305	460	"arg_1"	"decimal"	9	0	1	1
3306	460	"arg_2"	"smallint"	16	0	1	2
3307	461	"res_0"	"smallint"	16	0	0	0
3308	461	"arg_1"	"decimal"	19	0	1	1
3309	461	"arg_2"	"smallint"	16	0	1	2
3310	462	"res_0"	"smallint"	16	0	0	0
3311	462	"arg_1"	"real"	24	0	1	1
3312	462	"arg_2"	"smallint"	16	0	1	2
3313	463	"res_0"	"smallint"	16	0	0	0
3314	463	"arg_1"	"double"	53	0	1	1
3315	463	"arg_2"	"smallint"	16	0	1	2
3316	464	"res_0"	"smallint"	16	0	0	0
3317	464	"arg_1"	"month_interval"	32	0	1	1
3318	464	"arg_2"	"smallint"	16	0	1	2
3319	465	"res_0"	"smallint"	16	0	0	0
3320	465	"arg_1"	"sec_interval"	13	0	1	1
3321	465	"arg_2"	"smallint"	16	0	1	2
3322	466	"res_0"	"smallint"	16	0	0	0
3323	466	"arg_1"	"time"	7	0	1	1
3324	466	"arg_2"	"smallint"	16	0	1	2
3325	467	"res_0"	"smallint"	16	0	0	0
3326	467	"arg_1"	"timetz"	7	0	1	1
3327	467	"arg_2"	"smallint"	16	0	1	2
3328	468	"res_0"	"smallint"	16	0	0	0
3329	468	"arg_1"	"date"	0	0	1	1
3330	468	"arg_2"	"smallint"	16	0	1	2
3331	469	"res_0"	"smallint"	16	0	0	0
3332	469	"arg_1"	"timestamp"	7	0	1	1
3333	469	"arg_2"	"smallint"	16	0	1	2
3334	470	"res_0"	"smallint"	16	0	0	0
3335	470	"arg_1"	"timestamptz"	7	0	1	1
3336	470	"arg_2"	"smallint"	16	0	1	2
3337	471	"res_0"	"smallint"	16	0	0	0
3338	471	"arg_1"	"blob"	0	0	1	1
3339	471	"arg_2"	"smallint"	16	0	1	2
3340	472	"res_0"	"int"	32	0	0	0
3341	472	"arg_1"	"oid"	63	0	1	1
3342	472	"arg_2"	"int"	32	0	1	2
3343	473	"res_0"	"int"	32	0	0	0
3344	473	"arg_1"	"tinyint"	8	0	1	1
3345	473	"arg_2"	"int"	32	0	1	2
3346	474	"res_0"	"int"	32	0	0	0
3347	474	"arg_1"	"smallint"	16	0	1	1
3348	474	"arg_2"	"int"	32	0	1	2
3349	475	"res_0"	"int"	32	0	0	0
3350	475	"arg_1"	"int"	32	0	1	1
3351	475	"arg_2"	"int"	32	0	1	2
3352	476	"res_0"	"int"	32	0	0	0
3353	476	"arg_1"	"bigint"	64	0	1	1
3354	476	"arg_2"	"int"	32	0	1	2
3355	477	"res_0"	"int"	32	0	0	0
3356	477	"arg_1"	"wrd"	64	0	1	1
3357	477	"arg_2"	"int"	32	0	1	2
3358	478	"res_0"	"int"	32	0	0	0
3359	478	"arg_1"	"decimal"	2	0	1	1
3360	478	"arg_2"	"int"	32	0	1	2
3361	479	"res_0"	"int"	32	0	0	0
3362	479	"arg_1"	"decimal"	4	0	1	1
3363	479	"arg_2"	"int"	32	0	1	2
3364	480	"res_0"	"int"	32	0	0	0
3365	480	"arg_1"	"decimal"	9	0	1	1
3366	480	"arg_2"	"int"	32	0	1	2
3367	481	"res_0"	"int"	32	0	0	0
3368	481	"arg_1"	"decimal"	19	0	1	1
3369	481	"arg_2"	"int"	32	0	1	2
3370	482	"res_0"	"int"	32	0	0	0
3371	482	"arg_1"	"real"	24	0	1	1
3372	482	"arg_2"	"int"	32	0	1	2
3373	483	"res_0"	"int"	32	0	0	0
3374	483	"arg_1"	"double"	53	0	1	1
3375	483	"arg_2"	"int"	32	0	1	2
3376	484	"res_0"	"int"	32	0	0	0
3377	484	"arg_1"	"month_interval"	32	0	1	1
3378	484	"arg_2"	"int"	32	0	1	2
3379	485	"res_0"	"int"	32	0	0	0
3380	485	"arg_1"	"sec_interval"	13	0	1	1
3381	485	"arg_2"	"int"	32	0	1	2
3382	486	"res_0"	"int"	32	0	0	0
3383	486	"arg_1"	"time"	7	0	1	1
3384	486	"arg_2"	"int"	32	0	1	2
3385	487	"res_0"	"int"	32	0	0	0
3386	487	"arg_1"	"timetz"	7	0	1	1
3387	487	"arg_2"	"int"	32	0	1	2
3388	488	"res_0"	"int"	32	0	0	0
3389	488	"arg_1"	"date"	0	0	1	1
3390	488	"arg_2"	"int"	32	0	1	2
3391	489	"res_0"	"int"	32	0	0	0
3392	489	"arg_1"	"timestamp"	7	0	1	1
3393	489	"arg_2"	"int"	32	0	1	2
3394	490	"res_0"	"int"	32	0	0	0
3395	490	"arg_1"	"timestamptz"	7	0	1	1
3396	490	"arg_2"	"int"	32	0	1	2
3397	491	"res_0"	"int"	32	0	0	0
3398	491	"arg_1"	"blob"	0	0	1	1
3399	491	"arg_2"	"int"	32	0	1	2
3400	492	"res_0"	"bigint"	64	0	0	0
3401	492	"arg_1"	"oid"	63	0	1	1
3402	492	"arg_2"	"bigint"	64	0	1	2
3403	493	"res_0"	"bigint"	64	0	0	0
3404	493	"arg_1"	"tinyint"	8	0	1	1
3405	493	"arg_2"	"bigint"	64	0	1	2
3406	494	"res_0"	"bigint"	64	0	0	0
3407	494	"arg_1"	"smallint"	16	0	1	1
3408	494	"arg_2"	"bigint"	64	0	1	2
3409	495	"res_0"	"bigint"	64	0	0	0
3410	495	"arg_1"	"int"	32	0	1	1
3411	495	"arg_2"	"bigint"	64	0	1	2
3412	496	"res_0"	"bigint"	64	0	0	0
3413	496	"arg_1"	"bigint"	64	0	1	1
3414	496	"arg_2"	"bigint"	64	0	1	2
3415	497	"res_0"	"bigint"	64	0	0	0
3416	497	"arg_1"	"wrd"	64	0	1	1
3417	497	"arg_2"	"bigint"	64	0	1	2
3418	498	"res_0"	"bigint"	64	0	0	0
3419	498	"arg_1"	"decimal"	2	0	1	1
3420	498	"arg_2"	"bigint"	64	0	1	2
3421	499	"res_0"	"bigint"	64	0	0	0
3422	499	"arg_1"	"decimal"	4	0	1	1
3423	499	"arg_2"	"bigint"	64	0	1	2
3424	500	"res_0"	"bigint"	64	0	0	0
3425	500	"arg_1"	"decimal"	9	0	1	1
3426	500	"arg_2"	"bigint"	64	0	1	2
3427	501	"res_0"	"bigint"	64	0	0	0
3428	501	"arg_1"	"decimal"	19	0	1	1
3429	501	"arg_2"	"bigint"	64	0	1	2
3430	502	"res_0"	"bigint"	64	0	0	0
3431	502	"arg_1"	"real"	24	0	1	1
3432	502	"arg_2"	"bigint"	64	0	1	2
3433	503	"res_0"	"bigint"	64	0	0	0
3434	503	"arg_1"	"double"	53	0	1	1
3435	503	"arg_2"	"bigint"	64	0	1	2
3436	504	"res_0"	"bigint"	64	0	0	0
3437	504	"arg_1"	"month_interval"	32	0	1	1
3438	504	"arg_2"	"bigint"	64	0	1	2
3439	505	"res_0"	"bigint"	64	0	0	0
3440	505	"arg_1"	"sec_interval"	13	0	1	1
3441	505	"arg_2"	"bigint"	64	0	1	2
3442	506	"res_0"	"bigint"	64	0	0	0
3443	506	"arg_1"	"time"	7	0	1	1
3444	506	"arg_2"	"bigint"	64	0	1	2
3445	507	"res_0"	"bigint"	64	0	0	0
3446	507	"arg_1"	"timetz"	7	0	1	1
3447	507	"arg_2"	"bigint"	64	0	1	2
3448	508	"res_0"	"bigint"	64	0	0	0
3449	508	"arg_1"	"date"	0	0	1	1
3450	508	"arg_2"	"bigint"	64	0	1	2
3451	509	"res_0"	"bigint"	64	0	0	0
3452	509	"arg_1"	"timestamp"	7	0	1	1
3453	509	"arg_2"	"bigint"	64	0	1	2
3454	510	"res_0"	"bigint"	64	0	0	0
3455	510	"arg_1"	"timestamptz"	7	0	1	1
3456	510	"arg_2"	"bigint"	64	0	1	2
3457	511	"res_0"	"bigint"	64	0	0	0
3458	511	"arg_1"	"blob"	0	0	1	1
3459	511	"arg_2"	"bigint"	64	0	1	2
3460	512	"res_0"	"wrd"	64	0	0	0
3461	512	"arg_1"	"oid"	63	0	1	1
3462	512	"arg_2"	"wrd"	64	0	1	2
3463	513	"res_0"	"wrd"	64	0	0	0
3464	513	"arg_1"	"tinyint"	8	0	1	1
3465	513	"arg_2"	"wrd"	64	0	1	2
3466	514	"res_0"	"wrd"	64	0	0	0
3467	514	"arg_1"	"smallint"	16	0	1	1
3468	514	"arg_2"	"wrd"	64	0	1	2
3469	515	"res_0"	"wrd"	64	0	0	0
3470	515	"arg_1"	"int"	32	0	1	1
3471	515	"arg_2"	"wrd"	64	0	1	2
3472	516	"res_0"	"wrd"	64	0	0	0
3473	516	"arg_1"	"bigint"	64	0	1	1
3474	516	"arg_2"	"wrd"	64	0	1	2
3475	517	"res_0"	"wrd"	64	0	0	0
3476	517	"arg_1"	"wrd"	64	0	1	1
3477	517	"arg_2"	"wrd"	64	0	1	2
3478	518	"res_0"	"wrd"	64	0	0	0
3479	518	"arg_1"	"decimal"	2	0	1	1
3480	518	"arg_2"	"wrd"	64	0	1	2
3481	519	"res_0"	"wrd"	64	0	0	0
3482	519	"arg_1"	"decimal"	4	0	1	1
3483	519	"arg_2"	"wrd"	64	0	1	2
3484	520	"res_0"	"wrd"	64	0	0	0
3485	520	"arg_1"	"decimal"	9	0	1	1
3486	520	"arg_2"	"wrd"	64	0	1	2
3487	521	"res_0"	"wrd"	64	0	0	0
3488	521	"arg_1"	"decimal"	19	0	1	1
3489	521	"arg_2"	"wrd"	64	0	1	2
3490	522	"res_0"	"wrd"	64	0	0	0
3491	522	"arg_1"	"real"	24	0	1	1
3492	522	"arg_2"	"wrd"	64	0	1	2
3493	523	"res_0"	"wrd"	64	0	0	0
3494	523	"arg_1"	"double"	53	0	1	1
3495	523	"arg_2"	"wrd"	64	0	1	2
3496	524	"res_0"	"wrd"	64	0	0	0
3497	524	"arg_1"	"month_interval"	32	0	1	1
3498	524	"arg_2"	"wrd"	64	0	1	2
3499	525	"res_0"	"wrd"	64	0	0	0
3500	525	"arg_1"	"sec_interval"	13	0	1	1
3501	525	"arg_2"	"wrd"	64	0	1	2
3502	526	"res_0"	"wrd"	64	0	0	0
3503	526	"arg_1"	"time"	7	0	1	1
3504	526	"arg_2"	"wrd"	64	0	1	2
3505	527	"res_0"	"wrd"	64	0	0	0
3506	527	"arg_1"	"timetz"	7	0	1	1
3507	527	"arg_2"	"wrd"	64	0	1	2
3508	528	"res_0"	"wrd"	64	0	0	0
3509	528	"arg_1"	"date"	0	0	1	1
3510	528	"arg_2"	"wrd"	64	0	1	2
3511	529	"res_0"	"wrd"	64	0	0	0
3512	529	"arg_1"	"timestamp"	7	0	1	1
3513	529	"arg_2"	"wrd"	64	0	1	2
3514	530	"res_0"	"wrd"	64	0	0	0
3515	530	"arg_1"	"timestamptz"	7	0	1	1
3516	530	"arg_2"	"wrd"	64	0	1	2
3517	531	"res_0"	"wrd"	64	0	0	0
3518	531	"arg_1"	"blob"	0	0	1	1
3519	531	"arg_2"	"wrd"	64	0	1	2
3520	532	"res_0"	"decimal"	2	0	0	0
3521	532	"arg_1"	"oid"	63	0	1	1
3522	532	"arg_2"	"decimal"	2	0	1	2
3523	533	"res_0"	"decimal"	2	0	0	0
3524	533	"arg_1"	"tinyint"	8	0	1	1
3525	533	"arg_2"	"decimal"	2	0	1	2
3526	534	"res_0"	"decimal"	2	0	0	0
3527	534	"arg_1"	"smallint"	16	0	1	1
3528	534	"arg_2"	"decimal"	2	0	1	2
3529	535	"res_0"	"decimal"	2	0	0	0
3530	535	"arg_1"	"int"	32	0	1	1
3531	535	"arg_2"	"decimal"	2	0	1	2
3532	536	"res_0"	"decimal"	2	0	0	0
3533	536	"arg_1"	"bigint"	64	0	1	1
3534	536	"arg_2"	"decimal"	2	0	1	2
3535	537	"res_0"	"decimal"	2	0	0	0
3536	537	"arg_1"	"wrd"	64	0	1	1
3537	537	"arg_2"	"decimal"	2	0	1	2
3538	538	"res_0"	"decimal"	2	0	0	0
3539	538	"arg_1"	"decimal"	2	0	1	1
3540	538	"arg_2"	"decimal"	2	0	1	2
3541	539	"res_0"	"decimal"	2	0	0	0
3542	539	"arg_1"	"decimal"	4	0	1	1
3543	539	"arg_2"	"decimal"	2	0	1	2
3544	540	"res_0"	"decimal"	2	0	0	0
3545	540	"arg_1"	"decimal"	9	0	1	1
3546	540	"arg_2"	"decimal"	2	0	1	2
3547	541	"res_0"	"decimal"	2	0	0	0
3548	541	"arg_1"	"decimal"	19	0	1	1
3549	541	"arg_2"	"decimal"	2	0	1	2
3550	542	"res_0"	"decimal"	2	0	0	0
3551	542	"arg_1"	"real"	24	0	1	1
3552	542	"arg_2"	"decimal"	2	0	1	2
3553	543	"res_0"	"decimal"	2	0	0	0
3554	543	"arg_1"	"double"	53	0	1	1
3555	543	"arg_2"	"decimal"	2	0	1	2
3556	544	"res_0"	"decimal"	2	0	0	0
3557	544	"arg_1"	"month_interval"	32	0	1	1
3558	544	"arg_2"	"decimal"	2	0	1	2
3559	545	"res_0"	"decimal"	2	0	0	0
3560	545	"arg_1"	"sec_interval"	13	0	1	1
3561	545	"arg_2"	"decimal"	2	0	1	2
3562	546	"res_0"	"decimal"	2	0	0	0
3563	546	"arg_1"	"time"	7	0	1	1
3564	546	"arg_2"	"decimal"	2	0	1	2
3565	547	"res_0"	"decimal"	2	0	0	0
3566	547	"arg_1"	"timetz"	7	0	1	1
3567	547	"arg_2"	"decimal"	2	0	1	2
3568	548	"res_0"	"decimal"	2	0	0	0
3569	548	"arg_1"	"date"	0	0	1	1
3570	548	"arg_2"	"decimal"	2	0	1	2
3571	549	"res_0"	"decimal"	2	0	0	0
3572	549	"arg_1"	"timestamp"	7	0	1	1
3573	549	"arg_2"	"decimal"	2	0	1	2
3574	550	"res_0"	"decimal"	2	0	0	0
3575	550	"arg_1"	"timestamptz"	7	0	1	1
3576	550	"arg_2"	"decimal"	2	0	1	2
3577	551	"res_0"	"decimal"	2	0	0	0
3578	551	"arg_1"	"blob"	0	0	1	1
3579	551	"arg_2"	"decimal"	2	0	1	2
3580	552	"res_0"	"decimal"	4	0	0	0
3581	552	"arg_1"	"oid"	63	0	1	1
3582	552	"arg_2"	"decimal"	4	0	1	2
3583	553	"res_0"	"decimal"	4	0	0	0
3584	553	"arg_1"	"tinyint"	8	0	1	1
3585	553	"arg_2"	"decimal"	4	0	1	2
3586	554	"res_0"	"decimal"	4	0	0	0
3587	554	"arg_1"	"smallint"	16	0	1	1
3588	554	"arg_2"	"decimal"	4	0	1	2
3589	555	"res_0"	"decimal"	4	0	0	0
3590	555	"arg_1"	"int"	32	0	1	1
3591	555	"arg_2"	"decimal"	4	0	1	2
3592	556	"res_0"	"decimal"	4	0	0	0
3593	556	"arg_1"	"bigint"	64	0	1	1
3594	556	"arg_2"	"decimal"	4	0	1	2
3595	557	"res_0"	"decimal"	4	0	0	0
3596	557	"arg_1"	"wrd"	64	0	1	1
3597	557	"arg_2"	"decimal"	4	0	1	2
3598	558	"res_0"	"decimal"	4	0	0	0
3599	558	"arg_1"	"decimal"	2	0	1	1
3600	558	"arg_2"	"decimal"	4	0	1	2
3601	559	"res_0"	"decimal"	4	0	0	0
3602	559	"arg_1"	"decimal"	4	0	1	1
3603	559	"arg_2"	"decimal"	4	0	1	2
3604	560	"res_0"	"decimal"	4	0	0	0
3605	560	"arg_1"	"decimal"	9	0	1	1
3606	560	"arg_2"	"decimal"	4	0	1	2
3607	561	"res_0"	"decimal"	4	0	0	0
3608	561	"arg_1"	"decimal"	19	0	1	1
3609	561	"arg_2"	"decimal"	4	0	1	2
3610	562	"res_0"	"decimal"	4	0	0	0
3611	562	"arg_1"	"real"	24	0	1	1
3612	562	"arg_2"	"decimal"	4	0	1	2
3613	563	"res_0"	"decimal"	4	0	0	0
3614	563	"arg_1"	"double"	53	0	1	1
3615	563	"arg_2"	"decimal"	4	0	1	2
3616	564	"res_0"	"decimal"	4	0	0	0
3617	564	"arg_1"	"month_interval"	32	0	1	1
3618	564	"arg_2"	"decimal"	4	0	1	2
3619	565	"res_0"	"decimal"	4	0	0	0
3620	565	"arg_1"	"sec_interval"	13	0	1	1
3621	565	"arg_2"	"decimal"	4	0	1	2
3622	566	"res_0"	"decimal"	4	0	0	0
3623	566	"arg_1"	"time"	7	0	1	1
3624	566	"arg_2"	"decimal"	4	0	1	2
3625	567	"res_0"	"decimal"	4	0	0	0
3626	567	"arg_1"	"timetz"	7	0	1	1
3627	567	"arg_2"	"decimal"	4	0	1	2
3628	568	"res_0"	"decimal"	4	0	0	0
3629	568	"arg_1"	"date"	0	0	1	1
3630	568	"arg_2"	"decimal"	4	0	1	2
3631	569	"res_0"	"decimal"	4	0	0	0
3632	569	"arg_1"	"timestamp"	7	0	1	1
3633	569	"arg_2"	"decimal"	4	0	1	2
3634	570	"res_0"	"decimal"	4	0	0	0
3635	570	"arg_1"	"timestamptz"	7	0	1	1
3636	570	"arg_2"	"decimal"	4	0	1	2
3637	571	"res_0"	"decimal"	4	0	0	0
3638	571	"arg_1"	"blob"	0	0	1	1
3639	571	"arg_2"	"decimal"	4	0	1	2
3640	572	"res_0"	"decimal"	9	0	0	0
3641	572	"arg_1"	"oid"	63	0	1	1
3642	572	"arg_2"	"decimal"	9	0	1	2
3643	573	"res_0"	"decimal"	9	0	0	0
3644	573	"arg_1"	"tinyint"	8	0	1	1
3645	573	"arg_2"	"decimal"	9	0	1	2
3646	574	"res_0"	"decimal"	9	0	0	0
3647	574	"arg_1"	"smallint"	16	0	1	1
3648	574	"arg_2"	"decimal"	9	0	1	2
3649	575	"res_0"	"decimal"	9	0	0	0
3650	575	"arg_1"	"int"	32	0	1	1
3651	575	"arg_2"	"decimal"	9	0	1	2
3652	576	"res_0"	"decimal"	9	0	0	0
3653	576	"arg_1"	"bigint"	64	0	1	1
3654	576	"arg_2"	"decimal"	9	0	1	2
3655	577	"res_0"	"decimal"	9	0	0	0
3656	577	"arg_1"	"wrd"	64	0	1	1
3657	577	"arg_2"	"decimal"	9	0	1	2
3658	578	"res_0"	"decimal"	9	0	0	0
3659	578	"arg_1"	"decimal"	2	0	1	1
3660	578	"arg_2"	"decimal"	9	0	1	2
3661	579	"res_0"	"decimal"	9	0	0	0
3662	579	"arg_1"	"decimal"	4	0	1	1
3663	579	"arg_2"	"decimal"	9	0	1	2
3664	580	"res_0"	"decimal"	9	0	0	0
3665	580	"arg_1"	"decimal"	9	0	1	1
3666	580	"arg_2"	"decimal"	9	0	1	2
3667	581	"res_0"	"decimal"	9	0	0	0
3668	581	"arg_1"	"decimal"	19	0	1	1
3669	581	"arg_2"	"decimal"	9	0	1	2
3670	582	"res_0"	"decimal"	9	0	0	0
3671	582	"arg_1"	"real"	24	0	1	1
3672	582	"arg_2"	"decimal"	9	0	1	2
3673	583	"res_0"	"decimal"	9	0	0	0
3674	583	"arg_1"	"double"	53	0	1	1
3675	583	"arg_2"	"decimal"	9	0	1	2
3676	584	"res_0"	"decimal"	9	0	0	0
3677	584	"arg_1"	"month_interval"	32	0	1	1
3678	584	"arg_2"	"decimal"	9	0	1	2
3679	585	"res_0"	"decimal"	9	0	0	0
3680	585	"arg_1"	"sec_interval"	13	0	1	1
3681	585	"arg_2"	"decimal"	9	0	1	2
3682	586	"res_0"	"decimal"	9	0	0	0
3683	586	"arg_1"	"time"	7	0	1	1
3684	586	"arg_2"	"decimal"	9	0	1	2
3685	587	"res_0"	"decimal"	9	0	0	0
3686	587	"arg_1"	"timetz"	7	0	1	1
3687	587	"arg_2"	"decimal"	9	0	1	2
3688	588	"res_0"	"decimal"	9	0	0	0
3689	588	"arg_1"	"date"	0	0	1	1
3690	588	"arg_2"	"decimal"	9	0	1	2
3691	589	"res_0"	"decimal"	9	0	0	0
3692	589	"arg_1"	"timestamp"	7	0	1	1
3693	589	"arg_2"	"decimal"	9	0	1	2
3694	590	"res_0"	"decimal"	9	0	0	0
3695	590	"arg_1"	"timestamptz"	7	0	1	1
3696	590	"arg_2"	"decimal"	9	0	1	2
3697	591	"res_0"	"decimal"	9	0	0	0
3698	591	"arg_1"	"blob"	0	0	1	1
3699	591	"arg_2"	"decimal"	9	0	1	2
3700	592	"res_0"	"decimal"	19	0	0	0
3701	592	"arg_1"	"oid"	63	0	1	1
3702	592	"arg_2"	"decimal"	19	0	1	2
3703	593	"res_0"	"decimal"	19	0	0	0
3704	593	"arg_1"	"tinyint"	8	0	1	1
3705	593	"arg_2"	"decimal"	19	0	1	2
3706	594	"res_0"	"decimal"	19	0	0	0
3707	594	"arg_1"	"smallint"	16	0	1	1
3708	594	"arg_2"	"decimal"	19	0	1	2
3709	595	"res_0"	"decimal"	19	0	0	0
3710	595	"arg_1"	"int"	32	0	1	1
3711	595	"arg_2"	"decimal"	19	0	1	2
3712	596	"res_0"	"decimal"	19	0	0	0
3713	596	"arg_1"	"bigint"	64	0	1	1
3714	596	"arg_2"	"decimal"	19	0	1	2
3715	597	"res_0"	"decimal"	19	0	0	0
3716	597	"arg_1"	"wrd"	64	0	1	1
3717	597	"arg_2"	"decimal"	19	0	1	2
3718	598	"res_0"	"decimal"	19	0	0	0
3719	598	"arg_1"	"decimal"	2	0	1	1
3720	598	"arg_2"	"decimal"	19	0	1	2
3721	599	"res_0"	"decimal"	19	0	0	0
3722	599	"arg_1"	"decimal"	4	0	1	1
3723	599	"arg_2"	"decimal"	19	0	1	2
3724	600	"res_0"	"decimal"	19	0	0	0
3725	600	"arg_1"	"decimal"	9	0	1	1
3726	600	"arg_2"	"decimal"	19	0	1	2
3727	601	"res_0"	"decimal"	19	0	0	0
3728	601	"arg_1"	"decimal"	19	0	1	1
3729	601	"arg_2"	"decimal"	19	0	1	2
3730	602	"res_0"	"decimal"	19	0	0	0
3731	602	"arg_1"	"real"	24	0	1	1
3732	602	"arg_2"	"decimal"	19	0	1	2
3733	603	"res_0"	"decimal"	19	0	0	0
3734	603	"arg_1"	"double"	53	0	1	1
3735	603	"arg_2"	"decimal"	19	0	1	2
3736	604	"res_0"	"decimal"	19	0	0	0
3737	604	"arg_1"	"month_interval"	32	0	1	1
3738	604	"arg_2"	"decimal"	19	0	1	2
3739	605	"res_0"	"decimal"	19	0	0	0
3740	605	"arg_1"	"sec_interval"	13	0	1	1
3741	605	"arg_2"	"decimal"	19	0	1	2
3742	606	"res_0"	"decimal"	19	0	0	0
3743	606	"arg_1"	"time"	7	0	1	1
3744	606	"arg_2"	"decimal"	19	0	1	2
3745	607	"res_0"	"decimal"	19	0	0	0
3746	607	"arg_1"	"timetz"	7	0	1	1
3747	607	"arg_2"	"decimal"	19	0	1	2
3748	608	"res_0"	"decimal"	19	0	0	0
3749	608	"arg_1"	"date"	0	0	1	1
3750	608	"arg_2"	"decimal"	19	0	1	2
3751	609	"res_0"	"decimal"	19	0	0	0
3752	609	"arg_1"	"timestamp"	7	0	1	1
3753	609	"arg_2"	"decimal"	19	0	1	2
3754	610	"res_0"	"decimal"	19	0	0	0
3755	610	"arg_1"	"timestamptz"	7	0	1	1
3756	610	"arg_2"	"decimal"	19	0	1	2
3757	611	"res_0"	"decimal"	19	0	0	0
3758	611	"arg_1"	"blob"	0	0	1	1
3759	611	"arg_2"	"decimal"	19	0	1	2
3760	612	"res_0"	"real"	24	0	0	0
3761	612	"arg_1"	"oid"	63	0	1	1
3762	612	"arg_2"	"real"	24	0	1	2
3763	613	"res_0"	"real"	24	0	0	0
3764	613	"arg_1"	"tinyint"	8	0	1	1
3765	613	"arg_2"	"real"	24	0	1	2
3766	614	"res_0"	"real"	24	0	0	0
3767	614	"arg_1"	"smallint"	16	0	1	1
3768	614	"arg_2"	"real"	24	0	1	2
3769	615	"res_0"	"real"	24	0	0	0
3770	615	"arg_1"	"int"	32	0	1	1
3771	615	"arg_2"	"real"	24	0	1	2
3772	616	"res_0"	"real"	24	0	0	0
3773	616	"arg_1"	"bigint"	64	0	1	1
3774	616	"arg_2"	"real"	24	0	1	2
3775	617	"res_0"	"real"	24	0	0	0
3776	617	"arg_1"	"wrd"	64	0	1	1
3777	617	"arg_2"	"real"	24	0	1	2
3778	618	"res_0"	"real"	24	0	0	0
3779	618	"arg_1"	"decimal"	2	0	1	1
3780	618	"arg_2"	"real"	24	0	1	2
3781	619	"res_0"	"real"	24	0	0	0
3782	619	"arg_1"	"decimal"	4	0	1	1
3783	619	"arg_2"	"real"	24	0	1	2
3784	620	"res_0"	"real"	24	0	0	0
3785	620	"arg_1"	"decimal"	9	0	1	1
3786	620	"arg_2"	"real"	24	0	1	2
3787	621	"res_0"	"real"	24	0	0	0
3788	621	"arg_1"	"decimal"	19	0	1	1
3789	621	"arg_2"	"real"	24	0	1	2
3790	622	"res_0"	"real"	24	0	0	0
3791	622	"arg_1"	"real"	24	0	1	1
3792	622	"arg_2"	"real"	24	0	1	2
3793	623	"res_0"	"real"	24	0	0	0
3794	623	"arg_1"	"double"	53	0	1	1
3795	623	"arg_2"	"real"	24	0	1	2
3796	624	"res_0"	"real"	24	0	0	0
3797	624	"arg_1"	"month_interval"	32	0	1	1
3798	624	"arg_2"	"real"	24	0	1	2
3799	625	"res_0"	"real"	24	0	0	0
3800	625	"arg_1"	"sec_interval"	13	0	1	1
3801	625	"arg_2"	"real"	24	0	1	2
3802	626	"res_0"	"real"	24	0	0	0
3803	626	"arg_1"	"time"	7	0	1	1
3804	626	"arg_2"	"real"	24	0	1	2
3805	627	"res_0"	"real"	24	0	0	0
3806	627	"arg_1"	"timetz"	7	0	1	1
3807	627	"arg_2"	"real"	24	0	1	2
3808	628	"res_0"	"real"	24	0	0	0
3809	628	"arg_1"	"date"	0	0	1	1
3810	628	"arg_2"	"real"	24	0	1	2
3811	629	"res_0"	"real"	24	0	0	0
3812	629	"arg_1"	"timestamp"	7	0	1	1
3813	629	"arg_2"	"real"	24	0	1	2
3814	630	"res_0"	"real"	24	0	0	0
3815	630	"arg_1"	"timestamptz"	7	0	1	1
3816	630	"arg_2"	"real"	24	0	1	2
3817	631	"res_0"	"real"	24	0	0	0
3818	631	"arg_1"	"blob"	0	0	1	1
3819	631	"arg_2"	"real"	24	0	1	2
3820	632	"res_0"	"double"	53	0	0	0
3821	632	"arg_1"	"oid"	63	0	1	1
3822	632	"arg_2"	"double"	53	0	1	2
3823	633	"res_0"	"double"	53	0	0	0
3824	633	"arg_1"	"tinyint"	8	0	1	1
3825	633	"arg_2"	"double"	53	0	1	2
3826	634	"res_0"	"double"	53	0	0	0
3827	634	"arg_1"	"smallint"	16	0	1	1
3828	634	"arg_2"	"double"	53	0	1	2
3829	635	"res_0"	"double"	53	0	0	0
3830	635	"arg_1"	"int"	32	0	1	1
3831	635	"arg_2"	"double"	53	0	1	2
3832	636	"res_0"	"double"	53	0	0	0
3833	636	"arg_1"	"bigint"	64	0	1	1
3834	636	"arg_2"	"double"	53	0	1	2
3835	637	"res_0"	"double"	53	0	0	0
3836	637	"arg_1"	"wrd"	64	0	1	1
3837	637	"arg_2"	"double"	53	0	1	2
3838	638	"res_0"	"double"	53	0	0	0
3839	638	"arg_1"	"decimal"	2	0	1	1
3840	638	"arg_2"	"double"	53	0	1	2
3841	639	"res_0"	"double"	53	0	0	0
3842	639	"arg_1"	"decimal"	4	0	1	1
3843	639	"arg_2"	"double"	53	0	1	2
3844	640	"res_0"	"double"	53	0	0	0
3845	640	"arg_1"	"decimal"	9	0	1	1
3846	640	"arg_2"	"double"	53	0	1	2
3847	641	"res_0"	"double"	53	0	0	0
3848	641	"arg_1"	"decimal"	19	0	1	1
3849	641	"arg_2"	"double"	53	0	1	2
3850	642	"res_0"	"double"	53	0	0	0
3851	642	"arg_1"	"real"	24	0	1	1
3852	642	"arg_2"	"double"	53	0	1	2
3853	643	"res_0"	"double"	53	0	0	0
3854	643	"arg_1"	"double"	53	0	1	1
3855	643	"arg_2"	"double"	53	0	1	2
3856	644	"res_0"	"double"	53	0	0	0
3857	644	"arg_1"	"month_interval"	32	0	1	1
3858	644	"arg_2"	"double"	53	0	1	2
3859	645	"res_0"	"double"	53	0	0	0
3860	645	"arg_1"	"sec_interval"	13	0	1	1
3861	645	"arg_2"	"double"	53	0	1	2
3862	646	"res_0"	"double"	53	0	0	0
3863	646	"arg_1"	"time"	7	0	1	1
3864	646	"arg_2"	"double"	53	0	1	2
3865	647	"res_0"	"double"	53	0	0	0
3866	647	"arg_1"	"timetz"	7	0	1	1
3867	647	"arg_2"	"double"	53	0	1	2
3868	648	"res_0"	"double"	53	0	0	0
3869	648	"arg_1"	"date"	0	0	1	1
3870	648	"arg_2"	"double"	53	0	1	2
3871	649	"res_0"	"double"	53	0	0	0
3872	649	"arg_1"	"timestamp"	7	0	1	1
3873	649	"arg_2"	"double"	53	0	1	2
3874	650	"res_0"	"double"	53	0	0	0
3875	650	"arg_1"	"timestamptz"	7	0	1	1
3876	650	"arg_2"	"double"	53	0	1	2
3877	651	"res_0"	"double"	53	0	0	0
3878	651	"arg_1"	"blob"	0	0	1	1
3879	651	"arg_2"	"double"	53	0	1	2
3880	652	"res_0"	"month_interval"	32	0	0	0
3881	652	"arg_1"	"oid"	63	0	1	1
3882	652	"arg_2"	"month_interval"	32	0	1	2
3883	653	"res_0"	"month_interval"	32	0	0	0
3884	653	"arg_1"	"tinyint"	8	0	1	1
3885	653	"arg_2"	"month_interval"	32	0	1	2
3886	654	"res_0"	"month_interval"	32	0	0	0
3887	654	"arg_1"	"smallint"	16	0	1	1
3888	654	"arg_2"	"month_interval"	32	0	1	2
3889	655	"res_0"	"month_interval"	32	0	0	0
3890	655	"arg_1"	"int"	32	0	1	1
3891	655	"arg_2"	"month_interval"	32	0	1	2
3892	656	"res_0"	"month_interval"	32	0	0	0
3893	656	"arg_1"	"bigint"	64	0	1	1
3894	656	"arg_2"	"month_interval"	32	0	1	2
3895	657	"res_0"	"month_interval"	32	0	0	0
3896	657	"arg_1"	"wrd"	64	0	1	1
3897	657	"arg_2"	"month_interval"	32	0	1	2
3898	658	"res_0"	"month_interval"	32	0	0	0
3899	658	"arg_1"	"decimal"	2	0	1	1
3900	658	"arg_2"	"month_interval"	32	0	1	2
3901	659	"res_0"	"month_interval"	32	0	0	0
3902	659	"arg_1"	"decimal"	4	0	1	1
3903	659	"arg_2"	"month_interval"	32	0	1	2
3904	660	"res_0"	"month_interval"	32	0	0	0
3905	660	"arg_1"	"decimal"	9	0	1	1
3906	660	"arg_2"	"month_interval"	32	0	1	2
3907	661	"res_0"	"month_interval"	32	0	0	0
3908	661	"arg_1"	"decimal"	19	0	1	1
3909	661	"arg_2"	"month_interval"	32	0	1	2
3910	662	"res_0"	"month_interval"	32	0	0	0
3911	662	"arg_1"	"real"	24	0	1	1
3912	662	"arg_2"	"month_interval"	32	0	1	2
3913	663	"res_0"	"month_interval"	32	0	0	0
3914	663	"arg_1"	"double"	53	0	1	1
3915	663	"arg_2"	"month_interval"	32	0	1	2
3916	664	"res_0"	"month_interval"	32	0	0	0
3917	664	"arg_1"	"month_interval"	32	0	1	1
3918	664	"arg_2"	"month_interval"	32	0	1	2
3919	665	"res_0"	"month_interval"	32	0	0	0
3920	665	"arg_1"	"sec_interval"	13	0	1	1
3921	665	"arg_2"	"month_interval"	32	0	1	2
3922	666	"res_0"	"month_interval"	32	0	0	0
3923	666	"arg_1"	"time"	7	0	1	1
3924	666	"arg_2"	"month_interval"	32	0	1	2
3925	667	"res_0"	"month_interval"	32	0	0	0
3926	667	"arg_1"	"timetz"	7	0	1	1
3927	667	"arg_2"	"month_interval"	32	0	1	2
3928	668	"res_0"	"month_interval"	32	0	0	0
3929	668	"arg_1"	"date"	0	0	1	1
3930	668	"arg_2"	"month_interval"	32	0	1	2
3931	669	"res_0"	"month_interval"	32	0	0	0
3932	669	"arg_1"	"timestamp"	7	0	1	1
3933	669	"arg_2"	"month_interval"	32	0	1	2
3934	670	"res_0"	"month_interval"	32	0	0	0
3935	670	"arg_1"	"timestamptz"	7	0	1	1
3936	670	"arg_2"	"month_interval"	32	0	1	2
3937	671	"res_0"	"month_interval"	32	0	0	0
3938	671	"arg_1"	"blob"	0	0	1	1
3939	671	"arg_2"	"month_interval"	32	0	1	2
3940	672	"res_0"	"sec_interval"	13	0	0	0
3941	672	"arg_1"	"oid"	63	0	1	1
3942	672	"arg_2"	"sec_interval"	13	0	1	2
3943	673	"res_0"	"sec_interval"	13	0	0	0
3944	673	"arg_1"	"tinyint"	8	0	1	1
3945	673	"arg_2"	"sec_interval"	13	0	1	2
3946	674	"res_0"	"sec_interval"	13	0	0	0
3947	674	"arg_1"	"smallint"	16	0	1	1
3948	674	"arg_2"	"sec_interval"	13	0	1	2
3949	675	"res_0"	"sec_interval"	13	0	0	0
3950	675	"arg_1"	"int"	32	0	1	1
3951	675	"arg_2"	"sec_interval"	13	0	1	2
3952	676	"res_0"	"sec_interval"	13	0	0	0
3953	676	"arg_1"	"bigint"	64	0	1	1
3954	676	"arg_2"	"sec_interval"	13	0	1	2
3955	677	"res_0"	"sec_interval"	13	0	0	0
3956	677	"arg_1"	"wrd"	64	0	1	1
3957	677	"arg_2"	"sec_interval"	13	0	1	2
3958	678	"res_0"	"sec_interval"	13	0	0	0
3959	678	"arg_1"	"decimal"	2	0	1	1
3960	678	"arg_2"	"sec_interval"	13	0	1	2
3961	679	"res_0"	"sec_interval"	13	0	0	0
3962	679	"arg_1"	"decimal"	4	0	1	1
3963	679	"arg_2"	"sec_interval"	13	0	1	2
3964	680	"res_0"	"sec_interval"	13	0	0	0
3965	680	"arg_1"	"decimal"	9	0	1	1
3966	680	"arg_2"	"sec_interval"	13	0	1	2
3967	681	"res_0"	"sec_interval"	13	0	0	0
3968	681	"arg_1"	"decimal"	19	0	1	1
3969	681	"arg_2"	"sec_interval"	13	0	1	2
3970	682	"res_0"	"sec_interval"	13	0	0	0
3971	682	"arg_1"	"real"	24	0	1	1
3972	682	"arg_2"	"sec_interval"	13	0	1	2
3973	683	"res_0"	"sec_interval"	13	0	0	0
3974	683	"arg_1"	"double"	53	0	1	1
3975	683	"arg_2"	"sec_interval"	13	0	1	2
3976	684	"res_0"	"sec_interval"	13	0	0	0
3977	684	"arg_1"	"month_interval"	32	0	1	1
3978	684	"arg_2"	"sec_interval"	13	0	1	2
3979	685	"res_0"	"sec_interval"	13	0	0	0
3980	685	"arg_1"	"sec_interval"	13	0	1	1
3981	685	"arg_2"	"sec_interval"	13	0	1	2
3982	686	"res_0"	"sec_interval"	13	0	0	0
3983	686	"arg_1"	"time"	7	0	1	1
3984	686	"arg_2"	"sec_interval"	13	0	1	2
3985	687	"res_0"	"sec_interval"	13	0	0	0
3986	687	"arg_1"	"timetz"	7	0	1	1
3987	687	"arg_2"	"sec_interval"	13	0	1	2
3988	688	"res_0"	"sec_interval"	13	0	0	0
3989	688	"arg_1"	"date"	0	0	1	1
3990	688	"arg_2"	"sec_interval"	13	0	1	2
3991	689	"res_0"	"sec_interval"	13	0	0	0
3992	689	"arg_1"	"timestamp"	7	0	1	1
3993	689	"arg_2"	"sec_interval"	13	0	1	2
3994	690	"res_0"	"sec_interval"	13	0	0	0
3995	690	"arg_1"	"timestamptz"	7	0	1	1
3996	690	"arg_2"	"sec_interval"	13	0	1	2
3997	691	"res_0"	"sec_interval"	13	0	0	0
3998	691	"arg_1"	"blob"	0	0	1	1
3999	691	"arg_2"	"sec_interval"	13	0	1	2
4000	692	"res_0"	"time"	7	0	0	0
4001	692	"arg_1"	"oid"	63	0	1	1
4002	692	"arg_2"	"time"	7	0	1	2
4003	693	"res_0"	"time"	7	0	0	0
4004	693	"arg_1"	"tinyint"	8	0	1	1
4005	693	"arg_2"	"time"	7	0	1	2
4006	694	"res_0"	"time"	7	0	0	0
4007	694	"arg_1"	"smallint"	16	0	1	1
4008	694	"arg_2"	"time"	7	0	1	2
4009	695	"res_0"	"time"	7	0	0	0
4010	695	"arg_1"	"int"	32	0	1	1
4011	695	"arg_2"	"time"	7	0	1	2
4012	696	"res_0"	"time"	7	0	0	0
4013	696	"arg_1"	"bigint"	64	0	1	1
4014	696	"arg_2"	"time"	7	0	1	2
4015	697	"res_0"	"time"	7	0	0	0
4016	697	"arg_1"	"wrd"	64	0	1	1
4017	697	"arg_2"	"time"	7	0	1	2
4018	698	"res_0"	"time"	7	0	0	0
4019	698	"arg_1"	"decimal"	2	0	1	1
4020	698	"arg_2"	"time"	7	0	1	2
4021	699	"res_0"	"time"	7	0	0	0
4022	699	"arg_1"	"decimal"	4	0	1	1
4023	699	"arg_2"	"time"	7	0	1	2
4024	700	"res_0"	"time"	7	0	0	0
4025	700	"arg_1"	"decimal"	9	0	1	1
4026	700	"arg_2"	"time"	7	0	1	2
4027	701	"res_0"	"time"	7	0	0	0
4028	701	"arg_1"	"decimal"	19	0	1	1
4029	701	"arg_2"	"time"	7	0	1	2
4030	702	"res_0"	"time"	7	0	0	0
4031	702	"arg_1"	"real"	24	0	1	1
4032	702	"arg_2"	"time"	7	0	1	2
4033	703	"res_0"	"time"	7	0	0	0
4034	703	"arg_1"	"double"	53	0	1	1
4035	703	"arg_2"	"time"	7	0	1	2
4036	704	"res_0"	"time"	7	0	0	0
4037	704	"arg_1"	"month_interval"	32	0	1	1
4038	704	"arg_2"	"time"	7	0	1	2
4039	705	"res_0"	"time"	7	0	0	0
4040	705	"arg_1"	"sec_interval"	13	0	1	1
4041	705	"arg_2"	"time"	7	0	1	2
4042	706	"res_0"	"time"	7	0	0	0
4043	706	"arg_1"	"time"	7	0	1	1
4044	706	"arg_2"	"time"	7	0	1	2
4045	707	"res_0"	"time"	7	0	0	0
4046	707	"arg_1"	"timetz"	7	0	1	1
4047	707	"arg_2"	"time"	7	0	1	2
4048	708	"res_0"	"time"	7	0	0	0
4049	708	"arg_1"	"date"	0	0	1	1
4050	708	"arg_2"	"time"	7	0	1	2
4051	709	"res_0"	"time"	7	0	0	0
4052	709	"arg_1"	"timestamp"	7	0	1	1
4053	709	"arg_2"	"time"	7	0	1	2
4054	710	"res_0"	"time"	7	0	0	0
4055	710	"arg_1"	"timestamptz"	7	0	1	1
4056	710	"arg_2"	"time"	7	0	1	2
4057	711	"res_0"	"time"	7	0	0	0
4058	711	"arg_1"	"blob"	0	0	1	1
4059	711	"arg_2"	"time"	7	0	1	2
4060	712	"res_0"	"timetz"	7	0	0	0
4061	712	"arg_1"	"oid"	63	0	1	1
4062	712	"arg_2"	"timetz"	7	0	1	2
4063	713	"res_0"	"timetz"	7	0	0	0
4064	713	"arg_1"	"tinyint"	8	0	1	1
4065	713	"arg_2"	"timetz"	7	0	1	2
4066	714	"res_0"	"timetz"	7	0	0	0
4067	714	"arg_1"	"smallint"	16	0	1	1
4068	714	"arg_2"	"timetz"	7	0	1	2
4069	715	"res_0"	"timetz"	7	0	0	0
4070	715	"arg_1"	"int"	32	0	1	1
4071	715	"arg_2"	"timetz"	7	0	1	2
4072	716	"res_0"	"timetz"	7	0	0	0
4073	716	"arg_1"	"bigint"	64	0	1	1
4074	716	"arg_2"	"timetz"	7	0	1	2
4075	717	"res_0"	"timetz"	7	0	0	0
4076	717	"arg_1"	"wrd"	64	0	1	1
4077	717	"arg_2"	"timetz"	7	0	1	2
4078	718	"res_0"	"timetz"	7	0	0	0
4079	718	"arg_1"	"decimal"	2	0	1	1
4080	718	"arg_2"	"timetz"	7	0	1	2
4081	719	"res_0"	"timetz"	7	0	0	0
4082	719	"arg_1"	"decimal"	4	0	1	1
4083	719	"arg_2"	"timetz"	7	0	1	2
4084	720	"res_0"	"timetz"	7	0	0	0
4085	720	"arg_1"	"decimal"	9	0	1	1
4086	720	"arg_2"	"timetz"	7	0	1	2
4087	721	"res_0"	"timetz"	7	0	0	0
4088	721	"arg_1"	"decimal"	19	0	1	1
4089	721	"arg_2"	"timetz"	7	0	1	2
4090	722	"res_0"	"timetz"	7	0	0	0
4091	722	"arg_1"	"real"	24	0	1	1
4092	722	"arg_2"	"timetz"	7	0	1	2
4093	723	"res_0"	"timetz"	7	0	0	0
4094	723	"arg_1"	"double"	53	0	1	1
4095	723	"arg_2"	"timetz"	7	0	1	2
4096	724	"res_0"	"timetz"	7	0	0	0
4097	724	"arg_1"	"month_interval"	32	0	1	1
4098	724	"arg_2"	"timetz"	7	0	1	2
4099	725	"res_0"	"timetz"	7	0	0	0
4100	725	"arg_1"	"sec_interval"	13	0	1	1
4101	725	"arg_2"	"timetz"	7	0	1	2
4102	726	"res_0"	"timetz"	7	0	0	0
4103	726	"arg_1"	"time"	7	0	1	1
4104	726	"arg_2"	"timetz"	7	0	1	2
4105	727	"res_0"	"timetz"	7	0	0	0
4106	727	"arg_1"	"timetz"	7	0	1	1
4107	727	"arg_2"	"timetz"	7	0	1	2
4108	728	"res_0"	"timetz"	7	0	0	0
4109	728	"arg_1"	"date"	0	0	1	1
4110	728	"arg_2"	"timetz"	7	0	1	2
4111	729	"res_0"	"timetz"	7	0	0	0
4112	729	"arg_1"	"timestamp"	7	0	1	1
4113	729	"arg_2"	"timetz"	7	0	1	2
4114	730	"res_0"	"timetz"	7	0	0	0
4115	730	"arg_1"	"timestamptz"	7	0	1	1
4116	730	"arg_2"	"timetz"	7	0	1	2
4117	731	"res_0"	"timetz"	7	0	0	0
4118	731	"arg_1"	"blob"	0	0	1	1
4119	731	"arg_2"	"timetz"	7	0	1	2
4120	732	"res_0"	"date"	0	0	0	0
4121	732	"arg_1"	"oid"	63	0	1	1
4122	732	"arg_2"	"date"	0	0	1	2
4123	733	"res_0"	"date"	0	0	0	0
4124	733	"arg_1"	"tinyint"	8	0	1	1
4125	733	"arg_2"	"date"	0	0	1	2
4126	734	"res_0"	"date"	0	0	0	0
4127	734	"arg_1"	"smallint"	16	0	1	1
4128	734	"arg_2"	"date"	0	0	1	2
4129	735	"res_0"	"date"	0	0	0	0
4130	735	"arg_1"	"int"	32	0	1	1
4131	735	"arg_2"	"date"	0	0	1	2
4132	736	"res_0"	"date"	0	0	0	0
4133	736	"arg_1"	"bigint"	64	0	1	1
4134	736	"arg_2"	"date"	0	0	1	2
4135	737	"res_0"	"date"	0	0	0	0
4136	737	"arg_1"	"wrd"	64	0	1	1
4137	737	"arg_2"	"date"	0	0	1	2
4138	738	"res_0"	"date"	0	0	0	0
4139	738	"arg_1"	"decimal"	2	0	1	1
4140	738	"arg_2"	"date"	0	0	1	2
4141	739	"res_0"	"date"	0	0	0	0
4142	739	"arg_1"	"decimal"	4	0	1	1
4143	739	"arg_2"	"date"	0	0	1	2
4144	740	"res_0"	"date"	0	0	0	0
4145	740	"arg_1"	"decimal"	9	0	1	1
4146	740	"arg_2"	"date"	0	0	1	2
4147	741	"res_0"	"date"	0	0	0	0
4148	741	"arg_1"	"decimal"	19	0	1	1
4149	741	"arg_2"	"date"	0	0	1	2
4150	742	"res_0"	"date"	0	0	0	0
4151	742	"arg_1"	"real"	24	0	1	1
4152	742	"arg_2"	"date"	0	0	1	2
4153	743	"res_0"	"date"	0	0	0	0
4154	743	"arg_1"	"double"	53	0	1	1
4155	743	"arg_2"	"date"	0	0	1	2
4156	744	"res_0"	"date"	0	0	0	0
4157	744	"arg_1"	"month_interval"	32	0	1	1
4158	744	"arg_2"	"date"	0	0	1	2
4159	745	"res_0"	"date"	0	0	0	0
4160	745	"arg_1"	"sec_interval"	13	0	1	1
4161	745	"arg_2"	"date"	0	0	1	2
4162	746	"res_0"	"date"	0	0	0	0
4163	746	"arg_1"	"time"	7	0	1	1
4164	746	"arg_2"	"date"	0	0	1	2
4165	747	"res_0"	"date"	0	0	0	0
4166	747	"arg_1"	"timetz"	7	0	1	1
4167	747	"arg_2"	"date"	0	0	1	2
4168	748	"res_0"	"date"	0	0	0	0
4169	748	"arg_1"	"date"	0	0	1	1
4170	748	"arg_2"	"date"	0	0	1	2
4171	749	"res_0"	"date"	0	0	0	0
4172	749	"arg_1"	"timestamp"	7	0	1	1
4173	749	"arg_2"	"date"	0	0	1	2
4174	750	"res_0"	"date"	0	0	0	0
4175	750	"arg_1"	"timestamptz"	7	0	1	1
4176	750	"arg_2"	"date"	0	0	1	2
4177	751	"res_0"	"date"	0	0	0	0
4178	751	"arg_1"	"blob"	0	0	1	1
4179	751	"arg_2"	"date"	0	0	1	2
4180	752	"res_0"	"timestamp"	7	0	0	0
4181	752	"arg_1"	"oid"	63	0	1	1
4182	752	"arg_2"	"timestamp"	7	0	1	2
4183	753	"res_0"	"timestamp"	7	0	0	0
4184	753	"arg_1"	"tinyint"	8	0	1	1
4185	753	"arg_2"	"timestamp"	7	0	1	2
4186	754	"res_0"	"timestamp"	7	0	0	0
4187	754	"arg_1"	"smallint"	16	0	1	1
4188	754	"arg_2"	"timestamp"	7	0	1	2
4189	755	"res_0"	"timestamp"	7	0	0	0
4190	755	"arg_1"	"int"	32	0	1	1
4191	755	"arg_2"	"timestamp"	7	0	1	2
4192	756	"res_0"	"timestamp"	7	0	0	0
4193	756	"arg_1"	"bigint"	64	0	1	1
4194	756	"arg_2"	"timestamp"	7	0	1	2
4195	757	"res_0"	"timestamp"	7	0	0	0
4196	757	"arg_1"	"wrd"	64	0	1	1
4197	757	"arg_2"	"timestamp"	7	0	1	2
4198	758	"res_0"	"timestamp"	7	0	0	0
4199	758	"arg_1"	"decimal"	2	0	1	1
4200	758	"arg_2"	"timestamp"	7	0	1	2
4201	759	"res_0"	"timestamp"	7	0	0	0
4202	759	"arg_1"	"decimal"	4	0	1	1
4203	759	"arg_2"	"timestamp"	7	0	1	2
4204	760	"res_0"	"timestamp"	7	0	0	0
4205	760	"arg_1"	"decimal"	9	0	1	1
4206	760	"arg_2"	"timestamp"	7	0	1	2
4207	761	"res_0"	"timestamp"	7	0	0	0
4208	761	"arg_1"	"decimal"	19	0	1	1
4209	761	"arg_2"	"timestamp"	7	0	1	2
4210	762	"res_0"	"timestamp"	7	0	0	0
4211	762	"arg_1"	"real"	24	0	1	1
4212	762	"arg_2"	"timestamp"	7	0	1	2
4213	763	"res_0"	"timestamp"	7	0	0	0
4214	763	"arg_1"	"double"	53	0	1	1
4215	763	"arg_2"	"timestamp"	7	0	1	2
4216	764	"res_0"	"timestamp"	7	0	0	0
4217	764	"arg_1"	"month_interval"	32	0	1	1
4218	764	"arg_2"	"timestamp"	7	0	1	2
4219	765	"res_0"	"timestamp"	7	0	0	0
4220	765	"arg_1"	"sec_interval"	13	0	1	1
4221	765	"arg_2"	"timestamp"	7	0	1	2
4222	766	"res_0"	"timestamp"	7	0	0	0
4223	766	"arg_1"	"time"	7	0	1	1
4224	766	"arg_2"	"timestamp"	7	0	1	2
4225	767	"res_0"	"timestamp"	7	0	0	0
4226	767	"arg_1"	"timetz"	7	0	1	1
4227	767	"arg_2"	"timestamp"	7	0	1	2
4228	768	"res_0"	"timestamp"	7	0	0	0
4229	768	"arg_1"	"date"	0	0	1	1
4230	768	"arg_2"	"timestamp"	7	0	1	2
4231	769	"res_0"	"timestamp"	7	0	0	0
4232	769	"arg_1"	"timestamp"	7	0	1	1
4233	769	"arg_2"	"timestamp"	7	0	1	2
4234	770	"res_0"	"timestamp"	7	0	0	0
4235	770	"arg_1"	"timestamptz"	7	0	1	1
4236	770	"arg_2"	"timestamp"	7	0	1	2
4237	771	"res_0"	"timestamp"	7	0	0	0
4238	771	"arg_1"	"blob"	0	0	1	1
4239	771	"arg_2"	"timestamp"	7	0	1	2
4240	772	"res_0"	"timestamptz"	7	0	0	0
4241	772	"arg_1"	"oid"	63	0	1	1
4242	772	"arg_2"	"timestamptz"	7	0	1	2
4243	773	"res_0"	"timestamptz"	7	0	0	0
4244	773	"arg_1"	"tinyint"	8	0	1	1
4245	773	"arg_2"	"timestamptz"	7	0	1	2
4246	774	"res_0"	"timestamptz"	7	0	0	0
4247	774	"arg_1"	"smallint"	16	0	1	1
4248	774	"arg_2"	"timestamptz"	7	0	1	2
4249	775	"res_0"	"timestamptz"	7	0	0	0
4250	775	"arg_1"	"int"	32	0	1	1
4251	775	"arg_2"	"timestamptz"	7	0	1	2
4252	776	"res_0"	"timestamptz"	7	0	0	0
4253	776	"arg_1"	"bigint"	64	0	1	1
4254	776	"arg_2"	"timestamptz"	7	0	1	2
4255	777	"res_0"	"timestamptz"	7	0	0	0
4256	777	"arg_1"	"wrd"	64	0	1	1
4257	777	"arg_2"	"timestamptz"	7	0	1	2
4258	778	"res_0"	"timestamptz"	7	0	0	0
4259	778	"arg_1"	"decimal"	2	0	1	1
4260	778	"arg_2"	"timestamptz"	7	0	1	2
4261	779	"res_0"	"timestamptz"	7	0	0	0
4262	779	"arg_1"	"decimal"	4	0	1	1
4263	779	"arg_2"	"timestamptz"	7	0	1	2
4264	780	"res_0"	"timestamptz"	7	0	0	0
4265	780	"arg_1"	"decimal"	9	0	1	1
4266	780	"arg_2"	"timestamptz"	7	0	1	2
4267	781	"res_0"	"timestamptz"	7	0	0	0
4268	781	"arg_1"	"decimal"	19	0	1	1
4269	781	"arg_2"	"timestamptz"	7	0	1	2
4270	782	"res_0"	"timestamptz"	7	0	0	0
4271	782	"arg_1"	"real"	24	0	1	1
4272	782	"arg_2"	"timestamptz"	7	0	1	2
4273	783	"res_0"	"timestamptz"	7	0	0	0
4274	783	"arg_1"	"double"	53	0	1	1
4275	783	"arg_2"	"timestamptz"	7	0	1	2
4276	784	"res_0"	"timestamptz"	7	0	0	0
4277	784	"arg_1"	"month_interval"	32	0	1	1
4278	784	"arg_2"	"timestamptz"	7	0	1	2
4279	785	"res_0"	"timestamptz"	7	0	0	0
4280	785	"arg_1"	"sec_interval"	13	0	1	1
4281	785	"arg_2"	"timestamptz"	7	0	1	2
4282	786	"res_0"	"timestamptz"	7	0	0	0
4283	786	"arg_1"	"time"	7	0	1	1
4284	786	"arg_2"	"timestamptz"	7	0	1	2
4285	787	"res_0"	"timestamptz"	7	0	0	0
4286	787	"arg_1"	"timetz"	7	0	1	1
4287	787	"arg_2"	"timestamptz"	7	0	1	2
4288	788	"res_0"	"timestamptz"	7	0	0	0
4289	788	"arg_1"	"date"	0	0	1	1
4290	788	"arg_2"	"timestamptz"	7	0	1	2
4291	789	"res_0"	"timestamptz"	7	0	0	0
4292	789	"arg_1"	"timestamp"	7	0	1	1
4293	789	"arg_2"	"timestamptz"	7	0	1	2
4294	790	"res_0"	"timestamptz"	7	0	0	0
4295	790	"arg_1"	"timestamptz"	7	0	1	1
4296	790	"arg_2"	"timestamptz"	7	0	1	2
4297	791	"res_0"	"timestamptz"	7	0	0	0
4298	791	"arg_1"	"blob"	0	0	1	1
4299	791	"arg_2"	"timestamptz"	7	0	1	2
4300	792	"res_0"	"blob"	0	0	0	0
4301	792	"arg_1"	"oid"	63	0	1	1
4302	792	"arg_2"	"blob"	0	0	1	2
4303	793	"res_0"	"blob"	0	0	0	0
4304	793	"arg_1"	"tinyint"	8	0	1	1
4305	793	"arg_2"	"blob"	0	0	1	2
4306	794	"res_0"	"blob"	0	0	0	0
4307	794	"arg_1"	"smallint"	16	0	1	1
4308	794	"arg_2"	"blob"	0	0	1	2
4309	795	"res_0"	"blob"	0	0	0	0
4310	795	"arg_1"	"int"	32	0	1	1
4311	795	"arg_2"	"blob"	0	0	1	2
4312	796	"res_0"	"blob"	0	0	0	0
4313	796	"arg_1"	"bigint"	64	0	1	1
4314	796	"arg_2"	"blob"	0	0	1	2
4315	797	"res_0"	"blob"	0	0	0	0
4316	797	"arg_1"	"wrd"	64	0	1	1
4317	797	"arg_2"	"blob"	0	0	1	2
4318	798	"res_0"	"blob"	0	0	0	0
4319	798	"arg_1"	"decimal"	2	0	1	1
4320	798	"arg_2"	"blob"	0	0	1	2
4321	799	"res_0"	"blob"	0	0	0	0
4322	799	"arg_1"	"decimal"	4	0	1	1
4323	799	"arg_2"	"blob"	0	0	1	2
4324	800	"res_0"	"blob"	0	0	0	0
4325	800	"arg_1"	"decimal"	9	0	1	1
4326	800	"arg_2"	"blob"	0	0	1	2
4327	801	"res_0"	"blob"	0	0	0	0
4328	801	"arg_1"	"decimal"	19	0	1	1
4329	801	"arg_2"	"blob"	0	0	1	2
4330	802	"res_0"	"blob"	0	0	0	0
4331	802	"arg_1"	"real"	24	0	1	1
4332	802	"arg_2"	"blob"	0	0	1	2
4333	803	"res_0"	"blob"	0	0	0	0
4334	803	"arg_1"	"double"	53	0	1	1
4335	803	"arg_2"	"blob"	0	0	1	2
4336	804	"res_0"	"blob"	0	0	0	0
4337	804	"arg_1"	"month_interval"	32	0	1	1
4338	804	"arg_2"	"blob"	0	0	1	2
4339	805	"res_0"	"blob"	0	0	0	0
4340	805	"arg_1"	"sec_interval"	13	0	1	1
4341	805	"arg_2"	"blob"	0	0	1	2
4342	806	"res_0"	"blob"	0	0	0	0
4343	806	"arg_1"	"time"	7	0	1	1
4344	806	"arg_2"	"blob"	0	0	1	2
4345	807	"res_0"	"blob"	0	0	0	0
4346	807	"arg_1"	"timetz"	7	0	1	1
4347	807	"arg_2"	"blob"	0	0	1	2
4348	808	"res_0"	"blob"	0	0	0	0
4349	808	"arg_1"	"date"	0	0	1	1
4350	808	"arg_2"	"blob"	0	0	1	2
4351	809	"res_0"	"blob"	0	0	0	0
4352	809	"arg_1"	"timestamp"	7	0	1	1
4353	809	"arg_2"	"blob"	0	0	1	2
4354	810	"res_0"	"blob"	0	0	0	0
4355	810	"arg_1"	"timestamptz"	7	0	1	1
4356	810	"arg_2"	"blob"	0	0	1	2
4357	811	"res_0"	"blob"	0	0	0	0
4358	811	"arg_1"	"blob"	0	0	1	1
4359	811	"arg_2"	"blob"	0	0	1	2
4360	812	"res_0"	"real"	24	0	0	0
4361	812	"arg_1"	"real"	24	0	1	1
4362	812	"arg_2"	"real"	24	0	1	2
4363	813	"res_0"	"real"	24	0	0	0
4364	813	"arg_1"	"real"	24	0	1	1
4365	814	"res_0"	"real"	24	0	0	0
4366	814	"arg_1"	"real"	24	0	1	1
4367	815	"res_0"	"real"	24	0	0	0
4368	815	"arg_1"	"real"	24	0	1	1
4369	816	"res_0"	"real"	24	0	0	0
4370	816	"arg_1"	"real"	24	0	1	1
4371	817	"res_0"	"real"	24	0	0	0
4372	817	"arg_1"	"real"	24	0	1	1
4373	818	"res_0"	"real"	24	0	0	0
4374	818	"arg_1"	"real"	24	0	1	1
4375	819	"res_0"	"real"	24	0	0	0
4376	819	"arg_1"	"real"	24	0	1	1
4377	820	"res_0"	"real"	24	0	0	0
4378	820	"arg_1"	"real"	24	0	1	1
4379	821	"res_0"	"real"	24	0	0	0
4380	821	"arg_1"	"real"	24	0	1	1
4381	822	"res_0"	"real"	24	0	0	0
4382	822	"arg_1"	"real"	24	0	1	1
4383	822	"arg_2"	"real"	24	0	1	2
4384	823	"res_0"	"real"	24	0	0	0
4385	823	"arg_1"	"real"	24	0	1	1
4386	824	"res_0"	"real"	24	0	0	0
4387	824	"arg_1"	"real"	24	0	1	1
4388	825	"res_0"	"real"	24	0	0	0
4389	825	"arg_1"	"real"	24	0	1	1
4390	826	"res_0"	"real"	24	0	0	0
4391	826	"arg_1"	"real"	24	0	1	1
4392	827	"res_0"	"real"	24	0	0	0
4393	827	"arg_1"	"real"	24	0	1	1
4394	828	"res_0"	"real"	24	0	0	0
4395	828	"arg_1"	"real"	24	0	1	1
4396	829	"res_0"	"real"	24	0	0	0
4397	829	"arg_1"	"real"	24	0	1	1
4398	830	"res_0"	"real"	24	0	0	0
4399	830	"arg_1"	"real"	24	0	1	1
4400	831	"res_0"	"double"	53	0	0	0
4401	831	"arg_1"	"double"	53	0	1	1
4402	831	"arg_2"	"double"	53	0	1	2
4403	832	"res_0"	"double"	53	0	0	0
4404	832	"arg_1"	"double"	53	0	1	1
4405	833	"res_0"	"double"	53	0	0	0
4406	833	"arg_1"	"double"	53	0	1	1
4407	834	"res_0"	"double"	53	0	0	0
4408	834	"arg_1"	"double"	53	0	1	1
4409	835	"res_0"	"double"	53	0	0	0
4410	835	"arg_1"	"double"	53	0	1	1
4411	836	"res_0"	"double"	53	0	0	0
4412	836	"arg_1"	"double"	53	0	1	1
4413	837	"res_0"	"double"	53	0	0	0
4414	837	"arg_1"	"double"	53	0	1	1
4415	838	"res_0"	"double"	53	0	0	0
4416	838	"arg_1"	"double"	53	0	1	1
4417	839	"res_0"	"double"	53	0	0	0
4418	839	"arg_1"	"double"	53	0	1	1
4419	840	"res_0"	"double"	53	0	0	0
4420	840	"arg_1"	"double"	53	0	1	1
4421	841	"res_0"	"double"	53	0	0	0
4422	841	"arg_1"	"double"	53	0	1	1
4423	841	"arg_2"	"double"	53	0	1	2
4424	842	"res_0"	"double"	53	0	0	0
4425	842	"arg_1"	"double"	53	0	1	1
4426	843	"res_0"	"double"	53	0	0	0
4427	843	"arg_1"	"double"	53	0	1	1
4428	844	"res_0"	"double"	53	0	0	0
4429	844	"arg_1"	"double"	53	0	1	1
4430	845	"res_0"	"double"	53	0	0	0
4431	845	"arg_1"	"double"	53	0	1	1
4432	846	"res_0"	"double"	53	0	0	0
4433	846	"arg_1"	"double"	53	0	1	1
4434	847	"res_0"	"double"	53	0	0	0
4435	847	"arg_1"	"double"	53	0	1	1
4436	848	"res_0"	"double"	53	0	0	0
4437	848	"arg_1"	"double"	53	0	1	1
4438	849	"res_0"	"double"	53	0	0	0
4439	849	"arg_1"	"double"	53	0	1	1
4440	850	"res_0"	"double"	53	0	0	0
4441	851	"res_0"	"int"	32	0	0	0
4442	852	"res_0"	"int"	32	0	0	0
4443	852	"arg_1"	"int"	32	0	1	1
4444	853	"res_0"	"date"	0	0	0	0
4445	854	"res_0"	"date"	0	0	0	0
4446	855	"res_0"	"timetz"	7	0	0	0
4447	856	"res_0"	"timetz"	7	0	0	0
4448	857	"res_0"	"timestamptz"	7	0	0	0
4449	858	"res_0"	"time"	7	0	0	0
4450	859	"res_0"	"timestamp"	7	0	0	0
4451	860	"res_0"	"month_interval"	32	0	0	0
4452	860	"arg_1"	"date"	0	0	1	1
4453	860	"arg_2"	"date"	0	0	1	2
4454	861	"res_0"	"sec_interval"	13	0	0	0
4455	861	"arg_1"	"timetz"	7	0	1	1
4456	861	"arg_2"	"timetz"	7	0	1	2
4457	862	"res_0"	"sec_interval"	13	0	0	0
4458	862	"arg_1"	"time"	7	0	1	1
4459	862	"arg_2"	"time"	7	0	1	2
4460	863	"res_0"	"sec_interval"	13	0	0	0
4461	863	"arg_1"	"timestamptz"	7	0	1	1
4462	863	"arg_2"	"timestamptz"	7	0	1	2
4463	864	"res_0"	"sec_interval"	13	0	0	0
4464	864	"arg_1"	"timestamp"	7	0	1	1
4465	864	"arg_2"	"timestamp"	7	0	1	2
4466	865	"res_0"	"date"	0	0	0	0
4467	865	"arg_1"	"date"	0	0	1	1
4468	865	"arg_2"	"sec_interval"	13	0	1	2
4469	866	"res_0"	"date"	0	0	0	0
4470	866	"arg_1"	"date"	0	0	1	1
4471	866	"arg_2"	"month_interval"	32	0	1	2
4472	867	"res_0"	"time"	7	0	0	0
4473	867	"arg_1"	"time"	7	0	1	1
4474	867	"arg_2"	"sec_interval"	13	0	1	2
4475	868	"res_0"	"timetz"	7	0	0	0
4476	868	"arg_1"	"timetz"	7	0	1	1
4477	868	"arg_2"	"sec_interval"	13	0	1	2
4478	869	"res_0"	"timestamp"	7	0	0	0
4479	869	"arg_1"	"timestamp"	7	0	1	1
4480	869	"arg_2"	"sec_interval"	13	0	1	2
4481	870	"res_0"	"timestamp"	7	0	0	0
4482	870	"arg_1"	"timestamp"	7	0	1	1
4483	870	"arg_2"	"month_interval"	32	0	1	2
4484	871	"res_0"	"timestamptz"	7	0	0	0
4485	871	"arg_1"	"timestamptz"	7	0	1	1
4486	871	"arg_2"	"sec_interval"	13	0	1	2
4487	872	"res_0"	"timestamptz"	7	0	0	0
4488	872	"arg_1"	"timestamptz"	7	0	1	1
4489	872	"arg_2"	"month_interval"	32	0	1	2
4490	873	"res_0"	"date"	0	0	0	0
4491	873	"arg_1"	"date"	0	0	1	1
4492	873	"arg_2"	"sec_interval"	13	0	1	2
4493	874	"res_0"	"date"	0	0	0	0
4494	874	"arg_1"	"date"	0	0	1	1
4495	874	"arg_2"	"month_interval"	32	0	1	2
4496	875	"res_0"	"timestamp"	7	0	0	0
4497	875	"arg_1"	"timestamp"	7	0	1	1
4498	875	"arg_2"	"sec_interval"	13	0	1	2
4499	876	"res_0"	"timestamp"	7	0	0	0
4500	876	"arg_1"	"timestamp"	7	0	1	1
4501	876	"arg_2"	"month_interval"	32	0	1	2
4502	877	"res_0"	"timestamptz"	7	0	0	0
4503	877	"arg_1"	"timestamptz"	7	0	1	1
4504	877	"arg_2"	"sec_interval"	13	0	1	2
4505	878	"res_0"	"timestamptz"	7	0	0	0
4506	878	"arg_1"	"timestamptz"	7	0	1	1
4507	878	"arg_2"	"month_interval"	32	0	1	2
4508	879	"res_0"	"time"	7	0	0	0
4509	879	"arg_1"	"time"	7	0	1	1
4510	879	"arg_2"	"sec_interval"	13	0	1	2
4511	880	"res_0"	"timetz"	7	0	0	0
4512	880	"arg_1"	"timetz"	7	0	1	1
4513	880	"arg_2"	"sec_interval"	13	0	1	2
4514	881	"res_0"	"sec_interval"	13	0	0	0
4515	882	"res_0"	"int"	32	0	0	0
4516	882	"arg_1"	"date"	0	0	1	1
4517	883	"res_0"	"int"	32	0	0	0
4518	883	"arg_1"	"date"	0	0	1	1
4519	884	"res_0"	"int"	32	0	0	0
4520	884	"arg_1"	"date"	0	0	1	1
4521	885	"res_0"	"int"	32	0	0	0
4522	885	"arg_1"	"time"	7	0	1	1
4523	886	"res_0"	"int"	32	0	0	0
4524	886	"arg_1"	"time"	7	0	1	1
4525	887	"res_0"	"decimal"	9	3	0	0
4526	887	"arg_1"	"time"	7	0	1	1
4527	888	"res_0"	"int"	32	0	0	0
4528	888	"arg_1"	"timetz"	7	0	1	1
4529	889	"res_0"	"int"	32	0	0	0
4530	889	"arg_1"	"timetz"	7	0	1	1
4531	890	"res_0"	"decimal"	9	3	0	0
4532	890	"arg_1"	"timetz"	7	0	1	1
4533	891	"res_0"	"int"	32	0	0	0
4534	891	"arg_1"	"timestamp"	7	0	1	1
4535	892	"res_0"	"int"	32	0	0	0
4536	892	"arg_1"	"timestamp"	7	0	1	1
4537	893	"res_0"	"int"	32	0	0	0
4538	893	"arg_1"	"timestamp"	7	0	1	1
4539	894	"res_0"	"int"	32	0	0	0
4540	894	"arg_1"	"timestamp"	7	0	1	1
4541	895	"res_0"	"int"	32	0	0	0
4542	895	"arg_1"	"timestamp"	7	0	1	1
4543	896	"res_0"	"decimal"	9	3	0	0
4544	896	"arg_1"	"timestamp"	7	0	1	1
4545	897	"res_0"	"int"	32	0	0	0
4546	897	"arg_1"	"timestamptz"	7	0	1	1
4547	898	"res_0"	"int"	32	0	0	0
4548	898	"arg_1"	"timestamptz"	7	0	1	1
4549	899	"res_0"	"int"	32	0	0	0
4550	899	"arg_1"	"timestamptz"	7	0	1	1
4551	900	"res_0"	"int"	32	0	0	0
4552	900	"arg_1"	"timestamptz"	7	0	1	1
4553	901	"res_0"	"int"	32	0	0	0
4554	901	"arg_1"	"timestamptz"	7	0	1	1
4555	902	"res_0"	"decimal"	9	3	0	0
4556	902	"arg_1"	"timestamptz"	7	0	1	1
4557	903	"res_0"	"int"	32	0	0	0
4558	903	"arg_1"	"month_interval"	32	0	1	1
4559	904	"res_0"	"int"	32	0	0	0
4560	904	"arg_1"	"month_interval"	32	0	1	1
4561	905	"res_0"	"bigint"	64	0	0	0
4562	905	"arg_1"	"sec_interval"	13	0	1	1
4563	906	"res_0"	"int"	32	0	0	0
4564	906	"arg_1"	"sec_interval"	13	0	1	1
4565	907	"res_0"	"int"	32	0	0	0
4566	907	"arg_1"	"sec_interval"	13	0	1	1
4567	908	"res_0"	"int"	32	0	0	0
4568	908	"arg_1"	"sec_interval"	13	0	1	1
4569	909	"res_0"	"int"	32	0	0	0
4570	909	"arg_1"	"date"	0	0	1	1
4571	910	"res_0"	"int"	32	0	0	0
4572	910	"arg_1"	"date"	0	0	1	1
4573	911	"res_0"	"int"	32	0	0	0
4574	911	"arg_1"	"date"	0	0	1	1
4575	912	"res_0"	"int"	32	0	0	0
4576	912	"arg_1"	"date"	0	0	1	1
4577	913	"res_0"	"int"	32	0	0	0
4578	913	"arg_1"	"date"	0	0	1	1
4579	914	"res_0"	"bigint"	64	0	0	0
4580	914	"arg_1"	"varchar"	0	0	1	1
4581	914	"arg_2"	"varchar"	0	0	1	2
4582	915	"res_0"	"bigint"	64	0	0	0
4583	915	"arg_1"	"varchar"	0	0	1	1
4584	915	"arg_2"	"varchar"	0	0	1	2
4585	916	"res_0"	"bigint"	64	0	0	0
4586	916	"arg_1"	"varchar"	0	0	1	1
4587	916	"arg_2"	"varchar"	0	0	1	2
4588	916	"arg_3"	"bigint"	64	0	1	3
4589	917	"res_0"	"tinyint"	8	0	0	0
4590	917	"arg_1"	"char"	0	0	1	1
4591	917	"arg_2"	"boolean"	1	0	1	2
4592	918	"res_0"	"smallint"	16	0	0	0
4593	918	"arg_1"	"char"	0	0	1	1
4594	918	"arg_2"	"boolean"	1	0	1	2
4595	919	"res_0"	"int"	32	0	0	0
4596	919	"arg_1"	"char"	0	0	1	1
4597	919	"arg_2"	"boolean"	1	0	1	2
4598	920	"res_0"	"char"	0	0	0	0
4599	920	"arg_1"	"char"	0	0	1	1
4600	921	"res_0"	"int"	32	0	0	0
4601	921	"arg_1"	"char"	0	0	1	1
4602	921	"arg_2"	"char"	0	0	1	2
4603	922	"res_0"	"int"	32	0	0	0
4604	922	"arg_1"	"char"	0	0	1	1
4605	922	"arg_2"	"char"	0	0	1	2
4606	922	"arg_3"	"int"	32	0	1	3
4607	923	"res_0"	"char"	0	0	0	0
4608	923	"arg_1"	"char"	0	0	1	1
4609	923	"arg_2"	"char"	0	0	1	2
4610	923	"arg_3"	"int"	32	0	1	3
4611	924	"res_0"	"char"	0	0	0	0
4612	924	"arg_1"	"char"	0	0	1	1
4613	924	"arg_2"	"int"	32	0	1	2
4614	925	"res_0"	"char"	0	0	0	0
4615	925	"arg_1"	"char"	0	0	1	1
4616	925	"arg_2"	"int"	32	0	1	2
4617	925	"arg_3"	"int"	32	0	1	3
4618	926	"res_0"	"boolean"	1	0	0	0
4619	926	"arg_1"	"char"	0	0	1	1
4620	926	"arg_2"	"char"	0	0	1	2
4621	927	"res_0"	"boolean"	1	0	0	0
4622	927	"arg_1"	"char"	0	0	1	1
4623	927	"arg_2"	"char"	0	0	1	2
4624	927	"arg_3"	"char"	0	0	1	3
4625	928	"res_0"	"boolean"	1	0	0	0
4626	928	"arg_1"	"char"	0	0	1	1
4627	928	"arg_2"	"char"	0	0	1	2
4628	929	"res_0"	"boolean"	1	0	0	0
4629	929	"arg_1"	"char"	0	0	1	1
4630	929	"arg_2"	"char"	0	0	1	2
4631	929	"arg_3"	"char"	0	0	1	3
4632	930	"res_0"	"boolean"	1	0	0	0
4633	930	"arg_1"	"char"	0	0	1	1
4634	930	"arg_2"	"char"	0	0	1	2
4635	931	"res_0"	"boolean"	1	0	0	0
4636	931	"arg_1"	"char"	0	0	1	1
4637	931	"arg_2"	"char"	0	0	1	2
4638	931	"arg_3"	"char"	0	0	1	3
4639	932	"res_0"	"boolean"	1	0	0	0
4640	932	"arg_1"	"char"	0	0	1	1
4641	932	"arg_2"	"char"	0	0	1	2
4642	933	"res_0"	"boolean"	1	0	0	0
4643	933	"arg_1"	"char"	0	0	1	1
4644	933	"arg_2"	"char"	0	0	1	2
4645	933	"arg_3"	"char"	0	0	1	3
4646	934	"res_0"	"int"	32	0	0	0
4647	934	"arg_1"	"char"	0	0	1	1
4648	934	"arg_2"	"char"	0	0	1	2
4649	935	"res_0"	"char"	0	0	0	0
4650	935	"arg_1"	"char"	0	0	1	1
4651	935	"arg_2"	"int"	32	0	1	2
4652	936	"res_0"	"char"	0	0	0	0
4653	936	"arg_1"	"char"	0	0	1	1
4654	936	"arg_2"	"char"	0	0	1	2
4655	937	"res_0"	"int"	32	0	0	0
4656	937	"arg_1"	"char"	0	0	1	1
4657	938	"res_0"	"char"	0	0	0	0
4658	938	"arg_1"	"int"	32	0	1	1
4659	939	"res_0"	"int"	32	0	0	0
4660	939	"arg_1"	"char"	0	0	1	1
4661	940	"res_0"	"char"	0	0	0	0
4662	940	"arg_1"	"char"	0	0	1	1
4663	940	"arg_2"	"int"	32	0	1	2
4664	941	"res_0"	"char"	0	0	0	0
4665	941	"arg_1"	"char"	0	0	1	1
4666	941	"arg_2"	"int"	32	0	1	2
4667	942	"res_0"	"char"	0	0	0	0
4668	942	"arg_1"	"char"	0	0	1	1
4669	943	"res_0"	"char"	0	0	0	0
4670	943	"arg_1"	"char"	0	0	1	1
4671	944	"res_0"	"char"	0	0	0	0
4672	944	"arg_1"	"char"	0	0	1	1
4673	945	"res_0"	"char"	0	0	0	0
4674	945	"arg_1"	"char"	0	0	1	1
4675	946	"res_0"	"char"	0	0	0	0
4676	946	"arg_1"	"char"	0	0	1	1
4677	947	"res_0"	"char"	0	0	0	0
4678	947	"arg_1"	"char"	0	0	1	1
4679	947	"arg_2"	"char"	0	0	1	2
4680	948	"res_0"	"char"	0	0	0	0
4681	948	"arg_1"	"char"	0	0	1	1
4682	949	"res_0"	"char"	0	0	0	0
4683	949	"arg_1"	"char"	0	0	1	1
4684	949	"arg_2"	"char"	0	0	1	2
4685	950	"res_0"	"char"	0	0	0	0
4686	950	"arg_1"	"char"	0	0	1	1
4687	951	"res_0"	"char"	0	0	0	0
4688	951	"arg_1"	"char"	0	0	1	1
4689	951	"arg_2"	"char"	0	0	1	2
4690	952	"res_0"	"char"	0	0	0	0
4691	952	"arg_1"	"char"	0	0	1	1
4692	952	"arg_2"	"int"	32	0	1	2
4693	953	"res_0"	"char"	0	0	0	0
4694	953	"arg_1"	"char"	0	0	1	1
4695	953	"arg_2"	"int"	32	0	1	2
4696	953	"arg_3"	"char"	0	0	1	3
4697	954	"res_0"	"char"	0	0	0	0
4698	954	"arg_1"	"char"	0	0	1	1
4699	954	"arg_2"	"int"	32	0	1	2
4700	955	"res_0"	"char"	0	0	0	0
4701	955	"arg_1"	"char"	0	0	1	1
4702	955	"arg_2"	"int"	32	0	1	2
4703	955	"arg_3"	"char"	0	0	1	3
4704	956	"res_0"	"char"	0	0	0	0
4705	956	"arg_1"	"char"	0	0	1	1
4706	956	"arg_2"	"int"	32	0	1	2
4707	956	"arg_3"	"int"	32	0	1	3
4708	956	"arg_4"	"char"	0	0	1	4
4709	957	"res_0"	"char"	0	0	0	0
4710	957	"arg_1"	"char"	0	0	1	1
4711	957	"arg_2"	"char"	0	0	1	2
4712	957	"arg_3"	"char"	0	0	1	3
4713	958	"res_0"	"char"	0	0	0	0
4714	958	"arg_1"	"char"	0	0	1	1
4715	958	"arg_2"	"int"	32	0	1	2
4716	959	"res_0"	"char"	0	0	0	0
4717	959	"arg_1"	"int"	32	0	1	1
4718	960	"res_0"	"int"	32	0	0	0
4719	960	"arg_1"	"char"	0	0	1	1
4720	961	"res_0"	"int"	32	0	0	0
4721	961	"arg_1"	"char"	0	0	1	1
4722	962	"res_0"	"int"	32	0	0	0
4723	962	"arg_1"	"char"	0	0	1	1
4724	963	"res_0"	"char"	0	0	0	0
4725	963	"arg_1"	"char"	0	0	1	1
4726	964	"res_0"	"int"	32	0	0	0
4727	964	"arg_1"	"char"	0	0	1	1
4728	964	"arg_2"	"char"	0	0	1	2
4729	965	"res_0"	"int"	32	0	0	0
4730	965	"arg_1"	"char"	0	0	1	1
4731	965	"arg_2"	"char"	0	0	1	2
4732	966	"res_0"	"int"	32	0	0	0
4733	966	"arg_1"	"char"	0	0	1	1
4734	966	"arg_2"	"char"	0	0	1	2
4735	967	"res_0"	"double"	53	0	0	0
4736	967	"arg_1"	"char"	0	0	1	1
4737	967	"arg_2"	"char"	0	0	1	2
4738	968	"res_0"	"char"	0	0	0	0
4739	968	"arg_1"	"char"	0	0	1	1
4740	969	"res_0"	"int"	32	0	0	0
4741	969	"arg_1"	"char"	0	0	1	1
4742	969	"arg_2"	"char"	0	0	1	2
4743	970	"res_0"	"int"	32	0	0	0
4744	970	"arg_1"	"char"	0	0	1	1
4745	970	"arg_2"	"char"	0	0	1	2
4746	970	"arg_3"	"int"	32	0	1	3
4747	970	"arg_4"	"int"	32	0	1	4
4748	970	"arg_5"	"int"	32	0	1	5
4749	971	"res_0"	"tinyint"	8	0	0	0
4750	971	"arg_1"	"varchar"	0	0	1	1
4751	971	"arg_2"	"boolean"	1	0	1	2
4752	972	"res_0"	"smallint"	16	0	0	0
4753	972	"arg_1"	"varchar"	0	0	1	1
4754	972	"arg_2"	"boolean"	1	0	1	2
4755	973	"res_0"	"int"	32	0	0	0
4756	973	"arg_1"	"varchar"	0	0	1	1
4757	973	"arg_2"	"boolean"	1	0	1	2
4758	974	"res_0"	"varchar"	0	0	0	0
4759	974	"arg_1"	"varchar"	0	0	1	1
4760	975	"res_0"	"int"	32	0	0	0
4761	975	"arg_1"	"varchar"	0	0	1	1
4762	975	"arg_2"	"varchar"	0	0	1	2
4763	976	"res_0"	"int"	32	0	0	0
4764	976	"arg_1"	"varchar"	0	0	1	1
4765	976	"arg_2"	"varchar"	0	0	1	2
4766	976	"arg_3"	"int"	32	0	1	3
4767	977	"res_0"	"varchar"	0	0	0	0
4768	977	"arg_1"	"varchar"	0	0	1	1
4769	977	"arg_2"	"varchar"	0	0	1	2
4770	977	"arg_3"	"int"	32	0	1	3
4771	978	"res_0"	"varchar"	0	0	0	0
4772	978	"arg_1"	"varchar"	0	0	1	1
4773	978	"arg_2"	"int"	32	0	1	2
4774	979	"res_0"	"varchar"	0	0	0	0
4775	979	"arg_1"	"varchar"	0	0	1	1
4776	979	"arg_2"	"int"	32	0	1	2
4777	979	"arg_3"	"int"	32	0	1	3
4778	980	"res_0"	"boolean"	1	0	0	0
4779	980	"arg_1"	"varchar"	0	0	1	1
4780	980	"arg_2"	"varchar"	0	0	1	2
4781	981	"res_0"	"boolean"	1	0	0	0
4782	981	"arg_1"	"varchar"	0	0	1	1
4783	981	"arg_2"	"varchar"	0	0	1	2
4784	981	"arg_3"	"varchar"	0	0	1	3
4785	982	"res_0"	"boolean"	1	0	0	0
4786	982	"arg_1"	"varchar"	0	0	1	1
4787	982	"arg_2"	"varchar"	0	0	1	2
4788	983	"res_0"	"boolean"	1	0	0	0
4789	983	"arg_1"	"varchar"	0	0	1	1
4790	983	"arg_2"	"varchar"	0	0	1	2
4791	983	"arg_3"	"varchar"	0	0	1	3
4792	984	"res_0"	"boolean"	1	0	0	0
4793	984	"arg_1"	"varchar"	0	0	1	1
4794	984	"arg_2"	"varchar"	0	0	1	2
4795	985	"res_0"	"boolean"	1	0	0	0
4796	985	"arg_1"	"varchar"	0	0	1	1
4797	985	"arg_2"	"varchar"	0	0	1	2
4798	985	"arg_3"	"varchar"	0	0	1	3
4799	986	"res_0"	"boolean"	1	0	0	0
4800	986	"arg_1"	"varchar"	0	0	1	1
4801	986	"arg_2"	"varchar"	0	0	1	2
4802	987	"res_0"	"boolean"	1	0	0	0
4803	987	"arg_1"	"varchar"	0	0	1	1
4804	987	"arg_2"	"varchar"	0	0	1	2
4805	987	"arg_3"	"varchar"	0	0	1	3
4806	988	"res_0"	"int"	32	0	0	0
4807	988	"arg_1"	"varchar"	0	0	1	1
4808	988	"arg_2"	"varchar"	0	0	1	2
4809	989	"res_0"	"varchar"	0	0	0	0
4810	989	"arg_1"	"varchar"	0	0	1	1
4811	989	"arg_2"	"int"	32	0	1	2
4812	990	"res_0"	"varchar"	0	0	0	0
4813	990	"arg_1"	"varchar"	0	0	1	1
4814	990	"arg_2"	"varchar"	0	0	1	2
4815	991	"res_0"	"int"	32	0	0	0
4816	991	"arg_1"	"varchar"	0	0	1	1
4817	992	"res_0"	"varchar"	0	0	0	0
4818	992	"arg_1"	"int"	32	0	1	1
4819	993	"res_0"	"int"	32	0	0	0
4820	993	"arg_1"	"varchar"	0	0	1	1
4821	994	"res_0"	"varchar"	0	0	0	0
4822	994	"arg_1"	"varchar"	0	0	1	1
4823	994	"arg_2"	"int"	32	0	1	2
4824	995	"res_0"	"varchar"	0	0	0	0
4825	995	"arg_1"	"varchar"	0	0	1	1
4826	995	"arg_2"	"int"	32	0	1	2
4827	996	"res_0"	"varchar"	0	0	0	0
4828	996	"arg_1"	"varchar"	0	0	1	1
4829	997	"res_0"	"varchar"	0	0	0	0
4830	997	"arg_1"	"varchar"	0	0	1	1
4831	998	"res_0"	"varchar"	0	0	0	0
4832	998	"arg_1"	"varchar"	0	0	1	1
4833	999	"res_0"	"varchar"	0	0	0	0
4834	999	"arg_1"	"varchar"	0	0	1	1
4835	1000	"res_0"	"varchar"	0	0	0	0
4836	1000	"arg_1"	"varchar"	0	0	1	1
4837	1001	"res_0"	"varchar"	0	0	0	0
4838	1001	"arg_1"	"varchar"	0	0	1	1
4839	1001	"arg_2"	"varchar"	0	0	1	2
4840	1002	"res_0"	"varchar"	0	0	0	0
4841	1002	"arg_1"	"varchar"	0	0	1	1
4842	1003	"res_0"	"varchar"	0	0	0	0
4843	1003	"arg_1"	"varchar"	0	0	1	1
4844	1003	"arg_2"	"varchar"	0	0	1	2
4845	1004	"res_0"	"varchar"	0	0	0	0
4846	1004	"arg_1"	"varchar"	0	0	1	1
4847	1005	"res_0"	"varchar"	0	0	0	0
4848	1005	"arg_1"	"varchar"	0	0	1	1
4849	1005	"arg_2"	"varchar"	0	0	1	2
4850	1006	"res_0"	"varchar"	0	0	0	0
4851	1006	"arg_1"	"varchar"	0	0	1	1
4852	1006	"arg_2"	"int"	32	0	1	2
4853	1007	"res_0"	"varchar"	0	0	0	0
4854	1007	"arg_1"	"varchar"	0	0	1	1
4855	1007	"arg_2"	"int"	32	0	1	2
4856	1007	"arg_3"	"varchar"	0	0	1	3
4857	1008	"res_0"	"varchar"	0	0	0	0
4858	1008	"arg_1"	"varchar"	0	0	1	1
4859	1008	"arg_2"	"int"	32	0	1	2
4860	1009	"res_0"	"varchar"	0	0	0	0
4861	1009	"arg_1"	"varchar"	0	0	1	1
4862	1009	"arg_2"	"int"	32	0	1	2
4863	1009	"arg_3"	"varchar"	0	0	1	3
4864	1010	"res_0"	"varchar"	0	0	0	0
4865	1010	"arg_1"	"varchar"	0	0	1	1
4866	1010	"arg_2"	"int"	32	0	1	2
4867	1010	"arg_3"	"int"	32	0	1	3
4868	1010	"arg_4"	"varchar"	0	0	1	4
4869	1011	"res_0"	"varchar"	0	0	0	0
4870	1011	"arg_1"	"varchar"	0	0	1	1
4871	1011	"arg_2"	"varchar"	0	0	1	2
4872	1011	"arg_3"	"varchar"	0	0	1	3
4873	1012	"res_0"	"varchar"	0	0	0	0
4874	1012	"arg_1"	"varchar"	0	0	1	1
4875	1012	"arg_2"	"int"	32	0	1	2
4876	1013	"res_0"	"varchar"	0	0	0	0
4877	1013	"arg_1"	"int"	32	0	1	1
4878	1014	"res_0"	"int"	32	0	0	0
4879	1014	"arg_1"	"varchar"	0	0	1	1
4880	1015	"res_0"	"int"	32	0	0	0
4881	1015	"arg_1"	"varchar"	0	0	1	1
4882	1016	"res_0"	"int"	32	0	0	0
4883	1016	"arg_1"	"varchar"	0	0	1	1
4884	1017	"res_0"	"varchar"	0	0	0	0
4885	1017	"arg_1"	"varchar"	0	0	1	1
4886	1018	"res_0"	"int"	32	0	0	0
4887	1018	"arg_1"	"varchar"	0	0	1	1
4888	1018	"arg_2"	"varchar"	0	0	1	2
4889	1019	"res_0"	"int"	32	0	0	0
4890	1019	"arg_1"	"varchar"	0	0	1	1
4891	1019	"arg_2"	"varchar"	0	0	1	2
4892	1020	"res_0"	"int"	32	0	0	0
4893	1020	"arg_1"	"varchar"	0	0	1	1
4894	1020	"arg_2"	"varchar"	0	0	1	2
4895	1021	"res_0"	"double"	53	0	0	0
4896	1021	"arg_1"	"varchar"	0	0	1	1
4897	1021	"arg_2"	"varchar"	0	0	1	2
4898	1022	"res_0"	"varchar"	0	0	0	0
4899	1022	"arg_1"	"varchar"	0	0	1	1
4900	1023	"res_0"	"int"	32	0	0	0
4901	1023	"arg_1"	"varchar"	0	0	1	1
4902	1023	"arg_2"	"varchar"	0	0	1	2
4903	1024	"res_0"	"int"	32	0	0	0
4904	1024	"arg_1"	"varchar"	0	0	1	1
4905	1024	"arg_2"	"varchar"	0	0	1	2
4906	1024	"arg_3"	"int"	32	0	1	3
4907	1024	"arg_4"	"int"	32	0	1	4
4908	1024	"arg_5"	"int"	32	0	1	5
4909	1025	"res_0"	"tinyint"	8	0	0	0
4910	1025	"arg_1"	"clob"	0	0	1	1
4911	1025	"arg_2"	"boolean"	1	0	1	2
4912	1026	"res_0"	"smallint"	16	0	0	0
4913	1026	"arg_1"	"clob"	0	0	1	1
4914	1026	"arg_2"	"boolean"	1	0	1	2
4915	1027	"res_0"	"int"	32	0	0	0
4916	1027	"arg_1"	"clob"	0	0	1	1
4917	1027	"arg_2"	"boolean"	1	0	1	2
4918	1028	"res_0"	"clob"	0	0	0	0
4919	1028	"arg_1"	"clob"	0	0	1	1
4920	1029	"res_0"	"int"	32	0	0	0
4921	1029	"arg_1"	"clob"	0	0	1	1
4922	1029	"arg_2"	"clob"	0	0	1	2
4923	1030	"res_0"	"int"	32	0	0	0
4924	1030	"arg_1"	"clob"	0	0	1	1
4925	1030	"arg_2"	"clob"	0	0	1	2
4926	1030	"arg_3"	"int"	32	0	1	3
4927	1031	"res_0"	"clob"	0	0	0	0
4928	1031	"arg_1"	"clob"	0	0	1	1
4929	1031	"arg_2"	"clob"	0	0	1	2
4930	1031	"arg_3"	"int"	32	0	1	3
4931	1032	"res_0"	"clob"	0	0	0	0
4932	1032	"arg_1"	"clob"	0	0	1	1
4933	1032	"arg_2"	"int"	32	0	1	2
4934	1033	"res_0"	"clob"	0	0	0	0
4935	1033	"arg_1"	"clob"	0	0	1	1
4936	1033	"arg_2"	"int"	32	0	1	2
4937	1033	"arg_3"	"int"	32	0	1	3
4938	1034	"res_0"	"boolean"	1	0	0	0
4939	1034	"arg_1"	"clob"	0	0	1	1
4940	1034	"arg_2"	"clob"	0	0	1	2
4941	1035	"res_0"	"boolean"	1	0	0	0
4942	1035	"arg_1"	"clob"	0	0	1	1
4943	1035	"arg_2"	"clob"	0	0	1	2
4944	1035	"arg_3"	"clob"	0	0	1	3
4945	1036	"res_0"	"boolean"	1	0	0	0
4946	1036	"arg_1"	"clob"	0	0	1	1
4947	1036	"arg_2"	"clob"	0	0	1	2
4948	1037	"res_0"	"boolean"	1	0	0	0
4949	1037	"arg_1"	"clob"	0	0	1	1
4950	1037	"arg_2"	"clob"	0	0	1	2
4951	1037	"arg_3"	"clob"	0	0	1	3
4952	1038	"res_0"	"boolean"	1	0	0	0
4953	1038	"arg_1"	"clob"	0	0	1	1
4954	1038	"arg_2"	"clob"	0	0	1	2
4955	1039	"res_0"	"boolean"	1	0	0	0
4956	1039	"arg_1"	"clob"	0	0	1	1
4957	1039	"arg_2"	"clob"	0	0	1	2
4958	1039	"arg_3"	"clob"	0	0	1	3
4959	1040	"res_0"	"boolean"	1	0	0	0
4960	1040	"arg_1"	"clob"	0	0	1	1
4961	1040	"arg_2"	"clob"	0	0	1	2
4962	1041	"res_0"	"boolean"	1	0	0	0
4963	1041	"arg_1"	"clob"	0	0	1	1
4964	1041	"arg_2"	"clob"	0	0	1	2
4965	1041	"arg_3"	"clob"	0	0	1	3
4966	1042	"res_0"	"int"	32	0	0	0
4967	1042	"arg_1"	"clob"	0	0	1	1
4968	1042	"arg_2"	"clob"	0	0	1	2
4969	1043	"res_0"	"clob"	0	0	0	0
4970	1043	"arg_1"	"clob"	0	0	1	1
4971	1043	"arg_2"	"int"	32	0	1	2
4972	1044	"res_0"	"clob"	0	0	0	0
4973	1044	"arg_1"	"clob"	0	0	1	1
4974	1044	"arg_2"	"clob"	0	0	1	2
4975	1045	"res_0"	"int"	32	0	0	0
4976	1045	"arg_1"	"clob"	0	0	1	1
4977	1046	"res_0"	"clob"	0	0	0	0
4978	1046	"arg_1"	"int"	32	0	1	1
4979	1047	"res_0"	"int"	32	0	0	0
4980	1047	"arg_1"	"clob"	0	0	1	1
4981	1048	"res_0"	"clob"	0	0	0	0
4982	1048	"arg_1"	"clob"	0	0	1	1
4983	1048	"arg_2"	"int"	32	0	1	2
4984	1049	"res_0"	"clob"	0	0	0	0
4985	1049	"arg_1"	"clob"	0	0	1	1
4986	1049	"arg_2"	"int"	32	0	1	2
4987	1050	"res_0"	"clob"	0	0	0	0
4988	1050	"arg_1"	"clob"	0	0	1	1
4989	1051	"res_0"	"clob"	0	0	0	0
4990	1051	"arg_1"	"clob"	0	0	1	1
4991	1052	"res_0"	"clob"	0	0	0	0
4992	1052	"arg_1"	"clob"	0	0	1	1
4993	1053	"res_0"	"clob"	0	0	0	0
4994	1053	"arg_1"	"clob"	0	0	1	1
4995	1054	"res_0"	"clob"	0	0	0	0
4996	1054	"arg_1"	"clob"	0	0	1	1
4997	1055	"res_0"	"clob"	0	0	0	0
4998	1055	"arg_1"	"clob"	0	0	1	1
4999	1055	"arg_2"	"clob"	0	0	1	2
5000	1056	"res_0"	"clob"	0	0	0	0
5001	1056	"arg_1"	"clob"	0	0	1	1
5002	1057	"res_0"	"clob"	0	0	0	0
5003	1057	"arg_1"	"clob"	0	0	1	1
5004	1057	"arg_2"	"clob"	0	0	1	2
5005	1058	"res_0"	"clob"	0	0	0	0
5006	1058	"arg_1"	"clob"	0	0	1	1
5007	1059	"res_0"	"clob"	0	0	0	0
5008	1059	"arg_1"	"clob"	0	0	1	1
5009	1059	"arg_2"	"clob"	0	0	1	2
5010	1060	"res_0"	"clob"	0	0	0	0
5011	1060	"arg_1"	"clob"	0	0	1	1
5012	1060	"arg_2"	"int"	32	0	1	2
5013	1061	"res_0"	"clob"	0	0	0	0
5014	1061	"arg_1"	"clob"	0	0	1	1
5015	1061	"arg_2"	"int"	32	0	1	2
5016	1061	"arg_3"	"clob"	0	0	1	3
5017	1062	"res_0"	"clob"	0	0	0	0
5018	1062	"arg_1"	"clob"	0	0	1	1
5019	1062	"arg_2"	"int"	32	0	1	2
5020	1063	"res_0"	"clob"	0	0	0	0
5021	1063	"arg_1"	"clob"	0	0	1	1
5022	1063	"arg_2"	"int"	32	0	1	2
5023	1063	"arg_3"	"clob"	0	0	1	3
5024	1064	"res_0"	"clob"	0	0	0	0
5025	1064	"arg_1"	"clob"	0	0	1	1
5026	1064	"arg_2"	"int"	32	0	1	2
5027	1064	"arg_3"	"int"	32	0	1	3
5028	1064	"arg_4"	"clob"	0	0	1	4
5029	1065	"res_0"	"clob"	0	0	0	0
5030	1065	"arg_1"	"clob"	0	0	1	1
5031	1065	"arg_2"	"clob"	0	0	1	2
5032	1065	"arg_3"	"clob"	0	0	1	3
5033	1066	"res_0"	"clob"	0	0	0	0
5034	1066	"arg_1"	"clob"	0	0	1	1
5035	1066	"arg_2"	"int"	32	0	1	2
5036	1067	"res_0"	"clob"	0	0	0	0
5037	1067	"arg_1"	"int"	32	0	1	1
5038	1068	"res_0"	"int"	32	0	0	0
5039	1068	"arg_1"	"clob"	0	0	1	1
5040	1069	"res_0"	"int"	32	0	0	0
5041	1069	"arg_1"	"clob"	0	0	1	1
5042	1070	"res_0"	"int"	32	0	0	0
5043	1070	"arg_1"	"clob"	0	0	1	1
5044	1071	"res_0"	"clob"	0	0	0	0
5045	1071	"arg_1"	"clob"	0	0	1	1
5046	1072	"res_0"	"int"	32	0	0	0
5047	1072	"arg_1"	"clob"	0	0	1	1
5048	1072	"arg_2"	"clob"	0	0	1	2
5049	1073	"res_0"	"int"	32	0	0	0
5050	1073	"arg_1"	"clob"	0	0	1	1
5051	1073	"arg_2"	"clob"	0	0	1	2
5052	1074	"res_0"	"int"	32	0	0	0
5053	1074	"arg_1"	"clob"	0	0	1	1
5054	1074	"arg_2"	"clob"	0	0	1	2
5055	1075	"res_0"	"double"	53	0	0	0
5056	1075	"arg_1"	"clob"	0	0	1	1
5057	1075	"arg_2"	"clob"	0	0	1	2
5058	1076	"res_0"	"clob"	0	0	0	0
5059	1076	"arg_1"	"clob"	0	0	1	1
5060	1077	"res_0"	"int"	32	0	0	0
5061	1077	"arg_1"	"clob"	0	0	1	1
5062	1077	"arg_2"	"clob"	0	0	1	2
5063	1078	"res_0"	"int"	32	0	0	0
5064	1078	"arg_1"	"clob"	0	0	1	1
5065	1078	"arg_2"	"clob"	0	0	1	2
5066	1078	"arg_3"	"int"	32	0	1	3
5067	1078	"arg_4"	"int"	32	0	1	4
5068	1078	"arg_5"	"int"	32	0	1	5
5069	1079	"res_0"	"table"	0	0	0	0
5070	1079	"arg_1"	"varchar"	0	0	1	1
5071	1079	"arg_2"	"varchar"	0	0	1	2
5072	1079	"arg_3"	"varchar"	0	0	1	3
5073	1079	"arg_4"	"varchar"	0	0	1	4
5074	1079	"arg_5"	"varchar"	0	0	1	5
5075	1079	"arg_6"	"varchar"	0	0	1	6
5076	1079	"arg_7"	"bigint"	64	0	1	7
5077	1079	"arg_8"	"bigint"	64	0	1	8
5078	1079	"arg_9"	"int"	32	0	1	9
5079	1080	"res_0"	"table"	0	0	0	0
5080	1080	"arg_1"	"varchar"	0	0	1	1
5081	1080	"arg_2"	"varchar"	0	0	1	2
5082	27	"res"	"boolean"	1	0	0	0
5083	27	"arg"	"oid"	63	0	1	1
5084	39	"res"	"any"	0	0	0	0
5085	39	"arg"	"any"	0	0	1	1
5086	40	"res"	"boolean"	1	0	0	0
5087	40	"arg"	"any"	0	0	1	1
5088	41	"res"	"boolean"	1	0	0	0
5089	41	"arg"	"any"	0	0	1	1
5090	46	"res"	"any"	0	0	0	0
5091	46	"arg"	"any"	0	0	1	1
5092	47	"res"	"any"	0	0	0	0
5093	47	"arg"	"any"	0	0	1	1
5094	51	"res"	"bigint"	64	0	0	0
5095	51	"arg"	"tinyint"	8	0	1	1
5096	52	"res"	"bigint"	64	0	0	0
5097	52	"arg"	"smallint"	16	0	1	1
5098	53	"res"	"bigint"	64	0	0	0
5099	53	"arg"	"int"	32	0	1	1
5100	54	"res"	"bigint"	64	0	0	0
5101	54	"arg"	"bigint"	64	0	1	1
5102	55	"res"	"wrd"	64	0	0	0
5103	55	"arg"	"wrd"	64	0	1	1
5104	56	"res"	"decimal"	19	0	0	0
5105	56	"arg"	"decimal"	2	0	1	1
5106	57	"res"	"decimal"	19	0	0	0
5107	57	"arg"	"decimal"	4	0	1	1
5108	58	"res"	"decimal"	19	0	0	0
5109	58	"arg"	"decimal"	9	0	1	1
5110	59	"res"	"decimal"	19	0	0	0
5111	59	"arg"	"decimal"	19	0	1	1
5112	60	"res"	"bigint"	64	0	0	0
5113	60	"arg"	"tinyint"	8	0	1	1
5114	61	"res"	"bigint"	64	0	0	0
5115	61	"arg"	"smallint"	16	0	1	1
5116	62	"res"	"bigint"	64	0	0	0
5117	62	"arg"	"int"	32	0	1	1
5118	63	"res"	"bigint"	64	0	0	0
5119	63	"arg"	"bigint"	64	0	1	1
5120	64	"res"	"decimal"	19	0	0	0
5121	64	"arg"	"decimal"	2	0	1	1
5122	65	"res"	"decimal"	19	0	0	0
5123	65	"arg"	"decimal"	4	0	1	1
5124	66	"res"	"decimal"	19	0	0	0
5125	66	"arg"	"decimal"	9	0	1	1
5126	67	"res"	"decimal"	19	0	0	0
5127	67	"arg"	"decimal"	19	0	1	1
5128	80	"res"	"real"	24	0	0	0
5129	80	"arg"	"real"	24	0	1	1
5130	81	"res"	"real"	24	0	0	0
5131	81	"arg"	"real"	24	0	1	1
5132	82	"res"	"double"	53	0	0	0
5133	82	"arg"	"double"	53	0	1	1
5134	83	"res"	"double"	53	0	0	0
5135	83	"arg"	"double"	53	0	1	1
5136	84	"res"	"month_interval"	32	0	0	0
5137	84	"arg"	"month_interval"	32	0	1	1
5138	85	"res"	"sec_interval"	13	0	0	0
5139	85	"arg"	"sec_interval"	13	0	1	1
5140	86	"res"	"double"	53	0	0	0
5141	86	"arg"	"double"	53	0	1	1
5142	87	"res"	"wrd"	64	0	0	0
5143	88	"res"	"wrd"	64	0	0	0
5166	5165	"name"	"varchar"	1024	0	0	0
5167	5165	"value"	"varchar"	2048	0	0	1
5169	5168	"name"	"varchar"	1024	0	0	0
5175	5174	"name"	"varchar"	2048	0	0	0
5195	5194	"val"	"clob"	0	0	1	0
5196	5194	"pat"	"clob"	0	0	1	1
5197	5194	"esc"	"clob"	0	0	1	2
5200	5199	"val"	"clob"	0	0	1	0
5201	5199	"pat"	"clob"	0	0	1	1
5202	5199	"esc"	"clob"	0	0	1	2
5205	5204	"val"	"clob"	0	0	1	0
5206	5204	"pat"	"clob"	0	0	1	1
5209	5208	"val"	"clob"	0	0	1	0
5210	5208	"pat"	"clob"	0	0	1	1
5213	5212	"result"	"double"	53	0	0	0
5214	5212	"r"	"double"	53	0	1	1
5217	5216	"result"	"double"	53	0	0	0
5218	5216	"d"	"double"	53	0	1	1
5224	5223	"result"	"clob"	0	0	0	0
5225	5223	"theurl"	"url"	0	0	1	1
5228	5227	"result"	"clob"	0	0	0	0
5229	5227	"theurl"	"url"	0	0	1	1
5232	5231	"result"	"clob"	0	0	0	0
5233	5231	"theurl"	"url"	0	0	1	1
5236	5235	"result"	"clob"	0	0	0	0
5237	5235	"theurl"	"url"	0	0	1	1
5240	5239	"result"	"clob"	0	0	0	0
5241	5239	"theurl"	"url"	0	0	1	1
5244	5243	"result"	"clob"	0	0	0	0
5245	5243	"theurl"	"url"	0	0	1	1
5248	5247	"result"	"clob"	0	0	0	0
5249	5247	"theurl"	"url"	0	0	1	1
5252	5251	"result"	"clob"	0	0	0	0
5253	5251	"theurl"	"url"	0	0	1	1
5256	5255	"result"	"clob"	0	0	0	0
5257	5255	"theurl"	"url"	0	0	1	1
5260	5259	"result"	"clob"	0	0	0	0
5261	5259	"theurl"	"url"	0	0	1	1
5264	5263	"result"	"clob"	0	0	0	0
5265	5263	"theurl"	"url"	0	0	1	1
5268	5267	"result"	"clob"	0	0	0	0
5269	5267	"theurl"	"url"	0	0	1	1
5272	5271	"result"	"clob"	0	0	0	0
5273	5271	"theurl"	"url"	0	0	1	1
5276	5275	"result"	"boolean"	1	0	0	0
5277	5275	"theurl"	"url"	0	0	1	1
5280	5279	"result"	"url"	0	0	0	0
5281	5279	"protocol"	"clob"	0	0	1	1
5282	5279	"hostname"	"clob"	0	0	1	2
5283	5279	"port"	"int"	32	0	1	3
5284	5279	"file"	"clob"	0	0	1	4
5287	5286	"result"	"url"	0	0	0	0
5288	5286	"protocol"	"clob"	0	0	1	1
5289	5286	"hostname"	"clob"	0	0	1	2
5290	5286	"file"	"clob"	0	0	1	3
5293	5292	"result"	"date"	0	0	0	0
5294	5292	"s"	"clob"	0	0	1	1
5295	5292	"format"	"clob"	0	0	1	2
5298	5297	"result"	"clob"	0	0	0	0
5299	5297	"d"	"date"	0	0	1	1
5300	5297	"format"	"clob"	0	0	1	2
5303	5302	"result"	"time"	1	0	0	0
5304	5302	"s"	"clob"	0	0	1	1
5305	5302	"format"	"clob"	0	0	1	2
5308	5307	"result"	"clob"	0	0	0	0
5309	5307	"d"	"time"	1	0	1	1
5310	5307	"format"	"clob"	0	0	1	2
5313	5312	"result"	"timestamp"	7	0	0	0
5314	5312	"s"	"clob"	0	0	1	1
5315	5312	"format"	"clob"	0	0	1	2
5318	5317	"result"	"clob"	0	0	0	0
5319	5317	"d"	"timestamp"	7	0	1	1
5320	5317	"format"	"clob"	0	0	1	2
5324	5323	"result"	"inet"	0	0	0	0
5325	5323	"p"	"inet"	0	0	1	1
5328	5327	"result"	"clob"	0	0	0	0
5329	5327	"p"	"inet"	0	0	1	1
5332	5331	"result"	"int"	32	0	0	0
5333	5331	"p"	"inet"	0	0	1	1
5336	5335	"result"	"inet"	0	0	0	0
5337	5335	"p"	"inet"	0	0	1	1
5338	5335	"mask"	"int"	32	0	1	2
5341	5340	"result"	"inet"	0	0	0	0
5342	5340	"p"	"inet"	0	0	1	1
5345	5344	"result"	"inet"	0	0	0	0
5346	5344	"p"	"inet"	0	0	1	1
5349	5348	"result"	"inet"	0	0	0	0
5350	5348	"p"	"inet"	0	0	1	1
5353	5352	"result"	"clob"	0	0	0	0
5354	5352	"p"	"inet"	0	0	1	1
5357	5356	"result"	"clob"	0	0	0	0
5358	5356	"p"	"inet"	0	0	1	1
5361	5360	"result"	"boolean"	1	0	0	0
5362	5360	"i1"	"inet"	0	0	1	1
5363	5360	"i2"	"inet"	0	0	1	2
5366	5365	"result"	"boolean"	1	0	0	0
5367	5365	"i1"	"inet"	0	0	1	1
5368	5365	"i2"	"inet"	0	0	1	2
5371	5370	"result"	"boolean"	1	0	0	0
5372	5370	"i1"	"inet"	0	0	1	1
5373	5370	"i2"	"inet"	0	0	1	2
5376	5375	"result"	"boolean"	1	0	0	0
5377	5375	"i1"	"inet"	0	0	1	1
5378	5375	"i2"	"inet"	0	0	1	2
5381	5380	"id"	"oid"	63	0	0	0
5382	5380	"owner"	"clob"	0	0	0	1
5383	5380	"defined"	"timestamp"	7	0	0	2
5384	5380	"query"	"clob"	0	0	0	3
5385	5380	"pipe"	"clob"	0	0	0	4
5386	5380	"plan"	"clob"	0	0	0	5
5387	5380	"mal"	"int"	32	0	0	6
5388	5380	"optimize"	"bigint"	64	0	0	7
5391	5390	"id"	"oid"	63	0	0	0
5392	5390	"start"	"timestamp"	7	0	0	1
5393	5390	"stop"	"timestamp"	7	0	0	2
5394	5390	"arguments"	"clob"	0	0	0	3
5395	5390	"tuples"	"wrd"	64	0	0	4
5396	5390	"run"	"bigint"	64	0	0	5
5397	5390	"ship"	"bigint"	64	0	0	6
5398	5390	"cpu"	"int"	32	0	0	7
5399	5390	"io"	"int"	32	0	0	8
5445	5444	"threshold"	"smallint"	16	0	1	0
5450	5449	"event"	"int"	32	0	0	0
5451	5449	"clk"	"varchar"	20	0	0	1
5452	5449	"pc"	"varchar"	50	0	0	2
5453	5449	"thread"	"int"	32	0	0	3
5454	5449	"ticks"	"bigint"	64	0	0	4
5455	5449	"rrsmb"	"bigint"	64	0	0	5
5456	5449	"vmmb"	"bigint"	64	0	0	6
5457	5449	"reads"	"bigint"	64	0	0	7
5458	5449	"writes"	"bigint"	64	0	0	8
5459	5449	"minflt"	"bigint"	64	0	0	9
5460	5449	"majflt"	"bigint"	64	0	0	10
5461	5449	"nvcsw"	"bigint"	64	0	0	11
5462	5449	"stmt"	"clob"	0	0	0	12
5480	5479	"host"	"clob"	0	0	1	0
5481	5479	"port"	"int"	32	0	1	1
5484	5483	"ticks"	"int"	32	0	1	0
5487	5486	"result"	"timestamp"	7	0	0	0
5488	5486	"sec"	"bigint"	64	0	1	1
5491	5490	"result"	"timestamp"	7	0	0	0
5492	5490	"sec"	"int"	32	0	1	1
5495	5494	"result"	"int"	32	0	0	0
5496	5494	"ts"	"timestamp"	7	0	1	1
5499	5498	"result"	"int"	32	0	0	0
5500	5498	"ts"	"timestamptz"	7	0	1	1
5503	5502	"sys"	"clob"	0	0	1	0
5504	5502	"tab"	"clob"	0	0	1	1
5507	5506	"sys"	"clob"	0	0	1	0
5508	5506	"tab"	"clob"	0	0	1	1
5511	5510	"sys"	"clob"	0	0	1	0
5512	5510	"tab"	"clob"	0	0	1	1
5515	5514	"sch"	"varchar"	100	0	0	0
5516	5514	"usr"	"varchar"	100	0	0	1
5517	5514	"dep_type"	"varchar"	32	0	0	2
5520	5519	"sch"	"varchar"	100	0	0	0
5521	5519	"usr"	"varchar"	100	0	0	1
5522	5519	"dep_type"	"varchar"	32	0	0	2
5525	5524	"sch"	"varchar"	100	0	0	0
5526	5524	"usr"	"varchar"	100	0	0	1
5527	5524	"dep_type"	"varchar"	32	0	0	2
5530	5529	"sch"	"varchar"	100	0	0	0
5531	5529	"usr"	"varchar"	100	0	0	1
5532	5529	"dep_type"	"varchar"	32	0	0	2
5535	5534	"sch"	"varchar"	100	0	0	0
5536	5534	"usr"	"varchar"	100	0	0	1
5537	5534	"dep_type"	"varchar"	32	0	0	2
5540	5539	"sch"	"varchar"	100	0	0	0
5541	5539	"usr"	"varchar"	100	0	0	1
5542	5539	"dep_type"	"varchar"	32	0	0	2
5545	5544	"sch"	"varchar"	100	0	0	0
5546	5544	"usr"	"varchar"	100	0	0	1
5547	5544	"dep_type"	"varchar"	32	0	0	2
5550	5549	"sch"	"varchar"	100	0	0	0
5551	5549	"usr"	"varchar"	100	0	0	1
5552	5549	"dep_type"	"varchar"	32	0	0	2
5555	5554	"sch"	"varchar"	100	0	0	0
5556	5554	"usr"	"varchar"	100	0	0	1
5557	5554	"dep_type"	"varchar"	32	0	0	2
5560	5559	"sch"	"varchar"	100	0	0	0
5561	5559	"usr"	"varchar"	100	0	0	1
5562	5559	"dep_type"	"varchar"	32	0	0	2
5565	5564	"sch"	"varchar"	100	0	0	0
5566	5564	"usr"	"varchar"	100	0	0	1
5567	5564	"dep_type"	"varchar"	32	0	0	2
5570	5569	"sch"	"varchar"	100	0	0	0
5571	5569	"usr"	"varchar"	100	0	0	1
5572	5569	"dep_type"	"varchar"	32	0	0	2
5575	5574	"sch"	"varchar"	100	0	0	0
5576	5574	"usr"	"varchar"	100	0	0	1
5577	5574	"dep_type"	"varchar"	32	0	0	2
5580	5579	"sch"	"varchar"	100	0	0	0
5581	5579	"usr"	"varchar"	100	0	0	1
5582	5579	"dep_type"	"varchar"	32	0	0	2
5585	5584	"sch"	"varchar"	100	0	0	0
5586	5584	"usr"	"varchar"	100	0	0	1
5587	5584	"dep_type"	"varchar"	32	0	0	2
5590	5589	"sch"	"varchar"	100	0	0	0
5591	5589	"usr"	"varchar"	100	0	0	1
5592	5589	"dep_type"	"varchar"	32	0	0	2
5595	5594	"sch"	"varchar"	100	0	0	0
5596	5594	"usr"	"varchar"	100	0	0	1
5597	5594	"dep_type"	"varchar"	32	0	0	2
5600	5599	"result"	"clob"	0	0	0	0
5601	5599	"username"	"clob"	0	0	1	1
5604	5603	"user"	"clob"	0	0	0	0
5605	5603	"login"	"timestamp"	7	0	0	1
5606	5603	"sessiontimeout"	"bigint"	64	0	0	2
5607	5603	"lastcommand"	"timestamp"	7	0	0	3
5608	5603	"querytimeout"	"bigint"	64	0	0	4
5609	5603	"active"	"boolean"	1	0	0	5
5620	5619	"delay"	"tinyint"	8	0	1	0
5623	5622	"delay"	"tinyint"	8	0	1	0
5624	5622	"force"	"boolean"	1	0	1	1
5627	5626	"query"	"bigint"	64	0	1	0
5630	5629	"query"	"bigint"	64	0	1	0
5631	5629	"session"	"bigint"	64	0	1	1
5634	5633	"timeout"	"bigint"	64	0	1	0
5637	5636	"result"	"varchar"	32	0	0	0
5638	5636	"s1"	"varchar"	32	0	1	1
5639	5636	"st"	"int"	32	0	1	2
5640	5636	"len"	"int"	32	0	1	3
5641	5636	"s3"	"varchar"	32	0	1	4
5644	5643	"result"	"double"	53	0	0	0
5645	5643	"num"	"double"	53	0	1	1
5646	5643	"prc"	"int"	32	0	1	2
5649	5648	"result"	"double"	53	0	0	0
5650	5648	"num"	"double"	53	0	1	1
5651	5648	"prc"	"int"	32	0	1	2
5652	5648	"truncat"	"int"	32	0	1	3
5655	5654	"result"	"clob"	0	0	0	0
5656	5654	"num"	"double"	53	0	1	1
5657	5654	"prc"	"int"	32	0	1	2
5658	5654	"truncat"	"int"	32	0	1	3
5661	5660	"result"	"double"	53	0	0	0
5662	5660	"pdec"	"double"	53	0	1	1
5663	5660	"pradius"	"double"	53	0	1	2
5666	5665	"result"	"oid"	63	0	0	0
5667	5665	"x"	"int"	32	0	1	1
5668	5665	"y"	"int"	32	0	1	2
5671	5670	"result"	"int"	32	0	0	0
5672	5670	"z"	"oid"	63	0	1	1
5675	5674	"result"	"int"	32	0	0	0
5676	5674	"z"	"oid"	63	0	1	1
5679	5678	"rewrite"	"clob"	0	0	0	0
5680	5678	"count"	"int"	32	0	0	1
5683	5682	"query"	"clob"	0	0	0	0
5684	5682	"count"	"int"	32	0	0	1
5687	5686	"filename"	"clob"	0	0	1	0
5690	5689	"name"	"clob"	0	0	0	0
5691	5689	"def"	"clob"	0	0	0	1
5692	5689	"status"	"clob"	0	0	0	2
5700	5699	"name"	"clob"	0	0	0	0
5701	5699	"value"	"clob"	0	0	0	1
5708	5707	"id"	"int"	32	0	0	0
5709	5707	"name"	"clob"	0	0	0	1
5710	5707	"htype"	"clob"	0	0	0	2
5711	5707	"ttype"	"clob"	0	0	0	3
5712	5707	"count"	"bigint"	64	0	0	4
5713	5707	"refcnt"	"int"	32	0	0	5
5714	5707	"lrefcnt"	"int"	32	0	0	6
5715	5707	"location"	"clob"	0	0	0	7
5716	5707	"heat"	"int"	32	0	0	8
5717	5707	"dirty"	"clob"	0	0	0	9
5718	5707	"status"	"clob"	0	0	0	10
5719	5707	"kind"	"clob"	0	0	0	11
5722	5721	"ra_stmt"	"clob"	0	0	1	0
5723	5721	"opt"	"boolean"	1	0	1	1
5728	5727	"qtag"	"bigint"	64	0	0	0
5729	5727	"user"	"clob"	0	0	0	1
5730	5727	"started"	"timestamp"	7	0	0	2
5731	5727	"estimate"	"timestamp"	7	0	0	3
5732	5727	"progress"	"int"	32	0	0	4
5733	5727	"status"	"clob"	0	0	0	5
5734	5727	"tag"	"oid"	63	0	0	6
5735	5727	"query"	"clob"	0	0	0	7
5748	5747	"tag"	"int"	32	0	1	0
5751	5750	"tag"	"int"	32	0	1	0
5754	5753	"tag"	"int"	32	0	1	0
5757	5756	"tag"	"bigint"	64	0	1	0
5760	5759	"tag"	"bigint"	64	0	1	0
5763	5762	"tag"	"bigint"	64	0	1	0
5766	5765	"rowid"	"bigint"	64	0	0	0
5767	5765	"fldid"	"int"	32	0	0	1
5768	5765	"message"	"clob"	0	0	0	2
5769	5765	"input"	"clob"	0	0	0	3
5780	5779	"result"	"double"	53	0	0	0
5781	5779	"val"	"tinyint"	8	0	1	1
5784	5783	"result"	"double"	53	0	0	0
5785	5783	"val"	"smallint"	16	0	1	1
5788	5787	"result"	"double"	53	0	0	0
5789	5787	"val"	"int"	32	0	1	1
5792	5791	"result"	"double"	53	0	0	0
5793	5791	"val"	"wrd"	64	0	1	1
5796	5795	"result"	"double"	53	0	0	0
5797	5795	"val"	"bigint"	64	0	1	1
5800	5799	"result"	"double"	53	0	0	0
5801	5799	"val"	"real"	24	0	1	1
5804	5803	"result"	"double"	53	0	0	0
5805	5803	"val"	"double"	53	0	1	1
5808	5807	"result"	"double"	53	0	0	0
5809	5807	"val"	"date"	0	0	1	1
5812	5811	"result"	"double"	53	0	0	0
5813	5811	"val"	"time"	1	0	1	1
5816	5815	"result"	"double"	53	0	0	0
5817	5815	"val"	"timestamp"	7	0	1	1
5820	5819	"result"	"double"	53	0	0	0
5821	5819	"val"	"tinyint"	8	0	1	1
5824	5823	"result"	"double"	53	0	0	0
5825	5823	"val"	"smallint"	16	0	1	1
5828	5827	"result"	"double"	53	0	0	0
5829	5827	"val"	"int"	32	0	1	1
5832	5831	"result"	"double"	53	0	0	0
5833	5831	"val"	"wrd"	64	0	1	1
5836	5835	"result"	"double"	53	0	0	0
5837	5835	"val"	"bigint"	64	0	1	1
5840	5839	"result"	"double"	53	0	0	0
5841	5839	"val"	"real"	24	0	1	1
5844	5843	"result"	"double"	53	0	0	0
5845	5843	"val"	"double"	53	0	1	1
5848	5847	"result"	"double"	53	0	0	0
5849	5847	"val"	"date"	0	0	1	1
5852	5851	"result"	"double"	53	0	0	0
5853	5851	"val"	"time"	1	0	1	1
5856	5855	"result"	"double"	53	0	0	0
5857	5855	"val"	"timestamp"	7	0	1	1
5860	5859	"result"	"double"	53	0	0	0
5861	5859	"val"	"tinyint"	8	0	1	1
5864	5863	"result"	"double"	53	0	0	0
5865	5863	"val"	"smallint"	16	0	1	1
5868	5867	"result"	"double"	53	0	0	0
5869	5867	"val"	"int"	32	0	1	1
5872	5871	"result"	"double"	53	0	0	0
5873	5871	"val"	"wrd"	64	0	1	1
5876	5875	"result"	"double"	53	0	0	0
5877	5875	"val"	"bigint"	64	0	1	1
5880	5879	"result"	"double"	53	0	0	0
5881	5879	"val"	"real"	24	0	1	1
5884	5883	"result"	"double"	53	0	0	0
5885	5883	"val"	"double"	53	0	1	1
5888	5887	"result"	"double"	53	0	0	0
5889	5887	"val"	"date"	0	0	1	1
5892	5891	"result"	"double"	53	0	0	0
5893	5891	"val"	"time"	1	0	1	1
5896	5895	"result"	"double"	53	0	0	0
5897	5895	"val"	"timestamp"	7	0	1	1
5900	5899	"result"	"double"	53	0	0	0
5901	5899	"val"	"tinyint"	8	0	1	1
5904	5903	"result"	"double"	53	0	0	0
5905	5903	"val"	"smallint"	16	0	1	1
5908	5907	"result"	"double"	53	0	0	0
5909	5907	"val"	"int"	32	0	1	1
5912	5911	"result"	"double"	53	0	0	0
5913	5911	"val"	"wrd"	64	0	1	1
5916	5915	"result"	"double"	53	0	0	0
5917	5915	"val"	"bigint"	64	0	1	1
5920	5919	"result"	"double"	53	0	0	0
5921	5919	"val"	"real"	24	0	1	1
5924	5923	"result"	"double"	53	0	0	0
5925	5923	"val"	"double"	53	0	1	1
5928	5927	"result"	"double"	53	0	0	0
5929	5927	"val"	"date"	0	0	1	1
5932	5931	"result"	"double"	53	0	0	0
5933	5931	"val"	"time"	1	0	1	1
5936	5935	"result"	"double"	53	0	0	0
5937	5935	"val"	"timestamp"	7	0	1	1
5940	5939	"result"	"tinyint"	8	0	0	0
5941	5939	"val"	"tinyint"	8	0	1	1
5944	5943	"result"	"smallint"	16	0	0	0
5945	5943	"val"	"smallint"	16	0	1	1
5948	5947	"result"	"int"	32	0	0	0
5949	5947	"val"	"int"	32	0	1	1
5952	5951	"result"	"wrd"	64	0	0	0
5953	5951	"val"	"wrd"	64	0	1	1
5956	5955	"result"	"bigint"	64	0	0	0
5957	5955	"val"	"bigint"	64	0	1	1
5960	5959	"result"	"decimal"	18	3	0	0
5961	5959	"val"	"decimal"	18	3	1	1
5964	5963	"result"	"real"	24	0	0	0
5965	5963	"val"	"real"	24	0	1	1
5968	5967	"result"	"double"	53	0	0	0
5969	5967	"val"	"double"	53	0	1	1
5972	5971	"result"	"date"	0	0	0	0
5973	5971	"val"	"date"	0	0	1	1
5976	5975	"result"	"time"	1	0	0	0
5977	5975	"val"	"time"	1	0	1	1
5980	5979	"result"	"timestamp"	7	0	0	0
5981	5979	"val"	"timestamp"	7	0	1	1
5984	5983	"result"	"tinyint"	8	0	0	0
5985	5983	"val"	"tinyint"	8	0	1	1
5986	5983	"q"	"double"	53	0	1	2
5989	5988	"result"	"smallint"	16	0	0	0
5990	5988	"val"	"smallint"	16	0	1	1
5991	5988	"q"	"double"	53	0	1	2
5994	5993	"result"	"int"	32	0	0	0
5995	5993	"val"	"int"	32	0	1	1
5996	5993	"q"	"double"	53	0	1	2
5999	5998	"result"	"wrd"	64	0	0	0
6000	5998	"val"	"wrd"	64	0	1	1
6001	5998	"q"	"double"	53	0	1	2
6004	6003	"result"	"bigint"	64	0	0	0
6005	6003	"val"	"bigint"	64	0	1	1
6006	6003	"q"	"double"	53	0	1	2
6009	6008	"result"	"decimal"	18	3	0	0
6010	6008	"val"	"decimal"	18	3	1	1
6011	6008	"q"	"double"	53	0	1	2
6014	6013	"result"	"real"	24	0	0	0
6015	6013	"val"	"real"	24	0	1	1
6016	6013	"q"	"double"	53	0	1	2
6019	6018	"result"	"double"	53	0	0	0
6020	6018	"val"	"double"	53	0	1	1
6021	6018	"q"	"double"	53	0	1	2
6024	6023	"result"	"date"	0	0	0	0
6025	6023	"val"	"date"	0	0	1	1
6026	6023	"q"	"double"	53	0	1	2
6029	6028	"result"	"time"	1	0	0	0
6030	6028	"val"	"time"	1	0	1	1
6031	6028	"q"	"double"	53	0	1	2
6034	6033	"result"	"timestamp"	7	0	0	0
6035	6033	"val"	"timestamp"	7	0	1	1
6036	6033	"q"	"double"	53	0	1	2
6039	6038	"result"	"tinyint"	8	0	0	0
6040	6038	"e1"	"tinyint"	8	0	1	1
6041	6038	"e2"	"tinyint"	8	0	1	2
6044	6043	"result"	"smallint"	16	0	0	0
6045	6043	"e1"	"smallint"	16	0	1	1
6046	6043	"e2"	"smallint"	16	0	1	2
6049	6048	"result"	"int"	32	0	0	0
6050	6048	"e1"	"int"	32	0	1	1
6051	6048	"e2"	"int"	32	0	1	2
6054	6053	"result"	"wrd"	64	0	0	0
6055	6053	"e1"	"wrd"	64	0	1	1
6056	6053	"e2"	"wrd"	64	0	1	2
6059	6058	"result"	"bigint"	64	0	0	0
6060	6058	"e1"	"bigint"	64	0	1	1
6061	6058	"e2"	"bigint"	64	0	1	2
6064	6063	"result"	"real"	24	0	0	0
6065	6063	"e1"	"real"	24	0	1	1
6066	6063	"e2"	"real"	24	0	1	2
6069	6068	"result"	"double"	53	0	0	0
6070	6068	"e1"	"double"	53	0	1	1
6071	6068	"e2"	"double"	53	0	1	2
6087	6086	"result"	"mbr"	0	0	0	0
6088	6086	"g"	"geometry"	0	0	1	1
6091	6090	"result"	"boolean"	1	0	0	0
6092	6090	"a"	"mbr"	0	0	1	1
6093	6090	"b"	"mbr"	0	0	1	2
6096	6095	"result"	"geometry"	0	0	0	0
6097	6095	"wkt"	"clob"	0	0	1	1
6098	6095	"srid"	"smallint"	16	0	1	2
6101	6100	"result"	"point"	0	0	0	0
6102	6100	"wkt"	"clob"	0	0	1	1
6103	6100	"srid"	"smallint"	16	0	1	2
6106	6105	"result"	"linestring"	0	0	0	0
6107	6105	"wkt"	"clob"	0	0	1	1
6108	6105	"srid"	"smallint"	16	0	1	2
6111	6110	"result"	"polygon"	0	0	0	0
6112	6110	"wkt"	"clob"	0	0	1	1
6113	6110	"srid"	"smallint"	16	0	1	2
6116	6115	"result"	"multipoint"	0	0	0	0
6117	6115	"wkt"	"clob"	0	0	1	1
6118	6115	"srid"	"smallint"	16	0	1	2
6121	6120	"result"	"multilinestring"	0	0	0	0
6122	6120	"wkt"	"clob"	0	0	1	1
6123	6120	"srid"	"smallint"	16	0	1	2
6126	6125	"result"	"multipolygon"	0	0	0	0
6127	6125	"wkt"	"clob"	0	0	1	1
6128	6125	"srid"	"smallint"	16	0	1	2
6131	6130	"result"	"multipolygon"	0	0	0	0
6132	6130	"wkt"	"clob"	0	0	1	1
6133	6130	"srid"	"smallint"	16	0	1	2
6136	6135	"result"	"polygon"	0	0	0	0
6137	6135	"wkt"	"clob"	0	0	1	1
6138	6135	"srid"	"smallint"	16	0	1	2
6141	6140	"result"	"clob"	0	0	0	0
6142	6140	"g"	"geometry"	0	0	1	1
6145	6144	"result"	"double"	53	0	0	0
6146	6144	"g"	"geometry"	0	0	1	1
6149	6148	"result"	"double"	53	0	0	0
6150	6148	"g"	"geometry"	0	0	1	1
6153	6152	"result"	"point"	0	0	0	0
6154	6152	"x"	"double"	53	0	1	1
6155	6152	"y"	"double"	53	0	1	2
6158	6157	"result"	"int"	32	0	0	0
6159	6157	"g"	"geometry"	0	0	1	1
6162	6161	"result"	"int"	32	0	0	0
6163	6161	"g"	"geometry"	0	0	1	1
6166	6165	"result"	"int"	32	0	0	0
6167	6165	"g"	"geometry"	0	0	1	1
6170	6169	"result"	"geometry"	0	0	0	0
6171	6169	"g"	"geometry"	0	0	1	1
6174	6173	"result"	"boolean"	1	0	0	0
6175	6173	"g"	"geometry"	0	0	1	1
6178	6177	"result"	"boolean"	1	0	0	0
6179	6177	"g"	"geometry"	0	0	1	1
6182	6181	"result"	"geometry"	0	0	0	0
6183	6181	"g"	"geometry"	0	0	1	1
6186	6185	"result"	"boolean"	1	0	0	0
6187	6185	"a"	"geometry"	0	0	1	1
6188	6185	"b"	"geometry"	0	0	1	2
6191	6190	"result"	"boolean"	1	0	0	0
6192	6190	"a"	"geometry"	0	0	1	1
6193	6190	"b"	"geometry"	0	0	1	2
6196	6195	"result"	"boolean"	1	0	0	0
6197	6195	"a"	"geometry"	0	0	1	1
6198	6195	"b"	"geometry"	0	0	1	2
6201	6200	"result"	"boolean"	1	0	0	0
6202	6200	"a"	"geometry"	0	0	1	1
6203	6200	"b"	"geometry"	0	0	1	2
6206	6205	"result"	"boolean"	1	0	0	0
6207	6205	"a"	"geometry"	0	0	1	1
6208	6205	"b"	"geometry"	0	0	1	2
6211	6210	"result"	"boolean"	1	0	0	0
6212	6210	"a"	"geometry"	0	0	1	1
6213	6210	"b"	"geometry"	0	0	1	2
6216	6215	"result"	"boolean"	1	0	0	0
6217	6215	"a"	"geometry"	0	0	1	1
6218	6215	"b"	"geometry"	0	0	1	2
6221	6220	"result"	"boolean"	1	0	0	0
6222	6220	"a"	"geometry"	0	0	1	1
6223	6220	"x"	"double"	53	0	1	2
6224	6220	"y"	"double"	53	0	1	3
6227	6226	"result"	"boolean"	1	0	0	0
6228	6226	"a"	"geometry"	0	0	1	1
6229	6226	"b"	"geometry"	0	0	1	2
6232	6231	"result"	"boolean"	1	0	0	0
6233	6231	"a"	"geometry"	0	0	1	1
6234	6231	"b"	"geometry"	0	0	1	2
6235	6231	"pattern"	"clob"	0	0	1	3
6238	6237	"result"	"double"	53	0	0	0
6239	6237	"g"	"geometry"	0	0	1	1
6242	6241	"result"	"double"	53	0	0	0
6243	6241	"g"	"geometry"	0	0	1	1
6246	6245	"result"	"double"	53	0	0	0
6247	6245	"a"	"geometry"	0	0	1	1
6248	6245	"b"	"geometry"	0	0	1	2
6251	6250	"result"	"geometry"	0	0	0	0
6252	6250	"a"	"geometry"	0	0	1	1
6253	6250	"distance"	"double"	53	0	1	2
6256	6255	"result"	"geometry"	0	0	0	0
6257	6255	"a"	"geometry"	0	0	1	1
6260	6259	"result"	"geometry"	0	0	0	0
6261	6259	"a"	"geometry"	0	0	1	1
6262	6259	"b"	"geometry"	0	0	1	2
6265	6264	"result"	"geometry"	0	0	0	0
6266	6264	"a"	"geometry"	0	0	1	1
6267	6264	"b"	"geometry"	0	0	1	2
6270	6269	"result"	"geometry"	0	0	0	0
6271	6269	"a"	"geometry"	0	0	1	1
6272	6269	"b"	"geometry"	0	0	1	2
6275	6274	"result"	"geometry"	0	0	0	0
6276	6274	"a"	"geometry"	0	0	1	1
6277	6274	"b"	"geometry"	0	0	1	2
6282	6281	"result"	"json"	0	0	0	0
6283	6281	"js"	"json"	0	0	1	1
6284	6281	"pathexpr"	"clob"	0	0	1	2
6287	6286	"result"	"json"	0	0	0	0
6288	6286	"js"	"json"	0	0	1	1
6289	6286	"name"	"tinyint"	8	0	1	2
6292	6291	"result"	"json"	0	0	0	0
6293	6291	"js"	"json"	0	0	1	1
6294	6291	"name"	"int"	32	0	1	2
6297	6296	"result"	"json"	0	0	0	0
6298	6296	"js"	"json"	0	0	1	1
6299	6296	"name"	"bigint"	64	0	1	2
6302	6301	"result"	"clob"	0	0	0	0
6303	6301	"js"	"json"	0	0	1	1
6304	6301	"e"	"clob"	0	0	1	2
6307	6306	"result"	"double"	53	0	0	0
6308	6306	"js"	"json"	0	0	1	1
6311	6310	"result"	"bigint"	64	0	0	0
6312	6310	"js"	"json"	0	0	1	1
6315	6314	"result"	"boolean"	1	0	0	0
6316	6314	"js"	"clob"	0	0	1	1
6319	6318	"result"	"boolean"	1	0	0	0
6320	6318	"js"	"clob"	0	0	1	1
6323	6322	"result"	"boolean"	1	0	0	0
6324	6322	"js"	"clob"	0	0	1	1
6327	6326	"result"	"boolean"	1	0	0	0
6328	6326	"js"	"json"	0	0	1	1
6331	6330	"result"	"boolean"	1	0	0	0
6332	6330	"js"	"json"	0	0	1	1
6335	6334	"result"	"boolean"	1	0	0	0
6336	6334	"js"	"json"	0	0	1	1
6339	6338	"result"	"int"	32	0	0	0
6340	6338	"js"	"json"	0	0	1	1
6343	6342	"result"	"json"	0	0	0	0
6344	6342	"js"	"json"	0	0	1	1
6347	6346	"result"	"json"	0	0	0	0
6348	6346	"js"	"json"	0	0	1	1
6351	6350	"result"	"clob"	0	0	0	0
6352	6350	"js"	"json"	0	0	1	1
6355	6354	"result"	"clob"	0	0	0	0
6356	6354	"js"	"clob"	0	0	1	1
6359	6358	"result"	"clob"	0	0	0	0
6360	6358	"js"	"int"	32	0	1	1
6363	6362	"result"	"clob"	0	0	0	0
6364	6362	"js"	"json"	0	0	1	1
6367	6366	"result"	"clob"	0	0	0	0
6368	6366	"x"	"clob"	0	0	1	1
6371	6370	"result"	"clob"	0	0	0	0
6372	6370	"x"	"double"	53	0	1	1
6375	6374	"result"	"clob"	0	0	0	0
6376	6374	"v"	"clob"	0	0	1	1
6380	6379	"result"	"uuid"	0	0	0	0
6383	6382	"result"	"uuid"	0	0	0	0
6384	6382	"u"	"uuid"	0	0	1	1
6387	6386	"result"	"uuid"	0	0	0	0
6388	6386	"u"	"clob"	0	0	1	1
6391	6390	"result"	"double"	53	0	0	0
6392	6390	"chi2"	"double"	53	0	1	1
6393	6390	"datapoints"	"double"	53	0	1	2
6417	6416	"dirname"	"clob"	0	0	1	0
6420	6419	"fname"	"clob"	0	0	1	0
6423	6422	"tname"	"clob"	0	0	1	0
6426	6425	"dirname"	"clob"	0	0	1	0
6427	6425	"pat"	"clob"	0	0	1	1
6462	6461	"fname"	"varchar"	256	0	1	0
6465	6464	"fid"	"int"	32	0	1	0
6466	6464	"varnname"	"varchar"	256	0	1	1
6469	6468	"schema"	"clob"	0	0	0	0
6470	6468	"table"	"clob"	0	0	0	1
6471	6468	"column"	"clob"	0	0	0	2
6472	6468	"type"	"clob"	0	0	0	3
6473	6468	"mode"	"clob"	0	0	0	4
6474	6468	"location"	"clob"	0	0	0	5
6475	6468	"count"	"bigint"	64	0	0	6
6476	6468	"typewidth"	"int"	32	0	0	7
6477	6468	"columnsize"	"bigint"	64	0	0	8
6478	6468	"heapsize"	"bigint"	64	0	0	9
6479	6468	"hashes"	"bigint"	64	0	0	10
6480	6468	"phash"	"boolean"	1	0	0	11
6481	6468	"imprints"	"bigint"	64	0	0	12
6482	6468	"sorted"	"boolean"	1	0	0	13
6515	6514	"result"	"bigint"	64	0	0	0
6516	6514	"nme"	"clob"	0	0	1	1
6517	6514	"i"	"bigint"	64	0	1	2
6518	6514	"d"	"bigint"	64	0	1	3
6521	6520	"result"	"bigint"	64	0	0	0
6522	6520	"tpe"	"clob"	0	0	1	1
6523	6520	"i"	"bigint"	64	0	1	2
6524	6520	"w"	"int"	32	0	1	3
6527	6526	"result"	"bigint"	64	0	0	0
6528	6526	"b"	"boolean"	1	0	1	1
6529	6526	"i"	"bigint"	64	0	1	2
6532	6531	"result"	"bigint"	64	0	0	0
6533	6531	"i"	"bigint"	64	0	1	1
6534	6531	"nme"	"clob"	0	0	1	2
6537	6536	"schema"	"clob"	0	0	0	0
6538	6536	"table"	"clob"	0	0	0	1
6539	6536	"column"	"clob"	0	0	0	2
6540	6536	"type"	"clob"	0	0	0	3
6541	6536	"count"	"bigint"	64	0	0	4
6542	6536	"columnsize"	"bigint"	64	0	0	5
6543	6536	"heapsize"	"bigint"	64	0	0	6
6544	6536	"hashes"	"bigint"	64	0	0	7
6545	6536	"imprints"	"bigint"	64	0	0	8
6546	6536	"sorted"	"boolean"	1	0	0	9
6584	6583	"MinMax"	"int"	32	0	1	0
6585	6583	"sample"	"bigint"	64	0	1	1
6588	6587	"MinMax"	"int"	32	0	1	0
6589	6587	"sample"	"bigint"	64	0	1	1
6590	6587	"sch"	"clob"	0	0	1	2
6593	6592	"MinMax"	"int"	32	0	1	0
6594	6592	"sample"	"bigint"	64	0	1	1
6595	6592	"sch"	"clob"	0	0	1	2
6596	6592	"tbl"	"clob"	0	0	1	3
6599	6598	"MinMax"	"int"	32	0	1	0
6600	6598	"sample"	"bigint"	64	0	1	1
6601	6598	"sch"	"clob"	0	0	1	2
6602	6598	"tbl"	"clob"	0	0	1	3
6603	6598	"col"	"clob"	0	0	1	4
6606	6605	"result"	"clob"	0	0	0	0
6607	6605	"src"	"clob"	0	0	1	1
6610	6609	"result"	"smallint"	16	0	0	0
6611	6609	"one"	"tinyint"	8	0	1	1
6612	6609	"two"	"tinyint"	8	0	1	2
6615	6614	"result"	"int"	32	0	0	0
6616	6614	"one"	"smallint"	16	0	1	1
6617	6614	"two"	"smallint"	16	0	1	2
6620	6619	"result"	"bigint"	64	0	0	0
6621	6619	"one"	"int"	32	0	1	1
6622	6619	"two"	"int"	32	0	1	2
6626	6625	"bam_repos"	"clob"	0	0	1	0
6627	6625	"dbschema"	"smallint"	16	0	1	1
6628	6625	"nr_threads"	"smallint"	16	0	1	2
6631	6630	"bam_files"	"clob"	0	0	1	0
6632	6630	"dbschema"	"smallint"	16	0	1	1
6633	6630	"nr_threads"	"smallint"	16	0	1	2
6636	6635	"bam_file"	"clob"	0	0	1	0
6637	6635	"dbschema"	"smallint"	16	0	1	1
6640	6639	"file_id"	"bigint"	64	0	1	0
6641	6639	"dbschema"	"smallint"	16	0	1	1
6644	6643	"result"	"boolean"	1	0	0	0
6645	6643	"flag"	"smallint"	16	0	1	1
6646	6643	"name"	"clob"	0	0	1	2
6649	6648	"result"	"clob"	0	0	0	0
6650	6648	"seq"	"clob"	0	0	1	1
6653	6652	"result"	"clob"	0	0	0	0
6654	6652	"qual"	"clob"	0	0	1	1
6657	6656	"result"	"int"	32	0	0	0
6658	6656	"cigar"	"clob"	0	0	1	1
6661	6660	"output_path"	"clob"	0	0	1	0
6664	6663	"output_path"	"clob"	0	0	1	0
6734	6733	"value"	"tinyint"	8	0	0	0
6735	6733	"first"	"tinyint"	8	0	1	1
6736	6733	"last"	"tinyint"	8	0	1	2
6739	6738	"value"	"tinyint"	8	0	0	0
6740	6738	"first"	"tinyint"	8	0	1	1
6741	6738	"last"	"tinyint"	8	0	1	2
6742	6738	"stepsize"	"tinyint"	8	0	1	3
6745	6744	"value"	"smallint"	16	0	0	0
6746	6744	"first"	"smallint"	16	0	1	1
6747	6744	"last"	"smallint"	16	0	1	2
6750	6749	"value"	"smallint"	16	0	0	0
6751	6749	"first"	"smallint"	16	0	1	1
6752	6749	"last"	"smallint"	16	0	1	2
6753	6749	"stepsize"	"smallint"	16	0	1	3
6756	6755	"value"	"int"	32	0	0	0
6757	6755	"first"	"int"	32	0	1	1
6758	6755	"last"	"int"	32	0	1	2
6761	6760	"value"	"int"	32	0	0	0
6762	6760	"first"	"int"	32	0	1	1
6763	6760	"last"	"int"	32	0	1	2
6764	6760	"stepsize"	"int"	32	0	1	3
6767	6766	"value"	"bigint"	64	0	0	0
6768	6766	"first"	"bigint"	64	0	1	1
6769	6766	"last"	"bigint"	64	0	1	2
6772	6771	"value"	"bigint"	64	0	0	0
6773	6771	"first"	"bigint"	64	0	1	1
6774	6771	"last"	"bigint"	64	0	1	2
6775	6771	"stepsize"	"bigint"	64	0	1	3
6778	6777	"value"	"real"	24	0	0	0
6779	6777	"first"	"real"	24	0	1	1
6780	6777	"last"	"real"	24	0	1	2
6781	6777	"stepsize"	"real"	24	0	1	3
6784	6783	"value"	"double"	53	0	0	0
6785	6783	"first"	"double"	53	0	1	1
6786	6783	"last"	"double"	53	0	1	2
6787	6783	"stepsize"	"double"	53	0	1	3
6790	6789	"value"	"decimal"	10	2	0	0
6791	6789	"first"	"decimal"	10	2	1	1
6792	6789	"last"	"decimal"	10	2	1	2
6793	6789	"stepsize"	"decimal"	10	2	1	3
6796	6795	"value"	"timestamp"	7	0	0	0
6797	6795	"first"	"timestamp"	7	0	1	1
6798	6795	"last"	"timestamp"	7	0	1	2
6799	6795	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 236 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
348	5212	7
347	5212	7
850	5212	7
348	5216	7
347	5216	7
850	5216	7
5380	5409	5
5390	5420	5
5380	5438	5
5390	5438	5
5449	5477	5
2003	5514	7
2001	5514	7
2002	5514	7
5176	5514	7
5185	5519	7
5183	5519	7
5184	5519	7
2005	5519	7
2001	5519	7
2003	5519	7
5144	5524	7
2047	5524	7
2046	5524	7
2049	5524	7
2048	5524	7
5144	5529	7
2088	5529	7
2086	5529	7
2090	5529	7
2083	5529	7
2079	5529	7
5144	5534	7
2047	5534	7
2046	5534	7
2049	5534	7
2092	5534	7
2091	5534	7
2048	5534	7
2093	5534	7
2094	5534	7
5144	5539	7
2081	5539	7
2079	5539	7
2084	5539	7
2080	5539	7
2083	5539	7
5144	5544	7
2047	5544	7
2046	5544	7
2049	5544	7
2017	5544	7
2016	5544	7
2048	5544	7
2018	5544	7
5154	5549	7
2047	5549	7
2046	5549	7
2049	5549	7
2048	5549	7
5144	5549	7
5154	5554	7
2081	5554	7
2079	5554	7
2084	5554	7
2103	5554	7
2102	5554	7
2104	5554	7
2080	5554	7
2083	5554	7
131	5554	7
31	5554	7
30	5554	7
32	5554	7
5154	5559	7
2088	5559	7
2086	5559	7
2090	5559	7
2083	5559	7
2079	5559	7
2087	5559	7
2103	5559	7
2102	5559	7
2104	5559	7
31	5559	7
30	5559	7
32	5559	7
5154	5564	7
2047	5564	7
2046	5564	7
2049	5564	7
2048	5564	7
2017	5564	7
2016	5564	7
2018	5564	7
5154	5569	7
2047	5569	7
2046	5569	7
2049	5569	7
2092	5569	7
2091	5569	7
2048	5569	7
2093	5569	7
5144	5574	7
2047	5574	7
2046	5574	7
2049	5574	7
2017	5574	7
2016	5574	7
2048	5574	7
2018	5574	7
5144	5579	7
2047	5579	7
2046	5579	7
2049	5579	7
2092	5579	7
2091	5579	7
2048	5579	7
2093	5579	7
2018	5584	7
2016	5584	7
2017	5584	7
2047	5584	7
2046	5584	7
2049	5584	7
2048	5584	7
2018	5589	7
2016	5589	7
2017	5589	7
2047	5589	7
2046	5589	7
2049	5589	7
2092	5589	7
2091	5589	7
2048	5589	7
2093	5589	7
2083	5594	7
2079	5594	7
2080	5594	7
2084	5594	7
5603	5617	5
95	5636	7
37	5636	7
35	5636	7
993	5636	7
979	5636	7
190	5636	7
990	5636	7
191	5636	7
32	5648	7
411	5648	7
95	5648	7
97	5648	7
34	5648	7
5643	5648	7
5689	5697	5
5699	5705	5
5727	5745	5
5765	5775	5
6395	6397	10
6395	6396	4
6400	6402	10
6403	6405	10
6400	6401	4
6408	6410	10
6411	6413	10
6408	6409	4
6468	6498	5
6500	6512	13
6510	6512	13
6501	6512	13
6502	6512	13
6503	6512	13
6504	6512	13
6505	6512	13
6506	6512	13
6507	6512	13
6508	6512	13
6509	6512	13
32	6514	7
192	6514	7
198	6514	7
94	6520	7
33	6520	7
191	6520	7
192	6520	7
32	6526	7
192	6526	7
95	6531	7
32	6531	7
307	6531	7
6500	6536	7
6510	6536	7
6501	6536	7
6502	6536	7
6503	6536	7
6505	6536	7
6506	6536	7
6507	6536	7
6508	6536	7
6509	6536	7
6514	6536	7
6520	6536	7
6526	6536	7
6531	6536	7
6536	6558	5
6536	6568	5
47	6568	5
54	6568	5
50	6568	5
34	6568	5
32	6568	5
192	6568	5
6666	6673	10
6666	6672	4
6676	6684	10
6677	6684	10
6677	6686	10
6676	6683	4
6677	6683	4
6672	6685	11
6677	6685	11
6689	6703	10
6690	6703	10
6690	6705	10
6689	6702	4
6690	6702	4
6672	6704	11
6690	6704	11
6708	6715	10
6709	6715	10
6709	6717	10
6708	6714	4
6709	6714	4
6672	6716	11
6709	6716	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1344 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
28	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
29	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
30	"hash"	"hash"	"mkey"	0	1	false	false	false	0
31	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
32	"="	"="	"calc"	0	1	false	false	false	0
33	"<>"	"!="	"calc"	0	1	false	false	false	0
34	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
35	">"	">"	"calc"	0	1	false	false	false	0
36	">="	">="	"calc"	0	1	false	false	false	0
37	"<"	"<"	"calc"	0	1	false	false	false	0
38	"<="	"<="	"calc"	0	1	false	false	false	0
42	"in"	"in"	"calc"	0	1	false	false	false	0
43	"identity"	"identity"	"calc"	0	1	false	false	false	0
44	"rowid"	"identity"	"calc"	0	1	false	false	false	0
45	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
48	"sql_min"	"min"	"calc"	0	1	false	false	false	0
49	"sql_max"	"max"	"calc"	0	1	false	false	false	0
50	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
68	"mod"	"%"	"calc"	0	1	false	false	false	0
69	"mod"	"%"	"calc"	0	1	false	false	false	0
70	"mod"	"%"	"calc"	0	1	false	false	false	0
71	"mod"	"%"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
89	"diff"	"diff"	"sql"	0	6	false	false	false	0
90	"diff"	"diff"	"sql"	0	6	false	false	false	0
91	"rank"	"rank"	"sql"	0	6	false	false	false	0
92	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
93	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
94	"and"	"and"	"calc"	0	1	false	false	false	0
95	"or"	"or"	"calc"	0	1	false	false	false	0
96	"xor"	"xor"	"calc"	0	1	false	false	false	0
97	"not"	"not"	"calc"	0	1	false	false	false	0
98	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
99	"sql_add"	"+"	"calc"	0	1	false	false	false	0
100	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
101	"sql_div"	"/"	"calc"	0	1	false	false	false	0
102	"bit_and"	"and"	"calc"	0	1	false	false	false	0
103	"bit_or"	"or"	"calc"	0	1	false	false	false	0
104	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
105	"bit_not"	"not"	"calc"	0	1	false	false	false	0
106	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
107	"right_shift"	">>"	"calc"	0	1	false	false	false	0
108	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
109	"abs"	"abs"	"calc"	0	1	false	false	false	0
110	"sign"	"sign"	"calc"	0	1	false	false	false	0
111	"scale_up"	"*"	"calc"	0	1	false	false	false	0
112	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
113	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
114	"sql_add"	"+"	"calc"	0	1	false	false	false	0
115	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
116	"sql_div"	"/"	"calc"	0	1	false	false	false	0
117	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
118	"sql_add"	"+"	"calc"	0	1	false	false	false	0
119	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
120	"sql_div"	"/"	"calc"	0	1	false	false	false	0
121	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
122	"sql_add"	"+"	"calc"	0	1	false	false	false	0
123	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
124	"sql_div"	"/"	"calc"	0	1	false	false	false	0
125	"bit_and"	"and"	"calc"	0	1	false	false	false	0
126	"bit_or"	"or"	"calc"	0	1	false	false	false	0
127	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
128	"bit_not"	"not"	"calc"	0	1	false	false	false	0
129	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
130	"right_shift"	">>"	"calc"	0	1	false	false	false	0
131	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
132	"abs"	"abs"	"calc"	0	1	false	false	false	0
133	"sign"	"sign"	"calc"	0	1	false	false	false	0
134	"scale_up"	"*"	"calc"	0	1	false	false	false	0
135	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
136	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
137	"sql_add"	"+"	"calc"	0	1	false	false	false	0
138	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
139	"sql_div"	"/"	"calc"	0	1	false	false	false	0
140	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
141	"sql_add"	"+"	"calc"	0	1	false	false	false	0
142	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
143	"sql_div"	"/"	"calc"	0	1	false	false	false	0
144	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
145	"sql_add"	"+"	"calc"	0	1	false	false	false	0
146	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
147	"sql_div"	"/"	"calc"	0	1	false	false	false	0
148	"bit_and"	"and"	"calc"	0	1	false	false	false	0
149	"bit_or"	"or"	"calc"	0	1	false	false	false	0
150	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
151	"bit_not"	"not"	"calc"	0	1	false	false	false	0
152	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
153	"right_shift"	">>"	"calc"	0	1	false	false	false	0
154	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
155	"abs"	"abs"	"calc"	0	1	false	false	false	0
156	"sign"	"sign"	"calc"	0	1	false	false	false	0
157	"scale_up"	"*"	"calc"	0	1	false	false	false	0
158	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
159	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
160	"sql_add"	"+"	"calc"	0	1	false	false	false	0
161	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
162	"sql_div"	"/"	"calc"	0	1	false	false	false	0
163	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
164	"sql_add"	"+"	"calc"	0	1	false	false	false	0
165	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
166	"sql_div"	"/"	"calc"	0	1	false	false	false	0
167	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
168	"sql_add"	"+"	"calc"	0	1	false	false	false	0
169	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
170	"sql_div"	"/"	"calc"	0	1	false	false	false	0
171	"bit_and"	"and"	"calc"	0	1	false	false	false	0
172	"bit_or"	"or"	"calc"	0	1	false	false	false	0
173	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
174	"bit_not"	"not"	"calc"	0	1	false	false	false	0
175	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
176	"right_shift"	">>"	"calc"	0	1	false	false	false	0
177	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
178	"abs"	"abs"	"calc"	0	1	false	false	false	0
179	"sign"	"sign"	"calc"	0	1	false	false	false	0
180	"scale_up"	"*"	"calc"	0	1	false	false	false	0
181	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
182	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
183	"sql_add"	"+"	"calc"	0	1	false	false	false	0
184	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
185	"sql_div"	"/"	"calc"	0	1	false	false	false	0
186	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
187	"sql_add"	"+"	"calc"	0	1	false	false	false	0
188	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
189	"sql_div"	"/"	"calc"	0	1	false	false	false	0
190	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
191	"sql_add"	"+"	"calc"	0	1	false	false	false	0
192	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
193	"sql_div"	"/"	"calc"	0	1	false	false	false	0
194	"bit_and"	"and"	"calc"	0	1	false	false	false	0
195	"bit_or"	"or"	"calc"	0	1	false	false	false	0
196	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
197	"bit_not"	"not"	"calc"	0	1	false	false	false	0
198	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
199	"right_shift"	">>"	"calc"	0	1	false	false	false	0
200	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
201	"abs"	"abs"	"calc"	0	1	false	false	false	0
202	"sign"	"sign"	"calc"	0	1	false	false	false	0
203	"scale_up"	"*"	"calc"	0	1	false	false	false	0
204	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
205	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
206	"sql_add"	"+"	"calc"	0	1	false	false	false	0
207	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
208	"sql_div"	"/"	"calc"	0	1	false	false	false	0
209	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
210	"sql_add"	"+"	"calc"	0	1	false	false	false	0
211	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
212	"sql_div"	"/"	"calc"	0	1	false	false	false	0
213	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
214	"sql_add"	"+"	"calc"	0	1	false	false	false	0
215	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
216	"sql_div"	"/"	"calc"	0	1	false	false	false	0
217	"bit_and"	"and"	"calc"	0	1	false	false	false	0
218	"bit_or"	"or"	"calc"	0	1	false	false	false	0
219	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
220	"bit_not"	"not"	"calc"	0	1	false	false	false	0
221	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
222	"right_shift"	">>"	"calc"	0	1	false	false	false	0
223	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
224	"abs"	"abs"	"calc"	0	1	false	false	false	0
225	"sign"	"sign"	"calc"	0	1	false	false	false	0
226	"scale_up"	"*"	"calc"	0	1	false	false	false	0
227	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
228	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
229	"sql_add"	"+"	"calc"	0	1	false	false	false	0
230	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
231	"sql_div"	"/"	"calc"	0	1	false	false	false	0
232	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
233	"sql_add"	"+"	"calc"	0	1	false	false	false	0
234	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
235	"sql_div"	"/"	"calc"	0	1	false	false	false	0
236	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
237	"sql_add"	"+"	"calc"	0	1	false	false	false	0
238	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
239	"sql_div"	"/"	"calc"	0	1	false	false	false	0
240	"bit_and"	"and"	"calc"	0	1	false	false	false	0
241	"bit_or"	"or"	"calc"	0	1	false	false	false	0
242	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
243	"bit_not"	"not"	"calc"	0	1	false	false	false	0
244	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
245	"right_shift"	">>"	"calc"	0	1	false	false	false	0
246	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
247	"abs"	"abs"	"calc"	0	1	false	false	false	0
248	"sign"	"sign"	"calc"	0	1	false	false	false	0
249	"scale_up"	"*"	"calc"	0	1	false	false	false	0
250	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
251	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
252	"sql_add"	"+"	"calc"	0	1	false	false	false	0
253	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
254	"sql_div"	"/"	"calc"	0	1	false	false	false	0
255	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
256	"sql_add"	"+"	"calc"	0	1	false	false	false	0
257	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
258	"sql_div"	"/"	"calc"	0	1	false	false	false	0
259	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
260	"sql_add"	"+"	"calc"	0	1	false	false	false	0
261	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
262	"sql_div"	"/"	"calc"	0	1	false	false	false	0
263	"bit_and"	"and"	"calc"	0	1	false	false	false	0
264	"bit_or"	"or"	"calc"	0	1	false	false	false	0
265	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
266	"bit_not"	"not"	"calc"	0	1	false	false	false	0
267	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
268	"right_shift"	">>"	"calc"	0	1	false	false	false	0
269	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
270	"abs"	"abs"	"calc"	0	1	false	false	false	0
271	"sign"	"sign"	"calc"	0	1	false	false	false	0
272	"scale_up"	"*"	"calc"	0	1	false	false	false	0
273	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
274	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
275	"sql_add"	"+"	"calc"	0	1	false	false	false	0
276	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
277	"sql_div"	"/"	"calc"	0	1	false	false	false	0
278	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
279	"sql_add"	"+"	"calc"	0	1	false	false	false	0
280	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
281	"sql_div"	"/"	"calc"	0	1	false	false	false	0
282	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
283	"sql_add"	"+"	"calc"	0	1	false	false	false	0
284	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
285	"sql_div"	"/"	"calc"	0	1	false	false	false	0
286	"bit_and"	"and"	"calc"	0	1	false	false	false	0
287	"bit_or"	"or"	"calc"	0	1	false	false	false	0
288	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
289	"bit_not"	"not"	"calc"	0	1	false	false	false	0
290	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
291	"right_shift"	">>"	"calc"	0	1	false	false	false	0
292	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
293	"abs"	"abs"	"calc"	0	1	false	false	false	0
294	"sign"	"sign"	"calc"	0	1	false	false	false	0
295	"scale_up"	"*"	"calc"	0	1	false	false	false	0
296	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
297	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
298	"sql_add"	"+"	"calc"	0	1	false	false	false	0
299	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
300	"sql_div"	"/"	"calc"	0	1	false	false	false	0
301	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
302	"sql_add"	"+"	"calc"	0	1	false	false	false	0
303	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
304	"sql_div"	"/"	"calc"	0	1	false	false	false	0
305	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
306	"sql_add"	"+"	"calc"	0	1	false	false	false	0
307	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
308	"sql_div"	"/"	"calc"	0	1	false	false	false	0
309	"bit_and"	"and"	"calc"	0	1	false	false	false	0
310	"bit_or"	"or"	"calc"	0	1	false	false	false	0
311	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
312	"bit_not"	"not"	"calc"	0	1	false	false	false	0
313	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
314	"right_shift"	">>"	"calc"	0	1	false	false	false	0
315	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
316	"abs"	"abs"	"calc"	0	1	false	false	false	0
317	"sign"	"sign"	"calc"	0	1	false	false	false	0
318	"scale_up"	"*"	"calc"	0	1	false	false	false	0
319	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
320	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
321	"sql_add"	"+"	"calc"	0	1	false	false	false	0
322	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
323	"sql_div"	"/"	"calc"	0	1	false	false	false	0
324	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
325	"sql_add"	"+"	"calc"	0	1	false	false	false	0
326	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
327	"sql_div"	"/"	"calc"	0	1	false	false	false	0
328	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
329	"sql_add"	"+"	"calc"	0	1	false	false	false	0
330	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
331	"sql_div"	"/"	"calc"	0	1	false	false	false	0
332	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
333	"abs"	"abs"	"calc"	0	1	false	false	false	0
334	"sign"	"sign"	"calc"	0	1	false	false	false	0
335	"scale_up"	"*"	"calc"	0	1	false	false	false	0
336	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
337	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
338	"sql_add"	"+"	"calc"	0	1	false	false	false	0
339	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
340	"sql_div"	"/"	"calc"	0	1	false	false	false	0
341	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
342	"sql_add"	"+"	"calc"	0	1	false	false	false	0
343	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
344	"sql_div"	"/"	"calc"	0	1	false	false	false	0
345	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
346	"sql_add"	"+"	"calc"	0	1	false	false	false	0
347	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
348	"sql_div"	"/"	"calc"	0	1	false	false	false	0
349	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
350	"abs"	"abs"	"calc"	0	1	false	false	false	0
351	"sign"	"sign"	"calc"	0	1	false	false	false	0
352	"scale_up"	"*"	"calc"	0	1	false	false	false	0
353	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
354	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
355	"sql_add"	"+"	"calc"	0	1	false	false	false	0
356	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
357	"sql_div"	"/"	"calc"	0	1	false	false	false	0
358	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
359	"sql_add"	"+"	"calc"	0	1	false	false	false	0
360	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
361	"sql_div"	"/"	"calc"	0	1	false	false	false	0
362	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
363	"sql_add"	"+"	"calc"	0	1	false	false	false	0
364	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
365	"sql_div"	"/"	"calc"	0	1	false	false	false	0
366	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
367	"abs"	"abs"	"calc"	0	1	false	false	false	0
368	"sign"	"sign"	"calc"	0	1	false	false	false	0
369	"scale_up"	"*"	"calc"	0	1	false	false	false	0
370	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
371	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
372	"sql_add"	"+"	"calc"	0	1	false	false	false	0
373	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
374	"sql_div"	"/"	"calc"	0	1	false	false	false	0
375	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
376	"abs"	"abs"	"calc"	0	1	false	false	false	0
377	"sign"	"sign"	"calc"	0	1	false	false	false	0
378	"scale_up"	"*"	"calc"	0	1	false	false	false	0
379	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
380	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
381	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
382	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
383	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
384	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
385	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
386	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
387	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
388	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
389	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
390	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
391	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
392	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
393	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
394	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
395	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
396	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
397	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
398	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
399	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
404	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
405	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
406	"round"	"round"	"sql"	0	1	false	false	false	0
407	"round"	"round"	"sql"	0	1	false	false	false	0
408	"round"	"round"	"sql"	0	1	false	false	false	0
409	"round"	"round"	"sql"	0	1	false	false	false	0
410	"round"	"round"	"sql"	0	1	false	false	false	0
411	"round"	"round"	"sql"	0	1	false	false	false	0
412	"scale_up"	"*"	"calc"	0	1	false	false	false	0
413	"scale_up"	"*"	"calc"	0	1	false	false	false	0
414	"scale_up"	"*"	"calc"	0	1	false	false	false	0
415	"scale_up"	"*"	"calc"	0	1	false	false	false	0
416	"scale_up"	"*"	"calc"	0	1	false	false	false	0
417	"scale_up"	"*"	"calc"	0	1	false	false	false	0
418	"scale_up"	"*"	"calc"	0	1	false	false	false	0
419	"scale_up"	"*"	"calc"	0	1	false	false	false	0
420	"scale_up"	"*"	"calc"	0	1	false	false	false	0
421	"scale_up"	"*"	"calc"	0	1	false	false	false	0
422	"scale_up"	"*"	"calc"	0	1	false	false	false	0
423	"scale_up"	"*"	"calc"	0	1	false	false	false	0
424	"scale_up"	"*"	"calc"	0	1	false	false	false	0
425	"scale_up"	"*"	"calc"	0	1	false	false	false	0
426	"scale_up"	"*"	"calc"	0	1	false	false	false	0
427	"scale_up"	"*"	"calc"	0	1	false	false	false	0
428	"scale_up"	"*"	"calc"	0	1	false	false	false	0
429	"scale_up"	"*"	"calc"	0	1	false	false	false	0
430	"scale_up"	"*"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_up"	"*"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_up"	"*"	"calc"	0	1	false	false	false	0
438	"scale_up"	"*"	"calc"	0	1	false	false	false	0
439	"scale_up"	"*"	"calc"	0	1	false	false	false	0
440	"scale_up"	"*"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_up"	"*"	"calc"	0	1	false	false	false	0
443	"scale_up"	"*"	"calc"	0	1	false	false	false	0
444	"scale_up"	"*"	"calc"	0	1	false	false	false	0
445	"scale_up"	"*"	"calc"	0	1	false	false	false	0
446	"scale_up"	"*"	"calc"	0	1	false	false	false	0
447	"scale_up"	"*"	"calc"	0	1	false	false	false	0
448	"scale_up"	"*"	"calc"	0	1	false	false	false	0
449	"scale_up"	"*"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_up"	"*"	"calc"	0	1	false	false	false	0
455	"scale_up"	"*"	"calc"	0	1	false	false	false	0
456	"scale_up"	"*"	"calc"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"power"	"pow"	"mmath"	0	1	false	false	false	0
813	"floor"	"floor"	"mmath"	0	1	false	false	false	0
814	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
815	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
816	"sin"	"sin"	"mmath"	0	1	false	false	false	0
817	"cos"	"cos"	"mmath"	0	1	false	false	false	0
818	"tan"	"tan"	"mmath"	0	1	false	false	false	0
819	"asin"	"asin"	"mmath"	0	1	false	false	false	0
820	"acos"	"acos"	"mmath"	0	1	false	false	false	0
821	"atan"	"atan"	"mmath"	0	1	false	false	false	0
822	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
823	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
824	"cot"	"cot"	"mmath"	0	1	false	false	false	0
825	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
826	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
827	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
828	"exp"	"exp"	"mmath"	0	1	false	false	false	0
829	"log"	"log"	"mmath"	0	1	false	false	false	0
830	"log10"	"log10"	"mmath"	0	1	false	false	false	0
831	"power"	"pow"	"mmath"	0	1	false	false	false	0
832	"floor"	"floor"	"mmath"	0	1	false	false	false	0
833	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
834	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
835	"sin"	"sin"	"mmath"	0	1	false	false	false	0
836	"cos"	"cos"	"mmath"	0	1	false	false	false	0
837	"tan"	"tan"	"mmath"	0	1	false	false	false	0
838	"asin"	"asin"	"mmath"	0	1	false	false	false	0
839	"acos"	"acos"	"mmath"	0	1	false	false	false	0
840	"atan"	"atan"	"mmath"	0	1	false	false	false	0
841	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
842	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
843	"cot"	"cot"	"mmath"	0	1	false	false	false	0
844	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
845	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
846	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
847	"exp"	"exp"	"mmath"	0	1	false	false	false	0
848	"log"	"log"	"mmath"	0	1	false	false	false	0
849	"log10"	"log10"	"mmath"	0	1	false	false	false	0
850	"pi"	"pi"	"mmath"	0	1	false	false	false	0
851	"rand"	"rand"	"mmath"	0	1	true	false	false	0
852	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
853	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
854	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
855	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
856	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
857	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
858	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
859	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
860	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
861	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
862	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
863	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
864	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
865	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
866	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
867	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
868	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
869	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
870	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
871	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
872	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
873	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
874	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
875	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
876	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
877	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
878	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
879	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
880	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
881	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
882	"year"	"year"	"mtime"	0	1	false	false	false	0
883	"month"	"month"	"mtime"	0	1	false	false	false	0
884	"day"	"day"	"mtime"	0	1	false	false	false	0
885	"hour"	"hours"	"mtime"	0	1	false	false	false	0
886	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
887	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
888	"hour"	"hours"	"mtime"	0	1	false	false	false	0
889	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
890	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
891	"year"	"year"	"mtime"	0	1	false	false	false	0
892	"month"	"month"	"mtime"	0	1	false	false	false	0
893	"day"	"day"	"mtime"	0	1	false	false	false	0
894	"hour"	"hours"	"mtime"	0	1	false	false	false	0
895	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
896	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
897	"year"	"year"	"mtime"	0	1	false	false	false	0
898	"month"	"month"	"mtime"	0	1	false	false	false	0
899	"day"	"day"	"mtime"	0	1	false	false	false	0
900	"hour"	"hours"	"mtime"	0	1	false	false	false	0
901	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
902	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
903	"year"	"year"	"mtime"	0	1	false	false	false	0
904	"month"	"month"	"mtime"	0	1	false	false	false	0
905	"day"	"day"	"mtime"	0	1	false	false	false	0
906	"hour"	"hours"	"mtime"	0	1	false	false	false	0
907	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
908	"second"	"seconds"	"mtime"	0	1	false	false	false	0
909	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
910	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
911	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
912	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
913	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
914	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
915	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
916	"restart"	"restart"	"sql"	0	1	false	false	false	0
917	"index"	"index"	"calc"	0	1	false	false	false	0
918	"index"	"index"	"calc"	0	1	false	false	false	0
919	"index"	"index"	"calc"	0	1	false	false	false	0
920	"strings"	"strings"	"calc"	0	1	false	false	false	0
921	"locate"	"locate"	"str"	0	1	false	false	false	0
922	"locate"	"locate"	"str"	0	1	false	false	false	0
923	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
924	"substring"	"substring"	"str"	0	1	false	false	false	0
925	"substring"	"substring"	"str"	0	1	false	false	false	0
926	"like"	"like"	"algebra"	0	1	false	false	false	0
927	"like"	"like"	"algebra"	0	1	false	false	false	0
928	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
929	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
930	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
931	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
932	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
933	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
934	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
935	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
936	"concat"	"+"	"calc"	0	1	false	false	false	0
937	"ascii"	"ascii"	"str"	0	1	false	false	false	0
938	"code"	"unicode"	"str"	0	1	false	false	false	0
939	"length"	"stringlength"	"str"	0	1	false	false	false	0
940	"right"	"stringright"	"str"	0	1	false	false	false	0
941	"left"	"stringleft"	"str"	0	1	false	false	false	0
942	"upper"	"toUpper"	"str"	0	1	false	false	false	0
943	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
944	"lower"	"toLower"	"str"	0	1	false	false	false	0
945	"lcase"	"toLower"	"str"	0	1	false	false	false	0
946	"trim"	"trim"	"str"	0	1	false	false	false	0
947	"trim"	"trim"	"str"	0	1	false	false	false	0
948	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
949	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
950	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
951	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
952	"lpad"	"lpad"	"str"	0	1	false	false	false	0
953	"lpad"	"lpad"	"str"	0	1	false	false	false	0
954	"rpad"	"rpad"	"str"	0	1	false	false	false	0
955	"rpad"	"rpad"	"str"	0	1	false	false	false	0
956	"insert"	"insert"	"str"	0	1	false	false	false	0
957	"replace"	"replace"	"str"	0	1	false	false	false	0
958	"repeat"	"repeat"	"str"	0	1	false	false	false	0
959	"space"	"space"	"str"	0	1	false	false	false	0
960	"char_length"	"length"	"str"	0	1	false	false	false	0
961	"character_length"	"length"	"str"	0	1	false	false	false	0
962	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
963	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
964	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
965	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
966	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
967	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
968	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
969	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
970	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
971	"index"	"index"	"calc"	0	1	false	false	false	0
972	"index"	"index"	"calc"	0	1	false	false	false	0
973	"index"	"index"	"calc"	0	1	false	false	false	0
974	"strings"	"strings"	"calc"	0	1	false	false	false	0
975	"locate"	"locate"	"str"	0	1	false	false	false	0
976	"locate"	"locate"	"str"	0	1	false	false	false	0
977	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
978	"substring"	"substring"	"str"	0	1	false	false	false	0
979	"substring"	"substring"	"str"	0	1	false	false	false	0
980	"like"	"like"	"algebra"	0	1	false	false	false	0
981	"like"	"like"	"algebra"	0	1	false	false	false	0
982	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
983	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
984	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
985	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
986	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
987	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
988	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
989	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
990	"concat"	"+"	"calc"	0	1	false	false	false	0
991	"ascii"	"ascii"	"str"	0	1	false	false	false	0
992	"code"	"unicode"	"str"	0	1	false	false	false	0
993	"length"	"stringlength"	"str"	0	1	false	false	false	0
994	"right"	"stringright"	"str"	0	1	false	false	false	0
995	"left"	"stringleft"	"str"	0	1	false	false	false	0
996	"upper"	"toUpper"	"str"	0	1	false	false	false	0
997	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
998	"lower"	"toLower"	"str"	0	1	false	false	false	0
999	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1000	"trim"	"trim"	"str"	0	1	false	false	false	0
1001	"trim"	"trim"	"str"	0	1	false	false	false	0
1002	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1003	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1004	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1005	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1006	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1007	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1008	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1009	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1010	"insert"	"insert"	"str"	0	1	false	false	false	0
1011	"replace"	"replace"	"str"	0	1	false	false	false	0
1012	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1013	"space"	"space"	"str"	0	1	false	false	false	0
1014	"char_length"	"length"	"str"	0	1	false	false	false	0
1015	"character_length"	"length"	"str"	0	1	false	false	false	0
1016	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1017	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1018	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1019	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1020	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1021	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1022	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1023	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1024	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1025	"index"	"index"	"calc"	0	1	false	false	false	0
1026	"index"	"index"	"calc"	0	1	false	false	false	0
1027	"index"	"index"	"calc"	0	1	false	false	false	0
1028	"strings"	"strings"	"calc"	0	1	false	false	false	0
1029	"locate"	"locate"	"str"	0	1	false	false	false	0
1030	"locate"	"locate"	"str"	0	1	false	false	false	0
1031	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1032	"substring"	"substring"	"str"	0	1	false	false	false	0
1033	"substring"	"substring"	"str"	0	1	false	false	false	0
1034	"like"	"like"	"algebra"	0	1	false	false	false	0
1035	"like"	"like"	"algebra"	0	1	false	false	false	0
1036	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1037	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1038	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1039	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1040	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1041	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1042	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1043	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1044	"concat"	"+"	"calc"	0	1	false	false	false	0
1045	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1046	"code"	"unicode"	"str"	0	1	false	false	false	0
1047	"length"	"stringlength"	"str"	0	1	false	false	false	0
1048	"right"	"stringright"	"str"	0	1	false	false	false	0
1049	"left"	"stringleft"	"str"	0	1	false	false	false	0
1050	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1051	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1052	"lower"	"toLower"	"str"	0	1	false	false	false	0
1053	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1054	"trim"	"trim"	"str"	0	1	false	false	false	0
1055	"trim"	"trim"	"str"	0	1	false	false	false	0
1056	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1057	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1058	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1059	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1060	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1061	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1062	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1063	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1064	"insert"	"insert"	"str"	0	1	false	false	false	0
1065	"replace"	"replace"	"str"	0	1	false	false	false	0
1066	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1067	"space"	"space"	"str"	0	1	false	false	false	0
1068	"char_length"	"length"	"str"	0	1	false	false	false	0
1069	"character_length"	"length"	"str"	0	1	false	false	false	0
1070	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1071	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1072	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1073	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1074	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1075	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1076	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1077	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1078	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1079	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1080	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
27	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
39	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
40	"exist"	"exist"	"aggr"	0	3	false	false	false	0
41	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
46	"min"	"min"	"aggr"	0	3	false	false	false	0
47	"max"	"max"	"aggr"	0	3	false	false	false	0
51	"sum"	"sum"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"prod"	"prod"	"aggr"	0	3	false	false	false	0
61	"prod"	"prod"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
80	"sum"	"sum"	"aggr"	0	3	false	false	false	0
81	"prod"	"prod"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"prod"	"prod"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"avg"	"avg"	"aggr"	0	3	false	false	false	0
87	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
88	"count"	"count"	"aggr"	0	3	false	false	false	0
5165	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5168	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5174	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5194	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5199	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5204	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5208	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5212	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5216	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5220	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5223	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5227	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5231	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5235	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5239	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5243	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5247	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5251	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5255	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5259	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5263	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5267	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5271	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5275	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5279	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5286	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5292	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5297	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5302	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5307	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5312	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5317	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5323	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5327	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5331	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5335	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5340	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5344	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5348	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5352	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5356	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5360	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5365	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5370	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5375	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5380	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5390	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5440	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5442	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5444	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5447	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5449	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5479	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5483	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5486	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5490	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5494	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5498	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5502	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5506	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5510	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5514	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5519	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5524	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5529	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5534	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5539	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5544	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5549	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5554	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5559	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5564	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5569	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5574	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5579	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5584	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5589	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5594	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5599	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
5603	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5619	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5622	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5626	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5629	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5633	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
5636	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
5643	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5648	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
5654	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5660	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5665	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5670	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5674	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5678	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5682	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5686	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
5689	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5699	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
5707	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, htype string,\n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
5721	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
5725	"flush_log"	"-- enqueue a flush log, ie as soon as no transactions are active \n-- flush the log and cleanup the used storage\ncreate procedure sys.flush_log ()\n\texternal name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
5727	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
5747	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5750	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5753	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5756	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5759	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5762	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5765	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
5777	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
5779	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5783	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5787	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5791	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5795	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5799	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5803	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5807	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5811	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5815	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5819	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5823	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5827	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5831	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5835	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5839	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5843	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5847	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5851	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5855	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5859	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5863	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5867	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5871	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5875	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5879	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5883	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5887	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5891	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5895	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5899	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5903	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5907	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5911	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5915	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5919	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5923	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5927	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5931	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5935	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5939	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5943	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5947	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5951	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5955	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5959	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5963	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5967	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5971	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5975	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5979	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5983	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5988	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5993	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5998	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6003	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6008	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6013	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6018	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6023	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6028	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6033	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6038	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6043	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6048	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6053	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6058	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6063	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6068	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6086	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6090	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6095	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6100	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6105	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6110	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6115	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6120	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6125	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6130	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6135	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6140	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6144	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6148	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6152	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6157	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6161	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6165	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6169	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6173	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6177	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6181	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6185	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6190	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6195	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6200	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6205	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6210	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6215	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6220	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6226	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6231	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6237	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6241	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6245	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6250	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6255	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6259	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6264	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6269	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6274	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6281	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6278
6286	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6278
6291	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6278
6296	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6278
6301	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6278
6306	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6278
6310	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6278
6314	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6278
6318	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6278
6322	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6278
6326	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6278
6330	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6278
6334	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6278
6338	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6278
6342	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6278
6346	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6278
6350	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6278
6354	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6278
6358	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6278
6362	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6278
6366	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6278
6370	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6278
6374	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6379	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6382	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6386	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6390	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6416	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6419	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6422	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6425	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6461	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6464	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6468	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6512	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6514	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
6520	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6526	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6531	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6536	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6583	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6587	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6592	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6598	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6605	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6609	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6614	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6619	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6625	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6623
6630	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6623
6635	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6623
6639	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6623
6643	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6623
6648	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6623
6652	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6623
6656	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6623
6660	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6623
6663	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6623
6733	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6738	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6744	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6749	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6755	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6760	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6766	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6771	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6777	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6783	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6789	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6795	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6397	6398	0	"keywords_keyword_pkey"
6402	6406	0	"table_types_table_type_id_pkey"
6405	6406	0	"table_types_table_type_name_unique"
6410	6414	0	"dependency_types_dependency_type_id_pkey"
6413	6414	0	"dependency_types_dependency_type_name_unique"
6673	6674	0	"files_pkey_file_id"
6684	6687	0	"sq_pkey_sn_file_id"
6686	6687	1	"sq_fkey_file_id"
6703	6706	0	"rg_pkey_id_file_id"
6705	6706	1	"rg_fkey_file_id"
6715	6718	0	"pg_pkey_id_file_id"
6717	6718	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6396	6398	0	"keywords_keyword_pkey"	-1	-1
6401	6406	0	"table_types_table_type_id_pkey"	-1	-1
6404	6406	1	"table_types_table_type_name_unique"	-1	-1
6409	6414	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6412	6414	1	"dependency_types_dependency_type_name_unique"	-1	-1
6672	6674	0	"files_pkey_file_id"	-1	-1
6683	6687	0	"sq_pkey_sn_file_id"	-1	-1
6685	6687	2	"sq_fkey_file_id"	6672	514
6702	6706	0	"rg_pkey_id_file_id"	-1	-1
6704	6706	2	"rg_fkey_file_id"	6672	514
6714	6718	0	"pg_pkey_id_file_id"	-1	-1
6716	6718	2	"pg_fkey_file_id"	6672	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6397	"keyword"	0
6396	"keyword"	0
6402	"table_type_id"	0
6405	"table_type_name"	0
6401	"table_type_id"	0
6404	"table_type_name"	0
6410	"dependency_type_id"	0
6413	"dependency_type_name"	0
6409	"dependency_type_id"	0
6412	"dependency_type_name"	0
6673	"file_id"	0
6672	"file_id"	0
6684	"sn"	0
6684	"file_id"	1
6686	"file_id"	0
6683	"sn"	0
6683	"file_id"	1
6685	"file_id"	0
6703	"id"	0
6703	"file_id"	1
6705	"file_id"	0
6702	"id"	0
6702	"file_id"	1
6704	"file_id"	0
6715	"id"	0
6715	"file_id"	1
6717	"file_id"	0
6714	"id"	0
6714	"file_id"	1
6716	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5144	1	1	0	0
5154	1	1	0	0
5180	1	1	0	0
5183	1	1	0	0
5187	1	1	0	0
6802	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6278	"json"	3	3	true
6623	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1344 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
28
29
30
31
32
33
34
35
36
37
38
42
43
44
45
48
49
50
68
69
70
71
72
73
74
75
76
77
78
79
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
27
39
40
41
46
47
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
80
81
82
83
84
85
86
87
88
5165
5168
5174
5194
5199
5204
5208
5212
5216
5220
5223
5227
5231
5235
5239
5243
5247
5251
5255
5259
5263
5267
5271
5275
5279
5286
5292
5297
5302
5307
5312
5317
5323
5327
5331
5335
5340
5344
5348
5352
5356
5360
5365
5370
5375
5380
5390
5440
5442
5444
5447
5449
5479
5483
5486
5490
5494
5498
5502
5506
5510
5514
5519
5524
5529
5534
5539
5544
5549
5554
5559
5564
5569
5574
5579
5584
5589
5594
5599
5603
5619
5622
5626
5629
5633
5636
5643
5648
5654
5660
5665
5670
5674
5678
5682
5686
5689
5699
5707
5721
5725
5727
5747
5750
5753
5756
5759
5762
5765
5777
5779
5783
5787
5791
5795
5799
5803
5807
5811
5815
5819
5823
5827
5831
5835
5839
5843
5847
5851
5855
5859
5863
5867
5871
5875
5879
5883
5887
5891
5895
5899
5903
5907
5911
5915
5919
5923
5927
5931
5935
5939
5943
5947
5951
5955
5959
5963
5967
5971
5975
5979
5983
5988
5993
5998
6003
6008
6013
6018
6023
6028
6033
6038
6043
6048
6053
6058
6063
6068
6086
6090
6095
6100
6105
6110
6115
6120
6125
6130
6135
6140
6144
6148
6152
6157
6161
6165
6169
6173
6177
6181
6185
6190
6195
6200
6205
6210
6215
6220
6226
6231
6237
6241
6245
6250
6255
6259
6264
6269
6274
6281
6286
6291
6296
6301
6306
6310
6314
6318
6322
6326
6330
6334
6338
6342
6346
6350
6354
6358
6362
6366
6370
6374
6379
6382
6386
6390
6416
6419
6422
6425
6461
6464
6468
6512
6514
6520
6526
6531
6536
6583
6587
6592
6598
6605
6609
6614
6619
6625
6630
6635
6639
6643
6648
6652
6656
6660
6663
6733
6738
6744
6749
6755
6760
6766
6771
6777
6783
6789
6795
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 44 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	13	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
5221	"url"	"url"	0	0	0	15	2000
5321	"inet"	"inet"	0	0	0	15	2000
6072	"wkb"	"point"	0	0	0	15	2000
6073	"wkb"	"curve"	0	0	0	15	2000
6074	"wkb"	"linestring"	0	0	0	15	2000
6075	"wkb"	"surface"	0	0	0	15	2000
6076	"wkb"	"polygon"	0	0	0	15	2000
6077	"wkb"	"multipoint"	0	0	0	15	2000
6078	"wkb"	"multicurve"	0	0	0	15	2000
6079	"wkb"	"multilinestring"	0	0	0	15	2000
6080	"wkb"	"multisurface"	0	0	0	15	2000
6081	"wkb"	"multipolygon"	0	0	0	15	2000
6082	"wkb"	"geometry"	0	0	0	15	2000
6083	"wkb"	"geomcollection"	0	0	0	15	2000
6084	"mbr"	"mbr"	0	0	0	15	2000
6279	"json"	"json"	0	0	0	15	2000
6377	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

