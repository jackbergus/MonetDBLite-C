stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.debug
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
create function degrees(r double) 
returns double
	return r*180/pi();
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
 
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create function length(g geometry) returns float external name geom."Length";
create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
create procedure sys.querylog(filename string) 
	external name sql.logfile;
create function sys.querylog_calls()
returns table(
 id oid, 
 "start" timestamp, 
 "stop" timestamp, 
 arguments string, 
 tuples bigint, 
 run bigint, 
 ship bigint, 
 cpu int, 
 io int 
)
external name sql.querylog_calls;
create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
 "plan" string, 
 mal int, 
 optimize bigint 
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
create procedure sys.querylog_empty()
external name sql.querylog_empty;
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
 set "distinct" = "count" 
	where "type" = 'varchar' or "type"='clob';
end;
create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
create function sys.tracelog() 
	returns table (
 event integer, 
 clk varchar(20), 
 pc varchar(50), 
 thread int, 
 ticks bigint, 
 rrsmb bigint, 
 vmmb bigint, 
 reads bigint, 
 writes bigint, 
 minflt bigint, 
 majflt bigint, 
 nvcsw bigint, 
 stmt string 
	)
	external name sql.dump_trace;
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
4988	"id"	"int"	32	0	4987	NULL	true	0	NULL
4989	"name"	"varchar"	1024	0	4987	NULL	true	1	NULL
4990	"schema_id"	"int"	32	0	4987	NULL	true	2	NULL
4991	"query"	"varchar"	2048	0	4987	NULL	true	3	NULL
4992	"type"	"smallint"	16	0	4987	NULL	true	4	NULL
4993	"system"	"boolean"	1	0	4987	NULL	true	5	NULL
4994	"commit_action"	"smallint"	16	0	4987	NULL	true	6	NULL
4995	"access"	"smallint"	16	0	4987	NULL	true	7	NULL
4996	"temporary"	"smallint"	16	0	4987	NULL	true	8	NULL
4998	"id"	"int"	32	0	4997	NULL	true	0	NULL
4999	"name"	"varchar"	1024	0	4997	NULL	true	1	NULL
5000	"type"	"varchar"	1024	0	4997	NULL	true	2	NULL
5001	"type_digits"	"int"	32	0	4997	NULL	true	3	NULL
5002	"type_scale"	"int"	32	0	4997	NULL	true	4	NULL
5003	"table_id"	"int"	32	0	4997	NULL	true	5	NULL
5004	"default"	"varchar"	2048	0	4997	NULL	true	6	NULL
5005	"null"	"boolean"	1	0	4997	NULL	true	7	NULL
5006	"number"	"int"	32	0	4997	NULL	true	8	NULL
5007	"storage"	"varchar"	2048	0	4997	NULL	true	9	NULL
5014	"name"	"varchar"	1024	0	5013	NULL	true	0	NULL
5015	"fullname"	"varchar"	2048	0	5013	NULL	true	1	NULL
5016	"default_schema"	"int"	9	0	5013	NULL	true	2	NULL
5020	"name"	"varchar"	1024	0	5019	NULL	true	0	NULL
5021	"fullname"	"varchar"	2024	0	5019	NULL	true	1	NULL
5022	"default_schema"	"int"	9	0	5019	NULL	true	2	NULL
5024	"login_id"	"int"	32	0	5023	NULL	true	0	NULL
5025	"role_id"	"int"	32	0	5023	NULL	true	1	NULL
5027	"id"	"int"	32	0	5026	NULL	true	0	NULL
5028	"name"	"varchar"	1024	0	5026	NULL	true	1	NULL
5029	"grantor"	"int"	32	0	5026	NULL	true	2	NULL
5031	"obj_id"	"int"	32	0	5030	NULL	true	0	NULL
5032	"auth_id"	"int"	32	0	5030	NULL	true	1	NULL
5033	"privileges"	"int"	32	0	5030	NULL	true	2	NULL
5034	"grantor"	"int"	32	0	5030	NULL	true	3	NULL
5035	"grantable"	"int"	32	0	5030	NULL	true	4	NULL
5244	"id"	"oid"	63	0	5252	NULL	true	0	NULL
5245	"owner"	"clob"	0	0	5252	NULL	true	1	NULL
5246	"defined"	"timestamp"	7	0	5252	NULL	true	2	NULL
5247	"query"	"clob"	0	0	5252	NULL	true	3	NULL
5248	"pipe"	"clob"	0	0	5252	NULL	true	4	NULL
5249	"plan"	"clob"	0	0	5252	NULL	true	5	NULL
5250	"mal"	"int"	32	0	5252	NULL	true	6	NULL
5251	"optimize"	"bigint"	64	0	5252	NULL	true	7	NULL
5254	"id"	"oid"	63	0	5263	NULL	true	0	NULL
5255	"start"	"timestamp"	7	0	5263	NULL	true	1	NULL
5256	"stop"	"timestamp"	7	0	5263	NULL	true	2	NULL
5257	"arguments"	"clob"	0	0	5263	NULL	true	3	NULL
5258	"tuples"	"bigint"	64	0	5263	NULL	true	4	NULL
5259	"run"	"bigint"	64	0	5263	NULL	true	5	NULL
5260	"ship"	"bigint"	64	0	5263	NULL	true	6	NULL
5261	"cpu"	"int"	32	0	5263	NULL	true	7	NULL
5262	"io"	"int"	32	0	5263	NULL	true	8	NULL
5265	"id"	"oid"	63	0	5281	NULL	true	0	NULL
5266	"owner"	"clob"	0	0	5281	NULL	true	1	NULL
5267	"defined"	"timestamp"	7	0	5281	NULL	true	2	NULL
5268	"query"	"clob"	0	0	5281	NULL	true	3	NULL
5269	"pipe"	"clob"	0	0	5281	NULL	true	4	NULL
5270	"plan"	"clob"	0	0	5281	NULL	true	5	NULL
5271	"mal"	"int"	32	0	5281	NULL	true	6	NULL
5272	"optimize"	"bigint"	64	0	5281	NULL	true	7	NULL
5273	"start"	"timestamp"	7	0	5281	NULL	true	8	NULL
5274	"stop"	"timestamp"	7	0	5281	NULL	true	9	NULL
5275	"arguments"	"clob"	0	0	5281	NULL	true	10	NULL
5276	"tuples"	"bigint"	64	0	5281	NULL	true	11	NULL
5277	"run"	"bigint"	64	0	5281	NULL	true	12	NULL
5278	"ship"	"bigint"	64	0	5281	NULL	true	13	NULL
5279	"cpu"	"int"	32	0	5281	NULL	true	14	NULL
5280	"io"	"int"	32	0	5281	NULL	true	15	NULL
5307	"event"	"int"	32	0	5320	NULL	true	0	NULL
5308	"clk"	"varchar"	20	0	5320	NULL	true	1	NULL
5309	"pc"	"varchar"	50	0	5320	NULL	true	2	NULL
5310	"thread"	"int"	32	0	5320	NULL	true	3	NULL
5311	"ticks"	"bigint"	64	0	5320	NULL	true	4	NULL
5312	"rrsmb"	"bigint"	64	0	5320	NULL	true	5	NULL
5313	"vmmb"	"bigint"	64	0	5320	NULL	true	6	NULL
5314	"reads"	"bigint"	64	0	5320	NULL	true	7	NULL
5315	"writes"	"bigint"	64	0	5320	NULL	true	8	NULL
5316	"minflt"	"bigint"	64	0	5320	NULL	true	9	NULL
5317	"majflt"	"bigint"	64	0	5320	NULL	true	10	NULL
5318	"nvcsw"	"bigint"	64	0	5320	NULL	true	11	NULL
5319	"stmt"	"clob"	0	0	5320	NULL	true	12	NULL
5447	"user"	"clob"	0	0	5453	NULL	true	0	NULL
5448	"login"	"timestamp"	7	0	5453	NULL	true	1	NULL
5449	"sessiontimeout"	"bigint"	64	0	5453	NULL	true	2	NULL
5450	"lastcommand"	"timestamp"	7	0	5453	NULL	true	3	NULL
5451	"querytimeout"	"bigint"	64	0	5453	NULL	true	4	NULL
5452	"active"	"boolean"	1	0	5453	NULL	true	5	NULL
5530	"name"	"clob"	0	0	5533	NULL	true	0	NULL
5531	"def"	"clob"	0	0	5533	NULL	true	1	NULL
5532	"status"	"clob"	0	0	5533	NULL	true	2	NULL
5539	"name"	"clob"	0	0	5541	NULL	true	0	NULL
5540	"value"	"clob"	0	0	5541	NULL	true	1	NULL
5581	"qtag"	"bigint"	64	0	5589	NULL	true	0	NULL
5582	"user"	"clob"	0	0	5589	NULL	true	1	NULL
5583	"started"	"timestamp"	7	0	5589	NULL	true	2	NULL
5584	"estimate"	"timestamp"	7	0	5589	NULL	true	3	NULL
5585	"progress"	"int"	32	0	5589	NULL	true	4	NULL
5586	"status"	"clob"	0	0	5589	NULL	true	5	NULL
5587	"tag"	"oid"	63	0	5589	NULL	true	6	NULL
5588	"query"	"clob"	0	0	5589	NULL	true	7	NULL
5615	"rowid"	"bigint"	64	0	5619	NULL	true	0	NULL
5616	"fldid"	"int"	32	0	5619	NULL	true	1	NULL
5617	"message"	"clob"	0	0	5619	NULL	true	2	NULL
5618	"input"	"clob"	0	0	5619	NULL	true	3	NULL
6224	"keyword"	"varchar"	40	0	6227	NULL	false	0	NULL
6229	"table_type_id"	"smallint"	16	0	6235	NULL	false	0	NULL
6232	"table_type_name"	"varchar"	25	0	6235	NULL	false	1	NULL
6237	"dependency_type_id"	"smallint"	16	0	6243	NULL	false	0	NULL
6240	"dependency_type_name"	"varchar"	15	0	6243	NULL	false	1	NULL
6258	"file_id"	"int"	32	0	6260	NULL	true	0	NULL
6259	"location"	"char"	256	0	6260	NULL	true	1	NULL
6262	"dim_id"	"int"	32	0	6266	NULL	true	0	NULL
6263	"file_id"	"int"	32	0	6266	NULL	true	1	NULL
6264	"name"	"varchar"	64	0	6266	NULL	true	2	NULL
6265	"length"	"int"	32	0	6266	NULL	true	3	NULL
6268	"var_id"	"int"	32	0	6274	NULL	true	0	NULL
6269	"file_id"	"int"	32	0	6274	NULL	true	1	NULL
6270	"name"	"varchar"	64	0	6274	NULL	true	2	NULL
6271	"vartype"	"varchar"	64	0	6274	NULL	true	3	NULL
6272	"ndim"	"int"	32	0	6274	NULL	true	4	NULL
6273	"coord_dim_id"	"int"	32	0	6274	NULL	true	5	NULL
6276	"var_id"	"int"	32	0	6280	NULL	true	0	NULL
6277	"dim_id"	"int"	32	0	6280	NULL	true	1	NULL
6278	"file_id"	"int"	32	0	6280	NULL	true	2	NULL
6279	"dimpos"	"int"	32	0	6280	NULL	true	3	NULL
6282	"obj_name"	"varchar"	256	0	6288	NULL	true	0	NULL
6283	"att_name"	"varchar"	256	0	6288	NULL	true	1	NULL
6284	"att_type"	"varchar"	64	0	6288	NULL	true	2	NULL
6285	"value"	"clob"	0	0	6288	NULL	true	3	NULL
6286	"file_id"	"int"	32	0	6288	NULL	true	4	NULL
6287	"gr_name"	"varchar"	256	0	6288	NULL	true	5	NULL
6313	"schema"	"clob"	0	0	6327	NULL	true	0	NULL
6314	"table"	"clob"	0	0	6327	NULL	true	1	NULL
6315	"column"	"clob"	0	0	6327	NULL	true	2	NULL
6316	"type"	"clob"	0	0	6327	NULL	true	3	NULL
6317	"mode"	"clob"	0	0	6327	NULL	true	4	NULL
6318	"location"	"clob"	0	0	6327	NULL	true	5	NULL
6319	"count"	"bigint"	64	0	6327	NULL	true	6	NULL
6320	"typewidth"	"int"	32	0	6327	NULL	true	7	NULL
6321	"columnsize"	"bigint"	64	0	6327	NULL	true	8	NULL
6322	"heapsize"	"bigint"	64	0	6327	NULL	true	9	NULL
6323	"hashes"	"bigint"	64	0	6327	NULL	true	10	NULL
6324	"phash"	"boolean"	1	0	6327	NULL	true	11	NULL
6325	"imprints"	"bigint"	64	0	6327	NULL	true	12	NULL
6326	"sorted"	"boolean"	1	0	6327	NULL	true	13	NULL
6329	"schema"	"clob"	0	0	6339	NULL	true	0	NULL
6330	"table"	"clob"	0	0	6339	NULL	true	1	NULL
6331	"column"	"clob"	0	0	6339	NULL	true	2	NULL
6332	"type"	"clob"	0	0	6339	NULL	true	3	NULL
6333	"typewidth"	"int"	32	0	6339	NULL	true	4	NULL
6334	"count"	"bigint"	64	0	6339	NULL	true	5	NULL
6335	"distinct"	"bigint"	64	0	6339	NULL	true	6	NULL
6336	"atomwidth"	"int"	32	0	6339	NULL	true	7	NULL
6337	"reference"	"boolean"	1	0	6339	NULL	true	8	NULL
6338	"sorted"	"boolean"	1	0	6339	NULL	true	9	NULL
6377	"schema"	"clob"	0	0	6387	NULL	true	0	NULL
6378	"table"	"clob"	0	0	6387	NULL	true	1	NULL
6379	"column"	"clob"	0	0	6387	NULL	true	2	NULL
6380	"type"	"clob"	0	0	6387	NULL	true	3	NULL
6381	"count"	"bigint"	64	0	6387	NULL	true	4	NULL
6382	"columnsize"	"bigint"	64	0	6387	NULL	true	5	NULL
6383	"heapsize"	"bigint"	64	0	6387	NULL	true	6	NULL
6384	"hashes"	"bigint"	64	0	6387	NULL	true	7	NULL
6385	"imprints"	"bigint"	64	0	6387	NULL	true	8	NULL
6386	"sorted"	"boolean"	1	0	6387	NULL	true	9	NULL
6389	"schema"	"clob"	0	0	6397	NULL	true	0	NULL
6390	"table"	"clob"	0	0	6397	NULL	true	1	NULL
6391	"count"	"bigint"	64	0	6397	NULL	true	2	NULL
6392	"columnsize"	"bigint"	64	0	6397	NULL	true	3	NULL
6393	"heapsize"	"bigint"	64	0	6397	NULL	true	4	NULL
6394	"hashes"	"bigint"	64	0	6397	NULL	true	5	NULL
6395	"imprints"	"bigint"	64	0	6397	NULL	true	6	NULL
6396	"auxiliary"	"bigint"	64	0	6397	NULL	true	7	NULL
6399	"column_id"	"int"	32	0	6410	NULL	true	0	NULL
6400	"type"	"clob"	0	0	6410	NULL	true	1	NULL
6401	"width"	"int"	32	0	6410	NULL	true	2	NULL
6402	"stamp"	"timestamp"	7	0	6410	NULL	true	3	NULL
6403	"sample"	"bigint"	64	0	6410	NULL	true	4	NULL
6404	"count"	"bigint"	64	0	6410	NULL	true	5	NULL
6405	"unique"	"bigint"	64	0	6410	NULL	true	6	NULL
6406	"nils"	"bigint"	64	0	6410	NULL	true	7	NULL
6407	"minval"	"clob"	0	0	6410	NULL	true	8	NULL
6408	"maxval"	"clob"	0	0	6410	NULL	true	9	NULL
6409	"sorted"	"boolean"	1	0	6410	NULL	true	10	NULL
6500	"file_id"	"bigint"	64	0	6508	NULL	false	0	NULL
6501	"file_location"	"clob"	0	0	6508	NULL	false	1	NULL
6502	"dbschema"	"smallint"	16	0	6508	NULL	false	2	NULL
6503	"format_version"	"varchar"	7	0	6508	NULL	true	3	NULL
6504	"sorting_order"	"varchar"	10	0	6508	NULL	true	4	NULL
6505	"comments"	"clob"	0	0	6508	NULL	true	5	NULL
6510	"sn"	"clob"	0	0	6521	NULL	false	0	NULL
6511	"file_id"	"bigint"	64	0	6521	NULL	false	1	NULL
6512	"ln"	"int"	32	0	6521	NULL	true	2	NULL
6513	"as"	"int"	32	0	6521	NULL	true	3	NULL
6514	"m5"	"clob"	0	0	6521	NULL	true	4	NULL
6515	"sp"	"clob"	0	0	6521	NULL	true	5	NULL
6516	"ur"	"clob"	0	0	6521	NULL	true	6	NULL
6523	"id"	"clob"	0	0	6540	NULL	false	0	NULL
6524	"file_id"	"bigint"	64	0	6540	NULL	false	1	NULL
6525	"cn"	"clob"	0	0	6540	NULL	true	2	NULL
6526	"ds"	"clob"	0	0	6540	NULL	true	3	NULL
6527	"dt"	"timestamp"	7	0	6540	NULL	true	4	NULL
6528	"fo"	"clob"	0	0	6540	NULL	true	5	NULL
6529	"ks"	"clob"	0	0	6540	NULL	true	6	NULL
6530	"lb"	"clob"	0	0	6540	NULL	true	7	NULL
6531	"pg"	"clob"	0	0	6540	NULL	true	8	NULL
6532	"pi"	"int"	32	0	6540	NULL	true	9	NULL
6533	"pl"	"clob"	0	0	6540	NULL	true	10	NULL
6534	"pu"	"clob"	0	0	6540	NULL	true	11	NULL
6535	"sm"	"clob"	0	0	6540	NULL	true	12	NULL
6542	"id"	"clob"	0	0	6552	NULL	false	0	NULL
6543	"file_id"	"bigint"	64	0	6552	NULL	false	1	NULL
6544	"pn"	"clob"	0	0	6552	NULL	true	2	NULL
6545	"cl"	"clob"	0	0	6552	NULL	true	3	NULL
6546	"pp"	"clob"	0	0	6552	NULL	true	4	NULL
6547	"vn"	"clob"	0	0	6552	NULL	true	5	NULL
6554	"qname"	"clob"	0	0	6565	NULL	false	0	NULL
6555	"flag"	"smallint"	16	0	6565	NULL	false	1	NULL
6556	"rname"	"clob"	0	0	6565	NULL	false	2	NULL
6557	"pos"	"int"	32	0	6565	NULL	false	3	NULL
6558	"mapq"	"smallint"	16	0	6565	NULL	false	4	NULL
6559	"cigar"	"clob"	0	0	6565	NULL	false	5	NULL
6560	"rnext"	"clob"	0	0	6565	NULL	false	6	NULL
6561	"pnext"	"int"	32	0	6565	NULL	false	7	NULL
6562	"tlen"	"int"	32	0	6565	NULL	false	8	NULL
6563	"seq"	"clob"	0	0	6565	NULL	false	9	NULL
6564	"qual"	"clob"	0	0	6565	NULL	false	10	NULL
6635	"function_id"	"int"	32	0	6636	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
4987	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
4997	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5013	"db_user_info"	2000	NULL	0	true	0	0
5019	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5023	"user_role"	2000	NULL	0	true	0	0
5026	"auths"	2000	NULL	0	true	0	0
5030	"privileges"	2000	NULL	0	true	0	0
5252	"querylog_catalog"	2000	"create view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5263	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5281	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5320	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5453	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5533	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
5541	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
5589	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
5619	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6227	"keywords"	2000	NULL	0	true	0	0
6235	"table_types"	2000	NULL	0	true	0	0
6243	"dependency_types"	2000	NULL	0	true	0	0
6260	"netcdf_files"	2000	NULL	0	true	0	0
6266	"netcdf_dims"	2000	NULL	0	true	0	0
6274	"netcdf_vars"	2000	NULL	0	true	0	0
6280	"netcdf_vardim"	2000	NULL	0	true	0	0
6288	"netcdf_attrs"	2000	NULL	0	true	0	0
6327	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6339	"storagemodelinput"	2000	NULL	0	true	0	0
6387	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6397	"tablestoragemodel"	2000	"create view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n sum(columnsize) as columnsize,\n sum(heapsize) as heapsize,\n sum(hashes) as hashes,\n sum(imprints) as imprints,\n sum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6410	"statistics"	2000	NULL	0	true	0	0
6508	"files"	6452	NULL	0	true	0	0
6521	"sq"	6452	NULL	0	true	0	0
6540	"rg"	6452	NULL	0	true	0	0
6552	"pg"	6452	NULL	0	true	0	0
6565	"export"	6452	NULL	0	true	0	0
6636	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 3572 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	27	"res_0"	"oid"	63	0	0	0
2156	27	"arg_1"	"bigint"	64	0	1	1
2157	28	"res_0"	"oid"	63	0	0	0
2158	28	"arg_1"	"oid"	63	0	1	1
2159	29	"res_0"	"bigint"	64	0	0	0
2160	29	"arg_1"	"any"	0	0	1	1
2161	30	"res_0"	"bigint"	64	0	0	0
2162	30	"arg_1"	"bigint"	64	0	1	1
2163	30	"arg_2"	"int"	32	0	1	2
2164	30	"arg_3"	"any"	0	0	1	3
2165	31	"res_0"	"boolean"	1	0	0	0
2166	31	"arg_1"	"any"	0	0	1	1
2167	31	"arg_2"	"any"	0	0	1	2
2168	32	"res_0"	"boolean"	1	0	0	0
2169	32	"arg_1"	"any"	0	0	1	1
2170	32	"arg_2"	"any"	0	0	1	2
2171	33	"res_0"	"boolean"	1	0	0	0
2172	33	"arg_1"	"any"	0	0	1	1
2173	34	"res_0"	"boolean"	1	0	0	0
2174	34	"arg_1"	"any"	0	0	1	1
2175	34	"arg_2"	"any"	0	0	1	2
2176	35	"res_0"	"boolean"	1	0	0	0
2177	35	"arg_1"	"any"	0	0	1	1
2178	35	"arg_2"	"any"	0	0	1	2
2179	36	"res_0"	"boolean"	1	0	0	0
2180	36	"arg_1"	"any"	0	0	1	1
2181	36	"arg_2"	"any"	0	0	1	2
2182	37	"res_0"	"boolean"	1	0	0	0
2183	37	"arg_1"	"any"	0	0	1	1
2184	37	"arg_2"	"any"	0	0	1	2
2185	41	"res_0"	"boolean"	1	0	0	0
2186	41	"arg_1"	"any"	0	0	1	1
2187	41	"arg_2"	"any"	0	0	1	2
2188	42	"res_0"	"oid"	63	0	0	0
2189	42	"arg_1"	"any"	0	0	1	1
2190	43	"res_0"	"int"	32	0	0	0
2191	43	"arg_1"	"any"	0	0	1	1
2192	44	"res_0"	"oid"	63	0	0	0
2193	44	"arg_1"	"any"	0	0	1	1
2194	44	"arg_2"	"varchar"	0	0	1	2
2195	44	"arg_3"	"varchar"	0	0	1	3
2196	47	"res_0"	"any"	0	0	0	0
2197	47	"arg_1"	"any"	0	0	1	1
2198	47	"arg_2"	"any"	0	0	1	2
2199	48	"res_0"	"any"	0	0	0	0
2200	48	"arg_1"	"any"	0	0	1	1
2201	48	"arg_2"	"any"	0	0	1	2
2202	49	"res_0"	"any"	0	0	0	0
2203	49	"arg_1"	"boolean"	1	0	1	1
2204	49	"arg_2"	"any"	0	0	1	2
2205	49	"arg_3"	"any"	0	0	1	3
2206	66	"res_0"	"oid"	63	0	0	0
2207	66	"arg_1"	"oid"	63	0	1	1
2208	66	"arg_2"	"oid"	63	0	1	2
2209	67	"res_0"	"tinyint"	8	0	0	0
2210	67	"arg_1"	"tinyint"	8	0	1	1
2211	67	"arg_2"	"tinyint"	8	0	1	2
2212	68	"res_0"	"smallint"	16	0	0	0
2213	68	"arg_1"	"smallint"	16	0	1	1
2214	68	"arg_2"	"smallint"	16	0	1	2
2215	69	"res_0"	"int"	32	0	0	0
2216	69	"arg_1"	"int"	32	0	1	1
2217	69	"arg_2"	"int"	32	0	1	2
2218	70	"res_0"	"bigint"	64	0	0	0
2219	70	"arg_1"	"bigint"	64	0	1	1
2220	70	"arg_2"	"bigint"	64	0	1	2
2221	71	"res_0"	"decimal"	2	0	0	0
2222	71	"arg_1"	"decimal"	2	0	1	1
2223	71	"arg_2"	"decimal"	2	0	1	2
2224	72	"res_0"	"decimal"	4	0	0	0
2225	72	"arg_1"	"decimal"	4	0	1	1
2226	72	"arg_2"	"decimal"	4	0	1	2
2227	73	"res_0"	"decimal"	9	0	0	0
2228	73	"arg_1"	"decimal"	9	0	1	1
2229	73	"arg_2"	"decimal"	9	0	1	2
2230	74	"res_0"	"decimal"	19	0	0	0
2231	74	"arg_1"	"decimal"	19	0	1	1
2232	74	"arg_2"	"decimal"	19	0	1	2
2233	75	"res_0"	"real"	24	0	0	0
2234	75	"arg_1"	"real"	24	0	1	1
2235	75	"arg_2"	"real"	24	0	1	2
2236	76	"res_0"	"double"	53	0	0	0
2237	76	"arg_1"	"double"	53	0	1	1
2238	76	"arg_2"	"double"	53	0	1	2
2239	86	"res_0"	"boolean"	1	0	0	0
2240	86	"arg_1"	"any"	0	0	1	1
2241	87	"res_0"	"boolean"	1	0	0	0
2242	87	"arg_1"	"boolean"	1	0	1	1
2243	87	"arg_2"	"any"	0	0	1	2
2244	88	"res_0"	"int"	32	0	0	0
2245	88	"arg_1"	"any"	0	0	1	1
2246	88	"arg_2"	"boolean"	1	0	1	2
2247	88	"arg_3"	"boolean"	1	0	1	3
2248	89	"res_0"	"int"	32	0	0	0
2249	89	"arg_1"	"any"	0	0	1	1
2250	89	"arg_2"	"boolean"	1	0	1	2
2251	89	"arg_3"	"boolean"	1	0	1	3
2252	90	"res_0"	"int"	32	0	0	0
2253	90	"arg_1"	"any"	0	0	1	1
2254	90	"arg_2"	"boolean"	1	0	1	2
2255	90	"arg_3"	"boolean"	1	0	1	3
2256	91	"res_0"	"boolean"	1	0	0	0
2257	91	"arg_1"	"boolean"	1	0	1	1
2258	91	"arg_2"	"boolean"	1	0	1	2
2259	92	"res_0"	"boolean"	1	0	0	0
2260	92	"arg_1"	"boolean"	1	0	1	1
2261	92	"arg_2"	"boolean"	1	0	1	2
2262	93	"res_0"	"boolean"	1	0	0	0
2263	93	"arg_1"	"boolean"	1	0	1	1
2264	93	"arg_2"	"boolean"	1	0	1	2
2265	94	"res_0"	"boolean"	1	0	0	0
2266	94	"arg_1"	"boolean"	1	0	1	1
2267	95	"res_0"	"smallint"	16	0	0	0
2268	95	"arg_1"	"smallint"	16	0	1	1
2269	95	"arg_2"	"tinyint"	8	0	1	2
2270	96	"res_0"	"smallint"	16	0	0	0
2271	96	"arg_1"	"smallint"	16	0	1	1
2272	96	"arg_2"	"tinyint"	8	0	1	2
2273	97	"res_0"	"int"	32	0	0	0
2274	97	"arg_1"	"int"	32	0	1	1
2275	97	"arg_2"	"tinyint"	8	0	1	2
2276	98	"res_0"	"int"	32	0	0	0
2277	98	"arg_1"	"int"	32	0	1	1
2278	98	"arg_2"	"tinyint"	8	0	1	2
2279	99	"res_0"	"int"	32	0	0	0
2280	99	"arg_1"	"int"	32	0	1	1
2281	99	"arg_2"	"smallint"	16	0	1	2
2282	100	"res_0"	"int"	32	0	0	0
2283	100	"arg_1"	"int"	32	0	1	1
2284	100	"arg_2"	"smallint"	16	0	1	2
2285	101	"res_0"	"bigint"	64	0	0	0
2286	101	"arg_1"	"bigint"	64	0	1	1
2287	101	"arg_2"	"tinyint"	8	0	1	2
2288	102	"res_0"	"bigint"	64	0	0	0
2289	102	"arg_1"	"bigint"	64	0	1	1
2290	102	"arg_2"	"tinyint"	8	0	1	2
2291	103	"res_0"	"bigint"	64	0	0	0
2292	103	"arg_1"	"bigint"	64	0	1	1
2293	103	"arg_2"	"smallint"	16	0	1	2
2294	104	"res_0"	"bigint"	64	0	0	0
2295	104	"arg_1"	"bigint"	64	0	1	1
2296	104	"arg_2"	"smallint"	16	0	1	2
2297	105	"res_0"	"bigint"	64	0	0	0
2298	105	"arg_1"	"bigint"	64	0	1	1
2299	105	"arg_2"	"int"	32	0	1	2
2300	106	"res_0"	"bigint"	64	0	0	0
2301	106	"arg_1"	"bigint"	64	0	1	1
2302	106	"arg_2"	"int"	32	0	1	2
2303	107	"res_0"	"oid"	63	0	0	0
2304	107	"arg_1"	"oid"	63	0	1	1
2305	107	"arg_2"	"oid"	63	0	1	2
2306	108	"res_0"	"oid"	63	0	0	0
2307	108	"arg_1"	"oid"	63	0	1	1
2308	108	"arg_2"	"oid"	63	0	1	2
2309	109	"res_0"	"oid"	63	0	0	0
2310	109	"arg_1"	"oid"	63	0	1	1
2311	109	"arg_2"	"oid"	63	0	1	2
2312	110	"res_0"	"oid"	63	0	0	0
2313	110	"arg_1"	"oid"	63	0	1	1
2314	110	"arg_2"	"oid"	63	0	1	2
2315	111	"res_0"	"oid"	63	0	0	0
2316	111	"arg_1"	"oid"	63	0	1	1
2317	111	"arg_2"	"oid"	63	0	1	2
2318	112	"res_0"	"oid"	63	0	0	0
2319	112	"arg_1"	"oid"	63	0	1	1
2320	112	"arg_2"	"oid"	63	0	1	2
2321	113	"res_0"	"oid"	63	0	0	0
2322	113	"arg_1"	"oid"	63	0	1	1
2323	113	"arg_2"	"oid"	63	0	1	2
2324	114	"res_0"	"oid"	63	0	0	0
2325	114	"arg_1"	"oid"	63	0	1	1
2326	115	"res_0"	"oid"	63	0	0	0
2327	115	"arg_1"	"oid"	63	0	1	1
2328	115	"arg_2"	"int"	32	0	1	2
2329	116	"res_0"	"oid"	63	0	0	0
2330	116	"arg_1"	"oid"	63	0	1	1
2331	116	"arg_2"	"int"	32	0	1	2
2332	117	"res_0"	"oid"	63	0	0	0
2333	117	"arg_1"	"oid"	63	0	1	1
2334	118	"res_0"	"oid"	63	0	0	0
2335	118	"arg_1"	"oid"	63	0	1	1
2336	119	"res_0"	"tinyint"	8	0	0	0
2337	119	"arg_1"	"oid"	63	0	1	1
2338	120	"res_0"	"oid"	63	0	0	0
2339	120	"arg_1"	"oid"	63	0	1	1
2340	120	"arg_2"	"oid"	63	0	1	2
2341	121	"res_0"	"oid"	63	0	0	0
2342	121	"arg_1"	"oid"	63	0	1	1
2343	121	"arg_2"	"oid"	63	0	1	2
2344	122	"res_0"	"month_interval"	32	0	0	0
2345	122	"arg_1"	"month_interval"	32	0	1	1
2346	122	"arg_2"	"oid"	63	0	1	2
2347	123	"res_0"	"month_interval"	32	0	0	0
2348	123	"arg_1"	"month_interval"	32	0	1	1
2349	123	"arg_2"	"oid"	63	0	1	2
2350	124	"res_0"	"month_interval"	32	0	0	0
2351	124	"arg_1"	"month_interval"	32	0	1	1
2352	124	"arg_2"	"oid"	63	0	1	2
2353	125	"res_0"	"month_interval"	32	0	0	0
2354	125	"arg_1"	"month_interval"	32	0	1	1
2355	125	"arg_2"	"oid"	63	0	1	2
2356	126	"res_0"	"sec_interval"	13	0	0	0
2357	126	"arg_1"	"sec_interval"	13	0	1	1
2358	126	"arg_2"	"oid"	63	0	1	2
2359	127	"res_0"	"sec_interval"	13	0	0	0
2360	127	"arg_1"	"sec_interval"	13	0	1	1
2361	127	"arg_2"	"oid"	63	0	1	2
2362	128	"res_0"	"sec_interval"	13	0	0	0
2363	128	"arg_1"	"sec_interval"	13	0	1	1
2364	128	"arg_2"	"oid"	63	0	1	2
2365	129	"res_0"	"sec_interval"	13	0	0	0
2366	129	"arg_1"	"sec_interval"	13	0	1	1
2367	129	"arg_2"	"oid"	63	0	1	2
2368	130	"res_0"	"tinyint"	8	0	0	0
2369	130	"arg_1"	"tinyint"	8	0	1	1
2370	130	"arg_2"	"tinyint"	8	0	1	2
2371	131	"res_0"	"tinyint"	8	0	0	0
2372	131	"arg_1"	"tinyint"	8	0	1	1
2373	131	"arg_2"	"tinyint"	8	0	1	2
2374	132	"res_0"	"tinyint"	8	0	0	0
2375	132	"arg_1"	"tinyint"	8	0	1	1
2376	132	"arg_2"	"tinyint"	8	0	1	2
2377	133	"res_0"	"tinyint"	8	0	0	0
2378	133	"arg_1"	"tinyint"	8	0	1	1
2379	133	"arg_2"	"tinyint"	8	0	1	2
2380	134	"res_0"	"tinyint"	8	0	0	0
2381	134	"arg_1"	"tinyint"	8	0	1	1
2382	134	"arg_2"	"tinyint"	8	0	1	2
2383	135	"res_0"	"tinyint"	8	0	0	0
2384	135	"arg_1"	"tinyint"	8	0	1	1
2385	135	"arg_2"	"tinyint"	8	0	1	2
2386	136	"res_0"	"tinyint"	8	0	0	0
2387	136	"arg_1"	"tinyint"	8	0	1	1
2388	136	"arg_2"	"tinyint"	8	0	1	2
2389	137	"res_0"	"tinyint"	8	0	0	0
2390	137	"arg_1"	"tinyint"	8	0	1	1
2391	138	"res_0"	"tinyint"	8	0	0	0
2392	138	"arg_1"	"tinyint"	8	0	1	1
2393	138	"arg_2"	"int"	32	0	1	2
2394	139	"res_0"	"tinyint"	8	0	0	0
2395	139	"arg_1"	"tinyint"	8	0	1	1
2396	139	"arg_2"	"int"	32	0	1	2
2397	140	"res_0"	"tinyint"	8	0	0	0
2398	140	"arg_1"	"tinyint"	8	0	1	1
2399	141	"res_0"	"tinyint"	8	0	0	0
2400	141	"arg_1"	"tinyint"	8	0	1	1
2401	142	"res_0"	"tinyint"	8	0	0	0
2402	142	"arg_1"	"tinyint"	8	0	1	1
2403	143	"res_0"	"tinyint"	8	0	0	0
2404	143	"arg_1"	"tinyint"	8	0	1	1
2405	143	"arg_2"	"tinyint"	8	0	1	2
2406	144	"res_0"	"tinyint"	8	0	0	0
2407	144	"arg_1"	"tinyint"	8	0	1	1
2408	144	"arg_2"	"tinyint"	8	0	1	2
2409	145	"res_0"	"month_interval"	32	0	0	0
2410	145	"arg_1"	"month_interval"	32	0	1	1
2411	145	"arg_2"	"tinyint"	8	0	1	2
2412	146	"res_0"	"month_interval"	32	0	0	0
2413	146	"arg_1"	"month_interval"	32	0	1	1
2414	146	"arg_2"	"tinyint"	8	0	1	2
2415	147	"res_0"	"month_interval"	32	0	0	0
2416	147	"arg_1"	"month_interval"	32	0	1	1
2417	147	"arg_2"	"tinyint"	8	0	1	2
2418	148	"res_0"	"month_interval"	32	0	0	0
2419	148	"arg_1"	"month_interval"	32	0	1	1
2420	148	"arg_2"	"tinyint"	8	0	1	2
2421	149	"res_0"	"sec_interval"	13	0	0	0
2422	149	"arg_1"	"sec_interval"	13	0	1	1
2423	149	"arg_2"	"tinyint"	8	0	1	2
2424	150	"res_0"	"sec_interval"	13	0	0	0
2425	150	"arg_1"	"sec_interval"	13	0	1	1
2426	150	"arg_2"	"tinyint"	8	0	1	2
2427	151	"res_0"	"sec_interval"	13	0	0	0
2428	151	"arg_1"	"sec_interval"	13	0	1	1
2429	151	"arg_2"	"tinyint"	8	0	1	2
2430	152	"res_0"	"sec_interval"	13	0	0	0
2431	152	"arg_1"	"sec_interval"	13	0	1	1
2432	152	"arg_2"	"tinyint"	8	0	1	2
2433	153	"res_0"	"smallint"	16	0	0	0
2434	153	"arg_1"	"smallint"	16	0	1	1
2435	153	"arg_2"	"smallint"	16	0	1	2
2436	154	"res_0"	"smallint"	16	0	0	0
2437	154	"arg_1"	"smallint"	16	0	1	1
2438	154	"arg_2"	"smallint"	16	0	1	2
2439	155	"res_0"	"smallint"	16	0	0	0
2440	155	"arg_1"	"smallint"	16	0	1	1
2441	155	"arg_2"	"smallint"	16	0	1	2
2442	156	"res_0"	"smallint"	16	0	0	0
2443	156	"arg_1"	"smallint"	16	0	1	1
2444	156	"arg_2"	"smallint"	16	0	1	2
2445	157	"res_0"	"smallint"	16	0	0	0
2446	157	"arg_1"	"smallint"	16	0	1	1
2447	157	"arg_2"	"smallint"	16	0	1	2
2448	158	"res_0"	"smallint"	16	0	0	0
2449	158	"arg_1"	"smallint"	16	0	1	1
2450	158	"arg_2"	"smallint"	16	0	1	2
2451	159	"res_0"	"smallint"	16	0	0	0
2452	159	"arg_1"	"smallint"	16	0	1	1
2453	159	"arg_2"	"smallint"	16	0	1	2
2454	160	"res_0"	"smallint"	16	0	0	0
2455	160	"arg_1"	"smallint"	16	0	1	1
2456	161	"res_0"	"smallint"	16	0	0	0
2457	161	"arg_1"	"smallint"	16	0	1	1
2458	161	"arg_2"	"int"	32	0	1	2
2459	162	"res_0"	"smallint"	16	0	0	0
2460	162	"arg_1"	"smallint"	16	0	1	1
2461	162	"arg_2"	"int"	32	0	1	2
2462	163	"res_0"	"smallint"	16	0	0	0
2463	163	"arg_1"	"smallint"	16	0	1	1
2464	164	"res_0"	"smallint"	16	0	0	0
2465	164	"arg_1"	"smallint"	16	0	1	1
2466	165	"res_0"	"tinyint"	8	0	0	0
2467	165	"arg_1"	"smallint"	16	0	1	1
2468	166	"res_0"	"smallint"	16	0	0	0
2469	166	"arg_1"	"smallint"	16	0	1	1
2470	166	"arg_2"	"smallint"	16	0	1	2
2471	167	"res_0"	"smallint"	16	0	0	0
2472	167	"arg_1"	"smallint"	16	0	1	1
2473	167	"arg_2"	"smallint"	16	0	1	2
2474	168	"res_0"	"month_interval"	32	0	0	0
2475	168	"arg_1"	"month_interval"	32	0	1	1
2476	168	"arg_2"	"smallint"	16	0	1	2
2477	169	"res_0"	"month_interval"	32	0	0	0
2478	169	"arg_1"	"month_interval"	32	0	1	1
2479	169	"arg_2"	"smallint"	16	0	1	2
2480	170	"res_0"	"month_interval"	32	0	0	0
2481	170	"arg_1"	"month_interval"	32	0	1	1
2482	170	"arg_2"	"smallint"	16	0	1	2
2483	171	"res_0"	"month_interval"	32	0	0	0
2484	171	"arg_1"	"month_interval"	32	0	1	1
2485	171	"arg_2"	"smallint"	16	0	1	2
2486	172	"res_0"	"sec_interval"	13	0	0	0
2487	172	"arg_1"	"sec_interval"	13	0	1	1
2488	172	"arg_2"	"smallint"	16	0	1	2
2489	173	"res_0"	"sec_interval"	13	0	0	0
2490	173	"arg_1"	"sec_interval"	13	0	1	1
2491	173	"arg_2"	"smallint"	16	0	1	2
2492	174	"res_0"	"sec_interval"	13	0	0	0
2493	174	"arg_1"	"sec_interval"	13	0	1	1
2494	174	"arg_2"	"smallint"	16	0	1	2
2495	175	"res_0"	"sec_interval"	13	0	0	0
2496	175	"arg_1"	"sec_interval"	13	0	1	1
2497	175	"arg_2"	"smallint"	16	0	1	2
2498	176	"res_0"	"int"	32	0	0	0
2499	176	"arg_1"	"int"	32	0	1	1
2500	176	"arg_2"	"int"	32	0	1	2
2501	177	"res_0"	"int"	32	0	0	0
2502	177	"arg_1"	"int"	32	0	1	1
2503	177	"arg_2"	"int"	32	0	1	2
2504	178	"res_0"	"int"	32	0	0	0
2505	178	"arg_1"	"int"	32	0	1	1
2506	178	"arg_2"	"int"	32	0	1	2
2507	179	"res_0"	"int"	32	0	0	0
2508	179	"arg_1"	"int"	32	0	1	1
2509	179	"arg_2"	"int"	32	0	1	2
2510	180	"res_0"	"int"	32	0	0	0
2511	180	"arg_1"	"int"	32	0	1	1
2512	180	"arg_2"	"int"	32	0	1	2
2513	181	"res_0"	"int"	32	0	0	0
2514	181	"arg_1"	"int"	32	0	1	1
2515	181	"arg_2"	"int"	32	0	1	2
2516	182	"res_0"	"int"	32	0	0	0
2517	182	"arg_1"	"int"	32	0	1	1
2518	182	"arg_2"	"int"	32	0	1	2
2519	183	"res_0"	"int"	32	0	0	0
2520	183	"arg_1"	"int"	32	0	1	1
2521	184	"res_0"	"int"	32	0	0	0
2522	184	"arg_1"	"int"	32	0	1	1
2523	184	"arg_2"	"int"	32	0	1	2
2524	185	"res_0"	"int"	32	0	0	0
2525	185	"arg_1"	"int"	32	0	1	1
2526	185	"arg_2"	"int"	32	0	1	2
2527	186	"res_0"	"int"	32	0	0	0
2528	186	"arg_1"	"int"	32	0	1	1
2529	187	"res_0"	"int"	32	0	0	0
2530	187	"arg_1"	"int"	32	0	1	1
2531	188	"res_0"	"tinyint"	8	0	0	0
2532	188	"arg_1"	"int"	32	0	1	1
2533	189	"res_0"	"int"	32	0	0	0
2534	189	"arg_1"	"int"	32	0	1	1
2535	189	"arg_2"	"int"	32	0	1	2
2536	190	"res_0"	"int"	32	0	0	0
2537	190	"arg_1"	"int"	32	0	1	1
2538	190	"arg_2"	"int"	32	0	1	2
2539	191	"res_0"	"month_interval"	32	0	0	0
2540	191	"arg_1"	"month_interval"	32	0	1	1
2541	191	"arg_2"	"int"	32	0	1	2
2542	192	"res_0"	"month_interval"	32	0	0	0
2543	192	"arg_1"	"month_interval"	32	0	1	1
2544	192	"arg_2"	"int"	32	0	1	2
2545	193	"res_0"	"month_interval"	32	0	0	0
2546	193	"arg_1"	"month_interval"	32	0	1	1
2547	193	"arg_2"	"int"	32	0	1	2
2548	194	"res_0"	"month_interval"	32	0	0	0
2549	194	"arg_1"	"month_interval"	32	0	1	1
2550	194	"arg_2"	"int"	32	0	1	2
2551	195	"res_0"	"sec_interval"	13	0	0	0
2552	195	"arg_1"	"sec_interval"	13	0	1	1
2553	195	"arg_2"	"int"	32	0	1	2
2554	196	"res_0"	"sec_interval"	13	0	0	0
2555	196	"arg_1"	"sec_interval"	13	0	1	1
2556	196	"arg_2"	"int"	32	0	1	2
2557	197	"res_0"	"sec_interval"	13	0	0	0
2558	197	"arg_1"	"sec_interval"	13	0	1	1
2559	197	"arg_2"	"int"	32	0	1	2
2560	198	"res_0"	"sec_interval"	13	0	0	0
2561	198	"arg_1"	"sec_interval"	13	0	1	1
2562	198	"arg_2"	"int"	32	0	1	2
2563	199	"res_0"	"bigint"	64	0	0	0
2564	199	"arg_1"	"bigint"	64	0	1	1
2565	199	"arg_2"	"bigint"	64	0	1	2
2566	200	"res_0"	"bigint"	64	0	0	0
2567	200	"arg_1"	"bigint"	64	0	1	1
2568	200	"arg_2"	"bigint"	64	0	1	2
2569	201	"res_0"	"bigint"	64	0	0	0
2570	201	"arg_1"	"bigint"	64	0	1	1
2571	201	"arg_2"	"bigint"	64	0	1	2
2572	202	"res_0"	"bigint"	64	0	0	0
2573	202	"arg_1"	"bigint"	64	0	1	1
2574	202	"arg_2"	"bigint"	64	0	1	2
2575	203	"res_0"	"bigint"	64	0	0	0
2576	203	"arg_1"	"bigint"	64	0	1	1
2577	203	"arg_2"	"bigint"	64	0	1	2
2578	204	"res_0"	"bigint"	64	0	0	0
2579	204	"arg_1"	"bigint"	64	0	1	1
2580	204	"arg_2"	"bigint"	64	0	1	2
2581	205	"res_0"	"bigint"	64	0	0	0
2582	205	"arg_1"	"bigint"	64	0	1	1
2583	205	"arg_2"	"bigint"	64	0	1	2
2584	206	"res_0"	"bigint"	64	0	0	0
2585	206	"arg_1"	"bigint"	64	0	1	1
2586	207	"res_0"	"bigint"	64	0	0	0
2587	207	"arg_1"	"bigint"	64	0	1	1
2588	207	"arg_2"	"int"	32	0	1	2
2589	208	"res_0"	"bigint"	64	0	0	0
2590	208	"arg_1"	"bigint"	64	0	1	1
2591	208	"arg_2"	"int"	32	0	1	2
2592	209	"res_0"	"bigint"	64	0	0	0
2593	209	"arg_1"	"bigint"	64	0	1	1
2594	210	"res_0"	"bigint"	64	0	0	0
2595	210	"arg_1"	"bigint"	64	0	1	1
2596	211	"res_0"	"tinyint"	8	0	0	0
2597	211	"arg_1"	"bigint"	64	0	1	1
2598	212	"res_0"	"bigint"	64	0	0	0
2599	212	"arg_1"	"bigint"	64	0	1	1
2600	212	"arg_2"	"bigint"	64	0	1	2
2601	213	"res_0"	"bigint"	64	0	0	0
2602	213	"arg_1"	"bigint"	64	0	1	1
2603	213	"arg_2"	"bigint"	64	0	1	2
2604	214	"res_0"	"month_interval"	32	0	0	0
2605	214	"arg_1"	"month_interval"	32	0	1	1
2606	214	"arg_2"	"bigint"	64	0	1	2
2607	215	"res_0"	"month_interval"	32	0	0	0
2608	215	"arg_1"	"month_interval"	32	0	1	1
2609	215	"arg_2"	"bigint"	64	0	1	2
2610	216	"res_0"	"month_interval"	32	0	0	0
2611	216	"arg_1"	"month_interval"	32	0	1	1
2612	216	"arg_2"	"bigint"	64	0	1	2
2613	217	"res_0"	"month_interval"	32	0	0	0
2614	217	"arg_1"	"month_interval"	32	0	1	1
2615	217	"arg_2"	"bigint"	64	0	1	2
2616	218	"res_0"	"sec_interval"	13	0	0	0
2617	218	"arg_1"	"sec_interval"	13	0	1	1
2618	218	"arg_2"	"bigint"	64	0	1	2
2619	219	"res_0"	"sec_interval"	13	0	0	0
2620	219	"arg_1"	"sec_interval"	13	0	1	1
2621	219	"arg_2"	"bigint"	64	0	1	2
2622	220	"res_0"	"sec_interval"	13	0	0	0
2623	220	"arg_1"	"sec_interval"	13	0	1	1
2624	220	"arg_2"	"bigint"	64	0	1	2
2625	221	"res_0"	"sec_interval"	13	0	0	0
2626	221	"arg_1"	"sec_interval"	13	0	1	1
2627	221	"arg_2"	"bigint"	64	0	1	2
2628	222	"res_0"	"decimal"	2	0	0	0
2629	222	"arg_1"	"decimal"	2	0	1	1
2630	222	"arg_2"	"decimal"	2	0	1	2
2631	223	"res_0"	"decimal"	2	0	0	0
2632	223	"arg_1"	"decimal"	2	0	1	1
2633	223	"arg_2"	"decimal"	2	0	1	2
2634	224	"res_0"	"decimal"	2	0	0	0
2635	224	"arg_1"	"decimal"	2	0	1	1
2636	224	"arg_2"	"decimal"	2	0	1	2
2637	225	"res_0"	"decimal"	2	0	0	0
2638	225	"arg_1"	"decimal"	2	0	1	1
2639	225	"arg_2"	"decimal"	2	0	1	2
2640	226	"res_0"	"decimal"	2	0	0	0
2641	226	"arg_1"	"decimal"	2	0	1	1
2642	226	"arg_2"	"decimal"	2	0	1	2
2643	227	"res_0"	"decimal"	2	0	0	0
2644	227	"arg_1"	"decimal"	2	0	1	1
2645	227	"arg_2"	"decimal"	2	0	1	2
2646	228	"res_0"	"decimal"	2	0	0	0
2647	228	"arg_1"	"decimal"	2	0	1	1
2648	228	"arg_2"	"decimal"	2	0	1	2
2649	229	"res_0"	"decimal"	2	0	0	0
2650	229	"arg_1"	"decimal"	2	0	1	1
2651	230	"res_0"	"decimal"	2	0	0	0
2652	230	"arg_1"	"decimal"	2	0	1	1
2653	230	"arg_2"	"int"	32	0	1	2
2654	231	"res_0"	"decimal"	2	0	0	0
2655	231	"arg_1"	"decimal"	2	0	1	1
2656	231	"arg_2"	"int"	32	0	1	2
2657	232	"res_0"	"decimal"	2	0	0	0
2658	232	"arg_1"	"decimal"	2	0	1	1
2659	233	"res_0"	"decimal"	2	0	0	0
2660	233	"arg_1"	"decimal"	2	0	1	1
2661	234	"res_0"	"tinyint"	8	0	0	0
2662	234	"arg_1"	"decimal"	2	0	1	1
2663	235	"res_0"	"decimal"	2	0	0	0
2664	235	"arg_1"	"decimal"	2	0	1	1
2665	235	"arg_2"	"tinyint"	8	0	1	2
2666	236	"res_0"	"decimal"	2	0	0	0
2667	236	"arg_1"	"decimal"	2	0	1	1
2668	236	"arg_2"	"tinyint"	8	0	1	2
2669	237	"res_0"	"month_interval"	32	0	0	0
2670	237	"arg_1"	"month_interval"	32	0	1	1
2671	237	"arg_2"	"decimal"	2	0	1	2
2672	238	"res_0"	"month_interval"	32	0	0	0
2673	238	"arg_1"	"month_interval"	32	0	1	1
2674	238	"arg_2"	"decimal"	2	0	1	2
2675	239	"res_0"	"month_interval"	32	0	0	0
2676	239	"arg_1"	"month_interval"	32	0	1	1
2677	239	"arg_2"	"decimal"	2	0	1	2
2678	240	"res_0"	"month_interval"	32	0	0	0
2679	240	"arg_1"	"month_interval"	32	0	1	1
2680	240	"arg_2"	"decimal"	2	0	1	2
2681	241	"res_0"	"sec_interval"	13	0	0	0
2682	241	"arg_1"	"sec_interval"	13	0	1	1
2683	241	"arg_2"	"decimal"	2	0	1	2
2684	242	"res_0"	"sec_interval"	13	0	0	0
2685	242	"arg_1"	"sec_interval"	13	0	1	1
2686	242	"arg_2"	"decimal"	2	0	1	2
2687	243	"res_0"	"sec_interval"	13	0	0	0
2688	243	"arg_1"	"sec_interval"	13	0	1	1
2689	243	"arg_2"	"decimal"	2	0	1	2
2690	244	"res_0"	"sec_interval"	13	0	0	0
2691	244	"arg_1"	"sec_interval"	13	0	1	1
2692	244	"arg_2"	"decimal"	2	0	1	2
2693	245	"res_0"	"decimal"	4	0	0	0
2694	245	"arg_1"	"decimal"	4	0	1	1
2695	245	"arg_2"	"decimal"	4	0	1	2
2696	246	"res_0"	"decimal"	4	0	0	0
2697	246	"arg_1"	"decimal"	4	0	1	1
2698	246	"arg_2"	"decimal"	4	0	1	2
2699	247	"res_0"	"decimal"	4	0	0	0
2700	247	"arg_1"	"decimal"	4	0	1	1
2701	247	"arg_2"	"decimal"	4	0	1	2
2702	248	"res_0"	"decimal"	4	0	0	0
2703	248	"arg_1"	"decimal"	4	0	1	1
2704	248	"arg_2"	"decimal"	4	0	1	2
2705	249	"res_0"	"decimal"	4	0	0	0
2706	249	"arg_1"	"decimal"	4	0	1	1
2707	249	"arg_2"	"decimal"	4	0	1	2
2708	250	"res_0"	"decimal"	4	0	0	0
2709	250	"arg_1"	"decimal"	4	0	1	1
2710	250	"arg_2"	"decimal"	4	0	1	2
2711	251	"res_0"	"decimal"	4	0	0	0
2712	251	"arg_1"	"decimal"	4	0	1	1
2713	251	"arg_2"	"decimal"	4	0	1	2
2714	252	"res_0"	"decimal"	4	0	0	0
2715	252	"arg_1"	"decimal"	4	0	1	1
2716	253	"res_0"	"decimal"	4	0	0	0
2717	253	"arg_1"	"decimal"	4	0	1	1
2718	253	"arg_2"	"int"	32	0	1	2
2719	254	"res_0"	"decimal"	4	0	0	0
2720	254	"arg_1"	"decimal"	4	0	1	1
2721	254	"arg_2"	"int"	32	0	1	2
2722	255	"res_0"	"decimal"	4	0	0	0
2723	255	"arg_1"	"decimal"	4	0	1	1
2724	256	"res_0"	"decimal"	4	0	0	0
2725	256	"arg_1"	"decimal"	4	0	1	1
2726	257	"res_0"	"tinyint"	8	0	0	0
2727	257	"arg_1"	"decimal"	4	0	1	1
2728	258	"res_0"	"decimal"	4	0	0	0
2729	258	"arg_1"	"decimal"	4	0	1	1
2730	258	"arg_2"	"smallint"	16	0	1	2
2731	259	"res_0"	"decimal"	4	0	0	0
2732	259	"arg_1"	"decimal"	4	0	1	1
2733	259	"arg_2"	"smallint"	16	0	1	2
2734	260	"res_0"	"month_interval"	32	0	0	0
2735	260	"arg_1"	"month_interval"	32	0	1	1
2736	260	"arg_2"	"decimal"	4	0	1	2
2737	261	"res_0"	"month_interval"	32	0	0	0
2738	261	"arg_1"	"month_interval"	32	0	1	1
2739	261	"arg_2"	"decimal"	4	0	1	2
2740	262	"res_0"	"month_interval"	32	0	0	0
2741	262	"arg_1"	"month_interval"	32	0	1	1
2742	262	"arg_2"	"decimal"	4	0	1	2
2743	263	"res_0"	"month_interval"	32	0	0	0
2744	263	"arg_1"	"month_interval"	32	0	1	1
2745	263	"arg_2"	"decimal"	4	0	1	2
2746	264	"res_0"	"sec_interval"	13	0	0	0
2747	264	"arg_1"	"sec_interval"	13	0	1	1
2748	264	"arg_2"	"decimal"	4	0	1	2
2749	265	"res_0"	"sec_interval"	13	0	0	0
2750	265	"arg_1"	"sec_interval"	13	0	1	1
2751	265	"arg_2"	"decimal"	4	0	1	2
2752	266	"res_0"	"sec_interval"	13	0	0	0
2753	266	"arg_1"	"sec_interval"	13	0	1	1
2754	266	"arg_2"	"decimal"	4	0	1	2
2755	267	"res_0"	"sec_interval"	13	0	0	0
2756	267	"arg_1"	"sec_interval"	13	0	1	1
2757	267	"arg_2"	"decimal"	4	0	1	2
2758	268	"res_0"	"decimal"	9	0	0	0
2759	268	"arg_1"	"decimal"	9	0	1	1
2760	268	"arg_2"	"decimal"	9	0	1	2
2761	269	"res_0"	"decimal"	9	0	0	0
2762	269	"arg_1"	"decimal"	9	0	1	1
2763	269	"arg_2"	"decimal"	9	0	1	2
2764	270	"res_0"	"decimal"	9	0	0	0
2765	270	"arg_1"	"decimal"	9	0	1	1
2766	270	"arg_2"	"decimal"	9	0	1	2
2767	271	"res_0"	"decimal"	9	0	0	0
2768	271	"arg_1"	"decimal"	9	0	1	1
2769	271	"arg_2"	"decimal"	9	0	1	2
2770	272	"res_0"	"decimal"	9	0	0	0
2771	272	"arg_1"	"decimal"	9	0	1	1
2772	272	"arg_2"	"decimal"	9	0	1	2
2773	273	"res_0"	"decimal"	9	0	0	0
2774	273	"arg_1"	"decimal"	9	0	1	1
2775	273	"arg_2"	"decimal"	9	0	1	2
2776	274	"res_0"	"decimal"	9	0	0	0
2777	274	"arg_1"	"decimal"	9	0	1	1
2778	274	"arg_2"	"decimal"	9	0	1	2
2779	275	"res_0"	"decimal"	9	0	0	0
2780	275	"arg_1"	"decimal"	9	0	1	1
2781	276	"res_0"	"decimal"	9	0	0	0
2782	276	"arg_1"	"decimal"	9	0	1	1
2783	276	"arg_2"	"int"	32	0	1	2
2784	277	"res_0"	"decimal"	9	0	0	0
2785	277	"arg_1"	"decimal"	9	0	1	1
2786	277	"arg_2"	"int"	32	0	1	2
2787	278	"res_0"	"decimal"	9	0	0	0
2788	278	"arg_1"	"decimal"	9	0	1	1
2789	279	"res_0"	"decimal"	9	0	0	0
2790	279	"arg_1"	"decimal"	9	0	1	1
2791	280	"res_0"	"tinyint"	8	0	0	0
2792	280	"arg_1"	"decimal"	9	0	1	1
2793	281	"res_0"	"decimal"	9	0	0	0
2794	281	"arg_1"	"decimal"	9	0	1	1
2795	281	"arg_2"	"int"	32	0	1	2
2796	282	"res_0"	"decimal"	9	0	0	0
2797	282	"arg_1"	"decimal"	9	0	1	1
2798	282	"arg_2"	"int"	32	0	1	2
2799	283	"res_0"	"month_interval"	32	0	0	0
2800	283	"arg_1"	"month_interval"	32	0	1	1
2801	283	"arg_2"	"decimal"	9	0	1	2
2802	284	"res_0"	"month_interval"	32	0	0	0
2803	284	"arg_1"	"month_interval"	32	0	1	1
2804	284	"arg_2"	"decimal"	9	0	1	2
2805	285	"res_0"	"month_interval"	32	0	0	0
2806	285	"arg_1"	"month_interval"	32	0	1	1
2807	285	"arg_2"	"decimal"	9	0	1	2
2808	286	"res_0"	"month_interval"	32	0	0	0
2809	286	"arg_1"	"month_interval"	32	0	1	1
2810	286	"arg_2"	"decimal"	9	0	1	2
2811	287	"res_0"	"sec_interval"	13	0	0	0
2812	287	"arg_1"	"sec_interval"	13	0	1	1
2813	287	"arg_2"	"decimal"	9	0	1	2
2814	288	"res_0"	"sec_interval"	13	0	0	0
2815	288	"arg_1"	"sec_interval"	13	0	1	1
2816	288	"arg_2"	"decimal"	9	0	1	2
2817	289	"res_0"	"sec_interval"	13	0	0	0
2818	289	"arg_1"	"sec_interval"	13	0	1	1
2819	289	"arg_2"	"decimal"	9	0	1	2
2820	290	"res_0"	"sec_interval"	13	0	0	0
2821	290	"arg_1"	"sec_interval"	13	0	1	1
2822	290	"arg_2"	"decimal"	9	0	1	2
2823	291	"res_0"	"decimal"	19	0	0	0
2824	291	"arg_1"	"decimal"	19	0	1	1
2825	291	"arg_2"	"decimal"	19	0	1	2
2826	292	"res_0"	"decimal"	19	0	0	0
2827	292	"arg_1"	"decimal"	19	0	1	1
2828	292	"arg_2"	"decimal"	19	0	1	2
2829	293	"res_0"	"decimal"	19	0	0	0
2830	293	"arg_1"	"decimal"	19	0	1	1
2831	293	"arg_2"	"decimal"	19	0	1	2
2832	294	"res_0"	"decimal"	19	0	0	0
2833	294	"arg_1"	"decimal"	19	0	1	1
2834	294	"arg_2"	"decimal"	19	0	1	2
2835	295	"res_0"	"decimal"	19	0	0	0
2836	295	"arg_1"	"decimal"	19	0	1	1
2837	295	"arg_2"	"decimal"	19	0	1	2
2838	296	"res_0"	"decimal"	19	0	0	0
2839	296	"arg_1"	"decimal"	19	0	1	1
2840	296	"arg_2"	"decimal"	19	0	1	2
2841	297	"res_0"	"decimal"	19	0	0	0
2842	297	"arg_1"	"decimal"	19	0	1	1
2843	297	"arg_2"	"decimal"	19	0	1	2
2844	298	"res_0"	"decimal"	19	0	0	0
2845	298	"arg_1"	"decimal"	19	0	1	1
2846	299	"res_0"	"decimal"	19	0	0	0
2847	299	"arg_1"	"decimal"	19	0	1	1
2848	299	"arg_2"	"int"	32	0	1	2
2849	300	"res_0"	"decimal"	19	0	0	0
2850	300	"arg_1"	"decimal"	19	0	1	1
2851	300	"arg_2"	"int"	32	0	1	2
2852	301	"res_0"	"decimal"	19	0	0	0
2853	301	"arg_1"	"decimal"	19	0	1	1
2854	302	"res_0"	"decimal"	19	0	0	0
2855	302	"arg_1"	"decimal"	19	0	1	1
2856	303	"res_0"	"tinyint"	8	0	0	0
2857	303	"arg_1"	"decimal"	19	0	1	1
2858	304	"res_0"	"decimal"	19	0	0	0
2859	304	"arg_1"	"decimal"	19	0	1	1
2860	304	"arg_2"	"bigint"	64	0	1	2
2861	305	"res_0"	"decimal"	19	0	0	0
2862	305	"arg_1"	"decimal"	19	0	1	1
2863	305	"arg_2"	"bigint"	64	0	1	2
2864	306	"res_0"	"month_interval"	32	0	0	0
2865	306	"arg_1"	"month_interval"	32	0	1	1
2866	306	"arg_2"	"decimal"	19	0	1	2
2867	307	"res_0"	"month_interval"	32	0	0	0
2868	307	"arg_1"	"month_interval"	32	0	1	1
2869	307	"arg_2"	"decimal"	19	0	1	2
2870	308	"res_0"	"month_interval"	32	0	0	0
2871	308	"arg_1"	"month_interval"	32	0	1	1
2872	308	"arg_2"	"decimal"	19	0	1	2
2873	309	"res_0"	"month_interval"	32	0	0	0
2874	309	"arg_1"	"month_interval"	32	0	1	1
2875	309	"arg_2"	"decimal"	19	0	1	2
2876	310	"res_0"	"sec_interval"	13	0	0	0
2877	310	"arg_1"	"sec_interval"	13	0	1	1
2878	310	"arg_2"	"decimal"	19	0	1	2
2879	311	"res_0"	"sec_interval"	13	0	0	0
2880	311	"arg_1"	"sec_interval"	13	0	1	1
2881	311	"arg_2"	"decimal"	19	0	1	2
2882	312	"res_0"	"sec_interval"	13	0	0	0
2883	312	"arg_1"	"sec_interval"	13	0	1	1
2884	312	"arg_2"	"decimal"	19	0	1	2
2885	313	"res_0"	"sec_interval"	13	0	0	0
2886	313	"arg_1"	"sec_interval"	13	0	1	1
2887	313	"arg_2"	"decimal"	19	0	1	2
2888	314	"res_0"	"real"	24	0	0	0
2889	314	"arg_1"	"real"	24	0	1	1
2890	314	"arg_2"	"real"	24	0	1	2
2891	315	"res_0"	"real"	24	0	0	0
2892	315	"arg_1"	"real"	24	0	1	1
2893	315	"arg_2"	"real"	24	0	1	2
2894	316	"res_0"	"real"	24	0	0	0
2895	316	"arg_1"	"real"	24	0	1	1
2896	316	"arg_2"	"real"	24	0	1	2
2897	317	"res_0"	"real"	24	0	0	0
2898	317	"arg_1"	"real"	24	0	1	1
2899	317	"arg_2"	"real"	24	0	1	2
2900	318	"res_0"	"real"	24	0	0	0
2901	318	"arg_1"	"real"	24	0	1	1
2902	319	"res_0"	"real"	24	0	0	0
2903	319	"arg_1"	"real"	24	0	1	1
2904	320	"res_0"	"tinyint"	8	0	0	0
2905	320	"arg_1"	"real"	24	0	1	1
2906	321	"res_0"	"real"	24	0	0	0
2907	321	"arg_1"	"real"	24	0	1	1
2908	321	"arg_2"	"real"	24	0	1	2
2909	322	"res_0"	"real"	24	0	0	0
2910	322	"arg_1"	"real"	24	0	1	1
2911	322	"arg_2"	"real"	24	0	1	2
2912	323	"res_0"	"month_interval"	32	0	0	0
2913	323	"arg_1"	"month_interval"	32	0	1	1
2914	323	"arg_2"	"real"	24	0	1	2
2915	324	"res_0"	"month_interval"	32	0	0	0
2916	324	"arg_1"	"month_interval"	32	0	1	1
2917	324	"arg_2"	"real"	24	0	1	2
2918	325	"res_0"	"month_interval"	32	0	0	0
2919	325	"arg_1"	"month_interval"	32	0	1	1
2920	325	"arg_2"	"real"	24	0	1	2
2921	326	"res_0"	"month_interval"	32	0	0	0
2922	326	"arg_1"	"month_interval"	32	0	1	1
2923	326	"arg_2"	"real"	24	0	1	2
2924	327	"res_0"	"sec_interval"	13	0	0	0
2925	327	"arg_1"	"sec_interval"	13	0	1	1
2926	327	"arg_2"	"real"	24	0	1	2
2927	328	"res_0"	"sec_interval"	13	0	0	0
2928	328	"arg_1"	"sec_interval"	13	0	1	1
2929	328	"arg_2"	"real"	24	0	1	2
2930	329	"res_0"	"sec_interval"	13	0	0	0
2931	329	"arg_1"	"sec_interval"	13	0	1	1
2932	329	"arg_2"	"real"	24	0	1	2
2933	330	"res_0"	"sec_interval"	13	0	0	0
2934	330	"arg_1"	"sec_interval"	13	0	1	1
2935	330	"arg_2"	"real"	24	0	1	2
2936	331	"res_0"	"double"	53	0	0	0
2937	331	"arg_1"	"double"	53	0	1	1
2938	331	"arg_2"	"double"	53	0	1	2
2939	332	"res_0"	"double"	53	0	0	0
2940	332	"arg_1"	"double"	53	0	1	1
2941	332	"arg_2"	"double"	53	0	1	2
2942	333	"res_0"	"double"	53	0	0	0
2943	333	"arg_1"	"double"	53	0	1	1
2944	333	"arg_2"	"double"	53	0	1	2
2945	334	"res_0"	"double"	53	0	0	0
2946	334	"arg_1"	"double"	53	0	1	1
2947	334	"arg_2"	"double"	53	0	1	2
2948	335	"res_0"	"double"	53	0	0	0
2949	335	"arg_1"	"double"	53	0	1	1
2950	336	"res_0"	"double"	53	0	0	0
2951	336	"arg_1"	"double"	53	0	1	1
2952	337	"res_0"	"tinyint"	8	0	0	0
2953	337	"arg_1"	"double"	53	0	1	1
2954	338	"res_0"	"double"	53	0	0	0
2955	338	"arg_1"	"double"	53	0	1	1
2956	338	"arg_2"	"double"	53	0	1	2
2957	339	"res_0"	"double"	53	0	0	0
2958	339	"arg_1"	"double"	53	0	1	1
2959	339	"arg_2"	"double"	53	0	1	2
2960	340	"res_0"	"month_interval"	32	0	0	0
2961	340	"arg_1"	"month_interval"	32	0	1	1
2962	340	"arg_2"	"double"	53	0	1	2
2963	341	"res_0"	"month_interval"	32	0	0	0
2964	341	"arg_1"	"month_interval"	32	0	1	1
2965	341	"arg_2"	"double"	53	0	1	2
2966	342	"res_0"	"month_interval"	32	0	0	0
2967	342	"arg_1"	"month_interval"	32	0	1	1
2968	342	"arg_2"	"double"	53	0	1	2
2969	343	"res_0"	"month_interval"	32	0	0	0
2970	343	"arg_1"	"month_interval"	32	0	1	1
2971	343	"arg_2"	"double"	53	0	1	2
2972	344	"res_0"	"sec_interval"	13	0	0	0
2973	344	"arg_1"	"sec_interval"	13	0	1	1
2974	344	"arg_2"	"double"	53	0	1	2
2975	345	"res_0"	"sec_interval"	13	0	0	0
2976	345	"arg_1"	"sec_interval"	13	0	1	1
2977	345	"arg_2"	"double"	53	0	1	2
2978	346	"res_0"	"sec_interval"	13	0	0	0
2979	346	"arg_1"	"sec_interval"	13	0	1	1
2980	346	"arg_2"	"double"	53	0	1	2
2981	347	"res_0"	"sec_interval"	13	0	0	0
2982	347	"arg_1"	"sec_interval"	13	0	1	1
2983	347	"arg_2"	"double"	53	0	1	2
2984	348	"res_0"	"month_interval"	32	0	0	0
2985	348	"arg_1"	"month_interval"	32	0	1	1
2986	348	"arg_2"	"month_interval"	32	0	1	2
2987	349	"res_0"	"month_interval"	32	0	0	0
2988	349	"arg_1"	"month_interval"	32	0	1	1
2989	349	"arg_2"	"month_interval"	32	0	1	2
2990	350	"res_0"	"month_interval"	32	0	0	0
2991	350	"arg_1"	"month_interval"	32	0	1	1
2992	350	"arg_2"	"month_interval"	32	0	1	2
2993	351	"res_0"	"month_interval"	32	0	0	0
2994	351	"arg_1"	"month_interval"	32	0	1	1
2995	351	"arg_2"	"month_interval"	32	0	1	2
2996	352	"res_0"	"month_interval"	32	0	0	0
2997	352	"arg_1"	"month_interval"	32	0	1	1
2998	353	"res_0"	"month_interval"	32	0	0	0
2999	353	"arg_1"	"month_interval"	32	0	1	1
3000	354	"res_0"	"tinyint"	8	0	0	0
3001	354	"arg_1"	"month_interval"	32	0	1	1
3002	355	"res_0"	"month_interval"	32	0	0	0
3003	355	"arg_1"	"month_interval"	32	0	1	1
3004	355	"arg_2"	"int"	32	0	1	2
3005	356	"res_0"	"month_interval"	32	0	0	0
3006	356	"arg_1"	"month_interval"	32	0	1	1
3007	356	"arg_2"	"int"	32	0	1	2
3008	357	"res_0"	"sec_interval"	13	0	0	0
3009	357	"arg_1"	"sec_interval"	13	0	1	1
3010	357	"arg_2"	"sec_interval"	13	0	1	2
3011	358	"res_0"	"sec_interval"	13	0	0	0
3012	358	"arg_1"	"sec_interval"	13	0	1	1
3013	358	"arg_2"	"sec_interval"	13	0	1	2
3014	359	"res_0"	"sec_interval"	13	0	0	0
3015	359	"arg_1"	"sec_interval"	13	0	1	1
3016	359	"arg_2"	"sec_interval"	13	0	1	2
3017	360	"res_0"	"sec_interval"	13	0	0	0
3018	360	"arg_1"	"sec_interval"	13	0	1	1
3019	360	"arg_2"	"sec_interval"	13	0	1	2
3020	361	"res_0"	"sec_interval"	13	0	0	0
3021	361	"arg_1"	"sec_interval"	13	0	1	1
3022	362	"res_0"	"sec_interval"	13	0	0	0
3023	362	"arg_1"	"sec_interval"	13	0	1	1
3024	363	"res_0"	"tinyint"	8	0	0	0
3025	363	"arg_1"	"sec_interval"	13	0	1	1
3026	364	"res_0"	"sec_interval"	13	0	0	0
3027	364	"arg_1"	"sec_interval"	13	0	1	1
3028	364	"arg_2"	"bigint"	64	0	1	2
3029	365	"res_0"	"sec_interval"	13	0	0	0
3030	365	"arg_1"	"sec_interval"	13	0	1	1
3031	365	"arg_2"	"bigint"	64	0	1	2
3032	366	"res_0"	"decimal"	4	0	0	0
3033	366	"arg_1"	"decimal"	4	0	1	1
3034	366	"arg_2"	"tinyint"	8	0	1	2
3035	367	"res_0"	"decimal"	4	0	0	0
3036	367	"arg_1"	"tinyint"	8	0	1	1
3037	367	"arg_2"	"decimal"	4	0	1	2
3038	368	"res_0"	"decimal"	4	0	0	0
3039	368	"arg_1"	"decimal"	4	0	1	1
3040	368	"arg_2"	"decimal"	2	0	1	2
3041	369	"res_0"	"decimal"	4	0	0	0
3042	369	"arg_1"	"decimal"	2	0	1	1
3043	369	"arg_2"	"decimal"	4	0	1	2
3044	370	"res_0"	"decimal"	9	0	0	0
3045	370	"arg_1"	"decimal"	9	0	1	1
3046	370	"arg_2"	"tinyint"	8	0	1	2
3047	371	"res_0"	"decimal"	9	0	0	0
3048	371	"arg_1"	"tinyint"	8	0	1	1
3049	371	"arg_2"	"decimal"	9	0	1	2
3050	372	"res_0"	"decimal"	9	0	0	0
3051	372	"arg_1"	"decimal"	9	0	1	1
3052	372	"arg_2"	"smallint"	16	0	1	2
3053	373	"res_0"	"decimal"	9	0	0	0
3054	373	"arg_1"	"smallint"	16	0	1	1
3055	373	"arg_2"	"decimal"	9	0	1	2
3056	374	"res_0"	"decimal"	9	0	0	0
3057	374	"arg_1"	"decimal"	9	0	1	1
3058	374	"arg_2"	"decimal"	2	0	1	2
3059	375	"res_0"	"decimal"	9	0	0	0
3060	375	"arg_1"	"decimal"	2	0	1	1
3061	375	"arg_2"	"decimal"	9	0	1	2
3062	376	"res_0"	"decimal"	9	0	0	0
3063	376	"arg_1"	"decimal"	9	0	1	1
3064	376	"arg_2"	"decimal"	4	0	1	2
3065	377	"res_0"	"decimal"	9	0	0	0
3066	377	"arg_1"	"decimal"	4	0	1	1
3067	377	"arg_2"	"decimal"	9	0	1	2
3068	378	"res_0"	"decimal"	19	0	0	0
3069	378	"arg_1"	"decimal"	19	0	1	1
3070	378	"arg_2"	"tinyint"	8	0	1	2
3071	379	"res_0"	"decimal"	19	0	0	0
3072	379	"arg_1"	"tinyint"	8	0	1	1
3073	379	"arg_2"	"decimal"	19	0	1	2
3074	380	"res_0"	"decimal"	19	0	0	0
3075	380	"arg_1"	"decimal"	19	0	1	1
3076	380	"arg_2"	"smallint"	16	0	1	2
3077	381	"res_0"	"decimal"	19	0	0	0
3078	381	"arg_1"	"smallint"	16	0	1	1
3079	381	"arg_2"	"decimal"	19	0	1	2
3080	382	"res_0"	"decimal"	19	0	0	0
3081	382	"arg_1"	"decimal"	19	0	1	1
3082	382	"arg_2"	"int"	32	0	1	2
3083	383	"res_0"	"decimal"	19	0	0	0
3084	383	"arg_1"	"int"	32	0	1	1
3085	383	"arg_2"	"decimal"	19	0	1	2
3086	384	"res_0"	"decimal"	19	0	0	0
3087	384	"arg_1"	"decimal"	19	0	1	1
3088	384	"arg_2"	"decimal"	2	0	1	2
3089	385	"res_0"	"decimal"	19	0	0	0
3090	385	"arg_1"	"decimal"	2	0	1	1
3091	385	"arg_2"	"decimal"	19	0	1	2
3092	386	"res_0"	"decimal"	19	0	0	0
3093	386	"arg_1"	"decimal"	19	0	1	1
3094	386	"arg_2"	"decimal"	4	0	1	2
3095	387	"res_0"	"decimal"	19	0	0	0
3096	387	"arg_1"	"decimal"	4	0	1	1
3097	387	"arg_2"	"decimal"	19	0	1	2
3098	388	"res_0"	"decimal"	19	0	0	0
3099	388	"arg_1"	"decimal"	19	0	1	1
3100	388	"arg_2"	"decimal"	9	0	1	2
3101	389	"res_0"	"decimal"	19	0	0	0
3102	389	"arg_1"	"decimal"	9	0	1	1
3103	389	"arg_2"	"decimal"	19	0	1	2
3104	390	"res_0"	"decimal"	2	0	0	0
3105	390	"arg_1"	"decimal"	2	0	1	1
3106	390	"arg_2"	"tinyint"	8	0	1	2
3107	391	"res_0"	"decimal"	4	0	0	0
3108	391	"arg_1"	"decimal"	4	0	1	1
3109	391	"arg_2"	"tinyint"	8	0	1	2
3110	392	"res_0"	"decimal"	9	0	0	0
3111	392	"arg_1"	"decimal"	9	0	1	1
3112	392	"arg_2"	"tinyint"	8	0	1	2
3113	393	"res_0"	"decimal"	19	0	0	0
3114	393	"arg_1"	"decimal"	19	0	1	1
3115	393	"arg_2"	"tinyint"	8	0	1	2
3116	394	"res_0"	"real"	24	0	0	0
3117	394	"arg_1"	"real"	24	0	1	1
3118	394	"arg_2"	"tinyint"	8	0	1	2
3119	395	"res_0"	"double"	53	0	0	0
3120	395	"arg_1"	"double"	53	0	1	1
3121	395	"arg_2"	"tinyint"	8	0	1	2
3122	396	"res_0"	"oid"	63	0	0	0
3123	396	"arg_1"	"oid"	63	0	1	1
3124	396	"arg_2"	"oid"	63	0	1	2
3125	397	"res_0"	"oid"	63	0	0	0
3126	397	"arg_1"	"tinyint"	8	0	1	1
3127	397	"arg_2"	"oid"	63	0	1	2
3128	398	"res_0"	"oid"	63	0	0	0
3129	398	"arg_1"	"smallint"	16	0	1	1
3130	398	"arg_2"	"oid"	63	0	1	2
3131	399	"res_0"	"oid"	63	0	0	0
3132	399	"arg_1"	"int"	32	0	1	1
3133	399	"arg_2"	"oid"	63	0	1	2
3134	400	"res_0"	"oid"	63	0	0	0
3135	400	"arg_1"	"bigint"	64	0	1	1
3136	400	"arg_2"	"oid"	63	0	1	2
3137	401	"res_0"	"oid"	63	0	0	0
3138	401	"arg_1"	"decimal"	2	0	1	1
3139	401	"arg_2"	"oid"	63	0	1	2
3140	402	"res_0"	"oid"	63	0	0	0
3141	402	"arg_1"	"decimal"	4	0	1	1
3142	402	"arg_2"	"oid"	63	0	1	2
3143	403	"res_0"	"oid"	63	0	0	0
3144	403	"arg_1"	"decimal"	9	0	1	1
3145	403	"arg_2"	"oid"	63	0	1	2
3146	404	"res_0"	"oid"	63	0	0	0
3147	404	"arg_1"	"decimal"	19	0	1	1
3148	404	"arg_2"	"oid"	63	0	1	2
3149	405	"res_0"	"oid"	63	0	0	0
3150	405	"arg_1"	"real"	24	0	1	1
3151	405	"arg_2"	"oid"	63	0	1	2
3152	406	"res_0"	"oid"	63	0	0	0
3153	406	"arg_1"	"double"	53	0	1	1
3154	406	"arg_2"	"oid"	63	0	1	2
3155	407	"res_0"	"oid"	63	0	0	0
3156	407	"arg_1"	"month_interval"	32	0	1	1
3157	407	"arg_2"	"oid"	63	0	1	2
3158	408	"res_0"	"oid"	63	0	0	0
3159	408	"arg_1"	"sec_interval"	13	0	1	1
3160	408	"arg_2"	"oid"	63	0	1	2
3161	409	"res_0"	"oid"	63	0	0	0
3162	409	"arg_1"	"time"	7	0	1	1
3163	409	"arg_2"	"oid"	63	0	1	2
3164	410	"res_0"	"oid"	63	0	0	0
3165	410	"arg_1"	"timetz"	7	0	1	1
3166	410	"arg_2"	"oid"	63	0	1	2
3167	411	"res_0"	"oid"	63	0	0	0
3168	411	"arg_1"	"date"	0	0	1	1
3169	411	"arg_2"	"oid"	63	0	1	2
3170	412	"res_0"	"oid"	63	0	0	0
3171	412	"arg_1"	"timestamp"	7	0	1	1
3172	412	"arg_2"	"oid"	63	0	1	2
3173	413	"res_0"	"oid"	63	0	0	0
3174	413	"arg_1"	"timestamptz"	7	0	1	1
3175	413	"arg_2"	"oid"	63	0	1	2
3176	414	"res_0"	"oid"	63	0	0	0
3177	414	"arg_1"	"blob"	0	0	1	1
3178	414	"arg_2"	"oid"	63	0	1	2
3179	415	"res_0"	"tinyint"	8	0	0	0
3180	415	"arg_1"	"oid"	63	0	1	1
3181	415	"arg_2"	"tinyint"	8	0	1	2
3182	416	"res_0"	"tinyint"	8	0	0	0
3183	416	"arg_1"	"tinyint"	8	0	1	1
3184	416	"arg_2"	"tinyint"	8	0	1	2
3185	417	"res_0"	"tinyint"	8	0	0	0
3186	417	"arg_1"	"smallint"	16	0	1	1
3187	417	"arg_2"	"tinyint"	8	0	1	2
3188	418	"res_0"	"tinyint"	8	0	0	0
3189	418	"arg_1"	"int"	32	0	1	1
3190	418	"arg_2"	"tinyint"	8	0	1	2
3191	419	"res_0"	"tinyint"	8	0	0	0
3192	419	"arg_1"	"bigint"	64	0	1	1
3193	419	"arg_2"	"tinyint"	8	0	1	2
3194	420	"res_0"	"tinyint"	8	0	0	0
3195	420	"arg_1"	"decimal"	2	0	1	1
3196	420	"arg_2"	"tinyint"	8	0	1	2
3197	421	"res_0"	"tinyint"	8	0	0	0
3198	421	"arg_1"	"decimal"	4	0	1	1
3199	421	"arg_2"	"tinyint"	8	0	1	2
3200	422	"res_0"	"tinyint"	8	0	0	0
3201	422	"arg_1"	"decimal"	9	0	1	1
3202	422	"arg_2"	"tinyint"	8	0	1	2
3203	423	"res_0"	"tinyint"	8	0	0	0
3204	423	"arg_1"	"decimal"	19	0	1	1
3205	423	"arg_2"	"tinyint"	8	0	1	2
3206	424	"res_0"	"tinyint"	8	0	0	0
3207	424	"arg_1"	"real"	24	0	1	1
3208	424	"arg_2"	"tinyint"	8	0	1	2
3209	425	"res_0"	"tinyint"	8	0	0	0
3210	425	"arg_1"	"double"	53	0	1	1
3211	425	"arg_2"	"tinyint"	8	0	1	2
3212	426	"res_0"	"tinyint"	8	0	0	0
3213	426	"arg_1"	"month_interval"	32	0	1	1
3214	426	"arg_2"	"tinyint"	8	0	1	2
3215	427	"res_0"	"tinyint"	8	0	0	0
3216	427	"arg_1"	"sec_interval"	13	0	1	1
3217	427	"arg_2"	"tinyint"	8	0	1	2
3218	428	"res_0"	"tinyint"	8	0	0	0
3219	428	"arg_1"	"time"	7	0	1	1
3220	428	"arg_2"	"tinyint"	8	0	1	2
3221	429	"res_0"	"tinyint"	8	0	0	0
3222	429	"arg_1"	"timetz"	7	0	1	1
3223	429	"arg_2"	"tinyint"	8	0	1	2
3224	430	"res_0"	"tinyint"	8	0	0	0
3225	430	"arg_1"	"date"	0	0	1	1
3226	430	"arg_2"	"tinyint"	8	0	1	2
3227	431	"res_0"	"tinyint"	8	0	0	0
3228	431	"arg_1"	"timestamp"	7	0	1	1
3229	431	"arg_2"	"tinyint"	8	0	1	2
3230	432	"res_0"	"tinyint"	8	0	0	0
3231	432	"arg_1"	"timestamptz"	7	0	1	1
3232	432	"arg_2"	"tinyint"	8	0	1	2
3233	433	"res_0"	"tinyint"	8	0	0	0
3234	433	"arg_1"	"blob"	0	0	1	1
3235	433	"arg_2"	"tinyint"	8	0	1	2
3236	434	"res_0"	"smallint"	16	0	0	0
3237	434	"arg_1"	"oid"	63	0	1	1
3238	434	"arg_2"	"smallint"	16	0	1	2
3239	435	"res_0"	"smallint"	16	0	0	0
3240	435	"arg_1"	"tinyint"	8	0	1	1
3241	435	"arg_2"	"smallint"	16	0	1	2
3242	436	"res_0"	"smallint"	16	0	0	0
3243	436	"arg_1"	"smallint"	16	0	1	1
3244	436	"arg_2"	"smallint"	16	0	1	2
3245	437	"res_0"	"smallint"	16	0	0	0
3246	437	"arg_1"	"int"	32	0	1	1
3247	437	"arg_2"	"smallint"	16	0	1	2
3248	438	"res_0"	"smallint"	16	0	0	0
3249	438	"arg_1"	"bigint"	64	0	1	1
3250	438	"arg_2"	"smallint"	16	0	1	2
3251	439	"res_0"	"smallint"	16	0	0	0
3252	439	"arg_1"	"decimal"	2	0	1	1
3253	439	"arg_2"	"smallint"	16	0	1	2
3254	440	"res_0"	"smallint"	16	0	0	0
3255	440	"arg_1"	"decimal"	4	0	1	1
3256	440	"arg_2"	"smallint"	16	0	1	2
3257	441	"res_0"	"smallint"	16	0	0	0
3258	441	"arg_1"	"decimal"	9	0	1	1
3259	441	"arg_2"	"smallint"	16	0	1	2
3260	442	"res_0"	"smallint"	16	0	0	0
3261	442	"arg_1"	"decimal"	19	0	1	1
3262	442	"arg_2"	"smallint"	16	0	1	2
3263	443	"res_0"	"smallint"	16	0	0	0
3264	443	"arg_1"	"real"	24	0	1	1
3265	443	"arg_2"	"smallint"	16	0	1	2
3266	444	"res_0"	"smallint"	16	0	0	0
3267	444	"arg_1"	"double"	53	0	1	1
3268	444	"arg_2"	"smallint"	16	0	1	2
3269	445	"res_0"	"smallint"	16	0	0	0
3270	445	"arg_1"	"month_interval"	32	0	1	1
3271	445	"arg_2"	"smallint"	16	0	1	2
3272	446	"res_0"	"smallint"	16	0	0	0
3273	446	"arg_1"	"sec_interval"	13	0	1	1
3274	446	"arg_2"	"smallint"	16	0	1	2
3275	447	"res_0"	"smallint"	16	0	0	0
3276	447	"arg_1"	"time"	7	0	1	1
3277	447	"arg_2"	"smallint"	16	0	1	2
3278	448	"res_0"	"smallint"	16	0	0	0
3279	448	"arg_1"	"timetz"	7	0	1	1
3280	448	"arg_2"	"smallint"	16	0	1	2
3281	449	"res_0"	"smallint"	16	0	0	0
3282	449	"arg_1"	"date"	0	0	1	1
3283	449	"arg_2"	"smallint"	16	0	1	2
3284	450	"res_0"	"smallint"	16	0	0	0
3285	450	"arg_1"	"timestamp"	7	0	1	1
3286	450	"arg_2"	"smallint"	16	0	1	2
3287	451	"res_0"	"smallint"	16	0	0	0
3288	451	"arg_1"	"timestamptz"	7	0	1	1
3289	451	"arg_2"	"smallint"	16	0	1	2
3290	452	"res_0"	"smallint"	16	0	0	0
3291	452	"arg_1"	"blob"	0	0	1	1
3292	452	"arg_2"	"smallint"	16	0	1	2
3293	453	"res_0"	"int"	32	0	0	0
3294	453	"arg_1"	"oid"	63	0	1	1
3295	453	"arg_2"	"int"	32	0	1	2
3296	454	"res_0"	"int"	32	0	0	0
3297	454	"arg_1"	"tinyint"	8	0	1	1
3298	454	"arg_2"	"int"	32	0	1	2
3299	455	"res_0"	"int"	32	0	0	0
3300	455	"arg_1"	"smallint"	16	0	1	1
3301	455	"arg_2"	"int"	32	0	1	2
3302	456	"res_0"	"int"	32	0	0	0
3303	456	"arg_1"	"int"	32	0	1	1
3304	456	"arg_2"	"int"	32	0	1	2
3305	457	"res_0"	"int"	32	0	0	0
3306	457	"arg_1"	"bigint"	64	0	1	1
3307	457	"arg_2"	"int"	32	0	1	2
3308	458	"res_0"	"int"	32	0	0	0
3309	458	"arg_1"	"decimal"	2	0	1	1
3310	458	"arg_2"	"int"	32	0	1	2
3311	459	"res_0"	"int"	32	0	0	0
3312	459	"arg_1"	"decimal"	4	0	1	1
3313	459	"arg_2"	"int"	32	0	1	2
3314	460	"res_0"	"int"	32	0	0	0
3315	460	"arg_1"	"decimal"	9	0	1	1
3316	460	"arg_2"	"int"	32	0	1	2
3317	461	"res_0"	"int"	32	0	0	0
3318	461	"arg_1"	"decimal"	19	0	1	1
3319	461	"arg_2"	"int"	32	0	1	2
3320	462	"res_0"	"int"	32	0	0	0
3321	462	"arg_1"	"real"	24	0	1	1
3322	462	"arg_2"	"int"	32	0	1	2
3323	463	"res_0"	"int"	32	0	0	0
3324	463	"arg_1"	"double"	53	0	1	1
3325	463	"arg_2"	"int"	32	0	1	2
3326	464	"res_0"	"int"	32	0	0	0
3327	464	"arg_1"	"month_interval"	32	0	1	1
3328	464	"arg_2"	"int"	32	0	1	2
3329	465	"res_0"	"int"	32	0	0	0
3330	465	"arg_1"	"sec_interval"	13	0	1	1
3331	465	"arg_2"	"int"	32	0	1	2
3332	466	"res_0"	"int"	32	0	0	0
3333	466	"arg_1"	"time"	7	0	1	1
3334	466	"arg_2"	"int"	32	0	1	2
3335	467	"res_0"	"int"	32	0	0	0
3336	467	"arg_1"	"timetz"	7	0	1	1
3337	467	"arg_2"	"int"	32	0	1	2
3338	468	"res_0"	"int"	32	0	0	0
3339	468	"arg_1"	"date"	0	0	1	1
3340	468	"arg_2"	"int"	32	0	1	2
3341	469	"res_0"	"int"	32	0	0	0
3342	469	"arg_1"	"timestamp"	7	0	1	1
3343	469	"arg_2"	"int"	32	0	1	2
3344	470	"res_0"	"int"	32	0	0	0
3345	470	"arg_1"	"timestamptz"	7	0	1	1
3346	470	"arg_2"	"int"	32	0	1	2
3347	471	"res_0"	"int"	32	0	0	0
3348	471	"arg_1"	"blob"	0	0	1	1
3349	471	"arg_2"	"int"	32	0	1	2
3350	472	"res_0"	"bigint"	64	0	0	0
3351	472	"arg_1"	"oid"	63	0	1	1
3352	472	"arg_2"	"bigint"	64	0	1	2
3353	473	"res_0"	"bigint"	64	0	0	0
3354	473	"arg_1"	"tinyint"	8	0	1	1
3355	473	"arg_2"	"bigint"	64	0	1	2
3356	474	"res_0"	"bigint"	64	0	0	0
3357	474	"arg_1"	"smallint"	16	0	1	1
3358	474	"arg_2"	"bigint"	64	0	1	2
3359	475	"res_0"	"bigint"	64	0	0	0
3360	475	"arg_1"	"int"	32	0	1	1
3361	475	"arg_2"	"bigint"	64	0	1	2
3362	476	"res_0"	"bigint"	64	0	0	0
3363	476	"arg_1"	"bigint"	64	0	1	1
3364	476	"arg_2"	"bigint"	64	0	1	2
3365	477	"res_0"	"bigint"	64	0	0	0
3366	477	"arg_1"	"decimal"	2	0	1	1
3367	477	"arg_2"	"bigint"	64	0	1	2
3368	478	"res_0"	"bigint"	64	0	0	0
3369	478	"arg_1"	"decimal"	4	0	1	1
3370	478	"arg_2"	"bigint"	64	0	1	2
3371	479	"res_0"	"bigint"	64	0	0	0
3372	479	"arg_1"	"decimal"	9	0	1	1
3373	479	"arg_2"	"bigint"	64	0	1	2
3374	480	"res_0"	"bigint"	64	0	0	0
3375	480	"arg_1"	"decimal"	19	0	1	1
3376	480	"arg_2"	"bigint"	64	0	1	2
3377	481	"res_0"	"bigint"	64	0	0	0
3378	481	"arg_1"	"real"	24	0	1	1
3379	481	"arg_2"	"bigint"	64	0	1	2
3380	482	"res_0"	"bigint"	64	0	0	0
3381	482	"arg_1"	"double"	53	0	1	1
3382	482	"arg_2"	"bigint"	64	0	1	2
3383	483	"res_0"	"bigint"	64	0	0	0
3384	483	"arg_1"	"month_interval"	32	0	1	1
3385	483	"arg_2"	"bigint"	64	0	1	2
3386	484	"res_0"	"bigint"	64	0	0	0
3387	484	"arg_1"	"sec_interval"	13	0	1	1
3388	484	"arg_2"	"bigint"	64	0	1	2
3389	485	"res_0"	"bigint"	64	0	0	0
3390	485	"arg_1"	"time"	7	0	1	1
3391	485	"arg_2"	"bigint"	64	0	1	2
3392	486	"res_0"	"bigint"	64	0	0	0
3393	486	"arg_1"	"timetz"	7	0	1	1
3394	486	"arg_2"	"bigint"	64	0	1	2
3395	487	"res_0"	"bigint"	64	0	0	0
3396	487	"arg_1"	"date"	0	0	1	1
3397	487	"arg_2"	"bigint"	64	0	1	2
3398	488	"res_0"	"bigint"	64	0	0	0
3399	488	"arg_1"	"timestamp"	7	0	1	1
3400	488	"arg_2"	"bigint"	64	0	1	2
3401	489	"res_0"	"bigint"	64	0	0	0
3402	489	"arg_1"	"timestamptz"	7	0	1	1
3403	489	"arg_2"	"bigint"	64	0	1	2
3404	490	"res_0"	"bigint"	64	0	0	0
3405	490	"arg_1"	"blob"	0	0	1	1
3406	490	"arg_2"	"bigint"	64	0	1	2
3407	491	"res_0"	"decimal"	2	0	0	0
3408	491	"arg_1"	"oid"	63	0	1	1
3409	491	"arg_2"	"decimal"	2	0	1	2
3410	492	"res_0"	"decimal"	2	0	0	0
3411	492	"arg_1"	"tinyint"	8	0	1	1
3412	492	"arg_2"	"decimal"	2	0	1	2
3413	493	"res_0"	"decimal"	2	0	0	0
3414	493	"arg_1"	"smallint"	16	0	1	1
3415	493	"arg_2"	"decimal"	2	0	1	2
3416	494	"res_0"	"decimal"	2	0	0	0
3417	494	"arg_1"	"int"	32	0	1	1
3418	494	"arg_2"	"decimal"	2	0	1	2
3419	495	"res_0"	"decimal"	2	0	0	0
3420	495	"arg_1"	"bigint"	64	0	1	1
3421	495	"arg_2"	"decimal"	2	0	1	2
3422	496	"res_0"	"decimal"	2	0	0	0
3423	496	"arg_1"	"decimal"	2	0	1	1
3424	496	"arg_2"	"decimal"	2	0	1	2
3425	497	"res_0"	"decimal"	2	0	0	0
3426	497	"arg_1"	"decimal"	4	0	1	1
3427	497	"arg_2"	"decimal"	2	0	1	2
3428	498	"res_0"	"decimal"	2	0	0	0
3429	498	"arg_1"	"decimal"	9	0	1	1
3430	498	"arg_2"	"decimal"	2	0	1	2
3431	499	"res_0"	"decimal"	2	0	0	0
3432	499	"arg_1"	"decimal"	19	0	1	1
3433	499	"arg_2"	"decimal"	2	0	1	2
3434	500	"res_0"	"decimal"	2	0	0	0
3435	500	"arg_1"	"real"	24	0	1	1
3436	500	"arg_2"	"decimal"	2	0	1	2
3437	501	"res_0"	"decimal"	2	0	0	0
3438	501	"arg_1"	"double"	53	0	1	1
3439	501	"arg_2"	"decimal"	2	0	1	2
3440	502	"res_0"	"decimal"	2	0	0	0
3441	502	"arg_1"	"month_interval"	32	0	1	1
3442	502	"arg_2"	"decimal"	2	0	1	2
3443	503	"res_0"	"decimal"	2	0	0	0
3444	503	"arg_1"	"sec_interval"	13	0	1	1
3445	503	"arg_2"	"decimal"	2	0	1	2
3446	504	"res_0"	"decimal"	2	0	0	0
3447	504	"arg_1"	"time"	7	0	1	1
3448	504	"arg_2"	"decimal"	2	0	1	2
3449	505	"res_0"	"decimal"	2	0	0	0
3450	505	"arg_1"	"timetz"	7	0	1	1
3451	505	"arg_2"	"decimal"	2	0	1	2
3452	506	"res_0"	"decimal"	2	0	0	0
3453	506	"arg_1"	"date"	0	0	1	1
3454	506	"arg_2"	"decimal"	2	0	1	2
3455	507	"res_0"	"decimal"	2	0	0	0
3456	507	"arg_1"	"timestamp"	7	0	1	1
3457	507	"arg_2"	"decimal"	2	0	1	2
3458	508	"res_0"	"decimal"	2	0	0	0
3459	508	"arg_1"	"timestamptz"	7	0	1	1
3460	508	"arg_2"	"decimal"	2	0	1	2
3461	509	"res_0"	"decimal"	2	0	0	0
3462	509	"arg_1"	"blob"	0	0	1	1
3463	509	"arg_2"	"decimal"	2	0	1	2
3464	510	"res_0"	"decimal"	4	0	0	0
3465	510	"arg_1"	"oid"	63	0	1	1
3466	510	"arg_2"	"decimal"	4	0	1	2
3467	511	"res_0"	"decimal"	4	0	0	0
3468	511	"arg_1"	"tinyint"	8	0	1	1
3469	511	"arg_2"	"decimal"	4	0	1	2
3470	512	"res_0"	"decimal"	4	0	0	0
3471	512	"arg_1"	"smallint"	16	0	1	1
3472	512	"arg_2"	"decimal"	4	0	1	2
3473	513	"res_0"	"decimal"	4	0	0	0
3474	513	"arg_1"	"int"	32	0	1	1
3475	513	"arg_2"	"decimal"	4	0	1	2
3476	514	"res_0"	"decimal"	4	0	0	0
3477	514	"arg_1"	"bigint"	64	0	1	1
3478	514	"arg_2"	"decimal"	4	0	1	2
3479	515	"res_0"	"decimal"	4	0	0	0
3480	515	"arg_1"	"decimal"	2	0	1	1
3481	515	"arg_2"	"decimal"	4	0	1	2
3482	516	"res_0"	"decimal"	4	0	0	0
3483	516	"arg_1"	"decimal"	4	0	1	1
3484	516	"arg_2"	"decimal"	4	0	1	2
3485	517	"res_0"	"decimal"	4	0	0	0
3486	517	"arg_1"	"decimal"	9	0	1	1
3487	517	"arg_2"	"decimal"	4	0	1	2
3488	518	"res_0"	"decimal"	4	0	0	0
3489	518	"arg_1"	"decimal"	19	0	1	1
3490	518	"arg_2"	"decimal"	4	0	1	2
3491	519	"res_0"	"decimal"	4	0	0	0
3492	519	"arg_1"	"real"	24	0	1	1
3493	519	"arg_2"	"decimal"	4	0	1	2
3494	520	"res_0"	"decimal"	4	0	0	0
3495	520	"arg_1"	"double"	53	0	1	1
3496	520	"arg_2"	"decimal"	4	0	1	2
3497	521	"res_0"	"decimal"	4	0	0	0
3498	521	"arg_1"	"month_interval"	32	0	1	1
3499	521	"arg_2"	"decimal"	4	0	1	2
3500	522	"res_0"	"decimal"	4	0	0	0
3501	522	"arg_1"	"sec_interval"	13	0	1	1
3502	522	"arg_2"	"decimal"	4	0	1	2
3503	523	"res_0"	"decimal"	4	0	0	0
3504	523	"arg_1"	"time"	7	0	1	1
3505	523	"arg_2"	"decimal"	4	0	1	2
3506	524	"res_0"	"decimal"	4	0	0	0
3507	524	"arg_1"	"timetz"	7	0	1	1
3508	524	"arg_2"	"decimal"	4	0	1	2
3509	525	"res_0"	"decimal"	4	0	0	0
3510	525	"arg_1"	"date"	0	0	1	1
3511	525	"arg_2"	"decimal"	4	0	1	2
3512	526	"res_0"	"decimal"	4	0	0	0
3513	526	"arg_1"	"timestamp"	7	0	1	1
3514	526	"arg_2"	"decimal"	4	0	1	2
3515	527	"res_0"	"decimal"	4	0	0	0
3516	527	"arg_1"	"timestamptz"	7	0	1	1
3517	527	"arg_2"	"decimal"	4	0	1	2
3518	528	"res_0"	"decimal"	4	0	0	0
3519	528	"arg_1"	"blob"	0	0	1	1
3520	528	"arg_2"	"decimal"	4	0	1	2
3521	529	"res_0"	"decimal"	9	0	0	0
3522	529	"arg_1"	"oid"	63	0	1	1
3523	529	"arg_2"	"decimal"	9	0	1	2
3524	530	"res_0"	"decimal"	9	0	0	0
3525	530	"arg_1"	"tinyint"	8	0	1	1
3526	530	"arg_2"	"decimal"	9	0	1	2
3527	531	"res_0"	"decimal"	9	0	0	0
3528	531	"arg_1"	"smallint"	16	0	1	1
3529	531	"arg_2"	"decimal"	9	0	1	2
3530	532	"res_0"	"decimal"	9	0	0	0
3531	532	"arg_1"	"int"	32	0	1	1
3532	532	"arg_2"	"decimal"	9	0	1	2
3533	533	"res_0"	"decimal"	9	0	0	0
3534	533	"arg_1"	"bigint"	64	0	1	1
3535	533	"arg_2"	"decimal"	9	0	1	2
3536	534	"res_0"	"decimal"	9	0	0	0
3537	534	"arg_1"	"decimal"	2	0	1	1
3538	534	"arg_2"	"decimal"	9	0	1	2
3539	535	"res_0"	"decimal"	9	0	0	0
3540	535	"arg_1"	"decimal"	4	0	1	1
3541	535	"arg_2"	"decimal"	9	0	1	2
3542	536	"res_0"	"decimal"	9	0	0	0
3543	536	"arg_1"	"decimal"	9	0	1	1
3544	536	"arg_2"	"decimal"	9	0	1	2
3545	537	"res_0"	"decimal"	9	0	0	0
3546	537	"arg_1"	"decimal"	19	0	1	1
3547	537	"arg_2"	"decimal"	9	0	1	2
3548	538	"res_0"	"decimal"	9	0	0	0
3549	538	"arg_1"	"real"	24	0	1	1
3550	538	"arg_2"	"decimal"	9	0	1	2
3551	539	"res_0"	"decimal"	9	0	0	0
3552	539	"arg_1"	"double"	53	0	1	1
3553	539	"arg_2"	"decimal"	9	0	1	2
3554	540	"res_0"	"decimal"	9	0	0	0
3555	540	"arg_1"	"month_interval"	32	0	1	1
3556	540	"arg_2"	"decimal"	9	0	1	2
3557	541	"res_0"	"decimal"	9	0	0	0
3558	541	"arg_1"	"sec_interval"	13	0	1	1
3559	541	"arg_2"	"decimal"	9	0	1	2
3560	542	"res_0"	"decimal"	9	0	0	0
3561	542	"arg_1"	"time"	7	0	1	1
3562	542	"arg_2"	"decimal"	9	0	1	2
3563	543	"res_0"	"decimal"	9	0	0	0
3564	543	"arg_1"	"timetz"	7	0	1	1
3565	543	"arg_2"	"decimal"	9	0	1	2
3566	544	"res_0"	"decimal"	9	0	0	0
3567	544	"arg_1"	"date"	0	0	1	1
3568	544	"arg_2"	"decimal"	9	0	1	2
3569	545	"res_0"	"decimal"	9	0	0	0
3570	545	"arg_1"	"timestamp"	7	0	1	1
3571	545	"arg_2"	"decimal"	9	0	1	2
3572	546	"res_0"	"decimal"	9	0	0	0
3573	546	"arg_1"	"timestamptz"	7	0	1	1
3574	546	"arg_2"	"decimal"	9	0	1	2
3575	547	"res_0"	"decimal"	9	0	0	0
3576	547	"arg_1"	"blob"	0	0	1	1
3577	547	"arg_2"	"decimal"	9	0	1	2
3578	548	"res_0"	"decimal"	19	0	0	0
3579	548	"arg_1"	"oid"	63	0	1	1
3580	548	"arg_2"	"decimal"	19	0	1	2
3581	549	"res_0"	"decimal"	19	0	0	0
3582	549	"arg_1"	"tinyint"	8	0	1	1
3583	549	"arg_2"	"decimal"	19	0	1	2
3584	550	"res_0"	"decimal"	19	0	0	0
3585	550	"arg_1"	"smallint"	16	0	1	1
3586	550	"arg_2"	"decimal"	19	0	1	2
3587	551	"res_0"	"decimal"	19	0	0	0
3588	551	"arg_1"	"int"	32	0	1	1
3589	551	"arg_2"	"decimal"	19	0	1	2
3590	552	"res_0"	"decimal"	19	0	0	0
3591	552	"arg_1"	"bigint"	64	0	1	1
3592	552	"arg_2"	"decimal"	19	0	1	2
3593	553	"res_0"	"decimal"	19	0	0	0
3594	553	"arg_1"	"decimal"	2	0	1	1
3595	553	"arg_2"	"decimal"	19	0	1	2
3596	554	"res_0"	"decimal"	19	0	0	0
3597	554	"arg_1"	"decimal"	4	0	1	1
3598	554	"arg_2"	"decimal"	19	0	1	2
3599	555	"res_0"	"decimal"	19	0	0	0
3600	555	"arg_1"	"decimal"	9	0	1	1
3601	555	"arg_2"	"decimal"	19	0	1	2
3602	556	"res_0"	"decimal"	19	0	0	0
3603	556	"arg_1"	"decimal"	19	0	1	1
3604	556	"arg_2"	"decimal"	19	0	1	2
3605	557	"res_0"	"decimal"	19	0	0	0
3606	557	"arg_1"	"real"	24	0	1	1
3607	557	"arg_2"	"decimal"	19	0	1	2
3608	558	"res_0"	"decimal"	19	0	0	0
3609	558	"arg_1"	"double"	53	0	1	1
3610	558	"arg_2"	"decimal"	19	0	1	2
3611	559	"res_0"	"decimal"	19	0	0	0
3612	559	"arg_1"	"month_interval"	32	0	1	1
3613	559	"arg_2"	"decimal"	19	0	1	2
3614	560	"res_0"	"decimal"	19	0	0	0
3615	560	"arg_1"	"sec_interval"	13	0	1	1
3616	560	"arg_2"	"decimal"	19	0	1	2
3617	561	"res_0"	"decimal"	19	0	0	0
3618	561	"arg_1"	"time"	7	0	1	1
3619	561	"arg_2"	"decimal"	19	0	1	2
3620	562	"res_0"	"decimal"	19	0	0	0
3621	562	"arg_1"	"timetz"	7	0	1	1
3622	562	"arg_2"	"decimal"	19	0	1	2
3623	563	"res_0"	"decimal"	19	0	0	0
3624	563	"arg_1"	"date"	0	0	1	1
3625	563	"arg_2"	"decimal"	19	0	1	2
3626	564	"res_0"	"decimal"	19	0	0	0
3627	564	"arg_1"	"timestamp"	7	0	1	1
3628	564	"arg_2"	"decimal"	19	0	1	2
3629	565	"res_0"	"decimal"	19	0	0	0
3630	565	"arg_1"	"timestamptz"	7	0	1	1
3631	565	"arg_2"	"decimal"	19	0	1	2
3632	566	"res_0"	"decimal"	19	0	0	0
3633	566	"arg_1"	"blob"	0	0	1	1
3634	566	"arg_2"	"decimal"	19	0	1	2
3635	567	"res_0"	"real"	24	0	0	0
3636	567	"arg_1"	"oid"	63	0	1	1
3637	567	"arg_2"	"real"	24	0	1	2
3638	568	"res_0"	"real"	24	0	0	0
3639	568	"arg_1"	"tinyint"	8	0	1	1
3640	568	"arg_2"	"real"	24	0	1	2
3641	569	"res_0"	"real"	24	0	0	0
3642	569	"arg_1"	"smallint"	16	0	1	1
3643	569	"arg_2"	"real"	24	0	1	2
3644	570	"res_0"	"real"	24	0	0	0
3645	570	"arg_1"	"int"	32	0	1	1
3646	570	"arg_2"	"real"	24	0	1	2
3647	571	"res_0"	"real"	24	0	0	0
3648	571	"arg_1"	"bigint"	64	0	1	1
3649	571	"arg_2"	"real"	24	0	1	2
3650	572	"res_0"	"real"	24	0	0	0
3651	572	"arg_1"	"decimal"	2	0	1	1
3652	572	"arg_2"	"real"	24	0	1	2
3653	573	"res_0"	"real"	24	0	0	0
3654	573	"arg_1"	"decimal"	4	0	1	1
3655	573	"arg_2"	"real"	24	0	1	2
3656	574	"res_0"	"real"	24	0	0	0
3657	574	"arg_1"	"decimal"	9	0	1	1
3658	574	"arg_2"	"real"	24	0	1	2
3659	575	"res_0"	"real"	24	0	0	0
3660	575	"arg_1"	"decimal"	19	0	1	1
3661	575	"arg_2"	"real"	24	0	1	2
3662	576	"res_0"	"real"	24	0	0	0
3663	576	"arg_1"	"real"	24	0	1	1
3664	576	"arg_2"	"real"	24	0	1	2
3665	577	"res_0"	"real"	24	0	0	0
3666	577	"arg_1"	"double"	53	0	1	1
3667	577	"arg_2"	"real"	24	0	1	2
3668	578	"res_0"	"real"	24	0	0	0
3669	578	"arg_1"	"month_interval"	32	0	1	1
3670	578	"arg_2"	"real"	24	0	1	2
3671	579	"res_0"	"real"	24	0	0	0
3672	579	"arg_1"	"sec_interval"	13	0	1	1
3673	579	"arg_2"	"real"	24	0	1	2
3674	580	"res_0"	"real"	24	0	0	0
3675	580	"arg_1"	"time"	7	0	1	1
3676	580	"arg_2"	"real"	24	0	1	2
3677	581	"res_0"	"real"	24	0	0	0
3678	581	"arg_1"	"timetz"	7	0	1	1
3679	581	"arg_2"	"real"	24	0	1	2
3680	582	"res_0"	"real"	24	0	0	0
3681	582	"arg_1"	"date"	0	0	1	1
3682	582	"arg_2"	"real"	24	0	1	2
3683	583	"res_0"	"real"	24	0	0	0
3684	583	"arg_1"	"timestamp"	7	0	1	1
3685	583	"arg_2"	"real"	24	0	1	2
3686	584	"res_0"	"real"	24	0	0	0
3687	584	"arg_1"	"timestamptz"	7	0	1	1
3688	584	"arg_2"	"real"	24	0	1	2
3689	585	"res_0"	"real"	24	0	0	0
3690	585	"arg_1"	"blob"	0	0	1	1
3691	585	"arg_2"	"real"	24	0	1	2
3692	586	"res_0"	"double"	53	0	0	0
3693	586	"arg_1"	"oid"	63	0	1	1
3694	586	"arg_2"	"double"	53	0	1	2
3695	587	"res_0"	"double"	53	0	0	0
3696	587	"arg_1"	"tinyint"	8	0	1	1
3697	587	"arg_2"	"double"	53	0	1	2
3698	588	"res_0"	"double"	53	0	0	0
3699	588	"arg_1"	"smallint"	16	0	1	1
3700	588	"arg_2"	"double"	53	0	1	2
3701	589	"res_0"	"double"	53	0	0	0
3702	589	"arg_1"	"int"	32	0	1	1
3703	589	"arg_2"	"double"	53	0	1	2
3704	590	"res_0"	"double"	53	0	0	0
3705	590	"arg_1"	"bigint"	64	0	1	1
3706	590	"arg_2"	"double"	53	0	1	2
3707	591	"res_0"	"double"	53	0	0	0
3708	591	"arg_1"	"decimal"	2	0	1	1
3709	591	"arg_2"	"double"	53	0	1	2
3710	592	"res_0"	"double"	53	0	0	0
3711	592	"arg_1"	"decimal"	4	0	1	1
3712	592	"arg_2"	"double"	53	0	1	2
3713	593	"res_0"	"double"	53	0	0	0
3714	593	"arg_1"	"decimal"	9	0	1	1
3715	593	"arg_2"	"double"	53	0	1	2
3716	594	"res_0"	"double"	53	0	0	0
3717	594	"arg_1"	"decimal"	19	0	1	1
3718	594	"arg_2"	"double"	53	0	1	2
3719	595	"res_0"	"double"	53	0	0	0
3720	595	"arg_1"	"real"	24	0	1	1
3721	595	"arg_2"	"double"	53	0	1	2
3722	596	"res_0"	"double"	53	0	0	0
3723	596	"arg_1"	"double"	53	0	1	1
3724	596	"arg_2"	"double"	53	0	1	2
3725	597	"res_0"	"double"	53	0	0	0
3726	597	"arg_1"	"month_interval"	32	0	1	1
3727	597	"arg_2"	"double"	53	0	1	2
3728	598	"res_0"	"double"	53	0	0	0
3729	598	"arg_1"	"sec_interval"	13	0	1	1
3730	598	"arg_2"	"double"	53	0	1	2
3731	599	"res_0"	"double"	53	0	0	0
3732	599	"arg_1"	"time"	7	0	1	1
3733	599	"arg_2"	"double"	53	0	1	2
3734	600	"res_0"	"double"	53	0	0	0
3735	600	"arg_1"	"timetz"	7	0	1	1
3736	600	"arg_2"	"double"	53	0	1	2
3737	601	"res_0"	"double"	53	0	0	0
3738	601	"arg_1"	"date"	0	0	1	1
3739	601	"arg_2"	"double"	53	0	1	2
3740	602	"res_0"	"double"	53	0	0	0
3741	602	"arg_1"	"timestamp"	7	0	1	1
3742	602	"arg_2"	"double"	53	0	1	2
3743	603	"res_0"	"double"	53	0	0	0
3744	603	"arg_1"	"timestamptz"	7	0	1	1
3745	603	"arg_2"	"double"	53	0	1	2
3746	604	"res_0"	"double"	53	0	0	0
3747	604	"arg_1"	"blob"	0	0	1	1
3748	604	"arg_2"	"double"	53	0	1	2
3749	605	"res_0"	"month_interval"	32	0	0	0
3750	605	"arg_1"	"oid"	63	0	1	1
3751	605	"arg_2"	"month_interval"	32	0	1	2
3752	606	"res_0"	"month_interval"	32	0	0	0
3753	606	"arg_1"	"tinyint"	8	0	1	1
3754	606	"arg_2"	"month_interval"	32	0	1	2
3755	607	"res_0"	"month_interval"	32	0	0	0
3756	607	"arg_1"	"smallint"	16	0	1	1
3757	607	"arg_2"	"month_interval"	32	0	1	2
3758	608	"res_0"	"month_interval"	32	0	0	0
3759	608	"arg_1"	"int"	32	0	1	1
3760	608	"arg_2"	"month_interval"	32	0	1	2
3761	609	"res_0"	"month_interval"	32	0	0	0
3762	609	"arg_1"	"bigint"	64	0	1	1
3763	609	"arg_2"	"month_interval"	32	0	1	2
3764	610	"res_0"	"month_interval"	32	0	0	0
3765	610	"arg_1"	"decimal"	2	0	1	1
3766	610	"arg_2"	"month_interval"	32	0	1	2
3767	611	"res_0"	"month_interval"	32	0	0	0
3768	611	"arg_1"	"decimal"	4	0	1	1
3769	611	"arg_2"	"month_interval"	32	0	1	2
3770	612	"res_0"	"month_interval"	32	0	0	0
3771	612	"arg_1"	"decimal"	9	0	1	1
3772	612	"arg_2"	"month_interval"	32	0	1	2
3773	613	"res_0"	"month_interval"	32	0	0	0
3774	613	"arg_1"	"decimal"	19	0	1	1
3775	613	"arg_2"	"month_interval"	32	0	1	2
3776	614	"res_0"	"month_interval"	32	0	0	0
3777	614	"arg_1"	"real"	24	0	1	1
3778	614	"arg_2"	"month_interval"	32	0	1	2
3779	615	"res_0"	"month_interval"	32	0	0	0
3780	615	"arg_1"	"double"	53	0	1	1
3781	615	"arg_2"	"month_interval"	32	0	1	2
3782	616	"res_0"	"month_interval"	32	0	0	0
3783	616	"arg_1"	"month_interval"	32	0	1	1
3784	616	"arg_2"	"month_interval"	32	0	1	2
3785	617	"res_0"	"month_interval"	32	0	0	0
3786	617	"arg_1"	"sec_interval"	13	0	1	1
3787	617	"arg_2"	"month_interval"	32	0	1	2
3788	618	"res_0"	"month_interval"	32	0	0	0
3789	618	"arg_1"	"time"	7	0	1	1
3790	618	"arg_2"	"month_interval"	32	0	1	2
3791	619	"res_0"	"month_interval"	32	0	0	0
3792	619	"arg_1"	"timetz"	7	0	1	1
3793	619	"arg_2"	"month_interval"	32	0	1	2
3794	620	"res_0"	"month_interval"	32	0	0	0
3795	620	"arg_1"	"date"	0	0	1	1
3796	620	"arg_2"	"month_interval"	32	0	1	2
3797	621	"res_0"	"month_interval"	32	0	0	0
3798	621	"arg_1"	"timestamp"	7	0	1	1
3799	621	"arg_2"	"month_interval"	32	0	1	2
3800	622	"res_0"	"month_interval"	32	0	0	0
3801	622	"arg_1"	"timestamptz"	7	0	1	1
3802	622	"arg_2"	"month_interval"	32	0	1	2
3803	623	"res_0"	"month_interval"	32	0	0	0
3804	623	"arg_1"	"blob"	0	0	1	1
3805	623	"arg_2"	"month_interval"	32	0	1	2
3806	624	"res_0"	"sec_interval"	13	0	0	0
3807	624	"arg_1"	"oid"	63	0	1	1
3808	624	"arg_2"	"sec_interval"	13	0	1	2
3809	625	"res_0"	"sec_interval"	13	0	0	0
3810	625	"arg_1"	"tinyint"	8	0	1	1
3811	625	"arg_2"	"sec_interval"	13	0	1	2
3812	626	"res_0"	"sec_interval"	13	0	0	0
3813	626	"arg_1"	"smallint"	16	0	1	1
3814	626	"arg_2"	"sec_interval"	13	0	1	2
3815	627	"res_0"	"sec_interval"	13	0	0	0
3816	627	"arg_1"	"int"	32	0	1	1
3817	627	"arg_2"	"sec_interval"	13	0	1	2
3818	628	"res_0"	"sec_interval"	13	0	0	0
3819	628	"arg_1"	"bigint"	64	0	1	1
3820	628	"arg_2"	"sec_interval"	13	0	1	2
3821	629	"res_0"	"sec_interval"	13	0	0	0
3822	629	"arg_1"	"decimal"	2	0	1	1
3823	629	"arg_2"	"sec_interval"	13	0	1	2
3824	630	"res_0"	"sec_interval"	13	0	0	0
3825	630	"arg_1"	"decimal"	4	0	1	1
3826	630	"arg_2"	"sec_interval"	13	0	1	2
3827	631	"res_0"	"sec_interval"	13	0	0	0
3828	631	"arg_1"	"decimal"	9	0	1	1
3829	631	"arg_2"	"sec_interval"	13	0	1	2
3830	632	"res_0"	"sec_interval"	13	0	0	0
3831	632	"arg_1"	"decimal"	19	0	1	1
3832	632	"arg_2"	"sec_interval"	13	0	1	2
3833	633	"res_0"	"sec_interval"	13	0	0	0
3834	633	"arg_1"	"real"	24	0	1	1
3835	633	"arg_2"	"sec_interval"	13	0	1	2
3836	634	"res_0"	"sec_interval"	13	0	0	0
3837	634	"arg_1"	"double"	53	0	1	1
3838	634	"arg_2"	"sec_interval"	13	0	1	2
3839	635	"res_0"	"sec_interval"	13	0	0	0
3840	635	"arg_1"	"month_interval"	32	0	1	1
3841	635	"arg_2"	"sec_interval"	13	0	1	2
3842	636	"res_0"	"sec_interval"	13	0	0	0
3843	636	"arg_1"	"sec_interval"	13	0	1	1
3844	636	"arg_2"	"sec_interval"	13	0	1	2
3845	637	"res_0"	"sec_interval"	13	0	0	0
3846	637	"arg_1"	"time"	7	0	1	1
3847	637	"arg_2"	"sec_interval"	13	0	1	2
3848	638	"res_0"	"sec_interval"	13	0	0	0
3849	638	"arg_1"	"timetz"	7	0	1	1
3850	638	"arg_2"	"sec_interval"	13	0	1	2
3851	639	"res_0"	"sec_interval"	13	0	0	0
3852	639	"arg_1"	"date"	0	0	1	1
3853	639	"arg_2"	"sec_interval"	13	0	1	2
3854	640	"res_0"	"sec_interval"	13	0	0	0
3855	640	"arg_1"	"timestamp"	7	0	1	1
3856	640	"arg_2"	"sec_interval"	13	0	1	2
3857	641	"res_0"	"sec_interval"	13	0	0	0
3858	641	"arg_1"	"timestamptz"	7	0	1	1
3859	641	"arg_2"	"sec_interval"	13	0	1	2
3860	642	"res_0"	"sec_interval"	13	0	0	0
3861	642	"arg_1"	"blob"	0	0	1	1
3862	642	"arg_2"	"sec_interval"	13	0	1	2
3863	643	"res_0"	"time"	7	0	0	0
3864	643	"arg_1"	"oid"	63	0	1	1
3865	643	"arg_2"	"time"	7	0	1	2
3866	644	"res_0"	"time"	7	0	0	0
3867	644	"arg_1"	"tinyint"	8	0	1	1
3868	644	"arg_2"	"time"	7	0	1	2
3869	645	"res_0"	"time"	7	0	0	0
3870	645	"arg_1"	"smallint"	16	0	1	1
3871	645	"arg_2"	"time"	7	0	1	2
3872	646	"res_0"	"time"	7	0	0	0
3873	646	"arg_1"	"int"	32	0	1	1
3874	646	"arg_2"	"time"	7	0	1	2
3875	647	"res_0"	"time"	7	0	0	0
3876	647	"arg_1"	"bigint"	64	0	1	1
3877	647	"arg_2"	"time"	7	0	1	2
3878	648	"res_0"	"time"	7	0	0	0
3879	648	"arg_1"	"decimal"	2	0	1	1
3880	648	"arg_2"	"time"	7	0	1	2
3881	649	"res_0"	"time"	7	0	0	0
3882	649	"arg_1"	"decimal"	4	0	1	1
3883	649	"arg_2"	"time"	7	0	1	2
3884	650	"res_0"	"time"	7	0	0	0
3885	650	"arg_1"	"decimal"	9	0	1	1
3886	650	"arg_2"	"time"	7	0	1	2
3887	651	"res_0"	"time"	7	0	0	0
3888	651	"arg_1"	"decimal"	19	0	1	1
3889	651	"arg_2"	"time"	7	0	1	2
3890	652	"res_0"	"time"	7	0	0	0
3891	652	"arg_1"	"real"	24	0	1	1
3892	652	"arg_2"	"time"	7	0	1	2
3893	653	"res_0"	"time"	7	0	0	0
3894	653	"arg_1"	"double"	53	0	1	1
3895	653	"arg_2"	"time"	7	0	1	2
3896	654	"res_0"	"time"	7	0	0	0
3897	654	"arg_1"	"month_interval"	32	0	1	1
3898	654	"arg_2"	"time"	7	0	1	2
3899	655	"res_0"	"time"	7	0	0	0
3900	655	"arg_1"	"sec_interval"	13	0	1	1
3901	655	"arg_2"	"time"	7	0	1	2
3902	656	"res_0"	"time"	7	0	0	0
3903	656	"arg_1"	"time"	7	0	1	1
3904	656	"arg_2"	"time"	7	0	1	2
3905	657	"res_0"	"time"	7	0	0	0
3906	657	"arg_1"	"timetz"	7	0	1	1
3907	657	"arg_2"	"time"	7	0	1	2
3908	658	"res_0"	"time"	7	0	0	0
3909	658	"arg_1"	"date"	0	0	1	1
3910	658	"arg_2"	"time"	7	0	1	2
3911	659	"res_0"	"time"	7	0	0	0
3912	659	"arg_1"	"timestamp"	7	0	1	1
3913	659	"arg_2"	"time"	7	0	1	2
3914	660	"res_0"	"time"	7	0	0	0
3915	660	"arg_1"	"timestamptz"	7	0	1	1
3916	660	"arg_2"	"time"	7	0	1	2
3917	661	"res_0"	"time"	7	0	0	0
3918	661	"arg_1"	"blob"	0	0	1	1
3919	661	"arg_2"	"time"	7	0	1	2
3920	662	"res_0"	"timetz"	7	0	0	0
3921	662	"arg_1"	"oid"	63	0	1	1
3922	662	"arg_2"	"timetz"	7	0	1	2
3923	663	"res_0"	"timetz"	7	0	0	0
3924	663	"arg_1"	"tinyint"	8	0	1	1
3925	663	"arg_2"	"timetz"	7	0	1	2
3926	664	"res_0"	"timetz"	7	0	0	0
3927	664	"arg_1"	"smallint"	16	0	1	1
3928	664	"arg_2"	"timetz"	7	0	1	2
3929	665	"res_0"	"timetz"	7	0	0	0
3930	665	"arg_1"	"int"	32	0	1	1
3931	665	"arg_2"	"timetz"	7	0	1	2
3932	666	"res_0"	"timetz"	7	0	0	0
3933	666	"arg_1"	"bigint"	64	0	1	1
3934	666	"arg_2"	"timetz"	7	0	1	2
3935	667	"res_0"	"timetz"	7	0	0	0
3936	667	"arg_1"	"decimal"	2	0	1	1
3937	667	"arg_2"	"timetz"	7	0	1	2
3938	668	"res_0"	"timetz"	7	0	0	0
3939	668	"arg_1"	"decimal"	4	0	1	1
3940	668	"arg_2"	"timetz"	7	0	1	2
3941	669	"res_0"	"timetz"	7	0	0	0
3942	669	"arg_1"	"decimal"	9	0	1	1
3943	669	"arg_2"	"timetz"	7	0	1	2
3944	670	"res_0"	"timetz"	7	0	0	0
3945	670	"arg_1"	"decimal"	19	0	1	1
3946	670	"arg_2"	"timetz"	7	0	1	2
3947	671	"res_0"	"timetz"	7	0	0	0
3948	671	"arg_1"	"real"	24	0	1	1
3949	671	"arg_2"	"timetz"	7	0	1	2
3950	672	"res_0"	"timetz"	7	0	0	0
3951	672	"arg_1"	"double"	53	0	1	1
3952	672	"arg_2"	"timetz"	7	0	1	2
3953	673	"res_0"	"timetz"	7	0	0	0
3954	673	"arg_1"	"month_interval"	32	0	1	1
3955	673	"arg_2"	"timetz"	7	0	1	2
3956	674	"res_0"	"timetz"	7	0	0	0
3957	674	"arg_1"	"sec_interval"	13	0	1	1
3958	674	"arg_2"	"timetz"	7	0	1	2
3959	675	"res_0"	"timetz"	7	0	0	0
3960	675	"arg_1"	"time"	7	0	1	1
3961	675	"arg_2"	"timetz"	7	0	1	2
3962	676	"res_0"	"timetz"	7	0	0	0
3963	676	"arg_1"	"timetz"	7	0	1	1
3964	676	"arg_2"	"timetz"	7	0	1	2
3965	677	"res_0"	"timetz"	7	0	0	0
3966	677	"arg_1"	"date"	0	0	1	1
3967	677	"arg_2"	"timetz"	7	0	1	2
3968	678	"res_0"	"timetz"	7	0	0	0
3969	678	"arg_1"	"timestamp"	7	0	1	1
3970	678	"arg_2"	"timetz"	7	0	1	2
3971	679	"res_0"	"timetz"	7	0	0	0
3972	679	"arg_1"	"timestamptz"	7	0	1	1
3973	679	"arg_2"	"timetz"	7	0	1	2
3974	680	"res_0"	"timetz"	7	0	0	0
3975	680	"arg_1"	"blob"	0	0	1	1
3976	680	"arg_2"	"timetz"	7	0	1	2
3977	681	"res_0"	"date"	0	0	0	0
3978	681	"arg_1"	"oid"	63	0	1	1
3979	681	"arg_2"	"date"	0	0	1	2
3980	682	"res_0"	"date"	0	0	0	0
3981	682	"arg_1"	"tinyint"	8	0	1	1
3982	682	"arg_2"	"date"	0	0	1	2
3983	683	"res_0"	"date"	0	0	0	0
3984	683	"arg_1"	"smallint"	16	0	1	1
3985	683	"arg_2"	"date"	0	0	1	2
3986	684	"res_0"	"date"	0	0	0	0
3987	684	"arg_1"	"int"	32	0	1	1
3988	684	"arg_2"	"date"	0	0	1	2
3989	685	"res_0"	"date"	0	0	0	0
3990	685	"arg_1"	"bigint"	64	0	1	1
3991	685	"arg_2"	"date"	0	0	1	2
3992	686	"res_0"	"date"	0	0	0	0
3993	686	"arg_1"	"decimal"	2	0	1	1
3994	686	"arg_2"	"date"	0	0	1	2
3995	687	"res_0"	"date"	0	0	0	0
3996	687	"arg_1"	"decimal"	4	0	1	1
3997	687	"arg_2"	"date"	0	0	1	2
3998	688	"res_0"	"date"	0	0	0	0
3999	688	"arg_1"	"decimal"	9	0	1	1
4000	688	"arg_2"	"date"	0	0	1	2
4001	689	"res_0"	"date"	0	0	0	0
4002	689	"arg_1"	"decimal"	19	0	1	1
4003	689	"arg_2"	"date"	0	0	1	2
4004	690	"res_0"	"date"	0	0	0	0
4005	690	"arg_1"	"real"	24	0	1	1
4006	690	"arg_2"	"date"	0	0	1	2
4007	691	"res_0"	"date"	0	0	0	0
4008	691	"arg_1"	"double"	53	0	1	1
4009	691	"arg_2"	"date"	0	0	1	2
4010	692	"res_0"	"date"	0	0	0	0
4011	692	"arg_1"	"month_interval"	32	0	1	1
4012	692	"arg_2"	"date"	0	0	1	2
4013	693	"res_0"	"date"	0	0	0	0
4014	693	"arg_1"	"sec_interval"	13	0	1	1
4015	693	"arg_2"	"date"	0	0	1	2
4016	694	"res_0"	"date"	0	0	0	0
4017	694	"arg_1"	"time"	7	0	1	1
4018	694	"arg_2"	"date"	0	0	1	2
4019	695	"res_0"	"date"	0	0	0	0
4020	695	"arg_1"	"timetz"	7	0	1	1
4021	695	"arg_2"	"date"	0	0	1	2
4022	696	"res_0"	"date"	0	0	0	0
4023	696	"arg_1"	"date"	0	0	1	1
4024	696	"arg_2"	"date"	0	0	1	2
4025	697	"res_0"	"date"	0	0	0	0
4026	697	"arg_1"	"timestamp"	7	0	1	1
4027	697	"arg_2"	"date"	0	0	1	2
4028	698	"res_0"	"date"	0	0	0	0
4029	698	"arg_1"	"timestamptz"	7	0	1	1
4030	698	"arg_2"	"date"	0	0	1	2
4031	699	"res_0"	"date"	0	0	0	0
4032	699	"arg_1"	"blob"	0	0	1	1
4033	699	"arg_2"	"date"	0	0	1	2
4034	700	"res_0"	"timestamp"	7	0	0	0
4035	700	"arg_1"	"oid"	63	0	1	1
4036	700	"arg_2"	"timestamp"	7	0	1	2
4037	701	"res_0"	"timestamp"	7	0	0	0
4038	701	"arg_1"	"tinyint"	8	0	1	1
4039	701	"arg_2"	"timestamp"	7	0	1	2
4040	702	"res_0"	"timestamp"	7	0	0	0
4041	702	"arg_1"	"smallint"	16	0	1	1
4042	702	"arg_2"	"timestamp"	7	0	1	2
4043	703	"res_0"	"timestamp"	7	0	0	0
4044	703	"arg_1"	"int"	32	0	1	1
4045	703	"arg_2"	"timestamp"	7	0	1	2
4046	704	"res_0"	"timestamp"	7	0	0	0
4047	704	"arg_1"	"bigint"	64	0	1	1
4048	704	"arg_2"	"timestamp"	7	0	1	2
4049	705	"res_0"	"timestamp"	7	0	0	0
4050	705	"arg_1"	"decimal"	2	0	1	1
4051	705	"arg_2"	"timestamp"	7	0	1	2
4052	706	"res_0"	"timestamp"	7	0	0	0
4053	706	"arg_1"	"decimal"	4	0	1	1
4054	706	"arg_2"	"timestamp"	7	0	1	2
4055	707	"res_0"	"timestamp"	7	0	0	0
4056	707	"arg_1"	"decimal"	9	0	1	1
4057	707	"arg_2"	"timestamp"	7	0	1	2
4058	708	"res_0"	"timestamp"	7	0	0	0
4059	708	"arg_1"	"decimal"	19	0	1	1
4060	708	"arg_2"	"timestamp"	7	0	1	2
4061	709	"res_0"	"timestamp"	7	0	0	0
4062	709	"arg_1"	"real"	24	0	1	1
4063	709	"arg_2"	"timestamp"	7	0	1	2
4064	710	"res_0"	"timestamp"	7	0	0	0
4065	710	"arg_1"	"double"	53	0	1	1
4066	710	"arg_2"	"timestamp"	7	0	1	2
4067	711	"res_0"	"timestamp"	7	0	0	0
4068	711	"arg_1"	"month_interval"	32	0	1	1
4069	711	"arg_2"	"timestamp"	7	0	1	2
4070	712	"res_0"	"timestamp"	7	0	0	0
4071	712	"arg_1"	"sec_interval"	13	0	1	1
4072	712	"arg_2"	"timestamp"	7	0	1	2
4073	713	"res_0"	"timestamp"	7	0	0	0
4074	713	"arg_1"	"time"	7	0	1	1
4075	713	"arg_2"	"timestamp"	7	0	1	2
4076	714	"res_0"	"timestamp"	7	0	0	0
4077	714	"arg_1"	"timetz"	7	0	1	1
4078	714	"arg_2"	"timestamp"	7	0	1	2
4079	715	"res_0"	"timestamp"	7	0	0	0
4080	715	"arg_1"	"date"	0	0	1	1
4081	715	"arg_2"	"timestamp"	7	0	1	2
4082	716	"res_0"	"timestamp"	7	0	0	0
4083	716	"arg_1"	"timestamp"	7	0	1	1
4084	716	"arg_2"	"timestamp"	7	0	1	2
4085	717	"res_0"	"timestamp"	7	0	0	0
4086	717	"arg_1"	"timestamptz"	7	0	1	1
4087	717	"arg_2"	"timestamp"	7	0	1	2
4088	718	"res_0"	"timestamp"	7	0	0	0
4089	718	"arg_1"	"blob"	0	0	1	1
4090	718	"arg_2"	"timestamp"	7	0	1	2
4091	719	"res_0"	"timestamptz"	7	0	0	0
4092	719	"arg_1"	"oid"	63	0	1	1
4093	719	"arg_2"	"timestamptz"	7	0	1	2
4094	720	"res_0"	"timestamptz"	7	0	0	0
4095	720	"arg_1"	"tinyint"	8	0	1	1
4096	720	"arg_2"	"timestamptz"	7	0	1	2
4097	721	"res_0"	"timestamptz"	7	0	0	0
4098	721	"arg_1"	"smallint"	16	0	1	1
4099	721	"arg_2"	"timestamptz"	7	0	1	2
4100	722	"res_0"	"timestamptz"	7	0	0	0
4101	722	"arg_1"	"int"	32	0	1	1
4102	722	"arg_2"	"timestamptz"	7	0	1	2
4103	723	"res_0"	"timestamptz"	7	0	0	0
4104	723	"arg_1"	"bigint"	64	0	1	1
4105	723	"arg_2"	"timestamptz"	7	0	1	2
4106	724	"res_0"	"timestamptz"	7	0	0	0
4107	724	"arg_1"	"decimal"	2	0	1	1
4108	724	"arg_2"	"timestamptz"	7	0	1	2
4109	725	"res_0"	"timestamptz"	7	0	0	0
4110	725	"arg_1"	"decimal"	4	0	1	1
4111	725	"arg_2"	"timestamptz"	7	0	1	2
4112	726	"res_0"	"timestamptz"	7	0	0	0
4113	726	"arg_1"	"decimal"	9	0	1	1
4114	726	"arg_2"	"timestamptz"	7	0	1	2
4115	727	"res_0"	"timestamptz"	7	0	0	0
4116	727	"arg_1"	"decimal"	19	0	1	1
4117	727	"arg_2"	"timestamptz"	7	0	1	2
4118	728	"res_0"	"timestamptz"	7	0	0	0
4119	728	"arg_1"	"real"	24	0	1	1
4120	728	"arg_2"	"timestamptz"	7	0	1	2
4121	729	"res_0"	"timestamptz"	7	0	0	0
4122	729	"arg_1"	"double"	53	0	1	1
4123	729	"arg_2"	"timestamptz"	7	0	1	2
4124	730	"res_0"	"timestamptz"	7	0	0	0
4125	730	"arg_1"	"month_interval"	32	0	1	1
4126	730	"arg_2"	"timestamptz"	7	0	1	2
4127	731	"res_0"	"timestamptz"	7	0	0	0
4128	731	"arg_1"	"sec_interval"	13	0	1	1
4129	731	"arg_2"	"timestamptz"	7	0	1	2
4130	732	"res_0"	"timestamptz"	7	0	0	0
4131	732	"arg_1"	"time"	7	0	1	1
4132	732	"arg_2"	"timestamptz"	7	0	1	2
4133	733	"res_0"	"timestamptz"	7	0	0	0
4134	733	"arg_1"	"timetz"	7	0	1	1
4135	733	"arg_2"	"timestamptz"	7	0	1	2
4136	734	"res_0"	"timestamptz"	7	0	0	0
4137	734	"arg_1"	"date"	0	0	1	1
4138	734	"arg_2"	"timestamptz"	7	0	1	2
4139	735	"res_0"	"timestamptz"	7	0	0	0
4140	735	"arg_1"	"timestamp"	7	0	1	1
4141	735	"arg_2"	"timestamptz"	7	0	1	2
4142	736	"res_0"	"timestamptz"	7	0	0	0
4143	736	"arg_1"	"timestamptz"	7	0	1	1
4144	736	"arg_2"	"timestamptz"	7	0	1	2
4145	737	"res_0"	"timestamptz"	7	0	0	0
4146	737	"arg_1"	"blob"	0	0	1	1
4147	737	"arg_2"	"timestamptz"	7	0	1	2
4148	738	"res_0"	"blob"	0	0	0	0
4149	738	"arg_1"	"oid"	63	0	1	1
4150	738	"arg_2"	"blob"	0	0	1	2
4151	739	"res_0"	"blob"	0	0	0	0
4152	739	"arg_1"	"tinyint"	8	0	1	1
4153	739	"arg_2"	"blob"	0	0	1	2
4154	740	"res_0"	"blob"	0	0	0	0
4155	740	"arg_1"	"smallint"	16	0	1	1
4156	740	"arg_2"	"blob"	0	0	1	2
4157	741	"res_0"	"blob"	0	0	0	0
4158	741	"arg_1"	"int"	32	0	1	1
4159	741	"arg_2"	"blob"	0	0	1	2
4160	742	"res_0"	"blob"	0	0	0	0
4161	742	"arg_1"	"bigint"	64	0	1	1
4162	742	"arg_2"	"blob"	0	0	1	2
4163	743	"res_0"	"blob"	0	0	0	0
4164	743	"arg_1"	"decimal"	2	0	1	1
4165	743	"arg_2"	"blob"	0	0	1	2
4166	744	"res_0"	"blob"	0	0	0	0
4167	744	"arg_1"	"decimal"	4	0	1	1
4168	744	"arg_2"	"blob"	0	0	1	2
4169	745	"res_0"	"blob"	0	0	0	0
4170	745	"arg_1"	"decimal"	9	0	1	1
4171	745	"arg_2"	"blob"	0	0	1	2
4172	746	"res_0"	"blob"	0	0	0	0
4173	746	"arg_1"	"decimal"	19	0	1	1
4174	746	"arg_2"	"blob"	0	0	1	2
4175	747	"res_0"	"blob"	0	0	0	0
4176	747	"arg_1"	"real"	24	0	1	1
4177	747	"arg_2"	"blob"	0	0	1	2
4178	748	"res_0"	"blob"	0	0	0	0
4179	748	"arg_1"	"double"	53	0	1	1
4180	748	"arg_2"	"blob"	0	0	1	2
4181	749	"res_0"	"blob"	0	0	0	0
4182	749	"arg_1"	"month_interval"	32	0	1	1
4183	749	"arg_2"	"blob"	0	0	1	2
4184	750	"res_0"	"blob"	0	0	0	0
4185	750	"arg_1"	"sec_interval"	13	0	1	1
4186	750	"arg_2"	"blob"	0	0	1	2
4187	751	"res_0"	"blob"	0	0	0	0
4188	751	"arg_1"	"time"	7	0	1	1
4189	751	"arg_2"	"blob"	0	0	1	2
4190	752	"res_0"	"blob"	0	0	0	0
4191	752	"arg_1"	"timetz"	7	0	1	1
4192	752	"arg_2"	"blob"	0	0	1	2
4193	753	"res_0"	"blob"	0	0	0	0
4194	753	"arg_1"	"date"	0	0	1	1
4195	753	"arg_2"	"blob"	0	0	1	2
4196	754	"res_0"	"blob"	0	0	0	0
4197	754	"arg_1"	"timestamp"	7	0	1	1
4198	754	"arg_2"	"blob"	0	0	1	2
4199	755	"res_0"	"blob"	0	0	0	0
4200	755	"arg_1"	"timestamptz"	7	0	1	1
4201	755	"arg_2"	"blob"	0	0	1	2
4202	756	"res_0"	"blob"	0	0	0	0
4203	756	"arg_1"	"blob"	0	0	1	1
4204	756	"arg_2"	"blob"	0	0	1	2
4205	757	"res_0"	"real"	24	0	0	0
4206	757	"arg_1"	"real"	24	0	1	1
4207	757	"arg_2"	"real"	24	0	1	2
4208	758	"res_0"	"real"	24	0	0	0
4209	758	"arg_1"	"real"	24	0	1	1
4210	759	"res_0"	"real"	24	0	0	0
4211	759	"arg_1"	"real"	24	0	1	1
4212	760	"res_0"	"real"	24	0	0	0
4213	760	"arg_1"	"real"	24	0	1	1
4214	761	"res_0"	"real"	24	0	0	0
4215	761	"arg_1"	"real"	24	0	1	1
4216	762	"res_0"	"real"	24	0	0	0
4217	762	"arg_1"	"real"	24	0	1	1
4218	763	"res_0"	"real"	24	0	0	0
4219	763	"arg_1"	"real"	24	0	1	1
4220	764	"res_0"	"real"	24	0	0	0
4221	764	"arg_1"	"real"	24	0	1	1
4222	765	"res_0"	"real"	24	0	0	0
4223	765	"arg_1"	"real"	24	0	1	1
4224	766	"res_0"	"real"	24	0	0	0
4225	766	"arg_1"	"real"	24	0	1	1
4226	767	"res_0"	"real"	24	0	0	0
4227	767	"arg_1"	"real"	24	0	1	1
4228	767	"arg_2"	"real"	24	0	1	2
4229	768	"res_0"	"real"	24	0	0	0
4230	768	"arg_1"	"real"	24	0	1	1
4231	769	"res_0"	"real"	24	0	0	0
4232	769	"arg_1"	"real"	24	0	1	1
4233	770	"res_0"	"real"	24	0	0	0
4234	770	"arg_1"	"real"	24	0	1	1
4235	771	"res_0"	"real"	24	0	0	0
4236	771	"arg_1"	"real"	24	0	1	1
4237	772	"res_0"	"real"	24	0	0	0
4238	772	"arg_1"	"real"	24	0	1	1
4239	773	"res_0"	"real"	24	0	0	0
4240	773	"arg_1"	"real"	24	0	1	1
4241	774	"res_0"	"real"	24	0	0	0
4242	774	"arg_1"	"real"	24	0	1	1
4243	775	"res_0"	"real"	24	0	0	0
4244	775	"arg_1"	"real"	24	0	1	1
4245	776	"res_0"	"double"	53	0	0	0
4246	776	"arg_1"	"double"	53	0	1	1
4247	776	"arg_2"	"double"	53	0	1	2
4248	777	"res_0"	"double"	53	0	0	0
4249	777	"arg_1"	"double"	53	0	1	1
4250	778	"res_0"	"double"	53	0	0	0
4251	778	"arg_1"	"double"	53	0	1	1
4252	779	"res_0"	"double"	53	0	0	0
4253	779	"arg_1"	"double"	53	0	1	1
4254	780	"res_0"	"double"	53	0	0	0
4255	780	"arg_1"	"double"	53	0	1	1
4256	781	"res_0"	"double"	53	0	0	0
4257	781	"arg_1"	"double"	53	0	1	1
4258	782	"res_0"	"double"	53	0	0	0
4259	782	"arg_1"	"double"	53	0	1	1
4260	783	"res_0"	"double"	53	0	0	0
4261	783	"arg_1"	"double"	53	0	1	1
4262	784	"res_0"	"double"	53	0	0	0
4263	784	"arg_1"	"double"	53	0	1	1
4264	785	"res_0"	"double"	53	0	0	0
4265	785	"arg_1"	"double"	53	0	1	1
4266	786	"res_0"	"double"	53	0	0	0
4267	786	"arg_1"	"double"	53	0	1	1
4268	786	"arg_2"	"double"	53	0	1	2
4269	787	"res_0"	"double"	53	0	0	0
4270	787	"arg_1"	"double"	53	0	1	1
4271	788	"res_0"	"double"	53	0	0	0
4272	788	"arg_1"	"double"	53	0	1	1
4273	789	"res_0"	"double"	53	0	0	0
4274	789	"arg_1"	"double"	53	0	1	1
4275	790	"res_0"	"double"	53	0	0	0
4276	790	"arg_1"	"double"	53	0	1	1
4277	791	"res_0"	"double"	53	0	0	0
4278	791	"arg_1"	"double"	53	0	1	1
4279	792	"res_0"	"double"	53	0	0	0
4280	792	"arg_1"	"double"	53	0	1	1
4281	793	"res_0"	"double"	53	0	0	0
4282	793	"arg_1"	"double"	53	0	1	1
4283	794	"res_0"	"double"	53	0	0	0
4284	794	"arg_1"	"double"	53	0	1	1
4285	795	"res_0"	"double"	53	0	0	0
4286	796	"res_0"	"int"	32	0	0	0
4287	797	"res_0"	"int"	32	0	0	0
4288	797	"arg_1"	"int"	32	0	1	1
4289	798	"res_0"	"date"	0	0	0	0
4290	799	"res_0"	"date"	0	0	0	0
4291	800	"res_0"	"timetz"	7	0	0	0
4292	801	"res_0"	"timetz"	7	0	0	0
4293	802	"res_0"	"timestamptz"	7	0	0	0
4294	803	"res_0"	"time"	7	0	0	0
4295	804	"res_0"	"timestamp"	7	0	0	0
4296	805	"res_0"	"month_interval"	32	0	0	0
4297	805	"arg_1"	"date"	0	0	1	1
4298	805	"arg_2"	"date"	0	0	1	2
4299	806	"res_0"	"sec_interval"	13	0	0	0
4300	806	"arg_1"	"timetz"	7	0	1	1
4301	806	"arg_2"	"timetz"	7	0	1	2
4302	807	"res_0"	"sec_interval"	13	0	0	0
4303	807	"arg_1"	"time"	7	0	1	1
4304	807	"arg_2"	"time"	7	0	1	2
4305	808	"res_0"	"sec_interval"	13	0	0	0
4306	808	"arg_1"	"timestamptz"	7	0	1	1
4307	808	"arg_2"	"timestamptz"	7	0	1	2
4308	809	"res_0"	"sec_interval"	13	0	0	0
4309	809	"arg_1"	"timestamp"	7	0	1	1
4310	809	"arg_2"	"timestamp"	7	0	1	2
4311	810	"res_0"	"date"	0	0	0	0
4312	810	"arg_1"	"date"	0	0	1	1
4313	810	"arg_2"	"sec_interval"	13	0	1	2
4314	811	"res_0"	"date"	0	0	0	0
4315	811	"arg_1"	"date"	0	0	1	1
4316	811	"arg_2"	"month_interval"	32	0	1	2
4317	812	"res_0"	"time"	7	0	0	0
4318	812	"arg_1"	"time"	7	0	1	1
4319	812	"arg_2"	"sec_interval"	13	0	1	2
4320	813	"res_0"	"timetz"	7	0	0	0
4321	813	"arg_1"	"timetz"	7	0	1	1
4322	813	"arg_2"	"sec_interval"	13	0	1	2
4323	814	"res_0"	"timestamp"	7	0	0	0
4324	814	"arg_1"	"timestamp"	7	0	1	1
4325	814	"arg_2"	"sec_interval"	13	0	1	2
4326	815	"res_0"	"timestamp"	7	0	0	0
4327	815	"arg_1"	"timestamp"	7	0	1	1
4328	815	"arg_2"	"month_interval"	32	0	1	2
4329	816	"res_0"	"timestamptz"	7	0	0	0
4330	816	"arg_1"	"timestamptz"	7	0	1	1
4331	816	"arg_2"	"sec_interval"	13	0	1	2
4332	817	"res_0"	"timestamptz"	7	0	0	0
4333	817	"arg_1"	"timestamptz"	7	0	1	1
4334	817	"arg_2"	"month_interval"	32	0	1	2
4335	818	"res_0"	"date"	0	0	0	0
4336	818	"arg_1"	"date"	0	0	1	1
4337	818	"arg_2"	"sec_interval"	13	0	1	2
4338	819	"res_0"	"date"	0	0	0	0
4339	819	"arg_1"	"date"	0	0	1	1
4340	819	"arg_2"	"month_interval"	32	0	1	2
4341	820	"res_0"	"timestamp"	7	0	0	0
4342	820	"arg_1"	"timestamp"	7	0	1	1
4343	820	"arg_2"	"sec_interval"	13	0	1	2
4344	821	"res_0"	"timestamp"	7	0	0	0
4345	821	"arg_1"	"timestamp"	7	0	1	1
4346	821	"arg_2"	"month_interval"	32	0	1	2
4347	822	"res_0"	"timestamptz"	7	0	0	0
4348	822	"arg_1"	"timestamptz"	7	0	1	1
4349	822	"arg_2"	"sec_interval"	13	0	1	2
4350	823	"res_0"	"timestamptz"	7	0	0	0
4351	823	"arg_1"	"timestamptz"	7	0	1	1
4352	823	"arg_2"	"month_interval"	32	0	1	2
4353	824	"res_0"	"time"	7	0	0	0
4354	824	"arg_1"	"time"	7	0	1	1
4355	824	"arg_2"	"sec_interval"	13	0	1	2
4356	825	"res_0"	"timetz"	7	0	0	0
4357	825	"arg_1"	"timetz"	7	0	1	1
4358	825	"arg_2"	"sec_interval"	13	0	1	2
4359	826	"res_0"	"sec_interval"	13	0	0	0
4360	827	"res_0"	"int"	32	0	0	0
4361	827	"arg_1"	"date"	0	0	1	1
4362	828	"res_0"	"int"	32	0	0	0
4363	828	"arg_1"	"date"	0	0	1	1
4364	829	"res_0"	"int"	32	0	0	0
4365	829	"arg_1"	"date"	0	0	1	1
4366	830	"res_0"	"int"	32	0	0	0
4367	830	"arg_1"	"time"	7	0	1	1
4368	831	"res_0"	"int"	32	0	0	0
4369	831	"arg_1"	"time"	7	0	1	1
4370	832	"res_0"	"decimal"	9	3	0	0
4371	832	"arg_1"	"time"	7	0	1	1
4372	833	"res_0"	"int"	32	0	0	0
4373	833	"arg_1"	"timetz"	7	0	1	1
4374	834	"res_0"	"int"	32	0	0	0
4375	834	"arg_1"	"timetz"	7	0	1	1
4376	835	"res_0"	"decimal"	9	3	0	0
4377	835	"arg_1"	"timetz"	7	0	1	1
4378	836	"res_0"	"int"	32	0	0	0
4379	836	"arg_1"	"timestamp"	7	0	1	1
4380	837	"res_0"	"int"	32	0	0	0
4381	837	"arg_1"	"timestamp"	7	0	1	1
4382	838	"res_0"	"int"	32	0	0	0
4383	838	"arg_1"	"timestamp"	7	0	1	1
4384	839	"res_0"	"int"	32	0	0	0
4385	839	"arg_1"	"timestamp"	7	0	1	1
4386	840	"res_0"	"int"	32	0	0	0
4387	840	"arg_1"	"timestamp"	7	0	1	1
4388	841	"res_0"	"decimal"	9	3	0	0
4389	841	"arg_1"	"timestamp"	7	0	1	1
4390	842	"res_0"	"int"	32	0	0	0
4391	842	"arg_1"	"timestamptz"	7	0	1	1
4392	843	"res_0"	"int"	32	0	0	0
4393	843	"arg_1"	"timestamptz"	7	0	1	1
4394	844	"res_0"	"int"	32	0	0	0
4395	844	"arg_1"	"timestamptz"	7	0	1	1
4396	845	"res_0"	"int"	32	0	0	0
4397	845	"arg_1"	"timestamptz"	7	0	1	1
4398	846	"res_0"	"int"	32	0	0	0
4399	846	"arg_1"	"timestamptz"	7	0	1	1
4400	847	"res_0"	"decimal"	9	3	0	0
4401	847	"arg_1"	"timestamptz"	7	0	1	1
4402	848	"res_0"	"int"	32	0	0	0
4403	848	"arg_1"	"month_interval"	32	0	1	1
4404	849	"res_0"	"int"	32	0	0	0
4405	849	"arg_1"	"month_interval"	32	0	1	1
4406	850	"res_0"	"bigint"	64	0	0	0
4407	850	"arg_1"	"sec_interval"	13	0	1	1
4408	851	"res_0"	"int"	32	0	0	0
4409	851	"arg_1"	"sec_interval"	13	0	1	1
4410	852	"res_0"	"int"	32	0	0	0
4411	852	"arg_1"	"sec_interval"	13	0	1	1
4412	853	"res_0"	"int"	32	0	0	0
4413	853	"arg_1"	"sec_interval"	13	0	1	1
4414	854	"res_0"	"int"	32	0	0	0
4415	854	"arg_1"	"date"	0	0	1	1
4416	855	"res_0"	"int"	32	0	0	0
4417	855	"arg_1"	"date"	0	0	1	1
4418	856	"res_0"	"int"	32	0	0	0
4419	856	"arg_1"	"date"	0	0	1	1
4420	857	"res_0"	"int"	32	0	0	0
4421	857	"arg_1"	"date"	0	0	1	1
4422	858	"res_0"	"int"	32	0	0	0
4423	858	"arg_1"	"date"	0	0	1	1
4424	859	"res_0"	"bigint"	64	0	0	0
4425	859	"arg_1"	"varchar"	0	0	1	1
4426	859	"arg_2"	"varchar"	0	0	1	2
4427	860	"res_0"	"bigint"	64	0	0	0
4428	860	"arg_1"	"varchar"	0	0	1	1
4429	860	"arg_2"	"varchar"	0	0	1	2
4430	861	"res_0"	"bigint"	64	0	0	0
4431	861	"arg_1"	"varchar"	0	0	1	1
4432	861	"arg_2"	"varchar"	0	0	1	2
4433	861	"arg_3"	"bigint"	64	0	1	3
4434	862	"res_0"	"tinyint"	8	0	0	0
4435	862	"arg_1"	"char"	0	0	1	1
4436	862	"arg_2"	"boolean"	1	0	1	2
4437	863	"res_0"	"smallint"	16	0	0	0
4438	863	"arg_1"	"char"	0	0	1	1
4439	863	"arg_2"	"boolean"	1	0	1	2
4440	864	"res_0"	"int"	32	0	0	0
4441	864	"arg_1"	"char"	0	0	1	1
4442	864	"arg_2"	"boolean"	1	0	1	2
4443	865	"res_0"	"char"	0	0	0	0
4444	865	"arg_1"	"char"	0	0	1	1
4445	866	"res_0"	"int"	32	0	0	0
4446	866	"arg_1"	"char"	0	0	1	1
4447	866	"arg_2"	"char"	0	0	1	2
4448	867	"res_0"	"int"	32	0	0	0
4449	867	"arg_1"	"char"	0	0	1	1
4450	867	"arg_2"	"char"	0	0	1	2
4451	867	"arg_3"	"int"	32	0	1	3
4452	868	"res_0"	"char"	0	0	0	0
4453	868	"arg_1"	"char"	0	0	1	1
4454	868	"arg_2"	"char"	0	0	1	2
4455	868	"arg_3"	"int"	32	0	1	3
4456	869	"res_0"	"char"	0	0	0	0
4457	869	"arg_1"	"char"	0	0	1	1
4458	869	"arg_2"	"int"	32	0	1	2
4459	870	"res_0"	"char"	0	0	0	0
4460	870	"arg_1"	"char"	0	0	1	1
4461	870	"arg_2"	"int"	32	0	1	2
4462	870	"arg_3"	"int"	32	0	1	3
4463	871	"res_0"	"boolean"	1	0	0	0
4464	871	"arg_1"	"char"	0	0	1	1
4465	871	"arg_2"	"char"	0	0	1	2
4466	872	"res_0"	"boolean"	1	0	0	0
4467	872	"arg_1"	"char"	0	0	1	1
4468	872	"arg_2"	"char"	0	0	1	2
4469	872	"arg_3"	"char"	0	0	1	3
4470	873	"res_0"	"boolean"	1	0	0	0
4471	873	"arg_1"	"char"	0	0	1	1
4472	873	"arg_2"	"char"	0	0	1	2
4473	874	"res_0"	"boolean"	1	0	0	0
4474	874	"arg_1"	"char"	0	0	1	1
4475	874	"arg_2"	"char"	0	0	1	2
4476	874	"arg_3"	"char"	0	0	1	3
4477	875	"res_0"	"boolean"	1	0	0	0
4478	875	"arg_1"	"char"	0	0	1	1
4479	875	"arg_2"	"char"	0	0	1	2
4480	876	"res_0"	"boolean"	1	0	0	0
4481	876	"arg_1"	"char"	0	0	1	1
4482	876	"arg_2"	"char"	0	0	1	2
4483	876	"arg_3"	"char"	0	0	1	3
4484	877	"res_0"	"boolean"	1	0	0	0
4485	877	"arg_1"	"char"	0	0	1	1
4486	877	"arg_2"	"char"	0	0	1	2
4487	878	"res_0"	"boolean"	1	0	0	0
4488	878	"arg_1"	"char"	0	0	1	1
4489	878	"arg_2"	"char"	0	0	1	2
4490	878	"arg_3"	"char"	0	0	1	3
4491	879	"res_0"	"int"	32	0	0	0
4492	879	"arg_1"	"char"	0	0	1	1
4493	879	"arg_2"	"char"	0	0	1	2
4494	880	"res_0"	"char"	0	0	0	0
4495	880	"arg_1"	"char"	0	0	1	1
4496	880	"arg_2"	"int"	32	0	1	2
4497	881	"res_0"	"char"	0	0	0	0
4498	881	"arg_1"	"char"	0	0	1	1
4499	881	"arg_2"	"char"	0	0	1	2
4500	882	"res_0"	"int"	32	0	0	0
4501	882	"arg_1"	"char"	0	0	1	1
4502	883	"res_0"	"char"	0	0	0	0
4503	883	"arg_1"	"int"	32	0	1	1
4504	884	"res_0"	"int"	32	0	0	0
4505	884	"arg_1"	"char"	0	0	1	1
4506	885	"res_0"	"char"	0	0	0	0
4507	885	"arg_1"	"char"	0	0	1	1
4508	885	"arg_2"	"int"	32	0	1	2
4509	886	"res_0"	"char"	0	0	0	0
4510	886	"arg_1"	"char"	0	0	1	1
4511	886	"arg_2"	"int"	32	0	1	2
4512	887	"res_0"	"char"	0	0	0	0
4513	887	"arg_1"	"char"	0	0	1	1
4514	888	"res_0"	"char"	0	0	0	0
4515	888	"arg_1"	"char"	0	0	1	1
4516	889	"res_0"	"char"	0	0	0	0
4517	889	"arg_1"	"char"	0	0	1	1
4518	890	"res_0"	"char"	0	0	0	0
4519	890	"arg_1"	"char"	0	0	1	1
4520	891	"res_0"	"char"	0	0	0	0
4521	891	"arg_1"	"char"	0	0	1	1
4522	892	"res_0"	"char"	0	0	0	0
4523	892	"arg_1"	"char"	0	0	1	1
4524	892	"arg_2"	"char"	0	0	1	2
4525	893	"res_0"	"char"	0	0	0	0
4526	893	"arg_1"	"char"	0	0	1	1
4527	894	"res_0"	"char"	0	0	0	0
4528	894	"arg_1"	"char"	0	0	1	1
4529	894	"arg_2"	"char"	0	0	1	2
4530	895	"res_0"	"char"	0	0	0	0
4531	895	"arg_1"	"char"	0	0	1	1
4532	896	"res_0"	"char"	0	0	0	0
4533	896	"arg_1"	"char"	0	0	1	1
4534	896	"arg_2"	"char"	0	0	1	2
4535	897	"res_0"	"char"	0	0	0	0
4536	897	"arg_1"	"char"	0	0	1	1
4537	897	"arg_2"	"int"	32	0	1	2
4538	898	"res_0"	"char"	0	0	0	0
4539	898	"arg_1"	"char"	0	0	1	1
4540	898	"arg_2"	"int"	32	0	1	2
4541	898	"arg_3"	"char"	0	0	1	3
4542	899	"res_0"	"char"	0	0	0	0
4543	899	"arg_1"	"char"	0	0	1	1
4544	899	"arg_2"	"int"	32	0	1	2
4545	900	"res_0"	"char"	0	0	0	0
4546	900	"arg_1"	"char"	0	0	1	1
4547	900	"arg_2"	"int"	32	0	1	2
4548	900	"arg_3"	"char"	0	0	1	3
4549	901	"res_0"	"char"	0	0	0	0
4550	901	"arg_1"	"char"	0	0	1	1
4551	901	"arg_2"	"int"	32	0	1	2
4552	901	"arg_3"	"int"	32	0	1	3
4553	901	"arg_4"	"char"	0	0	1	4
4554	902	"res_0"	"char"	0	0	0	0
4555	902	"arg_1"	"char"	0	0	1	1
4556	902	"arg_2"	"char"	0	0	1	2
4557	902	"arg_3"	"char"	0	0	1	3
4558	903	"res_0"	"char"	0	0	0	0
4559	903	"arg_1"	"char"	0	0	1	1
4560	903	"arg_2"	"int"	32	0	1	2
4561	904	"res_0"	"char"	0	0	0	0
4562	904	"arg_1"	"int"	32	0	1	1
4563	905	"res_0"	"int"	32	0	0	0
4564	905	"arg_1"	"char"	0	0	1	1
4565	906	"res_0"	"int"	32	0	0	0
4566	906	"arg_1"	"char"	0	0	1	1
4567	907	"res_0"	"int"	32	0	0	0
4568	907	"arg_1"	"char"	0	0	1	1
4569	908	"res_0"	"char"	0	0	0	0
4570	908	"arg_1"	"char"	0	0	1	1
4571	909	"res_0"	"int"	32	0	0	0
4572	909	"arg_1"	"char"	0	0	1	1
4573	909	"arg_2"	"char"	0	0	1	2
4574	910	"res_0"	"int"	32	0	0	0
4575	910	"arg_1"	"char"	0	0	1	1
4576	910	"arg_2"	"char"	0	0	1	2
4577	911	"res_0"	"int"	32	0	0	0
4578	911	"arg_1"	"char"	0	0	1	1
4579	911	"arg_2"	"char"	0	0	1	2
4580	912	"res_0"	"double"	53	0	0	0
4581	912	"arg_1"	"char"	0	0	1	1
4582	912	"arg_2"	"char"	0	0	1	2
4583	913	"res_0"	"char"	0	0	0	0
4584	913	"arg_1"	"char"	0	0	1	1
4585	914	"res_0"	"int"	32	0	0	0
4586	914	"arg_1"	"char"	0	0	1	1
4587	914	"arg_2"	"char"	0	0	1	2
4588	915	"res_0"	"int"	32	0	0	0
4589	915	"arg_1"	"char"	0	0	1	1
4590	915	"arg_2"	"char"	0	0	1	2
4591	915	"arg_3"	"int"	32	0	1	3
4592	915	"arg_4"	"int"	32	0	1	4
4593	915	"arg_5"	"int"	32	0	1	5
4594	916	"res_0"	"tinyint"	8	0	0	0
4595	916	"arg_1"	"varchar"	0	0	1	1
4596	916	"arg_2"	"boolean"	1	0	1	2
4597	917	"res_0"	"smallint"	16	0	0	0
4598	917	"arg_1"	"varchar"	0	0	1	1
4599	917	"arg_2"	"boolean"	1	0	1	2
4600	918	"res_0"	"int"	32	0	0	0
4601	918	"arg_1"	"varchar"	0	0	1	1
4602	918	"arg_2"	"boolean"	1	0	1	2
4603	919	"res_0"	"varchar"	0	0	0	0
4604	919	"arg_1"	"varchar"	0	0	1	1
4605	920	"res_0"	"int"	32	0	0	0
4606	920	"arg_1"	"varchar"	0	0	1	1
4607	920	"arg_2"	"varchar"	0	0	1	2
4608	921	"res_0"	"int"	32	0	0	0
4609	921	"arg_1"	"varchar"	0	0	1	1
4610	921	"arg_2"	"varchar"	0	0	1	2
4611	921	"arg_3"	"int"	32	0	1	3
4612	922	"res_0"	"varchar"	0	0	0	0
4613	922	"arg_1"	"varchar"	0	0	1	1
4614	922	"arg_2"	"varchar"	0	0	1	2
4615	922	"arg_3"	"int"	32	0	1	3
4616	923	"res_0"	"varchar"	0	0	0	0
4617	923	"arg_1"	"varchar"	0	0	1	1
4618	923	"arg_2"	"int"	32	0	1	2
4619	924	"res_0"	"varchar"	0	0	0	0
4620	924	"arg_1"	"varchar"	0	0	1	1
4621	924	"arg_2"	"int"	32	0	1	2
4622	924	"arg_3"	"int"	32	0	1	3
4623	925	"res_0"	"boolean"	1	0	0	0
4624	925	"arg_1"	"varchar"	0	0	1	1
4625	925	"arg_2"	"varchar"	0	0	1	2
4626	926	"res_0"	"boolean"	1	0	0	0
4627	926	"arg_1"	"varchar"	0	0	1	1
4628	926	"arg_2"	"varchar"	0	0	1	2
4629	926	"arg_3"	"varchar"	0	0	1	3
4630	927	"res_0"	"boolean"	1	0	0	0
4631	927	"arg_1"	"varchar"	0	0	1	1
4632	927	"arg_2"	"varchar"	0	0	1	2
4633	928	"res_0"	"boolean"	1	0	0	0
4634	928	"arg_1"	"varchar"	0	0	1	1
4635	928	"arg_2"	"varchar"	0	0	1	2
4636	928	"arg_3"	"varchar"	0	0	1	3
4637	929	"res_0"	"boolean"	1	0	0	0
4638	929	"arg_1"	"varchar"	0	0	1	1
4639	929	"arg_2"	"varchar"	0	0	1	2
4640	930	"res_0"	"boolean"	1	0	0	0
4641	930	"arg_1"	"varchar"	0	0	1	1
4642	930	"arg_2"	"varchar"	0	0	1	2
4643	930	"arg_3"	"varchar"	0	0	1	3
4644	931	"res_0"	"boolean"	1	0	0	0
4645	931	"arg_1"	"varchar"	0	0	1	1
4646	931	"arg_2"	"varchar"	0	0	1	2
4647	932	"res_0"	"boolean"	1	0	0	0
4648	932	"arg_1"	"varchar"	0	0	1	1
4649	932	"arg_2"	"varchar"	0	0	1	2
4650	932	"arg_3"	"varchar"	0	0	1	3
4651	933	"res_0"	"int"	32	0	0	0
4652	933	"arg_1"	"varchar"	0	0	1	1
4653	933	"arg_2"	"varchar"	0	0	1	2
4654	934	"res_0"	"varchar"	0	0	0	0
4655	934	"arg_1"	"varchar"	0	0	1	1
4656	934	"arg_2"	"int"	32	0	1	2
4657	935	"res_0"	"varchar"	0	0	0	0
4658	935	"arg_1"	"varchar"	0	0	1	1
4659	935	"arg_2"	"varchar"	0	0	1	2
4660	936	"res_0"	"int"	32	0	0	0
4661	936	"arg_1"	"varchar"	0	0	1	1
4662	937	"res_0"	"varchar"	0	0	0	0
4663	937	"arg_1"	"int"	32	0	1	1
4664	938	"res_0"	"int"	32	0	0	0
4665	938	"arg_1"	"varchar"	0	0	1	1
4666	939	"res_0"	"varchar"	0	0	0	0
4667	939	"arg_1"	"varchar"	0	0	1	1
4668	939	"arg_2"	"int"	32	0	1	2
4669	940	"res_0"	"varchar"	0	0	0	0
4670	940	"arg_1"	"varchar"	0	0	1	1
4671	940	"arg_2"	"int"	32	0	1	2
4672	941	"res_0"	"varchar"	0	0	0	0
4673	941	"arg_1"	"varchar"	0	0	1	1
4674	942	"res_0"	"varchar"	0	0	0	0
4675	942	"arg_1"	"varchar"	0	0	1	1
4676	943	"res_0"	"varchar"	0	0	0	0
4677	943	"arg_1"	"varchar"	0	0	1	1
4678	944	"res_0"	"varchar"	0	0	0	0
4679	944	"arg_1"	"varchar"	0	0	1	1
4680	945	"res_0"	"varchar"	0	0	0	0
4681	945	"arg_1"	"varchar"	0	0	1	1
4682	946	"res_0"	"varchar"	0	0	0	0
4683	946	"arg_1"	"varchar"	0	0	1	1
4684	946	"arg_2"	"varchar"	0	0	1	2
4685	947	"res_0"	"varchar"	0	0	0	0
4686	947	"arg_1"	"varchar"	0	0	1	1
4687	948	"res_0"	"varchar"	0	0	0	0
4688	948	"arg_1"	"varchar"	0	0	1	1
4689	948	"arg_2"	"varchar"	0	0	1	2
4690	949	"res_0"	"varchar"	0	0	0	0
4691	949	"arg_1"	"varchar"	0	0	1	1
4692	950	"res_0"	"varchar"	0	0	0	0
4693	950	"arg_1"	"varchar"	0	0	1	1
4694	950	"arg_2"	"varchar"	0	0	1	2
4695	951	"res_0"	"varchar"	0	0	0	0
4696	951	"arg_1"	"varchar"	0	0	1	1
4697	951	"arg_2"	"int"	32	0	1	2
4698	952	"res_0"	"varchar"	0	0	0	0
4699	952	"arg_1"	"varchar"	0	0	1	1
4700	952	"arg_2"	"int"	32	0	1	2
4701	952	"arg_3"	"varchar"	0	0	1	3
4702	953	"res_0"	"varchar"	0	0	0	0
4703	953	"arg_1"	"varchar"	0	0	1	1
4704	953	"arg_2"	"int"	32	0	1	2
4705	954	"res_0"	"varchar"	0	0	0	0
4706	954	"arg_1"	"varchar"	0	0	1	1
4707	954	"arg_2"	"int"	32	0	1	2
4708	954	"arg_3"	"varchar"	0	0	1	3
4709	955	"res_0"	"varchar"	0	0	0	0
4710	955	"arg_1"	"varchar"	0	0	1	1
4711	955	"arg_2"	"int"	32	0	1	2
4712	955	"arg_3"	"int"	32	0	1	3
4713	955	"arg_4"	"varchar"	0	0	1	4
4714	956	"res_0"	"varchar"	0	0	0	0
4715	956	"arg_1"	"varchar"	0	0	1	1
4716	956	"arg_2"	"varchar"	0	0	1	2
4717	956	"arg_3"	"varchar"	0	0	1	3
4718	957	"res_0"	"varchar"	0	0	0	0
4719	957	"arg_1"	"varchar"	0	0	1	1
4720	957	"arg_2"	"int"	32	0	1	2
4721	958	"res_0"	"varchar"	0	0	0	0
4722	958	"arg_1"	"int"	32	0	1	1
4723	959	"res_0"	"int"	32	0	0	0
4724	959	"arg_1"	"varchar"	0	0	1	1
4725	960	"res_0"	"int"	32	0	0	0
4726	960	"arg_1"	"varchar"	0	0	1	1
4727	961	"res_0"	"int"	32	0	0	0
4728	961	"arg_1"	"varchar"	0	0	1	1
4729	962	"res_0"	"varchar"	0	0	0	0
4730	962	"arg_1"	"varchar"	0	0	1	1
4731	963	"res_0"	"int"	32	0	0	0
4732	963	"arg_1"	"varchar"	0	0	1	1
4733	963	"arg_2"	"varchar"	0	0	1	2
4734	964	"res_0"	"int"	32	0	0	0
4735	964	"arg_1"	"varchar"	0	0	1	1
4736	964	"arg_2"	"varchar"	0	0	1	2
4737	965	"res_0"	"int"	32	0	0	0
4738	965	"arg_1"	"varchar"	0	0	1	1
4739	965	"arg_2"	"varchar"	0	0	1	2
4740	966	"res_0"	"double"	53	0	0	0
4741	966	"arg_1"	"varchar"	0	0	1	1
4742	966	"arg_2"	"varchar"	0	0	1	2
4743	967	"res_0"	"varchar"	0	0	0	0
4744	967	"arg_1"	"varchar"	0	0	1	1
4745	968	"res_0"	"int"	32	0	0	0
4746	968	"arg_1"	"varchar"	0	0	1	1
4747	968	"arg_2"	"varchar"	0	0	1	2
4748	969	"res_0"	"int"	32	0	0	0
4749	969	"arg_1"	"varchar"	0	0	1	1
4750	969	"arg_2"	"varchar"	0	0	1	2
4751	969	"arg_3"	"int"	32	0	1	3
4752	969	"arg_4"	"int"	32	0	1	4
4753	969	"arg_5"	"int"	32	0	1	5
4754	970	"res_0"	"tinyint"	8	0	0	0
4755	970	"arg_1"	"clob"	0	0	1	1
4756	970	"arg_2"	"boolean"	1	0	1	2
4757	971	"res_0"	"smallint"	16	0	0	0
4758	971	"arg_1"	"clob"	0	0	1	1
4759	971	"arg_2"	"boolean"	1	0	1	2
4760	972	"res_0"	"int"	32	0	0	0
4761	972	"arg_1"	"clob"	0	0	1	1
4762	972	"arg_2"	"boolean"	1	0	1	2
4763	973	"res_0"	"clob"	0	0	0	0
4764	973	"arg_1"	"clob"	0	0	1	1
4765	974	"res_0"	"int"	32	0	0	0
4766	974	"arg_1"	"clob"	0	0	1	1
4767	974	"arg_2"	"clob"	0	0	1	2
4768	975	"res_0"	"int"	32	0	0	0
4769	975	"arg_1"	"clob"	0	0	1	1
4770	975	"arg_2"	"clob"	0	0	1	2
4771	975	"arg_3"	"int"	32	0	1	3
4772	976	"res_0"	"clob"	0	0	0	0
4773	976	"arg_1"	"clob"	0	0	1	1
4774	976	"arg_2"	"clob"	0	0	1	2
4775	976	"arg_3"	"int"	32	0	1	3
4776	977	"res_0"	"clob"	0	0	0	0
4777	977	"arg_1"	"clob"	0	0	1	1
4778	977	"arg_2"	"int"	32	0	1	2
4779	978	"res_0"	"clob"	0	0	0	0
4780	978	"arg_1"	"clob"	0	0	1	1
4781	978	"arg_2"	"int"	32	0	1	2
4782	978	"arg_3"	"int"	32	0	1	3
4783	979	"res_0"	"boolean"	1	0	0	0
4784	979	"arg_1"	"clob"	0	0	1	1
4785	979	"arg_2"	"clob"	0	0	1	2
4786	980	"res_0"	"boolean"	1	0	0	0
4787	980	"arg_1"	"clob"	0	0	1	1
4788	980	"arg_2"	"clob"	0	0	1	2
4789	980	"arg_3"	"clob"	0	0	1	3
4790	981	"res_0"	"boolean"	1	0	0	0
4791	981	"arg_1"	"clob"	0	0	1	1
4792	981	"arg_2"	"clob"	0	0	1	2
4793	982	"res_0"	"boolean"	1	0	0	0
4794	982	"arg_1"	"clob"	0	0	1	1
4795	982	"arg_2"	"clob"	0	0	1	2
4796	982	"arg_3"	"clob"	0	0	1	3
4797	983	"res_0"	"boolean"	1	0	0	0
4798	983	"arg_1"	"clob"	0	0	1	1
4799	983	"arg_2"	"clob"	0	0	1	2
4800	984	"res_0"	"boolean"	1	0	0	0
4801	984	"arg_1"	"clob"	0	0	1	1
4802	984	"arg_2"	"clob"	0	0	1	2
4803	984	"arg_3"	"clob"	0	0	1	3
4804	985	"res_0"	"boolean"	1	0	0	0
4805	985	"arg_1"	"clob"	0	0	1	1
4806	985	"arg_2"	"clob"	0	0	1	2
4807	986	"res_0"	"boolean"	1	0	0	0
4808	986	"arg_1"	"clob"	0	0	1	1
4809	986	"arg_2"	"clob"	0	0	1	2
4810	986	"arg_3"	"clob"	0	0	1	3
4811	987	"res_0"	"int"	32	0	0	0
4812	987	"arg_1"	"clob"	0	0	1	1
4813	987	"arg_2"	"clob"	0	0	1	2
4814	988	"res_0"	"clob"	0	0	0	0
4815	988	"arg_1"	"clob"	0	0	1	1
4816	988	"arg_2"	"int"	32	0	1	2
4817	989	"res_0"	"clob"	0	0	0	0
4818	989	"arg_1"	"clob"	0	0	1	1
4819	989	"arg_2"	"clob"	0	0	1	2
4820	990	"res_0"	"int"	32	0	0	0
4821	990	"arg_1"	"clob"	0	0	1	1
4822	991	"res_0"	"clob"	0	0	0	0
4823	991	"arg_1"	"int"	32	0	1	1
4824	992	"res_0"	"int"	32	0	0	0
4825	992	"arg_1"	"clob"	0	0	1	1
4826	993	"res_0"	"clob"	0	0	0	0
4827	993	"arg_1"	"clob"	0	0	1	1
4828	993	"arg_2"	"int"	32	0	1	2
4829	994	"res_0"	"clob"	0	0	0	0
4830	994	"arg_1"	"clob"	0	0	1	1
4831	994	"arg_2"	"int"	32	0	1	2
4832	995	"res_0"	"clob"	0	0	0	0
4833	995	"arg_1"	"clob"	0	0	1	1
4834	996	"res_0"	"clob"	0	0	0	0
4835	996	"arg_1"	"clob"	0	0	1	1
4836	997	"res_0"	"clob"	0	0	0	0
4837	997	"arg_1"	"clob"	0	0	1	1
4838	998	"res_0"	"clob"	0	0	0	0
4839	998	"arg_1"	"clob"	0	0	1	1
4840	999	"res_0"	"clob"	0	0	0	0
4841	999	"arg_1"	"clob"	0	0	1	1
4842	1000	"res_0"	"clob"	0	0	0	0
4843	1000	"arg_1"	"clob"	0	0	1	1
4844	1000	"arg_2"	"clob"	0	0	1	2
4845	1001	"res_0"	"clob"	0	0	0	0
4846	1001	"arg_1"	"clob"	0	0	1	1
4847	1002	"res_0"	"clob"	0	0	0	0
4848	1002	"arg_1"	"clob"	0	0	1	1
4849	1002	"arg_2"	"clob"	0	0	1	2
4850	1003	"res_0"	"clob"	0	0	0	0
4851	1003	"arg_1"	"clob"	0	0	1	1
4852	1004	"res_0"	"clob"	0	0	0	0
4853	1004	"arg_1"	"clob"	0	0	1	1
4854	1004	"arg_2"	"clob"	0	0	1	2
4855	1005	"res_0"	"clob"	0	0	0	0
4856	1005	"arg_1"	"clob"	0	0	1	1
4857	1005	"arg_2"	"int"	32	0	1	2
4858	1006	"res_0"	"clob"	0	0	0	0
4859	1006	"arg_1"	"clob"	0	0	1	1
4860	1006	"arg_2"	"int"	32	0	1	2
4861	1006	"arg_3"	"clob"	0	0	1	3
4862	1007	"res_0"	"clob"	0	0	0	0
4863	1007	"arg_1"	"clob"	0	0	1	1
4864	1007	"arg_2"	"int"	32	0	1	2
4865	1008	"res_0"	"clob"	0	0	0	0
4866	1008	"arg_1"	"clob"	0	0	1	1
4867	1008	"arg_2"	"int"	32	0	1	2
4868	1008	"arg_3"	"clob"	0	0	1	3
4869	1009	"res_0"	"clob"	0	0	0	0
4870	1009	"arg_1"	"clob"	0	0	1	1
4871	1009	"arg_2"	"int"	32	0	1	2
4872	1009	"arg_3"	"int"	32	0	1	3
4873	1009	"arg_4"	"clob"	0	0	1	4
4874	1010	"res_0"	"clob"	0	0	0	0
4875	1010	"arg_1"	"clob"	0	0	1	1
4876	1010	"arg_2"	"clob"	0	0	1	2
4877	1010	"arg_3"	"clob"	0	0	1	3
4878	1011	"res_0"	"clob"	0	0	0	0
4879	1011	"arg_1"	"clob"	0	0	1	1
4880	1011	"arg_2"	"int"	32	0	1	2
4881	1012	"res_0"	"clob"	0	0	0	0
4882	1012	"arg_1"	"int"	32	0	1	1
4883	1013	"res_0"	"int"	32	0	0	0
4884	1013	"arg_1"	"clob"	0	0	1	1
4885	1014	"res_0"	"int"	32	0	0	0
4886	1014	"arg_1"	"clob"	0	0	1	1
4887	1015	"res_0"	"int"	32	0	0	0
4888	1015	"arg_1"	"clob"	0	0	1	1
4889	1016	"res_0"	"clob"	0	0	0	0
4890	1016	"arg_1"	"clob"	0	0	1	1
4891	1017	"res_0"	"int"	32	0	0	0
4892	1017	"arg_1"	"clob"	0	0	1	1
4893	1017	"arg_2"	"clob"	0	0	1	2
4894	1018	"res_0"	"int"	32	0	0	0
4895	1018	"arg_1"	"clob"	0	0	1	1
4896	1018	"arg_2"	"clob"	0	0	1	2
4897	1019	"res_0"	"int"	32	0	0	0
4898	1019	"arg_1"	"clob"	0	0	1	1
4899	1019	"arg_2"	"clob"	0	0	1	2
4900	1020	"res_0"	"double"	53	0	0	0
4901	1020	"arg_1"	"clob"	0	0	1	1
4902	1020	"arg_2"	"clob"	0	0	1	2
4903	1021	"res_0"	"clob"	0	0	0	0
4904	1021	"arg_1"	"clob"	0	0	1	1
4905	1022	"res_0"	"int"	32	0	0	0
4906	1022	"arg_1"	"clob"	0	0	1	1
4907	1022	"arg_2"	"clob"	0	0	1	2
4908	1023	"res_0"	"int"	32	0	0	0
4909	1023	"arg_1"	"clob"	0	0	1	1
4910	1023	"arg_2"	"clob"	0	0	1	2
4911	1023	"arg_3"	"int"	32	0	1	3
4912	1023	"arg_4"	"int"	32	0	1	4
4913	1023	"arg_5"	"int"	32	0	1	5
4914	1024	"res_0"	"table"	0	0	0	0
4915	1024	"arg_1"	"varchar"	0	0	1	1
4916	1024	"arg_2"	"varchar"	0	0	1	2
4917	1024	"arg_3"	"varchar"	0	0	1	3
4918	1024	"arg_4"	"varchar"	0	0	1	4
4919	1024	"arg_5"	"varchar"	0	0	1	5
4920	1024	"arg_6"	"varchar"	0	0	1	6
4921	1024	"arg_7"	"bigint"	64	0	1	7
4922	1024	"arg_8"	"bigint"	64	0	1	8
4923	1024	"arg_9"	"int"	32	0	1	9
4924	1025	"res_0"	"table"	0	0	0	0
4925	1025	"arg_1"	"varchar"	0	0	1	1
4926	1025	"arg_2"	"varchar"	0	0	1	2
4927	26	"res"	"boolean"	1	0	0	0
4928	26	"arg"	"oid"	63	0	1	1
4929	38	"res"	"any"	0	0	0	0
4930	38	"arg"	"any"	0	0	1	1
4931	39	"res"	"boolean"	1	0	0	0
4932	39	"arg"	"any"	0	0	1	1
4933	40	"res"	"boolean"	1	0	0	0
4934	40	"arg"	"any"	0	0	1	1
4935	45	"res"	"any"	0	0	0	0
4936	45	"arg"	"any"	0	0	1	1
4937	46	"res"	"any"	0	0	0	0
4938	46	"arg"	"any"	0	0	1	1
4939	50	"res"	"bigint"	64	0	0	0
4940	50	"arg"	"tinyint"	8	0	1	1
4941	51	"res"	"bigint"	64	0	0	0
4942	51	"arg"	"smallint"	16	0	1	1
4943	52	"res"	"bigint"	64	0	0	0
4944	52	"arg"	"int"	32	0	1	1
4945	53	"res"	"bigint"	64	0	0	0
4946	53	"arg"	"bigint"	64	0	1	1
4947	54	"res"	"decimal"	19	0	0	0
4948	54	"arg"	"decimal"	2	0	1	1
4949	55	"res"	"decimal"	19	0	0	0
4950	55	"arg"	"decimal"	4	0	1	1
4951	56	"res"	"decimal"	19	0	0	0
4952	56	"arg"	"decimal"	9	0	1	1
4953	57	"res"	"decimal"	19	0	0	0
4954	57	"arg"	"decimal"	19	0	1	1
4955	58	"res"	"bigint"	64	0	0	0
4956	58	"arg"	"tinyint"	8	0	1	1
4957	59	"res"	"bigint"	64	0	0	0
4958	59	"arg"	"smallint"	16	0	1	1
4959	60	"res"	"bigint"	64	0	0	0
4960	60	"arg"	"int"	32	0	1	1
4961	61	"res"	"bigint"	64	0	0	0
4962	61	"arg"	"bigint"	64	0	1	1
4963	62	"res"	"decimal"	19	0	0	0
4964	62	"arg"	"decimal"	2	0	1	1
4965	63	"res"	"decimal"	19	0	0	0
4966	63	"arg"	"decimal"	4	0	1	1
4967	64	"res"	"decimal"	19	0	0	0
4968	64	"arg"	"decimal"	9	0	1	1
4969	65	"res"	"decimal"	19	0	0	0
4970	65	"arg"	"decimal"	19	0	1	1
4971	77	"res"	"real"	24	0	0	0
4972	77	"arg"	"real"	24	0	1	1
4973	78	"res"	"real"	24	0	0	0
4974	78	"arg"	"real"	24	0	1	1
4975	79	"res"	"double"	53	0	0	0
4976	79	"arg"	"double"	53	0	1	1
4977	80	"res"	"double"	53	0	0	0
4978	80	"arg"	"double"	53	0	1	1
4979	81	"res"	"month_interval"	32	0	0	0
4980	81	"arg"	"month_interval"	32	0	1	1
4981	82	"res"	"sec_interval"	13	0	0	0
4982	82	"arg"	"sec_interval"	13	0	1	1
4983	83	"res"	"double"	53	0	0	0
4984	83	"arg"	"double"	53	0	1	1
4985	84	"res"	"bigint"	64	0	0	0
4986	85	"res"	"bigint"	64	0	0	0
5009	5008	"name"	"varchar"	1024	0	0	0
5010	5008	"value"	"varchar"	2048	0	0	1
5012	5011	"name"	"varchar"	1024	0	0	0
5018	5017	"name"	"varchar"	2048	0	0	0
5038	5037	"val"	"clob"	0	0	1	0
5039	5037	"pat"	"clob"	0	0	1	1
5040	5037	"esc"	"clob"	0	0	1	2
5043	5042	"val"	"clob"	0	0	1	0
5044	5042	"pat"	"clob"	0	0	1	1
5045	5042	"esc"	"clob"	0	0	1	2
5048	5047	"val"	"clob"	0	0	1	0
5049	5047	"pat"	"clob"	0	0	1	1
5052	5051	"val"	"clob"	0	0	1	0
5053	5051	"pat"	"clob"	0	0	1	1
5056	5055	"result"	"double"	53	0	0	0
5057	5055	"r"	"double"	53	0	1	1
5060	5059	"result"	"double"	53	0	0	0
5061	5059	"d"	"double"	53	0	1	1
5067	5066	"result"	"clob"	0	0	0	0
5068	5066	"theurl"	"url"	0	0	1	1
5071	5070	"result"	"clob"	0	0	0	0
5072	5070	"theurl"	"url"	0	0	1	1
5075	5074	"result"	"clob"	0	0	0	0
5076	5074	"theurl"	"url"	0	0	1	1
5079	5078	"result"	"clob"	0	0	0	0
5080	5078	"theurl"	"url"	0	0	1	1
5083	5082	"result"	"clob"	0	0	0	0
5084	5082	"theurl"	"url"	0	0	1	1
5087	5086	"result"	"clob"	0	0	0	0
5088	5086	"theurl"	"url"	0	0	1	1
5091	5090	"result"	"clob"	0	0	0	0
5092	5090	"theurl"	"url"	0	0	1	1
5095	5094	"result"	"clob"	0	0	0	0
5096	5094	"theurl"	"url"	0	0	1	1
5099	5098	"result"	"clob"	0	0	0	0
5100	5098	"theurl"	"url"	0	0	1	1
5103	5102	"result"	"clob"	0	0	0	0
5104	5102	"theurl"	"url"	0	0	1	1
5107	5106	"result"	"clob"	0	0	0	0
5108	5106	"theurl"	"url"	0	0	1	1
5111	5110	"result"	"clob"	0	0	0	0
5112	5110	"theurl"	"url"	0	0	1	1
5115	5114	"result"	"clob"	0	0	0	0
5116	5114	"theurl"	"url"	0	0	1	1
5119	5118	"result"	"boolean"	1	0	0	0
5120	5118	"theurl"	"url"	0	0	1	1
5123	5122	"result"	"url"	0	0	0	0
5124	5122	"protocol"	"clob"	0	0	1	1
5125	5122	"hostname"	"clob"	0	0	1	2
5126	5122	"port"	"int"	32	0	1	3
5127	5122	"file"	"clob"	0	0	1	4
5130	5129	"result"	"url"	0	0	0	0
5131	5129	"protocol"	"clob"	0	0	1	1
5132	5129	"hostname"	"clob"	0	0	1	2
5133	5129	"file"	"clob"	0	0	1	3
5136	5135	"result"	"date"	0	0	0	0
5137	5135	"s"	"clob"	0	0	1	1
5138	5135	"format"	"clob"	0	0	1	2
5141	5140	"result"	"clob"	0	0	0	0
5142	5140	"d"	"date"	0	0	1	1
5143	5140	"format"	"clob"	0	0	1	2
5146	5145	"result"	"time"	1	0	0	0
5147	5145	"s"	"clob"	0	0	1	1
5148	5145	"format"	"clob"	0	0	1	2
5151	5150	"result"	"clob"	0	0	0	0
5152	5150	"d"	"time"	1	0	1	1
5153	5150	"format"	"clob"	0	0	1	2
5156	5155	"result"	"timestamp"	7	0	0	0
5157	5155	"s"	"clob"	0	0	1	1
5158	5155	"format"	"clob"	0	0	1	2
5161	5160	"result"	"clob"	0	0	0	0
5162	5160	"d"	"timestamp"	7	0	1	1
5163	5160	"format"	"clob"	0	0	1	2
5167	5166	"result"	"inet"	0	0	0	0
5168	5166	"p"	"inet"	0	0	1	1
5171	5170	"result"	"clob"	0	0	0	0
5172	5170	"p"	"inet"	0	0	1	1
5175	5174	"result"	"int"	32	0	0	0
5176	5174	"p"	"inet"	0	0	1	1
5179	5178	"result"	"inet"	0	0	0	0
5180	5178	"p"	"inet"	0	0	1	1
5181	5178	"mask"	"int"	32	0	1	2
5184	5183	"result"	"inet"	0	0	0	0
5185	5183	"p"	"inet"	0	0	1	1
5188	5187	"result"	"inet"	0	0	0	0
5189	5187	"p"	"inet"	0	0	1	1
5192	5191	"result"	"inet"	0	0	0	0
5193	5191	"p"	"inet"	0	0	1	1
5196	5195	"result"	"clob"	0	0	0	0
5197	5195	"p"	"inet"	0	0	1	1
5200	5199	"result"	"clob"	0	0	0	0
5201	5199	"p"	"inet"	0	0	1	1
5204	5203	"result"	"boolean"	1	0	0	0
5205	5203	"i1"	"inet"	0	0	1	1
5206	5203	"i2"	"inet"	0	0	1	2
5209	5208	"result"	"boolean"	1	0	0	0
5210	5208	"i1"	"inet"	0	0	1	1
5211	5208	"i2"	"inet"	0	0	1	2
5214	5213	"result"	"boolean"	1	0	0	0
5215	5213	"i1"	"inet"	0	0	1	1
5216	5213	"i2"	"inet"	0	0	1	2
5219	5218	"result"	"boolean"	1	0	0	0
5220	5218	"i1"	"inet"	0	0	1	1
5221	5218	"i2"	"inet"	0	0	1	2
5224	5223	"id"	"oid"	63	0	0	0
5225	5223	"owner"	"clob"	0	0	0	1
5226	5223	"defined"	"timestamp"	7	0	0	2
5227	5223	"query"	"clob"	0	0	0	3
5228	5223	"pipe"	"clob"	0	0	0	4
5229	5223	"plan"	"clob"	0	0	0	5
5230	5223	"mal"	"int"	32	0	0	6
5231	5223	"optimize"	"bigint"	64	0	0	7
5234	5233	"id"	"oid"	63	0	0	0
5235	5233	"start"	"timestamp"	7	0	0	1
5236	5233	"stop"	"timestamp"	7	0	0	2
5237	5233	"arguments"	"clob"	0	0	0	3
5238	5233	"tuples"	"bigint"	64	0	0	4
5239	5233	"run"	"bigint"	64	0	0	5
5240	5233	"ship"	"bigint"	64	0	0	6
5241	5233	"cpu"	"int"	32	0	0	7
5242	5233	"io"	"int"	32	0	0	8
5288	5287	"threshold"	"smallint"	16	0	1	0
5293	5292	"event"	"int"	32	0	0	0
5294	5292	"clk"	"varchar"	20	0	0	1
5295	5292	"pc"	"varchar"	50	0	0	2
5296	5292	"thread"	"int"	32	0	0	3
5297	5292	"ticks"	"bigint"	64	0	0	4
5298	5292	"rrsmb"	"bigint"	64	0	0	5
5299	5292	"vmmb"	"bigint"	64	0	0	6
5300	5292	"reads"	"bigint"	64	0	0	7
5301	5292	"writes"	"bigint"	64	0	0	8
5302	5292	"minflt"	"bigint"	64	0	0	9
5303	5292	"majflt"	"bigint"	64	0	0	10
5304	5292	"nvcsw"	"bigint"	64	0	0	11
5305	5292	"stmt"	"clob"	0	0	0	12
5323	5322	"result"	"timestamp"	7	0	0	0
5324	5322	"sec"	"bigint"	64	0	1	1
5327	5326	"result"	"timestamp"	7	0	0	0
5328	5326	"sec"	"int"	32	0	1	1
5331	5330	"result"	"int"	32	0	0	0
5332	5330	"ts"	"timestamp"	7	0	1	1
5335	5334	"result"	"int"	32	0	0	0
5336	5334	"ts"	"timestamptz"	7	0	1	1
5339	5338	"sys"	"clob"	0	0	1	0
5340	5338	"tab"	"clob"	0	0	1	1
5343	5342	"sys"	"clob"	0	0	1	0
5344	5342	"tab"	"clob"	0	0	1	1
5347	5346	"sys"	"clob"	0	0	1	0
5348	5346	"tab"	"clob"	0	0	1	1
5351	5350	"sch"	"varchar"	100	0	0	0
5352	5350	"usr"	"varchar"	100	0	0	1
5353	5350	"dep_type"	"varchar"	32	0	0	2
5356	5355	"sch"	"varchar"	100	0	0	0
5357	5355	"usr"	"varchar"	100	0	0	1
5358	5355	"dep_type"	"varchar"	32	0	0	2
5361	5360	"sch"	"varchar"	100	0	0	0
5362	5360	"usr"	"varchar"	100	0	0	1
5363	5360	"dep_type"	"varchar"	32	0	0	2
5366	5365	"sch"	"varchar"	100	0	0	0
5367	5365	"usr"	"varchar"	100	0	0	1
5368	5365	"dep_type"	"varchar"	32	0	0	2
5371	5370	"sch"	"varchar"	100	0	0	0
5372	5370	"usr"	"varchar"	100	0	0	1
5373	5370	"dep_type"	"varchar"	32	0	0	2
5376	5375	"sch"	"varchar"	100	0	0	0
5377	5375	"usr"	"varchar"	100	0	0	1
5378	5375	"dep_type"	"varchar"	32	0	0	2
5381	5380	"sch"	"varchar"	100	0	0	0
5382	5380	"usr"	"varchar"	100	0	0	1
5383	5380	"dep_type"	"varchar"	32	0	0	2
5386	5385	"sch"	"varchar"	100	0	0	0
5387	5385	"usr"	"varchar"	100	0	0	1
5388	5385	"dep_type"	"varchar"	32	0	0	2
5391	5390	"sch"	"varchar"	100	0	0	0
5392	5390	"usr"	"varchar"	100	0	0	1
5393	5390	"dep_type"	"varchar"	32	0	0	2
5396	5395	"sch"	"varchar"	100	0	0	0
5397	5395	"usr"	"varchar"	100	0	0	1
5398	5395	"dep_type"	"varchar"	32	0	0	2
5401	5400	"sch"	"varchar"	100	0	0	0
5402	5400	"usr"	"varchar"	100	0	0	1
5403	5400	"dep_type"	"varchar"	32	0	0	2
5406	5405	"sch"	"varchar"	100	0	0	0
5407	5405	"usr"	"varchar"	100	0	0	1
5408	5405	"dep_type"	"varchar"	32	0	0	2
5411	5410	"sch"	"varchar"	100	0	0	0
5412	5410	"usr"	"varchar"	100	0	0	1
5413	5410	"dep_type"	"varchar"	32	0	0	2
5416	5415	"sch"	"varchar"	100	0	0	0
5417	5415	"usr"	"varchar"	100	0	0	1
5418	5415	"dep_type"	"varchar"	32	0	0	2
5421	5420	"sch"	"varchar"	100	0	0	0
5422	5420	"usr"	"varchar"	100	0	0	1
5423	5420	"dep_type"	"varchar"	32	0	0	2
5426	5425	"sch"	"varchar"	100	0	0	0
5427	5425	"usr"	"varchar"	100	0	0	1
5428	5425	"dep_type"	"varchar"	32	0	0	2
5431	5430	"sch"	"varchar"	100	0	0	0
5432	5430	"usr"	"varchar"	100	0	0	1
5433	5430	"dep_type"	"varchar"	32	0	0	2
5436	5435	"result"	"clob"	0	0	0	0
5437	5435	"username"	"clob"	0	0	1	1
5440	5439	"user"	"clob"	0	0	0	0
5441	5439	"login"	"timestamp"	7	0	0	1
5442	5439	"sessiontimeout"	"bigint"	64	0	0	2
5443	5439	"lastcommand"	"timestamp"	7	0	0	3
5444	5439	"querytimeout"	"bigint"	64	0	0	4
5445	5439	"active"	"boolean"	1	0	0	5
5456	5455	"delay"	"tinyint"	8	0	1	0
5459	5458	"delay"	"tinyint"	8	0	1	0
5460	5458	"force"	"boolean"	1	0	1	1
5463	5462	"query"	"bigint"	64	0	1	0
5466	5465	"query"	"bigint"	64	0	1	0
5467	5465	"session"	"bigint"	64	0	1	1
5470	5469	"timeout"	"bigint"	64	0	1	0
5473	5472	"result"	"varchar"	32	0	0	0
5474	5472	"s1"	"varchar"	32	0	1	1
5475	5472	"st"	"int"	32	0	1	2
5476	5472	"len"	"int"	32	0	1	3
5477	5472	"s3"	"varchar"	32	0	1	4
5480	5479	"result"	"double"	53	0	0	0
5481	5479	"num"	"double"	53	0	1	1
5482	5479	"prc"	"int"	32	0	1	2
5485	5484	"result"	"double"	53	0	0	0
5486	5484	"num"	"double"	53	0	1	1
5487	5484	"prc"	"int"	32	0	1	2
5488	5484	"truncat"	"int"	32	0	1	3
5491	5490	"result"	"clob"	0	0	0	0
5492	5490	"num"	"double"	53	0	1	1
5493	5490	"prc"	"int"	32	0	1	2
5494	5490	"truncat"	"int"	32	0	1	3
5497	5496	"result"	"double"	53	0	0	0
5498	5496	"pdec"	"double"	53	0	1	1
5499	5496	"pradius"	"double"	53	0	1	2
5502	5501	"result"	"oid"	63	0	0	0
5503	5501	"x"	"int"	32	0	1	1
5504	5501	"y"	"int"	32	0	1	2
5507	5506	"result"	"int"	32	0	0	0
5508	5506	"z"	"oid"	63	0	1	1
5511	5510	"result"	"int"	32	0	0	0
5512	5510	"z"	"oid"	63	0	1	1
5515	5514	"rewrite"	"clob"	0	0	0	0
5516	5514	"count"	"int"	32	0	0	1
5519	5518	"query"	"clob"	0	0	0	0
5520	5518	"count"	"int"	32	0	0	1
5523	5522	"filename"	"clob"	0	0	1	0
5526	5525	"name"	"clob"	0	0	0	0
5527	5525	"def"	"clob"	0	0	0	1
5528	5525	"status"	"clob"	0	0	0	2
5536	5535	"name"	"clob"	0	0	0	0
5537	5535	"value"	"clob"	0	0	0	1
5544	5543	"id"	"int"	32	0	0	0
5545	5543	"name"	"clob"	0	0	0	1
5546	5543	"ttype"	"clob"	0	0	0	2
5547	5543	"count"	"bigint"	64	0	0	3
5548	5543	"refcnt"	"int"	32	0	0	4
5549	5543	"lrefcnt"	"int"	32	0	0	5
5550	5543	"location"	"clob"	0	0	0	6
5551	5543	"heat"	"int"	32	0	0	7
5552	5543	"dirty"	"clob"	0	0	0	8
5553	5543	"status"	"clob"	0	0	0	9
5554	5543	"kind"	"clob"	0	0	0	10
5557	5556	"signature"	"clob"	0	0	0	0
5558	5556	"address"	"clob"	0	0	0	1
5559	5556	"comment"	"clob"	0	0	0	2
5562	5561	"ra_stmt"	"clob"	0	0	1	0
5563	5561	"opt"	"boolean"	1	0	1	1
5568	5567	"result"	"int"	32	0	0	0
5569	5567	"debug"	"int"	32	0	1	1
5572	5571	"qtag"	"bigint"	64	0	0	0
5573	5571	"user"	"clob"	0	0	0	1
5574	5571	"started"	"timestamp"	7	0	0	2
5575	5571	"estimate"	"timestamp"	7	0	0	3
5576	5571	"progress"	"int"	32	0	0	4
5577	5571	"status"	"clob"	0	0	0	5
5578	5571	"tag"	"oid"	63	0	0	6
5579	5571	"query"	"clob"	0	0	0	7
5592	5591	"tag"	"int"	32	0	1	0
5595	5594	"tag"	"int"	32	0	1	0
5598	5597	"tag"	"int"	32	0	1	0
5601	5600	"tag"	"bigint"	64	0	1	0
5604	5603	"tag"	"bigint"	64	0	1	0
5607	5606	"tag"	"bigint"	64	0	1	0
5610	5609	"rowid"	"bigint"	64	0	0	0
5611	5609	"fldid"	"int"	32	0	0	1
5612	5609	"message"	"clob"	0	0	0	2
5613	5609	"input"	"clob"	0	0	0	3
5624	5623	"result"	"double"	53	0	0	0
5625	5623	"val"	"tinyint"	8	0	1	1
5628	5627	"result"	"double"	53	0	0	0
5629	5627	"val"	"smallint"	16	0	1	1
5632	5631	"result"	"double"	53	0	0	0
5633	5631	"val"	"int"	32	0	1	1
5636	5635	"result"	"double"	53	0	0	0
5637	5635	"val"	"bigint"	64	0	1	1
5640	5639	"result"	"double"	53	0	0	0
5641	5639	"val"	"real"	24	0	1	1
5644	5643	"result"	"double"	53	0	0	0
5645	5643	"val"	"double"	53	0	1	1
5648	5647	"result"	"double"	53	0	0	0
5649	5647	"val"	"date"	0	0	1	1
5652	5651	"result"	"double"	53	0	0	0
5653	5651	"val"	"time"	1	0	1	1
5656	5655	"result"	"double"	53	0	0	0
5657	5655	"val"	"timestamp"	7	0	1	1
5660	5659	"result"	"double"	53	0	0	0
5661	5659	"val"	"tinyint"	8	0	1	1
5664	5663	"result"	"double"	53	0	0	0
5665	5663	"val"	"smallint"	16	0	1	1
5668	5667	"result"	"double"	53	0	0	0
5669	5667	"val"	"int"	32	0	1	1
5672	5671	"result"	"double"	53	0	0	0
5673	5671	"val"	"bigint"	64	0	1	1
5676	5675	"result"	"double"	53	0	0	0
5677	5675	"val"	"real"	24	0	1	1
5680	5679	"result"	"double"	53	0	0	0
5681	5679	"val"	"double"	53	0	1	1
5684	5683	"result"	"double"	53	0	0	0
5685	5683	"val"	"date"	0	0	1	1
5688	5687	"result"	"double"	53	0	0	0
5689	5687	"val"	"time"	1	0	1	1
5692	5691	"result"	"double"	53	0	0	0
5693	5691	"val"	"timestamp"	7	0	1	1
5696	5695	"result"	"double"	53	0	0	0
5697	5695	"val"	"tinyint"	8	0	1	1
5700	5699	"result"	"double"	53	0	0	0
5701	5699	"val"	"smallint"	16	0	1	1
5704	5703	"result"	"double"	53	0	0	0
5705	5703	"val"	"int"	32	0	1	1
5708	5707	"result"	"double"	53	0	0	0
5709	5707	"val"	"bigint"	64	0	1	1
5712	5711	"result"	"double"	53	0	0	0
5713	5711	"val"	"real"	24	0	1	1
5716	5715	"result"	"double"	53	0	0	0
5717	5715	"val"	"double"	53	0	1	1
5720	5719	"result"	"double"	53	0	0	0
5721	5719	"val"	"date"	0	0	1	1
5724	5723	"result"	"double"	53	0	0	0
5725	5723	"val"	"time"	1	0	1	1
5728	5727	"result"	"double"	53	0	0	0
5729	5727	"val"	"timestamp"	7	0	1	1
5732	5731	"result"	"double"	53	0	0	0
5733	5731	"val"	"tinyint"	8	0	1	1
5736	5735	"result"	"double"	53	0	0	0
5737	5735	"val"	"smallint"	16	0	1	1
5740	5739	"result"	"double"	53	0	0	0
5741	5739	"val"	"int"	32	0	1	1
5744	5743	"result"	"double"	53	0	0	0
5745	5743	"val"	"bigint"	64	0	1	1
5748	5747	"result"	"double"	53	0	0	0
5749	5747	"val"	"real"	24	0	1	1
5752	5751	"result"	"double"	53	0	0	0
5753	5751	"val"	"double"	53	0	1	1
5756	5755	"result"	"double"	53	0	0	0
5757	5755	"val"	"date"	0	0	1	1
5760	5759	"result"	"double"	53	0	0	0
5761	5759	"val"	"time"	1	0	1	1
5764	5763	"result"	"double"	53	0	0	0
5765	5763	"val"	"timestamp"	7	0	1	1
5768	5767	"result"	"tinyint"	8	0	0	0
5769	5767	"val"	"tinyint"	8	0	1	1
5772	5771	"result"	"smallint"	16	0	0	0
5773	5771	"val"	"smallint"	16	0	1	1
5776	5775	"result"	"int"	32	0	0	0
5777	5775	"val"	"int"	32	0	1	1
5780	5779	"result"	"bigint"	64	0	0	0
5781	5779	"val"	"bigint"	64	0	1	1
5784	5783	"result"	"decimal"	18	3	0	0
5785	5783	"val"	"decimal"	18	3	1	1
5788	5787	"result"	"real"	24	0	0	0
5789	5787	"val"	"real"	24	0	1	1
5792	5791	"result"	"double"	53	0	0	0
5793	5791	"val"	"double"	53	0	1	1
5796	5795	"result"	"date"	0	0	0	0
5797	5795	"val"	"date"	0	0	1	1
5800	5799	"result"	"time"	1	0	0	0
5801	5799	"val"	"time"	1	0	1	1
5804	5803	"result"	"timestamp"	7	0	0	0
5805	5803	"val"	"timestamp"	7	0	1	1
5808	5807	"result"	"tinyint"	8	0	0	0
5809	5807	"val"	"tinyint"	8	0	1	1
5810	5807	"q"	"double"	53	0	1	2
5813	5812	"result"	"smallint"	16	0	0	0
5814	5812	"val"	"smallint"	16	0	1	1
5815	5812	"q"	"double"	53	0	1	2
5818	5817	"result"	"int"	32	0	0	0
5819	5817	"val"	"int"	32	0	1	1
5820	5817	"q"	"double"	53	0	1	2
5823	5822	"result"	"bigint"	64	0	0	0
5824	5822	"val"	"bigint"	64	0	1	1
5825	5822	"q"	"double"	53	0	1	2
5828	5827	"result"	"decimal"	18	3	0	0
5829	5827	"val"	"decimal"	18	3	1	1
5830	5827	"q"	"double"	53	0	1	2
5833	5832	"result"	"real"	24	0	0	0
5834	5832	"val"	"real"	24	0	1	1
5835	5832	"q"	"double"	53	0	1	2
5838	5837	"result"	"double"	53	0	0	0
5839	5837	"val"	"double"	53	0	1	1
5840	5837	"q"	"double"	53	0	1	2
5843	5842	"result"	"date"	0	0	0	0
5844	5842	"val"	"date"	0	0	1	1
5845	5842	"q"	"double"	53	0	1	2
5848	5847	"result"	"time"	1	0	0	0
5849	5847	"val"	"time"	1	0	1	1
5850	5847	"q"	"double"	53	0	1	2
5853	5852	"result"	"timestamp"	7	0	0	0
5854	5852	"val"	"timestamp"	7	0	1	1
5855	5852	"q"	"double"	53	0	1	2
5858	5857	"result"	"tinyint"	8	0	0	0
5859	5857	"e1"	"tinyint"	8	0	1	1
5860	5857	"e2"	"tinyint"	8	0	1	2
5863	5862	"result"	"smallint"	16	0	0	0
5864	5862	"e1"	"smallint"	16	0	1	1
5865	5862	"e2"	"smallint"	16	0	1	2
5868	5867	"result"	"int"	32	0	0	0
5869	5867	"e1"	"int"	32	0	1	1
5870	5867	"e2"	"int"	32	0	1	2
5873	5872	"result"	"bigint"	64	0	0	0
5874	5872	"e1"	"bigint"	64	0	1	1
5875	5872	"e2"	"bigint"	64	0	1	2
5878	5877	"result"	"real"	24	0	0	0
5879	5877	"e1"	"real"	24	0	1	1
5880	5877	"e2"	"real"	24	0	1	2
5883	5882	"result"	"double"	53	0	0	0
5884	5882	"e1"	"double"	53	0	1	1
5885	5882	"e2"	"double"	53	0	1	2
5901	5900	"result"	"mbr"	0	0	0	0
5902	5900	"g"	"geometry"	0	0	1	1
5905	5904	"result"	"boolean"	1	0	0	0
5906	5904	"a"	"mbr"	0	0	1	1
5907	5904	"b"	"mbr"	0	0	1	2
5910	5909	"result"	"geometry"	0	0	0	0
5911	5909	"wkt"	"clob"	0	0	1	1
5912	5909	"srid"	"smallint"	16	0	1	2
5915	5914	"result"	"point"	0	0	0	0
5916	5914	"wkt"	"clob"	0	0	1	1
5917	5914	"srid"	"smallint"	16	0	1	2
5920	5919	"result"	"linestring"	0	0	0	0
5921	5919	"wkt"	"clob"	0	0	1	1
5922	5919	"srid"	"smallint"	16	0	1	2
5925	5924	"result"	"polygon"	0	0	0	0
5926	5924	"wkt"	"clob"	0	0	1	1
5927	5924	"srid"	"smallint"	16	0	1	2
5930	5929	"result"	"multipoint"	0	0	0	0
5931	5929	"wkt"	"clob"	0	0	1	1
5932	5929	"srid"	"smallint"	16	0	1	2
5935	5934	"result"	"multilinestring"	0	0	0	0
5936	5934	"wkt"	"clob"	0	0	1	1
5937	5934	"srid"	"smallint"	16	0	1	2
5940	5939	"result"	"multipolygon"	0	0	0	0
5941	5939	"wkt"	"clob"	0	0	1	1
5942	5939	"srid"	"smallint"	16	0	1	2
5945	5944	"result"	"multipolygon"	0	0	0	0
5946	5944	"wkt"	"clob"	0	0	1	1
5947	5944	"srid"	"smallint"	16	0	1	2
5950	5949	"result"	"polygon"	0	0	0	0
5951	5949	"wkt"	"clob"	0	0	1	1
5952	5949	"srid"	"smallint"	16	0	1	2
5955	5954	"result"	"clob"	0	0	0	0
5956	5954	"g"	"geometry"	0	0	1	1
5959	5958	"result"	"double"	53	0	0	0
5960	5958	"g"	"geometry"	0	0	1	1
5963	5962	"result"	"double"	53	0	0	0
5964	5962	"g"	"geometry"	0	0	1	1
5967	5966	"result"	"point"	0	0	0	0
5968	5966	"x"	"double"	53	0	1	1
5969	5966	"y"	"double"	53	0	1	2
5972	5971	"result"	"int"	32	0	0	0
5973	5971	"g"	"geometry"	0	0	1	1
5976	5975	"result"	"int"	32	0	0	0
5977	5975	"g"	"geometry"	0	0	1	1
5980	5979	"result"	"int"	32	0	0	0
5981	5979	"g"	"geometry"	0	0	1	1
5984	5983	"result"	"geometry"	0	0	0	0
5985	5983	"g"	"geometry"	0	0	1	1
5988	5987	"result"	"boolean"	1	0	0	0
5989	5987	"g"	"geometry"	0	0	1	1
5992	5991	"result"	"boolean"	1	0	0	0
5993	5991	"g"	"geometry"	0	0	1	1
5996	5995	"result"	"geometry"	0	0	0	0
5997	5995	"g"	"geometry"	0	0	1	1
6000	5999	"result"	"boolean"	1	0	0	0
6001	5999	"a"	"geometry"	0	0	1	1
6002	5999	"b"	"geometry"	0	0	1	2
6005	6004	"result"	"boolean"	1	0	0	0
6006	6004	"a"	"geometry"	0	0	1	1
6007	6004	"b"	"geometry"	0	0	1	2
6010	6009	"result"	"boolean"	1	0	0	0
6011	6009	"a"	"geometry"	0	0	1	1
6012	6009	"b"	"geometry"	0	0	1	2
6015	6014	"result"	"boolean"	1	0	0	0
6016	6014	"a"	"geometry"	0	0	1	1
6017	6014	"b"	"geometry"	0	0	1	2
6020	6019	"result"	"boolean"	1	0	0	0
6021	6019	"a"	"geometry"	0	0	1	1
6022	6019	"b"	"geometry"	0	0	1	2
6025	6024	"result"	"boolean"	1	0	0	0
6026	6024	"a"	"geometry"	0	0	1	1
6027	6024	"b"	"geometry"	0	0	1	2
6030	6029	"result"	"boolean"	1	0	0	0
6031	6029	"a"	"geometry"	0	0	1	1
6032	6029	"b"	"geometry"	0	0	1	2
6035	6034	"result"	"boolean"	1	0	0	0
6036	6034	"a"	"geometry"	0	0	1	1
6037	6034	"x"	"double"	53	0	1	2
6038	6034	"y"	"double"	53	0	1	3
6041	6040	"result"	"boolean"	1	0	0	0
6042	6040	"a"	"geometry"	0	0	1	1
6043	6040	"b"	"geometry"	0	0	1	2
6046	6045	"result"	"boolean"	1	0	0	0
6047	6045	"a"	"geometry"	0	0	1	1
6048	6045	"b"	"geometry"	0	0	1	2
6049	6045	"pattern"	"clob"	0	0	1	3
6052	6051	"result"	"double"	53	0	0	0
6053	6051	"g"	"geometry"	0	0	1	1
6056	6055	"result"	"double"	53	0	0	0
6057	6055	"g"	"geometry"	0	0	1	1
6060	6059	"result"	"double"	53	0	0	0
6061	6059	"a"	"geometry"	0	0	1	1
6062	6059	"b"	"geometry"	0	0	1	2
6065	6064	"result"	"geometry"	0	0	0	0
6066	6064	"a"	"geometry"	0	0	1	1
6067	6064	"distance"	"double"	53	0	1	2
6070	6069	"result"	"geometry"	0	0	0	0
6071	6069	"a"	"geometry"	0	0	1	1
6074	6073	"result"	"geometry"	0	0	0	0
6075	6073	"a"	"geometry"	0	0	1	1
6076	6073	"b"	"geometry"	0	0	1	2
6079	6078	"result"	"geometry"	0	0	0	0
6080	6078	"a"	"geometry"	0	0	1	1
6081	6078	"b"	"geometry"	0	0	1	2
6084	6083	"result"	"geometry"	0	0	0	0
6085	6083	"a"	"geometry"	0	0	1	1
6086	6083	"b"	"geometry"	0	0	1	2
6089	6088	"result"	"geometry"	0	0	0	0
6090	6088	"a"	"geometry"	0	0	1	1
6091	6088	"b"	"geometry"	0	0	1	2
6096	6095	"result"	"json"	0	0	0	0
6097	6095	"js"	"json"	0	0	1	1
6098	6095	"pathexpr"	"clob"	0	0	1	2
6101	6100	"result"	"json"	0	0	0	0
6102	6100	"js"	"json"	0	0	1	1
6103	6100	"name"	"tinyint"	8	0	1	2
6106	6105	"result"	"json"	0	0	0	0
6107	6105	"js"	"json"	0	0	1	1
6108	6105	"name"	"int"	32	0	1	2
6111	6110	"result"	"json"	0	0	0	0
6112	6110	"js"	"json"	0	0	1	1
6113	6110	"name"	"bigint"	64	0	1	2
6116	6115	"result"	"clob"	0	0	0	0
6117	6115	"js"	"json"	0	0	1	1
6118	6115	"e"	"clob"	0	0	1	2
6121	6120	"result"	"double"	53	0	0	0
6122	6120	"js"	"json"	0	0	1	1
6125	6124	"result"	"bigint"	64	0	0	0
6126	6124	"js"	"json"	0	0	1	1
6129	6128	"result"	"boolean"	1	0	0	0
6130	6128	"js"	"clob"	0	0	1	1
6133	6132	"result"	"boolean"	1	0	0	0
6134	6132	"js"	"clob"	0	0	1	1
6137	6136	"result"	"boolean"	1	0	0	0
6138	6136	"js"	"clob"	0	0	1	1
6141	6140	"result"	"boolean"	1	0	0	0
6142	6140	"js"	"json"	0	0	1	1
6145	6144	"result"	"boolean"	1	0	0	0
6146	6144	"js"	"json"	0	0	1	1
6149	6148	"result"	"boolean"	1	0	0	0
6150	6148	"js"	"json"	0	0	1	1
6153	6152	"result"	"int"	32	0	0	0
6154	6152	"js"	"json"	0	0	1	1
6157	6156	"result"	"json"	0	0	0	0
6158	6156	"js"	"json"	0	0	1	1
6161	6160	"result"	"json"	0	0	0	0
6162	6160	"js"	"json"	0	0	1	1
6165	6164	"result"	"clob"	0	0	0	0
6166	6164	"js"	"json"	0	0	1	1
6169	6168	"result"	"clob"	0	0	0	0
6170	6168	"js"	"clob"	0	0	1	1
6173	6172	"result"	"clob"	0	0	0	0
6174	6172	"js"	"int"	32	0	1	1
6177	6176	"result"	"clob"	0	0	0	0
6178	6176	"js"	"json"	0	0	1	1
6181	6180	"result"	"clob"	0	0	0	0
6182	6180	"x"	"clob"	0	0	1	1
6185	6184	"result"	"clob"	0	0	0	0
6186	6184	"x"	"double"	53	0	1	1
6189	6188	"result"	"clob"	0	0	0	0
6190	6188	"v"	"clob"	0	0	1	1
6194	6193	"result"	"uuid"	0	0	0	0
6197	6196	"result"	"uuid"	0	0	0	0
6198	6196	"u"	"uuid"	0	0	1	1
6201	6200	"result"	"uuid"	0	0	0	0
6202	6200	"u"	"clob"	0	0	1	1
6205	6204	"result"	"double"	53	0	0	0
6206	6204	"chi2"	"double"	53	0	1	1
6207	6204	"datapoints"	"double"	53	0	1	2
6215	6214	"beat"	"int"	32	0	1	0
6218	6217	"poolsize"	"int"	32	0	1	0
6221	6220	"host"	"clob"	0	0	1	0
6222	6220	"port"	"int"	32	0	1	1
6246	6245	"dirname"	"clob"	0	0	1	0
6249	6248	"fname"	"clob"	0	0	1	0
6252	6251	"tname"	"clob"	0	0	1	0
6255	6254	"dirname"	"clob"	0	0	1	0
6256	6254	"pat"	"clob"	0	0	1	1
6291	6290	"fname"	"varchar"	256	0	1	0
6294	6293	"fid"	"int"	32	0	1	0
6295	6293	"varnname"	"varchar"	256	0	1	1
6298	6297	"schema"	"clob"	0	0	0	0
6299	6297	"table"	"clob"	0	0	0	1
6300	6297	"column"	"clob"	0	0	0	2
6301	6297	"type"	"clob"	0	0	0	3
6302	6297	"mode"	"clob"	0	0	0	4
6303	6297	"location"	"clob"	0	0	0	5
6304	6297	"count"	"bigint"	64	0	0	6
6305	6297	"typewidth"	"int"	32	0	0	7
6306	6297	"columnsize"	"bigint"	64	0	0	8
6307	6297	"heapsize"	"bigint"	64	0	0	9
6308	6297	"hashes"	"bigint"	64	0	0	10
6309	6297	"phash"	"boolean"	1	0	0	11
6310	6297	"imprints"	"bigint"	64	0	0	12
6311	6297	"sorted"	"boolean"	1	0	0	13
6344	6343	"result"	"bigint"	64	0	0	0
6345	6343	"nme"	"clob"	0	0	1	1
6346	6343	"i"	"bigint"	64	0	1	2
6347	6343	"d"	"bigint"	64	0	1	3
6350	6349	"result"	"bigint"	64	0	0	0
6351	6349	"tpe"	"clob"	0	0	1	1
6352	6349	"i"	"bigint"	64	0	1	2
6353	6349	"w"	"int"	32	0	1	3
6356	6355	"result"	"bigint"	64	0	0	0
6357	6355	"b"	"boolean"	1	0	1	1
6358	6355	"i"	"bigint"	64	0	1	2
6361	6360	"result"	"bigint"	64	0	0	0
6362	6360	"i"	"bigint"	64	0	1	1
6363	6360	"nme"	"clob"	0	0	1	2
6366	6365	"schema"	"clob"	0	0	0	0
6367	6365	"table"	"clob"	0	0	0	1
6368	6365	"column"	"clob"	0	0	0	2
6369	6365	"type"	"clob"	0	0	0	3
6370	6365	"count"	"bigint"	64	0	0	4
6371	6365	"columnsize"	"bigint"	64	0	0	5
6372	6365	"heapsize"	"bigint"	64	0	0	6
6373	6365	"hashes"	"bigint"	64	0	0	7
6374	6365	"imprints"	"bigint"	64	0	0	8
6375	6365	"sorted"	"boolean"	1	0	0	9
6413	6412	"MinMax"	"int"	32	0	1	0
6414	6412	"sample"	"bigint"	64	0	1	1
6417	6416	"MinMax"	"int"	32	0	1	0
6418	6416	"sample"	"bigint"	64	0	1	1
6419	6416	"sch"	"clob"	0	0	1	2
6422	6421	"MinMax"	"int"	32	0	1	0
6423	6421	"sample"	"bigint"	64	0	1	1
6424	6421	"sch"	"clob"	0	0	1	2
6425	6421	"tbl"	"clob"	0	0	1	3
6428	6427	"MinMax"	"int"	32	0	1	0
6429	6427	"sample"	"bigint"	64	0	1	1
6430	6427	"sch"	"clob"	0	0	1	2
6431	6427	"tbl"	"clob"	0	0	1	3
6432	6427	"col"	"clob"	0	0	1	4
6435	6434	"result"	"clob"	0	0	0	0
6436	6434	"src"	"clob"	0	0	1	1
6439	6438	"result"	"smallint"	16	0	0	0
6440	6438	"one"	"tinyint"	8	0	1	1
6441	6438	"two"	"tinyint"	8	0	1	2
6444	6443	"result"	"int"	32	0	0	0
6445	6443	"one"	"smallint"	16	0	1	1
6446	6443	"two"	"smallint"	16	0	1	2
6449	6448	"result"	"bigint"	64	0	0	0
6450	6448	"one"	"int"	32	0	1	1
6451	6448	"two"	"int"	32	0	1	2
6455	6454	"bam_repos"	"clob"	0	0	1	0
6456	6454	"dbschema"	"smallint"	16	0	1	1
6459	6458	"bam_files"	"clob"	0	0	1	0
6460	6458	"dbschema"	"smallint"	16	0	1	1
6463	6462	"bam_file"	"clob"	0	0	1	0
6464	6462	"dbschema"	"smallint"	16	0	1	1
6467	6466	"file_id"	"bigint"	64	0	1	0
6468	6466	"dbschema"	"smallint"	16	0	1	1
6471	6470	"result"	"boolean"	1	0	0	0
6472	6470	"flag"	"smallint"	16	0	1	1
6473	6470	"name"	"clob"	0	0	1	2
6476	6475	"result"	"clob"	0	0	0	0
6477	6475	"seq"	"clob"	0	0	1	1
6480	6479	"result"	"clob"	0	0	0	0
6481	6479	"qual"	"clob"	0	0	1	1
6484	6483	"result"	"int"	32	0	0	0
6485	6483	"cigar"	"clob"	0	0	1	1
6488	6487	"result"	"char"	1	0	0	0
6489	6487	"ref_pos"	"int"	32	0	1	1
6490	6487	"alg_seq"	"clob"	0	0	1	2
6491	6487	"alg_pos"	"int"	32	0	1	3
6492	6487	"alg_cigar"	"clob"	0	0	1	4
6495	6494	"output_path"	"clob"	0	0	1	0
6498	6497	"output_path"	"clob"	0	0	1	0
6568	6567	"value"	"tinyint"	8	0	0	0
6569	6567	"first"	"tinyint"	8	0	1	1
6570	6567	"last"	"tinyint"	8	0	1	2
6573	6572	"value"	"tinyint"	8	0	0	0
6574	6572	"first"	"tinyint"	8	0	1	1
6575	6572	"last"	"tinyint"	8	0	1	2
6576	6572	"stepsize"	"tinyint"	8	0	1	3
6579	6578	"value"	"smallint"	16	0	0	0
6580	6578	"first"	"smallint"	16	0	1	1
6581	6578	"last"	"smallint"	16	0	1	2
6584	6583	"value"	"smallint"	16	0	0	0
6585	6583	"first"	"smallint"	16	0	1	1
6586	6583	"last"	"smallint"	16	0	1	2
6587	6583	"stepsize"	"smallint"	16	0	1	3
6590	6589	"value"	"int"	32	0	0	0
6591	6589	"first"	"int"	32	0	1	1
6592	6589	"last"	"int"	32	0	1	2
6595	6594	"value"	"int"	32	0	0	0
6596	6594	"first"	"int"	32	0	1	1
6597	6594	"last"	"int"	32	0	1	2
6598	6594	"stepsize"	"int"	32	0	1	3
6601	6600	"value"	"bigint"	64	0	0	0
6602	6600	"first"	"bigint"	64	0	1	1
6603	6600	"last"	"bigint"	64	0	1	2
6606	6605	"value"	"bigint"	64	0	0	0
6607	6605	"first"	"bigint"	64	0	1	1
6608	6605	"last"	"bigint"	64	0	1	2
6609	6605	"stepsize"	"bigint"	64	0	1	3
6612	6611	"value"	"real"	24	0	0	0
6613	6611	"first"	"real"	24	0	1	1
6614	6611	"last"	"real"	24	0	1	2
6615	6611	"stepsize"	"real"	24	0	1	3
6618	6617	"value"	"double"	53	0	0	0
6619	6617	"first"	"double"	53	0	1	1
6620	6617	"last"	"double"	53	0	1	2
6621	6617	"stepsize"	"double"	53	0	1	3
6624	6623	"value"	"decimal"	10	2	0	0
6625	6623	"first"	"decimal"	10	2	1	1
6626	6623	"last"	"decimal"	10	2	1	2
6627	6623	"stepsize"	"decimal"	10	2	1	3
6630	6629	"value"	"timestamp"	7	0	0	0
6631	6629	"first"	"timestamp"	7	0	1	1
6632	6629	"last"	"timestamp"	7	0	1	2
6633	6629	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 325 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
334	5055	7
333	5055	7
795	5055	7
334	5059	7
333	5059	7
795	5059	7
5064	5066	15
5064	5070	15
5064	5074	15
5064	5078	15
5064	5082	15
5064	5086	15
5064	5090	15
5064	5094	15
5064	5098	15
5064	5102	15
5064	5106	15
5064	5110	15
5064	5114	15
5064	5118	15
5064	5122	15
5064	5129	15
5164	5166	15
5164	5170	15
5164	5174	15
5164	5178	15
5164	5183	15
5164	5187	15
5164	5191	15
5164	5195	15
5164	5199	15
5164	5203	15
5164	5208	15
5164	5213	15
5164	5218	15
5223	5252	5
5233	5263	5
5223	5281	5
5233	5281	5
5292	5320	5
2003	5350	7
2001	5350	7
2002	5350	7
5019	5350	7
5028	5355	7
5026	5355	7
5027	5355	7
2005	5355	7
2001	5355	7
2003	5355	7
4987	5360	7
2047	5360	7
2046	5360	7
2049	5360	7
2048	5360	7
4987	5365	7
2088	5365	7
2086	5365	7
2090	5365	7
2083	5365	7
2079	5365	7
4987	5370	7
2047	5370	7
2046	5370	7
2049	5370	7
2092	5370	7
2091	5370	7
2048	5370	7
2093	5370	7
2094	5370	7
4987	5375	7
2081	5375	7
2079	5375	7
2084	5375	7
2080	5375	7
2083	5375	7
4987	5380	7
2047	5380	7
2046	5380	7
2049	5380	7
2017	5380	7
2016	5380	7
2048	5380	7
2018	5380	7
4997	5385	7
2047	5385	7
2046	5385	7
2049	5385	7
2048	5385	7
4987	5385	7
4997	5390	7
2081	5390	7
2079	5390	7
2084	5390	7
2103	5390	7
2102	5390	7
2104	5390	7
2080	5390	7
2083	5390	7
140	5390	7
30	5390	7
29	5390	7
31	5390	7
4997	5395	7
2088	5395	7
2086	5395	7
2090	5395	7
2083	5395	7
2079	5395	7
2087	5395	7
2103	5395	7
2102	5395	7
2104	5395	7
30	5395	7
29	5395	7
31	5395	7
4997	5400	7
2047	5400	7
2046	5400	7
2049	5400	7
2048	5400	7
2017	5400	7
2016	5400	7
2018	5400	7
4997	5405	7
2047	5405	7
2046	5405	7
2049	5405	7
2092	5405	7
2091	5405	7
2048	5405	7
2093	5405	7
4987	5410	7
2047	5410	7
2046	5410	7
2049	5410	7
2017	5410	7
2016	5410	7
2048	5410	7
2018	5410	7
4987	5415	7
2047	5415	7
2046	5415	7
2049	5415	7
2092	5415	7
2091	5415	7
2048	5415	7
2093	5415	7
2018	5420	7
2016	5420	7
2017	5420	7
2047	5420	7
2046	5420	7
2049	5420	7
2048	5420	7
2018	5425	7
2016	5425	7
2017	5425	7
2047	5425	7
2046	5425	7
2049	5425	7
2092	5425	7
2091	5425	7
2048	5425	7
2093	5425	7
2083	5430	7
2079	5430	7
2080	5430	7
2084	5430	7
5439	5453	5
92	5472	7
36	5472	7
34	5472	7
938	5472	7
924	5472	7
199	5472	7
935	5472	7
200	5472	7
31	5484	7
395	5484	7
92	5484	7
94	5484	7
33	5484	7
5479	5484	7
5525	5533	5
5535	5541	5
5571	5589	5
5609	5619	5
5896	5900	15
5898	5900	15
5898	5904	15
5896	5909	15
5886	5914	15
5888	5919	15
5890	5924	15
5891	5929	15
5893	5934	15
5895	5939	15
5895	5944	15
5890	5949	15
5896	5954	15
5896	5958	15
5896	5962	15
5886	5966	15
5896	5971	15
5896	5975	15
5896	5979	15
5896	5983	15
5896	5987	15
5896	5991	15
5896	5995	15
5896	5999	15
5896	6004	15
5896	6009	15
5896	6014	15
5896	6019	15
5896	6024	15
5896	6029	15
5896	6034	15
5896	6040	15
5896	6045	15
5896	6051	15
5896	6055	15
5896	6059	15
5896	6064	15
5896	6069	15
5896	6073	15
5896	6078	15
5896	6083	15
5896	6088	15
6093	6095	15
6093	6100	15
6093	6105	15
6093	6110	15
6093	6115	15
6093	6120	15
6093	6124	15
6093	6140	15
6093	6144	15
6093	6148	15
6093	6152	15
6093	6156	15
6093	6160	15
6093	6164	15
6093	6176	15
6191	6193	15
6191	6196	15
6191	6200	15
6224	6226	10
6224	6225	4
6229	6231	10
6232	6234	10
6229	6230	4
6237	6239	10
6240	6242	10
6237	6238	4
6297	6327	5
6329	6341	13
6339	6341	13
6330	6341	13
6331	6341	13
6332	6341	13
6333	6341	13
6334	6341	13
6335	6341	13
6336	6341	13
6337	6341	13
6338	6341	13
31	6343	7
101	6343	7
207	6343	7
91	6349	7
32	6349	7
200	6349	7
105	6349	7
31	6355	7
101	6355	7
92	6360	7
31	6360	7
293	6360	7
6329	6365	7
6339	6365	7
6330	6365	7
6331	6365	7
6332	6365	7
6334	6365	7
6335	6365	7
6336	6365	7
6337	6365	7
6338	6365	7
6343	6365	7
6349	6365	7
6355	6365	7
6360	6365	7
6365	6387	5
6365	6397	5
46	6397	5
53	6397	5
49	6397	5
33	6397	5
31	6397	5
101	6397	5
6500	6507	10
6500	6506	4
6510	6518	10
6511	6518	10
6511	6520	10
6510	6517	4
6511	6517	4
6506	6519	11
6511	6519	11
6523	6537	10
6524	6537	10
6524	6539	10
6523	6536	4
6524	6536	4
6506	6538	11
6524	6538	11
6542	6549	10
6543	6549	10
6543	6551	10
6542	6548	4
6543	6548	4
6506	6550	11
6543	6550	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1289 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
27	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
28	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
29	"hash"	"hash"	"mkey"	0	1	false	false	false	0
30	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
31	"="	"="	"calc"	0	1	false	false	false	0
32	"<>"	"!="	"calc"	0	1	false	false	false	0
33	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
34	">"	">"	"calc"	0	1	false	false	false	0
35	">="	">="	"calc"	0	1	false	false	false	0
36	"<"	"<"	"calc"	0	1	false	false	false	0
37	"<="	"<="	"calc"	0	1	false	false	false	0
41	"in"	"in"	"calc"	0	1	false	false	false	0
42	"identity"	"identity"	"calc"	0	1	false	false	false	0
43	"rowid"	"identity"	"calc"	0	1	false	false	false	0
44	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
47	"sql_min"	"min"	"calc"	0	1	false	false	false	0
48	"sql_max"	"max"	"calc"	0	1	false	false	false	0
49	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
66	"mod"	"%"	"calc"	0	1	false	false	false	0
67	"mod"	"%"	"calc"	0	1	false	false	false	0
68	"mod"	"%"	"calc"	0	1	false	false	false	0
69	"mod"	"%"	"calc"	0	1	false	false	false	0
70	"mod"	"%"	"calc"	0	1	false	false	false	0
71	"mod"	"%"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
86	"diff"	"diff"	"sql"	0	6	false	false	false	0
87	"diff"	"diff"	"sql"	0	6	false	false	false	0
88	"rank"	"rank"	"sql"	0	6	false	false	false	0
89	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
90	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
91	"and"	"and"	"calc"	0	1	false	false	false	0
92	"or"	"or"	"calc"	0	1	false	false	false	0
93	"xor"	"xor"	"calc"	0	1	false	false	false	0
94	"not"	"not"	"calc"	0	1	false	false	false	0
95	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
96	"sql_div"	"/"	"calc"	0	1	false	false	false	0
97	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
98	"sql_div"	"/"	"calc"	0	1	false	false	false	0
99	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
100	"sql_div"	"/"	"calc"	0	1	false	false	false	0
101	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
102	"sql_div"	"/"	"calc"	0	1	false	false	false	0
103	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
104	"sql_div"	"/"	"calc"	0	1	false	false	false	0
105	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
106	"sql_div"	"/"	"calc"	0	1	false	false	false	0
107	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
108	"sql_add"	"+"	"calc"	0	1	false	false	false	0
109	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
110	"sql_div"	"/"	"calc"	0	1	false	false	false	0
111	"bit_and"	"and"	"calc"	0	1	false	false	false	0
112	"bit_or"	"or"	"calc"	0	1	false	false	false	0
113	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
114	"bit_not"	"not"	"calc"	0	1	false	false	false	0
115	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
116	"right_shift"	">>"	"calc"	0	1	false	false	false	0
117	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
118	"abs"	"abs"	"calc"	0	1	false	false	false	0
119	"sign"	"sign"	"calc"	0	1	false	false	false	0
120	"scale_up"	"*"	"calc"	0	1	false	false	false	0
121	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
122	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
123	"sql_add"	"+"	"calc"	0	1	false	false	false	0
124	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
125	"sql_div"	"/"	"calc"	0	1	false	false	false	0
126	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
127	"sql_add"	"+"	"calc"	0	1	false	false	false	0
128	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
129	"sql_div"	"/"	"calc"	0	1	false	false	false	0
130	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
131	"sql_add"	"+"	"calc"	0	1	false	false	false	0
132	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
133	"sql_div"	"/"	"calc"	0	1	false	false	false	0
134	"bit_and"	"and"	"calc"	0	1	false	false	false	0
135	"bit_or"	"or"	"calc"	0	1	false	false	false	0
136	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
137	"bit_not"	"not"	"calc"	0	1	false	false	false	0
138	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
139	"right_shift"	">>"	"calc"	0	1	false	false	false	0
140	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
141	"abs"	"abs"	"calc"	0	1	false	false	false	0
142	"sign"	"sign"	"calc"	0	1	false	false	false	0
143	"scale_up"	"*"	"calc"	0	1	false	false	false	0
144	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
145	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
146	"sql_add"	"+"	"calc"	0	1	false	false	false	0
147	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
148	"sql_div"	"/"	"calc"	0	1	false	false	false	0
149	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
150	"sql_add"	"+"	"calc"	0	1	false	false	false	0
151	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
152	"sql_div"	"/"	"calc"	0	1	false	false	false	0
153	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
154	"sql_add"	"+"	"calc"	0	1	false	false	false	0
155	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
156	"sql_div"	"/"	"calc"	0	1	false	false	false	0
157	"bit_and"	"and"	"calc"	0	1	false	false	false	0
158	"bit_or"	"or"	"calc"	0	1	false	false	false	0
159	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
160	"bit_not"	"not"	"calc"	0	1	false	false	false	0
161	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
162	"right_shift"	">>"	"calc"	0	1	false	false	false	0
163	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
164	"abs"	"abs"	"calc"	0	1	false	false	false	0
165	"sign"	"sign"	"calc"	0	1	false	false	false	0
166	"scale_up"	"*"	"calc"	0	1	false	false	false	0
167	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
168	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
169	"sql_add"	"+"	"calc"	0	1	false	false	false	0
170	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
171	"sql_div"	"/"	"calc"	0	1	false	false	false	0
172	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
173	"sql_add"	"+"	"calc"	0	1	false	false	false	0
174	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
175	"sql_div"	"/"	"calc"	0	1	false	false	false	0
176	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
177	"sql_add"	"+"	"calc"	0	1	false	false	false	0
178	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
179	"sql_div"	"/"	"calc"	0	1	false	false	false	0
180	"bit_and"	"and"	"calc"	0	1	false	false	false	0
181	"bit_or"	"or"	"calc"	0	1	false	false	false	0
182	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
183	"bit_not"	"not"	"calc"	0	1	false	false	false	0
184	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
185	"right_shift"	">>"	"calc"	0	1	false	false	false	0
186	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
187	"abs"	"abs"	"calc"	0	1	false	false	false	0
188	"sign"	"sign"	"calc"	0	1	false	false	false	0
189	"scale_up"	"*"	"calc"	0	1	false	false	false	0
190	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
191	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
192	"sql_add"	"+"	"calc"	0	1	false	false	false	0
193	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
194	"sql_div"	"/"	"calc"	0	1	false	false	false	0
195	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
196	"sql_add"	"+"	"calc"	0	1	false	false	false	0
197	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
198	"sql_div"	"/"	"calc"	0	1	false	false	false	0
199	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
200	"sql_add"	"+"	"calc"	0	1	false	false	false	0
201	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
202	"sql_div"	"/"	"calc"	0	1	false	false	false	0
203	"bit_and"	"and"	"calc"	0	1	false	false	false	0
204	"bit_or"	"or"	"calc"	0	1	false	false	false	0
205	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
206	"bit_not"	"not"	"calc"	0	1	false	false	false	0
207	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
208	"right_shift"	">>"	"calc"	0	1	false	false	false	0
209	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
210	"abs"	"abs"	"calc"	0	1	false	false	false	0
211	"sign"	"sign"	"calc"	0	1	false	false	false	0
212	"scale_up"	"*"	"calc"	0	1	false	false	false	0
213	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
214	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
215	"sql_add"	"+"	"calc"	0	1	false	false	false	0
216	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
217	"sql_div"	"/"	"calc"	0	1	false	false	false	0
218	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
219	"sql_add"	"+"	"calc"	0	1	false	false	false	0
220	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
221	"sql_div"	"/"	"calc"	0	1	false	false	false	0
222	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
223	"sql_add"	"+"	"calc"	0	1	false	false	false	0
224	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
225	"sql_div"	"/"	"calc"	0	1	false	false	false	0
226	"bit_and"	"and"	"calc"	0	1	false	false	false	0
227	"bit_or"	"or"	"calc"	0	1	false	false	false	0
228	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
229	"bit_not"	"not"	"calc"	0	1	false	false	false	0
230	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
231	"right_shift"	">>"	"calc"	0	1	false	false	false	0
232	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
233	"abs"	"abs"	"calc"	0	1	false	false	false	0
234	"sign"	"sign"	"calc"	0	1	false	false	false	0
235	"scale_up"	"*"	"calc"	0	1	false	false	false	0
236	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
237	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
238	"sql_add"	"+"	"calc"	0	1	false	false	false	0
239	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
240	"sql_div"	"/"	"calc"	0	1	false	false	false	0
241	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
242	"sql_add"	"+"	"calc"	0	1	false	false	false	0
243	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
244	"sql_div"	"/"	"calc"	0	1	false	false	false	0
245	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
246	"sql_add"	"+"	"calc"	0	1	false	false	false	0
247	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
248	"sql_div"	"/"	"calc"	0	1	false	false	false	0
249	"bit_and"	"and"	"calc"	0	1	false	false	false	0
250	"bit_or"	"or"	"calc"	0	1	false	false	false	0
251	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
252	"bit_not"	"not"	"calc"	0	1	false	false	false	0
253	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
254	"right_shift"	">>"	"calc"	0	1	false	false	false	0
255	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
256	"abs"	"abs"	"calc"	0	1	false	false	false	0
257	"sign"	"sign"	"calc"	0	1	false	false	false	0
258	"scale_up"	"*"	"calc"	0	1	false	false	false	0
259	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
260	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
261	"sql_add"	"+"	"calc"	0	1	false	false	false	0
262	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
263	"sql_div"	"/"	"calc"	0	1	false	false	false	0
264	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
265	"sql_add"	"+"	"calc"	0	1	false	false	false	0
266	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
267	"sql_div"	"/"	"calc"	0	1	false	false	false	0
268	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
269	"sql_add"	"+"	"calc"	0	1	false	false	false	0
270	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
271	"sql_div"	"/"	"calc"	0	1	false	false	false	0
272	"bit_and"	"and"	"calc"	0	1	false	false	false	0
273	"bit_or"	"or"	"calc"	0	1	false	false	false	0
274	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
275	"bit_not"	"not"	"calc"	0	1	false	false	false	0
276	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
277	"right_shift"	">>"	"calc"	0	1	false	false	false	0
278	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
279	"abs"	"abs"	"calc"	0	1	false	false	false	0
280	"sign"	"sign"	"calc"	0	1	false	false	false	0
281	"scale_up"	"*"	"calc"	0	1	false	false	false	0
282	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
283	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
284	"sql_add"	"+"	"calc"	0	1	false	false	false	0
285	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
286	"sql_div"	"/"	"calc"	0	1	false	false	false	0
287	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
288	"sql_add"	"+"	"calc"	0	1	false	false	false	0
289	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
290	"sql_div"	"/"	"calc"	0	1	false	false	false	0
291	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
292	"sql_add"	"+"	"calc"	0	1	false	false	false	0
293	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
294	"sql_div"	"/"	"calc"	0	1	false	false	false	0
295	"bit_and"	"and"	"calc"	0	1	false	false	false	0
296	"bit_or"	"or"	"calc"	0	1	false	false	false	0
297	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
298	"bit_not"	"not"	"calc"	0	1	false	false	false	0
299	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
300	"right_shift"	">>"	"calc"	0	1	false	false	false	0
301	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
302	"abs"	"abs"	"calc"	0	1	false	false	false	0
303	"sign"	"sign"	"calc"	0	1	false	false	false	0
304	"scale_up"	"*"	"calc"	0	1	false	false	false	0
305	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
306	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
307	"sql_add"	"+"	"calc"	0	1	false	false	false	0
308	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
309	"sql_div"	"/"	"calc"	0	1	false	false	false	0
310	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
311	"sql_add"	"+"	"calc"	0	1	false	false	false	0
312	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
313	"sql_div"	"/"	"calc"	0	1	false	false	false	0
314	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
315	"sql_add"	"+"	"calc"	0	1	false	false	false	0
316	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
317	"sql_div"	"/"	"calc"	0	1	false	false	false	0
318	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
319	"abs"	"abs"	"calc"	0	1	false	false	false	0
320	"sign"	"sign"	"calc"	0	1	false	false	false	0
321	"scale_up"	"*"	"calc"	0	1	false	false	false	0
322	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
323	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
324	"sql_add"	"+"	"calc"	0	1	false	false	false	0
325	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
326	"sql_div"	"/"	"calc"	0	1	false	false	false	0
327	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
328	"sql_add"	"+"	"calc"	0	1	false	false	false	0
329	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
330	"sql_div"	"/"	"calc"	0	1	false	false	false	0
331	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
332	"sql_add"	"+"	"calc"	0	1	false	false	false	0
333	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
334	"sql_div"	"/"	"calc"	0	1	false	false	false	0
335	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
336	"abs"	"abs"	"calc"	0	1	false	false	false	0
337	"sign"	"sign"	"calc"	0	1	false	false	false	0
338	"scale_up"	"*"	"calc"	0	1	false	false	false	0
339	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
340	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
341	"sql_add"	"+"	"calc"	0	1	false	false	false	0
342	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
343	"sql_div"	"/"	"calc"	0	1	false	false	false	0
344	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
345	"sql_add"	"+"	"calc"	0	1	false	false	false	0
346	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
347	"sql_div"	"/"	"calc"	0	1	false	false	false	0
348	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
349	"sql_add"	"+"	"calc"	0	1	false	false	false	0
350	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
351	"sql_div"	"/"	"calc"	0	1	false	false	false	0
352	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
353	"abs"	"abs"	"calc"	0	1	false	false	false	0
354	"sign"	"sign"	"calc"	0	1	false	false	false	0
355	"scale_up"	"*"	"calc"	0	1	false	false	false	0
356	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
357	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
358	"sql_add"	"+"	"calc"	0	1	false	false	false	0
359	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
360	"sql_div"	"/"	"calc"	0	1	false	false	false	0
361	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
362	"abs"	"abs"	"calc"	0	1	false	false	false	0
363	"sign"	"sign"	"calc"	0	1	false	false	false	0
364	"scale_up"	"*"	"calc"	0	1	false	false	false	0
365	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
366	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
367	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
368	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
369	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
370	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
371	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
372	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
373	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
374	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
375	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
376	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
377	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
378	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
379	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
380	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
381	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
382	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
383	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
384	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
385	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
386	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
387	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
388	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
389	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
390	"round"	"round"	"sql"	0	1	false	false	false	0
391	"round"	"round"	"sql"	0	1	false	false	false	0
392	"round"	"round"	"sql"	0	1	false	false	false	0
393	"round"	"round"	"sql"	0	1	false	false	false	0
394	"round"	"round"	"sql"	0	1	false	false	false	0
395	"round"	"round"	"sql"	0	1	false	false	false	0
396	"scale_up"	"*"	"calc"	0	1	false	false	false	0
397	"scale_up"	"*"	"calc"	0	1	false	false	false	0
398	"scale_up"	"*"	"calc"	0	1	false	false	false	0
399	"scale_up"	"*"	"calc"	0	1	false	false	false	0
400	"scale_up"	"*"	"calc"	0	1	false	false	false	0
401	"scale_up"	"*"	"calc"	0	1	false	false	false	0
402	"scale_up"	"*"	"calc"	0	1	false	false	false	0
403	"scale_up"	"*"	"calc"	0	1	false	false	false	0
404	"scale_up"	"*"	"calc"	0	1	false	false	false	0
405	"scale_up"	"*"	"calc"	0	1	false	false	false	0
406	"scale_up"	"*"	"calc"	0	1	false	false	false	0
407	"scale_up"	"*"	"calc"	0	1	false	false	false	0
408	"scale_up"	"*"	"calc"	0	1	false	false	false	0
409	"scale_up"	"*"	"calc"	0	1	false	false	false	0
410	"scale_up"	"*"	"calc"	0	1	false	false	false	0
411	"scale_up"	"*"	"calc"	0	1	false	false	false	0
412	"scale_up"	"*"	"calc"	0	1	false	false	false	0
413	"scale_up"	"*"	"calc"	0	1	false	false	false	0
414	"scale_up"	"*"	"calc"	0	1	false	false	false	0
415	"scale_up"	"*"	"calc"	0	1	false	false	false	0
416	"scale_up"	"*"	"calc"	0	1	false	false	false	0
417	"scale_up"	"*"	"calc"	0	1	false	false	false	0
418	"scale_up"	"*"	"calc"	0	1	false	false	false	0
419	"scale_up"	"*"	"calc"	0	1	false	false	false	0
420	"scale_up"	"*"	"calc"	0	1	false	false	false	0
421	"scale_up"	"*"	"calc"	0	1	false	false	false	0
422	"scale_up"	"*"	"calc"	0	1	false	false	false	0
423	"scale_up"	"*"	"calc"	0	1	false	false	false	0
424	"scale_up"	"*"	"calc"	0	1	false	false	false	0
425	"scale_up"	"*"	"calc"	0	1	false	false	false	0
426	"scale_up"	"*"	"calc"	0	1	false	false	false	0
427	"scale_up"	"*"	"calc"	0	1	false	false	false	0
428	"scale_up"	"*"	"calc"	0	1	false	false	false	0
429	"scale_up"	"*"	"calc"	0	1	false	false	false	0
430	"scale_up"	"*"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_up"	"*"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_up"	"*"	"calc"	0	1	false	false	false	0
438	"scale_up"	"*"	"calc"	0	1	false	false	false	0
439	"scale_up"	"*"	"calc"	0	1	false	false	false	0
440	"scale_up"	"*"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_up"	"*"	"calc"	0	1	false	false	false	0
443	"scale_up"	"*"	"calc"	0	1	false	false	false	0
444	"scale_up"	"*"	"calc"	0	1	false	false	false	0
445	"scale_up"	"*"	"calc"	0	1	false	false	false	0
446	"scale_up"	"*"	"calc"	0	1	false	false	false	0
447	"scale_up"	"*"	"calc"	0	1	false	false	false	0
448	"scale_up"	"*"	"calc"	0	1	false	false	false	0
449	"scale_up"	"*"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_up"	"*"	"calc"	0	1	false	false	false	0
455	"scale_up"	"*"	"calc"	0	1	false	false	false	0
456	"scale_up"	"*"	"calc"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"power"	"pow"	"mmath"	0	1	false	false	false	0
758	"floor"	"floor"	"mmath"	0	1	false	false	false	0
759	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
760	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
761	"sin"	"sin"	"mmath"	0	1	false	false	false	0
762	"cos"	"cos"	"mmath"	0	1	false	false	false	0
763	"tan"	"tan"	"mmath"	0	1	false	false	false	0
764	"asin"	"asin"	"mmath"	0	1	false	false	false	0
765	"acos"	"acos"	"mmath"	0	1	false	false	false	0
766	"atan"	"atan"	"mmath"	0	1	false	false	false	0
767	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
768	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
769	"cot"	"cot"	"mmath"	0	1	false	false	false	0
770	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
771	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
772	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
773	"exp"	"exp"	"mmath"	0	1	false	false	false	0
774	"log"	"log"	"mmath"	0	1	false	false	false	0
775	"log10"	"log10"	"mmath"	0	1	false	false	false	0
776	"power"	"pow"	"mmath"	0	1	false	false	false	0
777	"floor"	"floor"	"mmath"	0	1	false	false	false	0
778	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
779	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
780	"sin"	"sin"	"mmath"	0	1	false	false	false	0
781	"cos"	"cos"	"mmath"	0	1	false	false	false	0
782	"tan"	"tan"	"mmath"	0	1	false	false	false	0
783	"asin"	"asin"	"mmath"	0	1	false	false	false	0
784	"acos"	"acos"	"mmath"	0	1	false	false	false	0
785	"atan"	"atan"	"mmath"	0	1	false	false	false	0
786	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
787	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
788	"cot"	"cot"	"mmath"	0	1	false	false	false	0
789	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
790	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
791	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
792	"exp"	"exp"	"mmath"	0	1	false	false	false	0
793	"log"	"log"	"mmath"	0	1	false	false	false	0
794	"log10"	"log10"	"mmath"	0	1	false	false	false	0
795	"pi"	"pi"	"mmath"	0	1	false	false	false	0
796	"rand"	"rand"	"mmath"	0	1	true	false	false	0
797	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
798	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
799	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
800	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
801	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
802	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
803	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
804	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
805	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
806	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
807	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
808	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
809	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
810	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
811	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
812	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
813	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
814	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
815	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
816	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
817	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
818	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
819	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
820	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
821	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
822	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
823	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
824	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
825	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
826	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
827	"year"	"year"	"mtime"	0	1	false	false	false	0
828	"month"	"month"	"mtime"	0	1	false	false	false	0
829	"day"	"day"	"mtime"	0	1	false	false	false	0
830	"hour"	"hours"	"mtime"	0	1	false	false	false	0
831	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
832	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
833	"hour"	"hours"	"mtime"	0	1	false	false	false	0
834	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
835	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
836	"year"	"year"	"mtime"	0	1	false	false	false	0
837	"month"	"month"	"mtime"	0	1	false	false	false	0
838	"day"	"day"	"mtime"	0	1	false	false	false	0
839	"hour"	"hours"	"mtime"	0	1	false	false	false	0
840	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
841	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
842	"year"	"year"	"mtime"	0	1	false	false	false	0
843	"month"	"month"	"mtime"	0	1	false	false	false	0
844	"day"	"day"	"mtime"	0	1	false	false	false	0
845	"hour"	"hours"	"mtime"	0	1	false	false	false	0
846	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
847	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
848	"year"	"year"	"mtime"	0	1	false	false	false	0
849	"month"	"month"	"mtime"	0	1	false	false	false	0
850	"day"	"day"	"mtime"	0	1	false	false	false	0
851	"hour"	"hours"	"mtime"	0	1	false	false	false	0
852	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
853	"second"	"seconds"	"mtime"	0	1	false	false	false	0
854	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
855	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
856	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
857	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
858	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
859	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
860	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
861	"restart"	"restart"	"sql"	0	1	false	false	false	0
862	"index"	"index"	"calc"	0	1	false	false	false	0
863	"index"	"index"	"calc"	0	1	false	false	false	0
864	"index"	"index"	"calc"	0	1	false	false	false	0
865	"strings"	"strings"	"calc"	0	1	false	false	false	0
866	"locate"	"locate"	"str"	0	1	false	false	false	0
867	"locate"	"locate"	"str"	0	1	false	false	false	0
868	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
869	"substring"	"substring"	"str"	0	1	false	false	false	0
870	"substring"	"substring"	"str"	0	1	false	false	false	0
871	"like"	"like"	"algebra"	0	1	false	false	false	0
872	"like"	"like"	"algebra"	0	1	false	false	false	0
873	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
874	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
875	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
876	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
877	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
878	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
879	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
880	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
881	"concat"	"+"	"calc"	0	1	false	false	false	0
882	"ascii"	"ascii"	"str"	0	1	false	false	false	0
883	"code"	"unicode"	"str"	0	1	false	false	false	0
884	"length"	"stringlength"	"str"	0	1	false	false	false	0
885	"right"	"stringright"	"str"	0	1	false	false	false	0
886	"left"	"stringleft"	"str"	0	1	false	false	false	0
887	"upper"	"toUpper"	"str"	0	1	false	false	false	0
888	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
889	"lower"	"toLower"	"str"	0	1	false	false	false	0
890	"lcase"	"toLower"	"str"	0	1	false	false	false	0
891	"trim"	"trim"	"str"	0	1	false	false	false	0
892	"trim"	"trim"	"str"	0	1	false	false	false	0
893	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
894	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
895	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
896	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
897	"lpad"	"lpad"	"str"	0	1	false	false	false	0
898	"lpad"	"lpad"	"str"	0	1	false	false	false	0
899	"rpad"	"rpad"	"str"	0	1	false	false	false	0
900	"rpad"	"rpad"	"str"	0	1	false	false	false	0
901	"insert"	"insert"	"str"	0	1	false	false	false	0
902	"replace"	"replace"	"str"	0	1	false	false	false	0
903	"repeat"	"repeat"	"str"	0	1	false	false	false	0
904	"space"	"space"	"str"	0	1	false	false	false	0
905	"char_length"	"length"	"str"	0	1	false	false	false	0
906	"character_length"	"length"	"str"	0	1	false	false	false	0
907	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
908	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
909	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
910	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
911	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
912	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
913	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
914	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
915	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
916	"index"	"index"	"calc"	0	1	false	false	false	0
917	"index"	"index"	"calc"	0	1	false	false	false	0
918	"index"	"index"	"calc"	0	1	false	false	false	0
919	"strings"	"strings"	"calc"	0	1	false	false	false	0
920	"locate"	"locate"	"str"	0	1	false	false	false	0
921	"locate"	"locate"	"str"	0	1	false	false	false	0
922	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
923	"substring"	"substring"	"str"	0	1	false	false	false	0
924	"substring"	"substring"	"str"	0	1	false	false	false	0
925	"like"	"like"	"algebra"	0	1	false	false	false	0
926	"like"	"like"	"algebra"	0	1	false	false	false	0
927	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
928	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
929	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
930	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
931	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
932	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
933	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
934	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
935	"concat"	"+"	"calc"	0	1	false	false	false	0
936	"ascii"	"ascii"	"str"	0	1	false	false	false	0
937	"code"	"unicode"	"str"	0	1	false	false	false	0
938	"length"	"stringlength"	"str"	0	1	false	false	false	0
939	"right"	"stringright"	"str"	0	1	false	false	false	0
940	"left"	"stringleft"	"str"	0	1	false	false	false	0
941	"upper"	"toUpper"	"str"	0	1	false	false	false	0
942	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
943	"lower"	"toLower"	"str"	0	1	false	false	false	0
944	"lcase"	"toLower"	"str"	0	1	false	false	false	0
945	"trim"	"trim"	"str"	0	1	false	false	false	0
946	"trim"	"trim"	"str"	0	1	false	false	false	0
947	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
948	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
949	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
950	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
951	"lpad"	"lpad"	"str"	0	1	false	false	false	0
952	"lpad"	"lpad"	"str"	0	1	false	false	false	0
953	"rpad"	"rpad"	"str"	0	1	false	false	false	0
954	"rpad"	"rpad"	"str"	0	1	false	false	false	0
955	"insert"	"insert"	"str"	0	1	false	false	false	0
956	"replace"	"replace"	"str"	0	1	false	false	false	0
957	"repeat"	"repeat"	"str"	0	1	false	false	false	0
958	"space"	"space"	"str"	0	1	false	false	false	0
959	"char_length"	"length"	"str"	0	1	false	false	false	0
960	"character_length"	"length"	"str"	0	1	false	false	false	0
961	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
962	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
963	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
964	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
965	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
966	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
967	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
968	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
969	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
970	"index"	"index"	"calc"	0	1	false	false	false	0
971	"index"	"index"	"calc"	0	1	false	false	false	0
972	"index"	"index"	"calc"	0	1	false	false	false	0
973	"strings"	"strings"	"calc"	0	1	false	false	false	0
974	"locate"	"locate"	"str"	0	1	false	false	false	0
975	"locate"	"locate"	"str"	0	1	false	false	false	0
976	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
977	"substring"	"substring"	"str"	0	1	false	false	false	0
978	"substring"	"substring"	"str"	0	1	false	false	false	0
979	"like"	"like"	"algebra"	0	1	false	false	false	0
980	"like"	"like"	"algebra"	0	1	false	false	false	0
981	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
982	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
983	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
984	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
985	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
986	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
987	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
988	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
989	"concat"	"+"	"calc"	0	1	false	false	false	0
990	"ascii"	"ascii"	"str"	0	1	false	false	false	0
991	"code"	"unicode"	"str"	0	1	false	false	false	0
992	"length"	"stringlength"	"str"	0	1	false	false	false	0
993	"right"	"stringright"	"str"	0	1	false	false	false	0
994	"left"	"stringleft"	"str"	0	1	false	false	false	0
995	"upper"	"toUpper"	"str"	0	1	false	false	false	0
996	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
997	"lower"	"toLower"	"str"	0	1	false	false	false	0
998	"lcase"	"toLower"	"str"	0	1	false	false	false	0
999	"trim"	"trim"	"str"	0	1	false	false	false	0
1000	"trim"	"trim"	"str"	0	1	false	false	false	0
1001	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1002	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1003	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1004	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1005	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1006	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1007	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1008	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1009	"insert"	"insert"	"str"	0	1	false	false	false	0
1010	"replace"	"replace"	"str"	0	1	false	false	false	0
1011	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1012	"space"	"space"	"str"	0	1	false	false	false	0
1013	"char_length"	"length"	"str"	0	1	false	false	false	0
1014	"character_length"	"length"	"str"	0	1	false	false	false	0
1015	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1016	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1017	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1018	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1019	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1020	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1021	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1022	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1023	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1024	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1025	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
26	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
38	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
39	"exist"	"exist"	"aggr"	0	3	false	false	false	0
40	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
45	"min"	"min"	"aggr"	0	3	false	false	false	0
46	"max"	"max"	"aggr"	0	3	false	false	false	0
50	"sum"	"sum"	"aggr"	0	3	false	false	false	0
51	"sum"	"sum"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"prod"	"prod"	"aggr"	0	3	false	false	false	0
59	"prod"	"prod"	"aggr"	0	3	false	false	false	0
60	"prod"	"prod"	"aggr"	0	3	false	false	false	0
61	"prod"	"prod"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
77	"sum"	"sum"	"aggr"	0	3	false	false	false	0
78	"prod"	"prod"	"aggr"	0	3	false	false	false	0
79	"sum"	"sum"	"aggr"	0	3	false	false	false	0
80	"prod"	"prod"	"aggr"	0	3	false	false	false	0
81	"sum"	"sum"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"avg"	"avg"	"aggr"	0	3	false	false	false	0
84	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
85	"count"	"count"	"aggr"	0	3	false	false	false	0
5008	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5011	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5017	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5037	"like"	"create filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5042	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5047	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5051	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5055	"degrees"	"create function degrees(r double)\nreturns double\n return r*180/pi();"	"user"	2	1	false	false	false	2000
5059	"radians"	"create function radians(d double)\nreturns double\n return d*pi()/180;"	"user"	2	1	false	false	false	2000
5063	"times"	"create procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5066	"getanchor"	"create function getanchor( theurl url ) returns string\n external name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5070	"getbasename"	"create function getbasename(theurl url) returns string\n external name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5074	"getcontent"	"create function getcontent(theurl url) returns string\n external name url.""getContent"";"	"url"	1	1	false	false	false	2000
5078	"getcontext"	"create function getcontext(theurl url) returns string\n external name url.""getContext"";"	"url"	1	1	false	false	false	2000
5082	"getdomain"	"create function getdomain(theurl url) returns string\n external name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5086	"getextension"	"create function getextension(theurl url) returns string\n external name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5090	"getfile"	"create function getfile(theurl url) returns string\n external name url.""getFile"";"	"url"	1	1	false	false	false	2000
5094	"gethost"	"create function gethost(theurl url) returns string\n external name url.""getHost"";"	"url"	1	1	false	false	false	2000
5098	"getport"	"create function getport(theurl url) returns string\n external name url.""getPort"";"	"url"	1	1	false	false	false	2000
5102	"getprotocol"	"create function getprotocol(theurl url) returns string\n external name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5106	"getquery"	"create function getquery(theurl url) returns string\n external name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5110	"getuser"	"create function getuser(theurl url) returns string\n external name url.""getUser"";"	"url"	1	1	false	false	false	2000
5114	"getroboturl"	"create function getroboturl(theurl url) returns string\n external name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5118	"isaurl"	"create function isaurl(theurl url) returns bool\n external name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5122	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5129	"newurl"	"create function newurl(protocol string, hostname string, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5135	"str_to_date"	"create function str_to_date(s string, format string) returns date\n external name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5140	"date_to_str"	"create function date_to_str(d date, format string) returns string\n external name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5145	"str_to_time"	"create function str_to_time(s string, format string) returns time\n external name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5150	"time_to_str"	"create function time_to_str(d time, format string) returns string\n external name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5155	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n external name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5160	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n external name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5166	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n external name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5170	"host"	"create function ""host"" (p inet) returns clob\n external name inet.""host"";"	"inet"	1	1	false	false	false	2000
5174	"masklen"	"create function ""masklen"" (p inet) returns int\n external name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5178	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n external name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5183	"netmask"	"create function ""netmask"" (p inet) returns inet\n external name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5187	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n external name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5191	"network"	"create function ""network"" (p inet) returns inet\n external name inet.""network"";"	"inet"	1	1	false	false	false	2000
5195	"text"	"create function ""text"" (p inet) returns clob\n external name inet.""text"";"	"inet"	1	1	false	false	false	2000
5199	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n external name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5203	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n external name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5208	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n external name inet."">>"";"	"inet"	1	1	false	false	false	2000
5213	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5218	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet."">>="";"	"inet"	1	1	false	false	false	2000
5223	"querylog_catalog"	"create function sys.querylog_catalog()\nreturns table(\n id oid,\n owner string,\n defined timestamp,\n query string,\n pipe string,\n ""plan"" string, \n mal int, \n optimize bigint \n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5233	"querylog_calls"	"create function sys.querylog_calls()\nreturns table(\n id oid, \n ""start"" timestamp, \n ""stop"" timestamp, \n arguments string, \n tuples bigint, \n run bigint, \n ship bigint, \n cpu int, \n io int \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5283	"querylog_empty"	"create procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5285	"querylog_enable"	"create procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5287	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5290	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5292	"tracelog"	"create function sys.tracelog()\n returns table (\n event integer, \n clk varchar(20), \n pc varchar(50), \n thread int, \n ticks bigint, \n rrsmb bigint, \n vmmb bigint, \n reads bigint, \n writes bigint, \n minflt bigint, \n majflt bigint, \n nvcsw bigint, \n stmt string \n )\n external name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5322	"epoch"	"create function sys.""epoch""(sec bigint) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5326	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5330	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5334	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5338	"shrink"	"create procedure shrink(sys string, tab string)\n external name sql.shrink;"	"sql"	1	2	true	false	false	2000
5342	"reuse"	"create procedure reuse(sys string, tab string)\n external name sql.reuse;"	"sql"	1	2	true	false	false	2000
5346	"vacuum"	"create procedure vacuum(sys string, tab string)\n external name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5350	"dependencies_schemas_on_users"	"create function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5355	"dependencies_owners_on_schemas"	"create function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5360	"dependencies_tables_on_views"	"create function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5365	"dependencies_tables_on_indexes"	"create function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5370	"dependencies_tables_on_triggers"	"create function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5375	"dependencies_tables_on_foreignkeys"	"create function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5380	"dependencies_tables_on_functions"	"create function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5385	"dependencies_columns_on_views"	"create function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5390	"dependencies_columns_on_keys"	"create function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5395	"dependencies_columns_on_indexes"	"create function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5400	"dependencies_columns_on_functions"	"create function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5405	"dependencies_columns_on_triggers"	"create function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5410	"dependencies_views_on_functions"	"create function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5415	"dependencies_views_on_triggers"	"create function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5420	"dependencies_functions_on_functions"	"create function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5425	"dependencies_functions_os_triggers"	"create function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5430	"dependencies_keys_on_foreignkeys"	"create function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5435	"password_hash"	"create function sys.password_hash (username string)\n returns string\n external name sql.password;"	"sql"	1	1	false	false	false	2000
5439	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5455	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5458	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5462	"settimeout"	"create procedure sys.settimeout(""query"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5465	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5469	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n external name sql.setsession;"	"sql"	1	2	true	false	false	2000
5472	"ms_stuff"	"create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n declare res varchar(32), aux varchar(32);\n declare ofset int;\n if ( st < 0 or st > length(s1))\n then return '';\n end if;\n set ofset = 1;\n set res = substring(s1,ofset,st-1);\n set res = res || s3;\n set ofset = st + len;\n set aux = substring(s1,ofset,length(s1)-ofset+1);\n set res = res || aux;\n return res;\nend;"	"user"	2	1	false	false	false	2000
5479	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5484	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n if (truncat = 0)\n then return round(num, prc);\n else return ms_trunc(num, prc);\n end if;\nend;"	"user"	2	1	false	false	false	2000
5490	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5496	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5501	"zorder_encode"	"create function zorder_encode(x integer, y integer) returns oid\n external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5506	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5510	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5514	"optimizer_stats"	"create function sys.optimizer_stats ()\n returns table (rewrite string, count int)\n external name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5518	"querycache"	"create function sys.querycache()\n returns table (query string, count int)\n external name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5522	"querylog"	"create procedure sys.querylog(filename string)\n external name sql.logfile;"	"sql"	1	2	true	false	false	2000
5525	"optimizers"	"create function sys.optimizers ()\n returns table (name string, def string, status string)\n external name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5535	"environment"	"create function sys.environment()\n returns table (""name"" string, value string)\n external name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
5543	"bbp"	"create function sys.bbp ()\n returns table (id int, name string, \n ttype string, count bigint, refcnt int, lrefcnt int,\n location string, heat int, dirty string,\n status string, kind string)\n external name bbp.get;"	"bbp"	1	5	false	false	false	2000
5556	"malfunctions"	"create function sys.malfunctions()\n returns table(""signature"" string, ""address"" string, ""comment"" string)\n external name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
5561	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n external name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
5565	"flush_log"	"create procedure sys.flush_log ()\n external name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
5567	"debug"	"create function sys.debug(debug int) returns integer\n external name mdb.""setDebug"";"	"mdb"	1	1	false	false	false	2000
5571	"queue"	"create function sys.queue()\nreturns table(\n qtag bigint,\n ""user"" string,\n started timestamp,\n estimate timestamp,\n progress int,\n status string,\n tag oid,\n query string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
5591	"pause"	"create procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5594	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5597	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5600	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5603	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5606	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5609	"rejects"	"create function sys.rejects()\nreturns table(\n rowid bigint,\n fldid int,\n ""message"" string,\n ""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
5621	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
5623	"stddev_samp"	"create aggregate stddev_samp(val tinyint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5627	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5631	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5635	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5639	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5643	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5647	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5651	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5655	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5659	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5663	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5667	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5671	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5675	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5679	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5683	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5687	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5691	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5695	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5699	"var_samp"	"create aggregate var_samp(val smallint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5703	"var_samp"	"create aggregate var_samp(val integer) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5707	"var_samp"	"create aggregate var_samp(val bigint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5711	"var_samp"	"create aggregate var_samp(val real) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5715	"var_samp"	"create aggregate var_samp(val double) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5719	"var_samp"	"create aggregate var_samp(val date) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5723	"var_samp"	"create aggregate var_samp(val time) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5727	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5731	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5735	"var_pop"	"create aggregate var_pop(val smallint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5739	"var_pop"	"create aggregate var_pop(val integer) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5743	"var_pop"	"create aggregate var_pop(val bigint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5747	"var_pop"	"create aggregate var_pop(val real) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5751	"var_pop"	"create aggregate var_pop(val double) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5755	"var_pop"	"create aggregate var_pop(val date) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5759	"var_pop"	"create aggregate var_pop(val time) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5763	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5767	"median"	"create aggregate median(val tinyint) returns tinyint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5771	"median"	"create aggregate median(val smallint) returns smallint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5775	"median"	"create aggregate median(val integer) returns integer\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5779	"median"	"create aggregate median(val bigint) returns bigint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5783	"median"	"create aggregate median(val decimal) returns decimal\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5787	"median"	"create aggregate median(val real) returns real\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5791	"median"	"create aggregate median(val double) returns double\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5795	"median"	"create aggregate median(val date) returns date\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5799	"median"	"create aggregate median(val time) returns time\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5803	"median"	"create aggregate median(val timestamp) returns timestamp\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5807	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5812	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5817	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5822	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5827	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5832	"quantile"	"create aggregate quantile(val real, q double) returns real\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5837	"quantile"	"create aggregate quantile(val double, q double) returns double\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5842	"quantile"	"create aggregate quantile(val date, q double) returns date\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5847	"quantile"	"create aggregate quantile(val time, q double) returns time\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5852	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
5857	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
5862	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
5867	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
5872	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
5877	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
5882	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
5900	"mbr"	"create function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
5904	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
5909	"geomfromtext"	"create function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
5914	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
5919	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
5924	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
5929	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
5934	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
5939	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
5944	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
5949	"polygonfromtext"	"create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
5954	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
5958	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
5962	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
5966	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
5971	"dimension"	"create function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
5975	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
5979	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
5983	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
5987	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
5991	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
5995	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
5999	"equals"	"create function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6004	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6009	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6014	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6019	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6024	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6029	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6034	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6040	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6045	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6051	"area"	"create function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6055	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6059	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6064	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6069	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6073	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6078	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6083	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6088	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6095	"filter"	"create function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6092
6100	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6092
6105	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6092
6110	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6092
6115	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6092
6120	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6092
6124	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6092
6128	"isvalid"	"create function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6092
6132	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6092
6136	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6092
6140	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6092
6144	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6092
6148	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6092
6152	"length"	"create function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6092
6156	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6092
6160	"valuearray"	"create function json.valuearray(js json)\nreturns json external name json.valuearray;"	"json"	1	1	false	false	false	6092
6164	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6092
6168	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6092
6172	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6092
6176	"output"	"create aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6092
6180	"tojsonarray"	"create aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6092
6184	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6092
6188	"md5"	"create function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6193	"uuid"	"create function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6196	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6200	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6204	"chi2prob"	"create function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6210	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	6208
6212	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	6208
6214	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	6208
6217	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	6208
6220	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	6208
6245	"listdir"	"create procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6248	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6251	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6254	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6290	"netcdf_attach"	"create procedure netcdf_attach(fname varchar(256))\n external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6293	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6297	"storage"	"create function sys.""storage""()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6341	"storagemodelinit"	"create procedure sys.storagemodelinit()\nbegin\n delete from sys.storagemodelinput;\n insert into sys.storagemodelinput\n select x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n update sys.storagemodelinput\n set reference = true\n where concat(concat(""schema"",""table""), ""column"") in (\n select concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n from ""sys"".""keys"" as ""fkkey"",\n ""sys"".""objects"" as ""fkkeycol"",\n ""sys"".""tables"" as ""fktable"",\n ""sys"".""schemas"" as ""fkschema""\n where ""fktable"".""id"" = ""fkkey"".""table_id""\n and ""fkkey"".""id"" = ""fkkeycol"".""id""\n and ""fkschema"".""id"" = ""fktable"".""schema_id""\n and ""fkkey"".""rkey"" > -1);\n update sys.storagemodelinput\n set ""distinct"" = ""count"" \n where ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6343	"columnsize"	"create function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n case\n when nme = 'boolean' then return i;\n when nme = 'char' then return 2*i;\n when nme = 'smallint' then return 2 * i;\n when nme = 'int' then return 4 * i;\n when nme = 'bigint' then return 8 * i;\n when nme = 'hugeint' then return 16 * i;\n when nme = 'timestamp' then return 8 * i;\n when nme = 'varchar' then\n case\n when cast(d as bigint) << 8 then return i;\n when cast(d as bigint) << 16 then return 2 * i;\n when cast(d as bigint) << 32 then return 4 * i;\n else return 8 * i;\n end case;\n else return 8 * i;\n end case;\nend;"	"user"	2	1	false	false	false	2000
6349	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n if tpe <> 'varchar' and tpe <> 'clob'\n then\n return 0;\n end if;\n return 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6355	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n \n if b = true\n then\n return 8 * i;\n end if;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
6360	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n if nme = 'boolean'\n or nme = 'tinyint'\n or nme = 'smallint'\n or nme = 'int'\n or nme = 'bigint'\n or nme = 'hugeint'\n or nme = 'decimal'\n or nme = 'date'\n or nme = 'timestamp'\n or nme = 'real'\n or nme = 'double'\n then\n return cast( i * 0.12 as bigint);\n end if ;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
6365	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""count"" bigint,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n imprints bigint,\n sorted boolean)\nbegin\n return select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n columnsize(i.""type"", i.count, i.""distinct""),\n heapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n hashsize(i.""reference"", i.""count""),\n imprintsize(i.""count"",i.""type""),\n i.sorted\n from sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6412	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6416	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6421	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6427	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6434	"reverse"	"create function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6438	"fuse"	"create function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6443	"fuse"	"create function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6448	"fuse"	"create function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6454	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6452
6458	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6452
6462	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6452
6466	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6452
6470	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6452
6475	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6452
6479	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6452
6483	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6452
6487	"seq_char"	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	"bam"	1	1	false	false	false	6452
6494	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6452
6497	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6452
6567	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6572	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6578	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6583	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6589	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6594	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6600	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6605	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6611	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6617	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6623	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6629	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6226	6227	0	"keywords_keyword_pkey"
6231	6235	0	"table_types_table_type_id_pkey"
6234	6235	0	"table_types_table_type_name_unique"
6239	6243	0	"dependency_types_dependency_type_id_pkey"
6242	6243	0	"dependency_types_dependency_type_name_unique"
6507	6508	0	"files_pkey_file_id"
6518	6521	0	"sq_pkey_sn_file_id"
6520	6521	1	"sq_fkey_file_id"
6537	6540	0	"rg_pkey_id_file_id"
6539	6540	1	"rg_fkey_file_id"
6549	6552	0	"pg_pkey_id_file_id"
6551	6552	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6225	6227	0	"keywords_keyword_pkey"	-1	-1
6230	6235	0	"table_types_table_type_id_pkey"	-1	-1
6233	6235	1	"table_types_table_type_name_unique"	-1	-1
6238	6243	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6241	6243	1	"dependency_types_dependency_type_name_unique"	-1	-1
6506	6508	0	"files_pkey_file_id"	-1	-1
6517	6521	0	"sq_pkey_sn_file_id"	-1	-1
6519	6521	2	"sq_fkey_file_id"	6506	514
6536	6540	0	"rg_pkey_id_file_id"	-1	-1
6538	6540	2	"rg_fkey_file_id"	6506	514
6548	6552	0	"pg_pkey_id_file_id"	-1	-1
6550	6552	2	"pg_fkey_file_id"	6506	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6226	"keyword"	0
6225	"keyword"	0
6231	"table_type_id"	0
6234	"table_type_name"	0
6230	"table_type_id"	0
6233	"table_type_name"	0
6239	"dependency_type_id"	0
6242	"dependency_type_name"	0
6238	"dependency_type_id"	0
6241	"dependency_type_name"	0
6507	"file_id"	0
6506	"file_id"	0
6518	"sn"	0
6518	"file_id"	1
6520	"file_id"	0
6517	"sn"	0
6517	"file_id"	1
6519	"file_id"	0
6537	"id"	0
6537	"file_id"	1
6539	"file_id"	0
6536	"id"	0
6536	"file_id"	1
6538	"file_id"	0
6549	"id"	0
6549	"file_id"	1
6551	"file_id"	0
6548	"id"	0
6548	"file_id"	1
6550	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 46 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
4987	1	1	0	0
4997	1	1	0	0
5023	1	1	0	0
5026	1	1	0	0
5030	1	1	0	0
5037	1	16	3	0
5042	1	16	3	0
5047	1	16	3	0
5051	1	16	3	0
5055	1	16	3	0
5059	1	16	3	0
5063	1	16	3	0
5135	1	16	3	0
5140	1	16	3	0
5145	1	16	3	0
5150	1	16	3	0
5155	1	16	3	0
5160	1	16	3	0
5322	1	16	3	0
5326	1	16	3	0
5330	1	16	3	0
5334	1	16	3	0
5472	1	16	3	0
5479	1	16	3	0
5484	1	16	3	0
5490	1	16	3	0
5496	1	16	3	0
5501	1	16	3	0
5506	1	16	3	0
5510	1	16	3	0
5609	1	16	3	0
6188	1	16	3	0
6636	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6092	"json"	3	3	true
6208	"profiler"	3	3	true
6452	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1289 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
27
28
29
30
31
32
33
34
35
36
37
41
42
43
44
47
48
49
66
67
68
69
70
71
72
73
74
75
76
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
26
38
39
40
45
46
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
77
78
79
80
81
82
83
84
85
5008
5011
5017
5037
5042
5047
5051
5055
5059
5063
5066
5070
5074
5078
5082
5086
5090
5094
5098
5102
5106
5110
5114
5118
5122
5129
5135
5140
5145
5150
5155
5160
5166
5170
5174
5178
5183
5187
5191
5195
5199
5203
5208
5213
5218
5223
5233
5283
5285
5287
5290
5292
5322
5326
5330
5334
5338
5342
5346
5350
5355
5360
5365
5370
5375
5380
5385
5390
5395
5400
5405
5410
5415
5420
5425
5430
5435
5439
5455
5458
5462
5465
5469
5472
5479
5484
5490
5496
5501
5506
5510
5514
5518
5522
5525
5535
5543
5556
5561
5565
5567
5571
5591
5594
5597
5600
5603
5606
5609
5621
5623
5627
5631
5635
5639
5643
5647
5651
5655
5659
5663
5667
5671
5675
5679
5683
5687
5691
5695
5699
5703
5707
5711
5715
5719
5723
5727
5731
5735
5739
5743
5747
5751
5755
5759
5763
5767
5771
5775
5779
5783
5787
5791
5795
5799
5803
5807
5812
5817
5822
5827
5832
5837
5842
5847
5852
5857
5862
5867
5872
5877
5882
5900
5904
5909
5914
5919
5924
5929
5934
5939
5944
5949
5954
5958
5962
5966
5971
5975
5979
5983
5987
5991
5995
5999
6004
6009
6014
6019
6024
6029
6034
6040
6045
6051
6055
6059
6064
6069
6073
6078
6083
6088
6095
6100
6105
6110
6115
6120
6124
6128
6132
6136
6140
6144
6148
6152
6156
6160
6164
6168
6172
6176
6180
6184
6188
6193
6196
6200
6204
6210
6212
6214
6217
6220
6245
6248
6251
6254
6290
6293
6297
6341
6343
6349
6355
6360
6365
6412
6416
6421
6427
6434
6438
6443
6448
6454
6458
6462
6466
6470
6475
6479
6483
6487
6494
6497
6567
6572
6578
6583
6589
6594
6600
6605
6611
6617
6623
6629
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 43 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"bte"	"decimal"	2	1	10	10	0
13	"sht"	"decimal"	4	1	10	10	0
14	"int"	"decimal"	9	1	10	10	0
15	"lng"	"decimal"	19	1	10	10	0
16	"flt"	"real"	24	2	2	11	0
17	"dbl"	"double"	53	2	2	11	0
18	"int"	"month_interval"	32	0	2	8	0
19	"lng"	"sec_interval"	13	1	10	9	0
20	"daytime"	"time"	7	0	0	12	0
21	"daytime"	"timetz"	7	1	0	12	0
22	"date"	"date"	0	0	0	13	0
23	"timestamp"	"timestamp"	7	0	0	14	0
24	"timestamp"	"timestamptz"	7	1	0	14	0
25	"sqlblob"	"blob"	0	0	0	5	0
5064	"url"	"url"	0	0	0	15	2000
5164	"inet"	"inet"	0	0	0	15	2000
5886	"wkb"	"point"	0	0	0	15	2000
5887	"wkb"	"curve"	0	0	0	15	2000
5888	"wkb"	"linestring"	0	0	0	15	2000
5889	"wkb"	"surface"	0	0	0	15	2000
5890	"wkb"	"polygon"	0	0	0	15	2000
5891	"wkb"	"multipoint"	0	0	0	15	2000
5892	"wkb"	"multicurve"	0	0	0	15	2000
5893	"wkb"	"multilinestring"	0	0	0	15	2000
5894	"wkb"	"multisurface"	0	0	0	15	2000
5895	"wkb"	"multipolygon"	0	0	0	15	2000
5896	"wkb"	"geometry"	0	0	0	15	2000
5897	"wkb"	"geomcollection"	0	0	0	15	2000
5898	"mbr"	"mbr"	0	0	0	15	2000
6093	"json"	"json"	0	0	0	15	2000
6191	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

