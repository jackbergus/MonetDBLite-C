stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.debug
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geometrytype
SYSTEM FUNCTION  sys.get_type
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.has_m
SYSTEM FUNCTION  sys.has_z
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.st_area
SYSTEM FUNCTION  sys.st_asbinary
SYSTEM FUNCTION  sys.st_asewkt
SYSTEM FUNCTION  sys.st_astext
SYSTEM FUNCTION  sys.st_bdmpolyfromtext
SYSTEM FUNCTION  sys.st_bdpolyfromtext
SYSTEM FUNCTION  sys.st_boundary
SYSTEM FUNCTION  sys.st_buffer
SYSTEM FUNCTION  sys.st_centroid
SYSTEM FUNCTION  sys.st_collect
SYSTEM FUNCTION  sys.st_contains
SYSTEM FUNCTION  sys.st_convexhull
SYSTEM FUNCTION  sys.st_coorddim
SYSTEM FUNCTION  sys.st_coveredby
SYSTEM FUNCTION  sys.st_covers
SYSTEM FUNCTION  sys.st_crosses
SYSTEM FUNCTION  sys.st_delaunaytriangles
SYSTEM FUNCTION  sys.st_difference
SYSTEM FUNCTION  sys.st_dimension
SYSTEM FUNCTION  sys.st_disjoint
SYSTEM FUNCTION  sys.st_distance
SYSTEM FUNCTION  sys.st_dump
SYSTEM FUNCTION  sys.st_dumppoints
SYSTEM FUNCTION  sys.st_dwithin
SYSTEM FUNCTION  sys.st_endpoint
SYSTEM FUNCTION  sys.st_envelope
SYSTEM FUNCTION  sys.st_equals
SYSTEM FUNCTION  sys.st_exteriorring
SYSTEM FUNCTION  sys.st_force2d
SYSTEM FUNCTION  sys.st_force3d
SYSTEM FUNCTION  sys.st_geomcollfromtext
SYSTEM FUNCTION  sys.st_geometryfromtext
SYSTEM FUNCTION  sys.st_geometryn
SYSTEM FUNCTION  sys.st_geometrytype
SYSTEM FUNCTION  sys.st_geomfromtext
SYSTEM FUNCTION  sys.st_interiorringn
SYSTEM FUNCTION  sys.st_interiorrings
SYSTEM FUNCTION  sys.st_intersection
SYSTEM FUNCTION  sys.st_intersects
SYSTEM FUNCTION  sys.st_isclosed
SYSTEM FUNCTION  sys.st_isempty
SYSTEM FUNCTION  sys.st_isring
SYSTEM FUNCTION  sys.st_issimple
SYSTEM FUNCTION  sys.st_isvalid
SYSTEM FUNCTION  sys.st_isvalidreason
SYSTEM FUNCTION  sys.st_length
SYSTEM FUNCTION  sys.st_length2d
SYSTEM FUNCTION  sys.st_linefromtext
SYSTEM FUNCTION  sys.st_makebox2d
SYSTEM FUNCTION  sys.st_makeenvelope
SYSTEM FUNCTION  sys.st_makeline
SYSTEM FUNCTION  sys.st_makepoint
SYSTEM FUNCTION  sys.st_makepointm
SYSTEM FUNCTION  sys.st_makepolygon
SYSTEM FUNCTION  sys.st_mlinefromtext
SYSTEM FUNCTION  sys.st_mpointfromtext
SYSTEM FUNCTION  sys.st_mpolyfromtext
SYSTEM FUNCTION  sys.st_npoints
SYSTEM FUNCTION  sys.st_nrings
SYSTEM FUNCTION  sys.st_numgeometries
SYSTEM FUNCTION  sys.st_numinteriorring
SYSTEM FUNCTION  sys.st_numinteriorrings
SYSTEM FUNCTION  sys.st_numpatches
SYSTEM FUNCTION  sys.st_numpoints
SYSTEM FUNCTION  sys.st_overlaps
SYSTEM FUNCTION  sys.st_patchn
SYSTEM FUNCTION  sys.st_point
SYSTEM FUNCTION  sys.st_pointfromtext
SYSTEM FUNCTION  sys.st_pointn
SYSTEM FUNCTION  sys.st_pointonsurface
SYSTEM FUNCTION  sys.st_polygon
SYSTEM FUNCTION  sys.st_polygonfromtext
SYSTEM FUNCTION  sys.st_relate
SYSTEM FUNCTION  sys.st_segmentize
SYSTEM FUNCTION  sys.st_setexteriorring
SYSTEM FUNCTION  sys.st_setsrid
SYSTEM FUNCTION  sys.st_srid
SYSTEM FUNCTION  sys.st_startpoint
SYSTEM FUNCTION  sys.st_symdifference
SYSTEM FUNCTION  sys.st_touches
SYSTEM FUNCTION  sys.st_transform
SYSTEM FUNCTION  sys.st_translate
SYSTEM FUNCTION  sys.st_union
SYSTEM FUNCTION  sys.st_within
SYSTEM FUNCTION  sys.st_wkbtosql
SYSTEM FUNCTION  sys.st_wkttosql
SYSTEM FUNCTION  sys.st_x
SYSTEM FUNCTION  sys.st_xmax
SYSTEM FUNCTION  sys.st_xmin
SYSTEM FUNCTION  sys.st_y
SYSTEM FUNCTION  sys.st_ymax
SYSTEM FUNCTION  sys.st_ymin
SYSTEM FUNCTION  sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
create function sys.bbp () 
	returns table (id int, name string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
create function degrees(r double) 
returns double
	return r*180/pi();
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
 
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
create function mbr(geom geometry) returns mbr external name geom."mbr";
create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
create procedure sys.querylog(filename string) 
	external name sql.logfile;
create function sys.querylog_calls()
returns table(
 id oid, 
 "start" timestamp, 
 "stop" timestamp, 
 arguments string, 
 tuples wrd, 
 run bigint, 
 ship bigint, 
 cpu int, 
 io int 
)
external name sql.querylog_calls;
create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
 "plan" string, 
 mal int, 
 optimize bigint 
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
create procedure sys.querylog_empty()
external name sql.querylog_empty;
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys."storage"( sname string)
returns table (
 "schema" string,
 "table" string,
 "column" string,
 "type" string,
 "mode" string,
 location string,
 "count" bigint,
 typewidth int,
 columnsize bigint,
 heapsize bigint,
 hashes bigint,
 phash boolean,
 imprints bigint,
 sorted boolean
)
external name sql."storage";
create function sys."storage"( sname string, tname string)
returns table (
 "schema" string,
 "table" string,
 "column" string,
 "type" string,
 "mode" string,
 location string,
 "count" bigint,
 typewidth int,
 columnsize bigint,
 heapsize bigint,
 hashes bigint,
 phash boolean,
 imprints bigint,
 sorted boolean
)
external name sql."storage";
create function sys."storage"( sname string, tname string, cname string)
returns table (
 "schema" string,
 "table" string,
 "column" string,
 "type" string,
 "mode" string,
 location string,
 "count" bigint,
 typewidth int,
 columnsize bigint,
 heapsize bigint,
 hashes bigint,
 phash boolean,
 imprints bigint,
 sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
 set "distinct" = "count" 
	where "type" = 'varchar' or "type"='clob';
end;
create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function sys.tracelog() 
	returns table (
 event integer, 
 clk varchar(20), 
 pc varchar(50), 
 thread int, 
 ticks bigint, 
 rrsmb bigint, 
 vmmb bigint, 
 reads bigint, 
 writes bigint, 
 minflt bigint, 
 majflt bigint, 
 nvcsw bigint, 
 stmt string 
	)
	external name sql.dump_trace;
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 373 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5724	"id"	"int"	32	0	5723	NULL	true	0	NULL
5725	"name"	"varchar"	1024	0	5723	NULL	true	1	NULL
5726	"schema_id"	"int"	32	0	5723	NULL	true	2	NULL
5727	"query"	"varchar"	2048	0	5723	NULL	true	3	NULL
5728	"type"	"smallint"	16	0	5723	NULL	true	4	NULL
5729	"system"	"boolean"	1	0	5723	NULL	true	5	NULL
5730	"commit_action"	"smallint"	16	0	5723	NULL	true	6	NULL
5731	"access"	"smallint"	16	0	5723	NULL	true	7	NULL
5732	"temporary"	"smallint"	16	0	5723	NULL	true	8	NULL
5734	"id"	"int"	32	0	5733	NULL	true	0	NULL
5735	"name"	"varchar"	1024	0	5733	NULL	true	1	NULL
5736	"type"	"varchar"	1024	0	5733	NULL	true	2	NULL
5737	"type_digits"	"int"	32	0	5733	NULL	true	3	NULL
5738	"type_scale"	"int"	32	0	5733	NULL	true	4	NULL
5739	"table_id"	"int"	32	0	5733	NULL	true	5	NULL
5740	"default"	"varchar"	2048	0	5733	NULL	true	6	NULL
5741	"null"	"boolean"	1	0	5733	NULL	true	7	NULL
5742	"number"	"int"	32	0	5733	NULL	true	8	NULL
5743	"storage"	"varchar"	2048	0	5733	NULL	true	9	NULL
5750	"name"	"varchar"	1024	0	5749	NULL	true	0	NULL
5751	"fullname"	"varchar"	2048	0	5749	NULL	true	1	NULL
5752	"default_schema"	"int"	9	0	5749	NULL	true	2	NULL
5756	"name"	"varchar"	1024	0	5755	NULL	true	0	NULL
5757	"fullname"	"varchar"	2024	0	5755	NULL	true	1	NULL
5758	"default_schema"	"int"	9	0	5755	NULL	true	2	NULL
5760	"login_id"	"int"	32	0	5759	NULL	true	0	NULL
5761	"role_id"	"int"	32	0	5759	NULL	true	1	NULL
5763	"id"	"int"	32	0	5762	NULL	true	0	NULL
5764	"name"	"varchar"	1024	0	5762	NULL	true	1	NULL
5765	"grantor"	"int"	32	0	5762	NULL	true	2	NULL
5767	"obj_id"	"int"	32	0	5766	NULL	true	0	NULL
5768	"auth_id"	"int"	32	0	5766	NULL	true	1	NULL
5769	"privileges"	"int"	32	0	5766	NULL	true	2	NULL
5770	"grantor"	"int"	32	0	5766	NULL	true	3	NULL
5771	"grantable"	"int"	32	0	5766	NULL	true	4	NULL
5980	"id"	"oid"	63	0	5988	NULL	true	0	NULL
5981	"owner"	"clob"	0	0	5988	NULL	true	1	NULL
5982	"defined"	"timestamp"	7	0	5988	NULL	true	2	NULL
5983	"query"	"clob"	0	0	5988	NULL	true	3	NULL
5984	"pipe"	"clob"	0	0	5988	NULL	true	4	NULL
5985	"plan"	"clob"	0	0	5988	NULL	true	5	NULL
5986	"mal"	"int"	32	0	5988	NULL	true	6	NULL
5987	"optimize"	"bigint"	64	0	5988	NULL	true	7	NULL
5990	"id"	"oid"	63	0	5999	NULL	true	0	NULL
5991	"start"	"timestamp"	7	0	5999	NULL	true	1	NULL
5992	"stop"	"timestamp"	7	0	5999	NULL	true	2	NULL
5993	"arguments"	"clob"	0	0	5999	NULL	true	3	NULL
5994	"tuples"	"wrd"	64	0	5999	NULL	true	4	NULL
5995	"run"	"bigint"	64	0	5999	NULL	true	5	NULL
5996	"ship"	"bigint"	64	0	5999	NULL	true	6	NULL
5997	"cpu"	"int"	32	0	5999	NULL	true	7	NULL
5998	"io"	"int"	32	0	5999	NULL	true	8	NULL
6001	"id"	"oid"	63	0	6017	NULL	true	0	NULL
6002	"owner"	"clob"	0	0	6017	NULL	true	1	NULL
6003	"defined"	"timestamp"	7	0	6017	NULL	true	2	NULL
6004	"query"	"clob"	0	0	6017	NULL	true	3	NULL
6005	"pipe"	"clob"	0	0	6017	NULL	true	4	NULL
6006	"plan"	"clob"	0	0	6017	NULL	true	5	NULL
6007	"mal"	"int"	32	0	6017	NULL	true	6	NULL
6008	"optimize"	"bigint"	64	0	6017	NULL	true	7	NULL
6009	"start"	"timestamp"	7	0	6017	NULL	true	8	NULL
6010	"stop"	"timestamp"	7	0	6017	NULL	true	9	NULL
6011	"arguments"	"clob"	0	0	6017	NULL	true	10	NULL
6012	"tuples"	"wrd"	64	0	6017	NULL	true	11	NULL
6013	"run"	"bigint"	64	0	6017	NULL	true	12	NULL
6014	"ship"	"bigint"	64	0	6017	NULL	true	13	NULL
6015	"cpu"	"int"	32	0	6017	NULL	true	14	NULL
6016	"io"	"int"	32	0	6017	NULL	true	15	NULL
6043	"event"	"int"	32	0	6056	NULL	true	0	NULL
6044	"clk"	"varchar"	20	0	6056	NULL	true	1	NULL
6045	"pc"	"varchar"	50	0	6056	NULL	true	2	NULL
6046	"thread"	"int"	32	0	6056	NULL	true	3	NULL
6047	"ticks"	"bigint"	64	0	6056	NULL	true	4	NULL
6048	"rrsmb"	"bigint"	64	0	6056	NULL	true	5	NULL
6049	"vmmb"	"bigint"	64	0	6056	NULL	true	6	NULL
6050	"reads"	"bigint"	64	0	6056	NULL	true	7	NULL
6051	"writes"	"bigint"	64	0	6056	NULL	true	8	NULL
6052	"minflt"	"bigint"	64	0	6056	NULL	true	9	NULL
6053	"majflt"	"bigint"	64	0	6056	NULL	true	10	NULL
6054	"nvcsw"	"bigint"	64	0	6056	NULL	true	11	NULL
6055	"stmt"	"clob"	0	0	6056	NULL	true	12	NULL
6183	"user"	"clob"	0	0	6189	NULL	true	0	NULL
6184	"login"	"timestamp"	7	0	6189	NULL	true	1	NULL
6185	"sessiontimeout"	"bigint"	64	0	6189	NULL	true	2	NULL
6186	"lastcommand"	"timestamp"	7	0	6189	NULL	true	3	NULL
6187	"querytimeout"	"bigint"	64	0	6189	NULL	true	4	NULL
6188	"active"	"boolean"	1	0	6189	NULL	true	5	NULL
6266	"name"	"clob"	0	0	6269	NULL	true	0	NULL
6267	"def"	"clob"	0	0	6269	NULL	true	1	NULL
6268	"status"	"clob"	0	0	6269	NULL	true	2	NULL
6275	"name"	"clob"	0	0	6277	NULL	true	0	NULL
6276	"value"	"clob"	0	0	6277	NULL	true	1	NULL
6317	"qtag"	"bigint"	64	0	6325	NULL	true	0	NULL
6318	"user"	"clob"	0	0	6325	NULL	true	1	NULL
6319	"started"	"timestamp"	7	0	6325	NULL	true	2	NULL
6320	"estimate"	"timestamp"	7	0	6325	NULL	true	3	NULL
6321	"progress"	"int"	32	0	6325	NULL	true	4	NULL
6322	"status"	"clob"	0	0	6325	NULL	true	5	NULL
6323	"tag"	"oid"	63	0	6325	NULL	true	6	NULL
6324	"query"	"clob"	0	0	6325	NULL	true	7	NULL
6351	"rowid"	"bigint"	64	0	6355	NULL	true	0	NULL
6352	"fldid"	"int"	32	0	6355	NULL	true	1	NULL
6353	"message"	"clob"	0	0	6355	NULL	true	2	NULL
6354	"input"	"clob"	0	0	6355	NULL	true	3	NULL
6666	"srid"	"int"	32	0	6673	NULL	false	0	NULL
6669	"auth_name"	"varchar"	256	0	6673	NULL	true	1	NULL
6670	"auth_srid"	"int"	32	0	6673	NULL	true	2	NULL
6671	"srtext"	"varchar"	2048	0	6673	NULL	true	3	NULL
6672	"proj4text"	"varchar"	2048	0	6673	NULL	true	4	NULL
6675	"f_table_catalog"	"clob"	0	0	6682	NULL	true	0	NULL
6676	"f_table_schema"	"varchar"	1024	0	6682	NULL	true	1	NULL
6677	"f_table_name"	"varchar"	1024	0	6682	NULL	true	2	NULL
6678	"f_geometry_column"	"varchar"	1024	0	6682	NULL	true	3	NULL
6679	"coord_dimension"	"bigint"	64	0	6682	NULL	true	4	NULL
6680	"srid"	"int"	32	0	6682	NULL	true	5	NULL
6681	"type"	"clob"	0	0	6682	NULL	true	6	NULL
7380	"keyword"	"varchar"	40	0	7383	NULL	false	0	NULL
7385	"table_type_id"	"smallint"	16	0	7391	NULL	false	0	NULL
7388	"table_type_name"	"varchar"	25	0	7391	NULL	false	1	NULL
7393	"dependency_type_id"	"smallint"	16	0	7399	NULL	false	0	NULL
7396	"dependency_type_name"	"varchar"	15	0	7399	NULL	false	1	NULL
7414	"file_id"	"int"	32	0	7416	NULL	true	0	NULL
7415	"location"	"char"	256	0	7416	NULL	true	1	NULL
7418	"dim_id"	"int"	32	0	7422	NULL	true	0	NULL
7419	"file_id"	"int"	32	0	7422	NULL	true	1	NULL
7420	"name"	"varchar"	64	0	7422	NULL	true	2	NULL
7421	"length"	"int"	32	0	7422	NULL	true	3	NULL
7424	"var_id"	"int"	32	0	7430	NULL	true	0	NULL
7425	"file_id"	"int"	32	0	7430	NULL	true	1	NULL
7426	"name"	"varchar"	64	0	7430	NULL	true	2	NULL
7427	"vartype"	"varchar"	64	0	7430	NULL	true	3	NULL
7428	"ndim"	"int"	32	0	7430	NULL	true	4	NULL
7429	"coord_dim_id"	"int"	32	0	7430	NULL	true	5	NULL
7432	"var_id"	"int"	32	0	7436	NULL	true	0	NULL
7433	"dim_id"	"int"	32	0	7436	NULL	true	1	NULL
7434	"file_id"	"int"	32	0	7436	NULL	true	2	NULL
7435	"dimpos"	"int"	32	0	7436	NULL	true	3	NULL
7438	"obj_name"	"varchar"	256	0	7444	NULL	true	0	NULL
7439	"att_name"	"varchar"	256	0	7444	NULL	true	1	NULL
7440	"att_type"	"varchar"	64	0	7444	NULL	true	2	NULL
7441	"value"	"clob"	0	0	7444	NULL	true	3	NULL
7442	"file_id"	"int"	32	0	7444	NULL	true	4	NULL
7443	"gr_name"	"varchar"	256	0	7444	NULL	true	5	NULL
7469	"schema"	"clob"	0	0	7483	NULL	true	0	NULL
7470	"table"	"clob"	0	0	7483	NULL	true	1	NULL
7471	"column"	"clob"	0	0	7483	NULL	true	2	NULL
7472	"type"	"clob"	0	0	7483	NULL	true	3	NULL
7473	"mode"	"clob"	0	0	7483	NULL	true	4	NULL
7474	"location"	"clob"	0	0	7483	NULL	true	5	NULL
7475	"count"	"bigint"	64	0	7483	NULL	true	6	NULL
7476	"typewidth"	"int"	32	0	7483	NULL	true	7	NULL
7477	"columnsize"	"bigint"	64	0	7483	NULL	true	8	NULL
7478	"heapsize"	"bigint"	64	0	7483	NULL	true	9	NULL
7479	"hashes"	"bigint"	64	0	7483	NULL	true	10	NULL
7480	"phash"	"boolean"	1	0	7483	NULL	true	11	NULL
7481	"imprints"	"bigint"	64	0	7483	NULL	true	12	NULL
7482	"sorted"	"boolean"	1	0	7483	NULL	true	13	NULL
7539	"schema"	"clob"	0	0	7549	NULL	true	0	NULL
7540	"table"	"clob"	0	0	7549	NULL	true	1	NULL
7541	"column"	"clob"	0	0	7549	NULL	true	2	NULL
7542	"type"	"clob"	0	0	7549	NULL	true	3	NULL
7543	"typewidth"	"int"	32	0	7549	NULL	true	4	NULL
7544	"count"	"bigint"	64	0	7549	NULL	true	5	NULL
7545	"distinct"	"bigint"	64	0	7549	NULL	true	6	NULL
7546	"atomwidth"	"int"	32	0	7549	NULL	true	7	NULL
7547	"reference"	"boolean"	1	0	7549	NULL	true	8	NULL
7548	"sorted"	"boolean"	1	0	7549	NULL	true	9	NULL
7587	"schema"	"clob"	0	0	7597	NULL	true	0	NULL
7588	"table"	"clob"	0	0	7597	NULL	true	1	NULL
7589	"column"	"clob"	0	0	7597	NULL	true	2	NULL
7590	"type"	"clob"	0	0	7597	NULL	true	3	NULL
7591	"count"	"bigint"	64	0	7597	NULL	true	4	NULL
7592	"columnsize"	"bigint"	64	0	7597	NULL	true	5	NULL
7593	"heapsize"	"bigint"	64	0	7597	NULL	true	6	NULL
7594	"hashes"	"bigint"	64	0	7597	NULL	true	7	NULL
7595	"imprints"	"bigint"	64	0	7597	NULL	true	8	NULL
7596	"sorted"	"boolean"	1	0	7597	NULL	true	9	NULL
7599	"schema"	"clob"	0	0	7607	NULL	true	0	NULL
7600	"table"	"clob"	0	0	7607	NULL	true	1	NULL
7601	"count"	"bigint"	64	0	7607	NULL	true	2	NULL
7602	"columnsize"	"bigint"	64	0	7607	NULL	true	3	NULL
7603	"heapsize"	"bigint"	64	0	7607	NULL	true	4	NULL
7604	"hashes"	"bigint"	64	0	7607	NULL	true	5	NULL
7605	"imprints"	"bigint"	64	0	7607	NULL	true	6	NULL
7606	"auxiliary"	"bigint"	64	0	7607	NULL	true	7	NULL
7609	"column_id"	"int"	32	0	7620	NULL	true	0	NULL
7610	"type"	"clob"	0	0	7620	NULL	true	1	NULL
7611	"width"	"int"	32	0	7620	NULL	true	2	NULL
7612	"stamp"	"timestamp"	7	0	7620	NULL	true	3	NULL
7613	"sample"	"bigint"	64	0	7620	NULL	true	4	NULL
7614	"count"	"bigint"	64	0	7620	NULL	true	5	NULL
7615	"unique"	"bigint"	64	0	7620	NULL	true	6	NULL
7616	"nils"	"bigint"	64	0	7620	NULL	true	7	NULL
7617	"minval"	"clob"	0	0	7620	NULL	true	8	NULL
7618	"maxval"	"clob"	0	0	7620	NULL	true	9	NULL
7619	"sorted"	"boolean"	1	0	7620	NULL	true	10	NULL
7710	"file_id"	"bigint"	64	0	7718	NULL	false	0	NULL
7711	"file_location"	"clob"	0	0	7718	NULL	false	1	NULL
7712	"dbschema"	"smallint"	16	0	7718	NULL	false	2	NULL
7713	"format_version"	"varchar"	7	0	7718	NULL	true	3	NULL
7714	"sorting_order"	"varchar"	10	0	7718	NULL	true	4	NULL
7715	"comments"	"clob"	0	0	7718	NULL	true	5	NULL
7720	"sn"	"clob"	0	0	7731	NULL	false	0	NULL
7721	"file_id"	"bigint"	64	0	7731	NULL	false	1	NULL
7722	"ln"	"int"	32	0	7731	NULL	true	2	NULL
7723	"as"	"int"	32	0	7731	NULL	true	3	NULL
7724	"m5"	"clob"	0	0	7731	NULL	true	4	NULL
7725	"sp"	"clob"	0	0	7731	NULL	true	5	NULL
7726	"ur"	"clob"	0	0	7731	NULL	true	6	NULL
7733	"id"	"clob"	0	0	7750	NULL	false	0	NULL
7734	"file_id"	"bigint"	64	0	7750	NULL	false	1	NULL
7735	"cn"	"clob"	0	0	7750	NULL	true	2	NULL
7736	"ds"	"clob"	0	0	7750	NULL	true	3	NULL
7737	"dt"	"timestamp"	7	0	7750	NULL	true	4	NULL
7738	"fo"	"clob"	0	0	7750	NULL	true	5	NULL
7739	"ks"	"clob"	0	0	7750	NULL	true	6	NULL
7740	"lb"	"clob"	0	0	7750	NULL	true	7	NULL
7741	"pg"	"clob"	0	0	7750	NULL	true	8	NULL
7742	"pi"	"int"	32	0	7750	NULL	true	9	NULL
7743	"pl"	"clob"	0	0	7750	NULL	true	10	NULL
7744	"pu"	"clob"	0	0	7750	NULL	true	11	NULL
7745	"sm"	"clob"	0	0	7750	NULL	true	12	NULL
7752	"id"	"clob"	0	0	7762	NULL	false	0	NULL
7753	"file_id"	"bigint"	64	0	7762	NULL	false	1	NULL
7754	"pn"	"clob"	0	0	7762	NULL	true	2	NULL
7755	"cl"	"clob"	0	0	7762	NULL	true	3	NULL
7756	"pp"	"clob"	0	0	7762	NULL	true	4	NULL
7757	"vn"	"clob"	0	0	7762	NULL	true	5	NULL
7764	"qname"	"clob"	0	0	7775	NULL	false	0	NULL
7765	"flag"	"smallint"	16	0	7775	NULL	false	1	NULL
7766	"rname"	"clob"	0	0	7775	NULL	false	2	NULL
7767	"pos"	"int"	32	0	7775	NULL	false	3	NULL
7768	"mapq"	"smallint"	16	0	7775	NULL	false	4	NULL
7769	"cigar"	"clob"	0	0	7775	NULL	false	5	NULL
7770	"rnext"	"clob"	0	0	7775	NULL	false	6	NULL
7771	"pnext"	"int"	32	0	7775	NULL	false	7	NULL
7772	"tlen"	"int"	32	0	7775	NULL	false	8	NULL
7773	"seq"	"clob"	0	0	7775	NULL	false	9	NULL
7774	"qual"	"clob"	0	0	7775	NULL	false	10	NULL
7845	"function_id"	"int"	32	0	7846	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 56 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5723	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5733	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5749	"db_user_info"	2000	NULL	0	true	0	0
5755	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5759	"user_role"	2000	NULL	0	true	0	0
5762	"auths"	2000	NULL	0	true	0	0
5766	"privileges"	2000	NULL	0	true	0	0
5988	"querylog_catalog"	2000	"create view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5999	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
6017	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
6056	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
6189	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
6269	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
6277	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
6325	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6355	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6673	"spatial_ref_sys"	2000	NULL	0	true	0	0
6682	"geometry_columns"	2000	"create view geometry_columns as\n select e.value as f_table_catalog,\n s.name as f_table_schema,\n y.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type\n from schemas s, environment e, (\n select t.schema_id,\n t.name as f_table_name,\n x.name as f_geometry_column,\n has_z(info)+has_m(info)+2 as coord_dimension,\n srid, get_type(info, 0) as type\n from tables t, (\n select name, table_id, type_digits as info, type_scale as srid\n from columns\n where type in ( select distinct sqlname from types where systemname='wkb')\n ) as x\n where t.id=x.table_id\n ) y\n where y.schema_id=s.id and e.name='gdk_dbname';"	1	true	0	0
7383	"keywords"	2000	NULL	0	true	0	0
7391	"table_types"	2000	NULL	0	true	0	0
7399	"dependency_types"	2000	NULL	0	true	0	0
7416	"netcdf_files"	2000	NULL	0	true	0	0
7422	"netcdf_dims"	2000	NULL	0	true	0	0
7430	"netcdf_vars"	2000	NULL	0	true	0	0
7436	"netcdf_vardim"	2000	NULL	0	true	0	0
7444	"netcdf_attrs"	2000	NULL	0	true	0	0
7483	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
7549	"storagemodelinput"	2000	NULL	0	true	0	0
7597	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
7607	"tablestoragemodel"	2000	"create view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n sum(columnsize) as columnsize,\n sum(heapsize) as heapsize,\n sum(hashes) as hashes,\n sum(imprints) as imprints,\n sum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
7620	"statistics"	2000	NULL	0	true	0	0
7718	"files"	7662	NULL	0	true	0	0
7731	"sq"	7662	NULL	0	true	0	0
7750	"rg"	7662	NULL	0	true	0	0
7762	"pg"	7662	NULL	0	true	0	0
7775	"export"	7662	NULL	0	true	0	0
7846	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 4589 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	30	"res_0"	"boolean"	1	0	0	0
2156	30	"arg_1"	"geometry"	0	0	1	1
2157	30	"arg_2"	"geometry"	0	0	1	2
2158	31	"res_0"	"boolean"	1	0	0	0
2159	31	"arg_1"	"mbr"	0	0	1	1
2160	31	"arg_2"	"mbr"	0	0	1	2
2161	32	"res_0"	"boolean"	1	0	0	0
2162	32	"arg_1"	"geometry"	0	0	1	1
2163	32	"arg_2"	"geometry"	0	0	1	2
2164	33	"res_0"	"boolean"	1	0	0	0
2165	33	"arg_1"	"mbr"	0	0	1	1
2166	33	"arg_2"	"mbr"	0	0	1	2
2167	34	"res_0"	"boolean"	1	0	0	0
2168	34	"arg_1"	"geometry"	0	0	1	1
2169	34	"arg_2"	"geometry"	0	0	1	2
2170	35	"res_0"	"boolean"	1	0	0	0
2171	35	"arg_1"	"mbr"	0	0	1	1
2172	35	"arg_2"	"mbr"	0	0	1	2
2173	36	"res_0"	"boolean"	1	0	0	0
2174	36	"arg_1"	"geometry"	0	0	1	1
2175	36	"arg_2"	"geometry"	0	0	1	2
2176	37	"res_0"	"boolean"	1	0	0	0
2177	37	"arg_1"	"mbr"	0	0	1	1
2178	37	"arg_2"	"mbr"	0	0	1	2
2179	38	"res_0"	"boolean"	1	0	0	0
2180	38	"arg_1"	"geometry"	0	0	1	1
2181	38	"arg_2"	"geometry"	0	0	1	2
2182	39	"res_0"	"boolean"	1	0	0	0
2183	39	"arg_1"	"mbr"	0	0	1	1
2184	39	"arg_2"	"mbr"	0	0	1	2
2185	40	"res_0"	"boolean"	1	0	0	0
2186	40	"arg_1"	"geometry"	0	0	1	1
2187	40	"arg_2"	"geometry"	0	0	1	2
2188	41	"res_0"	"boolean"	1	0	0	0
2189	41	"arg_1"	"mbr"	0	0	1	1
2190	41	"arg_2"	"mbr"	0	0	1	2
2191	42	"res_0"	"boolean"	1	0	0	0
2192	42	"arg_1"	"geometry"	0	0	1	1
2193	42	"arg_2"	"geometry"	0	0	1	2
2194	43	"res_0"	"boolean"	1	0	0	0
2195	43	"arg_1"	"mbr"	0	0	1	1
2196	43	"arg_2"	"mbr"	0	0	1	2
2197	44	"res_0"	"boolean"	1	0	0	0
2198	44	"arg_1"	"geometry"	0	0	1	1
2199	44	"arg_2"	"geometry"	0	0	1	2
2200	45	"res_0"	"boolean"	1	0	0	0
2201	45	"arg_1"	"mbr"	0	0	1	1
2202	45	"arg_2"	"mbr"	0	0	1	2
2203	46	"res_0"	"boolean"	1	0	0	0
2204	46	"arg_1"	"geometry"	0	0	1	1
2205	46	"arg_2"	"geometry"	0	0	1	2
2206	47	"res_0"	"boolean"	1	0	0	0
2207	47	"arg_1"	"mbr"	0	0	1	1
2208	47	"arg_2"	"mbr"	0	0	1	2
2209	48	"res_0"	"boolean"	1	0	0	0
2210	48	"arg_1"	"geometry"	0	0	1	1
2211	48	"arg_2"	"geometry"	0	0	1	2
2212	49	"res_0"	"boolean"	1	0	0	0
2213	49	"arg_1"	"mbr"	0	0	1	1
2214	49	"arg_2"	"mbr"	0	0	1	2
2215	50	"res_0"	"boolean"	1	0	0	0
2216	50	"arg_1"	"geometry"	0	0	1	1
2217	50	"arg_2"	"geometry"	0	0	1	2
2218	51	"res_0"	"boolean"	1	0	0	0
2219	51	"arg_1"	"mbr"	0	0	1	1
2220	51	"arg_2"	"mbr"	0	0	1	2
2221	52	"res_0"	"boolean"	1	0	0	0
2222	52	"arg_1"	"geometry"	0	0	1	1
2223	52	"arg_2"	"geometry"	0	0	1	2
2224	53	"res_0"	"boolean"	1	0	0	0
2225	53	"arg_1"	"mbr"	0	0	1	1
2226	53	"arg_2"	"mbr"	0	0	1	2
2227	54	"res_0"	"double"	53	0	0	0
2228	54	"arg_1"	"geometry"	0	0	1	1
2229	54	"arg_2"	"geometry"	0	0	1	2
2230	55	"res_0"	"double"	53	0	0	0
2231	55	"arg_1"	"mbr"	0	0	1	1
2232	55	"arg_2"	"mbr"	0	0	1	2
2233	56	"res_0"	"boolean"	1	0	0	0
2234	56	"arg_1"	"geometry"	0	0	1	1
2235	56	"arg_2"	"geometry"	0	0	1	2
2236	57	"res_0"	"boolean"	1	0	0	0
2237	57	"arg_1"	"mbr"	0	0	1	1
2238	57	"arg_2"	"mbr"	0	0	1	2
2239	58	"res_0"	"boolean"	1	0	0	0
2240	58	"arg_1"	"geometry"	0	0	1	1
2241	58	"arg_2"	"geometry"	0	0	1	2
2242	59	"res_0"	"boolean"	1	0	0	0
2243	59	"arg_1"	"mbr"	0	0	1	1
2244	59	"arg_2"	"mbr"	0	0	1	2
2245	61	"res_0"	"oid"	63	0	0	0
2246	61	"arg_1"	"wrd"	64	0	1	1
2247	62	"res_0"	"oid"	63	0	0	0
2248	62	"arg_1"	"oid"	63	0	1	1
2249	63	"res_0"	"wrd"	64	0	0	0
2250	63	"arg_1"	"any"	0	0	1	1
2251	64	"res_0"	"wrd"	64	0	0	0
2252	64	"arg_1"	"wrd"	64	0	1	1
2253	64	"arg_2"	"int"	32	0	1	2
2254	64	"arg_3"	"any"	0	0	1	3
2255	65	"res_0"	"boolean"	1	0	0	0
2256	65	"arg_1"	"any"	0	0	1	1
2257	65	"arg_2"	"any"	0	0	1	2
2258	66	"res_0"	"boolean"	1	0	0	0
2259	66	"arg_1"	"any"	0	0	1	1
2260	66	"arg_2"	"any"	0	0	1	2
2261	67	"res_0"	"boolean"	1	0	0	0
2262	67	"arg_1"	"any"	0	0	1	1
2263	68	"res_0"	"boolean"	1	0	0	0
2264	68	"arg_1"	"any"	0	0	1	1
2265	68	"arg_2"	"any"	0	0	1	2
2266	69	"res_0"	"boolean"	1	0	0	0
2267	69	"arg_1"	"any"	0	0	1	1
2268	69	"arg_2"	"any"	0	0	1	2
2269	70	"res_0"	"boolean"	1	0	0	0
2270	70	"arg_1"	"any"	0	0	1	1
2271	70	"arg_2"	"any"	0	0	1	2
2272	71	"res_0"	"boolean"	1	0	0	0
2273	71	"arg_1"	"any"	0	0	1	1
2274	71	"arg_2"	"any"	0	0	1	2
2275	75	"res_0"	"boolean"	1	0	0	0
2276	75	"arg_1"	"any"	0	0	1	1
2277	75	"arg_2"	"any"	0	0	1	2
2278	76	"res_0"	"oid"	63	0	0	0
2279	76	"arg_1"	"any"	0	0	1	1
2280	77	"res_0"	"int"	32	0	0	0
2281	77	"arg_1"	"any"	0	0	1	1
2282	78	"res_0"	"oid"	63	0	0	0
2283	78	"arg_1"	"any"	0	0	1	1
2284	78	"arg_2"	"varchar"	0	0	1	2
2285	78	"arg_3"	"varchar"	0	0	1	3
2286	81	"res_0"	"any"	0	0	0	0
2287	81	"arg_1"	"any"	0	0	1	1
2288	81	"arg_2"	"any"	0	0	1	2
2289	82	"res_0"	"any"	0	0	0	0
2290	82	"arg_1"	"any"	0	0	1	1
2291	82	"arg_2"	"any"	0	0	1	2
2292	83	"res_0"	"any"	0	0	0	0
2293	83	"arg_1"	"boolean"	1	0	1	1
2294	83	"arg_2"	"any"	0	0	1	2
2295	83	"arg_3"	"any"	0	0	1	3
2296	101	"res_0"	"oid"	63	0	0	0
2297	101	"arg_1"	"oid"	63	0	1	1
2298	101	"arg_2"	"oid"	63	0	1	2
2299	102	"res_0"	"tinyint"	8	0	0	0
2300	102	"arg_1"	"tinyint"	8	0	1	1
2301	102	"arg_2"	"tinyint"	8	0	1	2
2302	103	"res_0"	"smallint"	16	0	0	0
2303	103	"arg_1"	"smallint"	16	0	1	1
2304	103	"arg_2"	"smallint"	16	0	1	2
2305	104	"res_0"	"int"	32	0	0	0
2306	104	"arg_1"	"int"	32	0	1	1
2307	104	"arg_2"	"int"	32	0	1	2
2308	105	"res_0"	"bigint"	64	0	0	0
2309	105	"arg_1"	"bigint"	64	0	1	1
2310	105	"arg_2"	"bigint"	64	0	1	2
2311	106	"res_0"	"wrd"	64	0	0	0
2312	106	"arg_1"	"wrd"	64	0	1	1
2313	106	"arg_2"	"wrd"	64	0	1	2
2314	107	"res_0"	"decimal"	2	0	0	0
2315	107	"arg_1"	"decimal"	2	0	1	1
2316	107	"arg_2"	"decimal"	2	0	1	2
2317	108	"res_0"	"decimal"	4	0	0	0
2318	108	"arg_1"	"decimal"	4	0	1	1
2319	108	"arg_2"	"decimal"	4	0	1	2
2320	109	"res_0"	"decimal"	9	0	0	0
2321	109	"arg_1"	"decimal"	9	0	1	1
2322	109	"arg_2"	"decimal"	9	0	1	2
2323	110	"res_0"	"decimal"	19	0	0	0
2324	110	"arg_1"	"decimal"	19	0	1	1
2325	110	"arg_2"	"decimal"	19	0	1	2
2326	111	"res_0"	"real"	24	0	0	0
2327	111	"arg_1"	"real"	24	0	1	1
2328	111	"arg_2"	"real"	24	0	1	2
2329	112	"res_0"	"double"	53	0	0	0
2330	112	"arg_1"	"double"	53	0	1	1
2331	112	"arg_2"	"double"	53	0	1	2
2332	122	"res_0"	"boolean"	1	0	0	0
2333	122	"arg_1"	"any"	0	0	1	1
2334	123	"res_0"	"boolean"	1	0	0	0
2335	123	"arg_1"	"boolean"	1	0	1	1
2336	123	"arg_2"	"any"	0	0	1	2
2337	124	"res_0"	"int"	32	0	0	0
2338	124	"arg_1"	"any"	0	0	1	1
2339	124	"arg_2"	"boolean"	1	0	1	2
2340	124	"arg_3"	"boolean"	1	0	1	3
2341	125	"res_0"	"int"	32	0	0	0
2342	125	"arg_1"	"any"	0	0	1	1
2343	125	"arg_2"	"boolean"	1	0	1	2
2344	125	"arg_3"	"boolean"	1	0	1	3
2345	126	"res_0"	"int"	32	0	0	0
2346	126	"arg_1"	"any"	0	0	1	1
2347	126	"arg_2"	"boolean"	1	0	1	2
2348	126	"arg_3"	"boolean"	1	0	1	3
2349	127	"res_0"	"boolean"	1	0	0	0
2350	127	"arg_1"	"boolean"	1	0	1	1
2351	127	"arg_2"	"boolean"	1	0	1	2
2352	128	"res_0"	"boolean"	1	0	0	0
2353	128	"arg_1"	"boolean"	1	0	1	1
2354	128	"arg_2"	"boolean"	1	0	1	2
2355	129	"res_0"	"boolean"	1	0	0	0
2356	129	"arg_1"	"boolean"	1	0	1	1
2357	129	"arg_2"	"boolean"	1	0	1	2
2358	130	"res_0"	"boolean"	1	0	0	0
2359	130	"arg_1"	"boolean"	1	0	1	1
2360	131	"res_0"	"smallint"	16	0	0	0
2361	131	"arg_1"	"smallint"	16	0	1	1
2362	131	"arg_2"	"tinyint"	8	0	1	2
2363	132	"res_0"	"smallint"	16	0	0	0
2364	132	"arg_1"	"smallint"	16	0	1	1
2365	132	"arg_2"	"tinyint"	8	0	1	2
2366	133	"res_0"	"int"	32	0	0	0
2367	133	"arg_1"	"int"	32	0	1	1
2368	133	"arg_2"	"tinyint"	8	0	1	2
2369	134	"res_0"	"int"	32	0	0	0
2370	134	"arg_1"	"int"	32	0	1	1
2371	134	"arg_2"	"tinyint"	8	0	1	2
2372	135	"res_0"	"int"	32	0	0	0
2373	135	"arg_1"	"int"	32	0	1	1
2374	135	"arg_2"	"smallint"	16	0	1	2
2375	136	"res_0"	"int"	32	0	0	0
2376	136	"arg_1"	"int"	32	0	1	1
2377	136	"arg_2"	"smallint"	16	0	1	2
2378	137	"res_0"	"bigint"	64	0	0	0
2379	137	"arg_1"	"bigint"	64	0	1	1
2380	137	"arg_2"	"tinyint"	8	0	1	2
2381	138	"res_0"	"bigint"	64	0	0	0
2382	138	"arg_1"	"bigint"	64	0	1	1
2383	138	"arg_2"	"tinyint"	8	0	1	2
2384	139	"res_0"	"bigint"	64	0	0	0
2385	139	"arg_1"	"bigint"	64	0	1	1
2386	139	"arg_2"	"smallint"	16	0	1	2
2387	140	"res_0"	"bigint"	64	0	0	0
2388	140	"arg_1"	"bigint"	64	0	1	1
2389	140	"arg_2"	"smallint"	16	0	1	2
2390	141	"res_0"	"bigint"	64	0	0	0
2391	141	"arg_1"	"bigint"	64	0	1	1
2392	141	"arg_2"	"int"	32	0	1	2
2393	142	"res_0"	"bigint"	64	0	0	0
2394	142	"arg_1"	"bigint"	64	0	1	1
2395	142	"arg_2"	"int"	32	0	1	2
2396	143	"res_0"	"bigint"	64	0	0	0
2397	143	"arg_1"	"bigint"	64	0	1	1
2398	143	"arg_2"	"wrd"	64	0	1	2
2399	144	"res_0"	"bigint"	64	0	0	0
2400	144	"arg_1"	"bigint"	64	0	1	1
2401	144	"arg_2"	"wrd"	64	0	1	2
2402	145	"res_0"	"wrd"	64	0	0	0
2403	145	"arg_1"	"wrd"	64	0	1	1
2404	145	"arg_2"	"tinyint"	8	0	1	2
2405	146	"res_0"	"wrd"	64	0	0	0
2406	146	"arg_1"	"wrd"	64	0	1	1
2407	146	"arg_2"	"tinyint"	8	0	1	2
2408	147	"res_0"	"wrd"	64	0	0	0
2409	147	"arg_1"	"wrd"	64	0	1	1
2410	147	"arg_2"	"smallint"	16	0	1	2
2411	148	"res_0"	"wrd"	64	0	0	0
2412	148	"arg_1"	"wrd"	64	0	1	1
2413	148	"arg_2"	"smallint"	16	0	1	2
2414	149	"res_0"	"wrd"	64	0	0	0
2415	149	"arg_1"	"wrd"	64	0	1	1
2416	149	"arg_2"	"int"	32	0	1	2
2417	150	"res_0"	"wrd"	64	0	0	0
2418	150	"arg_1"	"wrd"	64	0	1	1
2419	150	"arg_2"	"int"	32	0	1	2
2420	151	"res_0"	"oid"	63	0	0	0
2421	151	"arg_1"	"oid"	63	0	1	1
2422	151	"arg_2"	"oid"	63	0	1	2
2423	152	"res_0"	"oid"	63	0	0	0
2424	152	"arg_1"	"oid"	63	0	1	1
2425	152	"arg_2"	"oid"	63	0	1	2
2426	153	"res_0"	"oid"	63	0	0	0
2427	153	"arg_1"	"oid"	63	0	1	1
2428	153	"arg_2"	"oid"	63	0	1	2
2429	154	"res_0"	"oid"	63	0	0	0
2430	154	"arg_1"	"oid"	63	0	1	1
2431	154	"arg_2"	"oid"	63	0	1	2
2432	155	"res_0"	"oid"	63	0	0	0
2433	155	"arg_1"	"oid"	63	0	1	1
2434	155	"arg_2"	"oid"	63	0	1	2
2435	156	"res_0"	"oid"	63	0	0	0
2436	156	"arg_1"	"oid"	63	0	1	1
2437	156	"arg_2"	"oid"	63	0	1	2
2438	157	"res_0"	"oid"	63	0	0	0
2439	157	"arg_1"	"oid"	63	0	1	1
2440	157	"arg_2"	"oid"	63	0	1	2
2441	158	"res_0"	"oid"	63	0	0	0
2442	158	"arg_1"	"oid"	63	0	1	1
2443	159	"res_0"	"oid"	63	0	0	0
2444	159	"arg_1"	"oid"	63	0	1	1
2445	159	"arg_2"	"int"	32	0	1	2
2446	160	"res_0"	"oid"	63	0	0	0
2447	160	"arg_1"	"oid"	63	0	1	1
2448	160	"arg_2"	"int"	32	0	1	2
2449	161	"res_0"	"oid"	63	0	0	0
2450	161	"arg_1"	"oid"	63	0	1	1
2451	162	"res_0"	"oid"	63	0	0	0
2452	162	"arg_1"	"oid"	63	0	1	1
2453	163	"res_0"	"tinyint"	8	0	0	0
2454	163	"arg_1"	"oid"	63	0	1	1
2455	164	"res_0"	"oid"	63	0	0	0
2456	164	"arg_1"	"oid"	63	0	1	1
2457	164	"arg_2"	"oid"	63	0	1	2
2458	165	"res_0"	"oid"	63	0	0	0
2459	165	"arg_1"	"oid"	63	0	1	1
2460	165	"arg_2"	"oid"	63	0	1	2
2461	166	"res_0"	"month_interval"	32	0	0	0
2462	166	"arg_1"	"month_interval"	32	0	1	1
2463	166	"arg_2"	"oid"	63	0	1	2
2464	167	"res_0"	"month_interval"	32	0	0	0
2465	167	"arg_1"	"month_interval"	32	0	1	1
2466	167	"arg_2"	"oid"	63	0	1	2
2467	168	"res_0"	"month_interval"	32	0	0	0
2468	168	"arg_1"	"month_interval"	32	0	1	1
2469	168	"arg_2"	"oid"	63	0	1	2
2470	169	"res_0"	"month_interval"	32	0	0	0
2471	169	"arg_1"	"month_interval"	32	0	1	1
2472	169	"arg_2"	"oid"	63	0	1	2
2473	170	"res_0"	"sec_interval"	13	0	0	0
2474	170	"arg_1"	"sec_interval"	13	0	1	1
2475	170	"arg_2"	"oid"	63	0	1	2
2476	171	"res_0"	"sec_interval"	13	0	0	0
2477	171	"arg_1"	"sec_interval"	13	0	1	1
2478	171	"arg_2"	"oid"	63	0	1	2
2479	172	"res_0"	"sec_interval"	13	0	0	0
2480	172	"arg_1"	"sec_interval"	13	0	1	1
2481	172	"arg_2"	"oid"	63	0	1	2
2482	173	"res_0"	"sec_interval"	13	0	0	0
2483	173	"arg_1"	"sec_interval"	13	0	1	1
2484	173	"arg_2"	"oid"	63	0	1	2
2485	174	"res_0"	"tinyint"	8	0	0	0
2486	174	"arg_1"	"tinyint"	8	0	1	1
2487	174	"arg_2"	"tinyint"	8	0	1	2
2488	175	"res_0"	"tinyint"	8	0	0	0
2489	175	"arg_1"	"tinyint"	8	0	1	1
2490	175	"arg_2"	"tinyint"	8	0	1	2
2491	176	"res_0"	"tinyint"	8	0	0	0
2492	176	"arg_1"	"tinyint"	8	0	1	1
2493	176	"arg_2"	"tinyint"	8	0	1	2
2494	177	"res_0"	"tinyint"	8	0	0	0
2495	177	"arg_1"	"tinyint"	8	0	1	1
2496	177	"arg_2"	"tinyint"	8	0	1	2
2497	178	"res_0"	"tinyint"	8	0	0	0
2498	178	"arg_1"	"tinyint"	8	0	1	1
2499	178	"arg_2"	"tinyint"	8	0	1	2
2500	179	"res_0"	"tinyint"	8	0	0	0
2501	179	"arg_1"	"tinyint"	8	0	1	1
2502	179	"arg_2"	"tinyint"	8	0	1	2
2503	180	"res_0"	"tinyint"	8	0	0	0
2504	180	"arg_1"	"tinyint"	8	0	1	1
2505	180	"arg_2"	"tinyint"	8	0	1	2
2506	181	"res_0"	"tinyint"	8	0	0	0
2507	181	"arg_1"	"tinyint"	8	0	1	1
2508	182	"res_0"	"tinyint"	8	0	0	0
2509	182	"arg_1"	"tinyint"	8	0	1	1
2510	182	"arg_2"	"int"	32	0	1	2
2511	183	"res_0"	"tinyint"	8	0	0	0
2512	183	"arg_1"	"tinyint"	8	0	1	1
2513	183	"arg_2"	"int"	32	0	1	2
2514	184	"res_0"	"tinyint"	8	0	0	0
2515	184	"arg_1"	"tinyint"	8	0	1	1
2516	185	"res_0"	"tinyint"	8	0	0	0
2517	185	"arg_1"	"tinyint"	8	0	1	1
2518	186	"res_0"	"tinyint"	8	0	0	0
2519	186	"arg_1"	"tinyint"	8	0	1	1
2520	187	"res_0"	"tinyint"	8	0	0	0
2521	187	"arg_1"	"tinyint"	8	0	1	1
2522	187	"arg_2"	"tinyint"	8	0	1	2
2523	188	"res_0"	"tinyint"	8	0	0	0
2524	188	"arg_1"	"tinyint"	8	0	1	1
2525	188	"arg_2"	"tinyint"	8	0	1	2
2526	189	"res_0"	"month_interval"	32	0	0	0
2527	189	"arg_1"	"month_interval"	32	0	1	1
2528	189	"arg_2"	"tinyint"	8	0	1	2
2529	190	"res_0"	"month_interval"	32	0	0	0
2530	190	"arg_1"	"month_interval"	32	0	1	1
2531	190	"arg_2"	"tinyint"	8	0	1	2
2532	191	"res_0"	"month_interval"	32	0	0	0
2533	191	"arg_1"	"month_interval"	32	0	1	1
2534	191	"arg_2"	"tinyint"	8	0	1	2
2535	192	"res_0"	"month_interval"	32	0	0	0
2536	192	"arg_1"	"month_interval"	32	0	1	1
2537	192	"arg_2"	"tinyint"	8	0	1	2
2538	193	"res_0"	"sec_interval"	13	0	0	0
2539	193	"arg_1"	"sec_interval"	13	0	1	1
2540	193	"arg_2"	"tinyint"	8	0	1	2
2541	194	"res_0"	"sec_interval"	13	0	0	0
2542	194	"arg_1"	"sec_interval"	13	0	1	1
2543	194	"arg_2"	"tinyint"	8	0	1	2
2544	195	"res_0"	"sec_interval"	13	0	0	0
2545	195	"arg_1"	"sec_interval"	13	0	1	1
2546	195	"arg_2"	"tinyint"	8	0	1	2
2547	196	"res_0"	"sec_interval"	13	0	0	0
2548	196	"arg_1"	"sec_interval"	13	0	1	1
2549	196	"arg_2"	"tinyint"	8	0	1	2
2550	197	"res_0"	"smallint"	16	0	0	0
2551	197	"arg_1"	"smallint"	16	0	1	1
2552	197	"arg_2"	"smallint"	16	0	1	2
2553	198	"res_0"	"smallint"	16	0	0	0
2554	198	"arg_1"	"smallint"	16	0	1	1
2555	198	"arg_2"	"smallint"	16	0	1	2
2556	199	"res_0"	"smallint"	16	0	0	0
2557	199	"arg_1"	"smallint"	16	0	1	1
2558	199	"arg_2"	"smallint"	16	0	1	2
2559	200	"res_0"	"smallint"	16	0	0	0
2560	200	"arg_1"	"smallint"	16	0	1	1
2561	200	"arg_2"	"smallint"	16	0	1	2
2562	201	"res_0"	"smallint"	16	0	0	0
2563	201	"arg_1"	"smallint"	16	0	1	1
2564	201	"arg_2"	"smallint"	16	0	1	2
2565	202	"res_0"	"smallint"	16	0	0	0
2566	202	"arg_1"	"smallint"	16	0	1	1
2567	202	"arg_2"	"smallint"	16	0	1	2
2568	203	"res_0"	"smallint"	16	0	0	0
2569	203	"arg_1"	"smallint"	16	0	1	1
2570	203	"arg_2"	"smallint"	16	0	1	2
2571	204	"res_0"	"smallint"	16	0	0	0
2572	204	"arg_1"	"smallint"	16	0	1	1
2573	205	"res_0"	"smallint"	16	0	0	0
2574	205	"arg_1"	"smallint"	16	0	1	1
2575	205	"arg_2"	"int"	32	0	1	2
2576	206	"res_0"	"smallint"	16	0	0	0
2577	206	"arg_1"	"smallint"	16	0	1	1
2578	206	"arg_2"	"int"	32	0	1	2
2579	207	"res_0"	"smallint"	16	0	0	0
2580	207	"arg_1"	"smallint"	16	0	1	1
2581	208	"res_0"	"smallint"	16	0	0	0
2582	208	"arg_1"	"smallint"	16	0	1	1
2583	209	"res_0"	"tinyint"	8	0	0	0
2584	209	"arg_1"	"smallint"	16	0	1	1
2585	210	"res_0"	"smallint"	16	0	0	0
2586	210	"arg_1"	"smallint"	16	0	1	1
2587	210	"arg_2"	"smallint"	16	0	1	2
2588	211	"res_0"	"smallint"	16	0	0	0
2589	211	"arg_1"	"smallint"	16	0	1	1
2590	211	"arg_2"	"smallint"	16	0	1	2
2591	212	"res_0"	"month_interval"	32	0	0	0
2592	212	"arg_1"	"month_interval"	32	0	1	1
2593	212	"arg_2"	"smallint"	16	0	1	2
2594	213	"res_0"	"month_interval"	32	0	0	0
2595	213	"arg_1"	"month_interval"	32	0	1	1
2596	213	"arg_2"	"smallint"	16	0	1	2
2597	214	"res_0"	"month_interval"	32	0	0	0
2598	214	"arg_1"	"month_interval"	32	0	1	1
2599	214	"arg_2"	"smallint"	16	0	1	2
2600	215	"res_0"	"month_interval"	32	0	0	0
2601	215	"arg_1"	"month_interval"	32	0	1	1
2602	215	"arg_2"	"smallint"	16	0	1	2
2603	216	"res_0"	"sec_interval"	13	0	0	0
2604	216	"arg_1"	"sec_interval"	13	0	1	1
2605	216	"arg_2"	"smallint"	16	0	1	2
2606	217	"res_0"	"sec_interval"	13	0	0	0
2607	217	"arg_1"	"sec_interval"	13	0	1	1
2608	217	"arg_2"	"smallint"	16	0	1	2
2609	218	"res_0"	"sec_interval"	13	0	0	0
2610	218	"arg_1"	"sec_interval"	13	0	1	1
2611	218	"arg_2"	"smallint"	16	0	1	2
2612	219	"res_0"	"sec_interval"	13	0	0	0
2613	219	"arg_1"	"sec_interval"	13	0	1	1
2614	219	"arg_2"	"smallint"	16	0	1	2
2615	220	"res_0"	"int"	32	0	0	0
2616	220	"arg_1"	"int"	32	0	1	1
2617	220	"arg_2"	"int"	32	0	1	2
2618	221	"res_0"	"int"	32	0	0	0
2619	221	"arg_1"	"int"	32	0	1	1
2620	221	"arg_2"	"int"	32	0	1	2
2621	222	"res_0"	"int"	32	0	0	0
2622	222	"arg_1"	"int"	32	0	1	1
2623	222	"arg_2"	"int"	32	0	1	2
2624	223	"res_0"	"int"	32	0	0	0
2625	223	"arg_1"	"int"	32	0	1	1
2626	223	"arg_2"	"int"	32	0	1	2
2627	224	"res_0"	"int"	32	0	0	0
2628	224	"arg_1"	"int"	32	0	1	1
2629	224	"arg_2"	"int"	32	0	1	2
2630	225	"res_0"	"int"	32	0	0	0
2631	225	"arg_1"	"int"	32	0	1	1
2632	225	"arg_2"	"int"	32	0	1	2
2633	226	"res_0"	"int"	32	0	0	0
2634	226	"arg_1"	"int"	32	0	1	1
2635	226	"arg_2"	"int"	32	0	1	2
2636	227	"res_0"	"int"	32	0	0	0
2637	227	"arg_1"	"int"	32	0	1	1
2638	228	"res_0"	"int"	32	0	0	0
2639	228	"arg_1"	"int"	32	0	1	1
2640	228	"arg_2"	"int"	32	0	1	2
2641	229	"res_0"	"int"	32	0	0	0
2642	229	"arg_1"	"int"	32	0	1	1
2643	229	"arg_2"	"int"	32	0	1	2
2644	230	"res_0"	"int"	32	0	0	0
2645	230	"arg_1"	"int"	32	0	1	1
2646	231	"res_0"	"int"	32	0	0	0
2647	231	"arg_1"	"int"	32	0	1	1
2648	232	"res_0"	"tinyint"	8	0	0	0
2649	232	"arg_1"	"int"	32	0	1	1
2650	233	"res_0"	"int"	32	0	0	0
2651	233	"arg_1"	"int"	32	0	1	1
2652	233	"arg_2"	"int"	32	0	1	2
2653	234	"res_0"	"int"	32	0	0	0
2654	234	"arg_1"	"int"	32	0	1	1
2655	234	"arg_2"	"int"	32	0	1	2
2656	235	"res_0"	"month_interval"	32	0	0	0
2657	235	"arg_1"	"month_interval"	32	0	1	1
2658	235	"arg_2"	"int"	32	0	1	2
2659	236	"res_0"	"month_interval"	32	0	0	0
2660	236	"arg_1"	"month_interval"	32	0	1	1
2661	236	"arg_2"	"int"	32	0	1	2
2662	237	"res_0"	"month_interval"	32	0	0	0
2663	237	"arg_1"	"month_interval"	32	0	1	1
2664	237	"arg_2"	"int"	32	0	1	2
2665	238	"res_0"	"month_interval"	32	0	0	0
2666	238	"arg_1"	"month_interval"	32	0	1	1
2667	238	"arg_2"	"int"	32	0	1	2
2668	239	"res_0"	"sec_interval"	13	0	0	0
2669	239	"arg_1"	"sec_interval"	13	0	1	1
2670	239	"arg_2"	"int"	32	0	1	2
2671	240	"res_0"	"sec_interval"	13	0	0	0
2672	240	"arg_1"	"sec_interval"	13	0	1	1
2673	240	"arg_2"	"int"	32	0	1	2
2674	241	"res_0"	"sec_interval"	13	0	0	0
2675	241	"arg_1"	"sec_interval"	13	0	1	1
2676	241	"arg_2"	"int"	32	0	1	2
2677	242	"res_0"	"sec_interval"	13	0	0	0
2678	242	"arg_1"	"sec_interval"	13	0	1	1
2679	242	"arg_2"	"int"	32	0	1	2
2680	243	"res_0"	"bigint"	64	0	0	0
2681	243	"arg_1"	"bigint"	64	0	1	1
2682	243	"arg_2"	"bigint"	64	0	1	2
2683	244	"res_0"	"bigint"	64	0	0	0
2684	244	"arg_1"	"bigint"	64	0	1	1
2685	244	"arg_2"	"bigint"	64	0	1	2
2686	245	"res_0"	"bigint"	64	0	0	0
2687	245	"arg_1"	"bigint"	64	0	1	1
2688	245	"arg_2"	"bigint"	64	0	1	2
2689	246	"res_0"	"bigint"	64	0	0	0
2690	246	"arg_1"	"bigint"	64	0	1	1
2691	246	"arg_2"	"bigint"	64	0	1	2
2692	247	"res_0"	"bigint"	64	0	0	0
2693	247	"arg_1"	"bigint"	64	0	1	1
2694	247	"arg_2"	"bigint"	64	0	1	2
2695	248	"res_0"	"bigint"	64	0	0	0
2696	248	"arg_1"	"bigint"	64	0	1	1
2697	248	"arg_2"	"bigint"	64	0	1	2
2698	249	"res_0"	"bigint"	64	0	0	0
2699	249	"arg_1"	"bigint"	64	0	1	1
2700	249	"arg_2"	"bigint"	64	0	1	2
2701	250	"res_0"	"bigint"	64	0	0	0
2702	250	"arg_1"	"bigint"	64	0	1	1
2703	251	"res_0"	"bigint"	64	0	0	0
2704	251	"arg_1"	"bigint"	64	0	1	1
2705	251	"arg_2"	"int"	32	0	1	2
2706	252	"res_0"	"bigint"	64	0	0	0
2707	252	"arg_1"	"bigint"	64	0	1	1
2708	252	"arg_2"	"int"	32	0	1	2
2709	253	"res_0"	"bigint"	64	0	0	0
2710	253	"arg_1"	"bigint"	64	0	1	1
2711	254	"res_0"	"bigint"	64	0	0	0
2712	254	"arg_1"	"bigint"	64	0	1	1
2713	255	"res_0"	"tinyint"	8	0	0	0
2714	255	"arg_1"	"bigint"	64	0	1	1
2715	256	"res_0"	"bigint"	64	0	0	0
2716	256	"arg_1"	"bigint"	64	0	1	1
2717	256	"arg_2"	"bigint"	64	0	1	2
2718	257	"res_0"	"bigint"	64	0	0	0
2719	257	"arg_1"	"bigint"	64	0	1	1
2720	257	"arg_2"	"bigint"	64	0	1	2
2721	258	"res_0"	"month_interval"	32	0	0	0
2722	258	"arg_1"	"month_interval"	32	0	1	1
2723	258	"arg_2"	"bigint"	64	0	1	2
2724	259	"res_0"	"month_interval"	32	0	0	0
2725	259	"arg_1"	"month_interval"	32	0	1	1
2726	259	"arg_2"	"bigint"	64	0	1	2
2727	260	"res_0"	"month_interval"	32	0	0	0
2728	260	"arg_1"	"month_interval"	32	0	1	1
2729	260	"arg_2"	"bigint"	64	0	1	2
2730	261	"res_0"	"month_interval"	32	0	0	0
2731	261	"arg_1"	"month_interval"	32	0	1	1
2732	261	"arg_2"	"bigint"	64	0	1	2
2733	262	"res_0"	"sec_interval"	13	0	0	0
2734	262	"arg_1"	"sec_interval"	13	0	1	1
2735	262	"arg_2"	"bigint"	64	0	1	2
2736	263	"res_0"	"sec_interval"	13	0	0	0
2737	263	"arg_1"	"sec_interval"	13	0	1	1
2738	263	"arg_2"	"bigint"	64	0	1	2
2739	264	"res_0"	"sec_interval"	13	0	0	0
2740	264	"arg_1"	"sec_interval"	13	0	1	1
2741	264	"arg_2"	"bigint"	64	0	1	2
2742	265	"res_0"	"sec_interval"	13	0	0	0
2743	265	"arg_1"	"sec_interval"	13	0	1	1
2744	265	"arg_2"	"bigint"	64	0	1	2
2745	266	"res_0"	"wrd"	64	0	0	0
2746	266	"arg_1"	"wrd"	64	0	1	1
2747	266	"arg_2"	"wrd"	64	0	1	2
2748	267	"res_0"	"wrd"	64	0	0	0
2749	267	"arg_1"	"wrd"	64	0	1	1
2750	267	"arg_2"	"wrd"	64	0	1	2
2751	268	"res_0"	"wrd"	64	0	0	0
2752	268	"arg_1"	"wrd"	64	0	1	1
2753	268	"arg_2"	"wrd"	64	0	1	2
2754	269	"res_0"	"wrd"	64	0	0	0
2755	269	"arg_1"	"wrd"	64	0	1	1
2756	269	"arg_2"	"wrd"	64	0	1	2
2757	270	"res_0"	"wrd"	64	0	0	0
2758	270	"arg_1"	"wrd"	64	0	1	1
2759	270	"arg_2"	"wrd"	64	0	1	2
2760	271	"res_0"	"wrd"	64	0	0	0
2761	271	"arg_1"	"wrd"	64	0	1	1
2762	271	"arg_2"	"wrd"	64	0	1	2
2763	272	"res_0"	"wrd"	64	0	0	0
2764	272	"arg_1"	"wrd"	64	0	1	1
2765	272	"arg_2"	"wrd"	64	0	1	2
2766	273	"res_0"	"wrd"	64	0	0	0
2767	273	"arg_1"	"wrd"	64	0	1	1
2768	274	"res_0"	"wrd"	64	0	0	0
2769	274	"arg_1"	"wrd"	64	0	1	1
2770	274	"arg_2"	"int"	32	0	1	2
2771	275	"res_0"	"wrd"	64	0	0	0
2772	275	"arg_1"	"wrd"	64	0	1	1
2773	275	"arg_2"	"int"	32	0	1	2
2774	276	"res_0"	"wrd"	64	0	0	0
2775	276	"arg_1"	"wrd"	64	0	1	1
2776	277	"res_0"	"wrd"	64	0	0	0
2777	277	"arg_1"	"wrd"	64	0	1	1
2778	278	"res_0"	"tinyint"	8	0	0	0
2779	278	"arg_1"	"wrd"	64	0	1	1
2780	279	"res_0"	"wrd"	64	0	0	0
2781	279	"arg_1"	"wrd"	64	0	1	1
2782	279	"arg_2"	"wrd"	64	0	1	2
2783	280	"res_0"	"wrd"	64	0	0	0
2784	280	"arg_1"	"wrd"	64	0	1	1
2785	280	"arg_2"	"wrd"	64	0	1	2
2786	281	"res_0"	"month_interval"	32	0	0	0
2787	281	"arg_1"	"month_interval"	32	0	1	1
2788	281	"arg_2"	"wrd"	64	0	1	2
2789	282	"res_0"	"month_interval"	32	0	0	0
2790	282	"arg_1"	"month_interval"	32	0	1	1
2791	282	"arg_2"	"wrd"	64	0	1	2
2792	283	"res_0"	"month_interval"	32	0	0	0
2793	283	"arg_1"	"month_interval"	32	0	1	1
2794	283	"arg_2"	"wrd"	64	0	1	2
2795	284	"res_0"	"month_interval"	32	0	0	0
2796	284	"arg_1"	"month_interval"	32	0	1	1
2797	284	"arg_2"	"wrd"	64	0	1	2
2798	285	"res_0"	"sec_interval"	13	0	0	0
2799	285	"arg_1"	"sec_interval"	13	0	1	1
2800	285	"arg_2"	"wrd"	64	0	1	2
2801	286	"res_0"	"sec_interval"	13	0	0	0
2802	286	"arg_1"	"sec_interval"	13	0	1	1
2803	286	"arg_2"	"wrd"	64	0	1	2
2804	287	"res_0"	"sec_interval"	13	0	0	0
2805	287	"arg_1"	"sec_interval"	13	0	1	1
2806	287	"arg_2"	"wrd"	64	0	1	2
2807	288	"res_0"	"sec_interval"	13	0	0	0
2808	288	"arg_1"	"sec_interval"	13	0	1	1
2809	288	"arg_2"	"wrd"	64	0	1	2
2810	289	"res_0"	"decimal"	2	0	0	0
2811	289	"arg_1"	"decimal"	2	0	1	1
2812	289	"arg_2"	"decimal"	2	0	1	2
2813	290	"res_0"	"decimal"	2	0	0	0
2814	290	"arg_1"	"decimal"	2	0	1	1
2815	290	"arg_2"	"decimal"	2	0	1	2
2816	291	"res_0"	"decimal"	2	0	0	0
2817	291	"arg_1"	"decimal"	2	0	1	1
2818	291	"arg_2"	"decimal"	2	0	1	2
2819	292	"res_0"	"decimal"	2	0	0	0
2820	292	"arg_1"	"decimal"	2	0	1	1
2821	292	"arg_2"	"decimal"	2	0	1	2
2822	293	"res_0"	"decimal"	2	0	0	0
2823	293	"arg_1"	"decimal"	2	0	1	1
2824	293	"arg_2"	"decimal"	2	0	1	2
2825	294	"res_0"	"decimal"	2	0	0	0
2826	294	"arg_1"	"decimal"	2	0	1	1
2827	294	"arg_2"	"decimal"	2	0	1	2
2828	295	"res_0"	"decimal"	2	0	0	0
2829	295	"arg_1"	"decimal"	2	0	1	1
2830	295	"arg_2"	"decimal"	2	0	1	2
2831	296	"res_0"	"decimal"	2	0	0	0
2832	296	"arg_1"	"decimal"	2	0	1	1
2833	297	"res_0"	"decimal"	2	0	0	0
2834	297	"arg_1"	"decimal"	2	0	1	1
2835	297	"arg_2"	"int"	32	0	1	2
2836	298	"res_0"	"decimal"	2	0	0	0
2837	298	"arg_1"	"decimal"	2	0	1	1
2838	298	"arg_2"	"int"	32	0	1	2
2839	299	"res_0"	"decimal"	2	0	0	0
2840	299	"arg_1"	"decimal"	2	0	1	1
2841	300	"res_0"	"decimal"	2	0	0	0
2842	300	"arg_1"	"decimal"	2	0	1	1
2843	301	"res_0"	"tinyint"	8	0	0	0
2844	301	"arg_1"	"decimal"	2	0	1	1
2845	302	"res_0"	"decimal"	2	0	0	0
2846	302	"arg_1"	"decimal"	2	0	1	1
2847	302	"arg_2"	"tinyint"	8	0	1	2
2848	303	"res_0"	"decimal"	2	0	0	0
2849	303	"arg_1"	"decimal"	2	0	1	1
2850	303	"arg_2"	"tinyint"	8	0	1	2
2851	304	"res_0"	"month_interval"	32	0	0	0
2852	304	"arg_1"	"month_interval"	32	0	1	1
2853	304	"arg_2"	"decimal"	2	0	1	2
2854	305	"res_0"	"month_interval"	32	0	0	0
2855	305	"arg_1"	"month_interval"	32	0	1	1
2856	305	"arg_2"	"decimal"	2	0	1	2
2857	306	"res_0"	"month_interval"	32	0	0	0
2858	306	"arg_1"	"month_interval"	32	0	1	1
2859	306	"arg_2"	"decimal"	2	0	1	2
2860	307	"res_0"	"month_interval"	32	0	0	0
2861	307	"arg_1"	"month_interval"	32	0	1	1
2862	307	"arg_2"	"decimal"	2	0	1	2
2863	308	"res_0"	"sec_interval"	13	0	0	0
2864	308	"arg_1"	"sec_interval"	13	0	1	1
2865	308	"arg_2"	"decimal"	2	0	1	2
2866	309	"res_0"	"sec_interval"	13	0	0	0
2867	309	"arg_1"	"sec_interval"	13	0	1	1
2868	309	"arg_2"	"decimal"	2	0	1	2
2869	310	"res_0"	"sec_interval"	13	0	0	0
2870	310	"arg_1"	"sec_interval"	13	0	1	1
2871	310	"arg_2"	"decimal"	2	0	1	2
2872	311	"res_0"	"sec_interval"	13	0	0	0
2873	311	"arg_1"	"sec_interval"	13	0	1	1
2874	311	"arg_2"	"decimal"	2	0	1	2
2875	312	"res_0"	"decimal"	4	0	0	0
2876	312	"arg_1"	"decimal"	4	0	1	1
2877	312	"arg_2"	"decimal"	4	0	1	2
2878	313	"res_0"	"decimal"	4	0	0	0
2879	313	"arg_1"	"decimal"	4	0	1	1
2880	313	"arg_2"	"decimal"	4	0	1	2
2881	314	"res_0"	"decimal"	4	0	0	0
2882	314	"arg_1"	"decimal"	4	0	1	1
2883	314	"arg_2"	"decimal"	4	0	1	2
2884	315	"res_0"	"decimal"	4	0	0	0
2885	315	"arg_1"	"decimal"	4	0	1	1
2886	315	"arg_2"	"decimal"	4	0	1	2
2887	316	"res_0"	"decimal"	4	0	0	0
2888	316	"arg_1"	"decimal"	4	0	1	1
2889	316	"arg_2"	"decimal"	4	0	1	2
2890	317	"res_0"	"decimal"	4	0	0	0
2891	317	"arg_1"	"decimal"	4	0	1	1
2892	317	"arg_2"	"decimal"	4	0	1	2
2893	318	"res_0"	"decimal"	4	0	0	0
2894	318	"arg_1"	"decimal"	4	0	1	1
2895	318	"arg_2"	"decimal"	4	0	1	2
2896	319	"res_0"	"decimal"	4	0	0	0
2897	319	"arg_1"	"decimal"	4	0	1	1
2898	320	"res_0"	"decimal"	4	0	0	0
2899	320	"arg_1"	"decimal"	4	0	1	1
2900	320	"arg_2"	"int"	32	0	1	2
2901	321	"res_0"	"decimal"	4	0	0	0
2902	321	"arg_1"	"decimal"	4	0	1	1
2903	321	"arg_2"	"int"	32	0	1	2
2904	322	"res_0"	"decimal"	4	0	0	0
2905	322	"arg_1"	"decimal"	4	0	1	1
2906	323	"res_0"	"decimal"	4	0	0	0
2907	323	"arg_1"	"decimal"	4	0	1	1
2908	324	"res_0"	"tinyint"	8	0	0	0
2909	324	"arg_1"	"decimal"	4	0	1	1
2910	325	"res_0"	"decimal"	4	0	0	0
2911	325	"arg_1"	"decimal"	4	0	1	1
2912	325	"arg_2"	"smallint"	16	0	1	2
2913	326	"res_0"	"decimal"	4	0	0	0
2914	326	"arg_1"	"decimal"	4	0	1	1
2915	326	"arg_2"	"smallint"	16	0	1	2
2916	327	"res_0"	"month_interval"	32	0	0	0
2917	327	"arg_1"	"month_interval"	32	0	1	1
2918	327	"arg_2"	"decimal"	4	0	1	2
2919	328	"res_0"	"month_interval"	32	0	0	0
2920	328	"arg_1"	"month_interval"	32	0	1	1
2921	328	"arg_2"	"decimal"	4	0	1	2
2922	329	"res_0"	"month_interval"	32	0	0	0
2923	329	"arg_1"	"month_interval"	32	0	1	1
2924	329	"arg_2"	"decimal"	4	0	1	2
2925	330	"res_0"	"month_interval"	32	0	0	0
2926	330	"arg_1"	"month_interval"	32	0	1	1
2927	330	"arg_2"	"decimal"	4	0	1	2
2928	331	"res_0"	"sec_interval"	13	0	0	0
2929	331	"arg_1"	"sec_interval"	13	0	1	1
2930	331	"arg_2"	"decimal"	4	0	1	2
2931	332	"res_0"	"sec_interval"	13	0	0	0
2932	332	"arg_1"	"sec_interval"	13	0	1	1
2933	332	"arg_2"	"decimal"	4	0	1	2
2934	333	"res_0"	"sec_interval"	13	0	0	0
2935	333	"arg_1"	"sec_interval"	13	0	1	1
2936	333	"arg_2"	"decimal"	4	0	1	2
2937	334	"res_0"	"sec_interval"	13	0	0	0
2938	334	"arg_1"	"sec_interval"	13	0	1	1
2939	334	"arg_2"	"decimal"	4	0	1	2
2940	335	"res_0"	"decimal"	9	0	0	0
2941	335	"arg_1"	"decimal"	9	0	1	1
2942	335	"arg_2"	"decimal"	9	0	1	2
2943	336	"res_0"	"decimal"	9	0	0	0
2944	336	"arg_1"	"decimal"	9	0	1	1
2945	336	"arg_2"	"decimal"	9	0	1	2
2946	337	"res_0"	"decimal"	9	0	0	0
2947	337	"arg_1"	"decimal"	9	0	1	1
2948	337	"arg_2"	"decimal"	9	0	1	2
2949	338	"res_0"	"decimal"	9	0	0	0
2950	338	"arg_1"	"decimal"	9	0	1	1
2951	338	"arg_2"	"decimal"	9	0	1	2
2952	339	"res_0"	"decimal"	9	0	0	0
2953	339	"arg_1"	"decimal"	9	0	1	1
2954	339	"arg_2"	"decimal"	9	0	1	2
2955	340	"res_0"	"decimal"	9	0	0	0
2956	340	"arg_1"	"decimal"	9	0	1	1
2957	340	"arg_2"	"decimal"	9	0	1	2
2958	341	"res_0"	"decimal"	9	0	0	0
2959	341	"arg_1"	"decimal"	9	0	1	1
2960	341	"arg_2"	"decimal"	9	0	1	2
2961	342	"res_0"	"decimal"	9	0	0	0
2962	342	"arg_1"	"decimal"	9	0	1	1
2963	343	"res_0"	"decimal"	9	0	0	0
2964	343	"arg_1"	"decimal"	9	0	1	1
2965	343	"arg_2"	"int"	32	0	1	2
2966	344	"res_0"	"decimal"	9	0	0	0
2967	344	"arg_1"	"decimal"	9	0	1	1
2968	344	"arg_2"	"int"	32	0	1	2
2969	345	"res_0"	"decimal"	9	0	0	0
2970	345	"arg_1"	"decimal"	9	0	1	1
2971	346	"res_0"	"decimal"	9	0	0	0
2972	346	"arg_1"	"decimal"	9	0	1	1
2973	347	"res_0"	"tinyint"	8	0	0	0
2974	347	"arg_1"	"decimal"	9	0	1	1
2975	348	"res_0"	"decimal"	9	0	0	0
2976	348	"arg_1"	"decimal"	9	0	1	1
2977	348	"arg_2"	"int"	32	0	1	2
2978	349	"res_0"	"decimal"	9	0	0	0
2979	349	"arg_1"	"decimal"	9	0	1	1
2980	349	"arg_2"	"int"	32	0	1	2
2981	350	"res_0"	"month_interval"	32	0	0	0
2982	350	"arg_1"	"month_interval"	32	0	1	1
2983	350	"arg_2"	"decimal"	9	0	1	2
2984	351	"res_0"	"month_interval"	32	0	0	0
2985	351	"arg_1"	"month_interval"	32	0	1	1
2986	351	"arg_2"	"decimal"	9	0	1	2
2987	352	"res_0"	"month_interval"	32	0	0	0
2988	352	"arg_1"	"month_interval"	32	0	1	1
2989	352	"arg_2"	"decimal"	9	0	1	2
2990	353	"res_0"	"month_interval"	32	0	0	0
2991	353	"arg_1"	"month_interval"	32	0	1	1
2992	353	"arg_2"	"decimal"	9	0	1	2
2993	354	"res_0"	"sec_interval"	13	0	0	0
2994	354	"arg_1"	"sec_interval"	13	0	1	1
2995	354	"arg_2"	"decimal"	9	0	1	2
2996	355	"res_0"	"sec_interval"	13	0	0	0
2997	355	"arg_1"	"sec_interval"	13	0	1	1
2998	355	"arg_2"	"decimal"	9	0	1	2
2999	356	"res_0"	"sec_interval"	13	0	0	0
3000	356	"arg_1"	"sec_interval"	13	0	1	1
3001	356	"arg_2"	"decimal"	9	0	1	2
3002	357	"res_0"	"sec_interval"	13	0	0	0
3003	357	"arg_1"	"sec_interval"	13	0	1	1
3004	357	"arg_2"	"decimal"	9	0	1	2
3005	358	"res_0"	"decimal"	19	0	0	0
3006	358	"arg_1"	"decimal"	19	0	1	1
3007	358	"arg_2"	"decimal"	19	0	1	2
3008	359	"res_0"	"decimal"	19	0	0	0
3009	359	"arg_1"	"decimal"	19	0	1	1
3010	359	"arg_2"	"decimal"	19	0	1	2
3011	360	"res_0"	"decimal"	19	0	0	0
3012	360	"arg_1"	"decimal"	19	0	1	1
3013	360	"arg_2"	"decimal"	19	0	1	2
3014	361	"res_0"	"decimal"	19	0	0	0
3015	361	"arg_1"	"decimal"	19	0	1	1
3016	361	"arg_2"	"decimal"	19	0	1	2
3017	362	"res_0"	"decimal"	19	0	0	0
3018	362	"arg_1"	"decimal"	19	0	1	1
3019	362	"arg_2"	"decimal"	19	0	1	2
3020	363	"res_0"	"decimal"	19	0	0	0
3021	363	"arg_1"	"decimal"	19	0	1	1
3022	363	"arg_2"	"decimal"	19	0	1	2
3023	364	"res_0"	"decimal"	19	0	0	0
3024	364	"arg_1"	"decimal"	19	0	1	1
3025	364	"arg_2"	"decimal"	19	0	1	2
3026	365	"res_0"	"decimal"	19	0	0	0
3027	365	"arg_1"	"decimal"	19	0	1	1
3028	366	"res_0"	"decimal"	19	0	0	0
3029	366	"arg_1"	"decimal"	19	0	1	1
3030	366	"arg_2"	"int"	32	0	1	2
3031	367	"res_0"	"decimal"	19	0	0	0
3032	367	"arg_1"	"decimal"	19	0	1	1
3033	367	"arg_2"	"int"	32	0	1	2
3034	368	"res_0"	"decimal"	19	0	0	0
3035	368	"arg_1"	"decimal"	19	0	1	1
3036	369	"res_0"	"decimal"	19	0	0	0
3037	369	"arg_1"	"decimal"	19	0	1	1
3038	370	"res_0"	"tinyint"	8	0	0	0
3039	370	"arg_1"	"decimal"	19	0	1	1
3040	371	"res_0"	"decimal"	19	0	0	0
3041	371	"arg_1"	"decimal"	19	0	1	1
3042	371	"arg_2"	"bigint"	64	0	1	2
3043	372	"res_0"	"decimal"	19	0	0	0
3044	372	"arg_1"	"decimal"	19	0	1	1
3045	372	"arg_2"	"bigint"	64	0	1	2
3046	373	"res_0"	"month_interval"	32	0	0	0
3047	373	"arg_1"	"month_interval"	32	0	1	1
3048	373	"arg_2"	"decimal"	19	0	1	2
3049	374	"res_0"	"month_interval"	32	0	0	0
3050	374	"arg_1"	"month_interval"	32	0	1	1
3051	374	"arg_2"	"decimal"	19	0	1	2
3052	375	"res_0"	"month_interval"	32	0	0	0
3053	375	"arg_1"	"month_interval"	32	0	1	1
3054	375	"arg_2"	"decimal"	19	0	1	2
3055	376	"res_0"	"month_interval"	32	0	0	0
3056	376	"arg_1"	"month_interval"	32	0	1	1
3057	376	"arg_2"	"decimal"	19	0	1	2
3058	377	"res_0"	"sec_interval"	13	0	0	0
3059	377	"arg_1"	"sec_interval"	13	0	1	1
3060	377	"arg_2"	"decimal"	19	0	1	2
3061	378	"res_0"	"sec_interval"	13	0	0	0
3062	378	"arg_1"	"sec_interval"	13	0	1	1
3063	378	"arg_2"	"decimal"	19	0	1	2
3064	379	"res_0"	"sec_interval"	13	0	0	0
3065	379	"arg_1"	"sec_interval"	13	0	1	1
3066	379	"arg_2"	"decimal"	19	0	1	2
3067	380	"res_0"	"sec_interval"	13	0	0	0
3068	380	"arg_1"	"sec_interval"	13	0	1	1
3069	380	"arg_2"	"decimal"	19	0	1	2
3070	381	"res_0"	"real"	24	0	0	0
3071	381	"arg_1"	"real"	24	0	1	1
3072	381	"arg_2"	"real"	24	0	1	2
3073	382	"res_0"	"real"	24	0	0	0
3074	382	"arg_1"	"real"	24	0	1	1
3075	382	"arg_2"	"real"	24	0	1	2
3076	383	"res_0"	"real"	24	0	0	0
3077	383	"arg_1"	"real"	24	0	1	1
3078	383	"arg_2"	"real"	24	0	1	2
3079	384	"res_0"	"real"	24	0	0	0
3080	384	"arg_1"	"real"	24	0	1	1
3081	384	"arg_2"	"real"	24	0	1	2
3082	385	"res_0"	"real"	24	0	0	0
3083	385	"arg_1"	"real"	24	0	1	1
3084	386	"res_0"	"real"	24	0	0	0
3085	386	"arg_1"	"real"	24	0	1	1
3086	387	"res_0"	"tinyint"	8	0	0	0
3087	387	"arg_1"	"real"	24	0	1	1
3088	388	"res_0"	"real"	24	0	0	0
3089	388	"arg_1"	"real"	24	0	1	1
3090	388	"arg_2"	"real"	24	0	1	2
3091	389	"res_0"	"real"	24	0	0	0
3092	389	"arg_1"	"real"	24	0	1	1
3093	389	"arg_2"	"real"	24	0	1	2
3094	390	"res_0"	"month_interval"	32	0	0	0
3095	390	"arg_1"	"month_interval"	32	0	1	1
3096	390	"arg_2"	"real"	24	0	1	2
3097	391	"res_0"	"month_interval"	32	0	0	0
3098	391	"arg_1"	"month_interval"	32	0	1	1
3099	391	"arg_2"	"real"	24	0	1	2
3100	392	"res_0"	"month_interval"	32	0	0	0
3101	392	"arg_1"	"month_interval"	32	0	1	1
3102	392	"arg_2"	"real"	24	0	1	2
3103	393	"res_0"	"month_interval"	32	0	0	0
3104	393	"arg_1"	"month_interval"	32	0	1	1
3105	393	"arg_2"	"real"	24	0	1	2
3106	394	"res_0"	"sec_interval"	13	0	0	0
3107	394	"arg_1"	"sec_interval"	13	0	1	1
3108	394	"arg_2"	"real"	24	0	1	2
3109	395	"res_0"	"sec_interval"	13	0	0	0
3110	395	"arg_1"	"sec_interval"	13	0	1	1
3111	395	"arg_2"	"real"	24	0	1	2
3112	396	"res_0"	"sec_interval"	13	0	0	0
3113	396	"arg_1"	"sec_interval"	13	0	1	1
3114	396	"arg_2"	"real"	24	0	1	2
3115	397	"res_0"	"sec_interval"	13	0	0	0
3116	397	"arg_1"	"sec_interval"	13	0	1	1
3117	397	"arg_2"	"real"	24	0	1	2
3118	398	"res_0"	"double"	53	0	0	0
3119	398	"arg_1"	"double"	53	0	1	1
3120	398	"arg_2"	"double"	53	0	1	2
3121	399	"res_0"	"double"	53	0	0	0
3122	399	"arg_1"	"double"	53	0	1	1
3123	399	"arg_2"	"double"	53	0	1	2
3124	400	"res_0"	"double"	53	0	0	0
3125	400	"arg_1"	"double"	53	0	1	1
3126	400	"arg_2"	"double"	53	0	1	2
3127	401	"res_0"	"double"	53	0	0	0
3128	401	"arg_1"	"double"	53	0	1	1
3129	401	"arg_2"	"double"	53	0	1	2
3130	402	"res_0"	"double"	53	0	0	0
3131	402	"arg_1"	"double"	53	0	1	1
3132	403	"res_0"	"double"	53	0	0	0
3133	403	"arg_1"	"double"	53	0	1	1
3134	404	"res_0"	"tinyint"	8	0	0	0
3135	404	"arg_1"	"double"	53	0	1	1
3136	405	"res_0"	"double"	53	0	0	0
3137	405	"arg_1"	"double"	53	0	1	1
3138	405	"arg_2"	"double"	53	0	1	2
3139	406	"res_0"	"double"	53	0	0	0
3140	406	"arg_1"	"double"	53	0	1	1
3141	406	"arg_2"	"double"	53	0	1	2
3142	407	"res_0"	"month_interval"	32	0	0	0
3143	407	"arg_1"	"month_interval"	32	0	1	1
3144	407	"arg_2"	"double"	53	0	1	2
3145	408	"res_0"	"month_interval"	32	0	0	0
3146	408	"arg_1"	"month_interval"	32	0	1	1
3147	408	"arg_2"	"double"	53	0	1	2
3148	409	"res_0"	"month_interval"	32	0	0	0
3149	409	"arg_1"	"month_interval"	32	0	1	1
3150	409	"arg_2"	"double"	53	0	1	2
3151	410	"res_0"	"month_interval"	32	0	0	0
3152	410	"arg_1"	"month_interval"	32	0	1	1
3153	410	"arg_2"	"double"	53	0	1	2
3154	411	"res_0"	"sec_interval"	13	0	0	0
3155	411	"arg_1"	"sec_interval"	13	0	1	1
3156	411	"arg_2"	"double"	53	0	1	2
3157	412	"res_0"	"sec_interval"	13	0	0	0
3158	412	"arg_1"	"sec_interval"	13	0	1	1
3159	412	"arg_2"	"double"	53	0	1	2
3160	413	"res_0"	"sec_interval"	13	0	0	0
3161	413	"arg_1"	"sec_interval"	13	0	1	1
3162	413	"arg_2"	"double"	53	0	1	2
3163	414	"res_0"	"sec_interval"	13	0	0	0
3164	414	"arg_1"	"sec_interval"	13	0	1	1
3165	414	"arg_2"	"double"	53	0	1	2
3166	415	"res_0"	"month_interval"	32	0	0	0
3167	415	"arg_1"	"month_interval"	32	0	1	1
3168	415	"arg_2"	"month_interval"	32	0	1	2
3169	416	"res_0"	"month_interval"	32	0	0	0
3170	416	"arg_1"	"month_interval"	32	0	1	1
3171	416	"arg_2"	"month_interval"	32	0	1	2
3172	417	"res_0"	"month_interval"	32	0	0	0
3173	417	"arg_1"	"month_interval"	32	0	1	1
3174	417	"arg_2"	"month_interval"	32	0	1	2
3175	418	"res_0"	"month_interval"	32	0	0	0
3176	418	"arg_1"	"month_interval"	32	0	1	1
3177	418	"arg_2"	"month_interval"	32	0	1	2
3178	419	"res_0"	"month_interval"	32	0	0	0
3179	419	"arg_1"	"month_interval"	32	0	1	1
3180	420	"res_0"	"month_interval"	32	0	0	0
3181	420	"arg_1"	"month_interval"	32	0	1	1
3182	421	"res_0"	"tinyint"	8	0	0	0
3183	421	"arg_1"	"month_interval"	32	0	1	1
3184	422	"res_0"	"month_interval"	32	0	0	0
3185	422	"arg_1"	"month_interval"	32	0	1	1
3186	422	"arg_2"	"int"	32	0	1	2
3187	423	"res_0"	"month_interval"	32	0	0	0
3188	423	"arg_1"	"month_interval"	32	0	1	1
3189	423	"arg_2"	"int"	32	0	1	2
3190	424	"res_0"	"sec_interval"	13	0	0	0
3191	424	"arg_1"	"sec_interval"	13	0	1	1
3192	424	"arg_2"	"sec_interval"	13	0	1	2
3193	425	"res_0"	"sec_interval"	13	0	0	0
3194	425	"arg_1"	"sec_interval"	13	0	1	1
3195	425	"arg_2"	"sec_interval"	13	0	1	2
3196	426	"res_0"	"sec_interval"	13	0	0	0
3197	426	"arg_1"	"sec_interval"	13	0	1	1
3198	426	"arg_2"	"sec_interval"	13	0	1	2
3199	427	"res_0"	"sec_interval"	13	0	0	0
3200	427	"arg_1"	"sec_interval"	13	0	1	1
3201	427	"arg_2"	"sec_interval"	13	0	1	2
3202	428	"res_0"	"sec_interval"	13	0	0	0
3203	428	"arg_1"	"sec_interval"	13	0	1	1
3204	429	"res_0"	"sec_interval"	13	0	0	0
3205	429	"arg_1"	"sec_interval"	13	0	1	1
3206	430	"res_0"	"tinyint"	8	0	0	0
3207	430	"arg_1"	"sec_interval"	13	0	1	1
3208	431	"res_0"	"sec_interval"	13	0	0	0
3209	431	"arg_1"	"sec_interval"	13	0	1	1
3210	431	"arg_2"	"bigint"	64	0	1	2
3211	432	"res_0"	"sec_interval"	13	0	0	0
3212	432	"arg_1"	"sec_interval"	13	0	1	1
3213	432	"arg_2"	"bigint"	64	0	1	2
3214	433	"res_0"	"decimal"	4	0	0	0
3215	433	"arg_1"	"decimal"	4	0	1	1
3216	433	"arg_2"	"tinyint"	8	0	1	2
3217	434	"res_0"	"decimal"	4	0	0	0
3218	434	"arg_1"	"tinyint"	8	0	1	1
3219	434	"arg_2"	"decimal"	4	0	1	2
3220	435	"res_0"	"decimal"	4	0	0	0
3221	435	"arg_1"	"decimal"	4	0	1	1
3222	435	"arg_2"	"decimal"	2	0	1	2
3223	436	"res_0"	"decimal"	4	0	0	0
3224	436	"arg_1"	"decimal"	2	0	1	1
3225	436	"arg_2"	"decimal"	4	0	1	2
3226	437	"res_0"	"decimal"	9	0	0	0
3227	437	"arg_1"	"decimal"	9	0	1	1
3228	437	"arg_2"	"tinyint"	8	0	1	2
3229	438	"res_0"	"decimal"	9	0	0	0
3230	438	"arg_1"	"tinyint"	8	0	1	1
3231	438	"arg_2"	"decimal"	9	0	1	2
3232	439	"res_0"	"decimal"	9	0	0	0
3233	439	"arg_1"	"decimal"	9	0	1	1
3234	439	"arg_2"	"smallint"	16	0	1	2
3235	440	"res_0"	"decimal"	9	0	0	0
3236	440	"arg_1"	"smallint"	16	0	1	1
3237	440	"arg_2"	"decimal"	9	0	1	2
3238	441	"res_0"	"decimal"	9	0	0	0
3239	441	"arg_1"	"decimal"	9	0	1	1
3240	441	"arg_2"	"decimal"	2	0	1	2
3241	442	"res_0"	"decimal"	9	0	0	0
3242	442	"arg_1"	"decimal"	2	0	1	1
3243	442	"arg_2"	"decimal"	9	0	1	2
3244	443	"res_0"	"decimal"	9	0	0	0
3245	443	"arg_1"	"decimal"	9	0	1	1
3246	443	"arg_2"	"decimal"	4	0	1	2
3247	444	"res_0"	"decimal"	9	0	0	0
3248	444	"arg_1"	"decimal"	4	0	1	1
3249	444	"arg_2"	"decimal"	9	0	1	2
3250	445	"res_0"	"decimal"	19	0	0	0
3251	445	"arg_1"	"decimal"	19	0	1	1
3252	445	"arg_2"	"tinyint"	8	0	1	2
3253	446	"res_0"	"decimal"	19	0	0	0
3254	446	"arg_1"	"tinyint"	8	0	1	1
3255	446	"arg_2"	"decimal"	19	0	1	2
3256	447	"res_0"	"decimal"	19	0	0	0
3257	447	"arg_1"	"decimal"	19	0	1	1
3258	447	"arg_2"	"smallint"	16	0	1	2
3259	448	"res_0"	"decimal"	19	0	0	0
3260	448	"arg_1"	"smallint"	16	0	1	1
3261	448	"arg_2"	"decimal"	19	0	1	2
3262	449	"res_0"	"decimal"	19	0	0	0
3263	449	"arg_1"	"decimal"	19	0	1	1
3264	449	"arg_2"	"int"	32	0	1	2
3265	450	"res_0"	"decimal"	19	0	0	0
3266	450	"arg_1"	"int"	32	0	1	1
3267	450	"arg_2"	"decimal"	19	0	1	2
3268	451	"res_0"	"decimal"	19	0	0	0
3269	451	"arg_1"	"decimal"	19	0	1	1
3270	451	"arg_2"	"wrd"	64	0	1	2
3271	452	"res_0"	"decimal"	19	0	0	0
3272	452	"arg_1"	"wrd"	64	0	1	1
3273	452	"arg_2"	"decimal"	19	0	1	2
3274	453	"res_0"	"decimal"	19	0	0	0
3275	453	"arg_1"	"decimal"	19	0	1	1
3276	453	"arg_2"	"decimal"	2	0	1	2
3277	454	"res_0"	"decimal"	19	0	0	0
3278	454	"arg_1"	"decimal"	2	0	1	1
3279	454	"arg_2"	"decimal"	19	0	1	2
3280	455	"res_0"	"decimal"	19	0	0	0
3281	455	"arg_1"	"decimal"	19	0	1	1
3282	455	"arg_2"	"decimal"	4	0	1	2
3283	456	"res_0"	"decimal"	19	0	0	0
3284	456	"arg_1"	"decimal"	4	0	1	1
3285	456	"arg_2"	"decimal"	19	0	1	2
3286	457	"res_0"	"decimal"	19	0	0	0
3287	457	"arg_1"	"decimal"	19	0	1	1
3288	457	"arg_2"	"decimal"	9	0	1	2
3289	458	"res_0"	"decimal"	19	0	0	0
3290	458	"arg_1"	"decimal"	9	0	1	1
3291	458	"arg_2"	"decimal"	19	0	1	2
3292	459	"res_0"	"decimal"	2	0	0	0
3293	459	"arg_1"	"decimal"	2	0	1	1
3294	459	"arg_2"	"tinyint"	8	0	1	2
3295	460	"res_0"	"decimal"	4	0	0	0
3296	460	"arg_1"	"decimal"	4	0	1	1
3297	460	"arg_2"	"tinyint"	8	0	1	2
3298	461	"res_0"	"decimal"	9	0	0	0
3299	461	"arg_1"	"decimal"	9	0	1	1
3300	461	"arg_2"	"tinyint"	8	0	1	2
3301	462	"res_0"	"decimal"	19	0	0	0
3302	462	"arg_1"	"decimal"	19	0	1	1
3303	462	"arg_2"	"tinyint"	8	0	1	2
3304	463	"res_0"	"real"	24	0	0	0
3305	463	"arg_1"	"real"	24	0	1	1
3306	463	"arg_2"	"tinyint"	8	0	1	2
3307	464	"res_0"	"double"	53	0	0	0
3308	464	"arg_1"	"double"	53	0	1	1
3309	464	"arg_2"	"tinyint"	8	0	1	2
3310	465	"res_0"	"oid"	63	0	0	0
3311	465	"arg_1"	"oid"	63	0	1	1
3312	465	"arg_2"	"oid"	63	0	1	2
3313	466	"res_0"	"oid"	63	0	0	0
3314	466	"arg_1"	"tinyint"	8	0	1	1
3315	466	"arg_2"	"oid"	63	0	1	2
3316	467	"res_0"	"oid"	63	0	0	0
3317	467	"arg_1"	"smallint"	16	0	1	1
3318	467	"arg_2"	"oid"	63	0	1	2
3319	468	"res_0"	"oid"	63	0	0	0
3320	468	"arg_1"	"int"	32	0	1	1
3321	468	"arg_2"	"oid"	63	0	1	2
3322	469	"res_0"	"oid"	63	0	0	0
3323	469	"arg_1"	"bigint"	64	0	1	1
3324	469	"arg_2"	"oid"	63	0	1	2
3325	470	"res_0"	"oid"	63	0	0	0
3326	470	"arg_1"	"wrd"	64	0	1	1
3327	470	"arg_2"	"oid"	63	0	1	2
3328	471	"res_0"	"oid"	63	0	0	0
3329	471	"arg_1"	"decimal"	2	0	1	1
3330	471	"arg_2"	"oid"	63	0	1	2
3331	472	"res_0"	"oid"	63	0	0	0
3332	472	"arg_1"	"decimal"	4	0	1	1
3333	472	"arg_2"	"oid"	63	0	1	2
3334	473	"res_0"	"oid"	63	0	0	0
3335	473	"arg_1"	"decimal"	9	0	1	1
3336	473	"arg_2"	"oid"	63	0	1	2
3337	474	"res_0"	"oid"	63	0	0	0
3338	474	"arg_1"	"decimal"	19	0	1	1
3339	474	"arg_2"	"oid"	63	0	1	2
3340	475	"res_0"	"oid"	63	0	0	0
3341	475	"arg_1"	"real"	24	0	1	1
3342	475	"arg_2"	"oid"	63	0	1	2
3343	476	"res_0"	"oid"	63	0	0	0
3344	476	"arg_1"	"double"	53	0	1	1
3345	476	"arg_2"	"oid"	63	0	1	2
3346	477	"res_0"	"oid"	63	0	0	0
3347	477	"arg_1"	"month_interval"	32	0	1	1
3348	477	"arg_2"	"oid"	63	0	1	2
3349	478	"res_0"	"oid"	63	0	0	0
3350	478	"arg_1"	"sec_interval"	13	0	1	1
3351	478	"arg_2"	"oid"	63	0	1	2
3352	479	"res_0"	"oid"	63	0	0	0
3353	479	"arg_1"	"time"	7	0	1	1
3354	479	"arg_2"	"oid"	63	0	1	2
3355	480	"res_0"	"oid"	63	0	0	0
3356	480	"arg_1"	"timetz"	7	0	1	1
3357	480	"arg_2"	"oid"	63	0	1	2
3358	481	"res_0"	"oid"	63	0	0	0
3359	481	"arg_1"	"date"	0	0	1	1
3360	481	"arg_2"	"oid"	63	0	1	2
3361	482	"res_0"	"oid"	63	0	0	0
3362	482	"arg_1"	"timestamp"	7	0	1	1
3363	482	"arg_2"	"oid"	63	0	1	2
3364	483	"res_0"	"oid"	63	0	0	0
3365	483	"arg_1"	"timestamptz"	7	0	1	1
3366	483	"arg_2"	"oid"	63	0	1	2
3367	484	"res_0"	"oid"	63	0	0	0
3368	484	"arg_1"	"blob"	0	0	1	1
3369	484	"arg_2"	"oid"	63	0	1	2
3370	485	"res_0"	"oid"	63	0	0	0
3371	485	"arg_1"	"geometry"	0	0	1	1
3372	485	"arg_2"	"oid"	63	0	1	2
3373	486	"res_0"	"oid"	63	0	0	0
3374	486	"arg_1"	"geometrya"	0	0	1	1
3375	486	"arg_2"	"oid"	63	0	1	2
3376	487	"res_0"	"oid"	63	0	0	0
3377	487	"arg_1"	"mbr"	0	0	1	1
3378	487	"arg_2"	"oid"	63	0	1	2
3379	488	"res_0"	"tinyint"	8	0	0	0
3380	488	"arg_1"	"oid"	63	0	1	1
3381	488	"arg_2"	"tinyint"	8	0	1	2
3382	489	"res_0"	"tinyint"	8	0	0	0
3383	489	"arg_1"	"tinyint"	8	0	1	1
3384	489	"arg_2"	"tinyint"	8	0	1	2
3385	490	"res_0"	"tinyint"	8	0	0	0
3386	490	"arg_1"	"smallint"	16	0	1	1
3387	490	"arg_2"	"tinyint"	8	0	1	2
3388	491	"res_0"	"tinyint"	8	0	0	0
3389	491	"arg_1"	"int"	32	0	1	1
3390	491	"arg_2"	"tinyint"	8	0	1	2
3391	492	"res_0"	"tinyint"	8	0	0	0
3392	492	"arg_1"	"bigint"	64	0	1	1
3393	492	"arg_2"	"tinyint"	8	0	1	2
3394	493	"res_0"	"tinyint"	8	0	0	0
3395	493	"arg_1"	"wrd"	64	0	1	1
3396	493	"arg_2"	"tinyint"	8	0	1	2
3397	494	"res_0"	"tinyint"	8	0	0	0
3398	494	"arg_1"	"decimal"	2	0	1	1
3399	494	"arg_2"	"tinyint"	8	0	1	2
3400	495	"res_0"	"tinyint"	8	0	0	0
3401	495	"arg_1"	"decimal"	4	0	1	1
3402	495	"arg_2"	"tinyint"	8	0	1	2
3403	496	"res_0"	"tinyint"	8	0	0	0
3404	496	"arg_1"	"decimal"	9	0	1	1
3405	496	"arg_2"	"tinyint"	8	0	1	2
3406	497	"res_0"	"tinyint"	8	0	0	0
3407	497	"arg_1"	"decimal"	19	0	1	1
3408	497	"arg_2"	"tinyint"	8	0	1	2
3409	498	"res_0"	"tinyint"	8	0	0	0
3410	498	"arg_1"	"real"	24	0	1	1
3411	498	"arg_2"	"tinyint"	8	0	1	2
3412	499	"res_0"	"tinyint"	8	0	0	0
3413	499	"arg_1"	"double"	53	0	1	1
3414	499	"arg_2"	"tinyint"	8	0	1	2
3415	500	"res_0"	"tinyint"	8	0	0	0
3416	500	"arg_1"	"month_interval"	32	0	1	1
3417	500	"arg_2"	"tinyint"	8	0	1	2
3418	501	"res_0"	"tinyint"	8	0	0	0
3419	501	"arg_1"	"sec_interval"	13	0	1	1
3420	501	"arg_2"	"tinyint"	8	0	1	2
3421	502	"res_0"	"tinyint"	8	0	0	0
3422	502	"arg_1"	"time"	7	0	1	1
3423	502	"arg_2"	"tinyint"	8	0	1	2
3424	503	"res_0"	"tinyint"	8	0	0	0
3425	503	"arg_1"	"timetz"	7	0	1	1
3426	503	"arg_2"	"tinyint"	8	0	1	2
3427	504	"res_0"	"tinyint"	8	0	0	0
3428	504	"arg_1"	"date"	0	0	1	1
3429	504	"arg_2"	"tinyint"	8	0	1	2
3430	505	"res_0"	"tinyint"	8	0	0	0
3431	505	"arg_1"	"timestamp"	7	0	1	1
3432	505	"arg_2"	"tinyint"	8	0	1	2
3433	506	"res_0"	"tinyint"	8	0	0	0
3434	506	"arg_1"	"timestamptz"	7	0	1	1
3435	506	"arg_2"	"tinyint"	8	0	1	2
3436	507	"res_0"	"tinyint"	8	0	0	0
3437	507	"arg_1"	"blob"	0	0	1	1
3438	507	"arg_2"	"tinyint"	8	0	1	2
3439	508	"res_0"	"tinyint"	8	0	0	0
3440	508	"arg_1"	"geometry"	0	0	1	1
3441	508	"arg_2"	"tinyint"	8	0	1	2
3442	509	"res_0"	"tinyint"	8	0	0	0
3443	509	"arg_1"	"geometrya"	0	0	1	1
3444	509	"arg_2"	"tinyint"	8	0	1	2
3445	510	"res_0"	"tinyint"	8	0	0	0
3446	510	"arg_1"	"mbr"	0	0	1	1
3447	510	"arg_2"	"tinyint"	8	0	1	2
3448	511	"res_0"	"smallint"	16	0	0	0
3449	511	"arg_1"	"oid"	63	0	1	1
3450	511	"arg_2"	"smallint"	16	0	1	2
3451	512	"res_0"	"smallint"	16	0	0	0
3452	512	"arg_1"	"tinyint"	8	0	1	1
3453	512	"arg_2"	"smallint"	16	0	1	2
3454	513	"res_0"	"smallint"	16	0	0	0
3455	513	"arg_1"	"smallint"	16	0	1	1
3456	513	"arg_2"	"smallint"	16	0	1	2
3457	514	"res_0"	"smallint"	16	0	0	0
3458	514	"arg_1"	"int"	32	0	1	1
3459	514	"arg_2"	"smallint"	16	0	1	2
3460	515	"res_0"	"smallint"	16	0	0	0
3461	515	"arg_1"	"bigint"	64	0	1	1
3462	515	"arg_2"	"smallint"	16	0	1	2
3463	516	"res_0"	"smallint"	16	0	0	0
3464	516	"arg_1"	"wrd"	64	0	1	1
3465	516	"arg_2"	"smallint"	16	0	1	2
3466	517	"res_0"	"smallint"	16	0	0	0
3467	517	"arg_1"	"decimal"	2	0	1	1
3468	517	"arg_2"	"smallint"	16	0	1	2
3469	518	"res_0"	"smallint"	16	0	0	0
3470	518	"arg_1"	"decimal"	4	0	1	1
3471	518	"arg_2"	"smallint"	16	0	1	2
3472	519	"res_0"	"smallint"	16	0	0	0
3473	519	"arg_1"	"decimal"	9	0	1	1
3474	519	"arg_2"	"smallint"	16	0	1	2
3475	520	"res_0"	"smallint"	16	0	0	0
3476	520	"arg_1"	"decimal"	19	0	1	1
3477	520	"arg_2"	"smallint"	16	0	1	2
3478	521	"res_0"	"smallint"	16	0	0	0
3479	521	"arg_1"	"real"	24	0	1	1
3480	521	"arg_2"	"smallint"	16	0	1	2
3481	522	"res_0"	"smallint"	16	0	0	0
3482	522	"arg_1"	"double"	53	0	1	1
3483	522	"arg_2"	"smallint"	16	0	1	2
3484	523	"res_0"	"smallint"	16	0	0	0
3485	523	"arg_1"	"month_interval"	32	0	1	1
3486	523	"arg_2"	"smallint"	16	0	1	2
3487	524	"res_0"	"smallint"	16	0	0	0
3488	524	"arg_1"	"sec_interval"	13	0	1	1
3489	524	"arg_2"	"smallint"	16	0	1	2
3490	525	"res_0"	"smallint"	16	0	0	0
3491	525	"arg_1"	"time"	7	0	1	1
3492	525	"arg_2"	"smallint"	16	0	1	2
3493	526	"res_0"	"smallint"	16	0	0	0
3494	526	"arg_1"	"timetz"	7	0	1	1
3495	526	"arg_2"	"smallint"	16	0	1	2
3496	527	"res_0"	"smallint"	16	0	0	0
3497	527	"arg_1"	"date"	0	0	1	1
3498	527	"arg_2"	"smallint"	16	0	1	2
3499	528	"res_0"	"smallint"	16	0	0	0
3500	528	"arg_1"	"timestamp"	7	0	1	1
3501	528	"arg_2"	"smallint"	16	0	1	2
3502	529	"res_0"	"smallint"	16	0	0	0
3503	529	"arg_1"	"timestamptz"	7	0	1	1
3504	529	"arg_2"	"smallint"	16	0	1	2
3505	530	"res_0"	"smallint"	16	0	0	0
3506	530	"arg_1"	"blob"	0	0	1	1
3507	530	"arg_2"	"smallint"	16	0	1	2
3508	531	"res_0"	"smallint"	16	0	0	0
3509	531	"arg_1"	"geometry"	0	0	1	1
3510	531	"arg_2"	"smallint"	16	0	1	2
3511	532	"res_0"	"smallint"	16	0	0	0
3512	532	"arg_1"	"geometrya"	0	0	1	1
3513	532	"arg_2"	"smallint"	16	0	1	2
3514	533	"res_0"	"smallint"	16	0	0	0
3515	533	"arg_1"	"mbr"	0	0	1	1
3516	533	"arg_2"	"smallint"	16	0	1	2
3517	534	"res_0"	"int"	32	0	0	0
3518	534	"arg_1"	"oid"	63	0	1	1
3519	534	"arg_2"	"int"	32	0	1	2
3520	535	"res_0"	"int"	32	0	0	0
3521	535	"arg_1"	"tinyint"	8	0	1	1
3522	535	"arg_2"	"int"	32	0	1	2
3523	536	"res_0"	"int"	32	0	0	0
3524	536	"arg_1"	"smallint"	16	0	1	1
3525	536	"arg_2"	"int"	32	0	1	2
3526	537	"res_0"	"int"	32	0	0	0
3527	537	"arg_1"	"int"	32	0	1	1
3528	537	"arg_2"	"int"	32	0	1	2
3529	538	"res_0"	"int"	32	0	0	0
3530	538	"arg_1"	"bigint"	64	0	1	1
3531	538	"arg_2"	"int"	32	0	1	2
3532	539	"res_0"	"int"	32	0	0	0
3533	539	"arg_1"	"wrd"	64	0	1	1
3534	539	"arg_2"	"int"	32	0	1	2
3535	540	"res_0"	"int"	32	0	0	0
3536	540	"arg_1"	"decimal"	2	0	1	1
3537	540	"arg_2"	"int"	32	0	1	2
3538	541	"res_0"	"int"	32	0	0	0
3539	541	"arg_1"	"decimal"	4	0	1	1
3540	541	"arg_2"	"int"	32	0	1	2
3541	542	"res_0"	"int"	32	0	0	0
3542	542	"arg_1"	"decimal"	9	0	1	1
3543	542	"arg_2"	"int"	32	0	1	2
3544	543	"res_0"	"int"	32	0	0	0
3545	543	"arg_1"	"decimal"	19	0	1	1
3546	543	"arg_2"	"int"	32	0	1	2
3547	544	"res_0"	"int"	32	0	0	0
3548	544	"arg_1"	"real"	24	0	1	1
3549	544	"arg_2"	"int"	32	0	1	2
3550	545	"res_0"	"int"	32	0	0	0
3551	545	"arg_1"	"double"	53	0	1	1
3552	545	"arg_2"	"int"	32	0	1	2
3553	546	"res_0"	"int"	32	0	0	0
3554	546	"arg_1"	"month_interval"	32	0	1	1
3555	546	"arg_2"	"int"	32	0	1	2
3556	547	"res_0"	"int"	32	0	0	0
3557	547	"arg_1"	"sec_interval"	13	0	1	1
3558	547	"arg_2"	"int"	32	0	1	2
3559	548	"res_0"	"int"	32	0	0	0
3560	548	"arg_1"	"time"	7	0	1	1
3561	548	"arg_2"	"int"	32	0	1	2
3562	549	"res_0"	"int"	32	0	0	0
3563	549	"arg_1"	"timetz"	7	0	1	1
3564	549	"arg_2"	"int"	32	0	1	2
3565	550	"res_0"	"int"	32	0	0	0
3566	550	"arg_1"	"date"	0	0	1	1
3567	550	"arg_2"	"int"	32	0	1	2
3568	551	"res_0"	"int"	32	0	0	0
3569	551	"arg_1"	"timestamp"	7	0	1	1
3570	551	"arg_2"	"int"	32	0	1	2
3571	552	"res_0"	"int"	32	0	0	0
3572	552	"arg_1"	"timestamptz"	7	0	1	1
3573	552	"arg_2"	"int"	32	0	1	2
3574	553	"res_0"	"int"	32	0	0	0
3575	553	"arg_1"	"blob"	0	0	1	1
3576	553	"arg_2"	"int"	32	0	1	2
3577	554	"res_0"	"int"	32	0	0	0
3578	554	"arg_1"	"geometry"	0	0	1	1
3579	554	"arg_2"	"int"	32	0	1	2
3580	555	"res_0"	"int"	32	0	0	0
3581	555	"arg_1"	"geometrya"	0	0	1	1
3582	555	"arg_2"	"int"	32	0	1	2
3583	556	"res_0"	"int"	32	0	0	0
3584	556	"arg_1"	"mbr"	0	0	1	1
3585	556	"arg_2"	"int"	32	0	1	2
3586	557	"res_0"	"bigint"	64	0	0	0
3587	557	"arg_1"	"oid"	63	0	1	1
3588	557	"arg_2"	"bigint"	64	0	1	2
3589	558	"res_0"	"bigint"	64	0	0	0
3590	558	"arg_1"	"tinyint"	8	0	1	1
3591	558	"arg_2"	"bigint"	64	0	1	2
3592	559	"res_0"	"bigint"	64	0	0	0
3593	559	"arg_1"	"smallint"	16	0	1	1
3594	559	"arg_2"	"bigint"	64	0	1	2
3595	560	"res_0"	"bigint"	64	0	0	0
3596	560	"arg_1"	"int"	32	0	1	1
3597	560	"arg_2"	"bigint"	64	0	1	2
3598	561	"res_0"	"bigint"	64	0	0	0
3599	561	"arg_1"	"bigint"	64	0	1	1
3600	561	"arg_2"	"bigint"	64	0	1	2
3601	562	"res_0"	"bigint"	64	0	0	0
3602	562	"arg_1"	"wrd"	64	0	1	1
3603	562	"arg_2"	"bigint"	64	0	1	2
3604	563	"res_0"	"bigint"	64	0	0	0
3605	563	"arg_1"	"decimal"	2	0	1	1
3606	563	"arg_2"	"bigint"	64	0	1	2
3607	564	"res_0"	"bigint"	64	0	0	0
3608	564	"arg_1"	"decimal"	4	0	1	1
3609	564	"arg_2"	"bigint"	64	0	1	2
3610	565	"res_0"	"bigint"	64	0	0	0
3611	565	"arg_1"	"decimal"	9	0	1	1
3612	565	"arg_2"	"bigint"	64	0	1	2
3613	566	"res_0"	"bigint"	64	0	0	0
3614	566	"arg_1"	"decimal"	19	0	1	1
3615	566	"arg_2"	"bigint"	64	0	1	2
3616	567	"res_0"	"bigint"	64	0	0	0
3617	567	"arg_1"	"real"	24	0	1	1
3618	567	"arg_2"	"bigint"	64	0	1	2
3619	568	"res_0"	"bigint"	64	0	0	0
3620	568	"arg_1"	"double"	53	0	1	1
3621	568	"arg_2"	"bigint"	64	0	1	2
3622	569	"res_0"	"bigint"	64	0	0	0
3623	569	"arg_1"	"month_interval"	32	0	1	1
3624	569	"arg_2"	"bigint"	64	0	1	2
3625	570	"res_0"	"bigint"	64	0	0	0
3626	570	"arg_1"	"sec_interval"	13	0	1	1
3627	570	"arg_2"	"bigint"	64	0	1	2
3628	571	"res_0"	"bigint"	64	0	0	0
3629	571	"arg_1"	"time"	7	0	1	1
3630	571	"arg_2"	"bigint"	64	0	1	2
3631	572	"res_0"	"bigint"	64	0	0	0
3632	572	"arg_1"	"timetz"	7	0	1	1
3633	572	"arg_2"	"bigint"	64	0	1	2
3634	573	"res_0"	"bigint"	64	0	0	0
3635	573	"arg_1"	"date"	0	0	1	1
3636	573	"arg_2"	"bigint"	64	0	1	2
3637	574	"res_0"	"bigint"	64	0	0	0
3638	574	"arg_1"	"timestamp"	7	0	1	1
3639	574	"arg_2"	"bigint"	64	0	1	2
3640	575	"res_0"	"bigint"	64	0	0	0
3641	575	"arg_1"	"timestamptz"	7	0	1	1
3642	575	"arg_2"	"bigint"	64	0	1	2
3643	576	"res_0"	"bigint"	64	0	0	0
3644	576	"arg_1"	"blob"	0	0	1	1
3645	576	"arg_2"	"bigint"	64	0	1	2
3646	577	"res_0"	"bigint"	64	0	0	0
3647	577	"arg_1"	"geometry"	0	0	1	1
3648	577	"arg_2"	"bigint"	64	0	1	2
3649	578	"res_0"	"bigint"	64	0	0	0
3650	578	"arg_1"	"geometrya"	0	0	1	1
3651	578	"arg_2"	"bigint"	64	0	1	2
3652	579	"res_0"	"bigint"	64	0	0	0
3653	579	"arg_1"	"mbr"	0	0	1	1
3654	579	"arg_2"	"bigint"	64	0	1	2
3655	580	"res_0"	"wrd"	64	0	0	0
3656	580	"arg_1"	"oid"	63	0	1	1
3657	580	"arg_2"	"wrd"	64	0	1	2
3658	581	"res_0"	"wrd"	64	0	0	0
3659	581	"arg_1"	"tinyint"	8	0	1	1
3660	581	"arg_2"	"wrd"	64	0	1	2
3661	582	"res_0"	"wrd"	64	0	0	0
3662	582	"arg_1"	"smallint"	16	0	1	1
3663	582	"arg_2"	"wrd"	64	0	1	2
3664	583	"res_0"	"wrd"	64	0	0	0
3665	583	"arg_1"	"int"	32	0	1	1
3666	583	"arg_2"	"wrd"	64	0	1	2
3667	584	"res_0"	"wrd"	64	0	0	0
3668	584	"arg_1"	"bigint"	64	0	1	1
3669	584	"arg_2"	"wrd"	64	0	1	2
3670	585	"res_0"	"wrd"	64	0	0	0
3671	585	"arg_1"	"wrd"	64	0	1	1
3672	585	"arg_2"	"wrd"	64	0	1	2
3673	586	"res_0"	"wrd"	64	0	0	0
3674	586	"arg_1"	"decimal"	2	0	1	1
3675	586	"arg_2"	"wrd"	64	0	1	2
3676	587	"res_0"	"wrd"	64	0	0	0
3677	587	"arg_1"	"decimal"	4	0	1	1
3678	587	"arg_2"	"wrd"	64	0	1	2
3679	588	"res_0"	"wrd"	64	0	0	0
3680	588	"arg_1"	"decimal"	9	0	1	1
3681	588	"arg_2"	"wrd"	64	0	1	2
3682	589	"res_0"	"wrd"	64	0	0	0
3683	589	"arg_1"	"decimal"	19	0	1	1
3684	589	"arg_2"	"wrd"	64	0	1	2
3685	590	"res_0"	"wrd"	64	0	0	0
3686	590	"arg_1"	"real"	24	0	1	1
3687	590	"arg_2"	"wrd"	64	0	1	2
3688	591	"res_0"	"wrd"	64	0	0	0
3689	591	"arg_1"	"double"	53	0	1	1
3690	591	"arg_2"	"wrd"	64	0	1	2
3691	592	"res_0"	"wrd"	64	0	0	0
3692	592	"arg_1"	"month_interval"	32	0	1	1
3693	592	"arg_2"	"wrd"	64	0	1	2
3694	593	"res_0"	"wrd"	64	0	0	0
3695	593	"arg_1"	"sec_interval"	13	0	1	1
3696	593	"arg_2"	"wrd"	64	0	1	2
3697	594	"res_0"	"wrd"	64	0	0	0
3698	594	"arg_1"	"time"	7	0	1	1
3699	594	"arg_2"	"wrd"	64	0	1	2
3700	595	"res_0"	"wrd"	64	0	0	0
3701	595	"arg_1"	"timetz"	7	0	1	1
3702	595	"arg_2"	"wrd"	64	0	1	2
3703	596	"res_0"	"wrd"	64	0	0	0
3704	596	"arg_1"	"date"	0	0	1	1
3705	596	"arg_2"	"wrd"	64	0	1	2
3706	597	"res_0"	"wrd"	64	0	0	0
3707	597	"arg_1"	"timestamp"	7	0	1	1
3708	597	"arg_2"	"wrd"	64	0	1	2
3709	598	"res_0"	"wrd"	64	0	0	0
3710	598	"arg_1"	"timestamptz"	7	0	1	1
3711	598	"arg_2"	"wrd"	64	0	1	2
3712	599	"res_0"	"wrd"	64	0	0	0
3713	599	"arg_1"	"blob"	0	0	1	1
3714	599	"arg_2"	"wrd"	64	0	1	2
3715	600	"res_0"	"wrd"	64	0	0	0
3716	600	"arg_1"	"geometry"	0	0	1	1
3717	600	"arg_2"	"wrd"	64	0	1	2
3718	601	"res_0"	"wrd"	64	0	0	0
3719	601	"arg_1"	"geometrya"	0	0	1	1
3720	601	"arg_2"	"wrd"	64	0	1	2
3721	602	"res_0"	"wrd"	64	0	0	0
3722	602	"arg_1"	"mbr"	0	0	1	1
3723	602	"arg_2"	"wrd"	64	0	1	2
3724	603	"res_0"	"decimal"	2	0	0	0
3725	603	"arg_1"	"oid"	63	0	1	1
3726	603	"arg_2"	"decimal"	2	0	1	2
3727	604	"res_0"	"decimal"	2	0	0	0
3728	604	"arg_1"	"tinyint"	8	0	1	1
3729	604	"arg_2"	"decimal"	2	0	1	2
3730	605	"res_0"	"decimal"	2	0	0	0
3731	605	"arg_1"	"smallint"	16	0	1	1
3732	605	"arg_2"	"decimal"	2	0	1	2
3733	606	"res_0"	"decimal"	2	0	0	0
3734	606	"arg_1"	"int"	32	0	1	1
3735	606	"arg_2"	"decimal"	2	0	1	2
3736	607	"res_0"	"decimal"	2	0	0	0
3737	607	"arg_1"	"bigint"	64	0	1	1
3738	607	"arg_2"	"decimal"	2	0	1	2
3739	608	"res_0"	"decimal"	2	0	0	0
3740	608	"arg_1"	"wrd"	64	0	1	1
3741	608	"arg_2"	"decimal"	2	0	1	2
3742	609	"res_0"	"decimal"	2	0	0	0
3743	609	"arg_1"	"decimal"	2	0	1	1
3744	609	"arg_2"	"decimal"	2	0	1	2
3745	610	"res_0"	"decimal"	2	0	0	0
3746	610	"arg_1"	"decimal"	4	0	1	1
3747	610	"arg_2"	"decimal"	2	0	1	2
3748	611	"res_0"	"decimal"	2	0	0	0
3749	611	"arg_1"	"decimal"	9	0	1	1
3750	611	"arg_2"	"decimal"	2	0	1	2
3751	612	"res_0"	"decimal"	2	0	0	0
3752	612	"arg_1"	"decimal"	19	0	1	1
3753	612	"arg_2"	"decimal"	2	0	1	2
3754	613	"res_0"	"decimal"	2	0	0	0
3755	613	"arg_1"	"real"	24	0	1	1
3756	613	"arg_2"	"decimal"	2	0	1	2
3757	614	"res_0"	"decimal"	2	0	0	0
3758	614	"arg_1"	"double"	53	0	1	1
3759	614	"arg_2"	"decimal"	2	0	1	2
3760	615	"res_0"	"decimal"	2	0	0	0
3761	615	"arg_1"	"month_interval"	32	0	1	1
3762	615	"arg_2"	"decimal"	2	0	1	2
3763	616	"res_0"	"decimal"	2	0	0	0
3764	616	"arg_1"	"sec_interval"	13	0	1	1
3765	616	"arg_2"	"decimal"	2	0	1	2
3766	617	"res_0"	"decimal"	2	0	0	0
3767	617	"arg_1"	"time"	7	0	1	1
3768	617	"arg_2"	"decimal"	2	0	1	2
3769	618	"res_0"	"decimal"	2	0	0	0
3770	618	"arg_1"	"timetz"	7	0	1	1
3771	618	"arg_2"	"decimal"	2	0	1	2
3772	619	"res_0"	"decimal"	2	0	0	0
3773	619	"arg_1"	"date"	0	0	1	1
3774	619	"arg_2"	"decimal"	2	0	1	2
3775	620	"res_0"	"decimal"	2	0	0	0
3776	620	"arg_1"	"timestamp"	7	0	1	1
3777	620	"arg_2"	"decimal"	2	0	1	2
3778	621	"res_0"	"decimal"	2	0	0	0
3779	621	"arg_1"	"timestamptz"	7	0	1	1
3780	621	"arg_2"	"decimal"	2	0	1	2
3781	622	"res_0"	"decimal"	2	0	0	0
3782	622	"arg_1"	"blob"	0	0	1	1
3783	622	"arg_2"	"decimal"	2	0	1	2
3784	623	"res_0"	"decimal"	2	0	0	0
3785	623	"arg_1"	"geometry"	0	0	1	1
3786	623	"arg_2"	"decimal"	2	0	1	2
3787	624	"res_0"	"decimal"	2	0	0	0
3788	624	"arg_1"	"geometrya"	0	0	1	1
3789	624	"arg_2"	"decimal"	2	0	1	2
3790	625	"res_0"	"decimal"	2	0	0	0
3791	625	"arg_1"	"mbr"	0	0	1	1
3792	625	"arg_2"	"decimal"	2	0	1	2
3793	626	"res_0"	"decimal"	4	0	0	0
3794	626	"arg_1"	"oid"	63	0	1	1
3795	626	"arg_2"	"decimal"	4	0	1	2
3796	627	"res_0"	"decimal"	4	0	0	0
3797	627	"arg_1"	"tinyint"	8	0	1	1
3798	627	"arg_2"	"decimal"	4	0	1	2
3799	628	"res_0"	"decimal"	4	0	0	0
3800	628	"arg_1"	"smallint"	16	0	1	1
3801	628	"arg_2"	"decimal"	4	0	1	2
3802	629	"res_0"	"decimal"	4	0	0	0
3803	629	"arg_1"	"int"	32	0	1	1
3804	629	"arg_2"	"decimal"	4	0	1	2
3805	630	"res_0"	"decimal"	4	0	0	0
3806	630	"arg_1"	"bigint"	64	0	1	1
3807	630	"arg_2"	"decimal"	4	0	1	2
3808	631	"res_0"	"decimal"	4	0	0	0
3809	631	"arg_1"	"wrd"	64	0	1	1
3810	631	"arg_2"	"decimal"	4	0	1	2
3811	632	"res_0"	"decimal"	4	0	0	0
3812	632	"arg_1"	"decimal"	2	0	1	1
3813	632	"arg_2"	"decimal"	4	0	1	2
3814	633	"res_0"	"decimal"	4	0	0	0
3815	633	"arg_1"	"decimal"	4	0	1	1
3816	633	"arg_2"	"decimal"	4	0	1	2
3817	634	"res_0"	"decimal"	4	0	0	0
3818	634	"arg_1"	"decimal"	9	0	1	1
3819	634	"arg_2"	"decimal"	4	0	1	2
3820	635	"res_0"	"decimal"	4	0	0	0
3821	635	"arg_1"	"decimal"	19	0	1	1
3822	635	"arg_2"	"decimal"	4	0	1	2
3823	636	"res_0"	"decimal"	4	0	0	0
3824	636	"arg_1"	"real"	24	0	1	1
3825	636	"arg_2"	"decimal"	4	0	1	2
3826	637	"res_0"	"decimal"	4	0	0	0
3827	637	"arg_1"	"double"	53	0	1	1
3828	637	"arg_2"	"decimal"	4	0	1	2
3829	638	"res_0"	"decimal"	4	0	0	0
3830	638	"arg_1"	"month_interval"	32	0	1	1
3831	638	"arg_2"	"decimal"	4	0	1	2
3832	639	"res_0"	"decimal"	4	0	0	0
3833	639	"arg_1"	"sec_interval"	13	0	1	1
3834	639	"arg_2"	"decimal"	4	0	1	2
3835	640	"res_0"	"decimal"	4	0	0	0
3836	640	"arg_1"	"time"	7	0	1	1
3837	640	"arg_2"	"decimal"	4	0	1	2
3838	641	"res_0"	"decimal"	4	0	0	0
3839	641	"arg_1"	"timetz"	7	0	1	1
3840	641	"arg_2"	"decimal"	4	0	1	2
3841	642	"res_0"	"decimal"	4	0	0	0
3842	642	"arg_1"	"date"	0	0	1	1
3843	642	"arg_2"	"decimal"	4	0	1	2
3844	643	"res_0"	"decimal"	4	0	0	0
3845	643	"arg_1"	"timestamp"	7	0	1	1
3846	643	"arg_2"	"decimal"	4	0	1	2
3847	644	"res_0"	"decimal"	4	0	0	0
3848	644	"arg_1"	"timestamptz"	7	0	1	1
3849	644	"arg_2"	"decimal"	4	0	1	2
3850	645	"res_0"	"decimal"	4	0	0	0
3851	645	"arg_1"	"blob"	0	0	1	1
3852	645	"arg_2"	"decimal"	4	0	1	2
3853	646	"res_0"	"decimal"	4	0	0	0
3854	646	"arg_1"	"geometry"	0	0	1	1
3855	646	"arg_2"	"decimal"	4	0	1	2
3856	647	"res_0"	"decimal"	4	0	0	0
3857	647	"arg_1"	"geometrya"	0	0	1	1
3858	647	"arg_2"	"decimal"	4	0	1	2
3859	648	"res_0"	"decimal"	4	0	0	0
3860	648	"arg_1"	"mbr"	0	0	1	1
3861	648	"arg_2"	"decimal"	4	0	1	2
3862	649	"res_0"	"decimal"	9	0	0	0
3863	649	"arg_1"	"oid"	63	0	1	1
3864	649	"arg_2"	"decimal"	9	0	1	2
3865	650	"res_0"	"decimal"	9	0	0	0
3866	650	"arg_1"	"tinyint"	8	0	1	1
3867	650	"arg_2"	"decimal"	9	0	1	2
3868	651	"res_0"	"decimal"	9	0	0	0
3869	651	"arg_1"	"smallint"	16	0	1	1
3870	651	"arg_2"	"decimal"	9	0	1	2
3871	652	"res_0"	"decimal"	9	0	0	0
3872	652	"arg_1"	"int"	32	0	1	1
3873	652	"arg_2"	"decimal"	9	0	1	2
3874	653	"res_0"	"decimal"	9	0	0	0
3875	653	"arg_1"	"bigint"	64	0	1	1
3876	653	"arg_2"	"decimal"	9	0	1	2
3877	654	"res_0"	"decimal"	9	0	0	0
3878	654	"arg_1"	"wrd"	64	0	1	1
3879	654	"arg_2"	"decimal"	9	0	1	2
3880	655	"res_0"	"decimal"	9	0	0	0
3881	655	"arg_1"	"decimal"	2	0	1	1
3882	655	"arg_2"	"decimal"	9	0	1	2
3883	656	"res_0"	"decimal"	9	0	0	0
3884	656	"arg_1"	"decimal"	4	0	1	1
3885	656	"arg_2"	"decimal"	9	0	1	2
3886	657	"res_0"	"decimal"	9	0	0	0
3887	657	"arg_1"	"decimal"	9	0	1	1
3888	657	"arg_2"	"decimal"	9	0	1	2
3889	658	"res_0"	"decimal"	9	0	0	0
3890	658	"arg_1"	"decimal"	19	0	1	1
3891	658	"arg_2"	"decimal"	9	0	1	2
3892	659	"res_0"	"decimal"	9	0	0	0
3893	659	"arg_1"	"real"	24	0	1	1
3894	659	"arg_2"	"decimal"	9	0	1	2
3895	660	"res_0"	"decimal"	9	0	0	0
3896	660	"arg_1"	"double"	53	0	1	1
3897	660	"arg_2"	"decimal"	9	0	1	2
3898	661	"res_0"	"decimal"	9	0	0	0
3899	661	"arg_1"	"month_interval"	32	0	1	1
3900	661	"arg_2"	"decimal"	9	0	1	2
3901	662	"res_0"	"decimal"	9	0	0	0
3902	662	"arg_1"	"sec_interval"	13	0	1	1
3903	662	"arg_2"	"decimal"	9	0	1	2
3904	663	"res_0"	"decimal"	9	0	0	0
3905	663	"arg_1"	"time"	7	0	1	1
3906	663	"arg_2"	"decimal"	9	0	1	2
3907	664	"res_0"	"decimal"	9	0	0	0
3908	664	"arg_1"	"timetz"	7	0	1	1
3909	664	"arg_2"	"decimal"	9	0	1	2
3910	665	"res_0"	"decimal"	9	0	0	0
3911	665	"arg_1"	"date"	0	0	1	1
3912	665	"arg_2"	"decimal"	9	0	1	2
3913	666	"res_0"	"decimal"	9	0	0	0
3914	666	"arg_1"	"timestamp"	7	0	1	1
3915	666	"arg_2"	"decimal"	9	0	1	2
3916	667	"res_0"	"decimal"	9	0	0	0
3917	667	"arg_1"	"timestamptz"	7	0	1	1
3918	667	"arg_2"	"decimal"	9	0	1	2
3919	668	"res_0"	"decimal"	9	0	0	0
3920	668	"arg_1"	"blob"	0	0	1	1
3921	668	"arg_2"	"decimal"	9	0	1	2
3922	669	"res_0"	"decimal"	9	0	0	0
3923	669	"arg_1"	"geometry"	0	0	1	1
3924	669	"arg_2"	"decimal"	9	0	1	2
3925	670	"res_0"	"decimal"	9	0	0	0
3926	670	"arg_1"	"geometrya"	0	0	1	1
3927	670	"arg_2"	"decimal"	9	0	1	2
3928	671	"res_0"	"decimal"	9	0	0	0
3929	671	"arg_1"	"mbr"	0	0	1	1
3930	671	"arg_2"	"decimal"	9	0	1	2
3931	672	"res_0"	"decimal"	19	0	0	0
3932	672	"arg_1"	"oid"	63	0	1	1
3933	672	"arg_2"	"decimal"	19	0	1	2
3934	673	"res_0"	"decimal"	19	0	0	0
3935	673	"arg_1"	"tinyint"	8	0	1	1
3936	673	"arg_2"	"decimal"	19	0	1	2
3937	674	"res_0"	"decimal"	19	0	0	0
3938	674	"arg_1"	"smallint"	16	0	1	1
3939	674	"arg_2"	"decimal"	19	0	1	2
3940	675	"res_0"	"decimal"	19	0	0	0
3941	675	"arg_1"	"int"	32	0	1	1
3942	675	"arg_2"	"decimal"	19	0	1	2
3943	676	"res_0"	"decimal"	19	0	0	0
3944	676	"arg_1"	"bigint"	64	0	1	1
3945	676	"arg_2"	"decimal"	19	0	1	2
3946	677	"res_0"	"decimal"	19	0	0	0
3947	677	"arg_1"	"wrd"	64	0	1	1
3948	677	"arg_2"	"decimal"	19	0	1	2
3949	678	"res_0"	"decimal"	19	0	0	0
3950	678	"arg_1"	"decimal"	2	0	1	1
3951	678	"arg_2"	"decimal"	19	0	1	2
3952	679	"res_0"	"decimal"	19	0	0	0
3953	679	"arg_1"	"decimal"	4	0	1	1
3954	679	"arg_2"	"decimal"	19	0	1	2
3955	680	"res_0"	"decimal"	19	0	0	0
3956	680	"arg_1"	"decimal"	9	0	1	1
3957	680	"arg_2"	"decimal"	19	0	1	2
3958	681	"res_0"	"decimal"	19	0	0	0
3959	681	"arg_1"	"decimal"	19	0	1	1
3960	681	"arg_2"	"decimal"	19	0	1	2
3961	682	"res_0"	"decimal"	19	0	0	0
3962	682	"arg_1"	"real"	24	0	1	1
3963	682	"arg_2"	"decimal"	19	0	1	2
3964	683	"res_0"	"decimal"	19	0	0	0
3965	683	"arg_1"	"double"	53	0	1	1
3966	683	"arg_2"	"decimal"	19	0	1	2
3967	684	"res_0"	"decimal"	19	0	0	0
3968	684	"arg_1"	"month_interval"	32	0	1	1
3969	684	"arg_2"	"decimal"	19	0	1	2
3970	685	"res_0"	"decimal"	19	0	0	0
3971	685	"arg_1"	"sec_interval"	13	0	1	1
3972	685	"arg_2"	"decimal"	19	0	1	2
3973	686	"res_0"	"decimal"	19	0	0	0
3974	686	"arg_1"	"time"	7	0	1	1
3975	686	"arg_2"	"decimal"	19	0	1	2
3976	687	"res_0"	"decimal"	19	0	0	0
3977	687	"arg_1"	"timetz"	7	0	1	1
3978	687	"arg_2"	"decimal"	19	0	1	2
3979	688	"res_0"	"decimal"	19	0	0	0
3980	688	"arg_1"	"date"	0	0	1	1
3981	688	"arg_2"	"decimal"	19	0	1	2
3982	689	"res_0"	"decimal"	19	0	0	0
3983	689	"arg_1"	"timestamp"	7	0	1	1
3984	689	"arg_2"	"decimal"	19	0	1	2
3985	690	"res_0"	"decimal"	19	0	0	0
3986	690	"arg_1"	"timestamptz"	7	0	1	1
3987	690	"arg_2"	"decimal"	19	0	1	2
3988	691	"res_0"	"decimal"	19	0	0	0
3989	691	"arg_1"	"blob"	0	0	1	1
3990	691	"arg_2"	"decimal"	19	0	1	2
3991	692	"res_0"	"decimal"	19	0	0	0
3992	692	"arg_1"	"geometry"	0	0	1	1
3993	692	"arg_2"	"decimal"	19	0	1	2
3994	693	"res_0"	"decimal"	19	0	0	0
3995	693	"arg_1"	"geometrya"	0	0	1	1
3996	693	"arg_2"	"decimal"	19	0	1	2
3997	694	"res_0"	"decimal"	19	0	0	0
3998	694	"arg_1"	"mbr"	0	0	1	1
3999	694	"arg_2"	"decimal"	19	0	1	2
4000	695	"res_0"	"real"	24	0	0	0
4001	695	"arg_1"	"oid"	63	0	1	1
4002	695	"arg_2"	"real"	24	0	1	2
4003	696	"res_0"	"real"	24	0	0	0
4004	696	"arg_1"	"tinyint"	8	0	1	1
4005	696	"arg_2"	"real"	24	0	1	2
4006	697	"res_0"	"real"	24	0	0	0
4007	697	"arg_1"	"smallint"	16	0	1	1
4008	697	"arg_2"	"real"	24	0	1	2
4009	698	"res_0"	"real"	24	0	0	0
4010	698	"arg_1"	"int"	32	0	1	1
4011	698	"arg_2"	"real"	24	0	1	2
4012	699	"res_0"	"real"	24	0	0	0
4013	699	"arg_1"	"bigint"	64	0	1	1
4014	699	"arg_2"	"real"	24	0	1	2
4015	700	"res_0"	"real"	24	0	0	0
4016	700	"arg_1"	"wrd"	64	0	1	1
4017	700	"arg_2"	"real"	24	0	1	2
4018	701	"res_0"	"real"	24	0	0	0
4019	701	"arg_1"	"decimal"	2	0	1	1
4020	701	"arg_2"	"real"	24	0	1	2
4021	702	"res_0"	"real"	24	0	0	0
4022	702	"arg_1"	"decimal"	4	0	1	1
4023	702	"arg_2"	"real"	24	0	1	2
4024	703	"res_0"	"real"	24	0	0	0
4025	703	"arg_1"	"decimal"	9	0	1	1
4026	703	"arg_2"	"real"	24	0	1	2
4027	704	"res_0"	"real"	24	0	0	0
4028	704	"arg_1"	"decimal"	19	0	1	1
4029	704	"arg_2"	"real"	24	0	1	2
4030	705	"res_0"	"real"	24	0	0	0
4031	705	"arg_1"	"real"	24	0	1	1
4032	705	"arg_2"	"real"	24	0	1	2
4033	706	"res_0"	"real"	24	0	0	0
4034	706	"arg_1"	"double"	53	0	1	1
4035	706	"arg_2"	"real"	24	0	1	2
4036	707	"res_0"	"real"	24	0	0	0
4037	707	"arg_1"	"month_interval"	32	0	1	1
4038	707	"arg_2"	"real"	24	0	1	2
4039	708	"res_0"	"real"	24	0	0	0
4040	708	"arg_1"	"sec_interval"	13	0	1	1
4041	708	"arg_2"	"real"	24	0	1	2
4042	709	"res_0"	"real"	24	0	0	0
4043	709	"arg_1"	"time"	7	0	1	1
4044	709	"arg_2"	"real"	24	0	1	2
4045	710	"res_0"	"real"	24	0	0	0
4046	710	"arg_1"	"timetz"	7	0	1	1
4047	710	"arg_2"	"real"	24	0	1	2
4048	711	"res_0"	"real"	24	0	0	0
4049	711	"arg_1"	"date"	0	0	1	1
4050	711	"arg_2"	"real"	24	0	1	2
4051	712	"res_0"	"real"	24	0	0	0
4052	712	"arg_1"	"timestamp"	7	0	1	1
4053	712	"arg_2"	"real"	24	0	1	2
4054	713	"res_0"	"real"	24	0	0	0
4055	713	"arg_1"	"timestamptz"	7	0	1	1
4056	713	"arg_2"	"real"	24	0	1	2
4057	714	"res_0"	"real"	24	0	0	0
4058	714	"arg_1"	"blob"	0	0	1	1
4059	714	"arg_2"	"real"	24	0	1	2
4060	715	"res_0"	"real"	24	0	0	0
4061	715	"arg_1"	"geometry"	0	0	1	1
4062	715	"arg_2"	"real"	24	0	1	2
4063	716	"res_0"	"real"	24	0	0	0
4064	716	"arg_1"	"geometrya"	0	0	1	1
4065	716	"arg_2"	"real"	24	0	1	2
4066	717	"res_0"	"real"	24	0	0	0
4067	717	"arg_1"	"mbr"	0	0	1	1
4068	717	"arg_2"	"real"	24	0	1	2
4069	718	"res_0"	"double"	53	0	0	0
4070	718	"arg_1"	"oid"	63	0	1	1
4071	718	"arg_2"	"double"	53	0	1	2
4072	719	"res_0"	"double"	53	0	0	0
4073	719	"arg_1"	"tinyint"	8	0	1	1
4074	719	"arg_2"	"double"	53	0	1	2
4075	720	"res_0"	"double"	53	0	0	0
4076	720	"arg_1"	"smallint"	16	0	1	1
4077	720	"arg_2"	"double"	53	0	1	2
4078	721	"res_0"	"double"	53	0	0	0
4079	721	"arg_1"	"int"	32	0	1	1
4080	721	"arg_2"	"double"	53	0	1	2
4081	722	"res_0"	"double"	53	0	0	0
4082	722	"arg_1"	"bigint"	64	0	1	1
4083	722	"arg_2"	"double"	53	0	1	2
4084	723	"res_0"	"double"	53	0	0	0
4085	723	"arg_1"	"wrd"	64	0	1	1
4086	723	"arg_2"	"double"	53	0	1	2
4087	724	"res_0"	"double"	53	0	0	0
4088	724	"arg_1"	"decimal"	2	0	1	1
4089	724	"arg_2"	"double"	53	0	1	2
4090	725	"res_0"	"double"	53	0	0	0
4091	725	"arg_1"	"decimal"	4	0	1	1
4092	725	"arg_2"	"double"	53	0	1	2
4093	726	"res_0"	"double"	53	0	0	0
4094	726	"arg_1"	"decimal"	9	0	1	1
4095	726	"arg_2"	"double"	53	0	1	2
4096	727	"res_0"	"double"	53	0	0	0
4097	727	"arg_1"	"decimal"	19	0	1	1
4098	727	"arg_2"	"double"	53	0	1	2
4099	728	"res_0"	"double"	53	0	0	0
4100	728	"arg_1"	"real"	24	0	1	1
4101	728	"arg_2"	"double"	53	0	1	2
4102	729	"res_0"	"double"	53	0	0	0
4103	729	"arg_1"	"double"	53	0	1	1
4104	729	"arg_2"	"double"	53	0	1	2
4105	730	"res_0"	"double"	53	0	0	0
4106	730	"arg_1"	"month_interval"	32	0	1	1
4107	730	"arg_2"	"double"	53	0	1	2
4108	731	"res_0"	"double"	53	0	0	0
4109	731	"arg_1"	"sec_interval"	13	0	1	1
4110	731	"arg_2"	"double"	53	0	1	2
4111	732	"res_0"	"double"	53	0	0	0
4112	732	"arg_1"	"time"	7	0	1	1
4113	732	"arg_2"	"double"	53	0	1	2
4114	733	"res_0"	"double"	53	0	0	0
4115	733	"arg_1"	"timetz"	7	0	1	1
4116	733	"arg_2"	"double"	53	0	1	2
4117	734	"res_0"	"double"	53	0	0	0
4118	734	"arg_1"	"date"	0	0	1	1
4119	734	"arg_2"	"double"	53	0	1	2
4120	735	"res_0"	"double"	53	0	0	0
4121	735	"arg_1"	"timestamp"	7	0	1	1
4122	735	"arg_2"	"double"	53	0	1	2
4123	736	"res_0"	"double"	53	0	0	0
4124	736	"arg_1"	"timestamptz"	7	0	1	1
4125	736	"arg_2"	"double"	53	0	1	2
4126	737	"res_0"	"double"	53	0	0	0
4127	737	"arg_1"	"blob"	0	0	1	1
4128	737	"arg_2"	"double"	53	0	1	2
4129	738	"res_0"	"double"	53	0	0	0
4130	738	"arg_1"	"geometry"	0	0	1	1
4131	738	"arg_2"	"double"	53	0	1	2
4132	739	"res_0"	"double"	53	0	0	0
4133	739	"arg_1"	"geometrya"	0	0	1	1
4134	739	"arg_2"	"double"	53	0	1	2
4135	740	"res_0"	"double"	53	0	0	0
4136	740	"arg_1"	"mbr"	0	0	1	1
4137	740	"arg_2"	"double"	53	0	1	2
4138	741	"res_0"	"month_interval"	32	0	0	0
4139	741	"arg_1"	"oid"	63	0	1	1
4140	741	"arg_2"	"month_interval"	32	0	1	2
4141	742	"res_0"	"month_interval"	32	0	0	0
4142	742	"arg_1"	"tinyint"	8	0	1	1
4143	742	"arg_2"	"month_interval"	32	0	1	2
4144	743	"res_0"	"month_interval"	32	0	0	0
4145	743	"arg_1"	"smallint"	16	0	1	1
4146	743	"arg_2"	"month_interval"	32	0	1	2
4147	744	"res_0"	"month_interval"	32	0	0	0
4148	744	"arg_1"	"int"	32	0	1	1
4149	744	"arg_2"	"month_interval"	32	0	1	2
4150	745	"res_0"	"month_interval"	32	0	0	0
4151	745	"arg_1"	"bigint"	64	0	1	1
4152	745	"arg_2"	"month_interval"	32	0	1	2
4153	746	"res_0"	"month_interval"	32	0	0	0
4154	746	"arg_1"	"wrd"	64	0	1	1
4155	746	"arg_2"	"month_interval"	32	0	1	2
4156	747	"res_0"	"month_interval"	32	0	0	0
4157	747	"arg_1"	"decimal"	2	0	1	1
4158	747	"arg_2"	"month_interval"	32	0	1	2
4159	748	"res_0"	"month_interval"	32	0	0	0
4160	748	"arg_1"	"decimal"	4	0	1	1
4161	748	"arg_2"	"month_interval"	32	0	1	2
4162	749	"res_0"	"month_interval"	32	0	0	0
4163	749	"arg_1"	"decimal"	9	0	1	1
4164	749	"arg_2"	"month_interval"	32	0	1	2
4165	750	"res_0"	"month_interval"	32	0	0	0
4166	750	"arg_1"	"decimal"	19	0	1	1
4167	750	"arg_2"	"month_interval"	32	0	1	2
4168	751	"res_0"	"month_interval"	32	0	0	0
4169	751	"arg_1"	"real"	24	0	1	1
4170	751	"arg_2"	"month_interval"	32	0	1	2
4171	752	"res_0"	"month_interval"	32	0	0	0
4172	752	"arg_1"	"double"	53	0	1	1
4173	752	"arg_2"	"month_interval"	32	0	1	2
4174	753	"res_0"	"month_interval"	32	0	0	0
4175	753	"arg_1"	"month_interval"	32	0	1	1
4176	753	"arg_2"	"month_interval"	32	0	1	2
4177	754	"res_0"	"month_interval"	32	0	0	0
4178	754	"arg_1"	"sec_interval"	13	0	1	1
4179	754	"arg_2"	"month_interval"	32	0	1	2
4180	755	"res_0"	"month_interval"	32	0	0	0
4181	755	"arg_1"	"time"	7	0	1	1
4182	755	"arg_2"	"month_interval"	32	0	1	2
4183	756	"res_0"	"month_interval"	32	0	0	0
4184	756	"arg_1"	"timetz"	7	0	1	1
4185	756	"arg_2"	"month_interval"	32	0	1	2
4186	757	"res_0"	"month_interval"	32	0	0	0
4187	757	"arg_1"	"date"	0	0	1	1
4188	757	"arg_2"	"month_interval"	32	0	1	2
4189	758	"res_0"	"month_interval"	32	0	0	0
4190	758	"arg_1"	"timestamp"	7	0	1	1
4191	758	"arg_2"	"month_interval"	32	0	1	2
4192	759	"res_0"	"month_interval"	32	0	0	0
4193	759	"arg_1"	"timestamptz"	7	0	1	1
4194	759	"arg_2"	"month_interval"	32	0	1	2
4195	760	"res_0"	"month_interval"	32	0	0	0
4196	760	"arg_1"	"blob"	0	0	1	1
4197	760	"arg_2"	"month_interval"	32	0	1	2
4198	761	"res_0"	"month_interval"	32	0	0	0
4199	761	"arg_1"	"geometry"	0	0	1	1
4200	761	"arg_2"	"month_interval"	32	0	1	2
4201	762	"res_0"	"month_interval"	32	0	0	0
4202	762	"arg_1"	"geometrya"	0	0	1	1
4203	762	"arg_2"	"month_interval"	32	0	1	2
4204	763	"res_0"	"month_interval"	32	0	0	0
4205	763	"arg_1"	"mbr"	0	0	1	1
4206	763	"arg_2"	"month_interval"	32	0	1	2
4207	764	"res_0"	"sec_interval"	13	0	0	0
4208	764	"arg_1"	"oid"	63	0	1	1
4209	764	"arg_2"	"sec_interval"	13	0	1	2
4210	765	"res_0"	"sec_interval"	13	0	0	0
4211	765	"arg_1"	"tinyint"	8	0	1	1
4212	765	"arg_2"	"sec_interval"	13	0	1	2
4213	766	"res_0"	"sec_interval"	13	0	0	0
4214	766	"arg_1"	"smallint"	16	0	1	1
4215	766	"arg_2"	"sec_interval"	13	0	1	2
4216	767	"res_0"	"sec_interval"	13	0	0	0
4217	767	"arg_1"	"int"	32	0	1	1
4218	767	"arg_2"	"sec_interval"	13	0	1	2
4219	768	"res_0"	"sec_interval"	13	0	0	0
4220	768	"arg_1"	"bigint"	64	0	1	1
4221	768	"arg_2"	"sec_interval"	13	0	1	2
4222	769	"res_0"	"sec_interval"	13	0	0	0
4223	769	"arg_1"	"wrd"	64	0	1	1
4224	769	"arg_2"	"sec_interval"	13	0	1	2
4225	770	"res_0"	"sec_interval"	13	0	0	0
4226	770	"arg_1"	"decimal"	2	0	1	1
4227	770	"arg_2"	"sec_interval"	13	0	1	2
4228	771	"res_0"	"sec_interval"	13	0	0	0
4229	771	"arg_1"	"decimal"	4	0	1	1
4230	771	"arg_2"	"sec_interval"	13	0	1	2
4231	772	"res_0"	"sec_interval"	13	0	0	0
4232	772	"arg_1"	"decimal"	9	0	1	1
4233	772	"arg_2"	"sec_interval"	13	0	1	2
4234	773	"res_0"	"sec_interval"	13	0	0	0
4235	773	"arg_1"	"decimal"	19	0	1	1
4236	773	"arg_2"	"sec_interval"	13	0	1	2
4237	774	"res_0"	"sec_interval"	13	0	0	0
4238	774	"arg_1"	"real"	24	0	1	1
4239	774	"arg_2"	"sec_interval"	13	0	1	2
4240	775	"res_0"	"sec_interval"	13	0	0	0
4241	775	"arg_1"	"double"	53	0	1	1
4242	775	"arg_2"	"sec_interval"	13	0	1	2
4243	776	"res_0"	"sec_interval"	13	0	0	0
4244	776	"arg_1"	"month_interval"	32	0	1	1
4245	776	"arg_2"	"sec_interval"	13	0	1	2
4246	777	"res_0"	"sec_interval"	13	0	0	0
4247	777	"arg_1"	"sec_interval"	13	0	1	1
4248	777	"arg_2"	"sec_interval"	13	0	1	2
4249	778	"res_0"	"sec_interval"	13	0	0	0
4250	778	"arg_1"	"time"	7	0	1	1
4251	778	"arg_2"	"sec_interval"	13	0	1	2
4252	779	"res_0"	"sec_interval"	13	0	0	0
4253	779	"arg_1"	"timetz"	7	0	1	1
4254	779	"arg_2"	"sec_interval"	13	0	1	2
4255	780	"res_0"	"sec_interval"	13	0	0	0
4256	780	"arg_1"	"date"	0	0	1	1
4257	780	"arg_2"	"sec_interval"	13	0	1	2
4258	781	"res_0"	"sec_interval"	13	0	0	0
4259	781	"arg_1"	"timestamp"	7	0	1	1
4260	781	"arg_2"	"sec_interval"	13	0	1	2
4261	782	"res_0"	"sec_interval"	13	0	0	0
4262	782	"arg_1"	"timestamptz"	7	0	1	1
4263	782	"arg_2"	"sec_interval"	13	0	1	2
4264	783	"res_0"	"sec_interval"	13	0	0	0
4265	783	"arg_1"	"blob"	0	0	1	1
4266	783	"arg_2"	"sec_interval"	13	0	1	2
4267	784	"res_0"	"sec_interval"	13	0	0	0
4268	784	"arg_1"	"geometry"	0	0	1	1
4269	784	"arg_2"	"sec_interval"	13	0	1	2
4270	785	"res_0"	"sec_interval"	13	0	0	0
4271	785	"arg_1"	"geometrya"	0	0	1	1
4272	785	"arg_2"	"sec_interval"	13	0	1	2
4273	786	"res_0"	"sec_interval"	13	0	0	0
4274	786	"arg_1"	"mbr"	0	0	1	1
4275	786	"arg_2"	"sec_interval"	13	0	1	2
4276	787	"res_0"	"time"	7	0	0	0
4277	787	"arg_1"	"oid"	63	0	1	1
4278	787	"arg_2"	"time"	7	0	1	2
4279	788	"res_0"	"time"	7	0	0	0
4280	788	"arg_1"	"tinyint"	8	0	1	1
4281	788	"arg_2"	"time"	7	0	1	2
4282	789	"res_0"	"time"	7	0	0	0
4283	789	"arg_1"	"smallint"	16	0	1	1
4284	789	"arg_2"	"time"	7	0	1	2
4285	790	"res_0"	"time"	7	0	0	0
4286	790	"arg_1"	"int"	32	0	1	1
4287	790	"arg_2"	"time"	7	0	1	2
4288	791	"res_0"	"time"	7	0	0	0
4289	791	"arg_1"	"bigint"	64	0	1	1
4290	791	"arg_2"	"time"	7	0	1	2
4291	792	"res_0"	"time"	7	0	0	0
4292	792	"arg_1"	"wrd"	64	0	1	1
4293	792	"arg_2"	"time"	7	0	1	2
4294	793	"res_0"	"time"	7	0	0	0
4295	793	"arg_1"	"decimal"	2	0	1	1
4296	793	"arg_2"	"time"	7	0	1	2
4297	794	"res_0"	"time"	7	0	0	0
4298	794	"arg_1"	"decimal"	4	0	1	1
4299	794	"arg_2"	"time"	7	0	1	2
4300	795	"res_0"	"time"	7	0	0	0
4301	795	"arg_1"	"decimal"	9	0	1	1
4302	795	"arg_2"	"time"	7	0	1	2
4303	796	"res_0"	"time"	7	0	0	0
4304	796	"arg_1"	"decimal"	19	0	1	1
4305	796	"arg_2"	"time"	7	0	1	2
4306	797	"res_0"	"time"	7	0	0	0
4307	797	"arg_1"	"real"	24	0	1	1
4308	797	"arg_2"	"time"	7	0	1	2
4309	798	"res_0"	"time"	7	0	0	0
4310	798	"arg_1"	"double"	53	0	1	1
4311	798	"arg_2"	"time"	7	0	1	2
4312	799	"res_0"	"time"	7	0	0	0
4313	799	"arg_1"	"month_interval"	32	0	1	1
4314	799	"arg_2"	"time"	7	0	1	2
4315	800	"res_0"	"time"	7	0	0	0
4316	800	"arg_1"	"sec_interval"	13	0	1	1
4317	800	"arg_2"	"time"	7	0	1	2
4318	801	"res_0"	"time"	7	0	0	0
4319	801	"arg_1"	"time"	7	0	1	1
4320	801	"arg_2"	"time"	7	0	1	2
4321	802	"res_0"	"time"	7	0	0	0
4322	802	"arg_1"	"timetz"	7	0	1	1
4323	802	"arg_2"	"time"	7	0	1	2
4324	803	"res_0"	"time"	7	0	0	0
4325	803	"arg_1"	"date"	0	0	1	1
4326	803	"arg_2"	"time"	7	0	1	2
4327	804	"res_0"	"time"	7	0	0	0
4328	804	"arg_1"	"timestamp"	7	0	1	1
4329	804	"arg_2"	"time"	7	0	1	2
4330	805	"res_0"	"time"	7	0	0	0
4331	805	"arg_1"	"timestamptz"	7	0	1	1
4332	805	"arg_2"	"time"	7	0	1	2
4333	806	"res_0"	"time"	7	0	0	0
4334	806	"arg_1"	"blob"	0	0	1	1
4335	806	"arg_2"	"time"	7	0	1	2
4336	807	"res_0"	"time"	7	0	0	0
4337	807	"arg_1"	"geometry"	0	0	1	1
4338	807	"arg_2"	"time"	7	0	1	2
4339	808	"res_0"	"time"	7	0	0	0
4340	808	"arg_1"	"geometrya"	0	0	1	1
4341	808	"arg_2"	"time"	7	0	1	2
4342	809	"res_0"	"time"	7	0	0	0
4343	809	"arg_1"	"mbr"	0	0	1	1
4344	809	"arg_2"	"time"	7	0	1	2
4345	810	"res_0"	"timetz"	7	0	0	0
4346	810	"arg_1"	"oid"	63	0	1	1
4347	810	"arg_2"	"timetz"	7	0	1	2
4348	811	"res_0"	"timetz"	7	0	0	0
4349	811	"arg_1"	"tinyint"	8	0	1	1
4350	811	"arg_2"	"timetz"	7	0	1	2
4351	812	"res_0"	"timetz"	7	0	0	0
4352	812	"arg_1"	"smallint"	16	0	1	1
4353	812	"arg_2"	"timetz"	7	0	1	2
4354	813	"res_0"	"timetz"	7	0	0	0
4355	813	"arg_1"	"int"	32	0	1	1
4356	813	"arg_2"	"timetz"	7	0	1	2
4357	814	"res_0"	"timetz"	7	0	0	0
4358	814	"arg_1"	"bigint"	64	0	1	1
4359	814	"arg_2"	"timetz"	7	0	1	2
4360	815	"res_0"	"timetz"	7	0	0	0
4361	815	"arg_1"	"wrd"	64	0	1	1
4362	815	"arg_2"	"timetz"	7	0	1	2
4363	816	"res_0"	"timetz"	7	0	0	0
4364	816	"arg_1"	"decimal"	2	0	1	1
4365	816	"arg_2"	"timetz"	7	0	1	2
4366	817	"res_0"	"timetz"	7	0	0	0
4367	817	"arg_1"	"decimal"	4	0	1	1
4368	817	"arg_2"	"timetz"	7	0	1	2
4369	818	"res_0"	"timetz"	7	0	0	0
4370	818	"arg_1"	"decimal"	9	0	1	1
4371	818	"arg_2"	"timetz"	7	0	1	2
4372	819	"res_0"	"timetz"	7	0	0	0
4373	819	"arg_1"	"decimal"	19	0	1	1
4374	819	"arg_2"	"timetz"	7	0	1	2
4375	820	"res_0"	"timetz"	7	0	0	0
4376	820	"arg_1"	"real"	24	0	1	1
4377	820	"arg_2"	"timetz"	7	0	1	2
4378	821	"res_0"	"timetz"	7	0	0	0
4379	821	"arg_1"	"double"	53	0	1	1
4380	821	"arg_2"	"timetz"	7	0	1	2
4381	822	"res_0"	"timetz"	7	0	0	0
4382	822	"arg_1"	"month_interval"	32	0	1	1
4383	822	"arg_2"	"timetz"	7	0	1	2
4384	823	"res_0"	"timetz"	7	0	0	0
4385	823	"arg_1"	"sec_interval"	13	0	1	1
4386	823	"arg_2"	"timetz"	7	0	1	2
4387	824	"res_0"	"timetz"	7	0	0	0
4388	824	"arg_1"	"time"	7	0	1	1
4389	824	"arg_2"	"timetz"	7	0	1	2
4390	825	"res_0"	"timetz"	7	0	0	0
4391	825	"arg_1"	"timetz"	7	0	1	1
4392	825	"arg_2"	"timetz"	7	0	1	2
4393	826	"res_0"	"timetz"	7	0	0	0
4394	826	"arg_1"	"date"	0	0	1	1
4395	826	"arg_2"	"timetz"	7	0	1	2
4396	827	"res_0"	"timetz"	7	0	0	0
4397	827	"arg_1"	"timestamp"	7	0	1	1
4398	827	"arg_2"	"timetz"	7	0	1	2
4399	828	"res_0"	"timetz"	7	0	0	0
4400	828	"arg_1"	"timestamptz"	7	0	1	1
4401	828	"arg_2"	"timetz"	7	0	1	2
4402	829	"res_0"	"timetz"	7	0	0	0
4403	829	"arg_1"	"blob"	0	0	1	1
4404	829	"arg_2"	"timetz"	7	0	1	2
4405	830	"res_0"	"timetz"	7	0	0	0
4406	830	"arg_1"	"geometry"	0	0	1	1
4407	830	"arg_2"	"timetz"	7	0	1	2
4408	831	"res_0"	"timetz"	7	0	0	0
4409	831	"arg_1"	"geometrya"	0	0	1	1
4410	831	"arg_2"	"timetz"	7	0	1	2
4411	832	"res_0"	"timetz"	7	0	0	0
4412	832	"arg_1"	"mbr"	0	0	1	1
4413	832	"arg_2"	"timetz"	7	0	1	2
4414	833	"res_0"	"date"	0	0	0	0
4415	833	"arg_1"	"oid"	63	0	1	1
4416	833	"arg_2"	"date"	0	0	1	2
4417	834	"res_0"	"date"	0	0	0	0
4418	834	"arg_1"	"tinyint"	8	0	1	1
4419	834	"arg_2"	"date"	0	0	1	2
4420	835	"res_0"	"date"	0	0	0	0
4421	835	"arg_1"	"smallint"	16	0	1	1
4422	835	"arg_2"	"date"	0	0	1	2
4423	836	"res_0"	"date"	0	0	0	0
4424	836	"arg_1"	"int"	32	0	1	1
4425	836	"arg_2"	"date"	0	0	1	2
4426	837	"res_0"	"date"	0	0	0	0
4427	837	"arg_1"	"bigint"	64	0	1	1
4428	837	"arg_2"	"date"	0	0	1	2
4429	838	"res_0"	"date"	0	0	0	0
4430	838	"arg_1"	"wrd"	64	0	1	1
4431	838	"arg_2"	"date"	0	0	1	2
4432	839	"res_0"	"date"	0	0	0	0
4433	839	"arg_1"	"decimal"	2	0	1	1
4434	839	"arg_2"	"date"	0	0	1	2
4435	840	"res_0"	"date"	0	0	0	0
4436	840	"arg_1"	"decimal"	4	0	1	1
4437	840	"arg_2"	"date"	0	0	1	2
4438	841	"res_0"	"date"	0	0	0	0
4439	841	"arg_1"	"decimal"	9	0	1	1
4440	841	"arg_2"	"date"	0	0	1	2
4441	842	"res_0"	"date"	0	0	0	0
4442	842	"arg_1"	"decimal"	19	0	1	1
4443	842	"arg_2"	"date"	0	0	1	2
4444	843	"res_0"	"date"	0	0	0	0
4445	843	"arg_1"	"real"	24	0	1	1
4446	843	"arg_2"	"date"	0	0	1	2
4447	844	"res_0"	"date"	0	0	0	0
4448	844	"arg_1"	"double"	53	0	1	1
4449	844	"arg_2"	"date"	0	0	1	2
4450	845	"res_0"	"date"	0	0	0	0
4451	845	"arg_1"	"month_interval"	32	0	1	1
4452	845	"arg_2"	"date"	0	0	1	2
4453	846	"res_0"	"date"	0	0	0	0
4454	846	"arg_1"	"sec_interval"	13	0	1	1
4455	846	"arg_2"	"date"	0	0	1	2
4456	847	"res_0"	"date"	0	0	0	0
4457	847	"arg_1"	"time"	7	0	1	1
4458	847	"arg_2"	"date"	0	0	1	2
4459	848	"res_0"	"date"	0	0	0	0
4460	848	"arg_1"	"timetz"	7	0	1	1
4461	848	"arg_2"	"date"	0	0	1	2
4462	849	"res_0"	"date"	0	0	0	0
4463	849	"arg_1"	"date"	0	0	1	1
4464	849	"arg_2"	"date"	0	0	1	2
4465	850	"res_0"	"date"	0	0	0	0
4466	850	"arg_1"	"timestamp"	7	0	1	1
4467	850	"arg_2"	"date"	0	0	1	2
4468	851	"res_0"	"date"	0	0	0	0
4469	851	"arg_1"	"timestamptz"	7	0	1	1
4470	851	"arg_2"	"date"	0	0	1	2
4471	852	"res_0"	"date"	0	0	0	0
4472	852	"arg_1"	"blob"	0	0	1	1
4473	852	"arg_2"	"date"	0	0	1	2
4474	853	"res_0"	"date"	0	0	0	0
4475	853	"arg_1"	"geometry"	0	0	1	1
4476	853	"arg_2"	"date"	0	0	1	2
4477	854	"res_0"	"date"	0	0	0	0
4478	854	"arg_1"	"geometrya"	0	0	1	1
4479	854	"arg_2"	"date"	0	0	1	2
4480	855	"res_0"	"date"	0	0	0	0
4481	855	"arg_1"	"mbr"	0	0	1	1
4482	855	"arg_2"	"date"	0	0	1	2
4483	856	"res_0"	"timestamp"	7	0	0	0
4484	856	"arg_1"	"oid"	63	0	1	1
4485	856	"arg_2"	"timestamp"	7	0	1	2
4486	857	"res_0"	"timestamp"	7	0	0	0
4487	857	"arg_1"	"tinyint"	8	0	1	1
4488	857	"arg_2"	"timestamp"	7	0	1	2
4489	858	"res_0"	"timestamp"	7	0	0	0
4490	858	"arg_1"	"smallint"	16	0	1	1
4491	858	"arg_2"	"timestamp"	7	0	1	2
4492	859	"res_0"	"timestamp"	7	0	0	0
4493	859	"arg_1"	"int"	32	0	1	1
4494	859	"arg_2"	"timestamp"	7	0	1	2
4495	860	"res_0"	"timestamp"	7	0	0	0
4496	860	"arg_1"	"bigint"	64	0	1	1
4497	860	"arg_2"	"timestamp"	7	0	1	2
4498	861	"res_0"	"timestamp"	7	0	0	0
4499	861	"arg_1"	"wrd"	64	0	1	1
4500	861	"arg_2"	"timestamp"	7	0	1	2
4501	862	"res_0"	"timestamp"	7	0	0	0
4502	862	"arg_1"	"decimal"	2	0	1	1
4503	862	"arg_2"	"timestamp"	7	0	1	2
4504	863	"res_0"	"timestamp"	7	0	0	0
4505	863	"arg_1"	"decimal"	4	0	1	1
4506	863	"arg_2"	"timestamp"	7	0	1	2
4507	864	"res_0"	"timestamp"	7	0	0	0
4508	864	"arg_1"	"decimal"	9	0	1	1
4509	864	"arg_2"	"timestamp"	7	0	1	2
4510	865	"res_0"	"timestamp"	7	0	0	0
4511	865	"arg_1"	"decimal"	19	0	1	1
4512	865	"arg_2"	"timestamp"	7	0	1	2
4513	866	"res_0"	"timestamp"	7	0	0	0
4514	866	"arg_1"	"real"	24	0	1	1
4515	866	"arg_2"	"timestamp"	7	0	1	2
4516	867	"res_0"	"timestamp"	7	0	0	0
4517	867	"arg_1"	"double"	53	0	1	1
4518	867	"arg_2"	"timestamp"	7	0	1	2
4519	868	"res_0"	"timestamp"	7	0	0	0
4520	868	"arg_1"	"month_interval"	32	0	1	1
4521	868	"arg_2"	"timestamp"	7	0	1	2
4522	869	"res_0"	"timestamp"	7	0	0	0
4523	869	"arg_1"	"sec_interval"	13	0	1	1
4524	869	"arg_2"	"timestamp"	7	0	1	2
4525	870	"res_0"	"timestamp"	7	0	0	0
4526	870	"arg_1"	"time"	7	0	1	1
4527	870	"arg_2"	"timestamp"	7	0	1	2
4528	871	"res_0"	"timestamp"	7	0	0	0
4529	871	"arg_1"	"timetz"	7	0	1	1
4530	871	"arg_2"	"timestamp"	7	0	1	2
4531	872	"res_0"	"timestamp"	7	0	0	0
4532	872	"arg_1"	"date"	0	0	1	1
4533	872	"arg_2"	"timestamp"	7	0	1	2
4534	873	"res_0"	"timestamp"	7	0	0	0
4535	873	"arg_1"	"timestamp"	7	0	1	1
4536	873	"arg_2"	"timestamp"	7	0	1	2
4537	874	"res_0"	"timestamp"	7	0	0	0
4538	874	"arg_1"	"timestamptz"	7	0	1	1
4539	874	"arg_2"	"timestamp"	7	0	1	2
4540	875	"res_0"	"timestamp"	7	0	0	0
4541	875	"arg_1"	"blob"	0	0	1	1
4542	875	"arg_2"	"timestamp"	7	0	1	2
4543	876	"res_0"	"timestamp"	7	0	0	0
4544	876	"arg_1"	"geometry"	0	0	1	1
4545	876	"arg_2"	"timestamp"	7	0	1	2
4546	877	"res_0"	"timestamp"	7	0	0	0
4547	877	"arg_1"	"geometrya"	0	0	1	1
4548	877	"arg_2"	"timestamp"	7	0	1	2
4549	878	"res_0"	"timestamp"	7	0	0	0
4550	878	"arg_1"	"mbr"	0	0	1	1
4551	878	"arg_2"	"timestamp"	7	0	1	2
4552	879	"res_0"	"timestamptz"	7	0	0	0
4553	879	"arg_1"	"oid"	63	0	1	1
4554	879	"arg_2"	"timestamptz"	7	0	1	2
4555	880	"res_0"	"timestamptz"	7	0	0	0
4556	880	"arg_1"	"tinyint"	8	0	1	1
4557	880	"arg_2"	"timestamptz"	7	0	1	2
4558	881	"res_0"	"timestamptz"	7	0	0	0
4559	881	"arg_1"	"smallint"	16	0	1	1
4560	881	"arg_2"	"timestamptz"	7	0	1	2
4561	882	"res_0"	"timestamptz"	7	0	0	0
4562	882	"arg_1"	"int"	32	0	1	1
4563	882	"arg_2"	"timestamptz"	7	0	1	2
4564	883	"res_0"	"timestamptz"	7	0	0	0
4565	883	"arg_1"	"bigint"	64	0	1	1
4566	883	"arg_2"	"timestamptz"	7	0	1	2
4567	884	"res_0"	"timestamptz"	7	0	0	0
4568	884	"arg_1"	"wrd"	64	0	1	1
4569	884	"arg_2"	"timestamptz"	7	0	1	2
4570	885	"res_0"	"timestamptz"	7	0	0	0
4571	885	"arg_1"	"decimal"	2	0	1	1
4572	885	"arg_2"	"timestamptz"	7	0	1	2
4573	886	"res_0"	"timestamptz"	7	0	0	0
4574	886	"arg_1"	"decimal"	4	0	1	1
4575	886	"arg_2"	"timestamptz"	7	0	1	2
4576	887	"res_0"	"timestamptz"	7	0	0	0
4577	887	"arg_1"	"decimal"	9	0	1	1
4578	887	"arg_2"	"timestamptz"	7	0	1	2
4579	888	"res_0"	"timestamptz"	7	0	0	0
4580	888	"arg_1"	"decimal"	19	0	1	1
4581	888	"arg_2"	"timestamptz"	7	0	1	2
4582	889	"res_0"	"timestamptz"	7	0	0	0
4583	889	"arg_1"	"real"	24	0	1	1
4584	889	"arg_2"	"timestamptz"	7	0	1	2
4585	890	"res_0"	"timestamptz"	7	0	0	0
4586	890	"arg_1"	"double"	53	0	1	1
4587	890	"arg_2"	"timestamptz"	7	0	1	2
4588	891	"res_0"	"timestamptz"	7	0	0	0
4589	891	"arg_1"	"month_interval"	32	0	1	1
4590	891	"arg_2"	"timestamptz"	7	0	1	2
4591	892	"res_0"	"timestamptz"	7	0	0	0
4592	892	"arg_1"	"sec_interval"	13	0	1	1
4593	892	"arg_2"	"timestamptz"	7	0	1	2
4594	893	"res_0"	"timestamptz"	7	0	0	0
4595	893	"arg_1"	"time"	7	0	1	1
4596	893	"arg_2"	"timestamptz"	7	0	1	2
4597	894	"res_0"	"timestamptz"	7	0	0	0
4598	894	"arg_1"	"timetz"	7	0	1	1
4599	894	"arg_2"	"timestamptz"	7	0	1	2
4600	895	"res_0"	"timestamptz"	7	0	0	0
4601	895	"arg_1"	"date"	0	0	1	1
4602	895	"arg_2"	"timestamptz"	7	0	1	2
4603	896	"res_0"	"timestamptz"	7	0	0	0
4604	896	"arg_1"	"timestamp"	7	0	1	1
4605	896	"arg_2"	"timestamptz"	7	0	1	2
4606	897	"res_0"	"timestamptz"	7	0	0	0
4607	897	"arg_1"	"timestamptz"	7	0	1	1
4608	897	"arg_2"	"timestamptz"	7	0	1	2
4609	898	"res_0"	"timestamptz"	7	0	0	0
4610	898	"arg_1"	"blob"	0	0	1	1
4611	898	"arg_2"	"timestamptz"	7	0	1	2
4612	899	"res_0"	"timestamptz"	7	0	0	0
4613	899	"arg_1"	"geometry"	0	0	1	1
4614	899	"arg_2"	"timestamptz"	7	0	1	2
4615	900	"res_0"	"timestamptz"	7	0	0	0
4616	900	"arg_1"	"geometrya"	0	0	1	1
4617	900	"arg_2"	"timestamptz"	7	0	1	2
4618	901	"res_0"	"timestamptz"	7	0	0	0
4619	901	"arg_1"	"mbr"	0	0	1	1
4620	901	"arg_2"	"timestamptz"	7	0	1	2
4621	902	"res_0"	"blob"	0	0	0	0
4622	902	"arg_1"	"oid"	63	0	1	1
4623	902	"arg_2"	"blob"	0	0	1	2
4624	903	"res_0"	"blob"	0	0	0	0
4625	903	"arg_1"	"tinyint"	8	0	1	1
4626	903	"arg_2"	"blob"	0	0	1	2
4627	904	"res_0"	"blob"	0	0	0	0
4628	904	"arg_1"	"smallint"	16	0	1	1
4629	904	"arg_2"	"blob"	0	0	1	2
4630	905	"res_0"	"blob"	0	0	0	0
4631	905	"arg_1"	"int"	32	0	1	1
4632	905	"arg_2"	"blob"	0	0	1	2
4633	906	"res_0"	"blob"	0	0	0	0
4634	906	"arg_1"	"bigint"	64	0	1	1
4635	906	"arg_2"	"blob"	0	0	1	2
4636	907	"res_0"	"blob"	0	0	0	0
4637	907	"arg_1"	"wrd"	64	0	1	1
4638	907	"arg_2"	"blob"	0	0	1	2
4639	908	"res_0"	"blob"	0	0	0	0
4640	908	"arg_1"	"decimal"	2	0	1	1
4641	908	"arg_2"	"blob"	0	0	1	2
4642	909	"res_0"	"blob"	0	0	0	0
4643	909	"arg_1"	"decimal"	4	0	1	1
4644	909	"arg_2"	"blob"	0	0	1	2
4645	910	"res_0"	"blob"	0	0	0	0
4646	910	"arg_1"	"decimal"	9	0	1	1
4647	910	"arg_2"	"blob"	0	0	1	2
4648	911	"res_0"	"blob"	0	0	0	0
4649	911	"arg_1"	"decimal"	19	0	1	1
4650	911	"arg_2"	"blob"	0	0	1	2
4651	912	"res_0"	"blob"	0	0	0	0
4652	912	"arg_1"	"real"	24	0	1	1
4653	912	"arg_2"	"blob"	0	0	1	2
4654	913	"res_0"	"blob"	0	0	0	0
4655	913	"arg_1"	"double"	53	0	1	1
4656	913	"arg_2"	"blob"	0	0	1	2
4657	914	"res_0"	"blob"	0	0	0	0
4658	914	"arg_1"	"month_interval"	32	0	1	1
4659	914	"arg_2"	"blob"	0	0	1	2
4660	915	"res_0"	"blob"	0	0	0	0
4661	915	"arg_1"	"sec_interval"	13	0	1	1
4662	915	"arg_2"	"blob"	0	0	1	2
4663	916	"res_0"	"blob"	0	0	0	0
4664	916	"arg_1"	"time"	7	0	1	1
4665	916	"arg_2"	"blob"	0	0	1	2
4666	917	"res_0"	"blob"	0	0	0	0
4667	917	"arg_1"	"timetz"	7	0	1	1
4668	917	"arg_2"	"blob"	0	0	1	2
4669	918	"res_0"	"blob"	0	0	0	0
4670	918	"arg_1"	"date"	0	0	1	1
4671	918	"arg_2"	"blob"	0	0	1	2
4672	919	"res_0"	"blob"	0	0	0	0
4673	919	"arg_1"	"timestamp"	7	0	1	1
4674	919	"arg_2"	"blob"	0	0	1	2
4675	920	"res_0"	"blob"	0	0	0	0
4676	920	"arg_1"	"timestamptz"	7	0	1	1
4677	920	"arg_2"	"blob"	0	0	1	2
4678	921	"res_0"	"blob"	0	0	0	0
4679	921	"arg_1"	"blob"	0	0	1	1
4680	921	"arg_2"	"blob"	0	0	1	2
4681	922	"res_0"	"blob"	0	0	0	0
4682	922	"arg_1"	"geometry"	0	0	1	1
4683	922	"arg_2"	"blob"	0	0	1	2
4684	923	"res_0"	"blob"	0	0	0	0
4685	923	"arg_1"	"geometrya"	0	0	1	1
4686	923	"arg_2"	"blob"	0	0	1	2
4687	924	"res_0"	"blob"	0	0	0	0
4688	924	"arg_1"	"mbr"	0	0	1	1
4689	924	"arg_2"	"blob"	0	0	1	2
4690	925	"res_0"	"geometry"	0	0	0	0
4691	925	"arg_1"	"oid"	63	0	1	1
4692	925	"arg_2"	"geometry"	0	0	1	2
4693	926	"res_0"	"geometry"	0	0	0	0
4694	926	"arg_1"	"tinyint"	8	0	1	1
4695	926	"arg_2"	"geometry"	0	0	1	2
4696	927	"res_0"	"geometry"	0	0	0	0
4697	927	"arg_1"	"smallint"	16	0	1	1
4698	927	"arg_2"	"geometry"	0	0	1	2
4699	928	"res_0"	"geometry"	0	0	0	0
4700	928	"arg_1"	"int"	32	0	1	1
4701	928	"arg_2"	"geometry"	0	0	1	2
4702	929	"res_0"	"geometry"	0	0	0	0
4703	929	"arg_1"	"bigint"	64	0	1	1
4704	929	"arg_2"	"geometry"	0	0	1	2
4705	930	"res_0"	"geometry"	0	0	0	0
4706	930	"arg_1"	"wrd"	64	0	1	1
4707	930	"arg_2"	"geometry"	0	0	1	2
4708	931	"res_0"	"geometry"	0	0	0	0
4709	931	"arg_1"	"decimal"	2	0	1	1
4710	931	"arg_2"	"geometry"	0	0	1	2
4711	932	"res_0"	"geometry"	0	0	0	0
4712	932	"arg_1"	"decimal"	4	0	1	1
4713	932	"arg_2"	"geometry"	0	0	1	2
4714	933	"res_0"	"geometry"	0	0	0	0
4715	933	"arg_1"	"decimal"	9	0	1	1
4716	933	"arg_2"	"geometry"	0	0	1	2
4717	934	"res_0"	"geometry"	0	0	0	0
4718	934	"arg_1"	"decimal"	19	0	1	1
4719	934	"arg_2"	"geometry"	0	0	1	2
4720	935	"res_0"	"geometry"	0	0	0	0
4721	935	"arg_1"	"real"	24	0	1	1
4722	935	"arg_2"	"geometry"	0	0	1	2
4723	936	"res_0"	"geometry"	0	0	0	0
4724	936	"arg_1"	"double"	53	0	1	1
4725	936	"arg_2"	"geometry"	0	0	1	2
4726	937	"res_0"	"geometry"	0	0	0	0
4727	937	"arg_1"	"month_interval"	32	0	1	1
4728	937	"arg_2"	"geometry"	0	0	1	2
4729	938	"res_0"	"geometry"	0	0	0	0
4730	938	"arg_1"	"sec_interval"	13	0	1	1
4731	938	"arg_2"	"geometry"	0	0	1	2
4732	939	"res_0"	"geometry"	0	0	0	0
4733	939	"arg_1"	"time"	7	0	1	1
4734	939	"arg_2"	"geometry"	0	0	1	2
4735	940	"res_0"	"geometry"	0	0	0	0
4736	940	"arg_1"	"timetz"	7	0	1	1
4737	940	"arg_2"	"geometry"	0	0	1	2
4738	941	"res_0"	"geometry"	0	0	0	0
4739	941	"arg_1"	"date"	0	0	1	1
4740	941	"arg_2"	"geometry"	0	0	1	2
4741	942	"res_0"	"geometry"	0	0	0	0
4742	942	"arg_1"	"timestamp"	7	0	1	1
4743	942	"arg_2"	"geometry"	0	0	1	2
4744	943	"res_0"	"geometry"	0	0	0	0
4745	943	"arg_1"	"timestamptz"	7	0	1	1
4746	943	"arg_2"	"geometry"	0	0	1	2
4747	944	"res_0"	"geometry"	0	0	0	0
4748	944	"arg_1"	"blob"	0	0	1	1
4749	944	"arg_2"	"geometry"	0	0	1	2
4750	945	"res_0"	"geometry"	0	0	0	0
4751	945	"arg_1"	"geometry"	0	0	1	1
4752	945	"arg_2"	"geometry"	0	0	1	2
4753	946	"res_0"	"geometry"	0	0	0	0
4754	946	"arg_1"	"geometrya"	0	0	1	1
4755	946	"arg_2"	"geometry"	0	0	1	2
4756	947	"res_0"	"geometry"	0	0	0	0
4757	947	"arg_1"	"mbr"	0	0	1	1
4758	947	"arg_2"	"geometry"	0	0	1	2
4759	948	"res_0"	"geometrya"	0	0	0	0
4760	948	"arg_1"	"oid"	63	0	1	1
4761	948	"arg_2"	"geometrya"	0	0	1	2
4762	949	"res_0"	"geometrya"	0	0	0	0
4763	949	"arg_1"	"tinyint"	8	0	1	1
4764	949	"arg_2"	"geometrya"	0	0	1	2
4765	950	"res_0"	"geometrya"	0	0	0	0
4766	950	"arg_1"	"smallint"	16	0	1	1
4767	950	"arg_2"	"geometrya"	0	0	1	2
4768	951	"res_0"	"geometrya"	0	0	0	0
4769	951	"arg_1"	"int"	32	0	1	1
4770	951	"arg_2"	"geometrya"	0	0	1	2
4771	952	"res_0"	"geometrya"	0	0	0	0
4772	952	"arg_1"	"bigint"	64	0	1	1
4773	952	"arg_2"	"geometrya"	0	0	1	2
4774	953	"res_0"	"geometrya"	0	0	0	0
4775	953	"arg_1"	"wrd"	64	0	1	1
4776	953	"arg_2"	"geometrya"	0	0	1	2
4777	954	"res_0"	"geometrya"	0	0	0	0
4778	954	"arg_1"	"decimal"	2	0	1	1
4779	954	"arg_2"	"geometrya"	0	0	1	2
4780	955	"res_0"	"geometrya"	0	0	0	0
4781	955	"arg_1"	"decimal"	4	0	1	1
4782	955	"arg_2"	"geometrya"	0	0	1	2
4783	956	"res_0"	"geometrya"	0	0	0	0
4784	956	"arg_1"	"decimal"	9	0	1	1
4785	956	"arg_2"	"geometrya"	0	0	1	2
4786	957	"res_0"	"geometrya"	0	0	0	0
4787	957	"arg_1"	"decimal"	19	0	1	1
4788	957	"arg_2"	"geometrya"	0	0	1	2
4789	958	"res_0"	"geometrya"	0	0	0	0
4790	958	"arg_1"	"real"	24	0	1	1
4791	958	"arg_2"	"geometrya"	0	0	1	2
4792	959	"res_0"	"geometrya"	0	0	0	0
4793	959	"arg_1"	"double"	53	0	1	1
4794	959	"arg_2"	"geometrya"	0	0	1	2
4795	960	"res_0"	"geometrya"	0	0	0	0
4796	960	"arg_1"	"month_interval"	32	0	1	1
4797	960	"arg_2"	"geometrya"	0	0	1	2
4798	961	"res_0"	"geometrya"	0	0	0	0
4799	961	"arg_1"	"sec_interval"	13	0	1	1
4800	961	"arg_2"	"geometrya"	0	0	1	2
4801	962	"res_0"	"geometrya"	0	0	0	0
4802	962	"arg_1"	"time"	7	0	1	1
4803	962	"arg_2"	"geometrya"	0	0	1	2
4804	963	"res_0"	"geometrya"	0	0	0	0
4805	963	"arg_1"	"timetz"	7	0	1	1
4806	963	"arg_2"	"geometrya"	0	0	1	2
4807	964	"res_0"	"geometrya"	0	0	0	0
4808	964	"arg_1"	"date"	0	0	1	1
4809	964	"arg_2"	"geometrya"	0	0	1	2
4810	965	"res_0"	"geometrya"	0	0	0	0
4811	965	"arg_1"	"timestamp"	7	0	1	1
4812	965	"arg_2"	"geometrya"	0	0	1	2
4813	966	"res_0"	"geometrya"	0	0	0	0
4814	966	"arg_1"	"timestamptz"	7	0	1	1
4815	966	"arg_2"	"geometrya"	0	0	1	2
4816	967	"res_0"	"geometrya"	0	0	0	0
4817	967	"arg_1"	"blob"	0	0	1	1
4818	967	"arg_2"	"geometrya"	0	0	1	2
4819	968	"res_0"	"geometrya"	0	0	0	0
4820	968	"arg_1"	"geometry"	0	0	1	1
4821	968	"arg_2"	"geometrya"	0	0	1	2
4822	969	"res_0"	"geometrya"	0	0	0	0
4823	969	"arg_1"	"geometrya"	0	0	1	1
4824	969	"arg_2"	"geometrya"	0	0	1	2
4825	970	"res_0"	"geometrya"	0	0	0	0
4826	970	"arg_1"	"mbr"	0	0	1	1
4827	970	"arg_2"	"geometrya"	0	0	1	2
4828	971	"res_0"	"mbr"	0	0	0	0
4829	971	"arg_1"	"oid"	63	0	1	1
4830	971	"arg_2"	"mbr"	0	0	1	2
4831	972	"res_0"	"mbr"	0	0	0	0
4832	972	"arg_1"	"tinyint"	8	0	1	1
4833	972	"arg_2"	"mbr"	0	0	1	2
4834	973	"res_0"	"mbr"	0	0	0	0
4835	973	"arg_1"	"smallint"	16	0	1	1
4836	973	"arg_2"	"mbr"	0	0	1	2
4837	974	"res_0"	"mbr"	0	0	0	0
4838	974	"arg_1"	"int"	32	0	1	1
4839	974	"arg_2"	"mbr"	0	0	1	2
4840	975	"res_0"	"mbr"	0	0	0	0
4841	975	"arg_1"	"bigint"	64	0	1	1
4842	975	"arg_2"	"mbr"	0	0	1	2
4843	976	"res_0"	"mbr"	0	0	0	0
4844	976	"arg_1"	"wrd"	64	0	1	1
4845	976	"arg_2"	"mbr"	0	0	1	2
4846	977	"res_0"	"mbr"	0	0	0	0
4847	977	"arg_1"	"decimal"	2	0	1	1
4848	977	"arg_2"	"mbr"	0	0	1	2
4849	978	"res_0"	"mbr"	0	0	0	0
4850	978	"arg_1"	"decimal"	4	0	1	1
4851	978	"arg_2"	"mbr"	0	0	1	2
4852	979	"res_0"	"mbr"	0	0	0	0
4853	979	"arg_1"	"decimal"	9	0	1	1
4854	979	"arg_2"	"mbr"	0	0	1	2
4855	980	"res_0"	"mbr"	0	0	0	0
4856	980	"arg_1"	"decimal"	19	0	1	1
4857	980	"arg_2"	"mbr"	0	0	1	2
4858	981	"res_0"	"mbr"	0	0	0	0
4859	981	"arg_1"	"real"	24	0	1	1
4860	981	"arg_2"	"mbr"	0	0	1	2
4861	982	"res_0"	"mbr"	0	0	0	0
4862	982	"arg_1"	"double"	53	0	1	1
4863	982	"arg_2"	"mbr"	0	0	1	2
4864	983	"res_0"	"mbr"	0	0	0	0
4865	983	"arg_1"	"month_interval"	32	0	1	1
4866	983	"arg_2"	"mbr"	0	0	1	2
4867	984	"res_0"	"mbr"	0	0	0	0
4868	984	"arg_1"	"sec_interval"	13	0	1	1
4869	984	"arg_2"	"mbr"	0	0	1	2
4870	985	"res_0"	"mbr"	0	0	0	0
4871	985	"arg_1"	"time"	7	0	1	1
4872	985	"arg_2"	"mbr"	0	0	1	2
4873	986	"res_0"	"mbr"	0	0	0	0
4874	986	"arg_1"	"timetz"	7	0	1	1
4875	986	"arg_2"	"mbr"	0	0	1	2
4876	987	"res_0"	"mbr"	0	0	0	0
4877	987	"arg_1"	"date"	0	0	1	1
4878	987	"arg_2"	"mbr"	0	0	1	2
4879	988	"res_0"	"mbr"	0	0	0	0
4880	988	"arg_1"	"timestamp"	7	0	1	1
4881	988	"arg_2"	"mbr"	0	0	1	2
4882	989	"res_0"	"mbr"	0	0	0	0
4883	989	"arg_1"	"timestamptz"	7	0	1	1
4884	989	"arg_2"	"mbr"	0	0	1	2
4885	990	"res_0"	"mbr"	0	0	0	0
4886	990	"arg_1"	"blob"	0	0	1	1
4887	990	"arg_2"	"mbr"	0	0	1	2
4888	991	"res_0"	"mbr"	0	0	0	0
4889	991	"arg_1"	"geometry"	0	0	1	1
4890	991	"arg_2"	"mbr"	0	0	1	2
4891	992	"res_0"	"mbr"	0	0	0	0
4892	992	"arg_1"	"geometrya"	0	0	1	1
4893	992	"arg_2"	"mbr"	0	0	1	2
4894	993	"res_0"	"mbr"	0	0	0	0
4895	993	"arg_1"	"mbr"	0	0	1	1
4896	993	"arg_2"	"mbr"	0	0	1	2
4897	994	"res_0"	"real"	24	0	0	0
4898	994	"arg_1"	"real"	24	0	1	1
4899	994	"arg_2"	"real"	24	0	1	2
4900	995	"res_0"	"real"	24	0	0	0
4901	995	"arg_1"	"real"	24	0	1	1
4902	996	"res_0"	"real"	24	0	0	0
4903	996	"arg_1"	"real"	24	0	1	1
4904	997	"res_0"	"real"	24	0	0	0
4905	997	"arg_1"	"real"	24	0	1	1
4906	998	"res_0"	"real"	24	0	0	0
4907	998	"arg_1"	"real"	24	0	1	1
4908	999	"res_0"	"real"	24	0	0	0
4909	999	"arg_1"	"real"	24	0	1	1
4910	1000	"res_0"	"real"	24	0	0	0
4911	1000	"arg_1"	"real"	24	0	1	1
4912	1001	"res_0"	"real"	24	0	0	0
4913	1001	"arg_1"	"real"	24	0	1	1
4914	1002	"res_0"	"real"	24	0	0	0
4915	1002	"arg_1"	"real"	24	0	1	1
4916	1003	"res_0"	"real"	24	0	0	0
4917	1003	"arg_1"	"real"	24	0	1	1
4918	1004	"res_0"	"real"	24	0	0	0
4919	1004	"arg_1"	"real"	24	0	1	1
4920	1004	"arg_2"	"real"	24	0	1	2
4921	1005	"res_0"	"real"	24	0	0	0
4922	1005	"arg_1"	"real"	24	0	1	1
4923	1006	"res_0"	"real"	24	0	0	0
4924	1006	"arg_1"	"real"	24	0	1	1
4925	1007	"res_0"	"real"	24	0	0	0
4926	1007	"arg_1"	"real"	24	0	1	1
4927	1008	"res_0"	"real"	24	0	0	0
4928	1008	"arg_1"	"real"	24	0	1	1
4929	1009	"res_0"	"real"	24	0	0	0
4930	1009	"arg_1"	"real"	24	0	1	1
4931	1010	"res_0"	"real"	24	0	0	0
4932	1010	"arg_1"	"real"	24	0	1	1
4933	1011	"res_0"	"real"	24	0	0	0
4934	1011	"arg_1"	"real"	24	0	1	1
4935	1012	"res_0"	"real"	24	0	0	0
4936	1012	"arg_1"	"real"	24	0	1	1
4937	1013	"res_0"	"double"	53	0	0	0
4938	1013	"arg_1"	"double"	53	0	1	1
4939	1013	"arg_2"	"double"	53	0	1	2
4940	1014	"res_0"	"double"	53	0	0	0
4941	1014	"arg_1"	"double"	53	0	1	1
4942	1015	"res_0"	"double"	53	0	0	0
4943	1015	"arg_1"	"double"	53	0	1	1
4944	1016	"res_0"	"double"	53	0	0	0
4945	1016	"arg_1"	"double"	53	0	1	1
4946	1017	"res_0"	"double"	53	0	0	0
4947	1017	"arg_1"	"double"	53	0	1	1
4948	1018	"res_0"	"double"	53	0	0	0
4949	1018	"arg_1"	"double"	53	0	1	1
4950	1019	"res_0"	"double"	53	0	0	0
4951	1019	"arg_1"	"double"	53	0	1	1
4952	1020	"res_0"	"double"	53	0	0	0
4953	1020	"arg_1"	"double"	53	0	1	1
4954	1021	"res_0"	"double"	53	0	0	0
4955	1021	"arg_1"	"double"	53	0	1	1
4956	1022	"res_0"	"double"	53	0	0	0
4957	1022	"arg_1"	"double"	53	0	1	1
4958	1023	"res_0"	"double"	53	0	0	0
4959	1023	"arg_1"	"double"	53	0	1	1
4960	1023	"arg_2"	"double"	53	0	1	2
4961	1024	"res_0"	"double"	53	0	0	0
4962	1024	"arg_1"	"double"	53	0	1	1
4963	1025	"res_0"	"double"	53	0	0	0
4964	1025	"arg_1"	"double"	53	0	1	1
4965	1026	"res_0"	"double"	53	0	0	0
4966	1026	"arg_1"	"double"	53	0	1	1
4967	1027	"res_0"	"double"	53	0	0	0
4968	1027	"arg_1"	"double"	53	0	1	1
4969	1028	"res_0"	"double"	53	0	0	0
4970	1028	"arg_1"	"double"	53	0	1	1
4971	1029	"res_0"	"double"	53	0	0	0
4972	1029	"arg_1"	"double"	53	0	1	1
4973	1030	"res_0"	"double"	53	0	0	0
4974	1030	"arg_1"	"double"	53	0	1	1
4975	1031	"res_0"	"double"	53	0	0	0
4976	1031	"arg_1"	"double"	53	0	1	1
4977	1032	"res_0"	"double"	53	0	0	0
4978	1033	"res_0"	"int"	32	0	0	0
4979	1034	"res_0"	"int"	32	0	0	0
4980	1034	"arg_1"	"int"	32	0	1	1
4981	1035	"res_0"	"date"	0	0	0	0
4982	1036	"res_0"	"date"	0	0	0	0
4983	1037	"res_0"	"timetz"	7	0	0	0
4984	1038	"res_0"	"timetz"	7	0	0	0
4985	1039	"res_0"	"timestamptz"	7	0	0	0
4986	1040	"res_0"	"time"	7	0	0	0
4987	1041	"res_0"	"timestamp"	7	0	0	0
4988	1042	"res_0"	"month_interval"	32	0	0	0
4989	1042	"arg_1"	"date"	0	0	1	1
4990	1042	"arg_2"	"date"	0	0	1	2
4991	1043	"res_0"	"sec_interval"	13	0	0	0
4992	1043	"arg_1"	"timetz"	7	0	1	1
4993	1043	"arg_2"	"timetz"	7	0	1	2
4994	1044	"res_0"	"sec_interval"	13	0	0	0
4995	1044	"arg_1"	"time"	7	0	1	1
4996	1044	"arg_2"	"time"	7	0	1	2
4997	1045	"res_0"	"sec_interval"	13	0	0	0
4998	1045	"arg_1"	"timestamptz"	7	0	1	1
4999	1045	"arg_2"	"timestamptz"	7	0	1	2
5000	1046	"res_0"	"sec_interval"	13	0	0	0
5001	1046	"arg_1"	"timestamp"	7	0	1	1
5002	1046	"arg_2"	"timestamp"	7	0	1	2
5003	1047	"res_0"	"date"	0	0	0	0
5004	1047	"arg_1"	"date"	0	0	1	1
5005	1047	"arg_2"	"sec_interval"	13	0	1	2
5006	1048	"res_0"	"date"	0	0	0	0
5007	1048	"arg_1"	"date"	0	0	1	1
5008	1048	"arg_2"	"month_interval"	32	0	1	2
5009	1049	"res_0"	"time"	7	0	0	0
5010	1049	"arg_1"	"time"	7	0	1	1
5011	1049	"arg_2"	"sec_interval"	13	0	1	2
5012	1050	"res_0"	"timetz"	7	0	0	0
5013	1050	"arg_1"	"timetz"	7	0	1	1
5014	1050	"arg_2"	"sec_interval"	13	0	1	2
5015	1051	"res_0"	"timestamp"	7	0	0	0
5016	1051	"arg_1"	"timestamp"	7	0	1	1
5017	1051	"arg_2"	"sec_interval"	13	0	1	2
5018	1052	"res_0"	"timestamp"	7	0	0	0
5019	1052	"arg_1"	"timestamp"	7	0	1	1
5020	1052	"arg_2"	"month_interval"	32	0	1	2
5021	1053	"res_0"	"timestamptz"	7	0	0	0
5022	1053	"arg_1"	"timestamptz"	7	0	1	1
5023	1053	"arg_2"	"sec_interval"	13	0	1	2
5024	1054	"res_0"	"timestamptz"	7	0	0	0
5025	1054	"arg_1"	"timestamptz"	7	0	1	1
5026	1054	"arg_2"	"month_interval"	32	0	1	2
5027	1055	"res_0"	"date"	0	0	0	0
5028	1055	"arg_1"	"date"	0	0	1	1
5029	1055	"arg_2"	"sec_interval"	13	0	1	2
5030	1056	"res_0"	"date"	0	0	0	0
5031	1056	"arg_1"	"date"	0	0	1	1
5032	1056	"arg_2"	"month_interval"	32	0	1	2
5033	1057	"res_0"	"timestamp"	7	0	0	0
5034	1057	"arg_1"	"timestamp"	7	0	1	1
5035	1057	"arg_2"	"sec_interval"	13	0	1	2
5036	1058	"res_0"	"timestamp"	7	0	0	0
5037	1058	"arg_1"	"timestamp"	7	0	1	1
5038	1058	"arg_2"	"month_interval"	32	0	1	2
5039	1059	"res_0"	"timestamptz"	7	0	0	0
5040	1059	"arg_1"	"timestamptz"	7	0	1	1
5041	1059	"arg_2"	"sec_interval"	13	0	1	2
5042	1060	"res_0"	"timestamptz"	7	0	0	0
5043	1060	"arg_1"	"timestamptz"	7	0	1	1
5044	1060	"arg_2"	"month_interval"	32	0	1	2
5045	1061	"res_0"	"time"	7	0	0	0
5046	1061	"arg_1"	"time"	7	0	1	1
5047	1061	"arg_2"	"sec_interval"	13	0	1	2
5048	1062	"res_0"	"timetz"	7	0	0	0
5049	1062	"arg_1"	"timetz"	7	0	1	1
5050	1062	"arg_2"	"sec_interval"	13	0	1	2
5051	1063	"res_0"	"sec_interval"	13	0	0	0
5052	1064	"res_0"	"int"	32	0	0	0
5053	1064	"arg_1"	"date"	0	0	1	1
5054	1065	"res_0"	"int"	32	0	0	0
5055	1065	"arg_1"	"date"	0	0	1	1
5056	1066	"res_0"	"int"	32	0	0	0
5057	1066	"arg_1"	"date"	0	0	1	1
5058	1067	"res_0"	"int"	32	0	0	0
5059	1067	"arg_1"	"time"	7	0	1	1
5060	1068	"res_0"	"int"	32	0	0	0
5061	1068	"arg_1"	"time"	7	0	1	1
5062	1069	"res_0"	"decimal"	9	3	0	0
5063	1069	"arg_1"	"time"	7	0	1	1
5064	1070	"res_0"	"int"	32	0	0	0
5065	1070	"arg_1"	"timetz"	7	0	1	1
5066	1071	"res_0"	"int"	32	0	0	0
5067	1071	"arg_1"	"timetz"	7	0	1	1
5068	1072	"res_0"	"decimal"	9	3	0	0
5069	1072	"arg_1"	"timetz"	7	0	1	1
5070	1073	"res_0"	"int"	32	0	0	0
5071	1073	"arg_1"	"timestamp"	7	0	1	1
5072	1074	"res_0"	"int"	32	0	0	0
5073	1074	"arg_1"	"timestamp"	7	0	1	1
5074	1075	"res_0"	"int"	32	0	0	0
5075	1075	"arg_1"	"timestamp"	7	0	1	1
5076	1076	"res_0"	"int"	32	0	0	0
5077	1076	"arg_1"	"timestamp"	7	0	1	1
5078	1077	"res_0"	"int"	32	0	0	0
5079	1077	"arg_1"	"timestamp"	7	0	1	1
5080	1078	"res_0"	"decimal"	9	3	0	0
5081	1078	"arg_1"	"timestamp"	7	0	1	1
5082	1079	"res_0"	"int"	32	0	0	0
5083	1079	"arg_1"	"timestamptz"	7	0	1	1
5084	1080	"res_0"	"int"	32	0	0	0
5085	1080	"arg_1"	"timestamptz"	7	0	1	1
5086	1081	"res_0"	"int"	32	0	0	0
5087	1081	"arg_1"	"timestamptz"	7	0	1	1
5088	1082	"res_0"	"int"	32	0	0	0
5089	1082	"arg_1"	"timestamptz"	7	0	1	1
5090	1083	"res_0"	"int"	32	0	0	0
5091	1083	"arg_1"	"timestamptz"	7	0	1	1
5092	1084	"res_0"	"decimal"	9	3	0	0
5093	1084	"arg_1"	"timestamptz"	7	0	1	1
5094	1085	"res_0"	"int"	32	0	0	0
5095	1085	"arg_1"	"month_interval"	32	0	1	1
5096	1086	"res_0"	"int"	32	0	0	0
5097	1086	"arg_1"	"month_interval"	32	0	1	1
5098	1087	"res_0"	"bigint"	64	0	0	0
5099	1087	"arg_1"	"sec_interval"	13	0	1	1
5100	1088	"res_0"	"int"	32	0	0	0
5101	1088	"arg_1"	"sec_interval"	13	0	1	1
5102	1089	"res_0"	"int"	32	0	0	0
5103	1089	"arg_1"	"sec_interval"	13	0	1	1
5104	1090	"res_0"	"int"	32	0	0	0
5105	1090	"arg_1"	"sec_interval"	13	0	1	1
5106	1091	"res_0"	"int"	32	0	0	0
5107	1091	"arg_1"	"date"	0	0	1	1
5108	1092	"res_0"	"int"	32	0	0	0
5109	1092	"arg_1"	"date"	0	0	1	1
5110	1093	"res_0"	"int"	32	0	0	0
5111	1093	"arg_1"	"date"	0	0	1	1
5112	1094	"res_0"	"int"	32	0	0	0
5113	1094	"arg_1"	"date"	0	0	1	1
5114	1095	"res_0"	"int"	32	0	0	0
5115	1095	"arg_1"	"date"	0	0	1	1
5116	1096	"res_0"	"bigint"	64	0	0	0
5117	1096	"arg_1"	"varchar"	0	0	1	1
5118	1096	"arg_2"	"varchar"	0	0	1	2
5119	1097	"res_0"	"bigint"	64	0	0	0
5120	1097	"arg_1"	"varchar"	0	0	1	1
5121	1097	"arg_2"	"varchar"	0	0	1	2
5122	1098	"res_0"	"bigint"	64	0	0	0
5123	1098	"arg_1"	"varchar"	0	0	1	1
5124	1098	"arg_2"	"varchar"	0	0	1	2
5125	1098	"arg_3"	"bigint"	64	0	1	3
5126	1099	"res_0"	"tinyint"	8	0	0	0
5127	1099	"arg_1"	"char"	0	0	1	1
5128	1099	"arg_2"	"boolean"	1	0	1	2
5129	1100	"res_0"	"smallint"	16	0	0	0
5130	1100	"arg_1"	"char"	0	0	1	1
5131	1100	"arg_2"	"boolean"	1	0	1	2
5132	1101	"res_0"	"int"	32	0	0	0
5133	1101	"arg_1"	"char"	0	0	1	1
5134	1101	"arg_2"	"boolean"	1	0	1	2
5135	1102	"res_0"	"char"	0	0	0	0
5136	1102	"arg_1"	"char"	0	0	1	1
5137	1103	"res_0"	"int"	32	0	0	0
5138	1103	"arg_1"	"char"	0	0	1	1
5139	1103	"arg_2"	"char"	0	0	1	2
5140	1104	"res_0"	"int"	32	0	0	0
5141	1104	"arg_1"	"char"	0	0	1	1
5142	1104	"arg_2"	"char"	0	0	1	2
5143	1104	"arg_3"	"int"	32	0	1	3
5144	1105	"res_0"	"int"	32	0	0	0
5145	1105	"arg_1"	"char"	0	0	1	1
5146	1105	"arg_2"	"char"	0	0	1	2
5147	1106	"res_0"	"int"	32	0	0	0
5148	1106	"arg_1"	"char"	0	0	1	1
5149	1106	"arg_2"	"char"	0	0	1	2
5150	1106	"arg_3"	"int"	32	0	1	3
5151	1107	"res_0"	"char"	0	0	0	0
5152	1107	"arg_1"	"char"	0	0	1	1
5153	1107	"arg_2"	"char"	0	0	1	2
5154	1107	"arg_3"	"int"	32	0	1	3
5155	1108	"res_0"	"char"	0	0	0	0
5156	1108	"arg_1"	"char"	0	0	1	1
5157	1108	"arg_2"	"int"	32	0	1	2
5158	1109	"res_0"	"char"	0	0	0	0
5159	1109	"arg_1"	"char"	0	0	1	1
5160	1109	"arg_2"	"int"	32	0	1	2
5161	1109	"arg_3"	"int"	32	0	1	3
5162	1110	"res_0"	"char"	0	0	0	0
5163	1110	"arg_1"	"char"	0	0	1	1
5164	1110	"arg_2"	"int"	32	0	1	2
5165	1111	"res_0"	"char"	0	0	0	0
5166	1111	"arg_1"	"char"	0	0	1	1
5167	1111	"arg_2"	"int"	32	0	1	2
5168	1111	"arg_3"	"int"	32	0	1	3
5169	1112	"res_0"	"boolean"	1	0	0	0
5170	1112	"arg_1"	"char"	0	0	1	1
5171	1112	"arg_2"	"char"	0	0	1	2
5172	1113	"res_0"	"boolean"	1	0	0	0
5173	1113	"arg_1"	"char"	0	0	1	1
5174	1113	"arg_2"	"char"	0	0	1	2
5175	1113	"arg_3"	"char"	0	0	1	3
5176	1114	"res_0"	"boolean"	1	0	0	0
5177	1114	"arg_1"	"char"	0	0	1	1
5178	1114	"arg_2"	"char"	0	0	1	2
5179	1115	"res_0"	"boolean"	1	0	0	0
5180	1115	"arg_1"	"char"	0	0	1	1
5181	1115	"arg_2"	"char"	0	0	1	2
5182	1115	"arg_3"	"char"	0	0	1	3
5183	1116	"res_0"	"boolean"	1	0	0	0
5184	1116	"arg_1"	"char"	0	0	1	1
5185	1116	"arg_2"	"char"	0	0	1	2
5186	1117	"res_0"	"boolean"	1	0	0	0
5187	1117	"arg_1"	"char"	0	0	1	1
5188	1117	"arg_2"	"char"	0	0	1	2
5189	1117	"arg_3"	"char"	0	0	1	3
5190	1118	"res_0"	"boolean"	1	0	0	0
5191	1118	"arg_1"	"char"	0	0	1	1
5192	1118	"arg_2"	"char"	0	0	1	2
5193	1119	"res_0"	"boolean"	1	0	0	0
5194	1119	"arg_1"	"char"	0	0	1	1
5195	1119	"arg_2"	"char"	0	0	1	2
5196	1119	"arg_3"	"char"	0	0	1	3
5197	1120	"res_0"	"int"	32	0	0	0
5198	1120	"arg_1"	"char"	0	0	1	1
5199	1120	"arg_2"	"char"	0	0	1	2
5200	1121	"res_0"	"char"	0	0	0	0
5201	1121	"arg_1"	"char"	0	0	1	1
5202	1121	"arg_2"	"int"	32	0	1	2
5203	1122	"res_0"	"char"	0	0	0	0
5204	1122	"arg_1"	"char"	0	0	1	1
5205	1122	"arg_2"	"char"	0	0	1	2
5206	1123	"res_0"	"int"	32	0	0	0
5207	1123	"arg_1"	"char"	0	0	1	1
5208	1124	"res_0"	"char"	0	0	0	0
5209	1124	"arg_1"	"int"	32	0	1	1
5210	1125	"res_0"	"int"	32	0	0	0
5211	1125	"arg_1"	"char"	0	0	1	1
5212	1126	"res_0"	"char"	0	0	0	0
5213	1126	"arg_1"	"char"	0	0	1	1
5214	1126	"arg_2"	"int"	32	0	1	2
5215	1127	"res_0"	"char"	0	0	0	0
5216	1127	"arg_1"	"char"	0	0	1	1
5217	1127	"arg_2"	"int"	32	0	1	2
5218	1128	"res_0"	"char"	0	0	0	0
5219	1128	"arg_1"	"char"	0	0	1	1
5220	1129	"res_0"	"char"	0	0	0	0
5221	1129	"arg_1"	"char"	0	0	1	1
5222	1130	"res_0"	"char"	0	0	0	0
5223	1130	"arg_1"	"char"	0	0	1	1
5224	1131	"res_0"	"char"	0	0	0	0
5225	1131	"arg_1"	"char"	0	0	1	1
5226	1132	"res_0"	"char"	0	0	0	0
5227	1132	"arg_1"	"char"	0	0	1	1
5228	1133	"res_0"	"char"	0	0	0	0
5229	1133	"arg_1"	"char"	0	0	1	1
5230	1133	"arg_2"	"char"	0	0	1	2
5231	1134	"res_0"	"char"	0	0	0	0
5232	1134	"arg_1"	"char"	0	0	1	1
5233	1135	"res_0"	"char"	0	0	0	0
5234	1135	"arg_1"	"char"	0	0	1	1
5235	1135	"arg_2"	"char"	0	0	1	2
5236	1136	"res_0"	"char"	0	0	0	0
5237	1136	"arg_1"	"char"	0	0	1	1
5238	1137	"res_0"	"char"	0	0	0	0
5239	1137	"arg_1"	"char"	0	0	1	1
5240	1137	"arg_2"	"char"	0	0	1	2
5241	1138	"res_0"	"char"	0	0	0	0
5242	1138	"arg_1"	"char"	0	0	1	1
5243	1138	"arg_2"	"int"	32	0	1	2
5244	1139	"res_0"	"char"	0	0	0	0
5245	1139	"arg_1"	"char"	0	0	1	1
5246	1139	"arg_2"	"int"	32	0	1	2
5247	1139	"arg_3"	"char"	0	0	1	3
5248	1140	"res_0"	"char"	0	0	0	0
5249	1140	"arg_1"	"char"	0	0	1	1
5250	1140	"arg_2"	"int"	32	0	1	2
5251	1141	"res_0"	"char"	0	0	0	0
5252	1141	"arg_1"	"char"	0	0	1	1
5253	1141	"arg_2"	"int"	32	0	1	2
5254	1141	"arg_3"	"char"	0	0	1	3
5255	1142	"res_0"	"char"	0	0	0	0
5256	1142	"arg_1"	"char"	0	0	1	1
5257	1142	"arg_2"	"int"	32	0	1	2
5258	1142	"arg_3"	"int"	32	0	1	3
5259	1142	"arg_4"	"char"	0	0	1	4
5260	1143	"res_0"	"char"	0	0	0	0
5261	1143	"arg_1"	"char"	0	0	1	1
5262	1143	"arg_2"	"char"	0	0	1	2
5263	1143	"arg_3"	"char"	0	0	1	3
5264	1144	"res_0"	"char"	0	0	0	0
5265	1144	"arg_1"	"char"	0	0	1	1
5266	1144	"arg_2"	"int"	32	0	1	2
5267	1145	"res_0"	"char"	0	0	0	0
5268	1145	"arg_1"	"int"	32	0	1	1
5269	1146	"res_0"	"int"	32	0	0	0
5270	1146	"arg_1"	"char"	0	0	1	1
5271	1147	"res_0"	"int"	32	0	0	0
5272	1147	"arg_1"	"char"	0	0	1	1
5273	1148	"res_0"	"int"	32	0	0	0
5274	1148	"arg_1"	"char"	0	0	1	1
5275	1149	"res_0"	"char"	0	0	0	0
5276	1149	"arg_1"	"char"	0	0	1	1
5277	1150	"res_0"	"int"	32	0	0	0
5278	1150	"arg_1"	"char"	0	0	1	1
5279	1150	"arg_2"	"char"	0	0	1	2
5280	1151	"res_0"	"int"	32	0	0	0
5281	1151	"arg_1"	"char"	0	0	1	1
5282	1151	"arg_2"	"char"	0	0	1	2
5283	1152	"res_0"	"int"	32	0	0	0
5284	1152	"arg_1"	"char"	0	0	1	1
5285	1152	"arg_2"	"char"	0	0	1	2
5286	1153	"res_0"	"double"	53	0	0	0
5287	1153	"arg_1"	"char"	0	0	1	1
5288	1153	"arg_2"	"char"	0	0	1	2
5289	1154	"res_0"	"char"	0	0	0	0
5290	1154	"arg_1"	"char"	0	0	1	1
5291	1155	"res_0"	"int"	32	0	0	0
5292	1155	"arg_1"	"char"	0	0	1	1
5293	1155	"arg_2"	"char"	0	0	1	2
5294	1156	"res_0"	"int"	32	0	0	0
5295	1156	"arg_1"	"char"	0	0	1	1
5296	1156	"arg_2"	"char"	0	0	1	2
5297	1156	"arg_3"	"int"	32	0	1	3
5298	1156	"arg_4"	"int"	32	0	1	4
5299	1156	"arg_5"	"int"	32	0	1	5
5300	1157	"res_0"	"tinyint"	8	0	0	0
5301	1157	"arg_1"	"varchar"	0	0	1	1
5302	1157	"arg_2"	"boolean"	1	0	1	2
5303	1158	"res_0"	"smallint"	16	0	0	0
5304	1158	"arg_1"	"varchar"	0	0	1	1
5305	1158	"arg_2"	"boolean"	1	0	1	2
5306	1159	"res_0"	"int"	32	0	0	0
5307	1159	"arg_1"	"varchar"	0	0	1	1
5308	1159	"arg_2"	"boolean"	1	0	1	2
5309	1160	"res_0"	"varchar"	0	0	0	0
5310	1160	"arg_1"	"varchar"	0	0	1	1
5311	1161	"res_0"	"int"	32	0	0	0
5312	1161	"arg_1"	"varchar"	0	0	1	1
5313	1161	"arg_2"	"varchar"	0	0	1	2
5314	1162	"res_0"	"int"	32	0	0	0
5315	1162	"arg_1"	"varchar"	0	0	1	1
5316	1162	"arg_2"	"varchar"	0	0	1	2
5317	1162	"arg_3"	"int"	32	0	1	3
5318	1163	"res_0"	"int"	32	0	0	0
5319	1163	"arg_1"	"varchar"	0	0	1	1
5320	1163	"arg_2"	"varchar"	0	0	1	2
5321	1164	"res_0"	"int"	32	0	0	0
5322	1164	"arg_1"	"varchar"	0	0	1	1
5323	1164	"arg_2"	"varchar"	0	0	1	2
5324	1164	"arg_3"	"int"	32	0	1	3
5325	1165	"res_0"	"varchar"	0	0	0	0
5326	1165	"arg_1"	"varchar"	0	0	1	1
5327	1165	"arg_2"	"varchar"	0	0	1	2
5328	1165	"arg_3"	"int"	32	0	1	3
5329	1166	"res_0"	"varchar"	0	0	0	0
5330	1166	"arg_1"	"varchar"	0	0	1	1
5331	1166	"arg_2"	"int"	32	0	1	2
5332	1167	"res_0"	"varchar"	0	0	0	0
5333	1167	"arg_1"	"varchar"	0	0	1	1
5334	1167	"arg_2"	"int"	32	0	1	2
5335	1167	"arg_3"	"int"	32	0	1	3
5336	1168	"res_0"	"varchar"	0	0	0	0
5337	1168	"arg_1"	"varchar"	0	0	1	1
5338	1168	"arg_2"	"int"	32	0	1	2
5339	1169	"res_0"	"varchar"	0	0	0	0
5340	1169	"arg_1"	"varchar"	0	0	1	1
5341	1169	"arg_2"	"int"	32	0	1	2
5342	1169	"arg_3"	"int"	32	0	1	3
5343	1170	"res_0"	"boolean"	1	0	0	0
5344	1170	"arg_1"	"varchar"	0	0	1	1
5345	1170	"arg_2"	"varchar"	0	0	1	2
5346	1171	"res_0"	"boolean"	1	0	0	0
5347	1171	"arg_1"	"varchar"	0	0	1	1
5348	1171	"arg_2"	"varchar"	0	0	1	2
5349	1171	"arg_3"	"varchar"	0	0	1	3
5350	1172	"res_0"	"boolean"	1	0	0	0
5351	1172	"arg_1"	"varchar"	0	0	1	1
5352	1172	"arg_2"	"varchar"	0	0	1	2
5353	1173	"res_0"	"boolean"	1	0	0	0
5354	1173	"arg_1"	"varchar"	0	0	1	1
5355	1173	"arg_2"	"varchar"	0	0	1	2
5356	1173	"arg_3"	"varchar"	0	0	1	3
5357	1174	"res_0"	"boolean"	1	0	0	0
5358	1174	"arg_1"	"varchar"	0	0	1	1
5359	1174	"arg_2"	"varchar"	0	0	1	2
5360	1175	"res_0"	"boolean"	1	0	0	0
5361	1175	"arg_1"	"varchar"	0	0	1	1
5362	1175	"arg_2"	"varchar"	0	0	1	2
5363	1175	"arg_3"	"varchar"	0	0	1	3
5364	1176	"res_0"	"boolean"	1	0	0	0
5365	1176	"arg_1"	"varchar"	0	0	1	1
5366	1176	"arg_2"	"varchar"	0	0	1	2
5367	1177	"res_0"	"boolean"	1	0	0	0
5368	1177	"arg_1"	"varchar"	0	0	1	1
5369	1177	"arg_2"	"varchar"	0	0	1	2
5370	1177	"arg_3"	"varchar"	0	0	1	3
5371	1178	"res_0"	"int"	32	0	0	0
5372	1178	"arg_1"	"varchar"	0	0	1	1
5373	1178	"arg_2"	"varchar"	0	0	1	2
5374	1179	"res_0"	"varchar"	0	0	0	0
5375	1179	"arg_1"	"varchar"	0	0	1	1
5376	1179	"arg_2"	"int"	32	0	1	2
5377	1180	"res_0"	"varchar"	0	0	0	0
5378	1180	"arg_1"	"varchar"	0	0	1	1
5379	1180	"arg_2"	"varchar"	0	0	1	2
5380	1181	"res_0"	"int"	32	0	0	0
5381	1181	"arg_1"	"varchar"	0	0	1	1
5382	1182	"res_0"	"varchar"	0	0	0	0
5383	1182	"arg_1"	"int"	32	0	1	1
5384	1183	"res_0"	"int"	32	0	0	0
5385	1183	"arg_1"	"varchar"	0	0	1	1
5386	1184	"res_0"	"varchar"	0	0	0	0
5387	1184	"arg_1"	"varchar"	0	0	1	1
5388	1184	"arg_2"	"int"	32	0	1	2
5389	1185	"res_0"	"varchar"	0	0	0	0
5390	1185	"arg_1"	"varchar"	0	0	1	1
5391	1185	"arg_2"	"int"	32	0	1	2
5392	1186	"res_0"	"varchar"	0	0	0	0
5393	1186	"arg_1"	"varchar"	0	0	1	1
5394	1187	"res_0"	"varchar"	0	0	0	0
5395	1187	"arg_1"	"varchar"	0	0	1	1
5396	1188	"res_0"	"varchar"	0	0	0	0
5397	1188	"arg_1"	"varchar"	0	0	1	1
5398	1189	"res_0"	"varchar"	0	0	0	0
5399	1189	"arg_1"	"varchar"	0	0	1	1
5400	1190	"res_0"	"varchar"	0	0	0	0
5401	1190	"arg_1"	"varchar"	0	0	1	1
5402	1191	"res_0"	"varchar"	0	0	0	0
5403	1191	"arg_1"	"varchar"	0	0	1	1
5404	1191	"arg_2"	"varchar"	0	0	1	2
5405	1192	"res_0"	"varchar"	0	0	0	0
5406	1192	"arg_1"	"varchar"	0	0	1	1
5407	1193	"res_0"	"varchar"	0	0	0	0
5408	1193	"arg_1"	"varchar"	0	0	1	1
5409	1193	"arg_2"	"varchar"	0	0	1	2
5410	1194	"res_0"	"varchar"	0	0	0	0
5411	1194	"arg_1"	"varchar"	0	0	1	1
5412	1195	"res_0"	"varchar"	0	0	0	0
5413	1195	"arg_1"	"varchar"	0	0	1	1
5414	1195	"arg_2"	"varchar"	0	0	1	2
5415	1196	"res_0"	"varchar"	0	0	0	0
5416	1196	"arg_1"	"varchar"	0	0	1	1
5417	1196	"arg_2"	"int"	32	0	1	2
5418	1197	"res_0"	"varchar"	0	0	0	0
5419	1197	"arg_1"	"varchar"	0	0	1	1
5420	1197	"arg_2"	"int"	32	0	1	2
5421	1197	"arg_3"	"varchar"	0	0	1	3
5422	1198	"res_0"	"varchar"	0	0	0	0
5423	1198	"arg_1"	"varchar"	0	0	1	1
5424	1198	"arg_2"	"int"	32	0	1	2
5425	1199	"res_0"	"varchar"	0	0	0	0
5426	1199	"arg_1"	"varchar"	0	0	1	1
5427	1199	"arg_2"	"int"	32	0	1	2
5428	1199	"arg_3"	"varchar"	0	0	1	3
5429	1200	"res_0"	"varchar"	0	0	0	0
5430	1200	"arg_1"	"varchar"	0	0	1	1
5431	1200	"arg_2"	"int"	32	0	1	2
5432	1200	"arg_3"	"int"	32	0	1	3
5433	1200	"arg_4"	"varchar"	0	0	1	4
5434	1201	"res_0"	"varchar"	0	0	0	0
5435	1201	"arg_1"	"varchar"	0	0	1	1
5436	1201	"arg_2"	"varchar"	0	0	1	2
5437	1201	"arg_3"	"varchar"	0	0	1	3
5438	1202	"res_0"	"varchar"	0	0	0	0
5439	1202	"arg_1"	"varchar"	0	0	1	1
5440	1202	"arg_2"	"int"	32	0	1	2
5441	1203	"res_0"	"varchar"	0	0	0	0
5442	1203	"arg_1"	"int"	32	0	1	1
5443	1204	"res_0"	"int"	32	0	0	0
5444	1204	"arg_1"	"varchar"	0	0	1	1
5445	1205	"res_0"	"int"	32	0	0	0
5446	1205	"arg_1"	"varchar"	0	0	1	1
5447	1206	"res_0"	"int"	32	0	0	0
5448	1206	"arg_1"	"varchar"	0	0	1	1
5449	1207	"res_0"	"varchar"	0	0	0	0
5450	1207	"arg_1"	"varchar"	0	0	1	1
5451	1208	"res_0"	"int"	32	0	0	0
5452	1208	"arg_1"	"varchar"	0	0	1	1
5453	1208	"arg_2"	"varchar"	0	0	1	2
5454	1209	"res_0"	"int"	32	0	0	0
5455	1209	"arg_1"	"varchar"	0	0	1	1
5456	1209	"arg_2"	"varchar"	0	0	1	2
5457	1210	"res_0"	"int"	32	0	0	0
5458	1210	"arg_1"	"varchar"	0	0	1	1
5459	1210	"arg_2"	"varchar"	0	0	1	2
5460	1211	"res_0"	"double"	53	0	0	0
5461	1211	"arg_1"	"varchar"	0	0	1	1
5462	1211	"arg_2"	"varchar"	0	0	1	2
5463	1212	"res_0"	"varchar"	0	0	0	0
5464	1212	"arg_1"	"varchar"	0	0	1	1
5465	1213	"res_0"	"int"	32	0	0	0
5466	1213	"arg_1"	"varchar"	0	0	1	1
5467	1213	"arg_2"	"varchar"	0	0	1	2
5468	1214	"res_0"	"int"	32	0	0	0
5469	1214	"arg_1"	"varchar"	0	0	1	1
5470	1214	"arg_2"	"varchar"	0	0	1	2
5471	1214	"arg_3"	"int"	32	0	1	3
5472	1214	"arg_4"	"int"	32	0	1	4
5473	1214	"arg_5"	"int"	32	0	1	5
5474	1215	"res_0"	"tinyint"	8	0	0	0
5475	1215	"arg_1"	"clob"	0	0	1	1
5476	1215	"arg_2"	"boolean"	1	0	1	2
5477	1216	"res_0"	"smallint"	16	0	0	0
5478	1216	"arg_1"	"clob"	0	0	1	1
5479	1216	"arg_2"	"boolean"	1	0	1	2
5480	1217	"res_0"	"int"	32	0	0	0
5481	1217	"arg_1"	"clob"	0	0	1	1
5482	1217	"arg_2"	"boolean"	1	0	1	2
5483	1218	"res_0"	"clob"	0	0	0	0
5484	1218	"arg_1"	"clob"	0	0	1	1
5485	1219	"res_0"	"int"	32	0	0	0
5486	1219	"arg_1"	"clob"	0	0	1	1
5487	1219	"arg_2"	"clob"	0	0	1	2
5488	1220	"res_0"	"int"	32	0	0	0
5489	1220	"arg_1"	"clob"	0	0	1	1
5490	1220	"arg_2"	"clob"	0	0	1	2
5491	1220	"arg_3"	"int"	32	0	1	3
5492	1221	"res_0"	"int"	32	0	0	0
5493	1221	"arg_1"	"clob"	0	0	1	1
5494	1221	"arg_2"	"clob"	0	0	1	2
5495	1222	"res_0"	"int"	32	0	0	0
5496	1222	"arg_1"	"clob"	0	0	1	1
5497	1222	"arg_2"	"clob"	0	0	1	2
5498	1222	"arg_3"	"int"	32	0	1	3
5499	1223	"res_0"	"clob"	0	0	0	0
5500	1223	"arg_1"	"clob"	0	0	1	1
5501	1223	"arg_2"	"clob"	0	0	1	2
5502	1223	"arg_3"	"int"	32	0	1	3
5503	1224	"res_0"	"clob"	0	0	0	0
5504	1224	"arg_1"	"clob"	0	0	1	1
5505	1224	"arg_2"	"int"	32	0	1	2
5506	1225	"res_0"	"clob"	0	0	0	0
5507	1225	"arg_1"	"clob"	0	0	1	1
5508	1225	"arg_2"	"int"	32	0	1	2
5509	1225	"arg_3"	"int"	32	0	1	3
5510	1226	"res_0"	"clob"	0	0	0	0
5511	1226	"arg_1"	"clob"	0	0	1	1
5512	1226	"arg_2"	"int"	32	0	1	2
5513	1227	"res_0"	"clob"	0	0	0	0
5514	1227	"arg_1"	"clob"	0	0	1	1
5515	1227	"arg_2"	"int"	32	0	1	2
5516	1227	"arg_3"	"int"	32	0	1	3
5517	1228	"res_0"	"boolean"	1	0	0	0
5518	1228	"arg_1"	"clob"	0	0	1	1
5519	1228	"arg_2"	"clob"	0	0	1	2
5520	1229	"res_0"	"boolean"	1	0	0	0
5521	1229	"arg_1"	"clob"	0	0	1	1
5522	1229	"arg_2"	"clob"	0	0	1	2
5523	1229	"arg_3"	"clob"	0	0	1	3
5524	1230	"res_0"	"boolean"	1	0	0	0
5525	1230	"arg_1"	"clob"	0	0	1	1
5526	1230	"arg_2"	"clob"	0	0	1	2
5527	1231	"res_0"	"boolean"	1	0	0	0
5528	1231	"arg_1"	"clob"	0	0	1	1
5529	1231	"arg_2"	"clob"	0	0	1	2
5530	1231	"arg_3"	"clob"	0	0	1	3
5531	1232	"res_0"	"boolean"	1	0	0	0
5532	1232	"arg_1"	"clob"	0	0	1	1
5533	1232	"arg_2"	"clob"	0	0	1	2
5534	1233	"res_0"	"boolean"	1	0	0	0
5535	1233	"arg_1"	"clob"	0	0	1	1
5536	1233	"arg_2"	"clob"	0	0	1	2
5537	1233	"arg_3"	"clob"	0	0	1	3
5538	1234	"res_0"	"boolean"	1	0	0	0
5539	1234	"arg_1"	"clob"	0	0	1	1
5540	1234	"arg_2"	"clob"	0	0	1	2
5541	1235	"res_0"	"boolean"	1	0	0	0
5542	1235	"arg_1"	"clob"	0	0	1	1
5543	1235	"arg_2"	"clob"	0	0	1	2
5544	1235	"arg_3"	"clob"	0	0	1	3
5545	1236	"res_0"	"int"	32	0	0	0
5546	1236	"arg_1"	"clob"	0	0	1	1
5547	1236	"arg_2"	"clob"	0	0	1	2
5548	1237	"res_0"	"clob"	0	0	0	0
5549	1237	"arg_1"	"clob"	0	0	1	1
5550	1237	"arg_2"	"int"	32	0	1	2
5551	1238	"res_0"	"clob"	0	0	0	0
5552	1238	"arg_1"	"clob"	0	0	1	1
5553	1238	"arg_2"	"clob"	0	0	1	2
5554	1239	"res_0"	"int"	32	0	0	0
5555	1239	"arg_1"	"clob"	0	0	1	1
5556	1240	"res_0"	"clob"	0	0	0	0
5557	1240	"arg_1"	"int"	32	0	1	1
5558	1241	"res_0"	"int"	32	0	0	0
5559	1241	"arg_1"	"clob"	0	0	1	1
5560	1242	"res_0"	"clob"	0	0	0	0
5561	1242	"arg_1"	"clob"	0	0	1	1
5562	1242	"arg_2"	"int"	32	0	1	2
5563	1243	"res_0"	"clob"	0	0	0	0
5564	1243	"arg_1"	"clob"	0	0	1	1
5565	1243	"arg_2"	"int"	32	0	1	2
5566	1244	"res_0"	"clob"	0	0	0	0
5567	1244	"arg_1"	"clob"	0	0	1	1
5568	1245	"res_0"	"clob"	0	0	0	0
5569	1245	"arg_1"	"clob"	0	0	1	1
5570	1246	"res_0"	"clob"	0	0	0	0
5571	1246	"arg_1"	"clob"	0	0	1	1
5572	1247	"res_0"	"clob"	0	0	0	0
5573	1247	"arg_1"	"clob"	0	0	1	1
5574	1248	"res_0"	"clob"	0	0	0	0
5575	1248	"arg_1"	"clob"	0	0	1	1
5576	1249	"res_0"	"clob"	0	0	0	0
5577	1249	"arg_1"	"clob"	0	0	1	1
5578	1249	"arg_2"	"clob"	0	0	1	2
5579	1250	"res_0"	"clob"	0	0	0	0
5580	1250	"arg_1"	"clob"	0	0	1	1
5581	1251	"res_0"	"clob"	0	0	0	0
5582	1251	"arg_1"	"clob"	0	0	1	1
5583	1251	"arg_2"	"clob"	0	0	1	2
5584	1252	"res_0"	"clob"	0	0	0	0
5585	1252	"arg_1"	"clob"	0	0	1	1
5586	1253	"res_0"	"clob"	0	0	0	0
5587	1253	"arg_1"	"clob"	0	0	1	1
5588	1253	"arg_2"	"clob"	0	0	1	2
5589	1254	"res_0"	"clob"	0	0	0	0
5590	1254	"arg_1"	"clob"	0	0	1	1
5591	1254	"arg_2"	"int"	32	0	1	2
5592	1255	"res_0"	"clob"	0	0	0	0
5593	1255	"arg_1"	"clob"	0	0	1	1
5594	1255	"arg_2"	"int"	32	0	1	2
5595	1255	"arg_3"	"clob"	0	0	1	3
5596	1256	"res_0"	"clob"	0	0	0	0
5597	1256	"arg_1"	"clob"	0	0	1	1
5598	1256	"arg_2"	"int"	32	0	1	2
5599	1257	"res_0"	"clob"	0	0	0	0
5600	1257	"arg_1"	"clob"	0	0	1	1
5601	1257	"arg_2"	"int"	32	0	1	2
5602	1257	"arg_3"	"clob"	0	0	1	3
5603	1258	"res_0"	"clob"	0	0	0	0
5604	1258	"arg_1"	"clob"	0	0	1	1
5605	1258	"arg_2"	"int"	32	0	1	2
5606	1258	"arg_3"	"int"	32	0	1	3
5607	1258	"arg_4"	"clob"	0	0	1	4
5608	1259	"res_0"	"clob"	0	0	0	0
5609	1259	"arg_1"	"clob"	0	0	1	1
5610	1259	"arg_2"	"clob"	0	0	1	2
5611	1259	"arg_3"	"clob"	0	0	1	3
5612	1260	"res_0"	"clob"	0	0	0	0
5613	1260	"arg_1"	"clob"	0	0	1	1
5614	1260	"arg_2"	"int"	32	0	1	2
5615	1261	"res_0"	"clob"	0	0	0	0
5616	1261	"arg_1"	"int"	32	0	1	1
5617	1262	"res_0"	"int"	32	0	0	0
5618	1262	"arg_1"	"clob"	0	0	1	1
5619	1263	"res_0"	"int"	32	0	0	0
5620	1263	"arg_1"	"clob"	0	0	1	1
5621	1264	"res_0"	"int"	32	0	0	0
5622	1264	"arg_1"	"clob"	0	0	1	1
5623	1265	"res_0"	"clob"	0	0	0	0
5624	1265	"arg_1"	"clob"	0	0	1	1
5625	1266	"res_0"	"int"	32	0	0	0
5626	1266	"arg_1"	"clob"	0	0	1	1
5627	1266	"arg_2"	"clob"	0	0	1	2
5628	1267	"res_0"	"int"	32	0	0	0
5629	1267	"arg_1"	"clob"	0	0	1	1
5630	1267	"arg_2"	"clob"	0	0	1	2
5631	1268	"res_0"	"int"	32	0	0	0
5632	1268	"arg_1"	"clob"	0	0	1	1
5633	1268	"arg_2"	"clob"	0	0	1	2
5634	1269	"res_0"	"double"	53	0	0	0
5635	1269	"arg_1"	"clob"	0	0	1	1
5636	1269	"arg_2"	"clob"	0	0	1	2
5637	1270	"res_0"	"clob"	0	0	0	0
5638	1270	"arg_1"	"clob"	0	0	1	1
5639	1271	"res_0"	"int"	32	0	0	0
5640	1271	"arg_1"	"clob"	0	0	1	1
5641	1271	"arg_2"	"clob"	0	0	1	2
5642	1272	"res_0"	"int"	32	0	0	0
5643	1272	"arg_1"	"clob"	0	0	1	1
5644	1272	"arg_2"	"clob"	0	0	1	2
5645	1272	"arg_3"	"int"	32	0	1	3
5646	1272	"arg_4"	"int"	32	0	1	4
5647	1272	"arg_5"	"int"	32	0	1	5
5648	1273	"res_0"	"table"	0	0	0	0
5649	1273	"arg_1"	"varchar"	0	0	1	1
5650	1273	"arg_2"	"varchar"	0	0	1	2
5651	1273	"arg_3"	"varchar"	0	0	1	3
5652	1273	"arg_4"	"varchar"	0	0	1	4
5653	1273	"arg_5"	"varchar"	0	0	1	5
5654	1273	"arg_6"	"varchar"	0	0	1	6
5655	1273	"arg_7"	"bigint"	64	0	1	7
5656	1273	"arg_8"	"bigint"	64	0	1	8
5657	1273	"arg_9"	"int"	32	0	1	9
5658	1274	"res_0"	"table"	0	0	0	0
5659	1274	"arg_1"	"varchar"	0	0	1	1
5660	1274	"arg_2"	"varchar"	0	0	1	2
5661	60	"res"	"boolean"	1	0	0	0
5662	60	"arg"	"oid"	63	0	1	1
5663	72	"res"	"any"	0	0	0	0
5664	72	"arg"	"any"	0	0	1	1
5665	73	"res"	"boolean"	1	0	0	0
5666	73	"arg"	"any"	0	0	1	1
5667	74	"res"	"boolean"	1	0	0	0
5668	74	"arg"	"any"	0	0	1	1
5669	79	"res"	"any"	0	0	0	0
5670	79	"arg"	"any"	0	0	1	1
5671	80	"res"	"any"	0	0	0	0
5672	80	"arg"	"any"	0	0	1	1
5673	84	"res"	"bigint"	64	0	0	0
5674	84	"arg"	"tinyint"	8	0	1	1
5675	85	"res"	"bigint"	64	0	0	0
5676	85	"arg"	"smallint"	16	0	1	1
5677	86	"res"	"bigint"	64	0	0	0
5678	86	"arg"	"int"	32	0	1	1
5679	87	"res"	"bigint"	64	0	0	0
5680	87	"arg"	"bigint"	64	0	1	1
5681	88	"res"	"wrd"	64	0	0	0
5682	88	"arg"	"wrd"	64	0	1	1
5683	89	"res"	"decimal"	19	0	0	0
5684	89	"arg"	"decimal"	2	0	1	1
5685	90	"res"	"decimal"	19	0	0	0
5686	90	"arg"	"decimal"	4	0	1	1
5687	91	"res"	"decimal"	19	0	0	0
5688	91	"arg"	"decimal"	9	0	1	1
5689	92	"res"	"decimal"	19	0	0	0
5690	92	"arg"	"decimal"	19	0	1	1
5691	93	"res"	"bigint"	64	0	0	0
5692	93	"arg"	"tinyint"	8	0	1	1
5693	94	"res"	"bigint"	64	0	0	0
5694	94	"arg"	"smallint"	16	0	1	1
5695	95	"res"	"bigint"	64	0	0	0
5696	95	"arg"	"int"	32	0	1	1
5697	96	"res"	"bigint"	64	0	0	0
5698	96	"arg"	"bigint"	64	0	1	1
5699	97	"res"	"decimal"	19	0	0	0
5700	97	"arg"	"decimal"	2	0	1	1
5701	98	"res"	"decimal"	19	0	0	0
5702	98	"arg"	"decimal"	4	0	1	1
5703	99	"res"	"decimal"	19	0	0	0
5704	99	"arg"	"decimal"	9	0	1	1
5705	100	"res"	"decimal"	19	0	0	0
5706	100	"arg"	"decimal"	19	0	1	1
5707	113	"res"	"real"	24	0	0	0
5708	113	"arg"	"real"	24	0	1	1
5709	114	"res"	"real"	24	0	0	0
5710	114	"arg"	"real"	24	0	1	1
5711	115	"res"	"double"	53	0	0	0
5712	115	"arg"	"double"	53	0	1	1
5713	116	"res"	"double"	53	0	0	0
5714	116	"arg"	"double"	53	0	1	1
5715	117	"res"	"month_interval"	32	0	0	0
5716	117	"arg"	"month_interval"	32	0	1	1
5717	118	"res"	"sec_interval"	13	0	0	0
5718	118	"arg"	"sec_interval"	13	0	1	1
5719	119	"res"	"double"	53	0	0	0
5720	119	"arg"	"double"	53	0	1	1
5721	120	"res"	"wrd"	64	0	0	0
5722	121	"res"	"wrd"	64	0	0	0
5745	5744	"name"	"varchar"	1024	0	0	0
5746	5744	"value"	"varchar"	2048	0	0	1
5748	5747	"name"	"varchar"	1024	0	0	0
5754	5753	"name"	"varchar"	2048	0	0	0
5774	5773	"val"	"clob"	0	0	1	0
5775	5773	"pat"	"clob"	0	0	1	1
5776	5773	"esc"	"clob"	0	0	1	2
5779	5778	"val"	"clob"	0	0	1	0
5780	5778	"pat"	"clob"	0	0	1	1
5781	5778	"esc"	"clob"	0	0	1	2
5784	5783	"val"	"clob"	0	0	1	0
5785	5783	"pat"	"clob"	0	0	1	1
5788	5787	"val"	"clob"	0	0	1	0
5789	5787	"pat"	"clob"	0	0	1	1
5792	5791	"result"	"double"	53	0	0	0
5793	5791	"r"	"double"	53	0	1	1
5796	5795	"result"	"double"	53	0	0	0
5797	5795	"d"	"double"	53	0	1	1
5803	5802	"result"	"clob"	0	0	0	0
5804	5802	"theurl"	"url"	0	0	1	1
5807	5806	"result"	"clob"	0	0	0	0
5808	5806	"theurl"	"url"	0	0	1	1
5811	5810	"result"	"clob"	0	0	0	0
5812	5810	"theurl"	"url"	0	0	1	1
5815	5814	"result"	"clob"	0	0	0	0
5816	5814	"theurl"	"url"	0	0	1	1
5819	5818	"result"	"clob"	0	0	0	0
5820	5818	"theurl"	"url"	0	0	1	1
5823	5822	"result"	"clob"	0	0	0	0
5824	5822	"theurl"	"url"	0	0	1	1
5827	5826	"result"	"clob"	0	0	0	0
5828	5826	"theurl"	"url"	0	0	1	1
5831	5830	"result"	"clob"	0	0	0	0
5832	5830	"theurl"	"url"	0	0	1	1
5835	5834	"result"	"clob"	0	0	0	0
5836	5834	"theurl"	"url"	0	0	1	1
5839	5838	"result"	"clob"	0	0	0	0
5840	5838	"theurl"	"url"	0	0	1	1
5843	5842	"result"	"clob"	0	0	0	0
5844	5842	"theurl"	"url"	0	0	1	1
5847	5846	"result"	"clob"	0	0	0	0
5848	5846	"theurl"	"url"	0	0	1	1
5851	5850	"result"	"clob"	0	0	0	0
5852	5850	"theurl"	"url"	0	0	1	1
5855	5854	"result"	"boolean"	1	0	0	0
5856	5854	"theurl"	"url"	0	0	1	1
5859	5858	"result"	"url"	0	0	0	0
5860	5858	"protocol"	"clob"	0	0	1	1
5861	5858	"hostname"	"clob"	0	0	1	2
5862	5858	"port"	"int"	32	0	1	3
5863	5858	"file"	"clob"	0	0	1	4
5866	5865	"result"	"url"	0	0	0	0
5867	5865	"protocol"	"clob"	0	0	1	1
5868	5865	"hostname"	"clob"	0	0	1	2
5869	5865	"file"	"clob"	0	0	1	3
5872	5871	"result"	"date"	0	0	0	0
5873	5871	"s"	"clob"	0	0	1	1
5874	5871	"format"	"clob"	0	0	1	2
5877	5876	"result"	"clob"	0	0	0	0
5878	5876	"d"	"date"	0	0	1	1
5879	5876	"format"	"clob"	0	0	1	2
5882	5881	"result"	"time"	1	0	0	0
5883	5881	"s"	"clob"	0	0	1	1
5884	5881	"format"	"clob"	0	0	1	2
5887	5886	"result"	"clob"	0	0	0	0
5888	5886	"d"	"time"	1	0	1	1
5889	5886	"format"	"clob"	0	0	1	2
5892	5891	"result"	"timestamp"	7	0	0	0
5893	5891	"s"	"clob"	0	0	1	1
5894	5891	"format"	"clob"	0	0	1	2
5897	5896	"result"	"clob"	0	0	0	0
5898	5896	"d"	"timestamp"	7	0	1	1
5899	5896	"format"	"clob"	0	0	1	2
5903	5902	"result"	"inet"	0	0	0	0
5904	5902	"p"	"inet"	0	0	1	1
5907	5906	"result"	"clob"	0	0	0	0
5908	5906	"p"	"inet"	0	0	1	1
5911	5910	"result"	"int"	32	0	0	0
5912	5910	"p"	"inet"	0	0	1	1
5915	5914	"result"	"inet"	0	0	0	0
5916	5914	"p"	"inet"	0	0	1	1
5917	5914	"mask"	"int"	32	0	1	2
5920	5919	"result"	"inet"	0	0	0	0
5921	5919	"p"	"inet"	0	0	1	1
5924	5923	"result"	"inet"	0	0	0	0
5925	5923	"p"	"inet"	0	0	1	1
5928	5927	"result"	"inet"	0	0	0	0
5929	5927	"p"	"inet"	0	0	1	1
5932	5931	"result"	"clob"	0	0	0	0
5933	5931	"p"	"inet"	0	0	1	1
5936	5935	"result"	"clob"	0	0	0	0
5937	5935	"p"	"inet"	0	0	1	1
5940	5939	"result"	"boolean"	1	0	0	0
5941	5939	"i1"	"inet"	0	0	1	1
5942	5939	"i2"	"inet"	0	0	1	2
5945	5944	"result"	"boolean"	1	0	0	0
5946	5944	"i1"	"inet"	0	0	1	1
5947	5944	"i2"	"inet"	0	0	1	2
5950	5949	"result"	"boolean"	1	0	0	0
5951	5949	"i1"	"inet"	0	0	1	1
5952	5949	"i2"	"inet"	0	0	1	2
5955	5954	"result"	"boolean"	1	0	0	0
5956	5954	"i1"	"inet"	0	0	1	1
5957	5954	"i2"	"inet"	0	0	1	2
5960	5959	"id"	"oid"	63	0	0	0
5961	5959	"owner"	"clob"	0	0	0	1
5962	5959	"defined"	"timestamp"	7	0	0	2
5963	5959	"query"	"clob"	0	0	0	3
5964	5959	"pipe"	"clob"	0	0	0	4
5965	5959	"plan"	"clob"	0	0	0	5
5966	5959	"mal"	"int"	32	0	0	6
5967	5959	"optimize"	"bigint"	64	0	0	7
5970	5969	"id"	"oid"	63	0	0	0
5971	5969	"start"	"timestamp"	7	0	0	1
5972	5969	"stop"	"timestamp"	7	0	0	2
5973	5969	"arguments"	"clob"	0	0	0	3
5974	5969	"tuples"	"wrd"	64	0	0	4
5975	5969	"run"	"bigint"	64	0	0	5
5976	5969	"ship"	"bigint"	64	0	0	6
5977	5969	"cpu"	"int"	32	0	0	7
5978	5969	"io"	"int"	32	0	0	8
6024	6023	"threshold"	"smallint"	16	0	1	0
6029	6028	"event"	"int"	32	0	0	0
6030	6028	"clk"	"varchar"	20	0	0	1
6031	6028	"pc"	"varchar"	50	0	0	2
6032	6028	"thread"	"int"	32	0	0	3
6033	6028	"ticks"	"bigint"	64	0	0	4
6034	6028	"rrsmb"	"bigint"	64	0	0	5
6035	6028	"vmmb"	"bigint"	64	0	0	6
6036	6028	"reads"	"bigint"	64	0	0	7
6037	6028	"writes"	"bigint"	64	0	0	8
6038	6028	"minflt"	"bigint"	64	0	0	9
6039	6028	"majflt"	"bigint"	64	0	0	10
6040	6028	"nvcsw"	"bigint"	64	0	0	11
6041	6028	"stmt"	"clob"	0	0	0	12
6059	6058	"result"	"timestamp"	7	0	0	0
6060	6058	"sec"	"bigint"	64	0	1	1
6063	6062	"result"	"timestamp"	7	0	0	0
6064	6062	"sec"	"int"	32	0	1	1
6067	6066	"result"	"int"	32	0	0	0
6068	6066	"ts"	"timestamp"	7	0	1	1
6071	6070	"result"	"int"	32	0	0	0
6072	6070	"ts"	"timestamptz"	7	0	1	1
6075	6074	"sys"	"clob"	0	0	1	0
6076	6074	"tab"	"clob"	0	0	1	1
6079	6078	"sys"	"clob"	0	0	1	0
6080	6078	"tab"	"clob"	0	0	1	1
6083	6082	"sys"	"clob"	0	0	1	0
6084	6082	"tab"	"clob"	0	0	1	1
6087	6086	"sch"	"varchar"	100	0	0	0
6088	6086	"usr"	"varchar"	100	0	0	1
6089	6086	"dep_type"	"varchar"	32	0	0	2
6092	6091	"sch"	"varchar"	100	0	0	0
6093	6091	"usr"	"varchar"	100	0	0	1
6094	6091	"dep_type"	"varchar"	32	0	0	2
6097	6096	"sch"	"varchar"	100	0	0	0
6098	6096	"usr"	"varchar"	100	0	0	1
6099	6096	"dep_type"	"varchar"	32	0	0	2
6102	6101	"sch"	"varchar"	100	0	0	0
6103	6101	"usr"	"varchar"	100	0	0	1
6104	6101	"dep_type"	"varchar"	32	0	0	2
6107	6106	"sch"	"varchar"	100	0	0	0
6108	6106	"usr"	"varchar"	100	0	0	1
6109	6106	"dep_type"	"varchar"	32	0	0	2
6112	6111	"sch"	"varchar"	100	0	0	0
6113	6111	"usr"	"varchar"	100	0	0	1
6114	6111	"dep_type"	"varchar"	32	0	0	2
6117	6116	"sch"	"varchar"	100	0	0	0
6118	6116	"usr"	"varchar"	100	0	0	1
6119	6116	"dep_type"	"varchar"	32	0	0	2
6122	6121	"sch"	"varchar"	100	0	0	0
6123	6121	"usr"	"varchar"	100	0	0	1
6124	6121	"dep_type"	"varchar"	32	0	0	2
6127	6126	"sch"	"varchar"	100	0	0	0
6128	6126	"usr"	"varchar"	100	0	0	1
6129	6126	"dep_type"	"varchar"	32	0	0	2
6132	6131	"sch"	"varchar"	100	0	0	0
6133	6131	"usr"	"varchar"	100	0	0	1
6134	6131	"dep_type"	"varchar"	32	0	0	2
6137	6136	"sch"	"varchar"	100	0	0	0
6138	6136	"usr"	"varchar"	100	0	0	1
6139	6136	"dep_type"	"varchar"	32	0	0	2
6142	6141	"sch"	"varchar"	100	0	0	0
6143	6141	"usr"	"varchar"	100	0	0	1
6144	6141	"dep_type"	"varchar"	32	0	0	2
6147	6146	"sch"	"varchar"	100	0	0	0
6148	6146	"usr"	"varchar"	100	0	0	1
6149	6146	"dep_type"	"varchar"	32	0	0	2
6152	6151	"sch"	"varchar"	100	0	0	0
6153	6151	"usr"	"varchar"	100	0	0	1
6154	6151	"dep_type"	"varchar"	32	0	0	2
6157	6156	"sch"	"varchar"	100	0	0	0
6158	6156	"usr"	"varchar"	100	0	0	1
6159	6156	"dep_type"	"varchar"	32	0	0	2
6162	6161	"sch"	"varchar"	100	0	0	0
6163	6161	"usr"	"varchar"	100	0	0	1
6164	6161	"dep_type"	"varchar"	32	0	0	2
6167	6166	"sch"	"varchar"	100	0	0	0
6168	6166	"usr"	"varchar"	100	0	0	1
6169	6166	"dep_type"	"varchar"	32	0	0	2
6172	6171	"result"	"clob"	0	0	0	0
6173	6171	"username"	"clob"	0	0	1	1
6176	6175	"user"	"clob"	0	0	0	0
6177	6175	"login"	"timestamp"	7	0	0	1
6178	6175	"sessiontimeout"	"bigint"	64	0	0	2
6179	6175	"lastcommand"	"timestamp"	7	0	0	3
6180	6175	"querytimeout"	"bigint"	64	0	0	4
6181	6175	"active"	"boolean"	1	0	0	5
6192	6191	"delay"	"tinyint"	8	0	1	0
6195	6194	"delay"	"tinyint"	8	0	1	0
6196	6194	"force"	"boolean"	1	0	1	1
6199	6198	"query"	"bigint"	64	0	1	0
6202	6201	"query"	"bigint"	64	0	1	0
6203	6201	"session"	"bigint"	64	0	1	1
6206	6205	"timeout"	"bigint"	64	0	1	0
6209	6208	"result"	"varchar"	32	0	0	0
6210	6208	"s1"	"varchar"	32	0	1	1
6211	6208	"st"	"int"	32	0	1	2
6212	6208	"len"	"int"	32	0	1	3
6213	6208	"s3"	"varchar"	32	0	1	4
6216	6215	"result"	"double"	53	0	0	0
6217	6215	"num"	"double"	53	0	1	1
6218	6215	"prc"	"int"	32	0	1	2
6221	6220	"result"	"double"	53	0	0	0
6222	6220	"num"	"double"	53	0	1	1
6223	6220	"prc"	"int"	32	0	1	2
6224	6220	"truncat"	"int"	32	0	1	3
6227	6226	"result"	"clob"	0	0	0	0
6228	6226	"num"	"double"	53	0	1	1
6229	6226	"prc"	"int"	32	0	1	2
6230	6226	"truncat"	"int"	32	0	1	3
6233	6232	"result"	"double"	53	0	0	0
6234	6232	"pdec"	"double"	53	0	1	1
6235	6232	"pradius"	"double"	53	0	1	2
6238	6237	"result"	"oid"	63	0	0	0
6239	6237	"x"	"int"	32	0	1	1
6240	6237	"y"	"int"	32	0	1	2
6243	6242	"result"	"int"	32	0	0	0
6244	6242	"z"	"oid"	63	0	1	1
6247	6246	"result"	"int"	32	0	0	0
6248	6246	"z"	"oid"	63	0	1	1
6251	6250	"rewrite"	"clob"	0	0	0	0
6252	6250	"count"	"int"	32	0	0	1
6255	6254	"query"	"clob"	0	0	0	0
6256	6254	"count"	"int"	32	0	0	1
6259	6258	"filename"	"clob"	0	0	1	0
6262	6261	"name"	"clob"	0	0	0	0
6263	6261	"def"	"clob"	0	0	0	1
6264	6261	"status"	"clob"	0	0	0	2
6272	6271	"name"	"clob"	0	0	0	0
6273	6271	"value"	"clob"	0	0	0	1
6280	6279	"id"	"int"	32	0	0	0
6281	6279	"name"	"clob"	0	0	0	1
6282	6279	"ttype"	"clob"	0	0	0	2
6283	6279	"count"	"bigint"	64	0	0	3
6284	6279	"refcnt"	"int"	32	0	0	4
6285	6279	"lrefcnt"	"int"	32	0	0	5
6286	6279	"location"	"clob"	0	0	0	6
6287	6279	"heat"	"int"	32	0	0	7
6288	6279	"dirty"	"clob"	0	0	0	8
6289	6279	"status"	"clob"	0	0	0	9
6290	6279	"kind"	"clob"	0	0	0	10
6293	6292	"signature"	"clob"	0	0	0	0
6294	6292	"address"	"clob"	0	0	0	1
6295	6292	"comment"	"clob"	0	0	0	2
6298	6297	"ra_stmt"	"clob"	0	0	1	0
6299	6297	"opt"	"boolean"	1	0	1	1
6304	6303	"result"	"int"	32	0	0	0
6305	6303	"debug"	"int"	32	0	1	1
6308	6307	"qtag"	"bigint"	64	0	0	0
6309	6307	"user"	"clob"	0	0	0	1
6310	6307	"started"	"timestamp"	7	0	0	2
6311	6307	"estimate"	"timestamp"	7	0	0	3
6312	6307	"progress"	"int"	32	0	0	4
6313	6307	"status"	"clob"	0	0	0	5
6314	6307	"tag"	"oid"	63	0	0	6
6315	6307	"query"	"clob"	0	0	0	7
6328	6327	"tag"	"int"	32	0	1	0
6331	6330	"tag"	"int"	32	0	1	0
6334	6333	"tag"	"int"	32	0	1	0
6337	6336	"tag"	"bigint"	64	0	1	0
6340	6339	"tag"	"bigint"	64	0	1	0
6343	6342	"tag"	"bigint"	64	0	1	0
6346	6345	"rowid"	"bigint"	64	0	0	0
6347	6345	"fldid"	"int"	32	0	0	1
6348	6345	"message"	"clob"	0	0	0	2
6349	6345	"input"	"clob"	0	0	0	3
6360	6359	"result"	"double"	53	0	0	0
6361	6359	"val"	"tinyint"	8	0	1	1
6364	6363	"result"	"double"	53	0	0	0
6365	6363	"val"	"smallint"	16	0	1	1
6368	6367	"result"	"double"	53	0	0	0
6369	6367	"val"	"int"	32	0	1	1
6372	6371	"result"	"double"	53	0	0	0
6373	6371	"val"	"wrd"	64	0	1	1
6376	6375	"result"	"double"	53	0	0	0
6377	6375	"val"	"bigint"	64	0	1	1
6380	6379	"result"	"double"	53	0	0	0
6381	6379	"val"	"real"	24	0	1	1
6384	6383	"result"	"double"	53	0	0	0
6385	6383	"val"	"double"	53	0	1	1
6388	6387	"result"	"double"	53	0	0	0
6389	6387	"val"	"date"	0	0	1	1
6392	6391	"result"	"double"	53	0	0	0
6393	6391	"val"	"time"	1	0	1	1
6396	6395	"result"	"double"	53	0	0	0
6397	6395	"val"	"timestamp"	7	0	1	1
6400	6399	"result"	"double"	53	0	0	0
6401	6399	"val"	"tinyint"	8	0	1	1
6404	6403	"result"	"double"	53	0	0	0
6405	6403	"val"	"smallint"	16	0	1	1
6408	6407	"result"	"double"	53	0	0	0
6409	6407	"val"	"int"	32	0	1	1
6412	6411	"result"	"double"	53	0	0	0
6413	6411	"val"	"wrd"	64	0	1	1
6416	6415	"result"	"double"	53	0	0	0
6417	6415	"val"	"bigint"	64	0	1	1
6420	6419	"result"	"double"	53	0	0	0
6421	6419	"val"	"real"	24	0	1	1
6424	6423	"result"	"double"	53	0	0	0
6425	6423	"val"	"double"	53	0	1	1
6428	6427	"result"	"double"	53	0	0	0
6429	6427	"val"	"date"	0	0	1	1
6432	6431	"result"	"double"	53	0	0	0
6433	6431	"val"	"time"	1	0	1	1
6436	6435	"result"	"double"	53	0	0	0
6437	6435	"val"	"timestamp"	7	0	1	1
6440	6439	"result"	"double"	53	0	0	0
6441	6439	"val"	"tinyint"	8	0	1	1
6444	6443	"result"	"double"	53	0	0	0
6445	6443	"val"	"smallint"	16	0	1	1
6448	6447	"result"	"double"	53	0	0	0
6449	6447	"val"	"int"	32	0	1	1
6452	6451	"result"	"double"	53	0	0	0
6453	6451	"val"	"wrd"	64	0	1	1
6456	6455	"result"	"double"	53	0	0	0
6457	6455	"val"	"bigint"	64	0	1	1
6460	6459	"result"	"double"	53	0	0	0
6461	6459	"val"	"real"	24	0	1	1
6464	6463	"result"	"double"	53	0	0	0
6465	6463	"val"	"double"	53	0	1	1
6468	6467	"result"	"double"	53	0	0	0
6469	6467	"val"	"date"	0	0	1	1
6472	6471	"result"	"double"	53	0	0	0
6473	6471	"val"	"time"	1	0	1	1
6476	6475	"result"	"double"	53	0	0	0
6477	6475	"val"	"timestamp"	7	0	1	1
6480	6479	"result"	"double"	53	0	0	0
6481	6479	"val"	"tinyint"	8	0	1	1
6484	6483	"result"	"double"	53	0	0	0
6485	6483	"val"	"smallint"	16	0	1	1
6488	6487	"result"	"double"	53	0	0	0
6489	6487	"val"	"int"	32	0	1	1
6492	6491	"result"	"double"	53	0	0	0
6493	6491	"val"	"wrd"	64	0	1	1
6496	6495	"result"	"double"	53	0	0	0
6497	6495	"val"	"bigint"	64	0	1	1
6500	6499	"result"	"double"	53	0	0	0
6501	6499	"val"	"real"	24	0	1	1
6504	6503	"result"	"double"	53	0	0	0
6505	6503	"val"	"double"	53	0	1	1
6508	6507	"result"	"double"	53	0	0	0
6509	6507	"val"	"date"	0	0	1	1
6512	6511	"result"	"double"	53	0	0	0
6513	6511	"val"	"time"	1	0	1	1
6516	6515	"result"	"double"	53	0	0	0
6517	6515	"val"	"timestamp"	7	0	1	1
6520	6519	"result"	"tinyint"	8	0	0	0
6521	6519	"val"	"tinyint"	8	0	1	1
6524	6523	"result"	"smallint"	16	0	0	0
6525	6523	"val"	"smallint"	16	0	1	1
6528	6527	"result"	"int"	32	0	0	0
6529	6527	"val"	"int"	32	0	1	1
6532	6531	"result"	"wrd"	64	0	0	0
6533	6531	"val"	"wrd"	64	0	1	1
6536	6535	"result"	"bigint"	64	0	0	0
6537	6535	"val"	"bigint"	64	0	1	1
6540	6539	"result"	"decimal"	18	3	0	0
6541	6539	"val"	"decimal"	18	3	1	1
6544	6543	"result"	"real"	24	0	0	0
6545	6543	"val"	"real"	24	0	1	1
6548	6547	"result"	"double"	53	0	0	0
6549	6547	"val"	"double"	53	0	1	1
6552	6551	"result"	"date"	0	0	0	0
6553	6551	"val"	"date"	0	0	1	1
6556	6555	"result"	"time"	1	0	0	0
6557	6555	"val"	"time"	1	0	1	1
6560	6559	"result"	"timestamp"	7	0	0	0
6561	6559	"val"	"timestamp"	7	0	1	1
6564	6563	"result"	"tinyint"	8	0	0	0
6565	6563	"val"	"tinyint"	8	0	1	1
6566	6563	"q"	"double"	53	0	1	2
6569	6568	"result"	"smallint"	16	0	0	0
6570	6568	"val"	"smallint"	16	0	1	1
6571	6568	"q"	"double"	53	0	1	2
6574	6573	"result"	"int"	32	0	0	0
6575	6573	"val"	"int"	32	0	1	1
6576	6573	"q"	"double"	53	0	1	2
6579	6578	"result"	"wrd"	64	0	0	0
6580	6578	"val"	"wrd"	64	0	1	1
6581	6578	"q"	"double"	53	0	1	2
6584	6583	"result"	"bigint"	64	0	0	0
6585	6583	"val"	"bigint"	64	0	1	1
6586	6583	"q"	"double"	53	0	1	2
6589	6588	"result"	"decimal"	18	3	0	0
6590	6588	"val"	"decimal"	18	3	1	1
6591	6588	"q"	"double"	53	0	1	2
6594	6593	"result"	"real"	24	0	0	0
6595	6593	"val"	"real"	24	0	1	1
6596	6593	"q"	"double"	53	0	1	2
6599	6598	"result"	"double"	53	0	0	0
6600	6598	"val"	"double"	53	0	1	1
6601	6598	"q"	"double"	53	0	1	2
6604	6603	"result"	"date"	0	0	0	0
6605	6603	"val"	"date"	0	0	1	1
6606	6603	"q"	"double"	53	0	1	2
6609	6608	"result"	"time"	1	0	0	0
6610	6608	"val"	"time"	1	0	1	1
6611	6608	"q"	"double"	53	0	1	2
6614	6613	"result"	"timestamp"	7	0	0	0
6615	6613	"val"	"timestamp"	7	0	1	1
6616	6613	"q"	"double"	53	0	1	2
6619	6618	"result"	"tinyint"	8	0	0	0
6620	6618	"e1"	"tinyint"	8	0	1	1
6621	6618	"e2"	"tinyint"	8	0	1	2
6624	6623	"result"	"smallint"	16	0	0	0
6625	6623	"e1"	"smallint"	16	0	1	1
6626	6623	"e2"	"smallint"	16	0	1	2
6629	6628	"result"	"int"	32	0	0	0
6630	6628	"e1"	"int"	32	0	1	1
6631	6628	"e2"	"int"	32	0	1	2
6634	6633	"result"	"wrd"	64	0	0	0
6635	6633	"e1"	"wrd"	64	0	1	1
6636	6633	"e2"	"wrd"	64	0	1	2
6639	6638	"result"	"bigint"	64	0	0	0
6640	6638	"e1"	"bigint"	64	0	1	1
6641	6638	"e2"	"bigint"	64	0	1	2
6644	6643	"result"	"real"	24	0	0	0
6645	6643	"e1"	"real"	24	0	1	1
6646	6643	"e2"	"real"	24	0	1	2
6649	6648	"result"	"double"	53	0	0	0
6650	6648	"e1"	"double"	53	0	1	1
6651	6648	"e2"	"double"	53	0	1	2
6654	6653	"result"	"int"	32	0	0	0
6655	6653	"info"	"int"	32	0	1	1
6658	6657	"result"	"int"	32	0	0	0
6659	6657	"info"	"int"	32	0	1	1
6662	6661	"result"	"clob"	0	0	0	0
6663	6661	"info"	"int"	32	0	1	1
6664	6661	"format"	"int"	32	0	1	2
6685	6684	"result"	"mbr"	0	0	0	0
6686	6684	"geom"	"geometry"	0	0	1	1
6689	6688	"result"	"boolean"	1	0	0	0
6690	6688	"box1"	"mbr"	0	0	1	1
6691	6688	"box2"	"mbr"	0	0	1	2
6694	6693	"result"	"boolean"	1	0	0	0
6695	6693	"box1"	"mbr"	0	0	1	1
6696	6693	"box2"	"mbr"	0	0	1	2
6699	6698	"result"	"boolean"	1	0	0	0
6700	6698	"box1"	"mbr"	0	0	1	1
6701	6698	"box2"	"mbr"	0	0	1	2
6704	6703	"result"	"double"	53	0	0	0
6705	6703	"box1"	"mbr"	0	0	1	1
6706	6703	"box2"	"mbr"	0	0	1	2
6709	6708	"result"	"geometry"	0	0	0	0
6710	6708	"wkt"	"clob"	0	0	1	1
6713	6712	"result"	"geometry"	0	0	0	0
6714	6712	"geom"	"clob"	0	0	1	1
6717	6716	"result"	"clob"	0	0	0	0
6718	6716	"geom"	"geometry"	0	0	1	1
6721	6720	"result"	"clob"	0	0	0	0
6722	6720	"geom"	"geometry"	0	0	1	1
6725	6724	"result"	"int"	32	0	0	0
6726	6724	"geom"	"geometry"	0	0	1	1
6729	6728	"result"	"clob"	0	0	0	0
6730	6728	"geom"	"geometry"	0	0	1	1
6733	6732	"result"	"int"	32	0	0	0
6734	6732	"geom"	"geometry"	0	0	1	1
6737	6736	"result"	"geometry"	0	0	0	0
6738	6736	"geom"	"geometry"	0	0	1	1
6739	6736	"srid"	"int"	32	0	1	2
6742	6741	"result"	"boolean"	1	0	0	0
6743	6741	"geom"	"geometry"	0	0	1	1
6746	6745	"result"	"boolean"	1	0	0	0
6747	6745	"geom"	"geometry"	0	0	1	1
6750	6749	"result"	"geometry"	0	0	0	0
6751	6749	"geom"	"geometry"	0	0	1	1
6754	6753	"result"	"geometry"	0	0	0	0
6755	6753	"geom"	"geometry"	0	0	1	1
6758	6757	"result"	"boolean"	1	0	0	0
6759	6757	"geom1"	"geometry"	0	0	1	1
6760	6757	"geom2"	"geometry"	0	0	1	2
6763	6762	"result"	"boolean"	1	0	0	0
6764	6762	"geom1"	"geometry"	0	0	1	1
6765	6762	"geom2"	"geometry"	0	0	1	2
6768	6767	"result"	"boolean"	1	0	0	0
6769	6767	"geom1"	"geometry"	0	0	1	1
6770	6767	"geom2"	"geometry"	0	0	1	2
6773	6772	"result"	"boolean"	1	0	0	0
6774	6772	"geom1"	"geometry"	0	0	1	1
6775	6772	"geom2"	"geometry"	0	0	1	2
6778	6777	"result"	"boolean"	1	0	0	0
6779	6777	"geom1"	"geometry"	0	0	1	1
6780	6777	"geom2"	"geometry"	0	0	1	2
6783	6782	"result"	"boolean"	1	0	0	0
6784	6782	"geom1"	"geometry"	0	0	1	1
6785	6782	"geom2"	"geometry"	0	0	1	2
6788	6787	"result"	"boolean"	1	0	0	0
6789	6787	"geom1"	"geometry"	0	0	1	1
6790	6787	"geom2"	"geometry"	0	0	1	2
6793	6792	"result"	"boolean"	1	0	0	0
6794	6792	"geom1"	"geometry"	0	0	1	1
6795	6792	"geom2"	"geometry"	0	0	1	2
6798	6797	"result"	"boolean"	1	0	0	0
6799	6797	"geom1"	"geometry"	0	0	1	1
6800	6797	"geom2"	"geometry"	0	0	1	2
6801	6797	"intersection_matrix_pattern"	"clob"	0	0	1	3
6804	6803	"result"	"double"	53	0	0	0
6805	6803	"geom1"	"geometry"	0	0	1	1
6806	6803	"geom2"	"geometry"	0	0	1	2
6809	6808	"result"	"geometry"	0	0	0	0
6810	6808	"geom1"	"geometry"	0	0	1	1
6811	6808	"geom2"	"geometry"	0	0	1	2
6814	6813	"result"	"geometry"	0	0	0	0
6815	6813	"geom1"	"geometry"	0	0	1	1
6816	6813	"geom2"	"geometry"	0	0	1	2
6819	6818	"result"	"geometry"	0	0	0	0
6820	6818	"geom1"	"geometry"	0	0	1	1
6821	6818	"geom2"	"geometry"	0	0	1	2
6824	6823	"result"	"geometry"	0	0	0	0
6825	6823	"geom"	"geometry"	0	0	1	1
6828	6827	"result"	"geometry"	0	0	0	0
6829	6827	"geom1"	"geometry"	0	0	1	1
6830	6827	"geom2"	"geometry"	0	0	1	2
6833	6832	"result"	"geometry"	0	0	0	0
6834	6832	"geom"	"geometry"	0	0	1	1
6835	6832	"radius"	"double"	53	0	1	2
6838	6837	"result"	"geometry"	0	0	0	0
6839	6837	"geom"	"geometry"	0	0	1	1
6842	6841	"result"	"double"	53	0	0	0
6843	6841	"geom"	"geometry"	0	0	1	1
6846	6845	"result"	"double"	53	0	0	0
6847	6845	"geom"	"geometry"	0	0	1	1
6850	6849	"result"	"double"	53	0	0	0
6851	6849	"geom"	"geometry"	0	0	1	1
6854	6853	"result"	"geometry"	0	0	0	0
6855	6853	"geom"	"geometry"	0	0	1	1
6858	6857	"result"	"geometry"	0	0	0	0
6859	6857	"geom"	"geometry"	0	0	1	1
6862	6861	"result"	"boolean"	1	0	0	0
6863	6861	"geom"	"geometry"	0	0	1	1
6866	6865	"result"	"double"	53	0	0	0
6867	6865	"geom"	"geometry"	0	0	1	1
6870	6869	"result"	"boolean"	1	0	0	0
6871	6869	"geom"	"geometry"	0	0	1	1
6874	6873	"result"	"int"	32	0	0	0
6875	6873	"geom"	"geometry"	0	0	1	1
6878	6877	"result"	"geometry"	0	0	0	0
6879	6877	"geom"	"geometry"	0	0	1	1
6880	6877	"positionnum"	"int"	32	0	1	2
6883	6882	"result"	"geometry"	0	0	0	0
6884	6882	"geom"	"geometry"	0	0	1	1
6887	6886	"result"	"geometry"	0	0	0	0
6888	6886	"geom"	"geometry"	0	0	1	1
6891	6890	"result"	"double"	53	0	0	0
6892	6890	"geom"	"geometry"	0	0	1	1
6895	6894	"result"	"geometry"	0	0	0	0
6896	6894	"geom"	"geometry"	0	0	1	1
6899	6898	"result"	"geometry"	0	0	0	0
6900	6898	"geom"	"geometry"	0	0	1	1
6903	6902	"result"	"int"	32	0	0	0
6904	6902	"geom"	"geometry"	0	0	1	1
6907	6906	"result"	"geometry"	0	0	0	0
6908	6906	"geom"	"geometry"	0	0	1	1
6909	6906	"positionnum"	"int"	32	0	1	2
6912	6911	"result"	"geometrya"	0	0	0	0
6913	6911	"geom"	"geometry"	0	0	1	1
6916	6915	"result"	"int"	32	0	0	0
6917	6915	"geom"	"geometry"	0	0	1	1
6920	6919	"result"	"geometry"	0	0	0	0
6921	6919	"geom"	"geometry"	0	0	1	1
6922	6919	"positionnum"	"int"	32	0	1	2
6925	6924	"result"	"int"	32	0	0	0
6926	6924	"geom"	"geometry"	0	0	1	1
6929	6928	"result"	"geometry"	0	0	0	0
6930	6928	"geom"	"geometry"	0	0	1	1
6931	6928	"patchnum"	"int"	32	0	1	2
6934	6933	"result"	"geometry"	0	0	0	0
6935	6933	"wkt"	"clob"	0	0	1	1
6936	6933	"srid"	"int"	32	0	1	2
6939	6938	"result"	"geometry"	0	0	0	0
6940	6938	"wkt"	"clob"	0	0	1	1
6941	6938	"srid"	"int"	32	0	1	2
6944	6943	"result"	"geometry"	0	0	0	0
6945	6943	"wkt"	"clob"	0	0	1	1
6946	6943	"srid"	"int"	32	0	1	2
6949	6948	"result"	"geometry"	0	0	0	0
6950	6948	"wkt"	"clob"	0	0	1	1
6951	6948	"srid"	"int"	32	0	1	2
6954	6953	"result"	"geometry"	0	0	0	0
6955	6953	"wkt"	"clob"	0	0	1	1
6956	6953	"srid"	"int"	32	0	1	2
6959	6958	"result"	"geometry"	0	0	0	0
6960	6958	"wkt"	"clob"	0	0	1	1
6961	6958	"srid"	"int"	32	0	1	2
6964	6963	"result"	"geometry"	0	0	0	0
6965	6963	"wkt"	"clob"	0	0	1	1
6966	6963	"srid"	"int"	32	0	1	2
6969	6968	"result"	"geometry"	0	0	0	0
6970	6968	"wkt"	"clob"	0	0	1	1
6971	6968	"srid"	"int"	32	0	1	2
6974	6973	"result"	"geometry"	0	0	0	0
6975	6973	"wkt"	"clob"	0	0	1	1
6976	6973	"srid"	"int"	32	0	1	2
6979	6978	"result"	"geometry"	0	0	0	0
6980	6978	"wkt"	"clob"	0	0	1	1
6981	6978	"srid"	"int"	32	0	1	2
6984	6983	"result"	"geometry"	0	0	0	0
6985	6983	"wkt"	"clob"	0	0	1	1
6986	6983	"srid"	"int"	32	0	1	2
6989	6988	"result"	"geometry"	0	0	0	0
6990	6988	"wkt"	"clob"	0	0	1	1
6993	6992	"result"	"geometry"	0	0	0	0
6994	6992	"wkt"	"clob"	0	0	1	1
6997	6996	"result"	"geometry"	0	0	0	0
6998	6996	"wkt"	"clob"	0	0	1	1
7001	7000	"result"	"geometry"	0	0	0	0
7002	7000	"wkt"	"clob"	0	0	1	1
7005	7004	"result"	"geometry"	0	0	0	0
7006	7004	"wkt"	"clob"	0	0	1	1
7009	7008	"result"	"geometry"	0	0	0	0
7010	7008	"wkt"	"clob"	0	0	1	1
7013	7012	"result"	"geometry"	0	0	0	0
7014	7012	"wkt"	"clob"	0	0	1	1
7017	7016	"result"	"geometry"	0	0	0	0
7018	7016	"wkt"	"clob"	0	0	1	1
7021	7020	"result"	"geometry"	0	0	0	0
7022	7020	"wkt"	"clob"	0	0	1	1
7025	7024	"result"	"geometry"	0	0	0	0
7026	7024	"x"	"double"	53	0	1	1
7027	7024	"y"	"double"	53	0	1	2
7030	7029	"result"	"geometry"	0	0	0	0
7031	7029	"x"	"double"	53	0	1	1
7032	7029	"y"	"double"	53	0	1	2
7035	7034	"result"	"geometry"	0	0	0	0
7036	7034	"x"	"double"	53	0	1	1
7037	7034	"y"	"double"	53	0	1	2
7038	7034	"z"	"double"	53	0	1	3
7041	7040	"result"	"geometry"	0	0	0	0
7042	7040	"x"	"double"	53	0	1	1
7043	7040	"y"	"double"	53	0	1	2
7044	7040	"z"	"double"	53	0	1	3
7045	7040	"m"	"double"	53	0	1	4
7048	7047	"result"	"geometry"	0	0	0	0
7049	7047	"x"	"double"	53	0	1	1
7050	7047	"y"	"double"	53	0	1	2
7051	7047	"m"	"double"	53	0	1	3
7054	7053	"result"	"geometry"	0	0	0	0
7055	7053	"geom"	"geometry"	0	0	1	1
7058	7057	"result"	"geometry"	0	0	0	0
7059	7057	"geom1"	"geometry"	0	0	1	1
7060	7057	"geom2"	"geometry"	0	0	1	2
7063	7062	"result"	"geometry"	0	0	0	0
7064	7062	"xmin"	"double"	53	0	1	1
7065	7062	"ymin"	"double"	53	0	1	2
7066	7062	"xmax"	"double"	53	0	1	3
7067	7062	"ymax"	"double"	53	0	1	4
7068	7062	"srid"	"int"	32	0	1	5
7071	7070	"result"	"geometry"	0	0	0	0
7072	7070	"xmin"	"double"	53	0	1	1
7073	7070	"ymin"	"double"	53	0	1	2
7074	7070	"xmax"	"double"	53	0	1	3
7075	7070	"ymax"	"double"	53	0	1	4
7078	7077	"result"	"geometry"	0	0	0	0
7079	7077	"geom"	"geometry"	0	0	1	1
7082	7081	"result"	"geometry"	0	0	0	0
7083	7081	"geom"	"geometry"	0	0	1	1
7084	7081	"srid"	"int"	32	0	1	2
7087	7086	"result"	"mbr"	0	0	0	0
7088	7086	"lowleftpointgeom"	"geometry"	0	0	1	1
7089	7086	"uprightpointgeom"	"geometry"	0	0	1	2
7092	7091	"result"	"clob"	0	0	0	0
7093	7091	"geom"	"geometry"	0	0	1	1
7096	7095	"result"	"int"	32	0	0	0
7097	7095	"geom"	"geometry"	0	0	1	1
7100	7099	"result"	"boolean"	1	0	0	0
7101	7099	"geom"	"geometry"	0	0	1	1
7104	7103	"result"	"clob"	0	0	0	0
7105	7103	"geom"	"geometry"	0	0	1	1
7108	7107	"result"	"int"	32	0	0	0
7109	7107	"geom"	"geometry"	0	0	1	1
7112	7111	"result"	"int"	32	0	0	0
7113	7111	"geom"	"geometry"	0	0	1	1
7116	7115	"result"	"int"	32	0	0	0
7117	7115	"geom"	"geometry"	0	0	1	1
7120	7119	"result"	"double"	53	0	0	0
7121	7119	"geom"	"geometry"	0	0	1	1
7124	7123	"result"	"double"	53	0	0	0
7125	7123	"box"	"mbr"	0	0	1	1
7128	7127	"result"	"double"	53	0	0	0
7129	7127	"geom"	"geometry"	0	0	1	1
7132	7131	"result"	"double"	53	0	0	0
7133	7131	"box"	"mbr"	0	0	1	1
7136	7135	"result"	"double"	53	0	0	0
7137	7135	"geom"	"geometry"	0	0	1	1
7140	7139	"result"	"double"	53	0	0	0
7141	7139	"box"	"mbr"	0	0	1	1
7144	7143	"result"	"double"	53	0	0	0
7145	7143	"geom"	"geometry"	0	0	1	1
7148	7147	"result"	"double"	53	0	0	0
7149	7147	"box"	"mbr"	0	0	1	1
7152	7151	"result"	"geometry"	0	0	0	0
7153	7151	"geom"	"geometry"	0	0	1	1
7156	7155	"result"	"geometry"	0	0	0	0
7157	7155	"geom"	"geometry"	0	0	1	1
7160	7159	"result"	"geometry"	0	0	0	0
7161	7159	"geom"	"geometry"	0	0	1	1
7162	7159	"sz"	"double"	53	0	1	2
7165	7164	"result"	"clob"	0	0	0	0
7166	7164	"srid_in"	"int"	32	0	1	1
7169	7168	"result"	"geometry"	0	0	0	0
7170	7168	"geom"	"geometry"	0	0	1	1
7171	7168	"srid_src"	"int"	32	0	1	2
7172	7168	"srid_dest"	"int"	32	0	1	3
7173	7168	"proj4_src"	"clob"	0	0	1	4
7174	7168	"proj4_dest"	"clob"	0	0	1	5
7177	7176	"result"	"geometry"	0	0	0	0
7178	7176	"geom"	"geometry"	0	0	1	1
7179	7176	"srid"	"int"	32	0	1	2
7182	7181	"result"	"geometry"	0	0	0	0
7183	7181	"geom"	"geometry"	0	0	1	1
7184	7181	"dx"	"double"	53	0	1	2
7185	7181	"dy"	"double"	53	0	1	3
7188	7187	"result"	"geometry"	0	0	0	0
7189	7187	"geom"	"geometry"	0	0	1	1
7190	7187	"dx"	"double"	53	0	1	2
7191	7187	"dy"	"double"	53	0	1	3
7192	7187	"dz"	"double"	53	0	1	4
7195	7194	"result"	"clob"	0	0	0	0
7196	7194	"geom"	"geometry"	0	0	1	1
7199	7198	"result"	"boolean"	1	0	0	0
7200	7198	"geom1"	"geometry"	0	0	1	1
7201	7198	"geom2"	"geometry"	0	0	1	2
7204	7203	"result"	"boolean"	1	0	0	0
7205	7203	"geom1"	"geometry"	0	0	1	1
7206	7203	"geom2"	"geometry"	0	0	1	2
7209	7208	"result"	"boolean"	1	0	0	0
7210	7208	"geom1"	"geometry"	0	0	1	1
7211	7208	"geom2"	"geometry"	0	0	1	2
7212	7208	"dst"	"double"	53	0	1	3
7215	7214	"result"	"double"	53	0	0	0
7216	7214	"geom"	"geometry"	0	0	1	1
7219	7218	"result"	"geometry"	0	0	0	0
7220	7218	"geom1"	"geometry"	0	0	1	1
7221	7218	"geom2"	"geometry"	0	0	1	2
7224	7223	"result"	"geometry"	0	0	0	0
7225	7223	"geom"	"geometry"	0	0	1	1
7228	7227	"result"	"geometry"	0	0	0	0
7229	7227	"geom"	"geometry"	0	0	1	1
7230	7227	"tolerance"	"double"	53	0	1	2
7231	7227	"flags"	"int"	32	0	1	3
7234	7233	"id"	"clob"	0	0	0	0
7235	7233	"polygonwkb"	"geometry"	0	0	0	1
7236	7233	"geom"	"geometry"	0	0	1	2
7239	7238	"path"	"clob"	0	0	0	0
7240	7238	"pointg"	"geometry"	0	0	0	1
7241	7238	"geom"	"geometry"	0	0	1	2
7244	7243	"result"	"boolean"	1	0	0	0
7245	7243	"a"	"geometry"	0	0	1	1
7246	7243	"x"	"double"	53	0	1	2
7247	7243	"y"	"double"	53	0	1	3
7252	7251	"result"	"json"	0	0	0	0
7253	7251	"js"	"json"	0	0	1	1
7254	7251	"pathexpr"	"clob"	0	0	1	2
7257	7256	"result"	"json"	0	0	0	0
7258	7256	"js"	"json"	0	0	1	1
7259	7256	"name"	"tinyint"	8	0	1	2
7262	7261	"result"	"json"	0	0	0	0
7263	7261	"js"	"json"	0	0	1	1
7264	7261	"name"	"int"	32	0	1	2
7267	7266	"result"	"json"	0	0	0	0
7268	7266	"js"	"json"	0	0	1	1
7269	7266	"name"	"bigint"	64	0	1	2
7272	7271	"result"	"clob"	0	0	0	0
7273	7271	"js"	"json"	0	0	1	1
7274	7271	"e"	"clob"	0	0	1	2
7277	7276	"result"	"double"	53	0	0	0
7278	7276	"js"	"json"	0	0	1	1
7281	7280	"result"	"bigint"	64	0	0	0
7282	7280	"js"	"json"	0	0	1	1
7285	7284	"result"	"boolean"	1	0	0	0
7286	7284	"js"	"clob"	0	0	1	1
7289	7288	"result"	"boolean"	1	0	0	0
7290	7288	"js"	"clob"	0	0	1	1
7293	7292	"result"	"boolean"	1	0	0	0
7294	7292	"js"	"clob"	0	0	1	1
7297	7296	"result"	"boolean"	1	0	0	0
7298	7296	"js"	"json"	0	0	1	1
7301	7300	"result"	"boolean"	1	0	0	0
7302	7300	"js"	"json"	0	0	1	1
7305	7304	"result"	"boolean"	1	0	0	0
7306	7304	"js"	"json"	0	0	1	1
7309	7308	"result"	"int"	32	0	0	0
7310	7308	"js"	"json"	0	0	1	1
7313	7312	"result"	"json"	0	0	0	0
7314	7312	"js"	"json"	0	0	1	1
7317	7316	"result"	"json"	0	0	0	0
7318	7316	"js"	"json"	0	0	1	1
7321	7320	"result"	"clob"	0	0	0	0
7322	7320	"js"	"json"	0	0	1	1
7325	7324	"result"	"clob"	0	0	0	0
7326	7324	"js"	"clob"	0	0	1	1
7329	7328	"result"	"clob"	0	0	0	0
7330	7328	"js"	"int"	32	0	1	1
7333	7332	"result"	"clob"	0	0	0	0
7334	7332	"js"	"json"	0	0	1	1
7337	7336	"result"	"clob"	0	0	0	0
7338	7336	"x"	"clob"	0	0	1	1
7341	7340	"result"	"clob"	0	0	0	0
7342	7340	"x"	"double"	53	0	1	1
7345	7344	"result"	"clob"	0	0	0	0
7346	7344	"v"	"clob"	0	0	1	1
7350	7349	"result"	"uuid"	0	0	0	0
7353	7352	"result"	"uuid"	0	0	0	0
7354	7352	"u"	"uuid"	0	0	1	1
7357	7356	"result"	"uuid"	0	0	0	0
7358	7356	"u"	"clob"	0	0	1	1
7361	7360	"result"	"double"	53	0	0	0
7362	7360	"chi2"	"double"	53	0	1	1
7363	7360	"datapoints"	"double"	53	0	1	2
7371	7370	"beat"	"int"	32	0	1	0
7374	7373	"poolsize"	"int"	32	0	1	0
7377	7376	"host"	"clob"	0	0	1	0
7378	7376	"port"	"int"	32	0	1	1
7402	7401	"dirname"	"clob"	0	0	1	0
7405	7404	"fname"	"clob"	0	0	1	0
7408	7407	"tname"	"clob"	0	0	1	0
7411	7410	"dirname"	"clob"	0	0	1	0
7412	7410	"pat"	"clob"	0	0	1	1
7447	7446	"fname"	"varchar"	256	0	1	0
7450	7449	"fid"	"int"	32	0	1	0
7451	7449	"varnname"	"varchar"	256	0	1	1
7454	7453	"schema"	"clob"	0	0	0	0
7455	7453	"table"	"clob"	0	0	0	1
7456	7453	"column"	"clob"	0	0	0	2
7457	7453	"type"	"clob"	0	0	0	3
7458	7453	"mode"	"clob"	0	0	0	4
7459	7453	"location"	"clob"	0	0	0	5
7460	7453	"count"	"bigint"	64	0	0	6
7461	7453	"typewidth"	"int"	32	0	0	7
7462	7453	"columnsize"	"bigint"	64	0	0	8
7463	7453	"heapsize"	"bigint"	64	0	0	9
7464	7453	"hashes"	"bigint"	64	0	0	10
7465	7453	"phash"	"boolean"	1	0	0	11
7466	7453	"imprints"	"bigint"	64	0	0	12
7467	7453	"sorted"	"boolean"	1	0	0	13
7486	7485	"schema"	"clob"	0	0	0	0
7487	7485	"table"	"clob"	0	0	0	1
7488	7485	"column"	"clob"	0	0	0	2
7489	7485	"type"	"clob"	0	0	0	3
7490	7485	"mode"	"clob"	0	0	0	4
7491	7485	"location"	"clob"	0	0	0	5
7492	7485	"count"	"bigint"	64	0	0	6
7493	7485	"typewidth"	"int"	32	0	0	7
7494	7485	"columnsize"	"bigint"	64	0	0	8
7495	7485	"heapsize"	"bigint"	64	0	0	9
7496	7485	"hashes"	"bigint"	64	0	0	10
7497	7485	"phash"	"boolean"	1	0	0	11
7498	7485	"imprints"	"bigint"	64	0	0	12
7499	7485	"sorted"	"boolean"	1	0	0	13
7500	7485	"sname"	"clob"	0	0	1	14
7503	7502	"schema"	"clob"	0	0	0	0
7504	7502	"table"	"clob"	0	0	0	1
7505	7502	"column"	"clob"	0	0	0	2
7506	7502	"type"	"clob"	0	0	0	3
7507	7502	"mode"	"clob"	0	0	0	4
7508	7502	"location"	"clob"	0	0	0	5
7509	7502	"count"	"bigint"	64	0	0	6
7510	7502	"typewidth"	"int"	32	0	0	7
7511	7502	"columnsize"	"bigint"	64	0	0	8
7512	7502	"heapsize"	"bigint"	64	0	0	9
7513	7502	"hashes"	"bigint"	64	0	0	10
7514	7502	"phash"	"boolean"	1	0	0	11
7515	7502	"imprints"	"bigint"	64	0	0	12
7516	7502	"sorted"	"boolean"	1	0	0	13
7517	7502	"sname"	"clob"	0	0	1	14
7518	7502	"tname"	"clob"	0	0	1	15
7521	7520	"schema"	"clob"	0	0	0	0
7522	7520	"table"	"clob"	0	0	0	1
7523	7520	"column"	"clob"	0	0	0	2
7524	7520	"type"	"clob"	0	0	0	3
7525	7520	"mode"	"clob"	0	0	0	4
7526	7520	"location"	"clob"	0	0	0	5
7527	7520	"count"	"bigint"	64	0	0	6
7528	7520	"typewidth"	"int"	32	0	0	7
7529	7520	"columnsize"	"bigint"	64	0	0	8
7530	7520	"heapsize"	"bigint"	64	0	0	9
7531	7520	"hashes"	"bigint"	64	0	0	10
7532	7520	"phash"	"boolean"	1	0	0	11
7533	7520	"imprints"	"bigint"	64	0	0	12
7534	7520	"sorted"	"boolean"	1	0	0	13
7535	7520	"sname"	"clob"	0	0	1	14
7536	7520	"tname"	"clob"	0	0	1	15
7537	7520	"cname"	"clob"	0	0	1	16
7554	7553	"result"	"bigint"	64	0	0	0
7555	7553	"nme"	"clob"	0	0	1	1
7556	7553	"i"	"bigint"	64	0	1	2
7557	7553	"d"	"bigint"	64	0	1	3
7560	7559	"result"	"bigint"	64	0	0	0
7561	7559	"tpe"	"clob"	0	0	1	1
7562	7559	"i"	"bigint"	64	0	1	2
7563	7559	"w"	"int"	32	0	1	3
7566	7565	"result"	"bigint"	64	0	0	0
7567	7565	"b"	"boolean"	1	0	1	1
7568	7565	"i"	"bigint"	64	0	1	2
7571	7570	"result"	"bigint"	64	0	0	0
7572	7570	"i"	"bigint"	64	0	1	1
7573	7570	"nme"	"clob"	0	0	1	2
7576	7575	"schema"	"clob"	0	0	0	0
7577	7575	"table"	"clob"	0	0	0	1
7578	7575	"column"	"clob"	0	0	0	2
7579	7575	"type"	"clob"	0	0	0	3
7580	7575	"count"	"bigint"	64	0	0	4
7581	7575	"columnsize"	"bigint"	64	0	0	5
7582	7575	"heapsize"	"bigint"	64	0	0	6
7583	7575	"hashes"	"bigint"	64	0	0	7
7584	7575	"imprints"	"bigint"	64	0	0	8
7585	7575	"sorted"	"boolean"	1	0	0	9
7623	7622	"MinMax"	"int"	32	0	1	0
7624	7622	"sample"	"bigint"	64	0	1	1
7627	7626	"MinMax"	"int"	32	0	1	0
7628	7626	"sample"	"bigint"	64	0	1	1
7629	7626	"sch"	"clob"	0	0	1	2
7632	7631	"MinMax"	"int"	32	0	1	0
7633	7631	"sample"	"bigint"	64	0	1	1
7634	7631	"sch"	"clob"	0	0	1	2
7635	7631	"tbl"	"clob"	0	0	1	3
7638	7637	"MinMax"	"int"	32	0	1	0
7639	7637	"sample"	"bigint"	64	0	1	1
7640	7637	"sch"	"clob"	0	0	1	2
7641	7637	"tbl"	"clob"	0	0	1	3
7642	7637	"col"	"clob"	0	0	1	4
7645	7644	"result"	"clob"	0	0	0	0
7646	7644	"src"	"clob"	0	0	1	1
7649	7648	"result"	"smallint"	16	0	0	0
7650	7648	"one"	"tinyint"	8	0	1	1
7651	7648	"two"	"tinyint"	8	0	1	2
7654	7653	"result"	"int"	32	0	0	0
7655	7653	"one"	"smallint"	16	0	1	1
7656	7653	"two"	"smallint"	16	0	1	2
7659	7658	"result"	"bigint"	64	0	0	0
7660	7658	"one"	"int"	32	0	1	1
7661	7658	"two"	"int"	32	0	1	2
7665	7664	"bam_repos"	"clob"	0	0	1	0
7666	7664	"dbschema"	"smallint"	16	0	1	1
7669	7668	"bam_files"	"clob"	0	0	1	0
7670	7668	"dbschema"	"smallint"	16	0	1	1
7673	7672	"bam_file"	"clob"	0	0	1	0
7674	7672	"dbschema"	"smallint"	16	0	1	1
7677	7676	"file_id"	"bigint"	64	0	1	0
7678	7676	"dbschema"	"smallint"	16	0	1	1
7681	7680	"result"	"boolean"	1	0	0	0
7682	7680	"flag"	"smallint"	16	0	1	1
7683	7680	"name"	"clob"	0	0	1	2
7686	7685	"result"	"clob"	0	0	0	0
7687	7685	"seq"	"clob"	0	0	1	1
7690	7689	"result"	"clob"	0	0	0	0
7691	7689	"qual"	"clob"	0	0	1	1
7694	7693	"result"	"int"	32	0	0	0
7695	7693	"cigar"	"clob"	0	0	1	1
7698	7697	"result"	"char"	1	0	0	0
7699	7697	"ref_pos"	"int"	32	0	1	1
7700	7697	"alg_seq"	"clob"	0	0	1	2
7701	7697	"alg_pos"	"int"	32	0	1	3
7702	7697	"alg_cigar"	"clob"	0	0	1	4
7705	7704	"output_path"	"clob"	0	0	1	0
7708	7707	"output_path"	"clob"	0	0	1	0
7778	7777	"value"	"tinyint"	8	0	0	0
7779	7777	"first"	"tinyint"	8	0	1	1
7780	7777	"last"	"tinyint"	8	0	1	2
7783	7782	"value"	"tinyint"	8	0	0	0
7784	7782	"first"	"tinyint"	8	0	1	1
7785	7782	"last"	"tinyint"	8	0	1	2
7786	7782	"stepsize"	"tinyint"	8	0	1	3
7789	7788	"value"	"smallint"	16	0	0	0
7790	7788	"first"	"smallint"	16	0	1	1
7791	7788	"last"	"smallint"	16	0	1	2
7794	7793	"value"	"smallint"	16	0	0	0
7795	7793	"first"	"smallint"	16	0	1	1
7796	7793	"last"	"smallint"	16	0	1	2
7797	7793	"stepsize"	"smallint"	16	0	1	3
7800	7799	"value"	"int"	32	0	0	0
7801	7799	"first"	"int"	32	0	1	1
7802	7799	"last"	"int"	32	0	1	2
7805	7804	"value"	"int"	32	0	0	0
7806	7804	"first"	"int"	32	0	1	1
7807	7804	"last"	"int"	32	0	1	2
7808	7804	"stepsize"	"int"	32	0	1	3
7811	7810	"value"	"bigint"	64	0	0	0
7812	7810	"first"	"bigint"	64	0	1	1
7813	7810	"last"	"bigint"	64	0	1	2
7816	7815	"value"	"bigint"	64	0	0	0
7817	7815	"first"	"bigint"	64	0	1	1
7818	7815	"last"	"bigint"	64	0	1	2
7819	7815	"stepsize"	"bigint"	64	0	1	3
7822	7821	"value"	"real"	24	0	0	0
7823	7821	"first"	"real"	24	0	1	1
7824	7821	"last"	"real"	24	0	1	2
7825	7821	"stepsize"	"real"	24	0	1	3
7828	7827	"value"	"double"	53	0	0	0
7829	7827	"first"	"double"	53	0	1	1
7830	7827	"last"	"double"	53	0	1	2
7831	7827	"stepsize"	"double"	53	0	1	3
7834	7833	"value"	"decimal"	10	2	0	0
7835	7833	"first"	"decimal"	10	2	1	1
7836	7833	"last"	"decimal"	10	2	1	2
7837	7833	"stepsize"	"decimal"	10	2	1	3
7840	7839	"value"	"timestamp"	7	0	0	0
7841	7839	"first"	"timestamp"	7	0	1	1
7842	7839	"last"	"timestamp"	7	0	1	2
7843	7839	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 310 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
401	5791	7
400	5791	7
1032	5791	7
401	5795	7
400	5795	7
1032	5795	7
5800	5802	15
5800	5806	15
5800	5810	15
5800	5814	15
5800	5818	15
5800	5822	15
5800	5826	15
5800	5830	15
5800	5834	15
5800	5838	15
5800	5842	15
5800	5846	15
5800	5850	15
5800	5854	15
5800	5858	15
5800	5865	15
5900	5902	15
5900	5906	15
5900	5910	15
5900	5914	15
5900	5919	15
5900	5923	15
5900	5927	15
5900	5931	15
5900	5935	15
5900	5939	15
5900	5944	15
5900	5949	15
5900	5954	15
5959	5988	5
5969	5999	5
5959	6017	5
5969	6017	5
6028	6056	5
2003	6086	7
2001	6086	7
2002	6086	7
5755	6086	7
5764	6091	7
5762	6091	7
5763	6091	7
2005	6091	7
2001	6091	7
2003	6091	7
5723	6096	7
2047	6096	7
2046	6096	7
2049	6096	7
2048	6096	7
5723	6101	7
2088	6101	7
2086	6101	7
2090	6101	7
2083	6101	7
2079	6101	7
5723	6106	7
2047	6106	7
2046	6106	7
2049	6106	7
2092	6106	7
2091	6106	7
2048	6106	7
2093	6106	7
2094	6106	7
5723	6111	7
2081	6111	7
2079	6111	7
2084	6111	7
2080	6111	7
2083	6111	7
5723	6116	7
2047	6116	7
2046	6116	7
2049	6116	7
2017	6116	7
2016	6116	7
2048	6116	7
2018	6116	7
5733	6121	7
2047	6121	7
2046	6121	7
2049	6121	7
2048	6121	7
5723	6121	7
5733	6126	7
2081	6126	7
2079	6126	7
2084	6126	7
2103	6126	7
2102	6126	7
2104	6126	7
2080	6126	7
2083	6126	7
184	6126	7
64	6126	7
63	6126	7
65	6126	7
5733	6131	7
2088	6131	7
2086	6131	7
2090	6131	7
2083	6131	7
2079	6131	7
2087	6131	7
2103	6131	7
2102	6131	7
2104	6131	7
64	6131	7
63	6131	7
65	6131	7
5733	6136	7
2047	6136	7
2046	6136	7
2049	6136	7
2048	6136	7
2017	6136	7
2016	6136	7
2018	6136	7
5733	6141	7
2047	6141	7
2046	6141	7
2049	6141	7
2092	6141	7
2091	6141	7
2048	6141	7
2093	6141	7
5723	6146	7
2047	6146	7
2046	6146	7
2049	6146	7
2017	6146	7
2016	6146	7
2048	6146	7
2018	6146	7
5723	6151	7
2047	6151	7
2046	6151	7
2049	6151	7
2092	6151	7
2091	6151	7
2048	6151	7
2093	6151	7
2018	6156	7
2016	6156	7
2017	6156	7
2047	6156	7
2046	6156	7
2049	6156	7
2048	6156	7
2018	6161	7
2016	6161	7
2017	6161	7
2047	6161	7
2046	6161	7
2049	6161	7
2092	6161	7
2091	6161	7
2048	6161	7
2093	6161	7
2083	6166	7
2079	6166	7
2080	6166	7
2084	6166	7
6175	6189	5
128	6208	7
70	6208	7
68	6208	7
1183	6208	7
1167	6208	7
243	6208	7
1180	6208	7
244	6208	7
65	6220	7
464	6220	7
128	6220	7
130	6220	7
67	6220	7
6215	6220	7
6261	6269	5
6271	6277	5
6307	6325	5
6345	6355	5
6666	6668	10
6666	6667	4
6277	6682	5
5723	6682	5
5733	6682	5
2010	6682	5
2007	6682	5
2009	6682	5
2002	6682	5
2001	6682	5
2003	6682	5
244	6682	5
6653	6682	5
6657	6682	5
6661	6682	5
6915	6924	7
6919	6928	7
6672	7164	7
6673	7164	7
6666	7164	7
72	7164	7
6732	7176	7
7164	7176	7
67	7176	7
7168	7176	7
128	7176	7
130	7176	7
7249	7251	15
7249	7256	15
7249	7261	15
7249	7266	15
7249	7271	15
7249	7276	15
7249	7280	15
7249	7296	15
7249	7300	15
7249	7304	15
7249	7308	15
7249	7312	15
7249	7316	15
7249	7320	15
7249	7332	15
7347	7349	15
7347	7352	15
7347	7356	15
7380	7382	10
7380	7381	4
7385	7387	10
7388	7390	10
7385	7386	4
7393	7395	10
7396	7398	10
7393	7394	4
7453	7483	5
7539	7551	13
7549	7551	13
7540	7551	13
7541	7551	13
7542	7551	13
7543	7551	13
7544	7551	13
7545	7551	13
7546	7551	13
7547	7551	13
7548	7551	13
65	7553	7
137	7553	7
251	7553	7
127	7559	7
66	7559	7
244	7559	7
141	7559	7
65	7565	7
137	7565	7
128	7570	7
65	7570	7
360	7570	7
7539	7575	7
7549	7575	7
7540	7575	7
7541	7575	7
7542	7575	7
7544	7575	7
7545	7575	7
7546	7575	7
7547	7575	7
7548	7575	7
7553	7575	7
7559	7575	7
7565	7575	7
7570	7575	7
7575	7597	5
7575	7607	5
80	7607	5
87	7607	5
83	7607	5
67	7607	5
65	7607	5
137	7607	5
7710	7717	10
7710	7716	4
7720	7728	10
7721	7728	10
7721	7730	10
7720	7727	4
7721	7727	4
7716	7729	11
7721	7729	11
7733	7747	10
7734	7747	10
7734	7749	10
7733	7746	4
7734	7746	4
7716	7748	11
7734	7748	11
7752	7759	10
7753	7759	10
7753	7761	10
7752	7758	4
7753	7758	4
7716	7760	11
7753	7760	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1628 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
30	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
31	"mbr_overlap"	"mbrOverlaps"	"geom"	0	1	false	false	false	0
32	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
33	"mbr_above"	"mbrAbove"	"geom"	0	1	false	false	false	0
34	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
35	"mbr_below"	"mbrBelow"	"geom"	0	1	false	false	false	0
36	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
37	"mbr_right"	"mbrRight"	"geom"	0	1	false	false	false	0
38	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
39	"mbr_left"	"mbrLeft"	"geom"	0	1	false	false	false	0
40	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
41	"mbr_overlap_or_above"	"mbrOverlapOrAbove"	"geom"	0	1	false	false	false	0
42	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
43	"mbr_overlap_or_below"	"mbrOverlapOrBelow"	"geom"	0	1	false	false	false	0
44	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
45	"mbr_overlap_or_right"	"mbrOverlapOrRight"	"geom"	0	1	false	false	false	0
46	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
47	"mbr_overlap_or_left"	"mbrOverlapOrLeft"	"geom"	0	1	false	false	false	0
48	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
49	"mbr_contains"	"mbrContains"	"geom"	0	1	false	false	false	0
50	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
51	"mbr_contained"	"mbrContained"	"geom"	0	1	false	false	false	0
52	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
53	"mbr_equal"	"mbrEqual"	"geom"	0	1	false	false	false	0
54	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
55	"mbr_distance"	"mbrDistance"	"geom"	0	1	false	false	false	0
56	"left_shift"	"mbrLeft"	"geom"	0	1	false	false	false	0
57	"left_shift"	"mbrLeft"	"geom"	0	1	false	false	false	0
58	"right_shift"	"mbrRight"	"geom"	0	1	false	false	false	0
59	"right_shift"	"mbrRight"	"geom"	0	1	false	false	false	0
61	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
62	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
63	"hash"	"hash"	"mkey"	0	1	false	false	false	0
64	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
65	"="	"="	"calc"	0	1	false	false	false	0
66	"<>"	"!="	"calc"	0	1	false	false	false	0
67	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
68	">"	">"	"calc"	0	1	false	false	false	0
69	">="	">="	"calc"	0	1	false	false	false	0
70	"<"	"<"	"calc"	0	1	false	false	false	0
71	"<="	"<="	"calc"	0	1	false	false	false	0
75	"in"	"in"	"calc"	0	1	false	false	false	0
76	"identity"	"identity"	"calc"	0	1	false	false	false	0
77	"rowid"	"identity"	"calc"	0	1	false	false	false	0
78	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
81	"sql_min"	"min"	"calc"	0	1	false	false	false	0
82	"sql_max"	"max"	"calc"	0	1	false	false	false	0
83	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
101	"mod"	"%"	"calc"	0	1	false	false	false	0
102	"mod"	"%"	"calc"	0	1	false	false	false	0
103	"mod"	"%"	"calc"	0	1	false	false	false	0
104	"mod"	"%"	"calc"	0	1	false	false	false	0
105	"mod"	"%"	"calc"	0	1	false	false	false	0
106	"mod"	"%"	"calc"	0	1	false	false	false	0
107	"mod"	"%"	"calc"	0	1	false	false	false	0
108	"mod"	"%"	"calc"	0	1	false	false	false	0
109	"mod"	"%"	"calc"	0	1	false	false	false	0
110	"mod"	"%"	"calc"	0	1	false	false	false	0
111	"mod"	"%"	"calc"	0	1	false	false	false	0
112	"mod"	"%"	"calc"	0	1	false	false	false	0
122	"diff"	"diff"	"sql"	0	6	false	false	false	0
123	"diff"	"diff"	"sql"	0	6	false	false	false	0
124	"rank"	"rank"	"sql"	0	6	false	false	false	0
125	"dense_rank"	"dense_rank"	"sql"	0	6	false	false	false	0
126	"row_number"	"row_number"	"sql"	0	6	false	false	false	0
127	"and"	"and"	"calc"	0	1	false	false	false	0
128	"or"	"or"	"calc"	0	1	false	false	false	0
129	"xor"	"xor"	"calc"	0	1	false	false	false	0
130	"not"	"not"	"calc"	0	1	false	false	false	0
131	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
132	"sql_div"	"/"	"calc"	0	1	false	false	false	0
133	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
134	"sql_div"	"/"	"calc"	0	1	false	false	false	0
135	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
136	"sql_div"	"/"	"calc"	0	1	false	false	false	0
137	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
138	"sql_div"	"/"	"calc"	0	1	false	false	false	0
139	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
140	"sql_div"	"/"	"calc"	0	1	false	false	false	0
141	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
142	"sql_div"	"/"	"calc"	0	1	false	false	false	0
143	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
144	"sql_div"	"/"	"calc"	0	1	false	false	false	0
145	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
146	"sql_div"	"/"	"calc"	0	1	false	false	false	0
147	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
148	"sql_div"	"/"	"calc"	0	1	false	false	false	0
149	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
150	"sql_div"	"/"	"calc"	0	1	false	false	false	0
151	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
152	"sql_add"	"+"	"calc"	0	1	false	false	false	0
153	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
154	"sql_div"	"/"	"calc"	0	1	false	false	false	0
155	"bit_and"	"and"	"calc"	0	1	false	false	false	0
156	"bit_or"	"or"	"calc"	0	1	false	false	false	0
157	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
158	"bit_not"	"not"	"calc"	0	1	false	false	false	0
159	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
160	"right_shift"	">>"	"calc"	0	1	false	false	false	0
161	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
162	"abs"	"abs"	"calc"	0	1	false	false	false	0
163	"sign"	"sign"	"calc"	0	1	false	false	false	0
164	"scale_up"	"*"	"calc"	0	1	false	false	false	0
165	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
166	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
167	"sql_add"	"+"	"calc"	0	1	false	false	false	0
168	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
169	"sql_div"	"/"	"calc"	0	1	false	false	false	0
170	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
171	"sql_add"	"+"	"calc"	0	1	false	false	false	0
172	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
173	"sql_div"	"/"	"calc"	0	1	false	false	false	0
174	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
175	"sql_add"	"+"	"calc"	0	1	false	false	false	0
176	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
177	"sql_div"	"/"	"calc"	0	1	false	false	false	0
178	"bit_and"	"and"	"calc"	0	1	false	false	false	0
179	"bit_or"	"or"	"calc"	0	1	false	false	false	0
180	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
181	"bit_not"	"not"	"calc"	0	1	false	false	false	0
182	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
183	"right_shift"	">>"	"calc"	0	1	false	false	false	0
184	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
185	"abs"	"abs"	"calc"	0	1	false	false	false	0
186	"sign"	"sign"	"calc"	0	1	false	false	false	0
187	"scale_up"	"*"	"calc"	0	1	false	false	false	0
188	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
189	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
190	"sql_add"	"+"	"calc"	0	1	false	false	false	0
191	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
192	"sql_div"	"/"	"calc"	0	1	false	false	false	0
193	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
194	"sql_add"	"+"	"calc"	0	1	false	false	false	0
195	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
196	"sql_div"	"/"	"calc"	0	1	false	false	false	0
197	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
198	"sql_add"	"+"	"calc"	0	1	false	false	false	0
199	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
200	"sql_div"	"/"	"calc"	0	1	false	false	false	0
201	"bit_and"	"and"	"calc"	0	1	false	false	false	0
202	"bit_or"	"or"	"calc"	0	1	false	false	false	0
203	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
204	"bit_not"	"not"	"calc"	0	1	false	false	false	0
205	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
206	"right_shift"	">>"	"calc"	0	1	false	false	false	0
207	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
208	"abs"	"abs"	"calc"	0	1	false	false	false	0
209	"sign"	"sign"	"calc"	0	1	false	false	false	0
210	"scale_up"	"*"	"calc"	0	1	false	false	false	0
211	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
212	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
213	"sql_add"	"+"	"calc"	0	1	false	false	false	0
214	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
215	"sql_div"	"/"	"calc"	0	1	false	false	false	0
216	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
217	"sql_add"	"+"	"calc"	0	1	false	false	false	0
218	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
219	"sql_div"	"/"	"calc"	0	1	false	false	false	0
220	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
221	"sql_add"	"+"	"calc"	0	1	false	false	false	0
222	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
223	"sql_div"	"/"	"calc"	0	1	false	false	false	0
224	"bit_and"	"and"	"calc"	0	1	false	false	false	0
225	"bit_or"	"or"	"calc"	0	1	false	false	false	0
226	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
227	"bit_not"	"not"	"calc"	0	1	false	false	false	0
228	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
229	"right_shift"	">>"	"calc"	0	1	false	false	false	0
230	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
231	"abs"	"abs"	"calc"	0	1	false	false	false	0
232	"sign"	"sign"	"calc"	0	1	false	false	false	0
233	"scale_up"	"*"	"calc"	0	1	false	false	false	0
234	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
235	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
236	"sql_add"	"+"	"calc"	0	1	false	false	false	0
237	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
238	"sql_div"	"/"	"calc"	0	1	false	false	false	0
239	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
240	"sql_add"	"+"	"calc"	0	1	false	false	false	0
241	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
242	"sql_div"	"/"	"calc"	0	1	false	false	false	0
243	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
244	"sql_add"	"+"	"calc"	0	1	false	false	false	0
245	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
246	"sql_div"	"/"	"calc"	0	1	false	false	false	0
247	"bit_and"	"and"	"calc"	0	1	false	false	false	0
248	"bit_or"	"or"	"calc"	0	1	false	false	false	0
249	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
250	"bit_not"	"not"	"calc"	0	1	false	false	false	0
251	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
252	"right_shift"	">>"	"calc"	0	1	false	false	false	0
253	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
254	"abs"	"abs"	"calc"	0	1	false	false	false	0
255	"sign"	"sign"	"calc"	0	1	false	false	false	0
256	"scale_up"	"*"	"calc"	0	1	false	false	false	0
257	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
258	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
259	"sql_add"	"+"	"calc"	0	1	false	false	false	0
260	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
261	"sql_div"	"/"	"calc"	0	1	false	false	false	0
262	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
263	"sql_add"	"+"	"calc"	0	1	false	false	false	0
264	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
265	"sql_div"	"/"	"calc"	0	1	false	false	false	0
266	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
267	"sql_add"	"+"	"calc"	0	1	false	false	false	0
268	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
269	"sql_div"	"/"	"calc"	0	1	false	false	false	0
270	"bit_and"	"and"	"calc"	0	1	false	false	false	0
271	"bit_or"	"or"	"calc"	0	1	false	false	false	0
272	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
273	"bit_not"	"not"	"calc"	0	1	false	false	false	0
274	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
275	"right_shift"	">>"	"calc"	0	1	false	false	false	0
276	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
277	"abs"	"abs"	"calc"	0	1	false	false	false	0
278	"sign"	"sign"	"calc"	0	1	false	false	false	0
279	"scale_up"	"*"	"calc"	0	1	false	false	false	0
280	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
281	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
282	"sql_add"	"+"	"calc"	0	1	false	false	false	0
283	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
284	"sql_div"	"/"	"calc"	0	1	false	false	false	0
285	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
286	"sql_add"	"+"	"calc"	0	1	false	false	false	0
287	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
288	"sql_div"	"/"	"calc"	0	1	false	false	false	0
289	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
290	"sql_add"	"+"	"calc"	0	1	false	false	false	0
291	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
292	"sql_div"	"/"	"calc"	0	1	false	false	false	0
293	"bit_and"	"and"	"calc"	0	1	false	false	false	0
294	"bit_or"	"or"	"calc"	0	1	false	false	false	0
295	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
296	"bit_not"	"not"	"calc"	0	1	false	false	false	0
297	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
298	"right_shift"	">>"	"calc"	0	1	false	false	false	0
299	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
300	"abs"	"abs"	"calc"	0	1	false	false	false	0
301	"sign"	"sign"	"calc"	0	1	false	false	false	0
302	"scale_up"	"*"	"calc"	0	1	false	false	false	0
303	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
304	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
305	"sql_add"	"+"	"calc"	0	1	false	false	false	0
306	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
307	"sql_div"	"/"	"calc"	0	1	false	false	false	0
308	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
309	"sql_add"	"+"	"calc"	0	1	false	false	false	0
310	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
311	"sql_div"	"/"	"calc"	0	1	false	false	false	0
312	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
313	"sql_add"	"+"	"calc"	0	1	false	false	false	0
314	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
315	"sql_div"	"/"	"calc"	0	1	false	false	false	0
316	"bit_and"	"and"	"calc"	0	1	false	false	false	0
317	"bit_or"	"or"	"calc"	0	1	false	false	false	0
318	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
319	"bit_not"	"not"	"calc"	0	1	false	false	false	0
320	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
321	"right_shift"	">>"	"calc"	0	1	false	false	false	0
322	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
323	"abs"	"abs"	"calc"	0	1	false	false	false	0
324	"sign"	"sign"	"calc"	0	1	false	false	false	0
325	"scale_up"	"*"	"calc"	0	1	false	false	false	0
326	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
327	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
328	"sql_add"	"+"	"calc"	0	1	false	false	false	0
329	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
330	"sql_div"	"/"	"calc"	0	1	false	false	false	0
331	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
332	"sql_add"	"+"	"calc"	0	1	false	false	false	0
333	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
334	"sql_div"	"/"	"calc"	0	1	false	false	false	0
335	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
336	"sql_add"	"+"	"calc"	0	1	false	false	false	0
337	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
338	"sql_div"	"/"	"calc"	0	1	false	false	false	0
339	"bit_and"	"and"	"calc"	0	1	false	false	false	0
340	"bit_or"	"or"	"calc"	0	1	false	false	false	0
341	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
342	"bit_not"	"not"	"calc"	0	1	false	false	false	0
343	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
344	"right_shift"	">>"	"calc"	0	1	false	false	false	0
345	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
346	"abs"	"abs"	"calc"	0	1	false	false	false	0
347	"sign"	"sign"	"calc"	0	1	false	false	false	0
348	"scale_up"	"*"	"calc"	0	1	false	false	false	0
349	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
350	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
351	"sql_add"	"+"	"calc"	0	1	false	false	false	0
352	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
353	"sql_div"	"/"	"calc"	0	1	false	false	false	0
354	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
355	"sql_add"	"+"	"calc"	0	1	false	false	false	0
356	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
357	"sql_div"	"/"	"calc"	0	1	false	false	false	0
358	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
359	"sql_add"	"+"	"calc"	0	1	false	false	false	0
360	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
361	"sql_div"	"/"	"calc"	0	1	false	false	false	0
362	"bit_and"	"and"	"calc"	0	1	false	false	false	0
363	"bit_or"	"or"	"calc"	0	1	false	false	false	0
364	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
365	"bit_not"	"not"	"calc"	0	1	false	false	false	0
366	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
367	"right_shift"	">>"	"calc"	0	1	false	false	false	0
368	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
369	"abs"	"abs"	"calc"	0	1	false	false	false	0
370	"sign"	"sign"	"calc"	0	1	false	false	false	0
371	"scale_up"	"*"	"calc"	0	1	false	false	false	0
372	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
373	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
374	"sql_add"	"+"	"calc"	0	1	false	false	false	0
375	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
376	"sql_div"	"/"	"calc"	0	1	false	false	false	0
377	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
378	"sql_add"	"+"	"calc"	0	1	false	false	false	0
379	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
380	"sql_div"	"/"	"calc"	0	1	false	false	false	0
381	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
382	"sql_add"	"+"	"calc"	0	1	false	false	false	0
383	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
384	"sql_div"	"/"	"calc"	0	1	false	false	false	0
385	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
386	"abs"	"abs"	"calc"	0	1	false	false	false	0
387	"sign"	"sign"	"calc"	0	1	false	false	false	0
388	"scale_up"	"*"	"calc"	0	1	false	false	false	0
389	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
390	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
391	"sql_add"	"+"	"calc"	0	1	false	false	false	0
392	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
393	"sql_div"	"/"	"calc"	0	1	false	false	false	0
394	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
395	"sql_add"	"+"	"calc"	0	1	false	false	false	0
396	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
397	"sql_div"	"/"	"calc"	0	1	false	false	false	0
398	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
399	"sql_add"	"+"	"calc"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_div"	"/"	"calc"	0	1	false	false	false	0
402	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
403	"abs"	"abs"	"calc"	0	1	false	false	false	0
404	"sign"	"sign"	"calc"	0	1	false	false	false	0
405	"scale_up"	"*"	"calc"	0	1	false	false	false	0
406	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
407	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
408	"sql_add"	"+"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_div"	"/"	"calc"	0	1	false	false	false	0
411	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
412	"sql_add"	"+"	"calc"	0	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
414	"sql_div"	"/"	"calc"	0	1	false	false	false	0
415	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
416	"sql_add"	"+"	"calc"	0	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
418	"sql_div"	"/"	"calc"	0	1	false	false	false	0
419	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
420	"abs"	"abs"	"calc"	0	1	false	false	false	0
421	"sign"	"sign"	"calc"	0	1	false	false	false	0
422	"scale_up"	"*"	"calc"	0	1	false	false	false	0
423	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
424	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
425	"sql_add"	"+"	"calc"	0	1	false	false	false	0
426	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
427	"sql_div"	"/"	"calc"	0	1	false	false	false	0
428	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
429	"abs"	"abs"	"calc"	0	1	false	false	false	0
430	"sign"	"sign"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
433	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
434	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
435	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
436	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
437	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
438	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
439	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
440	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
441	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
442	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
443	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
444	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
445	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
446	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
447	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
448	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
449	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
450	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
451	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
452	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
453	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
454	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
455	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
456	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
457	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
458	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
459	"round"	"round"	"sql"	0	1	false	false	false	0
460	"round"	"round"	"sql"	0	1	false	false	false	0
461	"round"	"round"	"sql"	0	1	false	false	false	0
462	"round"	"round"	"sql"	0	1	false	false	false	0
463	"round"	"round"	"sql"	0	1	false	false	false	0
464	"round"	"round"	"sql"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"scale_up"	"*"	"calc"	0	1	false	false	false	0
831	"scale_up"	"*"	"calc"	0	1	false	false	false	0
832	"scale_up"	"*"	"calc"	0	1	false	false	false	0
833	"scale_up"	"*"	"calc"	0	1	false	false	false	0
834	"scale_up"	"*"	"calc"	0	1	false	false	false	0
835	"scale_up"	"*"	"calc"	0	1	false	false	false	0
836	"scale_up"	"*"	"calc"	0	1	false	false	false	0
837	"scale_up"	"*"	"calc"	0	1	false	false	false	0
838	"scale_up"	"*"	"calc"	0	1	false	false	false	0
839	"scale_up"	"*"	"calc"	0	1	false	false	false	0
840	"scale_up"	"*"	"calc"	0	1	false	false	false	0
841	"scale_up"	"*"	"calc"	0	1	false	false	false	0
842	"scale_up"	"*"	"calc"	0	1	false	false	false	0
843	"scale_up"	"*"	"calc"	0	1	false	false	false	0
844	"scale_up"	"*"	"calc"	0	1	false	false	false	0
845	"scale_up"	"*"	"calc"	0	1	false	false	false	0
846	"scale_up"	"*"	"calc"	0	1	false	false	false	0
847	"scale_up"	"*"	"calc"	0	1	false	false	false	0
848	"scale_up"	"*"	"calc"	0	1	false	false	false	0
849	"scale_up"	"*"	"calc"	0	1	false	false	false	0
850	"scale_up"	"*"	"calc"	0	1	false	false	false	0
851	"scale_up"	"*"	"calc"	0	1	false	false	false	0
852	"scale_up"	"*"	"calc"	0	1	false	false	false	0
853	"scale_up"	"*"	"calc"	0	1	false	false	false	0
854	"scale_up"	"*"	"calc"	0	1	false	false	false	0
855	"scale_up"	"*"	"calc"	0	1	false	false	false	0
856	"scale_up"	"*"	"calc"	0	1	false	false	false	0
857	"scale_up"	"*"	"calc"	0	1	false	false	false	0
858	"scale_up"	"*"	"calc"	0	1	false	false	false	0
859	"scale_up"	"*"	"calc"	0	1	false	false	false	0
860	"scale_up"	"*"	"calc"	0	1	false	false	false	0
861	"scale_up"	"*"	"calc"	0	1	false	false	false	0
862	"scale_up"	"*"	"calc"	0	1	false	false	false	0
863	"scale_up"	"*"	"calc"	0	1	false	false	false	0
864	"scale_up"	"*"	"calc"	0	1	false	false	false	0
865	"scale_up"	"*"	"calc"	0	1	false	false	false	0
866	"scale_up"	"*"	"calc"	0	1	false	false	false	0
867	"scale_up"	"*"	"calc"	0	1	false	false	false	0
868	"scale_up"	"*"	"calc"	0	1	false	false	false	0
869	"scale_up"	"*"	"calc"	0	1	false	false	false	0
870	"scale_up"	"*"	"calc"	0	1	false	false	false	0
871	"scale_up"	"*"	"calc"	0	1	false	false	false	0
872	"scale_up"	"*"	"calc"	0	1	false	false	false	0
873	"scale_up"	"*"	"calc"	0	1	false	false	false	0
874	"scale_up"	"*"	"calc"	0	1	false	false	false	0
875	"scale_up"	"*"	"calc"	0	1	false	false	false	0
876	"scale_up"	"*"	"calc"	0	1	false	false	false	0
877	"scale_up"	"*"	"calc"	0	1	false	false	false	0
878	"scale_up"	"*"	"calc"	0	1	false	false	false	0
879	"scale_up"	"*"	"calc"	0	1	false	false	false	0
880	"scale_up"	"*"	"calc"	0	1	false	false	false	0
881	"scale_up"	"*"	"calc"	0	1	false	false	false	0
882	"scale_up"	"*"	"calc"	0	1	false	false	false	0
883	"scale_up"	"*"	"calc"	0	1	false	false	false	0
884	"scale_up"	"*"	"calc"	0	1	false	false	false	0
885	"scale_up"	"*"	"calc"	0	1	false	false	false	0
886	"scale_up"	"*"	"calc"	0	1	false	false	false	0
887	"scale_up"	"*"	"calc"	0	1	false	false	false	0
888	"scale_up"	"*"	"calc"	0	1	false	false	false	0
889	"scale_up"	"*"	"calc"	0	1	false	false	false	0
890	"scale_up"	"*"	"calc"	0	1	false	false	false	0
891	"scale_up"	"*"	"calc"	0	1	false	false	false	0
892	"scale_up"	"*"	"calc"	0	1	false	false	false	0
893	"scale_up"	"*"	"calc"	0	1	false	false	false	0
894	"scale_up"	"*"	"calc"	0	1	false	false	false	0
895	"scale_up"	"*"	"calc"	0	1	false	false	false	0
896	"scale_up"	"*"	"calc"	0	1	false	false	false	0
897	"scale_up"	"*"	"calc"	0	1	false	false	false	0
898	"scale_up"	"*"	"calc"	0	1	false	false	false	0
899	"scale_up"	"*"	"calc"	0	1	false	false	false	0
900	"scale_up"	"*"	"calc"	0	1	false	false	false	0
901	"scale_up"	"*"	"calc"	0	1	false	false	false	0
902	"scale_up"	"*"	"calc"	0	1	false	false	false	0
903	"scale_up"	"*"	"calc"	0	1	false	false	false	0
904	"scale_up"	"*"	"calc"	0	1	false	false	false	0
905	"scale_up"	"*"	"calc"	0	1	false	false	false	0
906	"scale_up"	"*"	"calc"	0	1	false	false	false	0
907	"scale_up"	"*"	"calc"	0	1	false	false	false	0
908	"scale_up"	"*"	"calc"	0	1	false	false	false	0
909	"scale_up"	"*"	"calc"	0	1	false	false	false	0
910	"scale_up"	"*"	"calc"	0	1	false	false	false	0
911	"scale_up"	"*"	"calc"	0	1	false	false	false	0
912	"scale_up"	"*"	"calc"	0	1	false	false	false	0
913	"scale_up"	"*"	"calc"	0	1	false	false	false	0
914	"scale_up"	"*"	"calc"	0	1	false	false	false	0
915	"scale_up"	"*"	"calc"	0	1	false	false	false	0
916	"scale_up"	"*"	"calc"	0	1	false	false	false	0
917	"scale_up"	"*"	"calc"	0	1	false	false	false	0
918	"scale_up"	"*"	"calc"	0	1	false	false	false	0
919	"scale_up"	"*"	"calc"	0	1	false	false	false	0
920	"scale_up"	"*"	"calc"	0	1	false	false	false	0
921	"scale_up"	"*"	"calc"	0	1	false	false	false	0
922	"scale_up"	"*"	"calc"	0	1	false	false	false	0
923	"scale_up"	"*"	"calc"	0	1	false	false	false	0
924	"scale_up"	"*"	"calc"	0	1	false	false	false	0
925	"scale_up"	"*"	"calc"	0	1	false	false	false	0
926	"scale_up"	"*"	"calc"	0	1	false	false	false	0
927	"scale_up"	"*"	"calc"	0	1	false	false	false	0
928	"scale_up"	"*"	"calc"	0	1	false	false	false	0
929	"scale_up"	"*"	"calc"	0	1	false	false	false	0
930	"scale_up"	"*"	"calc"	0	1	false	false	false	0
931	"scale_up"	"*"	"calc"	0	1	false	false	false	0
932	"scale_up"	"*"	"calc"	0	1	false	false	false	0
933	"scale_up"	"*"	"calc"	0	1	false	false	false	0
934	"scale_up"	"*"	"calc"	0	1	false	false	false	0
935	"scale_up"	"*"	"calc"	0	1	false	false	false	0
936	"scale_up"	"*"	"calc"	0	1	false	false	false	0
937	"scale_up"	"*"	"calc"	0	1	false	false	false	0
938	"scale_up"	"*"	"calc"	0	1	false	false	false	0
939	"scale_up"	"*"	"calc"	0	1	false	false	false	0
940	"scale_up"	"*"	"calc"	0	1	false	false	false	0
941	"scale_up"	"*"	"calc"	0	1	false	false	false	0
942	"scale_up"	"*"	"calc"	0	1	false	false	false	0
943	"scale_up"	"*"	"calc"	0	1	false	false	false	0
944	"scale_up"	"*"	"calc"	0	1	false	false	false	0
945	"scale_up"	"*"	"calc"	0	1	false	false	false	0
946	"scale_up"	"*"	"calc"	0	1	false	false	false	0
947	"scale_up"	"*"	"calc"	0	1	false	false	false	0
948	"scale_up"	"*"	"calc"	0	1	false	false	false	0
949	"scale_up"	"*"	"calc"	0	1	false	false	false	0
950	"scale_up"	"*"	"calc"	0	1	false	false	false	0
951	"scale_up"	"*"	"calc"	0	1	false	false	false	0
952	"scale_up"	"*"	"calc"	0	1	false	false	false	0
953	"scale_up"	"*"	"calc"	0	1	false	false	false	0
954	"scale_up"	"*"	"calc"	0	1	false	false	false	0
955	"scale_up"	"*"	"calc"	0	1	false	false	false	0
956	"scale_up"	"*"	"calc"	0	1	false	false	false	0
957	"scale_up"	"*"	"calc"	0	1	false	false	false	0
958	"scale_up"	"*"	"calc"	0	1	false	false	false	0
959	"scale_up"	"*"	"calc"	0	1	false	false	false	0
960	"scale_up"	"*"	"calc"	0	1	false	false	false	0
961	"scale_up"	"*"	"calc"	0	1	false	false	false	0
962	"scale_up"	"*"	"calc"	0	1	false	false	false	0
963	"scale_up"	"*"	"calc"	0	1	false	false	false	0
964	"scale_up"	"*"	"calc"	0	1	false	false	false	0
965	"scale_up"	"*"	"calc"	0	1	false	false	false	0
966	"scale_up"	"*"	"calc"	0	1	false	false	false	0
967	"scale_up"	"*"	"calc"	0	1	false	false	false	0
968	"scale_up"	"*"	"calc"	0	1	false	false	false	0
969	"scale_up"	"*"	"calc"	0	1	false	false	false	0
970	"scale_up"	"*"	"calc"	0	1	false	false	false	0
971	"scale_up"	"*"	"calc"	0	1	false	false	false	0
972	"scale_up"	"*"	"calc"	0	1	false	false	false	0
973	"scale_up"	"*"	"calc"	0	1	false	false	false	0
974	"scale_up"	"*"	"calc"	0	1	false	false	false	0
975	"scale_up"	"*"	"calc"	0	1	false	false	false	0
976	"scale_up"	"*"	"calc"	0	1	false	false	false	0
977	"scale_up"	"*"	"calc"	0	1	false	false	false	0
978	"scale_up"	"*"	"calc"	0	1	false	false	false	0
979	"scale_up"	"*"	"calc"	0	1	false	false	false	0
980	"scale_up"	"*"	"calc"	0	1	false	false	false	0
981	"scale_up"	"*"	"calc"	0	1	false	false	false	0
982	"scale_up"	"*"	"calc"	0	1	false	false	false	0
983	"scale_up"	"*"	"calc"	0	1	false	false	false	0
984	"scale_up"	"*"	"calc"	0	1	false	false	false	0
985	"scale_up"	"*"	"calc"	0	1	false	false	false	0
986	"scale_up"	"*"	"calc"	0	1	false	false	false	0
987	"scale_up"	"*"	"calc"	0	1	false	false	false	0
988	"scale_up"	"*"	"calc"	0	1	false	false	false	0
989	"scale_up"	"*"	"calc"	0	1	false	false	false	0
990	"scale_up"	"*"	"calc"	0	1	false	false	false	0
991	"scale_up"	"*"	"calc"	0	1	false	false	false	0
992	"scale_up"	"*"	"calc"	0	1	false	false	false	0
993	"scale_up"	"*"	"calc"	0	1	false	false	false	0
994	"power"	"pow"	"mmath"	0	1	false	false	false	0
995	"floor"	"floor"	"mmath"	0	1	false	false	false	0
996	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
997	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
998	"sin"	"sin"	"mmath"	0	1	false	false	false	0
999	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1000	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1001	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1002	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1003	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1004	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1005	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1006	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1007	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1008	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1009	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1010	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1011	"log"	"log"	"mmath"	0	1	false	false	false	0
1012	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1013	"power"	"pow"	"mmath"	0	1	false	false	false	0
1014	"floor"	"floor"	"mmath"	0	1	false	false	false	0
1015	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
1016	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
1017	"sin"	"sin"	"mmath"	0	1	false	false	false	0
1018	"cos"	"cos"	"mmath"	0	1	false	false	false	0
1019	"tan"	"tan"	"mmath"	0	1	false	false	false	0
1020	"asin"	"asin"	"mmath"	0	1	false	false	false	0
1021	"acos"	"acos"	"mmath"	0	1	false	false	false	0
1022	"atan"	"atan"	"mmath"	0	1	false	false	false	0
1023	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
1024	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
1025	"cot"	"cot"	"mmath"	0	1	false	false	false	0
1026	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
1027	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
1028	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
1029	"exp"	"exp"	"mmath"	0	1	false	false	false	0
1030	"log"	"log"	"mmath"	0	1	false	false	false	0
1031	"log10"	"log10"	"mmath"	0	1	false	false	false	0
1032	"pi"	"pi"	"mmath"	0	1	false	false	false	0
1033	"rand"	"rand"	"mmath"	0	1	true	false	false	0
1034	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
1035	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
1036	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
1037	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
1038	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
1039	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
1040	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
1041	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
1042	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1043	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1044	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1045	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1046	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
1047	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1048	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
1049	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1050	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1051	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1052	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1053	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
1054	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
1055	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
1056	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
1057	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1058	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1059	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
1060	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
1061	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1062	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
1063	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
1064	"year"	"year"	"mtime"	0	1	false	false	false	0
1065	"month"	"month"	"mtime"	0	1	false	false	false	0
1066	"day"	"day"	"mtime"	0	1	false	false	false	0
1067	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1068	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1069	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1070	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1071	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1072	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1073	"year"	"year"	"mtime"	0	1	false	false	false	0
1074	"month"	"month"	"mtime"	0	1	false	false	false	0
1075	"day"	"day"	"mtime"	0	1	false	false	false	0
1076	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1077	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1078	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1079	"year"	"year"	"mtime"	0	1	false	false	false	0
1080	"month"	"month"	"mtime"	0	1	false	false	false	0
1081	"day"	"day"	"mtime"	0	1	false	false	false	0
1082	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1083	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1084	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
1085	"year"	"year"	"mtime"	0	1	false	false	false	0
1086	"month"	"month"	"mtime"	0	1	false	false	false	0
1087	"day"	"day"	"mtime"	0	1	false	false	false	0
1088	"hour"	"hours"	"mtime"	0	1	false	false	false	0
1089	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
1090	"second"	"seconds"	"mtime"	0	1	false	false	false	0
1091	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
1092	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
1093	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
1094	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
1095	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
1096	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
1097	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
1098	"restart"	"restart"	"sql"	0	1	false	false	false	0
1099	"index"	"index"	"calc"	0	1	false	false	false	0
1100	"index"	"index"	"calc"	0	1	false	false	false	0
1101	"index"	"index"	"calc"	0	1	false	false	false	0
1102	"strings"	"strings"	"calc"	0	1	false	false	false	0
1103	"locate"	"locate"	"str"	0	1	false	false	false	0
1104	"locate"	"locate"	"str"	0	1	false	false	false	0
1105	"charindex"	"locate"	"str"	0	1	false	false	false	0
1106	"charindex"	"locate"	"str"	0	1	false	false	false	0
1107	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1108	"substring"	"substring"	"str"	0	1	false	false	false	0
1109	"substring"	"substring"	"str"	0	1	false	false	false	0
1110	"substr"	"substring"	"str"	0	1	false	false	false	0
1111	"substr"	"substring"	"str"	0	1	false	false	false	0
1112	"like"	"like"	"algebra"	0	1	false	false	false	0
1113	"like"	"like"	"algebra"	0	1	false	false	false	0
1114	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1115	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1116	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1117	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1118	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1119	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1120	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1121	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1122	"concat"	"+"	"calc"	0	1	false	false	false	0
1123	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1124	"code"	"unicode"	"str"	0	1	false	false	false	0
1125	"length"	"stringlength"	"str"	0	1	false	false	false	0
1126	"right"	"stringright"	"str"	0	1	false	false	false	0
1127	"left"	"stringleft"	"str"	0	1	false	false	false	0
1128	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1129	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1130	"lower"	"toLower"	"str"	0	1	false	false	false	0
1131	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1132	"trim"	"trim"	"str"	0	1	false	false	false	0
1133	"trim"	"trim"	"str"	0	1	false	false	false	0
1134	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1135	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1136	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1137	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1138	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1139	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1140	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1141	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1142	"insert"	"insert"	"str"	0	1	false	false	false	0
1143	"replace"	"replace"	"str"	0	1	false	false	false	0
1144	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1145	"space"	"space"	"str"	0	1	false	false	false	0
1146	"char_length"	"length"	"str"	0	1	false	false	false	0
1147	"character_length"	"length"	"str"	0	1	false	false	false	0
1148	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1149	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1150	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1151	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1152	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1153	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1154	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1155	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1156	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1157	"index"	"index"	"calc"	0	1	false	false	false	0
1158	"index"	"index"	"calc"	0	1	false	false	false	0
1159	"index"	"index"	"calc"	0	1	false	false	false	0
1160	"strings"	"strings"	"calc"	0	1	false	false	false	0
1161	"locate"	"locate"	"str"	0	1	false	false	false	0
1162	"locate"	"locate"	"str"	0	1	false	false	false	0
1163	"charindex"	"locate"	"str"	0	1	false	false	false	0
1164	"charindex"	"locate"	"str"	0	1	false	false	false	0
1165	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1166	"substring"	"substring"	"str"	0	1	false	false	false	0
1167	"substring"	"substring"	"str"	0	1	false	false	false	0
1168	"substr"	"substring"	"str"	0	1	false	false	false	0
1169	"substr"	"substring"	"str"	0	1	false	false	false	0
1170	"like"	"like"	"algebra"	0	1	false	false	false	0
1171	"like"	"like"	"algebra"	0	1	false	false	false	0
1172	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1173	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1174	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1175	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1176	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1177	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1178	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1179	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1180	"concat"	"+"	"calc"	0	1	false	false	false	0
1181	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1182	"code"	"unicode"	"str"	0	1	false	false	false	0
1183	"length"	"stringlength"	"str"	0	1	false	false	false	0
1184	"right"	"stringright"	"str"	0	1	false	false	false	0
1185	"left"	"stringleft"	"str"	0	1	false	false	false	0
1186	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1187	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1188	"lower"	"toLower"	"str"	0	1	false	false	false	0
1189	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1190	"trim"	"trim"	"str"	0	1	false	false	false	0
1191	"trim"	"trim"	"str"	0	1	false	false	false	0
1192	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1193	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1194	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1195	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1196	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1197	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1198	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1199	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1200	"insert"	"insert"	"str"	0	1	false	false	false	0
1201	"replace"	"replace"	"str"	0	1	false	false	false	0
1202	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1203	"space"	"space"	"str"	0	1	false	false	false	0
1204	"char_length"	"length"	"str"	0	1	false	false	false	0
1205	"character_length"	"length"	"str"	0	1	false	false	false	0
1206	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1207	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1208	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1209	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1210	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1211	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1212	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1213	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1214	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1215	"index"	"index"	"calc"	0	1	false	false	false	0
1216	"index"	"index"	"calc"	0	1	false	false	false	0
1217	"index"	"index"	"calc"	0	1	false	false	false	0
1218	"strings"	"strings"	"calc"	0	1	false	false	false	0
1219	"locate"	"locate"	"str"	0	1	false	false	false	0
1220	"locate"	"locate"	"str"	0	1	false	false	false	0
1221	"charindex"	"locate"	"str"	0	1	false	false	false	0
1222	"charindex"	"locate"	"str"	0	1	false	false	false	0
1223	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1224	"substring"	"substring"	"str"	0	1	false	false	false	0
1225	"substring"	"substring"	"str"	0	1	false	false	false	0
1226	"substr"	"substring"	"str"	0	1	false	false	false	0
1227	"substr"	"substring"	"str"	0	1	false	false	false	0
1228	"like"	"like"	"algebra"	0	1	false	false	false	0
1229	"like"	"like"	"algebra"	0	1	false	false	false	0
1230	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1231	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1232	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1233	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1234	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1235	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1236	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1237	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1238	"concat"	"+"	"calc"	0	1	false	false	false	0
1239	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1240	"code"	"unicode"	"str"	0	1	false	false	false	0
1241	"length"	"stringlength"	"str"	0	1	false	false	false	0
1242	"right"	"stringright"	"str"	0	1	false	false	false	0
1243	"left"	"stringleft"	"str"	0	1	false	false	false	0
1244	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1245	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1246	"lower"	"toLower"	"str"	0	1	false	false	false	0
1247	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1248	"trim"	"trim"	"str"	0	1	false	false	false	0
1249	"trim"	"trim"	"str"	0	1	false	false	false	0
1250	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1251	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1252	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1253	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1254	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1255	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1256	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1257	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1258	"insert"	"insert"	"str"	0	1	false	false	false	0
1259	"replace"	"replace"	"str"	0	1	false	false	false	0
1260	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1261	"space"	"space"	"str"	0	1	false	false	false	0
1262	"char_length"	"length"	"str"	0	1	false	false	false	0
1263	"character_length"	"length"	"str"	0	1	false	false	false	0
1264	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1265	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1266	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1267	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1268	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1269	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1270	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1271	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1272	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1273	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1274	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
60	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
72	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
73	"exist"	"exist"	"aggr"	0	3	false	false	false	0
74	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
79	"min"	"min"	"aggr"	0	3	false	false	false	0
80	"max"	"max"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"sum"	"sum"	"aggr"	0	3	false	false	false	0
87	"sum"	"sum"	"aggr"	0	3	false	false	false	0
88	"sum"	"sum"	"aggr"	0	3	false	false	false	0
89	"sum"	"sum"	"aggr"	0	3	false	false	false	0
90	"sum"	"sum"	"aggr"	0	3	false	false	false	0
91	"sum"	"sum"	"aggr"	0	3	false	false	false	0
92	"sum"	"sum"	"aggr"	0	3	false	false	false	0
93	"prod"	"prod"	"aggr"	0	3	false	false	false	0
94	"prod"	"prod"	"aggr"	0	3	false	false	false	0
95	"prod"	"prod"	"aggr"	0	3	false	false	false	0
96	"prod"	"prod"	"aggr"	0	3	false	false	false	0
97	"prod"	"prod"	"aggr"	0	3	false	false	false	0
98	"prod"	"prod"	"aggr"	0	3	false	false	false	0
99	"prod"	"prod"	"aggr"	0	3	false	false	false	0
100	"prod"	"prod"	"aggr"	0	3	false	false	false	0
113	"sum"	"sum"	"aggr"	0	3	false	false	false	0
114	"prod"	"prod"	"aggr"	0	3	false	false	false	0
115	"sum"	"sum"	"aggr"	0	3	false	false	false	0
116	"prod"	"prod"	"aggr"	0	3	false	false	false	0
117	"sum"	"sum"	"aggr"	0	3	false	false	false	0
118	"sum"	"sum"	"aggr"	0	3	false	false	false	0
119	"avg"	"avg"	"aggr"	0	3	false	false	false	0
120	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
121	"count"	"count"	"aggr"	0	3	false	false	false	0
5744	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5747	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5753	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5773	"like"	"create filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5778	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5783	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5787	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5791	"degrees"	"create function degrees(r double)\nreturns double\n return r*180/pi();"	"user"	2	1	false	false	false	2000
5795	"radians"	"create function radians(d double)\nreturns double\n return d*pi()/180;"	"user"	2	1	false	false	false	2000
5799	"times"	"create procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5802	"getanchor"	"create function getanchor( theurl url ) returns string\n external name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5806	"getbasename"	"create function getbasename(theurl url) returns string\n external name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5810	"getcontent"	"create function getcontent(theurl url) returns string\n external name url.""getContent"";"	"url"	1	1	false	false	false	2000
5814	"getcontext"	"create function getcontext(theurl url) returns string\n external name url.""getContext"";"	"url"	1	1	false	false	false	2000
5818	"getdomain"	"create function getdomain(theurl url) returns string\n external name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5822	"getextension"	"create function getextension(theurl url) returns string\n external name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5826	"getfile"	"create function getfile(theurl url) returns string\n external name url.""getFile"";"	"url"	1	1	false	false	false	2000
5830	"gethost"	"create function gethost(theurl url) returns string\n external name url.""getHost"";"	"url"	1	1	false	false	false	2000
5834	"getport"	"create function getport(theurl url) returns string\n external name url.""getPort"";"	"url"	1	1	false	false	false	2000
5838	"getprotocol"	"create function getprotocol(theurl url) returns string\n external name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5842	"getquery"	"create function getquery(theurl url) returns string\n external name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5846	"getuser"	"create function getuser(theurl url) returns string\n external name url.""getUser"";"	"url"	1	1	false	false	false	2000
5850	"getroboturl"	"create function getroboturl(theurl url) returns string\n external name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5854	"isaurl"	"create function isaurl(theurl url) returns bool\n external name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5858	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5865	"newurl"	"create function newurl(protocol string, hostname string, file string)\n returns url\n external name url.""new"";"	"url"	1	1	false	false	false	2000
5871	"str_to_date"	"create function str_to_date(s string, format string) returns date\n external name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5876	"date_to_str"	"create function date_to_str(d date, format string) returns string\n external name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5881	"str_to_time"	"create function str_to_time(s string, format string) returns time\n external name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5886	"time_to_str"	"create function time_to_str(d time, format string) returns string\n external name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5891	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n external name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5896	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n external name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5902	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n external name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5906	"host"	"create function ""host"" (p inet) returns clob\n external name inet.""host"";"	"inet"	1	1	false	false	false	2000
5910	"masklen"	"create function ""masklen"" (p inet) returns int\n external name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5914	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n external name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5919	"netmask"	"create function ""netmask"" (p inet) returns inet\n external name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5923	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n external name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5927	"network"	"create function ""network"" (p inet) returns inet\n external name inet.""network"";"	"inet"	1	1	false	false	false	2000
5931	"text"	"create function ""text"" (p inet) returns clob\n external name inet.""text"";"	"inet"	1	1	false	false	false	2000
5935	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n external name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5939	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n external name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5944	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n external name inet."">>"";"	"inet"	1	1	false	false	false	2000
5949	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5954	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n external name inet."">>="";"	"inet"	1	1	false	false	false	2000
5959	"querylog_catalog"	"create function sys.querylog_catalog()\nreturns table(\n id oid,\n owner string,\n defined timestamp,\n query string,\n pipe string,\n ""plan"" string, \n mal int, \n optimize bigint \n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5969	"querylog_calls"	"create function sys.querylog_calls()\nreturns table(\n id oid, \n ""start"" timestamp, \n ""stop"" timestamp, \n arguments string, \n tuples wrd, \n run bigint, \n ship bigint, \n cpu int, \n io int \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
6019	"querylog_empty"	"create procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
6021	"querylog_enable"	"create procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
6023	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
6026	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
6028	"tracelog"	"create function sys.tracelog()\n returns table (\n event integer, \n clk varchar(20), \n pc varchar(50), \n thread int, \n ticks bigint, \n rrsmb bigint, \n vmmb bigint, \n reads bigint, \n writes bigint, \n minflt bigint, \n majflt bigint, \n nvcsw bigint, \n stmt string \n )\n external name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
6058	"epoch"	"create function sys.""epoch""(sec bigint) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6062	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6066	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6070	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
6074	"shrink"	"create procedure shrink(sys string, tab string)\n external name sql.shrink;"	"sql"	1	2	true	false	false	2000
6078	"reuse"	"create procedure reuse(sys string, tab string)\n external name sql.reuse;"	"sql"	1	2	true	false	false	2000
6082	"vacuum"	"create procedure vacuum(sys string, tab string)\n external name sql.vacuum;"	"sql"	1	2	true	false	false	2000
6086	"dependencies_schemas_on_users"	"create function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
6091	"dependencies_owners_on_schemas"	"create function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
6096	"dependencies_tables_on_views"	"create function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6101	"dependencies_tables_on_indexes"	"create function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
6106	"dependencies_tables_on_triggers"	"create function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
6111	"dependencies_tables_on_foreignkeys"	"create function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
6116	"dependencies_tables_on_functions"	"create function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
6121	"dependencies_columns_on_views"	"create function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
6126	"dependencies_columns_on_keys"	"create function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
6131	"dependencies_columns_on_indexes"	"create function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
6136	"dependencies_columns_on_functions"	"create function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6141	"dependencies_columns_on_triggers"	"create function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6146	"dependencies_views_on_functions"	"create function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
6151	"dependencies_views_on_triggers"	"create function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
6156	"dependencies_functions_on_functions"	"create function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
6161	"dependencies_functions_os_triggers"	"create function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
6166	"dependencies_keys_on_foreignkeys"	"create function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
6171	"password_hash"	"create function sys.password_hash (username string)\n returns string\n external name sql.password;"	"sql"	1	1	false	false	false	2000
6175	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
6191	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6194	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
6198	"settimeout"	"create procedure sys.settimeout(""query"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6201	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n external name sql.settimeout;"	"sql"	1	2	true	false	false	2000
6205	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n external name sql.setsession;"	"sql"	1	2	true	false	false	2000
6208	"ms_stuff"	"create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n declare res varchar(32), aux varchar(32);\n declare ofset int;\n if ( st < 0 or st > length(s1))\n then return '';\n end if;\n set ofset = 1;\n set res = substring(s1,ofset,st-1);\n set res = res || s3;\n set ofset = st + len;\n set aux = substring(s1,ofset,length(s1)-ofset+1);\n set res = res || aux;\n return res;\nend;"	"user"	2	1	false	false	false	2000
6215	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
6220	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n if (truncat = 0)\n then return round(num, prc);\n else return ms_trunc(num, prc);\n end if;\nend;"	"user"	2	1	false	false	false	2000
6226	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
6232	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
6237	"zorder_encode"	"create function zorder_encode(x integer, y integer) returns oid\n external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
6242	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
6246	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
6250	"optimizer_stats"	"create function sys.optimizer_stats ()\n returns table (rewrite string, count int)\n external name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
6254	"querycache"	"create function sys.querycache()\n returns table (query string, count int)\n external name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
6258	"querylog"	"create procedure sys.querylog(filename string)\n external name sql.logfile;"	"sql"	1	2	true	false	false	2000
6261	"optimizers"	"create function sys.optimizers ()\n returns table (name string, def string, status string)\n external name sql.optimizers;"	"sql"	1	5	false	false	false	2000
6271	"environment"	"create function sys.environment()\n returns table (""name"" string, value string)\n external name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
6279	"bbp"	"create function sys.bbp ()\n returns table (id int, name string, \n ttype string, count bigint, refcnt int, lrefcnt int,\n location string, heat int, dirty string,\n status string, kind string)\n external name bbp.get;"	"bbp"	1	5	false	false	false	2000
6292	"malfunctions"	"create function sys.malfunctions()\n returns table(""signature"" string, ""address"" string, ""comment"" string)\n external name ""manual"".""functions"";"	"manual"	1	5	false	false	false	2000
6297	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n external name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
6301	"flush_log"	"create procedure sys.flush_log ()\n external name sql.""flush_log"";"	"sql"	1	2	true	false	false	2000
6303	"debug"	"create function sys.debug(debug int) returns integer\n external name mdb.""setDebug"";"	"mdb"	1	1	false	false	false	2000
6307	"queue"	"create function sys.queue()\nreturns table(\n qtag bigint,\n ""user"" string,\n started timestamp,\n estimate timestamp,\n progress int,\n status string,\n tag oid,\n query string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
6327	"pause"	"create procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6330	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6333	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6336	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
6339	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
6342	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
6345	"rejects"	"create function sys.rejects()\nreturns table(\n rowid bigint,\n fldid int,\n ""message"" string,\n ""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
6357	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
6359	"stddev_samp"	"create aggregate stddev_samp(val tinyint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6363	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6367	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6371	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6375	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6379	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6383	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6387	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6391	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6395	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n external name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
6399	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6403	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6407	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6411	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6415	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6419	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6423	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6427	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6431	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6435	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n external name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
6439	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6443	"var_samp"	"create aggregate var_samp(val smallint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6447	"var_samp"	"create aggregate var_samp(val integer) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6451	"var_samp"	"create aggregate var_samp(val wrd) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6455	"var_samp"	"create aggregate var_samp(val bigint) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6459	"var_samp"	"create aggregate var_samp(val real) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6463	"var_samp"	"create aggregate var_samp(val double) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6467	"var_samp"	"create aggregate var_samp(val date) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6471	"var_samp"	"create aggregate var_samp(val time) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6475	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n external name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
6479	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6483	"var_pop"	"create aggregate var_pop(val smallint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6487	"var_pop"	"create aggregate var_pop(val integer) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6491	"var_pop"	"create aggregate var_pop(val wrd) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6495	"var_pop"	"create aggregate var_pop(val bigint) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6499	"var_pop"	"create aggregate var_pop(val real) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6503	"var_pop"	"create aggregate var_pop(val double) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6507	"var_pop"	"create aggregate var_pop(val date) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6511	"var_pop"	"create aggregate var_pop(val time) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6515	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n external name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6519	"median"	"create aggregate median(val tinyint) returns tinyint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6523	"median"	"create aggregate median(val smallint) returns smallint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6527	"median"	"create aggregate median(val integer) returns integer\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6531	"median"	"create aggregate median(val wrd) returns wrd\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6535	"median"	"create aggregate median(val bigint) returns bigint\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6539	"median"	"create aggregate median(val decimal) returns decimal\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6543	"median"	"create aggregate median(val real) returns real\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6547	"median"	"create aggregate median(val double) returns double\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6551	"median"	"create aggregate median(val date) returns date\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6555	"median"	"create aggregate median(val time) returns time\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6559	"median"	"create aggregate median(val timestamp) returns timestamp\n external name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6563	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6568	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6573	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6578	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6583	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6588	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6593	"quantile"	"create aggregate quantile(val real, q double) returns real\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6598	"quantile"	"create aggregate quantile(val double, q double) returns double\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6603	"quantile"	"create aggregate quantile(val date, q double) returns date\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6608	"quantile"	"create aggregate quantile(val time, q double) returns time\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6613	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n external name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6618	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6623	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6628	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6633	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6638	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6643	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6648	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n external name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6653	"has_z"	"create function has_z(info integer) returns integer external name geom.""hasZ"";"	"geom"	1	1	false	false	false	2000
6657	"has_m"	"create function has_m(info integer) returns integer external name geom.""hasM"";"	"geom"	1	1	false	false	false	2000
6661	"get_type"	"create function get_type(info integer, format integer) returns string external name geom.""getType"";"	"geom"	1	1	false	false	false	2000
6684	"mbr"	"create function mbr(geom geometry) returns mbr external name geom.""mbr"";"	"geom"	1	1	false	false	false	2000
6688	"st_overlaps"	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.""mbrOverlaps"";"	"geom"	1	1	false	false	false	2000
6693	"st_contains"	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.""mbrContains"";"	"geom"	1	1	false	false	false	2000
6698	"st_equals"	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.""mbrEqual"";"	"geom"	1	1	false	false	false	2000
6703	"st_distance"	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.""mbrDistance"";"	"geom"	1	1	false	false	false	2000
6708	"st_wkttosql"	"create function st_wkttosql(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6712	"st_wkbtosql"	"create function st_wkbtosql(geom string) returns geometry external name geom.""FromBinary"";"	"geom"	1	1	false	false	false	2000
6716	"st_astext"	"create function st_astext(geom geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6720	"st_asbinary"	"create function st_asbinary(geom geometry) returns string external name geom.""AsBinary"";"	"geom"	1	1	false	false	false	2000
6724	"st_dimension"	"create function st_dimension(geom geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6728	"st_geometrytype"	"create function st_geometrytype(geom geometry) returns string external name geom.""GeometryType2"";"	"geom"	1	1	false	false	false	2000
6732	"st_srid"	"create function st_srid(geom geometry) returns integer external name geom.""getSRID"";"	"geom"	1	1	false	false	false	2000
6736	"st_setsrid"	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.""setSRID"";"	"geom"	1	1	false	false	false	2000
6741	"st_isempty"	"create function st_isempty(geom geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6745	"st_issimple"	"create function st_issimple(geom geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6749	"st_boundary"	"create function st_boundary(geom geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6753	"st_envelope"	"create function st_envelope(geom geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6757	"st_equals"	"create function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6762	"st_disjoint"	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6767	"st_intersects"	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.""Intersects"";"	"geom"	1	1	false	false	false	2000
6772	"st_touches"	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6777	"st_crosses"	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6782	"st_within"	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6787	"st_contains"	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6792	"st_overlaps"	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6797	"st_relate"	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6803	"st_distance"	"create function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6808	"st_intersection"	"create function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6813	"st_difference"	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6818	"st_union"	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6823	"st_union"	"create aggregate st_union(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
6827	"st_symdifference"	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6832	"st_buffer"	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6837	"st_convexhull"	"create function st_convexhull(geom geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6841	"st_x"	"create function st_x(geom geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6845	"st_y"	"create function st_y(geom geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6849	"st_z"	"create function st_z(geom geometry) returns double external name geom.""Z"";"	"geom"	1	1	false	false	false	2000
6853	"st_startpoint"	"create function st_startpoint(geom geometry) returns geometry external name geom.""StartPoint"";"	"geom"	1	1	false	false	false	2000
6857	"st_endpoint"	"create function st_endpoint(geom geometry) returns geometry external name geom.""EndPoint"";"	"geom"	1	1	false	false	false	2000
6861	"st_isring"	"create function st_isring(geom geometry) returns boolean external name geom.""IsRing"";"	"geom"	1	1	false	false	false	2000
6865	"st_length"	"create function st_length(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6869	"st_isclosed"	"create function st_isclosed(geom geometry) returns boolean external name geom.""IsClosed"";"	"geom"	1	1	false	false	false	2000
6873	"st_numpoints"	"create function st_numpoints(geom geometry) returns integer external name geom.""NumPoints"";"	"geom"	1	1	false	false	false	2000
6877	"st_pointn"	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.""PointN"";"	"geom"	1	1	false	false	false	2000
6882	"st_centroid"	"create function st_centroid(geom geometry) returns geometry external name geom.""Centroid"";"	"geom"	1	1	false	false	false	2000
6886	"st_pointonsurface"	"create function st_pointonsurface(geom geometry) returns geometry external name geom.""PointOnSurface"";"	"geom"	1	1	false	false	false	2000
6890	"st_area"	"create function st_area(geom geometry) returns double external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6894	"st_exteriorring"	"create function st_exteriorring(geom geometry) returns geometry external name geom.""ExteriorRing"";"	"geom"	1	1	false	false	false	2000
6898	"st_setexteriorring"	"create function st_setexteriorring(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
6902	"st_numinteriorring"	"create function st_numinteriorring(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
6906	"st_interiorringn"	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.""InteriorRingN"";"	"geom"	1	1	false	false	false	2000
6911	"st_interiorrings"	"create function st_interiorrings(geom geometry) returns geometrya external name geom.""InteriorRings"";"	"geom"	1	1	false	false	false	2000
6915	"st_numgeometries"	"create function st_numgeometries(geom geometry) returns integer external name geom.""NumGeometries"";"	"geom"	1	1	false	false	false	2000
6919	"st_geometryn"	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.""GeometryN"";"	"geom"	1	1	false	false	false	2000
6924	"st_numpatches"	"create function st_numpatches(geom geometry) returns integer \nbegin\n return select st_numgeometries(geom);\nend;"	"user"	2	1	false	false	false	2000
6928	"st_patchn"	"create function st_patchn(geom geometry, patchnum integer) returns geometry \nbegin\n return select st_geometryn(geom, patchnum);\nend;"	"user"	2	1	false	false	false	2000
6933	"st_geomfromtext"	"create function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6938	"st_pointfromtext"	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6943	"st_linefromtext"	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6948	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
6953	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
6958	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
6963	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
6968	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
6973	"st_bdpolyfromtext"	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdPolyFromText"";"	"geom"	1	1	false	false	false	2000
6978	"st_bdmpolyfromtext"	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.""BdMPolyFromText"";"	"geom"	1	1	false	false	false	2000
6983	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6988	"st_geomfromtext"	"create function st_geomfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6992	"st_geometryfromtext"	"create function st_geometryfromtext(wkt string) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6996	"st_pointfromtext"	"create function st_pointfromtext(wkt string) returns geometry external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
7000	"st_linefromtext"	"create function st_linefromtext(wkt string) returns geometry external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
7004	"st_polygonfromtext"	"create function st_polygonfromtext(wkt string) returns geometry external name geom.""PolygonFromText"";"	"geom"	1	1	false	false	false	2000
7008	"st_mpointfromtext"	"create function st_mpointfromtext(wkt string) returns geometry external name geom.""MPointFromText"";"	"geom"	1	1	false	false	false	2000
7012	"st_mlinefromtext"	"create function st_mlinefromtext(wkt string) returns geometry external name geom.""MLineFromText"";"	"geom"	1	1	false	false	false	2000
7016	"st_mpolyfromtext"	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.""MPolyFromText"";"	"geom"	1	1	false	false	false	2000
7020	"st_geomcollfromtext"	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.""GeomCollFromText"";"	"geom"	1	1	false	false	false	2000
7024	"st_makepoint"	"create function st_makepoint(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7029	"st_point"	"create function st_point(x double, y double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7034	"st_makepoint"	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7040	"st_makepoint"	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.""MakePoint"";"	"geom"	1	1	false	false	false	2000
7047	"st_makepointm"	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.""MakePointM"";"	"geom"	1	1	false	false	false	2000
7053	"st_makeline"	"create aggregate st_makeline(geom geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	3	false	false	false	2000
7057	"st_makeline"	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.""MakeLine"";"	"geom"	1	1	false	false	false	2000
7062	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7070	"st_makeenvelope"	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.""MakeEnvelope"";"	"geom"	1	1	false	false	false	2000
7077	"st_makepolygon"	"create function st_makepolygon(geom geometry) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7081	"st_polygon"	"create function st_polygon(geom geometry, srid integer) returns geometry external name geom.""MakePolygon"";"	"geom"	1	1	false	false	false	2000
7086	"st_makebox2d"	"create function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.""MakeBox2D"";"	"geom"	1	1	false	false	false	2000
7091	"geometrytype"	"create function geometrytype(geom geometry) returns string external name geom.""GeometryType1"";"	"geom"	1	1	false	false	false	2000
7095	"st_coorddim"	"create function st_coorddim(geom geometry) returns integer external name geom.""CoordDim"";"	"geom"	1	1	false	false	false	2000
7099	"st_isvalid"	"create function st_isvalid(geom geometry) returns boolean external name geom.""IsValid"";"	"geom"	1	1	false	false	false	2000
7103	"st_isvalidreason"	"create function st_isvalidreason(geom geometry) returns string external name geom.""IsValidReason"";"	"geom"	1	1	false	false	false	2000
7107	"st_npoints"	"create function st_npoints(geom geometry) returns integer external name geom.""NPoints"";"	"geom"	1	1	false	false	false	2000
7111	"st_nrings"	"create function st_nrings(geom geometry) returns integer external name geom.""NRings"";"	"geom"	1	1	false	false	false	2000
7115	"st_numinteriorrings"	"create function st_numinteriorrings(geom geometry) returns integer external name geom.""NumInteriorRings"";"	"geom"	1	1	false	false	false	2000
7119	"st_xmax"	"create function st_xmax(geom geometry) returns double external name geom.""XMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7123	"st_xmax"	"create function st_xmax(box mbr) returns double external name geom.""XMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7127	"st_xmin"	"create function st_xmin(geom geometry) returns double external name geom.""XMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7131	"st_xmin"	"create function st_xmin(box mbr) returns double external name geom.""XMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7135	"st_ymax"	"create function st_ymax(geom geometry) returns double external name geom.""YMaxFromWKB"";"	"geom"	1	1	false	false	false	2000
7139	"st_ymax"	"create function st_ymax(box mbr) returns double external name geom.""YMaxFromMBR"";"	"geom"	1	1	false	false	false	2000
7143	"st_ymin"	"create function st_ymin(geom geometry) returns double external name geom.""YMinFromWKB"";"	"geom"	1	1	false	false	false	2000
7147	"st_ymin"	"create function st_ymin(box mbr) returns double external name geom.""YMinFromMBR"";"	"geom"	1	1	false	false	false	2000
7151	"st_force2d"	"create function st_force2d(geom geometry) returns geometry external name geom.""Force2D"";"	"geom"	1	1	false	false	false	2000
7155	"st_force3d"	"create function st_force3d(geom geometry) returns geometry external name geom.""Force3D"";"	"geom"	1	1	false	false	false	2000
7159	"st_segmentize"	"create function st_segmentize(geom geometry, sz double) returns geometry external name geom.""Segmentize"";"	"geom"	1	1	false	false	false	2000
7164	"getproj4"	"create function getproj4(srid_in integer) returns string \nbegin\n return select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	"user"	2	1	false	false	false	2000
7168	"internaltransform"	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.""Transform"";"	"geom"	1	1	false	false	false	2000
7176	"st_transform"	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n declare srid_src integer;\n declare proj4_src string;\n declare proj4_dest string;\n select st_srid(geom) into srid_src;\n select getproj4(srid_src) into proj4_src;\n select getproj4(srid) into proj4_dest;\n if proj4_src is null then\n return select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n else\n if proj4_dest is null then\n return select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n else\n return select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n end if; \n end if;\nend;"	"user"	2	1	false	false	false	2000
7181	"st_translate"	"create function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7187	"st_translate"	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.""Translate"";"	"geom"	1	1	false	false	false	2000
7194	"st_asewkt"	"create function st_asewkt(geom geometry) returns string external name geom.""AsEWKT"";"	"geom"	1	1	false	false	false	2000
7198	"st_covers"	"create function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.""Covers"";"	"geom"	1	1	false	false	false	2000
7203	"st_coveredby"	"create function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.""CoveredBy"";"	"geom"	1	1	false	false	false	2000
7208	"st_dwithin"	"create function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.""DWithin"";"	"geom"	1	1	false	false	false	2000
7214	"st_length2d"	"create function st_length2d(geom geometry) returns double external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
7218	"st_collect"	"create function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
7223	"st_collect"	"create aggregate st_collect(geom geometry) returns geometry external name geom.""Union"";"	"geom"	1	3	false	false	false	2000
7227	"st_delaunaytriangles"	"create function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.""DelaunayTriangles"";"	"geom"	1	1	false	false	false	2000
7233	"st_dump"	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.""Dump"";"	"geom"	1	5	false	false	false	2000
7238	"st_dumppoints"	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.""DumpPoints"";"	"geom"	1	5	false	false	false	2000
7243	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
7251	"filter"	"create function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7248
7256	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7248
7261	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7248
7266	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	7248
7271	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7248
7276	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	7248
7280	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	7248
7284	"isvalid"	"create function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7248
7288	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7248
7292	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7248
7296	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	7248
7300	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	7248
7304	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	7248
7308	"length"	"create function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	7248
7312	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	7248
7316	"valuearray"	"create function json.valuearray(js json)\nreturns json external name json.valuearray;"	"json"	1	1	false	false	false	7248
7320	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7248
7324	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7248
7328	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	7248
7332	"output"	"create aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	7248
7336	"tojsonarray"	"create aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7248
7340	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	7248
7344	"md5"	"create function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
7349	"uuid"	"create function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
7352	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7356	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
7360	"chi2prob"	"create function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
7366	"start"	"create procedure profiler.start() external name profiler.""start"";"	"profiler"	1	2	true	false	false	7364
7368	"stop"	"create procedure profiler.stop() external name profiler.stop;"	"profiler"	1	2	true	false	false	7364
7370	"setheartbeat"	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	"profiler"	1	2	true	false	false	7364
7373	"setpoolsize"	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	"profiler"	1	2	true	false	false	7364
7376	"setstream"	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	"profiler"	1	2	true	false	false	7364
7401	"listdir"	"create procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
7404	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
7407	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
7410	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
7446	"netcdf_attach"	"create procedure netcdf_attach(fname varchar(256))\n external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
7449	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
7453	"storage"	"create function sys.""storage""()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7485	"storage"	"create function sys.""storage""( sname string)\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7502	"storage"	"create function sys.""storage""( sname string, tname string)\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7520	"storage"	"create function sys.""storage""( sname string, tname string, cname string)\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""mode"" string,\n location string,\n ""count"" bigint,\n typewidth int,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n phash boolean,\n imprints bigint,\n sorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
7551	"storagemodelinit"	"create procedure sys.storagemodelinit()\nbegin\n delete from sys.storagemodelinput;\n insert into sys.storagemodelinput\n select x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n update sys.storagemodelinput\n set reference = true\n where concat(concat(""schema"",""table""), ""column"") in (\n select concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n from ""sys"".""keys"" as ""fkkey"",\n ""sys"".""objects"" as ""fkkeycol"",\n ""sys"".""tables"" as ""fktable"",\n ""sys"".""schemas"" as ""fkschema""\n where ""fktable"".""id"" = ""fkkey"".""table_id""\n and ""fkkey"".""id"" = ""fkkeycol"".""id""\n and ""fkschema"".""id"" = ""fktable"".""schema_id""\n and ""fkkey"".""rkey"" > -1);\n update sys.storagemodelinput\n set ""distinct"" = ""count"" \n where ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
7553	"columnsize"	"create function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n case\n when nme = 'boolean' then return i;\n when nme = 'char' then return 2*i;\n when nme = 'smallint' then return 2 * i;\n when nme = 'int' then return 4 * i;\n when nme = 'bigint' then return 8 * i;\n when nme = 'hugeint' then return 16 * i;\n when nme = 'timestamp' then return 8 * i;\n when nme = 'varchar' then\n case\n when cast(d as bigint) << 8 then return i;\n when cast(d as bigint) << 16 then return 2 * i;\n when cast(d as bigint) << 32 then return 4 * i;\n else return 8 * i;\n end case;\n else return 8 * i;\n end case;\nend;"	"user"	2	1	false	false	false	2000
7559	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n if tpe <> 'varchar' and tpe <> 'clob'\n then\n return 0;\n end if;\n return 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
7565	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n \n if b = true\n then\n return 8 * i;\n end if;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
7570	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n if nme = 'boolean'\n or nme = 'tinyint'\n or nme = 'smallint'\n or nme = 'int'\n or nme = 'bigint'\n or nme = 'hugeint'\n or nme = 'decimal'\n or nme = 'date'\n or nme = 'timestamp'\n or nme = 'real'\n or nme = 'double'\n then\n return cast( i * 0.12 as bigint);\n end if ;\n return 0;\nend;"	"user"	2	1	false	false	false	2000
7575	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n ""schema"" string,\n ""table"" string,\n ""column"" string,\n ""type"" string,\n ""count"" bigint,\n columnsize bigint,\n heapsize bigint,\n hashes bigint,\n imprints bigint,\n sorted boolean)\nbegin\n return select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n columnsize(i.""type"", i.count, i.""distinct""),\n heapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n hashsize(i.""reference"", i.""count""),\n imprintsize(i.""count"",i.""type""),\n i.sorted\n from sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
7622	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7626	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7631	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7637	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
7644	"reverse"	"create function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
7648	"fuse"	"create function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7653	"fuse"	"create function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7658	"fuse"	"create function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
7664	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	7662
7668	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	7662
7672	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	7662
7676	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	7662
7680	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	7662
7685	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	7662
7689	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	7662
7693	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	7662
7697	"seq_char"	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	"bam"	1	1	false	false	false	7662
7704	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	7662
7707	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	7662
7777	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7782	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7788	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7793	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7799	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7804	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7810	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7815	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7821	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7827	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7833	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
7839	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 13 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6668	6673	0	"spatial_ref_sys_srid_pkey"
7382	7383	0	"keywords_keyword_pkey"
7387	7391	0	"table_types_table_type_id_pkey"
7390	7391	0	"table_types_table_type_name_unique"
7395	7399	0	"dependency_types_dependency_type_id_pkey"
7398	7399	0	"dependency_types_dependency_type_name_unique"
7717	7718	0	"files_pkey_file_id"
7728	7731	0	"sq_pkey_sn_file_id"
7730	7731	1	"sq_fkey_file_id"
7747	7750	0	"rg_pkey_id_file_id"
7749	7750	1	"rg_fkey_file_id"
7759	7762	0	"pg_pkey_id_file_id"
7761	7762	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 13 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6667	6673	0	"spatial_ref_sys_srid_pkey"	-1	-1
7381	7383	0	"keywords_keyword_pkey"	-1	-1
7386	7391	0	"table_types_table_type_id_pkey"	-1	-1
7389	7391	1	"table_types_table_type_name_unique"	-1	-1
7394	7399	0	"dependency_types_dependency_type_id_pkey"	-1	-1
7397	7399	1	"dependency_types_dependency_type_name_unique"	-1	-1
7716	7718	0	"files_pkey_file_id"	-1	-1
7727	7731	0	"sq_pkey_sn_file_id"	-1	-1
7729	7731	2	"sq_fkey_file_id"	7716	514
7746	7750	0	"rg_pkey_id_file_id"	-1	-1
7748	7750	2	"rg_fkey_file_id"	7716	514
7758	7762	0	"pg_pkey_id_file_id"	-1	-1
7760	7762	2	"pg_fkey_file_id"	7716	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 32 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6668	"srid"	0
6667	"srid"	0
7382	"keyword"	0
7381	"keyword"	0
7387	"table_type_id"	0
7390	"table_type_name"	0
7386	"table_type_id"	0
7389	"table_type_name"	0
7395	"dependency_type_id"	0
7398	"dependency_type_name"	0
7394	"dependency_type_id"	0
7397	"dependency_type_name"	0
7717	"file_id"	0
7716	"file_id"	0
7728	"sn"	0
7728	"file_id"	1
7730	"file_id"	0
7727	"sn"	0
7727	"file_id"	1
7729	"file_id"	0
7747	"id"	0
7747	"file_id"	1
7749	"file_id"	0
7746	"id"	0
7746	"file_id"	1
7748	"file_id"	0
7759	"id"	0
7759	"file_id"	1
7761	"file_id"	0
7758	"id"	0
7758	"file_id"	1
7760	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 46 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5723	1	1	0	0
5733	1	1	0	0
5759	1	1	0	0
5762	1	1	0	0
5766	1	1	0	0
5773	1	16	3	0
5778	1	16	3	0
5783	1	16	3	0
5787	1	16	3	0
5791	1	16	3	0
5795	1	16	3	0
5799	1	16	3	0
5871	1	16	3	0
5876	1	16	3	0
5881	1	16	3	0
5886	1	16	3	0
5891	1	16	3	0
5896	1	16	3	0
6058	1	16	3	0
6062	1	16	3	0
6066	1	16	3	0
6070	1	16	3	0
6208	1	16	3	0
6215	1	16	3	0
6220	1	16	3	0
6226	1	16	3	0
6232	1	16	3	0
6237	1	16	3	0
6242	1	16	3	0
6246	1	16	3	0
6345	1	16	3	0
7344	1	16	3	0
7846	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 5 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
7248	"json"	3	3	true
7364	"profiler"	3	3	true
7662	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1628 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
61
62
63
64
65
66
67
68
69
70
71
75
76
77
78
81
82
83
101
102
103
104
105
106
107
108
109
110
111
112
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
60
72
73
74
79
80
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
113
114
115
116
117
118
119
120
121
5744
5747
5753
5773
5778
5783
5787
5791
5795
5799
5802
5806
5810
5814
5818
5822
5826
5830
5834
5838
5842
5846
5850
5854
5858
5865
5871
5876
5881
5886
5891
5896
5902
5906
5910
5914
5919
5923
5927
5931
5935
5939
5944
5949
5954
5959
5969
6019
6021
6023
6026
6028
6058
6062
6066
6070
6074
6078
6082
6086
6091
6096
6101
6106
6111
6116
6121
6126
6131
6136
6141
6146
6151
6156
6161
6166
6171
6175
6191
6194
6198
6201
6205
6208
6215
6220
6226
6232
6237
6242
6246
6250
6254
6258
6261
6271
6279
6292
6297
6301
6303
6307
6327
6330
6333
6336
6339
6342
6345
6357
6359
6363
6367
6371
6375
6379
6383
6387
6391
6395
6399
6403
6407
6411
6415
6419
6423
6427
6431
6435
6439
6443
6447
6451
6455
6459
6463
6467
6471
6475
6479
6483
6487
6491
6495
6499
6503
6507
6511
6515
6519
6523
6527
6531
6535
6539
6543
6547
6551
6555
6559
6563
6568
6573
6578
6583
6588
6593
6598
6603
6608
6613
6618
6623
6628
6633
6638
6643
6648
6653
6657
6661
6684
6688
6693
6698
6703
6708
6712
6716
6720
6724
6728
6732
6736
6741
6745
6749
6753
6757
6762
6767
6772
6777
6782
6787
6792
6797
6803
6808
6813
6818
6823
6827
6832
6837
6841
6845
6849
6853
6857
6861
6865
6869
6873
6877
6882
6886
6890
6894
6898
6902
6906
6911
6915
6919
6924
6928
6933
6938
6943
6948
6953
6958
6963
6968
6973
6978
6983
6988
6992
6996
7000
7004
7008
7012
7016
7020
7024
7029
7034
7040
7047
7053
7057
7062
7070
7077
7081
7086
7091
7095
7099
7103
7107
7111
7115
7119
7123
7127
7131
7135
7139
7143
7147
7151
7155
7159
7164
7168
7176
7181
7187
7194
7198
7203
7208
7214
7218
7223
7227
7233
7238
7243
7251
7256
7261
7266
7271
7276
7280
7284
7288
7292
7296
7300
7304
7308
7312
7316
7320
7324
7328
7332
7336
7340
7344
7349
7352
7356
7360
7366
7368
7370
7373
7376
7401
7404
7407
7410
7446
7449
7453
7485
7502
7520
7551
7553
7559
7565
7570
7575
7622
7626
7631
7637
7644
7648
7653
7658
7664
7668
7672
7676
7680
7685
7689
7693
7697
7704
7707
7777
7782
7788
7793
7799
7804
7810
7815
7821
7827
7833
7839
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 34 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	13	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
27	"wkb"	"geometry"	0	0	0	15	0
28	"wkba"	"geometrya"	0	0	0	16	0
29	"mbr"	"mbr"	0	0	0	16	0
5800	"url"	"url"	0	0	0	16	2000
5900	"inet"	"inet"	0	0	0	16	2000
7249	"json"	"json"	0	0	0	16	2000
7347	"uuid"	"uuid"	0	0	0	16	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

