stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convert
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure analyze()
external name sql.analyze;
create procedure analyze(tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string)
external name sql.analyze;
-- control the sample size
create procedure analyze("sample" bigint)
external name sql.analyze;
create procedure analyze(tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string, "sample" bigint)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 356 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5196	"id"	"int"	32	0	5195	NULL	true	0	NULL
5197	"name"	"varchar"	1024	0	5195	NULL	true	1	NULL
5198	"schema_id"	"int"	32	0	5195	NULL	true	2	NULL
5199	"query"	"varchar"	2048	0	5195	NULL	true	3	NULL
5200	"type"	"smallint"	16	0	5195	NULL	true	4	NULL
5201	"system"	"boolean"	1	0	5195	NULL	true	5	NULL
5202	"commit_action"	"smallint"	16	0	5195	NULL	true	6	NULL
5203	"access"	"smallint"	16	0	5195	NULL	true	7	NULL
5204	"temporary"	"smallint"	16	0	5195	NULL	true	8	NULL
5206	"id"	"int"	32	0	5205	NULL	true	0	NULL
5207	"name"	"varchar"	1024	0	5205	NULL	true	1	NULL
5208	"type"	"varchar"	1024	0	5205	NULL	true	2	NULL
5209	"type_digits"	"int"	32	0	5205	NULL	true	3	NULL
5210	"type_scale"	"int"	32	0	5205	NULL	true	4	NULL
5211	"table_id"	"int"	32	0	5205	NULL	true	5	NULL
5212	"default"	"varchar"	2048	0	5205	NULL	true	6	NULL
5213	"null"	"boolean"	1	0	5205	NULL	true	7	NULL
5214	"number"	"int"	32	0	5205	NULL	true	8	NULL
5215	"storage"	"varchar"	2048	0	5205	NULL	true	9	NULL
5222	"name"	"varchar"	1024	0	5221	NULL	true	0	NULL
5223	"fullname"	"varchar"	2048	0	5221	NULL	true	1	NULL
5224	"default_schema"	"int"	9	0	5221	NULL	true	2	NULL
5228	"name"	"varchar"	1024	0	5227	NULL	true	0	NULL
5229	"fullname"	"varchar"	2024	0	5227	NULL	true	1	NULL
5230	"default_schema"	"int"	9	0	5227	NULL	true	2	NULL
5232	"login_id"	"int"	32	0	5231	NULL	true	0	NULL
5233	"role_id"	"int"	32	0	5231	NULL	true	1	NULL
5235	"id"	"int"	32	0	5234	NULL	true	0	NULL
5236	"name"	"varchar"	1024	0	5234	NULL	true	1	NULL
5237	"grantor"	"int"	32	0	5234	NULL	true	2	NULL
5239	"obj_id"	"int"	32	0	5238	NULL	true	0	NULL
5240	"auth_id"	"int"	32	0	5238	NULL	true	1	NULL
5241	"privileges"	"int"	32	0	5238	NULL	true	2	NULL
5242	"grantor"	"int"	32	0	5238	NULL	true	3	NULL
5243	"grantable"	"int"	32	0	5238	NULL	true	4	NULL
5437	"id"	"oid"	63	0	5445	NULL	true	0	NULL
5438	"owner"	"clob"	0	0	5445	NULL	true	1	NULL
5439	"defined"	"timestamp"	7	0	5445	NULL	true	2	NULL
5440	"query"	"clob"	0	0	5445	NULL	true	3	NULL
5441	"pipe"	"clob"	0	0	5445	NULL	true	4	NULL
5442	"plan"	"clob"	0	0	5445	NULL	true	5	NULL
5443	"mal"	"int"	32	0	5445	NULL	true	6	NULL
5444	"optimize"	"bigint"	64	0	5445	NULL	true	7	NULL
5447	"id"	"oid"	63	0	5456	NULL	true	0	NULL
5448	"start"	"timestamp"	7	0	5456	NULL	true	1	NULL
5449	"stop"	"timestamp"	7	0	5456	NULL	true	2	NULL
5450	"arguments"	"clob"	0	0	5456	NULL	true	3	NULL
5451	"tuples"	"wrd"	64	0	5456	NULL	true	4	NULL
5452	"run"	"bigint"	64	0	5456	NULL	true	5	NULL
5453	"ship"	"bigint"	64	0	5456	NULL	true	6	NULL
5454	"cpu"	"int"	32	0	5456	NULL	true	7	NULL
5455	"io"	"int"	32	0	5456	NULL	true	8	NULL
5458	"id"	"oid"	63	0	5474	NULL	true	0	NULL
5459	"owner"	"clob"	0	0	5474	NULL	true	1	NULL
5460	"defined"	"timestamp"	7	0	5474	NULL	true	2	NULL
5461	"query"	"clob"	0	0	5474	NULL	true	3	NULL
5462	"pipe"	"clob"	0	0	5474	NULL	true	4	NULL
5463	"plan"	"clob"	0	0	5474	NULL	true	5	NULL
5464	"mal"	"int"	32	0	5474	NULL	true	6	NULL
5465	"optimize"	"bigint"	64	0	5474	NULL	true	7	NULL
5466	"start"	"timestamp"	7	0	5474	NULL	true	8	NULL
5467	"stop"	"timestamp"	7	0	5474	NULL	true	9	NULL
5468	"arguments"	"clob"	0	0	5474	NULL	true	10	NULL
5469	"tuples"	"wrd"	64	0	5474	NULL	true	11	NULL
5470	"run"	"bigint"	64	0	5474	NULL	true	12	NULL
5471	"ship"	"bigint"	64	0	5474	NULL	true	13	NULL
5472	"cpu"	"int"	32	0	5474	NULL	true	14	NULL
5473	"io"	"int"	32	0	5474	NULL	true	15	NULL
5500	"event"	"int"	32	0	5513	NULL	true	0	NULL
5501	"clk"	"varchar"	20	0	5513	NULL	true	1	NULL
5502	"pc"	"varchar"	50	0	5513	NULL	true	2	NULL
5503	"thread"	"int"	32	0	5513	NULL	true	3	NULL
5504	"ticks"	"bigint"	64	0	5513	NULL	true	4	NULL
5505	"rrsmb"	"bigint"	64	0	5513	NULL	true	5	NULL
5506	"vmmb"	"bigint"	64	0	5513	NULL	true	6	NULL
5507	"reads"	"bigint"	64	0	5513	NULL	true	7	NULL
5508	"writes"	"bigint"	64	0	5513	NULL	true	8	NULL
5509	"minflt"	"bigint"	64	0	5513	NULL	true	9	NULL
5510	"majflt"	"bigint"	64	0	5513	NULL	true	10	NULL
5511	"nvcsw"	"bigint"	64	0	5513	NULL	true	11	NULL
5512	"stmt"	"clob"	0	0	5513	NULL	true	12	NULL
5643	"user"	"clob"	0	0	5649	NULL	true	0	NULL
5644	"login"	"timestamp"	7	0	5649	NULL	true	1	NULL
5645	"sessiontimeout"	"bigint"	64	0	5649	NULL	true	2	NULL
5646	"lastcommand"	"timestamp"	7	0	5649	NULL	true	3	NULL
5647	"querytimeout"	"bigint"	64	0	5649	NULL	true	4	NULL
5648	"active"	"boolean"	1	0	5649	NULL	true	5	NULL
5726	"name"	"clob"	0	0	5729	NULL	true	0	NULL
5727	"def"	"clob"	0	0	5729	NULL	true	1	NULL
5728	"status"	"clob"	0	0	5729	NULL	true	2	NULL
5735	"name"	"clob"	0	0	5737	NULL	true	0	NULL
5736	"value"	"clob"	0	0	5737	NULL	true	1	NULL
5767	"qtag"	"bigint"	64	0	5775	NULL	true	0	NULL
5768	"user"	"clob"	0	0	5775	NULL	true	1	NULL
5769	"started"	"timestamp"	7	0	5775	NULL	true	2	NULL
5770	"estimate"	"timestamp"	7	0	5775	NULL	true	3	NULL
5771	"progress"	"int"	32	0	5775	NULL	true	4	NULL
5772	"status"	"clob"	0	0	5775	NULL	true	5	NULL
5773	"tag"	"oid"	63	0	5775	NULL	true	6	NULL
5774	"query"	"clob"	0	0	5775	NULL	true	7	NULL
5801	"rowid"	"bigint"	64	0	5805	NULL	true	0	NULL
5802	"fldid"	"int"	32	0	5805	NULL	true	1	NULL
5803	"message"	"clob"	0	0	5805	NULL	true	2	NULL
5804	"input"	"clob"	0	0	5805	NULL	true	3	NULL
6432	"file_id"	"int"	32	0	6434	NULL	true	0	NULL
6433	"location"	"char"	256	0	6434	NULL	true	1	NULL
6436	"dim_id"	"int"	32	0	6440	NULL	true	0	NULL
6437	"file_id"	"int"	32	0	6440	NULL	true	1	NULL
6438	"name"	"varchar"	64	0	6440	NULL	true	2	NULL
6439	"length"	"int"	32	0	6440	NULL	true	3	NULL
6442	"var_id"	"int"	32	0	6448	NULL	true	0	NULL
6443	"file_id"	"int"	32	0	6448	NULL	true	1	NULL
6444	"name"	"varchar"	64	0	6448	NULL	true	2	NULL
6445	"vartype"	"varchar"	64	0	6448	NULL	true	3	NULL
6446	"ndim"	"int"	32	0	6448	NULL	true	4	NULL
6447	"coord_dim_id"	"int"	32	0	6448	NULL	true	5	NULL
6450	"var_id"	"int"	32	0	6454	NULL	true	0	NULL
6451	"dim_id"	"int"	32	0	6454	NULL	true	1	NULL
6452	"file_id"	"int"	32	0	6454	NULL	true	2	NULL
6453	"dimpos"	"int"	32	0	6454	NULL	true	3	NULL
6456	"obj_name"	"varchar"	256	0	6462	NULL	true	0	NULL
6457	"att_name"	"varchar"	256	0	6462	NULL	true	1	NULL
6458	"att_type"	"varchar"	64	0	6462	NULL	true	2	NULL
6459	"value"	"clob"	0	0	6462	NULL	true	3	NULL
6460	"file_id"	"int"	32	0	6462	NULL	true	4	NULL
6461	"gr_name"	"varchar"	256	0	6462	NULL	true	5	NULL
6487	"schema"	"clob"	0	0	6501	NULL	true	0	NULL
6488	"table"	"clob"	0	0	6501	NULL	true	1	NULL
6489	"column"	"clob"	0	0	6501	NULL	true	2	NULL
6490	"type"	"clob"	0	0	6501	NULL	true	3	NULL
6491	"mode"	"clob"	0	0	6501	NULL	true	4	NULL
6492	"location"	"clob"	0	0	6501	NULL	true	5	NULL
6493	"count"	"bigint"	64	0	6501	NULL	true	6	NULL
6494	"typewidth"	"int"	32	0	6501	NULL	true	7	NULL
6495	"columnsize"	"bigint"	64	0	6501	NULL	true	8	NULL
6496	"heapsize"	"bigint"	64	0	6501	NULL	true	9	NULL
6497	"hashes"	"bigint"	64	0	6501	NULL	true	10	NULL
6498	"phash"	"boolean"	1	0	6501	NULL	true	11	NULL
6499	"imprints"	"bigint"	64	0	6501	NULL	true	12	NULL
6500	"sorted"	"boolean"	1	0	6501	NULL	true	13	NULL
6503	"schema"	"clob"	0	0	6513	NULL	true	0	NULL
6504	"table"	"clob"	0	0	6513	NULL	true	1	NULL
6505	"column"	"clob"	0	0	6513	NULL	true	2	NULL
6506	"type"	"clob"	0	0	6513	NULL	true	3	NULL
6507	"typewidth"	"int"	32	0	6513	NULL	true	4	NULL
6508	"count"	"bigint"	64	0	6513	NULL	true	5	NULL
6509	"distinct"	"bigint"	64	0	6513	NULL	true	6	NULL
6510	"atomwidth"	"int"	32	0	6513	NULL	true	7	NULL
6511	"reference"	"boolean"	1	0	6513	NULL	true	8	NULL
6512	"sorted"	"boolean"	1	0	6513	NULL	true	9	NULL
6551	"schema"	"clob"	0	0	6561	NULL	true	0	NULL
6552	"table"	"clob"	0	0	6561	NULL	true	1	NULL
6553	"column"	"clob"	0	0	6561	NULL	true	2	NULL
6554	"type"	"clob"	0	0	6561	NULL	true	3	NULL
6555	"count"	"bigint"	64	0	6561	NULL	true	4	NULL
6556	"columnsize"	"bigint"	64	0	6561	NULL	true	5	NULL
6557	"heapsize"	"bigint"	64	0	6561	NULL	true	6	NULL
6558	"hashes"	"bigint"	64	0	6561	NULL	true	7	NULL
6559	"imprints"	"bigint"	64	0	6561	NULL	true	8	NULL
6560	"sorted"	"boolean"	1	0	6561	NULL	true	9	NULL
6563	"schema"	"clob"	0	0	6571	NULL	true	0	NULL
6564	"table"	"clob"	0	0	6571	NULL	true	1	NULL
6565	"count"	"bigint"	64	0	6571	NULL	true	2	NULL
6566	"columnsize"	"bigint"	64	0	6571	NULL	true	3	NULL
6567	"heapsize"	"bigint"	64	0	6571	NULL	true	4	NULL
6568	"hashes"	"bigint"	64	0	6571	NULL	true	5	NULL
6569	"imprints"	"bigint"	64	0	6571	NULL	true	6	NULL
6570	"auxiliary"	"bigint"	64	0	6571	NULL	true	7	NULL
6573	"column_id"	"int"	32	0	6584	NULL	true	0	NULL
6574	"type"	"clob"	0	0	6584	NULL	true	1	NULL
6575	"width"	"int"	32	0	6584	NULL	true	2	NULL
6576	"stamp"	"timestamp"	7	0	6584	NULL	true	3	NULL
6577	"sample"	"bigint"	64	0	6584	NULL	true	4	NULL
6578	"count"	"bigint"	64	0	6584	NULL	true	5	NULL
6579	"unique"	"bigint"	64	0	6584	NULL	true	6	NULL
6580	"nils"	"bigint"	64	0	6584	NULL	true	7	NULL
6581	"minval"	"clob"	0	0	6584	NULL	true	8	NULL
6582	"maxval"	"clob"	0	0	6584	NULL	true	9	NULL
6583	"sorted"	"boolean"	1	0	6584	NULL	true	10	NULL
6679	"file_id"	"bigint"	64	0	6687	NULL	false	0	NULL
6680	"file_location"	"clob"	0	0	6687	NULL	false	1	NULL
6681	"dbschema"	"smallint"	16	0	6687	NULL	false	2	NULL
6682	"format_version"	"varchar"	7	0	6687	NULL	true	3	NULL
6683	"sorting_order"	"varchar"	10	0	6687	NULL	true	4	NULL
6684	"comments"	"clob"	0	0	6687	NULL	true	5	NULL
6689	"sn"	"clob"	0	0	6700	NULL	false	0	NULL
6690	"file_id"	"bigint"	64	0	6700	NULL	false	1	NULL
6691	"ln"	"int"	32	0	6700	NULL	true	2	NULL
6692	"as"	"int"	32	0	6700	NULL	true	3	NULL
6693	"m5"	"clob"	0	0	6700	NULL	true	4	NULL
6694	"sp"	"clob"	0	0	6700	NULL	true	5	NULL
6695	"ur"	"clob"	0	0	6700	NULL	true	6	NULL
6702	"id"	"clob"	0	0	6719	NULL	false	0	NULL
6703	"file_id"	"bigint"	64	0	6719	NULL	false	1	NULL
6704	"cn"	"clob"	0	0	6719	NULL	true	2	NULL
6705	"ds"	"clob"	0	0	6719	NULL	true	3	NULL
6706	"dt"	"timestamp"	7	0	6719	NULL	true	4	NULL
6707	"fo"	"clob"	0	0	6719	NULL	true	5	NULL
6708	"ks"	"clob"	0	0	6719	NULL	true	6	NULL
6709	"lb"	"clob"	0	0	6719	NULL	true	7	NULL
6710	"pg"	"clob"	0	0	6719	NULL	true	8	NULL
6711	"pi"	"int"	32	0	6719	NULL	true	9	NULL
6712	"pl"	"clob"	0	0	6719	NULL	true	10	NULL
6713	"pu"	"clob"	0	0	6719	NULL	true	11	NULL
6714	"sm"	"clob"	0	0	6719	NULL	true	12	NULL
6721	"id"	"clob"	0	0	6731	NULL	false	0	NULL
6722	"file_id"	"bigint"	64	0	6731	NULL	false	1	NULL
6723	"pn"	"clob"	0	0	6731	NULL	true	2	NULL
6724	"cl"	"clob"	0	0	6731	NULL	true	3	NULL
6725	"pp"	"clob"	0	0	6731	NULL	true	4	NULL
6726	"vn"	"clob"	0	0	6731	NULL	true	5	NULL
6733	"qname"	"clob"	0	0	6744	NULL	false	0	NULL
6734	"flag"	"smallint"	16	0	6744	NULL	false	1	NULL
6735	"rname"	"clob"	0	0	6744	NULL	false	2	NULL
6736	"pos"	"int"	32	0	6744	NULL	false	3	NULL
6737	"mapq"	"smallint"	16	0	6744	NULL	false	4	NULL
6738	"cigar"	"clob"	0	0	6744	NULL	false	5	NULL
6739	"rnext"	"clob"	0	0	6744	NULL	false	6	NULL
6740	"pnext"	"int"	32	0	6744	NULL	false	7	NULL
6741	"tlen"	"int"	32	0	6744	NULL	false	8	NULL
6742	"seq"	"clob"	0	0	6744	NULL	false	9	NULL
6743	"qual"	"clob"	0	0	6744	NULL	false	10	NULL
6814	"function_id"	"int"	32	0	6815	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 51 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5195	"tables"	2000	"SELECT * FROM (SELECT p.*, 0 AS ""temporary"" FROM ""sys"".""_tables"" AS p UNION ALL SELECT t.*, 1 AS ""temporary"" FROM ""tmp"".""_tables"" AS t) AS tables where tables.type <> 2;"	1	true	0	0
5205	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5221	"db_user_info"	2000	NULL	0	true	0	0
5227	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5231	"user_role"	2000	NULL	0	true	0	0
5234	"auths"	2000	NULL	0	true	0	0
5238	"privileges"	2000	NULL	0	true	0	0
5445	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5456	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5474	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5513	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5649	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5729	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
5737	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
5775	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
5805	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6434	"netcdf_files"	2000	NULL	0	true	0	0
6440	"netcdf_dims"	2000	NULL	0	true	0	0
6448	"netcdf_vars"	2000	NULL	0	true	0	0
6454	"netcdf_vardim"	2000	NULL	0	true	0	0
6462	"netcdf_attrs"	2000	NULL	0	true	0	0
6501	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6513	"storagemodelinput"	2000	NULL	0	true	0	0
6561	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6571	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6584	"statistics"	2000	NULL	0	true	0	0
6687	"files"	6636	NULL	0	true	0	0
6700	"sq"	6636	NULL	0	true	0	0
6719	"rg"	6636	NULL	0	true	0	0
6731	"pg"	6636	NULL	0	true	0	0
6744	"export"	6636	NULL	0	true	0	0
6815	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 3775 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	28	"res_0"	"oid"	63	0	0	0
2156	28	"arg_1"	"wrd"	64	0	1	1
2157	29	"res_0"	"oid"	63	0	0	0
2158	29	"arg_1"	"oid"	63	0	1	1
2159	30	"res_0"	"wrd"	64	0	0	0
2160	30	"arg_1"	"any"	0	0	1	1
2161	31	"res_0"	"wrd"	64	0	0	0
2162	31	"arg_1"	"wrd"	64	0	1	1
2163	31	"arg_2"	"int"	32	0	1	2
2164	31	"arg_3"	"any"	0	0	1	3
2165	32	"res_0"	"boolean"	1	0	0	0
2166	32	"arg_1"	"any"	0	0	1	1
2167	32	"arg_2"	"any"	0	0	1	2
2168	33	"res_0"	"boolean"	1	0	0	0
2169	33	"arg_1"	"any"	0	0	1	1
2170	33	"arg_2"	"any"	0	0	1	2
2171	34	"res_0"	"boolean"	1	0	0	0
2172	34	"arg_1"	"any"	0	0	1	1
2173	35	"res_0"	"boolean"	1	0	0	0
2174	35	"arg_1"	"any"	0	0	1	1
2175	35	"arg_2"	"any"	0	0	1	2
2176	36	"res_0"	"boolean"	1	0	0	0
2177	36	"arg_1"	"any"	0	0	1	1
2178	36	"arg_2"	"any"	0	0	1	2
2179	37	"res_0"	"boolean"	1	0	0	0
2180	37	"arg_1"	"any"	0	0	1	1
2181	37	"arg_2"	"any"	0	0	1	2
2182	38	"res_0"	"boolean"	1	0	0	0
2183	38	"arg_1"	"any"	0	0	1	1
2184	38	"arg_2"	"any"	0	0	1	2
2185	42	"res_0"	"boolean"	1	0	0	0
2186	42	"arg_1"	"any"	0	0	1	1
2187	42	"arg_2"	"any"	0	0	1	2
2188	43	"res_0"	"oid"	63	0	0	0
2189	43	"arg_1"	"any"	0	0	1	1
2190	44	"res_0"	"int"	32	0	0	0
2191	44	"arg_1"	"any"	0	0	1	1
2192	45	"res_0"	"oid"	63	0	0	0
2193	45	"arg_1"	"any"	0	0	1	1
2194	45	"arg_2"	"varchar"	0	0	1	2
2195	45	"arg_3"	"varchar"	0	0	1	3
2196	48	"res_0"	"any"	0	0	0	0
2197	48	"arg_1"	"any"	0	0	1	1
2198	48	"arg_2"	"any"	0	0	1	2
2199	49	"res_0"	"any"	0	0	0	0
2200	49	"arg_1"	"any"	0	0	1	1
2201	49	"arg_2"	"any"	0	0	1	2
2202	50	"res_0"	"any"	0	0	0	0
2203	50	"arg_1"	"boolean"	1	0	1	1
2204	50	"arg_2"	"any"	0	0	1	2
2205	50	"arg_3"	"any"	0	0	1	3
2206	69	"res_0"	"oid"	63	0	0	0
2207	69	"arg_1"	"oid"	63	0	1	1
2208	69	"arg_2"	"oid"	63	0	1	2
2209	70	"res_0"	"tinyint"	8	0	0	0
2210	70	"arg_1"	"tinyint"	8	0	1	1
2211	70	"arg_2"	"tinyint"	8	0	1	2
2212	71	"res_0"	"smallint"	16	0	0	0
2213	71	"arg_1"	"smallint"	16	0	1	1
2214	71	"arg_2"	"smallint"	16	0	1	2
2215	72	"res_0"	"int"	32	0	0	0
2216	72	"arg_1"	"int"	32	0	1	1
2217	72	"arg_2"	"int"	32	0	1	2
2218	73	"res_0"	"bigint"	64	0	0	0
2219	73	"arg_1"	"bigint"	64	0	1	1
2220	73	"arg_2"	"bigint"	64	0	1	2
2221	74	"res_0"	"wrd"	64	0	0	0
2222	74	"arg_1"	"wrd"	64	0	1	1
2223	74	"arg_2"	"wrd"	64	0	1	2
2224	75	"res_0"	"decimal"	2	0	0	0
2225	75	"arg_1"	"decimal"	2	0	1	1
2226	75	"arg_2"	"decimal"	2	0	1	2
2227	76	"res_0"	"decimal"	4	0	0	0
2228	76	"arg_1"	"decimal"	4	0	1	1
2229	76	"arg_2"	"decimal"	4	0	1	2
2230	77	"res_0"	"decimal"	9	0	0	0
2231	77	"arg_1"	"decimal"	9	0	1	1
2232	77	"arg_2"	"decimal"	9	0	1	2
2233	78	"res_0"	"decimal"	19	0	0	0
2234	78	"arg_1"	"decimal"	19	0	1	1
2235	78	"arg_2"	"decimal"	19	0	1	2
2236	79	"res_0"	"real"	24	0	0	0
2237	79	"arg_1"	"real"	24	0	1	1
2238	79	"arg_2"	"real"	24	0	1	2
2239	80	"res_0"	"double"	53	0	0	0
2240	80	"arg_1"	"double"	53	0	1	1
2241	80	"arg_2"	"double"	53	0	1	2
2242	88	"res_0"	"int"	32	0	0	0
2243	88	"arg_1"	"any"	0	0	1	1
2244	89	"res_0"	"int"	32	0	0	0
2245	89	"arg_1"	"any"	0	0	1	1
2246	90	"res_0"	"int"	32	0	0	0
2247	90	"arg_1"	"any"	0	0	1	1
2248	91	"res_0"	"any"	0	0	0	0
2249	91	"arg_1"	"any"	0	0	1	1
2250	92	"res_0"	"int"	32	0	0	0
2251	92	"arg_1"	"any"	0	0	1	1
2252	93	"res_0"	"int"	32	0	0	0
2253	93	"arg_1"	"any"	0	0	1	1
2254	93	"arg_2"	"oid"	63	0	1	2
2255	93	"arg_3"	"any"	0	0	1	3
2256	94	"res_0"	"int"	32	0	0	0
2257	94	"arg_1"	"any"	0	0	1	1
2258	94	"arg_2"	"oid"	63	0	1	2
2259	94	"arg_3"	"any"	0	0	1	3
2260	95	"res_0"	"int"	32	0	0	0
2261	95	"arg_1"	"any"	0	0	1	1
2262	95	"arg_2"	"oid"	63	0	1	2
2263	95	"arg_3"	"any"	0	0	1	3
2264	96	"res_0"	"any"	0	0	0	0
2265	96	"arg_1"	"any"	0	0	1	1
2266	96	"arg_2"	"oid"	63	0	1	2
2267	96	"arg_3"	"any"	0	0	1	3
2268	97	"res_0"	"int"	32	0	0	0
2269	97	"arg_1"	"any"	0	0	1	1
2270	97	"arg_2"	"oid"	63	0	1	2
2271	97	"arg_3"	"any"	0	0	1	3
2272	98	"res_0"	"int"	32	0	0	0
2273	98	"arg_1"	"any"	0	0	1	1
2274	98	"arg_2"	"oid"	63	0	1	2
2275	98	"arg_3"	"oid"	63	0	1	3
2276	98	"arg_4"	"oid"	63	0	1	4
2277	99	"res_0"	"int"	32	0	0	0
2278	99	"arg_1"	"any"	0	0	1	1
2279	99	"arg_2"	"oid"	63	0	1	2
2280	99	"arg_3"	"oid"	63	0	1	3
2281	99	"arg_4"	"oid"	63	0	1	4
2282	100	"res_0"	"int"	32	0	0	0
2283	100	"arg_1"	"any"	0	0	1	1
2284	100	"arg_2"	"oid"	63	0	1	2
2285	100	"arg_3"	"oid"	63	0	1	3
2286	100	"arg_4"	"oid"	63	0	1	4
2287	101	"res_0"	"any"	0	0	0	0
2288	101	"arg_1"	"any"	0	0	1	1
2289	101	"arg_2"	"oid"	63	0	1	2
2290	101	"arg_3"	"oid"	63	0	1	3
2291	101	"arg_4"	"oid"	63	0	1	4
2292	102	"res_0"	"int"	32	0	0	0
2293	102	"arg_1"	"any"	0	0	1	1
2294	102	"arg_2"	"oid"	63	0	1	2
2295	102	"arg_3"	"oid"	63	0	1	3
2296	102	"arg_4"	"oid"	63	0	1	4
2297	103	"res_0"	"any"	0	0	0	0
2298	103	"arg_1"	"any"	0	0	1	1
2299	104	"res_0"	"any"	0	0	0	0
2300	104	"arg_1"	"any"	0	0	1	1
2301	105	"res_0"	"any"	0	0	0	0
2302	105	"arg_1"	"any"	0	0	1	1
2303	105	"arg_2"	"int"	32	0	1	2
2304	106	"res_0"	"any"	0	0	0	0
2305	106	"arg_1"	"any"	0	0	1	1
2306	106	"arg_2"	"int"	32	0	1	2
2307	107	"res_0"	"any"	0	0	0	0
2308	107	"arg_1"	"any"	0	0	1	1
2309	107	"arg_2"	"oid"	63	0	1	2
2310	107	"arg_3"	"oid"	63	0	1	3
2311	108	"res_0"	"any"	0	0	0	0
2312	108	"arg_1"	"any"	0	0	1	1
2313	108	"arg_2"	"oid"	63	0	1	2
2314	108	"arg_3"	"oid"	63	0	1	3
2315	109	"res_0"	"any"	0	0	0	0
2316	109	"arg_1"	"any"	0	0	1	1
2317	109	"arg_2"	"int"	32	0	1	2
2318	109	"arg_3"	"oid"	63	0	1	3
2319	109	"arg_4"	"oid"	63	0	1	4
2320	110	"res_0"	"any"	0	0	0	0
2321	110	"arg_1"	"any"	0	0	1	1
2322	110	"arg_2"	"int"	32	0	1	2
2323	110	"arg_3"	"oid"	63	0	1	3
2324	110	"arg_4"	"oid"	63	0	1	4
2325	111	"res_0"	"boolean"	1	0	0	0
2326	111	"arg_1"	"boolean"	1	0	1	1
2327	111	"arg_2"	"boolean"	1	0	1	2
2328	112	"res_0"	"boolean"	1	0	0	0
2329	112	"arg_1"	"boolean"	1	0	1	1
2330	112	"arg_2"	"boolean"	1	0	1	2
2331	113	"res_0"	"boolean"	1	0	0	0
2332	113	"arg_1"	"boolean"	1	0	1	1
2333	113	"arg_2"	"boolean"	1	0	1	2
2334	114	"res_0"	"boolean"	1	0	0	0
2335	114	"arg_1"	"boolean"	1	0	1	1
2336	115	"res_0"	"oid"	63	0	0	0
2337	115	"arg_1"	"oid"	63	0	1	1
2338	115	"arg_2"	"oid"	63	0	1	2
2339	116	"res_0"	"oid"	63	0	0	0
2340	116	"arg_1"	"oid"	63	0	1	1
2341	116	"arg_2"	"oid"	63	0	1	2
2342	117	"res_0"	"oid"	63	0	0	0
2343	117	"arg_1"	"oid"	63	0	1	1
2344	117	"arg_2"	"oid"	63	0	1	2
2345	118	"res_0"	"oid"	63	0	0	0
2346	118	"arg_1"	"oid"	63	0	1	1
2347	118	"arg_2"	"oid"	63	0	1	2
2348	119	"res_0"	"oid"	63	0	0	0
2349	119	"arg_1"	"oid"	63	0	1	1
2350	119	"arg_2"	"oid"	63	0	1	2
2351	120	"res_0"	"oid"	63	0	0	0
2352	120	"arg_1"	"oid"	63	0	1	1
2353	120	"arg_2"	"oid"	63	0	1	2
2354	121	"res_0"	"oid"	63	0	0	0
2355	121	"arg_1"	"oid"	63	0	1	1
2356	121	"arg_2"	"oid"	63	0	1	2
2357	122	"res_0"	"oid"	63	0	0	0
2358	122	"arg_1"	"oid"	63	0	1	1
2359	123	"res_0"	"oid"	63	0	0	0
2360	123	"arg_1"	"oid"	63	0	1	1
2361	123	"arg_2"	"int"	32	0	1	2
2362	124	"res_0"	"oid"	63	0	0	0
2363	124	"arg_1"	"oid"	63	0	1	1
2364	124	"arg_2"	"int"	32	0	1	2
2365	125	"res_0"	"oid"	63	0	0	0
2366	125	"arg_1"	"oid"	63	0	1	1
2367	126	"res_0"	"oid"	63	0	0	0
2368	126	"arg_1"	"oid"	63	0	1	1
2369	127	"res_0"	"tinyint"	8	0	0	0
2370	127	"arg_1"	"oid"	63	0	1	1
2371	128	"res_0"	"oid"	63	0	0	0
2372	128	"arg_1"	"oid"	63	0	1	1
2373	128	"arg_2"	"oid"	63	0	1	2
2374	129	"res_0"	"oid"	63	0	0	0
2375	129	"arg_1"	"oid"	63	0	1	1
2376	129	"arg_2"	"oid"	63	0	1	2
2377	130	"res_0"	"month_interval"	32	0	0	0
2378	130	"arg_1"	"month_interval"	32	0	1	1
2379	130	"arg_2"	"oid"	63	0	1	2
2380	131	"res_0"	"month_interval"	32	0	0	0
2381	131	"arg_1"	"month_interval"	32	0	1	1
2382	131	"arg_2"	"oid"	63	0	1	2
2383	132	"res_0"	"month_interval"	32	0	0	0
2384	132	"arg_1"	"month_interval"	32	0	1	1
2385	132	"arg_2"	"oid"	63	0	1	2
2386	133	"res_0"	"month_interval"	32	0	0	0
2387	133	"arg_1"	"month_interval"	32	0	1	1
2388	133	"arg_2"	"oid"	63	0	1	2
2389	134	"res_0"	"sec_interval"	19	0	0	0
2390	134	"arg_1"	"sec_interval"	19	0	1	1
2391	134	"arg_2"	"oid"	63	0	1	2
2392	135	"res_0"	"sec_interval"	19	0	0	0
2393	135	"arg_1"	"sec_interval"	19	0	1	1
2394	135	"arg_2"	"oid"	63	0	1	2
2395	136	"res_0"	"sec_interval"	19	0	0	0
2396	136	"arg_1"	"sec_interval"	19	0	1	1
2397	136	"arg_2"	"oid"	63	0	1	2
2398	137	"res_0"	"sec_interval"	19	0	0	0
2399	137	"arg_1"	"sec_interval"	19	0	1	1
2400	137	"arg_2"	"oid"	63	0	1	2
2401	138	"res_0"	"tinyint"	8	0	0	0
2402	138	"arg_1"	"tinyint"	8	0	1	1
2403	138	"arg_2"	"tinyint"	8	0	1	2
2404	139	"res_0"	"tinyint"	8	0	0	0
2405	139	"arg_1"	"tinyint"	8	0	1	1
2406	139	"arg_2"	"tinyint"	8	0	1	2
2407	140	"res_0"	"tinyint"	8	0	0	0
2408	140	"arg_1"	"tinyint"	8	0	1	1
2409	140	"arg_2"	"tinyint"	8	0	1	2
2410	141	"res_0"	"tinyint"	8	0	0	0
2411	141	"arg_1"	"tinyint"	8	0	1	1
2412	141	"arg_2"	"tinyint"	8	0	1	2
2413	142	"res_0"	"tinyint"	8	0	0	0
2414	142	"arg_1"	"tinyint"	8	0	1	1
2415	142	"arg_2"	"tinyint"	8	0	1	2
2416	143	"res_0"	"tinyint"	8	0	0	0
2417	143	"arg_1"	"tinyint"	8	0	1	1
2418	143	"arg_2"	"tinyint"	8	0	1	2
2419	144	"res_0"	"tinyint"	8	0	0	0
2420	144	"arg_1"	"tinyint"	8	0	1	1
2421	144	"arg_2"	"tinyint"	8	0	1	2
2422	145	"res_0"	"tinyint"	8	0	0	0
2423	145	"arg_1"	"tinyint"	8	0	1	1
2424	146	"res_0"	"tinyint"	8	0	0	0
2425	146	"arg_1"	"tinyint"	8	0	1	1
2426	146	"arg_2"	"int"	32	0	1	2
2427	147	"res_0"	"tinyint"	8	0	0	0
2428	147	"arg_1"	"tinyint"	8	0	1	1
2429	147	"arg_2"	"int"	32	0	1	2
2430	148	"res_0"	"tinyint"	8	0	0	0
2431	148	"arg_1"	"tinyint"	8	0	1	1
2432	149	"res_0"	"tinyint"	8	0	0	0
2433	149	"arg_1"	"tinyint"	8	0	1	1
2434	150	"res_0"	"tinyint"	8	0	0	0
2435	150	"arg_1"	"tinyint"	8	0	1	1
2436	151	"res_0"	"tinyint"	8	0	0	0
2437	151	"arg_1"	"tinyint"	8	0	1	1
2438	151	"arg_2"	"tinyint"	8	0	1	2
2439	152	"res_0"	"tinyint"	8	0	0	0
2440	152	"arg_1"	"tinyint"	8	0	1	1
2441	152	"arg_2"	"tinyint"	8	0	1	2
2442	153	"res_0"	"month_interval"	32	0	0	0
2443	153	"arg_1"	"month_interval"	32	0	1	1
2444	153	"arg_2"	"tinyint"	8	0	1	2
2445	154	"res_0"	"month_interval"	32	0	0	0
2446	154	"arg_1"	"month_interval"	32	0	1	1
2447	154	"arg_2"	"tinyint"	8	0	1	2
2448	155	"res_0"	"month_interval"	32	0	0	0
2449	155	"arg_1"	"month_interval"	32	0	1	1
2450	155	"arg_2"	"tinyint"	8	0	1	2
2451	156	"res_0"	"month_interval"	32	0	0	0
2452	156	"arg_1"	"month_interval"	32	0	1	1
2453	156	"arg_2"	"tinyint"	8	0	1	2
2454	157	"res_0"	"sec_interval"	19	0	0	0
2455	157	"arg_1"	"sec_interval"	19	0	1	1
2456	157	"arg_2"	"tinyint"	8	0	1	2
2457	158	"res_0"	"sec_interval"	19	0	0	0
2458	158	"arg_1"	"sec_interval"	19	0	1	1
2459	158	"arg_2"	"tinyint"	8	0	1	2
2460	159	"res_0"	"sec_interval"	19	0	0	0
2461	159	"arg_1"	"sec_interval"	19	0	1	1
2462	159	"arg_2"	"tinyint"	8	0	1	2
2463	160	"res_0"	"sec_interval"	19	0	0	0
2464	160	"arg_1"	"sec_interval"	19	0	1	1
2465	160	"arg_2"	"tinyint"	8	0	1	2
2466	161	"res_0"	"smallint"	16	0	0	0
2467	161	"arg_1"	"smallint"	16	0	1	1
2468	161	"arg_2"	"smallint"	16	0	1	2
2469	162	"res_0"	"smallint"	16	0	0	0
2470	162	"arg_1"	"smallint"	16	0	1	1
2471	162	"arg_2"	"smallint"	16	0	1	2
2472	163	"res_0"	"smallint"	16	0	0	0
2473	163	"arg_1"	"smallint"	16	0	1	1
2474	163	"arg_2"	"smallint"	16	0	1	2
2475	164	"res_0"	"smallint"	16	0	0	0
2476	164	"arg_1"	"smallint"	16	0	1	1
2477	164	"arg_2"	"smallint"	16	0	1	2
2478	165	"res_0"	"smallint"	16	0	0	0
2479	165	"arg_1"	"smallint"	16	0	1	1
2480	165	"arg_2"	"smallint"	16	0	1	2
2481	166	"res_0"	"smallint"	16	0	0	0
2482	166	"arg_1"	"smallint"	16	0	1	1
2483	166	"arg_2"	"smallint"	16	0	1	2
2484	167	"res_0"	"smallint"	16	0	0	0
2485	167	"arg_1"	"smallint"	16	0	1	1
2486	167	"arg_2"	"smallint"	16	0	1	2
2487	168	"res_0"	"smallint"	16	0	0	0
2488	168	"arg_1"	"smallint"	16	0	1	1
2489	169	"res_0"	"smallint"	16	0	0	0
2490	169	"arg_1"	"smallint"	16	0	1	1
2491	169	"arg_2"	"int"	32	0	1	2
2492	170	"res_0"	"smallint"	16	0	0	0
2493	170	"arg_1"	"smallint"	16	0	1	1
2494	170	"arg_2"	"int"	32	0	1	2
2495	171	"res_0"	"smallint"	16	0	0	0
2496	171	"arg_1"	"smallint"	16	0	1	1
2497	172	"res_0"	"smallint"	16	0	0	0
2498	172	"arg_1"	"smallint"	16	0	1	1
2499	173	"res_0"	"tinyint"	8	0	0	0
2500	173	"arg_1"	"smallint"	16	0	1	1
2501	174	"res_0"	"smallint"	16	0	0	0
2502	174	"arg_1"	"smallint"	16	0	1	1
2503	174	"arg_2"	"smallint"	16	0	1	2
2504	175	"res_0"	"smallint"	16	0	0	0
2505	175	"arg_1"	"smallint"	16	0	1	1
2506	175	"arg_2"	"smallint"	16	0	1	2
2507	176	"res_0"	"month_interval"	32	0	0	0
2508	176	"arg_1"	"month_interval"	32	0	1	1
2509	176	"arg_2"	"smallint"	16	0	1	2
2510	177	"res_0"	"month_interval"	32	0	0	0
2511	177	"arg_1"	"month_interval"	32	0	1	1
2512	177	"arg_2"	"smallint"	16	0	1	2
2513	178	"res_0"	"month_interval"	32	0	0	0
2514	178	"arg_1"	"month_interval"	32	0	1	1
2515	178	"arg_2"	"smallint"	16	0	1	2
2516	179	"res_0"	"month_interval"	32	0	0	0
2517	179	"arg_1"	"month_interval"	32	0	1	1
2518	179	"arg_2"	"smallint"	16	0	1	2
2519	180	"res_0"	"sec_interval"	19	0	0	0
2520	180	"arg_1"	"sec_interval"	19	0	1	1
2521	180	"arg_2"	"smallint"	16	0	1	2
2522	181	"res_0"	"sec_interval"	19	0	0	0
2523	181	"arg_1"	"sec_interval"	19	0	1	1
2524	181	"arg_2"	"smallint"	16	0	1	2
2525	182	"res_0"	"sec_interval"	19	0	0	0
2526	182	"arg_1"	"sec_interval"	19	0	1	1
2527	182	"arg_2"	"smallint"	16	0	1	2
2528	183	"res_0"	"sec_interval"	19	0	0	0
2529	183	"arg_1"	"sec_interval"	19	0	1	1
2530	183	"arg_2"	"smallint"	16	0	1	2
2531	184	"res_0"	"int"	32	0	0	0
2532	184	"arg_1"	"int"	32	0	1	1
2533	184	"arg_2"	"int"	32	0	1	2
2534	185	"res_0"	"int"	32	0	0	0
2535	185	"arg_1"	"int"	32	0	1	1
2536	185	"arg_2"	"int"	32	0	1	2
2537	186	"res_0"	"int"	32	0	0	0
2538	186	"arg_1"	"int"	32	0	1	1
2539	186	"arg_2"	"int"	32	0	1	2
2540	187	"res_0"	"int"	32	0	0	0
2541	187	"arg_1"	"int"	32	0	1	1
2542	187	"arg_2"	"int"	32	0	1	2
2543	188	"res_0"	"int"	32	0	0	0
2544	188	"arg_1"	"int"	32	0	1	1
2545	188	"arg_2"	"int"	32	0	1	2
2546	189	"res_0"	"int"	32	0	0	0
2547	189	"arg_1"	"int"	32	0	1	1
2548	189	"arg_2"	"int"	32	0	1	2
2549	190	"res_0"	"int"	32	0	0	0
2550	190	"arg_1"	"int"	32	0	1	1
2551	190	"arg_2"	"int"	32	0	1	2
2552	191	"res_0"	"int"	32	0	0	0
2553	191	"arg_1"	"int"	32	0	1	1
2554	192	"res_0"	"int"	32	0	0	0
2555	192	"arg_1"	"int"	32	0	1	1
2556	192	"arg_2"	"int"	32	0	1	2
2557	193	"res_0"	"int"	32	0	0	0
2558	193	"arg_1"	"int"	32	0	1	1
2559	193	"arg_2"	"int"	32	0	1	2
2560	194	"res_0"	"int"	32	0	0	0
2561	194	"arg_1"	"int"	32	0	1	1
2562	195	"res_0"	"int"	32	0	0	0
2563	195	"arg_1"	"int"	32	0	1	1
2564	196	"res_0"	"tinyint"	8	0	0	0
2565	196	"arg_1"	"int"	32	0	1	1
2566	197	"res_0"	"int"	32	0	0	0
2567	197	"arg_1"	"int"	32	0	1	1
2568	197	"arg_2"	"int"	32	0	1	2
2569	198	"res_0"	"int"	32	0	0	0
2570	198	"arg_1"	"int"	32	0	1	1
2571	198	"arg_2"	"int"	32	0	1	2
2572	199	"res_0"	"month_interval"	32	0	0	0
2573	199	"arg_1"	"month_interval"	32	0	1	1
2574	199	"arg_2"	"int"	32	0	1	2
2575	200	"res_0"	"month_interval"	32	0	0	0
2576	200	"arg_1"	"month_interval"	32	0	1	1
2577	200	"arg_2"	"int"	32	0	1	2
2578	201	"res_0"	"month_interval"	32	0	0	0
2579	201	"arg_1"	"month_interval"	32	0	1	1
2580	201	"arg_2"	"int"	32	0	1	2
2581	202	"res_0"	"month_interval"	32	0	0	0
2582	202	"arg_1"	"month_interval"	32	0	1	1
2583	202	"arg_2"	"int"	32	0	1	2
2584	203	"res_0"	"sec_interval"	19	0	0	0
2585	203	"arg_1"	"sec_interval"	19	0	1	1
2586	203	"arg_2"	"int"	32	0	1	2
2587	204	"res_0"	"sec_interval"	19	0	0	0
2588	204	"arg_1"	"sec_interval"	19	0	1	1
2589	204	"arg_2"	"int"	32	0	1	2
2590	205	"res_0"	"sec_interval"	19	0	0	0
2591	205	"arg_1"	"sec_interval"	19	0	1	1
2592	205	"arg_2"	"int"	32	0	1	2
2593	206	"res_0"	"sec_interval"	19	0	0	0
2594	206	"arg_1"	"sec_interval"	19	0	1	1
2595	206	"arg_2"	"int"	32	0	1	2
2596	207	"res_0"	"bigint"	64	0	0	0
2597	207	"arg_1"	"bigint"	64	0	1	1
2598	207	"arg_2"	"bigint"	64	0	1	2
2599	208	"res_0"	"bigint"	64	0	0	0
2600	208	"arg_1"	"bigint"	64	0	1	1
2601	208	"arg_2"	"bigint"	64	0	1	2
2602	209	"res_0"	"bigint"	64	0	0	0
2603	209	"arg_1"	"bigint"	64	0	1	1
2604	209	"arg_2"	"bigint"	64	0	1	2
2605	210	"res_0"	"bigint"	64	0	0	0
2606	210	"arg_1"	"bigint"	64	0	1	1
2607	210	"arg_2"	"bigint"	64	0	1	2
2608	211	"res_0"	"bigint"	64	0	0	0
2609	211	"arg_1"	"bigint"	64	0	1	1
2610	211	"arg_2"	"bigint"	64	0	1	2
2611	212	"res_0"	"bigint"	64	0	0	0
2612	212	"arg_1"	"bigint"	64	0	1	1
2613	212	"arg_2"	"bigint"	64	0	1	2
2614	213	"res_0"	"bigint"	64	0	0	0
2615	213	"arg_1"	"bigint"	64	0	1	1
2616	213	"arg_2"	"bigint"	64	0	1	2
2617	214	"res_0"	"bigint"	64	0	0	0
2618	214	"arg_1"	"bigint"	64	0	1	1
2619	215	"res_0"	"bigint"	64	0	0	0
2620	215	"arg_1"	"bigint"	64	0	1	1
2621	215	"arg_2"	"int"	32	0	1	2
2622	216	"res_0"	"bigint"	64	0	0	0
2623	216	"arg_1"	"bigint"	64	0	1	1
2624	216	"arg_2"	"int"	32	0	1	2
2625	217	"res_0"	"bigint"	64	0	0	0
2626	217	"arg_1"	"bigint"	64	0	1	1
2627	218	"res_0"	"bigint"	64	0	0	0
2628	218	"arg_1"	"bigint"	64	0	1	1
2629	219	"res_0"	"tinyint"	8	0	0	0
2630	219	"arg_1"	"bigint"	64	0	1	1
2631	220	"res_0"	"bigint"	64	0	0	0
2632	220	"arg_1"	"bigint"	64	0	1	1
2633	220	"arg_2"	"bigint"	64	0	1	2
2634	221	"res_0"	"bigint"	64	0	0	0
2635	221	"arg_1"	"bigint"	64	0	1	1
2636	221	"arg_2"	"bigint"	64	0	1	2
2637	222	"res_0"	"month_interval"	32	0	0	0
2638	222	"arg_1"	"month_interval"	32	0	1	1
2639	222	"arg_2"	"bigint"	64	0	1	2
2640	223	"res_0"	"month_interval"	32	0	0	0
2641	223	"arg_1"	"month_interval"	32	0	1	1
2642	223	"arg_2"	"bigint"	64	0	1	2
2643	224	"res_0"	"month_interval"	32	0	0	0
2644	224	"arg_1"	"month_interval"	32	0	1	1
2645	224	"arg_2"	"bigint"	64	0	1	2
2646	225	"res_0"	"month_interval"	32	0	0	0
2647	225	"arg_1"	"month_interval"	32	0	1	1
2648	225	"arg_2"	"bigint"	64	0	1	2
2649	226	"res_0"	"sec_interval"	19	0	0	0
2650	226	"arg_1"	"sec_interval"	19	0	1	1
2651	226	"arg_2"	"bigint"	64	0	1	2
2652	227	"res_0"	"sec_interval"	19	0	0	0
2653	227	"arg_1"	"sec_interval"	19	0	1	1
2654	227	"arg_2"	"bigint"	64	0	1	2
2655	228	"res_0"	"sec_interval"	19	0	0	0
2656	228	"arg_1"	"sec_interval"	19	0	1	1
2657	228	"arg_2"	"bigint"	64	0	1	2
2658	229	"res_0"	"sec_interval"	19	0	0	0
2659	229	"arg_1"	"sec_interval"	19	0	1	1
2660	229	"arg_2"	"bigint"	64	0	1	2
2661	230	"res_0"	"wrd"	64	0	0	0
2662	230	"arg_1"	"wrd"	64	0	1	1
2663	230	"arg_2"	"wrd"	64	0	1	2
2664	231	"res_0"	"wrd"	64	0	0	0
2665	231	"arg_1"	"wrd"	64	0	1	1
2666	231	"arg_2"	"wrd"	64	0	1	2
2667	232	"res_0"	"wrd"	64	0	0	0
2668	232	"arg_1"	"wrd"	64	0	1	1
2669	232	"arg_2"	"wrd"	64	0	1	2
2670	233	"res_0"	"wrd"	64	0	0	0
2671	233	"arg_1"	"wrd"	64	0	1	1
2672	233	"arg_2"	"wrd"	64	0	1	2
2673	234	"res_0"	"wrd"	64	0	0	0
2674	234	"arg_1"	"wrd"	64	0	1	1
2675	234	"arg_2"	"wrd"	64	0	1	2
2676	235	"res_0"	"wrd"	64	0	0	0
2677	235	"arg_1"	"wrd"	64	0	1	1
2678	235	"arg_2"	"wrd"	64	0	1	2
2679	236	"res_0"	"wrd"	64	0	0	0
2680	236	"arg_1"	"wrd"	64	0	1	1
2681	236	"arg_2"	"wrd"	64	0	1	2
2682	237	"res_0"	"wrd"	64	0	0	0
2683	237	"arg_1"	"wrd"	64	0	1	1
2684	238	"res_0"	"wrd"	64	0	0	0
2685	238	"arg_1"	"wrd"	64	0	1	1
2686	238	"arg_2"	"int"	32	0	1	2
2687	239	"res_0"	"wrd"	64	0	0	0
2688	239	"arg_1"	"wrd"	64	0	1	1
2689	239	"arg_2"	"int"	32	0	1	2
2690	240	"res_0"	"wrd"	64	0	0	0
2691	240	"arg_1"	"wrd"	64	0	1	1
2692	241	"res_0"	"wrd"	64	0	0	0
2693	241	"arg_1"	"wrd"	64	0	1	1
2694	242	"res_0"	"tinyint"	8	0	0	0
2695	242	"arg_1"	"wrd"	64	0	1	1
2696	243	"res_0"	"wrd"	64	0	0	0
2697	243	"arg_1"	"wrd"	64	0	1	1
2698	243	"arg_2"	"wrd"	64	0	1	2
2699	244	"res_0"	"wrd"	64	0	0	0
2700	244	"arg_1"	"wrd"	64	0	1	1
2701	244	"arg_2"	"wrd"	64	0	1	2
2702	245	"res_0"	"month_interval"	32	0	0	0
2703	245	"arg_1"	"month_interval"	32	0	1	1
2704	245	"arg_2"	"wrd"	64	0	1	2
2705	246	"res_0"	"month_interval"	32	0	0	0
2706	246	"arg_1"	"month_interval"	32	0	1	1
2707	246	"arg_2"	"wrd"	64	0	1	2
2708	247	"res_0"	"month_interval"	32	0	0	0
2709	247	"arg_1"	"month_interval"	32	0	1	1
2710	247	"arg_2"	"wrd"	64	0	1	2
2711	248	"res_0"	"month_interval"	32	0	0	0
2712	248	"arg_1"	"month_interval"	32	0	1	1
2713	248	"arg_2"	"wrd"	64	0	1	2
2714	249	"res_0"	"sec_interval"	19	0	0	0
2715	249	"arg_1"	"sec_interval"	19	0	1	1
2716	249	"arg_2"	"wrd"	64	0	1	2
2717	250	"res_0"	"sec_interval"	19	0	0	0
2718	250	"arg_1"	"sec_interval"	19	0	1	1
2719	250	"arg_2"	"wrd"	64	0	1	2
2720	251	"res_0"	"sec_interval"	19	0	0	0
2721	251	"arg_1"	"sec_interval"	19	0	1	1
2722	251	"arg_2"	"wrd"	64	0	1	2
2723	252	"res_0"	"sec_interval"	19	0	0	0
2724	252	"arg_1"	"sec_interval"	19	0	1	1
2725	252	"arg_2"	"wrd"	64	0	1	2
2726	253	"res_0"	"decimal"	2	0	0	0
2727	253	"arg_1"	"decimal"	2	0	1	1
2728	253	"arg_2"	"decimal"	2	0	1	2
2729	254	"res_0"	"decimal"	2	0	0	0
2730	254	"arg_1"	"decimal"	2	0	1	1
2731	254	"arg_2"	"decimal"	2	0	1	2
2732	255	"res_0"	"decimal"	2	0	0	0
2733	255	"arg_1"	"decimal"	2	0	1	1
2734	255	"arg_2"	"decimal"	2	0	1	2
2735	256	"res_0"	"decimal"	2	0	0	0
2736	256	"arg_1"	"decimal"	2	0	1	1
2737	256	"arg_2"	"decimal"	2	0	1	2
2738	257	"res_0"	"decimal"	2	0	0	0
2739	257	"arg_1"	"decimal"	2	0	1	1
2740	257	"arg_2"	"decimal"	2	0	1	2
2741	258	"res_0"	"decimal"	2	0	0	0
2742	258	"arg_1"	"decimal"	2	0	1	1
2743	258	"arg_2"	"decimal"	2	0	1	2
2744	259	"res_0"	"decimal"	2	0	0	0
2745	259	"arg_1"	"decimal"	2	0	1	1
2746	259	"arg_2"	"decimal"	2	0	1	2
2747	260	"res_0"	"decimal"	2	0	0	0
2748	260	"arg_1"	"decimal"	2	0	1	1
2749	261	"res_0"	"decimal"	2	0	0	0
2750	261	"arg_1"	"decimal"	2	0	1	1
2751	261	"arg_2"	"int"	32	0	1	2
2752	262	"res_0"	"decimal"	2	0	0	0
2753	262	"arg_1"	"decimal"	2	0	1	1
2754	262	"arg_2"	"int"	32	0	1	2
2755	263	"res_0"	"decimal"	2	0	0	0
2756	263	"arg_1"	"decimal"	2	0	1	1
2757	264	"res_0"	"decimal"	2	0	0	0
2758	264	"arg_1"	"decimal"	2	0	1	1
2759	265	"res_0"	"tinyint"	8	0	0	0
2760	265	"arg_1"	"decimal"	2	0	1	1
2761	266	"res_0"	"decimal"	2	0	0	0
2762	266	"arg_1"	"decimal"	2	0	1	1
2763	266	"arg_2"	"tinyint"	8	0	1	2
2764	267	"res_0"	"decimal"	2	0	0	0
2765	267	"arg_1"	"decimal"	2	0	1	1
2766	267	"arg_2"	"tinyint"	8	0	1	2
2767	268	"res_0"	"month_interval"	32	0	0	0
2768	268	"arg_1"	"month_interval"	32	0	1	1
2769	268	"arg_2"	"decimal"	2	0	1	2
2770	269	"res_0"	"month_interval"	32	0	0	0
2771	269	"arg_1"	"month_interval"	32	0	1	1
2772	269	"arg_2"	"decimal"	2	0	1	2
2773	270	"res_0"	"month_interval"	32	0	0	0
2774	270	"arg_1"	"month_interval"	32	0	1	1
2775	270	"arg_2"	"decimal"	2	0	1	2
2776	271	"res_0"	"month_interval"	32	0	0	0
2777	271	"arg_1"	"month_interval"	32	0	1	1
2778	271	"arg_2"	"decimal"	2	0	1	2
2779	272	"res_0"	"sec_interval"	19	0	0	0
2780	272	"arg_1"	"sec_interval"	19	0	1	1
2781	272	"arg_2"	"decimal"	2	0	1	2
2782	273	"res_0"	"sec_interval"	19	0	0	0
2783	273	"arg_1"	"sec_interval"	19	0	1	1
2784	273	"arg_2"	"decimal"	2	0	1	2
2785	274	"res_0"	"sec_interval"	19	0	0	0
2786	274	"arg_1"	"sec_interval"	19	0	1	1
2787	274	"arg_2"	"decimal"	2	0	1	2
2788	275	"res_0"	"sec_interval"	19	0	0	0
2789	275	"arg_1"	"sec_interval"	19	0	1	1
2790	275	"arg_2"	"decimal"	2	0	1	2
2791	276	"res_0"	"decimal"	4	0	0	0
2792	276	"arg_1"	"decimal"	4	0	1	1
2793	276	"arg_2"	"decimal"	4	0	1	2
2794	277	"res_0"	"decimal"	4	0	0	0
2795	277	"arg_1"	"decimal"	4	0	1	1
2796	277	"arg_2"	"decimal"	4	0	1	2
2797	278	"res_0"	"decimal"	4	0	0	0
2798	278	"arg_1"	"decimal"	4	0	1	1
2799	278	"arg_2"	"decimal"	4	0	1	2
2800	279	"res_0"	"decimal"	4	0	0	0
2801	279	"arg_1"	"decimal"	4	0	1	1
2802	279	"arg_2"	"decimal"	4	0	1	2
2803	280	"res_0"	"decimal"	4	0	0	0
2804	280	"arg_1"	"decimal"	4	0	1	1
2805	280	"arg_2"	"decimal"	4	0	1	2
2806	281	"res_0"	"decimal"	4	0	0	0
2807	281	"arg_1"	"decimal"	4	0	1	1
2808	281	"arg_2"	"decimal"	4	0	1	2
2809	282	"res_0"	"decimal"	4	0	0	0
2810	282	"arg_1"	"decimal"	4	0	1	1
2811	282	"arg_2"	"decimal"	4	0	1	2
2812	283	"res_0"	"decimal"	4	0	0	0
2813	283	"arg_1"	"decimal"	4	0	1	1
2814	284	"res_0"	"decimal"	4	0	0	0
2815	284	"arg_1"	"decimal"	4	0	1	1
2816	284	"arg_2"	"int"	32	0	1	2
2817	285	"res_0"	"decimal"	4	0	0	0
2818	285	"arg_1"	"decimal"	4	0	1	1
2819	285	"arg_2"	"int"	32	0	1	2
2820	286	"res_0"	"decimal"	4	0	0	0
2821	286	"arg_1"	"decimal"	4	0	1	1
2822	287	"res_0"	"decimal"	4	0	0	0
2823	287	"arg_1"	"decimal"	4	0	1	1
2824	288	"res_0"	"tinyint"	8	0	0	0
2825	288	"arg_1"	"decimal"	4	0	1	1
2826	289	"res_0"	"decimal"	4	0	0	0
2827	289	"arg_1"	"decimal"	4	0	1	1
2828	289	"arg_2"	"smallint"	16	0	1	2
2829	290	"res_0"	"decimal"	4	0	0	0
2830	290	"arg_1"	"decimal"	4	0	1	1
2831	290	"arg_2"	"smallint"	16	0	1	2
2832	291	"res_0"	"month_interval"	32	0	0	0
2833	291	"arg_1"	"month_interval"	32	0	1	1
2834	291	"arg_2"	"decimal"	4	0	1	2
2835	292	"res_0"	"month_interval"	32	0	0	0
2836	292	"arg_1"	"month_interval"	32	0	1	1
2837	292	"arg_2"	"decimal"	4	0	1	2
2838	293	"res_0"	"month_interval"	32	0	0	0
2839	293	"arg_1"	"month_interval"	32	0	1	1
2840	293	"arg_2"	"decimal"	4	0	1	2
2841	294	"res_0"	"month_interval"	32	0	0	0
2842	294	"arg_1"	"month_interval"	32	0	1	1
2843	294	"arg_2"	"decimal"	4	0	1	2
2844	295	"res_0"	"sec_interval"	19	0	0	0
2845	295	"arg_1"	"sec_interval"	19	0	1	1
2846	295	"arg_2"	"decimal"	4	0	1	2
2847	296	"res_0"	"sec_interval"	19	0	0	0
2848	296	"arg_1"	"sec_interval"	19	0	1	1
2849	296	"arg_2"	"decimal"	4	0	1	2
2850	297	"res_0"	"sec_interval"	19	0	0	0
2851	297	"arg_1"	"sec_interval"	19	0	1	1
2852	297	"arg_2"	"decimal"	4	0	1	2
2853	298	"res_0"	"sec_interval"	19	0	0	0
2854	298	"arg_1"	"sec_interval"	19	0	1	1
2855	298	"arg_2"	"decimal"	4	0	1	2
2856	299	"res_0"	"decimal"	9	0	0	0
2857	299	"arg_1"	"decimal"	9	0	1	1
2858	299	"arg_2"	"decimal"	9	0	1	2
2859	300	"res_0"	"decimal"	9	0	0	0
2860	300	"arg_1"	"decimal"	9	0	1	1
2861	300	"arg_2"	"decimal"	9	0	1	2
2862	301	"res_0"	"decimal"	9	0	0	0
2863	301	"arg_1"	"decimal"	9	0	1	1
2864	301	"arg_2"	"decimal"	9	0	1	2
2865	302	"res_0"	"decimal"	9	0	0	0
2866	302	"arg_1"	"decimal"	9	0	1	1
2867	302	"arg_2"	"decimal"	9	0	1	2
2868	303	"res_0"	"decimal"	9	0	0	0
2869	303	"arg_1"	"decimal"	9	0	1	1
2870	303	"arg_2"	"decimal"	9	0	1	2
2871	304	"res_0"	"decimal"	9	0	0	0
2872	304	"arg_1"	"decimal"	9	0	1	1
2873	304	"arg_2"	"decimal"	9	0	1	2
2874	305	"res_0"	"decimal"	9	0	0	0
2875	305	"arg_1"	"decimal"	9	0	1	1
2876	305	"arg_2"	"decimal"	9	0	1	2
2877	306	"res_0"	"decimal"	9	0	0	0
2878	306	"arg_1"	"decimal"	9	0	1	1
2879	307	"res_0"	"decimal"	9	0	0	0
2880	307	"arg_1"	"decimal"	9	0	1	1
2881	307	"arg_2"	"int"	32	0	1	2
2882	308	"res_0"	"decimal"	9	0	0	0
2883	308	"arg_1"	"decimal"	9	0	1	1
2884	308	"arg_2"	"int"	32	0	1	2
2885	309	"res_0"	"decimal"	9	0	0	0
2886	309	"arg_1"	"decimal"	9	0	1	1
2887	310	"res_0"	"decimal"	9	0	0	0
2888	310	"arg_1"	"decimal"	9	0	1	1
2889	311	"res_0"	"tinyint"	8	0	0	0
2890	311	"arg_1"	"decimal"	9	0	1	1
2891	312	"res_0"	"decimal"	9	0	0	0
2892	312	"arg_1"	"decimal"	9	0	1	1
2893	312	"arg_2"	"int"	32	0	1	2
2894	313	"res_0"	"decimal"	9	0	0	0
2895	313	"arg_1"	"decimal"	9	0	1	1
2896	313	"arg_2"	"int"	32	0	1	2
2897	314	"res_0"	"month_interval"	32	0	0	0
2898	314	"arg_1"	"month_interval"	32	0	1	1
2899	314	"arg_2"	"decimal"	9	0	1	2
2900	315	"res_0"	"month_interval"	32	0	0	0
2901	315	"arg_1"	"month_interval"	32	0	1	1
2902	315	"arg_2"	"decimal"	9	0	1	2
2903	316	"res_0"	"month_interval"	32	0	0	0
2904	316	"arg_1"	"month_interval"	32	0	1	1
2905	316	"arg_2"	"decimal"	9	0	1	2
2906	317	"res_0"	"month_interval"	32	0	0	0
2907	317	"arg_1"	"month_interval"	32	0	1	1
2908	317	"arg_2"	"decimal"	9	0	1	2
2909	318	"res_0"	"sec_interval"	19	0	0	0
2910	318	"arg_1"	"sec_interval"	19	0	1	1
2911	318	"arg_2"	"decimal"	9	0	1	2
2912	319	"res_0"	"sec_interval"	19	0	0	0
2913	319	"arg_1"	"sec_interval"	19	0	1	1
2914	319	"arg_2"	"decimal"	9	0	1	2
2915	320	"res_0"	"sec_interval"	19	0	0	0
2916	320	"arg_1"	"sec_interval"	19	0	1	1
2917	320	"arg_2"	"decimal"	9	0	1	2
2918	321	"res_0"	"sec_interval"	19	0	0	0
2919	321	"arg_1"	"sec_interval"	19	0	1	1
2920	321	"arg_2"	"decimal"	9	0	1	2
2921	322	"res_0"	"decimal"	19	0	0	0
2922	322	"arg_1"	"decimal"	19	0	1	1
2923	322	"arg_2"	"decimal"	19	0	1	2
2924	323	"res_0"	"decimal"	19	0	0	0
2925	323	"arg_1"	"decimal"	19	0	1	1
2926	323	"arg_2"	"decimal"	19	0	1	2
2927	324	"res_0"	"decimal"	19	0	0	0
2928	324	"arg_1"	"decimal"	19	0	1	1
2929	324	"arg_2"	"decimal"	19	0	1	2
2930	325	"res_0"	"decimal"	19	0	0	0
2931	325	"arg_1"	"decimal"	19	0	1	1
2932	325	"arg_2"	"decimal"	19	0	1	2
2933	326	"res_0"	"decimal"	19	0	0	0
2934	326	"arg_1"	"decimal"	19	0	1	1
2935	326	"arg_2"	"decimal"	19	0	1	2
2936	327	"res_0"	"decimal"	19	0	0	0
2937	327	"arg_1"	"decimal"	19	0	1	1
2938	327	"arg_2"	"decimal"	19	0	1	2
2939	328	"res_0"	"decimal"	19	0	0	0
2940	328	"arg_1"	"decimal"	19	0	1	1
2941	328	"arg_2"	"decimal"	19	0	1	2
2942	329	"res_0"	"decimal"	19	0	0	0
2943	329	"arg_1"	"decimal"	19	0	1	1
2944	330	"res_0"	"decimal"	19	0	0	0
2945	330	"arg_1"	"decimal"	19	0	1	1
2946	330	"arg_2"	"int"	32	0	1	2
2947	331	"res_0"	"decimal"	19	0	0	0
2948	331	"arg_1"	"decimal"	19	0	1	1
2949	331	"arg_2"	"int"	32	0	1	2
2950	332	"res_0"	"decimal"	19	0	0	0
2951	332	"arg_1"	"decimal"	19	0	1	1
2952	333	"res_0"	"decimal"	19	0	0	0
2953	333	"arg_1"	"decimal"	19	0	1	1
2954	334	"res_0"	"tinyint"	8	0	0	0
2955	334	"arg_1"	"decimal"	19	0	1	1
2956	335	"res_0"	"decimal"	19	0	0	0
2957	335	"arg_1"	"decimal"	19	0	1	1
2958	335	"arg_2"	"bigint"	64	0	1	2
2959	336	"res_0"	"decimal"	19	0	0	0
2960	336	"arg_1"	"decimal"	19	0	1	1
2961	336	"arg_2"	"bigint"	64	0	1	2
2962	337	"res_0"	"month_interval"	32	0	0	0
2963	337	"arg_1"	"month_interval"	32	0	1	1
2964	337	"arg_2"	"decimal"	19	0	1	2
2965	338	"res_0"	"month_interval"	32	0	0	0
2966	338	"arg_1"	"month_interval"	32	0	1	1
2967	338	"arg_2"	"decimal"	19	0	1	2
2968	339	"res_0"	"month_interval"	32	0	0	0
2969	339	"arg_1"	"month_interval"	32	0	1	1
2970	339	"arg_2"	"decimal"	19	0	1	2
2971	340	"res_0"	"month_interval"	32	0	0	0
2972	340	"arg_1"	"month_interval"	32	0	1	1
2973	340	"arg_2"	"decimal"	19	0	1	2
2974	341	"res_0"	"sec_interval"	19	0	0	0
2975	341	"arg_1"	"sec_interval"	19	0	1	1
2976	341	"arg_2"	"decimal"	19	0	1	2
2977	342	"res_0"	"sec_interval"	19	0	0	0
2978	342	"arg_1"	"sec_interval"	19	0	1	1
2979	342	"arg_2"	"decimal"	19	0	1	2
2980	343	"res_0"	"sec_interval"	19	0	0	0
2981	343	"arg_1"	"sec_interval"	19	0	1	1
2982	343	"arg_2"	"decimal"	19	0	1	2
2983	344	"res_0"	"sec_interval"	19	0	0	0
2984	344	"arg_1"	"sec_interval"	19	0	1	1
2985	344	"arg_2"	"decimal"	19	0	1	2
2986	345	"res_0"	"real"	24	0	0	0
2987	345	"arg_1"	"real"	24	0	1	1
2988	345	"arg_2"	"real"	24	0	1	2
2989	346	"res_0"	"real"	24	0	0	0
2990	346	"arg_1"	"real"	24	0	1	1
2991	346	"arg_2"	"real"	24	0	1	2
2992	347	"res_0"	"real"	24	0	0	0
2993	347	"arg_1"	"real"	24	0	1	1
2994	347	"arg_2"	"real"	24	0	1	2
2995	348	"res_0"	"real"	24	0	0	0
2996	348	"arg_1"	"real"	24	0	1	1
2997	348	"arg_2"	"real"	24	0	1	2
2998	349	"res_0"	"real"	24	0	0	0
2999	349	"arg_1"	"real"	24	0	1	1
3000	350	"res_0"	"real"	24	0	0	0
3001	350	"arg_1"	"real"	24	0	1	1
3002	351	"res_0"	"tinyint"	8	0	0	0
3003	351	"arg_1"	"real"	24	0	1	1
3004	352	"res_0"	"real"	24	0	0	0
3005	352	"arg_1"	"real"	24	0	1	1
3006	352	"arg_2"	"real"	24	0	1	2
3007	353	"res_0"	"real"	24	0	0	0
3008	353	"arg_1"	"real"	24	0	1	1
3009	353	"arg_2"	"real"	24	0	1	2
3010	354	"res_0"	"month_interval"	32	0	0	0
3011	354	"arg_1"	"month_interval"	32	0	1	1
3012	354	"arg_2"	"real"	24	0	1	2
3013	355	"res_0"	"month_interval"	32	0	0	0
3014	355	"arg_1"	"month_interval"	32	0	1	1
3015	355	"arg_2"	"real"	24	0	1	2
3016	356	"res_0"	"month_interval"	32	0	0	0
3017	356	"arg_1"	"month_interval"	32	0	1	1
3018	356	"arg_2"	"real"	24	0	1	2
3019	357	"res_0"	"month_interval"	32	0	0	0
3020	357	"arg_1"	"month_interval"	32	0	1	1
3021	357	"arg_2"	"real"	24	0	1	2
3022	358	"res_0"	"sec_interval"	19	0	0	0
3023	358	"arg_1"	"sec_interval"	19	0	1	1
3024	358	"arg_2"	"real"	24	0	1	2
3025	359	"res_0"	"sec_interval"	19	0	0	0
3026	359	"arg_1"	"sec_interval"	19	0	1	1
3027	359	"arg_2"	"real"	24	0	1	2
3028	360	"res_0"	"sec_interval"	19	0	0	0
3029	360	"arg_1"	"sec_interval"	19	0	1	1
3030	360	"arg_2"	"real"	24	0	1	2
3031	361	"res_0"	"sec_interval"	19	0	0	0
3032	361	"arg_1"	"sec_interval"	19	0	1	1
3033	361	"arg_2"	"real"	24	0	1	2
3034	362	"res_0"	"double"	53	0	0	0
3035	362	"arg_1"	"double"	53	0	1	1
3036	362	"arg_2"	"double"	53	0	1	2
3037	363	"res_0"	"double"	53	0	0	0
3038	363	"arg_1"	"double"	53	0	1	1
3039	363	"arg_2"	"double"	53	0	1	2
3040	364	"res_0"	"double"	53	0	0	0
3041	364	"arg_1"	"double"	53	0	1	1
3042	364	"arg_2"	"double"	53	0	1	2
3043	365	"res_0"	"double"	53	0	0	0
3044	365	"arg_1"	"double"	53	0	1	1
3045	365	"arg_2"	"double"	53	0	1	2
3046	366	"res_0"	"double"	53	0	0	0
3047	366	"arg_1"	"double"	53	0	1	1
3048	367	"res_0"	"double"	53	0	0	0
3049	367	"arg_1"	"double"	53	0	1	1
3050	368	"res_0"	"tinyint"	8	0	0	0
3051	368	"arg_1"	"double"	53	0	1	1
3052	369	"res_0"	"double"	53	0	0	0
3053	369	"arg_1"	"double"	53	0	1	1
3054	369	"arg_2"	"double"	53	0	1	2
3055	370	"res_0"	"double"	53	0	0	0
3056	370	"arg_1"	"double"	53	0	1	1
3057	370	"arg_2"	"double"	53	0	1	2
3058	371	"res_0"	"month_interval"	32	0	0	0
3059	371	"arg_1"	"month_interval"	32	0	1	1
3060	371	"arg_2"	"double"	53	0	1	2
3061	372	"res_0"	"month_interval"	32	0	0	0
3062	372	"arg_1"	"month_interval"	32	0	1	1
3063	372	"arg_2"	"double"	53	0	1	2
3064	373	"res_0"	"month_interval"	32	0	0	0
3065	373	"arg_1"	"month_interval"	32	0	1	1
3066	373	"arg_2"	"double"	53	0	1	2
3067	374	"res_0"	"month_interval"	32	0	0	0
3068	374	"arg_1"	"month_interval"	32	0	1	1
3069	374	"arg_2"	"double"	53	0	1	2
3070	375	"res_0"	"sec_interval"	19	0	0	0
3071	375	"arg_1"	"sec_interval"	19	0	1	1
3072	375	"arg_2"	"double"	53	0	1	2
3073	376	"res_0"	"sec_interval"	19	0	0	0
3074	376	"arg_1"	"sec_interval"	19	0	1	1
3075	376	"arg_2"	"double"	53	0	1	2
3076	377	"res_0"	"sec_interval"	19	0	0	0
3077	377	"arg_1"	"sec_interval"	19	0	1	1
3078	377	"arg_2"	"double"	53	0	1	2
3079	378	"res_0"	"sec_interval"	19	0	0	0
3080	378	"arg_1"	"sec_interval"	19	0	1	1
3081	378	"arg_2"	"double"	53	0	1	2
3082	379	"res_0"	"month_interval"	32	0	0	0
3083	379	"arg_1"	"month_interval"	32	0	1	1
3084	379	"arg_2"	"month_interval"	32	0	1	2
3085	380	"res_0"	"month_interval"	32	0	0	0
3086	380	"arg_1"	"month_interval"	32	0	1	1
3087	380	"arg_2"	"month_interval"	32	0	1	2
3088	381	"res_0"	"month_interval"	32	0	0	0
3089	381	"arg_1"	"month_interval"	32	0	1	1
3090	381	"arg_2"	"month_interval"	32	0	1	2
3091	382	"res_0"	"month_interval"	32	0	0	0
3092	382	"arg_1"	"month_interval"	32	0	1	1
3093	382	"arg_2"	"month_interval"	32	0	1	2
3094	383	"res_0"	"month_interval"	32	0	0	0
3095	383	"arg_1"	"month_interval"	32	0	1	1
3096	384	"res_0"	"month_interval"	32	0	0	0
3097	384	"arg_1"	"month_interval"	32	0	1	1
3098	385	"res_0"	"tinyint"	8	0	0	0
3099	385	"arg_1"	"month_interval"	32	0	1	1
3100	386	"res_0"	"month_interval"	32	0	0	0
3101	386	"arg_1"	"month_interval"	32	0	1	1
3102	386	"arg_2"	"int"	32	0	1	2
3103	387	"res_0"	"month_interval"	32	0	0	0
3104	387	"arg_1"	"month_interval"	32	0	1	1
3105	387	"arg_2"	"int"	32	0	1	2
3106	388	"res_0"	"sec_interval"	19	0	0	0
3107	388	"arg_1"	"sec_interval"	19	0	1	1
3108	388	"arg_2"	"sec_interval"	19	0	1	2
3109	389	"res_0"	"sec_interval"	19	0	0	0
3110	389	"arg_1"	"sec_interval"	19	0	1	1
3111	389	"arg_2"	"sec_interval"	19	0	1	2
3112	390	"res_0"	"sec_interval"	19	0	0	0
3113	390	"arg_1"	"sec_interval"	19	0	1	1
3114	390	"arg_2"	"sec_interval"	19	0	1	2
3115	391	"res_0"	"sec_interval"	19	0	0	0
3116	391	"arg_1"	"sec_interval"	19	0	1	1
3117	391	"arg_2"	"sec_interval"	19	0	1	2
3118	392	"res_0"	"sec_interval"	19	0	0	0
3119	392	"arg_1"	"sec_interval"	19	0	1	1
3120	393	"res_0"	"sec_interval"	19	0	0	0
3121	393	"arg_1"	"sec_interval"	19	0	1	1
3122	394	"res_0"	"tinyint"	8	0	0	0
3123	394	"arg_1"	"sec_interval"	19	0	1	1
3124	395	"res_0"	"sec_interval"	19	0	0	0
3125	395	"arg_1"	"sec_interval"	19	0	1	1
3126	395	"arg_2"	"bigint"	64	0	1	2
3127	396	"res_0"	"sec_interval"	19	0	0	0
3128	396	"arg_1"	"sec_interval"	19	0	1	1
3129	396	"arg_2"	"bigint"	64	0	1	2
3130	397	"res_0"	"decimal"	4	0	0	0
3131	397	"arg_1"	"decimal"	4	0	1	1
3132	397	"arg_2"	"tinyint"	8	0	1	2
3133	398	"res_0"	"decimal"	4	0	0	0
3134	398	"arg_1"	"tinyint"	8	0	1	1
3135	398	"arg_2"	"decimal"	4	0	1	2
3136	399	"res_0"	"decimal"	4	0	0	0
3137	399	"arg_1"	"decimal"	4	0	1	1
3138	399	"arg_2"	"decimal"	2	0	1	2
3139	400	"res_0"	"decimal"	4	0	0	0
3140	400	"arg_1"	"decimal"	2	0	1	1
3141	400	"arg_2"	"decimal"	4	0	1	2
3142	401	"res_0"	"decimal"	9	0	0	0
3143	401	"arg_1"	"decimal"	9	0	1	1
3144	401	"arg_2"	"tinyint"	8	0	1	2
3145	402	"res_0"	"decimal"	9	0	0	0
3146	402	"arg_1"	"tinyint"	8	0	1	1
3147	402	"arg_2"	"decimal"	9	0	1	2
3148	403	"res_0"	"decimal"	9	0	0	0
3149	403	"arg_1"	"decimal"	9	0	1	1
3150	403	"arg_2"	"smallint"	16	0	1	2
3151	404	"res_0"	"decimal"	9	0	0	0
3152	404	"arg_1"	"smallint"	16	0	1	1
3153	404	"arg_2"	"decimal"	9	0	1	2
3154	405	"res_0"	"decimal"	9	0	0	0
3155	405	"arg_1"	"decimal"	9	0	1	1
3156	405	"arg_2"	"decimal"	2	0	1	2
3157	406	"res_0"	"decimal"	9	0	0	0
3158	406	"arg_1"	"decimal"	2	0	1	1
3159	406	"arg_2"	"decimal"	9	0	1	2
3160	407	"res_0"	"decimal"	9	0	0	0
3161	407	"arg_1"	"decimal"	9	0	1	1
3162	407	"arg_2"	"decimal"	4	0	1	2
3163	408	"res_0"	"decimal"	9	0	0	0
3164	408	"arg_1"	"decimal"	4	0	1	1
3165	408	"arg_2"	"decimal"	9	0	1	2
3166	409	"res_0"	"decimal"	19	0	0	0
3167	409	"arg_1"	"decimal"	19	0	1	1
3168	409	"arg_2"	"tinyint"	8	0	1	2
3169	410	"res_0"	"decimal"	19	0	0	0
3170	410	"arg_1"	"tinyint"	8	0	1	1
3171	410	"arg_2"	"decimal"	19	0	1	2
3172	411	"res_0"	"decimal"	19	0	0	0
3173	411	"arg_1"	"decimal"	19	0	1	1
3174	411	"arg_2"	"smallint"	16	0	1	2
3175	412	"res_0"	"decimal"	19	0	0	0
3176	412	"arg_1"	"smallint"	16	0	1	1
3177	412	"arg_2"	"decimal"	19	0	1	2
3178	413	"res_0"	"decimal"	19	0	0	0
3179	413	"arg_1"	"decimal"	19	0	1	1
3180	413	"arg_2"	"int"	32	0	1	2
3181	414	"res_0"	"decimal"	19	0	0	0
3182	414	"arg_1"	"int"	32	0	1	1
3183	414	"arg_2"	"decimal"	19	0	1	2
3184	415	"res_0"	"decimal"	19	0	0	0
3185	415	"arg_1"	"decimal"	19	0	1	1
3186	415	"arg_2"	"wrd"	64	0	1	2
3187	416	"res_0"	"decimal"	19	0	0	0
3188	416	"arg_1"	"wrd"	64	0	1	1
3189	416	"arg_2"	"decimal"	19	0	1	2
3190	417	"res_0"	"decimal"	19	0	0	0
3191	417	"arg_1"	"decimal"	19	0	1	1
3192	417	"arg_2"	"decimal"	2	0	1	2
3193	418	"res_0"	"decimal"	19	0	0	0
3194	418	"arg_1"	"decimal"	2	0	1	1
3195	418	"arg_2"	"decimal"	19	0	1	2
3196	419	"res_0"	"decimal"	19	0	0	0
3197	419	"arg_1"	"decimal"	19	0	1	1
3198	419	"arg_2"	"decimal"	4	0	1	2
3199	420	"res_0"	"decimal"	19	0	0	0
3200	420	"arg_1"	"decimal"	4	0	1	1
3201	420	"arg_2"	"decimal"	19	0	1	2
3202	421	"res_0"	"decimal"	19	0	0	0
3203	421	"arg_1"	"decimal"	19	0	1	1
3204	421	"arg_2"	"decimal"	9	0	1	2
3205	422	"res_0"	"decimal"	19	0	0	0
3206	422	"arg_1"	"decimal"	9	0	1	1
3207	422	"arg_2"	"decimal"	19	0	1	2
3208	423	"res_0"	"decimal"	2	0	0	0
3209	423	"arg_1"	"decimal"	2	0	1	1
3210	423	"arg_2"	"tinyint"	8	0	1	2
3211	424	"res_0"	"decimal"	4	0	0	0
3212	424	"arg_1"	"decimal"	4	0	1	1
3213	424	"arg_2"	"tinyint"	8	0	1	2
3214	425	"res_0"	"decimal"	9	0	0	0
3215	425	"arg_1"	"decimal"	9	0	1	1
3216	425	"arg_2"	"tinyint"	8	0	1	2
3217	426	"res_0"	"decimal"	19	0	0	0
3218	426	"arg_1"	"decimal"	19	0	1	1
3219	426	"arg_2"	"tinyint"	8	0	1	2
3220	427	"res_0"	"real"	24	0	0	0
3221	427	"arg_1"	"real"	24	0	1	1
3222	427	"arg_2"	"tinyint"	8	0	1	2
3223	428	"res_0"	"double"	53	0	0	0
3224	428	"arg_1"	"double"	53	0	1	1
3225	428	"arg_2"	"tinyint"	8	0	1	2
3226	429	"res_0"	"oid"	63	0	0	0
3227	429	"arg_1"	"oid"	63	0	1	1
3228	429	"arg_2"	"oid"	63	0	1	2
3229	430	"res_0"	"oid"	63	0	0	0
3230	430	"arg_1"	"tinyint"	8	0	1	1
3231	430	"arg_2"	"oid"	63	0	1	2
3232	431	"res_0"	"oid"	63	0	0	0
3233	431	"arg_1"	"smallint"	16	0	1	1
3234	431	"arg_2"	"oid"	63	0	1	2
3235	432	"res_0"	"oid"	63	0	0	0
3236	432	"arg_1"	"int"	32	0	1	1
3237	432	"arg_2"	"oid"	63	0	1	2
3238	433	"res_0"	"oid"	63	0	0	0
3239	433	"arg_1"	"bigint"	64	0	1	1
3240	433	"arg_2"	"oid"	63	0	1	2
3241	434	"res_0"	"oid"	63	0	0	0
3242	434	"arg_1"	"wrd"	64	0	1	1
3243	434	"arg_2"	"oid"	63	0	1	2
3244	435	"res_0"	"oid"	63	0	0	0
3245	435	"arg_1"	"decimal"	2	0	1	1
3246	435	"arg_2"	"oid"	63	0	1	2
3247	436	"res_0"	"oid"	63	0	0	0
3248	436	"arg_1"	"decimal"	4	0	1	1
3249	436	"arg_2"	"oid"	63	0	1	2
3250	437	"res_0"	"oid"	63	0	0	0
3251	437	"arg_1"	"decimal"	9	0	1	1
3252	437	"arg_2"	"oid"	63	0	1	2
3253	438	"res_0"	"oid"	63	0	0	0
3254	438	"arg_1"	"decimal"	19	0	1	1
3255	438	"arg_2"	"oid"	63	0	1	2
3256	439	"res_0"	"oid"	63	0	0	0
3257	439	"arg_1"	"real"	24	0	1	1
3258	439	"arg_2"	"oid"	63	0	1	2
3259	440	"res_0"	"oid"	63	0	0	0
3260	440	"arg_1"	"double"	53	0	1	1
3261	440	"arg_2"	"oid"	63	0	1	2
3262	441	"res_0"	"oid"	63	0	0	0
3263	441	"arg_1"	"month_interval"	32	0	1	1
3264	441	"arg_2"	"oid"	63	0	1	2
3265	442	"res_0"	"oid"	63	0	0	0
3266	442	"arg_1"	"sec_interval"	19	0	1	1
3267	442	"arg_2"	"oid"	63	0	1	2
3268	443	"res_0"	"oid"	63	0	0	0
3269	443	"arg_1"	"time"	7	0	1	1
3270	443	"arg_2"	"oid"	63	0	1	2
3271	444	"res_0"	"oid"	63	0	0	0
3272	444	"arg_1"	"timetz"	7	0	1	1
3273	444	"arg_2"	"oid"	63	0	1	2
3274	445	"res_0"	"oid"	63	0	0	0
3275	445	"arg_1"	"date"	0	0	1	1
3276	445	"arg_2"	"oid"	63	0	1	2
3277	446	"res_0"	"oid"	63	0	0	0
3278	446	"arg_1"	"timestamp"	7	0	1	1
3279	446	"arg_2"	"oid"	63	0	1	2
3280	447	"res_0"	"oid"	63	0	0	0
3281	447	"arg_1"	"timestamptz"	7	0	1	1
3282	447	"arg_2"	"oid"	63	0	1	2
3283	448	"res_0"	"oid"	63	0	0	0
3284	448	"arg_1"	"blob"	0	0	1	1
3285	448	"arg_2"	"oid"	63	0	1	2
3286	449	"res_0"	"tinyint"	8	0	0	0
3287	449	"arg_1"	"oid"	63	0	1	1
3288	449	"arg_2"	"tinyint"	8	0	1	2
3289	450	"res_0"	"tinyint"	8	0	0	0
3290	450	"arg_1"	"tinyint"	8	0	1	1
3291	450	"arg_2"	"tinyint"	8	0	1	2
3292	451	"res_0"	"tinyint"	8	0	0	0
3293	451	"arg_1"	"smallint"	16	0	1	1
3294	451	"arg_2"	"tinyint"	8	0	1	2
3295	452	"res_0"	"tinyint"	8	0	0	0
3296	452	"arg_1"	"int"	32	0	1	1
3297	452	"arg_2"	"tinyint"	8	0	1	2
3298	453	"res_0"	"tinyint"	8	0	0	0
3299	453	"arg_1"	"bigint"	64	0	1	1
3300	453	"arg_2"	"tinyint"	8	0	1	2
3301	454	"res_0"	"tinyint"	8	0	0	0
3302	454	"arg_1"	"wrd"	64	0	1	1
3303	454	"arg_2"	"tinyint"	8	0	1	2
3304	455	"res_0"	"tinyint"	8	0	0	0
3305	455	"arg_1"	"decimal"	2	0	1	1
3306	455	"arg_2"	"tinyint"	8	0	1	2
3307	456	"res_0"	"tinyint"	8	0	0	0
3308	456	"arg_1"	"decimal"	4	0	1	1
3309	456	"arg_2"	"tinyint"	8	0	1	2
3310	457	"res_0"	"tinyint"	8	0	0	0
3311	457	"arg_1"	"decimal"	9	0	1	1
3312	457	"arg_2"	"tinyint"	8	0	1	2
3313	458	"res_0"	"tinyint"	8	0	0	0
3314	458	"arg_1"	"decimal"	19	0	1	1
3315	458	"arg_2"	"tinyint"	8	0	1	2
3316	459	"res_0"	"tinyint"	8	0	0	0
3317	459	"arg_1"	"real"	24	0	1	1
3318	459	"arg_2"	"tinyint"	8	0	1	2
3319	460	"res_0"	"tinyint"	8	0	0	0
3320	460	"arg_1"	"double"	53	0	1	1
3321	460	"arg_2"	"tinyint"	8	0	1	2
3322	461	"res_0"	"tinyint"	8	0	0	0
3323	461	"arg_1"	"month_interval"	32	0	1	1
3324	461	"arg_2"	"tinyint"	8	0	1	2
3325	462	"res_0"	"tinyint"	8	0	0	0
3326	462	"arg_1"	"sec_interval"	19	0	1	1
3327	462	"arg_2"	"tinyint"	8	0	1	2
3328	463	"res_0"	"tinyint"	8	0	0	0
3329	463	"arg_1"	"time"	7	0	1	1
3330	463	"arg_2"	"tinyint"	8	0	1	2
3331	464	"res_0"	"tinyint"	8	0	0	0
3332	464	"arg_1"	"timetz"	7	0	1	1
3333	464	"arg_2"	"tinyint"	8	0	1	2
3334	465	"res_0"	"tinyint"	8	0	0	0
3335	465	"arg_1"	"date"	0	0	1	1
3336	465	"arg_2"	"tinyint"	8	0	1	2
3337	466	"res_0"	"tinyint"	8	0	0	0
3338	466	"arg_1"	"timestamp"	7	0	1	1
3339	466	"arg_2"	"tinyint"	8	0	1	2
3340	467	"res_0"	"tinyint"	8	0	0	0
3341	467	"arg_1"	"timestamptz"	7	0	1	1
3342	467	"arg_2"	"tinyint"	8	0	1	2
3343	468	"res_0"	"tinyint"	8	0	0	0
3344	468	"arg_1"	"blob"	0	0	1	1
3345	468	"arg_2"	"tinyint"	8	0	1	2
3346	469	"res_0"	"smallint"	16	0	0	0
3347	469	"arg_1"	"oid"	63	0	1	1
3348	469	"arg_2"	"smallint"	16	0	1	2
3349	470	"res_0"	"smallint"	16	0	0	0
3350	470	"arg_1"	"tinyint"	8	0	1	1
3351	470	"arg_2"	"smallint"	16	0	1	2
3352	471	"res_0"	"smallint"	16	0	0	0
3353	471	"arg_1"	"smallint"	16	0	1	1
3354	471	"arg_2"	"smallint"	16	0	1	2
3355	472	"res_0"	"smallint"	16	0	0	0
3356	472	"arg_1"	"int"	32	0	1	1
3357	472	"arg_2"	"smallint"	16	0	1	2
3358	473	"res_0"	"smallint"	16	0	0	0
3359	473	"arg_1"	"bigint"	64	0	1	1
3360	473	"arg_2"	"smallint"	16	0	1	2
3361	474	"res_0"	"smallint"	16	0	0	0
3362	474	"arg_1"	"wrd"	64	0	1	1
3363	474	"arg_2"	"smallint"	16	0	1	2
3364	475	"res_0"	"smallint"	16	0	0	0
3365	475	"arg_1"	"decimal"	2	0	1	1
3366	475	"arg_2"	"smallint"	16	0	1	2
3367	476	"res_0"	"smallint"	16	0	0	0
3368	476	"arg_1"	"decimal"	4	0	1	1
3369	476	"arg_2"	"smallint"	16	0	1	2
3370	477	"res_0"	"smallint"	16	0	0	0
3371	477	"arg_1"	"decimal"	9	0	1	1
3372	477	"arg_2"	"smallint"	16	0	1	2
3373	478	"res_0"	"smallint"	16	0	0	0
3374	478	"arg_1"	"decimal"	19	0	1	1
3375	478	"arg_2"	"smallint"	16	0	1	2
3376	479	"res_0"	"smallint"	16	0	0	0
3377	479	"arg_1"	"real"	24	0	1	1
3378	479	"arg_2"	"smallint"	16	0	1	2
3379	480	"res_0"	"smallint"	16	0	0	0
3380	480	"arg_1"	"double"	53	0	1	1
3381	480	"arg_2"	"smallint"	16	0	1	2
3382	481	"res_0"	"smallint"	16	0	0	0
3383	481	"arg_1"	"month_interval"	32	0	1	1
3384	481	"arg_2"	"smallint"	16	0	1	2
3385	482	"res_0"	"smallint"	16	0	0	0
3386	482	"arg_1"	"sec_interval"	19	0	1	1
3387	482	"arg_2"	"smallint"	16	0	1	2
3388	483	"res_0"	"smallint"	16	0	0	0
3389	483	"arg_1"	"time"	7	0	1	1
3390	483	"arg_2"	"smallint"	16	0	1	2
3391	484	"res_0"	"smallint"	16	0	0	0
3392	484	"arg_1"	"timetz"	7	0	1	1
3393	484	"arg_2"	"smallint"	16	0	1	2
3394	485	"res_0"	"smallint"	16	0	0	0
3395	485	"arg_1"	"date"	0	0	1	1
3396	485	"arg_2"	"smallint"	16	0	1	2
3397	486	"res_0"	"smallint"	16	0	0	0
3398	486	"arg_1"	"timestamp"	7	0	1	1
3399	486	"arg_2"	"smallint"	16	0	1	2
3400	487	"res_0"	"smallint"	16	0	0	0
3401	487	"arg_1"	"timestamptz"	7	0	1	1
3402	487	"arg_2"	"smallint"	16	0	1	2
3403	488	"res_0"	"smallint"	16	0	0	0
3404	488	"arg_1"	"blob"	0	0	1	1
3405	488	"arg_2"	"smallint"	16	0	1	2
3406	489	"res_0"	"int"	32	0	0	0
3407	489	"arg_1"	"oid"	63	0	1	1
3408	489	"arg_2"	"int"	32	0	1	2
3409	490	"res_0"	"int"	32	0	0	0
3410	490	"arg_1"	"tinyint"	8	0	1	1
3411	490	"arg_2"	"int"	32	0	1	2
3412	491	"res_0"	"int"	32	0	0	0
3413	491	"arg_1"	"smallint"	16	0	1	1
3414	491	"arg_2"	"int"	32	0	1	2
3415	492	"res_0"	"int"	32	0	0	0
3416	492	"arg_1"	"int"	32	0	1	1
3417	492	"arg_2"	"int"	32	0	1	2
3418	493	"res_0"	"int"	32	0	0	0
3419	493	"arg_1"	"bigint"	64	0	1	1
3420	493	"arg_2"	"int"	32	0	1	2
3421	494	"res_0"	"int"	32	0	0	0
3422	494	"arg_1"	"wrd"	64	0	1	1
3423	494	"arg_2"	"int"	32	0	1	2
3424	495	"res_0"	"int"	32	0	0	0
3425	495	"arg_1"	"decimal"	2	0	1	1
3426	495	"arg_2"	"int"	32	0	1	2
3427	496	"res_0"	"int"	32	0	0	0
3428	496	"arg_1"	"decimal"	4	0	1	1
3429	496	"arg_2"	"int"	32	0	1	2
3430	497	"res_0"	"int"	32	0	0	0
3431	497	"arg_1"	"decimal"	9	0	1	1
3432	497	"arg_2"	"int"	32	0	1	2
3433	498	"res_0"	"int"	32	0	0	0
3434	498	"arg_1"	"decimal"	19	0	1	1
3435	498	"arg_2"	"int"	32	0	1	2
3436	499	"res_0"	"int"	32	0	0	0
3437	499	"arg_1"	"real"	24	0	1	1
3438	499	"arg_2"	"int"	32	0	1	2
3439	500	"res_0"	"int"	32	0	0	0
3440	500	"arg_1"	"double"	53	0	1	1
3441	500	"arg_2"	"int"	32	0	1	2
3442	501	"res_0"	"int"	32	0	0	0
3443	501	"arg_1"	"month_interval"	32	0	1	1
3444	501	"arg_2"	"int"	32	0	1	2
3445	502	"res_0"	"int"	32	0	0	0
3446	502	"arg_1"	"sec_interval"	19	0	1	1
3447	502	"arg_2"	"int"	32	0	1	2
3448	503	"res_0"	"int"	32	0	0	0
3449	503	"arg_1"	"time"	7	0	1	1
3450	503	"arg_2"	"int"	32	0	1	2
3451	504	"res_0"	"int"	32	0	0	0
3452	504	"arg_1"	"timetz"	7	0	1	1
3453	504	"arg_2"	"int"	32	0	1	2
3454	505	"res_0"	"int"	32	0	0	0
3455	505	"arg_1"	"date"	0	0	1	1
3456	505	"arg_2"	"int"	32	0	1	2
3457	506	"res_0"	"int"	32	0	0	0
3458	506	"arg_1"	"timestamp"	7	0	1	1
3459	506	"arg_2"	"int"	32	0	1	2
3460	507	"res_0"	"int"	32	0	0	0
3461	507	"arg_1"	"timestamptz"	7	0	1	1
3462	507	"arg_2"	"int"	32	0	1	2
3463	508	"res_0"	"int"	32	0	0	0
3464	508	"arg_1"	"blob"	0	0	1	1
3465	508	"arg_2"	"int"	32	0	1	2
3466	509	"res_0"	"bigint"	64	0	0	0
3467	509	"arg_1"	"oid"	63	0	1	1
3468	509	"arg_2"	"bigint"	64	0	1	2
3469	510	"res_0"	"bigint"	64	0	0	0
3470	510	"arg_1"	"tinyint"	8	0	1	1
3471	510	"arg_2"	"bigint"	64	0	1	2
3472	511	"res_0"	"bigint"	64	0	0	0
3473	511	"arg_1"	"smallint"	16	0	1	1
3474	511	"arg_2"	"bigint"	64	0	1	2
3475	512	"res_0"	"bigint"	64	0	0	0
3476	512	"arg_1"	"int"	32	0	1	1
3477	512	"arg_2"	"bigint"	64	0	1	2
3478	513	"res_0"	"bigint"	64	0	0	0
3479	513	"arg_1"	"bigint"	64	0	1	1
3480	513	"arg_2"	"bigint"	64	0	1	2
3481	514	"res_0"	"bigint"	64	0	0	0
3482	514	"arg_1"	"wrd"	64	0	1	1
3483	514	"arg_2"	"bigint"	64	0	1	2
3484	515	"res_0"	"bigint"	64	0	0	0
3485	515	"arg_1"	"decimal"	2	0	1	1
3486	515	"arg_2"	"bigint"	64	0	1	2
3487	516	"res_0"	"bigint"	64	0	0	0
3488	516	"arg_1"	"decimal"	4	0	1	1
3489	516	"arg_2"	"bigint"	64	0	1	2
3490	517	"res_0"	"bigint"	64	0	0	0
3491	517	"arg_1"	"decimal"	9	0	1	1
3492	517	"arg_2"	"bigint"	64	0	1	2
3493	518	"res_0"	"bigint"	64	0	0	0
3494	518	"arg_1"	"decimal"	19	0	1	1
3495	518	"arg_2"	"bigint"	64	0	1	2
3496	519	"res_0"	"bigint"	64	0	0	0
3497	519	"arg_1"	"real"	24	0	1	1
3498	519	"arg_2"	"bigint"	64	0	1	2
3499	520	"res_0"	"bigint"	64	0	0	0
3500	520	"arg_1"	"double"	53	0	1	1
3501	520	"arg_2"	"bigint"	64	0	1	2
3502	521	"res_0"	"bigint"	64	0	0	0
3503	521	"arg_1"	"month_interval"	32	0	1	1
3504	521	"arg_2"	"bigint"	64	0	1	2
3505	522	"res_0"	"bigint"	64	0	0	0
3506	522	"arg_1"	"sec_interval"	19	0	1	1
3507	522	"arg_2"	"bigint"	64	0	1	2
3508	523	"res_0"	"bigint"	64	0	0	0
3509	523	"arg_1"	"time"	7	0	1	1
3510	523	"arg_2"	"bigint"	64	0	1	2
3511	524	"res_0"	"bigint"	64	0	0	0
3512	524	"arg_1"	"timetz"	7	0	1	1
3513	524	"arg_2"	"bigint"	64	0	1	2
3514	525	"res_0"	"bigint"	64	0	0	0
3515	525	"arg_1"	"date"	0	0	1	1
3516	525	"arg_2"	"bigint"	64	0	1	2
3517	526	"res_0"	"bigint"	64	0	0	0
3518	526	"arg_1"	"timestamp"	7	0	1	1
3519	526	"arg_2"	"bigint"	64	0	1	2
3520	527	"res_0"	"bigint"	64	0	0	0
3521	527	"arg_1"	"timestamptz"	7	0	1	1
3522	527	"arg_2"	"bigint"	64	0	1	2
3523	528	"res_0"	"bigint"	64	0	0	0
3524	528	"arg_1"	"blob"	0	0	1	1
3525	528	"arg_2"	"bigint"	64	0	1	2
3526	529	"res_0"	"wrd"	64	0	0	0
3527	529	"arg_1"	"oid"	63	0	1	1
3528	529	"arg_2"	"wrd"	64	0	1	2
3529	530	"res_0"	"wrd"	64	0	0	0
3530	530	"arg_1"	"tinyint"	8	0	1	1
3531	530	"arg_2"	"wrd"	64	0	1	2
3532	531	"res_0"	"wrd"	64	0	0	0
3533	531	"arg_1"	"smallint"	16	0	1	1
3534	531	"arg_2"	"wrd"	64	0	1	2
3535	532	"res_0"	"wrd"	64	0	0	0
3536	532	"arg_1"	"int"	32	0	1	1
3537	532	"arg_2"	"wrd"	64	0	1	2
3538	533	"res_0"	"wrd"	64	0	0	0
3539	533	"arg_1"	"bigint"	64	0	1	1
3540	533	"arg_2"	"wrd"	64	0	1	2
3541	534	"res_0"	"wrd"	64	0	0	0
3542	534	"arg_1"	"wrd"	64	0	1	1
3543	534	"arg_2"	"wrd"	64	0	1	2
3544	535	"res_0"	"wrd"	64	0	0	0
3545	535	"arg_1"	"decimal"	2	0	1	1
3546	535	"arg_2"	"wrd"	64	0	1	2
3547	536	"res_0"	"wrd"	64	0	0	0
3548	536	"arg_1"	"decimal"	4	0	1	1
3549	536	"arg_2"	"wrd"	64	0	1	2
3550	537	"res_0"	"wrd"	64	0	0	0
3551	537	"arg_1"	"decimal"	9	0	1	1
3552	537	"arg_2"	"wrd"	64	0	1	2
3553	538	"res_0"	"wrd"	64	0	0	0
3554	538	"arg_1"	"decimal"	19	0	1	1
3555	538	"arg_2"	"wrd"	64	0	1	2
3556	539	"res_0"	"wrd"	64	0	0	0
3557	539	"arg_1"	"real"	24	0	1	1
3558	539	"arg_2"	"wrd"	64	0	1	2
3559	540	"res_0"	"wrd"	64	0	0	0
3560	540	"arg_1"	"double"	53	0	1	1
3561	540	"arg_2"	"wrd"	64	0	1	2
3562	541	"res_0"	"wrd"	64	0	0	0
3563	541	"arg_1"	"month_interval"	32	0	1	1
3564	541	"arg_2"	"wrd"	64	0	1	2
3565	542	"res_0"	"wrd"	64	0	0	0
3566	542	"arg_1"	"sec_interval"	19	0	1	1
3567	542	"arg_2"	"wrd"	64	0	1	2
3568	543	"res_0"	"wrd"	64	0	0	0
3569	543	"arg_1"	"time"	7	0	1	1
3570	543	"arg_2"	"wrd"	64	0	1	2
3571	544	"res_0"	"wrd"	64	0	0	0
3572	544	"arg_1"	"timetz"	7	0	1	1
3573	544	"arg_2"	"wrd"	64	0	1	2
3574	545	"res_0"	"wrd"	64	0	0	0
3575	545	"arg_1"	"date"	0	0	1	1
3576	545	"arg_2"	"wrd"	64	0	1	2
3577	546	"res_0"	"wrd"	64	0	0	0
3578	546	"arg_1"	"timestamp"	7	0	1	1
3579	546	"arg_2"	"wrd"	64	0	1	2
3580	547	"res_0"	"wrd"	64	0	0	0
3581	547	"arg_1"	"timestamptz"	7	0	1	1
3582	547	"arg_2"	"wrd"	64	0	1	2
3583	548	"res_0"	"wrd"	64	0	0	0
3584	548	"arg_1"	"blob"	0	0	1	1
3585	548	"arg_2"	"wrd"	64	0	1	2
3586	549	"res_0"	"decimal"	2	0	0	0
3587	549	"arg_1"	"oid"	63	0	1	1
3588	549	"arg_2"	"decimal"	2	0	1	2
3589	550	"res_0"	"decimal"	2	0	0	0
3590	550	"arg_1"	"tinyint"	8	0	1	1
3591	550	"arg_2"	"decimal"	2	0	1	2
3592	551	"res_0"	"decimal"	2	0	0	0
3593	551	"arg_1"	"smallint"	16	0	1	1
3594	551	"arg_2"	"decimal"	2	0	1	2
3595	552	"res_0"	"decimal"	2	0	0	0
3596	552	"arg_1"	"int"	32	0	1	1
3597	552	"arg_2"	"decimal"	2	0	1	2
3598	553	"res_0"	"decimal"	2	0	0	0
3599	553	"arg_1"	"bigint"	64	0	1	1
3600	553	"arg_2"	"decimal"	2	0	1	2
3601	554	"res_0"	"decimal"	2	0	0	0
3602	554	"arg_1"	"wrd"	64	0	1	1
3603	554	"arg_2"	"decimal"	2	0	1	2
3604	555	"res_0"	"decimal"	2	0	0	0
3605	555	"arg_1"	"decimal"	2	0	1	1
3606	555	"arg_2"	"decimal"	2	0	1	2
3607	556	"res_0"	"decimal"	2	0	0	0
3608	556	"arg_1"	"decimal"	4	0	1	1
3609	556	"arg_2"	"decimal"	2	0	1	2
3610	557	"res_0"	"decimal"	2	0	0	0
3611	557	"arg_1"	"decimal"	9	0	1	1
3612	557	"arg_2"	"decimal"	2	0	1	2
3613	558	"res_0"	"decimal"	2	0	0	0
3614	558	"arg_1"	"decimal"	19	0	1	1
3615	558	"arg_2"	"decimal"	2	0	1	2
3616	559	"res_0"	"decimal"	2	0	0	0
3617	559	"arg_1"	"real"	24	0	1	1
3618	559	"arg_2"	"decimal"	2	0	1	2
3619	560	"res_0"	"decimal"	2	0	0	0
3620	560	"arg_1"	"double"	53	0	1	1
3621	560	"arg_2"	"decimal"	2	0	1	2
3622	561	"res_0"	"decimal"	2	0	0	0
3623	561	"arg_1"	"month_interval"	32	0	1	1
3624	561	"arg_2"	"decimal"	2	0	1	2
3625	562	"res_0"	"decimal"	2	0	0	0
3626	562	"arg_1"	"sec_interval"	19	0	1	1
3627	562	"arg_2"	"decimal"	2	0	1	2
3628	563	"res_0"	"decimal"	2	0	0	0
3629	563	"arg_1"	"time"	7	0	1	1
3630	563	"arg_2"	"decimal"	2	0	1	2
3631	564	"res_0"	"decimal"	2	0	0	0
3632	564	"arg_1"	"timetz"	7	0	1	1
3633	564	"arg_2"	"decimal"	2	0	1	2
3634	565	"res_0"	"decimal"	2	0	0	0
3635	565	"arg_1"	"date"	0	0	1	1
3636	565	"arg_2"	"decimal"	2	0	1	2
3637	566	"res_0"	"decimal"	2	0	0	0
3638	566	"arg_1"	"timestamp"	7	0	1	1
3639	566	"arg_2"	"decimal"	2	0	1	2
3640	567	"res_0"	"decimal"	2	0	0	0
3641	567	"arg_1"	"timestamptz"	7	0	1	1
3642	567	"arg_2"	"decimal"	2	0	1	2
3643	568	"res_0"	"decimal"	2	0	0	0
3644	568	"arg_1"	"blob"	0	0	1	1
3645	568	"arg_2"	"decimal"	2	0	1	2
3646	569	"res_0"	"decimal"	4	0	0	0
3647	569	"arg_1"	"oid"	63	0	1	1
3648	569	"arg_2"	"decimal"	4	0	1	2
3649	570	"res_0"	"decimal"	4	0	0	0
3650	570	"arg_1"	"tinyint"	8	0	1	1
3651	570	"arg_2"	"decimal"	4	0	1	2
3652	571	"res_0"	"decimal"	4	0	0	0
3653	571	"arg_1"	"smallint"	16	0	1	1
3654	571	"arg_2"	"decimal"	4	0	1	2
3655	572	"res_0"	"decimal"	4	0	0	0
3656	572	"arg_1"	"int"	32	0	1	1
3657	572	"arg_2"	"decimal"	4	0	1	2
3658	573	"res_0"	"decimal"	4	0	0	0
3659	573	"arg_1"	"bigint"	64	0	1	1
3660	573	"arg_2"	"decimal"	4	0	1	2
3661	574	"res_0"	"decimal"	4	0	0	0
3662	574	"arg_1"	"wrd"	64	0	1	1
3663	574	"arg_2"	"decimal"	4	0	1	2
3664	575	"res_0"	"decimal"	4	0	0	0
3665	575	"arg_1"	"decimal"	2	0	1	1
3666	575	"arg_2"	"decimal"	4	0	1	2
3667	576	"res_0"	"decimal"	4	0	0	0
3668	576	"arg_1"	"decimal"	4	0	1	1
3669	576	"arg_2"	"decimal"	4	0	1	2
3670	577	"res_0"	"decimal"	4	0	0	0
3671	577	"arg_1"	"decimal"	9	0	1	1
3672	577	"arg_2"	"decimal"	4	0	1	2
3673	578	"res_0"	"decimal"	4	0	0	0
3674	578	"arg_1"	"decimal"	19	0	1	1
3675	578	"arg_2"	"decimal"	4	0	1	2
3676	579	"res_0"	"decimal"	4	0	0	0
3677	579	"arg_1"	"real"	24	0	1	1
3678	579	"arg_2"	"decimal"	4	0	1	2
3679	580	"res_0"	"decimal"	4	0	0	0
3680	580	"arg_1"	"double"	53	0	1	1
3681	580	"arg_2"	"decimal"	4	0	1	2
3682	581	"res_0"	"decimal"	4	0	0	0
3683	581	"arg_1"	"month_interval"	32	0	1	1
3684	581	"arg_2"	"decimal"	4	0	1	2
3685	582	"res_0"	"decimal"	4	0	0	0
3686	582	"arg_1"	"sec_interval"	19	0	1	1
3687	582	"arg_2"	"decimal"	4	0	1	2
3688	583	"res_0"	"decimal"	4	0	0	0
3689	583	"arg_1"	"time"	7	0	1	1
3690	583	"arg_2"	"decimal"	4	0	1	2
3691	584	"res_0"	"decimal"	4	0	0	0
3692	584	"arg_1"	"timetz"	7	0	1	1
3693	584	"arg_2"	"decimal"	4	0	1	2
3694	585	"res_0"	"decimal"	4	0	0	0
3695	585	"arg_1"	"date"	0	0	1	1
3696	585	"arg_2"	"decimal"	4	0	1	2
3697	586	"res_0"	"decimal"	4	0	0	0
3698	586	"arg_1"	"timestamp"	7	0	1	1
3699	586	"arg_2"	"decimal"	4	0	1	2
3700	587	"res_0"	"decimal"	4	0	0	0
3701	587	"arg_1"	"timestamptz"	7	0	1	1
3702	587	"arg_2"	"decimal"	4	0	1	2
3703	588	"res_0"	"decimal"	4	0	0	0
3704	588	"arg_1"	"blob"	0	0	1	1
3705	588	"arg_2"	"decimal"	4	0	1	2
3706	589	"res_0"	"decimal"	9	0	0	0
3707	589	"arg_1"	"oid"	63	0	1	1
3708	589	"arg_2"	"decimal"	9	0	1	2
3709	590	"res_0"	"decimal"	9	0	0	0
3710	590	"arg_1"	"tinyint"	8	0	1	1
3711	590	"arg_2"	"decimal"	9	0	1	2
3712	591	"res_0"	"decimal"	9	0	0	0
3713	591	"arg_1"	"smallint"	16	0	1	1
3714	591	"arg_2"	"decimal"	9	0	1	2
3715	592	"res_0"	"decimal"	9	0	0	0
3716	592	"arg_1"	"int"	32	0	1	1
3717	592	"arg_2"	"decimal"	9	0	1	2
3718	593	"res_0"	"decimal"	9	0	0	0
3719	593	"arg_1"	"bigint"	64	0	1	1
3720	593	"arg_2"	"decimal"	9	0	1	2
3721	594	"res_0"	"decimal"	9	0	0	0
3722	594	"arg_1"	"wrd"	64	0	1	1
3723	594	"arg_2"	"decimal"	9	0	1	2
3724	595	"res_0"	"decimal"	9	0	0	0
3725	595	"arg_1"	"decimal"	2	0	1	1
3726	595	"arg_2"	"decimal"	9	0	1	2
3727	596	"res_0"	"decimal"	9	0	0	0
3728	596	"arg_1"	"decimal"	4	0	1	1
3729	596	"arg_2"	"decimal"	9	0	1	2
3730	597	"res_0"	"decimal"	9	0	0	0
3731	597	"arg_1"	"decimal"	9	0	1	1
3732	597	"arg_2"	"decimal"	9	0	1	2
3733	598	"res_0"	"decimal"	9	0	0	0
3734	598	"arg_1"	"decimal"	19	0	1	1
3735	598	"arg_2"	"decimal"	9	0	1	2
3736	599	"res_0"	"decimal"	9	0	0	0
3737	599	"arg_1"	"real"	24	0	1	1
3738	599	"arg_2"	"decimal"	9	0	1	2
3739	600	"res_0"	"decimal"	9	0	0	0
3740	600	"arg_1"	"double"	53	0	1	1
3741	600	"arg_2"	"decimal"	9	0	1	2
3742	601	"res_0"	"decimal"	9	0	0	0
3743	601	"arg_1"	"month_interval"	32	0	1	1
3744	601	"arg_2"	"decimal"	9	0	1	2
3745	602	"res_0"	"decimal"	9	0	0	0
3746	602	"arg_1"	"sec_interval"	19	0	1	1
3747	602	"arg_2"	"decimal"	9	0	1	2
3748	603	"res_0"	"decimal"	9	0	0	0
3749	603	"arg_1"	"time"	7	0	1	1
3750	603	"arg_2"	"decimal"	9	0	1	2
3751	604	"res_0"	"decimal"	9	0	0	0
3752	604	"arg_1"	"timetz"	7	0	1	1
3753	604	"arg_2"	"decimal"	9	0	1	2
3754	605	"res_0"	"decimal"	9	0	0	0
3755	605	"arg_1"	"date"	0	0	1	1
3756	605	"arg_2"	"decimal"	9	0	1	2
3757	606	"res_0"	"decimal"	9	0	0	0
3758	606	"arg_1"	"timestamp"	7	0	1	1
3759	606	"arg_2"	"decimal"	9	0	1	2
3760	607	"res_0"	"decimal"	9	0	0	0
3761	607	"arg_1"	"timestamptz"	7	0	1	1
3762	607	"arg_2"	"decimal"	9	0	1	2
3763	608	"res_0"	"decimal"	9	0	0	0
3764	608	"arg_1"	"blob"	0	0	1	1
3765	608	"arg_2"	"decimal"	9	0	1	2
3766	609	"res_0"	"decimal"	19	0	0	0
3767	609	"arg_1"	"oid"	63	0	1	1
3768	609	"arg_2"	"decimal"	19	0	1	2
3769	610	"res_0"	"decimal"	19	0	0	0
3770	610	"arg_1"	"tinyint"	8	0	1	1
3771	610	"arg_2"	"decimal"	19	0	1	2
3772	611	"res_0"	"decimal"	19	0	0	0
3773	611	"arg_1"	"smallint"	16	0	1	1
3774	611	"arg_2"	"decimal"	19	0	1	2
3775	612	"res_0"	"decimal"	19	0	0	0
3776	612	"arg_1"	"int"	32	0	1	1
3777	612	"arg_2"	"decimal"	19	0	1	2
3778	613	"res_0"	"decimal"	19	0	0	0
3779	613	"arg_1"	"bigint"	64	0	1	1
3780	613	"arg_2"	"decimal"	19	0	1	2
3781	614	"res_0"	"decimal"	19	0	0	0
3782	614	"arg_1"	"wrd"	64	0	1	1
3783	614	"arg_2"	"decimal"	19	0	1	2
3784	615	"res_0"	"decimal"	19	0	0	0
3785	615	"arg_1"	"decimal"	2	0	1	1
3786	615	"arg_2"	"decimal"	19	0	1	2
3787	616	"res_0"	"decimal"	19	0	0	0
3788	616	"arg_1"	"decimal"	4	0	1	1
3789	616	"arg_2"	"decimal"	19	0	1	2
3790	617	"res_0"	"decimal"	19	0	0	0
3791	617	"arg_1"	"decimal"	9	0	1	1
3792	617	"arg_2"	"decimal"	19	0	1	2
3793	618	"res_0"	"decimal"	19	0	0	0
3794	618	"arg_1"	"decimal"	19	0	1	1
3795	618	"arg_2"	"decimal"	19	0	1	2
3796	619	"res_0"	"decimal"	19	0	0	0
3797	619	"arg_1"	"real"	24	0	1	1
3798	619	"arg_2"	"decimal"	19	0	1	2
3799	620	"res_0"	"decimal"	19	0	0	0
3800	620	"arg_1"	"double"	53	0	1	1
3801	620	"arg_2"	"decimal"	19	0	1	2
3802	621	"res_0"	"decimal"	19	0	0	0
3803	621	"arg_1"	"month_interval"	32	0	1	1
3804	621	"arg_2"	"decimal"	19	0	1	2
3805	622	"res_0"	"decimal"	19	0	0	0
3806	622	"arg_1"	"sec_interval"	19	0	1	1
3807	622	"arg_2"	"decimal"	19	0	1	2
3808	623	"res_0"	"decimal"	19	0	0	0
3809	623	"arg_1"	"time"	7	0	1	1
3810	623	"arg_2"	"decimal"	19	0	1	2
3811	624	"res_0"	"decimal"	19	0	0	0
3812	624	"arg_1"	"timetz"	7	0	1	1
3813	624	"arg_2"	"decimal"	19	0	1	2
3814	625	"res_0"	"decimal"	19	0	0	0
3815	625	"arg_1"	"date"	0	0	1	1
3816	625	"arg_2"	"decimal"	19	0	1	2
3817	626	"res_0"	"decimal"	19	0	0	0
3818	626	"arg_1"	"timestamp"	7	0	1	1
3819	626	"arg_2"	"decimal"	19	0	1	2
3820	627	"res_0"	"decimal"	19	0	0	0
3821	627	"arg_1"	"timestamptz"	7	0	1	1
3822	627	"arg_2"	"decimal"	19	0	1	2
3823	628	"res_0"	"decimal"	19	0	0	0
3824	628	"arg_1"	"blob"	0	0	1	1
3825	628	"arg_2"	"decimal"	19	0	1	2
3826	629	"res_0"	"real"	24	0	0	0
3827	629	"arg_1"	"oid"	63	0	1	1
3828	629	"arg_2"	"real"	24	0	1	2
3829	630	"res_0"	"real"	24	0	0	0
3830	630	"arg_1"	"tinyint"	8	0	1	1
3831	630	"arg_2"	"real"	24	0	1	2
3832	631	"res_0"	"real"	24	0	0	0
3833	631	"arg_1"	"smallint"	16	0	1	1
3834	631	"arg_2"	"real"	24	0	1	2
3835	632	"res_0"	"real"	24	0	0	0
3836	632	"arg_1"	"int"	32	0	1	1
3837	632	"arg_2"	"real"	24	0	1	2
3838	633	"res_0"	"real"	24	0	0	0
3839	633	"arg_1"	"bigint"	64	0	1	1
3840	633	"arg_2"	"real"	24	0	1	2
3841	634	"res_0"	"real"	24	0	0	0
3842	634	"arg_1"	"wrd"	64	0	1	1
3843	634	"arg_2"	"real"	24	0	1	2
3844	635	"res_0"	"real"	24	0	0	0
3845	635	"arg_1"	"decimal"	2	0	1	1
3846	635	"arg_2"	"real"	24	0	1	2
3847	636	"res_0"	"real"	24	0	0	0
3848	636	"arg_1"	"decimal"	4	0	1	1
3849	636	"arg_2"	"real"	24	0	1	2
3850	637	"res_0"	"real"	24	0	0	0
3851	637	"arg_1"	"decimal"	9	0	1	1
3852	637	"arg_2"	"real"	24	0	1	2
3853	638	"res_0"	"real"	24	0	0	0
3854	638	"arg_1"	"decimal"	19	0	1	1
3855	638	"arg_2"	"real"	24	0	1	2
3856	639	"res_0"	"real"	24	0	0	0
3857	639	"arg_1"	"real"	24	0	1	1
3858	639	"arg_2"	"real"	24	0	1	2
3859	640	"res_0"	"real"	24	0	0	0
3860	640	"arg_1"	"double"	53	0	1	1
3861	640	"arg_2"	"real"	24	0	1	2
3862	641	"res_0"	"real"	24	0	0	0
3863	641	"arg_1"	"month_interval"	32	0	1	1
3864	641	"arg_2"	"real"	24	0	1	2
3865	642	"res_0"	"real"	24	0	0	0
3866	642	"arg_1"	"sec_interval"	19	0	1	1
3867	642	"arg_2"	"real"	24	0	1	2
3868	643	"res_0"	"real"	24	0	0	0
3869	643	"arg_1"	"time"	7	0	1	1
3870	643	"arg_2"	"real"	24	0	1	2
3871	644	"res_0"	"real"	24	0	0	0
3872	644	"arg_1"	"timetz"	7	0	1	1
3873	644	"arg_2"	"real"	24	0	1	2
3874	645	"res_0"	"real"	24	0	0	0
3875	645	"arg_1"	"date"	0	0	1	1
3876	645	"arg_2"	"real"	24	0	1	2
3877	646	"res_0"	"real"	24	0	0	0
3878	646	"arg_1"	"timestamp"	7	0	1	1
3879	646	"arg_2"	"real"	24	0	1	2
3880	647	"res_0"	"real"	24	0	0	0
3881	647	"arg_1"	"timestamptz"	7	0	1	1
3882	647	"arg_2"	"real"	24	0	1	2
3883	648	"res_0"	"real"	24	0	0	0
3884	648	"arg_1"	"blob"	0	0	1	1
3885	648	"arg_2"	"real"	24	0	1	2
3886	649	"res_0"	"double"	53	0	0	0
3887	649	"arg_1"	"oid"	63	0	1	1
3888	649	"arg_2"	"double"	53	0	1	2
3889	650	"res_0"	"double"	53	0	0	0
3890	650	"arg_1"	"tinyint"	8	0	1	1
3891	650	"arg_2"	"double"	53	0	1	2
3892	651	"res_0"	"double"	53	0	0	0
3893	651	"arg_1"	"smallint"	16	0	1	1
3894	651	"arg_2"	"double"	53	0	1	2
3895	652	"res_0"	"double"	53	0	0	0
3896	652	"arg_1"	"int"	32	0	1	1
3897	652	"arg_2"	"double"	53	0	1	2
3898	653	"res_0"	"double"	53	0	0	0
3899	653	"arg_1"	"bigint"	64	0	1	1
3900	653	"arg_2"	"double"	53	0	1	2
3901	654	"res_0"	"double"	53	0	0	0
3902	654	"arg_1"	"wrd"	64	0	1	1
3903	654	"arg_2"	"double"	53	0	1	2
3904	655	"res_0"	"double"	53	0	0	0
3905	655	"arg_1"	"decimal"	2	0	1	1
3906	655	"arg_2"	"double"	53	0	1	2
3907	656	"res_0"	"double"	53	0	0	0
3908	656	"arg_1"	"decimal"	4	0	1	1
3909	656	"arg_2"	"double"	53	0	1	2
3910	657	"res_0"	"double"	53	0	0	0
3911	657	"arg_1"	"decimal"	9	0	1	1
3912	657	"arg_2"	"double"	53	0	1	2
3913	658	"res_0"	"double"	53	0	0	0
3914	658	"arg_1"	"decimal"	19	0	1	1
3915	658	"arg_2"	"double"	53	0	1	2
3916	659	"res_0"	"double"	53	0	0	0
3917	659	"arg_1"	"real"	24	0	1	1
3918	659	"arg_2"	"double"	53	0	1	2
3919	660	"res_0"	"double"	53	0	0	0
3920	660	"arg_1"	"double"	53	0	1	1
3921	660	"arg_2"	"double"	53	0	1	2
3922	661	"res_0"	"double"	53	0	0	0
3923	661	"arg_1"	"month_interval"	32	0	1	1
3924	661	"arg_2"	"double"	53	0	1	2
3925	662	"res_0"	"double"	53	0	0	0
3926	662	"arg_1"	"sec_interval"	19	0	1	1
3927	662	"arg_2"	"double"	53	0	1	2
3928	663	"res_0"	"double"	53	0	0	0
3929	663	"arg_1"	"time"	7	0	1	1
3930	663	"arg_2"	"double"	53	0	1	2
3931	664	"res_0"	"double"	53	0	0	0
3932	664	"arg_1"	"timetz"	7	0	1	1
3933	664	"arg_2"	"double"	53	0	1	2
3934	665	"res_0"	"double"	53	0	0	0
3935	665	"arg_1"	"date"	0	0	1	1
3936	665	"arg_2"	"double"	53	0	1	2
3937	666	"res_0"	"double"	53	0	0	0
3938	666	"arg_1"	"timestamp"	7	0	1	1
3939	666	"arg_2"	"double"	53	0	1	2
3940	667	"res_0"	"double"	53	0	0	0
3941	667	"arg_1"	"timestamptz"	7	0	1	1
3942	667	"arg_2"	"double"	53	0	1	2
3943	668	"res_0"	"double"	53	0	0	0
3944	668	"arg_1"	"blob"	0	0	1	1
3945	668	"arg_2"	"double"	53	0	1	2
3946	669	"res_0"	"month_interval"	32	0	0	0
3947	669	"arg_1"	"oid"	63	0	1	1
3948	669	"arg_2"	"month_interval"	32	0	1	2
3949	670	"res_0"	"month_interval"	32	0	0	0
3950	670	"arg_1"	"tinyint"	8	0	1	1
3951	670	"arg_2"	"month_interval"	32	0	1	2
3952	671	"res_0"	"month_interval"	32	0	0	0
3953	671	"arg_1"	"smallint"	16	0	1	1
3954	671	"arg_2"	"month_interval"	32	0	1	2
3955	672	"res_0"	"month_interval"	32	0	0	0
3956	672	"arg_1"	"int"	32	0	1	1
3957	672	"arg_2"	"month_interval"	32	0	1	2
3958	673	"res_0"	"month_interval"	32	0	0	0
3959	673	"arg_1"	"bigint"	64	0	1	1
3960	673	"arg_2"	"month_interval"	32	0	1	2
3961	674	"res_0"	"month_interval"	32	0	0	0
3962	674	"arg_1"	"wrd"	64	0	1	1
3963	674	"arg_2"	"month_interval"	32	0	1	2
3964	675	"res_0"	"month_interval"	32	0	0	0
3965	675	"arg_1"	"decimal"	2	0	1	1
3966	675	"arg_2"	"month_interval"	32	0	1	2
3967	676	"res_0"	"month_interval"	32	0	0	0
3968	676	"arg_1"	"decimal"	4	0	1	1
3969	676	"arg_2"	"month_interval"	32	0	1	2
3970	677	"res_0"	"month_interval"	32	0	0	0
3971	677	"arg_1"	"decimal"	9	0	1	1
3972	677	"arg_2"	"month_interval"	32	0	1	2
3973	678	"res_0"	"month_interval"	32	0	0	0
3974	678	"arg_1"	"decimal"	19	0	1	1
3975	678	"arg_2"	"month_interval"	32	0	1	2
3976	679	"res_0"	"month_interval"	32	0	0	0
3977	679	"arg_1"	"real"	24	0	1	1
3978	679	"arg_2"	"month_interval"	32	0	1	2
3979	680	"res_0"	"month_interval"	32	0	0	0
3980	680	"arg_1"	"double"	53	0	1	1
3981	680	"arg_2"	"month_interval"	32	0	1	2
3982	681	"res_0"	"month_interval"	32	0	0	0
3983	681	"arg_1"	"month_interval"	32	0	1	1
3984	681	"arg_2"	"month_interval"	32	0	1	2
3985	682	"res_0"	"month_interval"	32	0	0	0
3986	682	"arg_1"	"sec_interval"	19	0	1	1
3987	682	"arg_2"	"month_interval"	32	0	1	2
3988	683	"res_0"	"month_interval"	32	0	0	0
3989	683	"arg_1"	"time"	7	0	1	1
3990	683	"arg_2"	"month_interval"	32	0	1	2
3991	684	"res_0"	"month_interval"	32	0	0	0
3992	684	"arg_1"	"timetz"	7	0	1	1
3993	684	"arg_2"	"month_interval"	32	0	1	2
3994	685	"res_0"	"month_interval"	32	0	0	0
3995	685	"arg_1"	"date"	0	0	1	1
3996	685	"arg_2"	"month_interval"	32	0	1	2
3997	686	"res_0"	"month_interval"	32	0	0	0
3998	686	"arg_1"	"timestamp"	7	0	1	1
3999	686	"arg_2"	"month_interval"	32	0	1	2
4000	687	"res_0"	"month_interval"	32	0	0	0
4001	687	"arg_1"	"timestamptz"	7	0	1	1
4002	687	"arg_2"	"month_interval"	32	0	1	2
4003	688	"res_0"	"month_interval"	32	0	0	0
4004	688	"arg_1"	"blob"	0	0	1	1
4005	688	"arg_2"	"month_interval"	32	0	1	2
4006	689	"res_0"	"sec_interval"	19	0	0	0
4007	689	"arg_1"	"oid"	63	0	1	1
4008	689	"arg_2"	"sec_interval"	19	0	1	2
4009	690	"res_0"	"sec_interval"	19	0	0	0
4010	690	"arg_1"	"tinyint"	8	0	1	1
4011	690	"arg_2"	"sec_interval"	19	0	1	2
4012	691	"res_0"	"sec_interval"	19	0	0	0
4013	691	"arg_1"	"smallint"	16	0	1	1
4014	691	"arg_2"	"sec_interval"	19	0	1	2
4015	692	"res_0"	"sec_interval"	19	0	0	0
4016	692	"arg_1"	"int"	32	0	1	1
4017	692	"arg_2"	"sec_interval"	19	0	1	2
4018	693	"res_0"	"sec_interval"	19	0	0	0
4019	693	"arg_1"	"bigint"	64	0	1	1
4020	693	"arg_2"	"sec_interval"	19	0	1	2
4021	694	"res_0"	"sec_interval"	19	0	0	0
4022	694	"arg_1"	"wrd"	64	0	1	1
4023	694	"arg_2"	"sec_interval"	19	0	1	2
4024	695	"res_0"	"sec_interval"	19	0	0	0
4025	695	"arg_1"	"decimal"	2	0	1	1
4026	695	"arg_2"	"sec_interval"	19	0	1	2
4027	696	"res_0"	"sec_interval"	19	0	0	0
4028	696	"arg_1"	"decimal"	4	0	1	1
4029	696	"arg_2"	"sec_interval"	19	0	1	2
4030	697	"res_0"	"sec_interval"	19	0	0	0
4031	697	"arg_1"	"decimal"	9	0	1	1
4032	697	"arg_2"	"sec_interval"	19	0	1	2
4033	698	"res_0"	"sec_interval"	19	0	0	0
4034	698	"arg_1"	"decimal"	19	0	1	1
4035	698	"arg_2"	"sec_interval"	19	0	1	2
4036	699	"res_0"	"sec_interval"	19	0	0	0
4037	699	"arg_1"	"real"	24	0	1	1
4038	699	"arg_2"	"sec_interval"	19	0	1	2
4039	700	"res_0"	"sec_interval"	19	0	0	0
4040	700	"arg_1"	"double"	53	0	1	1
4041	700	"arg_2"	"sec_interval"	19	0	1	2
4042	701	"res_0"	"sec_interval"	19	0	0	0
4043	701	"arg_1"	"month_interval"	32	0	1	1
4044	701	"arg_2"	"sec_interval"	19	0	1	2
4045	702	"res_0"	"sec_interval"	19	0	0	0
4046	702	"arg_1"	"sec_interval"	19	0	1	1
4047	702	"arg_2"	"sec_interval"	19	0	1	2
4048	703	"res_0"	"sec_interval"	19	0	0	0
4049	703	"arg_1"	"time"	7	0	1	1
4050	703	"arg_2"	"sec_interval"	19	0	1	2
4051	704	"res_0"	"sec_interval"	19	0	0	0
4052	704	"arg_1"	"timetz"	7	0	1	1
4053	704	"arg_2"	"sec_interval"	19	0	1	2
4054	705	"res_0"	"sec_interval"	19	0	0	0
4055	705	"arg_1"	"date"	0	0	1	1
4056	705	"arg_2"	"sec_interval"	19	0	1	2
4057	706	"res_0"	"sec_interval"	19	0	0	0
4058	706	"arg_1"	"timestamp"	7	0	1	1
4059	706	"arg_2"	"sec_interval"	19	0	1	2
4060	707	"res_0"	"sec_interval"	19	0	0	0
4061	707	"arg_1"	"timestamptz"	7	0	1	1
4062	707	"arg_2"	"sec_interval"	19	0	1	2
4063	708	"res_0"	"sec_interval"	19	0	0	0
4064	708	"arg_1"	"blob"	0	0	1	1
4065	708	"arg_2"	"sec_interval"	19	0	1	2
4066	709	"res_0"	"time"	7	0	0	0
4067	709	"arg_1"	"oid"	63	0	1	1
4068	709	"arg_2"	"time"	7	0	1	2
4069	710	"res_0"	"time"	7	0	0	0
4070	710	"arg_1"	"tinyint"	8	0	1	1
4071	710	"arg_2"	"time"	7	0	1	2
4072	711	"res_0"	"time"	7	0	0	0
4073	711	"arg_1"	"smallint"	16	0	1	1
4074	711	"arg_2"	"time"	7	0	1	2
4075	712	"res_0"	"time"	7	0	0	0
4076	712	"arg_1"	"int"	32	0	1	1
4077	712	"arg_2"	"time"	7	0	1	2
4078	713	"res_0"	"time"	7	0	0	0
4079	713	"arg_1"	"bigint"	64	0	1	1
4080	713	"arg_2"	"time"	7	0	1	2
4081	714	"res_0"	"time"	7	0	0	0
4082	714	"arg_1"	"wrd"	64	0	1	1
4083	714	"arg_2"	"time"	7	0	1	2
4084	715	"res_0"	"time"	7	0	0	0
4085	715	"arg_1"	"decimal"	2	0	1	1
4086	715	"arg_2"	"time"	7	0	1	2
4087	716	"res_0"	"time"	7	0	0	0
4088	716	"arg_1"	"decimal"	4	0	1	1
4089	716	"arg_2"	"time"	7	0	1	2
4090	717	"res_0"	"time"	7	0	0	0
4091	717	"arg_1"	"decimal"	9	0	1	1
4092	717	"arg_2"	"time"	7	0	1	2
4093	718	"res_0"	"time"	7	0	0	0
4094	718	"arg_1"	"decimal"	19	0	1	1
4095	718	"arg_2"	"time"	7	0	1	2
4096	719	"res_0"	"time"	7	0	0	0
4097	719	"arg_1"	"real"	24	0	1	1
4098	719	"arg_2"	"time"	7	0	1	2
4099	720	"res_0"	"time"	7	0	0	0
4100	720	"arg_1"	"double"	53	0	1	1
4101	720	"arg_2"	"time"	7	0	1	2
4102	721	"res_0"	"time"	7	0	0	0
4103	721	"arg_1"	"month_interval"	32	0	1	1
4104	721	"arg_2"	"time"	7	0	1	2
4105	722	"res_0"	"time"	7	0	0	0
4106	722	"arg_1"	"sec_interval"	19	0	1	1
4107	722	"arg_2"	"time"	7	0	1	2
4108	723	"res_0"	"time"	7	0	0	0
4109	723	"arg_1"	"time"	7	0	1	1
4110	723	"arg_2"	"time"	7	0	1	2
4111	724	"res_0"	"time"	7	0	0	0
4112	724	"arg_1"	"timetz"	7	0	1	1
4113	724	"arg_2"	"time"	7	0	1	2
4114	725	"res_0"	"time"	7	0	0	0
4115	725	"arg_1"	"date"	0	0	1	1
4116	725	"arg_2"	"time"	7	0	1	2
4117	726	"res_0"	"time"	7	0	0	0
4118	726	"arg_1"	"timestamp"	7	0	1	1
4119	726	"arg_2"	"time"	7	0	1	2
4120	727	"res_0"	"time"	7	0	0	0
4121	727	"arg_1"	"timestamptz"	7	0	1	1
4122	727	"arg_2"	"time"	7	0	1	2
4123	728	"res_0"	"time"	7	0	0	0
4124	728	"arg_1"	"blob"	0	0	1	1
4125	728	"arg_2"	"time"	7	0	1	2
4126	729	"res_0"	"timetz"	7	0	0	0
4127	729	"arg_1"	"oid"	63	0	1	1
4128	729	"arg_2"	"timetz"	7	0	1	2
4129	730	"res_0"	"timetz"	7	0	0	0
4130	730	"arg_1"	"tinyint"	8	0	1	1
4131	730	"arg_2"	"timetz"	7	0	1	2
4132	731	"res_0"	"timetz"	7	0	0	0
4133	731	"arg_1"	"smallint"	16	0	1	1
4134	731	"arg_2"	"timetz"	7	0	1	2
4135	732	"res_0"	"timetz"	7	0	0	0
4136	732	"arg_1"	"int"	32	0	1	1
4137	732	"arg_2"	"timetz"	7	0	1	2
4138	733	"res_0"	"timetz"	7	0	0	0
4139	733	"arg_1"	"bigint"	64	0	1	1
4140	733	"arg_2"	"timetz"	7	0	1	2
4141	734	"res_0"	"timetz"	7	0	0	0
4142	734	"arg_1"	"wrd"	64	0	1	1
4143	734	"arg_2"	"timetz"	7	0	1	2
4144	735	"res_0"	"timetz"	7	0	0	0
4145	735	"arg_1"	"decimal"	2	0	1	1
4146	735	"arg_2"	"timetz"	7	0	1	2
4147	736	"res_0"	"timetz"	7	0	0	0
4148	736	"arg_1"	"decimal"	4	0	1	1
4149	736	"arg_2"	"timetz"	7	0	1	2
4150	737	"res_0"	"timetz"	7	0	0	0
4151	737	"arg_1"	"decimal"	9	0	1	1
4152	737	"arg_2"	"timetz"	7	0	1	2
4153	738	"res_0"	"timetz"	7	0	0	0
4154	738	"arg_1"	"decimal"	19	0	1	1
4155	738	"arg_2"	"timetz"	7	0	1	2
4156	739	"res_0"	"timetz"	7	0	0	0
4157	739	"arg_1"	"real"	24	0	1	1
4158	739	"arg_2"	"timetz"	7	0	1	2
4159	740	"res_0"	"timetz"	7	0	0	0
4160	740	"arg_1"	"double"	53	0	1	1
4161	740	"arg_2"	"timetz"	7	0	1	2
4162	741	"res_0"	"timetz"	7	0	0	0
4163	741	"arg_1"	"month_interval"	32	0	1	1
4164	741	"arg_2"	"timetz"	7	0	1	2
4165	742	"res_0"	"timetz"	7	0	0	0
4166	742	"arg_1"	"sec_interval"	19	0	1	1
4167	742	"arg_2"	"timetz"	7	0	1	2
4168	743	"res_0"	"timetz"	7	0	0	0
4169	743	"arg_1"	"time"	7	0	1	1
4170	743	"arg_2"	"timetz"	7	0	1	2
4171	744	"res_0"	"timetz"	7	0	0	0
4172	744	"arg_1"	"timetz"	7	0	1	1
4173	744	"arg_2"	"timetz"	7	0	1	2
4174	745	"res_0"	"timetz"	7	0	0	0
4175	745	"arg_1"	"date"	0	0	1	1
4176	745	"arg_2"	"timetz"	7	0	1	2
4177	746	"res_0"	"timetz"	7	0	0	0
4178	746	"arg_1"	"timestamp"	7	0	1	1
4179	746	"arg_2"	"timetz"	7	0	1	2
4180	747	"res_0"	"timetz"	7	0	0	0
4181	747	"arg_1"	"timestamptz"	7	0	1	1
4182	747	"arg_2"	"timetz"	7	0	1	2
4183	748	"res_0"	"timetz"	7	0	0	0
4184	748	"arg_1"	"blob"	0	0	1	1
4185	748	"arg_2"	"timetz"	7	0	1	2
4186	749	"res_0"	"date"	0	0	0	0
4187	749	"arg_1"	"oid"	63	0	1	1
4188	749	"arg_2"	"date"	0	0	1	2
4189	750	"res_0"	"date"	0	0	0	0
4190	750	"arg_1"	"tinyint"	8	0	1	1
4191	750	"arg_2"	"date"	0	0	1	2
4192	751	"res_0"	"date"	0	0	0	0
4193	751	"arg_1"	"smallint"	16	0	1	1
4194	751	"arg_2"	"date"	0	0	1	2
4195	752	"res_0"	"date"	0	0	0	0
4196	752	"arg_1"	"int"	32	0	1	1
4197	752	"arg_2"	"date"	0	0	1	2
4198	753	"res_0"	"date"	0	0	0	0
4199	753	"arg_1"	"bigint"	64	0	1	1
4200	753	"arg_2"	"date"	0	0	1	2
4201	754	"res_0"	"date"	0	0	0	0
4202	754	"arg_1"	"wrd"	64	0	1	1
4203	754	"arg_2"	"date"	0	0	1	2
4204	755	"res_0"	"date"	0	0	0	0
4205	755	"arg_1"	"decimal"	2	0	1	1
4206	755	"arg_2"	"date"	0	0	1	2
4207	756	"res_0"	"date"	0	0	0	0
4208	756	"arg_1"	"decimal"	4	0	1	1
4209	756	"arg_2"	"date"	0	0	1	2
4210	757	"res_0"	"date"	0	0	0	0
4211	757	"arg_1"	"decimal"	9	0	1	1
4212	757	"arg_2"	"date"	0	0	1	2
4213	758	"res_0"	"date"	0	0	0	0
4214	758	"arg_1"	"decimal"	19	0	1	1
4215	758	"arg_2"	"date"	0	0	1	2
4216	759	"res_0"	"date"	0	0	0	0
4217	759	"arg_1"	"real"	24	0	1	1
4218	759	"arg_2"	"date"	0	0	1	2
4219	760	"res_0"	"date"	0	0	0	0
4220	760	"arg_1"	"double"	53	0	1	1
4221	760	"arg_2"	"date"	0	0	1	2
4222	761	"res_0"	"date"	0	0	0	0
4223	761	"arg_1"	"month_interval"	32	0	1	1
4224	761	"arg_2"	"date"	0	0	1	2
4225	762	"res_0"	"date"	0	0	0	0
4226	762	"arg_1"	"sec_interval"	19	0	1	1
4227	762	"arg_2"	"date"	0	0	1	2
4228	763	"res_0"	"date"	0	0	0	0
4229	763	"arg_1"	"time"	7	0	1	1
4230	763	"arg_2"	"date"	0	0	1	2
4231	764	"res_0"	"date"	0	0	0	0
4232	764	"arg_1"	"timetz"	7	0	1	1
4233	764	"arg_2"	"date"	0	0	1	2
4234	765	"res_0"	"date"	0	0	0	0
4235	765	"arg_1"	"date"	0	0	1	1
4236	765	"arg_2"	"date"	0	0	1	2
4237	766	"res_0"	"date"	0	0	0	0
4238	766	"arg_1"	"timestamp"	7	0	1	1
4239	766	"arg_2"	"date"	0	0	1	2
4240	767	"res_0"	"date"	0	0	0	0
4241	767	"arg_1"	"timestamptz"	7	0	1	1
4242	767	"arg_2"	"date"	0	0	1	2
4243	768	"res_0"	"date"	0	0	0	0
4244	768	"arg_1"	"blob"	0	0	1	1
4245	768	"arg_2"	"date"	0	0	1	2
4246	769	"res_0"	"timestamp"	7	0	0	0
4247	769	"arg_1"	"oid"	63	0	1	1
4248	769	"arg_2"	"timestamp"	7	0	1	2
4249	770	"res_0"	"timestamp"	7	0	0	0
4250	770	"arg_1"	"tinyint"	8	0	1	1
4251	770	"arg_2"	"timestamp"	7	0	1	2
4252	771	"res_0"	"timestamp"	7	0	0	0
4253	771	"arg_1"	"smallint"	16	0	1	1
4254	771	"arg_2"	"timestamp"	7	0	1	2
4255	772	"res_0"	"timestamp"	7	0	0	0
4256	772	"arg_1"	"int"	32	0	1	1
4257	772	"arg_2"	"timestamp"	7	0	1	2
4258	773	"res_0"	"timestamp"	7	0	0	0
4259	773	"arg_1"	"bigint"	64	0	1	1
4260	773	"arg_2"	"timestamp"	7	0	1	2
4261	774	"res_0"	"timestamp"	7	0	0	0
4262	774	"arg_1"	"wrd"	64	0	1	1
4263	774	"arg_2"	"timestamp"	7	0	1	2
4264	775	"res_0"	"timestamp"	7	0	0	0
4265	775	"arg_1"	"decimal"	2	0	1	1
4266	775	"arg_2"	"timestamp"	7	0	1	2
4267	776	"res_0"	"timestamp"	7	0	0	0
4268	776	"arg_1"	"decimal"	4	0	1	1
4269	776	"arg_2"	"timestamp"	7	0	1	2
4270	777	"res_0"	"timestamp"	7	0	0	0
4271	777	"arg_1"	"decimal"	9	0	1	1
4272	777	"arg_2"	"timestamp"	7	0	1	2
4273	778	"res_0"	"timestamp"	7	0	0	0
4274	778	"arg_1"	"decimal"	19	0	1	1
4275	778	"arg_2"	"timestamp"	7	0	1	2
4276	779	"res_0"	"timestamp"	7	0	0	0
4277	779	"arg_1"	"real"	24	0	1	1
4278	779	"arg_2"	"timestamp"	7	0	1	2
4279	780	"res_0"	"timestamp"	7	0	0	0
4280	780	"arg_1"	"double"	53	0	1	1
4281	780	"arg_2"	"timestamp"	7	0	1	2
4282	781	"res_0"	"timestamp"	7	0	0	0
4283	781	"arg_1"	"month_interval"	32	0	1	1
4284	781	"arg_2"	"timestamp"	7	0	1	2
4285	782	"res_0"	"timestamp"	7	0	0	0
4286	782	"arg_1"	"sec_interval"	19	0	1	1
4287	782	"arg_2"	"timestamp"	7	0	1	2
4288	783	"res_0"	"timestamp"	7	0	0	0
4289	783	"arg_1"	"time"	7	0	1	1
4290	783	"arg_2"	"timestamp"	7	0	1	2
4291	784	"res_0"	"timestamp"	7	0	0	0
4292	784	"arg_1"	"timetz"	7	0	1	1
4293	784	"arg_2"	"timestamp"	7	0	1	2
4294	785	"res_0"	"timestamp"	7	0	0	0
4295	785	"arg_1"	"date"	0	0	1	1
4296	785	"arg_2"	"timestamp"	7	0	1	2
4297	786	"res_0"	"timestamp"	7	0	0	0
4298	786	"arg_1"	"timestamp"	7	0	1	1
4299	786	"arg_2"	"timestamp"	7	0	1	2
4300	787	"res_0"	"timestamp"	7	0	0	0
4301	787	"arg_1"	"timestamptz"	7	0	1	1
4302	787	"arg_2"	"timestamp"	7	0	1	2
4303	788	"res_0"	"timestamp"	7	0	0	0
4304	788	"arg_1"	"blob"	0	0	1	1
4305	788	"arg_2"	"timestamp"	7	0	1	2
4306	789	"res_0"	"timestamptz"	7	0	0	0
4307	789	"arg_1"	"oid"	63	0	1	1
4308	789	"arg_2"	"timestamptz"	7	0	1	2
4309	790	"res_0"	"timestamptz"	7	0	0	0
4310	790	"arg_1"	"tinyint"	8	0	1	1
4311	790	"arg_2"	"timestamptz"	7	0	1	2
4312	791	"res_0"	"timestamptz"	7	0	0	0
4313	791	"arg_1"	"smallint"	16	0	1	1
4314	791	"arg_2"	"timestamptz"	7	0	1	2
4315	792	"res_0"	"timestamptz"	7	0	0	0
4316	792	"arg_1"	"int"	32	0	1	1
4317	792	"arg_2"	"timestamptz"	7	0	1	2
4318	793	"res_0"	"timestamptz"	7	0	0	0
4319	793	"arg_1"	"bigint"	64	0	1	1
4320	793	"arg_2"	"timestamptz"	7	0	1	2
4321	794	"res_0"	"timestamptz"	7	0	0	0
4322	794	"arg_1"	"wrd"	64	0	1	1
4323	794	"arg_2"	"timestamptz"	7	0	1	2
4324	795	"res_0"	"timestamptz"	7	0	0	0
4325	795	"arg_1"	"decimal"	2	0	1	1
4326	795	"arg_2"	"timestamptz"	7	0	1	2
4327	796	"res_0"	"timestamptz"	7	0	0	0
4328	796	"arg_1"	"decimal"	4	0	1	1
4329	796	"arg_2"	"timestamptz"	7	0	1	2
4330	797	"res_0"	"timestamptz"	7	0	0	0
4331	797	"arg_1"	"decimal"	9	0	1	1
4332	797	"arg_2"	"timestamptz"	7	0	1	2
4333	798	"res_0"	"timestamptz"	7	0	0	0
4334	798	"arg_1"	"decimal"	19	0	1	1
4335	798	"arg_2"	"timestamptz"	7	0	1	2
4336	799	"res_0"	"timestamptz"	7	0	0	0
4337	799	"arg_1"	"real"	24	0	1	1
4338	799	"arg_2"	"timestamptz"	7	0	1	2
4339	800	"res_0"	"timestamptz"	7	0	0	0
4340	800	"arg_1"	"double"	53	0	1	1
4341	800	"arg_2"	"timestamptz"	7	0	1	2
4342	801	"res_0"	"timestamptz"	7	0	0	0
4343	801	"arg_1"	"month_interval"	32	0	1	1
4344	801	"arg_2"	"timestamptz"	7	0	1	2
4345	802	"res_0"	"timestamptz"	7	0	0	0
4346	802	"arg_1"	"sec_interval"	19	0	1	1
4347	802	"arg_2"	"timestamptz"	7	0	1	2
4348	803	"res_0"	"timestamptz"	7	0	0	0
4349	803	"arg_1"	"time"	7	0	1	1
4350	803	"arg_2"	"timestamptz"	7	0	1	2
4351	804	"res_0"	"timestamptz"	7	0	0	0
4352	804	"arg_1"	"timetz"	7	0	1	1
4353	804	"arg_2"	"timestamptz"	7	0	1	2
4354	805	"res_0"	"timestamptz"	7	0	0	0
4355	805	"arg_1"	"date"	0	0	1	1
4356	805	"arg_2"	"timestamptz"	7	0	1	2
4357	806	"res_0"	"timestamptz"	7	0	0	0
4358	806	"arg_1"	"timestamp"	7	0	1	1
4359	806	"arg_2"	"timestamptz"	7	0	1	2
4360	807	"res_0"	"timestamptz"	7	0	0	0
4361	807	"arg_1"	"timestamptz"	7	0	1	1
4362	807	"arg_2"	"timestamptz"	7	0	1	2
4363	808	"res_0"	"timestamptz"	7	0	0	0
4364	808	"arg_1"	"blob"	0	0	1	1
4365	808	"arg_2"	"timestamptz"	7	0	1	2
4366	809	"res_0"	"blob"	0	0	0	0
4367	809	"arg_1"	"oid"	63	0	1	1
4368	809	"arg_2"	"blob"	0	0	1	2
4369	810	"res_0"	"blob"	0	0	0	0
4370	810	"arg_1"	"tinyint"	8	0	1	1
4371	810	"arg_2"	"blob"	0	0	1	2
4372	811	"res_0"	"blob"	0	0	0	0
4373	811	"arg_1"	"smallint"	16	0	1	1
4374	811	"arg_2"	"blob"	0	0	1	2
4375	812	"res_0"	"blob"	0	0	0	0
4376	812	"arg_1"	"int"	32	0	1	1
4377	812	"arg_2"	"blob"	0	0	1	2
4378	813	"res_0"	"blob"	0	0	0	0
4379	813	"arg_1"	"bigint"	64	0	1	1
4380	813	"arg_2"	"blob"	0	0	1	2
4381	814	"res_0"	"blob"	0	0	0	0
4382	814	"arg_1"	"wrd"	64	0	1	1
4383	814	"arg_2"	"blob"	0	0	1	2
4384	815	"res_0"	"blob"	0	0	0	0
4385	815	"arg_1"	"decimal"	2	0	1	1
4386	815	"arg_2"	"blob"	0	0	1	2
4387	816	"res_0"	"blob"	0	0	0	0
4388	816	"arg_1"	"decimal"	4	0	1	1
4389	816	"arg_2"	"blob"	0	0	1	2
4390	817	"res_0"	"blob"	0	0	0	0
4391	817	"arg_1"	"decimal"	9	0	1	1
4392	817	"arg_2"	"blob"	0	0	1	2
4393	818	"res_0"	"blob"	0	0	0	0
4394	818	"arg_1"	"decimal"	19	0	1	1
4395	818	"arg_2"	"blob"	0	0	1	2
4396	819	"res_0"	"blob"	0	0	0	0
4397	819	"arg_1"	"real"	24	0	1	1
4398	819	"arg_2"	"blob"	0	0	1	2
4399	820	"res_0"	"blob"	0	0	0	0
4400	820	"arg_1"	"double"	53	0	1	1
4401	820	"arg_2"	"blob"	0	0	1	2
4402	821	"res_0"	"blob"	0	0	0	0
4403	821	"arg_1"	"month_interval"	32	0	1	1
4404	821	"arg_2"	"blob"	0	0	1	2
4405	822	"res_0"	"blob"	0	0	0	0
4406	822	"arg_1"	"sec_interval"	19	0	1	1
4407	822	"arg_2"	"blob"	0	0	1	2
4408	823	"res_0"	"blob"	0	0	0	0
4409	823	"arg_1"	"time"	7	0	1	1
4410	823	"arg_2"	"blob"	0	0	1	2
4411	824	"res_0"	"blob"	0	0	0	0
4412	824	"arg_1"	"timetz"	7	0	1	1
4413	824	"arg_2"	"blob"	0	0	1	2
4414	825	"res_0"	"blob"	0	0	0	0
4415	825	"arg_1"	"date"	0	0	1	1
4416	825	"arg_2"	"blob"	0	0	1	2
4417	826	"res_0"	"blob"	0	0	0	0
4418	826	"arg_1"	"timestamp"	7	0	1	1
4419	826	"arg_2"	"blob"	0	0	1	2
4420	827	"res_0"	"blob"	0	0	0	0
4421	827	"arg_1"	"timestamptz"	7	0	1	1
4422	827	"arg_2"	"blob"	0	0	1	2
4423	828	"res_0"	"blob"	0	0	0	0
4424	828	"arg_1"	"blob"	0	0	1	1
4425	828	"arg_2"	"blob"	0	0	1	2
4426	829	"res_0"	"real"	24	0	0	0
4427	829	"arg_1"	"real"	24	0	1	1
4428	829	"arg_2"	"real"	24	0	1	2
4429	830	"res_0"	"real"	24	0	0	0
4430	830	"arg_1"	"real"	24	0	1	1
4431	831	"res_0"	"real"	24	0	0	0
4432	831	"arg_1"	"real"	24	0	1	1
4433	832	"res_0"	"real"	24	0	0	0
4434	832	"arg_1"	"real"	24	0	1	1
4435	833	"res_0"	"real"	24	0	0	0
4436	833	"arg_1"	"real"	24	0	1	1
4437	834	"res_0"	"real"	24	0	0	0
4438	834	"arg_1"	"real"	24	0	1	1
4439	835	"res_0"	"real"	24	0	0	0
4440	835	"arg_1"	"real"	24	0	1	1
4441	836	"res_0"	"real"	24	0	0	0
4442	836	"arg_1"	"real"	24	0	1	1
4443	837	"res_0"	"real"	24	0	0	0
4444	837	"arg_1"	"real"	24	0	1	1
4445	838	"res_0"	"real"	24	0	0	0
4446	838	"arg_1"	"real"	24	0	1	1
4447	839	"res_0"	"real"	24	0	0	0
4448	839	"arg_1"	"real"	24	0	1	1
4449	839	"arg_2"	"real"	24	0	1	2
4450	840	"res_0"	"real"	24	0	0	0
4451	840	"arg_1"	"real"	24	0	1	1
4452	841	"res_0"	"real"	24	0	0	0
4453	841	"arg_1"	"real"	24	0	1	1
4454	842	"res_0"	"real"	24	0	0	0
4455	842	"arg_1"	"real"	24	0	1	1
4456	843	"res_0"	"real"	24	0	0	0
4457	843	"arg_1"	"real"	24	0	1	1
4458	844	"res_0"	"real"	24	0	0	0
4459	844	"arg_1"	"real"	24	0	1	1
4460	845	"res_0"	"real"	24	0	0	0
4461	845	"arg_1"	"real"	24	0	1	1
4462	846	"res_0"	"real"	24	0	0	0
4463	846	"arg_1"	"real"	24	0	1	1
4464	847	"res_0"	"real"	24	0	0	0
4465	847	"arg_1"	"real"	24	0	1	1
4466	848	"res_0"	"double"	53	0	0	0
4467	848	"arg_1"	"double"	53	0	1	1
4468	848	"arg_2"	"double"	53	0	1	2
4469	849	"res_0"	"double"	53	0	0	0
4470	849	"arg_1"	"double"	53	0	1	1
4471	850	"res_0"	"double"	53	0	0	0
4472	850	"arg_1"	"double"	53	0	1	1
4473	851	"res_0"	"double"	53	0	0	0
4474	851	"arg_1"	"double"	53	0	1	1
4475	852	"res_0"	"double"	53	0	0	0
4476	852	"arg_1"	"double"	53	0	1	1
4477	853	"res_0"	"double"	53	0	0	0
4478	853	"arg_1"	"double"	53	0	1	1
4479	854	"res_0"	"double"	53	0	0	0
4480	854	"arg_1"	"double"	53	0	1	1
4481	855	"res_0"	"double"	53	0	0	0
4482	855	"arg_1"	"double"	53	0	1	1
4483	856	"res_0"	"double"	53	0	0	0
4484	856	"arg_1"	"double"	53	0	1	1
4485	857	"res_0"	"double"	53	0	0	0
4486	857	"arg_1"	"double"	53	0	1	1
4487	858	"res_0"	"double"	53	0	0	0
4488	858	"arg_1"	"double"	53	0	1	1
4489	858	"arg_2"	"double"	53	0	1	2
4490	859	"res_0"	"double"	53	0	0	0
4491	859	"arg_1"	"double"	53	0	1	1
4492	860	"res_0"	"double"	53	0	0	0
4493	860	"arg_1"	"double"	53	0	1	1
4494	861	"res_0"	"double"	53	0	0	0
4495	861	"arg_1"	"double"	53	0	1	1
4496	862	"res_0"	"double"	53	0	0	0
4497	862	"arg_1"	"double"	53	0	1	1
4498	863	"res_0"	"double"	53	0	0	0
4499	863	"arg_1"	"double"	53	0	1	1
4500	864	"res_0"	"double"	53	0	0	0
4501	864	"arg_1"	"double"	53	0	1	1
4502	865	"res_0"	"double"	53	0	0	0
4503	865	"arg_1"	"double"	53	0	1	1
4504	866	"res_0"	"double"	53	0	0	0
4505	866	"arg_1"	"double"	53	0	1	1
4506	867	"res_0"	"double"	53	0	0	0
4507	868	"res_0"	"int"	32	0	0	0
4508	869	"res_0"	"int"	32	0	0	0
4509	869	"arg_1"	"int"	32	0	1	1
4510	870	"res_0"	"date"	0	0	0	0
4511	871	"res_0"	"date"	0	0	0	0
4512	872	"res_0"	"timetz"	7	0	0	0
4513	873	"res_0"	"timetz"	7	0	0	0
4514	874	"res_0"	"timestamptz"	7	0	0	0
4515	875	"res_0"	"time"	7	0	0	0
4516	876	"res_0"	"timestamp"	7	0	0	0
4517	877	"res_0"	"month_interval"	32	0	0	0
4518	877	"arg_1"	"date"	0	0	1	1
4519	877	"arg_2"	"date"	0	0	1	2
4520	878	"res_0"	"sec_interval"	19	0	0	0
4521	878	"arg_1"	"timetz"	7	0	1	1
4522	878	"arg_2"	"timetz"	7	0	1	2
4523	879	"res_0"	"sec_interval"	19	0	0	0
4524	879	"arg_1"	"time"	7	0	1	1
4525	879	"arg_2"	"time"	7	0	1	2
4526	880	"res_0"	"sec_interval"	19	0	0	0
4527	880	"arg_1"	"timestamptz"	7	0	1	1
4528	880	"arg_2"	"timestamptz"	7	0	1	2
4529	881	"res_0"	"sec_interval"	19	0	0	0
4530	881	"arg_1"	"timestamp"	7	0	1	1
4531	881	"arg_2"	"timestamp"	7	0	1	2
4532	882	"res_0"	"date"	0	0	0	0
4533	882	"arg_1"	"date"	0	0	1	1
4534	882	"arg_2"	"sec_interval"	19	0	1	2
4535	883	"res_0"	"date"	0	0	0	0
4536	883	"arg_1"	"date"	0	0	1	1
4537	883	"arg_2"	"month_interval"	32	0	1	2
4538	884	"res_0"	"time"	7	0	0	0
4539	884	"arg_1"	"time"	7	0	1	1
4540	884	"arg_2"	"sec_interval"	19	0	1	2
4541	885	"res_0"	"timetz"	7	0	0	0
4542	885	"arg_1"	"timetz"	7	0	1	1
4543	885	"arg_2"	"sec_interval"	19	0	1	2
4544	886	"res_0"	"timestamp"	7	0	0	0
4545	886	"arg_1"	"timestamp"	7	0	1	1
4546	886	"arg_2"	"sec_interval"	19	0	1	2
4547	887	"res_0"	"timestamp"	7	0	0	0
4548	887	"arg_1"	"timestamp"	7	0	1	1
4549	887	"arg_2"	"month_interval"	32	0	1	2
4550	888	"res_0"	"timestamptz"	7	0	0	0
4551	888	"arg_1"	"timestamptz"	7	0	1	1
4552	888	"arg_2"	"sec_interval"	19	0	1	2
4553	889	"res_0"	"timestamptz"	7	0	0	0
4554	889	"arg_1"	"timestamptz"	7	0	1	1
4555	889	"arg_2"	"month_interval"	32	0	1	2
4556	890	"res_0"	"date"	0	0	0	0
4557	890	"arg_1"	"date"	0	0	1	1
4558	890	"arg_2"	"sec_interval"	19	0	1	2
4559	891	"res_0"	"date"	0	0	0	0
4560	891	"arg_1"	"date"	0	0	1	1
4561	891	"arg_2"	"month_interval"	32	0	1	2
4562	892	"res_0"	"timestamp"	7	0	0	0
4563	892	"arg_1"	"timestamp"	7	0	1	1
4564	892	"arg_2"	"sec_interval"	19	0	1	2
4565	893	"res_0"	"timestamp"	7	0	0	0
4566	893	"arg_1"	"timestamp"	7	0	1	1
4567	893	"arg_2"	"month_interval"	32	0	1	2
4568	894	"res_0"	"timestamptz"	7	0	0	0
4569	894	"arg_1"	"timestamptz"	7	0	1	1
4570	894	"arg_2"	"sec_interval"	19	0	1	2
4571	895	"res_0"	"timestamptz"	7	0	0	0
4572	895	"arg_1"	"timestamptz"	7	0	1	1
4573	895	"arg_2"	"month_interval"	32	0	1	2
4574	896	"res_0"	"time"	7	0	0	0
4575	896	"arg_1"	"time"	7	0	1	1
4576	896	"arg_2"	"sec_interval"	19	0	1	2
4577	897	"res_0"	"timetz"	7	0	0	0
4578	897	"arg_1"	"timetz"	7	0	1	1
4579	897	"arg_2"	"sec_interval"	19	0	1	2
4580	898	"res_0"	"sec_interval"	19	0	0	0
4581	899	"res_0"	"int"	32	0	0	0
4582	899	"arg_1"	"date"	0	0	1	1
4583	900	"res_0"	"int"	32	0	0	0
4584	900	"arg_1"	"date"	0	0	1	1
4585	901	"res_0"	"int"	32	0	0	0
4586	901	"arg_1"	"date"	0	0	1	1
4587	902	"res_0"	"int"	32	0	0	0
4588	902	"arg_1"	"time"	7	0	1	1
4589	903	"res_0"	"int"	32	0	0	0
4590	903	"arg_1"	"time"	7	0	1	1
4591	904	"res_0"	"decimal"	9	3	0	0
4592	904	"arg_1"	"time"	7	0	1	1
4593	905	"res_0"	"int"	32	0	0	0
4594	905	"arg_1"	"timetz"	7	0	1	1
4595	906	"res_0"	"int"	32	0	0	0
4596	906	"arg_1"	"timetz"	7	0	1	1
4597	907	"res_0"	"decimal"	9	3	0	0
4598	907	"arg_1"	"timetz"	7	0	1	1
4599	908	"res_0"	"int"	32	0	0	0
4600	908	"arg_1"	"timestamp"	7	0	1	1
4601	909	"res_0"	"int"	32	0	0	0
4602	909	"arg_1"	"timestamp"	7	0	1	1
4603	910	"res_0"	"int"	32	0	0	0
4604	910	"arg_1"	"timestamp"	7	0	1	1
4605	911	"res_0"	"int"	32	0	0	0
4606	911	"arg_1"	"timestamp"	7	0	1	1
4607	912	"res_0"	"int"	32	0	0	0
4608	912	"arg_1"	"timestamp"	7	0	1	1
4609	913	"res_0"	"decimal"	9	3	0	0
4610	913	"arg_1"	"timestamp"	7	0	1	1
4611	914	"res_0"	"int"	32	0	0	0
4612	914	"arg_1"	"timestamptz"	7	0	1	1
4613	915	"res_0"	"int"	32	0	0	0
4614	915	"arg_1"	"timestamptz"	7	0	1	1
4615	916	"res_0"	"int"	32	0	0	0
4616	916	"arg_1"	"timestamptz"	7	0	1	1
4617	917	"res_0"	"int"	32	0	0	0
4618	917	"arg_1"	"timestamptz"	7	0	1	1
4619	918	"res_0"	"int"	32	0	0	0
4620	918	"arg_1"	"timestamptz"	7	0	1	1
4621	919	"res_0"	"decimal"	9	3	0	0
4622	919	"arg_1"	"timestamptz"	7	0	1	1
4623	920	"res_0"	"int"	32	0	0	0
4624	920	"arg_1"	"month_interval"	32	0	1	1
4625	921	"res_0"	"int"	32	0	0	0
4626	921	"arg_1"	"month_interval"	32	0	1	1
4627	922	"res_0"	"bigint"	64	0	0	0
4628	922	"arg_1"	"sec_interval"	19	0	1	1
4629	923	"res_0"	"int"	32	0	0	0
4630	923	"arg_1"	"sec_interval"	19	0	1	1
4631	924	"res_0"	"int"	32	0	0	0
4632	924	"arg_1"	"sec_interval"	19	0	1	1
4633	925	"res_0"	"int"	32	0	0	0
4634	925	"arg_1"	"sec_interval"	19	0	1	1
4635	926	"res_0"	"int"	32	0	0	0
4636	926	"arg_1"	"date"	0	0	1	1
4637	927	"res_0"	"int"	32	0	0	0
4638	927	"arg_1"	"date"	0	0	1	1
4639	928	"res_0"	"int"	32	0	0	0
4640	928	"arg_1"	"date"	0	0	1	1
4641	929	"res_0"	"int"	32	0	0	0
4642	929	"arg_1"	"date"	0	0	1	1
4643	930	"res_0"	"int"	32	0	0	0
4644	930	"arg_1"	"date"	0	0	1	1
4645	931	"res_0"	"bigint"	64	0	0	0
4646	931	"arg_1"	"varchar"	0	0	1	1
4647	931	"arg_2"	"varchar"	0	0	1	2
4648	932	"res_0"	"bigint"	64	0	0	0
4649	932	"arg_1"	"varchar"	0	0	1	1
4650	932	"arg_2"	"varchar"	0	0	1	2
4651	933	"res_0"	"bigint"	64	0	0	0
4652	933	"arg_1"	"varchar"	0	0	1	1
4653	933	"arg_2"	"varchar"	0	0	1	2
4654	933	"arg_3"	"bigint"	64	0	1	3
4655	934	"res_0"	"tinyint"	8	0	0	0
4656	934	"arg_1"	"char"	0	0	1	1
4657	934	"arg_2"	"boolean"	1	0	1	2
4658	935	"res_0"	"smallint"	16	0	0	0
4659	935	"arg_1"	"char"	0	0	1	1
4660	935	"arg_2"	"boolean"	1	0	1	2
4661	936	"res_0"	"int"	32	0	0	0
4662	936	"arg_1"	"char"	0	0	1	1
4663	936	"arg_2"	"boolean"	1	0	1	2
4664	937	"res_0"	"char"	0	0	0	0
4665	937	"arg_1"	"char"	0	0	1	1
4666	938	"res_0"	"int"	32	0	0	0
4667	938	"arg_1"	"char"	0	0	1	1
4668	938	"arg_2"	"char"	0	0	1	2
4669	939	"res_0"	"int"	32	0	0	0
4670	939	"arg_1"	"char"	0	0	1	1
4671	939	"arg_2"	"char"	0	0	1	2
4672	939	"arg_3"	"int"	32	0	1	3
4673	940	"res_0"	"char"	0	0	0	0
4674	940	"arg_1"	"char"	0	0	1	1
4675	940	"arg_2"	"int"	32	0	1	2
4676	941	"res_0"	"char"	0	0	0	0
4677	941	"arg_1"	"char"	0	0	1	1
4678	941	"arg_2"	"int"	32	0	1	2
4679	941	"arg_3"	"int"	32	0	1	3
4680	942	"res_0"	"boolean"	1	0	0	0
4681	942	"arg_1"	"char"	0	0	1	1
4682	942	"arg_2"	"char"	0	0	1	2
4683	943	"res_0"	"boolean"	1	0	0	0
4684	943	"arg_1"	"char"	0	0	1	1
4685	943	"arg_2"	"char"	0	0	1	2
4686	943	"arg_3"	"char"	0	0	1	3
4687	944	"res_0"	"boolean"	1	0	0	0
4688	944	"arg_1"	"char"	0	0	1	1
4689	944	"arg_2"	"char"	0	0	1	2
4690	945	"res_0"	"boolean"	1	0	0	0
4691	945	"arg_1"	"char"	0	0	1	1
4692	945	"arg_2"	"char"	0	0	1	2
4693	945	"arg_3"	"char"	0	0	1	3
4694	946	"res_0"	"boolean"	1	0	0	0
4695	946	"arg_1"	"char"	0	0	1	1
4696	946	"arg_2"	"char"	0	0	1	2
4697	947	"res_0"	"boolean"	1	0	0	0
4698	947	"arg_1"	"char"	0	0	1	1
4699	947	"arg_2"	"char"	0	0	1	2
4700	947	"arg_3"	"char"	0	0	1	3
4701	948	"res_0"	"boolean"	1	0	0	0
4702	948	"arg_1"	"char"	0	0	1	1
4703	948	"arg_2"	"char"	0	0	1	2
4704	949	"res_0"	"boolean"	1	0	0	0
4705	949	"arg_1"	"char"	0	0	1	1
4706	949	"arg_2"	"char"	0	0	1	2
4707	949	"arg_3"	"char"	0	0	1	3
4708	950	"res_0"	"int"	32	0	0	0
4709	950	"arg_1"	"char"	0	0	1	1
4710	950	"arg_2"	"char"	0	0	1	2
4711	951	"res_0"	"char"	0	0	0	0
4712	951	"arg_1"	"char"	0	0	1	1
4713	951	"arg_2"	"int"	32	0	1	2
4714	952	"res_0"	"char"	0	0	0	0
4715	952	"arg_1"	"char"	0	0	1	1
4716	952	"arg_2"	"char"	0	0	1	2
4717	953	"res_0"	"int"	32	0	0	0
4718	953	"arg_1"	"char"	0	0	1	1
4719	954	"res_0"	"char"	0	0	0	0
4720	954	"arg_1"	"int"	32	0	1	1
4721	955	"res_0"	"int"	32	0	0	0
4722	955	"arg_1"	"char"	0	0	1	1
4723	956	"res_0"	"char"	0	0	0	0
4724	956	"arg_1"	"char"	0	0	1	1
4725	956	"arg_2"	"int"	32	0	1	2
4726	957	"res_0"	"char"	0	0	0	0
4727	957	"arg_1"	"char"	0	0	1	1
4728	957	"arg_2"	"int"	32	0	1	2
4729	958	"res_0"	"char"	0	0	0	0
4730	958	"arg_1"	"char"	0	0	1	1
4731	959	"res_0"	"char"	0	0	0	0
4732	959	"arg_1"	"char"	0	0	1	1
4733	960	"res_0"	"char"	0	0	0	0
4734	960	"arg_1"	"char"	0	0	1	1
4735	961	"res_0"	"char"	0	0	0	0
4736	961	"arg_1"	"char"	0	0	1	1
4737	962	"res_0"	"char"	0	0	0	0
4738	962	"arg_1"	"char"	0	0	1	1
4739	963	"res_0"	"char"	0	0	0	0
4740	963	"arg_1"	"char"	0	0	1	1
4741	963	"arg_2"	"char"	0	0	1	2
4742	964	"res_0"	"char"	0	0	0	0
4743	964	"arg_1"	"char"	0	0	1	1
4744	965	"res_0"	"char"	0	0	0	0
4745	965	"arg_1"	"char"	0	0	1	1
4746	965	"arg_2"	"char"	0	0	1	2
4747	966	"res_0"	"char"	0	0	0	0
4748	966	"arg_1"	"char"	0	0	1	1
4749	967	"res_0"	"char"	0	0	0	0
4750	967	"arg_1"	"char"	0	0	1	1
4751	967	"arg_2"	"char"	0	0	1	2
4752	968	"res_0"	"char"	0	0	0	0
4753	968	"arg_1"	"char"	0	0	1	1
4754	968	"arg_2"	"int"	32	0	1	2
4755	969	"res_0"	"char"	0	0	0	0
4756	969	"arg_1"	"char"	0	0	1	1
4757	969	"arg_2"	"int"	32	0	1	2
4758	969	"arg_3"	"char"	0	0	1	3
4759	970	"res_0"	"char"	0	0	0	0
4760	970	"arg_1"	"char"	0	0	1	1
4761	970	"arg_2"	"int"	32	0	1	2
4762	971	"res_0"	"char"	0	0	0	0
4763	971	"arg_1"	"char"	0	0	1	1
4764	971	"arg_2"	"int"	32	0	1	2
4765	971	"arg_3"	"char"	0	0	1	3
4766	972	"res_0"	"char"	0	0	0	0
4767	972	"arg_1"	"char"	0	0	1	1
4768	972	"arg_2"	"int"	32	0	1	2
4769	972	"arg_3"	"int"	32	0	1	3
4770	972	"arg_4"	"char"	0	0	1	4
4771	973	"res_0"	"char"	0	0	0	0
4772	973	"arg_1"	"char"	0	0	1	1
4773	973	"arg_2"	"char"	0	0	1	2
4774	973	"arg_3"	"char"	0	0	1	3
4775	974	"res_0"	"char"	0	0	0	0
4776	974	"arg_1"	"char"	0	0	1	1
4777	974	"arg_2"	"int"	32	0	1	2
4778	975	"res_0"	"char"	0	0	0	0
4779	975	"arg_1"	"int"	32	0	1	1
4780	976	"res_0"	"int"	32	0	0	0
4781	976	"arg_1"	"char"	0	0	1	1
4782	977	"res_0"	"int"	32	0	0	0
4783	977	"arg_1"	"char"	0	0	1	1
4784	978	"res_0"	"int"	32	0	0	0
4785	978	"arg_1"	"char"	0	0	1	1
4786	979	"res_0"	"char"	0	0	0	0
4787	979	"arg_1"	"char"	0	0	1	1
4788	980	"res_0"	"int"	32	0	0	0
4789	980	"arg_1"	"char"	0	0	1	1
4790	980	"arg_2"	"char"	0	0	1	2
4791	981	"res_0"	"int"	32	0	0	0
4792	981	"arg_1"	"char"	0	0	1	1
4793	981	"arg_2"	"char"	0	0	1	2
4794	982	"res_0"	"int"	32	0	0	0
4795	982	"arg_1"	"char"	0	0	1	1
4796	982	"arg_2"	"char"	0	0	1	2
4797	983	"res_0"	"double"	53	0	0	0
4798	983	"arg_1"	"char"	0	0	1	1
4799	983	"arg_2"	"char"	0	0	1	2
4800	984	"res_0"	"char"	0	0	0	0
4801	984	"arg_1"	"char"	0	0	1	1
4802	985	"res_0"	"int"	32	0	0	0
4803	985	"arg_1"	"char"	0	0	1	1
4804	985	"arg_2"	"char"	0	0	1	2
4805	986	"res_0"	"int"	32	0	0	0
4806	986	"arg_1"	"char"	0	0	1	1
4807	986	"arg_2"	"char"	0	0	1	2
4808	986	"arg_3"	"int"	32	0	1	3
4809	986	"arg_4"	"int"	32	0	1	4
4810	986	"arg_5"	"int"	32	0	1	5
4811	987	"res_0"	"tinyint"	8	0	0	0
4812	987	"arg_1"	"varchar"	0	0	1	1
4813	987	"arg_2"	"boolean"	1	0	1	2
4814	988	"res_0"	"smallint"	16	0	0	0
4815	988	"arg_1"	"varchar"	0	0	1	1
4816	988	"arg_2"	"boolean"	1	0	1	2
4817	989	"res_0"	"int"	32	0	0	0
4818	989	"arg_1"	"varchar"	0	0	1	1
4819	989	"arg_2"	"boolean"	1	0	1	2
4820	990	"res_0"	"varchar"	0	0	0	0
4821	990	"arg_1"	"varchar"	0	0	1	1
4822	991	"res_0"	"int"	32	0	0	0
4823	991	"arg_1"	"varchar"	0	0	1	1
4824	991	"arg_2"	"varchar"	0	0	1	2
4825	992	"res_0"	"int"	32	0	0	0
4826	992	"arg_1"	"varchar"	0	0	1	1
4827	992	"arg_2"	"varchar"	0	0	1	2
4828	992	"arg_3"	"int"	32	0	1	3
4829	993	"res_0"	"varchar"	0	0	0	0
4830	993	"arg_1"	"varchar"	0	0	1	1
4831	993	"arg_2"	"int"	32	0	1	2
4832	994	"res_0"	"varchar"	0	0	0	0
4833	994	"arg_1"	"varchar"	0	0	1	1
4834	994	"arg_2"	"int"	32	0	1	2
4835	994	"arg_3"	"int"	32	0	1	3
4836	995	"res_0"	"boolean"	1	0	0	0
4837	995	"arg_1"	"varchar"	0	0	1	1
4838	995	"arg_2"	"varchar"	0	0	1	2
4839	996	"res_0"	"boolean"	1	0	0	0
4840	996	"arg_1"	"varchar"	0	0	1	1
4841	996	"arg_2"	"varchar"	0	0	1	2
4842	996	"arg_3"	"varchar"	0	0	1	3
4843	997	"res_0"	"boolean"	1	0	0	0
4844	997	"arg_1"	"varchar"	0	0	1	1
4845	997	"arg_2"	"varchar"	0	0	1	2
4846	998	"res_0"	"boolean"	1	0	0	0
4847	998	"arg_1"	"varchar"	0	0	1	1
4848	998	"arg_2"	"varchar"	0	0	1	2
4849	998	"arg_3"	"varchar"	0	0	1	3
4850	999	"res_0"	"boolean"	1	0	0	0
4851	999	"arg_1"	"varchar"	0	0	1	1
4852	999	"arg_2"	"varchar"	0	0	1	2
4853	1000	"res_0"	"boolean"	1	0	0	0
4854	1000	"arg_1"	"varchar"	0	0	1	1
4855	1000	"arg_2"	"varchar"	0	0	1	2
4856	1000	"arg_3"	"varchar"	0	0	1	3
4857	1001	"res_0"	"boolean"	1	0	0	0
4858	1001	"arg_1"	"varchar"	0	0	1	1
4859	1001	"arg_2"	"varchar"	0	0	1	2
4860	1002	"res_0"	"boolean"	1	0	0	0
4861	1002	"arg_1"	"varchar"	0	0	1	1
4862	1002	"arg_2"	"varchar"	0	0	1	2
4863	1002	"arg_3"	"varchar"	0	0	1	3
4864	1003	"res_0"	"int"	32	0	0	0
4865	1003	"arg_1"	"varchar"	0	0	1	1
4866	1003	"arg_2"	"varchar"	0	0	1	2
4867	1004	"res_0"	"varchar"	0	0	0	0
4868	1004	"arg_1"	"varchar"	0	0	1	1
4869	1004	"arg_2"	"int"	32	0	1	2
4870	1005	"res_0"	"varchar"	0	0	0	0
4871	1005	"arg_1"	"varchar"	0	0	1	1
4872	1005	"arg_2"	"varchar"	0	0	1	2
4873	1006	"res_0"	"int"	32	0	0	0
4874	1006	"arg_1"	"varchar"	0	0	1	1
4875	1007	"res_0"	"varchar"	0	0	0	0
4876	1007	"arg_1"	"int"	32	0	1	1
4877	1008	"res_0"	"int"	32	0	0	0
4878	1008	"arg_1"	"varchar"	0	0	1	1
4879	1009	"res_0"	"varchar"	0	0	0	0
4880	1009	"arg_1"	"varchar"	0	0	1	1
4881	1009	"arg_2"	"int"	32	0	1	2
4882	1010	"res_0"	"varchar"	0	0	0	0
4883	1010	"arg_1"	"varchar"	0	0	1	1
4884	1010	"arg_2"	"int"	32	0	1	2
4885	1011	"res_0"	"varchar"	0	0	0	0
4886	1011	"arg_1"	"varchar"	0	0	1	1
4887	1012	"res_0"	"varchar"	0	0	0	0
4888	1012	"arg_1"	"varchar"	0	0	1	1
4889	1013	"res_0"	"varchar"	0	0	0	0
4890	1013	"arg_1"	"varchar"	0	0	1	1
4891	1014	"res_0"	"varchar"	0	0	0	0
4892	1014	"arg_1"	"varchar"	0	0	1	1
4893	1015	"res_0"	"varchar"	0	0	0	0
4894	1015	"arg_1"	"varchar"	0	0	1	1
4895	1016	"res_0"	"varchar"	0	0	0	0
4896	1016	"arg_1"	"varchar"	0	0	1	1
4897	1016	"arg_2"	"varchar"	0	0	1	2
4898	1017	"res_0"	"varchar"	0	0	0	0
4899	1017	"arg_1"	"varchar"	0	0	1	1
4900	1018	"res_0"	"varchar"	0	0	0	0
4901	1018	"arg_1"	"varchar"	0	0	1	1
4902	1018	"arg_2"	"varchar"	0	0	1	2
4903	1019	"res_0"	"varchar"	0	0	0	0
4904	1019	"arg_1"	"varchar"	0	0	1	1
4905	1020	"res_0"	"varchar"	0	0	0	0
4906	1020	"arg_1"	"varchar"	0	0	1	1
4907	1020	"arg_2"	"varchar"	0	0	1	2
4908	1021	"res_0"	"varchar"	0	0	0	0
4909	1021	"arg_1"	"varchar"	0	0	1	1
4910	1021	"arg_2"	"int"	32	0	1	2
4911	1022	"res_0"	"varchar"	0	0	0	0
4912	1022	"arg_1"	"varchar"	0	0	1	1
4913	1022	"arg_2"	"int"	32	0	1	2
4914	1022	"arg_3"	"varchar"	0	0	1	3
4915	1023	"res_0"	"varchar"	0	0	0	0
4916	1023	"arg_1"	"varchar"	0	0	1	1
4917	1023	"arg_2"	"int"	32	0	1	2
4918	1024	"res_0"	"varchar"	0	0	0	0
4919	1024	"arg_1"	"varchar"	0	0	1	1
4920	1024	"arg_2"	"int"	32	0	1	2
4921	1024	"arg_3"	"varchar"	0	0	1	3
4922	1025	"res_0"	"varchar"	0	0	0	0
4923	1025	"arg_1"	"varchar"	0	0	1	1
4924	1025	"arg_2"	"int"	32	0	1	2
4925	1025	"arg_3"	"int"	32	0	1	3
4926	1025	"arg_4"	"varchar"	0	0	1	4
4927	1026	"res_0"	"varchar"	0	0	0	0
4928	1026	"arg_1"	"varchar"	0	0	1	1
4929	1026	"arg_2"	"varchar"	0	0	1	2
4930	1026	"arg_3"	"varchar"	0	0	1	3
4931	1027	"res_0"	"varchar"	0	0	0	0
4932	1027	"arg_1"	"varchar"	0	0	1	1
4933	1027	"arg_2"	"int"	32	0	1	2
4934	1028	"res_0"	"varchar"	0	0	0	0
4935	1028	"arg_1"	"int"	32	0	1	1
4936	1029	"res_0"	"int"	32	0	0	0
4937	1029	"arg_1"	"varchar"	0	0	1	1
4938	1030	"res_0"	"int"	32	0	0	0
4939	1030	"arg_1"	"varchar"	0	0	1	1
4940	1031	"res_0"	"int"	32	0	0	0
4941	1031	"arg_1"	"varchar"	0	0	1	1
4942	1032	"res_0"	"varchar"	0	0	0	0
4943	1032	"arg_1"	"varchar"	0	0	1	1
4944	1033	"res_0"	"int"	32	0	0	0
4945	1033	"arg_1"	"varchar"	0	0	1	1
4946	1033	"arg_2"	"varchar"	0	0	1	2
4947	1034	"res_0"	"int"	32	0	0	0
4948	1034	"arg_1"	"varchar"	0	0	1	1
4949	1034	"arg_2"	"varchar"	0	0	1	2
4950	1035	"res_0"	"int"	32	0	0	0
4951	1035	"arg_1"	"varchar"	0	0	1	1
4952	1035	"arg_2"	"varchar"	0	0	1	2
4953	1036	"res_0"	"double"	53	0	0	0
4954	1036	"arg_1"	"varchar"	0	0	1	1
4955	1036	"arg_2"	"varchar"	0	0	1	2
4956	1037	"res_0"	"varchar"	0	0	0	0
4957	1037	"arg_1"	"varchar"	0	0	1	1
4958	1038	"res_0"	"int"	32	0	0	0
4959	1038	"arg_1"	"varchar"	0	0	1	1
4960	1038	"arg_2"	"varchar"	0	0	1	2
4961	1039	"res_0"	"int"	32	0	0	0
4962	1039	"arg_1"	"varchar"	0	0	1	1
4963	1039	"arg_2"	"varchar"	0	0	1	2
4964	1039	"arg_3"	"int"	32	0	1	3
4965	1039	"arg_4"	"int"	32	0	1	4
4966	1039	"arg_5"	"int"	32	0	1	5
4967	1040	"res_0"	"tinyint"	8	0	0	0
4968	1040	"arg_1"	"clob"	0	0	1	1
4969	1040	"arg_2"	"boolean"	1	0	1	2
4970	1041	"res_0"	"smallint"	16	0	0	0
4971	1041	"arg_1"	"clob"	0	0	1	1
4972	1041	"arg_2"	"boolean"	1	0	1	2
4973	1042	"res_0"	"int"	32	0	0	0
4974	1042	"arg_1"	"clob"	0	0	1	1
4975	1042	"arg_2"	"boolean"	1	0	1	2
4976	1043	"res_0"	"clob"	0	0	0	0
4977	1043	"arg_1"	"clob"	0	0	1	1
4978	1044	"res_0"	"int"	32	0	0	0
4979	1044	"arg_1"	"clob"	0	0	1	1
4980	1044	"arg_2"	"clob"	0	0	1	2
4981	1045	"res_0"	"int"	32	0	0	0
4982	1045	"arg_1"	"clob"	0	0	1	1
4983	1045	"arg_2"	"clob"	0	0	1	2
4984	1045	"arg_3"	"int"	32	0	1	3
4985	1046	"res_0"	"clob"	0	0	0	0
4986	1046	"arg_1"	"clob"	0	0	1	1
4987	1046	"arg_2"	"int"	32	0	1	2
4988	1047	"res_0"	"clob"	0	0	0	0
4989	1047	"arg_1"	"clob"	0	0	1	1
4990	1047	"arg_2"	"int"	32	0	1	2
4991	1047	"arg_3"	"int"	32	0	1	3
4992	1048	"res_0"	"boolean"	1	0	0	0
4993	1048	"arg_1"	"clob"	0	0	1	1
4994	1048	"arg_2"	"clob"	0	0	1	2
4995	1049	"res_0"	"boolean"	1	0	0	0
4996	1049	"arg_1"	"clob"	0	0	1	1
4997	1049	"arg_2"	"clob"	0	0	1	2
4998	1049	"arg_3"	"clob"	0	0	1	3
4999	1050	"res_0"	"boolean"	1	0	0	0
5000	1050	"arg_1"	"clob"	0	0	1	1
5001	1050	"arg_2"	"clob"	0	0	1	2
5002	1051	"res_0"	"boolean"	1	0	0	0
5003	1051	"arg_1"	"clob"	0	0	1	1
5004	1051	"arg_2"	"clob"	0	0	1	2
5005	1051	"arg_3"	"clob"	0	0	1	3
5006	1052	"res_0"	"boolean"	1	0	0	0
5007	1052	"arg_1"	"clob"	0	0	1	1
5008	1052	"arg_2"	"clob"	0	0	1	2
5009	1053	"res_0"	"boolean"	1	0	0	0
5010	1053	"arg_1"	"clob"	0	0	1	1
5011	1053	"arg_2"	"clob"	0	0	1	2
5012	1053	"arg_3"	"clob"	0	0	1	3
5013	1054	"res_0"	"boolean"	1	0	0	0
5014	1054	"arg_1"	"clob"	0	0	1	1
5015	1054	"arg_2"	"clob"	0	0	1	2
5016	1055	"res_0"	"boolean"	1	0	0	0
5017	1055	"arg_1"	"clob"	0	0	1	1
5018	1055	"arg_2"	"clob"	0	0	1	2
5019	1055	"arg_3"	"clob"	0	0	1	3
5020	1056	"res_0"	"int"	32	0	0	0
5021	1056	"arg_1"	"clob"	0	0	1	1
5022	1056	"arg_2"	"clob"	0	0	1	2
5023	1057	"res_0"	"clob"	0	0	0	0
5024	1057	"arg_1"	"clob"	0	0	1	1
5025	1057	"arg_2"	"int"	32	0	1	2
5026	1058	"res_0"	"clob"	0	0	0	0
5027	1058	"arg_1"	"clob"	0	0	1	1
5028	1058	"arg_2"	"clob"	0	0	1	2
5029	1059	"res_0"	"int"	32	0	0	0
5030	1059	"arg_1"	"clob"	0	0	1	1
5031	1060	"res_0"	"clob"	0	0	0	0
5032	1060	"arg_1"	"int"	32	0	1	1
5033	1061	"res_0"	"int"	32	0	0	0
5034	1061	"arg_1"	"clob"	0	0	1	1
5035	1062	"res_0"	"clob"	0	0	0	0
5036	1062	"arg_1"	"clob"	0	0	1	1
5037	1062	"arg_2"	"int"	32	0	1	2
5038	1063	"res_0"	"clob"	0	0	0	0
5039	1063	"arg_1"	"clob"	0	0	1	1
5040	1063	"arg_2"	"int"	32	0	1	2
5041	1064	"res_0"	"clob"	0	0	0	0
5042	1064	"arg_1"	"clob"	0	0	1	1
5043	1065	"res_0"	"clob"	0	0	0	0
5044	1065	"arg_1"	"clob"	0	0	1	1
5045	1066	"res_0"	"clob"	0	0	0	0
5046	1066	"arg_1"	"clob"	0	0	1	1
5047	1067	"res_0"	"clob"	0	0	0	0
5048	1067	"arg_1"	"clob"	0	0	1	1
5049	1068	"res_0"	"clob"	0	0	0	0
5050	1068	"arg_1"	"clob"	0	0	1	1
5051	1069	"res_0"	"clob"	0	0	0	0
5052	1069	"arg_1"	"clob"	0	0	1	1
5053	1069	"arg_2"	"clob"	0	0	1	2
5054	1070	"res_0"	"clob"	0	0	0	0
5055	1070	"arg_1"	"clob"	0	0	1	1
5056	1071	"res_0"	"clob"	0	0	0	0
5057	1071	"arg_1"	"clob"	0	0	1	1
5058	1071	"arg_2"	"clob"	0	0	1	2
5059	1072	"res_0"	"clob"	0	0	0	0
5060	1072	"arg_1"	"clob"	0	0	1	1
5061	1073	"res_0"	"clob"	0	0	0	0
5062	1073	"arg_1"	"clob"	0	0	1	1
5063	1073	"arg_2"	"clob"	0	0	1	2
5064	1074	"res_0"	"clob"	0	0	0	0
5065	1074	"arg_1"	"clob"	0	0	1	1
5066	1074	"arg_2"	"int"	32	0	1	2
5067	1075	"res_0"	"clob"	0	0	0	0
5068	1075	"arg_1"	"clob"	0	0	1	1
5069	1075	"arg_2"	"int"	32	0	1	2
5070	1075	"arg_3"	"clob"	0	0	1	3
5071	1076	"res_0"	"clob"	0	0	0	0
5072	1076	"arg_1"	"clob"	0	0	1	1
5073	1076	"arg_2"	"int"	32	0	1	2
5074	1077	"res_0"	"clob"	0	0	0	0
5075	1077	"arg_1"	"clob"	0	0	1	1
5076	1077	"arg_2"	"int"	32	0	1	2
5077	1077	"arg_3"	"clob"	0	0	1	3
5078	1078	"res_0"	"clob"	0	0	0	0
5079	1078	"arg_1"	"clob"	0	0	1	1
5080	1078	"arg_2"	"int"	32	0	1	2
5081	1078	"arg_3"	"int"	32	0	1	3
5082	1078	"arg_4"	"clob"	0	0	1	4
5083	1079	"res_0"	"clob"	0	0	0	0
5084	1079	"arg_1"	"clob"	0	0	1	1
5085	1079	"arg_2"	"clob"	0	0	1	2
5086	1079	"arg_3"	"clob"	0	0	1	3
5087	1080	"res_0"	"clob"	0	0	0	0
5088	1080	"arg_1"	"clob"	0	0	1	1
5089	1080	"arg_2"	"int"	32	0	1	2
5090	1081	"res_0"	"clob"	0	0	0	0
5091	1081	"arg_1"	"int"	32	0	1	1
5092	1082	"res_0"	"int"	32	0	0	0
5093	1082	"arg_1"	"clob"	0	0	1	1
5094	1083	"res_0"	"int"	32	0	0	0
5095	1083	"arg_1"	"clob"	0	0	1	1
5096	1084	"res_0"	"int"	32	0	0	0
5097	1084	"arg_1"	"clob"	0	0	1	1
5098	1085	"res_0"	"clob"	0	0	0	0
5099	1085	"arg_1"	"clob"	0	0	1	1
5100	1086	"res_0"	"int"	32	0	0	0
5101	1086	"arg_1"	"clob"	0	0	1	1
5102	1086	"arg_2"	"clob"	0	0	1	2
5103	1087	"res_0"	"int"	32	0	0	0
5104	1087	"arg_1"	"clob"	0	0	1	1
5105	1087	"arg_2"	"clob"	0	0	1	2
5106	1088	"res_0"	"int"	32	0	0	0
5107	1088	"arg_1"	"clob"	0	0	1	1
5108	1088	"arg_2"	"clob"	0	0	1	2
5109	1089	"res_0"	"double"	53	0	0	0
5110	1089	"arg_1"	"clob"	0	0	1	1
5111	1089	"arg_2"	"clob"	0	0	1	2
5112	1090	"res_0"	"clob"	0	0	0	0
5113	1090	"arg_1"	"clob"	0	0	1	1
5114	1091	"res_0"	"int"	32	0	0	0
5115	1091	"arg_1"	"clob"	0	0	1	1
5116	1091	"arg_2"	"clob"	0	0	1	2
5117	1092	"res_0"	"int"	32	0	0	0
5118	1092	"arg_1"	"clob"	0	0	1	1
5119	1092	"arg_2"	"clob"	0	0	1	2
5120	1092	"arg_3"	"int"	32	0	1	3
5121	1092	"arg_4"	"int"	32	0	1	4
5122	1092	"arg_5"	"int"	32	0	1	5
5123	1093	"res_0"	"table"	0	0	0	0
5124	1093	"arg_1"	"varchar"	0	0	1	1
5125	1093	"arg_2"	"varchar"	0	0	1	2
5126	1093	"arg_3"	"varchar"	0	0	1	3
5127	1093	"arg_4"	"varchar"	0	0	1	4
5128	1093	"arg_5"	"varchar"	0	0	1	5
5129	1093	"arg_6"	"varchar"	0	0	1	6
5130	1093	"arg_7"	"bigint"	64	0	1	7
5131	1093	"arg_8"	"bigint"	64	0	1	8
5132	1093	"arg_9"	"int"	32	0	1	9
5133	1094	"res_0"	"table"	0	0	0	0
5134	1094	"arg_1"	"varchar"	0	0	1	1
5135	1094	"arg_2"	"varchar"	0	0	1	2
5136	27	"res"	"boolean"	1	0	0	0
5137	27	"arg"	"oid"	63	0	1	1
5138	39	"res"	"any"	0	0	0	0
5139	39	"arg"	"any"	0	0	1	1
5140	40	"res"	"boolean"	1	0	0	0
5141	40	"arg"	"any"	0	0	1	1
5142	41	"res"	"boolean"	1	0	0	0
5143	41	"arg"	"any"	0	0	1	1
5144	46	"res"	"any"	0	0	0	0
5145	46	"arg"	"any"	0	0	1	1
5146	47	"res"	"any"	0	0	0	0
5147	47	"arg"	"any"	0	0	1	1
5148	51	"res"	"bigint"	64	0	0	0
5149	51	"arg"	"tinyint"	8	0	1	1
5150	52	"res"	"bigint"	64	0	0	0
5151	52	"arg"	"smallint"	16	0	1	1
5152	53	"res"	"bigint"	64	0	0	0
5153	53	"arg"	"int"	32	0	1	1
5154	54	"res"	"bigint"	64	0	0	0
5155	54	"arg"	"bigint"	64	0	1	1
5156	55	"res"	"wrd"	64	0	0	0
5157	55	"arg"	"wrd"	64	0	1	1
5158	56	"res"	"decimal"	19	0	0	0
5159	56	"arg"	"decimal"	2	0	1	1
5160	57	"res"	"decimal"	19	0	0	0
5161	57	"arg"	"decimal"	4	0	1	1
5162	58	"res"	"decimal"	19	0	0	0
5163	58	"arg"	"decimal"	9	0	1	1
5164	59	"res"	"decimal"	19	0	0	0
5165	59	"arg"	"decimal"	19	0	1	1
5166	60	"res"	"bigint"	64	0	0	0
5167	60	"arg"	"tinyint"	8	0	1	1
5168	61	"res"	"bigint"	64	0	0	0
5169	61	"arg"	"smallint"	16	0	1	1
5170	62	"res"	"bigint"	64	0	0	0
5171	62	"arg"	"int"	32	0	1	1
5172	63	"res"	"bigint"	64	0	0	0
5173	63	"arg"	"bigint"	64	0	1	1
5174	64	"res"	"bigint"	64	0	0	0
5175	65	"res"	"decimal"	19	0	0	0
5176	65	"arg"	"decimal"	2	0	1	1
5177	66	"res"	"decimal"	19	0	0	0
5178	66	"arg"	"decimal"	4	0	1	1
5179	67	"res"	"decimal"	19	0	0	0
5180	67	"arg"	"decimal"	9	0	1	1
5181	68	"res"	"decimal"	19	0	0	0
5182	68	"arg"	"decimal"	19	0	1	1
5183	81	"res"	"real"	24	0	0	0
5184	81	"arg"	"real"	24	0	1	1
5185	82	"res"	"real"	24	0	0	0
5186	82	"arg"	"real"	24	0	1	1
5187	83	"res"	"double"	53	0	0	0
5188	83	"arg"	"double"	53	0	1	1
5189	84	"res"	"double"	53	0	0	0
5190	84	"arg"	"double"	53	0	1	1
5191	85	"res"	"double"	53	0	0	0
5192	85	"arg"	"double"	53	0	1	1
5193	86	"res"	"wrd"	64	0	0	0
5194	87	"res"	"wrd"	64	0	0	0
5217	5216	"name"	"varchar"	1024	0	0	0
5218	5216	"value"	"varchar"	2048	0	0	1
5220	5219	"name"	"varchar"	1024	0	0	0
5226	5225	"name"	"varchar"	2048	0	0	0
5246	5245	"val"	"clob"	0	0	1	0
5247	5245	"pat"	"clob"	0	0	1	1
5248	5245	"esc"	"clob"	0	0	1	2
5251	5250	"val"	"clob"	0	0	1	0
5252	5250	"pat"	"clob"	0	0	1	1
5253	5250	"esc"	"clob"	0	0	1	2
5256	5255	"val"	"clob"	0	0	1	0
5257	5255	"pat"	"clob"	0	0	1	1
5260	5259	"val"	"clob"	0	0	1	0
5261	5259	"pat"	"clob"	0	0	1	1
5264	5263	"result"	"double"	53	0	0	0
5265	5263	"r"	"double"	53	0	1	1
5268	5267	"result"	"double"	53	0	0	0
5269	5267	"d"	"double"	53	0	1	1
5275	5274	"result"	"clob"	0	0	0	0
5276	5274	"theurl"	"url"	0	0	1	1
5279	5278	"result"	"clob"	0	0	0	0
5280	5278	"theurl"	"url"	0	0	1	1
5283	5282	"result"	"clob"	0	0	0	0
5284	5282	"theurl"	"url"	0	0	1	1
5287	5286	"result"	"clob"	0	0	0	0
5288	5286	"theurl"	"url"	0	0	1	1
5291	5290	"result"	"clob"	0	0	0	0
5292	5290	"theurl"	"url"	0	0	1	1
5295	5294	"result"	"clob"	0	0	0	0
5296	5294	"theurl"	"url"	0	0	1	1
5299	5298	"result"	"clob"	0	0	0	0
5300	5298	"theurl"	"url"	0	0	1	1
5303	5302	"result"	"clob"	0	0	0	0
5304	5302	"theurl"	"url"	0	0	1	1
5307	5306	"result"	"clob"	0	0	0	0
5308	5306	"theurl"	"url"	0	0	1	1
5311	5310	"result"	"clob"	0	0	0	0
5312	5310	"theurl"	"url"	0	0	1	1
5315	5314	"result"	"clob"	0	0	0	0
5316	5314	"theurl"	"url"	0	0	1	1
5319	5318	"result"	"clob"	0	0	0	0
5320	5318	"theurl"	"url"	0	0	1	1
5323	5322	"result"	"clob"	0	0	0	0
5324	5322	"theurl"	"url"	0	0	1	1
5327	5326	"result"	"boolean"	1	0	0	0
5328	5326	"theurl"	"url"	0	0	1	1
5331	5330	"result"	"url"	0	0	0	0
5332	5330	"protocol"	"clob"	0	0	1	1
5333	5330	"hostname"	"clob"	0	0	1	2
5334	5330	"port"	"int"	32	0	1	3
5335	5330	"file"	"clob"	0	0	1	4
5338	5337	"result"	"url"	0	0	0	0
5339	5337	"protocol"	"clob"	0	0	1	1
5340	5337	"hostname"	"clob"	0	0	1	2
5341	5337	"file"	"clob"	0	0	1	3
5344	5343	"result"	"date"	0	0	0	0
5345	5343	"s"	"clob"	0	0	1	1
5346	5343	"format"	"clob"	0	0	1	2
5349	5348	"result"	"clob"	0	0	0	0
5350	5348	"d"	"date"	0	0	1	1
5351	5348	"format"	"clob"	0	0	1	2
5354	5353	"result"	"date"	0	0	0	0
5355	5353	"s"	"clob"	0	0	1	1
5356	5353	"format"	"clob"	0	0	1	2
5360	5359	"result"	"inet"	0	0	0	0
5361	5359	"p"	"inet"	0	0	1	1
5364	5363	"result"	"clob"	0	0	0	0
5365	5363	"p"	"inet"	0	0	1	1
5368	5367	"result"	"int"	32	0	0	0
5369	5367	"p"	"inet"	0	0	1	1
5372	5371	"result"	"inet"	0	0	0	0
5373	5371	"p"	"inet"	0	0	1	1
5374	5371	"mask"	"int"	32	0	1	2
5377	5376	"result"	"inet"	0	0	0	0
5378	5376	"p"	"inet"	0	0	1	1
5381	5380	"result"	"inet"	0	0	0	0
5382	5380	"p"	"inet"	0	0	1	1
5385	5384	"result"	"inet"	0	0	0	0
5386	5384	"p"	"inet"	0	0	1	1
5389	5388	"result"	"clob"	0	0	0	0
5390	5388	"p"	"inet"	0	0	1	1
5393	5392	"result"	"clob"	0	0	0	0
5394	5392	"p"	"inet"	0	0	1	1
5397	5396	"result"	"boolean"	1	0	0	0
5398	5396	"i1"	"inet"	0	0	1	1
5399	5396	"i2"	"inet"	0	0	1	2
5402	5401	"result"	"boolean"	1	0	0	0
5403	5401	"i1"	"inet"	0	0	1	1
5404	5401	"i2"	"inet"	0	0	1	2
5407	5406	"result"	"boolean"	1	0	0	0
5408	5406	"i1"	"inet"	0	0	1	1
5409	5406	"i2"	"inet"	0	0	1	2
5412	5411	"result"	"boolean"	1	0	0	0
5413	5411	"i1"	"inet"	0	0	1	1
5414	5411	"i2"	"inet"	0	0	1	2
5417	5416	"id"	"oid"	63	0	0	0
5418	5416	"owner"	"clob"	0	0	0	1
5419	5416	"defined"	"timestamp"	7	0	0	2
5420	5416	"query"	"clob"	0	0	0	3
5421	5416	"pipe"	"clob"	0	0	0	4
5422	5416	"plan"	"clob"	0	0	0	5
5423	5416	"mal"	"int"	32	0	0	6
5424	5416	"optimize"	"bigint"	64	0	0	7
5427	5426	"id"	"oid"	63	0	0	0
5428	5426	"start"	"timestamp"	7	0	0	1
5429	5426	"stop"	"timestamp"	7	0	0	2
5430	5426	"arguments"	"clob"	0	0	0	3
5431	5426	"tuples"	"wrd"	64	0	0	4
5432	5426	"run"	"bigint"	64	0	0	5
5433	5426	"ship"	"bigint"	64	0	0	6
5434	5426	"cpu"	"int"	32	0	0	7
5435	5426	"io"	"int"	32	0	0	8
5481	5480	"threshold"	"smallint"	16	0	1	0
5486	5485	"event"	"int"	32	0	0	0
5487	5485	"clk"	"varchar"	20	0	0	1
5488	5485	"pc"	"varchar"	50	0	0	2
5489	5485	"thread"	"int"	32	0	0	3
5490	5485	"ticks"	"bigint"	64	0	0	4
5491	5485	"rrsmb"	"bigint"	64	0	0	5
5492	5485	"vmmb"	"bigint"	64	0	0	6
5493	5485	"reads"	"bigint"	64	0	0	7
5494	5485	"writes"	"bigint"	64	0	0	8
5495	5485	"minflt"	"bigint"	64	0	0	9
5496	5485	"majflt"	"bigint"	64	0	0	10
5497	5485	"nvcsw"	"bigint"	64	0	0	11
5498	5485	"stmt"	"clob"	0	0	0	12
5516	5515	"host"	"clob"	0	0	1	0
5517	5515	"port"	"int"	32	0	1	1
5520	5519	"ticks"	"int"	32	0	1	0
5523	5522	"result"	"timestamp"	7	0	0	0
5524	5522	"sec"	"bigint"	64	0	1	1
5527	5526	"result"	"timestamp"	7	0	0	0
5528	5526	"sec"	"int"	32	0	1	1
5531	5530	"result"	"int"	32	0	0	0
5532	5530	"ts"	"timestamp"	7	0	1	1
5535	5534	"sys"	"clob"	0	0	1	0
5536	5534	"tab"	"clob"	0	0	1	1
5539	5538	"sys"	"clob"	0	0	1	0
5540	5538	"tab"	"clob"	0	0	1	1
5543	5542	"sys"	"clob"	0	0	1	0
5544	5542	"tab"	"clob"	0	0	1	1
5547	5546	"sch"	"varchar"	100	0	0	0
5548	5546	"usr"	"varchar"	100	0	0	1
5549	5546	"dep_type"	"varchar"	32	0	0	2
5552	5551	"sch"	"varchar"	100	0	0	0
5553	5551	"usr"	"varchar"	100	0	0	1
5554	5551	"dep_type"	"varchar"	32	0	0	2
5557	5556	"sch"	"varchar"	100	0	0	0
5558	5556	"usr"	"varchar"	100	0	0	1
5559	5556	"dep_type"	"varchar"	32	0	0	2
5562	5561	"sch"	"varchar"	100	0	0	0
5563	5561	"usr"	"varchar"	100	0	0	1
5564	5561	"dep_type"	"varchar"	32	0	0	2
5567	5566	"sch"	"varchar"	100	0	0	0
5568	5566	"usr"	"varchar"	100	0	0	1
5569	5566	"dep_type"	"varchar"	32	0	0	2
5572	5571	"sch"	"varchar"	100	0	0	0
5573	5571	"usr"	"varchar"	100	0	0	1
5574	5571	"dep_type"	"varchar"	32	0	0	2
5577	5576	"sch"	"varchar"	100	0	0	0
5578	5576	"usr"	"varchar"	100	0	0	1
5579	5576	"dep_type"	"varchar"	32	0	0	2
5582	5581	"sch"	"varchar"	100	0	0	0
5583	5581	"usr"	"varchar"	100	0	0	1
5584	5581	"dep_type"	"varchar"	32	0	0	2
5587	5586	"sch"	"varchar"	100	0	0	0
5588	5586	"usr"	"varchar"	100	0	0	1
5589	5586	"dep_type"	"varchar"	32	0	0	2
5592	5591	"sch"	"varchar"	100	0	0	0
5593	5591	"usr"	"varchar"	100	0	0	1
5594	5591	"dep_type"	"varchar"	32	0	0	2
5597	5596	"sch"	"varchar"	100	0	0	0
5598	5596	"usr"	"varchar"	100	0	0	1
5599	5596	"dep_type"	"varchar"	32	0	0	2
5602	5601	"sch"	"varchar"	100	0	0	0
5603	5601	"usr"	"varchar"	100	0	0	1
5604	5601	"dep_type"	"varchar"	32	0	0	2
5607	5606	"sch"	"varchar"	100	0	0	0
5608	5606	"usr"	"varchar"	100	0	0	1
5609	5606	"dep_type"	"varchar"	32	0	0	2
5612	5611	"sch"	"varchar"	100	0	0	0
5613	5611	"usr"	"varchar"	100	0	0	1
5614	5611	"dep_type"	"varchar"	32	0	0	2
5617	5616	"sch"	"varchar"	100	0	0	0
5618	5616	"usr"	"varchar"	100	0	0	1
5619	5616	"dep_type"	"varchar"	32	0	0	2
5622	5621	"sch"	"varchar"	100	0	0	0
5623	5621	"usr"	"varchar"	100	0	0	1
5624	5621	"dep_type"	"varchar"	32	0	0	2
5627	5626	"sch"	"varchar"	100	0	0	0
5628	5626	"usr"	"varchar"	100	0	0	1
5629	5626	"dep_type"	"varchar"	32	0	0	2
5632	5631	"result"	"clob"	0	0	0	0
5633	5631	"username"	"clob"	0	0	1	1
5636	5635	"user"	"clob"	0	0	0	0
5637	5635	"login"	"timestamp"	7	0	0	1
5638	5635	"sessiontimeout"	"bigint"	64	0	0	2
5639	5635	"lastcommand"	"timestamp"	7	0	0	3
5640	5635	"querytimeout"	"bigint"	64	0	0	4
5641	5635	"active"	"boolean"	1	0	0	5
5652	5651	"delay"	"tinyint"	8	0	1	0
5655	5654	"delay"	"tinyint"	8	0	1	0
5656	5654	"force"	"boolean"	1	0	1	1
5659	5658	"query"	"bigint"	64	0	1	0
5662	5661	"query"	"bigint"	64	0	1	0
5663	5661	"session"	"bigint"	64	0	1	1
5666	5665	"timeout"	"bigint"	64	0	1	0
5669	5668	"result"	"varchar"	32	0	0	0
5670	5668	"s1"	"varchar"	32	0	1	1
5671	5668	"st"	"int"	32	0	1	2
5672	5668	"len"	"int"	32	0	1	3
5673	5668	"s3"	"varchar"	32	0	1	4
5676	5675	"result"	"double"	53	0	0	0
5677	5675	"num"	"double"	53	0	1	1
5678	5675	"prc"	"int"	32	0	1	2
5681	5680	"result"	"double"	53	0	0	0
5682	5680	"num"	"double"	53	0	1	1
5683	5680	"prc"	"int"	32	0	1	2
5684	5680	"truncat"	"int"	32	0	1	3
5687	5686	"result"	"clob"	0	0	0	0
5688	5686	"num"	"double"	53	0	1	1
5689	5686	"prc"	"int"	32	0	1	2
5690	5686	"truncat"	"int"	32	0	1	3
5693	5692	"result"	"double"	53	0	0	0
5694	5692	"pdec"	"double"	53	0	1	1
5695	5692	"pradius"	"double"	53	0	1	2
5698	5697	"result"	"oid"	63	0	0	0
5699	5697	"x"	"int"	32	0	1	1
5700	5697	"y"	"int"	32	0	1	2
5703	5702	"result"	"int"	32	0	0	0
5704	5702	"z"	"oid"	63	0	1	1
5707	5706	"result"	"int"	32	0	0	0
5708	5706	"z"	"oid"	63	0	1	1
5711	5710	"rewrite"	"clob"	0	0	0	0
5712	5710	"count"	"int"	32	0	0	1
5715	5714	"query"	"clob"	0	0	0	0
5716	5714	"count"	"int"	32	0	0	1
5719	5718	"filename"	"clob"	0	0	1	0
5722	5721	"name"	"clob"	0	0	0	0
5723	5721	"def"	"clob"	0	0	0	1
5724	5721	"status"	"clob"	0	0	0	2
5732	5731	"name"	"clob"	0	0	0	0
5733	5731	"value"	"clob"	0	0	0	1
5740	5739	"id"	"int"	32	0	0	0
5741	5739	"name"	"clob"	0	0	0	1
5742	5739	"htype"	"clob"	0	0	0	2
5743	5739	"ttype"	"clob"	0	0	0	3
5744	5739	"count"	"bigint"	64	0	0	4
5745	5739	"refcnt"	"int"	32	0	0	5
5746	5739	"lrefcnt"	"int"	32	0	0	6
5747	5739	"location"	"clob"	0	0	0	7
5748	5739	"heat"	"int"	32	0	0	8
5749	5739	"dirty"	"clob"	0	0	0	9
5750	5739	"status"	"clob"	0	0	0	10
5751	5739	"kind"	"clob"	0	0	0	11
5754	5753	"ra_stmt"	"clob"	0	0	1	0
5755	5753	"opt"	"boolean"	1	0	1	1
5758	5757	"qtag"	"bigint"	64	0	0	0
5759	5757	"user"	"clob"	0	0	0	1
5760	5757	"started"	"timestamp"	7	0	0	2
5761	5757	"estimate"	"timestamp"	7	0	0	3
5762	5757	"progress"	"int"	32	0	0	4
5763	5757	"status"	"clob"	0	0	0	5
5764	5757	"tag"	"oid"	63	0	0	6
5765	5757	"query"	"clob"	0	0	0	7
5778	5777	"tag"	"int"	32	0	1	0
5781	5780	"tag"	"int"	32	0	1	0
5784	5783	"tag"	"int"	32	0	1	0
5787	5786	"tag"	"bigint"	64	0	1	0
5790	5789	"tag"	"bigint"	64	0	1	0
5793	5792	"tag"	"bigint"	64	0	1	0
5796	5795	"rowid"	"bigint"	64	0	0	0
5797	5795	"fldid"	"int"	32	0	0	1
5798	5795	"message"	"clob"	0	0	0	2
5799	5795	"input"	"clob"	0	0	0	3
5810	5809	"result"	"double"	53	0	0	0
5811	5809	"val"	"tinyint"	8	0	1	1
5814	5813	"result"	"double"	53	0	0	0
5815	5813	"val"	"smallint"	16	0	1	1
5818	5817	"result"	"double"	53	0	0	0
5819	5817	"val"	"int"	32	0	1	1
5822	5821	"result"	"double"	53	0	0	0
5823	5821	"val"	"wrd"	64	0	1	1
5826	5825	"result"	"double"	53	0	0	0
5827	5825	"val"	"bigint"	64	0	1	1
5830	5829	"result"	"double"	53	0	0	0
5831	5829	"val"	"real"	24	0	1	1
5834	5833	"result"	"double"	53	0	0	0
5835	5833	"val"	"double"	53	0	1	1
5838	5837	"result"	"double"	53	0	0	0
5839	5837	"val"	"date"	0	0	1	1
5842	5841	"result"	"double"	53	0	0	0
5843	5841	"val"	"time"	1	0	1	1
5846	5845	"result"	"double"	53	0	0	0
5847	5845	"val"	"timestamp"	7	0	1	1
5850	5849	"result"	"double"	53	0	0	0
5851	5849	"val"	"tinyint"	8	0	1	1
5854	5853	"result"	"double"	53	0	0	0
5855	5853	"val"	"smallint"	16	0	1	1
5858	5857	"result"	"double"	53	0	0	0
5859	5857	"val"	"int"	32	0	1	1
5862	5861	"result"	"double"	53	0	0	0
5863	5861	"val"	"wrd"	64	0	1	1
5866	5865	"result"	"double"	53	0	0	0
5867	5865	"val"	"bigint"	64	0	1	1
5870	5869	"result"	"double"	53	0	0	0
5871	5869	"val"	"real"	24	0	1	1
5874	5873	"result"	"double"	53	0	0	0
5875	5873	"val"	"double"	53	0	1	1
5878	5877	"result"	"double"	53	0	0	0
5879	5877	"val"	"date"	0	0	1	1
5882	5881	"result"	"double"	53	0	0	0
5883	5881	"val"	"time"	1	0	1	1
5886	5885	"result"	"double"	53	0	0	0
5887	5885	"val"	"timestamp"	7	0	1	1
5890	5889	"result"	"double"	53	0	0	0
5891	5889	"val"	"tinyint"	8	0	1	1
5894	5893	"result"	"double"	53	0	0	0
5895	5893	"val"	"smallint"	16	0	1	1
5898	5897	"result"	"double"	53	0	0	0
5899	5897	"val"	"int"	32	0	1	1
5902	5901	"result"	"double"	53	0	0	0
5903	5901	"val"	"wrd"	64	0	1	1
5906	5905	"result"	"double"	53	0	0	0
5907	5905	"val"	"bigint"	64	0	1	1
5910	5909	"result"	"double"	53	0	0	0
5911	5909	"val"	"real"	24	0	1	1
5914	5913	"result"	"double"	53	0	0	0
5915	5913	"val"	"double"	53	0	1	1
5918	5917	"result"	"double"	53	0	0	0
5919	5917	"val"	"date"	0	0	1	1
5922	5921	"result"	"double"	53	0	0	0
5923	5921	"val"	"time"	1	0	1	1
5926	5925	"result"	"double"	53	0	0	0
5927	5925	"val"	"timestamp"	7	0	1	1
5930	5929	"result"	"double"	53	0	0	0
5931	5929	"val"	"tinyint"	8	0	1	1
5934	5933	"result"	"double"	53	0	0	0
5935	5933	"val"	"smallint"	16	0	1	1
5938	5937	"result"	"double"	53	0	0	0
5939	5937	"val"	"int"	32	0	1	1
5942	5941	"result"	"double"	53	0	0	0
5943	5941	"val"	"wrd"	64	0	1	1
5946	5945	"result"	"double"	53	0	0	0
5947	5945	"val"	"bigint"	64	0	1	1
5950	5949	"result"	"double"	53	0	0	0
5951	5949	"val"	"real"	24	0	1	1
5954	5953	"result"	"double"	53	0	0	0
5955	5953	"val"	"double"	53	0	1	1
5958	5957	"result"	"double"	53	0	0	0
5959	5957	"val"	"date"	0	0	1	1
5962	5961	"result"	"double"	53	0	0	0
5963	5961	"val"	"time"	1	0	1	1
5966	5965	"result"	"double"	53	0	0	0
5967	5965	"val"	"timestamp"	7	0	1	1
5970	5969	"result"	"tinyint"	8	0	0	0
5971	5969	"val"	"tinyint"	8	0	1	1
5974	5973	"result"	"smallint"	16	0	0	0
5975	5973	"val"	"smallint"	16	0	1	1
5978	5977	"result"	"int"	32	0	0	0
5979	5977	"val"	"int"	32	0	1	1
5982	5981	"result"	"wrd"	64	0	0	0
5983	5981	"val"	"wrd"	64	0	1	1
5986	5985	"result"	"bigint"	64	0	0	0
5987	5985	"val"	"bigint"	64	0	1	1
5990	5989	"result"	"decimal"	18	3	0	0
5991	5989	"val"	"decimal"	18	3	1	1
5994	5993	"result"	"real"	24	0	0	0
5995	5993	"val"	"real"	24	0	1	1
5998	5997	"result"	"double"	53	0	0	0
5999	5997	"val"	"double"	53	0	1	1
6002	6001	"result"	"date"	0	0	0	0
6003	6001	"val"	"date"	0	0	1	1
6006	6005	"result"	"time"	1	0	0	0
6007	6005	"val"	"time"	1	0	1	1
6010	6009	"result"	"timestamp"	7	0	0	0
6011	6009	"val"	"timestamp"	7	0	1	1
6014	6013	"result"	"tinyint"	8	0	0	0
6015	6013	"val"	"tinyint"	8	0	1	1
6016	6013	"q"	"double"	53	0	1	2
6019	6018	"result"	"smallint"	16	0	0	0
6020	6018	"val"	"smallint"	16	0	1	1
6021	6018	"q"	"double"	53	0	1	2
6024	6023	"result"	"int"	32	0	0	0
6025	6023	"val"	"int"	32	0	1	1
6026	6023	"q"	"double"	53	0	1	2
6029	6028	"result"	"wrd"	64	0	0	0
6030	6028	"val"	"wrd"	64	0	1	1
6031	6028	"q"	"double"	53	0	1	2
6034	6033	"result"	"bigint"	64	0	0	0
6035	6033	"val"	"bigint"	64	0	1	1
6036	6033	"q"	"double"	53	0	1	2
6039	6038	"result"	"decimal"	18	3	0	0
6040	6038	"val"	"decimal"	18	3	1	1
6041	6038	"q"	"double"	53	0	1	2
6044	6043	"result"	"real"	24	0	0	0
6045	6043	"val"	"real"	24	0	1	1
6046	6043	"q"	"double"	53	0	1	2
6049	6048	"result"	"double"	53	0	0	0
6050	6048	"val"	"double"	53	0	1	1
6051	6048	"q"	"double"	53	0	1	2
6054	6053	"result"	"date"	0	0	0	0
6055	6053	"val"	"date"	0	0	1	1
6056	6053	"q"	"double"	53	0	1	2
6059	6058	"result"	"time"	1	0	0	0
6060	6058	"val"	"time"	1	0	1	1
6061	6058	"q"	"double"	53	0	1	2
6064	6063	"result"	"timestamp"	7	0	0	0
6065	6063	"val"	"timestamp"	7	0	1	1
6066	6063	"q"	"double"	53	0	1	2
6069	6068	"result"	"tinyint"	8	0	0	0
6070	6068	"e1"	"tinyint"	8	0	1	1
6071	6068	"e2"	"tinyint"	8	0	1	2
6074	6073	"result"	"smallint"	16	0	0	0
6075	6073	"e1"	"smallint"	16	0	1	1
6076	6073	"e2"	"smallint"	16	0	1	2
6079	6078	"result"	"int"	32	0	0	0
6080	6078	"e1"	"int"	32	0	1	1
6081	6078	"e2"	"int"	32	0	1	2
6084	6083	"result"	"wrd"	64	0	0	0
6085	6083	"e1"	"wrd"	64	0	1	1
6086	6083	"e2"	"wrd"	64	0	1	2
6089	6088	"result"	"bigint"	64	0	0	0
6090	6088	"e1"	"bigint"	64	0	1	1
6091	6088	"e2"	"bigint"	64	0	1	2
6094	6093	"result"	"real"	24	0	0	0
6095	6093	"e1"	"real"	24	0	1	1
6096	6093	"e2"	"real"	24	0	1	2
6099	6098	"result"	"double"	53	0	0	0
6100	6098	"e1"	"double"	53	0	1	1
6101	6098	"e2"	"double"	53	0	1	2
6117	6116	"result"	"mbr"	0	0	0	0
6118	6116	"g"	"geometry"	0	0	1	1
6121	6120	"result"	"boolean"	1	0	0	0
6122	6120	"a"	"mbr"	0	0	1	1
6123	6120	"b"	"mbr"	0	0	1	2
6126	6125	"result"	"geometry"	0	0	0	0
6127	6125	"wkt"	"clob"	0	0	1	1
6128	6125	"srid"	"smallint"	16	0	1	2
6131	6130	"result"	"point"	0	0	0	0
6132	6130	"wkt"	"clob"	0	0	1	1
6133	6130	"srid"	"smallint"	16	0	1	2
6136	6135	"result"	"linestring"	0	0	0	0
6137	6135	"wkt"	"clob"	0	0	1	1
6138	6135	"srid"	"smallint"	16	0	1	2
6141	6140	"result"	"polygon"	0	0	0	0
6142	6140	"wkt"	"clob"	0	0	1	1
6143	6140	"srid"	"smallint"	16	0	1	2
6146	6145	"result"	"multipoint"	0	0	0	0
6147	6145	"wkt"	"clob"	0	0	1	1
6148	6145	"srid"	"smallint"	16	0	1	2
6151	6150	"result"	"multilinestring"	0	0	0	0
6152	6150	"wkt"	"clob"	0	0	1	1
6153	6150	"srid"	"smallint"	16	0	1	2
6156	6155	"result"	"multipolygon"	0	0	0	0
6157	6155	"wkt"	"clob"	0	0	1	1
6158	6155	"srid"	"smallint"	16	0	1	2
6161	6160	"result"	"multipolygon"	0	0	0	0
6162	6160	"wkt"	"clob"	0	0	1	1
6163	6160	"srid"	"smallint"	16	0	1	2
6166	6165	"result"	"polygon"	0	0	0	0
6167	6165	"wkt"	"clob"	0	0	1	1
6168	6165	"srid"	"smallint"	16	0	1	2
6171	6170	"result"	"clob"	0	0	0	0
6172	6170	"g"	"geometry"	0	0	1	1
6175	6174	"result"	"double"	53	0	0	0
6176	6174	"g"	"geometry"	0	0	1	1
6179	6178	"result"	"double"	53	0	0	0
6180	6178	"g"	"geometry"	0	0	1	1
6183	6182	"result"	"point"	0	0	0	0
6184	6182	"x"	"double"	53	0	1	1
6185	6182	"y"	"double"	53	0	1	2
6188	6187	"result"	"int"	32	0	0	0
6189	6187	"g"	"geometry"	0	0	1	1
6192	6191	"result"	"int"	32	0	0	0
6193	6191	"g"	"geometry"	0	0	1	1
6196	6195	"result"	"int"	32	0	0	0
6197	6195	"g"	"geometry"	0	0	1	1
6200	6199	"result"	"geometry"	0	0	0	0
6201	6199	"g"	"geometry"	0	0	1	1
6204	6203	"result"	"boolean"	1	0	0	0
6205	6203	"g"	"geometry"	0	0	1	1
6208	6207	"result"	"boolean"	1	0	0	0
6209	6207	"g"	"geometry"	0	0	1	1
6212	6211	"result"	"geometry"	0	0	0	0
6213	6211	"g"	"geometry"	0	0	1	1
6216	6215	"result"	"boolean"	1	0	0	0
6217	6215	"a"	"geometry"	0	0	1	1
6218	6215	"b"	"geometry"	0	0	1	2
6221	6220	"result"	"boolean"	1	0	0	0
6222	6220	"a"	"geometry"	0	0	1	1
6223	6220	"b"	"geometry"	0	0	1	2
6226	6225	"result"	"boolean"	1	0	0	0
6227	6225	"a"	"geometry"	0	0	1	1
6228	6225	"b"	"geometry"	0	0	1	2
6231	6230	"result"	"boolean"	1	0	0	0
6232	6230	"a"	"geometry"	0	0	1	1
6233	6230	"b"	"geometry"	0	0	1	2
6236	6235	"result"	"boolean"	1	0	0	0
6237	6235	"a"	"geometry"	0	0	1	1
6238	6235	"b"	"geometry"	0	0	1	2
6241	6240	"result"	"boolean"	1	0	0	0
6242	6240	"a"	"geometry"	0	0	1	1
6243	6240	"b"	"geometry"	0	0	1	2
6246	6245	"result"	"boolean"	1	0	0	0
6247	6245	"a"	"geometry"	0	0	1	1
6248	6245	"b"	"geometry"	0	0	1	2
6251	6250	"result"	"boolean"	1	0	0	0
6252	6250	"a"	"geometry"	0	0	1	1
6253	6250	"b"	"geometry"	0	0	1	2
6256	6255	"result"	"boolean"	1	0	0	0
6257	6255	"a"	"geometry"	0	0	1	1
6258	6255	"b"	"geometry"	0	0	1	2
6259	6255	"pattern"	"clob"	0	0	1	3
6262	6261	"result"	"double"	53	0	0	0
6263	6261	"g"	"geometry"	0	0	1	1
6266	6265	"result"	"double"	53	0	0	0
6267	6265	"g"	"geometry"	0	0	1	1
6270	6269	"result"	"double"	53	0	0	0
6271	6269	"a"	"geometry"	0	0	1	1
6272	6269	"b"	"geometry"	0	0	1	2
6275	6274	"result"	"geometry"	0	0	0	0
6276	6274	"a"	"geometry"	0	0	1	1
6277	6274	"distance"	"double"	53	0	1	2
6280	6279	"result"	"geometry"	0	0	0	0
6281	6279	"a"	"geometry"	0	0	1	1
6284	6283	"result"	"geometry"	0	0	0	0
6285	6283	"a"	"geometry"	0	0	1	1
6286	6283	"b"	"geometry"	0	0	1	2
6289	6288	"result"	"geometry"	0	0	0	0
6290	6288	"a"	"geometry"	0	0	1	1
6291	6288	"b"	"geometry"	0	0	1	2
6294	6293	"result"	"geometry"	0	0	0	0
6295	6293	"a"	"geometry"	0	0	1	1
6296	6293	"b"	"geometry"	0	0	1	2
6299	6298	"result"	"geometry"	0	0	0	0
6300	6298	"a"	"geometry"	0	0	1	1
6301	6298	"b"	"geometry"	0	0	1	2
6306	6305	"result"	"json"	0	0	0	0
6307	6305	"js"	"json"	0	0	1	1
6308	6305	"pathexpr"	"clob"	0	0	1	2
6311	6310	"result"	"json"	0	0	0	0
6312	6310	"js"	"json"	0	0	1	1
6313	6310	"name"	"tinyint"	8	0	1	2
6316	6315	"result"	"json"	0	0	0	0
6317	6315	"js"	"json"	0	0	1	1
6318	6315	"name"	"int"	32	0	1	2
6321	6320	"result"	"json"	0	0	0	0
6322	6320	"js"	"json"	0	0	1	1
6323	6320	"name"	"bigint"	64	0	1	2
6326	6325	"result"	"clob"	0	0	0	0
6327	6325	"js"	"json"	0	0	1	1
6328	6325	"e"	"clob"	0	0	1	2
6331	6330	"result"	"double"	53	0	0	0
6332	6330	"js"	"json"	0	0	1	1
6335	6334	"result"	"bigint"	64	0	0	0
6336	6334	"js"	"json"	0	0	1	1
6339	6338	"result"	"boolean"	1	0	0	0
6340	6338	"js"	"clob"	0	0	1	1
6343	6342	"result"	"boolean"	1	0	0	0
6344	6342	"js"	"clob"	0	0	1	1
6347	6346	"result"	"boolean"	1	0	0	0
6348	6346	"js"	"clob"	0	0	1	1
6351	6350	"result"	"boolean"	1	0	0	0
6352	6350	"js"	"json"	0	0	1	1
6355	6354	"result"	"boolean"	1	0	0	0
6356	6354	"js"	"json"	0	0	1	1
6359	6358	"result"	"boolean"	1	0	0	0
6360	6358	"js"	"json"	0	0	1	1
6363	6362	"result"	"int"	32	0	0	0
6364	6362	"js"	"json"	0	0	1	1
6367	6366	"result"	"json"	0	0	0	0
6368	6366	"js"	"json"	0	0	1	1
6371	6370	"result"	"json"	0	0	0	0
6372	6370	"js"	"json"	0	0	1	1
6375	6374	"result"	"clob"	0	0	0	0
6376	6374	"js"	"json"	0	0	1	1
6379	6378	"result"	"clob"	0	0	0	0
6380	6378	"js"	"clob"	0	0	1	1
6383	6382	"result"	"clob"	0	0	0	0
6384	6382	"js"	"int"	32	0	1	1
6387	6386	"result"	"clob"	0	0	0	0
6388	6386	"js"	"json"	0	0	1	1
6391	6390	"result"	"clob"	0	0	0	0
6392	6390	"x"	"clob"	0	0	1	1
6395	6394	"result"	"clob"	0	0	0	0
6396	6394	"x"	"double"	53	0	1	1
6399	6398	"result"	"clob"	0	0	0	0
6400	6398	"v"	"clob"	0	0	1	1
6404	6403	"result"	"uuid"	0	0	0	0
6407	6406	"result"	"uuid"	0	0	0	0
6408	6406	"u"	"uuid"	0	0	1	1
6411	6410	"result"	"uuid"	0	0	0	0
6412	6410	"u"	"clob"	0	0	1	1
6415	6414	"result"	"double"	53	0	0	0
6416	6414	"chi2"	"double"	53	0	1	1
6417	6414	"datapoints"	"double"	53	0	1	2
6420	6419	"dirname"	"clob"	0	0	1	0
6423	6422	"fname"	"clob"	0	0	1	0
6426	6425	"tname"	"clob"	0	0	1	0
6429	6428	"dirname"	"clob"	0	0	1	0
6430	6428	"pat"	"clob"	0	0	1	1
6465	6464	"fname"	"varchar"	256	0	1	0
6468	6467	"fid"	"int"	32	0	1	0
6469	6467	"varnname"	"varchar"	256	0	1	1
6472	6471	"schema"	"clob"	0	0	0	0
6473	6471	"table"	"clob"	0	0	0	1
6474	6471	"column"	"clob"	0	0	0	2
6475	6471	"type"	"clob"	0	0	0	3
6476	6471	"mode"	"clob"	0	0	0	4
6477	6471	"location"	"clob"	0	0	0	5
6478	6471	"count"	"bigint"	64	0	0	6
6479	6471	"typewidth"	"int"	32	0	0	7
6480	6471	"columnsize"	"bigint"	64	0	0	8
6481	6471	"heapsize"	"bigint"	64	0	0	9
6482	6471	"hashes"	"bigint"	64	0	0	10
6483	6471	"phash"	"boolean"	1	0	0	11
6484	6471	"imprints"	"bigint"	64	0	0	12
6485	6471	"sorted"	"boolean"	1	0	0	13
6518	6517	"result"	"bigint"	64	0	0	0
6519	6517	"nme"	"clob"	0	0	1	1
6520	6517	"i"	"bigint"	64	0	1	2
6521	6517	"d"	"bigint"	64	0	1	3
6524	6523	"result"	"bigint"	64	0	0	0
6525	6523	"tpe"	"clob"	0	0	1	1
6526	6523	"i"	"bigint"	64	0	1	2
6527	6523	"w"	"int"	32	0	1	3
6530	6529	"result"	"bigint"	64	0	0	0
6531	6529	"b"	"boolean"	1	0	1	1
6532	6529	"i"	"bigint"	64	0	1	2
6535	6534	"result"	"bigint"	64	0	0	0
6536	6534	"i"	"bigint"	64	0	1	1
6537	6534	"nme"	"clob"	0	0	1	2
6540	6539	"schema"	"clob"	0	0	0	0
6541	6539	"table"	"clob"	0	0	0	1
6542	6539	"column"	"clob"	0	0	0	2
6543	6539	"type"	"clob"	0	0	0	3
6544	6539	"count"	"bigint"	64	0	0	4
6545	6539	"columnsize"	"bigint"	64	0	0	5
6546	6539	"heapsize"	"bigint"	64	0	0	6
6547	6539	"hashes"	"bigint"	64	0	0	7
6548	6539	"imprints"	"bigint"	64	0	0	8
6549	6539	"sorted"	"boolean"	1	0	0	9
6589	6588	"tbl"	"clob"	0	0	1	0
6592	6591	"sch"	"clob"	0	0	1	0
6593	6591	"tbl"	"clob"	0	0	1	1
6596	6595	"sch"	"clob"	0	0	1	0
6597	6595	"tbl"	"clob"	0	0	1	1
6598	6595	"col"	"clob"	0	0	1	2
6601	6600	"sample"	"bigint"	64	0	1	0
6604	6603	"tbl"	"clob"	0	0	1	0
6605	6603	"sample"	"bigint"	64	0	1	1
6608	6607	"sch"	"clob"	0	0	1	0
6609	6607	"tbl"	"clob"	0	0	1	1
6610	6607	"sample"	"bigint"	64	0	1	2
6613	6612	"sch"	"clob"	0	0	1	0
6614	6612	"tbl"	"clob"	0	0	1	1
6615	6612	"col"	"clob"	0	0	1	2
6616	6612	"sample"	"bigint"	64	0	1	3
6619	6618	"result"	"clob"	0	0	0	0
6620	6618	"src"	"clob"	0	0	1	1
6623	6622	"result"	"smallint"	16	0	0	0
6624	6622	"one"	"tinyint"	8	0	1	1
6625	6622	"two"	"tinyint"	8	0	1	2
6628	6627	"result"	"int"	32	0	0	0
6629	6627	"one"	"smallint"	16	0	1	1
6630	6627	"two"	"smallint"	16	0	1	2
6633	6632	"result"	"bigint"	64	0	0	0
6634	6632	"one"	"int"	32	0	1	1
6635	6632	"two"	"int"	32	0	1	2
6639	6638	"bam_repos"	"clob"	0	0	1	0
6640	6638	"dbschema"	"smallint"	16	0	1	1
6641	6638	"nr_threads"	"smallint"	16	0	1	2
6644	6643	"bam_files"	"clob"	0	0	1	0
6645	6643	"dbschema"	"smallint"	16	0	1	1
6646	6643	"nr_threads"	"smallint"	16	0	1	2
6649	6648	"bam_file"	"clob"	0	0	1	0
6650	6648	"dbschema"	"smallint"	16	0	1	1
6653	6652	"file_id"	"bigint"	64	0	1	0
6654	6652	"dbschema"	"smallint"	16	0	1	1
6657	6656	"result"	"boolean"	1	0	0	0
6658	6656	"flag"	"smallint"	16	0	1	1
6659	6656	"name"	"clob"	0	0	1	2
6662	6661	"result"	"clob"	0	0	0	0
6663	6661	"seq"	"clob"	0	0	1	1
6666	6665	"result"	"clob"	0	0	0	0
6667	6665	"qual"	"clob"	0	0	1	1
6670	6669	"result"	"int"	32	0	0	0
6671	6669	"cigar"	"clob"	0	0	1	1
6674	6673	"output_path"	"clob"	0	0	1	0
6677	6676	"output_path"	"clob"	0	0	1	0
6747	6746	"value"	"tinyint"	8	0	0	0
6748	6746	"first"	"tinyint"	8	0	1	1
6749	6746	"last"	"tinyint"	8	0	1	2
6752	6751	"value"	"tinyint"	8	0	0	0
6753	6751	"first"	"tinyint"	8	0	1	1
6754	6751	"last"	"tinyint"	8	0	1	2
6755	6751	"stepsize"	"tinyint"	8	0	1	3
6758	6757	"value"	"smallint"	16	0	0	0
6759	6757	"first"	"smallint"	16	0	1	1
6760	6757	"last"	"smallint"	16	0	1	2
6763	6762	"value"	"smallint"	16	0	0	0
6764	6762	"first"	"smallint"	16	0	1	1
6765	6762	"last"	"smallint"	16	0	1	2
6766	6762	"stepsize"	"smallint"	16	0	1	3
6769	6768	"value"	"int"	32	0	0	0
6770	6768	"first"	"int"	32	0	1	1
6771	6768	"last"	"int"	32	0	1	2
6774	6773	"value"	"int"	32	0	0	0
6775	6773	"first"	"int"	32	0	1	1
6776	6773	"last"	"int"	32	0	1	2
6777	6773	"stepsize"	"int"	32	0	1	3
6780	6779	"value"	"bigint"	64	0	0	0
6781	6779	"first"	"bigint"	64	0	1	1
6782	6779	"last"	"bigint"	64	0	1	2
6785	6784	"value"	"bigint"	64	0	0	0
6786	6784	"first"	"bigint"	64	0	1	1
6787	6784	"last"	"bigint"	64	0	1	2
6788	6784	"stepsize"	"bigint"	64	0	1	3
6791	6790	"value"	"real"	24	0	0	0
6792	6790	"first"	"real"	24	0	1	1
6793	6790	"last"	"real"	24	0	1	2
6794	6790	"stepsize"	"real"	24	0	1	3
6797	6796	"value"	"double"	53	0	0	0
6798	6796	"first"	"double"	53	0	1	1
6799	6796	"last"	"double"	53	0	1	2
6800	6796	"stepsize"	"double"	53	0	1	3
6803	6802	"value"	"decimal"	10	2	0	0
6804	6802	"first"	"decimal"	10	2	1	1
6805	6802	"last"	"decimal"	10	2	1	2
6806	6802	"stepsize"	"decimal"	10	2	1	3
6809	6808	"value"	"timestamp"	7	0	0	0
6810	6808	"first"	"timestamp"	7	0	1	1
6811	6808	"last"	"timestamp"	7	0	1	2
6812	6808	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 228 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
364	5263	7
365	5263	7
867	5263	7
364	5267	7
365	5267	7
867	5267	7
5416	5445	5
5426	5456	5
5416	5474	5
5426	5474	5
5485	5513	5
2003	5546	7
2001	5546	7
2002	5546	7
5227	5546	7
5236	5551	7
5234	5551	7
5235	5551	7
2005	5551	7
2001	5551	7
2003	5551	7
5195	5556	7
2047	5556	7
2046	5556	7
2049	5556	7
2048	5556	7
5195	5561	7
2088	5561	7
2086	5561	7
2090	5561	7
2083	5561	7
2079	5561	7
5195	5566	7
2047	5566	7
2046	5566	7
2049	5566	7
2092	5566	7
2091	5566	7
2048	5566	7
2093	5566	7
2094	5566	7
5195	5571	7
2081	5571	7
2079	5571	7
2084	5571	7
2080	5571	7
2083	5571	7
5195	5576	7
2047	5576	7
2046	5576	7
2049	5576	7
2017	5576	7
2016	5576	7
2048	5576	7
2018	5576	7
5205	5581	7
2047	5581	7
2046	5581	7
2049	5581	7
2048	5581	7
5195	5581	7
5205	5586	7
2081	5586	7
2079	5586	7
2084	5586	7
2103	5586	7
2102	5586	7
2104	5586	7
2080	5586	7
2083	5586	7
148	5586	7
31	5586	7
30	5586	7
32	5586	7
5205	5591	7
2088	5591	7
2086	5591	7
2090	5591	7
2083	5591	7
2079	5591	7
2087	5591	7
2103	5591	7
2102	5591	7
2104	5591	7
31	5591	7
30	5591	7
32	5591	7
5205	5596	7
2047	5596	7
2046	5596	7
2049	5596	7
2048	5596	7
2017	5596	7
2016	5596	7
2018	5596	7
5205	5601	7
2047	5601	7
2046	5601	7
2049	5601	7
2092	5601	7
2091	5601	7
2048	5601	7
2093	5601	7
5195	5606	7
2047	5606	7
2046	5606	7
2049	5606	7
2017	5606	7
2016	5606	7
2048	5606	7
2018	5606	7
5195	5611	7
2047	5611	7
2046	5611	7
2049	5611	7
2092	5611	7
2091	5611	7
2048	5611	7
2093	5611	7
2018	5616	7
2016	5616	7
2017	5616	7
2047	5616	7
2046	5616	7
2049	5616	7
2048	5616	7
2018	5621	7
2016	5621	7
2017	5621	7
2047	5621	7
2046	5621	7
2049	5621	7
2092	5621	7
2091	5621	7
2048	5621	7
2093	5621	7
2083	5626	7
2079	5626	7
2080	5626	7
2084	5626	7
5635	5649	5
112	5668	7
37	5668	7
35	5668	7
1008	5668	7
994	5668	7
207	5668	7
1005	5668	7
208	5668	7
32	5680	7
428	5680	7
112	5680	7
114	5680	7
34	5680	7
5675	5680	7
5721	5729	5
5731	5737	5
5757	5775	5
5795	5805	5
6471	6501	5
6503	6515	13
6513	6515	13
6504	6515	13
6505	6515	13
6506	6515	13
6507	6515	13
6508	6515	13
6509	6515	13
6510	6515	13
6511	6515	13
6512	6515	13
32	6517	7
209	6517	7
215	6517	7
111	6523	7
33	6523	7
208	6523	7
209	6523	7
32	6529	7
209	6529	7
112	6534	7
32	6534	7
324	6534	7
6503	6539	7
6513	6539	7
6504	6539	7
6505	6539	7
6506	6539	7
6508	6539	7
6509	6539	7
6510	6539	7
6511	6539	7
6512	6539	7
6517	6539	7
6523	6539	7
6529	6539	7
6534	6539	7
6539	6561	5
6539	6571	5
47	6571	5
54	6571	5
50	6571	5
34	6571	5
32	6571	5
209	6571	5
6679	6686	10
6679	6685	4
6689	6697	10
6690	6697	10
6690	6699	10
6689	6696	4
6690	6696	4
6685	6698	11
6690	6698	11
6702	6716	10
6703	6716	10
6703	6718	10
6702	6715	4
6703	6715	4
6685	6717	11
6703	6717	11
6721	6728	10
6722	6728	10
6722	6730	10
6721	6727	4
6722	6727	4
6685	6729	11
6722	6729	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1356 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
28	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
29	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
30	"hash"	"hash"	"mkey"	0	1	false	false	false	0
31	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
32	"="	"="	"calc"	0	1	false	false	false	0
33	"<>"	"!="	"calc"	0	1	false	false	false	0
34	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
35	">"	">"	"calc"	0	1	false	false	false	0
36	">="	">="	"calc"	0	1	false	false	false	0
37	"<"	"<"	"calc"	0	1	false	false	false	0
38	"<="	"<="	"calc"	0	1	false	false	false	0
42	"in"	"in"	"calc"	0	1	false	false	false	0
43	"identity"	"identity"	"calc"	0	1	false	false	false	0
44	"rowid"	"identity"	"calc"	0	1	false	false	false	0
45	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
48	"sql_min"	"min"	"calc"	0	1	false	false	false	0
49	"sql_max"	"max"	"calc"	0	1	false	false	false	0
50	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
69	"mod"	"%"	"calc"	0	1	false	false	false	0
70	"mod"	"%"	"calc"	0	1	false	false	false	0
71	"mod"	"%"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
80	"mod"	"%"	"calc"	0	1	false	false	false	0
88	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
89	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
90	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
91	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
92	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
93	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
94	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
95	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
96	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
97	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
98	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
99	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
100	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
101	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
102	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
103	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
104	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
105	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
106	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
107	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
108	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
109	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
110	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
111	"and"	"and"	"calc"	0	1	false	false	false	0
112	"or"	"or"	"calc"	0	1	false	false	false	0
113	"xor"	"xor"	"calc"	0	1	false	false	false	0
114	"not"	"not"	"calc"	0	1	false	false	false	0
115	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
116	"sql_add"	"+"	"calc"	0	1	false	false	false	0
117	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
118	"sql_div"	"/"	"calc"	0	1	false	false	false	0
119	"bit_and"	"and"	"calc"	0	1	false	false	false	0
120	"bit_or"	"or"	"calc"	0	1	false	false	false	0
121	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
122	"bit_not"	"not"	"calc"	0	1	false	false	false	0
123	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
124	"right_shift"	">>"	"calc"	0	1	false	false	false	0
125	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
126	"abs"	"abs"	"calc"	0	1	false	false	false	0
127	"sign"	"sign"	"calc"	0	1	false	false	false	0
128	"scale_up"	"*"	"calc"	0	1	false	false	false	0
129	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
130	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
131	"sql_add"	"+"	"calc"	0	1	false	false	false	0
132	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
133	"sql_div"	"/"	"calc"	0	1	false	false	false	0
134	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
135	"sql_add"	"+"	"calc"	0	1	false	false	false	0
136	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
137	"sql_div"	"/"	"calc"	0	1	false	false	false	0
138	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
139	"sql_add"	"+"	"calc"	0	1	false	false	false	0
140	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
141	"sql_div"	"/"	"calc"	0	1	false	false	false	0
142	"bit_and"	"and"	"calc"	0	1	false	false	false	0
143	"bit_or"	"or"	"calc"	0	1	false	false	false	0
144	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
145	"bit_not"	"not"	"calc"	0	1	false	false	false	0
146	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
147	"right_shift"	">>"	"calc"	0	1	false	false	false	0
148	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
149	"abs"	"abs"	"calc"	0	1	false	false	false	0
150	"sign"	"sign"	"calc"	0	1	false	false	false	0
151	"scale_up"	"*"	"calc"	0	1	false	false	false	0
152	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
153	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
154	"sql_add"	"+"	"calc"	0	1	false	false	false	0
155	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
156	"sql_div"	"/"	"calc"	0	1	false	false	false	0
157	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
158	"sql_add"	"+"	"calc"	0	1	false	false	false	0
159	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
160	"sql_div"	"/"	"calc"	0	1	false	false	false	0
161	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
162	"sql_add"	"+"	"calc"	0	1	false	false	false	0
163	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
164	"sql_div"	"/"	"calc"	0	1	false	false	false	0
165	"bit_and"	"and"	"calc"	0	1	false	false	false	0
166	"bit_or"	"or"	"calc"	0	1	false	false	false	0
167	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
168	"bit_not"	"not"	"calc"	0	1	false	false	false	0
169	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
170	"right_shift"	">>"	"calc"	0	1	false	false	false	0
171	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
172	"abs"	"abs"	"calc"	0	1	false	false	false	0
173	"sign"	"sign"	"calc"	0	1	false	false	false	0
174	"scale_up"	"*"	"calc"	0	1	false	false	false	0
175	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
176	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
177	"sql_add"	"+"	"calc"	0	1	false	false	false	0
178	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
179	"sql_div"	"/"	"calc"	0	1	false	false	false	0
180	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
181	"sql_add"	"+"	"calc"	0	1	false	false	false	0
182	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
183	"sql_div"	"/"	"calc"	0	1	false	false	false	0
184	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
185	"sql_add"	"+"	"calc"	0	1	false	false	false	0
186	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
187	"sql_div"	"/"	"calc"	0	1	false	false	false	0
188	"bit_and"	"and"	"calc"	0	1	false	false	false	0
189	"bit_or"	"or"	"calc"	0	1	false	false	false	0
190	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
191	"bit_not"	"not"	"calc"	0	1	false	false	false	0
192	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
193	"right_shift"	">>"	"calc"	0	1	false	false	false	0
194	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
195	"abs"	"abs"	"calc"	0	1	false	false	false	0
196	"sign"	"sign"	"calc"	0	1	false	false	false	0
197	"scale_up"	"*"	"calc"	0	1	false	false	false	0
198	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
199	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
200	"sql_add"	"+"	"calc"	0	1	false	false	false	0
201	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
202	"sql_div"	"/"	"calc"	0	1	false	false	false	0
203	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
204	"sql_add"	"+"	"calc"	0	1	false	false	false	0
205	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
206	"sql_div"	"/"	"calc"	0	1	false	false	false	0
207	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
208	"sql_add"	"+"	"calc"	0	1	false	false	false	0
209	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
210	"sql_div"	"/"	"calc"	0	1	false	false	false	0
211	"bit_and"	"and"	"calc"	0	1	false	false	false	0
212	"bit_or"	"or"	"calc"	0	1	false	false	false	0
213	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
214	"bit_not"	"not"	"calc"	0	1	false	false	false	0
215	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
216	"right_shift"	">>"	"calc"	0	1	false	false	false	0
217	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
218	"abs"	"abs"	"calc"	0	1	false	false	false	0
219	"sign"	"sign"	"calc"	0	1	false	false	false	0
220	"scale_up"	"*"	"calc"	0	1	false	false	false	0
221	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
222	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
223	"sql_add"	"+"	"calc"	0	1	false	false	false	0
224	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
225	"sql_div"	"/"	"calc"	0	1	false	false	false	0
226	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
227	"sql_add"	"+"	"calc"	0	1	false	false	false	0
228	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
229	"sql_div"	"/"	"calc"	0	1	false	false	false	0
230	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
231	"sql_add"	"+"	"calc"	0	1	false	false	false	0
232	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
233	"sql_div"	"/"	"calc"	0	1	false	false	false	0
234	"bit_and"	"and"	"calc"	0	1	false	false	false	0
235	"bit_or"	"or"	"calc"	0	1	false	false	false	0
236	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
237	"bit_not"	"not"	"calc"	0	1	false	false	false	0
238	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
239	"right_shift"	">>"	"calc"	0	1	false	false	false	0
240	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
241	"abs"	"abs"	"calc"	0	1	false	false	false	0
242	"sign"	"sign"	"calc"	0	1	false	false	false	0
243	"scale_up"	"*"	"calc"	0	1	false	false	false	0
244	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
245	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
246	"sql_add"	"+"	"calc"	0	1	false	false	false	0
247	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
248	"sql_div"	"/"	"calc"	0	1	false	false	false	0
249	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
250	"sql_add"	"+"	"calc"	0	1	false	false	false	0
251	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
252	"sql_div"	"/"	"calc"	0	1	false	false	false	0
253	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
254	"sql_add"	"+"	"calc"	0	1	false	false	false	0
255	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
256	"sql_div"	"/"	"calc"	0	1	false	false	false	0
257	"bit_and"	"and"	"calc"	0	1	false	false	false	0
258	"bit_or"	"or"	"calc"	0	1	false	false	false	0
259	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
260	"bit_not"	"not"	"calc"	0	1	false	false	false	0
261	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
262	"right_shift"	">>"	"calc"	0	1	false	false	false	0
263	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
264	"abs"	"abs"	"calc"	0	1	false	false	false	0
265	"sign"	"sign"	"calc"	0	1	false	false	false	0
266	"scale_up"	"*"	"calc"	0	1	false	false	false	0
267	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
268	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
269	"sql_add"	"+"	"calc"	0	1	false	false	false	0
270	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
271	"sql_div"	"/"	"calc"	0	1	false	false	false	0
272	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
273	"sql_add"	"+"	"calc"	0	1	false	false	false	0
274	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
275	"sql_div"	"/"	"calc"	0	1	false	false	false	0
276	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
277	"sql_add"	"+"	"calc"	0	1	false	false	false	0
278	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
279	"sql_div"	"/"	"calc"	0	1	false	false	false	0
280	"bit_and"	"and"	"calc"	0	1	false	false	false	0
281	"bit_or"	"or"	"calc"	0	1	false	false	false	0
282	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
283	"bit_not"	"not"	"calc"	0	1	false	false	false	0
284	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
285	"right_shift"	">>"	"calc"	0	1	false	false	false	0
286	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
287	"abs"	"abs"	"calc"	0	1	false	false	false	0
288	"sign"	"sign"	"calc"	0	1	false	false	false	0
289	"scale_up"	"*"	"calc"	0	1	false	false	false	0
290	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
291	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
292	"sql_add"	"+"	"calc"	0	1	false	false	false	0
293	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
294	"sql_div"	"/"	"calc"	0	1	false	false	false	0
295	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
296	"sql_add"	"+"	"calc"	0	1	false	false	false	0
297	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
298	"sql_div"	"/"	"calc"	0	1	false	false	false	0
299	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
300	"sql_add"	"+"	"calc"	0	1	false	false	false	0
301	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
302	"sql_div"	"/"	"calc"	0	1	false	false	false	0
303	"bit_and"	"and"	"calc"	0	1	false	false	false	0
304	"bit_or"	"or"	"calc"	0	1	false	false	false	0
305	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
306	"bit_not"	"not"	"calc"	0	1	false	false	false	0
307	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
308	"right_shift"	">>"	"calc"	0	1	false	false	false	0
309	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
310	"abs"	"abs"	"calc"	0	1	false	false	false	0
311	"sign"	"sign"	"calc"	0	1	false	false	false	0
312	"scale_up"	"*"	"calc"	0	1	false	false	false	0
313	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
314	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
315	"sql_add"	"+"	"calc"	0	1	false	false	false	0
316	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
317	"sql_div"	"/"	"calc"	0	1	false	false	false	0
318	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
319	"sql_add"	"+"	"calc"	0	1	false	false	false	0
320	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
321	"sql_div"	"/"	"calc"	0	1	false	false	false	0
322	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
323	"sql_add"	"+"	"calc"	0	1	false	false	false	0
324	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
325	"sql_div"	"/"	"calc"	0	1	false	false	false	0
326	"bit_and"	"and"	"calc"	0	1	false	false	false	0
327	"bit_or"	"or"	"calc"	0	1	false	false	false	0
328	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
329	"bit_not"	"not"	"calc"	0	1	false	false	false	0
330	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
331	"right_shift"	">>"	"calc"	0	1	false	false	false	0
332	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
333	"abs"	"abs"	"calc"	0	1	false	false	false	0
334	"sign"	"sign"	"calc"	0	1	false	false	false	0
335	"scale_up"	"*"	"calc"	0	1	false	false	false	0
336	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
337	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
338	"sql_add"	"+"	"calc"	0	1	false	false	false	0
339	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
340	"sql_div"	"/"	"calc"	0	1	false	false	false	0
341	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
342	"sql_add"	"+"	"calc"	0	1	false	false	false	0
343	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
344	"sql_div"	"/"	"calc"	0	1	false	false	false	0
345	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
346	"sql_add"	"+"	"calc"	0	1	false	false	false	0
347	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
348	"sql_div"	"/"	"calc"	0	1	false	false	false	0
349	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
350	"abs"	"abs"	"calc"	0	1	false	false	false	0
351	"sign"	"sign"	"calc"	0	1	false	false	false	0
352	"scale_up"	"*"	"calc"	0	1	false	false	false	0
353	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
354	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
355	"sql_add"	"+"	"calc"	0	1	false	false	false	0
356	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
357	"sql_div"	"/"	"calc"	0	1	false	false	false	0
358	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
359	"sql_add"	"+"	"calc"	0	1	false	false	false	0
360	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
361	"sql_div"	"/"	"calc"	0	1	false	false	false	0
362	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
363	"sql_add"	"+"	"calc"	0	1	false	false	false	0
364	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
365	"sql_div"	"/"	"calc"	0	1	false	false	false	0
366	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
367	"abs"	"abs"	"calc"	0	1	false	false	false	0
368	"sign"	"sign"	"calc"	0	1	false	false	false	0
369	"scale_up"	"*"	"calc"	0	1	false	false	false	0
370	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
371	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
372	"sql_add"	"+"	"calc"	0	1	false	false	false	0
373	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
374	"sql_div"	"/"	"calc"	0	1	false	false	false	0
375	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
376	"sql_add"	"+"	"calc"	0	1	false	false	false	0
377	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
378	"sql_div"	"/"	"calc"	0	1	false	false	false	0
379	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
380	"sql_add"	"+"	"calc"	0	1	false	false	false	0
381	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
382	"sql_div"	"/"	"calc"	0	1	false	false	false	0
383	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
384	"abs"	"abs"	"calc"	0	1	false	false	false	0
385	"sign"	"sign"	"calc"	0	1	false	false	false	0
386	"scale_up"	"*"	"calc"	0	1	false	false	false	0
387	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
388	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
389	"sql_add"	"+"	"calc"	0	1	false	false	false	0
390	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
391	"sql_div"	"/"	"calc"	0	1	false	false	false	0
392	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
393	"abs"	"abs"	"calc"	0	1	false	false	false	0
394	"sign"	"sign"	"calc"	0	1	false	false	false	0
395	"scale_up"	"*"	"calc"	0	1	false	false	false	0
396	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
397	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
398	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
399	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
404	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
405	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
408	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
412	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
414	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
415	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
416	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
418	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
419	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
420	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
421	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
422	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
423	"round"	"round"	"sql"	0	1	false	false	false	0
424	"round"	"round"	"sql"	0	1	false	false	false	0
425	"round"	"round"	"sql"	0	1	false	false	false	0
426	"round"	"round"	"sql"	0	1	false	false	false	0
427	"round"	"round"	"sql"	0	1	false	false	false	0
428	"round"	"round"	"sql"	0	1	false	false	false	0
429	"scale_up"	"*"	"calc"	0	1	false	false	false	0
430	"scale_up"	"*"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_up"	"*"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_up"	"*"	"calc"	0	1	false	false	false	0
438	"scale_up"	"*"	"calc"	0	1	false	false	false	0
439	"scale_up"	"*"	"calc"	0	1	false	false	false	0
440	"scale_up"	"*"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_up"	"*"	"calc"	0	1	false	false	false	0
443	"scale_up"	"*"	"calc"	0	1	false	false	false	0
444	"scale_up"	"*"	"calc"	0	1	false	false	false	0
445	"scale_up"	"*"	"calc"	0	1	false	false	false	0
446	"scale_up"	"*"	"calc"	0	1	false	false	false	0
447	"scale_up"	"*"	"calc"	0	1	false	false	false	0
448	"scale_up"	"*"	"calc"	0	1	false	false	false	0
449	"scale_up"	"*"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_up"	"*"	"calc"	0	1	false	false	false	0
455	"scale_up"	"*"	"calc"	0	1	false	false	false	0
456	"scale_up"	"*"	"calc"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"power"	"pow"	"mmath"	0	1	false	false	false	0
830	"floor"	"floor"	"mmath"	0	1	false	false	false	0
831	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
832	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
833	"sin"	"sin"	"mmath"	0	1	false	false	false	0
834	"cos"	"cos"	"mmath"	0	1	false	false	false	0
835	"tan"	"tan"	"mmath"	0	1	false	false	false	0
836	"asin"	"asin"	"mmath"	0	1	false	false	false	0
837	"acos"	"acos"	"mmath"	0	1	false	false	false	0
838	"atan"	"atan"	"mmath"	0	1	false	false	false	0
839	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
840	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
841	"cot"	"cot"	"mmath"	0	1	false	false	false	0
842	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
843	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
844	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
845	"exp"	"exp"	"mmath"	0	1	false	false	false	0
846	"log"	"log"	"mmath"	0	1	false	false	false	0
847	"log10"	"log10"	"mmath"	0	1	false	false	false	0
848	"power"	"pow"	"mmath"	0	1	false	false	false	0
849	"floor"	"floor"	"mmath"	0	1	false	false	false	0
850	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
851	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
852	"sin"	"sin"	"mmath"	0	1	false	false	false	0
853	"cos"	"cos"	"mmath"	0	1	false	false	false	0
854	"tan"	"tan"	"mmath"	0	1	false	false	false	0
855	"asin"	"asin"	"mmath"	0	1	false	false	false	0
856	"acos"	"acos"	"mmath"	0	1	false	false	false	0
857	"atan"	"atan"	"mmath"	0	1	false	false	false	0
858	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
859	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
860	"cot"	"cot"	"mmath"	0	1	false	false	false	0
861	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
862	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
863	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
864	"exp"	"exp"	"mmath"	0	1	false	false	false	0
865	"log"	"log"	"mmath"	0	1	false	false	false	0
866	"log10"	"log10"	"mmath"	0	1	false	false	false	0
867	"pi"	"pi"	"mmath"	0	1	false	false	false	0
868	"rand"	"rand"	"mmath"	0	1	true	false	false	0
869	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
870	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
871	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
872	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
873	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
874	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
875	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
876	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
877	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
878	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
879	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
880	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
881	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
882	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
883	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
884	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
885	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
886	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
887	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
888	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
889	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
890	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
891	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
892	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
893	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
894	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
895	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
896	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
897	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
898	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
899	"year"	"year"	"mtime"	0	1	false	false	false	0
900	"month"	"month"	"mtime"	0	1	false	false	false	0
901	"day"	"day"	"mtime"	0	1	false	false	false	0
902	"hour"	"hours"	"mtime"	0	1	false	false	false	0
903	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
904	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
905	"hour"	"hours"	"mtime"	0	1	false	false	false	0
906	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
907	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
908	"year"	"year"	"mtime"	0	1	false	false	false	0
909	"month"	"month"	"mtime"	0	1	false	false	false	0
910	"day"	"day"	"mtime"	0	1	false	false	false	0
911	"hour"	"hours"	"mtime"	0	1	false	false	false	0
912	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
913	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
914	"year"	"year"	"mtime"	0	1	false	false	false	0
915	"month"	"month"	"mtime"	0	1	false	false	false	0
916	"day"	"day"	"mtime"	0	1	false	false	false	0
917	"hour"	"hours"	"mtime"	0	1	false	false	false	0
918	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
919	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
920	"year"	"year"	"mtime"	0	1	false	false	false	0
921	"month"	"month"	"mtime"	0	1	false	false	false	0
922	"day"	"day"	"mtime"	0	1	false	false	false	0
923	"hour"	"hours"	"mtime"	0	1	false	false	false	0
924	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
925	"second"	"seconds"	"mtime"	0	1	false	false	false	0
926	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
927	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
928	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
929	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
930	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
931	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
932	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
933	"restart"	"restart"	"sql"	0	1	false	false	false	0
934	"index"	"index"	"calc"	0	1	false	false	false	0
935	"index"	"index"	"calc"	0	1	false	false	false	0
936	"index"	"index"	"calc"	0	1	false	false	false	0
937	"strings"	"strings"	"calc"	0	1	false	false	false	0
938	"locate"	"locate"	"str"	0	1	false	false	false	0
939	"locate"	"locate"	"str"	0	1	false	false	false	0
940	"substring"	"substring"	"str"	0	1	false	false	false	0
941	"substring"	"substring"	"str"	0	1	false	false	false	0
942	"like"	"like"	"algebra"	0	1	false	false	false	0
943	"like"	"like"	"algebra"	0	1	false	false	false	0
944	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
945	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
946	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
947	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
948	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
949	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
950	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
951	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
952	"concat"	"+"	"calc"	0	1	false	false	false	0
953	"ascii"	"ascii"	"str"	0	1	false	false	false	0
954	"code"	"unicode"	"str"	0	1	false	false	false	0
955	"length"	"stringlength"	"str"	0	1	false	false	false	0
956	"right"	"stringright"	"str"	0	1	false	false	false	0
957	"left"	"stringleft"	"str"	0	1	false	false	false	0
958	"upper"	"toUpper"	"str"	0	1	false	false	false	0
959	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
960	"lower"	"toLower"	"str"	0	1	false	false	false	0
961	"lcase"	"toLower"	"str"	0	1	false	false	false	0
962	"trim"	"trim"	"str"	0	1	false	false	false	0
963	"trim"	"trim"	"str"	0	1	false	false	false	0
964	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
965	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
966	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
967	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
968	"lpad"	"lpad"	"str"	0	1	false	false	false	0
969	"lpad"	"lpad"	"str"	0	1	false	false	false	0
970	"rpad"	"rpad"	"str"	0	1	false	false	false	0
971	"rpad"	"rpad"	"str"	0	1	false	false	false	0
972	"insert"	"insert"	"str"	0	1	false	false	false	0
973	"replace"	"replace"	"str"	0	1	false	false	false	0
974	"repeat"	"repeat"	"str"	0	1	false	false	false	0
975	"space"	"space"	"str"	0	1	false	false	false	0
976	"char_length"	"length"	"str"	0	1	false	false	false	0
977	"character_length"	"length"	"str"	0	1	false	false	false	0
978	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
979	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
980	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
981	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
982	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
983	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
984	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
985	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
986	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
987	"index"	"index"	"calc"	0	1	false	false	false	0
988	"index"	"index"	"calc"	0	1	false	false	false	0
989	"index"	"index"	"calc"	0	1	false	false	false	0
990	"strings"	"strings"	"calc"	0	1	false	false	false	0
991	"locate"	"locate"	"str"	0	1	false	false	false	0
992	"locate"	"locate"	"str"	0	1	false	false	false	0
993	"substring"	"substring"	"str"	0	1	false	false	false	0
994	"substring"	"substring"	"str"	0	1	false	false	false	0
995	"like"	"like"	"algebra"	0	1	false	false	false	0
996	"like"	"like"	"algebra"	0	1	false	false	false	0
997	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
998	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
999	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1000	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1001	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1002	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1003	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1004	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1005	"concat"	"+"	"calc"	0	1	false	false	false	0
1006	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1007	"code"	"unicode"	"str"	0	1	false	false	false	0
1008	"length"	"stringlength"	"str"	0	1	false	false	false	0
1009	"right"	"stringright"	"str"	0	1	false	false	false	0
1010	"left"	"stringleft"	"str"	0	1	false	false	false	0
1011	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1012	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1013	"lower"	"toLower"	"str"	0	1	false	false	false	0
1014	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1015	"trim"	"trim"	"str"	0	1	false	false	false	0
1016	"trim"	"trim"	"str"	0	1	false	false	false	0
1017	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1018	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1019	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1020	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1021	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1022	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1023	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1024	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1025	"insert"	"insert"	"str"	0	1	false	false	false	0
1026	"replace"	"replace"	"str"	0	1	false	false	false	0
1027	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1028	"space"	"space"	"str"	0	1	false	false	false	0
1029	"char_length"	"length"	"str"	0	1	false	false	false	0
1030	"character_length"	"length"	"str"	0	1	false	false	false	0
1031	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1032	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1033	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1034	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1035	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1036	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1037	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1038	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1039	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1040	"index"	"index"	"calc"	0	1	false	false	false	0
1041	"index"	"index"	"calc"	0	1	false	false	false	0
1042	"index"	"index"	"calc"	0	1	false	false	false	0
1043	"strings"	"strings"	"calc"	0	1	false	false	false	0
1044	"locate"	"locate"	"str"	0	1	false	false	false	0
1045	"locate"	"locate"	"str"	0	1	false	false	false	0
1046	"substring"	"substring"	"str"	0	1	false	false	false	0
1047	"substring"	"substring"	"str"	0	1	false	false	false	0
1048	"like"	"like"	"algebra"	0	1	false	false	false	0
1049	"like"	"like"	"algebra"	0	1	false	false	false	0
1050	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1051	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1052	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1053	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1054	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1055	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1056	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1057	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1058	"concat"	"+"	"calc"	0	1	false	false	false	0
1059	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1060	"code"	"unicode"	"str"	0	1	false	false	false	0
1061	"length"	"stringlength"	"str"	0	1	false	false	false	0
1062	"right"	"stringright"	"str"	0	1	false	false	false	0
1063	"left"	"stringleft"	"str"	0	1	false	false	false	0
1064	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1065	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1066	"lower"	"toLower"	"str"	0	1	false	false	false	0
1067	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1068	"trim"	"trim"	"str"	0	1	false	false	false	0
1069	"trim"	"trim"	"str"	0	1	false	false	false	0
1070	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1071	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1072	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1073	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1074	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1075	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1076	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1077	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1078	"insert"	"insert"	"str"	0	1	false	false	false	0
1079	"replace"	"replace"	"str"	0	1	false	false	false	0
1080	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1081	"space"	"space"	"str"	0	1	false	false	false	0
1082	"char_length"	"length"	"str"	0	1	false	false	false	0
1083	"character_length"	"length"	"str"	0	1	false	false	false	0
1084	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1085	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1086	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1087	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1088	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1089	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1090	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1091	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1092	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1093	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1094	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
27	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
39	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
40	"exist"	"exist"	"aggr"	0	3	false	false	false	0
41	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
46	"min"	"min"	"aggr"	0	3	false	false	false	0
47	"max"	"max"	"aggr"	0	3	false	false	false	0
51	"sum"	"sum"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"prod"	"prod"	"aggr"	0	3	false	false	false	0
61	"prod"	"prod"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
68	"prod"	"prod"	"aggr"	0	3	false	false	false	0
81	"sum"	"sum"	"aggr"	0	3	false	false	false	0
82	"prod"	"prod"	"aggr"	0	3	false	false	false	0
83	"sum"	"sum"	"aggr"	0	3	false	false	false	0
84	"prod"	"prod"	"aggr"	0	3	false	false	false	0
85	"avg"	"avg"	"aggr"	0	3	false	false	false	0
86	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
87	"count"	"count"	"aggr"	0	3	false	false	false	0
5216	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5219	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5225	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5245	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5250	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5255	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5259	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5263	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double) \nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5267	"radians"	"create function radians(d double) \nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5271	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5274	"getanchor"	"create function getanchor( theurl url ) returns string \n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5278	"getbasename"	"create function getbasename(theurl url) returns string       \n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5282	"getcontent"	"create function getcontent(theurl url)   returns string       \n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5286	"getcontext"	"create function getcontext(theurl url)   returns string       \n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5290	"getdomain"	"create function getdomain(theurl url) returns string       \n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5294	"getextension"	"create function getextension(theurl url) returns string       \n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5298	"getfile"	"create function getfile(theurl url) returns string       \n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5302	"gethost"	"create function gethost(theurl url)   returns string       \n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5306	"getport"	"create function getport(theurl url) returns string       \n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5310	"getprotocol"	"create function getprotocol(theurl url) returns string       \n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5314	"getquery"	"create function getquery(theurl url) returns string       \n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5318	"getuser"	"create function getuser(theurl url) returns string       \n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5322	"getroboturl"	"create function getroboturl(theurl url) returns string       \n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5326	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5330	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string) \n\treturns url       \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5337	"newurl"	"create function newurl(protocol string, hostname string, file string) \n\treturns url \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5343	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5348	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5353	"convert"	"create function ""convert""(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5359	"broadcast"	"create function ""broadcast"" (p inet) returns inet \n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5363	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5367	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5371	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5376	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5380	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5384	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5388	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5392	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5396	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5401	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5406	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5411	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5416	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions. \n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t\t-- size of MAL plan\n\toptimize bigint \t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5426	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the \n-- server during execution phase. \n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,  \t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5476	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5478	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5480	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5483	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5485	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog() \n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20), \t-- wallclock, no mtime in kernel\n\t\tpc varchar(50), \t-- module.function[nr]\n\t\tthread int, \t\t-- thread identifier\n\t\tticks bigint, \t\t-- time in microseconds\n\t\trrsmb bigint, \t\t-- resident memory in MB\n\t\tvmmb bigint, \t\t-- virtual size in MB\n\t\treads bigint, \t\t-- number of blocks read\n\t\twrites bigint, \t\t-- number of blocks written\n\t\tminflt bigint, \t\t-- minor page faults\n\t\tmajflt bigint, \t\t-- major page faults\n\t\tnvcsw bigint, \t\t-- non-volantary conext switch\n\t\tstmt string\t\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5515	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5519	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5522	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function ""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5526	"epoch"	"create function ""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5530	"epoch"	"create function ""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5534	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5538	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5542	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5546	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5551	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5556	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5561	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5566	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5571	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5576	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5581	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5586	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5591	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i \ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5596	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5601	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5606	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5611	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5616	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5621	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5626	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5631	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string) \n\treturns string \n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
5635	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5651	"shutdown"	"create procedure sys.shutdown(delay tinyint) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5654	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5658	"settimeout"	"-- control the query and session time out \ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5661	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5665	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
5668	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
5675	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5680	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
5686	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5692	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5697	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5702	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5706	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5710	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats () \n\treturns table (rewrite string, count int) \n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5714	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache() \n\treturns table (query string, count int) \n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5718	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string) \n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
5721	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers () \n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5731	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
5739	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp () \n\treturns table (id int, name string, htype string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int, \n\t\tlocation string, heat int, dirty string, \n\t\tstatus string, kind string) \n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
5753	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
5757	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
5777	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5780	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5783	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5786	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5789	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5792	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5795	"rejects"	"-- The contents of this file are subject to the MonetDB Public License\n-- Version 1.1 (the ""License""); you may not use this file except in\n-- compliance with the License. You may obtain a copy of the License at\n-- http://www.monetdb.org/Legal/MonetDBLicense\n--\n-- Software distributed under the License is distributed on an ""AS IS""\n-- basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n-- License for the specific language governing rights and limitations\n-- under the License.\n--\n-- The Original Code is the MonetDB Database System.\n--\n-- The Initial Developer of the Original Code is CWI.\n-- Portions created by CWI are Copyright (C) 1997-July 2008 CWI.\n-- Copyright August 2008-2014 MonetDB B.V.\n-- All Rights Reserved.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
5807	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
5809	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5813	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5817	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5821	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5825	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5829	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5833	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5837	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5841	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5845	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5849	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5853	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5857	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5861	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5865	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5869	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5873	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5877	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5881	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5885	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5889	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5893	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5897	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5901	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5905	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5909	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5913	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5917	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5921	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5925	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5929	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5933	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5937	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5941	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5945	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5949	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5953	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5957	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5961	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5965	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5969	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5973	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5977	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5981	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5985	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5989	"median"	"create aggregate median(val decimal) returns decimal\n \texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5993	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5997	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6001	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6005	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6009	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6013	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6018	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6023	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6028	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6033	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6038	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6043	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6048	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6053	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6058	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6063	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6068	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6073	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6078	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6083	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6088	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6093	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6098	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6116	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6120	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6125	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6130	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6135	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6140	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6145	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6150	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6155	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6160	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6165	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6170	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6174	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6178	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6182	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6187	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6191	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6195	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6199	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6203	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6207	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6211	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6215	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6220	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6225	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6230	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6235	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6240	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6245	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6250	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6255	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6261	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6265	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6269	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6274	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6279	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6283	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6288	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6293	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6298	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6305	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6302
6310	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6302
6315	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6302
6320	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6302
6325	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6302
6330	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6302
6334	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6302
6338	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6302
6342	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6302
6346	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6302
6350	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6302
6354	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6302
6358	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6302
6362	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6302
6366	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6302
6370	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6302
6374	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6302
6378	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6302
6382	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6302
6386	"output"	"-- The remainder awaits the implementation \n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6302
6390	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6302
6394	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6302
6398	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6403	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6406	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6410	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6414	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6419	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6422	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6425	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6428	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6464	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6467	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6471	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (""schema"" string, ""table"" string, ""column"" string, ""type"" string, ""mode"" string, location string, ""count"" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6515	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6517	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int'\t then return 4 * i;\n\twhen nme = 'bigint'\t then return 8 * i;\n\twhen nme = 'hugeint'\t then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
6523	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6529	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6534	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\t\n\t\tor nme = 'bigint'\t\n\t\tor nme = 'hugeint'\t\n\t\tor nme = 'decimal'\t\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6539	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count""\tbigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6586	"analyze"	"create procedure analyze()\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6588	"analyze"	"create procedure analyze(tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6591	"analyze"	"create procedure analyze(sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6595	"analyze"	"create procedure analyze(sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6600	"analyze"	"-- control the sample size\ncreate procedure analyze(""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6603	"analyze"	"create procedure analyze(tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6607	"analyze"	"create procedure analyze(sch string, tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6612	"analyze"	"create procedure analyze(sch string, tbl string, col string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6618	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6622	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6627	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6632	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6638	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6636
6643	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6636
6648	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6636
6652	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6636
6656	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6636
6661	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6636
6665	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6636
6669	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6636
6673	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6636
6676	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6636
6746	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6751	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6757	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6762	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6768	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6773	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6779	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6784	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6790	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6796	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6802	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6808	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 7 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6686	6687	0	"files_pkey_file_id"
6697	6700	0	"sq_pkey_sn_file_id"
6699	6700	1	"sq_fkey_file_id"
6716	6719	0	"rg_pkey_id_file_id"
6718	6719	1	"rg_fkey_file_id"
6728	6731	0	"pg_pkey_id_file_id"
6730	6731	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 7 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6685	6687	0	"files_pkey_file_id"	-1	-1
6696	6700	0	"sq_pkey_sn_file_id"	-1	-1
6698	6700	2	"sq_fkey_file_id"	6685	514
6715	6719	0	"rg_pkey_id_file_id"	-1	-1
6717	6719	2	"rg_fkey_file_id"	6685	514
6727	6731	0	"pg_pkey_id_file_id"	-1	-1
6729	6731	2	"pg_fkey_file_id"	6685	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 20 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6686	"file_id"	0
6685	"file_id"	0
6697	"sn"	0
6697	"file_id"	1
6699	"file_id"	0
6696	"sn"	0
6696	"file_id"	1
6698	"file_id"	0
6716	"id"	0
6716	"file_id"	1
6718	"file_id"	0
6715	"id"	0
6715	"file_id"	1
6717	"file_id"	0
6728	"id"	0
6728	"file_id"	1
6730	"file_id"	0
6727	"id"	0
6727	"file_id"	1
6729	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5195	1	1	0	0
5205	1	1	0	0
5231	1	1	0	0
5234	1	1	0	0
5238	1	1	0	0
6815	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6302	"json"	3	3	true
6636	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1356 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
28
29
30
31
32
33
34
35
36
37
38
42
43
44
45
48
49
50
69
70
71
72
73
74
75
76
77
78
79
80
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
27
39
40
41
46
47
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
81
82
83
84
85
86
87
5216
5219
5225
5245
5250
5255
5259
5263
5267
5271
5274
5278
5282
5286
5290
5294
5298
5302
5306
5310
5314
5318
5322
5326
5330
5337
5343
5348
5353
5359
5363
5367
5371
5376
5380
5384
5388
5392
5396
5401
5406
5411
5416
5426
5476
5478
5480
5483
5485
5515
5519
5522
5526
5530
5534
5538
5542
5546
5551
5556
5561
5566
5571
5576
5581
5586
5591
5596
5601
5606
5611
5616
5621
5626
5631
5635
5651
5654
5658
5661
5665
5668
5675
5680
5686
5692
5697
5702
5706
5710
5714
5718
5721
5731
5739
5753
5757
5777
5780
5783
5786
5789
5792
5795
5807
5809
5813
5817
5821
5825
5829
5833
5837
5841
5845
5849
5853
5857
5861
5865
5869
5873
5877
5881
5885
5889
5893
5897
5901
5905
5909
5913
5917
5921
5925
5929
5933
5937
5941
5945
5949
5953
5957
5961
5965
5969
5973
5977
5981
5985
5989
5993
5997
6001
6005
6009
6013
6018
6023
6028
6033
6038
6043
6048
6053
6058
6063
6068
6073
6078
6083
6088
6093
6098
6116
6120
6125
6130
6135
6140
6145
6150
6155
6160
6165
6170
6174
6178
6182
6187
6191
6195
6199
6203
6207
6211
6215
6220
6225
6230
6235
6240
6245
6250
6255
6261
6265
6269
6274
6279
6283
6288
6293
6298
6305
6310
6315
6320
6325
6330
6334
6338
6342
6346
6350
6354
6358
6362
6366
6370
6374
6378
6382
6386
6390
6394
6398
6403
6406
6410
6414
6419
6422
6425
6428
6464
6467
6471
6515
6517
6523
6529
6534
6539
6586
6588
6591
6595
6600
6603
6607
6612
6618
6622
6627
6632
6638
6643
6648
6652
6656
6661
6665
6669
6673
6676
6746
6751
6757
6762
6768
6773
6779
6784
6790
6796
6802
6808
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 44 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	19	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
5272	"url"	"url"	0	0	0	15	2000
5357	"inet"	"inet"	0	0	0	15	2000
6102	"wkb"	"point"	0	0	0	15	2000
6103	"wkb"	"curve"	0	0	0	15	2000
6104	"wkb"	"linestring"	0	0	0	15	2000
6105	"wkb"	"surface"	0	0	0	15	2000
6106	"wkb"	"polygon"	0	0	0	15	2000
6107	"wkb"	"multipoint"	0	0	0	15	2000
6108	"wkb"	"multicurve"	0	0	0	15	2000
6109	"wkb"	"multilinestring"	0	0	0	15	2000
6110	"wkb"	"multisurface"	0	0	0	15	2000
6111	"wkb"	"multipolygon"	0	0	0	15	2000
6112	"wkb"	"geometry"	0	0	0	15	2000
6113	"wkb"	"geomcollection"	0	0	0	15	2000
6114	"mbr"	"mbr"	0	0	0	15	2000
6303	"json"	"json"	0	0	0	15	2000
6401	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

