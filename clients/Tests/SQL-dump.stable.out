stdout of test 'SQL-dump` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.netcdf_attrs
SYSTEM TABLE  sys.netcdf_dims
SYSTEM TABLE  sys.netcdf_files
SYSTEM TABLE  sys.netcdf_vardim
SYSTEM TABLE  sys.netcdf_vars
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netcdf_attach
SYSTEM FUNCTION  sys.netcdf_importvar
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 /* system table/view */ ELSE (CASE WHEN "commit_action" = 0 THEN "type" /* table/view */ ELSE "type" + 20 /* global temp table */ END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 /* local temp table */ AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string)
external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
create procedure sys.clearrejects()
external name sql.copy_rejects_clear;
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- assume milliseconds when converted to TIMESTAMP
create function sys."epoch"(sec bigint) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int
	external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int
	external name timestamp."epoch";
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
create procedure fitsattach(fname string) external name fits.attach;
create procedure fitsload(tname string) external name fits.load;
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function "left_shift"(i1 inet, i2 inet) returns boolean
	external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet."<<=";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";


create procedure listdir(dirname string) external name fits.listdir;
create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
-- gr_name is "GLOBAL" or "ROOT" for classic NetCDF files
-- used for groups in HDF5 files
-- global attributes have obj_name=""

-- create function netcdfvar (fname varchar(256)) 
--	returns int external name netcdf.test;

create procedure netcdf_attach(fname varchar(256))
    external name netcdf.attach;
create procedure netcdf_importvar(fid integer, varnname varchar(256))
    external name netcdf.importvariable;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create procedure profiler_openstream(host string, port int) external name profiler."openStream";
create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- COPY into reject management

create function sys.rejects()
returns table(
	rowid bigint,
	fldid int,
	"message" string,
	"input" string
)
external name sql.copy_rejects;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function "right_shift"(i1 inet, i2 inet) returns boolean
	external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean
	external name inet.">>=";
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"mode" string,
	location string,
	"count" bigint,
	typewidth int,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	phash boolean,
	imprints bigint,
	sorted boolean
)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time
	external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp
	external name mtime."str_to_timestamp";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
create function time_to_str(d time, format string) returns string
	external name mtime."time_to_str";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string
	external name mtime."timestamp_to_str";
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 361 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5211	"id"	"int"	32	0	5210	NULL	true	0	NULL
5212	"name"	"varchar"	1024	0	5210	NULL	true	1	NULL
5213	"schema_id"	"int"	32	0	5210	NULL	true	2	NULL
5214	"query"	"varchar"	2048	0	5210	NULL	true	3	NULL
5215	"type"	"smallint"	16	0	5210	NULL	true	4	NULL
5216	"system"	"boolean"	1	0	5210	NULL	true	5	NULL
5217	"commit_action"	"smallint"	16	0	5210	NULL	true	6	NULL
5218	"access"	"smallint"	16	0	5210	NULL	true	7	NULL
5219	"temporary"	"smallint"	16	0	5210	NULL	true	8	NULL
5221	"id"	"int"	32	0	5220	NULL	true	0	NULL
5222	"name"	"varchar"	1024	0	5220	NULL	true	1	NULL
5223	"type"	"varchar"	1024	0	5220	NULL	true	2	NULL
5224	"type_digits"	"int"	32	0	5220	NULL	true	3	NULL
5225	"type_scale"	"int"	32	0	5220	NULL	true	4	NULL
5226	"table_id"	"int"	32	0	5220	NULL	true	5	NULL
5227	"default"	"varchar"	2048	0	5220	NULL	true	6	NULL
5228	"null"	"boolean"	1	0	5220	NULL	true	7	NULL
5229	"number"	"int"	32	0	5220	NULL	true	8	NULL
5230	"storage"	"varchar"	2048	0	5220	NULL	true	9	NULL
5237	"name"	"varchar"	1024	0	5236	NULL	true	0	NULL
5238	"fullname"	"varchar"	2048	0	5236	NULL	true	1	NULL
5239	"default_schema"	"int"	9	0	5236	NULL	true	2	NULL
5243	"name"	"varchar"	1024	0	5242	NULL	true	0	NULL
5244	"fullname"	"varchar"	2024	0	5242	NULL	true	1	NULL
5245	"default_schema"	"int"	9	0	5242	NULL	true	2	NULL
5247	"login_id"	"int"	32	0	5246	NULL	true	0	NULL
5248	"role_id"	"int"	32	0	5246	NULL	true	1	NULL
5250	"id"	"int"	32	0	5249	NULL	true	0	NULL
5251	"name"	"varchar"	1024	0	5249	NULL	true	1	NULL
5252	"grantor"	"int"	32	0	5249	NULL	true	2	NULL
5254	"obj_id"	"int"	32	0	5253	NULL	true	0	NULL
5255	"auth_id"	"int"	32	0	5253	NULL	true	1	NULL
5256	"privileges"	"int"	32	0	5253	NULL	true	2	NULL
5257	"grantor"	"int"	32	0	5253	NULL	true	3	NULL
5258	"grantable"	"int"	32	0	5253	NULL	true	4	NULL
5467	"id"	"oid"	63	0	5475	NULL	true	0	NULL
5468	"owner"	"clob"	0	0	5475	NULL	true	1	NULL
5469	"defined"	"timestamp"	7	0	5475	NULL	true	2	NULL
5470	"query"	"clob"	0	0	5475	NULL	true	3	NULL
5471	"pipe"	"clob"	0	0	5475	NULL	true	4	NULL
5472	"plan"	"clob"	0	0	5475	NULL	true	5	NULL
5473	"mal"	"int"	32	0	5475	NULL	true	6	NULL
5474	"optimize"	"bigint"	64	0	5475	NULL	true	7	NULL
5477	"id"	"oid"	63	0	5486	NULL	true	0	NULL
5478	"start"	"timestamp"	7	0	5486	NULL	true	1	NULL
5479	"stop"	"timestamp"	7	0	5486	NULL	true	2	NULL
5480	"arguments"	"clob"	0	0	5486	NULL	true	3	NULL
5481	"tuples"	"wrd"	64	0	5486	NULL	true	4	NULL
5482	"run"	"bigint"	64	0	5486	NULL	true	5	NULL
5483	"ship"	"bigint"	64	0	5486	NULL	true	6	NULL
5484	"cpu"	"int"	32	0	5486	NULL	true	7	NULL
5485	"io"	"int"	32	0	5486	NULL	true	8	NULL
5488	"id"	"oid"	63	0	5504	NULL	true	0	NULL
5489	"owner"	"clob"	0	0	5504	NULL	true	1	NULL
5490	"defined"	"timestamp"	7	0	5504	NULL	true	2	NULL
5491	"query"	"clob"	0	0	5504	NULL	true	3	NULL
5492	"pipe"	"clob"	0	0	5504	NULL	true	4	NULL
5493	"plan"	"clob"	0	0	5504	NULL	true	5	NULL
5494	"mal"	"int"	32	0	5504	NULL	true	6	NULL
5495	"optimize"	"bigint"	64	0	5504	NULL	true	7	NULL
5496	"start"	"timestamp"	7	0	5504	NULL	true	8	NULL
5497	"stop"	"timestamp"	7	0	5504	NULL	true	9	NULL
5498	"arguments"	"clob"	0	0	5504	NULL	true	10	NULL
5499	"tuples"	"wrd"	64	0	5504	NULL	true	11	NULL
5500	"run"	"bigint"	64	0	5504	NULL	true	12	NULL
5501	"ship"	"bigint"	64	0	5504	NULL	true	13	NULL
5502	"cpu"	"int"	32	0	5504	NULL	true	14	NULL
5503	"io"	"int"	32	0	5504	NULL	true	15	NULL
5530	"event"	"int"	32	0	5543	NULL	true	0	NULL
5531	"clk"	"varchar"	20	0	5543	NULL	true	1	NULL
5532	"pc"	"varchar"	50	0	5543	NULL	true	2	NULL
5533	"thread"	"int"	32	0	5543	NULL	true	3	NULL
5534	"ticks"	"bigint"	64	0	5543	NULL	true	4	NULL
5535	"rrsmb"	"bigint"	64	0	5543	NULL	true	5	NULL
5536	"vmmb"	"bigint"	64	0	5543	NULL	true	6	NULL
5537	"reads"	"bigint"	64	0	5543	NULL	true	7	NULL
5538	"writes"	"bigint"	64	0	5543	NULL	true	8	NULL
5539	"minflt"	"bigint"	64	0	5543	NULL	true	9	NULL
5540	"majflt"	"bigint"	64	0	5543	NULL	true	10	NULL
5541	"nvcsw"	"bigint"	64	0	5543	NULL	true	11	NULL
5542	"stmt"	"clob"	0	0	5543	NULL	true	12	NULL
5677	"user"	"clob"	0	0	5683	NULL	true	0	NULL
5678	"login"	"timestamp"	7	0	5683	NULL	true	1	NULL
5679	"sessiontimeout"	"bigint"	64	0	5683	NULL	true	2	NULL
5680	"lastcommand"	"timestamp"	7	0	5683	NULL	true	3	NULL
5681	"querytimeout"	"bigint"	64	0	5683	NULL	true	4	NULL
5682	"active"	"boolean"	1	0	5683	NULL	true	5	NULL
5760	"name"	"clob"	0	0	5763	NULL	true	0	NULL
5761	"def"	"clob"	0	0	5763	NULL	true	1	NULL
5762	"status"	"clob"	0	0	5763	NULL	true	2	NULL
5769	"name"	"clob"	0	0	5771	NULL	true	0	NULL
5770	"value"	"clob"	0	0	5771	NULL	true	1	NULL
5801	"qtag"	"bigint"	64	0	5809	NULL	true	0	NULL
5802	"user"	"clob"	0	0	5809	NULL	true	1	NULL
5803	"started"	"timestamp"	7	0	5809	NULL	true	2	NULL
5804	"estimate"	"timestamp"	7	0	5809	NULL	true	3	NULL
5805	"progress"	"int"	32	0	5809	NULL	true	4	NULL
5806	"status"	"clob"	0	0	5809	NULL	true	5	NULL
5807	"tag"	"oid"	63	0	5809	NULL	true	6	NULL
5808	"query"	"clob"	0	0	5809	NULL	true	7	NULL
5835	"rowid"	"bigint"	64	0	5839	NULL	true	0	NULL
5836	"fldid"	"int"	32	0	5839	NULL	true	1	NULL
5837	"message"	"clob"	0	0	5839	NULL	true	2	NULL
5838	"input"	"clob"	0	0	5839	NULL	true	3	NULL
6459	"keyword"	"varchar"	40	0	6462	NULL	false	0	NULL
6464	"table_type_id"	"smallint"	16	0	6470	NULL	false	0	NULL
6467	"table_type_name"	"varchar"	25	0	6470	NULL	false	1	NULL
6472	"dependency_type_id"	"smallint"	16	0	6478	NULL	false	0	NULL
6475	"dependency_type_name"	"varchar"	15	0	6478	NULL	false	1	NULL
6493	"file_id"	"int"	32	0	6495	NULL	true	0	NULL
6494	"location"	"char"	256	0	6495	NULL	true	1	NULL
6497	"dim_id"	"int"	32	0	6501	NULL	true	0	NULL
6498	"file_id"	"int"	32	0	6501	NULL	true	1	NULL
6499	"name"	"varchar"	64	0	6501	NULL	true	2	NULL
6500	"length"	"int"	32	0	6501	NULL	true	3	NULL
6503	"var_id"	"int"	32	0	6509	NULL	true	0	NULL
6504	"file_id"	"int"	32	0	6509	NULL	true	1	NULL
6505	"name"	"varchar"	64	0	6509	NULL	true	2	NULL
6506	"vartype"	"varchar"	64	0	6509	NULL	true	3	NULL
6507	"ndim"	"int"	32	0	6509	NULL	true	4	NULL
6508	"coord_dim_id"	"int"	32	0	6509	NULL	true	5	NULL
6511	"var_id"	"int"	32	0	6515	NULL	true	0	NULL
6512	"dim_id"	"int"	32	0	6515	NULL	true	1	NULL
6513	"file_id"	"int"	32	0	6515	NULL	true	2	NULL
6514	"dimpos"	"int"	32	0	6515	NULL	true	3	NULL
6517	"obj_name"	"varchar"	256	0	6523	NULL	true	0	NULL
6518	"att_name"	"varchar"	256	0	6523	NULL	true	1	NULL
6519	"att_type"	"varchar"	64	0	6523	NULL	true	2	NULL
6520	"value"	"clob"	0	0	6523	NULL	true	3	NULL
6521	"file_id"	"int"	32	0	6523	NULL	true	4	NULL
6522	"gr_name"	"varchar"	256	0	6523	NULL	true	5	NULL
6548	"schema"	"clob"	0	0	6562	NULL	true	0	NULL
6549	"table"	"clob"	0	0	6562	NULL	true	1	NULL
6550	"column"	"clob"	0	0	6562	NULL	true	2	NULL
6551	"type"	"clob"	0	0	6562	NULL	true	3	NULL
6552	"mode"	"clob"	0	0	6562	NULL	true	4	NULL
6553	"location"	"clob"	0	0	6562	NULL	true	5	NULL
6554	"count"	"bigint"	64	0	6562	NULL	true	6	NULL
6555	"typewidth"	"int"	32	0	6562	NULL	true	7	NULL
6556	"columnsize"	"bigint"	64	0	6562	NULL	true	8	NULL
6557	"heapsize"	"bigint"	64	0	6562	NULL	true	9	NULL
6558	"hashes"	"bigint"	64	0	6562	NULL	true	10	NULL
6559	"phash"	"boolean"	1	0	6562	NULL	true	11	NULL
6560	"imprints"	"bigint"	64	0	6562	NULL	true	12	NULL
6561	"sorted"	"boolean"	1	0	6562	NULL	true	13	NULL
6564	"schema"	"clob"	0	0	6574	NULL	true	0	NULL
6565	"table"	"clob"	0	0	6574	NULL	true	1	NULL
6566	"column"	"clob"	0	0	6574	NULL	true	2	NULL
6567	"type"	"clob"	0	0	6574	NULL	true	3	NULL
6568	"typewidth"	"int"	32	0	6574	NULL	true	4	NULL
6569	"count"	"bigint"	64	0	6574	NULL	true	5	NULL
6570	"distinct"	"bigint"	64	0	6574	NULL	true	6	NULL
6571	"atomwidth"	"int"	32	0	6574	NULL	true	7	NULL
6572	"reference"	"boolean"	1	0	6574	NULL	true	8	NULL
6573	"sorted"	"boolean"	1	0	6574	NULL	true	9	NULL
6612	"schema"	"clob"	0	0	6622	NULL	true	0	NULL
6613	"table"	"clob"	0	0	6622	NULL	true	1	NULL
6614	"column"	"clob"	0	0	6622	NULL	true	2	NULL
6615	"type"	"clob"	0	0	6622	NULL	true	3	NULL
6616	"count"	"bigint"	64	0	6622	NULL	true	4	NULL
6617	"columnsize"	"bigint"	64	0	6622	NULL	true	5	NULL
6618	"heapsize"	"bigint"	64	0	6622	NULL	true	6	NULL
6619	"hashes"	"bigint"	64	0	6622	NULL	true	7	NULL
6620	"imprints"	"bigint"	64	0	6622	NULL	true	8	NULL
6621	"sorted"	"boolean"	1	0	6622	NULL	true	9	NULL
6624	"schema"	"clob"	0	0	6632	NULL	true	0	NULL
6625	"table"	"clob"	0	0	6632	NULL	true	1	NULL
6626	"count"	"bigint"	64	0	6632	NULL	true	2	NULL
6627	"columnsize"	"bigint"	64	0	6632	NULL	true	3	NULL
6628	"heapsize"	"bigint"	64	0	6632	NULL	true	4	NULL
6629	"hashes"	"bigint"	64	0	6632	NULL	true	5	NULL
6630	"imprints"	"bigint"	64	0	6632	NULL	true	6	NULL
6631	"auxiliary"	"bigint"	64	0	6632	NULL	true	7	NULL
6634	"column_id"	"int"	32	0	6645	NULL	true	0	NULL
6635	"type"	"clob"	0	0	6645	NULL	true	1	NULL
6636	"width"	"int"	32	0	6645	NULL	true	2	NULL
6637	"stamp"	"timestamp"	7	0	6645	NULL	true	3	NULL
6638	"sample"	"bigint"	64	0	6645	NULL	true	4	NULL
6639	"count"	"bigint"	64	0	6645	NULL	true	5	NULL
6640	"unique"	"bigint"	64	0	6645	NULL	true	6	NULL
6641	"nils"	"bigint"	64	0	6645	NULL	true	7	NULL
6642	"minval"	"clob"	0	0	6645	NULL	true	8	NULL
6643	"maxval"	"clob"	0	0	6645	NULL	true	9	NULL
6644	"sorted"	"boolean"	1	0	6645	NULL	true	10	NULL
6730	"file_id"	"bigint"	64	0	6738	NULL	false	0	NULL
6731	"file_location"	"clob"	0	0	6738	NULL	false	1	NULL
6732	"dbschema"	"smallint"	16	0	6738	NULL	false	2	NULL
6733	"format_version"	"varchar"	7	0	6738	NULL	true	3	NULL
6734	"sorting_order"	"varchar"	10	0	6738	NULL	true	4	NULL
6735	"comments"	"clob"	0	0	6738	NULL	true	5	NULL
6740	"sn"	"clob"	0	0	6751	NULL	false	0	NULL
6741	"file_id"	"bigint"	64	0	6751	NULL	false	1	NULL
6742	"ln"	"int"	32	0	6751	NULL	true	2	NULL
6743	"as"	"int"	32	0	6751	NULL	true	3	NULL
6744	"m5"	"clob"	0	0	6751	NULL	true	4	NULL
6745	"sp"	"clob"	0	0	6751	NULL	true	5	NULL
6746	"ur"	"clob"	0	0	6751	NULL	true	6	NULL
6753	"id"	"clob"	0	0	6770	NULL	false	0	NULL
6754	"file_id"	"bigint"	64	0	6770	NULL	false	1	NULL
6755	"cn"	"clob"	0	0	6770	NULL	true	2	NULL
6756	"ds"	"clob"	0	0	6770	NULL	true	3	NULL
6757	"dt"	"timestamp"	7	0	6770	NULL	true	4	NULL
6758	"fo"	"clob"	0	0	6770	NULL	true	5	NULL
6759	"ks"	"clob"	0	0	6770	NULL	true	6	NULL
6760	"lb"	"clob"	0	0	6770	NULL	true	7	NULL
6761	"pg"	"clob"	0	0	6770	NULL	true	8	NULL
6762	"pi"	"int"	32	0	6770	NULL	true	9	NULL
6763	"pl"	"clob"	0	0	6770	NULL	true	10	NULL
6764	"pu"	"clob"	0	0	6770	NULL	true	11	NULL
6765	"sm"	"clob"	0	0	6770	NULL	true	12	NULL
6772	"id"	"clob"	0	0	6782	NULL	false	0	NULL
6773	"file_id"	"bigint"	64	0	6782	NULL	false	1	NULL
6774	"pn"	"clob"	0	0	6782	NULL	true	2	NULL
6775	"cl"	"clob"	0	0	6782	NULL	true	3	NULL
6776	"pp"	"clob"	0	0	6782	NULL	true	4	NULL
6777	"vn"	"clob"	0	0	6782	NULL	true	5	NULL
6784	"qname"	"clob"	0	0	6795	NULL	false	0	NULL
6785	"flag"	"smallint"	16	0	6795	NULL	false	1	NULL
6786	"rname"	"clob"	0	0	6795	NULL	false	2	NULL
6787	"pos"	"int"	32	0	6795	NULL	false	3	NULL
6788	"mapq"	"smallint"	16	0	6795	NULL	false	4	NULL
6789	"cigar"	"clob"	0	0	6795	NULL	false	5	NULL
6790	"rnext"	"clob"	0	0	6795	NULL	false	6	NULL
6791	"pnext"	"int"	32	0	6795	NULL	false	7	NULL
6792	"tlen"	"int"	32	0	6795	NULL	false	8	NULL
6793	"seq"	"clob"	0	0	6795	NULL	false	9	NULL
6794	"qual"	"clob"	0	0	6795	NULL	false	10	NULL
6865	"function_id"	"int"	32	0	6866	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 54 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5210	"tables"	2000	"SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(CASE WHEN ""system"" THEN ""type"" + 10 /* system table/view */ ELSE (CASE WHEN ""commit_action"" = 0 THEN ""type"" /* table/view */ ELSE ""type"" + 20 /* global temp table */ END) END AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", CASE WHEN (NOT ""system"" AND ""commit_action"" > 0) THEN 1 ELSE 0 END AS ""temporary"" FROM ""sys"".""_tables"" WHERE ""type"" <> 2 UNION ALL SELECT ""id"", ""name"", ""schema_id"", ""query"", CAST(""type"" + 30 /* local temp table */ AS SMALLINT) AS ""type"", ""system"", ""commit_action"", ""access"", 1 AS ""temporary"" FROM ""tmp"".""_tables"";"	1	true	0	0
5220	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5236	"db_user_info"	2000	NULL	0	true	0	0
5242	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5246	"user_role"	2000	NULL	0	true	0	0
5249	"auths"	2000	NULL	0	true	0	0
5253	"privileges"	2000	NULL	0	true	0	0
5475	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5486	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5504	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io\nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5543	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5683	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5763	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
5771	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
5809	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
5839	"rejects"	2000	"create view sys.rejects as select * from sys.rejects();"	1	true	0	0
6462	"keywords"	2000	NULL	0	true	0	0
6470	"table_types"	2000	NULL	0	true	0	0
6478	"dependency_types"	2000	NULL	0	true	0	0
6495	"netcdf_files"	2000	NULL	0	true	0	0
6501	"netcdf_dims"	2000	NULL	0	true	0	0
6509	"netcdf_vars"	2000	NULL	0	true	0	0
6515	"netcdf_vardim"	2000	NULL	0	true	0	0
6523	"netcdf_attrs"	2000	NULL	0	true	0	0
6562	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6574	"storagemodelinput"	2000	NULL	0	true	0	0
6622	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6632	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6645	"statistics"	2000	NULL	0	true	0	0
6738	"files"	6687	NULL	0	true	0	0
6751	"sq"	6687	NULL	0	true	0	0
6770	"rg"	6687	NULL	0	true	0	0
6782	"pg"	6687	NULL	0	true	0	0
6795	"export"	6687	NULL	0	true	0	0
6866	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 3803 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	28	"res_0"	"oid"	63	0	0	0
2156	28	"arg_1"	"wrd"	64	0	1	1
2157	29	"res_0"	"oid"	63	0	0	0
2158	29	"arg_1"	"oid"	63	0	1	1
2159	30	"res_0"	"wrd"	64	0	0	0
2160	30	"arg_1"	"any"	0	0	1	1
2161	31	"res_0"	"wrd"	64	0	0	0
2162	31	"arg_1"	"wrd"	64	0	1	1
2163	31	"arg_2"	"int"	32	0	1	2
2164	31	"arg_3"	"any"	0	0	1	3
2165	32	"res_0"	"boolean"	1	0	0	0
2166	32	"arg_1"	"any"	0	0	1	1
2167	32	"arg_2"	"any"	0	0	1	2
2168	33	"res_0"	"boolean"	1	0	0	0
2169	33	"arg_1"	"any"	0	0	1	1
2170	33	"arg_2"	"any"	0	0	1	2
2171	34	"res_0"	"boolean"	1	0	0	0
2172	34	"arg_1"	"any"	0	0	1	1
2173	35	"res_0"	"boolean"	1	0	0	0
2174	35	"arg_1"	"any"	0	0	1	1
2175	35	"arg_2"	"any"	0	0	1	2
2176	36	"res_0"	"boolean"	1	0	0	0
2177	36	"arg_1"	"any"	0	0	1	1
2178	36	"arg_2"	"any"	0	0	1	2
2179	37	"res_0"	"boolean"	1	0	0	0
2180	37	"arg_1"	"any"	0	0	1	1
2181	37	"arg_2"	"any"	0	0	1	2
2182	38	"res_0"	"boolean"	1	0	0	0
2183	38	"arg_1"	"any"	0	0	1	1
2184	38	"arg_2"	"any"	0	0	1	2
2185	42	"res_0"	"boolean"	1	0	0	0
2186	42	"arg_1"	"any"	0	0	1	1
2187	42	"arg_2"	"any"	0	0	1	2
2188	43	"res_0"	"oid"	63	0	0	0
2189	43	"arg_1"	"any"	0	0	1	1
2190	44	"res_0"	"int"	32	0	0	0
2191	44	"arg_1"	"any"	0	0	1	1
2192	45	"res_0"	"oid"	63	0	0	0
2193	45	"arg_1"	"any"	0	0	1	1
2194	45	"arg_2"	"varchar"	0	0	1	2
2195	45	"arg_3"	"varchar"	0	0	1	3
2196	48	"res_0"	"any"	0	0	0	0
2197	48	"arg_1"	"any"	0	0	1	1
2198	48	"arg_2"	"any"	0	0	1	2
2199	49	"res_0"	"any"	0	0	0	0
2200	49	"arg_1"	"any"	0	0	1	1
2201	49	"arg_2"	"any"	0	0	1	2
2202	50	"res_0"	"any"	0	0	0	0
2203	50	"arg_1"	"boolean"	1	0	1	1
2204	50	"arg_2"	"any"	0	0	1	2
2205	50	"arg_3"	"any"	0	0	1	3
2206	68	"res_0"	"oid"	63	0	0	0
2207	68	"arg_1"	"oid"	63	0	1	1
2208	68	"arg_2"	"oid"	63	0	1	2
2209	69	"res_0"	"tinyint"	8	0	0	0
2210	69	"arg_1"	"tinyint"	8	0	1	1
2211	69	"arg_2"	"tinyint"	8	0	1	2
2212	70	"res_0"	"smallint"	16	0	0	0
2213	70	"arg_1"	"smallint"	16	0	1	1
2214	70	"arg_2"	"smallint"	16	0	1	2
2215	71	"res_0"	"int"	32	0	0	0
2216	71	"arg_1"	"int"	32	0	1	1
2217	71	"arg_2"	"int"	32	0	1	2
2218	72	"res_0"	"bigint"	64	0	0	0
2219	72	"arg_1"	"bigint"	64	0	1	1
2220	72	"arg_2"	"bigint"	64	0	1	2
2221	73	"res_0"	"wrd"	64	0	0	0
2222	73	"arg_1"	"wrd"	64	0	1	1
2223	73	"arg_2"	"wrd"	64	0	1	2
2224	74	"res_0"	"decimal"	2	0	0	0
2225	74	"arg_1"	"decimal"	2	0	1	1
2226	74	"arg_2"	"decimal"	2	0	1	2
2227	75	"res_0"	"decimal"	4	0	0	0
2228	75	"arg_1"	"decimal"	4	0	1	1
2229	75	"arg_2"	"decimal"	4	0	1	2
2230	76	"res_0"	"decimal"	9	0	0	0
2231	76	"arg_1"	"decimal"	9	0	1	1
2232	76	"arg_2"	"decimal"	9	0	1	2
2233	77	"res_0"	"decimal"	19	0	0	0
2234	77	"arg_1"	"decimal"	19	0	1	1
2235	77	"arg_2"	"decimal"	19	0	1	2
2236	78	"res_0"	"real"	24	0	0	0
2237	78	"arg_1"	"real"	24	0	1	1
2238	78	"arg_2"	"real"	24	0	1	2
2239	79	"res_0"	"double"	53	0	0	0
2240	79	"arg_1"	"double"	53	0	1	1
2241	79	"arg_2"	"double"	53	0	1	2
2242	89	"res_0"	"int"	32	0	0	0
2243	89	"arg_1"	"any"	0	0	1	1
2244	90	"res_0"	"int"	32	0	0	0
2245	90	"arg_1"	"any"	0	0	1	1
2246	91	"res_0"	"int"	32	0	0	0
2247	91	"arg_1"	"any"	0	0	1	1
2248	92	"res_0"	"any"	0	0	0	0
2249	92	"arg_1"	"any"	0	0	1	1
2250	93	"res_0"	"int"	32	0	0	0
2251	93	"arg_1"	"any"	0	0	1	1
2252	94	"res_0"	"int"	32	0	0	0
2253	94	"arg_1"	"any"	0	0	1	1
2254	94	"arg_2"	"oid"	63	0	1	2
2255	94	"arg_3"	"any"	0	0	1	3
2256	95	"res_0"	"int"	32	0	0	0
2257	95	"arg_1"	"any"	0	0	1	1
2258	95	"arg_2"	"oid"	63	0	1	2
2259	95	"arg_3"	"any"	0	0	1	3
2260	96	"res_0"	"int"	32	0	0	0
2261	96	"arg_1"	"any"	0	0	1	1
2262	96	"arg_2"	"oid"	63	0	1	2
2263	96	"arg_3"	"any"	0	0	1	3
2264	97	"res_0"	"any"	0	0	0	0
2265	97	"arg_1"	"any"	0	0	1	1
2266	97	"arg_2"	"oid"	63	0	1	2
2267	97	"arg_3"	"any"	0	0	1	3
2268	98	"res_0"	"int"	32	0	0	0
2269	98	"arg_1"	"any"	0	0	1	1
2270	98	"arg_2"	"oid"	63	0	1	2
2271	98	"arg_3"	"any"	0	0	1	3
2272	99	"res_0"	"int"	32	0	0	0
2273	99	"arg_1"	"any"	0	0	1	1
2274	99	"arg_2"	"oid"	63	0	1	2
2275	99	"arg_3"	"oid"	63	0	1	3
2276	99	"arg_4"	"oid"	63	0	1	4
2277	100	"res_0"	"int"	32	0	0	0
2278	100	"arg_1"	"any"	0	0	1	1
2279	100	"arg_2"	"oid"	63	0	1	2
2280	100	"arg_3"	"oid"	63	0	1	3
2281	100	"arg_4"	"oid"	63	0	1	4
2282	101	"res_0"	"int"	32	0	0	0
2283	101	"arg_1"	"any"	0	0	1	1
2284	101	"arg_2"	"oid"	63	0	1	2
2285	101	"arg_3"	"oid"	63	0	1	3
2286	101	"arg_4"	"oid"	63	0	1	4
2287	102	"res_0"	"any"	0	0	0	0
2288	102	"arg_1"	"any"	0	0	1	1
2289	102	"arg_2"	"oid"	63	0	1	2
2290	102	"arg_3"	"oid"	63	0	1	3
2291	102	"arg_4"	"oid"	63	0	1	4
2292	103	"res_0"	"int"	32	0	0	0
2293	103	"arg_1"	"any"	0	0	1	1
2294	103	"arg_2"	"oid"	63	0	1	2
2295	103	"arg_3"	"oid"	63	0	1	3
2296	103	"arg_4"	"oid"	63	0	1	4
2297	104	"res_0"	"any"	0	0	0	0
2298	104	"arg_1"	"any"	0	0	1	1
2299	105	"res_0"	"any"	0	0	0	0
2300	105	"arg_1"	"any"	0	0	1	1
2301	106	"res_0"	"any"	0	0	0	0
2302	106	"arg_1"	"any"	0	0	1	1
2303	106	"arg_2"	"int"	32	0	1	2
2304	107	"res_0"	"any"	0	0	0	0
2305	107	"arg_1"	"any"	0	0	1	1
2306	107	"arg_2"	"int"	32	0	1	2
2307	108	"res_0"	"any"	0	0	0	0
2308	108	"arg_1"	"any"	0	0	1	1
2309	108	"arg_2"	"oid"	63	0	1	2
2310	108	"arg_3"	"oid"	63	0	1	3
2311	109	"res_0"	"any"	0	0	0	0
2312	109	"arg_1"	"any"	0	0	1	1
2313	109	"arg_2"	"oid"	63	0	1	2
2314	109	"arg_3"	"oid"	63	0	1	3
2315	110	"res_0"	"any"	0	0	0	0
2316	110	"arg_1"	"any"	0	0	1	1
2317	110	"arg_2"	"int"	32	0	1	2
2318	110	"arg_3"	"oid"	63	0	1	3
2319	110	"arg_4"	"oid"	63	0	1	4
2320	111	"res_0"	"any"	0	0	0	0
2321	111	"arg_1"	"any"	0	0	1	1
2322	111	"arg_2"	"int"	32	0	1	2
2323	111	"arg_3"	"oid"	63	0	1	3
2324	111	"arg_4"	"oid"	63	0	1	4
2325	112	"res_0"	"boolean"	1	0	0	0
2326	112	"arg_1"	"boolean"	1	0	1	1
2327	112	"arg_2"	"boolean"	1	0	1	2
2328	113	"res_0"	"boolean"	1	0	0	0
2329	113	"arg_1"	"boolean"	1	0	1	1
2330	113	"arg_2"	"boolean"	1	0	1	2
2331	114	"res_0"	"boolean"	1	0	0	0
2332	114	"arg_1"	"boolean"	1	0	1	1
2333	114	"arg_2"	"boolean"	1	0	1	2
2334	115	"res_0"	"boolean"	1	0	0	0
2335	115	"arg_1"	"boolean"	1	0	1	1
2336	116	"res_0"	"oid"	63	0	0	0
2337	116	"arg_1"	"oid"	63	0	1	1
2338	116	"arg_2"	"oid"	63	0	1	2
2339	117	"res_0"	"oid"	63	0	0	0
2340	117	"arg_1"	"oid"	63	0	1	1
2341	117	"arg_2"	"oid"	63	0	1	2
2342	118	"res_0"	"oid"	63	0	0	0
2343	118	"arg_1"	"oid"	63	0	1	1
2344	118	"arg_2"	"oid"	63	0	1	2
2345	119	"res_0"	"oid"	63	0	0	0
2346	119	"arg_1"	"oid"	63	0	1	1
2347	119	"arg_2"	"oid"	63	0	1	2
2348	120	"res_0"	"oid"	63	0	0	0
2349	120	"arg_1"	"oid"	63	0	1	1
2350	120	"arg_2"	"oid"	63	0	1	2
2351	121	"res_0"	"oid"	63	0	0	0
2352	121	"arg_1"	"oid"	63	0	1	1
2353	121	"arg_2"	"oid"	63	0	1	2
2354	122	"res_0"	"oid"	63	0	0	0
2355	122	"arg_1"	"oid"	63	0	1	1
2356	122	"arg_2"	"oid"	63	0	1	2
2357	123	"res_0"	"oid"	63	0	0	0
2358	123	"arg_1"	"oid"	63	0	1	1
2359	124	"res_0"	"oid"	63	0	0	0
2360	124	"arg_1"	"oid"	63	0	1	1
2361	124	"arg_2"	"int"	32	0	1	2
2362	125	"res_0"	"oid"	63	0	0	0
2363	125	"arg_1"	"oid"	63	0	1	1
2364	125	"arg_2"	"int"	32	0	1	2
2365	126	"res_0"	"oid"	63	0	0	0
2366	126	"arg_1"	"oid"	63	0	1	1
2367	127	"res_0"	"oid"	63	0	0	0
2368	127	"arg_1"	"oid"	63	0	1	1
2369	128	"res_0"	"tinyint"	8	0	0	0
2370	128	"arg_1"	"oid"	63	0	1	1
2371	129	"res_0"	"oid"	63	0	0	0
2372	129	"arg_1"	"oid"	63	0	1	1
2373	129	"arg_2"	"oid"	63	0	1	2
2374	130	"res_0"	"oid"	63	0	0	0
2375	130	"arg_1"	"oid"	63	0	1	1
2376	130	"arg_2"	"oid"	63	0	1	2
2377	131	"res_0"	"month_interval"	32	0	0	0
2378	131	"arg_1"	"month_interval"	32	0	1	1
2379	131	"arg_2"	"oid"	63	0	1	2
2380	132	"res_0"	"month_interval"	32	0	0	0
2381	132	"arg_1"	"month_interval"	32	0	1	1
2382	132	"arg_2"	"oid"	63	0	1	2
2383	133	"res_0"	"month_interval"	32	0	0	0
2384	133	"arg_1"	"month_interval"	32	0	1	1
2385	133	"arg_2"	"oid"	63	0	1	2
2386	134	"res_0"	"month_interval"	32	0	0	0
2387	134	"arg_1"	"month_interval"	32	0	1	1
2388	134	"arg_2"	"oid"	63	0	1	2
2389	135	"res_0"	"sec_interval"	13	0	0	0
2390	135	"arg_1"	"sec_interval"	13	0	1	1
2391	135	"arg_2"	"oid"	63	0	1	2
2392	136	"res_0"	"sec_interval"	13	0	0	0
2393	136	"arg_1"	"sec_interval"	13	0	1	1
2394	136	"arg_2"	"oid"	63	0	1	2
2395	137	"res_0"	"sec_interval"	13	0	0	0
2396	137	"arg_1"	"sec_interval"	13	0	1	1
2397	137	"arg_2"	"oid"	63	0	1	2
2398	138	"res_0"	"sec_interval"	13	0	0	0
2399	138	"arg_1"	"sec_interval"	13	0	1	1
2400	138	"arg_2"	"oid"	63	0	1	2
2401	139	"res_0"	"tinyint"	8	0	0	0
2402	139	"arg_1"	"tinyint"	8	0	1	1
2403	139	"arg_2"	"tinyint"	8	0	1	2
2404	140	"res_0"	"tinyint"	8	0	0	0
2405	140	"arg_1"	"tinyint"	8	0	1	1
2406	140	"arg_2"	"tinyint"	8	0	1	2
2407	141	"res_0"	"tinyint"	8	0	0	0
2408	141	"arg_1"	"tinyint"	8	0	1	1
2409	141	"arg_2"	"tinyint"	8	0	1	2
2410	142	"res_0"	"tinyint"	8	0	0	0
2411	142	"arg_1"	"tinyint"	8	0	1	1
2412	142	"arg_2"	"tinyint"	8	0	1	2
2413	143	"res_0"	"tinyint"	8	0	0	0
2414	143	"arg_1"	"tinyint"	8	0	1	1
2415	143	"arg_2"	"tinyint"	8	0	1	2
2416	144	"res_0"	"tinyint"	8	0	0	0
2417	144	"arg_1"	"tinyint"	8	0	1	1
2418	144	"arg_2"	"tinyint"	8	0	1	2
2419	145	"res_0"	"tinyint"	8	0	0	0
2420	145	"arg_1"	"tinyint"	8	0	1	1
2421	145	"arg_2"	"tinyint"	8	0	1	2
2422	146	"res_0"	"tinyint"	8	0	0	0
2423	146	"arg_1"	"tinyint"	8	0	1	1
2424	147	"res_0"	"tinyint"	8	0	0	0
2425	147	"arg_1"	"tinyint"	8	0	1	1
2426	147	"arg_2"	"int"	32	0	1	2
2427	148	"res_0"	"tinyint"	8	0	0	0
2428	148	"arg_1"	"tinyint"	8	0	1	1
2429	148	"arg_2"	"int"	32	0	1	2
2430	149	"res_0"	"tinyint"	8	0	0	0
2431	149	"arg_1"	"tinyint"	8	0	1	1
2432	150	"res_0"	"tinyint"	8	0	0	0
2433	150	"arg_1"	"tinyint"	8	0	1	1
2434	151	"res_0"	"tinyint"	8	0	0	0
2435	151	"arg_1"	"tinyint"	8	0	1	1
2436	152	"res_0"	"tinyint"	8	0	0	0
2437	152	"arg_1"	"tinyint"	8	0	1	1
2438	152	"arg_2"	"tinyint"	8	0	1	2
2439	153	"res_0"	"tinyint"	8	0	0	0
2440	153	"arg_1"	"tinyint"	8	0	1	1
2441	153	"arg_2"	"tinyint"	8	0	1	2
2442	154	"res_0"	"month_interval"	32	0	0	0
2443	154	"arg_1"	"month_interval"	32	0	1	1
2444	154	"arg_2"	"tinyint"	8	0	1	2
2445	155	"res_0"	"month_interval"	32	0	0	0
2446	155	"arg_1"	"month_interval"	32	0	1	1
2447	155	"arg_2"	"tinyint"	8	0	1	2
2448	156	"res_0"	"month_interval"	32	0	0	0
2449	156	"arg_1"	"month_interval"	32	0	1	1
2450	156	"arg_2"	"tinyint"	8	0	1	2
2451	157	"res_0"	"month_interval"	32	0	0	0
2452	157	"arg_1"	"month_interval"	32	0	1	1
2453	157	"arg_2"	"tinyint"	8	0	1	2
2454	158	"res_0"	"sec_interval"	13	0	0	0
2455	158	"arg_1"	"sec_interval"	13	0	1	1
2456	158	"arg_2"	"tinyint"	8	0	1	2
2457	159	"res_0"	"sec_interval"	13	0	0	0
2458	159	"arg_1"	"sec_interval"	13	0	1	1
2459	159	"arg_2"	"tinyint"	8	0	1	2
2460	160	"res_0"	"sec_interval"	13	0	0	0
2461	160	"arg_1"	"sec_interval"	13	0	1	1
2462	160	"arg_2"	"tinyint"	8	0	1	2
2463	161	"res_0"	"sec_interval"	13	0	0	0
2464	161	"arg_1"	"sec_interval"	13	0	1	1
2465	161	"arg_2"	"tinyint"	8	0	1	2
2466	162	"res_0"	"smallint"	16	0	0	0
2467	162	"arg_1"	"smallint"	16	0	1	1
2468	162	"arg_2"	"smallint"	16	0	1	2
2469	163	"res_0"	"smallint"	16	0	0	0
2470	163	"arg_1"	"smallint"	16	0	1	1
2471	163	"arg_2"	"smallint"	16	0	1	2
2472	164	"res_0"	"smallint"	16	0	0	0
2473	164	"arg_1"	"smallint"	16	0	1	1
2474	164	"arg_2"	"smallint"	16	0	1	2
2475	165	"res_0"	"smallint"	16	0	0	0
2476	165	"arg_1"	"smallint"	16	0	1	1
2477	165	"arg_2"	"smallint"	16	0	1	2
2478	166	"res_0"	"smallint"	16	0	0	0
2479	166	"arg_1"	"smallint"	16	0	1	1
2480	166	"arg_2"	"smallint"	16	0	1	2
2481	167	"res_0"	"smallint"	16	0	0	0
2482	167	"arg_1"	"smallint"	16	0	1	1
2483	167	"arg_2"	"smallint"	16	0	1	2
2484	168	"res_0"	"smallint"	16	0	0	0
2485	168	"arg_1"	"smallint"	16	0	1	1
2486	168	"arg_2"	"smallint"	16	0	1	2
2487	169	"res_0"	"smallint"	16	0	0	0
2488	169	"arg_1"	"smallint"	16	0	1	1
2489	170	"res_0"	"smallint"	16	0	0	0
2490	170	"arg_1"	"smallint"	16	0	1	1
2491	170	"arg_2"	"int"	32	0	1	2
2492	171	"res_0"	"smallint"	16	0	0	0
2493	171	"arg_1"	"smallint"	16	0	1	1
2494	171	"arg_2"	"int"	32	0	1	2
2495	172	"res_0"	"smallint"	16	0	0	0
2496	172	"arg_1"	"smallint"	16	0	1	1
2497	173	"res_0"	"smallint"	16	0	0	0
2498	173	"arg_1"	"smallint"	16	0	1	1
2499	174	"res_0"	"tinyint"	8	0	0	0
2500	174	"arg_1"	"smallint"	16	0	1	1
2501	175	"res_0"	"smallint"	16	0	0	0
2502	175	"arg_1"	"smallint"	16	0	1	1
2503	175	"arg_2"	"smallint"	16	0	1	2
2504	176	"res_0"	"smallint"	16	0	0	0
2505	176	"arg_1"	"smallint"	16	0	1	1
2506	176	"arg_2"	"smallint"	16	0	1	2
2507	177	"res_0"	"month_interval"	32	0	0	0
2508	177	"arg_1"	"month_interval"	32	0	1	1
2509	177	"arg_2"	"smallint"	16	0	1	2
2510	178	"res_0"	"month_interval"	32	0	0	0
2511	178	"arg_1"	"month_interval"	32	0	1	1
2512	178	"arg_2"	"smallint"	16	0	1	2
2513	179	"res_0"	"month_interval"	32	0	0	0
2514	179	"arg_1"	"month_interval"	32	0	1	1
2515	179	"arg_2"	"smallint"	16	0	1	2
2516	180	"res_0"	"month_interval"	32	0	0	0
2517	180	"arg_1"	"month_interval"	32	0	1	1
2518	180	"arg_2"	"smallint"	16	0	1	2
2519	181	"res_0"	"sec_interval"	13	0	0	0
2520	181	"arg_1"	"sec_interval"	13	0	1	1
2521	181	"arg_2"	"smallint"	16	0	1	2
2522	182	"res_0"	"sec_interval"	13	0	0	0
2523	182	"arg_1"	"sec_interval"	13	0	1	1
2524	182	"arg_2"	"smallint"	16	0	1	2
2525	183	"res_0"	"sec_interval"	13	0	0	0
2526	183	"arg_1"	"sec_interval"	13	0	1	1
2527	183	"arg_2"	"smallint"	16	0	1	2
2528	184	"res_0"	"sec_interval"	13	0	0	0
2529	184	"arg_1"	"sec_interval"	13	0	1	1
2530	184	"arg_2"	"smallint"	16	0	1	2
2531	185	"res_0"	"int"	32	0	0	0
2532	185	"arg_1"	"int"	32	0	1	1
2533	185	"arg_2"	"int"	32	0	1	2
2534	186	"res_0"	"int"	32	0	0	0
2535	186	"arg_1"	"int"	32	0	1	1
2536	186	"arg_2"	"int"	32	0	1	2
2537	187	"res_0"	"int"	32	0	0	0
2538	187	"arg_1"	"int"	32	0	1	1
2539	187	"arg_2"	"int"	32	0	1	2
2540	188	"res_0"	"int"	32	0	0	0
2541	188	"arg_1"	"int"	32	0	1	1
2542	188	"arg_2"	"int"	32	0	1	2
2543	189	"res_0"	"int"	32	0	0	0
2544	189	"arg_1"	"int"	32	0	1	1
2545	189	"arg_2"	"int"	32	0	1	2
2546	190	"res_0"	"int"	32	0	0	0
2547	190	"arg_1"	"int"	32	0	1	1
2548	190	"arg_2"	"int"	32	0	1	2
2549	191	"res_0"	"int"	32	0	0	0
2550	191	"arg_1"	"int"	32	0	1	1
2551	191	"arg_2"	"int"	32	0	1	2
2552	192	"res_0"	"int"	32	0	0	0
2553	192	"arg_1"	"int"	32	0	1	1
2554	193	"res_0"	"int"	32	0	0	0
2555	193	"arg_1"	"int"	32	0	1	1
2556	193	"arg_2"	"int"	32	0	1	2
2557	194	"res_0"	"int"	32	0	0	0
2558	194	"arg_1"	"int"	32	0	1	1
2559	194	"arg_2"	"int"	32	0	1	2
2560	195	"res_0"	"int"	32	0	0	0
2561	195	"arg_1"	"int"	32	0	1	1
2562	196	"res_0"	"int"	32	0	0	0
2563	196	"arg_1"	"int"	32	0	1	1
2564	197	"res_0"	"tinyint"	8	0	0	0
2565	197	"arg_1"	"int"	32	0	1	1
2566	198	"res_0"	"int"	32	0	0	0
2567	198	"arg_1"	"int"	32	0	1	1
2568	198	"arg_2"	"int"	32	0	1	2
2569	199	"res_0"	"int"	32	0	0	0
2570	199	"arg_1"	"int"	32	0	1	1
2571	199	"arg_2"	"int"	32	0	1	2
2572	200	"res_0"	"month_interval"	32	0	0	0
2573	200	"arg_1"	"month_interval"	32	0	1	1
2574	200	"arg_2"	"int"	32	0	1	2
2575	201	"res_0"	"month_interval"	32	0	0	0
2576	201	"arg_1"	"month_interval"	32	0	1	1
2577	201	"arg_2"	"int"	32	0	1	2
2578	202	"res_0"	"month_interval"	32	0	0	0
2579	202	"arg_1"	"month_interval"	32	0	1	1
2580	202	"arg_2"	"int"	32	0	1	2
2581	203	"res_0"	"month_interval"	32	0	0	0
2582	203	"arg_1"	"month_interval"	32	0	1	1
2583	203	"arg_2"	"int"	32	0	1	2
2584	204	"res_0"	"sec_interval"	13	0	0	0
2585	204	"arg_1"	"sec_interval"	13	0	1	1
2586	204	"arg_2"	"int"	32	0	1	2
2587	205	"res_0"	"sec_interval"	13	0	0	0
2588	205	"arg_1"	"sec_interval"	13	0	1	1
2589	205	"arg_2"	"int"	32	0	1	2
2590	206	"res_0"	"sec_interval"	13	0	0	0
2591	206	"arg_1"	"sec_interval"	13	0	1	1
2592	206	"arg_2"	"int"	32	0	1	2
2593	207	"res_0"	"sec_interval"	13	0	0	0
2594	207	"arg_1"	"sec_interval"	13	0	1	1
2595	207	"arg_2"	"int"	32	0	1	2
2596	208	"res_0"	"bigint"	64	0	0	0
2597	208	"arg_1"	"bigint"	64	0	1	1
2598	208	"arg_2"	"bigint"	64	0	1	2
2599	209	"res_0"	"bigint"	64	0	0	0
2600	209	"arg_1"	"bigint"	64	0	1	1
2601	209	"arg_2"	"bigint"	64	0	1	2
2602	210	"res_0"	"bigint"	64	0	0	0
2603	210	"arg_1"	"bigint"	64	0	1	1
2604	210	"arg_2"	"bigint"	64	0	1	2
2605	211	"res_0"	"bigint"	64	0	0	0
2606	211	"arg_1"	"bigint"	64	0	1	1
2607	211	"arg_2"	"bigint"	64	0	1	2
2608	212	"res_0"	"bigint"	64	0	0	0
2609	212	"arg_1"	"bigint"	64	0	1	1
2610	212	"arg_2"	"bigint"	64	0	1	2
2611	213	"res_0"	"bigint"	64	0	0	0
2612	213	"arg_1"	"bigint"	64	0	1	1
2613	213	"arg_2"	"bigint"	64	0	1	2
2614	214	"res_0"	"bigint"	64	0	0	0
2615	214	"arg_1"	"bigint"	64	0	1	1
2616	214	"arg_2"	"bigint"	64	0	1	2
2617	215	"res_0"	"bigint"	64	0	0	0
2618	215	"arg_1"	"bigint"	64	0	1	1
2619	216	"res_0"	"bigint"	64	0	0	0
2620	216	"arg_1"	"bigint"	64	0	1	1
2621	216	"arg_2"	"int"	32	0	1	2
2622	217	"res_0"	"bigint"	64	0	0	0
2623	217	"arg_1"	"bigint"	64	0	1	1
2624	217	"arg_2"	"int"	32	0	1	2
2625	218	"res_0"	"bigint"	64	0	0	0
2626	218	"arg_1"	"bigint"	64	0	1	1
2627	219	"res_0"	"bigint"	64	0	0	0
2628	219	"arg_1"	"bigint"	64	0	1	1
2629	220	"res_0"	"tinyint"	8	0	0	0
2630	220	"arg_1"	"bigint"	64	0	1	1
2631	221	"res_0"	"bigint"	64	0	0	0
2632	221	"arg_1"	"bigint"	64	0	1	1
2633	221	"arg_2"	"bigint"	64	0	1	2
2634	222	"res_0"	"bigint"	64	0	0	0
2635	222	"arg_1"	"bigint"	64	0	1	1
2636	222	"arg_2"	"bigint"	64	0	1	2
2637	223	"res_0"	"month_interval"	32	0	0	0
2638	223	"arg_1"	"month_interval"	32	0	1	1
2639	223	"arg_2"	"bigint"	64	0	1	2
2640	224	"res_0"	"month_interval"	32	0	0	0
2641	224	"arg_1"	"month_interval"	32	0	1	1
2642	224	"arg_2"	"bigint"	64	0	1	2
2643	225	"res_0"	"month_interval"	32	0	0	0
2644	225	"arg_1"	"month_interval"	32	0	1	1
2645	225	"arg_2"	"bigint"	64	0	1	2
2646	226	"res_0"	"month_interval"	32	0	0	0
2647	226	"arg_1"	"month_interval"	32	0	1	1
2648	226	"arg_2"	"bigint"	64	0	1	2
2649	227	"res_0"	"sec_interval"	13	0	0	0
2650	227	"arg_1"	"sec_interval"	13	0	1	1
2651	227	"arg_2"	"bigint"	64	0	1	2
2652	228	"res_0"	"sec_interval"	13	0	0	0
2653	228	"arg_1"	"sec_interval"	13	0	1	1
2654	228	"arg_2"	"bigint"	64	0	1	2
2655	229	"res_0"	"sec_interval"	13	0	0	0
2656	229	"arg_1"	"sec_interval"	13	0	1	1
2657	229	"arg_2"	"bigint"	64	0	1	2
2658	230	"res_0"	"sec_interval"	13	0	0	0
2659	230	"arg_1"	"sec_interval"	13	0	1	1
2660	230	"arg_2"	"bigint"	64	0	1	2
2661	231	"res_0"	"wrd"	64	0	0	0
2662	231	"arg_1"	"wrd"	64	0	1	1
2663	231	"arg_2"	"wrd"	64	0	1	2
2664	232	"res_0"	"wrd"	64	0	0	0
2665	232	"arg_1"	"wrd"	64	0	1	1
2666	232	"arg_2"	"wrd"	64	0	1	2
2667	233	"res_0"	"wrd"	64	0	0	0
2668	233	"arg_1"	"wrd"	64	0	1	1
2669	233	"arg_2"	"wrd"	64	0	1	2
2670	234	"res_0"	"wrd"	64	0	0	0
2671	234	"arg_1"	"wrd"	64	0	1	1
2672	234	"arg_2"	"wrd"	64	0	1	2
2673	235	"res_0"	"wrd"	64	0	0	0
2674	235	"arg_1"	"wrd"	64	0	1	1
2675	235	"arg_2"	"wrd"	64	0	1	2
2676	236	"res_0"	"wrd"	64	0	0	0
2677	236	"arg_1"	"wrd"	64	0	1	1
2678	236	"arg_2"	"wrd"	64	0	1	2
2679	237	"res_0"	"wrd"	64	0	0	0
2680	237	"arg_1"	"wrd"	64	0	1	1
2681	237	"arg_2"	"wrd"	64	0	1	2
2682	238	"res_0"	"wrd"	64	0	0	0
2683	238	"arg_1"	"wrd"	64	0	1	1
2684	239	"res_0"	"wrd"	64	0	0	0
2685	239	"arg_1"	"wrd"	64	0	1	1
2686	239	"arg_2"	"int"	32	0	1	2
2687	240	"res_0"	"wrd"	64	0	0	0
2688	240	"arg_1"	"wrd"	64	0	1	1
2689	240	"arg_2"	"int"	32	0	1	2
2690	241	"res_0"	"wrd"	64	0	0	0
2691	241	"arg_1"	"wrd"	64	0	1	1
2692	242	"res_0"	"wrd"	64	0	0	0
2693	242	"arg_1"	"wrd"	64	0	1	1
2694	243	"res_0"	"tinyint"	8	0	0	0
2695	243	"arg_1"	"wrd"	64	0	1	1
2696	244	"res_0"	"wrd"	64	0	0	0
2697	244	"arg_1"	"wrd"	64	0	1	1
2698	244	"arg_2"	"wrd"	64	0	1	2
2699	245	"res_0"	"wrd"	64	0	0	0
2700	245	"arg_1"	"wrd"	64	0	1	1
2701	245	"arg_2"	"wrd"	64	0	1	2
2702	246	"res_0"	"month_interval"	32	0	0	0
2703	246	"arg_1"	"month_interval"	32	0	1	1
2704	246	"arg_2"	"wrd"	64	0	1	2
2705	247	"res_0"	"month_interval"	32	0	0	0
2706	247	"arg_1"	"month_interval"	32	0	1	1
2707	247	"arg_2"	"wrd"	64	0	1	2
2708	248	"res_0"	"month_interval"	32	0	0	0
2709	248	"arg_1"	"month_interval"	32	0	1	1
2710	248	"arg_2"	"wrd"	64	0	1	2
2711	249	"res_0"	"month_interval"	32	0	0	0
2712	249	"arg_1"	"month_interval"	32	0	1	1
2713	249	"arg_2"	"wrd"	64	0	1	2
2714	250	"res_0"	"sec_interval"	13	0	0	0
2715	250	"arg_1"	"sec_interval"	13	0	1	1
2716	250	"arg_2"	"wrd"	64	0	1	2
2717	251	"res_0"	"sec_interval"	13	0	0	0
2718	251	"arg_1"	"sec_interval"	13	0	1	1
2719	251	"arg_2"	"wrd"	64	0	1	2
2720	252	"res_0"	"sec_interval"	13	0	0	0
2721	252	"arg_1"	"sec_interval"	13	0	1	1
2722	252	"arg_2"	"wrd"	64	0	1	2
2723	253	"res_0"	"sec_interval"	13	0	0	0
2724	253	"arg_1"	"sec_interval"	13	0	1	1
2725	253	"arg_2"	"wrd"	64	0	1	2
2726	254	"res_0"	"decimal"	2	0	0	0
2727	254	"arg_1"	"decimal"	2	0	1	1
2728	254	"arg_2"	"decimal"	2	0	1	2
2729	255	"res_0"	"decimal"	2	0	0	0
2730	255	"arg_1"	"decimal"	2	0	1	1
2731	255	"arg_2"	"decimal"	2	0	1	2
2732	256	"res_0"	"decimal"	2	0	0	0
2733	256	"arg_1"	"decimal"	2	0	1	1
2734	256	"arg_2"	"decimal"	2	0	1	2
2735	257	"res_0"	"decimal"	2	0	0	0
2736	257	"arg_1"	"decimal"	2	0	1	1
2737	257	"arg_2"	"decimal"	2	0	1	2
2738	258	"res_0"	"decimal"	2	0	0	0
2739	258	"arg_1"	"decimal"	2	0	1	1
2740	258	"arg_2"	"decimal"	2	0	1	2
2741	259	"res_0"	"decimal"	2	0	0	0
2742	259	"arg_1"	"decimal"	2	0	1	1
2743	259	"arg_2"	"decimal"	2	0	1	2
2744	260	"res_0"	"decimal"	2	0	0	0
2745	260	"arg_1"	"decimal"	2	0	1	1
2746	260	"arg_2"	"decimal"	2	0	1	2
2747	261	"res_0"	"decimal"	2	0	0	0
2748	261	"arg_1"	"decimal"	2	0	1	1
2749	262	"res_0"	"decimal"	2	0	0	0
2750	262	"arg_1"	"decimal"	2	0	1	1
2751	262	"arg_2"	"int"	32	0	1	2
2752	263	"res_0"	"decimal"	2	0	0	0
2753	263	"arg_1"	"decimal"	2	0	1	1
2754	263	"arg_2"	"int"	32	0	1	2
2755	264	"res_0"	"decimal"	2	0	0	0
2756	264	"arg_1"	"decimal"	2	0	1	1
2757	265	"res_0"	"decimal"	2	0	0	0
2758	265	"arg_1"	"decimal"	2	0	1	1
2759	266	"res_0"	"tinyint"	8	0	0	0
2760	266	"arg_1"	"decimal"	2	0	1	1
2761	267	"res_0"	"decimal"	2	0	0	0
2762	267	"arg_1"	"decimal"	2	0	1	1
2763	267	"arg_2"	"tinyint"	8	0	1	2
2764	268	"res_0"	"decimal"	2	0	0	0
2765	268	"arg_1"	"decimal"	2	0	1	1
2766	268	"arg_2"	"tinyint"	8	0	1	2
2767	269	"res_0"	"month_interval"	32	0	0	0
2768	269	"arg_1"	"month_interval"	32	0	1	1
2769	269	"arg_2"	"decimal"	2	0	1	2
2770	270	"res_0"	"month_interval"	32	0	0	0
2771	270	"arg_1"	"month_interval"	32	0	1	1
2772	270	"arg_2"	"decimal"	2	0	1	2
2773	271	"res_0"	"month_interval"	32	0	0	0
2774	271	"arg_1"	"month_interval"	32	0	1	1
2775	271	"arg_2"	"decimal"	2	0	1	2
2776	272	"res_0"	"month_interval"	32	0	0	0
2777	272	"arg_1"	"month_interval"	32	0	1	1
2778	272	"arg_2"	"decimal"	2	0	1	2
2779	273	"res_0"	"sec_interval"	13	0	0	0
2780	273	"arg_1"	"sec_interval"	13	0	1	1
2781	273	"arg_2"	"decimal"	2	0	1	2
2782	274	"res_0"	"sec_interval"	13	0	0	0
2783	274	"arg_1"	"sec_interval"	13	0	1	1
2784	274	"arg_2"	"decimal"	2	0	1	2
2785	275	"res_0"	"sec_interval"	13	0	0	0
2786	275	"arg_1"	"sec_interval"	13	0	1	1
2787	275	"arg_2"	"decimal"	2	0	1	2
2788	276	"res_0"	"sec_interval"	13	0	0	0
2789	276	"arg_1"	"sec_interval"	13	0	1	1
2790	276	"arg_2"	"decimal"	2	0	1	2
2791	277	"res_0"	"decimal"	4	0	0	0
2792	277	"arg_1"	"decimal"	4	0	1	1
2793	277	"arg_2"	"decimal"	4	0	1	2
2794	278	"res_0"	"decimal"	4	0	0	0
2795	278	"arg_1"	"decimal"	4	0	1	1
2796	278	"arg_2"	"decimal"	4	0	1	2
2797	279	"res_0"	"decimal"	4	0	0	0
2798	279	"arg_1"	"decimal"	4	0	1	1
2799	279	"arg_2"	"decimal"	4	0	1	2
2800	280	"res_0"	"decimal"	4	0	0	0
2801	280	"arg_1"	"decimal"	4	0	1	1
2802	280	"arg_2"	"decimal"	4	0	1	2
2803	281	"res_0"	"decimal"	4	0	0	0
2804	281	"arg_1"	"decimal"	4	0	1	1
2805	281	"arg_2"	"decimal"	4	0	1	2
2806	282	"res_0"	"decimal"	4	0	0	0
2807	282	"arg_1"	"decimal"	4	0	1	1
2808	282	"arg_2"	"decimal"	4	0	1	2
2809	283	"res_0"	"decimal"	4	0	0	0
2810	283	"arg_1"	"decimal"	4	0	1	1
2811	283	"arg_2"	"decimal"	4	0	1	2
2812	284	"res_0"	"decimal"	4	0	0	0
2813	284	"arg_1"	"decimal"	4	0	1	1
2814	285	"res_0"	"decimal"	4	0	0	0
2815	285	"arg_1"	"decimal"	4	0	1	1
2816	285	"arg_2"	"int"	32	0	1	2
2817	286	"res_0"	"decimal"	4	0	0	0
2818	286	"arg_1"	"decimal"	4	0	1	1
2819	286	"arg_2"	"int"	32	0	1	2
2820	287	"res_0"	"decimal"	4	0	0	0
2821	287	"arg_1"	"decimal"	4	0	1	1
2822	288	"res_0"	"decimal"	4	0	0	0
2823	288	"arg_1"	"decimal"	4	0	1	1
2824	289	"res_0"	"tinyint"	8	0	0	0
2825	289	"arg_1"	"decimal"	4	0	1	1
2826	290	"res_0"	"decimal"	4	0	0	0
2827	290	"arg_1"	"decimal"	4	0	1	1
2828	290	"arg_2"	"smallint"	16	0	1	2
2829	291	"res_0"	"decimal"	4	0	0	0
2830	291	"arg_1"	"decimal"	4	0	1	1
2831	291	"arg_2"	"smallint"	16	0	1	2
2832	292	"res_0"	"month_interval"	32	0	0	0
2833	292	"arg_1"	"month_interval"	32	0	1	1
2834	292	"arg_2"	"decimal"	4	0	1	2
2835	293	"res_0"	"month_interval"	32	0	0	0
2836	293	"arg_1"	"month_interval"	32	0	1	1
2837	293	"arg_2"	"decimal"	4	0	1	2
2838	294	"res_0"	"month_interval"	32	0	0	0
2839	294	"arg_1"	"month_interval"	32	0	1	1
2840	294	"arg_2"	"decimal"	4	0	1	2
2841	295	"res_0"	"month_interval"	32	0	0	0
2842	295	"arg_1"	"month_interval"	32	0	1	1
2843	295	"arg_2"	"decimal"	4	0	1	2
2844	296	"res_0"	"sec_interval"	13	0	0	0
2845	296	"arg_1"	"sec_interval"	13	0	1	1
2846	296	"arg_2"	"decimal"	4	0	1	2
2847	297	"res_0"	"sec_interval"	13	0	0	0
2848	297	"arg_1"	"sec_interval"	13	0	1	1
2849	297	"arg_2"	"decimal"	4	0	1	2
2850	298	"res_0"	"sec_interval"	13	0	0	0
2851	298	"arg_1"	"sec_interval"	13	0	1	1
2852	298	"arg_2"	"decimal"	4	0	1	2
2853	299	"res_0"	"sec_interval"	13	0	0	0
2854	299	"arg_1"	"sec_interval"	13	0	1	1
2855	299	"arg_2"	"decimal"	4	0	1	2
2856	300	"res_0"	"decimal"	9	0	0	0
2857	300	"arg_1"	"decimal"	9	0	1	1
2858	300	"arg_2"	"decimal"	9	0	1	2
2859	301	"res_0"	"decimal"	9	0	0	0
2860	301	"arg_1"	"decimal"	9	0	1	1
2861	301	"arg_2"	"decimal"	9	0	1	2
2862	302	"res_0"	"decimal"	9	0	0	0
2863	302	"arg_1"	"decimal"	9	0	1	1
2864	302	"arg_2"	"decimal"	9	0	1	2
2865	303	"res_0"	"decimal"	9	0	0	0
2866	303	"arg_1"	"decimal"	9	0	1	1
2867	303	"arg_2"	"decimal"	9	0	1	2
2868	304	"res_0"	"decimal"	9	0	0	0
2869	304	"arg_1"	"decimal"	9	0	1	1
2870	304	"arg_2"	"decimal"	9	0	1	2
2871	305	"res_0"	"decimal"	9	0	0	0
2872	305	"arg_1"	"decimal"	9	0	1	1
2873	305	"arg_2"	"decimal"	9	0	1	2
2874	306	"res_0"	"decimal"	9	0	0	0
2875	306	"arg_1"	"decimal"	9	0	1	1
2876	306	"arg_2"	"decimal"	9	0	1	2
2877	307	"res_0"	"decimal"	9	0	0	0
2878	307	"arg_1"	"decimal"	9	0	1	1
2879	308	"res_0"	"decimal"	9	0	0	0
2880	308	"arg_1"	"decimal"	9	0	1	1
2881	308	"arg_2"	"int"	32	0	1	2
2882	309	"res_0"	"decimal"	9	0	0	0
2883	309	"arg_1"	"decimal"	9	0	1	1
2884	309	"arg_2"	"int"	32	0	1	2
2885	310	"res_0"	"decimal"	9	0	0	0
2886	310	"arg_1"	"decimal"	9	0	1	1
2887	311	"res_0"	"decimal"	9	0	0	0
2888	311	"arg_1"	"decimal"	9	0	1	1
2889	312	"res_0"	"tinyint"	8	0	0	0
2890	312	"arg_1"	"decimal"	9	0	1	1
2891	313	"res_0"	"decimal"	9	0	0	0
2892	313	"arg_1"	"decimal"	9	0	1	1
2893	313	"arg_2"	"int"	32	0	1	2
2894	314	"res_0"	"decimal"	9	0	0	0
2895	314	"arg_1"	"decimal"	9	0	1	1
2896	314	"arg_2"	"int"	32	0	1	2
2897	315	"res_0"	"month_interval"	32	0	0	0
2898	315	"arg_1"	"month_interval"	32	0	1	1
2899	315	"arg_2"	"decimal"	9	0	1	2
2900	316	"res_0"	"month_interval"	32	0	0	0
2901	316	"arg_1"	"month_interval"	32	0	1	1
2902	316	"arg_2"	"decimal"	9	0	1	2
2903	317	"res_0"	"month_interval"	32	0	0	0
2904	317	"arg_1"	"month_interval"	32	0	1	1
2905	317	"arg_2"	"decimal"	9	0	1	2
2906	318	"res_0"	"month_interval"	32	0	0	0
2907	318	"arg_1"	"month_interval"	32	0	1	1
2908	318	"arg_2"	"decimal"	9	0	1	2
2909	319	"res_0"	"sec_interval"	13	0	0	0
2910	319	"arg_1"	"sec_interval"	13	0	1	1
2911	319	"arg_2"	"decimal"	9	0	1	2
2912	320	"res_0"	"sec_interval"	13	0	0	0
2913	320	"arg_1"	"sec_interval"	13	0	1	1
2914	320	"arg_2"	"decimal"	9	0	1	2
2915	321	"res_0"	"sec_interval"	13	0	0	0
2916	321	"arg_1"	"sec_interval"	13	0	1	1
2917	321	"arg_2"	"decimal"	9	0	1	2
2918	322	"res_0"	"sec_interval"	13	0	0	0
2919	322	"arg_1"	"sec_interval"	13	0	1	1
2920	322	"arg_2"	"decimal"	9	0	1	2
2921	323	"res_0"	"decimal"	19	0	0	0
2922	323	"arg_1"	"decimal"	19	0	1	1
2923	323	"arg_2"	"decimal"	19	0	1	2
2924	324	"res_0"	"decimal"	19	0	0	0
2925	324	"arg_1"	"decimal"	19	0	1	1
2926	324	"arg_2"	"decimal"	19	0	1	2
2927	325	"res_0"	"decimal"	19	0	0	0
2928	325	"arg_1"	"decimal"	19	0	1	1
2929	325	"arg_2"	"decimal"	19	0	1	2
2930	326	"res_0"	"decimal"	19	0	0	0
2931	326	"arg_1"	"decimal"	19	0	1	1
2932	326	"arg_2"	"decimal"	19	0	1	2
2933	327	"res_0"	"decimal"	19	0	0	0
2934	327	"arg_1"	"decimal"	19	0	1	1
2935	327	"arg_2"	"decimal"	19	0	1	2
2936	328	"res_0"	"decimal"	19	0	0	0
2937	328	"arg_1"	"decimal"	19	0	1	1
2938	328	"arg_2"	"decimal"	19	0	1	2
2939	329	"res_0"	"decimal"	19	0	0	0
2940	329	"arg_1"	"decimal"	19	0	1	1
2941	329	"arg_2"	"decimal"	19	0	1	2
2942	330	"res_0"	"decimal"	19	0	0	0
2943	330	"arg_1"	"decimal"	19	0	1	1
2944	331	"res_0"	"decimal"	19	0	0	0
2945	331	"arg_1"	"decimal"	19	0	1	1
2946	331	"arg_2"	"int"	32	0	1	2
2947	332	"res_0"	"decimal"	19	0	0	0
2948	332	"arg_1"	"decimal"	19	0	1	1
2949	332	"arg_2"	"int"	32	0	1	2
2950	333	"res_0"	"decimal"	19	0	0	0
2951	333	"arg_1"	"decimal"	19	0	1	1
2952	334	"res_0"	"decimal"	19	0	0	0
2953	334	"arg_1"	"decimal"	19	0	1	1
2954	335	"res_0"	"tinyint"	8	0	0	0
2955	335	"arg_1"	"decimal"	19	0	1	1
2956	336	"res_0"	"decimal"	19	0	0	0
2957	336	"arg_1"	"decimal"	19	0	1	1
2958	336	"arg_2"	"bigint"	64	0	1	2
2959	337	"res_0"	"decimal"	19	0	0	0
2960	337	"arg_1"	"decimal"	19	0	1	1
2961	337	"arg_2"	"bigint"	64	0	1	2
2962	338	"res_0"	"month_interval"	32	0	0	0
2963	338	"arg_1"	"month_interval"	32	0	1	1
2964	338	"arg_2"	"decimal"	19	0	1	2
2965	339	"res_0"	"month_interval"	32	0	0	0
2966	339	"arg_1"	"month_interval"	32	0	1	1
2967	339	"arg_2"	"decimal"	19	0	1	2
2968	340	"res_0"	"month_interval"	32	0	0	0
2969	340	"arg_1"	"month_interval"	32	0	1	1
2970	340	"arg_2"	"decimal"	19	0	1	2
2971	341	"res_0"	"month_interval"	32	0	0	0
2972	341	"arg_1"	"month_interval"	32	0	1	1
2973	341	"arg_2"	"decimal"	19	0	1	2
2974	342	"res_0"	"sec_interval"	13	0	0	0
2975	342	"arg_1"	"sec_interval"	13	0	1	1
2976	342	"arg_2"	"decimal"	19	0	1	2
2977	343	"res_0"	"sec_interval"	13	0	0	0
2978	343	"arg_1"	"sec_interval"	13	0	1	1
2979	343	"arg_2"	"decimal"	19	0	1	2
2980	344	"res_0"	"sec_interval"	13	0	0	0
2981	344	"arg_1"	"sec_interval"	13	0	1	1
2982	344	"arg_2"	"decimal"	19	0	1	2
2983	345	"res_0"	"sec_interval"	13	0	0	0
2984	345	"arg_1"	"sec_interval"	13	0	1	1
2985	345	"arg_2"	"decimal"	19	0	1	2
2986	346	"res_0"	"real"	24	0	0	0
2987	346	"arg_1"	"real"	24	0	1	1
2988	346	"arg_2"	"real"	24	0	1	2
2989	347	"res_0"	"real"	24	0	0	0
2990	347	"arg_1"	"real"	24	0	1	1
2991	347	"arg_2"	"real"	24	0	1	2
2992	348	"res_0"	"real"	24	0	0	0
2993	348	"arg_1"	"real"	24	0	1	1
2994	348	"arg_2"	"real"	24	0	1	2
2995	349	"res_0"	"real"	24	0	0	0
2996	349	"arg_1"	"real"	24	0	1	1
2997	349	"arg_2"	"real"	24	0	1	2
2998	350	"res_0"	"real"	24	0	0	0
2999	350	"arg_1"	"real"	24	0	1	1
3000	351	"res_0"	"real"	24	0	0	0
3001	351	"arg_1"	"real"	24	0	1	1
3002	352	"res_0"	"tinyint"	8	0	0	0
3003	352	"arg_1"	"real"	24	0	1	1
3004	353	"res_0"	"real"	24	0	0	0
3005	353	"arg_1"	"real"	24	0	1	1
3006	353	"arg_2"	"real"	24	0	1	2
3007	354	"res_0"	"real"	24	0	0	0
3008	354	"arg_1"	"real"	24	0	1	1
3009	354	"arg_2"	"real"	24	0	1	2
3010	355	"res_0"	"month_interval"	32	0	0	0
3011	355	"arg_1"	"month_interval"	32	0	1	1
3012	355	"arg_2"	"real"	24	0	1	2
3013	356	"res_0"	"month_interval"	32	0	0	0
3014	356	"arg_1"	"month_interval"	32	0	1	1
3015	356	"arg_2"	"real"	24	0	1	2
3016	357	"res_0"	"month_interval"	32	0	0	0
3017	357	"arg_1"	"month_interval"	32	0	1	1
3018	357	"arg_2"	"real"	24	0	1	2
3019	358	"res_0"	"month_interval"	32	0	0	0
3020	358	"arg_1"	"month_interval"	32	0	1	1
3021	358	"arg_2"	"real"	24	0	1	2
3022	359	"res_0"	"sec_interval"	13	0	0	0
3023	359	"arg_1"	"sec_interval"	13	0	1	1
3024	359	"arg_2"	"real"	24	0	1	2
3025	360	"res_0"	"sec_interval"	13	0	0	0
3026	360	"arg_1"	"sec_interval"	13	0	1	1
3027	360	"arg_2"	"real"	24	0	1	2
3028	361	"res_0"	"sec_interval"	13	0	0	0
3029	361	"arg_1"	"sec_interval"	13	0	1	1
3030	361	"arg_2"	"real"	24	0	1	2
3031	362	"res_0"	"sec_interval"	13	0	0	0
3032	362	"arg_1"	"sec_interval"	13	0	1	1
3033	362	"arg_2"	"real"	24	0	1	2
3034	363	"res_0"	"double"	53	0	0	0
3035	363	"arg_1"	"double"	53	0	1	1
3036	363	"arg_2"	"double"	53	0	1	2
3037	364	"res_0"	"double"	53	0	0	0
3038	364	"arg_1"	"double"	53	0	1	1
3039	364	"arg_2"	"double"	53	0	1	2
3040	365	"res_0"	"double"	53	0	0	0
3041	365	"arg_1"	"double"	53	0	1	1
3042	365	"arg_2"	"double"	53	0	1	2
3043	366	"res_0"	"double"	53	0	0	0
3044	366	"arg_1"	"double"	53	0	1	1
3045	366	"arg_2"	"double"	53	0	1	2
3046	367	"res_0"	"double"	53	0	0	0
3047	367	"arg_1"	"double"	53	0	1	1
3048	368	"res_0"	"double"	53	0	0	0
3049	368	"arg_1"	"double"	53	0	1	1
3050	369	"res_0"	"tinyint"	8	0	0	0
3051	369	"arg_1"	"double"	53	0	1	1
3052	370	"res_0"	"double"	53	0	0	0
3053	370	"arg_1"	"double"	53	0	1	1
3054	370	"arg_2"	"double"	53	0	1	2
3055	371	"res_0"	"double"	53	0	0	0
3056	371	"arg_1"	"double"	53	0	1	1
3057	371	"arg_2"	"double"	53	0	1	2
3058	372	"res_0"	"month_interval"	32	0	0	0
3059	372	"arg_1"	"month_interval"	32	0	1	1
3060	372	"arg_2"	"double"	53	0	1	2
3061	373	"res_0"	"month_interval"	32	0	0	0
3062	373	"arg_1"	"month_interval"	32	0	1	1
3063	373	"arg_2"	"double"	53	0	1	2
3064	374	"res_0"	"month_interval"	32	0	0	0
3065	374	"arg_1"	"month_interval"	32	0	1	1
3066	374	"arg_2"	"double"	53	0	1	2
3067	375	"res_0"	"month_interval"	32	0	0	0
3068	375	"arg_1"	"month_interval"	32	0	1	1
3069	375	"arg_2"	"double"	53	0	1	2
3070	376	"res_0"	"sec_interval"	13	0	0	0
3071	376	"arg_1"	"sec_interval"	13	0	1	1
3072	376	"arg_2"	"double"	53	0	1	2
3073	377	"res_0"	"sec_interval"	13	0	0	0
3074	377	"arg_1"	"sec_interval"	13	0	1	1
3075	377	"arg_2"	"double"	53	0	1	2
3076	378	"res_0"	"sec_interval"	13	0	0	0
3077	378	"arg_1"	"sec_interval"	13	0	1	1
3078	378	"arg_2"	"double"	53	0	1	2
3079	379	"res_0"	"sec_interval"	13	0	0	0
3080	379	"arg_1"	"sec_interval"	13	0	1	1
3081	379	"arg_2"	"double"	53	0	1	2
3082	380	"res_0"	"month_interval"	32	0	0	0
3083	380	"arg_1"	"month_interval"	32	0	1	1
3084	380	"arg_2"	"month_interval"	32	0	1	2
3085	381	"res_0"	"month_interval"	32	0	0	0
3086	381	"arg_1"	"month_interval"	32	0	1	1
3087	381	"arg_2"	"month_interval"	32	0	1	2
3088	382	"res_0"	"month_interval"	32	0	0	0
3089	382	"arg_1"	"month_interval"	32	0	1	1
3090	382	"arg_2"	"month_interval"	32	0	1	2
3091	383	"res_0"	"month_interval"	32	0	0	0
3092	383	"arg_1"	"month_interval"	32	0	1	1
3093	383	"arg_2"	"month_interval"	32	0	1	2
3094	384	"res_0"	"month_interval"	32	0	0	0
3095	384	"arg_1"	"month_interval"	32	0	1	1
3096	385	"res_0"	"month_interval"	32	0	0	0
3097	385	"arg_1"	"month_interval"	32	0	1	1
3098	386	"res_0"	"tinyint"	8	0	0	0
3099	386	"arg_1"	"month_interval"	32	0	1	1
3100	387	"res_0"	"month_interval"	32	0	0	0
3101	387	"arg_1"	"month_interval"	32	0	1	1
3102	387	"arg_2"	"int"	32	0	1	2
3103	388	"res_0"	"month_interval"	32	0	0	0
3104	388	"arg_1"	"month_interval"	32	0	1	1
3105	388	"arg_2"	"int"	32	0	1	2
3106	389	"res_0"	"sec_interval"	13	0	0	0
3107	389	"arg_1"	"sec_interval"	13	0	1	1
3108	389	"arg_2"	"sec_interval"	13	0	1	2
3109	390	"res_0"	"sec_interval"	13	0	0	0
3110	390	"arg_1"	"sec_interval"	13	0	1	1
3111	390	"arg_2"	"sec_interval"	13	0	1	2
3112	391	"res_0"	"sec_interval"	13	0	0	0
3113	391	"arg_1"	"sec_interval"	13	0	1	1
3114	391	"arg_2"	"sec_interval"	13	0	1	2
3115	392	"res_0"	"sec_interval"	13	0	0	0
3116	392	"arg_1"	"sec_interval"	13	0	1	1
3117	392	"arg_2"	"sec_interval"	13	0	1	2
3118	393	"res_0"	"sec_interval"	13	0	0	0
3119	393	"arg_1"	"sec_interval"	13	0	1	1
3120	394	"res_0"	"sec_interval"	13	0	0	0
3121	394	"arg_1"	"sec_interval"	13	0	1	1
3122	395	"res_0"	"tinyint"	8	0	0	0
3123	395	"arg_1"	"sec_interval"	13	0	1	1
3124	396	"res_0"	"sec_interval"	13	0	0	0
3125	396	"arg_1"	"sec_interval"	13	0	1	1
3126	396	"arg_2"	"bigint"	64	0	1	2
3127	397	"res_0"	"sec_interval"	13	0	0	0
3128	397	"arg_1"	"sec_interval"	13	0	1	1
3129	397	"arg_2"	"bigint"	64	0	1	2
3130	398	"res_0"	"decimal"	4	0	0	0
3131	398	"arg_1"	"decimal"	4	0	1	1
3132	398	"arg_2"	"tinyint"	8	0	1	2
3133	399	"res_0"	"decimal"	4	0	0	0
3134	399	"arg_1"	"tinyint"	8	0	1	1
3135	399	"arg_2"	"decimal"	4	0	1	2
3136	400	"res_0"	"decimal"	4	0	0	0
3137	400	"arg_1"	"decimal"	4	0	1	1
3138	400	"arg_2"	"decimal"	2	0	1	2
3139	401	"res_0"	"decimal"	4	0	0	0
3140	401	"arg_1"	"decimal"	2	0	1	1
3141	401	"arg_2"	"decimal"	4	0	1	2
3142	402	"res_0"	"decimal"	9	0	0	0
3143	402	"arg_1"	"decimal"	9	0	1	1
3144	402	"arg_2"	"tinyint"	8	0	1	2
3145	403	"res_0"	"decimal"	9	0	0	0
3146	403	"arg_1"	"tinyint"	8	0	1	1
3147	403	"arg_2"	"decimal"	9	0	1	2
3148	404	"res_0"	"decimal"	9	0	0	0
3149	404	"arg_1"	"decimal"	9	0	1	1
3150	404	"arg_2"	"smallint"	16	0	1	2
3151	405	"res_0"	"decimal"	9	0	0	0
3152	405	"arg_1"	"smallint"	16	0	1	1
3153	405	"arg_2"	"decimal"	9	0	1	2
3154	406	"res_0"	"decimal"	9	0	0	0
3155	406	"arg_1"	"decimal"	9	0	1	1
3156	406	"arg_2"	"decimal"	2	0	1	2
3157	407	"res_0"	"decimal"	9	0	0	0
3158	407	"arg_1"	"decimal"	2	0	1	1
3159	407	"arg_2"	"decimal"	9	0	1	2
3160	408	"res_0"	"decimal"	9	0	0	0
3161	408	"arg_1"	"decimal"	9	0	1	1
3162	408	"arg_2"	"decimal"	4	0	1	2
3163	409	"res_0"	"decimal"	9	0	0	0
3164	409	"arg_1"	"decimal"	4	0	1	1
3165	409	"arg_2"	"decimal"	9	0	1	2
3166	410	"res_0"	"decimal"	19	0	0	0
3167	410	"arg_1"	"decimal"	19	0	1	1
3168	410	"arg_2"	"tinyint"	8	0	1	2
3169	411	"res_0"	"decimal"	19	0	0	0
3170	411	"arg_1"	"tinyint"	8	0	1	1
3171	411	"arg_2"	"decimal"	19	0	1	2
3172	412	"res_0"	"decimal"	19	0	0	0
3173	412	"arg_1"	"decimal"	19	0	1	1
3174	412	"arg_2"	"smallint"	16	0	1	2
3175	413	"res_0"	"decimal"	19	0	0	0
3176	413	"arg_1"	"smallint"	16	0	1	1
3177	413	"arg_2"	"decimal"	19	0	1	2
3178	414	"res_0"	"decimal"	19	0	0	0
3179	414	"arg_1"	"decimal"	19	0	1	1
3180	414	"arg_2"	"int"	32	0	1	2
3181	415	"res_0"	"decimal"	19	0	0	0
3182	415	"arg_1"	"int"	32	0	1	1
3183	415	"arg_2"	"decimal"	19	0	1	2
3184	416	"res_0"	"decimal"	19	0	0	0
3185	416	"arg_1"	"decimal"	19	0	1	1
3186	416	"arg_2"	"wrd"	64	0	1	2
3187	417	"res_0"	"decimal"	19	0	0	0
3188	417	"arg_1"	"wrd"	64	0	1	1
3189	417	"arg_2"	"decimal"	19	0	1	2
3190	418	"res_0"	"decimal"	19	0	0	0
3191	418	"arg_1"	"decimal"	19	0	1	1
3192	418	"arg_2"	"decimal"	2	0	1	2
3193	419	"res_0"	"decimal"	19	0	0	0
3194	419	"arg_1"	"decimal"	2	0	1	1
3195	419	"arg_2"	"decimal"	19	0	1	2
3196	420	"res_0"	"decimal"	19	0	0	0
3197	420	"arg_1"	"decimal"	19	0	1	1
3198	420	"arg_2"	"decimal"	4	0	1	2
3199	421	"res_0"	"decimal"	19	0	0	0
3200	421	"arg_1"	"decimal"	4	0	1	1
3201	421	"arg_2"	"decimal"	19	0	1	2
3202	422	"res_0"	"decimal"	19	0	0	0
3203	422	"arg_1"	"decimal"	19	0	1	1
3204	422	"arg_2"	"decimal"	9	0	1	2
3205	423	"res_0"	"decimal"	19	0	0	0
3206	423	"arg_1"	"decimal"	9	0	1	1
3207	423	"arg_2"	"decimal"	19	0	1	2
3208	424	"res_0"	"decimal"	2	0	0	0
3209	424	"arg_1"	"decimal"	2	0	1	1
3210	424	"arg_2"	"tinyint"	8	0	1	2
3211	425	"res_0"	"decimal"	4	0	0	0
3212	425	"arg_1"	"decimal"	4	0	1	1
3213	425	"arg_2"	"tinyint"	8	0	1	2
3214	426	"res_0"	"decimal"	9	0	0	0
3215	426	"arg_1"	"decimal"	9	0	1	1
3216	426	"arg_2"	"tinyint"	8	0	1	2
3217	427	"res_0"	"decimal"	19	0	0	0
3218	427	"arg_1"	"decimal"	19	0	1	1
3219	427	"arg_2"	"tinyint"	8	0	1	2
3220	428	"res_0"	"real"	24	0	0	0
3221	428	"arg_1"	"real"	24	0	1	1
3222	428	"arg_2"	"tinyint"	8	0	1	2
3223	429	"res_0"	"double"	53	0	0	0
3224	429	"arg_1"	"double"	53	0	1	1
3225	429	"arg_2"	"tinyint"	8	0	1	2
3226	430	"res_0"	"oid"	63	0	0	0
3227	430	"arg_1"	"oid"	63	0	1	1
3228	430	"arg_2"	"oid"	63	0	1	2
3229	431	"res_0"	"oid"	63	0	0	0
3230	431	"arg_1"	"tinyint"	8	0	1	1
3231	431	"arg_2"	"oid"	63	0	1	2
3232	432	"res_0"	"oid"	63	0	0	0
3233	432	"arg_1"	"smallint"	16	0	1	1
3234	432	"arg_2"	"oid"	63	0	1	2
3235	433	"res_0"	"oid"	63	0	0	0
3236	433	"arg_1"	"int"	32	0	1	1
3237	433	"arg_2"	"oid"	63	0	1	2
3238	434	"res_0"	"oid"	63	0	0	0
3239	434	"arg_1"	"bigint"	64	0	1	1
3240	434	"arg_2"	"oid"	63	0	1	2
3241	435	"res_0"	"oid"	63	0	0	0
3242	435	"arg_1"	"wrd"	64	0	1	1
3243	435	"arg_2"	"oid"	63	0	1	2
3244	436	"res_0"	"oid"	63	0	0	0
3245	436	"arg_1"	"decimal"	2	0	1	1
3246	436	"arg_2"	"oid"	63	0	1	2
3247	437	"res_0"	"oid"	63	0	0	0
3248	437	"arg_1"	"decimal"	4	0	1	1
3249	437	"arg_2"	"oid"	63	0	1	2
3250	438	"res_0"	"oid"	63	0	0	0
3251	438	"arg_1"	"decimal"	9	0	1	1
3252	438	"arg_2"	"oid"	63	0	1	2
3253	439	"res_0"	"oid"	63	0	0	0
3254	439	"arg_1"	"decimal"	19	0	1	1
3255	439	"arg_2"	"oid"	63	0	1	2
3256	440	"res_0"	"oid"	63	0	0	0
3257	440	"arg_1"	"real"	24	0	1	1
3258	440	"arg_2"	"oid"	63	0	1	2
3259	441	"res_0"	"oid"	63	0	0	0
3260	441	"arg_1"	"double"	53	0	1	1
3261	441	"arg_2"	"oid"	63	0	1	2
3262	442	"res_0"	"oid"	63	0	0	0
3263	442	"arg_1"	"month_interval"	32	0	1	1
3264	442	"arg_2"	"oid"	63	0	1	2
3265	443	"res_0"	"oid"	63	0	0	0
3266	443	"arg_1"	"sec_interval"	13	0	1	1
3267	443	"arg_2"	"oid"	63	0	1	2
3268	444	"res_0"	"oid"	63	0	0	0
3269	444	"arg_1"	"time"	7	0	1	1
3270	444	"arg_2"	"oid"	63	0	1	2
3271	445	"res_0"	"oid"	63	0	0	0
3272	445	"arg_1"	"timetz"	7	0	1	1
3273	445	"arg_2"	"oid"	63	0	1	2
3274	446	"res_0"	"oid"	63	0	0	0
3275	446	"arg_1"	"date"	0	0	1	1
3276	446	"arg_2"	"oid"	63	0	1	2
3277	447	"res_0"	"oid"	63	0	0	0
3278	447	"arg_1"	"timestamp"	7	0	1	1
3279	447	"arg_2"	"oid"	63	0	1	2
3280	448	"res_0"	"oid"	63	0	0	0
3281	448	"arg_1"	"timestamptz"	7	0	1	1
3282	448	"arg_2"	"oid"	63	0	1	2
3283	449	"res_0"	"oid"	63	0	0	0
3284	449	"arg_1"	"blob"	0	0	1	1
3285	449	"arg_2"	"oid"	63	0	1	2
3286	450	"res_0"	"tinyint"	8	0	0	0
3287	450	"arg_1"	"oid"	63	0	1	1
3288	450	"arg_2"	"tinyint"	8	0	1	2
3289	451	"res_0"	"tinyint"	8	0	0	0
3290	451	"arg_1"	"tinyint"	8	0	1	1
3291	451	"arg_2"	"tinyint"	8	0	1	2
3292	452	"res_0"	"tinyint"	8	0	0	0
3293	452	"arg_1"	"smallint"	16	0	1	1
3294	452	"arg_2"	"tinyint"	8	0	1	2
3295	453	"res_0"	"tinyint"	8	0	0	0
3296	453	"arg_1"	"int"	32	0	1	1
3297	453	"arg_2"	"tinyint"	8	0	1	2
3298	454	"res_0"	"tinyint"	8	0	0	0
3299	454	"arg_1"	"bigint"	64	0	1	1
3300	454	"arg_2"	"tinyint"	8	0	1	2
3301	455	"res_0"	"tinyint"	8	0	0	0
3302	455	"arg_1"	"wrd"	64	0	1	1
3303	455	"arg_2"	"tinyint"	8	0	1	2
3304	456	"res_0"	"tinyint"	8	0	0	0
3305	456	"arg_1"	"decimal"	2	0	1	1
3306	456	"arg_2"	"tinyint"	8	0	1	2
3307	457	"res_0"	"tinyint"	8	0	0	0
3308	457	"arg_1"	"decimal"	4	0	1	1
3309	457	"arg_2"	"tinyint"	8	0	1	2
3310	458	"res_0"	"tinyint"	8	0	0	0
3311	458	"arg_1"	"decimal"	9	0	1	1
3312	458	"arg_2"	"tinyint"	8	0	1	2
3313	459	"res_0"	"tinyint"	8	0	0	0
3314	459	"arg_1"	"decimal"	19	0	1	1
3315	459	"arg_2"	"tinyint"	8	0	1	2
3316	460	"res_0"	"tinyint"	8	0	0	0
3317	460	"arg_1"	"real"	24	0	1	1
3318	460	"arg_2"	"tinyint"	8	0	1	2
3319	461	"res_0"	"tinyint"	8	0	0	0
3320	461	"arg_1"	"double"	53	0	1	1
3321	461	"arg_2"	"tinyint"	8	0	1	2
3322	462	"res_0"	"tinyint"	8	0	0	0
3323	462	"arg_1"	"month_interval"	32	0	1	1
3324	462	"arg_2"	"tinyint"	8	0	1	2
3325	463	"res_0"	"tinyint"	8	0	0	0
3326	463	"arg_1"	"sec_interval"	13	0	1	1
3327	463	"arg_2"	"tinyint"	8	0	1	2
3328	464	"res_0"	"tinyint"	8	0	0	0
3329	464	"arg_1"	"time"	7	0	1	1
3330	464	"arg_2"	"tinyint"	8	0	1	2
3331	465	"res_0"	"tinyint"	8	0	0	0
3332	465	"arg_1"	"timetz"	7	0	1	1
3333	465	"arg_2"	"tinyint"	8	0	1	2
3334	466	"res_0"	"tinyint"	8	0	0	0
3335	466	"arg_1"	"date"	0	0	1	1
3336	466	"arg_2"	"tinyint"	8	0	1	2
3337	467	"res_0"	"tinyint"	8	0	0	0
3338	467	"arg_1"	"timestamp"	7	0	1	1
3339	467	"arg_2"	"tinyint"	8	0	1	2
3340	468	"res_0"	"tinyint"	8	0	0	0
3341	468	"arg_1"	"timestamptz"	7	0	1	1
3342	468	"arg_2"	"tinyint"	8	0	1	2
3343	469	"res_0"	"tinyint"	8	0	0	0
3344	469	"arg_1"	"blob"	0	0	1	1
3345	469	"arg_2"	"tinyint"	8	0	1	2
3346	470	"res_0"	"smallint"	16	0	0	0
3347	470	"arg_1"	"oid"	63	0	1	1
3348	470	"arg_2"	"smallint"	16	0	1	2
3349	471	"res_0"	"smallint"	16	0	0	0
3350	471	"arg_1"	"tinyint"	8	0	1	1
3351	471	"arg_2"	"smallint"	16	0	1	2
3352	472	"res_0"	"smallint"	16	0	0	0
3353	472	"arg_1"	"smallint"	16	0	1	1
3354	472	"arg_2"	"smallint"	16	0	1	2
3355	473	"res_0"	"smallint"	16	0	0	0
3356	473	"arg_1"	"int"	32	0	1	1
3357	473	"arg_2"	"smallint"	16	0	1	2
3358	474	"res_0"	"smallint"	16	0	0	0
3359	474	"arg_1"	"bigint"	64	0	1	1
3360	474	"arg_2"	"smallint"	16	0	1	2
3361	475	"res_0"	"smallint"	16	0	0	0
3362	475	"arg_1"	"wrd"	64	0	1	1
3363	475	"arg_2"	"smallint"	16	0	1	2
3364	476	"res_0"	"smallint"	16	0	0	0
3365	476	"arg_1"	"decimal"	2	0	1	1
3366	476	"arg_2"	"smallint"	16	0	1	2
3367	477	"res_0"	"smallint"	16	0	0	0
3368	477	"arg_1"	"decimal"	4	0	1	1
3369	477	"arg_2"	"smallint"	16	0	1	2
3370	478	"res_0"	"smallint"	16	0	0	0
3371	478	"arg_1"	"decimal"	9	0	1	1
3372	478	"arg_2"	"smallint"	16	0	1	2
3373	479	"res_0"	"smallint"	16	0	0	0
3374	479	"arg_1"	"decimal"	19	0	1	1
3375	479	"arg_2"	"smallint"	16	0	1	2
3376	480	"res_0"	"smallint"	16	0	0	0
3377	480	"arg_1"	"real"	24	0	1	1
3378	480	"arg_2"	"smallint"	16	0	1	2
3379	481	"res_0"	"smallint"	16	0	0	0
3380	481	"arg_1"	"double"	53	0	1	1
3381	481	"arg_2"	"smallint"	16	0	1	2
3382	482	"res_0"	"smallint"	16	0	0	0
3383	482	"arg_1"	"month_interval"	32	0	1	1
3384	482	"arg_2"	"smallint"	16	0	1	2
3385	483	"res_0"	"smallint"	16	0	0	0
3386	483	"arg_1"	"sec_interval"	13	0	1	1
3387	483	"arg_2"	"smallint"	16	0	1	2
3388	484	"res_0"	"smallint"	16	0	0	0
3389	484	"arg_1"	"time"	7	0	1	1
3390	484	"arg_2"	"smallint"	16	0	1	2
3391	485	"res_0"	"smallint"	16	0	0	0
3392	485	"arg_1"	"timetz"	7	0	1	1
3393	485	"arg_2"	"smallint"	16	0	1	2
3394	486	"res_0"	"smallint"	16	0	0	0
3395	486	"arg_1"	"date"	0	0	1	1
3396	486	"arg_2"	"smallint"	16	0	1	2
3397	487	"res_0"	"smallint"	16	0	0	0
3398	487	"arg_1"	"timestamp"	7	0	1	1
3399	487	"arg_2"	"smallint"	16	0	1	2
3400	488	"res_0"	"smallint"	16	0	0	0
3401	488	"arg_1"	"timestamptz"	7	0	1	1
3402	488	"arg_2"	"smallint"	16	0	1	2
3403	489	"res_0"	"smallint"	16	0	0	0
3404	489	"arg_1"	"blob"	0	0	1	1
3405	489	"arg_2"	"smallint"	16	0	1	2
3406	490	"res_0"	"int"	32	0	0	0
3407	490	"arg_1"	"oid"	63	0	1	1
3408	490	"arg_2"	"int"	32	0	1	2
3409	491	"res_0"	"int"	32	0	0	0
3410	491	"arg_1"	"tinyint"	8	0	1	1
3411	491	"arg_2"	"int"	32	0	1	2
3412	492	"res_0"	"int"	32	0	0	0
3413	492	"arg_1"	"smallint"	16	0	1	1
3414	492	"arg_2"	"int"	32	0	1	2
3415	493	"res_0"	"int"	32	0	0	0
3416	493	"arg_1"	"int"	32	0	1	1
3417	493	"arg_2"	"int"	32	0	1	2
3418	494	"res_0"	"int"	32	0	0	0
3419	494	"arg_1"	"bigint"	64	0	1	1
3420	494	"arg_2"	"int"	32	0	1	2
3421	495	"res_0"	"int"	32	0	0	0
3422	495	"arg_1"	"wrd"	64	0	1	1
3423	495	"arg_2"	"int"	32	0	1	2
3424	496	"res_0"	"int"	32	0	0	0
3425	496	"arg_1"	"decimal"	2	0	1	1
3426	496	"arg_2"	"int"	32	0	1	2
3427	497	"res_0"	"int"	32	0	0	0
3428	497	"arg_1"	"decimal"	4	0	1	1
3429	497	"arg_2"	"int"	32	0	1	2
3430	498	"res_0"	"int"	32	0	0	0
3431	498	"arg_1"	"decimal"	9	0	1	1
3432	498	"arg_2"	"int"	32	0	1	2
3433	499	"res_0"	"int"	32	0	0	0
3434	499	"arg_1"	"decimal"	19	0	1	1
3435	499	"arg_2"	"int"	32	0	1	2
3436	500	"res_0"	"int"	32	0	0	0
3437	500	"arg_1"	"real"	24	0	1	1
3438	500	"arg_2"	"int"	32	0	1	2
3439	501	"res_0"	"int"	32	0	0	0
3440	501	"arg_1"	"double"	53	0	1	1
3441	501	"arg_2"	"int"	32	0	1	2
3442	502	"res_0"	"int"	32	0	0	0
3443	502	"arg_1"	"month_interval"	32	0	1	1
3444	502	"arg_2"	"int"	32	0	1	2
3445	503	"res_0"	"int"	32	0	0	0
3446	503	"arg_1"	"sec_interval"	13	0	1	1
3447	503	"arg_2"	"int"	32	0	1	2
3448	504	"res_0"	"int"	32	0	0	0
3449	504	"arg_1"	"time"	7	0	1	1
3450	504	"arg_2"	"int"	32	0	1	2
3451	505	"res_0"	"int"	32	0	0	0
3452	505	"arg_1"	"timetz"	7	0	1	1
3453	505	"arg_2"	"int"	32	0	1	2
3454	506	"res_0"	"int"	32	0	0	0
3455	506	"arg_1"	"date"	0	0	1	1
3456	506	"arg_2"	"int"	32	0	1	2
3457	507	"res_0"	"int"	32	0	0	0
3458	507	"arg_1"	"timestamp"	7	0	1	1
3459	507	"arg_2"	"int"	32	0	1	2
3460	508	"res_0"	"int"	32	0	0	0
3461	508	"arg_1"	"timestamptz"	7	0	1	1
3462	508	"arg_2"	"int"	32	0	1	2
3463	509	"res_0"	"int"	32	0	0	0
3464	509	"arg_1"	"blob"	0	0	1	1
3465	509	"arg_2"	"int"	32	0	1	2
3466	510	"res_0"	"bigint"	64	0	0	0
3467	510	"arg_1"	"oid"	63	0	1	1
3468	510	"arg_2"	"bigint"	64	0	1	2
3469	511	"res_0"	"bigint"	64	0	0	0
3470	511	"arg_1"	"tinyint"	8	0	1	1
3471	511	"arg_2"	"bigint"	64	0	1	2
3472	512	"res_0"	"bigint"	64	0	0	0
3473	512	"arg_1"	"smallint"	16	0	1	1
3474	512	"arg_2"	"bigint"	64	0	1	2
3475	513	"res_0"	"bigint"	64	0	0	0
3476	513	"arg_1"	"int"	32	0	1	1
3477	513	"arg_2"	"bigint"	64	0	1	2
3478	514	"res_0"	"bigint"	64	0	0	0
3479	514	"arg_1"	"bigint"	64	0	1	1
3480	514	"arg_2"	"bigint"	64	0	1	2
3481	515	"res_0"	"bigint"	64	0	0	0
3482	515	"arg_1"	"wrd"	64	0	1	1
3483	515	"arg_2"	"bigint"	64	0	1	2
3484	516	"res_0"	"bigint"	64	0	0	0
3485	516	"arg_1"	"decimal"	2	0	1	1
3486	516	"arg_2"	"bigint"	64	0	1	2
3487	517	"res_0"	"bigint"	64	0	0	0
3488	517	"arg_1"	"decimal"	4	0	1	1
3489	517	"arg_2"	"bigint"	64	0	1	2
3490	518	"res_0"	"bigint"	64	0	0	0
3491	518	"arg_1"	"decimal"	9	0	1	1
3492	518	"arg_2"	"bigint"	64	0	1	2
3493	519	"res_0"	"bigint"	64	0	0	0
3494	519	"arg_1"	"decimal"	19	0	1	1
3495	519	"arg_2"	"bigint"	64	0	1	2
3496	520	"res_0"	"bigint"	64	0	0	0
3497	520	"arg_1"	"real"	24	0	1	1
3498	520	"arg_2"	"bigint"	64	0	1	2
3499	521	"res_0"	"bigint"	64	0	0	0
3500	521	"arg_1"	"double"	53	0	1	1
3501	521	"arg_2"	"bigint"	64	0	1	2
3502	522	"res_0"	"bigint"	64	0	0	0
3503	522	"arg_1"	"month_interval"	32	0	1	1
3504	522	"arg_2"	"bigint"	64	0	1	2
3505	523	"res_0"	"bigint"	64	0	0	0
3506	523	"arg_1"	"sec_interval"	13	0	1	1
3507	523	"arg_2"	"bigint"	64	0	1	2
3508	524	"res_0"	"bigint"	64	0	0	0
3509	524	"arg_1"	"time"	7	0	1	1
3510	524	"arg_2"	"bigint"	64	0	1	2
3511	525	"res_0"	"bigint"	64	0	0	0
3512	525	"arg_1"	"timetz"	7	0	1	1
3513	525	"arg_2"	"bigint"	64	0	1	2
3514	526	"res_0"	"bigint"	64	0	0	0
3515	526	"arg_1"	"date"	0	0	1	1
3516	526	"arg_2"	"bigint"	64	0	1	2
3517	527	"res_0"	"bigint"	64	0	0	0
3518	527	"arg_1"	"timestamp"	7	0	1	1
3519	527	"arg_2"	"bigint"	64	0	1	2
3520	528	"res_0"	"bigint"	64	0	0	0
3521	528	"arg_1"	"timestamptz"	7	0	1	1
3522	528	"arg_2"	"bigint"	64	0	1	2
3523	529	"res_0"	"bigint"	64	0	0	0
3524	529	"arg_1"	"blob"	0	0	1	1
3525	529	"arg_2"	"bigint"	64	0	1	2
3526	530	"res_0"	"wrd"	64	0	0	0
3527	530	"arg_1"	"oid"	63	0	1	1
3528	530	"arg_2"	"wrd"	64	0	1	2
3529	531	"res_0"	"wrd"	64	0	0	0
3530	531	"arg_1"	"tinyint"	8	0	1	1
3531	531	"arg_2"	"wrd"	64	0	1	2
3532	532	"res_0"	"wrd"	64	0	0	0
3533	532	"arg_1"	"smallint"	16	0	1	1
3534	532	"arg_2"	"wrd"	64	0	1	2
3535	533	"res_0"	"wrd"	64	0	0	0
3536	533	"arg_1"	"int"	32	0	1	1
3537	533	"arg_2"	"wrd"	64	0	1	2
3538	534	"res_0"	"wrd"	64	0	0	0
3539	534	"arg_1"	"bigint"	64	0	1	1
3540	534	"arg_2"	"wrd"	64	0	1	2
3541	535	"res_0"	"wrd"	64	0	0	0
3542	535	"arg_1"	"wrd"	64	0	1	1
3543	535	"arg_2"	"wrd"	64	0	1	2
3544	536	"res_0"	"wrd"	64	0	0	0
3545	536	"arg_1"	"decimal"	2	0	1	1
3546	536	"arg_2"	"wrd"	64	0	1	2
3547	537	"res_0"	"wrd"	64	0	0	0
3548	537	"arg_1"	"decimal"	4	0	1	1
3549	537	"arg_2"	"wrd"	64	0	1	2
3550	538	"res_0"	"wrd"	64	0	0	0
3551	538	"arg_1"	"decimal"	9	0	1	1
3552	538	"arg_2"	"wrd"	64	0	1	2
3553	539	"res_0"	"wrd"	64	0	0	0
3554	539	"arg_1"	"decimal"	19	0	1	1
3555	539	"arg_2"	"wrd"	64	0	1	2
3556	540	"res_0"	"wrd"	64	0	0	0
3557	540	"arg_1"	"real"	24	0	1	1
3558	540	"arg_2"	"wrd"	64	0	1	2
3559	541	"res_0"	"wrd"	64	0	0	0
3560	541	"arg_1"	"double"	53	0	1	1
3561	541	"arg_2"	"wrd"	64	0	1	2
3562	542	"res_0"	"wrd"	64	0	0	0
3563	542	"arg_1"	"month_interval"	32	0	1	1
3564	542	"arg_2"	"wrd"	64	0	1	2
3565	543	"res_0"	"wrd"	64	0	0	0
3566	543	"arg_1"	"sec_interval"	13	0	1	1
3567	543	"arg_2"	"wrd"	64	0	1	2
3568	544	"res_0"	"wrd"	64	0	0	0
3569	544	"arg_1"	"time"	7	0	1	1
3570	544	"arg_2"	"wrd"	64	0	1	2
3571	545	"res_0"	"wrd"	64	0	0	0
3572	545	"arg_1"	"timetz"	7	0	1	1
3573	545	"arg_2"	"wrd"	64	0	1	2
3574	546	"res_0"	"wrd"	64	0	0	0
3575	546	"arg_1"	"date"	0	0	1	1
3576	546	"arg_2"	"wrd"	64	0	1	2
3577	547	"res_0"	"wrd"	64	0	0	0
3578	547	"arg_1"	"timestamp"	7	0	1	1
3579	547	"arg_2"	"wrd"	64	0	1	2
3580	548	"res_0"	"wrd"	64	0	0	0
3581	548	"arg_1"	"timestamptz"	7	0	1	1
3582	548	"arg_2"	"wrd"	64	0	1	2
3583	549	"res_0"	"wrd"	64	0	0	0
3584	549	"arg_1"	"blob"	0	0	1	1
3585	549	"arg_2"	"wrd"	64	0	1	2
3586	550	"res_0"	"decimal"	2	0	0	0
3587	550	"arg_1"	"oid"	63	0	1	1
3588	550	"arg_2"	"decimal"	2	0	1	2
3589	551	"res_0"	"decimal"	2	0	0	0
3590	551	"arg_1"	"tinyint"	8	0	1	1
3591	551	"arg_2"	"decimal"	2	0	1	2
3592	552	"res_0"	"decimal"	2	0	0	0
3593	552	"arg_1"	"smallint"	16	0	1	1
3594	552	"arg_2"	"decimal"	2	0	1	2
3595	553	"res_0"	"decimal"	2	0	0	0
3596	553	"arg_1"	"int"	32	0	1	1
3597	553	"arg_2"	"decimal"	2	0	1	2
3598	554	"res_0"	"decimal"	2	0	0	0
3599	554	"arg_1"	"bigint"	64	0	1	1
3600	554	"arg_2"	"decimal"	2	0	1	2
3601	555	"res_0"	"decimal"	2	0	0	0
3602	555	"arg_1"	"wrd"	64	0	1	1
3603	555	"arg_2"	"decimal"	2	0	1	2
3604	556	"res_0"	"decimal"	2	0	0	0
3605	556	"arg_1"	"decimal"	2	0	1	1
3606	556	"arg_2"	"decimal"	2	0	1	2
3607	557	"res_0"	"decimal"	2	0	0	0
3608	557	"arg_1"	"decimal"	4	0	1	1
3609	557	"arg_2"	"decimal"	2	0	1	2
3610	558	"res_0"	"decimal"	2	0	0	0
3611	558	"arg_1"	"decimal"	9	0	1	1
3612	558	"arg_2"	"decimal"	2	0	1	2
3613	559	"res_0"	"decimal"	2	0	0	0
3614	559	"arg_1"	"decimal"	19	0	1	1
3615	559	"arg_2"	"decimal"	2	0	1	2
3616	560	"res_0"	"decimal"	2	0	0	0
3617	560	"arg_1"	"real"	24	0	1	1
3618	560	"arg_2"	"decimal"	2	0	1	2
3619	561	"res_0"	"decimal"	2	0	0	0
3620	561	"arg_1"	"double"	53	0	1	1
3621	561	"arg_2"	"decimal"	2	0	1	2
3622	562	"res_0"	"decimal"	2	0	0	0
3623	562	"arg_1"	"month_interval"	32	0	1	1
3624	562	"arg_2"	"decimal"	2	0	1	2
3625	563	"res_0"	"decimal"	2	0	0	0
3626	563	"arg_1"	"sec_interval"	13	0	1	1
3627	563	"arg_2"	"decimal"	2	0	1	2
3628	564	"res_0"	"decimal"	2	0	0	0
3629	564	"arg_1"	"time"	7	0	1	1
3630	564	"arg_2"	"decimal"	2	0	1	2
3631	565	"res_0"	"decimal"	2	0	0	0
3632	565	"arg_1"	"timetz"	7	0	1	1
3633	565	"arg_2"	"decimal"	2	0	1	2
3634	566	"res_0"	"decimal"	2	0	0	0
3635	566	"arg_1"	"date"	0	0	1	1
3636	566	"arg_2"	"decimal"	2	0	1	2
3637	567	"res_0"	"decimal"	2	0	0	0
3638	567	"arg_1"	"timestamp"	7	0	1	1
3639	567	"arg_2"	"decimal"	2	0	1	2
3640	568	"res_0"	"decimal"	2	0	0	0
3641	568	"arg_1"	"timestamptz"	7	0	1	1
3642	568	"arg_2"	"decimal"	2	0	1	2
3643	569	"res_0"	"decimal"	2	0	0	0
3644	569	"arg_1"	"blob"	0	0	1	1
3645	569	"arg_2"	"decimal"	2	0	1	2
3646	570	"res_0"	"decimal"	4	0	0	0
3647	570	"arg_1"	"oid"	63	0	1	1
3648	570	"arg_2"	"decimal"	4	0	1	2
3649	571	"res_0"	"decimal"	4	0	0	0
3650	571	"arg_1"	"tinyint"	8	0	1	1
3651	571	"arg_2"	"decimal"	4	0	1	2
3652	572	"res_0"	"decimal"	4	0	0	0
3653	572	"arg_1"	"smallint"	16	0	1	1
3654	572	"arg_2"	"decimal"	4	0	1	2
3655	573	"res_0"	"decimal"	4	0	0	0
3656	573	"arg_1"	"int"	32	0	1	1
3657	573	"arg_2"	"decimal"	4	0	1	2
3658	574	"res_0"	"decimal"	4	0	0	0
3659	574	"arg_1"	"bigint"	64	0	1	1
3660	574	"arg_2"	"decimal"	4	0	1	2
3661	575	"res_0"	"decimal"	4	0	0	0
3662	575	"arg_1"	"wrd"	64	0	1	1
3663	575	"arg_2"	"decimal"	4	0	1	2
3664	576	"res_0"	"decimal"	4	0	0	0
3665	576	"arg_1"	"decimal"	2	0	1	1
3666	576	"arg_2"	"decimal"	4	0	1	2
3667	577	"res_0"	"decimal"	4	0	0	0
3668	577	"arg_1"	"decimal"	4	0	1	1
3669	577	"arg_2"	"decimal"	4	0	1	2
3670	578	"res_0"	"decimal"	4	0	0	0
3671	578	"arg_1"	"decimal"	9	0	1	1
3672	578	"arg_2"	"decimal"	4	0	1	2
3673	579	"res_0"	"decimal"	4	0	0	0
3674	579	"arg_1"	"decimal"	19	0	1	1
3675	579	"arg_2"	"decimal"	4	0	1	2
3676	580	"res_0"	"decimal"	4	0	0	0
3677	580	"arg_1"	"real"	24	0	1	1
3678	580	"arg_2"	"decimal"	4	0	1	2
3679	581	"res_0"	"decimal"	4	0	0	0
3680	581	"arg_1"	"double"	53	0	1	1
3681	581	"arg_2"	"decimal"	4	0	1	2
3682	582	"res_0"	"decimal"	4	0	0	0
3683	582	"arg_1"	"month_interval"	32	0	1	1
3684	582	"arg_2"	"decimal"	4	0	1	2
3685	583	"res_0"	"decimal"	4	0	0	0
3686	583	"arg_1"	"sec_interval"	13	0	1	1
3687	583	"arg_2"	"decimal"	4	0	1	2
3688	584	"res_0"	"decimal"	4	0	0	0
3689	584	"arg_1"	"time"	7	0	1	1
3690	584	"arg_2"	"decimal"	4	0	1	2
3691	585	"res_0"	"decimal"	4	0	0	0
3692	585	"arg_1"	"timetz"	7	0	1	1
3693	585	"arg_2"	"decimal"	4	0	1	2
3694	586	"res_0"	"decimal"	4	0	0	0
3695	586	"arg_1"	"date"	0	0	1	1
3696	586	"arg_2"	"decimal"	4	0	1	2
3697	587	"res_0"	"decimal"	4	0	0	0
3698	587	"arg_1"	"timestamp"	7	0	1	1
3699	587	"arg_2"	"decimal"	4	0	1	2
3700	588	"res_0"	"decimal"	4	0	0	0
3701	588	"arg_1"	"timestamptz"	7	0	1	1
3702	588	"arg_2"	"decimal"	4	0	1	2
3703	589	"res_0"	"decimal"	4	0	0	0
3704	589	"arg_1"	"blob"	0	0	1	1
3705	589	"arg_2"	"decimal"	4	0	1	2
3706	590	"res_0"	"decimal"	9	0	0	0
3707	590	"arg_1"	"oid"	63	0	1	1
3708	590	"arg_2"	"decimal"	9	0	1	2
3709	591	"res_0"	"decimal"	9	0	0	0
3710	591	"arg_1"	"tinyint"	8	0	1	1
3711	591	"arg_2"	"decimal"	9	0	1	2
3712	592	"res_0"	"decimal"	9	0	0	0
3713	592	"arg_1"	"smallint"	16	0	1	1
3714	592	"arg_2"	"decimal"	9	0	1	2
3715	593	"res_0"	"decimal"	9	0	0	0
3716	593	"arg_1"	"int"	32	0	1	1
3717	593	"arg_2"	"decimal"	9	0	1	2
3718	594	"res_0"	"decimal"	9	0	0	0
3719	594	"arg_1"	"bigint"	64	0	1	1
3720	594	"arg_2"	"decimal"	9	0	1	2
3721	595	"res_0"	"decimal"	9	0	0	0
3722	595	"arg_1"	"wrd"	64	0	1	1
3723	595	"arg_2"	"decimal"	9	0	1	2
3724	596	"res_0"	"decimal"	9	0	0	0
3725	596	"arg_1"	"decimal"	2	0	1	1
3726	596	"arg_2"	"decimal"	9	0	1	2
3727	597	"res_0"	"decimal"	9	0	0	0
3728	597	"arg_1"	"decimal"	4	0	1	1
3729	597	"arg_2"	"decimal"	9	0	1	2
3730	598	"res_0"	"decimal"	9	0	0	0
3731	598	"arg_1"	"decimal"	9	0	1	1
3732	598	"arg_2"	"decimal"	9	0	1	2
3733	599	"res_0"	"decimal"	9	0	0	0
3734	599	"arg_1"	"decimal"	19	0	1	1
3735	599	"arg_2"	"decimal"	9	0	1	2
3736	600	"res_0"	"decimal"	9	0	0	0
3737	600	"arg_1"	"real"	24	0	1	1
3738	600	"arg_2"	"decimal"	9	0	1	2
3739	601	"res_0"	"decimal"	9	0	0	0
3740	601	"arg_1"	"double"	53	0	1	1
3741	601	"arg_2"	"decimal"	9	0	1	2
3742	602	"res_0"	"decimal"	9	0	0	0
3743	602	"arg_1"	"month_interval"	32	0	1	1
3744	602	"arg_2"	"decimal"	9	0	1	2
3745	603	"res_0"	"decimal"	9	0	0	0
3746	603	"arg_1"	"sec_interval"	13	0	1	1
3747	603	"arg_2"	"decimal"	9	0	1	2
3748	604	"res_0"	"decimal"	9	0	0	0
3749	604	"arg_1"	"time"	7	0	1	1
3750	604	"arg_2"	"decimal"	9	0	1	2
3751	605	"res_0"	"decimal"	9	0	0	0
3752	605	"arg_1"	"timetz"	7	0	1	1
3753	605	"arg_2"	"decimal"	9	0	1	2
3754	606	"res_0"	"decimal"	9	0	0	0
3755	606	"arg_1"	"date"	0	0	1	1
3756	606	"arg_2"	"decimal"	9	0	1	2
3757	607	"res_0"	"decimal"	9	0	0	0
3758	607	"arg_1"	"timestamp"	7	0	1	1
3759	607	"arg_2"	"decimal"	9	0	1	2
3760	608	"res_0"	"decimal"	9	0	0	0
3761	608	"arg_1"	"timestamptz"	7	0	1	1
3762	608	"arg_2"	"decimal"	9	0	1	2
3763	609	"res_0"	"decimal"	9	0	0	0
3764	609	"arg_1"	"blob"	0	0	1	1
3765	609	"arg_2"	"decimal"	9	0	1	2
3766	610	"res_0"	"decimal"	19	0	0	0
3767	610	"arg_1"	"oid"	63	0	1	1
3768	610	"arg_2"	"decimal"	19	0	1	2
3769	611	"res_0"	"decimal"	19	0	0	0
3770	611	"arg_1"	"tinyint"	8	0	1	1
3771	611	"arg_2"	"decimal"	19	0	1	2
3772	612	"res_0"	"decimal"	19	0	0	0
3773	612	"arg_1"	"smallint"	16	0	1	1
3774	612	"arg_2"	"decimal"	19	0	1	2
3775	613	"res_0"	"decimal"	19	0	0	0
3776	613	"arg_1"	"int"	32	0	1	1
3777	613	"arg_2"	"decimal"	19	0	1	2
3778	614	"res_0"	"decimal"	19	0	0	0
3779	614	"arg_1"	"bigint"	64	0	1	1
3780	614	"arg_2"	"decimal"	19	0	1	2
3781	615	"res_0"	"decimal"	19	0	0	0
3782	615	"arg_1"	"wrd"	64	0	1	1
3783	615	"arg_2"	"decimal"	19	0	1	2
3784	616	"res_0"	"decimal"	19	0	0	0
3785	616	"arg_1"	"decimal"	2	0	1	1
3786	616	"arg_2"	"decimal"	19	0	1	2
3787	617	"res_0"	"decimal"	19	0	0	0
3788	617	"arg_1"	"decimal"	4	0	1	1
3789	617	"arg_2"	"decimal"	19	0	1	2
3790	618	"res_0"	"decimal"	19	0	0	0
3791	618	"arg_1"	"decimal"	9	0	1	1
3792	618	"arg_2"	"decimal"	19	0	1	2
3793	619	"res_0"	"decimal"	19	0	0	0
3794	619	"arg_1"	"decimal"	19	0	1	1
3795	619	"arg_2"	"decimal"	19	0	1	2
3796	620	"res_0"	"decimal"	19	0	0	0
3797	620	"arg_1"	"real"	24	0	1	1
3798	620	"arg_2"	"decimal"	19	0	1	2
3799	621	"res_0"	"decimal"	19	0	0	0
3800	621	"arg_1"	"double"	53	0	1	1
3801	621	"arg_2"	"decimal"	19	0	1	2
3802	622	"res_0"	"decimal"	19	0	0	0
3803	622	"arg_1"	"month_interval"	32	0	1	1
3804	622	"arg_2"	"decimal"	19	0	1	2
3805	623	"res_0"	"decimal"	19	0	0	0
3806	623	"arg_1"	"sec_interval"	13	0	1	1
3807	623	"arg_2"	"decimal"	19	0	1	2
3808	624	"res_0"	"decimal"	19	0	0	0
3809	624	"arg_1"	"time"	7	0	1	1
3810	624	"arg_2"	"decimal"	19	0	1	2
3811	625	"res_0"	"decimal"	19	0	0	0
3812	625	"arg_1"	"timetz"	7	0	1	1
3813	625	"arg_2"	"decimal"	19	0	1	2
3814	626	"res_0"	"decimal"	19	0	0	0
3815	626	"arg_1"	"date"	0	0	1	1
3816	626	"arg_2"	"decimal"	19	0	1	2
3817	627	"res_0"	"decimal"	19	0	0	0
3818	627	"arg_1"	"timestamp"	7	0	1	1
3819	627	"arg_2"	"decimal"	19	0	1	2
3820	628	"res_0"	"decimal"	19	0	0	0
3821	628	"arg_1"	"timestamptz"	7	0	1	1
3822	628	"arg_2"	"decimal"	19	0	1	2
3823	629	"res_0"	"decimal"	19	0	0	0
3824	629	"arg_1"	"blob"	0	0	1	1
3825	629	"arg_2"	"decimal"	19	0	1	2
3826	630	"res_0"	"real"	24	0	0	0
3827	630	"arg_1"	"oid"	63	0	1	1
3828	630	"arg_2"	"real"	24	0	1	2
3829	631	"res_0"	"real"	24	0	0	0
3830	631	"arg_1"	"tinyint"	8	0	1	1
3831	631	"arg_2"	"real"	24	0	1	2
3832	632	"res_0"	"real"	24	0	0	0
3833	632	"arg_1"	"smallint"	16	0	1	1
3834	632	"arg_2"	"real"	24	0	1	2
3835	633	"res_0"	"real"	24	0	0	0
3836	633	"arg_1"	"int"	32	0	1	1
3837	633	"arg_2"	"real"	24	0	1	2
3838	634	"res_0"	"real"	24	0	0	0
3839	634	"arg_1"	"bigint"	64	0	1	1
3840	634	"arg_2"	"real"	24	0	1	2
3841	635	"res_0"	"real"	24	0	0	0
3842	635	"arg_1"	"wrd"	64	0	1	1
3843	635	"arg_2"	"real"	24	0	1	2
3844	636	"res_0"	"real"	24	0	0	0
3845	636	"arg_1"	"decimal"	2	0	1	1
3846	636	"arg_2"	"real"	24	0	1	2
3847	637	"res_0"	"real"	24	0	0	0
3848	637	"arg_1"	"decimal"	4	0	1	1
3849	637	"arg_2"	"real"	24	0	1	2
3850	638	"res_0"	"real"	24	0	0	0
3851	638	"arg_1"	"decimal"	9	0	1	1
3852	638	"arg_2"	"real"	24	0	1	2
3853	639	"res_0"	"real"	24	0	0	0
3854	639	"arg_1"	"decimal"	19	0	1	1
3855	639	"arg_2"	"real"	24	0	1	2
3856	640	"res_0"	"real"	24	0	0	0
3857	640	"arg_1"	"real"	24	0	1	1
3858	640	"arg_2"	"real"	24	0	1	2
3859	641	"res_0"	"real"	24	0	0	0
3860	641	"arg_1"	"double"	53	0	1	1
3861	641	"arg_2"	"real"	24	0	1	2
3862	642	"res_0"	"real"	24	0	0	0
3863	642	"arg_1"	"month_interval"	32	0	1	1
3864	642	"arg_2"	"real"	24	0	1	2
3865	643	"res_0"	"real"	24	0	0	0
3866	643	"arg_1"	"sec_interval"	13	0	1	1
3867	643	"arg_2"	"real"	24	0	1	2
3868	644	"res_0"	"real"	24	0	0	0
3869	644	"arg_1"	"time"	7	0	1	1
3870	644	"arg_2"	"real"	24	0	1	2
3871	645	"res_0"	"real"	24	0	0	0
3872	645	"arg_1"	"timetz"	7	0	1	1
3873	645	"arg_2"	"real"	24	0	1	2
3874	646	"res_0"	"real"	24	0	0	0
3875	646	"arg_1"	"date"	0	0	1	1
3876	646	"arg_2"	"real"	24	0	1	2
3877	647	"res_0"	"real"	24	0	0	0
3878	647	"arg_1"	"timestamp"	7	0	1	1
3879	647	"arg_2"	"real"	24	0	1	2
3880	648	"res_0"	"real"	24	0	0	0
3881	648	"arg_1"	"timestamptz"	7	0	1	1
3882	648	"arg_2"	"real"	24	0	1	2
3883	649	"res_0"	"real"	24	0	0	0
3884	649	"arg_1"	"blob"	0	0	1	1
3885	649	"arg_2"	"real"	24	0	1	2
3886	650	"res_0"	"double"	53	0	0	0
3887	650	"arg_1"	"oid"	63	0	1	1
3888	650	"arg_2"	"double"	53	0	1	2
3889	651	"res_0"	"double"	53	0	0	0
3890	651	"arg_1"	"tinyint"	8	0	1	1
3891	651	"arg_2"	"double"	53	0	1	2
3892	652	"res_0"	"double"	53	0	0	0
3893	652	"arg_1"	"smallint"	16	0	1	1
3894	652	"arg_2"	"double"	53	0	1	2
3895	653	"res_0"	"double"	53	0	0	0
3896	653	"arg_1"	"int"	32	0	1	1
3897	653	"arg_2"	"double"	53	0	1	2
3898	654	"res_0"	"double"	53	0	0	0
3899	654	"arg_1"	"bigint"	64	0	1	1
3900	654	"arg_2"	"double"	53	0	1	2
3901	655	"res_0"	"double"	53	0	0	0
3902	655	"arg_1"	"wrd"	64	0	1	1
3903	655	"arg_2"	"double"	53	0	1	2
3904	656	"res_0"	"double"	53	0	0	0
3905	656	"arg_1"	"decimal"	2	0	1	1
3906	656	"arg_2"	"double"	53	0	1	2
3907	657	"res_0"	"double"	53	0	0	0
3908	657	"arg_1"	"decimal"	4	0	1	1
3909	657	"arg_2"	"double"	53	0	1	2
3910	658	"res_0"	"double"	53	0	0	0
3911	658	"arg_1"	"decimal"	9	0	1	1
3912	658	"arg_2"	"double"	53	0	1	2
3913	659	"res_0"	"double"	53	0	0	0
3914	659	"arg_1"	"decimal"	19	0	1	1
3915	659	"arg_2"	"double"	53	0	1	2
3916	660	"res_0"	"double"	53	0	0	0
3917	660	"arg_1"	"real"	24	0	1	1
3918	660	"arg_2"	"double"	53	0	1	2
3919	661	"res_0"	"double"	53	0	0	0
3920	661	"arg_1"	"double"	53	0	1	1
3921	661	"arg_2"	"double"	53	0	1	2
3922	662	"res_0"	"double"	53	0	0	0
3923	662	"arg_1"	"month_interval"	32	0	1	1
3924	662	"arg_2"	"double"	53	0	1	2
3925	663	"res_0"	"double"	53	0	0	0
3926	663	"arg_1"	"sec_interval"	13	0	1	1
3927	663	"arg_2"	"double"	53	0	1	2
3928	664	"res_0"	"double"	53	0	0	0
3929	664	"arg_1"	"time"	7	0	1	1
3930	664	"arg_2"	"double"	53	0	1	2
3931	665	"res_0"	"double"	53	0	0	0
3932	665	"arg_1"	"timetz"	7	0	1	1
3933	665	"arg_2"	"double"	53	0	1	2
3934	666	"res_0"	"double"	53	0	0	0
3935	666	"arg_1"	"date"	0	0	1	1
3936	666	"arg_2"	"double"	53	0	1	2
3937	667	"res_0"	"double"	53	0	0	0
3938	667	"arg_1"	"timestamp"	7	0	1	1
3939	667	"arg_2"	"double"	53	0	1	2
3940	668	"res_0"	"double"	53	0	0	0
3941	668	"arg_1"	"timestamptz"	7	0	1	1
3942	668	"arg_2"	"double"	53	0	1	2
3943	669	"res_0"	"double"	53	0	0	0
3944	669	"arg_1"	"blob"	0	0	1	1
3945	669	"arg_2"	"double"	53	0	1	2
3946	670	"res_0"	"month_interval"	32	0	0	0
3947	670	"arg_1"	"oid"	63	0	1	1
3948	670	"arg_2"	"month_interval"	32	0	1	2
3949	671	"res_0"	"month_interval"	32	0	0	0
3950	671	"arg_1"	"tinyint"	8	0	1	1
3951	671	"arg_2"	"month_interval"	32	0	1	2
3952	672	"res_0"	"month_interval"	32	0	0	0
3953	672	"arg_1"	"smallint"	16	0	1	1
3954	672	"arg_2"	"month_interval"	32	0	1	2
3955	673	"res_0"	"month_interval"	32	0	0	0
3956	673	"arg_1"	"int"	32	0	1	1
3957	673	"arg_2"	"month_interval"	32	0	1	2
3958	674	"res_0"	"month_interval"	32	0	0	0
3959	674	"arg_1"	"bigint"	64	0	1	1
3960	674	"arg_2"	"month_interval"	32	0	1	2
3961	675	"res_0"	"month_interval"	32	0	0	0
3962	675	"arg_1"	"wrd"	64	0	1	1
3963	675	"arg_2"	"month_interval"	32	0	1	2
3964	676	"res_0"	"month_interval"	32	0	0	0
3965	676	"arg_1"	"decimal"	2	0	1	1
3966	676	"arg_2"	"month_interval"	32	0	1	2
3967	677	"res_0"	"month_interval"	32	0	0	0
3968	677	"arg_1"	"decimal"	4	0	1	1
3969	677	"arg_2"	"month_interval"	32	0	1	2
3970	678	"res_0"	"month_interval"	32	0	0	0
3971	678	"arg_1"	"decimal"	9	0	1	1
3972	678	"arg_2"	"month_interval"	32	0	1	2
3973	679	"res_0"	"month_interval"	32	0	0	0
3974	679	"arg_1"	"decimal"	19	0	1	1
3975	679	"arg_2"	"month_interval"	32	0	1	2
3976	680	"res_0"	"month_interval"	32	0	0	0
3977	680	"arg_1"	"real"	24	0	1	1
3978	680	"arg_2"	"month_interval"	32	0	1	2
3979	681	"res_0"	"month_interval"	32	0	0	0
3980	681	"arg_1"	"double"	53	0	1	1
3981	681	"arg_2"	"month_interval"	32	0	1	2
3982	682	"res_0"	"month_interval"	32	0	0	0
3983	682	"arg_1"	"month_interval"	32	0	1	1
3984	682	"arg_2"	"month_interval"	32	0	1	2
3985	683	"res_0"	"month_interval"	32	0	0	0
3986	683	"arg_1"	"sec_interval"	13	0	1	1
3987	683	"arg_2"	"month_interval"	32	0	1	2
3988	684	"res_0"	"month_interval"	32	0	0	0
3989	684	"arg_1"	"time"	7	0	1	1
3990	684	"arg_2"	"month_interval"	32	0	1	2
3991	685	"res_0"	"month_interval"	32	0	0	0
3992	685	"arg_1"	"timetz"	7	0	1	1
3993	685	"arg_2"	"month_interval"	32	0	1	2
3994	686	"res_0"	"month_interval"	32	0	0	0
3995	686	"arg_1"	"date"	0	0	1	1
3996	686	"arg_2"	"month_interval"	32	0	1	2
3997	687	"res_0"	"month_interval"	32	0	0	0
3998	687	"arg_1"	"timestamp"	7	0	1	1
3999	687	"arg_2"	"month_interval"	32	0	1	2
4000	688	"res_0"	"month_interval"	32	0	0	0
4001	688	"arg_1"	"timestamptz"	7	0	1	1
4002	688	"arg_2"	"month_interval"	32	0	1	2
4003	689	"res_0"	"month_interval"	32	0	0	0
4004	689	"arg_1"	"blob"	0	0	1	1
4005	689	"arg_2"	"month_interval"	32	0	1	2
4006	690	"res_0"	"sec_interval"	13	0	0	0
4007	690	"arg_1"	"oid"	63	0	1	1
4008	690	"arg_2"	"sec_interval"	13	0	1	2
4009	691	"res_0"	"sec_interval"	13	0	0	0
4010	691	"arg_1"	"tinyint"	8	0	1	1
4011	691	"arg_2"	"sec_interval"	13	0	1	2
4012	692	"res_0"	"sec_interval"	13	0	0	0
4013	692	"arg_1"	"smallint"	16	0	1	1
4014	692	"arg_2"	"sec_interval"	13	0	1	2
4015	693	"res_0"	"sec_interval"	13	0	0	0
4016	693	"arg_1"	"int"	32	0	1	1
4017	693	"arg_2"	"sec_interval"	13	0	1	2
4018	694	"res_0"	"sec_interval"	13	0	0	0
4019	694	"arg_1"	"bigint"	64	0	1	1
4020	694	"arg_2"	"sec_interval"	13	0	1	2
4021	695	"res_0"	"sec_interval"	13	0	0	0
4022	695	"arg_1"	"wrd"	64	0	1	1
4023	695	"arg_2"	"sec_interval"	13	0	1	2
4024	696	"res_0"	"sec_interval"	13	0	0	0
4025	696	"arg_1"	"decimal"	2	0	1	1
4026	696	"arg_2"	"sec_interval"	13	0	1	2
4027	697	"res_0"	"sec_interval"	13	0	0	0
4028	697	"arg_1"	"decimal"	4	0	1	1
4029	697	"arg_2"	"sec_interval"	13	0	1	2
4030	698	"res_0"	"sec_interval"	13	0	0	0
4031	698	"arg_1"	"decimal"	9	0	1	1
4032	698	"arg_2"	"sec_interval"	13	0	1	2
4033	699	"res_0"	"sec_interval"	13	0	0	0
4034	699	"arg_1"	"decimal"	19	0	1	1
4035	699	"arg_2"	"sec_interval"	13	0	1	2
4036	700	"res_0"	"sec_interval"	13	0	0	0
4037	700	"arg_1"	"real"	24	0	1	1
4038	700	"arg_2"	"sec_interval"	13	0	1	2
4039	701	"res_0"	"sec_interval"	13	0	0	0
4040	701	"arg_1"	"double"	53	0	1	1
4041	701	"arg_2"	"sec_interval"	13	0	1	2
4042	702	"res_0"	"sec_interval"	13	0	0	0
4043	702	"arg_1"	"month_interval"	32	0	1	1
4044	702	"arg_2"	"sec_interval"	13	0	1	2
4045	703	"res_0"	"sec_interval"	13	0	0	0
4046	703	"arg_1"	"sec_interval"	13	0	1	1
4047	703	"arg_2"	"sec_interval"	13	0	1	2
4048	704	"res_0"	"sec_interval"	13	0	0	0
4049	704	"arg_1"	"time"	7	0	1	1
4050	704	"arg_2"	"sec_interval"	13	0	1	2
4051	705	"res_0"	"sec_interval"	13	0	0	0
4052	705	"arg_1"	"timetz"	7	0	1	1
4053	705	"arg_2"	"sec_interval"	13	0	1	2
4054	706	"res_0"	"sec_interval"	13	0	0	0
4055	706	"arg_1"	"date"	0	0	1	1
4056	706	"arg_2"	"sec_interval"	13	0	1	2
4057	707	"res_0"	"sec_interval"	13	0	0	0
4058	707	"arg_1"	"timestamp"	7	0	1	1
4059	707	"arg_2"	"sec_interval"	13	0	1	2
4060	708	"res_0"	"sec_interval"	13	0	0	0
4061	708	"arg_1"	"timestamptz"	7	0	1	1
4062	708	"arg_2"	"sec_interval"	13	0	1	2
4063	709	"res_0"	"sec_interval"	13	0	0	0
4064	709	"arg_1"	"blob"	0	0	1	1
4065	709	"arg_2"	"sec_interval"	13	0	1	2
4066	710	"res_0"	"time"	7	0	0	0
4067	710	"arg_1"	"oid"	63	0	1	1
4068	710	"arg_2"	"time"	7	0	1	2
4069	711	"res_0"	"time"	7	0	0	0
4070	711	"arg_1"	"tinyint"	8	0	1	1
4071	711	"arg_2"	"time"	7	0	1	2
4072	712	"res_0"	"time"	7	0	0	0
4073	712	"arg_1"	"smallint"	16	0	1	1
4074	712	"arg_2"	"time"	7	0	1	2
4075	713	"res_0"	"time"	7	0	0	0
4076	713	"arg_1"	"int"	32	0	1	1
4077	713	"arg_2"	"time"	7	0	1	2
4078	714	"res_0"	"time"	7	0	0	0
4079	714	"arg_1"	"bigint"	64	0	1	1
4080	714	"arg_2"	"time"	7	0	1	2
4081	715	"res_0"	"time"	7	0	0	0
4082	715	"arg_1"	"wrd"	64	0	1	1
4083	715	"arg_2"	"time"	7	0	1	2
4084	716	"res_0"	"time"	7	0	0	0
4085	716	"arg_1"	"decimal"	2	0	1	1
4086	716	"arg_2"	"time"	7	0	1	2
4087	717	"res_0"	"time"	7	0	0	0
4088	717	"arg_1"	"decimal"	4	0	1	1
4089	717	"arg_2"	"time"	7	0	1	2
4090	718	"res_0"	"time"	7	0	0	0
4091	718	"arg_1"	"decimal"	9	0	1	1
4092	718	"arg_2"	"time"	7	0	1	2
4093	719	"res_0"	"time"	7	0	0	0
4094	719	"arg_1"	"decimal"	19	0	1	1
4095	719	"arg_2"	"time"	7	0	1	2
4096	720	"res_0"	"time"	7	0	0	0
4097	720	"arg_1"	"real"	24	0	1	1
4098	720	"arg_2"	"time"	7	0	1	2
4099	721	"res_0"	"time"	7	0	0	0
4100	721	"arg_1"	"double"	53	0	1	1
4101	721	"arg_2"	"time"	7	0	1	2
4102	722	"res_0"	"time"	7	0	0	0
4103	722	"arg_1"	"month_interval"	32	0	1	1
4104	722	"arg_2"	"time"	7	0	1	2
4105	723	"res_0"	"time"	7	0	0	0
4106	723	"arg_1"	"sec_interval"	13	0	1	1
4107	723	"arg_2"	"time"	7	0	1	2
4108	724	"res_0"	"time"	7	0	0	0
4109	724	"arg_1"	"time"	7	0	1	1
4110	724	"arg_2"	"time"	7	0	1	2
4111	725	"res_0"	"time"	7	0	0	0
4112	725	"arg_1"	"timetz"	7	0	1	1
4113	725	"arg_2"	"time"	7	0	1	2
4114	726	"res_0"	"time"	7	0	0	0
4115	726	"arg_1"	"date"	0	0	1	1
4116	726	"arg_2"	"time"	7	0	1	2
4117	727	"res_0"	"time"	7	0	0	0
4118	727	"arg_1"	"timestamp"	7	0	1	1
4119	727	"arg_2"	"time"	7	0	1	2
4120	728	"res_0"	"time"	7	0	0	0
4121	728	"arg_1"	"timestamptz"	7	0	1	1
4122	728	"arg_2"	"time"	7	0	1	2
4123	729	"res_0"	"time"	7	0	0	0
4124	729	"arg_1"	"blob"	0	0	1	1
4125	729	"arg_2"	"time"	7	0	1	2
4126	730	"res_0"	"timetz"	7	0	0	0
4127	730	"arg_1"	"oid"	63	0	1	1
4128	730	"arg_2"	"timetz"	7	0	1	2
4129	731	"res_0"	"timetz"	7	0	0	0
4130	731	"arg_1"	"tinyint"	8	0	1	1
4131	731	"arg_2"	"timetz"	7	0	1	2
4132	732	"res_0"	"timetz"	7	0	0	0
4133	732	"arg_1"	"smallint"	16	0	1	1
4134	732	"arg_2"	"timetz"	7	0	1	2
4135	733	"res_0"	"timetz"	7	0	0	0
4136	733	"arg_1"	"int"	32	0	1	1
4137	733	"arg_2"	"timetz"	7	0	1	2
4138	734	"res_0"	"timetz"	7	0	0	0
4139	734	"arg_1"	"bigint"	64	0	1	1
4140	734	"arg_2"	"timetz"	7	0	1	2
4141	735	"res_0"	"timetz"	7	0	0	0
4142	735	"arg_1"	"wrd"	64	0	1	1
4143	735	"arg_2"	"timetz"	7	0	1	2
4144	736	"res_0"	"timetz"	7	0	0	0
4145	736	"arg_1"	"decimal"	2	0	1	1
4146	736	"arg_2"	"timetz"	7	0	1	2
4147	737	"res_0"	"timetz"	7	0	0	0
4148	737	"arg_1"	"decimal"	4	0	1	1
4149	737	"arg_2"	"timetz"	7	0	1	2
4150	738	"res_0"	"timetz"	7	0	0	0
4151	738	"arg_1"	"decimal"	9	0	1	1
4152	738	"arg_2"	"timetz"	7	0	1	2
4153	739	"res_0"	"timetz"	7	0	0	0
4154	739	"arg_1"	"decimal"	19	0	1	1
4155	739	"arg_2"	"timetz"	7	0	1	2
4156	740	"res_0"	"timetz"	7	0	0	0
4157	740	"arg_1"	"real"	24	0	1	1
4158	740	"arg_2"	"timetz"	7	0	1	2
4159	741	"res_0"	"timetz"	7	0	0	0
4160	741	"arg_1"	"double"	53	0	1	1
4161	741	"arg_2"	"timetz"	7	0	1	2
4162	742	"res_0"	"timetz"	7	0	0	0
4163	742	"arg_1"	"month_interval"	32	0	1	1
4164	742	"arg_2"	"timetz"	7	0	1	2
4165	743	"res_0"	"timetz"	7	0	0	0
4166	743	"arg_1"	"sec_interval"	13	0	1	1
4167	743	"arg_2"	"timetz"	7	0	1	2
4168	744	"res_0"	"timetz"	7	0	0	0
4169	744	"arg_1"	"time"	7	0	1	1
4170	744	"arg_2"	"timetz"	7	0	1	2
4171	745	"res_0"	"timetz"	7	0	0	0
4172	745	"arg_1"	"timetz"	7	0	1	1
4173	745	"arg_2"	"timetz"	7	0	1	2
4174	746	"res_0"	"timetz"	7	0	0	0
4175	746	"arg_1"	"date"	0	0	1	1
4176	746	"arg_2"	"timetz"	7	0	1	2
4177	747	"res_0"	"timetz"	7	0	0	0
4178	747	"arg_1"	"timestamp"	7	0	1	1
4179	747	"arg_2"	"timetz"	7	0	1	2
4180	748	"res_0"	"timetz"	7	0	0	0
4181	748	"arg_1"	"timestamptz"	7	0	1	1
4182	748	"arg_2"	"timetz"	7	0	1	2
4183	749	"res_0"	"timetz"	7	0	0	0
4184	749	"arg_1"	"blob"	0	0	1	1
4185	749	"arg_2"	"timetz"	7	0	1	2
4186	750	"res_0"	"date"	0	0	0	0
4187	750	"arg_1"	"oid"	63	0	1	1
4188	750	"arg_2"	"date"	0	0	1	2
4189	751	"res_0"	"date"	0	0	0	0
4190	751	"arg_1"	"tinyint"	8	0	1	1
4191	751	"arg_2"	"date"	0	0	1	2
4192	752	"res_0"	"date"	0	0	0	0
4193	752	"arg_1"	"smallint"	16	0	1	1
4194	752	"arg_2"	"date"	0	0	1	2
4195	753	"res_0"	"date"	0	0	0	0
4196	753	"arg_1"	"int"	32	0	1	1
4197	753	"arg_2"	"date"	0	0	1	2
4198	754	"res_0"	"date"	0	0	0	0
4199	754	"arg_1"	"bigint"	64	0	1	1
4200	754	"arg_2"	"date"	0	0	1	2
4201	755	"res_0"	"date"	0	0	0	0
4202	755	"arg_1"	"wrd"	64	0	1	1
4203	755	"arg_2"	"date"	0	0	1	2
4204	756	"res_0"	"date"	0	0	0	0
4205	756	"arg_1"	"decimal"	2	0	1	1
4206	756	"arg_2"	"date"	0	0	1	2
4207	757	"res_0"	"date"	0	0	0	0
4208	757	"arg_1"	"decimal"	4	0	1	1
4209	757	"arg_2"	"date"	0	0	1	2
4210	758	"res_0"	"date"	0	0	0	0
4211	758	"arg_1"	"decimal"	9	0	1	1
4212	758	"arg_2"	"date"	0	0	1	2
4213	759	"res_0"	"date"	0	0	0	0
4214	759	"arg_1"	"decimal"	19	0	1	1
4215	759	"arg_2"	"date"	0	0	1	2
4216	760	"res_0"	"date"	0	0	0	0
4217	760	"arg_1"	"real"	24	0	1	1
4218	760	"arg_2"	"date"	0	0	1	2
4219	761	"res_0"	"date"	0	0	0	0
4220	761	"arg_1"	"double"	53	0	1	1
4221	761	"arg_2"	"date"	0	0	1	2
4222	762	"res_0"	"date"	0	0	0	0
4223	762	"arg_1"	"month_interval"	32	0	1	1
4224	762	"arg_2"	"date"	0	0	1	2
4225	763	"res_0"	"date"	0	0	0	0
4226	763	"arg_1"	"sec_interval"	13	0	1	1
4227	763	"arg_2"	"date"	0	0	1	2
4228	764	"res_0"	"date"	0	0	0	0
4229	764	"arg_1"	"time"	7	0	1	1
4230	764	"arg_2"	"date"	0	0	1	2
4231	765	"res_0"	"date"	0	0	0	0
4232	765	"arg_1"	"timetz"	7	0	1	1
4233	765	"arg_2"	"date"	0	0	1	2
4234	766	"res_0"	"date"	0	0	0	0
4235	766	"arg_1"	"date"	0	0	1	1
4236	766	"arg_2"	"date"	0	0	1	2
4237	767	"res_0"	"date"	0	0	0	0
4238	767	"arg_1"	"timestamp"	7	0	1	1
4239	767	"arg_2"	"date"	0	0	1	2
4240	768	"res_0"	"date"	0	0	0	0
4241	768	"arg_1"	"timestamptz"	7	0	1	1
4242	768	"arg_2"	"date"	0	0	1	2
4243	769	"res_0"	"date"	0	0	0	0
4244	769	"arg_1"	"blob"	0	0	1	1
4245	769	"arg_2"	"date"	0	0	1	2
4246	770	"res_0"	"timestamp"	7	0	0	0
4247	770	"arg_1"	"oid"	63	0	1	1
4248	770	"arg_2"	"timestamp"	7	0	1	2
4249	771	"res_0"	"timestamp"	7	0	0	0
4250	771	"arg_1"	"tinyint"	8	0	1	1
4251	771	"arg_2"	"timestamp"	7	0	1	2
4252	772	"res_0"	"timestamp"	7	0	0	0
4253	772	"arg_1"	"smallint"	16	0	1	1
4254	772	"arg_2"	"timestamp"	7	0	1	2
4255	773	"res_0"	"timestamp"	7	0	0	0
4256	773	"arg_1"	"int"	32	0	1	1
4257	773	"arg_2"	"timestamp"	7	0	1	2
4258	774	"res_0"	"timestamp"	7	0	0	0
4259	774	"arg_1"	"bigint"	64	0	1	1
4260	774	"arg_2"	"timestamp"	7	0	1	2
4261	775	"res_0"	"timestamp"	7	0	0	0
4262	775	"arg_1"	"wrd"	64	0	1	1
4263	775	"arg_2"	"timestamp"	7	0	1	2
4264	776	"res_0"	"timestamp"	7	0	0	0
4265	776	"arg_1"	"decimal"	2	0	1	1
4266	776	"arg_2"	"timestamp"	7	0	1	2
4267	777	"res_0"	"timestamp"	7	0	0	0
4268	777	"arg_1"	"decimal"	4	0	1	1
4269	777	"arg_2"	"timestamp"	7	0	1	2
4270	778	"res_0"	"timestamp"	7	0	0	0
4271	778	"arg_1"	"decimal"	9	0	1	1
4272	778	"arg_2"	"timestamp"	7	0	1	2
4273	779	"res_0"	"timestamp"	7	0	0	0
4274	779	"arg_1"	"decimal"	19	0	1	1
4275	779	"arg_2"	"timestamp"	7	0	1	2
4276	780	"res_0"	"timestamp"	7	0	0	0
4277	780	"arg_1"	"real"	24	0	1	1
4278	780	"arg_2"	"timestamp"	7	0	1	2
4279	781	"res_0"	"timestamp"	7	0	0	0
4280	781	"arg_1"	"double"	53	0	1	1
4281	781	"arg_2"	"timestamp"	7	0	1	2
4282	782	"res_0"	"timestamp"	7	0	0	0
4283	782	"arg_1"	"month_interval"	32	0	1	1
4284	782	"arg_2"	"timestamp"	7	0	1	2
4285	783	"res_0"	"timestamp"	7	0	0	0
4286	783	"arg_1"	"sec_interval"	13	0	1	1
4287	783	"arg_2"	"timestamp"	7	0	1	2
4288	784	"res_0"	"timestamp"	7	0	0	0
4289	784	"arg_1"	"time"	7	0	1	1
4290	784	"arg_2"	"timestamp"	7	0	1	2
4291	785	"res_0"	"timestamp"	7	0	0	0
4292	785	"arg_1"	"timetz"	7	0	1	1
4293	785	"arg_2"	"timestamp"	7	0	1	2
4294	786	"res_0"	"timestamp"	7	0	0	0
4295	786	"arg_1"	"date"	0	0	1	1
4296	786	"arg_2"	"timestamp"	7	0	1	2
4297	787	"res_0"	"timestamp"	7	0	0	0
4298	787	"arg_1"	"timestamp"	7	0	1	1
4299	787	"arg_2"	"timestamp"	7	0	1	2
4300	788	"res_0"	"timestamp"	7	0	0	0
4301	788	"arg_1"	"timestamptz"	7	0	1	1
4302	788	"arg_2"	"timestamp"	7	0	1	2
4303	789	"res_0"	"timestamp"	7	0	0	0
4304	789	"arg_1"	"blob"	0	0	1	1
4305	789	"arg_2"	"timestamp"	7	0	1	2
4306	790	"res_0"	"timestamptz"	7	0	0	0
4307	790	"arg_1"	"oid"	63	0	1	1
4308	790	"arg_2"	"timestamptz"	7	0	1	2
4309	791	"res_0"	"timestamptz"	7	0	0	0
4310	791	"arg_1"	"tinyint"	8	0	1	1
4311	791	"arg_2"	"timestamptz"	7	0	1	2
4312	792	"res_0"	"timestamptz"	7	0	0	0
4313	792	"arg_1"	"smallint"	16	0	1	1
4314	792	"arg_2"	"timestamptz"	7	0	1	2
4315	793	"res_0"	"timestamptz"	7	0	0	0
4316	793	"arg_1"	"int"	32	0	1	1
4317	793	"arg_2"	"timestamptz"	7	0	1	2
4318	794	"res_0"	"timestamptz"	7	0	0	0
4319	794	"arg_1"	"bigint"	64	0	1	1
4320	794	"arg_2"	"timestamptz"	7	0	1	2
4321	795	"res_0"	"timestamptz"	7	0	0	0
4322	795	"arg_1"	"wrd"	64	0	1	1
4323	795	"arg_2"	"timestamptz"	7	0	1	2
4324	796	"res_0"	"timestamptz"	7	0	0	0
4325	796	"arg_1"	"decimal"	2	0	1	1
4326	796	"arg_2"	"timestamptz"	7	0	1	2
4327	797	"res_0"	"timestamptz"	7	0	0	0
4328	797	"arg_1"	"decimal"	4	0	1	1
4329	797	"arg_2"	"timestamptz"	7	0	1	2
4330	798	"res_0"	"timestamptz"	7	0	0	0
4331	798	"arg_1"	"decimal"	9	0	1	1
4332	798	"arg_2"	"timestamptz"	7	0	1	2
4333	799	"res_0"	"timestamptz"	7	0	0	0
4334	799	"arg_1"	"decimal"	19	0	1	1
4335	799	"arg_2"	"timestamptz"	7	0	1	2
4336	800	"res_0"	"timestamptz"	7	0	0	0
4337	800	"arg_1"	"real"	24	0	1	1
4338	800	"arg_2"	"timestamptz"	7	0	1	2
4339	801	"res_0"	"timestamptz"	7	0	0	0
4340	801	"arg_1"	"double"	53	0	1	1
4341	801	"arg_2"	"timestamptz"	7	0	1	2
4342	802	"res_0"	"timestamptz"	7	0	0	0
4343	802	"arg_1"	"month_interval"	32	0	1	1
4344	802	"arg_2"	"timestamptz"	7	0	1	2
4345	803	"res_0"	"timestamptz"	7	0	0	0
4346	803	"arg_1"	"sec_interval"	13	0	1	1
4347	803	"arg_2"	"timestamptz"	7	0	1	2
4348	804	"res_0"	"timestamptz"	7	0	0	0
4349	804	"arg_1"	"time"	7	0	1	1
4350	804	"arg_2"	"timestamptz"	7	0	1	2
4351	805	"res_0"	"timestamptz"	7	0	0	0
4352	805	"arg_1"	"timetz"	7	0	1	1
4353	805	"arg_2"	"timestamptz"	7	0	1	2
4354	806	"res_0"	"timestamptz"	7	0	0	0
4355	806	"arg_1"	"date"	0	0	1	1
4356	806	"arg_2"	"timestamptz"	7	0	1	2
4357	807	"res_0"	"timestamptz"	7	0	0	0
4358	807	"arg_1"	"timestamp"	7	0	1	1
4359	807	"arg_2"	"timestamptz"	7	0	1	2
4360	808	"res_0"	"timestamptz"	7	0	0	0
4361	808	"arg_1"	"timestamptz"	7	0	1	1
4362	808	"arg_2"	"timestamptz"	7	0	1	2
4363	809	"res_0"	"timestamptz"	7	0	0	0
4364	809	"arg_1"	"blob"	0	0	1	1
4365	809	"arg_2"	"timestamptz"	7	0	1	2
4366	810	"res_0"	"blob"	0	0	0	0
4367	810	"arg_1"	"oid"	63	0	1	1
4368	810	"arg_2"	"blob"	0	0	1	2
4369	811	"res_0"	"blob"	0	0	0	0
4370	811	"arg_1"	"tinyint"	8	0	1	1
4371	811	"arg_2"	"blob"	0	0	1	2
4372	812	"res_0"	"blob"	0	0	0	0
4373	812	"arg_1"	"smallint"	16	0	1	1
4374	812	"arg_2"	"blob"	0	0	1	2
4375	813	"res_0"	"blob"	0	0	0	0
4376	813	"arg_1"	"int"	32	0	1	1
4377	813	"arg_2"	"blob"	0	0	1	2
4378	814	"res_0"	"blob"	0	0	0	0
4379	814	"arg_1"	"bigint"	64	0	1	1
4380	814	"arg_2"	"blob"	0	0	1	2
4381	815	"res_0"	"blob"	0	0	0	0
4382	815	"arg_1"	"wrd"	64	0	1	1
4383	815	"arg_2"	"blob"	0	0	1	2
4384	816	"res_0"	"blob"	0	0	0	0
4385	816	"arg_1"	"decimal"	2	0	1	1
4386	816	"arg_2"	"blob"	0	0	1	2
4387	817	"res_0"	"blob"	0	0	0	0
4388	817	"arg_1"	"decimal"	4	0	1	1
4389	817	"arg_2"	"blob"	0	0	1	2
4390	818	"res_0"	"blob"	0	0	0	0
4391	818	"arg_1"	"decimal"	9	0	1	1
4392	818	"arg_2"	"blob"	0	0	1	2
4393	819	"res_0"	"blob"	0	0	0	0
4394	819	"arg_1"	"decimal"	19	0	1	1
4395	819	"arg_2"	"blob"	0	0	1	2
4396	820	"res_0"	"blob"	0	0	0	0
4397	820	"arg_1"	"real"	24	0	1	1
4398	820	"arg_2"	"blob"	0	0	1	2
4399	821	"res_0"	"blob"	0	0	0	0
4400	821	"arg_1"	"double"	53	0	1	1
4401	821	"arg_2"	"blob"	0	0	1	2
4402	822	"res_0"	"blob"	0	0	0	0
4403	822	"arg_1"	"month_interval"	32	0	1	1
4404	822	"arg_2"	"blob"	0	0	1	2
4405	823	"res_0"	"blob"	0	0	0	0
4406	823	"arg_1"	"sec_interval"	13	0	1	1
4407	823	"arg_2"	"blob"	0	0	1	2
4408	824	"res_0"	"blob"	0	0	0	0
4409	824	"arg_1"	"time"	7	0	1	1
4410	824	"arg_2"	"blob"	0	0	1	2
4411	825	"res_0"	"blob"	0	0	0	0
4412	825	"arg_1"	"timetz"	7	0	1	1
4413	825	"arg_2"	"blob"	0	0	1	2
4414	826	"res_0"	"blob"	0	0	0	0
4415	826	"arg_1"	"date"	0	0	1	1
4416	826	"arg_2"	"blob"	0	0	1	2
4417	827	"res_0"	"blob"	0	0	0	0
4418	827	"arg_1"	"timestamp"	7	0	1	1
4419	827	"arg_2"	"blob"	0	0	1	2
4420	828	"res_0"	"blob"	0	0	0	0
4421	828	"arg_1"	"timestamptz"	7	0	1	1
4422	828	"arg_2"	"blob"	0	0	1	2
4423	829	"res_0"	"blob"	0	0	0	0
4424	829	"arg_1"	"blob"	0	0	1	1
4425	829	"arg_2"	"blob"	0	0	1	2
4426	830	"res_0"	"real"	24	0	0	0
4427	830	"arg_1"	"real"	24	0	1	1
4428	830	"arg_2"	"real"	24	0	1	2
4429	831	"res_0"	"real"	24	0	0	0
4430	831	"arg_1"	"real"	24	0	1	1
4431	832	"res_0"	"real"	24	0	0	0
4432	832	"arg_1"	"real"	24	0	1	1
4433	833	"res_0"	"real"	24	0	0	0
4434	833	"arg_1"	"real"	24	0	1	1
4435	834	"res_0"	"real"	24	0	0	0
4436	834	"arg_1"	"real"	24	0	1	1
4437	835	"res_0"	"real"	24	0	0	0
4438	835	"arg_1"	"real"	24	0	1	1
4439	836	"res_0"	"real"	24	0	0	0
4440	836	"arg_1"	"real"	24	0	1	1
4441	837	"res_0"	"real"	24	0	0	0
4442	837	"arg_1"	"real"	24	0	1	1
4443	838	"res_0"	"real"	24	0	0	0
4444	838	"arg_1"	"real"	24	0	1	1
4445	839	"res_0"	"real"	24	0	0	0
4446	839	"arg_1"	"real"	24	0	1	1
4447	840	"res_0"	"real"	24	0	0	0
4448	840	"arg_1"	"real"	24	0	1	1
4449	840	"arg_2"	"real"	24	0	1	2
4450	841	"res_0"	"real"	24	0	0	0
4451	841	"arg_1"	"real"	24	0	1	1
4452	842	"res_0"	"real"	24	0	0	0
4453	842	"arg_1"	"real"	24	0	1	1
4454	843	"res_0"	"real"	24	0	0	0
4455	843	"arg_1"	"real"	24	0	1	1
4456	844	"res_0"	"real"	24	0	0	0
4457	844	"arg_1"	"real"	24	0	1	1
4458	845	"res_0"	"real"	24	0	0	0
4459	845	"arg_1"	"real"	24	0	1	1
4460	846	"res_0"	"real"	24	0	0	0
4461	846	"arg_1"	"real"	24	0	1	1
4462	847	"res_0"	"real"	24	0	0	0
4463	847	"arg_1"	"real"	24	0	1	1
4464	848	"res_0"	"real"	24	0	0	0
4465	848	"arg_1"	"real"	24	0	1	1
4466	849	"res_0"	"double"	53	0	0	0
4467	849	"arg_1"	"double"	53	0	1	1
4468	849	"arg_2"	"double"	53	0	1	2
4469	850	"res_0"	"double"	53	0	0	0
4470	850	"arg_1"	"double"	53	0	1	1
4471	851	"res_0"	"double"	53	0	0	0
4472	851	"arg_1"	"double"	53	0	1	1
4473	852	"res_0"	"double"	53	0	0	0
4474	852	"arg_1"	"double"	53	0	1	1
4475	853	"res_0"	"double"	53	0	0	0
4476	853	"arg_1"	"double"	53	0	1	1
4477	854	"res_0"	"double"	53	0	0	0
4478	854	"arg_1"	"double"	53	0	1	1
4479	855	"res_0"	"double"	53	0	0	0
4480	855	"arg_1"	"double"	53	0	1	1
4481	856	"res_0"	"double"	53	0	0	0
4482	856	"arg_1"	"double"	53	0	1	1
4483	857	"res_0"	"double"	53	0	0	0
4484	857	"arg_1"	"double"	53	0	1	1
4485	858	"res_0"	"double"	53	0	0	0
4486	858	"arg_1"	"double"	53	0	1	1
4487	859	"res_0"	"double"	53	0	0	0
4488	859	"arg_1"	"double"	53	0	1	1
4489	859	"arg_2"	"double"	53	0	1	2
4490	860	"res_0"	"double"	53	0	0	0
4491	860	"arg_1"	"double"	53	0	1	1
4492	861	"res_0"	"double"	53	0	0	0
4493	861	"arg_1"	"double"	53	0	1	1
4494	862	"res_0"	"double"	53	0	0	0
4495	862	"arg_1"	"double"	53	0	1	1
4496	863	"res_0"	"double"	53	0	0	0
4497	863	"arg_1"	"double"	53	0	1	1
4498	864	"res_0"	"double"	53	0	0	0
4499	864	"arg_1"	"double"	53	0	1	1
4500	865	"res_0"	"double"	53	0	0	0
4501	865	"arg_1"	"double"	53	0	1	1
4502	866	"res_0"	"double"	53	0	0	0
4503	866	"arg_1"	"double"	53	0	1	1
4504	867	"res_0"	"double"	53	0	0	0
4505	867	"arg_1"	"double"	53	0	1	1
4506	868	"res_0"	"double"	53	0	0	0
4507	869	"res_0"	"int"	32	0	0	0
4508	870	"res_0"	"int"	32	0	0	0
4509	870	"arg_1"	"int"	32	0	1	1
4510	871	"res_0"	"date"	0	0	0	0
4511	872	"res_0"	"date"	0	0	0	0
4512	873	"res_0"	"timetz"	7	0	0	0
4513	874	"res_0"	"timetz"	7	0	0	0
4514	875	"res_0"	"timestamptz"	7	0	0	0
4515	876	"res_0"	"time"	7	0	0	0
4516	877	"res_0"	"timestamp"	7	0	0	0
4517	878	"res_0"	"month_interval"	32	0	0	0
4518	878	"arg_1"	"date"	0	0	1	1
4519	878	"arg_2"	"date"	0	0	1	2
4520	879	"res_0"	"sec_interval"	13	0	0	0
4521	879	"arg_1"	"timetz"	7	0	1	1
4522	879	"arg_2"	"timetz"	7	0	1	2
4523	880	"res_0"	"sec_interval"	13	0	0	0
4524	880	"arg_1"	"time"	7	0	1	1
4525	880	"arg_2"	"time"	7	0	1	2
4526	881	"res_0"	"sec_interval"	13	0	0	0
4527	881	"arg_1"	"timestamptz"	7	0	1	1
4528	881	"arg_2"	"timestamptz"	7	0	1	2
4529	882	"res_0"	"sec_interval"	13	0	0	0
4530	882	"arg_1"	"timestamp"	7	0	1	1
4531	882	"arg_2"	"timestamp"	7	0	1	2
4532	883	"res_0"	"date"	0	0	0	0
4533	883	"arg_1"	"date"	0	0	1	1
4534	883	"arg_2"	"sec_interval"	13	0	1	2
4535	884	"res_0"	"date"	0	0	0	0
4536	884	"arg_1"	"date"	0	0	1	1
4537	884	"arg_2"	"month_interval"	32	0	1	2
4538	885	"res_0"	"time"	7	0	0	0
4539	885	"arg_1"	"time"	7	0	1	1
4540	885	"arg_2"	"sec_interval"	13	0	1	2
4541	886	"res_0"	"timetz"	7	0	0	0
4542	886	"arg_1"	"timetz"	7	0	1	1
4543	886	"arg_2"	"sec_interval"	13	0	1	2
4544	887	"res_0"	"timestamp"	7	0	0	0
4545	887	"arg_1"	"timestamp"	7	0	1	1
4546	887	"arg_2"	"sec_interval"	13	0	1	2
4547	888	"res_0"	"timestamp"	7	0	0	0
4548	888	"arg_1"	"timestamp"	7	0	1	1
4549	888	"arg_2"	"month_interval"	32	0	1	2
4550	889	"res_0"	"timestamptz"	7	0	0	0
4551	889	"arg_1"	"timestamptz"	7	0	1	1
4552	889	"arg_2"	"sec_interval"	13	0	1	2
4553	890	"res_0"	"timestamptz"	7	0	0	0
4554	890	"arg_1"	"timestamptz"	7	0	1	1
4555	890	"arg_2"	"month_interval"	32	0	1	2
4556	891	"res_0"	"date"	0	0	0	0
4557	891	"arg_1"	"date"	0	0	1	1
4558	891	"arg_2"	"sec_interval"	13	0	1	2
4559	892	"res_0"	"date"	0	0	0	0
4560	892	"arg_1"	"date"	0	0	1	1
4561	892	"arg_2"	"month_interval"	32	0	1	2
4562	893	"res_0"	"timestamp"	7	0	0	0
4563	893	"arg_1"	"timestamp"	7	0	1	1
4564	893	"arg_2"	"sec_interval"	13	0	1	2
4565	894	"res_0"	"timestamp"	7	0	0	0
4566	894	"arg_1"	"timestamp"	7	0	1	1
4567	894	"arg_2"	"month_interval"	32	0	1	2
4568	895	"res_0"	"timestamptz"	7	0	0	0
4569	895	"arg_1"	"timestamptz"	7	0	1	1
4570	895	"arg_2"	"sec_interval"	13	0	1	2
4571	896	"res_0"	"timestamptz"	7	0	0	0
4572	896	"arg_1"	"timestamptz"	7	0	1	1
4573	896	"arg_2"	"month_interval"	32	0	1	2
4574	897	"res_0"	"time"	7	0	0	0
4575	897	"arg_1"	"time"	7	0	1	1
4576	897	"arg_2"	"sec_interval"	13	0	1	2
4577	898	"res_0"	"timetz"	7	0	0	0
4578	898	"arg_1"	"timetz"	7	0	1	1
4579	898	"arg_2"	"sec_interval"	13	0	1	2
4580	899	"res_0"	"sec_interval"	13	0	0	0
4581	900	"res_0"	"int"	32	0	0	0
4582	900	"arg_1"	"date"	0	0	1	1
4583	901	"res_0"	"int"	32	0	0	0
4584	901	"arg_1"	"date"	0	0	1	1
4585	902	"res_0"	"int"	32	0	0	0
4586	902	"arg_1"	"date"	0	0	1	1
4587	903	"res_0"	"int"	32	0	0	0
4588	903	"arg_1"	"time"	7	0	1	1
4589	904	"res_0"	"int"	32	0	0	0
4590	904	"arg_1"	"time"	7	0	1	1
4591	905	"res_0"	"decimal"	9	3	0	0
4592	905	"arg_1"	"time"	7	0	1	1
4593	906	"res_0"	"int"	32	0	0	0
4594	906	"arg_1"	"timetz"	7	0	1	1
4595	907	"res_0"	"int"	32	0	0	0
4596	907	"arg_1"	"timetz"	7	0	1	1
4597	908	"res_0"	"decimal"	9	3	0	0
4598	908	"arg_1"	"timetz"	7	0	1	1
4599	909	"res_0"	"int"	32	0	0	0
4600	909	"arg_1"	"timestamp"	7	0	1	1
4601	910	"res_0"	"int"	32	0	0	0
4602	910	"arg_1"	"timestamp"	7	0	1	1
4603	911	"res_0"	"int"	32	0	0	0
4604	911	"arg_1"	"timestamp"	7	0	1	1
4605	912	"res_0"	"int"	32	0	0	0
4606	912	"arg_1"	"timestamp"	7	0	1	1
4607	913	"res_0"	"int"	32	0	0	0
4608	913	"arg_1"	"timestamp"	7	0	1	1
4609	914	"res_0"	"decimal"	9	3	0	0
4610	914	"arg_1"	"timestamp"	7	0	1	1
4611	915	"res_0"	"int"	32	0	0	0
4612	915	"arg_1"	"timestamptz"	7	0	1	1
4613	916	"res_0"	"int"	32	0	0	0
4614	916	"arg_1"	"timestamptz"	7	0	1	1
4615	917	"res_0"	"int"	32	0	0	0
4616	917	"arg_1"	"timestamptz"	7	0	1	1
4617	918	"res_0"	"int"	32	0	0	0
4618	918	"arg_1"	"timestamptz"	7	0	1	1
4619	919	"res_0"	"int"	32	0	0	0
4620	919	"arg_1"	"timestamptz"	7	0	1	1
4621	920	"res_0"	"decimal"	9	3	0	0
4622	920	"arg_1"	"timestamptz"	7	0	1	1
4623	921	"res_0"	"int"	32	0	0	0
4624	921	"arg_1"	"month_interval"	32	0	1	1
4625	922	"res_0"	"int"	32	0	0	0
4626	922	"arg_1"	"month_interval"	32	0	1	1
4627	923	"res_0"	"bigint"	64	0	0	0
4628	923	"arg_1"	"sec_interval"	13	0	1	1
4629	924	"res_0"	"int"	32	0	0	0
4630	924	"arg_1"	"sec_interval"	13	0	1	1
4631	925	"res_0"	"int"	32	0	0	0
4632	925	"arg_1"	"sec_interval"	13	0	1	1
4633	926	"res_0"	"int"	32	0	0	0
4634	926	"arg_1"	"sec_interval"	13	0	1	1
4635	927	"res_0"	"int"	32	0	0	0
4636	927	"arg_1"	"date"	0	0	1	1
4637	928	"res_0"	"int"	32	0	0	0
4638	928	"arg_1"	"date"	0	0	1	1
4639	929	"res_0"	"int"	32	0	0	0
4640	929	"arg_1"	"date"	0	0	1	1
4641	930	"res_0"	"int"	32	0	0	0
4642	930	"arg_1"	"date"	0	0	1	1
4643	931	"res_0"	"int"	32	0	0	0
4644	931	"arg_1"	"date"	0	0	1	1
4645	932	"res_0"	"bigint"	64	0	0	0
4646	932	"arg_1"	"varchar"	0	0	1	1
4647	932	"arg_2"	"varchar"	0	0	1	2
4648	933	"res_0"	"bigint"	64	0	0	0
4649	933	"arg_1"	"varchar"	0	0	1	1
4650	933	"arg_2"	"varchar"	0	0	1	2
4651	934	"res_0"	"bigint"	64	0	0	0
4652	934	"arg_1"	"varchar"	0	0	1	1
4653	934	"arg_2"	"varchar"	0	0	1	2
4654	934	"arg_3"	"bigint"	64	0	1	3
4655	935	"res_0"	"tinyint"	8	0	0	0
4656	935	"arg_1"	"char"	0	0	1	1
4657	935	"arg_2"	"boolean"	1	0	1	2
4658	936	"res_0"	"smallint"	16	0	0	0
4659	936	"arg_1"	"char"	0	0	1	1
4660	936	"arg_2"	"boolean"	1	0	1	2
4661	937	"res_0"	"int"	32	0	0	0
4662	937	"arg_1"	"char"	0	0	1	1
4663	937	"arg_2"	"boolean"	1	0	1	2
4664	938	"res_0"	"char"	0	0	0	0
4665	938	"arg_1"	"char"	0	0	1	1
4666	939	"res_0"	"int"	32	0	0	0
4667	939	"arg_1"	"char"	0	0	1	1
4668	939	"arg_2"	"char"	0	0	1	2
4669	940	"res_0"	"int"	32	0	0	0
4670	940	"arg_1"	"char"	0	0	1	1
4671	940	"arg_2"	"char"	0	0	1	2
4672	940	"arg_3"	"int"	32	0	1	3
4673	941	"res_0"	"char"	0	0	0	0
4674	941	"arg_1"	"char"	0	0	1	1
4675	941	"arg_2"	"char"	0	0	1	2
4676	941	"arg_3"	"int"	32	0	1	3
4677	942	"res_0"	"char"	0	0	0	0
4678	942	"arg_1"	"char"	0	0	1	1
4679	942	"arg_2"	"int"	32	0	1	2
4680	943	"res_0"	"char"	0	0	0	0
4681	943	"arg_1"	"char"	0	0	1	1
4682	943	"arg_2"	"int"	32	0	1	2
4683	943	"arg_3"	"int"	32	0	1	3
4684	944	"res_0"	"boolean"	1	0	0	0
4685	944	"arg_1"	"char"	0	0	1	1
4686	944	"arg_2"	"char"	0	0	1	2
4687	945	"res_0"	"boolean"	1	0	0	0
4688	945	"arg_1"	"char"	0	0	1	1
4689	945	"arg_2"	"char"	0	0	1	2
4690	945	"arg_3"	"char"	0	0	1	3
4691	946	"res_0"	"boolean"	1	0	0	0
4692	946	"arg_1"	"char"	0	0	1	1
4693	946	"arg_2"	"char"	0	0	1	2
4694	947	"res_0"	"boolean"	1	0	0	0
4695	947	"arg_1"	"char"	0	0	1	1
4696	947	"arg_2"	"char"	0	0	1	2
4697	947	"arg_3"	"char"	0	0	1	3
4698	948	"res_0"	"boolean"	1	0	0	0
4699	948	"arg_1"	"char"	0	0	1	1
4700	948	"arg_2"	"char"	0	0	1	2
4701	949	"res_0"	"boolean"	1	0	0	0
4702	949	"arg_1"	"char"	0	0	1	1
4703	949	"arg_2"	"char"	0	0	1	2
4704	949	"arg_3"	"char"	0	0	1	3
4705	950	"res_0"	"boolean"	1	0	0	0
4706	950	"arg_1"	"char"	0	0	1	1
4707	950	"arg_2"	"char"	0	0	1	2
4708	951	"res_0"	"boolean"	1	0	0	0
4709	951	"arg_1"	"char"	0	0	1	1
4710	951	"arg_2"	"char"	0	0	1	2
4711	951	"arg_3"	"char"	0	0	1	3
4712	952	"res_0"	"int"	32	0	0	0
4713	952	"arg_1"	"char"	0	0	1	1
4714	952	"arg_2"	"char"	0	0	1	2
4715	953	"res_0"	"char"	0	0	0	0
4716	953	"arg_1"	"char"	0	0	1	1
4717	953	"arg_2"	"int"	32	0	1	2
4718	954	"res_0"	"char"	0	0	0	0
4719	954	"arg_1"	"char"	0	0	1	1
4720	954	"arg_2"	"char"	0	0	1	2
4721	955	"res_0"	"int"	32	0	0	0
4722	955	"arg_1"	"char"	0	0	1	1
4723	956	"res_0"	"char"	0	0	0	0
4724	956	"arg_1"	"int"	32	0	1	1
4725	957	"res_0"	"int"	32	0	0	0
4726	957	"arg_1"	"char"	0	0	1	1
4727	958	"res_0"	"char"	0	0	0	0
4728	958	"arg_1"	"char"	0	0	1	1
4729	958	"arg_2"	"int"	32	0	1	2
4730	959	"res_0"	"char"	0	0	0	0
4731	959	"arg_1"	"char"	0	0	1	1
4732	959	"arg_2"	"int"	32	0	1	2
4733	960	"res_0"	"char"	0	0	0	0
4734	960	"arg_1"	"char"	0	0	1	1
4735	961	"res_0"	"char"	0	0	0	0
4736	961	"arg_1"	"char"	0	0	1	1
4737	962	"res_0"	"char"	0	0	0	0
4738	962	"arg_1"	"char"	0	0	1	1
4739	963	"res_0"	"char"	0	0	0	0
4740	963	"arg_1"	"char"	0	0	1	1
4741	964	"res_0"	"char"	0	0	0	0
4742	964	"arg_1"	"char"	0	0	1	1
4743	965	"res_0"	"char"	0	0	0	0
4744	965	"arg_1"	"char"	0	0	1	1
4745	965	"arg_2"	"char"	0	0	1	2
4746	966	"res_0"	"char"	0	0	0	0
4747	966	"arg_1"	"char"	0	0	1	1
4748	967	"res_0"	"char"	0	0	0	0
4749	967	"arg_1"	"char"	0	0	1	1
4750	967	"arg_2"	"char"	0	0	1	2
4751	968	"res_0"	"char"	0	0	0	0
4752	968	"arg_1"	"char"	0	0	1	1
4753	969	"res_0"	"char"	0	0	0	0
4754	969	"arg_1"	"char"	0	0	1	1
4755	969	"arg_2"	"char"	0	0	1	2
4756	970	"res_0"	"char"	0	0	0	0
4757	970	"arg_1"	"char"	0	0	1	1
4758	970	"arg_2"	"int"	32	0	1	2
4759	971	"res_0"	"char"	0	0	0	0
4760	971	"arg_1"	"char"	0	0	1	1
4761	971	"arg_2"	"int"	32	0	1	2
4762	971	"arg_3"	"char"	0	0	1	3
4763	972	"res_0"	"char"	0	0	0	0
4764	972	"arg_1"	"char"	0	0	1	1
4765	972	"arg_2"	"int"	32	0	1	2
4766	973	"res_0"	"char"	0	0	0	0
4767	973	"arg_1"	"char"	0	0	1	1
4768	973	"arg_2"	"int"	32	0	1	2
4769	973	"arg_3"	"char"	0	0	1	3
4770	974	"res_0"	"char"	0	0	0	0
4771	974	"arg_1"	"char"	0	0	1	1
4772	974	"arg_2"	"int"	32	0	1	2
4773	974	"arg_3"	"int"	32	0	1	3
4774	974	"arg_4"	"char"	0	0	1	4
4775	975	"res_0"	"char"	0	0	0	0
4776	975	"arg_1"	"char"	0	0	1	1
4777	975	"arg_2"	"char"	0	0	1	2
4778	975	"arg_3"	"char"	0	0	1	3
4779	976	"res_0"	"char"	0	0	0	0
4780	976	"arg_1"	"char"	0	0	1	1
4781	976	"arg_2"	"int"	32	0	1	2
4782	977	"res_0"	"char"	0	0	0	0
4783	977	"arg_1"	"int"	32	0	1	1
4784	978	"res_0"	"int"	32	0	0	0
4785	978	"arg_1"	"char"	0	0	1	1
4786	979	"res_0"	"int"	32	0	0	0
4787	979	"arg_1"	"char"	0	0	1	1
4788	980	"res_0"	"int"	32	0	0	0
4789	980	"arg_1"	"char"	0	0	1	1
4790	981	"res_0"	"char"	0	0	0	0
4791	981	"arg_1"	"char"	0	0	1	1
4792	982	"res_0"	"int"	32	0	0	0
4793	982	"arg_1"	"char"	0	0	1	1
4794	982	"arg_2"	"char"	0	0	1	2
4795	983	"res_0"	"int"	32	0	0	0
4796	983	"arg_1"	"char"	0	0	1	1
4797	983	"arg_2"	"char"	0	0	1	2
4798	984	"res_0"	"int"	32	0	0	0
4799	984	"arg_1"	"char"	0	0	1	1
4800	984	"arg_2"	"char"	0	0	1	2
4801	985	"res_0"	"double"	53	0	0	0
4802	985	"arg_1"	"char"	0	0	1	1
4803	985	"arg_2"	"char"	0	0	1	2
4804	986	"res_0"	"char"	0	0	0	0
4805	986	"arg_1"	"char"	0	0	1	1
4806	987	"res_0"	"int"	32	0	0	0
4807	987	"arg_1"	"char"	0	0	1	1
4808	987	"arg_2"	"char"	0	0	1	2
4809	988	"res_0"	"int"	32	0	0	0
4810	988	"arg_1"	"char"	0	0	1	1
4811	988	"arg_2"	"char"	0	0	1	2
4812	988	"arg_3"	"int"	32	0	1	3
4813	988	"arg_4"	"int"	32	0	1	4
4814	988	"arg_5"	"int"	32	0	1	5
4815	989	"res_0"	"tinyint"	8	0	0	0
4816	989	"arg_1"	"varchar"	0	0	1	1
4817	989	"arg_2"	"boolean"	1	0	1	2
4818	990	"res_0"	"smallint"	16	0	0	0
4819	990	"arg_1"	"varchar"	0	0	1	1
4820	990	"arg_2"	"boolean"	1	0	1	2
4821	991	"res_0"	"int"	32	0	0	0
4822	991	"arg_1"	"varchar"	0	0	1	1
4823	991	"arg_2"	"boolean"	1	0	1	2
4824	992	"res_0"	"varchar"	0	0	0	0
4825	992	"arg_1"	"varchar"	0	0	1	1
4826	993	"res_0"	"int"	32	0	0	0
4827	993	"arg_1"	"varchar"	0	0	1	1
4828	993	"arg_2"	"varchar"	0	0	1	2
4829	994	"res_0"	"int"	32	0	0	0
4830	994	"arg_1"	"varchar"	0	0	1	1
4831	994	"arg_2"	"varchar"	0	0	1	2
4832	994	"arg_3"	"int"	32	0	1	3
4833	995	"res_0"	"varchar"	0	0	0	0
4834	995	"arg_1"	"varchar"	0	0	1	1
4835	995	"arg_2"	"varchar"	0	0	1	2
4836	995	"arg_3"	"int"	32	0	1	3
4837	996	"res_0"	"varchar"	0	0	0	0
4838	996	"arg_1"	"varchar"	0	0	1	1
4839	996	"arg_2"	"int"	32	0	1	2
4840	997	"res_0"	"varchar"	0	0	0	0
4841	997	"arg_1"	"varchar"	0	0	1	1
4842	997	"arg_2"	"int"	32	0	1	2
4843	997	"arg_3"	"int"	32	0	1	3
4844	998	"res_0"	"boolean"	1	0	0	0
4845	998	"arg_1"	"varchar"	0	0	1	1
4846	998	"arg_2"	"varchar"	0	0	1	2
4847	999	"res_0"	"boolean"	1	0	0	0
4848	999	"arg_1"	"varchar"	0	0	1	1
4849	999	"arg_2"	"varchar"	0	0	1	2
4850	999	"arg_3"	"varchar"	0	0	1	3
4851	1000	"res_0"	"boolean"	1	0	0	0
4852	1000	"arg_1"	"varchar"	0	0	1	1
4853	1000	"arg_2"	"varchar"	0	0	1	2
4854	1001	"res_0"	"boolean"	1	0	0	0
4855	1001	"arg_1"	"varchar"	0	0	1	1
4856	1001	"arg_2"	"varchar"	0	0	1	2
4857	1001	"arg_3"	"varchar"	0	0	1	3
4858	1002	"res_0"	"boolean"	1	0	0	0
4859	1002	"arg_1"	"varchar"	0	0	1	1
4860	1002	"arg_2"	"varchar"	0	0	1	2
4861	1003	"res_0"	"boolean"	1	0	0	0
4862	1003	"arg_1"	"varchar"	0	0	1	1
4863	1003	"arg_2"	"varchar"	0	0	1	2
4864	1003	"arg_3"	"varchar"	0	0	1	3
4865	1004	"res_0"	"boolean"	1	0	0	0
4866	1004	"arg_1"	"varchar"	0	0	1	1
4867	1004	"arg_2"	"varchar"	0	0	1	2
4868	1005	"res_0"	"boolean"	1	0	0	0
4869	1005	"arg_1"	"varchar"	0	0	1	1
4870	1005	"arg_2"	"varchar"	0	0	1	2
4871	1005	"arg_3"	"varchar"	0	0	1	3
4872	1006	"res_0"	"int"	32	0	0	0
4873	1006	"arg_1"	"varchar"	0	0	1	1
4874	1006	"arg_2"	"varchar"	0	0	1	2
4875	1007	"res_0"	"varchar"	0	0	0	0
4876	1007	"arg_1"	"varchar"	0	0	1	1
4877	1007	"arg_2"	"int"	32	0	1	2
4878	1008	"res_0"	"varchar"	0	0	0	0
4879	1008	"arg_1"	"varchar"	0	0	1	1
4880	1008	"arg_2"	"varchar"	0	0	1	2
4881	1009	"res_0"	"int"	32	0	0	0
4882	1009	"arg_1"	"varchar"	0	0	1	1
4883	1010	"res_0"	"varchar"	0	0	0	0
4884	1010	"arg_1"	"int"	32	0	1	1
4885	1011	"res_0"	"int"	32	0	0	0
4886	1011	"arg_1"	"varchar"	0	0	1	1
4887	1012	"res_0"	"varchar"	0	0	0	0
4888	1012	"arg_1"	"varchar"	0	0	1	1
4889	1012	"arg_2"	"int"	32	0	1	2
4890	1013	"res_0"	"varchar"	0	0	0	0
4891	1013	"arg_1"	"varchar"	0	0	1	1
4892	1013	"arg_2"	"int"	32	0	1	2
4893	1014	"res_0"	"varchar"	0	0	0	0
4894	1014	"arg_1"	"varchar"	0	0	1	1
4895	1015	"res_0"	"varchar"	0	0	0	0
4896	1015	"arg_1"	"varchar"	0	0	1	1
4897	1016	"res_0"	"varchar"	0	0	0	0
4898	1016	"arg_1"	"varchar"	0	0	1	1
4899	1017	"res_0"	"varchar"	0	0	0	0
4900	1017	"arg_1"	"varchar"	0	0	1	1
4901	1018	"res_0"	"varchar"	0	0	0	0
4902	1018	"arg_1"	"varchar"	0	0	1	1
4903	1019	"res_0"	"varchar"	0	0	0	0
4904	1019	"arg_1"	"varchar"	0	0	1	1
4905	1019	"arg_2"	"varchar"	0	0	1	2
4906	1020	"res_0"	"varchar"	0	0	0	0
4907	1020	"arg_1"	"varchar"	0	0	1	1
4908	1021	"res_0"	"varchar"	0	0	0	0
4909	1021	"arg_1"	"varchar"	0	0	1	1
4910	1021	"arg_2"	"varchar"	0	0	1	2
4911	1022	"res_0"	"varchar"	0	0	0	0
4912	1022	"arg_1"	"varchar"	0	0	1	1
4913	1023	"res_0"	"varchar"	0	0	0	0
4914	1023	"arg_1"	"varchar"	0	0	1	1
4915	1023	"arg_2"	"varchar"	0	0	1	2
4916	1024	"res_0"	"varchar"	0	0	0	0
4917	1024	"arg_1"	"varchar"	0	0	1	1
4918	1024	"arg_2"	"int"	32	0	1	2
4919	1025	"res_0"	"varchar"	0	0	0	0
4920	1025	"arg_1"	"varchar"	0	0	1	1
4921	1025	"arg_2"	"int"	32	0	1	2
4922	1025	"arg_3"	"varchar"	0	0	1	3
4923	1026	"res_0"	"varchar"	0	0	0	0
4924	1026	"arg_1"	"varchar"	0	0	1	1
4925	1026	"arg_2"	"int"	32	0	1	2
4926	1027	"res_0"	"varchar"	0	0	0	0
4927	1027	"arg_1"	"varchar"	0	0	1	1
4928	1027	"arg_2"	"int"	32	0	1	2
4929	1027	"arg_3"	"varchar"	0	0	1	3
4930	1028	"res_0"	"varchar"	0	0	0	0
4931	1028	"arg_1"	"varchar"	0	0	1	1
4932	1028	"arg_2"	"int"	32	0	1	2
4933	1028	"arg_3"	"int"	32	0	1	3
4934	1028	"arg_4"	"varchar"	0	0	1	4
4935	1029	"res_0"	"varchar"	0	0	0	0
4936	1029	"arg_1"	"varchar"	0	0	1	1
4937	1029	"arg_2"	"varchar"	0	0	1	2
4938	1029	"arg_3"	"varchar"	0	0	1	3
4939	1030	"res_0"	"varchar"	0	0	0	0
4940	1030	"arg_1"	"varchar"	0	0	1	1
4941	1030	"arg_2"	"int"	32	0	1	2
4942	1031	"res_0"	"varchar"	0	0	0	0
4943	1031	"arg_1"	"int"	32	0	1	1
4944	1032	"res_0"	"int"	32	0	0	0
4945	1032	"arg_1"	"varchar"	0	0	1	1
4946	1033	"res_0"	"int"	32	0	0	0
4947	1033	"arg_1"	"varchar"	0	0	1	1
4948	1034	"res_0"	"int"	32	0	0	0
4949	1034	"arg_1"	"varchar"	0	0	1	1
4950	1035	"res_0"	"varchar"	0	0	0	0
4951	1035	"arg_1"	"varchar"	0	0	1	1
4952	1036	"res_0"	"int"	32	0	0	0
4953	1036	"arg_1"	"varchar"	0	0	1	1
4954	1036	"arg_2"	"varchar"	0	0	1	2
4955	1037	"res_0"	"int"	32	0	0	0
4956	1037	"arg_1"	"varchar"	0	0	1	1
4957	1037	"arg_2"	"varchar"	0	0	1	2
4958	1038	"res_0"	"int"	32	0	0	0
4959	1038	"arg_1"	"varchar"	0	0	1	1
4960	1038	"arg_2"	"varchar"	0	0	1	2
4961	1039	"res_0"	"double"	53	0	0	0
4962	1039	"arg_1"	"varchar"	0	0	1	1
4963	1039	"arg_2"	"varchar"	0	0	1	2
4964	1040	"res_0"	"varchar"	0	0	0	0
4965	1040	"arg_1"	"varchar"	0	0	1	1
4966	1041	"res_0"	"int"	32	0	0	0
4967	1041	"arg_1"	"varchar"	0	0	1	1
4968	1041	"arg_2"	"varchar"	0	0	1	2
4969	1042	"res_0"	"int"	32	0	0	0
4970	1042	"arg_1"	"varchar"	0	0	1	1
4971	1042	"arg_2"	"varchar"	0	0	1	2
4972	1042	"arg_3"	"int"	32	0	1	3
4973	1042	"arg_4"	"int"	32	0	1	4
4974	1042	"arg_5"	"int"	32	0	1	5
4975	1043	"res_0"	"tinyint"	8	0	0	0
4976	1043	"arg_1"	"clob"	0	0	1	1
4977	1043	"arg_2"	"boolean"	1	0	1	2
4978	1044	"res_0"	"smallint"	16	0	0	0
4979	1044	"arg_1"	"clob"	0	0	1	1
4980	1044	"arg_2"	"boolean"	1	0	1	2
4981	1045	"res_0"	"int"	32	0	0	0
4982	1045	"arg_1"	"clob"	0	0	1	1
4983	1045	"arg_2"	"boolean"	1	0	1	2
4984	1046	"res_0"	"clob"	0	0	0	0
4985	1046	"arg_1"	"clob"	0	0	1	1
4986	1047	"res_0"	"int"	32	0	0	0
4987	1047	"arg_1"	"clob"	0	0	1	1
4988	1047	"arg_2"	"clob"	0	0	1	2
4989	1048	"res_0"	"int"	32	0	0	0
4990	1048	"arg_1"	"clob"	0	0	1	1
4991	1048	"arg_2"	"clob"	0	0	1	2
4992	1048	"arg_3"	"int"	32	0	1	3
4993	1049	"res_0"	"clob"	0	0	0	0
4994	1049	"arg_1"	"clob"	0	0	1	1
4995	1049	"arg_2"	"clob"	0	0	1	2
4996	1049	"arg_3"	"int"	32	0	1	3
4997	1050	"res_0"	"clob"	0	0	0	0
4998	1050	"arg_1"	"clob"	0	0	1	1
4999	1050	"arg_2"	"int"	32	0	1	2
5000	1051	"res_0"	"clob"	0	0	0	0
5001	1051	"arg_1"	"clob"	0	0	1	1
5002	1051	"arg_2"	"int"	32	0	1	2
5003	1051	"arg_3"	"int"	32	0	1	3
5004	1052	"res_0"	"boolean"	1	0	0	0
5005	1052	"arg_1"	"clob"	0	0	1	1
5006	1052	"arg_2"	"clob"	0	0	1	2
5007	1053	"res_0"	"boolean"	1	0	0	0
5008	1053	"arg_1"	"clob"	0	0	1	1
5009	1053	"arg_2"	"clob"	0	0	1	2
5010	1053	"arg_3"	"clob"	0	0	1	3
5011	1054	"res_0"	"boolean"	1	0	0	0
5012	1054	"arg_1"	"clob"	0	0	1	1
5013	1054	"arg_2"	"clob"	0	0	1	2
5014	1055	"res_0"	"boolean"	1	0	0	0
5015	1055	"arg_1"	"clob"	0	0	1	1
5016	1055	"arg_2"	"clob"	0	0	1	2
5017	1055	"arg_3"	"clob"	0	0	1	3
5018	1056	"res_0"	"boolean"	1	0	0	0
5019	1056	"arg_1"	"clob"	0	0	1	1
5020	1056	"arg_2"	"clob"	0	0	1	2
5021	1057	"res_0"	"boolean"	1	0	0	0
5022	1057	"arg_1"	"clob"	0	0	1	1
5023	1057	"arg_2"	"clob"	0	0	1	2
5024	1057	"arg_3"	"clob"	0	0	1	3
5025	1058	"res_0"	"boolean"	1	0	0	0
5026	1058	"arg_1"	"clob"	0	0	1	1
5027	1058	"arg_2"	"clob"	0	0	1	2
5028	1059	"res_0"	"boolean"	1	0	0	0
5029	1059	"arg_1"	"clob"	0	0	1	1
5030	1059	"arg_2"	"clob"	0	0	1	2
5031	1059	"arg_3"	"clob"	0	0	1	3
5032	1060	"res_0"	"int"	32	0	0	0
5033	1060	"arg_1"	"clob"	0	0	1	1
5034	1060	"arg_2"	"clob"	0	0	1	2
5035	1061	"res_0"	"clob"	0	0	0	0
5036	1061	"arg_1"	"clob"	0	0	1	1
5037	1061	"arg_2"	"int"	32	0	1	2
5038	1062	"res_0"	"clob"	0	0	0	0
5039	1062	"arg_1"	"clob"	0	0	1	1
5040	1062	"arg_2"	"clob"	0	0	1	2
5041	1063	"res_0"	"int"	32	0	0	0
5042	1063	"arg_1"	"clob"	0	0	1	1
5043	1064	"res_0"	"clob"	0	0	0	0
5044	1064	"arg_1"	"int"	32	0	1	1
5045	1065	"res_0"	"int"	32	0	0	0
5046	1065	"arg_1"	"clob"	0	0	1	1
5047	1066	"res_0"	"clob"	0	0	0	0
5048	1066	"arg_1"	"clob"	0	0	1	1
5049	1066	"arg_2"	"int"	32	0	1	2
5050	1067	"res_0"	"clob"	0	0	0	0
5051	1067	"arg_1"	"clob"	0	0	1	1
5052	1067	"arg_2"	"int"	32	0	1	2
5053	1068	"res_0"	"clob"	0	0	0	0
5054	1068	"arg_1"	"clob"	0	0	1	1
5055	1069	"res_0"	"clob"	0	0	0	0
5056	1069	"arg_1"	"clob"	0	0	1	1
5057	1070	"res_0"	"clob"	0	0	0	0
5058	1070	"arg_1"	"clob"	0	0	1	1
5059	1071	"res_0"	"clob"	0	0	0	0
5060	1071	"arg_1"	"clob"	0	0	1	1
5061	1072	"res_0"	"clob"	0	0	0	0
5062	1072	"arg_1"	"clob"	0	0	1	1
5063	1073	"res_0"	"clob"	0	0	0	0
5064	1073	"arg_1"	"clob"	0	0	1	1
5065	1073	"arg_2"	"clob"	0	0	1	2
5066	1074	"res_0"	"clob"	0	0	0	0
5067	1074	"arg_1"	"clob"	0	0	1	1
5068	1075	"res_0"	"clob"	0	0	0	0
5069	1075	"arg_1"	"clob"	0	0	1	1
5070	1075	"arg_2"	"clob"	0	0	1	2
5071	1076	"res_0"	"clob"	0	0	0	0
5072	1076	"arg_1"	"clob"	0	0	1	1
5073	1077	"res_0"	"clob"	0	0	0	0
5074	1077	"arg_1"	"clob"	0	0	1	1
5075	1077	"arg_2"	"clob"	0	0	1	2
5076	1078	"res_0"	"clob"	0	0	0	0
5077	1078	"arg_1"	"clob"	0	0	1	1
5078	1078	"arg_2"	"int"	32	0	1	2
5079	1079	"res_0"	"clob"	0	0	0	0
5080	1079	"arg_1"	"clob"	0	0	1	1
5081	1079	"arg_2"	"int"	32	0	1	2
5082	1079	"arg_3"	"clob"	0	0	1	3
5083	1080	"res_0"	"clob"	0	0	0	0
5084	1080	"arg_1"	"clob"	0	0	1	1
5085	1080	"arg_2"	"int"	32	0	1	2
5086	1081	"res_0"	"clob"	0	0	0	0
5087	1081	"arg_1"	"clob"	0	0	1	1
5088	1081	"arg_2"	"int"	32	0	1	2
5089	1081	"arg_3"	"clob"	0	0	1	3
5090	1082	"res_0"	"clob"	0	0	0	0
5091	1082	"arg_1"	"clob"	0	0	1	1
5092	1082	"arg_2"	"int"	32	0	1	2
5093	1082	"arg_3"	"int"	32	0	1	3
5094	1082	"arg_4"	"clob"	0	0	1	4
5095	1083	"res_0"	"clob"	0	0	0	0
5096	1083	"arg_1"	"clob"	0	0	1	1
5097	1083	"arg_2"	"clob"	0	0	1	2
5098	1083	"arg_3"	"clob"	0	0	1	3
5099	1084	"res_0"	"clob"	0	0	0	0
5100	1084	"arg_1"	"clob"	0	0	1	1
5101	1084	"arg_2"	"int"	32	0	1	2
5102	1085	"res_0"	"clob"	0	0	0	0
5103	1085	"arg_1"	"int"	32	0	1	1
5104	1086	"res_0"	"int"	32	0	0	0
5105	1086	"arg_1"	"clob"	0	0	1	1
5106	1087	"res_0"	"int"	32	0	0	0
5107	1087	"arg_1"	"clob"	0	0	1	1
5108	1088	"res_0"	"int"	32	0	0	0
5109	1088	"arg_1"	"clob"	0	0	1	1
5110	1089	"res_0"	"clob"	0	0	0	0
5111	1089	"arg_1"	"clob"	0	0	1	1
5112	1090	"res_0"	"int"	32	0	0	0
5113	1090	"arg_1"	"clob"	0	0	1	1
5114	1090	"arg_2"	"clob"	0	0	1	2
5115	1091	"res_0"	"int"	32	0	0	0
5116	1091	"arg_1"	"clob"	0	0	1	1
5117	1091	"arg_2"	"clob"	0	0	1	2
5118	1092	"res_0"	"int"	32	0	0	0
5119	1092	"arg_1"	"clob"	0	0	1	1
5120	1092	"arg_2"	"clob"	0	0	1	2
5121	1093	"res_0"	"double"	53	0	0	0
5122	1093	"arg_1"	"clob"	0	0	1	1
5123	1093	"arg_2"	"clob"	0	0	1	2
5124	1094	"res_0"	"clob"	0	0	0	0
5125	1094	"arg_1"	"clob"	0	0	1	1
5126	1095	"res_0"	"int"	32	0	0	0
5127	1095	"arg_1"	"clob"	0	0	1	1
5128	1095	"arg_2"	"clob"	0	0	1	2
5129	1096	"res_0"	"int"	32	0	0	0
5130	1096	"arg_1"	"clob"	0	0	1	1
5131	1096	"arg_2"	"clob"	0	0	1	2
5132	1096	"arg_3"	"int"	32	0	1	3
5133	1096	"arg_4"	"int"	32	0	1	4
5134	1096	"arg_5"	"int"	32	0	1	5
5135	1097	"res_0"	"table"	0	0	0	0
5136	1097	"arg_1"	"varchar"	0	0	1	1
5137	1097	"arg_2"	"varchar"	0	0	1	2
5138	1097	"arg_3"	"varchar"	0	0	1	3
5139	1097	"arg_4"	"varchar"	0	0	1	4
5140	1097	"arg_5"	"varchar"	0	0	1	5
5141	1097	"arg_6"	"varchar"	0	0	1	6
5142	1097	"arg_7"	"bigint"	64	0	1	7
5143	1097	"arg_8"	"bigint"	64	0	1	8
5144	1097	"arg_9"	"int"	32	0	1	9
5145	1098	"res_0"	"table"	0	0	0	0
5146	1098	"arg_1"	"varchar"	0	0	1	1
5147	1098	"arg_2"	"varchar"	0	0	1	2
5148	27	"res"	"boolean"	1	0	0	0
5149	27	"arg"	"oid"	63	0	1	1
5150	39	"res"	"any"	0	0	0	0
5151	39	"arg"	"any"	0	0	1	1
5152	40	"res"	"boolean"	1	0	0	0
5153	40	"arg"	"any"	0	0	1	1
5154	41	"res"	"boolean"	1	0	0	0
5155	41	"arg"	"any"	0	0	1	1
5156	46	"res"	"any"	0	0	0	0
5157	46	"arg"	"any"	0	0	1	1
5158	47	"res"	"any"	0	0	0	0
5159	47	"arg"	"any"	0	0	1	1
5160	51	"res"	"bigint"	64	0	0	0
5161	51	"arg"	"tinyint"	8	0	1	1
5162	52	"res"	"bigint"	64	0	0	0
5163	52	"arg"	"smallint"	16	0	1	1
5164	53	"res"	"bigint"	64	0	0	0
5165	53	"arg"	"int"	32	0	1	1
5166	54	"res"	"bigint"	64	0	0	0
5167	54	"arg"	"bigint"	64	0	1	1
5168	55	"res"	"wrd"	64	0	0	0
5169	55	"arg"	"wrd"	64	0	1	1
5170	56	"res"	"decimal"	19	0	0	0
5171	56	"arg"	"decimal"	2	0	1	1
5172	57	"res"	"decimal"	19	0	0	0
5173	57	"arg"	"decimal"	4	0	1	1
5174	58	"res"	"decimal"	19	0	0	0
5175	58	"arg"	"decimal"	9	0	1	1
5176	59	"res"	"decimal"	19	0	0	0
5177	59	"arg"	"decimal"	19	0	1	1
5178	60	"res"	"bigint"	64	0	0	0
5179	60	"arg"	"tinyint"	8	0	1	1
5180	61	"res"	"bigint"	64	0	0	0
5181	61	"arg"	"smallint"	16	0	1	1
5182	62	"res"	"bigint"	64	0	0	0
5183	62	"arg"	"int"	32	0	1	1
5184	63	"res"	"bigint"	64	0	0	0
5185	63	"arg"	"bigint"	64	0	1	1
5186	64	"res"	"decimal"	19	0	0	0
5187	64	"arg"	"decimal"	2	0	1	1
5188	65	"res"	"decimal"	19	0	0	0
5189	65	"arg"	"decimal"	4	0	1	1
5190	66	"res"	"decimal"	19	0	0	0
5191	66	"arg"	"decimal"	9	0	1	1
5192	67	"res"	"decimal"	19	0	0	0
5193	67	"arg"	"decimal"	19	0	1	1
5194	80	"res"	"real"	24	0	0	0
5195	80	"arg"	"real"	24	0	1	1
5196	81	"res"	"real"	24	0	0	0
5197	81	"arg"	"real"	24	0	1	1
5198	82	"res"	"double"	53	0	0	0
5199	82	"arg"	"double"	53	0	1	1
5200	83	"res"	"double"	53	0	0	0
5201	83	"arg"	"double"	53	0	1	1
5202	84	"res"	"month_interval"	32	0	0	0
5203	84	"arg"	"month_interval"	32	0	1	1
5204	85	"res"	"sec_interval"	13	0	0	0
5205	85	"arg"	"sec_interval"	13	0	1	1
5206	86	"res"	"double"	53	0	0	0
5207	86	"arg"	"double"	53	0	1	1
5208	87	"res"	"wrd"	64	0	0	0
5209	88	"res"	"wrd"	64	0	0	0
5232	5231	"name"	"varchar"	1024	0	0	0
5233	5231	"value"	"varchar"	2048	0	0	1
5235	5234	"name"	"varchar"	1024	0	0	0
5241	5240	"name"	"varchar"	2048	0	0	0
5261	5260	"val"	"clob"	0	0	1	0
5262	5260	"pat"	"clob"	0	0	1	1
5263	5260	"esc"	"clob"	0	0	1	2
5266	5265	"val"	"clob"	0	0	1	0
5267	5265	"pat"	"clob"	0	0	1	1
5268	5265	"esc"	"clob"	0	0	1	2
5271	5270	"val"	"clob"	0	0	1	0
5272	5270	"pat"	"clob"	0	0	1	1
5275	5274	"val"	"clob"	0	0	1	0
5276	5274	"pat"	"clob"	0	0	1	1
5279	5278	"result"	"double"	53	0	0	0
5280	5278	"r"	"double"	53	0	1	1
5283	5282	"result"	"double"	53	0	0	0
5284	5282	"d"	"double"	53	0	1	1
5290	5289	"result"	"clob"	0	0	0	0
5291	5289	"theurl"	"url"	0	0	1	1
5294	5293	"result"	"clob"	0	0	0	0
5295	5293	"theurl"	"url"	0	0	1	1
5298	5297	"result"	"clob"	0	0	0	0
5299	5297	"theurl"	"url"	0	0	1	1
5302	5301	"result"	"clob"	0	0	0	0
5303	5301	"theurl"	"url"	0	0	1	1
5306	5305	"result"	"clob"	0	0	0	0
5307	5305	"theurl"	"url"	0	0	1	1
5310	5309	"result"	"clob"	0	0	0	0
5311	5309	"theurl"	"url"	0	0	1	1
5314	5313	"result"	"clob"	0	0	0	0
5315	5313	"theurl"	"url"	0	0	1	1
5318	5317	"result"	"clob"	0	0	0	0
5319	5317	"theurl"	"url"	0	0	1	1
5322	5321	"result"	"clob"	0	0	0	0
5323	5321	"theurl"	"url"	0	0	1	1
5326	5325	"result"	"clob"	0	0	0	0
5327	5325	"theurl"	"url"	0	0	1	1
5330	5329	"result"	"clob"	0	0	0	0
5331	5329	"theurl"	"url"	0	0	1	1
5334	5333	"result"	"clob"	0	0	0	0
5335	5333	"theurl"	"url"	0	0	1	1
5338	5337	"result"	"clob"	0	0	0	0
5339	5337	"theurl"	"url"	0	0	1	1
5342	5341	"result"	"boolean"	1	0	0	0
5343	5341	"theurl"	"url"	0	0	1	1
5346	5345	"result"	"url"	0	0	0	0
5347	5345	"protocol"	"clob"	0	0	1	1
5348	5345	"hostname"	"clob"	0	0	1	2
5349	5345	"port"	"int"	32	0	1	3
5350	5345	"file"	"clob"	0	0	1	4
5353	5352	"result"	"url"	0	0	0	0
5354	5352	"protocol"	"clob"	0	0	1	1
5355	5352	"hostname"	"clob"	0	0	1	2
5356	5352	"file"	"clob"	0	0	1	3
5359	5358	"result"	"date"	0	0	0	0
5360	5358	"s"	"clob"	0	0	1	1
5361	5358	"format"	"clob"	0	0	1	2
5364	5363	"result"	"clob"	0	0	0	0
5365	5363	"d"	"date"	0	0	1	1
5366	5363	"format"	"clob"	0	0	1	2
5369	5368	"result"	"time"	1	0	0	0
5370	5368	"s"	"clob"	0	0	1	1
5371	5368	"format"	"clob"	0	0	1	2
5374	5373	"result"	"clob"	0	0	0	0
5375	5373	"d"	"time"	1	0	1	1
5376	5373	"format"	"clob"	0	0	1	2
5379	5378	"result"	"timestamp"	7	0	0	0
5380	5378	"s"	"clob"	0	0	1	1
5381	5378	"format"	"clob"	0	0	1	2
5384	5383	"result"	"clob"	0	0	0	0
5385	5383	"d"	"timestamp"	7	0	1	1
5386	5383	"format"	"clob"	0	0	1	2
5390	5389	"result"	"inet"	0	0	0	0
5391	5389	"p"	"inet"	0	0	1	1
5394	5393	"result"	"clob"	0	0	0	0
5395	5393	"p"	"inet"	0	0	1	1
5398	5397	"result"	"int"	32	0	0	0
5399	5397	"p"	"inet"	0	0	1	1
5402	5401	"result"	"inet"	0	0	0	0
5403	5401	"p"	"inet"	0	0	1	1
5404	5401	"mask"	"int"	32	0	1	2
5407	5406	"result"	"inet"	0	0	0	0
5408	5406	"p"	"inet"	0	0	1	1
5411	5410	"result"	"inet"	0	0	0	0
5412	5410	"p"	"inet"	0	0	1	1
5415	5414	"result"	"inet"	0	0	0	0
5416	5414	"p"	"inet"	0	0	1	1
5419	5418	"result"	"clob"	0	0	0	0
5420	5418	"p"	"inet"	0	0	1	1
5423	5422	"result"	"clob"	0	0	0	0
5424	5422	"p"	"inet"	0	0	1	1
5427	5426	"result"	"boolean"	1	0	0	0
5428	5426	"i1"	"inet"	0	0	1	1
5429	5426	"i2"	"inet"	0	0	1	2
5432	5431	"result"	"boolean"	1	0	0	0
5433	5431	"i1"	"inet"	0	0	1	1
5434	5431	"i2"	"inet"	0	0	1	2
5437	5436	"result"	"boolean"	1	0	0	0
5438	5436	"i1"	"inet"	0	0	1	1
5439	5436	"i2"	"inet"	0	0	1	2
5442	5441	"result"	"boolean"	1	0	0	0
5443	5441	"i1"	"inet"	0	0	1	1
5444	5441	"i2"	"inet"	0	0	1	2
5447	5446	"id"	"oid"	63	0	0	0
5448	5446	"owner"	"clob"	0	0	0	1
5449	5446	"defined"	"timestamp"	7	0	0	2
5450	5446	"query"	"clob"	0	0	0	3
5451	5446	"pipe"	"clob"	0	0	0	4
5452	5446	"plan"	"clob"	0	0	0	5
5453	5446	"mal"	"int"	32	0	0	6
5454	5446	"optimize"	"bigint"	64	0	0	7
5457	5456	"id"	"oid"	63	0	0	0
5458	5456	"start"	"timestamp"	7	0	0	1
5459	5456	"stop"	"timestamp"	7	0	0	2
5460	5456	"arguments"	"clob"	0	0	0	3
5461	5456	"tuples"	"wrd"	64	0	0	4
5462	5456	"run"	"bigint"	64	0	0	5
5463	5456	"ship"	"bigint"	64	0	0	6
5464	5456	"cpu"	"int"	32	0	0	7
5465	5456	"io"	"int"	32	0	0	8
5511	5510	"threshold"	"smallint"	16	0	1	0
5516	5515	"event"	"int"	32	0	0	0
5517	5515	"clk"	"varchar"	20	0	0	1
5518	5515	"pc"	"varchar"	50	0	0	2
5519	5515	"thread"	"int"	32	0	0	3
5520	5515	"ticks"	"bigint"	64	0	0	4
5521	5515	"rrsmb"	"bigint"	64	0	0	5
5522	5515	"vmmb"	"bigint"	64	0	0	6
5523	5515	"reads"	"bigint"	64	0	0	7
5524	5515	"writes"	"bigint"	64	0	0	8
5525	5515	"minflt"	"bigint"	64	0	0	9
5526	5515	"majflt"	"bigint"	64	0	0	10
5527	5515	"nvcsw"	"bigint"	64	0	0	11
5528	5515	"stmt"	"clob"	0	0	0	12
5546	5545	"host"	"clob"	0	0	1	0
5547	5545	"port"	"int"	32	0	1	1
5550	5549	"ticks"	"int"	32	0	1	0
5553	5552	"result"	"timestamp"	7	0	0	0
5554	5552	"sec"	"bigint"	64	0	1	1
5557	5556	"result"	"timestamp"	7	0	0	0
5558	5556	"sec"	"int"	32	0	1	1
5561	5560	"result"	"int"	32	0	0	0
5562	5560	"ts"	"timestamp"	7	0	1	1
5565	5564	"result"	"int"	32	0	0	0
5566	5564	"ts"	"timestamptz"	7	0	1	1
5569	5568	"sys"	"clob"	0	0	1	0
5570	5568	"tab"	"clob"	0	0	1	1
5573	5572	"sys"	"clob"	0	0	1	0
5574	5572	"tab"	"clob"	0	0	1	1
5577	5576	"sys"	"clob"	0	0	1	0
5578	5576	"tab"	"clob"	0	0	1	1
5581	5580	"sch"	"varchar"	100	0	0	0
5582	5580	"usr"	"varchar"	100	0	0	1
5583	5580	"dep_type"	"varchar"	32	0	0	2
5586	5585	"sch"	"varchar"	100	0	0	0
5587	5585	"usr"	"varchar"	100	0	0	1
5588	5585	"dep_type"	"varchar"	32	0	0	2
5591	5590	"sch"	"varchar"	100	0	0	0
5592	5590	"usr"	"varchar"	100	0	0	1
5593	5590	"dep_type"	"varchar"	32	0	0	2
5596	5595	"sch"	"varchar"	100	0	0	0
5597	5595	"usr"	"varchar"	100	0	0	1
5598	5595	"dep_type"	"varchar"	32	0	0	2
5601	5600	"sch"	"varchar"	100	0	0	0
5602	5600	"usr"	"varchar"	100	0	0	1
5603	5600	"dep_type"	"varchar"	32	0	0	2
5606	5605	"sch"	"varchar"	100	0	0	0
5607	5605	"usr"	"varchar"	100	0	0	1
5608	5605	"dep_type"	"varchar"	32	0	0	2
5611	5610	"sch"	"varchar"	100	0	0	0
5612	5610	"usr"	"varchar"	100	0	0	1
5613	5610	"dep_type"	"varchar"	32	0	0	2
5616	5615	"sch"	"varchar"	100	0	0	0
5617	5615	"usr"	"varchar"	100	0	0	1
5618	5615	"dep_type"	"varchar"	32	0	0	2
5621	5620	"sch"	"varchar"	100	0	0	0
5622	5620	"usr"	"varchar"	100	0	0	1
5623	5620	"dep_type"	"varchar"	32	0	0	2
5626	5625	"sch"	"varchar"	100	0	0	0
5627	5625	"usr"	"varchar"	100	0	0	1
5628	5625	"dep_type"	"varchar"	32	0	0	2
5631	5630	"sch"	"varchar"	100	0	0	0
5632	5630	"usr"	"varchar"	100	0	0	1
5633	5630	"dep_type"	"varchar"	32	0	0	2
5636	5635	"sch"	"varchar"	100	0	0	0
5637	5635	"usr"	"varchar"	100	0	0	1
5638	5635	"dep_type"	"varchar"	32	0	0	2
5641	5640	"sch"	"varchar"	100	0	0	0
5642	5640	"usr"	"varchar"	100	0	0	1
5643	5640	"dep_type"	"varchar"	32	0	0	2
5646	5645	"sch"	"varchar"	100	0	0	0
5647	5645	"usr"	"varchar"	100	0	0	1
5648	5645	"dep_type"	"varchar"	32	0	0	2
5651	5650	"sch"	"varchar"	100	0	0	0
5652	5650	"usr"	"varchar"	100	0	0	1
5653	5650	"dep_type"	"varchar"	32	0	0	2
5656	5655	"sch"	"varchar"	100	0	0	0
5657	5655	"usr"	"varchar"	100	0	0	1
5658	5655	"dep_type"	"varchar"	32	0	0	2
5661	5660	"sch"	"varchar"	100	0	0	0
5662	5660	"usr"	"varchar"	100	0	0	1
5663	5660	"dep_type"	"varchar"	32	0	0	2
5666	5665	"result"	"clob"	0	0	0	0
5667	5665	"username"	"clob"	0	0	1	1
5670	5669	"user"	"clob"	0	0	0	0
5671	5669	"login"	"timestamp"	7	0	0	1
5672	5669	"sessiontimeout"	"bigint"	64	0	0	2
5673	5669	"lastcommand"	"timestamp"	7	0	0	3
5674	5669	"querytimeout"	"bigint"	64	0	0	4
5675	5669	"active"	"boolean"	1	0	0	5
5686	5685	"delay"	"tinyint"	8	0	1	0
5689	5688	"delay"	"tinyint"	8	0	1	0
5690	5688	"force"	"boolean"	1	0	1	1
5693	5692	"query"	"bigint"	64	0	1	0
5696	5695	"query"	"bigint"	64	0	1	0
5697	5695	"session"	"bigint"	64	0	1	1
5700	5699	"timeout"	"bigint"	64	0	1	0
5703	5702	"result"	"varchar"	32	0	0	0
5704	5702	"s1"	"varchar"	32	0	1	1
5705	5702	"st"	"int"	32	0	1	2
5706	5702	"len"	"int"	32	0	1	3
5707	5702	"s3"	"varchar"	32	0	1	4
5710	5709	"result"	"double"	53	0	0	0
5711	5709	"num"	"double"	53	0	1	1
5712	5709	"prc"	"int"	32	0	1	2
5715	5714	"result"	"double"	53	0	0	0
5716	5714	"num"	"double"	53	0	1	1
5717	5714	"prc"	"int"	32	0	1	2
5718	5714	"truncat"	"int"	32	0	1	3
5721	5720	"result"	"clob"	0	0	0	0
5722	5720	"num"	"double"	53	0	1	1
5723	5720	"prc"	"int"	32	0	1	2
5724	5720	"truncat"	"int"	32	0	1	3
5727	5726	"result"	"double"	53	0	0	0
5728	5726	"pdec"	"double"	53	0	1	1
5729	5726	"pradius"	"double"	53	0	1	2
5732	5731	"result"	"oid"	63	0	0	0
5733	5731	"x"	"int"	32	0	1	1
5734	5731	"y"	"int"	32	0	1	2
5737	5736	"result"	"int"	32	0	0	0
5738	5736	"z"	"oid"	63	0	1	1
5741	5740	"result"	"int"	32	0	0	0
5742	5740	"z"	"oid"	63	0	1	1
5745	5744	"rewrite"	"clob"	0	0	0	0
5746	5744	"count"	"int"	32	0	0	1
5749	5748	"query"	"clob"	0	0	0	0
5750	5748	"count"	"int"	32	0	0	1
5753	5752	"filename"	"clob"	0	0	1	0
5756	5755	"name"	"clob"	0	0	0	0
5757	5755	"def"	"clob"	0	0	0	1
5758	5755	"status"	"clob"	0	0	0	2
5766	5765	"name"	"clob"	0	0	0	0
5767	5765	"value"	"clob"	0	0	0	1
5774	5773	"id"	"int"	32	0	0	0
5775	5773	"name"	"clob"	0	0	0	1
5776	5773	"htype"	"clob"	0	0	0	2
5777	5773	"ttype"	"clob"	0	0	0	3
5778	5773	"count"	"bigint"	64	0	0	4
5779	5773	"refcnt"	"int"	32	0	0	5
5780	5773	"lrefcnt"	"int"	32	0	0	6
5781	5773	"location"	"clob"	0	0	0	7
5782	5773	"heat"	"int"	32	0	0	8
5783	5773	"dirty"	"clob"	0	0	0	9
5784	5773	"status"	"clob"	0	0	0	10
5785	5773	"kind"	"clob"	0	0	0	11
5788	5787	"ra_stmt"	"clob"	0	0	1	0
5789	5787	"opt"	"boolean"	1	0	1	1
5792	5791	"qtag"	"bigint"	64	0	0	0
5793	5791	"user"	"clob"	0	0	0	1
5794	5791	"started"	"timestamp"	7	0	0	2
5795	5791	"estimate"	"timestamp"	7	0	0	3
5796	5791	"progress"	"int"	32	0	0	4
5797	5791	"status"	"clob"	0	0	0	5
5798	5791	"tag"	"oid"	63	0	0	6
5799	5791	"query"	"clob"	0	0	0	7
5812	5811	"tag"	"int"	32	0	1	0
5815	5814	"tag"	"int"	32	0	1	0
5818	5817	"tag"	"int"	32	0	1	0
5821	5820	"tag"	"bigint"	64	0	1	0
5824	5823	"tag"	"bigint"	64	0	1	0
5827	5826	"tag"	"bigint"	64	0	1	0
5830	5829	"rowid"	"bigint"	64	0	0	0
5831	5829	"fldid"	"int"	32	0	0	1
5832	5829	"message"	"clob"	0	0	0	2
5833	5829	"input"	"clob"	0	0	0	3
5844	5843	"result"	"double"	53	0	0	0
5845	5843	"val"	"tinyint"	8	0	1	1
5848	5847	"result"	"double"	53	0	0	0
5849	5847	"val"	"smallint"	16	0	1	1
5852	5851	"result"	"double"	53	0	0	0
5853	5851	"val"	"int"	32	0	1	1
5856	5855	"result"	"double"	53	0	0	0
5857	5855	"val"	"wrd"	64	0	1	1
5860	5859	"result"	"double"	53	0	0	0
5861	5859	"val"	"bigint"	64	0	1	1
5864	5863	"result"	"double"	53	0	0	0
5865	5863	"val"	"real"	24	0	1	1
5868	5867	"result"	"double"	53	0	0	0
5869	5867	"val"	"double"	53	0	1	1
5872	5871	"result"	"double"	53	0	0	0
5873	5871	"val"	"date"	0	0	1	1
5876	5875	"result"	"double"	53	0	0	0
5877	5875	"val"	"time"	1	0	1	1
5880	5879	"result"	"double"	53	0	0	0
5881	5879	"val"	"timestamp"	7	0	1	1
5884	5883	"result"	"double"	53	0	0	0
5885	5883	"val"	"tinyint"	8	0	1	1
5888	5887	"result"	"double"	53	0	0	0
5889	5887	"val"	"smallint"	16	0	1	1
5892	5891	"result"	"double"	53	0	0	0
5893	5891	"val"	"int"	32	0	1	1
5896	5895	"result"	"double"	53	0	0	0
5897	5895	"val"	"wrd"	64	0	1	1
5900	5899	"result"	"double"	53	0	0	0
5901	5899	"val"	"bigint"	64	0	1	1
5904	5903	"result"	"double"	53	0	0	0
5905	5903	"val"	"real"	24	0	1	1
5908	5907	"result"	"double"	53	0	0	0
5909	5907	"val"	"double"	53	0	1	1
5912	5911	"result"	"double"	53	0	0	0
5913	5911	"val"	"date"	0	0	1	1
5916	5915	"result"	"double"	53	0	0	0
5917	5915	"val"	"time"	1	0	1	1
5920	5919	"result"	"double"	53	0	0	0
5921	5919	"val"	"timestamp"	7	0	1	1
5924	5923	"result"	"double"	53	0	0	0
5925	5923	"val"	"tinyint"	8	0	1	1
5928	5927	"result"	"double"	53	0	0	0
5929	5927	"val"	"smallint"	16	0	1	1
5932	5931	"result"	"double"	53	0	0	0
5933	5931	"val"	"int"	32	0	1	1
5936	5935	"result"	"double"	53	0	0	0
5937	5935	"val"	"wrd"	64	0	1	1
5940	5939	"result"	"double"	53	0	0	0
5941	5939	"val"	"bigint"	64	0	1	1
5944	5943	"result"	"double"	53	0	0	0
5945	5943	"val"	"real"	24	0	1	1
5948	5947	"result"	"double"	53	0	0	0
5949	5947	"val"	"double"	53	0	1	1
5952	5951	"result"	"double"	53	0	0	0
5953	5951	"val"	"date"	0	0	1	1
5956	5955	"result"	"double"	53	0	0	0
5957	5955	"val"	"time"	1	0	1	1
5960	5959	"result"	"double"	53	0	0	0
5961	5959	"val"	"timestamp"	7	0	1	1
5964	5963	"result"	"double"	53	0	0	0
5965	5963	"val"	"tinyint"	8	0	1	1
5968	5967	"result"	"double"	53	0	0	0
5969	5967	"val"	"smallint"	16	0	1	1
5972	5971	"result"	"double"	53	0	0	0
5973	5971	"val"	"int"	32	0	1	1
5976	5975	"result"	"double"	53	0	0	0
5977	5975	"val"	"wrd"	64	0	1	1
5980	5979	"result"	"double"	53	0	0	0
5981	5979	"val"	"bigint"	64	0	1	1
5984	5983	"result"	"double"	53	0	0	0
5985	5983	"val"	"real"	24	0	1	1
5988	5987	"result"	"double"	53	0	0	0
5989	5987	"val"	"double"	53	0	1	1
5992	5991	"result"	"double"	53	0	0	0
5993	5991	"val"	"date"	0	0	1	1
5996	5995	"result"	"double"	53	0	0	0
5997	5995	"val"	"time"	1	0	1	1
6000	5999	"result"	"double"	53	0	0	0
6001	5999	"val"	"timestamp"	7	0	1	1
6004	6003	"result"	"tinyint"	8	0	0	0
6005	6003	"val"	"tinyint"	8	0	1	1
6008	6007	"result"	"smallint"	16	0	0	0
6009	6007	"val"	"smallint"	16	0	1	1
6012	6011	"result"	"int"	32	0	0	0
6013	6011	"val"	"int"	32	0	1	1
6016	6015	"result"	"wrd"	64	0	0	0
6017	6015	"val"	"wrd"	64	0	1	1
6020	6019	"result"	"bigint"	64	0	0	0
6021	6019	"val"	"bigint"	64	0	1	1
6024	6023	"result"	"decimal"	18	3	0	0
6025	6023	"val"	"decimal"	18	3	1	1
6028	6027	"result"	"real"	24	0	0	0
6029	6027	"val"	"real"	24	0	1	1
6032	6031	"result"	"double"	53	0	0	0
6033	6031	"val"	"double"	53	0	1	1
6036	6035	"result"	"date"	0	0	0	0
6037	6035	"val"	"date"	0	0	1	1
6040	6039	"result"	"time"	1	0	0	0
6041	6039	"val"	"time"	1	0	1	1
6044	6043	"result"	"timestamp"	7	0	0	0
6045	6043	"val"	"timestamp"	7	0	1	1
6048	6047	"result"	"tinyint"	8	0	0	0
6049	6047	"val"	"tinyint"	8	0	1	1
6050	6047	"q"	"double"	53	0	1	2
6053	6052	"result"	"smallint"	16	0	0	0
6054	6052	"val"	"smallint"	16	0	1	1
6055	6052	"q"	"double"	53	0	1	2
6058	6057	"result"	"int"	32	0	0	0
6059	6057	"val"	"int"	32	0	1	1
6060	6057	"q"	"double"	53	0	1	2
6063	6062	"result"	"wrd"	64	0	0	0
6064	6062	"val"	"wrd"	64	0	1	1
6065	6062	"q"	"double"	53	0	1	2
6068	6067	"result"	"bigint"	64	0	0	0
6069	6067	"val"	"bigint"	64	0	1	1
6070	6067	"q"	"double"	53	0	1	2
6073	6072	"result"	"decimal"	18	3	0	0
6074	6072	"val"	"decimal"	18	3	1	1
6075	6072	"q"	"double"	53	0	1	2
6078	6077	"result"	"real"	24	0	0	0
6079	6077	"val"	"real"	24	0	1	1
6080	6077	"q"	"double"	53	0	1	2
6083	6082	"result"	"double"	53	0	0	0
6084	6082	"val"	"double"	53	0	1	1
6085	6082	"q"	"double"	53	0	1	2
6088	6087	"result"	"date"	0	0	0	0
6089	6087	"val"	"date"	0	0	1	1
6090	6087	"q"	"double"	53	0	1	2
6093	6092	"result"	"time"	1	0	0	0
6094	6092	"val"	"time"	1	0	1	1
6095	6092	"q"	"double"	53	0	1	2
6098	6097	"result"	"timestamp"	7	0	0	0
6099	6097	"val"	"timestamp"	7	0	1	1
6100	6097	"q"	"double"	53	0	1	2
6103	6102	"result"	"tinyint"	8	0	0	0
6104	6102	"e1"	"tinyint"	8	0	1	1
6105	6102	"e2"	"tinyint"	8	0	1	2
6108	6107	"result"	"smallint"	16	0	0	0
6109	6107	"e1"	"smallint"	16	0	1	1
6110	6107	"e2"	"smallint"	16	0	1	2
6113	6112	"result"	"int"	32	0	0	0
6114	6112	"e1"	"int"	32	0	1	1
6115	6112	"e2"	"int"	32	0	1	2
6118	6117	"result"	"wrd"	64	0	0	0
6119	6117	"e1"	"wrd"	64	0	1	1
6120	6117	"e2"	"wrd"	64	0	1	2
6123	6122	"result"	"bigint"	64	0	0	0
6124	6122	"e1"	"bigint"	64	0	1	1
6125	6122	"e2"	"bigint"	64	0	1	2
6128	6127	"result"	"real"	24	0	0	0
6129	6127	"e1"	"real"	24	0	1	1
6130	6127	"e2"	"real"	24	0	1	2
6133	6132	"result"	"double"	53	0	0	0
6134	6132	"e1"	"double"	53	0	1	1
6135	6132	"e2"	"double"	53	0	1	2
6151	6150	"result"	"mbr"	0	0	0	0
6152	6150	"g"	"geometry"	0	0	1	1
6155	6154	"result"	"boolean"	1	0	0	0
6156	6154	"a"	"mbr"	0	0	1	1
6157	6154	"b"	"mbr"	0	0	1	2
6160	6159	"result"	"geometry"	0	0	0	0
6161	6159	"wkt"	"clob"	0	0	1	1
6162	6159	"srid"	"smallint"	16	0	1	2
6165	6164	"result"	"point"	0	0	0	0
6166	6164	"wkt"	"clob"	0	0	1	1
6167	6164	"srid"	"smallint"	16	0	1	2
6170	6169	"result"	"linestring"	0	0	0	0
6171	6169	"wkt"	"clob"	0	0	1	1
6172	6169	"srid"	"smallint"	16	0	1	2
6175	6174	"result"	"polygon"	0	0	0	0
6176	6174	"wkt"	"clob"	0	0	1	1
6177	6174	"srid"	"smallint"	16	0	1	2
6180	6179	"result"	"multipoint"	0	0	0	0
6181	6179	"wkt"	"clob"	0	0	1	1
6182	6179	"srid"	"smallint"	16	0	1	2
6185	6184	"result"	"multilinestring"	0	0	0	0
6186	6184	"wkt"	"clob"	0	0	1	1
6187	6184	"srid"	"smallint"	16	0	1	2
6190	6189	"result"	"multipolygon"	0	0	0	0
6191	6189	"wkt"	"clob"	0	0	1	1
6192	6189	"srid"	"smallint"	16	0	1	2
6195	6194	"result"	"multipolygon"	0	0	0	0
6196	6194	"wkt"	"clob"	0	0	1	1
6197	6194	"srid"	"smallint"	16	0	1	2
6200	6199	"result"	"polygon"	0	0	0	0
6201	6199	"wkt"	"clob"	0	0	1	1
6202	6199	"srid"	"smallint"	16	0	1	2
6205	6204	"result"	"clob"	0	0	0	0
6206	6204	"g"	"geometry"	0	0	1	1
6209	6208	"result"	"double"	53	0	0	0
6210	6208	"g"	"geometry"	0	0	1	1
6213	6212	"result"	"double"	53	0	0	0
6214	6212	"g"	"geometry"	0	0	1	1
6217	6216	"result"	"point"	0	0	0	0
6218	6216	"x"	"double"	53	0	1	1
6219	6216	"y"	"double"	53	0	1	2
6222	6221	"result"	"int"	32	0	0	0
6223	6221	"g"	"geometry"	0	0	1	1
6226	6225	"result"	"int"	32	0	0	0
6227	6225	"g"	"geometry"	0	0	1	1
6230	6229	"result"	"int"	32	0	0	0
6231	6229	"g"	"geometry"	0	0	1	1
6234	6233	"result"	"geometry"	0	0	0	0
6235	6233	"g"	"geometry"	0	0	1	1
6238	6237	"result"	"boolean"	1	0	0	0
6239	6237	"g"	"geometry"	0	0	1	1
6242	6241	"result"	"boolean"	1	0	0	0
6243	6241	"g"	"geometry"	0	0	1	1
6246	6245	"result"	"geometry"	0	0	0	0
6247	6245	"g"	"geometry"	0	0	1	1
6250	6249	"result"	"boolean"	1	0	0	0
6251	6249	"a"	"geometry"	0	0	1	1
6252	6249	"b"	"geometry"	0	0	1	2
6255	6254	"result"	"boolean"	1	0	0	0
6256	6254	"a"	"geometry"	0	0	1	1
6257	6254	"b"	"geometry"	0	0	1	2
6260	6259	"result"	"boolean"	1	0	0	0
6261	6259	"a"	"geometry"	0	0	1	1
6262	6259	"b"	"geometry"	0	0	1	2
6265	6264	"result"	"boolean"	1	0	0	0
6266	6264	"a"	"geometry"	0	0	1	1
6267	6264	"b"	"geometry"	0	0	1	2
6270	6269	"result"	"boolean"	1	0	0	0
6271	6269	"a"	"geometry"	0	0	1	1
6272	6269	"b"	"geometry"	0	0	1	2
6275	6274	"result"	"boolean"	1	0	0	0
6276	6274	"a"	"geometry"	0	0	1	1
6277	6274	"b"	"geometry"	0	0	1	2
6280	6279	"result"	"boolean"	1	0	0	0
6281	6279	"a"	"geometry"	0	0	1	1
6282	6279	"b"	"geometry"	0	0	1	2
6285	6284	"result"	"boolean"	1	0	0	0
6286	6284	"a"	"geometry"	0	0	1	1
6287	6284	"x"	"double"	53	0	1	2
6288	6284	"y"	"double"	53	0	1	3
6291	6290	"result"	"boolean"	1	0	0	0
6292	6290	"a"	"geometry"	0	0	1	1
6293	6290	"b"	"geometry"	0	0	1	2
6296	6295	"result"	"boolean"	1	0	0	0
6297	6295	"a"	"geometry"	0	0	1	1
6298	6295	"b"	"geometry"	0	0	1	2
6299	6295	"pattern"	"clob"	0	0	1	3
6302	6301	"result"	"double"	53	0	0	0
6303	6301	"g"	"geometry"	0	0	1	1
6306	6305	"result"	"double"	53	0	0	0
6307	6305	"g"	"geometry"	0	0	1	1
6310	6309	"result"	"double"	53	0	0	0
6311	6309	"a"	"geometry"	0	0	1	1
6312	6309	"b"	"geometry"	0	0	1	2
6315	6314	"result"	"geometry"	0	0	0	0
6316	6314	"a"	"geometry"	0	0	1	1
6317	6314	"distance"	"double"	53	0	1	2
6320	6319	"result"	"geometry"	0	0	0	0
6321	6319	"a"	"geometry"	0	0	1	1
6324	6323	"result"	"geometry"	0	0	0	0
6325	6323	"a"	"geometry"	0	0	1	1
6326	6323	"b"	"geometry"	0	0	1	2
6329	6328	"result"	"geometry"	0	0	0	0
6330	6328	"a"	"geometry"	0	0	1	1
6331	6328	"b"	"geometry"	0	0	1	2
6334	6333	"result"	"geometry"	0	0	0	0
6335	6333	"a"	"geometry"	0	0	1	1
6336	6333	"b"	"geometry"	0	0	1	2
6339	6338	"result"	"geometry"	0	0	0	0
6340	6338	"a"	"geometry"	0	0	1	1
6341	6338	"b"	"geometry"	0	0	1	2
6346	6345	"result"	"json"	0	0	0	0
6347	6345	"js"	"json"	0	0	1	1
6348	6345	"pathexpr"	"clob"	0	0	1	2
6351	6350	"result"	"json"	0	0	0	0
6352	6350	"js"	"json"	0	0	1	1
6353	6350	"name"	"tinyint"	8	0	1	2
6356	6355	"result"	"json"	0	0	0	0
6357	6355	"js"	"json"	0	0	1	1
6358	6355	"name"	"int"	32	0	1	2
6361	6360	"result"	"json"	0	0	0	0
6362	6360	"js"	"json"	0	0	1	1
6363	6360	"name"	"bigint"	64	0	1	2
6366	6365	"result"	"clob"	0	0	0	0
6367	6365	"js"	"json"	0	0	1	1
6368	6365	"e"	"clob"	0	0	1	2
6371	6370	"result"	"double"	53	0	0	0
6372	6370	"js"	"json"	0	0	1	1
6375	6374	"result"	"bigint"	64	0	0	0
6376	6374	"js"	"json"	0	0	1	1
6379	6378	"result"	"boolean"	1	0	0	0
6380	6378	"js"	"clob"	0	0	1	1
6383	6382	"result"	"boolean"	1	0	0	0
6384	6382	"js"	"clob"	0	0	1	1
6387	6386	"result"	"boolean"	1	0	0	0
6388	6386	"js"	"clob"	0	0	1	1
6391	6390	"result"	"boolean"	1	0	0	0
6392	6390	"js"	"json"	0	0	1	1
6395	6394	"result"	"boolean"	1	0	0	0
6396	6394	"js"	"json"	0	0	1	1
6399	6398	"result"	"boolean"	1	0	0	0
6400	6398	"js"	"json"	0	0	1	1
6403	6402	"result"	"int"	32	0	0	0
6404	6402	"js"	"json"	0	0	1	1
6407	6406	"result"	"json"	0	0	0	0
6408	6406	"js"	"json"	0	0	1	1
6411	6410	"result"	"json"	0	0	0	0
6412	6410	"js"	"json"	0	0	1	1
6415	6414	"result"	"clob"	0	0	0	0
6416	6414	"js"	"json"	0	0	1	1
6419	6418	"result"	"clob"	0	0	0	0
6420	6418	"js"	"clob"	0	0	1	1
6423	6422	"result"	"clob"	0	0	0	0
6424	6422	"js"	"int"	32	0	1	1
6427	6426	"result"	"clob"	0	0	0	0
6428	6426	"js"	"json"	0	0	1	1
6431	6430	"result"	"clob"	0	0	0	0
6432	6430	"x"	"clob"	0	0	1	1
6435	6434	"result"	"clob"	0	0	0	0
6436	6434	"x"	"double"	53	0	1	1
6439	6438	"result"	"clob"	0	0	0	0
6440	6438	"v"	"clob"	0	0	1	1
6444	6443	"result"	"uuid"	0	0	0	0
6447	6446	"result"	"uuid"	0	0	0	0
6448	6446	"u"	"uuid"	0	0	1	1
6451	6450	"result"	"uuid"	0	0	0	0
6452	6450	"u"	"clob"	0	0	1	1
6455	6454	"result"	"double"	53	0	0	0
6456	6454	"chi2"	"double"	53	0	1	1
6457	6454	"datapoints"	"double"	53	0	1	2
6481	6480	"dirname"	"clob"	0	0	1	0
6484	6483	"fname"	"clob"	0	0	1	0
6487	6486	"tname"	"clob"	0	0	1	0
6490	6489	"dirname"	"clob"	0	0	1	0
6491	6489	"pat"	"clob"	0	0	1	1
6526	6525	"fname"	"varchar"	256	0	1	0
6529	6528	"fid"	"int"	32	0	1	0
6530	6528	"varnname"	"varchar"	256	0	1	1
6533	6532	"schema"	"clob"	0	0	0	0
6534	6532	"table"	"clob"	0	0	0	1
6535	6532	"column"	"clob"	0	0	0	2
6536	6532	"type"	"clob"	0	0	0	3
6537	6532	"mode"	"clob"	0	0	0	4
6538	6532	"location"	"clob"	0	0	0	5
6539	6532	"count"	"bigint"	64	0	0	6
6540	6532	"typewidth"	"int"	32	0	0	7
6541	6532	"columnsize"	"bigint"	64	0	0	8
6542	6532	"heapsize"	"bigint"	64	0	0	9
6543	6532	"hashes"	"bigint"	64	0	0	10
6544	6532	"phash"	"boolean"	1	0	0	11
6545	6532	"imprints"	"bigint"	64	0	0	12
6546	6532	"sorted"	"boolean"	1	0	0	13
6579	6578	"result"	"bigint"	64	0	0	0
6580	6578	"nme"	"clob"	0	0	1	1
6581	6578	"i"	"bigint"	64	0	1	2
6582	6578	"d"	"bigint"	64	0	1	3
6585	6584	"result"	"bigint"	64	0	0	0
6586	6584	"tpe"	"clob"	0	0	1	1
6587	6584	"i"	"bigint"	64	0	1	2
6588	6584	"w"	"int"	32	0	1	3
6591	6590	"result"	"bigint"	64	0	0	0
6592	6590	"b"	"boolean"	1	0	1	1
6593	6590	"i"	"bigint"	64	0	1	2
6596	6595	"result"	"bigint"	64	0	0	0
6597	6595	"i"	"bigint"	64	0	1	1
6598	6595	"nme"	"clob"	0	0	1	2
6601	6600	"schema"	"clob"	0	0	0	0
6602	6600	"table"	"clob"	0	0	0	1
6603	6600	"column"	"clob"	0	0	0	2
6604	6600	"type"	"clob"	0	0	0	3
6605	6600	"count"	"bigint"	64	0	0	4
6606	6600	"columnsize"	"bigint"	64	0	0	5
6607	6600	"heapsize"	"bigint"	64	0	0	6
6608	6600	"hashes"	"bigint"	64	0	0	7
6609	6600	"imprints"	"bigint"	64	0	0	8
6610	6600	"sorted"	"boolean"	1	0	0	9
6648	6647	"MinMax"	"int"	32	0	1	0
6649	6647	"sample"	"bigint"	64	0	1	1
6652	6651	"MinMax"	"int"	32	0	1	0
6653	6651	"sample"	"bigint"	64	0	1	1
6654	6651	"sch"	"clob"	0	0	1	2
6657	6656	"MinMax"	"int"	32	0	1	0
6658	6656	"sample"	"bigint"	64	0	1	1
6659	6656	"sch"	"clob"	0	0	1	2
6660	6656	"tbl"	"clob"	0	0	1	3
6663	6662	"MinMax"	"int"	32	0	1	0
6664	6662	"sample"	"bigint"	64	0	1	1
6665	6662	"sch"	"clob"	0	0	1	2
6666	6662	"tbl"	"clob"	0	0	1	3
6667	6662	"col"	"clob"	0	0	1	4
6670	6669	"result"	"clob"	0	0	0	0
6671	6669	"src"	"clob"	0	0	1	1
6674	6673	"result"	"smallint"	16	0	0	0
6675	6673	"one"	"tinyint"	8	0	1	1
6676	6673	"two"	"tinyint"	8	0	1	2
6679	6678	"result"	"int"	32	0	0	0
6680	6678	"one"	"smallint"	16	0	1	1
6681	6678	"two"	"smallint"	16	0	1	2
6684	6683	"result"	"bigint"	64	0	0	0
6685	6683	"one"	"int"	32	0	1	1
6686	6683	"two"	"int"	32	0	1	2
6690	6689	"bam_repos"	"clob"	0	0	1	0
6691	6689	"dbschema"	"smallint"	16	0	1	1
6692	6689	"nr_threads"	"smallint"	16	0	1	2
6695	6694	"bam_files"	"clob"	0	0	1	0
6696	6694	"dbschema"	"smallint"	16	0	1	1
6697	6694	"nr_threads"	"smallint"	16	0	1	2
6700	6699	"bam_file"	"clob"	0	0	1	0
6701	6699	"dbschema"	"smallint"	16	0	1	1
6704	6703	"file_id"	"bigint"	64	0	1	0
6705	6703	"dbschema"	"smallint"	16	0	1	1
6708	6707	"result"	"boolean"	1	0	0	0
6709	6707	"flag"	"smallint"	16	0	1	1
6710	6707	"name"	"clob"	0	0	1	2
6713	6712	"result"	"clob"	0	0	0	0
6714	6712	"seq"	"clob"	0	0	1	1
6717	6716	"result"	"clob"	0	0	0	0
6718	6716	"qual"	"clob"	0	0	1	1
6721	6720	"result"	"int"	32	0	0	0
6722	6720	"cigar"	"clob"	0	0	1	1
6725	6724	"output_path"	"clob"	0	0	1	0
6728	6727	"output_path"	"clob"	0	0	1	0
6798	6797	"value"	"tinyint"	8	0	0	0
6799	6797	"first"	"tinyint"	8	0	1	1
6800	6797	"last"	"tinyint"	8	0	1	2
6803	6802	"value"	"tinyint"	8	0	0	0
6804	6802	"first"	"tinyint"	8	0	1	1
6805	6802	"last"	"tinyint"	8	0	1	2
6806	6802	"stepsize"	"tinyint"	8	0	1	3
6809	6808	"value"	"smallint"	16	0	0	0
6810	6808	"first"	"smallint"	16	0	1	1
6811	6808	"last"	"smallint"	16	0	1	2
6814	6813	"value"	"smallint"	16	0	0	0
6815	6813	"first"	"smallint"	16	0	1	1
6816	6813	"last"	"smallint"	16	0	1	2
6817	6813	"stepsize"	"smallint"	16	0	1	3
6820	6819	"value"	"int"	32	0	0	0
6821	6819	"first"	"int"	32	0	1	1
6822	6819	"last"	"int"	32	0	1	2
6825	6824	"value"	"int"	32	0	0	0
6826	6824	"first"	"int"	32	0	1	1
6827	6824	"last"	"int"	32	0	1	2
6828	6824	"stepsize"	"int"	32	0	1	3
6831	6830	"value"	"bigint"	64	0	0	0
6832	6830	"first"	"bigint"	64	0	1	1
6833	6830	"last"	"bigint"	64	0	1	2
6836	6835	"value"	"bigint"	64	0	0	0
6837	6835	"first"	"bigint"	64	0	1	1
6838	6835	"last"	"bigint"	64	0	1	2
6839	6835	"stepsize"	"bigint"	64	0	1	3
6842	6841	"value"	"real"	24	0	0	0
6843	6841	"first"	"real"	24	0	1	1
6844	6841	"last"	"real"	24	0	1	2
6845	6841	"stepsize"	"real"	24	0	1	3
6848	6847	"value"	"double"	53	0	0	0
6849	6847	"first"	"double"	53	0	1	1
6850	6847	"last"	"double"	53	0	1	2
6851	6847	"stepsize"	"double"	53	0	1	3
6854	6853	"value"	"decimal"	10	2	0	0
6855	6853	"first"	"decimal"	10	2	1	1
6856	6853	"last"	"decimal"	10	2	1	2
6857	6853	"stepsize"	"decimal"	10	2	1	3
6860	6859	"value"	"timestamp"	7	0	0	0
6861	6859	"first"	"timestamp"	7	0	1	1
6862	6859	"last"	"timestamp"	7	0	1	2
6863	6859	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 236 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
366	5278	7
365	5278	7
868	5278	7
366	5282	7
365	5282	7
868	5282	7
5446	5475	5
5456	5486	5
5446	5504	5
5456	5504	5
5515	5543	5
2003	5580	7
2001	5580	7
2002	5580	7
5242	5580	7
5251	5585	7
5249	5585	7
5250	5585	7
2005	5585	7
2001	5585	7
2003	5585	7
5210	5590	7
2047	5590	7
2046	5590	7
2049	5590	7
2048	5590	7
5210	5595	7
2088	5595	7
2086	5595	7
2090	5595	7
2083	5595	7
2079	5595	7
5210	5600	7
2047	5600	7
2046	5600	7
2049	5600	7
2092	5600	7
2091	5600	7
2048	5600	7
2093	5600	7
2094	5600	7
5210	5605	7
2081	5605	7
2079	5605	7
2084	5605	7
2080	5605	7
2083	5605	7
5210	5610	7
2047	5610	7
2046	5610	7
2049	5610	7
2017	5610	7
2016	5610	7
2048	5610	7
2018	5610	7
5220	5615	7
2047	5615	7
2046	5615	7
2049	5615	7
2048	5615	7
5210	5615	7
5220	5620	7
2081	5620	7
2079	5620	7
2084	5620	7
2103	5620	7
2102	5620	7
2104	5620	7
2080	5620	7
2083	5620	7
149	5620	7
31	5620	7
30	5620	7
32	5620	7
5220	5625	7
2088	5625	7
2086	5625	7
2090	5625	7
2083	5625	7
2079	5625	7
2087	5625	7
2103	5625	7
2102	5625	7
2104	5625	7
31	5625	7
30	5625	7
32	5625	7
5220	5630	7
2047	5630	7
2046	5630	7
2049	5630	7
2048	5630	7
2017	5630	7
2016	5630	7
2018	5630	7
5220	5635	7
2047	5635	7
2046	5635	7
2049	5635	7
2092	5635	7
2091	5635	7
2048	5635	7
2093	5635	7
5210	5640	7
2047	5640	7
2046	5640	7
2049	5640	7
2017	5640	7
2016	5640	7
2048	5640	7
2018	5640	7
5210	5645	7
2047	5645	7
2046	5645	7
2049	5645	7
2092	5645	7
2091	5645	7
2048	5645	7
2093	5645	7
2018	5650	7
2016	5650	7
2017	5650	7
2047	5650	7
2046	5650	7
2049	5650	7
2048	5650	7
2018	5655	7
2016	5655	7
2017	5655	7
2047	5655	7
2046	5655	7
2049	5655	7
2092	5655	7
2091	5655	7
2048	5655	7
2093	5655	7
2083	5660	7
2079	5660	7
2080	5660	7
2084	5660	7
5669	5683	5
113	5702	7
37	5702	7
35	5702	7
1011	5702	7
997	5702	7
208	5702	7
1008	5702	7
209	5702	7
32	5714	7
429	5714	7
113	5714	7
115	5714	7
34	5714	7
5709	5714	7
5755	5763	5
5765	5771	5
5791	5809	5
5829	5839	5
6459	6461	10
6459	6460	4
6464	6466	10
6467	6469	10
6464	6465	4
6472	6474	10
6475	6477	10
6472	6473	4
6532	6562	5
6564	6576	13
6574	6576	13
6565	6576	13
6566	6576	13
6567	6576	13
6568	6576	13
6569	6576	13
6570	6576	13
6571	6576	13
6572	6576	13
6573	6576	13
32	6578	7
210	6578	7
216	6578	7
112	6584	7
33	6584	7
209	6584	7
210	6584	7
32	6590	7
210	6590	7
113	6595	7
32	6595	7
325	6595	7
6564	6600	7
6574	6600	7
6565	6600	7
6566	6600	7
6567	6600	7
6569	6600	7
6570	6600	7
6571	6600	7
6572	6600	7
6573	6600	7
6578	6600	7
6584	6600	7
6590	6600	7
6595	6600	7
6600	6622	5
6600	6632	5
47	6632	5
54	6632	5
50	6632	5
34	6632	5
32	6632	5
210	6632	5
6730	6737	10
6730	6736	4
6740	6748	10
6741	6748	10
6741	6750	10
6740	6747	4
6741	6747	4
6736	6749	11
6741	6749	11
6753	6767	10
6754	6767	10
6754	6769	10
6753	6766	4
6754	6766	4
6736	6768	11
6754	6768	11
6772	6779	10
6773	6779	10
6773	6781	10
6772	6778	4
6773	6778	4
6736	6780	11
6773	6780	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1361 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
28	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
29	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
30	"hash"	"hash"	"mkey"	0	1	false	false	false	0
31	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
32	"="	"="	"calc"	0	1	false	false	false	0
33	"<>"	"!="	"calc"	0	1	false	false	false	0
34	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
35	">"	">"	"calc"	0	1	false	false	false	0
36	">="	">="	"calc"	0	1	false	false	false	0
37	"<"	"<"	"calc"	0	1	false	false	false	0
38	"<="	"<="	"calc"	0	1	false	false	false	0
42	"in"	"in"	"calc"	0	1	false	false	false	0
43	"identity"	"identity"	"calc"	0	1	false	false	false	0
44	"rowid"	"identity"	"calc"	0	1	false	false	false	0
45	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
48	"sql_min"	"min"	"calc"	0	1	false	false	false	0
49	"sql_max"	"max"	"calc"	0	1	false	false	false	0
50	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
68	"mod"	"%"	"calc"	0	1	false	false	false	0
69	"mod"	"%"	"calc"	0	1	false	false	false	0
70	"mod"	"%"	"calc"	0	1	false	false	false	0
71	"mod"	"%"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
89	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
90	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
91	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
92	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
93	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
94	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
95	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
96	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
97	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
98	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
99	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
100	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
101	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
102	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
103	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
104	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
105	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
106	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
107	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
108	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
109	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
110	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
111	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
112	"and"	"and"	"calc"	0	1	false	false	false	0
113	"or"	"or"	"calc"	0	1	false	false	false	0
114	"xor"	"xor"	"calc"	0	1	false	false	false	0
115	"not"	"not"	"calc"	0	1	false	false	false	0
116	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
117	"sql_add"	"+"	"calc"	0	1	false	false	false	0
118	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
119	"sql_div"	"/"	"calc"	0	1	false	false	false	0
120	"bit_and"	"and"	"calc"	0	1	false	false	false	0
121	"bit_or"	"or"	"calc"	0	1	false	false	false	0
122	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
123	"bit_not"	"not"	"calc"	0	1	false	false	false	0
124	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
125	"right_shift"	">>"	"calc"	0	1	false	false	false	0
126	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
127	"abs"	"abs"	"calc"	0	1	false	false	false	0
128	"sign"	"sign"	"calc"	0	1	false	false	false	0
129	"scale_up"	"*"	"calc"	0	1	false	false	false	0
130	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
131	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
132	"sql_add"	"+"	"calc"	0	1	false	false	false	0
133	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
134	"sql_div"	"/"	"calc"	0	1	false	false	false	0
135	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
136	"sql_add"	"+"	"calc"	0	1	false	false	false	0
137	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
138	"sql_div"	"/"	"calc"	0	1	false	false	false	0
139	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
140	"sql_add"	"+"	"calc"	0	1	false	false	false	0
141	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
142	"sql_div"	"/"	"calc"	0	1	false	false	false	0
143	"bit_and"	"and"	"calc"	0	1	false	false	false	0
144	"bit_or"	"or"	"calc"	0	1	false	false	false	0
145	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
146	"bit_not"	"not"	"calc"	0	1	false	false	false	0
147	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
148	"right_shift"	">>"	"calc"	0	1	false	false	false	0
149	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
150	"abs"	"abs"	"calc"	0	1	false	false	false	0
151	"sign"	"sign"	"calc"	0	1	false	false	false	0
152	"scale_up"	"*"	"calc"	0	1	false	false	false	0
153	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
154	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
155	"sql_add"	"+"	"calc"	0	1	false	false	false	0
156	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
157	"sql_div"	"/"	"calc"	0	1	false	false	false	0
158	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
159	"sql_add"	"+"	"calc"	0	1	false	false	false	0
160	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
161	"sql_div"	"/"	"calc"	0	1	false	false	false	0
162	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
163	"sql_add"	"+"	"calc"	0	1	false	false	false	0
164	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
165	"sql_div"	"/"	"calc"	0	1	false	false	false	0
166	"bit_and"	"and"	"calc"	0	1	false	false	false	0
167	"bit_or"	"or"	"calc"	0	1	false	false	false	0
168	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
169	"bit_not"	"not"	"calc"	0	1	false	false	false	0
170	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
171	"right_shift"	">>"	"calc"	0	1	false	false	false	0
172	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
173	"abs"	"abs"	"calc"	0	1	false	false	false	0
174	"sign"	"sign"	"calc"	0	1	false	false	false	0
175	"scale_up"	"*"	"calc"	0	1	false	false	false	0
176	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
177	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
178	"sql_add"	"+"	"calc"	0	1	false	false	false	0
179	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
180	"sql_div"	"/"	"calc"	0	1	false	false	false	0
181	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
182	"sql_add"	"+"	"calc"	0	1	false	false	false	0
183	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
184	"sql_div"	"/"	"calc"	0	1	false	false	false	0
185	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
186	"sql_add"	"+"	"calc"	0	1	false	false	false	0
187	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
188	"sql_div"	"/"	"calc"	0	1	false	false	false	0
189	"bit_and"	"and"	"calc"	0	1	false	false	false	0
190	"bit_or"	"or"	"calc"	0	1	false	false	false	0
191	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
192	"bit_not"	"not"	"calc"	0	1	false	false	false	0
193	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
194	"right_shift"	">>"	"calc"	0	1	false	false	false	0
195	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
196	"abs"	"abs"	"calc"	0	1	false	false	false	0
197	"sign"	"sign"	"calc"	0	1	false	false	false	0
198	"scale_up"	"*"	"calc"	0	1	false	false	false	0
199	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
200	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
201	"sql_add"	"+"	"calc"	0	1	false	false	false	0
202	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
203	"sql_div"	"/"	"calc"	0	1	false	false	false	0
204	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
205	"sql_add"	"+"	"calc"	0	1	false	false	false	0
206	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
207	"sql_div"	"/"	"calc"	0	1	false	false	false	0
208	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
209	"sql_add"	"+"	"calc"	0	1	false	false	false	0
210	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
211	"sql_div"	"/"	"calc"	0	1	false	false	false	0
212	"bit_and"	"and"	"calc"	0	1	false	false	false	0
213	"bit_or"	"or"	"calc"	0	1	false	false	false	0
214	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
215	"bit_not"	"not"	"calc"	0	1	false	false	false	0
216	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
217	"right_shift"	">>"	"calc"	0	1	false	false	false	0
218	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
219	"abs"	"abs"	"calc"	0	1	false	false	false	0
220	"sign"	"sign"	"calc"	0	1	false	false	false	0
221	"scale_up"	"*"	"calc"	0	1	false	false	false	0
222	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
223	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
224	"sql_add"	"+"	"calc"	0	1	false	false	false	0
225	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
226	"sql_div"	"/"	"calc"	0	1	false	false	false	0
227	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
228	"sql_add"	"+"	"calc"	0	1	false	false	false	0
229	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
230	"sql_div"	"/"	"calc"	0	1	false	false	false	0
231	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
232	"sql_add"	"+"	"calc"	0	1	false	false	false	0
233	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
234	"sql_div"	"/"	"calc"	0	1	false	false	false	0
235	"bit_and"	"and"	"calc"	0	1	false	false	false	0
236	"bit_or"	"or"	"calc"	0	1	false	false	false	0
237	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
238	"bit_not"	"not"	"calc"	0	1	false	false	false	0
239	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
240	"right_shift"	">>"	"calc"	0	1	false	false	false	0
241	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
242	"abs"	"abs"	"calc"	0	1	false	false	false	0
243	"sign"	"sign"	"calc"	0	1	false	false	false	0
244	"scale_up"	"*"	"calc"	0	1	false	false	false	0
245	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
246	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
247	"sql_add"	"+"	"calc"	0	1	false	false	false	0
248	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
249	"sql_div"	"/"	"calc"	0	1	false	false	false	0
250	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
251	"sql_add"	"+"	"calc"	0	1	false	false	false	0
252	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
253	"sql_div"	"/"	"calc"	0	1	false	false	false	0
254	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
255	"sql_add"	"+"	"calc"	0	1	false	false	false	0
256	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
257	"sql_div"	"/"	"calc"	0	1	false	false	false	0
258	"bit_and"	"and"	"calc"	0	1	false	false	false	0
259	"bit_or"	"or"	"calc"	0	1	false	false	false	0
260	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
261	"bit_not"	"not"	"calc"	0	1	false	false	false	0
262	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
263	"right_shift"	">>"	"calc"	0	1	false	false	false	0
264	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
265	"abs"	"abs"	"calc"	0	1	false	false	false	0
266	"sign"	"sign"	"calc"	0	1	false	false	false	0
267	"scale_up"	"*"	"calc"	0	1	false	false	false	0
268	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
269	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
270	"sql_add"	"+"	"calc"	0	1	false	false	false	0
271	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
272	"sql_div"	"/"	"calc"	0	1	false	false	false	0
273	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
274	"sql_add"	"+"	"calc"	0	1	false	false	false	0
275	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
276	"sql_div"	"/"	"calc"	0	1	false	false	false	0
277	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
278	"sql_add"	"+"	"calc"	0	1	false	false	false	0
279	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
280	"sql_div"	"/"	"calc"	0	1	false	false	false	0
281	"bit_and"	"and"	"calc"	0	1	false	false	false	0
282	"bit_or"	"or"	"calc"	0	1	false	false	false	0
283	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
284	"bit_not"	"not"	"calc"	0	1	false	false	false	0
285	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
286	"right_shift"	">>"	"calc"	0	1	false	false	false	0
287	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
288	"abs"	"abs"	"calc"	0	1	false	false	false	0
289	"sign"	"sign"	"calc"	0	1	false	false	false	0
290	"scale_up"	"*"	"calc"	0	1	false	false	false	0
291	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
292	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
293	"sql_add"	"+"	"calc"	0	1	false	false	false	0
294	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
295	"sql_div"	"/"	"calc"	0	1	false	false	false	0
296	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
297	"sql_add"	"+"	"calc"	0	1	false	false	false	0
298	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
299	"sql_div"	"/"	"calc"	0	1	false	false	false	0
300	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
301	"sql_add"	"+"	"calc"	0	1	false	false	false	0
302	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
303	"sql_div"	"/"	"calc"	0	1	false	false	false	0
304	"bit_and"	"and"	"calc"	0	1	false	false	false	0
305	"bit_or"	"or"	"calc"	0	1	false	false	false	0
306	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
307	"bit_not"	"not"	"calc"	0	1	false	false	false	0
308	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
309	"right_shift"	">>"	"calc"	0	1	false	false	false	0
310	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
311	"abs"	"abs"	"calc"	0	1	false	false	false	0
312	"sign"	"sign"	"calc"	0	1	false	false	false	0
313	"scale_up"	"*"	"calc"	0	1	false	false	false	0
314	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
315	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
316	"sql_add"	"+"	"calc"	0	1	false	false	false	0
317	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
318	"sql_div"	"/"	"calc"	0	1	false	false	false	0
319	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
320	"sql_add"	"+"	"calc"	0	1	false	false	false	0
321	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
322	"sql_div"	"/"	"calc"	0	1	false	false	false	0
323	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
324	"sql_add"	"+"	"calc"	0	1	false	false	false	0
325	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
326	"sql_div"	"/"	"calc"	0	1	false	false	false	0
327	"bit_and"	"and"	"calc"	0	1	false	false	false	0
328	"bit_or"	"or"	"calc"	0	1	false	false	false	0
329	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
330	"bit_not"	"not"	"calc"	0	1	false	false	false	0
331	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
332	"right_shift"	">>"	"calc"	0	1	false	false	false	0
333	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
334	"abs"	"abs"	"calc"	0	1	false	false	false	0
335	"sign"	"sign"	"calc"	0	1	false	false	false	0
336	"scale_up"	"*"	"calc"	0	1	false	false	false	0
337	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
338	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
339	"sql_add"	"+"	"calc"	0	1	false	false	false	0
340	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
341	"sql_div"	"/"	"calc"	0	1	false	false	false	0
342	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
343	"sql_add"	"+"	"calc"	0	1	false	false	false	0
344	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
345	"sql_div"	"/"	"calc"	0	1	false	false	false	0
346	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
347	"sql_add"	"+"	"calc"	0	1	false	false	false	0
348	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
349	"sql_div"	"/"	"calc"	0	1	false	false	false	0
350	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
351	"abs"	"abs"	"calc"	0	1	false	false	false	0
352	"sign"	"sign"	"calc"	0	1	false	false	false	0
353	"scale_up"	"*"	"calc"	0	1	false	false	false	0
354	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
355	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
356	"sql_add"	"+"	"calc"	0	1	false	false	false	0
357	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
358	"sql_div"	"/"	"calc"	0	1	false	false	false	0
359	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
360	"sql_add"	"+"	"calc"	0	1	false	false	false	0
361	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
362	"sql_div"	"/"	"calc"	0	1	false	false	false	0
363	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
364	"sql_add"	"+"	"calc"	0	1	false	false	false	0
365	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
366	"sql_div"	"/"	"calc"	0	1	false	false	false	0
367	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
368	"abs"	"abs"	"calc"	0	1	false	false	false	0
369	"sign"	"sign"	"calc"	0	1	false	false	false	0
370	"scale_up"	"*"	"calc"	0	1	false	false	false	0
371	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
372	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
373	"sql_add"	"+"	"calc"	0	1	false	false	false	0
374	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
375	"sql_div"	"/"	"calc"	0	1	false	false	false	0
376	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
377	"sql_add"	"+"	"calc"	0	1	false	false	false	0
378	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
379	"sql_div"	"/"	"calc"	0	1	false	false	false	0
380	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
381	"sql_add"	"+"	"calc"	0	1	false	false	false	0
382	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
383	"sql_div"	"/"	"calc"	0	1	false	false	false	0
384	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
385	"abs"	"abs"	"calc"	0	1	false	false	false	0
386	"sign"	"sign"	"calc"	0	1	false	false	false	0
387	"scale_up"	"*"	"calc"	0	1	false	false	false	0
388	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
389	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
390	"sql_add"	"+"	"calc"	0	1	false	false	false	0
391	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
392	"sql_div"	"/"	"calc"	0	1	false	false	false	0
393	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
394	"abs"	"abs"	"calc"	0	1	false	false	false	0
395	"sign"	"sign"	"calc"	0	1	false	false	false	0
396	"scale_up"	"*"	"calc"	0	1	false	false	false	0
397	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
398	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
399	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
404	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
405	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
408	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
412	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
414	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
415	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
416	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
418	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
419	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
420	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
421	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
422	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
423	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
424	"round"	"round"	"sql"	0	1	false	false	false	0
425	"round"	"round"	"sql"	0	1	false	false	false	0
426	"round"	"round"	"sql"	0	1	false	false	false	0
427	"round"	"round"	"sql"	0	1	false	false	false	0
428	"round"	"round"	"sql"	0	1	false	false	false	0
429	"round"	"round"	"sql"	0	1	false	false	false	0
430	"scale_up"	"*"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_up"	"*"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_up"	"*"	"calc"	0	1	false	false	false	0
438	"scale_up"	"*"	"calc"	0	1	false	false	false	0
439	"scale_up"	"*"	"calc"	0	1	false	false	false	0
440	"scale_up"	"*"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_up"	"*"	"calc"	0	1	false	false	false	0
443	"scale_up"	"*"	"calc"	0	1	false	false	false	0
444	"scale_up"	"*"	"calc"	0	1	false	false	false	0
445	"scale_up"	"*"	"calc"	0	1	false	false	false	0
446	"scale_up"	"*"	"calc"	0	1	false	false	false	0
447	"scale_up"	"*"	"calc"	0	1	false	false	false	0
448	"scale_up"	"*"	"calc"	0	1	false	false	false	0
449	"scale_up"	"*"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_up"	"*"	"calc"	0	1	false	false	false	0
455	"scale_up"	"*"	"calc"	0	1	false	false	false	0
456	"scale_up"	"*"	"calc"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"scale_up"	"*"	"calc"	0	1	false	false	false	0
829	"scale_up"	"*"	"calc"	0	1	false	false	false	0
830	"power"	"pow"	"mmath"	0	1	false	false	false	0
831	"floor"	"floor"	"mmath"	0	1	false	false	false	0
832	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
833	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
834	"sin"	"sin"	"mmath"	0	1	false	false	false	0
835	"cos"	"cos"	"mmath"	0	1	false	false	false	0
836	"tan"	"tan"	"mmath"	0	1	false	false	false	0
837	"asin"	"asin"	"mmath"	0	1	false	false	false	0
838	"acos"	"acos"	"mmath"	0	1	false	false	false	0
839	"atan"	"atan"	"mmath"	0	1	false	false	false	0
840	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
841	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
842	"cot"	"cot"	"mmath"	0	1	false	false	false	0
843	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
844	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
845	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
846	"exp"	"exp"	"mmath"	0	1	false	false	false	0
847	"log"	"log"	"mmath"	0	1	false	false	false	0
848	"log10"	"log10"	"mmath"	0	1	false	false	false	0
849	"power"	"pow"	"mmath"	0	1	false	false	false	0
850	"floor"	"floor"	"mmath"	0	1	false	false	false	0
851	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
852	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
853	"sin"	"sin"	"mmath"	0	1	false	false	false	0
854	"cos"	"cos"	"mmath"	0	1	false	false	false	0
855	"tan"	"tan"	"mmath"	0	1	false	false	false	0
856	"asin"	"asin"	"mmath"	0	1	false	false	false	0
857	"acos"	"acos"	"mmath"	0	1	false	false	false	0
858	"atan"	"atan"	"mmath"	0	1	false	false	false	0
859	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
860	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
861	"cot"	"cot"	"mmath"	0	1	false	false	false	0
862	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
863	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
864	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
865	"exp"	"exp"	"mmath"	0	1	false	false	false	0
866	"log"	"log"	"mmath"	0	1	false	false	false	0
867	"log10"	"log10"	"mmath"	0	1	false	false	false	0
868	"pi"	"pi"	"mmath"	0	1	false	false	false	0
869	"rand"	"rand"	"mmath"	0	1	true	false	false	0
870	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
871	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
872	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
873	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
874	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
875	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
876	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
877	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
878	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
879	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
880	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
881	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
882	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
883	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
884	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
885	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
886	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
887	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
888	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
889	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
890	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
891	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
892	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
893	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
894	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
895	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
896	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
897	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
898	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
899	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
900	"year"	"year"	"mtime"	0	1	false	false	false	0
901	"month"	"month"	"mtime"	0	1	false	false	false	0
902	"day"	"day"	"mtime"	0	1	false	false	false	0
903	"hour"	"hours"	"mtime"	0	1	false	false	false	0
904	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
905	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
906	"hour"	"hours"	"mtime"	0	1	false	false	false	0
907	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
908	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
909	"year"	"year"	"mtime"	0	1	false	false	false	0
910	"month"	"month"	"mtime"	0	1	false	false	false	0
911	"day"	"day"	"mtime"	0	1	false	false	false	0
912	"hour"	"hours"	"mtime"	0	1	false	false	false	0
913	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
914	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
915	"year"	"year"	"mtime"	0	1	false	false	false	0
916	"month"	"month"	"mtime"	0	1	false	false	false	0
917	"day"	"day"	"mtime"	0	1	false	false	false	0
918	"hour"	"hours"	"mtime"	0	1	false	false	false	0
919	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
920	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
921	"year"	"year"	"mtime"	0	1	false	false	false	0
922	"month"	"month"	"mtime"	0	1	false	false	false	0
923	"day"	"day"	"mtime"	0	1	false	false	false	0
924	"hour"	"hours"	"mtime"	0	1	false	false	false	0
925	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
926	"second"	"seconds"	"mtime"	0	1	false	false	false	0
927	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
928	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
929	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
930	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
931	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
932	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
933	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
934	"restart"	"restart"	"sql"	0	1	false	false	false	0
935	"index"	"index"	"calc"	0	1	false	false	false	0
936	"index"	"index"	"calc"	0	1	false	false	false	0
937	"index"	"index"	"calc"	0	1	false	false	false	0
938	"strings"	"strings"	"calc"	0	1	false	false	false	0
939	"locate"	"locate"	"str"	0	1	false	false	false	0
940	"locate"	"locate"	"str"	0	1	false	false	false	0
941	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
942	"substring"	"substring"	"str"	0	1	false	false	false	0
943	"substring"	"substring"	"str"	0	1	false	false	false	0
944	"like"	"like"	"algebra"	0	1	false	false	false	0
945	"like"	"like"	"algebra"	0	1	false	false	false	0
946	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
947	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
948	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
949	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
950	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
951	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
952	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
953	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
954	"concat"	"+"	"calc"	0	1	false	false	false	0
955	"ascii"	"ascii"	"str"	0	1	false	false	false	0
956	"code"	"unicode"	"str"	0	1	false	false	false	0
957	"length"	"stringlength"	"str"	0	1	false	false	false	0
958	"right"	"stringright"	"str"	0	1	false	false	false	0
959	"left"	"stringleft"	"str"	0	1	false	false	false	0
960	"upper"	"toUpper"	"str"	0	1	false	false	false	0
961	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
962	"lower"	"toLower"	"str"	0	1	false	false	false	0
963	"lcase"	"toLower"	"str"	0	1	false	false	false	0
964	"trim"	"trim"	"str"	0	1	false	false	false	0
965	"trim"	"trim"	"str"	0	1	false	false	false	0
966	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
967	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
968	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
969	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
970	"lpad"	"lpad"	"str"	0	1	false	false	false	0
971	"lpad"	"lpad"	"str"	0	1	false	false	false	0
972	"rpad"	"rpad"	"str"	0	1	false	false	false	0
973	"rpad"	"rpad"	"str"	0	1	false	false	false	0
974	"insert"	"insert"	"str"	0	1	false	false	false	0
975	"replace"	"replace"	"str"	0	1	false	false	false	0
976	"repeat"	"repeat"	"str"	0	1	false	false	false	0
977	"space"	"space"	"str"	0	1	false	false	false	0
978	"char_length"	"length"	"str"	0	1	false	false	false	0
979	"character_length"	"length"	"str"	0	1	false	false	false	0
980	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
981	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
982	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
983	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
984	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
985	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
986	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
987	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
988	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
989	"index"	"index"	"calc"	0	1	false	false	false	0
990	"index"	"index"	"calc"	0	1	false	false	false	0
991	"index"	"index"	"calc"	0	1	false	false	false	0
992	"strings"	"strings"	"calc"	0	1	false	false	false	0
993	"locate"	"locate"	"str"	0	1	false	false	false	0
994	"locate"	"locate"	"str"	0	1	false	false	false	0
995	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
996	"substring"	"substring"	"str"	0	1	false	false	false	0
997	"substring"	"substring"	"str"	0	1	false	false	false	0
998	"like"	"like"	"algebra"	0	1	false	false	false	0
999	"like"	"like"	"algebra"	0	1	false	false	false	0
1000	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1001	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1002	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1003	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1004	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1005	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1006	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1007	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1008	"concat"	"+"	"calc"	0	1	false	false	false	0
1009	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1010	"code"	"unicode"	"str"	0	1	false	false	false	0
1011	"length"	"stringlength"	"str"	0	1	false	false	false	0
1012	"right"	"stringright"	"str"	0	1	false	false	false	0
1013	"left"	"stringleft"	"str"	0	1	false	false	false	0
1014	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1015	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1016	"lower"	"toLower"	"str"	0	1	false	false	false	0
1017	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1018	"trim"	"trim"	"str"	0	1	false	false	false	0
1019	"trim"	"trim"	"str"	0	1	false	false	false	0
1020	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1021	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1022	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1023	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1024	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1025	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1026	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1027	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1028	"insert"	"insert"	"str"	0	1	false	false	false	0
1029	"replace"	"replace"	"str"	0	1	false	false	false	0
1030	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1031	"space"	"space"	"str"	0	1	false	false	false	0
1032	"char_length"	"length"	"str"	0	1	false	false	false	0
1033	"character_length"	"length"	"str"	0	1	false	false	false	0
1034	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1035	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1036	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1037	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1038	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1039	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1040	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1041	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1042	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1043	"index"	"index"	"calc"	0	1	false	false	false	0
1044	"index"	"index"	"calc"	0	1	false	false	false	0
1045	"index"	"index"	"calc"	0	1	false	false	false	0
1046	"strings"	"strings"	"calc"	0	1	false	false	false	0
1047	"locate"	"locate"	"str"	0	1	false	false	false	0
1048	"locate"	"locate"	"str"	0	1	false	false	false	0
1049	"splitpart"	"splitpart"	"str"	0	1	false	false	false	0
1050	"substring"	"substring"	"str"	0	1	false	false	false	0
1051	"substring"	"substring"	"str"	0	1	false	false	false	0
1052	"like"	"like"	"algebra"	0	1	false	false	false	0
1053	"like"	"like"	"algebra"	0	1	false	false	false	0
1054	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1055	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1056	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1057	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1058	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1059	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1060	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1061	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1062	"concat"	"+"	"calc"	0	1	false	false	false	0
1063	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1064	"code"	"unicode"	"str"	0	1	false	false	false	0
1065	"length"	"stringlength"	"str"	0	1	false	false	false	0
1066	"right"	"stringright"	"str"	0	1	false	false	false	0
1067	"left"	"stringleft"	"str"	0	1	false	false	false	0
1068	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1069	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1070	"lower"	"toLower"	"str"	0	1	false	false	false	0
1071	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1072	"trim"	"trim"	"str"	0	1	false	false	false	0
1073	"trim"	"trim"	"str"	0	1	false	false	false	0
1074	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1075	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1076	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1077	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1078	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1079	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1080	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1081	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1082	"insert"	"insert"	"str"	0	1	false	false	false	0
1083	"replace"	"replace"	"str"	0	1	false	false	false	0
1084	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1085	"space"	"space"	"str"	0	1	false	false	false	0
1086	"char_length"	"length"	"str"	0	1	false	false	false	0
1087	"character_length"	"length"	"str"	0	1	false	false	false	0
1088	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1089	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1090	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1091	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1092	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1093	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1094	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1095	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1096	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1097	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1098	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
27	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
39	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
40	"exist"	"exist"	"aggr"	0	3	false	false	false	0
41	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
46	"min"	"min"	"aggr"	0	3	false	false	false	0
47	"max"	"max"	"aggr"	0	3	false	false	false	0
51	"sum"	"sum"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"prod"	"prod"	"aggr"	0	3	false	false	false	0
61	"prod"	"prod"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
80	"sum"	"sum"	"aggr"	0	3	false	false	false	0
81	"prod"	"prod"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"prod"	"prod"	"aggr"	0	3	false	false	false	0
84	"sum"	"sum"	"aggr"	0	3	false	false	false	0
85	"sum"	"sum"	"aggr"	0	3	false	false	false	0
86	"avg"	"avg"	"aggr"	0	3	false	false	false	0
87	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
88	"count"	"count"	"aggr"	0	3	false	false	false	0
5231	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5234	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5240	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5260	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5265	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5270	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5274	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5278	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5282	"radians"	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5286	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5289	"getanchor"	"create function getanchor( theurl url ) returns string\n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5293	"getbasename"	"create function getbasename(theurl url) returns string\n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5297	"getcontent"	"create function getcontent(theurl url)   returns string\n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5301	"getcontext"	"create function getcontext(theurl url)   returns string\n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5305	"getdomain"	"create function getdomain(theurl url) returns string\n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5309	"getextension"	"create function getextension(theurl url) returns string\n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5313	"getfile"	"create function getfile(theurl url) returns string\n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5317	"gethost"	"create function gethost(theurl url)   returns string\n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5321	"getport"	"create function getport(theurl url) returns string\n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5325	"getprotocol"	"create function getprotocol(theurl url) returns string\n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5329	"getquery"	"create function getquery(theurl url) returns string\n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5333	"getuser"	"create function getuser(theurl url) returns string\n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5337	"getroboturl"	"create function getroboturl(theurl url) returns string\n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5341	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5345	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5352	"newurl"	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5358	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5363	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5368	"str_to_time"	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.""str_to_time"";"	"mtime"	1	1	false	false	false	2000
5373	"time_to_str"	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.""time_to_str"";"	"mtime"	1	1	false	false	false	2000
5378	"str_to_timestamp"	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.""str_to_timestamp"";"	"mtime"	1	1	false	false	false	2000
5383	"timestamp_to_str"	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.""timestamp_to_str"";"	"mtime"	1	1	false	false	false	2000
5389	"broadcast"	"create function ""broadcast"" (p inet) returns inet\n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5393	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5397	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5401	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5406	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5410	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5414	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5418	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5422	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5426	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5431	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5436	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5441	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5446	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5456	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5506	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5508	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5510	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5513	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5515	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5545	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5549	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5552	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.""epoch""(sec bigint) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5556	"epoch"	"create function sys.""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5560	"epoch"	"create function sys.""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5564	"epoch"	"create function sys.""epoch""(ts timestamp with time zone) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5568	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5572	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5576	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5580	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5585	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5590	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5595	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5600	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5605	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5610	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5615	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5620	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5625	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5630	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5635	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5640	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5645	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5650	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5655	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5660	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5665	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
5669	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5685	"shutdown"	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5688	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5692	"settimeout"	"-- control the query and session time out\ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5695	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5699	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
5702	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
5709	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5714	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
5720	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5726	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5731	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5736	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5740	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5744	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5748	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5752	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
5755	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5765	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
5773	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, htype string,\n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
5787	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
5791	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
5811	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5814	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5817	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5820	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5823	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5826	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5829	"rejects"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t""message"" string,\n\t""input"" string\n)\nexternal name sql.copy_rejects;"	"sql"	1	5	false	false	false	2000
5841	"clearrejects"	"create procedure sys.clearrejects()\nexternal name sql.copy_rejects_clear;"	"sql"	1	2	true	false	false	2000
5843	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5847	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5851	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5855	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5859	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5863	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5867	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5871	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5875	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5879	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5883	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5887	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5891	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5895	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5899	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5903	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5907	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5911	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5915	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5919	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5923	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5927	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5931	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5935	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5939	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5943	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5947	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5951	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5955	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5959	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5963	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5967	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5971	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5975	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5979	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5983	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5987	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5991	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5995	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5999	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
6003	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6007	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6011	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6015	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6019	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6023	"median"	"create aggregate median(val decimal) returns decimal\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6027	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6031	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6035	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6039	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6043	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6047	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6052	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6057	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6062	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6067	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6072	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6077	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6082	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6087	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6092	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6097	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6102	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6107	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6112	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6117	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6122	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6127	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6132	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6150	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6154	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6159	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6164	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6169	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6174	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6179	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6184	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6189	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6194	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6199	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6204	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6208	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6212	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6216	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6221	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6225	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6229	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6233	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6237	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6241	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6245	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6249	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6254	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6259	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6264	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6269	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6274	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6279	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6284	"contains"	"create function contains(a geometry, x double, y double) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6290	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6295	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6301	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6305	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6309	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6314	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6319	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6323	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6328	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6333	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6338	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6345	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6342
6350	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6342
6355	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6342
6360	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6342
6365	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6342
6370	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6342
6374	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6342
6378	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6342
6382	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6342
6386	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6342
6390	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6342
6394	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6342
6398	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6342
6402	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6342
6406	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6342
6410	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6342
6414	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6342
6418	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6342
6422	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6342
6426	"output"	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6342
6430	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6342
6434	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6342
6438	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6443	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6446	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6450	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6454	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6480	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6483	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6486	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6489	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6525	"netcdf_attach"	"-- gr_name is ""GLOBAL"" or ""ROOT"" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=""""\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	"netcdf"	1	2	true	false	false	2000
6528	"netcdf_importvar"	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	"netcdf"	1	2	true	false	false	2000
6532	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""mode"" string,\n\tlocation string,\n\t""count"" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6576	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6578	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
6584	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6590	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6595	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6600	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count"" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6647	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6651	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6656	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6662	"analyze"	"create procedure sys.analyze(minmax int, ""sample"" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6669	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6673	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6678	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6683	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6689	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6687
6694	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6687
6699	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6687
6703	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6687
6707	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6687
6712	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6687
6716	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6687
6720	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6687
6724	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6687
6727	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6687
6797	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6802	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6808	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6813	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6819	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6824	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6830	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6835	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6841	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6847	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6853	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6859	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 12 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6461	6462	0	"keywords_keyword_pkey"
6466	6470	0	"table_types_table_type_id_pkey"
6469	6470	0	"table_types_table_type_name_unique"
6474	6478	0	"dependency_types_dependency_type_id_pkey"
6477	6478	0	"dependency_types_dependency_type_name_unique"
6737	6738	0	"files_pkey_file_id"
6748	6751	0	"sq_pkey_sn_file_id"
6750	6751	1	"sq_fkey_file_id"
6767	6770	0	"rg_pkey_id_file_id"
6769	6770	1	"rg_fkey_file_id"
6779	6782	0	"pg_pkey_id_file_id"
6781	6782	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 12 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6460	6462	0	"keywords_keyword_pkey"	-1	-1
6465	6470	0	"table_types_table_type_id_pkey"	-1	-1
6468	6470	1	"table_types_table_type_name_unique"	-1	-1
6473	6478	0	"dependency_types_dependency_type_id_pkey"	-1	-1
6476	6478	1	"dependency_types_dependency_type_name_unique"	-1	-1
6736	6738	0	"files_pkey_file_id"	-1	-1
6747	6751	0	"sq_pkey_sn_file_id"	-1	-1
6749	6751	2	"sq_fkey_file_id"	6736	514
6766	6770	0	"rg_pkey_id_file_id"	-1	-1
6768	6770	2	"rg_fkey_file_id"	6736	514
6778	6782	0	"pg_pkey_id_file_id"	-1	-1
6780	6782	2	"pg_fkey_file_id"	6736	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 30 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6461	"keyword"	0
6460	"keyword"	0
6466	"table_type_id"	0
6469	"table_type_name"	0
6465	"table_type_id"	0
6468	"table_type_name"	0
6474	"dependency_type_id"	0
6477	"dependency_type_name"	0
6473	"dependency_type_id"	0
6476	"dependency_type_name"	0
6737	"file_id"	0
6736	"file_id"	0
6748	"sn"	0
6748	"file_id"	1
6750	"file_id"	0
6747	"sn"	0
6747	"file_id"	1
6749	"file_id"	0
6767	"id"	0
6767	"file_id"	1
6769	"file_id"	0
6766	"id"	0
6766	"file_id"	1
6768	"file_id"	0
6779	"id"	0
6779	"file_id"	1
6781	"file_id"	0
6778	"id"	0
6778	"file_id"	1
6780	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5210	1	1	0	0
5220	1	1	0	0
5246	1	1	0	0
5249	1	1	0	0
5253	1	1	0	0
6866	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6342	"json"	3	3	true
6687	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1361 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
28
29
30
31
32
33
34
35
36
37
38
42
43
44
45
48
49
50
68
69
70
71
72
73
74
75
76
77
78
79
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
27
39
40
41
46
47
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
80
81
82
83
84
85
86
87
88
5231
5234
5240
5260
5265
5270
5274
5278
5282
5286
5289
5293
5297
5301
5305
5309
5313
5317
5321
5325
5329
5333
5337
5341
5345
5352
5358
5363
5368
5373
5378
5383
5389
5393
5397
5401
5406
5410
5414
5418
5422
5426
5431
5436
5441
5446
5456
5506
5508
5510
5513
5515
5545
5549
5552
5556
5560
5564
5568
5572
5576
5580
5585
5590
5595
5600
5605
5610
5615
5620
5625
5630
5635
5640
5645
5650
5655
5660
5665
5669
5685
5688
5692
5695
5699
5702
5709
5714
5720
5726
5731
5736
5740
5744
5748
5752
5755
5765
5773
5787
5791
5811
5814
5817
5820
5823
5826
5829
5841
5843
5847
5851
5855
5859
5863
5867
5871
5875
5879
5883
5887
5891
5895
5899
5903
5907
5911
5915
5919
5923
5927
5931
5935
5939
5943
5947
5951
5955
5959
5963
5967
5971
5975
5979
5983
5987
5991
5995
5999
6003
6007
6011
6015
6019
6023
6027
6031
6035
6039
6043
6047
6052
6057
6062
6067
6072
6077
6082
6087
6092
6097
6102
6107
6112
6117
6122
6127
6132
6150
6154
6159
6164
6169
6174
6179
6184
6189
6194
6199
6204
6208
6212
6216
6221
6225
6229
6233
6237
6241
6245
6249
6254
6259
6264
6269
6274
6279
6284
6290
6295
6301
6305
6309
6314
6319
6323
6328
6333
6338
6345
6350
6355
6360
6365
6370
6374
6378
6382
6386
6390
6394
6398
6402
6406
6410
6414
6418
6422
6426
6430
6434
6438
6443
6446
6450
6454
6480
6483
6486
6489
6525
6528
6532
6576
6578
6584
6590
6595
6600
6647
6651
6656
6662
6669
6673
6678
6683
6689
6694
6699
6703
6707
6712
6716
6720
6724
6727
6797
6802
6808
6813
6819
6824
6830
6835
6841
6847
6853
6859
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 44 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	13	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
5287	"url"	"url"	0	0	0	15	2000
5387	"inet"	"inet"	0	0	0	15	2000
6136	"wkb"	"point"	0	0	0	15	2000
6137	"wkb"	"curve"	0	0	0	15	2000
6138	"wkb"	"linestring"	0	0	0	15	2000
6139	"wkb"	"surface"	0	0	0	15	2000
6140	"wkb"	"polygon"	0	0	0	15	2000
6141	"wkb"	"multipoint"	0	0	0	15	2000
6142	"wkb"	"multicurve"	0	0	0	15	2000
6143	"wkb"	"multilinestring"	0	0	0	15	2000
6144	"wkb"	"multisurface"	0	0	0	15	2000
6145	"wkb"	"multipolygon"	0	0	0	15	2000
6146	"wkb"	"geometry"	0	0	0	15	2000
6147	"wkb"	"geomcollection"	0	0	0	15	2000
6148	"mbr"	"mbr"	0	0	0	15	2000
6343	"json"	"json"	0	0	0	15	2000
6441	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

