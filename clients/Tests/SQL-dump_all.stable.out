stdout of test 'SQL-dump_all` in directory 'clients` itself:


# 15:01:36 >  
# 15:01:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34237" "--set" "mapi_usock=/var/tmp/mtest-13451/.s.monetdb.34237" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_clients" "--set" "mal_listing=0"
# 15:01:36 >  

# MonetDB 5 server v11.17.0 (hg id: 51cced809df4)
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:34237/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13451/.s.monetdb.34237
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:19:38 >  
# 15:19:38 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-517" "--port=32251"
# 15:19:38 >  

SYSTEM SCHEMA  bam
SYSTEM SCHEMA  json
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION  sys.Intersect
SYSTEM FUNCTION  sys.Union
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION  sys.area
SYSTEM FUNCTION  sys.astext
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION  sys.boundary
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION  sys.buffer
SYSTEM FUNCTION  sys.chi2prob
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION  sys.convert
SYSTEM FUNCTION  sys.convexhull
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION  sys.crosses
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION  sys.dimension
SYSTEM FUNCTION  sys.disjoint
SYSTEM FUNCTION  sys.distance
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.envelope
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.equals
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION  sys.fitsattach
SYSTEM FUNCTION  sys.fitsload
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION  sys.geomcollectionfromtext
SYSTEM FUNCTION  sys.geometrytypeid
SYSTEM FUNCTION  sys.geomfromtext
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION  sys.intersection
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION  sys.isempty
SYSTEM FUNCTION  sys.issimple
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION  sys.linefromtext
SYSTEM FUNCTION  sys.listdir
SYSTEM FUNCTION  sys.listdirpat
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION  sys.mbroverlaps
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION  sys.mlinefromtext
SYSTEM FUNCTION  sys.mpointfromtext
SYSTEM FUNCTION  sys.mpolyfromtext
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION  sys.overlaps
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION  sys.point
SYSTEM FUNCTION  sys.pointfromtext
SYSTEM FUNCTION  sys.polyfromtext
SYSTEM FUNCTION  sys.polygonfromtext
SYSTEM FUNCTION  sys.profiler_openstream
SYSTEM FUNCTION  sys.profiler_stethoscope
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION  sys.relate
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION  sys.srid
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.symdifference
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.touches
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION  sys.within
SYSTEM FUNCTION  sys.x
SYSTEM FUNCTION  sys.y
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "bam" AUTHORIZATION "monetdb";
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "tmp";
CREATE SCHEMA "sys";
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
-- create table views for convenience
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as
select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io 
from sys.querylog_catalog() qd, sys.querylog_calls() ql
where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;
-- A summary of the table storage requirement is is available as a table view.
-- The auxiliary column denotes the maximum space if all non-sorted columns
-- would be augmented with a hash (rare situation)
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob
	external name inet."abbrev";
create function alpha(pdec double, pradius double)
returns double external name sql.alpha;
create procedure analyze()
external name sql.analyze;
create procedure analyze(tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string)
external name sql.analyze;
-- control the sample size
create procedure analyze("sample" bigint)
external name sql.analyze;
create procedure analyze(tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, "sample" bigint)
external name sql.analyze;
create procedure analyze(sch string, tbl string, col string, "sample" bigint)
external name sql.analyze;
-- ogc Spatial Analysis methods

create function area(g geometry) returns float external name geom."Area";
create function astext(g geometry) returns string external name geom."AsText";
-- The BAT buffer pool overview
create function sys.bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count bigint, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name bbp.get;
create function boundary(g geometry) returns geometry external name geom."Boundary";
create function "broadcast" (p inet) returns inet 
	external name inet."broadcast";
create function buffer(a geometry, distance float) returns geometry external name geom."Buffer";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke, Bart Scheers
-- Use statistical functions from gsl library

-- Calculate Chi squared probability
create function sys.chi2prob(chi2 double, datapoints double)
returns double external name gsl."chi2prob";
-- The predicted storage footprint of the complete database
-- determines the amount of diskspace needed for persistent storage
-- and the upperbound when all possible index structures are created.
-- The storage requirement for foreign key joins is split amongst the participants.

create function sys.columnsize(nme string, i bigint, d bigint)
returns bigint
begin
	case
	when nme = 'boolean' then return i;
	when nme = 'char' then return 2*i;
	when nme = 'smallint' then return 2 * i;
	when nme = 'int'	 then return 4 * i;
	when nme = 'bigint'	 then return 8 * i;
	when nme = 'hugeint'	 then return 16 * i;
	when nme = 'timestamp' then return 8 * i;
	when  nme = 'varchar' then
		case
		when cast(d as bigint) << 8 then return i;
		when cast(d as bigint) << 16 then return 2 * i;
		when cast(d as bigint) << 32 then return 4 * i;
		else return 8 * i;
		end case;
	else return 8 * i;
	end case;
end;
create function contains(a geometry, b geometry) returns boolean external name geom."Contains";
create function convexhull(a geometry) returns geometry external name geom."ConvexHull";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint
	external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint
	external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer
	external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd
	external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint
	external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real
	external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double
	external name "aggr"."corr";
create function crosses(a geometry, b geometry) returns boolean external name geom."Crosses";
create function date_to_str(d date, format string) returns string
	external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function degrees(r double) 
returns double
	return r*180/pi();
--Column c has a dependency on function f
create function dependencies_columns_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
--Column c has a dependency on index i 
create function dependencies_columns_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
--Column c has a dependency on key k
create function dependencies_columns_on_keys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
--Column c has a dependency on trigger tri
create function dependencies_columns_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Column c has a dependency on view v
create function dependencies_columns_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--Function f1 has a dependency on function f2
create function dependencies_functions_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
--Function f1 has a dependency on trigger tri
create function dependencies_functions_os_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
--Key k has a dependency on foreign key fk
create function dependencies_keys_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
--User (owner) has a dependency in schema s
create function dependencies_owners_on_schemas()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

--Schema s has a dependency on user u
create function dependencies_schemas_on_users()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
--Table t has a dependency on foreign key k
create function dependencies_tables_on_foreignkeys()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
--Table t has a dependency on function f
create function dependencies_tables_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
--Table t has a dependency on index  i
create function dependencies_tables_on_indexes()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
--Table t has a dependency on trigger tri

create function dependencies_tables_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
--Table t has a dependency on view v
create function dependencies_tables_on_views()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
--View v has a dependency on function f
create function dependencies_views_on_functions()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
--View v has a dependency on trigger tri
create function dependencies_views_on_triggers()
returns table (sch varchar(100), usr varchar(100), dep_type varchar(32))
return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
create function difference(a geometry, b geometry) returns geometry external name geom."Difference";
-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;
-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;
-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;
-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;
-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;

-- ogc basic methods
create function dimension(g geometry) returns integer external name geom."Dimension";
create function disjoint(a geometry, b geometry) returns boolean external name geom."Disjoint";
create function distance(a geometry, b geometry) returns float external name geom."Distance";
CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function envelope(g geometry) returns geometry external name geom."Envelope";
-- The environment table
create function sys.environment()
	returns table ("name" string, value string)
	external name sql.sql_environment;
-- ogc spatial relation methods
create function equals(a geometry, b geometry) returns boolean external name geom."Equals";
create procedure sys.evalalgebra( ra_stmt string, opt bool)
	external name sql."evalAlgebra";
-- fuse two (1-byte) tinyint values into one (2-byte) smallint value
create function fuse(one tinyint, two tinyint)
returns smallint external name udf.fuse;
-- fuse two (2-byte) smallint values into one (4-byte) integer value
create function fuse(one smallint, two smallint)
returns integer external name udf.fuse;
-- fuse two (4-byte) integer values into one (8-byte) bigint value
create function fuse(one integer, two integer)
returns bigint external name udf.fuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (c) Author M.Kersten

create function sys.generate_series(first tinyint, last tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)
returns table (value tinyint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint)
returns table (value smallint)
external name generator.series;
create function sys.generate_series(first int, last int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first int, last int, stepsize int)
returns table (value int)
external name generator.series;
create function sys.generate_series(first bigint, last bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint)
returns table (value bigint)
external name generator.series;
create function sys.generate_series(first real, last real, stepsize real)
returns table (value real)
external name generator.series;
create function sys.generate_series(first double, last double, stepsize double)
returns table (value double)
external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))
returns table (value decimal(10,2))
external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)
returns table (value timestamp)
external name generator.series;
create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom."GeomCollectionFromText";
create function geometrytypeid(g geometry) returns integer external name geom."GeometryTypeId";
-- The srid in the *FromText Functions is currently not used
create function geomfromtext(wkt string, srid smallint) returns geometry external name geom."GeomFromText";
create function getanchor( theurl url ) returns string 
	external name url."getAnchor";
create function getbasename(theurl url) returns string       
	external name url."getBasename";
create function getcontent(theurl url)   returns string       
	external name url."getContent";
create function getcontext(theurl url)   returns string       
	external name url."getContext";
create function getdomain(theurl url) returns string       
	external name url."getDomain";
create function getextension(theurl url) returns string       
	external name url."getExtension";
create function getfile(theurl url) returns string       
	external name url."getFile";
create function gethost(theurl url)   returns string       
	external name url."getHost";
create function getport(theurl url) returns string       
	external name url."getPort";
create function getprotocol(theurl url) returns string       
	external name url."getProtocol";
create function getquery(theurl url) returns string       
	external name url."getQuery";
create function getroboturl(theurl url) returns string       
	external name url."getRobotURL";
create function getuser(theurl url) returns string       
	external name url."getUser";
create function sys.hashsize(b boolean, i bigint)
returns bigint
begin
	-- assume non-compound keys
	if  b = true
	then
		return 8 * i;
	end if;
	return 0;
end;
create function sys.heapsize(tpe string, i bigint, w int)
returns bigint
begin
	if  tpe <> 'varchar' and tpe <> 'clob'
	then
		return 0;
	end if;
	return 10240 + i * w;
end;
create function "host" (p inet) returns clob
	external name inet."host";
create function "hostmask" (p inet) returns inet
	external name inet."hostmask";
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string)
returns bigint
begin
	if nme = 'boolean'
		or nme = 'tinyint'
		or nme = 'smallint'
		or nme = 'int'	
		or nme = 'bigint'	
		or nme = 'hugeint'	
		or nme = 'decimal'	
		or nme = 'date'
		or nme = 'timestamp'
		or nme = 'real'
		or nme = 'double'
	then
		return cast( i * 0.12 as bigint);
	end if ;
	return 0;
end;
create function intersection(a geometry, b geometry) returns geometry external name geom."Intersection";
create function isaurl(theurl url) returns bool
	external name url."isaURL";
create function sys.isauuid(u uuid)
returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string)
returns uuid external name uuid."isaUUID";
create function isempty(g geometry) returns boolean external name geom."IsEmpty";
create function issimple(g geometry) returns boolean external name geom."IsSimple";
create function length(g geometry) returns float external name geom."Length";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function linefromtext(wkt string, srid smallint) returns linestring external name geom."LineFromText";
create function "masklen" (p inet) returns int
	external name inet."masklen";
-- currently we only use mbr instead of
-- Envelope():Geometry
-- as that returns Geometry objects, and we prefer the explicit mbr's
-- minimum bounding rectangle (mbr)
create function mbr (g geometry) returns mbr external name geom.mbr;
create function mbroverlaps(a mbr, b mbr) returns boolean external name geom."mbroverlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- (co) Arjen de Rijke
-- Functions supporting jsonstore

create function sys.md5(v string)
returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint
	external name "aggr"."median";
create aggregate median(val smallint) returns smallint
	external name "aggr"."median";
create aggregate median(val integer) returns integer
	external name "aggr"."median";
create aggregate median(val wrd) returns wrd
	external name "aggr"."median";
create aggregate median(val bigint) returns bigint
	external name "aggr"."median";
create aggregate median(val decimal) returns decimal
 	external name "aggr"."median";
create aggregate median(val real) returns real
	external name "aggr"."median";
create aggregate median(val double) returns double
	external name "aggr"."median";
create aggregate median(val date) returns date
	external name "aggr"."median";
create aggregate median(val time) returns time
	external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp
	external name "aggr"."median";
create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom."MultiLineFromText";
create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom."MultiPointFromText";
create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom."MultiPolyFromText";
create function ms_round(num double, prc int, truncat int)
returns double
begin
	if (truncat = 0)
		then return round(num, prc);
		else return ms_trunc(num, prc);
	end if;
end;
create function ms_str(num float, prc int, truncat int)
returns string
begin
        return cast(num as string);
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))
returns varchar(32)
begin
	declare res varchar(32), aux varchar(32);
	declare ofset int;

    if ( st < 0 or st > length(s1))
        then return '';
    end if;

    set ofset = 1;
    set res = substring(s1,ofset,st-1);
    set res = res || s3;
    set ofset = st + len;
    set aux = substring(s1,ofset,length(s1)-ofset+1);
	set res = res || aux;
	return res;
end;
create function ms_trunc(num double, prc int)
returns double
external name sql.ms_trunc;
create function "netmask" (p inet) returns inet
	external name inet."netmask";
create function "network" (p inet) returns inet
	external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) 
	returns url       
	external name url."new";
create function newurl(protocol string, hostname string, file string) 
	returns url 
	external name url."new";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- show the optimizer statistics maintained by the SQL frontend
create function sys.optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;
-- MONETDB KERNEL SECTION
-- optimizer pipe catalog
create function sys.optimizers () 
	returns table (name string, def string, status string)
	external name sql.optimizers;
create function overlaps(a geometry, b geometry) returns boolean external name geom."Overlaps";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function sys.password_hash (username string) 
	returns string 
	external name sql.password;
-- operations to manipulate the state of havoc queries
create procedure sys.pause(tag int)
external name sql.sysmon_pause;
create procedure sys.pause(tag bigint)
external name sql.sysmon_pause;
create function point(x double,y double) returns point external name geom.point;
create function pointfromtext(wkt string, srid smallint) returns point external name geom."PointFromText";
create function polyfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
-- alias
create function polygonfromtext(wkt string, srid smallint) returns polygon external name geom."PolyFromText";
create aggregate quantile(val tinyint, q double) returns tinyint
 	external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint
 	external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer
 	external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd
	external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint
	external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal
 	external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real
	external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double
	external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date
	external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time
	external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp
	external name "aggr"."quantile";
-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function sys.querycache() 
	returns table (query string, count int) 
	external name sql.dump_cache;
-- Trace the SQL input
create procedure sys.querylog(filename string) 
	external name sql.logfile;
-- Each query call is stored in the table calls
-- At regular intervals the query history table should be cleaned.
-- This can be done manually on the SQL console, or be integrated
-- in the keepQuery and keepCall upon need.
-- The parameters are geared at understanding the resource claims
-- They reflect the effect of the total workload mix during execution.
-- The 'cpu' gives the average cpu load percentage over all cores on the 
-- server during execution phase. 
-- increasing cpu load indicates better use of multi-cores.
-- The 'io' indicate IOs during complete query run.
-- The 'space' is the total amount of intermediates created in MB.
-- Reducing the space component improves performance/
-- All timing in usec and all storage in bytes.

create function sys.querylog_calls()
returns table(
	id oid,				 -- references query plan
	"start" timestamp,	-- time the statement was started
	"stop" timestamp,	-- time the statement was completely finished
	arguments string,	-- actual call structure
	tuples wrd,			-- number of tuples in the result set
	run bigint,		-- time spent (in usec)  until the result export
	ship bigint,		-- time spent (in usec)  to ship the result set
	cpu int,  		-- average cpu load percentage during execution
	io int			-- percentage time waiting for IO to finish 
)
external name sql.querylog_calls;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- QUERY HISTORY
-- The query history mechanism of MonetDB/SQL relies on a few hooks.
-- The most important one is a global system variable which controls
--  monitoring of all sessions. 

create function sys.querylog_catalog()
returns table(
	id oid,
	owner string,
	defined timestamp,
	query string,
	pipe string,
	"plan" string,		-- Name of MAL plan
	mal int,			-- size of MAL plan
	optimize bigint 	-- time in usec
)
external name sql.querylog_catalog;
create procedure sys.querylog_disable()
external name sql.querylog_disable;
-- reset history for a particular user
create procedure sys.querylog_empty()
external name sql.querylog_empty;
-- manipulate the query logger
create procedure sys.querylog_enable()
external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint)
external name sql.querylog_enable_threshold;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- System monitoring

-- show status of all active SQL queries.
create function sys.queue()
returns table(
	qtag bigint,
	"user" string,
	started timestamp,
	estimate timestamp,
	progress int,
	status string,
	tag oid,
	query string
)
external name sql.sysmon_queue;
create function radians(d double) 
returns double
	return d*pi()/180;
create function relate(a geometry, b geometry, pattern string) returns boolean external name geom."Relate";
create procedure sys.resume(tag int)
external name sql.sysmon_resume;
create procedure sys.resume(tag bigint)
external name sql.sysmon_resume;
create procedure reuse(sys string, tab string)
	external name sql.reuse;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- add function signatures to SQL catalog


-- Reverse a string
create function reverse(src string)
returns string external name udf.reverse;
create function sys.sessions()
returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool)
external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet
	external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint)
	external name sql.setsession;
-- control the query and session time out 
create procedure sys.settimeout("query" bigint)
	external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint)
	external name sql.settimeout;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Vacuum a relational table should be done with care.
-- For, the oid's are used in join-indices.

-- Vacuum of tables may improve IO performance and disk footprint.
-- The foreign key constraints should be dropped before
-- and re-established after the cluster operation.

create procedure shrink(sys string, tab string)
	external name sql.shrink;
create procedure sys.shutdown(delay tinyint) 
external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) 
external name sql.shutdown;
create function srid(g geometry) returns integer external name geom."SRID";
create aggregate stddev_pop(val tinyint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double
	external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double
	external name "aggr"."stdevp";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create aggregate stddev_samp(val tinyint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double
	external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double
	external name "aggr"."stdev";
create procedure sys.stop(tag int)
external name sql.sysmon_stop;
create procedure sys.stop(tag bigint)
external name sql.sysmon_stop;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.


-- Author M.Kersten
-- This script gives the database administrator insight in the actual
-- footprint of the persistent tables and the maximum playground used
-- when indices are introduced upon them.
-- By chancing the storagemodelinput table directly, the footprint for
-- yet to be loaded databases can be assessed.

-- The actual storage footprint of an existing database can be
-- obtained by the table procuding function storage()
-- It represents the actual state of affairs, i.e. storage on disk
-- of columns and foreign key indices, and possible temporary hash indices.
-- For strings we take a sample to determine their average length.

create function sys."storage"()
returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, imprints bigint, sorted boolean)
external name sql."storage";
create function sys.storagemodel()
returns table (
	"schema" string,
	"table" string,
	"column" string,
	"type" string,
	"count"	bigint,
	columnsize bigint,
	heapsize bigint,
	hashes bigint,
	imprints bigint,
	sorted boolean)
begin
	return select i."schema", i."table", i."column", i."type", i."count",
	columnsize(i."type", i.count, i."distinct"),
	heapsize(i."type", i."distinct", i."atomwidth"),
	hashsize(i."reference", i."count"),
	imprintsize(i."count",i."type"),
	i.sorted
	from sys.storagemodelinput i;
end;
-- this table can be adjusted to reflect the anticipated final database size

-- The model input can be derived from the current database using
create procedure sys.storagemodelinit()
begin
	delete from sys.storagemodelinput;

	insert into sys.storagemodelinput
	select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x;

	update sys.storagemodelinput
	set reference = true
	where concat(concat("schema","table"), "column") in (
		select concat( concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name" )
		from	"sys"."keys" as    "fkkey",
				"sys"."objects" as "fkkeycol",
				"sys"."tables" as  "fktable",
				"sys"."schemas" as "fkschema"
		where   "fktable"."id" = "fkkey"."table_id"
			and "fkkey"."id" = "fkkeycol"."id"
			and "fkschema"."id" = "fktable"."schema_id"
			and "fkkey"."rkey" > -1);

	update sys.storagemodelinput
	set "distinct" = "count" -- assume all distinct
	where "type" = 'varchar' or "type"='clob';
end;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function str_to_date(s string, format string) returns date
	external name mtime."str_to_date";
create function symdifference(a geometry, b geometry) returns geometry external name geom."SymDifference";
create function "text" (p inet) returns clob
	external name inet."text";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- Provide a simple equivalent for the UNIX times command
-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes

create procedure times()
external name sql.times;
create function touches(a geometry, b geometry) returns boolean external name geom."Touches";
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

-- make the offline tracing table available for inspection
create function sys.tracelog() 
	returns table (
		event integer,		-- event counter
		clk varchar(20), 	-- wallclock, no mtime in kernel
		pc varchar(50), 	-- module.function[nr]
		thread int, 		-- thread identifier
		ticks bigint, 		-- time in microseconds
		rrsmb bigint, 		-- resident memory in MB
		vmmb bigint, 		-- virtual size in MB
		reads bigint, 		-- number of blocks read
		writes bigint, 	-- number of blocks written
		minflt bigint, 		-- minor page faults
		majflt bigint, 		-- major page faults
		nvcsw bigint, 		-- non-volantary conext switch
		stmt string			-- actual statement executed
	)
	external name sql.dump_trace;
-- generate a new uuid
create function sys.uuid()
returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string)
	external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val real) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val double) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val date) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val time) returns double
	external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double
	external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val integer) returns double
	external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double
	external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double
	external name "aggr"."variance";
create aggregate var_samp(val real) returns double
	external name "aggr"."variance";
create aggregate var_samp(val double) returns double
	external name "aggr"."variance";
create aggregate var_samp(val date) returns double
	external name "aggr"."variance";
create aggregate var_samp(val time) returns double
	external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double
	external name "aggr"."variance";
create function within(a geometry, b geometry) returns boolean external name geom."Within";
create function x(g geometry) returns double external name geom."X";
create function y(g geometry) returns double external name geom."Y";
create function zorder_decode_x(z oid) returns integer
    external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer
    external name zorder.decode_y;
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0.  If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--
-- Copyright 2008-2015 MonetDB B.V.

create function zorder_encode(x integer, y integer) returns oid
    external name zorder.encode;
START TRANSACTION;
CREATE TABLE "sys"."_columns" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"table_id"    INTEGER,
	"default"     VARCHAR(2048),
	"null"        BOOLEAN,
	"number"      INTEGER,
	"storage"     VARCHAR(2048)
);
COPY 329 RECORDS INTO "sys"."_columns" FROM stdin USING DELIMITERS '\t','\n','"';
2002	"id"	"int"	32	0	2001	NULL	true	0	NULL
2003	"name"	"varchar"	1024	0	2001	NULL	true	1	NULL
2004	"authorization"	"int"	32	0	2001	NULL	true	2	NULL
2005	"owner"	"int"	32	0	2001	NULL	true	3	NULL
2006	"system"	"boolean"	1	0	2001	NULL	true	4	NULL
2008	"id"	"int"	32	0	2007	NULL	true	0	NULL
2009	"systemname"	"varchar"	256	0	2007	NULL	true	1	NULL
2010	"sqlname"	"varchar"	1024	0	2007	NULL	true	2	NULL
2011	"digits"	"int"	32	0	2007	NULL	true	3	NULL
2012	"scale"	"int"	32	0	2007	NULL	true	4	NULL
2013	"radix"	"int"	32	0	2007	NULL	true	5	NULL
2014	"eclass"	"int"	32	0	2007	NULL	true	6	NULL
2015	"schema_id"	"int"	32	0	2007	NULL	true	7	NULL
2017	"id"	"int"	32	0	2016	NULL	true	0	NULL
2018	"name"	"varchar"	256	0	2016	NULL	true	1	NULL
2019	"func"	"varchar"	8196	0	2016	NULL	true	2	NULL
2020	"mod"	"varchar"	8196	0	2016	NULL	true	3	NULL
2021	"language"	"int"	32	0	2016	NULL	true	4	NULL
2022	"type"	"int"	32	0	2016	NULL	true	5	NULL
2023	"side_effect"	"boolean"	1	0	2016	NULL	true	6	NULL
2024	"varres"	"boolean"	1	0	2016	NULL	true	7	NULL
2025	"vararg"	"boolean"	1	0	2016	NULL	true	8	NULL
2026	"schema_id"	"int"	32	0	2016	NULL	true	9	NULL
2028	"id"	"int"	32	0	2027	NULL	true	0	NULL
2029	"func_id"	"int"	32	0	2027	NULL	true	1	NULL
2030	"name"	"varchar"	256	0	2027	NULL	true	2	NULL
2031	"type"	"varchar"	1024	0	2027	NULL	true	3	NULL
2032	"type_digits"	"int"	32	0	2027	NULL	true	4	NULL
2033	"type_scale"	"int"	32	0	2027	NULL	true	5	NULL
2034	"inout"	"tinyint"	8	0	2027	NULL	true	6	NULL
2035	"number"	"int"	32	0	2027	NULL	true	7	NULL
2037	"id"	"int"	32	0	2036	NULL	true	0	NULL
2038	"schema_id"	"int"	32	0	2036	NULL	true	1	NULL
2039	"name"	"varchar"	256	0	2036	NULL	true	2	NULL
2040	"start"	"bigint"	64	0	2036	NULL	true	3	NULL
2041	"minvalue"	"bigint"	64	0	2036	NULL	true	4	NULL
2042	"maxvalue"	"bigint"	64	0	2036	NULL	true	5	NULL
2043	"increment"	"bigint"	64	0	2036	NULL	true	6	NULL
2044	"cacheinc"	"bigint"	64	0	2036	NULL	true	7	NULL
2045	"cycle"	"boolean"	1	0	2036	NULL	true	8	NULL
2047	"id"	"int"	32	0	2046	NULL	true	0	NULL
2048	"depend_id"	"int"	32	0	2046	NULL	true	1	NULL
2049	"depend_type"	"smallint"	16	0	2046	NULL	true	2	NULL
2051	"id"	"int"	32	0	2050	NULL	true	0	NULL
2052	"server"	"char"	1024	0	2050	NULL	true	1	NULL
2053	"port"	"int"	32	0	2050	NULL	true	2	NULL
2054	"db"	"char"	64	0	2050	NULL	true	3	NULL
2055	"db_alias"	"char"	1024	0	2050	NULL	true	4	NULL
2056	"user"	"char"	1024	0	2050	NULL	true	5	NULL
2057	"password"	"char"	1024	0	2050	NULL	true	6	NULL
2058	"language"	"char"	1024	0	2050	NULL	true	7	NULL
2060	"id"	"int"	32	0	2059	NULL	true	0	NULL
2061	"name"	"varchar"	1024	0	2059	NULL	true	1	NULL
2062	"schema_id"	"int"	32	0	2059	NULL	true	2	NULL
2063	"query"	"varchar"	2048	0	2059	NULL	true	3	NULL
2064	"type"	"smallint"	16	0	2059	NULL	true	4	NULL
2065	"system"	"boolean"	1	0	2059	NULL	true	5	NULL
2066	"commit_action"	"smallint"	16	0	2059	NULL	true	6	NULL
2067	"access"	"smallint"	16	0	2059	NULL	true	7	NULL
2069	"id"	"int"	32	0	2068	NULL	true	0	NULL
2070	"name"	"varchar"	1024	0	2068	NULL	true	1	NULL
2071	"type"	"varchar"	1024	0	2068	NULL	true	2	NULL
2072	"type_digits"	"int"	32	0	2068	NULL	true	3	NULL
2073	"type_scale"	"int"	32	0	2068	NULL	true	4	NULL
2074	"table_id"	"int"	32	0	2068	NULL	true	5	NULL
2075	"default"	"varchar"	2048	0	2068	NULL	true	6	NULL
2076	"null"	"boolean"	1	0	2068	NULL	true	7	NULL
2077	"number"	"int"	32	0	2068	NULL	true	8	NULL
2078	"storage"	"varchar"	2048	0	2068	NULL	true	9	NULL
2080	"id"	"int"	32	0	2079	NULL	true	0	NULL
2081	"table_id"	"int"	32	0	2079	NULL	true	1	NULL
2082	"type"	"int"	32	0	2079	NULL	true	2	NULL
2083	"name"	"varchar"	1024	0	2079	NULL	true	3	NULL
2084	"rkey"	"int"	32	0	2079	NULL	true	4	NULL
2085	"action"	"int"	32	0	2079	NULL	true	5	NULL
2087	"id"	"int"	32	0	2086	NULL	true	0	NULL
2088	"table_id"	"int"	32	0	2086	NULL	true	1	NULL
2089	"type"	"int"	32	0	2086	NULL	true	2	NULL
2090	"name"	"varchar"	1024	0	2086	NULL	true	3	NULL
2092	"id"	"int"	32	0	2091	NULL	true	0	NULL
2093	"name"	"varchar"	1024	0	2091	NULL	true	1	NULL
2094	"table_id"	"int"	32	0	2091	NULL	true	2	NULL
2095	"time"	"smallint"	16	0	2091	NULL	true	3	NULL
2096	"orientation"	"smallint"	16	0	2091	NULL	true	4	NULL
2097	"event"	"smallint"	16	0	2091	NULL	true	5	NULL
2098	"old_name"	"varchar"	1024	0	2091	NULL	true	6	NULL
2099	"new_name"	"varchar"	1024	0	2091	NULL	true	7	NULL
2100	"condition"	"varchar"	2048	0	2091	NULL	true	8	NULL
2101	"statement"	"varchar"	2048	0	2091	NULL	true	9	NULL
2103	"id"	"int"	32	0	2102	NULL	true	0	NULL
2104	"name"	"varchar"	1024	0	2102	NULL	true	1	NULL
2105	"nr"	"int"	32	0	2102	NULL	true	2	NULL
2108	"id"	"int"	32	0	2107	NULL	true	0	NULL
2109	"name"	"varchar"	1024	0	2107	NULL	true	1	NULL
2110	"schema_id"	"int"	32	0	2107	NULL	true	2	NULL
2111	"query"	"varchar"	2048	0	2107	NULL	true	3	NULL
2112	"type"	"smallint"	16	0	2107	NULL	true	4	NULL
2113	"system"	"boolean"	1	0	2107	NULL	true	5	NULL
2114	"commit_action"	"smallint"	16	0	2107	NULL	true	6	NULL
2115	"access"	"smallint"	16	0	2107	NULL	true	7	NULL
2117	"id"	"int"	32	0	2116	NULL	true	0	NULL
2118	"name"	"varchar"	1024	0	2116	NULL	true	1	NULL
2119	"type"	"varchar"	1024	0	2116	NULL	true	2	NULL
2120	"type_digits"	"int"	32	0	2116	NULL	true	3	NULL
2121	"type_scale"	"int"	32	0	2116	NULL	true	4	NULL
2122	"table_id"	"int"	32	0	2116	NULL	true	5	NULL
2123	"default"	"varchar"	2048	0	2116	NULL	true	6	NULL
2124	"null"	"boolean"	1	0	2116	NULL	true	7	NULL
2125	"number"	"int"	32	0	2116	NULL	true	8	NULL
2126	"storage"	"varchar"	2048	0	2116	NULL	true	9	NULL
2128	"id"	"int"	32	0	2127	NULL	true	0	NULL
2129	"table_id"	"int"	32	0	2127	NULL	true	1	NULL
2130	"type"	"int"	32	0	2127	NULL	true	2	NULL
2131	"name"	"varchar"	1024	0	2127	NULL	true	3	NULL
2132	"rkey"	"int"	32	0	2127	NULL	true	4	NULL
2133	"action"	"int"	32	0	2127	NULL	true	5	NULL
2135	"id"	"int"	32	0	2134	NULL	true	0	NULL
2136	"table_id"	"int"	32	0	2134	NULL	true	1	NULL
2137	"type"	"int"	32	0	2134	NULL	true	2	NULL
2138	"name"	"varchar"	1024	0	2134	NULL	true	3	NULL
2140	"id"	"int"	32	0	2139	NULL	true	0	NULL
2141	"name"	"varchar"	1024	0	2139	NULL	true	1	NULL
2142	"table_id"	"int"	32	0	2139	NULL	true	2	NULL
2143	"time"	"smallint"	16	0	2139	NULL	true	3	NULL
2144	"orientation"	"smallint"	16	0	2139	NULL	true	4	NULL
2145	"event"	"smallint"	16	0	2139	NULL	true	5	NULL
2146	"old_name"	"varchar"	1024	0	2139	NULL	true	6	NULL
2147	"new_name"	"varchar"	1024	0	2139	NULL	true	7	NULL
2148	"condition"	"varchar"	2048	0	2139	NULL	true	8	NULL
2149	"statement"	"varchar"	2048	0	2139	NULL	true	9	NULL
2151	"id"	"int"	32	0	2150	NULL	true	0	NULL
2152	"name"	"varchar"	1024	0	2150	NULL	true	1	NULL
2153	"nr"	"int"	32	0	2150	NULL	true	2	NULL
5202	"id"	"int"	32	0	5201	NULL	true	0	NULL
5203	"name"	"varchar"	1024	0	5201	NULL	true	1	NULL
5204	"schema_id"	"int"	32	0	5201	NULL	true	2	NULL
5205	"query"	"varchar"	2048	0	5201	NULL	true	3	NULL
5206	"type"	"smallint"	16	0	5201	NULL	true	4	NULL
5207	"system"	"boolean"	1	0	5201	NULL	true	5	NULL
5208	"commit_action"	"smallint"	16	0	5201	NULL	true	6	NULL
5209	"access"	"smallint"	16	0	5201	NULL	true	7	NULL
5210	"temporary"	"smallint"	16	0	5201	NULL	true	8	NULL
5212	"id"	"int"	32	0	5211	NULL	true	0	NULL
5213	"name"	"varchar"	1024	0	5211	NULL	true	1	NULL
5214	"type"	"varchar"	1024	0	5211	NULL	true	2	NULL
5215	"type_digits"	"int"	32	0	5211	NULL	true	3	NULL
5216	"type_scale"	"int"	32	0	5211	NULL	true	4	NULL
5217	"table_id"	"int"	32	0	5211	NULL	true	5	NULL
5218	"default"	"varchar"	2048	0	5211	NULL	true	6	NULL
5219	"null"	"boolean"	1	0	5211	NULL	true	7	NULL
5220	"number"	"int"	32	0	5211	NULL	true	8	NULL
5221	"storage"	"varchar"	2048	0	5211	NULL	true	9	NULL
5228	"name"	"varchar"	1024	0	5227	NULL	true	0	NULL
5229	"fullname"	"varchar"	2048	0	5227	NULL	true	1	NULL
5230	"default_schema"	"int"	9	0	5227	NULL	true	2	NULL
5234	"name"	"varchar"	1024	0	5233	NULL	true	0	NULL
5235	"fullname"	"varchar"	2024	0	5233	NULL	true	1	NULL
5236	"default_schema"	"int"	9	0	5233	NULL	true	2	NULL
5238	"login_id"	"int"	32	0	5237	NULL	true	0	NULL
5239	"role_id"	"int"	32	0	5237	NULL	true	1	NULL
5241	"id"	"int"	32	0	5240	NULL	true	0	NULL
5242	"name"	"varchar"	1024	0	5240	NULL	true	1	NULL
5243	"grantor"	"int"	32	0	5240	NULL	true	2	NULL
5245	"obj_id"	"int"	32	0	5244	NULL	true	0	NULL
5246	"auth_id"	"int"	32	0	5244	NULL	true	1	NULL
5247	"privileges"	"int"	32	0	5244	NULL	true	2	NULL
5248	"grantor"	"int"	32	0	5244	NULL	true	3	NULL
5249	"grantable"	"int"	32	0	5244	NULL	true	4	NULL
5443	"id"	"oid"	63	0	5451	NULL	true	0	NULL
5444	"owner"	"clob"	0	0	5451	NULL	true	1	NULL
5445	"defined"	"timestamp"	7	0	5451	NULL	true	2	NULL
5446	"query"	"clob"	0	0	5451	NULL	true	3	NULL
5447	"pipe"	"clob"	0	0	5451	NULL	true	4	NULL
5448	"plan"	"clob"	0	0	5451	NULL	true	5	NULL
5449	"mal"	"int"	32	0	5451	NULL	true	6	NULL
5450	"optimize"	"bigint"	64	0	5451	NULL	true	7	NULL
5453	"id"	"oid"	63	0	5462	NULL	true	0	NULL
5454	"start"	"timestamp"	7	0	5462	NULL	true	1	NULL
5455	"stop"	"timestamp"	7	0	5462	NULL	true	2	NULL
5456	"arguments"	"clob"	0	0	5462	NULL	true	3	NULL
5457	"tuples"	"wrd"	64	0	5462	NULL	true	4	NULL
5458	"run"	"bigint"	64	0	5462	NULL	true	5	NULL
5459	"ship"	"bigint"	64	0	5462	NULL	true	6	NULL
5460	"cpu"	"int"	32	0	5462	NULL	true	7	NULL
5461	"io"	"int"	32	0	5462	NULL	true	8	NULL
5464	"id"	"oid"	63	0	5480	NULL	true	0	NULL
5465	"owner"	"clob"	0	0	5480	NULL	true	1	NULL
5466	"defined"	"timestamp"	7	0	5480	NULL	true	2	NULL
5467	"query"	"clob"	0	0	5480	NULL	true	3	NULL
5468	"pipe"	"clob"	0	0	5480	NULL	true	4	NULL
5469	"plan"	"clob"	0	0	5480	NULL	true	5	NULL
5470	"mal"	"int"	32	0	5480	NULL	true	6	NULL
5471	"optimize"	"bigint"	64	0	5480	NULL	true	7	NULL
5472	"start"	"timestamp"	7	0	5480	NULL	true	8	NULL
5473	"stop"	"timestamp"	7	0	5480	NULL	true	9	NULL
5474	"arguments"	"clob"	0	0	5480	NULL	true	10	NULL
5475	"tuples"	"wrd"	64	0	5480	NULL	true	11	NULL
5476	"run"	"bigint"	64	0	5480	NULL	true	12	NULL
5477	"ship"	"bigint"	64	0	5480	NULL	true	13	NULL
5478	"cpu"	"int"	32	0	5480	NULL	true	14	NULL
5479	"io"	"int"	32	0	5480	NULL	true	15	NULL
5506	"event"	"int"	32	0	5519	NULL	true	0	NULL
5507	"clk"	"varchar"	20	0	5519	NULL	true	1	NULL
5508	"pc"	"varchar"	50	0	5519	NULL	true	2	NULL
5509	"thread"	"int"	32	0	5519	NULL	true	3	NULL
5510	"ticks"	"bigint"	64	0	5519	NULL	true	4	NULL
5511	"rrsmb"	"bigint"	64	0	5519	NULL	true	5	NULL
5512	"vmmb"	"bigint"	64	0	5519	NULL	true	6	NULL
5513	"reads"	"bigint"	64	0	5519	NULL	true	7	NULL
5514	"writes"	"bigint"	64	0	5519	NULL	true	8	NULL
5515	"minflt"	"bigint"	64	0	5519	NULL	true	9	NULL
5516	"majflt"	"bigint"	64	0	5519	NULL	true	10	NULL
5517	"nvcsw"	"bigint"	64	0	5519	NULL	true	11	NULL
5518	"stmt"	"clob"	0	0	5519	NULL	true	12	NULL
5649	"user"	"clob"	0	0	5655	NULL	true	0	NULL
5650	"login"	"timestamp"	7	0	5655	NULL	true	1	NULL
5651	"sessiontimeout"	"bigint"	64	0	5655	NULL	true	2	NULL
5652	"lastcommand"	"timestamp"	7	0	5655	NULL	true	3	NULL
5653	"querytimeout"	"bigint"	64	0	5655	NULL	true	4	NULL
5654	"active"	"boolean"	1	0	5655	NULL	true	5	NULL
5732	"name"	"clob"	0	0	5735	NULL	true	0	NULL
5733	"def"	"clob"	0	0	5735	NULL	true	1	NULL
5734	"status"	"clob"	0	0	5735	NULL	true	2	NULL
5741	"name"	"clob"	0	0	5743	NULL	true	0	NULL
5742	"value"	"clob"	0	0	5743	NULL	true	1	NULL
5773	"qtag"	"bigint"	64	0	5781	NULL	true	0	NULL
5774	"user"	"clob"	0	0	5781	NULL	true	1	NULL
5775	"started"	"timestamp"	7	0	5781	NULL	true	2	NULL
5776	"estimate"	"timestamp"	7	0	5781	NULL	true	3	NULL
5777	"progress"	"int"	32	0	5781	NULL	true	4	NULL
5778	"status"	"clob"	0	0	5781	NULL	true	5	NULL
5779	"tag"	"oid"	63	0	5781	NULL	true	6	NULL
5780	"query"	"clob"	0	0	5781	NULL	true	7	NULL
6439	"schema"	"clob"	0	0	6452	NULL	true	0	NULL
6440	"table"	"clob"	0	0	6452	NULL	true	1	NULL
6441	"column"	"clob"	0	0	6452	NULL	true	2	NULL
6442	"type"	"clob"	0	0	6452	NULL	true	3	NULL
6443	"mode"	"clob"	0	0	6452	NULL	true	4	NULL
6444	"location"	"clob"	0	0	6452	NULL	true	5	NULL
6445	"count"	"bigint"	64	0	6452	NULL	true	6	NULL
6446	"typewidth"	"int"	32	0	6452	NULL	true	7	NULL
6447	"columnsize"	"bigint"	64	0	6452	NULL	true	8	NULL
6448	"heapsize"	"bigint"	64	0	6452	NULL	true	9	NULL
6449	"hashes"	"bigint"	64	0	6452	NULL	true	10	NULL
6450	"imprints"	"bigint"	64	0	6452	NULL	true	11	NULL
6451	"sorted"	"boolean"	1	0	6452	NULL	true	12	NULL
6454	"schema"	"clob"	0	0	6464	NULL	true	0	NULL
6455	"table"	"clob"	0	0	6464	NULL	true	1	NULL
6456	"column"	"clob"	0	0	6464	NULL	true	2	NULL
6457	"type"	"clob"	0	0	6464	NULL	true	3	NULL
6458	"typewidth"	"int"	32	0	6464	NULL	true	4	NULL
6459	"count"	"bigint"	64	0	6464	NULL	true	5	NULL
6460	"distinct"	"bigint"	64	0	6464	NULL	true	6	NULL
6461	"atomwidth"	"int"	32	0	6464	NULL	true	7	NULL
6462	"reference"	"boolean"	1	0	6464	NULL	true	8	NULL
6463	"sorted"	"boolean"	1	0	6464	NULL	true	9	NULL
6502	"schema"	"clob"	0	0	6512	NULL	true	0	NULL
6503	"table"	"clob"	0	0	6512	NULL	true	1	NULL
6504	"column"	"clob"	0	0	6512	NULL	true	2	NULL
6505	"type"	"clob"	0	0	6512	NULL	true	3	NULL
6506	"count"	"bigint"	64	0	6512	NULL	true	4	NULL
6507	"columnsize"	"bigint"	64	0	6512	NULL	true	5	NULL
6508	"heapsize"	"bigint"	64	0	6512	NULL	true	6	NULL
6509	"hashes"	"bigint"	64	0	6512	NULL	true	7	NULL
6510	"imprints"	"bigint"	64	0	6512	NULL	true	8	NULL
6511	"sorted"	"boolean"	1	0	6512	NULL	true	9	NULL
6514	"schema"	"clob"	0	0	6522	NULL	true	0	NULL
6515	"table"	"clob"	0	0	6522	NULL	true	1	NULL
6516	"count"	"bigint"	64	0	6522	NULL	true	2	NULL
6517	"columnsize"	"bigint"	64	0	6522	NULL	true	3	NULL
6518	"heapsize"	"bigint"	64	0	6522	NULL	true	4	NULL
6519	"hashes"	"bigint"	64	0	6522	NULL	true	5	NULL
6520	"imprints"	"bigint"	64	0	6522	NULL	true	6	NULL
6521	"auxiliary"	"bigint"	64	0	6522	NULL	true	7	NULL
6524	"column_id"	"int"	32	0	6535	NULL	true	0	NULL
6525	"type"	"clob"	0	0	6535	NULL	true	1	NULL
6526	"width"	"int"	32	0	6535	NULL	true	2	NULL
6527	"stamp"	"timestamp"	7	0	6535	NULL	true	3	NULL
6528	"sample"	"bigint"	64	0	6535	NULL	true	4	NULL
6529	"count"	"bigint"	64	0	6535	NULL	true	5	NULL
6530	"unique"	"bigint"	64	0	6535	NULL	true	6	NULL
6531	"nils"	"bigint"	64	0	6535	NULL	true	7	NULL
6532	"minval"	"clob"	0	0	6535	NULL	true	8	NULL
6533	"maxval"	"clob"	0	0	6535	NULL	true	9	NULL
6534	"sorted"	"boolean"	1	0	6535	NULL	true	10	NULL
6630	"file_id"	"bigint"	64	0	6638	NULL	false	0	NULL
6631	"file_location"	"clob"	0	0	6638	NULL	false	1	NULL
6632	"dbschema"	"smallint"	16	0	6638	NULL	false	2	NULL
6633	"format_version"	"varchar"	7	0	6638	NULL	true	3	NULL
6634	"sorting_order"	"varchar"	10	0	6638	NULL	true	4	NULL
6635	"comments"	"clob"	0	0	6638	NULL	true	5	NULL
6640	"sn"	"clob"	0	0	6651	NULL	false	0	NULL
6641	"file_id"	"bigint"	64	0	6651	NULL	false	1	NULL
6642	"ln"	"int"	32	0	6651	NULL	true	2	NULL
6643	"as"	"int"	32	0	6651	NULL	true	3	NULL
6644	"m5"	"clob"	0	0	6651	NULL	true	4	NULL
6645	"sp"	"clob"	0	0	6651	NULL	true	5	NULL
6646	"ur"	"clob"	0	0	6651	NULL	true	6	NULL
6653	"id"	"clob"	0	0	6670	NULL	false	0	NULL
6654	"file_id"	"bigint"	64	0	6670	NULL	false	1	NULL
6655	"cn"	"clob"	0	0	6670	NULL	true	2	NULL
6656	"ds"	"clob"	0	0	6670	NULL	true	3	NULL
6657	"dt"	"timestamp"	7	0	6670	NULL	true	4	NULL
6658	"fo"	"clob"	0	0	6670	NULL	true	5	NULL
6659	"ks"	"clob"	0	0	6670	NULL	true	6	NULL
6660	"lb"	"clob"	0	0	6670	NULL	true	7	NULL
6661	"pg"	"clob"	0	0	6670	NULL	true	8	NULL
6662	"pi"	"int"	32	0	6670	NULL	true	9	NULL
6663	"pl"	"clob"	0	0	6670	NULL	true	10	NULL
6664	"pu"	"clob"	0	0	6670	NULL	true	11	NULL
6665	"sm"	"clob"	0	0	6670	NULL	true	12	NULL
6672	"id"	"clob"	0	0	6682	NULL	false	0	NULL
6673	"file_id"	"bigint"	64	0	6682	NULL	false	1	NULL
6674	"pn"	"clob"	0	0	6682	NULL	true	2	NULL
6675	"cl"	"clob"	0	0	6682	NULL	true	3	NULL
6676	"pp"	"clob"	0	0	6682	NULL	true	4	NULL
6677	"vn"	"clob"	0	0	6682	NULL	true	5	NULL
6684	"qname"	"clob"	0	0	6695	NULL	false	0	NULL
6685	"flag"	"smallint"	16	0	6695	NULL	false	1	NULL
6686	"rname"	"clob"	0	0	6695	NULL	false	2	NULL
6687	"pos"	"int"	32	0	6695	NULL	false	3	NULL
6688	"mapq"	"smallint"	16	0	6695	NULL	false	4	NULL
6689	"cigar"	"clob"	0	0	6695	NULL	false	5	NULL
6690	"rnext"	"clob"	0	0	6695	NULL	false	6	NULL
6691	"pnext"	"int"	32	0	6695	NULL	false	7	NULL
6692	"tlen"	"int"	32	0	6695	NULL	false	8	NULL
6693	"seq"	"clob"	0	0	6695	NULL	false	9	NULL
6694	"qual"	"clob"	0	0	6695	NULL	false	10	NULL
6765	"function_id"	"int"	32	0	6766	NULL	true	0	NULL
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."_tables" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"schema_id"     INTEGER,
	"query"         VARCHAR(2048),
	"type"          SMALLINT,
	"system"        BOOLEAN,
	"commit_action" SMALLINT,
	"access"        SMALLINT
);
COPY 45 RECORDS INTO "sys"."_tables" FROM stdin USING DELIMITERS '\t','\n','"';
2001	"schemas"	2000	NULL	0	true	0	0
2007	"types"	2000	NULL	0	true	0	0
2016	"functions"	2000	NULL	0	true	0	0
2027	"args"	2000	NULL	0	true	0	0
2036	"sequences"	2000	NULL	0	true	0	0
2046	"dependencies"	2000	NULL	0	true	0	0
2050	"connections"	2000	NULL	0	true	0	0
2059	"_tables"	2000	NULL	0	true	0	0
2068	"_columns"	2000	NULL	0	true	0	0
2079	"keys"	2000	NULL	0	true	0	0
2086	"idxs"	2000	NULL	0	true	0	0
2091	"triggers"	2000	NULL	0	true	0	0
2102	"objects"	2000	NULL	0	true	0	0
2107	"_tables"	2106	NULL	0	true	2	0
2116	"_columns"	2106	NULL	0	true	2	0
2127	"keys"	2106	NULL	0	true	2	0
2134	"idxs"	2106	NULL	0	true	2	0
2139	"triggers"	2106	NULL	0	true	2	0
2150	"objects"	2106	NULL	0	true	2	0
5201	"tables"	2000	"SELECT * FROM (SELECT p.*, 0 AS ""temporary"" FROM ""sys"".""_tables"" AS p UNION ALL SELECT t.*, 1 AS ""temporary"" FROM ""tmp"".""_tables"" AS t) AS tables where tables.type <> 2;"	1	true	0	0
5211	"columns"	2000	"SELECT * FROM (SELECT p.* FROM ""sys"".""_columns"" AS p UNION ALL SELECT t.* FROM ""tmp"".""_columns"" AS t) AS columns;"	1	true	0	0
5227	"db_user_info"	2000	NULL	0	true	0	0
5233	"users"	2000	"SELECT u.""name"" AS ""name"", ui.""fullname"", ui.""default_schema"" FROM db_users() AS u LEFT JOIN ""sys"".""db_user_info"" AS ui ON u.""name"" = ui.""name"" ;"	1	true	0	0
5237	"user_role"	2000	NULL	0	true	0	0
5240	"auths"	2000	NULL	0	true	0	0
5244	"privileges"	2000	NULL	0	true	0	0
5451	"querylog_catalog"	2000	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();"	1	true	0	0
5462	"querylog_calls"	2000	"create view sys.querylog_calls as select * from sys.querylog_calls();"	1	true	0	0
5480	"querylog_history"	2000	"create view sys.querylog_history as\nselect qd.*, ql.""start"",ql.""stop"", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;"	1	true	0	0
5519	"tracelog"	2000	"create view sys.tracelog as select * from sys.tracelog();"	1	true	0	0
5655	"sessions"	2000	"create view sys.sessions as select * from sys.sessions();"	1	true	0	0
5735	"optimizers"	2000	"create view sys.optimizers as select * from sys.optimizers();"	1	true	0	0
5743	"environment"	2000	"create view sys.environment as select * from sys.environment();"	1	true	0	0
5781	"queue"	2000	"create view sys.queue as select * from sys.queue();"	1	true	0	0
6452	"storage"	2000	"create view sys.""storage"" as select * from sys.""storage""();"	1	true	0	0
6464	"storagemodelinput"	2000	NULL	0	true	0	0
6512	"storagemodel"	2000	"create view sys.storagemodel as select * from sys.storagemodel();"	1	true	0	0
6522	"tablestoragemodel"	2000	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select ""schema"",""table"",max(count) as ""count"",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(imprints) as imprints,\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by ""schema"",""table"";"	1	true	0	0
6535	"statistics"	2000	NULL	0	true	0	0
6638	"files"	6587	NULL	0	true	0	0
6651	"sq"	6587	NULL	0	true	0	0
6670	"rg"	6587	NULL	0	true	0	0
6682	"pg"	6587	NULL	0	true	0	0
6695	"export"	6587	NULL	0	true	0	0
6766	"systemfunctions"	2000	NULL	0	true	0	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."args" (
	"id"          INTEGER,
	"func_id"     INTEGER,
	"name"        VARCHAR(256),
	"type"        VARCHAR(1024),
	"type_digits" INTEGER,
	"type_scale"  INTEGER,
	"inout"       TINYINT,
	"number"      INTEGER
);
COPY 3773 RECORDS INTO "sys"."args" FROM stdin USING DELIMITERS '\t','\n','"';
2155	28	"res_0"	"oid"	63	0	0	0
2156	28	"arg_1"	"wrd"	64	0	1	1
2157	29	"res_0"	"oid"	63	0	0	0
2158	29	"arg_1"	"oid"	63	0	1	1
2159	30	"res_0"	"wrd"	64	0	0	0
2160	30	"arg_1"	"any"	0	0	1	1
2161	31	"res_0"	"wrd"	64	0	0	0
2162	31	"arg_1"	"wrd"	64	0	1	1
2163	31	"arg_2"	"int"	32	0	1	2
2164	31	"arg_3"	"any"	0	0	1	3
2165	32	"res_0"	"boolean"	1	0	0	0
2166	32	"arg_1"	"any"	0	0	1	1
2167	32	"arg_2"	"any"	0	0	1	2
2168	33	"res_0"	"boolean"	1	0	0	0
2169	33	"arg_1"	"any"	0	0	1	1
2170	33	"arg_2"	"any"	0	0	1	2
2171	34	"res_0"	"boolean"	1	0	0	0
2172	34	"arg_1"	"any"	0	0	1	1
2173	35	"res_0"	"boolean"	1	0	0	0
2174	35	"arg_1"	"any"	0	0	1	1
2175	35	"arg_2"	"any"	0	0	1	2
2176	36	"res_0"	"boolean"	1	0	0	0
2177	36	"arg_1"	"any"	0	0	1	1
2178	36	"arg_2"	"any"	0	0	1	2
2179	37	"res_0"	"boolean"	1	0	0	0
2180	37	"arg_1"	"any"	0	0	1	1
2181	37	"arg_2"	"any"	0	0	1	2
2182	38	"res_0"	"boolean"	1	0	0	0
2183	38	"arg_1"	"any"	0	0	1	1
2184	38	"arg_2"	"any"	0	0	1	2
2185	42	"res_0"	"boolean"	1	0	0	0
2186	42	"arg_1"	"any"	0	0	1	1
2187	42	"arg_2"	"any"	0	0	1	2
2188	43	"res_0"	"oid"	63	0	0	0
2189	43	"arg_1"	"any"	0	0	1	1
2190	44	"res_0"	"int"	32	0	0	0
2191	44	"arg_1"	"any"	0	0	1	1
2192	45	"res_0"	"oid"	63	0	0	0
2193	45	"arg_1"	"any"	0	0	1	1
2194	45	"arg_2"	"varchar"	0	0	1	2
2195	45	"arg_3"	"varchar"	0	0	1	3
2196	48	"res_0"	"any"	0	0	0	0
2197	48	"arg_1"	"any"	0	0	1	1
2198	48	"arg_2"	"any"	0	0	1	2
2199	49	"res_0"	"any"	0	0	0	0
2200	49	"arg_1"	"any"	0	0	1	1
2201	49	"arg_2"	"any"	0	0	1	2
2202	50	"res_0"	"any"	0	0	0	0
2203	50	"arg_1"	"boolean"	1	0	1	1
2204	50	"arg_2"	"any"	0	0	1	2
2205	50	"arg_3"	"any"	0	0	1	3
2206	68	"res_0"	"oid"	63	0	0	0
2207	68	"arg_1"	"oid"	63	0	1	1
2208	68	"arg_2"	"oid"	63	0	1	2
2209	69	"res_0"	"tinyint"	8	0	0	0
2210	69	"arg_1"	"tinyint"	8	0	1	1
2211	69	"arg_2"	"tinyint"	8	0	1	2
2212	70	"res_0"	"smallint"	16	0	0	0
2213	70	"arg_1"	"smallint"	16	0	1	1
2214	70	"arg_2"	"smallint"	16	0	1	2
2215	71	"res_0"	"int"	32	0	0	0
2216	71	"arg_1"	"int"	32	0	1	1
2217	71	"arg_2"	"int"	32	0	1	2
2218	72	"res_0"	"bigint"	64	0	0	0
2219	72	"arg_1"	"bigint"	64	0	1	1
2220	72	"arg_2"	"bigint"	64	0	1	2
2221	73	"res_0"	"wrd"	64	0	0	0
2222	73	"arg_1"	"wrd"	64	0	1	1
2223	73	"arg_2"	"wrd"	64	0	1	2
2224	74	"res_0"	"decimal"	2	0	0	0
2225	74	"arg_1"	"decimal"	2	0	1	1
2226	74	"arg_2"	"decimal"	2	0	1	2
2227	75	"res_0"	"decimal"	4	0	0	0
2228	75	"arg_1"	"decimal"	4	0	1	1
2229	75	"arg_2"	"decimal"	4	0	1	2
2230	76	"res_0"	"decimal"	9	0	0	0
2231	76	"arg_1"	"decimal"	9	0	1	1
2232	76	"arg_2"	"decimal"	9	0	1	2
2233	77	"res_0"	"decimal"	19	0	0	0
2234	77	"arg_1"	"decimal"	19	0	1	1
2235	77	"arg_2"	"decimal"	19	0	1	2
2236	78	"res_0"	"real"	24	0	0	0
2237	78	"arg_1"	"real"	24	0	1	1
2238	78	"arg_2"	"real"	24	0	1	2
2239	79	"res_0"	"double"	53	0	0	0
2240	79	"arg_1"	"double"	53	0	1	1
2241	79	"arg_2"	"double"	53	0	1	2
2242	87	"res_0"	"int"	32	0	0	0
2243	87	"arg_1"	"any"	0	0	1	1
2244	88	"res_0"	"int"	32	0	0	0
2245	88	"arg_1"	"any"	0	0	1	1
2246	89	"res_0"	"int"	32	0	0	0
2247	89	"arg_1"	"any"	0	0	1	1
2248	90	"res_0"	"any"	0	0	0	0
2249	90	"arg_1"	"any"	0	0	1	1
2250	91	"res_0"	"int"	32	0	0	0
2251	91	"arg_1"	"any"	0	0	1	1
2252	92	"res_0"	"int"	32	0	0	0
2253	92	"arg_1"	"any"	0	0	1	1
2254	92	"arg_2"	"oid"	63	0	1	2
2255	92	"arg_3"	"any"	0	0	1	3
2256	93	"res_0"	"int"	32	0	0	0
2257	93	"arg_1"	"any"	0	0	1	1
2258	93	"arg_2"	"oid"	63	0	1	2
2259	93	"arg_3"	"any"	0	0	1	3
2260	94	"res_0"	"int"	32	0	0	0
2261	94	"arg_1"	"any"	0	0	1	1
2262	94	"arg_2"	"oid"	63	0	1	2
2263	94	"arg_3"	"any"	0	0	1	3
2264	95	"res_0"	"any"	0	0	0	0
2265	95	"arg_1"	"any"	0	0	1	1
2266	95	"arg_2"	"oid"	63	0	1	2
2267	95	"arg_3"	"any"	0	0	1	3
2268	96	"res_0"	"int"	32	0	0	0
2269	96	"arg_1"	"any"	0	0	1	1
2270	96	"arg_2"	"oid"	63	0	1	2
2271	96	"arg_3"	"any"	0	0	1	3
2272	97	"res_0"	"int"	32	0	0	0
2273	97	"arg_1"	"any"	0	0	1	1
2274	97	"arg_2"	"oid"	63	0	1	2
2275	97	"arg_3"	"oid"	63	0	1	3
2276	97	"arg_4"	"oid"	63	0	1	4
2277	98	"res_0"	"int"	32	0	0	0
2278	98	"arg_1"	"any"	0	0	1	1
2279	98	"arg_2"	"oid"	63	0	1	2
2280	98	"arg_3"	"oid"	63	0	1	3
2281	98	"arg_4"	"oid"	63	0	1	4
2282	99	"res_0"	"int"	32	0	0	0
2283	99	"arg_1"	"any"	0	0	1	1
2284	99	"arg_2"	"oid"	63	0	1	2
2285	99	"arg_3"	"oid"	63	0	1	3
2286	99	"arg_4"	"oid"	63	0	1	4
2287	100	"res_0"	"any"	0	0	0	0
2288	100	"arg_1"	"any"	0	0	1	1
2289	100	"arg_2"	"oid"	63	0	1	2
2290	100	"arg_3"	"oid"	63	0	1	3
2291	100	"arg_4"	"oid"	63	0	1	4
2292	101	"res_0"	"int"	32	0	0	0
2293	101	"arg_1"	"any"	0	0	1	1
2294	101	"arg_2"	"oid"	63	0	1	2
2295	101	"arg_3"	"oid"	63	0	1	3
2296	101	"arg_4"	"oid"	63	0	1	4
2297	102	"res_0"	"any"	0	0	0	0
2298	102	"arg_1"	"any"	0	0	1	1
2299	103	"res_0"	"any"	0	0	0	0
2300	103	"arg_1"	"any"	0	0	1	1
2301	104	"res_0"	"any"	0	0	0	0
2302	104	"arg_1"	"any"	0	0	1	1
2303	104	"arg_2"	"int"	32	0	1	2
2304	105	"res_0"	"any"	0	0	0	0
2305	105	"arg_1"	"any"	0	0	1	1
2306	105	"arg_2"	"int"	32	0	1	2
2307	106	"res_0"	"any"	0	0	0	0
2308	106	"arg_1"	"any"	0	0	1	1
2309	106	"arg_2"	"oid"	63	0	1	2
2310	106	"arg_3"	"oid"	63	0	1	3
2311	107	"res_0"	"any"	0	0	0	0
2312	107	"arg_1"	"any"	0	0	1	1
2313	107	"arg_2"	"oid"	63	0	1	2
2314	107	"arg_3"	"oid"	63	0	1	3
2315	108	"res_0"	"any"	0	0	0	0
2316	108	"arg_1"	"any"	0	0	1	1
2317	108	"arg_2"	"int"	32	0	1	2
2318	108	"arg_3"	"oid"	63	0	1	3
2319	108	"arg_4"	"oid"	63	0	1	4
2320	109	"res_0"	"any"	0	0	0	0
2321	109	"arg_1"	"any"	0	0	1	1
2322	109	"arg_2"	"int"	32	0	1	2
2323	109	"arg_3"	"oid"	63	0	1	3
2324	109	"arg_4"	"oid"	63	0	1	4
2325	110	"res_0"	"boolean"	1	0	0	0
2326	110	"arg_1"	"boolean"	1	0	1	1
2327	110	"arg_2"	"boolean"	1	0	1	2
2328	111	"res_0"	"boolean"	1	0	0	0
2329	111	"arg_1"	"boolean"	1	0	1	1
2330	111	"arg_2"	"boolean"	1	0	1	2
2331	112	"res_0"	"boolean"	1	0	0	0
2332	112	"arg_1"	"boolean"	1	0	1	1
2333	112	"arg_2"	"boolean"	1	0	1	2
2334	113	"res_0"	"boolean"	1	0	0	0
2335	113	"arg_1"	"boolean"	1	0	1	1
2336	114	"res_0"	"oid"	63	0	0	0
2337	114	"arg_1"	"oid"	63	0	1	1
2338	114	"arg_2"	"oid"	63	0	1	2
2339	115	"res_0"	"oid"	63	0	0	0
2340	115	"arg_1"	"oid"	63	0	1	1
2341	115	"arg_2"	"oid"	63	0	1	2
2342	116	"res_0"	"oid"	63	0	0	0
2343	116	"arg_1"	"oid"	63	0	1	1
2344	116	"arg_2"	"oid"	63	0	1	2
2345	117	"res_0"	"oid"	63	0	0	0
2346	117	"arg_1"	"oid"	63	0	1	1
2347	117	"arg_2"	"oid"	63	0	1	2
2348	118	"res_0"	"oid"	63	0	0	0
2349	118	"arg_1"	"oid"	63	0	1	1
2350	118	"arg_2"	"oid"	63	0	1	2
2351	119	"res_0"	"oid"	63	0	0	0
2352	119	"arg_1"	"oid"	63	0	1	1
2353	119	"arg_2"	"oid"	63	0	1	2
2354	120	"res_0"	"oid"	63	0	0	0
2355	120	"arg_1"	"oid"	63	0	1	1
2356	120	"arg_2"	"oid"	63	0	1	2
2357	121	"res_0"	"oid"	63	0	0	0
2358	121	"arg_1"	"oid"	63	0	1	1
2359	122	"res_0"	"oid"	63	0	0	0
2360	122	"arg_1"	"oid"	63	0	1	1
2361	122	"arg_2"	"int"	32	0	1	2
2362	123	"res_0"	"oid"	63	0	0	0
2363	123	"arg_1"	"oid"	63	0	1	1
2364	123	"arg_2"	"int"	32	0	1	2
2365	124	"res_0"	"oid"	63	0	0	0
2366	124	"arg_1"	"oid"	63	0	1	1
2367	125	"res_0"	"oid"	63	0	0	0
2368	125	"arg_1"	"oid"	63	0	1	1
2369	126	"res_0"	"tinyint"	8	0	0	0
2370	126	"arg_1"	"oid"	63	0	1	1
2371	127	"res_0"	"oid"	63	0	0	0
2372	127	"arg_1"	"oid"	63	0	1	1
2373	127	"arg_2"	"oid"	63	0	1	2
2374	128	"res_0"	"oid"	63	0	0	0
2375	128	"arg_1"	"oid"	63	0	1	1
2376	128	"arg_2"	"oid"	63	0	1	2
2377	129	"res_0"	"month_interval"	32	0	0	0
2378	129	"arg_1"	"month_interval"	32	0	1	1
2379	129	"arg_2"	"oid"	63	0	1	2
2380	130	"res_0"	"month_interval"	32	0	0	0
2381	130	"arg_1"	"month_interval"	32	0	1	1
2382	130	"arg_2"	"oid"	63	0	1	2
2383	131	"res_0"	"month_interval"	32	0	0	0
2384	131	"arg_1"	"month_interval"	32	0	1	1
2385	131	"arg_2"	"oid"	63	0	1	2
2386	132	"res_0"	"month_interval"	32	0	0	0
2387	132	"arg_1"	"month_interval"	32	0	1	1
2388	132	"arg_2"	"oid"	63	0	1	2
2389	133	"res_0"	"sec_interval"	19	0	0	0
2390	133	"arg_1"	"sec_interval"	19	0	1	1
2391	133	"arg_2"	"oid"	63	0	1	2
2392	134	"res_0"	"sec_interval"	19	0	0	0
2393	134	"arg_1"	"sec_interval"	19	0	1	1
2394	134	"arg_2"	"oid"	63	0	1	2
2395	135	"res_0"	"sec_interval"	19	0	0	0
2396	135	"arg_1"	"sec_interval"	19	0	1	1
2397	135	"arg_2"	"oid"	63	0	1	2
2398	136	"res_0"	"sec_interval"	19	0	0	0
2399	136	"arg_1"	"sec_interval"	19	0	1	1
2400	136	"arg_2"	"oid"	63	0	1	2
2401	137	"res_0"	"tinyint"	8	0	0	0
2402	137	"arg_1"	"tinyint"	8	0	1	1
2403	137	"arg_2"	"tinyint"	8	0	1	2
2404	138	"res_0"	"tinyint"	8	0	0	0
2405	138	"arg_1"	"tinyint"	8	0	1	1
2406	138	"arg_2"	"tinyint"	8	0	1	2
2407	139	"res_0"	"tinyint"	8	0	0	0
2408	139	"arg_1"	"tinyint"	8	0	1	1
2409	139	"arg_2"	"tinyint"	8	0	1	2
2410	140	"res_0"	"tinyint"	8	0	0	0
2411	140	"arg_1"	"tinyint"	8	0	1	1
2412	140	"arg_2"	"tinyint"	8	0	1	2
2413	141	"res_0"	"tinyint"	8	0	0	0
2414	141	"arg_1"	"tinyint"	8	0	1	1
2415	141	"arg_2"	"tinyint"	8	0	1	2
2416	142	"res_0"	"tinyint"	8	0	0	0
2417	142	"arg_1"	"tinyint"	8	0	1	1
2418	142	"arg_2"	"tinyint"	8	0	1	2
2419	143	"res_0"	"tinyint"	8	0	0	0
2420	143	"arg_1"	"tinyint"	8	0	1	1
2421	143	"arg_2"	"tinyint"	8	0	1	2
2422	144	"res_0"	"tinyint"	8	0	0	0
2423	144	"arg_1"	"tinyint"	8	0	1	1
2424	145	"res_0"	"tinyint"	8	0	0	0
2425	145	"arg_1"	"tinyint"	8	0	1	1
2426	145	"arg_2"	"int"	32	0	1	2
2427	146	"res_0"	"tinyint"	8	0	0	0
2428	146	"arg_1"	"tinyint"	8	0	1	1
2429	146	"arg_2"	"int"	32	0	1	2
2430	147	"res_0"	"tinyint"	8	0	0	0
2431	147	"arg_1"	"tinyint"	8	0	1	1
2432	148	"res_0"	"tinyint"	8	0	0	0
2433	148	"arg_1"	"tinyint"	8	0	1	1
2434	149	"res_0"	"tinyint"	8	0	0	0
2435	149	"arg_1"	"tinyint"	8	0	1	1
2436	150	"res_0"	"tinyint"	8	0	0	0
2437	150	"arg_1"	"tinyint"	8	0	1	1
2438	150	"arg_2"	"tinyint"	8	0	1	2
2439	151	"res_0"	"tinyint"	8	0	0	0
2440	151	"arg_1"	"tinyint"	8	0	1	1
2441	151	"arg_2"	"tinyint"	8	0	1	2
2442	152	"res_0"	"month_interval"	32	0	0	0
2443	152	"arg_1"	"month_interval"	32	0	1	1
2444	152	"arg_2"	"tinyint"	8	0	1	2
2445	153	"res_0"	"month_interval"	32	0	0	0
2446	153	"arg_1"	"month_interval"	32	0	1	1
2447	153	"arg_2"	"tinyint"	8	0	1	2
2448	154	"res_0"	"month_interval"	32	0	0	0
2449	154	"arg_1"	"month_interval"	32	0	1	1
2450	154	"arg_2"	"tinyint"	8	0	1	2
2451	155	"res_0"	"month_interval"	32	0	0	0
2452	155	"arg_1"	"month_interval"	32	0	1	1
2453	155	"arg_2"	"tinyint"	8	0	1	2
2454	156	"res_0"	"sec_interval"	19	0	0	0
2455	156	"arg_1"	"sec_interval"	19	0	1	1
2456	156	"arg_2"	"tinyint"	8	0	1	2
2457	157	"res_0"	"sec_interval"	19	0	0	0
2458	157	"arg_1"	"sec_interval"	19	0	1	1
2459	157	"arg_2"	"tinyint"	8	0	1	2
2460	158	"res_0"	"sec_interval"	19	0	0	0
2461	158	"arg_1"	"sec_interval"	19	0	1	1
2462	158	"arg_2"	"tinyint"	8	0	1	2
2463	159	"res_0"	"sec_interval"	19	0	0	0
2464	159	"arg_1"	"sec_interval"	19	0	1	1
2465	159	"arg_2"	"tinyint"	8	0	1	2
2466	160	"res_0"	"smallint"	16	0	0	0
2467	160	"arg_1"	"smallint"	16	0	1	1
2468	160	"arg_2"	"smallint"	16	0	1	2
2469	161	"res_0"	"smallint"	16	0	0	0
2470	161	"arg_1"	"smallint"	16	0	1	1
2471	161	"arg_2"	"smallint"	16	0	1	2
2472	162	"res_0"	"smallint"	16	0	0	0
2473	162	"arg_1"	"smallint"	16	0	1	1
2474	162	"arg_2"	"smallint"	16	0	1	2
2475	163	"res_0"	"smallint"	16	0	0	0
2476	163	"arg_1"	"smallint"	16	0	1	1
2477	163	"arg_2"	"smallint"	16	0	1	2
2478	164	"res_0"	"smallint"	16	0	0	0
2479	164	"arg_1"	"smallint"	16	0	1	1
2480	164	"arg_2"	"smallint"	16	0	1	2
2481	165	"res_0"	"smallint"	16	0	0	0
2482	165	"arg_1"	"smallint"	16	0	1	1
2483	165	"arg_2"	"smallint"	16	0	1	2
2484	166	"res_0"	"smallint"	16	0	0	0
2485	166	"arg_1"	"smallint"	16	0	1	1
2486	166	"arg_2"	"smallint"	16	0	1	2
2487	167	"res_0"	"smallint"	16	0	0	0
2488	167	"arg_1"	"smallint"	16	0	1	1
2489	168	"res_0"	"smallint"	16	0	0	0
2490	168	"arg_1"	"smallint"	16	0	1	1
2491	168	"arg_2"	"int"	32	0	1	2
2492	169	"res_0"	"smallint"	16	0	0	0
2493	169	"arg_1"	"smallint"	16	0	1	1
2494	169	"arg_2"	"int"	32	0	1	2
2495	170	"res_0"	"smallint"	16	0	0	0
2496	170	"arg_1"	"smallint"	16	0	1	1
2497	171	"res_0"	"smallint"	16	0	0	0
2498	171	"arg_1"	"smallint"	16	0	1	1
2499	172	"res_0"	"tinyint"	8	0	0	0
2500	172	"arg_1"	"smallint"	16	0	1	1
2501	173	"res_0"	"smallint"	16	0	0	0
2502	173	"arg_1"	"smallint"	16	0	1	1
2503	173	"arg_2"	"smallint"	16	0	1	2
2504	174	"res_0"	"smallint"	16	0	0	0
2505	174	"arg_1"	"smallint"	16	0	1	1
2506	174	"arg_2"	"smallint"	16	0	1	2
2507	175	"res_0"	"month_interval"	32	0	0	0
2508	175	"arg_1"	"month_interval"	32	0	1	1
2509	175	"arg_2"	"smallint"	16	0	1	2
2510	176	"res_0"	"month_interval"	32	0	0	0
2511	176	"arg_1"	"month_interval"	32	0	1	1
2512	176	"arg_2"	"smallint"	16	0	1	2
2513	177	"res_0"	"month_interval"	32	0	0	0
2514	177	"arg_1"	"month_interval"	32	0	1	1
2515	177	"arg_2"	"smallint"	16	0	1	2
2516	178	"res_0"	"month_interval"	32	0	0	0
2517	178	"arg_1"	"month_interval"	32	0	1	1
2518	178	"arg_2"	"smallint"	16	0	1	2
2519	179	"res_0"	"sec_interval"	19	0	0	0
2520	179	"arg_1"	"sec_interval"	19	0	1	1
2521	179	"arg_2"	"smallint"	16	0	1	2
2522	180	"res_0"	"sec_interval"	19	0	0	0
2523	180	"arg_1"	"sec_interval"	19	0	1	1
2524	180	"arg_2"	"smallint"	16	0	1	2
2525	181	"res_0"	"sec_interval"	19	0	0	0
2526	181	"arg_1"	"sec_interval"	19	0	1	1
2527	181	"arg_2"	"smallint"	16	0	1	2
2528	182	"res_0"	"sec_interval"	19	0	0	0
2529	182	"arg_1"	"sec_interval"	19	0	1	1
2530	182	"arg_2"	"smallint"	16	0	1	2
2531	183	"res_0"	"int"	32	0	0	0
2532	183	"arg_1"	"int"	32	0	1	1
2533	183	"arg_2"	"int"	32	0	1	2
2534	184	"res_0"	"int"	32	0	0	0
2535	184	"arg_1"	"int"	32	0	1	1
2536	184	"arg_2"	"int"	32	0	1	2
2537	185	"res_0"	"int"	32	0	0	0
2538	185	"arg_1"	"int"	32	0	1	1
2539	185	"arg_2"	"int"	32	0	1	2
2540	186	"res_0"	"int"	32	0	0	0
2541	186	"arg_1"	"int"	32	0	1	1
2542	186	"arg_2"	"int"	32	0	1	2
2543	187	"res_0"	"int"	32	0	0	0
2544	187	"arg_1"	"int"	32	0	1	1
2545	187	"arg_2"	"int"	32	0	1	2
2546	188	"res_0"	"int"	32	0	0	0
2547	188	"arg_1"	"int"	32	0	1	1
2548	188	"arg_2"	"int"	32	0	1	2
2549	189	"res_0"	"int"	32	0	0	0
2550	189	"arg_1"	"int"	32	0	1	1
2551	189	"arg_2"	"int"	32	0	1	2
2552	190	"res_0"	"int"	32	0	0	0
2553	190	"arg_1"	"int"	32	0	1	1
2554	191	"res_0"	"int"	32	0	0	0
2555	191	"arg_1"	"int"	32	0	1	1
2556	191	"arg_2"	"int"	32	0	1	2
2557	192	"res_0"	"int"	32	0	0	0
2558	192	"arg_1"	"int"	32	0	1	1
2559	192	"arg_2"	"int"	32	0	1	2
2560	193	"res_0"	"int"	32	0	0	0
2561	193	"arg_1"	"int"	32	0	1	1
2562	194	"res_0"	"int"	32	0	0	0
2563	194	"arg_1"	"int"	32	0	1	1
2564	195	"res_0"	"tinyint"	8	0	0	0
2565	195	"arg_1"	"int"	32	0	1	1
2566	196	"res_0"	"int"	32	0	0	0
2567	196	"arg_1"	"int"	32	0	1	1
2568	196	"arg_2"	"int"	32	0	1	2
2569	197	"res_0"	"int"	32	0	0	0
2570	197	"arg_1"	"int"	32	0	1	1
2571	197	"arg_2"	"int"	32	0	1	2
2572	198	"res_0"	"month_interval"	32	0	0	0
2573	198	"arg_1"	"month_interval"	32	0	1	1
2574	198	"arg_2"	"int"	32	0	1	2
2575	199	"res_0"	"month_interval"	32	0	0	0
2576	199	"arg_1"	"month_interval"	32	0	1	1
2577	199	"arg_2"	"int"	32	0	1	2
2578	200	"res_0"	"month_interval"	32	0	0	0
2579	200	"arg_1"	"month_interval"	32	0	1	1
2580	200	"arg_2"	"int"	32	0	1	2
2581	201	"res_0"	"month_interval"	32	0	0	0
2582	201	"arg_1"	"month_interval"	32	0	1	1
2583	201	"arg_2"	"int"	32	0	1	2
2584	202	"res_0"	"sec_interval"	19	0	0	0
2585	202	"arg_1"	"sec_interval"	19	0	1	1
2586	202	"arg_2"	"int"	32	0	1	2
2587	203	"res_0"	"sec_interval"	19	0	0	0
2588	203	"arg_1"	"sec_interval"	19	0	1	1
2589	203	"arg_2"	"int"	32	0	1	2
2590	204	"res_0"	"sec_interval"	19	0	0	0
2591	204	"arg_1"	"sec_interval"	19	0	1	1
2592	204	"arg_2"	"int"	32	0	1	2
2593	205	"res_0"	"sec_interval"	19	0	0	0
2594	205	"arg_1"	"sec_interval"	19	0	1	1
2595	205	"arg_2"	"int"	32	0	1	2
2596	206	"res_0"	"bigint"	64	0	0	0
2597	206	"arg_1"	"bigint"	64	0	1	1
2598	206	"arg_2"	"bigint"	64	0	1	2
2599	207	"res_0"	"bigint"	64	0	0	0
2600	207	"arg_1"	"bigint"	64	0	1	1
2601	207	"arg_2"	"bigint"	64	0	1	2
2602	208	"res_0"	"bigint"	64	0	0	0
2603	208	"arg_1"	"bigint"	64	0	1	1
2604	208	"arg_2"	"bigint"	64	0	1	2
2605	209	"res_0"	"bigint"	64	0	0	0
2606	209	"arg_1"	"bigint"	64	0	1	1
2607	209	"arg_2"	"bigint"	64	0	1	2
2608	210	"res_0"	"bigint"	64	0	0	0
2609	210	"arg_1"	"bigint"	64	0	1	1
2610	210	"arg_2"	"bigint"	64	0	1	2
2611	211	"res_0"	"bigint"	64	0	0	0
2612	211	"arg_1"	"bigint"	64	0	1	1
2613	211	"arg_2"	"bigint"	64	0	1	2
2614	212	"res_0"	"bigint"	64	0	0	0
2615	212	"arg_1"	"bigint"	64	0	1	1
2616	212	"arg_2"	"bigint"	64	0	1	2
2617	213	"res_0"	"bigint"	64	0	0	0
2618	213	"arg_1"	"bigint"	64	0	1	1
2619	214	"res_0"	"bigint"	64	0	0	0
2620	214	"arg_1"	"bigint"	64	0	1	1
2621	214	"arg_2"	"int"	32	0	1	2
2622	215	"res_0"	"bigint"	64	0	0	0
2623	215	"arg_1"	"bigint"	64	0	1	1
2624	215	"arg_2"	"int"	32	0	1	2
2625	216	"res_0"	"bigint"	64	0	0	0
2626	216	"arg_1"	"bigint"	64	0	1	1
2627	217	"res_0"	"bigint"	64	0	0	0
2628	217	"arg_1"	"bigint"	64	0	1	1
2629	218	"res_0"	"tinyint"	8	0	0	0
2630	218	"arg_1"	"bigint"	64	0	1	1
2631	219	"res_0"	"bigint"	64	0	0	0
2632	219	"arg_1"	"bigint"	64	0	1	1
2633	219	"arg_2"	"bigint"	64	0	1	2
2634	220	"res_0"	"bigint"	64	0	0	0
2635	220	"arg_1"	"bigint"	64	0	1	1
2636	220	"arg_2"	"bigint"	64	0	1	2
2637	221	"res_0"	"month_interval"	32	0	0	0
2638	221	"arg_1"	"month_interval"	32	0	1	1
2639	221	"arg_2"	"bigint"	64	0	1	2
2640	222	"res_0"	"month_interval"	32	0	0	0
2641	222	"arg_1"	"month_interval"	32	0	1	1
2642	222	"arg_2"	"bigint"	64	0	1	2
2643	223	"res_0"	"month_interval"	32	0	0	0
2644	223	"arg_1"	"month_interval"	32	0	1	1
2645	223	"arg_2"	"bigint"	64	0	1	2
2646	224	"res_0"	"month_interval"	32	0	0	0
2647	224	"arg_1"	"month_interval"	32	0	1	1
2648	224	"arg_2"	"bigint"	64	0	1	2
2649	225	"res_0"	"sec_interval"	19	0	0	0
2650	225	"arg_1"	"sec_interval"	19	0	1	1
2651	225	"arg_2"	"bigint"	64	0	1	2
2652	226	"res_0"	"sec_interval"	19	0	0	0
2653	226	"arg_1"	"sec_interval"	19	0	1	1
2654	226	"arg_2"	"bigint"	64	0	1	2
2655	227	"res_0"	"sec_interval"	19	0	0	0
2656	227	"arg_1"	"sec_interval"	19	0	1	1
2657	227	"arg_2"	"bigint"	64	0	1	2
2658	228	"res_0"	"sec_interval"	19	0	0	0
2659	228	"arg_1"	"sec_interval"	19	0	1	1
2660	228	"arg_2"	"bigint"	64	0	1	2
2661	229	"res_0"	"wrd"	64	0	0	0
2662	229	"arg_1"	"wrd"	64	0	1	1
2663	229	"arg_2"	"wrd"	64	0	1	2
2664	230	"res_0"	"wrd"	64	0	0	0
2665	230	"arg_1"	"wrd"	64	0	1	1
2666	230	"arg_2"	"wrd"	64	0	1	2
2667	231	"res_0"	"wrd"	64	0	0	0
2668	231	"arg_1"	"wrd"	64	0	1	1
2669	231	"arg_2"	"wrd"	64	0	1	2
2670	232	"res_0"	"wrd"	64	0	0	0
2671	232	"arg_1"	"wrd"	64	0	1	1
2672	232	"arg_2"	"wrd"	64	0	1	2
2673	233	"res_0"	"wrd"	64	0	0	0
2674	233	"arg_1"	"wrd"	64	0	1	1
2675	233	"arg_2"	"wrd"	64	0	1	2
2676	234	"res_0"	"wrd"	64	0	0	0
2677	234	"arg_1"	"wrd"	64	0	1	1
2678	234	"arg_2"	"wrd"	64	0	1	2
2679	235	"res_0"	"wrd"	64	0	0	0
2680	235	"arg_1"	"wrd"	64	0	1	1
2681	235	"arg_2"	"wrd"	64	0	1	2
2682	236	"res_0"	"wrd"	64	0	0	0
2683	236	"arg_1"	"wrd"	64	0	1	1
2684	237	"res_0"	"wrd"	64	0	0	0
2685	237	"arg_1"	"wrd"	64	0	1	1
2686	237	"arg_2"	"int"	32	0	1	2
2687	238	"res_0"	"wrd"	64	0	0	0
2688	238	"arg_1"	"wrd"	64	0	1	1
2689	238	"arg_2"	"int"	32	0	1	2
2690	239	"res_0"	"wrd"	64	0	0	0
2691	239	"arg_1"	"wrd"	64	0	1	1
2692	240	"res_0"	"wrd"	64	0	0	0
2693	240	"arg_1"	"wrd"	64	0	1	1
2694	241	"res_0"	"tinyint"	8	0	0	0
2695	241	"arg_1"	"wrd"	64	0	1	1
2696	242	"res_0"	"wrd"	64	0	0	0
2697	242	"arg_1"	"wrd"	64	0	1	1
2698	242	"arg_2"	"wrd"	64	0	1	2
2699	243	"res_0"	"wrd"	64	0	0	0
2700	243	"arg_1"	"wrd"	64	0	1	1
2701	243	"arg_2"	"wrd"	64	0	1	2
2702	244	"res_0"	"month_interval"	32	0	0	0
2703	244	"arg_1"	"month_interval"	32	0	1	1
2704	244	"arg_2"	"wrd"	64	0	1	2
2705	245	"res_0"	"month_interval"	32	0	0	0
2706	245	"arg_1"	"month_interval"	32	0	1	1
2707	245	"arg_2"	"wrd"	64	0	1	2
2708	246	"res_0"	"month_interval"	32	0	0	0
2709	246	"arg_1"	"month_interval"	32	0	1	1
2710	246	"arg_2"	"wrd"	64	0	1	2
2711	247	"res_0"	"month_interval"	32	0	0	0
2712	247	"arg_1"	"month_interval"	32	0	1	1
2713	247	"arg_2"	"wrd"	64	0	1	2
2714	248	"res_0"	"sec_interval"	19	0	0	0
2715	248	"arg_1"	"sec_interval"	19	0	1	1
2716	248	"arg_2"	"wrd"	64	0	1	2
2717	249	"res_0"	"sec_interval"	19	0	0	0
2718	249	"arg_1"	"sec_interval"	19	0	1	1
2719	249	"arg_2"	"wrd"	64	0	1	2
2720	250	"res_0"	"sec_interval"	19	0	0	0
2721	250	"arg_1"	"sec_interval"	19	0	1	1
2722	250	"arg_2"	"wrd"	64	0	1	2
2723	251	"res_0"	"sec_interval"	19	0	0	0
2724	251	"arg_1"	"sec_interval"	19	0	1	1
2725	251	"arg_2"	"wrd"	64	0	1	2
2726	252	"res_0"	"decimal"	2	0	0	0
2727	252	"arg_1"	"decimal"	2	0	1	1
2728	252	"arg_2"	"decimal"	2	0	1	2
2729	253	"res_0"	"decimal"	2	0	0	0
2730	253	"arg_1"	"decimal"	2	0	1	1
2731	253	"arg_2"	"decimal"	2	0	1	2
2732	254	"res_0"	"decimal"	2	0	0	0
2733	254	"arg_1"	"decimal"	2	0	1	1
2734	254	"arg_2"	"decimal"	2	0	1	2
2735	255	"res_0"	"decimal"	2	0	0	0
2736	255	"arg_1"	"decimal"	2	0	1	1
2737	255	"arg_2"	"decimal"	2	0	1	2
2738	256	"res_0"	"decimal"	2	0	0	0
2739	256	"arg_1"	"decimal"	2	0	1	1
2740	256	"arg_2"	"decimal"	2	0	1	2
2741	257	"res_0"	"decimal"	2	0	0	0
2742	257	"arg_1"	"decimal"	2	0	1	1
2743	257	"arg_2"	"decimal"	2	0	1	2
2744	258	"res_0"	"decimal"	2	0	0	0
2745	258	"arg_1"	"decimal"	2	0	1	1
2746	258	"arg_2"	"decimal"	2	0	1	2
2747	259	"res_0"	"decimal"	2	0	0	0
2748	259	"arg_1"	"decimal"	2	0	1	1
2749	260	"res_0"	"decimal"	2	0	0	0
2750	260	"arg_1"	"decimal"	2	0	1	1
2751	260	"arg_2"	"int"	32	0	1	2
2752	261	"res_0"	"decimal"	2	0	0	0
2753	261	"arg_1"	"decimal"	2	0	1	1
2754	261	"arg_2"	"int"	32	0	1	2
2755	262	"res_0"	"decimal"	2	0	0	0
2756	262	"arg_1"	"decimal"	2	0	1	1
2757	263	"res_0"	"decimal"	2	0	0	0
2758	263	"arg_1"	"decimal"	2	0	1	1
2759	264	"res_0"	"tinyint"	8	0	0	0
2760	264	"arg_1"	"decimal"	2	0	1	1
2761	265	"res_0"	"decimal"	2	0	0	0
2762	265	"arg_1"	"decimal"	2	0	1	1
2763	265	"arg_2"	"tinyint"	8	0	1	2
2764	266	"res_0"	"decimal"	2	0	0	0
2765	266	"arg_1"	"decimal"	2	0	1	1
2766	266	"arg_2"	"tinyint"	8	0	1	2
2767	267	"res_0"	"month_interval"	32	0	0	0
2768	267	"arg_1"	"month_interval"	32	0	1	1
2769	267	"arg_2"	"decimal"	2	0	1	2
2770	268	"res_0"	"month_interval"	32	0	0	0
2771	268	"arg_1"	"month_interval"	32	0	1	1
2772	268	"arg_2"	"decimal"	2	0	1	2
2773	269	"res_0"	"month_interval"	32	0	0	0
2774	269	"arg_1"	"month_interval"	32	0	1	1
2775	269	"arg_2"	"decimal"	2	0	1	2
2776	270	"res_0"	"month_interval"	32	0	0	0
2777	270	"arg_1"	"month_interval"	32	0	1	1
2778	270	"arg_2"	"decimal"	2	0	1	2
2779	271	"res_0"	"sec_interval"	19	0	0	0
2780	271	"arg_1"	"sec_interval"	19	0	1	1
2781	271	"arg_2"	"decimal"	2	0	1	2
2782	272	"res_0"	"sec_interval"	19	0	0	0
2783	272	"arg_1"	"sec_interval"	19	0	1	1
2784	272	"arg_2"	"decimal"	2	0	1	2
2785	273	"res_0"	"sec_interval"	19	0	0	0
2786	273	"arg_1"	"sec_interval"	19	0	1	1
2787	273	"arg_2"	"decimal"	2	0	1	2
2788	274	"res_0"	"sec_interval"	19	0	0	0
2789	274	"arg_1"	"sec_interval"	19	0	1	1
2790	274	"arg_2"	"decimal"	2	0	1	2
2791	275	"res_0"	"decimal"	4	0	0	0
2792	275	"arg_1"	"decimal"	4	0	1	1
2793	275	"arg_2"	"decimal"	4	0	1	2
2794	276	"res_0"	"decimal"	4	0	0	0
2795	276	"arg_1"	"decimal"	4	0	1	1
2796	276	"arg_2"	"decimal"	4	0	1	2
2797	277	"res_0"	"decimal"	4	0	0	0
2798	277	"arg_1"	"decimal"	4	0	1	1
2799	277	"arg_2"	"decimal"	4	0	1	2
2800	278	"res_0"	"decimal"	4	0	0	0
2801	278	"arg_1"	"decimal"	4	0	1	1
2802	278	"arg_2"	"decimal"	4	0	1	2
2803	279	"res_0"	"decimal"	4	0	0	0
2804	279	"arg_1"	"decimal"	4	0	1	1
2805	279	"arg_2"	"decimal"	4	0	1	2
2806	280	"res_0"	"decimal"	4	0	0	0
2807	280	"arg_1"	"decimal"	4	0	1	1
2808	280	"arg_2"	"decimal"	4	0	1	2
2809	281	"res_0"	"decimal"	4	0	0	0
2810	281	"arg_1"	"decimal"	4	0	1	1
2811	281	"arg_2"	"decimal"	4	0	1	2
2812	282	"res_0"	"decimal"	4	0	0	0
2813	282	"arg_1"	"decimal"	4	0	1	1
2814	283	"res_0"	"decimal"	4	0	0	0
2815	283	"arg_1"	"decimal"	4	0	1	1
2816	283	"arg_2"	"int"	32	0	1	2
2817	284	"res_0"	"decimal"	4	0	0	0
2818	284	"arg_1"	"decimal"	4	0	1	1
2819	284	"arg_2"	"int"	32	0	1	2
2820	285	"res_0"	"decimal"	4	0	0	0
2821	285	"arg_1"	"decimal"	4	0	1	1
2822	286	"res_0"	"decimal"	4	0	0	0
2823	286	"arg_1"	"decimal"	4	0	1	1
2824	287	"res_0"	"tinyint"	8	0	0	0
2825	287	"arg_1"	"decimal"	4	0	1	1
2826	288	"res_0"	"decimal"	4	0	0	0
2827	288	"arg_1"	"decimal"	4	0	1	1
2828	288	"arg_2"	"smallint"	16	0	1	2
2829	289	"res_0"	"decimal"	4	0	0	0
2830	289	"arg_1"	"decimal"	4	0	1	1
2831	289	"arg_2"	"smallint"	16	0	1	2
2832	290	"res_0"	"month_interval"	32	0	0	0
2833	290	"arg_1"	"month_interval"	32	0	1	1
2834	290	"arg_2"	"decimal"	4	0	1	2
2835	291	"res_0"	"month_interval"	32	0	0	0
2836	291	"arg_1"	"month_interval"	32	0	1	1
2837	291	"arg_2"	"decimal"	4	0	1	2
2838	292	"res_0"	"month_interval"	32	0	0	0
2839	292	"arg_1"	"month_interval"	32	0	1	1
2840	292	"arg_2"	"decimal"	4	0	1	2
2841	293	"res_0"	"month_interval"	32	0	0	0
2842	293	"arg_1"	"month_interval"	32	0	1	1
2843	293	"arg_2"	"decimal"	4	0	1	2
2844	294	"res_0"	"sec_interval"	19	0	0	0
2845	294	"arg_1"	"sec_interval"	19	0	1	1
2846	294	"arg_2"	"decimal"	4	0	1	2
2847	295	"res_0"	"sec_interval"	19	0	0	0
2848	295	"arg_1"	"sec_interval"	19	0	1	1
2849	295	"arg_2"	"decimal"	4	0	1	2
2850	296	"res_0"	"sec_interval"	19	0	0	0
2851	296	"arg_1"	"sec_interval"	19	0	1	1
2852	296	"arg_2"	"decimal"	4	0	1	2
2853	297	"res_0"	"sec_interval"	19	0	0	0
2854	297	"arg_1"	"sec_interval"	19	0	1	1
2855	297	"arg_2"	"decimal"	4	0	1	2
2856	298	"res_0"	"decimal"	9	0	0	0
2857	298	"arg_1"	"decimal"	9	0	1	1
2858	298	"arg_2"	"decimal"	9	0	1	2
2859	299	"res_0"	"decimal"	9	0	0	0
2860	299	"arg_1"	"decimal"	9	0	1	1
2861	299	"arg_2"	"decimal"	9	0	1	2
2862	300	"res_0"	"decimal"	9	0	0	0
2863	300	"arg_1"	"decimal"	9	0	1	1
2864	300	"arg_2"	"decimal"	9	0	1	2
2865	301	"res_0"	"decimal"	9	0	0	0
2866	301	"arg_1"	"decimal"	9	0	1	1
2867	301	"arg_2"	"decimal"	9	0	1	2
2868	302	"res_0"	"decimal"	9	0	0	0
2869	302	"arg_1"	"decimal"	9	0	1	1
2870	302	"arg_2"	"decimal"	9	0	1	2
2871	303	"res_0"	"decimal"	9	0	0	0
2872	303	"arg_1"	"decimal"	9	0	1	1
2873	303	"arg_2"	"decimal"	9	0	1	2
2874	304	"res_0"	"decimal"	9	0	0	0
2875	304	"arg_1"	"decimal"	9	0	1	1
2876	304	"arg_2"	"decimal"	9	0	1	2
2877	305	"res_0"	"decimal"	9	0	0	0
2878	305	"arg_1"	"decimal"	9	0	1	1
2879	306	"res_0"	"decimal"	9	0	0	0
2880	306	"arg_1"	"decimal"	9	0	1	1
2881	306	"arg_2"	"int"	32	0	1	2
2882	307	"res_0"	"decimal"	9	0	0	0
2883	307	"arg_1"	"decimal"	9	0	1	1
2884	307	"arg_2"	"int"	32	0	1	2
2885	308	"res_0"	"decimal"	9	0	0	0
2886	308	"arg_1"	"decimal"	9	0	1	1
2887	309	"res_0"	"decimal"	9	0	0	0
2888	309	"arg_1"	"decimal"	9	0	1	1
2889	310	"res_0"	"tinyint"	8	0	0	0
2890	310	"arg_1"	"decimal"	9	0	1	1
2891	311	"res_0"	"decimal"	9	0	0	0
2892	311	"arg_1"	"decimal"	9	0	1	1
2893	311	"arg_2"	"int"	32	0	1	2
2894	312	"res_0"	"decimal"	9	0	0	0
2895	312	"arg_1"	"decimal"	9	0	1	1
2896	312	"arg_2"	"int"	32	0	1	2
2897	313	"res_0"	"month_interval"	32	0	0	0
2898	313	"arg_1"	"month_interval"	32	0	1	1
2899	313	"arg_2"	"decimal"	9	0	1	2
2900	314	"res_0"	"month_interval"	32	0	0	0
2901	314	"arg_1"	"month_interval"	32	0	1	1
2902	314	"arg_2"	"decimal"	9	0	1	2
2903	315	"res_0"	"month_interval"	32	0	0	0
2904	315	"arg_1"	"month_interval"	32	0	1	1
2905	315	"arg_2"	"decimal"	9	0	1	2
2906	316	"res_0"	"month_interval"	32	0	0	0
2907	316	"arg_1"	"month_interval"	32	0	1	1
2908	316	"arg_2"	"decimal"	9	0	1	2
2909	317	"res_0"	"sec_interval"	19	0	0	0
2910	317	"arg_1"	"sec_interval"	19	0	1	1
2911	317	"arg_2"	"decimal"	9	0	1	2
2912	318	"res_0"	"sec_interval"	19	0	0	0
2913	318	"arg_1"	"sec_interval"	19	0	1	1
2914	318	"arg_2"	"decimal"	9	0	1	2
2915	319	"res_0"	"sec_interval"	19	0	0	0
2916	319	"arg_1"	"sec_interval"	19	0	1	1
2917	319	"arg_2"	"decimal"	9	0	1	2
2918	320	"res_0"	"sec_interval"	19	0	0	0
2919	320	"arg_1"	"sec_interval"	19	0	1	1
2920	320	"arg_2"	"decimal"	9	0	1	2
2921	321	"res_0"	"decimal"	19	0	0	0
2922	321	"arg_1"	"decimal"	19	0	1	1
2923	321	"arg_2"	"decimal"	19	0	1	2
2924	322	"res_0"	"decimal"	19	0	0	0
2925	322	"arg_1"	"decimal"	19	0	1	1
2926	322	"arg_2"	"decimal"	19	0	1	2
2927	323	"res_0"	"decimal"	19	0	0	0
2928	323	"arg_1"	"decimal"	19	0	1	1
2929	323	"arg_2"	"decimal"	19	0	1	2
2930	324	"res_0"	"decimal"	19	0	0	0
2931	324	"arg_1"	"decimal"	19	0	1	1
2932	324	"arg_2"	"decimal"	19	0	1	2
2933	325	"res_0"	"decimal"	19	0	0	0
2934	325	"arg_1"	"decimal"	19	0	1	1
2935	325	"arg_2"	"decimal"	19	0	1	2
2936	326	"res_0"	"decimal"	19	0	0	0
2937	326	"arg_1"	"decimal"	19	0	1	1
2938	326	"arg_2"	"decimal"	19	0	1	2
2939	327	"res_0"	"decimal"	19	0	0	0
2940	327	"arg_1"	"decimal"	19	0	1	1
2941	327	"arg_2"	"decimal"	19	0	1	2
2942	328	"res_0"	"decimal"	19	0	0	0
2943	328	"arg_1"	"decimal"	19	0	1	1
2944	329	"res_0"	"decimal"	19	0	0	0
2945	329	"arg_1"	"decimal"	19	0	1	1
2946	329	"arg_2"	"int"	32	0	1	2
2947	330	"res_0"	"decimal"	19	0	0	0
2948	330	"arg_1"	"decimal"	19	0	1	1
2949	330	"arg_2"	"int"	32	0	1	2
2950	331	"res_0"	"decimal"	19	0	0	0
2951	331	"arg_1"	"decimal"	19	0	1	1
2952	332	"res_0"	"decimal"	19	0	0	0
2953	332	"arg_1"	"decimal"	19	0	1	1
2954	333	"res_0"	"tinyint"	8	0	0	0
2955	333	"arg_1"	"decimal"	19	0	1	1
2956	334	"res_0"	"decimal"	19	0	0	0
2957	334	"arg_1"	"decimal"	19	0	1	1
2958	334	"arg_2"	"bigint"	64	0	1	2
2959	335	"res_0"	"decimal"	19	0	0	0
2960	335	"arg_1"	"decimal"	19	0	1	1
2961	335	"arg_2"	"bigint"	64	0	1	2
2962	336	"res_0"	"month_interval"	32	0	0	0
2963	336	"arg_1"	"month_interval"	32	0	1	1
2964	336	"arg_2"	"decimal"	19	0	1	2
2965	337	"res_0"	"month_interval"	32	0	0	0
2966	337	"arg_1"	"month_interval"	32	0	1	1
2967	337	"arg_2"	"decimal"	19	0	1	2
2968	338	"res_0"	"month_interval"	32	0	0	0
2969	338	"arg_1"	"month_interval"	32	0	1	1
2970	338	"arg_2"	"decimal"	19	0	1	2
2971	339	"res_0"	"month_interval"	32	0	0	0
2972	339	"arg_1"	"month_interval"	32	0	1	1
2973	339	"arg_2"	"decimal"	19	0	1	2
2974	340	"res_0"	"sec_interval"	19	0	0	0
2975	340	"arg_1"	"sec_interval"	19	0	1	1
2976	340	"arg_2"	"decimal"	19	0	1	2
2977	341	"res_0"	"sec_interval"	19	0	0	0
2978	341	"arg_1"	"sec_interval"	19	0	1	1
2979	341	"arg_2"	"decimal"	19	0	1	2
2980	342	"res_0"	"sec_interval"	19	0	0	0
2981	342	"arg_1"	"sec_interval"	19	0	1	1
2982	342	"arg_2"	"decimal"	19	0	1	2
2983	343	"res_0"	"sec_interval"	19	0	0	0
2984	343	"arg_1"	"sec_interval"	19	0	1	1
2985	343	"arg_2"	"decimal"	19	0	1	2
2986	344	"res_0"	"real"	24	0	0	0
2987	344	"arg_1"	"real"	24	0	1	1
2988	344	"arg_2"	"real"	24	0	1	2
2989	345	"res_0"	"real"	24	0	0	0
2990	345	"arg_1"	"real"	24	0	1	1
2991	345	"arg_2"	"real"	24	0	1	2
2992	346	"res_0"	"real"	24	0	0	0
2993	346	"arg_1"	"real"	24	0	1	1
2994	346	"arg_2"	"real"	24	0	1	2
2995	347	"res_0"	"real"	24	0	0	0
2996	347	"arg_1"	"real"	24	0	1	1
2997	347	"arg_2"	"real"	24	0	1	2
2998	348	"res_0"	"real"	24	0	0	0
2999	348	"arg_1"	"real"	24	0	1	1
3000	349	"res_0"	"real"	24	0	0	0
3001	349	"arg_1"	"real"	24	0	1	1
3002	350	"res_0"	"tinyint"	8	0	0	0
3003	350	"arg_1"	"real"	24	0	1	1
3004	351	"res_0"	"real"	24	0	0	0
3005	351	"arg_1"	"real"	24	0	1	1
3006	351	"arg_2"	"real"	24	0	1	2
3007	352	"res_0"	"real"	24	0	0	0
3008	352	"arg_1"	"real"	24	0	1	1
3009	352	"arg_2"	"real"	24	0	1	2
3010	353	"res_0"	"month_interval"	32	0	0	0
3011	353	"arg_1"	"month_interval"	32	0	1	1
3012	353	"arg_2"	"real"	24	0	1	2
3013	354	"res_0"	"month_interval"	32	0	0	0
3014	354	"arg_1"	"month_interval"	32	0	1	1
3015	354	"arg_2"	"real"	24	0	1	2
3016	355	"res_0"	"month_interval"	32	0	0	0
3017	355	"arg_1"	"month_interval"	32	0	1	1
3018	355	"arg_2"	"real"	24	0	1	2
3019	356	"res_0"	"month_interval"	32	0	0	0
3020	356	"arg_1"	"month_interval"	32	0	1	1
3021	356	"arg_2"	"real"	24	0	1	2
3022	357	"res_0"	"sec_interval"	19	0	0	0
3023	357	"arg_1"	"sec_interval"	19	0	1	1
3024	357	"arg_2"	"real"	24	0	1	2
3025	358	"res_0"	"sec_interval"	19	0	0	0
3026	358	"arg_1"	"sec_interval"	19	0	1	1
3027	358	"arg_2"	"real"	24	0	1	2
3028	359	"res_0"	"sec_interval"	19	0	0	0
3029	359	"arg_1"	"sec_interval"	19	0	1	1
3030	359	"arg_2"	"real"	24	0	1	2
3031	360	"res_0"	"sec_interval"	19	0	0	0
3032	360	"arg_1"	"sec_interval"	19	0	1	1
3033	360	"arg_2"	"real"	24	0	1	2
3034	361	"res_0"	"double"	53	0	0	0
3035	361	"arg_1"	"double"	53	0	1	1
3036	361	"arg_2"	"double"	53	0	1	2
3037	362	"res_0"	"double"	53	0	0	0
3038	362	"arg_1"	"double"	53	0	1	1
3039	362	"arg_2"	"double"	53	0	1	2
3040	363	"res_0"	"double"	53	0	0	0
3041	363	"arg_1"	"double"	53	0	1	1
3042	363	"arg_2"	"double"	53	0	1	2
3043	364	"res_0"	"double"	53	0	0	0
3044	364	"arg_1"	"double"	53	0	1	1
3045	364	"arg_2"	"double"	53	0	1	2
3046	365	"res_0"	"double"	53	0	0	0
3047	365	"arg_1"	"double"	53	0	1	1
3048	366	"res_0"	"double"	53	0	0	0
3049	366	"arg_1"	"double"	53	0	1	1
3050	367	"res_0"	"tinyint"	8	0	0	0
3051	367	"arg_1"	"double"	53	0	1	1
3052	368	"res_0"	"double"	53	0	0	0
3053	368	"arg_1"	"double"	53	0	1	1
3054	368	"arg_2"	"double"	53	0	1	2
3055	369	"res_0"	"double"	53	0	0	0
3056	369	"arg_1"	"double"	53	0	1	1
3057	369	"arg_2"	"double"	53	0	1	2
3058	370	"res_0"	"month_interval"	32	0	0	0
3059	370	"arg_1"	"month_interval"	32	0	1	1
3060	370	"arg_2"	"double"	53	0	1	2
3061	371	"res_0"	"month_interval"	32	0	0	0
3062	371	"arg_1"	"month_interval"	32	0	1	1
3063	371	"arg_2"	"double"	53	0	1	2
3064	372	"res_0"	"month_interval"	32	0	0	0
3065	372	"arg_1"	"month_interval"	32	0	1	1
3066	372	"arg_2"	"double"	53	0	1	2
3067	373	"res_0"	"month_interval"	32	0	0	0
3068	373	"arg_1"	"month_interval"	32	0	1	1
3069	373	"arg_2"	"double"	53	0	1	2
3070	374	"res_0"	"sec_interval"	19	0	0	0
3071	374	"arg_1"	"sec_interval"	19	0	1	1
3072	374	"arg_2"	"double"	53	0	1	2
3073	375	"res_0"	"sec_interval"	19	0	0	0
3074	375	"arg_1"	"sec_interval"	19	0	1	1
3075	375	"arg_2"	"double"	53	0	1	2
3076	376	"res_0"	"sec_interval"	19	0	0	0
3077	376	"arg_1"	"sec_interval"	19	0	1	1
3078	376	"arg_2"	"double"	53	0	1	2
3079	377	"res_0"	"sec_interval"	19	0	0	0
3080	377	"arg_1"	"sec_interval"	19	0	1	1
3081	377	"arg_2"	"double"	53	0	1	2
3082	378	"res_0"	"month_interval"	32	0	0	0
3083	378	"arg_1"	"month_interval"	32	0	1	1
3084	378	"arg_2"	"month_interval"	32	0	1	2
3085	379	"res_0"	"month_interval"	32	0	0	0
3086	379	"arg_1"	"month_interval"	32	0	1	1
3087	379	"arg_2"	"month_interval"	32	0	1	2
3088	380	"res_0"	"month_interval"	32	0	0	0
3089	380	"arg_1"	"month_interval"	32	0	1	1
3090	380	"arg_2"	"month_interval"	32	0	1	2
3091	381	"res_0"	"month_interval"	32	0	0	0
3092	381	"arg_1"	"month_interval"	32	0	1	1
3093	381	"arg_2"	"month_interval"	32	0	1	2
3094	382	"res_0"	"month_interval"	32	0	0	0
3095	382	"arg_1"	"month_interval"	32	0	1	1
3096	383	"res_0"	"month_interval"	32	0	0	0
3097	383	"arg_1"	"month_interval"	32	0	1	1
3098	384	"res_0"	"tinyint"	8	0	0	0
3099	384	"arg_1"	"month_interval"	32	0	1	1
3100	385	"res_0"	"month_interval"	32	0	0	0
3101	385	"arg_1"	"month_interval"	32	0	1	1
3102	385	"arg_2"	"int"	32	0	1	2
3103	386	"res_0"	"month_interval"	32	0	0	0
3104	386	"arg_1"	"month_interval"	32	0	1	1
3105	386	"arg_2"	"int"	32	0	1	2
3106	387	"res_0"	"sec_interval"	19	0	0	0
3107	387	"arg_1"	"sec_interval"	19	0	1	1
3108	387	"arg_2"	"sec_interval"	19	0	1	2
3109	388	"res_0"	"sec_interval"	19	0	0	0
3110	388	"arg_1"	"sec_interval"	19	0	1	1
3111	388	"arg_2"	"sec_interval"	19	0	1	2
3112	389	"res_0"	"sec_interval"	19	0	0	0
3113	389	"arg_1"	"sec_interval"	19	0	1	1
3114	389	"arg_2"	"sec_interval"	19	0	1	2
3115	390	"res_0"	"sec_interval"	19	0	0	0
3116	390	"arg_1"	"sec_interval"	19	0	1	1
3117	390	"arg_2"	"sec_interval"	19	0	1	2
3118	391	"res_0"	"sec_interval"	19	0	0	0
3119	391	"arg_1"	"sec_interval"	19	0	1	1
3120	392	"res_0"	"sec_interval"	19	0	0	0
3121	392	"arg_1"	"sec_interval"	19	0	1	1
3122	393	"res_0"	"tinyint"	8	0	0	0
3123	393	"arg_1"	"sec_interval"	19	0	1	1
3124	394	"res_0"	"sec_interval"	19	0	0	0
3125	394	"arg_1"	"sec_interval"	19	0	1	1
3126	394	"arg_2"	"bigint"	64	0	1	2
3127	395	"res_0"	"sec_interval"	19	0	0	0
3128	395	"arg_1"	"sec_interval"	19	0	1	1
3129	395	"arg_2"	"bigint"	64	0	1	2
3130	396	"res_0"	"decimal"	4	0	0	0
3131	396	"arg_1"	"decimal"	4	0	1	1
3132	396	"arg_2"	"tinyint"	8	0	1	2
3133	397	"res_0"	"decimal"	4	0	0	0
3134	397	"arg_1"	"tinyint"	8	0	1	1
3135	397	"arg_2"	"decimal"	4	0	1	2
3136	398	"res_0"	"decimal"	4	0	0	0
3137	398	"arg_1"	"decimal"	4	0	1	1
3138	398	"arg_2"	"decimal"	2	0	1	2
3139	399	"res_0"	"decimal"	4	0	0	0
3140	399	"arg_1"	"decimal"	2	0	1	1
3141	399	"arg_2"	"decimal"	4	0	1	2
3142	400	"res_0"	"decimal"	9	0	0	0
3143	400	"arg_1"	"decimal"	9	0	1	1
3144	400	"arg_2"	"tinyint"	8	0	1	2
3145	401	"res_0"	"decimal"	9	0	0	0
3146	401	"arg_1"	"tinyint"	8	0	1	1
3147	401	"arg_2"	"decimal"	9	0	1	2
3148	402	"res_0"	"decimal"	9	0	0	0
3149	402	"arg_1"	"decimal"	9	0	1	1
3150	402	"arg_2"	"smallint"	16	0	1	2
3151	403	"res_0"	"decimal"	9	0	0	0
3152	403	"arg_1"	"smallint"	16	0	1	1
3153	403	"arg_2"	"decimal"	9	0	1	2
3154	404	"res_0"	"decimal"	9	0	0	0
3155	404	"arg_1"	"decimal"	9	0	1	1
3156	404	"arg_2"	"decimal"	2	0	1	2
3157	405	"res_0"	"decimal"	9	0	0	0
3158	405	"arg_1"	"decimal"	2	0	1	1
3159	405	"arg_2"	"decimal"	9	0	1	2
3160	406	"res_0"	"decimal"	9	0	0	0
3161	406	"arg_1"	"decimal"	9	0	1	1
3162	406	"arg_2"	"decimal"	4	0	1	2
3163	407	"res_0"	"decimal"	9	0	0	0
3164	407	"arg_1"	"decimal"	4	0	1	1
3165	407	"arg_2"	"decimal"	9	0	1	2
3166	408	"res_0"	"decimal"	19	0	0	0
3167	408	"arg_1"	"decimal"	19	0	1	1
3168	408	"arg_2"	"tinyint"	8	0	1	2
3169	409	"res_0"	"decimal"	19	0	0	0
3170	409	"arg_1"	"tinyint"	8	0	1	1
3171	409	"arg_2"	"decimal"	19	0	1	2
3172	410	"res_0"	"decimal"	19	0	0	0
3173	410	"arg_1"	"decimal"	19	0	1	1
3174	410	"arg_2"	"smallint"	16	0	1	2
3175	411	"res_0"	"decimal"	19	0	0	0
3176	411	"arg_1"	"smallint"	16	0	1	1
3177	411	"arg_2"	"decimal"	19	0	1	2
3178	412	"res_0"	"decimal"	19	0	0	0
3179	412	"arg_1"	"decimal"	19	0	1	1
3180	412	"arg_2"	"int"	32	0	1	2
3181	413	"res_0"	"decimal"	19	0	0	0
3182	413	"arg_1"	"int"	32	0	1	1
3183	413	"arg_2"	"decimal"	19	0	1	2
3184	414	"res_0"	"decimal"	19	0	0	0
3185	414	"arg_1"	"decimal"	19	0	1	1
3186	414	"arg_2"	"wrd"	64	0	1	2
3187	415	"res_0"	"decimal"	19	0	0	0
3188	415	"arg_1"	"wrd"	64	0	1	1
3189	415	"arg_2"	"decimal"	19	0	1	2
3190	416	"res_0"	"decimal"	19	0	0	0
3191	416	"arg_1"	"decimal"	19	0	1	1
3192	416	"arg_2"	"decimal"	2	0	1	2
3193	417	"res_0"	"decimal"	19	0	0	0
3194	417	"arg_1"	"decimal"	2	0	1	1
3195	417	"arg_2"	"decimal"	19	0	1	2
3196	418	"res_0"	"decimal"	19	0	0	0
3197	418	"arg_1"	"decimal"	19	0	1	1
3198	418	"arg_2"	"decimal"	4	0	1	2
3199	419	"res_0"	"decimal"	19	0	0	0
3200	419	"arg_1"	"decimal"	4	0	1	1
3201	419	"arg_2"	"decimal"	19	0	1	2
3202	420	"res_0"	"decimal"	19	0	0	0
3203	420	"arg_1"	"decimal"	19	0	1	1
3204	420	"arg_2"	"decimal"	9	0	1	2
3205	421	"res_0"	"decimal"	19	0	0	0
3206	421	"arg_1"	"decimal"	9	0	1	1
3207	421	"arg_2"	"decimal"	19	0	1	2
3208	422	"res_0"	"decimal"	2	0	0	0
3209	422	"arg_1"	"decimal"	2	0	1	1
3210	422	"arg_2"	"tinyint"	8	0	1	2
3211	423	"res_0"	"decimal"	4	0	0	0
3212	423	"arg_1"	"decimal"	4	0	1	1
3213	423	"arg_2"	"tinyint"	8	0	1	2
3214	424	"res_0"	"decimal"	9	0	0	0
3215	424	"arg_1"	"decimal"	9	0	1	1
3216	424	"arg_2"	"tinyint"	8	0	1	2
3217	425	"res_0"	"decimal"	19	0	0	0
3218	425	"arg_1"	"decimal"	19	0	1	1
3219	425	"arg_2"	"tinyint"	8	0	1	2
3220	426	"res_0"	"real"	24	0	0	0
3221	426	"arg_1"	"real"	24	0	1	1
3222	426	"arg_2"	"tinyint"	8	0	1	2
3223	427	"res_0"	"double"	53	0	0	0
3224	427	"arg_1"	"double"	53	0	1	1
3225	427	"arg_2"	"tinyint"	8	0	1	2
3226	428	"res_0"	"oid"	63	0	0	0
3227	428	"arg_1"	"oid"	63	0	1	1
3228	428	"arg_2"	"oid"	63	0	1	2
3229	429	"res_0"	"oid"	63	0	0	0
3230	429	"arg_1"	"tinyint"	8	0	1	1
3231	429	"arg_2"	"oid"	63	0	1	2
3232	430	"res_0"	"oid"	63	0	0	0
3233	430	"arg_1"	"smallint"	16	0	1	1
3234	430	"arg_2"	"oid"	63	0	1	2
3235	431	"res_0"	"oid"	63	0	0	0
3236	431	"arg_1"	"int"	32	0	1	1
3237	431	"arg_2"	"oid"	63	0	1	2
3238	432	"res_0"	"oid"	63	0	0	0
3239	432	"arg_1"	"bigint"	64	0	1	1
3240	432	"arg_2"	"oid"	63	0	1	2
3241	433	"res_0"	"oid"	63	0	0	0
3242	433	"arg_1"	"wrd"	64	0	1	1
3243	433	"arg_2"	"oid"	63	0	1	2
3244	434	"res_0"	"oid"	63	0	0	0
3245	434	"arg_1"	"decimal"	2	0	1	1
3246	434	"arg_2"	"oid"	63	0	1	2
3247	435	"res_0"	"oid"	63	0	0	0
3248	435	"arg_1"	"decimal"	4	0	1	1
3249	435	"arg_2"	"oid"	63	0	1	2
3250	436	"res_0"	"oid"	63	0	0	0
3251	436	"arg_1"	"decimal"	9	0	1	1
3252	436	"arg_2"	"oid"	63	0	1	2
3253	437	"res_0"	"oid"	63	0	0	0
3254	437	"arg_1"	"decimal"	19	0	1	1
3255	437	"arg_2"	"oid"	63	0	1	2
3256	438	"res_0"	"oid"	63	0	0	0
3257	438	"arg_1"	"real"	24	0	1	1
3258	438	"arg_2"	"oid"	63	0	1	2
3259	439	"res_0"	"oid"	63	0	0	0
3260	439	"arg_1"	"double"	53	0	1	1
3261	439	"arg_2"	"oid"	63	0	1	2
3262	440	"res_0"	"oid"	63	0	0	0
3263	440	"arg_1"	"month_interval"	32	0	1	1
3264	440	"arg_2"	"oid"	63	0	1	2
3265	441	"res_0"	"oid"	63	0	0	0
3266	441	"arg_1"	"sec_interval"	19	0	1	1
3267	441	"arg_2"	"oid"	63	0	1	2
3268	442	"res_0"	"oid"	63	0	0	0
3269	442	"arg_1"	"time"	7	0	1	1
3270	442	"arg_2"	"oid"	63	0	1	2
3271	443	"res_0"	"oid"	63	0	0	0
3272	443	"arg_1"	"timetz"	7	0	1	1
3273	443	"arg_2"	"oid"	63	0	1	2
3274	444	"res_0"	"oid"	63	0	0	0
3275	444	"arg_1"	"date"	0	0	1	1
3276	444	"arg_2"	"oid"	63	0	1	2
3277	445	"res_0"	"oid"	63	0	0	0
3278	445	"arg_1"	"timestamp"	7	0	1	1
3279	445	"arg_2"	"oid"	63	0	1	2
3280	446	"res_0"	"oid"	63	0	0	0
3281	446	"arg_1"	"timestamptz"	7	0	1	1
3282	446	"arg_2"	"oid"	63	0	1	2
3283	447	"res_0"	"oid"	63	0	0	0
3284	447	"arg_1"	"blob"	0	0	1	1
3285	447	"arg_2"	"oid"	63	0	1	2
3286	448	"res_0"	"tinyint"	8	0	0	0
3287	448	"arg_1"	"oid"	63	0	1	1
3288	448	"arg_2"	"tinyint"	8	0	1	2
3289	449	"res_0"	"tinyint"	8	0	0	0
3290	449	"arg_1"	"tinyint"	8	0	1	1
3291	449	"arg_2"	"tinyint"	8	0	1	2
3292	450	"res_0"	"tinyint"	8	0	0	0
3293	450	"arg_1"	"smallint"	16	0	1	1
3294	450	"arg_2"	"tinyint"	8	0	1	2
3295	451	"res_0"	"tinyint"	8	0	0	0
3296	451	"arg_1"	"int"	32	0	1	1
3297	451	"arg_2"	"tinyint"	8	0	1	2
3298	452	"res_0"	"tinyint"	8	0	0	0
3299	452	"arg_1"	"bigint"	64	0	1	1
3300	452	"arg_2"	"tinyint"	8	0	1	2
3301	453	"res_0"	"tinyint"	8	0	0	0
3302	453	"arg_1"	"wrd"	64	0	1	1
3303	453	"arg_2"	"tinyint"	8	0	1	2
3304	454	"res_0"	"tinyint"	8	0	0	0
3305	454	"arg_1"	"decimal"	2	0	1	1
3306	454	"arg_2"	"tinyint"	8	0	1	2
3307	455	"res_0"	"tinyint"	8	0	0	0
3308	455	"arg_1"	"decimal"	4	0	1	1
3309	455	"arg_2"	"tinyint"	8	0	1	2
3310	456	"res_0"	"tinyint"	8	0	0	0
3311	456	"arg_1"	"decimal"	9	0	1	1
3312	456	"arg_2"	"tinyint"	8	0	1	2
3313	457	"res_0"	"tinyint"	8	0	0	0
3314	457	"arg_1"	"decimal"	19	0	1	1
3315	457	"arg_2"	"tinyint"	8	0	1	2
3316	458	"res_0"	"tinyint"	8	0	0	0
3317	458	"arg_1"	"real"	24	0	1	1
3318	458	"arg_2"	"tinyint"	8	0	1	2
3319	459	"res_0"	"tinyint"	8	0	0	0
3320	459	"arg_1"	"double"	53	0	1	1
3321	459	"arg_2"	"tinyint"	8	0	1	2
3322	460	"res_0"	"tinyint"	8	0	0	0
3323	460	"arg_1"	"month_interval"	32	0	1	1
3324	460	"arg_2"	"tinyint"	8	0	1	2
3325	461	"res_0"	"tinyint"	8	0	0	0
3326	461	"arg_1"	"sec_interval"	19	0	1	1
3327	461	"arg_2"	"tinyint"	8	0	1	2
3328	462	"res_0"	"tinyint"	8	0	0	0
3329	462	"arg_1"	"time"	7	0	1	1
3330	462	"arg_2"	"tinyint"	8	0	1	2
3331	463	"res_0"	"tinyint"	8	0	0	0
3332	463	"arg_1"	"timetz"	7	0	1	1
3333	463	"arg_2"	"tinyint"	8	0	1	2
3334	464	"res_0"	"tinyint"	8	0	0	0
3335	464	"arg_1"	"date"	0	0	1	1
3336	464	"arg_2"	"tinyint"	8	0	1	2
3337	465	"res_0"	"tinyint"	8	0	0	0
3338	465	"arg_1"	"timestamp"	7	0	1	1
3339	465	"arg_2"	"tinyint"	8	0	1	2
3340	466	"res_0"	"tinyint"	8	0	0	0
3341	466	"arg_1"	"timestamptz"	7	0	1	1
3342	466	"arg_2"	"tinyint"	8	0	1	2
3343	467	"res_0"	"tinyint"	8	0	0	0
3344	467	"arg_1"	"blob"	0	0	1	1
3345	467	"arg_2"	"tinyint"	8	0	1	2
3346	468	"res_0"	"smallint"	16	0	0	0
3347	468	"arg_1"	"oid"	63	0	1	1
3348	468	"arg_2"	"smallint"	16	0	1	2
3349	469	"res_0"	"smallint"	16	0	0	0
3350	469	"arg_1"	"tinyint"	8	0	1	1
3351	469	"arg_2"	"smallint"	16	0	1	2
3352	470	"res_0"	"smallint"	16	0	0	0
3353	470	"arg_1"	"smallint"	16	0	1	1
3354	470	"arg_2"	"smallint"	16	0	1	2
3355	471	"res_0"	"smallint"	16	0	0	0
3356	471	"arg_1"	"int"	32	0	1	1
3357	471	"arg_2"	"smallint"	16	0	1	2
3358	472	"res_0"	"smallint"	16	0	0	0
3359	472	"arg_1"	"bigint"	64	0	1	1
3360	472	"arg_2"	"smallint"	16	0	1	2
3361	473	"res_0"	"smallint"	16	0	0	0
3362	473	"arg_1"	"wrd"	64	0	1	1
3363	473	"arg_2"	"smallint"	16	0	1	2
3364	474	"res_0"	"smallint"	16	0	0	0
3365	474	"arg_1"	"decimal"	2	0	1	1
3366	474	"arg_2"	"smallint"	16	0	1	2
3367	475	"res_0"	"smallint"	16	0	0	0
3368	475	"arg_1"	"decimal"	4	0	1	1
3369	475	"arg_2"	"smallint"	16	0	1	2
3370	476	"res_0"	"smallint"	16	0	0	0
3371	476	"arg_1"	"decimal"	9	0	1	1
3372	476	"arg_2"	"smallint"	16	0	1	2
3373	477	"res_0"	"smallint"	16	0	0	0
3374	477	"arg_1"	"decimal"	19	0	1	1
3375	477	"arg_2"	"smallint"	16	0	1	2
3376	478	"res_0"	"smallint"	16	0	0	0
3377	478	"arg_1"	"real"	24	0	1	1
3378	478	"arg_2"	"smallint"	16	0	1	2
3379	479	"res_0"	"smallint"	16	0	0	0
3380	479	"arg_1"	"double"	53	0	1	1
3381	479	"arg_2"	"smallint"	16	0	1	2
3382	480	"res_0"	"smallint"	16	0	0	0
3383	480	"arg_1"	"month_interval"	32	0	1	1
3384	480	"arg_2"	"smallint"	16	0	1	2
3385	481	"res_0"	"smallint"	16	0	0	0
3386	481	"arg_1"	"sec_interval"	19	0	1	1
3387	481	"arg_2"	"smallint"	16	0	1	2
3388	482	"res_0"	"smallint"	16	0	0	0
3389	482	"arg_1"	"time"	7	0	1	1
3390	482	"arg_2"	"smallint"	16	0	1	2
3391	483	"res_0"	"smallint"	16	0	0	0
3392	483	"arg_1"	"timetz"	7	0	1	1
3393	483	"arg_2"	"smallint"	16	0	1	2
3394	484	"res_0"	"smallint"	16	0	0	0
3395	484	"arg_1"	"date"	0	0	1	1
3396	484	"arg_2"	"smallint"	16	0	1	2
3397	485	"res_0"	"smallint"	16	0	0	0
3398	485	"arg_1"	"timestamp"	7	0	1	1
3399	485	"arg_2"	"smallint"	16	0	1	2
3400	486	"res_0"	"smallint"	16	0	0	0
3401	486	"arg_1"	"timestamptz"	7	0	1	1
3402	486	"arg_2"	"smallint"	16	0	1	2
3403	487	"res_0"	"smallint"	16	0	0	0
3404	487	"arg_1"	"blob"	0	0	1	1
3405	487	"arg_2"	"smallint"	16	0	1	2
3406	488	"res_0"	"int"	32	0	0	0
3407	488	"arg_1"	"oid"	63	0	1	1
3408	488	"arg_2"	"int"	32	0	1	2
3409	489	"res_0"	"int"	32	0	0	0
3410	489	"arg_1"	"tinyint"	8	0	1	1
3411	489	"arg_2"	"int"	32	0	1	2
3412	490	"res_0"	"int"	32	0	0	0
3413	490	"arg_1"	"smallint"	16	0	1	1
3414	490	"arg_2"	"int"	32	0	1	2
3415	491	"res_0"	"int"	32	0	0	0
3416	491	"arg_1"	"int"	32	0	1	1
3417	491	"arg_2"	"int"	32	0	1	2
3418	492	"res_0"	"int"	32	0	0	0
3419	492	"arg_1"	"bigint"	64	0	1	1
3420	492	"arg_2"	"int"	32	0	1	2
3421	493	"res_0"	"int"	32	0	0	0
3422	493	"arg_1"	"wrd"	64	0	1	1
3423	493	"arg_2"	"int"	32	0	1	2
3424	494	"res_0"	"int"	32	0	0	0
3425	494	"arg_1"	"decimal"	2	0	1	1
3426	494	"arg_2"	"int"	32	0	1	2
3427	495	"res_0"	"int"	32	0	0	0
3428	495	"arg_1"	"decimal"	4	0	1	1
3429	495	"arg_2"	"int"	32	0	1	2
3430	496	"res_0"	"int"	32	0	0	0
3431	496	"arg_1"	"decimal"	9	0	1	1
3432	496	"arg_2"	"int"	32	0	1	2
3433	497	"res_0"	"int"	32	0	0	0
3434	497	"arg_1"	"decimal"	19	0	1	1
3435	497	"arg_2"	"int"	32	0	1	2
3436	498	"res_0"	"int"	32	0	0	0
3437	498	"arg_1"	"real"	24	0	1	1
3438	498	"arg_2"	"int"	32	0	1	2
3439	499	"res_0"	"int"	32	0	0	0
3440	499	"arg_1"	"double"	53	0	1	1
3441	499	"arg_2"	"int"	32	0	1	2
3442	500	"res_0"	"int"	32	0	0	0
3443	500	"arg_1"	"month_interval"	32	0	1	1
3444	500	"arg_2"	"int"	32	0	1	2
3445	501	"res_0"	"int"	32	0	0	0
3446	501	"arg_1"	"sec_interval"	19	0	1	1
3447	501	"arg_2"	"int"	32	0	1	2
3448	502	"res_0"	"int"	32	0	0	0
3449	502	"arg_1"	"time"	7	0	1	1
3450	502	"arg_2"	"int"	32	0	1	2
3451	503	"res_0"	"int"	32	0	0	0
3452	503	"arg_1"	"timetz"	7	0	1	1
3453	503	"arg_2"	"int"	32	0	1	2
3454	504	"res_0"	"int"	32	0	0	0
3455	504	"arg_1"	"date"	0	0	1	1
3456	504	"arg_2"	"int"	32	0	1	2
3457	505	"res_0"	"int"	32	0	0	0
3458	505	"arg_1"	"timestamp"	7	0	1	1
3459	505	"arg_2"	"int"	32	0	1	2
3460	506	"res_0"	"int"	32	0	0	0
3461	506	"arg_1"	"timestamptz"	7	0	1	1
3462	506	"arg_2"	"int"	32	0	1	2
3463	507	"res_0"	"int"	32	0	0	0
3464	507	"arg_1"	"blob"	0	0	1	1
3465	507	"arg_2"	"int"	32	0	1	2
3466	508	"res_0"	"bigint"	64	0	0	0
3467	508	"arg_1"	"oid"	63	0	1	1
3468	508	"arg_2"	"bigint"	64	0	1	2
3469	509	"res_0"	"bigint"	64	0	0	0
3470	509	"arg_1"	"tinyint"	8	0	1	1
3471	509	"arg_2"	"bigint"	64	0	1	2
3472	510	"res_0"	"bigint"	64	0	0	0
3473	510	"arg_1"	"smallint"	16	0	1	1
3474	510	"arg_2"	"bigint"	64	0	1	2
3475	511	"res_0"	"bigint"	64	0	0	0
3476	511	"arg_1"	"int"	32	0	1	1
3477	511	"arg_2"	"bigint"	64	0	1	2
3478	512	"res_0"	"bigint"	64	0	0	0
3479	512	"arg_1"	"bigint"	64	0	1	1
3480	512	"arg_2"	"bigint"	64	0	1	2
3481	513	"res_0"	"bigint"	64	0	0	0
3482	513	"arg_1"	"wrd"	64	0	1	1
3483	513	"arg_2"	"bigint"	64	0	1	2
3484	514	"res_0"	"bigint"	64	0	0	0
3485	514	"arg_1"	"decimal"	2	0	1	1
3486	514	"arg_2"	"bigint"	64	0	1	2
3487	515	"res_0"	"bigint"	64	0	0	0
3488	515	"arg_1"	"decimal"	4	0	1	1
3489	515	"arg_2"	"bigint"	64	0	1	2
3490	516	"res_0"	"bigint"	64	0	0	0
3491	516	"arg_1"	"decimal"	9	0	1	1
3492	516	"arg_2"	"bigint"	64	0	1	2
3493	517	"res_0"	"bigint"	64	0	0	0
3494	517	"arg_1"	"decimal"	19	0	1	1
3495	517	"arg_2"	"bigint"	64	0	1	2
3496	518	"res_0"	"bigint"	64	0	0	0
3497	518	"arg_1"	"real"	24	0	1	1
3498	518	"arg_2"	"bigint"	64	0	1	2
3499	519	"res_0"	"bigint"	64	0	0	0
3500	519	"arg_1"	"double"	53	0	1	1
3501	519	"arg_2"	"bigint"	64	0	1	2
3502	520	"res_0"	"bigint"	64	0	0	0
3503	520	"arg_1"	"month_interval"	32	0	1	1
3504	520	"arg_2"	"bigint"	64	0	1	2
3505	521	"res_0"	"bigint"	64	0	0	0
3506	521	"arg_1"	"sec_interval"	19	0	1	1
3507	521	"arg_2"	"bigint"	64	0	1	2
3508	522	"res_0"	"bigint"	64	0	0	0
3509	522	"arg_1"	"time"	7	0	1	1
3510	522	"arg_2"	"bigint"	64	0	1	2
3511	523	"res_0"	"bigint"	64	0	0	0
3512	523	"arg_1"	"timetz"	7	0	1	1
3513	523	"arg_2"	"bigint"	64	0	1	2
3514	524	"res_0"	"bigint"	64	0	0	0
3515	524	"arg_1"	"date"	0	0	1	1
3516	524	"arg_2"	"bigint"	64	0	1	2
3517	525	"res_0"	"bigint"	64	0	0	0
3518	525	"arg_1"	"timestamp"	7	0	1	1
3519	525	"arg_2"	"bigint"	64	0	1	2
3520	526	"res_0"	"bigint"	64	0	0	0
3521	526	"arg_1"	"timestamptz"	7	0	1	1
3522	526	"arg_2"	"bigint"	64	0	1	2
3523	527	"res_0"	"bigint"	64	0	0	0
3524	527	"arg_1"	"blob"	0	0	1	1
3525	527	"arg_2"	"bigint"	64	0	1	2
3526	528	"res_0"	"wrd"	64	0	0	0
3527	528	"arg_1"	"oid"	63	0	1	1
3528	528	"arg_2"	"wrd"	64	0	1	2
3529	529	"res_0"	"wrd"	64	0	0	0
3530	529	"arg_1"	"tinyint"	8	0	1	1
3531	529	"arg_2"	"wrd"	64	0	1	2
3532	530	"res_0"	"wrd"	64	0	0	0
3533	530	"arg_1"	"smallint"	16	0	1	1
3534	530	"arg_2"	"wrd"	64	0	1	2
3535	531	"res_0"	"wrd"	64	0	0	0
3536	531	"arg_1"	"int"	32	0	1	1
3537	531	"arg_2"	"wrd"	64	0	1	2
3538	532	"res_0"	"wrd"	64	0	0	0
3539	532	"arg_1"	"bigint"	64	0	1	1
3540	532	"arg_2"	"wrd"	64	0	1	2
3541	533	"res_0"	"wrd"	64	0	0	0
3542	533	"arg_1"	"wrd"	64	0	1	1
3543	533	"arg_2"	"wrd"	64	0	1	2
3544	534	"res_0"	"wrd"	64	0	0	0
3545	534	"arg_1"	"decimal"	2	0	1	1
3546	534	"arg_2"	"wrd"	64	0	1	2
3547	535	"res_0"	"wrd"	64	0	0	0
3548	535	"arg_1"	"decimal"	4	0	1	1
3549	535	"arg_2"	"wrd"	64	0	1	2
3550	536	"res_0"	"wrd"	64	0	0	0
3551	536	"arg_1"	"decimal"	9	0	1	1
3552	536	"arg_2"	"wrd"	64	0	1	2
3553	537	"res_0"	"wrd"	64	0	0	0
3554	537	"arg_1"	"decimal"	19	0	1	1
3555	537	"arg_2"	"wrd"	64	0	1	2
3556	538	"res_0"	"wrd"	64	0	0	0
3557	538	"arg_1"	"real"	24	0	1	1
3558	538	"arg_2"	"wrd"	64	0	1	2
3559	539	"res_0"	"wrd"	64	0	0	0
3560	539	"arg_1"	"double"	53	0	1	1
3561	539	"arg_2"	"wrd"	64	0	1	2
3562	540	"res_0"	"wrd"	64	0	0	0
3563	540	"arg_1"	"month_interval"	32	0	1	1
3564	540	"arg_2"	"wrd"	64	0	1	2
3565	541	"res_0"	"wrd"	64	0	0	0
3566	541	"arg_1"	"sec_interval"	19	0	1	1
3567	541	"arg_2"	"wrd"	64	0	1	2
3568	542	"res_0"	"wrd"	64	0	0	0
3569	542	"arg_1"	"time"	7	0	1	1
3570	542	"arg_2"	"wrd"	64	0	1	2
3571	543	"res_0"	"wrd"	64	0	0	0
3572	543	"arg_1"	"timetz"	7	0	1	1
3573	543	"arg_2"	"wrd"	64	0	1	2
3574	544	"res_0"	"wrd"	64	0	0	0
3575	544	"arg_1"	"date"	0	0	1	1
3576	544	"arg_2"	"wrd"	64	0	1	2
3577	545	"res_0"	"wrd"	64	0	0	0
3578	545	"arg_1"	"timestamp"	7	0	1	1
3579	545	"arg_2"	"wrd"	64	0	1	2
3580	546	"res_0"	"wrd"	64	0	0	0
3581	546	"arg_1"	"timestamptz"	7	0	1	1
3582	546	"arg_2"	"wrd"	64	0	1	2
3583	547	"res_0"	"wrd"	64	0	0	0
3584	547	"arg_1"	"blob"	0	0	1	1
3585	547	"arg_2"	"wrd"	64	0	1	2
3586	548	"res_0"	"decimal"	2	0	0	0
3587	548	"arg_1"	"oid"	63	0	1	1
3588	548	"arg_2"	"decimal"	2	0	1	2
3589	549	"res_0"	"decimal"	2	0	0	0
3590	549	"arg_1"	"tinyint"	8	0	1	1
3591	549	"arg_2"	"decimal"	2	0	1	2
3592	550	"res_0"	"decimal"	2	0	0	0
3593	550	"arg_1"	"smallint"	16	0	1	1
3594	550	"arg_2"	"decimal"	2	0	1	2
3595	551	"res_0"	"decimal"	2	0	0	0
3596	551	"arg_1"	"int"	32	0	1	1
3597	551	"arg_2"	"decimal"	2	0	1	2
3598	552	"res_0"	"decimal"	2	0	0	0
3599	552	"arg_1"	"bigint"	64	0	1	1
3600	552	"arg_2"	"decimal"	2	0	1	2
3601	553	"res_0"	"decimal"	2	0	0	0
3602	553	"arg_1"	"wrd"	64	0	1	1
3603	553	"arg_2"	"decimal"	2	0	1	2
3604	554	"res_0"	"decimal"	2	0	0	0
3605	554	"arg_1"	"decimal"	2	0	1	1
3606	554	"arg_2"	"decimal"	2	0	1	2
3607	555	"res_0"	"decimal"	2	0	0	0
3608	555	"arg_1"	"decimal"	4	0	1	1
3609	555	"arg_2"	"decimal"	2	0	1	2
3610	556	"res_0"	"decimal"	2	0	0	0
3611	556	"arg_1"	"decimal"	9	0	1	1
3612	556	"arg_2"	"decimal"	2	0	1	2
3613	557	"res_0"	"decimal"	2	0	0	0
3614	557	"arg_1"	"decimal"	19	0	1	1
3615	557	"arg_2"	"decimal"	2	0	1	2
3616	558	"res_0"	"decimal"	2	0	0	0
3617	558	"arg_1"	"real"	24	0	1	1
3618	558	"arg_2"	"decimal"	2	0	1	2
3619	559	"res_0"	"decimal"	2	0	0	0
3620	559	"arg_1"	"double"	53	0	1	1
3621	559	"arg_2"	"decimal"	2	0	1	2
3622	560	"res_0"	"decimal"	2	0	0	0
3623	560	"arg_1"	"month_interval"	32	0	1	1
3624	560	"arg_2"	"decimal"	2	0	1	2
3625	561	"res_0"	"decimal"	2	0	0	0
3626	561	"arg_1"	"sec_interval"	19	0	1	1
3627	561	"arg_2"	"decimal"	2	0	1	2
3628	562	"res_0"	"decimal"	2	0	0	0
3629	562	"arg_1"	"time"	7	0	1	1
3630	562	"arg_2"	"decimal"	2	0	1	2
3631	563	"res_0"	"decimal"	2	0	0	0
3632	563	"arg_1"	"timetz"	7	0	1	1
3633	563	"arg_2"	"decimal"	2	0	1	2
3634	564	"res_0"	"decimal"	2	0	0	0
3635	564	"arg_1"	"date"	0	0	1	1
3636	564	"arg_2"	"decimal"	2	0	1	2
3637	565	"res_0"	"decimal"	2	0	0	0
3638	565	"arg_1"	"timestamp"	7	0	1	1
3639	565	"arg_2"	"decimal"	2	0	1	2
3640	566	"res_0"	"decimal"	2	0	0	0
3641	566	"arg_1"	"timestamptz"	7	0	1	1
3642	566	"arg_2"	"decimal"	2	0	1	2
3643	567	"res_0"	"decimal"	2	0	0	0
3644	567	"arg_1"	"blob"	0	0	1	1
3645	567	"arg_2"	"decimal"	2	0	1	2
3646	568	"res_0"	"decimal"	4	0	0	0
3647	568	"arg_1"	"oid"	63	0	1	1
3648	568	"arg_2"	"decimal"	4	0	1	2
3649	569	"res_0"	"decimal"	4	0	0	0
3650	569	"arg_1"	"tinyint"	8	0	1	1
3651	569	"arg_2"	"decimal"	4	0	1	2
3652	570	"res_0"	"decimal"	4	0	0	0
3653	570	"arg_1"	"smallint"	16	0	1	1
3654	570	"arg_2"	"decimal"	4	0	1	2
3655	571	"res_0"	"decimal"	4	0	0	0
3656	571	"arg_1"	"int"	32	0	1	1
3657	571	"arg_2"	"decimal"	4	0	1	2
3658	572	"res_0"	"decimal"	4	0	0	0
3659	572	"arg_1"	"bigint"	64	0	1	1
3660	572	"arg_2"	"decimal"	4	0	1	2
3661	573	"res_0"	"decimal"	4	0	0	0
3662	573	"arg_1"	"wrd"	64	0	1	1
3663	573	"arg_2"	"decimal"	4	0	1	2
3664	574	"res_0"	"decimal"	4	0	0	0
3665	574	"arg_1"	"decimal"	2	0	1	1
3666	574	"arg_2"	"decimal"	4	0	1	2
3667	575	"res_0"	"decimal"	4	0	0	0
3668	575	"arg_1"	"decimal"	4	0	1	1
3669	575	"arg_2"	"decimal"	4	0	1	2
3670	576	"res_0"	"decimal"	4	0	0	0
3671	576	"arg_1"	"decimal"	9	0	1	1
3672	576	"arg_2"	"decimal"	4	0	1	2
3673	577	"res_0"	"decimal"	4	0	0	0
3674	577	"arg_1"	"decimal"	19	0	1	1
3675	577	"arg_2"	"decimal"	4	0	1	2
3676	578	"res_0"	"decimal"	4	0	0	0
3677	578	"arg_1"	"real"	24	0	1	1
3678	578	"arg_2"	"decimal"	4	0	1	2
3679	579	"res_0"	"decimal"	4	0	0	0
3680	579	"arg_1"	"double"	53	0	1	1
3681	579	"arg_2"	"decimal"	4	0	1	2
3682	580	"res_0"	"decimal"	4	0	0	0
3683	580	"arg_1"	"month_interval"	32	0	1	1
3684	580	"arg_2"	"decimal"	4	0	1	2
3685	581	"res_0"	"decimal"	4	0	0	0
3686	581	"arg_1"	"sec_interval"	19	0	1	1
3687	581	"arg_2"	"decimal"	4	0	1	2
3688	582	"res_0"	"decimal"	4	0	0	0
3689	582	"arg_1"	"time"	7	0	1	1
3690	582	"arg_2"	"decimal"	4	0	1	2
3691	583	"res_0"	"decimal"	4	0	0	0
3692	583	"arg_1"	"timetz"	7	0	1	1
3693	583	"arg_2"	"decimal"	4	0	1	2
3694	584	"res_0"	"decimal"	4	0	0	0
3695	584	"arg_1"	"date"	0	0	1	1
3696	584	"arg_2"	"decimal"	4	0	1	2
3697	585	"res_0"	"decimal"	4	0	0	0
3698	585	"arg_1"	"timestamp"	7	0	1	1
3699	585	"arg_2"	"decimal"	4	0	1	2
3700	586	"res_0"	"decimal"	4	0	0	0
3701	586	"arg_1"	"timestamptz"	7	0	1	1
3702	586	"arg_2"	"decimal"	4	0	1	2
3703	587	"res_0"	"decimal"	4	0	0	0
3704	587	"arg_1"	"blob"	0	0	1	1
3705	587	"arg_2"	"decimal"	4	0	1	2
3706	588	"res_0"	"decimal"	9	0	0	0
3707	588	"arg_1"	"oid"	63	0	1	1
3708	588	"arg_2"	"decimal"	9	0	1	2
3709	589	"res_0"	"decimal"	9	0	0	0
3710	589	"arg_1"	"tinyint"	8	0	1	1
3711	589	"arg_2"	"decimal"	9	0	1	2
3712	590	"res_0"	"decimal"	9	0	0	0
3713	590	"arg_1"	"smallint"	16	0	1	1
3714	590	"arg_2"	"decimal"	9	0	1	2
3715	591	"res_0"	"decimal"	9	0	0	0
3716	591	"arg_1"	"int"	32	0	1	1
3717	591	"arg_2"	"decimal"	9	0	1	2
3718	592	"res_0"	"decimal"	9	0	0	0
3719	592	"arg_1"	"bigint"	64	0	1	1
3720	592	"arg_2"	"decimal"	9	0	1	2
3721	593	"res_0"	"decimal"	9	0	0	0
3722	593	"arg_1"	"wrd"	64	0	1	1
3723	593	"arg_2"	"decimal"	9	0	1	2
3724	594	"res_0"	"decimal"	9	0	0	0
3725	594	"arg_1"	"decimal"	2	0	1	1
3726	594	"arg_2"	"decimal"	9	0	1	2
3727	595	"res_0"	"decimal"	9	0	0	0
3728	595	"arg_1"	"decimal"	4	0	1	1
3729	595	"arg_2"	"decimal"	9	0	1	2
3730	596	"res_0"	"decimal"	9	0	0	0
3731	596	"arg_1"	"decimal"	9	0	1	1
3732	596	"arg_2"	"decimal"	9	0	1	2
3733	597	"res_0"	"decimal"	9	0	0	0
3734	597	"arg_1"	"decimal"	19	0	1	1
3735	597	"arg_2"	"decimal"	9	0	1	2
3736	598	"res_0"	"decimal"	9	0	0	0
3737	598	"arg_1"	"real"	24	0	1	1
3738	598	"arg_2"	"decimal"	9	0	1	2
3739	599	"res_0"	"decimal"	9	0	0	0
3740	599	"arg_1"	"double"	53	0	1	1
3741	599	"arg_2"	"decimal"	9	0	1	2
3742	600	"res_0"	"decimal"	9	0	0	0
3743	600	"arg_1"	"month_interval"	32	0	1	1
3744	600	"arg_2"	"decimal"	9	0	1	2
3745	601	"res_0"	"decimal"	9	0	0	0
3746	601	"arg_1"	"sec_interval"	19	0	1	1
3747	601	"arg_2"	"decimal"	9	0	1	2
3748	602	"res_0"	"decimal"	9	0	0	0
3749	602	"arg_1"	"time"	7	0	1	1
3750	602	"arg_2"	"decimal"	9	0	1	2
3751	603	"res_0"	"decimal"	9	0	0	0
3752	603	"arg_1"	"timetz"	7	0	1	1
3753	603	"arg_2"	"decimal"	9	0	1	2
3754	604	"res_0"	"decimal"	9	0	0	0
3755	604	"arg_1"	"date"	0	0	1	1
3756	604	"arg_2"	"decimal"	9	0	1	2
3757	605	"res_0"	"decimal"	9	0	0	0
3758	605	"arg_1"	"timestamp"	7	0	1	1
3759	605	"arg_2"	"decimal"	9	0	1	2
3760	606	"res_0"	"decimal"	9	0	0	0
3761	606	"arg_1"	"timestamptz"	7	0	1	1
3762	606	"arg_2"	"decimal"	9	0	1	2
3763	607	"res_0"	"decimal"	9	0	0	0
3764	607	"arg_1"	"blob"	0	0	1	1
3765	607	"arg_2"	"decimal"	9	0	1	2
3766	608	"res_0"	"decimal"	19	0	0	0
3767	608	"arg_1"	"oid"	63	0	1	1
3768	608	"arg_2"	"decimal"	19	0	1	2
3769	609	"res_0"	"decimal"	19	0	0	0
3770	609	"arg_1"	"tinyint"	8	0	1	1
3771	609	"arg_2"	"decimal"	19	0	1	2
3772	610	"res_0"	"decimal"	19	0	0	0
3773	610	"arg_1"	"smallint"	16	0	1	1
3774	610	"arg_2"	"decimal"	19	0	1	2
3775	611	"res_0"	"decimal"	19	0	0	0
3776	611	"arg_1"	"int"	32	0	1	1
3777	611	"arg_2"	"decimal"	19	0	1	2
3778	612	"res_0"	"decimal"	19	0	0	0
3779	612	"arg_1"	"bigint"	64	0	1	1
3780	612	"arg_2"	"decimal"	19	0	1	2
3781	613	"res_0"	"decimal"	19	0	0	0
3782	613	"arg_1"	"wrd"	64	0	1	1
3783	613	"arg_2"	"decimal"	19	0	1	2
3784	614	"res_0"	"decimal"	19	0	0	0
3785	614	"arg_1"	"decimal"	2	0	1	1
3786	614	"arg_2"	"decimal"	19	0	1	2
3787	615	"res_0"	"decimal"	19	0	0	0
3788	615	"arg_1"	"decimal"	4	0	1	1
3789	615	"arg_2"	"decimal"	19	0	1	2
3790	616	"res_0"	"decimal"	19	0	0	0
3791	616	"arg_1"	"decimal"	9	0	1	1
3792	616	"arg_2"	"decimal"	19	0	1	2
3793	617	"res_0"	"decimal"	19	0	0	0
3794	617	"arg_1"	"decimal"	19	0	1	1
3795	617	"arg_2"	"decimal"	19	0	1	2
3796	618	"res_0"	"decimal"	19	0	0	0
3797	618	"arg_1"	"real"	24	0	1	1
3798	618	"arg_2"	"decimal"	19	0	1	2
3799	619	"res_0"	"decimal"	19	0	0	0
3800	619	"arg_1"	"double"	53	0	1	1
3801	619	"arg_2"	"decimal"	19	0	1	2
3802	620	"res_0"	"decimal"	19	0	0	0
3803	620	"arg_1"	"month_interval"	32	0	1	1
3804	620	"arg_2"	"decimal"	19	0	1	2
3805	621	"res_0"	"decimal"	19	0	0	0
3806	621	"arg_1"	"sec_interval"	19	0	1	1
3807	621	"arg_2"	"decimal"	19	0	1	2
3808	622	"res_0"	"decimal"	19	0	0	0
3809	622	"arg_1"	"time"	7	0	1	1
3810	622	"arg_2"	"decimal"	19	0	1	2
3811	623	"res_0"	"decimal"	19	0	0	0
3812	623	"arg_1"	"timetz"	7	0	1	1
3813	623	"arg_2"	"decimal"	19	0	1	2
3814	624	"res_0"	"decimal"	19	0	0	0
3815	624	"arg_1"	"date"	0	0	1	1
3816	624	"arg_2"	"decimal"	19	0	1	2
3817	625	"res_0"	"decimal"	19	0	0	0
3818	625	"arg_1"	"timestamp"	7	0	1	1
3819	625	"arg_2"	"decimal"	19	0	1	2
3820	626	"res_0"	"decimal"	19	0	0	0
3821	626	"arg_1"	"timestamptz"	7	0	1	1
3822	626	"arg_2"	"decimal"	19	0	1	2
3823	627	"res_0"	"decimal"	19	0	0	0
3824	627	"arg_1"	"blob"	0	0	1	1
3825	627	"arg_2"	"decimal"	19	0	1	2
3826	628	"res_0"	"real"	24	0	0	0
3827	628	"arg_1"	"oid"	63	0	1	1
3828	628	"arg_2"	"real"	24	0	1	2
3829	629	"res_0"	"real"	24	0	0	0
3830	629	"arg_1"	"tinyint"	8	0	1	1
3831	629	"arg_2"	"real"	24	0	1	2
3832	630	"res_0"	"real"	24	0	0	0
3833	630	"arg_1"	"smallint"	16	0	1	1
3834	630	"arg_2"	"real"	24	0	1	2
3835	631	"res_0"	"real"	24	0	0	0
3836	631	"arg_1"	"int"	32	0	1	1
3837	631	"arg_2"	"real"	24	0	1	2
3838	632	"res_0"	"real"	24	0	0	0
3839	632	"arg_1"	"bigint"	64	0	1	1
3840	632	"arg_2"	"real"	24	0	1	2
3841	633	"res_0"	"real"	24	0	0	0
3842	633	"arg_1"	"wrd"	64	0	1	1
3843	633	"arg_2"	"real"	24	0	1	2
3844	634	"res_0"	"real"	24	0	0	0
3845	634	"arg_1"	"decimal"	2	0	1	1
3846	634	"arg_2"	"real"	24	0	1	2
3847	635	"res_0"	"real"	24	0	0	0
3848	635	"arg_1"	"decimal"	4	0	1	1
3849	635	"arg_2"	"real"	24	0	1	2
3850	636	"res_0"	"real"	24	0	0	0
3851	636	"arg_1"	"decimal"	9	0	1	1
3852	636	"arg_2"	"real"	24	0	1	2
3853	637	"res_0"	"real"	24	0	0	0
3854	637	"arg_1"	"decimal"	19	0	1	1
3855	637	"arg_2"	"real"	24	0	1	2
3856	638	"res_0"	"real"	24	0	0	0
3857	638	"arg_1"	"real"	24	0	1	1
3858	638	"arg_2"	"real"	24	0	1	2
3859	639	"res_0"	"real"	24	0	0	0
3860	639	"arg_1"	"double"	53	0	1	1
3861	639	"arg_2"	"real"	24	0	1	2
3862	640	"res_0"	"real"	24	0	0	0
3863	640	"arg_1"	"month_interval"	32	0	1	1
3864	640	"arg_2"	"real"	24	0	1	2
3865	641	"res_0"	"real"	24	0	0	0
3866	641	"arg_1"	"sec_interval"	19	0	1	1
3867	641	"arg_2"	"real"	24	0	1	2
3868	642	"res_0"	"real"	24	0	0	0
3869	642	"arg_1"	"time"	7	0	1	1
3870	642	"arg_2"	"real"	24	0	1	2
3871	643	"res_0"	"real"	24	0	0	0
3872	643	"arg_1"	"timetz"	7	0	1	1
3873	643	"arg_2"	"real"	24	0	1	2
3874	644	"res_0"	"real"	24	0	0	0
3875	644	"arg_1"	"date"	0	0	1	1
3876	644	"arg_2"	"real"	24	0	1	2
3877	645	"res_0"	"real"	24	0	0	0
3878	645	"arg_1"	"timestamp"	7	0	1	1
3879	645	"arg_2"	"real"	24	0	1	2
3880	646	"res_0"	"real"	24	0	0	0
3881	646	"arg_1"	"timestamptz"	7	0	1	1
3882	646	"arg_2"	"real"	24	0	1	2
3883	647	"res_0"	"real"	24	0	0	0
3884	647	"arg_1"	"blob"	0	0	1	1
3885	647	"arg_2"	"real"	24	0	1	2
3886	648	"res_0"	"double"	53	0	0	0
3887	648	"arg_1"	"oid"	63	0	1	1
3888	648	"arg_2"	"double"	53	0	1	2
3889	649	"res_0"	"double"	53	0	0	0
3890	649	"arg_1"	"tinyint"	8	0	1	1
3891	649	"arg_2"	"double"	53	0	1	2
3892	650	"res_0"	"double"	53	0	0	0
3893	650	"arg_1"	"smallint"	16	0	1	1
3894	650	"arg_2"	"double"	53	0	1	2
3895	651	"res_0"	"double"	53	0	0	0
3896	651	"arg_1"	"int"	32	0	1	1
3897	651	"arg_2"	"double"	53	0	1	2
3898	652	"res_0"	"double"	53	0	0	0
3899	652	"arg_1"	"bigint"	64	0	1	1
3900	652	"arg_2"	"double"	53	0	1	2
3901	653	"res_0"	"double"	53	0	0	0
3902	653	"arg_1"	"wrd"	64	0	1	1
3903	653	"arg_2"	"double"	53	0	1	2
3904	654	"res_0"	"double"	53	0	0	0
3905	654	"arg_1"	"decimal"	2	0	1	1
3906	654	"arg_2"	"double"	53	0	1	2
3907	655	"res_0"	"double"	53	0	0	0
3908	655	"arg_1"	"decimal"	4	0	1	1
3909	655	"arg_2"	"double"	53	0	1	2
3910	656	"res_0"	"double"	53	0	0	0
3911	656	"arg_1"	"decimal"	9	0	1	1
3912	656	"arg_2"	"double"	53	0	1	2
3913	657	"res_0"	"double"	53	0	0	0
3914	657	"arg_1"	"decimal"	19	0	1	1
3915	657	"arg_2"	"double"	53	0	1	2
3916	658	"res_0"	"double"	53	0	0	0
3917	658	"arg_1"	"real"	24	0	1	1
3918	658	"arg_2"	"double"	53	0	1	2
3919	659	"res_0"	"double"	53	0	0	0
3920	659	"arg_1"	"double"	53	0	1	1
3921	659	"arg_2"	"double"	53	0	1	2
3922	660	"res_0"	"double"	53	0	0	0
3923	660	"arg_1"	"month_interval"	32	0	1	1
3924	660	"arg_2"	"double"	53	0	1	2
3925	661	"res_0"	"double"	53	0	0	0
3926	661	"arg_1"	"sec_interval"	19	0	1	1
3927	661	"arg_2"	"double"	53	0	1	2
3928	662	"res_0"	"double"	53	0	0	0
3929	662	"arg_1"	"time"	7	0	1	1
3930	662	"arg_2"	"double"	53	0	1	2
3931	663	"res_0"	"double"	53	0	0	0
3932	663	"arg_1"	"timetz"	7	0	1	1
3933	663	"arg_2"	"double"	53	0	1	2
3934	664	"res_0"	"double"	53	0	0	0
3935	664	"arg_1"	"date"	0	0	1	1
3936	664	"arg_2"	"double"	53	0	1	2
3937	665	"res_0"	"double"	53	0	0	0
3938	665	"arg_1"	"timestamp"	7	0	1	1
3939	665	"arg_2"	"double"	53	0	1	2
3940	666	"res_0"	"double"	53	0	0	0
3941	666	"arg_1"	"timestamptz"	7	0	1	1
3942	666	"arg_2"	"double"	53	0	1	2
3943	667	"res_0"	"double"	53	0	0	0
3944	667	"arg_1"	"blob"	0	0	1	1
3945	667	"arg_2"	"double"	53	0	1	2
3946	668	"res_0"	"month_interval"	32	0	0	0
3947	668	"arg_1"	"oid"	63	0	1	1
3948	668	"arg_2"	"month_interval"	32	0	1	2
3949	669	"res_0"	"month_interval"	32	0	0	0
3950	669	"arg_1"	"tinyint"	8	0	1	1
3951	669	"arg_2"	"month_interval"	32	0	1	2
3952	670	"res_0"	"month_interval"	32	0	0	0
3953	670	"arg_1"	"smallint"	16	0	1	1
3954	670	"arg_2"	"month_interval"	32	0	1	2
3955	671	"res_0"	"month_interval"	32	0	0	0
3956	671	"arg_1"	"int"	32	0	1	1
3957	671	"arg_2"	"month_interval"	32	0	1	2
3958	672	"res_0"	"month_interval"	32	0	0	0
3959	672	"arg_1"	"bigint"	64	0	1	1
3960	672	"arg_2"	"month_interval"	32	0	1	2
3961	673	"res_0"	"month_interval"	32	0	0	0
3962	673	"arg_1"	"wrd"	64	0	1	1
3963	673	"arg_2"	"month_interval"	32	0	1	2
3964	674	"res_0"	"month_interval"	32	0	0	0
3965	674	"arg_1"	"decimal"	2	0	1	1
3966	674	"arg_2"	"month_interval"	32	0	1	2
3967	675	"res_0"	"month_interval"	32	0	0	0
3968	675	"arg_1"	"decimal"	4	0	1	1
3969	675	"arg_2"	"month_interval"	32	0	1	2
3970	676	"res_0"	"month_interval"	32	0	0	0
3971	676	"arg_1"	"decimal"	9	0	1	1
3972	676	"arg_2"	"month_interval"	32	0	1	2
3973	677	"res_0"	"month_interval"	32	0	0	0
3974	677	"arg_1"	"decimal"	19	0	1	1
3975	677	"arg_2"	"month_interval"	32	0	1	2
3976	678	"res_0"	"month_interval"	32	0	0	0
3977	678	"arg_1"	"real"	24	0	1	1
3978	678	"arg_2"	"month_interval"	32	0	1	2
3979	679	"res_0"	"month_interval"	32	0	0	0
3980	679	"arg_1"	"double"	53	0	1	1
3981	679	"arg_2"	"month_interval"	32	0	1	2
3982	680	"res_0"	"month_interval"	32	0	0	0
3983	680	"arg_1"	"month_interval"	32	0	1	1
3984	680	"arg_2"	"month_interval"	32	0	1	2
3985	681	"res_0"	"month_interval"	32	0	0	0
3986	681	"arg_1"	"sec_interval"	19	0	1	1
3987	681	"arg_2"	"month_interval"	32	0	1	2
3988	682	"res_0"	"month_interval"	32	0	0	0
3989	682	"arg_1"	"time"	7	0	1	1
3990	682	"arg_2"	"month_interval"	32	0	1	2
3991	683	"res_0"	"month_interval"	32	0	0	0
3992	683	"arg_1"	"timetz"	7	0	1	1
3993	683	"arg_2"	"month_interval"	32	0	1	2
3994	684	"res_0"	"month_interval"	32	0	0	0
3995	684	"arg_1"	"date"	0	0	1	1
3996	684	"arg_2"	"month_interval"	32	0	1	2
3997	685	"res_0"	"month_interval"	32	0	0	0
3998	685	"arg_1"	"timestamp"	7	0	1	1
3999	685	"arg_2"	"month_interval"	32	0	1	2
4000	686	"res_0"	"month_interval"	32	0	0	0
4001	686	"arg_1"	"timestamptz"	7	0	1	1
4002	686	"arg_2"	"month_interval"	32	0	1	2
4003	687	"res_0"	"month_interval"	32	0	0	0
4004	687	"arg_1"	"blob"	0	0	1	1
4005	687	"arg_2"	"month_interval"	32	0	1	2
4006	688	"res_0"	"sec_interval"	19	0	0	0
4007	688	"arg_1"	"oid"	63	0	1	1
4008	688	"arg_2"	"sec_interval"	19	0	1	2
4009	689	"res_0"	"sec_interval"	19	0	0	0
4010	689	"arg_1"	"tinyint"	8	0	1	1
4011	689	"arg_2"	"sec_interval"	19	0	1	2
4012	690	"res_0"	"sec_interval"	19	0	0	0
4013	690	"arg_1"	"smallint"	16	0	1	1
4014	690	"arg_2"	"sec_interval"	19	0	1	2
4015	691	"res_0"	"sec_interval"	19	0	0	0
4016	691	"arg_1"	"int"	32	0	1	1
4017	691	"arg_2"	"sec_interval"	19	0	1	2
4018	692	"res_0"	"sec_interval"	19	0	0	0
4019	692	"arg_1"	"bigint"	64	0	1	1
4020	692	"arg_2"	"sec_interval"	19	0	1	2
4021	693	"res_0"	"sec_interval"	19	0	0	0
4022	693	"arg_1"	"wrd"	64	0	1	1
4023	693	"arg_2"	"sec_interval"	19	0	1	2
4024	694	"res_0"	"sec_interval"	19	0	0	0
4025	694	"arg_1"	"decimal"	2	0	1	1
4026	694	"arg_2"	"sec_interval"	19	0	1	2
4027	695	"res_0"	"sec_interval"	19	0	0	0
4028	695	"arg_1"	"decimal"	4	0	1	1
4029	695	"arg_2"	"sec_interval"	19	0	1	2
4030	696	"res_0"	"sec_interval"	19	0	0	0
4031	696	"arg_1"	"decimal"	9	0	1	1
4032	696	"arg_2"	"sec_interval"	19	0	1	2
4033	697	"res_0"	"sec_interval"	19	0	0	0
4034	697	"arg_1"	"decimal"	19	0	1	1
4035	697	"arg_2"	"sec_interval"	19	0	1	2
4036	698	"res_0"	"sec_interval"	19	0	0	0
4037	698	"arg_1"	"real"	24	0	1	1
4038	698	"arg_2"	"sec_interval"	19	0	1	2
4039	699	"res_0"	"sec_interval"	19	0	0	0
4040	699	"arg_1"	"double"	53	0	1	1
4041	699	"arg_2"	"sec_interval"	19	0	1	2
4042	700	"res_0"	"sec_interval"	19	0	0	0
4043	700	"arg_1"	"month_interval"	32	0	1	1
4044	700	"arg_2"	"sec_interval"	19	0	1	2
4045	701	"res_0"	"sec_interval"	19	0	0	0
4046	701	"arg_1"	"sec_interval"	19	0	1	1
4047	701	"arg_2"	"sec_interval"	19	0	1	2
4048	702	"res_0"	"sec_interval"	19	0	0	0
4049	702	"arg_1"	"time"	7	0	1	1
4050	702	"arg_2"	"sec_interval"	19	0	1	2
4051	703	"res_0"	"sec_interval"	19	0	0	0
4052	703	"arg_1"	"timetz"	7	0	1	1
4053	703	"arg_2"	"sec_interval"	19	0	1	2
4054	704	"res_0"	"sec_interval"	19	0	0	0
4055	704	"arg_1"	"date"	0	0	1	1
4056	704	"arg_2"	"sec_interval"	19	0	1	2
4057	705	"res_0"	"sec_interval"	19	0	0	0
4058	705	"arg_1"	"timestamp"	7	0	1	1
4059	705	"arg_2"	"sec_interval"	19	0	1	2
4060	706	"res_0"	"sec_interval"	19	0	0	0
4061	706	"arg_1"	"timestamptz"	7	0	1	1
4062	706	"arg_2"	"sec_interval"	19	0	1	2
4063	707	"res_0"	"sec_interval"	19	0	0	0
4064	707	"arg_1"	"blob"	0	0	1	1
4065	707	"arg_2"	"sec_interval"	19	0	1	2
4066	708	"res_0"	"time"	7	0	0	0
4067	708	"arg_1"	"oid"	63	0	1	1
4068	708	"arg_2"	"time"	7	0	1	2
4069	709	"res_0"	"time"	7	0	0	0
4070	709	"arg_1"	"tinyint"	8	0	1	1
4071	709	"arg_2"	"time"	7	0	1	2
4072	710	"res_0"	"time"	7	0	0	0
4073	710	"arg_1"	"smallint"	16	0	1	1
4074	710	"arg_2"	"time"	7	0	1	2
4075	711	"res_0"	"time"	7	0	0	0
4076	711	"arg_1"	"int"	32	0	1	1
4077	711	"arg_2"	"time"	7	0	1	2
4078	712	"res_0"	"time"	7	0	0	0
4079	712	"arg_1"	"bigint"	64	0	1	1
4080	712	"arg_2"	"time"	7	0	1	2
4081	713	"res_0"	"time"	7	0	0	0
4082	713	"arg_1"	"wrd"	64	0	1	1
4083	713	"arg_2"	"time"	7	0	1	2
4084	714	"res_0"	"time"	7	0	0	0
4085	714	"arg_1"	"decimal"	2	0	1	1
4086	714	"arg_2"	"time"	7	0	1	2
4087	715	"res_0"	"time"	7	0	0	0
4088	715	"arg_1"	"decimal"	4	0	1	1
4089	715	"arg_2"	"time"	7	0	1	2
4090	716	"res_0"	"time"	7	0	0	0
4091	716	"arg_1"	"decimal"	9	0	1	1
4092	716	"arg_2"	"time"	7	0	1	2
4093	717	"res_0"	"time"	7	0	0	0
4094	717	"arg_1"	"decimal"	19	0	1	1
4095	717	"arg_2"	"time"	7	0	1	2
4096	718	"res_0"	"time"	7	0	0	0
4097	718	"arg_1"	"real"	24	0	1	1
4098	718	"arg_2"	"time"	7	0	1	2
4099	719	"res_0"	"time"	7	0	0	0
4100	719	"arg_1"	"double"	53	0	1	1
4101	719	"arg_2"	"time"	7	0	1	2
4102	720	"res_0"	"time"	7	0	0	0
4103	720	"arg_1"	"month_interval"	32	0	1	1
4104	720	"arg_2"	"time"	7	0	1	2
4105	721	"res_0"	"time"	7	0	0	0
4106	721	"arg_1"	"sec_interval"	19	0	1	1
4107	721	"arg_2"	"time"	7	0	1	2
4108	722	"res_0"	"time"	7	0	0	0
4109	722	"arg_1"	"time"	7	0	1	1
4110	722	"arg_2"	"time"	7	0	1	2
4111	723	"res_0"	"time"	7	0	0	0
4112	723	"arg_1"	"timetz"	7	0	1	1
4113	723	"arg_2"	"time"	7	0	1	2
4114	724	"res_0"	"time"	7	0	0	0
4115	724	"arg_1"	"date"	0	0	1	1
4116	724	"arg_2"	"time"	7	0	1	2
4117	725	"res_0"	"time"	7	0	0	0
4118	725	"arg_1"	"timestamp"	7	0	1	1
4119	725	"arg_2"	"time"	7	0	1	2
4120	726	"res_0"	"time"	7	0	0	0
4121	726	"arg_1"	"timestamptz"	7	0	1	1
4122	726	"arg_2"	"time"	7	0	1	2
4123	727	"res_0"	"time"	7	0	0	0
4124	727	"arg_1"	"blob"	0	0	1	1
4125	727	"arg_2"	"time"	7	0	1	2
4126	728	"res_0"	"timetz"	7	0	0	0
4127	728	"arg_1"	"oid"	63	0	1	1
4128	728	"arg_2"	"timetz"	7	0	1	2
4129	729	"res_0"	"timetz"	7	0	0	0
4130	729	"arg_1"	"tinyint"	8	0	1	1
4131	729	"arg_2"	"timetz"	7	0	1	2
4132	730	"res_0"	"timetz"	7	0	0	0
4133	730	"arg_1"	"smallint"	16	0	1	1
4134	730	"arg_2"	"timetz"	7	0	1	2
4135	731	"res_0"	"timetz"	7	0	0	0
4136	731	"arg_1"	"int"	32	0	1	1
4137	731	"arg_2"	"timetz"	7	0	1	2
4138	732	"res_0"	"timetz"	7	0	0	0
4139	732	"arg_1"	"bigint"	64	0	1	1
4140	732	"arg_2"	"timetz"	7	0	1	2
4141	733	"res_0"	"timetz"	7	0	0	0
4142	733	"arg_1"	"wrd"	64	0	1	1
4143	733	"arg_2"	"timetz"	7	0	1	2
4144	734	"res_0"	"timetz"	7	0	0	0
4145	734	"arg_1"	"decimal"	2	0	1	1
4146	734	"arg_2"	"timetz"	7	0	1	2
4147	735	"res_0"	"timetz"	7	0	0	0
4148	735	"arg_1"	"decimal"	4	0	1	1
4149	735	"arg_2"	"timetz"	7	0	1	2
4150	736	"res_0"	"timetz"	7	0	0	0
4151	736	"arg_1"	"decimal"	9	0	1	1
4152	736	"arg_2"	"timetz"	7	0	1	2
4153	737	"res_0"	"timetz"	7	0	0	0
4154	737	"arg_1"	"decimal"	19	0	1	1
4155	737	"arg_2"	"timetz"	7	0	1	2
4156	738	"res_0"	"timetz"	7	0	0	0
4157	738	"arg_1"	"real"	24	0	1	1
4158	738	"arg_2"	"timetz"	7	0	1	2
4159	739	"res_0"	"timetz"	7	0	0	0
4160	739	"arg_1"	"double"	53	0	1	1
4161	739	"arg_2"	"timetz"	7	0	1	2
4162	740	"res_0"	"timetz"	7	0	0	0
4163	740	"arg_1"	"month_interval"	32	0	1	1
4164	740	"arg_2"	"timetz"	7	0	1	2
4165	741	"res_0"	"timetz"	7	0	0	0
4166	741	"arg_1"	"sec_interval"	19	0	1	1
4167	741	"arg_2"	"timetz"	7	0	1	2
4168	742	"res_0"	"timetz"	7	0	0	0
4169	742	"arg_1"	"time"	7	0	1	1
4170	742	"arg_2"	"timetz"	7	0	1	2
4171	743	"res_0"	"timetz"	7	0	0	0
4172	743	"arg_1"	"timetz"	7	0	1	1
4173	743	"arg_2"	"timetz"	7	0	1	2
4174	744	"res_0"	"timetz"	7	0	0	0
4175	744	"arg_1"	"date"	0	0	1	1
4176	744	"arg_2"	"timetz"	7	0	1	2
4177	745	"res_0"	"timetz"	7	0	0	0
4178	745	"arg_1"	"timestamp"	7	0	1	1
4179	745	"arg_2"	"timetz"	7	0	1	2
4180	746	"res_0"	"timetz"	7	0	0	0
4181	746	"arg_1"	"timestamptz"	7	0	1	1
4182	746	"arg_2"	"timetz"	7	0	1	2
4183	747	"res_0"	"timetz"	7	0	0	0
4184	747	"arg_1"	"blob"	0	0	1	1
4185	747	"arg_2"	"timetz"	7	0	1	2
4186	748	"res_0"	"date"	0	0	0	0
4187	748	"arg_1"	"oid"	63	0	1	1
4188	748	"arg_2"	"date"	0	0	1	2
4189	749	"res_0"	"date"	0	0	0	0
4190	749	"arg_1"	"tinyint"	8	0	1	1
4191	749	"arg_2"	"date"	0	0	1	2
4192	750	"res_0"	"date"	0	0	0	0
4193	750	"arg_1"	"smallint"	16	0	1	1
4194	750	"arg_2"	"date"	0	0	1	2
4195	751	"res_0"	"date"	0	0	0	0
4196	751	"arg_1"	"int"	32	0	1	1
4197	751	"arg_2"	"date"	0	0	1	2
4198	752	"res_0"	"date"	0	0	0	0
4199	752	"arg_1"	"bigint"	64	0	1	1
4200	752	"arg_2"	"date"	0	0	1	2
4201	753	"res_0"	"date"	0	0	0	0
4202	753	"arg_1"	"wrd"	64	0	1	1
4203	753	"arg_2"	"date"	0	0	1	2
4204	754	"res_0"	"date"	0	0	0	0
4205	754	"arg_1"	"decimal"	2	0	1	1
4206	754	"arg_2"	"date"	0	0	1	2
4207	755	"res_0"	"date"	0	0	0	0
4208	755	"arg_1"	"decimal"	4	0	1	1
4209	755	"arg_2"	"date"	0	0	1	2
4210	756	"res_0"	"date"	0	0	0	0
4211	756	"arg_1"	"decimal"	9	0	1	1
4212	756	"arg_2"	"date"	0	0	1	2
4213	757	"res_0"	"date"	0	0	0	0
4214	757	"arg_1"	"decimal"	19	0	1	1
4215	757	"arg_2"	"date"	0	0	1	2
4216	758	"res_0"	"date"	0	0	0	0
4217	758	"arg_1"	"real"	24	0	1	1
4218	758	"arg_2"	"date"	0	0	1	2
4219	759	"res_0"	"date"	0	0	0	0
4220	759	"arg_1"	"double"	53	0	1	1
4221	759	"arg_2"	"date"	0	0	1	2
4222	760	"res_0"	"date"	0	0	0	0
4223	760	"arg_1"	"month_interval"	32	0	1	1
4224	760	"arg_2"	"date"	0	0	1	2
4225	761	"res_0"	"date"	0	0	0	0
4226	761	"arg_1"	"sec_interval"	19	0	1	1
4227	761	"arg_2"	"date"	0	0	1	2
4228	762	"res_0"	"date"	0	0	0	0
4229	762	"arg_1"	"time"	7	0	1	1
4230	762	"arg_2"	"date"	0	0	1	2
4231	763	"res_0"	"date"	0	0	0	0
4232	763	"arg_1"	"timetz"	7	0	1	1
4233	763	"arg_2"	"date"	0	0	1	2
4234	764	"res_0"	"date"	0	0	0	0
4235	764	"arg_1"	"date"	0	0	1	1
4236	764	"arg_2"	"date"	0	0	1	2
4237	765	"res_0"	"date"	0	0	0	0
4238	765	"arg_1"	"timestamp"	7	0	1	1
4239	765	"arg_2"	"date"	0	0	1	2
4240	766	"res_0"	"date"	0	0	0	0
4241	766	"arg_1"	"timestamptz"	7	0	1	1
4242	766	"arg_2"	"date"	0	0	1	2
4243	767	"res_0"	"date"	0	0	0	0
4244	767	"arg_1"	"blob"	0	0	1	1
4245	767	"arg_2"	"date"	0	0	1	2
4246	768	"res_0"	"timestamp"	7	0	0	0
4247	768	"arg_1"	"oid"	63	0	1	1
4248	768	"arg_2"	"timestamp"	7	0	1	2
4249	769	"res_0"	"timestamp"	7	0	0	0
4250	769	"arg_1"	"tinyint"	8	0	1	1
4251	769	"arg_2"	"timestamp"	7	0	1	2
4252	770	"res_0"	"timestamp"	7	0	0	0
4253	770	"arg_1"	"smallint"	16	0	1	1
4254	770	"arg_2"	"timestamp"	7	0	1	2
4255	771	"res_0"	"timestamp"	7	0	0	0
4256	771	"arg_1"	"int"	32	0	1	1
4257	771	"arg_2"	"timestamp"	7	0	1	2
4258	772	"res_0"	"timestamp"	7	0	0	0
4259	772	"arg_1"	"bigint"	64	0	1	1
4260	772	"arg_2"	"timestamp"	7	0	1	2
4261	773	"res_0"	"timestamp"	7	0	0	0
4262	773	"arg_1"	"wrd"	64	0	1	1
4263	773	"arg_2"	"timestamp"	7	0	1	2
4264	774	"res_0"	"timestamp"	7	0	0	0
4265	774	"arg_1"	"decimal"	2	0	1	1
4266	774	"arg_2"	"timestamp"	7	0	1	2
4267	775	"res_0"	"timestamp"	7	0	0	0
4268	775	"arg_1"	"decimal"	4	0	1	1
4269	775	"arg_2"	"timestamp"	7	0	1	2
4270	776	"res_0"	"timestamp"	7	0	0	0
4271	776	"arg_1"	"decimal"	9	0	1	1
4272	776	"arg_2"	"timestamp"	7	0	1	2
4273	777	"res_0"	"timestamp"	7	0	0	0
4274	777	"arg_1"	"decimal"	19	0	1	1
4275	777	"arg_2"	"timestamp"	7	0	1	2
4276	778	"res_0"	"timestamp"	7	0	0	0
4277	778	"arg_1"	"real"	24	0	1	1
4278	778	"arg_2"	"timestamp"	7	0	1	2
4279	779	"res_0"	"timestamp"	7	0	0	0
4280	779	"arg_1"	"double"	53	0	1	1
4281	779	"arg_2"	"timestamp"	7	0	1	2
4282	780	"res_0"	"timestamp"	7	0	0	0
4283	780	"arg_1"	"month_interval"	32	0	1	1
4284	780	"arg_2"	"timestamp"	7	0	1	2
4285	781	"res_0"	"timestamp"	7	0	0	0
4286	781	"arg_1"	"sec_interval"	19	0	1	1
4287	781	"arg_2"	"timestamp"	7	0	1	2
4288	782	"res_0"	"timestamp"	7	0	0	0
4289	782	"arg_1"	"time"	7	0	1	1
4290	782	"arg_2"	"timestamp"	7	0	1	2
4291	783	"res_0"	"timestamp"	7	0	0	0
4292	783	"arg_1"	"timetz"	7	0	1	1
4293	783	"arg_2"	"timestamp"	7	0	1	2
4294	784	"res_0"	"timestamp"	7	0	0	0
4295	784	"arg_1"	"date"	0	0	1	1
4296	784	"arg_2"	"timestamp"	7	0	1	2
4297	785	"res_0"	"timestamp"	7	0	0	0
4298	785	"arg_1"	"timestamp"	7	0	1	1
4299	785	"arg_2"	"timestamp"	7	0	1	2
4300	786	"res_0"	"timestamp"	7	0	0	0
4301	786	"arg_1"	"timestamptz"	7	0	1	1
4302	786	"arg_2"	"timestamp"	7	0	1	2
4303	787	"res_0"	"timestamp"	7	0	0	0
4304	787	"arg_1"	"blob"	0	0	1	1
4305	787	"arg_2"	"timestamp"	7	0	1	2
4306	788	"res_0"	"timestamptz"	7	0	0	0
4307	788	"arg_1"	"oid"	63	0	1	1
4308	788	"arg_2"	"timestamptz"	7	0	1	2
4309	789	"res_0"	"timestamptz"	7	0	0	0
4310	789	"arg_1"	"tinyint"	8	0	1	1
4311	789	"arg_2"	"timestamptz"	7	0	1	2
4312	790	"res_0"	"timestamptz"	7	0	0	0
4313	790	"arg_1"	"smallint"	16	0	1	1
4314	790	"arg_2"	"timestamptz"	7	0	1	2
4315	791	"res_0"	"timestamptz"	7	0	0	0
4316	791	"arg_1"	"int"	32	0	1	1
4317	791	"arg_2"	"timestamptz"	7	0	1	2
4318	792	"res_0"	"timestamptz"	7	0	0	0
4319	792	"arg_1"	"bigint"	64	0	1	1
4320	792	"arg_2"	"timestamptz"	7	0	1	2
4321	793	"res_0"	"timestamptz"	7	0	0	0
4322	793	"arg_1"	"wrd"	64	0	1	1
4323	793	"arg_2"	"timestamptz"	7	0	1	2
4324	794	"res_0"	"timestamptz"	7	0	0	0
4325	794	"arg_1"	"decimal"	2	0	1	1
4326	794	"arg_2"	"timestamptz"	7	0	1	2
4327	795	"res_0"	"timestamptz"	7	0	0	0
4328	795	"arg_1"	"decimal"	4	0	1	1
4329	795	"arg_2"	"timestamptz"	7	0	1	2
4330	796	"res_0"	"timestamptz"	7	0	0	0
4331	796	"arg_1"	"decimal"	9	0	1	1
4332	796	"arg_2"	"timestamptz"	7	0	1	2
4333	797	"res_0"	"timestamptz"	7	0	0	0
4334	797	"arg_1"	"decimal"	19	0	1	1
4335	797	"arg_2"	"timestamptz"	7	0	1	2
4336	798	"res_0"	"timestamptz"	7	0	0	0
4337	798	"arg_1"	"real"	24	0	1	1
4338	798	"arg_2"	"timestamptz"	7	0	1	2
4339	799	"res_0"	"timestamptz"	7	0	0	0
4340	799	"arg_1"	"double"	53	0	1	1
4341	799	"arg_2"	"timestamptz"	7	0	1	2
4342	800	"res_0"	"timestamptz"	7	0	0	0
4343	800	"arg_1"	"month_interval"	32	0	1	1
4344	800	"arg_2"	"timestamptz"	7	0	1	2
4345	801	"res_0"	"timestamptz"	7	0	0	0
4346	801	"arg_1"	"sec_interval"	19	0	1	1
4347	801	"arg_2"	"timestamptz"	7	0	1	2
4348	802	"res_0"	"timestamptz"	7	0	0	0
4349	802	"arg_1"	"time"	7	0	1	1
4350	802	"arg_2"	"timestamptz"	7	0	1	2
4351	803	"res_0"	"timestamptz"	7	0	0	0
4352	803	"arg_1"	"timetz"	7	0	1	1
4353	803	"arg_2"	"timestamptz"	7	0	1	2
4354	804	"res_0"	"timestamptz"	7	0	0	0
4355	804	"arg_1"	"date"	0	0	1	1
4356	804	"arg_2"	"timestamptz"	7	0	1	2
4357	805	"res_0"	"timestamptz"	7	0	0	0
4358	805	"arg_1"	"timestamp"	7	0	1	1
4359	805	"arg_2"	"timestamptz"	7	0	1	2
4360	806	"res_0"	"timestamptz"	7	0	0	0
4361	806	"arg_1"	"timestamptz"	7	0	1	1
4362	806	"arg_2"	"timestamptz"	7	0	1	2
4363	807	"res_0"	"timestamptz"	7	0	0	0
4364	807	"arg_1"	"blob"	0	0	1	1
4365	807	"arg_2"	"timestamptz"	7	0	1	2
4366	808	"res_0"	"blob"	0	0	0	0
4367	808	"arg_1"	"oid"	63	0	1	1
4368	808	"arg_2"	"blob"	0	0	1	2
4369	809	"res_0"	"blob"	0	0	0	0
4370	809	"arg_1"	"tinyint"	8	0	1	1
4371	809	"arg_2"	"blob"	0	0	1	2
4372	810	"res_0"	"blob"	0	0	0	0
4373	810	"arg_1"	"smallint"	16	0	1	1
4374	810	"arg_2"	"blob"	0	0	1	2
4375	811	"res_0"	"blob"	0	0	0	0
4376	811	"arg_1"	"int"	32	0	1	1
4377	811	"arg_2"	"blob"	0	0	1	2
4378	812	"res_0"	"blob"	0	0	0	0
4379	812	"arg_1"	"bigint"	64	0	1	1
4380	812	"arg_2"	"blob"	0	0	1	2
4381	813	"res_0"	"blob"	0	0	0	0
4382	813	"arg_1"	"wrd"	64	0	1	1
4383	813	"arg_2"	"blob"	0	0	1	2
4384	814	"res_0"	"blob"	0	0	0	0
4385	814	"arg_1"	"decimal"	2	0	1	1
4386	814	"arg_2"	"blob"	0	0	1	2
4387	815	"res_0"	"blob"	0	0	0	0
4388	815	"arg_1"	"decimal"	4	0	1	1
4389	815	"arg_2"	"blob"	0	0	1	2
4390	816	"res_0"	"blob"	0	0	0	0
4391	816	"arg_1"	"decimal"	9	0	1	1
4392	816	"arg_2"	"blob"	0	0	1	2
4393	817	"res_0"	"blob"	0	0	0	0
4394	817	"arg_1"	"decimal"	19	0	1	1
4395	817	"arg_2"	"blob"	0	0	1	2
4396	818	"res_0"	"blob"	0	0	0	0
4397	818	"arg_1"	"real"	24	0	1	1
4398	818	"arg_2"	"blob"	0	0	1	2
4399	819	"res_0"	"blob"	0	0	0	0
4400	819	"arg_1"	"double"	53	0	1	1
4401	819	"arg_2"	"blob"	0	0	1	2
4402	820	"res_0"	"blob"	0	0	0	0
4403	820	"arg_1"	"month_interval"	32	0	1	1
4404	820	"arg_2"	"blob"	0	0	1	2
4405	821	"res_0"	"blob"	0	0	0	0
4406	821	"arg_1"	"sec_interval"	19	0	1	1
4407	821	"arg_2"	"blob"	0	0	1	2
4408	822	"res_0"	"blob"	0	0	0	0
4409	822	"arg_1"	"time"	7	0	1	1
4410	822	"arg_2"	"blob"	0	0	1	2
4411	823	"res_0"	"blob"	0	0	0	0
4412	823	"arg_1"	"timetz"	7	0	1	1
4413	823	"arg_2"	"blob"	0	0	1	2
4414	824	"res_0"	"blob"	0	0	0	0
4415	824	"arg_1"	"date"	0	0	1	1
4416	824	"arg_2"	"blob"	0	0	1	2
4417	825	"res_0"	"blob"	0	0	0	0
4418	825	"arg_1"	"timestamp"	7	0	1	1
4419	825	"arg_2"	"blob"	0	0	1	2
4420	826	"res_0"	"blob"	0	0	0	0
4421	826	"arg_1"	"timestamptz"	7	0	1	1
4422	826	"arg_2"	"blob"	0	0	1	2
4423	827	"res_0"	"blob"	0	0	0	0
4424	827	"arg_1"	"blob"	0	0	1	1
4425	827	"arg_2"	"blob"	0	0	1	2
4426	828	"res_0"	"real"	24	0	0	0
4427	828	"arg_1"	"real"	24	0	1	1
4428	828	"arg_2"	"real"	24	0	1	2
4429	829	"res_0"	"real"	24	0	0	0
4430	829	"arg_1"	"real"	24	0	1	1
4431	830	"res_0"	"real"	24	0	0	0
4432	830	"arg_1"	"real"	24	0	1	1
4433	831	"res_0"	"real"	24	0	0	0
4434	831	"arg_1"	"real"	24	0	1	1
4435	832	"res_0"	"real"	24	0	0	0
4436	832	"arg_1"	"real"	24	0	1	1
4437	833	"res_0"	"real"	24	0	0	0
4438	833	"arg_1"	"real"	24	0	1	1
4439	834	"res_0"	"real"	24	0	0	0
4440	834	"arg_1"	"real"	24	0	1	1
4441	835	"res_0"	"real"	24	0	0	0
4442	835	"arg_1"	"real"	24	0	1	1
4443	836	"res_0"	"real"	24	0	0	0
4444	836	"arg_1"	"real"	24	0	1	1
4445	837	"res_0"	"real"	24	0	0	0
4446	837	"arg_1"	"real"	24	0	1	1
4447	838	"res_0"	"real"	24	0	0	0
4448	838	"arg_1"	"real"	24	0	1	1
4449	838	"arg_2"	"real"	24	0	1	2
4450	839	"res_0"	"real"	24	0	0	0
4451	839	"arg_1"	"real"	24	0	1	1
4452	840	"res_0"	"real"	24	0	0	0
4453	840	"arg_1"	"real"	24	0	1	1
4454	841	"res_0"	"real"	24	0	0	0
4455	841	"arg_1"	"real"	24	0	1	1
4456	842	"res_0"	"real"	24	0	0	0
4457	842	"arg_1"	"real"	24	0	1	1
4458	843	"res_0"	"real"	24	0	0	0
4459	843	"arg_1"	"real"	24	0	1	1
4460	844	"res_0"	"real"	24	0	0	0
4461	844	"arg_1"	"real"	24	0	1	1
4462	845	"res_0"	"real"	24	0	0	0
4463	845	"arg_1"	"real"	24	0	1	1
4464	846	"res_0"	"real"	24	0	0	0
4465	846	"arg_1"	"real"	24	0	1	1
4466	847	"res_0"	"double"	53	0	0	0
4467	847	"arg_1"	"double"	53	0	1	1
4468	847	"arg_2"	"double"	53	0	1	2
4469	848	"res_0"	"double"	53	0	0	0
4470	848	"arg_1"	"double"	53	0	1	1
4471	849	"res_0"	"double"	53	0	0	0
4472	849	"arg_1"	"double"	53	0	1	1
4473	850	"res_0"	"double"	53	0	0	0
4474	850	"arg_1"	"double"	53	0	1	1
4475	851	"res_0"	"double"	53	0	0	0
4476	851	"arg_1"	"double"	53	0	1	1
4477	852	"res_0"	"double"	53	0	0	0
4478	852	"arg_1"	"double"	53	0	1	1
4479	853	"res_0"	"double"	53	0	0	0
4480	853	"arg_1"	"double"	53	0	1	1
4481	854	"res_0"	"double"	53	0	0	0
4482	854	"arg_1"	"double"	53	0	1	1
4483	855	"res_0"	"double"	53	0	0	0
4484	855	"arg_1"	"double"	53	0	1	1
4485	856	"res_0"	"double"	53	0	0	0
4486	856	"arg_1"	"double"	53	0	1	1
4487	857	"res_0"	"double"	53	0	0	0
4488	857	"arg_1"	"double"	53	0	1	1
4489	857	"arg_2"	"double"	53	0	1	2
4490	858	"res_0"	"double"	53	0	0	0
4491	858	"arg_1"	"double"	53	0	1	1
4492	859	"res_0"	"double"	53	0	0	0
4493	859	"arg_1"	"double"	53	0	1	1
4494	860	"res_0"	"double"	53	0	0	0
4495	860	"arg_1"	"double"	53	0	1	1
4496	861	"res_0"	"double"	53	0	0	0
4497	861	"arg_1"	"double"	53	0	1	1
4498	862	"res_0"	"double"	53	0	0	0
4499	862	"arg_1"	"double"	53	0	1	1
4500	863	"res_0"	"double"	53	0	0	0
4501	863	"arg_1"	"double"	53	0	1	1
4502	864	"res_0"	"double"	53	0	0	0
4503	864	"arg_1"	"double"	53	0	1	1
4504	865	"res_0"	"double"	53	0	0	0
4505	865	"arg_1"	"double"	53	0	1	1
4506	866	"res_0"	"double"	53	0	0	0
4507	867	"res_0"	"int"	32	0	0	0
4508	868	"res_0"	"int"	32	0	0	0
4509	868	"arg_1"	"int"	32	0	1	1
4510	869	"res_0"	"date"	0	0	0	0
4511	870	"res_0"	"date"	0	0	0	0
4512	871	"res_0"	"timetz"	7	0	0	0
4513	872	"res_0"	"timetz"	7	0	0	0
4514	873	"res_0"	"timestamptz"	7	0	0	0
4515	874	"res_0"	"time"	7	0	0	0
4516	875	"res_0"	"timestamp"	7	0	0	0
4517	876	"res_0"	"month_interval"	32	0	0	0
4518	876	"arg_1"	"date"	0	0	1	1
4519	876	"arg_2"	"date"	0	0	1	2
4520	877	"res_0"	"sec_interval"	19	0	0	0
4521	877	"arg_1"	"timetz"	7	0	1	1
4522	877	"arg_2"	"timetz"	7	0	1	2
4523	878	"res_0"	"sec_interval"	19	0	0	0
4524	878	"arg_1"	"time"	7	0	1	1
4525	878	"arg_2"	"time"	7	0	1	2
4526	879	"res_0"	"sec_interval"	19	0	0	0
4527	879	"arg_1"	"timestamptz"	7	0	1	1
4528	879	"arg_2"	"timestamptz"	7	0	1	2
4529	880	"res_0"	"sec_interval"	19	0	0	0
4530	880	"arg_1"	"timestamp"	7	0	1	1
4531	880	"arg_2"	"timestamp"	7	0	1	2
4532	881	"res_0"	"date"	0	0	0	0
4533	881	"arg_1"	"date"	0	0	1	1
4534	881	"arg_2"	"sec_interval"	19	0	1	2
4535	882	"res_0"	"date"	0	0	0	0
4536	882	"arg_1"	"date"	0	0	1	1
4537	882	"arg_2"	"month_interval"	32	0	1	2
4538	883	"res_0"	"time"	7	0	0	0
4539	883	"arg_1"	"time"	7	0	1	1
4540	883	"arg_2"	"sec_interval"	19	0	1	2
4541	884	"res_0"	"timetz"	7	0	0	0
4542	884	"arg_1"	"timetz"	7	0	1	1
4543	884	"arg_2"	"sec_interval"	19	0	1	2
4544	885	"res_0"	"timestamp"	7	0	0	0
4545	885	"arg_1"	"timestamp"	7	0	1	1
4546	885	"arg_2"	"sec_interval"	19	0	1	2
4547	886	"res_0"	"timestamp"	7	0	0	0
4548	886	"arg_1"	"timestamp"	7	0	1	1
4549	886	"arg_2"	"month_interval"	32	0	1	2
4550	887	"res_0"	"timestamptz"	7	0	0	0
4551	887	"arg_1"	"timestamptz"	7	0	1	1
4552	887	"arg_2"	"sec_interval"	19	0	1	2
4553	888	"res_0"	"timestamptz"	7	0	0	0
4554	888	"arg_1"	"timestamptz"	7	0	1	1
4555	888	"arg_2"	"month_interval"	32	0	1	2
4556	889	"res_0"	"date"	0	0	0	0
4557	889	"arg_1"	"date"	0	0	1	1
4558	889	"arg_2"	"sec_interval"	19	0	1	2
4559	890	"res_0"	"date"	0	0	0	0
4560	890	"arg_1"	"date"	0	0	1	1
4561	890	"arg_2"	"month_interval"	32	0	1	2
4562	891	"res_0"	"timestamp"	7	0	0	0
4563	891	"arg_1"	"timestamp"	7	0	1	1
4564	891	"arg_2"	"sec_interval"	19	0	1	2
4565	892	"res_0"	"timestamp"	7	0	0	0
4566	892	"arg_1"	"timestamp"	7	0	1	1
4567	892	"arg_2"	"month_interval"	32	0	1	2
4568	893	"res_0"	"timestamptz"	7	0	0	0
4569	893	"arg_1"	"timestamptz"	7	0	1	1
4570	893	"arg_2"	"sec_interval"	19	0	1	2
4571	894	"res_0"	"timestamptz"	7	0	0	0
4572	894	"arg_1"	"timestamptz"	7	0	1	1
4573	894	"arg_2"	"month_interval"	32	0	1	2
4574	895	"res_0"	"time"	7	0	0	0
4575	895	"arg_1"	"time"	7	0	1	1
4576	895	"arg_2"	"sec_interval"	19	0	1	2
4577	896	"res_0"	"timetz"	7	0	0	0
4578	896	"arg_1"	"timetz"	7	0	1	1
4579	896	"arg_2"	"sec_interval"	19	0	1	2
4580	897	"res_0"	"sec_interval"	19	0	0	0
4581	898	"res_0"	"int"	32	0	0	0
4582	898	"arg_1"	"date"	0	0	1	1
4583	899	"res_0"	"int"	32	0	0	0
4584	899	"arg_1"	"date"	0	0	1	1
4585	900	"res_0"	"int"	32	0	0	0
4586	900	"arg_1"	"date"	0	0	1	1
4587	901	"res_0"	"int"	32	0	0	0
4588	901	"arg_1"	"time"	7	0	1	1
4589	902	"res_0"	"int"	32	0	0	0
4590	902	"arg_1"	"time"	7	0	1	1
4591	903	"res_0"	"decimal"	9	3	0	0
4592	903	"arg_1"	"time"	7	0	1	1
4593	904	"res_0"	"int"	32	0	0	0
4594	904	"arg_1"	"timetz"	7	0	1	1
4595	905	"res_0"	"int"	32	0	0	0
4596	905	"arg_1"	"timetz"	7	0	1	1
4597	906	"res_0"	"decimal"	9	3	0	0
4598	906	"arg_1"	"timetz"	7	0	1	1
4599	907	"res_0"	"int"	32	0	0	0
4600	907	"arg_1"	"timestamp"	7	0	1	1
4601	908	"res_0"	"int"	32	0	0	0
4602	908	"arg_1"	"timestamp"	7	0	1	1
4603	909	"res_0"	"int"	32	0	0	0
4604	909	"arg_1"	"timestamp"	7	0	1	1
4605	910	"res_0"	"int"	32	0	0	0
4606	910	"arg_1"	"timestamp"	7	0	1	1
4607	911	"res_0"	"int"	32	0	0	0
4608	911	"arg_1"	"timestamp"	7	0	1	1
4609	912	"res_0"	"decimal"	9	3	0	0
4610	912	"arg_1"	"timestamp"	7	0	1	1
4611	913	"res_0"	"int"	32	0	0	0
4612	913	"arg_1"	"timestamptz"	7	0	1	1
4613	914	"res_0"	"int"	32	0	0	0
4614	914	"arg_1"	"timestamptz"	7	0	1	1
4615	915	"res_0"	"int"	32	0	0	0
4616	915	"arg_1"	"timestamptz"	7	0	1	1
4617	916	"res_0"	"int"	32	0	0	0
4618	916	"arg_1"	"timestamptz"	7	0	1	1
4619	917	"res_0"	"int"	32	0	0	0
4620	917	"arg_1"	"timestamptz"	7	0	1	1
4621	918	"res_0"	"decimal"	9	3	0	0
4622	918	"arg_1"	"timestamptz"	7	0	1	1
4623	919	"res_0"	"int"	32	0	0	0
4624	919	"arg_1"	"month_interval"	32	0	1	1
4625	920	"res_0"	"int"	32	0	0	0
4626	920	"arg_1"	"month_interval"	32	0	1	1
4627	921	"res_0"	"bigint"	64	0	0	0
4628	921	"arg_1"	"sec_interval"	19	0	1	1
4629	922	"res_0"	"int"	32	0	0	0
4630	922	"arg_1"	"sec_interval"	19	0	1	1
4631	923	"res_0"	"int"	32	0	0	0
4632	923	"arg_1"	"sec_interval"	19	0	1	1
4633	924	"res_0"	"int"	32	0	0	0
4634	924	"arg_1"	"sec_interval"	19	0	1	1
4635	925	"res_0"	"int"	32	0	0	0
4636	925	"arg_1"	"date"	0	0	1	1
4637	926	"res_0"	"int"	32	0	0	0
4638	926	"arg_1"	"date"	0	0	1	1
4639	927	"res_0"	"int"	32	0	0	0
4640	927	"arg_1"	"date"	0	0	1	1
4641	928	"res_0"	"int"	32	0	0	0
4642	928	"arg_1"	"date"	0	0	1	1
4643	929	"res_0"	"int"	32	0	0	0
4644	929	"arg_1"	"date"	0	0	1	1
4645	930	"res_0"	"bigint"	64	0	0	0
4646	930	"arg_1"	"varchar"	0	0	1	1
4647	930	"arg_2"	"varchar"	0	0	1	2
4648	931	"res_0"	"bigint"	64	0	0	0
4649	931	"arg_1"	"varchar"	0	0	1	1
4650	931	"arg_2"	"varchar"	0	0	1	2
4651	932	"res_0"	"bigint"	64	0	0	0
4652	932	"arg_1"	"varchar"	0	0	1	1
4653	932	"arg_2"	"varchar"	0	0	1	2
4654	932	"arg_3"	"bigint"	64	0	1	3
4655	933	"res_0"	"tinyint"	8	0	0	0
4656	933	"arg_1"	"char"	0	0	1	1
4657	933	"arg_2"	"boolean"	1	0	1	2
4658	934	"res_0"	"smallint"	16	0	0	0
4659	934	"arg_1"	"char"	0	0	1	1
4660	934	"arg_2"	"boolean"	1	0	1	2
4661	935	"res_0"	"int"	32	0	0	0
4662	935	"arg_1"	"char"	0	0	1	1
4663	935	"arg_2"	"boolean"	1	0	1	2
4664	936	"res_0"	"char"	0	0	0	0
4665	936	"arg_1"	"char"	0	0	1	1
4666	937	"res_0"	"int"	32	0	0	0
4667	937	"arg_1"	"char"	0	0	1	1
4668	937	"arg_2"	"char"	0	0	1	2
4669	938	"res_0"	"int"	32	0	0	0
4670	938	"arg_1"	"char"	0	0	1	1
4671	938	"arg_2"	"char"	0	0	1	2
4672	938	"arg_3"	"int"	32	0	1	3
4673	939	"res_0"	"char"	0	0	0	0
4674	939	"arg_1"	"char"	0	0	1	1
4675	939	"arg_2"	"int"	32	0	1	2
4676	940	"res_0"	"char"	0	0	0	0
4677	940	"arg_1"	"char"	0	0	1	1
4678	940	"arg_2"	"int"	32	0	1	2
4679	940	"arg_3"	"int"	32	0	1	3
4680	941	"res_0"	"boolean"	1	0	0	0
4681	941	"arg_1"	"char"	0	0	1	1
4682	941	"arg_2"	"char"	0	0	1	2
4683	942	"res_0"	"boolean"	1	0	0	0
4684	942	"arg_1"	"char"	0	0	1	1
4685	942	"arg_2"	"char"	0	0	1	2
4686	942	"arg_3"	"char"	0	0	1	3
4687	943	"res_0"	"boolean"	1	0	0	0
4688	943	"arg_1"	"char"	0	0	1	1
4689	943	"arg_2"	"char"	0	0	1	2
4690	944	"res_0"	"boolean"	1	0	0	0
4691	944	"arg_1"	"char"	0	0	1	1
4692	944	"arg_2"	"char"	0	0	1	2
4693	944	"arg_3"	"char"	0	0	1	3
4694	945	"res_0"	"boolean"	1	0	0	0
4695	945	"arg_1"	"char"	0	0	1	1
4696	945	"arg_2"	"char"	0	0	1	2
4697	946	"res_0"	"boolean"	1	0	0	0
4698	946	"arg_1"	"char"	0	0	1	1
4699	946	"arg_2"	"char"	0	0	1	2
4700	946	"arg_3"	"char"	0	0	1	3
4701	947	"res_0"	"boolean"	1	0	0	0
4702	947	"arg_1"	"char"	0	0	1	1
4703	947	"arg_2"	"char"	0	0	1	2
4704	948	"res_0"	"boolean"	1	0	0	0
4705	948	"arg_1"	"char"	0	0	1	1
4706	948	"arg_2"	"char"	0	0	1	2
4707	948	"arg_3"	"char"	0	0	1	3
4708	949	"res_0"	"int"	32	0	0	0
4709	949	"arg_1"	"char"	0	0	1	1
4710	949	"arg_2"	"char"	0	0	1	2
4711	950	"res_0"	"char"	0	0	0	0
4712	950	"arg_1"	"char"	0	0	1	1
4713	950	"arg_2"	"int"	32	0	1	2
4714	951	"res_0"	"char"	0	0	0	0
4715	951	"arg_1"	"char"	0	0	1	1
4716	951	"arg_2"	"char"	0	0	1	2
4717	952	"res_0"	"int"	32	0	0	0
4718	952	"arg_1"	"char"	0	0	1	1
4719	953	"res_0"	"char"	0	0	0	0
4720	953	"arg_1"	"int"	32	0	1	1
4721	954	"res_0"	"int"	32	0	0	0
4722	954	"arg_1"	"char"	0	0	1	1
4723	955	"res_0"	"char"	0	0	0	0
4724	955	"arg_1"	"char"	0	0	1	1
4725	955	"arg_2"	"int"	32	0	1	2
4726	956	"res_0"	"char"	0	0	0	0
4727	956	"arg_1"	"char"	0	0	1	1
4728	956	"arg_2"	"int"	32	0	1	2
4729	957	"res_0"	"char"	0	0	0	0
4730	957	"arg_1"	"char"	0	0	1	1
4731	958	"res_0"	"char"	0	0	0	0
4732	958	"arg_1"	"char"	0	0	1	1
4733	959	"res_0"	"char"	0	0	0	0
4734	959	"arg_1"	"char"	0	0	1	1
4735	960	"res_0"	"char"	0	0	0	0
4736	960	"arg_1"	"char"	0	0	1	1
4737	961	"res_0"	"char"	0	0	0	0
4738	961	"arg_1"	"char"	0	0	1	1
4739	962	"res_0"	"char"	0	0	0	0
4740	962	"arg_1"	"char"	0	0	1	1
4741	962	"arg_2"	"char"	0	0	1	2
4742	963	"res_0"	"char"	0	0	0	0
4743	963	"arg_1"	"char"	0	0	1	1
4744	964	"res_0"	"char"	0	0	0	0
4745	964	"arg_1"	"char"	0	0	1	1
4746	964	"arg_2"	"char"	0	0	1	2
4747	965	"res_0"	"char"	0	0	0	0
4748	965	"arg_1"	"char"	0	0	1	1
4749	966	"res_0"	"char"	0	0	0	0
4750	966	"arg_1"	"char"	0	0	1	1
4751	966	"arg_2"	"char"	0	0	1	2
4752	967	"res_0"	"char"	0	0	0	0
4753	967	"arg_1"	"char"	0	0	1	1
4754	967	"arg_2"	"int"	32	0	1	2
4755	968	"res_0"	"char"	0	0	0	0
4756	968	"arg_1"	"char"	0	0	1	1
4757	968	"arg_2"	"int"	32	0	1	2
4758	968	"arg_3"	"char"	0	0	1	3
4759	969	"res_0"	"char"	0	0	0	0
4760	969	"arg_1"	"char"	0	0	1	1
4761	969	"arg_2"	"int"	32	0	1	2
4762	970	"res_0"	"char"	0	0	0	0
4763	970	"arg_1"	"char"	0	0	1	1
4764	970	"arg_2"	"int"	32	0	1	2
4765	970	"arg_3"	"char"	0	0	1	3
4766	971	"res_0"	"char"	0	0	0	0
4767	971	"arg_1"	"char"	0	0	1	1
4768	971	"arg_2"	"int"	32	0	1	2
4769	971	"arg_3"	"int"	32	0	1	3
4770	971	"arg_4"	"char"	0	0	1	4
4771	972	"res_0"	"char"	0	0	0	0
4772	972	"arg_1"	"char"	0	0	1	1
4773	972	"arg_2"	"char"	0	0	1	2
4774	972	"arg_3"	"char"	0	0	1	3
4775	973	"res_0"	"char"	0	0	0	0
4776	973	"arg_1"	"char"	0	0	1	1
4777	973	"arg_2"	"int"	32	0	1	2
4778	974	"res_0"	"char"	0	0	0	0
4779	974	"arg_1"	"int"	32	0	1	1
4780	975	"res_0"	"int"	32	0	0	0
4781	975	"arg_1"	"char"	0	0	1	1
4782	976	"res_0"	"int"	32	0	0	0
4783	976	"arg_1"	"char"	0	0	1	1
4784	977	"res_0"	"int"	32	0	0	0
4785	977	"arg_1"	"char"	0	0	1	1
4786	978	"res_0"	"char"	0	0	0	0
4787	978	"arg_1"	"char"	0	0	1	1
4788	979	"res_0"	"int"	32	0	0	0
4789	979	"arg_1"	"char"	0	0	1	1
4790	979	"arg_2"	"char"	0	0	1	2
4791	980	"res_0"	"int"	32	0	0	0
4792	980	"arg_1"	"char"	0	0	1	1
4793	980	"arg_2"	"char"	0	0	1	2
4794	981	"res_0"	"int"	32	0	0	0
4795	981	"arg_1"	"char"	0	0	1	1
4796	981	"arg_2"	"char"	0	0	1	2
4797	982	"res_0"	"double"	53	0	0	0
4798	982	"arg_1"	"char"	0	0	1	1
4799	982	"arg_2"	"char"	0	0	1	2
4800	983	"res_0"	"char"	0	0	0	0
4801	983	"arg_1"	"char"	0	0	1	1
4802	984	"res_0"	"int"	32	0	0	0
4803	984	"arg_1"	"char"	0	0	1	1
4804	984	"arg_2"	"char"	0	0	1	2
4805	985	"res_0"	"int"	32	0	0	0
4806	985	"arg_1"	"char"	0	0	1	1
4807	985	"arg_2"	"char"	0	0	1	2
4808	985	"arg_3"	"int"	32	0	1	3
4809	985	"arg_4"	"int"	32	0	1	4
4810	985	"arg_5"	"int"	32	0	1	5
4811	986	"res_0"	"tinyint"	8	0	0	0
4812	986	"arg_1"	"varchar"	0	0	1	1
4813	986	"arg_2"	"boolean"	1	0	1	2
4814	987	"res_0"	"smallint"	16	0	0	0
4815	987	"arg_1"	"varchar"	0	0	1	1
4816	987	"arg_2"	"boolean"	1	0	1	2
4817	988	"res_0"	"int"	32	0	0	0
4818	988	"arg_1"	"varchar"	0	0	1	1
4819	988	"arg_2"	"boolean"	1	0	1	2
4820	989	"res_0"	"varchar"	0	0	0	0
4821	989	"arg_1"	"varchar"	0	0	1	1
4822	990	"res_0"	"int"	32	0	0	0
4823	990	"arg_1"	"varchar"	0	0	1	1
4824	990	"arg_2"	"varchar"	0	0	1	2
4825	991	"res_0"	"int"	32	0	0	0
4826	991	"arg_1"	"varchar"	0	0	1	1
4827	991	"arg_2"	"varchar"	0	0	1	2
4828	991	"arg_3"	"int"	32	0	1	3
4829	992	"res_0"	"varchar"	0	0	0	0
4830	992	"arg_1"	"varchar"	0	0	1	1
4831	992	"arg_2"	"int"	32	0	1	2
4832	993	"res_0"	"varchar"	0	0	0	0
4833	993	"arg_1"	"varchar"	0	0	1	1
4834	993	"arg_2"	"int"	32	0	1	2
4835	993	"arg_3"	"int"	32	0	1	3
4836	994	"res_0"	"boolean"	1	0	0	0
4837	994	"arg_1"	"varchar"	0	0	1	1
4838	994	"arg_2"	"varchar"	0	0	1	2
4839	995	"res_0"	"boolean"	1	0	0	0
4840	995	"arg_1"	"varchar"	0	0	1	1
4841	995	"arg_2"	"varchar"	0	0	1	2
4842	995	"arg_3"	"varchar"	0	0	1	3
4843	996	"res_0"	"boolean"	1	0	0	0
4844	996	"arg_1"	"varchar"	0	0	1	1
4845	996	"arg_2"	"varchar"	0	0	1	2
4846	997	"res_0"	"boolean"	1	0	0	0
4847	997	"arg_1"	"varchar"	0	0	1	1
4848	997	"arg_2"	"varchar"	0	0	1	2
4849	997	"arg_3"	"varchar"	0	0	1	3
4850	998	"res_0"	"boolean"	1	0	0	0
4851	998	"arg_1"	"varchar"	0	0	1	1
4852	998	"arg_2"	"varchar"	0	0	1	2
4853	999	"res_0"	"boolean"	1	0	0	0
4854	999	"arg_1"	"varchar"	0	0	1	1
4855	999	"arg_2"	"varchar"	0	0	1	2
4856	999	"arg_3"	"varchar"	0	0	1	3
4857	1000	"res_0"	"boolean"	1	0	0	0
4858	1000	"arg_1"	"varchar"	0	0	1	1
4859	1000	"arg_2"	"varchar"	0	0	1	2
4860	1001	"res_0"	"boolean"	1	0	0	0
4861	1001	"arg_1"	"varchar"	0	0	1	1
4862	1001	"arg_2"	"varchar"	0	0	1	2
4863	1001	"arg_3"	"varchar"	0	0	1	3
4864	1002	"res_0"	"int"	32	0	0	0
4865	1002	"arg_1"	"varchar"	0	0	1	1
4866	1002	"arg_2"	"varchar"	0	0	1	2
4867	1003	"res_0"	"varchar"	0	0	0	0
4868	1003	"arg_1"	"varchar"	0	0	1	1
4869	1003	"arg_2"	"int"	32	0	1	2
4870	1004	"res_0"	"varchar"	0	0	0	0
4871	1004	"arg_1"	"varchar"	0	0	1	1
4872	1004	"arg_2"	"varchar"	0	0	1	2
4873	1005	"res_0"	"int"	32	0	0	0
4874	1005	"arg_1"	"varchar"	0	0	1	1
4875	1006	"res_0"	"varchar"	0	0	0	0
4876	1006	"arg_1"	"int"	32	0	1	1
4877	1007	"res_0"	"int"	32	0	0	0
4878	1007	"arg_1"	"varchar"	0	0	1	1
4879	1008	"res_0"	"varchar"	0	0	0	0
4880	1008	"arg_1"	"varchar"	0	0	1	1
4881	1008	"arg_2"	"int"	32	0	1	2
4882	1009	"res_0"	"varchar"	0	0	0	0
4883	1009	"arg_1"	"varchar"	0	0	1	1
4884	1009	"arg_2"	"int"	32	0	1	2
4885	1010	"res_0"	"varchar"	0	0	0	0
4886	1010	"arg_1"	"varchar"	0	0	1	1
4887	1011	"res_0"	"varchar"	0	0	0	0
4888	1011	"arg_1"	"varchar"	0	0	1	1
4889	1012	"res_0"	"varchar"	0	0	0	0
4890	1012	"arg_1"	"varchar"	0	0	1	1
4891	1013	"res_0"	"varchar"	0	0	0	0
4892	1013	"arg_1"	"varchar"	0	0	1	1
4893	1014	"res_0"	"varchar"	0	0	0	0
4894	1014	"arg_1"	"varchar"	0	0	1	1
4895	1015	"res_0"	"varchar"	0	0	0	0
4896	1015	"arg_1"	"varchar"	0	0	1	1
4897	1015	"arg_2"	"varchar"	0	0	1	2
4898	1016	"res_0"	"varchar"	0	0	0	0
4899	1016	"arg_1"	"varchar"	0	0	1	1
4900	1017	"res_0"	"varchar"	0	0	0	0
4901	1017	"arg_1"	"varchar"	0	0	1	1
4902	1017	"arg_2"	"varchar"	0	0	1	2
4903	1018	"res_0"	"varchar"	0	0	0	0
4904	1018	"arg_1"	"varchar"	0	0	1	1
4905	1019	"res_0"	"varchar"	0	0	0	0
4906	1019	"arg_1"	"varchar"	0	0	1	1
4907	1019	"arg_2"	"varchar"	0	0	1	2
4908	1020	"res_0"	"varchar"	0	0	0	0
4909	1020	"arg_1"	"varchar"	0	0	1	1
4910	1020	"arg_2"	"int"	32	0	1	2
4911	1021	"res_0"	"varchar"	0	0	0	0
4912	1021	"arg_1"	"varchar"	0	0	1	1
4913	1021	"arg_2"	"int"	32	0	1	2
4914	1021	"arg_3"	"varchar"	0	0	1	3
4915	1022	"res_0"	"varchar"	0	0	0	0
4916	1022	"arg_1"	"varchar"	0	0	1	1
4917	1022	"arg_2"	"int"	32	0	1	2
4918	1023	"res_0"	"varchar"	0	0	0	0
4919	1023	"arg_1"	"varchar"	0	0	1	1
4920	1023	"arg_2"	"int"	32	0	1	2
4921	1023	"arg_3"	"varchar"	0	0	1	3
4922	1024	"res_0"	"varchar"	0	0	0	0
4923	1024	"arg_1"	"varchar"	0	0	1	1
4924	1024	"arg_2"	"int"	32	0	1	2
4925	1024	"arg_3"	"int"	32	0	1	3
4926	1024	"arg_4"	"varchar"	0	0	1	4
4927	1025	"res_0"	"varchar"	0	0	0	0
4928	1025	"arg_1"	"varchar"	0	0	1	1
4929	1025	"arg_2"	"varchar"	0	0	1	2
4930	1025	"arg_3"	"varchar"	0	0	1	3
4931	1026	"res_0"	"varchar"	0	0	0	0
4932	1026	"arg_1"	"varchar"	0	0	1	1
4933	1026	"arg_2"	"int"	32	0	1	2
4934	1027	"res_0"	"varchar"	0	0	0	0
4935	1027	"arg_1"	"int"	32	0	1	1
4936	1028	"res_0"	"int"	32	0	0	0
4937	1028	"arg_1"	"varchar"	0	0	1	1
4938	1029	"res_0"	"int"	32	0	0	0
4939	1029	"arg_1"	"varchar"	0	0	1	1
4940	1030	"res_0"	"int"	32	0	0	0
4941	1030	"arg_1"	"varchar"	0	0	1	1
4942	1031	"res_0"	"varchar"	0	0	0	0
4943	1031	"arg_1"	"varchar"	0	0	1	1
4944	1032	"res_0"	"int"	32	0	0	0
4945	1032	"arg_1"	"varchar"	0	0	1	1
4946	1032	"arg_2"	"varchar"	0	0	1	2
4947	1033	"res_0"	"int"	32	0	0	0
4948	1033	"arg_1"	"varchar"	0	0	1	1
4949	1033	"arg_2"	"varchar"	0	0	1	2
4950	1034	"res_0"	"int"	32	0	0	0
4951	1034	"arg_1"	"varchar"	0	0	1	1
4952	1034	"arg_2"	"varchar"	0	0	1	2
4953	1035	"res_0"	"double"	53	0	0	0
4954	1035	"arg_1"	"varchar"	0	0	1	1
4955	1035	"arg_2"	"varchar"	0	0	1	2
4956	1036	"res_0"	"varchar"	0	0	0	0
4957	1036	"arg_1"	"varchar"	0	0	1	1
4958	1037	"res_0"	"int"	32	0	0	0
4959	1037	"arg_1"	"varchar"	0	0	1	1
4960	1037	"arg_2"	"varchar"	0	0	1	2
4961	1038	"res_0"	"int"	32	0	0	0
4962	1038	"arg_1"	"varchar"	0	0	1	1
4963	1038	"arg_2"	"varchar"	0	0	1	2
4964	1038	"arg_3"	"int"	32	0	1	3
4965	1038	"arg_4"	"int"	32	0	1	4
4966	1038	"arg_5"	"int"	32	0	1	5
4967	1039	"res_0"	"tinyint"	8	0	0	0
4968	1039	"arg_1"	"clob"	0	0	1	1
4969	1039	"arg_2"	"boolean"	1	0	1	2
4970	1040	"res_0"	"smallint"	16	0	0	0
4971	1040	"arg_1"	"clob"	0	0	1	1
4972	1040	"arg_2"	"boolean"	1	0	1	2
4973	1041	"res_0"	"int"	32	0	0	0
4974	1041	"arg_1"	"clob"	0	0	1	1
4975	1041	"arg_2"	"boolean"	1	0	1	2
4976	1042	"res_0"	"clob"	0	0	0	0
4977	1042	"arg_1"	"clob"	0	0	1	1
4978	1043	"res_0"	"int"	32	0	0	0
4979	1043	"arg_1"	"clob"	0	0	1	1
4980	1043	"arg_2"	"clob"	0	0	1	2
4981	1044	"res_0"	"int"	32	0	0	0
4982	1044	"arg_1"	"clob"	0	0	1	1
4983	1044	"arg_2"	"clob"	0	0	1	2
4984	1044	"arg_3"	"int"	32	0	1	3
4985	1045	"res_0"	"clob"	0	0	0	0
4986	1045	"arg_1"	"clob"	0	0	1	1
4987	1045	"arg_2"	"int"	32	0	1	2
4988	1046	"res_0"	"clob"	0	0	0	0
4989	1046	"arg_1"	"clob"	0	0	1	1
4990	1046	"arg_2"	"int"	32	0	1	2
4991	1046	"arg_3"	"int"	32	0	1	3
4992	1047	"res_0"	"boolean"	1	0	0	0
4993	1047	"arg_1"	"clob"	0	0	1	1
4994	1047	"arg_2"	"clob"	0	0	1	2
4995	1048	"res_0"	"boolean"	1	0	0	0
4996	1048	"arg_1"	"clob"	0	0	1	1
4997	1048	"arg_2"	"clob"	0	0	1	2
4998	1048	"arg_3"	"clob"	0	0	1	3
4999	1049	"res_0"	"boolean"	1	0	0	0
5000	1049	"arg_1"	"clob"	0	0	1	1
5001	1049	"arg_2"	"clob"	0	0	1	2
5002	1050	"res_0"	"boolean"	1	0	0	0
5003	1050	"arg_1"	"clob"	0	0	1	1
5004	1050	"arg_2"	"clob"	0	0	1	2
5005	1050	"arg_3"	"clob"	0	0	1	3
5006	1051	"res_0"	"boolean"	1	0	0	0
5007	1051	"arg_1"	"clob"	0	0	1	1
5008	1051	"arg_2"	"clob"	0	0	1	2
5009	1052	"res_0"	"boolean"	1	0	0	0
5010	1052	"arg_1"	"clob"	0	0	1	1
5011	1052	"arg_2"	"clob"	0	0	1	2
5012	1052	"arg_3"	"clob"	0	0	1	3
5013	1053	"res_0"	"boolean"	1	0	0	0
5014	1053	"arg_1"	"clob"	0	0	1	1
5015	1053	"arg_2"	"clob"	0	0	1	2
5016	1054	"res_0"	"boolean"	1	0	0	0
5017	1054	"arg_1"	"clob"	0	0	1	1
5018	1054	"arg_2"	"clob"	0	0	1	2
5019	1054	"arg_3"	"clob"	0	0	1	3
5020	1055	"res_0"	"int"	32	0	0	0
5021	1055	"arg_1"	"clob"	0	0	1	1
5022	1055	"arg_2"	"clob"	0	0	1	2
5023	1056	"res_0"	"clob"	0	0	0	0
5024	1056	"arg_1"	"clob"	0	0	1	1
5025	1056	"arg_2"	"int"	32	0	1	2
5026	1057	"res_0"	"clob"	0	0	0	0
5027	1057	"arg_1"	"clob"	0	0	1	1
5028	1057	"arg_2"	"clob"	0	0	1	2
5029	1058	"res_0"	"int"	32	0	0	0
5030	1058	"arg_1"	"clob"	0	0	1	1
5031	1059	"res_0"	"clob"	0	0	0	0
5032	1059	"arg_1"	"int"	32	0	1	1
5033	1060	"res_0"	"int"	32	0	0	0
5034	1060	"arg_1"	"clob"	0	0	1	1
5035	1061	"res_0"	"clob"	0	0	0	0
5036	1061	"arg_1"	"clob"	0	0	1	1
5037	1061	"arg_2"	"int"	32	0	1	2
5038	1062	"res_0"	"clob"	0	0	0	0
5039	1062	"arg_1"	"clob"	0	0	1	1
5040	1062	"arg_2"	"int"	32	0	1	2
5041	1063	"res_0"	"clob"	0	0	0	0
5042	1063	"arg_1"	"clob"	0	0	1	1
5043	1064	"res_0"	"clob"	0	0	0	0
5044	1064	"arg_1"	"clob"	0	0	1	1
5045	1065	"res_0"	"clob"	0	0	0	0
5046	1065	"arg_1"	"clob"	0	0	1	1
5047	1066	"res_0"	"clob"	0	0	0	0
5048	1066	"arg_1"	"clob"	0	0	1	1
5049	1067	"res_0"	"clob"	0	0	0	0
5050	1067	"arg_1"	"clob"	0	0	1	1
5051	1068	"res_0"	"clob"	0	0	0	0
5052	1068	"arg_1"	"clob"	0	0	1	1
5053	1068	"arg_2"	"clob"	0	0	1	2
5054	1069	"res_0"	"clob"	0	0	0	0
5055	1069	"arg_1"	"clob"	0	0	1	1
5056	1070	"res_0"	"clob"	0	0	0	0
5057	1070	"arg_1"	"clob"	0	0	1	1
5058	1070	"arg_2"	"clob"	0	0	1	2
5059	1071	"res_0"	"clob"	0	0	0	0
5060	1071	"arg_1"	"clob"	0	0	1	1
5061	1072	"res_0"	"clob"	0	0	0	0
5062	1072	"arg_1"	"clob"	0	0	1	1
5063	1072	"arg_2"	"clob"	0	0	1	2
5064	1073	"res_0"	"clob"	0	0	0	0
5065	1073	"arg_1"	"clob"	0	0	1	1
5066	1073	"arg_2"	"int"	32	0	1	2
5067	1074	"res_0"	"clob"	0	0	0	0
5068	1074	"arg_1"	"clob"	0	0	1	1
5069	1074	"arg_2"	"int"	32	0	1	2
5070	1074	"arg_3"	"clob"	0	0	1	3
5071	1075	"res_0"	"clob"	0	0	0	0
5072	1075	"arg_1"	"clob"	0	0	1	1
5073	1075	"arg_2"	"int"	32	0	1	2
5074	1076	"res_0"	"clob"	0	0	0	0
5075	1076	"arg_1"	"clob"	0	0	1	1
5076	1076	"arg_2"	"int"	32	0	1	2
5077	1076	"arg_3"	"clob"	0	0	1	3
5078	1077	"res_0"	"clob"	0	0	0	0
5079	1077	"arg_1"	"clob"	0	0	1	1
5080	1077	"arg_2"	"int"	32	0	1	2
5081	1077	"arg_3"	"int"	32	0	1	3
5082	1077	"arg_4"	"clob"	0	0	1	4
5083	1078	"res_0"	"clob"	0	0	0	0
5084	1078	"arg_1"	"clob"	0	0	1	1
5085	1078	"arg_2"	"clob"	0	0	1	2
5086	1078	"arg_3"	"clob"	0	0	1	3
5087	1079	"res_0"	"clob"	0	0	0	0
5088	1079	"arg_1"	"clob"	0	0	1	1
5089	1079	"arg_2"	"int"	32	0	1	2
5090	1080	"res_0"	"clob"	0	0	0	0
5091	1080	"arg_1"	"int"	32	0	1	1
5092	1081	"res_0"	"int"	32	0	0	0
5093	1081	"arg_1"	"clob"	0	0	1	1
5094	1082	"res_0"	"int"	32	0	0	0
5095	1082	"arg_1"	"clob"	0	0	1	1
5096	1083	"res_0"	"int"	32	0	0	0
5097	1083	"arg_1"	"clob"	0	0	1	1
5098	1084	"res_0"	"clob"	0	0	0	0
5099	1084	"arg_1"	"clob"	0	0	1	1
5100	1085	"res_0"	"int"	32	0	0	0
5101	1085	"arg_1"	"clob"	0	0	1	1
5102	1085	"arg_2"	"clob"	0	0	1	2
5103	1086	"res_0"	"int"	32	0	0	0
5104	1086	"arg_1"	"clob"	0	0	1	1
5105	1086	"arg_2"	"clob"	0	0	1	2
5106	1087	"res_0"	"int"	32	0	0	0
5107	1087	"arg_1"	"clob"	0	0	1	1
5108	1087	"arg_2"	"clob"	0	0	1	2
5109	1088	"res_0"	"double"	53	0	0	0
5110	1088	"arg_1"	"clob"	0	0	1	1
5111	1088	"arg_2"	"clob"	0	0	1	2
5112	1089	"res_0"	"clob"	0	0	0	0
5113	1089	"arg_1"	"clob"	0	0	1	1
5114	1090	"res_0"	"int"	32	0	0	0
5115	1090	"arg_1"	"clob"	0	0	1	1
5116	1090	"arg_2"	"clob"	0	0	1	2
5117	1091	"res_0"	"int"	32	0	0	0
5118	1091	"arg_1"	"clob"	0	0	1	1
5119	1091	"arg_2"	"clob"	0	0	1	2
5120	1091	"arg_3"	"int"	32	0	1	3
5121	1091	"arg_4"	"int"	32	0	1	4
5122	1091	"arg_5"	"int"	32	0	1	5
5123	1092	"res_0"	"table"	0	0	0	0
5124	1092	"arg_1"	"varchar"	0	0	1	1
5125	1092	"arg_2"	"varchar"	0	0	1	2
5126	1092	"arg_3"	"varchar"	0	0	1	3
5127	1092	"arg_4"	"varchar"	0	0	1	4
5128	1092	"arg_5"	"varchar"	0	0	1	5
5129	1092	"arg_6"	"varchar"	0	0	1	6
5130	1092	"arg_7"	"bigint"	64	0	1	7
5131	1092	"arg_8"	"bigint"	64	0	1	8
5132	1093	"res_0"	"table"	0	0	0	0
5133	1093	"arg_1"	"varchar"	0	0	1	1
5134	1093	"arg_2"	"varchar"	0	0	1	2
5135	1093	"arg_3"	"varchar"	0	0	1	3
5136	1093	"arg_4"	"varchar"	0	0	1	4
5137	1093	"arg_5"	"varchar"	0	0	1	5
5138	1093	"arg_6"	"bigint"	64	0	1	6
5139	1093	"arg_7"	"bigint"	64	0	1	7
5140	1094	"res_0"	"table"	0	0	0	0
5141	1094	"arg_1"	"varchar"	0	0	1	1
5142	1094	"arg_2"	"varchar"	0	0	1	2
5143	27	"res"	"boolean"	1	0	0	0
5144	27	"arg"	"oid"	63	0	1	1
5145	39	"res"	"any"	0	0	0	0
5146	39	"arg"	"any"	0	0	1	1
5147	40	"res"	"boolean"	1	0	0	0
5148	40	"arg"	"any"	0	0	1	1
5149	41	"res"	"boolean"	1	0	0	0
5150	41	"arg"	"any"	0	0	1	1
5151	46	"res"	"any"	0	0	0	0
5152	46	"arg"	"any"	0	0	1	1
5153	47	"res"	"any"	0	0	0	0
5154	47	"arg"	"any"	0	0	1	1
5155	51	"res"	"bigint"	64	0	0	0
5156	51	"arg"	"tinyint"	8	0	1	1
5157	52	"res"	"bigint"	64	0	0	0
5158	52	"arg"	"smallint"	16	0	1	1
5159	53	"res"	"bigint"	64	0	0	0
5160	53	"arg"	"int"	32	0	1	1
5161	54	"res"	"bigint"	64	0	0	0
5162	54	"arg"	"bigint"	64	0	1	1
5163	55	"res"	"wrd"	64	0	0	0
5164	55	"arg"	"wrd"	64	0	1	1
5165	56	"res"	"decimal"	19	0	0	0
5166	56	"arg"	"decimal"	2	0	1	1
5167	57	"res"	"decimal"	19	0	0	0
5168	57	"arg"	"decimal"	4	0	1	1
5169	58	"res"	"decimal"	19	0	0	0
5170	58	"arg"	"decimal"	9	0	1	1
5171	59	"res"	"decimal"	19	0	0	0
5172	59	"arg"	"decimal"	19	0	1	1
5173	60	"res"	"bigint"	64	0	0	0
5174	60	"arg"	"tinyint"	8	0	1	1
5175	61	"res"	"bigint"	64	0	0	0
5176	61	"arg"	"smallint"	16	0	1	1
5177	62	"res"	"bigint"	64	0	0	0
5178	62	"arg"	"int"	32	0	1	1
5179	63	"res"	"bigint"	64	0	0	0
5180	63	"arg"	"bigint"	64	0	1	1
5181	64	"res"	"decimal"	19	0	0	0
5182	64	"arg"	"decimal"	2	0	1	1
5183	65	"res"	"decimal"	19	0	0	0
5184	65	"arg"	"decimal"	4	0	1	1
5185	66	"res"	"decimal"	19	0	0	0
5186	66	"arg"	"decimal"	9	0	1	1
5187	67	"res"	"decimal"	19	0	0	0
5188	67	"arg"	"decimal"	19	0	1	1
5189	80	"res"	"real"	24	0	0	0
5190	80	"arg"	"real"	24	0	1	1
5191	81	"res"	"real"	24	0	0	0
5192	81	"arg"	"real"	24	0	1	1
5193	82	"res"	"double"	53	0	0	0
5194	82	"arg"	"double"	53	0	1	1
5195	83	"res"	"double"	53	0	0	0
5196	83	"arg"	"double"	53	0	1	1
5197	84	"res"	"double"	53	0	0	0
5198	84	"arg"	"double"	53	0	1	1
5199	85	"res"	"wrd"	64	0	0	0
5200	86	"res"	"wrd"	64	0	0	0
5223	5222	"name"	"varchar"	1024	0	0	0
5224	5222	"value"	"varchar"	2048	0	0	1
5226	5225	"name"	"varchar"	1024	0	0	0
5232	5231	"name"	"varchar"	2048	0	0	0
5252	5251	"val"	"clob"	0	0	1	0
5253	5251	"pat"	"clob"	0	0	1	1
5254	5251	"esc"	"clob"	0	0	1	2
5257	5256	"val"	"clob"	0	0	1	0
5258	5256	"pat"	"clob"	0	0	1	1
5259	5256	"esc"	"clob"	0	0	1	2
5262	5261	"val"	"clob"	0	0	1	0
5263	5261	"pat"	"clob"	0	0	1	1
5266	5265	"val"	"clob"	0	0	1	0
5267	5265	"pat"	"clob"	0	0	1	1
5270	5269	"result"	"double"	53	0	0	0
5271	5269	"r"	"double"	53	0	1	1
5274	5273	"result"	"double"	53	0	0	0
5275	5273	"d"	"double"	53	0	1	1
5281	5280	"result"	"clob"	0	0	0	0
5282	5280	"theurl"	"url"	0	0	1	1
5285	5284	"result"	"clob"	0	0	0	0
5286	5284	"theurl"	"url"	0	0	1	1
5289	5288	"result"	"clob"	0	0	0	0
5290	5288	"theurl"	"url"	0	0	1	1
5293	5292	"result"	"clob"	0	0	0	0
5294	5292	"theurl"	"url"	0	0	1	1
5297	5296	"result"	"clob"	0	0	0	0
5298	5296	"theurl"	"url"	0	0	1	1
5301	5300	"result"	"clob"	0	0	0	0
5302	5300	"theurl"	"url"	0	0	1	1
5305	5304	"result"	"clob"	0	0	0	0
5306	5304	"theurl"	"url"	0	0	1	1
5309	5308	"result"	"clob"	0	0	0	0
5310	5308	"theurl"	"url"	0	0	1	1
5313	5312	"result"	"clob"	0	0	0	0
5314	5312	"theurl"	"url"	0	0	1	1
5317	5316	"result"	"clob"	0	0	0	0
5318	5316	"theurl"	"url"	0	0	1	1
5321	5320	"result"	"clob"	0	0	0	0
5322	5320	"theurl"	"url"	0	0	1	1
5325	5324	"result"	"clob"	0	0	0	0
5326	5324	"theurl"	"url"	0	0	1	1
5329	5328	"result"	"clob"	0	0	0	0
5330	5328	"theurl"	"url"	0	0	1	1
5333	5332	"result"	"boolean"	1	0	0	0
5334	5332	"theurl"	"url"	0	0	1	1
5337	5336	"result"	"url"	0	0	0	0
5338	5336	"protocol"	"clob"	0	0	1	1
5339	5336	"hostname"	"clob"	0	0	1	2
5340	5336	"port"	"int"	32	0	1	3
5341	5336	"file"	"clob"	0	0	1	4
5344	5343	"result"	"url"	0	0	0	0
5345	5343	"protocol"	"clob"	0	0	1	1
5346	5343	"hostname"	"clob"	0	0	1	2
5347	5343	"file"	"clob"	0	0	1	3
5350	5349	"result"	"date"	0	0	0	0
5351	5349	"s"	"clob"	0	0	1	1
5352	5349	"format"	"clob"	0	0	1	2
5355	5354	"result"	"clob"	0	0	0	0
5356	5354	"d"	"date"	0	0	1	1
5357	5354	"format"	"clob"	0	0	1	2
5360	5359	"result"	"date"	0	0	0	0
5361	5359	"s"	"clob"	0	0	1	1
5362	5359	"format"	"clob"	0	0	1	2
5366	5365	"result"	"inet"	0	0	0	0
5367	5365	"p"	"inet"	0	0	1	1
5370	5369	"result"	"clob"	0	0	0	0
5371	5369	"p"	"inet"	0	0	1	1
5374	5373	"result"	"int"	32	0	0	0
5375	5373	"p"	"inet"	0	0	1	1
5378	5377	"result"	"inet"	0	0	0	0
5379	5377	"p"	"inet"	0	0	1	1
5380	5377	"mask"	"int"	32	0	1	2
5383	5382	"result"	"inet"	0	0	0	0
5384	5382	"p"	"inet"	0	0	1	1
5387	5386	"result"	"inet"	0	0	0	0
5388	5386	"p"	"inet"	0	0	1	1
5391	5390	"result"	"inet"	0	0	0	0
5392	5390	"p"	"inet"	0	0	1	1
5395	5394	"result"	"clob"	0	0	0	0
5396	5394	"p"	"inet"	0	0	1	1
5399	5398	"result"	"clob"	0	0	0	0
5400	5398	"p"	"inet"	0	0	1	1
5403	5402	"result"	"boolean"	1	0	0	0
5404	5402	"i1"	"inet"	0	0	1	1
5405	5402	"i2"	"inet"	0	0	1	2
5408	5407	"result"	"boolean"	1	0	0	0
5409	5407	"i1"	"inet"	0	0	1	1
5410	5407	"i2"	"inet"	0	0	1	2
5413	5412	"result"	"boolean"	1	0	0	0
5414	5412	"i1"	"inet"	0	0	1	1
5415	5412	"i2"	"inet"	0	0	1	2
5418	5417	"result"	"boolean"	1	0	0	0
5419	5417	"i1"	"inet"	0	0	1	1
5420	5417	"i2"	"inet"	0	0	1	2
5423	5422	"id"	"oid"	63	0	0	0
5424	5422	"owner"	"clob"	0	0	0	1
5425	5422	"defined"	"timestamp"	7	0	0	2
5426	5422	"query"	"clob"	0	0	0	3
5427	5422	"pipe"	"clob"	0	0	0	4
5428	5422	"plan"	"clob"	0	0	0	5
5429	5422	"mal"	"int"	32	0	0	6
5430	5422	"optimize"	"bigint"	64	0	0	7
5433	5432	"id"	"oid"	63	0	0	0
5434	5432	"start"	"timestamp"	7	0	0	1
5435	5432	"stop"	"timestamp"	7	0	0	2
5436	5432	"arguments"	"clob"	0	0	0	3
5437	5432	"tuples"	"wrd"	64	0	0	4
5438	5432	"run"	"bigint"	64	0	0	5
5439	5432	"ship"	"bigint"	64	0	0	6
5440	5432	"cpu"	"int"	32	0	0	7
5441	5432	"io"	"int"	32	0	0	8
5487	5486	"threshold"	"smallint"	16	0	1	0
5492	5491	"event"	"int"	32	0	0	0
5493	5491	"clk"	"varchar"	20	0	0	1
5494	5491	"pc"	"varchar"	50	0	0	2
5495	5491	"thread"	"int"	32	0	0	3
5496	5491	"ticks"	"bigint"	64	0	0	4
5497	5491	"rrsmb"	"bigint"	64	0	0	5
5498	5491	"vmmb"	"bigint"	64	0	0	6
5499	5491	"reads"	"bigint"	64	0	0	7
5500	5491	"writes"	"bigint"	64	0	0	8
5501	5491	"minflt"	"bigint"	64	0	0	9
5502	5491	"majflt"	"bigint"	64	0	0	10
5503	5491	"nvcsw"	"bigint"	64	0	0	11
5504	5491	"stmt"	"clob"	0	0	0	12
5522	5521	"host"	"clob"	0	0	1	0
5523	5521	"port"	"int"	32	0	1	1
5526	5525	"ticks"	"int"	32	0	1	0
5529	5528	"result"	"timestamp"	7	0	0	0
5530	5528	"sec"	"bigint"	64	0	1	1
5533	5532	"result"	"timestamp"	7	0	0	0
5534	5532	"sec"	"int"	32	0	1	1
5537	5536	"result"	"int"	32	0	0	0
5538	5536	"ts"	"timestamp"	7	0	1	1
5541	5540	"sys"	"clob"	0	0	1	0
5542	5540	"tab"	"clob"	0	0	1	1
5545	5544	"sys"	"clob"	0	0	1	0
5546	5544	"tab"	"clob"	0	0	1	1
5549	5548	"sys"	"clob"	0	0	1	0
5550	5548	"tab"	"clob"	0	0	1	1
5553	5552	"sch"	"varchar"	100	0	0	0
5554	5552	"usr"	"varchar"	100	0	0	1
5555	5552	"dep_type"	"varchar"	32	0	0	2
5558	5557	"sch"	"varchar"	100	0	0	0
5559	5557	"usr"	"varchar"	100	0	0	1
5560	5557	"dep_type"	"varchar"	32	0	0	2
5563	5562	"sch"	"varchar"	100	0	0	0
5564	5562	"usr"	"varchar"	100	0	0	1
5565	5562	"dep_type"	"varchar"	32	0	0	2
5568	5567	"sch"	"varchar"	100	0	0	0
5569	5567	"usr"	"varchar"	100	0	0	1
5570	5567	"dep_type"	"varchar"	32	0	0	2
5573	5572	"sch"	"varchar"	100	0	0	0
5574	5572	"usr"	"varchar"	100	0	0	1
5575	5572	"dep_type"	"varchar"	32	0	0	2
5578	5577	"sch"	"varchar"	100	0	0	0
5579	5577	"usr"	"varchar"	100	0	0	1
5580	5577	"dep_type"	"varchar"	32	0	0	2
5583	5582	"sch"	"varchar"	100	0	0	0
5584	5582	"usr"	"varchar"	100	0	0	1
5585	5582	"dep_type"	"varchar"	32	0	0	2
5588	5587	"sch"	"varchar"	100	0	0	0
5589	5587	"usr"	"varchar"	100	0	0	1
5590	5587	"dep_type"	"varchar"	32	0	0	2
5593	5592	"sch"	"varchar"	100	0	0	0
5594	5592	"usr"	"varchar"	100	0	0	1
5595	5592	"dep_type"	"varchar"	32	0	0	2
5598	5597	"sch"	"varchar"	100	0	0	0
5599	5597	"usr"	"varchar"	100	0	0	1
5600	5597	"dep_type"	"varchar"	32	0	0	2
5603	5602	"sch"	"varchar"	100	0	0	0
5604	5602	"usr"	"varchar"	100	0	0	1
5605	5602	"dep_type"	"varchar"	32	0	0	2
5608	5607	"sch"	"varchar"	100	0	0	0
5609	5607	"usr"	"varchar"	100	0	0	1
5610	5607	"dep_type"	"varchar"	32	0	0	2
5613	5612	"sch"	"varchar"	100	0	0	0
5614	5612	"usr"	"varchar"	100	0	0	1
5615	5612	"dep_type"	"varchar"	32	0	0	2
5618	5617	"sch"	"varchar"	100	0	0	0
5619	5617	"usr"	"varchar"	100	0	0	1
5620	5617	"dep_type"	"varchar"	32	0	0	2
5623	5622	"sch"	"varchar"	100	0	0	0
5624	5622	"usr"	"varchar"	100	0	0	1
5625	5622	"dep_type"	"varchar"	32	0	0	2
5628	5627	"sch"	"varchar"	100	0	0	0
5629	5627	"usr"	"varchar"	100	0	0	1
5630	5627	"dep_type"	"varchar"	32	0	0	2
5633	5632	"sch"	"varchar"	100	0	0	0
5634	5632	"usr"	"varchar"	100	0	0	1
5635	5632	"dep_type"	"varchar"	32	0	0	2
5638	5637	"result"	"clob"	0	0	0	0
5639	5637	"username"	"clob"	0	0	1	1
5642	5641	"user"	"clob"	0	0	0	0
5643	5641	"login"	"timestamp"	7	0	0	1
5644	5641	"sessiontimeout"	"bigint"	64	0	0	2
5645	5641	"lastcommand"	"timestamp"	7	0	0	3
5646	5641	"querytimeout"	"bigint"	64	0	0	4
5647	5641	"active"	"boolean"	1	0	0	5
5658	5657	"delay"	"tinyint"	8	0	1	0
5661	5660	"delay"	"tinyint"	8	0	1	0
5662	5660	"force"	"boolean"	1	0	1	1
5665	5664	"query"	"bigint"	64	0	1	0
5668	5667	"query"	"bigint"	64	0	1	0
5669	5667	"session"	"bigint"	64	0	1	1
5672	5671	"timeout"	"bigint"	64	0	1	0
5675	5674	"result"	"varchar"	32	0	0	0
5676	5674	"s1"	"varchar"	32	0	1	1
5677	5674	"st"	"int"	32	0	1	2
5678	5674	"len"	"int"	32	0	1	3
5679	5674	"s3"	"varchar"	32	0	1	4
5682	5681	"result"	"double"	53	0	0	0
5683	5681	"num"	"double"	53	0	1	1
5684	5681	"prc"	"int"	32	0	1	2
5687	5686	"result"	"double"	53	0	0	0
5688	5686	"num"	"double"	53	0	1	1
5689	5686	"prc"	"int"	32	0	1	2
5690	5686	"truncat"	"int"	32	0	1	3
5693	5692	"result"	"clob"	0	0	0	0
5694	5692	"num"	"double"	53	0	1	1
5695	5692	"prc"	"int"	32	0	1	2
5696	5692	"truncat"	"int"	32	0	1	3
5699	5698	"result"	"double"	53	0	0	0
5700	5698	"pdec"	"double"	53	0	1	1
5701	5698	"pradius"	"double"	53	0	1	2
5704	5703	"result"	"oid"	63	0	0	0
5705	5703	"x"	"int"	32	0	1	1
5706	5703	"y"	"int"	32	0	1	2
5709	5708	"result"	"int"	32	0	0	0
5710	5708	"z"	"oid"	63	0	1	1
5713	5712	"result"	"int"	32	0	0	0
5714	5712	"z"	"oid"	63	0	1	1
5717	5716	"rewrite"	"clob"	0	0	0	0
5718	5716	"count"	"int"	32	0	0	1
5721	5720	"query"	"clob"	0	0	0	0
5722	5720	"count"	"int"	32	0	0	1
5725	5724	"filename"	"clob"	0	0	1	0
5728	5727	"name"	"clob"	0	0	0	0
5729	5727	"def"	"clob"	0	0	0	1
5730	5727	"status"	"clob"	0	0	0	2
5738	5737	"name"	"clob"	0	0	0	0
5739	5737	"value"	"clob"	0	0	0	1
5746	5745	"id"	"int"	32	0	0	0
5747	5745	"name"	"clob"	0	0	0	1
5748	5745	"htype"	"clob"	0	0	0	2
5749	5745	"ttype"	"clob"	0	0	0	3
5750	5745	"count"	"bigint"	64	0	0	4
5751	5745	"refcnt"	"int"	32	0	0	5
5752	5745	"lrefcnt"	"int"	32	0	0	6
5753	5745	"location"	"clob"	0	0	0	7
5754	5745	"heat"	"int"	32	0	0	8
5755	5745	"dirty"	"clob"	0	0	0	9
5756	5745	"status"	"clob"	0	0	0	10
5757	5745	"kind"	"clob"	0	0	0	11
5760	5759	"ra_stmt"	"clob"	0	0	1	0
5761	5759	"opt"	"boolean"	1	0	1	1
5764	5763	"qtag"	"bigint"	64	0	0	0
5765	5763	"user"	"clob"	0	0	0	1
5766	5763	"started"	"timestamp"	7	0	0	2
5767	5763	"estimate"	"timestamp"	7	0	0	3
5768	5763	"progress"	"int"	32	0	0	4
5769	5763	"status"	"clob"	0	0	0	5
5770	5763	"tag"	"oid"	63	0	0	6
5771	5763	"query"	"clob"	0	0	0	7
5784	5783	"tag"	"int"	32	0	1	0
5787	5786	"tag"	"int"	32	0	1	0
5790	5789	"tag"	"int"	32	0	1	0
5793	5792	"tag"	"bigint"	64	0	1	0
5796	5795	"tag"	"bigint"	64	0	1	0
5799	5798	"tag"	"bigint"	64	0	1	0
5802	5801	"result"	"double"	53	0	0	0
5803	5801	"val"	"tinyint"	8	0	1	1
5806	5805	"result"	"double"	53	0	0	0
5807	5805	"val"	"smallint"	16	0	1	1
5810	5809	"result"	"double"	53	0	0	0
5811	5809	"val"	"int"	32	0	1	1
5814	5813	"result"	"double"	53	0	0	0
5815	5813	"val"	"wrd"	64	0	1	1
5818	5817	"result"	"double"	53	0	0	0
5819	5817	"val"	"bigint"	64	0	1	1
5822	5821	"result"	"double"	53	0	0	0
5823	5821	"val"	"real"	24	0	1	1
5826	5825	"result"	"double"	53	0	0	0
5827	5825	"val"	"double"	53	0	1	1
5830	5829	"result"	"double"	53	0	0	0
5831	5829	"val"	"date"	0	0	1	1
5834	5833	"result"	"double"	53	0	0	0
5835	5833	"val"	"time"	1	0	1	1
5838	5837	"result"	"double"	53	0	0	0
5839	5837	"val"	"timestamp"	7	0	1	1
5842	5841	"result"	"double"	53	0	0	0
5843	5841	"val"	"tinyint"	8	0	1	1
5846	5845	"result"	"double"	53	0	0	0
5847	5845	"val"	"smallint"	16	0	1	1
5850	5849	"result"	"double"	53	0	0	0
5851	5849	"val"	"int"	32	0	1	1
5854	5853	"result"	"double"	53	0	0	0
5855	5853	"val"	"wrd"	64	0	1	1
5858	5857	"result"	"double"	53	0	0	0
5859	5857	"val"	"bigint"	64	0	1	1
5862	5861	"result"	"double"	53	0	0	0
5863	5861	"val"	"real"	24	0	1	1
5866	5865	"result"	"double"	53	0	0	0
5867	5865	"val"	"double"	53	0	1	1
5870	5869	"result"	"double"	53	0	0	0
5871	5869	"val"	"date"	0	0	1	1
5874	5873	"result"	"double"	53	0	0	0
5875	5873	"val"	"time"	1	0	1	1
5878	5877	"result"	"double"	53	0	0	0
5879	5877	"val"	"timestamp"	7	0	1	1
5882	5881	"result"	"double"	53	0	0	0
5883	5881	"val"	"tinyint"	8	0	1	1
5886	5885	"result"	"double"	53	0	0	0
5887	5885	"val"	"smallint"	16	0	1	1
5890	5889	"result"	"double"	53	0	0	0
5891	5889	"val"	"int"	32	0	1	1
5894	5893	"result"	"double"	53	0	0	0
5895	5893	"val"	"wrd"	64	0	1	1
5898	5897	"result"	"double"	53	0	0	0
5899	5897	"val"	"bigint"	64	0	1	1
5902	5901	"result"	"double"	53	0	0	0
5903	5901	"val"	"real"	24	0	1	1
5906	5905	"result"	"double"	53	0	0	0
5907	5905	"val"	"double"	53	0	1	1
5910	5909	"result"	"double"	53	0	0	0
5911	5909	"val"	"date"	0	0	1	1
5914	5913	"result"	"double"	53	0	0	0
5915	5913	"val"	"time"	1	0	1	1
5918	5917	"result"	"double"	53	0	0	0
5919	5917	"val"	"timestamp"	7	0	1	1
5922	5921	"result"	"double"	53	0	0	0
5923	5921	"val"	"tinyint"	8	0	1	1
5926	5925	"result"	"double"	53	0	0	0
5927	5925	"val"	"smallint"	16	0	1	1
5930	5929	"result"	"double"	53	0	0	0
5931	5929	"val"	"int"	32	0	1	1
5934	5933	"result"	"double"	53	0	0	0
5935	5933	"val"	"wrd"	64	0	1	1
5938	5937	"result"	"double"	53	0	0	0
5939	5937	"val"	"bigint"	64	0	1	1
5942	5941	"result"	"double"	53	0	0	0
5943	5941	"val"	"real"	24	0	1	1
5946	5945	"result"	"double"	53	0	0	0
5947	5945	"val"	"double"	53	0	1	1
5950	5949	"result"	"double"	53	0	0	0
5951	5949	"val"	"date"	0	0	1	1
5954	5953	"result"	"double"	53	0	0	0
5955	5953	"val"	"time"	1	0	1	1
5958	5957	"result"	"double"	53	0	0	0
5959	5957	"val"	"timestamp"	7	0	1	1
5962	5961	"result"	"tinyint"	8	0	0	0
5963	5961	"val"	"tinyint"	8	0	1	1
5966	5965	"result"	"smallint"	16	0	0	0
5967	5965	"val"	"smallint"	16	0	1	1
5970	5969	"result"	"int"	32	0	0	0
5971	5969	"val"	"int"	32	0	1	1
5974	5973	"result"	"wrd"	64	0	0	0
5975	5973	"val"	"wrd"	64	0	1	1
5978	5977	"result"	"bigint"	64	0	0	0
5979	5977	"val"	"bigint"	64	0	1	1
5982	5981	"result"	"decimal"	18	3	0	0
5983	5981	"val"	"decimal"	18	3	1	1
5986	5985	"result"	"real"	24	0	0	0
5987	5985	"val"	"real"	24	0	1	1
5990	5989	"result"	"double"	53	0	0	0
5991	5989	"val"	"double"	53	0	1	1
5994	5993	"result"	"date"	0	0	0	0
5995	5993	"val"	"date"	0	0	1	1
5998	5997	"result"	"time"	1	0	0	0
5999	5997	"val"	"time"	1	0	1	1
6002	6001	"result"	"timestamp"	7	0	0	0
6003	6001	"val"	"timestamp"	7	0	1	1
6006	6005	"result"	"tinyint"	8	0	0	0
6007	6005	"val"	"tinyint"	8	0	1	1
6008	6005	"q"	"double"	53	0	1	2
6011	6010	"result"	"smallint"	16	0	0	0
6012	6010	"val"	"smallint"	16	0	1	1
6013	6010	"q"	"double"	53	0	1	2
6016	6015	"result"	"int"	32	0	0	0
6017	6015	"val"	"int"	32	0	1	1
6018	6015	"q"	"double"	53	0	1	2
6021	6020	"result"	"wrd"	64	0	0	0
6022	6020	"val"	"wrd"	64	0	1	1
6023	6020	"q"	"double"	53	0	1	2
6026	6025	"result"	"bigint"	64	0	0	0
6027	6025	"val"	"bigint"	64	0	1	1
6028	6025	"q"	"double"	53	0	1	2
6031	6030	"result"	"decimal"	18	3	0	0
6032	6030	"val"	"decimal"	18	3	1	1
6033	6030	"q"	"double"	53	0	1	2
6036	6035	"result"	"real"	24	0	0	0
6037	6035	"val"	"real"	24	0	1	1
6038	6035	"q"	"double"	53	0	1	2
6041	6040	"result"	"double"	53	0	0	0
6042	6040	"val"	"double"	53	0	1	1
6043	6040	"q"	"double"	53	0	1	2
6046	6045	"result"	"date"	0	0	0	0
6047	6045	"val"	"date"	0	0	1	1
6048	6045	"q"	"double"	53	0	1	2
6051	6050	"result"	"time"	1	0	0	0
6052	6050	"val"	"time"	1	0	1	1
6053	6050	"q"	"double"	53	0	1	2
6056	6055	"result"	"timestamp"	7	0	0	0
6057	6055	"val"	"timestamp"	7	0	1	1
6058	6055	"q"	"double"	53	0	1	2
6061	6060	"result"	"tinyint"	8	0	0	0
6062	6060	"e1"	"tinyint"	8	0	1	1
6063	6060	"e2"	"tinyint"	8	0	1	2
6066	6065	"result"	"smallint"	16	0	0	0
6067	6065	"e1"	"smallint"	16	0	1	1
6068	6065	"e2"	"smallint"	16	0	1	2
6071	6070	"result"	"int"	32	0	0	0
6072	6070	"e1"	"int"	32	0	1	1
6073	6070	"e2"	"int"	32	0	1	2
6076	6075	"result"	"wrd"	64	0	0	0
6077	6075	"e1"	"wrd"	64	0	1	1
6078	6075	"e2"	"wrd"	64	0	1	2
6081	6080	"result"	"bigint"	64	0	0	0
6082	6080	"e1"	"bigint"	64	0	1	1
6083	6080	"e2"	"bigint"	64	0	1	2
6086	6085	"result"	"real"	24	0	0	0
6087	6085	"e1"	"real"	24	0	1	1
6088	6085	"e2"	"real"	24	0	1	2
6091	6090	"result"	"double"	53	0	0	0
6092	6090	"e1"	"double"	53	0	1	1
6093	6090	"e2"	"double"	53	0	1	2
6109	6108	"result"	"mbr"	0	0	0	0
6110	6108	"g"	"geometry"	0	0	1	1
6113	6112	"result"	"boolean"	1	0	0	0
6114	6112	"a"	"mbr"	0	0	1	1
6115	6112	"b"	"mbr"	0	0	1	2
6118	6117	"result"	"geometry"	0	0	0	0
6119	6117	"wkt"	"clob"	0	0	1	1
6120	6117	"srid"	"smallint"	16	0	1	2
6123	6122	"result"	"point"	0	0	0	0
6124	6122	"wkt"	"clob"	0	0	1	1
6125	6122	"srid"	"smallint"	16	0	1	2
6128	6127	"result"	"linestring"	0	0	0	0
6129	6127	"wkt"	"clob"	0	0	1	1
6130	6127	"srid"	"smallint"	16	0	1	2
6133	6132	"result"	"polygon"	0	0	0	0
6134	6132	"wkt"	"clob"	0	0	1	1
6135	6132	"srid"	"smallint"	16	0	1	2
6138	6137	"result"	"multipoint"	0	0	0	0
6139	6137	"wkt"	"clob"	0	0	1	1
6140	6137	"srid"	"smallint"	16	0	1	2
6143	6142	"result"	"multilinestring"	0	0	0	0
6144	6142	"wkt"	"clob"	0	0	1	1
6145	6142	"srid"	"smallint"	16	0	1	2
6148	6147	"result"	"multipolygon"	0	0	0	0
6149	6147	"wkt"	"clob"	0	0	1	1
6150	6147	"srid"	"smallint"	16	0	1	2
6153	6152	"result"	"multipolygon"	0	0	0	0
6154	6152	"wkt"	"clob"	0	0	1	1
6155	6152	"srid"	"smallint"	16	0	1	2
6158	6157	"result"	"polygon"	0	0	0	0
6159	6157	"wkt"	"clob"	0	0	1	1
6160	6157	"srid"	"smallint"	16	0	1	2
6163	6162	"result"	"clob"	0	0	0	0
6164	6162	"g"	"geometry"	0	0	1	1
6167	6166	"result"	"double"	53	0	0	0
6168	6166	"g"	"geometry"	0	0	1	1
6171	6170	"result"	"double"	53	0	0	0
6172	6170	"g"	"geometry"	0	0	1	1
6175	6174	"result"	"point"	0	0	0	0
6176	6174	"x"	"double"	53	0	1	1
6177	6174	"y"	"double"	53	0	1	2
6180	6179	"result"	"int"	32	0	0	0
6181	6179	"g"	"geometry"	0	0	1	1
6184	6183	"result"	"int"	32	0	0	0
6185	6183	"g"	"geometry"	0	0	1	1
6188	6187	"result"	"int"	32	0	0	0
6189	6187	"g"	"geometry"	0	0	1	1
6192	6191	"result"	"geometry"	0	0	0	0
6193	6191	"g"	"geometry"	0	0	1	1
6196	6195	"result"	"boolean"	1	0	0	0
6197	6195	"g"	"geometry"	0	0	1	1
6200	6199	"result"	"boolean"	1	0	0	0
6201	6199	"g"	"geometry"	0	0	1	1
6204	6203	"result"	"geometry"	0	0	0	0
6205	6203	"g"	"geometry"	0	0	1	1
6208	6207	"result"	"boolean"	1	0	0	0
6209	6207	"a"	"geometry"	0	0	1	1
6210	6207	"b"	"geometry"	0	0	1	2
6213	6212	"result"	"boolean"	1	0	0	0
6214	6212	"a"	"geometry"	0	0	1	1
6215	6212	"b"	"geometry"	0	0	1	2
6218	6217	"result"	"boolean"	1	0	0	0
6219	6217	"a"	"geometry"	0	0	1	1
6220	6217	"b"	"geometry"	0	0	1	2
6223	6222	"result"	"boolean"	1	0	0	0
6224	6222	"a"	"geometry"	0	0	1	1
6225	6222	"b"	"geometry"	0	0	1	2
6228	6227	"result"	"boolean"	1	0	0	0
6229	6227	"a"	"geometry"	0	0	1	1
6230	6227	"b"	"geometry"	0	0	1	2
6233	6232	"result"	"boolean"	1	0	0	0
6234	6232	"a"	"geometry"	0	0	1	1
6235	6232	"b"	"geometry"	0	0	1	2
6238	6237	"result"	"boolean"	1	0	0	0
6239	6237	"a"	"geometry"	0	0	1	1
6240	6237	"b"	"geometry"	0	0	1	2
6243	6242	"result"	"boolean"	1	0	0	0
6244	6242	"a"	"geometry"	0	0	1	1
6245	6242	"b"	"geometry"	0	0	1	2
6248	6247	"result"	"boolean"	1	0	0	0
6249	6247	"a"	"geometry"	0	0	1	1
6250	6247	"b"	"geometry"	0	0	1	2
6251	6247	"pattern"	"clob"	0	0	1	3
6254	6253	"result"	"double"	53	0	0	0
6255	6253	"g"	"geometry"	0	0	1	1
6258	6257	"result"	"double"	53	0	0	0
6259	6257	"g"	"geometry"	0	0	1	1
6262	6261	"result"	"double"	53	0	0	0
6263	6261	"a"	"geometry"	0	0	1	1
6264	6261	"b"	"geometry"	0	0	1	2
6267	6266	"result"	"geometry"	0	0	0	0
6268	6266	"a"	"geometry"	0	0	1	1
6269	6266	"distance"	"double"	53	0	1	2
6272	6271	"result"	"geometry"	0	0	0	0
6273	6271	"a"	"geometry"	0	0	1	1
6276	6275	"result"	"geometry"	0	0	0	0
6277	6275	"a"	"geometry"	0	0	1	1
6278	6275	"b"	"geometry"	0	0	1	2
6281	6280	"result"	"geometry"	0	0	0	0
6282	6280	"a"	"geometry"	0	0	1	1
6283	6280	"b"	"geometry"	0	0	1	2
6286	6285	"result"	"geometry"	0	0	0	0
6287	6285	"a"	"geometry"	0	0	1	1
6288	6285	"b"	"geometry"	0	0	1	2
6291	6290	"result"	"geometry"	0	0	0	0
6292	6290	"a"	"geometry"	0	0	1	1
6293	6290	"b"	"geometry"	0	0	1	2
6298	6297	"result"	"json"	0	0	0	0
6299	6297	"js"	"json"	0	0	1	1
6300	6297	"pathexpr"	"clob"	0	0	1	2
6303	6302	"result"	"json"	0	0	0	0
6304	6302	"js"	"json"	0	0	1	1
6305	6302	"name"	"tinyint"	8	0	1	2
6308	6307	"result"	"json"	0	0	0	0
6309	6307	"js"	"json"	0	0	1	1
6310	6307	"name"	"int"	32	0	1	2
6313	6312	"result"	"json"	0	0	0	0
6314	6312	"js"	"json"	0	0	1	1
6315	6312	"name"	"bigint"	64	0	1	2
6318	6317	"result"	"clob"	0	0	0	0
6319	6317	"js"	"json"	0	0	1	1
6320	6317	"e"	"clob"	0	0	1	2
6323	6322	"result"	"double"	53	0	0	0
6324	6322	"js"	"json"	0	0	1	1
6327	6326	"result"	"bigint"	64	0	0	0
6328	6326	"js"	"json"	0	0	1	1
6331	6330	"result"	"boolean"	1	0	0	0
6332	6330	"js"	"clob"	0	0	1	1
6335	6334	"result"	"boolean"	1	0	0	0
6336	6334	"js"	"clob"	0	0	1	1
6339	6338	"result"	"boolean"	1	0	0	0
6340	6338	"js"	"clob"	0	0	1	1
6343	6342	"result"	"boolean"	1	0	0	0
6344	6342	"js"	"json"	0	0	1	1
6347	6346	"result"	"boolean"	1	0	0	0
6348	6346	"js"	"json"	0	0	1	1
6351	6350	"result"	"boolean"	1	0	0	0
6352	6350	"js"	"json"	0	0	1	1
6355	6354	"result"	"int"	32	0	0	0
6356	6354	"js"	"json"	0	0	1	1
6359	6358	"result"	"json"	0	0	0	0
6360	6358	"js"	"json"	0	0	1	1
6363	6362	"result"	"json"	0	0	0	0
6364	6362	"js"	"json"	0	0	1	1
6367	6366	"result"	"clob"	0	0	0	0
6368	6366	"js"	"json"	0	0	1	1
6371	6370	"result"	"clob"	0	0	0	0
6372	6370	"js"	"clob"	0	0	1	1
6375	6374	"result"	"clob"	0	0	0	0
6376	6374	"js"	"int"	32	0	1	1
6379	6378	"result"	"clob"	0	0	0	0
6380	6378	"js"	"json"	0	0	1	1
6383	6382	"result"	"clob"	0	0	0	0
6384	6382	"x"	"clob"	0	0	1	1
6387	6386	"result"	"clob"	0	0	0	0
6388	6386	"x"	"double"	53	0	1	1
6391	6390	"result"	"clob"	0	0	0	0
6392	6390	"v"	"clob"	0	0	1	1
6396	6395	"result"	"uuid"	0	0	0	0
6399	6398	"result"	"uuid"	0	0	0	0
6400	6398	"u"	"uuid"	0	0	1	1
6403	6402	"result"	"uuid"	0	0	0	0
6404	6402	"u"	"clob"	0	0	1	1
6407	6406	"result"	"double"	53	0	0	0
6408	6406	"chi2"	"double"	53	0	1	1
6409	6406	"datapoints"	"double"	53	0	1	2
6412	6411	"dirname"	"clob"	0	0	1	0
6415	6414	"fname"	"clob"	0	0	1	0
6418	6417	"tname"	"clob"	0	0	1	0
6421	6420	"dirname"	"clob"	0	0	1	0
6422	6420	"pat"	"clob"	0	0	1	1
6425	6424	"schema"	"clob"	0	0	0	0
6426	6424	"table"	"clob"	0	0	0	1
6427	6424	"column"	"clob"	0	0	0	2
6428	6424	"type"	"clob"	0	0	0	3
6429	6424	"mode"	"clob"	0	0	0	4
6430	6424	"location"	"clob"	0	0	0	5
6431	6424	"count"	"bigint"	64	0	0	6
6432	6424	"typewidth"	"int"	32	0	0	7
6433	6424	"columnsize"	"bigint"	64	0	0	8
6434	6424	"heapsize"	"bigint"	64	0	0	9
6435	6424	"hashes"	"bigint"	64	0	0	10
6436	6424	"imprints"	"bigint"	64	0	0	11
6437	6424	"sorted"	"boolean"	1	0	0	12
6469	6468	"result"	"bigint"	64	0	0	0
6470	6468	"nme"	"clob"	0	0	1	1
6471	6468	"i"	"bigint"	64	0	1	2
6472	6468	"d"	"bigint"	64	0	1	3
6475	6474	"result"	"bigint"	64	0	0	0
6476	6474	"tpe"	"clob"	0	0	1	1
6477	6474	"i"	"bigint"	64	0	1	2
6478	6474	"w"	"int"	32	0	1	3
6481	6480	"result"	"bigint"	64	0	0	0
6482	6480	"b"	"boolean"	1	0	1	1
6483	6480	"i"	"bigint"	64	0	1	2
6486	6485	"result"	"bigint"	64	0	0	0
6487	6485	"i"	"bigint"	64	0	1	1
6488	6485	"nme"	"clob"	0	0	1	2
6491	6490	"schema"	"clob"	0	0	0	0
6492	6490	"table"	"clob"	0	0	0	1
6493	6490	"column"	"clob"	0	0	0	2
6494	6490	"type"	"clob"	0	0	0	3
6495	6490	"count"	"bigint"	64	0	0	4
6496	6490	"columnsize"	"bigint"	64	0	0	5
6497	6490	"heapsize"	"bigint"	64	0	0	6
6498	6490	"hashes"	"bigint"	64	0	0	7
6499	6490	"imprints"	"bigint"	64	0	0	8
6500	6490	"sorted"	"boolean"	1	0	0	9
6540	6539	"tbl"	"clob"	0	0	1	0
6543	6542	"sch"	"clob"	0	0	1	0
6544	6542	"tbl"	"clob"	0	0	1	1
6547	6546	"sch"	"clob"	0	0	1	0
6548	6546	"tbl"	"clob"	0	0	1	1
6549	6546	"col"	"clob"	0	0	1	2
6552	6551	"sample"	"bigint"	64	0	1	0
6555	6554	"tbl"	"clob"	0	0	1	0
6556	6554	"sample"	"bigint"	64	0	1	1
6559	6558	"sch"	"clob"	0	0	1	0
6560	6558	"tbl"	"clob"	0	0	1	1
6561	6558	"sample"	"bigint"	64	0	1	2
6564	6563	"sch"	"clob"	0	0	1	0
6565	6563	"tbl"	"clob"	0	0	1	1
6566	6563	"col"	"clob"	0	0	1	2
6567	6563	"sample"	"bigint"	64	0	1	3
6570	6569	"result"	"clob"	0	0	0	0
6571	6569	"src"	"clob"	0	0	1	1
6574	6573	"result"	"smallint"	16	0	0	0
6575	6573	"one"	"tinyint"	8	0	1	1
6576	6573	"two"	"tinyint"	8	0	1	2
6579	6578	"result"	"int"	32	0	0	0
6580	6578	"one"	"smallint"	16	0	1	1
6581	6578	"two"	"smallint"	16	0	1	2
6584	6583	"result"	"bigint"	64	0	0	0
6585	6583	"one"	"int"	32	0	1	1
6586	6583	"two"	"int"	32	0	1	2
6590	6589	"bam_repos"	"clob"	0	0	1	0
6591	6589	"dbschema"	"smallint"	16	0	1	1
6592	6589	"nr_threads"	"smallint"	16	0	1	2
6595	6594	"bam_files"	"clob"	0	0	1	0
6596	6594	"dbschema"	"smallint"	16	0	1	1
6597	6594	"nr_threads"	"smallint"	16	0	1	2
6600	6599	"bam_file"	"clob"	0	0	1	0
6601	6599	"dbschema"	"smallint"	16	0	1	1
6604	6603	"file_id"	"bigint"	64	0	1	0
6605	6603	"dbschema"	"smallint"	16	0	1	1
6608	6607	"result"	"boolean"	1	0	0	0
6609	6607	"flag"	"smallint"	16	0	1	1
6610	6607	"name"	"clob"	0	0	1	2
6613	6612	"result"	"clob"	0	0	0	0
6614	6612	"seq"	"clob"	0	0	1	1
6617	6616	"result"	"clob"	0	0	0	0
6618	6616	"qual"	"clob"	0	0	1	1
6621	6620	"result"	"int"	32	0	0	0
6622	6620	"cigar"	"clob"	0	0	1	1
6625	6624	"output_path"	"clob"	0	0	1	0
6628	6627	"output_path"	"clob"	0	0	1	0
6698	6697	"value"	"tinyint"	8	0	0	0
6699	6697	"first"	"tinyint"	8	0	1	1
6700	6697	"last"	"tinyint"	8	0	1	2
6703	6702	"value"	"tinyint"	8	0	0	0
6704	6702	"first"	"tinyint"	8	0	1	1
6705	6702	"last"	"tinyint"	8	0	1	2
6706	6702	"stepsize"	"tinyint"	8	0	1	3
6709	6708	"value"	"smallint"	16	0	0	0
6710	6708	"first"	"smallint"	16	0	1	1
6711	6708	"last"	"smallint"	16	0	1	2
6714	6713	"value"	"smallint"	16	0	0	0
6715	6713	"first"	"smallint"	16	0	1	1
6716	6713	"last"	"smallint"	16	0	1	2
6717	6713	"stepsize"	"smallint"	16	0	1	3
6720	6719	"value"	"int"	32	0	0	0
6721	6719	"first"	"int"	32	0	1	1
6722	6719	"last"	"int"	32	0	1	2
6725	6724	"value"	"int"	32	0	0	0
6726	6724	"first"	"int"	32	0	1	1
6727	6724	"last"	"int"	32	0	1	2
6728	6724	"stepsize"	"int"	32	0	1	3
6731	6730	"value"	"bigint"	64	0	0	0
6732	6730	"first"	"bigint"	64	0	1	1
6733	6730	"last"	"bigint"	64	0	1	2
6736	6735	"value"	"bigint"	64	0	0	0
6737	6735	"first"	"bigint"	64	0	1	1
6738	6735	"last"	"bigint"	64	0	1	2
6739	6735	"stepsize"	"bigint"	64	0	1	3
6742	6741	"value"	"real"	24	0	0	0
6743	6741	"first"	"real"	24	0	1	1
6744	6741	"last"	"real"	24	0	1	2
6745	6741	"stepsize"	"real"	24	0	1	3
6748	6747	"value"	"double"	53	0	0	0
6749	6747	"first"	"double"	53	0	1	1
6750	6747	"last"	"double"	53	0	1	2
6751	6747	"stepsize"	"double"	53	0	1	3
6754	6753	"value"	"decimal"	10	2	0	0
6755	6753	"first"	"decimal"	10	2	1	1
6756	6753	"last"	"decimal"	10	2	1	2
6757	6753	"stepsize"	"decimal"	10	2	1	3
6760	6759	"value"	"timestamp"	7	0	0	0
6761	6759	"first"	"timestamp"	7	0	1	1
6762	6759	"last"	"timestamp"	7	0	1	2
6763	6759	"stepsize"	"sec_interval"	13	0	1	3
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."auths" (
	"id"      INTEGER,
	"name"    VARCHAR(1024),
	"grantor" INTEGER
);
COPY 3 RECORDS INTO "sys"."auths" FROM stdin USING DELIMITERS '\t','\n','"';
1	"public"	0
2	"sysadmin"	0
3	"monetdb"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."connections" (
	"id"       INTEGER,
	"server"   CHAR(1024),
	"port"     INTEGER,
	"db"       CHAR(64),
	"db_alias" CHAR(1024),
	"user"     CHAR(1024),
	"password" CHAR(1024),
	"language" CHAR(1024)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."db_user_info" (
	"name"           VARCHAR(1024),
	"fullname"       VARCHAR(2048),
	"default_schema" INTEGER
);
COPY 1 RECORDS INTO "sys"."db_user_info" FROM stdin USING DELIMITERS '\t','\n','"';
"monetdb"	"MonetDB Admin"	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."dependencies" (
	"id"          INTEGER,
	"depend_id"   INTEGER,
	"depend_type" SMALLINT
);
COPY 229 RECORDS INTO "sys"."dependencies" FROM stdin USING DELIMITERS '\t','\n','"';
363	5269	7
364	5269	7
866	5269	7
363	5273	7
364	5273	7
866	5273	7
5422	5451	5
5432	5462	5
5422	5480	5
5432	5480	5
5491	5519	5
2003	5552	7
2001	5552	7
2002	5552	7
5233	5552	7
5242	5557	7
5240	5557	7
5241	5557	7
2005	5557	7
2001	5557	7
2003	5557	7
5201	5562	7
2047	5562	7
2046	5562	7
2049	5562	7
2048	5562	7
5201	5567	7
2088	5567	7
2086	5567	7
2090	5567	7
2083	5567	7
2079	5567	7
34	5567	7
5201	5572	7
2047	5572	7
2046	5572	7
2049	5572	7
2092	5572	7
2091	5572	7
2048	5572	7
2093	5572	7
2094	5572	7
5201	5577	7
2081	5577	7
2079	5577	7
2084	5577	7
2080	5577	7
2083	5577	7
5201	5582	7
2047	5582	7
2046	5582	7
2049	5582	7
2017	5582	7
2016	5582	7
2048	5582	7
2018	5582	7
5211	5587	7
2047	5587	7
2046	5587	7
2049	5587	7
2048	5587	7
5201	5587	7
5211	5592	7
2081	5592	7
2079	5592	7
2084	5592	7
2103	5592	7
2102	5592	7
2104	5592	7
2080	5592	7
2083	5592	7
147	5592	7
31	5592	7
30	5592	7
32	5592	7
5211	5597	7
2088	5597	7
2086	5597	7
2090	5597	7
2083	5597	7
2079	5597	7
2087	5597	7
2103	5597	7
2102	5597	7
2104	5597	7
34	5597	7
31	5597	7
30	5597	7
32	5597	7
5211	5602	7
2047	5602	7
2046	5602	7
2049	5602	7
2048	5602	7
2017	5602	7
2016	5602	7
2018	5602	7
5211	5607	7
2047	5607	7
2046	5607	7
2049	5607	7
2092	5607	7
2091	5607	7
2048	5607	7
2093	5607	7
5201	5612	7
2047	5612	7
2046	5612	7
2049	5612	7
2017	5612	7
2016	5612	7
2048	5612	7
2018	5612	7
5201	5617	7
2047	5617	7
2046	5617	7
2049	5617	7
2092	5617	7
2091	5617	7
2048	5617	7
2093	5617	7
2018	5622	7
2016	5622	7
2017	5622	7
2047	5622	7
2046	5622	7
2049	5622	7
2048	5622	7
2018	5627	7
2016	5627	7
2017	5627	7
2047	5627	7
2046	5627	7
2049	5627	7
2092	5627	7
2091	5627	7
2048	5627	7
2093	5627	7
2083	5632	7
2079	5632	7
2080	5632	7
2084	5632	7
5641	5655	5
111	5674	7
37	5674	7
35	5674	7
1007	5674	7
993	5674	7
206	5674	7
1004	5674	7
207	5674	7
32	5686	7
427	5686	7
111	5686	7
113	5686	7
34	5686	7
5681	5686	7
5727	5735	5
5737	5743	5
5763	5781	5
6424	6452	5
6454	6466	13
6464	6466	13
6455	6466	13
6456	6466	13
6457	6466	13
6458	6466	13
6459	6466	13
6460	6466	13
6461	6466	13
6462	6466	13
6463	6466	13
32	6468	7
208	6468	7
214	6468	7
110	6474	7
33	6474	7
207	6474	7
208	6474	7
32	6480	7
208	6480	7
111	6485	7
32	6485	7
323	6485	7
6454	6490	7
6464	6490	7
6455	6490	7
6456	6490	7
6457	6490	7
6459	6490	7
6460	6490	7
6461	6490	7
6462	6490	7
6463	6490	7
6468	6490	7
6474	6490	7
6480	6490	7
6485	6490	7
6490	6512	5
6490	6522	5
47	6522	5
54	6522	5
50	6522	5
34	6522	5
32	6522	5
208	6522	5
6630	6637	10
6630	6636	4
6640	6648	10
6641	6648	10
6641	6650	10
6640	6647	4
6641	6647	4
6636	6649	11
6641	6649	11
6653	6667	10
6654	6667	10
6654	6669	10
6653	6666	4
6654	6666	4
6636	6668	11
6654	6668	11
6672	6679	10
6673	6679	10
6673	6681	10
6672	6678	4
6673	6678	4
6636	6680	11
6673	6680	11
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."functions" (
	"id"          INTEGER,
	"name"        VARCHAR(256),
	"func"        VARCHAR(8196),
	"mod"         VARCHAR(8196),
	"language"    INTEGER,
	"type"        INTEGER,
	"side_effect" BOOLEAN,
	"varres"      BOOLEAN,
	"vararg"      BOOLEAN,
	"schema_id"   INTEGER
);
COPY 1352 RECORDS INTO "sys"."functions" FROM stdin USING DELIMITERS '\t','\n','"';
28	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
29	"not_uniques"	"not_uniques"	"sql"	0	1	false	false	false	0
30	"hash"	"hash"	"mkey"	0	1	false	false	false	0
31	"rotate_xor_hash"	"rotate_xor_hash"	"calc"	0	1	false	false	false	0
32	"="	"="	"calc"	0	1	false	false	false	0
33	"<>"	"!="	"calc"	0	1	false	false	false	0
34	"isnull"	"isnil"	"calc"	0	1	false	false	false	0
35	">"	">"	"calc"	0	1	false	false	false	0
36	">="	">="	"calc"	0	1	false	false	false	0
37	"<"	"<"	"calc"	0	1	false	false	false	0
38	"<="	"<="	"calc"	0	1	false	false	false	0
42	"in"	"in"	"calc"	0	1	false	false	false	0
43	"identity"	"identity"	"calc"	0	1	false	false	false	0
44	"rowid"	"identity"	"calc"	0	1	false	false	false	0
45	"rowid"	"rowid"	"calc"	0	1	false	false	false	0
48	"sql_min"	"min"	"calc"	0	1	false	false	false	0
49	"sql_max"	"max"	"calc"	0	1	false	false	false	0
50	"ifthenelse"	"ifthenelse"	"calc"	0	1	false	false	false	0
68	"mod"	"%"	"calc"	0	1	false	false	false	0
69	"mod"	"%"	"calc"	0	1	false	false	false	0
70	"mod"	"%"	"calc"	0	1	false	false	false	0
71	"mod"	"%"	"calc"	0	1	false	false	false	0
72	"mod"	"%"	"calc"	0	1	false	false	false	0
73	"mod"	"%"	"calc"	0	1	false	false	false	0
74	"mod"	"%"	"calc"	0	1	false	false	false	0
75	"mod"	"%"	"calc"	0	1	false	false	false	0
76	"mod"	"%"	"calc"	0	1	false	false	false	0
77	"mod"	"%"	"calc"	0	1	false	false	false	0
78	"mod"	"%"	"calc"	0	1	false	false	false	0
79	"mod"	"%"	"calc"	0	1	false	false	false	0
87	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
88	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
89	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
90	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
91	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
92	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
93	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
94	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
95	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
96	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
97	"rank"	"rank_grp"	"calc"	0	1	false	false	false	0
98	"dense_rank"	"dense_rank_grp"	"calc"	0	1	false	false	false	0
99	"percent_rank"	"precent_rank_grp"	"calc"	0	1	false	false	false	0
100	"cume_dist"	"cume_dist_grp"	"calc"	0	1	false	false	false	0
101	"row_number"	"mark_grp"	"calc"	0	1	false	false	false	0
102	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
103	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
104	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
105	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
106	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
107	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
108	"lag"	"lag_grp"	"calc"	0	1	false	false	false	0
109	"lead"	"lead_grp"	"calc"	0	1	false	false	false	0
110	"and"	"and"	"calc"	0	1	false	false	false	0
111	"or"	"or"	"calc"	0	1	false	false	false	0
112	"xor"	"xor"	"calc"	0	1	false	false	false	0
113	"not"	"not"	"calc"	0	1	false	false	false	0
114	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
115	"sql_add"	"+"	"calc"	0	1	false	false	false	0
116	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
117	"sql_div"	"/"	"calc"	0	1	false	false	false	0
118	"bit_and"	"and"	"calc"	0	1	false	false	false	0
119	"bit_or"	"or"	"calc"	0	1	false	false	false	0
120	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
121	"bit_not"	"not"	"calc"	0	1	false	false	false	0
122	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
123	"right_shift"	">>"	"calc"	0	1	false	false	false	0
124	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
125	"abs"	"abs"	"calc"	0	1	false	false	false	0
126	"sign"	"sign"	"calc"	0	1	false	false	false	0
127	"scale_up"	"*"	"calc"	0	1	false	false	false	0
128	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
129	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
130	"sql_add"	"+"	"calc"	0	1	false	false	false	0
131	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
132	"sql_div"	"/"	"calc"	0	1	false	false	false	0
133	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
134	"sql_add"	"+"	"calc"	0	1	false	false	false	0
135	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
136	"sql_div"	"/"	"calc"	0	1	false	false	false	0
137	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
138	"sql_add"	"+"	"calc"	0	1	false	false	false	0
139	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
140	"sql_div"	"/"	"calc"	0	1	false	false	false	0
141	"bit_and"	"and"	"calc"	0	1	false	false	false	0
142	"bit_or"	"or"	"calc"	0	1	false	false	false	0
143	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
144	"bit_not"	"not"	"calc"	0	1	false	false	false	0
145	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
146	"right_shift"	">>"	"calc"	0	1	false	false	false	0
147	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
148	"abs"	"abs"	"calc"	0	1	false	false	false	0
149	"sign"	"sign"	"calc"	0	1	false	false	false	0
150	"scale_up"	"*"	"calc"	0	1	false	false	false	0
151	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
152	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
153	"sql_add"	"+"	"calc"	0	1	false	false	false	0
154	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
155	"sql_div"	"/"	"calc"	0	1	false	false	false	0
156	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
157	"sql_add"	"+"	"calc"	0	1	false	false	false	0
158	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
159	"sql_div"	"/"	"calc"	0	1	false	false	false	0
160	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
161	"sql_add"	"+"	"calc"	0	1	false	false	false	0
162	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
163	"sql_div"	"/"	"calc"	0	1	false	false	false	0
164	"bit_and"	"and"	"calc"	0	1	false	false	false	0
165	"bit_or"	"or"	"calc"	0	1	false	false	false	0
166	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
167	"bit_not"	"not"	"calc"	0	1	false	false	false	0
168	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
169	"right_shift"	">>"	"calc"	0	1	false	false	false	0
170	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
171	"abs"	"abs"	"calc"	0	1	false	false	false	0
172	"sign"	"sign"	"calc"	0	1	false	false	false	0
173	"scale_up"	"*"	"calc"	0	1	false	false	false	0
174	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
175	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
176	"sql_add"	"+"	"calc"	0	1	false	false	false	0
177	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
178	"sql_div"	"/"	"calc"	0	1	false	false	false	0
179	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
180	"sql_add"	"+"	"calc"	0	1	false	false	false	0
181	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
182	"sql_div"	"/"	"calc"	0	1	false	false	false	0
183	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
184	"sql_add"	"+"	"calc"	0	1	false	false	false	0
185	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
186	"sql_div"	"/"	"calc"	0	1	false	false	false	0
187	"bit_and"	"and"	"calc"	0	1	false	false	false	0
188	"bit_or"	"or"	"calc"	0	1	false	false	false	0
189	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
190	"bit_not"	"not"	"calc"	0	1	false	false	false	0
191	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
192	"right_shift"	">>"	"calc"	0	1	false	false	false	0
193	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
194	"abs"	"abs"	"calc"	0	1	false	false	false	0
195	"sign"	"sign"	"calc"	0	1	false	false	false	0
196	"scale_up"	"*"	"calc"	0	1	false	false	false	0
197	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
198	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
199	"sql_add"	"+"	"calc"	0	1	false	false	false	0
200	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
201	"sql_div"	"/"	"calc"	0	1	false	false	false	0
202	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
203	"sql_add"	"+"	"calc"	0	1	false	false	false	0
204	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
205	"sql_div"	"/"	"calc"	0	1	false	false	false	0
206	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
207	"sql_add"	"+"	"calc"	0	1	false	false	false	0
208	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
209	"sql_div"	"/"	"calc"	0	1	false	false	false	0
210	"bit_and"	"and"	"calc"	0	1	false	false	false	0
211	"bit_or"	"or"	"calc"	0	1	false	false	false	0
212	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
213	"bit_not"	"not"	"calc"	0	1	false	false	false	0
214	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
215	"right_shift"	">>"	"calc"	0	1	false	false	false	0
216	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
217	"abs"	"abs"	"calc"	0	1	false	false	false	0
218	"sign"	"sign"	"calc"	0	1	false	false	false	0
219	"scale_up"	"*"	"calc"	0	1	false	false	false	0
220	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
221	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
222	"sql_add"	"+"	"calc"	0	1	false	false	false	0
223	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
224	"sql_div"	"/"	"calc"	0	1	false	false	false	0
225	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
226	"sql_add"	"+"	"calc"	0	1	false	false	false	0
227	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
228	"sql_div"	"/"	"calc"	0	1	false	false	false	0
229	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
230	"sql_add"	"+"	"calc"	0	1	false	false	false	0
231	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
232	"sql_div"	"/"	"calc"	0	1	false	false	false	0
233	"bit_and"	"and"	"calc"	0	1	false	false	false	0
234	"bit_or"	"or"	"calc"	0	1	false	false	false	0
235	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
236	"bit_not"	"not"	"calc"	0	1	false	false	false	0
237	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
238	"right_shift"	">>"	"calc"	0	1	false	false	false	0
239	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
240	"abs"	"abs"	"calc"	0	1	false	false	false	0
241	"sign"	"sign"	"calc"	0	1	false	false	false	0
242	"scale_up"	"*"	"calc"	0	1	false	false	false	0
243	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
244	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
245	"sql_add"	"+"	"calc"	0	1	false	false	false	0
246	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
247	"sql_div"	"/"	"calc"	0	1	false	false	false	0
248	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
249	"sql_add"	"+"	"calc"	0	1	false	false	false	0
250	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
251	"sql_div"	"/"	"calc"	0	1	false	false	false	0
252	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
253	"sql_add"	"+"	"calc"	0	1	false	false	false	0
254	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
255	"sql_div"	"/"	"calc"	0	1	false	false	false	0
256	"bit_and"	"and"	"calc"	0	1	false	false	false	0
257	"bit_or"	"or"	"calc"	0	1	false	false	false	0
258	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
259	"bit_not"	"not"	"calc"	0	1	false	false	false	0
260	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
261	"right_shift"	">>"	"calc"	0	1	false	false	false	0
262	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
263	"abs"	"abs"	"calc"	0	1	false	false	false	0
264	"sign"	"sign"	"calc"	0	1	false	false	false	0
265	"scale_up"	"*"	"calc"	0	1	false	false	false	0
266	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
267	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
268	"sql_add"	"+"	"calc"	0	1	false	false	false	0
269	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
270	"sql_div"	"/"	"calc"	0	1	false	false	false	0
271	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
272	"sql_add"	"+"	"calc"	0	1	false	false	false	0
273	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
274	"sql_div"	"/"	"calc"	0	1	false	false	false	0
275	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
276	"sql_add"	"+"	"calc"	0	1	false	false	false	0
277	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
278	"sql_div"	"/"	"calc"	0	1	false	false	false	0
279	"bit_and"	"and"	"calc"	0	1	false	false	false	0
280	"bit_or"	"or"	"calc"	0	1	false	false	false	0
281	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
282	"bit_not"	"not"	"calc"	0	1	false	false	false	0
283	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
284	"right_shift"	">>"	"calc"	0	1	false	false	false	0
285	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
286	"abs"	"abs"	"calc"	0	1	false	false	false	0
287	"sign"	"sign"	"calc"	0	1	false	false	false	0
288	"scale_up"	"*"	"calc"	0	1	false	false	false	0
289	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
290	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
291	"sql_add"	"+"	"calc"	0	1	false	false	false	0
292	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
293	"sql_div"	"/"	"calc"	0	1	false	false	false	0
294	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
295	"sql_add"	"+"	"calc"	0	1	false	false	false	0
296	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
297	"sql_div"	"/"	"calc"	0	1	false	false	false	0
298	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
299	"sql_add"	"+"	"calc"	0	1	false	false	false	0
300	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
301	"sql_div"	"/"	"calc"	0	1	false	false	false	0
302	"bit_and"	"and"	"calc"	0	1	false	false	false	0
303	"bit_or"	"or"	"calc"	0	1	false	false	false	0
304	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
305	"bit_not"	"not"	"calc"	0	1	false	false	false	0
306	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
307	"right_shift"	">>"	"calc"	0	1	false	false	false	0
308	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
309	"abs"	"abs"	"calc"	0	1	false	false	false	0
310	"sign"	"sign"	"calc"	0	1	false	false	false	0
311	"scale_up"	"*"	"calc"	0	1	false	false	false	0
312	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
313	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
314	"sql_add"	"+"	"calc"	0	1	false	false	false	0
315	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
316	"sql_div"	"/"	"calc"	0	1	false	false	false	0
317	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
318	"sql_add"	"+"	"calc"	0	1	false	false	false	0
319	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
320	"sql_div"	"/"	"calc"	0	1	false	false	false	0
321	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
322	"sql_add"	"+"	"calc"	0	1	false	false	false	0
323	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
324	"sql_div"	"/"	"calc"	0	1	false	false	false	0
325	"bit_and"	"and"	"calc"	0	1	false	false	false	0
326	"bit_or"	"or"	"calc"	0	1	false	false	false	0
327	"bit_xor"	"xor"	"calc"	0	1	false	false	false	0
328	"bit_not"	"not"	"calc"	0	1	false	false	false	0
329	"left_shift"	"<<"	"calc"	0	1	false	false	false	0
330	"right_shift"	">>"	"calc"	0	1	false	false	false	0
331	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
332	"abs"	"abs"	"calc"	0	1	false	false	false	0
333	"sign"	"sign"	"calc"	0	1	false	false	false	0
334	"scale_up"	"*"	"calc"	0	1	false	false	false	0
335	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
336	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
337	"sql_add"	"+"	"calc"	0	1	false	false	false	0
338	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
339	"sql_div"	"/"	"calc"	0	1	false	false	false	0
340	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
341	"sql_add"	"+"	"calc"	0	1	false	false	false	0
342	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
343	"sql_div"	"/"	"calc"	0	1	false	false	false	0
344	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
345	"sql_add"	"+"	"calc"	0	1	false	false	false	0
346	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
347	"sql_div"	"/"	"calc"	0	1	false	false	false	0
348	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
349	"abs"	"abs"	"calc"	0	1	false	false	false	0
350	"sign"	"sign"	"calc"	0	1	false	false	false	0
351	"scale_up"	"*"	"calc"	0	1	false	false	false	0
352	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
353	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
354	"sql_add"	"+"	"calc"	0	1	false	false	false	0
355	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
356	"sql_div"	"/"	"calc"	0	1	false	false	false	0
357	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
358	"sql_add"	"+"	"calc"	0	1	false	false	false	0
359	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
360	"sql_div"	"/"	"calc"	0	1	false	false	false	0
361	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
362	"sql_add"	"+"	"calc"	0	1	false	false	false	0
363	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
364	"sql_div"	"/"	"calc"	0	1	false	false	false	0
365	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
366	"abs"	"abs"	"calc"	0	1	false	false	false	0
367	"sign"	"sign"	"calc"	0	1	false	false	false	0
368	"scale_up"	"*"	"calc"	0	1	false	false	false	0
369	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
370	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
371	"sql_add"	"+"	"calc"	0	1	false	false	false	0
372	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
373	"sql_div"	"/"	"calc"	0	1	false	false	false	0
374	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
375	"sql_add"	"+"	"calc"	0	1	false	false	false	0
376	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
377	"sql_div"	"/"	"calc"	0	1	false	false	false	0
378	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
379	"sql_add"	"+"	"calc"	0	1	false	false	false	0
380	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
381	"sql_div"	"/"	"calc"	0	1	false	false	false	0
382	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
383	"abs"	"abs"	"calc"	0	1	false	false	false	0
384	"sign"	"sign"	"calc"	0	1	false	false	false	0
385	"scale_up"	"*"	"calc"	0	1	false	false	false	0
386	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
387	"sql_sub"	"-"	"calc"	0	1	false	false	false	0
388	"sql_add"	"+"	"calc"	0	1	false	false	false	0
389	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
390	"sql_div"	"/"	"calc"	0	1	false	false	false	0
391	"sql_neg"	"-"	"calc"	0	1	false	false	false	0
392	"abs"	"abs"	"calc"	0	1	false	false	false	0
393	"sign"	"sign"	"calc"	0	1	false	false	false	0
394	"scale_up"	"*"	"calc"	0	1	false	false	false	0
395	"scale_down"	"dec_round"	"sql"	0	1	false	false	false	0
396	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
397	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
398	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
399	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
400	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
401	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
402	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
403	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
404	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
405	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
406	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
407	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
408	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
409	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
410	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
411	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
412	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
413	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
414	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
415	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
416	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
417	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
418	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
419	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
420	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
421	"sql_mul"	"*"	"calc"	0	1	false	false	false	0
422	"round"	"round"	"sql"	0	1	false	false	false	0
423	"round"	"round"	"sql"	0	1	false	false	false	0
424	"round"	"round"	"sql"	0	1	false	false	false	0
425	"round"	"round"	"sql"	0	1	false	false	false	0
426	"round"	"round"	"sql"	0	1	false	false	false	0
427	"round"	"round"	"sql"	0	1	false	false	false	0
428	"scale_up"	"*"	"calc"	0	1	false	false	false	0
429	"scale_up"	"*"	"calc"	0	1	false	false	false	0
430	"scale_up"	"*"	"calc"	0	1	false	false	false	0
431	"scale_up"	"*"	"calc"	0	1	false	false	false	0
432	"scale_up"	"*"	"calc"	0	1	false	false	false	0
433	"scale_up"	"*"	"calc"	0	1	false	false	false	0
434	"scale_up"	"*"	"calc"	0	1	false	false	false	0
435	"scale_up"	"*"	"calc"	0	1	false	false	false	0
436	"scale_up"	"*"	"calc"	0	1	false	false	false	0
437	"scale_up"	"*"	"calc"	0	1	false	false	false	0
438	"scale_up"	"*"	"calc"	0	1	false	false	false	0
439	"scale_up"	"*"	"calc"	0	1	false	false	false	0
440	"scale_up"	"*"	"calc"	0	1	false	false	false	0
441	"scale_up"	"*"	"calc"	0	1	false	false	false	0
442	"scale_up"	"*"	"calc"	0	1	false	false	false	0
443	"scale_up"	"*"	"calc"	0	1	false	false	false	0
444	"scale_up"	"*"	"calc"	0	1	false	false	false	0
445	"scale_up"	"*"	"calc"	0	1	false	false	false	0
446	"scale_up"	"*"	"calc"	0	1	false	false	false	0
447	"scale_up"	"*"	"calc"	0	1	false	false	false	0
448	"scale_up"	"*"	"calc"	0	1	false	false	false	0
449	"scale_up"	"*"	"calc"	0	1	false	false	false	0
450	"scale_up"	"*"	"calc"	0	1	false	false	false	0
451	"scale_up"	"*"	"calc"	0	1	false	false	false	0
452	"scale_up"	"*"	"calc"	0	1	false	false	false	0
453	"scale_up"	"*"	"calc"	0	1	false	false	false	0
454	"scale_up"	"*"	"calc"	0	1	false	false	false	0
455	"scale_up"	"*"	"calc"	0	1	false	false	false	0
456	"scale_up"	"*"	"calc"	0	1	false	false	false	0
457	"scale_up"	"*"	"calc"	0	1	false	false	false	0
458	"scale_up"	"*"	"calc"	0	1	false	false	false	0
459	"scale_up"	"*"	"calc"	0	1	false	false	false	0
460	"scale_up"	"*"	"calc"	0	1	false	false	false	0
461	"scale_up"	"*"	"calc"	0	1	false	false	false	0
462	"scale_up"	"*"	"calc"	0	1	false	false	false	0
463	"scale_up"	"*"	"calc"	0	1	false	false	false	0
464	"scale_up"	"*"	"calc"	0	1	false	false	false	0
465	"scale_up"	"*"	"calc"	0	1	false	false	false	0
466	"scale_up"	"*"	"calc"	0	1	false	false	false	0
467	"scale_up"	"*"	"calc"	0	1	false	false	false	0
468	"scale_up"	"*"	"calc"	0	1	false	false	false	0
469	"scale_up"	"*"	"calc"	0	1	false	false	false	0
470	"scale_up"	"*"	"calc"	0	1	false	false	false	0
471	"scale_up"	"*"	"calc"	0	1	false	false	false	0
472	"scale_up"	"*"	"calc"	0	1	false	false	false	0
473	"scale_up"	"*"	"calc"	0	1	false	false	false	0
474	"scale_up"	"*"	"calc"	0	1	false	false	false	0
475	"scale_up"	"*"	"calc"	0	1	false	false	false	0
476	"scale_up"	"*"	"calc"	0	1	false	false	false	0
477	"scale_up"	"*"	"calc"	0	1	false	false	false	0
478	"scale_up"	"*"	"calc"	0	1	false	false	false	0
479	"scale_up"	"*"	"calc"	0	1	false	false	false	0
480	"scale_up"	"*"	"calc"	0	1	false	false	false	0
481	"scale_up"	"*"	"calc"	0	1	false	false	false	0
482	"scale_up"	"*"	"calc"	0	1	false	false	false	0
483	"scale_up"	"*"	"calc"	0	1	false	false	false	0
484	"scale_up"	"*"	"calc"	0	1	false	false	false	0
485	"scale_up"	"*"	"calc"	0	1	false	false	false	0
486	"scale_up"	"*"	"calc"	0	1	false	false	false	0
487	"scale_up"	"*"	"calc"	0	1	false	false	false	0
488	"scale_up"	"*"	"calc"	0	1	false	false	false	0
489	"scale_up"	"*"	"calc"	0	1	false	false	false	0
490	"scale_up"	"*"	"calc"	0	1	false	false	false	0
491	"scale_up"	"*"	"calc"	0	1	false	false	false	0
492	"scale_up"	"*"	"calc"	0	1	false	false	false	0
493	"scale_up"	"*"	"calc"	0	1	false	false	false	0
494	"scale_up"	"*"	"calc"	0	1	false	false	false	0
495	"scale_up"	"*"	"calc"	0	1	false	false	false	0
496	"scale_up"	"*"	"calc"	0	1	false	false	false	0
497	"scale_up"	"*"	"calc"	0	1	false	false	false	0
498	"scale_up"	"*"	"calc"	0	1	false	false	false	0
499	"scale_up"	"*"	"calc"	0	1	false	false	false	0
500	"scale_up"	"*"	"calc"	0	1	false	false	false	0
501	"scale_up"	"*"	"calc"	0	1	false	false	false	0
502	"scale_up"	"*"	"calc"	0	1	false	false	false	0
503	"scale_up"	"*"	"calc"	0	1	false	false	false	0
504	"scale_up"	"*"	"calc"	0	1	false	false	false	0
505	"scale_up"	"*"	"calc"	0	1	false	false	false	0
506	"scale_up"	"*"	"calc"	0	1	false	false	false	0
507	"scale_up"	"*"	"calc"	0	1	false	false	false	0
508	"scale_up"	"*"	"calc"	0	1	false	false	false	0
509	"scale_up"	"*"	"calc"	0	1	false	false	false	0
510	"scale_up"	"*"	"calc"	0	1	false	false	false	0
511	"scale_up"	"*"	"calc"	0	1	false	false	false	0
512	"scale_up"	"*"	"calc"	0	1	false	false	false	0
513	"scale_up"	"*"	"calc"	0	1	false	false	false	0
514	"scale_up"	"*"	"calc"	0	1	false	false	false	0
515	"scale_up"	"*"	"calc"	0	1	false	false	false	0
516	"scale_up"	"*"	"calc"	0	1	false	false	false	0
517	"scale_up"	"*"	"calc"	0	1	false	false	false	0
518	"scale_up"	"*"	"calc"	0	1	false	false	false	0
519	"scale_up"	"*"	"calc"	0	1	false	false	false	0
520	"scale_up"	"*"	"calc"	0	1	false	false	false	0
521	"scale_up"	"*"	"calc"	0	1	false	false	false	0
522	"scale_up"	"*"	"calc"	0	1	false	false	false	0
523	"scale_up"	"*"	"calc"	0	1	false	false	false	0
524	"scale_up"	"*"	"calc"	0	1	false	false	false	0
525	"scale_up"	"*"	"calc"	0	1	false	false	false	0
526	"scale_up"	"*"	"calc"	0	1	false	false	false	0
527	"scale_up"	"*"	"calc"	0	1	false	false	false	0
528	"scale_up"	"*"	"calc"	0	1	false	false	false	0
529	"scale_up"	"*"	"calc"	0	1	false	false	false	0
530	"scale_up"	"*"	"calc"	0	1	false	false	false	0
531	"scale_up"	"*"	"calc"	0	1	false	false	false	0
532	"scale_up"	"*"	"calc"	0	1	false	false	false	0
533	"scale_up"	"*"	"calc"	0	1	false	false	false	0
534	"scale_up"	"*"	"calc"	0	1	false	false	false	0
535	"scale_up"	"*"	"calc"	0	1	false	false	false	0
536	"scale_up"	"*"	"calc"	0	1	false	false	false	0
537	"scale_up"	"*"	"calc"	0	1	false	false	false	0
538	"scale_up"	"*"	"calc"	0	1	false	false	false	0
539	"scale_up"	"*"	"calc"	0	1	false	false	false	0
540	"scale_up"	"*"	"calc"	0	1	false	false	false	0
541	"scale_up"	"*"	"calc"	0	1	false	false	false	0
542	"scale_up"	"*"	"calc"	0	1	false	false	false	0
543	"scale_up"	"*"	"calc"	0	1	false	false	false	0
544	"scale_up"	"*"	"calc"	0	1	false	false	false	0
545	"scale_up"	"*"	"calc"	0	1	false	false	false	0
546	"scale_up"	"*"	"calc"	0	1	false	false	false	0
547	"scale_up"	"*"	"calc"	0	1	false	false	false	0
548	"scale_up"	"*"	"calc"	0	1	false	false	false	0
549	"scale_up"	"*"	"calc"	0	1	false	false	false	0
550	"scale_up"	"*"	"calc"	0	1	false	false	false	0
551	"scale_up"	"*"	"calc"	0	1	false	false	false	0
552	"scale_up"	"*"	"calc"	0	1	false	false	false	0
553	"scale_up"	"*"	"calc"	0	1	false	false	false	0
554	"scale_up"	"*"	"calc"	0	1	false	false	false	0
555	"scale_up"	"*"	"calc"	0	1	false	false	false	0
556	"scale_up"	"*"	"calc"	0	1	false	false	false	0
557	"scale_up"	"*"	"calc"	0	1	false	false	false	0
558	"scale_up"	"*"	"calc"	0	1	false	false	false	0
559	"scale_up"	"*"	"calc"	0	1	false	false	false	0
560	"scale_up"	"*"	"calc"	0	1	false	false	false	0
561	"scale_up"	"*"	"calc"	0	1	false	false	false	0
562	"scale_up"	"*"	"calc"	0	1	false	false	false	0
563	"scale_up"	"*"	"calc"	0	1	false	false	false	0
564	"scale_up"	"*"	"calc"	0	1	false	false	false	0
565	"scale_up"	"*"	"calc"	0	1	false	false	false	0
566	"scale_up"	"*"	"calc"	0	1	false	false	false	0
567	"scale_up"	"*"	"calc"	0	1	false	false	false	0
568	"scale_up"	"*"	"calc"	0	1	false	false	false	0
569	"scale_up"	"*"	"calc"	0	1	false	false	false	0
570	"scale_up"	"*"	"calc"	0	1	false	false	false	0
571	"scale_up"	"*"	"calc"	0	1	false	false	false	0
572	"scale_up"	"*"	"calc"	0	1	false	false	false	0
573	"scale_up"	"*"	"calc"	0	1	false	false	false	0
574	"scale_up"	"*"	"calc"	0	1	false	false	false	0
575	"scale_up"	"*"	"calc"	0	1	false	false	false	0
576	"scale_up"	"*"	"calc"	0	1	false	false	false	0
577	"scale_up"	"*"	"calc"	0	1	false	false	false	0
578	"scale_up"	"*"	"calc"	0	1	false	false	false	0
579	"scale_up"	"*"	"calc"	0	1	false	false	false	0
580	"scale_up"	"*"	"calc"	0	1	false	false	false	0
581	"scale_up"	"*"	"calc"	0	1	false	false	false	0
582	"scale_up"	"*"	"calc"	0	1	false	false	false	0
583	"scale_up"	"*"	"calc"	0	1	false	false	false	0
584	"scale_up"	"*"	"calc"	0	1	false	false	false	0
585	"scale_up"	"*"	"calc"	0	1	false	false	false	0
586	"scale_up"	"*"	"calc"	0	1	false	false	false	0
587	"scale_up"	"*"	"calc"	0	1	false	false	false	0
588	"scale_up"	"*"	"calc"	0	1	false	false	false	0
589	"scale_up"	"*"	"calc"	0	1	false	false	false	0
590	"scale_up"	"*"	"calc"	0	1	false	false	false	0
591	"scale_up"	"*"	"calc"	0	1	false	false	false	0
592	"scale_up"	"*"	"calc"	0	1	false	false	false	0
593	"scale_up"	"*"	"calc"	0	1	false	false	false	0
594	"scale_up"	"*"	"calc"	0	1	false	false	false	0
595	"scale_up"	"*"	"calc"	0	1	false	false	false	0
596	"scale_up"	"*"	"calc"	0	1	false	false	false	0
597	"scale_up"	"*"	"calc"	0	1	false	false	false	0
598	"scale_up"	"*"	"calc"	0	1	false	false	false	0
599	"scale_up"	"*"	"calc"	0	1	false	false	false	0
600	"scale_up"	"*"	"calc"	0	1	false	false	false	0
601	"scale_up"	"*"	"calc"	0	1	false	false	false	0
602	"scale_up"	"*"	"calc"	0	1	false	false	false	0
603	"scale_up"	"*"	"calc"	0	1	false	false	false	0
604	"scale_up"	"*"	"calc"	0	1	false	false	false	0
605	"scale_up"	"*"	"calc"	0	1	false	false	false	0
606	"scale_up"	"*"	"calc"	0	1	false	false	false	0
607	"scale_up"	"*"	"calc"	0	1	false	false	false	0
608	"scale_up"	"*"	"calc"	0	1	false	false	false	0
609	"scale_up"	"*"	"calc"	0	1	false	false	false	0
610	"scale_up"	"*"	"calc"	0	1	false	false	false	0
611	"scale_up"	"*"	"calc"	0	1	false	false	false	0
612	"scale_up"	"*"	"calc"	0	1	false	false	false	0
613	"scale_up"	"*"	"calc"	0	1	false	false	false	0
614	"scale_up"	"*"	"calc"	0	1	false	false	false	0
615	"scale_up"	"*"	"calc"	0	1	false	false	false	0
616	"scale_up"	"*"	"calc"	0	1	false	false	false	0
617	"scale_up"	"*"	"calc"	0	1	false	false	false	0
618	"scale_up"	"*"	"calc"	0	1	false	false	false	0
619	"scale_up"	"*"	"calc"	0	1	false	false	false	0
620	"scale_up"	"*"	"calc"	0	1	false	false	false	0
621	"scale_up"	"*"	"calc"	0	1	false	false	false	0
622	"scale_up"	"*"	"calc"	0	1	false	false	false	0
623	"scale_up"	"*"	"calc"	0	1	false	false	false	0
624	"scale_up"	"*"	"calc"	0	1	false	false	false	0
625	"scale_up"	"*"	"calc"	0	1	false	false	false	0
626	"scale_up"	"*"	"calc"	0	1	false	false	false	0
627	"scale_up"	"*"	"calc"	0	1	false	false	false	0
628	"scale_up"	"*"	"calc"	0	1	false	false	false	0
629	"scale_up"	"*"	"calc"	0	1	false	false	false	0
630	"scale_up"	"*"	"calc"	0	1	false	false	false	0
631	"scale_up"	"*"	"calc"	0	1	false	false	false	0
632	"scale_up"	"*"	"calc"	0	1	false	false	false	0
633	"scale_up"	"*"	"calc"	0	1	false	false	false	0
634	"scale_up"	"*"	"calc"	0	1	false	false	false	0
635	"scale_up"	"*"	"calc"	0	1	false	false	false	0
636	"scale_up"	"*"	"calc"	0	1	false	false	false	0
637	"scale_up"	"*"	"calc"	0	1	false	false	false	0
638	"scale_up"	"*"	"calc"	0	1	false	false	false	0
639	"scale_up"	"*"	"calc"	0	1	false	false	false	0
640	"scale_up"	"*"	"calc"	0	1	false	false	false	0
641	"scale_up"	"*"	"calc"	0	1	false	false	false	0
642	"scale_up"	"*"	"calc"	0	1	false	false	false	0
643	"scale_up"	"*"	"calc"	0	1	false	false	false	0
644	"scale_up"	"*"	"calc"	0	1	false	false	false	0
645	"scale_up"	"*"	"calc"	0	1	false	false	false	0
646	"scale_up"	"*"	"calc"	0	1	false	false	false	0
647	"scale_up"	"*"	"calc"	0	1	false	false	false	0
648	"scale_up"	"*"	"calc"	0	1	false	false	false	0
649	"scale_up"	"*"	"calc"	0	1	false	false	false	0
650	"scale_up"	"*"	"calc"	0	1	false	false	false	0
651	"scale_up"	"*"	"calc"	0	1	false	false	false	0
652	"scale_up"	"*"	"calc"	0	1	false	false	false	0
653	"scale_up"	"*"	"calc"	0	1	false	false	false	0
654	"scale_up"	"*"	"calc"	0	1	false	false	false	0
655	"scale_up"	"*"	"calc"	0	1	false	false	false	0
656	"scale_up"	"*"	"calc"	0	1	false	false	false	0
657	"scale_up"	"*"	"calc"	0	1	false	false	false	0
658	"scale_up"	"*"	"calc"	0	1	false	false	false	0
659	"scale_up"	"*"	"calc"	0	1	false	false	false	0
660	"scale_up"	"*"	"calc"	0	1	false	false	false	0
661	"scale_up"	"*"	"calc"	0	1	false	false	false	0
662	"scale_up"	"*"	"calc"	0	1	false	false	false	0
663	"scale_up"	"*"	"calc"	0	1	false	false	false	0
664	"scale_up"	"*"	"calc"	0	1	false	false	false	0
665	"scale_up"	"*"	"calc"	0	1	false	false	false	0
666	"scale_up"	"*"	"calc"	0	1	false	false	false	0
667	"scale_up"	"*"	"calc"	0	1	false	false	false	0
668	"scale_up"	"*"	"calc"	0	1	false	false	false	0
669	"scale_up"	"*"	"calc"	0	1	false	false	false	0
670	"scale_up"	"*"	"calc"	0	1	false	false	false	0
671	"scale_up"	"*"	"calc"	0	1	false	false	false	0
672	"scale_up"	"*"	"calc"	0	1	false	false	false	0
673	"scale_up"	"*"	"calc"	0	1	false	false	false	0
674	"scale_up"	"*"	"calc"	0	1	false	false	false	0
675	"scale_up"	"*"	"calc"	0	1	false	false	false	0
676	"scale_up"	"*"	"calc"	0	1	false	false	false	0
677	"scale_up"	"*"	"calc"	0	1	false	false	false	0
678	"scale_up"	"*"	"calc"	0	1	false	false	false	0
679	"scale_up"	"*"	"calc"	0	1	false	false	false	0
680	"scale_up"	"*"	"calc"	0	1	false	false	false	0
681	"scale_up"	"*"	"calc"	0	1	false	false	false	0
682	"scale_up"	"*"	"calc"	0	1	false	false	false	0
683	"scale_up"	"*"	"calc"	0	1	false	false	false	0
684	"scale_up"	"*"	"calc"	0	1	false	false	false	0
685	"scale_up"	"*"	"calc"	0	1	false	false	false	0
686	"scale_up"	"*"	"calc"	0	1	false	false	false	0
687	"scale_up"	"*"	"calc"	0	1	false	false	false	0
688	"scale_up"	"*"	"calc"	0	1	false	false	false	0
689	"scale_up"	"*"	"calc"	0	1	false	false	false	0
690	"scale_up"	"*"	"calc"	0	1	false	false	false	0
691	"scale_up"	"*"	"calc"	0	1	false	false	false	0
692	"scale_up"	"*"	"calc"	0	1	false	false	false	0
693	"scale_up"	"*"	"calc"	0	1	false	false	false	0
694	"scale_up"	"*"	"calc"	0	1	false	false	false	0
695	"scale_up"	"*"	"calc"	0	1	false	false	false	0
696	"scale_up"	"*"	"calc"	0	1	false	false	false	0
697	"scale_up"	"*"	"calc"	0	1	false	false	false	0
698	"scale_up"	"*"	"calc"	0	1	false	false	false	0
699	"scale_up"	"*"	"calc"	0	1	false	false	false	0
700	"scale_up"	"*"	"calc"	0	1	false	false	false	0
701	"scale_up"	"*"	"calc"	0	1	false	false	false	0
702	"scale_up"	"*"	"calc"	0	1	false	false	false	0
703	"scale_up"	"*"	"calc"	0	1	false	false	false	0
704	"scale_up"	"*"	"calc"	0	1	false	false	false	0
705	"scale_up"	"*"	"calc"	0	1	false	false	false	0
706	"scale_up"	"*"	"calc"	0	1	false	false	false	0
707	"scale_up"	"*"	"calc"	0	1	false	false	false	0
708	"scale_up"	"*"	"calc"	0	1	false	false	false	0
709	"scale_up"	"*"	"calc"	0	1	false	false	false	0
710	"scale_up"	"*"	"calc"	0	1	false	false	false	0
711	"scale_up"	"*"	"calc"	0	1	false	false	false	0
712	"scale_up"	"*"	"calc"	0	1	false	false	false	0
713	"scale_up"	"*"	"calc"	0	1	false	false	false	0
714	"scale_up"	"*"	"calc"	0	1	false	false	false	0
715	"scale_up"	"*"	"calc"	0	1	false	false	false	0
716	"scale_up"	"*"	"calc"	0	1	false	false	false	0
717	"scale_up"	"*"	"calc"	0	1	false	false	false	0
718	"scale_up"	"*"	"calc"	0	1	false	false	false	0
719	"scale_up"	"*"	"calc"	0	1	false	false	false	0
720	"scale_up"	"*"	"calc"	0	1	false	false	false	0
721	"scale_up"	"*"	"calc"	0	1	false	false	false	0
722	"scale_up"	"*"	"calc"	0	1	false	false	false	0
723	"scale_up"	"*"	"calc"	0	1	false	false	false	0
724	"scale_up"	"*"	"calc"	0	1	false	false	false	0
725	"scale_up"	"*"	"calc"	0	1	false	false	false	0
726	"scale_up"	"*"	"calc"	0	1	false	false	false	0
727	"scale_up"	"*"	"calc"	0	1	false	false	false	0
728	"scale_up"	"*"	"calc"	0	1	false	false	false	0
729	"scale_up"	"*"	"calc"	0	1	false	false	false	0
730	"scale_up"	"*"	"calc"	0	1	false	false	false	0
731	"scale_up"	"*"	"calc"	0	1	false	false	false	0
732	"scale_up"	"*"	"calc"	0	1	false	false	false	0
733	"scale_up"	"*"	"calc"	0	1	false	false	false	0
734	"scale_up"	"*"	"calc"	0	1	false	false	false	0
735	"scale_up"	"*"	"calc"	0	1	false	false	false	0
736	"scale_up"	"*"	"calc"	0	1	false	false	false	0
737	"scale_up"	"*"	"calc"	0	1	false	false	false	0
738	"scale_up"	"*"	"calc"	0	1	false	false	false	0
739	"scale_up"	"*"	"calc"	0	1	false	false	false	0
740	"scale_up"	"*"	"calc"	0	1	false	false	false	0
741	"scale_up"	"*"	"calc"	0	1	false	false	false	0
742	"scale_up"	"*"	"calc"	0	1	false	false	false	0
743	"scale_up"	"*"	"calc"	0	1	false	false	false	0
744	"scale_up"	"*"	"calc"	0	1	false	false	false	0
745	"scale_up"	"*"	"calc"	0	1	false	false	false	0
746	"scale_up"	"*"	"calc"	0	1	false	false	false	0
747	"scale_up"	"*"	"calc"	0	1	false	false	false	0
748	"scale_up"	"*"	"calc"	0	1	false	false	false	0
749	"scale_up"	"*"	"calc"	0	1	false	false	false	0
750	"scale_up"	"*"	"calc"	0	1	false	false	false	0
751	"scale_up"	"*"	"calc"	0	1	false	false	false	0
752	"scale_up"	"*"	"calc"	0	1	false	false	false	0
753	"scale_up"	"*"	"calc"	0	1	false	false	false	0
754	"scale_up"	"*"	"calc"	0	1	false	false	false	0
755	"scale_up"	"*"	"calc"	0	1	false	false	false	0
756	"scale_up"	"*"	"calc"	0	1	false	false	false	0
757	"scale_up"	"*"	"calc"	0	1	false	false	false	0
758	"scale_up"	"*"	"calc"	0	1	false	false	false	0
759	"scale_up"	"*"	"calc"	0	1	false	false	false	0
760	"scale_up"	"*"	"calc"	0	1	false	false	false	0
761	"scale_up"	"*"	"calc"	0	1	false	false	false	0
762	"scale_up"	"*"	"calc"	0	1	false	false	false	0
763	"scale_up"	"*"	"calc"	0	1	false	false	false	0
764	"scale_up"	"*"	"calc"	0	1	false	false	false	0
765	"scale_up"	"*"	"calc"	0	1	false	false	false	0
766	"scale_up"	"*"	"calc"	0	1	false	false	false	0
767	"scale_up"	"*"	"calc"	0	1	false	false	false	0
768	"scale_up"	"*"	"calc"	0	1	false	false	false	0
769	"scale_up"	"*"	"calc"	0	1	false	false	false	0
770	"scale_up"	"*"	"calc"	0	1	false	false	false	0
771	"scale_up"	"*"	"calc"	0	1	false	false	false	0
772	"scale_up"	"*"	"calc"	0	1	false	false	false	0
773	"scale_up"	"*"	"calc"	0	1	false	false	false	0
774	"scale_up"	"*"	"calc"	0	1	false	false	false	0
775	"scale_up"	"*"	"calc"	0	1	false	false	false	0
776	"scale_up"	"*"	"calc"	0	1	false	false	false	0
777	"scale_up"	"*"	"calc"	0	1	false	false	false	0
778	"scale_up"	"*"	"calc"	0	1	false	false	false	0
779	"scale_up"	"*"	"calc"	0	1	false	false	false	0
780	"scale_up"	"*"	"calc"	0	1	false	false	false	0
781	"scale_up"	"*"	"calc"	0	1	false	false	false	0
782	"scale_up"	"*"	"calc"	0	1	false	false	false	0
783	"scale_up"	"*"	"calc"	0	1	false	false	false	0
784	"scale_up"	"*"	"calc"	0	1	false	false	false	0
785	"scale_up"	"*"	"calc"	0	1	false	false	false	0
786	"scale_up"	"*"	"calc"	0	1	false	false	false	0
787	"scale_up"	"*"	"calc"	0	1	false	false	false	0
788	"scale_up"	"*"	"calc"	0	1	false	false	false	0
789	"scale_up"	"*"	"calc"	0	1	false	false	false	0
790	"scale_up"	"*"	"calc"	0	1	false	false	false	0
791	"scale_up"	"*"	"calc"	0	1	false	false	false	0
792	"scale_up"	"*"	"calc"	0	1	false	false	false	0
793	"scale_up"	"*"	"calc"	0	1	false	false	false	0
794	"scale_up"	"*"	"calc"	0	1	false	false	false	0
795	"scale_up"	"*"	"calc"	0	1	false	false	false	0
796	"scale_up"	"*"	"calc"	0	1	false	false	false	0
797	"scale_up"	"*"	"calc"	0	1	false	false	false	0
798	"scale_up"	"*"	"calc"	0	1	false	false	false	0
799	"scale_up"	"*"	"calc"	0	1	false	false	false	0
800	"scale_up"	"*"	"calc"	0	1	false	false	false	0
801	"scale_up"	"*"	"calc"	0	1	false	false	false	0
802	"scale_up"	"*"	"calc"	0	1	false	false	false	0
803	"scale_up"	"*"	"calc"	0	1	false	false	false	0
804	"scale_up"	"*"	"calc"	0	1	false	false	false	0
805	"scale_up"	"*"	"calc"	0	1	false	false	false	0
806	"scale_up"	"*"	"calc"	0	1	false	false	false	0
807	"scale_up"	"*"	"calc"	0	1	false	false	false	0
808	"scale_up"	"*"	"calc"	0	1	false	false	false	0
809	"scale_up"	"*"	"calc"	0	1	false	false	false	0
810	"scale_up"	"*"	"calc"	0	1	false	false	false	0
811	"scale_up"	"*"	"calc"	0	1	false	false	false	0
812	"scale_up"	"*"	"calc"	0	1	false	false	false	0
813	"scale_up"	"*"	"calc"	0	1	false	false	false	0
814	"scale_up"	"*"	"calc"	0	1	false	false	false	0
815	"scale_up"	"*"	"calc"	0	1	false	false	false	0
816	"scale_up"	"*"	"calc"	0	1	false	false	false	0
817	"scale_up"	"*"	"calc"	0	1	false	false	false	0
818	"scale_up"	"*"	"calc"	0	1	false	false	false	0
819	"scale_up"	"*"	"calc"	0	1	false	false	false	0
820	"scale_up"	"*"	"calc"	0	1	false	false	false	0
821	"scale_up"	"*"	"calc"	0	1	false	false	false	0
822	"scale_up"	"*"	"calc"	0	1	false	false	false	0
823	"scale_up"	"*"	"calc"	0	1	false	false	false	0
824	"scale_up"	"*"	"calc"	0	1	false	false	false	0
825	"scale_up"	"*"	"calc"	0	1	false	false	false	0
826	"scale_up"	"*"	"calc"	0	1	false	false	false	0
827	"scale_up"	"*"	"calc"	0	1	false	false	false	0
828	"power"	"pow"	"mmath"	0	1	false	false	false	0
829	"floor"	"floor"	"mmath"	0	1	false	false	false	0
830	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
831	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
832	"sin"	"sin"	"mmath"	0	1	false	false	false	0
833	"cos"	"cos"	"mmath"	0	1	false	false	false	0
834	"tan"	"tan"	"mmath"	0	1	false	false	false	0
835	"asin"	"asin"	"mmath"	0	1	false	false	false	0
836	"acos"	"acos"	"mmath"	0	1	false	false	false	0
837	"atan"	"atan"	"mmath"	0	1	false	false	false	0
838	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
839	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
840	"cot"	"cot"	"mmath"	0	1	false	false	false	0
841	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
842	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
843	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
844	"exp"	"exp"	"mmath"	0	1	false	false	false	0
845	"log"	"log"	"mmath"	0	1	false	false	false	0
846	"log10"	"log10"	"mmath"	0	1	false	false	false	0
847	"power"	"pow"	"mmath"	0	1	false	false	false	0
848	"floor"	"floor"	"mmath"	0	1	false	false	false	0
849	"ceil"	"ceil"	"mmath"	0	1	false	false	false	0
850	"ceiling"	"ceil"	"mmath"	0	1	false	false	false	0
851	"sin"	"sin"	"mmath"	0	1	false	false	false	0
852	"cos"	"cos"	"mmath"	0	1	false	false	false	0
853	"tan"	"tan"	"mmath"	0	1	false	false	false	0
854	"asin"	"asin"	"mmath"	0	1	false	false	false	0
855	"acos"	"acos"	"mmath"	0	1	false	false	false	0
856	"atan"	"atan"	"mmath"	0	1	false	false	false	0
857	"atan"	"atan2"	"mmath"	0	1	false	false	false	0
858	"sinh"	"sinh"	"mmath"	0	1	false	false	false	0
859	"cot"	"cot"	"mmath"	0	1	false	false	false	0
860	"cosh"	"cosh"	"mmath"	0	1	false	false	false	0
861	"tanh"	"tanh"	"mmath"	0	1	false	false	false	0
862	"sqrt"	"sqrt"	"mmath"	0	1	false	false	false	0
863	"exp"	"exp"	"mmath"	0	1	false	false	false	0
864	"log"	"log"	"mmath"	0	1	false	false	false	0
865	"log10"	"log10"	"mmath"	0	1	false	false	false	0
866	"pi"	"pi"	"mmath"	0	1	false	false	false	0
867	"rand"	"rand"	"mmath"	0	1	true	false	false	0
868	"rand"	"sqlrand"	"mmath"	0	1	true	false	false	0
869	"curdate"	"current_date"	"mtime"	0	1	false	false	false	0
870	"current_date"	"current_date"	"mtime"	0	1	false	false	false	0
871	"curtime"	"current_time"	"mtime"	0	1	false	false	false	0
872	"current_time"	"current_time"	"mtime"	0	1	false	false	false	0
873	"current_timestamp"	"current_timestamp"	"mtime"	0	1	false	false	false	0
874	"localtime"	"current_time"	"sql"	0	1	false	false	false	0
875	"localtimestamp"	"current_timestamp"	"sql"	0	1	false	false	false	0
876	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
877	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
878	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
879	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
880	"sql_sub"	"diff"	"mtime"	0	1	false	false	false	0
881	"sql_sub"	"date_sub_msec_interval"	"mtime"	0	1	false	false	false	0
882	"sql_sub"	"date_sub_month_interval"	"mtime"	0	1	false	false	false	0
883	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
884	"sql_sub"	"time_sub_msec_interval"	"mtime"	0	1	false	false	false	0
885	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
886	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
887	"sql_sub"	"timestamp_sub_msec_interval"	"mtime"	0	1	false	false	false	0
888	"sql_sub"	"timestamp_sub_month_interval"	"mtime"	0	1	false	false	false	0
889	"sql_add"	"date_add_msec_interval"	"mtime"	0	1	false	false	false	0
890	"sql_add"	"addmonths"	"mtime"	0	1	false	false	false	0
891	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
892	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
893	"sql_add"	"timestamp_add_msec_interval"	"mtime"	0	1	false	false	false	0
894	"sql_add"	"timestamp_add_month_interval"	"mtime"	0	1	false	false	false	0
895	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
896	"sql_add"	"time_add_msec_interval"	"mtime"	0	1	false	false	false	0
897	"local_timezone"	"local_timezone"	"mtime"	0	1	false	false	false	0
898	"year"	"year"	"mtime"	0	1	false	false	false	0
899	"month"	"month"	"mtime"	0	1	false	false	false	0
900	"day"	"day"	"mtime"	0	1	false	false	false	0
901	"hour"	"hours"	"mtime"	0	1	false	false	false	0
902	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
903	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
904	"hour"	"hours"	"mtime"	0	1	false	false	false	0
905	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
906	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
907	"year"	"year"	"mtime"	0	1	false	false	false	0
908	"month"	"month"	"mtime"	0	1	false	false	false	0
909	"day"	"day"	"mtime"	0	1	false	false	false	0
910	"hour"	"hours"	"mtime"	0	1	false	false	false	0
911	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
912	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
913	"year"	"year"	"mtime"	0	1	false	false	false	0
914	"month"	"month"	"mtime"	0	1	false	false	false	0
915	"day"	"day"	"mtime"	0	1	false	false	false	0
916	"hour"	"hours"	"mtime"	0	1	false	false	false	0
917	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
918	"second"	"sql_seconds"	"mtime"	0	1	false	false	false	0
919	"year"	"year"	"mtime"	0	1	false	false	false	0
920	"month"	"month"	"mtime"	0	1	false	false	false	0
921	"day"	"day"	"mtime"	0	1	false	false	false	0
922	"hour"	"hours"	"mtime"	0	1	false	false	false	0
923	"minute"	"minutes"	"mtime"	0	1	false	false	false	0
924	"second"	"seconds"	"mtime"	0	1	false	false	false	0
925	"dayofyear"	"dayofyear"	"mtime"	0	1	false	false	false	0
926	"weekofyear"	"weekofyear"	"mtime"	0	1	false	false	false	0
927	"dayofweek"	"dayofweek"	"mtime"	0	1	false	false	false	0
928	"dayofmonth"	"day"	"mtime"	0	1	false	false	false	0
929	"week"	"weekofyear"	"mtime"	0	1	false	false	false	0
930	"next_value_for"	"next_value"	"sql"	0	1	true	false	false	0
931	"get_value_for"	"get_value"	"sql"	0	1	false	false	false	0
932	"restart"	"restart"	"sql"	0	1	false	false	false	0
933	"index"	"index"	"calc"	0	1	false	false	false	0
934	"index"	"index"	"calc"	0	1	false	false	false	0
935	"index"	"index"	"calc"	0	1	false	false	false	0
936	"strings"	"strings"	"calc"	0	1	false	false	false	0
937	"locate"	"locate"	"str"	0	1	false	false	false	0
938	"locate"	"locate"	"str"	0	1	false	false	false	0
939	"substring"	"substring"	"str"	0	1	false	false	false	0
940	"substring"	"substring"	"str"	0	1	false	false	false	0
941	"like"	"like"	"algebra"	0	1	false	false	false	0
942	"like"	"like"	"algebra"	0	1	false	false	false	0
943	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
944	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
945	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
946	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
947	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
948	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
949	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
950	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
951	"concat"	"+"	"calc"	0	1	false	false	false	0
952	"ascii"	"ascii"	"str"	0	1	false	false	false	0
953	"code"	"unicode"	"str"	0	1	false	false	false	0
954	"length"	"stringlength"	"str"	0	1	false	false	false	0
955	"right"	"stringright"	"str"	0	1	false	false	false	0
956	"left"	"stringleft"	"str"	0	1	false	false	false	0
957	"upper"	"toUpper"	"str"	0	1	false	false	false	0
958	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
959	"lower"	"toLower"	"str"	0	1	false	false	false	0
960	"lcase"	"toLower"	"str"	0	1	false	false	false	0
961	"trim"	"trim"	"str"	0	1	false	false	false	0
962	"trim"	"trim"	"str"	0	1	false	false	false	0
963	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
964	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
965	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
966	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
967	"lpad"	"lpad"	"str"	0	1	false	false	false	0
968	"lpad"	"lpad"	"str"	0	1	false	false	false	0
969	"rpad"	"rpad"	"str"	0	1	false	false	false	0
970	"rpad"	"rpad"	"str"	0	1	false	false	false	0
971	"insert"	"insert"	"str"	0	1	false	false	false	0
972	"replace"	"replace"	"str"	0	1	false	false	false	0
973	"repeat"	"repeat"	"str"	0	1	false	false	false	0
974	"space"	"space"	"str"	0	1	false	false	false	0
975	"char_length"	"length"	"str"	0	1	false	false	false	0
976	"character_length"	"length"	"str"	0	1	false	false	false	0
977	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
978	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
979	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
980	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
981	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
982	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
983	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
984	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
985	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
986	"index"	"index"	"calc"	0	1	false	false	false	0
987	"index"	"index"	"calc"	0	1	false	false	false	0
988	"index"	"index"	"calc"	0	1	false	false	false	0
989	"strings"	"strings"	"calc"	0	1	false	false	false	0
990	"locate"	"locate"	"str"	0	1	false	false	false	0
991	"locate"	"locate"	"str"	0	1	false	false	false	0
992	"substring"	"substring"	"str"	0	1	false	false	false	0
993	"substring"	"substring"	"str"	0	1	false	false	false	0
994	"like"	"like"	"algebra"	0	1	false	false	false	0
995	"like"	"like"	"algebra"	0	1	false	false	false	0
996	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
997	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
998	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
999	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1000	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1001	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1002	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1003	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1004	"concat"	"+"	"calc"	0	1	false	false	false	0
1005	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1006	"code"	"unicode"	"str"	0	1	false	false	false	0
1007	"length"	"stringlength"	"str"	0	1	false	false	false	0
1008	"right"	"stringright"	"str"	0	1	false	false	false	0
1009	"left"	"stringleft"	"str"	0	1	false	false	false	0
1010	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1011	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1012	"lower"	"toLower"	"str"	0	1	false	false	false	0
1013	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1014	"trim"	"trim"	"str"	0	1	false	false	false	0
1015	"trim"	"trim"	"str"	0	1	false	false	false	0
1016	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1017	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1018	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1019	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1020	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1021	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1022	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1023	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1024	"insert"	"insert"	"str"	0	1	false	false	false	0
1025	"replace"	"replace"	"str"	0	1	false	false	false	0
1026	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1027	"space"	"space"	"str"	0	1	false	false	false	0
1028	"char_length"	"length"	"str"	0	1	false	false	false	0
1029	"character_length"	"length"	"str"	0	1	false	false	false	0
1030	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1031	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1032	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1033	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1034	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1035	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1036	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1037	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1038	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1039	"index"	"index"	"calc"	0	1	false	false	false	0
1040	"index"	"index"	"calc"	0	1	false	false	false	0
1041	"index"	"index"	"calc"	0	1	false	false	false	0
1042	"strings"	"strings"	"calc"	0	1	false	false	false	0
1043	"locate"	"locate"	"str"	0	1	false	false	false	0
1044	"locate"	"locate"	"str"	0	1	false	false	false	0
1045	"substring"	"substring"	"str"	0	1	false	false	false	0
1046	"substring"	"substring"	"str"	0	1	false	false	false	0
1047	"like"	"like"	"algebra"	0	1	false	false	false	0
1048	"like"	"like"	"algebra"	0	1	false	false	false	0
1049	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1050	"ilike"	"ilike"	"algebra"	0	1	false	false	false	0
1051	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1052	"not_like"	"not_like"	"algebra"	0	1	false	false	false	0
1053	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1054	"not_ilike"	"not_ilike"	"algebra"	0	1	false	false	false	0
1055	"patindex"	"patindex"	"pcre"	0	1	false	false	false	0
1056	"truncate"	"stringleft"	"str"	0	1	false	false	false	0
1057	"concat"	"+"	"calc"	0	1	false	false	false	0
1058	"ascii"	"ascii"	"str"	0	1	false	false	false	0
1059	"code"	"unicode"	"str"	0	1	false	false	false	0
1060	"length"	"stringlength"	"str"	0	1	false	false	false	0
1061	"right"	"stringright"	"str"	0	1	false	false	false	0
1062	"left"	"stringleft"	"str"	0	1	false	false	false	0
1063	"upper"	"toUpper"	"str"	0	1	false	false	false	0
1064	"ucase"	"toUpper"	"str"	0	1	false	false	false	0
1065	"lower"	"toLower"	"str"	0	1	false	false	false	0
1066	"lcase"	"toLower"	"str"	0	1	false	false	false	0
1067	"trim"	"trim"	"str"	0	1	false	false	false	0
1068	"trim"	"trim"	"str"	0	1	false	false	false	0
1069	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1070	"ltrim"	"ltrim"	"str"	0	1	false	false	false	0
1071	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1072	"rtrim"	"rtrim"	"str"	0	1	false	false	false	0
1073	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1074	"lpad"	"lpad"	"str"	0	1	false	false	false	0
1075	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1076	"rpad"	"rpad"	"str"	0	1	false	false	false	0
1077	"insert"	"insert"	"str"	0	1	false	false	false	0
1078	"replace"	"replace"	"str"	0	1	false	false	false	0
1079	"repeat"	"repeat"	"str"	0	1	false	false	false	0
1080	"space"	"space"	"str"	0	1	false	false	false	0
1081	"char_length"	"length"	"str"	0	1	false	false	false	0
1082	"character_length"	"length"	"str"	0	1	false	false	false	0
1083	"octet_length"	"nbytes"	"str"	0	1	false	false	false	0
1084	"soundex"	"soundex"	"txtsim"	0	1	false	false	false	0
1085	"difference"	"stringdiff"	"txtsim"	0	1	false	false	false	0
1086	"editdistance"	"editdistance"	"txtsim"	0	1	false	false	false	0
1087	"editdistance2"	"editdistance2"	"txtsim"	0	1	false	false	false	0
1088	"similarity"	"similarity"	"txtsim"	0	1	false	false	false	0
1089	"qgramnormalize"	"qgramnormalize"	"txtsim"	0	1	false	false	false	0
1090	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1091	"levenshtein"	"levenshtein"	"txtsim"	0	1	false	false	false	0
1092	"copyfrom"	"copy_from"	"sql"	0	5	false	true	false	0
1093	"copyfrom"	"copyfrom"	"sql"	0	5	false	true	false	0
1094	"copyfrom"	"importTable"	"sql"	0	5	false	true	false	0
27	"not_unique"	"not_unique"	"sql"	0	3	false	false	false	0
39	"zero_or_one"	"zero_or_one"	"sql"	0	3	false	false	false	0
40	"exist"	"exist"	"aggr"	0	3	false	false	false	0
41	"not_exist"	"not_exist"	"aggr"	0	3	false	false	false	0
46	"min"	"min"	"aggr"	0	3	false	false	false	0
47	"max"	"max"	"aggr"	0	3	false	false	false	0
51	"sum"	"sum"	"aggr"	0	3	false	false	false	0
52	"sum"	"sum"	"aggr"	0	3	false	false	false	0
53	"sum"	"sum"	"aggr"	0	3	false	false	false	0
54	"sum"	"sum"	"aggr"	0	3	false	false	false	0
55	"sum"	"sum"	"aggr"	0	3	false	false	false	0
56	"sum"	"sum"	"aggr"	0	3	false	false	false	0
57	"sum"	"sum"	"aggr"	0	3	false	false	false	0
58	"sum"	"sum"	"aggr"	0	3	false	false	false	0
59	"sum"	"sum"	"aggr"	0	3	false	false	false	0
60	"prod"	"prod"	"aggr"	0	3	false	false	false	0
61	"prod"	"prod"	"aggr"	0	3	false	false	false	0
62	"prod"	"prod"	"aggr"	0	3	false	false	false	0
63	"prod"	"prod"	"aggr"	0	3	false	false	false	0
64	"prod"	"prod"	"aggr"	0	3	false	false	false	0
65	"prod"	"prod"	"aggr"	0	3	false	false	false	0
66	"prod"	"prod"	"aggr"	0	3	false	false	false	0
67	"prod"	"prod"	"aggr"	0	3	false	false	false	0
80	"sum"	"sum"	"aggr"	0	3	false	false	false	0
81	"prod"	"prod"	"aggr"	0	3	false	false	false	0
82	"sum"	"sum"	"aggr"	0	3	false	false	false	0
83	"prod"	"prod"	"aggr"	0	3	false	false	false	0
84	"avg"	"avg"	"aggr"	0	3	false	false	false	0
85	"count_no_nil"	"count_no_nil"	"aggr"	0	3	false	false	false	0
86	"count"	"count"	"aggr"	0	3	false	false	false	0
5222	"env"	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	"sql"	2	5	false	false	false	2000
5225	"var"	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	"sql"	2	5	false	false	false	2000
5231	"db_users"	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	"sql"	2	5	false	false	false	2000
5251	"like"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function ""like""(val string, pat string, esc string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5256	"ilike"	"create filter function ""ilike""(val string, pat string, esc string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5261	"like"	"create filter function ""like""(val string, pat string) external name algebra.""like"";"	"algebra"	1	4	true	false	false	2000
5265	"ilike"	"create filter function ""ilike""(val string, pat string) external name algebra.""ilike"";"	"algebra"	1	4	true	false	false	2000
5269	"degrees"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function degrees(r double) \nreturns double\n\treturn r*180/pi();"	"user"	2	1	false	false	false	2000
5273	"radians"	"create function radians(d double) \nreturns double\n\treturn d*pi()/180;"	"user"	2	1	false	false	false	2000
5277	"times"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Provide a simple equivalent for the UNIX times command\n-- times 0 ms user 0 ms system 0 ms 0 reads 0 writes\n\ncreate procedure times()\nexternal name sql.times;"	"sql"	1	2	true	false	false	2000
5280	"getanchor"	"create function getanchor( theurl url ) returns string \n\texternal name url.""getAnchor"";"	"url"	1	1	false	false	false	2000
5284	"getbasename"	"create function getbasename(theurl url) returns string       \n\texternal name url.""getBasename"";"	"url"	1	1	false	false	false	2000
5288	"getcontent"	"create function getcontent(theurl url)   returns string       \n\texternal name url.""getContent"";"	"url"	1	1	false	false	false	2000
5292	"getcontext"	"create function getcontext(theurl url)   returns string       \n\texternal name url.""getContext"";"	"url"	1	1	false	false	false	2000
5296	"getdomain"	"create function getdomain(theurl url) returns string       \n\texternal name url.""getDomain"";"	"url"	1	1	false	false	false	2000
5300	"getextension"	"create function getextension(theurl url) returns string       \n\texternal name url.""getExtension"";"	"url"	1	1	false	false	false	2000
5304	"getfile"	"create function getfile(theurl url) returns string       \n\texternal name url.""getFile"";"	"url"	1	1	false	false	false	2000
5308	"gethost"	"create function gethost(theurl url)   returns string       \n\texternal name url.""getHost"";"	"url"	1	1	false	false	false	2000
5312	"getport"	"create function getport(theurl url) returns string       \n\texternal name url.""getPort"";"	"url"	1	1	false	false	false	2000
5316	"getprotocol"	"create function getprotocol(theurl url) returns string       \n\texternal name url.""getProtocol"";"	"url"	1	1	false	false	false	2000
5320	"getquery"	"create function getquery(theurl url) returns string       \n\texternal name url.""getQuery"";"	"url"	1	1	false	false	false	2000
5324	"getuser"	"create function getuser(theurl url) returns string       \n\texternal name url.""getUser"";"	"url"	1	1	false	false	false	2000
5328	"getroboturl"	"create function getroboturl(theurl url) returns string       \n\texternal name url.""getRobotURL"";"	"url"	1	1	false	false	false	2000
5332	"isaurl"	"create function isaurl(theurl url) returns bool\n\texternal name url.""isaURL"";"	"url"	1	1	false	false	false	2000
5336	"newurl"	"create function newurl(protocol string, hostname string, ""port"" int, file string) \n\treturns url       \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5343	"newurl"	"create function newurl(protocol string, hostname string, file string) \n\treturns url \n\texternal name url.""new"";"	"url"	1	1	false	false	false	2000
5349	"str_to_date"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5354	"date_to_str"	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.""date_to_str"";"	"mtime"	1	1	false	false	false	2000
5359	"convert"	"create function ""convert""(s string, format string) returns date\n\texternal name mtime.""str_to_date"";"	"mtime"	1	1	false	false	false	2000
5365	"broadcast"	"create function ""broadcast"" (p inet) returns inet \n\texternal name inet.""broadcast"";"	"inet"	1	1	false	false	false	2000
5369	"host"	"create function ""host"" (p inet) returns clob\n\texternal name inet.""host"";"	"inet"	1	1	false	false	false	2000
5373	"masklen"	"create function ""masklen"" (p inet) returns int\n\texternal name inet.""masklen"";"	"inet"	1	1	false	false	false	2000
5377	"setmasklen"	"create function ""setmasklen"" (p inet, mask int) returns inet\n\texternal name inet.""setmasklen"";"	"inet"	1	1	false	false	false	2000
5382	"netmask"	"create function ""netmask"" (p inet) returns inet\n\texternal name inet.""netmask"";"	"inet"	1	1	false	false	false	2000
5386	"hostmask"	"create function ""hostmask"" (p inet) returns inet\n\texternal name inet.""hostmask"";"	"inet"	1	1	false	false	false	2000
5390	"network"	"create function ""network"" (p inet) returns inet\n\texternal name inet.""network"";"	"inet"	1	1	false	false	false	2000
5394	"text"	"create function ""text"" (p inet) returns clob\n\texternal name inet.""text"";"	"inet"	1	1	false	false	false	2000
5398	"abbrev"	"create function ""abbrev"" (p inet) returns clob\n\texternal name inet.""abbrev"";"	"inet"	1	1	false	false	false	2000
5402	"left_shift"	"create function ""left_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<"";"	"inet"	1	1	false	false	false	2000
5407	"right_shift"	"create function ""right_shift""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>"";"	"inet"	1	1	false	false	false	2000
5412	"left_shift_assign"	"create function ""left_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet.""<<="";"	"inet"	1	1	false	false	false	2000
5417	"right_shift_assign"	"create function ""right_shift_assign""(i1 inet, i2 inet) returns boolean\n\texternal name inet."">>="";"	"inet"	1	1	false	false	false	2000
5422	"querylog_catalog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions. \n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t""plan"" string,\t\t-- Name of MAL plan\n\tmal int,\t\t\t-- size of MAL plan\n\toptimize bigint \t-- time in usec\n)\nexternal name sql.querylog_catalog;"	"sql"	1	5	false	false	false	2000
5432	"querylog_calls"	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the \n-- server during execution phase. \n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t\t\t -- references query plan\n\t""start"" timestamp,\t-- time the statement was started\n\t""stop"" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,  \t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish \n)\nexternal name sql.querylog_calls;"	"sql"	1	5	false	false	false	2000
5482	"querylog_empty"	"-- reset history for a particular user\ncreate procedure sys.querylog_empty()\nexternal name sql.querylog_empty;"	"sql"	1	2	true	false	false	2000
5484	"querylog_enable"	"-- manipulate the query logger\ncreate procedure sys.querylog_enable()\nexternal name sql.querylog_enable;"	"sql"	1	2	true	false	false	2000
5486	"querylog_enable"	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	"sql"	1	2	true	false	false	2000
5489	"querylog_disable"	"create procedure sys.querylog_disable()\nexternal name sql.querylog_disable;"	"sql"	1	2	true	false	false	2000
5491	"tracelog"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog() \n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20), \t-- wallclock, no mtime in kernel\n\t\tpc varchar(50), \t-- module.function[nr]\n\t\tthread int, \t\t-- thread identifier\n\t\tticks bigint, \t\t-- time in microseconds\n\t\trrsmb bigint, \t\t-- resident memory in MB\n\t\tvmmb bigint, \t\t-- virtual size in MB\n\t\treads bigint, \t\t-- number of blocks read\n\t\twrites bigint, \t\t-- number of blocks written\n\t\tminflt bigint, \t\t-- minor page faults\n\t\tmajflt bigint, \t\t-- major page faults\n\t\tnvcsw bigint, \t\t-- non-volantary conext switch\n\t\tstmt string\t\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	"sql"	1	5	false	false	false	2000
5521	"profiler_openstream"	"create procedure profiler_openstream(host string, port int) external name profiler.""openStream"";"	"profiler"	1	2	true	false	false	2000
5525	"profiler_stethoscope"	"create procedure profiler_stethoscope(ticks int) external name profiler.stethoscope;"	"profiler"	1	2	true	false	false	2000
5528	"epoch"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function ""epoch""(sec bigint) returns timestamp\n    external name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5532	"epoch"	"create function ""epoch""(sec int) returns timestamp\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5536	"epoch"	"create function ""epoch""(ts timestamp) returns int\n\texternal name timestamp.""epoch"";"	"timestamp"	1	1	false	false	false	2000
5540	"shrink"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	"sql"	1	2	true	false	false	2000
5544	"reuse"	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	"sql"	1	2	true	false	false	2000
5548	"vacuum"	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	"sql"	1	2	true	false	false	2000
5552	"dependencies_schemas_on_users"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	"user"	2	5	false	false	false	2000
5557	"dependencies_owners_on_schemas"	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	"user"	2	5	false	false	false	2000
5562	"dependencies_tables_on_views"	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5567	"dependencies_tables_on_indexes"	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	"user"	2	5	false	false	false	2000
5572	"dependencies_tables_on_triggers"	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	"user"	2	5	false	false	false	2000
5577	"dependencies_tables_on_foreignkeys"	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	"user"	2	5	false	false	false	2000
5582	"dependencies_tables_on_functions"	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	"user"	2	5	false	false	false	2000
5587	"dependencies_columns_on_views"	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	"user"	2	5	false	false	false	2000
5592	"dependencies_columns_on_keys"	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.""name"" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	"user"	2	5	false	false	false	2000
5597	"dependencies_columns_on_indexes"	"--Column c has a dependency on index i \ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.""name"" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	"user"	2	5	false	false	false	2000
5602	"dependencies_columns_on_functions"	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5607	"dependencies_columns_on_triggers"	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5612	"dependencies_views_on_functions"	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	"user"	2	5	false	false	false	2000
5617	"dependencies_views_on_triggers"	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	"user"	2	5	false	false	false	2000
5622	"dependencies_functions_on_functions"	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	"user"	2	5	false	false	false	2000
5627	"dependencies_functions_os_triggers"	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	"user"	2	5	false	false	false	2000
5632	"dependencies_keys_on_foreignkeys"	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	"user"	2	5	false	false	false	2000
5637	"password_hash"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string) \n\treturns string \n\texternal name sql.password;"	"sql"	1	1	false	false	false	2000
5641	"sessions"	"create function sys.sessions()\nreturns table(""user"" string, ""login"" timestamp, ""sessiontimeout"" bigint, ""lastcommand"" timestamp, ""querytimeout"" bigint, ""active"" bool)\nexternal name sql.sessions;"	"sql"	1	5	false	false	false	2000
5657	"shutdown"	"create procedure sys.shutdown(delay tinyint) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5660	"shutdown"	"create procedure sys.shutdown(delay tinyint, force bool) \nexternal name sql.shutdown;"	"sql"	1	2	true	false	false	2000
5664	"settimeout"	"-- control the query and session time out \ncreate procedure sys.settimeout(""query"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5667	"settimeout"	"create procedure sys.settimeout(""query"" bigint, ""session"" bigint)\n\texternal name sql.settimeout;"	"sql"	1	2	true	false	false	2000
5671	"setsession"	"create procedure sys.setsession(""timeout"" bigint)\n\texternal name sql.setsession;"	"sql"	1	2	true	false	false	2000
5674	"ms_stuff"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	"user"	2	1	false	false	false	2000
5681	"ms_trunc"	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	"sql"	1	1	false	false	false	2000
5686	"ms_round"	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	"user"	2	1	false	false	false	2000
5692	"ms_str"	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	"user"	2	1	false	false	false	2000
5698	"alpha"	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	"sql"	1	1	false	false	false	2000
5703	"zorder_encode"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	"zorder"	1	1	false	false	false	2000
5708	"zorder_decode_x"	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	"zorder"	1	1	false	false	false	2000
5712	"zorder_decode_y"	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	"zorder"	1	1	false	false	false	2000
5716	"optimizer_stats"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats () \n\treturns table (rewrite string, count int) \n\texternal name sql.dump_opt_stats;"	"sql"	1	5	false	false	false	2000
5720	"querycache"	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache() \n\treturns table (query string, count int) \n\texternal name sql.dump_cache;"	"sql"	1	5	false	false	false	2000
5724	"querylog"	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string) \n\texternal name sql.logfile;"	"sql"	1	2	true	false	false	2000
5727	"optimizers"	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers () \n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	"sql"	1	5	false	false	false	2000
5737	"environment"	"-- The environment table\ncreate function sys.environment()\n\treturns table (""name"" string, value string)\n\texternal name sql.sql_environment;"	"sql"	1	5	false	false	false	2000
5745	"bbp"	"-- The BAT buffer pool overview\ncreate function sys.bbp () \n\treturns table (id int, name string, htype string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int, \n\t\tlocation string, heat int, dirty string, \n\t\tstatus string, kind string) \n\texternal name bbp.get;"	"bbp"	1	5	false	false	false	2000
5759	"evalalgebra"	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.""evalAlgebra"";"	"sql"	1	2	true	false	false	2000
5763	"queue"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t""user"" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	"sql"	1	5	false	false	false	2000
5783	"pause"	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5786	"resume"	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5789	"stop"	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5792	"pause"	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	"sql"	1	2	true	false	false	2000
5795	"resume"	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	"sql"	1	2	true	false	false	2000
5798	"stop"	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	"sql"	1	2	true	false	false	2000
5801	"stddev_samp"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5805	"stddev_samp"	"create aggregate stddev_samp(val smallint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5809	"stddev_samp"	"create aggregate stddev_samp(val integer) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5813	"stddev_samp"	"create aggregate stddev_samp(val wrd) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5817	"stddev_samp"	"create aggregate stddev_samp(val bigint) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5821	"stddev_samp"	"create aggregate stddev_samp(val real) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5825	"stddev_samp"	"create aggregate stddev_samp(val double) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5829	"stddev_samp"	"create aggregate stddev_samp(val date) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5833	"stddev_samp"	"create aggregate stddev_samp(val time) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5837	"stddev_samp"	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name ""aggr"".""stdev"";"	"aggr"	1	3	false	false	false	2000
5841	"stddev_pop"	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5845	"stddev_pop"	"create aggregate stddev_pop(val smallint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5849	"stddev_pop"	"create aggregate stddev_pop(val integer) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5853	"stddev_pop"	"create aggregate stddev_pop(val wrd) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5857	"stddev_pop"	"create aggregate stddev_pop(val bigint) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5861	"stddev_pop"	"create aggregate stddev_pop(val real) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5865	"stddev_pop"	"create aggregate stddev_pop(val double) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5869	"stddev_pop"	"create aggregate stddev_pop(val date) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5873	"stddev_pop"	"create aggregate stddev_pop(val time) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5877	"stddev_pop"	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name ""aggr"".""stdevp"";"	"aggr"	1	3	false	false	false	2000
5881	"var_samp"	"create aggregate var_samp(val tinyint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5885	"var_samp"	"create aggregate var_samp(val smallint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5889	"var_samp"	"create aggregate var_samp(val integer) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5893	"var_samp"	"create aggregate var_samp(val wrd) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5897	"var_samp"	"create aggregate var_samp(val bigint) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5901	"var_samp"	"create aggregate var_samp(val real) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5905	"var_samp"	"create aggregate var_samp(val double) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5909	"var_samp"	"create aggregate var_samp(val date) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5913	"var_samp"	"create aggregate var_samp(val time) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5917	"var_samp"	"create aggregate var_samp(val timestamp) returns double\n\texternal name ""aggr"".""variance"";"	"aggr"	1	3	false	false	false	2000
5921	"var_pop"	"create aggregate var_pop(val tinyint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5925	"var_pop"	"create aggregate var_pop(val smallint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5929	"var_pop"	"create aggregate var_pop(val integer) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5933	"var_pop"	"create aggregate var_pop(val wrd) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5937	"var_pop"	"create aggregate var_pop(val bigint) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5941	"var_pop"	"create aggregate var_pop(val real) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5945	"var_pop"	"create aggregate var_pop(val double) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5949	"var_pop"	"create aggregate var_pop(val date) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5953	"var_pop"	"create aggregate var_pop(val time) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5957	"var_pop"	"create aggregate var_pop(val timestamp) returns double\n\texternal name ""aggr"".""variancep"";"	"aggr"	1	3	false	false	false	2000
5961	"median"	"create aggregate median(val tinyint) returns tinyint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5965	"median"	"create aggregate median(val smallint) returns smallint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5969	"median"	"create aggregate median(val integer) returns integer\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5973	"median"	"create aggregate median(val wrd) returns wrd\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5977	"median"	"create aggregate median(val bigint) returns bigint\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5981	"median"	"create aggregate median(val decimal) returns decimal\n \texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5985	"median"	"create aggregate median(val real) returns real\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5989	"median"	"create aggregate median(val double) returns double\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5993	"median"	"create aggregate median(val date) returns date\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
5997	"median"	"create aggregate median(val time) returns time\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6001	"median"	"create aggregate median(val timestamp) returns timestamp\n\texternal name ""aggr"".""median"";"	"aggr"	1	3	false	false	false	2000
6005	"quantile"	"create aggregate quantile(val tinyint, q double) returns tinyint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6010	"quantile"	"create aggregate quantile(val smallint, q double) returns smallint\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6015	"quantile"	"create aggregate quantile(val integer, q double) returns integer\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6020	"quantile"	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6025	"quantile"	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6030	"quantile"	"create aggregate quantile(val decimal, q double) returns decimal\n \texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6035	"quantile"	"create aggregate quantile(val real, q double) returns real\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6040	"quantile"	"create aggregate quantile(val double, q double) returns double\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6045	"quantile"	"create aggregate quantile(val date, q double) returns date\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6050	"quantile"	"create aggregate quantile(val time, q double) returns time\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6055	"quantile"	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name ""aggr"".""quantile"";"	"aggr"	1	3	false	false	false	2000
6060	"corr"	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6065	"corr"	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6070	"corr"	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6075	"corr"	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6080	"corr"	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6085	"corr"	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6090	"corr"	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name ""aggr"".""corr"";"	"aggr"	1	3	false	false	false	2000
6108	"mbr"	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr (g geometry) returns mbr external name geom.mbr;"	"geom"	1	1	false	false	false	2000
6112	"mbroverlaps"	"create function mbroverlaps(a mbr, b mbr) returns boolean external name geom.""mbroverlaps"";"	"geom"	1	1	false	false	false	2000
6117	"geomfromtext"	"-- The srid in the *FromText Functions is currently not used\ncreate function geomfromtext(wkt string, srid smallint) returns geometry external name geom.""GeomFromText"";"	"geom"	1	1	false	false	false	2000
6122	"pointfromtext"	"create function pointfromtext(wkt string, srid smallint) returns point external name geom.""PointFromText"";"	"geom"	1	1	false	false	false	2000
6127	"linefromtext"	"create function linefromtext(wkt string, srid smallint) returns linestring external name geom.""LineFromText"";"	"geom"	1	1	false	false	false	2000
6132	"polyfromtext"	"create function polyfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6137	"mpointfromtext"	"create function mpointfromtext(wkt string, srid smallint) returns multipoint external name geom.""MultiPointFromText"";"	"geom"	1	1	false	false	false	2000
6142	"mlinefromtext"	"create function mlinefromtext(wkt string, srid smallint) returns multilinestring external name geom.""MultiLineFromText"";"	"geom"	1	1	false	false	false	2000
6147	"mpolyfromtext"	"create function mpolyfromtext(wkt string, srid smallint) returns multipolygon external name geom.""MultiPolyFromText"";"	"geom"	1	1	false	false	false	2000
6152	"geomcollectionfromtext"	"create function geomcollectionfromtext(wkt string, srid smallint) returns multipolygon external name geom.""GeomCollectionFromText"";"	"geom"	1	1	false	false	false	2000
6157	"polygonfromtext"	"-- alias\ncreate function polygonfromtext(wkt string, srid smallint) returns polygon external name geom.""PolyFromText"";"	"geom"	1	1	false	false	false	2000
6162	"astext"	"create function astext(g geometry) returns string external name geom.""AsText"";"	"geom"	1	1	false	false	false	2000
6166	"x"	"create function x(g geometry) returns double external name geom.""X"";"	"geom"	1	1	false	false	false	2000
6170	"y"	"create function y(g geometry) returns double external name geom.""Y"";"	"geom"	1	1	false	false	false	2000
6174	"point"	"create function point(x double,y double) returns point external name geom.point;"	"geom"	1	1	false	false	false	2000
6179	"dimension"	"-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\n-- ogc basic methods\ncreate function dimension(g geometry) returns integer external name geom.""Dimension"";"	"geom"	1	1	false	false	false	2000
6183	"geometrytypeid"	"create function geometrytypeid(g geometry) returns integer external name geom.""GeometryTypeId"";"	"geom"	1	1	false	false	false	2000
6187	"srid"	"create function srid(g geometry) returns integer external name geom.""SRID"";"	"geom"	1	1	false	false	false	2000
6191	"envelope"	"create function envelope(g geometry) returns geometry external name geom.""Envelope"";"	"geom"	1	1	false	false	false	2000
6195	"isempty"	"create function isempty(g geometry) returns boolean external name geom.""IsEmpty"";"	"geom"	1	1	false	false	false	2000
6199	"issimple"	"create function issimple(g geometry) returns boolean external name geom.""IsSimple"";"	"geom"	1	1	false	false	false	2000
6203	"boundary"	"create function boundary(g geometry) returns geometry external name geom.""Boundary"";"	"geom"	1	1	false	false	false	2000
6207	"equals"	"-- ogc spatial relation methods\ncreate function equals(a geometry, b geometry) returns boolean external name geom.""Equals"";"	"geom"	1	1	false	false	false	2000
6212	"disjoint"	"create function disjoint(a geometry, b geometry) returns boolean external name geom.""Disjoint"";"	"geom"	1	1	false	false	false	2000
6217	"Intersect"	"create function ""Intersect""(a geometry, b geometry) returns boolean external name geom.""Intersect"";"	"geom"	1	1	false	false	false	2000
6222	"touches"	"create function touches(a geometry, b geometry) returns boolean external name geom.""Touches"";"	"geom"	1	1	false	false	false	2000
6227	"crosses"	"create function crosses(a geometry, b geometry) returns boolean external name geom.""Crosses"";"	"geom"	1	1	false	false	false	2000
6232	"within"	"create function within(a geometry, b geometry) returns boolean external name geom.""Within"";"	"geom"	1	1	false	false	false	2000
6237	"contains"	"create function contains(a geometry, b geometry) returns boolean external name geom.""Contains"";"	"geom"	1	1	false	false	false	2000
6242	"overlaps"	"create function overlaps(a geometry, b geometry) returns boolean external name geom.""Overlaps"";"	"geom"	1	1	false	false	false	2000
6247	"relate"	"create function relate(a geometry, b geometry, pattern string) returns boolean external name geom.""Relate"";"	"geom"	1	1	false	false	false	2000
6253	"area"	"-- ogc Spatial Analysis methods\n\ncreate function area(g geometry) returns float external name geom.""Area"";"	"geom"	1	1	false	false	false	2000
6257	"length"	"create function length(g geometry) returns float external name geom.""Length"";"	"geom"	1	1	false	false	false	2000
6261	"distance"	"create function distance(a geometry, b geometry) returns float external name geom.""Distance"";"	"geom"	1	1	false	false	false	2000
6266	"buffer"	"create function buffer(a geometry, distance float) returns geometry external name geom.""Buffer"";"	"geom"	1	1	false	false	false	2000
6271	"convexhull"	"create function convexhull(a geometry) returns geometry external name geom.""ConvexHull"";"	"geom"	1	1	false	false	false	2000
6275	"intersection"	"create function intersection(a geometry, b geometry) returns geometry external name geom.""Intersection"";"	"geom"	1	1	false	false	false	2000
6280	"Union"	"create function ""Union""(a geometry, b geometry) returns geometry external name geom.""Union"";"	"geom"	1	1	false	false	false	2000
6285	"difference"	"create function difference(a geometry, b geometry) returns geometry external name geom.""Difference"";"	"geom"	1	1	false	false	false	2000
6290	"symdifference"	"create function symdifference(a geometry, b geometry) returns geometry external name geom.""SymDifference"";"	"geom"	1	1	false	false	false	2000
6297	"filter"	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6294
6302	"filter"	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6294
6307	"filter"	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6294
6312	"filter"	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	"json"	1	1	false	false	false	6294
6317	"text"	"create function json.text(js json, e string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6294
6322	"number"	"create function json.number(js json)\nreturns float external name json.number;"	"json"	1	1	false	false	false	6294
6326	"integer"	"create function json.""integer""(js json)\nreturns bigint external name json.""integer"";"	"json"	1	1	false	false	false	6294
6330	"isvalid"	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6294
6334	"isobject"	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6294
6338	"isarray"	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6294
6342	"isvalid"	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	"json"	1	1	false	false	false	6294
6346	"isobject"	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	"json"	1	1	false	false	false	6294
6350	"isarray"	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	"json"	1	1	false	false	false	6294
6354	"length"	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	"json"	1	1	false	false	false	6294
6358	"keyarray"	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	"json"	1	1	false	false	false	6294
6362	"valuearray"	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	"json"	1	1	false	false	false	6294
6366	"text"	"create function json.text(js json)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6294
6370	"text"	"create function json.text(js string)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6294
6374	"text"	"create function json.text(js int)\nreturns string external name json.text;"	"json"	1	1	false	false	false	6294
6378	"output"	"-- The remainder awaits the implementation \n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	"json"	1	3	false	false	false	6294
6382	"tojsonarray"	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6294
6386	"tojsonarray"	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	"aggr"	1	3	false	false	false	6294
6390	"md5"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n-- Functions supporting jsonstore\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	"clients"	1	1	false	false	false	2000
6395	"uuid"	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.""new"";"	"uuid"	1	1	false	false	false	2000
6398	"isauuid"	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6402	"isauuid"	"create function sys.isauuid(u string)\nreturns uuid external name uuid.""isaUUID"";"	"uuid"	1	1	false	false	false	2000
6406	"chi2prob"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.""chi2prob"";"	"gsl"	1	1	false	false	false	2000
6411	"listdir"	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	"fits"	1	2	true	false	false	2000
6414	"fitsattach"	"create procedure fitsattach(fname string) external name fits.attach;"	"fits"	1	2	true	false	false	2000
6417	"fitsload"	"create procedure fitsload(tname string) external name fits.load;"	"fits"	1	2	true	false	false	2000
6420	"listdirpat"	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	"fits"	1	2	true	false	false	2000
6424	"storage"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By chancing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table procuding function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.""storage""()\nreturns table (""schema"" string, ""table"" string, ""column"" string, ""type"" string, ""mode"" string, location string, ""count"" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, imprints bigint, sorted boolean)\nexternal name sql.""storage"";"	"sql"	1	5	false	false	false	2000
6466	"storagemodelinit"	"-- this table can be adjusted to reflect the anticipated final database size\n\n-- The model input can be derived from the current database using\ncreate procedure sys.storagemodelinit()\nbegin\n\tdelete from sys.storagemodelinput;\n\n\tinsert into sys.storagemodelinput\n\tselect x.""schema"", x.""table"", x.""column"", x.""type"", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.""storage""() x;\n\n\tupdate sys.storagemodelinput\n\tset reference = true\n\twhere concat(concat(""schema"",""table""), ""column"") in (\n\t\tselect concat( concat(""fkschema"".""name"", ""fktable"".""name""), ""fkkeycol"".""name"" )\n\t\tfrom\t""sys"".""keys"" as    ""fkkey"",\n\t\t\t\t""sys"".""objects"" as ""fkkeycol"",\n\t\t\t\t""sys"".""tables"" as  ""fktable"",\n\t\t\t\t""sys"".""schemas"" as ""fkschema""\n\t\twhere   ""fktable"".""id"" = ""fkkey"".""table_id""\n\t\t\tand ""fkkey"".""id"" = ""fkkeycol"".""id""\n\t\t\tand ""fkschema"".""id"" = ""fktable"".""schema_id""\n\t\t\tand ""fkkey"".""rkey"" > -1);\n\n\tupdate sys.storagemodelinput\n\tset ""distinct"" = ""count"" -- assume all distinct\n\twhere ""type"" = 'varchar' or ""type""='clob';\nend;"	"user"	2	2	true	false	false	2000
6468	"columnsize"	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int'\t then return 4 * i;\n\twhen nme = 'bigint'\t then return 8 * i;\n\twhen nme = 'hugeint'\t then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	"user"	2	1	false	false	false	2000
6474	"heapsize"	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	"user"	2	1	false	false	false	2000
6480	"hashsize"	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6485	"imprintsize"	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\t\n\t\tor nme = 'bigint'\t\n\t\tor nme = 'hugeint'\t\n\t\tor nme = 'decimal'\t\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	"user"	2	1	false	false	false	2000
6490	"storagemodel"	"create function sys.storagemodel()\nreturns table (\n\t""schema"" string,\n\t""table"" string,\n\t""column"" string,\n\t""type"" string,\n\t""count""\tbigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.""schema"", i.""table"", i.""column"", i.""type"", i.""count"",\n\tcolumnsize(i.""type"", i.count, i.""distinct""),\n\theapsize(i.""type"", i.""distinct"", i.""atomwidth""),\n\thashsize(i.""reference"", i.""count""),\n\timprintsize(i.""count"",i.""type""),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	"user"	2	5	false	false	false	2000
6537	"analyze"	"create procedure analyze()\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6539	"analyze"	"create procedure analyze(tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6542	"analyze"	"create procedure analyze(sch string, tbl string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6546	"analyze"	"create procedure analyze(sch string, tbl string, col string)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6551	"analyze"	"-- control the sample size\ncreate procedure analyze(""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6554	"analyze"	"create procedure analyze(tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6558	"analyze"	"create procedure analyze(sch string, tbl string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6563	"analyze"	"create procedure analyze(sch string, tbl string, col string, ""sample"" bigint)\nexternal name sql.analyze;"	"sql"	1	2	true	false	false	2000
6569	"reverse"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	"udf"	1	1	false	false	false	2000
6573	"fuse"	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6578	"fuse"	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6583	"fuse"	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	"udf"	1	1	false	false	false	2000
6589	"bam_loader_repos"	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_repos;"	"bam"	1	2	true	false	false	6587
6594	"bam_loader_files"	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint, nr_threads smallint)\nexternal name bam.bam_loader_files;"	"bam"	1	2	true	false	false	6587
6599	"bam_loader_file"	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	"bam"	1	2	true	false	false	6587
6603	"bam_drop_file"	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	"bam"	1	2	true	false	false	6587
6607	"bam_flag"	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	"bam"	1	1	false	false	false	6587
6612	"reverse_seq"	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	"bam"	1	1	false	false	false	6587
6616	"reverse_qual"	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	"bam"	1	1	false	false	false	6587
6620	"seq_length"	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	"bam"	1	1	false	false	false	6587
6624	"sam_export"	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	"bam"	1	2	true	false	false	6587
6627	"bam_export"	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	"bam"	1	2	true	false	false	6587
6697	"generate_series"	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6702	"generate_series"	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6708	"generate_series"	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6713	"generate_series"	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6719	"generate_series"	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6724	"generate_series"	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6730	"generate_series"	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6735	"generate_series"	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6741	"generate_series"	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6747	"generate_series"	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6753	"generate_series"	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
6759	"generate_series"	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	"generator"	1	5	false	false	false	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."idxs" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024)
);
COPY 7 RECORDS INTO "sys"."idxs" FROM stdin USING DELIMITERS '\t','\n','"';
6637	6638	0	"files_pkey_file_id"
6648	6651	0	"sq_pkey_sn_file_id"
6650	6651	1	"sq_fkey_file_id"
6667	6670	0	"rg_pkey_id_file_id"
6669	6670	1	"rg_fkey_file_id"
6679	6682	0	"pg_pkey_id_file_id"
6681	6682	1	"pg_fkey_file_id"
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."keys" (
	"id"       INTEGER,
	"table_id" INTEGER,
	"type"     INTEGER,
	"name"     VARCHAR(1024),
	"rkey"     INTEGER,
	"action"   INTEGER
);
COPY 7 RECORDS INTO "sys"."keys" FROM stdin USING DELIMITERS '\t','\n','"';
6636	6638	0	"files_pkey_file_id"	-1	-1
6647	6651	0	"sq_pkey_sn_file_id"	-1	-1
6649	6651	2	"sq_fkey_file_id"	6636	514
6666	6670	0	"rg_pkey_id_file_id"	-1	-1
6668	6670	2	"rg_fkey_file_id"	6636	514
6678	6682	0	"pg_pkey_id_file_id"	-1	-1
6680	6682	2	"pg_fkey_file_id"	6636	514
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."objects" (
	"id"   INTEGER,
	"name" VARCHAR(1024),
	"nr"   INTEGER
);
COPY 20 RECORDS INTO "sys"."objects" FROM stdin USING DELIMITERS '\t','\n','"';
6637	"file_id"	0
6636	"file_id"	0
6648	"sn"	0
6648	"file_id"	1
6650	"file_id"	0
6647	"sn"	0
6647	"file_id"	1
6649	"file_id"	0
6667	"id"	0
6667	"file_id"	1
6669	"file_id"	0
6666	"id"	0
6666	"file_id"	1
6668	"file_id"	0
6679	"id"	0
6679	"file_id"	1
6681	"file_id"	0
6678	"id"	0
6678	"file_id"	1
6680	"file_id"	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."privileges" (
	"obj_id"     INTEGER,
	"auth_id"    INTEGER,
	"privileges" INTEGER,
	"grantor"    INTEGER,
	"grantable"  INTEGER
);
COPY 19 RECORDS INTO "sys"."privileges" FROM stdin USING DELIMITERS '\t','\n','"';
2001	1	1	0	0
2007	1	1	0	0
2016	1	1	0	0
2027	1	1	0	0
2036	1	1	0	0
2046	1	1	0	0
2050	1	1	0	0
2059	1	1	0	0
2068	1	1	0	0
2079	1	1	0	0
2086	1	1	0	0
2091	1	1	0	0
2102	1	1	0	0
5201	1	1	0	0
5211	1	1	0	0
5237	1	1	0	0
5240	1	1	0	0
5244	1	1	0	0
6766	1	1	3	0
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."schemas" (
	"id"            INTEGER,
	"name"          VARCHAR(1024),
	"authorization" INTEGER,
	"owner"         INTEGER,
	"system"        BOOLEAN
);
COPY 4 RECORDS INTO "sys"."schemas" FROM stdin USING DELIMITERS '\t','\n','"';
2000	"sys"	2	3	true
2106	"tmp"	2	3	true
6294	"json"	3	3	true
6587	"bam"	3	3	true
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."sequences" (
	"id"        INTEGER,
	"schema_id" INTEGER,
	"name"      VARCHAR(256),
	"start"     BIGINT,
	"minvalue"  BIGINT,
	"maxvalue"  BIGINT,
	"increment" BIGINT,
	"cacheinc"  BIGINT,
	"cycle"     BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."statistics" (
	"column_id" INTEGER,
	"type"   CHARACTER LARGE OBJECT,
	"width"  INTEGER,
	"stamp"  TIMESTAMP,
	"sample" BIGINT,
	"count"  BIGINT,
	"unique" BIGINT,
	"nils"   BIGINT,
	"minval" CHARACTER LARGE OBJECT,
	"maxval" CHARACTER LARGE OBJECT,
	"sorted" BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."storagemodelinput" (
	"schema"    CHARACTER LARGE OBJECT,
	"table"     CHARACTER LARGE OBJECT,
	"column"    CHARACTER LARGE OBJECT,
	"type"      CHARACTER LARGE OBJECT,
	"typewidth" INTEGER,
	"count"     BIGINT,
	"distinct"  BIGINT,
	"atomwidth" INTEGER,
	"reference" BOOLEAN,
	"sorted"    BOOLEAN
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."systemfunctions" (
	"function_id" INTEGER
);
COPY 1352 RECORDS INTO "sys"."systemfunctions" FROM stdin USING DELIMITERS '\t','\n','"';
28
29
30
31
32
33
34
35
36
37
38
42
43
44
45
48
49
50
68
69
70
71
72
73
74
75
76
77
78
79
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
27
39
40
41
46
47
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
80
81
82
83
84
85
86
5222
5225
5231
5251
5256
5261
5265
5269
5273
5277
5280
5284
5288
5292
5296
5300
5304
5308
5312
5316
5320
5324
5328
5332
5336
5343
5349
5354
5359
5365
5369
5373
5377
5382
5386
5390
5394
5398
5402
5407
5412
5417
5422
5432
5482
5484
5486
5489
5491
5521
5525
5528
5532
5536
5540
5544
5548
5552
5557
5562
5567
5572
5577
5582
5587
5592
5597
5602
5607
5612
5617
5622
5627
5632
5637
5641
5657
5660
5664
5667
5671
5674
5681
5686
5692
5698
5703
5708
5712
5716
5720
5724
5727
5737
5745
5759
5763
5783
5786
5789
5792
5795
5798
5801
5805
5809
5813
5817
5821
5825
5829
5833
5837
5841
5845
5849
5853
5857
5861
5865
5869
5873
5877
5881
5885
5889
5893
5897
5901
5905
5909
5913
5917
5921
5925
5929
5933
5937
5941
5945
5949
5953
5957
5961
5965
5969
5973
5977
5981
5985
5989
5993
5997
6001
6005
6010
6015
6020
6025
6030
6035
6040
6045
6050
6055
6060
6065
6070
6075
6080
6085
6090
6108
6112
6117
6122
6127
6132
6137
6142
6147
6152
6157
6162
6166
6170
6174
6179
6183
6187
6191
6195
6199
6203
6207
6212
6217
6222
6227
6232
6237
6242
6247
6253
6257
6261
6266
6271
6275
6280
6285
6290
6297
6302
6307
6312
6317
6322
6326
6330
6334
6338
6342
6346
6350
6354
6358
6362
6366
6370
6374
6378
6382
6386
6390
6395
6398
6402
6406
6411
6414
6417
6420
6424
6466
6468
6474
6480
6485
6490
6537
6539
6542
6546
6551
6554
6558
6563
6569
6573
6578
6583
6589
6594
6599
6603
6607
6612
6616
6620
6624
6627
6697
6702
6708
6713
6719
6724
6730
6735
6741
6747
6753
6759
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."triggers" (
	"id"          INTEGER,
	"name"        VARCHAR(1024),
	"table_id"    INTEGER,
	"time"        SMALLINT,
	"orientation" SMALLINT,
	"event"       SMALLINT,
	"old_name"    VARCHAR(1024),
	"new_name"    VARCHAR(1024),
	"condition"   VARCHAR(2048),
	"statement"   VARCHAR(2048)
);
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."types" (
	"id"         INTEGER,
	"systemname" VARCHAR(256),
	"sqlname"    VARCHAR(1024),
	"digits"     INTEGER,
	"scale"      INTEGER,
	"radix"      INTEGER,
	"eclass"     INTEGER,
	"schema_id"  INTEGER
);
COPY 44 RECORDS INTO "sys"."types" FROM stdin USING DELIMITERS '\t','\n','"';
0	"void"	"any"	0	0	0	0	0
1	"bat"	"table"	0	0	0	1	0
2	"ptr"	"ptr"	0	0	0	1	0
3	"bit"	"boolean"	1	0	2	2	0
4	"str"	"char"	0	0	0	3	0
5	"str"	"varchar"	0	0	0	4	0
6	"str"	"clob"	0	0	0	4	0
7	"oid"	"oid"	63	0	2	6	0
8	"bte"	"tinyint"	8	1	2	7	0
9	"sht"	"smallint"	16	1	2	7	0
10	"int"	"int"	32	1	2	7	0
11	"lng"	"bigint"	64	1	2	7	0
12	"wrd"	"wrd"	64	1	2	7	0
13	"bte"	"decimal"	2	1	10	10	0
14	"sht"	"decimal"	4	1	10	10	0
15	"int"	"decimal"	9	1	10	10	0
16	"lng"	"decimal"	19	1	10	10	0
17	"flt"	"real"	24	2	2	11	0
18	"dbl"	"double"	53	2	2	11	0
19	"int"	"month_interval"	32	0	2	8	0
20	"lng"	"sec_interval"	19	1	10	9	0
21	"daytime"	"time"	7	0	0	12	0
22	"daytime"	"timetz"	7	1	0	12	0
23	"date"	"date"	0	0	0	13	0
24	"timestamp"	"timestamp"	7	0	0	14	0
25	"timestamp"	"timestamptz"	7	1	0	14	0
26	"sqlblob"	"blob"	0	0	0	5	0
5278	"url"	"url"	0	0	0	15	2000
5363	"inet"	"inet"	0	0	0	15	2000
6094	"wkb"	"point"	0	0	0	15	2000
6095	"wkb"	"curve"	0	0	0	15	2000
6096	"wkb"	"linestring"	0	0	0	15	2000
6097	"wkb"	"surface"	0	0	0	15	2000
6098	"wkb"	"polygon"	0	0	0	15	2000
6099	"wkb"	"multipoint"	0	0	0	15	2000
6100	"wkb"	"multicurve"	0	0	0	15	2000
6101	"wkb"	"multilinestring"	0	0	0	15	2000
6102	"wkb"	"multisurface"	0	0	0	15	2000
6103	"wkb"	"multipolygon"	0	0	0	15	2000
6104	"wkb"	"geometry"	0	0	0	15	2000
6105	"wkb"	"geomcollection"	0	0	0	15	2000
6106	"mbr"	"mbr"	0	0	0	15	2000
6295	"json"	"json"	0	0	0	15	2000
6393	"uuid"	"uuid"	0	0	0	15	2000
COMMIT;
START TRANSACTION;
CREATE TABLE "sys"."user_role" (
	"login_id" INTEGER,
	"role_id"  INTEGER
);
COMMIT;

# 13:32:07 >  
# 13:32:07 >  "Done."
# 13:32:07 >  

