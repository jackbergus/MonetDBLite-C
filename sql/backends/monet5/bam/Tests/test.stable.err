stderr of test 'test` in directory 'sql/backends/monet5/bam` itself:


# 20:58:07 >  
# 20:58:07 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32253" "--set" "mapi_usock=/var/tmp/mtest-29485/.s.monetdb.32253" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch2/robin/Monet/PREFIX/DFT/var/MonetDB/mTests_sql_backends_monet5_bam" "--set" "mal_listing=0"
# 20:58:07 >  

# builtin opt 	gdk_dbpath = /export/scratch2/robin/Monet/PREFIX/DFT/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 32253
# cmdline opt 	mapi_usock = /var/tmp/mtest-29485/.s.monetdb.32253
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /export/scratch2/robin/Monet/PREFIX/DFT/var/MonetDB/mTests_sql_backends_monet5_bam
# cmdline opt 	mal_listing = 0
# cmdline opt 	gdk_debug = 536870922
# <bam_loader>: Loader started for 2 BAM files...
# # <bam_loader> Creating schema 'bam'...
# # CREATE SCHEMA bam;
# # <bam_loader> Creating table 'files'...
# # CREATE TABLE bam.files ( 
#         file_id                        BIGINT      NOT NULL, 
#         file_location                  STRING      NOT NULL, 
#         dbschema                       SMALLINT    NOT NULL, 
#         format_version                 VARCHAR(7), 
#         sorting_order                  VARCHAR(10), 
#         comments                       STRING, 
#         CONSTRAINT files_pkey_file_id PRIMARY KEY (file_id) 
#     );
# # <bam_loader> Creating table 'sq'...
# # CREATE TABLE bam.sq ( 
#         sn                             STRING      NOT NULL, 
#         file_id                        BIGINT      NOT NULL, 
#         ln                             INT, 
#         "as"                         INT, 
#         m5                             STRING, 
#         sp                             STRING, 
#         ur                             STRING, 
#         CONSTRAINT sq_pkey_sn_file_id PRIMARY KEY (sn, file_id), 
#         CONSTRAINT sq_fkey_file_id FOREIGN KEY (file_id) REFERENCES bam.files (file_id) 
#     );
# # <bam_loader> Creating table 'rg'...
# # CREATE TABLE bam.rg ( 
#         id                             STRING      NOT NULL, 
#         file_id                        BIGINT      NOT NULL, 
#         cn                             STRING, 
#         ds                             STRING, 
#         dt                             TIMESTAMP, 
#         fo                             STRING, 
#         ks                             STRING, 
#         lb                             STRING, 
#         pg                             STRING, 
#         pi                             INT, 
#         pl                             STRING, 
#         pu                             STRING, 
#         sm                             STRING, 
#         CONSTRAINT rg_pkey_id_file_id PRIMARY KEY (id, file_id), 
#         CONSTRAINT rg_fkey_file_id FOREIGN KEY (file_id) REFERENCES bam.files (file_id) 
#     );
# # <bam_loader> Creating table 'pg'...
# # CREATE TABLE bam.pg ( 
#         id                             STRING      NOT NULL, 
#         file_id                        BIGINT      NOT NULL, 
#         pn                             STRING, 
#         cl                             STRING, 
#         pp                             STRING, 
#         vn                             STRING, 
#         CONSTRAINT pg_pkey_id_file_id PRIMARY KEY (id, file_id), 
#         CONSTRAINT pg_fkey_file_id FOREIGN KEY (file_id) REFERENCES bam.files (file_id) 
#     );
# # <bam_loader> Creating table 'export'...
# # CREATE TABLE bam.export ( 
#         qname                         STRING      NOT NULL, 
#         flag                          SMALLINT    NOT NULL, 
#         rname                         STRING      NOT NULL, 
#         pos                           INT         NOT NULL, 
#         mapq                          SMALLINT    NOT NULL, 
#         cigar                         STRING      NOT NULL, 
#         rnext                         STRING      NOT NULL, 
#         pnext                         INT         NOT NULL, 
#         tlen                          INT         NOT NULL, 
#         seq                           STRING      NOT NULL, 
#         qual                          STRING      NOT NULL  
#     );
# # <bam_loader> Retrieving next file id...
# # <bam_loader> Initializing BAM wrapper for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file1.bam'...
# # <bam_loader> Creating alignment tables for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_1 ( 
#         virtual_offset                BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         flag                          SMALLINT    NOT NULL, 
#         rname                         STRING      NOT NULL, 
#         pos                           INT         NOT NULL, 
#         mapq                          SMALLINT    NOT NULL, 
#         cigar                         STRING      NOT NULL, 
#         rnext                         STRING      NOT NULL, 
#         pnext                         INT         NOT NULL, 
#         tlen                          INT         NOT NULL, 
#         seq                           STRING      NOT NULL, 
#         qual                          STRING      NOT NULL, 
#         CONSTRAINT alignments_1_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.alignments_extra_1 ( 
#         tag                           CHAR(2)     NOT NULL, 
#         virtual_offset                BIGINT      NOT NULL, 
#         type                          CHAR(1)     NOT NULL, 
#         value                         STRING, 
#         CONSTRAINT alignments_extra_1_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
#         CONSTRAINT alignments_extra_1_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
#             REFERENCES bam.alignments_1 (virtual_offset) 
#     );
# # <bam_loader> Creating alignment tables for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_2 ( 
#         virtual_offset                BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         flag                          SMALLINT    NOT NULL, 
#         rname                         STRING      NOT NULL, 
#         pos                           INT         NOT NULL, 
#         mapq                          SMALLINT    NOT NULL, 
#         cigar                         STRING      NOT NULL, 
#         rnext                         STRING      NOT NULL, 
#         pnext                         INT         NOT NULL, 
#         tlen                          INT         NOT NULL, 
#         seq                           STRING      NOT NULL, 
#         qual                          STRING      NOT NULL, 
#         CONSTRAINT alignments_2_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.alignments_extra_2 ( 
#         tag                           CHAR(2)     NOT NULL, 
#         virtual_offset                BIGINT      NOT NULL, 
#         type                          CHAR(1)     NOT NULL, 
#         value                         STRING, 
#         CONSTRAINT alignments_extra_2_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
#         CONSTRAINT alignments_extra_2_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
#             REFERENCES bam.alignments_2 (virtual_offset) 
#     );
# # <bam_loader> Creating reader threads...
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file2.sam' (file id 1)...
# # <Thread 3> Starting on next file...
# # <Thread 4> Starting on next file...
# # <Thread 5> Starting on next file...
# # <Thread 3> Processing alignments of file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file1.bam' (file id 2)...
# # <Thread 4> No files left to work on; thread done
# # <Thread 5> No files left to work on; thread done
# # <Thread 1> Starting on next file...
# # <Thread 2> Starting on next file...
# # <Thread 2> No files left to work on; thread done
# # <Thread 1> No files left to work on; thread done
# # <Thread 6> Starting on next file...
# # <Thread 7> Starting on next file...
# # <Thread 7> No files left to work on; thread done
# # <Thread 6> No files left to work on; thread done
# # <Thread 8> Starting on next file...
# # <Thread 8> No files left to work on; thread done
# # <Thread 10> Starting on next file...
# # <Thread 10> No files left to work on; thread done
# # <Thread 9> Starting on next file...
# # <Thread 11> Starting on next file...
# # <Thread 9> No files left to work on; thread done
# # <Thread 11> No files left to work on; thread done
# # <Thread 12> Starting on next file...
# # <Thread 12> No files left to work on; thread done
# # <Thread 13> Starting on next file...
# # <Thread 13> No files left to work on; thread done
# # <Thread 14> Starting on next file...
# # <Thread 14> No files left to work on; thread done
# # <Thread 15> Starting on next file...
# # <Thread 15> No files left to work on; thread done
# # <Thread 16> Starting on next file...
# # <Thread 16> No files left to work on; thread done
# # <Thread 17> Starting on next file...
# # <Thread 17> No files left to work on; thread done
# # <Thread 18> Starting on next file...
# # <Thread 18> No files left to work on; thread done
# # <Thread 19> Starting on next file...
# # <Thread 19> No files left to work on; thread done
# # <Thread 20> Starting on next file...
# # <Thread 20> No files left to work on; thread done
# # <Thread 21> Starting on next file...
# # <Thread 21> No files left to work on; thread done
# # <Thread 22> Starting on next file...
# # <Thread 22> No files left to work on; thread done
# # <Thread 23> Starting on next file...
# # <Thread 23> No files left to work on; thread done
# # <Thread 3> All alignments in file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file1.bam' (file id 2) processed!
# # <Thread 24> Starting on next file...
# # <Thread 24> No files left to work on; thread done
# # <Thread 3> Starting on next file...
# # <Thread 3> No files left to work on; thread done
# # <Thread 25> Starting on next file...
# # <Thread 25> No files left to work on; thread done
# # <Thread 26> Starting on next file...
# # <Thread 26> No files left to work on; thread done
# # <Thread 27> Starting on next file...
# # <Thread 27> No files left to work on; thread done
# # <Thread 28> Starting on next file...
# # <Thread 28> No files left to work on; thread done
# # <Thread 29> Starting on next file...
# # <Thread 29> No files left to work on; thread done
# # <Thread 30> Starting on next file...
# # <Thread 30> No files left to work on; thread done
# # <bam_loader> Waiting for reader threads to finish...
# # <Thread 31> Starting on next file...
# # <Thread 31> No files left to work on; thread done
# # <Thread 0> All alignments in file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/file2.sam' (file id 1) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> No files left to work on; thread done
# # <bam_loader> Copying data into DB...
# # COPY BINARY INTO bam.files FROM ('bam_binaries/1/files_0', 'bam_binaries/1/files_1', 'bam_binaries/1/files_2', 'bam_binaries/1/files_3', 'bam_binaries/1/files_4', 'bam_binaries/1/files_5');
# COPY BINARY INTO bam.sq    FROM ('bam_binaries/1/sq_0', 'bam_binaries/1/sq_1', 'bam_binaries/1/sq_2', 'bam_binaries/1/sq_3', 'bam_binaries/1/sq_4', 'bam_binaries/1/sq_5', 'bam_binaries/1/sq_6');
# COPY BINARY INTO bam.pg    FROM ('bam_binaries/1/pg_0', 'bam_binaries/1/pg_1', 'bam_binaries/1/pg_2', 'bam_binaries/1/pg_3', 'bam_binaries/1/pg_4', 'bam_binaries/1/pg_5');
# COPY BINARY INTO bam.alignments_1 FROM     ('bam_binaries/1/alignments_0', 'bam_binaries/1/alignments_1', 'bam_binaries/1/alignments_2', 'bam_binaries/1/alignments_3', 'bam_binaries/1/alignments_4', 'bam_binaries/1/alignments_5', 'bam_binaries/1/alignments_6', 'bam_binaries/1/alignments_7', 'bam_binaries/1/alignments_8', 'bam_binaries/1/alignments_9', 'bam_binaries/1/alignments_10', 'bam_binaries/1/alignments_11');
# COPY BINARY INTO bam.alignments_extra_1 FROM ('bam_binaries/1/alignments_extra_0', 'bam_binaries/1/alignments_extra_1', 'bam_binaries/1/alignments_extra_2', 'bam_binaries/1/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/2/files_0', 'bam_binaries/2/files_1', 'bam_binaries/2/files_2', 'bam_binaries/2/files_3', 'bam_binaries/2/files_4', 'bam_binaries/2/files_5');
# COPY BINARY INTO bam.sq    FROM ('bam_binaries/2/sq_0', 'bam_binaries/2/sq_1', 'bam_binaries/2/sq_2', 'bam_binaries/2/sq_3', 'bam_binaries/2/sq_4', 'bam_binaries/2/sq_5', 'bam_binaries/2/sq_6');
# COPY BINARY INTO bam.pg    FROM ('bam_binaries/2/pg_0', 'bam_binaries/2/pg_1', 'bam_binaries/2/pg_2', 'bam_binaries/2/pg_3', 'bam_binaries/2/pg_4', 'bam_binaries/2/pg_5');
# COPY BINARY INTO bam.alignments_2 FROM     ('bam_binaries/2/alignments_0', 'bam_binaries/2/alignments_1', 'bam_binaries/2/alignments_2', 'bam_binaries/2/alignments_3', 'bam_binaries/2/alignments_4', 'bam_binaries/2/alignments_5', 'bam_binaries/2/alignments_6', 'bam_binaries/2/alignments_7', 'bam_binaries/2/alignments_8', 'bam_binaries/2/alignments_9', 'bam_binaries/2/alignments_10', 'bam_binaries/2/alignments_11');
# COPY BINARY INTO bam.alignments_extra_2 FROM ('bam_binaries/2/alignments_extra_0', 'bam_binaries/2/alignments_extra_1', 'bam_binaries/2/alignments_extra_2', 'bam_binaries/2/alignments_extra_3');
# 
# # <bam_loader>: Loader finished processing 2 BAM files...
# # <bam_loader>: Loader started for 2 BAM files...
# # <bam_loader> Retrieving next file id...
# # <bam_loader> Initializing BAM wrapper for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file1.bam'...
# # <bam_loader> Parsing header for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file2.sam'...
# # <bam_loader> Parsing header for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file1.bam'...
# # <bam_loader> Checking sortedness for BAM file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file2.sam'...
# # <bam_loader> Checking sortedness for BAM file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file1.bam'...
# # <bam_loader> Creating alignment tables for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file2.sam'...
# # CREATE TABLE bam.paired_primary_alignments_3 ( 
#         l_virtual_offset              BIGINT      NOT NULL, 
#         r_virtual_offset              BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         l_flag                        SMALLINT    NOT NULL, 
#         l_rname                       STRING      NOT NULL, 
#         l_pos                         INT         NOT NULL, 
#         l_mapq                        SMALLINT    NOT NULL, 
#         l_cigar                       STRING      NOT NULL, 
#         l_rnext                       STRING      NOT NULL, 
#         l_pnext                       INT         NOT NULL, 
#         l_tlen                        INT         NOT NULL, 
#         l_seq                         STRING      NOT NULL, 
#         l_qual                        STRING      NOT NULL, 
#         r_flag                        SMALLINT    NOT NULL, 
#         r_rname                       STRING      NOT NULL, 
#         r_pos                         INT         NOT NULL, 
#         r_mapq                        SMALLINT    NOT NULL, 
#         r_cigar                       STRING      NOT NULL, 
#         r_rnext                       STRING      NOT NULL, 
#         r_pnext                       INT         NOT NULL, 
#         r_tlen                        INT         NOT NULL, 
#         r_seq                         STRING      NOT NULL, 
#         r_qual                        STRING      NOT NULL, 
#         CONSTRAINT paired_primary_alignments_3_pkey_l_virtual_offset_r_virtual_offset 
#             PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.paired_secondary_alignments_3 ( 
#         l_virtual_offset              BIGINT      NOT NULL, 
#         r_virtual_offset              BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         l_flag                        SMALLINT    NOT NULL, 
#         l_rname                       STRING      NOT NULL, 
#         l_pos                         INT         NOT NULL, 
#         l_mapq                        SMALLINT    NOT NULL, 
#         l_cigar                       STRING      NOT NULL, 
#         l_rnext                       STRING      NOT NULL, 
#         l_pnext                       INT         NOT NULL, 
#         l_tlen                        INT         NOT NULL, 
#         l_seq                         STRING      NOT NULL, 
#         l_qual                        STRING      NOT NULL, 
#         r_flag                        SMALLINT    NOT NULL, 
#         r_rname                       STRING      NOT NULL, 
#         r_pos                         INT         NOT NULL, 
#         r_mapq                        SMALLINT    NOT NULL, 
#         r_cigar                       STRING      NOT NULL, 
#         r_rnext                       STRING      NOT NULL, 
#         r_pnext                       INT         NOT NULL, 
#         r_tlen                        INT         NOT NULL, 
#         r_seq                         STRING      NOT NULL, 
#         r_qual                        STRING      NOT NULL, 
#         CONSTRAINT paired_secondary_alignments_3_pkey_l_virtual_offset_r_virtual_offset 
#             PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.unpaired_alignments_3 ( 
#         virtual_offset                BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         flag                          SMALLINT    NOT NULL, 
#         rname                         STRING      NOT NULL, 
#         pos                           INT         NOT NULL, 
#         mapq                          SMALLINT    NOT NULL, 
#         cigar                         STRING      NOT NULL, 
#         rnext                         STRING      NOT NULL, 
#         pnext                         INT         NOT NULL, 
#         tlen                          INT         NOT NULL, 
#         seq                           STRING      NOT NULL, 
#         qual                          STRING      NOT NULL, 
#         CONSTRAINT unpaired_alignments_3_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.alignments_extra_3 ( 
#     tag                           CHAR(2)     NOT NULL, 
#     virtual_offset                BIGINT      NOT NULL, 
#     type                          CHAR(1)     NOT NULL, 
#     value                         STRING, 
#     CONSTRAINT alignments_extra_3_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset) 
#     ); 
#     
#     CREATE VIEW bam.unpaired_primary_alignments_3 AS 
#         SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
#             l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
#         FROM bam.paired_primary_alignments_3 
#         UNION ALL 
#         SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
#             r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
#         FROM bam.paired_primary_alignments_3; 
#     
#     CREATE VIEW bam.unpaired_secondary_alignments_3 AS 
#         SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
#             l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
#         FROM bam.paired_secondary_alignments_3 
#         UNION ALL 
#         SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
#             r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
#         FROM bam.paired_secondary_alignments_3; 
#     
#     CREATE VIEW bam.unpaired_all_alignments_3 AS 
#     SELECT * 
#     FROM bam.unpaired_primary_alignments_3 
#     UNION ALL 
#     SELECT * 
#     FROM bam.unpaired_secondary_alignments_3 
#     UNION ALL 
#     SELECT * 
#     FROM bam.unpaired_alignments_3;
# # <bam_loader> Creating alignment tables for file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file1.bam'...
# # CREATE TABLE bam.paired_primary_alignments_4 ( 
#         l_virtual_offset              BIGINT      NOT NULL, 
#         r_virtual_offset              BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         l_flag                        SMALLINT    NOT NULL, 
#         l_rname                       STRING      NOT NULL, 
#         l_pos                         INT         NOT NULL, 
#         l_mapq                        SMALLINT    NOT NULL, 
#         l_cigar                       STRING      NOT NULL, 
#         l_rnext                       STRING      NOT NULL, 
#         l_pnext                       INT         NOT NULL, 
#         l_tlen                        INT         NOT NULL, 
#         l_seq                         STRING      NOT NULL, 
#         l_qual                        STRING      NOT NULL, 
#         r_flag                        SMALLINT    NOT NULL, 
#         r_rname                       STRING      NOT NULL, 
#         r_pos                         INT         NOT NULL, 
#         r_mapq                        SMALLINT    NOT NULL, 
#         r_cigar                       STRING      NOT NULL, 
#         r_rnext                       STRING      NOT NULL, 
#         r_pnext                       INT         NOT NULL, 
#         r_tlen                        INT         NOT NULL, 
#         r_seq                         STRING      NOT NULL, 
#         r_qual                        STRING      NOT NULL, 
#         CONSTRAINT paired_primary_alignments_4_pkey_l_virtual_offset_r_virtual_offset 
#             PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.paired_secondary_alignments_4 ( 
#         l_virtual_offset              BIGINT      NOT NULL, 
#         r_virtual_offset              BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         l_flag                        SMALLINT    NOT NULL, 
#         l_rname                       STRING      NOT NULL, 
#         l_pos                         INT         NOT NULL, 
#         l_mapq                        SMALLINT    NOT NULL, 
#         l_cigar                       STRING      NOT NULL, 
#         l_rnext                       STRING      NOT NULL, 
#         l_pnext                       INT         NOT NULL, 
#         l_tlen                        INT         NOT NULL, 
#         l_seq                         STRING      NOT NULL, 
#         l_qual                        STRING      NOT NULL, 
#         r_flag                        SMALLINT    NOT NULL, 
#         r_rname                       STRING      NOT NULL, 
#         r_pos                         INT         NOT NULL, 
#         r_mapq                        SMALLINT    NOT NULL, 
#         r_cigar                       STRING      NOT NULL, 
#         r_rnext                       STRING      NOT NULL, 
#         r_pnext                       INT         NOT NULL, 
#         r_tlen                        INT         NOT NULL, 
#         r_seq                         STRING      NOT NULL, 
#         r_qual                        STRING      NOT NULL, 
#         CONSTRAINT paired_secondary_alignments_4_pkey_l_virtual_offset_r_virtual_offset 
#             PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.unpaired_alignments_4 ( 
#         virtual_offset                BIGINT      NOT NULL, 
#         qname                         STRING      NOT NULL, 
#         flag                          SMALLINT    NOT NULL, 
#         rname                         STRING      NOT NULL, 
#         pos                           INT         NOT NULL, 
#         mapq                          SMALLINT    NOT NULL, 
#         cigar                         STRING      NOT NULL, 
#         rnext                         STRING      NOT NULL, 
#         pnext                         INT         NOT NULL, 
#         tlen                          INT         NOT NULL, 
#         seq                           STRING      NOT NULL, 
#         qual                          STRING      NOT NULL, 
#         CONSTRAINT unpaired_alignments_4_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
#     ); 
#     
#     CREATE TABLE bam.alignments_extra_4 ( 
#     tag                           CHAR(2)     NOT NULL, 
#     virtual_offset                BIGINT      NOT NULL, 
#     type                          CHAR(1)     NOT NULL, 
#     value                         STRING, 
#     CONSTRAINT alignments_extra_4_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset) 
#     ); 
#     
#     CREATE VIEW bam.unpaired_primary_alignments_4 AS 
#         SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
#             l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
#         FROM bam.paired_primary_alignments_4 
#         UNION ALL 
#         SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
#             r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
#         FROM bam.paired_primary_alignments_4; 
#     
#     CREATE VIEW bam.unpaired_secondary_alignments_4 AS 
#         SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
#             l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
#         FROM bam.paired_secondary_alignments_4 
#         UNION ALL 
#         SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
#             r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
#         FROM bam.paired_secondary_alignments_4; 
#     
#     CREATE VIEW bam.unpaired_all_alignments_4 AS 
#     SELECT * 
#     FROM bam.unpaired_primary_alignments_4 
#     UNION ALL 
#     SELECT * 
#     FROM bam.unpaired_secondary_alignments_4 
#     UNION ALL 
#     SELECT * 
#     FROM bam.unpaired_alignments_4;
# # <bam_loader> Creating reader threads...
# # <Thread 2> Starting on next file...
# # <Thread 1> Starting on next file...
# # <Thread 7> Starting on next file...
# # <Thread 10> Starting on next file...
# # <Thread 3> Starting on next file...
# # <Thread 3> No files left to work on; thread done
# # <Thread 1> Processing alignments of file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file1.bam' (file id 4)...
# # <Thread 7> No files left to work on; thread done
# # <Thread 9> Starting on next file...
# # <Thread 6> Starting on next file...
# # <Thread 6> No files left to work on; thread done
# # <Thread 10> No files left to work on; thread done
# # <Thread 9> No files left to work on; thread done
# # <Thread 2> Processing alignments of file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file2.sam' (file id 3)...
# # <Thread 0> Starting on next file...
# # <Thread 0> No files left to work on; thread done
# # <Thread 8> Starting on next file...
# # <Thread 8> No files left to work on; thread done
# # <Thread 5> Starting on next file...
# # <Thread 5> No files left to work on; thread done
# # <Thread 4> Starting on next file...
# # <Thread 4> No files left to work on; thread done
# # <Thread 14> Starting on next file...
# # <Thread 14> No files left to work on; thread done
# # <Thread 15> Starting on next file...
# # <Thread 15> No files left to work on; thread done
# # <Thread 11> Starting on next file...
# # <Thread 11> No files left to work on; thread done
# # <Thread 12> Starting on next file...
# # <Thread 12> No files left to work on; thread done
# # <Thread 16> Starting on next file...
# # <Thread 16> No files left to work on; thread done
# # <Thread 17> Starting on next file...
# # <Thread 13> Starting on next file...
# # <Thread 17> No files left to work on; thread done
# # <Thread 13> No files left to work on; thread done
# # <Thread 18> Starting on next file...
# # <Thread 18> No files left to work on; thread done
# # <Thread 19> Starting on next file...
# # <Thread 19> No files left to work on; thread done
# # <Thread 20> Starting on next file...
# # <Thread 20> No files left to work on; thread done
# # <Thread 21> Starting on next file...
# # <Thread 21> No files left to work on; thread done
# # <Thread 22> Starting on next file...
# # <Thread 22> No files left to work on; thread done
# # <Thread 23> Starting on next file...
# # <Thread 23> No files left to work on; thread done
# # <Thread 24> Starting on next file...
# # <Thread 24> No files left to work on; thread done
# # <Thread 25> Starting on next file...
# # <Thread 25> No files left to work on; thread done
# # <Thread 26> Starting on next file...
# # <Thread 26> No files left to work on; thread done
# # <Thread 27> Starting on next file...
# # <Thread 27> No files left to work on; thread done
# # <Thread 28> Starting on next file...
# # <Thread 28> No files left to work on; thread done
# # <Thread 29> Starting on next file...
# # <Thread 29> No files left to work on; thread done
# # <Thread 30> Starting on next file...
# # <Thread 30> No files left to work on; thread done
# # <bam_loader> Waiting for reader threads to finish...
# # <Thread 31> Starting on next file...
# # <Thread 31> No files left to work on; thread done
# # <Thread 1> All alignments in file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file1.bam' (file id 4) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> No files left to work on; thread done
# # <Thread 2> All alignments in file '/export/scratch2/robin/Monet/SOURCE/MonetDB/sql/backends/monet5/bam/Tests/files/queryname/file2.sam' (file id 3) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> No files left to work on; thread done
# # <bam_loader> Copying data into DB...
# # COPY BINARY INTO bam.files FROM ('bam_binaries/3/files_0', 'bam_binaries/3/files_1', 'bam_binaries/3/files_2', 'bam_binaries/3/files_3', 'bam_binaries/3/files_4', 'bam_binaries/3/files_5');
# COPY BINARY INTO bam.sq    FROM ('bam_binaries/3/sq_0', 'bam_binaries/3/sq_1', 'bam_binaries/3/sq_2', 'bam_binaries/3/sq_3', 'bam_binaries/3/sq_4', 'bam_binaries/3/sq_5', 'bam_binaries/3/sq_6');
# COPY BINARY INTO bam.pg    FROM ('bam_binaries/3/pg_0', 'bam_binaries/3/pg_1', 'bam_binaries/3/pg_2', 'bam_binaries/3/pg_3', 'bam_binaries/3/pg_4', 'bam_binaries/3/pg_5');
# COPY BINARY INTO bam.unpaired_alignments_3 FROM     ('bam_binaries/3/alignments_0', 'bam_binaries/3/alignments_1', 'bam_binaries/3/alignments_2', 'bam_binaries/3/alignments_3', 'bam_binaries/3/alignments_4', 'bam_binaries/3/alignments_5', 'bam_binaries/3/alignments_6', 'bam_binaries/3/alignments_7', 'bam_binaries/3/alignments_8', 'bam_binaries/3/alignments_9', 'bam_binaries/3/alignments_10', 'bam_binaries/3/alignments_11');
# COPY BINARY INTO bam.paired_primary_alignments_3 FROM     ('bam_binaries/3/alignments_paired_primary_0', 'bam_binaries/3/alignments_paired_primary_1', 'bam_binaries/3/alignments_paired_primary_2', 'bam_binaries/3/alignments_paired_primary_3', 'bam_binaries/3/alignments_paired_primary_4', 'bam_binaries/3/alignments_paired_primary_5', 'bam_binaries/3/alignments_paired_primary_6', 'bam_binaries/3/alignments_paired_primary_7', 'bam_binaries/3/alignments_paired_primary_8', 'bam_binaries/3/alignments_paired_primary_9', 'bam_binaries/3/alignments_paired_primary_10', 'bam_binaries/3/alignments_paired_primary_11',      'bam_binaries/3/alignments_paired_primary_12', 'bam_binaries/3/alignments_paired_primary_13', 'bam_binaries/3/alignments_paired_primary_14', 'bam_binaries/3/alignments_paired_primary_15', 'bam_binaries/3/alignments_paired_primary_16', 'bam_binaries/3/alignments_paired_primary_17', 'bam_binaries/3/alignments_paired_primary_18', 'bam_binaries/3/alignments_paired_primary_19', 'bam_binaries/3/alignments_paired_primary_20', 'bam_binaries/3/alignments_paired_primary_21', 'bam_binaries/3/alignments_paired_primary_22');
# COPY BINARY INTO bam.paired_secondary_alignments_3 FROM     ('bam_binaries/3/alignments_paired_secondary_0', 'bam_binaries/3/alignments_paired_secondary_1', 'bam_binaries/3/alignments_paired_secondary_2', 'bam_binaries/3/alignments_paired_secondary_3', 'bam_binaries/3/alignments_paired_secondary_4', 'bam_binaries/3/alignments_paired_secondary_5', 'bam_binaries/3/alignments_paired_secondary_6', 'bam_binaries/3/alignments_paired_secondary_7', 'bam_binaries/3/alignments_paired_secondary_8', 'bam_binaries/3/alignments_paired_secondary_9', 'bam_binaries/3/alignments_paired_secondary_10', 'bam_binaries/3/alignments_paired_secondary_11',      'bam_binaries/3/alignments_paired_secondary_12', 'bam_binaries/3/alignments_paired_secondary_13', 'bam_binaries/3/alignments_paired_secondary_14', 'bam_binaries/3/alignments_paired_secondary_15', 'bam_binaries/3/alignments_paired_secondary_16', 'bam_binaries/3/alignments_paired_secondary_17', 'bam_binaries/3/alignments_paired_secondary_18', 'bam_binaries/3/alignments_paired_secondary_19', 'bam_binaries/3/alignments_paired_secondary_20', 'bam_binaries/3/alignments_paired_secondary_21', 'bam_binaries/3/alignments_paired_secondary_22');
# COPY BINARY INTO bam.alignments_extra_3 FROM ('bam_binaries/3/alignments_extra_0', 'bam_binaries/3/alignments_extra_1', 'bam_binaries/3/alignments_extra_2', 'bam_binaries/3/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/4/files_0', 'bam_binaries/4/files_1', 'bam_binaries/4/files_2', 'bam_binaries/4/files_3', 'bam_binaries/4/files_4', 'bam_binaries/4/files_5');
# COPY BINARY INTO bam.sq    FROM ('bam_binaries/4/sq_0', 'bam_binaries/4/sq_1', 'bam_binaries/4/sq_2', 'bam_binaries/4/sq_3', 'bam_binaries/4/sq_4', 'bam_binaries/4/sq_5', 'bam_binaries/4/sq_6');
# COPY BINARY INTO bam.pg    FROM ('bam_binaries/4/pg_0', 'bam_binaries/4/pg_1', 'bam_binaries/4/pg_2', 'bam_binaries/4/pg_3', 'bam_binaries/4/pg_4', 'bam_binaries/4/pg_5');
# COPY BINARY INTO bam.unpaired_alignments_4 FROM     ('bam_binaries/4/alignments_0', 'bam_binaries/4/alignments_1', 'bam_binaries/4/alignments_2', 'bam_binaries/4/alignments_3', 'bam_binaries/4/alignments_4', 'bam_binaries/4/alignments_5', 'bam_binaries/4/alignments_6', 'bam_binaries/4/alignments_7', 'bam_binaries/4/alignments_8', 'bam_binaries/4/alignments_9', 'bam_binaries/4/alignments_10', 'bam_binaries/4/alignments_11');
# COPY BINARY INTO bam.paired_primary_alignments_4 FROM     ('bam_binaries/4/alignments_paired_primary_0', 'bam_binaries/4/alignments_paired_primary_1', 'bam_binaries/4/alignments_paired_primary_2', 'bam_binaries/4/alignments_paired_primary_3', 'bam_binaries/4/alignments_paired_primary_4', 'bam_binaries/4/alignments_paired_primary_5', 'bam_binaries/4/alignments_paired_primary_6', 'bam_binaries/4/alignments_paired_primary_7', 'bam_binaries/4/alignments_paired_primary_8', 'bam_binaries/4/alignments_paired_primary_9', 'bam_binaries/4/alignments_paired_primary_10', 'bam_binaries/4/alignments_paired_primary_11',      'bam_binaries/4/alignments_paired_primary_12', 'bam_binaries/4/alignments_paired_primary_13', 'bam_binaries/4/alignments_paired_primary_14', 'bam_binaries/4/alignments_paired_primary_15', 'bam_binaries/4/alignments_paired_primary_16', 'bam_binaries/4/alignments_paired_primary_17', 'bam_binaries/4/alignments_paired_primary_18', 'bam_binaries/4/alignments_paired_primary_19', 'bam_binaries/4/alignments_paired_primary_20', 'bam_binaries/4/alignments_paired_primary_21', 'bam_binaries/4/alignments_paired_primary_22');
# COPY BINARY INTO bam.paired_secondary_alignments_4 FROM     ('bam_binaries/4/alignments_paired_secondary_0', 'bam_binaries/4/alignments_paired_secondary_1', 'bam_binaries/4/alignments_paired_secondary_2', 'bam_binaries/4/alignments_paired_secondary_3', 'bam_binaries/4/alignments_paired_secondary_4', 'bam_binaries/4/alignments_paired_secondary_5', 'bam_binaries/4/alignments_paired_secondary_6', 'bam_binaries/4/alignments_paired_secondary_7', 'bam_binaries/4/alignments_paired_secondary_8', 'bam_binaries/4/alignments_paired_secondary_9', 'bam_binaries/4/alignments_paired_secondary_10', 'bam_binaries/4/alignments_paired_secondary_11',      'bam_binaries/4/alignments_paired_secondary_12', 'bam_binaries/4/alignments_paired_secondary_13', 'bam_binaries/4/alignments_paired_secondary_14', 'bam_binaries/4/alignments_paired_secondary_15', 'bam_binaries/4/alignments_paired_secondary_16', 'bam_binaries/4/alignments_paired_secondary_17', 'bam_binaries/4/alignments_paired_secondary_18', 'bam_binaries/4/alignments_paired_secondary_19', 'bam_binaries/4/alignments_paired_secondary_20', 'bam_binaries/4/alignments_paired_secondary_21', 'bam_binaries/4/alignments_paired_secondary_22');
# COPY BINARY INTO bam.alignments_extra_4 FROM ('bam_binaries/4/alignments_extra_0', 'bam_binaries/4/alignments_extra_1', 'bam_binaries/4/alignments_extra_2', 'bam_binaries/4/alignments_extra_3');
# 
# # <bam_loader>: Loader finished processing 2 BAM files...
# 
# 20:58:07 >  
# 20:58:07 >  "/usr/bin/python2" "test.SQL.py" "test"
# 20:58:07 >  


# 20:58:11 >  
# 20:58:11 >  "Done."
# 20:58:11 >  

