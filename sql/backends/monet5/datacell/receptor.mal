# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2011 MonetDB B.V.
# All Rights Reserved.

module receptor;

command start{unsafe}(tbl:str, host:str, port:int)
address DCreceptorNew
comment "Define a receptor based on a basket table.
The receptor protocol is either active or passive. Return its handle";

command pause(tbl:str)
address DCreceptorPause
comment "Pause listening";

command resume(tbl:str)
address DCreceptorResume
comment "Resume a receptor thread";

command resume()
address RCresume
comment "Resume all receptor threads";

command scenario(tbl:str, fnme:str, sequence:int)
address DCscenario
comment "Use a file scenario to be run a number of times.
The receptor should be paused to make this change to take effect";

command generator(tbl:str, modnme:str, fnme:str)
address DCgenerator
comment "Use a function/factory to generate the events";

command mode(tbl:str, arg:str)
address RCmode
comment "Set the mode of the receptor to either active/passive");

command protocol(tbl:str, arg:str)
address RCprotocol
comment "Set the protocol of the receptor to udp/tcp/csv");

command drop(tbl:str)
address RCdrop
comment "Drop a receptor";

command reset()
address RCreset
comment "Remove all receptors";

command dump()
address RCdump
comment "Dump receptor status";
