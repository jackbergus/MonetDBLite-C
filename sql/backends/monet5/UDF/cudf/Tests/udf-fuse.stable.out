stdout of test 'udf-fuse` in directory 'sql/backends/monet5/UDF/cudf` itself:


# 18:49:07 >  
# 18:49:07 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/manegold/_/Monet/HG/default/prefix/--disable-debug_--enable-optimize_--disable-assert/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=31089" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_backends_monet5_UDF" "--set" "mal_listing=0"
# 18:49:07 >  

# MonetDB 5 server v11.8.0
# This is an unreleased version
# Serving database 'mTests_backends_monet5_UDF', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.630 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:31089/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 18:49:07 >  
# 18:49:07 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=rome" "--port=31089"
# 18:49:07 >  

#explain select fuse(1,2);
% .explain # table_name
% mal # name
% clob # type
% 87 # length
function user.s4_1():void;
    X_3:void := querylog.define("explain select fuse(1,2);", "sequential_pipe", 8:int);
    X_9:sht := udf.fuse(1:bte, 2:bte);
    sql.resultSet(".L2", "L2", "smallint", 16:int, 0:int, 7:int, X_9);
end user.s4_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=12 usec 
#remap                actions= 0 time=4 usec 
#costModel            actions= 1 time=10 usec 
#coercions            actions= 0 time=2 usec 
#evaluate             actions= 2 time=26 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions= 2 time=14 usec 
#mergetable           actions= 0 time=20 usec 
#deadcode             actions= 1 time=14 usec 
#aliases              actions= 0 time=4 usec 
#constants            actions= 2 time=15 usec 
#commonTerms          actions= 0 time=3 usec 
#projectionpath       actions= 0 time=11 usec 
#reorder              actions= 1 time=23 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=23 time=26 usec 
#matpack              actions= 0 time=6 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=6 usec 
#garbageCollector     actions= 1 time=12 usec 
#total                actions= 1 time=335 usec 
#select fuse(1,2);
% .L2 # table_name
% L2 # name
% smallint # type
% 3 # length
[ 258	]
#explain select fuse(1000,2000);
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s6_1():void;
    X_3:void := querylog.define("explain select fuse(1000,2000);", "sequential_pipe", 8:int);
    X_9:int := udf.fuse(1000:sht, 2000:sht);
    sql.resultSet(".L2", "L2", "int", 32:int, 0:int, 7:int, X_9);
end user.s6_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=10 usec 
#remap                actions= 0 time=4 usec 
#costModel            actions= 1 time=10 usec 
#coercions            actions= 0 time=2 usec 
#evaluate             actions= 2 time=26 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions= 2 time=13 usec 
#mergetable           actions= 0 time=20 usec 
#deadcode             actions= 1 time=12 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 2 time=10 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=21 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=23 time=25 usec 
#matpack              actions= 0 time=6 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=5 usec 
#garbageCollector     actions= 1 time=12 usec 
#total                actions= 1 time=289 usec 
#select fuse(1000,2000);
% .L2 # table_name
% L2 # name
% int # type
% 8 # length
[ 65538000	]
#explain select fuse(1000000,2000000);
% .explain # table_name
% mal # name
% clob # type
% 99 # length
function user.s8_1():void;
    X_3:void := querylog.define("explain select fuse(1000000,2000000);", "sequential_pipe", 8:int);
    X_9:lng := udf.fuse(1000000:int, 2000000:int);
    sql.resultSet(".L2", "L2", "bigint", 64:int, 0:int, 7:int, X_9);
end user.s8_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=10 usec 
#remap                actions= 0 time=4 usec 
#costModel            actions= 1 time=9 usec 
#coercions            actions= 0 time=2 usec 
#evaluate             actions= 2 time=25 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 0 time=3 usec 
#aliases              actions= 2 time=13 usec 
#mergetable           actions= 0 time=19 usec 
#deadcode             actions= 1 time=12 usec 
#aliases              actions= 0 time=4 usec 
#constants            actions= 2 time=10 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=21 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=23 time=24 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=6 usec 
#garbageCollector     actions= 1 time=13 usec 
#total                actions= 1 time=284 usec 
#select fuse(1000000,2000000);
% .L2 # table_name
% L2 # name
% bigint # type
% 16 # length
[ 4294967298000000	]
#create table udf_fuse ( a tinyint , b tinyint , c smallint , d smallint , e integer , f integer );
#insert into udf_fuse values  (1,2,1000,2000,1000000,2000000);
[ 1	]
#insert into udf_fuse values  (3,4,3000,4000,3000000,4000000);
[ 1	]
#insert into udf_fuse values  (5,6,5000,6000,5000000,6000000);
[ 1	]
#insert into udf_fuse values  (7,8,7000,8000,7000000,8000000);
[ 1	]
#select * from udf_fuse;
% sys.udf_fuse,	sys.udf_fuse,	sys.udf_fuse,	sys.udf_fuse,	sys.udf_fuse,	sys.udf_fuse # table_name
% a,	b,	c,	d,	e,	f # name
% tinyint,	tinyint,	smallint,	smallint,	int,	int # type
% 1,	1,	4,	4,	7,	7 # length
[ 1,	2,	1000,	2000,	1000000,	2000000	]
[ 3,	4,	3000,	4000,	3000000,	4000000	]
[ 5,	6,	5000,	6000,	5000000,	6000000	]
[ 7,	8,	7000,	8000,	7000000,	8000000	]
#explain select fuse(a,b) from udf_fuse;
% .explain # table_name
% mal # name
% clob # type
% 102 # length
function user.s16_1():void;
    X_1:void := querylog.define("explain select fuse(a,b) from udf_fuse;", "sequential_pipe", 27:int);
    X_29 := bat.new(nil:str);
    X_36 := bat.append(X_29, "sys.L2");
    X_31 := bat.new(nil:str);
    X_38 := bat.append(X_31, "L2");
    X_32 := bat.new(nil:str);
    X_40 := bat.append(X_32, "smallint");
    X_33 := bat.new(nil:int);
    X_42 := bat.append(X_33, 16:int);
    X_35 := bat.new(nil:int);
    X_44 := bat.append(X_35, 0:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "udf_fuse");
    X_8:bat[:bte] := sql.bind(X_4, "sys", "udf_fuse", "a", 0:int);
    X_17 := algebra.projection(C_5, X_8);
    X_18:bat[:bte] := sql.bind(X_4, "sys", "udf_fuse", "b", 0:int);
    X_24 := algebra.projection(C_5, X_18);
    X_25:bat[:sht] := batudf.fuse(X_17, X_24);
    sql.resultSet(X_36, X_38, X_40, X_42, X_44, X_25);
end user.s16_1;
#inline               actions= 0 time=4 usec 
#candidates           actions= 1 time=19 usec 
#remap                actions= 1 time=35 usec 
#costModel            actions= 1 time=16 usec 
#coercions            actions= 0 time=2 usec 
#evaluate             actions= 0 time=4 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions= 2 time=20 usec 
#mergetable           actions= 0 time=27 usec 
#deadcode             actions= 4 time=19 usec 
#aliases              actions= 0 time=6 usec 
#constants            actions= 1 time=19 usec 
#commonTerms          actions= 0 time=6 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=30 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=31 time=32 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=12 usec 
#garbageCollector     actions= 1 time=24 usec 
#total                actions= 1 time=370 usec 
#explain select fuse(c,d) from udf_fuse;
% .explain # table_name
% mal # name
% clob # type
% 102 # length
function user.s18_1():void;
    X_1:void := querylog.define("explain select fuse(c,d) from udf_fuse;", "sequential_pipe", 27:int);
    X_29 := bat.new(nil:str);
    X_36 := bat.append(X_29, "sys.L2");
    X_31 := bat.new(nil:str);
    X_38 := bat.append(X_31, "L2");
    X_32 := bat.new(nil:str);
    X_40 := bat.append(X_32, "int");
    X_33 := bat.new(nil:int);
    X_42 := bat.append(X_33, 32:int);
    X_35 := bat.new(nil:int);
    X_44 := bat.append(X_35, 0:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "udf_fuse");
    X_8:bat[:sht] := sql.bind(X_4, "sys", "udf_fuse", "c", 0:int);
    X_17 := algebra.projection(C_5, X_8);
    X_18:bat[:sht] := sql.bind(X_4, "sys", "udf_fuse", "d", 0:int);
    X_24 := algebra.projection(C_5, X_18);
    X_25:bat[:int] := batudf.fuse(X_17, X_24);
    sql.resultSet(X_36, X_38, X_40, X_42, X_44, X_25);
end user.s18_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=19 usec 
#remap                actions= 1 time=32 usec 
#costModel            actions= 1 time=16 usec 
#coercions            actions= 0 time=2 usec 
#evaluate             actions= 0 time=4 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions= 2 time=21 usec 
#mergetable           actions= 0 time=26 usec 
#deadcode             actions= 4 time=18 usec 
#aliases              actions= 0 time=6 usec 
#constants            actions= 1 time=18 usec 
#commonTerms          actions= 0 time=6 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=30 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=31 time=31 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=13 usec 
#garbageCollector     actions= 1 time=18 usec 
#total                actions= 1 time=352 usec 
#explain select fuse(e,f) from udf_fuse;
% .explain # table_name
% mal # name
% clob # type
% 102 # length
function user.s20_1():void;
    X_1:void := querylog.define("explain select fuse(e,f) from udf_fuse;", "sequential_pipe", 27:int);
    X_29 := bat.new(nil:str);
    X_36 := bat.append(X_29, "sys.L2");
    X_31 := bat.new(nil:str);
    X_38 := bat.append(X_31, "L2");
    X_32 := bat.new(nil:str);
    X_40 := bat.append(X_32, "bigint");
    X_33 := bat.new(nil:int);
    X_42 := bat.append(X_33, 64:int);
    X_35 := bat.new(nil:int);
    X_44 := bat.append(X_35, 0:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "udf_fuse");
    X_8:bat[:int] := sql.bind(X_4, "sys", "udf_fuse", "e", 0:int);
    X_17 := algebra.projection(C_5, X_8);
    X_18:bat[:int] := sql.bind(X_4, "sys", "udf_fuse", "f", 0:int);
    X_24 := algebra.projection(C_5, X_18);
    X_25:bat[:lng] := batudf.fuse(X_17, X_24);
    sql.resultSet(X_36, X_38, X_40, X_42, X_44, X_25);
end user.s20_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=18 usec 
#remap                actions= 1 time=31 usec 
#costModel            actions= 1 time=15 usec 
#coercions            actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions= 2 time=20 usec 
#mergetable           actions= 0 time=25 usec 
#deadcode             actions= 4 time=18 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 1 time=18 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=29 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=31 time=32 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=13 usec 
#garbageCollector     actions= 1 time=19 usec 
#total                actions= 1 time=348 usec 
#select fuse(a,b) from udf_fuse;
% sys.L2 # table_name
% L2 # name
% smallint # type
% 4 # length
[ 258	]
[ 772	]
[ 1286	]
[ 1800	]
#select fuse(c,d) from udf_fuse;
% sys.L2 # table_name
% L2 # name
% int # type
% 9 # length
[ 65538000	]
[ 196612000	]
[ 327686000	]
[ 458760000	]
#select fuse(e,f) from udf_fuse;
% sys.L2 # table_name
% L2 # name
% bigint # type
% 17 # length
[ 4294967298000000	]
[ 12884901892000000	]
[ 21474836486000000	]
[ 30064771080000000	]

# 18:49:07 >  
# 18:49:07 >  "Done."
# 18:49:07 >  

