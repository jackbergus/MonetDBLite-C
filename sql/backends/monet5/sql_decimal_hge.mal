# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

# This file was generated by using the script sql_decimal_hge.mal.sh.

command calc.hge( v:flt, digits:int, scale:int ) :hge
address flt_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:flt], digits:int, scale:int ) :bat[:oid,:hge]
address batflt_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( v:dbl, digits:int, scale:int ) :hge
address dbl_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:dbl], digits:int, scale:int ) :bat[:oid,:hge]
address batdbl_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( v:bte, digits:int, scale:int ) :hge
address bte_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:bte], digits:int, scale:int ) :bat[:oid,:hge]
address batbte_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( s1:int, v:bte) :hge 
address bte_dec2_hge
comment "cast decimal(bte) to hge and check for overflow";
command calc.hge( s1:int, v:bte, d2:int, s2:int ) :hge 
address bte_dec2dec_hge
comment "cast decimal(bte) to decimal(hge) and check for overflow";

command batcalc.hge( s1:int, v:bat[:oid,:bte]) :bat[:oid,:hge]
address batbte_dec2_hge
comment "cast decimal(bte) to hge and check for overflow";
command batcalc.hge( s1:int, v:bat[:oid,:bte], d2:int, s2:int ) :bat[:oid,:hge] 
address batbte_dec2dec_hge
comment "cast decimal(bte) to decimal(hge) and check for overflow";

command calc.hge( v:sht, digits:int, scale:int ) :hge
address sht_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:sht], digits:int, scale:int ) :bat[:oid,:hge]
address batsht_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( s1:int, v:sht) :hge 
address sht_dec2_hge
comment "cast decimal(sht) to hge and check for overflow";
command calc.hge( s1:int, v:sht, d2:int, s2:int ) :hge 
address sht_dec2dec_hge
comment "cast decimal(sht) to decimal(hge) and check for overflow";

command batcalc.hge( s1:int, v:bat[:oid,:sht]) :bat[:oid,:hge]
address batsht_dec2_hge
comment "cast decimal(sht) to hge and check for overflow";
command batcalc.hge( s1:int, v:bat[:oid,:sht], d2:int, s2:int ) :bat[:oid,:hge] 
address batsht_dec2dec_hge
comment "cast decimal(sht) to decimal(hge) and check for overflow";

command calc.hge( v:int, digits:int, scale:int ) :hge
address int_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:int], digits:int, scale:int ) :bat[:oid,:hge]
address batint_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( s1:int, v:int) :hge 
address int_dec2_hge
comment "cast decimal(int) to hge and check for overflow";
command calc.hge( s1:int, v:int, d2:int, s2:int ) :hge 
address int_dec2dec_hge
comment "cast decimal(int) to decimal(hge) and check for overflow";

command batcalc.hge( s1:int, v:bat[:oid,:int]) :bat[:oid,:hge]
address batint_dec2_hge
comment "cast decimal(int) to hge and check for overflow";
command batcalc.hge( s1:int, v:bat[:oid,:int], d2:int, s2:int ) :bat[:oid,:hge] 
address batint_dec2dec_hge
comment "cast decimal(int) to decimal(hge) and check for overflow";

command calc.hge( v:wrd, digits:int, scale:int ) :hge
address wrd_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:wrd], digits:int, scale:int ) :bat[:oid,:hge]
address batwrd_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( s1:int, v:wrd) :hge 
address wrd_dec2_hge
comment "cast decimal(wrd) to hge and check for overflow";
command calc.hge( s1:int, v:wrd, d2:int, s2:int ) :hge 
address wrd_dec2dec_hge
comment "cast decimal(wrd) to decimal(hge) and check for overflow";

command batcalc.hge( s1:int, v:bat[:oid,:wrd]) :bat[:oid,:hge]
address batwrd_dec2_hge
comment "cast decimal(wrd) to hge and check for overflow";
command batcalc.hge( s1:int, v:bat[:oid,:wrd], d2:int, s2:int ) :bat[:oid,:hge] 
address batwrd_dec2dec_hge
comment "cast decimal(wrd) to decimal(hge) and check for overflow";

command calc.hge( v:lng, digits:int, scale:int ) :hge
address lng_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:lng], digits:int, scale:int ) :bat[:oid,:hge]
address batlng_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( s1:int, v:lng) :hge 
address lng_dec2_hge
comment "cast decimal(lng) to hge and check for overflow";
command calc.hge( s1:int, v:lng, d2:int, s2:int ) :hge 
address lng_dec2dec_hge
comment "cast decimal(lng) to decimal(hge) and check for overflow";

command batcalc.hge( s1:int, v:bat[:oid,:lng]) :bat[:oid,:hge]
address batlng_dec2_hge
comment "cast decimal(lng) to hge and check for overflow";
command batcalc.hge( s1:int, v:bat[:oid,:lng], d2:int, s2:int ) :bat[:oid,:hge] 
address batlng_dec2dec_hge
comment "cast decimal(lng) to decimal(hge) and check for overflow";

command calc.hge( v:hge, digits:int, scale:int ) :hge
address hge_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command batcalc.hge( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:hge]
address bathge_num2dec_hge
comment "cast number to decimal(hge) and check for overflow";

command calc.hge( s1:int, v:hge) :hge 
address hge_dec2_hge
comment "cast decimal(hge) to hge and check for overflow";
command calc.hge( s1:int, v:hge, d2:int, s2:int ) :hge 
address hge_dec2dec_hge
comment "cast decimal(hge) to decimal(hge) and check for overflow";

command batcalc.hge( s1:int, v:bat[:oid,:hge]) :bat[:oid,:hge]
address bathge_dec2_hge
comment "cast decimal(hge) to hge and check for overflow";
command batcalc.hge( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:hge] 
address bathge_dec2dec_hge
comment "cast decimal(hge) to decimal(hge) and check for overflow";

command calc.bte( v:hge, digits:int, scale:int ) :bte
address hge_num2dec_bte
comment "cast number to decimal(bte) and check for overflow";

command batcalc.bte( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:bte]
address bathge_num2dec_bte
comment "cast number to decimal(bte) and check for overflow";

command calc.bte( s1:int, v:hge) :bte 
address hge_dec2_bte
comment "cast decimal(hge) to bte and check for overflow";
command calc.bte( s1:int, v:hge, d2:int, s2:int ) :bte 
address hge_dec2dec_bte
comment "cast decimal(hge) to decimal(bte) and check for overflow";

command batcalc.bte( s1:int, v:bat[:oid,:hge]) :bat[:oid,:bte]
address bathge_dec2_bte
comment "cast decimal(hge) to bte and check for overflow";
command batcalc.bte( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:bte] 
address bathge_dec2dec_bte
comment "cast decimal(hge) to decimal(bte) and check for overflow";

command calc.sht( v:hge, digits:int, scale:int ) :sht
address hge_num2dec_sht
comment "cast number to decimal(sht) and check for overflow";

command batcalc.sht( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:sht]
address bathge_num2dec_sht
comment "cast number to decimal(sht) and check for overflow";

command calc.sht( s1:int, v:hge) :sht 
address hge_dec2_sht
comment "cast decimal(hge) to sht and check for overflow";
command calc.sht( s1:int, v:hge, d2:int, s2:int ) :sht 
address hge_dec2dec_sht
comment "cast decimal(hge) to decimal(sht) and check for overflow";

command batcalc.sht( s1:int, v:bat[:oid,:hge]) :bat[:oid,:sht]
address bathge_dec2_sht
comment "cast decimal(hge) to sht and check for overflow";
command batcalc.sht( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:sht] 
address bathge_dec2dec_sht
comment "cast decimal(hge) to decimal(sht) and check for overflow";

command calc.int( v:hge, digits:int, scale:int ) :int
address hge_num2dec_int
comment "cast number to decimal(int) and check for overflow";

command batcalc.int( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:int]
address bathge_num2dec_int
comment "cast number to decimal(int) and check for overflow";

command calc.int( s1:int, v:hge) :int 
address hge_dec2_int
comment "cast decimal(hge) to int and check for overflow";
command calc.int( s1:int, v:hge, d2:int, s2:int ) :int 
address hge_dec2dec_int
comment "cast decimal(hge) to decimal(int) and check for overflow";

command batcalc.int( s1:int, v:bat[:oid,:hge]) :bat[:oid,:int]
address bathge_dec2_int
comment "cast decimal(hge) to int and check for overflow";
command batcalc.int( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:int] 
address bathge_dec2dec_int
comment "cast decimal(hge) to decimal(int) and check for overflow";

command calc.wrd( v:hge, digits:int, scale:int ) :wrd
address hge_num2dec_wrd
comment "cast number to decimal(wrd) and check for overflow";

command batcalc.wrd( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:wrd]
address bathge_num2dec_wrd
comment "cast number to decimal(wrd) and check for overflow";

command calc.wrd( s1:int, v:hge) :wrd 
address hge_dec2_wrd
comment "cast decimal(hge) to wrd and check for overflow";
command calc.wrd( s1:int, v:hge, d2:int, s2:int ) :wrd 
address hge_dec2dec_wrd
comment "cast decimal(hge) to decimal(wrd) and check for overflow";

command batcalc.wrd( s1:int, v:bat[:oid,:hge]) :bat[:oid,:wrd]
address bathge_dec2_wrd
comment "cast decimal(hge) to wrd and check for overflow";
command batcalc.wrd( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:wrd] 
address bathge_dec2dec_wrd
comment "cast decimal(hge) to decimal(wrd) and check for overflow";

command calc.lng( v:hge, digits:int, scale:int ) :lng
address hge_num2dec_lng
comment "cast number to decimal(lng) and check for overflow";

command batcalc.lng( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:lng]
address bathge_num2dec_lng
comment "cast number to decimal(lng) and check for overflow";

command calc.lng( s1:int, v:hge) :lng 
address hge_dec2_lng
comment "cast decimal(hge) to lng and check for overflow";
command calc.lng( s1:int, v:hge, d2:int, s2:int ) :lng 
address hge_dec2dec_lng
comment "cast decimal(hge) to decimal(lng) and check for overflow";

command batcalc.lng( s1:int, v:bat[:oid,:hge]) :bat[:oid,:lng]
address bathge_dec2_lng
comment "cast decimal(hge) to lng and check for overflow";
command batcalc.lng( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:lng] 
address bathge_dec2dec_lng
comment "cast decimal(hge) to decimal(lng) and check for overflow";

command calc.flt( v:hge, digits:int, scale:int ) :flt
address hge_num2dec_flt
comment "cast number to decimal(flt) and check for overflow";

command batcalc.flt( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:flt]
address bathge_num2dec_flt
comment "cast number to decimal(flt) and check for overflow";

command calc.flt( s1:int, v:hge) :flt 
address hge_dec2_flt
comment "cast decimal(hge) to flt and check for overflow";
command calc.flt( s1:int, v:hge, d2:int, s2:int ) :flt 
address hge_dec2dec_flt
comment "cast decimal(hge) to decimal(flt) and check for overflow";

command batcalc.flt( s1:int, v:bat[:oid,:hge]) :bat[:oid,:flt]
address bathge_dec2_flt
comment "cast decimal(hge) to flt and check for overflow";
command batcalc.flt( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:flt] 
address bathge_dec2dec_flt
comment "cast decimal(hge) to decimal(flt) and check for overflow";

command calc.dbl( v:hge, digits:int, scale:int ) :dbl
address hge_num2dec_dbl
comment "cast number to decimal(dbl) and check for overflow";

command batcalc.dbl( v:bat[:oid,:hge], digits:int, scale:int ) :bat[:oid,:dbl]
address bathge_num2dec_dbl
comment "cast number to decimal(dbl) and check for overflow";

command calc.dbl( s1:int, v:hge) :dbl 
address hge_dec2_dbl
comment "cast decimal(hge) to dbl and check for overflow";
command calc.dbl( s1:int, v:hge, d2:int, s2:int ) :dbl 
address hge_dec2dec_dbl
comment "cast decimal(hge) to decimal(dbl) and check for overflow";

command batcalc.dbl( s1:int, v:bat[:oid,:hge]) :bat[:oid,:dbl]
address bathge_dec2_dbl
comment "cast decimal(hge) to dbl and check for overflow";
command batcalc.dbl( s1:int, v:bat[:oid,:hge], d2:int, s2:int ) :bat[:oid,:dbl] 
address bathge_dec2dec_dbl
comment "cast decimal(hge) to decimal(dbl) and check for overflow";

