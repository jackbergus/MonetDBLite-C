# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

module generator;

pattern series(first:bte,last:bte):bat[:oid,:bte]
address VLTgenerator_table;

pattern series(first:sht,last:sht):bat[:oid,:sht]
address VLTgenerator_table;

pattern series(first:int,last:int):bat[:oid,:int]
address VLTgenerator_table;

pattern series(first:lng,last:lng):bat[:oid,:lng]
address VLTgenerator_table;

pattern series(first:flt,last:flt):bat[:oid,:flt]
address VLTgenerator_table;

pattern series(first:dbl,last:dbl):bat[:oid,:dbl]
address VLTgenerator_table;

pattern series(first:bte,last:bte,step:bte):bat[:oid,:bte]
address VLTgenerator_table;

pattern series(first:sht,last:sht,step:sht):bat[:oid,:sht]
address VLTgenerator_table;

pattern series(first:int,last:int,step:int):bat[:oid,:int]
address VLTgenerator_table;

pattern series(first:lng,last:lng,step:lng):bat[:oid,:lng]
address VLTgenerator_table;

pattern series(first:flt,last:flt,step:flt):bat[:oid,:flt]
address VLTgenerator_table;

pattern series(first:dbl,last:dbl,step:dbl):bat[:oid,:dbl]
address VLTgenerator_table
comment "Create and materialize a generator table";

pattern series(first:timestamp,last:timestamp,step:lng):bat[:oid,:timestamp]
address VLTgenerator_table;

pattern parameters(first:bte,last:bte,step:bte):bat[:oid,:bte]
address VLTgenerator_noop;

pattern parameters(first:sht,last:sht,step:sht):bat[:oid,:sht]
address VLTgenerator_noop;

pattern parameters(first:int,last:int,step:int):bat[:oid,:int]
address VLTgenerator_noop;

pattern parameters(first:lng,last:lng,step:lng):bat[:oid,:lng]
address VLTgenerator_noop;

pattern parameters(first:flt,last:flt,step:flt):bat[:oid,:flt]
address VLTgenerator_noop;

pattern parameters(first:dbl,last:dbl,step:dbl):bat[:oid,:dbl]
address VLTgenerator_noop;

pattern parameters(first:timestamp,last:timestamp,step:lng):bat[:oid,:timestamp]
address VLTgenerator_noop
comment "Retain the table definition, but don't materialize";

pattern parameters(first:bte,last:bte):bat[:oid,:bte]
address VLTgenerator_noop;

pattern parameters(first:sht,last:sht):bat[:oid,:sht]
address VLTgenerator_noop;

pattern parameters(first:int,last:int):bat[:oid,:int]
address VLTgenerator_noop;

pattern parameters(first:lng,last:lng):bat[:oid,:lng]
address VLTgenerator_noop;

pattern parameters(first:flt,last:flt):bat[:oid,:flt]
address VLTgenerator_noop;

pattern parameters(first:dbl,last:dbl):bat[:oid,:dbl]
address VLTgenerator_noop;

pattern thetasubselect(b:bat[:oid,:bte], low:bte, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:sht], low:sht, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:int], low:int, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:lng], low:lng, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:flt], low:flt, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:dbl], low:dbl, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:timestamp], low:timestamp, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:oid,:bte], cnd:bat[:oid,:oid], low:bte, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:sht], cnd:bat[:oid,:oid], low:sht, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:int], cnd:bat[:oid,:oid], low:int, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:lng], cnd:bat[:oid,:oid], low:lng, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:flt], cnd:bat[:oid,:oid], low:flt, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:dbl], cnd:bat[:oid,:oid], low:dbl, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect;

pattern thetasubselect(b:bat[:oid,:timestamp], cnd:bat[:oid,:oid], low:timestamp, oper:str) :bat[:oid,:oid]
address VLTgenerator_thetasubselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:oid,:bte], low:bte, high:bte, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:sht], low:sht, high:sht, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:int], low:int, high:int, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:lng], low:lng, high:lng, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:flt], low:flt, high:flt, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:dbl], low:dbl, high:dbl, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:timestamp], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:oid,:bte], cand:bat[:oid,:oid], low:bte, high:bte, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:sht], cand:bat[:oid,:oid], low:sht, high:sht, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:int], cand:bat[:oid,:oid], low:int, high:int, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:lng], cand:bat[:oid,:oid], low:lng, high:lng, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:flt], cand:bat[:oid,:oid], low:flt, high:flt, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:dbl], cand:bat[:oid,:oid], low:dbl, high:dbl, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect;

pattern subselect(b:bat[:oid,:timestamp], cand:bat[:oid,:oid], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit) :bat[:oid,:oid]
address VLTgenerator_subselect
comment "Overloaded selection routine";

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:bte]) :bat[:oid,:bte]
address VLTgenerator_leftfetchjoin;

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:sht]) :bat[:oid,:sht]
address VLTgenerator_leftfetchjoin;

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:int]) :bat[:oid,:int]
address VLTgenerator_leftfetchjoin;

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:lng]) :bat[:oid,:lng]
address VLTgenerator_leftfetchjoin;

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:flt]) :bat[:oid,:flt]
address VLTgenerator_leftfetchjoin;

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:dbl]) :bat[:oid,:dbl]
address VLTgenerator_leftfetchjoin;

pattern leftfetchjoin(b:bat[:oid,:oid], cand:bat[:oid,:timestamp]) :bat[:oid,:timestamp]
address VLTgenerator_leftfetchjoin
comment "Overloaded leftfetchjoin operation";

pattern join(b:bat[:oid,:bte], gen:bat[:oid,:bte]) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_join;
pattern join(b:bat[:oid,:sht], gen:bat[:oid,:sht]) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_join;
pattern join(b:bat[:oid,:int], gen:bat[:oid,:int]) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_join;
pattern join(b:bat[:oid,:lng], gen:bat[:oid,:lng]) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_join;
pattern join(b:bat[:oid,:flt], gen:bat[:oid,:flt]) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_join;
pattern join(b:bat[:oid,:dbl], gen:bat[:oid,:dbl]) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_join
comment "Overloaded join operation";

pattern join(gen:bat[:oid,:bte], low:bat[:oid,:bte], hgh:bat[:oid,:bte], li:bit, ri:bit) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_rangejoin;
pattern join(gen:bat[:oid,:sht], low:bat[:oid,:sht], hgh:bat[:oid,:sht], li:bit, ri:bit) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_rangejoin;
pattern join(gen:bat[:oid,:int], low:bat[:oid,:int], hgh:bat[:oid,:int], li:bit, ri:bit) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_rangejoin;
pattern join(gen:bat[:oid,:lng], low:bat[:oid,:lng], hgh:bat[:oid,:lng], li:bit, ri:bit) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_rangejoin;
pattern join(gen:bat[:oid,:flt], low:bat[:oid,:flt], hgh:bat[:oid,:flt], li:bit, ri:bit) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_rangejoin;
pattern join(gen:bat[:oid,:dbl], low:bat[:oid,:dbl], hgh:bat[:oid,:dbl], li:bit, ri:bit) (l:bat[:oid,:oid],r:bat[:oid,:oid])
address VLTgenerator_rangejoin
comment "Overloaded range join operation";

