How To Start with MonetDB/SQL
=============================

.. This document is written in reStructuredText (see
   http://docutils.sourceforge.net/ for more information).
   Use ``rst2html.py`` to convert this file to HTML.

This document will help you compile and install the MonetDB SQL front
end "MonetDB/SQL" on Windows using the Microsoft Visual Studio
compiler.

In case you prefer to install a pre-compiled binary distribution, please
check-out `the SourceForge documentation`__.

__ http://sourceforge.net/project/showfiles.php?group_id=56967

This document assumes that you have installed MonetDB on a native
Windows system (NT, 2000, XP), and that you want to compile and
install the MonetDB SQL front end on the same system.  See the file
`MonetDB HowToStart-Win32.txt`__ for information on how to compile and
install MonetDB.

__ ../../MonetDB/Windows/index.html

For compilation and installation on a Unix system (e.g., Linux, IRIX,
Solaris, AIX, MacOS X/Darwin), or on Windows using CYGWIN, see the
instructions in the file `HowToStart-SQL`__.

__ ../Unix/index.html


Prerequisites
-------------

There are no additional prerequisites for MonetDB/SQL except for the
extra disk space needed to compile and install the front end.

disk space
	After downloading, MonetDB/SQL takes up about 75 MB of disk space;
	compilation adds another 13 MB.  Testing takes about 155 MB, and
	the installation about 3 MB (not including any databases).


Getting the Software
--------------------

We assume the MonetDB sources have already been acquired from
SourceForge.  Here we only show the additional commands to get the SQL
source.

Get the software by using the command::

 cvs -d:pserver:anonymous@monetdb.cvs.sourceforge.net:/cvsroot/monetdb checkout sql

This will create a directory ``sql`` in your current working
directory.

Also see `the SourceForge documentation`__ for more information.

__ http://sourceforge.net/cvs/?group_id=56967

Compiling
---------

Open a Windows command shell or a UnxUtils shell and go to the 
top-level directory of sql.

Make sure that the proper environment for MSVC++ is set,
otherwise call the corresponding BAT file.
(see ``C:\Program Files\Microsoft Visual Studio\VC98\Bin\VCVARS32.BAT``).

Make sure that Python, ``C:\Pthreads\lib`` (or wherever you installed
Pthreads), and ``\usr\local\wbin`` are in the ``PATH`` of your command
shell.

Make sure that the location where the autogen.py script from the
buildtools is installed is in your ``PATH``.  Typically this is in
``C:\\Python24\Scripts``.

Further, create an enviroment variable ``MONETDB_PREFIX`` that
contains the absolute path of the directory where your installed
MonetDB, e.g.,

::

 set MONETDB_PREFIX=<monet-source>\NT

and make sure that ``%MONETDB_PREFIX%\bin``, ``%MONETDB_PREFIX%\lib``,
and ``%MONETDB_PREFIX%\lib\MonetDB`` are in your ``PATH``.

Also set the environment variable ``SQL_BUILD`` to the path of the sql
``NT`` directory, e.g.,

::

 set SQL_BUILD=<sql-source>\NT

When all prerequisites have been satisfied, you type

::

 cd NT
 nmake

to compile the source code.


Testing the Build
-----------------

If nmake went successfully, you can try

::

 nmake check

This will do a lot of tests, some are unfortunately still expected to
fail, but most should go successfully.  At the end of the output there
is a reference to an HTML file which is created by the test process and
shows the test results.  An explanation of the test results can be found
in XXX--to be filled in.

Testing takes about 155 MB of disk space in the build directory.


Installing
----------

Give the command

::

 nmake install

By default this will install MonetDB/SQL to <sql-source>\NT\ where
<sql-source> is the top-level directory of MonetDB/SQL source tree.
The current version does not provide any means to change this default.


Testing the Installation
------------------------

Make sure that ``<sql-source>\NT\bin``, ``<sql-source>\NT\lib``, and
``<sql-source>\NT\lib\MonetDB`` are in your ``PATH``.

In the sql top-level directory issue the command

::

 Mtest.py --monet_mod_path=<monet-source>\NT\lib\MonetDB;<sql-source>\NT\lib\MonetDB --SQL_PREFIX=<sql-source>\NT --TSTSRCBASE=<sql-source> --TSTBLDBASE=<sql-source>\NT --TSTTRGBASE=<sql-source>\NT -r

This should produce much the same output as nmake check above, but uses
the installed version of MonetDB/SQL.


Usage
-----

To use the MonetDB SQL front end interactively, you first need to
start an MonetDB server (``Mserver``) with sql support.  To do so,
first make sure, that your environment is set as described in
`Compiling`_ and `Testing the Installation`_ above.

In case the install (i.e., prefix) directories of MonetDB and
MonetDB/SQL are identical, simply call

::

 Mserver --dbinit="module(sql_server); sql_server_start();"

In case you use different install (i.e., prefix) directories of MonetDB
and MonetDB/SQL, call

::

 Mserver --set monet_mod_path=<monet-prefix>\lib\MonetDB;<sql-prefix>\lib\MonetDB --dbinit="module(sql_server); sql_server_start();"

Then, in a second Windows command shell, set up the same environment
and start the MonetDB SQL front end by calling

::

 MapiClient -lsql -umonetdb -Pmonetdb


Documentation
-------------

Some initial documentation of the MonetDB SQL front end is available
in SQLfeatures.tex and `SQLsessionDemo.html`__.

__ ../../Usage/SQLsessionDemo/index.html
