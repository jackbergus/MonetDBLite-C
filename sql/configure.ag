# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2006 CWI.
# All Rights Reserved.

dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.53)
AC_INIT(src/include/sql_catalog.h)
AC_CONFIG_AUX_DIR(conf)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AH_TOP([#include "monetdb_config.h"])
AH_TOP([#include "sysdefs.h"])
AH_BOTTOM([#include "stddef.h"])

dnl ----------------------
AM_INIT_AUTOMAKE("sql", 2.11.3, [no-define])
AM_CONFIG_HEADER(sql_config.h:conf/config.h.in)
CONFIG_H=sql_config.h
AC_SUBST(CONFIG_H)

dnl Check for Monet
AM_MONETDB_COMPILER()
AM_MONETDB_TOOLS()
AM_MONETDB_OPTIONS()
AM_MONETDB_LIBS()
req_monetdb_ver='4.11.3'
AM_MONET($req_monetdb_ver)
if test "x$have_monet" != xyes; then
	AC_MSG_ERROR([SQL requires at least version $req_monetdb_ver of MonetDB, but only version $MONETVERS was found.])
fi
AM_MONETDB_UTILS()
req_monetdb_ver='4.99.19'
AM_MONET5($req_monetdb_ver)

# default the backend to be the best we can do (higher is better)
if test "x$have_monet5" = xyes; then
	backend=monet5
else
	backend=monet4
fi
AC_ARG_WITH(backend,
[  --with-backend=     	which backend to use ], backend="$withval")
SQL_BACKEND=$backend
AC_SUBST(SQL_BACKEND)
# define either MONET4 or MONET5 based on the backend chosen, make sure
# that not both are set!
AM_CONDITIONAL(MONET4, test "x$backend" = xmonet4)
test "x$backend" = xmonet4 && AC_DEFINE(MONET_BACKEND_VERSION, 4, [monet backend version major])
AM_CONDITIONAL(MONET5, test "x$backend" = xmonet5)
test "x$backend" = xmonet5 && AC_DEFINE(MONET_BACKEND_VERSION, 5, [monet backend version major])

dnl AC_CHECK_HEADERS(limits.h malloc.h pwd.h)

dnl  CFLAGS for our code are stricter than what autoconf can cope with.
CFLAGS="$CFLAGS \$(X_CFLAGS)"

dnl  However, there are still some signed-unsigned comparisons...
if test "$GCC" = "yes"; then
	X_CFLAGS="$X_CFLAGS -Wno-sign-compare"
fi

case "$host_os" in
*mingw*)
AM_CONDITIONAL(NOT_WIN32, false)
AM_CONDITIONAL(NATIVE_WIN32, true)
;;
*)
AM_CONDITIONAL(NOT_WIN32, true)
AM_CONDITIONAL(NATIVE_WIN32, false)
;;
esac
