stdout of test 'upgrade` in directory 'sql/test/testdb-upgrade-chain` itself:


# 15:17:06 >  
# 15:17:06 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/sjoerd/Monet-stable/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=36250" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_testdb-upgrade-chain" "--set" "mal_listing=0"
# 15:17:06 >  

# MonetDB 5 server v11.11.8 (hg id: 34fcf4e7226d+)
# This is an unreleased version
# Serving database 'mTests_test_testdb-upgrade-chain', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:36250/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
Running database upgrade commands:
drop function sys.zorder_slice;

Running database upgrade commands:
create aggregate sys.stddev_samp(val TINYINT) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val SMALLINT) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val INTEGER) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val BIGINT) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val REAL) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val DOUBLE) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val DATE) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val TIME) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_samp(val TIMESTAMP) returns DOUBLE external name "aggr"."stdev";
create aggregate sys.stddev_pop(val TINYINT) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val SMALLINT) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val INTEGER) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val BIGINT) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val REAL) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val DOUBLE) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val DATE) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val TIME) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.stddev_pop(val TIMESTAMP) returns DOUBLE external name "aggr"."stdevp";
create aggregate sys.var_samp(val TINYINT) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val SMALLINT) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val INTEGER) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val BIGINT) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val REAL) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val DOUBLE) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val DATE) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val TIME) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_samp(val TIMESTAMP) returns DOUBLE external name "aggr"."variance";
create aggregate sys.var_pop(val TINYINT) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val SMALLINT) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val INTEGER) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val BIGINT) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val REAL) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val DOUBLE) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val DATE) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val TIME) returns DOUBLE external name "aggr"."variancep";
create aggregate sys.var_pop(val TIMESTAMP) returns DOUBLE external name "aggr"."variancep";
insert into sys.systemfunctions (select f.id from sys.functions f, sys.schemas s where f.name in ('stddev_samp', 'stddev_pop', 'var_samp', 'var_pop') and f.type = 3 and f.schema_id = s.id and s.name = 'sys');


# 15:17:06 >  
# 15:17:06 >  "/usr/bin/python" "upgrade.SQL.py" "upgrade"
# 15:17:06 >  

#select count(*) from testschema.smallstring;
% testschema.smallstring # table_name
% L1 # name
% wrd # type
% 2 # length
[ 66	]

# 15:17:06 >  
# 15:17:06 >  "Done."
# 15:17:06 >  

