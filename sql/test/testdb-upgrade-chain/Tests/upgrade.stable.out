stdout of test 'upgrade` in directory 'sql/test/testdb-upgrade-chain` itself:


# 15:17:06 >  
# 15:17:06 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/sjoerd/Monet-stable/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=36250" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_testdb-upgrade-chain" "--set" "mal_listing=0"
# 15:17:06 >  

# MonetDB 5 server v11.11.8 (hg id: 34fcf4e7226d+)
# This is an unreleased version
# Serving database 'mTests_test_testdb-upgrade-chain', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:36250/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

Running database upgrade commands:
set schema "sys";
create procedure master()
external name wlc.master;
create procedure master(path string)
external name wlc.master;
create procedure stopmaster()
external name wlc.stopmaster;
create procedure masterbeat( duration int)
external name wlc."setmasterbeat";
create function masterClock() returns string
external name wlc."getmasterclock";
create function masterTick() returns bigint
external name wlc."getmastertick";
create procedure replicate()
external name wlr.replicate;
create procedure replicate(pointintime timestamp)
external name wlr.replicate;
create procedure replicate(dbname string)
external name wlr.replicate;
create procedure replicate(dbname string, pointintime timestamp)
external name wlr.replicate;
create procedure replicate(dbname string, id tinyint)
external name wlr.replicate;
create procedure replicate(dbname string, id smallint)
external name wlr.replicate;
create procedure replicate(dbname string, id integer)
external name wlr.replicate;
create procedure replicate(dbname string, id bigint)
external name wlr.replicate;
create procedure replicabeat(duration integer)
external name wlr."setreplicabeat";
create function replicaClock() returns string
external name wlr."getreplicaclock";
create function replicaTick() returns bigint
external name wlr."getreplicatick";
insert into sys.systemfunctions (select id from sys.functions where name in ('master', 'stopmaster', 'masterbeat', 'masterclock', 'mastertick', 'replicate', 'replicabeat', 'replicaclock', 'replicatick') and schema_id = (select id from sys.schemas where name = 'sys') and id not in (select function_id from sys.systemfunctions));
delete from sys.systemfunctions where function_id not in (select id from sys.functions);
set schema "testschema";

Running database upgrade commands:
set schema "sys";
drop view sys.geometry_columns;
create view geometry_columns as
	select e.value as f_table_catalog,
		s.name as f_table_schema,
		y.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type
	from schemas s, environment e, (
		select t.schema_id,
			t.name as f_table_name,
			x.name as f_geometry_column,
			cast(has_z(info)+has_m(info)+2 as integer) as coord_dimension,
			srid, get_type(info, 0) as type
		from tables t, (
			select name, table_id, type_digits AS info, type_scale AS srid
			from columns
			where type in ( select distinct sqlname from types where systemname='wkb')
			) as x
		where t.id=x.table_id
		) y
	where y.schema_id=s.id and e.name='gdk_dbname';
GRANT SELECT ON geometry_columns TO PUBLIC;
update sys._tables set system = true where name in ('geometry_columns') and schema_id = (select id from schemas where name = 'sys');
delete from sys.systemfunctions where function_id not in (select id from sys.functions);
set schema "testschema";


# 14:06:27 >  
# 14:06:27 >  "/usr/bin/python2" "upgrade.SQL.py" "upgrade"
# 14:06:27 >  

#select count(*) from testschema.smallstring;
% testschema.L4 # table_name
% L3 # name
% bigint # type
% 2 # length
[ 66	]

# 15:17:06 >  
# 15:17:06 >  "Done."
# 15:17:06 >  

