stdout of test 'php_monetdb_bam` in directory 'sql/test/mapi` itself:


# 08:54:15 >  
# 08:54:15 >  "mserver5" "--debug=0" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32807" "--set" "mapi_usock=/var/tmp/mtest-16172/.s.monetdb.32807" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/monet/GNU-Fedora-x86_64-oid32-dbfarm-5d30a783ecdd-bamloader/tests/sql/dbfarm/mTests_sql_test_mapi" "--set" "mal_listing=0"
# 08:54:15 >  

# MonetDB 5 server v11.18.0 "bamloader-5d30a783ecdd"
# Serving database 'mTests_sql_test_mapi', using 4 threads
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs dynamically linked
# Found 7.789 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://lab02.ins.cwi.nl:32807/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-16172/.s.monetdb.32807
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 08:54:16 >  
# 08:54:16 >  "./php_monetdb.SQL.sh" "php_monetdb"
# 08:54:16 >  


# 08:54:16 >  
# 08:54:16 >  php -d include_path=/export/scratch1/monet/GNU-Fedora-x86_64-oid32-dbfarm-5d30a783ecdd-bamloader/install/share/php -f /export/scratch1/monet/GNU-Fedora-x86_64-oid32-dbfarm-5d30a783ecdd-bamloader/MonetDB/clients/examples/php/sqlsample.php 32807 mTests_sql_test_mapi
# 08:54:16 >  




schemas
types
functions
args
sequences
dependencies
connections
_tables
_columns
keys
idxs
triggers
objects
_tables
_columns
keys
idxs
triggers
objects
tables
columns
db_user_info
users
user_role
auths
privileges
querylog_catalog
querylog_calls
querylog_history
tracelog
sessions
optimizers
environment
queue
storage
storagemodelinput
storagemodel
tablestoragemodel
statistics
files
sq
rg
pg
export
systemfunctions
name    schema_id       query   type    system  commit_action   readonly        temporary       
schemas 2000            0       true    0       false   0       
types   2000            0       true    0       false   0       
functions       2000            0       true    0       false   0       
args    2000            0       true    0       false   0       
sequences       2000            0       true    0       false   0       
dependencies    2000            0       true    0       false   0       
connections     2000            0       true    0       false   0       
_tables 2000            0       true    0       false   0       
_columns        2000            0       true    0       false   0       
keys    2000            0       true    0       false   0       
idxs    2000            0       true    0       false   0       
triggers        2000            0       true    0       false   0       
objects 2000            0       true    0       false   0       
_tables 2106            0       true    2       false   0       
_columns        2106            0       true    2       false   0       
keys    2106            0       true    2       false   0       
idxs    2106            0       true    2       false   0       
triggers        2106            0       true    2       false   0       
objects 2106            0       true    2       false   0       
tables  2000    SELECT * FROM (SELECT p.*, 0 AS "temporary" FROM "sys"."_tables" AS p UNION ALL SELECT t.*, 1 AS "temporary" FROM "tmp"."_tables" AS t) AS tables where tables.type <> 2;       1       true    0       false   0       
columns 2000    SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;       1       true    0       false   0       
db_user_info    2000            0       true    0       false   0       
users   2000    SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;       1       true    0       false   0       
user_role       2000            0       true    0       false   0       
auths   2000            0       true    0       false   0       
privileges      2000            0       true    0       false   0       
querylog_catalog        2000    -- create table views for conveniencencreate view sys.querylog_catalog as select * from sys.querylog_catalog(); 1       true    0       false   0       
querylog_calls  2000    create view sys.querylog_calls as select * from sys.querylog_calls();   1       true    0       false   0       
querylog_history        2000    create view sys.querylog_history asnselect qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.space, ql.io nfrom sys.querylog_catalog() qd, sys.querylog_calls() qlnwhere qd.id = ql.id and qd.owner = user;      1       true    0       false   0       
tracelog        2000    create view sys.tracelog as select * from sys.tracelog();       1       true    0       false   0       
sessions        2000    create view sys.sessions as select * from sys.sessions();       1       true    0       false   0       
optimizers      2000    create view sys.optimizers as select * from sys.optimizers();   1       true    0       false   0       
environment     2000    create view sys.environment as select * from sys.environment(); 1       true    0       false   0       
queue   2000    create view sys.queue as select * from sys.queue();     1       true    0       false   0       
storage 2000    create view sys.storage as select * from sys.storage(); 1       true    0       false   0       
storagemodelinput       2000            0       true    0       false   0       
storagemodel    2000    create view sys.storagemodel as select * from sys.storagemodel();       1       true    0       false   0       
tablestoragemodel       2000    -- A summary of the table storage requirement is is available as a table view.n-- The auxillary column denotes the maximum space if all non-sorted columnsn-- would be augmented with a hash (rare situation)ncreate view sys.tablestoragemodelnas select "schema","table",max(count) as "count",ntsum(columnsize) as columnsize,ntsum(heapsize) as heapsize,ntsum(hashes) as hashes,ntsum(imprints) as imprints,ntsum(case when sorted = false then 8 * count else 0 end) as auxillarynfrom sys.storagemodel() group by "schema","table";      1       true    0       false   0       
statistics      2000            0       true    0       false   0       
files   6510            0       false   0       false   0       
sq      6510            0       false   0       false   0       
rg      6510            0       false   0       false   0       
pg      6510            0       false   0       false   0       
export  6510            0       false   0       false   0       
systemfunctions 2000            0       true    0       false   0       

# 08:54:16 >  
# 08:54:16 >  "Done."
# 08:54:16 >  
