stdout of test 'LIMIT_OFFSET_big-endian.Bug-2622` in directory 'sql/test/BugTracker-2010` itself:


# 21:05:24 >  
# 21:05:24 >   mserver5 "--config=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5/lib:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=38140 --set xrpc_port=48203 --set monet_prompt= --set mal_listing=2 --trace  "--dbname=mTests_src_test_BugTracker-2010" --set mal_listing=0 ; echo ; echo Over..
# 21:05:24 >  

# MonetDB server v5.20.3, based on kernel v1.38.3
# Serving database 'mTests_src_test_BugTracker-2010', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.751 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:38140/
# MonetDB/SQL module v2.38.3 loaded
# MonetDB/GIS module v0.18.3 loaded

Ready.


# 21:05:24 >  
# 21:05:24 >  mclient -lsql -ftest -i -e --host=rig --port=38140 
# 21:05:24 >  

[ 1	]
[ 1	]
[ 1	]
[ 1	]

#PLAN select * from oblo;
% .plan # table_name
% rel # name
% clob # type
% 35 # length
project (
| table(sys.oblo) [ oblo.a ] COUNT 
) [ oblo.a ]
#PLAN select * from oblo OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "2" ]
#PLAN select * from oblo LIMIT 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "2" ]
#PLAN select * from oblo LIMIT 1 OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "1", bigint "2" ]
#PLAN select * from oblo LIMIT 2 OFFSET 1;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "2", bigint "1" ]
#PLAN select * from oblo ORDER BY a;
% .plan # table_name
% rel # name
% clob # type
% 35 # length
project (
| table(sys.oblo) [ oblo.a ] COUNT 
) [ oblo.a ] [ oblo.a ASC ]
#PLAN select * from oblo ORDER BY a OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "2" ]
#PLAN select * from oblo ORDER BY a LIMIT 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "2" ]
#PLAN select * from oblo ORDER BY a LIMIT 2 OFFSET 1;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "2", bigint "1" ]
#PLAN select * from oblo ORDER BY a LIMIT 1 OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "1", bigint "2" ]
#EXPLAIN select * from oblo;
% .explain # table_name
% mal # name
% clob # type
% 82 # length
function user.s8_1():void;
    X_32:void := querylog.define("explain select * from oblo;","minimal_pipe",21);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_16 := bat.new(nil:oid,nil:str);
    X_19 := bat.new(nil:oid,nil:str);
    X_20 := bat.new(nil:oid,nil:str);
    X_21 := bat.new(nil:oid,nil:int);
    X_23 := bat.new(nil:oid,nil:int);
    X_24 := bat.append(X_16,"sys.oblo");
    X_26 := bat.append(X_19,"a");
    X_27 := bat.append(X_20,"int");
    X_29 := bat.append(X_21,32);
    X_31 := bat.append(X_23,0);
    sql.resultSet(X_24,X_26,X_27,X_29,X_31,X_14);
end user.s8_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=22 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=20 usec 
#garbageCollector     actions= 1 time=27 usec 
#total                actions= 1 time=128 usec 
#EXPLAIN select * from oblo OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 91 # length
function user.s10_1():void;
    X_41:void := querylog.define("explain select * from oblo offset 2;","minimal_pipe",27);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(2);
    X_17 := calc.lng(nil:lng);
    X_19 := calc.+(X_15,X_17);
    X_20 := calc.-(X_19,1);
    X_21 := algebra.subslice(X_14,X_15,X_20);
    X_22 := algebra.projection(X_21,X_14);
    X_24 := bat.new(nil:oid,nil:str);
    X_27 := bat.new(nil:oid,nil:str);
    X_28 := bat.new(nil:oid,nil:str);
    X_29 := bat.new(nil:oid,nil:int);
    X_31 := bat.new(nil:oid,nil:int);
    X_32 := bat.append(X_24,"sys.oblo");
    X_34 := bat.append(X_27,"a");
    X_35 := bat.append(X_28,"int");
    X_37 := bat.append(X_29,32);
    X_39 := bat.append(X_31,0);
    sql.resultSet(X_32,X_34,X_35,X_37,X_39,X_22);
end user.s10_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=28 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=10 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=26 usec 
#garbageCollector     actions= 1 time=34 usec 
#total                actions= 1 time=152 usec 
#EXPLAIN select * from oblo LIMIT 2;
% .explain # table_name
% mal # name
% clob # type
% 90 # length
function user.s12_1():void;
    X_41:void := querylog.define("explain select * from oblo limit 2;","minimal_pipe",27);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(0);
    X_17 := calc.lng(2);
    X_19 := calc.+(X_15,X_17);
    X_20 := calc.-(X_19,1);
    X_21 := algebra.subslice(X_14,X_15,X_20);
    X_22 := algebra.projection(X_21,X_14);
    X_24 := bat.new(nil:oid,nil:str);
    X_27 := bat.new(nil:oid,nil:str);
    X_28 := bat.new(nil:oid,nil:str);
    X_29 := bat.new(nil:oid,nil:int);
    X_31 := bat.new(nil:oid,nil:int);
    X_32 := bat.append(X_24,"sys.oblo");
    X_34 := bat.append(X_27,"a");
    X_35 := bat.append(X_28,"int");
    X_37 := bat.append(X_29,32);
    X_39 := bat.append(X_31,0);
    sql.resultSet(X_32,X_34,X_35,X_37,X_39,X_22);
end user.s12_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=10 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=26 usec 
#garbageCollector     actions= 1 time=35 usec 
#total                actions= 1 time=149 usec 
#EXPLAIN select * from oblo LIMIT 1 OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 99 # length
function user.s14_1():void;
    X_41:void := querylog.define("explain select * from oblo limit 1 offset 2;","minimal_pipe",27);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(2);
    X_17 := calc.lng(1);
    X_19 := calc.+(X_15,X_17);
    X_20 := calc.-(X_19,1);
    X_21 := algebra.subslice(X_14,X_15,X_20);
    X_22 := algebra.projection(X_21,X_14);
    X_24 := bat.new(nil:oid,nil:str);
    X_27 := bat.new(nil:oid,nil:str);
    X_28 := bat.new(nil:oid,nil:str);
    X_29 := bat.new(nil:oid,nil:int);
    X_31 := bat.new(nil:oid,nil:int);
    X_32 := bat.append(X_24,"sys.oblo");
    X_34 := bat.append(X_27,"a");
    X_35 := bat.append(X_28,"int");
    X_37 := bat.append(X_29,32);
    X_39 := bat.append(X_31,0);
    sql.resultSet(X_32,X_34,X_35,X_37,X_39,X_22);
end user.s14_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=26 usec 
#garbageCollector     actions= 1 time=45 usec 
#total                actions= 1 time=160 usec 
#EXPLAIN select * from oblo LIMIT 2 OFFSET 1;
% .explain # table_name
% mal # name
% clob # type
% 99 # length
function user.s16_1():void;
    X_41:void := querylog.define("explain select * from oblo limit 2 offset 1;","minimal_pipe",27);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(1);
    X_17 := calc.lng(2);
    X_19 := calc.+(X_15,X_17);
    X_20 := calc.-(X_19,1);
    X_21 := algebra.subslice(X_14,X_15,X_20);
    X_22 := algebra.projection(X_21,X_14);
    X_24 := bat.new(nil:oid,nil:str);
    X_27 := bat.new(nil:oid,nil:str);
    X_28 := bat.new(nil:oid,nil:str);
    X_29 := bat.new(nil:oid,nil:int);
    X_31 := bat.new(nil:oid,nil:int);
    X_32 := bat.append(X_24,"sys.oblo");
    X_34 := bat.append(X_27,"a");
    X_35 := bat.append(X_28,"int");
    X_37 := bat.append(X_29,32);
    X_39 := bat.append(X_31,0);
    sql.resultSet(X_32,X_34,X_35,X_37,X_39,X_22);
end user.s16_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=25 usec 
#garbageCollector     actions= 1 time=34 usec 
#total                actions= 1 time=144 usec 
#EXPLAIN select * from oblo ORDER BY a;
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s18_1():void;
    X_38:void := querylog.define("explain select * from oblo order by a;","minimal_pipe",23);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    (X_15,r1_15,r2_15) := algebra.subsort(X_14,false,false);
    X_20 := algebra.projection(r1_15,X_14);
    X_22 := bat.new(nil:oid,nil:str);
    X_25 := bat.new(nil:oid,nil:str);
    X_26 := bat.new(nil:oid,nil:str);
    X_27 := bat.new(nil:oid,nil:int);
    X_29 := bat.new(nil:oid,nil:int);
    X_30 := bat.append(X_22,"sys.oblo");
    X_32 := bat.append(X_25,"a");
    X_33 := bat.append(X_26,"int");
    X_35 := bat.append(X_27,32);
    X_37 := bat.append(X_29,0);
    sql.resultSet(X_30,X_32,X_33,X_35,X_37,X_20);
end user.s18_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=20 usec 
#remap                actions= 0 time=4 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=19 usec 
#garbageCollector     actions= 1 time=29 usec 
#total                actions= 1 time=126 usec 
#EXPLAIN select * from oblo ORDER BY a OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 102 # length
function user.s20_1():void;
    X_48:void := querylog.define("explain select * from oblo order by a offset 2;","minimal_pipe",29);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    (X_15,r1_15,r2_15) := algebra.subsort(X_14,false,false);
    X_20 := algebra.projection(r1_15,X_14);
    X_21 := calc.lng(2);
    X_23 := calc.lng(nil:lng);
    X_25 := calc.+(X_21,X_23);
    X_26 := calc.-(X_25,1);
    X_27 := algebra.subslice(X_20,X_21,X_26);
    X_28 := algebra.projection(X_27,X_20);
    X_30 := bat.new(nil:oid,nil:str);
    X_33 := bat.new(nil:oid,nil:str);
    X_34 := bat.new(nil:oid,nil:str);
    X_35 := bat.new(nil:oid,nil:int);
    X_37 := bat.new(nil:oid,nil:int);
    X_38 := bat.append(X_30,"sys.oblo");
    X_40 := bat.append(X_33,"a");
    X_42 := bat.append(X_34,"int");
    X_44 := bat.append(X_35,32);
    X_46 := bat.append(X_37,0);
    sql.resultSet(X_38,X_40,X_42,X_44,X_46,X_28);
end user.s20_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=32 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=10 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=29 usec 
#garbageCollector     actions= 1 time=39 usec 
#total                actions= 1 time=162 usec 
#EXPLAIN select * from oblo ORDER BY a LIMIT 2;
% .explain # table_name
% mal # name
% clob # type
% 101 # length
function user.s22_1():void;
    X_53:void := querylog.define("explain select * from oblo order by a limit 2;","minimal_pipe",34);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(0);
    X_17 := calc.lng(2);
    X_19 := calc.+(X_15,X_17);
    C_20 := algebra.firstn(X_14,X_19,true,false);
    X_23 := algebra.projection(C_20,X_14);
    (X_24,r1_24,r2_24) := algebra.subsort(X_23,false,false);
    X_27 := algebra.projection(r1_24,X_23);
    X_28 := calc.lng(0);
    X_29 := calc.lng(2);
    X_30 := calc.+(X_28,X_29);
    X_31 := calc.-(X_30,1);
    X_32 := algebra.subslice(X_27,X_28,X_31);
    X_33 := algebra.projection(X_32,X_27);
    X_35 := bat.new(nil:oid,nil:str);
    X_38 := bat.new(nil:oid,nil:str);
    X_39 := bat.new(nil:oid,nil:str);
    X_40 := bat.new(nil:oid,nil:int);
    X_42 := bat.new(nil:oid,nil:int);
    X_43 := bat.append(X_35,"sys.oblo");
    X_45 := bat.append(X_38,"a");
    X_47 := bat.append(X_39,"int");
    X_49 := bat.append(X_40,32);
    X_51 := bat.append(X_42,0);
    sql.resultSet(X_43,X_45,X_47,X_49,X_51,X_33);
end user.s22_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=44 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=10 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=33 usec 
#garbageCollector     actions= 1 time=41 usec 
#total                actions= 1 time=184 usec 
#EXPLAIN select * from oblo ORDER BY a LIMIT 2 OFFSET 1;
% .explain # table_name
% mal # name
% clob # type
% 110 # length
function user.s24_1():void;
    X_56:void := querylog.define("explain select * from oblo order by a limit 2 offset 1;","minimal_pipe",36);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(0);
    X_17 := calc.lng(2);
    X_19 := calc.lng(1);
    X_21:lng := calc.+(X_17,X_19);
    X_22 := calc.+(X_15,X_21);
    C_23 := algebra.firstn(X_14,X_22,true,false);
    X_26 := algebra.projection(C_23,X_14);
    (X_27,r1_27,r2_27) := algebra.subsort(X_26,false,false);
    X_30 := algebra.projection(r1_27,X_26);
    X_31 := calc.lng(1);
    X_32 := calc.lng(2);
    X_33 := calc.+(X_31,X_32);
    X_34 := calc.-(X_33,1);
    X_35 := algebra.subslice(X_30,X_31,X_34);
    X_36 := algebra.projection(X_35,X_30);
    X_38 := bat.new(nil:oid,nil:str);
    X_41 := bat.new(nil:oid,nil:str);
    X_42 := bat.new(nil:oid,nil:str);
    X_43 := bat.new(nil:oid,nil:int);
    X_45 := bat.new(nil:oid,nil:int);
    X_46 := bat.append(X_38,"sys.oblo");
    X_48 := bat.append(X_41,"a");
    X_50 := bat.append(X_42,"int");
    X_52 := bat.append(X_43,32);
    X_54 := bat.append(X_45,0);
    sql.resultSet(X_46,X_48,X_50,X_52,X_54,X_36);
end user.s24_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=37 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=11 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=34 usec 
#garbageCollector     actions= 1 time=43 usec 
#total                actions= 1 time=178 usec 
#EXPLAIN select * from oblo ORDER BY a LIMIT 1 OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 110 # length
function user.s26_1():void;
    X_56:void := querylog.define("explain select * from oblo order by a limit 1 offset 2;","minimal_pipe",36);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","oblo");
    X_5:bat[:int] := sql.bind(X_1,"sys","oblo","a",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","oblo","a",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","oblo","a",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := calc.lng(0);
    X_17 := calc.lng(1);
    X_19 := calc.lng(2);
    X_21:lng := calc.+(X_17,X_19);
    X_22 := calc.+(X_15,X_21);
    C_23 := algebra.firstn(X_14,X_22,true,false);
    X_26 := algebra.projection(C_23,X_14);
    (X_27,r1_27,r2_27) := algebra.subsort(X_26,false,false);
    X_30 := algebra.projection(r1_27,X_26);
    X_31 := calc.lng(2);
    X_32 := calc.lng(1);
    X_33 := calc.+(X_31,X_32);
    X_34 := calc.-(X_33,1);
    X_35 := algebra.subslice(X_30,X_31,X_34);
    X_36 := algebra.projection(X_35,X_30);
    X_38 := bat.new(nil:oid,nil:str);
    X_41 := bat.new(nil:oid,nil:str);
    X_42 := bat.new(nil:oid,nil:str);
    X_43 := bat.new(nil:oid,nil:int);
    X_45 := bat.new(nil:oid,nil:int);
    X_46 := bat.append(X_38,"sys.oblo");
    X_48 := bat.append(X_41,"a");
    X_50 := bat.append(X_42,"int");
    X_52 := bat.append(X_43,32);
    X_54 := bat.append(X_45,0);
    sql.resultSet(X_46,X_48,X_50,X_52,X_54,X_36);
end user.s26_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=48 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=12 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=35 usec 
#garbageCollector     actions= 1 time=44 usec 
#total                actions= 1 time=192 usec 
#select * from oblo;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 4	]
[ 3	]
[ 2	]
[ 1	]
#select * from oblo OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 2	]
[ 1	]
#select * from oblo LIMIT 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 4	]
[ 3	]
#select * from oblo LIMIT 1 OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 2	]
#select * from oblo LIMIT 2 OFFSET 1;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 3	]
[ 2	]
#select * from oblo ORDER BY a;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 1	]
[ 2	]
[ 3	]
[ 4	]
#select * from oblo ORDER BY a OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 3	]
[ 4	]
#select * from oblo ORDER BY a LIMIT 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 1	]
[ 2	]
#select * from oblo ORDER BY a LIMIT 2 OFFSET 1;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 2	]
[ 3	]
#select * from oblo ORDER BY a LIMIT 1 OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 3	]

# 21:05:24 >  
# 21:05:24 >  Done.
# 21:05:24 >  

