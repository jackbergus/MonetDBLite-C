stdout of test 'LIMIT_OFFSET_big-endian.Bug-2622` in directory 'sql/test/BugTracker-2010` itself:


# 21:05:24 >  
# 21:05:24 >   mserver5 "--config=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5/lib:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=38140 --set xrpc_port=48203 --set monet_prompt= --set mal_listing=2 --trace  "--dbname=mTests_src_test_BugTracker-2010" --set mal_listing=0 ; echo ; echo Over..
# 21:05:24 >  

# MonetDB server v5.20.3, based on kernel v1.38.3
# Serving database 'mTests_src_test_BugTracker-2010', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.751 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:38140/
# MonetDB/SQL module v2.38.3 loaded
# MonetDB/GIS module v0.18.3 loaded

Ready.


# 21:05:24 >  
# 21:05:24 >  mclient -lsql -ftest -i -e --host=rig --port=38140 
# 21:05:24 >  

[ 1	]
[ 1	]
[ 1	]
[ 1	]

#PLAN select * from oblo;
% .plan # table_name
% rel # name
% clob # type
% 35 # length
project (
| table(sys.oblo) [ oblo.a ] COUNT 
) [ oblo.a ]
#PLAN select * from oblo OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "2" ]
#PLAN select * from oblo LIMIT 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "2" ]
#PLAN select * from oblo LIMIT 1 OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "1", bigint "2" ]
#PLAN select * from oblo LIMIT 2 OFFSET 1;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ]
) [ bigint "2", bigint "1" ]
#PLAN select * from oblo ORDER BY a;
% .plan # table_name
% rel # name
% clob # type
% 35 # length
project (
| table(sys.oblo) [ oblo.a ] COUNT 
) [ oblo.a ] [ oblo.a ASC ]
#PLAN select * from oblo ORDER BY a OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "2" ]
#PLAN select * from oblo ORDER BY a LIMIT 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "2" ]
#PLAN select * from oblo ORDER BY a LIMIT 2 OFFSET 1;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "2", bigint "1" ]
#PLAN select * from oblo ORDER BY a LIMIT 1 OFFSET 2;
% .plan # table_name
% rel # name
% clob # type
% 37 # length
top N (
| project (
| | table(sys.oblo) [ oblo.a ] COUNT 
| ) [ oblo.a ] [ oblo.a ASC ]
) [ bigint "1", bigint "2" ]
#EXPLAIN select * from oblo;
% .explain # table_name
% mal # name
% clob # type
% 87 # length
function user.s8_1():void;
    X_1:void := querylog.define("explain select * from oblo;", "minimal_pipe", 21:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_8:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_11:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_13:bat[:oid], X_14:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_16 := sql.delta(X_8, C_13, X_14, X_11);
    X_17 := algebra.projection(C_5, X_16);
    X_19 := bat.new(nil:str);
    X_21 := bat.new(nil:str);
    X_22 := bat.new(nil:str);
    X_23 := bat.new(nil:int);
    X_25 := bat.new(nil:int);
    X_26 := bat.append(X_19, "sys.oblo");
    X_28 := bat.append(X_21, "a");
    X_29 := bat.append(X_22, "int");
    X_31 := bat.append(X_23, 32:int);
    X_33 := bat.append(X_25, 0:int);
    sql.resultSet(X_26, X_28, X_29, X_31, X_33, X_17);
end user.s8_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=22 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=20 usec 
#garbageCollector     actions= 1 time=27 usec 
#total                actions= 1 time=128 usec 
#EXPLAIN select * from oblo OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 96 # length
function user.s10_1():void;
    X_1:void := querylog.define("explain select * from oblo offset 2;", "minimal_pipe", 27:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_8:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_11:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_13:bat[:oid], X_14:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_16 := sql.delta(X_8, C_13, X_14, X_11);
    X_17 := algebra.projection(C_5, X_16);
    X_18 := calc.lng(2:lng);
    X_20 := calc.lng(nil:lng);
    X_22 := calc.+(X_18, X_20);
    X_23 := calc.-(X_22, 1:int);
    X_24 := algebra.subslice(X_17, X_18, X_23);
    X_25 := algebra.projection(X_24, X_17);
    X_27 := bat.new(nil:str);
    X_29 := bat.new(nil:str);
    X_30 := bat.new(nil:str);
    X_31 := bat.new(nil:int);
    X_33 := bat.new(nil:int);
    X_34 := bat.append(X_27, "sys.oblo");
    X_36 := bat.append(X_29, "a");
    X_37 := bat.append(X_30, "int");
    X_39 := bat.append(X_31, 32:int);
    X_41 := bat.append(X_33, 0:int);
    sql.resultSet(X_34, X_36, X_37, X_39, X_41, X_25);
end user.s10_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=2 usec 
#deadcode             actions= 0 time=5 usec 
#multiplex            actions= 0 time=1 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=24 usec 
#total                actions= 8 time=68 usec 
#EXPLAIN select * from oblo LIMIT 2;
% .explain # table_name
% mal # name
% clob # type
% 95 # length
function user.s12_1():void;
    X_1:void := querylog.define("explain select * from oblo limit 2;", "minimal_pipe", 28:int);
    X_4 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_10:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_13:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_15:bat[:oid], X_16:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_18 := sql.delta(X_10, C_15, X_16, X_13);
    X_19 := algebra.projection(C_7, X_18);
    X_20 := calc.lng(2:lng);
    X_21 := calc.lng(0:lng);
    X_23 := calc.+(X_21, X_20);
    X_24 := calc.-(X_23, 1:int);
    X_25 := algebra.subslice(X_19, X_21, X_24);
    X_26 := algebra.projection(X_25, X_19);
    X_28 := bat.new(nil:str);
    X_30 := bat.new(nil:str);
    X_31 := bat.new(nil:str);
    X_32 := bat.new(nil:int);
    X_34 := bat.new(nil:int);
    X_35 := bat.append(X_28, "sys.oblo");
    X_37 := bat.append(X_30, "a");
    X_38 := bat.append(X_31, "int");
    X_40 := bat.append(X_32, 32:int);
    X_42 := bat.append(X_34, 0:int);
    sql.resultSet(X_35, X_37, X_38, X_40, X_42, X_26);
end user.s12_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=10 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=26 usec 
#garbageCollector     actions= 1 time=35 usec 
#total                actions= 1 time=149 usec 
#EXPLAIN select * from oblo LIMIT 1 OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 104 # length
function user.s14_1():void;
    X_1:void := querylog.define("explain select * from oblo limit 1 offset 2;", "minimal_pipe", 30:int);
    X_4 := sql.mvc();
    C_10:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_13:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_16:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_18:bat[:oid], X_19:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_21 := sql.delta(X_13, C_18, X_19, X_16);
    X_22 := algebra.projection(C_10, X_21);
    X_23 := calc.lng(1:lng);
    X_24 := calc.lng(2:lng);
    X_25 := calc.+(X_24, X_23);
    X_26 := calc.-(X_25, 1:int);
    X_27 := algebra.subslice(X_22, X_24, X_26);
    X_28 := algebra.projection(X_27, X_22);
    X_30 := bat.new(nil:str);
    X_32 := bat.new(nil:str);
    X_33 := bat.new(nil:str);
    X_34 := bat.new(nil:int);
    X_36 := bat.new(nil:int);
    X_37 := bat.append(X_30, "sys.oblo");
    X_39 := bat.append(X_32, "a");
    X_40 := bat.append(X_33, "int");
    X_42 := bat.append(X_34, 32:int);
    X_44 := bat.append(X_36, 0:int);
    sql.resultSet(X_37, X_39, X_40, X_42, X_44, X_28);
end user.s14_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=26 usec 
#garbageCollector     actions= 1 time=45 usec 
#total                actions= 1 time=160 usec 
#EXPLAIN select * from oblo LIMIT 2 OFFSET 1;
% .explain # table_name
% mal # name
% clob # type
% 104 # length
function user.s16_1():void;
    X_1:void := querylog.define("explain select * from oblo limit 2 offset 1;", "minimal_pipe", 30:int);
    X_4 := sql.mvc();
    C_10:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_13:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_16:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_18:bat[:oid], X_19:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_21 := sql.delta(X_13, C_18, X_19, X_16);
    X_22 := algebra.projection(C_10, X_21);
    X_23 := calc.lng(2:lng);
    X_24 := calc.lng(1:lng);
    X_25 := calc.+(X_24, X_23);
    X_26 := calc.-(X_25, 1:int);
    X_27 := algebra.subslice(X_22, X_24, X_26);
    X_28 := algebra.projection(X_27, X_22);
    X_30 := bat.new(nil:str);
    X_32 := bat.new(nil:str);
    X_33 := bat.new(nil:str);
    X_34 := bat.new(nil:int);
    X_36 := bat.new(nil:int);
    X_37 := bat.append(X_30, "sys.oblo");
    X_39 := bat.append(X_32, "a");
    X_40 := bat.append(X_33, "int");
    X_42 := bat.append(X_34, 32:int);
    X_44 := bat.append(X_36, 0:int);
    sql.resultSet(X_37, X_39, X_40, X_42, X_44, X_28);
end user.s16_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=25 usec 
#garbageCollector     actions= 1 time=34 usec 
#total                actions= 1 time=144 usec 
#EXPLAIN select * from oblo ORDER BY a;
% .explain # table_name
% mal # name
% clob # type
% 98 # length
function user.s18_1():void;
    X_1:void := querylog.define("explain select * from oblo order by a;", "minimal_pipe", 23:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_8:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_11:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_13:bat[:oid], X_14:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_16 := sql.delta(X_8, C_13, X_14, X_11);
    X_17 := algebra.projection(C_5, X_16);
    (X_18, X_19, X_20) := algebra.sort(X_17, false, false);
    X_23 := algebra.projection(X_19, X_17);
    X_25 := bat.new(nil:str);
    X_27 := bat.new(nil:str);
    X_28 := bat.new(nil:str);
    X_29 := bat.new(nil:int);
    X_31 := bat.new(nil:int);
    X_32 := bat.append(X_25, "sys.oblo");
    X_34 := bat.append(X_27, "a");
    X_35 := bat.append(X_28, "int");
    X_37 := bat.append(X_29, 32:int);
    X_39 := bat.append(X_31, 0:int);
    sql.resultSet(X_32, X_34, X_35, X_37, X_39, X_23);
end user.s18_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=20 usec 
#remap                actions= 0 time=4 usec 
#deadcode             actions= 0 time=9 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=19 usec 
#garbageCollector     actions= 1 time=29 usec 
#total                actions= 1 time=126 usec 
#EXPLAIN select * from oblo ORDER BY a OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 107 # length
function user.s20_1():void;
    X_1:void := querylog.define("explain select * from oblo order by a offset 2;", "minimal_pipe", 29:int);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_8:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_11:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_13:bat[:oid], X_14:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_16 := sql.delta(X_8, C_13, X_14, X_11);
    X_17 := algebra.projection(C_5, X_16);
    (X_18, X_19, X_20) := algebra.sort(X_17, false, false);
    X_23 := algebra.projection(X_19, X_17);
    X_24 := calc.lng(2:lng);
    X_26 := calc.lng(nil:lng);
    X_28 := calc.+(X_24, X_26);
    X_29 := calc.-(X_28, 1:int);
    X_30 := algebra.subslice(X_23, X_24, X_29);
    X_31 := algebra.projection(X_30, X_23);
    X_33 := bat.new(nil:str);
    X_35 := bat.new(nil:str);
    X_36 := bat.new(nil:str);
    X_37 := bat.new(nil:int);
    X_39 := bat.new(nil:int);
    X_40 := bat.append(X_33, "sys.oblo");
    X_42 := bat.append(X_35, "a");
    X_44 := bat.append(X_36, "int");
    X_46 := bat.append(X_37, 32:int);
    X_48 := bat.append(X_39, 0:int);
    sql.resultSet(X_40, X_42, X_44, X_46, X_48, X_31);
end user.s20_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=32 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=10 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=29 usec 
#garbageCollector     actions= 1 time=39 usec 
#total                actions= 1 time=162 usec 
#EXPLAIN select * from oblo ORDER BY a LIMIT 2;
% .explain # table_name
% mal # name
% clob # type
% 106 # length
function user.s22_1():void;
    X_1:void := querylog.define("explain select * from oblo order by a limit 2;", "minimal_pipe", 35:int);
    X_4 := sql.mvc();
    X_5 := calc.lng(2:lng);
    C_7:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_10:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_13:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_15:bat[:oid], X_16:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_18 := sql.delta(X_10, C_15, X_16, X_13);
    X_19 := algebra.projection(C_7, X_18);
    X_20 := calc.lng(0:lng);
    X_22 := calc.+(X_20, X_5);
    C_23 := algebra.firstn(X_19, X_22, true, false);
    X_26 := algebra.projection(C_23, X_19);
    (X_28, X_29, X_30) := algebra.sort(X_26, false, false);
    X_31 := algebra.projection(X_29, X_26);
    X_32 := calc.lng(2:lng);
    X_33 := calc.lng(0:lng);
    X_34 := calc.+(X_33, X_32);
    X_35 := calc.-(X_34, 1:int);
    X_36 := algebra.subslice(X_31, X_33, X_35);
    X_37 := algebra.projection(X_36, X_31);
    X_39 := bat.new(nil:str);
    X_41 := bat.new(nil:str);
    X_42 := bat.new(nil:str);
    X_43 := bat.new(nil:int);
    X_45 := bat.new(nil:int);
    X_46 := bat.append(X_39, "sys.oblo");
    X_48 := bat.append(X_41, "a");
    X_50 := bat.append(X_42, "int");
    X_52 := bat.append(X_43, 32:int);
    X_54 := bat.append(X_45, 0:int);
    sql.resultSet(X_46, X_48, X_50, X_52, X_54, X_37);
end user.s22_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#deadcode             actions= 1 time=5 usec 
#multiplex            actions= 0 time=1 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=8 usec 
#EXPLAIN select * from oblo ORDER BY a LIMIT 2 OFFSET 1;
% .explain # table_name
% mal # name
% clob # type
% 115 # length
function user.s24_1():void;
    X_1:void := querylog.define("explain select * from oblo order by a limit 2 offset 1;", "minimal_pipe", 37:int);
    X_4 := sql.mvc();
    X_5 := calc.lng(2:lng);
    X_7 := calc.lng(1:lng);
    X_9:lng := calc.+(X_5, X_7);
    C_10:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_13:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_16:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_18:bat[:oid], X_19:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_21 := sql.delta(X_13, C_18, X_19, X_16);
    X_22 := algebra.projection(C_10, X_21);
    X_23 := calc.lng(0:lng);
    X_25 := calc.+(X_23, X_9);
    C_26 := algebra.firstn(X_22, X_25, true, false);
    X_29 := algebra.projection(C_26, X_22);
    (X_31, X_32, X_33) := algebra.sort(X_29, false, false);
    X_34 := algebra.projection(X_32, X_29);
    X_35 := calc.lng(2:lng);
    X_36 := calc.lng(1:lng);
    X_37 := calc.+(X_36, X_35);
    X_38 := calc.-(X_37, 1:int);
    X_39 := algebra.subslice(X_34, X_36, X_38);
    X_40 := algebra.projection(X_39, X_34);
    X_42 := bat.new(nil:str);
    X_44 := bat.new(nil:str);
    X_45 := bat.new(nil:str);
    X_46 := bat.new(nil:int);
    X_48 := bat.new(nil:int);
    X_49 := bat.append(X_42, "sys.oblo");
    X_51 := bat.append(X_44, "a");
    X_53 := bat.append(X_45, "int");
    X_55 := bat.append(X_46, 32:int);
    X_57 := bat.append(X_48, 0:int);
    sql.resultSet(X_49, X_51, X_53, X_55, X_57, X_40);
end user.s24_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=37 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=11 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=34 usec 
#garbageCollector     actions= 1 time=43 usec 
#total                actions= 1 time=178 usec 
#EXPLAIN select * from oblo ORDER BY a LIMIT 1 OFFSET 2;
% .explain # table_name
% mal # name
% clob # type
% 115 # length
function user.s26_1():void;
    X_1:void := querylog.define("explain select * from oblo order by a limit 1 offset 2;", "minimal_pipe", 37:int);
    X_4 := sql.mvc();
    X_5 := calc.lng(1:lng);
    X_7 := calc.lng(2:lng);
    X_9:lng := calc.+(X_5, X_7);
    C_10:bat[:oid] := sql.tid(X_4, "sys", "oblo");
    X_13:bat[:int] := sql.bind(X_4, "sys", "oblo", "a", 0:int);
    X_16:bat[:int] := sql.emptybind(X_4, "sys", "oblo", "a", 1:int);
    (C_18:bat[:oid], X_19:bat[:int]) := sql.emptybind(X_4, "sys", "oblo", "a", 2:int);
    X_21 := sql.delta(X_13, C_18, X_19, X_16);
    X_22 := algebra.projection(C_10, X_21);
    X_23 := calc.lng(0:lng);
    X_25 := calc.+(X_23, X_9);
    C_26 := algebra.firstn(X_22, X_25, true, false);
    X_29 := algebra.projection(C_26, X_22);
    (X_31, X_32, X_33) := algebra.sort(X_29, false, false);
    X_34 := algebra.projection(X_32, X_29);
    X_35 := calc.lng(1:lng);
    X_36 := calc.lng(2:lng);
    X_37 := calc.+(X_36, X_35);
    X_38 := calc.-(X_37, 1:int);
    X_39 := algebra.subslice(X_34, X_36, X_38);
    X_40 := algebra.projection(X_39, X_34);
    X_42 := bat.new(nil:str);
    X_44 := bat.new(nil:str);
    X_45 := bat.new(nil:str);
    X_46 := bat.new(nil:int);
    X_48 := bat.new(nil:int);
    X_49 := bat.append(X_42, "sys.oblo");
    X_51 := bat.append(X_44, "a");
    X_53 := bat.append(X_45, "int");
    X_55 := bat.append(X_46, 32:int);
    X_57 := bat.append(X_48, 0:int);
    sql.resultSet(X_49, X_51, X_53, X_55, X_57, X_40);
end user.s26_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=48 usec 
#remap                actions= 0 time=5 usec 
#deadcode             actions= 0 time=12 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=35 usec 
#garbageCollector     actions= 1 time=44 usec 
#total                actions= 1 time=192 usec 
#select * from oblo;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 4	]
[ 3	]
[ 2	]
[ 1	]
#select * from oblo OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 2	]
[ 1	]
#select * from oblo LIMIT 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 4	]
[ 3	]
#select * from oblo LIMIT 1 OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 2	]
#select * from oblo LIMIT 2 OFFSET 1;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 3	]
[ 2	]
#select * from oblo ORDER BY a;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 1	]
[ 2	]
[ 3	]
[ 4	]
#select * from oblo ORDER BY a OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 3	]
[ 4	]
#select * from oblo ORDER BY a LIMIT 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 1	]
[ 2	]
#select * from oblo ORDER BY a LIMIT 2 OFFSET 1;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 2	]
[ 3	]
#select * from oblo ORDER BY a LIMIT 1 OFFSET 2;
% sys.oblo # table_name
% a # name
% int # type
% 1 # length
[ 3	]

# 21:05:24 >  
# 21:05:24 >  Done.
# 21:05:24 >  

