stdout of test 'group-by_ordered_column.Bug-2564` in directory 'sql/test/BugTracker-2010` itself:


# 19:36:51 >  
# 19:36:51 >   mserver5 "--config=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5/lib:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=30272 --set xrpc_port=42483 --set monet_prompt= --set mal_listing=2 --trace  "--dbname=mTests_src_test_BugTracker-2010" --set mal_listing=0 ; echo ; echo Over..
# 19:36:51 >  

# MonetDB server v5.20.3, based on kernel v1.38.2
# Serving database 'mTests_src_test_BugTracker-2010', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.751 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:30272/
# MonetDB/SQL module v2.38.3 loaded
# MonetDB/GIS module v0.18.1 loaded

Ready.


# 19:36:51 >  
# 19:36:51 >  mclient -lsql -ftest -i -e --host=rig --port=30272 
# 19:36:51 >  

[ 1	]
[ 1	]
[ 1	]
#select * from t2564;
% sys.t2564,	sys.t2564,	sys.t2564 # table_name
% c1,	c2,	c3 # name
% int,	int,	int # type
% 1,	1,	1 # length
[ 3,	1,	2	]
[ 1,	2,	1	]
[ 2,	3,	3	]
#explain select count(*) from t2564 group by c1, c2, c3;
% .explain # table_name
% mal # name
% clob # type
% 65 # length
function user.s2_1{autoCommit=true}():void;
    X_2 := sql.mvc();
    X_3:bat[:oid,:oid]  := sql.tid(X_2,"sys","t2564");
    X_6 := sql.bind(X_2,"sys","t2564","c1",0);
    (X_9,r1_9) := sql.bind(X_2,"sys","t2564","c1",2);
    X_12 := sql.bind(X_2,"sys","t2564","c1",1);
    X_14 := sql.delta(X_6,X_9,r1_9,X_12);
    X_15 := algebra.leftfetchjoin(X_3,X_14);
    X_16 := sql.bind(X_2,"sys","t2564","c3",0);
    (X_18,r1_18) := sql.bind(X_2,"sys","t2564","c3",2);
    X_20 := sql.bind(X_2,"sys","t2564","c3",1);
    X_21 := sql.delta(X_16,X_18,r1_18,X_20);
    X_22 := algebra.leftfetchjoin(X_3,X_21);
    X_23 := sql.bind(X_2,"sys","t2564","c2",0);
    (X_25,r1_25) := sql.bind(X_2,"sys","t2564","c2",2);
    X_27 := sql.bind(X_2,"sys","t2564","c2",1);
    X_28 := sql.delta(X_23,X_25,r1_25,X_27);
    X_29 := algebra.leftfetchjoin(X_3,X_28);
    (X_30,r1_30,r2_30) := group.subgroup(X_29);
    (X_33,r1_33,r2_33) := group.subgroup(X_22,X_30);
    (X_36,r1_36,r2_36) := group.subgroupdone(X_15,X_33);
    X_39:bat[:oid,:wrd]  := aggr.subcount(X_36,X_36,r1_36,false);
    X_41 := sql.resultSet(1,1,X_39);
    sql.rsColumn(X_41,"sys.L1","L1","wrd",32,0,X_39);
    X_48 := io.stdout();
    sql.exportResult(X_48,X_41);
end s2_1;
#select count(*) from t2564 group by c1, c2, c3;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 1 # length
[ 1	]
[ 1	]
[ 1	]

# 19:36:51 >  
# 19:36:51 >  Done.
# 19:36:51 >  

