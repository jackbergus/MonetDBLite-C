stdout of test 'group-by_ordered_column.Bug-2564` in directory 'test/BugTracker-2010` itself:


# 19:36:51 >  
# 19:36:51 >   mserver5 "--config=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5/lib:/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/HG/Jun2010/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=30272 --set xrpc_port=42483 --set monet_prompt= --set mal_listing=2 --trace  "--dbname=mTests_src_test_BugTracker-2010" --set mal_listing=0 ; echo ; echo Over..
# 19:36:51 >  

# MonetDB server v5.20.3, based on kernel v1.38.2
# Serving database 'mTests_src_test_BugTracker-2010', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.751 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2012 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:30272/
# MonetDB/SQL module v2.38.3 loaded
# MonetDB/GIS module v0.18.1 loaded

Ready.


# 19:36:51 >  
# 19:36:51 >  mclient -lsql -ftest -i -e --host=rig --port=30272 
# 19:36:51 >  

[ 1	]
[ 1	]
[ 1	]
#select * from t2564;
% sys.t2564,	sys.t2564,	sys.t2564 # table_name
% c1,	c2,	c3 # name
% int,	int,	int # type
% 1,	1,	1 # length
[ 3,	1,	2	]
[ 1,	2,	1	]
[ 2,	3,	3	]
#explain select count(*) from t2564 group by c1, c2, c3;
% .explain # table_name
% mal # name
% clob # type
% 63 # length
function user.s4_1{autoCommit=true}():void;
    X_2 := sql.mvc();
    X_30:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c2",0);
    X_29:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c2",2);
    X_32 := algebra.kdifference(X_30,X_29);
    X_33 := algebra.kunion(X_32,X_29);
    X_28:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c2",1);
    X_34 := algebra.kunion(X_33,X_28);
    X_5:bat[:oid,:oid]  := sql.bind_dbat(X_2,"sys","t2564",1);
    X_8 := bat.reverse(X_5);
    X_35 := algebra.kdifference(X_34,X_8);
    (ext53,grp51) := group.new(X_35);
    X_21:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c3",0);
    X_20:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c3",2);
    X_22 := algebra.kdifference(X_21,X_20);
    X_23 := algebra.kunion(X_22,X_20);
    X_19:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c3",1);
    X_24 := algebra.kunion(X_23,X_19);
    X_25 := algebra.kdifference(X_24,X_8);
    (ext56,grp54) := group.derive(ext53,grp51,X_25);
    X_12:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c1",0);
    X_10:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c1",2);
    X_14 := algebra.kdifference(X_12,X_10);
    X_15 := algebra.kunion(X_14,X_10);
    X_9:bat[:oid,:int]  := sql.bind(X_2,"sys","t2564","c1",1);
    X_16 := algebra.kunion(X_15,X_9);
    X_17 := algebra.kdifference(X_16,X_8);
    (ext59,grp57) := group.done(ext56,grp54,X_17);
    X_42 := bat.mirror(ext59);
    X_43:bat[:oid,:wrd]  := aggr.count(grp57,grp57,X_42);
    X_44 := sql.resultSet(1,1,X_43);
    sql.rsColumn(X_44,"sys.t2564","L1":str,"wrd",64,0,X_43);
    X_52 := io.stdout();
    sql.exportResult(X_52,X_44);
end s4_1;
#select count(*) from t2564 group by c1, c2, c3;
% sys.t2564 # table_name
% L1 # name
% wrd # type
% 1 # length
[ 1	]
[ 1	]
[ 1	]

# 19:36:51 >  
# 19:36:51 >  Done.
# 19:36:51 >  

