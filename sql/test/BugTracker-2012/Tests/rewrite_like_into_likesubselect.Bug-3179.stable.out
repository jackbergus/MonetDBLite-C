stdout of test 'rewrite_like_into_likesubselect.Bug-3179` in directory 'sql/test/BugTracker-2012` itself:


# 13:28:50 >  
# 13:28:50 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=4" "--set" "mapi_open=true" "--set" "mapi_port=31819" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 13:28:50 >  

# MonetDB 5 server v11.14.0
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:31819/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 13:28:50 >  
# 13:28:50 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=niels" "--port=31819"
# 13:28:50 >  

#start transaction;
#explain select name,func from functions where name like '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 133 # length
function user.s4_1():void;
    X_53:void := querylog.define("explain select name,func from functions where name like \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_65 := algebra.likesubselect(X_4,X_1,"%optimizers%","",false);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_66 := algebra.likesubselect(r1_9,nil:bat[:oid],"%optimizers%","",false);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_68 := algebra.likesubselect(X_10,X_1,"%optimizers%","",false);
    X_17 := sql.subdelta(X_65,X_1,X_7,X_66,X_68);
    X_20 := sql.projectdelta(X_17,X_4,X_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(X_17,X_21,X_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s4_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=21 usec 
#remap                actions= 0 time=3 usec 
#costModel            actions= 1 time=17 usec 
#coercions            actions= 1 time=17 usec 
#evaluate             actions= 1 time=29 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 3 time=23 usec 
#aliases              actions= 5 time=18 usec 
#mergetable           actions= 0 time=24 usec 
#deadcode             actions= 4 time=17 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 3 time=17 usec 
#commonTerms          actions= 0 time=6 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=27 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=38 time=30 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=2 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=12 usec 
#garbageCollector     actions= 1 time=17 usec 
#total                actions= 1 time=362 usec 
#explain select name,func from functions where name not like '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 137 # length
function user.s6_1():void;
    X_53:void := querylog.define("explain select name,func from functions where name not like \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_65 := algebra.likesubselect(X_4,X_1,"%optimizers%","",true);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_66 := algebra.likesubselect(r1_9,nil:bat[:oid],"%optimizers%","",true);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_68 := algebra.likesubselect(X_10,X_1,"%optimizers%","",true);
    X_17 := sql.subdelta(X_65,X_1,X_7,X_66,X_68);
    X_20 := sql.projectdelta(X_17,X_4,X_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(X_17,X_21,X_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s6_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=18 usec 
#remap                actions= 0 time=3 usec 
#costModel            actions= 1 time=17 usec 
#coercions            actions= 1 time=16 usec 
#evaluate             actions= 1 time=28 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 3 time=21 usec 
#aliases              actions= 5 time=18 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 4 time=16 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 3 time=18 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=27 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=38 time=29 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=13 usec 
#garbageCollector     actions= 1 time=18 usec 
#total                actions= 1 time=368 usec 
#explain select name,func from functions where name ilike '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 134 # length
function user.s8_1():void;
    X_53:void := querylog.define("explain select name,func from functions where name ilike \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_65 := algebra.ilikesubselect(X_4,X_1,"%optimizers%","",false);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_66 := algebra.ilikesubselect(r1_9,nil:bat[:oid],"%optimizers%","",false);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_68 := algebra.ilikesubselect(X_10,X_1,"%optimizers%","",false);
    X_17 := sql.subdelta(X_65,X_1,X_7,X_66,X_68);
    X_20 := sql.projectdelta(X_17,X_4,X_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(X_17,X_21,X_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s8_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=18 usec 
#remap                actions= 0 time=3 usec 
#costModel            actions= 1 time=16 usec 
#coercions            actions= 1 time=16 usec 
#evaluate             actions= 1 time=27 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 3 time=21 usec 
#aliases              actions= 5 time=18 usec 
#mergetable           actions= 0 time=22 usec 
#deadcode             actions= 4 time=16 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 3 time=16 usec 
#commonTerms          actions= 0 time=6 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=27 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=38 time=30 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=12 usec 
#garbageCollector     actions= 1 time=17 usec 
#total                actions= 1 time=348 usec 
#explain select name,func from functions where name not ilike '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 138 # length
function user.s10_1():void;
    X_53:void := querylog.define("explain select name,func from functions where name not ilike \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_65 := algebra.ilikesubselect(X_4,X_1,"%optimizers%","",true);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_66 := algebra.ilikesubselect(r1_9,nil:bat[:oid],"%optimizers%","",true);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_68 := algebra.ilikesubselect(X_10,X_1,"%optimizers%","",true);
    X_17 := sql.subdelta(X_65,X_1,X_7,X_66,X_68);
    X_20 := sql.projectdelta(X_17,X_4,X_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(X_17,X_21,X_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s10_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=17 usec 
#remap                actions= 0 time=3 usec 
#costModel            actions= 1 time=16 usec 
#coercions            actions= 1 time=16 usec 
#evaluate             actions= 1 time=27 usec 
#emptybind            actions= 0 time=4 usec 
#pushselect           actions= 3 time=21 usec 
#aliases              actions= 5 time=17 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 4 time=17 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 3 time=17 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=28 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=38 time=30 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=0 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=1 usec 
#profiler             actions= 1 time=12 usec 
#garbageCollector     actions= 1 time=16 usec 
#total                actions= 1 time=349 usec 
#create function contains(str string, substr string)
#returns boolean
#begin
#	  return str like '%'||substr||'%';
#end; 
#create function not_contains(str string, substr string)
#returns boolean
#begin
#	  return str not like '%'||substr||'%';
#end; 
#create function icontains(str string, substr string)
#returns boolean
#begin
#	  return str ilike '%'||substr||'%';
#end; 
#create function not_icontains(str string, substr string)
#returns boolean
#begin
#	  return str not ilike '%'||substr||'%';
#end; 
#explain select name,func from functions where contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 137 # length
function user.s20_1():void;
    X_56:void := querylog.define("explain select name,func from functions where contains(name, \\'optimizers\\');","sequential_pipe",33);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_13 := sql.projectdelta(X_1,X_4,X_7,r1_9,X_10);
    X_75:bat[:bit] := batalgebra.like(X_13,"%optimizers%":str);
    X_20 := algebra.subselect(X_75,true,true,true,false,false);
    X_23 := algebra.projection(X_20,X_13);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_30 := sql.projectdelta(X_1,X_24,X_26,r1_28,X_28);
    X_31 := algebra.projection(X_20,X_30);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s20_1;
#inline               actions= 0 time=5 usec 
#candidates           actions= 1 time=27 usec 
#remap                actions= 1 time=88 usec 
#costModel            actions= 1 time=20 usec 
#coercions            actions= 5 time=22 usec 
#evaluate             actions= 4 time=44 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions= 2 time=40 usec 
#aliases              actions= 6 time=23 usec 
#mergetable           actions= 0 time=26 usec 
#deadcode             actions= 3 time=19 usec 
#aliases              actions= 0 time=7 usec 
#constants            actions= 5 time=24 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=32 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=71 time=40 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=2 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=15 usec 
#garbageCollector     actions= 1 time=20 usec 
#total                actions= 1 time=549 usec 
#explain select name,func from functions where not_contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 141 # length
function user.s22_1():void;
    X_56:void := querylog.define("explain select name,func from functions where not_contains(name, \\'optimizers\\');","sequential_pipe",33);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_13 := sql.projectdelta(X_1,X_4,X_7,r1_9,X_10);
    X_75:bat[:bit] := batalgebra.not_like(X_13,"%optimizers%":str);
    X_20 := algebra.subselect(X_75,true,true,true,false,false);
    X_23 := algebra.projection(X_20,X_13);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_30 := sql.projectdelta(X_1,X_24,X_26,r1_28,X_28);
    X_31 := algebra.projection(X_20,X_30);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s22_1;
#inline               actions= 0 time=2 usec 
#candidates           actions= 1 time=20 usec 
#remap                actions= 1 time=65 usec 
#costModel            actions= 1 time=19 usec 
#coercions            actions= 5 time=23 usec 
#evaluate             actions= 4 time=39 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions= 2 time=31 usec 
#aliases              actions= 6 time=22 usec 
#mergetable           actions= 0 time=27 usec 
#deadcode             actions= 3 time=19 usec 
#aliases              actions= 0 time=6 usec 
#constants            actions= 5 time=25 usec 
#commonTerms          actions= 0 time=6 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=33 usec 
#deadcode             actions= 0 time=6 usec 
#reduce               actions=71 time=40 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=17 usec 
#garbageCollector     actions= 1 time=21 usec 
#total                actions= 1 time=499 usec 
#explain select name,func from functions where icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 138 # length
function user.s24_1():void;
    X_56:void := querylog.define("explain select name,func from functions where icontains(name, \\'optimizers\\');","sequential_pipe",33);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_13 := sql.projectdelta(X_1,X_4,X_7,r1_9,X_10);
    X_75:bat[:bit] := batalgebra.ilike(X_13,"%optimizers%":str);
    X_20 := algebra.subselect(X_75,true,true,true,false,false);
    X_23 := algebra.projection(X_20,X_13);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_30 := sql.projectdelta(X_1,X_24,X_26,r1_28,X_28);
    X_31 := algebra.projection(X_20,X_30);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s24_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=19 usec 
#remap                actions= 1 time=72 usec 
#costModel            actions= 1 time=20 usec 
#coercions            actions= 5 time=23 usec 
#evaluate             actions= 4 time=47 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions= 2 time=31 usec 
#aliases              actions= 6 time=23 usec 
#mergetable           actions= 0 time=34 usec 
#deadcode             actions= 3 time=19 usec 
#aliases              actions= 0 time=7 usec 
#constants            actions= 5 time=24 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=32 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=71 time=46 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=1 usec 
#profiler             actions= 1 time=24 usec 
#garbageCollector     actions= 1 time=20 usec 
#total                actions= 1 time=528 usec 
#explain select name,func from functions where not_icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 142 # length
function user.s26_1():void;
    X_56:void := querylog.define("explain select name,func from functions where not_icontains(name, \\'optimizers\\');","sequential_pipe",33);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    (X_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    X_13 := sql.projectdelta(X_1,X_4,X_7,r1_9,X_10);
    X_75:bat[:bit] := batalgebra.not_ilike(X_13,"%optimizers%":str);
    X_20 := algebra.subselect(X_75,true,true,true,false,false);
    X_23 := algebra.projection(X_20,X_13);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (X_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_30 := sql.projectdelta(X_1,X_24,X_26,r1_28,X_28);
    X_31 := algebra.projection(X_20,X_30);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s26_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=18 usec 
#remap                actions= 1 time=74 usec 
#costModel            actions= 1 time=19 usec 
#coercions            actions= 5 time=22 usec 
#evaluate             actions= 4 time=45 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions= 2 time=29 usec 
#aliases              actions= 6 time=21 usec 
#mergetable           actions= 0 time=25 usec 
#deadcode             actions= 3 time=19 usec 
#aliases              actions= 0 time=6 usec 
#constants            actions= 5 time=24 usec 
#commonTerms          actions= 0 time=5 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=37 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=71 time=39 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=0 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=16 usec 
#garbageCollector     actions= 1 time=19 usec 
#total                actions= 1 time=500 usec 
#rollback;

# 13:28:51 >  
# 13:28:51 >  "Done."
# 13:28:51 >  

