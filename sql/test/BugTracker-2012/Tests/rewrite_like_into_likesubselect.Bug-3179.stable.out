stdout of test 'rewrite_like_into_likesubselect.Bug-3179` in directory 'sql/test/BugTracker-2012` itself:


# 13:28:50 >  
# 13:28:50 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=4" "--set" "mapi_open=true" "--set" "mapi_port=31819" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 13:28:50 >  

# MonetDB 5 server v11.14.0
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:31819/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 13:28:50 >  
# 13:28:50 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=niels" "--port=31819"
# 13:28:50 >  

#start transaction;
#explain select name,func from functions where name like '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 136 # length
function user.s4_1():void;
    X_0:void := querylog.define("explain select name,func from functions where name like \\'%optimizers%\\';","sequential_pipe",21:int);
    X_33 := bat.new(nil:str);
    X_39 := bat.new(nil:int);
    X_37 := bat.new(nil:int);
    X_36 := bat.new(nil:str);
    X_35 := bat.new(nil:str);
    X_3 := sql.mvc();
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    C_65 := algebra.likesubselect(X_7,C_4,"%optimizers%","",false);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    C_66 := algebra.likesubselect(r1_12,nil:bat[:oid],"%optimizers%","",false);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    C_68 := algebra.likesubselect(X_13,C_4,"%optimizers%","",false);
    C_20 := sql.subdelta(C_65,C_4,C_10,C_66,C_68);
    X_24:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_26:bat[:oid],r1_28:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_28:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    X_23 := sql.projectdelta(C_20,X_7,C_10,r1_12,X_13);
    X_40 := bat.append(X_33,"sys.functions");
    X_42 := bat.append(X_35,"name");
    X_44 := bat.append(X_36,"varchar");
    X_46 := bat.append(X_37,256:int);
    X_48 := bat.append(X_39,0:int);
    X_50 := bat.append(X_40,"sys.functions");
    X_51 := bat.append(X_42,"func");
    X_52 := bat.append(X_44,"varchar");
    X_53 := bat.append(X_46,8196:int);
    X_55 := bat.append(X_48,0:int);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s4_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=4 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 1 time=10 usec 
#evaluate             actions= 1 time=21 usec 
#emptybind            actions= 0 time=13 usec 
#pushselect           actions= 5 time=44 usec 
#aliases              actions= 3 time=14 usec 
#mergetable           actions= 0 time=66 usec 
#deadcode             actions= 2 time=10 usec 
#aliases              actions= 0 time=9 usec 
#constants            actions= 3 time=14 usec 
#commonTerms          actions= 0 time=9 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=32 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=71 time=40 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=2 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=15 usec 
#garbageCollector     actions= 1 time=20 usec 
#total                actions= 1 time=549 usec 
#explain select name,func from functions where not_contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 140 # length
function user.s6_1():void;
    X_0:void := querylog.define("explain select name,func from functions where name not like \\'%optimizers%\\';","sequential_pipe",21:int);
    X_33 := bat.new(nil:str);
    X_39 := bat.new(nil:int);
    X_37 := bat.new(nil:int);
    X_36 := bat.new(nil:str);
    X_35 := bat.new(nil:str);
    X_3 := sql.mvc();
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    C_65 := algebra.likesubselect(X_7,C_4,"%optimizers%","",true);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    C_66 := algebra.likesubselect(r1_12,nil:bat[:oid],"%optimizers%","",true);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    C_68 := algebra.likesubselect(X_13,C_4,"%optimizers%","",true);
    C_20 := sql.subdelta(C_65,C_4,C_10,C_66,C_68);
    X_24:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_26:bat[:oid],r1_28:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_28:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    X_23 := sql.projectdelta(C_20,X_7,C_10,r1_12,X_13);
    X_40 := bat.append(X_33,"sys.functions");
    X_42 := bat.append(X_35,"name");
    X_44 := bat.append(X_36,"varchar");
    X_46 := bat.append(X_37,256:int);
    X_48 := bat.append(X_39,0:int);
    X_50 := bat.append(X_40,"sys.functions");
    X_51 := bat.append(X_42,"func");
    X_52 := bat.append(X_44,"varchar");
    X_53 := bat.append(X_46,8196:int);
    X_55 := bat.append(X_48,0:int);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s6_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 1 time=10 usec 
#evaluate             actions= 1 time=20 usec 
#emptybind            actions= 0 time=12 usec 
#pushselect           actions= 5 time=39 usec 
#aliases              actions= 3 time=13 usec 
#mergetable           actions= 0 time=49 usec 
#deadcode             actions= 2 time=11 usec 
#aliases              actions= 0 time=9 usec 
#constants            actions= 3 time=14 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=42 usec 
#deadcode             actions= 0 time=9 usec 
#reduce               actions=29 time=14 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=17 usec 
#garbageCollector     actions= 1 time=21 usec 
#total                actions= 1 time=499 usec 
#explain select name,func from functions where icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 137 # length
function user.s8_1():void;
    X_0:void := querylog.define("explain select name,func from functions where name ilike \\'%optimizers%\\';","sequential_pipe",21:int);
    X_33 := bat.new(nil:str);
    X_39 := bat.new(nil:int);
    X_37 := bat.new(nil:int);
    X_36 := bat.new(nil:str);
    X_35 := bat.new(nil:str);
    X_3 := sql.mvc();
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    C_65 := algebra.ilikesubselect(X_7,C_4,"%optimizers%","",false);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    C_66 := algebra.ilikesubselect(r1_12,nil:bat[:oid],"%optimizers%","",false);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    C_68 := algebra.ilikesubselect(X_13,C_4,"%optimizers%","",false);
    C_20 := sql.subdelta(C_65,C_4,C_10,C_66,C_68);
    X_24:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_26:bat[:oid],r1_28:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_28:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    X_23 := sql.projectdelta(C_20,X_7,C_10,r1_12,X_13);
    X_40 := bat.append(X_33,"sys.functions");
    X_42 := bat.append(X_35,"name");
    X_44 := bat.append(X_36,"varchar");
    X_46 := bat.append(X_37,256:int);
    X_48 := bat.append(X_39,0:int);
    X_50 := bat.append(X_40,"sys.functions");
    X_51 := bat.append(X_42,"func");
    X_52 := bat.append(X_44,"varchar");
    X_53 := bat.append(X_46,8196:int);
    X_55 := bat.append(X_48,0:int);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s8_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 1 time=10 usec 
#evaluate             actions= 1 time=20 usec 
#emptybind            actions= 0 time=12 usec 
#pushselect           actions= 5 time=39 usec 
#aliases              actions= 3 time=14 usec 
#mergetable           actions= 0 time=47 usec 
#deadcode             actions= 2 time=11 usec 
#aliases              actions= 0 time=8 usec 
#constants            actions= 3 time=14 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=32 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=71 time=46 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=1 usec 
#profiler             actions= 1 time=24 usec 
#garbageCollector     actions= 1 time=20 usec 
#total                actions= 1 time=528 usec 
#explain select name,func from functions where not_icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 141 # length
function user.s10_1():void;
    X_0:void := querylog.define("explain select name,func from functions where name not ilike \\'%optimizers%\\';","sequential_pipe",21:int);
    X_33 := bat.new(nil:str);
    X_39 := bat.new(nil:int);
    X_37 := bat.new(nil:int);
    X_36 := bat.new(nil:str);
    X_35 := bat.new(nil:str);
    X_3 := sql.mvc();
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    C_65 := algebra.ilikesubselect(X_7,C_4,"%optimizers%","",true);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    C_66 := algebra.ilikesubselect(r1_12,nil:bat[:oid],"%optimizers%","",true);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    C_68 := algebra.ilikesubselect(X_13,C_4,"%optimizers%","",true);
    C_20 := sql.subdelta(C_65,C_4,C_10,C_66,C_68);
    X_24:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_26:bat[:oid],r1_28:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_28:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    X_23 := sql.projectdelta(C_20,X_7,C_10,r1_12,X_13);
    X_40 := bat.append(X_33,"sys.functions");
    X_42 := bat.append(X_35,"name");
    X_44 := bat.append(X_36,"varchar");
    X_46 := bat.append(X_37,256:int);
    X_48 := bat.append(X_39,0:int);
    X_50 := bat.append(X_40,"sys.functions");
    X_51 := bat.append(X_42,"func");
    X_52 := bat.append(X_44,"varchar");
    X_53 := bat.append(X_46,8196:int);
    X_55 := bat.append(X_48,0:int);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s10_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=4 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 1 time=10 usec 
#evaluate             actions= 1 time=19 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions= 5 time=39 usec 
#aliases              actions= 3 time=13 usec 
#mergetable           actions= 0 time=48 usec 
#deadcode             actions= 2 time=11 usec 
#aliases              actions= 0 time=8 usec 
#constants            actions= 3 time=13 usec 
#commonTerms          actions= 0 time=9 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=42 usec 
#deadcode             actions= 0 time=9 usec 
#reduce               actions=29 time=15 usec 
#matpack              actions= 0 time=3 usec 
#querylog             actions= 0 time=0 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=26 usec 
#total                actions= 1 time=457 usec 
#create function contains(str string, substr string)
#returns boolean
#begin
#	  return str like '%'||substr||'%';
#end; 
#create function not_contains(str string, substr string)
#returns boolean
#begin
#	  return str not like '%'||substr||'%';
#end; 
#create function icontains(str string, substr string)
#returns boolean
#begin
#	  return str ilike '%'||substr||'%';
#end; 
#create function not_icontains(str string, substr string)
#returns boolean
#begin
#	  return str not ilike '%'||substr||'%';
#end; 
#explain select name,func from functions where contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 140 # length
function user.s20_1():void;
    X_0:void := querylog.define("explain select name,func from functions where contains(name, \\'optimizers\\');","sequential_pipe",21:int);
    X_35 := bat.new(nil:str);
    X_41 := bat.new(nil:int);
    X_39 := bat.new(nil:int);
    X_38 := bat.new(nil:str);
    X_37 := bat.new(nil:str);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    X_16 := sql.projectdelta(C_4,X_7,C_10,r1_12,X_13);
    X_74:bat[:bit] := batalgebra.like(X_16,"%optimizers%":str);
    C_23 := algebra.subselect(X_74,true,true,true,true,false);
    X_26:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_28:bat[:oid],r1_30:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_30:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_32 := sql.projectdelta(C_4,X_26,C_28,r1_30,X_30);
    X_33 := algebra.projection(C_23,X_32);
    X_25 := algebra.projection(C_23,X_16);
    X_42 := bat.append(X_35,"sys.functions");
    X_44 := bat.append(X_37,"name");
    X_46 := bat.append(X_38,"varchar");
    X_48 := bat.append(X_39,256:int);
    X_50 := bat.append(X_41,0:int);
    X_52 := bat.append(X_42,"sys.functions");
    X_53 := bat.append(X_44,"func");
    X_54 := bat.append(X_46,"varchar");
    X_55 := bat.append(X_48,8196:int);
    X_57 := bat.append(X_50,0:int);
    sql.resultSet(X_52,X_53,X_54,X_55,X_57,X_25,X_33);
end user.s20_1;
#inline               actions= 0 time=12 usec 
#remap                actions= 1 time=100 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 5 time=18 usec 
#evaluate             actions= 4 time=35 usec 
#emptybind            actions= 0 time=16 usec 
#pushselect           actions= 2 time=45 usec 
#aliases              actions= 6 time=16 usec 
#mergetable           actions= 0 time=53 usec 
#deadcode             actions= 3 time=11 usec 
#aliases              actions= 0 time=9 usec 
#constants            actions= 5 time=23 usec 
#commonTerms          actions= 0 time=9 usec 
#projectionpath       actions= 0 time=6 usec 
#reorder              actions= 1 time=42 usec 
#deadcode             actions= 0 time=9 usec 
#reduce               actions=72 time=22 usec 
#matpack              actions= 0 time=4 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=26 usec 
#total                actions= 1 time=621 usec 
#explain select name,func from functions where not_contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 144 # length
function user.s22_1():void;
    X_0:void := querylog.define("explain select name,func from functions where not_contains(name, \\'optimizers\\');","sequential_pipe",21:int);
    X_35 := bat.new(nil:str);
    X_41 := bat.new(nil:int);
    X_39 := bat.new(nil:int);
    X_38 := bat.new(nil:str);
    X_37 := bat.new(nil:str);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    X_16 := sql.projectdelta(C_4,X_7,C_10,r1_12,X_13);
    X_74:bat[:bit] := batalgebra.not_like(X_16,"%optimizers%":str);
    C_23 := algebra.subselect(X_74,true,true,true,true,false);
    X_26:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_28:bat[:oid],r1_30:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_30:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_32 := sql.projectdelta(C_4,X_26,C_28,r1_30,X_30);
    X_33 := algebra.projection(C_23,X_32);
    X_25 := algebra.projection(C_23,X_16);
    X_42 := bat.append(X_35,"sys.functions");
    X_44 := bat.append(X_37,"name");
    X_46 := bat.append(X_38,"varchar");
    X_48 := bat.append(X_39,256:int);
    X_50 := bat.append(X_41,0:int);
    X_52 := bat.append(X_42,"sys.functions");
    X_53 := bat.append(X_44,"func");
    X_54 := bat.append(X_46,"varchar");
    X_55 := bat.append(X_48,8196:int);
    X_57 := bat.append(X_50,0:int);
    sql.resultSet(X_52,X_53,X_54,X_55,X_57,X_25,X_33);
end user.s22_1;
#inline               actions= 0 time=7 usec 
#remap                actions= 1 time=92 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 5 time=18 usec 
#evaluate             actions= 4 time=33 usec 
#emptybind            actions= 0 time=16 usec 
#pushselect           actions= 2 time=34 usec 
#aliases              actions= 6 time=16 usec 
#mergetable           actions= 0 time=51 usec 
#deadcode             actions= 3 time=12 usec 
#aliases              actions= 0 time=9 usec 
#constants            actions= 5 time=23 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=43 usec 
#deadcode             actions= 0 time=10 usec 
#reduce               actions=72 time=22 usec 
#matpack              actions= 0 time=4 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=6 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=27 usec 
#total                actions= 1 time=600 usec 
#explain select name,func from functions where icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 141 # length
function user.s24_1():void;
    X_0:void := querylog.define("explain select name,func from functions where icontains(name, \\'optimizers\\');","sequential_pipe",21:int);
    X_35 := bat.new(nil:str);
    X_41 := bat.new(nil:int);
    X_39 := bat.new(nil:int);
    X_38 := bat.new(nil:str);
    X_37 := bat.new(nil:str);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    X_16 := sql.projectdelta(C_4,X_7,C_10,r1_12,X_13);
    X_74:bat[:bit] := batalgebra.ilike(X_16,"%optimizers%":str);
    C_23 := algebra.subselect(X_74,true,true,true,true,false);
    X_26:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_28:bat[:oid],r1_30:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_30:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_32 := sql.projectdelta(C_4,X_26,C_28,r1_30,X_30);
    X_33 := algebra.projection(C_23,X_32);
    X_25 := algebra.projection(C_23,X_16);
    X_42 := bat.append(X_35,"sys.functions");
    X_44 := bat.append(X_37,"name");
    X_46 := bat.append(X_38,"varchar");
    X_48 := bat.append(X_39,256:int);
    X_50 := bat.append(X_41,0:int);
    X_52 := bat.append(X_42,"sys.functions");
    X_53 := bat.append(X_44,"func");
    X_54 := bat.append(X_46,"varchar");
    X_55 := bat.append(X_48,8196:int);
    X_57 := bat.append(X_50,0:int);
    sql.resultSet(X_52,X_53,X_54,X_55,X_57,X_25,X_33);
end user.s24_1;
#inline               actions= 0 time=7 usec 
#remap                actions= 1 time=91 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 5 time=18 usec 
#evaluate             actions= 4 time=33 usec 
#emptybind            actions= 0 time=16 usec 
#pushselect           actions= 2 time=33 usec 
#aliases              actions= 6 time=16 usec 
#mergetable           actions= 0 time=50 usec 
#deadcode             actions= 3 time=11 usec 
#aliases              actions= 0 time=9 usec 
#constants            actions= 5 time=22 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=6 usec 
#reorder              actions= 1 time=49 usec 
#deadcode             actions= 0 time=9 usec 
#reduce               actions=72 time=22 usec 
#matpack              actions= 0 time=4 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=26 usec 
#total                actions= 1 time=587 usec 
#explain select name,func from functions where not_icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 145 # length
function user.s26_1():void;
    X_0:void := querylog.define("explain select name,func from functions where not_icontains(name, \\'optimizers\\');","sequential_pipe",21:int);
    X_35 := bat.new(nil:str);
    X_41 := bat.new(nil:int);
    X_39 := bat.new(nil:int);
    X_38 := bat.new(nil:str);
    X_37 := bat.new(nil:str);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","functions");
    X_7:bat[:str] := sql.bind(X_3,"sys","functions","name",0:int);
    (C_10:bat[:oid],r1_12:bat[:str]) := sql.bind(X_3,"sys","functions","name",2:int);
    X_13:bat[:str] := sql.bind(X_3,"sys","functions","name",1:int);
    X_16 := sql.projectdelta(C_4,X_7,C_10,r1_12,X_13);
    X_74:bat[:bit] := batalgebra.not_ilike(X_16,"%optimizers%":str);
    C_23 := algebra.subselect(X_74,true,true,true,true,false);
    X_26:bat[:str] := sql.bind(X_3,"sys","functions","func",0:int);
    (C_28:bat[:oid],r1_30:bat[:str]) := sql.bind(X_3,"sys","functions","func",2:int);
    X_30:bat[:str] := sql.bind(X_3,"sys","functions","func",1:int);
    X_32 := sql.projectdelta(C_4,X_26,C_28,r1_30,X_30);
    X_33 := algebra.projection(C_23,X_32);
    X_25 := algebra.projection(C_23,X_16);
    X_42 := bat.append(X_35,"sys.functions");
    X_44 := bat.append(X_37,"name");
    X_46 := bat.append(X_38,"varchar");
    X_48 := bat.append(X_39,256:int);
    X_50 := bat.append(X_41,0:int);
    X_52 := bat.append(X_42,"sys.functions");
    X_53 := bat.append(X_44,"func");
    X_54 := bat.append(X_46,"varchar");
    X_55 := bat.append(X_48,8196:int);
    X_57 := bat.append(X_50,0:int);
    sql.resultSet(X_52,X_53,X_54,X_55,X_57,X_25,X_33);
end user.s26_1;
#inline               actions= 0 time=7 usec 
#remap                actions= 1 time=117 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 5 time=19 usec 
#evaluate             actions= 4 time=35 usec 
#emptybind            actions= 0 time=17 usec 
#pushselect           actions= 2 time=34 usec 
#aliases              actions= 6 time=17 usec 
#mergetable           actions= 0 time=54 usec 
#deadcode             actions= 3 time=12 usec 
#aliases              actions= 0 time=10 usec 
#constants            actions= 5 time=23 usec 
#commonTerms          actions= 0 time=9 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=44 usec 
#deadcode             actions= 0 time=9 usec 
#reduce               actions=72 time=22 usec 
#matpack              actions= 0 time=11 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=27 usec 
#total                actions= 1 time=639 usec 
#rollback;

# 13:28:51 >  
# 13:28:51 >  "Done."
# 13:28:51 >  

