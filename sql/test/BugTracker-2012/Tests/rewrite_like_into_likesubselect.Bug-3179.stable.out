stdout of test 'rewrite_like_into_likesubselect.Bug-3179` in directory 'sql/test/BugTracker-2012` itself:


# 13:28:50 >  
# 13:28:50 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=4" "--set" "mapi_open=true" "--set" "mapi_port=31819" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 13:28:50 >  

# MonetDB 5 server v11.14.0
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:31819/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 13:28:50 >  
# 13:28:50 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=niels" "--port=31819"
# 13:28:50 >  

#start transaction;
#explain select name,func from functions where name like '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 133 # length
function user.s2_1(A0:str):void;
    X_53:void := querylog.define("explain select name,func from functions where name like \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    C_64 := algebra.likesubselect(X_4,C_1,A0,"",false);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_65 := algebra.likesubselect(r1_9,nil:bat[:oid],A0,"",false);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_67 := algebra.likesubselect(X_10,C_1,A0,"",false);
    C_17 := sql.subdelta(C_64,C_1,C_7,C_65,C_67);
    X_20 := sql.projectdelta(C_17,X_4,C_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(C_17,X_21,C_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s2_1;
#explain select name,func from functions where name not like '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 137 # length
function user.s3_1(A0:str):void;
    X_53:void := querylog.define("explain select name,func from functions where name not like \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    C_64 := algebra.likesubselect(X_4,C_1,A0,"",true);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_65 := algebra.likesubselect(r1_9,nil:bat[:oid],A0,"",true);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_67 := algebra.likesubselect(X_10,C_1,A0,"",true);
    C_17 := sql.subdelta(C_64,C_1,C_7,C_65,C_67);
    X_20 := sql.projectdelta(C_17,X_4,C_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(C_17,X_21,C_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s3_1;
#explain select name,func from functions where name ilike '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 134 # length
function user.s4_1(A0:str):void;
    X_53:void := querylog.define("explain select name,func from functions where name ilike \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    C_64 := algebra.ilikesubselect(X_4,C_1,A0,"",false);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_65 := algebra.ilikesubselect(r1_9,nil:bat[:oid],A0,"",false);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_67 := algebra.ilikesubselect(X_10,C_1,A0,"",false);
    C_17 := sql.subdelta(C_64,C_1,C_7,C_65,C_67);
    X_20 := sql.projectdelta(C_17,X_4,C_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(C_17,X_21,C_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s4_1;
#explain select name,func from functions where name not ilike '%optimizers%';
% .explain # table_name
% mal # name
% clob # type
% 138 # length
function user.s5_1(A0:str):void;
    X_53:void := querylog.define("explain select name,func from functions where name not ilike \\'%optimizers%\\';","sequential_pipe",33);
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"sys.functions");
    X_47 := bat.append(X_37,"sys.functions");
    X_32 := bat.new(nil:str);
    X_39 := bat.append(X_32,"name");
    X_48 := bat.append(X_39,"func");
    X_33 := bat.new(nil:str);
    X_41 := bat.append(X_33,"varchar");
    X_49 := bat.append(X_41,"varchar");
    X_34 := bat.new(nil:int);
    X_43 := bat.append(X_34,256);
    X_50 := bat.append(X_43,8196);
    X_36 := bat.new(nil:int);
    X_45 := bat.append(X_36,0);
    X_52 := bat.append(X_45,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    C_64 := algebra.ilikesubselect(X_4,C_1,A0,"",true);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_65 := algebra.ilikesubselect(r1_9,nil:bat[:oid],A0,"",true);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_67 := algebra.ilikesubselect(X_10,C_1,A0,"",true);
    C_17 := sql.subdelta(C_64,C_1,C_7,C_65,C_67);
    X_20 := sql.projectdelta(C_17,X_4,C_7,r1_9,X_10);
    X_21:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_23,r1_25) := sql.bind(X_0,"sys","functions","func",2);
    X_25:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_28 := sql.projectdelta(C_17,X_21,C_23,r1_25,X_25);
    sql.resultSet(X_47,X_48,X_49,X_50,X_52,X_20,X_28);
end user.s5_1;
#create function contains(str string, substr string)
#returns boolean
#begin
#	  return str like '%'||substr||'%';
#end; 
#create function not_contains(str string, substr string)
#returns boolean
#begin
#	  return str not like '%'||substr||'%';
#end; 
#create function icontains(str string, substr string)
#returns boolean
#begin
#	  return str ilike '%'||substr||'%';
#end; 
#create function not_icontains(str string, substr string)
#returns boolean
#begin
#	  return str not ilike '%'||substr||'%';
#end; 
#explain select name,func from functions where contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 137 # length
function user.s10_1(A0:str):void;
    X_56:void := querylog.define("explain select name,func from functions where contains(name, \\'optimizers\\');","sequential_pipe",35);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_72:str := calc.+("%",A0);
    X_74:str := calc.+(X_72,"%");
    C_110 := algebra.likesubselect(X_4,C_1,X_74,"",false,false);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_111 := algebra.likesubselect(r1_9,nil:bat[:oid],X_74,"",false,false);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_113 := algebra.likesubselect(X_10,C_1,X_74,"",false,false);
    C_20 := sql.subdelta(C_110,C_1,C_7,C_111,C_113);
    X_23 := sql.projectdelta(C_20,X_4,C_7,r1_9,X_10);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s10_1;
#explain select name,func from functions where not_contains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 141 # length
function user.s11_1(A0:str):void;
    X_56:void := querylog.define("explain select name,func from functions where not_contains(name, \\'optimizers\\');","sequential_pipe",35);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_72:str := calc.+("%",A0);
    X_74:str := calc.+(X_72,"%");
    C_110 := algebra.likesubselect(X_4,C_1,X_74,"",false,true);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_111 := algebra.likesubselect(r1_9,nil:bat[:oid],X_74,"",false,true);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_113 := algebra.likesubselect(X_10,C_1,X_74,"",false,true);
    C_20 := sql.subdelta(C_110,C_1,C_7,C_111,C_113);
    X_23 := sql.projectdelta(C_20,X_4,C_7,r1_9,X_10);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s11_1;
#explain select name,func from functions where icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 138 # length
function user.s12_1(A0:str):void;
    X_56:void := querylog.define("explain select name,func from functions where icontains(name, \\'optimizers\\');","sequential_pipe",35);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_72:str := calc.+("%",A0);
    X_74:str := calc.+(X_72,"%");
    C_110 := algebra.likesubselect(X_4,C_1,X_74,"",true,false);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_111 := algebra.likesubselect(r1_9,nil:bat[:oid],X_74,"",true,false);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_113 := algebra.likesubselect(X_10,C_1,X_74,"",true,false);
    C_20 := sql.subdelta(C_110,C_1,C_7,C_111,C_113);
    X_23 := sql.projectdelta(C_20,X_4,C_7,r1_9,X_10);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s12_1;
#explain select name,func from functions where not_icontains(name, 'optimizers');
% .explain # table_name
% mal # name
% clob # type
% 142 # length
function user.s13_1(A0:str):void;
    X_56:void := querylog.define("explain select name,func from functions where not_icontains(name, \\'optimizers\\');","sequential_pipe",35);
    X_33 := bat.new(nil:str);
    X_40 := bat.append(X_33,"sys.functions");
    X_50 := bat.append(X_40,"sys.functions");
    X_35 := bat.new(nil:str);
    X_42 := bat.append(X_35,"name");
    X_51 := bat.append(X_42,"func");
    X_36 := bat.new(nil:str);
    X_44 := bat.append(X_36,"varchar");
    X_52 := bat.append(X_44,"varchar");
    X_37 := bat.new(nil:int);
    X_46 := bat.append(X_37,256);
    X_53 := bat.append(X_46,8196);
    X_39 := bat.new(nil:int);
    X_48 := bat.append(X_39,0);
    X_55 := bat.append(X_48,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","functions","name",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","functions");
    X_72:str := calc.+("%",A0);
    X_74:str := calc.+(X_72,"%");
    C_110 := algebra.likesubselect(X_4,C_1,X_74,"",true,true);
    (C_7,r1_9) := sql.bind(X_0,"sys","functions","name",2);
    C_111 := algebra.likesubselect(r1_9,nil:bat[:oid],X_74,"",true,true);
    X_10:bat[:str] := sql.bind(X_0,"sys","functions","name",1);
    C_113 := algebra.likesubselect(X_10,C_1,X_74,"",true,true);
    C_20 := sql.subdelta(C_110,C_1,C_7,C_111,C_113);
    X_23 := sql.projectdelta(C_20,X_4,C_7,r1_9,X_10);
    X_24:bat[:str] := sql.bind(X_0,"sys","functions","func",0);
    (C_26,r1_28) := sql.bind(X_0,"sys","functions","func",2);
    X_28:bat[:str] := sql.bind(X_0,"sys","functions","func",1);
    X_31 := sql.projectdelta(C_20,X_24,C_26,r1_28,X_28);
    sql.resultSet(X_50,X_51,X_52,X_53,X_55,X_23,X_31);
end user.s13_1;
#rollback;

# 13:28:51 >  
# 13:28:51 >  "Done."
# 13:28:51 >  

