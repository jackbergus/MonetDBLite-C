stdout of test 'systemfunctions` in directory 'sql/test` itself:


# 16:20:24 >  
# 16:20:24 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=36066" "--set" "mapi_usock=/var/tmp/mtest-26153/.s.monetdb.36066" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-candidate/var/MonetDB/mTests_sql_test" "--set" "mal_listing=0"
# 16:20:24 >  

# MonetDB 5 server v11.17.0 (hg id: d91089635868)
# This is an unreleased version
# Serving database 'mTests_sql_test', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:36066/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-26153/.s.monetdb.36066
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 16:20:25 >  
# 16:20:25 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-26153" "--port=36066"
# 16:20:25 >  

#select s.name as "schema", f.name as "function", a.number as "argno", a.type as "argtype", case a.number when 0 then f.func else '' end as "definition" from sys.functions f, sys.schemas s, sys.args a where s.id = f.schema_id and f.id = a.func_id and f.id in (select * from sys.systemfunctions) order by s.name, f.name, f.id, a.number;
% sys.L3,	sys.L3,	sys.L3,	sys.L3,	sys.L3 # table_name
% schema,	function,	argno,	argtype,	definition # name
% varchar,	varchar,	int,	varchar,	varchar # type
% 8,	35,	2,	12,	2951 # length
[ "bam",	"bam_drop_file",	0,	"bigint",	"create procedure bam.bam_drop_file(file_id bigint, dbschema smallint)\nexternal name bam.bam_drop_file;"	]
[ "bam",	"bam_drop_file",	1,	"smallint",	""	]
[ "bam",	"bam_export",	0,	"clob",	"create procedure bam.bam_export(output_path string)\nexternal name bam.bam_export;"	]
[ "bam",	"bam_flag",	0,	"boolean",	"create function bam.bam_flag(flag smallint, name string)\nreturns boolean external name bam.bam_flag;"	]
[ "bam",	"bam_flag",	1,	"smallint",	""	]
[ "bam",	"bam_flag",	2,	"clob",	""	]
[ "bam",	"bam_loader_file",	0,	"clob",	"create procedure bam.bam_loader_file(bam_file string, dbschema smallint)\nexternal name bam.bam_loader_file;"	]
[ "bam",	"bam_loader_file",	1,	"smallint",	""	]
[ "bam",	"bam_loader_files",	0,	"clob",	"create procedure bam.bam_loader_files(bam_files string, dbschema smallint)\nexternal name bam.bam_loader_files;"	]
[ "bam",	"bam_loader_files",	1,	"smallint",	""	]
[ "bam",	"bam_loader_repos",	0,	"clob",	"create procedure bam.bam_loader_repos(bam_repos string, dbschema smallint)\nexternal name bam.bam_loader_repos;"	]
[ "bam",	"bam_loader_repos",	1,	"smallint",	""	]
[ "bam",	"reverse_qual",	0,	"clob",	"create function bam.reverse_qual(qual string)\nreturns string external name bam.reverse_qual;"	]
[ "bam",	"reverse_qual",	1,	"clob",	""	]
[ "bam",	"reverse_seq",	0,	"clob",	"create function bam.reverse_seq(seq string)\nreturns string external name bam.reverse_seq;"	]
[ "bam",	"reverse_seq",	1,	"clob",	""	]
[ "bam",	"sam_export",	0,	"clob",	"create procedure bam.sam_export(output_path string)\nexternal name bam.sam_export;"	]
[ "bam",	"seq_char",	0,	"char",	"create function bam.seq_char(ref_pos int, alg_seq string, alg_pos int, alg_cigar string)\nreturns char(1) external name bam.seq_char;"	]
[ "bam",	"seq_char",	1,	"int",	""	]
[ "bam",	"seq_char",	2,	"clob",	""	]
[ "bam",	"seq_char",	3,	"int",	""	]
[ "bam",	"seq_char",	4,	"clob",	""	]
[ "bam",	"seq_length",	0,	"int",	"create function bam.seq_length(cigar string)\nreturns int external name bam.seq_length;"	]
[ "bam",	"seq_length",	1,	"clob",	""	]
[ "json",	"filter",	0,	"json",	"-- access the top level key by name, return its value\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;"	]
[ "json",	"filter",	1,	"json",	""	]
[ "json",	"filter",	2,	"clob",	""	]
[ "json",	"filter",	0,	"json",	"create function json.filter(js json, name tinyint)\nreturns json external name json.filter;"	]
[ "json",	"filter",	1,	"json",	""	]
[ "json",	"filter",	2,	"tinyint",	""	]
[ "json",	"filter",	0,	"json",	"create function json.filter(js json, name integer)\nreturns json external name json.filter;"	]
[ "json",	"filter",	1,	"json",	""	]
[ "json",	"filter",	2,	"int",	""	]
[ "json",	"filter",	0,	"json",	"create function json.filter(js json, name bigint)\nreturns json external name json.filter;"	]
[ "json",	"filter",	1,	"json",	""	]
[ "json",	"filter",	2,	"bigint",	""	]
[ "json",	"integer",	0,	"bigint",	"create function json.\"integer\"(js json)\nreturns bigint external name json.\"integer\";"	]
[ "json",	"integer",	1,	"json",	""	]
[ "json",	"isarray",	0,	"boolean",	"create function json.isarray(js string)\nreturns bool external name json.isarray;"	]
[ "json",	"isarray",	1,	"clob",	""	]
[ "json",	"isarray",	0,	"boolean",	"create function json.isarray(js json)\nreturns bool external name json.isarray;"	]
[ "json",	"isarray",	1,	"json",	""	]
[ "json",	"isobject",	0,	"boolean",	"create function json.isobject(js string)\nreturns bool external name json.isobject;"	]
[ "json",	"isobject",	1,	"clob",	""	]
[ "json",	"isobject",	0,	"boolean",	"create function json.isobject(js json)\nreturns bool external name json.isobject;"	]
[ "json",	"isobject",	1,	"json",	""	]
[ "json",	"isvalid",	0,	"boolean",	"-- test string for JSON compliancy\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;"	]
[ "json",	"isvalid",	1,	"clob",	""	]
[ "json",	"isvalid",	0,	"boolean",	"create function json.isvalid(js json)\nreturns bool external name json.isvalid;"	]
[ "json",	"isvalid",	1,	"json",	""	]
[ "json",	"keyarray",	0,	"json",	"create function json.keyarray(js json)\nreturns json external name json.keyarray;"	]
[ "json",	"keyarray",	1,	"json",	""	]
[ "json",	"length",	0,	"int",	"-- return the number of primary components\ncreate function json.length(js json)\nreturns integer external name json.length;"	]
[ "json",	"length",	1,	"json",	""	]
[ "json",	"number",	0,	"double",	"create function json.number(js json)\nreturns float external name json.number;"	]
[ "json",	"number",	1,	"json",	""	]
[ "json",	"output",	0,	"clob",	"-- The remainder awaits the implementation\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;"	]
[ "json",	"output",	1,	"json",	""	]
[ "json",	"text",	0,	"clob",	"create function json.text(js json, e string)\nreturns string external name json.text;"	]
[ "json",	"text",	1,	"json",	""	]
[ "json",	"text",	2,	"clob",	""	]
[ "json",	"text",	0,	"clob",	"create function json.text(js json)\nreturns string external name json.text;"	]
[ "json",	"text",	1,	"json",	""	]
[ "json",	"text",	0,	"clob",	"create function json.text(js string)\nreturns string external name json.text;"	]
[ "json",	"text",	1,	"clob",	""	]
[ "json",	"text",	0,	"clob",	"create function json.text(js int)\nreturns string external name json.text;"	]
[ "json",	"text",	1,	"int",	""	]
[ "json",	"tojsonarray",	0,	"clob",	"-- create function json.object(*) returns json external name json.objectrender;\n\n-- create function json.array(*) returns json external name json.arrayrender;\n\n-- unnesting the JSON structure\n\n-- create function json.unnest(js json)\n-- returns table( id integer, k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( k string, v string) external name json.unnest;\n\n-- create function json.unnest(js json)\n-- returns table( v string) external name json.unnest;\n\n-- create function json.nest table( id integer, k string, v string)\n-- returns json external name json.nest;\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;"	]
[ "json",	"tojsonarray",	1,	"clob",	""	]
[ "json",	"tojsonarray",	0,	"clob",	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;"	]
[ "json",	"tojsonarray",	1,	"double",	""	]
[ "json",	"valuearray",	0,	"json",	"create function json.valuearray(js json)\nreturns  json external name json.valuearray;"	]
[ "json",	"valuearray",	1,	"json",	""	]
[ "profiler",	"setheartbeat",	0,	"int",	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;"	]
[ "profiler",	"setpoolsize",	0,	"int",	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;"	]
[ "profiler",	"setstream",	0,	"clob",	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;"	]
[ "profiler",	"setstream",	1,	"int",	""	]
[ "sys",	"abbrev",	0,	"clob",	"create function \"abbrev\" (p inet) returns clob\n\texternal name inet.\"abbrev\";"	]
[ "sys",	"abbrev",	1,	"inet",	""	]
[ "sys",	"alpha",	0,	"double",	"create function alpha(pdec double, pradius double)\nreturns double external name sql.alpha;"	]
[ "sys",	"alpha",	1,	"double",	""	]
[ "sys",	"alpha",	2,	"double",	""	]
[ "sys",	"analyze",	0,	"int",	"create procedure sys.analyze(minmax int, \"sample\" bigint)\nexternal name sql.analyze;"	]
[ "sys",	"analyze",	1,	"bigint",	""	]
[ "sys",	"analyze",	0,	"int",	"create procedure sys.analyze(minmax int, \"sample\" bigint, sch string)\nexternal name sql.analyze;"	]
[ "sys",	"analyze",	1,	"bigint",	""	]
[ "sys",	"analyze",	2,	"clob",	""	]
[ "sys",	"analyze",	0,	"int",	"create procedure sys.analyze(minmax int, \"sample\" bigint, sch string, tbl string)\nexternal name sql.analyze;"	]
[ "sys",	"analyze",	1,	"bigint",	""	]
[ "sys",	"analyze",	2,	"clob",	""	]
[ "sys",	"analyze",	3,	"clob",	""	]
[ "sys",	"analyze",	0,	"int",	"create procedure sys.analyze(minmax int, \"sample\" bigint, sch string, tbl string, col string)\nexternal name sql.analyze;"	]
[ "sys",	"analyze",	1,	"bigint",	""	]
[ "sys",	"analyze",	2,	"clob",	""	]
[ "sys",	"analyze",	3,	"clob",	""	]
[ "sys",	"analyze",	4,	"clob",	""	]
[ "sys",	"bbp",	0,	"int",	"-- The BAT buffer pool overview\ncreate function sys.bbp ()\n\treturns table (id int, name string, \n\t\tttype string, count bigint, refcnt int, lrefcnt int,\n\t\tlocation string, heat int, dirty string,\n\t\tstatus string, kind string)\n\texternal name bbp.get;"	]
[ "sys",	"bbp",	1,	"clob",	""	]
[ "sys",	"bbp",	2,	"clob",	""	]
[ "sys",	"bbp",	3,	"bigint",	""	]
[ "sys",	"bbp",	4,	"int",	""	]
[ "sys",	"bbp",	5,	"int",	""	]
[ "sys",	"bbp",	6,	"clob",	""	]
[ "sys",	"bbp",	7,	"int",	""	]
[ "sys",	"bbp",	8,	"clob",	""	]
[ "sys",	"bbp",	9,	"clob",	""	]
[ "sys",	"bbp",	10,	"clob",	""	]
[ "sys",	"broadcast",	0,	"inet",	"create function \"broadcast\" (p inet) returns inet\n\texternal name inet.\"broadcast\";"	]
[ "sys",	"broadcast",	1,	"inet",	""	]
[ "sys",	"chi2prob",	0,	"double",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke, Bart Scheers\n-- Use statistical functions from gsl library\n\n-- Calculate Chi squared probability\ncreate function sys.chi2prob(chi2 double, datapoints double)\nreturns double external name gsl.\"chi2prob\";"	]
[ "sys",	"chi2prob",	1,	"double",	""	]
[ "sys",	"chi2prob",	2,	"double",	""	]
[ "sys",	"columnsize",	0,	"bigint",	"-- The predicted storage footprint of the complete database\n-- determines the amount of diskspace needed for persistent storage\n-- and the upperbound when all possible index structures are created.\n-- The storage requirement for foreign key joins is split amongst the participants.\n\ncreate function sys.columnsize(nme string, i bigint, d bigint)\nreturns bigint\nbegin\n\tcase\n\twhen nme = 'boolean' then return i;\n\twhen nme = 'char' then return 2*i;\n\twhen nme = 'smallint' then return 2 * i;\n\twhen nme = 'int' then return 4 * i;\n\twhen nme = 'bigint' then return 8 * i;\n\twhen nme = 'hugeint' then return 16 * i;\n\twhen nme = 'timestamp' then return 8 * i;\n\twhen  nme = 'varchar' then\n\t\tcase\n\t\twhen cast(d as bigint) << 8 then return i;\n\t\twhen cast(d as bigint) << 16 then return 2 * i;\n\t\twhen cast(d as bigint) << 32 then return 4 * i;\n\t\telse return 8 * i;\n\t\tend case;\n\telse return 8 * i;\n\tend case;\nend;"	]
[ "sys",	"columnsize",	1,	"clob",	""	]
[ "sys",	"columnsize",	2,	"bigint",	""	]
[ "sys",	"columnsize",	3,	"bigint",	""	]
[ "sys",	"contains",	0,	"boolean",	"--CREATE FUNCTION ST_DumpRings RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_FlipCoordinates RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersection(geog1 Geography, geog2 Geography) RETURNS Geography EXTERNAL NAME geom.\"Intersection\";\n--CREATE FUNCTION ST_LineToCurve RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MakeValid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MemUnion RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MinimumBoundingCircle RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Polygonize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Node RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OffsetCurve RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemoveRepeatedPoints RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SharedPaths RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Shift_Longitude RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Simplify RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SimplifyPreserveTopology RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Split RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Union(geometry set geoms)?????\n--CREATE FUNCTION ST_UnaryUnion RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n-------------------------- Linear Referencing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_LineInterpolatePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineLocatePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineSubstring RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LocateAlong RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LocateBetween RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LocateBetweenElevations RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_InterpolatePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AddMeasure RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n---------------------- Long Transactions Support ------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n----------------------- Miscellaneous Functions -------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n------------------------ Exceptional Functions --------------------------\n-------------------------------------------------------------------------\n\n\n-- CREATE FUNCTION Point(g Geometry) RETURNS Point external name geom.point;\n-- CREATE FUNCTION Curve(g Geometry) RETURNS Curve external name geom.curve;\n-- CREATE FUNCTION LineString(g Geometry) RETURNS LineString external name geom.linestring;\n-- CREATE FUNCTION Surface(g Geometry) RETURNS Surface external name geom.surface;\n-- CREATE FUNCTION Polygon(g Geometry) RETURNS Polygon external name geom.polygon;\n\ncreate function contains(a geometry, x double, y double) returns boolean external name geom.\"Contains\";"	]
[ "sys",	"contains",	1,	"geometry",	""	]
[ "sys",	"contains",	2,	"double",	""	]
[ "sys",	"contains",	3,	"double",	""	]
[ "sys",	"corr",	0,	"tinyint",	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"tinyint",	""	]
[ "sys",	"corr",	2,	"tinyint",	""	]
[ "sys",	"corr",	0,	"smallint",	"create aggregate corr(e1 smallint, e2 smallint) returns smallint\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"smallint",	""	]
[ "sys",	"corr",	2,	"smallint",	""	]
[ "sys",	"corr",	0,	"int",	"create aggregate corr(e1 integer, e2 integer) returns integer\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"int",	""	]
[ "sys",	"corr",	2,	"int",	""	]
[ "sys",	"corr",	0,	"wrd",	"create aggregate corr(e1 wrd, e2 wrd) returns wrd\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"wrd",	""	]
[ "sys",	"corr",	2,	"wrd",	""	]
[ "sys",	"corr",	0,	"bigint",	"create aggregate corr(e1 bigint, e2 bigint) returns bigint\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"bigint",	""	]
[ "sys",	"corr",	2,	"bigint",	""	]
[ "sys",	"corr",	0,	"real",	"create aggregate corr(e1 real, e2 real) returns real\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"real",	""	]
[ "sys",	"corr",	2,	"real",	""	]
[ "sys",	"corr",	0,	"double",	"create aggregate corr(e1 double, e2 double) returns double\n\texternal name \"aggr\".\"corr\";"	]
[ "sys",	"corr",	1,	"double",	""	]
[ "sys",	"corr",	2,	"double",	""	]
[ "sys",	"date_to_str",	0,	"clob",	"create function date_to_str(d date, format string) returns string\n\texternal name mtime.\"date_to_str\";"	]
[ "sys",	"date_to_str",	1,	"date",	""	]
[ "sys",	"date_to_str",	2,	"clob",	""	]
[ "sys",	"db_users",	0,	"varchar",	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;"	]
[ "sys",	"debug",	0,	"int",	"create function sys.debug(debug int) returns integer\n\texternal name mdb.\"setDebug\";"	]
[ "sys",	"debug",	1,	"int",	""	]
[ "sys",	"degrees",	0,	"double",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function degrees(r double)\nreturns double\n\treturn r*180/pi();"	]
[ "sys",	"degrees",	1,	"double",	""	]
[ "sys",	"dependencies_columns_on_functions",	0,	"varchar",	"--Column c has a dependency on function f\ncreate function dependencies_columns_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);"	]
[ "sys",	"dependencies_columns_on_functions",	1,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_functions",	2,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_indexes",	0,	"varchar",	"--Column c has a dependency on index i\ncreate function dependencies_columns_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.\"name\" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));"	]
[ "sys",	"dependencies_columns_on_indexes",	1,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_indexes",	2,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_keys",	0,	"varchar",	"--Column c has a dependency on key k\ncreate function dependencies_columns_on_keys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.\"name\" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);"	]
[ "sys",	"dependencies_columns_on_keys",	1,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_keys",	2,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_triggers",	0,	"varchar",	"--Column c has a dependency on trigger tri\ncreate function dependencies_columns_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);"	]
[ "sys",	"dependencies_columns_on_triggers",	1,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_triggers",	2,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_views",	0,	"varchar",	"--Column c has a dependency on view v\ncreate function dependencies_columns_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	]
[ "sys",	"dependencies_columns_on_views",	1,	"varchar",	""	]
[ "sys",	"dependencies_columns_on_views",	2,	"varchar",	""	]
[ "sys",	"dependencies_functions_on_functions",	0,	"varchar",	"--Function f1 has a dependency on function f2\ncreate function dependencies_functions_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);"	]
[ "sys",	"dependencies_functions_on_functions",	1,	"varchar",	""	]
[ "sys",	"dependencies_functions_on_functions",	2,	"varchar",	""	]
[ "sys",	"dependencies_functions_os_triggers",	0,	"varchar",	"--Function f1 has a dependency on trigger tri\ncreate function dependencies_functions_os_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);"	]
[ "sys",	"dependencies_functions_os_triggers",	1,	"varchar",	""	]
[ "sys",	"dependencies_functions_os_triggers",	2,	"varchar",	""	]
[ "sys",	"dependencies_keys_on_foreignkeys",	0,	"varchar",	"--Key k has a dependency on foreign key fk\ncreate function dependencies_keys_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);"	]
[ "sys",	"dependencies_keys_on_foreignkeys",	1,	"varchar",	""	]
[ "sys",	"dependencies_keys_on_foreignkeys",	2,	"varchar",	""	]
[ "sys",	"dependencies_owners_on_schemas",	0,	"varchar",	"--User (owner) has a dependency in schema s\ncreate function dependencies_owners_on_schemas()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);"	]
[ "sys",	"dependencies_owners_on_schemas",	1,	"varchar",	""	]
[ "sys",	"dependencies_owners_on_schemas",	2,	"varchar",	""	]
[ "sys",	"dependencies_schemas_on_users",	0,	"varchar",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n--Schema s has a dependency on user u\ncreate function dependencies_schemas_on_users()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);"	]
[ "sys",	"dependencies_schemas_on_users",	1,	"varchar",	""	]
[ "sys",	"dependencies_schemas_on_users",	2,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_foreignkeys",	0,	"varchar",	"--Table t has a dependency on foreign key k\ncreate function dependencies_tables_on_foreignkeys()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);"	]
[ "sys",	"dependencies_tables_on_foreignkeys",	1,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_foreignkeys",	2,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_functions",	0,	"varchar",	"--Table t has a dependency on function f\ncreate function dependencies_tables_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);"	]
[ "sys",	"dependencies_tables_on_functions",	1,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_functions",	2,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_indexes",	0,	"varchar",	"--Table t has a dependency on index  i\ncreate function dependencies_tables_on_indexes()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);"	]
[ "sys",	"dependencies_tables_on_indexes",	1,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_indexes",	2,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_triggers",	0,	"varchar",	"--Table t has a dependency on trigger tri\n\ncreate function dependencies_tables_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));"	]
[ "sys",	"dependencies_tables_on_triggers",	1,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_triggers",	2,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_views",	0,	"varchar",	"--Table t has a dependency on view v\ncreate function dependencies_tables_on_views()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);"	]
[ "sys",	"dependencies_tables_on_views",	1,	"varchar",	""	]
[ "sys",	"dependencies_tables_on_views",	2,	"varchar",	""	]
[ "sys",	"dependencies_views_on_functions",	0,	"varchar",	"--View v has a dependency on function f\ncreate function dependencies_views_on_functions()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);"	]
[ "sys",	"dependencies_views_on_functions",	1,	"varchar",	""	]
[ "sys",	"dependencies_views_on_functions",	2,	"varchar",	""	]
[ "sys",	"dependencies_views_on_triggers",	0,	"varchar",	"--View v has a dependency on trigger tri\ncreate function dependencies_views_on_triggers()\nreturns table (sch varchar(100), usr varchar(100), dep_type varchar(32))\nreturn table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);"	]
[ "sys",	"dependencies_views_on_triggers",	1,	"varchar",	""	]
[ "sys",	"dependencies_views_on_triggers",	2,	"varchar",	""	]
[ "sys",	"env",	0,	"varchar",	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;"	]
[ "sys",	"env",	1,	"varchar",	""	]
[ "sys",	"environment",	0,	"clob",	"-- The environment table\ncreate function sys.environment()\n\treturns table (\"name\" string, value string)\n\texternal name sql.sql_environment;"	]
[ "sys",	"environment",	1,	"clob",	""	]
[ "sys",	"epoch",	0,	"timestamp",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- assume milliseconds when converted to TIMESTAMP\ncreate function sys.\"epoch\"(sec bigint) returns timestamp\n\texternal name timestamp.\"epoch\";"	]
[ "sys",	"epoch",	1,	"bigint",	""	]
[ "sys",	"epoch",	0,	"timestamp",	"create function sys.\"epoch\"(sec int) returns timestamp\n\texternal name timestamp.\"epoch\";"	]
[ "sys",	"epoch",	1,	"int",	""	]
[ "sys",	"epoch",	0,	"int",	"create function sys.\"epoch\"(ts timestamp) returns int\n\texternal name timestamp.\"epoch\";"	]
[ "sys",	"epoch",	1,	"timestamp",	""	]
[ "sys",	"epoch",	0,	"int",	"create function sys.\"epoch\"(ts timestamp with time zone) returns int\n\texternal name timestamp.\"epoch\";"	]
[ "sys",	"epoch",	1,	"timestamptz",	""	]
[ "sys",	"evalalgebra",	0,	"clob",	"create procedure sys.evalalgebra( ra_stmt string, opt bool)\n\texternal name sql.\"evalAlgebra\";"	]
[ "sys",	"evalalgebra",	1,	"boolean",	""	]
[ "sys",	"fitsattach",	0,	"clob",	"create procedure fitsattach(fname string) external name fits.attach;"	]
[ "sys",	"fitsload",	0,	"clob",	"create procedure fitsload(tname string) external name fits.load;"	]
[ "sys",	"fuse",	0,	"smallint",	"-- fuse two (1-byte) tinyint values into one (2-byte) smallint value\ncreate function fuse(one tinyint, two tinyint)\nreturns smallint external name udf.fuse;"	]
[ "sys",	"fuse",	1,	"tinyint",	""	]
[ "sys",	"fuse",	2,	"tinyint",	""	]
[ "sys",	"fuse",	0,	"int",	"-- fuse two (2-byte) smallint values into one (4-byte) integer value\ncreate function fuse(one smallint, two smallint)\nreturns integer external name udf.fuse;"	]
[ "sys",	"fuse",	1,	"smallint",	""	]
[ "sys",	"fuse",	2,	"smallint",	""	]
[ "sys",	"fuse",	0,	"bigint",	"-- fuse two (4-byte) integer values into one (8-byte) bigint value\ncreate function fuse(one integer, two integer)\nreturns bigint external name udf.fuse;"	]
[ "sys",	"fuse",	1,	"int",	""	]
[ "sys",	"fuse",	2,	"int",	""	]
[ "sys",	"generate_series",	0,	"tinyint",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- (c) Author M.Kersten\n\ncreate function sys.generate_series(first tinyint, last tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"tinyint",	""	]
[ "sys",	"generate_series",	2,	"tinyint",	""	]
[ "sys",	"generate_series",	0,	"tinyint",	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint)\nreturns table (value tinyint)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"tinyint",	""	]
[ "sys",	"generate_series",	2,	"tinyint",	""	]
[ "sys",	"generate_series",	3,	"tinyint",	""	]
[ "sys",	"generate_series",	0,	"smallint",	"create function sys.generate_series(first smallint, last smallint)\nreturns table (value smallint)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"smallint",	""	]
[ "sys",	"generate_series",	2,	"smallint",	""	]
[ "sys",	"generate_series",	0,	"smallint",	"create function sys.generate_series(first smallint, last smallint, stepsize smallint)\nreturns table (value smallint)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"smallint",	""	]
[ "sys",	"generate_series",	2,	"smallint",	""	]
[ "sys",	"generate_series",	3,	"smallint",	""	]
[ "sys",	"generate_series",	0,	"int",	"create function sys.generate_series(first int, last int)\nreturns table (value int)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"int",	""	]
[ "sys",	"generate_series",	2,	"int",	""	]
[ "sys",	"generate_series",	0,	"int",	"create function sys.generate_series(first int, last int, stepsize int)\nreturns table (value int)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"int",	""	]
[ "sys",	"generate_series",	2,	"int",	""	]
[ "sys",	"generate_series",	3,	"int",	""	]
[ "sys",	"generate_series",	0,	"bigint",	"create function sys.generate_series(first bigint, last bigint)\nreturns table (value bigint)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"bigint",	""	]
[ "sys",	"generate_series",	2,	"bigint",	""	]
[ "sys",	"generate_series",	0,	"bigint",	"create function sys.generate_series(first bigint, last bigint, stepsize bigint)\nreturns table (value bigint)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"bigint",	""	]
[ "sys",	"generate_series",	2,	"bigint",	""	]
[ "sys",	"generate_series",	3,	"bigint",	""	]
[ "sys",	"generate_series",	0,	"real",	"create function sys.generate_series(first real, last real, stepsize real)\nreturns table (value real)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"real",	""	]
[ "sys",	"generate_series",	2,	"real",	""	]
[ "sys",	"generate_series",	3,	"real",	""	]
[ "sys",	"generate_series",	0,	"double",	"create function sys.generate_series(first double, last double, stepsize double)\nreturns table (value double)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"double",	""	]
[ "sys",	"generate_series",	2,	"double",	""	]
[ "sys",	"generate_series",	3,	"double",	""	]
[ "sys",	"generate_series",	0,	"decimal",	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2))\nreturns table (value decimal(10,2))\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"decimal",	""	]
[ "sys",	"generate_series",	2,	"decimal",	""	]
[ "sys",	"generate_series",	3,	"decimal",	""	]
[ "sys",	"generate_series",	0,	"timestamp",	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second)\nreturns table (value timestamp)\nexternal name generator.series;"	]
[ "sys",	"generate_series",	1,	"timestamp",	""	]
[ "sys",	"generate_series",	2,	"timestamp",	""	]
[ "sys",	"generate_series",	3,	"sec_interval",	""	]
[ "sys",	"geometrytype",	0,	"clob",	"--gets 2d points\n--CREATE FUNCTION ST_3DMakeBox(lowLeftPointGeom Geometry, upRightPointGeom Geometry) RETURNS mbr external name geom.\"MakeBox3D\"; --gets 3d points\n\n-- Other constructors\n--CREATE FUNCTION ST_Box2dFromGeoHash() RETURNS mbr external name geom.\"Box2dFromGeoHash\";\n--CREATE FUNCTION ST_GeomFromEWKB\n--CREATE FUNCTION ST_GeomFromEWKT\n--CREATE FUNCTION ST_GeomFromGML\n--CREATE FUNCTION ST_GeomFromGeoJSON\n--CREATE FUNCTION ST_GeomFromKML\n--CREATE FUNCTION ST_GMLToSQL\n--CREATE FUNCTION ST_PointFromGeoHash\n\n-------------------------------------------------------------------------\n-------------------------- Geometry Accessors ---------------------------\n-------------------------------------------------------------------------\ncreate function geometrytype(geom geometry) returns string external name geom.\"GeometryType1\";"	]
[ "sys",	"geometrytype",	1,	"geometry",	""	]
[ "sys",	"get_type",	0,	"clob",	"create function get_type(info integer, format integer) returns string external name geom.\"getType\";"	]
[ "sys",	"get_type",	1,	"int",	""	]
[ "sys",	"get_type",	2,	"int",	""	]
[ "sys",	"getanchor",	0,	"clob",	"create function getanchor( theurl url ) returns string\n\texternal name url.\"getAnchor\";"	]
[ "sys",	"getanchor",	1,	"url",	""	]
[ "sys",	"getbasename",	0,	"clob",	"create function getbasename(theurl url) returns string\n\texternal name url.\"getBasename\";"	]
[ "sys",	"getbasename",	1,	"url",	""	]
[ "sys",	"getcontent",	0,	"clob",	"create function getcontent(theurl url)   returns string\n\texternal name url.\"getContent\";"	]
[ "sys",	"getcontent",	1,	"url",	""	]
[ "sys",	"getcontext",	0,	"clob",	"create function getcontext(theurl url)   returns string\n\texternal name url.\"getContext\";"	]
[ "sys",	"getcontext",	1,	"url",	""	]
[ "sys",	"getdomain",	0,	"clob",	"create function getdomain(theurl url) returns string\n\texternal name url.\"getDomain\";"	]
[ "sys",	"getdomain",	1,	"url",	""	]
[ "sys",	"getextension",	0,	"clob",	"create function getextension(theurl url) returns string\n\texternal name url.\"getExtension\";"	]
[ "sys",	"getextension",	1,	"url",	""	]
[ "sys",	"getfile",	0,	"clob",	"create function getfile(theurl url) returns string\n\texternal name url.\"getFile\";"	]
[ "sys",	"getfile",	1,	"url",	""	]
[ "sys",	"gethost",	0,	"clob",	"create function gethost(theurl url)   returns string\n\texternal name url.\"getHost\";"	]
[ "sys",	"gethost",	1,	"url",	""	]
[ "sys",	"getport",	0,	"clob",	"create function getport(theurl url) returns string\n\texternal name url.\"getPort\";"	]
[ "sys",	"getport",	1,	"url",	""	]
[ "sys",	"getproj4",	0,	"clob",	"--CREATE FUNCTION ST_SetPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_SnapToGrid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Snap RETURNS EXTERNAL NAME\ncreate function getproj4(srid_in integer) returns string \nbegin\n\treturn select proj4text from spatial_ref_sys where srid=srid_in; \nend;"	]
[ "sys",	"getproj4",	1,	"int",	""	]
[ "sys",	"getprotocol",	0,	"clob",	"create function getprotocol(theurl url) returns string\n\texternal name url.\"getProtocol\";"	]
[ "sys",	"getprotocol",	1,	"url",	""	]
[ "sys",	"getquery",	0,	"clob",	"create function getquery(theurl url) returns string\n\texternal name url.\"getQuery\";"	]
[ "sys",	"getquery",	1,	"url",	""	]
[ "sys",	"getroboturl",	0,	"clob",	"create function getroboturl(theurl url) returns string\n\texternal name url.\"getRobotURL\";"	]
[ "sys",	"getroboturl",	1,	"url",	""	]
[ "sys",	"getuser",	0,	"clob",	"create function getuser(theurl url) returns string\n\texternal name url.\"getUser\";"	]
[ "sys",	"getuser",	1,	"url",	""	]
[ "sys",	"has_m",	0,	"int",	"create function has_m(info integer) returns integer external name geom.\"hasM\";"	]
[ "sys",	"has_m",	1,	"int",	""	]
[ "sys",	"has_z",	0,	"int",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make sure you load the geom module before loading this sql module\n-- create spatial_ref_sys metadata table\n\ncreate function has_z(info integer) returns integer external name geom.\"hasZ\";"	]
[ "sys",	"has_z",	1,	"int",	""	]
[ "sys",	"hashsize",	0,	"bigint",	"create function sys.hashsize(b boolean, i bigint)\nreturns bigint\nbegin\n\t-- assume non-compound keys\n\tif  b = true\n\tthen\n\t\treturn 8 * i;\n\tend if;\n\treturn 0;\nend;"	]
[ "sys",	"hashsize",	1,	"boolean",	""	]
[ "sys",	"hashsize",	2,	"bigint",	""	]
[ "sys",	"heapsize",	0,	"bigint",	"create function sys.heapsize(tpe string, i bigint, w int)\nreturns bigint\nbegin\n\tif  tpe <> 'varchar' and tpe <> 'clob'\n\tthen\n\t\treturn 0;\n\tend if;\n\treturn 10240 + i * w;\nend;"	]
[ "sys",	"heapsize",	1,	"clob",	""	]
[ "sys",	"heapsize",	2,	"bigint",	""	]
[ "sys",	"heapsize",	3,	"int",	""	]
[ "sys",	"host",	0,	"clob",	"create function \"host\" (p inet) returns clob\n\texternal name inet.\"host\";"	]
[ "sys",	"host",	1,	"inet",	""	]
[ "sys",	"hostmask",	0,	"inet",	"create function \"hostmask\" (p inet) returns inet\n\texternal name inet.\"hostmask\";"	]
[ "sys",	"hostmask",	1,	"inet",	""	]
[ "sys",	"ilike",	0,	"clob",	"create filter function \"ilike\"(val string, pat string, esc string) external name algebra.\"ilike\";"	]
[ "sys",	"ilike",	1,	"clob",	""	]
[ "sys",	"ilike",	2,	"clob",	""	]
[ "sys",	"ilike",	0,	"clob",	"create filter function \"ilike\"(val string, pat string) external name algebra.\"ilike\";"	]
[ "sys",	"ilike",	1,	"clob",	""	]
[ "sys",	"imprintsize",	0,	"bigint",	"create function sys.imprintsize(i bigint, nme string)\nreturns bigint\nbegin\n\tif nme = 'boolean'\n\t\tor nme = 'tinyint'\n\t\tor nme = 'smallint'\n\t\tor nme = 'int'\n\t\tor nme = 'bigint'\n\t\tor nme = 'hugeint'\n\t\tor nme = 'decimal'\n\t\tor nme = 'date'\n\t\tor nme = 'timestamp'\n\t\tor nme = 'real'\n\t\tor nme = 'double'\n\tthen\n\t\treturn cast( i * 0.12 as bigint);\n\tend if ;\n\treturn 0;\nend;"	]
[ "sys",	"imprintsize",	1,	"bigint",	""	]
[ "sys",	"imprintsize",	2,	"clob",	""	]
[ "sys",	"internaltransform",	0,	"geometry",	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.\"Transform\";"	]
[ "sys",	"internaltransform",	1,	"geometry",	""	]
[ "sys",	"internaltransform",	2,	"int",	""	]
[ "sys",	"internaltransform",	3,	"int",	""	]
[ "sys",	"internaltransform",	4,	"clob",	""	]
[ "sys",	"internaltransform",	5,	"clob",	""	]
[ "sys",	"isaurl",	0,	"boolean",	"create function isaurl(theurl url) returns bool\n\texternal name url.\"isaURL\";"	]
[ "sys",	"isaurl",	1,	"url",	""	]
[ "sys",	"isauuid",	0,	"uuid",	"create function sys.isauuid(u uuid)\nreturns uuid external name uuid.\"isaUUID\";"	]
[ "sys",	"isauuid",	1,	"uuid",	""	]
[ "sys",	"isauuid",	0,	"uuid",	"create function sys.isauuid(u string)\nreturns uuid external name uuid.\"isaUUID\";"	]
[ "sys",	"isauuid",	1,	"clob",	""	]
[ "sys",	"left_shift",	0,	"boolean",	"create function \"left_shift\"(i1 inet, i2 inet) returns boolean\n\texternal name inet.\"<<\";"	]
[ "sys",	"left_shift",	1,	"inet",	""	]
[ "sys",	"left_shift",	2,	"inet",	""	]
[ "sys",	"left_shift_assign",	0,	"boolean",	"create function \"left_shift_assign\"(i1 inet, i2 inet) returns boolean\n\texternal name inet.\"<<=\";"	]
[ "sys",	"left_shift_assign",	1,	"inet",	""	]
[ "sys",	"left_shift_assign",	2,	"inet",	""	]
[ "sys",	"lidarattach",	0,	"clob",	"create procedure lidarattach(fname string) external name lidar.attach;"	]
[ "sys",	"lidarload",	0,	"clob",	"create procedure lidarload(tname string) external name lidar.load;"	]
[ "sys",	"like",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate filter function \"like\"(val string, pat string, esc string) external name algebra.\"like\";"	]
[ "sys",	"like",	1,	"clob",	""	]
[ "sys",	"like",	2,	"clob",	""	]
[ "sys",	"like",	0,	"clob",	"create filter function \"like\"(val string, pat string) external name algebra.\"like\";"	]
[ "sys",	"like",	1,	"clob",	""	]
[ "sys",	"listdir",	0,	"clob",	"\n\ncreate procedure listdir(dirname string) external name fits.listdir;"	]
[ "sys",	"listdirpat",	0,	"clob",	"create procedure listdirpat(dirname string,pat string) external name fits.listdirpattern;"	]
[ "sys",	"listdirpat",	1,	"clob",	""	]
[ "sys",	"malfunctions",	0,	"clob",	"create function sys.malfunctions()\n\treturns table(\"signature\" string, \"address\" string, \"comment\" string)\n\texternal name \"manual\".\"functions\";"	]
[ "sys",	"malfunctions",	1,	"clob",	""	]
[ "sys",	"malfunctions",	2,	"clob",	""	]
[ "sys",	"masklen",	0,	"int",	"create function \"masklen\" (p inet) returns int\n\texternal name inet.\"masklen\";"	]
[ "sys",	"masklen",	1,	"inet",	""	]
[ "sys",	"mbr",	0,	"mbr",	"-- currently we only use mbr instead of\n-- Envelope():Geometry\n-- as that returns Geometry objects, and we prefer the explicit mbr's\n-- minimum bounding rectangle (mbr)\ncreate function mbr(geom geometry) returns mbr external name geom.\"mbr\";"	]
[ "sys",	"mbr",	1,	"geometry",	""	]
[ "sys",	"md5",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- (co) Arjen de Rijke\n\ncreate function sys.md5(v string)\nreturns string external name clients.md5sum;"	]
[ "sys",	"md5",	1,	"clob",	""	]
[ "sys",	"median",	0,	"tinyint",	"create aggregate median(val tinyint) returns tinyint\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"tinyint",	""	]
[ "sys",	"median",	0,	"smallint",	"create aggregate median(val smallint) returns smallint\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"smallint",	""	]
[ "sys",	"median",	0,	"int",	"create aggregate median(val integer) returns integer\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"int",	""	]
[ "sys",	"median",	0,	"wrd",	"create aggregate median(val wrd) returns wrd\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"wrd",	""	]
[ "sys",	"median",	0,	"bigint",	"create aggregate median(val bigint) returns bigint\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"bigint",	""	]
[ "sys",	"median",	0,	"decimal",	"create aggregate median(val decimal) returns decimal\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"decimal",	""	]
[ "sys",	"median",	0,	"real",	"create aggregate median(val real) returns real\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"real",	""	]
[ "sys",	"median",	0,	"double",	"create aggregate median(val double) returns double\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"double",	""	]
[ "sys",	"median",	0,	"date",	"create aggregate median(val date) returns date\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"date",	""	]
[ "sys",	"median",	0,	"time",	"create aggregate median(val time) returns time\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"time",	""	]
[ "sys",	"median",	0,	"timestamp",	"create aggregate median(val timestamp) returns timestamp\n\texternal name \"aggr\".\"median\";"	]
[ "sys",	"median",	1,	"timestamp",	""	]
[ "sys",	"ms_round",	0,	"double",	"create function ms_round(num double, prc int, truncat int)\nreturns double\nbegin\n\tif (truncat = 0)\n\t\tthen return round(num, prc);\n\t\telse return ms_trunc(num, prc);\n\tend if;\nend;"	]
[ "sys",	"ms_round",	1,	"double",	""	]
[ "sys",	"ms_round",	2,	"int",	""	]
[ "sys",	"ms_round",	3,	"int",	""	]
[ "sys",	"ms_str",	0,	"clob",	"create function ms_str(num float, prc int, truncat int)\nreturns string\nbegin\n        return cast(num as string);\nend;"	]
[ "sys",	"ms_str",	1,	"double",	""	]
[ "sys",	"ms_str",	2,	"int",	""	]
[ "sys",	"ms_str",	3,	"int",	""	]
[ "sys",	"ms_stuff",	0,	"varchar",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32))\nreturns varchar(32)\nbegin\n\tdeclare res varchar(32), aux varchar(32);\n\tdeclare ofset int;\n\n    if ( st < 0 or st > length(s1))\n        then return '';\n    end if;\n\n    set ofset = 1;\n    set res = substring(s1,ofset,st-1);\n    set res = res || s3;\n    set ofset = st + len;\n    set aux = substring(s1,ofset,length(s1)-ofset+1);\n\tset res = res || aux;\n\treturn res;\nend;"	]
[ "sys",	"ms_stuff",	1,	"varchar",	""	]
[ "sys",	"ms_stuff",	2,	"int",	""	]
[ "sys",	"ms_stuff",	3,	"int",	""	]
[ "sys",	"ms_stuff",	4,	"varchar",	""	]
[ "sys",	"ms_trunc",	0,	"double",	"create function ms_trunc(num double, prc int)\nreturns double\nexternal name sql.ms_trunc;"	]
[ "sys",	"ms_trunc",	1,	"double",	""	]
[ "sys",	"ms_trunc",	2,	"int",	""	]
[ "sys",	"netcdf_attach",	0,	"varchar",	"-- gr_name is \"GLOBAL\" or \"ROOT\" for classic NetCDF files\n-- used for groups in HDF5 files\n-- global attributes have obj_name=\"\"\n\n-- create function netcdfvar (fname varchar(256)) \n--\treturns int external name netcdf.test;\n\ncreate procedure netcdf_attach(fname varchar(256))\n    external name netcdf.attach;"	]
[ "sys",	"netcdf_importvar",	0,	"int",	"create procedure netcdf_importvar(fid integer, varnname varchar(256))\n    external name netcdf.importvariable;"	]
[ "sys",	"netcdf_importvar",	1,	"varchar",	""	]
[ "sys",	"netmask",	0,	"inet",	"create function \"netmask\" (p inet) returns inet\n\texternal name inet.\"netmask\";"	]
[ "sys",	"netmask",	1,	"inet",	""	]
[ "sys",	"network",	0,	"inet",	"create function \"network\" (p inet) returns inet\n\texternal name inet.\"network\";"	]
[ "sys",	"network",	1,	"inet",	""	]
[ "sys",	"newurl",	0,	"url",	"create function newurl(protocol string, hostname string, \"port\" int, file string)\n\treturns url\n\texternal name url.\"new\";"	]
[ "sys",	"newurl",	1,	"clob",	""	]
[ "sys",	"newurl",	2,	"clob",	""	]
[ "sys",	"newurl",	3,	"int",	""	]
[ "sys",	"newurl",	4,	"clob",	""	]
[ "sys",	"newurl",	0,	"url",	"create function newurl(protocol string, hostname string, file string)\n\treturns url\n\texternal name url.\"new\";"	]
[ "sys",	"newurl",	1,	"clob",	""	]
[ "sys",	"newurl",	2,	"clob",	""	]
[ "sys",	"newurl",	3,	"clob",	""	]
[ "sys",	"optimizer_stats",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- show the optimizer statistics maintained by the SQL frontend\ncreate function sys.optimizer_stats ()\n\treturns table (rewrite string, count int)\n\texternal name sql.dump_opt_stats;"	]
[ "sys",	"optimizer_stats",	1,	"int",	""	]
[ "sys",	"optimizers",	0,	"clob",	"-- MONETDB KERNEL SECTION\n-- optimizer pipe catalog\ncreate function sys.optimizers ()\n\treturns table (name string, def string, status string)\n\texternal name sql.optimizers;"	]
[ "sys",	"optimizers",	1,	"clob",	""	]
[ "sys",	"optimizers",	2,	"clob",	""	]
[ "sys",	"password_hash",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\ncreate function sys.password_hash (username string)\n\treturns string\n\texternal name sql.password;"	]
[ "sys",	"password_hash",	1,	"clob",	""	]
[ "sys",	"pause",	0,	"int",	"-- operations to manipulate the state of havoc queries\ncreate procedure sys.pause(tag int)\nexternal name sql.sysmon_pause;"	]
[ "sys",	"pause",	0,	"bigint",	"create procedure sys.pause(tag bigint)\nexternal name sql.sysmon_pause;"	]
[ "sys",	"quantile",	0,	"tinyint",	"create aggregate quantile(val tinyint, q double) returns tinyint\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"tinyint",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"smallint",	"create aggregate quantile(val smallint, q double) returns smallint\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"smallint",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"int",	"create aggregate quantile(val integer, q double) returns integer\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"int",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"wrd",	"create aggregate quantile(val wrd, q double) returns wrd\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"wrd",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"bigint",	"create aggregate quantile(val bigint, q double) returns bigint\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"bigint",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"decimal",	"create aggregate quantile(val decimal, q double) returns decimal\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"decimal",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"real",	"create aggregate quantile(val real, q double) returns real\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"real",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"double",	"create aggregate quantile(val double, q double) returns double\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"double",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"date",	"create aggregate quantile(val date, q double) returns date\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"date",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"time",	"create aggregate quantile(val time, q double) returns time\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"time",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"quantile",	0,	"timestamp",	"create aggregate quantile(val timestamp, q double) returns timestamp\n\texternal name \"aggr\".\"quantile\";"	]
[ "sys",	"quantile",	1,	"timestamp",	""	]
[ "sys",	"quantile",	2,	"double",	""	]
[ "sys",	"querycache",	0,	"clob",	"-- SQL QUERY CACHE\n-- The SQL query cache returns a table with the query plans kept\n\ncreate function sys.querycache()\n\treturns table (query string, count int)\n\texternal name sql.dump_cache;"	]
[ "sys",	"querycache",	1,	"int",	""	]
[ "sys",	"querylog",	0,	"clob",	"-- Trace the SQL input\ncreate procedure sys.querylog(filename string)\n\texternal name sql.logfile;"	]
[ "sys",	"querylog_calls",	0,	"oid",	"-- Each query call is stored in the table calls\n-- At regular intervals the query history table should be cleaned.\n-- This can be done manually on the SQL console, or be integrated\n-- in the keepQuery and keepCall upon need.\n-- The parameters are geared at understanding the resource claims\n-- They reflect the effect of the total workload mix during execution.\n-- The 'cpu' gives the average cpu load percentage over all cores on the\n-- server during execution phase.\n-- increasing cpu load indicates better use of multi-cores.\n-- The 'io' indicate IOs during complete query run.\n-- The 'space' is the total amount of intermediates created in MB.\n-- Reducing the space component improves performance/\n-- All timing in usec and all storage in bytes.\n\ncreate function sys.querylog_calls()\nreturns table(\n\tid oid,\t\t -- references query plan\n\t\"start\" timestamp,\t-- time the statement was started\n\t\"stop\" timestamp,\t-- time the statement was completely finished\n\targuments string,\t-- actual call structure\n\ttuples wrd,\t\t-- number of tuples in the result set\n\trun bigint,\t\t-- time spent (in usec)  until the result export\n\tship bigint,\t\t-- time spent (in usec)  to ship the result set\n\tcpu int,\t\t-- average cpu load percentage during execution\n\tio int\t\t\t-- percentage time waiting for IO to finish\n)\nexternal name sql.querylog_calls;"	]
[ "sys",	"querylog_calls",	1,	"timestamp",	""	]
[ "sys",	"querylog_calls",	2,	"timestamp",	""	]
[ "sys",	"querylog_calls",	3,	"clob",	""	]
[ "sys",	"querylog_calls",	4,	"wrd",	""	]
[ "sys",	"querylog_calls",	5,	"bigint",	""	]
[ "sys",	"querylog_calls",	6,	"bigint",	""	]
[ "sys",	"querylog_calls",	7,	"int",	""	]
[ "sys",	"querylog_calls",	8,	"int",	""	]
[ "sys",	"querylog_catalog",	0,	"oid",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- QUERY HISTORY\n-- The query history mechanism of MonetDB/SQL relies on a few hooks.\n-- The most important one is a global system variable which controls\n--  monitoring of all sessions.\n\ncreate function sys.querylog_catalog()\nreturns table(\n\tid oid,\n\towner string,\n\tdefined timestamp,\n\tquery string,\n\tpipe string,\n\t\"plan\" string,\t\t-- Name of MAL plan\n\tmal int,\t\t-- size of MAL plan\n\toptimize bigint\t-- time in usec\n)\nexternal name sql.querylog_catalog;"	]
[ "sys",	"querylog_catalog",	1,	"clob",	""	]
[ "sys",	"querylog_catalog",	2,	"timestamp",	""	]
[ "sys",	"querylog_catalog",	3,	"clob",	""	]
[ "sys",	"querylog_catalog",	4,	"clob",	""	]
[ "sys",	"querylog_catalog",	5,	"clob",	""	]
[ "sys",	"querylog_catalog",	6,	"int",	""	]
[ "sys",	"querylog_catalog",	7,	"bigint",	""	]
[ "sys",	"querylog_enable",	0,	"smallint",	"create procedure sys.querylog_enable(threshold smallint)\nexternal name sql.querylog_enable_threshold;"	]
[ "sys",	"queue",	0,	"bigint",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- System monitoring\n\n-- show status of all active SQL queries.\ncreate function sys.queue()\nreturns table(\n\tqtag bigint,\n\t\"user\" string,\n\tstarted timestamp,\n\testimate timestamp,\n\tprogress int,\n\tstatus string,\n\ttag oid,\n\tquery string\n)\nexternal name sql.sysmon_queue;"	]
[ "sys",	"queue",	1,	"clob",	""	]
[ "sys",	"queue",	2,	"timestamp",	""	]
[ "sys",	"queue",	3,	"timestamp",	""	]
[ "sys",	"queue",	4,	"int",	""	]
[ "sys",	"queue",	5,	"clob",	""	]
[ "sys",	"queue",	6,	"oid",	""	]
[ "sys",	"queue",	7,	"clob",	""	]
[ "sys",	"radians",	0,	"double",	"create function radians(d double)\nreturns double\n\treturn d*pi()/180;"	]
[ "sys",	"radians",	1,	"double",	""	]
[ "sys",	"rejects",	0,	"bigint",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- COPY into reject management\n\ncreate function sys.rejects()\nreturns table(\n\trowid bigint,\n\tfldid int,\n\t\"message\" string,\n\t\"input\" string\n)\nexternal name sql.copy_rejects;"	]
[ "sys",	"rejects",	1,	"int",	""	]
[ "sys",	"rejects",	2,	"clob",	""	]
[ "sys",	"rejects",	3,	"clob",	""	]
[ "sys",	"resume",	0,	"int",	"create procedure sys.resume(tag int)\nexternal name sql.sysmon_resume;"	]
[ "sys",	"resume",	0,	"bigint",	"create procedure sys.resume(tag bigint)\nexternal name sql.sysmon_resume;"	]
[ "sys",	"reuse",	0,	"clob",	"create procedure reuse(sys string, tab string)\n\texternal name sql.reuse;"	]
[ "sys",	"reuse",	1,	"clob",	""	]
[ "sys",	"reverse",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- add function signatures to SQL catalog\n\n\n-- Reverse a string\ncreate function reverse(src string)\nreturns string external name udf.reverse;"	]
[ "sys",	"reverse",	1,	"clob",	""	]
[ "sys",	"right_shift",	0,	"boolean",	"create function \"right_shift\"(i1 inet, i2 inet) returns boolean\n\texternal name inet.\">>\";"	]
[ "sys",	"right_shift",	1,	"inet",	""	]
[ "sys",	"right_shift",	2,	"inet",	""	]
[ "sys",	"right_shift_assign",	0,	"boolean",	"create function \"right_shift_assign\"(i1 inet, i2 inet) returns boolean\n\texternal name inet.\">>=\";"	]
[ "sys",	"right_shift_assign",	1,	"inet",	""	]
[ "sys",	"right_shift_assign",	2,	"inet",	""	]
[ "sys",	"sessions",	0,	"clob",	"create function sys.sessions()\nreturns table(\"user\" string, \"login\" timestamp, \"sessiontimeout\" bigint, \"lastcommand\" timestamp, \"querytimeout\" bigint, \"active\" bool)\nexternal name sql.sessions;"	]
[ "sys",	"sessions",	1,	"timestamp",	""	]
[ "sys",	"sessions",	2,	"bigint",	""	]
[ "sys",	"sessions",	3,	"timestamp",	""	]
[ "sys",	"sessions",	4,	"bigint",	""	]
[ "sys",	"sessions",	5,	"boolean",	""	]
[ "sys",	"setmasklen",	0,	"inet",	"create function \"setmasklen\" (p inet, mask int) returns inet\n\texternal name inet.\"setmasklen\";"	]
[ "sys",	"setmasklen",	1,	"inet",	""	]
[ "sys",	"setmasklen",	2,	"int",	""	]
[ "sys",	"setsession",	0,	"bigint",	"create procedure sys.setsession(\"timeout\" bigint)\n\texternal name sql.setsession;"	]
[ "sys",	"settimeout",	0,	"bigint",	"-- control the query and session time out\ncreate procedure sys.settimeout(\"query\" bigint)\n\texternal name sql.settimeout;"	]
[ "sys",	"settimeout",	0,	"bigint",	"create procedure sys.settimeout(\"query\" bigint, \"session\" bigint)\n\texternal name sql.settimeout;"	]
[ "sys",	"settimeout",	1,	"bigint",	""	]
[ "sys",	"shrink",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- Vacuum a relational table should be done with care.\n-- For, the oid's are used in join-indices.\n\n-- Vacuum of tables may improve IO performance and disk footprint.\n-- The foreign key constraints should be dropped before\n-- and re-established after the cluster operation.\n\ncreate procedure shrink(sys string, tab string)\n\texternal name sql.shrink;"	]
[ "sys",	"shrink",	1,	"clob",	""	]
[ "sys",	"shutdown",	0,	"tinyint",	"create procedure sys.shutdown(delay tinyint)\nexternal name sql.shutdown;"	]
[ "sys",	"shutdown",	0,	"tinyint",	"create procedure sys.shutdown(delay tinyint, force bool)\nexternal name sql.shutdown;"	]
[ "sys",	"shutdown",	1,	"boolean",	""	]
[ "sys",	"st_area",	0,	"double",	"create function st_area(geom geometry) returns double external name geom.\"Area\";"	]
[ "sys",	"st_area",	1,	"geometry",	""	]
[ "sys",	"st_asbinary",	0,	"clob",	"--Obtainig WKB from Geometry\ncreate function st_asbinary(geom geometry) returns string external name geom.\"AsBinary\";"	]
[ "sys",	"st_asbinary",	1,	"geometry",	""	]
[ "sys",	"st_asewkt",	0,	"clob",	"--CREATE FUNCTION ST_TransScale RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Outputs ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AsEWKB RETURNS EXTERNAL NAME\ncreate function st_asewkt(geom geometry) returns string external name geom.\"AsEWKT\";"	]
[ "sys",	"st_asewkt",	1,	"geometry",	""	]
[ "sys",	"st_astext",	0,	"clob",	"--Obtaining WKT from Geometry\ncreate function st_astext(geom geometry) returns string external name geom.\"AsText\";"	]
[ "sys",	"st_astext",	1,	"geometry",	""	]
[ "sys",	"st_bdmpolyfromtext",	0,	"geometry",	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.\"BdMPolyFromText\";"	]
[ "sys",	"st_bdmpolyfromtext",	1,	"clob",	""	]
[ "sys",	"st_bdmpolyfromtext",	2,	"int",	""	]
[ "sys",	"st_bdpolyfromtext",	0,	"geometry",	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.\"BdPolyFromText\";"	]
[ "sys",	"st_bdpolyfromtext",	1,	"clob",	""	]
[ "sys",	"st_bdpolyfromtext",	2,	"int",	""	]
[ "sys",	"st_boundary",	0,	"geometry",	"create function st_boundary(geom geometry) returns geometry external name geom.\"Boundary\";"	]
[ "sys",	"st_boundary",	1,	"geometry",	""	]
[ "sys",	"st_buffer",	0,	"geometry",	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.\"Buffer\";"	]
[ "sys",	"st_buffer",	1,	"geometry",	""	]
[ "sys",	"st_buffer",	2,	"double",	""	]
[ "sys",	"st_centroid",	0,	"geometry",	"--Functions on Surface (i.e. Polygon and Polyhedral Surface) and MultiSurface\ncreate function st_centroid(geom geometry) returns geometry external name geom.\"Centroid\";"	]
[ "sys",	"st_centroid",	1,	"geometry",	""	]
[ "sys",	"st_collect",	0,	"geometry",	"--CREATE FUNCTION ST_3DLength RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Length2D_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLength_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_OrderingEquals RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Perimeter2D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DPerimeter RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Project RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry) RETURNS string EXTERNAL NAME geom.\"Relate\";\n--CREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry, boundary_node_rule integer) RETURNS string EXTERNAL NAME geom.\"Relate\";\n--CREATE FUNCTION ST_RelateMatch RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ShortestLine RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------- Geometry Processing ---------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, circle_quarters_num integer) RETURNS Geometry EXTERNAL NAME geom.\"Buffer\";\n--CREATE FUNCTION ST_Buffer(geom Geometry, radius double, buffer_style_parameters string) RETURNS Geometry EXTERNAL NAME geom.\"Buffer\";\n--CREATE FUNCTION ST_Buffer(geog Geography, radius double) RETURNS Geometry EXTERNAL NAME geom.\"Buffer\";\n--CREATE FUNCTION ST_BuildArea RETURNS EXTERNAL NAME\n--collect is the same to union. POstGIS just has a more efficient implementation for it compared to union\ncreate function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Union\";"	]
[ "sys",	"st_collect",	1,	"geometry",	""	]
[ "sys",	"st_collect",	2,	"geometry",	""	]
[ "sys",	"st_collect",	0,	"geometry",	"create aggregate st_collect(geom geometry) returns geometry external name geom.\"Union\";"	]
[ "sys",	"st_collect",	1,	"geometry",	""	]
[ "sys",	"st_contains",	0,	"boolean",	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.\"mbrContains\";"	]
[ "sys",	"st_contains",	1,	"mbr",	""	]
[ "sys",	"st_contains",	2,	"mbr",	""	]
[ "sys",	"st_contains",	0,	"boolean",	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Contains\";"	]
[ "sys",	"st_contains",	1,	"geometry",	""	]
[ "sys",	"st_contains",	2,	"geometry",	""	]
[ "sys",	"st_convexhull",	0,	"geometry",	"create function st_convexhull(geom geometry) returns geometry external name geom.\"ConvexHull\";"	]
[ "sys",	"st_convexhull",	1,	"geometry",	""	]
[ "sys",	"st_coorddim",	0,	"int",	"create function st_coorddim(geom geometry) returns integer external name geom.\"CoordDim\";"	]
[ "sys",	"st_coorddim",	1,	"geometry",	""	]
[ "sys",	"st_coveredby",	0,	"boolean",	"--CREATE FUNCTION ST_Covers(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.\"Covers\";\ncreate function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.\"CoveredBy\";"	]
[ "sys",	"st_coveredby",	1,	"geometry",	""	]
[ "sys",	"st_coveredby",	2,	"geometry",	""	]
[ "sys",	"st_covers",	0,	"boolean",	"--CREATE FUNCTION ST_AsGeoJSON RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsGML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsHEXEWKB RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsKML RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsSVG RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsX3D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_GeoHash RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_AsLatLonText RETURNS EXTERNAL NAME\n\n-------------------------------------------------------------------------\n------------------------------ Operators --------------------------------\n-------------------------------------------------------------------------\n\n-------------------------------------------------------------------------\n---------------- Spatial Relationships and Measurements -----------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_3DClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DDFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DIntersects RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DLongestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DMaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_3DShortestLine RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Area(geog Geography, use_spheroid boolean) RETURNS flt EXTERNAL NAME geom.\"Area\";\n--CREATE FUNCTION ST_Azimuth RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ClosestPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ContainsProperly RETURNS EXTERNAL NAME\ncreate function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Covers\";"	]
[ "sys",	"st_covers",	1,	"geometry",	""	]
[ "sys",	"st_covers",	2,	"geometry",	""	]
[ "sys",	"st_crosses",	0,	"boolean",	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Crosses\";"	]
[ "sys",	"st_crosses",	1,	"geometry",	""	]
[ "sys",	"st_crosses",	2,	"geometry",	""	]
[ "sys",	"st_delaunaytriangles",	0,	"geometry",	"--CREATE FUNCTION ST_ConcaveHull RETURNS EXTERNAL NAME\ncreate function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.\"DelaunayTriangles\";"	]
[ "sys",	"st_delaunaytriangles",	1,	"geometry",	""	]
[ "sys",	"st_delaunaytriangles",	2,	"double",	""	]
[ "sys",	"st_delaunaytriangles",	3,	"int",	""	]
[ "sys",	"st_difference",	0,	"geometry",	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Difference\";"	]
[ "sys",	"st_difference",	1,	"geometry",	""	]
[ "sys",	"st_difference",	2,	"geometry",	""	]
[ "sys",	"st_dimension",	0,	"int",	"--Functions on Geometries\ncreate function st_dimension(geom geometry) returns integer external name geom.\"Dimension\";"	]
[ "sys",	"st_dimension",	1,	"geometry",	""	]
[ "sys",	"st_disjoint",	0,	"boolean",	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Disjoint\";"	]
[ "sys",	"st_disjoint",	1,	"geometry",	""	]
[ "sys",	"st_disjoint",	2,	"geometry",	""	]
[ "sys",	"st_distance",	0,	"double",	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.\"mbrDistance\";"	]
[ "sys",	"st_distance",	1,	"mbr",	""	]
[ "sys",	"st_distance",	2,	"mbr",	""	]
[ "sys",	"st_distance",	0,	"double",	"--Distance between Geometries\ncreate function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.\"Distance\";"	]
[ "sys",	"st_distance",	1,	"geometry",	""	]
[ "sys",	"st_distance",	2,	"geometry",	""	]
[ "sys",	"st_dump",	0,	"clob",	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.\"Dump\";"	]
[ "sys",	"st_dump",	1,	"geometry",	""	]
[ "sys",	"st_dump",	2,	"geometry",	""	]
[ "sys",	"st_dumppoints",	0,	"clob",	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.\"DumpPoints\";"	]
[ "sys",	"st_dumppoints",	1,	"geometry",	""	]
[ "sys",	"st_dumppoints",	2,	"geometry",	""	]
[ "sys",	"st_dwithin",	0,	"boolean",	"--CREATE FUNCTION ST_CoveredBy(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.\"CoveredBy\";\n--CREATE FUNCTION ST_LineCrossingDirection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry) RETURNS double EXTERNAL NAME geom.\"Distance\"\n--CREATE FUNCTION ST_Distance(geog1 Geometry, geog2 Geometry, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.\"Distance\"\ncreate function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.\"DWithin\";"	]
[ "sys",	"st_dwithin",	1,	"geometry",	""	]
[ "sys",	"st_dwithin",	2,	"geometry",	""	]
[ "sys",	"st_dwithin",	3,	"double",	""	]
[ "sys",	"st_endpoint",	0,	"geometry",	"create function st_endpoint(geom geometry) returns geometry external name geom.\"EndPoint\";"	]
[ "sys",	"st_endpoint",	1,	"geometry",	""	]
[ "sys",	"st_envelope",	0,	"geometry",	"create function st_envelope(geom geometry) returns geometry external name geom.\"Envelope\";"	]
[ "sys",	"st_envelope",	1,	"geometry",	""	]
[ "sys",	"st_equals",	0,	"boolean",	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.\"mbrEqual\";"	]
[ "sys",	"st_equals",	1,	"mbr",	""	]
[ "sys",	"st_equals",	2,	"mbr",	""	]
[ "sys",	"st_equals",	0,	"boolean",	"--Functions testing spatial relations between Geometries\ncreate function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Equals\";"	]
[ "sys",	"st_equals",	1,	"geometry",	""	]
[ "sys",	"st_equals",	2,	"geometry",	""	]
[ "sys",	"st_exteriorring",	0,	"geometry",	"--Functions on Polygon\ncreate function st_exteriorring(geom geometry) returns geometry external name geom.\"ExteriorRing\";"	]
[ "sys",	"st_exteriorring",	1,	"geometry",	""	]
[ "sys",	"st_force2d",	0,	"geometry",	"--GEOS creates only 2D Envelope\n--CREATE FUNCTION ST_ZMax(geom Geometry) RETURNS double EXTERNAL NAME geom.\"ZMaxFromWKB\";\n--CREATE FUNCTION ST_ZMax(box mbr) RETURNS double EXTERNAL NAME geom.\"ZMaxFromMBR\";\n--CREATE FUNCTION ST_ZMin(geom Geometry) RETURNS double EXTERNAL NAME geom.\"ZMinFromWKB\";\n--CREATE FUNCTION ST_ZMin(box mbr) RETURNS double EXTERNAL NAME geom.\"ZMinFromMBR\";\n--CREATE FUNCTION ST_Zmflag(geom Geometry) RETURNS smallint EXTERNAL NAME --0=2d, 1=3dm, 2=3dz, 4=4d\n\n-------------------------------------------------------------------------\n--------------------------- Geometry Editors ----------------------------\n-------------------------------------------------------------------------\n--CREATE FUNCTION ST_AddPoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Affine RETURNS EXTERNAL NAME\ncreate function st_force2d(geom geometry) returns geometry external name geom.\"Force2D\";"	]
[ "sys",	"st_force2d",	1,	"geometry",	""	]
[ "sys",	"st_force3d",	0,	"geometry",	"create function st_force3d(geom geometry) returns geometry external name geom.\"Force3D\";"	]
[ "sys",	"st_force3d",	1,	"geometry",	""	]
[ "sys",	"st_geomcollfromtext",	0,	"geometry",	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.\"GeomCollFromText\";"	]
[ "sys",	"st_geomcollfromtext",	1,	"clob",	""	]
[ "sys",	"st_geomcollfromtext",	2,	"int",	""	]
[ "sys",	"st_geomcollfromtext",	0,	"geometry",	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.\"GeomCollFromText\";"	]
[ "sys",	"st_geomcollfromtext",	1,	"clob",	""	]
[ "sys",	"st_geometryfromtext",	0,	"geometry",	"--Construct a Geoemtry from a WKB\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"GeomFromWKB\";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"PointFromWKB\";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"LineFromWKB\";\n--CREATE FUNCTION ST_PolygonFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"PolygonFromWKB\";\n--CREATE FUNCTION ST_MPointFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"MPointFromWKB\";\n--CREATE FUNCTION ST_MLineFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"MLineFromWKB\";\n--CREATE FUNCTION ST_MPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"MPolyFromWKB\";\n--CREATE FUNCTION ST_GeomCollFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"GeomCollFromWKB\";\n--CREATE FUNCTION ST_BdPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.\"BdPolyFromWKB\"; \n--CREATE FUNCTION ST_BdMPolyFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB, srid integer) RETURNS Geometry external name geom.\"BdMPolyFromWKB\";\n\n--CREATE FUNCTION ST_M(geom Geometry) RETURNS double EXTERNAL NAME geom.\"M\"; --geos does not support M coordinate (at least in the c version)\n--CREATE FUNCTION ST_CurveToLine RETURNS EXTERNAL NAME --geos does not support CIRCULARSTRING and does not have such function\n\n\n\n\n-------------\n-- PostGIS --\n-------------\n\n-------------------------------------------------------------------------\n------------------------- Geometry Constructors -------------------------\n-------------------------------------------------------------------------\n-- Create Geometry from text (wkt)\ncreate function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.\"GeomFromText\";"	]
[ "sys",	"st_geometryfromtext",	1,	"clob",	""	]
[ "sys",	"st_geometryfromtext",	2,	"int",	""	]
[ "sys",	"st_geometryfromtext",	0,	"geometry",	"create function st_geometryfromtext(wkt string) returns geometry external name geom.\"GeomFromText\";"	]
[ "sys",	"st_geometryfromtext",	1,	"clob",	""	]
[ "sys",	"st_geometryn",	0,	"geometry",	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.\"GeometryN\";"	]
[ "sys",	"st_geometryn",	1,	"geometry",	""	]
[ "sys",	"st_geometryn",	2,	"int",	""	]
[ "sys",	"st_geometrytype",	0,	"clob",	"create function st_geometrytype(geom geometry) returns string external name geom.\"GeometryType2\";"	]
[ "sys",	"st_geometrytype",	1,	"geometry",	""	]
[ "sys",	"st_geomfromtext",	0,	"geometry",	"--BoundingPolygons\n--IsClosed\n\n-------------------------------------------\n-- DEPRECATED BUT IMPLEMENTED BY postGIS --\n-------------------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.\"GeomFromText\";"	]
[ "sys",	"st_geomfromtext",	1,	"clob",	""	]
[ "sys",	"st_geomfromtext",	2,	"int",	""	]
[ "sys",	"st_geomfromtext",	0,	"geometry",	"create function st_geomfromtext(wkt string) returns geometry external name geom.\"GeomFromText\";"	]
[ "sys",	"st_geomfromtext",	1,	"clob",	""	]
[ "sys",	"st_interiorringn",	0,	"geometry",	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.\"InteriorRingN\";"	]
[ "sys",	"st_interiorringn",	1,	"geometry",	""	]
[ "sys",	"st_interiorringn",	2,	"int",	""	]
[ "sys",	"st_interiorrings",	0,	"geometrya",	"create function st_interiorrings(geom geometry) returns geometrya external name geom.\"InteriorRings\";"	]
[ "sys",	"st_interiorrings",	1,	"geometry",	""	]
[ "sys",	"st_intersection",	0,	"geometry",	"--Functions that implement spatial operators\ncreate function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Intersection\";"	]
[ "sys",	"st_intersection",	1,	"geometry",	""	]
[ "sys",	"st_intersection",	2,	"geometry",	""	]
[ "sys",	"st_intersects",	0,	"boolean",	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Intersects\";"	]
[ "sys",	"st_intersects",	1,	"geometry",	""	]
[ "sys",	"st_intersects",	2,	"geometry",	""	]
[ "sys",	"st_isclosed",	0,	"boolean",	"--valid also for MultiCurve\ncreate function st_isclosed(geom geometry) returns boolean external name geom.\"IsClosed\";"	]
[ "sys",	"st_isclosed",	1,	"geometry",	""	]
[ "sys",	"st_isempty",	0,	"boolean",	"create function st_isempty(geom geometry) returns boolean external name geom.\"IsEmpty\";"	]
[ "sys",	"st_isempty",	1,	"geometry",	""	]
[ "sys",	"st_isring",	0,	"boolean",	"create function st_isring(geom geometry) returns boolean external name geom.\"IsRing\";"	]
[ "sys",	"st_isring",	1,	"geometry",	""	]
[ "sys",	"st_issimple",	0,	"boolean",	"create function st_issimple(geom geometry) returns boolean external name geom.\"IsSimple\";"	]
[ "sys",	"st_issimple",	1,	"geometry",	""	]
[ "sys",	"st_isvalid",	0,	"boolean",	"--CREATE FUNCTION ST_IsCollection(geom Geometry) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalid(geom geometry) returns boolean external name geom.\"IsValid\";"	]
[ "sys",	"st_isvalid",	1,	"geometry",	""	]
[ "sys",	"st_isvalidreason",	0,	"clob",	"--CREATE FUNCTION ST_IsValid(geom Geometry, flags integer) RETURNS boolean EXTERNAL NAME\ncreate function st_isvalidreason(geom geometry) returns string external name geom.\"IsValidReason\";"	]
[ "sys",	"st_isvalidreason",	1,	"geometry",	""	]
[ "sys",	"st_length",	0,	"double",	"create function st_length(geom geometry) returns double external name geom.\"Length\";"	]
[ "sys",	"st_length",	1,	"geometry",	""	]
[ "sys",	"st_length2d",	0,	"double",	"--CREATE FUNCTION ST_HausdorffDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_MaxDistance RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Sphere RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Distance_Spheroid RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_DFullyWithin RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_HasArc RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Intersects(geog1 Geography, geog2 Geography) RETURNS boolean EXTERNAL NAME geom.\"Intersects\";\n--CREATE FUNCTION ST_Length(geog Geography, use_spheroid boolean) RETURNS double EXTERNAL NAME geom.\"Length\";\ncreate function st_length2d(geom geometry) returns double external name geom.\"Length\";"	]
[ "sys",	"st_length2d",	1,	"geometry",	""	]
[ "sys",	"st_linefromtext",	0,	"geometry",	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.\"LineFromText\";"	]
[ "sys",	"st_linefromtext",	1,	"clob",	""	]
[ "sys",	"st_linefromtext",	2,	"int",	""	]
[ "sys",	"st_linefromtext",	0,	"geometry",	"create function st_linefromtext(wkt string) returns geometry external name geom.\"LineFromText\";"	]
[ "sys",	"st_linefromtext",	1,	"clob",	""	]
[ "sys",	"st_makebox2d",	0,	"mbr",	"--gets linestring\ncreate function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.\"MakeBox2D\";"	]
[ "sys",	"st_makebox2d",	1,	"geometry",	""	]
[ "sys",	"st_makebox2d",	2,	"geometry",	""	]
[ "sys",	"st_makeenvelope",	0,	"geometry",	"--two single geometries\n--CREATE FUNCTION ST_MakeLine(geoms_arr Geometry[]) RETURNS Geometry external name geom.\"MakeLine\";\n--CREATE FUNCTION ST_LineFromMultiPoint(pointGeom Geometry) RETURNS Geometry external name geom.\"LineFromMultiPoint\"; --gets mutlipoint returns linestring\ncreate function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.\"MakeEnvelope\";"	]
[ "sys",	"st_makeenvelope",	1,	"double",	""	]
[ "sys",	"st_makeenvelope",	2,	"double",	""	]
[ "sys",	"st_makeenvelope",	3,	"double",	""	]
[ "sys",	"st_makeenvelope",	4,	"double",	""	]
[ "sys",	"st_makeenvelope",	5,	"int",	""	]
[ "sys",	"st_makeenvelope",	0,	"geometry",	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.\"MakeEnvelope\";"	]
[ "sys",	"st_makeenvelope",	1,	"double",	""	]
[ "sys",	"st_makeenvelope",	2,	"double",	""	]
[ "sys",	"st_makeenvelope",	3,	"double",	""	]
[ "sys",	"st_makeenvelope",	4,	"double",	""	]
[ "sys",	"st_makeline",	0,	"geometry",	"--CREATE FUNCTION ST_MakeLine(geometry set geoms)?????\ncreate aggregate st_makeline(geom geometry) returns geometry external name geom.\"MakeLine\";"	]
[ "sys",	"st_makeline",	1,	"geometry",	""	]
[ "sys",	"st_makeline",	0,	"geometry",	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.\"MakeLine\";"	]
[ "sys",	"st_makeline",	1,	"geometry",	""	]
[ "sys",	"st_makeline",	2,	"geometry",	""	]
[ "sys",	"st_makepoint",	0,	"geometry",	"--CREATE FUNCTION ST_GeogFromText(wkt string) RETURNS Geography external name geom.\"GeographyFromText\";\n--CREATE FUNCTION ST_GeographyFromText(wkt string) RETURNS Geography external name geom.\"GeographyFromText\";\n\n\n-- Create Geometry from raw representation (byte array)\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB, srid smallint) RETURNS Geometry EXTERNAL NAME geom.\"LineFromWKB\";\n\n--CREATE FUNCTION ST_GeomFromWKB(wkb_raw WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.\"GeomFromWKB\";\n--CREATE FUNCTION ST_PointFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.\"PointFromWKB\";\n--CREATE FUNCTION ST_LineFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.\"LineFromWKB\";\n--CREATE FUNCTION ST_LinestringFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geometry EXTERNAL NAME geom.\"LineFromWKB\";\n--CREATE FUNCTION ST_GeogFromWKB(wkb_arr WHATEVER_IS_STORED_IN_DB) RETURNS Geography EXTERNAL NAME geom.\"GeogFromWKB\";\n\n-- Create Geometry from simpler geometries\ncreate function st_makepoint(x double, y double) returns geometry external name geom.\"MakePoint\";"	]
[ "sys",	"st_makepoint",	1,	"double",	""	]
[ "sys",	"st_makepoint",	2,	"double",	""	]
[ "sys",	"st_makepoint",	0,	"geometry",	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.\"MakePoint\";"	]
[ "sys",	"st_makepoint",	1,	"double",	""	]
[ "sys",	"st_makepoint",	2,	"double",	""	]
[ "sys",	"st_makepoint",	3,	"double",	""	]
[ "sys",	"st_makepoint",	0,	"geometry",	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.\"MakePoint\";"	]
[ "sys",	"st_makepoint",	1,	"double",	""	]
[ "sys",	"st_makepoint",	2,	"double",	""	]
[ "sys",	"st_makepoint",	3,	"double",	""	]
[ "sys",	"st_makepoint",	4,	"double",	""	]
[ "sys",	"st_makepointm",	0,	"geometry",	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.\"MakePointM\";"	]
[ "sys",	"st_makepointm",	1,	"double",	""	]
[ "sys",	"st_makepointm",	2,	"double",	""	]
[ "sys",	"st_makepointm",	3,	"double",	""	]
[ "sys",	"st_makepolygon",	0,	"geometry",	"create function st_makepolygon(geom geometry) returns geometry external name geom.\"MakePolygon\";"	]
[ "sys",	"st_makepolygon",	1,	"geometry",	""	]
[ "sys",	"st_mlinefromtext",	0,	"geometry",	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.\"MLineFromText\";"	]
[ "sys",	"st_mlinefromtext",	1,	"clob",	""	]
[ "sys",	"st_mlinefromtext",	2,	"int",	""	]
[ "sys",	"st_mlinefromtext",	0,	"geometry",	"create function st_mlinefromtext(wkt string) returns geometry external name geom.\"MLineFromText\";"	]
[ "sys",	"st_mlinefromtext",	1,	"clob",	""	]
[ "sys",	"st_mpointfromtext",	0,	"geometry",	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.\"MPointFromText\";"	]
[ "sys",	"st_mpointfromtext",	1,	"clob",	""	]
[ "sys",	"st_mpointfromtext",	2,	"int",	""	]
[ "sys",	"st_mpointfromtext",	0,	"geometry",	"create function st_mpointfromtext(wkt string) returns geometry external name geom.\"MPointFromText\";"	]
[ "sys",	"st_mpointfromtext",	1,	"clob",	""	]
[ "sys",	"st_mpolyfromtext",	0,	"geometry",	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.\"MPolyFromText\";"	]
[ "sys",	"st_mpolyfromtext",	1,	"clob",	""	]
[ "sys",	"st_mpolyfromtext",	2,	"int",	""	]
[ "sys",	"st_mpolyfromtext",	0,	"geometry",	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.\"MPolyFromText\";"	]
[ "sys",	"st_mpolyfromtext",	1,	"clob",	""	]
[ "sys",	"st_npoints",	0,	"int",	"--CREATE FUNCTION ST_IsValidReason(geom Geometry, flags integer) RETURNS string EXTERNAL NAME\n--CREATE FUNCTION ST_IsValidDetail(geom Geometry) RETURNS string EXTERNAL NAME geom.\"IsValidDetail\"; \n--CREATE FUNCTION ST_IsValidDetail(geom Geometry, flags integer) RETURNS A_CUSTOM_ROW EXTERNAL NAME\n--CREATE FUNCTION ST_NDims(geom Geometry) RETURNS integer EXTERNAL NAME\ncreate function st_npoints(geom geometry) returns integer external name geom.\"NPoints\";"	]
[ "sys",	"st_npoints",	1,	"geometry",	""	]
[ "sys",	"st_nrings",	0,	"int",	"create function st_nrings(geom geometry) returns integer external name geom.\"NRings\";"	]
[ "sys",	"st_nrings",	1,	"geometry",	""	]
[ "sys",	"st_numgeometries",	0,	"int",	"--CREATE FUNCTION ST_SetInteriorRings(geom GeometryA) RETURNS Geometry EXTERNAL NAME geom.\"SetInteriorRings\"; --what is this function supposed to do????\n\n--Functions on GeomCollection\ncreate function st_numgeometries(geom geometry) returns integer external name geom.\"NumGeometries\";"	]
[ "sys",	"st_numgeometries",	1,	"geometry",	""	]
[ "sys",	"st_numinteriorring",	0,	"int",	"--gets a linestring and creates a polygon (postGIS: ST_MakePolygon)\ncreate function st_numinteriorring(geom geometry) returns integer external name geom.\"NumInteriorRings\";"	]
[ "sys",	"st_numinteriorring",	1,	"geometry",	""	]
[ "sys",	"st_numinteriorrings",	0,	"int",	"--is meaningfull for polygon and multipolygon\ncreate function st_numinteriorrings(geom geometry) returns integer external name geom.\"NumInteriorRings\";"	]
[ "sys",	"st_numinteriorrings",	1,	"geometry",	""	]
[ "sys",	"st_numpatches",	0,	"int",	"--Functions on Polyhedral Surfaces (a simple surface, consisting of a number of Polygon pathes or facets)\n--CREATE FUNCTION ST_Geometries(geom Geometry) RETURNS TABLE(geom Geometries) EXTERNAL NAME geom.\"Geometries\";\n--CREATE FUNCTION NumSurfaces(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NumSurfaces\";\n--CREATE FUNCTION Surface(positionNum integer) RETURNS Geometry EXTERNAL NAME geom.\"SurfaceN\";\n--from Part 1\ncreate function st_numpatches(geom geometry) returns integer --EXTERNAL NAME geom.\"NumPatches\"; --same with NumSurfaces\nbegin\n\treturn select st_numgeometries(geom);\nend;"	]
[ "sys",	"st_numpatches",	1,	"geometry",	""	]
[ "sys",	"st_numpoints",	0,	"int",	"--valid also for MultiCurve\n\n--Functions on LineString\ncreate function st_numpoints(geom geometry) returns integer external name geom.\"NumPoints\";"	]
[ "sys",	"st_numpoints",	1,	"geometry",	""	]
[ "sys",	"st_overlaps",	0,	"boolean",	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.\"mbrOverlaps\";"	]
[ "sys",	"st_overlaps",	1,	"mbr",	""	]
[ "sys",	"st_overlaps",	2,	"mbr",	""	]
[ "sys",	"st_overlaps",	0,	"boolean",	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Overlaps\";"	]
[ "sys",	"st_overlaps",	1,	"geometry",	""	]
[ "sys",	"st_overlaps",	2,	"geometry",	""	]
[ "sys",	"st_patchn",	0,	"geometry",	"create function st_patchn(geom geometry, patchnum integer) returns geometry --EXTERNAL NAME geom.\"PatchN\" --same with Surface\nbegin\n\treturn select st_geometryn(geom, patchnum);\nend;"	]
[ "sys",	"st_patchn",	1,	"geometry",	""	]
[ "sys",	"st_patchn",	2,	"int",	""	]
[ "sys",	"st_point",	0,	"geometry",	"create function st_point(x double, y double) returns geometry external name geom.\"MakePoint\";"	]
[ "sys",	"st_point",	1,	"double",	""	]
[ "sys",	"st_point",	2,	"double",	""	]
[ "sys",	"st_pointfromtext",	0,	"geometry",	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.\"PointFromText\";"	]
[ "sys",	"st_pointfromtext",	1,	"clob",	""	]
[ "sys",	"st_pointfromtext",	2,	"int",	""	]
[ "sys",	"st_pointfromtext",	0,	"geometry",	"create function st_pointfromtext(wkt string) returns geometry external name geom.\"PointFromText\";"	]
[ "sys",	"st_pointfromtext",	1,	"clob",	""	]
[ "sys",	"st_pointn",	0,	"geometry",	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.\"PointN\";"	]
[ "sys",	"st_pointn",	1,	"geometry",	""	]
[ "sys",	"st_pointn",	2,	"int",	""	]
[ "sys",	"st_pointonsurface",	0,	"geometry",	"create function st_pointonsurface(geom geometry) returns geometry external name geom.\"PointOnSurface\";"	]
[ "sys",	"st_pointonsurface",	1,	"geometry",	""	]
[ "sys",	"st_polygon",	0,	"geometry",	"--gets linestring\n--CREATE FUNCTION ST_MakePolygon(outerGeom Geometry, interiorGeoms table(g Geometry)) RETURNS Geometry external name geom.\"MakePolygon\"; --gets linestrings\ncreate function st_polygon(geom geometry, srid integer) returns geometry external name geom.\"MakePolygon\";"	]
[ "sys",	"st_polygon",	1,	"geometry",	""	]
[ "sys",	"st_polygon",	2,	"int",	""	]
[ "sys",	"st_polygonfromtext",	0,	"geometry",	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.\"PolygonFromText\";"	]
[ "sys",	"st_polygonfromtext",	1,	"clob",	""	]
[ "sys",	"st_polygonfromtext",	2,	"int",	""	]
[ "sys",	"st_polygonfromtext",	0,	"geometry",	"create function st_polygonfromtext(wkt string) returns geometry external name geom.\"PolygonFromText\";"	]
[ "sys",	"st_polygonfromtext",	1,	"clob",	""	]
[ "sys",	"st_relate",	0,	"boolean",	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.\"Relate\";"	]
[ "sys",	"st_relate",	1,	"geometry",	""	]
[ "sys",	"st_relate",	2,	"geometry",	""	]
[ "sys",	"st_relate",	3,	"clob",	""	]
[ "sys",	"st_segmentize",	0,	"geometry",	"--CREATE FUNCTION ST_Force3DZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force3DM RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Force4D RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceCollection RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_ForceRHR RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_LineMerge RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionExtract RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_CollectionHomogenize RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Multi RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RemovePoint RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Reverse RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Rotate RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateX RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateY RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_RotateZ RETURNS EXTERNAL NAME\n--CREATE FUNCTION ST_Scale RETURNS EXTERNAL NAME\ncreate function st_segmentize(geom geometry, sz double) returns geometry external name geom.\"Segmentize\";"	]
[ "sys",	"st_segmentize",	1,	"geometry",	""	]
[ "sys",	"st_segmentize",	2,	"double",	""	]
[ "sys",	"st_setexteriorring",	0,	"geometry",	"create function st_setexteriorring(geom geometry) returns geometry external name geom.\"MakePolygon\";"	]
[ "sys",	"st_setexteriorring",	1,	"geometry",	""	]
[ "sys",	"st_setsrid",	0,	"geometry",	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.\"setSRID\";"	]
[ "sys",	"st_setsrid",	1,	"geometry",	""	]
[ "sys",	"st_setsrid",	2,	"int",	""	]
[ "sys",	"st_srid",	0,	"int",	"create function st_srid(geom geometry) returns integer external name geom.\"getSRID\";"	]
[ "sys",	"st_srid",	1,	"geometry",	""	]
[ "sys",	"st_startpoint",	0,	"geometry",	"--Functions on Curve (i.e. LineString)\ncreate function st_startpoint(geom geometry) returns geometry external name geom.\"StartPoint\";"	]
[ "sys",	"st_startpoint",	1,	"geometry",	""	]
[ "sys",	"st_symdifference",	0,	"geometry",	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.\"SymDifference\";"	]
[ "sys",	"st_symdifference",	1,	"geometry",	""	]
[ "sys",	"st_symdifference",	2,	"geometry",	""	]
[ "sys",	"st_touches",	0,	"boolean",	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Touches\";"	]
[ "sys",	"st_touches",	1,	"geometry",	""	]
[ "sys",	"st_touches",	2,	"geometry",	""	]
[ "sys",	"st_transform",	0,	"geometry",	"create function st_transform(geom geometry, srid integer) returns geometry\nbegin\n\tdeclare srid_src integer;\n\tdeclare proj4_src string;\n\tdeclare proj4_dest string;\n\n\tselect st_srid(geom) into srid_src;\n\tselect getproj4(srid_src) into proj4_src;\n\tselect getproj4(srid) into proj4_dest;\n\n\tif proj4_src is null then\n\t\treturn select internaltransform(geom, srid_src, srid, 'null', proj4_dest); \n\telse\n\t\tif proj4_dest is null then\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, 'null'); \n\t\telse\n\t\t\treturn select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest);\n\t\tend if;\t\n\tend if;\nend;"	]
[ "sys",	"st_transform",	1,	"geometry",	""	]
[ "sys",	"st_transform",	2,	"int",	""	]
[ "sys",	"st_translate",	0,	"geometry",	"--Translate moves all points of a geometry dx, dy, dz\ncreate function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.\"Translate\";"	]
[ "sys",	"st_translate",	1,	"geometry",	""	]
[ "sys",	"st_translate",	2,	"double",	""	]
[ "sys",	"st_translate",	3,	"double",	""	]
[ "sys",	"st_translate",	0,	"geometry",	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.\"Translate\";"	]
[ "sys",	"st_translate",	1,	"geometry",	""	]
[ "sys",	"st_translate",	2,	"double",	""	]
[ "sys",	"st_translate",	3,	"double",	""	]
[ "sys",	"st_translate",	4,	"double",	""	]
[ "sys",	"st_union",	0,	"geometry",	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Union\";"	]
[ "sys",	"st_union",	1,	"geometry",	""	]
[ "sys",	"st_union",	2,	"geometry",	""	]
[ "sys",	"st_union",	0,	"geometry",	"create aggregate st_union(geom geometry) returns geometry external name geom.\"Union\";"	]
[ "sys",	"st_union",	1,	"geometry",	""	]
[ "sys",	"st_within",	0,	"boolean",	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Within\";"	]
[ "sys",	"st_within",	1,	"geometry",	""	]
[ "sys",	"st_within",	2,	"geometry",	""	]
[ "sys",	"st_wkbtosql",	0,	"geometry",	"--Construct a Geometry from a WKB\ncreate function st_wkbtosql(geom string) returns geometry external name geom.\"FromBinary\";"	]
[ "sys",	"st_wkbtosql",	1,	"clob",	""	]
[ "sys",	"st_wkttosql",	0,	"geometry",	"--CREATE FUNCTION mbrOverlapOrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrOverlapOrLeft\";\n--CREATE FUNCTION mbrOverlapOrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrOverlapOrBelow\";\n--CREATE FUNCTION mbrOverlapOrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrOverlapOrRight\";\n--CREATE FUNCTION mbrLeft(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrLeft\";\n--CREATE FUNCTION mbrBelow(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrBelow\";\n--CREATE FUNCTION mbrEqual(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrEqual\";\n--CREATE FUNCTION mbrRight(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrRight\";\n--CREATE FUNCTION mbrContained(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrContained\";\n--CREATE FUNCTION mbrOverlapOrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrOverlapOrAbove\";\n--CREATE FUNCTION mbrAbove(box1 mbr, box2 mbr) RETURNS boolean external name geom.\"mbrAbove\";\n\n\n-------------------------------------------------------------------------\n------------------------- Management Functions- -------------------------\n-------------------------------------------------------------------------\n--CREATE PROCEDURE AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) \n--CREATE FUNCTION AddGeometryColumn(table_name string, column_name string, srid integer, geometryType string, dimension integer) RETURNS string\n--BEGIN\n--\tDECLARE column_type string;\n--\tSET column_type = concat('geometry( ', geometryType);\n--\tSET column_type = concat(column_type, ', ');\n--\tSET column_type = concat(column_type, srid);\n--\tSET column_type = concat(column_type, ' )'); \n--\tALTER TABLE table_name ADD column_name column_type; --geometry('point', 28992);\n--\t\n--\tRETURN column_type;\n--END;\n\n--CREATE PROCEDURE t(table_name string, column_name string, column_type string)\n--BEGIN\n--\tALTER TABLE table_name ADD column_name;\n--END;\n\n--CREATE FUNCTION t(table_name string, column_name string, srid integer, type string, dimension integer) RETURNS string \n--BEGIN\n--\tEXECUTE PROCEDURE AddGeometryColumn(table_name, column_name, srid, type, dimension);\n--\tRETURN '';\n--END;\n\n\n\n---------------------------------\n-- OGC - Simple Feature Access --\n---------------------------------\n\n--Construct a Geometry from a WKT\ncreate function st_wkttosql(wkt string) returns geometry external name geom.\"GeomFromText\";"	]
[ "sys",	"st_wkttosql",	1,	"clob",	""	]
[ "sys",	"st_x",	0,	"double",	"--Functions on Point\ncreate function st_x(geom geometry) returns double external name geom.\"X\";"	]
[ "sys",	"st_x",	1,	"geometry",	""	]
[ "sys",	"st_xmax",	0,	"double",	"--CREATE FUNCTION ST_Summary(geom Geometry) RETURNS string EXTERNAL NAME\ncreate function st_xmax(geom geometry) returns double external name geom.\"XMaxFromWKB\";"	]
[ "sys",	"st_xmax",	1,	"geometry",	""	]
[ "sys",	"st_xmax",	0,	"double",	"create function st_xmax(box mbr) returns double external name geom.\"XMaxFromMBR\";"	]
[ "sys",	"st_xmax",	1,	"mbr",	""	]
[ "sys",	"st_xmin",	0,	"double",	"create function st_xmin(geom geometry) returns double external name geom.\"XMinFromWKB\";"	]
[ "sys",	"st_xmin",	1,	"geometry",	""	]
[ "sys",	"st_xmin",	0,	"double",	"create function st_xmin(box mbr) returns double external name geom.\"XMinFromMBR\";"	]
[ "sys",	"st_xmin",	1,	"mbr",	""	]
[ "sys",	"st_y",	0,	"double",	"create function st_y(geom geometry) returns double external name geom.\"Y\";"	]
[ "sys",	"st_y",	1,	"geometry",	""	]
[ "sys",	"st_ymax",	0,	"double",	"create function st_ymax(geom geometry) returns double external name geom.\"YMaxFromWKB\";"	]
[ "sys",	"st_ymax",	1,	"geometry",	""	]
[ "sys",	"st_ymax",	0,	"double",	"create function st_ymax(box mbr) returns double external name geom.\"YMaxFromMBR\";"	]
[ "sys",	"st_ymax",	1,	"mbr",	""	]
[ "sys",	"st_ymin",	0,	"double",	"create function st_ymin(geom geometry) returns double external name geom.\"YMinFromWKB\";"	]
[ "sys",	"st_ymin",	1,	"geometry",	""	]
[ "sys",	"st_ymin",	0,	"double",	"create function st_ymin(box mbr) returns double external name geom.\"YMinFromMBR\";"	]
[ "sys",	"st_ymin",	1,	"mbr",	""	]
[ "sys",	"st_z",	0,	"double",	"create function st_z(geom geometry) returns double external name geom.\"Z\";"	]
[ "sys",	"st_z",	1,	"geometry",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val tinyint) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"tinyint",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val smallint) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"smallint",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val integer) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"int",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val wrd) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"wrd",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val bigint) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"bigint",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val real) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"real",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val double) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"double",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val date) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"date",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val time) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"time",	""	]
[ "sys",	"stddev_pop",	0,	"double",	"create aggregate stddev_pop(val timestamp) returns double\n\texternal name \"aggr\".\"stdevp\";"	]
[ "sys",	"stddev_pop",	1,	"timestamp",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate aggregate stddev_samp(val tinyint) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"tinyint",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val smallint) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"smallint",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val integer) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"int",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val wrd) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"wrd",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val bigint) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"bigint",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val real) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"real",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val double) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"double",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val date) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"date",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val time) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"time",	""	]
[ "sys",	"stddev_samp",	0,	"double",	"create aggregate stddev_samp(val timestamp) returns double\n\texternal name \"aggr\".\"stdev\";"	]
[ "sys",	"stddev_samp",	1,	"timestamp",	""	]
[ "sys",	"stop",	0,	"int",	"create procedure sys.stop(tag int)\nexternal name sql.sysmon_stop;"	]
[ "sys",	"stop",	0,	"bigint",	"create procedure sys.stop(tag bigint)\nexternal name sql.sysmon_stop;"	]
[ "sys",	"storage",	0,	"clob",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\n-- Author M.Kersten\n-- This script gives the database administrator insight in the actual\n-- footprint of the persistent tables and the maximum playground used\n-- when indices are introduced upon them.\n-- By changing the storagemodelinput table directly, the footprint for\n-- yet to be loaded databases can be assessed.\n\n-- The actual storage footprint of an existing database can be\n-- obtained by the table producing function storage()\n-- It represents the actual state of affairs, i.e. storage on disk\n-- of columns and foreign key indices, and possible temporary hash indices.\n-- For strings we take a sample to determine their average length.\n\ncreate function sys.\"storage\"()\nreturns table (\n\t\"schema\" string,\n\t\"table\" string,\n\t\"column\" string,\n\t\"type\" string,\n\t\"mode\" string,\n\tlocation string,\n\t\"count\" bigint,\n\ttypewidth int,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\tphash boolean,\n\timprints bigint,\n\tsorted boolean\n)\nexternal name sql.\"storage\";"	]
[ "sys",	"storage",	1,	"clob",	""	]
[ "sys",	"storage",	2,	"clob",	""	]
[ "sys",	"storage",	3,	"clob",	""	]
[ "sys",	"storage",	4,	"clob",	""	]
[ "sys",	"storage",	5,	"clob",	""	]
[ "sys",	"storage",	6,	"bigint",	""	]
[ "sys",	"storage",	7,	"int",	""	]
[ "sys",	"storage",	8,	"bigint",	""	]
[ "sys",	"storage",	9,	"bigint",	""	]
[ "sys",	"storage",	10,	"bigint",	""	]
[ "sys",	"storage",	11,	"boolean",	""	]
[ "sys",	"storage",	12,	"bigint",	""	]
[ "sys",	"storage",	13,	"boolean",	""	]
[ "sys",	"storagemodel",	0,	"clob",	"create function sys.storagemodel()\nreturns table (\n\t\"schema\" string,\n\t\"table\" string,\n\t\"column\" string,\n\t\"type\" string,\n\t\"count\" bigint,\n\tcolumnsize bigint,\n\theapsize bigint,\n\thashes bigint,\n\timprints bigint,\n\tsorted boolean)\nbegin\n\treturn select i.\"schema\", i.\"table\", i.\"column\", i.\"type\", i.\"count\",\n\tcolumnsize(i.\"type\", i.count, i.\"distinct\"),\n\theapsize(i.\"type\", i.\"distinct\", i.\"atomwidth\"),\n\thashsize(i.\"reference\", i.\"count\"),\n\timprintsize(i.\"count\",i.\"type\"),\n\ti.sorted\n\tfrom sys.storagemodelinput i;\nend;"	]
[ "sys",	"storagemodel",	1,	"clob",	""	]
[ "sys",	"storagemodel",	2,	"clob",	""	]
[ "sys",	"storagemodel",	3,	"clob",	""	]
[ "sys",	"storagemodel",	4,	"bigint",	""	]
[ "sys",	"storagemodel",	5,	"bigint",	""	]
[ "sys",	"storagemodel",	6,	"bigint",	""	]
[ "sys",	"storagemodel",	7,	"bigint",	""	]
[ "sys",	"storagemodel",	8,	"bigint",	""	]
[ "sys",	"storagemodel",	9,	"boolean",	""	]
[ "sys",	"str_to_date",	0,	"date",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function str_to_date(s string, format string) returns date\n\texternal name mtime.\"str_to_date\";"	]
[ "sys",	"str_to_date",	1,	"clob",	""	]
[ "sys",	"str_to_date",	2,	"clob",	""	]
[ "sys",	"str_to_time",	0,	"time",	"create function str_to_time(s string, format string) returns time\n\texternal name mtime.\"str_to_time\";"	]
[ "sys",	"str_to_time",	1,	"clob",	""	]
[ "sys",	"str_to_time",	2,	"clob",	""	]
[ "sys",	"str_to_timestamp",	0,	"timestamp",	"create function str_to_timestamp(s string, format string) returns timestamp\n\texternal name mtime.\"str_to_timestamp\";"	]
[ "sys",	"str_to_timestamp",	1,	"clob",	""	]
[ "sys",	"str_to_timestamp",	2,	"clob",	""	]
[ "sys",	"text",	0,	"clob",	"create function \"text\" (p inet) returns clob\n\texternal name inet.\"text\";"	]
[ "sys",	"text",	1,	"inet",	""	]
[ "sys",	"time_to_str",	0,	"clob",	"create function time_to_str(d time, format string) returns string\n\texternal name mtime.\"time_to_str\";"	]
[ "sys",	"time_to_str",	1,	"time",	""	]
[ "sys",	"time_to_str",	2,	"clob",	""	]
[ "sys",	"timestamp_to_str",	0,	"clob",	"create function timestamp_to_str(d timestamp, format string) returns string\n\texternal name mtime.\"timestamp_to_str\";"	]
[ "sys",	"timestamp_to_str",	1,	"timestamp",	""	]
[ "sys",	"timestamp_to_str",	2,	"clob",	""	]
[ "sys",	"tracelog",	0,	"int",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 2008-2015 MonetDB B.V.\n\n-- make the offline tracing table available for inspection\ncreate function sys.tracelog()\n\treturns table (\n\t\tevent integer,\t\t-- event counter\n\t\tclk varchar(20),\t-- wallclock, no mtime in kernel\n\t\tpc varchar(50),\t-- module.function[nr]\n\t\tthread int,\t\t-- thread identifier\n\t\tticks bigint,\t\t-- time in microseconds\n\t\trrsmb bigint,\t\t-- resident memory in MB\n\t\tvmmb bigint,\t\t-- virtual size in MB\n\t\treads bigint,\t\t-- number of blocks read\n\t\twrites bigint,\t\t-- number of blocks written\n\t\tminflt bigint,\t\t-- minor page faults\n\t\tmajflt bigint,\t\t-- major page faults\n\t\tnvcsw bigint,\t\t-- non-volantary conext switch\n\t\tstmt string\t\t-- actual statement executed\n\t)\n\texternal name sql.dump_trace;"	]
[ "sys",	"tracelog",	1,	"varchar",	""	]
[ "sys",	"tracelog",	2,	"varchar",	""	]
[ "sys",	"tracelog",	3,	"int",	""	]
[ "sys",	"tracelog",	4,	"bigint",	""	]
[ "sys",	"tracelog",	5,	"bigint",	""	]
[ "sys",	"tracelog",	6,	"bigint",	""	]
[ "sys",	"tracelog",	7,	"bigint",	""	]
[ "sys",	"tracelog",	8,	"bigint",	""	]
[ "sys",	"tracelog",	9,	"bigint",	""	]
[ "sys",	"tracelog",	10,	"bigint",	""	]
[ "sys",	"tracelog",	11,	"bigint",	""	]
[ "sys",	"tracelog",	12,	"clob",	""	]
[ "sys",	"uuid",	0,	"uuid",	"-- generate a new uuid\ncreate function sys.uuid()\nreturns uuid external name uuid.\"new\";"	]
[ "sys",	"vacuum",	0,	"clob",	"create procedure vacuum(sys string, tab string)\n\texternal name sql.vacuum;"	]
[ "sys",	"vacuum",	1,	"clob",	""	]
[ "sys",	"var",	0,	"varchar",	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;"	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val tinyint) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"tinyint",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val smallint) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"smallint",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val integer) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"int",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val wrd) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"wrd",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val bigint) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"bigint",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val real) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"real",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val double) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"double",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val date) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"date",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val time) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"time",	""	]
[ "sys",	"var_pop",	0,	"double",	"create aggregate var_pop(val timestamp) returns double\n\texternal name \"aggr\".\"variancep\";"	]
[ "sys",	"var_pop",	1,	"timestamp",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val tinyint) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"tinyint",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val smallint) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"smallint",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val integer) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"int",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val wrd) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"wrd",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val bigint) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"bigint",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val real) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"real",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val double) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"double",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val date) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"date",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val time) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"time",	""	]
[ "sys",	"var_samp",	0,	"double",	"create aggregate var_samp(val timestamp) returns double\n\texternal name \"aggr\".\"variance\";"	]
[ "sys",	"var_samp",	1,	"timestamp",	""	]
[ "sys",	"zorder_decode_x",	0,	"int",	"create function zorder_decode_x(z oid) returns integer\n    external name zorder.decode_x;"	]
[ "sys",	"zorder_decode_x",	1,	"oid",	""	]
[ "sys",	"zorder_decode_y",	0,	"int",	"create function zorder_decode_y(z oid) returns integer\n    external name zorder.decode_y;"	]
[ "sys",	"zorder_decode_y",	1,	"oid",	""	]
[ "sys",	"zorder_encode",	0,	"oid",	"-- This Source Code Form is subject to the terms of the Mozilla Public\n-- License, v. 2.0.  If a copy of the MPL was not distributed with this\n-- file, You can obtain one at http://mozilla.org/MPL/2.0/.\n--\n-- Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.\n\ncreate function zorder_encode(x integer, y integer) returns oid\n    external name zorder.encode;"	]
[ "sys",	"zorder_encode",	1,	"int",	""	]
[ "sys",	"zorder_encode",	2,	"int",	""	]

# 16:20:25 >  
# 16:20:25 >  "Done."
# 16:20:25 >  

