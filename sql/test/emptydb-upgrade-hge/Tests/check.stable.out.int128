stdout of test 'check` in directory 'sql/test/emptydb-upgrade-hge` itself:


# 16:23:48 >  
# 16:23:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32016" "--set" "mapi_usock=/var/tmp/mtest-13569/.s.monetdb.32016" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-stable/var/MonetDB/mTests_sql_test_emptydb-upgrade-hge" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 16:23:48 >  

# MonetDB 5 server v11.21.16 (hg id: c20b591c1c70+)
# This is an unreleased version
# Serving database 'mTests_sql_test_emptydb-upgrade-hge', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.da.cwi.nl:32016/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13569/.s.monetdb.32016
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 10:17:18 >  
# 10:17:18 >  "/usr/bin/python2" "check.SQL.py" "check"
# 10:17:18 >  

\dn
\dt
\dv
\ds
\df
\dSn
\dSt
\dSv
\dSs
\dSf
\dn json
\dn profiler
\dn sys
\dn tmp
\dSt sys._columns
\dSt sys._tables
\dSt sys.args
\dSt sys.auths
\dSt sys.connections
\dSt sys.db_user_info
\dSt sys.dependencies
\dSt sys.dependency_types
\dSt sys.functions
\dSt sys.idxs
\dSt sys.keys
\dSt sys.keywords
\dSt sys.objects
\dSt sys.privileges
\dSt sys.schemas
\dSt sys.sequences
\dSt sys.spatial_ref_sys
\dSt sys.statistics
\dSt sys.storagemodelinput
\dSt sys.systemfunctions
\dSt sys.table_types
\dSt sys.triggers
\dSt sys.types
\dSt sys.user_role
\dSt tmp._columns
\dSt tmp._tables
\dSt tmp.idxs
\dSt tmp.keys
\dSt tmp.objects
\dSt tmp.triggers
\dSv sys.columns
\dSv sys.environment
\dSv sys.geometry_columns
\dSv sys.optimizers
\dSv sys.querylog_calls
\dSv sys.querylog_catalog
\dSv sys.querylog_history
\dSv sys.queue
\dSv sys.rejects
\dSv sys.sessions
\dSv sys.storage
\dSv sys.storagemodel
\dSv sys.tables
\dSv sys.tablestoragemodel
\dSv sys.tracelog
\dSv sys.users
\dSf sys."abbrev"
\dSf sys."alpha"
\dSf sys."analyze"
\dSf sys."bbp"
\dSf sys."broadcast"
\dSf sys."clearrejects"
\dSf sys."columnsize"
\dSf sys."contains"
\dSf sys."corr"
\dSf sys."date_to_str"
\dSf sys."db_users"
\dSf sys."debug"
\dSf sys."degrees"
\dSf sys."dependencies_columns_on_functions"
\dSf sys."dependencies_columns_on_indexes"
\dSf sys."dependencies_columns_on_keys"
\dSf sys."dependencies_columns_on_triggers"
\dSf sys."dependencies_columns_on_views"
\dSf sys."dependencies_functions_on_functions"
\dSf sys."dependencies_functions_os_triggers"
\dSf sys."dependencies_keys_on_foreignkeys"
\dSf sys."dependencies_owners_on_schemas"
\dSf sys."dependencies_schemas_on_users"
\dSf sys."dependencies_tables_on_foreignkeys"
\dSf sys."dependencies_tables_on_functions"
\dSf sys."dependencies_tables_on_indexes"
\dSf sys."dependencies_tables_on_triggers"
\dSf sys."dependencies_tables_on_views"
\dSf sys."dependencies_views_on_functions"
\dSf sys."dependencies_views_on_triggers"
\dSf sys."env"
\dSf sys."environment"
\dSf sys."epoch"
\dSf sys."evalalgebra"
\dSf sys."flush_log"
\dSf sys."fuse"
\dSf sys."generate_series"
\dSf sys."geometrytype"
\dSf sys."get_type"
\dSf sys."getanchor"
\dSf sys."getbasename"
\dSf sys."getcontent"
\dSf sys."getcontext"
\dSf sys."getdomain"
\dSf sys."getextension"
\dSf sys."getfile"
\dSf sys."gethost"
\dSf sys."getport"
\dSf sys."getproj4"
\dSf sys."getprotocol"
\dSf sys."getquery"
\dSf sys."getroboturl"
\dSf sys."getuser"
\dSf sys."has_m"
\dSf sys."has_z"
\dSf sys."hashsize"
\dSf sys."heapsize"
\dSf sys."host"
\dSf sys."hostmask"
\dSf sys."ilike"
\dSf sys."imprintsize"
\dSf sys."internaltransform"
\dSf sys."isaurl"
\dSf sys."isauuid"
\dSf sys."left_shift"
\dSf sys."left_shift_assign"
\dSf sys."like"
\dSf sys."malfunctions"
\dSf sys."masklen"
\dSf sys."mbr"
\dSf sys."md5"
\dSf sys."median"
\dSf sys."ms_round"
\dSf sys."ms_str"
\dSf sys."ms_stuff"
\dSf sys."ms_trunc"
\dSf sys."netmask"
\dSf sys."network"
\dSf sys."newurl"
\dSf sys."optimizer_stats"
\dSf sys."optimizers"
\dSf sys."password_hash"
\dSf sys."pause"
\dSf sys."quantile"
\dSf sys."querycache"
\dSf sys."querylog"
\dSf sys."querylog_calls"
\dSf sys."querylog_catalog"
\dSf sys."querylog_disable"
\dSf sys."querylog_empty"
\dSf sys."querylog_enable"
\dSf sys."queue"
\dSf sys."radians"
\dSf sys."rejects"
\dSf sys."resume"
\dSf sys."reuse"
\dSf sys."reverse"
\dSf sys."right_shift"
\dSf sys."right_shift_assign"
\dSf sys."sessions"
\dSf sys."setmasklen"
\dSf sys."setsession"
\dSf sys."settimeout"
\dSf sys."shrink"
\dSf sys."shutdown"
\dSf sys."st_area"
\dSf sys."st_asbinary"
\dSf sys."st_asewkt"
\dSf sys."st_astext"
\dSf sys."st_bdmpolyfromtext"
\dSf sys."st_bdpolyfromtext"
\dSf sys."st_boundary"
\dSf sys."st_buffer"
\dSf sys."st_centroid"
\dSf sys."st_collect"
\dSf sys."st_contains"
\dSf sys."st_convexhull"
\dSf sys."st_coorddim"
\dSf sys."st_coveredby"
\dSf sys."st_covers"
\dSf sys."st_crosses"
\dSf sys."st_delaunaytriangles"
\dSf sys."st_difference"
\dSf sys."st_dimension"
\dSf sys."st_disjoint"
\dSf sys."st_distance"
\dSf sys."st_dump"
\dSf sys."st_dumppoints"
\dSf sys."st_dwithin"
\dSf sys."st_endpoint"
\dSf sys."st_envelope"
\dSf sys."st_equals"
\dSf sys."st_exteriorring"
\dSf sys."st_force2d"
\dSf sys."st_force3d"
\dSf sys."st_geomcollfromtext"
\dSf sys."st_geometryfromtext"
\dSf sys."st_geometryn"
\dSf sys."st_geometrytype"
\dSf sys."st_geomfromtext"
\dSf sys."st_interiorringn"
\dSf sys."st_interiorrings"
\dSf sys."st_intersection"
\dSf sys."st_intersects"
\dSf sys."st_isclosed"
\dSf sys."st_isempty"
\dSf sys."st_isring"
\dSf sys."st_issimple"
\dSf sys."st_isvalid"
\dSf sys."st_isvalidreason"
\dSf sys."st_length"
\dSf sys."st_length2d"
\dSf sys."st_linefromtext"
\dSf sys."st_makebox2d"
\dSf sys."st_makeenvelope"
\dSf sys."st_makeline"
\dSf sys."st_makepoint"
\dSf sys."st_makepointm"
\dSf sys."st_makepolygon"
\dSf sys."st_mlinefromtext"
\dSf sys."st_mpointfromtext"
\dSf sys."st_mpolyfromtext"
\dSf sys."st_npoints"
\dSf sys."st_nrings"
\dSf sys."st_numgeometries"
\dSf sys."st_numinteriorring"
\dSf sys."st_numinteriorrings"
\dSf sys."st_numpatches"
\dSf sys."st_numpoints"
\dSf sys."st_overlaps"
\dSf sys."st_patchn"
\dSf sys."st_point"
\dSf sys."st_pointfromtext"
\dSf sys."st_pointn"
\dSf sys."st_pointonsurface"
\dSf sys."st_polygon"
\dSf sys."st_polygonfromtext"
\dSf sys."st_relate"
\dSf sys."st_segmentize"
\dSf sys."st_setexteriorring"
\dSf sys."st_setsrid"
\dSf sys."st_srid"
\dSf sys."st_startpoint"
\dSf sys."st_symdifference"
\dSf sys."st_touches"
\dSf sys."st_transform"
\dSf sys."st_translate"
\dSf sys."st_union"
\dSf sys."st_within"
\dSf sys."st_wkbtosql"
\dSf sys."st_wkttosql"
\dSf sys."st_x"
\dSf sys."st_xmax"
\dSf sys."st_xmin"
\dSf sys."st_y"
\dSf sys."st_ymax"
\dSf sys."st_ymin"
\dSf sys."st_z"
\dSf sys."stddev_pop"
\dSf sys."stddev_samp"
\dSf sys."stop"
\dSf sys."storage"
\dSf sys."storagemodel"
\dSf sys."storagemodelinit"
\dSf sys."str_to_date"
\dSf sys."str_to_time"
\dSf sys."str_to_timestamp"
\dSf sys."text"
\dSf sys."time_to_str"
\dSf sys."times"
\dSf sys."timestamp_to_str"
\dSf sys."tracelog"
\dSf sys."uuid"
\dSf sys."vacuum"
\dSf sys."var"
\dSf sys."var_pop"
\dSf sys."var_samp"
\dSf sys."zorder_decode_x"
\dSf sys."zorder_decode_y"
\dSf sys."zorder_encode"
SYSTEM SCHEMA  json
SYSTEM SCHEMA profiler
SYSTEM SCHEMA  sys
SYSTEM SCHEMA  tmp
SYSTEM TABLE  sys._columns
SYSTEM TABLE  sys._tables
SYSTEM TABLE  sys.args
SYSTEM TABLE  sys.auths
SYSTEM TABLE  sys.connections
SYSTEM TABLE  sys.db_user_info
SYSTEM TABLE  sys.dependencies
SYSTEM TABLE  sys.dependency_types
SYSTEM TABLE  sys.functions
SYSTEM TABLE  sys.idxs
SYSTEM TABLE  sys.keys
SYSTEM TABLE  sys.keywords
SYSTEM TABLE  sys.objects
SYSTEM TABLE  sys.privileges
SYSTEM TABLE  sys.schemas
SYSTEM TABLE  sys.sequences
SYSTEM TABLE sys.spatial_ref_sys
SYSTEM TABLE  sys.statistics
SYSTEM TABLE  sys.storagemodelinput
SYSTEM TABLE  sys.systemfunctions
SYSTEM TABLE  sys.table_types
SYSTEM TABLE  sys.triggers
SYSTEM TABLE  sys.types
SYSTEM TABLE  sys.user_role
SYSTEM VIEW  sys.columns
SYSTEM VIEW  sys.environment
SYSTEM VIEW sys.geometry_columns
SYSTEM VIEW  sys.optimizers
SYSTEM VIEW  sys.querylog_calls
SYSTEM VIEW  sys.querylog_catalog
SYSTEM VIEW  sys.querylog_history
SYSTEM VIEW  sys.queue
SYSTEM VIEW  sys.rejects
SYSTEM VIEW  sys.sessions
SYSTEM VIEW  sys.storage
SYSTEM VIEW  sys.storagemodel
SYSTEM VIEW  sys.tables
SYSTEM VIEW  sys.tablestoragemodel
SYSTEM VIEW  sys.tracelog
SYSTEM VIEW  sys.users
SYSTEM FUNCTION sys.<
SYSTEM FUNCTION sys.<=
SYSTEM FUNCTION sys.<>
SYSTEM FUNCTION sys.=
SYSTEM FUNCTION sys.>
SYSTEM FUNCTION sys.>=
SYSTEM FUNCTION  sys.abbrev
SYSTEM FUNCTION sys.abs
SYSTEM FUNCTION sys.acos
SYSTEM FUNCTION  sys.alpha
SYSTEM FUNCTION  sys.analyze
SYSTEM FUNCTION sys.and
SYSTEM FUNCTION sys.ascii
SYSTEM FUNCTION sys.asin
SYSTEM FUNCTION sys.atan
SYSTEM FUNCTION sys.avg
SYSTEM FUNCTION  sys.bbp
SYSTEM FUNCTION sys.bit_and
SYSTEM FUNCTION sys.bit_not
SYSTEM FUNCTION sys.bit_or
SYSTEM FUNCTION sys.bit_xor
SYSTEM FUNCTION  sys.broadcast
SYSTEM FUNCTION sys.ceil
SYSTEM FUNCTION sys.ceiling
SYSTEM FUNCTION sys.char_length
SYSTEM FUNCTION sys.character_length
SYSTEM FUNCTION sys.charindex
SYSTEM FUNCTION  sys.clearrejects
SYSTEM FUNCTION sys.code
SYSTEM FUNCTION  sys.columnsize
SYSTEM FUNCTION sys.concat
SYSTEM FUNCTION  sys.contains
SYSTEM FUNCTION sys.copyfrom
SYSTEM FUNCTION  sys.corr
SYSTEM FUNCTION sys.cos
SYSTEM FUNCTION sys.cosh
SYSTEM FUNCTION sys.cot
SYSTEM FUNCTION sys.count
SYSTEM FUNCTION sys.count_no_nil
SYSTEM FUNCTION sys.curdate
SYSTEM FUNCTION sys.current_date
SYSTEM FUNCTION sys.current_time
SYSTEM FUNCTION sys.current_timestamp
SYSTEM FUNCTION sys.curtime
SYSTEM FUNCTION  sys.date_to_str
SYSTEM FUNCTION sys.day
SYSTEM FUNCTION sys.dayofmonth
SYSTEM FUNCTION sys.dayofweek
SYSTEM FUNCTION sys.dayofyear
SYSTEM FUNCTION  sys.db_users
SYSTEM FUNCTION sys.debug
SYSTEM FUNCTION  sys.degrees
SYSTEM FUNCTION sys.dense_rank
SYSTEM FUNCTION  sys.dependencies_columns_on_functions
SYSTEM FUNCTION  sys.dependencies_columns_on_indexes
SYSTEM FUNCTION  sys.dependencies_columns_on_keys
SYSTEM FUNCTION  sys.dependencies_columns_on_triggers
SYSTEM FUNCTION  sys.dependencies_columns_on_views
SYSTEM FUNCTION  sys.dependencies_functions_on_functions
SYSTEM FUNCTION  sys.dependencies_functions_os_triggers
SYSTEM FUNCTION  sys.dependencies_keys_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_owners_on_schemas
SYSTEM FUNCTION  sys.dependencies_schemas_on_users
SYSTEM FUNCTION  sys.dependencies_tables_on_foreignkeys
SYSTEM FUNCTION  sys.dependencies_tables_on_functions
SYSTEM FUNCTION  sys.dependencies_tables_on_indexes
SYSTEM FUNCTION  sys.dependencies_tables_on_triggers
SYSTEM FUNCTION  sys.dependencies_tables_on_views
SYSTEM FUNCTION  sys.dependencies_views_on_functions
SYSTEM FUNCTION  sys.dependencies_views_on_triggers
SYSTEM FUNCTION sys.diff
SYSTEM FUNCTION  sys.difference
SYSTEM FUNCTION sys.editdistance
SYSTEM FUNCTION sys.editdistance2
SYSTEM FUNCTION  sys.env
SYSTEM FUNCTION  sys.environment
SYSTEM FUNCTION  sys.epoch
SYSTEM FUNCTION  sys.evalalgebra
SYSTEM FUNCTION sys.exist
SYSTEM FUNCTION sys.exp
SYSTEM FUNCTION sys.floor
SYSTEM FUNCTION sys.flush_log
SYSTEM FUNCTION  sys.fuse
SYSTEM FUNCTION  sys.generate_series
SYSTEM FUNCTION sys.geometrytype
SYSTEM FUNCTION sys.get_type
SYSTEM FUNCTION sys.get_value_for
SYSTEM FUNCTION  sys.getanchor
SYSTEM FUNCTION  sys.getbasename
SYSTEM FUNCTION  sys.getcontent
SYSTEM FUNCTION  sys.getcontext
SYSTEM FUNCTION  sys.getdomain
SYSTEM FUNCTION  sys.getextension
SYSTEM FUNCTION  sys.getfile
SYSTEM FUNCTION  sys.gethost
SYSTEM FUNCTION  sys.getport
SYSTEM FUNCTION sys.getproj4
SYSTEM FUNCTION  sys.getprotocol
SYSTEM FUNCTION  sys.getquery
SYSTEM FUNCTION  sys.getroboturl
SYSTEM FUNCTION  sys.getuser
SYSTEM FUNCTION sys.has_m
SYSTEM FUNCTION sys.has_z
SYSTEM FUNCTION sys.hash
SYSTEM FUNCTION  sys.hashsize
SYSTEM FUNCTION  sys.heapsize
SYSTEM FUNCTION  sys.host
SYSTEM FUNCTION  sys.hostmask
SYSTEM FUNCTION sys.hour
SYSTEM FUNCTION sys.identity
SYSTEM FUNCTION sys.ifthenelse
SYSTEM FUNCTION  sys.ilike
SYSTEM FUNCTION  sys.imprintsize
SYSTEM FUNCTION sys.in
SYSTEM FUNCTION sys.index
SYSTEM FUNCTION sys.insert
SYSTEM FUNCTION sys.internaltransform
SYSTEM FUNCTION  sys.isaurl
SYSTEM FUNCTION  sys.isauuid
SYSTEM FUNCTION sys.isnull
SYSTEM FUNCTION sys.lcase
SYSTEM FUNCTION sys.left
SYSTEM FUNCTION  sys.left_shift
SYSTEM FUNCTION  sys.left_shift_assign
SYSTEM FUNCTION  sys.length
SYSTEM FUNCTION sys.levenshtein
SYSTEM FUNCTION  sys.like
SYSTEM FUNCTION sys.local_timezone
SYSTEM FUNCTION sys.localtime
SYSTEM FUNCTION sys.localtimestamp
SYSTEM FUNCTION sys.locate
SYSTEM FUNCTION sys.log
SYSTEM FUNCTION sys.log10
SYSTEM FUNCTION sys.lower
SYSTEM FUNCTION sys.lpad
SYSTEM FUNCTION sys.ltrim
SYSTEM FUNCTION sys.malfunctions
SYSTEM FUNCTION  sys.masklen
SYSTEM FUNCTION sys.max
SYSTEM FUNCTION  sys.mbr
SYSTEM FUNCTION sys.mbr_above
SYSTEM FUNCTION sys.mbr_below
SYSTEM FUNCTION sys.mbr_contained
SYSTEM FUNCTION sys.mbr_contains
SYSTEM FUNCTION sys.mbr_distance
SYSTEM FUNCTION sys.mbr_equal
SYSTEM FUNCTION sys.mbr_left
SYSTEM FUNCTION sys.mbr_overlap
SYSTEM FUNCTION sys.mbr_overlap_or_above
SYSTEM FUNCTION sys.mbr_overlap_or_below
SYSTEM FUNCTION sys.mbr_overlap_or_left
SYSTEM FUNCTION sys.mbr_overlap_or_right
SYSTEM FUNCTION sys.mbr_right
SYSTEM FUNCTION  sys.md5
SYSTEM FUNCTION  sys.median
SYSTEM FUNCTION sys.min
SYSTEM FUNCTION sys.minute
SYSTEM FUNCTION sys.mod
SYSTEM FUNCTION sys.month
SYSTEM FUNCTION  sys.ms_round
SYSTEM FUNCTION  sys.ms_str
SYSTEM FUNCTION  sys.ms_stuff
SYSTEM FUNCTION  sys.ms_trunc
SYSTEM FUNCTION  sys.netmask
SYSTEM FUNCTION  sys.network
SYSTEM FUNCTION  sys.newurl
SYSTEM FUNCTION sys.next_value_for
SYSTEM FUNCTION sys.not
SYSTEM FUNCTION sys.not_exist
SYSTEM FUNCTION sys.not_ilike
SYSTEM FUNCTION sys.not_like
SYSTEM FUNCTION sys.not_unique
SYSTEM FUNCTION sys.not_uniques
SYSTEM FUNCTION sys.octet_length
SYSTEM FUNCTION  sys.optimizer_stats
SYSTEM FUNCTION  sys.optimizers
SYSTEM FUNCTION sys.or
SYSTEM FUNCTION  sys.password_hash
SYSTEM FUNCTION sys.patindex
SYSTEM FUNCTION  sys.pause
SYSTEM FUNCTION sys.pi
SYSTEM FUNCTION sys.power
SYSTEM FUNCTION sys.prod
SYSTEM FUNCTION sys.qgramnormalize
SYSTEM FUNCTION  sys.quantile
SYSTEM FUNCTION  sys.querycache
SYSTEM FUNCTION  sys.querylog
SYSTEM FUNCTION  sys.querylog_calls
SYSTEM FUNCTION  sys.querylog_catalog
SYSTEM FUNCTION  sys.querylog_disable
SYSTEM FUNCTION  sys.querylog_empty
SYSTEM FUNCTION  sys.querylog_enable
SYSTEM FUNCTION  sys.queue
SYSTEM FUNCTION  sys.radians
SYSTEM FUNCTION sys.rand
SYSTEM FUNCTION sys.rank
SYSTEM FUNCTION  sys.rejects
SYSTEM FUNCTION sys.repeat
SYSTEM FUNCTION sys.replace
SYSTEM FUNCTION sys.restart
SYSTEM FUNCTION  sys.resume
SYSTEM FUNCTION  sys.reuse
SYSTEM FUNCTION  sys.reverse
SYSTEM FUNCTION sys.right
SYSTEM FUNCTION  sys.right_shift
SYSTEM FUNCTION  sys.right_shift_assign
SYSTEM FUNCTION sys.rotate_xor_hash
SYSTEM FUNCTION sys.round
SYSTEM FUNCTION sys.row_number
SYSTEM FUNCTION sys.rowid
SYSTEM FUNCTION sys.rpad
SYSTEM FUNCTION sys.rtrim
SYSTEM FUNCTION sys.scale_down
SYSTEM FUNCTION sys.scale_up
SYSTEM FUNCTION sys.second
SYSTEM FUNCTION  sys.sessions
SYSTEM FUNCTION  sys.setmasklen
SYSTEM FUNCTION  sys.setsession
SYSTEM FUNCTION  sys.settimeout
SYSTEM FUNCTION  sys.shrink
SYSTEM FUNCTION  sys.shutdown
SYSTEM FUNCTION sys.sign
SYSTEM FUNCTION sys.similarity
SYSTEM FUNCTION sys.sin
SYSTEM FUNCTION sys.sinh
SYSTEM FUNCTION sys.soundex
SYSTEM FUNCTION sys.space
SYSTEM FUNCTION sys.splitpart
SYSTEM FUNCTION sys.sql_add
SYSTEM FUNCTION sys.sql_div
SYSTEM FUNCTION sys.sql_max
SYSTEM FUNCTION sys.sql_min
SYSTEM FUNCTION sys.sql_mul
SYSTEM FUNCTION sys.sql_neg
SYSTEM FUNCTION sys.sql_sub
SYSTEM FUNCTION sys.sqrt
SYSTEM FUNCTION sys.st_area
SYSTEM FUNCTION sys.st_asbinary
SYSTEM FUNCTION sys.st_asewkt
SYSTEM FUNCTION sys.st_astext
SYSTEM FUNCTION sys.st_bdmpolyfromtext
SYSTEM FUNCTION sys.st_bdpolyfromtext
SYSTEM FUNCTION sys.st_boundary
SYSTEM FUNCTION sys.st_buffer
SYSTEM FUNCTION sys.st_centroid
SYSTEM FUNCTION sys.st_collect
SYSTEM FUNCTION sys.st_contains
SYSTEM FUNCTION sys.st_convexhull
SYSTEM FUNCTION sys.st_coorddim
SYSTEM FUNCTION sys.st_coveredby
SYSTEM FUNCTION sys.st_covers
SYSTEM FUNCTION sys.st_crosses
SYSTEM FUNCTION sys.st_delaunaytriangles
SYSTEM FUNCTION sys.st_difference
SYSTEM FUNCTION sys.st_dimension
SYSTEM FUNCTION sys.st_disjoint
SYSTEM FUNCTION sys.st_distance
SYSTEM FUNCTION sys.st_dump
SYSTEM FUNCTION sys.st_dumppoints
SYSTEM FUNCTION sys.st_dwithin
SYSTEM FUNCTION sys.st_endpoint
SYSTEM FUNCTION sys.st_envelope
SYSTEM FUNCTION sys.st_equals
SYSTEM FUNCTION sys.st_exteriorring
SYSTEM FUNCTION sys.st_force2d
SYSTEM FUNCTION sys.st_force3d
SYSTEM FUNCTION sys.st_geomcollfromtext
SYSTEM FUNCTION sys.st_geometryfromtext
SYSTEM FUNCTION sys.st_geometryn
SYSTEM FUNCTION sys.st_geometrytype
SYSTEM FUNCTION sys.st_geomfromtext
SYSTEM FUNCTION sys.st_interiorringn
SYSTEM FUNCTION sys.st_interiorrings
SYSTEM FUNCTION sys.st_intersection
SYSTEM FUNCTION sys.st_intersects
SYSTEM FUNCTION sys.st_isclosed
SYSTEM FUNCTION sys.st_isempty
SYSTEM FUNCTION sys.st_isring
SYSTEM FUNCTION sys.st_issimple
SYSTEM FUNCTION sys.st_isvalid
SYSTEM FUNCTION sys.st_isvalidreason
SYSTEM FUNCTION sys.st_length
SYSTEM FUNCTION sys.st_length2d
SYSTEM FUNCTION sys.st_linefromtext
SYSTEM FUNCTION sys.st_makebox2d
SYSTEM FUNCTION sys.st_makeenvelope
SYSTEM FUNCTION sys.st_makeline
SYSTEM FUNCTION sys.st_makepoint
SYSTEM FUNCTION sys.st_makepointm
SYSTEM FUNCTION sys.st_makepolygon
SYSTEM FUNCTION sys.st_mlinefromtext
SYSTEM FUNCTION sys.st_mpointfromtext
SYSTEM FUNCTION sys.st_mpolyfromtext
SYSTEM FUNCTION sys.st_npoints
SYSTEM FUNCTION sys.st_nrings
SYSTEM FUNCTION sys.st_numgeometries
SYSTEM FUNCTION sys.st_numinteriorring
SYSTEM FUNCTION sys.st_numinteriorrings
SYSTEM FUNCTION sys.st_numpatches
SYSTEM FUNCTION sys.st_numpoints
SYSTEM FUNCTION sys.st_overlaps
SYSTEM FUNCTION sys.st_patchn
SYSTEM FUNCTION sys.st_point
SYSTEM FUNCTION sys.st_pointfromtext
SYSTEM FUNCTION sys.st_pointn
SYSTEM FUNCTION sys.st_pointonsurface
SYSTEM FUNCTION sys.st_polygon
SYSTEM FUNCTION sys.st_polygonfromtext
SYSTEM FUNCTION sys.st_relate
SYSTEM FUNCTION sys.st_segmentize
SYSTEM FUNCTION sys.st_setexteriorring
SYSTEM FUNCTION sys.st_setsrid
SYSTEM FUNCTION sys.st_srid
SYSTEM FUNCTION sys.st_startpoint
SYSTEM FUNCTION sys.st_symdifference
SYSTEM FUNCTION sys.st_touches
SYSTEM FUNCTION sys.st_transform
SYSTEM FUNCTION sys.st_translate
SYSTEM FUNCTION sys.st_union
SYSTEM FUNCTION sys.st_within
SYSTEM FUNCTION sys.st_wkbtosql
SYSTEM FUNCTION sys.st_wkttosql
SYSTEM FUNCTION sys.st_x
SYSTEM FUNCTION sys.st_xmax
SYSTEM FUNCTION sys.st_xmin
SYSTEM FUNCTION sys.st_y
SYSTEM FUNCTION sys.st_ymax
SYSTEM FUNCTION sys.st_ymin
SYSTEM FUNCTION sys.st_z
SYSTEM FUNCTION  sys.stddev_pop
SYSTEM FUNCTION  sys.stddev_samp
SYSTEM FUNCTION  sys.stop
SYSTEM FUNCTION  sys.storage
SYSTEM FUNCTION  sys.storagemodel
SYSTEM FUNCTION  sys.storagemodelinit
SYSTEM FUNCTION  sys.str_to_date
SYSTEM FUNCTION  sys.str_to_time
SYSTEM FUNCTION  sys.str_to_timestamp
SYSTEM FUNCTION sys.strings
SYSTEM FUNCTION sys.substr
SYSTEM FUNCTION sys.substring
SYSTEM FUNCTION sys.sum
SYSTEM FUNCTION sys.tan
SYSTEM FUNCTION sys.tanh
SYSTEM FUNCTION  sys.text
SYSTEM FUNCTION  sys.time_to_str
SYSTEM FUNCTION  sys.times
SYSTEM FUNCTION  sys.timestamp_to_str
SYSTEM FUNCTION  sys.tracelog
SYSTEM FUNCTION sys.trim
SYSTEM FUNCTION sys.truncate
SYSTEM FUNCTION sys.ucase
SYSTEM FUNCTION sys.upper
SYSTEM FUNCTION  sys.uuid
SYSTEM FUNCTION  sys.vacuum
SYSTEM FUNCTION  sys.var
SYSTEM FUNCTION  sys.var_pop
SYSTEM FUNCTION  sys.var_samp
SYSTEM FUNCTION sys.week
SYSTEM FUNCTION sys.weekofyear
SYSTEM FUNCTION sys.xor
SYSTEM FUNCTION sys.year
SYSTEM FUNCTION sys.zero_or_one
SYSTEM FUNCTION  sys.zorder_decode_x
SYSTEM FUNCTION  sys.zorder_decode_y
SYSTEM FUNCTION  sys.zorder_encode
CREATE SCHEMA "json" AUTHORIZATION "monetdb";
CREATE SCHEMA "profiler" AUTHORIZATION "monetdb";
CREATE SCHEMA "sys";
CREATE SCHEMA "tmp";
CREATE TABLE "sys"."_columns" ("id" INTEGER, "name" VARCHAR(1024), "type" VARCHAR(1024), "type_digits" INTEGER, "type_scale" INTEGER, "table_id" INTEGER, "default" VARCHAR(2048), "null" BOOLEAN, "number" INTEGER, "storage" VARCHAR(2048));
CREATE TABLE "sys"."_tables" ("id" INTEGER, "name" VARCHAR(1024), "schema_id" INTEGER, "query" VARCHAR(2048), "type" SMALLINT, "system" BOOLEAN, "commit_action" SMALLINT, "access" SMALLINT);
CREATE TABLE "sys"."args" ("id" INTEGER, "func_id" INTEGER, "name" VARCHAR(256), "type" VARCHAR(1024), "type_digits" INTEGER, "type_scale" INTEGER, "inout" TINYINT, "number" INTEGER);
CREATE TABLE "sys"."auths" ("id" INTEGER, "name" VARCHAR(1024), "grantor" INTEGER);
CREATE TABLE "sys"."connections" ("id" INTEGER, "server" CHAR(1024), "port" INTEGER, "db" CHAR(64), "db_alias" CHAR(1024), "user" CHAR(1024), "password" CHAR(1024), "language" CHAR(1024));
CREATE TABLE "sys"."db_user_info" ("name" VARCHAR(1024), "fullname" VARCHAR(2048), "default_schema" INTEGER);
CREATE TABLE "sys"."dependencies" ("id" INTEGER, "depend_id" INTEGER, "depend_type" SMALLINT);
CREATE TABLE "sys"."dependency_types" ("dependency_type_id" SMALLINT NOT NULL, "dependency_type_name" VARCHAR(15) NOT NULL, CONSTRAINT "dependency_types_dependency_type_id_pkey" PRIMARY KEY ("dependency_type_id"), CONSTRAINT "dependency_types_dependency_type_name_unique" UNIQUE ("dependency_type_name"));
CREATE TABLE "sys"."functions" ("id" INTEGER, "name" VARCHAR(256), "func" VARCHAR(8196), "mod" VARCHAR(8196), "language" INTEGER, "type" INTEGER, "side_effect" BOOLEAN, "varres" BOOLEAN, "vararg" BOOLEAN, "schema_id" INTEGER);
CREATE TABLE "sys"."idxs" ("id" INTEGER, "table_id" INTEGER, "type" INTEGER, "name" VARCHAR(1024));
CREATE TABLE "sys"."keys" ("id" INTEGER, "table_id" INTEGER, "type" INTEGER, "name" VARCHAR(1024), "rkey" INTEGER, "action" INTEGER);
CREATE TABLE "sys"."keywords" ("keyword" VARCHAR(40) NOT NULL, CONSTRAINT "keywords_keyword_pkey" PRIMARY KEY ("keyword"));
CREATE TABLE "sys"."objects" ("id" INTEGER, "name" VARCHAR(1024), "nr" INTEGER);
CREATE TABLE "sys"."privileges" ("obj_id" INTEGER, "auth_id" INTEGER, "privileges" INTEGER, "grantor" INTEGER, "grantable" INTEGER);
CREATE TABLE "sys"."schemas" ("id" INTEGER, "name" VARCHAR(1024), "authorization" INTEGER, "owner" INTEGER, "system" BOOLEAN);
CREATE TABLE "sys"."sequences" ("id" INTEGER, "schema_id" INTEGER, "name" VARCHAR(256), "start" BIGINT, "minvalue" BIGINT, "maxvalue" BIGINT, "increment" BIGINT, "cacheinc" BIGINT, "cycle" BOOLEAN);
CREATE TABLE "sys"."spatial_ref_sys" ("srid" INTEGER NOT NULL, "auth_name" VARCHAR(256), "auth_srid" INTEGER, "srtext" VARCHAR(2048), "proj4text" VARCHAR(2048), CONSTRAINT "spatial_ref_sys_srid_pkey" PRIMARY KEY ("srid"));
CREATE TABLE "sys"."statistics" ("column_id" INTEGER, "type" CHARACTER LARGE OBJECT, "width" INTEGER, "stamp" TIMESTAMP, "sample" BIGINT, "count" BIGINT, "unique" BIGINT, "nils" BIGINT, "minval" CHARACTER LARGE OBJECT, "maxval" CHARACTER LARGE OBJECT, "sorted" BOOLEAN);
CREATE TABLE "sys"."storagemodelinput" ("schema" CHARACTER LARGE OBJECT, "table" CHARACTER LARGE OBJECT, "column" CHARACTER LARGE OBJECT, "type" CHARACTER LARGE OBJECT, "typewidth" INTEGER, "count" BIGINT, "distinct" BIGINT, "atomwidth" INTEGER, "reference" BOOLEAN, "sorted" BOOLEAN);
CREATE TABLE "sys"."systemfunctions" ("function_id" INTEGER);
CREATE TABLE "sys"."table_types" ("table_type_id" SMALLINT NOT NULL, "table_type_name" VARCHAR(25) NOT NULL, CONSTRAINT "table_types_table_type_id_pkey" PRIMARY KEY ("table_type_id"), CONSTRAINT "table_types_table_type_name_unique" UNIQUE ("table_type_name"));
CREATE TABLE "sys"."triggers" ("id" INTEGER, "name" VARCHAR(1024), "table_id" INTEGER, "time" SMALLINT, "orientation" SMALLINT, "event" SMALLINT, "old_name" VARCHAR(1024), "new_name" VARCHAR(1024), "condition" VARCHAR(2048), "statement" VARCHAR(2048));
CREATE TABLE "sys"."types" ("id" INTEGER, "systemname" VARCHAR(256), "sqlname" VARCHAR(1024), "digits" INTEGER, "scale" INTEGER, "radix" INTEGER, "eclass" INTEGER, "schema_id" INTEGER);
CREATE TABLE "sys"."user_role" ("login_id" INTEGER, "role_id" INTEGER);
CREATE TABLE "tmp"."_columns" ("id" INTEGER, "name" VARCHAR(1024), "type" VARCHAR(1024), "type_digits" INTEGER, "type_scale" INTEGER, "table_id" INTEGER, "default" VARCHAR(2048), "null" BOOLEAN, "number" INTEGER, "storage" VARCHAR(2048));
CREATE TABLE "tmp"."_tables" ("id" INTEGER, "name" VARCHAR(1024), "schema_id" INTEGER, "query" VARCHAR(2048), "type" SMALLINT, "system" BOOLEAN, "commit_action" SMALLINT, "access" SMALLINT);
CREATE TABLE "tmp"."idxs" ("id" INTEGER, "table_id" INTEGER, "type" INTEGER, "name" VARCHAR(1024));
CREATE TABLE "tmp"."keys" ("id" INTEGER, "table_id" INTEGER, "type" INTEGER, "name" VARCHAR(1024), "rkey" INTEGER, "action" INTEGER);
CREATE TABLE "tmp"."objects" ("id" INTEGER, "name" VARCHAR(1024), "nr" INTEGER);
CREATE TABLE "tmp"."triggers" ("id" INTEGER, "name" VARCHAR(1024), "table_id" INTEGER, "time" SMALLINT, "orientation" SMALLINT, "event" SMALLINT, "old_name" VARCHAR(1024), "new_name" VARCHAR(1024), "condition" VARCHAR(2048), "statement" VARCHAR(2048));
SELECT * FROM (SELECT p.* FROM "sys"."_columns" AS p UNION ALL SELECT t.* FROM "tmp"."_columns" AS t) AS columns;
create view sys.environment as select * from sys.environment();
create view geometry_columns as select e.value as f_table_catalog, s.name as f_table_schema, y.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type from schemas s, environment e, (select t.schema_id, t.name as f_table_name, x.name as f_geometry_column, has_z(info)+has_m(info)+2 as coord_dimension, srid, get_type(info, 0) as type from tables t, (select name, table_id, type_digits as info, type_scale as srid from columns where type in (select distinct sqlname from types where systemname='wkb')) as x where t.id=x.table_id) y where y.schema_id=s.id and e.name='gdk_dbname';
create view sys.optimizers as select * from sys.optimizers();
create view sys.querylog_calls as select * from sys.querylog_calls();
create view sys.querylog_catalog as select * from sys.querylog_catalog();
create view sys.querylog_history as select qd.*, ql."start",ql."stop", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io from sys.querylog_catalog() qd, sys.querylog_calls() ql where qd.id = ql.id and qd.owner = user;
create view sys.queue as select * from sys.queue();
create view sys.rejects as select * from sys.rejects();
create view sys.sessions as select * from sys.sessions();
create view sys."storage" as select * from sys."storage"();
create view sys.storagemodel as select * from sys.storagemodel();
SELECT "id", "name", "schema_id", "query", CAST(CASE WHEN "system" THEN "type" + 10 ELSE (CASE WHEN "commit_action" = 0 THEN "type" ELSE "type" + 20 END) END AS SMALLINT) AS "type", "system", "commit_action", "access", CASE WHEN (NOT "system" AND "commit_action" > 0) THEN 1 ELSE 0 END AS "temporary" FROM "sys"."_tables" WHERE "type" <> 2 UNION ALL SELECT "id", "name", "schema_id", "query", CAST("type" + 30 AS SMALLINT) AS "type", "system", "commit_action", "access", 1 AS "temporary" FROM "tmp"."_tables";
create view sys.tablestoragemodel as select "schema","table",max(count) as "count", sum(columnsize) as columnsize, sum(heapsize) as heapsize, sum(hashes) as hashes, sum(imprints) as imprints, sum(case when sorted = false then 8 * count else 0 end) as auxiliary from sys.storagemodel() group by "schema","table";
create view sys.tracelog as select * from sys.tracelog();
SELECT u."name" AS "name", ui."fullname", ui."default_schema" FROM db_users() AS u LEFT JOIN "sys"."db_user_info" AS ui ON u."name" = ui."name" ;
create function "abbrev" (p inet) returns clob external name inet."abbrev";
create function alpha(pdec double, pradius double) returns double external name sql.alpha;
create procedure sys.analyze(minmax int, "sample" bigint) external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string) external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string) external name sql.analyze;
create procedure sys.analyze(minmax int, "sample" bigint, sch string, tbl string, col string) external name sql.analyze;
create function sys.bbp () returns table (id int, name string, ttype string, count bigint, refcnt int, lrefcnt int, location string, heat int, dirty string, status string, kind string) external name bbp.get;
create function "broadcast" (p inet) returns inet external name inet."broadcast";
create procedure sys.clearrejects() external name sql.copy_rejects_clear;
create function sys.columnsize(nme string, i bigint, d bigint) returns bigint begin case when nme = 'boolean' then return i; when nme = 'char' then return 2*i; when nme = 'smallint' then return 2 * i; when nme = 'int' then return 4 * i; when nme = 'bigint' then return 8 * i; when nme = 'hugeint' then return 16 * i; when nme = 'timestamp' then return 8 * i; when nme = 'varchar' then case when cast(d as bigint) << 8 then return i; when cast(d as bigint) << 16 then return 2 * i; when cast(d as bigint) << 32 then return 4 * i; else return 8 * i; end case; else return 8 * i; end case; end;
create function contains(a geometry, x double, y double) returns boolean external name geom."Contains";
create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint external name "aggr"."corr";
create aggregate corr(e1 smallint, e2 smallint) returns smallint external name "aggr"."corr";
create aggregate corr(e1 integer, e2 integer) returns integer external name "aggr"."corr";
create aggregate corr(e1 wrd, e2 wrd) returns wrd external name "aggr"."corr";
create aggregate corr(e1 bigint, e2 bigint) returns bigint external name "aggr"."corr";
create aggregate corr(e1 real, e2 real) returns real external name "aggr"."corr";
create aggregate corr(e1 double, e2 double) returns double external name "aggr"."corr";
create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint external name "aggr"."corr";
create function date_to_str(d date, format string) returns string external name mtime."date_to_str";
CREATE FUNCTION db_users () RETURNS TABLE(name varchar(2048)) EXTERNAL NAME sql.db_users;
create function sys.debug(debug int) returns integer external name mdb."setDebug";
create function degrees(r double) returns double return r*180/pi();
create function dependencies_columns_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_columns_on_indexes() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc."name" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));
create function dependencies_columns_on_keys() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc."name" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);
create function dependencies_columns_on_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_columns_on_views() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_functions_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);
create function dependencies_functions_os_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);
create function dependencies_keys_on_foreignkeys() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);
create function dependencies_owners_on_schemas() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);
create function dependencies_schemas_on_users() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);
create function dependencies_tables_on_foreignkeys() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);
create function dependencies_tables_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);
create function dependencies_tables_on_indexes() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);
create function dependencies_tables_on_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));
create function dependencies_tables_on_views() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);
create function dependencies_views_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);
create function dependencies_views_on_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);
CREATE FUNCTION env () RETURNS TABLE(name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;
create function sys.environment() returns table ("name" string, value string) external name sql.sql_environment;
create function sys."epoch"(sec bigint) returns timestamp external name timestamp."epoch";
create function sys."epoch"(sec int) returns timestamp external name timestamp."epoch";
create function sys."epoch"(ts timestamp) returns int external name timestamp."epoch";
create function sys."epoch"(ts timestamp with time zone) returns int external name timestamp."epoch";
create procedure sys.evalalgebra(ra_stmt string, opt bool) external name sql."evalAlgebra";
create procedure sys.flush_log () external name sql."flush_log";
create function fuse(one tinyint, two tinyint) returns smallint external name udf.fuse;
create function fuse(one smallint, two smallint) returns integer external name udf.fuse;
create function fuse(one integer, two integer) returns bigint external name udf.fuse;
create function fuse(one bigint, two bigint) returns hugeint external name udf.fuse;
create function sys.generate_series(first tinyint, last tinyint) returns table (value tinyint) external name generator.series;
create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint) returns table (value tinyint) external name generator.series;
create function sys.generate_series(first smallint, last smallint) returns table (value smallint) external name generator.series;
create function sys.generate_series(first smallint, last smallint, stepsize smallint) returns table (value smallint) external name generator.series;
create function sys.generate_series(first int, last int) returns table (value int) external name generator.series;
create function sys.generate_series(first int, last int, stepsize int) returns table (value int) external name generator.series;
create function sys.generate_series(first bigint, last bigint) returns table (value bigint) external name generator.series;
create function sys.generate_series(first bigint, last bigint, stepsize bigint) returns table (value bigint) external name generator.series;
create function sys.generate_series(first real, last real, stepsize real) returns table (value real) external name generator.series;
create function sys.generate_series(first double, last double, stepsize double) returns table (value double) external name generator.series;
create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2)) returns table (value decimal(10,2)) external name generator.series;
create function sys.generate_series(first timestamp, last timestamp, stepsize interval second) returns table (value timestamp) external name generator.series;
create function sys.generate_series(first hugeint, last hugeint) returns table (value hugeint) external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint) returns table (value hugeint) external name generator.series;
create function geometrytype(geom geometry) returns string external name geom."GeometryType1";
create function get_type(info integer, format integer) returns string external name geom."getType";
create function getanchor(theurl url) returns string external name url."getAnchor";
create function getbasename(theurl url) returns string external name url."getBasename";
create function getcontent(theurl url) returns string external name url."getContent";
create function getcontext(theurl url) returns string external name url."getContext";
create function getdomain(theurl url) returns string external name url."getDomain";
create function getextension(theurl url) returns string external name url."getExtension";
create function getfile(theurl url) returns string external name url."getFile";
create function gethost(theurl url) returns string external name url."getHost";
create function getport(theurl url) returns string external name url."getPort";
create function getproj4(srid_in integer) returns string begin return select proj4text from spatial_ref_sys where srid=srid_in; end;
create function getprotocol(theurl url) returns string external name url."getProtocol";
create function getquery(theurl url) returns string external name url."getQuery";
create function getroboturl(theurl url) returns string external name url."getRobotURL";
create function getuser(theurl url) returns string external name url."getUser";
create function has_m(info integer) returns integer external name geom."hasM";
create function has_z(info integer) returns integer external name geom."hasZ";
create function sys.hashsize(b boolean, i bigint) returns bigint begin if b = true then return 8 * i; end if; return 0; end;
create function sys.heapsize(tpe string, i bigint, w int) returns bigint begin if tpe <> 'varchar' and tpe <> 'clob' then return 0; end if; return 10240 + i * w; end;
create function "host" (p inet) returns clob external name inet."host";
create function "hostmask" (p inet) returns inet external name inet."hostmask";
ilike
ilike
ilike
ilike
ilike
ilike
create filter function "ilike"(val string, pat string, esc string) external name algebra."ilike";
create filter function "ilike"(val string, pat string) external name algebra."ilike";
create function sys.imprintsize(i bigint, nme string) returns bigint begin if nme = 'boolean' or nme = 'tinyint' or nme = 'smallint' or nme = 'int' or nme = 'bigint' or nme = 'hugeint' or nme = 'decimal' or nme = 'date' or nme = 'timestamp' or nme = 'real' or nme = 'double' then return cast(i * 0.12 as bigint); end if ; return 0; end;
create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom."Transform";
create function isaurl(theurl url) returns bool external name url."isaURL";
create function sys.isauuid(u uuid) returns uuid external name uuid."isaUUID";
create function sys.isauuid(u string) returns uuid external name uuid."isaUUID";
mbrLeft
mbrLeft
<<
<<
<<
<<
<<
<<
<<
<<
<<
<<
<<
<<
create function "left_shift"(i1 inet, i2 inet) returns boolean external name inet."<<";
create function "left_shift_assign"(i1 inet, i2 inet) returns boolean external name inet."<<=";
like
like
like
like
like
like
create filter function "like"(val string, pat string, esc string) external name algebra."like";
create filter function "like"(val string, pat string) external name algebra."like";
create function sys.malfunctions() returns table("signature" string, "address" string, "comment" string) external name "manual"."functions";
create function "masklen" (p inet) returns int external name inet."masklen";
create function mbr(geom geometry) returns mbr external name geom."mbr";
create function sys.md5(v string) returns string external name clients.md5sum;
create aggregate median(val tinyint) returns tinyint external name "aggr"."median";
create aggregate median(val smallint) returns smallint external name "aggr"."median";
create aggregate median(val integer) returns integer external name "aggr"."median";
create aggregate median(val wrd) returns wrd external name "aggr"."median";
create aggregate median(val bigint) returns bigint external name "aggr"."median";
create aggregate median(val decimal) returns decimal external name "aggr"."median";
create aggregate median(val real) returns real external name "aggr"."median";
create aggregate median(val double) returns double external name "aggr"."median";
create aggregate median(val date) returns date external name "aggr"."median";
create aggregate median(val time) returns time external name "aggr"."median";
create aggregate median(val timestamp) returns timestamp external name "aggr"."median";
create aggregate median(val hugeint) returns hugeint external name "aggr"."median";
create function ms_round(num double, prc int, truncat int) returns double begin if (truncat = 0) then return round(num, prc); else return ms_trunc(num, prc); end if; end;
create function ms_str(num float, prc int, truncat int) returns string begin return cast(num as string); end;
create function ms_stuff(s1 varchar(32), st int, len int, s3 varchar(32)) returns varchar(32) begin declare res varchar(32), aux varchar(32); declare ofset int; if (st < 0 or st > length(s1)) then return ''; end if; set ofset = 1; set res = substring(s1,ofset,st-1); set res = res || s3; set ofset = st + len; set aux = substring(s1,ofset,length(s1)-ofset+1); set res = res || aux; return res; end;
create function ms_trunc(num double, prc int) returns double external name sql.ms_trunc;
create function "netmask" (p inet) returns inet external name inet."netmask";
create function "network" (p inet) returns inet external name inet."network";
create function newurl(protocol string, hostname string, "port" int, file string) returns url external name url."new";
create function newurl(protocol string, hostname string, file string) returns url external name url."new";
create function sys.optimizer_stats () returns table (rewrite string, count int) external name sql.dump_opt_stats;
create function sys.optimizers () returns table (name string, def string, status string) external name sql.optimizers;
create function sys.password_hash (username string) returns string external name sql.password;
create procedure sys.pause(tag int) external name sql.sysmon_pause;
create procedure sys.pause(tag bigint) external name sql.sysmon_pause;
create aggregate quantile(val tinyint, q double) returns tinyint external name "aggr"."quantile";
create aggregate quantile(val smallint, q double) returns smallint external name "aggr"."quantile";
create aggregate quantile(val integer, q double) returns integer external name "aggr"."quantile";
create aggregate quantile(val wrd, q double) returns wrd external name "aggr"."quantile";
create aggregate quantile(val bigint, q double) returns bigint external name "aggr"."quantile";
create aggregate quantile(val decimal, q double) returns decimal external name "aggr"."quantile";
create aggregate quantile(val real, q double) returns real external name "aggr"."quantile";
create aggregate quantile(val double, q double) returns double external name "aggr"."quantile";
create aggregate quantile(val date, q double) returns date external name "aggr"."quantile";
create aggregate quantile(val time, q double) returns time external name "aggr"."quantile";
create aggregate quantile(val timestamp, q double) returns timestamp external name "aggr"."quantile";
create aggregate quantile(val hugeint, q double) returns hugeint external name "aggr"."quantile";
create function sys.querycache() returns table (query string, count int) external name sql.dump_cache;
create procedure sys.querylog(filename string) external name sql.logfile;
create function sys.querylog_calls() returns table(id oid, "start" timestamp, "stop" timestamp, arguments string, tuples wrd, run bigint, ship bigint, cpu int, io int) external name sql.querylog_calls;
create function sys.querylog_catalog() returns table(id oid, owner string, defined timestamp, query string, pipe string, "plan" string, mal int, optimize bigint) external name sql.querylog_catalog;
create procedure sys.querylog_disable() external name sql.querylog_disable;
create procedure sys.querylog_empty() external name sql.querylog_empty;
create procedure sys.querylog_enable() external name sql.querylog_enable;
create procedure sys.querylog_enable(threshold smallint) external name sql.querylog_enable_threshold;
create function sys.queue() returns table(qtag bigint, "user" string, started timestamp, estimate timestamp, progress int, status string, tag oid, query string) external name sql.sysmon_queue;
create function radians(d double) returns double return d*pi()/180;
create function sys.rejects() returns table(rowid bigint, fldid int, "message" string, "input" string) external name sql.copy_rejects;
create procedure sys.resume(tag int) external name sql.sysmon_resume;
create procedure sys.resume(tag bigint) external name sql.sysmon_resume;
create procedure reuse(sys string, tab string) external name sql.reuse;
create function reverse(src string) returns string external name udf.reverse;
mbrRight
mbrRight
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
create function "right_shift"(i1 inet, i2 inet) returns boolean external name inet.">>";
create function "right_shift_assign"(i1 inet, i2 inet) returns boolean external name inet.">>=";
create function sys.sessions() returns table("user" string, "login" timestamp, "sessiontimeout" bigint, "lastcommand" timestamp, "querytimeout" bigint, "active" bool) external name sql.sessions;
create function "setmasklen" (p inet, mask int) returns inet external name inet."setmasklen";
create procedure sys.setsession("timeout" bigint) external name sql.setsession;
create procedure sys.settimeout("query" bigint) external name sql.settimeout;
create procedure sys.settimeout("query" bigint, "session" bigint) external name sql.settimeout;
create procedure shrink(sys string, tab string) external name sql.shrink;
create procedure sys.shutdown(delay tinyint) external name sql.shutdown;
create procedure sys.shutdown(delay tinyint, force bool) external name sql.shutdown;
create function st_area(geom geometry) returns double external name geom."Area";
create function st_asbinary(geom geometry) returns string external name geom."AsBinary";
create function st_asewkt(geom geometry) returns string external name geom."AsEWKT";
create function st_astext(geom geometry) returns string external name geom."AsText";
create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom."BdMPolyFromText";
create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom."BdPolyFromText";
create function st_boundary(geom geometry) returns geometry external name geom."Boundary";
create function st_buffer(geom geometry, radius double) returns geometry external name geom."Buffer";
create function st_centroid(geom geometry) returns geometry external name geom."Centroid";
create function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom."Union";
create aggregate st_collect(geom geometry) returns geometry external name geom."Union";
create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom."mbrContains";
create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom."Contains";
create function st_convexhull(geom geometry) returns geometry external name geom."ConvexHull";
create function st_coorddim(geom geometry) returns integer external name geom."CoordDim";
create function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom."CoveredBy";
create function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom."Covers";
create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom."Crosses";
create function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom."DelaunayTriangles";
create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom."Difference";
create function st_dimension(geom geometry) returns integer external name geom."Dimension";
create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom."Disjoint";
create function st_distance(box1 mbr, box2 mbr) returns double external name geom."mbrDistance";
create function st_distance(geom1 geometry, geom2 geometry) returns double external name geom."Distance";
create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom."Dump";
create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom."DumpPoints";
create function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom."DWithin";
create function st_endpoint(geom geometry) returns geometry external name geom."EndPoint";
create function st_envelope(geom geometry) returns geometry external name geom."Envelope";
create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom."mbrEqual";
create function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom."Equals";
create function st_exteriorring(geom geometry) returns geometry external name geom."ExteriorRing";
create function st_force2d(geom geometry) returns geometry external name geom."Force2D";
create function st_force3d(geom geometry) returns geometry external name geom."Force3D";
create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom."GeomCollFromText";
create function st_geomcollfromtext(wkt string) returns geometry external name geom."GeomCollFromText";
create function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom."GeomFromText";
create function st_geometryfromtext(wkt string) returns geometry external name geom."GeomFromText";
create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom."GeometryN";
create function st_geometrytype(geom geometry) returns string external name geom."GeometryType2";
create function st_geomfromtext(wkt string, srid integer) returns geometry external name geom."GeomFromText";
create function st_geomfromtext(wkt string) returns geometry external name geom."GeomFromText";
create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom."InteriorRingN";
create function st_interiorrings(geom geometry) returns geometrya external name geom."InteriorRings";
create function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom."Intersection";
create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom."Intersects";
create function st_isclosed(geom geometry) returns boolean external name geom."IsClosed";
create function st_isempty(geom geometry) returns boolean external name geom."IsEmpty";
create function st_isring(geom geometry) returns boolean external name geom."IsRing";
create function st_issimple(geom geometry) returns boolean external name geom."IsSimple";
create function st_isvalid(geom geometry) returns boolean external name geom."IsValid";
create function st_isvalidreason(geom geometry) returns string external name geom."IsValidReason";
create function st_length(geom geometry) returns double external name geom."Length";
create function st_length2d(geom geometry) returns double external name geom."Length";
create function st_linefromtext(wkt string, srid integer) returns geometry external name geom."LineFromText";
create function st_linefromtext(wkt string) returns geometry external name geom."LineFromText";
create function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom."MakeBox2D";
create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom."MakeEnvelope";
create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom."MakeEnvelope";
create aggregate st_makeline(geom geometry) returns geometry external name geom."MakeLine";
create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom."MakeLine";
create function st_makepoint(x double, y double) returns geometry external name geom."MakePoint";
create function st_makepoint(x double, y double, z double) returns geometry external name geom."MakePoint";
create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom."MakePoint";
create function st_makepointm(x double, y double, m double) returns geometry external name geom."MakePointM";
create function st_makepolygon(geom geometry) returns geometry external name geom."MakePolygon";
create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom."MLineFromText";
create function st_mlinefromtext(wkt string) returns geometry external name geom."MLineFromText";
create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom."MPointFromText";
create function st_mpointfromtext(wkt string) returns geometry external name geom."MPointFromText";
create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom."MPolyFromText";
create function st_mpolyfromtext(wkt string) returns geometry external name geom."MPolyFromText";
create function st_npoints(geom geometry) returns integer external name geom."NPoints";
create function st_nrings(geom geometry) returns integer external name geom."NRings";
create function st_numgeometries(geom geometry) returns integer external name geom."NumGeometries";
create function st_numinteriorring(geom geometry) returns integer external name geom."NumInteriorRings";
create function st_numinteriorrings(geom geometry) returns integer external name geom."NumInteriorRings";
create function st_numpatches(geom geometry) returns integer begin return select st_numgeometries(geom); end;
create function st_numpoints(geom geometry) returns integer external name geom."NumPoints";
create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom."mbrOverlaps";
create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom."Overlaps";
create function st_patchn(geom geometry, patchnum integer) returns geometry begin return select st_geometryn(geom, patchnum); end;
create function st_point(x double, y double) returns geometry external name geom."MakePoint";
create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom."PointFromText";
create function st_pointfromtext(wkt string) returns geometry external name geom."PointFromText";
create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom."PointN";
create function st_pointonsurface(geom geometry) returns geometry external name geom."PointOnSurface";
create function st_polygon(geom geometry, srid integer) returns geometry external name geom."MakePolygon";
create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom."PolygonFromText";
create function st_polygonfromtext(wkt string) returns geometry external name geom."PolygonFromText";
create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom."Relate";
create function st_segmentize(geom geometry, sz double) returns geometry external name geom."Segmentize";
create function st_setexteriorring(geom geometry) returns geometry external name geom."MakePolygon";
create function st_setsrid(geom geometry, srid integer) returns geometry external name geom."setSRID";
create function st_srid(geom geometry) returns integer external name geom."getSRID";
create function st_startpoint(geom geometry) returns geometry external name geom."StartPoint";
create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom."SymDifference";
create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom."Touches";
create function st_transform(geom geometry, srid integer) returns geometry begin declare srid_src integer; declare proj4_src string; declare proj4_dest string; select st_srid(geom) into srid_src; select getproj4(srid_src) into proj4_src; select getproj4(srid) into proj4_dest; if proj4_src is null then return select internaltransform(geom, srid_src, srid, 'null', proj4_dest); else if proj4_dest is null then return select internaltransform(geom, srid_src, srid, proj4_src, 'null'); else return select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest); end if; end if; end;
create function st_translate(geom geometry, dx double, dy double) returns geometry external name geom."Translate";
create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom."Translate";
create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom."Union";
create aggregate st_union(geom geometry) returns geometry external name geom."Union";
create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom."Within";
create function st_wkbtosql(geom string) returns geometry external name geom."FromBinary";
create function st_wkttosql(wkt string) returns geometry external name geom."GeomFromText";
create function st_x(geom geometry) returns double external name geom."X";
create function st_xmax(geom geometry) returns double external name geom."XMaxFromWKB";
create function st_xmax(box mbr) returns double external name geom."XMaxFromMBR";
create function st_xmin(geom geometry) returns double external name geom."XMinFromWKB";
create function st_xmin(box mbr) returns double external name geom."XMinFromMBR";
create function st_y(geom geometry) returns double external name geom."Y";
create function st_ymax(geom geometry) returns double external name geom."YMaxFromWKB";
create function st_ymax(box mbr) returns double external name geom."YMaxFromMBR";
create function st_ymin(geom geometry) returns double external name geom."YMinFromWKB";
create function st_ymin(box mbr) returns double external name geom."YMinFromMBR";
create function st_z(geom geometry) returns double external name geom."Z";
create aggregate stddev_pop(val tinyint) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val smallint) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val integer) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val wrd) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val bigint) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val real) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val double) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val date) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val time) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val timestamp) returns double external name "aggr"."stdevp";
create aggregate stddev_pop(val hugeint) returns double external name "aggr"."stdevp";
create aggregate stddev_samp(val tinyint) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val smallint) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val integer) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val wrd) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val bigint) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val real) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val double) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val date) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val time) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val timestamp) returns double external name "aggr"."stdev";
create aggregate stddev_samp(val hugeint) returns double external name "aggr"."stdev";
create procedure sys.stop(tag int) external name sql.sysmon_stop;
create procedure sys.stop(tag bigint) external name sql.sysmon_stop;
create function sys."storage"() returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean) external name sql."storage";
create function sys."storage"(sname string) returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean) external name sql."storage";
create function sys."storage"(sname string, tname string) returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean) external name sql."storage";
create function sys."storage"(sname string, tname string, cname string) returns table ("schema" string, "table" string, "column" string, "type" string, "mode" string, location string, "count" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean) external name sql."storage";
create function sys.storagemodel() returns table ("schema" string, "table" string, "column" string, "type" string, "count" bigint, columnsize bigint, heapsize bigint, hashes bigint, imprints bigint, sorted boolean) begin return select i."schema", i."table", i."column", i."type", i."count", columnsize(i."type", i.count, i."distinct"), heapsize(i."type", i."distinct", i."atomwidth"), hashsize(i."reference", i."count"), imprintsize(i."count",i."type"), i.sorted from sys.storagemodelinput i; end;
create procedure sys.storagemodelinit() begin delete from sys.storagemodelinput; insert into sys.storagemodelinput select x."schema", x."table", x."column", x."type", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys."storage"() x; update sys.storagemodelinput set reference = true where concat(concat("schema","table"), "column") in (select concat(concat("fkschema"."name", "fktable"."name"), "fkkeycol"."name") from "sys"."keys" as "fkkey", "sys"."objects" as "fkkeycol", "sys"."tables" as "fktable", "sys"."schemas" as "fkschema" where "fktable"."id" = "fkkey"."table_id" and "fkkey"."id" = "fkkeycol"."id" and "fkschema"."id" = "fktable"."schema_id" and "fkkey"."rkey" > -1); update sys.storagemodelinput set "distinct" = "count" where "type" = 'varchar' or "type"='clob'; end;
create function str_to_date(s string, format string) returns date external name mtime."str_to_date";
create function str_to_time(s string, format string) returns time external name mtime."str_to_time";
create function str_to_timestamp(s string, format string) returns timestamp external name mtime."str_to_timestamp";
create function "text" (p inet) returns clob external name inet."text";
create function time_to_str(d time, format string) returns string external name mtime."time_to_str";
create procedure times() external name sql.times;
create function timestamp_to_str(d timestamp, format string) returns string external name mtime."timestamp_to_str";
create function sys.tracelog() returns table (event integer, clk varchar(20), pc varchar(50), thread int, ticks bigint, rrsmb bigint, vmmb bigint, reads bigint, writes bigint, minflt bigint, majflt bigint, nvcsw bigint, stmt string) external name sql.dump_trace;
create function sys.uuid() returns uuid external name uuid."new";
create procedure vacuum(sys string, tab string) external name sql.vacuum;
CREATE FUNCTION var() RETURNS TABLE(name varchar(1024)) EXTERNAL NAME sql.sql_variables;
create aggregate var_pop(val tinyint) returns double external name "aggr"."variancep";
create aggregate var_pop(val smallint) returns double external name "aggr"."variancep";
create aggregate var_pop(val integer) returns double external name "aggr"."variancep";
create aggregate var_pop(val wrd) returns double external name "aggr"."variancep";
create aggregate var_pop(val bigint) returns double external name "aggr"."variancep";
create aggregate var_pop(val real) returns double external name "aggr"."variancep";
create aggregate var_pop(val double) returns double external name "aggr"."variancep";
create aggregate var_pop(val date) returns double external name "aggr"."variancep";
create aggregate var_pop(val time) returns double external name "aggr"."variancep";
create aggregate var_pop(val timestamp) returns double external name "aggr"."variancep";
create aggregate var_pop(val hugeint) returns double external name "aggr"."variancep";
create aggregate var_samp(val tinyint) returns double external name "aggr"."variance";
create aggregate var_samp(val smallint) returns double external name "aggr"."variance";
create aggregate var_samp(val integer) returns double external name "aggr"."variance";
create aggregate var_samp(val wrd) returns double external name "aggr"."variance";
create aggregate var_samp(val bigint) returns double external name "aggr"."variance";
create aggregate var_samp(val real) returns double external name "aggr"."variance";
create aggregate var_samp(val double) returns double external name "aggr"."variance";
create aggregate var_samp(val date) returns double external name "aggr"."variance";
create aggregate var_samp(val time) returns double external name "aggr"."variance";
create aggregate var_samp(val timestamp) returns double external name "aggr"."variance";
create aggregate var_samp(val hugeint) returns double external name "aggr"."variance";
create function zorder_decode_x(z oid) returns integer external name zorder.decode_x;
create function zorder_decode_y(z oid) returns integer external name zorder.decode_y;
create function zorder_encode(x integer, y integer) returns oid external name zorder.encode;

-- schemas
select name, authorization, owner, system from sys.schemas order by name;
-- _tables
select s.name, t.name, t.query, t.type, t.system, t.commit_action, t.access from sys._tables t left outer join sys.schemas s on t.schema_id = s.id order by s.name, t.name;
-- _columns
select t.name, c.name, c.type, c.type_digits, c.type_scale, c."default", c."null", c.number, c.storage from sys._tables t, sys._columns c where t.id = c.table_id order by t.name, c.number;
-- functions
select s.name, f.name, f.func, f.mod, f.language, f.type, f.side_effect, f.varres, f.vararg from sys.functions f left outer join sys.schemas s on f.schema_id = s.id order by s.name, f.name, f.func;
-- args
select f.name, a.name, a.type, a.type_digits, a.type_scale, a.inout, a.number from sys.args a left outer join sys.functions f on a.func_id = f.id order by f.name, a.func_id, a.number;
-- auths
select name, grantor from sys.auths;
-- connections (expect empty)
select server, port, db, db_alias, user, password, language from sys.connections order by server, port;
-- db_user_info
select u.name, u.fullname, s.name from sys.db_user_info u left outer join sys.schemas s on u.default_schema = s.id order by u.name;
-- dependencies
select count(*) from sys.dependencies;
-- idxs
select t.name, i.name, i.type from sys.idxs i left outer join sys._tables t on t.id = i.table_id order by t.name, i.name;
-- keys
with x as (select k.id as id, t.name as tname, k.name as kname, k.type as type, k.rkey as rkey, k.action as action from sys.keys k left outer join sys._tables t on t.id = k.table_id) select x.tname, x.kname, x.type, y.kname, x.action from x left outer join x y on x.rkey = y.id order by x.tname, x.kname;
-- objects
select name, nr from sys.objects order by name, nr;
-- privileges
--  tables
select t.name, a.name, p.privileges, g.name, p.grantable from sys._tables t, sys.privileges p left outer join sys.auths g on p.grantor = g.id, sys.auths a where t.id = p.obj_id and p.auth_id = a.id order by t.name, a.name;
--  columns
select t.name, c.name, a.name, p.privileges, g.name, p.grantable from sys._tables t, sys._columns c, sys.privileges p left outer join sys.auths g on p.grantor = g.id, sys.auths a where c.id = p.obj_id and c.table_id = t.id and p.auth_id = a.id order by t.name, c.name, a.name;
--  functions
select f.name, a.name, p.privileges, g.name, p.grantable from sys.functions f, sys.privileges p left outer join sys.auths g on p.grantor = g.id, sys.auths a where f.id = p.obj_id and p.auth_id = a.id order by f.name, a.name;
-- sequences
select s.name, q.name, q.start, q.minvalue, q.maxvalue, q.increment, q.cacheinc, q.cycle from sys.sequences q left outer join sys.schemas s on q.schema_id = s.id order by s.name, q.name;
-- statistics (expect empty)
select count(*) from sys.statistics;
-- storagemodelinput (expect empty)
select count(*) from sys.storagemodelinput;
-- systemfunctions
select f.name from sys.systemfunctions s left outer join sys.functions f on s.function_id = f.id order by f.name;
-- triggers
select t.name, g.name, g.time, g.orientation, g.event, g.old_name, g.new_name, g.condition, g.statement from sys.triggers g left outer join sys._tables t on g.table_id = t.id order by t.name, g.name;
-- types
select s.name, t.systemname, t.sqlname, t.digits, t.scale, t.radix, t.eclass from sys.types t left outer join sys.schemas s on s.id = t.schema_id order by s.name, t.systemname, t.sqlname, t.digits, t.scale, t.radix, t.eclass;
-- user_role
select a1.name, a2.name from sys.auths a1, sys.auths a2, sys.user_role ur where a1.id = ur.login_id and a2.id = ur.role_id order by a1.name, a2.name;
-- keywords
select keyword from sys.keywords order by keyword;
-- table_types
select table_type_id, table_type_name from sys.table_types order by table_type_id, table_type_name;
-- dependency_types
select dependency_type_id, dependency_type_name from sys.dependency_types order by dependency_type_id, dependency_type_name;
#select name, authorization, owner, system from sys.schemas order by name;
% sys.schemas,	sys.schemas,	sys.schemas,	sys.schemas # table_name
% name,	authorization,	owner,	system # name
% varchar,	int,	int,	boolean # type
% 8,	1,	1,	5 # length
[ "json",	3,	3,	true	]
[ "profiler",	3,	3,	true	]
[ "sys",	2,	3,	true	]
[ "tmp",	2,	3,	true	]
#select s.name, t.name, t.query, t.type, t.system, t.commit_action, t.access from _tables t left outer join schemas s on t.schema_id = s.id order by s.name, t.name;
% .s,	.t,	.t,	.t,	.t,	.t,	.t # table_name
% name,	name,	query,	type,	system,	commit_action,	access # name
% varchar,	varchar,	varchar,	smallint,	boolean,	smallint,	smallint # type
% 3,	17,	613,	1,	5,	1,	1 # length
[ "sys",	"_columns",	NULL,	0,	true,	0,	0	]
[ "sys",	"_tables",	NULL,	0,	true,	0,	0	]
[ "sys",	"args",	NULL,	0,	true,	0,	0	]
[ "sys",	"auths",	NULL,	0,	true,	0,	0	]
[ "sys",	"columns",	"SELECT * FROM (SELECT p.* FROM \"sys\".\"_columns\" AS p UNION ALL SELECT t.* FROM \"tmp\".\"_columns\" AS t) AS columns;",	1,	true,	0,	0	]
[ "sys",	"connections",	NULL,	0,	true,	0,	0	]
[ "sys",	"db_user_info",	NULL,	0,	true,	0,	0	]
[ "sys",	"dependencies",	NULL,	0,	true,	0,	0	]
[ "sys",	"dependency_types",	NULL,	0,	true,	0,	0	]
[ "sys",	"environment",	"create view sys.environment as select * from sys.environment();",	1,	true,	0,	0	]
[ "sys",	"functions",	NULL,	0,	true,	0,	0	]
[ "sys",	"geometry_columns",	"create view geometry_columns as select e.value as f_table_catalog, s.name as f_table_schema, y.f_table_name, y.f_geometry_column, y.coord_dimension, y.srid, y.type from schemas s, environment e, ( select t.schema_id, t.name as f_table_name, x.name as f_geometry_column, has_z(info)+has_m(info)+2 as coord_dimension, srid, get_type(info, 0) as type from tables t, ( select name, table_id, type_digits as info, type_scale as srid from columns where type in ( select distinct sqlname from types where systemname='wkb') ) as x where t.id=x.table_id ) y where y.schema_id=s.id and e.name='gdk_dbname';",	1,	true,	0,	0	]
[ "sys",	"idxs",	NULL,	0,	true,	0,	0	]
[ "sys",	"keys",	NULL,	0,	true,	0,	0	]
[ "sys",	"keywords",	NULL,	0,	true,	0,	0	]
[ "sys",	"objects",	NULL,	0,	true,	0,	0	]
[ "sys",	"optimizers",	"create view sys.optimizers as select * from sys.optimizers();",	1,	true,	0,	0	]
[ "sys",	"privileges",	NULL,	0,	true,	0,	0	]
[ "sys",	"querylog_calls",	"create view sys.querylog_calls as select * from sys.querylog_calls();",	1,	true,	0,	0	]
[ "sys",	"querylog_catalog",	"create view sys.querylog_catalog as select * from sys.querylog_catalog();",	1,	true,	0,	0	]
[ "sys",	"querylog_history",	"create view sys.querylog_history as select qd.*, ql.\"start\",ql.\"stop\", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.io from sys.querylog_catalog() qd, sys.querylog_calls() ql where qd.id = ql.id and qd.owner = user;",	1,	true,	0,	0	]
[ "sys",	"queue",	"create view sys.queue as select * from sys.queue();",	1,	true,	0,	0	]
[ "sys",	"rejects",	"create view sys.rejects as select * from sys.rejects();",	1,	true,	0,	0	]
[ "sys",	"schemas",	NULL,	0,	true,	0,	0	]
[ "sys",	"sequences",	NULL,	0,	true,	0,	0	]
[ "sys",	"sessions",	"create view sys.sessions as select * from sys.sessions();",	1,	true,	0,	0	]
[ "sys",	"spatial_ref_sys",	NULL,	0,	true,	0,	0	]
[ "sys",	"statistics",	NULL,	0,	true,	0,	0	]
[ "sys",	"storage",	"create view sys.\"storage\" as select * from sys.\"storage\"();",	1,	true,	0,	0	]
[ "sys",	"storagemodel",	"create view sys.storagemodel as select * from sys.storagemodel();",	1,	true,	0,	0	]
[ "sys",	"storagemodelinput",	NULL,	0,	true,	0,	0	]
[ "sys",	"systemfunctions",	NULL,	0,	true,	0,	0	]
[ "sys",	"table_types",	NULL,	0,	true,	0,	0	]
[ "sys",	"tables",	"SELECT \"id\", \"name\", \"schema_id\", \"query\", CAST(CASE WHEN \"system\" THEN \"type\" + 10 /* system table/view */ ELSE (CASE WHEN \"commit_action\" = 0 THEN \"type\" /* table/view */ ELSE \"type\" + 20 /* global temp table */ END) END AS SMALLINT) AS \"type\", \"system\", \"commit_action\", \"access\", CASE WHEN (NOT \"system\" AND \"commit_action\" > 0) THEN 1 ELSE 0 END AS \"temporary\" FROM \"sys\".\"_tables\" WHERE \"type\" <> 2 UNION ALL SELECT \"id\", \"name\", \"schema_id\", \"query\", CAST(\"type\" + 30 /* local temp table */ AS SMALLINT) AS \"type\", \"system\", \"commit_action\", \"access\", 1 AS \"temporary\" FROM \"tmp\".\"_tables\";",	1,	true,	0,	0	]
[ "sys",	"tablestoragemodel",	"create view sys.tablestoragemodel as select \"schema\",\"table\",max(count) as \"count\", sum(columnsize) as columnsize, sum(heapsize) as heapsize, sum(hashes) as hashes, sum(imprints) as imprints, sum(case when sorted = false then 8 * count else 0 end) as auxiliary from sys.storagemodel() group by \"schema\",\"table\";",	1,	true,	0,	0	]
[ "sys",	"tracelog",	"create view sys.tracelog as select * from sys.tracelog();",	1,	true,	0,	0	]
[ "sys",	"triggers",	NULL,	0,	true,	0,	0	]
[ "sys",	"types",	NULL,	0,	true,	0,	0	]
[ "sys",	"user_role",	NULL,	0,	true,	0,	0	]
[ "sys",	"users",	"SELECT u.\"name\" AS \"name\", ui.\"fullname\", ui.\"default_schema\" FROM db_users() AS u LEFT JOIN \"sys\".\"db_user_info\" AS ui ON u.\"name\" = ui.\"name\" ;",	1,	true,	0,	0	]
[ "tmp",	"_columns",	NULL,	0,	true,	2,	0	]
[ "tmp",	"_tables",	NULL,	0,	true,	2,	0	]
[ "tmp",	"idxs",	NULL,	0,	true,	2,	0	]
[ "tmp",	"keys",	NULL,	0,	true,	2,	0	]
[ "tmp",	"objects",	NULL,	0,	true,	2,	0	]
[ "tmp",	"triggers",	NULL,	0,	true,	2,	0	]
#select t.name, c.name, c.type, c.type_digits, c.type_scale, c."default", c."null", c.number, c.storage from _tables t, _columns c where t.id = c.table_id order by t.name, c.number;
% sys.t,	sys.c,	sys.c,	sys.c,	sys.c,	sys.c,	sys.c,	sys.c,	sys.c # table_name
% name,	name,	type,	type_digits,	type_scale,	default,	null,	number,	storage # name
% varchar,	varchar,	varchar,	int,	int,	varchar,	boolean,	int,	varchar # type
% 17,	20,	9,	4,	1,	0,	5,	2,	0 # length
[ "_columns",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "_columns",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "_columns",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "_columns",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "_columns",	"type",	"varchar",	1024,	0,	NULL,	true,	2,	NULL	]
[ "_columns",	"type",	"varchar",	1024,	0,	NULL,	true,	2,	NULL	]
[ "_columns",	"type_digits",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "_columns",	"type_digits",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "_columns",	"type_scale",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "_columns",	"type_scale",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "_columns",	"table_id",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "_columns",	"table_id",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "_columns",	"default",	"varchar",	2048,	0,	NULL,	true,	6,	NULL	]
[ "_columns",	"default",	"varchar",	2048,	0,	NULL,	true,	6,	NULL	]
[ "_columns",	"null",	"boolean",	1,	0,	NULL,	true,	7,	NULL	]
[ "_columns",	"null",	"boolean",	1,	0,	NULL,	true,	7,	NULL	]
[ "_columns",	"number",	"int",	32,	0,	NULL,	true,	8,	NULL	]
[ "_columns",	"number",	"int",	32,	0,	NULL,	true,	8,	NULL	]
[ "_columns",	"storage",	"varchar",	2048,	0,	NULL,	true,	9,	NULL	]
[ "_columns",	"storage",	"varchar",	2048,	0,	NULL,	true,	9,	NULL	]
[ "_tables",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "_tables",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "_tables",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "_tables",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "_tables",	"schema_id",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "_tables",	"schema_id",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "_tables",	"query",	"varchar",	2048,	0,	NULL,	true,	3,	NULL	]
[ "_tables",	"query",	"varchar",	2048,	0,	NULL,	true,	3,	NULL	]
[ "_tables",	"type",	"smallint",	16,	0,	NULL,	true,	4,	NULL	]
[ "_tables",	"type",	"smallint",	16,	0,	NULL,	true,	4,	NULL	]
[ "_tables",	"system",	"boolean",	1,	0,	NULL,	true,	5,	NULL	]
[ "_tables",	"system",	"boolean",	1,	0,	NULL,	true,	5,	NULL	]
[ "_tables",	"commit_action",	"smallint",	16,	0,	NULL,	true,	6,	NULL	]
[ "_tables",	"commit_action",	"smallint",	16,	0,	NULL,	true,	6,	NULL	]
[ "_tables",	"access",	"smallint",	16,	0,	NULL,	true,	7,	NULL	]
[ "_tables",	"access",	"smallint",	16,	0,	NULL,	true,	7,	NULL	]
[ "args",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "args",	"func_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "args",	"name",	"varchar",	256,	0,	NULL,	true,	2,	NULL	]
[ "args",	"type",	"varchar",	1024,	0,	NULL,	true,	3,	NULL	]
[ "args",	"type_digits",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "args",	"type_scale",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "args",	"inout",	"tinyint",	8,	0,	NULL,	true,	6,	NULL	]
[ "args",	"number",	"int",	32,	0,	NULL,	true,	7,	NULL	]
[ "auths",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "auths",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "auths",	"grantor",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "columns",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "columns",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "columns",	"type",	"varchar",	1024,	0,	NULL,	true,	2,	NULL	]
[ "columns",	"type_digits",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "columns",	"type_scale",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "columns",	"table_id",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "columns",	"default",	"varchar",	2048,	0,	NULL,	true,	6,	NULL	]
[ "columns",	"null",	"boolean",	1,	0,	NULL,	true,	7,	NULL	]
[ "columns",	"number",	"int",	32,	0,	NULL,	true,	8,	NULL	]
[ "columns",	"storage",	"varchar",	2048,	0,	NULL,	true,	9,	NULL	]
[ "connections",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "connections",	"server",	"char",	1024,	0,	NULL,	true,	1,	NULL	]
[ "connections",	"port",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "connections",	"db",	"char",	64,	0,	NULL,	true,	3,	NULL	]
[ "connections",	"db_alias",	"char",	1024,	0,	NULL,	true,	4,	NULL	]
[ "connections",	"user",	"char",	1024,	0,	NULL,	true,	5,	NULL	]
[ "connections",	"password",	"char",	1024,	0,	NULL,	true,	6,	NULL	]
[ "connections",	"language",	"char",	1024,	0,	NULL,	true,	7,	NULL	]
[ "db_user_info",	"name",	"varchar",	1024,	0,	NULL,	true,	0,	NULL	]
[ "db_user_info",	"fullname",	"varchar",	2048,	0,	NULL,	true,	1,	NULL	]
[ "db_user_info",	"default_schema",	"int",	9,	0,	NULL,	true,	2,	NULL	]
[ "dependencies",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "dependencies",	"depend_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "dependencies",	"depend_type",	"smallint",	16,	0,	NULL,	true,	2,	NULL	]
[ "dependency_types",	"dependency_type_id",	"smallint",	16,	0,	NULL,	false,	0,	NULL	]
[ "dependency_types",	"dependency_type_name",	"varchar",	15,	0,	NULL,	false,	1,	NULL	]
[ "environment",	"name",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "environment",	"value",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "functions",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "functions",	"name",	"varchar",	256,	0,	NULL,	true,	1,	NULL	]
[ "functions",	"func",	"varchar",	8196,	0,	NULL,	true,	2,	NULL	]
[ "functions",	"mod",	"varchar",	8196,	0,	NULL,	true,	3,	NULL	]
[ "functions",	"language",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "functions",	"type",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "functions",	"side_effect",	"boolean",	1,	0,	NULL,	true,	6,	NULL	]
[ "functions",	"varres",	"boolean",	1,	0,	NULL,	true,	7,	NULL	]
[ "functions",	"vararg",	"boolean",	1,	0,	NULL,	true,	8,	NULL	]
[ "functions",	"schema_id",	"int",	32,	0,	NULL,	true,	9,	NULL	]
[ "geometry_columns",	"f_table_catalog",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "geometry_columns",	"f_table_schema",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "geometry_columns",	"f_table_name",	"varchar",	1024,	0,	NULL,	true,	2,	NULL	]
[ "geometry_columns",	"f_geometry_column",	"varchar",	1024,	0,	NULL,	true,	3,	NULL	]
[ "geometry_columns",	"coord_dimension",	"hugeint",	128,	0,	NULL,	true,	4,	NULL	]
[ "geometry_columns",	"srid",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "geometry_columns",	"type",	"clob",	0,	0,	NULL,	true,	6,	NULL	]
[ "idxs",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "idxs",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "idxs",	"table_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "idxs",	"table_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "idxs",	"type",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "idxs",	"type",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "idxs",	"name",	"varchar",	1024,	0,	NULL,	true,	3,	NULL	]
[ "idxs",	"name",	"varchar",	1024,	0,	NULL,	true,	3,	NULL	]
[ "keys",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "keys",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "keys",	"table_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "keys",	"table_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "keys",	"type",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "keys",	"type",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "keys",	"name",	"varchar",	1024,	0,	NULL,	true,	3,	NULL	]
[ "keys",	"name",	"varchar",	1024,	0,	NULL,	true,	3,	NULL	]
[ "keys",	"rkey",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "keys",	"rkey",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "keys",	"action",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "keys",	"action",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "keywords",	"keyword",	"varchar",	40,	0,	NULL,	false,	0,	NULL	]
[ "objects",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "objects",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "objects",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "objects",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "objects",	"nr",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "objects",	"nr",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "optimizers",	"name",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "optimizers",	"def",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "optimizers",	"status",	"clob",	0,	0,	NULL,	true,	2,	NULL	]
[ "privileges",	"obj_id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "privileges",	"auth_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "privileges",	"privileges",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "privileges",	"grantor",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "privileges",	"grantable",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "querylog_calls",	"id",	"oid",	63,	0,	NULL,	true,	0,	NULL	]
[ "querylog_calls",	"start",	"timestamp",	7,	0,	NULL,	true,	1,	NULL	]
[ "querylog_calls",	"stop",	"timestamp",	7,	0,	NULL,	true,	2,	NULL	]
[ "querylog_calls",	"arguments",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "querylog_calls",	"tuples",	"wrd",	64,	0,	NULL,	true,	4,	NULL	]
[ "querylog_calls",	"run",	"bigint",	64,	0,	NULL,	true,	5,	NULL	]
[ "querylog_calls",	"ship",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "querylog_calls",	"cpu",	"int",	32,	0,	NULL,	true,	7,	NULL	]
[ "querylog_calls",	"io",	"int",	32,	0,	NULL,	true,	8,	NULL	]
[ "querylog_catalog",	"id",	"oid",	63,	0,	NULL,	true,	0,	NULL	]
[ "querylog_catalog",	"owner",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "querylog_catalog",	"defined",	"timestamp",	7,	0,	NULL,	true,	2,	NULL	]
[ "querylog_catalog",	"query",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "querylog_catalog",	"pipe",	"clob",	0,	0,	NULL,	true,	4,	NULL	]
[ "querylog_catalog",	"plan",	"clob",	0,	0,	NULL,	true,	5,	NULL	]
[ "querylog_catalog",	"mal",	"int",	32,	0,	NULL,	true,	6,	NULL	]
[ "querylog_catalog",	"optimize",	"bigint",	64,	0,	NULL,	true,	7,	NULL	]
[ "querylog_history",	"id",	"oid",	63,	0,	NULL,	true,	0,	NULL	]
[ "querylog_history",	"owner",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "querylog_history",	"defined",	"timestamp",	7,	0,	NULL,	true,	2,	NULL	]
[ "querylog_history",	"query",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "querylog_history",	"pipe",	"clob",	0,	0,	NULL,	true,	4,	NULL	]
[ "querylog_history",	"plan",	"clob",	0,	0,	NULL,	true,	5,	NULL	]
[ "querylog_history",	"mal",	"int",	32,	0,	NULL,	true,	6,	NULL	]
[ "querylog_history",	"optimize",	"bigint",	64,	0,	NULL,	true,	7,	NULL	]
[ "querylog_history",	"start",	"timestamp",	7,	0,	NULL,	true,	8,	NULL	]
[ "querylog_history",	"stop",	"timestamp",	7,	0,	NULL,	true,	9,	NULL	]
[ "querylog_history",	"arguments",	"clob",	0,	0,	NULL,	true,	10,	NULL	]
[ "querylog_history",	"tuples",	"wrd",	64,	0,	NULL,	true,	11,	NULL	]
[ "querylog_history",	"run",	"bigint",	64,	0,	NULL,	true,	12,	NULL	]
[ "querylog_history",	"ship",	"bigint",	64,	0,	NULL,	true,	13,	NULL	]
[ "querylog_history",	"cpu",	"int",	32,	0,	NULL,	true,	14,	NULL	]
[ "querylog_history",	"io",	"int",	32,	0,	NULL,	true,	15,	NULL	]
[ "queue",	"qtag",	"bigint",	64,	0,	NULL,	true,	0,	NULL	]
[ "queue",	"user",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "queue",	"started",	"timestamp",	7,	0,	NULL,	true,	2,	NULL	]
[ "queue",	"estimate",	"timestamp",	7,	0,	NULL,	true,	3,	NULL	]
[ "queue",	"progress",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "queue",	"status",	"clob",	0,	0,	NULL,	true,	5,	NULL	]
[ "queue",	"tag",	"oid",	63,	0,	NULL,	true,	6,	NULL	]
[ "queue",	"query",	"clob",	0,	0,	NULL,	true,	7,	NULL	]
[ "rejects",	"rowid",	"bigint",	64,	0,	NULL,	true,	0,	NULL	]
[ "rejects",	"fldid",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "rejects",	"message",	"clob",	0,	0,	NULL,	true,	2,	NULL	]
[ "rejects",	"input",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "schemas",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "schemas",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "schemas",	"authorization",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "schemas",	"owner",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "schemas",	"system",	"boolean",	1,	0,	NULL,	true,	4,	NULL	]
[ "sequences",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "sequences",	"schema_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "sequences",	"name",	"varchar",	256,	0,	NULL,	true,	2,	NULL	]
[ "sequences",	"start",	"bigint",	64,	0,	NULL,	true,	3,	NULL	]
[ "sequences",	"minvalue",	"bigint",	64,	0,	NULL,	true,	4,	NULL	]
[ "sequences",	"maxvalue",	"bigint",	64,	0,	NULL,	true,	5,	NULL	]
[ "sequences",	"increment",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "sequences",	"cacheinc",	"bigint",	64,	0,	NULL,	true,	7,	NULL	]
[ "sequences",	"cycle",	"boolean",	1,	0,	NULL,	true,	8,	NULL	]
[ "sessions",	"user",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "sessions",	"login",	"timestamp",	7,	0,	NULL,	true,	1,	NULL	]
[ "sessions",	"sessiontimeout",	"bigint",	64,	0,	NULL,	true,	2,	NULL	]
[ "sessions",	"lastcommand",	"timestamp",	7,	0,	NULL,	true,	3,	NULL	]
[ "sessions",	"querytimeout",	"bigint",	64,	0,	NULL,	true,	4,	NULL	]
[ "sessions",	"active",	"boolean",	1,	0,	NULL,	true,	5,	NULL	]
[ "spatial_ref_sys",	"srid",	"int",	32,	0,	NULL,	false,	0,	NULL	]
[ "spatial_ref_sys",	"auth_name",	"varchar",	256,	0,	NULL,	true,	1,	NULL	]
[ "spatial_ref_sys",	"auth_srid",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "spatial_ref_sys",	"srtext",	"varchar",	2048,	0,	NULL,	true,	3,	NULL	]
[ "spatial_ref_sys",	"proj4text",	"varchar",	2048,	0,	NULL,	true,	4,	NULL	]
[ "statistics",	"column_id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "statistics",	"type",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "statistics",	"width",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "statistics",	"stamp",	"timestamp",	7,	0,	NULL,	true,	3,	NULL	]
[ "statistics",	"sample",	"bigint",	64,	0,	NULL,	true,	4,	NULL	]
[ "statistics",	"count",	"bigint",	64,	0,	NULL,	true,	5,	NULL	]
[ "statistics",	"unique",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "statistics",	"nils",	"bigint",	64,	0,	NULL,	true,	7,	NULL	]
[ "statistics",	"minval",	"clob",	0,	0,	NULL,	true,	8,	NULL	]
[ "statistics",	"maxval",	"clob",	0,	0,	NULL,	true,	9,	NULL	]
[ "statistics",	"sorted",	"boolean",	1,	0,	NULL,	true,	10,	NULL	]
[ "storage",	"schema",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "storage",	"table",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "storage",	"column",	"clob",	0,	0,	NULL,	true,	2,	NULL	]
[ "storage",	"type",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "storage",	"mode",	"clob",	0,	0,	NULL,	true,	4,	NULL	]
[ "storage",	"location",	"clob",	0,	0,	NULL,	true,	5,	NULL	]
[ "storage",	"count",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "storage",	"typewidth",	"int",	32,	0,	NULL,	true,	7,	NULL	]
[ "storage",	"columnsize",	"bigint",	64,	0,	NULL,	true,	8,	NULL	]
[ "storage",	"heapsize",	"bigint",	64,	0,	NULL,	true,	9,	NULL	]
[ "storage",	"hashes",	"bigint",	64,	0,	NULL,	true,	10,	NULL	]
[ "storage",	"phash",	"boolean",	1,	0,	NULL,	true,	11,	NULL	]
[ "storage",	"imprints",	"bigint",	64,	0,	NULL,	true,	12,	NULL	]
[ "storage",	"sorted",	"boolean",	1,	0,	NULL,	true,	13,	NULL	]
[ "storagemodel",	"schema",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "storagemodel",	"table",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "storagemodel",	"column",	"clob",	0,	0,	NULL,	true,	2,	NULL	]
[ "storagemodel",	"type",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "storagemodel",	"count",	"bigint",	64,	0,	NULL,	true,	4,	NULL	]
[ "storagemodel",	"columnsize",	"bigint",	64,	0,	NULL,	true,	5,	NULL	]
[ "storagemodel",	"heapsize",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "storagemodel",	"hashes",	"bigint",	64,	0,	NULL,	true,	7,	NULL	]
[ "storagemodel",	"imprints",	"bigint",	64,	0,	NULL,	true,	8,	NULL	]
[ "storagemodel",	"sorted",	"boolean",	1,	0,	NULL,	true,	9,	NULL	]
[ "storagemodelinput",	"schema",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "storagemodelinput",	"table",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "storagemodelinput",	"column",	"clob",	0,	0,	NULL,	true,	2,	NULL	]
[ "storagemodelinput",	"type",	"clob",	0,	0,	NULL,	true,	3,	NULL	]
[ "storagemodelinput",	"typewidth",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "storagemodelinput",	"count",	"bigint",	64,	0,	NULL,	true,	5,	NULL	]
[ "storagemodelinput",	"distinct",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "storagemodelinput",	"atomwidth",	"int",	32,	0,	NULL,	true,	7,	NULL	]
[ "storagemodelinput",	"reference",	"boolean",	1,	0,	NULL,	true,	8,	NULL	]
[ "storagemodelinput",	"sorted",	"boolean",	1,	0,	NULL,	true,	9,	NULL	]
[ "systemfunctions",	"function_id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "table_types",	"table_type_id",	"smallint",	16,	0,	NULL,	false,	0,	NULL	]
[ "table_types",	"table_type_name",	"varchar",	25,	0,	NULL,	false,	1,	NULL	]
[ "tables",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "tables",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "tables",	"schema_id",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "tables",	"query",	"varchar",	2048,	0,	NULL,	true,	3,	NULL	]
[ "tables",	"type",	"smallint",	16,	0,	NULL,	true,	4,	NULL	]
[ "tables",	"system",	"boolean",	1,	0,	NULL,	true,	5,	NULL	]
[ "tables",	"commit_action",	"smallint",	16,	0,	NULL,	true,	6,	NULL	]
[ "tables",	"access",	"smallint",	16,	0,	NULL,	true,	7,	NULL	]
[ "tables",	"temporary",	"smallint",	16,	0,	NULL,	true,	8,	NULL	]
[ "tablestoragemodel",	"schema",	"clob",	0,	0,	NULL,	true,	0,	NULL	]
[ "tablestoragemodel",	"table",	"clob",	0,	0,	NULL,	true,	1,	NULL	]
[ "tablestoragemodel",	"count",	"bigint",	64,	0,	NULL,	true,	2,	NULL	]
[ "tablestoragemodel",	"columnsize",	"hugeint",	128,	0,	NULL,	true,	3,	NULL	]
[ "tablestoragemodel",	"heapsize",	"hugeint",	128,	0,	NULL,	true,	4,	NULL	]
[ "tablestoragemodel",	"hashes",	"hugeint",	128,	0,	NULL,	true,	5,	NULL	]
[ "tablestoragemodel",	"imprints",	"hugeint",	128,	0,	NULL,	true,	6,	NULL	]
[ "tablestoragemodel",	"auxiliary",	"hugeint",	128,	0,	NULL,	true,	7,	NULL	]
[ "tracelog",	"event",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "tracelog",	"clk",	"varchar",	20,	0,	NULL,	true,	1,	NULL	]
[ "tracelog",	"pc",	"varchar",	50,	0,	NULL,	true,	2,	NULL	]
[ "tracelog",	"thread",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "tracelog",	"ticks",	"bigint",	64,	0,	NULL,	true,	4,	NULL	]
[ "tracelog",	"rrsmb",	"bigint",	64,	0,	NULL,	true,	5,	NULL	]
[ "tracelog",	"vmmb",	"bigint",	64,	0,	NULL,	true,	6,	NULL	]
[ "tracelog",	"reads",	"bigint",	64,	0,	NULL,	true,	7,	NULL	]
[ "tracelog",	"writes",	"bigint",	64,	0,	NULL,	true,	8,	NULL	]
[ "tracelog",	"minflt",	"bigint",	64,	0,	NULL,	true,	9,	NULL	]
[ "tracelog",	"majflt",	"bigint",	64,	0,	NULL,	true,	10,	NULL	]
[ "tracelog",	"nvcsw",	"bigint",	64,	0,	NULL,	true,	11,	NULL	]
[ "tracelog",	"stmt",	"clob",	0,	0,	NULL,	true,	12,	NULL	]
[ "triggers",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "triggers",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "triggers",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "triggers",	"name",	"varchar",	1024,	0,	NULL,	true,	1,	NULL	]
[ "triggers",	"table_id",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "triggers",	"table_id",	"int",	32,	0,	NULL,	true,	2,	NULL	]
[ "triggers",	"time",	"smallint",	16,	0,	NULL,	true,	3,	NULL	]
[ "triggers",	"time",	"smallint",	16,	0,	NULL,	true,	3,	NULL	]
[ "triggers",	"orientation",	"smallint",	16,	0,	NULL,	true,	4,	NULL	]
[ "triggers",	"orientation",	"smallint",	16,	0,	NULL,	true,	4,	NULL	]
[ "triggers",	"event",	"smallint",	16,	0,	NULL,	true,	5,	NULL	]
[ "triggers",	"event",	"smallint",	16,	0,	NULL,	true,	5,	NULL	]
[ "triggers",	"old_name",	"varchar",	1024,	0,	NULL,	true,	6,	NULL	]
[ "triggers",	"old_name",	"varchar",	1024,	0,	NULL,	true,	6,	NULL	]
[ "triggers",	"new_name",	"varchar",	1024,	0,	NULL,	true,	7,	NULL	]
[ "triggers",	"new_name",	"varchar",	1024,	0,	NULL,	true,	7,	NULL	]
[ "triggers",	"condition",	"varchar",	2048,	0,	NULL,	true,	8,	NULL	]
[ "triggers",	"condition",	"varchar",	2048,	0,	NULL,	true,	8,	NULL	]
[ "triggers",	"statement",	"varchar",	2048,	0,	NULL,	true,	9,	NULL	]
[ "triggers",	"statement",	"varchar",	2048,	0,	NULL,	true,	9,	NULL	]
[ "types",	"id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "types",	"systemname",	"varchar",	256,	0,	NULL,	true,	1,	NULL	]
[ "types",	"sqlname",	"varchar",	1024,	0,	NULL,	true,	2,	NULL	]
[ "types",	"digits",	"int",	32,	0,	NULL,	true,	3,	NULL	]
[ "types",	"scale",	"int",	32,	0,	NULL,	true,	4,	NULL	]
[ "types",	"radix",	"int",	32,	0,	NULL,	true,	5,	NULL	]
[ "types",	"eclass",	"int",	32,	0,	NULL,	true,	6,	NULL	]
[ "types",	"schema_id",	"int",	32,	0,	NULL,	true,	7,	NULL	]
[ "user_role",	"login_id",	"int",	32,	0,	NULL,	true,	0,	NULL	]
[ "user_role",	"role_id",	"int",	32,	0,	NULL,	true,	1,	NULL	]
[ "users",	"name",	"varchar",	1024,	0,	NULL,	true,	0,	NULL	]
[ "users",	"fullname",	"varchar",	2024,	0,	NULL,	true,	1,	NULL	]
[ "users",	"default_schema",	"int",	9,	0,	NULL,	true,	2,	NULL	]
#select s.name, f.name, f.func, f.mod, f.language, f.type, f.side_effect, f.varres, f.vararg from functions f left outer join schemas s on f.schema_id = s.id order by s.name, f.name, f.func;
% .s,	.f,	.f,	.f,	.f,	.f,	.f,	.f,	.f # table_name
% name,	name,	func,	mod,	language,	type,	side_effect,	varres,	vararg # name
% varchar,	varchar,	varchar,	varchar,	int,	int,	boolean,	boolean,	boolean # type
% 8,	35,	816,	9,	1,	1,	5,	5,	5 # length
[ "json",	"filter",	"create function json.filter(js json, name bigint) returns json external name json.filter;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"filter",	"create function json.filter(js json, name hugeint) returns json external name json.filter;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"filter",	"create function json.filter(js json, name integer) returns json external name json.filter;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"filter",	"create function json.filter(js json, name tinyint) returns json external name json.filter;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"filter",	"create function json.filter(js json, pathexpr string) returns json external name json.filter;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"integer",	"create function json.\"integer\"(js json) returns bigint external name json.\"integer\";",	"json",	1,	1,	false,	false,	false	]
[ "json",	"isarray",	"create function json.isarray(js json) returns bool external name json.isarray;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"isarray",	"create function json.isarray(js string) returns bool external name json.isarray;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"isobject",	"create function json.isobject(js json) returns bool external name json.isobject;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"isobject",	"create function json.isobject(js string) returns bool external name json.isobject;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"isvalid",	"create function json.isvalid(js json) returns bool external name json.isvalid;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"isvalid",	"create function json.isvalid(js string) returns bool external name json.isvalid;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"keyarray",	"create function json.keyarray(js json) returns json external name json.keyarray;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"length",	"create function json.length(js json) returns integer external name json.length;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"number",	"create function json.number(js json) returns float external name json.number;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"output",	"create aggregate json.output(js json) returns string external name json.output;",	"json",	1,	3,	false,	false,	false	]
[ "json",	"text",	"create function json.text(js int) returns string external name json.text;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"text",	"create function json.text(js json) returns string external name json.text;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"text",	"create function json.text(js json, e string) returns string external name json.text;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"text",	"create function json.text(js string) returns string external name json.text;",	"json",	1,	1,	false,	false,	false	]
[ "json",	"tojsonarray",	"create aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;",	"aggr",	1,	3,	false,	false,	false	]
[ "json",	"tojsonarray",	"create aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;",	"aggr",	1,	3,	false,	false,	false	]
[ "json",	"valuearray",	"create function json.valuearray(js json) returns json external name json.valuearray;",	"json",	1,	1,	false,	false,	false	]
[ "profiler",	"setheartbeat",	"create procedure profiler.setheartbeat(beat int) external name profiler.setheartbeat;",	"profiler",	1,	2,	true,	false,	false	]
[ "profiler",	"setpoolsize",	"create procedure profiler.setpoolsize(poolsize int) external name profiler.setpoolsize;",	"profiler",	1,	2,	true,	false,	false	]
[ "profiler",	"setstream",	"create procedure profiler.setstream(host string, port int) external name profiler.setstream;",	"profiler",	1,	2,	true,	false,	false	]
[ "profiler",	"start",	"create procedure profiler.start() external name profiler.\"start\";",	"profiler",	1,	2,	true,	false,	false	]
[ "profiler",	"stop",	"create procedure profiler.stop() external name profiler.stop;",	"profiler",	1,	2,	true,	false,	false	]
[ "sys",	"<",	"<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"<=",	"<=",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"<>",	"!=",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"=",	"=",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	">",	">",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	">=",	">=",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abbrev",	"create function \"abbrev\" (p inet) returns clob external name inet.\"abbrev\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"abs",	"abs",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"acos",	"acos",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"acos",	"acos",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"alpha",	"create function alpha(pdec double, pradius double) returns double external name sql.alpha;",	"sql",	1,	1,	false,	false,	false	]
[ "sys",	"analyze",	"create procedure sys.analyze(minmax int, \"sample\" bigint) external name sql.analyze;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"analyze",	"create procedure sys.analyze(minmax int, \"sample\" bigint, sch string) external name sql.analyze;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"analyze",	"create procedure sys.analyze(minmax int, \"sample\" bigint, sch string, tbl string) external name sql.analyze;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"analyze",	"create procedure sys.analyze(minmax int, \"sample\" bigint, sch string, tbl string, col string) external name sql.analyze;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"ascii",	"ascii",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ascii",	"ascii",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ascii",	"ascii",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"asin",	"asin",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"asin",	"asin",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"atan",	"atan",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"atan",	"atan",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"atan",	"atan2",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"atan",	"atan2",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"avg",	"avg",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"bbp",	"create function sys.bbp () returns table (id int, name string, ttype string, count bigint, refcnt int, lrefcnt int, location string, heat int, dirty string, status string, kind string) external name bbp.get;",	"bbp",	1,	5,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_and",	"and",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"bit_xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"broadcast",	"create function \"broadcast\" (p inet) returns inet external name inet.\"broadcast\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"ceil",	"ceil",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"ceil",	"ceil",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"ceiling",	"ceil",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"ceiling",	"ceil",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"char_length",	"length",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"char_length",	"length",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"char_length",	"length",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"character_length",	"length",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"character_length",	"length",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"character_length",	"length",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"charindex",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"charindex",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"charindex",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"charindex",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"charindex",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"charindex",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"clearrejects",	"create procedure sys.clearrejects() external name sql.copy_rejects_clear;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"code",	"unicode",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"code",	"unicode",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"code",	"unicode",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"columnsize",	"create function sys.columnsize(nme string, i bigint, d bigint) returns bigint begin case when nme = 'boolean' then return i; when nme = 'char' then return 2*i; when nme = 'smallint' then return 2 * i; when nme = 'int' then return 4 * i; when nme = 'bigint' then return 8 * i; when nme = 'hugeint' then return 16 * i; when nme = 'timestamp' then return 8 * i; when nme = 'varchar' then case when cast(d as bigint) << 8 then return i; when cast(d as bigint) << 16 then return 2 * i; when cast(d as bigint) << 32 then return 4 * i; else return 8 * i; end case; else return 8 * i; end case; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"concat",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"concat",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"concat",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"contains",	"create function contains(a geometry, x double, y double) returns boolean external name geom.\"Contains\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"copyfrom",	"copy_from",	"sql",	0,	5,	false,	true,	false	]
[ "sys",	"copyfrom",	"importTable",	"sql",	0,	5,	false,	true,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 bigint, e2 bigint) returns bigint external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 double, e2 double) returns double external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 hugeint, e2 hugeint) returns hugeint external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 integer, e2 integer) returns integer external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 real, e2 real) returns real external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 smallint, e2 smallint) returns smallint external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 tinyint, e2 tinyint) returns tinyint external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"corr",	"create aggregate corr(e1 wrd, e2 wrd) returns wrd external name \"aggr\".\"corr\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"cos",	"cos",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"cos",	"cos",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"cosh",	"cosh",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"cosh",	"cosh",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"cot",	"cot",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"cot",	"cot",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"count",	"count",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"count_no_nil",	"count_no_nil",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"curdate",	"current_date",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"current_date",	"current_date",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"current_time",	"current_time",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"current_timestamp",	"current_timestamp",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"curtime",	"current_time",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"date_to_str",	"create function date_to_str(d date, format string) returns string external name mtime.\"date_to_str\";",	"mtime",	1,	1,	false,	false,	false	]
[ "sys",	"day",	"day",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"day",	"day",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"day",	"day",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"day",	"day",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"dayofmonth",	"day",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"dayofweek",	"dayofweek",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"dayofyear",	"dayofyear",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"db_users",	"CREATE FUNCTION db_users () RETURNS TABLE( name varchar(2048)) EXTERNAL NAME sql.db_users;",	"sql",	2,	5,	false,	false,	false	]
[ "sys",	"debug",	"create function sys.debug(debug int) returns integer external name mdb.\"setDebug\";",	"mdb",	1,	1,	false,	false,	false	]
[ "sys",	"degrees",	"create function degrees(r double) returns double return r*180/pi();",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"dense_rank",	"dense_rank",	"sql",	0,	6,	false,	false,	false	]
[ "sys",	"dependencies_columns_on_functions",	"create function dependencies_columns_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, f.name, 'DEP_FUNC' from functions as f, columns as c, dependencies as dep where c.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_columns_on_indexes",	"create function dependencies_columns_on_indexes() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, i.name, 'DEP_INDEX' from columns as c, objects as kc, idxs as i where kc.\"name\" = c.name and kc.id = i.id and c.table_id = i.table_id and i.name not in (select name from keys));",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_columns_on_keys",	"create function dependencies_columns_on_keys() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, k.name, 'DEP_KEY' from columns as c, objects as kc, keys as k where kc.\"name\" = c.name and kc.id = k.id and k.table_id = c.table_id and k.rkey = -1);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_columns_on_triggers",	"create function dependencies_columns_on_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, tri.name, 'DEP_TRIGGER' from columns as c, triggers as tri, dependencies as dep where dep.id = c.id and dep.depend_id =tri.id and dep.depend_type = 8);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_columns_on_views",	"create function dependencies_columns_on_views() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select c.name, v.name, 'DEP_VIEW' from columns as c, tables as v, dependencies as dep where c.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_functions_on_functions",	"create function dependencies_functions_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select f1.name, f2.name, 'DEP_FUNC' from functions as f1, functions as f2, dependencies as dep where f1.id = dep.id and f2.id = dep.depend_id and dep.depend_type = 7);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_functions_os_triggers",	"create function dependencies_functions_os_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id and dep.depend_id =tri.id and dep.depend_type = 8);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_keys_on_foreignkeys",	"create function dependencies_keys_on_foreignkeys() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select k.name, fk.name, 'DEP_FKEY' from keys as k, keys as fk where fk.rkey = k.id);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_owners_on_schemas",	"create function dependencies_owners_on_schemas() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select a.name, s.name, 'DEP_SCHEMA' from schemas as s, auths a where s.owner = a.id);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_schemas_on_users",	"create function dependencies_schemas_on_users() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select s.name, u.name, 'DEP_USER' from schemas as s, users u where u.default_schema = s.id);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_tables_on_foreignkeys",	"create function dependencies_tables_on_foreignkeys() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, fk.name, 'DEP_FKEY' from tables as t, keys as k, keys as fk where fk.rkey = k.id and k.table_id = t.id);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_tables_on_functions",	"create function dependencies_tables_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, f.name, 'DEP_FUNC' from functions as f, tables as t, dependencies as dep where t.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and t.type = 0);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_tables_on_indexes",	"create function dependencies_tables_on_indexes() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, i.name, 'DEP_INDEX' from tables as t, idxs as i where i.table_id = t.id and i.name not in (select name from keys) and t.type = 0);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_tables_on_triggers",	"create function dependencies_tables_on_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table ((select t.name, tri.name, 'DEP_TRIGGER' from tables as t, triggers as tri where tri.table_id = t.id) union (select t.name, tri.name, 'DEP_TRIGGER' from triggers tri, tables t, dependencies dep where dep.id = t.id and dep.depend_id =tri.id and dep.depend_type = 8));",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_tables_on_views",	"create function dependencies_tables_on_views() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select t.name, v.name, 'DEP_VIEW' from tables as t, tables as v, dependencies as dep where t.id = dep.id and v.id = dep.depend_id and dep.depend_type = 5 and v.type = 1);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_views_on_functions",	"create function dependencies_views_on_functions() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select v.name, f.name, 'DEP_FUNC' from functions as f, tables as v, dependencies as dep where v.id = dep.id and f.id = dep.depend_id and dep.depend_type = 7 and v.type = 1);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"dependencies_views_on_triggers",	"create function dependencies_views_on_triggers() returns table (sch varchar(100), usr varchar(100), dep_type varchar(32)) return table (select v.name, tri.name, 'DEP_TRIGGER' from tables as v, triggers as tri, dependencies as dep where dep.id = v.id and dep.depend_id =tri.id and dep.depend_type = 8 and v.type = 1);",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"diff",	"diff",	"sql",	0,	6,	false,	false,	false	]
[ "sys",	"diff",	"diff",	"sql",	0,	6,	false,	false,	false	]
[ "sys",	"difference",	"stringdiff",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"difference",	"stringdiff",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"difference",	"stringdiff",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"editdistance",	"editdistance",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"editdistance",	"editdistance",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"editdistance",	"editdistance",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"editdistance2",	"editdistance2",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"editdistance2",	"editdistance2",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"editdistance2",	"editdistance2",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"env",	"CREATE FUNCTION env () RETURNS TABLE( name varchar(1024), value varchar(2048)) EXTERNAL NAME sql.sql_environment;",	"sql",	2,	5,	false,	false,	false	]
[ "sys",	"environment",	"create function sys.environment() returns table (\"name\" string, value string) external name sql.sql_environment;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"epoch",	"create function sys.\"epoch\"(sec bigint) returns timestamp external name timestamp.\"epoch\";",	"timestamp",	1,	1,	false,	false,	false	]
[ "sys",	"epoch",	"create function sys.\"epoch\"(sec int) returns timestamp external name timestamp.\"epoch\";",	"timestamp",	1,	1,	false,	false,	false	]
[ "sys",	"epoch",	"create function sys.\"epoch\"(ts timestamp with time zone) returns int external name timestamp.\"epoch\";",	"timestamp",	1,	1,	false,	false,	false	]
[ "sys",	"epoch",	"create function sys.\"epoch\"(ts timestamp) returns int external name timestamp.\"epoch\";",	"timestamp",	1,	1,	false,	false,	false	]
[ "sys",	"evalalgebra",	"create procedure sys.evalalgebra( ra_stmt string, opt bool) external name sql.\"evalAlgebra\";",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"exist",	"exist",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"exp",	"exp",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"exp",	"exp",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"floor",	"floor",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"floor",	"floor",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"flush_log",	"create procedure sys.flush_log () external name sql.\"flush_log\";",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"fuse",	"create function fuse(one bigint, two bigint) returns hugeint external name udf.fuse;",	"udf",	1,	1,	false,	false,	false	]
[ "sys",	"fuse",	"create function fuse(one integer, two integer) returns bigint external name udf.fuse;",	"udf",	1,	1,	false,	false,	false	]
[ "sys",	"fuse",	"create function fuse(one smallint, two smallint) returns integer external name udf.fuse;",	"udf",	1,	1,	false,	false,	false	]
[ "sys",	"fuse",	"create function fuse(one tinyint, two tinyint) returns smallint external name udf.fuse;",	"udf",	1,	1,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first bigint, last bigint) returns table (value bigint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first bigint, last bigint, stepsize bigint) returns table (value bigint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first decimal(10,2), last decimal(10,2), stepsize decimal(10,2)) returns table (value decimal(10,2)) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first double, last double, stepsize double) returns table (value double) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first hugeint, last hugeint) returns table (value hugeint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint) returns table (value hugeint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first int, last int) returns table (value int) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first int, last int, stepsize int) returns table (value int) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first real, last real, stepsize real) returns table (value real) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first smallint, last smallint) returns table (value smallint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first smallint, last smallint, stepsize smallint) returns table (value smallint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first timestamp, last timestamp, stepsize interval second) returns table (value timestamp) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first tinyint, last tinyint) returns table (value tinyint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"generate_series",	"create function sys.generate_series(first tinyint, last tinyint, stepsize tinyint) returns table (value tinyint) external name generator.series;",	"generator",	1,	5,	false,	false,	false	]
[ "sys",	"geometrytype",	"create function geometrytype(geom geometry) returns string external name geom.\"GeometryType1\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"get_type",	"create function get_type(info integer, format integer) returns string external name geom.\"getType\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"get_value_for",	"get_value",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"getanchor",	"create function getanchor( theurl url ) returns string external name url.\"getAnchor\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getbasename",	"create function getbasename(theurl url) returns string external name url.\"getBasename\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getcontent",	"create function getcontent(theurl url) returns string external name url.\"getContent\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getcontext",	"create function getcontext(theurl url) returns string external name url.\"getContext\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getdomain",	"create function getdomain(theurl url) returns string external name url.\"getDomain\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getextension",	"create function getextension(theurl url) returns string external name url.\"getExtension\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getfile",	"create function getfile(theurl url) returns string external name url.\"getFile\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"gethost",	"create function gethost(theurl url) returns string external name url.\"getHost\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getport",	"create function getport(theurl url) returns string external name url.\"getPort\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getproj4",	"create function getproj4(srid_in integer) returns string begin return select proj4text from spatial_ref_sys where srid=srid_in; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"getprotocol",	"create function getprotocol(theurl url) returns string external name url.\"getProtocol\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getquery",	"create function getquery(theurl url) returns string external name url.\"getQuery\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getroboturl",	"create function getroboturl(theurl url) returns string external name url.\"getRobotURL\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"getuser",	"create function getuser(theurl url) returns string external name url.\"getUser\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"has_m",	"create function has_m(info integer) returns integer external name geom.\"hasM\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"has_z",	"create function has_z(info integer) returns integer external name geom.\"hasZ\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"hash",	"hash",	"mkey",	0,	1,	false,	false,	false	]
[ "sys",	"hashsize",	"create function sys.hashsize(b boolean, i bigint) returns bigint begin if b = true then return 8 * i; end if; return 0; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"heapsize",	"create function sys.heapsize(tpe string, i bigint, w int) returns bigint begin if tpe <> 'varchar' and tpe <> 'clob' then return 0; end if; return 10240 + i * w; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"host",	"create function \"host\" (p inet) returns clob external name inet.\"host\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"hostmask",	"create function \"hostmask\" (p inet) returns inet external name inet.\"hostmask\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"hour",	"hours",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"hour",	"hours",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"hour",	"hours",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"hour",	"hours",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"hour",	"hours",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"identity",	"identity",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"ifthenelse",	"ifthenelse",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"ilike",	"create filter function \"ilike\"(val string, pat string) external name algebra.\"ilike\";",	"algebra",	1,	4,	true,	false,	false	]
[ "sys",	"ilike",	"create filter function \"ilike\"(val string, pat string, esc string) external name algebra.\"ilike\";",	"algebra",	1,	4,	true,	false,	false	]
[ "sys",	"ilike",	"ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"ilike",	"ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"ilike",	"ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"ilike",	"ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"ilike",	"ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"ilike",	"ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"imprintsize",	"create function sys.imprintsize(i bigint, nme string) returns bigint begin if nme = 'boolean' or nme = 'tinyint' or nme = 'smallint' or nme = 'int' or nme = 'bigint' or nme = 'hugeint' or nme = 'decimal' or nme = 'date' or nme = 'timestamp' or nme = 'real' or nme = 'double' then return cast( i * 0.12 as bigint); end if ; return 0; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"in",	"in",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"index",	"index",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"insert",	"insert",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"insert",	"insert",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"insert",	"insert",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"internaltransform",	"create function internaltransform(geom geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) returns geometry external name geom.\"Transform\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"isaurl",	"create function isaurl(theurl url) returns bool external name url.\"isaURL\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"isauuid",	"create function sys.isauuid(u string) returns uuid external name uuid.\"isaUUID\";",	"uuid",	1,	1,	false,	false,	false	]
[ "sys",	"isauuid",	"create function sys.isauuid(u uuid) returns uuid external name uuid.\"isaUUID\";",	"uuid",	1,	1,	false,	false,	false	]
[ "sys",	"isnull",	"isnil",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"lcase",	"toLower",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lcase",	"toLower",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lcase",	"toLower",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"left",	"stringleft",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"left",	"stringleft",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"left",	"stringleft",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"<<",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"create function \"left_shift\"(i1 inet, i2 inet) returns boolean external name inet.\"<<\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"mbrLeft",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift",	"mbrLeft",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"left_shift_assign",	"create function \"left_shift_assign\"(i1 inet, i2 inet) returns boolean external name inet.\"<<=\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"length",	"stringlength",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"length",	"stringlength",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"length",	"stringlength",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"levenshtein",	"levenshtein",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"levenshtein",	"levenshtein",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"levenshtein",	"levenshtein",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"levenshtein",	"levenshtein",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"levenshtein",	"levenshtein",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"levenshtein",	"levenshtein",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"like",	"create filter function \"like\"(val string, pat string) external name algebra.\"like\";",	"algebra",	1,	4,	true,	false,	false	]
[ "sys",	"like",	"create filter function \"like\"(val string, pat string, esc string) external name algebra.\"like\";",	"algebra",	1,	4,	true,	false,	false	]
[ "sys",	"like",	"like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"like",	"like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"like",	"like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"like",	"like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"like",	"like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"like",	"like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"local_timezone",	"local_timezone",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"localtime",	"current_time",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"localtimestamp",	"current_timestamp",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"locate",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"locate",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"locate",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"locate",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"locate",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"locate",	"locate",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"log",	"log",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"log",	"log",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"log10",	"log10",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"log10",	"log10",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"lower",	"toLower",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lower",	"toLower",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lower",	"toLower",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lpad",	"lpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lpad",	"lpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lpad",	"lpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lpad",	"lpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lpad",	"lpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"lpad",	"lpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ltrim",	"ltrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ltrim",	"ltrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ltrim",	"ltrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ltrim",	"ltrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ltrim",	"ltrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ltrim",	"ltrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"malfunctions",	"create function sys.malfunctions() returns table(\"signature\" string, \"address\" string, \"comment\" string) external name \"manual\".\"functions\";",	"manual",	1,	5,	false,	false,	false	]
[ "sys",	"masklen",	"create function \"masklen\" (p inet) returns int external name inet.\"masklen\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"max",	"max",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"mbr",	"create function mbr(geom geometry) returns mbr external name geom.\"mbr\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"mbr_above",	"mbrAbove",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_above",	"mbrAbove",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_below",	"mbrBelow",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_below",	"mbrBelow",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_contained",	"mbrContained",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_contained",	"mbrContained",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_contains",	"mbrContains",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_contains",	"mbrContains",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_distance",	"mbrDistance",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_distance",	"mbrDistance",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_equal",	"mbrEqual",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_equal",	"mbrEqual",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_left",	"mbrLeft",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_left",	"mbrLeft",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap",	"mbrOverlaps",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap",	"mbrOverlaps",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_above",	"mbrOverlapOrAbove",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_above",	"mbrOverlapOrAbove",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_below",	"mbrOverlapOrBelow",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_below",	"mbrOverlapOrBelow",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_left",	"mbrOverlapOrLeft",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_left",	"mbrOverlapOrLeft",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_right",	"mbrOverlapOrRight",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_overlap_or_right",	"mbrOverlapOrRight",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_right",	"mbrRight",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"mbr_right",	"mbrRight",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"md5",	"create function sys.md5(v string) returns string external name clients.md5sum;",	"clients",	1,	1,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val bigint) returns bigint external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val date) returns date external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val decimal) returns decimal external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val double) returns double external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val hugeint) returns hugeint external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val integer) returns integer external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val real) returns real external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val smallint) returns smallint external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val time) returns time external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val timestamp) returns timestamp external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val tinyint) returns tinyint external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"median",	"create aggregate median(val wrd) returns wrd external name \"aggr\".\"median\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"min",	"min",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"minute",	"minutes",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"minute",	"minutes",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"minute",	"minutes",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"minute",	"minutes",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"minute",	"minutes",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"mod",	"%",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"month",	"month",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"month",	"month",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"month",	"month",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"month",	"month",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"ms_round",	"create function ms_round(num double, prc int, truncat int) returns double begin if (truncat = 0) then return round(num, prc); else return ms_trunc(num, prc); end if; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"ms_str",	"create function ms_str(num float, prc int, truncat int) returns string begin return cast(num as string); end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"ms_stuff",	"create function ms_stuff( s1 varchar(32), st int, len int, s3 varchar(32)) returns varchar(32) begin declare res varchar(32), aux varchar(32); declare ofset int; if ( st < 0 or st > length(s1)) then return ''; end if; set ofset = 1; set res = substring(s1,ofset,st-1); set res = res || s3; set ofset = st + len; set aux = substring(s1,ofset,length(s1)-ofset+1); set res = res || aux; return res; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"ms_trunc",	"create function ms_trunc(num double, prc int) returns double external name sql.ms_trunc;",	"sql",	1,	1,	false,	false,	false	]
[ "sys",	"netmask",	"create function \"netmask\" (p inet) returns inet external name inet.\"netmask\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"network",	"create function \"network\" (p inet) returns inet external name inet.\"network\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"newurl",	"create function newurl(protocol string, hostname string, \"port\" int, file string) returns url external name url.\"new\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"newurl",	"create function newurl(protocol string, hostname string, file string) returns url external name url.\"new\";",	"url",	1,	1,	false,	false,	false	]
[ "sys",	"next_value_for",	"next_value",	"sql",	0,	1,	true,	false,	false	]
[ "sys",	"not",	"not",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"not_exist",	"not_exist",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"not_ilike",	"not_ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_ilike",	"not_ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_ilike",	"not_ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_ilike",	"not_ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_ilike",	"not_ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_ilike",	"not_ilike",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_like",	"not_like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_like",	"not_like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_like",	"not_like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_like",	"not_like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_like",	"not_like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_like",	"not_like",	"algebra",	0,	1,	false,	false,	false	]
[ "sys",	"not_unique",	"not_unique",	"sql",	0,	3,	false,	false,	false	]
[ "sys",	"not_uniques",	"not_uniques",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"not_uniques",	"not_uniques",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"octet_length",	"nbytes",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"octet_length",	"nbytes",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"octet_length",	"nbytes",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"optimizer_stats",	"create function sys.optimizer_stats () returns table (rewrite string, count int) external name sql.dump_opt_stats;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"optimizers",	"create function sys.optimizers () returns table (name string, def string, status string) external name sql.optimizers;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"or",	"or",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"password_hash",	"create function sys.password_hash (username string) returns string external name sql.password;",	"sql",	1,	1,	false,	false,	false	]
[ "sys",	"patindex",	"patindex",	"pcre",	0,	1,	false,	false,	false	]
[ "sys",	"patindex",	"patindex",	"pcre",	0,	1,	false,	false,	false	]
[ "sys",	"patindex",	"patindex",	"pcre",	0,	1,	false,	false,	false	]
[ "sys",	"pause",	"create procedure sys.pause(tag bigint) external name sql.sysmon_pause;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"pause",	"create procedure sys.pause(tag int) external name sql.sysmon_pause;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"pi",	"pi",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"power",	"pow",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"power",	"pow",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"prod",	"prod",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"qgramnormalize",	"qgramnormalize",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"qgramnormalize",	"qgramnormalize",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"qgramnormalize",	"qgramnormalize",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val bigint, q double) returns bigint external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val date, q double) returns date external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val decimal, q double) returns decimal external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val double, q double) returns double external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val hugeint, q double) returns hugeint external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val integer, q double) returns integer external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val real, q double) returns real external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val smallint, q double) returns smallint external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val time, q double) returns time external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val timestamp, q double) returns timestamp external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val tinyint, q double) returns tinyint external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"quantile",	"create aggregate quantile(val wrd, q double) returns wrd external name \"aggr\".\"quantile\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"querycache",	"create function sys.querycache() returns table (query string, count int) external name sql.dump_cache;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"querylog",	"create procedure sys.querylog(filename string) external name sql.logfile;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"querylog_calls",	"create function sys.querylog_calls() returns table( id oid, \"start\" timestamp, \"stop\" timestamp, arguments string, tuples wrd, run bigint, ship bigint, cpu int, io int ) external name sql.querylog_calls;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"querylog_catalog",	"create function sys.querylog_catalog() returns table( id oid, owner string, defined timestamp, query string, pipe string, \"plan\" string, mal int, optimize bigint ) external name sql.querylog_catalog;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"querylog_disable",	"create procedure sys.querylog_disable() external name sql.querylog_disable;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"querylog_empty",	"create procedure sys.querylog_empty() external name sql.querylog_empty;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"querylog_enable",	"create procedure sys.querylog_enable() external name sql.querylog_enable;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"querylog_enable",	"create procedure sys.querylog_enable(threshold smallint) external name sql.querylog_enable_threshold;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"queue",	"create function sys.queue() returns table( qtag bigint, \"user\" string, started timestamp, estimate timestamp, progress int, status string, tag oid, query string ) external name sql.sysmon_queue;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"radians",	"create function radians(d double) returns double return d*pi()/180;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"rand",	"rand",	"mmath",	0,	1,	true,	false,	false	]
[ "sys",	"rand",	"sqlrand",	"mmath",	0,	1,	true,	false,	false	]
[ "sys",	"rank",	"rank",	"sql",	0,	6,	false,	false,	false	]
[ "sys",	"rejects",	"create function sys.rejects() returns table( rowid bigint, fldid int, \"message\" string, \"input\" string ) external name sql.copy_rejects;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"repeat",	"repeat",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"repeat",	"repeat",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"repeat",	"repeat",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"replace",	"replace",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"replace",	"replace",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"replace",	"replace",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"restart",	"restart",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"resume",	"create procedure sys.resume(tag bigint) external name sql.sysmon_resume;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"resume",	"create procedure sys.resume(tag int) external name sql.sysmon_resume;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"reuse",	"create procedure reuse(sys string, tab string) external name sql.reuse;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"reverse",	"create function reverse(src string) returns string external name udf.reverse;",	"udf",	1,	1,	false,	false,	false	]
[ "sys",	"right",	"stringright",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"right",	"stringright",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"right",	"stringright",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	">>",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	"create function \"right_shift\"(i1 inet, i2 inet) returns boolean external name inet.\">>\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"right_shift",	"mbrRight",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift",	"mbrRight",	"geom",	0,	1,	false,	false,	false	]
[ "sys",	"right_shift_assign",	"create function \"right_shift_assign\"(i1 inet, i2 inet) returns boolean external name inet.\">>=\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"rotate_xor_hash",	"rotate_xor_hash",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"round",	"round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"row_number",	"row_number",	"sql",	0,	6,	false,	false,	false	]
[ "sys",	"rowid",	"identity",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"rowid",	"rowid",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"rpad",	"rpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rpad",	"rpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rpad",	"rpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rpad",	"rpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rpad",	"rpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rpad",	"rpad",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rtrim",	"rtrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rtrim",	"rtrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rtrim",	"rtrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rtrim",	"rtrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rtrim",	"rtrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"rtrim",	"rtrim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_down",	"dec_round",	"sql",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"scale_up",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"second",	"seconds",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"second",	"sql_seconds",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"second",	"sql_seconds",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"second",	"sql_seconds",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"second",	"sql_seconds",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sessions",	"create function sys.sessions() returns table(\"user\" string, \"login\" timestamp, \"sessiontimeout\" bigint, \"lastcommand\" timestamp, \"querytimeout\" bigint, \"active\" bool) external name sql.sessions;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"setmasklen",	"create function \"setmasklen\" (p inet, mask int) returns inet external name inet.\"setmasklen\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"setsession",	"create procedure sys.setsession(\"timeout\" bigint) external name sql.setsession;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"settimeout",	"create procedure sys.settimeout(\"query\" bigint) external name sql.settimeout;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"settimeout",	"create procedure sys.settimeout(\"query\" bigint, \"session\" bigint) external name sql.settimeout;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"shrink",	"create procedure shrink(sys string, tab string) external name sql.shrink;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"shutdown",	"create procedure sys.shutdown(delay tinyint) external name sql.shutdown;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"shutdown",	"create procedure sys.shutdown(delay tinyint, force bool) external name sql.shutdown;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sign",	"sign",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"similarity",	"similarity",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"similarity",	"similarity",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"similarity",	"similarity",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"sin",	"sin",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"sin",	"sin",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"sinh",	"sinh",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"sinh",	"sinh",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"soundex",	"soundex",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"soundex",	"soundex",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"soundex",	"soundex",	"txtsim",	0,	1,	false,	false,	false	]
[ "sys",	"space",	"space",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"space",	"space",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"space",	"space",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"splitpart",	"splitpart",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"splitpart",	"splitpart",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"splitpart",	"splitpart",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"+",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"addmonths",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"date_add_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"time_add_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"time_add_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"timestamp_add_month_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"timestamp_add_month_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"timestamp_add_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_add",	"timestamp_add_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_div",	"/",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_max",	"max",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_min",	"min",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_mul",	"*",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_neg",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"-",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"date_sub_month_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"date_sub_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"diff",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"diff",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"diff",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"diff",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"diff",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"time_sub_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"time_sub_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"timestamp_sub_month_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"timestamp_sub_month_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"timestamp_sub_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sql_sub",	"timestamp_sub_msec_interval",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"sqrt",	"sqrt",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"sqrt",	"sqrt",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"st_area",	"create function st_area(geom geometry) returns double external name geom.\"Area\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_asbinary",	"create function st_asbinary(geom geometry) returns string external name geom.\"AsBinary\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_asewkt",	"create function st_asewkt(geom geometry) returns string external name geom.\"AsEWKT\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_astext",	"create function st_astext(geom geometry) returns string external name geom.\"AsText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_bdmpolyfromtext",	"create function st_bdmpolyfromtext(wkt string, srid integer) returns geometry external name geom.\"BdMPolyFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_bdpolyfromtext",	"create function st_bdpolyfromtext(wkt string, srid integer) returns geometry external name geom.\"BdPolyFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_boundary",	"create function st_boundary(geom geometry) returns geometry external name geom.\"Boundary\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_buffer",	"create function st_buffer(geom geometry, radius double) returns geometry external name geom.\"Buffer\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_centroid",	"create function st_centroid(geom geometry) returns geometry external name geom.\"Centroid\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_collect",	"create aggregate st_collect(geom geometry) returns geometry external name geom.\"Union\";",	"geom",	1,	3,	false,	false,	false	]
[ "sys",	"st_collect",	"create function st_collect(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Union\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_contains",	"create function st_contains(box1 mbr, box2 mbr) returns boolean external name geom.\"mbrContains\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_contains",	"create function st_contains(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Contains\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_convexhull",	"create function st_convexhull(geom geometry) returns geometry external name geom.\"ConvexHull\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_coorddim",	"create function st_coorddim(geom geometry) returns integer external name geom.\"CoordDim\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_coveredby",	"create function st_coveredby(geom1 geometry, geom2 geometry) returns boolean external name geom.\"CoveredBy\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_covers",	"create function st_covers(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Covers\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_crosses",	"create function st_crosses(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Crosses\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_delaunaytriangles",	"create function st_delaunaytriangles(geom geometry, tolerance double, flags integer) returns geometry external name geom.\"DelaunayTriangles\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_difference",	"create function st_difference(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Difference\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_dimension",	"create function st_dimension(geom geometry) returns integer external name geom.\"Dimension\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_disjoint",	"create function st_disjoint(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Disjoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_distance",	"create function st_distance(box1 mbr, box2 mbr) returns double external name geom.\"mbrDistance\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_distance",	"create function st_distance(geom1 geometry, geom2 geometry) returns double external name geom.\"Distance\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_dump",	"create function st_dump(geom geometry) returns table(id string, polygonwkb geometry) external name geom.\"Dump\";",	"geom",	1,	5,	false,	false,	false	]
[ "sys",	"st_dumppoints",	"create function st_dumppoints(geom geometry) returns table(path string, pointg geometry) external name geom.\"DumpPoints\";",	"geom",	1,	5,	false,	false,	false	]
[ "sys",	"st_dwithin",	"create function st_dwithin(geom1 geometry, geom2 geometry, dst double) returns boolean external name geom.\"DWithin\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_endpoint",	"create function st_endpoint(geom geometry) returns geometry external name geom.\"EndPoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_envelope",	"create function st_envelope(geom geometry) returns geometry external name geom.\"Envelope\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_equals",	"create function st_equals(box1 mbr, box2 mbr) returns boolean external name geom.\"mbrEqual\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_equals",	"create function st_equals(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Equals\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_exteriorring",	"create function st_exteriorring(geom geometry) returns geometry external name geom.\"ExteriorRing\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_force2d",	"create function st_force2d(geom geometry) returns geometry external name geom.\"Force2D\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_force3d",	"create function st_force3d(geom geometry) returns geometry external name geom.\"Force3D\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geomcollfromtext",	"create function st_geomcollfromtext(wkt string) returns geometry external name geom.\"GeomCollFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geomcollfromtext",	"create function st_geomcollfromtext(wkt string, srid integer) returns geometry external name geom.\"GeomCollFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geometryfromtext",	"create function st_geometryfromtext(wkt string) returns geometry external name geom.\"GeomFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geometryfromtext",	"create function st_geometryfromtext(wkt string, srid integer) returns geometry external name geom.\"GeomFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geometryn",	"create function st_geometryn(geom geometry, positionnum integer) returns geometry external name geom.\"GeometryN\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geometrytype",	"create function st_geometrytype(geom geometry) returns string external name geom.\"GeometryType2\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geomfromtext",	"create function st_geomfromtext(wkt string) returns geometry external name geom.\"GeomFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_geomfromtext",	"create function st_geomfromtext(wkt string, srid integer) returns geometry external name geom.\"GeomFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_interiorringn",	"create function st_interiorringn(geom geometry, positionnum integer) returns geometry external name geom.\"InteriorRingN\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_interiorrings",	"create function st_interiorrings(geom geometry) returns geometrya external name geom.\"InteriorRings\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_intersection",	"create function st_intersection(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Intersection\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_intersects",	"create function st_intersects(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Intersects\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_isclosed",	"create function st_isclosed(geom geometry) returns boolean external name geom.\"IsClosed\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_isempty",	"create function st_isempty(geom geometry) returns boolean external name geom.\"IsEmpty\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_isring",	"create function st_isring(geom geometry) returns boolean external name geom.\"IsRing\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_issimple",	"create function st_issimple(geom geometry) returns boolean external name geom.\"IsSimple\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_isvalid",	"create function st_isvalid(geom geometry) returns boolean external name geom.\"IsValid\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_isvalidreason",	"create function st_isvalidreason(geom geometry) returns string external name geom.\"IsValidReason\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_length",	"create function st_length(geom geometry) returns double external name geom.\"Length\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_length2d",	"create function st_length2d(geom geometry) returns double external name geom.\"Length\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_linefromtext",	"create function st_linefromtext(wkt string) returns geometry external name geom.\"LineFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_linefromtext",	"create function st_linefromtext(wkt string, srid integer) returns geometry external name geom.\"LineFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makebox2d",	"create function st_makebox2d(lowleftpointgeom geometry, uprightpointgeom geometry) returns mbr external name geom.\"MakeBox2D\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makeenvelope",	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double) returns geometry external name geom.\"MakeEnvelope\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makeenvelope",	"create function st_makeenvelope(xmin double, ymin double, xmax double, ymax double, srid integer) returns geometry external name geom.\"MakeEnvelope\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makeline",	"create aggregate st_makeline(geom geometry) returns geometry external name geom.\"MakeLine\";",	"geom",	1,	3,	false,	false,	false	]
[ "sys",	"st_makeline",	"create function st_makeline(geom1 geometry, geom2 geometry) returns geometry external name geom.\"MakeLine\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makepoint",	"create function st_makepoint(x double, y double) returns geometry external name geom.\"MakePoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makepoint",	"create function st_makepoint(x double, y double, z double) returns geometry external name geom.\"MakePoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makepoint",	"create function st_makepoint(x double, y double, z double, m double) returns geometry external name geom.\"MakePoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makepointm",	"create function st_makepointm(x double, y double, m double) returns geometry external name geom.\"MakePointM\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_makepolygon",	"create function st_makepolygon(geom geometry) returns geometry external name geom.\"MakePolygon\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_mlinefromtext",	"create function st_mlinefromtext(wkt string) returns geometry external name geom.\"MLineFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_mlinefromtext",	"create function st_mlinefromtext(wkt string, srid integer) returns geometry external name geom.\"MLineFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_mpointfromtext",	"create function st_mpointfromtext(wkt string) returns geometry external name geom.\"MPointFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_mpointfromtext",	"create function st_mpointfromtext(wkt string, srid integer) returns geometry external name geom.\"MPointFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_mpolyfromtext",	"create function st_mpolyfromtext(wkt string) returns geometry external name geom.\"MPolyFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_mpolyfromtext",	"create function st_mpolyfromtext(wkt string, srid integer) returns geometry external name geom.\"MPolyFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_npoints",	"create function st_npoints(geom geometry) returns integer external name geom.\"NPoints\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_nrings",	"create function st_nrings(geom geometry) returns integer external name geom.\"NRings\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_numgeometries",	"create function st_numgeometries(geom geometry) returns integer external name geom.\"NumGeometries\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_numinteriorring",	"create function st_numinteriorring(geom geometry) returns integer external name geom.\"NumInteriorRings\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_numinteriorrings",	"create function st_numinteriorrings(geom geometry) returns integer external name geom.\"NumInteriorRings\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_numpatches",	"create function st_numpatches(geom geometry) returns integer begin return select st_numgeometries(geom); end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"st_numpoints",	"create function st_numpoints(geom geometry) returns integer external name geom.\"NumPoints\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_overlaps",	"create function st_overlaps(box1 mbr, box2 mbr) returns boolean external name geom.\"mbrOverlaps\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_overlaps",	"create function st_overlaps(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Overlaps\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_patchn",	"create function st_patchn(geom geometry, patchnum integer) returns geometry begin return select st_geometryn(geom, patchnum); end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"st_point",	"create function st_point(x double, y double) returns geometry external name geom.\"MakePoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_pointfromtext",	"create function st_pointfromtext(wkt string) returns geometry external name geom.\"PointFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_pointfromtext",	"create function st_pointfromtext(wkt string, srid integer) returns geometry external name geom.\"PointFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_pointn",	"create function st_pointn(geom geometry, positionnum integer) returns geometry external name geom.\"PointN\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_pointonsurface",	"create function st_pointonsurface(geom geometry) returns geometry external name geom.\"PointOnSurface\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_polygon",	"create function st_polygon(geom geometry, srid integer) returns geometry external name geom.\"MakePolygon\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_polygonfromtext",	"create function st_polygonfromtext(wkt string) returns geometry external name geom.\"PolygonFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_polygonfromtext",	"create function st_polygonfromtext(wkt string, srid integer) returns geometry external name geom.\"PolygonFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_relate",	"create function st_relate(geom1 geometry, geom2 geometry, intersection_matrix_pattern string) returns boolean external name geom.\"Relate\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_segmentize",	"create function st_segmentize(geom geometry, sz double) returns geometry external name geom.\"Segmentize\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_setexteriorring",	"create function st_setexteriorring(geom geometry) returns geometry external name geom.\"MakePolygon\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_setsrid",	"create function st_setsrid(geom geometry, srid integer) returns geometry external name geom.\"setSRID\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_srid",	"create function st_srid(geom geometry) returns integer external name geom.\"getSRID\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_startpoint",	"create function st_startpoint(geom geometry) returns geometry external name geom.\"StartPoint\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_symdifference",	"create function st_symdifference(geom1 geometry, geom2 geometry) returns geometry external name geom.\"SymDifference\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_touches",	"create function st_touches(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Touches\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_transform",	"create function st_transform(geom geometry, srid integer) returns geometry begin declare srid_src integer; declare proj4_src string; declare proj4_dest string; select st_srid(geom) into srid_src; select getproj4(srid_src) into proj4_src; select getproj4(srid) into proj4_dest; if proj4_src is null then return select internaltransform(geom, srid_src, srid, 'null', proj4_dest); else if proj4_dest is null then return select internaltransform(geom, srid_src, srid, proj4_src, 'null'); else return select internaltransform(geom, srid_src, srid, proj4_src, proj4_dest); end if; end if; end;",	"user",	2,	1,	false,	false,	false	]
[ "sys",	"st_translate",	"create function st_translate(geom geometry, dx double, dy double) returns geometry external name geom.\"Translate\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_translate",	"create function st_translate(geom geometry, dx double, dy double, dz double) returns geometry external name geom.\"Translate\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_union",	"create aggregate st_union(geom geometry) returns geometry external name geom.\"Union\";",	"geom",	1,	3,	false,	false,	false	]
[ "sys",	"st_union",	"create function st_union(geom1 geometry, geom2 geometry) returns geometry external name geom.\"Union\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_within",	"create function st_within(geom1 geometry, geom2 geometry) returns boolean external name geom.\"Within\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_wkbtosql",	"create function st_wkbtosql(geom string) returns geometry external name geom.\"FromBinary\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_wkttosql",	"create function st_wkttosql(wkt string) returns geometry external name geom.\"GeomFromText\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_x",	"create function st_x(geom geometry) returns double external name geom.\"X\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_xmax",	"create function st_xmax(box mbr) returns double external name geom.\"XMaxFromMBR\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_xmax",	"create function st_xmax(geom geometry) returns double external name geom.\"XMaxFromWKB\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_xmin",	"create function st_xmin(box mbr) returns double external name geom.\"XMinFromMBR\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_xmin",	"create function st_xmin(geom geometry) returns double external name geom.\"XMinFromWKB\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_y",	"create function st_y(geom geometry) returns double external name geom.\"Y\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_ymax",	"create function st_ymax(box mbr) returns double external name geom.\"YMaxFromMBR\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_ymax",	"create function st_ymax(geom geometry) returns double external name geom.\"YMaxFromWKB\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_ymin",	"create function st_ymin(box mbr) returns double external name geom.\"YMinFromMBR\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_ymin",	"create function st_ymin(geom geometry) returns double external name geom.\"YMinFromWKB\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"st_z",	"create function st_z(geom geometry) returns double external name geom.\"Z\";",	"geom",	1,	1,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val bigint) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val date) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val double) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val hugeint) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val integer) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val real) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val smallint) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val time) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val timestamp) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val tinyint) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_pop",	"create aggregate stddev_pop(val wrd) returns double external name \"aggr\".\"stdevp\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val bigint) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val date) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val double) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val hugeint) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val integer) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val real) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val smallint) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val time) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val timestamp) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val tinyint) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stddev_samp",	"create aggregate stddev_samp(val wrd) returns double external name \"aggr\".\"stdev\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"stop",	"create procedure sys.stop(tag bigint) external name sql.sysmon_stop;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"stop",	"create procedure sys.stop(tag int) external name sql.sysmon_stop;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"storage",	"create function sys.\"storage\"( sname string) returns table ( \"schema\" string, \"table\" string, \"column\" string, \"type\" string, \"mode\" string, location string, \"count\" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean ) external name sql.\"storage\";",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"storage",	"create function sys.\"storage\"( sname string, tname string) returns table ( \"schema\" string, \"table\" string, \"column\" string, \"type\" string, \"mode\" string, location string, \"count\" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean ) external name sql.\"storage\";",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"storage",	"create function sys.\"storage\"( sname string, tname string, cname string) returns table ( \"schema\" string, \"table\" string, \"column\" string, \"type\" string, \"mode\" string, location string, \"count\" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean ) external name sql.\"storage\";",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"storage",	"create function sys.\"storage\"() returns table ( \"schema\" string, \"table\" string, \"column\" string, \"type\" string, \"mode\" string, location string, \"count\" bigint, typewidth int, columnsize bigint, heapsize bigint, hashes bigint, phash boolean, imprints bigint, sorted boolean ) external name sql.\"storage\";",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"storagemodel",	"create function sys.storagemodel() returns table ( \"schema\" string, \"table\" string, \"column\" string, \"type\" string, \"count\" bigint, columnsize bigint, heapsize bigint, hashes bigint, imprints bigint, sorted boolean) begin return select i.\"schema\", i.\"table\", i.\"column\", i.\"type\", i.\"count\", columnsize(i.\"type\", i.count, i.\"distinct\"), heapsize(i.\"type\", i.\"distinct\", i.\"atomwidth\"), hashsize(i.\"reference\", i.\"count\"), imprintsize(i.\"count\",i.\"type\"), i.sorted from sys.storagemodelinput i; end;",	"user",	2,	5,	false,	false,	false	]
[ "sys",	"storagemodelinit",	"create procedure sys.storagemodelinit() begin delete from sys.storagemodelinput; insert into sys.storagemodelinput select x.\"schema\", x.\"table\", x.\"column\", x.\"type\", x.typewidth, x.count, 0, x.typewidth, false, x.sorted from sys.\"storage\"() x; update sys.storagemodelinput set reference = true where concat(concat(\"schema\",\"table\"), \"column\") in ( select concat( concat(\"fkschema\".\"name\", \"fktable\".\"name\"), \"fkkeycol\".\"name\" ) from \"sys\".\"keys\" as \"fkkey\", \"sys\".\"objects\" as \"fkkeycol\", \"sys\".\"tables\" as \"fktable\", \"sys\".\"schemas\" as \"fkschema\" where \"fktable\".\"id\" = \"fkkey\".\"table_id\" and \"fkkey\".\"id\" = \"fkkeycol\".\"id\" and \"fkschema\".\"id\" = \"fktable\".\"schema_id\" and \"fkkey\".\"rkey\" > -1); update sys.storagemodelinput set \"distinct\" = \"count\" where \"type\" = 'varchar' or \"type\"='clob'; end;",	"user",	2,	2,	true,	false,	false	]
[ "sys",	"str_to_date",	"create function str_to_date(s string, format string) returns date external name mtime.\"str_to_date\";",	"mtime",	1,	1,	false,	false,	false	]
[ "sys",	"str_to_time",	"create function str_to_time(s string, format string) returns time external name mtime.\"str_to_time\";",	"mtime",	1,	1,	false,	false,	false	]
[ "sys",	"str_to_timestamp",	"create function str_to_timestamp(s string, format string) returns timestamp external name mtime.\"str_to_timestamp\";",	"mtime",	1,	1,	false,	false,	false	]
[ "sys",	"strings",	"strings",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"strings",	"strings",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"strings",	"strings",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"substr",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substr",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substr",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substr",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substr",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substr",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substring",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substring",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substring",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substring",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substring",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"substring",	"substring",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"sum",	"sum",	"aggr",	0,	3,	false,	false,	false	]
[ "sys",	"tan",	"tan",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"tan",	"tan",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"tanh",	"tanh",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"tanh",	"tanh",	"mmath",	0,	1,	false,	false,	false	]
[ "sys",	"text",	"create function \"text\" (p inet) returns clob external name inet.\"text\";",	"inet",	1,	1,	false,	false,	false	]
[ "sys",	"time_to_str",	"create function time_to_str(d time, format string) returns string external name mtime.\"time_to_str\";",	"mtime",	1,	1,	false,	false,	false	]
[ "sys",	"times",	"create procedure times() external name sql.times;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"timestamp_to_str",	"create function timestamp_to_str(d timestamp, format string) returns string external name mtime.\"timestamp_to_str\";",	"mtime",	1,	1,	false,	false,	false	]
[ "sys",	"tracelog",	"create function sys.tracelog() returns table ( event integer, clk varchar(20), pc varchar(50), thread int, ticks bigint, rrsmb bigint, vmmb bigint, reads bigint, writes bigint, minflt bigint, majflt bigint, nvcsw bigint, stmt string ) external name sql.dump_trace;",	"sql",	1,	5,	false,	false,	false	]
[ "sys",	"trim",	"trim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"trim",	"trim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"trim",	"trim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"trim",	"trim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"trim",	"trim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"trim",	"trim",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"truncate",	"stringleft",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"truncate",	"stringleft",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"truncate",	"stringleft",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ucase",	"toUpper",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ucase",	"toUpper",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"ucase",	"toUpper",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"upper",	"toUpper",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"upper",	"toUpper",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"upper",	"toUpper",	"str",	0,	1,	false,	false,	false	]
[ "sys",	"uuid",	"create function sys.uuid() returns uuid external name uuid.\"new\";",	"uuid",	1,	1,	false,	false,	false	]
[ "sys",	"vacuum",	"create procedure vacuum(sys string, tab string) external name sql.vacuum;",	"sql",	1,	2,	true,	false,	false	]
[ "sys",	"var",	"CREATE FUNCTION var() RETURNS TABLE( name varchar(1024)) EXTERNAL NAME sql.sql_variables;",	"sql",	2,	5,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val bigint) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val date) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val double) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val hugeint) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val integer) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val real) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val smallint) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val time) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val timestamp) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val tinyint) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_pop",	"create aggregate var_pop(val wrd) returns double external name \"aggr\".\"variancep\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val bigint) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val date) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val double) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val hugeint) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val integer) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val real) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val smallint) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val time) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val timestamp) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val tinyint) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"var_samp",	"create aggregate var_samp(val wrd) returns double external name \"aggr\".\"variance\";",	"aggr",	1,	3,	false,	false,	false	]
[ "sys",	"week",	"weekofyear",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"weekofyear",	"weekofyear",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"xor",	"xor",	"calc",	0,	1,	false,	false,	false	]
[ "sys",	"year",	"year",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"year",	"year",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"year",	"year",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"year",	"year",	"mtime",	0,	1,	false,	false,	false	]
[ "sys",	"zero_or_one",	"zero_or_one",	"sql",	0,	3,	false,	false,	false	]
[ "sys",	"zorder_decode_x",	"create function zorder_decode_x(z oid) returns integer external name zorder.decode_x;",	"zorder",	1,	1,	false,	false,	false	]
[ "sys",	"zorder_decode_y",	"create function zorder_decode_y(z oid) returns integer external name zorder.decode_y;",	"zorder",	1,	1,	false,	false,	false	]
[ "sys",	"zorder_encode",	"create function zorder_encode(x integer, y integer) returns oid external name zorder.encode;",	"zorder",	1,	1,	false,	false,	false	]
#select f.name, a.name, a.type, a.type_digits, a.type_scale, a.inout, a.number from sys.args a left outer join sys.functions f on a.func_id = f.id order by f.name, a.func_id, a.number;
% .f,	.a,	.a,	.a,	.a,	.a,	.a # table_name
% name,	name,	type,	type_digits,	type_scale,	inout,	number # name
% varchar,	varchar,	varchar,	int,	int,	tinyint,	int # type
% 35,	27,	14,	4,	1,	1,	2 # length
[ "<",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "<",	"arg_1",	"any",	0,	0,	1,	1	]
[ "<",	"arg_2",	"any",	0,	0,	1,	2	]
[ "<=",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "<=",	"arg_1",	"any",	0,	0,	1,	1	]
[ "<=",	"arg_2",	"any",	0,	0,	1,	2	]
[ "<>",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "<>",	"arg_1",	"any",	0,	0,	1,	1	]
[ "<>",	"arg_2",	"any",	0,	0,	1,	2	]
[ "=",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "=",	"arg_1",	"any",	0,	0,	1,	1	]
[ "=",	"arg_2",	"any",	0,	0,	1,	2	]
[ ">",	"res_0",	"boolean",	1,	0,	0,	0	]
[ ">",	"arg_1",	"any",	0,	0,	1,	1	]
[ ">",	"arg_2",	"any",	0,	0,	1,	2	]
[ ">=",	"res_0",	"boolean",	1,	0,	0,	0	]
[ ">=",	"arg_1",	"any",	0,	0,	1,	1	]
[ ">=",	"arg_2",	"any",	0,	0,	1,	2	]
[ "abbrev",	"result",	"clob",	0,	0,	0,	0	]
[ "abbrev",	"p",	"inet",	0,	0,	1,	1	]
[ "abs",	"res_0",	"oid",	63,	0,	0,	0	]
[ "abs",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "abs",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "abs",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "abs",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "abs",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "abs",	"res_0",	"int",	32,	0,	0,	0	]
[ "abs",	"arg_1",	"int",	32,	0,	1,	1	]
[ "abs",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "abs",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "abs",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "abs",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "abs",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "abs",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "abs",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "abs",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "abs",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "abs",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "abs",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "abs",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "abs",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "abs",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "abs",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "abs",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "abs",	"res_0",	"real",	24,	0,	0,	0	]
[ "abs",	"arg_1",	"real",	24,	0,	1,	1	]
[ "abs",	"res_0",	"double",	53,	0,	0,	0	]
[ "abs",	"arg_1",	"double",	53,	0,	1,	1	]
[ "abs",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "abs",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "abs",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "abs",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "acos",	"res_0",	"real",	24,	0,	0,	0	]
[ "acos",	"arg_1",	"real",	24,	0,	1,	1	]
[ "acos",	"res_0",	"double",	53,	0,	0,	0	]
[ "acos",	"arg_1",	"double",	53,	0,	1,	1	]
[ "alpha",	"result",	"double",	53,	0,	0,	0	]
[ "alpha",	"pdec",	"double",	53,	0,	1,	1	]
[ "alpha",	"pradius",	"double",	53,	0,	1,	2	]
[ "analyze",	"MinMax",	"int",	32,	0,	1,	0	]
[ "analyze",	"sample",	"bigint",	64,	0,	1,	1	]
[ "analyze",	"MinMax",	"int",	32,	0,	1,	0	]
[ "analyze",	"sample",	"bigint",	64,	0,	1,	1	]
[ "analyze",	"sch",	"clob",	0,	0,	1,	2	]
[ "analyze",	"MinMax",	"int",	32,	0,	1,	0	]
[ "analyze",	"sample",	"bigint",	64,	0,	1,	1	]
[ "analyze",	"sch",	"clob",	0,	0,	1,	2	]
[ "analyze",	"tbl",	"clob",	0,	0,	1,	3	]
[ "analyze",	"MinMax",	"int",	32,	0,	1,	0	]
[ "analyze",	"sample",	"bigint",	64,	0,	1,	1	]
[ "analyze",	"sch",	"clob",	0,	0,	1,	2	]
[ "analyze",	"tbl",	"clob",	0,	0,	1,	3	]
[ "analyze",	"col",	"clob",	0,	0,	1,	4	]
[ "and",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "and",	"arg_1",	"boolean",	1,	0,	1,	1	]
[ "and",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "ascii",	"res_0",	"int",	32,	0,	0,	0	]
[ "ascii",	"arg_1",	"char",	0,	0,	1,	1	]
[ "ascii",	"res_0",	"int",	32,	0,	0,	0	]
[ "ascii",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "ascii",	"res_0",	"int",	32,	0,	0,	0	]
[ "ascii",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "asin",	"res_0",	"real",	24,	0,	0,	0	]
[ "asin",	"arg_1",	"real",	24,	0,	1,	1	]
[ "asin",	"res_0",	"double",	53,	0,	0,	0	]
[ "asin",	"arg_1",	"double",	53,	0,	1,	1	]
[ "atan",	"res_0",	"real",	24,	0,	0,	0	]
[ "atan",	"arg_1",	"real",	24,	0,	1,	1	]
[ "atan",	"res_0",	"real",	24,	0,	0,	0	]
[ "atan",	"arg_1",	"real",	24,	0,	1,	1	]
[ "atan",	"arg_2",	"real",	24,	0,	1,	2	]
[ "atan",	"res_0",	"double",	53,	0,	0,	0	]
[ "atan",	"arg_1",	"double",	53,	0,	1,	1	]
[ "atan",	"res_0",	"double",	53,	0,	0,	0	]
[ "atan",	"arg_1",	"double",	53,	0,	1,	1	]
[ "atan",	"arg_2",	"double",	53,	0,	1,	2	]
[ "avg",	"res",	"double",	53,	0,	0,	0	]
[ "avg",	"arg",	"double",	53,	0,	1,	1	]
[ "bbp",	"id",	"int",	32,	0,	0,	0	]
[ "bbp",	"name",	"clob",	0,	0,	0,	1	]
[ "bbp",	"ttype",	"clob",	0,	0,	0,	2	]
[ "bbp",	"count",	"bigint",	64,	0,	0,	3	]
[ "bbp",	"refcnt",	"int",	32,	0,	0,	4	]
[ "bbp",	"lrefcnt",	"int",	32,	0,	0,	5	]
[ "bbp",	"location",	"clob",	0,	0,	0,	6	]
[ "bbp",	"heat",	"int",	32,	0,	0,	7	]
[ "bbp",	"dirty",	"clob",	0,	0,	0,	8	]
[ "bbp",	"status",	"clob",	0,	0,	0,	9	]
[ "bbp",	"kind",	"clob",	0,	0,	0,	10	]
[ "bit_and",	"res_0",	"oid",	63,	0,	0,	0	]
[ "bit_and",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "bit_and",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "bit_and",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "bit_and",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "bit_and",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "bit_and",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "bit_and",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "bit_and",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "bit_and",	"res_0",	"int",	32,	0,	0,	0	]
[ "bit_and",	"arg_1",	"int",	32,	0,	1,	1	]
[ "bit_and",	"arg_2",	"int",	32,	0,	1,	2	]
[ "bit_and",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "bit_and",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "bit_and",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "bit_and",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "bit_and",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "bit_and",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "bit_and",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "bit_and",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "bit_and",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "bit_and",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "bit_and",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "bit_and",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "bit_and",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "bit_and",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "bit_and",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "bit_and",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "bit_and",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "bit_and",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "bit_and",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "bit_and",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "bit_and",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "bit_and",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "bit_and",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "bit_and",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "bit_not",	"res_0",	"oid",	63,	0,	0,	0	]
[ "bit_not",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "bit_not",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "bit_not",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "bit_not",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "bit_not",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "bit_not",	"res_0",	"int",	32,	0,	0,	0	]
[ "bit_not",	"arg_1",	"int",	32,	0,	1,	1	]
[ "bit_not",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "bit_not",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "bit_not",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "bit_not",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "bit_not",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "bit_not",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "bit_not",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "bit_not",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "bit_not",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "bit_not",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "bit_not",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "bit_not",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "bit_not",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "bit_not",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "bit_not",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "bit_not",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "bit_or",	"res_0",	"oid",	63,	0,	0,	0	]
[ "bit_or",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "bit_or",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "bit_or",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "bit_or",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "bit_or",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "bit_or",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "bit_or",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "bit_or",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "bit_or",	"res_0",	"int",	32,	0,	0,	0	]
[ "bit_or",	"arg_1",	"int",	32,	0,	1,	1	]
[ "bit_or",	"arg_2",	"int",	32,	0,	1,	2	]
[ "bit_or",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "bit_or",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "bit_or",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "bit_or",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "bit_or",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "bit_or",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "bit_or",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "bit_or",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "bit_or",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "bit_or",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "bit_or",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "bit_or",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "bit_or",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "bit_or",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "bit_or",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "bit_or",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "bit_or",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "bit_or",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "bit_or",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "bit_or",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "bit_or",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "bit_or",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "bit_or",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "bit_or",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "bit_xor",	"res_0",	"oid",	63,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "bit_xor",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "bit_xor",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "bit_xor",	"res_0",	"int",	32,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"int",	32,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"int",	32,	0,	1,	2	]
[ "bit_xor",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "bit_xor",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "bit_xor",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "bit_xor",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "bit_xor",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "bit_xor",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "bit_xor",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "bit_xor",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "bit_xor",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "bit_xor",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "broadcast",	"result",	"inet",	0,	0,	0,	0	]
[ "broadcast",	"p",	"inet",	0,	0,	1,	1	]
[ "ceil",	"res_0",	"real",	24,	0,	0,	0	]
[ "ceil",	"arg_1",	"real",	24,	0,	1,	1	]
[ "ceil",	"res_0",	"double",	53,	0,	0,	0	]
[ "ceil",	"arg_1",	"double",	53,	0,	1,	1	]
[ "ceiling",	"res_0",	"real",	24,	0,	0,	0	]
[ "ceiling",	"arg_1",	"real",	24,	0,	1,	1	]
[ "ceiling",	"res_0",	"double",	53,	0,	0,	0	]
[ "ceiling",	"arg_1",	"double",	53,	0,	1,	1	]
[ "char_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "char_length",	"arg_1",	"char",	0,	0,	1,	1	]
[ "char_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "char_length",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "char_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "char_length",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "character_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "character_length",	"arg_1",	"char",	0,	0,	1,	1	]
[ "character_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "character_length",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "character_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "character_length",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "charindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "charindex",	"arg_1",	"char",	0,	0,	1,	1	]
[ "charindex",	"arg_2",	"char",	0,	0,	1,	2	]
[ "charindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "charindex",	"arg_1",	"char",	0,	0,	1,	1	]
[ "charindex",	"arg_2",	"char",	0,	0,	1,	2	]
[ "charindex",	"arg_3",	"int",	32,	0,	1,	3	]
[ "charindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "charindex",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "charindex",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "charindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "charindex",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "charindex",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "charindex",	"arg_3",	"int",	32,	0,	1,	3	]
[ "charindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "charindex",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "charindex",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "charindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "charindex",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "charindex",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "charindex",	"arg_3",	"int",	32,	0,	1,	3	]
[ "code",	"res_0",	"char",	0,	0,	0,	0	]
[ "code",	"arg_1",	"int",	32,	0,	1,	1	]
[ "code",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "code",	"arg_1",	"int",	32,	0,	1,	1	]
[ "code",	"res_0",	"clob",	0,	0,	0,	0	]
[ "code",	"arg_1",	"int",	32,	0,	1,	1	]
[ "columnsize",	"result",	"bigint",	64,	0,	0,	0	]
[ "columnsize",	"nme",	"clob",	0,	0,	1,	1	]
[ "columnsize",	"i",	"bigint",	64,	0,	1,	2	]
[ "columnsize",	"d",	"bigint",	64,	0,	1,	3	]
[ "concat",	"res_0",	"char",	0,	0,	0,	0	]
[ "concat",	"arg_1",	"char",	0,	0,	1,	1	]
[ "concat",	"arg_2",	"char",	0,	0,	1,	2	]
[ "concat",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "concat",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "concat",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "concat",	"res_0",	"clob",	0,	0,	0,	0	]
[ "concat",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "concat",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "contains",	"result",	"boolean",	1,	0,	0,	0	]
[ "contains",	"a",	"geometry",	0,	0,	1,	1	]
[ "contains",	"x",	"double",	53,	0,	1,	2	]
[ "contains",	"y",	"double",	53,	0,	1,	3	]
[ "copyfrom",	"res_0",	"table",	0,	0,	0,	0	]
[ "copyfrom",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "copyfrom",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "copyfrom",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "copyfrom",	"arg_4",	"varchar",	0,	0,	1,	4	]
[ "copyfrom",	"arg_5",	"varchar",	0,	0,	1,	5	]
[ "copyfrom",	"arg_6",	"varchar",	0,	0,	1,	6	]
[ "copyfrom",	"arg_7",	"bigint",	64,	0,	1,	7	]
[ "copyfrom",	"arg_8",	"bigint",	64,	0,	1,	8	]
[ "copyfrom",	"arg_9",	"int",	32,	0,	1,	9	]
[ "copyfrom",	"res_0",	"table",	0,	0,	0,	0	]
[ "copyfrom",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "copyfrom",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "corr",	"result",	"tinyint",	8,	0,	0,	0	]
[ "corr",	"e1",	"tinyint",	8,	0,	1,	1	]
[ "corr",	"e2",	"tinyint",	8,	0,	1,	2	]
[ "corr",	"result",	"smallint",	16,	0,	0,	0	]
[ "corr",	"e1",	"smallint",	16,	0,	1,	1	]
[ "corr",	"e2",	"smallint",	16,	0,	1,	2	]
[ "corr",	"result",	"int",	32,	0,	0,	0	]
[ "corr",	"e1",	"int",	32,	0,	1,	1	]
[ "corr",	"e2",	"int",	32,	0,	1,	2	]
[ "corr",	"result",	"wrd",	64,	0,	0,	0	]
[ "corr",	"e1",	"wrd",	64,	0,	1,	1	]
[ "corr",	"e2",	"wrd",	64,	0,	1,	2	]
[ "corr",	"result",	"bigint",	64,	0,	0,	0	]
[ "corr",	"e1",	"bigint",	64,	0,	1,	1	]
[ "corr",	"e2",	"bigint",	64,	0,	1,	2	]
[ "corr",	"result",	"real",	24,	0,	0,	0	]
[ "corr",	"e1",	"real",	24,	0,	1,	1	]
[ "corr",	"e2",	"real",	24,	0,	1,	2	]
[ "corr",	"result",	"double",	53,	0,	0,	0	]
[ "corr",	"e1",	"double",	53,	0,	1,	1	]
[ "corr",	"e2",	"double",	53,	0,	1,	2	]
[ "corr",	"result",	"hugeint",	128,	0,	0,	0	]
[ "corr",	"e1",	"hugeint",	128,	0,	1,	1	]
[ "corr",	"e2",	"hugeint",	128,	0,	1,	2	]
[ "cos",	"res_0",	"real",	24,	0,	0,	0	]
[ "cos",	"arg_1",	"real",	24,	0,	1,	1	]
[ "cos",	"res_0",	"double",	53,	0,	0,	0	]
[ "cos",	"arg_1",	"double",	53,	0,	1,	1	]
[ "cosh",	"res_0",	"real",	24,	0,	0,	0	]
[ "cosh",	"arg_1",	"real",	24,	0,	1,	1	]
[ "cosh",	"res_0",	"double",	53,	0,	0,	0	]
[ "cosh",	"arg_1",	"double",	53,	0,	1,	1	]
[ "cot",	"res_0",	"real",	24,	0,	0,	0	]
[ "cot",	"arg_1",	"real",	24,	0,	1,	1	]
[ "cot",	"res_0",	"double",	53,	0,	0,	0	]
[ "cot",	"arg_1",	"double",	53,	0,	1,	1	]
[ "count",	"res",	"wrd",	64,	0,	0,	0	]
[ "count_no_nil",	"res",	"wrd",	64,	0,	0,	0	]
[ "curdate",	"res_0",	"date",	0,	0,	0,	0	]
[ "current_date",	"res_0",	"date",	0,	0,	0,	0	]
[ "current_time",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "current_timestamp",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "curtime",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "date_to_str",	"result",	"clob",	0,	0,	0,	0	]
[ "date_to_str",	"d",	"date",	0,	0,	1,	1	]
[ "date_to_str",	"format",	"clob",	0,	0,	1,	2	]
[ "day",	"res_0",	"int",	32,	0,	0,	0	]
[ "day",	"arg_1",	"date",	0,	0,	1,	1	]
[ "day",	"res_0",	"int",	32,	0,	0,	0	]
[ "day",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "day",	"res_0",	"int",	32,	0,	0,	0	]
[ "day",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "day",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "day",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "dayofmonth",	"res_0",	"int",	32,	0,	0,	0	]
[ "dayofmonth",	"arg_1",	"date",	0,	0,	1,	1	]
[ "dayofweek",	"res_0",	"int",	32,	0,	0,	0	]
[ "dayofweek",	"arg_1",	"date",	0,	0,	1,	1	]
[ "dayofyear",	"res_0",	"int",	32,	0,	0,	0	]
[ "dayofyear",	"arg_1",	"date",	0,	0,	1,	1	]
[ "db_users",	"name",	"varchar",	2048,	0,	0,	0	]
[ "debug",	"result",	"int",	32,	0,	0,	0	]
[ "debug",	"debug",	"int",	32,	0,	1,	1	]
[ "degrees",	"result",	"double",	53,	0,	0,	0	]
[ "degrees",	"r",	"double",	53,	0,	1,	1	]
[ "dense_rank",	"res_0",	"int",	32,	0,	0,	0	]
[ "dense_rank",	"arg_1",	"any",	0,	0,	1,	1	]
[ "dense_rank",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "dense_rank",	"arg_3",	"boolean",	1,	0,	1,	3	]
[ "dependencies_columns_on_functions",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_columns_on_functions",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_columns_on_functions",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_columns_on_indexes",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_columns_on_indexes",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_columns_on_indexes",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_columns_on_keys",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_columns_on_keys",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_columns_on_keys",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_columns_on_triggers",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_columns_on_triggers",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_columns_on_triggers",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_columns_on_views",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_columns_on_views",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_columns_on_views",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_functions_on_functions",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_functions_on_functions",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_functions_on_functions",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_functions_os_triggers",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_functions_os_triggers",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_functions_os_triggers",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_keys_on_foreignkeys",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_keys_on_foreignkeys",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_keys_on_foreignkeys",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_owners_on_schemas",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_owners_on_schemas",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_owners_on_schemas",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_schemas_on_users",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_schemas_on_users",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_schemas_on_users",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_tables_on_foreignkeys",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_tables_on_foreignkeys",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_tables_on_foreignkeys",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_tables_on_functions",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_tables_on_functions",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_tables_on_functions",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_tables_on_indexes",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_tables_on_indexes",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_tables_on_indexes",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_tables_on_triggers",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_tables_on_triggers",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_tables_on_triggers",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_tables_on_views",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_tables_on_views",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_tables_on_views",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_views_on_functions",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_views_on_functions",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_views_on_functions",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "dependencies_views_on_triggers",	"sch",	"varchar",	100,	0,	0,	0	]
[ "dependencies_views_on_triggers",	"usr",	"varchar",	100,	0,	0,	1	]
[ "dependencies_views_on_triggers",	"dep_type",	"varchar",	32,	0,	0,	2	]
[ "diff",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "diff",	"arg_1",	"any",	0,	0,	1,	1	]
[ "diff",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "diff",	"arg_1",	"boolean",	1,	0,	1,	1	]
[ "diff",	"arg_2",	"any",	0,	0,	1,	2	]
[ "difference",	"res_0",	"int",	32,	0,	0,	0	]
[ "difference",	"arg_1",	"char",	0,	0,	1,	1	]
[ "difference",	"arg_2",	"char",	0,	0,	1,	2	]
[ "difference",	"res_0",	"int",	32,	0,	0,	0	]
[ "difference",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "difference",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "difference",	"res_0",	"int",	32,	0,	0,	0	]
[ "difference",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "difference",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "editdistance",	"res_0",	"int",	32,	0,	0,	0	]
[ "editdistance",	"arg_1",	"char",	0,	0,	1,	1	]
[ "editdistance",	"arg_2",	"char",	0,	0,	1,	2	]
[ "editdistance",	"res_0",	"int",	32,	0,	0,	0	]
[ "editdistance",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "editdistance",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "editdistance",	"res_0",	"int",	32,	0,	0,	0	]
[ "editdistance",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "editdistance",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "editdistance2",	"res_0",	"int",	32,	0,	0,	0	]
[ "editdistance2",	"arg_1",	"char",	0,	0,	1,	1	]
[ "editdistance2",	"arg_2",	"char",	0,	0,	1,	2	]
[ "editdistance2",	"res_0",	"int",	32,	0,	0,	0	]
[ "editdistance2",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "editdistance2",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "editdistance2",	"res_0",	"int",	32,	0,	0,	0	]
[ "editdistance2",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "editdistance2",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "env",	"name",	"varchar",	1024,	0,	0,	0	]
[ "env",	"value",	"varchar",	2048,	0,	0,	1	]
[ "environment",	"name",	"clob",	0,	0,	0,	0	]
[ "environment",	"value",	"clob",	0,	0,	0,	1	]
[ "epoch",	"result",	"timestamp",	7,	0,	0,	0	]
[ "epoch",	"sec",	"bigint",	64,	0,	1,	1	]
[ "epoch",	"result",	"timestamp",	7,	0,	0,	0	]
[ "epoch",	"sec",	"int",	32,	0,	1,	1	]
[ "epoch",	"result",	"int",	32,	0,	0,	0	]
[ "epoch",	"ts",	"timestamp",	7,	0,	1,	1	]
[ "epoch",	"result",	"int",	32,	0,	0,	0	]
[ "epoch",	"ts",	"timestamptz",	7,	0,	1,	1	]
[ "evalalgebra",	"ra_stmt",	"clob",	0,	0,	1,	0	]
[ "evalalgebra",	"opt",	"boolean",	1,	0,	1,	1	]
[ "exist",	"res",	"boolean",	1,	0,	0,	0	]
[ "exist",	"arg",	"any",	0,	0,	1,	1	]
[ "exp",	"res_0",	"real",	24,	0,	0,	0	]
[ "exp",	"arg_1",	"real",	24,	0,	1,	1	]
[ "exp",	"res_0",	"double",	53,	0,	0,	0	]
[ "exp",	"arg_1",	"double",	53,	0,	1,	1	]
[ "filter",	"result",	"json",	0,	0,	0,	0	]
[ "filter",	"js",	"json",	0,	0,	1,	1	]
[ "filter",	"pathexpr",	"clob",	0,	0,	1,	2	]
[ "filter",	"result",	"json",	0,	0,	0,	0	]
[ "filter",	"js",	"json",	0,	0,	1,	1	]
[ "filter",	"name",	"tinyint",	8,	0,	1,	2	]
[ "filter",	"result",	"json",	0,	0,	0,	0	]
[ "filter",	"js",	"json",	0,	0,	1,	1	]
[ "filter",	"name",	"int",	32,	0,	1,	2	]
[ "filter",	"result",	"json",	0,	0,	0,	0	]
[ "filter",	"js",	"json",	0,	0,	1,	1	]
[ "filter",	"name",	"bigint",	64,	0,	1,	2	]
[ "filter",	"result",	"json",	0,	0,	0,	0	]
[ "filter",	"js",	"json",	0,	0,	1,	1	]
[ "filter",	"name",	"hugeint",	128,	0,	1,	2	]
[ "floor",	"res_0",	"real",	24,	0,	0,	0	]
[ "floor",	"arg_1",	"real",	24,	0,	1,	1	]
[ "floor",	"res_0",	"double",	53,	0,	0,	0	]
[ "floor",	"arg_1",	"double",	53,	0,	1,	1	]
[ "fuse",	"result",	"smallint",	16,	0,	0,	0	]
[ "fuse",	"one",	"tinyint",	8,	0,	1,	1	]
[ "fuse",	"two",	"tinyint",	8,	0,	1,	2	]
[ "fuse",	"result",	"int",	32,	0,	0,	0	]
[ "fuse",	"one",	"smallint",	16,	0,	1,	1	]
[ "fuse",	"two",	"smallint",	16,	0,	1,	2	]
[ "fuse",	"result",	"bigint",	64,	0,	0,	0	]
[ "fuse",	"one",	"int",	32,	0,	1,	1	]
[ "fuse",	"two",	"int",	32,	0,	1,	2	]
[ "fuse",	"result",	"hugeint",	128,	0,	0,	0	]
[ "fuse",	"one",	"bigint",	64,	0,	1,	1	]
[ "fuse",	"two",	"bigint",	64,	0,	1,	2	]
[ "generate_series",	"value",	"tinyint",	8,	0,	0,	0	]
[ "generate_series",	"first",	"tinyint",	8,	0,	1,	1	]
[ "generate_series",	"last",	"tinyint",	8,	0,	1,	2	]
[ "generate_series",	"value",	"tinyint",	8,	0,	0,	0	]
[ "generate_series",	"first",	"tinyint",	8,	0,	1,	1	]
[ "generate_series",	"last",	"tinyint",	8,	0,	1,	2	]
[ "generate_series",	"stepsize",	"tinyint",	8,	0,	1,	3	]
[ "generate_series",	"value",	"smallint",	16,	0,	0,	0	]
[ "generate_series",	"first",	"smallint",	16,	0,	1,	1	]
[ "generate_series",	"last",	"smallint",	16,	0,	1,	2	]
[ "generate_series",	"value",	"smallint",	16,	0,	0,	0	]
[ "generate_series",	"first",	"smallint",	16,	0,	1,	1	]
[ "generate_series",	"last",	"smallint",	16,	0,	1,	2	]
[ "generate_series",	"stepsize",	"smallint",	16,	0,	1,	3	]
[ "generate_series",	"value",	"int",	32,	0,	0,	0	]
[ "generate_series",	"first",	"int",	32,	0,	1,	1	]
[ "generate_series",	"last",	"int",	32,	0,	1,	2	]
[ "generate_series",	"value",	"int",	32,	0,	0,	0	]
[ "generate_series",	"first",	"int",	32,	0,	1,	1	]
[ "generate_series",	"last",	"int",	32,	0,	1,	2	]
[ "generate_series",	"stepsize",	"int",	32,	0,	1,	3	]
[ "generate_series",	"value",	"bigint",	64,	0,	0,	0	]
[ "generate_series",	"first",	"bigint",	64,	0,	1,	1	]
[ "generate_series",	"last",	"bigint",	64,	0,	1,	2	]
[ "generate_series",	"value",	"bigint",	64,	0,	0,	0	]
[ "generate_series",	"first",	"bigint",	64,	0,	1,	1	]
[ "generate_series",	"last",	"bigint",	64,	0,	1,	2	]
[ "generate_series",	"stepsize",	"bigint",	64,	0,	1,	3	]
[ "generate_series",	"value",	"real",	24,	0,	0,	0	]
[ "generate_series",	"first",	"real",	24,	0,	1,	1	]
[ "generate_series",	"last",	"real",	24,	0,	1,	2	]
[ "generate_series",	"stepsize",	"real",	24,	0,	1,	3	]
[ "generate_series",	"value",	"double",	53,	0,	0,	0	]
[ "generate_series",	"first",	"double",	53,	0,	1,	1	]
[ "generate_series",	"last",	"double",	53,	0,	1,	2	]
[ "generate_series",	"stepsize",	"double",	53,	0,	1,	3	]
[ "generate_series",	"value",	"decimal",	10,	2,	0,	0	]
[ "generate_series",	"first",	"decimal",	10,	2,	1,	1	]
[ "generate_series",	"last",	"decimal",	10,	2,	1,	2	]
[ "generate_series",	"stepsize",	"decimal",	10,	2,	1,	3	]
[ "generate_series",	"value",	"timestamp",	7,	0,	0,	0	]
[ "generate_series",	"first",	"timestamp",	7,	0,	1,	1	]
[ "generate_series",	"last",	"timestamp",	7,	0,	1,	2	]
[ "generate_series",	"stepsize",	"sec_interval",	13,	0,	1,	3	]
[ "generate_series",	"value",	"hugeint",	128,	0,	0,	0	]
[ "generate_series",	"first",	"hugeint",	128,	0,	1,	1	]
[ "generate_series",	"last",	"hugeint",	128,	0,	1,	2	]
[ "generate_series",	"value",	"hugeint",	128,	0,	0,	0	]
[ "generate_series",	"first",	"hugeint",	128,	0,	1,	1	]
[ "generate_series",	"last",	"hugeint",	128,	0,	1,	2	]
[ "generate_series",	"stepsize",	"hugeint",	128,	0,	1,	3	]
[ "geometrytype",	"result",	"clob",	0,	0,	0,	0	]
[ "geometrytype",	"geom",	"geometry",	0,	0,	1,	1	]
[ "get_type",	"result",	"clob",	0,	0,	0,	0	]
[ "get_type",	"info",	"int",	32,	0,	1,	1	]
[ "get_type",	"format",	"int",	32,	0,	1,	2	]
[ "get_value_for",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "get_value_for",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "get_value_for",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "getanchor",	"result",	"clob",	0,	0,	0,	0	]
[ "getanchor",	"theurl",	"url",	0,	0,	1,	1	]
[ "getbasename",	"result",	"clob",	0,	0,	0,	0	]
[ "getbasename",	"theurl",	"url",	0,	0,	1,	1	]
[ "getcontent",	"result",	"clob",	0,	0,	0,	0	]
[ "getcontent",	"theurl",	"url",	0,	0,	1,	1	]
[ "getcontext",	"result",	"clob",	0,	0,	0,	0	]
[ "getcontext",	"theurl",	"url",	0,	0,	1,	1	]
[ "getdomain",	"result",	"clob",	0,	0,	0,	0	]
[ "getdomain",	"theurl",	"url",	0,	0,	1,	1	]
[ "getextension",	"result",	"clob",	0,	0,	0,	0	]
[ "getextension",	"theurl",	"url",	0,	0,	1,	1	]
[ "getfile",	"result",	"clob",	0,	0,	0,	0	]
[ "getfile",	"theurl",	"url",	0,	0,	1,	1	]
[ "gethost",	"result",	"clob",	0,	0,	0,	0	]
[ "gethost",	"theurl",	"url",	0,	0,	1,	1	]
[ "getport",	"result",	"clob",	0,	0,	0,	0	]
[ "getport",	"theurl",	"url",	0,	0,	1,	1	]
[ "getproj4",	"result",	"clob",	0,	0,	0,	0	]
[ "getproj4",	"srid_in",	"int",	32,	0,	1,	1	]
[ "getprotocol",	"result",	"clob",	0,	0,	0,	0	]
[ "getprotocol",	"theurl",	"url",	0,	0,	1,	1	]
[ "getquery",	"result",	"clob",	0,	0,	0,	0	]
[ "getquery",	"theurl",	"url",	0,	0,	1,	1	]
[ "getroboturl",	"result",	"clob",	0,	0,	0,	0	]
[ "getroboturl",	"theurl",	"url",	0,	0,	1,	1	]
[ "getuser",	"result",	"clob",	0,	0,	0,	0	]
[ "getuser",	"theurl",	"url",	0,	0,	1,	1	]
[ "has_m",	"result",	"int",	32,	0,	0,	0	]
[ "has_m",	"info",	"int",	32,	0,	1,	1	]
[ "has_z",	"result",	"int",	32,	0,	0,	0	]
[ "has_z",	"info",	"int",	32,	0,	1,	1	]
[ "hash",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "hash",	"arg_1",	"any",	0,	0,	1,	1	]
[ "hashsize",	"result",	"bigint",	64,	0,	0,	0	]
[ "hashsize",	"b",	"boolean",	1,	0,	1,	1	]
[ "hashsize",	"i",	"bigint",	64,	0,	1,	2	]
[ "heapsize",	"result",	"bigint",	64,	0,	0,	0	]
[ "heapsize",	"tpe",	"clob",	0,	0,	1,	1	]
[ "heapsize",	"i",	"bigint",	64,	0,	1,	2	]
[ "heapsize",	"w",	"int",	32,	0,	1,	3	]
[ "host",	"result",	"clob",	0,	0,	0,	0	]
[ "host",	"p",	"inet",	0,	0,	1,	1	]
[ "hostmask",	"result",	"inet",	0,	0,	0,	0	]
[ "hostmask",	"p",	"inet",	0,	0,	1,	1	]
[ "hour",	"res_0",	"int",	32,	0,	0,	0	]
[ "hour",	"arg_1",	"time",	7,	0,	1,	1	]
[ "hour",	"res_0",	"int",	32,	0,	0,	0	]
[ "hour",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "hour",	"res_0",	"int",	32,	0,	0,	0	]
[ "hour",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "hour",	"res_0",	"int",	32,	0,	0,	0	]
[ "hour",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "hour",	"res_0",	"int",	32,	0,	0,	0	]
[ "hour",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "identity",	"res_0",	"oid",	63,	0,	0,	0	]
[ "identity",	"arg_1",	"any",	0,	0,	1,	1	]
[ "ifthenelse",	"res_0",	"any",	0,	0,	0,	0	]
[ "ifthenelse",	"arg_1",	"boolean",	1,	0,	1,	1	]
[ "ifthenelse",	"arg_2",	"any",	0,	0,	1,	2	]
[ "ifthenelse",	"arg_3",	"any",	0,	0,	1,	3	]
[ "ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "ilike",	"arg_1",	"char",	0,	0,	1,	1	]
[ "ilike",	"arg_2",	"char",	0,	0,	1,	2	]
[ "ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "ilike",	"arg_1",	"char",	0,	0,	1,	1	]
[ "ilike",	"arg_2",	"char",	0,	0,	1,	2	]
[ "ilike",	"arg_3",	"char",	0,	0,	1,	3	]
[ "ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "ilike",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "ilike",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "ilike",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "ilike",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "ilike",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "ilike",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "ilike",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "ilike",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "ilike",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "ilike",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "ilike",	"val",	"clob",	0,	0,	1,	0	]
[ "ilike",	"pat",	"clob",	0,	0,	1,	1	]
[ "ilike",	"esc",	"clob",	0,	0,	1,	2	]
[ "ilike",	"val",	"clob",	0,	0,	1,	0	]
[ "ilike",	"pat",	"clob",	0,	0,	1,	1	]
[ "imprintsize",	"result",	"bigint",	64,	0,	0,	0	]
[ "imprintsize",	"i",	"bigint",	64,	0,	1,	1	]
[ "imprintsize",	"nme",	"clob",	0,	0,	1,	2	]
[ "in",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "in",	"arg_1",	"any",	0,	0,	1,	1	]
[ "in",	"arg_2",	"any",	0,	0,	1,	2	]
[ "index",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "index",	"arg_1",	"char",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "index",	"arg_1",	"char",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"int",	32,	0,	0,	0	]
[ "index",	"arg_1",	"char",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "index",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "index",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"int",	32,	0,	0,	0	]
[ "index",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "index",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "index",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "index",	"res_0",	"int",	32,	0,	0,	0	]
[ "index",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "index",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "insert",	"res_0",	"char",	0,	0,	0,	0	]
[ "insert",	"arg_1",	"char",	0,	0,	1,	1	]
[ "insert",	"arg_2",	"int",	32,	0,	1,	2	]
[ "insert",	"arg_3",	"int",	32,	0,	1,	3	]
[ "insert",	"arg_4",	"char",	0,	0,	1,	4	]
[ "insert",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "insert",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "insert",	"arg_2",	"int",	32,	0,	1,	2	]
[ "insert",	"arg_3",	"int",	32,	0,	1,	3	]
[ "insert",	"arg_4",	"varchar",	0,	0,	1,	4	]
[ "insert",	"res_0",	"clob",	0,	0,	0,	0	]
[ "insert",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "insert",	"arg_2",	"int",	32,	0,	1,	2	]
[ "insert",	"arg_3",	"int",	32,	0,	1,	3	]
[ "insert",	"arg_4",	"clob",	0,	0,	1,	4	]
[ "integer",	"result",	"bigint",	64,	0,	0,	0	]
[ "integer",	"js",	"json",	0,	0,	1,	1	]
[ "internaltransform",	"result",	"geometry",	0,	0,	0,	0	]
[ "internaltransform",	"geom",	"geometry",	0,	0,	1,	1	]
[ "internaltransform",	"srid_src",	"int",	32,	0,	1,	2	]
[ "internaltransform",	"srid_dest",	"int",	32,	0,	1,	3	]
[ "internaltransform",	"proj4_src",	"clob",	0,	0,	1,	4	]
[ "internaltransform",	"proj4_dest",	"clob",	0,	0,	1,	5	]
[ "isarray",	"result",	"boolean",	1,	0,	0,	0	]
[ "isarray",	"js",	"clob",	0,	0,	1,	1	]
[ "isarray",	"result",	"boolean",	1,	0,	0,	0	]
[ "isarray",	"js",	"json",	0,	0,	1,	1	]
[ "isaurl",	"result",	"boolean",	1,	0,	0,	0	]
[ "isaurl",	"theurl",	"url",	0,	0,	1,	1	]
[ "isauuid",	"result",	"uuid",	0,	0,	0,	0	]
[ "isauuid",	"u",	"uuid",	0,	0,	1,	1	]
[ "isauuid",	"result",	"uuid",	0,	0,	0,	0	]
[ "isauuid",	"u",	"clob",	0,	0,	1,	1	]
[ "isnull",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "isnull",	"arg_1",	"any",	0,	0,	1,	1	]
[ "isobject",	"result",	"boolean",	1,	0,	0,	0	]
[ "isobject",	"js",	"clob",	0,	0,	1,	1	]
[ "isobject",	"result",	"boolean",	1,	0,	0,	0	]
[ "isobject",	"js",	"json",	0,	0,	1,	1	]
[ "isvalid",	"result",	"boolean",	1,	0,	0,	0	]
[ "isvalid",	"js",	"clob",	0,	0,	1,	1	]
[ "isvalid",	"result",	"boolean",	1,	0,	0,	0	]
[ "isvalid",	"js",	"json",	0,	0,	1,	1	]
[ "keyarray",	"result",	"json",	0,	0,	0,	0	]
[ "keyarray",	"js",	"json",	0,	0,	1,	1	]
[ "lcase",	"res_0",	"char",	0,	0,	0,	0	]
[ "lcase",	"arg_1",	"char",	0,	0,	1,	1	]
[ "lcase",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "lcase",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "lcase",	"res_0",	"clob",	0,	0,	0,	0	]
[ "lcase",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "left",	"res_0",	"char",	0,	0,	0,	0	]
[ "left",	"arg_1",	"char",	0,	0,	1,	1	]
[ "left",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "left",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "left",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left",	"res_0",	"clob",	0,	0,	0,	0	]
[ "left",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "left",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "left_shift",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "left_shift",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "left_shift",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "left_shift",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "left_shift",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "left_shift",	"res_0",	"oid",	63,	0,	0,	0	]
[ "left_shift",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "left_shift",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "left_shift",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"int",	32,	0,	0,	0	]
[ "left_shift",	"arg_1",	"int",	32,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "left_shift",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "left_shift",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "left_shift",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "left_shift",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "left_shift",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "left_shift",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "left_shift",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "left_shift",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "left_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "left_shift",	"result",	"boolean",	1,	0,	0,	0	]
[ "left_shift",	"i1",	"inet",	0,	0,	1,	1	]
[ "left_shift",	"i2",	"inet",	0,	0,	1,	2	]
[ "left_shift_assign",	"result",	"boolean",	1,	0,	0,	0	]
[ "left_shift_assign",	"i1",	"inet",	0,	0,	1,	1	]
[ "left_shift_assign",	"i2",	"inet",	0,	0,	1,	2	]
[ "length",	"res_0",	"int",	32,	0,	0,	0	]
[ "length",	"arg_1",	"char",	0,	0,	1,	1	]
[ "length",	"res_0",	"int",	32,	0,	0,	0	]
[ "length",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "length",	"res_0",	"int",	32,	0,	0,	0	]
[ "length",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "length",	"result",	"int",	32,	0,	0,	0	]
[ "length",	"js",	"json",	0,	0,	1,	1	]
[ "levenshtein",	"res_0",	"int",	32,	0,	0,	0	]
[ "levenshtein",	"arg_1",	"char",	0,	0,	1,	1	]
[ "levenshtein",	"arg_2",	"char",	0,	0,	1,	2	]
[ "levenshtein",	"res_0",	"int",	32,	0,	0,	0	]
[ "levenshtein",	"arg_1",	"char",	0,	0,	1,	1	]
[ "levenshtein",	"arg_2",	"char",	0,	0,	1,	2	]
[ "levenshtein",	"arg_3",	"int",	32,	0,	1,	3	]
[ "levenshtein",	"arg_4",	"int",	32,	0,	1,	4	]
[ "levenshtein",	"arg_5",	"int",	32,	0,	1,	5	]
[ "levenshtein",	"res_0",	"int",	32,	0,	0,	0	]
[ "levenshtein",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "levenshtein",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "levenshtein",	"res_0",	"int",	32,	0,	0,	0	]
[ "levenshtein",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "levenshtein",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "levenshtein",	"arg_3",	"int",	32,	0,	1,	3	]
[ "levenshtein",	"arg_4",	"int",	32,	0,	1,	4	]
[ "levenshtein",	"arg_5",	"int",	32,	0,	1,	5	]
[ "levenshtein",	"res_0",	"int",	32,	0,	0,	0	]
[ "levenshtein",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "levenshtein",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "levenshtein",	"res_0",	"int",	32,	0,	0,	0	]
[ "levenshtein",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "levenshtein",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "levenshtein",	"arg_3",	"int",	32,	0,	1,	3	]
[ "levenshtein",	"arg_4",	"int",	32,	0,	1,	4	]
[ "levenshtein",	"arg_5",	"int",	32,	0,	1,	5	]
[ "like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "like",	"arg_1",	"char",	0,	0,	1,	1	]
[ "like",	"arg_2",	"char",	0,	0,	1,	2	]
[ "like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "like",	"arg_1",	"char",	0,	0,	1,	1	]
[ "like",	"arg_2",	"char",	0,	0,	1,	2	]
[ "like",	"arg_3",	"char",	0,	0,	1,	3	]
[ "like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "like",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "like",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "like",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "like",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "like",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "like",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "like",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "like",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "like",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "like",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "like",	"val",	"clob",	0,	0,	1,	0	]
[ "like",	"pat",	"clob",	0,	0,	1,	1	]
[ "like",	"esc",	"clob",	0,	0,	1,	2	]
[ "like",	"val",	"clob",	0,	0,	1,	0	]
[ "like",	"pat",	"clob",	0,	0,	1,	1	]
[ "local_timezone",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "localtime",	"res_0",	"time",	7,	0,	0,	0	]
[ "localtimestamp",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "locate",	"res_0",	"int",	32,	0,	0,	0	]
[ "locate",	"arg_1",	"char",	0,	0,	1,	1	]
[ "locate",	"arg_2",	"char",	0,	0,	1,	2	]
[ "locate",	"res_0",	"int",	32,	0,	0,	0	]
[ "locate",	"arg_1",	"char",	0,	0,	1,	1	]
[ "locate",	"arg_2",	"char",	0,	0,	1,	2	]
[ "locate",	"arg_3",	"int",	32,	0,	1,	3	]
[ "locate",	"res_0",	"int",	32,	0,	0,	0	]
[ "locate",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "locate",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "locate",	"res_0",	"int",	32,	0,	0,	0	]
[ "locate",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "locate",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "locate",	"arg_3",	"int",	32,	0,	1,	3	]
[ "locate",	"res_0",	"int",	32,	0,	0,	0	]
[ "locate",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "locate",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "locate",	"res_0",	"int",	32,	0,	0,	0	]
[ "locate",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "locate",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "locate",	"arg_3",	"int",	32,	0,	1,	3	]
[ "log",	"res_0",	"real",	24,	0,	0,	0	]
[ "log",	"arg_1",	"real",	24,	0,	1,	1	]
[ "log",	"res_0",	"double",	53,	0,	0,	0	]
[ "log",	"arg_1",	"double",	53,	0,	1,	1	]
[ "log10",	"res_0",	"real",	24,	0,	0,	0	]
[ "log10",	"arg_1",	"real",	24,	0,	1,	1	]
[ "log10",	"res_0",	"double",	53,	0,	0,	0	]
[ "log10",	"arg_1",	"double",	53,	0,	1,	1	]
[ "lower",	"res_0",	"char",	0,	0,	0,	0	]
[ "lower",	"arg_1",	"char",	0,	0,	1,	1	]
[ "lower",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "lower",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "lower",	"res_0",	"clob",	0,	0,	0,	0	]
[ "lower",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "lpad",	"res_0",	"char",	0,	0,	0,	0	]
[ "lpad",	"arg_1",	"char",	0,	0,	1,	1	]
[ "lpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "lpad",	"res_0",	"char",	0,	0,	0,	0	]
[ "lpad",	"arg_1",	"char",	0,	0,	1,	1	]
[ "lpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "lpad",	"arg_3",	"char",	0,	0,	1,	3	]
[ "lpad",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "lpad",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "lpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "lpad",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "lpad",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "lpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "lpad",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "lpad",	"res_0",	"clob",	0,	0,	0,	0	]
[ "lpad",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "lpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "lpad",	"res_0",	"clob",	0,	0,	0,	0	]
[ "lpad",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "lpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "lpad",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "ltrim",	"res_0",	"char",	0,	0,	0,	0	]
[ "ltrim",	"arg_1",	"char",	0,	0,	1,	1	]
[ "ltrim",	"res_0",	"char",	0,	0,	0,	0	]
[ "ltrim",	"arg_1",	"char",	0,	0,	1,	1	]
[ "ltrim",	"arg_2",	"char",	0,	0,	1,	2	]
[ "ltrim",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "ltrim",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "ltrim",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "ltrim",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "ltrim",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "ltrim",	"res_0",	"clob",	0,	0,	0,	0	]
[ "ltrim",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "ltrim",	"res_0",	"clob",	0,	0,	0,	0	]
[ "ltrim",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "ltrim",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "malfunctions",	"signature",	"clob",	0,	0,	0,	0	]
[ "malfunctions",	"address",	"clob",	0,	0,	0,	1	]
[ "malfunctions",	"comment",	"clob",	0,	0,	0,	2	]
[ "masklen",	"result",	"int",	32,	0,	0,	0	]
[ "masklen",	"p",	"inet",	0,	0,	1,	1	]
[ "max",	"res",	"any",	0,	0,	0,	0	]
[ "max",	"arg",	"any",	0,	0,	1,	1	]
[ "mbr",	"result",	"mbr",	0,	0,	0,	0	]
[ "mbr",	"geom",	"geometry",	0,	0,	1,	1	]
[ "mbr_above",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_above",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_above",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_above",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_above",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_above",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_below",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_below",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_below",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_below",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_below",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_below",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_contained",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_contained",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_contained",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_contained",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_contained",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_contained",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_contains",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_contains",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_contains",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_contains",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_contains",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_contains",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_distance",	"res_0",	"double",	53,	0,	0,	0	]
[ "mbr_distance",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_distance",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_distance",	"res_0",	"double",	53,	0,	0,	0	]
[ "mbr_distance",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_distance",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_equal",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_equal",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_equal",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_equal",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_equal",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_equal",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_left",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_left",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_left",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_left",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_left",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_left",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_overlap",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_overlap",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_overlap",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_overlap",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_overlap_or_above",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_above",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_overlap_or_above",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_overlap_or_above",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_above",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_overlap_or_above",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_overlap_or_below",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_below",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_overlap_or_below",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_overlap_or_below",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_below",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_overlap_or_below",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_overlap_or_left",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_left",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_overlap_or_left",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_overlap_or_left",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_left",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_overlap_or_left",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_overlap_or_right",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_right",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_overlap_or_right",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_overlap_or_right",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_overlap_or_right",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_overlap_or_right",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "mbr_right",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_right",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "mbr_right",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "mbr_right",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "mbr_right",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "mbr_right",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "md5",	"result",	"clob",	0,	0,	0,	0	]
[ "md5",	"v",	"clob",	0,	0,	1,	1	]
[ "median",	"result",	"tinyint",	8,	0,	0,	0	]
[ "median",	"val",	"tinyint",	8,	0,	1,	1	]
[ "median",	"result",	"smallint",	16,	0,	0,	0	]
[ "median",	"val",	"smallint",	16,	0,	1,	1	]
[ "median",	"result",	"int",	32,	0,	0,	0	]
[ "median",	"val",	"int",	32,	0,	1,	1	]
[ "median",	"result",	"wrd",	64,	0,	0,	0	]
[ "median",	"val",	"wrd",	64,	0,	1,	1	]
[ "median",	"result",	"bigint",	64,	0,	0,	0	]
[ "median",	"val",	"bigint",	64,	0,	1,	1	]
[ "median",	"result",	"decimal",	18,	3,	0,	0	]
[ "median",	"val",	"decimal",	18,	3,	1,	1	]
[ "median",	"result",	"real",	24,	0,	0,	0	]
[ "median",	"val",	"real",	24,	0,	1,	1	]
[ "median",	"result",	"double",	53,	0,	0,	0	]
[ "median",	"val",	"double",	53,	0,	1,	1	]
[ "median",	"result",	"date",	0,	0,	0,	0	]
[ "median",	"val",	"date",	0,	0,	1,	1	]
[ "median",	"result",	"time",	1,	0,	0,	0	]
[ "median",	"val",	"time",	1,	0,	1,	1	]
[ "median",	"result",	"timestamp",	7,	0,	0,	0	]
[ "median",	"val",	"timestamp",	7,	0,	1,	1	]
[ "median",	"result",	"hugeint",	128,	0,	0,	0	]
[ "median",	"val",	"hugeint",	128,	0,	1,	1	]
[ "min",	"res",	"any",	0,	0,	0,	0	]
[ "min",	"arg",	"any",	0,	0,	1,	1	]
[ "minute",	"res_0",	"int",	32,	0,	0,	0	]
[ "minute",	"arg_1",	"time",	7,	0,	1,	1	]
[ "minute",	"res_0",	"int",	32,	0,	0,	0	]
[ "minute",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "minute",	"res_0",	"int",	32,	0,	0,	0	]
[ "minute",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "minute",	"res_0",	"int",	32,	0,	0,	0	]
[ "minute",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "minute",	"res_0",	"int",	32,	0,	0,	0	]
[ "minute",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "mod",	"res_0",	"oid",	63,	0,	0,	0	]
[ "mod",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "mod",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "mod",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "mod",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "mod",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "mod",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "mod",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "mod",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "mod",	"res_0",	"int",	32,	0,	0,	0	]
[ "mod",	"arg_1",	"int",	32,	0,	1,	1	]
[ "mod",	"arg_2",	"int",	32,	0,	1,	2	]
[ "mod",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "mod",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "mod",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "mod",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "mod",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "mod",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "mod",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "mod",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "mod",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "mod",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "mod",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "mod",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "mod",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "mod",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "mod",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "mod",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "mod",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "mod",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "mod",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "mod",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "mod",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "mod",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "mod",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "mod",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "mod",	"res_0",	"real",	24,	0,	0,	0	]
[ "mod",	"arg_1",	"real",	24,	0,	1,	1	]
[ "mod",	"arg_2",	"real",	24,	0,	1,	2	]
[ "mod",	"res_0",	"double",	53,	0,	0,	0	]
[ "mod",	"arg_1",	"double",	53,	0,	1,	1	]
[ "mod",	"arg_2",	"double",	53,	0,	1,	2	]
[ "month",	"res_0",	"int",	32,	0,	0,	0	]
[ "month",	"arg_1",	"date",	0,	0,	1,	1	]
[ "month",	"res_0",	"int",	32,	0,	0,	0	]
[ "month",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "month",	"res_0",	"int",	32,	0,	0,	0	]
[ "month",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "month",	"res_0",	"int",	32,	0,	0,	0	]
[ "month",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "ms_round",	"result",	"double",	53,	0,	0,	0	]
[ "ms_round",	"num",	"double",	53,	0,	1,	1	]
[ "ms_round",	"prc",	"int",	32,	0,	1,	2	]
[ "ms_round",	"truncat",	"int",	32,	0,	1,	3	]
[ "ms_str",	"result",	"clob",	0,	0,	0,	0	]
[ "ms_str",	"num",	"double",	53,	0,	1,	1	]
[ "ms_str",	"prc",	"int",	32,	0,	1,	2	]
[ "ms_str",	"truncat",	"int",	32,	0,	1,	3	]
[ "ms_stuff",	"result",	"varchar",	32,	0,	0,	0	]
[ "ms_stuff",	"s1",	"varchar",	32,	0,	1,	1	]
[ "ms_stuff",	"st",	"int",	32,	0,	1,	2	]
[ "ms_stuff",	"len",	"int",	32,	0,	1,	3	]
[ "ms_stuff",	"s3",	"varchar",	32,	0,	1,	4	]
[ "ms_trunc",	"result",	"double",	53,	0,	0,	0	]
[ "ms_trunc",	"num",	"double",	53,	0,	1,	1	]
[ "ms_trunc",	"prc",	"int",	32,	0,	1,	2	]
[ "netmask",	"result",	"inet",	0,	0,	0,	0	]
[ "netmask",	"p",	"inet",	0,	0,	1,	1	]
[ "network",	"result",	"inet",	0,	0,	0,	0	]
[ "network",	"p",	"inet",	0,	0,	1,	1	]
[ "newurl",	"result",	"url",	0,	0,	0,	0	]
[ "newurl",	"protocol",	"clob",	0,	0,	1,	1	]
[ "newurl",	"hostname",	"clob",	0,	0,	1,	2	]
[ "newurl",	"port",	"int",	32,	0,	1,	3	]
[ "newurl",	"file",	"clob",	0,	0,	1,	4	]
[ "newurl",	"result",	"url",	0,	0,	0,	0	]
[ "newurl",	"protocol",	"clob",	0,	0,	1,	1	]
[ "newurl",	"hostname",	"clob",	0,	0,	1,	2	]
[ "newurl",	"file",	"clob",	0,	0,	1,	3	]
[ "next_value_for",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "next_value_for",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "next_value_for",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "not",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not",	"arg_1",	"boolean",	1,	0,	1,	1	]
[ "not_exist",	"res",	"boolean",	1,	0,	0,	0	]
[ "not_exist",	"arg",	"any",	0,	0,	1,	1	]
[ "not_ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_ilike",	"arg_1",	"char",	0,	0,	1,	1	]
[ "not_ilike",	"arg_2",	"char",	0,	0,	1,	2	]
[ "not_ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_ilike",	"arg_1",	"char",	0,	0,	1,	1	]
[ "not_ilike",	"arg_2",	"char",	0,	0,	1,	2	]
[ "not_ilike",	"arg_3",	"char",	0,	0,	1,	3	]
[ "not_ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_ilike",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "not_ilike",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "not_ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_ilike",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "not_ilike",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "not_ilike",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "not_ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_ilike",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "not_ilike",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "not_ilike",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_ilike",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "not_ilike",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "not_ilike",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "not_like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_like",	"arg_1",	"char",	0,	0,	1,	1	]
[ "not_like",	"arg_2",	"char",	0,	0,	1,	2	]
[ "not_like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_like",	"arg_1",	"char",	0,	0,	1,	1	]
[ "not_like",	"arg_2",	"char",	0,	0,	1,	2	]
[ "not_like",	"arg_3",	"char",	0,	0,	1,	3	]
[ "not_like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_like",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "not_like",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "not_like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_like",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "not_like",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "not_like",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "not_like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_like",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "not_like",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "not_like",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "not_like",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "not_like",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "not_like",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "not_unique",	"res",	"boolean",	1,	0,	0,	0	]
[ "not_unique",	"arg",	"oid",	63,	0,	1,	1	]
[ "not_uniques",	"res_0",	"oid",	63,	0,	0,	0	]
[ "not_uniques",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "not_uniques",	"res_0",	"oid",	63,	0,	0,	0	]
[ "not_uniques",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "number",	"result",	"double",	53,	0,	0,	0	]
[ "number",	"js",	"json",	0,	0,	1,	1	]
[ "octet_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "octet_length",	"arg_1",	"char",	0,	0,	1,	1	]
[ "octet_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "octet_length",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "octet_length",	"res_0",	"int",	32,	0,	0,	0	]
[ "octet_length",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "optimizer_stats",	"rewrite",	"clob",	0,	0,	0,	0	]
[ "optimizer_stats",	"count",	"int",	32,	0,	0,	1	]
[ "optimizers",	"name",	"clob",	0,	0,	0,	0	]
[ "optimizers",	"def",	"clob",	0,	0,	0,	1	]
[ "optimizers",	"status",	"clob",	0,	0,	0,	2	]
[ "or",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "or",	"arg_1",	"boolean",	1,	0,	1,	1	]
[ "or",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "output",	"result",	"clob",	0,	0,	0,	0	]
[ "output",	"js",	"json",	0,	0,	1,	1	]
[ "password_hash",	"result",	"clob",	0,	0,	0,	0	]
[ "password_hash",	"username",	"clob",	0,	0,	1,	1	]
[ "patindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "patindex",	"arg_1",	"char",	0,	0,	1,	1	]
[ "patindex",	"arg_2",	"char",	0,	0,	1,	2	]
[ "patindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "patindex",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "patindex",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "patindex",	"res_0",	"int",	32,	0,	0,	0	]
[ "patindex",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "patindex",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "pause",	"tag",	"int",	32,	0,	1,	0	]
[ "pause",	"tag",	"bigint",	64,	0,	1,	0	]
[ "pi",	"res_0",	"double",	53,	0,	0,	0	]
[ "power",	"res_0",	"real",	24,	0,	0,	0	]
[ "power",	"arg_1",	"real",	24,	0,	1,	1	]
[ "power",	"arg_2",	"real",	24,	0,	1,	2	]
[ "power",	"res_0",	"double",	53,	0,	0,	0	]
[ "power",	"arg_1",	"double",	53,	0,	1,	1	]
[ "power",	"arg_2",	"double",	53,	0,	1,	2	]
[ "prod",	"res",	"hugeint",	128,	0,	0,	0	]
[ "prod",	"arg",	"tinyint",	8,	0,	1,	1	]
[ "prod",	"res",	"hugeint",	128,	0,	0,	0	]
[ "prod",	"arg",	"smallint",	16,	0,	1,	1	]
[ "prod",	"res",	"hugeint",	128,	0,	0,	0	]
[ "prod",	"arg",	"int",	32,	0,	1,	1	]
[ "prod",	"res",	"hugeint",	128,	0,	0,	0	]
[ "prod",	"arg",	"bigint",	64,	0,	1,	1	]
[ "prod",	"res",	"hugeint",	128,	0,	0,	0	]
[ "prod",	"arg",	"hugeint",	128,	0,	1,	1	]
[ "prod",	"res",	"decimal",	39,	0,	0,	0	]
[ "prod",	"arg",	"decimal",	2,	0,	1,	1	]
[ "prod",	"res",	"decimal",	39,	0,	0,	0	]
[ "prod",	"arg",	"decimal",	4,	0,	1,	1	]
[ "prod",	"res",	"decimal",	39,	0,	0,	0	]
[ "prod",	"arg",	"decimal",	9,	0,	1,	1	]
[ "prod",	"res",	"decimal",	39,	0,	0,	0	]
[ "prod",	"arg",	"decimal",	18,	0,	1,	1	]
[ "prod",	"res",	"decimal",	39,	0,	0,	0	]
[ "prod",	"arg",	"decimal",	39,	0,	1,	1	]
[ "prod",	"res",	"real",	24,	0,	0,	0	]
[ "prod",	"arg",	"real",	24,	0,	1,	1	]
[ "prod",	"res",	"double",	53,	0,	0,	0	]
[ "prod",	"arg",	"double",	53,	0,	1,	1	]
[ "qgramnormalize",	"res_0",	"char",	0,	0,	0,	0	]
[ "qgramnormalize",	"arg_1",	"char",	0,	0,	1,	1	]
[ "qgramnormalize",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "qgramnormalize",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "qgramnormalize",	"res_0",	"clob",	0,	0,	0,	0	]
[ "qgramnormalize",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "quantile",	"result",	"tinyint",	8,	0,	0,	0	]
[ "quantile",	"val",	"tinyint",	8,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"smallint",	16,	0,	0,	0	]
[ "quantile",	"val",	"smallint",	16,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"int",	32,	0,	0,	0	]
[ "quantile",	"val",	"int",	32,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"wrd",	64,	0,	0,	0	]
[ "quantile",	"val",	"wrd",	64,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"bigint",	64,	0,	0,	0	]
[ "quantile",	"val",	"bigint",	64,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"decimal",	18,	3,	0,	0	]
[ "quantile",	"val",	"decimal",	18,	3,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"real",	24,	0,	0,	0	]
[ "quantile",	"val",	"real",	24,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"double",	53,	0,	0,	0	]
[ "quantile",	"val",	"double",	53,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"date",	0,	0,	0,	0	]
[ "quantile",	"val",	"date",	0,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"time",	1,	0,	0,	0	]
[ "quantile",	"val",	"time",	1,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"timestamp",	7,	0,	0,	0	]
[ "quantile",	"val",	"timestamp",	7,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "quantile",	"result",	"hugeint",	128,	0,	0,	0	]
[ "quantile",	"val",	"hugeint",	128,	0,	1,	1	]
[ "quantile",	"q",	"double",	53,	0,	1,	2	]
[ "querycache",	"query",	"clob",	0,	0,	0,	0	]
[ "querycache",	"count",	"int",	32,	0,	0,	1	]
[ "querylog",	"filename",	"clob",	0,	0,	1,	0	]
[ "querylog_calls",	"id",	"oid",	63,	0,	0,	0	]
[ "querylog_calls",	"start",	"timestamp",	7,	0,	0,	1	]
[ "querylog_calls",	"stop",	"timestamp",	7,	0,	0,	2	]
[ "querylog_calls",	"arguments",	"clob",	0,	0,	0,	3	]
[ "querylog_calls",	"tuples",	"wrd",	64,	0,	0,	4	]
[ "querylog_calls",	"run",	"bigint",	64,	0,	0,	5	]
[ "querylog_calls",	"ship",	"bigint",	64,	0,	0,	6	]
[ "querylog_calls",	"cpu",	"int",	32,	0,	0,	7	]
[ "querylog_calls",	"io",	"int",	32,	0,	0,	8	]
[ "querylog_catalog",	"id",	"oid",	63,	0,	0,	0	]
[ "querylog_catalog",	"owner",	"clob",	0,	0,	0,	1	]
[ "querylog_catalog",	"defined",	"timestamp",	7,	0,	0,	2	]
[ "querylog_catalog",	"query",	"clob",	0,	0,	0,	3	]
[ "querylog_catalog",	"pipe",	"clob",	0,	0,	0,	4	]
[ "querylog_catalog",	"plan",	"clob",	0,	0,	0,	5	]
[ "querylog_catalog",	"mal",	"int",	32,	0,	0,	6	]
[ "querylog_catalog",	"optimize",	"bigint",	64,	0,	0,	7	]
[ "querylog_enable",	"threshold",	"smallint",	16,	0,	1,	0	]
[ "queue",	"qtag",	"bigint",	64,	0,	0,	0	]
[ "queue",	"user",	"clob",	0,	0,	0,	1	]
[ "queue",	"started",	"timestamp",	7,	0,	0,	2	]
[ "queue",	"estimate",	"timestamp",	7,	0,	0,	3	]
[ "queue",	"progress",	"int",	32,	0,	0,	4	]
[ "queue",	"status",	"clob",	0,	0,	0,	5	]
[ "queue",	"tag",	"oid",	63,	0,	0,	6	]
[ "queue",	"query",	"clob",	0,	0,	0,	7	]
[ "radians",	"result",	"double",	53,	0,	0,	0	]
[ "radians",	"d",	"double",	53,	0,	1,	1	]
[ "rand",	"res_0",	"int",	32,	0,	0,	0	]
[ "rand",	"res_0",	"int",	32,	0,	0,	0	]
[ "rand",	"arg_1",	"int",	32,	0,	1,	1	]
[ "rank",	"res_0",	"int",	32,	0,	0,	0	]
[ "rank",	"arg_1",	"any",	0,	0,	1,	1	]
[ "rank",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "rank",	"arg_3",	"boolean",	1,	0,	1,	3	]
[ "rejects",	"rowid",	"bigint",	64,	0,	0,	0	]
[ "rejects",	"fldid",	"int",	32,	0,	0,	1	]
[ "rejects",	"message",	"clob",	0,	0,	0,	2	]
[ "rejects",	"input",	"clob",	0,	0,	0,	3	]
[ "repeat",	"res_0",	"char",	0,	0,	0,	0	]
[ "repeat",	"arg_1",	"char",	0,	0,	1,	1	]
[ "repeat",	"arg_2",	"int",	32,	0,	1,	2	]
[ "repeat",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "repeat",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "repeat",	"arg_2",	"int",	32,	0,	1,	2	]
[ "repeat",	"res_0",	"clob",	0,	0,	0,	0	]
[ "repeat",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "repeat",	"arg_2",	"int",	32,	0,	1,	2	]
[ "replace",	"res_0",	"char",	0,	0,	0,	0	]
[ "replace",	"arg_1",	"char",	0,	0,	1,	1	]
[ "replace",	"arg_2",	"char",	0,	0,	1,	2	]
[ "replace",	"arg_3",	"char",	0,	0,	1,	3	]
[ "replace",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "replace",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "replace",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "replace",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "replace",	"res_0",	"clob",	0,	0,	0,	0	]
[ "replace",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "replace",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "replace",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "restart",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "restart",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "restart",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "restart",	"arg_3",	"bigint",	64,	0,	1,	3	]
[ "resume",	"tag",	"int",	32,	0,	1,	0	]
[ "resume",	"tag",	"bigint",	64,	0,	1,	0	]
[ "reuse",	"sys",	"clob",	0,	0,	1,	0	]
[ "reuse",	"tab",	"clob",	0,	0,	1,	1	]
[ "reverse",	"result",	"clob",	0,	0,	0,	0	]
[ "reverse",	"src",	"clob",	0,	0,	1,	1	]
[ "right",	"res_0",	"char",	0,	0,	0,	0	]
[ "right",	"arg_1",	"char",	0,	0,	1,	1	]
[ "right",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "right",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "right",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right",	"res_0",	"clob",	0,	0,	0,	0	]
[ "right",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "right",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "right_shift",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "right_shift",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "right_shift",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "right_shift",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "right_shift",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "right_shift",	"res_0",	"oid",	63,	0,	0,	0	]
[ "right_shift",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "right_shift",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "right_shift",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"int",	32,	0,	0,	0	]
[ "right_shift",	"arg_1",	"int",	32,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "right_shift",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "right_shift",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "right_shift",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "right_shift",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "right_shift",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "right_shift",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "right_shift",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "right_shift",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "right_shift",	"arg_2",	"int",	32,	0,	1,	2	]
[ "right_shift",	"result",	"boolean",	1,	0,	0,	0	]
[ "right_shift",	"i1",	"inet",	0,	0,	1,	1	]
[ "right_shift",	"i2",	"inet",	0,	0,	1,	2	]
[ "right_shift_assign",	"result",	"boolean",	1,	0,	0,	0	]
[ "right_shift_assign",	"i1",	"inet",	0,	0,	1,	1	]
[ "right_shift_assign",	"i2",	"inet",	0,	0,	1,	2	]
[ "rotate_xor_hash",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "rotate_xor_hash",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "rotate_xor_hash",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rotate_xor_hash",	"arg_3",	"any",	0,	0,	1,	3	]
[ "round",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "round",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "round",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "round",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "round",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "round",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "round",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "round",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "round",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "round",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "round",	"res_0",	"real",	24,	0,	0,	0	]
[ "round",	"arg_1",	"real",	24,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "round",	"res_0",	"double",	53,	0,	0,	0	]
[ "round",	"arg_1",	"double",	53,	0,	1,	1	]
[ "round",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "row_number",	"res_0",	"int",	32,	0,	0,	0	]
[ "row_number",	"arg_1",	"any",	0,	0,	1,	1	]
[ "row_number",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "row_number",	"arg_3",	"boolean",	1,	0,	1,	3	]
[ "rowid",	"res_0",	"int",	32,	0,	0,	0	]
[ "rowid",	"arg_1",	"any",	0,	0,	1,	1	]
[ "rowid",	"res_0",	"oid",	63,	0,	0,	0	]
[ "rowid",	"arg_1",	"any",	0,	0,	1,	1	]
[ "rowid",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "rowid",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "rpad",	"res_0",	"char",	0,	0,	0,	0	]
[ "rpad",	"arg_1",	"char",	0,	0,	1,	1	]
[ "rpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rpad",	"res_0",	"char",	0,	0,	0,	0	]
[ "rpad",	"arg_1",	"char",	0,	0,	1,	1	]
[ "rpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rpad",	"arg_3",	"char",	0,	0,	1,	3	]
[ "rpad",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "rpad",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "rpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rpad",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "rpad",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "rpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rpad",	"arg_3",	"varchar",	0,	0,	1,	3	]
[ "rpad",	"res_0",	"clob",	0,	0,	0,	0	]
[ "rpad",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "rpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rpad",	"res_0",	"clob",	0,	0,	0,	0	]
[ "rpad",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "rpad",	"arg_2",	"int",	32,	0,	1,	2	]
[ "rpad",	"arg_3",	"clob",	0,	0,	1,	3	]
[ "rtrim",	"res_0",	"char",	0,	0,	0,	0	]
[ "rtrim",	"arg_1",	"char",	0,	0,	1,	1	]
[ "rtrim",	"res_0",	"char",	0,	0,	0,	0	]
[ "rtrim",	"arg_1",	"char",	0,	0,	1,	1	]
[ "rtrim",	"arg_2",	"char",	0,	0,	1,	2	]
[ "rtrim",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "rtrim",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "rtrim",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "rtrim",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "rtrim",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "rtrim",	"res_0",	"clob",	0,	0,	0,	0	]
[ "rtrim",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "rtrim",	"res_0",	"clob",	0,	0,	0,	0	]
[ "rtrim",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "rtrim",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "scale_down",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_down",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_down",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_down",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_down",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_down",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_down",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_down",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_down",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_down",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_down",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_down",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_down",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_down",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_down",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_down",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_down",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_down",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_down",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_down",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_down",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_down",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_down",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_down",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_down",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_down",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_down",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_down",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_down",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_down",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_down",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_down",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_down",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_down",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_down",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_down",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_down",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_down",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_down",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_down",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_down",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_down",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_down",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_down",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_down",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_down",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_down",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_down",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"oid",	63,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"int",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"int",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"real",	24,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"real",	24,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"double",	53,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"double",	53,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"time",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"time",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"date",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"date",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"blob",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"blob",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometry",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometry",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"geometrya",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"geometrya",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"int",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"real",	24,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"double",	53,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"time",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"date",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"blob",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometry",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"geometrya",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "scale_up",	"res_0",	"mbr",	0,	0,	0,	0	]
[ "scale_up",	"arg_1",	"mbr",	0,	0,	1,	1	]
[ "scale_up",	"arg_2",	"mbr",	0,	0,	1,	2	]
[ "second",	"res_0",	"decimal",	9,	3,	0,	0	]
[ "second",	"arg_1",	"time",	7,	0,	1,	1	]
[ "second",	"res_0",	"decimal",	9,	3,	0,	0	]
[ "second",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "second",	"res_0",	"decimal",	9,	3,	0,	0	]
[ "second",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "second",	"res_0",	"decimal",	9,	3,	0,	0	]
[ "second",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "second",	"res_0",	"int",	32,	0,	0,	0	]
[ "second",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sessions",	"user",	"clob",	0,	0,	0,	0	]
[ "sessions",	"login",	"timestamp",	7,	0,	0,	1	]
[ "sessions",	"sessiontimeout",	"bigint",	64,	0,	0,	2	]
[ "sessions",	"lastcommand",	"timestamp",	7,	0,	0,	3	]
[ "sessions",	"querytimeout",	"bigint",	64,	0,	0,	4	]
[ "sessions",	"active",	"boolean",	1,	0,	0,	5	]
[ "setheartbeat",	"beat",	"int",	32,	0,	1,	0	]
[ "setmasklen",	"result",	"inet",	0,	0,	0,	0	]
[ "setmasklen",	"p",	"inet",	0,	0,	1,	1	]
[ "setmasklen",	"mask",	"int",	32,	0,	1,	2	]
[ "setpoolsize",	"poolsize",	"int",	32,	0,	1,	0	]
[ "setsession",	"timeout",	"bigint",	64,	0,	1,	0	]
[ "setstream",	"host",	"clob",	0,	0,	1,	0	]
[ "setstream",	"port",	"int",	32,	0,	1,	1	]
[ "settimeout",	"query",	"bigint",	64,	0,	1,	0	]
[ "settimeout",	"query",	"bigint",	64,	0,	1,	0	]
[ "settimeout",	"session",	"bigint",	64,	0,	1,	1	]
[ "shrink",	"sys",	"clob",	0,	0,	1,	0	]
[ "shrink",	"tab",	"clob",	0,	0,	1,	1	]
[ "shutdown",	"delay",	"tinyint",	8,	0,	1,	0	]
[ "shutdown",	"delay",	"tinyint",	8,	0,	1,	0	]
[ "shutdown",	"force",	"boolean",	1,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sign",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sign",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "similarity",	"res_0",	"double",	53,	0,	0,	0	]
[ "similarity",	"arg_1",	"char",	0,	0,	1,	1	]
[ "similarity",	"arg_2",	"char",	0,	0,	1,	2	]
[ "similarity",	"res_0",	"double",	53,	0,	0,	0	]
[ "similarity",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "similarity",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "similarity",	"res_0",	"double",	53,	0,	0,	0	]
[ "similarity",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "similarity",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "sin",	"res_0",	"real",	24,	0,	0,	0	]
[ "sin",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sin",	"res_0",	"double",	53,	0,	0,	0	]
[ "sin",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sinh",	"res_0",	"real",	24,	0,	0,	0	]
[ "sinh",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sinh",	"res_0",	"double",	53,	0,	0,	0	]
[ "sinh",	"arg_1",	"double",	53,	0,	1,	1	]
[ "soundex",	"res_0",	"char",	0,	0,	0,	0	]
[ "soundex",	"arg_1",	"char",	0,	0,	1,	1	]
[ "soundex",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "soundex",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "soundex",	"res_0",	"clob",	0,	0,	0,	0	]
[ "soundex",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "space",	"res_0",	"char",	0,	0,	0,	0	]
[ "space",	"arg_1",	"int",	32,	0,	1,	1	]
[ "space",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "space",	"arg_1",	"int",	32,	0,	1,	1	]
[ "space",	"res_0",	"clob",	0,	0,	0,	0	]
[ "space",	"arg_1",	"int",	32,	0,	1,	1	]
[ "splitpart",	"res_0",	"char",	0,	0,	0,	0	]
[ "splitpart",	"arg_1",	"char",	0,	0,	1,	1	]
[ "splitpart",	"arg_2",	"char",	0,	0,	1,	2	]
[ "splitpart",	"arg_3",	"int",	32,	0,	1,	3	]
[ "splitpart",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "splitpart",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "splitpart",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "splitpart",	"arg_3",	"int",	32,	0,	1,	3	]
[ "splitpart",	"res_0",	"clob",	0,	0,	0,	0	]
[ "splitpart",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "splitpart",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "splitpart",	"arg_3",	"int",	32,	0,	1,	3	]
[ "sql_add",	"res_0",	"oid",	63,	0,	0,	0	]
[ "sql_add",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "sql_add",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_add",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sql_add",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_add",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_add",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_add",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_add",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_add",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_add",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_add",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_add",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_add",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_add",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_add",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_add",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_add",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_add",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "sql_add",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_add",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_add",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_add",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_add",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_add",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_add",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_add",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_add",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_add",	"res_0",	"real",	24,	0,	0,	0	]
[ "sql_add",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sql_add",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_add",	"res_0",	"double",	53,	0,	0,	0	]
[ "sql_add",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sql_add",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_add",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_add",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_add",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_add",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_add",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_add",	"res_0",	"date",	0,	0,	0,	0	]
[ "sql_add",	"arg_1",	"date",	0,	0,	1,	1	]
[ "sql_add",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_add",	"res_0",	"date",	0,	0,	0,	0	]
[ "sql_add",	"arg_1",	"date",	0,	0,	1,	1	]
[ "sql_add",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "sql_add",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "sql_add",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_add",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "sql_add",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "sql_add",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "sql_add",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "sql_add",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_add",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "sql_add",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "sql_add",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_add",	"res_0",	"time",	7,	0,	0,	0	]
[ "sql_add",	"arg_1",	"time",	7,	0,	1,	1	]
[ "sql_add",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_add",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "sql_add",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "sql_add",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_div",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_div",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_div",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_div",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_div",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_div",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_div",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_div",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_div",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_div",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"oid",	63,	0,	0,	0	]
[ "sql_div",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "sql_div",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_div",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sql_div",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_div",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_div",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_div",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_div",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_div",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_div",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_div",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_div",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_div",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "sql_div",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_div",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_div",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_div",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_div",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_div",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_div",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_div",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_div",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_div",	"res_0",	"real",	24,	0,	0,	0	]
[ "sql_div",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sql_div",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_div",	"res_0",	"double",	53,	0,	0,	0	]
[ "sql_div",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sql_div",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_div",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_div",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_div",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_div",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_div",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_div",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_max",	"res_0",	"any",	0,	0,	0,	0	]
[ "sql_max",	"arg_1",	"any",	0,	0,	1,	1	]
[ "sql_max",	"arg_2",	"any",	0,	0,	1,	2	]
[ "sql_min",	"res_0",	"any",	0,	0,	0,	0	]
[ "sql_min",	"arg_1",	"any",	0,	0,	1,	1	]
[ "sql_min",	"arg_2",	"any",	0,	0,	1,	2	]
[ "sql_mul",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"oid",	63,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_mul",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"real",	24,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_mul",	"res_0",	"double",	53,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_mul",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_mul",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_mul",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_mul",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_neg",	"res_0",	"oid",	63,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "sql_neg",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_neg",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_neg",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_neg",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_neg",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_neg",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_neg",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_neg",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_neg",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_neg",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_neg",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_neg",	"res_0",	"real",	24,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sql_neg",	"res_0",	"double",	53,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sql_neg",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_neg",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_neg",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"res_0",	"oid",	63,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"oid",	63,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"oid",	63,	0,	1,	2	]
[ "sql_sub",	"res_0",	"tinyint",	8,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"tinyint",	8,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"tinyint",	8,	0,	1,	2	]
[ "sql_sub",	"res_0",	"smallint",	16,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"smallint",	16,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"smallint",	16,	0,	1,	2	]
[ "sql_sub",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"int",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"int",	32,	0,	1,	2	]
[ "sql_sub",	"res_0",	"bigint",	64,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"bigint",	64,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"bigint",	64,	0,	1,	2	]
[ "sql_sub",	"res_0",	"wrd",	64,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"wrd",	64,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"wrd",	64,	0,	1,	2	]
[ "sql_sub",	"res_0",	"hugeint",	128,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"hugeint",	128,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"hugeint",	128,	0,	1,	2	]
[ "sql_sub",	"res_0",	"decimal",	2,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"decimal",	2,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	2,	0,	1,	2	]
[ "sql_sub",	"res_0",	"decimal",	4,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"decimal",	4,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	4,	0,	1,	2	]
[ "sql_sub",	"res_0",	"decimal",	9,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"decimal",	9,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	9,	0,	1,	2	]
[ "sql_sub",	"res_0",	"decimal",	18,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"decimal",	18,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	18,	0,	1,	2	]
[ "sql_sub",	"res_0",	"decimal",	39,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"decimal",	39,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"decimal",	39,	0,	1,	2	]
[ "sql_sub",	"res_0",	"real",	24,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"real",	24,	0,	1,	2	]
[ "sql_sub",	"res_0",	"double",	53,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"double",	53,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"double",	53,	0,	1,	2	]
[ "sql_sub",	"res_0",	"month_interval",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"sec_interval",	13,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_sub",	"res_0",	"int",	32,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"date",	0,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"date",	0,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"timetz",	7,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"time",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"time",	7,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"timestamptz",	7,	0,	1,	2	]
[ "sql_sub",	"res_0",	"sec_interval",	13,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"timestamp",	7,	0,	1,	2	]
[ "sql_sub",	"res_0",	"date",	0,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"date",	0,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_sub",	"res_0",	"date",	0,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"date",	0,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_sub",	"res_0",	"time",	7,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"time",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_sub",	"res_0",	"timetz",	7,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timetz",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_sub",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_sub",	"res_0",	"timestamp",	7,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sql_sub",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"sec_interval",	13,	0,	1,	2	]
[ "sql_sub",	"res_0",	"timestamptz",	7,	0,	0,	0	]
[ "sql_sub",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "sql_sub",	"arg_2",	"month_interval",	32,	0,	1,	2	]
[ "sqrt",	"res_0",	"real",	24,	0,	0,	0	]
[ "sqrt",	"arg_1",	"real",	24,	0,	1,	1	]
[ "sqrt",	"res_0",	"double",	53,	0,	0,	0	]
[ "sqrt",	"arg_1",	"double",	53,	0,	1,	1	]
[ "st_area",	"result",	"double",	53,	0,	0,	0	]
[ "st_area",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_asbinary",	"result",	"clob",	0,	0,	0,	0	]
[ "st_asbinary",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_asewkt",	"result",	"clob",	0,	0,	0,	0	]
[ "st_asewkt",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_astext",	"result",	"clob",	0,	0,	0,	0	]
[ "st_astext",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_bdmpolyfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_bdmpolyfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_bdmpolyfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_bdpolyfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_bdpolyfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_bdpolyfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_boundary",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_boundary",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_buffer",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_buffer",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_buffer",	"radius",	"double",	53,	0,	1,	2	]
[ "st_centroid",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_centroid",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_collect",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_collect",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_collect",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_collect",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_collect",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_contains",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_contains",	"box1",	"mbr",	0,	0,	1,	1	]
[ "st_contains",	"box2",	"mbr",	0,	0,	1,	2	]
[ "st_contains",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_contains",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_contains",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_convexhull",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_convexhull",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_coorddim",	"result",	"int",	32,	0,	0,	0	]
[ "st_coorddim",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_coveredby",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_coveredby",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_coveredby",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_covers",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_covers",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_covers",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_crosses",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_crosses",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_crosses",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_delaunaytriangles",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_delaunaytriangles",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_delaunaytriangles",	"tolerance",	"double",	53,	0,	1,	2	]
[ "st_delaunaytriangles",	"flags",	"int",	32,	0,	1,	3	]
[ "st_difference",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_difference",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_difference",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_dimension",	"result",	"int",	32,	0,	0,	0	]
[ "st_dimension",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_disjoint",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_disjoint",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_disjoint",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_distance",	"result",	"double",	53,	0,	0,	0	]
[ "st_distance",	"box1",	"mbr",	0,	0,	1,	1	]
[ "st_distance",	"box2",	"mbr",	0,	0,	1,	2	]
[ "st_distance",	"result",	"double",	53,	0,	0,	0	]
[ "st_distance",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_distance",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_dump",	"id",	"clob",	0,	0,	0,	0	]
[ "st_dump",	"polygonwkb",	"geometry",	0,	0,	0,	1	]
[ "st_dump",	"geom",	"geometry",	0,	0,	1,	2	]
[ "st_dumppoints",	"path",	"clob",	0,	0,	0,	0	]
[ "st_dumppoints",	"pointg",	"geometry",	0,	0,	0,	1	]
[ "st_dumppoints",	"geom",	"geometry",	0,	0,	1,	2	]
[ "st_dwithin",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_dwithin",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_dwithin",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_dwithin",	"dst",	"double",	53,	0,	1,	3	]
[ "st_endpoint",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_endpoint",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_envelope",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_envelope",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_equals",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_equals",	"box1",	"mbr",	0,	0,	1,	1	]
[ "st_equals",	"box2",	"mbr",	0,	0,	1,	2	]
[ "st_equals",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_equals",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_equals",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_exteriorring",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_exteriorring",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_force2d",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_force2d",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_force3d",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_force3d",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_geomcollfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geomcollfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_geomcollfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_geomcollfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geomcollfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_geometryfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geometryfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_geometryfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_geometryfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geometryfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_geometryn",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geometryn",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_geometryn",	"positionnum",	"int",	32,	0,	1,	2	]
[ "st_geometrytype",	"result",	"clob",	0,	0,	0,	0	]
[ "st_geometrytype",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_geomfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geomfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_geomfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_geomfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_geomfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_interiorringn",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_interiorringn",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_interiorringn",	"positionnum",	"int",	32,	0,	1,	2	]
[ "st_interiorrings",	"result",	"geometrya",	0,	0,	0,	0	]
[ "st_interiorrings",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_intersection",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_intersection",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_intersection",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_intersects",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_intersects",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_intersects",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_isclosed",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_isclosed",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_isempty",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_isempty",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_isring",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_isring",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_issimple",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_issimple",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_isvalid",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_isvalid",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_isvalidreason",	"result",	"clob",	0,	0,	0,	0	]
[ "st_isvalidreason",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_length",	"result",	"double",	53,	0,	0,	0	]
[ "st_length",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_length2d",	"result",	"double",	53,	0,	0,	0	]
[ "st_length2d",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_linefromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_linefromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_linefromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_linefromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_linefromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_makebox2d",	"result",	"mbr",	0,	0,	0,	0	]
[ "st_makebox2d",	"lowleftpointgeom",	"geometry",	0,	0,	1,	1	]
[ "st_makebox2d",	"uprightpointgeom",	"geometry",	0,	0,	1,	2	]
[ "st_makeenvelope",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makeenvelope",	"xmin",	"double",	53,	0,	1,	1	]
[ "st_makeenvelope",	"ymin",	"double",	53,	0,	1,	2	]
[ "st_makeenvelope",	"xmax",	"double",	53,	0,	1,	3	]
[ "st_makeenvelope",	"ymax",	"double",	53,	0,	1,	4	]
[ "st_makeenvelope",	"srid",	"int",	32,	0,	1,	5	]
[ "st_makeenvelope",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makeenvelope",	"xmin",	"double",	53,	0,	1,	1	]
[ "st_makeenvelope",	"ymin",	"double",	53,	0,	1,	2	]
[ "st_makeenvelope",	"xmax",	"double",	53,	0,	1,	3	]
[ "st_makeenvelope",	"ymax",	"double",	53,	0,	1,	4	]
[ "st_makeline",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makeline",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_makeline",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makeline",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_makeline",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_makepoint",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makepoint",	"x",	"double",	53,	0,	1,	1	]
[ "st_makepoint",	"y",	"double",	53,	0,	1,	2	]
[ "st_makepoint",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makepoint",	"x",	"double",	53,	0,	1,	1	]
[ "st_makepoint",	"y",	"double",	53,	0,	1,	2	]
[ "st_makepoint",	"z",	"double",	53,	0,	1,	3	]
[ "st_makepoint",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makepoint",	"x",	"double",	53,	0,	1,	1	]
[ "st_makepoint",	"y",	"double",	53,	0,	1,	2	]
[ "st_makepoint",	"z",	"double",	53,	0,	1,	3	]
[ "st_makepoint",	"m",	"double",	53,	0,	1,	4	]
[ "st_makepointm",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makepointm",	"x",	"double",	53,	0,	1,	1	]
[ "st_makepointm",	"y",	"double",	53,	0,	1,	2	]
[ "st_makepointm",	"m",	"double",	53,	0,	1,	3	]
[ "st_makepolygon",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_makepolygon",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_mlinefromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_mlinefromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_mlinefromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_mlinefromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_mlinefromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_mpointfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_mpointfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_mpointfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_mpointfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_mpointfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_mpolyfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_mpolyfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_mpolyfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_mpolyfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_mpolyfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_npoints",	"result",	"int",	32,	0,	0,	0	]
[ "st_npoints",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_nrings",	"result",	"int",	32,	0,	0,	0	]
[ "st_nrings",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_numgeometries",	"result",	"int",	32,	0,	0,	0	]
[ "st_numgeometries",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_numinteriorring",	"result",	"int",	32,	0,	0,	0	]
[ "st_numinteriorring",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_numinteriorrings",	"result",	"int",	32,	0,	0,	0	]
[ "st_numinteriorrings",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_numpatches",	"result",	"int",	32,	0,	0,	0	]
[ "st_numpatches",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_numpoints",	"result",	"int",	32,	0,	0,	0	]
[ "st_numpoints",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_overlaps",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_overlaps",	"box1",	"mbr",	0,	0,	1,	1	]
[ "st_overlaps",	"box2",	"mbr",	0,	0,	1,	2	]
[ "st_overlaps",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_overlaps",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_overlaps",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_patchn",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_patchn",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_patchn",	"patchnum",	"int",	32,	0,	1,	2	]
[ "st_point",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_point",	"x",	"double",	53,	0,	1,	1	]
[ "st_point",	"y",	"double",	53,	0,	1,	2	]
[ "st_pointfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_pointfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_pointfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_pointfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_pointfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_pointn",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_pointn",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_pointn",	"positionnum",	"int",	32,	0,	1,	2	]
[ "st_pointonsurface",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_pointonsurface",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_polygon",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_polygon",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_polygon",	"srid",	"int",	32,	0,	1,	2	]
[ "st_polygonfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_polygonfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_polygonfromtext",	"srid",	"int",	32,	0,	1,	2	]
[ "st_polygonfromtext",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_polygonfromtext",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_relate",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_relate",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_relate",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_relate",	"intersection_matrix_pattern",	"clob",	0,	0,	1,	3	]
[ "st_segmentize",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_segmentize",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_segmentize",	"sz",	"double",	53,	0,	1,	2	]
[ "st_setexteriorring",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_setexteriorring",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_setsrid",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_setsrid",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_setsrid",	"srid",	"int",	32,	0,	1,	2	]
[ "st_srid",	"result",	"int",	32,	0,	0,	0	]
[ "st_srid",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_startpoint",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_startpoint",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_symdifference",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_symdifference",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_symdifference",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_touches",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_touches",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_touches",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_transform",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_transform",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_transform",	"srid",	"int",	32,	0,	1,	2	]
[ "st_translate",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_translate",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_translate",	"dx",	"double",	53,	0,	1,	2	]
[ "st_translate",	"dy",	"double",	53,	0,	1,	3	]
[ "st_translate",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_translate",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_translate",	"dx",	"double",	53,	0,	1,	2	]
[ "st_translate",	"dy",	"double",	53,	0,	1,	3	]
[ "st_translate",	"dz",	"double",	53,	0,	1,	4	]
[ "st_union",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_union",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_union",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_union",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_union",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_within",	"result",	"boolean",	1,	0,	0,	0	]
[ "st_within",	"geom1",	"geometry",	0,	0,	1,	1	]
[ "st_within",	"geom2",	"geometry",	0,	0,	1,	2	]
[ "st_wkbtosql",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_wkbtosql",	"geom",	"clob",	0,	0,	1,	1	]
[ "st_wkttosql",	"result",	"geometry",	0,	0,	0,	0	]
[ "st_wkttosql",	"wkt",	"clob",	0,	0,	1,	1	]
[ "st_x",	"result",	"double",	53,	0,	0,	0	]
[ "st_x",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_xmax",	"result",	"double",	53,	0,	0,	0	]
[ "st_xmax",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_xmax",	"result",	"double",	53,	0,	0,	0	]
[ "st_xmax",	"box",	"mbr",	0,	0,	1,	1	]
[ "st_xmin",	"result",	"double",	53,	0,	0,	0	]
[ "st_xmin",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_xmin",	"result",	"double",	53,	0,	0,	0	]
[ "st_xmin",	"box",	"mbr",	0,	0,	1,	1	]
[ "st_y",	"result",	"double",	53,	0,	0,	0	]
[ "st_y",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_ymax",	"result",	"double",	53,	0,	0,	0	]
[ "st_ymax",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_ymax",	"result",	"double",	53,	0,	0,	0	]
[ "st_ymax",	"box",	"mbr",	0,	0,	1,	1	]
[ "st_ymin",	"result",	"double",	53,	0,	0,	0	]
[ "st_ymin",	"geom",	"geometry",	0,	0,	1,	1	]
[ "st_ymin",	"result",	"double",	53,	0,	0,	0	]
[ "st_ymin",	"box",	"mbr",	0,	0,	1,	1	]
[ "st_z",	"result",	"double",	53,	0,	0,	0	]
[ "st_z",	"geom",	"geometry",	0,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"tinyint",	8,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"smallint",	16,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"int",	32,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"wrd",	64,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"bigint",	64,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"real",	24,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"double",	53,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"date",	0,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"time",	1,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"timestamp",	7,	0,	1,	1	]
[ "stddev_pop",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_pop",	"val",	"hugeint",	128,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"tinyint",	8,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"smallint",	16,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"int",	32,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"wrd",	64,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"bigint",	64,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"real",	24,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"double",	53,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"date",	0,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"time",	1,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"timestamp",	7,	0,	1,	1	]
[ "stddev_samp",	"result",	"double",	53,	0,	0,	0	]
[ "stddev_samp",	"val",	"hugeint",	128,	0,	1,	1	]
[ "stop",	"tag",	"int",	32,	0,	1,	0	]
[ "stop",	"tag",	"bigint",	64,	0,	1,	0	]
[ "storage",	"schema",	"clob",	0,	0,	0,	0	]
[ "storage",	"table",	"clob",	0,	0,	0,	1	]
[ "storage",	"column",	"clob",	0,	0,	0,	2	]
[ "storage",	"type",	"clob",	0,	0,	0,	3	]
[ "storage",	"mode",	"clob",	0,	0,	0,	4	]
[ "storage",	"location",	"clob",	0,	0,	0,	5	]
[ "storage",	"count",	"bigint",	64,	0,	0,	6	]
[ "storage",	"typewidth",	"int",	32,	0,	0,	7	]
[ "storage",	"columnsize",	"bigint",	64,	0,	0,	8	]
[ "storage",	"heapsize",	"bigint",	64,	0,	0,	9	]
[ "storage",	"hashes",	"bigint",	64,	0,	0,	10	]
[ "storage",	"phash",	"boolean",	1,	0,	0,	11	]
[ "storage",	"imprints",	"bigint",	64,	0,	0,	12	]
[ "storage",	"sorted",	"boolean",	1,	0,	0,	13	]
[ "storage",	"schema",	"clob",	0,	0,	0,	0	]
[ "storage",	"table",	"clob",	0,	0,	0,	1	]
[ "storage",	"column",	"clob",	0,	0,	0,	2	]
[ "storage",	"type",	"clob",	0,	0,	0,	3	]
[ "storage",	"mode",	"clob",	0,	0,	0,	4	]
[ "storage",	"location",	"clob",	0,	0,	0,	5	]
[ "storage",	"count",	"bigint",	64,	0,	0,	6	]
[ "storage",	"typewidth",	"int",	32,	0,	0,	7	]
[ "storage",	"columnsize",	"bigint",	64,	0,	0,	8	]
[ "storage",	"heapsize",	"bigint",	64,	0,	0,	9	]
[ "storage",	"hashes",	"bigint",	64,	0,	0,	10	]
[ "storage",	"phash",	"boolean",	1,	0,	0,	11	]
[ "storage",	"imprints",	"bigint",	64,	0,	0,	12	]
[ "storage",	"sorted",	"boolean",	1,	0,	0,	13	]
[ "storage",	"sname",	"clob",	0,	0,	1,	14	]
[ "storage",	"schema",	"clob",	0,	0,	0,	0	]
[ "storage",	"table",	"clob",	0,	0,	0,	1	]
[ "storage",	"column",	"clob",	0,	0,	0,	2	]
[ "storage",	"type",	"clob",	0,	0,	0,	3	]
[ "storage",	"mode",	"clob",	0,	0,	0,	4	]
[ "storage",	"location",	"clob",	0,	0,	0,	5	]
[ "storage",	"count",	"bigint",	64,	0,	0,	6	]
[ "storage",	"typewidth",	"int",	32,	0,	0,	7	]
[ "storage",	"columnsize",	"bigint",	64,	0,	0,	8	]
[ "storage",	"heapsize",	"bigint",	64,	0,	0,	9	]
[ "storage",	"hashes",	"bigint",	64,	0,	0,	10	]
[ "storage",	"phash",	"boolean",	1,	0,	0,	11	]
[ "storage",	"imprints",	"bigint",	64,	0,	0,	12	]
[ "storage",	"sorted",	"boolean",	1,	0,	0,	13	]
[ "storage",	"sname",	"clob",	0,	0,	1,	14	]
[ "storage",	"tname",	"clob",	0,	0,	1,	15	]
[ "storage",	"schema",	"clob",	0,	0,	0,	0	]
[ "storage",	"table",	"clob",	0,	0,	0,	1	]
[ "storage",	"column",	"clob",	0,	0,	0,	2	]
[ "storage",	"type",	"clob",	0,	0,	0,	3	]
[ "storage",	"mode",	"clob",	0,	0,	0,	4	]
[ "storage",	"location",	"clob",	0,	0,	0,	5	]
[ "storage",	"count",	"bigint",	64,	0,	0,	6	]
[ "storage",	"typewidth",	"int",	32,	0,	0,	7	]
[ "storage",	"columnsize",	"bigint",	64,	0,	0,	8	]
[ "storage",	"heapsize",	"bigint",	64,	0,	0,	9	]
[ "storage",	"hashes",	"bigint",	64,	0,	0,	10	]
[ "storage",	"phash",	"boolean",	1,	0,	0,	11	]
[ "storage",	"imprints",	"bigint",	64,	0,	0,	12	]
[ "storage",	"sorted",	"boolean",	1,	0,	0,	13	]
[ "storage",	"sname",	"clob",	0,	0,	1,	14	]
[ "storage",	"tname",	"clob",	0,	0,	1,	15	]
[ "storage",	"cname",	"clob",	0,	0,	1,	16	]
[ "storagemodel",	"schema",	"clob",	0,	0,	0,	0	]
[ "storagemodel",	"table",	"clob",	0,	0,	0,	1	]
[ "storagemodel",	"column",	"clob",	0,	0,	0,	2	]
[ "storagemodel",	"type",	"clob",	0,	0,	0,	3	]
[ "storagemodel",	"count",	"bigint",	64,	0,	0,	4	]
[ "storagemodel",	"columnsize",	"bigint",	64,	0,	0,	5	]
[ "storagemodel",	"heapsize",	"bigint",	64,	0,	0,	6	]
[ "storagemodel",	"hashes",	"bigint",	64,	0,	0,	7	]
[ "storagemodel",	"imprints",	"bigint",	64,	0,	0,	8	]
[ "storagemodel",	"sorted",	"boolean",	1,	0,	0,	9	]
[ "str_to_date",	"result",	"date",	0,	0,	0,	0	]
[ "str_to_date",	"s",	"clob",	0,	0,	1,	1	]
[ "str_to_date",	"format",	"clob",	0,	0,	1,	2	]
[ "str_to_time",	"result",	"time",	1,	0,	0,	0	]
[ "str_to_time",	"s",	"clob",	0,	0,	1,	1	]
[ "str_to_time",	"format",	"clob",	0,	0,	1,	2	]
[ "str_to_timestamp",	"result",	"timestamp",	7,	0,	0,	0	]
[ "str_to_timestamp",	"s",	"clob",	0,	0,	1,	1	]
[ "str_to_timestamp",	"format",	"clob",	0,	0,	1,	2	]
[ "strings",	"res_0",	"char",	0,	0,	0,	0	]
[ "strings",	"arg_1",	"char",	0,	0,	1,	1	]
[ "strings",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "strings",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "strings",	"res_0",	"clob",	0,	0,	0,	0	]
[ "strings",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "substr",	"res_0",	"char",	0,	0,	0,	0	]
[ "substr",	"arg_1",	"char",	0,	0,	1,	1	]
[ "substr",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substr",	"res_0",	"char",	0,	0,	0,	0	]
[ "substr",	"arg_1",	"char",	0,	0,	1,	1	]
[ "substr",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substr",	"arg_3",	"int",	32,	0,	1,	3	]
[ "substr",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "substr",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "substr",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substr",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "substr",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "substr",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substr",	"arg_3",	"int",	32,	0,	1,	3	]
[ "substr",	"res_0",	"clob",	0,	0,	0,	0	]
[ "substr",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "substr",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substr",	"res_0",	"clob",	0,	0,	0,	0	]
[ "substr",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "substr",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substr",	"arg_3",	"int",	32,	0,	1,	3	]
[ "substring",	"res_0",	"char",	0,	0,	0,	0	]
[ "substring",	"arg_1",	"char",	0,	0,	1,	1	]
[ "substring",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substring",	"res_0",	"char",	0,	0,	0,	0	]
[ "substring",	"arg_1",	"char",	0,	0,	1,	1	]
[ "substring",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substring",	"arg_3",	"int",	32,	0,	1,	3	]
[ "substring",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "substring",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "substring",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substring",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "substring",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "substring",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substring",	"arg_3",	"int",	32,	0,	1,	3	]
[ "substring",	"res_0",	"clob",	0,	0,	0,	0	]
[ "substring",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "substring",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substring",	"res_0",	"clob",	0,	0,	0,	0	]
[ "substring",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "substring",	"arg_2",	"int",	32,	0,	1,	2	]
[ "substring",	"arg_3",	"int",	32,	0,	1,	3	]
[ "sum",	"res",	"hugeint",	128,	0,	0,	0	]
[ "sum",	"arg",	"tinyint",	8,	0,	1,	1	]
[ "sum",	"res",	"hugeint",	128,	0,	0,	0	]
[ "sum",	"arg",	"smallint",	16,	0,	1,	1	]
[ "sum",	"res",	"hugeint",	128,	0,	0,	0	]
[ "sum",	"arg",	"int",	32,	0,	1,	1	]
[ "sum",	"res",	"hugeint",	128,	0,	0,	0	]
[ "sum",	"arg",	"bigint",	64,	0,	1,	1	]
[ "sum",	"res",	"hugeint",	128,	0,	0,	0	]
[ "sum",	"arg",	"hugeint",	128,	0,	1,	1	]
[ "sum",	"res",	"wrd",	64,	0,	0,	0	]
[ "sum",	"arg",	"wrd",	64,	0,	1,	1	]
[ "sum",	"res",	"decimal",	39,	0,	0,	0	]
[ "sum",	"arg",	"decimal",	2,	0,	1,	1	]
[ "sum",	"res",	"decimal",	39,	0,	0,	0	]
[ "sum",	"arg",	"decimal",	4,	0,	1,	1	]
[ "sum",	"res",	"decimal",	39,	0,	0,	0	]
[ "sum",	"arg",	"decimal",	9,	0,	1,	1	]
[ "sum",	"res",	"decimal",	39,	0,	0,	0	]
[ "sum",	"arg",	"decimal",	18,	0,	1,	1	]
[ "sum",	"res",	"decimal",	39,	0,	0,	0	]
[ "sum",	"arg",	"decimal",	39,	0,	1,	1	]
[ "sum",	"res",	"real",	24,	0,	0,	0	]
[ "sum",	"arg",	"real",	24,	0,	1,	1	]
[ "sum",	"res",	"double",	53,	0,	0,	0	]
[ "sum",	"arg",	"double",	53,	0,	1,	1	]
[ "sum",	"res",	"month_interval",	32,	0,	0,	0	]
[ "sum",	"arg",	"month_interval",	32,	0,	1,	1	]
[ "sum",	"res",	"sec_interval",	13,	0,	0,	0	]
[ "sum",	"arg",	"sec_interval",	13,	0,	1,	1	]
[ "tan",	"res_0",	"real",	24,	0,	0,	0	]
[ "tan",	"arg_1",	"real",	24,	0,	1,	1	]
[ "tan",	"res_0",	"double",	53,	0,	0,	0	]
[ "tan",	"arg_1",	"double",	53,	0,	1,	1	]
[ "tanh",	"res_0",	"real",	24,	0,	0,	0	]
[ "tanh",	"arg_1",	"real",	24,	0,	1,	1	]
[ "tanh",	"res_0",	"double",	53,	0,	0,	0	]
[ "tanh",	"arg_1",	"double",	53,	0,	1,	1	]
[ "text",	"result",	"clob",	0,	0,	0,	0	]
[ "text",	"p",	"inet",	0,	0,	1,	1	]
[ "text",	"result",	"clob",	0,	0,	0,	0	]
[ "text",	"js",	"json",	0,	0,	1,	1	]
[ "text",	"e",	"clob",	0,	0,	1,	2	]
[ "text",	"result",	"clob",	0,	0,	0,	0	]
[ "text",	"js",	"json",	0,	0,	1,	1	]
[ "text",	"result",	"clob",	0,	0,	0,	0	]
[ "text",	"js",	"clob",	0,	0,	1,	1	]
[ "text",	"result",	"clob",	0,	0,	0,	0	]
[ "text",	"js",	"int",	32,	0,	1,	1	]
[ "time_to_str",	"result",	"clob",	0,	0,	0,	0	]
[ "time_to_str",	"d",	"time",	1,	0,	1,	1	]
[ "time_to_str",	"format",	"clob",	0,	0,	1,	2	]
[ "timestamp_to_str",	"result",	"clob",	0,	0,	0,	0	]
[ "timestamp_to_str",	"d",	"timestamp",	7,	0,	1,	1	]
[ "timestamp_to_str",	"format",	"clob",	0,	0,	1,	2	]
[ "tojsonarray",	"result",	"clob",	0,	0,	0,	0	]
[ "tojsonarray",	"x",	"clob",	0,	0,	1,	1	]
[ "tojsonarray",	"result",	"clob",	0,	0,	0,	0	]
[ "tojsonarray",	"x",	"double",	53,	0,	1,	1	]
[ "tracelog",	"event",	"int",	32,	0,	0,	0	]
[ "tracelog",	"clk",	"varchar",	20,	0,	0,	1	]
[ "tracelog",	"pc",	"varchar",	50,	0,	0,	2	]
[ "tracelog",	"thread",	"int",	32,	0,	0,	3	]
[ "tracelog",	"ticks",	"bigint",	64,	0,	0,	4	]
[ "tracelog",	"rrsmb",	"bigint",	64,	0,	0,	5	]
[ "tracelog",	"vmmb",	"bigint",	64,	0,	0,	6	]
[ "tracelog",	"reads",	"bigint",	64,	0,	0,	7	]
[ "tracelog",	"writes",	"bigint",	64,	0,	0,	8	]
[ "tracelog",	"minflt",	"bigint",	64,	0,	0,	9	]
[ "tracelog",	"majflt",	"bigint",	64,	0,	0,	10	]
[ "tracelog",	"nvcsw",	"bigint",	64,	0,	0,	11	]
[ "tracelog",	"stmt",	"clob",	0,	0,	0,	12	]
[ "trim",	"res_0",	"char",	0,	0,	0,	0	]
[ "trim",	"arg_1",	"char",	0,	0,	1,	1	]
[ "trim",	"res_0",	"char",	0,	0,	0,	0	]
[ "trim",	"arg_1",	"char",	0,	0,	1,	1	]
[ "trim",	"arg_2",	"char",	0,	0,	1,	2	]
[ "trim",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "trim",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "trim",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "trim",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "trim",	"arg_2",	"varchar",	0,	0,	1,	2	]
[ "trim",	"res_0",	"clob",	0,	0,	0,	0	]
[ "trim",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "trim",	"res_0",	"clob",	0,	0,	0,	0	]
[ "trim",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "trim",	"arg_2",	"clob",	0,	0,	1,	2	]
[ "truncate",	"res_0",	"char",	0,	0,	0,	0	]
[ "truncate",	"arg_1",	"char",	0,	0,	1,	1	]
[ "truncate",	"arg_2",	"int",	32,	0,	1,	2	]
[ "truncate",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "truncate",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "truncate",	"arg_2",	"int",	32,	0,	1,	2	]
[ "truncate",	"res_0",	"clob",	0,	0,	0,	0	]
[ "truncate",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "truncate",	"arg_2",	"int",	32,	0,	1,	2	]
[ "ucase",	"res_0",	"char",	0,	0,	0,	0	]
[ "ucase",	"arg_1",	"char",	0,	0,	1,	1	]
[ "ucase",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "ucase",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "ucase",	"res_0",	"clob",	0,	0,	0,	0	]
[ "ucase",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "upper",	"res_0",	"char",	0,	0,	0,	0	]
[ "upper",	"arg_1",	"char",	0,	0,	1,	1	]
[ "upper",	"res_0",	"varchar",	0,	0,	0,	0	]
[ "upper",	"arg_1",	"varchar",	0,	0,	1,	1	]
[ "upper",	"res_0",	"clob",	0,	0,	0,	0	]
[ "upper",	"arg_1",	"clob",	0,	0,	1,	1	]
[ "uuid",	"result",	"uuid",	0,	0,	0,	0	]
[ "vacuum",	"sys",	"clob",	0,	0,	1,	0	]
[ "vacuum",	"tab",	"clob",	0,	0,	1,	1	]
[ "valuearray",	"result",	"json",	0,	0,	0,	0	]
[ "valuearray",	"js",	"json",	0,	0,	1,	1	]
[ "var",	"name",	"varchar",	1024,	0,	0,	0	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"tinyint",	8,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"smallint",	16,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"int",	32,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"wrd",	64,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"bigint",	64,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"real",	24,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"double",	53,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"date",	0,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"time",	1,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"timestamp",	7,	0,	1,	1	]
[ "var_pop",	"result",	"double",	53,	0,	0,	0	]
[ "var_pop",	"val",	"hugeint",	128,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"tinyint",	8,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"smallint",	16,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"int",	32,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"wrd",	64,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"bigint",	64,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"real",	24,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"double",	53,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"date",	0,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"time",	1,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"timestamp",	7,	0,	1,	1	]
[ "var_samp",	"result",	"double",	53,	0,	0,	0	]
[ "var_samp",	"val",	"hugeint",	128,	0,	1,	1	]
[ "week",	"res_0",	"int",	32,	0,	0,	0	]
[ "week",	"arg_1",	"date",	0,	0,	1,	1	]
[ "weekofyear",	"res_0",	"int",	32,	0,	0,	0	]
[ "weekofyear",	"arg_1",	"date",	0,	0,	1,	1	]
[ "xor",	"res_0",	"boolean",	1,	0,	0,	0	]
[ "xor",	"arg_1",	"boolean",	1,	0,	1,	1	]
[ "xor",	"arg_2",	"boolean",	1,	0,	1,	2	]
[ "year",	"res_0",	"int",	32,	0,	0,	0	]
[ "year",	"arg_1",	"date",	0,	0,	1,	1	]
[ "year",	"res_0",	"int",	32,	0,	0,	0	]
[ "year",	"arg_1",	"timestamp",	7,	0,	1,	1	]
[ "year",	"res_0",	"int",	32,	0,	0,	0	]
[ "year",	"arg_1",	"timestamptz",	7,	0,	1,	1	]
[ "year",	"res_0",	"int",	32,	0,	0,	0	]
[ "year",	"arg_1",	"month_interval",	32,	0,	1,	1	]
[ "zero_or_one",	"res",	"any",	0,	0,	0,	0	]
[ "zero_or_one",	"arg",	"any",	0,	0,	1,	1	]
[ "zorder_decode_x",	"result",	"int",	32,	0,	0,	0	]
[ "zorder_decode_x",	"z",	"oid",	63,	0,	1,	1	]
[ "zorder_decode_y",	"result",	"int",	32,	0,	0,	0	]
[ "zorder_decode_y",	"z",	"oid",	63,	0,	1,	1	]
[ "zorder_encode",	"result",	"oid",	63,	0,	0,	0	]
[ "zorder_encode",	"x",	"int",	32,	0,	1,	1	]
[ "zorder_encode",	"y",	"int",	32,	0,	1,	2	]
#select name, grantor from auths;
% sys.auths,	sys.auths # table_name
% name,	grantor # name
% varchar,	int # type
% 8,	1 # length
[ "public",	0	]
[ "sysadmin",	0	]
[ "monetdb",	0	]
#select server, port, db, db_alias, user, password, language from connections order by server, port;
% sys.connections,	sys.connections,	sys.connections,	sys.connections,	.L1,	sys.connections,	sys.connections # table_name
% server,	port,	db,	db_alias,	L1,	password,	language # name
% char,	int,	char,	char,	varchar,	char,	char # type
% 1024,	1,	64,	1024,	0,	1024,	1024 # length
#select u.name, u.fullname, s.name from db_user_info u left outer join schemas s on u.default_schema = s.id order by u.name;
% .u,	.u,	.s # table_name
% name,	fullname,	name # name
% varchar,	varchar,	varchar # type
% 7,	13,	3 # length
[ "monetdb",	"MonetDB Admin",	"sys"	]
#select count(*) from dependencies;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 3 # length
[ 291	]
#select t.name, i.name, i.type from sys.idxs i left outer join sys._tables t on t.id = i.table_id order by t.name, i.name;
% .t,	.i,	.i # table_name
% name,	name,	type # name
% varchar,	varchar,	int # type
% 16,	44,	1 # length
[ "dependency_types",	"dependency_types_dependency_type_id_pkey",	0	]
[ "dependency_types",	"dependency_types_dependency_type_name_unique",	0	]
[ "keywords",	"keywords_keyword_pkey",	0	]
[ "spatial_ref_sys",	"spatial_ref_sys_srid_pkey",	0	]
[ "table_types",	"table_types_table_type_id_pkey",	0	]
[ "table_types",	"table_types_table_type_name_unique",	0	]
#with x as (select k.id as id, t.name as tname, k.name as kname, k.type as type, k.rkey as rkey, k.action as action from keys k left outer join _tables t on t.id = k.table_id) select x.tname, x.kname, x.type, y.kname, x.action from x left outer join x y on x.rkey = y.id order by x.tname, x.kname;
% .x,	.x,	.x,	.y,	.x # table_name
% tname,	kname,	type,	kname,	action # name
% varchar,	varchar,	int,	varchar,	int # type
% 16,	44,	1,	0,	2 # length
[ "dependency_types",	"dependency_types_dependency_type_id_pkey",	0,	NULL,	-1	]
[ "dependency_types",	"dependency_types_dependency_type_name_unique",	1,	NULL,	-1	]
[ "keywords",	"keywords_keyword_pkey",	0,	NULL,	-1	]
[ "spatial_ref_sys",	"spatial_ref_sys_srid_pkey",	0,	NULL,	-1	]
[ "table_types",	"table_types_table_type_id_pkey",	0,	NULL,	-1	]
[ "table_types",	"table_types_table_type_name_unique",	1,	NULL,	-1	]
#select name, nr from objects order by name, nr;
% sys.objects,	sys.objects # table_name
% name,	nr # name
% varchar,	int # type
% 20,	1 # length
[ "dependency_type_id",	0	]
[ "dependency_type_id",	0	]
[ "dependency_type_name",	0	]
[ "dependency_type_name",	0	]
[ "keyword",	0	]
[ "keyword",	0	]
[ "srid",	0	]
[ "srid",	0	]
[ "table_type_id",	0	]
[ "table_type_id",	0	]
[ "table_type_name",	0	]
[ "table_type_name",	0	]
#select t.name, a.name, p.privileges, g.name, p.grantable from _tables t, privileges p left outer join auths g on p.grantor = g.id, auths a where t.id = p.obj_id and p.auth_id = a.id order by t.name, a.name;
% sys.t,	sys.a,	.p,	.g,	.p # table_name
% name,	name,	privileges,	name,	grantable # name
% varchar,	varchar,	int,	varchar,	int # type
% 15,	6,	1,	7,	1 # length
[ "_columns",	"public",	1,	NULL,	0	]
[ "_tables",	"public",	1,	NULL,	0	]
[ "args",	"public",	1,	NULL,	0	]
[ "auths",	"public",	1,	NULL,	0	]
[ "columns",	"public",	1,	NULL,	0	]
[ "connections",	"public",	1,	NULL,	0	]
[ "dependencies",	"public",	1,	NULL,	0	]
[ "functions",	"public",	1,	NULL,	0	]
[ "idxs",	"public",	1,	NULL,	0	]
[ "keys",	"public",	1,	NULL,	0	]
[ "objects",	"public",	1,	NULL,	0	]
[ "privileges",	"public",	1,	NULL,	0	]
[ "schemas",	"public",	1,	NULL,	0	]
[ "sequences",	"public",	1,	NULL,	0	]
[ "systemfunctions",	"public",	1,	"monetdb",	0	]
[ "tables",	"public",	1,	NULL,	0	]
[ "triggers",	"public",	1,	NULL,	0	]
[ "types",	"public",	1,	NULL,	0	]
[ "user_role",	"public",	1,	NULL,	0	]
#select t.name, c.name, a.name, p.privileges, g.name, p.grantable from _tables t, _columns c, privileges p left outer join auths g on p.grantor = g.id, auths a where c.id = p.obj_id and c.table_id = t.id and p.auth_id = a.id order by t.name, c.name, a.name;
% sys.t,	sys.c,	sys.a,	.p,	.g,	.p # table_name
% name,	name,	name,	privileges,	name,	grantable # name
% varchar,	varchar,	varchar,	int,	varchar,	int # type
% 0,	0,	0,	1,	0,	1 # length
#select f.name, a.name, p.privileges, g.name, p.grantable from functions f, privileges p left outer join auths g on p.grantor = g.id, auths a where f.id = p.obj_id and p.auth_id = a.id order by f.name, a.name;
% sys.f,	sys.a,	.p,	.g,	.p # table_name
% name,	name,	privileges,	name,	grantable # name
% varchar,	varchar,	int,	varchar,	int # type
% 16,	6,	2,	7,	1 # length
[ "alpha",	"public",	16,	"monetdb",	0	]
[ "date_to_str",	"public",	16,	"monetdb",	0	]
[ "degrees",	"public",	16,	"monetdb",	0	]
[ "epoch",	"public",	16,	"monetdb",	0	]
[ "epoch",	"public",	16,	"monetdb",	0	]
[ "epoch",	"public",	16,	"monetdb",	0	]
[ "epoch",	"public",	16,	"monetdb",	0	]
[ "ilike",	"public",	16,	"monetdb",	0	]
[ "ilike",	"public",	16,	"monetdb",	0	]
[ "like",	"public",	16,	"monetdb",	0	]
[ "like",	"public",	16,	"monetdb",	0	]
[ "md5",	"public",	16,	"monetdb",	0	]
[ "ms_round",	"public",	16,	"monetdb",	0	]
[ "ms_str",	"public",	16,	"monetdb",	0	]
[ "ms_stuff",	"public",	16,	"monetdb",	0	]
[ "ms_trunc",	"public",	16,	"monetdb",	0	]
[ "radians",	"public",	16,	"monetdb",	0	]
[ "rejects",	"public",	16,	"monetdb",	0	]
[ "str_to_date",	"public",	16,	"monetdb",	0	]
[ "str_to_time",	"public",	16,	"monetdb",	0	]
[ "str_to_timestamp",	"public",	16,	"monetdb",	0	]
[ "time_to_str",	"public",	16,	"monetdb",	0	]
[ "times",	"public",	16,	"monetdb",	0	]
[ "timestamp_to_str",	"public",	16,	"monetdb",	0	]
[ "zorder_decode_x",	"public",	16,	"monetdb",	0	]
[ "zorder_decode_y",	"public",	16,	"monetdb",	0	]
[ "zorder_encode",	"public",	16,	"monetdb",	0	]
#select s.name, q.name, q.start, q.minvalue, q.maxvalue, q.increment, q.cacheinc, q.cycle from sys.sequences q left outer join sys.schemas s on q.schema_id = s.id order by s.name, q.name;
% .s,	.q,	.q,	.q,	.q,	.q,	.q,	.q # table_name
% name,	name,	start,	minvalue,	maxvalue,	increment,	cacheinc,	cycle # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean # type
% 0,	0,	1,	1,	1,	1,	1,	5 # length
#select count(*) from statistics;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 1 # length
[ 0	]
#select count(*) from storagemodelinput;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 1 # length
[ 0	]
#select f.name from systemfunctions s left outer join functions f on s.function_id = f.id order by f.name;
% .f # table_name
% name # name
% varchar # type
% 35 # length
[ "<"	]
[ "<="	]
[ "<>"	]
[ "="	]
[ ">"	]
[ ">="	]
[ "abbrev"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "abs"	]
[ "acos"	]
[ "acos"	]
[ "alpha"	]
[ "analyze"	]
[ "analyze"	]
[ "analyze"	]
[ "analyze"	]
[ "and"	]
[ "ascii"	]
[ "ascii"	]
[ "ascii"	]
[ "asin"	]
[ "asin"	]
[ "atan"	]
[ "atan"	]
[ "atan"	]
[ "atan"	]
[ "avg"	]
[ "bbp"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_and"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_not"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_or"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "bit_xor"	]
[ "broadcast"	]
[ "ceil"	]
[ "ceil"	]
[ "ceiling"	]
[ "ceiling"	]
[ "char_length"	]
[ "char_length"	]
[ "char_length"	]
[ "character_length"	]
[ "character_length"	]
[ "character_length"	]
[ "charindex"	]
[ "charindex"	]
[ "charindex"	]
[ "charindex"	]
[ "charindex"	]
[ "charindex"	]
[ "clearrejects"	]
[ "code"	]
[ "code"	]
[ "code"	]
[ "columnsize"	]
[ "concat"	]
[ "concat"	]
[ "concat"	]
[ "contains"	]
[ "copyfrom"	]
[ "copyfrom"	]
[ "corr"	]
[ "corr"	]
[ "corr"	]
[ "corr"	]
[ "corr"	]
[ "corr"	]
[ "corr"	]
[ "corr"	]
[ "cos"	]
[ "cos"	]
[ "cosh"	]
[ "cosh"	]
[ "cot"	]
[ "cot"	]
[ "count"	]
[ "count_no_nil"	]
[ "curdate"	]
[ "current_date"	]
[ "current_time"	]
[ "current_timestamp"	]
[ "curtime"	]
[ "date_to_str"	]
[ "day"	]
[ "day"	]
[ "day"	]
[ "day"	]
[ "dayofmonth"	]
[ "dayofweek"	]
[ "dayofyear"	]
[ "db_users"	]
[ "debug"	]
[ "degrees"	]
[ "dense_rank"	]
[ "dependencies_columns_on_functions"	]
[ "dependencies_columns_on_indexes"	]
[ "dependencies_columns_on_keys"	]
[ "dependencies_columns_on_triggers"	]
[ "dependencies_columns_on_views"	]
[ "dependencies_functions_on_functions"	]
[ "dependencies_functions_os_triggers"	]
[ "dependencies_keys_on_foreignkeys"	]
[ "dependencies_owners_on_schemas"	]
[ "dependencies_schemas_on_users"	]
[ "dependencies_tables_on_foreignkeys"	]
[ "dependencies_tables_on_functions"	]
[ "dependencies_tables_on_indexes"	]
[ "dependencies_tables_on_triggers"	]
[ "dependencies_tables_on_views"	]
[ "dependencies_views_on_functions"	]
[ "dependencies_views_on_triggers"	]
[ "diff"	]
[ "diff"	]
[ "difference"	]
[ "difference"	]
[ "difference"	]
[ "editdistance"	]
[ "editdistance"	]
[ "editdistance"	]
[ "editdistance2"	]
[ "editdistance2"	]
[ "editdistance2"	]
[ "env"	]
[ "environment"	]
[ "epoch"	]
[ "epoch"	]
[ "epoch"	]
[ "epoch"	]
[ "evalalgebra"	]
[ "exist"	]
[ "exp"	]
[ "exp"	]
[ "filter"	]
[ "filter"	]
[ "filter"	]
[ "filter"	]
[ "filter"	]
[ "floor"	]
[ "floor"	]
[ "flush_log"	]
[ "fuse"	]
[ "fuse"	]
[ "fuse"	]
[ "fuse"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "generate_series"	]
[ "geometrytype"	]
[ "get_type"	]
[ "get_value_for"	]
[ "getanchor"	]
[ "getbasename"	]
[ "getcontent"	]
[ "getcontext"	]
[ "getdomain"	]
[ "getextension"	]
[ "getfile"	]
[ "gethost"	]
[ "getport"	]
[ "getproj4"	]
[ "getprotocol"	]
[ "getquery"	]
[ "getroboturl"	]
[ "getuser"	]
[ "has_m"	]
[ "has_z"	]
[ "hash"	]
[ "hashsize"	]
[ "heapsize"	]
[ "host"	]
[ "hostmask"	]
[ "hour"	]
[ "hour"	]
[ "hour"	]
[ "hour"	]
[ "hour"	]
[ "identity"	]
[ "ifthenelse"	]
[ "ilike"	]
[ "ilike"	]
[ "ilike"	]
[ "ilike"	]
[ "ilike"	]
[ "ilike"	]
[ "ilike"	]
[ "ilike"	]
[ "imprintsize"	]
[ "in"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "index"	]
[ "insert"	]
[ "insert"	]
[ "insert"	]
[ "integer"	]
[ "internaltransform"	]
[ "isarray"	]
[ "isarray"	]
[ "isaurl"	]
[ "isauuid"	]
[ "isauuid"	]
[ "isnull"	]
[ "isobject"	]
[ "isobject"	]
[ "isvalid"	]
[ "isvalid"	]
[ "keyarray"	]
[ "lcase"	]
[ "lcase"	]
[ "lcase"	]
[ "left"	]
[ "left"	]
[ "left"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift"	]
[ "left_shift_assign"	]
[ "length"	]
[ "length"	]
[ "length"	]
[ "length"	]
[ "levenshtein"	]
[ "levenshtein"	]
[ "levenshtein"	]
[ "levenshtein"	]
[ "levenshtein"	]
[ "levenshtein"	]
[ "like"	]
[ "like"	]
[ "like"	]
[ "like"	]
[ "like"	]
[ "like"	]
[ "like"	]
[ "like"	]
[ "local_timezone"	]
[ "localtime"	]
[ "localtimestamp"	]
[ "locate"	]
[ "locate"	]
[ "locate"	]
[ "locate"	]
[ "locate"	]
[ "locate"	]
[ "log"	]
[ "log"	]
[ "log10"	]
[ "log10"	]
[ "lower"	]
[ "lower"	]
[ "lower"	]
[ "lpad"	]
[ "lpad"	]
[ "lpad"	]
[ "lpad"	]
[ "lpad"	]
[ "lpad"	]
[ "ltrim"	]
[ "ltrim"	]
[ "ltrim"	]
[ "ltrim"	]
[ "ltrim"	]
[ "ltrim"	]
[ "malfunctions"	]
[ "masklen"	]
[ "max"	]
[ "mbr"	]
[ "mbr_above"	]
[ "mbr_above"	]
[ "mbr_below"	]
[ "mbr_below"	]
[ "mbr_contained"	]
[ "mbr_contained"	]
[ "mbr_contains"	]
[ "mbr_contains"	]
[ "mbr_distance"	]
[ "mbr_distance"	]
[ "mbr_equal"	]
[ "mbr_equal"	]
[ "mbr_left"	]
[ "mbr_left"	]
[ "mbr_overlap"	]
[ "mbr_overlap"	]
[ "mbr_overlap_or_above"	]
[ "mbr_overlap_or_above"	]
[ "mbr_overlap_or_below"	]
[ "mbr_overlap_or_below"	]
[ "mbr_overlap_or_left"	]
[ "mbr_overlap_or_left"	]
[ "mbr_overlap_or_right"	]
[ "mbr_overlap_or_right"	]
[ "mbr_right"	]
[ "mbr_right"	]
[ "md5"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "median"	]
[ "min"	]
[ "minute"	]
[ "minute"	]
[ "minute"	]
[ "minute"	]
[ "minute"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "mod"	]
[ "month"	]
[ "month"	]
[ "month"	]
[ "month"	]
[ "ms_round"	]
[ "ms_str"	]
[ "ms_stuff"	]
[ "ms_trunc"	]
[ "netmask"	]
[ "network"	]
[ "newurl"	]
[ "newurl"	]
[ "next_value_for"	]
[ "not"	]
[ "not_exist"	]
[ "not_ilike"	]
[ "not_ilike"	]
[ "not_ilike"	]
[ "not_ilike"	]
[ "not_ilike"	]
[ "not_ilike"	]
[ "not_like"	]
[ "not_like"	]
[ "not_like"	]
[ "not_like"	]
[ "not_like"	]
[ "not_like"	]
[ "not_unique"	]
[ "not_uniques"	]
[ "not_uniques"	]
[ "number"	]
[ "octet_length"	]
[ "octet_length"	]
[ "octet_length"	]
[ "optimizer_stats"	]
[ "optimizers"	]
[ "or"	]
[ "output"	]
[ "password_hash"	]
[ "patindex"	]
[ "patindex"	]
[ "patindex"	]
[ "pause"	]
[ "pause"	]
[ "pi"	]
[ "power"	]
[ "power"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "prod"	]
[ "qgramnormalize"	]
[ "qgramnormalize"	]
[ "qgramnormalize"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "quantile"	]
[ "querycache"	]
[ "querylog"	]
[ "querylog_calls"	]
[ "querylog_catalog"	]
[ "querylog_disable"	]
[ "querylog_empty"	]
[ "querylog_enable"	]
[ "querylog_enable"	]
[ "queue"	]
[ "radians"	]
[ "rand"	]
[ "rand"	]
[ "rank"	]
[ "rejects"	]
[ "repeat"	]
[ "repeat"	]
[ "repeat"	]
[ "replace"	]
[ "replace"	]
[ "replace"	]
[ "restart"	]
[ "resume"	]
[ "resume"	]
[ "reuse"	]
[ "reverse"	]
[ "right"	]
[ "right"	]
[ "right"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift"	]
[ "right_shift_assign"	]
[ "rotate_xor_hash"	]
[ "round"	]
[ "round"	]
[ "round"	]
[ "round"	]
[ "round"	]
[ "round"	]
[ "round"	]
[ "row_number"	]
[ "rowid"	]
[ "rowid"	]
[ "rpad"	]
[ "rpad"	]
[ "rpad"	]
[ "rpad"	]
[ "rpad"	]
[ "rpad"	]
[ "rtrim"	]
[ "rtrim"	]
[ "rtrim"	]
[ "rtrim"	]
[ "rtrim"	]
[ "rtrim"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_down"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "scale_up"	]
[ "second"	]
[ "second"	]
[ "second"	]
[ "second"	]
[ "second"	]
[ "sessions"	]
[ "setheartbeat"	]
[ "setmasklen"	]
[ "setpoolsize"	]
[ "setsession"	]
[ "setstream"	]
[ "settimeout"	]
[ "settimeout"	]
[ "shrink"	]
[ "shutdown"	]
[ "shutdown"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "sign"	]
[ "similarity"	]
[ "similarity"	]
[ "similarity"	]
[ "sin"	]
[ "sin"	]
[ "sinh"	]
[ "sinh"	]
[ "soundex"	]
[ "soundex"	]
[ "soundex"	]
[ "space"	]
[ "space"	]
[ "space"	]
[ "splitpart"	]
[ "splitpart"	]
[ "splitpart"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_add"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_div"	]
[ "sql_max"	]
[ "sql_min"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_mul"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_neg"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sql_sub"	]
[ "sqrt"	]
[ "sqrt"	]
[ "st_area"	]
[ "st_asbinary"	]
[ "st_asewkt"	]
[ "st_astext"	]
[ "st_bdmpolyfromtext"	]
[ "st_bdpolyfromtext"	]
[ "st_boundary"	]
[ "st_buffer"	]
[ "st_centroid"	]
[ "st_collect"	]
[ "st_collect"	]
[ "st_contains"	]
[ "st_contains"	]
[ "st_convexhull"	]
[ "st_coorddim"	]
[ "st_coveredby"	]
[ "st_covers"	]
[ "st_crosses"	]
[ "st_delaunaytriangles"	]
[ "st_difference"	]
[ "st_dimension"	]
[ "st_disjoint"	]
[ "st_distance"	]
[ "st_distance"	]
[ "st_dump"	]
[ "st_dumppoints"	]
[ "st_dwithin"	]
[ "st_endpoint"	]
[ "st_envelope"	]
[ "st_equals"	]
[ "st_equals"	]
[ "st_exteriorring"	]
[ "st_force2d"	]
[ "st_force3d"	]
[ "st_geomcollfromtext"	]
[ "st_geomcollfromtext"	]
[ "st_geometryfromtext"	]
[ "st_geometryfromtext"	]
[ "st_geometryn"	]
[ "st_geometrytype"	]
[ "st_geomfromtext"	]
[ "st_geomfromtext"	]
[ "st_interiorringn"	]
[ "st_interiorrings"	]
[ "st_intersection"	]
[ "st_intersects"	]
[ "st_isclosed"	]
[ "st_isempty"	]
[ "st_isring"	]
[ "st_issimple"	]
[ "st_isvalid"	]
[ "st_isvalidreason"	]
[ "st_length"	]
[ "st_length2d"	]
[ "st_linefromtext"	]
[ "st_linefromtext"	]
[ "st_makebox2d"	]
[ "st_makeenvelope"	]
[ "st_makeenvelope"	]
[ "st_makeline"	]
[ "st_makeline"	]
[ "st_makepoint"	]
[ "st_makepoint"	]
[ "st_makepoint"	]
[ "st_makepointm"	]
[ "st_makepolygon"	]
[ "st_mlinefromtext"	]
[ "st_mlinefromtext"	]
[ "st_mpointfromtext"	]
[ "st_mpointfromtext"	]
[ "st_mpolyfromtext"	]
[ "st_mpolyfromtext"	]
[ "st_npoints"	]
[ "st_nrings"	]
[ "st_numgeometries"	]
[ "st_numinteriorring"	]
[ "st_numinteriorrings"	]
[ "st_numpatches"	]
[ "st_numpoints"	]
[ "st_overlaps"	]
[ "st_overlaps"	]
[ "st_patchn"	]
[ "st_point"	]
[ "st_pointfromtext"	]
[ "st_pointfromtext"	]
[ "st_pointn"	]
[ "st_pointonsurface"	]
[ "st_polygon"	]
[ "st_polygonfromtext"	]
[ "st_polygonfromtext"	]
[ "st_relate"	]
[ "st_segmentize"	]
[ "st_setexteriorring"	]
[ "st_setsrid"	]
[ "st_srid"	]
[ "st_startpoint"	]
[ "st_symdifference"	]
[ "st_touches"	]
[ "st_transform"	]
[ "st_translate"	]
[ "st_translate"	]
[ "st_union"	]
[ "st_union"	]
[ "st_within"	]
[ "st_wkbtosql"	]
[ "st_wkttosql"	]
[ "st_x"	]
[ "st_xmax"	]
[ "st_xmax"	]
[ "st_xmin"	]
[ "st_xmin"	]
[ "st_y"	]
[ "st_ymax"	]
[ "st_ymax"	]
[ "st_ymin"	]
[ "st_ymin"	]
[ "st_z"	]
[ "start"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_pop"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stddev_samp"	]
[ "stop"	]
[ "stop"	]
[ "stop"	]
[ "storage"	]
[ "storage"	]
[ "storage"	]
[ "storage"	]
[ "storagemodel"	]
[ "storagemodelinit"	]
[ "str_to_date"	]
[ "str_to_time"	]
[ "str_to_timestamp"	]
[ "strings"	]
[ "strings"	]
[ "strings"	]
[ "substr"	]
[ "substr"	]
[ "substr"	]
[ "substr"	]
[ "substr"	]
[ "substr"	]
[ "substring"	]
[ "substring"	]
[ "substring"	]
[ "substring"	]
[ "substring"	]
[ "substring"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "sum"	]
[ "tan"	]
[ "tan"	]
[ "tanh"	]
[ "tanh"	]
[ "text"	]
[ "text"	]
[ "text"	]
[ "text"	]
[ "text"	]
[ "time_to_str"	]
[ "times"	]
[ "timestamp_to_str"	]
[ "tojsonarray"	]
[ "tojsonarray"	]
[ "tracelog"	]
[ "trim"	]
[ "trim"	]
[ "trim"	]
[ "trim"	]
[ "trim"	]
[ "trim"	]
[ "truncate"	]
[ "truncate"	]
[ "truncate"	]
[ "ucase"	]
[ "ucase"	]
[ "ucase"	]
[ "upper"	]
[ "upper"	]
[ "upper"	]
[ "uuid"	]
[ "vacuum"	]
[ "valuearray"	]
[ "var"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_pop"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "var_samp"	]
[ "week"	]
[ "weekofyear"	]
[ "xor"	]
[ "year"	]
[ "year"	]
[ "year"	]
[ "year"	]
[ "zero_or_one"	]
[ "zorder_decode_x"	]
[ "zorder_decode_y"	]
[ "zorder_encode"	]
#select t.name, g.name, g.time, g.orientation, g.event, g.old_name, g.new_name, g.condition, g.statement from triggers g left outer join _tables t on g.table_id = t.id order by t.name, g.name;
% .t,	.g,	.g,	.g,	.g,	.g,	.g,	.g,	.g # table_name
% name,	name,	time,	orientation,	event,	old_name,	new_name,	condition,	statement # name
% varchar,	varchar,	smallint,	smallint,	smallint,	varchar,	varchar,	varchar,	varchar # type
% 0,	0,	1,	1,	1,	0,	0,	0,	0 # length
#select s.name, t.systemname, t.sqlname, t.digits, t.scale, t.radix, t.eclass from types t left outer join schemas s on s.id = t.schema_id order by s.name, t.systemname, t.sqlname, t.digits, t.scale, t.radix, t.eclass;
% .s,	.t,	.t,	.t,	.t,	.t,	.t # table_name
% name,	systemname,	sqlname,	digits,	scale,	radix,	eclass # name
% varchar,	varchar,	varchar,	int,	int,	int,	int # type
% 3,	9,	14,	3,	1,	2,	2 # length
[ "sys",	"bat",	"table",	0,	0,	0,	1	]
[ "sys",	"bit",	"boolean",	1,	0,	2,	2	]
[ "sys",	"bte",	"decimal",	2,	1,	10,	10	]
[ "sys",	"bte",	"tinyint",	8,	1,	2,	7	]
[ "sys",	"date",	"date",	0,	0,	0,	13	]
[ "sys",	"daytime",	"time",	7,	0,	0,	12	]
[ "sys",	"daytime",	"timetz",	7,	1,	0,	12	]
[ "sys",	"dbl",	"double",	53,	2,	2,	11	]
[ "sys",	"flt",	"real",	24,	2,	2,	11	]
[ "sys",	"hge",	"decimal",	39,	1,	10,	10	]
[ "sys",	"hge",	"hugeint",	128,	1,	2,	7	]
[ "sys",	"inet",	"inet",	0,	0,	0,	16	]
[ "sys",	"int",	"decimal",	9,	1,	10,	10	]
[ "sys",	"int",	"int",	32,	1,	2,	7	]
[ "sys",	"int",	"month_interval",	32,	0,	2,	8	]
[ "sys",	"json",	"json",	0,	0,	0,	16	]
[ "sys",	"lng",	"bigint",	64,	1,	2,	7	]
[ "sys",	"lng",	"decimal",	18,	1,	10,	10	]
[ "sys",	"lng",	"sec_interval",	13,	1,	10,	9	]
[ "sys",	"mbr",	"mbr",	0,	0,	0,	16	]
[ "sys",	"oid",	"oid",	63,	0,	2,	6	]
[ "sys",	"ptr",	"ptr",	0,	0,	0,	1	]
[ "sys",	"sht",	"decimal",	4,	1,	10,	10	]
[ "sys",	"sht",	"smallint",	16,	1,	2,	7	]
[ "sys",	"sqlblob",	"blob",	0,	0,	0,	5	]
[ "sys",	"str",	"char",	0,	0,	0,	3	]
[ "sys",	"str",	"clob",	0,	0,	0,	4	]
[ "sys",	"str",	"varchar",	0,	0,	0,	4	]
[ "sys",	"timestamp",	"timestamp",	7,	0,	0,	14	]
[ "sys",	"timestamp",	"timestamptz",	7,	1,	0,	14	]
[ "sys",	"url",	"url",	0,	0,	0,	16	]
[ "sys",	"uuid",	"uuid",	0,	0,	0,	16	]
[ "sys",	"void",	"any",	0,	0,	0,	0	]
[ "sys",	"wkb",	"geometry",	0,	0,	0,	15	]
[ "sys",	"wkba",	"geometrya",	0,	0,	0,	16	]
[ "sys",	"wrd",	"wrd",	64,	1,	2,	7	]
#select a1.name, a2.name from sys.auths a1, sys.auths a2, sys.user_role ur where a1.id = ur.login_id and a2.id = ur.role_id order by a1.name, a2.name;
% sys.a1,	sys.a2 # table_name
% name,	name # name
% varchar,	varchar # type
% 0,	0 # length
#select keyword from sys.keywords order by keyword;
% sys.keywords # table_name
% keyword # name
% varchar # type
% 14 # length
[ "ADMIN"	]
[ "AFTER"	]
[ "AGGREGATE"	]
[ "ALWAYS"	]
[ "ASYMMETRIC"	]
[ "ATOMIC"	]
[ "AUTO_INCREMENT"	]
[ "BEFORE"	]
[ "BIGINT"	]
[ "BIGSERIAL"	]
[ "BINARY"	]
[ "BLOB"	]
[ "CALL"	]
[ "CHAIN"	]
[ "CLOB"	]
[ "COMMITTED"	]
[ "COPY"	]
[ "CORR"	]
[ "CUME_DIST"	]
[ "CURRENT_ROLE"	]
[ "CYCLE"	]
[ "DATABASE"	]
[ "DELIMITERS"	]
[ "DENSE_RANK"	]
[ "DO"	]
[ "EACH"	]
[ "ELSEIF"	]
[ "ENCRYPTED"	]
[ "EVERY"	]
[ "EXCLUDE"	]
[ "FOLLOWING"	]
[ "FUNCTION"	]
[ "GENERATED"	]
[ "IF"	]
[ "ILIKE"	]
[ "INCREMENT"	]
[ "LAG"	]
[ "LEAD"	]
[ "LIMIT"	]
[ "LOCALTIME"	]
[ "LOCALTIMESTAMP"	]
[ "LOCKED"	]
[ "MAXVALUE"	]
[ "MEDIAN"	]
[ "MEDIUMINT"	]
[ "MERGE"	]
[ "MINVALUE"	]
[ "NEW"	]
[ "NOCYCLE"	]
[ "NOMAXVALUE"	]
[ "NOMINVALUE"	]
[ "NOW"	]
[ "OFFSET"	]
[ "OLD"	]
[ "OTHERS"	]
[ "OVER"	]
[ "PARTITION"	]
[ "PERCENT_RANK"	]
[ "PLAN"	]
[ "PRECEDING"	]
[ "PROD"	]
[ "QUANTILE"	]
[ "RANGE"	]
[ "RANK"	]
[ "RECORDS"	]
[ "REFERENCING"	]
[ "REMOTE"	]
[ "RENAME"	]
[ "REPEATABLE"	]
[ "REPLICA"	]
[ "RESTART"	]
[ "RETURN"	]
[ "RETURNS"	]
[ "ROWS"	]
[ "ROW_NUMBER"	]
[ "SAMPLE"	]
[ "SAVEPOINT"	]
[ "SCHEMA"	]
[ "SEQUENCE"	]
[ "SERIAL"	]
[ "SERIALIZABLE"	]
[ "SIMPLE"	]
[ "START"	]
[ "STATEMENT"	]
[ "STDIN"	]
[ "STDOUT"	]
[ "STREAM"	]
[ "STRING"	]
[ "SYMMETRIC"	]
[ "TIES"	]
[ "TINYINT"	]
[ "TRIGGER"	]
[ "UNBOUNDED"	]
[ "UNCOMMITTED"	]
[ "UNENCRYPTED"	]
[ "WHILE"	]
[ "XMLAGG"	]
[ "XMLATTRIBUTES"	]
[ "XMLCOMMENT"	]
[ "XMLCONCAT"	]
[ "XMLDOCUMENT"	]
[ "XMLELEMENT"	]
[ "XMLFOREST"	]
[ "XMLNAMESPACES"	]
[ "XMLPARSE"	]
[ "XMLPI"	]
[ "XMLQUERY"	]
[ "XMLSCHEMA"	]
[ "XMLTEXT"	]
[ "XMLVALIDATE"	]
#select table_type_id, table_type_name from sys.table_types order by table_type_id, table_type_name;
% sys.table_types,	sys.table_types # table_name
% table_type_id,	table_type_name # name
% smallint,	varchar # type
% 2,	22 # length
[ 0,	"TABLE"	]
[ 1,	"VIEW"	]
[ 3,	"MERGE TABLE"	]
[ 4,	"STREAM TABLE"	]
[ 5,	"REMOTE TABLE"	]
[ 6,	"REPLICA TABLE"	]
[ 10,	"SYSTEM TABLE"	]
[ 11,	"SYSTEM VIEW"	]
[ 20,	"GLOBAL TEMPORARY TABLE"	]
[ 30,	"LOCAL TEMPORARY TABLE"	]
#select dependency_type_id, dependency_type_name from sys.dependency_types order by dependency_type_id, dependency_type_name;
% sys.dependency_types,	sys.dependency_types # table_name
% dependency_type_id,	dependency_type_name # name
% smallint,	varchar # type
% 2,	10 # length
[ 1,	"SCHEMA"	]
[ 2,	"TABLE"	]
[ 3,	"COLUMN"	]
[ 4,	"KEY"	]
[ 5,	"VIEW"	]
[ 6,	"USER"	]
[ 7,	"FUNCTION"	]
[ 8,	"TRIGGER"	]
[ 9,	"OWNER"	]
[ 10,	"INDEX"	]
[ 11,	"FKEY"	]
[ 12,	"SEQUENCE"	]
[ 13,	"PROCEDURE"	]
[ 14,	"BE_DROPPED"	]

# 16:23:51 >  
# 16:23:51 >  "Done."
# 16:23:51 >  

