stdout of test 'partition_elim` in directory 'sql/test/remote` itself:


# 18:37:29 >  
# 18:37:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35081" "--set" "mapi_usock=/var/tmp/mtest-17557/.s.monetdb.35081" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_remote" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 18:37:29 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_remote', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35081/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17557/.s.monetdb.35081
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 18:37:29 >  
# 18:37:29 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17557" "--port=35081"
# 18:37:29 >  

#create merge table test (x double, y double);
#create table test1 (x double, y double);
#create table test2 (x double, y double);
#create table test3 (x double, y double);
#create table test4 (x double, y double);
#insert into test1 values (1.0, 1.0);
[ 1	]
#insert into test1 values (2.0, 2.0);
[ 1	]
#insert into test2 values (3.0, -1.0);
[ 1	]
#insert into test2 values (4.0, -2.0);
[ 1	]
#insert into test3 values (3.0, 1.0);
[ 1	]
#insert into test3 values (6.0, 2.0);
[ 1	]
#insert into test4 values (7.0, 1.0);
[ 1	]
#insert into test4 values (10.0, 2.0);
[ 1	]
#alter table test1 set read only;
#alter table test2 set read only;
#alter table test3 set read only;
#alter table test4 set read only;
#alter table test add table test1;
#alter table test add table test2;
#alter table test add table test3;
#alter table test add table test4;
#select x from test1 where x between 0 and -1;
% sys.test1 # table_name
% x # name
% double # type
% 24 # length
#select x from test2 where x between 0 and -1;
% sys.test2 # table_name
% x # name
% double # type
% 24 # length
#select x from test3 where x between 0 and -1;
% sys.test3 # table_name
% x # name
% double # type
% 24 # length
#select x from test4 where x between 0 and -1;
% sys.test4 # table_name
% x # name
% double # type
% 24 # length
#select y from test1 where y between 0 and -1;
% sys.test1 # table_name
% y # name
% double # type
% 24 # length
#select y from test2 where y between 0 and -1;
% sys.test2 # table_name
% y # name
% double # type
% 24 # length
#select y from test3 where y between 0 and -1;
% sys.test3 # table_name
% y # name
% double # type
% 24 # length
#select y from test4 where y between 0 and -1;
% sys.test4 # table_name
% y # name
% double # type
% 24 # length
#explain select x,y from test where x between 4.0 and 6.0;
% .explain # table_name
% mal # name
% clob # type
% 114 # length
function user.main():void;
    X_1199:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0;","default_pipe",55);
    X_1265:void := querylog.define("-- no query","default_pipe",56);
barrier X_1320 := language.dataflow();
    X_1242 := bat.new(nil:str);
    X_1249 := bat.append(X_1242,".test");
    X_1259 := bat.append(X_1249,".test");
    X_1244 := bat.new(nil:str);
    X_1251 := bat.append(X_1244,"x");
    X_1260 := bat.append(X_1251,"y");
    X_1245 := bat.new(nil:str);
    X_1253 := bat.append(X_1245,"double");
    X_1262 := bat.append(X_1253,"double");
    X_1246 := bat.new(nil:int);
    X_1255 := bat.append(X_1246,53);
    X_1263 := bat.append(X_1255,53);
    X_1248 := bat.new(nil:int);
    X_1257 := bat.append(X_1248,0);
    X_1264 := bat.append(X_1257,0);
    X_1234:bat[:dbl] := bat.new(nil:dbl);
    X_1202 := sql.mvc();
    X_1289:bat[:dbl] := sql.bind(X_1202,"sys","test2","x",0,0,2);
    C_1286:bat[:oid] := sql.tid(X_1202,"sys","test2",0,2);
    C_1294 := algebra.subselect(X_1289,C_1286,4,6,true,true,false);
    X_1296 := algebra.projection(C_1294,X_1289);
    X_1290:bat[:dbl] := sql.bind(X_1202,"sys","test2","x",0,1,2);
    C_1288:bat[:oid] := sql.tid(X_1202,"sys","test2",1,2);
    C_1295 := algebra.subselect(X_1290,C_1288,4,6,true,true,false);
    X_1297 := algebra.projection(C_1295,X_1290);
    X_1309 := mat.packIncrement(X_1296,2);
    X_1219 := mat.packIncrement(X_1309,X_1297);
    X_1236 := bat.append(X_1234,X_1219,true);
    X_1224:bat[:dbl] := sql.bind(X_1202,"sys","test3","x",0);
    C_1222:bat[:oid] := sql.tid(X_1202,"sys","test3");
    C_1230 := algebra.subselect(X_1224,C_1222,4,6,true,true,false);
    X_1231 := algebra.projection(C_1230,X_1224);
    X_1237 := bat.append(X_1236,X_1231,true);
    X_1238:bat[:dbl] := bat.new(nil:dbl);
    X_1291:bat[:dbl] := sql.bind(X_1202,"sys","test2","y",0,0,2);
    X_1298 := algebra.projection(C_1294,X_1291);
    X_1292:bat[:dbl] := sql.bind(X_1202,"sys","test2","y",0,1,2);
    X_1299 := algebra.projection(C_1295,X_1292);
    X_1311 := mat.packIncrement(X_1298,2);
    X_1220 := mat.packIncrement(X_1311,X_1299);
    X_1239 := bat.append(X_1238,X_1220,true);
    X_1226:bat[:dbl] := sql.bind(X_1202,"sys","test3","y",0);
    X_1232 := algebra.projection(C_1230,X_1226);
    X_1240 := bat.append(X_1239,X_1232,true);
    language.pass(X_1289);
    language.pass(X_1290);
    language.pass(X_1224);
    language.pass(C_1294);
    language.pass(C_1295);
    language.pass(C_1230);
exit X_1320;
    sql.resultSet(X_1259,X_1260,X_1262,X_1263,X_1264,X_1237,X_1240);
end user.main;
#inline               actions= 0 time=3 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=4 usec 
#coercion             actions= 0 time=5 usec 
#evaluate             actions= 6 time=48 usec 
#emptybind            actions= 0 time=24 usec 
#aliases              actions=10 time=24 usec 
#mitosis              actions= 1 time=72 usec 
#mergetable           actions= 3 time=157 usec 
#deadcode             actions= 4 time=21 usec 
#aliases              actions= 0 time=16 usec 
#constants            actions= 7 time=17 usec 
#commonTerms          actions= 0 time=18 usec 
#projectionpath       actions= 0 time=12 usec 
#deadcode             actions= 0 time=16 usec 
#reorder              actions= 1 time=79 usec 
#reduce               actions=43 time=23 usec 
#matpack              actions= 2 time=17 usec 
#dataflow             actions=27 time=63 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=9 usec 
#candidates           actions= 1 time=4 usec 
#garbagecollector     actions= 1 time=44 usec 
#total                actions= 1 time=984 usec 
#explain select x,y from test where x between (7-3) and (7-1);
% .explain # table_name
% mal # name
% clob # type
% 118 # length
function user.main():void;
    X_1336:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1);","default_pipe",55);
    X_1414:void := querylog.define("-- no query","default_pipe",56);
barrier X_1474 := language.dataflow();
    X_1391 := bat.new(nil:str);
    X_1398 := bat.append(X_1391,".test");
    X_1408 := bat.append(X_1398,".test");
    X_1393 := bat.new(nil:str);
    X_1400 := bat.append(X_1393,"x");
    X_1409 := bat.append(X_1400,"y");
    X_1394 := bat.new(nil:str);
    X_1402 := bat.append(X_1394,"double");
    X_1411 := bat.append(X_1402,"double");
    X_1395 := bat.new(nil:int);
    X_1404 := bat.append(X_1395,53);
    X_1412 := bat.append(X_1404,53);
    X_1397 := bat.new(nil:int);
    X_1406 := bat.append(X_1397,0);
    X_1413 := bat.append(X_1406,0);
    X_1383:bat[:dbl] := bat.new(nil:dbl);
    X_1339 := sql.mvc();
    X_1443:bat[:dbl] := sql.bind(X_1339,"sys","test2","x",0,0,2);
    C_1440:bat[:oid] := sql.tid(X_1339,"sys","test2",0,2);
    C_1448 := algebra.subselect(X_1443,C_1440,4:dbl,6:dbl,true,true,false);
    X_1450 := algebra.projection(C_1448,X_1443);
    X_1444:bat[:dbl] := sql.bind(X_1339,"sys","test2","x",0,1,2);
    C_1442:bat[:oid] := sql.tid(X_1339,"sys","test2",1,2);
    C_1449 := algebra.subselect(X_1444,C_1442,4:dbl,6:dbl,true,true,false);
    X_1451 := algebra.projection(C_1449,X_1444);
    X_1463 := mat.packIncrement(X_1450,2);
    X_1362 := mat.packIncrement(X_1463,X_1451);
    X_1385 := bat.append(X_1383,X_1362,true);
    X_1367:bat[:dbl] := sql.bind(X_1339,"sys","test3","x",0);
    C_1365:bat[:oid] := sql.tid(X_1339,"sys","test3");
    C_1379 := algebra.subselect(X_1367,C_1365,4:dbl,6:dbl,true,true,false);
    X_1380 := algebra.projection(C_1379,X_1367);
    X_1386 := bat.append(X_1385,X_1380,true);
    X_1387:bat[:dbl] := bat.new(nil:dbl);
    X_1445:bat[:dbl] := sql.bind(X_1339,"sys","test2","y",0,0,2);
    X_1452 := algebra.projection(C_1448,X_1445);
    X_1446:bat[:dbl] := sql.bind(X_1339,"sys","test2","y",0,1,2);
    X_1453 := algebra.projection(C_1449,X_1446);
    X_1465 := mat.packIncrement(X_1452,2);
    X_1363 := mat.packIncrement(X_1465,X_1453);
    X_1388 := bat.append(X_1387,X_1363,true);
    X_1369:bat[:dbl] := sql.bind(X_1339,"sys","test3","y",0);
    X_1381 := algebra.projection(C_1379,X_1369);
    X_1389 := bat.append(X_1388,X_1381,true);
    language.pass(X_1443);
    language.pass(X_1444);
    language.pass(X_1367);
    language.pass(C_1448);
    language.pass(C_1449);
    language.pass(C_1379);
exit X_1474;
    sql.resultSet(X_1408,X_1409,X_1411,X_1412,X_1413,X_1386,X_1389);
end user.main;
#inline               actions= 0 time=3 usec 
#remap                actions= 0 time=9 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=4 usec 
#evaluate             actions=20 time=82 usec 
#emptybind            actions= 0 time=19 usec 
#aliases              actions=24 time=19 usec 
#mitosis              actions= 1 time=47 usec 
#mergetable           actions= 3 time=92 usec 
#deadcode             actions= 4 time=15 usec 
#aliases              actions= 0 time=12 usec 
#constants            actions= 9 time=14 usec 
#commonTerms          actions= 0 time=13 usec 
#projectionpath       actions= 0 time=9 usec 
#deadcode             actions= 0 time=13 usec 
#reorder              actions= 1 time=54 usec 
#reduce               actions=64 time=25 usec 
#matpack              actions= 2 time=14 usec 
#dataflow             actions=27 time=46 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=7 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=37 usec 
#total                actions= 1 time=766 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;
% .explain # table_name
% mal # name
% clob # type
% 140 # length
function user.main():void;
    X_1491:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;","default_pipe",45);
    X_1540:void := querylog.define("-- no query","default_pipe",46);
barrier X_1596 := language.dataflow();
    X_1518 := bat.new(nil:str);
    X_1525 := bat.append(X_1518,"sys.test");
    X_1534 := bat.append(X_1525,"sys.test");
    X_1520 := bat.new(nil:str);
    X_1527 := bat.append(X_1520,"x");
    X_1535 := bat.append(X_1527,"y");
    X_1521 := bat.new(nil:str);
    X_1528 := bat.append(X_1521,"double");
    X_1537 := bat.append(X_1528,"double");
    X_1522 := bat.new(nil:int);
    X_1530 := bat.append(X_1522,53);
    X_1538 := bat.append(X_1530,53);
    X_1524 := bat.new(nil:int);
    X_1532 := bat.append(X_1524,0);
    X_1539 := bat.append(X_1532,0);
    X_1494 := sql.mvc();
    X_1565:bat[:dbl] := sql.bind(X_1494,"sys","test3","y",0,0,2);
    X_1563:bat[:dbl] := sql.bind(X_1494,"sys","test3","x",0,0,2);
    C_1560:bat[:oid] := sql.tid(X_1494,"sys","test3",0,2);
    C_1568 := algebra.subselect(X_1563,C_1560,4,6,true,true,false);
    C_1570 := algebra.subselect(X_1565,C_1568,0,2,true,true,false);
    X_1572 := algebra.projection(C_1570,X_1563);
    X_1566:bat[:dbl] := sql.bind(X_1494,"sys","test3","y",0,1,2);
    X_1564:bat[:dbl] := sql.bind(X_1494,"sys","test3","x",0,1,2);
    C_1562:bat[:oid] := sql.tid(X_1494,"sys","test3",1,2);
    C_1569 := algebra.subselect(X_1564,C_1562,4,6,true,true,false);
    C_1571 := algebra.subselect(X_1566,C_1569,0,2,true,true,false);
    X_1573 := algebra.projection(C_1571,X_1564);
    X_1585 := mat.packIncrement(X_1572,2);
    X_1514 := mat.packIncrement(X_1585,X_1573);
    X_1574 := algebra.projection(C_1570,X_1565);
    X_1575 := algebra.projection(C_1571,X_1566);
    X_1587 := mat.packIncrement(X_1574,2);
    X_1515 := mat.packIncrement(X_1587,X_1575);
    language.pass(X_1563);
    language.pass(X_1564);
    language.pass(C_1570);
    language.pass(X_1565);
    language.pass(C_1571);
    language.pass(X_1566);
exit X_1596;
    sql.resultSet(X_1534,X_1535,X_1537,X_1538,X_1539,X_1514,X_1515);
end user.main;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions= 8 time=33 usec 
#emptybind            actions= 0 time=14 usec 
#aliases              actions=10 time=29 usec 
#mitosis              actions= 1 time=41 usec 
#mergetable           actions= 4 time=85 usec 
#deadcode             actions= 5 time=14 usec 
#aliases              actions= 0 time=10 usec 
#constants            actions= 9 time=12 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions= 0 time=8 usec 
#deadcode             actions= 0 time=10 usec 
#reorder              actions= 1 time=45 usec 
#reduce               actions=44 time=20 usec 
#matpack              actions= 2 time=13 usec 
#dataflow             actions=27 time=41 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=6 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=32 usec 
#total                actions= 1 time=615 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 152 # length
function user.main():void;
    X_1616:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);","default_pipe",45);
    X_1673:void := querylog.define("-- no query","default_pipe",46);
barrier X_1733 := language.dataflow();
    X_1650 := bat.new(nil:str);
    X_1657 := bat.append(X_1650,"sys.test");
    X_1667 := bat.append(X_1657,"sys.test");
    X_1652 := bat.new(nil:str);
    X_1659 := bat.append(X_1652,"x");
    X_1668 := bat.append(X_1659,"y");
    X_1653 := bat.new(nil:str);
    X_1661 := bat.append(X_1653,"double");
    X_1670 := bat.append(X_1661,"double");
    X_1654 := bat.new(nil:int);
    X_1663 := bat.append(X_1654,53);
    X_1671 := bat.append(X_1663,53);
    X_1656 := bat.new(nil:int);
    X_1665 := bat.append(X_1656,0);
    X_1672 := bat.append(X_1665,0);
    X_1619 := sql.mvc();
    X_1702:bat[:dbl] := sql.bind(X_1619,"sys","test3","y",0,0,2);
    X_1700:bat[:dbl] := sql.bind(X_1619,"sys","test3","x",0,0,2);
    C_1697:bat[:oid] := sql.tid(X_1619,"sys","test3",0,2);
    C_1705 := algebra.subselect(X_1700,C_1697,4,6,true,true,false);
    C_1707 := algebra.subselect(X_1702,C_1705,0:dbl,2:dbl,true,true,false);
    X_1709 := algebra.projection(C_1707,X_1700);
    X_1703:bat[:dbl] := sql.bind(X_1619,"sys","test3","y",0,1,2);
    X_1701:bat[:dbl] := sql.bind(X_1619,"sys","test3","x",0,1,2);
    C_1699:bat[:oid] := sql.tid(X_1619,"sys","test3",1,2);
    C_1706 := algebra.subselect(X_1701,C_1699,4,6,true,true,false);
    C_1708 := algebra.subselect(X_1703,C_1706,0:dbl,2:dbl,true,true,false);
    X_1710 := algebra.projection(C_1708,X_1701);
    X_1722 := mat.packIncrement(X_1709,2);
    X_1646 := mat.packIncrement(X_1722,X_1710);
    X_1711 := algebra.projection(C_1707,X_1702);
    X_1712 := algebra.projection(C_1708,X_1703);
    X_1724 := mat.packIncrement(X_1711,2);
    X_1647 := mat.packIncrement(X_1724,X_1712);
    language.pass(X_1700);
    language.pass(X_1701);
    language.pass(C_1707);
    language.pass(X_1702);
    language.pass(C_1708);
    language.pass(X_1703);
exit X_1733;
    sql.resultSet(X_1667,X_1668,X_1670,X_1671,X_1672,X_1646,X_1647);
end user.main;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions=16 time=60 usec 
#emptybind            actions= 0 time=16 usec 
#aliases              actions=18 time=15 usec 
#mitosis              actions= 1 time=40 usec 
#mergetable           actions= 4 time=81 usec 
#deadcode             actions= 5 time=13 usec 
#aliases              actions= 0 time=10 usec 
#constants            actions=11 time=14 usec 
#commonTerms          actions= 0 time=11 usec 
#projectionpath       actions= 0 time=7 usec 
#deadcode             actions= 0 time=10 usec 
#reorder              actions= 1 time=45 usec 
#reduce               actions=58 time=22 usec 
#matpack              actions= 2 time=13 usec 
#dataflow             actions=27 time=40 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=33 usec 
#total                actions= 1 time=638 usec 
#explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 156 # length
function user.main():void;
    X_1756:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);","default_pipe",45);
    X_1819:void := querylog.define("-- no query","default_pipe",46);
barrier X_1884 := language.dataflow();
    X_1796 := bat.new(nil:str);
    X_1803 := bat.append(X_1796,"sys.test");
    X_1813 := bat.append(X_1803,"sys.test");
    X_1798 := bat.new(nil:str);
    X_1805 := bat.append(X_1798,"x");
    X_1814 := bat.append(X_1805,"y");
    X_1799 := bat.new(nil:str);
    X_1807 := bat.append(X_1799,"double");
    X_1816 := bat.append(X_1807,"double");
    X_1800 := bat.new(nil:int);
    X_1809 := bat.append(X_1800,53);
    X_1817 := bat.append(X_1809,53);
    X_1802 := bat.new(nil:int);
    X_1811 := bat.append(X_1802,0);
    X_1818 := bat.append(X_1811,0);
    X_1759 := sql.mvc();
    X_1853:bat[:dbl] := sql.bind(X_1759,"sys","test3","y",0,0,2);
    X_1851:bat[:dbl] := sql.bind(X_1759,"sys","test3","x",0,0,2);
    C_1848:bat[:oid] := sql.tid(X_1759,"sys","test3",0,2);
    C_1856 := algebra.subselect(X_1851,C_1848,4:dbl,6:dbl,true,true,false);
    C_1858 := algebra.subselect(X_1853,C_1856,0:dbl,2:dbl,true,true,false);
    X_1860 := algebra.projection(C_1858,X_1851);
    X_1854:bat[:dbl] := sql.bind(X_1759,"sys","test3","y",0,1,2);
    X_1852:bat[:dbl] := sql.bind(X_1759,"sys","test3","x",0,1,2);
    C_1850:bat[:oid] := sql.tid(X_1759,"sys","test3",1,2);
    C_1857 := algebra.subselect(X_1852,C_1850,4:dbl,6:dbl,true,true,false);
    C_1859 := algebra.subselect(X_1854,C_1857,0:dbl,2:dbl,true,true,false);
    X_1861 := algebra.projection(C_1859,X_1852);
    X_1873 := mat.packIncrement(X_1860,2);
    X_1792 := mat.packIncrement(X_1873,X_1861);
    X_1862 := algebra.projection(C_1858,X_1853);
    X_1863 := algebra.projection(C_1859,X_1854);
    X_1875 := mat.packIncrement(X_1862,2);
    X_1793 := mat.packIncrement(X_1875,X_1863);
    language.pass(X_1851);
    language.pass(X_1852);
    language.pass(C_1858);
    language.pass(X_1853);
    language.pass(C_1859);
    language.pass(X_1854);
exit X_1884;
    sql.resultSet(X_1813,X_1814,X_1816,X_1817,X_1818,X_1792,X_1793);
end user.main;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions=24 time=70 usec 
#emptybind            actions= 0 time=17 usec 
#aliases              actions=26 time=17 usec 
#mitosis              actions= 1 time=42 usec 
#mergetable           actions= 4 time=82 usec 
#deadcode             actions= 5 time=14 usec 
#aliases              actions= 0 time=11 usec 
#constants            actions=12 time=32 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions= 0 time=7 usec 
#deadcode             actions= 0 time=11 usec 
#reorder              actions= 1 time=46 usec 
#reduce               actions=72 time=26 usec 
#matpack              actions= 2 time=14 usec 
#dataflow             actions=27 time=41 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=33 usec 
#total                actions= 1 time=695 usec 
#drop table test;
#drop table test1;
#drop table test2;
#drop table test3;
#drop table test4;

# 18:37:29 >  
# 18:37:29 >  "Done."
# 18:37:29 >  

