stdout of test 'partition_elim` in directory 'sql/test/remote` itself:


# 18:37:29 >  
# 18:37:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35081" "--set" "mapi_usock=/var/tmp/mtest-17557/.s.monetdb.35081" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_remote" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 18:37:29 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_remote', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35081/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17557/.s.monetdb.35081
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 18:37:29 >  
# 18:37:29 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17557" "--port=35081"
# 18:37:29 >  

#create merge table test (x double, y double);
#create table test1 (x double, y double);
#create table test2 (x double, y double);
#create table test3 (x double, y double);
#create table test4 (x double, y double);
#insert into test1 values (1.0, 1.0);
[ 1	]
#insert into test1 values (2.0, 2.0);
[ 1	]
#insert into test2 values (3.0, -1.0);
[ 1	]
#insert into test2 values (4.0, -2.0);
[ 1	]
#insert into test3 values (3.0, 1.0);
[ 1	]
#insert into test3 values (6.0, 2.0);
[ 1	]
#insert into test4 values (7.0, 1.0);
[ 1	]
#insert into test4 values (10.0, 2.0);
[ 1	]
#alter table test1 set read only;
#alter table test2 set read only;
#alter table test3 set read only;
#alter table test4 set read only;
#alter table test add table test1;
#alter table test add table test2;
#alter table test add table test3;
#alter table test add table test4;
#select x from test1 where x between 0 and -1;
% sys.test1 # table_name
% x # name
% double # type
% 24 # length
#select x from test2 where x between 0 and -1;
% sys.test2 # table_name
% x # name
% double # type
% 24 # length
#select x from test3 where x between 0 and -1;
% sys.test3 # table_name
% x # name
% double # type
% 24 # length
#select x from test4 where x between 0 and -1;
% sys.test4 # table_name
% x # name
% double # type
% 24 # length
#select y from test1 where y between 0 and -1;
% sys.test1 # table_name
% y # name
% double # type
% 24 # length
#select y from test2 where y between 0 and -1;
% sys.test2 # table_name
% y # name
% double # type
% 24 # length
#select y from test3 where y between 0 and -1;
% sys.test3 # table_name
% y # name
% double # type
% 24 # length
#select y from test4 where y between 0 and -1;
% sys.test4 # table_name
% y # name
% double # type
% 24 # length
#explain select x,y from test where x between 4.0 and 6.0;
% .explain # table_name
% mal # name
% clob # type
% 115 # length
function user.main():void;
    X_2:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0;","default_pipe",49:int);
barrier X_85 := language.dataflow();
    X_28 := bat.new(nil:str);
    X_35 := bat.append(X_28,".test");
    X_43 := bat.append(X_35,".test");
    X_30 := bat.new(nil:str);
    X_37 := bat.append(X_30,"x");
    X_44 := bat.append(X_37,"y");
    X_31 := bat.new(nil:str);
    X_38 := bat.append(X_31,"double");
    X_45 := bat.append(X_38,"double");
    X_32 := bat.new(nil:int);
    X_40 := bat.append(X_32,53:int);
    X_46 := bat.append(X_40,53:int);
    X_34 := bat.new(nil:int);
    X_42 := bat.append(X_34,0:int);
    X_47 := bat.append(X_42,0:int);
    X_20:bat[:dbl] := bat.new(nil:dbl);
    X_5 := sql.mvc();
    X_58:bat[:dbl] := sql.bind(X_5,"sys","test2","x",0:int,0:int,2:int);
    C_68:bat[:oid] := sql.tid(X_5,"sys","test2",0:int,2:int);
    C_76 := algebra.subselect(X_58,C_68,4:dbl,6:dbl,true,true,false);
    X_63 := algebra.projection(C_76,X_58);
    X_59:bat[:dbl] := sql.bind(X_5,"sys","test2","x",0:int,1:int,2:int);
    C_70:bat[:oid] := sql.tid(X_5,"sys","test2",1:int,2:int);
    C_77 := algebra.subselect(X_59,C_70,4:dbl,6:dbl,true,true,false);
    X_64 := algebra.projection(C_77,X_59);
    X_76 := mat.packIncrement(X_63,2:int);
    X_13 := mat.packIncrement(X_76,X_64);
    X_22 := bat.append(X_20,X_13,true);
    X_16:bat[:dbl] := sql.bind(X_5,"sys","test3","x",0:int);
    C_15:bat[:oid] := sql.tid(X_5,"sys","test3");
    C_19 := algebra.subselect(X_16,C_15,4:dbl,6:dbl,true,true,false);
    X_18 := algebra.projection(C_19,X_16);
    X_23 := bat.append(X_22,X_18,true);
    X_24:bat[:dbl] := bat.new(nil:dbl);
    X_60:bat[:dbl] := sql.bind(X_5,"sys","test2","y",0:int,0:int,2:int);
    X_65 := algebra.projection(C_76,X_60);
    X_61:bat[:dbl] := sql.bind(X_5,"sys","test2","y",0:int,1:int,2:int);
    X_66 := algebra.projection(C_77,X_61);
    X_77 := mat.packIncrement(X_65,2:int);
    X_14 := mat.packIncrement(X_77,X_66);
    X_25 := bat.append(X_24,X_14,true);
    X_17:bat[:dbl] := sql.bind(X_5,"sys","test3","y",0:int);
    X_19 := algebra.projection(C_19,X_17);
    X_26 := bat.append(X_25,X_19,true);
    language.pass(X_58);
    language.pass(X_59);
    language.pass(X_16);
    language.pass(C_76);
    language.pass(C_77);
    language.pass(C_19);
exit X_85;
    sql.resultSet(X_43,X_44,X_45,X_46,X_47,X_23,X_26);
end user.main;
#inline               actions= 0 time=3 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=4 usec 
#coercion             actions= 0 time=5 usec 
#evaluate             actions= 6 time=48 usec 
#emptybind            actions= 0 time=24 usec 
#aliases              actions=10 time=24 usec 
#mitosis              actions= 1 time=72 usec 
#mergetable           actions= 3 time=157 usec 
#deadcode             actions= 4 time=21 usec 
#aliases              actions= 0 time=16 usec 
#constants            actions= 7 time=17 usec 
#commonTerms          actions= 0 time=18 usec 
#projectionpath       actions= 0 time=12 usec 
#deadcode             actions= 0 time=16 usec 
#reorder              actions= 1 time=79 usec 
#reduce               actions=43 time=23 usec 
#matpack              actions= 2 time=17 usec 
#dataflow             actions=27 time=63 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=9 usec 
#candidates           actions= 1 time=4 usec 
#garbagecollector     actions= 1 time=44 usec 
#total                actions= 1 time=984 usec 
#explain select x,y from test where x between (7-3) and (7-1);
% .explain # table_name
% mal # name
% clob # type
% 119 # length
function user.main():void;
    X_0:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1);","default_pipe",63:int);
barrier X_85 := language.dataflow();
    X_26 := bat.new(nil:str);
    X_33 := bat.append(X_26,".test");
    X_41 := bat.append(X_33,".test");
    X_28 := bat.new(nil:str);
    X_35 := bat.append(X_28,"x");
    X_42 := bat.append(X_35,"y");
    X_29 := bat.new(nil:str);
    X_36 := bat.append(X_29,"double");
    X_43 := bat.append(X_36,"double");
    X_30 := bat.new(nil:int);
    X_38 := bat.append(X_30,53:int);
    X_44 := bat.append(X_38,53:int);
    X_32 := bat.new(nil:int);
    X_40 := bat.append(X_32,0:int);
    X_45 := bat.append(X_40,0:int);
    X_18:bat[:dbl] := bat.new(nil:dbl);
    X_3 := sql.mvc();
    X_58:bat[:dbl] := sql.bind(X_3,"sys","test2","x",0:int,0:int,2:int);
    C_68:bat[:oid] := sql.tid(X_3,"sys","test2",0:int,2:int);
    C_76 := algebra.subselect(X_58,C_68,4:dbl,6:dbl,true,true,false);
    X_63 := algebra.projection(C_76,X_58);
    X_59:bat[:dbl] := sql.bind(X_3,"sys","test2","x",0:int,1:int,2:int);
    C_70:bat[:oid] := sql.tid(X_3,"sys","test2",1:int,2:int);
    C_77 := algebra.subselect(X_59,C_70,4:dbl,6:dbl,true,true,false);
    X_64 := algebra.projection(C_77,X_59);
    X_76 := mat.packIncrement(X_63,2:int);
    X_11 := mat.packIncrement(X_76,X_64);
    X_20 := bat.append(X_18,X_11,true);
    X_14:bat[:dbl] := sql.bind(X_3,"sys","test3","x",0:int);
    C_13:bat[:oid] := sql.tid(X_3,"sys","test3");
    C_17 := algebra.subselect(X_14,C_13,4:dbl,6:dbl,true,true,false);
    X_16 := algebra.projection(C_17,X_14);
    X_21 := bat.append(X_20,X_16,true);
    X_22:bat[:dbl] := bat.new(nil:dbl);
    X_60:bat[:dbl] := sql.bind(X_3,"sys","test2","y",0:int,0:int,2:int);
    X_65 := algebra.projection(C_76,X_60);
    X_61:bat[:dbl] := sql.bind(X_3,"sys","test2","y",0:int,1:int,2:int);
    X_66 := algebra.projection(C_77,X_61);
    X_77 := mat.packIncrement(X_65,2:int);
    X_12 := mat.packIncrement(X_77,X_66);
    X_23 := bat.append(X_22,X_12,true);
    X_15:bat[:dbl] := sql.bind(X_3,"sys","test3","y",0:int);
    X_17 := algebra.projection(C_17,X_15);
    X_24 := bat.append(X_23,X_17,true);
    language.pass(X_58);
    language.pass(X_59);
    language.pass(X_14);
    language.pass(C_76);
    language.pass(C_77);
    language.pass(C_17);
exit X_85;
    sql.resultSet(X_41,X_42,X_43,X_44,X_45,X_21,X_24);
end user.main;
#inline               actions= 0 time=3 usec 
#remap                actions= 0 time=9 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=4 usec 
#evaluate             actions=20 time=82 usec 
#emptybind            actions= 0 time=19 usec 
#aliases              actions=24 time=19 usec 
#mitosis              actions= 1 time=47 usec 
#mergetable           actions= 3 time=92 usec 
#deadcode             actions= 4 time=15 usec 
#aliases              actions= 0 time=12 usec 
#constants            actions= 9 time=14 usec 
#commonTerms          actions= 0 time=13 usec 
#projectionpath       actions= 0 time=9 usec 
#deadcode             actions= 0 time=13 usec 
#reorder              actions= 1 time=54 usec 
#reduce               actions=64 time=25 usec 
#matpack              actions= 2 time=14 usec 
#dataflow             actions=27 time=46 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=7 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=37 usec 
#total                actions= 1 time=766 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;
% .explain # table_name
% mal # name
% clob # type
% 141 # length
function user.main():void;
    X_4:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;","default_pipe",37:int);
barrier X_75 := language.dataflow();
    X_18 := bat.new(nil:str);
    X_25 := bat.append(X_18,"sys.test");
    X_33 := bat.append(X_25,"sys.test");
    X_20 := bat.new(nil:str);
    X_27 := bat.append(X_20,"x");
    X_34 := bat.append(X_27,"y");
    X_21 := bat.new(nil:str);
    X_28 := bat.append(X_21,"double");
    X_35 := bat.append(X_28,"double");
    X_22 := bat.new(nil:int);
    X_30 := bat.append(X_22,53:int);
    X_36 := bat.append(X_30,53:int);
    X_24 := bat.new(nil:int);
    X_32 := bat.append(X_24,0:int);
    X_37 := bat.append(X_32,0:int);
    X_7 := sql.mvc();
    X_50:bat[:dbl] := sql.bind(X_7,"sys","test3","y",0:int,0:int,2:int);
    X_48:bat[:dbl] := sql.bind(X_7,"sys","test3","x",0:int,0:int,2:int);
    C_56:bat[:oid] := sql.tid(X_7,"sys","test3",0:int,2:int);
    C_64 := algebra.subselect(X_48,C_56,4:dbl,6:dbl,true,true,false);
    C_66 := algebra.subselect(X_50,C_64,0:dbl,2:dbl,true,true,false);
    X_53 := algebra.projection(C_66,X_48);
    X_51:bat[:dbl] := sql.bind(X_7,"sys","test3","y",0:int,1:int,2:int);
    X_49:bat[:dbl] := sql.bind(X_7,"sys","test3","x",0:int,1:int,2:int);
    C_58:bat[:oid] := sql.tid(X_7,"sys","test3",1:int,2:int);
    C_65 := algebra.subselect(X_49,C_58,4:dbl,6:dbl,true,true,false);
    C_67 := algebra.subselect(X_51,C_65,0:dbl,2:dbl,true,true,false);
    X_54 := algebra.projection(C_67,X_49);
    X_66 := mat.packIncrement(X_53,2:int);
    X_15 := mat.packIncrement(X_66,X_54);
    X_55 := algebra.projection(C_66,X_50);
    X_56 := algebra.projection(C_67,X_51);
    X_67 := mat.packIncrement(X_55,2:int);
    X_16 := mat.packIncrement(X_67,X_56);
    language.pass(X_48);
    language.pass(X_49);
    language.pass(C_66);
    language.pass(X_50);
    language.pass(C_67);
    language.pass(X_51);
exit X_75;
    sql.resultSet(X_33,X_34,X_35,X_36,X_37,X_15,X_16);
end user.main;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions= 8 time=33 usec 
#emptybind            actions= 0 time=14 usec 
#aliases              actions=10 time=29 usec 
#mitosis              actions= 1 time=41 usec 
#mergetable           actions= 4 time=85 usec 
#deadcode             actions= 5 time=14 usec 
#aliases              actions= 0 time=10 usec 
#constants            actions= 9 time=12 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions= 0 time=8 usec 
#deadcode             actions= 0 time=10 usec 
#reorder              actions= 1 time=45 usec 
#reduce               actions=44 time=20 usec 
#matpack              actions= 2 time=13 usec 
#dataflow             actions=27 time=41 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=6 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=32 usec 
#total                actions= 1 time=615 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 153 # length
function user.main():void;
    X_2:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);","default_pipe",45:int);
barrier X_75 := language.dataflow();
    X_17 := bat.new(nil:str);
    X_24 := bat.append(X_17,"sys.test");
    X_32 := bat.append(X_24,"sys.test");
    X_19 := bat.new(nil:str);
    X_26 := bat.append(X_19,"x");
    X_33 := bat.append(X_26,"y");
    X_20 := bat.new(nil:str);
    X_27 := bat.append(X_20,"double");
    X_34 := bat.append(X_27,"double");
    X_21 := bat.new(nil:int);
    X_29 := bat.append(X_21,53:int);
    X_35 := bat.append(X_29,53:int);
    X_23 := bat.new(nil:int);
    X_31 := bat.append(X_23,0:int);
    X_36 := bat.append(X_31,0:int);
    X_5 := sql.mvc();
    X_50:bat[:dbl] := sql.bind(X_5,"sys","test3","y",0:int,0:int,2:int);
    X_48:bat[:dbl] := sql.bind(X_5,"sys","test3","x",0:int,0:int,2:int);
    C_57:bat[:oid] := sql.tid(X_5,"sys","test3",0:int,2:int);
    C_64 := algebra.subselect(X_48,C_57,4:dbl,6:dbl,true,true,false);
    C_66 := algebra.subselect(X_50,C_64,0:dbl,2:dbl,true,true,false);
    X_53 := algebra.projection(C_66,X_48);
    X_51:bat[:dbl] := sql.bind(X_5,"sys","test3","y",0:int,1:int,2:int);
    X_49:bat[:dbl] := sql.bind(X_5,"sys","test3","x",0:int,1:int,2:int);
    C_58:bat[:oid] := sql.tid(X_5,"sys","test3",1:int,2:int);
    C_65 := algebra.subselect(X_49,C_58,4:dbl,6:dbl,true,true,false);
    C_67 := algebra.subselect(X_51,C_65,0:dbl,2:dbl,true,true,false);
    X_54 := algebra.projection(C_67,X_49);
    X_66 := mat.packIncrement(X_53,2:int);
    X_14 := mat.packIncrement(X_66,X_54);
    X_55 := algebra.projection(C_66,X_50);
    X_56 := algebra.projection(C_67,X_51);
    X_67 := mat.packIncrement(X_55,2:int);
    X_15 := mat.packIncrement(X_67,X_56);
    language.pass(X_48);
    language.pass(X_49);
    language.pass(C_66);
    language.pass(X_50);
    language.pass(C_67);
    language.pass(X_51);
exit X_75;
    sql.resultSet(X_32,X_33,X_34,X_35,X_36,X_14,X_15);
end user.main;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions=16 time=60 usec 
#emptybind            actions= 0 time=16 usec 
#aliases              actions=18 time=15 usec 
#mitosis              actions= 1 time=40 usec 
#mergetable           actions= 4 time=81 usec 
#deadcode             actions= 5 time=13 usec 
#aliases              actions= 0 time=10 usec 
#constants            actions=11 time=14 usec 
#commonTerms          actions= 0 time=11 usec 
#projectionpath       actions= 0 time=7 usec 
#deadcode             actions= 0 time=10 usec 
#reorder              actions= 1 time=45 usec 
#reduce               actions=58 time=22 usec 
#matpack              actions= 2 time=13 usec 
#dataflow             actions=27 time=40 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=33 usec 
#total                actions= 1 time=638 usec 
#explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 157 # length
function user.main():void;
    X_0:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);","default_pipe",53:int);
barrier X_74 := language.dataflow();
    X_15 := bat.new(nil:str);
    X_22 := bat.append(X_15,"sys.test");
    X_30 := bat.append(X_22,"sys.test");
    X_17 := bat.new(nil:str);
    X_24 := bat.append(X_17,"x");
    X_31 := bat.append(X_24,"y");
    X_18 := bat.new(nil:str);
    X_25 := bat.append(X_18,"double");
    X_32 := bat.append(X_25,"double");
    X_19 := bat.new(nil:int);
    X_27 := bat.append(X_19,53:int);
    X_33 := bat.append(X_27,53:int);
    X_21 := bat.new(nil:int);
    X_29 := bat.append(X_21,0:int);
    X_34 := bat.append(X_29,0:int);
    X_3 := sql.mvc();
    X_49:bat[:dbl] := sql.bind(X_3,"sys","test3","y",0:int,0:int,2:int);
    X_47:bat[:dbl] := sql.bind(X_3,"sys","test3","x",0:int,0:int,2:int);
    C_56:bat[:oid] := sql.tid(X_3,"sys","test3",0:int,2:int);
    C_63 := algebra.subselect(X_47,C_56,4:dbl,6:dbl,true,true,false);
    C_65 := algebra.subselect(X_49,C_63,0:dbl,2:dbl,true,true,false);
    X_52 := algebra.projection(C_65,X_47);
    X_50:bat[:dbl] := sql.bind(X_3,"sys","test3","y",0:int,1:int,2:int);
    X_48:bat[:dbl] := sql.bind(X_3,"sys","test3","x",0:int,1:int,2:int);
    C_57:bat[:oid] := sql.tid(X_3,"sys","test3",1:int,2:int);
    C_64 := algebra.subselect(X_48,C_57,4:dbl,6:dbl,true,true,false);
    C_66 := algebra.subselect(X_50,C_64,0:dbl,2:dbl,true,true,false);
    X_53 := algebra.projection(C_66,X_48);
    X_65 := mat.packIncrement(X_52,2:int);
    X_12 := mat.packIncrement(X_65,X_53);
    X_54 := algebra.projection(C_65,X_49);
    X_55 := algebra.projection(C_66,X_50);
    X_66 := mat.packIncrement(X_54,2:int);
    X_13 := mat.packIncrement(X_66,X_55);
    language.pass(X_47);
    language.pass(X_48);
    language.pass(C_65);
    language.pass(X_49);
    language.pass(C_66);
    language.pass(X_50);
exit X_74;
    sql.resultSet(X_30,X_31,X_32,X_33,X_34,X_12,X_13);
end user.main;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=8 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions=24 time=70 usec 
#emptybind            actions= 0 time=17 usec 
#aliases              actions=26 time=17 usec 
#mitosis              actions= 1 time=42 usec 
#mergetable           actions= 4 time=82 usec 
#deadcode             actions= 5 time=14 usec 
#aliases              actions= 0 time=11 usec 
#constants            actions=12 time=32 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions= 0 time=7 usec 
#deadcode             actions= 0 time=11 usec 
#reorder              actions= 1 time=46 usec 
#reduce               actions=72 time=26 usec 
#matpack              actions= 2 time=14 usec 
#dataflow             actions=27 time=41 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=5 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=33 usec 
#total                actions= 1 time=695 usec 
#drop table test;
#drop table test1;
#drop table test2;
#drop table test3;
#drop table test4;

# 18:37:29 >  
# 18:37:29 >  "Done."
# 18:37:29 >  

