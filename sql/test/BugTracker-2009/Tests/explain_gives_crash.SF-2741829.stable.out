stdout of test 'explain_gives_crash.SF-2741829` in directory 'test/BugTracker-2009` itself:


# 22:45:54 >  
# 22:45:54 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=35519 --set xrpc_port=48894 --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker-2009" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 22:45:54 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test_BugTracker-2009', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:35519/
# MonetDB/SQL module v2.30.0 loaded

Ready.
#function user.main():void;
#    clients.quit();
#end main;


# 21:13:40 >  
# 21:13:40 >  mclient -lsql -i --host=alf --port=39638 
# 21:13:40 >  

#~BeginVariableOutput~#
function user.s4_1{autoCommit=true}():void;
    X_2 := sql.mvc();
"    sql.catalog(29\,""sys"":str\,140704337421584:ptr\,0:int);"
"    X_11:bat[:oid\,:int]  := sql.bind(X_2\,""sys""\,""blabla""\,""id""\,0);"
    X_13 := algebra.selectNotNil(X_11);
"    X_8:bat[:oid\,:oid]  := sql.bind_dbat(X_2\,""sys""\,""blabla""\,1);"
    X_10 := bat.reverse(X_8);
"    X_14 := algebra.kdifference(X_13\,X_10);"
"    (ext26\,grp24) := group.done(X_14);"
    X_17 := bat.mirror(ext26);
"    X_18:bat[:oid\,:wrd]  := aggr.count(grp24\,grp24\,X_17);"
    X_23 := aggr.count(X_18);
    X_19:wrd  := aggr.sum(X_18);
    X_20 := calc.isnil(X_19);
"    X_22 := calc.ifthenelse(X_20\,0:wrd\,X_19);"
"    X_24 := calc.!=(X_23\,X_22);"
"    sql.assert(X_24\,""UPDATE: UNIQUE constraint 'blabla.dada' violated"":str);"
"    sql.exportOperation("""");"
end s4_1;
function user.s5_1{autoCommit=true}():void;
    X_2 := sql.mvc();
"    sql.catalog(29\,""sys"":str\,140704337487152:ptr\,0:int);"
"    X_11:bat[:oid\,:int]  := sql.bind(X_2\,""sys""\,""blabla""\,""id""\,0);"
    X_13 := algebra.selectNotNil(X_11);
"    X_8:bat[:oid\,:oid]  := sql.bind_dbat(X_2\,""sys""\,""blabla""\,1);"
    X_10 := bat.reverse(X_8);
"    X_14 := algebra.kdifference(X_13\,X_10);"
"    (ext26\,grp24) := group.done(X_14);"
    X_17 := bat.mirror(ext26);
"    X_18:bat[:oid\,:wrd]  := aggr.count(grp24\,grp24\,X_17);"
    X_23 := aggr.count(X_18);
    X_19:wrd  := aggr.sum(X_18);
    X_20 := calc.isnil(X_19);
"    X_22 := calc.ifthenelse(X_20\,0:wrd\,X_19);"
"    X_24 := calc.!=(X_23\,X_22);"
"    sql.assert(X_24\,""UPDATE: UNIQUE constraint 'blabla.dada' violated"":str);"
"    sql.exportOperation("""");"
end s5_1;
#~EndVariableOutput~#
#~BeginVariableOutput~#
function user.s8_1{autoCommit=true}():void;
    X_2 := sql.mvc();
"    sql.catalog(29\,""sys"":str\,140704337646656:ptr\,0:int);"
"    X_11:bat[:oid\,:int]  := sql.bind(X_2\,""sys""\,""blabla""\,""id""\,0);"
    X_13 := algebra.selectNotNil(X_11);
"    X_8:bat[:oid\,:oid]  := sql.bind_dbat(X_2\,""sys""\,""blabla""\,1);"
    X_10 := bat.reverse(X_8);
"    X_14 := algebra.kdifference(X_13\,X_10);"
"    (ext26\,grp24) := group.done(X_14);"
    X_17 := bat.mirror(ext26);
"    X_18:bat[:oid\,:wrd]  := aggr.count(grp24\,grp24\,X_17);"
    X_23 := aggr.count(X_18);
    X_19:wrd  := aggr.sum(X_18);
    X_20 := calc.isnil(X_19);
"    X_22 := calc.ifthenelse(X_20\,0:wrd\,X_19);"
"    X_24 := calc.!=(X_23\,X_22);"
"    sql.assert(X_24\,""UPDATE: UNIQUE constraint 'blabla.dada' violated"":str);"
"    sql.exportOperation("""");"
end s8_1;
#~EndVariableOutput~#

# 11:37:28 >  
# 11:37:28 >  Done.
# 11:37:28 >  

