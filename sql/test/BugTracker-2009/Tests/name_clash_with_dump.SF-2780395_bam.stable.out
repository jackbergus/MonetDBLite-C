stdout of test 'name_clash_with_dump.SF-2780395_bam` in directory 'sql/test/BugTracker-2009` itself:


# 11:25:18 >  
# 11:25:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39227" "--set" "mapi_usock=/var/tmp/mtest-25673/.s.monetdb.39227" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/robin/MonetDB/PREFIX/var/MonetDB/mTests_sql_test_BugTracker-2009" "--set" "mal_listing=0"
# 11:25:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2009', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://robin-xps13:39227/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-25673/.s.monetdb.39227
# MonetDB/SQL module loaded

Ready.
#WARNING To speedup sql.password a bulk operator implementation is needed
#WARNING To speedup sql.password a bulk operator implementation is needed
#WARNING To speedup sql.password a bulk operator implementation is needed
#WARNING To speedup sql.password a bulk operator implementation is needed
#WARNING To speedup sql.get_value a bulk operator implementation is needed
#WARNING To speedup sql.get_value a bulk operator implementation is needed
#WARNING To speedup sql.get_value a bulk operator implementation is needed
#WARNING To speedup sql.get_value a bulk operator implementation is needed

# 11:25:18 >  
# 11:25:18 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-25673" "--port=39227"
# 11:25:18 >  

#create table tf (a int);
START TRANSACTION;
SET SCHEMA "bam";
CREATE TABLE "bam"."files" (
	"file_id"        BIGINT        NOT NULL,
	"file_location"  CHARACTER LARGE OBJECT NOT NULL,
	"dbschema"       SMALLINT      NOT NULL,
	"format_version" VARCHAR(7),
	"sorting_order"  VARCHAR(10),
	"comments"       CHARACTER LARGE OBJECT,
	CONSTRAINT "files_pkey_file_id" PRIMARY KEY ("file_id")
);
CREATE TABLE "bam"."sq" (
	"sn"      CHARACTER LARGE OBJECT NOT NULL,
	"file_id" BIGINT        NOT NULL,
	"ln"      INTEGER,
	"as"      INTEGER,
	"m5"      CHARACTER LARGE OBJECT,
	"sp"      CHARACTER LARGE OBJECT,
	"ur"      CHARACTER LARGE OBJECT,
	CONSTRAINT "sq_pkey_sn_file_id" PRIMARY KEY ("sn", "file_id")
);
CREATE TABLE "bam"."rg" (
	"id"      CHARACTER LARGE OBJECT NOT NULL,
	"file_id" BIGINT        NOT NULL,
	"cn"      CHARACTER LARGE OBJECT,
	"ds"      CHARACTER LARGE OBJECT,
	"dt"      TIMESTAMP,
	"fo"      CHARACTER LARGE OBJECT,
	"ks"      CHARACTER LARGE OBJECT,
	"lb"      CHARACTER LARGE OBJECT,
	"pg"      CHARACTER LARGE OBJECT,
	"pi"      INTEGER,
	"pl"      CHARACTER LARGE OBJECT,
	"pu"      CHARACTER LARGE OBJECT,
	"sm"      CHARACTER LARGE OBJECT,
	CONSTRAINT "rg_pkey_id_file_id" PRIMARY KEY ("id", "file_id")
);
CREATE TABLE "bam"."pg" (
	"id"      CHARACTER LARGE OBJECT NOT NULL,
	"file_id" BIGINT        NOT NULL,
	"pn"      CHARACTER LARGE OBJECT,
	"cl"      CHARACTER LARGE OBJECT,
	"pp"      CHARACTER LARGE OBJECT,
	"vn"      CHARACTER LARGE OBJECT,
	CONSTRAINT "pg_pkey_id_file_id" PRIMARY KEY ("id", "file_id")
);
CREATE TABLE "bam"."export" (
	"qname" CHARACTER LARGE OBJECT NOT NULL,
	"flag"  SMALLINT      NOT NULL,
	"rname" CHARACTER LARGE OBJECT NOT NULL,
	"pos"   INTEGER       NOT NULL,
	"mapq"  SMALLINT      NOT NULL,
	"cigar" CHARACTER LARGE OBJECT NOT NULL,
	"rnext" CHARACTER LARGE OBJECT NOT NULL,
	"pnext" INTEGER       NOT NULL,
	"tlen"  INTEGER       NOT NULL,
	"seq"   CHARACTER LARGE OBJECT NOT NULL,
	"qual"  CHARACTER LARGE OBJECT NOT NULL
);
SET SCHEMA "sys";
CREATE TABLE "sys"."tf" (
	"a" INTEGER
);
ALTER TABLE "bam"."pg" ADD CONSTRAINT "pg_fkey_file_id" FOREIGN KEY ("file_id") REFERENCES "bam"."files" ("file_id");
ALTER TABLE "bam"."rg" ADD CONSTRAINT "rg_fkey_file_id" FOREIGN KEY ("file_id") REFERENCES "bam"."files" ("file_id");
ALTER TABLE "bam"."sq" ADD CONSTRAINT "sq_fkey_file_id" FOREIGN KEY ("file_id") REFERENCES "bam"."files" ("file_id");
COMMIT;
#drop table tf;

# 11:25:18 >  
# 11:25:18 >  "Done."
# 11:25:18 >  
