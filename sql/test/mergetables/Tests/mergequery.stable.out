stdout of test 'mergequery` in directory 'sql/test/mergetables` itself:


# 16:20:23 >  
# 16:20:23 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30678" "--set" "mapi_usock=/var/tmp/mtest-11019/.s.monetdb.30678" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/current//Linux/var/MonetDB/mTests_sql_test_mergetables" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 16:20:23 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_mergetables', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30678/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11019/.s.monetdb.30678
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 16:20:23 >  
# 16:20:23 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11019" "--port=30678"
# 16:20:23 >  

#CREATE TABLE part1 ( x double, y double, z double);
#COPY 4 RECORDS INTO part1 FROM stdin USING DELIMITERS ' ','\n';
#0.0 0.0 0.0
#1.0 0.0 0.0 
#0.0 1.0 0.0 
#1.0 1.0 0.0 
[ 4	]
#CREATE TABLE part2 ( x double, y double, z double);
#COPY 4 RECORDS INTO part2 FROM stdin USING DELIMITERS ' ','\n';
#2.0 0.0 0.0
#3.0 0.0 0.0 
#2.0 1.0 0.0 
#3.0 1.0 0.0 
[ 4	]
#CREATE MERGE TABLE complete ( x double, y double, z double);
#ALTER TABLE complete ADD TABLE part1;
#ALTER TABLE complete ADD TABLE part2;
#SELECT * FROM COMPLETE;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 0,	0,	0	]
[ 1,	0,	0	]
[ 0,	1,	0	]
[ 1,	1,	0	]
[ 2,	0,	0	]
[ 3,	0,	0	]
[ 2,	1,	0	]
[ 3,	1,	0	]
#SELECT * FROM complete where x>=0.0 AND x <=1.0;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 0,	0,	0	]
[ 1,	0,	0	]
[ 0,	1,	0	]
[ 1,	1,	0	]
#SELECT * FROM complete where x>=2.0 AND x <=3.0;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 2,	0,	0	]
[ 3,	0,	0	]
[ 2,	1,	0	]
[ 3,	1,	0	]
#SELECT * FROM complete where x>=1.0 AND x <=2.0;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 1,	0,	0	]
[ 1,	1,	0	]
[ 2,	0,	0	]
[ 2,	1,	0	]
#CREATE TABLE answ( LIKE complete);
#EXPLAIN INSERT INTO answ
#SELECT * FROM complete where x>=1.0 AND x <=2.0;
% .explain # table_name
% mal # name
% clob # type
% 127 # length
function user.s13_1{autoCommit=true}(A0:dbl,A1:dbl):void;
    X_83:void  := querylog.define("explain insert into answ\nselect * from complete where x>=1.0 and x <=2.0;","default_pipe");
barrier X_290 := language.dataflow();
    X_4 := sql.mvc();
    X_5:bat[:oid,:dbl]  := bat.new(nil:oid,nil:dbl);
    X_8:bat[:oid,:oid]  := sql.tid(X_4,"sys","part1");
    X_11:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part1","x",0);
    X_107:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part1","x",0,0,4);
    X_109:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part1","x",0,1,4);
    X_111:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part1","x",0,2,4);
    X_113:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part1","x",0,3,4);
    (X_14,r1_14) := sql.bind(X_4,"sys","part1","x",2);
    (X_114:bat[:oid,:oid] ,X_115:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part1","x",2,0,4);
    (X_116:bat[:oid,:oid] ,X_117:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part1","x",2,1,4);
    (X_118:bat[:oid,:oid] ,X_119:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part1","x",2,2,4);
    (X_120:bat[:oid,:oid] ,X_121:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part1","x",2,3,4);
    X_17:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part1","x",1);
    X_208 := mat.packIncrement(X_107,4);
    X_209 := mat.packIncrement(X_208,X_109);
    X_210 := mat.packIncrement(X_209,X_111);
exit X_290;
barrier X_302 := language.dataflow();
    X_11:bat[:oid,:dbl]  := mat.packIncrement(X_210,X_113);
    X_97 := algebra.subselect(X_11,X_8,A0,A1,true,true,false);
    X_192 := algebra.subselect(X_115,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_193 := algebra.subselect(X_117,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_194 := algebra.subselect(X_119,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_195 := algebra.subselect(X_121,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_100 := algebra.subselect(X_17,X_8,A0,A1,true,true,false);
    X_212 := mat.packIncrement(X_114,4);
    X_213 := mat.packIncrement(X_212,X_116);
    X_214 := mat.packIncrement(X_213,X_118);
    X_14 := mat.packIncrement(X_214,X_120);
    X_216 := mat.packIncrement(X_192,4);
    X_217 := mat.packIncrement(X_216,X_193);
    X_218 := mat.packIncrement(X_217,X_194);
    X_98 := mat.packIncrement(X_218,X_195);
    X_19 := sql.subdelta(X_97,X_8,X_14,X_98,X_100);
    X_220 := mat.packIncrement(X_115,4);
    X_221 := mat.packIncrement(X_220,X_117);
    X_222 := mat.packIncrement(X_221,X_119);
    r1_14 := mat.packIncrement(X_222,X_121);
    X_21 := sql.projectdelta(X_19,X_11,X_14,r1_14,X_17);
    X_22 := bat.append(X_5,X_21,true);
    X_23:bat[:oid,:oid]  := sql.tid(X_4,"sys","part2");
    X_25:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part2","x",0);
    X_122:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part2","x",0,0,4);
    X_123:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part2","x",0,1,4);
    X_124:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part2","x",0,2,4);
    X_125:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part2","x",0,3,4);
    (X_26,r1_30) := sql.bind(X_4,"sys","part2","x",2);
    (X_126:bat[:oid,:oid] ,X_127:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part2","x",2,0,4);
    (X_128:bat[:oid,:oid] ,X_129:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part2","x",2,1,4);
    (X_130:bat[:oid,:oid] ,X_131:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part2","x",2,2,4);
    (X_132:bat[:oid,:oid] ,X_133:bat[:oid,:dbl] ) := sql.bind(X_4,"sys","part2","x",2,3,4);
    X_28:bat[:oid,:dbl]  := sql.bind(X_4,"sys","part2","x",1);
    X_224 := mat.packIncrement(X_122,4);
    X_225 := mat.packIncrement(X_224,X_123);
    X_226 := mat.packIncrement(X_225,X_124);
    language.pass(nil:bat[:oid,:oid]);
    language.pass(X_8);
    language.pass(X_115);
    language.pass(X_117);
    language.pass(X_119);
    language.pass(X_121);
    language.pass(X_11);
    language.pass(X_14);
    language.pass(X_17);
exit X_302;
barrier X_314 := language.dataflow();
    X_25:bat[:oid,:dbl]  := mat.packIncrement(X_226,X_125);
    X_101 := algebra.subselect(X_25,X_23,A0,A1,true,true,false);
    X_197 := algebra.subselect(X_127,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_199 := algebra.subselect(X_129,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_201 := algebra.subselect(X_131,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_203 := algebra.subselect(X_133,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_104 := algebra.subselect(X_28,X_23,A0,A1,true,true,false);
    X_228 := mat.packIncrement(X_126,4);
    X_229 := mat.packIncrement(X_228,X_128);
    X_230 := mat.packIncrement(X_229,X_130);
    X_26 := mat.packIncrement(X_230,X_132);
    X_232 := mat.packIncrement(X_197,4);
    X_233 := mat.packIncrement(X_232,X_199);
    X_234 := mat.packIncrement(X_233,X_201);
    X_102 := mat.packIncrement(X_234,X_203);
    X_29 := sql.subdelta(X_101,X_23,X_26,X_102,X_104);
    X_236 := mat.packIncrement(X_127,4);
    X_238 := mat.packIncrement(X_236,X_129);
    X_239 := mat.packIncrement(X_238,X_131);
    r1_30 := mat.packIncrement(X_239,X_133);
    X_31 := sql.projectdelta(X_29,X_25,X_26,r1_30,X_28);
    X_32 := bat.append(X_22,X_31,true);
    language.pass(nil:bat[:oid,:oid]);
    language.pass(X_23);
    language.pass(X_127);
    language.pass(X_129);
    language.pass(X_131);
    language.pass(X_133);
    language.pass(X_25);
    language.pass(X_26);
    language.pass(X_28);
exit X_314;
    X_33 := sql.append(X_4,"sys","answ","x",X_32);
barrier X_317 := language.dataflow();
    X_37:bat[:oid,:dbl]  := bat.new(nil:oid,nil:dbl);
    X_40:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part1","y",0);
    X_134:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part1","y",0,0,4);
    X_135:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part1","y",0,1,4);
    X_136:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part1","y",0,2,4);
    X_137:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part1","y",0,3,4);
    (X_44,r1_53) := sql.bind(X_33,"sys","part1","y",2);
    (X_140:bat[:oid,:oid] ,X_141:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part1","y",2,0,4);
    (X_143:bat[:oid,:oid] ,X_144:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part1","y",2,1,4);
    (X_146:bat[:oid,:oid] ,X_147:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part1","y",2,2,4);
    (X_149:bat[:oid,:oid] ,X_150:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part1","y",2,3,4);
    X_47:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part1","y",1);
    X_241 := mat.packIncrement(X_134,4);
    X_242 := mat.packIncrement(X_241,X_135);
    X_243 := mat.packIncrement(X_242,X_136);
exit X_317;
barrier X_320 := language.dataflow();
    X_40:bat[:oid,:dbl]  := mat.packIncrement(X_243,X_137);
    X_245 := mat.packIncrement(X_140,4);
    X_246 := mat.packIncrement(X_245,X_143);
    X_247 := mat.packIncrement(X_246,X_146);
    X_44 := mat.packIncrement(X_247,X_149);
    X_249 := mat.packIncrement(X_141,4);
    X_250 := mat.packIncrement(X_249,X_144);
    X_251 := mat.packIncrement(X_250,X_147);
    r1_53 := mat.packIncrement(X_251,X_150);
    X_49 := sql.projectdelta(X_19,X_40,X_44,r1_53,X_47);
    X_50 := bat.append(X_37,X_49,true);
    X_51:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part2","y",0);
    X_151:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part2","y",0,0,4);
    X_152:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part2","y",0,1,4);
    X_153:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part2","y",0,2,4);
    X_154:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part2","y",0,3,4);
    (X_53,r1_64) := sql.bind(X_33,"sys","part2","y",2);
    (X_155:bat[:oid,:oid] ,X_156:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part2","y",2,0,4);
    (X_157:bat[:oid,:oid] ,X_158:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part2","y",2,1,4);
    (X_159:bat[:oid,:oid] ,X_160:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part2","y",2,2,4);
    (X_161:bat[:oid,:oid] ,X_162:bat[:oid,:dbl] ) := sql.bind(X_33,"sys","part2","y",2,3,4);
    X_55:bat[:oid,:dbl]  := sql.bind(X_33,"sys","part2","y",1);
    X_253 := mat.packIncrement(X_151,4);
    X_254 := mat.packIncrement(X_253,X_152);
    X_255 := mat.packIncrement(X_254,X_153);
exit X_320;
barrier X_323 := language.dataflow();
    X_51:bat[:oid,:dbl]  := mat.packIncrement(X_255,X_154);
    X_257 := mat.packIncrement(X_155,4);
    X_258 := mat.packIncrement(X_257,X_157);
    X_259 := mat.packIncrement(X_258,X_159);
    X_53 := mat.packIncrement(X_259,X_161);
    X_261 := mat.packIncrement(X_156,4);
    X_262 := mat.packIncrement(X_261,X_158);
    X_263 := mat.packIncrement(X_262,X_160);
    r1_64 := mat.packIncrement(X_263,X_162);
    X_56 := sql.projectdelta(X_29,X_51,X_53,r1_64,X_55);
    X_57 := bat.append(X_50,X_56,true);
exit X_323;
    X_59 := sql.append(X_33,"sys","answ","y",X_57);
barrier X_326 := language.dataflow();
    X_60:bat[:oid,:dbl]  := bat.new(nil:oid,nil:dbl);
    X_61:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part1","z",0);
    X_163:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part1","z",0,0,4);
    X_164:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part1","z",0,1,4);
    X_165:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part1","z",0,2,4);
    X_166:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part1","z",0,3,4);
    (X_64,r1_78) := sql.bind(X_59,"sys","part1","z",2);
    (X_167:bat[:oid,:oid] ,X_168:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part1","z",2,0,4);
    (X_169:bat[:oid,:oid] ,X_170:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part1","z",2,1,4);
    (X_171:bat[:oid,:oid] ,X_172:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part1","z",2,2,4);
    (X_174:bat[:oid,:oid] ,X_175:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part1","z",2,3,4);
    X_66:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part1","z",1);
    X_265 := mat.packIncrement(X_163,4);
    X_266 := mat.packIncrement(X_265,X_164);
    X_267 := mat.packIncrement(X_266,X_165);
exit X_326;
barrier X_329 := language.dataflow();
    X_61:bat[:oid,:dbl]  := mat.packIncrement(X_267,X_166);
    X_269 := mat.packIncrement(X_167,4);
    X_271 := mat.packIncrement(X_269,X_169);
    X_272 := mat.packIncrement(X_271,X_171);
    X_64 := mat.packIncrement(X_272,X_174);
    X_274 := mat.packIncrement(X_168,4);
    X_275 := mat.packIncrement(X_274,X_170);
    X_276 := mat.packIncrement(X_275,X_172);
    r1_78 := mat.packIncrement(X_276,X_175);
    X_67 := sql.projectdelta(X_19,X_61,X_64,r1_78,X_66);
    X_68 := bat.append(X_60,X_67,true);
    X_69:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part2","z",0);
    X_177:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part2","z",0,0,4);
    X_179:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part2","z",0,1,4);
    X_181:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part2","z",0,2,4);
    X_183:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part2","z",0,3,4);
    (X_71,r1_87) := sql.bind(X_59,"sys","part2","z",2);
    (X_184:bat[:oid,:oid] ,X_185:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part2","z",2,0,4);
    (X_186:bat[:oid,:oid] ,X_187:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part2","z",2,1,4);
    (X_188:bat[:oid,:oid] ,X_189:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part2","z",2,2,4);
    (X_190:bat[:oid,:oid] ,X_191:bat[:oid,:dbl] ) := sql.bind(X_59,"sys","part2","z",2,3,4);
    X_74:bat[:oid,:dbl]  := sql.bind(X_59,"sys","part2","z",1);
    X_278 := mat.packIncrement(X_177,4);
    X_279 := mat.packIncrement(X_278,X_179);
    X_280 := mat.packIncrement(X_279,X_181);
exit X_329;
barrier X_332 := language.dataflow();
    X_69:bat[:oid,:dbl]  := mat.packIncrement(X_280,X_183);
    X_282 := mat.packIncrement(X_184,4);
    X_283 := mat.packIncrement(X_282,X_186);
    X_284 := mat.packIncrement(X_283,X_188);
    X_71 := mat.packIncrement(X_284,X_190);
    X_286 := mat.packIncrement(X_185,4);
    X_287 := mat.packIncrement(X_286,X_187);
    X_288 := mat.packIncrement(X_287,X_189);
    r1_87 := mat.packIncrement(X_288,X_191);
    X_76 := sql.projectdelta(X_29,X_69,X_71,r1_87,X_74);
    X_77 := bat.append(X_68,X_76,true);
exit X_332;
    X_78 := sql.append(X_59,"sys","answ","z",X_77);
    X_80 := aggr.count(X_77);
    sql.affectedRows(X_78,X_80,"");
end user.s13_1;
#INSERT INTO answ
#SELECT * FROM complete where x>=1.0 AND x <=2.0;
[ 4	]
#EXPLAIN INSERT INTO answ
#SELECT * FROM complete
#WHERE x BETWEEN 0 AND 2 AND Y BETWEEN 0 AND 2;
% .explain # table_name
% mal # name
% clob # type
% 149 # length
function user.s14_1{autoCommit=true}(A0:dbl,A1:dbl,A2:dbl,A3:dbl):void;
    X_88:void  := querylog.define("explain insert into answ\nselect * from complete\nwhere x between 0 and 2 and y between 0 and 2;","default_pipe");
barrier X_319 := language.dataflow();
    X_6 := sql.mvc();
    X_7:bat[:oid,:dbl]  := bat.new(nil:oid,nil:dbl);
    X_10:bat[:oid,:oid]  := sql.tid(X_6,"sys","part1");
    X_13:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","x",0);
    X_120:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","x",0,0,4);
    X_122:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","x",0,1,4);
    X_124:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","x",0,2,4);
    X_126:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","x",0,3,4);
    (X_16,r1_16) := sql.bind(X_6,"sys","part1","x",2);
    (X_127:bat[:oid,:oid] ,X_128:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","x",2,0,4);
    (X_129:bat[:oid,:oid] ,X_130:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","x",2,1,4);
    (X_131:bat[:oid,:oid] ,X_132:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","x",2,2,4);
    (X_133:bat[:oid,:oid] ,X_134:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","x",2,3,4);
    X_19:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","x",1);
    X_21:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","y",0);
    X_135:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","y",0,0,4);
    X_136:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","y",0,1,4);
    X_137:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","y",0,2,4);
    X_138:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","y",0,3,4);
    (X_23,r1_27) := sql.bind(X_6,"sys","part1","y",2);
    (X_139:bat[:oid,:oid] ,X_140:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","y",2,0,4);
    (X_141:bat[:oid,:oid] ,X_142:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","y",2,1,4);
    (X_143:bat[:oid,:oid] ,X_144:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","y",2,2,4);
    (X_145:bat[:oid,:oid] ,X_146:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part1","y",2,3,4);
    X_25:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part1","y",1);
    X_229 := mat.packIncrement(X_135,4);
    X_230 := mat.packIncrement(X_229,X_136);
    X_231 := mat.packIncrement(X_230,X_137);
exit X_319;
barrier X_333 := language.dataflow();
    X_21:bat[:oid,:dbl]  := mat.packIncrement(X_231,X_138);
    X_102 := algebra.subselect(X_21,X_10,A2,A3,true,true,false);
    X_206 := algebra.subselect(X_140,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_207 := algebra.subselect(X_142,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_208 := algebra.subselect(X_144,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_209 := algebra.subselect(X_146,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_105 := algebra.subselect(X_25,X_10,A2,A3,true,true,false);
    X_233 := mat.packIncrement(X_139,4);
    X_234 := mat.packIncrement(X_233,X_141);
    X_235 := mat.packIncrement(X_234,X_143);
    X_23 := mat.packIncrement(X_235,X_145);
    X_237 := mat.packIncrement(X_206,4);
    X_238 := mat.packIncrement(X_237,X_207);
    X_239 := mat.packIncrement(X_238,X_208);
    X_103 := mat.packIncrement(X_239,X_209);
    X_26 := sql.subdelta(X_102,X_10,X_23,X_103,X_105);
    X_241 := mat.packIncrement(X_120,4);
    X_242 := mat.packIncrement(X_241,X_122);
    X_243 := mat.packIncrement(X_242,X_124);
    X_13:bat[:oid,:dbl]  := mat.packIncrement(X_243,X_126);
    X_106 := algebra.subselect(X_13,X_26,A0,A1,true,true,false);
    X_210 := algebra.subselect(X_128,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_212 := algebra.subselect(X_130,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_214 := algebra.subselect(X_132,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_216 := algebra.subselect(X_134,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_109 := algebra.subselect(X_19,X_26,A0,A1,true,true,false);
    X_245 := mat.packIncrement(X_127,4);
    X_246 := mat.packIncrement(X_245,X_129);
    X_247 := mat.packIncrement(X_246,X_131);
    X_16 := mat.packIncrement(X_247,X_133);
    X_249 := mat.packIncrement(X_210,4);
    X_250 := mat.packIncrement(X_249,X_212);
    X_251 := mat.packIncrement(X_250,X_214);
    X_107 := mat.packIncrement(X_251,X_216);
    X_28 := sql.subdelta(X_106,X_26,X_16,X_107,X_109);
    X_253 := mat.packIncrement(X_128,4);
    X_254 := mat.packIncrement(X_253,X_130);
    X_255 := mat.packIncrement(X_254,X_132);
    r1_16 := mat.packIncrement(X_255,X_134);
    X_29 := sql.projectdelta(X_28,X_13,X_16,r1_16,X_19);
    X_30 := bat.append(X_7,X_29,true);
    X_32:bat[:oid,:oid]  := sql.tid(X_6,"sys","part2");
    X_34:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","x",0);
    X_147:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","x",0,0,4);
    X_148:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","x",0,1,4);
    X_149:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","x",0,2,4);
    X_150:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","x",0,3,4);
    (X_35,r1_43) := sql.bind(X_6,"sys","part2","x",2);
    (X_153:bat[:oid,:oid] ,X_154:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","x",2,0,4);
    (X_156:bat[:oid,:oid] ,X_157:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","x",2,1,4);
    (X_159:bat[:oid,:oid] ,X_160:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","x",2,2,4);
    (X_162:bat[:oid,:oid] ,X_163:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","x",2,3,4);
    X_38:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","x",1);
    X_40:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","y",0);
    X_164:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","y",0,0,4);
    X_165:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","y",0,1,4);
    X_166:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","y",0,2,4);
    X_167:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","y",0,3,4);
    (X_42,r1_54) := sql.bind(X_6,"sys","part2","y",2);
    (X_168:bat[:oid,:oid] ,X_169:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","y",2,0,4);
    (X_170:bat[:oid,:oid] ,X_171:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","y",2,1,4);
    (X_172:bat[:oid,:oid] ,X_173:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","y",2,2,4);
    (X_174:bat[:oid,:oid] ,X_175:bat[:oid,:dbl] ) := sql.bind(X_6,"sys","part2","y",2,3,4);
    X_45:bat[:oid,:dbl]  := sql.bind(X_6,"sys","part2","y",1);
    X_257 := mat.packIncrement(X_164,4);
    X_259 := mat.packIncrement(X_257,X_165);
    X_260 := mat.packIncrement(X_259,X_166);
    language.pass(nil:bat[:oid,:oid]);
    language.pass(X_10);
    language.pass(nil:bat[:oid,:oid]);
    language.pass(X_26);
    language.pass(X_128);
    language.pass(X_130);
    language.pass(X_132);
    language.pass(X_134);
    language.pass(X_13);
    language.pass(X_16);
    language.pass(X_19);
exit X_333;
barrier X_347 := language.dataflow();
    X_40:bat[:oid,:dbl]  := mat.packIncrement(X_260,X_167);
    X_110 := algebra.subselect(X_40,X_32,A2,A3,true,true,false);
    X_217 := algebra.subselect(X_169,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_218 := algebra.subselect(X_171,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_219 := algebra.subselect(X_173,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_220 := algebra.subselect(X_175,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_113 := algebra.subselect(X_45,X_32,A2,A3,true,true,false);
    X_262 := mat.packIncrement(X_168,4);
    X_263 := mat.packIncrement(X_262,X_170);
    X_264 := mat.packIncrement(X_263,X_172);
    X_42 := mat.packIncrement(X_264,X_174);
    X_266 := mat.packIncrement(X_217,4);
    X_267 := mat.packIncrement(X_266,X_218);
    X_268 := mat.packIncrement(X_267,X_219);
    X_111 := mat.packIncrement(X_268,X_220);
    X_47 := sql.subdelta(X_110,X_32,X_42,X_111,X_113);
    X_270 := mat.packIncrement(X_147,4);
    X_271 := mat.packIncrement(X_270,X_148);
    X_272 := mat.packIncrement(X_271,X_149);
    X_34:bat[:oid,:dbl]  := mat.packIncrement(X_272,X_150);
    X_114 := algebra.subselect(X_34,X_47,A0,A1,true,true,false);
    X_221 := algebra.subselect(X_154,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_222 := algebra.subselect(X_157,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_223 := algebra.subselect(X_160,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_224 := algebra.subselect(X_163,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_117 := algebra.subselect(X_38,X_47,A0,A1,true,true,false);
    X_274 := mat.packIncrement(X_153,4);
    X_275 := mat.packIncrement(X_274,X_156);
    X_276 := mat.packIncrement(X_275,X_159);
    X_35 := mat.packIncrement(X_276,X_162);
    X_278 := mat.packIncrement(X_221,4);
    X_279 := mat.packIncrement(X_278,X_222);
    X_280 := mat.packIncrement(X_279,X_223);
    X_115 := mat.packIncrement(X_280,X_224);
    X_48 := sql.subdelta(X_114,X_47,X_35,X_115,X_117);
    X_282 := mat.packIncrement(X_154,4);
    X_283 := mat.packIncrement(X_282,X_157);
    X_284 := mat.packIncrement(X_283,X_160);
    r1_43 := mat.packIncrement(X_284,X_163);
    X_49 := sql.projectdelta(X_48,X_34,X_35,r1_43,X_38);
    X_50 := bat.append(X_30,X_49,true);
    language.pass(nil:bat[:oid,:oid]);
    language.pass(X_32);
    language.pass(nil:bat[:oid,:oid]);
    language.pass(X_47);
    language.pass(X_154);
    language.pass(X_157);
    language.pass(X_160);
    language.pass(X_163);
    language.pass(X_34);
    language.pass(X_35);
    language.pass(X_38);
exit X_347;
    X_51 := sql.append(X_6,"sys","answ","x",X_50);
barrier X_350 := language.dataflow();
    X_53:bat[:oid,:dbl]  := bat.new(nil:oid,nil:dbl);
    X_286 := mat.packIncrement(X_140,4);
    X_287 := mat.packIncrement(X_286,X_142);
    X_288 := mat.packIncrement(X_287,X_144);
    r1_27 := mat.packIncrement(X_288,X_146);
    X_56 := sql.projectdelta(X_28,X_21,X_23,r1_27,X_25);
    X_57 := bat.append(X_53,X_56,true);
    X_290 := mat.packIncrement(X_169,4);
    X_292 := mat.packIncrement(X_290,X_171);
    X_293 := mat.packIncrement(X_292,X_173);
    r1_54 := mat.packIncrement(X_293,X_175);
    X_59 := sql.projectdelta(X_48,X_40,X_42,r1_54,X_45);
    X_60 := bat.append(X_57,X_59,true);
exit X_350;
    X_61 := sql.append(X_51,"sys","answ","y",X_60);
barrier X_353 := language.dataflow();
    X_64:bat[:oid,:dbl]  := bat.new(nil:oid,nil:dbl);
    X_65:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part1","z",0);
    X_176:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part1","z",0,0,4);
    X_177:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part1","z",0,1,4);
    X_178:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part1","z",0,2,4);
    X_179:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part1","z",0,3,4);
    (X_69,r1_87) := sql.bind(X_61,"sys","part1","z",2);
    (X_180:bat[:oid,:oid] ,X_181:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part1","z",2,0,4);
    (X_182:bat[:oid,:oid] ,X_183:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part1","z",2,1,4);
    (X_184:bat[:oid,:oid] ,X_185:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part1","z",2,2,4);
    (X_187:bat[:oid,:oid] ,X_188:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part1","z",2,3,4);
    X_72:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part1","z",1);
    X_295 := mat.packIncrement(X_176,4);
    X_296 := mat.packIncrement(X_295,X_177);
    X_297 := mat.packIncrement(X_296,X_178);
exit X_353;
barrier X_356 := language.dataflow();
    X_65:bat[:oid,:dbl]  := mat.packIncrement(X_297,X_179);
    X_299 := mat.packIncrement(X_180,4);
    X_300 := mat.packIncrement(X_299,X_182);
    X_301 := mat.packIncrement(X_300,X_184);
    X_69 := mat.packIncrement(X_301,X_187);
    X_303 := mat.packIncrement(X_181,4);
    X_304 := mat.packIncrement(X_303,X_183);
    X_305 := mat.packIncrement(X_304,X_185);
    r1_87 := mat.packIncrement(X_305,X_188);
    X_74 := sql.projectdelta(X_28,X_65,X_69,r1_87,X_72);
    X_75 := bat.append(X_64,X_74,true);
    X_76:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part2","z",0);
    X_190:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part2","z",0,0,4);
    X_192:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part2","z",0,1,4);
    X_194:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part2","z",0,2,4);
    X_196:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part2","z",0,3,4);
    (X_78,r1_98) := sql.bind(X_61,"sys","part2","z",2);
    (X_197:bat[:oid,:oid] ,X_198:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part2","z",2,0,4);
    (X_199:bat[:oid,:oid] ,X_200:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part2","z",2,1,4);
    (X_201:bat[:oid,:oid] ,X_202:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part2","z",2,2,4);
    (X_203:bat[:oid,:oid] ,X_204:bat[:oid,:dbl] ) := sql.bind(X_61,"sys","part2","z",2,3,4);
    X_80:bat[:oid,:dbl]  := sql.bind(X_61,"sys","part2","z",1);
    X_307 := mat.packIncrement(X_190,4);
    X_308 := mat.packIncrement(X_307,X_192);
    X_309 := mat.packIncrement(X_308,X_194);
exit X_356;
barrier X_359 := language.dataflow();
    X_76:bat[:oid,:dbl]  := mat.packIncrement(X_309,X_196);
    X_311 := mat.packIncrement(X_197,4);
    X_312 := mat.packIncrement(X_311,X_199);
    X_313 := mat.packIncrement(X_312,X_201);
    X_78 := mat.packIncrement(X_313,X_203);
    X_315 := mat.packIncrement(X_198,4);
    X_316 := mat.packIncrement(X_315,X_200);
    X_317 := mat.packIncrement(X_316,X_202);
    r1_98 := mat.packIncrement(X_317,X_204);
    X_81 := sql.projectdelta(X_48,X_76,X_78,r1_98,X_80);
    X_82 := bat.append(X_75,X_81,true);
exit X_359;
    X_83 := sql.append(X_61,"sys","answ","z",X_82);
    X_85 := aggr.count(X_82);
    sql.affectedRows(X_83,X_85,"");
end user.s14_1;
#INSERT INTO answ
#SELECT * FROM complete
#WHERE x BETWEEN 0 AND 2 AND Y BETWEEN 0 AND 2;
[ 6	]
#DROP TABLE complete;
#DROP TABLE part1;
#DROP TABLE part2;

# 16:20:24 >  
# 16:20:24 >  "Done."
# 16:20:24 >  

