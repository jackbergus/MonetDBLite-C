stdout of test 'upgrade` in directory 'sql/test/emptydb-upgrade` itself:


# 16:53:30 >  
# 16:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39660" "--set" "mapi_usock=/var/tmp/mtest-30908/.s.monetdb.39660" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-stable/var/MonetDB/mTests_sql_test_emptydb-upgrade" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 16:53:30 >  

# MonetDB 5 server v11.21.16 (hg id: c20b591c1c70+)
# This is an unreleased version
# Serving database 'mTests_sql_test_emptydb-upgrade', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.da.cwi.nl:39660/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-30908/.s.monetdb.39660
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.3'
# Finished reading the write-ahead log 'sql_logs/sql/log.3'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
Running database upgrade commands:
GRANT SELECT ON sys.keywords TO PUBLIC;
GRANT SELECT ON sys.table_types TO PUBLIC;
GRANT SELECT ON sys.dependency_types TO PUBLIC;
GRANT SELECT ON sys.function_types TO PUBLIC;
GRANT SELECT ON sys.function_languages TO PUBLIC;
GRANT SELECT ON sys.key_types TO PUBLIC;
GRANT SELECT ON sys.index_types TO PUBLIC;
GRANT SELECT ON sys.privilege_codes TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.environment() TO PUBLIC;
GRANT SELECT ON sys.environment TO PUBLIC;

Running database upgrade commands:
set schema "sys";
create procedure master()
external name wlc.master;
create procedure master(path string)
external name wlc.master;
create procedure stopmaster()
external name wlc.stopmaster;
create procedure masterbeat( duration int)
external name wlc."setmasterbeat";
create function masterClock() returns string
external name wlc."getmasterclock";
create function masterTick() returns bigint
external name wlc."getmastertick";
create procedure replicate()
external name wlr.replicate;
create procedure replicate(pointintime timestamp)
external name wlr.replicate;
create procedure replicate(dbname string)
external name wlr.replicate;
create procedure replicate(dbname string, pointintime timestamp)
external name wlr.replicate;
create procedure replicate(dbname string, id tinyint)
external name wlr.replicate;
create procedure replicate(dbname string, id smallint)
external name wlr.replicate;
create procedure replicate(dbname string, id integer)
external name wlr.replicate;
create procedure replicate(dbname string, id bigint)
external name wlr.replicate;
create procedure replicabeat(duration integer)
external name wlr."setreplicabeat";
create function replicaClock() returns string
external name wlr."getreplicaclock";
create function replicaTick() returns bigint
external name wlr."getreplicatick";
insert into sys.systemfunctions (select id from sys.functions where name in ('master', 'stopmaster', 'masterbeat', 'masterclock', 'mastertick', 'replicate', 'replicabeat', 'replicaclock', 'replicatick') and schema_id = (select id from sys.schemas where name = 'sys') and id not in (select function_id from sys.systemfunctions));
delete from sys.systemfunctions where function_id not in (select id from sys.functions);
set schema "sys";


# 14:06:25 >  
# 14:06:25 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-32766" "--port=33975"
# 14:06:25 >  

#select 1;
% .L2 # table_name
% L2 # name
% tinyint # type
% 1 # length
[ 1	]

# 16:53:31 >  
# 16:53:31 >  "Done."
# 16:53:31 >  

