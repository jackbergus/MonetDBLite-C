stdout of test 'jdbc_no_debug.SF-1739356` in directory 'sql/test/BugTracker` itself:


# 13:44:44 >  
# 13:44:44 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=36629 --set xrpc_port=45999 --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 13:44:44 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test_BugTracker', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:36629/
# MonetDB/SQL module v2.30.0 loaded

Ready.




+--------------------------------------------------------------------+
| rel                                                                                                                                                                                                                                                                       |
+====================================================================+
| project (                                                                                                                                                                                                                                                                 |
| | group by (                                                                                                                                                                                                                                                              |
| | | union (                                                                                                      |
| | | | group by (                                                                                                 |
| | | | | project (                                                                                                                                                                                                                                                         |
| | | | | | select (                                                                                                                                                                                                                                                        |
| | | | | | | table(sys._tables) [ _tables.id, _tables.type ] COUNT  |
| | | | | | ) [ _tables.type != smallint "2" ]                       |
| | | | | ) [ _tables.id as tables.id ]                              |
| | | | ) [  ] [ sys.count() NOT NULL as L3.L3 ],                                      |
| | | | group by (                                                                                                 |
| | | | | project (                                                                                                                                                                                                                                                         |
| | | | | | table(tmp._tables) [ _tables.id ] COUNT                  |
| | | | | ) [ _tables.id as tables.id ]                              |
| | | | ) [  ] [ sys.count() NOT NULL as L3.L3 ]                                       |
| | | ) [ L3.L3 ]                                                                      |
| | ) [  ] [ sys.sum no nil (L3.L3) as L3.L3 ]                                         |
| ) [ L3 NOT NULL as L3.L3 ]                                                           |
+--------------------------------------------------------------------+
18 rows

Operation successful

+--------------------------------------------------------------------------------------------------+
| mal                                                                 |
+==================================================================================================+
| function user.s3_1{autoCommit=true}():void;                              |
|     X_43:void := querylog.define("explain select count(*) from tables\n;","sequential_pipe",27); |
|     X_3:bat[:oid,:wrd]  := bat.new(nil:oid,nil:wrd);                |
|     X_2 := sql.mvc();                                               |
|     X_9:bat[:oid,:sht]  := sql.bind(X_2,"sys","_tables","type",0);          |
|     X_6:bat[:oid,:oid]  := sql.tid(X_2,"sys","_tables");    |
|     X_57 := algebra.subselect(X_9,X_6,2,2,true,true,true);                                       |
|     (X_12,r1_12) := sql.bind(X_2,"sys","_tables","type",2); |
|     X_58 := algebra.subselect(r1_12,nil:bat[:oid,:oid],2,2,true,true,true);                      |
|     X_15:bat[:oid,:sht]  := sql.bind(X_2,"sys","_tables","type",1);                 |
|     X_60 := algebra.subselect(X_15,X_6,2,2,true,true,true);                                      |
|     X_18 := sql.subdelta(X_57,X_6,X_12,X_58,X_60);                                               |
|     X_19:bat[:oid,:int] := sql.bind(X_2,"sys","_tables","id",0);                                 |
|     (X_21,r1_24) := sql.bind(X_2,"sys","_tables","id",2);                                        |
|     X_23:bat[:oid,:int] := sql.bind(X_2,"sys","_tables","id",1);                                 |
|     X_24 := sql.projectdelta(X_18,X_19,X_21,r1_24,X_23);                                         |
|     X_25 := aggr.count(X_24);                                                                    |
|     X_26 := sql.single(X_25);                                                                    |
|     X_27 := bat.append(X_3,X_26,true);                                                           |
|     X_28:bat[:oid,:oid]  := sql.tid(X_2,"tmp","_tables");            |
|     X_30:bat[:oid,:int] := sql.bind(X_2,"tmp","_tables","id",0);                                 |
|     X_31 := algebra.leftfetchjoin(X_28,X_30);                                                    |
|     X_32 := aggr.count(X_31);                                                                    |
|     X_33 := bat.append(X_27,X_32,true);                                                          |
|     X_35:wrd := aggr.sum(X_33);                                                                  |
|     sql.resultSet(".L3","L3","wrd",64,0,7,X_35);                                                 |
| end user.s3_1;                                                                                 |
+--------------------------------------------------------------------------------------------------+
27 rows


# 19:39:11 >  
# 19:39:11 >  "Done."
# 19:39:11 >  

