stdout of test 'jdbc_no_debug.SF-1739356` in directory 'sql/test/BugTracker` itself:


# 13:44:44 >  
# 13:44:44 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=36629 --set xrpc_port=45999 --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 13:44:44 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test_BugTracker', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:36629/
# MonetDB/SQL module v2.30.0 loaded

Ready.




+--------------------------------------------------------------------+
| rel                                                                                                                                                                                                                                                                       |
+====================================================================+
| project (                                                                                                                                                                                                                                                                 |
| | group by (                                                                                                                                                                                                                                                              |
| | | union (                                                                                                      |
| | | | group by (                                                                                                 |
| | | | | project (                                                                                                                                                                                                                                                         |
| | | | | | select (                                                                                                                                                                                                                                                        |
| | | | | | | table(sys._tables) [ _tables.id, _tables.type ] COUNT  |
| | | | | | ) [ _tables.type != smallint "2" ]                       |
| | | | | ) [ _tables.id as tables.id ]                              |
| | | | ) [  ] [ sys.count() NOT NULL as L3.L3 ],                                      |
| | | | group by (                                                                                                 |
| | | | | project (                                                                                                                                                                                                                                                         |
| | | | | | table(tmp._tables) [ _tables.id ] COUNT                  |
| | | | | ) [ _tables.id as tables.id ]                              |
| | | | ) [  ] [ sys.count() NOT NULL as L3.L3 ]                                       |
| | | ) [ L3.L3 ]                                                                      |
| | ) [  ] [ sys.sum no nil (L3.L3) as L3.L3 ]                                         |
| ) [ L3 NOT NULL as L3.L3 ]                                                           |
+--------------------------------------------------------------------+
18 rows

Operation successful

+--------------------------------------------------------------------------------------------------+
| mal                                                                 |
+==================================================================================================+
| function user.s4_1():void;                                                                       |
|     X_37:void := querylog.define("explain select count(*) from tables\n;","sequential_pipe",25); |
|     X_2:bat[:lng] := bat.new(nil:lng);                                                           |
|     X_1 := sql.mvc();                                                                            |
|     X_7:bat[:sht] := sql.bind(X_1,"sys","_tables","type",0);                                     |
|     C_4:bat[:oid] := sql.tid(X_1,"sys","_tables");                                               |
|     C_54 := algebra.subselect(X_7,C_4,2,2,true,true,true);                                       |
|     (C_10,r1_10) := sql.bind(X_1,"sys","_tables","type",2);                                      |
|     C_55 := algebra.subselect(r1_10,nil:bat[:oid],2,2,true,true,true);                           |
|     X_13:bat[:sht] := sql.bind(X_1,"sys","_tables","type",1);                                    |
|     C_57 := algebra.subselect(X_13,C_4,2,2,true,true,true);                                      |
|     C_16 := sql.subdelta(C_54,C_4,C_10,C_55,C_57);                                               |
|     X_18:bat[:int] := sql.bind(X_1,"sys","_tables","id",0);                                      |
|     (C_20,r1_24) := sql.bind(X_1,"sys","_tables","id",2);                                        |
|     X_22:bat[:int] := sql.bind(X_1,"sys","_tables","id",1);                                      |
|     X_23 := sql.projectdelta(C_16,X_18,C_20,r1_24,X_22);                                         |
|     X_24 := aggr.count(X_23);                                                                    |
|     X_25 := sql.single(X_24);                                                                    |
|     X_26 := bat.append(X_2,X_25,true);                                                           |
|     X_27 := bat.new(nil:int);                                                                    |
|     X_28 := aggr.count(X_27);                                                                    |
|     X_29 := bat.append(X_26,X_28,true);                                                          |
|     X_30:lng := aggr.sum(X_29);                                                                  |
|     sql.resultSet(".L3","L3","bigint",64,0,7,X_30);                                              |
| end user.s4_1;                                                                                   |
| #inline               actions= 0 time=1 usec                                                     |
| #remap                actions= 0 time=3 usec                                                     |
| #costmodel            actions= 1 time=2 usec                                                     |
| #coercion             actions= 1 time=7 usec                                                     |
| #evaluate             actions= 0 time=3 usec                                                     |
| #emptycolumn          actions= 1 time=11 usec                                                    |
| #pushselect           actions= 4 time=39 usec                                                    |
| #aliases              actions= 2 time=9 usec                                                     |
| #mergetable           actions= 0 time=31 usec                                                    |
| #deadcode             actions= 4 time=7 usec                                                     |
| #aliases              actions= 0 time=5 usec                                                     |
| #constants            actions= 3 time=7 usec                                                     |
| #commonTerms          actions= 0 time=5 usec                                                     |
| #projectionpath       actions= 0 time=3 usec                                                     |
| #reorder              actions= 1 time=22 usec                                                    |
| #deadcode             actions= 0 time=5 usec                                                     |
| #reduce               actions=30 time=22 usec                                                    |
| #matpack              actions= 0 time=3 usec                                                     |
| #multiplex            actions= 0 time=3 usec                                                     |
| #profiler             actions= 1 time=4 usec                                                     |
| #candidates           actions= 1 time=1 usec                                                     |
| #garbagecollector     actions= 1 time=15 usec                                                    |
| #total                actions= 1 time=300 usec                                                   |
+--------------------------------------------------------------------------------------------------+
48 rows


# 19:39:11 >  
# 19:39:11 >  "Done."
# 19:39:11 >  

