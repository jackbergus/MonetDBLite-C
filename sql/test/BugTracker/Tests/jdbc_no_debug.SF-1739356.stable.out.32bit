stdout of test 'jdbc_no_debug.SF-1739356` in directory 'sql/test/BugTracker` itself:


# 13:44:44 >  
# 13:44:44 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=36629 --set xrpc_port=45999 --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 13:44:44 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test_BugTracker', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:36629/
# MonetDB/SQL module v2.30.0 loaded

Ready.




+--------------------------------------------------------------------+
| rel                                                                                                                                                                                                                                                                       |
+====================================================================+
| project (                                                                                                                                                                                                                                                                 |
| | group by (                                                                                                                                                                                                                                                              |
| | | union (                                                                                                      |
| | | | group by (                                                                                                 |
| | | | | project (                                                                                                                                                                                                                                                         |
| | | | | | select (                                                                                                                                                                                                                                                        |
| | | | | | | table(sys._tables) [ _tables.id, _tables.type ] COUNT  |
| | | | | | ) [ _tables.type != smallint "2" ]                       |
| | | | | ) [ _tables.id as tables.id ]                              |
| | | | ) [  ] [ sys.count() NOT NULL as L40.L40 ],                  |
| | | | group by (                                                                                                 |
| | | | | project (                                                                                                                                                                                                                                                         |
| | | | | | table(tmp._tables) [ _tables.id ] COUNT                  |
| | | | | ) [ _tables.id as tables.id ]                              |
| | | | ) [  ] [ sys.count() NOT NULL as L40.L40 ]                   |
| | | ) [ L40.L40 ]                                                  |
| | ) [  ] [ sys.sum no nil (L40.L40) as L40.L40 ]                   |
| ) [ L40 NOT NULL as L41.L40 ]                                      |
+--------------------------------------------------------------------+
18 rows
Operation successful
+-------------------------------------------------------------------------------------------------------+
| mal                                                                                              |
+=======================================================================================================+
| function user.s4_1():void;                                                                            |
|     X_1:void := querylog.define("explain select count(*) from tables\n;", "sequential_pipe", 30:int); |
|     X_39:bat[:lng] := bat.new(nil:lng);                                                               |
|     X_4 := sql.mvc();                                                                                 |
|     X_18:bat[:sht] := sql.bind(X_4, "sys", "_tables", "type", 0:int);                                 |
|     C_5:bat[:oid] := sql.tid(X_4, "sys", "_tables");                                                  |
|     C_83 := algebra.select(X_18, C_5, 2:sht, 2:sht, true, true, true);                                |
|     (C_21:bat[:oid], X_22:bat[:sht]) := sql.bind(X_4, "sys", "_tables", "type", 2:int);               |
|     C_84 := algebra.select(X_22, nil:bat[:oid], 2:sht, 2:sht, true, true, true);                      |
|     X_20:bat[:sht] := sql.bind(X_4, "sys", "_tables", "type", 1:int);                                 |
|     C_86 := algebra.select(X_20, C_5, 2:sht, 2:sht, true, true, true);                                |
|     C_27 := sql.subdelta(C_83, C_5, C_21, C_84, C_86);                                                |
|     X_8:bat[:int] := sql.bind(X_4, "sys", "_tables", "id", 0:int);                                    |
|     (C_13:bat[:oid], X_14:bat[:int]) := sql.bind(X_4, "sys", "_tables", "id", 2:int);                 |
|     X_11:bat[:int] := sql.bind(X_4, "sys", "_tables", "id", 1:int);                                   |
|     X_30 := sql.projectdelta(C_27, X_8, C_13, X_14, X_11);                                            |
|     X_32 := aggr.count(X_30);                                                                         |
|     X_38 := sql.single(X_32);                                                                         |
|     X_41 := bat.append(X_39, X_38, true);                                                             |
|     C_33:bat[:oid] := sql.tid(X_4, "tmp", "_tables");                                                 |
|     X_35:bat[:int] := sql.bind(X_4, "tmp", "_tables", "id", 0:int);                                   |
|     X_36 := algebra.projection(C_33, X_35);                                                           |
|     X_37 := aggr.count(X_36);                                                                         |
|     X_42 := bat.append(X_41, X_37, true);                                                             |
|     X_43:lng := aggr.sum(X_42);                                                                       |
|     sql.resultSet(".L41", "L40", "bigint", 64:int, 0:int, 7:int, X_43);                               |
| end user.s4_1;                                                                                        |
| #inline               actions= 0 time=1 usec                                                     |
| #remap                actions= 0 time=3 usec                                                          |
| #costmodel            actions= 1 time=2 usec                                                          |
| #coercion             actions= 1 time=6 usec                                                          |
| #evaluate             actions= 0 time=3 usec                                                     |
| #emptybind            actions= 0 time=0 usec                                                          |
| #pushselect           actions= 5 time=28 usec                                                         |
| #aliases              actions= 2 time=8 usec                                                          |
| #mergetable           actions= 0 time=29 usec                                                         |
| #deadcode             actions= 3 time=6 usec                                                          |
| #aliases              actions= 0 time=0 usec                                                          |
| #constants            actions= 2 time=5 usec                                                          |
| #commonTerms          actions= 0 time=6 usec                                                          |
| #projectionpath       actions= 0 time=4 usec                                                          |
| #reorder              actions= 1 time=22 usec                                                         |
| #deadcode             actions= 0 time=6 usec                                                          |
| #matpack              actions= 0 time=0 usec                                                          |
| #multiplex            actions= 0 time=2 usec                                                     |
| #profiler             actions= 1 time=1 usec                                                          |
| #candidates           actions= 1 time=1 usec                                                     |
| #garbagecollector     actions= 1 time=15 usec                                                         |
| #total                actions=23 time=271 usec                                                        |
+-------------------------------------------------------------------------------------------------------+
49 rows

# 11:43:04 >  
# 11:43:04 >  "Done."
# 11:43:04 >  

