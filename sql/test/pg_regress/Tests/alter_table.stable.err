stderr of test 'alter_table` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# builtin opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 38959
# cmdline opt 	mapi_usock = /var/tmp/mtest-1142/.s.monetdb.38959
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress
# cmdline opt 	mal_listing = 0
# cmdline opt 	gdk_debug = 536870922

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

#--
#-- ALTER_TABLE
#-- add attribute
#--
#--ALTER TABLE tmp ADD COLUMN o lock;
#-- the wolf bug - schema mods caused inconsistent row descriptors 
#--ALTER TABLE tmp ADD COLUMN o lock;
#--
#-- rename - check on both non-temp and temp tables
#--
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = SELECT * FROM tmp;		-- should fail
ERROR = relation "tmp" does not exist
#-- ALTER TABLE ... RENAME on non-table relations
#-- renaming indexes (FIXME: this should probably test the index's functionality)
#-- renaming views
#-- analyze to ensure we get an indexscan here
#-- 5 values, sorted 
#-- toast-like relation string
#-- FOREIGN KEY CONSTRAINT adding TEST
#-- Insert rows into tmp2 (pktable)
#-- Insert rows into tmp3
#-- Try (and fail) to add constraint due to invalid source columns
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE tmp3 add constraint tmpconstr foreign key(c) references tmp2 match full;
ERROR = column "c" referenced in foreign key constraint does not exist
#-- Try (and fail) to add constraint due to invalide destination columns explicitly given
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE tmp3 add constraint tmpconstr foreign key(a) references tmp2(b) match full;
ERROR = column "b" referenced in foreign key constraint does not exist
#-- Try (and fail) to add constraint due to invalid data
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE tmp3 add constraint tmpconstr foreign key (a) references tmp2 match full;
ERROR = insert or update on table "tmp3" violates foreign key constraint "tmpconstr"
DETAIL:  Key (a)=(5) is not present in table "tmp2".
#-- Delete failing row
#-- Try (and succeed)
#-- Try (and fail) to create constraint from tmp5(a) to tmp4(a) - unique constraint on
#-- tmp4 is a,b
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE tmp5 add constraint tmpconstr foreign key(a) references tmp4(a) match full;
ERROR = there is no unique constraint matching given keys for referenced table "tmp4"
#-- Foreign key adding test with mixed types
#-- Note: these tables are TEMP to avoid name conflicts when this test
#-- is run in parallel with foreign_key.sql.
#-- This next should fail, because inet=int does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
ERROR = foreign key constraint "fktable_ftest1_fkey" cannot be implemented
DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: inet and integer.
#-- This should also fail for the same reason, but here we
#-- give the column string
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable(ptest1);
ERROR = foreign key constraint "fktable_ftest1_fkey" cannot be implemented
DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: inet and integer.
#-- This should succeed, even though they are different types
#-- because varchar=int does exist
#-- As should this
#-- This should fail, because we just chose really odd types
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2) references pktable;
ERROR = foreign key constraint "fktable_ftest1_fkey" cannot be implemented
DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: cidr and integer.
#-- Again, so should this...
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
     references pktable(ptest1, ptest2);
ERROR = foreign key constraint "fktable_ftest1_fkey" cannot be implemented
DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: cidr and integer.
#-- This fails because we mixed up the column ordering
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
     references pktable(ptest2, ptest1);
ERROR = foreign key constraint "fktable_ftest1_fkey" cannot be implemented
DETAIL:  Key columns "ftest1" and "ptest2" are of incompatible types: integer and inet.
#-- As does this...
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest2, ftest1)
     references pktable(ptest1, ptest2);
ERROR = foreign key constraint "fktable_ftest2_fkey" cannot be implemented
DETAIL:  Key columns "ftest2" and "ptest1" are of incompatible types: inet and integer.
#-- temp tables should go away by themselves, need not drop them.
#-- test check constraint adding
#-- add a check constraint
#-- should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test) values (2);
ERROR = new row for relation "atacc1" violates check constraint "atacc_test1"
#-- should succeed
#-- let's do one where the check fails when added
#-- insert a soon to be failing row
#-- add a check constraint (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 check (test>3);
ERROR = check constraint "atacc_test1" is violated by some row
#-- let's do one where the check fails because the column doesn't exist
#-- add a check constraint (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 check (test1>3);
ERROR = column "test1" does not exist
#-- something a little more complicated
#-- add a check constraint (fails)
#-- should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test,test2,test3) values (4,4,2);
ERROR = new row for relation "atacc1" violates check constraint "atacc_test1"
#-- should succeed
#-- lets do some naming tests
#-- should fail for $2
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test2, test) values (3, 4);
ERROR = new row for relation "atacc1" violates check constraint "atacc1_check"
#-- inheritance related tests
#-- fail and then succeed on atacc2
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc2 (test2) values (-3);
ERROR = new row for relation "atacc2" violates check constraint "foo"
#-- fail and then succeed on atacc3
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc3 (test2) values (-3);
ERROR = new row for relation "atacc3" violates check constraint "foo"
#-- let's try only to add only to the parent
#-- fail and then succeed on atacc2
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc2 (test2) values (-3);
ERROR = new row for relation "atacc2" violates check constraint "foo"
#-- both succeed on atacc3
#-- test unique constraint adding
#-- add a unique constraint
#-- insert first value
#-- should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test) values (2);
ERROR = duplicate key violates unique constraint "atacc_test1"
#-- should succeed
#-- try adding a unique oid constraint
#-- let's do one where the unique constraint fails when added
#-- insert soon to be failing rows
#-- add a unique constraint (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 unique (test);
NOTICE:  ALTER TABLE / ADD UNIQUE will create implicit index "atacc_test1" for table "atacc1"
ERROR = could not create unique index
DETAIL:  Table contains duplicated values.
#-- let's do one where the unique constraint fails
#-- because the column doesn't exist
#-- add a unique constraint (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 unique (test1);
ERROR = column "test1" named in key does not exist
#-- something a little more complicated
#-- add a unique constraint
#-- insert initial value
#-- should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test,test2) values (4,4);
ERROR = duplicate key violates unique constraint "atacc_test1"
#-- should all succeed
#-- lets do some naming tests
#-- should fail for @@ second one @@
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test2, test) values (2, 3);
ERROR = duplicate key violates unique constraint "atacc1_test_key"
#-- test primary key constraint adding
#-- add a primary key constraint
#-- insert first value
#-- should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test) values (2);
ERROR = duplicate key violates unique constraint "atacc_test1"
#-- should succeed
#-- inserting NULL should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test) values(NULL);
ERROR = null value in column "test" violates not-null constraint
#-- try adding a second primary key (should fail)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_oid1 primary key(oid);
ERROR = multiple primary keys for table "atacc1" are not allowed
#-- drop first primary key constraint
#-- try adding a primary key on oid (should succeed)
#-- let's do one where the primary key constraint fails when added
#-- insert soon to be failing rows
#-- add a primary key (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 primary key (test);
NOTICE:  ALTER TABLE / ADD PRIMARY KEY will create implicit index "atacc_test1" for table "atacc1"
ERROR = could not create unique index
DETAIL:  Table contains duplicated values.
#-- let's do another one where the primary key constraint fails when added
#-- insert soon to be failing row
#-- add a primary key (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 primary key (test);
ERROR = column "test" contains null values
#-- let's do one where the primary key constraint fails
#-- because the column doesn't exist
#-- add a primary key constraint (fails)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test1 primary key (test1);
ERROR = column "test1" named in key does not exist
#-- something a little more complicated
#-- add a primary key constraint
#-- try adding a second primary key - should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add constraint atacc_test2 primary key (test);
ERROR = multiple primary keys for table "atacc1" are not allowed
#-- insert initial value
#-- should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test,test2) values (4,4);
ERROR = duplicate key violates unique constraint "atacc_test1"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test,test2) values (NULL,3);
ERROR = null value in column "test" violates not-null constraint
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test,test2) values (3, NULL);
ERROR = null value in column "test2" violates not-null constraint
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test,test2) values (NULL,NULL);
ERROR = null value in column "test" violates not-null constraint
#-- should all succeed
#-- lets do some naming tests
#-- only first should succeed
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test2, test) values (2, 3);
ERROR = duplicate key violates unique constraint "atacc1_pkey"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (test2, test) values (1, NULL);
ERROR = null value in column "test" violates not-null constraint
#-- alter table / alter column [set/drop] not null tests
#-- try altering system catalogs, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table pg_class alter column relname drop not null;
ERROR = permission denied: "pg_class" is a system catalog
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table pg_class alter relname set not null;
ERROR = permission denied: "pg_class" is a system catalog
#-- try altering non-existent table, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table non_existent alter column bar set not null;
ERROR = relation "non_existent" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table non_existent alter column bar drop not null;
ERROR = relation "non_existent" does not exist
#-- test setting columns to null and not null and vice versa
#-- test checking for null values and primary key
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter column test drop not null;
ERROR = column "test" is in a primary key
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter test set not null;
ERROR = column "test" contains null values
#-- try altering a non-existent column, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter bar set not null;
ERROR = column "bar" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter bar drop not null;
ERROR = column "bar" of relation "atacc1" does not exist
#-- try altering the oid column, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter oid set not null;
ERROR = cannot alter system column "oid"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter oid drop not null;
ERROR = cannot alter system column "oid"
#-- try creating a view and altering that, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table myview alter column test drop not null;
ERROR = "myview" is not a table
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table myview alter column test set not null;
ERROR = "myview" is not a table
#-- test inheritance
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into parent values (NULL);
ERROR = null value in column "a" violates not-null constraint
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into child (a, b) values (NULL, 'foo');
ERROR = null value in column "a" violates not-null constraint
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table only parent alter a set not null;
ERROR = column "a" contains null values
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table child alter a set not null;
ERROR = column "a" contains null values
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into parent values (NULL);
ERROR = null value in column "a" violates not-null constraint
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into child (a, b) values (NULL, 'foo');
ERROR = null value in column "a" violates not-null constraint
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into child (a, b) values (NULL, 'foo');
ERROR = null value in column "a" violates not-null constraint
#-- test setting and removing default values
#-- set defaults to an incorrect type: this should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table def_test alter column c1 set default 'wrong_datatype';
ERROR = invalid input syntax for integer: "wrong_datatype"
#-- set defaults on a non-existent column: this should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table def_test alter column c3 set default 30;
ERROR = column "c3" of relation "def_test" does not exist
#-- set defaults on views: we need to create a view, add a rule
#-- to allow insertions into it, and then alter the view to add
#-- a default
#-- alter table / drop column tests
#-- try altering system catalogs, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table pg_class drop column relname;
ERROR = permission denied: "pg_class" is a system catalog
#-- try altering non-existent table, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table nosuchtable drop column bar;
ERROR = relation "nosuchtable" does not exist
#-- test dropping columns
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 drop a;
ERROR = column "a" of relation "atacc1" does not exist
#-- SELECTs
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select * from atacc1 order by a;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select * from atacc1 order by "........pg.dropped.1........";
ERROR = column "........pg.dropped.1........" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select * from atacc1 group by a;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select * from atacc1 group by "........pg.dropped.1........";
ERROR = column "........pg.dropped.1........" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select a from atacc1;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select atacc1.a from atacc1;
ERROR = column atacc1.a does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select a,b,c,d from atacc1;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select * from atacc1 where a = 1;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select "........pg.dropped.1........" from atacc1;
ERROR = column "........pg.dropped.1........" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select atacc1."........pg.dropped.1........" from atacc1;
ERROR = column atacc1.........pg.dropped.1........ does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select "........pg.dropped.1........",b,c,d from atacc1;
ERROR = column "........pg.dropped.1........" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select * from atacc1 where "........pg.dropped.1........" = 1;
ERROR = column "........pg.dropped.1........" does not exist
#-- UPDATEs
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = update atacc1 set a = 3;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = update atacc1 set b = 2 where a = 3;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = update atacc1 set "........pg.dropped.1........" = 3;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = update atacc1 set b = 2 where "........pg.dropped.1........" = 3;
ERROR = column "........pg.dropped.1........" does not exist
#-- INSERTs
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 values (10, 11, 12, 13);
ERROR = INSERT has more expressions than target columns
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 values (default, 11, 12, 13);
ERROR = INSERT has more expressions than target columns
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (a) values (10);
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (a) values (default);
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (a,b,c,d) values (10,11,12,13);
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 (a,b,c,d) values (default,11,12,13);
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 ("........pg.dropped.1........") values (10);
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 ("........pg.dropped.1........") values (default);
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 ("........pg.dropped.1........",b,c,d) values (10,11,12,13);
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into atacc1 ("........pg.dropped.1........",b,c,d) values (default,11,12,13);
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
#-- DELETEs
#-- try dropping a non-existent column, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 drop bar;
ERROR = column "bar" of relation "atacc1" does not exist
#-- try dropping the oid column, should succeed
#-- try dropping the xmin column, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 drop xmin;
ERROR = cannot drop system column "xmin"
#-- try creating a view and altering that, should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table myview drop d;
ERROR = "myview" is not a table
#-- test some commands to make sure they fail on the dropped column
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter a set storage plain;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter "........pg.dropped.1........" set storage plain;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter a set statistics 0;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter "........pg.dropped.1........" set statistics 0;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter a set default 3;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter "........pg.dropped.1........" set default 3;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter a drop default;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter "........pg.dropped.1........" drop default;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter a set not null;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter "........pg.dropped.1........" set not null;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter a drop not null;
ERROR = column "a" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 alter "........pg.dropped.1........" drop not null;
ERROR = column "........pg.dropped.1........" of relation "atacc1" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 rename a to x;
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 rename "........pg.dropped.1........" to x;
ERROR = column "........pg.dropped.1........" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add primary key(a);
ERROR = column "a" named in key does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add primary key("........pg.dropped.1........");
ERROR = column "........pg.dropped.1........" named in key does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add unique(a);
ERROR = column "a" named in key does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add unique("........pg.dropped.1........");
ERROR = column "........pg.dropped.1........" named in key does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add check (a > 3);
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add check ("........pg.dropped.1........" > 3);
ERROR = column "........pg.dropped.1........" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add foreign key (a) references atacc2(id);
ERROR = column "a" referenced in foreign key constraint does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc1 add foreign key ("........pg.dropped.1........") references atacc2(id);
ERROR = column "........pg.dropped.1........" referenced in foreign key constraint does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc2 add foreign key (id) references atacc1(a);
ERROR = column "a" referenced in foreign key constraint does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table atacc2 add foreign key (id) references atacc1("........pg.dropped.1........");
ERROR = column "........pg.dropped.1........" referenced in foreign key constraint does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = create index "testing_idx" on atacc1(a);
ERROR = column "a" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = create index "testing_idx" on atacc1("........pg.dropped.1........");
ERROR = column "........pg.dropped.1........" does not exist
#-- test create as and select into
#-- try dropping all columns
#--
#-- test inheritance
#-- test copy in/out
#-- test inheritance
#-- these two should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table dropColumnchild drop column a;
ERROR = cannot drop inherited column "a"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table only dropColumnChild drop column b;
ERROR = cannot drop inherited column "b"
#-- these three should work
#-- these three should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table renameColumnChild rename column a to d;
ERROR = cannot rename inherited column "a"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table only renameColumnChild rename column a to d;
ERROR = inherited column "a" must be renamed in child tables too
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table only renameColumn rename column a to d;
ERROR = inherited column "a" must be renamed in child tables too
#-- these should work
#-- this should work
#-- this should fail
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table only renameColumn add column x int;
ERROR = column must be added to child tables too
#-- Test corner cases in dropping of inherited columns
#-- should be rejected since c1.f1 is inherited
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table c1 drop column f1;
ERROR = cannot drop inherited column "f1"
#-- should work
#-- c1.f1 is still there, but no longer inherited
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select f1 from c1;
ERROR = column "f1" does not exist
#-- should be rejected since c1.f1 is inherited
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table c1 drop column f1;
ERROR = cannot drop inherited column "f1"
#-- c1.f1 is dropped now, since there is no local definition for it
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select f1 from c1;
ERROR = column "f1" does not exist
#-- should be rejected since c1.f1 is inherited
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table c1 drop column f1;
ERROR = cannot drop inherited column "f1"
#-- c1.f1 is NOT dropped, but must now be considered non-inherited
#-- should be rejected since c1.f1 is inherited
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table c1 drop column f1;
ERROR = cannot drop inherited column "f1"
#-- c1.f1 is still there, but no longer inherited
#-- should work
#-- should work. Now c1.name is local and inhcount is 0.
#-- should be rejected since its inherited
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table gc1 drop column name;
ERROR = cannot drop inherited column "name"
#-- should work, and drop gc1.name along
#-- should fail: column does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table gc1 drop column name;
ERROR = column "name" of relation "gc1" does not exist
#-- should work and drop the attribute in all tables
#--
#-- Test the ALTER TABLE WITHOUT OIDS command
#--
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select oid > 0, * from altstartwith; -- fails
ERROR = column "oid" does not exist
#-- Run inheritance tests
#-- Inherits parents oid column
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select oid > 0, * from altwithoid; -- fails
ERROR = column "oid" does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select oid > 0, * from altinhoid; -- fails
ERROR = column "oid" does not exist
#-- test renumbering of child-table columns in inherited operations
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into c1 values(11,'xyz',33,0); -- should fail
ERROR = new row for relation "c1" violates check constraint "c1_a1_check"
#-- test that operations with a dropped column do not try to reference
#-- its datatype
#-- Simple tests for alter table column type
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table foo alter f1 TYPE integer; -- fails
ERROR = column "f1" cannot be cast to type "pg_catalog.integer"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table anothertab alter column atcol1 type boolean; -- fails
ERROR = column "atcol1" cannot be cast to type "pg_catalog.bool"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = insert into anothertab (atcol1, atcol2) values (45, null); -- fails
ERROR = new row for relation "anothertab" violates check constraint "anothertab_chk"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table anothertab alter column atcol1 type boolean
        using case when atcol1 % 2 = 0 then true else false COMMIT; -- fails
ERROR = default for column "atcol1" cannot be cast to type "pg_catalog.bool"
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = alter table anothertab alter column atcol1 type boolean
        using case when atcol1 % 2 = 0 then true else false COMMIT; -- fails
ERROR = operator does not exist: boolean <= integer

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

