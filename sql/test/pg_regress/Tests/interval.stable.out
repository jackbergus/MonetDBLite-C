stdout of test 'interval` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

#SELECT cast('01:00' as interval second) AS "One hour";
% .L # table_name
% One hour # name
% sec_interval # type
% 0 # length
[ 1.000	]
#SELECT cast('+02:00' as interval second) AS "Two hours";
% .L # table_name
% Two hours # name
% sec_interval # type
% 0 # length
[ 2.000	]
#SELECT cast('-08:00' as interval second) AS "Eight hours";
% .L # table_name
% Eight hours # name
% sec_interval # type
% 0 # length
[ -8.000	]
#SELECT cast('-05' as interval second) AS "Five hours";
% .L # table_name
% Five hours # name
% sec_interval # type
% 0 # length
[ -5.000	]
#SELECT cast('-1 +02:03' as interval second) AS "22 hours ago...";
% .L # table_name
% 22 hours ago... # name
% sec_interval # type
% 0 # length
[ -1.000	]
#SELECT cast('-1 days +02:03' as interval second) AS "22 hours ago...";
% .L # table_name
% 22 hours ago... # name
% sec_interval # type
% 0 # length
[ -1.000	]
#SELECT cast('10 years -11 month -12 days +13:14' as interval second) AS "9 years...";
% .L # table_name
% 9 years... # name
% sec_interval # type
% 0 # length
[ 10.000	]
#CREATE TABLE INTERVAL_TBL (f1 interval second);
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 1 minute');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 5 hour');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 10 day');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 34 year');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 3 months');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 14 seconds ago');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('1 day 2 hours 3 minutes 4 seconds');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('6 years');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('5 months');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('5 months 12 hours');
[ 1 ]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('badly formatted interval');
[ 1	]
#INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 30 eons ago');
[ 1	]
#SELECT '' AS ten, INTERVAL_TBL.* FROM INTERVAL_TBL;
% .L,	sys.interval_tbl # table_name
% ten,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	1.000	]
[ "",	6.000	]
[ "",	5.000	]
[ "",	5.000	]
[ "",	0.000	]
[ "",	0.000	]
#SELECT '' AS nine, INTERVAL_TBL.* FROM INTERVAL_TBL
#   WHERE INTERVAL_TBL.f1 <> cast('@ 10 days' as interval second);
% .L,	sys.interval_tbl # table_name
% nine,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	1.000	]
[ "",	6.000	]
[ "",	5.000	]
[ "",	5.000	]
#SELECT '' AS three, INTERVAL_TBL.* FROM INTERVAL_TBL
#   WHERE INTERVAL_TBL.f1 <= cast('@ 5 hours' as interval second);
% .L,	sys.interval_tbl # table_name
% three,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
#SELECT '' AS three, INTERVAL_TBL.* FROM INTERVAL_TBL
#   WHERE INTERVAL_TBL.f1 < cast('@ 1 day' as interval second);
% .L,	sys.interval_tbl # table_name
% three,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
#SELECT '' AS one, INTERVAL_TBL.* FROM INTERVAL_TBL
#   WHERE INTERVAL_TBL.f1 = cast('@ 34 years' as interval second);
% .L,	sys.interval_tbl # table_name
% one,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
#SELECT '' AS five, INTERVAL_TBL.* FROM INTERVAL_TBL
#   WHERE INTERVAL_TBL.f1 >= cast('@ 1 month' as interval second);
% .L,	sys.interval_tbl # table_name
% five,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	1.000	]
[ "",	6.000	]
[ "",	5.000	]
[ "",	5.000	]
[ "",	0.000	]
[ "",	0.000	]
#SELECT '' AS nine, INTERVAL_TBL.* FROM INTERVAL_TBL
#   WHERE INTERVAL_TBL.f1 > cast('@ 3 seconds ago' as interval second);
% .L,	sys.interval_tbl # table_name
% nine,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	1.000	]
[ "",	6.000	]
[ "",	5.000	]
[ "",	5.000	]
#SELECT '' AS fortyfive, r1.*, r2.*
#   FROM INTERVAL_TBL r1, INTERVAL_TBL r2
#   WHERE r1.f1 > r2.f1
#   ORDER BY r1.f1, r2.f1;
% .L,	sys.r1,	sys.r2 # table_name
% fortyfive,	f1,	f1 # name
% char,	sec_interval,	sec_interval # type
% 0,	0,	0 # length
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	1.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	0.000	]
[ "",	5.000,	1.000	]
[ "",	5.000,	1.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	0.000	]
[ "",	6.000,	1.000	]
[ "",	6.000,	5.000	]
[ "",	6.000,	5.000	]
#SELECT '' AS ten, INTERVAL_TBL.* FROM INTERVAL_TBL order by f1 desc;
% .L,	sys.interval_tbl # table_name
% ten,	f1 # name
% char,	sec_interval # type
% 0,	0 # length
[ "",	6.000	]
[ "",	5.000	]
[ "",	5.000	]
[ "",	1.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
[ "",	0.000	]
#select avg(f1) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% sec_interval # type
% 0 # length
[ 1416.66667	]
#select avg(cast(f1 as double)) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% double # type
% 24 # length
[ 1416.66667	]
#select avg(cast(f1 as decimal)) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% decimal # type
% 24 # length
[ 1416.66667	]
#select avg(cast(f1 as decimal(9,3))) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% decimal # type
% 24 # length
[ 1416.66667	]
#select avg(cast(f1 as integer)) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% double # type
% 24 # length
[ 1416	]
#select min(f1) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% sec_interval # type
% 0 # length
[ 0.000	]
#select max(f1) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% sec_interval # type
% 0 # length
[ 6.000	]
#select sum(f1) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% sec_interval # type
% 0 # length
[ 17000	]
#select sum(cast(f1 as integer)) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% bigint # type
% 5 # length
[ 17000	]
#select count(f1) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 2 # length
[ 12	]
#select count(distinct f1) from interval_tbl;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 1 # length
[ 4	]
#DROP TABLE INTERVAL_TBL;

# 13:45:18 >  
# 13:45:18 >  "Done."
# 13:45:18 >  

