stdout of test 'string` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- string
#--
#CREATE TABLE POINT_TBL(f1 string);
#INSERT INTO POINT_TBL(f1) VALUES ('(0.0,0.0)');
[ 1 ]
#INSERT INTO POINT_TBL(f1) VALUES ('(-10.0,0.0)');
[ 1 ]
#INSERT INTO POINT_TBL(f1) VALUES ('(-3.0,4.0)');
[ 1 ]
#INSERT INTO POINT_TBL(f1) VALUES ('(5.1, 34.5)');
[ 1 ]
#INSERT INTO POINT_TBL(f1) VALUES ('(-5.0,-12.0)');
[ 1 ]
#-- bad format points 
#
#INSERT INTO POINT_TBL(f1) VALUES ('10.0,10.0');
[ 1 ]
#
#
#SELECT '' AS six, POINT_TBL.* FROM POINT_TBL;
% sys.L0,	sys.L0 # table_name
% six,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(0,0)" ]
[ "",	"(-10,0)" ]
[ "",	"(-3,4)" ]
[ "",	"(5.1,34.5)" ]
[ "",	"(-5,-12)" ]
[ "",	"(10,10)" ]

#-- left of 
#SELECT '' AS three, p.* FROM POINT_TBL p WHERE p.f1 << '(0.0, 0.0)';
% sys.L0,	sys.L0 # table_name
% three,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(-10,0)" ]
[ "",	"(-3,4)" ]
[ "",	"(-5,-12)" ]

#-- right of 
#SELECT '' AS three, p.* FROM POINT_TBL p WHERE '(0.0,0.0)' >> p.f1;
% sys.L0,	sys.L0 # table_name
% three,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(-10,0)" ]
[ "",	"(-3,4)" ]
[ "",	"(-5,-12)" ]

#-- above 
#SELECT '' AS one, p.* FROM POINT_TBL p WHERE '(0.0,0.0)' >^ p.f1;
% sys.L0,	sys.L0 # table_name
% one,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(-5,-12)" ]

#-- below 
#SELECT '' AS one, p.* FROM POINT_TBL p WHERE p.f1 <^ '(0.0, 0.0)';
% sys.L0,	sys.L0 # table_name
% one,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(-5,-12)" ]

#-- equal 
#SELECT '' AS one, p.* FROM POINT_TBL p WHERE p.f1 ~= '(5.1, 34.5)';
% sys.L0,	sys.L0 # table_name
% one,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(5.1,34.5)" ]

#-- string in string 
#SELECT '' AS three, p.* FROM POINT_TBL p
#   WHERE p.f1 @ string '(0,0,100,100)';
% sys.L0,	sys.L0 # table_name
% three,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(0,0)" ]
[ "",	"(5.1,34.5)" ]
[ "",	"(10,10)" ]

#SELECT '' AS three, p.* FROM POINT_TBL p
#   WHERE not p.f1 @ string '(0,0,100,100)';
% sys.L0,	sys.L0 # table_name
% three,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(-10,0)" ]
[ "",	"(-3,4)" ]
[ "",	"(-5,-12)" ]

#SELECT '' AS two, p.* FROM POINT_TBL p
#   WHERE p.f1 @ string '[(0,0),(-10,0),(-10,10)]';
% sys.L0,	sys.L0 # table_name
% two,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	"(0,0)" ]
[ "",	"(-10,0)" ]

#SELECT '' AS six, p.f1, p.f1 <-> string '(0,0)' AS dist
#   FROM POINT_TBL p
#   ORDER BY dist;
% sys.L0,	sys.L0,	sys.L0 # table_name
% six,	f1,	dist # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	"(0,0)",	0 ]
[ "",	"(-3,4)",	5 ]
[ "",	"(-10,0)",	10 ]
[ "",	"(-5,-12)",	13 ]
[ "",	"(10,10)",	14.14213562 ]
[ "",	"(5.1,34.5)",	34.87491935 ]

#SELECT '' AS thirtysix, p1.f1 AS point1, p2.f1 AS point2, p1.f1 <-> p2.f1 AS dist
#   FROM POINT_TBL p1, POINT_TBL p2
#   ORDER BY dist, point1 using <<, point2 using <<;
% sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% thirtysix,	point1,	point2,	dist # name
% ?,	?,	?,	? # type
% ?,	?,	?,	? # length
[ "",	"(-10,0)",	"(-10,0)",	0 ]
[ "",	"(-5,-12)",	"(-5,-12)",	0 ]
[ "",	"(-3,4)",	"(-3,4)",	0 ]
[ "",	"(0,0)",	"(0,0)",	0 ]
[ "",	"(5.1,34.5)",	"(5.1,34.5)",	0 ]
[ "",	"(10,10)",	"(10,10)",	0 ]
[ "",	"(-3,4)",	"(0,0)",	5 ]
[ "",	"(0,0)",	"(-3,4)",	5 ]
[ "",	"(-10,0)",	"(-3,4)",	8.062257748 ]
[ "",	"(-3,4)",	"(-10,0)",	8.062257748 ]
[ "",	"(-10,0)",	"(0,0)",	10 ]
[ "",	"(0,0)",	"(-10,0)",	10 ]
[ "",	"(-10,0)",	"(-5,-12)",	13 ]
[ "",	"(-5,-12)",	"(-10,0)",	13 ]
[ "",	"(-5,-12)",	"(0,0)",	13 ]
[ "",	"(0,0)",	"(-5,-12)",	13 ]
[ "",	"(0,0)",	"(10,10)",	14.14213562 ]
[ "",	"(10,10)",	"(0,0)",	14.14213562 ]
[ "",	"(-3,4)",	"(10,10)",	14.31782106 ]
[ "",	"(10,10)",	"(-3,4)",	14.31782106 ]
[ "",	"(-5,-12)",	"(-3,4)",	16.1245155 ]
[ "",	"(-3,4)",	"(-5,-12)",	16.1245155 ]
[ "",	"(-10,0)",	"(10,10)",	22.36067977 ]
[ "",	"(10,10)",	"(-10,0)",	22.36067977 ]
[ "",	"(5.1,34.5)",	"(10,10)",	24.98519562 ]
[ "",	"(10,10)",	"(5.1,34.5)",	24.98519562 ]
[ "",	"(-5,-12)",	"(10,10)",	26.62705391 ]
[ "",	"(10,10)",	"(-5,-12)",	26.62705391 ]
[ "",	"(-3,4)",	"(5.1,34.5)",	31.55724956 ]
[ "",	"(5.1,34.5)",	"(-3,4)",	31.55724956 ]
[ "",	"(0,0)",	"(5.1,34.5)",	34.87491935 ]
[ "",	"(5.1,34.5)",	"(0,0)",	34.87491935 ]
[ "",	"(-10,0)",	"(5.1,34.5)",	37.65979288 ]
[ "",	"(5.1,34.5)",	"(-10,0)",	37.65979288 ]
[ "",	"(-5,-12)",	"(5.1,34.5)",	47.58424109 ]
[ "",	"(5.1,34.5)",	"(-5,-12)",	47.58424109 ]

#SELECT '' AS thirty, p1.f1 AS point1, p2.f1 AS point2
#   FROM POINT_TBL p1, POINT_TBL p2
#   WHERE (p1.f1 <-> p2.f1) > 3;
% sys.L0,	sys.L0,	sys.L0 # table_name
% thirty,	point1,	point2 # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	"(0,0)",	"(-10,0)" ]
[ "",	"(0,0)",	"(-3,4)" ]
[ "",	"(0,0)",	"(5.1,34.5)" ]
[ "",	"(0,0)",	"(-5,-12)" ]
[ "",	"(0,0)",	"(10,10)" ]
[ "",	"(-10,0)",	"(0,0)" ]
[ "",	"(-10,0)",	"(-3,4)" ]
[ "",	"(-10,0)",	"(5.1,34.5)" ]
[ "",	"(-10,0)",	"(-5,-12)" ]
[ "",	"(-10,0)",	"(10,10)" ]
[ "",	"(-3,4)",	"(0,0)" ]
[ "",	"(-3,4)",	"(-10,0)" ]
[ "",	"(-3,4)",	"(5.1,34.5)" ]
[ "",	"(-3,4)",	"(-5,-12)" ]
[ "",	"(-3,4)",	"(10,10)" ]
[ "",	"(5.1,34.5)",	"(0,0)" ]
[ "",	"(5.1,34.5)",	"(-10,0)" ]
[ "",	"(5.1,34.5)",	"(-3,4)" ]
[ "",	"(5.1,34.5)",	"(-5,-12)" ]
[ "",	"(5.1,34.5)",	"(10,10)" ]
[ "",	"(-5,-12)",	"(0,0)" ]
[ "",	"(-5,-12)",	"(-10,0)" ]
[ "",	"(-5,-12)",	"(-3,4)" ]
[ "",	"(-5,-12)",	"(5.1,34.5)" ]
[ "",	"(-5,-12)",	"(10,10)" ]
[ "",	"(10,10)",	"(0,0)" ]
[ "",	"(10,10)",	"(-10,0)" ]
[ "",	"(10,10)",	"(-3,4)" ]
[ "",	"(10,10)",	"(5.1,34.5)" ]
[ "",	"(10,10)",	"(-5,-12)" ]

#-- put distance result into output to allow sorting with GEQ optimizer - tgl 97/05/10
#SELECT '' AS fifteen, p1.f1 AS point1, p2.f1 AS point2, (p1.f1 <-> p2.f1) AS distance
#   FROM POINT_TBL p1, POINT_TBL p2
#   WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1
#   ORDER BY distance, point1 using <<, point2 using <<;
% sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% fifteen,	point1,	point2,	distance # name
% ?,	?,	?,	? # type
% ?,	?,	?,	? # length
[ "",	"(-3,4)",	"(0,0)",	5 ]
[ "",	"(-10,0)",	"(-3,4)",	8.062257748 ]
[ "",	"(-10,0)",	"(0,0)",	10 ]
[ "",	"(-10,0)",	"(-5,-12)",	13 ]
[ "",	"(-5,-12)",	"(0,0)",	13 ]
[ "",	"(0,0)",	"(10,10)",	14.14213562 ]
[ "",	"(-3,4)",	"(10,10)",	14.31782106 ]
[ "",	"(-5,-12)",	"(-3,4)",	16.1245155 ]
[ "",	"(-10,0)",	"(10,10)",	22.36067977 ]
[ "",	"(5.1,34.5)",	"(10,10)",	24.98519562 ]
[ "",	"(-5,-12)",	"(10,10)",	26.62705391 ]
[ "",	"(-3,4)",	"(5.1,34.5)",	31.55724956 ]
[ "",	"(0,0)",	"(5.1,34.5)",	34.87491935 ]
[ "",	"(-10,0)",	"(5.1,34.5)",	37.65979288 ]
[ "",	"(-5,-12)",	"(5.1,34.5)",	47.58424109 ]

#-- put distance result into output to allow sorting with GEQ optimizer - tgl 97/05/10
#SELECT '' AS three, p1.f1 AS point1, p2.f1 AS point2, (p1.f1 <-> p2.f1) AS distance
#   FROM POINT_TBL p1, POINT_TBL p2 
#   WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1 and p1.f1 >^ p2.f1
#   ORDER BY distance;
% sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% three,	point1,	point2,	distance # name
% ?,	?,	?,	? # type
% ?,	?,	?,	? # length
[ "",	"(-3,4)",	"(0,0)",	5 ]
[ "",	"(-10,0)",	"(-5,-12)",	13 ]
[ "",	"(5.1,34.5)",	"(10,10)",	24.98519562 ]

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

