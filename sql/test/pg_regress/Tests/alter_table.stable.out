stdout of test 'alter_table` in directory 'sql/test/pg_regress` itself:


# 17:09:49 >  
# 17:09:49 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:09:49 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 17:09:50 >  
# 17:09:50 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:09:50 >  

#CREATE TABLE tmp (initial integer);
#ALTER TABLE tmp ADD COLUMN a integer default 3;
#ALTER TABLE tmp ADD COLUMN c text;
#ALTER TABLE tmp ADD COLUMN d double;
#ALTER TABLE tmp ADD COLUMN e float;
#ALTER TABLE tmp ADD COLUMN f smallint;
#ALTER TABLE tmp ADD COLUMN g string;
#ALTER TABLE tmp ADD COLUMN i char;
#ALTER TABLE tmp ADD COLUMN k integer;
#ALTER TABLE tmp ADD COLUMN q string;
#ALTER TABLE tmp ADD COLUMN s string;
#ALTER TABLE tmp ADD COLUMN t string;
#ALTER TABLE tmp ADD COLUMN v timestamp;
#SELECT * FROM tmp;
% sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp # table_name
% initial,	a,	c,	d,	e,	f,	g,	i,	k,	q,	s,	t,	v # name
% int,	int,	clob,	double,	double,	smallint,	clob,	char,	int,	clob,	clob,	clob,	timestamp # type
% 1,	1,	0,	24,	24,	1,	0,	1,	1,	0,	0,	0,	26 # length
#DROP TABLE tmp;
#CREATE TABLE tmp (
#	initial 	integer
#);
#ALTER TABLE tmp ADD COLUMN a integer;
#ALTER TABLE tmp ADD COLUMN c text;
#ALTER TABLE tmp ADD COLUMN d double;
#ALTER TABLE tmp ADD COLUMN e float;
#ALTER TABLE tmp ADD COLUMN f smallint;
#ALTER TABLE tmp ADD COLUMN g string;
#ALTER TABLE tmp ADD COLUMN i char;
#ALTER TABLE tmp ADD COLUMN k integer;
#ALTER TABLE tmp ADD COLUMN q string;
#ALTER TABLE tmp ADD COLUMN s string;
#ALTER TABLE tmp ADD COLUMN t string;
#ALTER TABLE tmp ADD COLUMN v timestamp;
#SELECT * FROM tmp;
% sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp,	sys.tmp # table_name
% initial,	a,	c,	d,	e,	f,	g,	i,	k,	q,	s,	t,	v # name
% int,	int,	clob,	double,	double,	smallint,	clob,	char,	int,	clob,	clob,	clob,	timestamp # type
% 1,	1,	0,	24,	24,	1,	0,	1,	1,	0,	0,	0,	26 # length
#DROP TABLE tmp;
#CREATE TABLE tmp (regtable int);
#CREATE TEMP TABLE tmp (tmptable int);
#SELECT * FROM tmp;
% sys.tmp # table_name
% regtable # name
% int # type
% 1 # length
#SELECT * FROM tmp;		-- should fail
% sys.tmp # table_name
% regtable # name
% int # type
% 1 # length
#CREATE TABLE tmp2 (a int primary key);
#CREATE TABLE tmp3 (a int, b int);
#CREATE TABLE tmp4 (a int, b int, unique(a,b));
#CREATE TABLE tmp5 (a int, b int);
#INSERT INTO tmp2 values (1);
[ 1	]
#INSERT INTO tmp2 values (2);
[ 1	]
#INSERT INTO tmp2 values (3);
[ 1	]
#INSERT INTO tmp2 values (4);
[ 1	]
#INSERT INTO tmp3 values (1,10);
[ 1	]
#INSERT INTO tmp3 values (1,20);
[ 1	]
#INSERT INTO tmp3 values (5,50);
[ 1	]
#DELETE FROM tmp3 where a=5;
[ 1	]
#ALTER TABLE tmp3 add constraint tmpconstr foreign key (a) references tmp2 match full;
#DROP TABLE tmp5;
#DROP TABLE tmp4;
#DROP TABLE tmp3;
#DROP TABLE tmp2;
#CREATE TEMP TABLE PKTABLE (ptest1 int PRIMARY KEY);
#CREATE TEMP TABLE FKTABLE (ftest1 inet);
#DROP TABLE FKTABLE;
#DROP TABLE pktable cascade;
#CREATE TEMP TABLE PKTABLE (ptest1 int, ptest2 inet,
#                           PRIMARY KEY(ptest1, ptest2));
#CREATE TEMP TABLE FKTABLE (ftest1 int, ftest2 inet);
#create table atacc1 ( test int );
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (4);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (4);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#drop table atacc1;
#create table atacc1 ( test int, test2 int, test3 int);
#insert into atacc1 (test,test2,test3) values (4,4,2);
[ 1	]
#insert into atacc1 (test,test2,test3) values (4,4,5);
[ 1	]
#drop table atacc1;
#create table atacc1 (test int check (test>3), test2 int);
#insert into atacc1 (test2, test) values (3, 4);
[ 1	]
#drop table atacc1;
#create table atacc1 (test int);
#create table atacc2 (test2 int);
#create table atacc3 (test3 int);
#insert into atacc2 (test2) values (-3);
[ 1	]
#insert into atacc2 (test2) values (3);
[ 1	]
#drop table atacc3;
#drop table atacc2;
#drop table atacc1;
#create table atacc1 (test int);
#create table atacc2 (test2 int);
#create table atacc3 (test3 int);
#insert into atacc2 (test2) values (-3);
[ 1	]
#insert into atacc2 (test2) values (3);
[ 1	]
#drop table atacc3;
#drop table atacc2;
#drop table atacc1;
#create table atacc1 ( test int );
#alter table atacc1 add constraint atacc_test1 unique (test);
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (4);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (3);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#drop table atacc1;
#create table atacc1 ( test int, test2 int);
#alter table atacc1 add constraint atacc_test1 unique (test, test2);
#insert into atacc1 (test,test2) values (4,4);
[ 1	]
#insert into atacc1 (test,test2) values (4,5);
[ 1	]
#insert into atacc1 (test,test2) values (5,4);
[ 1	]
#insert into atacc1 (test,test2) values (5,5);
[ 1	]
#drop table atacc1;
#create table atacc1 (test int, test2 int, unique(test));
#alter table atacc1 add unique (test2);
#insert into atacc1 (test2, test) values (3, 3);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#alter table atacc1 add constraint atacc_test1 primary key (test);
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (4);
[ 1	]
#alter table atacc1 drop constraint atacc_test1 restrict;
#drop table atacc1;
#create table atacc1 ( test int );
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (2);
[ 1	]
#insert into atacc1 (test) values (3);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#insert into atacc1 (test) values (NULL);
[ 1	]
#insert into atacc1 (test) values (3);
[ 1	]
#drop table atacc1;
#create table atacc1 ( test int );
#drop table atacc1;
#create table atacc1 ( test int, test2 int);
#alter table atacc1 add constraint atacc_test1 primary key (test, test2);
#insert into atacc1 (test,test2) values (4,4);
[ 1	]
#insert into atacc1 (test,test2) values (4,5);
[ 1	]
#insert into atacc1 (test,test2) values (5,4);
[ 1	]
#insert into atacc1 (test,test2) values (5,5);
[ 1	]
#drop table atacc1;
#create table atacc1 (test int, test2 int, primary key(test));
#insert into atacc1 (test2, test) values (3, 3);
[ 1	]
#drop table atacc1;
#create table atacc1 (test int not null);
#alter table atacc1 add constraint "atacc1_pkey" primary key (test);
#alter table atacc1 drop constraint "atacc1_pkey";
#alter table atacc1 alter test set not null;
#delete from atacc1;
[ 0	]
#alter table atacc1 alter test set not null;
#create view myview as select * from atacc1;
#drop view myview;
#drop table atacc1;
#create table parent (a int);
#create table child (b varchar(255));
#alter table parent alter a set not null;
#delete from parent;
[ 0	]
#delete from child;
[ 0	]
#drop table child;
#drop table parent;
#create table def_test (
#	c1	integer default 5,
#	c2	text default 'initial_default'
#);
#insert into def_test default values;
[ 1	]
#alter table def_test alter column c1 drop default;
#insert into def_test default values;
[ 1	]
#alter table def_test alter column c2 drop default;
#insert into def_test default values;
[ 1	]
#alter table def_test alter column c1 set default 10;
#alter table def_test alter column c2 set default 'new_default';
#insert into def_test default values;
[ 1	]
#select * from def_test;
% sys.def_test,	sys.def_test # table_name
% c1,	c2 # name
% int,	clob # type
% 2,	15 # length
[ 5,	"initial_default"	]
[ NULL,	"initial_default"	]
[ 5,	NULL	]
[ 10,	"new_default"	]
#alter table def_test alter column c1 set default 'wrong_datatype';
#alter table def_test alter column c2 set default 20;
#create view def_view_test as select * from def_test;
#select * from def_view_test;
% sys.def_view_test,	sys.def_view_test # table_name
% c1,	c2 # name
% int,	clob # type
% 2,	15 # length
[ 5,	"initial_default"	]
[ NULL,	"initial_default"	]
[ 5,	NULL	]
[ 10,	"new_default"	]
#drop view def_view_test;
#drop table def_test;
#create table atacc1 (a integer not null, b integer, c integer not null, d integer);
#insert into atacc1 values (1, 2, 3, 4);
[ 1	]
#alter table atacc1 drop a;
#select * from atacc1;
% sys.atacc1,	sys.atacc1,	sys.atacc1 # table_name
% b,	c,	d # name
% int,	int,	int # type
% 1,	1,	1 # length
[ 2,	3,	4	]
#select atacc1.* from atacc1;
% sys.atacc1,	sys.atacc1,	sys.atacc1 # table_name
% b,	c,	d # name
% int,	int,	int # type
% 1,	1,	1 # length
[ 2,	3,	4	]
#select b,c,d from atacc1;
% sys.atacc1,	sys.atacc1,	sys.atacc1 # table_name
% b,	c,	d # name
% int,	int,	int # type
% 1,	1,	1 # length
[ 2,	3,	4	]
#insert into atacc1 values (11, 12, 13);
[ 1	]
#insert into atacc1 (b,c,d) values (11,12,13);
[ 1	]
#delete from atacc1;
[ 3	]
#create view myview as select * from atacc1;
#select * from myview;
% sys.myview,	sys.myview,	sys.myview # table_name
% b,	c,	d # name
% int,	int,	int # type
% 1,	1,	1 # length
#drop view myview;
#create table atacc2 (id integer unique);
#drop table atacc2;
#insert into atacc1 values (21, 22, 23);
[ 1	]
#alter table atacc1 drop c;
#alter table atacc1 drop d;
#select * from atacc1;
% sys.atacc1 # table_name
% b # name
% int # type
% 2 # length
[ 21	]
#drop table atacc1;
#create table parent (a int, b int, c int);
#insert into parent values (1, 2, 3);
[ 1	]
#alter table parent drop a;
#create table child (d varchar(255));
#select * from parent;
% sys.parent,	sys.parent # table_name
% b,	c # name
% int,	int # type
% 1,	1 # length
[ 2,	3	]
#select * from child;
% sys.child # table_name
% d # name
% varchar # type
% 0 # length
#alter table parent drop c;
#select * from parent;
% sys.parent # table_name
% b # name
% int # type
% 1 # length
[ 2	]
#select * from child;
% sys.child # table_name
% d # name
% varchar # type
% 0 # length
#drop table child;
#drop table parent;
#create table test (a integer, b integer, c integer);
#insert into test values (1,2,3);
[ 1	]
#alter table test drop a;
#drop table test;
#create table dropColumn (a int, b int, e int);
#create table dropColumnChild (c int);
#create table dropColumnAnother (d int);
#alter table dropColumn drop column a;
#create table renameColumn (a int);
#create table renameColumnChild (b int);
#create table renameColumnAnother (c int);
#alter table renameColumn add column w int;
#create table p1 (f1 int, f2 int);
#create table c1 (f1 int not null);
#alter table p1 drop column f1;
#select f1 from c1;
% sys.c1 # table_name
% f1 # name
% int # type
% 1 # length
#select f1 from c1;
% sys.c1 # table_name
% f1 # name
% int # type
% 1 # length
#drop table p1 cascade;
#create table p1 (f1 int, f2 int);
#alter table p1 drop column f1;
#select f1 from c1;
% sys.c1 # table_name
% f1 # name
% int # type
% 1 # length
#drop table p1 cascade;
#create table p1 (f1 int, f2 int);
#drop table p1 cascade;
#create table p1 (f1 int, f2 int);
#drop table p1 cascade;
#create table p1(id int, name text);
#create table p2(id2 int, name text, height int);
#alter table p2 drop column name;
#alter table p2 drop column height;
#alter table p1 add column a1 int check (a1 > 0);
#alter table p1 add column f2 text;
#select * from p1;
% sys.p1,	sys.p1,	sys.p1,	sys.p1 # table_name
% id,	name,	a1,	f2 # name
% int,	clob,	int,	clob # type
% 1,	0,	1,	0 # length
#update p1 set a1 = a1 + 1, f2 = upper(f2);
[ 0	]
#select * from p1;
% sys.p1,	sys.p1,	sys.p1,	sys.p1 # table_name
% id,	name,	a1,	f2 # name
% int,	clob,	int,	clob # type
% 1,	0,	1,	0 # length
#drop table p1 cascade;
#create table another (f1 int, f2 text);
#insert into another values(1, 'one');
[ 1	]
#insert into another values(2, 'two');
[ 1	]
#insert into another values(3, 'three');
[ 1	]
#select * from another;
% sys.another,	sys.another # table_name
% f1,	f2 # name
% int,	clob # type
% 1,	5 # length
[ 1,	"one"	]
[ 2,	"two"	]
[ 3,	"three"	]
#select * from another;
% sys.another,	sys.another # table_name
% f1,	f2 # name
% int,	clob # type
% 1,	5 # length
[ 1,	"one"	]
[ 2,	"two"	]
[ 3,	"three"	]
#drop table another;

# 17:09:51 >  
# 17:09:51 >  "Done."
# 17:09:51 >  

