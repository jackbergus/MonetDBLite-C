stdout of test 'numerology` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- NUMEROLOGY
#-- Test various combinations of numeric types and functions.
#--
#--
#-- Test implicit type conversions
#-- This fails for Postgres v6.1 (and earlier?)
#--  so let's try explicit conversions for now - tgl 97/05/07
#--
#CREATE TABLE TEMP_FLOAT (f1 double);
#INSERT INTO TEMP_FLOAT (f1)
#  SELECT double(f1) FROM INT4_TBL;
[ 1 ]
#INSERT INTO TEMP_FLOAT (f1)
#  SELECT double(f1) FROM INT2_TBL;
[ 1 ]
#SELECT '' AS ten, f1 FROM TEMP_FLOAT
#  ORDER BY f1;
% sys.L0,	sys.L0 # table_name
% ten,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	-2147483647 ]
[ "",	-123456 ]
[ "",	-32767 ]
[ "",	-1234 ]
[ "",	0 ]
[ "",	0 ]
[ "",	1234 ]
[ "",	32767 ]
[ "",	123456 ]
[ "",	2147483647 ]

#-- integer
#CREATE TABLE TEMP_INT4 (f1 integer);
#INSERT INTO TEMP_INT4 (f1)
#  SELECT integer(f1) FROM FLOAT8_TBL
#  WHERE (f1 > -2147483647) AND (f1 < 2147483647);
[ 1 ]
#INSERT INTO TEMP_INT4 (f1)
#  SELECT integer(f1) FROM INT2_TBL;
[ 1 ]
#SELECT '' AS nine, f1 FROM TEMP_INT4
#  ORDER BY f1;
% sys.L0,	sys.L0 # table_name
% nine,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	-32767 ]
[ "",	-1234 ]
[ "",	-1004 ]
[ "",	-35 ]
[ "",	0 ]
[ "",	0 ]
[ "",	0 ]
[ "",	1234 ]
[ "",	32767 ]

#-- smallint
#CREATE TABLE TEMP_INT2 (f1 smallint);
#INSERT INTO TEMP_INT2 (f1)
#  SELECT smallint(f1) FROM FLOAT8_TBL
#  WHERE (f1 >= -32767) AND (f1 <= 32767);
[ 1 ]
#INSERT INTO TEMP_INT2 (f1)
#  SELECT smallint(f1) FROM INT4_TBL
#  WHERE (f1 >= -32767) AND (f1 <= 32767);
[ 1 ]
#SELECT '' AS five, f1 FROM TEMP_INT2
#  ORDER BY f1;
% sys.L0,	sys.L0 # table_name
% five,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	-1004 ]
[ "",	-35 ]
[ "",	0 ]
[ "",	0 ]
[ "",	0 ]

#--
#-- Group-by combinations
#--
#CREATE TABLE TEMP_GROUP (f1 integer, f2 integer, f3 double);
#INSERT INTO TEMP_GROUP
#  SELECT 1, (- i.f1), (- f.f1)
#  FROM INT4_TBL i, FLOAT8_TBL f;
[ 1 ]
#INSERT INTO TEMP_GROUP
#  SELECT 2, i.f1, f.f1
#  FROM INT4_TBL i, FLOAT8_TBL f;
[ 1 ]
#SELECT DISTINCT f1 AS two FROM TEMP_GROUP;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 2 ]

#SELECT f1 AS two, max(f3) AS max_float, min(f3) as min_float
#  FROM TEMP_GROUP
#  GROUP BY f1
#  ORDER BY two, max_float, min_float;
% sys.L0,	sys.L0,	sys.L0 # table_name
% two,	max_float,	min_float # name
% ?,	?,	? # type
% ?,	?,	? # length
[ 1,	"1.2345678901234e+200",	0 ]
[ 2,	0,	"-1.2345678901234e+200" ]

#-- GROUP BY a result column name is not legal per SQL92, but we accept it
#-- anyway (if the name is not the name of any column exposed by FROM).
#SELECT f1 AS two, max(f3) AS max_float, min(f3) AS min_float
#  FROM TEMP_GROUP
#  GROUP BY two
#  ORDER BY two, max_float, min_float;
% sys.L0,	sys.L0,	sys.L0 # table_name
% two,	max_float,	min_float # name
% ?,	?,	? # type
% ?,	?,	? # length
[ 1,	"1.2345678901234e+200",	0 ]
[ 2,	0,	"-1.2345678901234e+200" ]

#SELECT f1 AS two, (max(f3) + 1) AS max_plus_1, (min(f3) - 1) AS min_minus_1
#  FROM TEMP_GROUP
#  GROUP BY f1
#  ORDER BY two, min_minus_1;
% sys.L0,	sys.L0,	sys.L0 # table_name
% two,	max_plus_1,	min_minus_1 # name
% ?,	?,	? # type
% ?,	?,	? # length
[ 1,	"1.2345678901234e+200",	-1 ]
[ 2,	1,	"-1.2345678901234e+200" ]

#SELECT f1 AS two,
#       max(f2) + min(f2) AS max_plus_min,
#       min(f3) - 1 AS min_minus_1
#  FROM TEMP_GROUP
#  GROUP BY f1
#  ORDER BY two, min_minus_1;
% sys.L0,	sys.L0,	sys.L0 # table_name
% two,	max_plus_min,	min_minus_1 # name
% ?,	?,	? # type
% ?,	?,	? # length
[ 1,	0,	-1 ]
[ 2,	0,	"-1.2345678901234e+200" ]

#DROP TABLE TEMP_INT2;
#DROP TABLE TEMP_INT4;
#DROP TABLE TEMP_FLOAT;
#DROP TABLE TEMP_GROUP;

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

