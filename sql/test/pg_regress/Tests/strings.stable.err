stderr of test 'strings` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# builtin opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 38959
# cmdline opt 	mapi_usock = /var/tmp/mtest-1142/.s.monetdb.38959
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress
# cmdline opt 	mal_listing = 0
# cmdline opt 	gdk_debug = 536870922

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

#--
#-- STRINGS
#-- Test various data entry syntaxes.
#--
#-- SQL92 string continuation syntax
#-- E021-03 character string literals
#-- illegal string continuation syntax
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = SELECT 'first line'
' - next line' /* this comment is not allowed here */
' - third line'
	AS "Illegal comment within continuation";
ERROR = syntax error at or near "' - third line'" at character 75
#--
#-- test conversions between various string types
#-- E021-10 implicit casting among the character data types
#--
#-- since this is an explicit cast, it should truncate w/o error:
#-- note: implicit-cast case is tested in char.sql
#--
#-- test SQL92 string functions
#-- E### and T### are feature reference numbers from SQL99
#--
#-- E021-09 trim function
#-- E021-06 substring expression
#-- T581 regular expression substring (with SQL99's bizarre regexp syntax)
#-- No match should return NULL
#-- Null inputs should return NULL
#-- PostgreSQL extension to allow omitting the escape character;
#-- here the regexp is taken as Posix syntax
#-- With a parenthesized subexpression, return only what matches the subexpr
#-- E021-11 position expression
#-- T312 character overlay function
#--
#-- test LIKE
#-- Be sure to form every test as a LIKE/NOT LIKE pair.
#--
#-- simplest examples
#-- E061-04 like predicate
#-- unused escape character
#-- escape character
#-- E061-05 like predicate with escape clause
#-- escape character same as pattern character
#--
#-- test ILIKE (case-insensitive LIKE)
#-- Be sure to form every test as an ILIKE/NOT ILIKE pair.
#--
#--
#-- test implicit type conversion
#--
#-- E021-07 character concatenation
#--
#-- test substr with toasted text values
#--
#--
#-- Ensure that some values are uncompressed, to test the faster substring
#-- operation used in that case
#--
#-- If the starting position is zero or less, then return from the start of the string
#-- adjusting the length to be consistent with the "negative start" per SQL92.
#-- If the length is less than zero, an ERROR is thrown.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = SELECT substr(f1, 5, -1) from toasttest;
ERROR = negative substring length not allowed
#-- If no third argument (length) is provided, the length to the end of the
#-- string is assumed.
#-- If start plus length is > string length, the result is truncated to
#-- string length
#--
#-- test substr with toasted bytea values
#--
#--
#-- Ensure that some values are uncompressed, to test the faster substring
#-- operation used in that case
#--
#-- If the starting position is zero or less, then return from the start of the string
#-- adjusting the length to be consistent with the "negative start" per SQL92.
#-- If the length is less than zero, an ERROR is thrown.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = SELECT substr(f1, 5, -1) from toasttest;
ERROR = negative substring length not allowed
#-- If no third argument (length) is provided, the length to the end of the
#-- string is assumed.
#-- If start plus length is > string length, the result is truncated to
#-- string length
#--
#-- test length
#--
#--
#-- test strpos
#--
#--
#-- test replace
#--
#--
#-- test split_part
#--
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = select split_part('joeuser@mydatabase','@',0) AS "an error";
ERROR = field position must be greater than zero
#--
#-- test to_hex
#--
#--
#-- MD5 test suite - from IETF RFC 1321
#-- (see: ftp://ftp.rfc-editor.org/in-notes/rfc1321.txt)
#--

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

