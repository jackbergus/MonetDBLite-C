stdout of test 'without_oid` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

--
-- WITHOUT OID
--
--
-- This test tries to verify that WITHOUT OIDS actually saves space.
-- On machines where MAXALIGN is 8, WITHOUT OIDS may or may not save any
-- space, depending on the size of the tuple header + null bitmap.
-- As of 8.0 we need a 9-bit null bitmap to force the difference to appear.
--
CREATE TABLE wi (i INT,
                 n1 int, n2 int, n3 int, n4 int,
                 n5 int, n6 int, n7 int, n8 int) WITH OIDS;
CREATE TABLE wo (i INT,
                 n1 int, n2 int, n3 int, n4 int,
                 n5 int, n6 int, n7 int, n8 int) WITHOUT OIDS;
INSERT INTO wi VALUES (1);  -- 1
INSERT INTO wo SELECT i FROM wi;  -- 1
INSERT INTO wo SELECT i+1 FROM wi;  -- 1+1=2
INSERT INTO wi SELECT i+1 FROM wo;  -- 1+2=3
INSERT INTO wi SELECT i+3 FROM wi;  -- 3+3=6
INSERT INTO wo SELECT i+2 FROM wi;  -- 2+6=8
INSERT INTO wo SELECT i+8 FROM wo;  -- 8+8=16
INSERT INTO wi SELECT i+6 FROM wo;  -- 6+16=22
INSERT INTO wi SELECT i+22 FROM wi;  -- 22+22=44
INSERT INTO wo SELECT i+16 FROM wi;  -- 16+44=60
INSERT INTO wo SELECT i+60 FROM wo;  -- 60+60=120
INSERT INTO wi SELECT i+44 FROM wo;  -- 44+120=164
INSERT INTO wi SELECT i+164 FROM wi;  -- 164+164=328
INSERT INTO wo SELECT i+120 FROM wi;  -- 120+328=448
INSERT INTO wo SELECT i+448 FROM wo;  -- 448+448=896
INSERT INTO wi SELECT i+328 FROM wo;  -- 328+896=1224
INSERT INTO wi SELECT i+1224 FROM wi;  -- 1224+1224=2448
INSERT INTO wo SELECT i+896 FROM wi;  -- 896+2448=3344
INSERT INTO wo SELECT i+3344 FROM wo;  -- 3344+3344=6688
INSERT INTO wi SELECT i+2448 FROM wo;  -- 2448+6688=9136
INSERT INTO wo SELECT i+6688 FROM wi WHERE i<=2448;  -- 6688+2448=9136
SELECT count(oid) FROM wi;
 count 
-------
  9136
(1 row)

-- should fail
SELECT count(oid) FROM wo;
ERROR:  column "oid" does not exist
VACUUM ANALYZE wi;
VACUUM ANALYZE wo;
SELECT min(relpages) < max(relpages), min(reltuples) - max(reltuples)
  FROM pg_class
 WHERE relname IN ('wi', 'wo');
 ?column? | ?column? 
----------+----------
 t        |        0
(1 row)

DROP TABLE wi;
DROP TABLE wo;
--
-- WITH / WITHOUT OIDS in CREATE TABLE AS
--
CREATE TABLE create_table_test (
    a int,
    b int
);
COPY create_table_test FROM stdin;
CREATE TABLE create_table_test2 WITH OIDS AS
    SELECT a + b AS c1, a - b AS c2 FROM create_table_test;
CREATE TABLE create_table_test3 WITHOUT OIDS AS
    SELECT a + b AS c1, a - b AS c2 FROM create_table_test;
SELECT count(oid) FROM create_table_test2;
 count 
-------
     2
(1 row)

-- should fail
SELECT count(oid) FROM create_table_test3;
ERROR:  column "oid" does not exist
DROP TABLE create_table_test;
DROP TABLE create_table_test2;
DROP TABLE create_table_test3;

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

