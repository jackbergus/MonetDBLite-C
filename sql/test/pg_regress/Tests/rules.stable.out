stdout of test 'rules` in directory 'sql/test/pg_regress` itself:


# 17:11:12 >  
# 17:11:12 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:12 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 17:11:14 >  
# 17:11:14 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:14 >  

#create table rtest_t1 (a integer, b integer);
#create table rtest_t2 (a integer, b integer);
#create table rtest_t3 (a integer, b integer);
#create view rtest_v1 as select * from rtest_t1;
#create table rtest_system (sysname text, sysdesc text);
#create table rtest_interface (sysname text, ifname text);
#create table rtest_person (pname text, pdesc text);
#create table rtest_admin (pname text, sysname text);
#create table rtest_t4 (a integer, b text);
#create table rtest_t5 (a integer, b text);
#create table rtest_t6 (a integer, b text);
#create table rtest_t7 (a integer, b text);
#create table rtest_t8 (a integer, b text);
#create table rtest_t9 (a integer, b text);
#create table rtest_order1 (a integer);
#create table rtest_order2 (a integer, b integer, c text);
#create table rtest_nothn1 (a integer, b text);
#create table rtest_nothn2 (a integer, b text);
#create table rtest_nothn3 (a integer, b text);
#create table rtest_nothn4 (a integer, b text);
#insert into rtest_t2 values (1, 21);
[ 1	]
#insert into rtest_t2 values (2, 22);
[ 1	]
#insert into rtest_t2 values (3, 23);
[ 1	]
#insert into rtest_t3 values (1, 31);
[ 1	]
#insert into rtest_t3 values (2, 32);
[ 1	]
#insert into rtest_t3 values (3, 33);
[ 1	]
#insert into rtest_t3 values (4, 34);
[ 1	]
#insert into rtest_t3 values (5, 35);
[ 1	]
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#update rtest_t1 set a = a + 10 where b > 30;
[ 0	]
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#select * from rtest_v1;
% sys.rtest_v1,	sys.rtest_v1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#insert into rtest_system values ('orion', 'Linux Jan Wieck');
[ 1	]
#insert into rtest_system values ('notjw', 'WinNT Jan Wieck (notebook)');
[ 1	]
#insert into rtest_system values ('neptun', 'Fileserver');
[ 1	]
#insert into rtest_interface values ('orion', 'eth0');
[ 1	]
#insert into rtest_interface values ('orion', 'eth1');
[ 1	]
#insert into rtest_interface values ('notjw', 'eth0');
[ 1	]
#insert into rtest_interface values ('neptun', 'eth0');
[ 1	]
#insert into rtest_person values ('jw', 'Jan Wieck');
[ 1	]
#insert into rtest_person values ('bm', 'Bruce Momjian');
[ 1	]
#insert into rtest_admin values ('jw', 'orion');
[ 1	]
#insert into rtest_admin values ('jw', 'notjw');
[ 1	]
#insert into rtest_admin values ('bm', 'neptun');
[ 1	]
#update rtest_system set sysname = 'pluto' where sysname = 'neptun';
[ 1	]
#select * from rtest_interface;
% sys.rtest_interface,	sys.rtest_interface # table_name
% sysname,	ifname # name
% clob,	clob # type
% 6,	4 # length
[ "orion",	"eth0"	]
[ "orion",	"eth1"	]
[ "notjw",	"eth0"	]
[ "neptun",	"eth0"	]
#select * from rtest_admin;
% sys.rtest_admin,	sys.rtest_admin # table_name
% pname,	sysname # name
% clob,	clob # type
% 2,	6 # length
[ "jw",	"orion"	]
[ "jw",	"notjw"	]
[ "bm",	"neptun"	]
#update rtest_person set pname = 'jwieck' where pdesc = 'Jan Wieck';
[ 1	]
#select * from rtest_admin order by pname, sysname;
% sys.rtest_admin,	sys.rtest_admin # table_name
% pname,	sysname # name
% clob,	clob # type
% 2,	6 # length
[ "bm",	"neptun"	]
[ "jw",	"notjw"	]
[ "jw",	"orion"	]
#delete from rtest_system where sysname = 'orion';
[ 1	]
#select * from rtest_interface;
% sys.rtest_interface,	sys.rtest_interface # table_name
% sysname,	ifname # name
% clob,	clob # type
% 6,	4 # length
[ "orion",	"eth0"	]
[ "orion",	"eth1"	]
[ "notjw",	"eth0"	]
[ "neptun",	"eth0"	]
#select * from rtest_admin;
% sys.rtest_admin,	sys.rtest_admin # table_name
% pname,	sysname # name
% clob,	clob # type
% 2,	6 # length
[ "jw",	"orion"	]
[ "jw",	"notjw"	]
[ "bm",	"neptun"	]
#insert into rtest_t4 values (1, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t4 values (2, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t4 values (10, 'Record should go to rtest_t5');
[ 1	]
#insert into rtest_t4 values (15, 'Record should go to rtest_t5');
[ 1	]
#insert into rtest_t4 values (19, 'Record should go to rtest_t5 and t7');
[ 1	]
#insert into rtest_t4 values (20, 'Record should go to rtest_t4 and t6');
[ 1	]
#insert into rtest_t4 values (26, 'Record should go to rtest_t4 and t8');
[ 1	]
#insert into rtest_t4 values (28, 'Record should go to rtest_t4 and t8');
[ 1	]
#insert into rtest_t4 values (30, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t4 values (40, 'Record should go to rtest_t4');
[ 1	]
#select * from rtest_t4;
% sys.rtest_t4,	sys.rtest_t4 # table_name
% a,	b # name
% int,	clob # type
% 2,	35 # length
[ 1,	"Record should go to rtest_t4"	]
[ 2,	"Record should go to rtest_t4"	]
[ 10,	"Record should go to rtest_t5"	]
[ 15,	"Record should go to rtest_t5"	]
[ 19,	"Record should go to rtest_t5 and t7"	]
[ 20,	"Record should go to rtest_t4 and t6"	]
[ 26,	"Record should go to rtest_t4 and t8"	]
[ 28,	"Record should go to rtest_t4 and t8"	]
[ 30,	"Record should go to rtest_t4"	]
[ 40,	"Record should go to rtest_t4"	]
#select * from rtest_t5;
% sys.rtest_t5,	sys.rtest_t5 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t6;
% sys.rtest_t6,	sys.rtest_t6 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t7;
% sys.rtest_t7,	sys.rtest_t7 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t8;
% sys.rtest_t8,	sys.rtest_t8 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#delete from rtest_t4;
[ 10	]
#delete from rtest_t5;
[ 0	]
#delete from rtest_t6;
[ 0	]
#delete from rtest_t7;
[ 0	]
#delete from rtest_t8;
[ 0	]
#insert into rtest_t9 values (1, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t9 values (2, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t9 values (10, 'Record should go to rtest_t5');
[ 1	]
#insert into rtest_t9 values (15, 'Record should go to rtest_t5');
[ 1	]
#insert into rtest_t9 values (19, 'Record should go to rtest_t5 and t7');
[ 1	]
#insert into rtest_t9 values (20, 'Record should go to rtest_t4 and t6');
[ 1	]
#insert into rtest_t9 values (26, 'Record should go to rtest_t4 and t8');
[ 1	]
#insert into rtest_t9 values (28, 'Record should go to rtest_t4 and t8');
[ 1	]
#insert into rtest_t9 values (30, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t9 values (40, 'Record should go to rtest_t4');
[ 1	]
#insert into rtest_t4 select * from rtest_t9 where a < 20;
[ 5	]
#select * from rtest_t4;
% sys.rtest_t4,	sys.rtest_t4 # table_name
% a,	b # name
% int,	clob # type
% 2,	35 # length
[ 1,	"Record should go to rtest_t4"	]
[ 2,	"Record should go to rtest_t4"	]
[ 10,	"Record should go to rtest_t5"	]
[ 15,	"Record should go to rtest_t5"	]
[ 19,	"Record should go to rtest_t5 and t7"	]
#select * from rtest_t5;
% sys.rtest_t5,	sys.rtest_t5 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t6;
% sys.rtest_t6,	sys.rtest_t6 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t7;
% sys.rtest_t7,	sys.rtest_t7 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t8;
% sys.rtest_t8,	sys.rtest_t8 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t4;
% sys.rtest_t4,	sys.rtest_t4 # table_name
% a,	b # name
% int,	clob # type
% 2,	35 # length
[ 1,	"Record should go to rtest_t4"	]
[ 2,	"Record should go to rtest_t4"	]
[ 10,	"Record should go to rtest_t5"	]
[ 15,	"Record should go to rtest_t5"	]
[ 19,	"Record should go to rtest_t5 and t7"	]
#select * from rtest_t5;
% sys.rtest_t5,	sys.rtest_t5 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t6;
% sys.rtest_t6,	sys.rtest_t6 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t7;
% sys.rtest_t7,	sys.rtest_t7 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t8;
% sys.rtest_t8,	sys.rtest_t8 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#insert into rtest_t4 select a + 1, b from rtest_t9 where a in (20, 30, 40);
[ 3	]
#select * from rtest_t4;
% sys.rtest_t4,	sys.rtest_t4 # table_name
% a,	b # name
% int,	clob # type
% 2,	35 # length
[ 1,	"Record should go to rtest_t4"	]
[ 2,	"Record should go to rtest_t4"	]
[ 10,	"Record should go to rtest_t5"	]
[ 15,	"Record should go to rtest_t5"	]
[ 19,	"Record should go to rtest_t5 and t7"	]
[ 21,	"Record should go to rtest_t4 and t6"	]
[ 31,	"Record should go to rtest_t4"	]
[ 41,	"Record should go to rtest_t4"	]
#select * from rtest_t5;
% sys.rtest_t5,	sys.rtest_t5 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t6;
% sys.rtest_t6,	sys.rtest_t6 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t7;
% sys.rtest_t7,	sys.rtest_t7 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_t8;
% sys.rtest_t8,	sys.rtest_t8 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#insert into rtest_order1 values (1);
[ 1	]
#select * from rtest_order2;
% sys.rtest_order2,	sys.rtest_order2,	sys.rtest_order2 # table_name
% a,	b,	c # name
% int,	int,	clob # type
% 1,	1,	0 # length
#insert into rtest_nothn1 values (1, 'want this');
[ 1	]
#insert into rtest_nothn1 values (2, 'want this');
[ 1	]
#insert into rtest_nothn1 values (10, 'don''t want this');
[ 1	]
#insert into rtest_nothn1 values (19, 'don''t want this');
[ 1	]
#insert into rtest_nothn1 values (20, 'want this');
[ 1	]
#insert into rtest_nothn1 values (29, 'want this');
[ 1	]
#insert into rtest_nothn1 values (30, 'don''t want this');
[ 1	]
#insert into rtest_nothn1 values (39, 'don''t want this');
[ 1	]
#insert into rtest_nothn1 values (40, 'want this');
[ 1	]
#insert into rtest_nothn1 values (50, 'want this');
[ 1	]
#insert into rtest_nothn1 values (60, 'want this');
[ 1	]
#select * from rtest_nothn1;
% sys.rtest_nothn1,	sys.rtest_nothn1 # table_name
% a,	b # name
% int,	clob # type
% 2,	15 # length
[ 1,	"want this"	]
[ 2,	"want this"	]
[ 10,	"don't want this"	]
[ 19,	"don't want this"	]
[ 20,	"want this"	]
[ 29,	"want this"	]
[ 30,	"don't want this"	]
[ 39,	"don't want this"	]
[ 40,	"want this"	]
[ 50,	"want this"	]
[ 60,	"want this"	]
#insert into rtest_nothn2 values (10, 'too small');
[ 1	]
#insert into rtest_nothn2 values (50, 'too small');
[ 1	]
#insert into rtest_nothn2 values (100, 'OK');
[ 1	]
#insert into rtest_nothn2 values (200, 'OK');
[ 1	]
#select * from rtest_nothn2;
% sys.rtest_nothn2,	sys.rtest_nothn2 # table_name
% a,	b # name
% int,	clob # type
% 3,	9 # length
[ 10,	"too small"	]
[ 50,	"too small"	]
[ 100,	"OK"	]
[ 200,	"OK"	]
#select * from rtest_nothn3;
% sys.rtest_nothn3,	sys.rtest_nothn3 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#delete from rtest_nothn1;
[ 11	]
#delete from rtest_nothn2;
[ 4	]
#delete from rtest_nothn3;
[ 0	]
#insert into rtest_nothn4 values (1, 'want this');
[ 1	]
#insert into rtest_nothn4 values (2, 'want this');
[ 1	]
#insert into rtest_nothn4 values (10, 'don''t want this');
[ 1	]
#insert into rtest_nothn4 values (19, 'don''t want this');
[ 1	]
#insert into rtest_nothn4 values (20, 'want this');
[ 1	]
#insert into rtest_nothn4 values (29, 'want this');
[ 1	]
#insert into rtest_nothn4 values (30, 'don''t want this');
[ 1	]
#insert into rtest_nothn4 values (39, 'don''t want this');
[ 1	]
#insert into rtest_nothn4 values (40, 'want this');
[ 1	]
#insert into rtest_nothn4 values (50, 'want this');
[ 1	]
#insert into rtest_nothn4 values (60, 'want this');
[ 1	]
#insert into rtest_nothn1 select * from rtest_nothn4;
[ 11	]
#select * from rtest_nothn1;
% sys.rtest_nothn1,	sys.rtest_nothn1 # table_name
% a,	b # name
% int,	clob # type
% 2,	15 # length
[ 1,	"want this"	]
[ 2,	"want this"	]
[ 10,	"don't want this"	]
[ 19,	"don't want this"	]
[ 20,	"want this"	]
[ 29,	"want this"	]
[ 30,	"don't want this"	]
[ 39,	"don't want this"	]
[ 40,	"want this"	]
[ 50,	"want this"	]
[ 60,	"want this"	]
#delete from rtest_nothn4;
[ 11	]
#insert into rtest_nothn4 values (10, 'too small');
[ 1	]
#insert into rtest_nothn4 values (50, 'too small');
[ 1	]
#insert into rtest_nothn4 values (100, 'OK');
[ 1	]
#insert into rtest_nothn4 values (200, 'OK');
[ 1	]
#insert into rtest_nothn2 select * from rtest_nothn4;
[ 4	]
#select * from rtest_nothn2;
% sys.rtest_nothn2,	sys.rtest_nothn2 # table_name
% a,	b # name
% int,	clob # type
% 3,	9 # length
[ 10,	"too small"	]
[ 50,	"too small"	]
[ 100,	"OK"	]
[ 200,	"OK"	]
#select * from rtest_nothn3;
% sys.rtest_nothn3,	sys.rtest_nothn3 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#create table rtest_view1 (a integer, b text, v bool);
#create table rtest_view2 (a integer);
#create table rtest_view3 (a integer, b text);
#create table rtest_view4 (a integer, b text, c integer);
#create view rtest_vview1 as select a, b from rtest_view1 X 
#	where 0 < (select count(*) from rtest_view2 Y where Y.a = X.a);
#create view rtest_vview2 as select a, b from rtest_view1 where v;
#create view rtest_vview3 as select a, b from rtest_vview2 X
#	where 0 < (select count(*) from rtest_view2 Y where Y.a = X.a);
#create view rtest_vview4 as select X.a, X.b, count(Y.a) as refcount
#	from rtest_view1 X, rtest_view2 Y
#	where X.a = Y.a
#	group by X.a, X.b;
#insert into rtest_view2 values (2);
[ 1	]
#insert into rtest_view2 values (2);
[ 1	]
#insert into rtest_view2 values (4);
[ 1	]
#insert into rtest_view2 values (5);
[ 1	]
#insert into rtest_view2 values (7);
[ 1	]
#insert into rtest_view2 values (7);
[ 1	]
#insert into rtest_view2 values (7);
[ 1	]
#insert into rtest_view2 values (7);
[ 1	]
#select * from rtest_vview1;
% sys.rtest_vview1,	sys.rtest_vview1 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_vview2;
% sys.rtest_vview2,	sys.rtest_vview2 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_vview3;
% sys.rtest_vview3,	sys.rtest_vview3 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#select * from rtest_vview4 order by a, b;
% sys.rtest_vview4,	sys.rtest_vview4,	sys.rtest_vview4 # table_name
% a,	b,	refcount # name
% int,	clob,	wrd # type
% 1,	0,	1 # length
#insert into rtest_view3 select * from rtest_vview1 where a < 7;
[ 0	]
#select * from rtest_view3;
% sys.rtest_view3,	sys.rtest_view3 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#delete from rtest_view3;
[ 0	]
#select * from rtest_view3;
% sys.rtest_view3,	sys.rtest_view3 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#delete from rtest_view3;
[ 0	]
#insert into rtest_view3 select * from rtest_vview3;
[ 0	]
#select * from rtest_view3;
% sys.rtest_view3,	sys.rtest_view3 # table_name
% a,	b # name
% int,	clob # type
% 1,	0 # length
#delete from rtest_view3;
[ 0	]
#insert into rtest_view4 select * from rtest_vview4 where 3 > refcount;
[ 0	]
#select * from rtest_view4 order by a, b;
% sys.rtest_view4,	sys.rtest_view4,	sys.rtest_view4 # table_name
% a,	b,	c # name
% int,	clob,	int # type
% 1,	0,	1 # length
#delete from rtest_view4;
[ 0	]
#select * from rtest_view4;
% sys.rtest_view4,	sys.rtest_view4,	sys.rtest_view4 # table_name
% a,	b,	c # name
% int,	clob,	int # type
% 1,	0,	1 # length
#delete from rtest_view4;
[ 0	]
#create table rtest_comp (
#	part	text,
#	unit	char(4),
#	size	float
#);
#create table rtest_unitfact (
#	unit	char(4),
#	factor	float
#);
#create view rtest_vcomp as 
#	select X.part, (X.size * Y.factor) as size_in_cm
#			from rtest_comp X, rtest_unitfact Y
#			where X.unit = Y.unit;
#insert into rtest_unitfact values ('m', 100.0);
[ 1	]
#insert into rtest_unitfact values ('cm', 1.0);
[ 1	]
#insert into rtest_unitfact values ('inch', 2.54);
[ 1	]
#insert into rtest_comp values ('p1', 'm', 5.0);
[ 1	]
#insert into rtest_comp values ('p2', 'm', 3.0);
[ 1	]
#insert into rtest_comp values ('p3', 'cm', 5.0);
[ 1	]
#insert into rtest_comp values ('p4', 'cm', 15.0);
[ 1	]
#insert into rtest_comp values ('p5', 'inch', 7.0);
[ 1	]
#insert into rtest_comp values ('p6', 'inch', 4.4);
[ 1	]
#select * from rtest_vcomp order by part;
% sys.rtest_vcomp,	sys.rtest_vcomp # table_name
% part,	size_in_cm # name
% clob,	double # type
% 2,	24 # length
[ "p1",	500	]
[ "p2",	300	]
[ "p3",	5	]
[ "p4",	15	]
[ "p5",	17	]
[ "p6",	11	]
#CREATE TABLE shoe_data (
#	shoename   char(10),      -- primary key
#	sh_avail   integer,       -- available # of pairs
#	slcolor    char(10),      -- preferred shoelace color
#	slminlen   float,         -- miminum shoelace length
#	slmaxlen   float,         -- maximum shoelace length
#	slunit     char(8)        -- length unit
#);
#CREATE TABLE shoelace_data (
#	sl_name    char(10),      -- primary key
#	sl_avail   integer,       -- available # of pairs
#	sl_color   char(10),      -- shoelace color
#	sl_len     float,         -- shoelace length
#	sl_unit    char(8)        -- length unit
#);
#CREATE TABLE unit (
#	un_name    char(8),       -- the primary key
#	un_fact    float          -- factor to transform to cm
#);
#CREATE VIEW shoe AS
#	SELECT sh.shoename,
#		   sh.sh_avail,
#		   sh.slcolor,
#		   sh.slminlen,
#		   sh.slminlen * un.un_fact AS slminlen_cm,
#		   sh.slmaxlen,
#		   sh.slmaxlen * un.un_fact AS slmaxlen_cm,
#		   sh.slunit
#	  FROM shoe_data sh, unit un
#	 WHERE sh.slunit = un.un_name;
#CREATE VIEW shoelace AS
#	SELECT s.sl_name,
#		   s.sl_avail,
#		   s.sl_color,
#		   s.sl_len,
#		   s.sl_unit,
#		   s.sl_len * u.un_fact AS sl_len_cm
#	  FROM shoelace_data s, unit u
#	 WHERE s.sl_unit = u.un_name;
#INSERT INTO unit VALUES ('cm', 1.0);
[ 1	]
#INSERT INTO unit VALUES ('m', 100.0);
[ 1	]
#INSERT INTO unit VALUES ('inch', 2.54);
[ 1	]
#INSERT INTO shoe_data VALUES ('sh1', 2, 'black', 70.0, 90.0, 'cm');
[ 1	]
#INSERT INTO shoe_data VALUES ('sh2', 0, 'black', 30.0, 40.0, 'inch');
[ 1	]
#INSERT INTO shoe_data VALUES ('sh3', 4, 'brown', 50.0, 65.0, 'cm');
[ 1	]
#INSERT INTO shoe_data VALUES ('sh4', 3, 'brown', 40.0, 50.0, 'inch');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl1', 5, 'black', 80.0, 'cm');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl2', 6, 'black', 100.0, 'cm');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl3', 0, 'black', 35.0 , 'inch');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl4', 8, 'black', 40.0 , 'inch');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl5', 4, 'brown', 1.0 , 'm');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl6', 0, 'brown', 0.9 , 'm');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl7', 7, 'brown', 60 , 'cm');
[ 1	]
#INSERT INTO shoelace_data VALUES ('sl8', 1, 'brown', 40 , 'inch');
[ 1	]
#SELECT * FROM shoelace ORDER BY sl_name;
% sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace # table_name
% sl_name,	sl_avail,	sl_color,	sl_len,	sl_unit,	sl_len_cm # name
% char,	int,	char,	double,	char,	double # type
% 10,	1,	10,	24,	8,	24 # length
[ "sl1",	5,	"black",	80,	"cm",	80	]
[ "sl2",	6,	"black",	100,	"cm",	100	]
[ "sl3",	0,	"black",	35,	"inch",	88	]
[ "sl4",	8,	"black",	40,	"inch",	101	]
[ "sl5",	4,	"brown",	1,	"m",	100	]
[ "sl6",	0,	"brown",	0,	"m",	90	]
[ "sl7",	7,	"brown",	60,	"cm",	60	]
[ "sl8",	1,	"brown",	40,	"inch",	101	]
#CREATE TABLE shoelace_log (
#        sl_name    char(10),      -- shoelace changed
#        sl_avail   integer,       -- new available value
#        log_who    string,          -- who did it
#        log_when   timestamp      -- when
#    );
#UPDATE shoelace_data SET sl_avail = 6 WHERE  sl_name = 'sl7';
[ 1	]
#SELECT * FROM shoelace_log;
% sys.shoelace_log,	sys.shoelace_log,	sys.shoelace_log,	sys.shoelace_log # table_name
% sl_name,	sl_avail,	log_who,	log_when # name
% char,	int,	clob,	timestamp # type
% 10,	1,	0,	26 # length
#CREATE TABLE shoelace_arrive (
#        arr_name    char(10),
#        arr_quant   integer
#    );
#CREATE TABLE shoelace_ok (
#        ok_name     char(10),
#        ok_quant    integer
#    );
#INSERT INTO shoelace_arrive VALUES ('sl3', 10);
[ 1	]
#INSERT INTO shoelace_arrive VALUES ('sl6', 20);
[ 1	]
#INSERT INTO shoelace_arrive VALUES ('sl8', 20);
[ 1	]
#SELECT * FROM shoelace ORDER BY sl_name;
% sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace # table_name
% sl_name,	sl_avail,	sl_color,	sl_len,	sl_unit,	sl_len_cm # name
% char,	int,	char,	double,	char,	double # type
% 10,	1,	10,	24,	8,	24 # length
[ "sl1",	5,	"black",	80,	"cm",	80	]
[ "sl2",	6,	"black",	100,	"cm",	100	]
[ "sl3",	0,	"black",	35,	"inch",	88	]
[ "sl4",	8,	"black",	40,	"inch",	101	]
[ "sl5",	4,	"brown",	1,	"m",	100	]
[ "sl6",	0,	"brown",	0,	"m",	90	]
[ "sl7",	6,	"brown",	60,	"cm",	60	]
[ "sl8",	1,	"brown",	40,	"inch",	101	]
#insert into shoelace_ok select * from shoelace_arrive;
[ 3	]
#SELECT * FROM shoelace ORDER BY sl_name;
% sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace # table_name
% sl_name,	sl_avail,	sl_color,	sl_len,	sl_unit,	sl_len_cm # name
% char,	int,	char,	double,	char,	double # type
% 10,	1,	10,	24,	8,	24 # length
[ "sl1",	5,	"black",	80,	"cm",	80	]
[ "sl2",	6,	"black",	100,	"cm",	100	]
[ "sl3",	0,	"black",	35,	"inch",	88	]
[ "sl4",	8,	"black",	40,	"inch",	101	]
[ "sl5",	4,	"brown",	1,	"m",	100	]
[ "sl6",	0,	"brown",	0,	"m",	90	]
[ "sl7",	6,	"brown",	60,	"cm",	60	]
[ "sl8",	1,	"brown",	40,	"inch",	101	]
#SELECT * FROM shoelace_log ORDER BY sl_name;
% sys.shoelace_log,	sys.shoelace_log,	sys.shoelace_log,	sys.shoelace_log # table_name
% sl_name,	sl_avail,	log_who,	log_when # name
% char,	int,	clob,	timestamp # type
% 10,	1,	0,	26 # length
#CREATE VIEW shoelace_obsolete AS
#	SELECT * FROM shoelace WHERE NOT EXISTS
#	    (SELECT shoename FROM shoe WHERE slcolor = sl_color);
#CREATE VIEW shoelace_candelete AS
#	SELECT * FROM shoelace_obsolete WHERE sl_avail = 0;
#SELECT * FROM shoelace_obsolete;
% sys.shoelace_obsolete,	sys.shoelace_obsolete,	sys.shoelace_obsolete,	sys.shoelace_obsolete,	sys.shoelace_obsolete,	sys.shoelace_obsolete # table_name
% sl_name,	sl_avail,	sl_color,	sl_len,	sl_unit,	sl_len_cm # name
% char,	int,	char,	double,	char,	double # type
% 10,	1,	10,	24,	8,	24 # length
#SELECT * FROM shoelace_candelete;
% sys.shoelace_candelete,	sys.shoelace_candelete,	sys.shoelace_candelete,	sys.shoelace_candelete,	sys.shoelace_candelete,	sys.shoelace_candelete # table_name
% sl_name,	sl_avail,	sl_color,	sl_len,	sl_unit,	sl_len_cm # name
% char,	int,	char,	double,	char,	double # type
% 10,	1,	10,	24,	8,	24 # length
#SELECT * FROM shoelace ORDER BY sl_name;
% sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace,	sys.shoelace # table_name
% sl_name,	sl_avail,	sl_color,	sl_len,	sl_unit,	sl_len_cm # name
% char,	int,	char,	double,	char,	double # type
% 10,	1,	10,	24,	8,	24 # length
[ "sl1",	5,	"black",	80,	"cm",	80	]
[ "sl2",	6,	"black",	100,	"cm",	100	]
[ "sl3",	0,	"black",	35,	"inch",	88	]
[ "sl4",	8,	"black",	40,	"inch",	101	]
[ "sl5",	4,	"brown",	1,	"m",	100	]
[ "sl6",	0,	"brown",	0,	"m",	90	]
[ "sl7",	6,	"brown",	60,	"cm",	60	]
[ "sl8",	1,	"brown",	40,	"inch",	101	]
#SELECT * FROM shoe ORDER BY shoename;
% sys.shoe,	sys.shoe,	sys.shoe,	sys.shoe,	sys.shoe,	sys.shoe,	sys.shoe,	sys.shoe # table_name
% shoename,	sh_avail,	slcolor,	slminlen,	slminlen_cm,	slmaxlen,	slmaxlen_cm,	slunit # name
% char,	int,	char,	double,	double,	double,	double,	char # type
% 10,	1,	10,	24,	24,	24,	24,	8 # length
[ "sh1",	2,	"black",	70,	70,	90,	90,	"cm"	]
[ "sh2",	0,	"black",	30,	76,	40,	101,	"inch"	]
[ "sh3",	4,	"brown",	50,	50,	65,	65,	"cm"	]
[ "sh4",	3,	"brown",	40,	101,	50,	127,	"inch"	]
#SELECT count(*) FROM shoe;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 1 # length
[ 4	]
#create table foo (f1 int);
#create table foo2 (f1 int);
#insert into foo values(1);
[ 1	]
#insert into foo values(1001);
[ 1	]
#select * from foo;
% sys.foo # table_name
% f1 # name
% int # type
% 4 # length
[ 1	]
[ 1001	]
#insert into foo values(2);
[ 1	]
#insert into foo values(100);
[ 1	]
#select * from foo;
% sys.foo # table_name
% f1 # name
% int # type
% 4 # length
[ 1	]
[ 1001	]
[ 2	]
[ 100	]
#select * from foo2;
% sys.foo2 # table_name
% f1 # name
% int # type
% 1 # length
#drop table foo;
#drop table foo2;
#create table pparent (pid int, txt text);
#insert into pparent values (1,'parent1');
[ 1	]
#insert into pparent values (2,'parent2');
[ 1	]
#create table cchild (pid int, descrip text);
#insert into cchild values (1,'descrip1');
[ 1	]
#select * from cchild;
% sys.cchild,	sys.cchild # table_name
% pid,	descrip # name
% int,	clob # type
% 1,	8 # length
[ 1,	"descrip1"	]
#drop table pparent;
#drop table cchild;
#CREATE TABLE ruletest_tbl (a int, b int);
#CREATE TABLE ruletest_tbl2 (a int, b int);
#INSERT INTO ruletest_tbl VALUES (99, 99);
[ 1	]
#INSERT INTO ruletest_tbl VALUES (99, 99);
[ 1	]
#SELECT * FROM ruletest_tbl2;
% sys.ruletest_tbl2,	sys.ruletest_tbl2 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
#create table rule_and_refint_t1 (
#	id1a integer,
#	id1b integer,
#	
#	primary key (id1a, id1b)
#);
#create table rule_and_refint_t2 (
#	id2a integer,
#	id2c integer,
#	
#	primary key (id2a, id2c)
#);
#create table rule_and_refint_t3 (
#	id3a integer,
#	id3b integer,
#	id3c integer,
#	data text,
#
#	primary key (id3a, id3b, id3c),
#
#	foreign key (id3a, id3b) references rule_and_refint_t1 (id1a, id1b),
#	foreign key (id3a, id3c) references rule_and_refint_t2 (id2a, id2c)
#);
#insert into rule_and_refint_t1 values (1, 11);
[ 1	]
#insert into rule_and_refint_t1 values (1, 12);
[ 1	]
#insert into rule_and_refint_t1 values (2, 21);
[ 1	]
#insert into rule_and_refint_t1 values (2, 22);
[ 1	]
#insert into rule_and_refint_t2 values (1, 11);
[ 1	]
#insert into rule_and_refint_t2 values (1, 12);
[ 1	]
#insert into rule_and_refint_t2 values (2, 21);
[ 1	]
#insert into rule_and_refint_t2 values (2, 22);
[ 1	]
#insert into rule_and_refint_t3 values (1, 11, 11, 'row1');
[ 1	]
#insert into rule_and_refint_t3 values (1, 11, 12, 'row2');
[ 1	]
#insert into rule_and_refint_t3 values (1, 12, 11, 'row3');
[ 1	]
#insert into rule_and_refint_t3 values (1, 12, 12, 'row4');
[ 1	]
#create table test_1 (id integer primary key);
#create table test_2 (id integer primary key);
#create table test_3 (id integer primary key);

# 17:11:15 >  
# 17:11:15 >  "Done."
# 17:11:15 >  

