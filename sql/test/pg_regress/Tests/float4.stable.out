stdout of test 'float` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

Ready.

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- float
#--
#CREATE TABLE FLOAT4_TBL (f1  float);
#INSERT INTO FLOAT4_TBL(f1) VALUES ('    0.0');
[ 1 ]
#INSERT INTO FLOAT4_TBL(f1) VALUES ('1004.30   ');
[ 1 ]
#INSERT INTO FLOAT4_TBL(f1) VALUES ('     -34.84    ');
[ 1 ]
#INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e+20');
[ 1 ]
#INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e-20');
[ 1 ]
#-- test for over and under flow 
#
#
#
#
#-- bad input
#
#
#
#
#
#
#
#-- special inputs
#SELECT 'NaN'::float;
% sys.L0 # table_name
% float # name
% ? # type
% ? # length
[ "NaN" ]

#SELECT 'nan'::float;
% sys.L0 # table_name
% float # name
% ? # type
% ? # length
[ "NaN" ]

#SELECT '   NAN  '::float;
% sys.L0 # table_name
% float # name
% ? # type
% ? # length
[ "NaN" ]

#SELECT 'infinity'::float;
% sys.L0 # table_name
% float # name
% ? # type
% ? # length
[ "Infinity" ]

#SELECT '          -INFINiTY   '::float;
% sys.L0 # table_name
% float # name
% ? # type
% ? # length
[ "-Infinity" ]

#-- bad special inputs
#
#
#
#
#SELECT 'Infinity'::float / 'Infinity'::float;
% sys.L0 # table_name
% ?column? # name
% ? # type
% ? # length
[ "NaN" ]

#SELECT 'nan'::float / 'nan'::float;
% sys.L0 # table_name
% ?column? # name
% ? # type
% ? # length
[ "NaN" ]

#SELECT '' AS five, FLOAT4_TBL.*;
% sys.L0,	sys.L0 # table_name
% five,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	1004.3 ]
[ "",	-34.84 ]
[ "",	"1.23457e+20" ]
[ "",	"1.23457e-20" ]

#SELECT '' AS four, f.* FROM FLOAT4_TBL f WHERE f.f1 <> '1004.3';
% sys.L0,	sys.L0 # table_name
% four,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	-34.84 ]
[ "",	"1.23457e+20" ]
[ "",	"1.23457e-20" ]

#SELECT '' AS one, f.* FROM FLOAT4_TBL f WHERE f.f1 = '1004.3';
% sys.L0,	sys.L0 # table_name
% one,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	1004.3 ]

#SELECT '' AS three, f.* FROM FLOAT4_TBL f WHERE '1004.3' > f.f1;
% sys.L0,	sys.L0 # table_name
% three,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	-34.84 ]
[ "",	"1.23457e-20" ]

#SELECT '' AS three, f.* FROM FLOAT4_TBL f WHERE  f.f1 < '1004.3';
% sys.L0,	sys.L0 # table_name
% three,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	-34.84 ]
[ "",	"1.23457e-20" ]

#SELECT '' AS four, f.* FROM FLOAT4_TBL f WHERE '1004.3' >= f.f1;
% sys.L0,	sys.L0 # table_name
% four,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	1004.3 ]
[ "",	-34.84 ]
[ "",	"1.23457e-20" ]

#SELECT '' AS four, f.* FROM FLOAT4_TBL f WHERE  f.f1 <= '1004.3';
% sys.L0,	sys.L0 # table_name
% four,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	1004.3 ]
[ "",	-34.84 ]
[ "",	"1.23457e-20" ]

#SELECT '' AS three, f.f1, f.f1 * '-10' AS x FROM FLOAT4_TBL f
#   WHERE f.f1 > '0.0';
% sys.L0,	sys.L0,	sys.L0 # table_name
% three,	f1,	x # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	1004.3,	-10043 ]
[ "",	"1.23457e+20",	"-1.23457e+21" ]
[ "",	"1.23457e-20",	"-1.23457e-19" ]

#SELECT '' AS three, f.f1, f.f1 + '-10' AS x FROM FLOAT4_TBL f
#   WHERE f.f1 > '0.0';
% sys.L0,	sys.L0,	sys.L0 # table_name
% three,	f1,	x # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	1004.3,	994.3 ]
[ "",	"1.23457e+20",	"1.23457e+20" ]
[ "",	"1.23457e-20",	-10 ]

#SELECT '' AS three, f.f1, f.f1 / '-10' AS x FROM FLOAT4_TBL f
#   WHERE f.f1 > '0.0';
% sys.L0,	sys.L0,	sys.L0 # table_name
% three,	f1,	x # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	1004.3,	-100.43 ]
[ "",	"1.23457e+20",	"-1.23457e+19" ]
[ "",	"1.23457e-20",	"-1.23457e-21" ]

#SELECT '' AS three, f.f1, f.f1 - '-10' AS x FROM FLOAT4_TBL f
#   WHERE f.f1 > '0.0';
% sys.L0,	sys.L0,	sys.L0 # table_name
% three,	f1,	x # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	1004.3,	1014.3 ]
[ "",	"1.23457e+20",	"1.23457e+20" ]
[ "",	"1.23457e-20",	10 ]

#-- test divide by zero
#
#SELECT '' AS five, FLOAT4_TBL.*;
% sys.L0,	sys.L0 # table_name
% five,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	1004.3 ]
[ "",	-34.84 ]
[ "",	"1.23457e+20" ]
[ "",	"1.23457e-20" ]

#-- test the unary float4abs operator 
#SELECT '' AS five, f.f1, @f.f1 AS abs_f1 FROM FLOAT4_TBL f;
% sys.L0,	sys.L0,	sys.L0 # table_name
% five,	f1,	abs_f1 # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "",	0,	0 ]
[ "",	1004.3,	1004.3 ]
[ "",	-34.84,	34.84 ]
[ "",	"1.23457e+20",	"1.23457e+20" ]
[ "",	"1.23457e-20",	"1.23457e-20" ]

#UPDATE FLOAT4_TBL
#   SET f1 = FLOAT4_TBL.f1 * '-1'
#   WHERE FLOAT4_TBL.f1 > '0.0';
#SELECT '' AS five, FLOAT4_TBL.*;
% sys.L0,	sys.L0 # table_name
% five,	f1 # name
% ?,	? # type
% ?,	? # length
[ "",	0 ]
[ "",	-34.84 ]
[ "",	-1004.3 ]
[ "",	"-1.23457e+20" ]
[ "",	"-1.23457e-20" ]


= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

