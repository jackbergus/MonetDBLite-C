stderr of test 'plpgsql` in directory 'sql/test/pg_regress` itself:


# 18:00:05 >  
# 18:00:05 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37199" "--set" "mapi_usock=/var/tmp/mtest-11277/.s.monetdb.37199" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 18:00:05 >  

# builtin opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 37199
# cmdline opt 	mapi_usock = /var/tmp/mtest-11277/.s.monetdb.37199
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress
# cmdline opt 	mal_listing = 0
# cmdline opt 	gdk_debug = 536870922

# 18:00:05 >  
# 18:00:05 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11277" "--port=37199"
# 18:00:05 >  

MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index Room_rno on Room using btree (roomno bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index room_rno on room using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index WSlot_name on WSlot using btree (slotname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index wslot_name on wslot using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index PField_name on PField using btree (name text_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index pfield_name on pfield using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index PSlot_name on PSlot using btree (slotname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index pslot_name on pslot using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index PLine_name on PLine using btree (slotname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index pline_name on pline using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index Hub_name on Hub using btree (name bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index hub_name on hub using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index HSlot_name on HSlot using btree (slotname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index hslot_name on hslot using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create index HSlot_hubname on HSlot using btree (hubname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create index hslot_hubname on hslot using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index System_name on System using btree (name text_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index system_name on system using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index IFace_name on IFace using btree (slotname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index iface_name on iface using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create unique index PHone_name on PHone using btree (slotname bpchar_ops);
ERROR = !syntax error, unexpected USING, expecting '(' in: "create unique index phone_name on phone using"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_room_au() returns trigger as '
        begin
            if new.roomno != old.roomno then
                update WSlot set roomno = new.roomno where roomno = old.roomno;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_room_au() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_room_au after update
            on Room for each row execute procedure tg_room_au();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_room_au after update
        !    on room for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_room_ad() returns trigger as '
        begin
            delete from WSlot where roomno = old.roomno;
            return old;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_room_ad() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_room_ad after delete
            on Room for each row execute procedure tg_room_ad();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_room_ad after delete
        !    on room for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_wslot_biu() returns trigger as $$
        begin
            if count(*) = 0 from Room where roomno = new.roomno then
                raise exception 'Room % does not exist', new.roomno;
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_wslot_biu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end if;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return new;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = $$ language plpgsql;
ERROR = !unexpected symbol ($)
        !unexpected symbol ($)
        !syntax error, unexpected LANGUAGE in: "language"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_wslot_biu before insert or update
            on WSlot for each row execute procedure tg_wslot_biu();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_wslot_biu before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_pfield_au() returns trigger as '
        begin
            if new.name != old.name then
                update PSlot set pfname = new.name where pfname = old.name;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_pfield_au() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_pfield_au after update
            on PField for each row execute procedure tg_pfield_au();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_pfield_au after update
        !    on pfield for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_pfield_ad() returns trigger as '
        begin
            delete from PSlot where pfname = old.name;
            return old;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_pfield_ad() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_pfield_ad after delete
            on PField for each row execute procedure tg_pfield_ad();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_pfield_ad after delete
        !    on pfield for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_pslot_biu() returns trigger as $proc$
        declare
            pfrec	record;
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_pslot_biu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = rename new to ps;
ERROR = !syntax error, unexpected RENAME in: "rename"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
            select into pfrec * from PField where name = ps.pfname;
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = if not found then
                raise exception $$Patchfield "%" does not exist$$, ps.pfname;
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end if;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return ps;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = $proc$ language plpgsql;
ERROR = !unexpected symbol ($)
        !syntax error, unexpected IDENT in: "proc"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_pslot_biu before insert or update
            on PSlot for each row execute procedure tg_pslot_biu();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_pslot_biu before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_system_au() returns trigger as '
        begin
            if new.name != old.name then
                update IFace set sysname = new.name where sysname = old.name;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_system_au() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_system_au after update
            on System for each row execute procedure tg_system_au();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_system_au after update
        !    on system for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_iface_biu() returns trigger as $$
        declare
            sname	text;
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_iface_biu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sysrec	record;
ERROR = !syntax error, unexpected IDENT in: "sysrec"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
            select into sysrec * from system where name = new.sysname;
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = if not found then
                raise exception $q$system "%" does not exist$q$, new.sysname;
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end if;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sname := 'IF.' || new.sysname;
ERROR = !syntax error, unexpected IDENT in: "sname"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sname := sname || '.';
ERROR = !syntax error, unexpected IDENT in: "sname"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sname := sname || new.ifname;
ERROR = !syntax error, unexpected IDENT in: "sname"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = if length(sname) > 20 then
                raise exception 'IFace slotname "%" too long (20 char max)', sname;
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end if;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = new.slotname := sname;
ERROR = !syntax error, unexpected sqlNEW in: "new"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return new;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = $$ language plpgsql;
ERROR = !unexpected symbol ($)
        !unexpected symbol ($)
        !syntax error, unexpected LANGUAGE in: "language"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_iface_biu before insert or update
            on IFace for each row execute procedure tg_iface_biu();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_iface_biu before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_hub_a() returns trigger as '
        declare
            hname	text;
            dummy	integer;
        begin
            if tg_op = ''INSERT'' then
        	dummy := tg_hub_adjustslots(new.string, 0, new.nslots);
        	return new;
            end if;
            if tg_op = ''UPDATE'' then
        	if new.name != old.name then
        	    update HSlot set hubname = new.name where hubname = old.name;
        	end if;
        	dummy := tg_hub_adjustslots(new.string, old.nslots, new.nslots);
        	return new;
            end if;
            if tg_op = ''DELETE'' then
        	dummy := tg_hub_adjustslots(old.string, old.nslots, 0);
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_hub_a() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_hub_a after insert or update or delete
            on Hub for each row execute procedure tg_hub_a();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_hub_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_hub_adjustslots(hname bpchar,
ERROR = !type (bpchar) unknown in: "create function tg_hub_adjustslots(hname bpchar,"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = oldnslots integer,
                                           newnslots integer)
        returns integer as '
        begin
            if newnslots = oldnslots then
                return 0;
            end if;
            if newnslots < oldnslots then
                delete from HSlot where hubname = hname and slotno > newnslots;
        	return 0;
            end if;
            for i in oldnslots + 1 .. newnslots loop
                insert into HSlot (slotname, hubname, slotno, slotlink)
        		values (''HS.dummy'', hname, i, '''');
            end loop;
            return 0;
        end
        ' language 'plpgsql';
ERROR = !syntax error, unexpected IDENT in: "oldnslots"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_hslot_biu() returns trigger as '
        declare
            sname	text;
            xname	HSlot.slotname%TYPE;
            hubrec	record;
        begin
            select into hubrec * from Hub where name = new.hubname;
            if not found then
                raise exception ''no manual manipulation of HSlot'';
            end if;
            if new.slotno < 1 or new.slotno > hubrec.nslots then
                raise exception ''no manual manipulation of HSlot'';
            end if;
            if tg_op = ''UPDATE'' then
        	if new.hubname != old.hubname then
        	    if count(*) > 0 from Hub where name = old.hubname then
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_hslot_biu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_hslot_biu before insert or update
            on HSlot for each row execute procedure tg_hslot_biu();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_hslot_biu before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_hslot_bd() returns trigger as '
        declare
            hubrec	record;
        begin
            select into hubrec * from Hub where name = old.hubname;
            if not found then
                return old;
            end if;
            if old.slotno > hubrec.nslots then
                return old;
            end if;
            raise exception ''no manual manipulation of HSlot'';
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_hslot_bd() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_hslot_bd before delete
            on HSlot for each row execute procedure tg_hslot_bd();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_hslot_bd before delete
        !    on hslot for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_chkslotname() returns trigger as '
        begin
            if substr(new.slotname, 1, 2) != tg_argv[0] then
                raise exception ''slotname must begin with %'', tg_argv[0];
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_chkslotname() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotname before insert
            on PSlot for each row execute procedure tg_chkslotname('PS');
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_chkslotname before insert
        !    on pslot for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotname before insert
            on WSlot for each row execute procedure tg_chkslotname('WS');
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_chkslotname before insert
        !    on wslot for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotname before insert
            on PLine for each row execute procedure tg_chkslotname('PL');
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_chkslotname before insert
        !    on pline for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotname before insert
            on IFace for each row execute procedure tg_chkslotname('IF');
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_chkslotname before insert
        !    on iface for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotname before insert
            on PHone for each row execute procedure tg_chkslotname('PH');
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_chkslotname before insert
        !    on phone for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_chkslotlink() returns trigger as '
        begin
            if new.slotlink isnull then
                new.slotlink := '''';
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_chkslotlink() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotlink before insert or update
            on PSlot for each row execute procedure tg_chkslotlink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkslotlink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotlink before insert or update
            on WSlot for each row execute procedure tg_chkslotlink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkslotlink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotlink before insert or update
            on IFace for each row execute procedure tg_chkslotlink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkslotlink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotlink before insert or update
            on HSlot for each row execute procedure tg_chkslotlink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkslotlink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkslotlink before insert or update
            on PHone for each row execute procedure tg_chkslotlink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkslotlink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_chkbacklink() returns trigger as '
        begin
            if new.backlink isnull then
                new.backlink := '''';
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_chkbacklink() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkbacklink before insert or update
            on PSlot for each row execute procedure tg_chkbacklink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkbacklink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkbacklink before insert or update
            on WSlot for each row execute procedure tg_chkbacklink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkbacklink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_chkbacklink before insert or update
            on PLine for each row execute procedure tg_chkbacklink();
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_chkbacklink before insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_pslot_bu() returns trigger as '
        begin
            if new.slotname != old.slotname then
                delete from PSlot where slotname = old.slotname;
        	insert into PSlot (
        		    slotname,
        		    pfname,
        		    slotlink,
        		    backlink
        		) values (
        		    new.slotname,
        		    new.pfname,
        		    new.slotlink,
        		    new.backlink
        		);
                return null;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_pslot_bu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_pslot_bu before update
            on PSlot for each row execute procedure tg_pslot_bu();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_pslot_bu before update
        !    on pslot for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_wslot_bu() returns trigger as '
        begin
            if new.slotname != old.slotname then
                delete from WSlot where slotname = old.slotname;
        	insert into WSlot (
        		    slotname,
        		    roomno,
        		    slotlink,
        		    backlink
        		) values (
        		    new.slotname,
        		    new.roomno,
        		    new.slotlink,
        		    new.backlink
        		);
                return null;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_wslot_bu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_wslot_bu before update
            on WSlot for each row execute procedure tg_Wslot_bu();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_wslot_bu before update
        !    on wslot for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_pline_bu() returns trigger as '
        begin
            if new.slotname != old.slotname then
                delete from PLine where slotname = old.slotname;
        	insert into PLine (
        		    slotname,
        		    phonenumber,
        		    comment,
        		    backlink
        		) values (
        		    new.slotname,
        		    new.phonenumber,
        		    new.comment,
        		    new.backlink
        		);
                return null;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_pline_bu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_pline_bu before update
            on PLine for each row execute procedure tg_pline_bu();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_pline_bu before update
        !    on pline for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_iface_bu() returns trigger as '
        begin
            if new.slotname != old.slotname then
                delete from IFace where slotname = old.slotname;
        	insert into IFace (
        		    slotname,
        		    sysname,
        		    ifname,
        		    slotlink
        		) values (
        		    new.slotname,
        		    new.sysname,
        		    new.ifname,
        		    new.slotlink
        		);
                return null;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_iface_bu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_iface_bu before update
            on IFace for each row execute procedure tg_iface_bu();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_iface_bu before update
        !    on iface for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_hslot_bu() returns trigger as '
        begin
            if new.slotname != old.slotname or new.hubname != old.hubname then
                delete from HSlot where slotname = old.slotname;
        	insert into HSlot (
        		    slotname,
        		    hubname,
        		    slotno,
        		    slotlink
        		) values (
        		    new.slotname,
        		    new.hubname,
        		    new.slotno,
        		    new.slotlink
        		);
                return null;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_hslot_bu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_hslot_bu before update
            on HSlot for each row execute procedure tg_hslot_bu();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_hslot_bu before update
        !    on hslot for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_phone_bu() returns trigger as '
        begin
            if new.slotname != old.slotname then
                delete from PHone where slotname = old.slotname;
        	insert into PHone (
        		    slotname,
        		    comment,
        		    slotlink
        		) values (
        		    new.slotname,
        		    new.comment,
        		    new.slotlink
        		);
                return null;
            end if;
            return new;
        COMMIT;
        ' language 'plpgsql';
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_phone_bu() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_phone_bu before update
            on PHone for each row execute procedure tg_phone_bu();
ERROR = !syntax error, unexpected PROCEDURE, expecting ':' in: "create trigger tg_phone_bu before update
        !    on phone for each row execute procedure"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_backlink_a() returns trigger as '
        declare
            dummy	integer;
        begin
            if tg_op = ''INSERT'' then
                if new.backlink != '''' then
        	    dummy := tg_backlink_set(new.backlink, new.slotname);
        	end if;
        	return new;
            end if;
            if tg_op = ''UPDATE'' then
                if new.backlink != old.backlink then
        	    if old.backlink != '''' then
        	        dummy := tg_backlink_unset(old.backlink, old.slotname);
        	    end if;
        	    if new.backlink != '''' then
        	        dummy := tg_backlink_set(new.backlink, new.slotname);
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_backlink_a() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_backlink_a after insert or update or delete
            on PSlot for each row execute procedure tg_backlink_a('PS');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_backlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_backlink_a after insert or update or delete
            on WSlot for each row execute procedure tg_backlink_a('WS');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_backlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_backlink_a after insert or update or delete
            on PLine for each row execute procedure tg_backlink_a('PL');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_backlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_backlink_set(myname bpchar, blname bpchar)
ERROR = !type (bpchar) unknown in: "create function tg_backlink_set(myname bpchar,"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_backlink_set(myname bpchar, blname bpchar)
        returns integer as '
        declare
            mytype	char(2);
            link	char(4);
            rec		record;
        begin
            mytype := substr(myname, 1, 2);
            link := mytype || substr(blname, 1, 2);
            if link = ''PLPL'' then
                raise exception 
        		''backlink between two phone lines does not make sense'';
            end if;
            if link in (''PLWS'', ''WSPL'') then
                raise exception 
        		''direct link of phone line to wall slot not permitted'';
            end if;
            if mytype = ''PS'' then
ERROR = !syntax error, unexpected IDENT in: "blname"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_backlink_unset(bpchar, bpchar)
        returns integer as '
        declare
            myname	alias for $1;
            blname	alias for $2;
            mytype	char(2);
            rec		record;
        begin
            mytype := substr(myname, 1, 2);
            if mytype = ''PS'' then
                select into rec * from PSlot where slotname = myname;
        	if not found then
        	    return 0;
        	end if;
        	if rec.backlink = blname then
        	    update PSlot set backlink = '''' where slotname = myname;
        	end if;
        	return 0;
            end if;
            if mytype = ''WS'' then
                select into rec * from WSlot where slotname = myname;
ERROR = !syntax error, unexpected ',' in: "create function tg_backlink_unset(bpchar,"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_slotlink_a() returns trigger as '
        declare
            dummy	integer;
        begin
            if tg_op = ''INSERT'' then
                if new.slotlink != '''' then
        	    dummy := tg_slotlink_set(new.slotlink, new.slotname);
        	end if;
        	return new;
            end if;
            if tg_op = ''UPDATE'' then
                if new.slotlink != old.slotlink then
        	    if old.slotlink != '''' then
        	        dummy := tg_slotlink_unset(old.slotlink, old.slotname);
        	    end if;
        	    if new.slotlink != '''' then
        	        dummy := tg_slotlink_set(new.slotlink, new.slotname);
ERROR = !syntax error, unexpected TRIGGER in: "create function tg_slotlink_a() returns trigger"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_slotlink_a after insert or update or delete
            on PSlot for each row execute procedure tg_slotlink_a('PS');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_slotlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_slotlink_a after insert or update or delete
            on WSlot for each row execute procedure tg_slotlink_a('WS');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_slotlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_slotlink_a after insert or update or delete
            on IFace for each row execute procedure tg_slotlink_a('IF');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_slotlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_slotlink_a after insert or update or delete
            on HSlot for each row execute procedure tg_slotlink_a('HS');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_slotlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create trigger tg_slotlink_a after insert or update or delete
            on PHone for each row execute procedure tg_slotlink_a('PH');
ERROR = !syntax error, unexpected OR, expecting ON in: "create trigger tg_slotlink_a after insert or"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_slotlink_set(bpchar, bpchar)
        returns integer as '
        declare
            myname	alias for $1;
            blname	alias for $2;
            mytype	char(2);
            link	char(4);
            rec		record;
        begin
            mytype := substr(myname, 1, 2);
            link := mytype || substr(blname, 1, 2);
            if link = ''PHPH'' then
                raise exception 
        		''slotlink between two phones does not make sense'';
            end if;
            if link in (''PHHS'', ''HSPH'') then
                raise exception 
        		''link of phone to hub does not make sense'';
            end if;
ERROR = !syntax error, unexpected ',' in: "create function tg_slotlink_set(bpchar,"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function tg_slotlink_unset(bpchar, bpchar)
        returns integer as '
        declare
            myname	alias for $1;
            blname	alias for $2;
            mytype	char(2);
            rec		record;
        begin
            mytype := substr(myname, 1, 2);
            if mytype = ''PS'' then
                select into rec * from PSlot where slotname = myname;
        	if not found then
        	    return 0;
        	end if;
        	if rec.slotlink = blname then
        	    update PSlot set slotlink = '''' where slotname = myname;
        	end if;
        	return 0;
            end if;
            if mytype = ''WS'' then
                select into rec * from WSlot where slotname = myname;
ERROR = !syntax error, unexpected ',' in: "create function tg_slotlink_unset(bpchar,"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function pslot_backlink_view(bpchar)
        returns text as '
        <<outer>>
        declare
            rec		record;
            bltype	char(2);
            retval	text;
        begin
            select into rec * from PSlot where slotname = $1;
            if not found then
                return '''';
            end if;
            if rec.backlink = '''' then
                return ''-'';
            end if;
            bltype := substr(rec.backlink, 1, 2);
            if bltype = ''PL'' then
                declare
        	    rec		record;
        	begin
        	    select into rec * from PLine where slotname = outer.rec.backlink;
        	    retval := ''Phone line '' || trim(rec.phonenumber);
ERROR = !syntax error, unexpected ')' in: "create function pslot_backlink_view(bpchar)"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function pslot_slotlink_view(bpchar)
        returns text as '
        declare
            psrec	record;
            sltype	char(2);
            retval	text;
        begin
            select into psrec * from PSlot where slotname = $1;
            if not found then
                return '''';
            end if;
            if psrec.slotlink = '''' then
                return ''-'';
            end if;
            sltype := substr(psrec.slotlink, 1, 2);
            if sltype = ''PS'' then
        	retval := trim(psrec.slotlink) || '' -> '';
        	return retval || pslot_backlink_view(psrec.slotlink);
            end if;
            if sltype = ''HS'' then
ERROR = !syntax error, unexpected ')' in: "create function pslot_slotlink_view(bpchar)"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function wslot_slotlink_view(bpchar)
        returns text as '
        declare
            rec		record;
            sltype	char(2);
            retval	text;
        begin
            select into rec * from WSlot where slotname = $1;
            if not found then
                return '''';
            end if;
            if rec.slotlink = '''' then
                return ''-'';
            end if;
            sltype := substr(rec.slotlink, 1, 2);
            if sltype = ''PH'' then
                select into rec * from PHone where slotname = rec.slotlink;
        	retval := ''Phone '' || trim(rec.slotname);
        	if rec.comment != '''' then
ERROR = !syntax error, unexpected ')' in: "create function wslot_slotlink_view(bpchar)"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create view Pfield_v1 as select PF.pfname, PF.slotname,
        	pslot_backlink_view(PF.slotname) as backside,
        	pslot_slotlink_view(PF.slotname) as patch
            from PSlot PF;
ERROR = !SELECT: no such unary operator 'pslot_backlink_view(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
ERROR = !syntax error, unexpected '~', expecting SCOLON in: "select * from pslot where slotname ~"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
ERROR = !syntax error, unexpected '~', expecting SCOLON in: "select * from pslot where slotname ~"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
ERROR = !syntax error, unexpected '~', expecting SCOLON in: "select * from pslot where slotname ~"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
ERROR = !syntax error, unexpected '~', expecting SCOLON in: "select * from pslot where slotname ~"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
ERROR = !syntax error, unexpected '~', expecting SCOLON in: "select * from pslot where slotname ~"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
ERROR = !syntax error, unexpected '~', expecting SCOLON in: "select * from pslot where slotname ~"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PField_v1 where pfname = 'PF0_1' order by slotname;
ERROR = !SELECT: no such table 'pfield_v1'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from PField_v1 where pfname = 'PF0_2' order by slotname;
ERROR = !SELECT: no such table 'pfield_v1'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = CREATE FUNCTION recursion_test(int,int) RETURNS text AS '
        DECLARE rslt text;
        BEGIN
            IF $1 <= 0 THEN
                rslt = CAST($2 AS TEXT);
            ELSE
                rslt = CAST($1 AS TEXT) || '','' || recursion_test($1 - 1, $2);
            END IF;
            RETURN rslt;
        COMMIT;' LANGUAGE 'plpgsql';
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function recursion_test(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = SELECT recursion_test(4,3);
ERROR = !SELECT: no such binary operator 'recursion_test(tinyint,tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_found()
          returns boolean as '
          declare
          begin
          insert into found_test_tbl values (1);
          if FOUND then
             insert into found_test_tbl values (2);
          end if;
        
          update found_test_tbl set a = 100 where a = 1;
          if FOUND then
            insert into found_test_tbl values (3);
          end if;
        
          delete from found_test_tbl where a = 9999; -- matches no rows
          if not FOUND then
            insert into found_test_tbl values (4);
          end if;
        
          for i in 1 .. 10 loop
            -- no need to do anything
          end loop;
          if FOUND then
ERROR = !syntax error, unexpected AS, expecting WHILE in: "create function test_found()
        !  returns boolean as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select test_found();
ERROR = !SELECT: no such operator 'test_found'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_table_func_rec() returns setof found_test_tbl as '
ERROR = !type (setof) unknown in: "create function test_table_func_rec() returns setof found_test_tbl"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_table_func_rec() returns setof found_test_tbl as '
        DECLARE
        	rec RECORD;
        BEGIN
        	FOR rec IN select * from found_test_tbl LOOP
        		RETURN NEXT rec;
        	END LOOP;
        	RETURN;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected AS in: "as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from test_table_func_rec();
ERROR = !SELECT: no such operator 'test_table_func_rec'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_table_func_row() returns setof found_test_tbl as '
ERROR = !type (setof) unknown in: "create function test_table_func_row() returns setof found_test_tbl"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_table_func_row() returns setof found_test_tbl as '
        DECLARE
        	row found_test_tbl%ROWTYPE;
        BEGIN
        	FOR row IN select * from found_test_tbl LOOP
        		RETURN NEXT row;
        	END LOOP;
        	RETURN;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected AS in: "as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from test_table_func_row();
ERROR = !SELECT: no such operator 'test_table_func_row'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_ret_set_scalar(int,int) returns setof int as '
        DECLARE
        	i int;
        BEGIN
        	FOR i IN $1 .. $2 LOOP
        		RETURN NEXT i + 1;
        	END LOOP;
        	RETURN;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function test_ret_set_scalar(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select * from test_ret_set_scalar(1,10);
ERROR = !SELECT: no such binary operator 'test_ret_set_scalar(tinyint,tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_ret_set_rec_dyn(int) returns setof record as '
        DECLARE
        	retval RECORD;
        BEGIN
        	IF $1 > 10 THEN
        		SELECT INTO retval 5, 10, 15;
        		RETURN NEXT retval;
        		RETURN NEXT retval;
        	ELSE
        		SELECT INTO retval 50, 5::numeric, ''xxx''::text;
        		RETURN NEXT retval;
        		RETURN NEXT retval;
        	END IF;
        	RETURN;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function test_ret_set_rec_dyn(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = SELECT * FROM test_ret_set_rec_dyn(1500) AS (a int, b int, c int);
ERROR = !syntax error, unexpected '(' in: "select * from test_ret_set_rec_dyn(1500) as ("
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = SELECT * FROM test_ret_set_rec_dyn(5) AS (a int, b numeric, c text);
ERROR = !syntax error, unexpected '(' in: "select * from test_ret_set_rec_dyn(5) as ("
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_ret_rec_dyn(int) returns record as '
        DECLARE
        	retval RECORD;
        BEGIN
        	IF $1 > 10 THEN
        		SELECT INTO retval 5, 10, 15;
        		RETURN retval;
        	ELSE
        		SELECT INTO retval 50, 5::numeric, ''xxx''::text;
        		RETURN retval;
        	END IF;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function test_ret_rec_dyn(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = SELECT * FROM test_ret_rec_dyn(1500) AS (a int, b int, c int);
ERROR = !syntax error, unexpected '(' in: "select * from test_ret_rec_dyn(1500) as ("
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = SELECT * FROM test_ret_rec_dyn(5) AS (a int, b numeric, c text);
ERROR = !syntax error, unexpected '(' in: "select * from test_ret_rec_dyn(5) as ("
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function simple_func(int) returns boolean as '
        BEGIN
        	IF $1 < 20 THEN
        		INSERT INTO perform_test VALUES ($1, $1 + 10);
        		RETURN TRUE;
        	ELSE
        		RETURN FALSE;
        	END IF;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function simple_func(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function perform_test_func() returns void as '
ERROR = !type (void) unknown in: "create function perform_test_func() returns void as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function perform_test_func() returns void as '
        BEGIN
        	IF FOUND then
        		INSERT INTO perform_test VALUES (100, 100);
        	END IF;
        
        	PERFORM simple_func(5);
        
        	IF FOUND then
        		INSERT INTO perform_test VALUES (100, 100);
        	END IF;
        
        	PERFORM simple_func(50);
        
        	IF FOUND then
        		INSERT INTO perform_test VALUES (100, 100);
        	END IF;
        
        	RETURN;
        COMMIT;' language 'plpgsql';
ERROR = !syntax error, unexpected STRING in: "'
        !BEGIN
        !	IF FOUND then
        !		INSERT INTO perform_test VALUES (100, 100);
        !	END IF;
        !
        !	PERFORM simple_func(5);
        !
        !	IF FOUND then
        !		INSERT INTO perform_test VALUES (100, 100);
        !	END IF;
        !
        !	PERFORM simple_func(50);
        !
        !	IF FOUND then
        !		INSERT INTO perform_test VALUES (100, 100);
        !	END IF;
        !
        !	RETURN;
        !COMMIT;'"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = SELECT perform_test_func();
ERROR = !SELECT: no such operator 'perform_test_func'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function trap_zero_divide(int) returns int as $$
        declare x int;
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function trap_zero_divide(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sx smallint;
ERROR = !syntax error, unexpected IDENT in: "sx"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
        	begin	-- start a subtransaction
        		raise notice 'should see this';
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = x := 100 / $1;
ERROR = !syntax error, unexpected IDENT in: "x"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = raise notice 'should see this only if % <> 0', $1;
ERROR = !syntax error, unexpected IDENT in: "raise"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sx := $1;
ERROR = !syntax error, unexpected IDENT in: "sx"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = raise notice 'should see this only if % fits in smallint', $1;
ERROR = !syntax error, unexpected IDENT in: "raise"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = if $1 < 0 then
        			raise exception '% is less than zero', $1;
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end if;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = exception
        		when division_by_zero then
        			raise notice 'caught division_by_zero';
ERROR = !syntax error, unexpected IDENT in: "exception"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = x := -1;
ERROR = !syntax error, unexpected IDENT in: "x"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = when NUMERIC_VALUE_OUT_OF_RANGE then
        			raise notice 'caught numeric_value_out_of_range';
ERROR = !syntax error, unexpected WHEN in: "when"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = x := -2;
ERROR = !syntax error, unexpected IDENT in: "x"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return x;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_zero_divide(50);
ERROR = !SELECT: no such unary operator 'trap_zero_divide(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_zero_divide(0);
ERROR = !SELECT: no such unary operator 'trap_zero_divide(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_zero_divide(100000);
ERROR = !SELECT: no such unary operator 'trap_zero_divide(int)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_zero_divide(-100);
ERROR = !SELECT: no such unary operator 'trap_zero_divide(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function trap_matching_test(int) returns int as $$
        declare x int;
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function trap_matching_test(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sx smallint;
ERROR = !syntax error, unexpected IDENT in: "sx"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = y int;
ERROR = !syntax error, unexpected IDENT in: "y"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
        	begin	-- start a subtransaction
        		x := 100 / $1;
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = sx := $1;
ERROR = !syntax error, unexpected IDENT in: "sx"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select into y unique1 from tenk1 where unique2 =
        			(select unique2 from tenk1 b where ten = $1);
ERROR = !syntax error, unexpected INTO in: "select into"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = exception
        		when data_exception then  -- category match
        			raise notice 'caught data_exception';
ERROR = !syntax error, unexpected IDENT in: "exception"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = x := -1;
ERROR = !syntax error, unexpected IDENT in: "x"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = when NUMERIC_VALUE_OUT_OF_RANGE OR CARDINALITY_VIOLATION then
        			raise notice 'caught numeric_value_out_of_range or cardinality_violation';
ERROR = !syntax error, unexpected WHEN in: "when"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = x := -2;
ERROR = !syntax error, unexpected IDENT in: "x"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return x;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_matching_test(50);
ERROR = !SELECT: no such unary operator 'trap_matching_test(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_matching_test(0);
ERROR = !SELECT: no such unary operator 'trap_matching_test(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_matching_test(100000);
ERROR = !SELECT: no such unary operator 'trap_matching_test(int)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_matching_test(1);
ERROR = !SELECT: no such unary operator 'trap_matching_test(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function blockme() returns int as $$
        declare x int;
ERROR = !syntax error, unexpected AS, expecting WHILE in: "create function blockme() returns int as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
          x := 1;
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = insert into foo values(x);
ERROR = !SELECT: identifier 'x' unknown
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
            x := x + 1;
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = insert into foo values(x);
ERROR = !SELECT: identifier 'x' unknown
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select count(*) into x from tenk1 a, tenk1 b, tenk1 c;
ERROR = !SELECT: no such table 'tenk1'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = exception
            when others then
              raise notice 'caught others?';
ERROR = !syntax error, unexpected IDENT in: "exception"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return -1;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = when query_canceled then
              raise notice 'nyeah nyeah, can''t stop me';
ERROR = !syntax error, unexpected WHEN in: "when"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = x := x * 10;
ERROR = !syntax error, unexpected IDENT in: "x"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = insert into foo values(x);
ERROR = !SELECT: identifier 'x' unknown
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return x;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = set statement_timeout to 1000;
ERROR = !syntax error, unexpected TO, expecting '=' in: "set statement_timeout to"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select blockme();
ERROR = !SELECT: no such operator 'blockme'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = reset statement_timeout;
ERROR = !syntax error, unexpected IDENT in: "reset"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function test_variable_storage() returns text as $$
        declare x text;
ERROR = !syntax error, unexpected AS, expecting WHILE in: "create function test_variable_storage() returns text as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
          x := '1234';
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
            x := x || '5678';
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = perform trap_zero_divide(-100);
ERROR = !syntax error, unexpected IDENT in: "perform"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = exception
            when others then
              x := x || '9012';
ERROR = !syntax error, unexpected IDENT in: "exception"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return x;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select test_variable_storage();
ERROR = !SELECT: no such operator 'test_variable_storage'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create temp table slave(f1 int references master deferrable);
ERROR = !syntax error, unexpected IDENT, expecting ')' or ',' in: "create temp table slave(f1 int references master deferrable"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = insert into slave values(1);
ERROR = !INSERT INTO: no such table 'slave'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = insert into slave values(2);	-- fails
ERROR = !INSERT INTO: no such table 'slave'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function trap_foreign_key(int) returns int as $$
        begin
        	begin	-- start a subtransaction
        		insert into slave values($1);
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function trap_foreign_key(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = exception
        		when foreign_key_violation then
        			raise notice 'caught foreign_key_violation';
ERROR = !syntax error, unexpected IDENT in: "exception"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return 0;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return 1;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function trap_foreign_key_2() returns int as $$
        begin
        	begin	-- start a subtransaction
        		set constraints all immediate;
ERROR = !syntax error, unexpected AS, expecting WHILE in: "create function trap_foreign_key_2() returns int as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = exception
        		when foreign_key_violation then
        			raise notice 'caught foreign_key_violation';
ERROR = !syntax error, unexpected IDENT in: "exception"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return 0;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = COMMIT;
ERROR = !COMMIT: not allowed in auto commit mode
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return 1;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_foreign_key(1);
ERROR = !SELECT: no such unary operator 'trap_foreign_key(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_foreign_key(2);	-- detects FK violation
ERROR = !SELECT: no such unary operator 'trap_foreign_key(tinyint)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = set constraints all deferred;
ERROR = !syntax error, unexpected ALL, expecting '=' in: "set constraints all"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_foreign_key(2);	-- should not detect FK violation
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = savepoint x;
ERROR = !SAVEPOINT: (x) failed
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = set constraints all immediate; -- fails
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = rollback to x;
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select trap_foreign_key_2();  -- detects FK violation
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = commit;				-- still fails
ERROR = !COMMIT: failed
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = drop function trap_foreign_key(int);
ERROR = !DROP FUNCTION: no such function 'trap_foreign_key' (int(32))
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = drop function trap_foreign_key_2();
ERROR = !DROP FUNCTION: no such function 'trap_foreign_key_2' ()
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function sp_id_user(a_login text) returns int as $$
        declare x int;
ERROR = !syntax error, unexpected AS, expecting WHILE in: "create function sp_id_user(a_login text) returns int as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
          select into x id from users where login = a_login;
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = if found then return x; end if;
ERROR = !syntax error, unexpected IF in: "if"
        !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return 0;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql stable;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = insert into users values('user1');
ERROR = !INSERT INTO: cannot insert into view 'users'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_id_user('user1');
ERROR = !SELECT: no such unary operator 'sp_id_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_id_user('userx');
ERROR = !SELECT: no such unary operator 'sp_id_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function sp_add_user(a_login text) returns int as $$
        declare my_id_user int;
ERROR = !syntax error, unexpected AS, expecting WHILE in: "create function sp_add_user(a_login text) returns int as"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
          my_id_user = sp_id_user( a_login );
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = IF  my_id_user > 0 THEN
            RETURN -1;  -- error code for existing user
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = END IF;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = INSERT INTO users ( login ) VALUES ( a_login );
ERROR = !INSERT INTO: cannot insert into view 'users'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = my_id_user = sp_id_user( a_login );
ERROR = !syntax error, unexpected IDENT in: "my_id_user"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = IF  my_id_user = 0 THEN
            RETURN -2;  -- error code for insertion failure
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = END IF;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = RETURN my_id_user;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end$$ language plpgsql;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_add_user('user1');
ERROR = !SELECT: no such unary operator 'sp_add_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_add_user('user2');
ERROR = !SELECT: no such unary operator 'sp_add_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_add_user('user2');
ERROR = !SELECT: no such unary operator 'sp_add_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_add_user('user3');
ERROR = !SELECT: no such unary operator 'sp_add_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select sp_add_user('user3');
ERROR = !SELECT: no such unary operator 'sp_add_user(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = drop function sp_add_user(text);
ERROR = !DROP FUNCTION: no such function 'sp_add_user' (clob)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = drop function sp_id_user(text);
ERROR = !DROP FUNCTION: no such function 'sp_id_user' (clob)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = copy rc_test from stdin;
ERROR = !syntax error, unexpected IDENT, expecting BINARY or INTO in: "copy rc_test"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = 5	10
        50	100
        500	1000
        \.
        
        create function return_refcursor(rc refcursor) returns refcursor as $$
        begin
            open rc for select a from rc_test;
ERROR = !syntax error, unexpected sqlINT in: "5"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return rc;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end
        $$ language 'plpgsql';
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function refcursor_test1(refcursor) returns refcursor as $$
        begin
            perform return_refcursor($1);
ERROR = !syntax error, unexpected ')' in: "create function refcursor_test1(refcursor)"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = return $1;
ERROR = !syntax error, unexpected RETURN in: "return"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end
        $$ language 'plpgsql';
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select refcursor_test1('test1');
ERROR = !SELECT: no such unary operator 'refcursor_test1(char)'
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = fetch next from test1;
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select refcursor_test1('test2');
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = fetch all from test2;
ERROR = !current transaction is aborted (please ROLLBACK)
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = commit;
ERROR = !COMMIT: failed
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = fetch next from test1;
ERROR = !syntax error, unexpected IDENT in: "fetch"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = create function refcursor_test2(int) returns boolean as $$
        declare
            c1 cursor (param integer) for select * from rc_test where a > param;
ERROR = !syntax error, unexpected sqlINTEGER, expecting ')' in: "create function refcursor_test2(int"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = nonsense record;
ERROR = !syntax error, unexpected IDENT in: "nonsense"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = begin
            open c1($1);
ERROR = !syntax error, unexpected BEGIN in: "begin"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = fetch c1 into nonsense;
ERROR = !syntax error, unexpected IDENT in: "fetch"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = close c1;
ERROR = !syntax error, unexpected IDENT in: "close"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = if found then
                return true;
ERROR = !syntax error, unexpected IF in: "if"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = else
                return false;
ERROR = !syntax error, unexpected ELSE in: "else"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end if;
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = end
        $$ language 'plpgsql';
ERROR = !syntax error, unexpected END in: "end"
MAPI  = (monetdb) /var/tmp/mtest-11277/.s.monetdb.37199
QUERY = select refcursor_test2(20000) as "Should be false",
               refcursor_test2(20) as "Should be true";
ERROR = !SELECT: no such unary operator 'refcursor_test2(smallint)'

# 18:00:07 >  
# 18:00:07 >  "Done."
# 18:00:07 >  

