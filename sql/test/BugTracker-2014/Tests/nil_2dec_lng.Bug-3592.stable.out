stdout of test 'nil_2dec_lng.Bug-3592` in directory 'sql/test/BugTracker-2014` itself:


# 23:28:04 >  
# 23:28:04 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38459" "--set" "mapi_usock=/var/tmp/mtest-19113/.s.monetdb.38459" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/Oct2014//Linux/var/MonetDB/mTests_sql_test_BugTracker-2014" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 23:28:04 >  

# MonetDB 5 server v11.19.0
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2014', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:38459/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-19113/.s.monetdb.38459
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 23:28:04 >  
# 23:28:04 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-19113" "--port=38459"
# 23:28:04 >  

#create table foo_nil_2dec (t timestamp,v decimal(18,9));
#insert into foo_nil_2dec values (now(),42);
[ 1	]
#insert into foo_nil_2dec values (now(),43);
[ 1	]
#select (t-(select timestamp '1970-1-1')),v from foo_nil_2dec union all select (t-(select timestamp '1970-1-1')),null from foo_nil_2dec;
% .L5,	.L5 # table_name
% L2,	v # name
% sec_interval,	decimal # type
% 0,	20 # length
[ 1412467200.000,	42.000000000	]
[ 1412467200.000,	43.000000000	]
[ 1412467200.000,	NULL	]
#explain select (t-(select timestamp '1970-1-1')),v from foo_nil_2dec union all select (t-(select timestamp '1970-1-1')),null from foo_nil_2dec;
% .explain # table_name
% mal # name
% clob # type
% 206 # length
function user.s5_1{autoCommit=true}(A0:timestamp,A1:timestamp,A2:void):void;
    X_56:void := querylog.define("explain select (t-(select timestamp \\'1970-1-1\\')),v from foo_nil_2dec union all select (t-(select timestamp \\'1970-1-1\\')),null from foo_nil_2dec;","default_pipe",70);
barrier X_115 := language.dataflow();
    X_34 := bat.new(nil:oid,nil:str);
    X_41 := bat.append(X_34,".L5");
    X_50 := bat.append(X_41,".L5");
    X_36 := bat.new(nil:oid,nil:str);
    X_43 := bat.append(X_36,"L2");
    X_51 := bat.append(X_43,"v");
    X_37 := bat.new(nil:oid,nil:str);
    X_45 := bat.append(X_37,"sec_interval");
    X_52 := bat.append(X_45,"decimal");
    X_38 := bat.new(nil:oid,nil:int);
    X_47 := bat.append(X_38,13);
    X_54 := bat.append(X_47,18);
    X_40 := bat.new(nil:oid,nil:int);
    X_49 := bat.append(X_40,0);
    X_55 := bat.append(X_49,9);
    X_6:bat[:oid,:lng]  := bat.new(nil:oid,nil:lng);
    X_5 := sql.mvc();
    X_72:bat[:oid,:oid] := sql.tid(X_5,"sys","foo_nil_2dec",0,2);
    X_75:bat[:oid,:timestamp] := sql.bind(X_5,"sys","foo_nil_2dec","t",0,0,2);
    (X_77:bat[:oid,:oid],X_78:bat[:oid,:timestamp]) := sql.bind(X_5,"sys","foo_nil_2dec","t",2,0,2);
    X_87 := sql.delta(X_75,X_77,X_78);
    X_89 := algebra.leftfetchjoin(X_72,X_87);
    X_16 := calc.timestamp(A0,7);
    X_91 := algebra.project(X_89,X_16);
    X_93 := batmtime.diff(X_89,X_91);
    X_74:bat[:oid,:oid] := sql.tid(X_5,"sys","foo_nil_2dec",1,2);
    X_76:bat[:oid,:timestamp] := sql.bind(X_5,"sys","foo_nil_2dec","t",0,1,2);
    (X_79:bat[:oid,:oid],X_80:bat[:oid,:timestamp]) := sql.bind(X_5,"sys","foo_nil_2dec","t",2,1,2);
    X_14:bat[:oid,:timestamp]  := sql.bind(X_5,"sys","foo_nil_2dec","t",1);
    X_88 := sql.delta(X_76,X_79,X_80,X_14);
    X_90 := algebra.leftfetchjoin(X_74,X_88);
    X_92 := algebra.project(X_90,X_16);
    X_94 := batmtime.diff(X_90,X_92);
    X_105 := mat.packIncrement(X_93,2);
    X_18:bat[:oid,:lng] := mat.packIncrement(X_105,X_94);
    X_19 := bat.append(X_6,X_18,true);
    X_20 := calc.timestamp(A1,7);
    X_97 := algebra.project(X_89,X_20);
    X_99 := batmtime.diff(X_89,X_97);
    X_98 := algebra.project(X_90,X_20);
    X_100 := batmtime.diff(X_90,X_98);
    X_107 := mat.packIncrement(X_99,2);
    X_21:bat[:oid,:lng] := mat.packIncrement(X_107,X_100);
    X_22 := bat.append(X_19,X_21,true);
    X_23:bat[:oid,:lng] := bat.new(nil:oid,nil:lng);
    X_81:bat[:oid,:lng] := sql.bind(X_5,"sys","foo_nil_2dec","v",0,0,2);
    (X_83:bat[:oid,:oid],X_84:bat[:oid,:lng]) := sql.bind(X_5,"sys","foo_nil_2dec","v",2,0,2);
    X_101 := sql.delta(X_81,X_83,X_84);
    X_103 := algebra.leftfetchjoin(X_72,X_101);
    X_82:bat[:oid,:lng] := sql.bind(X_5,"sys","foo_nil_2dec","v",0,1,2);
    (X_85:bat[:oid,:oid],X_86:bat[:oid,:lng]) := sql.bind(X_5,"sys","foo_nil_2dec","v",2,1,2);
    X_25:bat[:oid,:lng] := sql.bind(X_5,"sys","foo_nil_2dec","v",1);
    X_102 := sql.delta(X_82,X_85,X_86,X_25);
    X_104 := algebra.leftfetchjoin(X_74,X_102);
    X_109 := mat.packIncrement(X_103,2);
    X_26 := mat.packIncrement(X_109,X_104);
    X_27 := bat.append(X_23,X_26,true);
    X_28 := sql.single(nil:lng);
    X_29:bat[:oid,:lng] := batcalc.lng(X_28,18,9);
    X_32 := bat.append(X_27,X_29,true);
    language.pass(X_89);
    language.pass(X_90);
    language.pass(X_72);
    language.pass(X_74);
exit X_115;
    sql.resultSet(X_50,X_51,X_52,X_54,X_55,X_22,X_32);
end user.s5_1;

# 23:28:04 >  
# 23:28:04 >  "Done."
# 23:28:04 >  

