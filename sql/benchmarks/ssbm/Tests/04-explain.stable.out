stdout of test '04-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "04-explain.SQL.py" "04-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		and p_category = 'MFGR#12' -- OK to add p_mfgr = ’MFGR#1’
#		and s_region = 'AMERICA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 362 # length
function user.s4_1():void;
    X_159:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n from lineorder, dwdate, part, supplier\n where lo_orderdate = d_datekey\n and lo_partkey = p_partkey\n and lo_suppkey = s_suppkey\n and p_category = \\'MFGR#12\\' \n and s_region = \\'AMERICA\\'\n group by d_year, p_brand1\n order by d_year, p_brand1;","sequential_pipe",66);
    X_125 := bat.new(nil:str);
    X_132 := bat.append(X_125,"sys.L2");
    X_142 := bat.append(X_132,"sys.dwdate");
    X_151 := bat.append(X_142,"sys.part");
    X_127 := bat.new(nil:str);
    X_134 := bat.append(X_127,"L1");
    X_144 := bat.append(X_134,"d_year");
    X_153 := bat.append(X_144,"p_brand1");
    X_128 := bat.new(nil:str);
    X_136 := bat.append(X_128,"bigint");
    X_146 := bat.append(X_136,"int");
    X_155 := bat.append(X_146,"clob");
    X_129 := bat.new(nil:int);
    X_138 := bat.append(X_129,64);
    X_148 := bat.append(X_138,32);
    X_157 := bat.append(X_148,0);
    X_131 := bat.new(nil:int);
    X_140 := bat.append(X_131,0);
    X_150 := bat.append(X_140,0);
    X_158 := bat.append(X_150,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_7,r1_10) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_13 := sql.projectdelta(C_1,X_4,X_7,r1_10,X_10);
    X_16:bat[:str] := sql.bind(X_0,"sys","part","p_category",0);
    C_14:bat[:oid] := sql.tid(X_0,"sys","part");
    C_24 := algebra.subselect(X_16,C_14,"MFGR#12","MFGR#12",true,false,false);
    (X_29,r1_32) := algebra.subjoin(X_13,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_34:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_36,r1_39) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_38:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_40 := sql.projectdelta(C_1,X_34,X_36,r1_39,X_38);
    X_41 := algebra.projection(X_29,X_40);
    X_44:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    C_42:bat[:oid] := sql.tid(X_0,"sys","supplier");
    C_52 := algebra.subselect(X_44,C_42,"AMERICA","AMERICA",true,false,false);
    (X_54,r1_57) := algebra.subjoin(X_41,C_52,nil:BAT,nil:BAT,false,nil:lng);
    X_56:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_58,r1_61) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_60:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_62 := sql.projectdelta(C_1,X_56,X_58,r1_61,X_60);
    X_64:bat[:oid] := algebra.projectionpath(X_54,X_29,X_62);
    C_65:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    (X_67,r1_70) := algebra.subjoin(X_64,C_65,nil:BAT,nil:BAT,false,nil:lng);
    X_73:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",0);
    X_83:bat[:str] := algebra.projectionpath(X_67,X_54,r1_32,C_24,X_73);
    X_84:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_91:bat[:int] := algebra.projectionpath(r1_70,C_65,X_84);
    (X_92,r1_95,r2_95) := group.subgroup(X_91);
    (X_95,r1_98,r2_98) := group.subgroupdone(X_83,X_92);
    X_98 := algebra.projection(r1_98,X_83);
    X_99 := algebra.projection(r1_98,X_91);
    X_108:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_117:bat[:int] := algebra.projectionpath(X_67,X_54,X_29,C_1,X_108);
    X_118:bat[:lng] := aggr.subsum(X_117,X_95,r1_98,true,true);
    (X_100,r1_103,r2_103) := algebra.subsort(X_99,false,false);
    (X_103,r1_106,r2_106) := algebra.subsort(X_98,r1_103,r2_103,false,false);
    X_121 := algebra.projection(r1_106,X_118);
    X_122 := algebra.projection(r1_106,X_99);
    X_123 := algebra.projection(r1_106,X_98);
    sql.resultSet(X_151,X_153,X_155,X_157,X_158,X_121,X_122,X_123);
end user.s4_1;
#inline               actions= 0 time=2 usec 
#remap                actions= 0 time=5 usec 
#costmodel            actions= 1 time=5 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions= 2 time=25 usec 
#emptybind            actions=15 time=37 usec 
#pushselect           actions=10 time=41 usec 
#aliases              actions=12 time=17 usec 
#mergetable           actions= 0 time=59 usec 
#deadcode             actions=18 time=12 usec 
#aliases              actions= 0 time=10 usec 
#constants            actions=18 time=22 usec 
#commonTerms          actions= 0 time=10 usec 
#projectionpath       actions= 8 time=20 usec 
#reorder              actions= 1 time=44 usec 
#deadcode             actions= 8 time=10 usec 
#reduce               actions=84 time=19 usec 
#matpack              actions= 0 time=3 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=26 usec 
#total                actions= 1 time=546 usec 

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

