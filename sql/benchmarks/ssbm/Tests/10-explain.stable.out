stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 565 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:str):void;
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineorder");
    X_13 := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_19 := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24 := sql.bind(X_9,"sys","customer","c_city",0);
    X_29 := sql.bind(X_9,"sys","customer","c_nation",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","customer");
    X_199 := algebra.subselect(X_29,X_22,A0,A0,true,true,false);
    (X_31,r1_35) := sql.bind(X_9,"sys","customer","c_nation",2);
    X_200 := algebra.subselect(r1_35,A0,A0,true,true,false);
    X_33 := sql.bind(X_9,"sys","customer","c_nation",1);
    X_201 := algebra.subselect(X_33,X_22,A0,A0,true,true,false);
    X_34 := sql.subdelta(X_199,X_22,X_31,X_200,X_201);
    X_202 := algebra.subselect(X_24,X_34,A1,A1,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","customer","c_city",2);
    X_203 := algebra.subselect(r1_27,A1,A1,true,true,false);
    X_28 := sql.bind(X_9,"sys","customer","c_city",1);
    X_204 := algebra.subselect(X_28,X_34,A1,A1,true,true,false);
    X_37 := sql.subdelta(X_202,X_34,X_26,X_203,X_204);
    X_205 := algebra.subselect(X_24,X_34,A2,A2,true,true,false);
    X_206 := algebra.subselect(r1_27,A2,A2,true,true,false);
    X_207 := algebra.subselect(X_28,X_34,A2,A2,true,true,false);
    X_38 := sql.subdelta(X_205,X_34,X_26,X_206,X_207);
    X_39 := bat.mergecand(X_37,X_38);
    X_40 := X_39;
    (X_41,r1_49) := algebra.join(X_21,X_40);
    X_43 := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_48,r1_56) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_51 := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_53 := sql.projectdelta(X_10,X_43,X_48,r1_56,X_51);
    X_54 := algebra.leftfetchjoin(X_41,X_53);
    X_57 := sql.bind(X_9,"sys","supplier","s_city",0);
    X_62 := sql.bind(X_9,"sys","supplier","s_nation",0);
    X_55:bat[:oid,:oid]  := sql.tid(X_9,"sys","supplier");
    X_208 := algebra.subselect(X_62,X_55,A5,A5,true,true,false);
    (X_64,r1_76) := sql.bind(X_9,"sys","supplier","s_nation",2);
    X_209 := algebra.subselect(r1_76,A5,A5,true,true,false);
    X_66 := sql.bind(X_9,"sys","supplier","s_nation",1);
    X_210 := algebra.subselect(X_66,X_55,A5,A5,true,true,false);
    X_67 := sql.subdelta(X_208,X_55,X_64,X_209,X_210);
    X_211 := algebra.subselect(X_57,X_67,A3,A3,true,true,false);
    (X_59,r1_68) := sql.bind(X_9,"sys","supplier","s_city",2);
    X_212 := algebra.subselect(r1_68,A3,A3,true,true,false);
    X_61 := sql.bind(X_9,"sys","supplier","s_city",1);
    X_213 := algebra.subselect(X_61,X_67,A3,A3,true,true,false);
    X_70 := sql.subdelta(X_211,X_67,X_59,X_212,X_213);
    X_214 := algebra.subselect(X_57,X_67,A4,A4,true,true,false);
    X_215 := algebra.subselect(r1_68,A4,A4,true,true,false);
    X_216 := algebra.subselect(X_61,X_67,A4,A4,true,true,false);
    X_71 := sql.subdelta(X_214,X_67,X_59,X_215,X_216);
    X_72 := bat.mergecand(X_70,X_71);
    X_73 := X_72;
    (X_74,r1_90) := algebra.join(X_54,X_73);
    X_220 := algebra.leftfetchjoin(X_74,X_41);
    X_76 := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_81,r1_97) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_84 := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_86 := sql.projectdelta(X_10,X_76,X_81,r1_97,X_84);
    X_87:bat[:oid,:oid]  := algebra.leftfetchjoin(X_220,X_86);
    X_90 := sql.bind(X_9,"sys","dwdate","d_yearmonth",0);
    X_88:bat[:oid,:oid]  := sql.tid(X_9,"sys","dwdate");
    X_217 := algebra.subselect(X_90,X_88,A6,A6,true,true,false);
    (X_92,r1_110) := sql.bind(X_9,"sys","dwdate","d_yearmonth",2);
    X_218 := algebra.subselect(r1_110,A6,A6,true,true,false);
    X_94 := sql.bind(X_9,"sys","dwdate","d_yearmonth",1);
    X_219 := algebra.subselect(X_94,X_88,A6,A6,true,true,false);
    X_95 := sql.subdelta(X_217,X_88,X_92,X_218,X_219);
    X_98 := X_95;
    (X_99,r1_120) := algebra.join(X_87,X_98);
    X_221 := algebra.leftfetchjoin(X_99,X_74);
    X_101 := sql.bind(X_9,"sys","lineorder","lo_revenue",0);
    (X_103,r1_124) := sql.bind(X_9,"sys","lineorder","lo_revenue",2);
    X_107 := sql.bind(X_9,"sys","lineorder","lo_revenue",1);
    X_108 := sql.projectdelta(X_10,X_101,X_103,r1_124,X_107);
    X_109:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_221,X_41,X_108);
    X_110 := sql.projectdelta(X_72,X_57,X_59,r1_68,X_61);
    X_111:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_99,r1_90,X_110);
    X_112 := sql.projectdelta(X_39,X_24,X_26,r1_27,X_28);
    X_113:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_221,r1_49,X_112);
    X_114 := sql.bind(X_9,"sys","dwdate","d_year",0);
    (X_118,r1_145) := sql.bind(X_9,"sys","dwdate","d_year",2);
    X_121 := sql.bind(X_9,"sys","dwdate","d_year",1);
    X_123 := sql.projectdelta(X_95,X_114,X_118,r1_145,X_121);
    X_124 := algebra.leftfetchjoin(r1_120,X_123);
    (X_125,r1_154,r2_154) := group.subgroup(X_124);
    (X_128,r1_157,r2_157) := group.subgroup(X_113,X_125);
    (X_131,r1_160,r2_160) := group.subgroupdone(X_111,X_128);
    X_134:bat[:oid,:lng]  := aggr.subsum(X_109,X_131,r1_160,true,true);
    X_136 := algebra.leftfetchjoin(r1_160,X_124);
    (X_137,r1_166,r2_166) := algebra.subsort(X_136,false,false);
    (X_141,r1_170,r2_170) := algebra.subsort(X_134,r1_166,r2_166,true,false);
    X_222 := algebra.leftfetchjoin(r1_170,r1_160);
    X_144:bat[:oid,:str]  := algebra.leftfetchjoin(X_222,X_113);
    X_147 := algebra.leftfetchjoin(r1_170,X_134);
    X_146 := algebra.leftfetchjoin(r1_170,X_136);
    X_145:bat[:oid,:str]  := algebra.leftfetchjoin(X_222,X_111);
    X_148 := sql.resultSet(4,1,X_144);
    sql.rsColumn(X_148,"sys.customer","c_city","clob",0,0,X_144);
    sql.rsColumn(X_148,"sys.supplier","s_city","clob",0,0,X_145);
    sql.rsColumn(X_148,"sys.dwdate","d_year","int",32,0,X_146);
    sql.rsColumn(X_148,"sys.L1","revenue","bigint",32,0,X_147);
    X_167 := io.stdout();
    sql.exportResult(X_167,X_148);
end s2_1;
# querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_yearmonth = \\'Dec1997\\'\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe")

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

