stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 501 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str):void;
    X_193:void := querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, c_nation\n\torder by d_year, c_nation;","sequential_pipe",110);
    X_158 := bat.new(nil:oid,nil:str);
    X_166 := bat.append(X_158,"sys.dwdate");
    X_176 := bat.append(X_166,"sys.customer");
    X_184 := bat.append(X_176,"sys.L1");
    X_161 := bat.new(nil:oid,nil:str);
    X_168 := bat.append(X_161,"d_year");
    X_178 := bat.append(X_168,"c_nation");
    X_186 := bat.append(X_178,"profit1");
    X_162 := bat.new(nil:oid,nil:str);
    X_170 := bat.append(X_162,"int");
    X_180 := bat.append(X_170,"clob");
    X_188 := bat.append(X_180,"hugeint");
    X_163 := bat.new(nil:oid,nil:int);
    X_172 := bat.append(X_163,32);
    X_182 := bat.append(X_172,0);
    X_190 := bat.append(X_182,128);
    X_165 := bat.new(nil:oid,nil:int);
    X_174 := bat.append(X_165,0);
    X_183 := bat.append(X_174,0);
    X_192 := bat.append(X_183,0);
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_16:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.leftfetchjoin(X_7,X_18);
    X_20:bat[:oid,:oid]  := sql.tid(X_6,"sys","part");
    X_22:bat[:oid,:str]  := sql.bind(X_6,"sys","part","p_mfgr",0);
    (X_24,r1_24) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_26:bat[:oid,:str]  := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_27 := sql.delta(X_22,X_24,r1_24,X_26);
    X_28 := algebra.leftfetchjoin(X_20,X_27);
    X_29 := algebra.subselect(X_28,A2,A2,true,true,false);
    X_31 := algebra.subselect(X_28,A3,A3,true,true,false);
    X_32 := bat.mergecand(X_29,X_31);
    X_33 := algebra.leftfetchjoin(X_32,X_20);
    (X_34,r1_36) := algebra.subjoin(X_19,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_38:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_42,r1_44) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_44:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_45 := sql.delta(X_38,X_42,r1_44,X_44);
    X_46:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_34,X_7,X_45);
    X_47:bat[:oid,:oid]  := sql.tid(X_6,"sys","supplier");
    X_49:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_region",0);
    (X_52,r1_55) := sql.bind(X_6,"sys","supplier","s_region",2);
    X_55:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_region",1);
    X_57 := sql.delta(X_49,X_52,r1_55,X_55);
    X_58 := algebra.leftfetchjoin(X_47,X_57);
    X_59 := algebra.subselect(X_58,A1,A1,true,true,false);
    X_62 := algebra.leftfetchjoin(X_59,X_47);
    (X_63,r1_67) := algebra.subjoin(X_46,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_67,r1_71) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_69:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_71 := sql.delta(X_65,X_67,r1_71,X_69);
    X_72:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_63,X_34,X_7,X_71);
    X_73:bat[:oid,:oid] := sql.tid(X_6,"sys","customer");
    X_75:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_region",0);
    (X_77,r1_83) := sql.bind(X_6,"sys","customer","c_region",2);
    X_79:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_region",1);
    X_80 := sql.delta(X_75,X_77,r1_83,X_79);
    X_81 := algebra.leftfetchjoin(X_73,X_80);
    X_82 := algebra.subselect(X_81,A0,A0,true,true,false);
    X_83 := algebra.leftfetchjoin(X_82,X_73);
    (X_84,r1_91) := algebra.subjoin(X_72,X_83,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_90,r1_97) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_93:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_94 := sql.delta(X_88,X_90,r1_97,X_93);
    X_95:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_84,X_63,X_34,X_7,X_94);
    X_96:bat[:oid,:oid] := sql.tid(X_6,"sys","dwdate");
    (X_99,r1_109) := algebra.subjoin(X_95,X_96,nil:BAT,nil:BAT,false,nil:lng);
    X_102:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_nation",0);
    (X_104,r1_114) := sql.bind(X_6,"sys","customer","c_nation",2);
    X_106:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_nation",1);
    X_107 := sql.delta(X_102,X_104,r1_114,X_106);
    X_108:bat[:oid,:str] := algebra.leftfetchjoinPath(X_99,r1_91,X_82,X_73,X_107);
    X_109:bat[:oid,:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    (X_111,r1_124) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_113:bat[:oid,:int] := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_114 := sql.delta(X_109,X_111,r1_124,X_113);
    X_115:bat[:oid,:int] := algebra.leftfetchjoinPath(r1_109,X_96,X_114);
    (X_116,r1_130,r2_130) := group.subgroup(X_115);
    (X_119,r1_133,r2_133) := group.subgroupdone(X_108,X_116);
    X_122 := algebra.leftfetchjoin(r1_133,X_108);
    X_123 := algebra.leftfetchjoin(r1_133,X_115);
    X_133:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (X_137,r1_151) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_140:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_142 := sql.delta(X_133,X_137,r1_151,X_140);
    X_143:bat[:oid,:int] := algebra.leftfetchjoinPath(X_99,X_84,X_63,X_34,X_7,X_142);
    X_144 := batcalc.lng(X_143);
    X_145:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (X_147,r1_165) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_149:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_150 := sql.delta(X_145,X_147,r1_165,X_149);
    X_151:bat[:oid,:int] := algebra.leftfetchjoinPath(X_99,X_84,X_63,X_34,X_7,X_150);
    X_152 := batcalc.lng(X_151);
    X_153:bat[:oid,:lng] := batcalc.-(X_144,X_152);
    X_154:bat[:oid,:hge] := aggr.subsum(X_153,X_119,r1_133,true,true);
    (X_124,r1_138,r2_138) := algebra.subsort(X_123,false,false);
    (X_127,r1_141,r2_141) := algebra.subsort(X_122,r1_138,r2_138,false,false);
    X_131 := algebra.leftfetchjoin(r1_141,X_123);
    X_132 := algebra.leftfetchjoin(r1_141,X_122);
    X_156 := algebra.leftfetchjoin(r1_141,X_154);
    sql.resultSet(X_184,X_186,X_188,X_190,X_192,X_131,X_132,X_156);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

