stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 478 # length
function user.s4_1():void;
    X_236:void := querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, c_nation\n order by d_year, c_nation;","sequential_pipe",89);
    X_202 := bat.new(nil:str);
    X_209 := bat.append(X_202,"sys.dwdate");
    X_219 := bat.append(X_209,"sys.customer");
    X_227 := bat.append(X_219,"sys.L5");
    X_204 := bat.new(nil:str);
    X_211 := bat.append(X_204,"d_year");
    X_221 := bat.append(X_211,"c_nation");
    X_229 := bat.append(X_221,"profit1");
    X_205 := bat.new(nil:str);
    X_213 := bat.append(X_205,"int");
    X_223 := bat.append(X_213,"clob");
    X_231 := bat.append(X_223,"bigint");
    X_206 := bat.new(nil:int);
    X_215 := bat.append(X_206,32);
    X_225 := bat.append(X_215,0);
    X_233 := bat.append(X_225,64);
    X_208 := bat.new(nil:int);
    X_217 := bat.append(X_208,0);
    X_226 := bat.append(X_217,0);
    X_235 := bat.append(X_226,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_42:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_45,X_46:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_44:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_47 := sql.delta(X_42,X_45,X_46,X_44);
    X_48 := algebra.projection(C_1,X_47);
    C_49:bat[:oid] := sql.tid(X_0,"sys","part");
    X_51:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",0);
    X_57 := algebra.projection(C_49,X_51);
    C_59 := algebra.subselect(X_57,"MFGR#1","MFGR#1",true,false,false);
    C_64 := algebra.subselect(X_57,"MFGR#2","MFGR#2",true,false,false);
    X_65 := bat.mergecand(C_59,C_64);
    X_67 := algebra.projection(X_65,C_49);
    (X_68,X_69) := algebra.subjoin(X_48,X_67,nil:BAT,nil:BAT,false,nil:lng);
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_31,X_32:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_33 := sql.delta(X_28,X_31,X_32,X_30);
    X_76:bat[:oid] := algebra.projectionpath(X_68,C_1,X_33);
    C_81:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_83:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    X_89 := algebra.projection(C_81,X_83);
    C_91 := algebra.subselect(X_89,"AMERICA","AMERICA",true,false,false);
    X_93 := algebra.projection(C_91,C_81);
    (X_94,X_95) := algebra.subjoin(X_76,X_93,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_38,X_39:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_40 := sql.delta(X_35,X_38,X_39,X_37);
    X_101:bat[:oid] := algebra.projectionpath(X_94,X_68,C_1,X_40);
    C_107:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_116:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    X_122 := algebra.projection(C_107,X_116);
    C_124 := algebra.subselect(X_122,"AMERICA","AMERICA",true,false,false);
    X_128 := algebra.projection(C_124,C_107);
    (X_129,X_130) := algebra.subjoin(X_101,X_128,nil:BAT,nil:BAT,false,nil:lng);
    X_21:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_24,X_25:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_26 := sql.delta(X_21,X_24,X_25,X_23);
    X_137:bat[:oid] := algebra.projectionpath(X_129,X_94,X_68,C_1,X_26);
    C_148:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    (X_157,X_158) := algebra.subjoin(X_137,C_148,nil:BAT,nil:BAT,false,nil:lng);
    X_109:bat[:str] := sql.bind(X_0,"sys","customer","c_nation",0);
    X_169:bat[:str] := algebra.projectionpath(X_157,X_130,C_124,C_107,X_109);
    X_150:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_172:bat[:int] := algebra.projectionpath(X_158,C_148,X_150);
    (X_179,X_180,X_181) := group.subgroup(X_172);
    (X_182,X_183,X_184) := group.subgroupdone(X_169,X_179);
    X_185 := algebra.projection(X_183,X_172);
    X_186 := algebra.projection(X_183,X_169);
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_159:bat[:int] := algebra.projectionpath(X_157,X_129,X_94,X_68,C_1,X_4);
    X_174 := batcalc.lng(X_159);
    X_14:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",0);
    X_160:bat[:int] := algebra.projectionpath(X_157,X_129,X_94,X_68,C_1,X_14);
    X_175 := batcalc.lng(X_160);
    X_176:bat[:lng] := batcalc.-(X_174,X_175);
    X_187:bat[:lng] := aggr.subsum(X_176,X_182,X_183,true,true);
    (X_190,X_191,X_192) := algebra.subsort(X_185,false,false);
    (X_195,X_196,X_197) := algebra.subsort(X_186,X_191,X_192,false,false);
    X_198 := algebra.projection(X_196,X_185);
    X_199 := algebra.projection(X_196,X_186);
    X_200 := algebra.projection(X_196,X_187);
    sql.resultSet(X_227,X_229,X_231,X_233,X_235,X_198,X_199,X_200);
end user.s4_1;
#inline               actions= 0 time=6 usec 
#candidates           actions= 1 time=71 usec 
#remap                actions= 1 time=151 usec 
#costModel            actions= 1 time=68 usec 
#coercions            actions= 0 time=6 usec 
#evaluate             actions= 4 time=109 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions=11 time=80 usec 
#mergetable           actions= 0 time=88 usec 
#deadcode             actions=14 time=73 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=20 time=89 usec 
#commonTerms          actions= 0 time=20 usec 
#projectionpath       actions=18 time=82 usec 
#reorder              actions= 1 time=118 usec 
#deadcode             actions=18 time=65 usec 
#reduce               actions=90 time=112 usec 
#matpack              actions= 0 time=7 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=58 usec 
#garbageCollector     actions= 1 time=72 usec 
#total                actions= 1 time=1396 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

