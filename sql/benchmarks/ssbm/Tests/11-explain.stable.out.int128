stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 478 # length
function user.s4_1():void;
    X_142:void := querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, c_nation\n order by d_year, c_nation;","sequential_pipe",89);
    X_110 := bat.new(nil:oid,nil:str);
    X_118 := bat.append(X_110,"sys.dwdate");
    X_126 := bat.append(X_118,"sys.customer");
    X_133 := bat.append(X_126,"sys.L1");
    X_113 := bat.new(nil:oid,nil:str);
    X_120 := bat.append(X_113,"d_year");
    X_128 := bat.append(X_120,"c_nation");
    X_135 := bat.append(X_128,"profit1");
    X_114 := bat.new(nil:oid,nil:str);
    X_121 := bat.append(X_114,"int");
    X_129 := bat.append(X_121,"clob");
    X_137 := bat.append(X_129,"hugeint");
    X_115 := bat.new(nil:oid,nil:int);
    X_123 := bat.append(X_115,32);
    X_131 := bat.append(X_123,0);
    X_139 := bat.append(X_131,128);
    X_117 := bat.new(nil:oid,nil:int);
    X_125 := bat.append(X_117,0);
    X_132 := bat.append(X_125,0);
    X_141 := bat.append(X_132,0);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_12) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.delta(X_8,X_11,r1_12,X_14);
    X_17 := algebra.projection(C_5,X_16);
    C_18:bat[:oid] := sql.tid(X_4,"sys","part");
    X_20:bat[:str] := sql.bind(X_4,"sys","part","p_mfgr",0);
    X_22 := algebra.projection(C_18,X_20);
    C_23 := algebra.subselect(X_22,"MFGR#1","MFGR#1",true,false,false);
    C_26 := algebra.subselect(X_22,"MFGR#2","MFGR#2",true,false,false);
    X_27 := bat.mergecand(C_23,C_26);
    X_28 := algebra.projection(X_27,C_18);
    (X_29,r1_37) := algebra.subjoin(X_17,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_33:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_35,r1_44) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_37:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_38 := sql.delta(X_33,X_35,r1_44,X_37);
    X_39:bat[:oid] := algebra.projectionpath(X_29,C_5,X_38);
    C_40:bat[:oid] := sql.tid(X_4,"sys","supplier");
    X_42:bat[:str] := sql.bind(X_4,"sys","supplier","s_region",0);
    X_44 := algebra.projection(C_40,X_42);
    C_45 := algebra.subselect(X_44,"AMERICA","AMERICA",true,false,false);
    X_46 := algebra.projection(C_45,C_40);
    (X_47,r1_62) := algebra.subjoin(X_39,X_46,nil:BAT,nil:BAT,false,nil:lng);
    X_49:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_51,r1_66) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_53:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_54 := sql.delta(X_49,X_51,r1_66,X_53);
    X_55:bat[:oid] := algebra.projectionpath(X_47,X_29,C_5,X_54);
    C_56:bat[:oid] := sql.tid(X_4,"sys","customer");
    X_58:bat[:str] := sql.bind(X_4,"sys","customer","c_region",0);
    X_60 := algebra.projection(C_56,X_58);
    C_61 := algebra.subselect(X_60,"AMERICA","AMERICA",true,false,false);
    X_62 := algebra.projection(C_61,C_56);
    (X_63,r1_88) := algebra.subjoin(X_55,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_67,r1_95) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_69:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_70 := sql.delta(X_65,X_67,r1_95,X_69);
    X_71:bat[:oid] := algebra.projectionpath(X_63,X_47,X_29,C_5,X_70);
    C_72:bat[:oid] := sql.tid(X_4,"sys","dwdate");
    (X_74,r1_105) := algebra.subjoin(X_71,C_72,nil:BAT,nil:BAT,false,nil:lng);
    X_76:bat[:str] := sql.bind(X_4,"sys","customer","c_nation",0);
    X_78:bat[:str] := algebra.projectionpath(X_74,r1_88,C_61,C_56,X_76);
    X_79:bat[:int] := sql.bind(X_4,"sys","dwdate","d_year",0);
    X_81:bat[:int] := algebra.projectionpath(r1_105,C_72,X_79);
    (X_82,r1_125,r2_125) := group.subgroup(X_81);
    (X_85,r1_128,r2_128) := group.subgroupdone(X_78,X_82);
    X_88 := algebra.projection(r1_128,X_78);
    X_89 := algebra.projection(r1_128,X_81);
    X_98:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    X_100:bat[:int] := algebra.projectionpath(X_74,X_63,X_47,X_29,C_5,X_98);
    X_101 := batcalc.lng(X_100);
    X_102:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_supplycost",0);
    X_104:bat[:int] := algebra.projectionpath(X_74,X_63,X_47,X_29,C_5,X_102);
    X_105 := batcalc.lng(X_104);
    X_106:bat[:lng] := batcalc.-(X_101,X_105);
    X_107:bat[:hge] := aggr.subsum(X_106,X_85,r1_128,true,true);
    (X_90,r1_133,r2_133) := algebra.subsort(X_89,false,false);
    (X_93,r1_138,r2_138) := algebra.subsort(X_88,r1_133,r2_133,false,false);
    X_96 := algebra.projection(r1_138,X_89);
    X_97 := algebra.projection(r1_138,X_88);
    X_108 := algebra.projection(r1_138,X_107);
    sql.resultSet(X_133,X_135,X_137,X_139,X_141,X_96,X_97,X_108);
end user.s4_1;
#inline               actions= 0 time=6 usec 
#candidates           actions= 1 time=71 usec 
#remap                actions= 1 time=151 usec 
#costModel            actions= 1 time=68 usec 
#coercions            actions= 0 time=6 usec 
#evaluate             actions= 4 time=109 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions=11 time=80 usec 
#mergetable           actions= 0 time=88 usec 
#deadcode             actions=14 time=73 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=20 time=89 usec 
#commonTerms          actions= 0 time=20 usec 
#projectionpath       actions=18 time=82 usec 
#reorder              actions= 1 time=118 usec 
#deadcode             actions=18 time=65 usec 
#reduce               actions=90 time=112 usec 
#matpack              actions= 0 time=7 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=58 usec 
#garbageCollector     actions= 1 time=72 usec 
#total                actions= 1 time=1396 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

