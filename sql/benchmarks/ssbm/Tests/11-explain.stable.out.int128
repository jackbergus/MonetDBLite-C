stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 479 # length
function user.s2_1():void;
    X_170:void := querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, c_nation\n order by d_year, c_nation;","sequential_pipe",110);
    X_138 := bat.new(nil:oid,nil:str);
    X_146 := bat.append(X_138,"sys.dwdate");
    X_154 := bat.append(X_146,"sys.customer");
    X_161 := bat.append(X_154,"sys.L1");
    X_141 := bat.new(nil:oid,nil:str);
    X_148 := bat.append(X_141,"d_year");
    X_156 := bat.append(X_148,"c_nation");
    X_163 := bat.append(X_156,"profit1");
    X_142 := bat.new(nil:oid,nil:str);
    X_149 := bat.append(X_142,"int");
    X_157 := bat.append(X_149,"clob");
    X_165 := bat.append(X_157,"hugeint");
    X_143 := bat.new(nil:oid,nil:int);
    X_151 := bat.append(X_143,32);
    X_159 := bat.append(X_151,0);
    X_167 := bat.append(X_159,128);
    X_145 := bat.new(nil:oid,nil:int);
    X_153 := bat.append(X_145,0);
    X_160 := bat.append(X_153,0);
    X_169 := bat.append(X_160,0);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_12) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.delta(X_8,X_11,r1_12,X_14);
    X_17 := algebra.projection(C_5,X_16);
    C_18:bat[:oid] := sql.tid(X_4,"sys","part");
    X_20:bat[:str] := sql.bind(X_4,"sys","part","p_mfgr",0);
    (C_22,r1_23) := sql.bind(X_4,"sys","part","p_mfgr",2);
    X_24:bat[:str] := sql.bind(X_4,"sys","part","p_mfgr",1);
    X_25 := sql.delta(X_20,C_22,r1_23,X_24);
    X_26 := algebra.projection(C_18,X_25);
    C_27 := algebra.subselect(X_26,"MFGR#1","MFGR#1",true,false,false);
    C_30 := algebra.subselect(X_26,"MFGR#2","MFGR#2",true,false,false);
    X_31 := bat.mergecand(C_27,C_30);
    X_32 := algebra.projection(X_31,C_18);
    (X_33,r1_37) := algebra.subjoin(X_17,X_32,nil:BAT,nil:BAT,false,nil:lng);
    X_37:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_39,r1_44) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_41:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_42 := sql.delta(X_37,X_39,r1_44,X_41);
    X_43:bat[:oid] := algebra.projectionpath(X_33,C_5,X_42);
    C_44:bat[:oid] := sql.tid(X_4,"sys","supplier");
    X_46:bat[:str] := sql.bind(X_4,"sys","supplier","s_region",0);
    (C_48,r1_54) := sql.bind(X_4,"sys","supplier","s_region",2);
    X_50:bat[:str] := sql.bind(X_4,"sys","supplier","s_region",1);
    X_51 := sql.delta(X_46,C_48,r1_54,X_50);
    X_52 := algebra.projection(C_44,X_51);
    C_53 := algebra.subselect(X_52,"AMERICA","AMERICA",true,false,false);
    X_54 := algebra.projection(C_53,C_44);
    (X_55,r1_62) := algebra.subjoin(X_43,X_54,nil:BAT,nil:BAT,false,nil:lng);
    X_57:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_59,r1_66) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_61:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_62 := sql.delta(X_57,X_59,r1_66,X_61);
    X_63:bat[:oid] := algebra.projectionpath(X_55,X_33,C_5,X_62);
    C_64:bat[:oid] := sql.tid(X_4,"sys","customer");
    X_66:bat[:str] := sql.bind(X_4,"sys","customer","c_region",0);
    (C_68,r1_77) := sql.bind(X_4,"sys","customer","c_region",2);
    X_70:bat[:str] := sql.bind(X_4,"sys","customer","c_region",1);
    X_71 := sql.delta(X_66,C_68,r1_77,X_70);
    X_72 := algebra.projection(C_64,X_71);
    C_73 := algebra.subselect(X_72,"AMERICA","AMERICA",true,false,false);
    X_74 := algebra.projection(C_73,C_64);
    (X_75,r1_88) := algebra.subjoin(X_63,X_74,nil:BAT,nil:BAT,false,nil:lng);
    X_77:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_79,r1_95) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_81:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_82 := sql.delta(X_77,X_79,r1_95,X_81);
    X_83:bat[:oid] := algebra.projectionpath(X_75,X_55,X_33,C_5,X_82);
    C_84:bat[:oid] := sql.tid(X_4,"sys","dwdate");
    (X_86,r1_105) := algebra.subjoin(X_83,C_84,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:str] := sql.bind(X_4,"sys","customer","c_nation",0);
    (C_90,r1_109) := sql.bind(X_4,"sys","customer","c_nation",2);
    X_92:bat[:str] := sql.bind(X_4,"sys","customer","c_nation",1);
    X_93 := sql.delta(X_88,C_90,r1_109,X_92);
    X_94:bat[:str] := algebra.projectionpath(X_86,r1_88,C_73,C_64,X_93);
    X_95:bat[:int] := sql.bind(X_4,"sys","dwdate","d_year",0);
    (C_97,r1_119) := sql.bind(X_4,"sys","dwdate","d_year",2);
    X_99:bat[:int] := sql.bind(X_4,"sys","dwdate","d_year",1);
    X_100 := sql.delta(X_95,C_97,r1_119,X_99);
    X_101:bat[:int] := algebra.projectionpath(r1_105,C_84,X_100);
    (X_102,r1_125,r2_125) := group.subgroup(X_101);
    (X_105,r1_128,r2_128) := group.subgroupdone(X_94,X_102);
    X_108 := algebra.projection(r1_128,X_94);
    X_109 := algebra.projection(r1_128,X_101);
    X_118:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    (C_120,r1_145) := sql.bind(X_4,"sys","lineorder","lo_revenue",2);
    X_122:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",1);
    X_123 := sql.delta(X_118,C_120,r1_145,X_122);
    X_124:bat[:int] := algebra.projectionpath(X_86,X_75,X_55,X_33,C_5,X_123);
    X_125 := batcalc.lng(X_124);
    X_126:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_supplycost",0);
    (C_128,r1_157) := sql.bind(X_4,"sys","lineorder","lo_supplycost",2);
    X_130:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_supplycost",1);
    X_131 := sql.delta(X_126,C_128,r1_157,X_130);
    X_132:bat[:int] := algebra.projectionpath(X_86,X_75,X_55,X_33,C_5,X_131);
    X_133 := batcalc.lng(X_132);
    X_134:bat[:lng] := batcalc.-(X_125,X_133);
    X_135:bat[:hge] := aggr.subsum(X_134,X_105,r1_128,true,true);
    (X_110,r1_133,r2_133) := algebra.subsort(X_109,false,false);
    (X_113,r1_138,r2_138) := algebra.subsort(X_108,r1_133,r2_133,false,false);
    X_116 := algebra.projection(r1_138,X_109);
    X_117 := algebra.projection(r1_138,X_108);
    X_136 := algebra.projection(r1_138,X_135);
    sql.resultSet(X_161,X_163,X_165,X_167,X_169,X_116,X_117,X_136);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

