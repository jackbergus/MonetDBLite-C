stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 480 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str):void;
    X_166 := bat.new(nil:oid,nil:str);
    X_174 := bat.append(X_166,"sys.dwdate");
    X_184 := bat.append(X_174,"sys.customer");
    X_192 := bat.append(X_184,"sys.L1");
    X_169 := bat.new(nil:oid,nil:str);
    X_176 := bat.append(X_169,"d_year");
    X_186 := bat.append(X_176,"c_nation");
    X_194 := bat.append(X_186,"profit1");
    X_170 := bat.new(nil:oid,nil:str);
    X_178 := bat.append(X_170,"int");
    X_188 := bat.append(X_178,"clob");
    X_196 := bat.append(X_188,"hugeint");
    X_171 := bat.new(nil:oid,nil:int);
    X_180 := bat.append(X_171,32);
    X_190 := bat.append(X_180,0);
    X_198 := bat.append(X_190,64);
    X_173 := bat.new(nil:oid,nil:int);
    X_182 := bat.append(X_173,0);
    X_191 := bat.append(X_182,0);
    X_200 := bat.append(X_191,0);
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_16:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.leftfetchjoin(X_7,X_18);
    X_20:bat[:oid,:oid]  := sql.tid(X_6,"sys","part");
    X_22:bat[:oid,:str]  := sql.bind(X_6,"sys","part","p_mfgr",0);
    (X_24,r1_24) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_26:bat[:oid,:str]  := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_27 := sql.delta(X_22,X_24,r1_24,X_26);
    X_28 := algebra.leftfetchjoin(X_20,X_27);
    X_29 := algebra.subselect(X_28,A2,A2,true,true,false);
    X_31 := algebra.subselect(X_28,A3,A3,true,true,false);
    X_32 := bat.mergecand(X_29,X_31);
    X_33 := algebra.leftfetchjoin(X_32,X_20);
    (X_34,r1_36) := algebra.subjoin(X_19,X_33,nil:BAT,nil:BAT,true,nil:lng);
    X_236 := algebra.leftfetchjoin(X_34,X_7);
    X_39:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_44,r1_46) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_47:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_49 := sql.delta(X_39,X_44,r1_46,X_47);
    X_50:bat[:oid,:oid]  := algebra.leftfetchjoin(X_236,X_49);
    X_51:bat[:oid,:oid]  := sql.tid(X_6,"sys","supplier");
    X_53:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_region",0);
    (X_55,r1_58) := sql.bind(X_6,"sys","supplier","s_region",2);
    X_57:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_region",1);
    X_58 := sql.delta(X_53,X_55,r1_58,X_57);
    X_59 := algebra.leftfetchjoin(X_51,X_58);
    X_60 := algebra.subselect(X_59,A1,A1,true,true,false);
    X_62 := algebra.leftfetchjoin(X_60,X_51);
    (X_63,r1_67) := algebra.subjoin(X_50,X_62,nil:BAT,nil:BAT,true,nil:lng);
    X_237 := algebra.leftfetchjoin(X_63,X_34);
    X_65:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_67,r1_71) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_69:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_70 := sql.delta(X_65,X_67,r1_71,X_69);
    X_71:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_237,X_7,X_70);
    X_72:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_75:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_region",0);
    (X_78,r1_84) := sql.bind(X_6,"sys","customer","c_region",2);
    X_81:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_region",1);
    X_83 := sql.delta(X_75,X_78,r1_84,X_81);
    X_84 := algebra.leftfetchjoin(X_72,X_83);
    X_85 := algebra.subselect(X_84,A0,A0,true,true,false);
    X_87 := algebra.leftfetchjoin(X_85,X_72);
    (X_88,r1_95) := algebra.subjoin(X_71,X_87,nil:BAT,nil:BAT,true,nil:lng);
    X_238 := algebra.leftfetchjoin(X_88,X_63);
    X_92:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_95,r1_102) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_97:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_98 := sql.delta(X_92,X_95,r1_102,X_97);
    X_99:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_238,X_34,X_7,X_98);
    X_100:bat[:oid,:oid]  := sql.tid(X_6,"sys","dwdate");
    (X_102,r1_112) := algebra.subjoin(X_99,X_100,nil:BAT,nil:BAT,true,nil:lng);
    X_239 := algebra.leftfetchjoin(r1_95,X_85);
    X_104:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_nation",0);
    (X_109,r1_119) := sql.bind(X_6,"sys","customer","c_nation",2);
    X_112:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_nation",1);
    X_114 := sql.delta(X_104,X_109,r1_119,X_112);
    X_115:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_102,X_239,X_72,X_114);
    X_116:bat[:oid,:int]  := sql.bind(X_6,"sys","dwdate","d_year",0);
    (X_118,r1_131) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_120:bat[:oid,:int]  := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_121 := sql.delta(X_116,X_118,r1_131,X_120);
    X_122:bat[:oid,:int]  := algebra.leftfetchjoinPath(r1_112,X_100,X_121);
    (X_123,r1_137,r2_137) := group.subgroup(X_122);
    (X_126,r1_140,r2_140) := group.subgroupdone(X_115,X_123);
    X_129 := algebra.leftfetchjoin(r1_140,X_115);
    X_130 := algebra.leftfetchjoin(r1_140,X_122);
    X_240 := algebra.leftfetchjoin(X_102,X_88);
    X_140:bat[:oid,:int]  := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (X_145,r1_159) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_148:bat[:oid,:int]  := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_150 := sql.delta(X_140,X_145,r1_159,X_148);
    X_151:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_240,X_63,X_34,X_7,X_150);
    X_152 := batcalc.lng(X_151);
    X_153:bat[:oid,:int]  := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (X_155,r1_173) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_157:bat[:oid,:int]  := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_158 := sql.delta(X_153,X_155,r1_173,X_157);
    X_159:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_240,X_63,X_34,X_7,X_158);
    X_160 := batcalc.lng(X_159);
    X_161:bat[:oid,:lng]  := batcalc.-(X_152,X_160);
    X_162:bat[:oid,:hge]  := aggr.subsum(X_161,X_126,r1_140,true,true);
    (X_131,r1_145,r2_145) := algebra.subsort(X_130,false,false);
    (X_135,r1_149,r2_149) := algebra.subsort(X_129,r1_145,r2_145,false,false);
    X_138 := algebra.leftfetchjoin(r1_149,X_130);
    X_139 := algebra.leftfetchjoin(r1_149,X_129);
    X_164 := algebra.leftfetchjoin(r1_149,X_162);
    sql.resultSet(X_192,X_194,X_196,X_198,X_200,X_138,X_139,X_164);
end s2_1;
# querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, c_nation\n\torder by d_year, c_nation;","sequential_pipe")

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

