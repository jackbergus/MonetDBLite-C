stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 479 # length
function user.s2_1(A0:str,A1:str,A2:str,A3:str):void;
    X_204:void := querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, c_nation\n order by d_year, c_nation;","sequential_pipe",110);
    X_170 := bat.new(nil:str);
    X_177 := bat.append(X_170,"sys.dwdate");
    X_187 := bat.append(X_177,"sys.customer");
    X_195 := bat.append(X_187,"sys.L1");
    X_172 := bat.new(nil:str);
    X_179 := bat.append(X_172,"d_year");
    X_189 := bat.append(X_179,"c_nation");
    X_197 := bat.append(X_189,"profit1");
    X_173 := bat.new(nil:str);
    X_181 := bat.append(X_173,"int");
    X_191 := bat.append(X_181,"clob");
    X_199 := bat.append(X_191,"bigint");
    X_174 := bat.new(nil:int);
    X_183 := bat.append(X_174,32);
    X_193 := bat.append(X_183,0);
    X_201 := bat.append(X_193,64);
    X_176 := bat.new(nil:int);
    X_185 := bat.append(X_176,0);
    X_194 := bat.append(X_185,0);
    X_203 := bat.append(X_194,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_7,r1_12) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_12 := sql.delta(X_4,X_7,r1_12,X_10);
    X_13 := algebra.projection(C_1,X_12);
    C_14:bat[:oid] := sql.tid(X_0,"sys","part");
    X_16:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",0);
    (C_18:bat[:oid],r1_23:bat[:str]) := sql.bind(X_0,"sys","part","p_mfgr",2);
    X_20:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",1);
    X_21 := sql.delta(X_16,C_18,r1_23,X_20);
    X_22 := algebra.projection(C_14,X_21);
    C_24 := algebra.subselect(X_22,A2,A2,true,false,false);
    C_29 := algebra.subselect(X_22,A3,A3,true,false,false);
    X_30 := bat.mergecand(C_24,C_29);
    X_31 := algebra.projection(X_30,C_14);
    (X_32,r1_37) := algebra.subjoin(X_13,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_39,r1_44) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_42 := sql.delta(X_37,X_39,r1_44,X_41);
    X_44:bat[:oid] := algebra.projectionpath(X_32,C_1,X_42);
    C_45:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_47:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    (C_49:bat[:oid],r1_54:bat[:str]) := sql.bind(X_0,"sys","supplier","s_region",2);
    X_51:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",1);
    X_52 := sql.delta(X_47,C_49,r1_54,X_51);
    X_53 := algebra.projection(C_45,X_52);
    C_55 := algebra.subselect(X_53,A1,A1,true,false,false);
    X_56 := algebra.projection(C_55,C_45);
    (X_57,r1_62) := algebra.subjoin(X_44,X_56,nil:BAT,nil:BAT,false,nil:lng);
    X_59:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_61,r1_66) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_63:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_64 := sql.delta(X_59,X_61,r1_66,X_63);
    X_67:bat[:oid] := algebra.projectionpath(X_57,X_32,C_1,X_64);
    C_68:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_70:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    (C_72:bat[:oid],r1_77:bat[:str]) := sql.bind(X_0,"sys","customer","c_region",2);
    X_74:bat[:str] := sql.bind(X_0,"sys","customer","c_region",1);
    X_75 := sql.delta(X_70,C_72,r1_77,X_74);
    X_76 := algebra.projection(C_68,X_75);
    C_78 := algebra.subselect(X_76,A0,A0,true,false,false);
    X_82 := algebra.projection(C_78,C_68);
    (X_83,r1_88) := algebra.subjoin(X_67,X_82,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_90,r1_95) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_92:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_93 := sql.delta(X_88,X_90,r1_95,X_92);
    X_97:bat[:oid] := algebra.projectionpath(X_83,X_57,X_32,C_1,X_93);
    C_98:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    (X_100,r1_105) := algebra.subjoin(X_97,C_98,nil:BAT,nil:BAT,false,nil:lng);
    X_102:bat[:str] := sql.bind(X_0,"sys","customer","c_nation",0);
    (C_104:bat[:oid],r1_109:bat[:str]) := sql.bind(X_0,"sys","customer","c_nation",2);
    X_106:bat[:str] := sql.bind(X_0,"sys","customer","c_nation",1);
    X_107 := sql.delta(X_102,C_104,r1_109,X_106);
    X_111:bat[:str] := algebra.projectionpath(X_100,r1_88,C_78,C_68,X_107);
    X_112:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    (C_114:bat[:oid],r1_119:bat[:int]) := sql.bind(X_0,"sys","dwdate","d_year",2);
    X_116:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",1);
    X_117 := sql.delta(X_112,C_114,r1_119,X_116);
    X_119:bat[:int] := algebra.projectionpath(r1_105,C_98,X_117);
    (X_120,r1_125,r2_125) := group.subgroup(X_119);
    (X_123,r1_128,r2_128) := group.subgroupdone(X_111,X_120);
    X_126 := algebra.projection(r1_128,X_111);
    X_127 := algebra.projection(r1_128,X_119);
    X_138:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    (C_140:bat[:oid],r1_145:bat[:int]) := sql.bind(X_0,"sys","lineorder","lo_revenue",2);
    X_142:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",1);
    X_143 := sql.delta(X_138,C_140,r1_145,X_142);
    X_148:bat[:int] := algebra.projectionpath(X_100,X_83,X_57,X_32,C_1,X_143);
    X_149 := batcalc.lng(X_148);
    X_150:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",0);
    (C_152:bat[:oid],r1_157:bat[:int]) := sql.bind(X_0,"sys","lineorder","lo_supplycost",2);
    X_154:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",1);
    X_155 := sql.delta(X_150,C_152,r1_157,X_154);
    X_160:bat[:int] := algebra.projectionpath(X_100,X_83,X_57,X_32,C_1,X_155);
    X_161 := batcalc.lng(X_160);
    X_162:bat[:lng] := batcalc.-(X_149,X_161);
    X_165:bat[:lng] := aggr.subsum(X_162,X_123,r1_128,true,true);
    (X_128,r1_133,r2_133) := algebra.subsort(X_127,false,false);
    (X_133,r1_138,r2_138) := algebra.subsort(X_126,r1_133,r2_133,false,false);
    X_136 := algebra.projection(r1_138,X_127);
    X_137 := algebra.projection(r1_138,X_126);
    X_168 := algebra.projection(r1_138,X_165);
    sql.resultSet(X_195,X_197,X_199,X_201,X_203,X_136,X_137,X_168);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

