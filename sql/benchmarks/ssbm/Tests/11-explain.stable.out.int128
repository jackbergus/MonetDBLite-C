stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 501 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str):void;
    X_171:void := querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, c_nation\n\torder by d_year, c_nation;","sequential_pipe",110);
    X_139 := bat.new(nil:oid,nil:str);
    X_147 := bat.append(X_139,"sys.dwdate");
    X_155 := bat.append(X_147,"sys.customer");
    X_162 := bat.append(X_155,"sys.L1");
    X_142 := bat.new(nil:oid,nil:str);
    X_149 := bat.append(X_142,"d_year");
    X_157 := bat.append(X_149,"c_nation");
    X_164 := bat.append(X_157,"profit1");
    X_143 := bat.new(nil:oid,nil:str);
    X_150 := bat.append(X_143,"int");
    X_158 := bat.append(X_150,"clob");
    X_166 := bat.append(X_158,"hugeint");
    X_144 := bat.new(nil:oid,nil:int);
    X_152 := bat.append(X_144,32);
    X_160 := bat.append(X_152,0);
    X_168 := bat.append(X_160,128);
    X_146 := bat.new(nil:oid,nil:int);
    X_154 := bat.append(X_146,0);
    X_161 := bat.append(X_154,0);
    X_170 := bat.append(X_161,0);
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_16:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.leftfetchjoin(X_7,X_18);
    X_20:bat[:oid,:oid]  := sql.tid(X_6,"sys","part");
    X_22:bat[:oid,:str]  := sql.bind(X_6,"sys","part","p_mfgr",0);
    (X_24,r1_24) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_26:bat[:oid,:str]  := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_27 := sql.delta(X_22,X_24,r1_24,X_26);
    X_28 := algebra.leftfetchjoin(X_20,X_27);
    X_29 := algebra.subselect(X_28,A2,A2,true,false,false);
    X_31 := algebra.subselect(X_28,A3,A3,true,false,false);
    X_32 := bat.mergecand(X_29,X_31);
    X_33 := algebra.leftfetchjoin(X_32,X_20);
    (X_34,r1_37) := algebra.subjoin(X_19,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_38:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_40,r1_44) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_42:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_43 := sql.delta(X_38,X_40,r1_44,X_42);
    X_44:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_34,X_7,X_43);
    X_45:bat[:oid,:oid] := sql.tid(X_6,"sys","supplier");
    X_47:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_region",0);
    (X_49,r1_54) := sql.bind(X_6,"sys","supplier","s_region",2);
    X_51:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_region",1);
    X_52 := sql.delta(X_47,X_49,r1_54,X_51);
    X_53 := algebra.leftfetchjoin(X_45,X_52);
    X_54 := algebra.subselect(X_53,A1,A1,true,false,false);
    X_55 := algebra.leftfetchjoin(X_54,X_45);
    (X_56,r1_63) := algebra.subjoin(X_44,X_55,nil:BAT,nil:BAT,false,nil:lng);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_60,r1_68) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_62:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_63 := sql.delta(X_58,X_60,r1_68,X_62);
    X_64:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_56,X_34,X_7,X_63);
    X_65:bat[:oid,:oid] := sql.tid(X_6,"sys","customer");
    X_67:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_region",0);
    (X_69,r1_79) := sql.bind(X_6,"sys","customer","c_region",2);
    X_71:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_region",1);
    X_72 := sql.delta(X_67,X_69,r1_79,X_71);
    X_73 := algebra.leftfetchjoin(X_65,X_72);
    X_74 := algebra.subselect(X_73,A0,A0,true,false,false);
    X_75 := algebra.leftfetchjoin(X_74,X_65);
    (X_76,r1_87) := algebra.subjoin(X_64,X_75,nil:BAT,nil:BAT,false,nil:lng);
    X_78:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_80,r1_94) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_82:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_83 := sql.delta(X_78,X_80,r1_94,X_82);
    X_84:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_76,X_56,X_34,X_7,X_83);
    X_85:bat[:oid,:oid] := sql.tid(X_6,"sys","dwdate");
    (X_87,r1_104) := algebra.subjoin(X_84,X_85,nil:BAT,nil:BAT,false,nil:lng);
    X_89:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_nation",0);
    (X_91,r1_109) := sql.bind(X_6,"sys","customer","c_nation",2);
    X_93:bat[:oid,:str] := sql.bind(X_6,"sys","customer","c_nation",1);
    X_94 := sql.delta(X_89,X_91,r1_109,X_93);
    X_95:bat[:oid,:str] := algebra.leftfetchjoinPath(X_87,r1_87,X_74,X_65,X_94);
    X_96:bat[:oid,:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    (X_98,r1_119) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_100:bat[:oid,:int] := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_101 := sql.delta(X_96,X_98,r1_119,X_100);
    X_102:bat[:oid,:int] := algebra.leftfetchjoinPath(r1_104,X_85,X_101);
    (X_103,r1_125,r2_125) := group.subgroup(X_102);
    (X_106,r1_128,r2_128) := group.subgroupdone(X_95,X_103);
    X_109 := algebra.leftfetchjoin(r1_128,X_95);
    X_110 := algebra.leftfetchjoin(r1_128,X_102);
    X_119:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (X_121,r1_145) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_123:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_124 := sql.delta(X_119,X_121,r1_145,X_123);
    X_125:bat[:oid,:int] := algebra.leftfetchjoinPath(X_87,X_76,X_56,X_34,X_7,X_124);
    X_126 := batcalc.lng(X_125);
    X_127:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (X_129,r1_157) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_131:bat[:oid,:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_132 := sql.delta(X_127,X_129,r1_157,X_131);
    X_133:bat[:oid,:int] := algebra.leftfetchjoinPath(X_87,X_76,X_56,X_34,X_7,X_132);
    X_134 := batcalc.lng(X_133);
    X_135:bat[:oid,:lng] := batcalc.-(X_126,X_134);
    X_136:bat[:oid,:hge] := aggr.subsum(X_135,X_106,r1_128,true,true);
    (X_111,r1_133,r2_133) := algebra.subsort(X_110,false,false);
    (X_114,r1_136,r2_136) := algebra.subsort(X_109,r1_133,r2_133,false,false);
    X_117 := algebra.leftfetchjoin(r1_136,X_110);
    X_118 := algebra.leftfetchjoin(r1_136,X_109);
    X_137 := algebra.leftfetchjoin(r1_136,X_136);
    sql.resultSet(X_162,X_164,X_166,X_168,X_170,X_117,X_118,X_137);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

