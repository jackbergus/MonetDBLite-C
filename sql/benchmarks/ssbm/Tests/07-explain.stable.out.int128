stdout of test '07-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_nation, s_nation, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_region = 'ASIA'
#		and s_region = 'ASIA'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_nation, s_nation, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 436 # length
function user.s4_1():void;
    X_209:void := querylog.define("explain\nselect c_nation, s_nation, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_region = \\'ASIA\\'\n and s_region = \\'ASIA\\'\n and d_year >= 1992 and d_year <= 1997\n group by c_nation, s_nation, d_year\n order by d_year asc, revenue desc;","sequential_pipe",75);
    X_168 := bat.new(nil:str);
    X_175 := bat.append(X_168,"sys.customer");
    X_184 := bat.append(X_175,"sys.supplier");
    X_191 := bat.append(X_184,"sys.dwdate");
    X_200 := bat.append(X_191,"sys.L6");
    X_170 := bat.new(nil:str);
    X_177 := bat.append(X_170,"c_nation");
    X_186 := bat.append(X_177,"s_nation");
    X_193 := bat.append(X_186,"d_year");
    X_202 := bat.append(X_193,"revenue");
    X_171 := bat.new(nil:str);
    X_179 := bat.append(X_171,"clob");
    X_188 := bat.append(X_179,"clob");
    X_195 := bat.append(X_188,"int");
    X_204 := bat.append(X_195,"hugeint");
    X_172 := bat.new(nil:int);
    X_181 := bat.append(X_172,0);
    X_189 := bat.append(X_181,0);
    X_197 := bat.append(X_189,32);
    X_206 := bat.append(X_197,128);
    X_174 := bat.new(nil:int);
    X_183 := bat.append(X_174,0);
    X_190 := bat.append(X_183,0);
    X_199 := bat.append(X_190,0);
    X_208 := bat.append(X_199,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_31,X_32:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_34 := sql.projectdelta(C_1,X_28,X_31,X_32,X_30);
    X_44:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    C_35:bat[:oid] := sql.tid(X_0,"sys","customer");
    C_52 := algebra.subselect(X_44,C_35,"ASIA","ASIA",true,false,false);
    (X_59,X_60) := algebra.subjoin(X_34,C_52,nil:BAT,nil:BAT,false,nil:lng);
    X_21:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_24,X_25:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_27 := sql.projectdelta(C_1,X_21,X_24,X_25,X_23);
    X_66 := algebra.projection(X_59,X_27);
    X_80:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    C_71:bat[:oid] := sql.tid(X_0,"sys","supplier");
    C_88 := algebra.subselect(X_80,C_71,"ASIA","ASIA",true,false,false);
    (X_95,X_96) := algebra.subjoin(X_66,C_88,nil:BAT,nil:BAT,false,nil:lng);
    X_14:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_17,X_18:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_20 := sql.projectdelta(C_1,X_14,X_17,X_18,X_16);
    X_101:bat[:oid] := algebra.projectionpath(X_95,X_59,X_20);
    X_112:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    C_110:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    C_121 := algebra.subselect(X_112,C_110,1992,1997,true,true,false);
    (X_127,X_128) := algebra.subjoin(X_101,C_121,nil:BAT,nil:BAT,false,nil:lng);
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_129:bat[:int] := algebra.projectionpath(X_127,X_95,X_59,C_1,X_4);
    X_73:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",0);
    X_136:bat[:str] := algebra.projectionpath(X_127,X_96,C_88,X_73);
    X_37:bat[:str] := sql.bind(X_0,"sys","customer","c_nation",0);
    X_133:bat[:str] := algebra.projectionpath(X_127,X_95,X_60,C_52,X_37);
    X_139:bat[:int] := algebra.projectionpath(X_128,C_121,X_112);
    (X_141,X_142,X_143) := group.subgroup(X_139);
    (X_144,X_145,X_146) := group.subgroup(X_133,X_141);
    (X_147,X_148,X_149) := group.subgroupdone(X_136,X_144);
    X_152 := algebra.projection(X_148,X_139);
    X_153:bat[:hge] := aggr.subsum(X_129,X_147,X_148,true,true);
    (X_154,X_155,X_156) := algebra.subsort(X_152,false,false);
    (X_159,X_160,X_161) := algebra.subsort(X_153,X_155,X_156,true,false);
    X_163:bat[:str] := algebra.projectionpath(X_160,X_148,X_133);
    X_164:bat[:str] := algebra.projectionpath(X_160,X_148,X_136);
    X_165 := algebra.projection(X_160,X_152);
    X_166 := algebra.projection(X_160,X_153);
    sql.resultSet(X_200,X_202,X_204,X_206,X_208,X_163,X_164,X_165,X_166);
end user.s4_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=53 usec 
#remap                actions= 0 time=5 usec 
#costModel            actions= 1 time=46 usec 
#coercions            actions= 0 time=5 usec 
#evaluate             actions= 4 time=71 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions=14 time=73 usec 
#aliases              actions=18 time=53 usec 
#mergetable           actions= 0 time=58 usec 
#deadcode             actions=15 time=45 usec 
#aliases              actions= 0 time=12 usec 
#constants            actions=21 time=56 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions=12 time=47 usec 
#reorder              actions= 1 time=74 usec 
#deadcode             actions=12 time=40 usec 
#reduce               actions=98 time=77 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=35 usec 
#garbageCollector     actions= 1 time=43 usec 
#total                actions= 1 time=890 usec 

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

