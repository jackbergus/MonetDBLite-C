stdout of test '07-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_nation, s_nation, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_region = 'ASIA'
#		and s_region = 'ASIA'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_nation, s_nation, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 437 # length
function user.s4_1():void;
    X_148:void := querylog.define("explain\nselect c_nation, s_nation, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_region = \\'ASIA\\'\n and s_region = \\'ASIA\\'\n and d_year >= 1992 and d_year <= 1997\n group by c_nation, s_nation, d_year\n order by d_year asc, revenue desc;","sequential_pipe",100);
    X_110 := bat.new(nil:oid,nil:str);
    X_118 := bat.append(X_110,"sys.customer");
    X_125 := bat.append(X_118,"sys.supplier");
    X_131 := bat.append(X_125,"sys.dwdate");
    X_139 := bat.append(X_131,"sys.L1");
    X_113 := bat.new(nil:oid,nil:str);
    X_120 := bat.append(X_113,"c_nation");
    X_127 := bat.append(X_120,"s_nation");
    X_133 := bat.append(X_127,"d_year");
    X_141 := bat.append(X_133,"revenue");
    X_114 := bat.new(nil:oid,nil:str);
    X_121 := bat.append(X_114,"clob");
    X_128 := bat.append(X_121,"clob");
    X_134 := bat.append(X_128,"int");
    X_143 := bat.append(X_134,"hugeint");
    X_115 := bat.new(nil:oid,nil:int);
    X_123 := bat.append(X_115,0);
    X_129 := bat.append(X_123,0);
    X_136 := bat.append(X_129,32);
    X_145 := bat.append(X_136,128);
    X_117 := bat.new(nil:oid,nil:int);
    X_124 := bat.append(X_117,0);
    X_130 := bat.append(X_124,0);
    X_138 := bat.append(X_130,0);
    X_147 := bat.append(X_138,0);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_11,r1_12) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_14:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_16 := sql.projectdelta(C_5,X_8,X_11,r1_12,X_14);
    X_19:bat[:str] := sql.bind(X_4,"sys","customer","c_region",0);
    C_17:bat[:oid] := sql.tid(X_4,"sys","customer");
    C_164 := algebra.subselect(X_19,C_17,"ASIA","ASIA",true,false,false);
    (C_21,r1_23) := sql.bind(X_4,"sys","customer","c_region",2);
    C_165 := algebra.subselect(r1_23,nil:bat[:oid],"ASIA","ASIA",true,false,false);
    X_23:bat[:str] := sql.bind(X_4,"sys","customer","c_region",1);
    C_167 := algebra.subselect(X_23,C_17,"ASIA","ASIA",true,false,false);
    C_24 := sql.subdelta(C_164,C_17,C_21,C_165,C_167);
    (X_27,r1_34) := algebra.subjoin(X_16,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_31:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_33,r1_41) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_35:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_36 := sql.projectdelta(C_5,X_31,X_33,r1_41,X_35);
    X_37 := algebra.projection(X_27,X_36);
    X_40:bat[:str] := sql.bind(X_4,"sys","supplier","s_region",0);
    C_38:bat[:oid] := sql.tid(X_4,"sys","supplier");
    C_168 := algebra.subselect(X_40,C_38,"ASIA","ASIA",true,false,false);
    (C_42,r1_51) := sql.bind(X_4,"sys","supplier","s_region",2);
    C_169 := algebra.subselect(r1_51,nil:bat[:oid],"ASIA","ASIA",true,false,false);
    X_44:bat[:str] := sql.bind(X_4,"sys","supplier","s_region",1);
    C_170 := algebra.subselect(X_44,C_38,"ASIA","ASIA",true,false,false);
    C_45 := sql.subdelta(C_168,C_38,C_42,C_169,C_170);
    (X_46,r1_59) := algebra.subjoin(X_37,C_45,nil:BAT,nil:BAT,false,nil:lng);
    X_48:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_50,r1_63) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_52:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_53 := sql.projectdelta(C_5,X_48,X_50,r1_63,X_52);
    X_54:bat[:oid] := algebra.projectionpath(X_46,X_27,X_53);
    X_57:bat[:int] := sql.bind(X_4,"sys","dwdate","d_year",0);
    C_55:bat[:oid] := sql.tid(X_4,"sys","dwdate");
    C_171 := algebra.subselect(X_57,C_55,1992,1997,true,true,false);
    (C_59,r1_74) := sql.bind(X_4,"sys","dwdate","d_year",2);
    C_172 := algebra.subselect(r1_74,nil:bat[:oid],1992,1997,true,true,false);
    X_61:bat[:int] := sql.bind(X_4,"sys","dwdate","d_year",1);
    C_173 := algebra.subselect(X_61,C_55,1992,1997,true,true,false);
    C_62 := sql.subdelta(C_171,C_55,C_59,C_172,C_173);
    (X_63,r1_86) := algebra.subjoin(X_54,C_62,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    (C_67,r1_93) := sql.bind(X_4,"sys","lineorder","lo_revenue",2);
    X_69:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",1);
    X_70 := sql.projectdelta(C_5,X_65,C_67,r1_93,X_69);
    X_71:bat[:int] := algebra.projectionpath(X_63,X_46,X_27,X_70);
    X_72:bat[:str] := sql.bind(X_4,"sys","supplier","s_nation",0);
    (C_74,r1_103) := sql.bind(X_4,"sys","supplier","s_nation",2);
    X_76:bat[:str] := sql.bind(X_4,"sys","supplier","s_nation",1);
    X_77 := sql.projectdelta(C_45,X_72,C_74,r1_103,X_76);
    X_78:bat[:str] := algebra.projectionpath(X_63,r1_59,X_77);
    X_79:bat[:str] := sql.bind(X_4,"sys","customer","c_nation",0);
    (C_81,r1_113) := sql.bind(X_4,"sys","customer","c_nation",2);
    X_83:bat[:str] := sql.bind(X_4,"sys","customer","c_nation",1);
    X_84 := sql.projectdelta(C_24,X_79,C_81,r1_113,X_83);
    X_85:bat[:str] := algebra.projectionpath(X_63,X_46,r1_34,X_84);
    X_86 := sql.projectdelta(C_62,X_57,C_59,r1_74,X_61);
    X_87 := algebra.projection(r1_86,X_86);
    (X_88,r1_124,r2_124) := group.subgroup(X_87);
    (X_91,r1_127,r2_127) := group.subgroup(X_85,X_88);
    (X_94,r1_130,r2_130) := group.subgroupdone(X_78,X_91);
    X_97:bat[:hge] := aggr.subsum(X_71,X_94,r1_130,true,true);
    X_98 := algebra.projection(r1_130,X_87);
    (X_99,r1_137,r2_137) := algebra.subsort(X_98,false,false);
    (X_102,r1_142,r2_142) := algebra.subsort(X_97,r1_137,r2_137,true,false);
    X_105:bat[:str] := algebra.projectionpath(r1_142,r1_130,X_85);
    X_106:bat[:str] := algebra.projectionpath(r1_142,r1_130,X_78);
    X_107 := algebra.projection(r1_142,X_98);
    X_108 := algebra.projection(r1_142,X_97);
    sql.resultSet(X_139,X_141,X_143,X_145,X_147,X_105,X_106,X_107,X_108);
end user.s4_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=53 usec 
#remap                actions= 0 time=5 usec 
#costModel            actions= 1 time=46 usec 
#coercions            actions= 0 time=5 usec 
#evaluate             actions= 4 time=71 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions=14 time=73 usec 
#aliases              actions=18 time=53 usec 
#mergetable           actions= 0 time=58 usec 
#deadcode             actions=15 time=45 usec 
#aliases              actions= 0 time=12 usec 
#constants            actions=21 time=56 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions=12 time=47 usec 
#reorder              actions= 1 time=74 usec 
#deadcode             actions=12 time=40 usec 
#reduce               actions=98 time=77 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=35 usec 
#garbageCollector     actions= 1 time=43 usec 
#total                actions= 1 time=890 usec 

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

