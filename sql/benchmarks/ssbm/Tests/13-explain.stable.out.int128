stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 551 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str):void;
    X_222:void := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_nation = \\'UNITED STATES\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand p_category = \\'MFGR#14\\'\n\tgroup by d_year, s_city, p_brand1\n\torder by d_year, s_city, p_brand1;","sequential_pipe",127);
    X_180 := bat.new(nil:oid,nil:str);
    X_188 := bat.append(X_180,"sys.dwdate");
    X_198 := bat.append(X_188,"sys.supplier");
    X_206 := bat.append(X_198,"sys.part");
    X_213 := bat.append(X_206,"sys.L1");
    X_183 := bat.new(nil:oid,nil:str);
    X_190 := bat.append(X_183,"d_year");
    X_200 := bat.append(X_190,"s_city");
    X_208 := bat.append(X_200,"p_brand1");
    X_215 := bat.append(X_208,"profit1");
    X_184 := bat.new(nil:oid,nil:str);
    X_192 := bat.append(X_184,"int");
    X_202 := bat.append(X_192,"clob");
    X_210 := bat.append(X_202,"clob");
    X_217 := bat.append(X_210,"hugeint");
    X_185 := bat.new(nil:oid,nil:int);
    X_194 := bat.append(X_185,32);
    X_204 := bat.append(X_194,0);
    X_211 := bat.append(X_204,0);
    X_219 := bat.append(X_211,128);
    X_187 := bat.new(nil:oid,nil:int);
    X_196 := bat.append(X_187,0);
    X_205 := bat.append(X_196,0);
    X_212 := bat.append(X_205,0);
    X_221 := bat.append(X_212,0);
    X_7 := sql.mvc();
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineorder");
    X_11:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_14,r1_14) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_17:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_19 := sql.delta(X_11,X_14,r1_14,X_17);
    X_20 := algebra.leftfetchjoin(X_8,X_19);
    X_21:bat[:oid,:oid]  := sql.tid(X_7,"sys","dwdate");
    X_23:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",0);
    (X_25,r1_25) := sql.bind(X_7,"sys","dwdate","d_year",2);
    X_27:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",1);
    X_28 := sql.delta(X_23,X_25,r1_25,X_27);
    X_29 := algebra.leftfetchjoin(X_21,X_28);
    X_30 := algebra.subselect(X_29,A2,A2,true,true,false);
    X_32 := algebra.subselect(X_29,A3,A3,true,true,false);
    X_33 := bat.mergecand(X_30,X_32);
    X_34 := algebra.leftfetchjoin(X_33,X_21);
    (X_35,r1_37) := algebra.subjoin(X_20,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_39:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_43,r1_45) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_45:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_46 := sql.delta(X_39,X_43,r1_45,X_45);
    X_47:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_35,X_8,X_46);
    X_48:bat[:oid,:oid]  := sql.tid(X_7,"sys","part");
    X_50:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",0);
    (X_53,r1_56) := sql.bind(X_7,"sys","part","p_category",2);
    X_56:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",1);
    X_58 := sql.delta(X_50,X_53,r1_56,X_56);
    X_59 := algebra.leftfetchjoin(X_48,X_58);
    X_60 := algebra.subselect(X_59,A4,A4,true,true,false);
    X_63 := algebra.leftfetchjoin(X_60,X_48);
    (X_64,r1_68) := algebra.subjoin(X_47,X_63,nil:BAT,nil:BAT,false,nil:lng);
    X_66:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_68,r1_72) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_70:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_72 := sql.delta(X_66,X_68,r1_72,X_70);
    X_73:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_64,X_35,X_8,X_72);
    X_74:bat[:oid,:oid] := sql.tid(X_7,"sys","supplier");
    X_76:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_nation",0);
    (X_78,r1_84) := sql.bind(X_7,"sys","supplier","s_nation",2);
    X_80:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_nation",1);
    X_81 := sql.delta(X_76,X_78,r1_84,X_80);
    X_82 := algebra.leftfetchjoin(X_74,X_81);
    X_83 := algebra.subselect(X_82,A1,A1,true,true,false);
    X_84 := algebra.leftfetchjoin(X_83,X_74);
    (X_85,r1_92) := algebra.subjoin(X_73,X_84,nil:BAT,nil:BAT,false,nil:lng);
    X_89:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_91,r1_98) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_94:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_95 := sql.delta(X_89,X_91,r1_98,X_94);
    X_96:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_85,X_64,X_35,X_8,X_95);
    X_97:bat[:oid,:oid] := sql.tid(X_7,"sys","customer");
    X_100:bat[:oid,:str] := sql.bind(X_7,"sys","customer","c_region",0);
    (X_102,r1_112) := sql.bind(X_7,"sys","customer","c_region",2);
    X_104:bat[:oid,:str] := sql.bind(X_7,"sys","customer","c_region",1);
    X_105 := sql.delta(X_100,X_102,r1_112,X_104);
    X_106 := algebra.leftfetchjoin(X_97,X_105);
    X_107 := algebra.subselect(X_106,A0,A0,true,true,false);
    X_110 := algebra.leftfetchjoin(X_107,X_97);
    (X_111,r1_122) := algebra.subjoin(X_96,X_110,nil:BAT,nil:BAT,false,nil:lng);
    X_113:bat[:oid,:str] := sql.bind(X_7,"sys","part","p_brand1",0);
    (X_115,r1_126) := sql.bind(X_7,"sys","part","p_brand1",2);
    X_118:bat[:oid,:str] := sql.bind(X_7,"sys","part","p_brand1",1);
    X_119 := sql.delta(X_113,X_115,r1_126,X_118);
    X_120:bat[:oid,:str] := algebra.leftfetchjoinPath(X_111,X_85,r1_68,X_60,X_48,X_119);
    X_121:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_city",0);
    (X_124,r1_139) := sql.bind(X_7,"sys","supplier","s_city",2);
    X_128:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_city",1);
    X_129 := sql.delta(X_121,X_124,r1_139,X_128);
    X_130:bat[:oid,:str] := algebra.leftfetchjoinPath(X_111,r1_92,X_83,X_74,X_129);
    X_131:bat[:oid,:int] := algebra.leftfetchjoinPath(X_111,X_85,X_64,r1_37,X_33,X_29);
    (X_132,r1_154,r2_154) := group.subgroup(X_131);
    (X_135,r1_157,r2_157) := group.subgroup(X_130,X_132);
    (X_138,r1_160,r2_160) := group.subgroupdone(X_120,X_135);
    X_141 := algebra.leftfetchjoin(r1_160,X_120);
    X_142 := algebra.leftfetchjoin(r1_160,X_130);
    X_143 := algebra.leftfetchjoin(r1_160,X_131);
    X_157:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_revenue",0);
    (X_160,r1_182) := sql.bind(X_7,"sys","lineorder","lo_revenue",2);
    X_162:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_revenue",1);
    X_164 := sql.delta(X_157,X_160,r1_182,X_162);
    X_165:bat[:oid,:int] := algebra.leftfetchjoinPath(X_111,X_85,X_64,X_35,X_8,X_164);
    X_166 := batcalc.lng(X_165);
    X_167:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_supplycost",0);
    (X_169,r1_195) := sql.bind(X_7,"sys","lineorder","lo_supplycost",2);
    X_171:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_supplycost",1);
    X_172 := sql.delta(X_167,X_169,r1_195,X_171);
    X_173:bat[:oid,:int] := algebra.leftfetchjoinPath(X_111,X_85,X_64,X_35,X_8,X_172);
    X_174 := batcalc.lng(X_173);
    X_175:bat[:oid,:lng] := batcalc.-(X_166,X_174);
    X_176:bat[:oid,:hge] := aggr.subsum(X_175,X_138,r1_160,true,true);
    (X_144,r1_166,r2_166) := algebra.subsort(X_143,false,false);
    (X_148,r1_170,r2_170) := algebra.subsort(X_142,r1_166,r2_166,false,false);
    (X_151,r1_173,r2_173) := algebra.subsort(X_141,r1_170,r2_170,false,false);
    X_154 := algebra.leftfetchjoin(r1_173,X_143);
    X_155 := algebra.leftfetchjoin(r1_173,X_142);
    X_156 := algebra.leftfetchjoin(r1_173,X_141);
    X_178 := algebra.leftfetchjoin(r1_173,X_176);
    sql.resultSet(X_213,X_215,X_217,X_219,X_221,X_154,X_155,X_156,X_178);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

