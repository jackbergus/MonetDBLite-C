stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 526 # length
function user.s2_1():void;
    X_164:void := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_nation = \\'UNITED STATES\\'\n and (d_year = 1997 or d_year = 1998)\n and p_category = \\'MFGR#14\\'\n group by d_year, s_city, p_brand1\n order by d_year, s_city, p_brand1;","sequential_pipe",103);
    X_126 := bat.new(nil:oid,nil:str);
    X_134 := bat.append(X_126,"sys.dwdate");
    X_142 := bat.append(X_134,"sys.supplier");
    X_149 := bat.append(X_142,"sys.part");
    X_155 := bat.append(X_149,"sys.L1");
    X_129 := bat.new(nil:oid,nil:str);
    X_136 := bat.append(X_129,"d_year");
    X_144 := bat.append(X_136,"s_city");
    X_151 := bat.append(X_144,"p_brand1");
    X_157 := bat.append(X_151,"profit1");
    X_130 := bat.new(nil:oid,nil:str);
    X_137 := bat.append(X_130,"int");
    X_145 := bat.append(X_137,"clob");
    X_152 := bat.append(X_145,"clob");
    X_159 := bat.append(X_152,"hugeint");
    X_131 := bat.new(nil:oid,nil:int);
    X_139 := bat.append(X_131,32);
    X_147 := bat.append(X_139,0);
    X_153 := bat.append(X_147,0);
    X_161 := bat.append(X_153,128);
    X_133 := bat.new(nil:oid,nil:int);
    X_141 := bat.append(X_133,0);
    X_148 := bat.append(X_141,0);
    X_154 := bat.append(X_148,0);
    X_163 := bat.append(X_154,0);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.projection(C_7,X_18);
    C_20:bat[:oid] := sql.tid(X_6,"sys","dwdate");
    X_22:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    X_24 := algebra.projection(C_20,X_22);
    C_25 := algebra.subselect(X_24,1997,1997,true,false,false);
    C_28 := algebra.subselect(X_24,1998,1998,true,false,false);
    X_29 := bat.mergecand(C_25,C_28);
    X_30 := algebra.projection(X_29,C_20);
    (X_31,r1_38) := algebra.subjoin(X_19,X_30,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_37,r1_45) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_39:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_40 := sql.delta(X_35,X_37,r1_45,X_39);
    X_41:bat[:oid] := algebra.projectionpath(X_31,C_7,X_40);
    C_42:bat[:oid] := sql.tid(X_6,"sys","part");
    X_44:bat[:str] := sql.bind(X_6,"sys","part","p_category",0);
    X_46 := algebra.projection(C_42,X_44);
    C_47 := algebra.subselect(X_46,"MFGR#14","MFGR#14",true,false,false);
    X_48 := algebra.projection(C_47,C_42);
    (X_49,r1_63) := algebra.subjoin(X_41,X_48,nil:BAT,nil:BAT,false,nil:lng);
    X_51:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_53,r1_67) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_55:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_56 := sql.delta(X_51,X_53,r1_67,X_55);
    X_57:bat[:oid] := algebra.projectionpath(X_49,X_31,C_7,X_56);
    C_58:bat[:oid] := sql.tid(X_6,"sys","supplier");
    X_60:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",0);
    X_62 := algebra.projection(C_58,X_60);
    C_63 := algebra.subselect(X_62,"UNITED STATES","UNITED STATES",true,false,false);
    X_64 := algebra.projection(C_63,C_58);
    (X_65,r1_89) := algebra.subjoin(X_57,X_64,nil:BAT,nil:BAT,false,nil:lng);
    X_67:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_69,r1_96) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_71:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_72 := sql.delta(X_67,X_69,r1_96,X_71);
    X_73:bat[:oid] := algebra.projectionpath(X_65,X_49,X_31,C_7,X_72);
    C_74:bat[:oid] := sql.tid(X_6,"sys","customer");
    X_76:bat[:str] := sql.bind(X_6,"sys","customer","c_region",0);
    X_78 := algebra.projection(C_74,X_76);
    C_79 := algebra.subselect(X_78,"AMERICA","AMERICA",true,false,false);
    X_80 := algebra.projection(C_79,C_74);
    (X_81,r1_116) := algebra.subjoin(X_73,X_80,nil:BAT,nil:BAT,false,nil:lng);
    X_83:bat[:str] := sql.bind(X_6,"sys","part","p_brand1",0);
    X_85:bat[:str] := algebra.projectionpath(X_81,X_65,r1_63,C_47,C_42,X_83);
    X_86:bat[:str] := sql.bind(X_6,"sys","supplier","s_city",0);
    X_88:bat[:str] := algebra.projectionpath(X_81,r1_89,C_63,C_58,X_86);
    X_89:bat[:int] := algebra.projectionpath(X_81,X_65,X_49,r1_38,X_29,X_24);
    (X_90,r1_144,r2_144) := group.subgroup(X_89);
    (X_93,r1_147,r2_147) := group.subgroup(X_88,X_90);
    (X_96,r1_150,r2_150) := group.subgroupdone(X_85,X_93);
    X_99 := algebra.projection(r1_150,X_85);
    X_100 := algebra.projection(r1_150,X_88);
    X_101 := algebra.projection(r1_150,X_89);
    X_114:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    X_116:bat[:int] := algebra.projectionpath(X_81,X_65,X_49,X_31,C_7,X_114);
    X_117 := batcalc.lng(X_116);
    X_118:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    X_120:bat[:int] := algebra.projectionpath(X_81,X_65,X_49,X_31,C_7,X_118);
    X_121 := batcalc.lng(X_120);
    X_122:bat[:lng] := batcalc.-(X_117,X_121);
    X_123:bat[:hge] := aggr.subsum(X_122,X_96,r1_150,true,true);
    (X_102,r1_156,r2_156) := algebra.subsort(X_101,false,false);
    (X_105,r1_161,r2_161) := algebra.subsort(X_100,r1_156,r2_156,false,false);
    (X_108,r1_164,r2_164) := algebra.subsort(X_99,r1_161,r2_161,false,false);
    X_111 := algebra.projection(r1_164,X_101);
    X_112 := algebra.projection(r1_164,X_100);
    X_113 := algebra.projection(r1_164,X_99);
    X_124 := algebra.projection(r1_164,X_123);
    sql.resultSet(X_155,X_157,X_159,X_161,X_163,X_111,X_112,X_113,X_124);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

