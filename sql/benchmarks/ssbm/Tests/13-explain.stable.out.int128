stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 551 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str):void;
    X_209:void  := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_nation = \\'UNITED STATES\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand p_category = \\'MFGR#14\\'\n\tgroup by d_year, s_city, p_brand1\n\torder by d_year, s_city, p_brand1;","sequential_pipe",113);
    X_7 := sql.mvc();
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineorder");
    X_11:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_14,r1_14) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_17:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_19 := sql.delta(X_11,X_14,r1_14,X_17);
    X_20 := algebra.leftfetchjoin(X_8,X_19);
    X_21:bat[:oid,:oid]  := sql.tid(X_7,"sys","dwdate");
    X_23:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",0);
    (X_25,r1_25) := sql.bind(X_7,"sys","dwdate","d_year",2);
    X_27:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",1);
    X_28 := sql.delta(X_23,X_25,r1_25,X_27);
    X_29 := algebra.leftfetchjoin(X_21,X_28);
    X_30 := algebra.subselect(X_29,A2,A2,true,true,false);
    X_32 := algebra.subselect(X_29,A3,A3,true,true,false);
    X_33 := bat.mergecand(X_30,X_32);
    X_34 := algebra.leftfetchjoin(X_33,X_21);
    (X_35,r1_37) := algebra.subjoin(X_20,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_245 := algebra.leftfetchjoin(X_35,X_8);
    X_39:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_43,r1_45) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_45:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_46 := sql.delta(X_39,X_43,r1_45,X_45);
    X_47:bat[:oid,:oid]  := algebra.leftfetchjoin(X_245,X_46);
    X_48:bat[:oid,:oid]  := sql.tid(X_7,"sys","part");
    X_50:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",0);
    (X_53,r1_56) := sql.bind(X_7,"sys","part","p_category",2);
    X_56:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",1);
    X_58 := sql.delta(X_50,X_53,r1_56,X_56);
    X_59 := algebra.leftfetchjoin(X_48,X_58);
    X_60 := algebra.subselect(X_59,A4,A4,true,true,false);
    X_63 := algebra.leftfetchjoin(X_60,X_48);
    (X_64,r1_68) := algebra.subjoin(X_47,X_63,nil:BAT,nil:BAT,false,nil:lng);
    X_246 := algebra.leftfetchjoin(X_64,X_35);
    X_66:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_68,r1_72) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_70:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_73 := sql.delta(X_66,X_68,r1_72,X_70);
    X_74:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_246,X_8,X_73);
    X_75:bat[:oid,:oid]  := sql.tid(X_7,"sys","supplier");
    X_77:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_nation",0);
    (X_79,r1_85) := sql.bind(X_7,"sys","supplier","s_nation",2);
    X_81:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_nation",1);
    X_82 := sql.delta(X_77,X_79,r1_85,X_81);
    X_83 := algebra.leftfetchjoin(X_75,X_82);
    X_84 := algebra.subselect(X_83,A1,A1,true,true,false);
    X_85 := algebra.leftfetchjoin(X_84,X_75);
    (X_86,r1_93) := algebra.subjoin(X_74,X_85,nil:BAT,nil:BAT,false,nil:lng);
    X_247 := algebra.leftfetchjoin(X_86,X_64);
    X_90:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_93,r1_100) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_96:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_98 := sql.delta(X_90,X_93,r1_100,X_96);
    X_99:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_247,X_35,X_8,X_98);
    X_100:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    X_103:bat[:oid,:str]  := sql.bind(X_7,"sys","customer","c_region",0);
    (X_105,r1_115) := sql.bind(X_7,"sys","customer","c_region",2);
    X_107:bat[:oid,:str]  := sql.bind(X_7,"sys","customer","c_region",1);
    X_108 := sql.delta(X_103,X_105,r1_115,X_107);
    X_109 := algebra.leftfetchjoin(X_100,X_108);
    X_110 := algebra.subselect(X_109,A0,A0,true,true,false);
    X_113 := algebra.leftfetchjoin(X_110,X_100);
    (X_114,r1_125) := algebra.subjoin(X_99,X_113,nil:BAT,nil:BAT,false,nil:lng);
    X_248 := algebra.leftfetchjoin(X_114,X_86);
    X_116:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_brand1",0);
    (X_119,r1_130) := sql.bind(X_7,"sys","part","p_brand1",2);
    X_121:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_brand1",1);
    X_122 := sql.delta(X_116,X_119,r1_130,X_121);
    X_123:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_248,r1_68,X_60,X_48,X_122);
    X_249 := algebra.leftfetchjoin(r1_93,X_84);
    X_124:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_city",0);
    (X_128,r1_143) := sql.bind(X_7,"sys","supplier","s_city",2);
    X_132:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_city",1);
    X_134 := sql.delta(X_124,X_128,r1_143,X_132);
    X_135:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_114,X_249,X_75,X_134);
    X_136:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_248,X_64,r1_37,X_33,X_29);
    (X_137,r1_159,r2_159) := group.subgroup(X_136);
    (X_140,r1_162,r2_162) := group.subgroup(X_135,X_137);
    (X_143,r1_165,r2_165) := group.subgroupdone(X_123,X_140);
    X_146 := algebra.leftfetchjoin(r1_165,X_123);
    X_147 := algebra.leftfetchjoin(r1_165,X_135);
    X_148 := algebra.leftfetchjoin(r1_165,X_136);
    X_162:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_revenue",0);
    (X_167,r1_189) := sql.bind(X_7,"sys","lineorder","lo_revenue",2);
    X_170:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_revenue",1);
    X_172 := sql.delta(X_162,X_167,r1_189,X_170);
    X_173:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_248,X_64,X_35,X_8,X_172);
    X_174 := batcalc.lng(X_173);
    X_175:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_supplycost",0);
    (X_177,r1_203) := sql.bind(X_7,"sys","lineorder","lo_supplycost",2);
    X_179:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_supplycost",1);
    X_180 := sql.delta(X_175,X_177,r1_203,X_179);
    X_181:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_248,X_64,X_35,X_8,X_180);
    X_182 := batcalc.lng(X_181);
    X_183:bat[:oid,:lng]  := batcalc.-(X_174,X_182);
    X_184:bat[:oid,:hge]  := aggr.subsum(X_183,X_143,r1_165,true,true);
    (X_149,r1_171,r2_171) := algebra.subsort(X_148,false,false);
    (X_153,r1_175,r2_175) := algebra.subsort(X_147,r1_171,r2_171,false,false);
    (X_156,r1_178,r2_178) := algebra.subsort(X_146,r1_175,r2_175,false,false);
    X_159 := algebra.leftfetchjoin(r1_178,X_148);
    X_186 := algebra.leftfetchjoin(r1_178,X_184);
    X_161 := algebra.leftfetchjoin(r1_178,X_146);
    X_160 := algebra.leftfetchjoin(r1_178,X_147);
    X_187 := sql.resultSet(4,1,X_159);
    sql.rsColumn(X_187,"sys.dwdate","d_year","int",32,0,X_159);
    sql.rsColumn(X_187,"sys.supplier","s_city","clob",0,0,X_160);
    sql.rsColumn(X_187,"sys.part","p_brand1","clob",0,0,X_161);
    sql.rsColumn(X_187,"sys.L1","profit1","hugeint",64,0,X_186);
    X_207 := io.stdout();
    sql.exportResult(X_207,X_187);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

