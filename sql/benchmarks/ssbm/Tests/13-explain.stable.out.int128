stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 526 # length
function user.s4_1():void;
    X_237:void := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_nation = \\'UNITED STATES\\'\n and (d_year = 1997 or d_year = 1998)\n and p_category = \\'MFGR#14\\'\n group by d_year, s_city, p_brand1\n order by d_year, s_city, p_brand1;","sequential_pipe",103);
    X_196 := bat.new(nil:str);
    X_203 := bat.append(X_196,"sys.dwdate");
    X_213 := bat.append(X_203,"sys.supplier");
    X_221 := bat.append(X_213,"sys.part");
    X_228 := bat.append(X_221,"sys.L1");
    X_198 := bat.new(nil:str);
    X_205 := bat.append(X_198,"d_year");
    X_215 := bat.append(X_205,"s_city");
    X_223 := bat.append(X_215,"p_brand1");
    X_230 := bat.append(X_223,"profit1");
    X_199 := bat.new(nil:str);
    X_207 := bat.append(X_199,"int");
    X_217 := bat.append(X_207,"clob");
    X_225 := bat.append(X_217,"clob");
    X_232 := bat.append(X_225,"bigint");
    X_200 := bat.new(nil:int);
    X_209 := bat.append(X_200,32);
    X_219 := bat.append(X_209,0);
    X_226 := bat.append(X_219,0);
    X_234 := bat.append(X_226,64);
    X_202 := bat.new(nil:int);
    X_211 := bat.append(X_202,0);
    X_220 := bat.append(X_211,0);
    X_227 := bat.append(X_220,0);
    X_236 := bat.append(X_227,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_7,r1_13) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_12 := sql.delta(X_4,X_7,r1_13,X_10);
    X_13 := algebra.projection(C_1,X_12);
    C_14:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    X_16:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_22 := algebra.projection(C_14,X_16);
    C_24 := algebra.subselect(X_22,1997,1997,true,false,false);
    C_29 := algebra.subselect(X_22,1998,1998,true,false,false);
    X_30 := bat.mergecand(C_24,C_29);
    X_31 := algebra.projection(X_30,C_14);
    (X_32,r1_38) := algebra.subjoin(X_13,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_39,r1_45) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_42 := sql.delta(X_37,X_39,r1_45,X_41);
    X_44:bat[:oid] := algebra.projectionpath(X_32,C_1,X_42);
    C_45:bat[:oid] := sql.tid(X_0,"sys","part");
    X_47:bat[:str] := sql.bind(X_0,"sys","part","p_category",0);
    X_53 := algebra.projection(C_45,X_47);
    C_55 := algebra.subselect(X_53,"MFGR#14","MFGR#14",true,false,false);
    X_56 := algebra.projection(C_55,C_45);
    (X_57,r1_63) := algebra.subjoin(X_44,X_56,nil:BAT,nil:BAT,false,nil:lng);
    X_59:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_61,r1_67) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_63:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_64 := sql.delta(X_59,X_61,r1_67,X_63);
    X_67:bat[:oid] := algebra.projectionpath(X_57,X_32,C_1,X_64);
    C_68:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_70:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",0);
    X_76 := algebra.projection(C_68,X_70);
    C_78 := algebra.subselect(X_76,"UNITED STATES","UNITED STATES",true,false,false);
    X_82 := algebra.projection(C_78,C_68);
    (X_83,r1_89) := algebra.subjoin(X_67,X_82,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_90,r1_96) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_92:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_93 := sql.delta(X_88,X_90,r1_96,X_92);
    X_97:bat[:oid] := algebra.projectionpath(X_83,X_57,X_32,C_1,X_93);
    C_98:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_100:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    X_106 := algebra.projection(C_98,X_100);
    C_108 := algebra.subselect(X_106,"AMERICA","AMERICA",true,false,false);
    X_109 := algebra.projection(C_108,C_98);
    (X_110,r1_116) := algebra.subjoin(X_97,X_109,nil:BAT,nil:BAT,false,nil:lng);
    X_112:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",0);
    X_122:bat[:str] := algebra.projectionpath(X_110,X_83,r1_63,C_55,C_45,X_112);
    X_123:bat[:str] := sql.bind(X_0,"sys","supplier","s_city",0);
    X_132:bat[:str] := algebra.projectionpath(X_110,r1_89,C_78,C_68,X_123);
    X_137:bat[:int] := algebra.projectionpath(X_110,X_83,X_57,r1_38,X_30,X_22);
    (X_138,r1_144,r2_144) := group.subgroup(X_137);
    (X_141,r1_147,r2_147) := group.subgroup(X_132,X_138);
    (X_144,r1_150,r2_150) := group.subgroupdone(X_122,X_141);
    X_147 := algebra.projection(r1_150,X_122);
    X_148 := algebra.projection(r1_150,X_132);
    X_149 := algebra.projection(r1_150,X_137);
    X_164:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_174:bat[:int] := algebra.projectionpath(X_110,X_83,X_57,X_32,C_1,X_164);
    X_175 := batcalc.lng(X_174);
    X_176:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",0);
    X_186:bat[:int] := algebra.projectionpath(X_110,X_83,X_57,X_32,C_1,X_176);
    X_187 := batcalc.lng(X_186);
    X_188:bat[:lng] := batcalc.-(X_175,X_187);
    X_191:bat[:lng] := aggr.subsum(X_188,X_144,r1_150,true,true);
    (X_150,r1_156,r2_156) := algebra.subsort(X_149,false,false);
    (X_155,r1_161,r2_161) := algebra.subsort(X_148,r1_156,r2_156,false,false);
    (X_158,r1_164,r2_164) := algebra.subsort(X_147,r1_161,r2_161,false,false);
    X_161 := algebra.projection(r1_164,X_149);
    X_162 := algebra.projection(r1_164,X_148);
    X_163 := algebra.projection(r1_164,X_147);
    X_194 := algebra.projection(r1_164,X_191);
    sql.resultSet(X_228,X_230,X_232,X_234,X_236,X_161,X_162,X_163,X_194);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=144 usec 
#remap                actions= 1 time=281 usec 
#costModel            actions= 1 time=135 usec 
#coercions            actions= 0 time=11 usec 
#evaluate             actions= 5 time=220 usec 
#emptybind            actions= 0 time=12 usec 
#pushselect           actions= 0 time=6 usec 
#aliases              actions=13 time=153 usec 
#mergetable           actions= 0 time=165 usec 
#deadcode             actions=16 time=134 usec 
#aliases              actions= 0 time=31 usec 
#constants            actions=21 time=169 usec 
#commonTerms          actions= 0 time=38 usec 
#projectionpath       actions=25 time=168 usec 
#reorder              actions= 1 time=241 usec 
#deadcode             actions=25 time=124 usec 
#reduce               actions=103 time=202 usec 
#matpack              actions= 0 time=12 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=8 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=106 usec 
#garbageCollector     actions= 1 time=127 usec 
#total                actions= 1 time=2667 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

