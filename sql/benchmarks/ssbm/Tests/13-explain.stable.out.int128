stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 530 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str):void;
    X_188 := bat.new(nil:oid,nil:str);
    X_197 := bat.append(X_188,"sys.dwdate");
    X_207 := bat.append(X_197,"sys.supplier");
    X_215 := bat.append(X_207,"sys.part");
    X_222 := bat.append(X_215,"sys.L1");
    X_191 := bat.new(nil:oid,nil:str);
    X_199 := bat.append(X_191,"d_year");
    X_209 := bat.append(X_199,"s_city");
    X_217 := bat.append(X_209,"p_brand1");
    X_224 := bat.append(X_217,"profit1");
    X_192 := bat.new(nil:oid,nil:str);
    X_201 := bat.append(X_192,"int");
    X_211 := bat.append(X_201,"clob");
    X_219 := bat.append(X_211,"clob");
    X_226 := bat.append(X_219,"hugeint");
    X_193 := bat.new(nil:oid,nil:int);
    X_203 := bat.append(X_193,32);
    X_213 := bat.append(X_203,0);
    X_220 := bat.append(X_213,0);
    X_228 := bat.append(X_220,64);
    X_195 := bat.new(nil:oid,nil:int);
    X_205 := bat.append(X_195,0);
    X_214 := bat.append(X_205,0);
    X_221 := bat.append(X_214,0);
    X_230 := bat.append(X_221,0);
    X_7 := sql.mvc();
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineorder");
    X_11:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_14,r1_14) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_17:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_19 := sql.delta(X_11,X_14,r1_14,X_17);
    X_20 := algebra.leftfetchjoin(X_8,X_19);
    X_21:bat[:oid,:oid]  := sql.tid(X_7,"sys","dwdate");
    X_23:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",0);
    (X_25,r1_25) := sql.bind(X_7,"sys","dwdate","d_year",2);
    X_27:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",1);
    X_28 := sql.delta(X_23,X_25,r1_25,X_27);
    X_29 := algebra.leftfetchjoin(X_21,X_28);
    X_30 := algebra.subselect(X_29,A2,A2,true,true,false);
    X_32 := algebra.subselect(X_29,A3,A3,true,true,false);
    X_33 := bat.mergecand(X_30,X_32);
    X_34 := algebra.leftfetchjoin(X_33,X_21);
    (X_35,r1_37) := algebra.subjoin(X_20,X_34,nil:BAT,nil:BAT,true,nil:lng);
    X_267 := algebra.leftfetchjoin(X_35,X_8);
    X_40:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_45,r1_47) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_48:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_50 := sql.delta(X_40,X_45,r1_47,X_48);
    X_51:bat[:oid,:oid]  := algebra.leftfetchjoin(X_267,X_50);
    X_52:bat[:oid,:oid]  := sql.tid(X_7,"sys","part");
    X_54:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",0);
    (X_56,r1_59) := sql.bind(X_7,"sys","part","p_category",2);
    X_58:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",1);
    X_59 := sql.delta(X_54,X_56,r1_59,X_58);
    X_60 := algebra.leftfetchjoin(X_52,X_59);
    X_61 := algebra.subselect(X_60,A4,A4,true,true,false);
    X_63 := algebra.leftfetchjoin(X_61,X_52);
    (X_64,r1_68) := algebra.subjoin(X_51,X_63,nil:BAT,nil:BAT,true,nil:lng);
    X_268 := algebra.leftfetchjoin(X_64,X_35);
    X_66:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_68,r1_72) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_70:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_71 := sql.delta(X_66,X_68,r1_72,X_70);
    X_72:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_268,X_8,X_71);
    X_73:bat[:oid,:oid]  := sql.tid(X_7,"sys","supplier");
    X_76:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_nation",0);
    (X_79,r1_85) := sql.bind(X_7,"sys","supplier","s_nation",2);
    X_82:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_nation",1);
    X_84 := sql.delta(X_76,X_79,r1_85,X_82);
    X_85 := algebra.leftfetchjoin(X_73,X_84);
    X_86 := algebra.subselect(X_85,A1,A1,true,true,false);
    X_88 := algebra.leftfetchjoin(X_86,X_73);
    (X_89,r1_96) := algebra.subjoin(X_72,X_88,nil:BAT,nil:BAT,true,nil:lng);
    X_269 := algebra.leftfetchjoin(X_89,X_64);
    X_93:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_96,r1_103) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_98:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_99 := sql.delta(X_93,X_96,r1_103,X_98);
    X_100:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_269,X_35,X_8,X_99);
    X_101:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    X_103:bat[:oid,:str]  := sql.bind(X_7,"sys","customer","c_region",0);
    (X_106,r1_116) := sql.bind(X_7,"sys","customer","c_region",2);
    X_108:bat[:oid,:str]  := sql.bind(X_7,"sys","customer","c_region",1);
    X_109 := sql.delta(X_103,X_106,r1_116,X_108);
    X_110 := algebra.leftfetchjoin(X_101,X_109);
    X_111 := algebra.subselect(X_110,A0,A0,true,true,false);
    X_113 := algebra.leftfetchjoin(X_111,X_101);
    (X_114,r1_125) := algebra.subjoin(X_100,X_113,nil:BAT,nil:BAT,true,nil:lng);
    X_270 := algebra.leftfetchjoin(X_114,X_89);
    X_117:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_brand1",0);
    (X_121,r1_132) := sql.bind(X_7,"sys","part","p_brand1",2);
    X_124:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_brand1",1);
    X_126 := sql.delta(X_117,X_121,r1_132,X_124);
    X_127:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_270,r1_68,X_61,X_52,X_126);
    X_271 := algebra.leftfetchjoin(r1_96,X_86);
    X_128:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_city",0);
    (X_131,r1_146) := sql.bind(X_7,"sys","supplier","s_city",2);
    X_134:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_city",1);
    X_135 := sql.delta(X_128,X_131,r1_146,X_134);
    X_136:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_114,X_271,X_73,X_135);
    X_137:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_270,X_64,r1_37,X_33,X_29);
    (X_138,r1_160,r2_160) := group.subgroup(X_137);
    (X_141,r1_163,r2_163) := group.subgroup(X_136,X_138);
    (X_144,r1_166,r2_166) := group.subgroupdone(X_127,X_141);
    X_147 := algebra.leftfetchjoin(r1_166,X_127);
    X_148 := algebra.leftfetchjoin(r1_166,X_136);
    X_149 := algebra.leftfetchjoin(r1_166,X_137);
    X_163:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_revenue",0);
    (X_168,r1_190) := sql.bind(X_7,"sys","lineorder","lo_revenue",2);
    X_171:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_revenue",1);
    X_173 := sql.delta(X_163,X_168,r1_190,X_171);
    X_174:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_270,X_64,X_35,X_8,X_173);
    X_175 := batcalc.lng(X_174);
    X_176:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_supplycost",0);
    (X_178,r1_204) := sql.bind(X_7,"sys","lineorder","lo_supplycost",2);
    X_180:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_supplycost",1);
    X_181 := sql.delta(X_176,X_178,r1_204,X_180);
    X_182:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_270,X_64,X_35,X_8,X_181);
    X_183 := batcalc.lng(X_182);
    X_184:bat[:oid,:lng]  := batcalc.-(X_175,X_183);
    X_185:bat[:oid,:hge]  := aggr.subsum(X_184,X_144,r1_166,true,true);
    (X_150,r1_172,r2_172) := algebra.subsort(X_149,false,false);
    (X_154,r1_176,r2_176) := algebra.subsort(X_148,r1_172,r2_172,false,false);
    (X_157,r1_179,r2_179) := algebra.subsort(X_147,r1_176,r2_176,false,false);
    X_160 := algebra.leftfetchjoin(r1_179,X_149);
    X_161 := algebra.leftfetchjoin(r1_179,X_148);
    X_162 := algebra.leftfetchjoin(r1_179,X_147);
    X_187 := algebra.leftfetchjoin(r1_179,X_185);
    sql.resultSet(X_222,X_224,X_226,X_228,X_230,X_160,X_161,X_162,X_187);
end s2_1;
# querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_nation = \\'UNITED STATES\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand p_category = \\'MFGR#14\\'\n\tgroup by d_year, s_city, p_brand1\n\torder by d_year, s_city, p_brand1;","sequential_pipe")

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

