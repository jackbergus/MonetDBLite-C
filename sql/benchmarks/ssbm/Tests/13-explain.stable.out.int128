stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 551 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str):void;
    X_214:void := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_nation = \\'UNITED STATES\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand p_category = \\'MFGR#14\\'\n\tgroup by d_year, s_city, p_brand1\n\torder by d_year, s_city, p_brand1;","sequential_pipe",127);
    X_172 := bat.new(nil:oid,nil:str);
    X_180 := bat.append(X_172,"sys.dwdate");
    X_190 := bat.append(X_180,"sys.supplier");
    X_198 := bat.append(X_190,"sys.part");
    X_205 := bat.append(X_198,"sys.L1");
    X_175 := bat.new(nil:oid,nil:str);
    X_182 := bat.append(X_175,"d_year");
    X_192 := bat.append(X_182,"s_city");
    X_200 := bat.append(X_192,"p_brand1");
    X_207 := bat.append(X_200,"profit1");
    X_176 := bat.new(nil:oid,nil:str);
    X_184 := bat.append(X_176,"int");
    X_194 := bat.append(X_184,"clob");
    X_202 := bat.append(X_194,"clob");
    X_209 := bat.append(X_202,"hugeint");
    X_177 := bat.new(nil:oid,nil:int);
    X_186 := bat.append(X_177,32);
    X_196 := bat.append(X_186,0);
    X_203 := bat.append(X_196,0);
    X_211 := bat.append(X_203,128);
    X_179 := bat.new(nil:oid,nil:int);
    X_188 := bat.append(X_179,0);
    X_197 := bat.append(X_188,0);
    X_204 := bat.append(X_197,0);
    X_213 := bat.append(X_204,0);
    X_7 := sql.mvc();
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineorder");
    X_11:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_14,r1_14) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_17:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_19 := sql.delta(X_11,X_14,r1_14,X_17);
    X_20 := algebra.leftfetchjoin(X_8,X_19);
    X_21:bat[:oid,:oid]  := sql.tid(X_7,"sys","dwdate");
    X_23:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",0);
    (X_25,r1_25) := sql.bind(X_7,"sys","dwdate","d_year",2);
    X_27:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",1);
    X_28 := sql.delta(X_23,X_25,r1_25,X_27);
    X_29 := algebra.leftfetchjoin(X_21,X_28);
    X_30 := algebra.subselect(X_29,A2,A2,true,false,false);
    X_33 := algebra.subselect(X_29,A3,A3,true,false,false);
    X_34 := bat.mergecand(X_30,X_33);
    X_35 := algebra.leftfetchjoin(X_34,X_21);
    (X_36,r1_38) := algebra.subjoin(X_20,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_41:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_43,r1_45) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_45:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_46 := sql.delta(X_41,X_43,r1_45,X_45);
    X_47:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_36,X_8,X_46);
    X_48:bat[:oid,:oid] := sql.tid(X_7,"sys","part");
    X_50:bat[:oid,:str] := sql.bind(X_7,"sys","part","p_category",0);
    (X_52,r1_55) := sql.bind(X_7,"sys","part","p_category",2);
    X_54:bat[:oid,:str] := sql.bind(X_7,"sys","part","p_category",1);
    X_55 := sql.delta(X_50,X_52,r1_55,X_54);
    X_56 := algebra.leftfetchjoin(X_48,X_55);
    X_57 := algebra.subselect(X_56,A4,A4,true,false,false);
    X_59 := algebra.leftfetchjoin(X_57,X_48);
    (X_60,r1_64) := algebra.subjoin(X_47,X_59,nil:BAT,nil:BAT,false,nil:lng);
    X_63:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_65,r1_69) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_67:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_68 := sql.delta(X_63,X_65,r1_69,X_67);
    X_69:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_60,X_36,X_8,X_68);
    X_70:bat[:oid,:oid] := sql.tid(X_7,"sys","supplier");
    X_72:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_nation",0);
    (X_74,r1_80) := sql.bind(X_7,"sys","supplier","s_nation",2);
    X_76:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_nation",1);
    X_77 := sql.delta(X_72,X_74,r1_80,X_76);
    X_78 := algebra.leftfetchjoin(X_70,X_77);
    X_79 := algebra.subselect(X_78,A1,A1,true,false,false);
    X_80 := algebra.leftfetchjoin(X_79,X_70);
    (X_81,r1_88) := algebra.subjoin(X_69,X_80,nil:BAT,nil:BAT,false,nil:lng);
    X_86:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_88,r1_95) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_90:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_91 := sql.delta(X_86,X_88,r1_95,X_90);
    X_92:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_81,X_60,X_36,X_8,X_91);
    X_93:bat[:oid,:oid] := sql.tid(X_7,"sys","customer");
    X_95:bat[:oid,:str] := sql.bind(X_7,"sys","customer","c_region",0);
    (X_97,r1_107) := sql.bind(X_7,"sys","customer","c_region",2);
    X_99:bat[:oid,:str] := sql.bind(X_7,"sys","customer","c_region",1);
    X_100 := sql.delta(X_95,X_97,r1_107,X_99);
    X_101 := algebra.leftfetchjoin(X_93,X_100);
    X_102 := algebra.subselect(X_101,A0,A0,true,false,false);
    X_106 := algebra.leftfetchjoin(X_102,X_93);
    (X_107,r1_118) := algebra.subjoin(X_92,X_106,nil:BAT,nil:BAT,false,nil:lng);
    X_109:bat[:oid,:str] := sql.bind(X_7,"sys","part","p_brand1",0);
    (X_111,r1_122) := sql.bind(X_7,"sys","part","p_brand1",2);
    X_113:bat[:oid,:str] := sql.bind(X_7,"sys","part","p_brand1",1);
    X_114 := sql.delta(X_109,X_111,r1_122,X_113);
    X_115:bat[:oid,:str] := algebra.leftfetchjoinPath(X_107,X_81,r1_64,X_57,X_48,X_114);
    X_116:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_city",0);
    (X_118,r1_133) := sql.bind(X_7,"sys","supplier","s_city",2);
    X_120:bat[:oid,:str] := sql.bind(X_7,"sys","supplier","s_city",1);
    X_121 := sql.delta(X_116,X_118,r1_133,X_120);
    X_122:bat[:oid,:str] := algebra.leftfetchjoinPath(X_107,r1_88,X_79,X_70,X_121);
    X_123:bat[:oid,:int] := algebra.leftfetchjoinPath(X_107,X_81,X_60,r1_38,X_34,X_29);
    (X_124,r1_146,r2_146) := group.subgroup(X_123);
    (X_127,r1_149,r2_149) := group.subgroup(X_122,X_124);
    (X_130,r1_152,r2_152) := group.subgroupdone(X_115,X_127);
    X_133 := algebra.leftfetchjoin(r1_152,X_115);
    X_134 := algebra.leftfetchjoin(r1_152,X_122);
    X_135 := algebra.leftfetchjoin(r1_152,X_123);
    X_150:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_revenue",0);
    (X_152,r1_174) := sql.bind(X_7,"sys","lineorder","lo_revenue",2);
    X_154:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_revenue",1);
    X_155 := sql.delta(X_150,X_152,r1_174,X_154);
    X_156:bat[:oid,:int] := algebra.leftfetchjoinPath(X_107,X_81,X_60,X_36,X_8,X_155);
    X_157 := batcalc.lng(X_156);
    X_158:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_supplycost",0);
    (X_160,r1_186) := sql.bind(X_7,"sys","lineorder","lo_supplycost",2);
    X_162:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_supplycost",1);
    X_163 := sql.delta(X_158,X_160,r1_186,X_162);
    X_164:bat[:oid,:int] := algebra.leftfetchjoinPath(X_107,X_81,X_60,X_36,X_8,X_163);
    X_165 := batcalc.lng(X_164);
    X_166:bat[:oid,:lng] := batcalc.-(X_157,X_165);
    X_167:bat[:oid,:hge] := aggr.subsum(X_166,X_130,r1_152,true,true);
    (X_136,r1_158,r2_158) := algebra.subsort(X_135,false,false);
    (X_141,r1_163,r2_163) := algebra.subsort(X_134,r1_158,r2_158,false,false);
    (X_144,r1_166,r2_166) := algebra.subsort(X_133,r1_163,r2_163,false,false);
    X_147 := algebra.leftfetchjoin(r1_166,X_135);
    X_148 := algebra.leftfetchjoin(r1_166,X_134);
    X_149 := algebra.leftfetchjoin(r1_166,X_133);
    X_170 := algebra.leftfetchjoin(r1_166,X_167);
    sql.resultSet(X_205,X_207,X_209,X_211,X_213,X_147,X_148,X_149,X_170);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

