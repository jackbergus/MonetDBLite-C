stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 92 # length
function user.s0_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str):void;
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineorder");
    X_10 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_16 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.leftfetchjoin(X_7,X_18);
    X_20:bat[:oid,:oid]  := sql.tid(X_6,"sys","part");
    X_22 := sql.bind(X_6,"sys","part","p_mfgr",0);
    (X_24,r1_24) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_26 := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_27 := sql.delta(X_22,X_24,r1_24,X_26);
    X_28 := algebra.leftfetchjoin(X_20,X_27);
    X_29 := algebra.subselect(X_28,A2,A2,true,true,false);
    X_31 := algebra.subselect(X_28,A3,A3,true,true,false);
    X_32 := bat.mergecand(X_29,X_31);
    X_33 := algebra.subselect(X_28,X_32,A2,A2,true,true,false);
    X_34 := algebra.subselect(X_28,X_32,A3,A3,true,true,false);
    X_36 := bat.mergecand(X_33,X_34);
    X_37 := algebra.leftfetchjoin(X_36,X_20);
    (X_38,r1_42) := algebra.join(X_19,X_37);
    X_214 := algebra.leftfetchjoin(X_38,X_7);
    X_40 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_45,r1_49) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_48 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_50 := sql.delta(X_40,X_45,r1_49,X_48);
    X_51:bat[:oid,:oid]  := algebra.leftfetchjoin(X_214,X_50);
    X_52:bat[:oid,:oid]  := sql.tid(X_6,"sys","supplier");
    X_54 := sql.bind(X_6,"sys","supplier","s_region",0);
    (X_56,r1_61) := sql.bind(X_6,"sys","supplier","s_region",2);
    X_58 := sql.bind(X_6,"sys","supplier","s_region",1);
    X_59 := sql.delta(X_54,X_56,r1_61,X_58);
    X_60 := algebra.leftfetchjoin(X_52,X_59);
    X_61 := algebra.subselect(X_60,A1,A1,true,true,false);
    X_63 := algebra.leftfetchjoin(X_61,X_52);
    (X_64,r1_70) := algebra.join(X_51,X_63);
    X_215 := algebra.leftfetchjoin(X_64,X_38);
    X_66 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_68,r1_74) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_70 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_71 := sql.delta(X_66,X_68,r1_74,X_70);
    X_72:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_215,X_7,X_71);
    X_73:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_76 := sql.bind(X_6,"sys","customer","c_region",0);
    (X_79,r1_87) := sql.bind(X_6,"sys","customer","c_region",2);
    X_82 := sql.bind(X_6,"sys","customer","c_region",1);
    X_84 := sql.delta(X_76,X_79,r1_87,X_82);
    X_85 := algebra.leftfetchjoin(X_73,X_84);
    X_86 := algebra.subselect(X_85,A0,A0,true,true,false);
    X_88 := algebra.leftfetchjoin(X_86,X_73);
    (X_89,r1_98) := algebra.join(X_72,X_88);
    X_216 := algebra.leftfetchjoin(X_89,X_64);
    X_91 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_94,r1_103) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_96 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_97 := sql.delta(X_91,X_94,r1_103,X_96);
    X_98:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_216,X_38,X_7,X_97);
    X_99:bat[:oid,:oid]  := sql.tid(X_6,"sys","dwdate");
    (X_101,r1_113) := algebra.join(X_98,X_99);
    X_217 := algebra.leftfetchjoin(r1_98,X_86);
    X_103 := sql.bind(X_6,"sys","customer","c_nation",0);
    (X_108,r1_120) := sql.bind(X_6,"sys","customer","c_nation",2);
    X_111 := sql.bind(X_6,"sys","customer","c_nation",1);
    X_113 := sql.delta(X_103,X_108,r1_120,X_111);
    X_114:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_101,X_217,X_73,X_113);
    X_115 := sql.bind(X_6,"sys","dwdate","d_year",0);
    (X_117,r1_132) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_119 := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_120 := sql.delta(X_115,X_117,r1_132,X_119);
    X_121:bat[:oid,:int]  := algebra.leftfetchjoinPath(r1_113,X_99,X_120);
    (X_122,r1_138,r2_138) := group.subgroup(X_121);
    (X_125,r1_141,r2_141) := group.subgroupdone(X_114,X_122);
    X_128 := algebra.leftfetchjoin(r1_141,X_114);
    X_129 := algebra.leftfetchjoin(r1_141,X_121);
    X_218 := algebra.leftfetchjoin(X_101,X_89);
    X_139 := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (X_144,r1_160) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_147 := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_149 := sql.delta(X_139,X_144,r1_160,X_147);
    X_150:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_218,X_64,X_38,X_7,X_149);
    X_151 := batcalc.lng(X_150);
    X_152 := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (X_154,r1_174) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_156 := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_157 := sql.delta(X_152,X_154,r1_174,X_156);
    X_158:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_218,X_64,X_38,X_7,X_157);
    X_159 := batcalc.lng(X_158);
    X_160:bat[:oid,:lng]  := batcalc.-(X_151,X_159);
    X_161:bat[:oid,:lng]  := aggr.subsum(X_160,X_125,r1_141,true,true);
    (X_130,r1_146,r2_146) := algebra.subsort(X_129,false,false);
    (X_134,r1_150,r2_150) := algebra.subsort(X_128,r1_146,r2_146,false,false);
    X_137 := algebra.leftfetchjoin(r1_150,X_129);
    X_163 := algebra.leftfetchjoin(r1_150,X_161);
    X_138 := algebra.leftfetchjoin(r1_150,X_128);
    X_164 := sql.resultSet(3,1,X_137);
    sql.rsColumn(X_164,"sys.dwdate","d_year","int",32,0,X_137);
    sql.rsColumn(X_164,"sys.customer","c_nation","clob",0,0,X_138);
    sql.rsColumn(X_164,"sys.L1","profit1","bigint",64,0,X_163);
    X_181 := io.stdout();
    sql.exportResult(X_181,X_164);
end s0_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

