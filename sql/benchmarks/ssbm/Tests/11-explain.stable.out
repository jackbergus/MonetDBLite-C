stdout of test '11-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "11-explain.SQL.py" "11-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, c_nation
#	order by d_year, c_nation;
% .explain # table_name
% mal # name
% clob # type
% 480 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str):void;
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineorder");
    X_10 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_16 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.leftfetchjoin(X_7,X_18);
    X_20:bat[:oid,:oid]  := sql.tid(X_6,"sys","part");
    X_22 := sql.bind(X_6,"sys","part","p_mfgr",0);
    (X_24,r1_24) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_26 := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_27 := sql.delta(X_22,X_24,r1_24,X_26);
    X_28 := algebra.leftfetchjoin(X_20,X_27);
    X_29 := algebra.subselect(X_28,A2,A2,true,true,false);
    X_31 := algebra.subselect(X_28,A3,A3,true,true,false);
    X_32 := bat.mergecand(X_29,X_31);
    X_33 := algebra.leftfetchjoin(X_32,X_20);
    (X_34,r1_36) := algebra.join(X_19,X_33);
    X_207 := algebra.leftfetchjoin(X_34,X_7);
    X_36 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_38,r1_40) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_42 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_43 := sql.delta(X_36,X_38,r1_40,X_42);
    X_44:bat[:oid,:oid]  := algebra.leftfetchjoin(X_207,X_43);
    X_45:bat[:oid,:oid]  := sql.tid(X_6,"sys","supplier");
    X_47 := sql.bind(X_6,"sys","supplier","s_region",0);
    (X_50,r1_53) := sql.bind(X_6,"sys","supplier","s_region",2);
    X_53 := sql.bind(X_6,"sys","supplier","s_region",1);
    X_55 := sql.delta(X_47,X_50,r1_53,X_53);
    X_56 := algebra.leftfetchjoin(X_45,X_55);
    X_57 := algebra.subselect(X_56,A1,A1,true,true,false);
    X_59 := algebra.leftfetchjoin(X_57,X_45);
    (X_60,r1_64) := algebra.join(X_44,X_59);
    X_208 := algebra.leftfetchjoin(X_60,X_34);
    X_62 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_64,r1_68) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_66 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_67 := sql.delta(X_62,X_64,r1_68,X_66);
    X_68:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_208,X_7,X_67);
    X_69:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_72 := sql.bind(X_6,"sys","customer","c_region",0);
    (X_74,r1_80) := sql.bind(X_6,"sys","customer","c_region",2);
    X_76 := sql.bind(X_6,"sys","customer","c_region",1);
    X_77 := sql.delta(X_72,X_74,r1_80,X_76);
    X_78 := algebra.leftfetchjoin(X_69,X_77);
    X_79 := algebra.subselect(X_78,A0,A0,true,true,false);
    X_81 := algebra.leftfetchjoin(X_79,X_69);
    (X_82,r1_89) := algebra.join(X_68,X_81);
    X_209 := algebra.leftfetchjoin(X_82,X_60);
    X_84 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_88,r1_95) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_91 := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_93 := sql.delta(X_84,X_88,r1_95,X_91);
    X_94:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_209,X_34,X_7,X_93);
    X_95:bat[:oid,:oid]  := sql.tid(X_6,"sys","dwdate");
    (X_97,r1_107) := algebra.join(X_94,X_95);
    X_108 := sql.bind(X_6,"sys","dwdate","d_year",0);
    (X_110,r1_123) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_112 := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_113 := sql.delta(X_108,X_110,r1_123,X_112);
    X_114:bat[:oid,:int]  := algebra.leftfetchjoinPath(r1_107,X_95,X_113);
    X_210 := algebra.leftfetchjoin(r1_89,X_79);
    X_99 := sql.bind(X_6,"sys","customer","c_nation",0);
    (X_103,r1_113) := sql.bind(X_6,"sys","customer","c_nation",2);
    X_105 := sql.bind(X_6,"sys","customer","c_nation",1);
    X_106 := sql.delta(X_99,X_103,r1_113,X_105);
    X_107:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_97,X_210,X_69,X_106);
    (X_115,r1_132,r2_132) := group.subgroup(X_114,X_107);
    X_118 := algebra.leftfetchjoin(r1_132,X_107);
    X_119 := algebra.leftfetchjoin(r1_132,X_114);
    X_211 := algebra.leftfetchjoin(X_97,X_82);
    X_129 := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (X_134,r1_151) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_137 := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_139 := sql.delta(X_129,X_134,r1_151,X_137);
    X_140:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_211,X_60,X_34,X_7,X_139);
    X_141 := batcalc.lng(X_140);
    X_142 := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (X_144,r1_165) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_146 := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_147 := sql.delta(X_142,X_144,r1_165,X_146);
    X_148:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_211,X_60,X_34,X_7,X_147);
    X_149 := batcalc.lng(X_148);
    X_150:bat[:oid,:lng]  := batcalc.-(X_141,X_149);
    X_151:bat[:oid,:lng]  := aggr.subsum(X_150,X_115,r1_132,true,true);
    (X_120,r1_137,r2_137) := algebra.subsort(X_119,false,false);
    (X_124,r1_141,r2_141) := algebra.subsort(X_118,r1_137,r2_137,false,false);
    X_127 := algebra.leftfetchjoin(r1_141,X_119);
    X_153 := algebra.leftfetchjoin(r1_141,X_151);
    X_128 := algebra.leftfetchjoin(r1_141,X_118);
    X_154 := sql.resultSet(3,1,X_127);
    sql.rsColumn(X_154,"sys.dwdate","d_year","int",32,0,X_127);
    sql.rsColumn(X_154,"sys.customer","c_nation","clob",0,0,X_128);
    sql.rsColumn(X_154,"sys.L1","profit1","bigint",64,0,X_153);
    X_171 := io.stdout();
    sql.exportResult(X_171,X_154);
end s2_1;
# querylog.define("explain\nselect d_year, c_nation, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, c_nation\n\torder by d_year, c_nation;","sequential_pipe")

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

