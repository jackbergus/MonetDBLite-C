stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 530 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str):void;
    X_7 := sql.mvc();
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineorder");
    X_11 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_14,r1_14) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_17 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_19 := sql.delta(X_11,X_14,r1_14,X_17);
    X_20 := algebra.leftfetchjoin(X_8,X_19);
    X_21:bat[:oid,:oid]  := sql.tid(X_7,"sys","dwdate");
    X_23:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",0);
    (X_25,r1_25) := sql.bind(X_7,"sys","dwdate","d_year",2);
    X_27:bat[:oid,:int]  := sql.bind(X_7,"sys","dwdate","d_year",1);
    X_28 := sql.delta(X_23,X_25,r1_25,X_27);
    X_29 := algebra.leftfetchjoin(X_21,X_28);
    X_30 := algebra.subselect(X_29,A2,A2,true,true,false);
    X_32 := algebra.subselect(X_29,A3,A3,true,true,false);
    X_33 := bat.mergecand(X_30,X_32);
    X_34 := algebra.leftfetchjoin(X_33,X_21);
    (X_35,r1_37) := algebra.join(X_20,X_34);
    X_239 := algebra.leftfetchjoin(X_35,X_8);
    X_37 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_39,r1_41) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_43 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_44 := sql.delta(X_37,X_39,r1_41,X_43);
    X_45:bat[:oid,:oid]  := algebra.leftfetchjoin(X_239,X_44);
    X_46:bat[:oid,:oid]  := sql.tid(X_7,"sys","part");
    X_48:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",0);
    (X_51,r1_54) := sql.bind(X_7,"sys","part","p_category",2);
    X_54:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_category",1);
    X_56 := sql.delta(X_48,X_51,r1_54,X_54);
    X_57 := algebra.leftfetchjoin(X_46,X_56);
    X_58 := algebra.subselect(X_57,A4,A4,true,true,false);
    X_60 := algebra.leftfetchjoin(X_58,X_46);
    (X_61,r1_65) := algebra.join(X_45,X_60);
    X_240 := algebra.leftfetchjoin(X_61,X_35);
    X_63 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_65,r1_69) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_67 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_68 := sql.delta(X_63,X_65,r1_69,X_67);
    X_69:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_240,X_8,X_68);
    X_70:bat[:oid,:oid]  := sql.tid(X_7,"sys","supplier");
    X_73:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_nation",0);
    (X_75,r1_81) := sql.bind(X_7,"sys","supplier","s_nation",2);
    X_77:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_nation",1);
    X_78 := sql.delta(X_73,X_75,r1_81,X_77);
    X_79 := algebra.leftfetchjoin(X_70,X_78);
    X_80 := algebra.subselect(X_79,A1,A1,true,true,false);
    X_82 := algebra.leftfetchjoin(X_80,X_70);
    (X_83,r1_90) := algebra.join(X_69,X_82);
    X_241 := algebra.leftfetchjoin(X_83,X_61);
    X_85 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_89,r1_96) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_92 := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_94 := sql.delta(X_85,X_89,r1_96,X_92);
    X_95:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_241,X_35,X_8,X_94);
    X_96:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    X_98:bat[:oid,:str]  := sql.bind(X_7,"sys","customer","c_region",0);
    (X_100,r1_110) := sql.bind(X_7,"sys","customer","c_region",2);
    X_103:bat[:oid,:str]  := sql.bind(X_7,"sys","customer","c_region",1);
    X_104 := sql.delta(X_98,X_100,r1_110,X_103);
    X_105 := algebra.leftfetchjoin(X_96,X_104);
    X_106 := algebra.subselect(X_105,A0,A0,true,true,false);
    X_108 := algebra.leftfetchjoin(X_106,X_96);
    (X_109,r1_120) := algebra.join(X_95,X_108);
    X_242 := algebra.leftfetchjoin(X_109,X_83);
    X_111:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_brand1",0);
    (X_114,r1_125) := sql.bind(X_7,"sys","part","p_brand1",2);
    X_116:bat[:oid,:str]  := sql.bind(X_7,"sys","part","p_brand1",1);
    X_117 := sql.delta(X_111,X_114,r1_125,X_116);
    X_118:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_242,r1_65,X_58,X_46,X_117);
    X_243 := algebra.leftfetchjoin(r1_90,X_80);
    X_119:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_city",0);
    (X_123,r1_138) := sql.bind(X_7,"sys","supplier","s_city",2);
    X_126:bat[:oid,:str]  := sql.bind(X_7,"sys","supplier","s_city",1);
    X_128 := sql.delta(X_119,X_123,r1_138,X_126);
    X_129:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_109,X_243,X_70,X_128);
    X_130:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_242,X_61,r1_37,X_33,X_29);
    (X_131,r1_153,r2_153) := group.subgroup(X_130);
    (X_134,r1_156,r2_156) := group.subgroup(X_129,X_131);
    (X_137,r1_159,r2_159) := group.subgroupdone(X_118,X_134);
    X_140 := algebra.leftfetchjoin(r1_159,X_118);
    X_141 := algebra.leftfetchjoin(r1_159,X_129);
    X_142 := algebra.leftfetchjoin(r1_159,X_130);
    X_156:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_revenue",0);
    (X_161,r1_183) := sql.bind(X_7,"sys","lineorder","lo_revenue",2);
    X_164:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_revenue",1);
    X_166 := sql.delta(X_156,X_161,r1_183,X_164);
    X_167:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_242,X_61,X_35,X_8,X_166);
    X_168 := batcalc.lng(X_167);
    X_169:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_supplycost",0);
    (X_171,r1_197) := sql.bind(X_7,"sys","lineorder","lo_supplycost",2);
    X_173:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_supplycost",1);
    X_174 := sql.delta(X_169,X_171,r1_197,X_173);
    X_175:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_242,X_61,X_35,X_8,X_174);
    X_176 := batcalc.lng(X_175);
    X_177:bat[:oid,:lng]  := batcalc.-(X_168,X_176);
    X_178:bat[:oid,:lng]  := aggr.subsum(X_177,X_137,r1_159,true,true);
    (X_143,r1_165,r2_165) := algebra.subsort(X_142,false,false);
    (X_147,r1_169,r2_169) := algebra.subsort(X_141,r1_165,r2_165,false,false);
    (X_150,r1_172,r2_172) := algebra.subsort(X_140,r1_169,r2_169,false,false);
    X_153 := algebra.leftfetchjoin(r1_172,X_142);
    X_180 := algebra.leftfetchjoin(r1_172,X_178);
    X_155 := algebra.leftfetchjoin(r1_172,X_140);
    X_154 := algebra.leftfetchjoin(r1_172,X_141);
    X_181 := sql.resultSet(4,1,X_153);
    sql.rsColumn(X_181,"sys.dwdate","d_year","int",32,0,X_153);
    sql.rsColumn(X_181,"sys.supplier","s_city","clob",0,0,X_154);
    sql.rsColumn(X_181,"sys.part","p_brand1","clob",0,0,X_155);
    sql.rsColumn(X_181,"sys.L1","profit1","bigint",64,0,X_180);
    X_201 := io.stdout();
    sql.exportResult(X_201,X_181);
end s2_1;
# querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_nation = \\'UNITED STATES\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand p_category = \\'MFGR#14\\'\n\tgroup by d_year, s_city, p_brand1\n\torder by d_year, s_city, p_brand1;","sequential_pipe")

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

