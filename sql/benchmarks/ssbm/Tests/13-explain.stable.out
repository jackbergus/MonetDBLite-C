stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 526 # length
function user.s4_1():void;
    X_278:void := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_nation = \\'UNITED STATES\\'\n and (d_year = 1997 or d_year = 1998)\n and p_category = \\'MFGR#14\\'\n group by d_year, s_city, p_brand1\n order by d_year, s_city, p_brand1;","sequential_pipe",103);
    X_237 := bat.new(nil:str);
    X_244 := bat.append(X_237,"sys.dwdate");
    X_254 := bat.append(X_244,"sys.supplier");
    X_262 := bat.append(X_254,"sys.part");
    X_269 := bat.append(X_262,"sys.L6");
    X_239 := bat.new(nil:str);
    X_246 := bat.append(X_239,"d_year");
    X_256 := bat.append(X_246,"s_city");
    X_264 := bat.append(X_256,"p_brand1");
    X_271 := bat.append(X_264,"profit1");
    X_240 := bat.new(nil:str);
    X_248 := bat.append(X_240,"int");
    X_258 := bat.append(X_248,"clob");
    X_266 := bat.append(X_258,"clob");
    X_273 := bat.append(X_266,"bigint");
    X_241 := bat.new(nil:int);
    X_250 := bat.append(X_241,32);
    X_260 := bat.append(X_250,0);
    X_267 := bat.append(X_260,0);
    X_275 := bat.append(X_267,64);
    X_243 := bat.new(nil:int);
    X_252 := bat.append(X_243,0);
    X_261 := bat.append(X_252,0);
    X_268 := bat.append(X_261,0);
    X_277 := bat.append(X_268,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_21:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_24,X_25:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_26 := sql.delta(X_21,X_24,X_25,X_23);
    X_27 := algebra.projection(C_1,X_26);
    C_49:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    X_51:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_57 := algebra.projection(C_49,X_51);
    C_59 := algebra.subselect(X_57,1997,1997,true,false,false);
    C_64 := algebra.subselect(X_57,1998,1998,true,false,false);
    X_65 := bat.mergecand(C_59,C_64);
    X_67 := algebra.projection(X_65,C_49);
    (X_68,X_69) := algebra.subjoin(X_27,X_67,nil:BAT,nil:BAT,false,nil:lng);
    X_42:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_45,X_46:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_44:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_47 := sql.delta(X_42,X_45,X_46,X_44);
    X_78:bat[:oid] := algebra.projectionpath(X_68,C_1,X_47);
    C_81:bat[:oid] := sql.tid(X_0,"sys","part");
    X_83:bat[:str] := sql.bind(X_0,"sys","part","p_category",0);
    X_89 := algebra.projection(C_81,X_83);
    C_98 := algebra.subselect(X_89,"MFGR#14","MFGR#14",true,false,false);
    X_104 := algebra.projection(C_98,C_81);
    (X_105,X_106) := algebra.subjoin(X_78,X_104,nil:BAT,nil:BAT,false,nil:lng);
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_31,X_32:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_33 := sql.delta(X_28,X_31,X_32,X_30);
    X_113:bat[:oid] := algebra.projectionpath(X_105,X_68,C_1,X_33);
    C_121:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_130:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",0);
    X_136 := algebra.projection(C_121,X_130);
    C_138 := algebra.subselect(X_136,"UNITED STATES","UNITED STATES",true,false,false);
    X_144 := algebra.projection(C_138,C_121);
    (X_145,X_146) := algebra.subjoin(X_113,X_144,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_38,X_39:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_40 := sql.delta(X_35,X_38,X_39,X_37);
    X_154:bat[:oid] := algebra.projectionpath(X_145,X_105,X_68,C_1,X_40);
    C_164:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_166:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    X_172 := algebra.projection(C_164,X_166);
    C_174 := algebra.subselect(X_172,"AMERICA","AMERICA",true,false,false);
    X_179 := algebra.projection(C_174,C_164);
    (X_180,X_181) := algebra.subjoin(X_154,X_179,nil:BAT,nil:BAT,false,nil:lng);
    X_90:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",0);
    X_194:bat[:str] := algebra.projectionpath(X_180,X_145,X_106,C_98,C_81,X_90);
    X_123:bat[:str] := sql.bind(X_0,"sys","supplier","s_city",0);
    X_196:bat[:str] := algebra.projectionpath(X_180,X_146,C_138,C_121,X_123);
    X_191:bat[:int] := algebra.projectionpath(X_180,X_145,X_105,X_69,X_65,X_57);
    (X_206,X_207,X_208) := group.subgroup(X_191);
    (X_209,X_210,X_211) := group.subgroup(X_196,X_206);
    (X_212,X_213,X_214) := group.subgroupdone(X_194,X_209);
    X_215 := algebra.projection(X_213,X_191);
    X_216 := algebra.projection(X_213,X_196);
    X_217 := algebra.projection(X_213,X_194);
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_185:bat[:int] := algebra.projectionpath(X_180,X_145,X_105,X_68,C_1,X_4);
    X_201 := batcalc.lng(X_185);
    X_14:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",0);
    X_186:bat[:int] := algebra.projectionpath(X_180,X_145,X_105,X_68,C_1,X_14);
    X_202 := batcalc.lng(X_186);
    X_203:bat[:lng] := batcalc.-(X_201,X_202);
    X_218:bat[:lng] := aggr.subsum(X_203,X_212,X_213,true,true);
    (X_221,X_222,X_223) := algebra.subsort(X_215,false,false);
    (X_226,X_227,X_228) := algebra.subsort(X_216,X_222,X_223,false,false);
    (X_229,X_230,X_231) := algebra.subsort(X_217,X_227,X_228,false,false);
    X_232 := algebra.projection(X_230,X_215);
    X_233 := algebra.projection(X_230,X_216);
    X_234 := algebra.projection(X_230,X_217);
    X_235 := algebra.projection(X_230,X_218);
    sql.resultSet(X_269,X_271,X_273,X_275,X_277,X_232,X_233,X_234,X_235);
end user.s4_1;
#inline               actions= 0 time=7 usec 
#remap                actions= 1 time=42 usec 
#costmodel            actions= 1 time=6 usec 
#coercion             actions= 0 time=4 usec 
#evaluate             actions= 5 time=36 usec 
#emptybind            actions=24 time=63 usec 
#aliases              actions=13 time=31 usec 
#mergetable           actions= 0 time=91 usec 
#deadcode             actions=24 time=18 usec 
#aliases              actions= 0 time=15 usec 
#constants            actions=24 time=38 usec 
#commonTerms          actions= 0 time=17 usec 
#projectionpath       actions=25 time=42 usec 
#reorder              actions= 1 time=73 usec 
#deadcode             actions=25 time=16 usec 
#reduce               actions=114 time=26 usec 
#matpack              actions= 0 time=3 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=6 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=39 usec 
#total                actions= 1 time=791 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

