stdout of test '09-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 23:10:47 >  

#set optimizer = 'no_mitosis_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 98 # length
function user.s0_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:int,A7:int):void;
    X_142:bat[:oid,:str]  := nil:bat[:oid,:str];
    X_145 := nil:bat[:oid,:lng];
    X_144 := nil:bat[:oid,:int];
    X_143:bat[:oid,:str]  := nil:bat[:oid,:str];
barrier X_227 := language.dataflow();
    X_10 := sql.mvc();
    X_11:bat[:oid,:oid]  := sql.tid(X_10,"sys","lineorder");
    X_14 := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_17,r1_17) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_20 := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_22 := sql.projectdelta(X_11,X_14,X_17,r1_17,X_20);
    X_25 := sql.bind(X_10,"sys","customer","c_city",0);
    X_30 := sql.bind(X_10,"sys","customer","c_nation",0);
    X_23:bat[:oid,:oid]  := sql.tid(X_10,"sys","customer");
    X_195 := algebra.subselect(X_30,X_23,A0,A0,true,true,false);
    (X_32,r1_37) := sql.bind(X_10,"sys","customer","c_nation",2);
    X_196 := algebra.subselect(r1_37,A0,A0,true,true,false);
    X_34 := sql.bind(X_10,"sys","customer","c_nation",1);
    X_197 := algebra.subselect(X_34,X_23,A0,A0,true,true,false);
    X_35 := sql.subdelta(X_195,X_23,X_32,X_196,X_197);
    X_198 := algebra.subselect(X_25,X_35,A1,A1,true,true,false);
    (X_27,r1_28) := sql.bind(X_10,"sys","customer","c_city",2);
    X_199 := algebra.subselect(r1_28,A1,A1,true,true,false);
    X_29 := sql.bind(X_10,"sys","customer","c_city",1);
    X_200 := algebra.subselect(X_29,X_35,A1,A1,true,true,false);
    X_38 := sql.subdelta(X_198,X_35,X_27,X_199,X_200);
    X_201 := algebra.subselect(X_25,X_35,A2,A2,true,true,false);
    X_202 := algebra.subselect(r1_28,A2,A2,true,true,false);
    X_203 := algebra.subselect(X_29,X_35,A2,A2,true,true,false);
    X_39 := sql.subdelta(X_201,X_35,X_27,X_202,X_203);
    X_40 := bat.mergecand(X_38,X_39);
    X_204 := algebra.subselect(X_25,X_40,A1,A1,true,true,false);
    X_205 := algebra.subselect(X_29,X_40,A1,A1,true,true,false);
    X_41 := sql.subdelta(X_204,X_40,X_27,X_199,X_205);
    X_206 := algebra.subselect(X_25,X_40,A2,A2,true,true,false);
    X_207 := algebra.subselect(X_29,X_40,A2,A2,true,true,false);
    X_42 := sql.subdelta(X_206,X_40,X_27,X_202,X_207);
    X_43 := bat.mergecand(X_41,X_42);
    X_44 := X_43;
    (X_45,r1_55) := algebra.join(X_22,X_44);
    X_47 := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_52,r1_62) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_55 := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_57 := sql.projectdelta(X_11,X_47,X_52,r1_62,X_55);
    X_58 := algebra.leftfetchjoin(X_45,X_57);
    X_61 := sql.bind(X_10,"sys","supplier","s_city",0);
    X_66 := sql.bind(X_10,"sys","supplier","s_nation",0);
    X_59:bat[:oid,:oid]  := sql.tid(X_10,"sys","supplier");
    X_208 := algebra.subselect(X_66,X_59,A5,A5,true,true,false);
    (X_68,r1_83) := sql.bind(X_10,"sys","supplier","s_nation",2);
    X_209 := algebra.subselect(r1_83,A5,A5,true,true,false);
    X_70 := sql.bind(X_10,"sys","supplier","s_nation",1);
    X_210 := algebra.subselect(X_70,X_59,A5,A5,true,true,false);
    X_71 := sql.subdelta(X_208,X_59,X_68,X_209,X_210);
    X_211 := algebra.subselect(X_61,X_71,A3,A3,true,true,false);
    (X_63,r1_74) := sql.bind(X_10,"sys","supplier","s_city",2);
    X_212 := algebra.subselect(r1_74,A3,A3,true,true,false);
    X_65 := sql.bind(X_10,"sys","supplier","s_city",1);
    X_213 := algebra.subselect(X_65,X_71,A3,A3,true,true,false);
    X_74 := sql.subdelta(X_211,X_71,X_63,X_212,X_213);
    X_214 := algebra.subselect(X_61,X_71,A4,A4,true,true,false);
    X_215 := algebra.subselect(r1_74,A4,A4,true,true,false);
    X_216 := algebra.subselect(X_65,X_71,A4,A4,true,true,false);
    X_75 := sql.subdelta(X_214,X_71,X_63,X_215,X_216);
    X_76 := bat.mergecand(X_74,X_75);
    X_217 := algebra.subselect(X_61,X_76,A3,A3,true,true,false);
    X_218 := algebra.subselect(X_65,X_76,A3,A3,true,true,false);
    X_77 := sql.subdelta(X_217,X_76,X_63,X_212,X_218);
    X_219 := algebra.subselect(X_61,X_76,A4,A4,true,true,false);
    X_220 := algebra.subselect(X_65,X_76,A4,A4,true,true,false);
    X_78 := sql.subdelta(X_219,X_76,X_63,X_215,X_220);
    X_79 := bat.mergecand(X_77,X_78);
    X_80 := X_79;
    (X_81,r1_101) := algebra.join(X_58,X_80);
    X_224 := algebra.leftfetchjoin(X_81,X_45);
    X_83 := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_88,r1_108) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_91 := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_93 := sql.projectdelta(X_11,X_83,X_88,r1_108,X_91);
    X_94:bat[:oid,:oid]  := algebra.leftfetchjoin(X_224,X_93);
    X_97 := sql.bind(X_10,"sys","dwdate","d_year",0);
    X_95:bat[:oid,:oid]  := sql.tid(X_10,"sys","dwdate");
    X_221 := algebra.subselect(X_97,X_95,A6,A7,true,true,false);
    (X_99,r1_121) := sql.bind(X_10,"sys","dwdate","d_year",2);
    X_222 := algebra.subselect(r1_121,A6,A7,true,true,false);
    X_101 := sql.bind(X_10,"sys","dwdate","d_year",1);
    X_223 := algebra.subselect(X_101,X_95,A6,A7,true,true,false);
    X_102 := sql.subdelta(X_221,X_95,X_99,X_222,X_223);
    X_105 := X_102;
    (X_106,r1_132) := algebra.join(X_94,X_105);
    X_225 := algebra.leftfetchjoin(X_106,X_81);
    X_108 := sql.bind(X_10,"sys","lineorder","lo_revenue",0);
    (X_110,r1_136) := sql.bind(X_10,"sys","lineorder","lo_revenue",2);
    X_114 := sql.bind(X_10,"sys","lineorder","lo_revenue",1);
    X_115 := sql.projectdelta(X_11,X_108,X_110,r1_136,X_114);
    X_116:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_225,X_45,X_115);
    X_117 := sql.projectdelta(X_79,X_61,X_63,r1_74,X_65);
    X_118:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_106,r1_101,X_117);
    X_119 := sql.projectdelta(X_43,X_25,X_27,r1_28,X_29);
    X_120:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_225,r1_55,X_119);
    X_121 := sql.projectdelta(X_102,X_97,X_99,r1_121,X_101);
    X_122 := algebra.leftfetchjoin(r1_132,X_121);
    (X_123,r1_155,r2_155) := group.subgroup(X_122);
    (X_126,r1_158,r2_158) := group.subgroup(X_120,X_123);
    (X_129,r1_161,r2_161) := group.subgroupdone(X_118,X_126);
    X_132:bat[:oid,:lng]  := aggr.subsum(X_116,X_129,r1_161,true,true);
    X_134 := algebra.leftfetchjoin(r1_161,X_122);
    (X_135,r1_167,r2_167) := algebra.subsort(X_134,false,false);
    (X_139,r1_171,r2_171) := algebra.subsort(X_132,r1_167,r2_167,true,false);
    X_226 := algebra.leftfetchjoin(r1_171,r1_161);
    X_142:bat[:oid,:str]  := algebra.leftfetchjoin(X_226,X_120);
    X_145 := algebra.leftfetchjoin(r1_171,X_132);
    X_144 := algebra.leftfetchjoin(r1_171,X_134);
    X_143:bat[:oid,:str]  := algebra.leftfetchjoin(X_226,X_118);
    language.pass(X_23);
    language.pass(X_35);
    language.pass(X_199);
    language.pass(X_40);
    language.pass(X_202);
    language.pass(X_59);
    language.pass(X_71);
    language.pass(X_212);
    language.pass(X_76);
    language.pass(X_215);
    language.pass(X_95);
    language.pass(X_81);
    language.pass(X_11);
    language.pass(X_45);
    language.pass(X_79);
    language.pass(X_61);
    language.pass(X_63);
    language.pass(r1_74);
    language.pass(X_65);
    language.pass(X_106);
    language.pass(X_43);
    language.pass(X_25);
    language.pass(X_27);
    language.pass(r1_28);
    language.pass(X_29);
    language.pass(X_225);
    language.pass(X_102);
    language.pass(X_97);
    language.pass(X_99);
    language.pass(r1_121);
    language.pass(X_101);
    language.pass(X_122);
    language.pass(r1_161);
    language.pass(X_120);
    language.pass(X_132);
    language.pass(r1_171);
    language.pass(X_134);
    language.pass(X_226);
    language.pass(X_118);
exit X_227;
    X_146 := sql.resultSet(4,1,X_142);
    sql.rsColumn(X_146,"sys.customer","c_city","clob",0,0,X_142);
    sql.rsColumn(X_146,"sys.supplier","s_city","clob",0,0,X_143);
    sql.rsColumn(X_146,"sys.dwdate","d_year","int",32,0,X_144);
    sql.rsColumn(X_146,"sys.L1","revenue","bigint",32,0,X_145);
    X_166 := io.stdout();
    sql.exportResult(X_166,X_146);
end s0_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

