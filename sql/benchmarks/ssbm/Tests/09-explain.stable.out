stdout of test '09-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 567 # length
function user.s2_1(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:int,A7:int):void;
    X_201:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_nation = \\'UNITED KINGDOM\\'\n and (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n and (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n and s_nation = \\'UNITED KINGDOM\\'\n and d_year >= 1992 and d_year <= 1997\n group by c_city, s_city, d_year\n order by d_year asc, revenue desc;","sequential_pipe",118);
    X_160 := bat.new(nil:str);
    X_167 := bat.append(X_160,"sys.customer");
    X_176 := bat.append(X_167,"sys.supplier");
    X_183 := bat.append(X_176,"sys.dwdate");
    X_192 := bat.append(X_183,"sys.L1");
    X_162 := bat.new(nil:str);
    X_169 := bat.append(X_162,"c_city");
    X_178 := bat.append(X_169,"s_city");
    X_185 := bat.append(X_178,"d_year");
    X_194 := bat.append(X_185,"revenue");
    X_163 := bat.new(nil:str);
    X_171 := bat.append(X_163,"clob");
    X_180 := bat.append(X_171,"clob");
    X_187 := bat.append(X_180,"int");
    X_196 := bat.append(X_187,"bigint");
    X_164 := bat.new(nil:int);
    X_173 := bat.append(X_164,0);
    X_181 := bat.append(X_173,0);
    X_189 := bat.append(X_181,32);
    X_198 := bat.append(X_189,64);
    X_166 := bat.new(nil:int);
    X_175 := bat.append(X_166,0);
    X_182 := bat.append(X_175,0);
    X_191 := bat.append(X_182,0);
    X_200 := bat.append(X_191,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_7,r1_16) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_13 := sql.projectdelta(C_1,X_4,X_7,r1_16,X_10);
    X_16:bat[:str] := sql.bind(X_0,"sys","customer","c_city",0);
    X_24:bat[:str] := sql.bind(X_0,"sys","customer","c_nation",0);
    C_14:bat[:oid] := sql.tid(X_0,"sys","customer");
    C_218 := algebra.subselect(X_24,C_14,A0,A0,true,false,false);
    (C_26,r1_35) := sql.bind(X_0,"sys","customer","c_nation",2);
    C_219 := algebra.subselect(r1_35,nil:bat[:oid],A0,A0,true,false,false);
    X_28:bat[:str] := sql.bind(X_0,"sys","customer","c_nation",1);
    C_221 := algebra.subselect(X_28,C_14,A0,A0,true,false,false);
    C_32 := sql.subdelta(C_218,C_14,C_26,C_219,C_221);
    C_222 := algebra.subselect(X_16,C_32,A1,A1,true,false,false);
    (C_18,r1_27) := sql.bind(X_0,"sys","customer","c_city",2);
    C_223 := algebra.subselect(r1_27,nil:bat[:oid],A1,A1,true,false,false);
    X_20:bat[:str] := sql.bind(X_0,"sys","customer","c_city",1);
    C_225 := algebra.subselect(X_20,C_32,A1,A1,true,false,false);
    C_36 := sql.subdelta(C_222,C_32,C_18,C_223,C_225);
    C_226 := algebra.subselect(X_16,C_32,A2,A2,true,false,false);
    C_227 := algebra.subselect(r1_27,nil:bat[:oid],A2,A2,true,false,false);
    C_229 := algebra.subselect(X_20,C_32,A2,A2,true,false,false);
    C_38 := sql.subdelta(C_226,C_32,C_18,C_227,C_229);
    X_39 := bat.mergecand(C_36,C_38);
    (X_41,r1_50) := algebra.subjoin(X_13,X_39,nil:BAT,nil:BAT,false,nil:lng);
    X_46:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_48,r1_57) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_50:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_52 := sql.projectdelta(C_1,X_46,X_48,r1_57,X_50);
    X_53 := algebra.projection(X_41,X_52);
    X_56:bat[:str] := sql.bind(X_0,"sys","supplier","s_city",0);
    X_64:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",0);
    C_54:bat[:oid] := sql.tid(X_0,"sys","supplier");
    C_230 := algebra.subselect(X_64,C_54,A5,A5,true,false,false);
    (C_66,r1_75) := sql.bind(X_0,"sys","supplier","s_nation",2);
    C_231 := algebra.subselect(r1_75,nil:bat[:oid],A5,A5,true,false,false);
    X_68:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",1);
    C_233 := algebra.subselect(X_68,C_54,A5,A5,true,false,false);
    C_72 := sql.subdelta(C_230,C_54,C_66,C_231,C_233);
    C_234 := algebra.subselect(X_56,C_72,A3,A3,true,false,false);
    (C_58,r1_67) := sql.bind(X_0,"sys","supplier","s_city",2);
    C_235 := algebra.subselect(r1_67,nil:bat[:oid],A3,A3,true,false,false);
    X_60:bat[:str] := sql.bind(X_0,"sys","supplier","s_city",1);
    C_237 := algebra.subselect(X_60,C_72,A3,A3,true,false,false);
    C_76 := sql.subdelta(C_234,C_72,C_58,C_235,C_237);
    C_238 := algebra.subselect(X_56,C_72,A4,A4,true,false,false);
    C_239 := algebra.subselect(r1_67,nil:bat[:oid],A4,A4,true,false,false);
    C_241 := algebra.subselect(X_60,C_72,A4,A4,true,false,false);
    C_78 := sql.subdelta(C_238,C_72,C_58,C_239,C_241);
    X_79 := bat.mergecand(C_76,C_78);
    (X_81,r1_90) := algebra.subjoin(X_53,X_79,nil:BAT,nil:BAT,false,nil:lng);
    X_86:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_88,r1_97) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_90:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_92 := sql.projectdelta(C_1,X_86,X_88,r1_97,X_90);
    X_94:bat[:oid] := algebra.projectionpath(X_81,X_41,X_92);
    X_97:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    C_95:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    C_242 := algebra.subselect(X_97,C_95,A6,A7,true,true,false);
    (C_99,r1_108) := sql.bind(X_0,"sys","dwdate","d_year",2);
    C_243 := algebra.subselect(r1_108,nil:bat[:oid],A6,A7,true,true,false);
    X_101:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",1);
    C_245 := algebra.subselect(X_101,C_95,A6,A7,true,true,false);
    C_106 := sql.subdelta(C_242,C_95,C_99,C_243,C_245);
    (X_111,r1_120) := algebra.subjoin(X_94,C_106,nil:BAT,nil:BAT,false,nil:lng);
    X_113:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    (C_115,r1_124) := sql.bind(X_0,"sys","lineorder","lo_revenue",2);
    X_117:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",1);
    X_119 := sql.projectdelta(C_1,X_113,C_115,r1_124,X_117);
    X_122:bat[:int] := algebra.projectionpath(X_111,X_81,X_41,X_119);
    X_123 := sql.projectdelta(X_79,X_56,C_58,r1_67,X_60);
    X_125:bat[:str] := algebra.projectionpath(X_111,r1_90,X_123);
    X_126 := sql.projectdelta(X_39,X_16,C_18,r1_27,X_20);
    X_129:bat[:str] := algebra.projectionpath(X_111,X_81,r1_50,X_126);
    X_130 := sql.projectdelta(C_106,X_97,C_99,r1_108,X_101);
    X_131 := algebra.projection(r1_120,X_130);
    (X_132,r1_141,r2_141) := group.subgroup(X_131);
    (X_135,r1_144,r2_144) := group.subgroup(X_129,X_132);
    (X_138,r1_147,r2_147) := group.subgroupdone(X_125,X_135);
    X_141:bat[:lng] := aggr.subsum(X_122,X_138,r1_147,true,true);
    X_144 := algebra.projection(r1_147,X_131);
    (X_145,r1_154,r2_154) := algebra.subsort(X_144,false,false);
    (X_150,r1_159,r2_159) := algebra.subsort(X_141,r1_154,r2_154,true,false);
    X_154:bat[:str] := algebra.projectionpath(r1_159,r1_147,X_129);
    X_156:bat[:str] := algebra.projectionpath(r1_159,r1_147,X_125);
    X_157 := algebra.projection(r1_159,X_144);
    X_158 := algebra.projection(r1_159,X_141);
    sql.resultSet(X_192,X_194,X_196,X_198,X_200,X_154,X_156,X_157,X_158);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

