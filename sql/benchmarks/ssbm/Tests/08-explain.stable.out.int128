stdout of test '08-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED STATES'
#		and s_nation = 'UNITED STATES'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 466 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int):void;
    X_175:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED STATES\\'\n\t\tand s_nation = \\'UNITED STATES\\'\n\t\tand d_year >= 1992 and d_year <= 1997\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe",103);
    X_133 := bat.new(nil:oid,nil:str);
    X_141 := bat.append(X_133,"sys.customer");
    X_150 := bat.append(X_141,"sys.supplier");
    X_157 := bat.append(X_150,"sys.dwdate");
    X_166 := bat.append(X_157,"sys.L1");
    X_136 := bat.new(nil:oid,nil:str);
    X_143 := bat.append(X_136,"c_city");
    X_152 := bat.append(X_143,"s_city");
    X_159 := bat.append(X_152,"d_year");
    X_168 := bat.append(X_159,"revenue");
    X_137 := bat.new(nil:oid,nil:str);
    X_145 := bat.append(X_137,"clob");
    X_154 := bat.append(X_145,"clob");
    X_161 := bat.append(X_154,"int");
    X_170 := bat.append(X_161,"hugeint");
    X_138 := bat.new(nil:oid,nil:int);
    X_147 := bat.append(X_138,0);
    X_155 := bat.append(X_147,0);
    X_163 := bat.append(X_155,32);
    X_172 := bat.append(X_163,128);
    X_140 := bat.new(nil:oid,nil:int);
    X_149 := bat.append(X_140,0);
    X_156 := bat.append(X_149,0);
    X_165 := bat.append(X_156,0);
    X_174 := bat.append(X_165,0);
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_16:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_18 := sql.projectdelta(X_7,X_10,X_13,r1_13,X_16);
    X_21:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_nation",0);
    X_19:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_205 := algebra.subselect(X_21,X_19,A0,A0,true,false,false);
    (X_23,r1_24) := sql.bind(X_6,"sys","customer","c_nation",2);
    X_206 := algebra.subselect(r1_24,nil:bat[:oid,:oid],A0,A0,true,false,false);
    X_25:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_nation",1);
    X_208 := algebra.subselect(X_25,X_19,A0,A0,true,false,false);
    X_26 := sql.subdelta(X_205,X_19,X_23,X_206,X_208);
    X_28 := X_26;
    (X_29,r1_33) := algebra.subjoin(X_18,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_33:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_35,r1_39) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_39:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_40 := sql.projectdelta(X_7,X_33,X_35,r1_39,X_39);
    X_41 := algebra.leftfetchjoin(X_29,X_40);
    X_44:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_nation",0);
    X_42:bat[:oid,:oid]  := sql.tid(X_6,"sys","supplier");
    X_209 := algebra.subselect(X_44,X_42,A1,A1,true,false,false);
    (X_47,r1_52) := sql.bind(X_6,"sys","supplier","s_nation",2);
    X_210 := algebra.subselect(r1_52,nil:bat[:oid,:oid],A1,A1,true,false,false);
    X_50:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_nation",1);
    X_212 := algebra.subselect(X_50,X_42,A1,A1,true,false,false);
    X_52 := sql.subdelta(X_209,X_42,X_47,X_210,X_212);
    X_54 := X_52;
    (X_55,r1_63) := algebra.subjoin(X_41,X_54,nil:BAT,nil:BAT,false,nil:lng);
    X_58:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_60,r1_68) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_62:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_63 := sql.projectdelta(X_7,X_58,X_60,r1_68,X_62);
    X_64:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_55,X_29,X_63);
    X_68:bat[:oid,:int]  := sql.bind(X_6,"sys","dwdate","d_year",0);
    X_65:bat[:oid,:oid]  := sql.tid(X_6,"sys","dwdate");
    X_213 := algebra.subselect(X_68,X_65,A2,A3,true,true,false);
    (X_70,r1_80) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_214 := algebra.subselect(r1_80,nil:bat[:oid,:oid],A2,A3,true,true,false);
    X_72:bat[:oid,:int]  := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_216 := algebra.subselect(X_72,X_65,A2,A3,true,true,false);
    X_73 := sql.subdelta(X_213,X_65,X_70,X_214,X_216);
    X_74 := X_73;
    (X_75,r1_89) := algebra.subjoin(X_64,X_74,nil:BAT,nil:BAT,false,nil:lng);
    X_79:bat[:oid,:int]  := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (X_83,r1_97) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_86:bat[:oid,:int]  := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_88 := sql.projectdelta(X_7,X_79,X_83,r1_97,X_86);
    X_89:bat[:oid,:int] := algebra.leftfetchjoinPath(X_75,X_55,X_29,X_88);
    X_90:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_city",0);
    (X_93,r1_110) := sql.bind(X_6,"sys","supplier","s_city",2);
    X_96:bat[:oid,:str]  := sql.bind(X_6,"sys","supplier","s_city",1);
    X_97 := sql.projectdelta(X_52,X_90,X_93,r1_110,X_96);
    X_98:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_75,r1_63,X_97);
    X_99:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_city",0);
    (X_102,r1_122) := sql.bind(X_6,"sys","customer","c_city",2);
    X_104:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_city",1);
    X_105 := sql.projectdelta(X_26,X_99,X_102,r1_122,X_104);
    X_106:bat[:oid,:str] := algebra.leftfetchjoinPath(X_75,X_55,r1_33,X_105);
    X_107 := sql.projectdelta(X_73,X_68,X_70,r1_80,X_72);
    X_108 := algebra.leftfetchjoin(r1_89,X_107);
    (X_109,r1_133,r2_133) := group.subgroup(X_108);
    (X_112,r1_136,r2_136) := group.subgroup(X_106,X_109);
    (X_115,r1_139,r2_139) := group.subgroupdone(X_98,X_112);
    X_118:bat[:oid,:hge]  := aggr.subsum(X_89,X_115,r1_139,true,true);
    X_120 := algebra.leftfetchjoin(r1_139,X_108);
    (X_121,r1_145,r2_145) := algebra.subsort(X_120,false,false);
    (X_125,r1_149,r2_149) := algebra.subsort(X_118,r1_145,r2_145,true,false);
    X_128:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_149,r1_139,X_106);
    X_129:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_149,r1_139,X_98);
    X_130 := algebra.leftfetchjoin(r1_149,X_120);
    X_131 := algebra.leftfetchjoin(r1_149,X_118);
    sql.resultSet(X_166,X_168,X_170,X_172,X_174,X_128,X_129,X_130,X_131);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

