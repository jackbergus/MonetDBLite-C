stdout of test '01-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:45 >  
# 23:10:45 >  "/usr/bin/python2" "01-explain.SQL.py" "01-explain"
# 23:10:45 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_extendedprice*lo_discount) as revenue
#	from lineorder, dwdate
#	where lo_orderdate = d_datekey
#		and d_year = 1993
#		and lo_discount between 1 and 3
#		and lo_quantity < 25;
% .explain # table_name
% mal # name
% clob # type
% 254 # length
function user.s4_1():void;
    X_78:void := querylog.define("explain\nselect sum(lo_extendedprice*lo_discount) as revenue\n from lineorder, dwdate\n where lo_orderdate = d_datekey\n and d_year = 1993\n and lo_discount between 1 and 3\n and lo_quantity < 25;","sequential_pipe",24);
    X_0 := sql.mvc();
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_quantity",0);
    X_15:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_discount",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    C_24 := algebra.subselect(X_15,C_1,1,3,true,true,false);
    C_28 := algebra.thetasubselect(X_4,C_24,25,"<");
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_32,r1_37) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_34:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_37 := sql.projectdelta(C_28,X_30,X_32,r1_37,X_34);
    X_40:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    C_38:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    C_48 := algebra.subselect(X_40,C_38,1993,1993,true,false,false);
    (X_50,r1_55) := algebra.subjoin(X_37,C_48,nil:BAT,nil:BAT,false,nil:lng);
    X_55:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_extendedprice",0);
    X_63:bat[:int] := algebra.projectionpath(X_50,C_28,X_55);
    X_64 := batcalc.lng(X_63);
    X_66:bat[:int] := algebra.projectionpath(X_50,C_28,X_15);
    X_67:bat[:lng] := batcalc.*(X_64,X_66);
    X_70:lng := aggr.sum(X_67);
    sql.resultSet("sys.L2","revenue","bigint",64,0,7,X_70);
end user.s4_1;
#inline               actions= 0 time=8 usec 
#remap                actions= 1 time=137 usec 
#costModel            actions= 1 time=53 usec 
#coercions            actions= 0 time=5 usec 
#evaluate             actions= 4 time=90 usec 
#emptycolumn          actions= 0 time=46 usec 
#pushselect           actions=11 time=106 usec 
#aliases              actions=10 time=72 usec 
#mergetable           actions= 0 time=78 usec 
#deadcode             actions= 5 time=72 usec 
#aliases              actions= 0 time=16 usec 
#constants            actions=10 time=70 usec 
#commonTerms          actions= 0 time=19 usec 
#projectionpath       actions= 0 time=10 usec 
#reorder              actions= 1 time=96 usec 
#deadcode             actions= 0 time=13 usec 
#reduce               actions=50 time=103 usec 
#matpack              actions= 0 time=7 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=6 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=60 usec 
#candidates           actions= 1 time=46 usec 
#garbageCollector     actions= 1 time=66 usec 
#total                actions= 1 time=1301 usec 

# 23:10:45 >  
# 23:10:45 >  "Done."
# 23:10:45 >  

