stdout of test '05-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		-- OK to add p_mfgr=’MFGR#2’
#		-- OK to add p_category=’MFGR#22’
#		and p_brand1 between 'MFGR#2221' and 'MFGR#2228'
#		and s_region = 'ASIA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 461 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str):void;
    X_111 := bat.new(nil:oid,nil:str);
    X_120 := bat.append(X_111,"sys.L1");
    X_130 := bat.append(X_120,"sys.dwdate");
    X_138 := bat.append(X_130,"sys.part");
    X_114 := bat.new(nil:oid,nil:str);
    X_122 := bat.append(X_114,"L1");
    X_132 := bat.append(X_122,"d_year");
    X_140 := bat.append(X_132,"p_brand1");
    X_115 := bat.new(nil:oid,nil:str);
    X_124 := bat.append(X_115,"hugeint");
    X_134 := bat.append(X_124,"int");
    X_142 := bat.append(X_134,"clob");
    X_116 := bat.new(nil:oid,nil:int);
    X_126 := bat.append(X_116,32);
    X_136 := bat.append(X_126,32);
    X_144 := bat.append(X_136,0);
    X_118 := bat.new(nil:oid,nil:int);
    X_128 := bat.append(X_118,0);
    X_137 := bat.append(X_128,0);
    X_145 := bat.append(X_137,0);
    X_5 := sql.mvc();
    X_6:bat[:oid,:oid]  := sql.tid(X_5,"sys","lineorder");
    X_9:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_12,r1_12) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_15:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_17 := sql.projectdelta(X_6,X_9,X_12,r1_12,X_15);
    X_20:bat[:oid,:str]  := sql.bind(X_5,"sys","part","p_brand1",0);
    X_18:bat[:oid,:oid]  := sql.tid(X_5,"sys","part");
    X_174 := algebra.subselect(X_20,X_18,A0,A1,true,true,false);
    (X_22,r1_23) := sql.bind(X_5,"sys","part","p_brand1",2);
    X_175 := algebra.subselect(r1_23,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_24:bat[:oid,:str]  := sql.bind(X_5,"sys","part","p_brand1",1);
    X_177 := algebra.subselect(X_24,X_18,A0,A1,true,true,false);
    X_25 := sql.subdelta(X_174,X_18,X_22,X_175,X_177);
    X_27 := X_25;
    (X_28,r1_33) := algebra.subjoin(X_17,X_27,nil:BAT,nil:BAT,true,nil:lng);
    X_32:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_34,r1_39) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_38:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_39 := sql.projectdelta(X_6,X_32,X_34,r1_39,X_38);
    X_40 := algebra.leftfetchjoin(X_28,X_39);
    X_43:bat[:oid,:str]  := sql.bind(X_5,"sys","supplier","s_region",0);
    X_41:bat[:oid,:oid]  := sql.tid(X_5,"sys","supplier");
    X_178 := algebra.subselect(X_43,X_41,A2,A2,true,true,false);
    (X_46,r1_52) := sql.bind(X_5,"sys","supplier","s_region",2);
    X_179 := algebra.subselect(r1_52,nil:bat[:oid,:oid],A2,A2,true,true,false);
    X_49:bat[:oid,:str]  := sql.bind(X_5,"sys","supplier","s_region",1);
    X_181 := algebra.subselect(X_49,X_41,A2,A2,true,true,false);
    X_51 := sql.subdelta(X_178,X_41,X_46,X_179,X_181);
    X_53 := X_51;
    (X_54,r1_63) := algebra.subjoin(X_40,X_53,nil:BAT,nil:BAT,true,nil:lng);
    X_182 := algebra.leftfetchjoin(X_54,X_28);
    X_56:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_58,r1_67) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_60:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_61 := sql.projectdelta(X_6,X_56,X_58,r1_67,X_60);
    X_62:bat[:oid,:oid]  := algebra.leftfetchjoin(X_182,X_61);
    X_63:bat[:oid,:oid]  := sql.tid(X_5,"sys","dwdate");
    (X_66,r1_77) := algebra.subjoin(X_62,X_63,nil:BAT,nil:BAT,true,nil:lng);
    X_183 := algebra.leftfetchjoin(X_66,X_54);
    X_70 := sql.projectdelta(X_25,X_20,X_22,r1_23,X_24);
    X_71:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_183,r1_33,X_70);
    X_72:bat[:oid,:int]  := sql.bind(X_5,"sys","dwdate","d_year",0);
    (X_75,r1_88) := sql.bind(X_5,"sys","dwdate","d_year",2);
    X_78:bat[:oid,:int]  := sql.bind(X_5,"sys","dwdate","d_year",1);
    X_80 := sql.projectdelta(X_63,X_72,X_75,r1_88,X_78);
    X_81 := algebra.leftfetchjoin(r1_77,X_80);
    (X_82,r1_96,r2_96) := group.subgroup(X_81);
    (X_85,r1_99,r2_99) := group.subgroupdone(X_71,X_82);
    X_88 := algebra.leftfetchjoin(r1_99,X_71);
    X_89 := algebra.leftfetchjoin(r1_99,X_81);
    X_97:bat[:oid,:int]  := sql.bind(X_5,"sys","lineorder","lo_revenue",0);
    (X_101,r1_115) := sql.bind(X_5,"sys","lineorder","lo_revenue",2);
    X_103:bat[:oid,:int]  := sql.bind(X_5,"sys","lineorder","lo_revenue",1);
    X_104 := sql.projectdelta(X_6,X_97,X_101,r1_115,X_103);
    X_105:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_183,X_28,X_104);
    X_106:bat[:oid,:hge]  := aggr.subsum(X_105,X_85,r1_99,true,true);
    (X_90,r1_104,r2_104) := algebra.subsort(X_89,false,false);
    (X_94,r1_108,r2_108) := algebra.subsort(X_88,r1_104,r2_104,false,false);
    X_108 := algebra.leftfetchjoin(r1_108,X_106);
    X_109 := algebra.leftfetchjoin(r1_108,X_89);
    X_110 := algebra.leftfetchjoin(r1_108,X_88);
    sql.resultSet(X_138,X_140,X_142,X_144,X_145,X_108,X_109,X_110);
end s2_1;
# querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n\tfrom lineorder, dwdate, part, supplier\n\twhere lo_orderdate = d_datekey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_suppkey = s_suppkey\n\t\t-- OK to add p_mfgr=’MFGR#2’\n\t\t-- OK to add p_category=’MFGR#22’\n\t\tand p_brand1 between \\'MFGR#2221\\' and \\'MFGR#2228\\'\n\t\tand s_region = \\'ASIA\\'\n\tgroup by d_year, p_brand1\n\torder by d_year, p_brand1;","sequential_pipe")

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

