stdout of test '05-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		-- OK to add p_mfgr=’MFGR#2’
#		-- OK to add p_category=’MFGR#22’
#		and p_brand1 between 'MFGR#2221' and 'MFGR#2228'
#		and s_region = 'ASIA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 481 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str):void;
    X_146:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n\tfrom lineorder, dwdate, part, supplier\n\twhere lo_orderdate = d_datekey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_suppkey = s_suppkey\n\t\t-- OK to add p_mfgr=’MFGR#2’\n\t\t-- OK to add p_category=’MFGR#22’\n\t\tand p_brand1 between \\'MFGR#2221\\' and \\'MFGR#2228\\'\n\t\tand s_region = \\'ASIA\\'\n\tgroup by d_year, p_brand1\n\torder by d_year, p_brand1;","sequential_pipe",82);
    X_111 := bat.new(nil:oid,nil:str);
    X_119 := bat.append(X_111,"sys.L1");
    X_129 := bat.append(X_119,"sys.dwdate");
    X_138 := bat.append(X_129,"sys.part");
    X_114 := bat.new(nil:oid,nil:str);
    X_121 := bat.append(X_114,"L1");
    X_131 := bat.append(X_121,"d_year");
    X_140 := bat.append(X_131,"p_brand1");
    X_115 := bat.new(nil:oid,nil:str);
    X_123 := bat.append(X_115,"hugeint");
    X_133 := bat.append(X_123,"int");
    X_142 := bat.append(X_133,"clob");
    X_116 := bat.new(nil:oid,nil:int);
    X_125 := bat.append(X_116,128);
    X_135 := bat.append(X_125,32);
    X_144 := bat.append(X_135,0);
    X_118 := bat.new(nil:oid,nil:int);
    X_127 := bat.append(X_118,0);
    X_137 := bat.append(X_127,0);
    X_145 := bat.append(X_137,0);
    X_5 := sql.mvc();
    X_6:bat[:oid,:oid]  := sql.tid(X_5,"sys","lineorder");
    X_9:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_12,r1_12) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_15:bat[:oid,:oid]  := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_17 := sql.projectdelta(X_6,X_9,X_12,r1_12,X_15);
    X_20:bat[:oid,:str]  := sql.bind(X_5,"sys","part","p_brand1",0);
    X_18:bat[:oid,:oid]  := sql.tid(X_5,"sys","part");
    X_174 := algebra.subselect(X_20,X_18,A0,A1,true,true,false);
    (X_22,r1_23) := sql.bind(X_5,"sys","part","p_brand1",2);
    X_175 := algebra.subselect(r1_23,nil:bat[:oid,:oid],A0,A1,true,true,false);
    X_24:bat[:oid,:str]  := sql.bind(X_5,"sys","part","p_brand1",1);
    X_177 := algebra.subselect(X_24,X_18,A0,A1,true,true,false);
    X_25 := sql.subdelta(X_174,X_18,X_22,X_175,X_177);
    (X_27,r1_33) := algebra.subjoin(X_17,X_25,nil:BAT,nil:BAT,false,nil:lng);
    X_31:bat[:oid,:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_33,r1_39) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_37:bat[:oid,:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_38 := sql.projectdelta(X_6,X_31,X_33,r1_39,X_37);
    X_39 := algebra.leftfetchjoin(X_27,X_38);
    X_42:bat[:oid,:str] := sql.bind(X_5,"sys","supplier","s_region",0);
    X_40:bat[:oid,:oid] := sql.tid(X_5,"sys","supplier");
    X_178 := algebra.subselect(X_42,X_40,A2,A2,true,true,false);
    (X_45,r1_52) := sql.bind(X_5,"sys","supplier","s_region",2);
    X_179 := algebra.subselect(r1_52,nil:bat[:oid,:oid],A2,A2,true,true,false);
    X_48:bat[:oid,:str] := sql.bind(X_5,"sys","supplier","s_region",1);
    X_181 := algebra.subselect(X_48,X_40,A2,A2,true,true,false);
    X_50 := sql.subdelta(X_178,X_40,X_45,X_179,X_181);
    (X_52,r1_63) := algebra.subjoin(X_39,X_50,nil:BAT,nil:BAT,false,nil:lng);
    X_55:bat[:oid,:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_57,r1_68) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_59:bat[:oid,:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_60 := sql.projectdelta(X_6,X_55,X_57,r1_68,X_59);
    X_61:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_52,X_27,X_60);
    X_62:bat[:oid,:oid] := sql.tid(X_5,"sys","dwdate");
    (X_65,r1_78) := algebra.subjoin(X_61,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_69 := sql.projectdelta(X_25,X_20,X_22,r1_23,X_24);
    X_70:bat[:oid,:str] := algebra.leftfetchjoinPath(X_65,X_52,r1_33,X_69);
    X_71:bat[:oid,:int] := sql.bind(X_5,"sys","dwdate","d_year",0);
    (X_74,r1_89) := sql.bind(X_5,"sys","dwdate","d_year",2);
    X_77:bat[:oid,:int] := sql.bind(X_5,"sys","dwdate","d_year",1);
    X_79 := sql.projectdelta(X_62,X_71,X_74,r1_89,X_77);
    X_80 := algebra.leftfetchjoin(r1_78,X_79);
    (X_81,r1_97,r2_97) := group.subgroup(X_80);
    (X_84,r1_100,r2_100) := group.subgroupdone(X_70,X_81);
    X_87 := algebra.leftfetchjoin(r1_100,X_70);
    X_88 := algebra.leftfetchjoin(r1_100,X_80);
    X_96:bat[:oid,:int] := sql.bind(X_5,"sys","lineorder","lo_revenue",0);
    (X_100,r1_116) := sql.bind(X_5,"sys","lineorder","lo_revenue",2);
    X_102:bat[:oid,:int] := sql.bind(X_5,"sys","lineorder","lo_revenue",1);
    X_103 := sql.projectdelta(X_6,X_96,X_100,r1_116,X_102);
    X_104:bat[:oid,:int] := algebra.leftfetchjoinPath(X_65,X_52,X_27,X_103);
    X_105:bat[:oid,:hge] := aggr.subsum(X_104,X_84,r1_100,true,true);
    (X_89,r1_105,r2_105) := algebra.subsort(X_88,false,false);
    (X_93,r1_109,r2_109) := algebra.subsort(X_87,r1_105,r2_105,false,false);
    X_107 := algebra.leftfetchjoin(r1_109,X_105);
    X_108 := algebra.leftfetchjoin(r1_109,X_88);
    X_109 := algebra.leftfetchjoin(r1_109,X_87);
    sql.resultSet(X_138,X_140,X_142,X_144,X_145,X_107,X_108,X_109);
end user.s2_1;

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

