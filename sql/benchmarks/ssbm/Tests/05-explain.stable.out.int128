stdout of test '05-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		-- OK to add p_mfgr=’MFGR#2’
#		-- OK to add p_category=’MFGR#22’
#		and p_brand1 between 'MFGR#2221' and 'MFGR#2228'
#		and s_region = 'ASIA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 390 # length
function user.s2_1():void;
    X_111:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n from lineorder, dwdate, part, supplier\n where lo_orderdate = d_datekey\n and lo_partkey = p_partkey\n and lo_suppkey = s_suppkey\n \n \n and p_brand1 between \\'MFGR#2221\\' and \\'MFGR#2228\\'\n and s_region = \\'ASIA\\'\n group by d_year, p_brand1\n order by d_year, p_brand1;","sequential_pipe",65);
    X_79 := bat.new(nil:oid,nil:str);
    X_87 := bat.append(X_79,"sys.L1");
    X_96 := bat.append(X_87,"sys.dwdate");
    X_104 := bat.append(X_96,"sys.part");
    X_82 := bat.new(nil:oid,nil:str);
    X_89 := bat.append(X_82,"L1");
    X_98 := bat.append(X_89,"d_year");
    X_106 := bat.append(X_98,"p_brand1");
    X_83 := bat.new(nil:oid,nil:str);
    X_91 := bat.append(X_83,"hugeint");
    X_99 := bat.append(X_91,"int");
    X_107 := bat.append(X_99,"clob");
    X_84 := bat.new(nil:oid,nil:int);
    X_93 := bat.append(X_84,128);
    X_101 := bat.append(X_93,32);
    X_109 := bat.append(X_101,0);
    X_86 := bat.new(nil:oid,nil:int);
    X_95 := bat.append(X_86,0);
    X_103 := bat.append(X_95,0);
    X_110 := bat.append(X_103,0);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.projectdelta(C_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:str] := sql.bind(X_4,"sys","part","p_brand1",0);
    C_17:bat[:oid] := sql.tid(X_4,"sys","part");
    C_21 := algebra.subselect(X_19,C_17,"MFGR#2221","MFGR#2228",true,true,false);
    (X_24,r1_34) := algebra.subjoin(X_16,C_21,nil:BAT,nil:BAT,false,nil:lng);
    X_28:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_30,r1_41) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_32:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_33 := sql.projectdelta(C_5,X_28,X_30,r1_41,X_32);
    X_34 := algebra.projection(X_24,X_33);
    X_37:bat[:str] := sql.bind(X_4,"sys","supplier","s_region",0);
    C_35:bat[:oid] := sql.tid(X_4,"sys","supplier");
    C_39 := algebra.subselect(X_37,C_35,"ASIA","ASIA",true,false,false);
    (X_40,r1_59) := algebra.subjoin(X_34,C_39,nil:BAT,nil:BAT,false,nil:lng);
    X_42:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_44,r1_63) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_46:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_47 := sql.projectdelta(C_5,X_42,X_44,r1_63,X_46);
    X_48:bat[:oid] := algebra.projectionpath(X_40,X_24,X_47);
    C_49:bat[:oid] := sql.tid(X_4,"sys","dwdate");
    (X_51,r1_72) := algebra.subjoin(X_48,C_49,nil:BAT,nil:BAT,false,nil:lng);
    X_53:bat[:str] := algebra.projectionpath(X_51,X_40,r1_34,C_21,X_19);
    X_54:bat[:int] := sql.bind(X_4,"sys","dwdate","d_year",0);
    X_56:bat[:int] := algebra.projectionpath(r1_72,C_49,X_54);
    (X_57,r1_90,r2_90) := group.subgroup(X_56);
    (X_60,r1_93,r2_93) := group.subgroupdone(X_53,X_57);
    X_63 := algebra.projection(r1_93,X_53);
    X_64 := algebra.projection(r1_93,X_56);
    X_71:bat[:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    X_73:bat[:int] := algebra.projectionpath(X_51,X_40,X_24,C_5,X_71);
    X_74:bat[:hge] := aggr.subsum(X_73,X_60,r1_93,true,true);
    (X_65,r1_98,r2_98) := algebra.subsort(X_64,false,false);
    (X_68,r1_101,r2_101) := algebra.subsort(X_63,r1_98,r2_98,false,false);
    X_75 := algebra.projection(r1_101,X_74);
    X_76 := algebra.projection(r1_101,X_64);
    X_77 := algebra.projection(r1_101,X_63);
    sql.resultSet(X_104,X_106,X_107,X_109,X_110,X_75,X_76,X_77);
end user.s2_1;

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

