stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 586 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:str):void;
    X_163:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_yearmonth = \\'Dec1997\\'\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe",121);
    X_125 := bat.new(nil:oid,nil:str);
    X_133 := bat.append(X_125,"sys.customer");
    X_140 := bat.append(X_133,"sys.supplier");
    X_146 := bat.append(X_140,"sys.dwdate");
    X_154 := bat.append(X_146,"sys.L1");
    X_128 := bat.new(nil:oid,nil:str);
    X_135 := bat.append(X_128,"c_city");
    X_142 := bat.append(X_135,"s_city");
    X_148 := bat.append(X_142,"d_year");
    X_156 := bat.append(X_148,"revenue");
    X_129 := bat.new(nil:oid,nil:str);
    X_136 := bat.append(X_129,"clob");
    X_143 := bat.append(X_136,"clob");
    X_149 := bat.append(X_143,"int");
    X_158 := bat.append(X_149,"hugeint");
    X_130 := bat.new(nil:oid,nil:int);
    X_138 := bat.append(X_130,0);
    X_144 := bat.append(X_138,0);
    X_151 := bat.append(X_144,32);
    X_160 := bat.append(X_151,128);
    X_132 := bat.new(nil:oid,nil:int);
    X_139 := bat.append(X_132,0);
    X_145 := bat.append(X_139,0);
    X_153 := bat.append(X_145,0);
    X_162 := bat.append(X_153,0);
    X_9 := sql.mvc();
    C_10:bat[:oid,:oid] := sql.tid(X_9,"sys","lineorder");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_21 := sql.projectdelta(C_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",0);
    X_29:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",0);
    C_22:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    C_179 := algebra.subselect(X_29,C_22,A0,A0,true,false,false);
    (C_31,r1_35) := sql.bind(X_9,"sys","customer","c_nation",2);
    C_180 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A0,A0,true,false,false);
    X_33:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",1);
    C_182 := algebra.subselect(X_33,C_22,A0,A0,true,false,false);
    C_34 := sql.subdelta(C_179,C_22,C_31,C_180,C_182);
    C_183 := algebra.subselect(X_24,C_34,A1,A1,true,false,false);
    (C_26,r1_27) := sql.bind(X_9,"sys","customer","c_city",2);
    C_184 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A1,A1,true,false,false);
    X_28:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",1);
    C_185 := algebra.subselect(X_28,C_34,A1,A1,true,false,false);
    C_36 := sql.subdelta(C_183,C_34,C_26,C_184,C_185);
    C_186 := algebra.subselect(X_24,C_34,A2,A2,true,false,false);
    C_187 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A2,A2,true,false,false);
    C_188 := algebra.subselect(X_28,C_34,A2,A2,true,false,false);
    C_37 := sql.subdelta(C_186,C_34,C_26,C_187,C_188);
    X_38 := bat.mergecand(C_36,C_37);
    (X_39,r1_50) := algebra.subjoin(X_21,X_38,nil:BAT,nil:BAT,false,nil:lng);
    X_43:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_45,r1_57) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_47:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_48 := sql.projectdelta(C_10,X_43,X_45,r1_57,X_47);
    X_49 := algebra.leftfetchjoin(X_39,X_48);
    X_52:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_city",0);
    X_57:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_nation",0);
    C_50:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    C_189 := algebra.subselect(X_57,C_50,A5,A5,true,false,false);
    (C_59,r1_75) := sql.bind(X_9,"sys","supplier","s_nation",2);
    C_190 := algebra.subselect(r1_75,nil:bat[:oid,:oid],A5,A5,true,false,false);
    X_61:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_nation",1);
    C_191 := algebra.subselect(X_61,C_50,A5,A5,true,false,false);
    C_62 := sql.subdelta(C_189,C_50,C_59,C_190,C_191);
    C_192 := algebra.subselect(X_52,C_62,A3,A3,true,false,false);
    (C_54,r1_67) := sql.bind(X_9,"sys","supplier","s_city",2);
    C_193 := algebra.subselect(r1_67,nil:bat[:oid,:oid],A3,A3,true,false,false);
    X_56:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_city",1);
    C_194 := algebra.subselect(X_56,C_62,A3,A3,true,false,false);
    C_63 := sql.subdelta(C_192,C_62,C_54,C_193,C_194);
    C_195 := algebra.subselect(X_52,C_62,A4,A4,true,false,false);
    C_196 := algebra.subselect(r1_67,nil:bat[:oid,:oid],A4,A4,true,false,false);
    C_197 := algebra.subselect(X_56,C_62,A4,A4,true,false,false);
    C_64 := sql.subdelta(C_195,C_62,C_54,C_196,C_197);
    X_65 := bat.mergecand(C_63,C_64);
    (X_66,r1_90) := algebra.subjoin(X_49,X_65,nil:BAT,nil:BAT,false,nil:lng);
    X_68:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_70,r1_97) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_72:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_73 := sql.projectdelta(C_10,X_68,X_70,r1_97,X_72);
    X_74:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_66,X_39,X_73);
    X_77:bat[:oid,:str] := sql.bind(X_9,"sys","dwdate","d_yearmonth",0);
    C_75:bat[:oid,:oid] := sql.tid(X_9,"sys","dwdate");
    C_198 := algebra.subselect(X_77,C_75,A6,A6,true,false,false);
    (C_79,r1_108) := sql.bind(X_9,"sys","dwdate","d_yearmonth",2);
    C_199 := algebra.subselect(r1_108,nil:bat[:oid,:oid],A6,A6,true,false,false);
    X_81:bat[:oid,:str] := sql.bind(X_9,"sys","dwdate","d_yearmonth",1);
    C_200 := algebra.subselect(X_81,C_75,A6,A6,true,false,false);
    C_82 := sql.subdelta(C_198,C_75,C_79,C_199,C_200);
    (X_83,r1_117) := algebra.subjoin(X_74,C_82,nil:BAT,nil:BAT,false,nil:lng);
    X_85:bat[:oid,:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",0);
    (C_87,r1_122) := sql.bind(X_9,"sys","lineorder","lo_revenue",2);
    X_89:bat[:oid,:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",1);
    X_90 := sql.projectdelta(C_10,X_85,C_87,r1_122,X_89);
    X_91:bat[:oid,:int] := algebra.leftfetchjoinPath(X_83,X_66,X_39,X_90);
    X_92 := sql.projectdelta(X_65,X_52,C_54,r1_67,X_56);
    X_93:bat[:oid,:str] := algebra.leftfetchjoinPath(X_83,r1_90,X_92);
    X_94 := sql.projectdelta(X_38,X_24,C_26,r1_27,X_28);
    X_95:bat[:oid,:str] := algebra.leftfetchjoinPath(X_83,X_66,r1_50,X_94);
    X_96:bat[:oid,:int] := sql.bind(X_9,"sys","dwdate","d_year",0);
    (C_98,r1_139) := sql.bind(X_9,"sys","dwdate","d_year",2);
    X_100:bat[:oid,:int] := sql.bind(X_9,"sys","dwdate","d_year",1);
    X_101 := sql.projectdelta(C_82,X_96,C_98,r1_139,X_100);
    X_102 := algebra.leftfetchjoin(r1_117,X_101);
    (X_103,r1_146,r2_146) := group.subgroup(X_102);
    (X_106,r1_149,r2_149) := group.subgroup(X_95,X_103);
    (X_109,r1_152,r2_152) := group.subgroupdone(X_93,X_106);
    X_112:bat[:oid,:hge] := aggr.subsum(X_91,X_109,r1_152,true,true);
    X_113 := algebra.leftfetchjoin(r1_152,X_102);
    (X_114,r1_159,r2_159) := algebra.subsort(X_113,false,false);
    (X_117,r1_164,r2_164) := algebra.subsort(X_112,r1_159,r2_159,true,false);
    X_120:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_164,r1_152,X_95);
    X_121:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_164,r1_152,X_93);
    X_122 := algebra.leftfetchjoin(r1_164,X_113);
    X_123 := algebra.leftfetchjoin(r1_164,X_112);
    sql.resultSet(X_154,X_156,X_158,X_160,X_162,X_120,X_121,X_122,X_123);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

