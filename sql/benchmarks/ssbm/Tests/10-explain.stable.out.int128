stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 561 # length
function user.s4_1():void;
    X_159:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_nation = \\'UNITED KINGDOM\\'\n and (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n and (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n and s_nation = \\'UNITED KINGDOM\\'\n and d_yearmonth = \\'Dec1997\\'\n group by c_city, s_city, d_year\n order by d_year asc, revenue desc;","sequential_pipe",121);
    X_122 := bat.new(nil:str);
    X_129 := bat.append(X_122,"sys.customer");
    X_136 := bat.append(X_129,"sys.supplier");
    X_142 := bat.append(X_136,"sys.dwdate");
    X_150 := bat.append(X_142,"sys.L1");
    X_124 := bat.new(nil:str);
    X_131 := bat.append(X_124,"c_city");
    X_138 := bat.append(X_131,"s_city");
    X_144 := bat.append(X_138,"d_year");
    X_152 := bat.append(X_144,"revenue");
    X_125 := bat.new(nil:str);
    X_132 := bat.append(X_125,"clob");
    X_139 := bat.append(X_132,"clob");
    X_145 := bat.append(X_139,"int");
    X_154 := bat.append(X_145,"hugeint");
    X_126 := bat.new(nil:int);
    X_134 := bat.append(X_126,0);
    X_140 := bat.append(X_134,0);
    X_147 := bat.append(X_140,32);
    X_156 := bat.append(X_147,128);
    X_128 := bat.new(nil:int);
    X_135 := bat.append(X_128,0);
    X_141 := bat.append(X_135,0);
    X_149 := bat.append(X_141,0);
    X_158 := bat.append(X_149,0);
    X_5 := sql.mvc();
    C_6:bat[:oid] := sql.tid(X_5,"sys","lineorder");
    X_9:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_12,r1_15) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_15:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_17 := sql.projectdelta(C_6,X_9,X_12,r1_15,X_15);
    X_20:bat[:str] := sql.bind(X_5,"sys","customer","c_city",0);
    X_25:bat[:str] := sql.bind(X_5,"sys","customer","c_nation",0);
    C_18:bat[:oid] := sql.tid(X_5,"sys","customer");
    C_175 := algebra.subselect(X_25,C_18,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    (C_27,r1_34) := sql.bind(X_5,"sys","customer","c_nation",2);
    C_176 := algebra.subselect(r1_34,nil:bat[:oid],"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    X_29:bat[:str] := sql.bind(X_5,"sys","customer","c_nation",1);
    C_178 := algebra.subselect(X_29,C_18,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    C_30 := sql.subdelta(C_175,C_18,C_27,C_176,C_178);
    C_179 := algebra.subselect(X_20,C_30,"UNITED KI1","UNITED KI1",true,false,false);
    (C_22,r1_26) := sql.bind(X_5,"sys","customer","c_city",2);
    C_180 := algebra.subselect(r1_26,nil:bat[:oid],"UNITED KI1","UNITED KI1",true,false,false);
    X_24:bat[:str] := sql.bind(X_5,"sys","customer","c_city",1);
    C_181 := algebra.subselect(X_24,C_30,"UNITED KI1","UNITED KI1",true,false,false);
    C_33 := sql.subdelta(C_179,C_30,C_22,C_180,C_181);
    C_182 := algebra.subselect(X_20,C_30,"UNITED KI5","UNITED KI5",true,false,false);
    C_183 := algebra.subselect(r1_26,nil:bat[:oid],"UNITED KI5","UNITED KI5",true,false,false);
    C_184 := algebra.subselect(X_24,C_30,"UNITED KI5","UNITED KI5",true,false,false);
    C_34 := sql.subdelta(C_182,C_30,C_22,C_183,C_184);
    X_35 := bat.mergecand(C_33,C_34);
    (X_36,r1_49) := algebra.subjoin(X_17,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_40:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_42,r1_56) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_44:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_45 := sql.projectdelta(C_6,X_40,X_42,r1_56,X_44);
    X_46 := algebra.projection(X_36,X_45);
    X_49:bat[:str] := sql.bind(X_5,"sys","supplier","s_city",0);
    X_54:bat[:str] := sql.bind(X_5,"sys","supplier","s_nation",0);
    C_47:bat[:oid] := sql.tid(X_5,"sys","supplier");
    C_185 := algebra.subselect(X_54,C_47,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    (C_56,r1_74) := sql.bind(X_5,"sys","supplier","s_nation",2);
    C_186 := algebra.subselect(r1_74,nil:bat[:oid],"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    X_58:bat[:str] := sql.bind(X_5,"sys","supplier","s_nation",1);
    C_187 := algebra.subselect(X_58,C_47,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    C_59 := sql.subdelta(C_185,C_47,C_56,C_186,C_187);
    C_188 := algebra.subselect(X_49,C_59,"UNITED KI1","UNITED KI1",true,false,false);
    (C_51,r1_66) := sql.bind(X_5,"sys","supplier","s_city",2);
    C_189 := algebra.subselect(r1_66,nil:bat[:oid],"UNITED KI1","UNITED KI1",true,false,false);
    X_53:bat[:str] := sql.bind(X_5,"sys","supplier","s_city",1);
    C_190 := algebra.subselect(X_53,C_59,"UNITED KI1","UNITED KI1",true,false,false);
    C_60 := sql.subdelta(C_188,C_59,C_51,C_189,C_190);
    C_191 := algebra.subselect(X_49,C_59,"UNITED KI5","UNITED KI5",true,false,false);
    C_192 := algebra.subselect(r1_66,nil:bat[:oid],"UNITED KI5","UNITED KI5",true,false,false);
    C_193 := algebra.subselect(X_53,C_59,"UNITED KI5","UNITED KI5",true,false,false);
    C_61 := sql.subdelta(C_191,C_59,C_51,C_192,C_193);
    X_62 := bat.mergecand(C_60,C_61);
    (X_63,r1_89) := algebra.subjoin(X_46,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_67,r1_96) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_69:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_70 := sql.projectdelta(C_6,X_65,X_67,r1_96,X_69);
    X_71:bat[:oid] := algebra.projectionpath(X_63,X_36,X_70);
    X_74:bat[:str] := sql.bind(X_5,"sys","dwdate","d_yearmonth",0);
    C_72:bat[:oid] := sql.tid(X_5,"sys","dwdate");
    C_194 := algebra.subselect(X_74,C_72,"Dec1997","Dec1997",true,false,false);
    (C_76,r1_107) := sql.bind(X_5,"sys","dwdate","d_yearmonth",2);
    C_195 := algebra.subselect(r1_107,nil:bat[:oid],"Dec1997","Dec1997",true,false,false);
    X_78:bat[:str] := sql.bind(X_5,"sys","dwdate","d_yearmonth",1);
    C_196 := algebra.subselect(X_78,C_72,"Dec1997","Dec1997",true,false,false);
    C_79 := sql.subdelta(C_194,C_72,C_76,C_195,C_196);
    (X_80,r1_116) := algebra.subjoin(X_71,C_79,nil:BAT,nil:BAT,false,nil:lng);
    X_82:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_revenue",0);
    (C_84,r1_121) := sql.bind(X_5,"sys","lineorder","lo_revenue",2);
    X_86:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_revenue",1);
    X_87 := sql.projectdelta(C_6,X_82,C_84,r1_121,X_86);
    X_88:bat[:int] := algebra.projectionpath(X_80,X_63,X_36,X_87);
    X_89 := sql.projectdelta(X_62,X_49,C_51,r1_66,X_53);
    X_90:bat[:str] := algebra.projectionpath(X_80,r1_89,X_89);
    X_91 := sql.projectdelta(X_35,X_20,C_22,r1_26,X_24);
    X_92:bat[:str] := algebra.projectionpath(X_80,X_63,r1_49,X_91);
    X_93:bat[:int] := sql.bind(X_5,"sys","dwdate","d_year",0);
    (C_95,r1_138) := sql.bind(X_5,"sys","dwdate","d_year",2);
    X_97:bat[:int] := sql.bind(X_5,"sys","dwdate","d_year",1);
    X_98 := sql.projectdelta(C_79,X_93,C_95,r1_138,X_97);
    X_99 := algebra.projection(r1_116,X_98);
    (X_100,r1_145,r2_145) := group.subgroup(X_99);
    (X_103,r1_148,r2_148) := group.subgroup(X_92,X_100);
    (X_106,r1_151,r2_151) := group.subgroupdone(X_90,X_103);
    X_109:bat[:hge] := aggr.subsum(X_88,X_106,r1_151,true,true);
    X_110 := algebra.projection(r1_151,X_99);
    (X_111,r1_158,r2_158) := algebra.subsort(X_110,false,false);
    (X_114,r1_163,r2_163) := algebra.subsort(X_109,r1_158,r2_158,true,false);
    X_117:bat[:str] := algebra.projectionpath(r1_163,r1_151,X_92);
    X_118:bat[:str] := algebra.projectionpath(r1_163,r1_151,X_90);
    X_119 := algebra.projection(r1_163,X_110);
    X_120 := algebra.projection(r1_163,X_109);
    sql.resultSet(X_150,X_152,X_154,X_156,X_158,X_117,X_118,X_119,X_120);
end user.s4_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=57 usec 
#remap                actions= 0 time=4 usec 
#costModel            actions= 1 time=57 usec 
#coercions            actions= 0 time=4 usec 
#evaluate             actions= 7 time=83 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions=15 time=79 usec 
#aliases              actions=23 time=58 usec 
#mergetable           actions= 0 time=61 usec 
#deadcode             actions=17 time=48 usec 
#aliases              actions= 0 time=13 usec 
#constants            actions=26 time=64 usec 
#commonTerms          actions= 0 time=16 usec 
#projectionpath       actions=12 time=50 usec 
#reorder              actions= 1 time=79 usec 
#deadcode             actions=12 time=44 usec 
#reduce               actions=112 time=84 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=1 usec 
#profiler             actions= 1 time=38 usec 
#garbageCollector     actions= 1 time=47 usec 
#total                actions= 1 time=976 usec 

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

