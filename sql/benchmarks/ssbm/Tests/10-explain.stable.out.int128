stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 586 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:str):void;
    X_174:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_yearmonth = \\'Dec1997\\'\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe",108);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineorder");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",0);
    X_29:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","customer");
    X_205 := algebra.subselect(X_29,X_22,A0,A0,true,true,false);
    (X_31,r1_35) := sql.bind(X_9,"sys","customer","c_nation",2);
    X_206 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A0,A0,true,true,false);
    X_33:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",1);
    X_208 := algebra.subselect(X_33,X_22,A0,A0,true,true,false);
    X_34 := sql.subdelta(X_205,X_22,X_31,X_206,X_208);
    X_209 := algebra.subselect(X_24,X_34,A1,A1,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","customer","c_city",2);
    X_210 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_28:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",1);
    X_212 := algebra.subselect(X_28,X_34,A1,A1,true,true,false);
    X_37 := sql.subdelta(X_209,X_34,X_26,X_210,X_212);
    X_213 := algebra.subselect(X_24,X_34,A2,A2,true,true,false);
    X_214 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A2,A2,true,true,false);
    X_216 := algebra.subselect(X_28,X_34,A2,A2,true,true,false);
    X_38 := sql.subdelta(X_213,X_34,X_26,X_214,X_216);
    X_39 := bat.mergecand(X_37,X_38);
    X_40 := X_39;
    (X_41,r1_49) := algebra.subjoin(X_21,X_40,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_50,r1_58) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_53:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_55 := sql.projectdelta(X_10,X_45,X_50,r1_58,X_53);
    X_56 := algebra.leftfetchjoin(X_41,X_55);
    X_59:bat[:oid,:str]  := sql.bind(X_9,"sys","supplier","s_city",0);
    X_64:bat[:oid,:str]  := sql.bind(X_9,"sys","supplier","s_nation",0);
    X_57:bat[:oid,:oid]  := sql.tid(X_9,"sys","supplier");
    X_217 := algebra.subselect(X_64,X_57,A5,A5,true,true,false);
    (X_66,r1_78) := sql.bind(X_9,"sys","supplier","s_nation",2);
    X_218 := algebra.subselect(r1_78,nil:bat[:oid,:oid],A5,A5,true,true,false);
    X_68:bat[:oid,:str]  := sql.bind(X_9,"sys","supplier","s_nation",1);
    X_220 := algebra.subselect(X_68,X_57,A5,A5,true,true,false);
    X_69 := sql.subdelta(X_217,X_57,X_66,X_218,X_220);
    X_221 := algebra.subselect(X_59,X_69,A3,A3,true,true,false);
    (X_61,r1_70) := sql.bind(X_9,"sys","supplier","s_city",2);
    X_222 := algebra.subselect(r1_70,nil:bat[:oid,:oid],A3,A3,true,true,false);
    X_63:bat[:oid,:str]  := sql.bind(X_9,"sys","supplier","s_city",1);
    X_224 := algebra.subselect(X_63,X_69,A3,A3,true,true,false);
    X_72 := sql.subdelta(X_221,X_69,X_61,X_222,X_224);
    X_225 := algebra.subselect(X_59,X_69,A4,A4,true,true,false);
    X_226 := algebra.subselect(r1_70,nil:bat[:oid,:oid],A4,A4,true,true,false);
    X_228 := algebra.subselect(X_63,X_69,A4,A4,true,true,false);
    X_73 := sql.subdelta(X_225,X_69,X_61,X_226,X_228);
    X_74 := bat.mergecand(X_72,X_73);
    X_75 := X_74;
    (X_76,r1_92) := algebra.subjoin(X_56,X_75,nil:BAT,nil:BAT,false,nil:lng);
    X_233 := algebra.leftfetchjoin(X_76,X_41);
    X_80:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_85,r1_101) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_88:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_90 := sql.projectdelta(X_10,X_80,X_85,r1_101,X_88);
    X_91:bat[:oid,:oid] := algebra.leftfetchjoin(X_233,X_90);
    X_94:bat[:oid,:str]  := sql.bind(X_9,"sys","dwdate","d_yearmonth",0);
    X_92:bat[:oid,:oid]  := sql.tid(X_9,"sys","dwdate");
    X_229 := algebra.subselect(X_94,X_92,A6,A6,true,true,false);
    (X_96,r1_114) := sql.bind(X_9,"sys","dwdate","d_yearmonth",2);
    X_230 := algebra.subselect(r1_114,nil:bat[:oid,:oid],A6,A6,true,true,false);
    X_98:bat[:oid,:str]  := sql.bind(X_9,"sys","dwdate","d_yearmonth",1);
    X_232 := algebra.subselect(X_98,X_92,A6,A6,true,true,false);
    X_99 := sql.subdelta(X_229,X_92,X_96,X_230,X_232);
    X_102 := X_99;
    (X_103,r1_124) := algebra.subjoin(X_91,X_102,nil:BAT,nil:BAT,false,nil:lng);
    X_234 := algebra.leftfetchjoin(X_103,X_76);
    X_105:bat[:oid,:int]  := sql.bind(X_9,"sys","lineorder","lo_revenue",0);
    (X_107,r1_128) := sql.bind(X_9,"sys","lineorder","lo_revenue",2);
    X_111:bat[:oid,:int]  := sql.bind(X_9,"sys","lineorder","lo_revenue",1);
    X_112 := sql.projectdelta(X_10,X_105,X_107,r1_128,X_111);
    X_113:bat[:oid,:int] := algebra.leftfetchjoinPath(X_234,X_41,X_112);
    X_114 := sql.projectdelta(X_74,X_59,X_61,r1_70,X_63);
    X_115:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_103,r1_92,X_114);
    X_116 := sql.projectdelta(X_39,X_24,X_26,r1_27,X_28);
    X_117:bat[:oid,:str] := algebra.leftfetchjoinPath(X_234,r1_49,X_116);
    X_118:bat[:oid,:int]  := sql.bind(X_9,"sys","dwdate","d_year",0);
    (X_122,r1_149) := sql.bind(X_9,"sys","dwdate","d_year",2);
    X_125:bat[:oid,:int]  := sql.bind(X_9,"sys","dwdate","d_year",1);
    X_127 := sql.projectdelta(X_99,X_118,X_122,r1_149,X_125);
    X_128 := algebra.leftfetchjoin(r1_124,X_127);
    (X_129,r1_158,r2_158) := group.subgroup(X_128);
    (X_132,r1_161,r2_161) := group.subgroup(X_117,X_129);
    (X_135,r1_164,r2_164) := group.subgroupdone(X_115,X_132);
    X_138:bat[:oid,:hge]  := aggr.subsum(X_113,X_135,r1_164,true,true);
    X_140 := algebra.leftfetchjoin(r1_164,X_128);
    (X_141,r1_170,r2_170) := algebra.subsort(X_140,false,false);
    (X_145,r1_174,r2_174) := algebra.subsort(X_138,r1_170,r2_170,true,false);
    X_235 := algebra.leftfetchjoin(r1_174,r1_164);
    X_148:bat[:oid,:str] := algebra.leftfetchjoin(X_235,X_117);
    X_151 := algebra.leftfetchjoin(r1_174,X_138);
    X_150 := algebra.leftfetchjoin(r1_174,X_140);
    X_149:bat[:oid,:str] := algebra.leftfetchjoin(X_235,X_115);
    X_152 := sql.resultSet(4,1,X_148);
    sql.rsColumn(X_152,"sys.customer","c_city","clob",0,0,X_148);
    sql.rsColumn(X_152,"sys.supplier","s_city","clob",0,0,X_149);
    sql.rsColumn(X_152,"sys.dwdate","d_year","int",32,0,X_150);
    sql.rsColumn(X_152,"sys.L1","revenue","hugeint",128,0,X_151);
    X_172 := io.stdout();
    sql.exportResult(X_172,X_152);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

