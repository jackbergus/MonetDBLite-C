stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 560 # length
function user.s2_1():void;
    X_135:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_nation = \\'UNITED KINGDOM\\'\n and (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n and (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n and s_nation = \\'UNITED KINGDOM\\'\n and d_yearmonth = \\'Dec1997\\'\n group by c_city, s_city, d_year\n order by d_year asc, revenue desc;","sequential_pipe",82);
    X_97 := bat.new(nil:oid,nil:str);
    X_105 := bat.append(X_97,"sys.customer");
    X_112 := bat.append(X_105,"sys.supplier");
    X_118 := bat.append(X_112,"sys.dwdate");
    X_126 := bat.append(X_118,"sys.L1");
    X_100 := bat.new(nil:oid,nil:str);
    X_107 := bat.append(X_100,"c_city");
    X_114 := bat.append(X_107,"s_city");
    X_120 := bat.append(X_114,"d_year");
    X_128 := bat.append(X_120,"revenue");
    X_101 := bat.new(nil:oid,nil:str);
    X_108 := bat.append(X_101,"clob");
    X_115 := bat.append(X_108,"clob");
    X_121 := bat.append(X_115,"int");
    X_130 := bat.append(X_121,"hugeint");
    X_102 := bat.new(nil:oid,nil:int);
    X_110 := bat.append(X_102,0);
    X_116 := bat.append(X_110,0);
    X_123 := bat.append(X_116,32);
    X_132 := bat.append(X_123,128);
    X_104 := bat.new(nil:oid,nil:int);
    X_111 := bat.append(X_104,0);
    X_117 := bat.append(X_111,0);
    X_125 := bat.append(X_117,0);
    X_134 := bat.append(X_125,0);
    X_5 := sql.mvc();
    C_6:bat[:oid] := sql.tid(X_5,"sys","lineorder");
    X_9:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_12,r1_15) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_15:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_17 := sql.projectdelta(C_6,X_9,X_12,r1_15,X_15);
    X_20:bat[:str] := sql.bind(X_5,"sys","customer","c_city",0);
    X_22:bat[:str] := sql.bind(X_5,"sys","customer","c_nation",0);
    C_18:bat[:oid] := sql.tid(X_5,"sys","customer");
    C_24 := algebra.subselect(X_22,C_18,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    C_27 := algebra.subselect(X_20,C_24,"UNITED KI1","UNITED KI1",true,false,false);
    C_28 := algebra.subselect(X_20,C_24,"UNITED KI5","UNITED KI5",true,false,false);
    X_29 := bat.mergecand(C_27,C_28);
    (X_30,r1_49) := algebra.subjoin(X_17,X_29,nil:BAT,nil:BAT,false,nil:lng);
    X_34:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_36,r1_56) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_38:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_39 := sql.projectdelta(C_6,X_34,X_36,r1_56,X_38);
    X_40 := algebra.projection(X_30,X_39);
    X_43:bat[:str] := sql.bind(X_5,"sys","supplier","s_city",0);
    X_45:bat[:str] := sql.bind(X_5,"sys","supplier","s_nation",0);
    C_41:bat[:oid] := sql.tid(X_5,"sys","supplier");
    C_47 := algebra.subselect(X_45,C_41,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    C_48 := algebra.subselect(X_43,C_47,"UNITED KI1","UNITED KI1",true,false,false);
    C_49 := algebra.subselect(X_43,C_47,"UNITED KI5","UNITED KI5",true,false,false);
    X_50 := bat.mergecand(C_48,C_49);
    (X_51,r1_89) := algebra.subjoin(X_40,X_50,nil:BAT,nil:BAT,false,nil:lng);
    X_53:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_55,r1_96) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_57:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_58 := sql.projectdelta(C_6,X_53,X_55,r1_96,X_57);
    X_59:bat[:oid] := algebra.projectionpath(X_51,X_30,X_58);
    X_62:bat[:str] := sql.bind(X_5,"sys","dwdate","d_yearmonth",0);
    C_60:bat[:oid] := sql.tid(X_5,"sys","dwdate");
    C_64 := algebra.subselect(X_62,C_60,"Dec1997","Dec1997",true,false,false);
    (X_65,r1_116) := algebra.subjoin(X_59,C_64,nil:BAT,nil:BAT,false,nil:lng);
    X_67:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_revenue",0);
    X_69:bat[:int] := algebra.projectionpath(X_65,X_51,X_30,C_6,X_67);
    X_70:bat[:str] := algebra.projectionpath(X_65,r1_89,X_50,X_43);
    X_71:bat[:str] := algebra.projectionpath(X_65,X_51,r1_49,X_29,X_20);
    X_72:bat[:int] := sql.bind(X_5,"sys","dwdate","d_year",0);
    X_74:bat[:int] := algebra.projectionpath(r1_116,C_64,X_72);
    (X_75,r1_145,r2_145) := group.subgroup(X_74);
    (X_78,r1_148,r2_148) := group.subgroup(X_71,X_75);
    (X_81,r1_151,r2_151) := group.subgroupdone(X_70,X_78);
    X_84:bat[:hge] := aggr.subsum(X_69,X_81,r1_151,true,true);
    X_85 := algebra.projection(r1_151,X_74);
    (X_86,r1_158,r2_158) := algebra.subsort(X_85,false,false);
    (X_89,r1_163,r2_163) := algebra.subsort(X_84,r1_158,r2_158,true,false);
    X_92:bat[:str] := algebra.projectionpath(r1_163,r1_151,X_71);
    X_93:bat[:str] := algebra.projectionpath(r1_163,r1_151,X_70);
    X_94 := algebra.projection(r1_163,X_85);
    X_95 := algebra.projection(r1_163,X_84);
    sql.resultSet(X_126,X_128,X_130,X_132,X_134,X_92,X_93,X_94,X_95);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

