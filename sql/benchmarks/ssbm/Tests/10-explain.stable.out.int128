stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 586 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:str):void;
    X_182:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_yearmonth = \\'Dec1997\\'\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe",121);
    X_140 := bat.new(nil:oid,nil:str);
    X_148 := bat.append(X_140,"sys.customer");
    X_157 := bat.append(X_148,"sys.supplier");
    X_164 := bat.append(X_157,"sys.dwdate");
    X_173 := bat.append(X_164,"sys.L1");
    X_143 := bat.new(nil:oid,nil:str);
    X_150 := bat.append(X_143,"c_city");
    X_159 := bat.append(X_150,"s_city");
    X_166 := bat.append(X_159,"d_year");
    X_175 := bat.append(X_166,"revenue");
    X_144 := bat.new(nil:oid,nil:str);
    X_152 := bat.append(X_144,"clob");
    X_161 := bat.append(X_152,"clob");
    X_168 := bat.append(X_161,"int");
    X_177 := bat.append(X_168,"hugeint");
    X_145 := bat.new(nil:oid,nil:int);
    X_154 := bat.append(X_145,0);
    X_162 := bat.append(X_154,0);
    X_170 := bat.append(X_162,32);
    X_179 := bat.append(X_170,128);
    X_147 := bat.new(nil:oid,nil:int);
    X_156 := bat.append(X_147,0);
    X_163 := bat.append(X_156,0);
    X_172 := bat.append(X_163,0);
    X_181 := bat.append(X_172,0);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineorder");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",0);
    X_29:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","customer");
    X_223 := algebra.subselect(X_29,X_22,A0,A0,true,false,false);
    (X_31,r1_35) := sql.bind(X_9,"sys","customer","c_nation",2);
    X_224 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A0,A0,true,false,false);
    X_33:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",1);
    X_226 := algebra.subselect(X_33,X_22,A0,A0,true,false,false);
    X_34 := sql.subdelta(X_223,X_22,X_31,X_224,X_226);
    X_227 := algebra.subselect(X_24,X_34,A1,A1,true,false,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","customer","c_city",2);
    X_228 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A1,A1,true,false,false);
    X_28:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",1);
    X_230 := algebra.subselect(X_28,X_34,A1,A1,true,false,false);
    X_38 := sql.subdelta(X_227,X_34,X_26,X_228,X_230);
    X_231 := algebra.subselect(X_24,X_34,A2,A2,true,false,false);
    X_232 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A2,A2,true,false,false);
    X_234 := algebra.subselect(X_28,X_34,A2,A2,true,false,false);
    X_39 := sql.subdelta(X_231,X_34,X_26,X_232,X_234);
    X_40 := bat.mergecand(X_38,X_39);
    (X_41,r1_50) := algebra.subjoin(X_21,X_40,nil:BAT,nil:BAT,false,nil:lng);
    X_46:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_48,r1_57) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_50:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_51 := sql.projectdelta(X_10,X_46,X_48,r1_57,X_50);
    X_52 := algebra.leftfetchjoin(X_41,X_51);
    X_55:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_city",0);
    X_60:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_nation",0);
    X_53:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_235 := algebra.subselect(X_60,X_53,A5,A5,true,false,false);
    (X_62,r1_75) := sql.bind(X_9,"sys","supplier","s_nation",2);
    X_236 := algebra.subselect(r1_75,nil:bat[:oid,:oid],A5,A5,true,false,false);
    X_64:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_nation",1);
    X_238 := algebra.subselect(X_64,X_53,A5,A5,true,false,false);
    X_65 := sql.subdelta(X_235,X_53,X_62,X_236,X_238);
    X_239 := algebra.subselect(X_55,X_65,A3,A3,true,false,false);
    (X_57,r1_67) := sql.bind(X_9,"sys","supplier","s_city",2);
    X_240 := algebra.subselect(r1_67,nil:bat[:oid,:oid],A3,A3,true,false,false);
    X_59:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_city",1);
    X_242 := algebra.subselect(X_59,X_65,A3,A3,true,false,false);
    X_69 := sql.subdelta(X_239,X_65,X_57,X_240,X_242);
    X_243 := algebra.subselect(X_55,X_65,A4,A4,true,false,false);
    X_244 := algebra.subselect(r1_67,nil:bat[:oid,:oid],A4,A4,true,false,false);
    X_246 := algebra.subselect(X_59,X_65,A4,A4,true,false,false);
    X_70 := sql.subdelta(X_243,X_65,X_57,X_244,X_246);
    X_71 := bat.mergecand(X_69,X_70);
    (X_72,r1_90) := algebra.subjoin(X_52,X_71,nil:BAT,nil:BAT,false,nil:lng);
    X_77:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_79,r1_97) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_81:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_82 := sql.projectdelta(X_10,X_77,X_79,r1_97,X_81);
    X_83:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_72,X_41,X_82);
    X_86:bat[:oid,:str] := sql.bind(X_9,"sys","dwdate","d_yearmonth",0);
    X_84:bat[:oid,:oid] := sql.tid(X_9,"sys","dwdate");
    X_247 := algebra.subselect(X_86,X_84,A6,A6,true,false,false);
    (X_88,r1_108) := sql.bind(X_9,"sys","dwdate","d_yearmonth",2);
    X_248 := algebra.subselect(r1_108,nil:bat[:oid,:oid],A6,A6,true,false,false);
    X_90:bat[:oid,:str] := sql.bind(X_9,"sys","dwdate","d_yearmonth",1);
    X_250 := algebra.subselect(X_90,X_84,A6,A6,true,false,false);
    X_91 := sql.subdelta(X_247,X_84,X_88,X_248,X_250);
    (X_93,r1_117) := algebra.subjoin(X_83,X_91,nil:BAT,nil:BAT,false,nil:lng);
    X_96:bat[:oid,:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",0);
    (X_98,r1_122) := sql.bind(X_9,"sys","lineorder","lo_revenue",2);
    X_100:bat[:oid,:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",1);
    X_101 := sql.projectdelta(X_10,X_96,X_98,r1_122,X_100);
    X_102:bat[:oid,:int] := algebra.leftfetchjoinPath(X_93,X_72,X_41,X_101);
    X_103 := sql.projectdelta(X_71,X_55,X_57,r1_67,X_59);
    X_104:bat[:oid,:str] := algebra.leftfetchjoinPath(X_93,r1_90,X_103);
    X_105 := sql.projectdelta(X_40,X_24,X_26,r1_27,X_28);
    X_106:bat[:oid,:str] := algebra.leftfetchjoinPath(X_93,X_72,r1_50,X_105);
    X_107:bat[:oid,:int] := sql.bind(X_9,"sys","dwdate","d_year",0);
    (X_109,r1_139) := sql.bind(X_9,"sys","dwdate","d_year",2);
    X_111:bat[:oid,:int] := sql.bind(X_9,"sys","dwdate","d_year",1);
    X_112 := sql.projectdelta(X_91,X_107,X_109,r1_139,X_111);
    X_113 := algebra.leftfetchjoin(r1_117,X_112);
    (X_114,r1_146,r2_146) := group.subgroup(X_113);
    (X_117,r1_149,r2_149) := group.subgroup(X_106,X_114);
    (X_120,r1_152,r2_152) := group.subgroupdone(X_104,X_117);
    X_123:bat[:oid,:hge] := aggr.subsum(X_102,X_120,r1_152,true,true);
    X_126 := algebra.leftfetchjoin(r1_152,X_113);
    (X_127,r1_159,r2_159) := algebra.subsort(X_126,false,false);
    (X_132,r1_164,r2_164) := algebra.subsort(X_123,r1_159,r2_159,true,false);
    X_135:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_164,r1_152,X_106);
    X_136:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_164,r1_152,X_104);
    X_137 := algebra.leftfetchjoin(r1_164,X_126);
    X_138 := algebra.leftfetchjoin(r1_164,X_123);
    sql.resultSet(X_173,X_175,X_177,X_179,X_181,X_135,X_136,X_137,X_138);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

