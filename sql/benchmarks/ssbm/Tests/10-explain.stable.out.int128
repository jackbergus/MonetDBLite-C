stdout of test '10-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_yearmonth = 'Dec1997'
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 586 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:str):void;
    X_192:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_yearmonth = \\'Dec1997\\'\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe",121);
    X_150 := bat.new(nil:oid,nil:str);
    X_158 := bat.append(X_150,"sys.customer");
    X_167 := bat.append(X_158,"sys.supplier");
    X_174 := bat.append(X_167,"sys.dwdate");
    X_183 := bat.append(X_174,"sys.L1");
    X_153 := bat.new(nil:oid,nil:str);
    X_160 := bat.append(X_153,"c_city");
    X_169 := bat.append(X_160,"s_city");
    X_176 := bat.append(X_169,"d_year");
    X_185 := bat.append(X_176,"revenue");
    X_154 := bat.new(nil:oid,nil:str);
    X_162 := bat.append(X_154,"clob");
    X_171 := bat.append(X_162,"clob");
    X_178 := bat.append(X_171,"int");
    X_187 := bat.append(X_178,"hugeint");
    X_155 := bat.new(nil:oid,nil:int);
    X_164 := bat.append(X_155,0);
    X_172 := bat.append(X_164,0);
    X_180 := bat.append(X_172,32);
    X_189 := bat.append(X_180,128);
    X_157 := bat.new(nil:oid,nil:int);
    X_166 := bat.append(X_157,0);
    X_173 := bat.append(X_166,0);
    X_182 := bat.append(X_173,0);
    X_191 := bat.append(X_182,0);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineorder");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",0);
    X_29:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","customer");
    X_223 := algebra.subselect(X_29,X_22,A0,A0,true,true,false);
    (X_31,r1_35) := sql.bind(X_9,"sys","customer","c_nation",2);
    X_224 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A0,A0,true,true,false);
    X_33:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_nation",1);
    X_226 := algebra.subselect(X_33,X_22,A0,A0,true,true,false);
    X_34 := sql.subdelta(X_223,X_22,X_31,X_224,X_226);
    X_227 := algebra.subselect(X_24,X_34,A1,A1,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","customer","c_city",2);
    X_228 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_28:bat[:oid,:str]  := sql.bind(X_9,"sys","customer","c_city",1);
    X_230 := algebra.subselect(X_28,X_34,A1,A1,true,true,false);
    X_37 := sql.subdelta(X_227,X_34,X_26,X_228,X_230);
    X_231 := algebra.subselect(X_24,X_34,A2,A2,true,true,false);
    X_232 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A2,A2,true,true,false);
    X_234 := algebra.subselect(X_28,X_34,A2,A2,true,true,false);
    X_38 := sql.subdelta(X_231,X_34,X_26,X_232,X_234);
    X_39 := bat.mergecand(X_37,X_38);
    (X_40,r1_49) := algebra.subjoin(X_21,X_39,nil:BAT,nil:BAT,false,nil:lng);
    X_44:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_49,r1_58) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_52:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_54 := sql.projectdelta(X_10,X_44,X_49,r1_58,X_52);
    X_55 := algebra.leftfetchjoin(X_40,X_54);
    X_58:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_city",0);
    X_63:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_nation",0);
    X_56:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_235 := algebra.subselect(X_63,X_56,A5,A5,true,true,false);
    (X_65,r1_78) := sql.bind(X_9,"sys","supplier","s_nation",2);
    X_236 := algebra.subselect(r1_78,nil:bat[:oid,:oid],A5,A5,true,true,false);
    X_67:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_nation",1);
    X_238 := algebra.subselect(X_67,X_56,A5,A5,true,true,false);
    X_68 := sql.subdelta(X_235,X_56,X_65,X_236,X_238);
    X_239 := algebra.subselect(X_58,X_68,A3,A3,true,true,false);
    (X_60,r1_70) := sql.bind(X_9,"sys","supplier","s_city",2);
    X_240 := algebra.subselect(r1_70,nil:bat[:oid,:oid],A3,A3,true,true,false);
    X_62:bat[:oid,:str] := sql.bind(X_9,"sys","supplier","s_city",1);
    X_242 := algebra.subselect(X_62,X_68,A3,A3,true,true,false);
    X_71 := sql.subdelta(X_239,X_68,X_60,X_240,X_242);
    X_243 := algebra.subselect(X_58,X_68,A4,A4,true,true,false);
    X_244 := algebra.subselect(r1_70,nil:bat[:oid,:oid],A4,A4,true,true,false);
    X_246 := algebra.subselect(X_62,X_68,A4,A4,true,true,false);
    X_72 := sql.subdelta(X_243,X_68,X_60,X_244,X_246);
    X_73 := bat.mergecand(X_71,X_72);
    (X_74,r1_92) := algebra.subjoin(X_55,X_73,nil:BAT,nil:BAT,false,nil:lng);
    X_78:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_83,r1_101) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_86:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_88 := sql.projectdelta(X_10,X_78,X_83,r1_101,X_86);
    X_89:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_74,X_40,X_88);
    X_92:bat[:oid,:str] := sql.bind(X_9,"sys","dwdate","d_yearmonth",0);
    X_90:bat[:oid,:oid] := sql.tid(X_9,"sys","dwdate");
    X_247 := algebra.subselect(X_92,X_90,A6,A6,true,true,false);
    (X_94,r1_114) := sql.bind(X_9,"sys","dwdate","d_yearmonth",2);
    X_248 := algebra.subselect(r1_114,nil:bat[:oid,:oid],A6,A6,true,true,false);
    X_96:bat[:oid,:str] := sql.bind(X_9,"sys","dwdate","d_yearmonth",1);
    X_250 := algebra.subselect(X_96,X_90,A6,A6,true,true,false);
    X_97 := sql.subdelta(X_247,X_90,X_94,X_248,X_250);
    (X_100,r1_124) := algebra.subjoin(X_89,X_97,nil:BAT,nil:BAT,false,nil:lng);
    X_102:bat[:oid,:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",0);
    (X_104,r1_128) := sql.bind(X_9,"sys","lineorder","lo_revenue",2);
    X_108:bat[:oid,:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",1);
    X_109 := sql.projectdelta(X_10,X_102,X_104,r1_128,X_108);
    X_110:bat[:oid,:int] := algebra.leftfetchjoinPath(X_100,X_74,X_40,X_109);
    X_111 := sql.projectdelta(X_73,X_58,X_60,r1_70,X_62);
    X_112:bat[:oid,:str] := algebra.leftfetchjoinPath(X_100,r1_92,X_111);
    X_113 := sql.projectdelta(X_39,X_24,X_26,r1_27,X_28);
    X_114:bat[:oid,:str] := algebra.leftfetchjoinPath(X_100,X_74,r1_49,X_113);
    X_115:bat[:oid,:int] := sql.bind(X_9,"sys","dwdate","d_year",0);
    (X_119,r1_149) := sql.bind(X_9,"sys","dwdate","d_year",2);
    X_122:bat[:oid,:int] := sql.bind(X_9,"sys","dwdate","d_year",1);
    X_124 := sql.projectdelta(X_97,X_115,X_119,r1_149,X_122);
    X_125 := algebra.leftfetchjoin(r1_124,X_124);
    (X_126,r1_158,r2_158) := group.subgroup(X_125);
    (X_129,r1_161,r2_161) := group.subgroup(X_114,X_126);
    (X_132,r1_164,r2_164) := group.subgroupdone(X_112,X_129);
    X_135:bat[:oid,:hge] := aggr.subsum(X_110,X_132,r1_164,true,true);
    X_137 := algebra.leftfetchjoin(r1_164,X_125);
    (X_138,r1_170,r2_170) := algebra.subsort(X_137,false,false);
    (X_142,r1_174,r2_174) := algebra.subsort(X_135,r1_170,r2_170,true,false);
    X_145:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_174,r1_164,X_114);
    X_146:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_174,r1_164,X_112);
    X_147 := algebra.leftfetchjoin(r1_174,X_137);
    X_148 := algebra.leftfetchjoin(r1_174,X_135);
    sql.resultSet(X_183,X_185,X_187,X_189,X_191,X_145,X_146,X_147,X_148);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

