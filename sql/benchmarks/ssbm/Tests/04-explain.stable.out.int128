stdout of test '04-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "04-explain.SQL.py" "04-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		and p_category = 'MFGR#12' -- OK to add p_mfgr = ’MFGR#1’
#		and s_region = 'AMERICA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 362 # length
function user.s4_1():void;
    X_176:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n from lineorder, dwdate, part, supplier\n where lo_orderdate = d_datekey\n and lo_partkey = p_partkey\n and lo_suppkey = s_suppkey\n and p_category = \\'MFGR#12\\' \n and s_region = \\'AMERICA\\'\n group by d_year, p_brand1\n order by d_year, p_brand1;","sequential_pipe",66);
    X_142 := bat.new(nil:str);
    X_149 := bat.append(X_142,"sys.L3");
    X_159 := bat.append(X_149,"sys.dwdate");
    X_168 := bat.append(X_159,"sys.part");
    X_144 := bat.new(nil:str);
    X_151 := bat.append(X_144,"L2");
    X_161 := bat.append(X_151,"d_year");
    X_170 := bat.append(X_161,"p_brand1");
    X_145 := bat.new(nil:str);
    X_153 := bat.append(X_145,"hugeint");
    X_163 := bat.append(X_153,"int");
    X_172 := bat.append(X_163,"clob");
    X_146 := bat.new(nil:int);
    X_155 := bat.append(X_146,128);
    X_165 := bat.append(X_155,32);
    X_174 := bat.append(X_165,0);
    X_148 := bat.new(nil:int);
    X_157 := bat.append(X_148,0);
    X_167 := bat.append(X_157,0);
    X_175 := bat.append(X_167,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_31,X_32:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_34 := sql.projectdelta(C_1,X_28,X_31,X_32,X_30);
    X_37:bat[:str] := sql.bind(X_0,"sys","part","p_category",0);
    C_35:bat[:oid] := sql.tid(X_0,"sys","part");
    C_52 := algebra.subselect(X_37,C_35,"MFGR#12","MFGR#12",true,false,false);
    (X_59,X_60) := algebra.subjoin(X_34,C_52,nil:BAT,nil:BAT,false,nil:lng);
    X_21:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_24,X_25:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_27 := sql.projectdelta(C_1,X_21,X_24,X_25,X_23);
    X_66 := algebra.projection(X_59,X_27);
    X_73:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    C_71:bat[:oid] := sql.tid(X_0,"sys","supplier");
    C_81 := algebra.subselect(X_73,C_71,"AMERICA","AMERICA",true,false,false);
    (X_84,X_85) := algebra.subjoin(X_66,C_81,nil:BAT,nil:BAT,false,nil:lng);
    X_14:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_17,X_18:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_20 := sql.projectdelta(C_1,X_14,X_17,X_18,X_16);
    X_87:bat[:oid] := algebra.projectionpath(X_84,X_59,X_20);
    C_95:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    (X_104,X_105) := algebra.subjoin(X_87,C_95,nil:BAT,nil:BAT,false,nil:lng);
    X_44:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",0);
    X_115:bat[:str] := algebra.projectionpath(X_104,X_84,X_60,C_52,X_44);
    X_97:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_119:bat[:int] := algebra.projectionpath(X_105,C_95,X_97);
    (X_121,X_122,X_123) := group.subgroup(X_119);
    (X_124,X_125,X_126) := group.subgroupdone(X_115,X_121);
    X_127 := algebra.projection(X_125,X_119);
    X_128 := algebra.projection(X_125,X_115);
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_110:bat[:int] := algebra.projectionpath(X_104,X_84,X_59,C_1,X_4);
    X_129:bat[:hge] := aggr.subsum(X_110,X_124,X_125,true,true);
    (X_132,X_133,X_134) := algebra.subsort(X_127,false,false);
    (X_135,X_136,X_137) := algebra.subsort(X_128,X_133,X_134,false,false);
    X_138 := algebra.projection(X_136,X_129);
    X_139 := algebra.projection(X_136,X_127);
    X_140 := algebra.projection(X_136,X_128);
    sql.resultSet(X_168,X_170,X_172,X_174,X_175,X_138,X_139,X_140);
end user.s4_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=46 usec 
#remap                actions= 0 time=4 usec 
#costModel            actions= 1 time=41 usec 
#coercions            actions= 0 time=4 usec 
#evaluate             actions= 2 time=62 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions=10 time=64 usec 
#aliases              actions=12 time=46 usec 
#mergetable           actions= 0 time=50 usec 
#deadcode             actions=13 time=39 usec 
#aliases              actions= 0 time=11 usec 
#constants            actions=15 time=48 usec 
#commonTerms          actions= 0 time=12 usec 
#projectionpath       actions= 8 time=40 usec 
#reorder              actions= 1 time=70 usec 
#deadcode             actions= 8 time=36 usec 
#reduce               actions=76 time=65 usec 
#matpack              actions= 0 time=4 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=31 usec 
#garbageCollector     actions= 1 time=38 usec 
#total                actions= 1 time=791 usec 

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

