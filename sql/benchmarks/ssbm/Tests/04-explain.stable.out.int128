stdout of test '04-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "04-explain.SQL.py" "04-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		and p_category = 'MFGR#12' -- OK to add p_mfgr = ’MFGR#1’
#		and s_region = 'AMERICA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 392 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str):void;
    X_120 := bat.new(nil:oid,nil:str);
    X_128 := bat.append(X_120,"sys.L1");
    X_138 := bat.append(X_128,"sys.dwdate");
    X_146 := bat.append(X_138,"sys.part");
    X_123 := bat.new(nil:oid,nil:str);
    X_130 := bat.append(X_123,"L1");
    X_140 := bat.append(X_130,"d_year");
    X_148 := bat.append(X_140,"p_brand1");
    X_124 := bat.new(nil:oid,nil:str);
    X_132 := bat.append(X_124,"hugeint");
    X_142 := bat.append(X_132,"int");
    X_150 := bat.append(X_142,"clob");
    X_125 := bat.new(nil:oid,nil:int);
    X_134 := bat.append(X_125,32);
    X_144 := bat.append(X_134,32);
    X_152 := bat.append(X_144,0);
    X_127 := bat.new(nil:oid,nil:int);
    X_136 := bat.append(X_127,0);
    X_145 := bat.append(X_136,0);
    X_153 := bat.append(X_145,0);
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_category",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_183 := algebra.subselect(X_19,X_17,A0,A0,true,true,false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_category",2);
    X_184 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A0,A0,true,true,false);
    X_23:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_category",1);
    X_186 := algebra.subselect(X_23,X_17,A0,A0,true,true,false);
    X_24 := sql.subdelta(X_183,X_17,X_21,X_184,X_186);
    X_26 := X_24;
    (X_27,r1_31) := algebra.subjoin(X_16,X_26,nil:BAT,nil:BAT,true,nil:lng);
    X_31:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_33,r1_37) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_37:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_38 := sql.projectdelta(X_5,X_31,X_33,r1_37,X_37);
    X_39 := algebra.leftfetchjoin(X_27,X_38);
    X_42:bat[:oid,:str]  := sql.bind(X_4,"sys","supplier","s_region",0);
    X_40:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    X_187 := algebra.subselect(X_42,X_40,A1,A1,true,true,false);
    (X_45,r1_50) := sql.bind(X_4,"sys","supplier","s_region",2);
    X_188 := algebra.subselect(r1_50,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_48:bat[:oid,:str]  := sql.bind(X_4,"sys","supplier","s_region",1);
    X_190 := algebra.subselect(X_48,X_40,A1,A1,true,true,false);
    X_50 := sql.subdelta(X_187,X_40,X_45,X_188,X_190);
    X_52 := X_50;
    (X_53,r1_61) := algebra.subjoin(X_39,X_52,nil:BAT,nil:BAT,true,nil:lng);
    X_191 := algebra.leftfetchjoin(X_53,X_27);
    X_55:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_57,r1_65) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_59:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_60 := sql.projectdelta(X_5,X_55,X_57,r1_65,X_59);
    X_61:bat[:oid,:oid]  := algebra.leftfetchjoin(X_191,X_60);
    X_62:bat[:oid,:oid]  := sql.tid(X_4,"sys","dwdate");
    (X_65,r1_75) := algebra.subjoin(X_61,X_62,nil:BAT,nil:BAT,true,nil:lng);
    X_192 := algebra.leftfetchjoin(X_65,X_53);
    X_69:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_brand1",0);
    (X_73,r1_83) := sql.bind(X_4,"sys","part","p_brand1",2);
    X_76:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_brand1",1);
    X_78 := sql.projectdelta(X_24,X_69,X_73,r1_83,X_76);
    X_79:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_192,r1_31,X_78);
    X_80:bat[:oid,:int]  := sql.bind(X_4,"sys","dwdate","d_year",0);
    (X_82,r1_96) := sql.bind(X_4,"sys","dwdate","d_year",2);
    X_84:bat[:oid,:int]  := sql.bind(X_4,"sys","dwdate","d_year",1);
    X_85 := sql.projectdelta(X_62,X_80,X_82,r1_96,X_84);
    X_86 := algebra.leftfetchjoin(r1_75,X_85);
    (X_87,r1_102,r2_102) := group.subgroup(X_86);
    (X_90,r1_105,r2_105) := group.subgroupdone(X_79,X_87);
    X_93 := algebra.leftfetchjoin(r1_105,X_79);
    X_94 := algebra.leftfetchjoin(r1_105,X_86);
    X_102:bat[:oid,:int]  := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    (X_107,r1_122) := sql.bind(X_4,"sys","lineorder","lo_revenue",2);
    X_110:bat[:oid,:int]  := sql.bind(X_4,"sys","lineorder","lo_revenue",1);
    X_112 := sql.projectdelta(X_5,X_102,X_107,r1_122,X_110);
    X_113:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_192,X_27,X_112);
    X_114:bat[:oid,:hge]  := aggr.subsum(X_113,X_90,r1_105,true,true);
    (X_95,r1_110,r2_110) := algebra.subsort(X_94,false,false);
    (X_99,r1_114,r2_114) := algebra.subsort(X_93,r1_110,r2_110,false,false);
    X_116 := algebra.leftfetchjoin(r1_114,X_114);
    X_117 := algebra.leftfetchjoin(r1_114,X_94);
    X_118 := algebra.leftfetchjoin(r1_114,X_93);
    sql.resultSet(X_146,X_148,X_150,X_152,X_153,X_116,X_117,X_118);
end s2_1;
# querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n\tfrom lineorder, dwdate, part, supplier\n\twhere lo_orderdate = d_datekey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand p_category = \\'MFGR#12\\' -- OK to add p_mfgr = ’MFGR#1’\n\t\tand s_region = \\'AMERICA\\'\n\tgroup by d_year, p_brand1\n\torder by d_year, p_brand1;","sequential_pipe")

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

