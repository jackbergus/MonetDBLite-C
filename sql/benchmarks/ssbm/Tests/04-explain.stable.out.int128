stdout of test '04-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "04-explain.SQL.py" "04-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		and p_category = 'MFGR#12' -- OK to add p_mfgr = ’MFGR#1’
#		and s_region = 'AMERICA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 412 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str):void;
    X_144:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n\tfrom lineorder, dwdate, part, supplier\n\twhere lo_orderdate = d_datekey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand p_category = \\'MFGR#12\\' -- OK to add p_mfgr = ’MFGR#1’\n\t\tand s_region = \\'AMERICA\\'\n\tgroup by d_year, p_brand1\n\torder by d_year, p_brand1;","sequential_pipe",85);
    X_109 := bat.new(nil:oid,nil:str);
    X_117 := bat.append(X_109,"sys.L1");
    X_127 := bat.append(X_117,"sys.dwdate");
    X_136 := bat.append(X_127,"sys.part");
    X_112 := bat.new(nil:oid,nil:str);
    X_119 := bat.append(X_112,"L1");
    X_129 := bat.append(X_119,"d_year");
    X_138 := bat.append(X_129,"p_brand1");
    X_113 := bat.new(nil:oid,nil:str);
    X_121 := bat.append(X_113,"hugeint");
    X_131 := bat.append(X_121,"int");
    X_140 := bat.append(X_131,"clob");
    X_114 := bat.new(nil:oid,nil:int);
    X_123 := bat.append(X_114,128);
    X_133 := bat.append(X_123,32);
    X_142 := bat.append(X_133,0);
    X_116 := bat.new(nil:oid,nil:int);
    X_125 := bat.append(X_116,0);
    X_135 := bat.append(X_125,0);
    X_143 := bat.append(X_135,0);
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_category",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_181 := algebra.subselect(X_19,X_17,A0,A0,true,true,false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_category",2);
    X_182 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A0,A0,true,true,false);
    X_23:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_category",1);
    X_184 := algebra.subselect(X_23,X_17,A0,A0,true,true,false);
    X_24 := sql.subdelta(X_181,X_17,X_21,X_182,X_184);
    (X_26,r1_31) := algebra.subjoin(X_16,X_24,nil:BAT,nil:BAT,false,nil:lng);
    X_31:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_33,r1_38) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_35:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_36 := sql.projectdelta(X_5,X_31,X_33,r1_38,X_35);
    X_37 := algebra.leftfetchjoin(X_26,X_36);
    X_40:bat[:oid,:str] := sql.bind(X_4,"sys","supplier","s_region",0);
    X_38:bat[:oid,:oid] := sql.tid(X_4,"sys","supplier");
    X_185 := algebra.subselect(X_40,X_38,A1,A1,true,true,false);
    (X_42,r1_48) := sql.bind(X_4,"sys","supplier","s_region",2);
    X_186 := algebra.subselect(r1_48,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_44:bat[:oid,:str] := sql.bind(X_4,"sys","supplier","s_region",1);
    X_188 := algebra.subselect(X_44,X_38,A1,A1,true,true,false);
    X_45 := sql.subdelta(X_185,X_38,X_42,X_186,X_188);
    (X_48,r1_58) := algebra.subjoin(X_37,X_45,nil:BAT,nil:BAT,false,nil:lng);
    X_50:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_52,r1_62) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_54:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_55 := sql.projectdelta(X_5,X_50,X_52,r1_62,X_54);
    X_56:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_48,X_26,X_55);
    X_57:bat[:oid,:oid] := sql.tid(X_4,"sys","dwdate");
    (X_59,r1_71) := algebra.subjoin(X_56,X_57,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_brand1",0);
    (X_67,r1_79) := sql.bind(X_4,"sys","part","p_brand1",2);
    X_69:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_brand1",1);
    X_70 := sql.projectdelta(X_24,X_65,X_67,r1_79,X_69);
    X_71:bat[:oid,:str] := algebra.leftfetchjoinPath(X_59,X_48,r1_31,X_70);
    X_72:bat[:oid,:int] := sql.bind(X_4,"sys","dwdate","d_year",0);
    (X_74,r1_90) := sql.bind(X_4,"sys","dwdate","d_year",2);
    X_76:bat[:oid,:int] := sql.bind(X_4,"sys","dwdate","d_year",1);
    X_77 := sql.projectdelta(X_57,X_72,X_74,r1_90,X_76);
    X_78 := algebra.leftfetchjoin(r1_71,X_77);
    (X_79,r1_96,r2_96) := group.subgroup(X_78);
    (X_82,r1_99,r2_99) := group.subgroupdone(X_71,X_79);
    X_85 := algebra.leftfetchjoin(r1_99,X_71);
    X_86 := algebra.leftfetchjoin(r1_99,X_78);
    X_95:bat[:oid,:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    (X_97,r1_114) := sql.bind(X_4,"sys","lineorder","lo_revenue",2);
    X_99:bat[:oid,:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",1);
    X_100 := sql.projectdelta(X_5,X_95,X_97,r1_114,X_99);
    X_101:bat[:oid,:int] := algebra.leftfetchjoinPath(X_59,X_48,X_26,X_100);
    X_102:bat[:oid,:hge] := aggr.subsum(X_101,X_82,r1_99,true,true);
    (X_87,r1_104,r2_104) := algebra.subsort(X_86,false,false);
    (X_90,r1_107,r2_107) := algebra.subsort(X_85,r1_104,r2_104,false,false);
    X_105 := algebra.leftfetchjoin(r1_107,X_102);
    X_106 := algebra.leftfetchjoin(r1_107,X_86);
    X_107 := algebra.leftfetchjoin(r1_107,X_85);
    sql.resultSet(X_136,X_138,X_140,X_142,X_143,X_105,X_106,X_107);
end user.s2_1;

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

