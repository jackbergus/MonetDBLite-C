stdout of test '04-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "04-explain.SQL.py" "04-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		and p_category = 'MFGR#12' -- OK to add p_mfgr = ’MFGR#1’
#		and s_region = 'AMERICA'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 412 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str):void;
    X_151:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n\tfrom lineorder, dwdate, part, supplier\n\twhere lo_orderdate = d_datekey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand p_category = \\'MFGR#12\\' -- OK to add p_mfgr = ’MFGR#1’\n\t\tand s_region = \\'AMERICA\\'\n\tgroup by d_year, p_brand1\n\torder by d_year, p_brand1;","sequential_pipe",85);
    X_116 := bat.new(nil:oid,nil:str);
    X_124 := bat.append(X_116,"sys.L1");
    X_134 := bat.append(X_124,"sys.dwdate");
    X_143 := bat.append(X_134,"sys.part");
    X_119 := bat.new(nil:oid,nil:str);
    X_126 := bat.append(X_119,"L1");
    X_136 := bat.append(X_126,"d_year");
    X_145 := bat.append(X_136,"p_brand1");
    X_120 := bat.new(nil:oid,nil:str);
    X_128 := bat.append(X_120,"hugeint");
    X_138 := bat.append(X_128,"int");
    X_147 := bat.append(X_138,"clob");
    X_121 := bat.new(nil:oid,nil:int);
    X_130 := bat.append(X_121,128);
    X_140 := bat.append(X_130,32);
    X_149 := bat.append(X_140,0);
    X_123 := bat.new(nil:oid,nil:int);
    X_132 := bat.append(X_123,0);
    X_142 := bat.append(X_132,0);
    X_150 := bat.append(X_142,0);
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_category",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_180 := algebra.subselect(X_19,X_17,A0,A0,true,true,false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_category",2);
    X_181 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A0,A0,true,true,false);
    X_23:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_category",1);
    X_183 := algebra.subselect(X_23,X_17,A0,A0,true,true,false);
    X_24 := sql.subdelta(X_180,X_17,X_21,X_181,X_183);
    (X_26,r1_31) := algebra.subjoin(X_16,X_24,nil:BAT,nil:BAT,false,nil:lng);
    X_30:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_32,r1_37) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_36:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_37 := sql.projectdelta(X_5,X_30,X_32,r1_37,X_36);
    X_38 := algebra.leftfetchjoin(X_26,X_37);
    X_41:bat[:oid,:str] := sql.bind(X_4,"sys","supplier","s_region",0);
    X_39:bat[:oid,:oid] := sql.tid(X_4,"sys","supplier");
    X_184 := algebra.subselect(X_41,X_39,A1,A1,true,true,false);
    (X_44,r1_50) := sql.bind(X_4,"sys","supplier","s_region",2);
    X_185 := algebra.subselect(r1_50,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_47:bat[:oid,:str] := sql.bind(X_4,"sys","supplier","s_region",1);
    X_187 := algebra.subselect(X_47,X_39,A1,A1,true,true,false);
    X_49 := sql.subdelta(X_184,X_39,X_44,X_185,X_187);
    (X_51,r1_61) := algebra.subjoin(X_38,X_49,nil:BAT,nil:BAT,false,nil:lng);
    X_54:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_56,r1_66) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_59 := sql.projectdelta(X_5,X_54,X_56,r1_66,X_58);
    X_60:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_51,X_26,X_59);
    X_61:bat[:oid,:oid] := sql.tid(X_4,"sys","dwdate");
    (X_64,r1_76) := algebra.subjoin(X_60,X_61,nil:BAT,nil:BAT,false,nil:lng);
    X_68:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_brand1",0);
    (X_71,r1_83) := sql.bind(X_4,"sys","part","p_brand1",2);
    X_73:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_brand1",1);
    X_74 := sql.projectdelta(X_24,X_68,X_71,r1_83,X_73);
    X_75:bat[:oid,:str] := algebra.leftfetchjoinPath(X_64,X_51,r1_31,X_74);
    X_76:bat[:oid,:int] := sql.bind(X_4,"sys","dwdate","d_year",0);
    (X_78,r1_94) := sql.bind(X_4,"sys","dwdate","d_year",2);
    X_80:bat[:oid,:int] := sql.bind(X_4,"sys","dwdate","d_year",1);
    X_81 := sql.projectdelta(X_61,X_76,X_78,r1_94,X_80);
    X_82 := algebra.leftfetchjoin(r1_76,X_81);
    (X_83,r1_100,r2_100) := group.subgroup(X_82);
    (X_86,r1_103,r2_103) := group.subgroupdone(X_75,X_83);
    X_89 := algebra.leftfetchjoin(r1_103,X_75);
    X_90 := algebra.leftfetchjoin(r1_103,X_82);
    X_98:bat[:oid,:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    (X_103,r1_120) := sql.bind(X_4,"sys","lineorder","lo_revenue",2);
    X_106:bat[:oid,:int] := sql.bind(X_4,"sys","lineorder","lo_revenue",1);
    X_108 := sql.projectdelta(X_5,X_98,X_103,r1_120,X_106);
    X_109:bat[:oid,:int] := algebra.leftfetchjoinPath(X_64,X_51,X_26,X_108);
    X_110:bat[:oid,:hge] := aggr.subsum(X_109,X_86,r1_103,true,true);
    (X_91,r1_108,r2_108) := algebra.subsort(X_90,false,false);
    (X_95,r1_112,r2_112) := algebra.subsort(X_89,r1_108,r2_108,false,false);
    X_112 := algebra.leftfetchjoin(r1_112,X_110);
    X_113 := algebra.leftfetchjoin(r1_112,X_90);
    X_114 := algebra.leftfetchjoin(r1_112,X_89);
    sql.resultSet(X_143,X_145,X_147,X_149,X_150,X_112,X_113,X_114);
end user.s2_1;

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

