stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 579 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str,A5:str):void;
    X_227:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, s_nation, p_category\n\torder by d_year, s_nation, p_category;","sequential_pipe",129);
    X_185 := bat.new(nil:oid,nil:str);
    X_193 := bat.append(X_185,"sys.dwdate");
    X_203 := bat.append(X_193,"sys.supplier");
    X_211 := bat.append(X_203,"sys.part");
    X_218 := bat.append(X_211,"sys.L1");
    X_188 := bat.new(nil:oid,nil:str);
    X_195 := bat.append(X_188,"d_year");
    X_205 := bat.append(X_195,"s_nation");
    X_213 := bat.append(X_205,"p_category");
    X_220 := bat.append(X_213,"profit1");
    X_189 := bat.new(nil:oid,nil:str);
    X_197 := bat.append(X_189,"int");
    X_207 := bat.append(X_197,"clob");
    X_215 := bat.append(X_207,"clob");
    X_222 := bat.append(X_215,"hugeint");
    X_190 := bat.new(nil:oid,nil:int);
    X_199 := bat.append(X_190,32);
    X_209 := bat.append(X_199,0);
    X_216 := bat.append(X_209,0);
    X_224 := bat.append(X_216,128);
    X_192 := bat.new(nil:oid,nil:int);
    X_201 := bat.append(X_192,0);
    X_210 := bat.append(X_201,0);
    X_217 := bat.append(X_210,0);
    X_226 := bat.append(X_217,0);
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineorder");
    X_12:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_15,r1_15) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_18:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22:bat[:oid,:oid]  := sql.tid(X_8,"sys","dwdate");
    X_24:bat[:oid,:int]  := sql.bind(X_8,"sys","dwdate","d_year",0);
    (X_26,r1_26) := sql.bind(X_8,"sys","dwdate","d_year",2);
    X_28:bat[:oid,:int]  := sql.bind(X_8,"sys","dwdate","d_year",1);
    X_29 := sql.delta(X_24,X_26,r1_26,X_28);
    X_30 := algebra.leftfetchjoin(X_22,X_29);
    X_31 := algebra.subselect(X_30,A2,A2,true,true,false);
    X_33 := algebra.subselect(X_30,A3,A3,true,true,false);
    X_34 := bat.mergecand(X_31,X_33);
    X_35 := algebra.leftfetchjoin(X_34,X_22);
    (X_36,r1_38) := algebra.subjoin(X_21,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_40:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_44,r1_46) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_46:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_47 := sql.delta(X_40,X_44,r1_46,X_46);
    X_48:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_36,X_9,X_47);
    X_49:bat[:oid,:oid]  := sql.tid(X_8,"sys","part");
    X_51:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_mfgr",0);
    (X_54,r1_57) := sql.bind(X_8,"sys","part","p_mfgr",2);
    X_57:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_mfgr",1);
    X_59 := sql.delta(X_51,X_54,r1_57,X_57);
    X_60 := algebra.leftfetchjoin(X_49,X_59);
    X_61 := algebra.subselect(X_60,A4,A4,true,true,false);
    X_64 := algebra.subselect(X_60,A5,A5,true,true,false);
    X_65 := bat.mergecand(X_61,X_64);
    X_66 := algebra.leftfetchjoin(X_65,X_49);
    (X_67,r1_72) := algebra.subjoin(X_48,X_66,nil:BAT,nil:BAT,false,nil:lng);
    X_71:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_74,r1_79) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_76:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_77 := sql.delta(X_71,X_74,r1_79,X_76);
    X_78:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_67,X_36,X_9,X_77);
    X_79:bat[:oid,:oid] := sql.tid(X_8,"sys","supplier");
    X_81:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_region",0);
    (X_83,r1_90) := sql.bind(X_8,"sys","supplier","s_region",2);
    X_85:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_region",1);
    X_86 := sql.delta(X_81,X_83,r1_90,X_85);
    X_87 := algebra.leftfetchjoin(X_79,X_86);
    X_88 := algebra.subselect(X_87,A1,A1,true,true,false);
    X_89 := algebra.leftfetchjoin(X_88,X_79);
    (X_90,r1_98) := algebra.subjoin(X_78,X_89,nil:BAT,nil:BAT,false,nil:lng);
    X_93:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_95,r1_103) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_98:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_99 := sql.delta(X_93,X_95,r1_103,X_98);
    X_100:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_90,X_67,X_36,X_9,X_99);
    X_101:bat[:oid,:oid] := sql.tid(X_8,"sys","customer");
    X_104:bat[:oid,:str] := sql.bind(X_8,"sys","customer","c_region",0);
    (X_106,r1_117) := sql.bind(X_8,"sys","customer","c_region",2);
    X_108:bat[:oid,:str] := sql.bind(X_8,"sys","customer","c_region",1);
    X_109 := sql.delta(X_104,X_106,r1_117,X_108);
    X_110 := algebra.leftfetchjoin(X_101,X_109);
    X_111 := algebra.subselect(X_110,A0,A0,true,true,false);
    X_113 := algebra.leftfetchjoin(X_111,X_101);
    (X_114,r1_126) := algebra.subjoin(X_100,X_113,nil:BAT,nil:BAT,false,nil:lng);
    X_118:bat[:oid,:str] := sql.bind(X_8,"sys","part","p_category",0);
    (X_122,r1_134) := sql.bind(X_8,"sys","part","p_category",2);
    X_124:bat[:oid,:str] := sql.bind(X_8,"sys","part","p_category",1);
    X_125 := sql.delta(X_118,X_122,r1_134,X_124);
    X_126:bat[:oid,:str] := algebra.leftfetchjoinPath(X_114,X_90,r1_72,X_65,X_49,X_125);
    X_127:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_nation",0);
    (X_129,r1_145) := sql.bind(X_8,"sys","supplier","s_nation",2);
    X_133:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_nation",1);
    X_135 := sql.delta(X_127,X_129,r1_145,X_133);
    X_136:bat[:oid,:str] := algebra.leftfetchjoinPath(X_114,r1_98,X_88,X_79,X_135);
    X_137:bat[:oid,:int] := algebra.leftfetchjoinPath(X_114,X_90,X_67,r1_38,X_34,X_30);
    (X_138,r1_161,r2_161) := group.subgroup(X_137);
    (X_141,r1_164,r2_164) := group.subgroup(X_136,X_138);
    (X_144,r1_167,r2_167) := group.subgroupdone(X_126,X_141);
    X_147 := algebra.leftfetchjoin(r1_167,X_126);
    X_148 := algebra.leftfetchjoin(r1_167,X_136);
    X_149 := algebra.leftfetchjoin(r1_167,X_137);
    X_163:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_revenue",0);
    (X_166,r1_189) := sql.bind(X_8,"sys","lineorder","lo_revenue",2);
    X_168:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_revenue",1);
    X_169 := sql.delta(X_163,X_166,r1_189,X_168);
    X_170:bat[:oid,:int] := algebra.leftfetchjoinPath(X_114,X_90,X_67,X_36,X_9,X_169);
    X_171 := batcalc.lng(X_170);
    X_172:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_supplycost",0);
    (X_174,r1_201) := sql.bind(X_8,"sys","lineorder","lo_supplycost",2);
    X_176:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_supplycost",1);
    X_177 := sql.delta(X_172,X_174,r1_201,X_176);
    X_178:bat[:oid,:int] := algebra.leftfetchjoinPath(X_114,X_90,X_67,X_36,X_9,X_177);
    X_179 := batcalc.lng(X_178);
    X_180:bat[:oid,:lng] := batcalc.-(X_171,X_179);
    X_181:bat[:oid,:hge] := aggr.subsum(X_180,X_144,r1_167,true,true);
    (X_150,r1_173,r2_173) := algebra.subsort(X_149,false,false);
    (X_154,r1_177,r2_177) := algebra.subsort(X_148,r1_173,r2_173,false,false);
    (X_157,r1_180,r2_180) := algebra.subsort(X_147,r1_177,r2_177,false,false);
    X_160 := algebra.leftfetchjoin(r1_180,X_149);
    X_161 := algebra.leftfetchjoin(r1_180,X_148);
    X_162 := algebra.leftfetchjoin(r1_180,X_147);
    X_183 := algebra.leftfetchjoin(r1_180,X_181);
    sql.resultSet(X_218,X_220,X_222,X_224,X_226,X_160,X_161,X_162,X_183);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

