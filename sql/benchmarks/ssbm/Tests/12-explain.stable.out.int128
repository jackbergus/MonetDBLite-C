stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 554 # length
function user.s4_1():void;
    X_166:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (d_year = 1997 or d_year = 1998)\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, s_nation, p_category\n order by d_year, s_nation, p_category;","sequential_pipe",105);
    X_128 := bat.new(nil:oid,nil:str);
    X_136 := bat.append(X_128,"sys.dwdate");
    X_144 := bat.append(X_136,"sys.supplier");
    X_151 := bat.append(X_144,"sys.part");
    X_157 := bat.append(X_151,"sys.L1");
    X_131 := bat.new(nil:oid,nil:str);
    X_138 := bat.append(X_131,"d_year");
    X_146 := bat.append(X_138,"s_nation");
    X_153 := bat.append(X_146,"p_category");
    X_159 := bat.append(X_153,"profit1");
    X_132 := bat.new(nil:oid,nil:str);
    X_139 := bat.append(X_132,"int");
    X_147 := bat.append(X_139,"clob");
    X_154 := bat.append(X_147,"clob");
    X_161 := bat.append(X_154,"hugeint");
    X_133 := bat.new(nil:oid,nil:int);
    X_141 := bat.append(X_133,32);
    X_149 := bat.append(X_141,0);
    X_155 := bat.append(X_149,0);
    X_163 := bat.append(X_155,128);
    X_135 := bat.new(nil:oid,nil:int);
    X_143 := bat.append(X_135,0);
    X_150 := bat.append(X_143,0);
    X_156 := bat.append(X_150,0);
    X_165 := bat.append(X_156,0);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_13,r1_14) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_14,X_16);
    X_19 := algebra.projection(C_7,X_18);
    C_20:bat[:oid] := sql.tid(X_6,"sys","dwdate");
    X_22:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    X_24 := algebra.projection(C_20,X_22);
    C_25 := algebra.subselect(X_24,1997,1997,true,false,false);
    C_28 := algebra.subselect(X_24,1998,1998,true,false,false);
    X_29 := bat.mergecand(C_25,C_28);
    X_30 := algebra.projection(X_29,C_20);
    (X_31,r1_39) := algebra.subjoin(X_19,X_30,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_37,r1_46) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_39:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_40 := sql.delta(X_35,X_37,r1_46,X_39);
    X_41:bat[:oid] := algebra.projectionpath(X_31,C_7,X_40);
    C_42:bat[:oid] := sql.tid(X_6,"sys","part");
    X_44:bat[:str] := sql.bind(X_6,"sys","part","p_mfgr",0);
    X_46 := algebra.projection(C_42,X_44);
    C_47 := algebra.subselect(X_46,"MFGR#1","MFGR#1",true,false,false);
    C_48 := algebra.subselect(X_46,"MFGR#2","MFGR#2",true,false,false);
    X_49 := bat.mergecand(C_47,C_48);
    X_50 := algebra.projection(X_49,C_42);
    (X_51,r1_68) := algebra.subjoin(X_41,X_50,nil:BAT,nil:BAT,false,nil:lng);
    X_53:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_55,r1_73) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_57:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_58 := sql.delta(X_53,X_55,r1_73,X_57);
    X_59:bat[:oid] := algebra.projectionpath(X_51,X_31,C_7,X_58);
    C_60:bat[:oid] := sql.tid(X_6,"sys","supplier");
    X_62:bat[:str] := sql.bind(X_6,"sys","supplier","s_region",0);
    X_64 := algebra.projection(C_60,X_62);
    C_65 := algebra.subselect(X_64,"AMERICA","AMERICA",true,false,false);
    X_66 := algebra.projection(C_65,C_60);
    (X_67,r1_92) := algebra.subjoin(X_59,X_66,nil:BAT,nil:BAT,false,nil:lng);
    X_69:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_71,r1_99) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_73:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_74 := sql.delta(X_69,X_71,r1_99,X_73);
    X_75:bat[:oid] := algebra.projectionpath(X_67,X_51,X_31,C_7,X_74);
    C_76:bat[:oid] := sql.tid(X_6,"sys","customer");
    X_78:bat[:str] := sql.bind(X_6,"sys","customer","c_region",0);
    X_80 := algebra.projection(C_76,X_78);
    C_81 := algebra.subselect(X_80,"AMERICA","AMERICA",true,false,false);
    X_82 := algebra.projection(C_81,C_76);
    (X_83,r1_122) := algebra.subjoin(X_75,X_82,nil:BAT,nil:BAT,false,nil:lng);
    X_85:bat[:str] := sql.bind(X_6,"sys","part","p_category",0);
    X_87:bat[:str] := algebra.projectionpath(X_83,X_67,r1_68,X_49,C_42,X_85);
    X_88:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",0);
    X_90:bat[:str] := algebra.projectionpath(X_83,r1_92,C_65,C_60,X_88);
    X_91:bat[:int] := algebra.projectionpath(X_83,X_67,X_51,r1_39,X_29,X_24);
    (X_92,r1_150,r2_150) := group.subgroup(X_91);
    (X_95,r1_153,r2_153) := group.subgroup(X_90,X_92);
    (X_98,r1_156,r2_156) := group.subgroupdone(X_87,X_95);
    X_101 := algebra.projection(r1_156,X_87);
    X_102 := algebra.projection(r1_156,X_90);
    X_103 := algebra.projection(r1_156,X_91);
    X_116:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    X_118:bat[:int] := algebra.projectionpath(X_83,X_67,X_51,X_31,C_7,X_116);
    X_119 := batcalc.lng(X_118);
    X_120:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    X_122:bat[:int] := algebra.projectionpath(X_83,X_67,X_51,X_31,C_7,X_120);
    X_123 := batcalc.lng(X_122);
    X_124:bat[:lng] := batcalc.-(X_119,X_123);
    X_125:bat[:hge] := aggr.subsum(X_124,X_98,r1_156,true,true);
    (X_104,r1_162,r2_162) := algebra.subsort(X_103,false,false);
    (X_107,r1_167,r2_167) := algebra.subsort(X_102,r1_162,r2_162,false,false);
    (X_110,r1_170,r2_170) := algebra.subsort(X_101,r1_167,r2_167,false,false);
    X_113 := algebra.projection(r1_170,X_103);
    X_114 := algebra.projection(r1_170,X_102);
    X_115 := algebra.projection(r1_170,X_101);
    X_126 := algebra.projection(r1_170,X_125);
    sql.resultSet(X_157,X_159,X_161,X_163,X_165,X_113,X_114,X_115,X_126);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=149 usec 
#remap                actions= 1 time=283 usec 
#costModel            actions= 1 time=139 usec 
#coercions            actions= 0 time=11 usec 
#evaluate             actions= 6 time=217 usec 
#emptybind            actions= 0 time=12 usec 
#pushselect           actions= 0 time=6 usec 
#aliases              actions=14 time=163 usec 
#mergetable           actions= 0 time=178 usec 
#deadcode             actions=16 time=147 usec 
#aliases              actions= 0 time=34 usec 
#constants            actions=25 time=183 usec 
#commonTerms          actions= 0 time=40 usec 
#projectionpath       actions=25 time=178 usec 
#reorder              actions= 1 time=245 usec 
#deadcode             actions=25 time=133 usec 
#reduce               actions=108 time=226 usec 
#matpack              actions= 0 time=13 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=9 usec 
#generator            actions= 0 time=5 usec 
#profiler             actions= 1 time=116 usec 
#garbageCollector     actions= 1 time=160 usec 
#total                actions= 1 time=2829 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

