stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 554 # length
function user.s4_1():void;
    X_281:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (d_year = 1997 or d_year = 1998)\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, s_nation, p_category\n order by d_year, s_nation, p_category;","sequential_pipe",105);
    X_240 := bat.new(nil:str);
    X_247 := bat.append(X_240,"sys.dwdate");
    X_257 := bat.append(X_247,"sys.supplier");
    X_265 := bat.append(X_257,"sys.part");
    X_272 := bat.append(X_265,"sys.L6");
    X_242 := bat.new(nil:str);
    X_249 := bat.append(X_242,"d_year");
    X_259 := bat.append(X_249,"s_nation");
    X_267 := bat.append(X_259,"p_category");
    X_274 := bat.append(X_267,"profit1");
    X_243 := bat.new(nil:str);
    X_251 := bat.append(X_243,"int");
    X_261 := bat.append(X_251,"clob");
    X_269 := bat.append(X_261,"clob");
    X_276 := bat.append(X_269,"bigint");
    X_244 := bat.new(nil:int);
    X_253 := bat.append(X_244,32);
    X_263 := bat.append(X_253,0);
    X_270 := bat.append(X_263,0);
    X_278 := bat.append(X_270,64);
    X_246 := bat.new(nil:int);
    X_255 := bat.append(X_246,0);
    X_264 := bat.append(X_255,0);
    X_271 := bat.append(X_264,0);
    X_280 := bat.append(X_271,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_21:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_24,X_25:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_26 := sql.delta(X_21,X_24,X_25,X_23);
    X_27 := algebra.projection(C_1,X_26);
    C_49:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    X_51:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_57 := algebra.projection(C_49,X_51);
    C_59 := algebra.subselect(X_57,1997,1997,true,false,false);
    C_64 := algebra.subselect(X_57,1998,1998,true,false,false);
    X_65 := bat.mergecand(C_59,C_64);
    X_67 := algebra.projection(X_65,C_49);
    (X_68,X_69) := algebra.subjoin(X_27,X_67,nil:BAT,nil:BAT,false,nil:lng);
    X_42:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_45,X_46:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_44:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_47 := sql.delta(X_42,X_45,X_46,X_44);
    X_78:bat[:oid] := algebra.projectionpath(X_68,C_1,X_47);
    C_81:bat[:oid] := sql.tid(X_0,"sys","part");
    X_83:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",0);
    X_89 := algebra.projection(C_81,X_83);
    C_98 := algebra.subselect(X_89,"MFGR#1","MFGR#1",true,false,false);
    C_103 := algebra.subselect(X_89,"MFGR#2","MFGR#2",true,false,false);
    X_104 := bat.mergecand(C_98,C_103);
    X_107 := algebra.projection(X_104,C_81);
    (X_108,X_109) := algebra.subjoin(X_78,X_107,nil:BAT,nil:BAT,false,nil:lng);
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_31,X_32:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_33 := sql.delta(X_28,X_31,X_32,X_30);
    X_116:bat[:oid] := algebra.projectionpath(X_108,X_68,C_1,X_33);
    C_124:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_133:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    X_139 := algebra.projection(C_124,X_133);
    C_141 := algebra.subselect(X_139,"AMERICA","AMERICA",true,false,false);
    X_147 := algebra.projection(C_141,C_124);
    (X_148,X_149) := algebra.subjoin(X_116,X_147,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_38,X_39:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_40 := sql.delta(X_35,X_38,X_39,X_37);
    X_157:bat[:oid] := algebra.projectionpath(X_148,X_108,X_68,C_1,X_40);
    C_167:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_169:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    X_175 := algebra.projection(C_167,X_169);
    C_177 := algebra.subselect(X_175,"AMERICA","AMERICA",true,false,false);
    X_182 := algebra.projection(C_177,C_167);
    (X_183,X_184) := algebra.subjoin(X_157,X_182,nil:BAT,nil:BAT,false,nil:lng);
    X_90:bat[:str] := sql.bind(X_0,"sys","part","p_category",0);
    X_197:bat[:str] := algebra.projectionpath(X_183,X_148,X_109,X_104,C_81,X_90);
    X_126:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",0);
    X_199:bat[:str] := algebra.projectionpath(X_183,X_149,C_141,C_124,X_126);
    X_194:bat[:int] := algebra.projectionpath(X_183,X_148,X_108,X_69,X_65,X_57);
    (X_209,X_210,X_211) := group.subgroup(X_194);
    (X_212,X_213,X_214) := group.subgroup(X_199,X_209);
    (X_215,X_216,X_217) := group.subgroupdone(X_197,X_212);
    X_218 := algebra.projection(X_216,X_194);
    X_219 := algebra.projection(X_216,X_199);
    X_220 := algebra.projection(X_216,X_197);
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_188:bat[:int] := algebra.projectionpath(X_183,X_148,X_108,X_68,C_1,X_4);
    X_204 := batcalc.lng(X_188);
    X_14:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",0);
    X_189:bat[:int] := algebra.projectionpath(X_183,X_148,X_108,X_68,C_1,X_14);
    X_205 := batcalc.lng(X_189);
    X_206:bat[:lng] := batcalc.-(X_204,X_205);
    X_221:bat[:lng] := aggr.subsum(X_206,X_215,X_216,true,true);
    (X_224,X_225,X_226) := algebra.subsort(X_218,false,false);
    (X_229,X_230,X_231) := algebra.subsort(X_219,X_225,X_226,false,false);
    (X_232,X_233,X_234) := algebra.subsort(X_220,X_230,X_231,false,false);
    X_235 := algebra.projection(X_233,X_218);
    X_236 := algebra.projection(X_233,X_219);
    X_237 := algebra.projection(X_233,X_220);
    X_238 := algebra.projection(X_233,X_221);
    sql.resultSet(X_272,X_274,X_276,X_278,X_280,X_235,X_236,X_237,X_238);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=149 usec 
#remap                actions= 1 time=283 usec 
#costModel            actions= 1 time=139 usec 
#coercions            actions= 0 time=11 usec 
#evaluate             actions= 6 time=217 usec 
#emptybind            actions= 0 time=12 usec 
#pushselect           actions= 0 time=6 usec 
#aliases              actions=14 time=163 usec 
#mergetable           actions= 0 time=178 usec 
#deadcode             actions=16 time=147 usec 
#aliases              actions= 0 time=34 usec 
#constants            actions=25 time=183 usec 
#commonTerms          actions= 0 time=40 usec 
#projectionpath       actions=25 time=178 usec 
#reorder              actions= 1 time=245 usec 
#deadcode             actions=25 time=133 usec 
#reduce               actions=108 time=226 usec 
#matpack              actions= 0 time=13 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=9 usec 
#generator            actions= 0 time=5 usec 
#profiler             actions= 1 time=116 usec 
#garbageCollector     actions= 1 time=160 usec 
#total                actions= 1 time=2829 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

