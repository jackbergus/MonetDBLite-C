stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 554 # length
function user.s4_1():void;
    X_198:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (d_year = 1997 or d_year = 1998)\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, s_nation, p_category\n order by d_year, s_nation, p_category;","sequential_pipe",129);
    X_160 := bat.new(nil:oid,nil:str);
    X_168 := bat.append(X_160,"sys.dwdate");
    X_176 := bat.append(X_168,"sys.supplier");
    X_183 := bat.append(X_176,"sys.part");
    X_189 := bat.append(X_183,"sys.L1");
    X_163 := bat.new(nil:oid,nil:str);
    X_170 := bat.append(X_163,"d_year");
    X_178 := bat.append(X_170,"s_nation");
    X_185 := bat.append(X_178,"p_category");
    X_191 := bat.append(X_185,"profit1");
    X_164 := bat.new(nil:oid,nil:str);
    X_171 := bat.append(X_164,"int");
    X_179 := bat.append(X_171,"clob");
    X_186 := bat.append(X_179,"clob");
    X_193 := bat.append(X_186,"bigint");
    X_165 := bat.new(nil:oid,nil:int);
    X_173 := bat.append(X_165,32);
    X_181 := bat.append(X_173,0);
    X_187 := bat.append(X_181,0);
    X_195 := bat.append(X_187,64);
    X_167 := bat.new(nil:oid,nil:int);
    X_175 := bat.append(X_167,0);
    X_182 := bat.append(X_175,0);
    X_188 := bat.append(X_182,0);
    X_197 := bat.append(X_188,0);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_13,r1_14) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_14,X_16);
    X_19 := algebra.projection(C_7,X_18);
    C_20:bat[:oid] := sql.tid(X_6,"sys","dwdate");
    X_22:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    (C_24,r1_25) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_26:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_27 := sql.delta(X_22,C_24,r1_25,X_26);
    X_28 := algebra.projection(C_20,X_27);
    C_29 := algebra.subselect(X_28,1997,1997,true,false,false);
    C_32 := algebra.subselect(X_28,1998,1998,true,false,false);
    X_33 := bat.mergecand(C_29,C_32);
    X_34 := algebra.projection(X_33,C_20);
    (X_35,r1_39) := algebra.subjoin(X_19,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_39:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_41,r1_46) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_43:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_44 := sql.delta(X_39,X_41,r1_46,X_43);
    X_45:bat[:oid] := algebra.projectionpath(X_35,C_7,X_44);
    C_46:bat[:oid] := sql.tid(X_6,"sys","part");
    X_48:bat[:str] := sql.bind(X_6,"sys","part","p_mfgr",0);
    (C_50,r1_56) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_52:bat[:str] := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_53 := sql.delta(X_48,C_50,r1_56,X_52);
    X_54 := algebra.projection(C_46,X_53);
    C_55 := algebra.subselect(X_54,"MFGR#1","MFGR#1",true,false,false);
    C_56 := algebra.subselect(X_54,"MFGR#2","MFGR#2",true,false,false);
    X_57 := bat.mergecand(C_55,C_56);
    X_58 := algebra.projection(X_57,C_46);
    (X_59,r1_68) := algebra.subjoin(X_45,X_58,nil:BAT,nil:BAT,false,nil:lng);
    X_61:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_63,r1_73) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_65:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_66 := sql.delta(X_61,X_63,r1_73,X_65);
    X_67:bat[:oid] := algebra.projectionpath(X_59,X_35,C_7,X_66);
    C_68:bat[:oid] := sql.tid(X_6,"sys","supplier");
    X_70:bat[:str] := sql.bind(X_6,"sys","supplier","s_region",0);
    (C_72,r1_84) := sql.bind(X_6,"sys","supplier","s_region",2);
    X_74:bat[:str] := sql.bind(X_6,"sys","supplier","s_region",1);
    X_75 := sql.delta(X_70,C_72,r1_84,X_74);
    X_76 := algebra.projection(C_68,X_75);
    C_77 := algebra.subselect(X_76,"AMERICA","AMERICA",true,false,false);
    X_78 := algebra.projection(C_77,C_68);
    (X_79,r1_92) := algebra.subjoin(X_67,X_78,nil:BAT,nil:BAT,false,nil:lng);
    X_81:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_83,r1_99) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_85:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_86 := sql.delta(X_81,X_83,r1_99,X_85);
    X_87:bat[:oid] := algebra.projectionpath(X_79,X_59,X_35,C_7,X_86);
    C_88:bat[:oid] := sql.tid(X_6,"sys","customer");
    X_90:bat[:str] := sql.bind(X_6,"sys","customer","c_region",0);
    (C_92,r1_111) := sql.bind(X_6,"sys","customer","c_region",2);
    X_94:bat[:str] := sql.bind(X_6,"sys","customer","c_region",1);
    X_95 := sql.delta(X_90,C_92,r1_111,X_94);
    X_96 := algebra.projection(C_88,X_95);
    C_97 := algebra.subselect(X_96,"AMERICA","AMERICA",true,false,false);
    X_98 := algebra.projection(C_97,C_88);
    (X_99,r1_122) := algebra.subjoin(X_87,X_98,nil:BAT,nil:BAT,false,nil:lng);
    X_101:bat[:str] := sql.bind(X_6,"sys","part","p_category",0);
    (C_103,r1_126) := sql.bind(X_6,"sys","part","p_category",2);
    X_105:bat[:str] := sql.bind(X_6,"sys","part","p_category",1);
    X_106 := sql.delta(X_101,C_103,r1_126,X_105);
    X_107:bat[:str] := algebra.projectionpath(X_99,X_79,r1_68,X_57,C_46,X_106);
    X_108:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",0);
    (C_110,r1_137) := sql.bind(X_6,"sys","supplier","s_nation",2);
    X_112:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",1);
    X_113 := sql.delta(X_108,C_110,r1_137,X_112);
    X_114:bat[:str] := algebra.projectionpath(X_99,r1_92,C_77,C_68,X_113);
    X_115:bat[:int] := algebra.projectionpath(X_99,X_79,X_59,r1_39,X_33,X_28);
    (X_116,r1_150,r2_150) := group.subgroup(X_115);
    (X_119,r1_153,r2_153) := group.subgroup(X_114,X_116);
    (X_122,r1_156,r2_156) := group.subgroupdone(X_107,X_119);
    X_125 := algebra.projection(r1_156,X_107);
    X_126 := algebra.projection(r1_156,X_114);
    X_127 := algebra.projection(r1_156,X_115);
    X_140:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (C_142,r1_178) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_144:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_145 := sql.delta(X_140,C_142,r1_178,X_144);
    X_146:bat[:int] := algebra.projectionpath(X_99,X_79,X_59,X_35,C_7,X_145);
    X_147 := batcalc.lng(X_146);
    X_148:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (C_150,r1_190) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_152:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_153 := sql.delta(X_148,C_150,r1_190,X_152);
    X_154:bat[:int] := algebra.projectionpath(X_99,X_79,X_59,X_35,C_7,X_153);
    X_155 := batcalc.lng(X_154);
    X_156:bat[:lng] := batcalc.-(X_147,X_155);
    X_157:bat[:lng] := aggr.subsum(X_156,X_122,r1_156,true,true);
    (X_128,r1_162,r2_162) := algebra.subsort(X_127,false,false);
    (X_131,r1_167,r2_167) := algebra.subsort(X_126,r1_162,r2_162,false,false);
    (X_134,r1_170,r2_170) := algebra.subsort(X_125,r1_167,r2_167,false,false);
    X_137 := algebra.projection(r1_170,X_127);
    X_138 := algebra.projection(r1_170,X_126);
    X_139 := algebra.projection(r1_170,X_125);
    X_158 := algebra.projection(r1_170,X_157);
    sql.resultSet(X_189,X_191,X_193,X_195,X_197,X_137,X_138,X_139,X_158);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=149 usec 
#remap                actions= 1 time=283 usec 
#costModel            actions= 1 time=139 usec 
#coercions            actions= 0 time=11 usec 
#evaluate             actions= 6 time=217 usec 
#emptybind            actions= 0 time=12 usec 
#pushselect           actions= 0 time=6 usec 
#aliases              actions=14 time=163 usec 
#mergetable           actions= 0 time=178 usec 
#deadcode             actions=16 time=147 usec 
#aliases              actions= 0 time=34 usec 
#constants            actions=25 time=183 usec 
#commonTerms          actions= 0 time=40 usec 
#projectionpath       actions=25 time=178 usec 
#reorder              actions= 1 time=245 usec 
#deadcode             actions=25 time=133 usec 
#reduce               actions=108 time=226 usec 
#matpack              actions= 0 time=13 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=9 usec 
#generator            actions= 0 time=5 usec 
#profiler             actions= 1 time=116 usec 
#garbageCollector     actions= 1 time=160 usec 
#total                actions= 1 time=2829 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

