stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 576 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str,A5:str):void;
    X_215:void  := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, s_nation, p_category\n\torder by d_year, s_nation, p_category;","sequential_pipe");
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineorder");
    X_12:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_15,r1_15) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_18:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22:bat[:oid,:oid]  := sql.tid(X_8,"sys","dwdate");
    X_24:bat[:oid,:int]  := sql.bind(X_8,"sys","dwdate","d_year",0);
    (X_26,r1_26) := sql.bind(X_8,"sys","dwdate","d_year",2);
    X_28:bat[:oid,:int]  := sql.bind(X_8,"sys","dwdate","d_year",1);
    X_29 := sql.delta(X_24,X_26,r1_26,X_28);
    X_30 := algebra.leftfetchjoin(X_22,X_29);
    X_31 := algebra.subselect(X_30,A2,A2,true,true,false);
    X_33 := algebra.subselect(X_30,A3,A3,true,true,false);
    X_34 := bat.mergecand(X_31,X_33);
    X_35 := algebra.leftfetchjoin(X_34,X_22);
    (X_36,r1_38) := algebra.subjoin(X_21,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_251 := algebra.leftfetchjoin(X_36,X_9);
    X_40:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_44,r1_46) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_46:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_47 := sql.delta(X_40,X_44,r1_46,X_46);
    X_48:bat[:oid,:oid]  := algebra.leftfetchjoin(X_251,X_47);
    X_49:bat[:oid,:oid]  := sql.tid(X_8,"sys","part");
    X_51:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_mfgr",0);
    (X_54,r1_57) := sql.bind(X_8,"sys","part","p_mfgr",2);
    X_57:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_mfgr",1);
    X_59 := sql.delta(X_51,X_54,r1_57,X_57);
    X_60 := algebra.leftfetchjoin(X_49,X_59);
    X_61 := algebra.subselect(X_60,A4,A4,true,true,false);
    X_64 := algebra.subselect(X_60,A5,A5,true,true,false);
    X_65 := bat.mergecand(X_61,X_64);
    X_66 := algebra.leftfetchjoin(X_65,X_49);
    (X_67,r1_72) := algebra.subjoin(X_48,X_66,nil:BAT,nil:BAT,false,nil:lng);
    X_252 := algebra.leftfetchjoin(X_67,X_36);
    X_71:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_75,r1_80) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_77:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_78 := sql.delta(X_71,X_75,r1_80,X_77);
    X_79:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_252,X_9,X_78);
    X_80:bat[:oid,:oid]  := sql.tid(X_8,"sys","supplier");
    X_82:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_region",0);
    (X_85,r1_92) := sql.bind(X_8,"sys","supplier","s_region",2);
    X_88:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_region",1);
    X_90 := sql.delta(X_82,X_85,r1_92,X_88);
    X_91 := algebra.leftfetchjoin(X_80,X_90);
    X_92 := algebra.subselect(X_91,A1,A1,true,true,false);
    X_95 := algebra.leftfetchjoin(X_92,X_80);
    (X_96,r1_104) := algebra.subjoin(X_79,X_95,nil:BAT,nil:BAT,false,nil:lng);
    X_253 := algebra.leftfetchjoin(X_96,X_67);
    X_98:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_100,r1_108) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_104:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_105 := sql.delta(X_98,X_100,r1_108,X_104);
    X_106:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_253,X_36,X_9,X_105);
    X_107:bat[:oid,:oid]  := sql.tid(X_8,"sys","customer");
    X_109:bat[:oid,:str]  := sql.bind(X_8,"sys","customer","c_region",0);
    (X_111,r1_122) := sql.bind(X_8,"sys","customer","c_region",2);
    X_113:bat[:oid,:str]  := sql.bind(X_8,"sys","customer","c_region",1);
    X_114 := sql.delta(X_109,X_111,r1_122,X_113);
    X_115 := algebra.leftfetchjoin(X_107,X_114);
    X_116 := algebra.subselect(X_115,A0,A0,true,true,false);
    X_117 := algebra.leftfetchjoin(X_116,X_107);
    (X_118,r1_130) := algebra.subjoin(X_106,X_117,nil:BAT,nil:BAT,false,nil:lng);
    X_254 := algebra.leftfetchjoin(X_118,X_96);
    X_122:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_category",0);
    (X_126,r1_138) := sql.bind(X_8,"sys","part","p_category",2);
    X_129:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_category",1);
    X_131 := sql.delta(X_122,X_126,r1_138,X_129);
    X_132:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_254,r1_72,X_65,X_49,X_131);
    X_255 := algebra.leftfetchjoin(r1_104,X_92);
    X_133:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_nation",0);
    (X_137,r1_153) := sql.bind(X_8,"sys","supplier","s_nation",2);
    X_139:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_nation",1);
    X_140 := sql.delta(X_133,X_137,r1_153,X_139);
    X_141:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_118,X_255,X_80,X_140);
    X_142:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_254,X_67,r1_38,X_34,X_30);
    (X_143,r1_166,r2_166) := group.subgroup(X_142);
    (X_146,r1_169,r2_169) := group.subgroup(X_141,X_143);
    (X_149,r1_172,r2_172) := group.subgroupdone(X_132,X_146);
    X_152 := algebra.leftfetchjoin(r1_172,X_132);
    X_153 := algebra.leftfetchjoin(r1_172,X_141);
    X_154 := algebra.leftfetchjoin(r1_172,X_142);
    X_168:bat[:oid,:int]  := sql.bind(X_8,"sys","lineorder","lo_revenue",0);
    (X_173,r1_196) := sql.bind(X_8,"sys","lineorder","lo_revenue",2);
    X_176:bat[:oid,:int]  := sql.bind(X_8,"sys","lineorder","lo_revenue",1);
    X_178 := sql.delta(X_168,X_173,r1_196,X_176);
    X_179:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_254,X_67,X_36,X_9,X_178);
    X_180 := batcalc.lng(X_179);
    X_181:bat[:oid,:int]  := sql.bind(X_8,"sys","lineorder","lo_supplycost",0);
    (X_183,r1_210) := sql.bind(X_8,"sys","lineorder","lo_supplycost",2);
    X_185:bat[:oid,:int]  := sql.bind(X_8,"sys","lineorder","lo_supplycost",1);
    X_186 := sql.delta(X_181,X_183,r1_210,X_185);
    X_187:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_254,X_67,X_36,X_9,X_186);
    X_188 := batcalc.lng(X_187);
    X_189:bat[:oid,:lng]  := batcalc.-(X_180,X_188);
    X_190:bat[:oid,:hge]  := aggr.subsum(X_189,X_149,r1_172,true,true);
    (X_155,r1_178,r2_178) := algebra.subsort(X_154,false,false);
    (X_159,r1_182,r2_182) := algebra.subsort(X_153,r1_178,r2_178,false,false);
    (X_162,r1_185,r2_185) := algebra.subsort(X_152,r1_182,r2_182,false,false);
    X_165 := algebra.leftfetchjoin(r1_185,X_154);
    X_192 := algebra.leftfetchjoin(r1_185,X_190);
    X_167 := algebra.leftfetchjoin(r1_185,X_152);
    X_166 := algebra.leftfetchjoin(r1_185,X_153);
    X_193 := sql.resultSet(4,1,X_165);
    sql.rsColumn(X_193,"sys.dwdate","d_year","int",32,0,X_165);
    sql.rsColumn(X_193,"sys.supplier","s_nation","clob",0,0,X_166);
    sql.rsColumn(X_193,"sys.part","p_category","clob",0,0,X_167);
    sql.rsColumn(X_193,"sys.L1","profit1","hugeint",64,0,X_192);
    X_213 := io.stdout();
    sql.exportResult(X_213,X_193);
end s2_1;
# querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, s_nation, p_category\n\torder by d_year, s_nation, p_category;","sequential_pipe")

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

