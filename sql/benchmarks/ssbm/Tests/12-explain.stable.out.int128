stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 579 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:str,A5:str):void;
    X_217:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n\tfrom dwdate, customer, supplier, part, lineorder\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_region = \\'AMERICA\\'\n\t\tand s_region = \\'AMERICA\\'\n\t\tand (d_year = 1997 or d_year = 1998)\n\t\tand (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n\tgroup by d_year, s_nation, p_category\n\torder by d_year, s_nation, p_category;","sequential_pipe",129);
    X_175 := bat.new(nil:oid,nil:str);
    X_183 := bat.append(X_175,"sys.dwdate");
    X_193 := bat.append(X_183,"sys.supplier");
    X_201 := bat.append(X_193,"sys.part");
    X_208 := bat.append(X_201,"sys.L1");
    X_178 := bat.new(nil:oid,nil:str);
    X_185 := bat.append(X_178,"d_year");
    X_195 := bat.append(X_185,"s_nation");
    X_203 := bat.append(X_195,"p_category");
    X_210 := bat.append(X_203,"profit1");
    X_179 := bat.new(nil:oid,nil:str);
    X_187 := bat.append(X_179,"int");
    X_197 := bat.append(X_187,"clob");
    X_205 := bat.append(X_197,"clob");
    X_212 := bat.append(X_205,"hugeint");
    X_180 := bat.new(nil:oid,nil:int);
    X_189 := bat.append(X_180,32);
    X_199 := bat.append(X_189,0);
    X_206 := bat.append(X_199,0);
    X_214 := bat.append(X_206,128);
    X_182 := bat.new(nil:oid,nil:int);
    X_191 := bat.append(X_182,0);
    X_200 := bat.append(X_191,0);
    X_207 := bat.append(X_200,0);
    X_216 := bat.append(X_207,0);
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineorder");
    X_12:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_15,r1_15) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_18:bat[:oid,:oid]  := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22:bat[:oid,:oid]  := sql.tid(X_8,"sys","dwdate");
    X_24:bat[:oid,:int]  := sql.bind(X_8,"sys","dwdate","d_year",0);
    (X_26,r1_26) := sql.bind(X_8,"sys","dwdate","d_year",2);
    X_28:bat[:oid,:int]  := sql.bind(X_8,"sys","dwdate","d_year",1);
    X_29 := sql.delta(X_24,X_26,r1_26,X_28);
    X_30 := algebra.leftfetchjoin(X_22,X_29);
    X_31 := algebra.subselect(X_30,A2,A2,true,true,false);
    X_33 := algebra.subselect(X_30,A3,A3,true,true,false);
    X_34 := bat.mergecand(X_31,X_33);
    X_35 := algebra.leftfetchjoin(X_34,X_22);
    (X_36,r1_38) := algebra.subjoin(X_21,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_41:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_43,r1_45) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_45:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_46 := sql.delta(X_41,X_43,r1_45,X_45);
    X_47:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_36,X_9,X_46);
    X_48:bat[:oid,:oid] := sql.tid(X_8,"sys","part");
    X_50:bat[:oid,:str] := sql.bind(X_8,"sys","part","p_mfgr",0);
    (X_52,r1_55) := sql.bind(X_8,"sys","part","p_mfgr",2);
    X_54:bat[:oid,:str] := sql.bind(X_8,"sys","part","p_mfgr",1);
    X_55 := sql.delta(X_50,X_52,r1_55,X_54);
    X_56 := algebra.leftfetchjoin(X_48,X_55);
    X_57 := algebra.subselect(X_56,A4,A4,true,true,false);
    X_60 := algebra.subselect(X_56,A5,A5,true,true,false);
    X_62 := bat.mergecand(X_57,X_60);
    X_63 := algebra.leftfetchjoin(X_62,X_48);
    (X_64,r1_69) := algebra.subjoin(X_47,X_63,nil:BAT,nil:BAT,false,nil:lng);
    X_66:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_68,r1_73) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_70:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_71 := sql.delta(X_66,X_68,r1_73,X_70);
    X_72:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_64,X_36,X_9,X_71);
    X_73:bat[:oid,:oid] := sql.tid(X_8,"sys","supplier");
    X_75:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_region",0);
    (X_77,r1_84) := sql.bind(X_8,"sys","supplier","s_region",2);
    X_79:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_region",1);
    X_80 := sql.delta(X_75,X_77,r1_84,X_79);
    X_81 := algebra.leftfetchjoin(X_73,X_80);
    X_82 := algebra.subselect(X_81,A1,A1,true,true,false);
    X_83 := algebra.leftfetchjoin(X_82,X_73);
    (X_84,r1_92) := algebra.subjoin(X_72,X_83,nil:BAT,nil:BAT,false,nil:lng);
    X_89:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_91,r1_99) := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_93:bat[:oid,:oid] := sql.bind_idxbat(X_8,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_94 := sql.delta(X_89,X_91,r1_99,X_93);
    X_95:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_84,X_64,X_36,X_9,X_94);
    X_96:bat[:oid,:oid] := sql.tid(X_8,"sys","customer");
    X_98:bat[:oid,:str] := sql.bind(X_8,"sys","customer","c_region",0);
    (X_100,r1_111) := sql.bind(X_8,"sys","customer","c_region",2);
    X_102:bat[:oid,:str] := sql.bind(X_8,"sys","customer","c_region",1);
    X_103 := sql.delta(X_98,X_100,r1_111,X_102);
    X_104 := algebra.leftfetchjoin(X_96,X_103);
    X_105 := algebra.subselect(X_104,A0,A0,true,true,false);
    X_109 := algebra.leftfetchjoin(X_105,X_96);
    (X_110,r1_122) := algebra.subjoin(X_95,X_109,nil:BAT,nil:BAT,false,nil:lng);
    X_112:bat[:oid,:str] := sql.bind(X_8,"sys","part","p_category",0);
    (X_114,r1_126) := sql.bind(X_8,"sys","part","p_category",2);
    X_116:bat[:oid,:str] := sql.bind(X_8,"sys","part","p_category",1);
    X_117 := sql.delta(X_112,X_114,r1_126,X_116);
    X_118:bat[:oid,:str] := algebra.leftfetchjoinPath(X_110,X_84,r1_69,X_62,X_48,X_117);
    X_119:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_nation",0);
    (X_121,r1_137) := sql.bind(X_8,"sys","supplier","s_nation",2);
    X_123:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_nation",1);
    X_124 := sql.delta(X_119,X_121,r1_137,X_123);
    X_125:bat[:oid,:str] := algebra.leftfetchjoinPath(X_110,r1_92,X_82,X_73,X_124);
    X_126:bat[:oid,:int] := algebra.leftfetchjoinPath(X_110,X_84,X_64,r1_38,X_34,X_30);
    (X_127,r1_150,r2_150) := group.subgroup(X_126);
    (X_130,r1_153,r2_153) := group.subgroup(X_125,X_127);
    (X_133,r1_156,r2_156) := group.subgroupdone(X_118,X_130);
    X_136 := algebra.leftfetchjoin(r1_156,X_118);
    X_137 := algebra.leftfetchjoin(r1_156,X_125);
    X_138 := algebra.leftfetchjoin(r1_156,X_126);
    X_153:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_revenue",0);
    (X_155,r1_178) := sql.bind(X_8,"sys","lineorder","lo_revenue",2);
    X_157:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_revenue",1);
    X_158 := sql.delta(X_153,X_155,r1_178,X_157);
    X_159:bat[:oid,:int] := algebra.leftfetchjoinPath(X_110,X_84,X_64,X_36,X_9,X_158);
    X_160 := batcalc.lng(X_159);
    X_161:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_supplycost",0);
    (X_163,r1_190) := sql.bind(X_8,"sys","lineorder","lo_supplycost",2);
    X_165:bat[:oid,:int] := sql.bind(X_8,"sys","lineorder","lo_supplycost",1);
    X_166 := sql.delta(X_161,X_163,r1_190,X_165);
    X_167:bat[:oid,:int] := algebra.leftfetchjoinPath(X_110,X_84,X_64,X_36,X_9,X_166);
    X_168 := batcalc.lng(X_167);
    X_169:bat[:oid,:lng] := batcalc.-(X_160,X_168);
    X_170:bat[:oid,:hge] := aggr.subsum(X_169,X_133,r1_156,true,true);
    (X_139,r1_162,r2_162) := algebra.subsort(X_138,false,false);
    (X_144,r1_167,r2_167) := algebra.subsort(X_137,r1_162,r2_162,false,false);
    (X_147,r1_170,r2_170) := algebra.subsort(X_136,r1_167,r2_167,false,false);
    X_150 := algebra.leftfetchjoin(r1_170,X_138);
    X_151 := algebra.leftfetchjoin(r1_170,X_137);
    X_152 := algebra.leftfetchjoin(r1_170,X_136);
    X_173 := algebra.leftfetchjoin(r1_170,X_170);
    sql.resultSet(X_208,X_210,X_212,X_214,X_216,X_150,X_151,X_152,X_173);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

