stdout of test '02-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:45 >  
# 23:10:45 >  "/usr/bin/python2" "02-explain.SQL.py" "02-explain"
# 23:10:45 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_extendedprice*lo_discount) as revenue
#	from lineorder, dwdate
#	where lo_orderdate = d_datekey
#		and d_yearmonthnum = 199401
#		and lo_discount between 4 and 6
#		and lo_quantity between 26 and 35;
% .explain # table_name
% mal # name
% clob # type
% 288 # length
function user.s2_1{autoCommit=true}(A0:int,A1:int,A2:int,A3:int,A4:int):void;
    X_63:void := querylog.define("explain\nselect sum(lo_extendedprice*lo_discount) as revenue\n\tfrom lineorder, dwdate\n\twhere lo_orderdate = d_datekey\n\t\tand d_yearmonthnum = 199401\n\t\tand lo_discount between 4 and 6\n\t\tand lo_quantity between 26 and 35;","sequential_pipe",43);
    X_7 := sql.mvc();
    X_11:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_quantity",0);
    X_19:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_discount",0);
    C_8:bat[:oid,:oid] := sql.tid(X_7,"sys","lineorder");
    C_83 := algebra.subselect(X_19,C_8,A1,A2,true,true,false);
    (C_21,r1_25) := sql.bind(X_7,"sys","lineorder","lo_discount",2);
    C_84 := algebra.subselect(r1_25,nil:bat[:oid,:oid],A1,A2,true,true,false);
    X_23:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_discount",1);
    C_86 := algebra.subselect(X_23,C_8,A1,A2,true,true,false);
    C_24 := sql.subdelta(C_83,C_8,C_21,C_84,C_86);
    C_87 := algebra.subselect(X_11,C_24,A3,A4,true,true,false);
    (C_14,r1_14) := sql.bind(X_7,"sys","lineorder","lo_quantity",2);
    C_88 := algebra.subselect(r1_14,nil:bat[:oid,:oid],A3,A4,true,true,false);
    X_17:bat[:oid,:int]  := sql.bind(X_7,"sys","lineorder","lo_quantity",1);
    C_89 := algebra.subselect(X_17,C_24,A3,A4,true,true,false);
    C_26 := sql.subdelta(C_87,C_24,C_14,C_88,C_89);
    X_27:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_29,r1_37) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_31:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_32 := sql.projectdelta(C_26,X_27,X_29,r1_37,X_31);
    X_35:bat[:oid,:int] := sql.bind(X_7,"sys","dwdate","d_yearmonthnum",0);
    C_33:bat[:oid,:oid] := sql.tid(X_7,"sys","dwdate");
    C_90 := algebra.subselect(X_35,C_33,A0,A0,true,false,false);
    (C_37,r1_47) := sql.bind(X_7,"sys","dwdate","d_yearmonthnum",2);
    C_91 := algebra.subselect(r1_47,nil:bat[:oid,:oid],A0,A0,true,false,false);
    X_39:bat[:oid,:int] := sql.bind(X_7,"sys","dwdate","d_yearmonthnum",1);
    C_92 := algebra.subselect(X_39,C_33,A0,A0,true,false,false);
    C_40 := sql.subdelta(C_90,C_33,C_37,C_91,C_92);
    (X_41,r1_56) := algebra.subjoin(X_32,C_40,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_extendedprice",0);
    (C_47,r1_63) := sql.bind(X_7,"sys","lineorder","lo_extendedprice",2);
    X_49:bat[:oid,:int] := sql.bind(X_7,"sys","lineorder","lo_extendedprice",1);
    X_50 := sql.projectdelta(C_26,X_45,C_47,r1_63,X_49);
    X_51 := algebra.leftfetchjoin(X_41,X_50);
    X_52 := batcalc.lng(X_51);
    X_53 := sql.projectdelta(C_26,X_19,C_21,r1_25,X_23);
    X_54 := algebra.leftfetchjoin(X_41,X_53);
    X_55:bat[:oid,:lng] := batcalc.*(X_52,X_54);
    X_56:hge := aggr.sum(X_55);
    sql.resultSet("sys.L1","revenue","hugeint",128,0,7,X_56);
end user.s2_1;

# 23:10:45 >  
# 23:10:45 >  "Done."
# 23:10:45 >  

