stdout of test '02-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:45 >  
# 23:10:45 >  "/usr/bin/python2" "02-explain.SQL.py" "02-explain"
# 23:10:45 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_extendedprice*lo_discount) as revenue
#	from lineorder, dwdate
#	where lo_orderdate = d_datekey
#		and d_yearmonthnum = 199401
#		and lo_discount between 4 and 6
#		and lo_quantity between 26 and 35;
% .explain # table_name
% mal # name
% clob # type
% 277 # length
function user.s2_1():void;
    X_49:void := querylog.define("explain\nselect sum(lo_extendedprice*lo_discount) as revenue\n from lineorder, dwdate\n where lo_orderdate = d_datekey\n and d_yearmonthnum = 199401\n and lo_discount between 4 and 6\n and lo_quantity between 26 and 35;","sequential_pipe",24);
    X_6 := sql.mvc();
    X_10:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_quantity",0);
    X_15:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_discount",0);
    C_7:bat[:oid] := sql.tid(X_6,"sys","lineorder");
    C_17 := algebra.subselect(X_15,C_7,4,6,true,true,false);
    C_20 := algebra.subselect(X_10,C_17,26,35,true,true,false);
    X_21:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_23,r1_38) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_25:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_26 := sql.projectdelta(C_20,X_21,X_23,r1_38,X_25);
    X_29:bat[:int] := sql.bind(X_6,"sys","dwdate","d_yearmonthnum",0);
    C_27:bat[:oid] := sql.tid(X_6,"sys","dwdate");
    C_31 := algebra.subselect(X_29,C_27,199401,199401,true,false,false);
    (X_32,r1_56) := algebra.subjoin(X_26,C_31,nil:BAT,nil:BAT,false,nil:lng);
    X_36:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_extendedprice",0);
    X_38:bat[:int] := algebra.projectionpath(X_32,C_20,X_36);
    X_39 := batcalc.lng(X_38);
    X_40:bat[:int] := algebra.projectionpath(X_32,C_20,X_15);
    X_41:bat[:lng] := batcalc.*(X_39,X_40);
    X_42:hge := aggr.sum(X_41);
    sql.resultSet("sys.L1","revenue","hugeint",128,0,7,X_42);
end user.s2_1;

# 23:10:45 >  
# 23:10:45 >  "Done."
# 23:10:45 >  

