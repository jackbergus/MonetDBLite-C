stdout of test '06-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "06-explain.SQL.py" "06-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		-- OK to add p_mfgr=’MFGR#2’
#		-- OK to add p_category=’MFGR#22’
#		and p_brand1 = 'MFGR#2221'
#		and s_region = 'EUROPE'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 437 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str):void;
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineorder");
    X_8:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_brand1",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_152 := algebra.subselect(X_19,X_17,A0,A0,true,true,false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_brand1",2);
    X_153 := algebra.subselect(r1_22,A0,A0,true,true,false);
    X_23:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_brand1",1);
    X_154 := algebra.subselect(X_23,X_17,A0,A0,true,true,false);
    X_24 := sql.subdelta(X_152,X_17,X_21,X_153,X_154);
    X_26 := X_24;
    (X_27,r1_31) := algebra.join(X_16,X_26);
    X_29:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_31,r1_35) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_33:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_34 := sql.projectdelta(X_5,X_29,X_31,r1_35,X_33);
    X_35 := algebra.leftfetchjoin(X_27,X_34);
    X_39:bat[:oid,:str]  := sql.bind(X_4,"sys","supplier","s_region",0);
    X_36:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    X_155 := algebra.subselect(X_39,X_36,A1,A1,true,true,false);
    (X_42,r1_47) := sql.bind(X_4,"sys","supplier","s_region",2);
    X_156 := algebra.subselect(r1_47,A1,A1,true,true,false);
    X_45:bat[:oid,:str]  := sql.bind(X_4,"sys","supplier","s_region",1);
    X_157 := algebra.subselect(X_45,X_36,A1,A1,true,true,false);
    X_47 := sql.subdelta(X_155,X_36,X_42,X_156,X_157);
    X_49 := X_47;
    (X_50,r1_58) := algebra.join(X_35,X_49);
    X_158 := algebra.leftfetchjoin(X_50,X_27);
    X_52:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_55,r1_63) := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_57:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_58 := sql.projectdelta(X_5,X_52,X_55,r1_63,X_57);
    X_59:bat[:oid,:oid]  := algebra.leftfetchjoin(X_158,X_58);
    X_60:bat[:oid,:oid]  := sql.tid(X_4,"sys","dwdate");
    (X_62,r1_72) := algebra.join(X_59,X_60);
    X_159 := algebra.leftfetchjoin(X_62,X_50);
    X_64 := sql.projectdelta(X_24,X_19,X_21,r1_22,X_23);
    X_65:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_159,r1_31,X_64);
    X_66:bat[:oid,:int]  := sql.bind(X_4,"sys","dwdate","d_year",0);
    (X_70,r1_82) := sql.bind(X_4,"sys","dwdate","d_year",2);
    X_73:bat[:oid,:int]  := sql.bind(X_4,"sys","dwdate","d_year",1);
    X_75 := sql.projectdelta(X_60,X_66,X_70,r1_82,X_73);
    X_76 := algebra.leftfetchjoin(r1_72,X_75);
    (X_77,r1_90,r2_90) := group.subgroup(X_76);
    (X_80,r1_93,r2_93) := group.subgroupdone(X_65,X_77);
    X_83 := algebra.leftfetchjoin(r1_93,X_65);
    X_84 := algebra.leftfetchjoin(r1_93,X_76);
    X_92:bat[:oid,:int]  := sql.bind(X_4,"sys","lineorder","lo_revenue",0);
    (X_95,r1_108) := sql.bind(X_4,"sys","lineorder","lo_revenue",2);
    X_97:bat[:oid,:int]  := sql.bind(X_4,"sys","lineorder","lo_revenue",1);
    X_98 := sql.projectdelta(X_5,X_92,X_95,r1_108,X_97);
    X_99:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_159,X_27,X_98);
    X_100:bat[:oid,:lng]  := aggr.subsum(X_99,X_80,r1_93,true,true);
    (X_85,r1_98,r2_98) := algebra.subsort(X_84,false,false);
    (X_89,r1_102,r2_102) := algebra.subsort(X_83,r1_98,r2_98,false,false);
    X_102 := algebra.leftfetchjoin(r1_102,X_100);
    X_104 := algebra.leftfetchjoin(r1_102,X_83);
    X_103 := algebra.leftfetchjoin(r1_102,X_84);
    X_105 := sql.resultSet(3,1,X_102);
    sql.rsColumn(X_105,"sys.L1","L1","bigint",32,0,X_102);
    sql.rsColumn(X_105,"sys.dwdate","d_year","int",32,0,X_103);
    sql.rsColumn(X_105,"sys.part","p_brand1","clob",0,0,X_104);
    X_122 := io.stdout();
    sql.exportResult(X_122,X_105);
end s2_1;
# querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n\tfrom lineorder, dwdate, part, supplier\n\twhere lo_orderdate = d_datekey\n\t\tand lo_partkey = p_partkey\n\t\tand lo_suppkey = s_suppkey\n\t\t-- OK to add p_mfgr=’MFGR#2’\n\t\t-- OK to add p_category=’MFGR#22’\n\t\tand p_brand1 = \\'MFGR#2221\\'\n\t\tand s_region = \\'EUROPE\\'\n\tgroup by d_year, p_brand1\n\torder by d_year, p_brand1;","sequential_pipe")

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

