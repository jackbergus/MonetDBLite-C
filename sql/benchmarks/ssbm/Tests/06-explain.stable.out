stdout of test '06-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "06-explain.SQL.py" "06-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		-- OK to add p_mfgr=’MFGR#2’
#		-- OK to add p_category=’MFGR#22’
#		and p_brand1 = 'MFGR#2221'
#		and s_region = 'EUROPE'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 366 # length
function user.s2_1(A0:str,A1:str):void;
    X_150:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n from lineorder, dwdate, part, supplier\n where lo_orderdate = d_datekey\n and lo_partkey = p_partkey\n and lo_suppkey = s_suppkey\n \n \n and p_brand1 = \\'MFGR#2221\\'\n and s_region = \\'EUROPE\\'\n group by d_year, p_brand1\n order by d_year, p_brand1;","sequential_pipe",82);
    X_116 := bat.new(nil:str);
    X_123 := bat.append(X_116,"sys.L1");
    X_133 := bat.append(X_123,"sys.dwdate");
    X_142 := bat.append(X_133,"sys.part");
    X_118 := bat.new(nil:str);
    X_125 := bat.append(X_118,"L1");
    X_135 := bat.append(X_125,"d_year");
    X_144 := bat.append(X_135,"p_brand1");
    X_119 := bat.new(nil:str);
    X_127 := bat.append(X_119,"bigint");
    X_137 := bat.append(X_127,"int");
    X_146 := bat.append(X_137,"clob");
    X_120 := bat.new(nil:int);
    X_129 := bat.append(X_120,64);
    X_139 := bat.append(X_129,32);
    X_148 := bat.append(X_139,0);
    X_122 := bat.new(nil:int);
    X_131 := bat.append(X_122,0);
    X_141 := bat.append(X_131,0);
    X_149 := bat.append(X_141,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_7,r1_10) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_13 := sql.projectdelta(C_1,X_4,X_7,r1_10,X_10);
    X_16:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",0);
    C_14:bat[:oid] := sql.tid(X_0,"sys","part");
    C_163 := algebra.subselect(X_16,C_14,A0,A0,true,false,false);
    (C_18,r1_21) := sql.bind(X_0,"sys","part","p_brand1",2);
    C_164 := algebra.subselect(r1_21,nil:bat[:oid],A0,A0,true,false,false);
    X_20:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",1);
    C_166 := algebra.subselect(X_20,C_14,A0,A0,true,false,false);
    C_24 := sql.subdelta(C_163,C_14,C_18,C_164,C_166);
    (X_29,r1_32) := algebra.subjoin(X_13,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_34:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_36,r1_39) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_38:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_40 := sql.projectdelta(C_1,X_34,X_36,r1_39,X_38);
    X_41 := algebra.projection(X_29,X_40);
    X_44:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    C_42:bat[:oid] := sql.tid(X_0,"sys","supplier");
    C_167 := algebra.subselect(X_44,C_42,A1,A1,true,false,false);
    (C_46,r1_49) := sql.bind(X_0,"sys","supplier","s_region",2);
    C_168 := algebra.subselect(r1_49,nil:bat[:oid],A1,A1,true,false,false);
    X_48:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",1);
    C_170 := algebra.subselect(X_48,C_42,A1,A1,true,false,false);
    C_52 := sql.subdelta(C_167,C_42,C_46,C_168,C_170);
    (X_54,r1_57) := algebra.subjoin(X_41,C_52,nil:BAT,nil:BAT,false,nil:lng);
    X_56:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_58,r1_61) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_60:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_62 := sql.projectdelta(C_1,X_56,X_58,r1_61,X_60);
    X_64:bat[:oid] := algebra.projectionpath(X_54,X_29,X_62);
    C_65:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    (X_67,r1_70) := algebra.subjoin(X_64,C_65,nil:BAT,nil:BAT,false,nil:lng);
    X_73 := sql.projectdelta(C_24,X_16,C_18,r1_21,X_20);
    X_76:bat[:str] := algebra.projectionpath(X_67,X_54,r1_32,X_73);
    X_77:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    (C_79,r1_82) := sql.bind(X_0,"sys","dwdate","d_year",2);
    X_81:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",1);
    X_83 := sql.projectdelta(C_65,X_77,C_79,r1_82,X_81);
    X_84 := algebra.projection(r1_70,X_83);
    (X_85,r1_88,r2_88) := group.subgroup(X_84);
    (X_88,r1_91,r2_91) := group.subgroupdone(X_76,X_85);
    X_91 := algebra.projection(r1_91,X_76);
    X_92 := algebra.projection(r1_91,X_84);
    X_99:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    (C_101,r1_104) := sql.bind(X_0,"sys","lineorder","lo_revenue",2);
    X_103:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",1);
    X_105 := sql.projectdelta(C_1,X_99,C_101,r1_104,X_103);
    X_108:bat[:int] := algebra.projectionpath(X_67,X_54,X_29,X_105);
    X_109:bat[:lng] := aggr.subsum(X_108,X_88,r1_91,true,true);
    (X_93,r1_96,r2_96) := algebra.subsort(X_92,false,false);
    (X_96,r1_99,r2_99) := algebra.subsort(X_91,r1_96,r2_96,false,false);
    X_112 := algebra.projection(r1_99,X_109);
    X_113 := algebra.projection(r1_99,X_92);
    X_114 := algebra.projection(r1_99,X_91);
    sql.resultSet(X_142,X_144,X_146,X_148,X_149,X_112,X_113,X_114);
end user.s2_1;

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

