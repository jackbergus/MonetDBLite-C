stdout of test '06-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:46 >  
# 23:10:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:46 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:46 >  
# 23:10:46 >  "/usr/bin/python2" "06-explain.SQL.py" "06-explain"
# 23:10:46 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_revenue), d_year, p_brand1
#	from lineorder, dwdate, part, supplier
#	where lo_orderdate = d_datekey
#		and lo_partkey = p_partkey
#		and lo_suppkey = s_suppkey
#		-- OK to add p_mfgr=’MFGR#2’
#		-- OK to add p_category=’MFGR#22’
#		and p_brand1 = 'MFGR#2221'
#		and s_region = 'EUROPE'
#	group by d_year, p_brand1
#	order by d_year, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 366 # length
function user.s4_1():void;
    X_165:void := querylog.define("explain\nselect sum(lo_revenue), d_year, p_brand1\n from lineorder, dwdate, part, supplier\n where lo_orderdate = d_datekey\n and lo_partkey = p_partkey\n and lo_suppkey = s_suppkey\n \n \n and p_brand1 = \\'MFGR#2221\\'\n and s_region = \\'EUROPE\\'\n group by d_year, p_brand1\n order by d_year, p_brand1;","sequential_pipe",65);
    X_131 := bat.new(nil:str);
    X_138 := bat.append(X_131,"sys.L3");
    X_148 := bat.append(X_138,"sys.dwdate");
    X_157 := bat.append(X_148,"sys.part");
    X_133 := bat.new(nil:str);
    X_140 := bat.append(X_133,"L2");
    X_150 := bat.append(X_140,"d_year");
    X_159 := bat.append(X_150,"p_brand1");
    X_134 := bat.new(nil:str);
    X_142 := bat.append(X_134,"hugeint");
    X_152 := bat.append(X_142,"int");
    X_161 := bat.append(X_152,"clob");
    X_135 := bat.new(nil:int);
    X_144 := bat.append(X_135,128);
    X_154 := bat.append(X_144,32);
    X_163 := bat.append(X_154,0);
    X_137 := bat.new(nil:int);
    X_146 := bat.append(X_137,0);
    X_156 := bat.append(X_146,0);
    X_164 := bat.append(X_156,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_31,X_32:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_34 := sql.projectdelta(C_1,X_28,X_31,X_32,X_30);
    X_37:bat[:str] := sql.bind(X_0,"sys","part","p_brand1",0);
    C_35:bat[:oid] := sql.tid(X_0,"sys","part");
    C_45 := algebra.subselect(X_37,C_35,"MFGR#2221","MFGR#2221",true,false,false);
    (X_51,X_52) := algebra.subjoin(X_34,C_45,nil:BAT,nil:BAT,false,nil:lng);
    X_21:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_24,X_25:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_27 := sql.projectdelta(C_1,X_21,X_24,X_25,X_23);
    X_58 := algebra.projection(X_51,X_27);
    X_64:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    C_62:bat[:oid] := sql.tid(X_0,"sys","supplier");
    C_72 := algebra.subselect(X_64,C_62,"EUROPE","EUROPE",true,false,false);
    (X_75,X_76) := algebra.subjoin(X_58,C_72,nil:BAT,nil:BAT,false,nil:lng);
    X_14:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_17,X_18:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_20 := sql.projectdelta(C_1,X_14,X_17,X_18,X_16);
    X_78:bat[:oid] := algebra.projectionpath(X_75,X_51,X_20);
    C_85:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    (X_94,X_95) := algebra.subjoin(X_78,C_85,nil:BAT,nil:BAT,false,nil:lng);
    X_104:bat[:str] := algebra.projectionpath(X_94,X_75,X_52,C_45,X_37);
    X_87:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_108:bat[:int] := algebra.projectionpath(X_95,C_85,X_87);
    (X_110,X_111,X_112) := group.subgroup(X_108);
    (X_113,X_114,X_115) := group.subgroupdone(X_104,X_110);
    X_116 := algebra.projection(X_114,X_108);
    X_117 := algebra.projection(X_114,X_104);
    X_4:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_100:bat[:int] := algebra.projectionpath(X_94,X_75,X_51,C_1,X_4);
    X_118:bat[:hge] := aggr.subsum(X_100,X_113,X_114,true,true);
    (X_121,X_122,X_123) := algebra.subsort(X_116,false,false);
    (X_124,X_125,X_126) := algebra.subsort(X_117,X_122,X_123,false,false);
    X_127 := algebra.projection(X_125,X_118);
    X_128 := algebra.projection(X_125,X_116);
    X_129 := algebra.projection(X_125,X_117);
    sql.resultSet(X_157,X_159,X_161,X_163,X_164,X_127,X_128,X_129);
end user.s4_1;
#inline               actions= 0 time=5 usec 
#candidates           actions= 1 time=73 usec 
#remap                actions= 0 time=7 usec 
#costModel            actions= 1 time=65 usec 
#coercions            actions= 0 time=6 usec 
#evaluate             actions= 2 time=105 usec 
#emptybind            actions= 0 time=8 usec 
#pushselect           actions= 9 time=99 usec 
#aliases              actions=10 time=72 usec 
#mergetable           actions= 0 time=82 usec 
#deadcode             actions=11 time=63 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=13 time=77 usec 
#commonTerms          actions= 0 time=17 usec 
#projectionpath       actions= 8 time=65 usec 
#reorder              actions= 1 time=105 usec 
#deadcode             actions= 8 time=56 usec 
#reduce               actions=68 time=105 usec 
#matpack              actions= 0 time=6 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=6 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=50 usec 
#garbageCollector     actions= 1 time=69 usec 
#total                actions= 1 time=1266 usec 

# 23:10:46 >  
# 23:10:46 >  "Done."
# 23:10:46 >  

