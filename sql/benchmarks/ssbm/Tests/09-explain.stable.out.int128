stdout of test '09-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 567 # length
function user.s2_1():void;
    X_156:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_nation = \\'UNITED KINGDOM\\'\n and (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n and (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n and s_nation = \\'UNITED KINGDOM\\'\n and d_year >= 1992 and d_year <= 1997\n group by c_city, s_city, d_year\n order by d_year asc, revenue desc;","sequential_pipe",118);
    X_118 := bat.new(nil:oid,nil:str);
    X_126 := bat.append(X_118,"sys.customer");
    X_133 := bat.append(X_126,"sys.supplier");
    X_139 := bat.append(X_133,"sys.dwdate");
    X_147 := bat.append(X_139,"sys.L1");
    X_121 := bat.new(nil:oid,nil:str);
    X_128 := bat.append(X_121,"c_city");
    X_135 := bat.append(X_128,"s_city");
    X_141 := bat.append(X_135,"d_year");
    X_149 := bat.append(X_141,"revenue");
    X_122 := bat.new(nil:oid,nil:str);
    X_129 := bat.append(X_122,"clob");
    X_136 := bat.append(X_129,"clob");
    X_142 := bat.append(X_136,"int");
    X_151 := bat.append(X_142,"hugeint");
    X_123 := bat.new(nil:oid,nil:int);
    X_131 := bat.append(X_123,0);
    X_137 := bat.append(X_131,0);
    X_144 := bat.append(X_137,32);
    X_153 := bat.append(X_144,128);
    X_125 := bat.new(nil:oid,nil:int);
    X_132 := bat.append(X_125,0);
    X_138 := bat.append(X_132,0);
    X_146 := bat.append(X_138,0);
    X_155 := bat.append(X_146,0);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_13,r1_16) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_18 := sql.projectdelta(C_7,X_10,X_13,r1_16,X_16);
    X_21:bat[:str] := sql.bind(X_6,"sys","customer","c_city",0);
    X_26:bat[:str] := sql.bind(X_6,"sys","customer","c_nation",0);
    C_19:bat[:oid] := sql.tid(X_6,"sys","customer");
    C_165 := algebra.subselect(X_26,C_19,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    (C_28,r1_35) := sql.bind(X_6,"sys","customer","c_nation",2);
    C_166 := algebra.subselect(r1_35,nil:bat[:oid],"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    X_30:bat[:str] := sql.bind(X_6,"sys","customer","c_nation",1);
    C_168 := algebra.subselect(X_30,C_19,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    C_31 := sql.subdelta(C_165,C_19,C_28,C_166,C_168);
    C_169 := algebra.subselect(X_21,C_31,"UNITED KI1","UNITED KI1",true,false,false);
    (C_23,r1_27) := sql.bind(X_6,"sys","customer","c_city",2);
    C_170 := algebra.subselect(r1_27,nil:bat[:oid],"UNITED KI1","UNITED KI1",true,false,false);
    X_25:bat[:str] := sql.bind(X_6,"sys","customer","c_city",1);
    C_171 := algebra.subselect(X_25,C_31,"UNITED KI1","UNITED KI1",true,false,false);
    C_34 := sql.subdelta(C_169,C_31,C_23,C_170,C_171);
    C_172 := algebra.subselect(X_21,C_31,"UNITED KI5","UNITED KI5",true,false,false);
    C_173 := algebra.subselect(r1_27,nil:bat[:oid],"UNITED KI5","UNITED KI5",true,false,false);
    C_174 := algebra.subselect(X_25,C_31,"UNITED KI5","UNITED KI5",true,false,false);
    C_35 := sql.subdelta(C_172,C_31,C_23,C_173,C_174);
    X_36 := bat.mergecand(C_34,C_35);
    (X_37,r1_50) := algebra.subjoin(X_18,X_36,nil:BAT,nil:BAT,false,nil:lng);
    X_41:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_43,r1_57) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_45:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_46 := sql.projectdelta(C_7,X_41,X_43,r1_57,X_45);
    X_47 := algebra.projection(X_37,X_46);
    X_50:bat[:str] := sql.bind(X_6,"sys","supplier","s_city",0);
    X_55:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",0);
    C_48:bat[:oid] := sql.tid(X_6,"sys","supplier");
    C_175 := algebra.subselect(X_55,C_48,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    (C_57,r1_75) := sql.bind(X_6,"sys","supplier","s_nation",2);
    C_176 := algebra.subselect(r1_75,nil:bat[:oid],"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    X_59:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",1);
    C_177 := algebra.subselect(X_59,C_48,"UNITED KINGDOM","UNITED KINGDOM",true,false,false);
    C_60 := sql.subdelta(C_175,C_48,C_57,C_176,C_177);
    C_178 := algebra.subselect(X_50,C_60,"UNITED KI1","UNITED KI1",true,false,false);
    (C_52,r1_67) := sql.bind(X_6,"sys","supplier","s_city",2);
    C_179 := algebra.subselect(r1_67,nil:bat[:oid],"UNITED KI1","UNITED KI1",true,false,false);
    X_54:bat[:str] := sql.bind(X_6,"sys","supplier","s_city",1);
    C_180 := algebra.subselect(X_54,C_60,"UNITED KI1","UNITED KI1",true,false,false);
    C_61 := sql.subdelta(C_178,C_60,C_52,C_179,C_180);
    C_181 := algebra.subselect(X_50,C_60,"UNITED KI5","UNITED KI5",true,false,false);
    C_182 := algebra.subselect(r1_67,nil:bat[:oid],"UNITED KI5","UNITED KI5",true,false,false);
    C_183 := algebra.subselect(X_54,C_60,"UNITED KI5","UNITED KI5",true,false,false);
    C_62 := sql.subdelta(C_181,C_60,C_52,C_182,C_183);
    X_63 := bat.mergecand(C_61,C_62);
    (X_64,r1_90) := algebra.subjoin(X_47,X_63,nil:BAT,nil:BAT,false,nil:lng);
    X_66:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_68,r1_97) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_70:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_71 := sql.projectdelta(C_7,X_66,X_68,r1_97,X_70);
    X_72:bat[:oid] := algebra.projectionpath(X_64,X_37,X_71);
    X_75:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    C_73:bat[:oid] := sql.tid(X_6,"sys","dwdate");
    C_184 := algebra.subselect(X_75,C_73,1992,1997,true,true,false);
    (C_77,r1_108) := sql.bind(X_6,"sys","dwdate","d_year",2);
    C_185 := algebra.subselect(r1_108,nil:bat[:oid],1992,1997,true,true,false);
    X_79:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",1);
    C_186 := algebra.subselect(X_79,C_73,1992,1997,true,true,false);
    C_80 := sql.subdelta(C_184,C_73,C_77,C_185,C_186);
    (X_81,r1_120) := algebra.subjoin(X_72,C_80,nil:BAT,nil:BAT,false,nil:lng);
    X_83:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (C_85,r1_124) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_87:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_88 := sql.projectdelta(C_7,X_83,C_85,r1_124,X_87);
    X_89:bat[:int] := algebra.projectionpath(X_81,X_64,X_37,X_88);
    X_90 := sql.projectdelta(X_63,X_50,C_52,r1_67,X_54);
    X_91:bat[:str] := algebra.projectionpath(X_81,r1_90,X_90);
    X_92 := sql.projectdelta(X_36,X_21,C_23,r1_27,X_25);
    X_93:bat[:str] := algebra.projectionpath(X_81,X_64,r1_50,X_92);
    X_94 := sql.projectdelta(C_80,X_75,C_77,r1_108,X_79);
    X_95 := algebra.projection(r1_120,X_94);
    (X_96,r1_141,r2_141) := group.subgroup(X_95);
    (X_99,r1_144,r2_144) := group.subgroup(X_93,X_96);
    (X_102,r1_147,r2_147) := group.subgroupdone(X_91,X_99);
    X_105:bat[:hge] := aggr.subsum(X_89,X_102,r1_147,true,true);
    X_106 := algebra.projection(r1_147,X_95);
    (X_107,r1_154,r2_154) := algebra.subsort(X_106,false,false);
    (X_110,r1_159,r2_159) := algebra.subsort(X_105,r1_154,r2_154,true,false);
    X_113:bat[:str] := algebra.projectionpath(r1_159,r1_147,X_93);
    X_114:bat[:str] := algebra.projectionpath(r1_159,r1_147,X_91);
    X_115 := algebra.projection(r1_159,X_106);
    X_116 := algebra.projection(r1_159,X_105);
    sql.resultSet(X_147,X_149,X_151,X_153,X_155,X_113,X_114,X_115,X_116);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

