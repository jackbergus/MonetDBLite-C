stdout of test '09-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 592 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:int,A7:int):void;
    X_179:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_year >= 1992 and d_year <= 1997\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe",118);
    X_137 := bat.new(nil:oid,nil:str);
    X_145 := bat.append(X_137,"sys.customer");
    X_154 := bat.append(X_145,"sys.supplier");
    X_161 := bat.append(X_154,"sys.dwdate");
    X_170 := bat.append(X_161,"sys.L1");
    X_140 := bat.new(nil:oid,nil:str);
    X_147 := bat.append(X_140,"c_city");
    X_156 := bat.append(X_147,"s_city");
    X_163 := bat.append(X_156,"d_year");
    X_172 := bat.append(X_163,"revenue");
    X_141 := bat.new(nil:oid,nil:str);
    X_149 := bat.append(X_141,"clob");
    X_158 := bat.append(X_149,"clob");
    X_165 := bat.append(X_158,"int");
    X_174 := bat.append(X_165,"hugeint");
    X_142 := bat.new(nil:oid,nil:int);
    X_151 := bat.append(X_142,0);
    X_159 := bat.append(X_151,0);
    X_167 := bat.append(X_159,32);
    X_176 := bat.append(X_167,128);
    X_144 := bat.new(nil:oid,nil:int);
    X_153 := bat.append(X_144,0);
    X_160 := bat.append(X_153,0);
    X_169 := bat.append(X_160,0);
    X_178 := bat.append(X_169,0);
    X_10 := sql.mvc();
    X_11:bat[:oid,:oid]  := sql.tid(X_10,"sys","lineorder");
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_17,r1_17) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_20:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_22 := sql.projectdelta(X_11,X_14,X_17,r1_17,X_20);
    X_25:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_city",0);
    X_30:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_nation",0);
    X_23:bat[:oid,:oid]  := sql.tid(X_10,"sys","customer");
    X_218 := algebra.subselect(X_30,X_23,A0,A0,true,false,false);
    (X_32,r1_36) := sql.bind(X_10,"sys","customer","c_nation",2);
    X_219 := algebra.subselect(r1_36,nil:bat[:oid,:oid],A0,A0,true,false,false);
    X_34:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_nation",1);
    X_221 := algebra.subselect(X_34,X_23,A0,A0,true,false,false);
    X_35 := sql.subdelta(X_218,X_23,X_32,X_219,X_221);
    X_222 := algebra.subselect(X_25,X_35,A1,A1,true,false,false);
    (X_27,r1_28) := sql.bind(X_10,"sys","customer","c_city",2);
    X_223 := algebra.subselect(r1_28,nil:bat[:oid,:oid],A1,A1,true,false,false);
    X_29:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_city",1);
    X_225 := algebra.subselect(X_29,X_35,A1,A1,true,false,false);
    X_39 := sql.subdelta(X_222,X_35,X_27,X_223,X_225);
    X_226 := algebra.subselect(X_25,X_35,A2,A2,true,false,false);
    X_227 := algebra.subselect(r1_28,nil:bat[:oid,:oid],A2,A2,true,false,false);
    X_229 := algebra.subselect(X_29,X_35,A2,A2,true,false,false);
    X_40 := sql.subdelta(X_226,X_35,X_27,X_227,X_229);
    X_41 := bat.mergecand(X_39,X_40);
    (X_42,r1_51) := algebra.subjoin(X_22,X_41,nil:BAT,nil:BAT,false,nil:lng);
    X_47:bat[:oid,:oid] := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_49,r1_58) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_51:bat[:oid,:oid] := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_52 := sql.projectdelta(X_11,X_47,X_49,r1_58,X_51);
    X_53 := algebra.leftfetchjoin(X_42,X_52);
    X_56:bat[:oid,:str] := sql.bind(X_10,"sys","supplier","s_city",0);
    X_61:bat[:oid,:str] := sql.bind(X_10,"sys","supplier","s_nation",0);
    X_54:bat[:oid,:oid] := sql.tid(X_10,"sys","supplier");
    X_230 := algebra.subselect(X_61,X_54,A5,A5,true,false,false);
    (X_63,r1_76) := sql.bind(X_10,"sys","supplier","s_nation",2);
    X_231 := algebra.subselect(r1_76,nil:bat[:oid,:oid],A5,A5,true,false,false);
    X_65:bat[:oid,:str] := sql.bind(X_10,"sys","supplier","s_nation",1);
    X_233 := algebra.subselect(X_65,X_54,A5,A5,true,false,false);
    X_66 := sql.subdelta(X_230,X_54,X_63,X_231,X_233);
    X_234 := algebra.subselect(X_56,X_66,A3,A3,true,false,false);
    (X_58,r1_68) := sql.bind(X_10,"sys","supplier","s_city",2);
    X_235 := algebra.subselect(r1_68,nil:bat[:oid,:oid],A3,A3,true,false,false);
    X_60:bat[:oid,:str] := sql.bind(X_10,"sys","supplier","s_city",1);
    X_237 := algebra.subselect(X_60,X_66,A3,A3,true,false,false);
    X_70 := sql.subdelta(X_234,X_66,X_58,X_235,X_237);
    X_238 := algebra.subselect(X_56,X_66,A4,A4,true,false,false);
    X_239 := algebra.subselect(r1_68,nil:bat[:oid,:oid],A4,A4,true,false,false);
    X_241 := algebra.subselect(X_60,X_66,A4,A4,true,false,false);
    X_71 := sql.subdelta(X_238,X_66,X_58,X_239,X_241);
    X_72 := bat.mergecand(X_70,X_71);
    (X_73,r1_91) := algebra.subjoin(X_53,X_72,nil:BAT,nil:BAT,false,nil:lng);
    X_78:bat[:oid,:oid] := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_80,r1_98) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_82:bat[:oid,:oid] := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_83 := sql.projectdelta(X_11,X_78,X_80,r1_98,X_82);
    X_84:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_73,X_42,X_83);
    X_87:bat[:oid,:int] := sql.bind(X_10,"sys","dwdate","d_year",0);
    X_85:bat[:oid,:oid] := sql.tid(X_10,"sys","dwdate");
    X_242 := algebra.subselect(X_87,X_85,A6,A7,true,true,false);
    (X_89,r1_109) := sql.bind(X_10,"sys","dwdate","d_year",2);
    X_243 := algebra.subselect(r1_109,nil:bat[:oid,:oid],A6,A7,true,true,false);
    X_91:bat[:oid,:int] := sql.bind(X_10,"sys","dwdate","d_year",1);
    X_245 := algebra.subselect(X_91,X_85,A6,A7,true,true,false);
    X_92 := sql.subdelta(X_242,X_85,X_89,X_243,X_245);
    (X_96,r1_121) := algebra.subjoin(X_84,X_92,nil:BAT,nil:BAT,false,nil:lng);
    X_98:bat[:oid,:int] := sql.bind(X_10,"sys","lineorder","lo_revenue",0);
    (X_100,r1_125) := sql.bind(X_10,"sys","lineorder","lo_revenue",2);
    X_102:bat[:oid,:int] := sql.bind(X_10,"sys","lineorder","lo_revenue",1);
    X_103 := sql.projectdelta(X_11,X_98,X_100,r1_125,X_102);
    X_104:bat[:oid,:int] := algebra.leftfetchjoinPath(X_96,X_73,X_42,X_103);
    X_105 := sql.projectdelta(X_72,X_56,X_58,r1_68,X_60);
    X_106:bat[:oid,:str] := algebra.leftfetchjoinPath(X_96,r1_91,X_105);
    X_107 := sql.projectdelta(X_41,X_25,X_27,r1_28,X_29);
    X_108:bat[:oid,:str] := algebra.leftfetchjoinPath(X_96,X_73,r1_51,X_107);
    X_109 := sql.projectdelta(X_92,X_87,X_89,r1_109,X_91);
    X_110 := algebra.leftfetchjoin(r1_121,X_109);
    (X_111,r1_142,r2_142) := group.subgroup(X_110);
    (X_114,r1_145,r2_145) := group.subgroup(X_108,X_111);
    (X_117,r1_148,r2_148) := group.subgroupdone(X_106,X_114);
    X_120:bat[:oid,:hge] := aggr.subsum(X_104,X_117,r1_148,true,true);
    X_123 := algebra.leftfetchjoin(r1_148,X_110);
    (X_124,r1_155,r2_155) := algebra.subsort(X_123,false,false);
    (X_129,r1_160,r2_160) := algebra.subsort(X_120,r1_155,r2_155,true,false);
    X_132:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_160,r1_148,X_108);
    X_133:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_160,r1_148,X_106);
    X_134 := algebra.leftfetchjoin(r1_160,X_123);
    X_135 := algebra.leftfetchjoin(r1_160,X_120);
    sql.resultSet(X_170,X_172,X_174,X_176,X_178,X_132,X_133,X_134,X_135);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

