stdout of test '09-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 571 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:int,A7:int):void;
    X_150 := bat.new(nil:oid,nil:str);
    X_158 := bat.append(X_150,"sys.customer");
    X_167 := bat.append(X_158,"sys.supplier");
    X_174 := bat.append(X_167,"sys.dwdate");
    X_183 := bat.append(X_174,"sys.L1");
    X_153 := bat.new(nil:oid,nil:str);
    X_160 := bat.append(X_153,"c_city");
    X_169 := bat.append(X_160,"s_city");
    X_176 := bat.append(X_169,"d_year");
    X_185 := bat.append(X_176,"revenue");
    X_154 := bat.new(nil:oid,nil:str);
    X_162 := bat.append(X_154,"clob");
    X_171 := bat.append(X_162,"clob");
    X_178 := bat.append(X_171,"int");
    X_187 := bat.append(X_178,"hugeint");
    X_155 := bat.new(nil:oid,nil:int);
    X_164 := bat.append(X_155,0);
    X_172 := bat.append(X_164,0);
    X_180 := bat.append(X_172,32);
    X_189 := bat.append(X_180,32);
    X_157 := bat.new(nil:oid,nil:int);
    X_166 := bat.append(X_157,0);
    X_173 := bat.append(X_166,0);
    X_182 := bat.append(X_173,0);
    X_190 := bat.append(X_182,0);
    X_10 := sql.mvc();
    X_11:bat[:oid,:oid]  := sql.tid(X_10,"sys","lineorder");
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_17,r1_17) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_20:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_22 := sql.projectdelta(X_11,X_14,X_17,r1_17,X_20);
    X_25:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_city",0);
    X_30:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_nation",0);
    X_23:bat[:oid,:oid]  := sql.tid(X_10,"sys","customer");
    X_221 := algebra.subselect(X_30,X_23,A0,A0,true,true,false);
    (X_32,r1_36) := sql.bind(X_10,"sys","customer","c_nation",2);
    X_222 := algebra.subselect(r1_36,nil:bat[:oid,:oid],A0,A0,true,true,false);
    X_34:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_nation",1);
    X_224 := algebra.subselect(X_34,X_23,A0,A0,true,true,false);
    X_35 := sql.subdelta(X_221,X_23,X_32,X_222,X_224);
    X_225 := algebra.subselect(X_25,X_35,A1,A1,true,true,false);
    (X_27,r1_28) := sql.bind(X_10,"sys","customer","c_city",2);
    X_226 := algebra.subselect(r1_28,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_29:bat[:oid,:str]  := sql.bind(X_10,"sys","customer","c_city",1);
    X_228 := algebra.subselect(X_29,X_35,A1,A1,true,true,false);
    X_38 := sql.subdelta(X_225,X_35,X_27,X_226,X_228);
    X_229 := algebra.subselect(X_25,X_35,A2,A2,true,true,false);
    X_230 := algebra.subselect(r1_28,nil:bat[:oid,:oid],A2,A2,true,true,false);
    X_232 := algebra.subselect(X_29,X_35,A2,A2,true,true,false);
    X_39 := sql.subdelta(X_229,X_35,X_27,X_230,X_232);
    X_40 := bat.mergecand(X_38,X_39);
    X_41 := X_40;
    (X_42,r1_50) := algebra.subjoin(X_22,X_41,nil:BAT,nil:BAT,true,nil:lng);
    X_46:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_51,r1_59) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_54:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_56 := sql.projectdelta(X_11,X_46,X_51,r1_59,X_54);
    X_57 := algebra.leftfetchjoin(X_42,X_56);
    X_60:bat[:oid,:str]  := sql.bind(X_10,"sys","supplier","s_city",0);
    X_65:bat[:oid,:str]  := sql.bind(X_10,"sys","supplier","s_nation",0);
    X_58:bat[:oid,:oid]  := sql.tid(X_10,"sys","supplier");
    X_233 := algebra.subselect(X_65,X_58,A5,A5,true,true,false);
    (X_67,r1_79) := sql.bind(X_10,"sys","supplier","s_nation",2);
    X_234 := algebra.subselect(r1_79,nil:bat[:oid,:oid],A5,A5,true,true,false);
    X_69:bat[:oid,:str]  := sql.bind(X_10,"sys","supplier","s_nation",1);
    X_236 := algebra.subselect(X_69,X_58,A5,A5,true,true,false);
    X_70 := sql.subdelta(X_233,X_58,X_67,X_234,X_236);
    X_237 := algebra.subselect(X_60,X_70,A3,A3,true,true,false);
    (X_62,r1_71) := sql.bind(X_10,"sys","supplier","s_city",2);
    X_238 := algebra.subselect(r1_71,nil:bat[:oid,:oid],A3,A3,true,true,false);
    X_64:bat[:oid,:str]  := sql.bind(X_10,"sys","supplier","s_city",1);
    X_240 := algebra.subselect(X_64,X_70,A3,A3,true,true,false);
    X_73 := sql.subdelta(X_237,X_70,X_62,X_238,X_240);
    X_241 := algebra.subselect(X_60,X_70,A4,A4,true,true,false);
    X_242 := algebra.subselect(r1_71,nil:bat[:oid,:oid],A4,A4,true,true,false);
    X_244 := algebra.subselect(X_64,X_70,A4,A4,true,true,false);
    X_74 := sql.subdelta(X_241,X_70,X_62,X_242,X_244);
    X_75 := bat.mergecand(X_73,X_74);
    X_76 := X_75;
    (X_77,r1_93) := algebra.subjoin(X_57,X_76,nil:BAT,nil:BAT,true,nil:lng);
    X_249 := algebra.leftfetchjoin(X_77,X_42);
    X_81:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_86,r1_102) := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_89:bat[:oid,:oid]  := sql.bind_idxbat(X_10,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_91 := sql.projectdelta(X_11,X_81,X_86,r1_102,X_89);
    X_92:bat[:oid,:oid]  := algebra.leftfetchjoin(X_249,X_91);
    X_95:bat[:oid,:int]  := sql.bind(X_10,"sys","dwdate","d_year",0);
    X_93:bat[:oid,:oid]  := sql.tid(X_10,"sys","dwdate");
    X_245 := algebra.subselect(X_95,X_93,A6,A7,true,true,false);
    (X_97,r1_115) := sql.bind(X_10,"sys","dwdate","d_year",2);
    X_246 := algebra.subselect(r1_115,nil:bat[:oid,:oid],A6,A7,true,true,false);
    X_99:bat[:oid,:int]  := sql.bind(X_10,"sys","dwdate","d_year",1);
    X_248 := algebra.subselect(X_99,X_93,A6,A7,true,true,false);
    X_100 := sql.subdelta(X_245,X_93,X_97,X_246,X_248);
    X_103 := X_100;
    (X_104,r1_126) := algebra.subjoin(X_92,X_103,nil:BAT,nil:BAT,true,nil:lng);
    X_250 := algebra.leftfetchjoin(X_104,X_77);
    X_108:bat[:oid,:int]  := sql.bind(X_10,"sys","lineorder","lo_revenue",0);
    (X_113,r1_135) := sql.bind(X_10,"sys","lineorder","lo_revenue",2);
    X_116:bat[:oid,:int]  := sql.bind(X_10,"sys","lineorder","lo_revenue",1);
    X_118 := sql.projectdelta(X_11,X_108,X_113,r1_135,X_116);
    X_119:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_250,X_42,X_118);
    X_120 := sql.projectdelta(X_75,X_60,X_62,r1_71,X_64);
    X_121:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_104,r1_93,X_120);
    X_122 := sql.projectdelta(X_40,X_25,X_27,r1_28,X_29);
    X_123:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_250,r1_50,X_122);
    X_124 := sql.projectdelta(X_100,X_95,X_97,r1_115,X_99);
    X_125 := algebra.leftfetchjoin(r1_126,X_124);
    (X_126,r1_154,r2_154) := group.subgroup(X_125);
    (X_129,r1_157,r2_157) := group.subgroup(X_123,X_126);
    (X_132,r1_160,r2_160) := group.subgroupdone(X_121,X_129);
    X_135:bat[:oid,:hge]  := aggr.subsum(X_119,X_132,r1_160,true,true);
    X_137 := algebra.leftfetchjoin(r1_160,X_125);
    (X_138,r1_166,r2_166) := algebra.subsort(X_137,false,false);
    (X_142,r1_170,r2_170) := algebra.subsort(X_135,r1_166,r2_166,true,false);
    X_251 := algebra.leftfetchjoin(r1_170,r1_160);
    X_145:bat[:oid,:str]  := algebra.leftfetchjoin(X_251,X_123);
    X_146:bat[:oid,:str]  := algebra.leftfetchjoin(X_251,X_121);
    X_147 := algebra.leftfetchjoin(r1_170,X_137);
    X_148 := algebra.leftfetchjoin(r1_170,X_135);
    sql.resultSet(X_183,X_185,X_187,X_189,X_190,X_145,X_146,X_147,X_148);
end s2_1;
# querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n\tfrom customer, lineorder, supplier, dwdate\n\twhere lo_custkey = c_custkey\n\t\tand lo_suppkey = s_suppkey\n\t\tand lo_orderdate = d_datekey\n\t\tand c_nation = \\'UNITED KINGDOM\\'\n\t\tand (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n\t\tand (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n\t\tand s_nation = \\'UNITED KINGDOM\\'\n\t\tand d_year >= 1992 and d_year <= 1997\n\tgroup by c_city, s_city, d_year\n\torder by d_year asc, revenue desc;","sequential_pipe")

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

