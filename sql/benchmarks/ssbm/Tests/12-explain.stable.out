stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 554 # length
function user.s4_1():void;
    X_242:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (d_year = 1997 or d_year = 1998)\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, s_nation, p_category\n order by d_year, s_nation, p_category;","sequential_pipe",105);
    X_201 := bat.new(nil:str);
    X_208 := bat.append(X_201,"sys.dwdate");
    X_218 := bat.append(X_208,"sys.supplier");
    X_226 := bat.append(X_218,"sys.part");
    X_233 := bat.append(X_226,"sys.L6");
    X_203 := bat.new(nil:str);
    X_210 := bat.append(X_203,"d_year");
    X_220 := bat.append(X_210,"s_nation");
    X_228 := bat.append(X_220,"p_category");
    X_235 := bat.append(X_228,"profit1");
    X_204 := bat.new(nil:str);
    X_212 := bat.append(X_204,"int");
    X_222 := bat.append(X_212,"clob");
    X_230 := bat.append(X_222,"clob");
    X_237 := bat.append(X_230,"bigint");
    X_205 := bat.new(nil:int);
    X_214 := bat.append(X_205,32);
    X_224 := bat.append(X_214,0);
    X_231 := bat.append(X_224,0);
    X_239 := bat.append(X_231,64);
    X_207 := bat.new(nil:int);
    X_216 := bat.append(X_207,0);
    X_225 := bat.append(X_216,0);
    X_232 := bat.append(X_225,0);
    X_241 := bat.append(X_232,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineorder");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_7,r1_14) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_12 := sql.delta(X_4,X_7,r1_14,X_10);
    X_13 := algebra.projection(C_1,X_12);
    C_14:bat[:oid] := sql.tid(X_0,"sys","dwdate");
    X_16:bat[:int] := sql.bind(X_0,"sys","dwdate","d_year",0);
    X_22 := algebra.projection(C_14,X_16);
    C_24 := algebra.subselect(X_22,1997,1997,true,false,false);
    C_29 := algebra.subselect(X_22,1998,1998,true,false,false);
    X_30 := bat.mergecand(C_24,C_29);
    X_31 := algebra.projection(X_30,C_14);
    (X_32,r1_39) := algebra.subjoin(X_13,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_39,r1_46) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_42 := sql.delta(X_37,X_39,r1_46,X_41);
    X_44:bat[:oid] := algebra.projectionpath(X_32,C_1,X_42);
    C_45:bat[:oid] := sql.tid(X_0,"sys","part");
    X_47:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",0);
    X_53 := algebra.projection(C_45,X_47);
    C_55 := algebra.subselect(X_53,"MFGR#1","MFGR#1",true,false,false);
    C_57 := algebra.subselect(X_53,"MFGR#2","MFGR#2",true,false,false);
    X_59 := bat.mergecand(C_55,C_57);
    X_60 := algebra.projection(X_59,C_45);
    (X_61,r1_68) := algebra.subjoin(X_44,X_60,nil:BAT,nil:BAT,false,nil:lng);
    X_64:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_66,r1_73) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_68:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_69 := sql.delta(X_64,X_66,r1_73,X_68);
    X_72:bat[:oid] := algebra.projectionpath(X_61,X_32,C_1,X_69);
    C_73:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_75:bat[:str] := sql.bind(X_0,"sys","supplier","s_region",0);
    X_81 := algebra.projection(C_73,X_75);
    C_83 := algebra.subselect(X_81,"AMERICA","AMERICA",true,false,false);
    X_84 := algebra.projection(C_83,C_73);
    (X_85,r1_92) := algebra.subjoin(X_72,X_84,nil:BAT,nil:BAT,false,nil:lng);
    X_90:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_92,r1_99) := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_94:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_95 := sql.delta(X_90,X_92,r1_99,X_94);
    X_99:bat[:oid] := algebra.projectionpath(X_85,X_61,X_32,C_1,X_95);
    C_100:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_102:bat[:str] := sql.bind(X_0,"sys","customer","c_region",0);
    X_108 := algebra.projection(C_100,X_102);
    C_110 := algebra.subselect(X_108,"AMERICA","AMERICA",true,false,false);
    X_114 := algebra.projection(C_110,C_100);
    (X_115,r1_122) := algebra.subjoin(X_99,X_114,nil:BAT,nil:BAT,false,nil:lng);
    X_117:bat[:str] := sql.bind(X_0,"sys","part","p_category",0);
    X_127:bat[:str] := algebra.projectionpath(X_115,X_85,r1_68,X_59,C_45,X_117);
    X_128:bat[:str] := sql.bind(X_0,"sys","supplier","s_nation",0);
    X_137:bat[:str] := algebra.projectionpath(X_115,r1_92,C_83,C_73,X_128);
    X_142:bat[:int] := algebra.projectionpath(X_115,X_85,X_61,r1_39,X_30,X_22);
    (X_143,r1_150,r2_150) := group.subgroup(X_142);
    (X_146,r1_153,r2_153) := group.subgroup(X_137,X_143);
    (X_149,r1_156,r2_156) := group.subgroupdone(X_127,X_146);
    X_152 := algebra.projection(r1_156,X_127);
    X_153 := algebra.projection(r1_156,X_137);
    X_154 := algebra.projection(r1_156,X_142);
    X_169:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_revenue",0);
    X_179:bat[:int] := algebra.projectionpath(X_115,X_85,X_61,X_32,C_1,X_169);
    X_180 := batcalc.lng(X_179);
    X_181:bat[:int] := sql.bind(X_0,"sys","lineorder","lo_supplycost",0);
    X_191:bat[:int] := algebra.projectionpath(X_115,X_85,X_61,X_32,C_1,X_181);
    X_192 := batcalc.lng(X_191);
    X_193:bat[:lng] := batcalc.-(X_180,X_192);
    X_196:bat[:lng] := aggr.subsum(X_193,X_149,r1_156,true,true);
    (X_155,r1_162,r2_162) := algebra.subsort(X_154,false,false);
    (X_160,r1_167,r2_167) := algebra.subsort(X_153,r1_162,r2_162,false,false);
    (X_163,r1_170,r2_170) := algebra.subsort(X_152,r1_167,r2_167,false,false);
    X_166 := algebra.projection(r1_170,X_154);
    X_167 := algebra.projection(r1_170,X_153);
    X_168 := algebra.projection(r1_170,X_152);
    X_199 := algebra.projection(r1_170,X_196);
    sql.resultSet(X_233,X_235,X_237,X_239,X_241,X_166,X_167,X_168,X_199);
end user.s4_1;
#inline               actions= 0 time=7 usec 
#remap                actions= 1 time=43 usec 
#costmodel            actions= 1 time=7 usec 
#coercion             actions= 0 time=4 usec 
#evaluate             actions= 6 time=40 usec 
#emptybind            actions=24 time=54 usec 
#aliases              actions=14 time=24 usec 
#mergetable           actions= 0 time=94 usec 
#deadcode             actions=24 time=19 usec 
#aliases              actions= 0 time=15 usec 
#constants            actions=28 time=39 usec 
#commonTerms          actions= 0 time=18 usec 
#projectionpath       actions=25 time=42 usec 
#reorder              actions= 1 time=76 usec 
#deadcode             actions=25 time=16 usec 
#reduce               actions=119 time=27 usec 
#matpack              actions= 0 time=3 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=7 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=39 usec 
#total                actions= 1 time=788 usec 

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

