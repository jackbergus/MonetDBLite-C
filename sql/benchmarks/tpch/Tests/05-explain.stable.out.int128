stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 573 # length
function user.s4_1():void;
    X_178:void := querylog.define("explain select\n n_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n customer,\n orders,\n lineitem,\n supplier,\n nation,\n region\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and l_suppkey = s_suppkey\n and c_nationkey = s_nationkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'ASIA\\'\n and o_orderdate >= date \\'1994-01-01\\'\n and o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n n_name\norder by\n revenue desc;","sequential_pipe",122);
    X_152 := bat.new(nil:oid,nil:str);
    X_160 := bat.append(X_152,"sys.nation");
    X_168 := bat.append(X_160,"sys.L1");
    X_155 := bat.new(nil:oid,nil:str);
    X_162 := bat.append(X_155,"n_name");
    X_170 := bat.append(X_162,"revenue");
    X_156 := bat.new(nil:oid,nil:str);
    X_163 := bat.append(X_156,"char");
    X_172 := bat.append(X_163,"decimal");
    X_157 := bat.new(nil:oid,nil:int);
    X_165 := bat.append(X_157,25);
    X_174 := bat.append(X_165,39);
    X_159 := bat.new(nil:oid,nil:int);
    X_167 := bat.append(X_159,0);
    X_176 := bat.append(X_167,4);
    X_4 := sql.mvc();
    X_8:bat[:date] := sql.bind(X_4,"sys","orders","o_orderdate",0);
    C_5:bat[:oid] := sql.tid(X_4,"sys","orders");
    X_16:date := mtime.addmonths("1994-01-01",12);
    C_195 := algebra.subselect(X_8,C_5,"1994-01-01",X_16,true,false,false);
    (C_11,r1_13) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    C_196 := algebra.subselect(r1_13,nil:bat[:oid],"1994-01-01",X_16,true,false,false);
    X_14:bat[:date] := sql.bind(X_4,"sys","orders","o_orderdate",1);
    C_198 := algebra.subselect(X_14,C_5,"1994-01-01",X_16,true,false,false);
    C_17 := sql.subdelta(C_195,C_5,C_11,C_196,C_198);
    X_20:bat[:oid] := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",0);
    (X_22,r1_30) := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",2);
    X_24:bat[:oid] := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",1);
    X_25 := sql.projectdelta(C_17,X_20,X_22,r1_30,X_24);
    C_26:bat[:oid] := sql.tid(X_4,"sys","customer");
    (X_28,r1_38) := algebra.subjoin(X_25,C_26,nil:BAT,nil:BAT,false,nil:lng);
    X_32 := algebra.projection(X_28,C_17);
    C_33:bat[:oid] := sql.tid(X_4,"sys","lineitem");
    X_35:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_37,r1_49) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_39:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_40 := sql.projectdelta(C_33,X_35,X_37,r1_49,X_39);
    (X_41,r1_54) := algebra.subjoin(X_32,X_40,nil:BAT,nil:BAT,false,nil:lng);
    X_43:bat[:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    (C_45,r1_58) := sql.bind(X_4,"sys","lineitem","l_suppkey",2);
    X_47:bat[:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",1);
    X_48 := sql.projectdelta(C_33,X_43,C_45,r1_58,X_47);
    X_49 := algebra.projection(r1_54,X_48);
    X_50:bat[:lng] := batmkey.hash(X_49);
    X_52:bat[:int] := sql.bind(X_4,"sys","customer","c_nationkey",0);
    (C_54,r1_71) := sql.bind(X_4,"sys","customer","c_nationkey",2);
    X_56:bat[:int] := sql.bind(X_4,"sys","customer","c_nationkey",1);
    X_57 := sql.projectdelta(C_26,X_52,C_54,r1_71,X_56);
    X_58:bat[:int] := algebra.projectionpath(X_41,r1_38,X_57);
    X_59:bat[:lng] := mkey.bulk_rotate_xor_hash(X_50,22,X_58);
    C_60:bat[:oid] := sql.tid(X_4,"sys","supplier");
    X_62:bat[:int] := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    (C_64,r1_83) := sql.bind(X_4,"sys","supplier","s_suppkey",2);
    X_66:bat[:int] := sql.bind(X_4,"sys","supplier","s_suppkey",1);
    X_67 := sql.projectdelta(C_60,X_62,C_64,r1_83,X_66);
    X_68:bat[:lng] := batmkey.hash(X_67);
    X_69:bat[:int] := sql.bind(X_4,"sys","supplier","s_nationkey",0);
    (C_71,r1_92) := sql.bind(X_4,"sys","supplier","s_nationkey",2);
    X_73:bat[:int] := sql.bind(X_4,"sys","supplier","s_nationkey",1);
    X_74 := sql.projectdelta(C_60,X_69,C_71,r1_92,X_73);
    X_75:bat[:lng] := mkey.bulk_rotate_xor_hash(X_68,22,X_74);
    (X_76,r1_98) := algebra.subjoin(X_59,X_75,nil:BAT,nil:BAT,false,nil:lng);
    X_78 := algebra.projection(X_76,X_49);
    X_79 := algebra.projection(r1_98,X_67);
    X_80:bat[:bit] := batcalc.==(X_78,X_79);
    C_81 := algebra.subselect(X_80,true,true,true,false,false);
    X_82 := algebra.projection(C_81,X_76);
    X_83 := algebra.projection(X_82,X_58);
    X_84 := algebra.projection(C_81,r1_98);
    X_85 := algebra.projection(X_84,X_74);
    X_86:bat[:bit] := batcalc.==(X_83,X_85);
    C_87 := algebra.subselect(X_86,true,true,true,false,false);
    X_88:bat[:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_90,r1_122) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_92:bat[:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_93 := sql.projectdelta(C_60,X_88,X_90,r1_122,X_92);
    X_94:bat[:oid] := algebra.projectionpath(C_87,X_84,X_93);
    C_95:bat[:oid] := sql.tid(X_4,"sys","nation");
    (X_97,r1_130) := algebra.subjoin(X_94,C_95,nil:BAT,nil:BAT,false,nil:lng);
    X_99:bat[:oid] := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",0);
    (X_101,r1_134) := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",2);
    X_103:bat[:oid] := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",1);
    X_104 := sql.projectdelta(C_95,X_99,X_101,r1_134,X_103);
    X_105 := algebra.projection(r1_130,X_104);
    X_108:bat[:str] := sql.bind(X_4,"sys","region","r_name",0);
    C_106:bat[:oid] := sql.tid(X_4,"sys","region");
    C_199 := algebra.subselect(X_108,C_106,"ASIA","ASIA",true,false,false);
    (C_110,r1_144) := sql.bind(X_4,"sys","region","r_name",2);
    C_200 := algebra.subselect(r1_144,nil:bat[:oid],"ASIA","ASIA",true,false,false);
    X_112:bat[:str] := sql.bind(X_4,"sys","region","r_name",1);
    C_201 := algebra.subselect(X_112,C_106,"ASIA","ASIA",true,false,false);
    C_113 := sql.subdelta(C_199,C_106,C_110,C_200,C_201);
    (X_114,r1_155) := algebra.subjoin(X_105,C_113,nil:BAT,nil:BAT,false,nil:lng);
    X_116 := algebra.projection(C_87,X_82);
    X_117:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (C_119,r1_163) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_121:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_122 := sql.projectdelta(C_33,X_117,C_119,r1_163,X_121);
    X_123:bat[:lng] := algebra.projectionpath(X_114,X_97,X_116,r1_54,X_122);
    X_124:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (C_126,r1_182) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_128:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_129 := sql.projectdelta(C_33,X_124,C_126,r1_182,X_128);
    X_130:bat[:lng] := algebra.projectionpath(X_114,X_97,X_116,r1_54,X_129);
    X_131:bat[:lng] := batcalc.-(100:lng,X_130);
    X_132:bat[:hge] := batcalc.*(X_123,X_131);
    X_133:bat[:str] := sql.bind(X_4,"sys","nation","n_name",0);
    (C_135,r1_197) := sql.bind(X_4,"sys","nation","n_name",2);
    X_137:bat[:str] := sql.bind(X_4,"sys","nation","n_name",1);
    X_138 := sql.projectdelta(C_95,X_133,C_135,r1_197,X_137);
    X_139:bat[:str] := algebra.projectionpath(X_114,r1_130,X_138);
    (X_140,r1_204,r2_204) := group.subgroupdone(X_139);
    X_143:bat[:hge] := aggr.subsum(X_132,X_140,r1_204,true,true);
    X_147 := algebra.projection(r1_204,X_139);
    (X_144,r1_210,r2_210) := algebra.subsort(X_143,true,false);
    X_148 := bat.setKey(X_147,true);
    X_149 := algebra.projection(r1_210,X_148);
    X_150 := algebra.projection(r1_210,X_143);
    sql.resultSet(X_168,X_170,X_172,X_174,X_176,X_149,X_150);
end user.s4_1;
#inline               actions= 0 time=10 usec 
#candidates           actions= 1 time=126 usec 
#remap                actions= 7 time=724 usec 
#costModel            actions= 1 time=208 usec 
#coercions            actions= 4 time=318 usec 
#evaluate             actions= 6 time=266 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions=11 time=302 usec 
#aliases              actions=20 time=255 usec 
#mergetable           actions= 0 time=221 usec 
#deadcode             actions=23 time=215 usec 
#aliases              actions= 0 time=26 usec 
#constants            actions=26 time=216 usec 
#commonTerms          actions= 0 time=27 usec 
#projectionpath       actions=14 time=189 usec 
#reorder              actions= 1 time=252 usec 
#deadcode             actions=14 time=173 usec 
#reduce               actions=129 time=248 usec 
#matpack              actions= 0 time=10 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=162 usec 
#garbageCollector     actions= 1 time=175 usec 
#total                actions= 1 time=4314 usec 

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

