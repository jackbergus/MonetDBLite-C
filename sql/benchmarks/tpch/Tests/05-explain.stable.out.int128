stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 572 # length
function user.s4_1():void;
    X_146:void := querylog.define("explain select\n n_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n customer,\n orders,\n lineitem,\n supplier,\n nation,\n region\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and l_suppkey = s_suppkey\n and c_nationkey = s_nationkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'ASIA\\'\n and o_orderdate >= date \\'1994-01-01\\'\n and o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n n_name\norder by\n revenue desc;","sequential_pipe",93);
    X_120 := bat.new(nil:oid,nil:str);
    X_128 := bat.append(X_120,"sys.nation");
    X_136 := bat.append(X_128,"sys.L1");
    X_123 := bat.new(nil:oid,nil:str);
    X_130 := bat.append(X_123,"n_name");
    X_138 := bat.append(X_130,"revenue");
    X_124 := bat.new(nil:oid,nil:str);
    X_131 := bat.append(X_124,"char");
    X_140 := bat.append(X_131,"decimal");
    X_125 := bat.new(nil:oid,nil:int);
    X_133 := bat.append(X_125,25);
    X_142 := bat.append(X_133,39);
    X_127 := bat.new(nil:oid,nil:int);
    X_135 := bat.append(X_127,0);
    X_144 := bat.append(X_135,4);
    X_4 := sql.mvc();
    X_8:bat[:date] := sql.bind(X_4,"sys","orders","o_orderdate",0);
    C_5:bat[:oid] := sql.tid(X_4,"sys","orders");
    X_13:date := mtime.addmonths("1994-01-01",12);
    C_14 := algebra.subselect(X_8,C_5,"1994-01-01",X_13,true,false,false);
    X_17:bat[:oid] := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",0);
    (X_19,r1_30) := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",2);
    X_21:bat[:oid] := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",1);
    X_22 := sql.projectdelta(C_14,X_17,X_19,r1_30,X_21);
    C_23:bat[:oid] := sql.tid(X_4,"sys","customer");
    (X_25,r1_38) := algebra.subjoin(X_22,C_23,nil:BAT,nil:BAT,false,nil:lng);
    X_29 := algebra.projection(X_25,C_14);
    C_30:bat[:oid] := sql.tid(X_4,"sys","lineitem");
    X_32:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_34,r1_49) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_36:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_37 := sql.projectdelta(C_30,X_32,X_34,r1_49,X_36);
    (X_38,r1_54) := algebra.subjoin(X_29,X_37,nil:BAT,nil:BAT,false,nil:lng);
    X_40:bat[:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    X_42:bat[:int] := algebra.projectionpath(r1_54,C_30,X_40);
    X_43:bat[:wrd] := batmkey.hash(X_42);
    X_45:bat[:int] := sql.bind(X_4,"sys","customer","c_nationkey",0);
    X_47:bat[:int] := algebra.projectionpath(X_38,r1_38,C_23,X_45);
    X_48:bat[:wrd] := mkey.bulk_rotate_xor_hash(X_43,22,X_47);
    C_49:bat[:oid] := sql.tid(X_4,"sys","supplier");
    X_51:bat[:int] := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    X_53 := algebra.projection(C_49,X_51);
    X_54:bat[:wrd] := batmkey.hash(X_53);
    X_55:bat[:int] := sql.bind(X_4,"sys","supplier","s_nationkey",0);
    X_57 := algebra.projection(C_49,X_55);
    X_58:bat[:wrd] := mkey.bulk_rotate_xor_hash(X_54,22,X_57);
    (X_59,r1_98) := algebra.subjoin(X_48,X_58,nil:BAT,nil:BAT,false,nil:lng);
    X_61 := algebra.projection(X_59,X_42);
    X_62 := algebra.projection(r1_98,X_53);
    X_63:bat[:bit] := batcalc.==(X_61,X_62);
    C_64 := algebra.subselect(X_63,true,true,true,false,false);
    X_65 := algebra.projection(C_64,X_59);
    X_66 := algebra.projection(X_65,X_47);
    X_67 := algebra.projection(C_64,r1_98);
    X_68 := algebra.projection(X_67,X_57);
    X_69:bat[:bit] := batcalc.==(X_66,X_68);
    C_70 := algebra.subselect(X_69,true,true,true,false,false);
    X_71:bat[:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_73,r1_122) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_75:bat[:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_76 := sql.projectdelta(C_49,X_71,X_73,r1_122,X_75);
    X_77:bat[:oid] := algebra.projectionpath(C_70,X_67,X_76);
    C_78:bat[:oid] := sql.tid(X_4,"sys","nation");
    (X_80,r1_130) := algebra.subjoin(X_77,C_78,nil:BAT,nil:BAT,false,nil:lng);
    X_82:bat[:oid] := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",0);
    (X_84,r1_134) := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",2);
    X_86:bat[:oid] := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",1);
    X_87 := sql.projectdelta(C_78,X_82,X_84,r1_134,X_86);
    X_88 := algebra.projection(r1_130,X_87);
    X_91:bat[:str] := sql.bind(X_4,"sys","region","r_name",0);
    C_89:bat[:oid] := sql.tid(X_4,"sys","region");
    C_93 := algebra.subselect(X_91,C_89,"ASIA","ASIA",true,false,false);
    (X_94,r1_155) := algebra.subjoin(X_88,C_93,nil:BAT,nil:BAT,false,nil:lng);
    X_96 := algebra.projection(C_70,X_65);
    X_97:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    X_99:bat[:lng] := algebra.projectionpath(X_94,X_80,X_96,r1_54,C_30,X_97);
    X_100:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_discount",0);
    X_102:bat[:lng] := algebra.projectionpath(X_94,X_80,X_96,r1_54,C_30,X_100);
    X_103:bat[:lng] := batcalc.-(100:lng,X_102);
    X_104:bat[:hge] := batcalc.*(X_99,X_103);
    X_105:bat[:str] := sql.bind(X_4,"sys","nation","n_name",0);
    X_107:bat[:str] := algebra.projectionpath(X_94,r1_130,C_78,X_105);
    (X_108,r1_204,r2_204) := group.subgroupdone(X_107);
    X_111:bat[:hge] := aggr.subsum(X_104,X_108,r1_204,true,true);
    X_115 := algebra.projection(r1_204,X_107);
    (X_112,r1_210,r2_210) := algebra.subsort(X_111,true,false);
    X_116 := bat.setKey(X_115,true);
    X_117 := algebra.projection(r1_210,X_116);
    X_118 := algebra.projection(r1_210,X_111);
    sql.resultSet(X_136,X_138,X_140,X_142,X_144,X_117,X_118);
end user.s4_1;
#inline               actions= 0 time=10 usec 
#candidates           actions= 1 time=126 usec 
#remap                actions= 7 time=724 usec 
#costModel            actions= 1 time=208 usec 
#coercions            actions= 4 time=318 usec 
#evaluate             actions= 6 time=266 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions=11 time=302 usec 
#aliases              actions=20 time=255 usec 
#mergetable           actions= 0 time=221 usec 
#deadcode             actions=23 time=215 usec 
#aliases              actions= 0 time=26 usec 
#constants            actions=26 time=216 usec 
#commonTerms          actions= 0 time=27 usec 
#projectionpath       actions=14 time=189 usec 
#reorder              actions= 1 time=252 usec 
#deadcode             actions=14 time=173 usec 
#reduce               actions=129 time=248 usec 
#matpack              actions= 0 time=10 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=162 usec 
#garbageCollector     actions= 1 time=175 usec 
#total                actions= 1 time=4314 usec 

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

