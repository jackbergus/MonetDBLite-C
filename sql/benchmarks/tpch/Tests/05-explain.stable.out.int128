stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 592 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date,A4:int):void;
    X_204:void := querylog.define("explain select\n\tn_name,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n\tcustomer,\n\torders,\n\tlineitem,\n\tsupplier,\n\tnation,\n\tregion\nwhere\n\tc_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand l_suppkey = s_suppkey\n\tand c_nationkey = s_nationkey\n\tand s_nationkey = n_nationkey\n\tand n_regionkey = r_regionkey\n\tand r_name = \\'ASIA\\'\n\tand o_orderdate >= date \\'1994-01-01\\'\n\tand o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tn_name\norder by\n\trevenue desc;","sequential_pipe",121);
    X_177 := bat.new(nil:oid,nil:str);
    X_185 := bat.append(X_177,"sys.nation");
    X_194 := bat.append(X_185,"sys.L1");
    X_180 := bat.new(nil:oid,nil:str);
    X_187 := bat.append(X_180,"n_name");
    X_196 := bat.append(X_187,"revenue");
    X_181 := bat.new(nil:oid,nil:str);
    X_188 := bat.append(X_181,"char");
    X_198 := bat.append(X_188,"decimal");
    X_182 := bat.new(nil:oid,nil:int);
    X_190 := bat.append(X_182,25);
    X_200 := bat.append(X_190,39);
    X_184 := bat.new(nil:oid,nil:int);
    X_192 := bat.append(X_184,0);
    X_202 := bat.append(X_192,4);
    X_7 := sql.mvc();
    X_11:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",0);
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","orders");
    X_19 := mtime.addmonths(A3,A4);
    X_244 := algebra.subselect(X_11,X_8,A2,X_19,true,false,false);
    (X_14,r1_14) := sql.bind(X_7,"sys","orders","o_orderdate",2);
    X_245 := algebra.subselect(r1_14,nil:bat[:oid,:oid],A2,X_19,true,false,false);
    X_17:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",1);
    X_247 := algebra.subselect(X_17,X_8,A2,X_19,true,false,false);
    X_20 := sql.subdelta(X_244,X_8,X_14,X_245,X_247);
    X_22:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",0);
    (X_24,r1_29) := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",2);
    X_26:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",1);
    X_27 := sql.projectdelta(X_20,X_22,X_24,r1_29,X_26);
    X_28:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    (X_30,r1_37) := algebra.subjoin(X_27,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := algebra.leftfetchjoin(X_30,X_20);
    X_35:bat[:oid,:oid] := sql.tid(X_7,"sys","lineitem");
    X_38:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_41,r1_49) := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_44:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_46 := sql.projectdelta(X_35,X_38,X_41,r1_49,X_44);
    (X_47,r1_56) := algebra.subjoin(X_34,X_46,nil:BAT,nil:BAT,false,nil:lng);
    X_49:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",0);
    (X_51,r1_60) := sql.bind(X_7,"sys","lineitem","l_suppkey",2);
    X_53:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",1);
    X_54 := sql.projectdelta(X_35,X_49,X_51,r1_60,X_53);
    X_55 := algebra.leftfetchjoin(r1_56,X_54);
    X_56:bat[:oid,:wrd] := batmkey.hash(X_55);
    X_58:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",0);
    (X_60,r1_73) := sql.bind(X_7,"sys","customer","c_nationkey",2);
    X_62:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",1);
    X_63 := sql.projectdelta(X_28,X_58,X_60,r1_73,X_62);
    X_64:bat[:oid,:int] := algebra.leftfetchjoinPath(X_47,r1_37,X_63);
    X_65:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_56,22,X_64);
    X_66:bat[:oid,:oid] := sql.tid(X_7,"sys","supplier");
    X_69:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",0);
    (X_71,r1_86) := sql.bind(X_7,"sys","supplier","s_suppkey",2);
    X_73:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",1);
    X_74 := sql.projectdelta(X_66,X_69,X_71,r1_86,X_73);
    X_75:bat[:oid,:wrd] := batmkey.hash(X_74);
    X_76:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",0);
    (X_78,r1_95) := sql.bind(X_7,"sys","supplier","s_nationkey",2);
    X_80:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",1);
    X_81 := sql.projectdelta(X_66,X_76,X_78,r1_95,X_80);
    X_82:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_75,22,X_81);
    (X_83,r1_101) := algebra.subjoin(X_65,X_82,nil:BAT,nil:BAT,false,nil:lng);
    X_88 := algebra.leftfetchjoin(X_83,X_55);
    X_89 := algebra.leftfetchjoin(r1_101,X_74);
    X_90:bat[:oid,:bit] := batcalc.==(X_88,X_89);
    X_92 := algebra.subselect(X_90,true,true,true,true,false);
    X_93 := algebra.leftfetchjoin(X_92,X_83);
    X_94 := algebra.leftfetchjoin(X_93,X_64);
    X_95 := algebra.leftfetchjoin(X_92,r1_101);
    X_96 := algebra.leftfetchjoin(X_95,X_81);
    X_97:bat[:oid,:bit] := batcalc.==(X_94,X_96);
    X_98 := algebra.subselect(X_97,true,true,true,true,false);
    X_99:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_103,r1_126) := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_106:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_107 := sql.projectdelta(X_66,X_99,X_103,r1_126,X_106);
    X_108:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_98,X_95,X_107);
    X_109:bat[:oid,:oid] := sql.tid(X_7,"sys","nation");
    (X_111,r1_135) := algebra.subjoin(X_108,X_109,nil:BAT,nil:BAT,false,nil:lng);
    X_116:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",0);
    (X_118,r1_142) := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",2);
    X_120:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",1);
    X_122 := sql.projectdelta(X_109,X_116,X_118,r1_142,X_120);
    X_123 := algebra.leftfetchjoin(r1_135,X_122);
    X_126:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",0);
    X_124:bat[:oid,:oid] := sql.tid(X_7,"sys","region");
    X_248 := algebra.subselect(X_126,X_124,A1,A1,true,true,false);
    (X_128,r1_153) := sql.bind(X_7,"sys","region","r_name",2);
    X_249 := algebra.subselect(r1_153,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_130:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",1);
    X_251 := algebra.subselect(X_130,X_124,A1,A1,true,true,false);
    X_132 := sql.subdelta(X_248,X_124,X_128,X_249,X_251);
    (X_134,r1_163) := algebra.subjoin(X_123,X_132,nil:BAT,nil:BAT,false,nil:lng);
    X_136 := algebra.leftfetchjoin(X_98,X_93);
    X_137:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",0);
    (X_140,r1_169) := sql.bind(X_7,"sys","lineitem","l_extendedprice",2);
    X_142:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",1);
    X_143 := sql.projectdelta(X_35,X_137,X_140,r1_169,X_142);
    X_144:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_134,X_111,X_136,r1_56,X_143);
    X_146 := calc.lng(A0,15,2);
    X_148:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",0);
    (X_150,r1_188) := sql.bind(X_7,"sys","lineitem","l_discount",2);
    X_153:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",1);
    X_154 := sql.projectdelta(X_35,X_148,X_150,r1_188,X_153);
    X_155:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_134,X_111,X_136,r1_56,X_154);
    X_156:bat[:oid,:lng] := batcalc.-(X_146,X_155);
    X_157:bat[:oid,:hge] := batcalc.*(X_144,X_156);
    X_158:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",0);
    (X_160,r1_204) := sql.bind(X_7,"sys","nation","n_name",2);
    X_162:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",1);
    X_163 := sql.projectdelta(X_109,X_158,X_160,r1_204,X_162);
    X_164:bat[:oid,:str] := algebra.leftfetchjoinPath(X_134,r1_135,X_163);
    (X_165,r1_211,r2_211) := group.subgroupdone(X_164);
    X_168:bat[:oid,:hge] := aggr.subsum(X_157,X_165,r1_211,true,true);
    (X_170,r1_216,r2_216) := algebra.subsort(X_168,true,false);
    X_174:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_216,r1_211,X_164);
    X_175 := algebra.leftfetchjoin(r1_216,X_168);
    sql.resultSet(X_194,X_196,X_198,X_200,X_202,X_174,X_175);
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

