stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 592 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date,A4:int):void;
    X_218:void := querylog.define("explain select\n\tn_name,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n\tcustomer,\n\torders,\n\tlineitem,\n\tsupplier,\n\tnation,\n\tregion\nwhere\n\tc_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand l_suppkey = s_suppkey\n\tand c_nationkey = s_nationkey\n\tand s_nationkey = n_nationkey\n\tand n_regionkey = r_regionkey\n\tand r_name = \\'ASIA\\'\n\tand o_orderdate >= date \\'1994-01-01\\'\n\tand o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tn_name\norder by\n\trevenue desc;","sequential_pipe",123);
    X_190 := bat.new(nil:oid,nil:str);
    X_198 := bat.append(X_190,"sys.nation");
    X_208 := bat.append(X_198,"sys.L1");
    X_193 := bat.new(nil:oid,nil:str);
    X_200 := bat.append(X_193,"n_name");
    X_210 := bat.append(X_200,"revenue");
    X_194 := bat.new(nil:oid,nil:str);
    X_202 := bat.append(X_194,"char");
    X_212 := bat.append(X_202,"decimal");
    X_195 := bat.new(nil:oid,nil:int);
    X_204 := bat.append(X_195,25);
    X_214 := bat.append(X_204,39);
    X_197 := bat.new(nil:oid,nil:int);
    X_206 := bat.append(X_197,0);
    X_216 := bat.append(X_206,4);
    X_7 := sql.mvc();
    X_11:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",0);
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","orders");
    X_19:date := mtime.addmonths(A3,A4);
    X_258 := algebra.subselect(X_11,X_8,A2,X_19,true,false,false);
    (X_14,r1_14) := sql.bind(X_7,"sys","orders","o_orderdate",2);
    X_259 := algebra.subselect(r1_14,nil:bat[:oid,:oid],A2,X_19,true,false,false);
    X_17:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",1);
    X_261 := algebra.subselect(X_17,X_8,A2,X_19,true,false,false);
    X_20 := sql.subdelta(X_258,X_8,X_14,X_259,X_261);
    X_22:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",0);
    (X_24,r1_29) := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",2);
    X_26:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",1);
    X_27 := sql.projectdelta(X_20,X_22,X_24,r1_29,X_26);
    X_28:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    (X_30,r1_37) := algebra.subjoin(X_27,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := X_20;
    X_35 := algebra.leftfetchjoin(X_30,X_34);
    X_36:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineitem");
    X_39:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_42,r1_49) := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_45:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_47 := sql.projectdelta(X_36,X_39,X_42,r1_49,X_45);
    (X_48,r1_56) := algebra.subjoin(X_35,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_50:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",0);
    (X_52,r1_60) := sql.bind(X_7,"sys","lineitem","l_suppkey",2);
    X_54:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",1);
    X_55 := sql.projectdelta(X_36,X_50,X_52,r1_60,X_54);
    X_56 := algebra.leftfetchjoin(r1_56,X_55);
    X_57:bat[:oid,:wrd] := batmkey.hash(X_56);
    X_59:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",0);
    (X_62,r1_74) := sql.bind(X_7,"sys","customer","c_nationkey",2);
    X_64:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",1);
    X_66 := sql.projectdelta(X_28,X_59,X_62,r1_74,X_64);
    X_67:bat[:oid,:int] := algebra.leftfetchjoinPath(X_48,r1_37,X_66);
    X_68:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_57,22,X_67);
    X_69:bat[:oid,:oid] := sql.tid(X_7,"sys","supplier");
    X_71:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",0);
    (X_74,r1_88) := sql.bind(X_7,"sys","supplier","s_suppkey",2);
    X_77:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",1);
    X_79 := sql.projectdelta(X_69,X_71,X_74,r1_88,X_77);
    X_80:bat[:oid,:wrd] := batmkey.hash(X_79);
    X_81:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",0);
    (X_83,r1_99) := sql.bind(X_7,"sys","supplier","s_nationkey",2);
    X_85:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",1);
    X_86 := sql.projectdelta(X_69,X_81,X_83,r1_99,X_85);
    X_87:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_80,22,X_86);
    (X_88,r1_105) := algebra.subjoin(X_68,X_87,nil:BAT,nil:BAT,false,nil:lng);
    X_93 := algebra.leftfetchjoin(X_88,X_56);
    X_94 := algebra.leftfetchjoin(r1_105,X_79);
    X_95:bat[:oid,:bit] := batcalc.==(X_93,X_94);
    X_97 := algebra.subselect(X_95,true,true,true,false,false);
    X_98 := algebra.leftfetchjoin(X_97,X_88);
    X_99 := algebra.leftfetchjoin(X_98,X_67);
    X_100 := algebra.leftfetchjoin(X_97,r1_105);
    X_101 := algebra.leftfetchjoin(X_100,X_86);
    X_102:bat[:oid,:bit] := batcalc.==(X_99,X_101);
    X_103 := algebra.subselect(X_102,true,true,true,false,false);
    X_104:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_109,r1_131) := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_112:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_114 := sql.projectdelta(X_69,X_104,X_109,r1_131,X_112);
    X_115:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_103,X_100,X_114);
    X_116:bat[:oid,:oid] := sql.tid(X_7,"sys","nation");
    (X_118,r1_141) := algebra.subjoin(X_115,X_116,nil:BAT,nil:BAT,false,nil:lng);
    X_123:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",0);
    (X_125,r1_148) := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",2);
    X_127:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",1);
    X_128 := sql.projectdelta(X_116,X_123,X_125,r1_148,X_127);
    X_129 := algebra.leftfetchjoin(r1_141,X_128);
    X_132:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",0);
    X_130:bat[:oid,:oid] := sql.tid(X_7,"sys","region");
    X_262 := algebra.subselect(X_132,X_130,A1,A1,true,false,false);
    (X_134,r1_158) := sql.bind(X_7,"sys","region","r_name",2);
    X_263 := algebra.subselect(r1_158,nil:bat[:oid,:oid],A1,A1,true,false,false);
    X_137:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",1);
    X_265 := algebra.subselect(X_137,X_130,A1,A1,true,false,false);
    X_138 := sql.subdelta(X_262,X_130,X_134,X_263,X_265);
    X_140 := X_138;
    (X_141,r1_168) := algebra.subjoin(X_129,X_140,nil:BAT,nil:BAT,false,nil:lng);
    X_143 := algebra.leftfetchjoin(X_103,X_98);
    X_144:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",0);
    (X_148,r1_175) := sql.bind(X_7,"sys","lineitem","l_extendedprice",2);
    X_151:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",1);
    X_153 := sql.projectdelta(X_36,X_144,X_148,r1_175,X_151);
    X_154:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_141,X_118,X_143,r1_56,X_153);
    X_155 := calc.lng(A0,15,2);
    X_157:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",0);
    (X_160,r1_196) := sql.bind(X_7,"sys","lineitem","l_discount",2);
    X_162:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",1);
    X_163 := sql.projectdelta(X_36,X_157,X_160,r1_196,X_162);
    X_164:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_141,X_118,X_143,r1_56,X_163);
    X_165:bat[:oid,:lng] := batcalc.-(X_155,X_164);
    X_166:bat[:oid,:hge] := batcalc.*(X_154,X_165);
    X_167:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",0);
    (X_171,r1_213) := sql.bind(X_7,"sys","nation","n_name",2);
    X_174:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",1);
    X_176 := sql.projectdelta(X_116,X_167,X_171,r1_213,X_174);
    X_177:bat[:oid,:str] := algebra.leftfetchjoinPath(X_141,r1_141,X_176);
    (X_178,r1_222,r2_222) := group.subgroupdone(X_177);
    X_181:bat[:oid,:hge] := aggr.subsum(X_166,X_178,r1_222,true,true);
    (X_183,r1_227,r2_227) := algebra.subsort(X_181,true,false);
    X_187:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_227,r1_222,X_177);
    X_188 := algebra.leftfetchjoin(r1_227,X_181);
    sql.resultSet(X_208,X_210,X_212,X_214,X_216,X_187,X_188);
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

