stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 592 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date,A4:int):void;
    X_194:void := querylog.define("explain select\n\tn_name,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n\tcustomer,\n\torders,\n\tlineitem,\n\tsupplier,\n\tnation,\n\tregion\nwhere\n\tc_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand l_suppkey = s_suppkey\n\tand c_nationkey = s_nationkey\n\tand s_nationkey = n_nationkey\n\tand n_regionkey = r_regionkey\n\tand r_name = \\'ASIA\\'\n\tand o_orderdate >= date \\'1994-01-01\\'\n\tand o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tn_name\norder by\n\trevenue desc;","sequential_pipe",110);
    X_167 := bat.new(nil:oid,nil:str);
    X_175 := bat.append(X_167,"sys.nation");
    X_184 := bat.append(X_175,"sys.L1");
    X_170 := bat.new(nil:oid,nil:str);
    X_177 := bat.append(X_170,"n_name");
    X_186 := bat.append(X_177,"revenue");
    X_171 := bat.new(nil:oid,nil:str);
    X_178 := bat.append(X_171,"varchar");
    X_188 := bat.append(X_178,"decimal");
    X_172 := bat.new(nil:oid,nil:int);
    X_180 := bat.append(X_172,25);
    X_190 := bat.append(X_180,33);
    X_174 := bat.new(nil:oid,nil:int);
    X_182 := bat.append(X_174,0);
    X_192 := bat.append(X_182,4);
    X_7 := sql.mvc();
    X_11:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",0);
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","orders");
    X_19 := mtime.addmonths(A3,A4);
    X_233 := algebra.subselect(X_11,X_8,A2,X_19,true,false,false);
    (X_14,r1_14) := sql.bind(X_7,"sys","orders","o_orderdate",2);
    X_234 := algebra.subselect(r1_14,nil:bat[:oid,:oid],A2,X_19,true,false,false);
    X_17:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",1);
    X_236 := algebra.subselect(X_17,X_8,A2,X_19,true,false,false);
    X_20 := sql.subdelta(X_233,X_8,X_14,X_234,X_236);
    X_22:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",0);
    (X_24,r1_29) := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",2);
    X_26:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",1);
    X_27 := sql.projectdelta(X_20,X_22,X_24,r1_29,X_26);
    X_28:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    (X_30,r1_37) := algebra.subjoin(X_27,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := X_20;
    X_35 := algebra.leftfetchjoin(X_30,X_34);
    X_36:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineitem");
    X_39:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_42,r1_49) := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_45:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_47 := sql.projectdelta(X_36,X_39,X_42,r1_49,X_45);
    (X_48,r1_56) := algebra.subjoin(X_35,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_50:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_52,r1_60) := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_54:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_55 := sql.projectdelta(X_36,X_50,X_52,r1_60,X_54);
    X_56 := algebra.leftfetchjoin(r1_56,X_55);
    X_57:bat[:oid,:oid]  := sql.tid(X_7,"sys","supplier");
    (X_59,r1_68) := algebra.subjoin(X_56,X_57,nil:BAT,nil:BAT,false,nil:lng);
    X_241 := algebra.leftfetchjoin(X_48,r1_37);
    X_62:bat[:oid,:int]  := sql.bind(X_7,"sys","customer","c_nationkey",0);
    (X_65,r1_74) := sql.bind(X_7,"sys","customer","c_nationkey",2);
    X_67:bat[:oid,:int]  := sql.bind(X_7,"sys","customer","c_nationkey",1);
    X_69 := sql.projectdelta(X_28,X_62,X_65,r1_74,X_67);
    X_70:bat[:oid,:int] := algebra.leftfetchjoinPath(X_59,X_241,X_69);
    X_71:bat[:oid,:int]  := sql.bind(X_7,"sys","supplier","s_nationkey",0);
    (X_74,r1_86) := sql.bind(X_7,"sys","supplier","s_nationkey",2);
    X_77:bat[:oid,:int]  := sql.bind(X_7,"sys","supplier","s_nationkey",1);
    X_79 := sql.projectdelta(X_57,X_71,X_74,r1_86,X_77);
    X_80 := algebra.leftfetchjoin(r1_68,X_79);
    X_81:bat[:oid,:bit]  := batcalc.==(X_70,X_80);
    X_82 := algebra.subselect(X_81,true,true,true,true,false);
    X_84:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_87,r1_103) := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_89:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_90 := sql.projectdelta(X_57,X_84,X_87,r1_103,X_89);
    X_91:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_82,r1_68,X_90);
    X_92:bat[:oid,:oid]  := sql.tid(X_7,"sys","nation");
    (X_95,r1_112) := algebra.subjoin(X_91,X_92,nil:BAT,nil:BAT,false,nil:lng);
    X_100:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",0);
    (X_103,r1_120) := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",2);
    X_106:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",1);
    X_108 := sql.projectdelta(X_92,X_100,X_103,r1_120,X_106);
    X_109 := algebra.leftfetchjoin(r1_112,X_108);
    X_112:bat[:oid,:str]  := sql.bind(X_7,"sys","region","r_name",0);
    X_110:bat[:oid,:oid]  := sql.tid(X_7,"sys","region");
    X_237 := algebra.subselect(X_112,X_110,A1,A1,true,true,false);
    (X_114,r1_132) := sql.bind(X_7,"sys","region","r_name",2);
    X_238 := algebra.subselect(r1_132,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_116:bat[:oid,:str]  := sql.bind(X_7,"sys","region","r_name",1);
    X_240 := algebra.subselect(X_116,X_110,A1,A1,true,true,false);
    X_117 := sql.subdelta(X_237,X_110,X_114,X_238,X_240);
    X_119 := X_117;
    (X_120,r1_141) := algebra.subjoin(X_109,X_119,nil:BAT,nil:BAT,false,nil:lng);
    X_242 := algebra.leftfetchjoin(X_120,X_95);
    X_122 := algebra.leftfetchjoin(X_82,X_59);
    X_123:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_extendedprice",0);
    (X_127,r1_148) := sql.bind(X_7,"sys","lineitem","l_extendedprice",2);
    X_129:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_extendedprice",1);
    X_130 := sql.projectdelta(X_36,X_123,X_127,r1_148,X_129);
    X_131:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_242,X_122,r1_56,X_130);
    X_133 := calc.lng(A0,15,2);
    X_135:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",0);
    (X_138,r1_168) := sql.bind(X_7,"sys","lineitem","l_discount",2);
    X_140:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",1);
    X_142 := sql.projectdelta(X_36,X_135,X_138,r1_168,X_140);
    X_143:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_242,X_122,r1_56,X_142);
    X_144:bat[:oid,:lng] := batcalc.-(X_133,X_143);
    X_145:bat[:oid,:hge] := batcalc.*(X_131,X_144);
    X_146:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",0);
    (X_150,r1_186) := sql.bind(X_7,"sys","nation","n_name",2);
    X_152:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",1);
    X_153 := sql.projectdelta(X_92,X_146,X_150,r1_186,X_152);
    X_154:bat[:oid,:str] := algebra.leftfetchjoinPath(X_120,r1_112,X_153);
    (X_155,r1_193,r2_193) := group.subgroupdone(X_154);
    X_158:bat[:oid,:hge] := aggr.subsum(X_145,X_155,r1_193,true,true);
    (X_160,r1_198,r2_198) := algebra.subsort(X_158,true,false);
    X_164:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_198,r1_193,X_154);
    X_165 := algebra.leftfetchjoin(r1_198,X_158);
    sql.resultSet(X_184,X_186,X_188,X_190,X_192,X_164,X_165);
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

