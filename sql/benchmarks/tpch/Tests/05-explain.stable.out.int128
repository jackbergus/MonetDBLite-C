stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 592 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date,A4:int):void;
    X_216:void := querylog.define("explain select\n\tn_name,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n\tcustomer,\n\torders,\n\tlineitem,\n\tsupplier,\n\tnation,\n\tregion\nwhere\n\tc_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand l_suppkey = s_suppkey\n\tand c_nationkey = s_nationkey\n\tand s_nationkey = n_nationkey\n\tand n_regionkey = r_regionkey\n\tand r_name = \\'ASIA\\'\n\tand o_orderdate >= date \\'1994-01-01\\'\n\tand o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tn_name\norder by\n\trevenue desc;","sequential_pipe",121);
    X_188 := bat.new(nil:oid,nil:str);
    X_196 := bat.append(X_188,"sys.nation");
    X_206 := bat.append(X_196,"sys.L1");
    X_191 := bat.new(nil:oid,nil:str);
    X_198 := bat.append(X_191,"n_name");
    X_208 := bat.append(X_198,"revenue");
    X_192 := bat.new(nil:oid,nil:str);
    X_200 := bat.append(X_192,"char");
    X_210 := bat.append(X_200,"decimal");
    X_193 := bat.new(nil:oid,nil:int);
    X_202 := bat.append(X_193,25);
    X_212 := bat.append(X_202,39);
    X_195 := bat.new(nil:oid,nil:int);
    X_204 := bat.append(X_195,0);
    X_214 := bat.append(X_204,4);
    X_7 := sql.mvc();
    X_11:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",0);
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","orders");
    X_19 := mtime.addmonths(A3,A4);
    X_256 := algebra.subselect(X_11,X_8,A2,X_19,true,false,false);
    (X_14,r1_14) := sql.bind(X_7,"sys","orders","o_orderdate",2);
    X_257 := algebra.subselect(r1_14,nil:bat[:oid,:oid],A2,X_19,true,false,false);
    X_17:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",1);
    X_259 := algebra.subselect(X_17,X_8,A2,X_19,true,false,false);
    X_20 := sql.subdelta(X_256,X_8,X_14,X_257,X_259);
    X_22:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",0);
    (X_24,r1_29) := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",2);
    X_26:bat[:oid,:oid]  := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",1);
    X_27 := sql.projectdelta(X_20,X_22,X_24,r1_29,X_26);
    X_28:bat[:oid,:oid]  := sql.tid(X_7,"sys","customer");
    (X_30,r1_37) := algebra.subjoin(X_27,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := algebra.leftfetchjoin(X_30,X_20);
    X_35:bat[:oid,:oid] := sql.tid(X_7,"sys","lineitem");
    X_38:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_41,r1_49) := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_44:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_46 := sql.projectdelta(X_35,X_38,X_41,r1_49,X_44);
    (X_47,r1_56) := algebra.subjoin(X_34,X_46,nil:BAT,nil:BAT,false,nil:lng);
    X_49:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",0);
    (X_51,r1_60) := sql.bind(X_7,"sys","lineitem","l_suppkey",2);
    X_53:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",1);
    X_54 := sql.projectdelta(X_35,X_49,X_51,r1_60,X_53);
    X_55 := algebra.leftfetchjoin(r1_56,X_54);
    X_56:bat[:oid,:wrd] := batmkey.hash(X_55);
    X_58:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",0);
    (X_61,r1_74) := sql.bind(X_7,"sys","customer","c_nationkey",2);
    X_63:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",1);
    X_65 := sql.projectdelta(X_28,X_58,X_61,r1_74,X_63);
    X_66:bat[:oid,:int] := algebra.leftfetchjoinPath(X_47,r1_37,X_65);
    X_67:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_56,22,X_66);
    X_68:bat[:oid,:oid] := sql.tid(X_7,"sys","supplier");
    X_70:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",0);
    (X_73,r1_88) := sql.bind(X_7,"sys","supplier","s_suppkey",2);
    X_76:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",1);
    X_78 := sql.projectdelta(X_68,X_70,X_73,r1_88,X_76);
    X_79:bat[:oid,:wrd] := batmkey.hash(X_78);
    X_80:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",0);
    (X_82,r1_99) := sql.bind(X_7,"sys","supplier","s_nationkey",2);
    X_84:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",1);
    X_85 := sql.projectdelta(X_68,X_80,X_82,r1_99,X_84);
    X_86:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_79,22,X_85);
    (X_87,r1_105) := algebra.subjoin(X_67,X_86,nil:BAT,nil:BAT,false,nil:lng);
    X_92 := algebra.leftfetchjoin(X_87,X_55);
    X_93 := algebra.leftfetchjoin(r1_105,X_78);
    X_94:bat[:oid,:bit] := batcalc.==(X_92,X_93);
    X_96 := algebra.subselect(X_94,true,true,true,true,false);
    X_97 := algebra.leftfetchjoin(X_96,X_87);
    X_98 := algebra.leftfetchjoin(X_97,X_66);
    X_99 := algebra.leftfetchjoin(X_96,r1_105);
    X_100 := algebra.leftfetchjoin(X_99,X_85);
    X_101:bat[:oid,:bit] := batcalc.==(X_98,X_100);
    X_102 := algebra.subselect(X_101,true,true,true,true,false);
    X_103:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_108,r1_131) := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_111:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_113 := sql.projectdelta(X_68,X_103,X_108,r1_131,X_111);
    X_114:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_102,X_99,X_113);
    X_115:bat[:oid,:oid] := sql.tid(X_7,"sys","nation");
    (X_117,r1_141) := algebra.subjoin(X_114,X_115,nil:BAT,nil:BAT,false,nil:lng);
    X_122:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",0);
    (X_124,r1_148) := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",2);
    X_126:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",1);
    X_127 := sql.projectdelta(X_115,X_122,X_124,r1_148,X_126);
    X_128 := algebra.leftfetchjoin(r1_141,X_127);
    X_131:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",0);
    X_129:bat[:oid,:oid] := sql.tid(X_7,"sys","region");
    X_260 := algebra.subselect(X_131,X_129,A1,A1,true,true,false);
    (X_133,r1_158) := sql.bind(X_7,"sys","region","r_name",2);
    X_261 := algebra.subselect(r1_158,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_136:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",1);
    X_263 := algebra.subselect(X_136,X_129,A1,A1,true,true,false);
    X_137 := sql.subdelta(X_260,X_129,X_133,X_261,X_263);
    (X_139,r1_168) := algebra.subjoin(X_128,X_137,nil:BAT,nil:BAT,false,nil:lng);
    X_141 := algebra.leftfetchjoin(X_102,X_97);
    X_142:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",0);
    (X_146,r1_175) := sql.bind(X_7,"sys","lineitem","l_extendedprice",2);
    X_149:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",1);
    X_151 := sql.projectdelta(X_35,X_142,X_146,r1_175,X_149);
    X_152:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_139,X_117,X_141,r1_56,X_151);
    X_153 := calc.lng(A0,15,2);
    X_155:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",0);
    (X_158,r1_196) := sql.bind(X_7,"sys","lineitem","l_discount",2);
    X_160:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",1);
    X_161 := sql.projectdelta(X_35,X_155,X_158,r1_196,X_160);
    X_162:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_139,X_117,X_141,r1_56,X_161);
    X_163:bat[:oid,:lng] := batcalc.-(X_153,X_162);
    X_164:bat[:oid,:hge] := batcalc.*(X_152,X_163);
    X_165:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",0);
    (X_169,r1_213) := sql.bind(X_7,"sys","nation","n_name",2);
    X_172:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",1);
    X_174 := sql.projectdelta(X_115,X_165,X_169,r1_213,X_172);
    X_175:bat[:oid,:str] := algebra.leftfetchjoinPath(X_139,r1_141,X_174);
    (X_176,r1_222,r2_222) := group.subgroupdone(X_175);
    X_179:bat[:oid,:hge] := aggr.subsum(X_164,X_176,r1_222,true,true);
    (X_181,r1_227,r2_227) := algebra.subsort(X_179,true,false);
    X_185:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_227,r1_222,X_175);
    X_186 := algebra.leftfetchjoin(r1_227,X_179);
    sql.resultSet(X_206,X_208,X_210,X_212,X_214,X_185,X_186);
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

