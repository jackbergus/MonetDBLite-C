stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 592 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date,A4:int):void;
    X_199:void := querylog.define("explain select\n\tn_name,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n\tcustomer,\n\torders,\n\tlineitem,\n\tsupplier,\n\tnation,\n\tregion\nwhere\n\tc_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand l_suppkey = s_suppkey\n\tand c_nationkey = s_nationkey\n\tand s_nationkey = n_nationkey\n\tand n_regionkey = r_regionkey\n\tand r_name = \\'ASIA\\'\n\tand o_orderdate >= date \\'1994-01-01\\'\n\tand o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tn_name\norder by\n\trevenue desc;","sequential_pipe",121);
    X_171 := bat.new(nil:oid,nil:str);
    X_179 := bat.append(X_171,"sys.nation");
    X_189 := bat.append(X_179,"sys.L1");
    X_174 := bat.new(nil:oid,nil:str);
    X_181 := bat.append(X_174,"n_name");
    X_191 := bat.append(X_181,"revenue");
    X_175 := bat.new(nil:oid,nil:str);
    X_183 := bat.append(X_175,"char");
    X_193 := bat.append(X_183,"decimal");
    X_176 := bat.new(nil:oid,nil:int);
    X_185 := bat.append(X_176,25);
    X_195 := bat.append(X_185,39);
    X_178 := bat.new(nil:oid,nil:int);
    X_187 := bat.append(X_178,0);
    X_197 := bat.append(X_187,4);
    X_7 := sql.mvc();
    X_11:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",0);
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","orders");
    X_19 := mtime.addmonths(A3,A4);
    X_256 := algebra.subselect(X_11,X_8,A2,X_19,true,false,false);
    (X_14,r1_14) := sql.bind(X_7,"sys","orders","o_orderdate",2);
    X_257 := algebra.subselect(r1_14,nil:bat[:oid,:oid],A2,X_19,true,false,false);
    X_17:bat[:oid,:date]  := sql.bind(X_7,"sys","orders","o_orderdate",1);
    X_259 := algebra.subselect(X_17,X_8,A2,X_19,true,false,false);
    X_20 := sql.subdelta(X_256,X_8,X_14,X_257,X_259);
    X_23:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",0);
    (X_25,r1_30) := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",2);
    X_27:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","orders","orders_o_custkey_fkey",1);
    X_28 := sql.projectdelta(X_20,X_23,X_25,r1_30,X_27);
    X_29:bat[:oid,:oid] := sql.tid(X_7,"sys","customer");
    (X_31,r1_38) := algebra.subjoin(X_28,X_29,nil:BAT,nil:BAT,false,nil:lng);
    X_36 := algebra.leftfetchjoin(X_31,X_20);
    X_37:bat[:oid,:oid] := sql.tid(X_7,"sys","lineitem");
    X_39:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_41,r1_49) := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_43:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_44 := sql.projectdelta(X_37,X_39,X_41,r1_49,X_43);
    (X_45,r1_54) := algebra.subjoin(X_36,X_44,nil:BAT,nil:BAT,false,nil:lng);
    X_47:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",0);
    (X_49,r1_58) := sql.bind(X_7,"sys","lineitem","l_suppkey",2);
    X_51:bat[:oid,:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",1);
    X_52 := sql.projectdelta(X_37,X_47,X_49,r1_58,X_51);
    X_53 := algebra.leftfetchjoin(r1_54,X_52);
    X_54:bat[:oid,:wrd] := batmkey.hash(X_53);
    X_56:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",0);
    (X_58,r1_71) := sql.bind(X_7,"sys","customer","c_nationkey",2);
    X_60:bat[:oid,:int] := sql.bind(X_7,"sys","customer","c_nationkey",1);
    X_61 := sql.projectdelta(X_29,X_56,X_58,r1_71,X_60);
    X_62:bat[:oid,:int] := algebra.leftfetchjoinPath(X_45,r1_38,X_61);
    X_63:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_54,22,X_62);
    X_64:bat[:oid,:oid] := sql.tid(X_7,"sys","supplier");
    X_66:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",0);
    (X_68,r1_83) := sql.bind(X_7,"sys","supplier","s_suppkey",2);
    X_70:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_suppkey",1);
    X_71 := sql.projectdelta(X_64,X_66,X_68,r1_83,X_70);
    X_72:bat[:oid,:wrd] := batmkey.hash(X_71);
    X_73:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",0);
    (X_75,r1_92) := sql.bind(X_7,"sys","supplier","s_nationkey",2);
    X_77:bat[:oid,:int] := sql.bind(X_7,"sys","supplier","s_nationkey",1);
    X_78 := sql.projectdelta(X_64,X_73,X_75,r1_92,X_77);
    X_79:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_72,22,X_78);
    (X_80,r1_98) := algebra.subjoin(X_63,X_79,nil:BAT,nil:BAT,false,nil:lng);
    X_86 := algebra.leftfetchjoin(X_80,X_53);
    X_87 := algebra.leftfetchjoin(r1_98,X_71);
    X_88:bat[:oid,:bit] := batcalc.==(X_86,X_87);
    X_90 := algebra.subselect(X_88,true,true,true,false,false);
    X_91 := algebra.leftfetchjoin(X_90,X_80);
    X_92 := algebra.leftfetchjoin(X_91,X_62);
    X_93 := algebra.leftfetchjoin(X_90,r1_98);
    X_94 := algebra.leftfetchjoin(X_93,X_78);
    X_95:bat[:oid,:bit] := batcalc.==(X_92,X_94);
    X_96 := algebra.subselect(X_95,true,true,true,false,false);
    X_97:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_99,r1_122) := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_101:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_102 := sql.projectdelta(X_64,X_97,X_99,r1_122,X_101);
    X_103:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_96,X_93,X_102);
    X_104:bat[:oid,:oid] := sql.tid(X_7,"sys","nation");
    (X_106,r1_130) := algebra.subjoin(X_103,X_104,nil:BAT,nil:BAT,false,nil:lng);
    X_108:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",0);
    (X_110,r1_134) := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",2);
    X_112:bat[:oid,:oid] := sql.bind_idxbat(X_7,"sys","nation","nation_n_regionkey_fkey",1);
    X_113 := sql.projectdelta(X_104,X_108,X_110,r1_134,X_112);
    X_114 := algebra.leftfetchjoin(r1_130,X_113);
    X_117:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",0);
    X_115:bat[:oid,:oid] := sql.tid(X_7,"sys","region");
    X_260 := algebra.subselect(X_117,X_115,A1,A1,true,false,false);
    (X_119,r1_144) := sql.bind(X_7,"sys","region","r_name",2);
    X_261 := algebra.subselect(r1_144,nil:bat[:oid,:oid],A1,A1,true,false,false);
    X_121:bat[:oid,:str] := sql.bind(X_7,"sys","region","r_name",1);
    X_263 := algebra.subselect(X_121,X_115,A1,A1,true,false,false);
    X_122 := sql.subdelta(X_260,X_115,X_119,X_261,X_263);
    (X_126,r1_155) := algebra.subjoin(X_114,X_122,nil:BAT,nil:BAT,false,nil:lng);
    X_131 := algebra.leftfetchjoin(X_96,X_91);
    X_132:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",0);
    (X_134,r1_163) := sql.bind(X_7,"sys","lineitem","l_extendedprice",2);
    X_136:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_extendedprice",1);
    X_137 := sql.projectdelta(X_37,X_132,X_134,r1_163,X_136);
    X_138:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_126,X_106,X_131,r1_54,X_137);
    X_140 := calc.lng(A0,15,2);
    X_142:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",0);
    (X_144,r1_182) := sql.bind(X_7,"sys","lineitem","l_discount",2);
    X_146:bat[:oid,:lng] := sql.bind(X_7,"sys","lineitem","l_discount",1);
    X_147 := sql.projectdelta(X_37,X_142,X_144,r1_182,X_146);
    X_148:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_126,X_106,X_131,r1_54,X_147);
    X_149:bat[:oid,:lng] := batcalc.-(X_140,X_148);
    X_150:bat[:oid,:hge] := batcalc.*(X_138,X_149);
    X_151:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",0);
    (X_153,r1_197) := sql.bind(X_7,"sys","nation","n_name",2);
    X_155:bat[:oid,:str] := sql.bind(X_7,"sys","nation","n_name",1);
    X_156 := sql.projectdelta(X_104,X_151,X_153,r1_197,X_155);
    X_157:bat[:oid,:str] := algebra.leftfetchjoinPath(X_126,r1_130,X_156);
    (X_158,r1_204,r2_204) := group.subgroupdone(X_157);
    X_161:bat[:oid,:hge] := aggr.subsum(X_150,X_158,r1_204,true,true);
    (X_164,r1_210,r2_210) := algebra.subsort(X_161,true,false);
    X_168:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_210,r1_204,X_157);
    X_169 := algebra.leftfetchjoin(r1_210,X_161);
    sql.resultSet(X_189,X_191,X_193,X_195,X_197,X_168,X_169);
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

