stdout of test '16-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "16-explain.SQL.py" "16-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#explain select
#	p_brand,
#	p_type,
#	p_size,
#	count(distinct ps_suppkey) as supplier_cnt
#from
#	partsupp,
#	part
#where
#	p_partkey = ps_partkey
#	and p_brand <> 'Brand#45'
#	and p_type not like 'MEDIUM POLISHED%'
#	and p_size in (49, 14, 23, 45, 19, 3, 36, 9)
#	and ps_suppkey not in (
#		select
#			s_suppkey
#		from
#			supplier
#		where
#			s_comment like '%Customer%Complaints%'
#	)
#group by
#	p_brand,
#	p_type,
#	p_size
#order by
#	supplier_cnt desc,
#	p_brand,
#	p_type,
#	p_size;
% .explain # table_name
% mal # name
% clob # type
% 577 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:int,A3:int,A4:int,A5:int,A6:int,A7:int,A8:int,A9:int,A10:str):void;
    X_13 := sql.mvc();
    X_14:bat[:oid,:oid]  := sql.tid(X_13,"sys","partsupp");
    X_17:bat[:oid,:int]  := sql.bind(X_13,"sys","partsupp","ps_suppkey",0);
    (X_20,r1_20) := sql.bind(X_13,"sys","partsupp","ps_suppkey",2);
    X_23:bat[:oid,:int]  := sql.bind(X_13,"sys","partsupp","ps_suppkey",1);
    X_25 := sql.delta(X_17,X_20,r1_20,X_23);
    X_26 := algebra.leftfetchjoin(X_14,X_25);
    X_27 := bat.mirror(X_26);
    X_28:bat[:oid,:oid]  := sql.tid(X_13,"sys","supplier");
    X_30:bat[:oid,:str]  := sql.bind(X_13,"sys","supplier","s_comment",0);
    (X_32,r1_32) := sql.bind(X_13,"sys","supplier","s_comment",2);
    X_34:bat[:oid,:str]  := sql.bind(X_13,"sys","supplier","s_comment",1);
    X_35 := sql.delta(X_30,X_32,r1_32,X_34);
    X_36 := algebra.leftfetchjoin(X_28,X_35);
    X_38 := algebra.likesubselect(X_36,A10,"",false);
    X_40:bat[:oid,:int]  := sql.bind(X_13,"sys","supplier","s_suppkey",0);
    (X_42,r1_44) := sql.bind(X_13,"sys","supplier","s_suppkey",2);
    X_44:bat[:oid,:int]  := sql.bind(X_13,"sys","supplier","s_suppkey",1);
    X_45 := sql.delta(X_40,X_42,r1_44,X_44);
    X_46:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_38,X_28,X_45);
    (X_47,r1_50) := algebra.join(X_26,X_46);
    X_49 := algebra.tdiff(X_27,X_47);
    X_50:bat[:oid,:oid]  := sql.bind_idxbat(X_13,"sys","partsupp","partsupp_ps_partkey_fkey",0);
    (X_55,r1_58) := sql.bind_idxbat(X_13,"sys","partsupp","partsupp_ps_partkey_fkey",2);
    X_58:bat[:oid,:oid]  := sql.bind_idxbat(X_13,"sys","partsupp","partsupp_ps_partkey_fkey",1);
    X_60 := sql.delta(X_50,X_55,r1_58,X_58);
    X_61:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_49,X_14,X_60);
    X_62:bat[:oid,:oid]  := sql.tid(X_13,"sys","part");
    X_64:bat[:oid,:int]  := sql.bind(X_13,"sys","part","p_size",0);
    (X_66,r1_70) := sql.bind(X_13,"sys","part","p_size",2);
    X_68:bat[:oid,:int]  := sql.bind(X_13,"sys","part","p_size",1);
    X_69 := sql.delta(X_64,X_66,r1_70,X_68);
    X_70 := algebra.leftfetchjoin(X_62,X_69);
    X_71:bat[:oid,:str]  := sql.bind(X_13,"sys","part","p_type",0);
    (X_73,r1_78) := sql.bind(X_13,"sys","part","p_type",2);
    X_75:bat[:oid,:str]  := sql.bind(X_13,"sys","part","p_type",1);
    X_76 := sql.delta(X_71,X_73,r1_78,X_75);
    X_77 := algebra.leftfetchjoin(X_62,X_76);
    X_79:bat[:oid,:str]  := sql.bind(X_13,"sys","part","p_brand",0);
    (X_82,r1_89) := sql.bind(X_13,"sys","part","p_brand",2);
    X_84:bat[:oid,:str]  := sql.bind(X_13,"sys","part","p_brand",1);
    X_85 := sql.delta(X_79,X_82,r1_89,X_84);
    X_86 := algebra.leftfetchjoin(X_62,X_85);
    X_87 := algebra.subselect(X_86,A0,A0,true,true,true);
    X_89 := algebra.likesubselect(X_77,X_87,A1,"",true);
    X_90 := algebra.subselect(X_70,X_89,A2,A2,true,true,false);
    X_92 := algebra.subselect(X_70,X_89,A3,A3,true,true,false);
    X_93 := bat.mergecand(X_90,X_92);
    X_94 := algebra.subselect(X_70,X_89,A4,A4,true,true,false);
    X_95 := bat.mergecand(X_93,X_94);
    X_96 := algebra.subselect(X_70,X_89,A5,A5,true,true,false);
    X_97 := bat.mergecand(X_95,X_96);
    X_98 := algebra.subselect(X_70,X_89,A6,A6,true,true,false);
    X_99 := bat.mergecand(X_97,X_98);
    X_100 := algebra.subselect(X_70,X_89,A7,A7,true,true,false);
    X_101 := bat.mergecand(X_99,X_100);
    X_102 := algebra.subselect(X_70,X_89,A8,A8,true,true,false);
    X_103 := bat.mergecand(X_101,X_102);
    X_104 := algebra.subselect(X_70,X_89,A9,A9,true,true,false);
    X_105 := bat.mergecand(X_103,X_104);
    X_106 := algebra.leftfetchjoin(X_105,X_62);
    (X_107,r1_122) := algebra.join(X_61,X_106);
    X_207 := algebra.leftfetchjoin(r1_122,X_105);
    X_109:bat[:oid,:str]  := algebra.leftfetchjoin(X_207,X_77);
    X_110:bat[:oid,:str]  := algebra.leftfetchjoin(X_207,X_86);
    X_111:bat[:oid,:int]  := algebra.leftfetchjoin(X_207,X_70);
    X_112:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_107,X_49,X_26);
    (X_113,r1_132,r2_132) := group.subgroup(X_112);
    (X_116,r1_135,r2_135) := group.subgroup(X_111,X_113);
    (X_119,r1_138,r2_138) := group.subgroup(X_110,X_116);
    (X_122,r1_141,r2_141) := group.subgroupdone(X_109,X_119);
    X_125 := algebra.leftfetchjoin(r1_141,X_109);
    X_126 := algebra.leftfetchjoin(r1_141,X_110);
    X_127 := algebra.leftfetchjoin(r1_141,X_111);
    X_140 := algebra.leftfetchjoin(r1_141,X_112);
    (X_128,r1_147,r2_147) := group.subgroup(X_127);
    (X_131,r1_150,r2_150) := group.subgroup(X_126,X_128);
    (X_134,r1_153,r2_153) := group.subgroupdone(X_125,X_131);
    X_137 := algebra.leftfetchjoin(r1_153,X_127);
    X_138 := algebra.leftfetchjoin(r1_153,X_125);
    X_139 := algebra.leftfetchjoin(r1_153,X_126);
    X_141:bat[:oid,:wrd]  := aggr.subcount(X_140,X_134,r1_153,true);
    (X_143,r1_162,r2_162) := algebra.subsort(X_141,true,false);
    (X_147,r1_166,r2_166) := algebra.subsort(X_139,r1_162,r2_162,false,false);
    (X_150,r1_169,r2_169) := algebra.subsort(X_138,r1_166,r2_166,false,false);
    (X_153,r1_172,r2_172) := algebra.subsort(X_137,r1_169,r2_169,false,false);
    X_156 := algebra.leftfetchjoin(r1_172,X_139);
    X_159 := algebra.leftfetchjoin(r1_172,X_141);
    X_158 := algebra.leftfetchjoin(r1_172,X_137);
    X_157 := algebra.leftfetchjoin(r1_172,X_138);
    X_160 := sql.resultSet(4,1,X_156);
    sql.rsColumn(X_160,"sys.part","p_brand","varchar",10,0,X_156);
    sql.rsColumn(X_160,"sys.part","p_type","varchar",25,0,X_157);
    sql.rsColumn(X_160,"sys.part","p_size","int",32,0,X_158);
    sql.rsColumn(X_160,"sys.L4","supplier_cnt","wrd",32,0,X_159);
    X_180 := io.stdout();
    sql.exportResult(X_180,X_160);
end s2_1;
# querylog.define("explain select\n\tp_brand,\n\tp_type,\n\tp_size,\n\tcount(distinct ps_suppkey) as supplier_cnt\nfrom\n\tpartsupp,\n\tpart\nwhere\n\tp_partkey = ps_partkey\n\tand p_brand <> \\'Brand#45\\'\n\tand p_type not like \\'MEDIUM POLISHED%\\'\n\tand p_size in (49, 14, 23, 45, 19, 3, 36, 9)\n\tand ps_suppkey not in (\n\t\tselect\n\t\t\ts_suppkey\n\t\tfrom\n\t\t\tsupplier\n\t\twhere\n\t\t\ts_comment like \\'%Customer%Complaints%\\'\n\t)\ngroup by\n\tp_brand,\n\tp_type,\n\tp_size\norder by\n\tsupplier_cnt desc,\n\tp_brand,\n\tp_type,\n\tp_size;","sequential_pipe")

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

