stdout of test '03-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "03-explain.SQL.py" "03-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_orderkey,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	o_orderdate,
#	o_shippriority
#from
#	customer,
#	orders,
#	lineitem
#where
#	c_mktsegment = 'BUILDING'
#	and c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate < date '1995-03-15'
#	and l_shipdate > date '1995-03-15'
#group by
#	l_orderkey,
#	o_orderdate,
#	o_shippriority
#order by
#	revenue desc,
#	o_orderdate
#limit 10;
% .explain # table_name
% mal # name
% clob # type
% 499 # length
function user.s4_1():void;
    X_234:void := querylog.define("explain select\n l_orderkey,\n sum(l_extendedprice * (1 - l_discount)) as revenue,\n o_orderdate,\n o_shippriority\nfrom\n customer,\n orders,\n lineitem\nwhere\n c_mktsegment = \\'BUILDING\\'\n and c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and o_orderdate < date \\'1995-03-15\\'\n and l_shipdate > date \\'1995-03-15\\'\ngroup by\n l_orderkey,\n o_orderdate,\n o_shippriority\norder by\n revenue desc,\n o_orderdate\nlimit 10;","sequential_pipe",78);
    X_193 := bat.new(nil:str);
    X_200 := bat.append(X_193,"sys.lineitem");
    X_210 := bat.append(X_200,"sys.L4");
    X_220 := bat.append(X_210,"sys.orders");
    X_228 := bat.append(X_220,"sys.orders");
    X_195 := bat.new(nil:str);
    X_202 := bat.append(X_195,"l_orderkey");
    X_212 := bat.append(X_202,"revenue");
    X_222 := bat.append(X_212,"o_orderdate");
    X_229 := bat.append(X_222,"o_shippriority");
    X_196 := bat.new(nil:str);
    X_204 := bat.append(X_196,"int");
    X_214 := bat.append(X_204,"decimal");
    X_224 := bat.append(X_214,"date");
    X_231 := bat.append(X_224,"int");
    X_197 := bat.new(nil:int);
    X_206 := bat.append(X_197,32);
    X_216 := bat.append(X_206,39);
    X_226 := bat.append(X_216,0);
    X_232 := bat.append(X_226,32);
    X_199 := bat.new(nil:int);
    X_208 := bat.append(X_199,0);
    X_218 := bat.append(X_208,4);
    X_227 := bat.append(X_218,0);
    X_233 := bat.append(X_227,0);
    X_0 := sql.mvc();
    X_6:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_3:bat[:oid] := sql.tid(X_0,"sys","orders");
    C_31 := algebra.thetasubselect(X_6,C_3,"1995-03-15","<");
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_26,X_27:bat[:oid]) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_25:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_36 := sql.projectdelta(C_31,X_23,X_26,X_27,X_25);
    X_39:bat[:str] := sql.bind(X_0,"sys","customer","c_mktsegment",0);
    C_37:bat[:oid] := sql.tid(X_0,"sys","customer");
    C_47 := algebra.subselect(X_39,C_37,"BUILDING","BUILDING",true,false,false);
    (X_53,X_54) := algebra.subjoin(X_36,C_47,nil:BAT,nil:BAT,false,nil:lng);
    X_60 := algebra.projection(X_53,C_31);
    X_87:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    C_64:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    C_102 := algebra.thetasubselect(X_87,C_64,"1995-03-15",">");
    X_94:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_97,X_98:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_96:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_108 := sql.projectdelta(C_102,X_94,X_97,X_98,X_96);
    (X_109,X_110) := algebra.subjoin(X_60,X_108,nil:BAT,nil:BAT,false,nil:lng);
    X_115:bat[:date] := algebra.projectionpath(X_109,X_53,C_31,X_6);
    X_16:bat[:int] := sql.bind(X_0,"sys","orders","o_shippriority",0);
    X_116:bat[:int] := algebra.projectionpath(X_109,X_53,C_31,X_16);
    X_66:bat[:int] := sql.bind(X_0,"sys","lineitem","l_orderkey",0);
    X_121:bat[:int] := algebra.projectionpath(X_110,C_102,X_66);
    (X_138,X_139,X_140) := group.subgroup(X_121);
    (X_141,X_142,X_143) := group.subgroup(X_116,X_138);
    (X_144,X_145,X_146) := group.subgroupdone(X_115,X_141);
    X_148 := algebra.projection(X_145,X_115);
    X_73:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_122:bat[:lng] := algebra.projectionpath(X_110,C_102,X_73);
    X_80:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_123:bat[:lng] := algebra.projectionpath(X_110,C_102,X_80);
    X_134:bat[:lng] := batcalc.-(100:lng,X_123);
    X_136:bat[:hge] := batcalc.*(X_122,X_134);
    X_150:bat[:hge] := aggr.subsum(X_136,X_144,X_145,true,true);
    (C_156,X_157) := algebra.firstn(X_150,10,false,false);
    C_162 := algebra.firstn(X_148,C_156,X_157,10,true,false);
    X_165 := algebra.projection(C_162,X_148);
    X_164 := algebra.projection(C_162,X_150);
    (X_171,X_172,X_173) := algebra.subsort(X_164,true,false);
    (X_174,X_175,X_176) := algebra.subsort(X_165,X_172,X_173,false,false);
    X_177:bat[:int] := algebra.projectionpath(X_175,C_162,X_145,X_121);
    X_187 := algebra.subslice(X_177,0,9:lng);
    X_191:bat[:int] := algebra.projectionpath(X_187,X_175,C_162,X_145,X_116);
    X_188 := algebra.projection(X_187,X_177);
    X_189:bat[:hge] := algebra.projectionpath(X_187,X_175,X_164);
    X_190:bat[:date] := algebra.projectionpath(X_187,X_175,X_165);
    sql.resultSet(X_228,X_229,X_231,X_232,X_233,X_188,X_189,X_190,X_191);
end user.s4_1;
#inline               actions= 0 time=9 usec 
#candidates           actions= 1 time=101 usec 
#remap                actions= 3 time=411 usec 
#costModel            actions= 1 time=141 usec 
#coercions            actions= 5 time=204 usec 
#evaluate             actions= 9 time=205 usec 
#emptybind            actions= 0 time=8 usec 
#pushselect           actions=16 time=168 usec 
#aliases              actions=27 time=139 usec 
#mergetable           actions= 0 time=144 usec 
#deadcode             actions=17 time=129 usec 
#aliases              actions= 0 time=19 usec 
#constants            actions=18 time=143 usec 
#commonTerms          actions= 0 time=19 usec 
#projectionpath       actions=14 time=127 usec 
#reorder              actions= 1 time=170 usec 
#deadcode             actions=14 time=113 usec 
#reduce               actions=124 time=176 usec 
#matpack              actions= 0 time=8 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=111 usec 
#garbageCollector     actions= 1 time=128 usec 
#total                actions= 1 time=2805 usec 

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

