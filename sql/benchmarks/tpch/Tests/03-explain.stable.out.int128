stdout of test '03-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "03-explain.SQL.py" "03-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_orderkey,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	o_orderdate,
#	o_shippriority
#from
#	customer,
#	orders,
#	lineitem
#where
#	c_mktsegment = 'BUILDING'
#	and c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate < date '1995-03-15'
#	and l_shipdate > date '1995-03-15'
#group by
#	l_orderkey,
#	o_orderdate,
#	o_shippriority
#order by
#	revenue desc,
#	o_orderdate
#limit 10;
% .explain # table_name
% mal # name
% clob # type
% 517 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date):void;
    X_171:void := querylog.define("explain select\n\tl_orderkey,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue,\n\to_orderdate,\n\to_shippriority\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\tc_mktsegment = \\'BUILDING\\'\n\tand c_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand o_orderdate < date \\'1995-03-15\\'\n\tand l_shipdate > date \\'1995-03-15\\'\ngroup by\n\tl_orderkey,\n\to_orderdate,\n\to_shippriority\norder by\n\trevenue desc,\n\to_orderdate\nlimit 10;","sequential_pipe",107);
    X_129 := bat.new(nil:oid,nil:str);
    X_137 := bat.append(X_129,"sys.lineitem");
    X_147 := bat.append(X_137,"sys.L1");
    X_157 := bat.append(X_147,"sys.orders");
    X_165 := bat.append(X_157,"sys.orders");
    X_132 := bat.new(nil:oid,nil:str);
    X_139 := bat.append(X_132,"l_orderkey");
    X_149 := bat.append(X_139,"revenue");
    X_159 := bat.append(X_149,"o_orderdate");
    X_166 := bat.append(X_159,"o_shippriority");
    X_133 := bat.new(nil:oid,nil:str);
    X_141 := bat.append(X_133,"int");
    X_151 := bat.append(X_141,"decimal");
    X_161 := bat.append(X_151,"date");
    X_168 := bat.append(X_161,"int");
    X_134 := bat.new(nil:oid,nil:int);
    X_143 := bat.append(X_134,32);
    X_153 := bat.append(X_143,39);
    X_163 := bat.append(X_153,0);
    X_169 := bat.append(X_163,32);
    X_136 := bat.new(nil:oid,nil:int);
    X_145 := bat.append(X_136,0);
    X_155 := bat.append(X_145,4);
    X_164 := bat.append(X_155,0);
    X_170 := bat.append(X_164,0);
    X_6 := sql.mvc();
    X_10:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",0);
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","orders");
    X_210 := algebra.thetasubselect(X_10,X_7,A2,"<");
    (X_13,r1_13) := sql.bind(X_6,"sys","orders","o_orderdate",2);
    X_211 := algebra.thetasubselect(r1_13,nil:bat[:oid,:oid],A2,"<");
    X_16:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",1);
    X_213 := algebra.thetasubselect(X_16,X_7,A2,"<");
    X_18 := sql.subdelta(X_210,X_7,X_13,X_211,X_213);
    X_20:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",0);
    (X_22,r1_25) := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",2);
    X_24:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",1);
    X_25 := sql.projectdelta(X_18,X_20,X_22,r1_25,X_24);
    X_28:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",0);
    X_26:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_214 := algebra.subselect(X_28,X_26,A1,A1,true,true,false);
    (X_30,r1_35) := sql.bind(X_6,"sys","customer","c_mktsegment",2);
    X_215 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_32:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",1);
    X_217 := algebra.subselect(X_32,X_26,A1,A1,true,true,false);
    X_33 := sql.subdelta(X_214,X_26,X_30,X_215,X_217);
    (X_37,r1_46) := algebra.subjoin(X_25,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_42 := algebra.leftfetchjoin(X_37,X_18);
    X_45:bat[:oid,:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",0);
    X_43:bat[:oid,:oid] := sql.tid(X_6,"sys","lineitem");
    X_218 := algebra.thetasubselect(X_45,X_43,A3,">");
    (X_47,r1_57) := sql.bind(X_6,"sys","lineitem","l_shipdate",2);
    X_219 := algebra.thetasubselect(r1_57,nil:bat[:oid,:oid],A3,">");
    X_49:bat[:oid,:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",1);
    X_221 := algebra.thetasubselect(X_49,X_43,A3,">");
    X_50 := sql.subdelta(X_218,X_43,X_47,X_219,X_221);
    X_52:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_54,r1_67) := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_56:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_57 := sql.projectdelta(X_50,X_52,X_54,r1_67,X_56);
    (X_58,r1_73) := algebra.subjoin(X_42,X_57,nil:BAT,nil:BAT,false,nil:lng);
    X_60 := sql.projectdelta(X_18,X_10,X_13,r1_13,X_16);
    X_61:bat[:oid,:date] := algebra.leftfetchjoinPath(X_58,X_37,X_60);
    X_62:bat[:oid,:int] := sql.bind(X_6,"sys","orders","o_shippriority",0);
    (X_64,r1_80) := sql.bind(X_6,"sys","orders","o_shippriority",2);
    X_66:bat[:oid,:int] := sql.bind(X_6,"sys","orders","o_shippriority",1);
    X_67 := sql.projectdelta(X_18,X_62,X_64,r1_80,X_66);
    X_68:bat[:oid,:int] := algebra.leftfetchjoinPath(X_58,X_37,X_67);
    X_69:bat[:oid,:int] := sql.bind(X_6,"sys","lineitem","l_orderkey",0);
    (X_71,r1_90) := sql.bind(X_6,"sys","lineitem","l_orderkey",2);
    X_73:bat[:oid,:int] := sql.bind(X_6,"sys","lineitem","l_orderkey",1);
    X_74 := sql.projectdelta(X_50,X_69,X_71,r1_90,X_73);
    X_75 := algebra.leftfetchjoin(r1_73,X_74);
    (X_76,r1_97,r2_97) := group.subgroup(X_75);
    (X_79,r1_100,r2_100) := group.subgroup(X_68,X_76);
    (X_82,r1_103,r2_103) := group.subgroupdone(X_61,X_79);
    X_85 := algebra.leftfetchjoin(r1_103,X_61);
    X_86:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",0);
    (X_88,r1_109) := sql.bind(X_6,"sys","lineitem","l_extendedprice",2);
    X_90:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",1);
    X_91 := sql.projectdelta(X_50,X_86,X_88,r1_109,X_90);
    X_92 := algebra.leftfetchjoin(r1_73,X_91);
    X_94 := calc.lng(A0,15,2);
    X_96:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_discount",0);
    (X_98,r1_126) := sql.bind(X_6,"sys","lineitem","l_discount",2);
    X_100:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_discount",1);
    X_101 := sql.projectdelta(X_50,X_96,X_98,r1_126,X_100);
    X_102 := algebra.leftfetchjoin(r1_73,X_101);
    X_103:bat[:oid,:lng] := batcalc.-(X_94,X_102);
    X_104:bat[:oid,:hge] := batcalc.*(X_92,X_103);
    X_105:bat[:oid,:hge] := aggr.subsum(X_104,X_82,r1_103,true,true);
    (X_109,r1_145) := algebra.firstn(X_105,10:wrd,false,false);
    X_113 := algebra.firstn(X_85,X_109,r1_145,10:wrd,true,false);
    X_114 := algebra.leftfetchjoin(X_113,X_85);
    X_115 := algebra.leftfetchjoin(X_113,X_105);
    (X_116,r1_154,r2_154) := algebra.subsort(X_115,true,false);
    (X_119,r1_157,r2_157) := algebra.subsort(X_114,r1_154,r2_154,false,false);
    X_122:bat[:oid,:int] := algebra.leftfetchjoinPath(r1_157,X_113,r1_103,X_75);
    X_123 := algebra.subslice(X_122,0,9:wrd);
    X_127:bat[:oid,:int] := algebra.leftfetchjoinPath(X_123,r1_157,X_113,r1_103,X_68);
    X_124 := algebra.leftfetchjoin(X_123,X_122);
    X_125:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_123,r1_157,X_115);
    X_126:bat[:oid,:date] := algebra.leftfetchjoinPath(X_123,r1_157,X_114);
    sql.resultSet(X_165,X_166,X_168,X_169,X_170,X_124,X_125,X_126,X_127);
end user.s2_1;

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

