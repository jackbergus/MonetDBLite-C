stdout of test '03-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "03-explain.SQL.py" "03-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_orderkey,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	o_orderdate,
#	o_shippriority
#from
#	customer,
#	orders,
#	lineitem
#where
#	c_mktsegment = 'BUILDING'
#	and c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate < date '1995-03-15'
#	and l_shipdate > date '1995-03-15'
#group by
#	l_orderkey,
#	o_orderdate,
#	o_shippriority
#order by
#	revenue desc,
#	o_orderdate
#limit 10;
% .explain # table_name
% mal # name
% clob # type
% 499 # length
function user.s4_1():void;
    X_130:void := querylog.define("explain select\n l_orderkey,\n sum(l_extendedprice * (1 - l_discount)) as revenue,\n o_orderdate,\n o_shippriority\nfrom\n customer,\n orders,\n lineitem\nwhere\n c_mktsegment = \\'BUILDING\\'\n and c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and o_orderdate < date \\'1995-03-15\\'\n and l_shipdate > date \\'1995-03-15\\'\ngroup by\n l_orderkey,\n o_orderdate,\n o_shippriority\norder by\n revenue desc,\n o_orderdate\nlimit 10;","sequential_pipe",78);
    X_92 := bat.new(nil:oid,nil:str);
    X_100 := bat.append(X_92,"sys.lineitem");
    X_108 := bat.append(X_100,"sys.L1");
    X_118 := bat.append(X_108,"sys.orders");
    X_125 := bat.append(X_118,"sys.orders");
    X_95 := bat.new(nil:oid,nil:str);
    X_102 := bat.append(X_95,"l_orderkey");
    X_110 := bat.append(X_102,"revenue");
    X_120 := bat.append(X_110,"o_orderdate");
    X_126 := bat.append(X_120,"o_shippriority");
    X_96 := bat.new(nil:oid,nil:str);
    X_103 := bat.append(X_96,"int");
    X_112 := bat.append(X_103,"decimal");
    X_121 := bat.append(X_112,"date");
    X_127 := bat.append(X_121,"int");
    X_97 := bat.new(nil:oid,nil:int);
    X_105 := bat.append(X_97,32);
    X_114 := bat.append(X_105,39);
    X_123 := bat.append(X_114,0);
    X_128 := bat.append(X_123,32);
    X_99 := bat.new(nil:oid,nil:int);
    X_107 := bat.append(X_99,0);
    X_116 := bat.append(X_107,4);
    X_124 := bat.append(X_116,0);
    X_129 := bat.append(X_124,0);
    X_3 := sql.mvc();
    X_7:bat[:date] := sql.bind(X_3,"sys","orders","o_orderdate",0);
    C_4:bat[:oid] := sql.tid(X_3,"sys","orders");
    C_12 := algebra.thetasubselect(X_7,C_4,"1995-03-15","<");
    X_14:bat[:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_16,r1_24) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_18:bat[:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_19 := sql.projectdelta(C_12,X_14,X_16,r1_24,X_18);
    X_22:bat[:str] := sql.bind(X_3,"sys","customer","c_mktsegment",0);
    C_20:bat[:oid] := sql.tid(X_3,"sys","customer");
    C_24 := algebra.subselect(X_22,C_20,"BUILDING","BUILDING",true,false,false);
    (X_27,r1_45) := algebra.subjoin(X_19,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_31 := algebra.projection(X_27,C_12);
    X_34:bat[:date] := sql.bind(X_3,"sys","lineitem","l_shipdate",0);
    C_32:bat[:oid] := sql.tid(X_3,"sys","lineitem");
    C_36 := algebra.thetasubselect(X_34,C_32,"1995-03-15",">");
    X_38:bat[:oid] := sql.bind_idxbat(X_3,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_40,r1_66) := sql.bind_idxbat(X_3,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_42:bat[:oid] := sql.bind_idxbat(X_3,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_43 := sql.projectdelta(C_36,X_38,X_40,r1_66,X_42);
    (X_44,r1_72) := algebra.subjoin(X_31,X_43,nil:BAT,nil:BAT,false,nil:lng);
    X_46:bat[:date] := algebra.projectionpath(X_44,X_27,C_12,X_7);
    X_47:bat[:int] := sql.bind(X_3,"sys","orders","o_shippriority",0);
    X_49:bat[:int] := algebra.projectionpath(X_44,X_27,C_12,X_47);
    X_50:bat[:int] := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    X_52:bat[:int] := algebra.projectionpath(r1_72,C_36,X_50);
    (X_53,r1_96,r2_96) := group.subgroup(X_52);
    (X_56,r1_99,r2_99) := group.subgroup(X_49,X_53);
    (X_59,r1_102,r2_102) := group.subgroupdone(X_46,X_56);
    X_62 := algebra.projection(r1_102,X_46);
    X_63:bat[:lng] := sql.bind(X_3,"sys","lineitem","l_extendedprice",0);
    X_65:bat[:lng] := algebra.projectionpath(r1_72,C_36,X_63);
    X_66:bat[:lng] := sql.bind(X_3,"sys","lineitem","l_discount",0);
    X_68:bat[:lng] := algebra.projectionpath(r1_72,C_36,X_66);
    X_69:bat[:lng] := batcalc.-(100:lng,X_68);
    X_70:bat[:hge] := batcalc.*(X_65,X_69);
    X_71:bat[:hge] := aggr.subsum(X_70,X_59,r1_102,true,true);
    (C_74,r1_144) := algebra.firstn(X_71,10,false,false);
    C_76 := algebra.firstn(X_62,C_74,r1_144,10,true,false);
    X_77 := algebra.projection(C_76,X_62);
    X_78 := algebra.projection(C_76,X_71);
    (X_79,r1_153,r2_153) := algebra.subsort(X_78,true,false);
    (X_82,r1_156,r2_156) := algebra.subsort(X_77,r1_153,r2_153,false,false);
    X_85:bat[:int] := algebra.projectionpath(r1_156,C_76,r1_102,X_52);
    X_86 := algebra.subslice(X_85,0,9:wrd);
    X_90:bat[:int] := algebra.projectionpath(X_86,r1_156,C_76,r1_102,X_49);
    X_87 := algebra.projection(X_86,X_85);
    X_88:bat[:hge] := algebra.projectionpath(X_86,r1_156,X_78);
    X_89:bat[:date] := algebra.projectionpath(X_86,r1_156,X_77);
    sql.resultSet(X_125,X_126,X_127,X_128,X_129,X_87,X_88,X_89,X_90);
end user.s4_1;
#inline               actions= 0 time=9 usec 
#candidates           actions= 1 time=101 usec 
#remap                actions= 3 time=411 usec 
#costModel            actions= 1 time=141 usec 
#coercions            actions= 5 time=204 usec 
#evaluate             actions= 9 time=205 usec 
#emptybind            actions= 0 time=8 usec 
#pushselect           actions=16 time=168 usec 
#aliases              actions=27 time=139 usec 
#mergetable           actions= 0 time=144 usec 
#deadcode             actions=17 time=129 usec 
#aliases              actions= 0 time=19 usec 
#constants            actions=18 time=143 usec 
#commonTerms          actions= 0 time=19 usec 
#projectionpath       actions=14 time=127 usec 
#reorder              actions= 1 time=170 usec 
#deadcode             actions=14 time=113 usec 
#reduce               actions=124 time=176 usec 
#matpack              actions= 0 time=8 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=111 usec 
#garbageCollector     actions= 1 time=128 usec 
#total                actions= 1 time=2805 usec 

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

