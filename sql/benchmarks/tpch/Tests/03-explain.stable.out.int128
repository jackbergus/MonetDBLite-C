stdout of test '03-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "03-explain.SQL.py" "03-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_orderkey,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	o_orderdate,
#	o_shippriority
#from
#	customer,
#	orders,
#	lineitem
#where
#	c_mktsegment = 'BUILDING'
#	and c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate < date '1995-03-15'
#	and l_shipdate > date '1995-03-15'
#group by
#	l_orderkey,
#	o_orderdate,
#	o_shippriority
#order by
#	revenue desc,
#	o_orderdate
#limit 10;
% .explain # table_name
% mal # name
% clob # type
% 516 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date):void;
    X_165:void  := querylog.define("explain select\n\tl_orderkey,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue,\n\to_orderdate,\n\to_shippriority\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\tc_mktsegment = \\'BUILDING\\'\n\tand c_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand o_orderdate < date \\'1995-03-15\\'\n\tand l_shipdate > date \\'1995-03-15\\'\ngroup by\n\tl_orderkey,\n\to_orderdate,\n\to_shippriority\norder by\n\trevenue desc,\n\to_orderdate\nlimit 10;","sequential_pipe",94);
    X_6 := sql.mvc();
    X_10:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",0);
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","orders");
    X_194 := algebra.thetasubselect(X_10,X_7,A2,"<");
    (X_13,r1_13) := sql.bind(X_6,"sys","orders","o_orderdate",2);
    X_195 := algebra.thetasubselect(r1_13,nil:bat[:oid,:oid],A2,"<");
    X_16:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",1);
    X_197 := algebra.thetasubselect(X_16,X_7,A2,"<");
    X_18 := sql.subdelta(X_194,X_7,X_13,X_195,X_197);
    X_20:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",0);
    (X_22,r1_25) := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",2);
    X_24:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",1);
    X_25 := sql.projectdelta(X_18,X_20,X_22,r1_25,X_24);
    X_28:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",0);
    X_26:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_198 := algebra.subselect(X_28,X_26,A1,A1,true,true,false);
    (X_30,r1_35) := sql.bind(X_6,"sys","customer","c_mktsegment",2);
    X_199 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_32:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",1);
    X_201 := algebra.subselect(X_32,X_26,A1,A1,true,true,false);
    X_33 := sql.subdelta(X_198,X_26,X_30,X_199,X_201);
    X_36 := X_33;
    (X_37,r1_45) := algebra.subjoin(X_25,X_36,nil:BAT,nil:BAT,false,nil:lng);
    X_41 := X_18;
    X_42 := algebra.leftfetchjoin(X_37,X_41);
    X_46:bat[:oid,:date]  := sql.bind(X_6,"sys","lineitem","l_shipdate",0);
    X_43:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineitem");
    X_202 := algebra.thetasubselect(X_46,X_43,A3,">");
    (X_49,r1_57) := sql.bind(X_6,"sys","lineitem","l_shipdate",2);
    X_203 := algebra.thetasubselect(r1_57,nil:bat[:oid,:oid],A3,">");
    X_52:bat[:oid,:date]  := sql.bind(X_6,"sys","lineitem","l_shipdate",1);
    X_205 := algebra.thetasubselect(X_52,X_43,A3,">");
    X_54 := sql.subdelta(X_202,X_43,X_49,X_203,X_205);
    X_56:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_58,r1_69) := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_60:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_61 := sql.projectdelta(X_54,X_56,X_58,r1_69,X_60);
    (X_62,r1_75) := algebra.subjoin(X_42,X_61,nil:BAT,nil:BAT,false,nil:lng);
    X_206 := algebra.leftfetchjoin(X_62,X_37);
    X_65 := sql.projectdelta(X_18,X_10,X_13,r1_13,X_16);
    X_66:bat[:oid,:date]  := algebra.leftfetchjoin(X_206,X_65);
    X_67:bat[:oid,:int]  := sql.bind(X_6,"sys","orders","o_shippriority",0);
    (X_70,r1_84) := sql.bind(X_6,"sys","orders","o_shippriority",2);
    X_73:bat[:oid,:int]  := sql.bind(X_6,"sys","orders","o_shippriority",1);
    X_74 := sql.projectdelta(X_18,X_67,X_70,r1_84,X_73);
    X_75:bat[:oid,:int]  := algebra.leftfetchjoin(X_206,X_74);
    X_76:bat[:oid,:int]  := sql.bind(X_6,"sys","lineitem","l_orderkey",0);
    (X_80,r1_97) := sql.bind(X_6,"sys","lineitem","l_orderkey",2);
    X_83:bat[:oid,:int]  := sql.bind(X_6,"sys","lineitem","l_orderkey",1);
    X_85 := sql.projectdelta(X_54,X_76,X_80,r1_97,X_83);
    X_86 := algebra.leftfetchjoin(r1_75,X_85);
    (X_87,r1_106,r2_106) := group.subgroup(X_86);
    (X_90,r1_109,r2_109) := group.subgroup(X_75,X_87);
    (X_93,r1_112,r2_112) := group.subgroupdone(X_66,X_90);
    X_96 := algebra.leftfetchjoin(r1_112,X_66);
    X_97:bat[:oid,:lng]  := sql.bind(X_6,"sys","lineitem","l_extendedprice",0);
    (X_99,r1_118) := sql.bind(X_6,"sys","lineitem","l_extendedprice",2);
    X_102:bat[:oid,:lng]  := sql.bind(X_6,"sys","lineitem","l_extendedprice",1);
    X_103 := sql.projectdelta(X_54,X_97,X_99,r1_118,X_102);
    X_104 := algebra.leftfetchjoin(r1_75,X_103);
    X_105:bat[:oid,:hge]  := batcalc.hge(2,X_104,33,2);
    X_107 := calc.lng(A0,15,2);
    X_110:bat[:oid,:lng]  := sql.bind(X_6,"sys","lineitem","l_discount",0);
    (X_114,r1_138) := sql.bind(X_6,"sys","lineitem","l_discount",2);
    X_116:bat[:oid,:lng]  := sql.bind(X_6,"sys","lineitem","l_discount",1);
    X_118 := sql.projectdelta(X_54,X_110,X_114,r1_138,X_116);
    X_119 := algebra.leftfetchjoin(r1_75,X_118);
    X_120:bat[:oid,:lng]  := batcalc.-(X_107,X_119);
    X_121:bat[:oid,:hge] := batcalc.*(X_105,X_120);
    X_122:bat[:oid,:hge] := aggr.subsum(X_121,X_93,r1_112,true,true);
    (X_125,r1_157) := algebra.firstn(X_122,10:wrd,false,false);
    X_128 := algebra.firstn(X_96,X_125,r1_157,10:wrd,true,false);
    X_129 := algebra.leftfetchjoin(X_128,X_96);
    X_130 := algebra.leftfetchjoin(X_128,X_122);
    (X_131,r1_165,r2_165) := algebra.subsort(X_130,true,false);
    (X_134,r1_168,r2_168) := algebra.subsort(X_129,r1_165,r2_165,false,false);
    X_207 := algebra.leftfetchjoin(r1_168,X_128);
    X_137:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_207,r1_112,X_86);
    X_139 := algebra.subslice(X_137,0,9:wrd);
    X_208 := algebra.leftfetchjoin(X_139,r1_168);
    X_143:bat[:oid,:int] := algebra.leftfetchjoinPath(X_208,X_128,r1_112,X_75);
    X_140 := algebra.leftfetchjoin(X_139,X_137);
    X_142:bat[:oid,:date]  := algebra.leftfetchjoin(X_208,X_129);
    X_141:bat[:oid,:hge]  := algebra.leftfetchjoin(X_208,X_130);
    X_144 := sql.resultSet(4,1,X_140);
    sql.rsColumn(X_144,"sys.lineitem","l_orderkey","int",32,0,X_140);
    sql.rsColumn(X_144,"sys.L1","revenue","decimal",33,4,X_141);
    sql.rsColumn(X_144,"sys.orders","o_orderdate","date",0,0,X_142);
    sql.rsColumn(X_144,"sys.orders","o_shippriority","int",32,0,X_143);
    X_163 := io.stdout();
    sql.exportResult(X_163,X_144);
end user.s2_1;

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

