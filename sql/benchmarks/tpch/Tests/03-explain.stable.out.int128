stdout of test '03-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "03-explain.SQL.py" "03-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_orderkey,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	o_orderdate,
#	o_shippriority
#from
#	customer,
#	orders,
#	lineitem
#where
#	c_mktsegment = 'BUILDING'
#	and c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate < date '1995-03-15'
#	and l_shipdate > date '1995-03-15'
#group by
#	l_orderkey,
#	o_orderdate,
#	o_shippriority
#order by
#	revenue desc,
#	o_orderdate
#limit 10;
% .explain # table_name
% mal # name
% clob # type
% 517 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date):void;
    X_177:void := querylog.define("explain select\n\tl_orderkey,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue,\n\to_orderdate,\n\to_shippriority\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\tc_mktsegment = \\'BUILDING\\'\n\tand c_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand o_orderdate < date \\'1995-03-15\\'\n\tand l_shipdate > date \\'1995-03-15\\'\ngroup by\n\tl_orderkey,\n\to_orderdate,\n\to_shippriority\norder by\n\trevenue desc,\n\to_orderdate\nlimit 10;","sequential_pipe",107);
    X_135 := bat.new(nil:oid,nil:str);
    X_143 := bat.append(X_135,"sys.lineitem");
    X_153 := bat.append(X_143,"sys.L1");
    X_163 := bat.append(X_153,"sys.orders");
    X_171 := bat.append(X_163,"sys.orders");
    X_138 := bat.new(nil:oid,nil:str);
    X_145 := bat.append(X_138,"l_orderkey");
    X_155 := bat.append(X_145,"revenue");
    X_165 := bat.append(X_155,"o_orderdate");
    X_172 := bat.append(X_165,"o_shippriority");
    X_139 := bat.new(nil:oid,nil:str);
    X_147 := bat.append(X_139,"int");
    X_157 := bat.append(X_147,"decimal");
    X_167 := bat.append(X_157,"date");
    X_174 := bat.append(X_167,"int");
    X_140 := bat.new(nil:oid,nil:int);
    X_149 := bat.append(X_140,32);
    X_159 := bat.append(X_149,39);
    X_169 := bat.append(X_159,0);
    X_175 := bat.append(X_169,32);
    X_142 := bat.new(nil:oid,nil:int);
    X_151 := bat.append(X_142,0);
    X_161 := bat.append(X_151,4);
    X_170 := bat.append(X_161,0);
    X_176 := bat.append(X_170,0);
    X_6 := sql.mvc();
    X_10:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",0);
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","orders");
    X_206 := algebra.thetasubselect(X_10,X_7,A2,"<");
    (X_13,r1_13) := sql.bind(X_6,"sys","orders","o_orderdate",2);
    X_207 := algebra.thetasubselect(r1_13,nil:bat[:oid,:oid],A2,"<");
    X_16:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",1);
    X_209 := algebra.thetasubselect(X_16,X_7,A2,"<");
    X_18 := sql.subdelta(X_206,X_7,X_13,X_207,X_209);
    X_20:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",0);
    (X_22,r1_25) := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",2);
    X_24:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",1);
    X_25 := sql.projectdelta(X_18,X_20,X_22,r1_25,X_24);
    X_28:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",0);
    X_26:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_210 := algebra.subselect(X_28,X_26,A1,A1,true,true,false);
    (X_30,r1_35) := sql.bind(X_6,"sys","customer","c_mktsegment",2);
    X_211 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_32:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",1);
    X_213 := algebra.subselect(X_32,X_26,A1,A1,true,true,false);
    X_33 := sql.subdelta(X_210,X_26,X_30,X_211,X_213);
    (X_36,r1_45) := algebra.subjoin(X_25,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_40 := algebra.leftfetchjoin(X_36,X_18);
    X_44:bat[:oid,:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",0);
    X_41:bat[:oid,:oid] := sql.tid(X_6,"sys","lineitem");
    X_214 := algebra.thetasubselect(X_44,X_41,A3,">");
    (X_47,r1_57) := sql.bind(X_6,"sys","lineitem","l_shipdate",2);
    X_215 := algebra.thetasubselect(r1_57,nil:bat[:oid,:oid],A3,">");
    X_50:bat[:oid,:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",1);
    X_217 := algebra.thetasubselect(X_50,X_41,A3,">");
    X_52 := sql.subdelta(X_214,X_41,X_47,X_215,X_217);
    X_54:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_56,r1_69) := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_59 := sql.projectdelta(X_52,X_54,X_56,r1_69,X_58);
    (X_60,r1_75) := algebra.subjoin(X_40,X_59,nil:BAT,nil:BAT,false,nil:lng);
    X_63 := sql.projectdelta(X_18,X_10,X_13,r1_13,X_16);
    X_64:bat[:oid,:date] := algebra.leftfetchjoinPath(X_60,X_36,X_63);
    X_65:bat[:oid,:int] := sql.bind(X_6,"sys","orders","o_shippriority",0);
    (X_68,r1_84) := sql.bind(X_6,"sys","orders","o_shippriority",2);
    X_71:bat[:oid,:int] := sql.bind(X_6,"sys","orders","o_shippriority",1);
    X_72 := sql.projectdelta(X_18,X_65,X_68,r1_84,X_71);
    X_73:bat[:oid,:int] := algebra.leftfetchjoinPath(X_60,X_36,X_72);
    X_74:bat[:oid,:int] := sql.bind(X_6,"sys","lineitem","l_orderkey",0);
    (X_76,r1_95) := sql.bind(X_6,"sys","lineitem","l_orderkey",2);
    X_78:bat[:oid,:int] := sql.bind(X_6,"sys","lineitem","l_orderkey",1);
    X_79 := sql.projectdelta(X_52,X_74,X_76,r1_95,X_78);
    X_80 := algebra.leftfetchjoin(r1_75,X_79);
    (X_81,r1_102,r2_102) := group.subgroup(X_80);
    (X_84,r1_105,r2_105) := group.subgroup(X_73,X_81);
    (X_87,r1_108,r2_108) := group.subgroupdone(X_64,X_84);
    X_90 := algebra.leftfetchjoin(r1_108,X_64);
    X_91:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",0);
    (X_93,r1_114) := sql.bind(X_6,"sys","lineitem","l_extendedprice",2);
    X_95:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",1);
    X_96 := sql.projectdelta(X_52,X_91,X_93,r1_114,X_95);
    X_97 := algebra.leftfetchjoin(r1_75,X_96);
    X_99 := calc.lng(A0,15,2);
    X_101:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_discount",0);
    (X_106,r1_134) := sql.bind(X_6,"sys","lineitem","l_discount",2);
    X_108:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_discount",1);
    X_109 := sql.projectdelta(X_52,X_101,X_106,r1_134,X_108);
    X_110 := algebra.leftfetchjoin(r1_75,X_109);
    X_111:bat[:oid,:lng] := batcalc.-(X_99,X_110);
    X_112:bat[:oid,:hge] := batcalc.*(X_97,X_111);
    X_113:bat[:oid,:hge] := aggr.subsum(X_112,X_87,r1_108,true,true);
    (X_116,r1_152) := algebra.firstn(X_113,10:wrd,false,false);
    X_119 := algebra.firstn(X_90,X_116,r1_152,10:wrd,true,false);
    X_120 := algebra.leftfetchjoin(X_119,X_90);
    X_121 := algebra.leftfetchjoin(X_119,X_113);
    (X_122,r1_160,r2_160) := algebra.subsort(X_121,true,false);
    (X_125,r1_163,r2_163) := algebra.subsort(X_120,r1_160,r2_160,false,false);
    X_128:bat[:oid,:int] := algebra.leftfetchjoinPath(r1_163,X_119,r1_108,X_80);
    X_129 := algebra.subslice(X_128,0,9:wrd);
    X_133:bat[:oid,:int] := algebra.leftfetchjoinPath(X_129,r1_163,X_119,r1_108,X_73);
    X_130 := algebra.leftfetchjoin(X_129,X_128);
    X_131:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_129,r1_163,X_121);
    X_132:bat[:oid,:date] := algebra.leftfetchjoinPath(X_129,r1_163,X_120);
    sql.resultSet(X_171,X_172,X_174,X_175,X_176,X_130,X_131,X_132,X_133);
end user.s2_1;

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

