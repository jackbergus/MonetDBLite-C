stdout of test '03-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "03-explain.SQL.py" "03-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_orderkey,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	o_orderdate,
#	o_shippriority
#from
#	customer,
#	orders,
#	lineitem
#where
#	c_mktsegment = 'BUILDING'
#	and c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate < date '1995-03-15'
#	and l_shipdate > date '1995-03-15'
#group by
#	l_orderkey,
#	o_orderdate,
#	o_shippriority
#order by
#	revenue desc,
#	o_orderdate
#limit 10;
% .explain # table_name
% mal # name
% clob # type
% 517 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:date,A3:date):void;
    X_182:void := querylog.define("explain select\n\tl_orderkey,\n\tsum(l_extendedprice * (1 - l_discount)) as revenue,\n\to_orderdate,\n\to_shippriority\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\tc_mktsegment = \\'BUILDING\\'\n\tand c_custkey = o_custkey\n\tand l_orderkey = o_orderkey\n\tand o_orderdate < date \\'1995-03-15\\'\n\tand l_shipdate > date \\'1995-03-15\\'\ngroup by\n\tl_orderkey,\n\to_orderdate,\n\to_shippriority\norder by\n\trevenue desc,\n\to_orderdate\nlimit 10;","sequential_pipe",107);
    X_140 := bat.new(nil:oid,nil:str);
    X_148 := bat.append(X_140,"sys.lineitem");
    X_158 := bat.append(X_148,"sys.L1");
    X_168 := bat.append(X_158,"sys.orders");
    X_176 := bat.append(X_168,"sys.orders");
    X_143 := bat.new(nil:oid,nil:str);
    X_150 := bat.append(X_143,"l_orderkey");
    X_160 := bat.append(X_150,"revenue");
    X_170 := bat.append(X_160,"o_orderdate");
    X_177 := bat.append(X_170,"o_shippriority");
    X_144 := bat.new(nil:oid,nil:str);
    X_152 := bat.append(X_144,"int");
    X_162 := bat.append(X_152,"decimal");
    X_172 := bat.append(X_162,"date");
    X_179 := bat.append(X_172,"int");
    X_145 := bat.new(nil:oid,nil:int);
    X_154 := bat.append(X_145,32);
    X_164 := bat.append(X_154,39);
    X_174 := bat.append(X_164,0);
    X_180 := bat.append(X_174,32);
    X_147 := bat.new(nil:oid,nil:int);
    X_156 := bat.append(X_147,0);
    X_166 := bat.append(X_156,4);
    X_175 := bat.append(X_166,0);
    X_181 := bat.append(X_175,0);
    X_6 := sql.mvc();
    X_10:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",0);
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","orders");
    X_211 := algebra.thetasubselect(X_10,X_7,A2,"<");
    (X_13,r1_13) := sql.bind(X_6,"sys","orders","o_orderdate",2);
    X_212 := algebra.thetasubselect(r1_13,nil:bat[:oid,:oid],A2,"<");
    X_16:bat[:oid,:date]  := sql.bind(X_6,"sys","orders","o_orderdate",1);
    X_214 := algebra.thetasubselect(X_16,X_7,A2,"<");
    X_18 := sql.subdelta(X_211,X_7,X_13,X_212,X_214);
    X_20:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",0);
    (X_22,r1_25) := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",2);
    X_24:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",1);
    X_25 := sql.projectdelta(X_18,X_20,X_22,r1_25,X_24);
    X_28:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",0);
    X_26:bat[:oid,:oid]  := sql.tid(X_6,"sys","customer");
    X_215 := algebra.subselect(X_28,X_26,A1,A1,true,true,false);
    (X_30,r1_35) := sql.bind(X_6,"sys","customer","c_mktsegment",2);
    X_216 := algebra.subselect(r1_35,nil:bat[:oid,:oid],A1,A1,true,true,false);
    X_32:bat[:oid,:str]  := sql.bind(X_6,"sys","customer","c_mktsegment",1);
    X_218 := algebra.subselect(X_32,X_26,A1,A1,true,true,false);
    X_33 := sql.subdelta(X_215,X_26,X_30,X_216,X_218);
    (X_36,r1_45) := algebra.subjoin(X_25,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_40 := algebra.leftfetchjoin(X_36,X_18);
    X_44:bat[:oid,:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",0);
    X_41:bat[:oid,:oid] := sql.tid(X_6,"sys","lineitem");
    X_219 := algebra.thetasubselect(X_44,X_41,A3,">");
    (X_47,r1_57) := sql.bind(X_6,"sys","lineitem","l_shipdate",2);
    X_220 := algebra.thetasubselect(r1_57,nil:bat[:oid,:oid],A3,">");
    X_50:bat[:oid,:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",1);
    X_222 := algebra.thetasubselect(X_50,X_41,A3,">");
    X_52 := sql.subdelta(X_219,X_41,X_47,X_220,X_222);
    X_54:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_56,r1_69) := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_59 := sql.projectdelta(X_52,X_54,X_56,r1_69,X_58);
    (X_60,r1_75) := algebra.subjoin(X_40,X_59,nil:BAT,nil:BAT,false,nil:lng);
    X_63 := sql.projectdelta(X_18,X_10,X_13,r1_13,X_16);
    X_64:bat[:oid,:date] := algebra.leftfetchjoinPath(X_60,X_36,X_63);
    X_65:bat[:oid,:int] := sql.bind(X_6,"sys","orders","o_shippriority",0);
    (X_68,r1_84) := sql.bind(X_6,"sys","orders","o_shippriority",2);
    X_71:bat[:oid,:int] := sql.bind(X_6,"sys","orders","o_shippriority",1);
    X_72 := sql.projectdelta(X_18,X_65,X_68,r1_84,X_71);
    X_73:bat[:oid,:int] := algebra.leftfetchjoinPath(X_60,X_36,X_72);
    X_74:bat[:oid,:int] := sql.bind(X_6,"sys","lineitem","l_orderkey",0);
    (X_78,r1_97) := sql.bind(X_6,"sys","lineitem","l_orderkey",2);
    X_81:bat[:oid,:int] := sql.bind(X_6,"sys","lineitem","l_orderkey",1);
    X_83 := sql.projectdelta(X_52,X_74,X_78,r1_97,X_81);
    X_84 := algebra.leftfetchjoin(r1_75,X_83);
    (X_85,r1_106,r2_106) := group.subgroup(X_84);
    (X_88,r1_109,r2_109) := group.subgroup(X_73,X_85);
    (X_91,r1_112,r2_112) := group.subgroupdone(X_64,X_88);
    X_94 := algebra.leftfetchjoin(r1_112,X_64);
    X_95:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",0);
    (X_97,r1_118) := sql.bind(X_6,"sys","lineitem","l_extendedprice",2);
    X_100:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",1);
    X_101 := sql.projectdelta(X_52,X_95,X_97,r1_118,X_100);
    X_102 := algebra.leftfetchjoin(r1_75,X_101);
    X_103 := calc.lng(A0,15,2);
    X_106:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_discount",0);
    (X_110,r1_138) := sql.bind(X_6,"sys","lineitem","l_discount",2);
    X_112:bat[:oid,:lng] := sql.bind(X_6,"sys","lineitem","l_discount",1);
    X_114 := sql.projectdelta(X_52,X_106,X_110,r1_138,X_112);
    X_115 := algebra.leftfetchjoin(r1_75,X_114);
    X_116:bat[:oid,:lng] := batcalc.-(X_103,X_115);
    X_117:bat[:oid,:hge] := batcalc.*(X_102,X_116);
    X_118:bat[:oid,:hge] := aggr.subsum(X_117,X_91,r1_112,true,true);
    (X_121,r1_157) := algebra.firstn(X_118,10:wrd,false,false);
    X_124 := algebra.firstn(X_94,X_121,r1_157,10:wrd,true,false);
    X_125 := algebra.leftfetchjoin(X_124,X_94);
    X_126 := algebra.leftfetchjoin(X_124,X_118);
    (X_127,r1_165,r2_165) := algebra.subsort(X_126,true,false);
    (X_130,r1_168,r2_168) := algebra.subsort(X_125,r1_165,r2_165,false,false);
    X_133:bat[:oid,:int] := algebra.leftfetchjoinPath(r1_168,X_124,r1_112,X_84);
    X_134 := algebra.subslice(X_133,0,9:wrd);
    X_138:bat[:oid,:int] := algebra.leftfetchjoinPath(X_134,r1_168,X_124,r1_112,X_73);
    X_135 := algebra.leftfetchjoin(X_134,X_133);
    X_136:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_134,r1_168,X_126);
    X_137:bat[:oid,:date] := algebra.leftfetchjoinPath(X_134,r1_168,X_125);
    sql.resultSet(X_176,X_177,X_179,X_180,X_181,X_135,X_136,X_137,X_138);
end user.s2_1;

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

