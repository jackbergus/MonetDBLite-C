stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 768 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:date,A3:date,A4:int,A5:str):void;
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","supplier");
    X_12:bat[:oid,:int]  := sql.bind(X_8,"sys","supplier","s_suppkey",0);
    (X_15,r1_15) := sql.bind(X_8,"sys","supplier","s_suppkey",2);
    X_18:bat[:oid,:int]  := sql.bind(X_8,"sys","supplier","s_suppkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22 := bat.mirror(X_21);
    X_23:bat[:oid,:oid]  := sql.tid(X_8,"sys","partsupp");
    X_25:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_partkey",0);
    (X_27,r1_27) := sql.bind(X_8,"sys","partsupp","ps_partkey",2);
    X_29:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_partkey",1);
    X_30 := sql.delta(X_25,X_27,r1_27,X_29);
    X_31 := algebra.leftfetchjoin(X_23,X_30);
    X_32 := bat.mirror(X_31);
    X_33:bat[:oid,:oid]  := sql.tid(X_8,"sys","part");
    X_35:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_name",0);
    (X_37,r1_37) := sql.bind(X_8,"sys","part","p_name",2);
    X_39:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_name",1);
    X_40 := sql.delta(X_35,X_37,r1_37,X_39);
    X_41 := algebra.leftfetchjoin(X_33,X_40);
    X_43 := algebra.likesubselect(X_41,nil:BAT,A0,"",false);
    X_46:bat[:oid,:int]  := sql.bind(X_8,"sys","part","p_partkey",0);
    (X_50,r1_52) := sql.bind(X_8,"sys","part","p_partkey",2);
    X_53:bat[:oid,:int]  := sql.bind(X_8,"sys","part","p_partkey",1);
    X_55 := sql.delta(X_46,X_50,r1_52,X_53);
    X_56:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_43,X_33,X_55);
    (X_57,r1_60) := algebra.subjoin(X_31,X_56,nil:BAT,nil:BAT,true,nil:lng);
    X_61 := algebra.tinter(X_32,X_57);
    X_285 := algebra.leftfetchjoin(X_61,X_23);
    X_62 := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_65,r1_68) := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_67 := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_68 := sql.delta(X_62,X_65,r1_68,X_67);
    X_69:bat[:oid,:wrd]  := algebra.leftfetchjoin(X_285,X_68);
    X_70:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineitem");
    X_72:bat[:oid,:date]  := sql.bind(X_8,"sys","lineitem","l_shipdate",0);
    (X_74,r1_78) := sql.bind(X_8,"sys","lineitem","l_shipdate",2);
    X_76:bat[:oid,:date]  := sql.bind(X_8,"sys","lineitem","l_shipdate",1);
    X_77 := sql.delta(X_72,X_74,r1_78,X_76);
    X_78 := algebra.leftfetchjoin(X_70,X_77);
    X_79 := mtime.addmonths(A3,A4);
    X_80 := algebra.subselect(X_78,A2,X_79,true,false,false);
    X_286 := algebra.leftfetchjoin(X_80,X_70);
    X_82:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_partkey",0);
    (X_86,r1_93) := sql.bind(X_8,"sys","lineitem","l_partkey",2);
    X_89:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_partkey",1);
    X_91 := sql.delta(X_82,X_86,r1_93,X_89);
    X_92:bat[:oid,:int]  := algebra.leftfetchjoin(X_286,X_91);
    X_93:bat[:oid,:wrd]  := mal.manifold("mkey","hash",X_92);
    X_97:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_suppkey",0);
    (X_99,r1_108) := sql.bind(X_8,"sys","lineitem","l_suppkey",2);
    X_102:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_suppkey",1);
    X_103 := sql.delta(X_97,X_99,r1_108,X_102);
    X_104:bat[:oid,:int]  := algebra.leftfetchjoin(X_286,X_103);
    X_105:bat[:oid,:wrd]  := mkey.bulk_rotate_xor_hash(X_93,22,X_104);
    (X_106,r1_116) := algebra.subjoin(X_69,X_105,nil:BAT,nil:BAT,true,nil:lng);
    X_111 := algebra.leftfetchjoin(X_61,X_31);
    X_112 := algebra.leftfetchjoin(X_106,X_111);
    X_113 := algebra.leftfetchjoin(r1_116,X_92);
    X_114:bat[:oid,:bit]  := batcalc.==(X_112,X_113);
    X_115 := algebra.subselect(X_114,true,true,true,true,false);
    X_117 := algebra.leftfetchjoin(X_115,X_106);
    X_118:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_suppkey",0);
    (X_123,r1_136) := sql.bind(X_8,"sys","partsupp","ps_suppkey",2);
    X_126:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_suppkey",1);
    X_128 := sql.delta(X_118,X_123,r1_136,X_126);
    X_129:bat[:oid,:int]  := algebra.leftfetchjoin(X_285,X_128);
    X_130 := algebra.leftfetchjoin(X_117,X_129);
    X_131 := algebra.leftfetchjoin(X_115,r1_116);
    X_132 := algebra.leftfetchjoin(X_131,X_104);
    X_133:bat[:oid,:bit]  := batcalc.==(X_130,X_132);
    X_134 := algebra.subselect(X_133,true,true,true,true,false);
    X_135 := algebra.leftfetchjoin(X_134,X_117);
    X_136:bat[:oid,:oid]  := batcalc.identity(X_111);
    X_137 := algebra.leftfetchjoin(X_135,X_136);
    (X_138,r1_154,r2_154) := group.subgroupdone(X_137);
    X_287 := algebra.leftfetchjoin(r1_154,X_135);
    X_155:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_quantity",0);
    (X_160,r1_183) := sql.bind(X_8,"sys","lineitem","l_quantity",2);
    X_162:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_quantity",1);
    X_163 := sql.delta(X_155,X_160,r1_183,X_162);
    X_164:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_134,X_131,X_286,X_163);
    X_165:bat[:oid,:hge]  := aggr.subsum(X_164,X_138,r1_154,true,true);
    X_141:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_availqty",0);
    (X_143,r1_159) := sql.bind(X_8,"sys","partsupp","ps_availqty",2);
    X_145:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_availqty",1);
    X_146 := sql.delta(X_141,X_143,r1_159,X_145);
    X_147:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_287,X_61,X_23,X_146);
    X_148:bat[:oid,:hge]  := batcalc.hge(X_147,22,2);
    X_151 := calc.lng(1,A1,11,1);
    X_154 := calc.hge(1,X_151,22,1);
    X_167:bat[:oid,:lng]  := batcalc.lng(X_165,11,1);
    X_168:bat[:oid,:hge]  := batcalc.*(X_154,X_167);
    X_169:bat[:oid,:bit]  := batcalc.>(X_148,X_168);
    X_170 := algebra.subselect(X_169,true,true,true,true,false);
    X_172:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_170,X_287,X_129);
    (X_173,r1_203) := algebra.subjoin(X_21,X_172,nil:BAT,nil:BAT,true,nil:lng);
    X_177 := algebra.tinter(X_22,X_173);
    X_288 := algebra.leftfetchjoin(X_177,X_9);
    X_178:bat[:oid,:int]  := sql.bind(X_8,"sys","supplier","s_nationkey",0);
    (X_181,r1_211) := sql.bind(X_8,"sys","supplier","s_nationkey",2);
    X_185:bat[:oid,:int]  := sql.bind(X_8,"sys","supplier","s_nationkey",1);
    X_187 := sql.delta(X_178,X_181,r1_211,X_185);
    X_188:bat[:oid,:int]  := algebra.leftfetchjoin(X_288,X_187);
    X_189:bat[:oid,:oid]  := sql.tid(X_8,"sys","nation");
    X_191:bat[:oid,:str]  := sql.bind(X_8,"sys","nation","n_name",0);
    (X_194,r1_225) := sql.bind(X_8,"sys","nation","n_name",2);
    X_196:bat[:oid,:str]  := sql.bind(X_8,"sys","nation","n_name",1);
    X_197 := sql.delta(X_191,X_194,r1_225,X_196);
    X_198 := algebra.leftfetchjoin(X_189,X_197);
    X_199 := algebra.subselect(X_198,A5,A5,true,true,false);
    X_202:bat[:oid,:int]  := sql.bind(X_8,"sys","nation","n_nationkey",0);
    (X_204,r1_236) := sql.bind(X_8,"sys","nation","n_nationkey",2);
    X_206:bat[:oid,:int]  := sql.bind(X_8,"sys","nation","n_nationkey",1);
    X_207 := sql.delta(X_202,X_204,r1_236,X_206);
    X_208:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_199,X_189,X_207);
    (X_209,r1_242) := algebra.subjoin(X_188,X_208,nil:BAT,nil:BAT,true,nil:lng);
    X_289 := algebra.leftfetchjoin(X_209,X_177);
    X_213:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_name",0);
    (X_217,r1_250) := sql.bind(X_8,"sys","supplier","s_name",2);
    X_220:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_name",1);
    X_222 := sql.delta(X_213,X_217,r1_250,X_220);
    X_223:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_289,X_9,X_222);
    (X_224,r1_259,r2_259) := algebra.subsort(X_223,false,false);
    X_227 := algebra.leftfetchjoin(r1_259,X_223);
    X_228:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_address",0);
    (X_231,r1_266) := sql.bind(X_8,"sys","supplier","s_address",2);
    X_233:bat[:oid,:str]  := sql.bind(X_8,"sys","supplier","s_address",1);
    X_234 := sql.delta(X_228,X_231,r1_266,X_233);
    X_235:bat[:oid,:str]  := algebra.leftfetchjoinPath(r1_259,X_289,X_9,X_234);
    X_236 := sql.resultSet(2,1,X_227);
    sql.rsColumn(X_236,"sys.supplier","s_name","varchar",25,0,X_227);
    sql.rsColumn(X_236,"sys.supplier","s_address","varchar",40,0,X_235);
    X_243 := io.stdout();
    sql.exportResult(X_243,X_236);
end s2_1;
# querylog.define("explain select\n\ts_name,\n\ts_address\nfrom\n\tsupplier,\n\tnation\nwhere\n\ts_suppkey in (\n\t\tselect\n\t\t\tps_suppkey\n\t\tfrom\n\t\t\tpartsupp\n\t\twhere\n\t\t\tps_partkey in (\n\t\t\t\tselect\n\t\t\t\t\tp_partkey\n\t\t\t\tfrom\n\t\t\t\t\tpart\n\t\t\t\twhere\n\t\t\t\t\tp_name like \\'forest%\\'\n\t\t\t)\n\t\t\tand ps_availqty > (\n\t\t\t\tselect\n\t\t\t\t\t0.5 * sum(l_quantity)\n\t\t\t\tfrom\n\t\t\t\t\tlineitem\n\t\t\t\twhere\n\t\t\t\t\tl_partkey = ps_partkey\n\t\t\t\t\tand l_suppkey = ps_suppkey\n\t\t\t\t\tand l_shipdate >= date \\'1994-01-01\\'\n\t\t\t\t\tand l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n\t\t\t)\n\t)\n\tand s_nationkey = n_nationkey\n\tand n_name = \\'CANADA\\'\norder by\n\ts_name;","sequential_pipe")

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

