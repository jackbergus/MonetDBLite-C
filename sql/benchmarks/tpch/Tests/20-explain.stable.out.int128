stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 105 # length
function user.main():void;
    X_1355 := bat.new(nil:str);
    X_1362 := bat.append(X_1355,"sys.supplier");
    X_1372 := bat.append(X_1362,"sys.supplier");
    X_1357 := bat.new(nil:str);
    X_1364 := bat.append(X_1357,"s_name");
    X_1373 := bat.append(X_1364,"s_address");
    X_1358 := bat.new(nil:str);
    X_1366 := bat.append(X_1358,"char");
    X_1374 := bat.append(X_1366,"varchar");
    X_1359 := bat.new(nil:int);
    X_1368 := bat.append(X_1359,25);
    X_1376 := bat.append(X_1368,40);
    X_1361 := bat.new(nil:int);
    X_1370 := bat.append(X_1361,0);
    X_1378 := bat.append(X_1370,0);
    X_1116 := sql.mvc();
    C_1117:bat[:oid] := sql.tid(X_1116,"sys","supplier");
    X_1120:bat[:int] := sql.bind(X_1116,"sys","supplier","s_suppkey",0);
    X_1129 := algebra.projection(C_1117,X_1120);
    X_1130 := bat.mirror(X_1129);
    C_1131:bat[:oid] := sql.tid(X_1116,"sys","partsupp");
    X_1133:bat[:int] := sql.bind(X_1116,"sys","partsupp","ps_partkey",0);
    X_1139 := algebra.projection(C_1131,X_1133);
    X_1140 := bat.mirror(X_1139);
    C_1141:bat[:oid] := sql.tid(X_1116,"sys","part");
    X_1143:bat[:str] := sql.bind(X_1116,"sys","part","p_name",0);
    X_1149 := algebra.projection(C_1141,X_1143);
    C_1153 := algebra.likesubselect(X_1149,nil:BAT,"forest%","",false);
    X_1156:bat[:int] := sql.bind(X_1116,"sys","part","p_partkey",0);
    X_1163:bat[:int] := algebra.projectionpath(C_1153,C_1141,X_1156);
    (X_1164,r1_60) := algebra.subjoin(X_1139,X_1163,nil:BAT,nil:BAT,false,nil:lng);
    C_1167 := algebra.subinter(X_1140,X_1164,nil:BAT,nil:BAT,false,nil:lng);
    X_1168:bat[:lng] := sql.bind_idxbat(X_1116,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_1170,r1_66) := sql.bind_idxbat(X_1116,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_1172:bat[:lng] := sql.bind_idxbat(X_1116,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_1173 := sql.delta(X_1168,X_1170,r1_66,X_1172);
    X_1175:bat[:lng] := algebra.projectionpath(C_1167,C_1131,X_1173);
    C_1176:bat[:oid] := sql.tid(X_1116,"sys","lineitem");
    X_1178:bat[:date] := sql.bind(X_1116,"sys","lineitem","l_shipdate",0);
    X_1184 := algebra.projection(C_1176,X_1178);
    X_1188:date := mtime.addmonths("1994-01-01",12);
    C_1189 := algebra.subselect(X_1184,"1994-01-01",X_1188,true,false,false);
    X_1193:bat[:int] := sql.bind(X_1116,"sys","lineitem","l_partkey",0);
    X_1200:bat[:int] := algebra.projectionpath(C_1189,C_1176,X_1193);
    X_1201:bat[:lng] := batmkey.hash(X_1200);
    X_1206:bat[:int] := sql.bind(X_1116,"sys","lineitem","l_suppkey",0);
    X_1213:bat[:int] := algebra.projectionpath(C_1189,C_1176,X_1206);
    X_1214:bat[:lng] := mkey.bulk_rotate_xor_hash(X_1201,22,X_1213);
    (X_1215,r1_111) := algebra.subjoin(X_1175,X_1214,nil:BAT,nil:BAT,false,nil:lng);
    X_1220 := algebra.projection(C_1167,X_1139);
    X_1221 := algebra.projection(X_1215,X_1220);
    X_1222 := algebra.projection(r1_111,X_1200);
    X_1223:bat[:bit] := batcalc.==(X_1221,X_1222);
    C_1228 := algebra.subselect(X_1223,true,true,true,false,false);
    X_1231 := algebra.projection(C_1228,X_1215);
    X_1232:bat[:int] := sql.bind(X_1116,"sys","partsupp","ps_suppkey",0);
    X_1239:bat[:int] := algebra.projectionpath(C_1167,C_1131,X_1232);
    X_1240 := algebra.projection(X_1231,X_1239);
    X_1241 := algebra.projection(C_1228,r1_111);
    X_1242 := algebra.projection(X_1241,X_1213);
    X_1243:bat[:bit] := batcalc.==(X_1240,X_1242);
    C_1245 := algebra.subselect(X_1243,true,true,true,false,false);
    X_1246 := algebra.projection(C_1245,X_1231);
    X_1247:bat[:oid] := batcalc.identity(X_1220);
    X_1249 := algebra.projection(X_1246,X_1247);
    (X_1250,r1_146,r2_146) := group.subgroupdone(X_1249);
    X_1253:bat[:int] := sql.bind(X_1116,"sys","partsupp","ps_availqty",0);
    X_1262:bat[:int] := algebra.projectionpath(r1_146,X_1246,C_1167,C_1131,X_1253);
    X_1269:bat[:lng] := sql.bind(X_1116,"sys","lineitem","l_quantity",0);
    X_1277:bat[:lng] := algebra.projectionpath(C_1245,X_1241,C_1189,C_1176,X_1269);
    X_1278:bat[:hge] := aggr.subsum(X_1277,X_1250,r1_146,true,true);
    X_1263:bat[:hge] := batcalc.hge(X_1262,39,3);
    X_1282:bat[:hge] := batcalc.*(X_1278,5);
    X_1284:bat[:bit] := batcalc.>(X_1263,X_1282);
    C_1286 := algebra.subselect(X_1284,true,true,true,true,false);
    X_1290:bat[:int] := algebra.projectionpath(C_1286,r1_146,X_1246,X_1239);
    (X_1291,r1_187) := algebra.subjoin(X_1129,X_1290,nil:BAT,nil:BAT,false,nil:lng);
    C_1296 := algebra.subinter(X_1130,X_1291,nil:BAT,nil:BAT,false,nil:lng);
    X_1297:bat[:int] := sql.bind(X_1116,"sys","supplier","s_nationkey",0);
    X_1304:bat[:int] := algebra.projectionpath(C_1296,C_1117,X_1297);
    C_1305:bat[:oid] := sql.tid(X_1116,"sys","nation");
    X_1307:bat[:str] := sql.bind(X_1116,"sys","nation","n_name",0);
    X_1313 := algebra.projection(C_1305,X_1307);
    C_1315 := algebra.subselect(X_1313,"CANADA","CANADA",true,false,false);
    X_1317:bat[:int] := sql.bind(X_1116,"sys","nation","n_nationkey",0);
    X_1324:bat[:int] := algebra.projectionpath(C_1315,C_1305,X_1317);
    (X_1325,r1_221) := algebra.subjoin(X_1304,X_1324,nil:BAT,nil:BAT,false,nil:lng);
    X_1331:bat[:str] := sql.bind(X_1116,"sys","supplier","s_name",0);
    X_1339:bat[:str] := algebra.projectionpath(X_1325,C_1296,C_1117,X_1331);
    (X_1340,r1_236,r2_236) := algebra.subsort(X_1339,false,false);
    X_1343 := algebra.projection(r1_236,X_1339);
    X_1344:bat[:str] := sql.bind(X_1116,"sys","supplier","s_address",0);
    X_1353:bat[:str] := algebra.projectionpath(r1_236,X_1325,C_1296,C_1117,X_1344);
    sql.resultSet(X_1372,X_1373,X_1374,X_1376,X_1378,X_1343,X_1353);
end user.main;
#inline               actions= 0 time=6 usec 
#remap                actions= 7 time=197 usec 
#costmodel            actions= 1 time=6 usec 
#coercion             actions= 4 time=33 usec 
#evaluate             actions=12 time=50 usec 
#emptybind            actions=45 time=77 usec 
#aliases              actions=27 time=30 usec 
#deadcode             actions=45 time=23 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=35 time=52 usec 
#commonTerms          actions= 0 time=24 usec 
#projectionpath       actions=19 time=43 usec 
#reorder              actions= 1 time=81 usec 
#deadcode             actions=20 time=18 usec 
#reduce               actions=173 time=34 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=10 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=40 usec 
#total                actions= 1 time=957 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

