stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 789 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:date,A3:date,A4:int,A5:str):void;
    X_241:void := querylog.define("explain select\n\ts_name,\n\ts_address\nfrom\n\tsupplier,\n\tnation\nwhere\n\ts_suppkey in (\n\t\tselect\n\t\t\tps_suppkey\n\t\tfrom\n\t\t\tpartsupp\n\t\twhere\n\t\t\tps_partkey in (\n\t\t\t\tselect\n\t\t\t\t\tp_partkey\n\t\t\t\tfrom\n\t\t\t\t\tpart\n\t\t\t\twhere\n\t\t\t\t\tp_name like \\'forest%\\'\n\t\t\t)\n\t\t\tand ps_availqty > (\n\t\t\t\tselect\n\t\t\t\t\t0.5 * sum(l_quantity)\n\t\t\t\tfrom\n\t\t\t\t\tlineitem\n\t\t\t\twhere\n\t\t\t\t\tl_partkey = ps_partkey\n\t\t\t\t\tand l_suppkey = ps_suppkey\n\t\t\t\t\tand l_shipdate >= date \\'1994-01-01\\'\n\t\t\t\t\tand l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n\t\t\t)\n\t)\n\tand s_nationkey = n_nationkey\n\tand n_name = \\'CANADA\\'\norder by\n\ts_name;","sequential_pipe",142);
    X_216 := bat.new(nil:oid,nil:str);
    X_224 := bat.append(X_216,"sys.supplier");
    X_234 := bat.append(X_224,"sys.supplier");
    X_219 := bat.new(nil:oid,nil:str);
    X_226 := bat.append(X_219,"s_name");
    X_235 := bat.append(X_226,"s_address");
    X_220 := bat.new(nil:oid,nil:str);
    X_228 := bat.append(X_220,"char");
    X_236 := bat.append(X_228,"varchar");
    X_221 := bat.new(nil:oid,nil:int);
    X_230 := bat.append(X_221,25);
    X_238 := bat.append(X_230,40);
    X_223 := bat.new(nil:oid,nil:int);
    X_232 := bat.append(X_223,0);
    X_240 := bat.append(X_232,0);
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","supplier");
    X_12:bat[:oid,:int]  := sql.bind(X_8,"sys","supplier","s_suppkey",0);
    (X_15,r1_15) := sql.bind(X_8,"sys","supplier","s_suppkey",2);
    X_18:bat[:oid,:int]  := sql.bind(X_8,"sys","supplier","s_suppkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22 := bat.mirror(X_21);
    X_23:bat[:oid,:oid]  := sql.tid(X_8,"sys","partsupp");
    X_25:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_partkey",0);
    (X_27,r1_27) := sql.bind(X_8,"sys","partsupp","ps_partkey",2);
    X_29:bat[:oid,:int]  := sql.bind(X_8,"sys","partsupp","ps_partkey",1);
    X_30 := sql.delta(X_25,X_27,r1_27,X_29);
    X_31 := algebra.leftfetchjoin(X_23,X_30);
    X_32 := bat.mirror(X_31);
    X_33:bat[:oid,:oid]  := sql.tid(X_8,"sys","part");
    X_35:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_name",0);
    (X_37,r1_37) := sql.bind(X_8,"sys","part","p_name",2);
    X_39:bat[:oid,:str]  := sql.bind(X_8,"sys","part","p_name",1);
    X_40 := sql.delta(X_35,X_37,r1_37,X_39);
    X_41 := algebra.leftfetchjoin(X_33,X_40);
    X_43 := algebra.likesubselect(X_41,nil:BAT,A0,"",false);
    X_46:bat[:oid,:int]  := sql.bind(X_8,"sys","part","p_partkey",0);
    (X_50,r1_52) := sql.bind(X_8,"sys","part","p_partkey",2);
    X_53:bat[:oid,:int]  := sql.bind(X_8,"sys","part","p_partkey",1);
    X_55 := sql.delta(X_46,X_50,r1_52,X_53);
    X_56:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_43,X_33,X_55);
    (X_57,r1_60) := algebra.subjoin(X_31,X_56,nil:BAT,nil:BAT,false,nil:lng);
    X_60 := algebra.tinter(X_32,X_57);
    X_61:bat[:oid,:wrd]  := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_64,r1_67) := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_66:bat[:oid,:wrd]  := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_67 := sql.delta(X_61,X_64,r1_67,X_66);
    X_68:bat[:oid,:wrd] := algebra.leftfetchjoinPath(X_60,X_23,X_67);
    X_69:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineitem");
    X_71:bat[:oid,:date]  := sql.bind(X_8,"sys","lineitem","l_shipdate",0);
    (X_73,r1_77) := sql.bind(X_8,"sys","lineitem","l_shipdate",2);
    X_75:bat[:oid,:date]  := sql.bind(X_8,"sys","lineitem","l_shipdate",1);
    X_76 := sql.delta(X_71,X_73,r1_77,X_75);
    X_77 := algebra.leftfetchjoin(X_69,X_76);
    X_78 := mtime.addmonths(A3,A4);
    X_79 := algebra.subselect(X_77,A2,X_78,true,false,false);
    X_82:bat[:oid,:int]  := sql.bind(X_8,"sys","lineitem","l_partkey",0);
    (X_85,r1_92) := sql.bind(X_8,"sys","lineitem","l_partkey",2);
    X_87:bat[:oid,:int] := sql.bind(X_8,"sys","lineitem","l_partkey",1);
    X_88 := sql.delta(X_82,X_85,r1_92,X_87);
    X_89:bat[:oid,:int] := algebra.leftfetchjoinPath(X_79,X_69,X_88);
    X_90:bat[:oid,:wrd] := batmkey.hash(X_89);
    X_92:bat[:oid,:int] := sql.bind(X_8,"sys","lineitem","l_suppkey",0);
    (X_94,r1_105) := sql.bind(X_8,"sys","lineitem","l_suppkey",2);
    X_96:bat[:oid,:int] := sql.bind(X_8,"sys","lineitem","l_suppkey",1);
    X_97 := sql.delta(X_92,X_94,r1_105,X_96);
    X_98:bat[:oid,:int] := algebra.leftfetchjoinPath(X_79,X_69,X_97);
    X_99:bat[:oid,:wrd] := mkey.bulk_rotate_xor_hash(X_90,22,X_98);
    (X_100,r1_112) := algebra.subjoin(X_68,X_99,nil:BAT,nil:BAT,false,nil:lng);
    X_104 := algebra.leftfetchjoin(X_60,X_31);
    X_105 := algebra.leftfetchjoin(X_100,X_104);
    X_106 := algebra.leftfetchjoin(r1_112,X_89);
    X_107:bat[:oid,:bit] := batcalc.==(X_105,X_106);
    X_109 := algebra.subselect(X_107,true,true,true,true,false);
    X_111 := algebra.leftfetchjoin(X_109,X_100);
    X_112:bat[:oid,:int] := sql.bind(X_8,"sys","partsupp","ps_suppkey",0);
    (X_116,r1_131) := sql.bind(X_8,"sys","partsupp","ps_suppkey",2);
    X_119:bat[:oid,:int] := sql.bind(X_8,"sys","partsupp","ps_suppkey",1);
    X_121 := sql.delta(X_112,X_116,r1_131,X_119);
    X_122:bat[:oid,:int] := algebra.leftfetchjoinPath(X_60,X_23,X_121);
    X_123 := algebra.leftfetchjoin(X_111,X_122);
    X_124 := algebra.leftfetchjoin(X_109,r1_112);
    X_125 := algebra.leftfetchjoin(X_124,X_98);
    X_126:bat[:oid,:bit] := batcalc.==(X_123,X_125);
    X_127 := algebra.subselect(X_126,true,true,true,true,false);
    X_128 := algebra.leftfetchjoin(X_127,X_111);
    X_129:bat[:oid,:oid] := batcalc.identity(X_104);
    X_130 := algebra.leftfetchjoin(X_128,X_129);
    (X_131,r1_149,r2_149) := group.subgroupdone(X_130);
    X_134:bat[:oid,:int] := sql.bind(X_8,"sys","partsupp","ps_availqty",0);
    (X_136,r1_154) := sql.bind(X_8,"sys","partsupp","ps_availqty",2);
    X_138:bat[:oid,:int] := sql.bind(X_8,"sys","partsupp","ps_availqty",1);
    X_139 := sql.delta(X_134,X_136,r1_154,X_138);
    X_140:bat[:oid,:int] := algebra.leftfetchjoinPath(r1_149,X_128,X_60,X_23,X_139);
    X_144:bat[:oid,:lng] := sql.bind(X_8,"sys","lineitem","l_quantity",0);
    (X_147,r1_172) := sql.bind(X_8,"sys","lineitem","l_quantity",2);
    X_149:bat[:oid,:lng] := sql.bind(X_8,"sys","lineitem","l_quantity",1);
    X_150 := sql.delta(X_144,X_147,r1_172,X_149);
    X_151:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_127,X_124,X_79,X_69,X_150);
    X_152:bat[:oid,:hge] := aggr.subsum(X_151,X_131,r1_149,true,true);
    X_141:bat[:oid,:hge] := batcalc.hge(X_140,39,3);
    X_154:bat[:oid,:hge] := batcalc.*(A1,X_152);
    X_155:bat[:oid,:bit] := batcalc.>(X_141,X_154);
    X_156 := algebra.subselect(X_155,true,true,true,true,false);
    X_158:bat[:oid,:int] := algebra.leftfetchjoinPath(X_156,r1_149,X_128,X_122);
    (X_159,r1_190) := algebra.subjoin(X_21,X_158,nil:BAT,nil:BAT,false,nil:lng);
    X_163 := algebra.tinter(X_22,X_159);
    X_164:bat[:oid,:int] := sql.bind(X_8,"sys","supplier","s_nationkey",0);
    (X_167,r1_198) := sql.bind(X_8,"sys","supplier","s_nationkey",2);
    X_169:bat[:oid,:int] := sql.bind(X_8,"sys","supplier","s_nationkey",1);
    X_170 := sql.delta(X_164,X_167,r1_198,X_169);
    X_171:bat[:oid,:int] := algebra.leftfetchjoinPath(X_163,X_9,X_170);
    X_172:bat[:oid,:oid] := sql.tid(X_8,"sys","nation");
    X_175:bat[:oid,:str] := sql.bind(X_8,"sys","nation","n_name",0);
    (X_177,r1_209) := sql.bind(X_8,"sys","nation","n_name",2);
    X_179:bat[:oid,:str] := sql.bind(X_8,"sys","nation","n_name",1);
    X_180 := sql.delta(X_175,X_177,r1_209,X_179);
    X_181 := algebra.leftfetchjoin(X_172,X_180);
    X_182 := algebra.subselect(X_181,A5,A5,true,true,false);
    X_184:bat[:oid,:int] := sql.bind(X_8,"sys","nation","n_nationkey",0);
    (X_186,r1_219) := sql.bind(X_8,"sys","nation","n_nationkey",2);
    X_188:bat[:oid,:int] := sql.bind(X_8,"sys","nation","n_nationkey",1);
    X_189 := sql.delta(X_184,X_186,r1_219,X_188);
    X_190:bat[:oid,:int] := algebra.leftfetchjoinPath(X_182,X_172,X_189);
    (X_191,r1_225) := algebra.subjoin(X_171,X_190,nil:BAT,nil:BAT,false,nil:lng);
    X_196:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_name",0);
    (X_198,r1_232) := sql.bind(X_8,"sys","supplier","s_name",2);
    X_200:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_name",1);
    X_201 := sql.delta(X_196,X_198,r1_232,X_200);
    X_202:bat[:oid,:str] := algebra.leftfetchjoinPath(X_191,X_163,X_9,X_201);
    (X_203,r1_239,r2_239) := algebra.subsort(X_202,false,false);
    X_206 := algebra.leftfetchjoin(r1_239,X_202);
    X_207:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_address",0);
    (X_210,r1_246) := sql.bind(X_8,"sys","supplier","s_address",2);
    X_212:bat[:oid,:str] := sql.bind(X_8,"sys","supplier","s_address",1);
    X_213 := sql.delta(X_207,X_210,r1_246,X_212);
    X_214:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_239,X_191,X_163,X_9,X_213);
    sql.resultSet(X_234,X_235,X_236,X_238,X_240,X_206,X_214);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

