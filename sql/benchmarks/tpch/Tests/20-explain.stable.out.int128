stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 617 # length
function user.s4_1():void;
    X_150:void := querylog.define("explain select\n s_name,\n s_address\nfrom\n supplier,\n nation\nwhere\n s_suppkey in (\n select\n ps_suppkey\n from\n partsupp\n where\n ps_partkey in (\n select\n p_partkey\n from\n part\n where\n p_name like \\'forest%\\'\n )\n and ps_availqty > (\n select\n 0.5 * sum(l_quantity)\n from\n lineitem\n where\n l_partkey = ps_partkey\n and l_suppkey = ps_suppkey\n and l_shipdate >= date \\'1994-01-01\\'\n and l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n )\n )\n and s_nationkey = n_nationkey\n and n_name = \\'CANADA\\'\norder by\n s_name;","sequential_pipe",97);
    X_127 := bat.new(nil:oid,nil:str);
    X_135 := bat.append(X_127,"sys.supplier");
    X_143 := bat.append(X_135,"sys.supplier");
    X_130 := bat.new(nil:oid,nil:str);
    X_137 := bat.append(X_130,"s_name");
    X_144 := bat.append(X_137,"s_address");
    X_131 := bat.new(nil:oid,nil:str);
    X_138 := bat.append(X_131,"char");
    X_145 := bat.append(X_138,"varchar");
    X_132 := bat.new(nil:oid,nil:int);
    X_140 := bat.append(X_132,25);
    X_147 := bat.append(X_140,40);
    X_134 := bat.new(nil:oid,nil:int);
    X_142 := bat.append(X_134,0);
    X_149 := bat.append(X_142,0);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","supplier");
    X_10:bat[:int] := sql.bind(X_6,"sys","supplier","s_suppkey",0);
    X_15 := algebra.projection(C_7,X_10);
    X_16 := bat.mirror(X_15);
    C_17:bat[:oid] := sql.tid(X_6,"sys","partsupp");
    X_19:bat[:int] := sql.bind(X_6,"sys","partsupp","ps_partkey",0);
    X_21 := algebra.projection(C_17,X_19);
    X_22 := bat.mirror(X_21);
    C_23:bat[:oid] := sql.tid(X_6,"sys","part");
    X_25:bat[:str] := sql.bind(X_6,"sys","part","p_name",0);
    X_27 := algebra.projection(C_23,X_25);
    C_29 := algebra.likesubselect(X_27,nil:BAT,"forest%","",false);
    X_32:bat[:int] := sql.bind(X_6,"sys","part","p_partkey",0);
    X_34:bat[:int] := algebra.projectionpath(C_29,C_23,X_32);
    (X_35,r1_55) := algebra.subjoin(X_21,X_34,nil:BAT,nil:BAT,false,nil:lng);
    C_38 := algebra.subinter(X_22,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_39:bat[:wrd] := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_41,r1_61) := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_43:bat[:wrd] := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_44 := sql.delta(X_39,X_41,r1_61,X_43);
    X_45:bat[:wrd] := algebra.projectionpath(C_38,C_17,X_44);
    C_46:bat[:oid] := sql.tid(X_6,"sys","lineitem");
    X_48:bat[:date] := sql.bind(X_6,"sys","lineitem","l_shipdate",0);
    X_50 := algebra.projection(C_46,X_48);
    X_51:date := mtime.addmonths("1994-01-01",12);
    C_52 := algebra.subselect(X_50,"1994-01-01",X_51,true,false,false);
    X_54:bat[:int] := sql.bind(X_6,"sys","lineitem","l_partkey",0);
    X_56:bat[:int] := algebra.projectionpath(C_52,C_46,X_54);
    X_57:bat[:wrd] := batmkey.hash(X_56);
    X_59:bat[:int] := sql.bind(X_6,"sys","lineitem","l_suppkey",0);
    X_61:bat[:int] := algebra.projectionpath(C_52,C_46,X_59);
    X_62:bat[:wrd] := mkey.bulk_rotate_xor_hash(X_57,22,X_61);
    (X_63,r1_106) := algebra.subjoin(X_45,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_65 := algebra.projection(C_38,X_21);
    X_66 := algebra.projection(X_63,X_65);
    X_67 := algebra.projection(r1_106,X_56);
    X_68:bat[:bit] := batcalc.==(X_66,X_67);
    C_69 := algebra.subselect(X_68,true,true,true,false,false);
    X_70 := algebra.projection(C_69,X_63);
    X_71:bat[:int] := sql.bind(X_6,"sys","partsupp","ps_suppkey",0);
    X_73:bat[:int] := algebra.projectionpath(C_38,C_17,X_71);
    X_74 := algebra.projection(X_70,X_73);
    X_75 := algebra.projection(C_69,r1_106);
    X_76 := algebra.projection(X_75,X_61);
    X_77:bat[:bit] := batcalc.==(X_74,X_76);
    C_78 := algebra.subselect(X_77,true,true,true,false,false);
    X_79 := algebra.projection(C_78,X_70);
    X_80:bat[:oid] := batcalc.identity(X_65);
    X_81 := algebra.projection(X_79,X_80);
    (X_82,r1_141,r2_141) := group.subgroupdone(X_81);
    X_85:bat[:int] := sql.bind(X_6,"sys","partsupp","ps_availqty",0);
    X_87:bat[:int] := algebra.projectionpath(r1_141,X_79,C_38,C_17,X_85);
    X_91:bat[:lng] := sql.bind(X_6,"sys","lineitem","l_quantity",0);
    X_93:bat[:lng] := algebra.projectionpath(C_78,X_75,C_52,C_46,X_91);
    X_94:bat[:hge] := aggr.subsum(X_93,X_82,r1_141,true,true);
    X_88:bat[:hge] := batcalc.hge(X_87,39,3);
    X_95:bat[:hge] := batcalc.*(5,X_94);
    X_96:bat[:bit] := batcalc.>(X_88,X_95);
    C_97 := algebra.subselect(X_96,true,true,true,true,false);
    X_98:bat[:int] := algebra.projectionpath(C_97,r1_141,X_79,X_73);
    (X_99,r1_182) := algebra.subjoin(X_15,X_98,nil:BAT,nil:BAT,false,nil:lng);
    C_101 := algebra.subinter(X_16,X_99,nil:BAT,nil:BAT,false,nil:lng);
    X_102:bat[:int] := sql.bind(X_6,"sys","supplier","s_nationkey",0);
    X_104:bat[:int] := algebra.projectionpath(C_101,C_7,X_102);
    C_105:bat[:oid] := sql.tid(X_6,"sys","nation");
    X_107:bat[:str] := sql.bind(X_6,"sys","nation","n_name",0);
    X_109 := algebra.projection(C_105,X_107);
    C_110 := algebra.subselect(X_109,"CANADA","CANADA",true,false,false);
    X_111:bat[:int] := sql.bind(X_6,"sys","nation","n_nationkey",0);
    X_113:bat[:int] := algebra.projectionpath(C_110,C_105,X_111);
    (X_114,r1_216) := algebra.subjoin(X_104,X_113,nil:BAT,nil:BAT,false,nil:lng);
    X_116:bat[:str] := sql.bind(X_6,"sys","supplier","s_name",0);
    X_118:bat[:str] := algebra.projectionpath(X_114,C_101,C_7,X_116);
    (X_119,r1_231,r2_231) := algebra.subsort(X_118,false,false);
    X_122 := algebra.projection(r1_231,X_118);
    X_123:bat[:str] := sql.bind(X_6,"sys","supplier","s_address",0);
    X_125:bat[:str] := algebra.projectionpath(r1_231,X_114,C_101,C_7,X_123);
    sql.resultSet(X_143,X_144,X_145,X_147,X_149,X_122,X_125);
end user.s4_1;
#inline               actions= 0 time=9 usec 
#candidates           actions= 1 time=115 usec 
#remap                actions= 7 time=674 usec 
#costModel            actions= 1 time=190 usec 
#coercions            actions= 4 time=203 usec 
#evaluate             actions= 6 time=238 usec 
#emptybind            actions= 0 time=10 usec 
#pushselect           actions= 0 time=5 usec 
#aliases              actions=21 time=197 usec 
#mergetable           actions= 0 time=205 usec 
#deadcode             actions=30 time=178 usec 
#aliases              actions= 0 time=23 usec 
#constants            actions=29 time=212 usec 
#commonTerms          actions= 0 time=31 usec 
#projectionpath       actions=19 time=216 usec 
#reorder              actions= 1 time=237 usec 
#deadcode             actions=20 time=168 usec 
#reduce               actions=145 time=238 usec 
#matpack              actions= 0 time=10 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=6 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=166 usec 
#garbageCollector     actions= 1 time=168 usec 
#total                actions= 1 time=3627 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

