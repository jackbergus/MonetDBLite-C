stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 768 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:date,A3:date,A4:int,A5:str):void;
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","supplier");
    X_12 := sql.bind(X_8,"sys","supplier","s_suppkey",0);
    (X_15,r1_15) := sql.bind(X_8,"sys","supplier","s_suppkey",2);
    X_18 := sql.bind(X_8,"sys","supplier","s_suppkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22 := bat.mirror(X_21);
    X_23:bat[:oid,:oid]  := sql.tid(X_8,"sys","partsupp");
    X_25 := sql.bind(X_8,"sys","partsupp","ps_partkey",0);
    (X_27,r1_27) := sql.bind(X_8,"sys","partsupp","ps_partkey",2);
    X_29 := sql.bind(X_8,"sys","partsupp","ps_partkey",1);
    X_30 := sql.delta(X_25,X_27,r1_27,X_29);
    X_31 := algebra.leftfetchjoin(X_23,X_30);
    X_32 := bat.mirror(X_31);
    X_33:bat[:oid,:oid]  := sql.tid(X_8,"sys","part");
    X_35 := sql.bind(X_8,"sys","part","p_name",0);
    (X_37,r1_37) := sql.bind(X_8,"sys","part","p_name",2);
    X_39 := sql.bind(X_8,"sys","part","p_name",1);
    X_40 := sql.delta(X_35,X_37,r1_37,X_39);
    X_41 := algebra.leftfetchjoin(X_33,X_40);
    X_43 := algebra.likesubselect(X_41,A0,"",false);
    X_45 := sql.bind(X_8,"sys","part","p_partkey",0);
    (X_49,r1_51) := sql.bind(X_8,"sys","part","p_partkey",2);
    X_52 := sql.bind(X_8,"sys","part","p_partkey",1);
    X_54 := sql.delta(X_45,X_49,r1_51,X_52);
    X_55:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_43,X_33,X_54);
    (X_56,r1_59) := algebra.join(X_31,X_55);
    X_58 := algebra.tinter(X_32,X_56);
    X_279 := algebra.leftfetchjoin(X_58,X_23);
    X_59 := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_62,r1_65) := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_64 := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_65 := sql.delta(X_59,X_62,r1_65,X_64);
    X_66:bat[:oid,:wrd]  := algebra.leftfetchjoin(X_279,X_65);
    X_67:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineitem");
    X_69 := sql.bind(X_8,"sys","lineitem","l_shipdate",0);
    (X_71,r1_75) := sql.bind(X_8,"sys","lineitem","l_shipdate",2);
    X_73 := sql.bind(X_8,"sys","lineitem","l_shipdate",1);
    X_74 := sql.delta(X_69,X_71,r1_75,X_73);
    X_75 := algebra.leftfetchjoin(X_67,X_74);
    X_76 := mtime.addmonths(A3,A4);
    X_77 := algebra.subselect(X_75,A2,X_76,true,false,false);
    X_280 := algebra.leftfetchjoin(X_77,X_67);
    X_80 := sql.bind(X_8,"sys","lineitem","l_suppkey",0);
    (X_84,r1_91) := sql.bind(X_8,"sys","lineitem","l_suppkey",2);
    X_87 := sql.bind(X_8,"sys","lineitem","l_suppkey",1);
    X_89 := sql.delta(X_80,X_84,r1_91,X_87);
    X_90:bat[:oid,:int]  := algebra.leftfetchjoin(X_280,X_89);
    X_91 := sql.bind(X_8,"sys","lineitem","l_partkey",0);
    (X_93,r1_101) := sql.bind(X_8,"sys","lineitem","l_partkey",2);
    X_95 := sql.bind(X_8,"sys","lineitem","l_partkey",1);
    X_96 := sql.delta(X_91,X_93,r1_101,X_95);
    X_97:bat[:oid,:int]  := algebra.leftfetchjoin(X_280,X_96);
    (X_98,r1_107,r2_107) := group.subgroup(X_97);
    (X_101,r1_110,r2_110) := group.subgroupdone(X_90,X_98);
    X_104 := algebra.leftfetchjoin(r1_110,X_97);
    X_109 := algebra.leftfetchjoin(r1_110,X_90);
    X_150 := sql.bind(X_8,"sys","lineitem","l_quantity",0);
    (X_155,r1_177) := sql.bind(X_8,"sys","lineitem","l_quantity",2);
    X_158 := sql.bind(X_8,"sys","lineitem","l_quantity",1);
    X_160 := sql.delta(X_150,X_155,r1_177,X_158);
    X_161:bat[:oid,:int]  := algebra.leftfetchjoin(X_280,X_160);
    X_162:bat[:oid,:hge]  := aggr.subsum(X_161,X_101,r1_110,true,true);
    X_105:bat[:oid,:wrd]  := mal.manifold("mkey","hash",X_104);
    X_110:bat[:oid,:wrd]  := mkey.bulk_rotate_xor_hash(X_105,22,X_109);
    (X_111,r1_121) := algebra.join(X_66,X_110);
    X_113:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_111,X_58,X_31);
    X_114 := algebra.leftfetchjoin(r1_121,X_104);
    X_115:bat[:oid,:bit]  := batcalc.==(X_113,X_114);
    X_117 := algebra.subselect(X_115,true,true,true,true,false);
    X_119 := algebra.leftfetchjoin(X_117,X_111);
    X_120 := sql.bind(X_8,"sys","partsupp","ps_suppkey",0);
    (X_125,r1_139) := sql.bind(X_8,"sys","partsupp","ps_suppkey",2);
    X_128 := sql.bind(X_8,"sys","partsupp","ps_suppkey",1);
    X_130 := sql.delta(X_120,X_125,r1_139,X_128);
    X_131:bat[:oid,:int]  := algebra.leftfetchjoin(X_279,X_130);
    X_132 := algebra.leftfetchjoin(X_119,X_131);
    X_133 := algebra.leftfetchjoin(X_117,r1_121);
    X_134 := algebra.leftfetchjoin(X_133,X_109);
    X_135:bat[:oid,:bit]  := batcalc.==(X_132,X_134);
    X_136 := algebra.subselect(X_135,true,true,true,true,false);
    X_137 := algebra.leftfetchjoin(X_136,X_119);
    X_138 := sql.bind(X_8,"sys","partsupp","ps_availqty",0);
    (X_140,r1_156) := sql.bind(X_8,"sys","partsupp","ps_availqty",2);
    X_142 := sql.bind(X_8,"sys","partsupp","ps_availqty",1);
    X_143 := sql.delta(X_138,X_140,r1_156,X_142);
    X_144:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_137,X_279,X_143);
    X_145:bat[:oid,:hge]  := batcalc.hge(X_144,22,2);
    X_147 := calc.lng(1,A1,11,1);
    X_149 := calc.hge(1,X_147,22,1);
    X_164:bat[:oid,:hge]  := algebra.leftfetchjoinPath(X_136,X_133,X_162);
    X_165:bat[:oid,:lng]  := batcalc.lng(X_164,11,1);
    X_166:bat[:oid,:hge]  := batcalc.*(X_149,X_165);
    X_167:bat[:oid,:bit]  := batcalc.>(X_145,X_166);
    X_168 := algebra.subselect(X_167,true,true,true,true,false);
    X_170:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_168,X_137,X_131);
    (X_171,r1_198) := algebra.join(X_21,X_170);
    X_173 := algebra.tinter(X_22,X_171);
    X_281 := algebra.leftfetchjoin(X_173,X_9);
    X_174 := sql.bind(X_8,"sys","supplier","s_nationkey",0);
    (X_177,r1_204) := sql.bind(X_8,"sys","supplier","s_nationkey",2);
    X_180 := sql.bind(X_8,"sys","supplier","s_nationkey",1);
    X_181 := sql.delta(X_174,X_177,r1_204,X_180);
    X_182:bat[:oid,:int]  := algebra.leftfetchjoin(X_281,X_181);
    X_183:bat[:oid,:oid]  := sql.tid(X_8,"sys","nation");
    X_185 := sql.bind(X_8,"sys","nation","n_name",0);
    (X_188,r1_216) := sql.bind(X_8,"sys","nation","n_name",2);
    X_191 := sql.bind(X_8,"sys","nation","n_name",1);
    X_193 := sql.delta(X_185,X_188,r1_216,X_191);
    X_194 := algebra.leftfetchjoin(X_183,X_193);
    X_195 := algebra.subselect(X_194,A5,A5,true,true,false);
    X_197 := sql.bind(X_8,"sys","nation","n_nationkey",0);
    (X_199,r1_228) := sql.bind(X_8,"sys","nation","n_nationkey",2);
    X_201 := sql.bind(X_8,"sys","nation","n_nationkey",1);
    X_202 := sql.delta(X_197,X_199,r1_228,X_201);
    X_203:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_195,X_183,X_202);
    (X_204,r1_234) := algebra.join(X_182,X_203);
    X_282 := algebra.leftfetchjoin(X_204,X_173);
    X_206 := sql.bind(X_8,"sys","supplier","s_name",0);
    (X_209,r1_239) := sql.bind(X_8,"sys","supplier","s_name",2);
    X_212 := sql.bind(X_8,"sys","supplier","s_name",1);
    X_213 := sql.delta(X_206,X_209,r1_239,X_212);
    X_214:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_282,X_9,X_213);
    (X_215,r1_247,r2_247) := algebra.subsort(X_214,false,false);
    X_219 := algebra.leftfetchjoin(r1_247,X_214);
    X_220 := sql.bind(X_8,"sys","supplier","s_address",0);
    (X_223,r1_255) := sql.bind(X_8,"sys","supplier","s_address",2);
    X_226 := sql.bind(X_8,"sys","supplier","s_address",1);
    X_228 := sql.delta(X_220,X_223,r1_255,X_226);
    X_229:bat[:oid,:str]  := algebra.leftfetchjoinPath(r1_247,X_282,X_9,X_228);
    X_230 := sql.resultSet(2,1,X_219);
    sql.rsColumn(X_230,"sys.supplier","s_name","varchar",25,0,X_219);
    sql.rsColumn(X_230,"sys.supplier","s_address","varchar",40,0,X_229);
    X_237 := io.stdout();
    sql.exportResult(X_237,X_230);
end s2_1;
# querylog.define("explain select\n\ts_name,\n\ts_address\nfrom\n\tsupplier,\n\tnation\nwhere\n\ts_suppkey in (\n\t\tselect\n\t\t\tps_suppkey\n\t\tfrom\n\t\t\tpartsupp\n\t\twhere\n\t\t\tps_partkey in (\n\t\t\t\tselect\n\t\t\t\t\tp_partkey\n\t\t\t\tfrom\n\t\t\t\t\tpart\n\t\t\t\twhere\n\t\t\t\t\tp_name like \\'forest%\\'\n\t\t\t)\n\t\t\tand ps_availqty > (\n\t\t\t\tselect\n\t\t\t\t\t0.5 * sum(l_quantity)\n\t\t\t\tfrom\n\t\t\t\t\tlineitem\n\t\t\t\twhere\n\t\t\t\t\tl_partkey = ps_partkey\n\t\t\t\t\tand l_suppkey = ps_suppkey\n\t\t\t\t\tand l_shipdate >= date \\'1994-01-01\\'\n\t\t\t\t\tand l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n\t\t\t)\n\t)\n\tand s_nationkey = n_nationkey\n\tand n_name = \\'CANADA\\'\norder by\n\ts_name;","sequential_pipe")

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

