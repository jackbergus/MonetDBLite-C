stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 618 # length
function user.s2_1(A0:str,A1:bte,A2:date,A3:date,A4:int,A5:str):void;
    X_263:void := querylog.define("explain select\n s_name,\n s_address\nfrom\n supplier,\n nation\nwhere\n s_suppkey in (\n select\n ps_suppkey\n from\n partsupp\n where\n ps_partkey in (\n select\n p_partkey\n from\n part\n where\n p_name like \\'forest%\\'\n )\n and ps_availqty > (\n select\n 0.5 * sum(l_quantity)\n from\n lineitem\n where\n l_partkey = ps_partkey\n and l_suppkey = ps_suppkey\n and l_shipdate >= date \\'1994-01-01\\'\n and l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n )\n )\n and s_nationkey = n_nationkey\n and n_name = \\'CANADA\\'\norder by\n s_name;","sequential_pipe",142);
    X_239 := bat.new(nil:str);
    X_246 := bat.append(X_239,"sys.supplier");
    X_256 := bat.append(X_246,"sys.supplier");
    X_241 := bat.new(nil:str);
    X_248 := bat.append(X_241,"s_name");
    X_257 := bat.append(X_248,"s_address");
    X_242 := bat.new(nil:str);
    X_250 := bat.append(X_242,"char");
    X_258 := bat.append(X_250,"varchar");
    X_243 := bat.new(nil:int);
    X_252 := bat.append(X_243,25);
    X_260 := bat.append(X_252,40);
    X_245 := bat.new(nil:int);
    X_254 := bat.append(X_245,0);
    X_262 := bat.append(X_254,0);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_4:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    (X_7,r1_14) := sql.bind(X_0,"sys","supplier","s_suppkey",2);
    X_10:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",1);
    X_12 := sql.delta(X_4,X_7,r1_14,X_10);
    X_13 := algebra.projection(X_1,X_12);
    X_14 := bat.mirror(X_13);
    X_15:bat[:oid] := sql.tid(X_0,"sys","partsupp");
    X_17:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_partkey",0);
    (X_19,r1_26) := sql.bind(X_0,"sys","partsupp","ps_partkey",2);
    X_21:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_partkey",1);
    X_22 := sql.delta(X_17,X_19,r1_26,X_21);
    X_23 := algebra.projection(X_15,X_22);
    X_24 := bat.mirror(X_23);
    X_25:bat[:oid] := sql.tid(X_0,"sys","part");
    X_27:bat[:str] := sql.bind(X_0,"sys","part","p_name",0);
    (X_29,r1_36) := sql.bind(X_0,"sys","part","p_name",2);
    X_31:bat[:str] := sql.bind(X_0,"sys","part","p_name",1);
    X_32 := sql.delta(X_27,X_29,r1_36,X_31);
    X_33 := algebra.projection(X_25,X_32);
    X_37 := algebra.likesubselect(X_33,nil:BAT,A0,"",false);
    X_40:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    (X_42,r1_49) := sql.bind(X_0,"sys","part","p_partkey",2);
    X_44:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",1);
    X_45 := sql.delta(X_40,X_42,r1_49,X_44);
    X_47:bat[:int] := algebra.projectionpath(X_37,X_25,X_45);
    (X_48,r1_55) := algebra.subjoin(X_23,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_51 := algebra.subinter(X_24,X_48,nil:BAT,nil:BAT,false,nil:lng);
    X_52:bat[:lng] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_54,r1_61) := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_56:bat[:lng] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_57 := sql.delta(X_52,X_54,r1_61,X_56);
    X_59:bat[:lng] := algebra.projectionpath(X_51,X_15,X_57);
    X_60:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_62:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    (X_64,r1_71) := sql.bind(X_0,"sys","lineitem","l_shipdate",2);
    X_66:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",1);
    X_67 := sql.delta(X_62,X_64,r1_71,X_66);
    X_68 := algebra.projection(X_60,X_67);
    X_72:date := mtime.addmonths(A3,A4);
    X_73 := algebra.subselect(X_68,A2,X_72,true,false,false);
    X_77:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    (X_79,r1_86) := sql.bind(X_0,"sys","lineitem","l_partkey",2);
    X_81:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",1);
    X_82 := sql.delta(X_77,X_79,r1_86,X_81);
    X_84:bat[:int] := algebra.projectionpath(X_73,X_60,X_82);
    X_85:bat[:lng] := batmkey.hash(X_84);
    X_90:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    (X_92,r1_99) := sql.bind(X_0,"sys","lineitem","l_suppkey",2);
    X_94:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",1);
    X_95 := sql.delta(X_90,X_92,r1_99,X_94);
    X_97:bat[:int] := algebra.projectionpath(X_73,X_60,X_95);
    X_98:bat[:lng] := mkey.bulk_rotate_xor_hash(X_85,22,X_97);
    (X_99,r1_106) := algebra.subjoin(X_59,X_98,nil:BAT,nil:BAT,false,nil:lng);
    X_104 := algebra.projection(X_51,X_23);
    X_105 := algebra.projection(X_99,X_104);
    X_106 := algebra.projection(r1_106,X_84);
    X_107:bat[:bit] := batcalc.==(X_105,X_106);
    X_112 := algebra.subselect(X_107,true,true,true,false,false);
    X_115 := algebra.projection(X_112,X_99);
    X_116:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_suppkey",0);
    (X_118,r1_125) := sql.bind(X_0,"sys","partsupp","ps_suppkey",2);
    X_120:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_suppkey",1);
    X_121 := sql.delta(X_116,X_118,r1_125,X_120);
    X_123:bat[:int] := algebra.projectionpath(X_51,X_15,X_121);
    X_124 := algebra.projection(X_115,X_123);
    X_125 := algebra.projection(X_112,r1_106);
    X_126 := algebra.projection(X_125,X_97);
    X_127:bat[:bit] := batcalc.==(X_124,X_126);
    X_129 := algebra.subselect(X_127,true,true,true,false,false);
    X_130 := algebra.projection(X_129,X_115);
    X_131:bat[:oid] := batcalc.identity(X_104);
    X_133 := algebra.projection(X_130,X_131);
    (X_134,r1_141,r2_141) := group.subgroupdone(X_133);
    X_137:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_availqty",0);
    (X_139,r1_146) := sql.bind(X_0,"sys","partsupp","ps_availqty",2);
    X_141:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_availqty",1);
    X_142 := sql.delta(X_137,X_139,r1_146,X_141);
    X_146:bat[:int] := algebra.projectionpath(r1_141,X_130,X_51,X_15,X_142);
    X_154:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",0);
    (X_156,r1_163) := sql.bind(X_0,"sys","lineitem","l_quantity",2);
    X_158:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",1);
    X_159 := sql.delta(X_154,X_156,r1_163,X_158);
    X_162:bat[:lng] := algebra.projectionpath(X_129,X_125,X_73,X_60,X_159);
    X_163:bat[:hge] := aggr.subsum(X_162,X_134,r1_141,true,true);
    X_147:bat[:hge] := batcalc.hge(X_146,39,3);
    X_166:bat[:hge] := batcalc.*(A1,X_163);
    X_168:bat[:bit] := batcalc.>(X_147,X_166);
    X_170 := algebra.subselect(X_168,true,true,true,true,false);
    X_174:bat[:int] := algebra.projectionpath(X_170,r1_141,X_130,X_123);
    (X_175,r1_182) := algebra.subjoin(X_13,X_174,nil:BAT,nil:BAT,false,nil:lng);
    X_180 := algebra.subinter(X_14,X_175,nil:BAT,nil:BAT,false,nil:lng);
    X_181:bat[:int] := sql.bind(X_0,"sys","supplier","s_nationkey",0);
    (X_183,r1_190) := sql.bind(X_0,"sys","supplier","s_nationkey",2);
    X_185:bat[:int] := sql.bind(X_0,"sys","supplier","s_nationkey",1);
    X_186 := sql.delta(X_181,X_183,r1_190,X_185);
    X_188:bat[:int] := algebra.projectionpath(X_180,X_1,X_186);
    X_189:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_191:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    (X_193,r1_200) := sql.bind(X_0,"sys","nation","n_name",2);
    X_195:bat[:str] := sql.bind(X_0,"sys","nation","n_name",1);
    X_196 := sql.delta(X_191,X_193,r1_200,X_195);
    X_197 := algebra.projection(X_189,X_196);
    X_199 := algebra.subselect(X_197,A5,A5,true,false,false);
    X_201:bat[:int] := sql.bind(X_0,"sys","nation","n_nationkey",0);
    (X_203,r1_210) := sql.bind(X_0,"sys","nation","n_nationkey",2);
    X_205:bat[:int] := sql.bind(X_0,"sys","nation","n_nationkey",1);
    X_206 := sql.delta(X_201,X_203,r1_210,X_205);
    X_208:bat[:int] := algebra.projectionpath(X_199,X_189,X_206);
    (X_209,r1_216) := algebra.subjoin(X_188,X_208,nil:BAT,nil:BAT,false,nil:lng);
    X_215:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",0);
    (X_217,r1_224) := sql.bind(X_0,"sys","supplier","s_name",2);
    X_219:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",1);
    X_220 := sql.delta(X_215,X_217,r1_224,X_219);
    X_223:bat[:str] := algebra.projectionpath(X_209,X_180,X_1,X_220);
    (X_224,r1_231,r2_231) := algebra.subsort(X_223,false,false);
    X_227 := algebra.projection(r1_231,X_223);
    X_228:bat[:str] := sql.bind(X_0,"sys","supplier","s_address",0);
    (X_230,r1_237) := sql.bind(X_0,"sys","supplier","s_address",2);
    X_232:bat[:str] := sql.bind(X_0,"sys","supplier","s_address",1);
    X_233 := sql.delta(X_228,X_230,r1_237,X_232);
    X_237:bat[:str] := algebra.projectionpath(r1_231,X_209,X_180,X_1,X_233);
    sql.resultSet(X_256,X_257,X_258,X_260,X_262,X_227,X_237);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

