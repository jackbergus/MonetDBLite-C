stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 103 # length
function user.main():void;
    X_798 := bat.new(nil:str);
    X_805 := bat.append(X_798,"sys.supplier");
    X_815 := bat.append(X_805,"sys.supplier");
    X_800 := bat.new(nil:str);
    X_807 := bat.append(X_800,"s_name");
    X_816 := bat.append(X_807,"s_address");
    X_801 := bat.new(nil:str);
    X_809 := bat.append(X_801,"char");
    X_817 := bat.append(X_809,"varchar");
    X_802 := bat.new(nil:int);
    X_811 := bat.append(X_802,25);
    X_819 := bat.append(X_811,40);
    X_804 := bat.new(nil:int);
    X_813 := bat.append(X_804,0);
    X_821 := bat.append(X_813,0);
    X_559 := sql.mvc();
    C_560:bat[:oid] := sql.tid(X_559,"sys","supplier");
    X_563:bat[:int] := sql.bind(X_559,"sys","supplier","s_suppkey",0);
    X_572 := algebra.projection(C_560,X_563);
    X_573 := bat.mirror(X_572);
    C_574:bat[:oid] := sql.tid(X_559,"sys","partsupp");
    X_576:bat[:int] := sql.bind(X_559,"sys","partsupp","ps_partkey",0);
    X_582 := algebra.projection(C_574,X_576);
    X_583 := bat.mirror(X_582);
    C_584:bat[:oid] := sql.tid(X_559,"sys","part");
    X_586:bat[:str] := sql.bind(X_559,"sys","part","p_name",0);
    X_592 := algebra.projection(C_584,X_586);
    C_596 := algebra.likesubselect(X_592,nil:BAT,"forest%","",false);
    X_599:bat[:int] := sql.bind(X_559,"sys","part","p_partkey",0);
    X_606:bat[:int] := algebra.projectionpath(C_596,C_584,X_599);
    (X_607,r1_60) := algebra.subjoin(X_582,X_606,nil:BAT,nil:BAT,false,nil:lng);
    C_610 := algebra.subinter(X_583,X_607,nil:BAT,nil:BAT,false,nil:lng);
    X_611:bat[:lng] := sql.bind_idxbat(X_559,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_613,r1_66) := sql.bind_idxbat(X_559,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_615:bat[:lng] := sql.bind_idxbat(X_559,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_616 := sql.delta(X_611,X_613,r1_66,X_615);
    X_618:bat[:lng] := algebra.projectionpath(C_610,C_574,X_616);
    C_619:bat[:oid] := sql.tid(X_559,"sys","lineitem");
    X_621:bat[:date] := sql.bind(X_559,"sys","lineitem","l_shipdate",0);
    X_627 := algebra.projection(C_619,X_621);
    X_631:date := mtime.addmonths("1994-01-01",12);
    C_632 := algebra.subselect(X_627,"1994-01-01",X_631,true,false,false);
    X_636:bat[:int] := sql.bind(X_559,"sys","lineitem","l_partkey",0);
    X_643:bat[:int] := algebra.projectionpath(C_632,C_619,X_636);
    X_644:bat[:lng] := batmkey.hash(X_643);
    X_649:bat[:int] := sql.bind(X_559,"sys","lineitem","l_suppkey",0);
    X_656:bat[:int] := algebra.projectionpath(C_632,C_619,X_649);
    X_657:bat[:lng] := mkey.bulk_rotate_xor_hash(X_644,22,X_656);
    (X_658,r1_111) := algebra.subjoin(X_618,X_657,nil:BAT,nil:BAT,false,nil:lng);
    X_663 := algebra.projection(C_610,X_582);
    X_664 := algebra.projection(X_658,X_663);
    X_665 := algebra.projection(r1_111,X_643);
    X_666:bat[:bit] := batcalc.==(X_664,X_665);
    C_671 := algebra.subselect(X_666,true,true,true,false,false);
    X_674 := algebra.projection(C_671,X_658);
    X_675:bat[:int] := sql.bind(X_559,"sys","partsupp","ps_suppkey",0);
    X_682:bat[:int] := algebra.projectionpath(C_610,C_574,X_675);
    X_683 := algebra.projection(X_674,X_682);
    X_684 := algebra.projection(C_671,r1_111);
    X_685 := algebra.projection(X_684,X_656);
    X_686:bat[:bit] := batcalc.==(X_683,X_685);
    C_688 := algebra.subselect(X_686,true,true,true,false,false);
    X_689 := algebra.projection(C_688,X_674);
    X_690:bat[:oid] := batcalc.identity(X_663);
    X_692 := algebra.projection(X_689,X_690);
    (X_693,r1_146,r2_146) := group.subgroupdone(X_692);
    X_696:bat[:int] := sql.bind(X_559,"sys","partsupp","ps_availqty",0);
    X_705:bat[:int] := algebra.projectionpath(r1_146,X_689,C_610,C_574,X_696);
    X_712:bat[:lng] := sql.bind(X_559,"sys","lineitem","l_quantity",0);
    X_720:bat[:lng] := algebra.projectionpath(C_688,X_684,C_632,C_619,X_712);
    X_721:bat[:hge] := aggr.subsum(X_720,X_693,r1_146,true,true);
    X_706:bat[:hge] := batcalc.hge(X_705,39,3);
    X_725:bat[:hge] := batcalc.*(X_721,5);
    X_727:bat[:bit] := batcalc.>(X_706,X_725);
    C_729 := algebra.subselect(X_727,true,true,true,true,false);
    X_733:bat[:int] := algebra.projectionpath(C_729,r1_146,X_689,X_682);
    (X_734,r1_187) := algebra.subjoin(X_572,X_733,nil:BAT,nil:BAT,false,nil:lng);
    C_739 := algebra.subinter(X_573,X_734,nil:BAT,nil:BAT,false,nil:lng);
    X_740:bat[:int] := sql.bind(X_559,"sys","supplier","s_nationkey",0);
    X_747:bat[:int] := algebra.projectionpath(C_739,C_560,X_740);
    C_748:bat[:oid] := sql.tid(X_559,"sys","nation");
    X_750:bat[:str] := sql.bind(X_559,"sys","nation","n_name",0);
    X_756 := algebra.projection(C_748,X_750);
    C_758 := algebra.subselect(X_756,"CANADA","CANADA",true,false,false);
    X_760:bat[:int] := sql.bind(X_559,"sys","nation","n_nationkey",0);
    X_767:bat[:int] := algebra.projectionpath(C_758,C_748,X_760);
    (X_768,r1_221) := algebra.subjoin(X_747,X_767,nil:BAT,nil:BAT,false,nil:lng);
    X_774:bat[:str] := sql.bind(X_559,"sys","supplier","s_name",0);
    X_782:bat[:str] := algebra.projectionpath(X_768,C_739,C_560,X_774);
    (X_783,r1_236,r2_236) := algebra.subsort(X_782,false,false);
    X_786 := algebra.projection(r1_236,X_782);
    X_787:bat[:str] := sql.bind(X_559,"sys","supplier","s_address",0);
    X_796:bat[:str] := algebra.projectionpath(r1_236,X_768,C_739,C_560,X_787);
    sql.resultSet(X_815,X_816,X_817,X_819,X_821,X_786,X_796);
end user.main;
#inline               actions= 0 time=6 usec 
#remap                actions= 7 time=197 usec 
#costmodel            actions= 1 time=6 usec 
#coercion             actions= 4 time=33 usec 
#evaluate             actions=12 time=50 usec 
#emptybind            actions=45 time=77 usec 
#aliases              actions=27 time=30 usec 
#deadcode             actions=45 time=23 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=35 time=52 usec 
#commonTerms          actions= 0 time=24 usec 
#projectionpath       actions=19 time=43 usec 
#reorder              actions= 1 time=81 usec 
#deadcode             actions=20 time=18 usec 
#reduce               actions=173 time=34 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=10 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=40 usec 
#total                actions= 1 time=957 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

