stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 103 # length
function user.main():void;
    X_952 := bat.new(nil:str);
    X_959 := bat.append(X_952,"sys.supplier");
    X_969 := bat.append(X_959,"sys.supplier");
    X_954 := bat.new(nil:str);
    X_961 := bat.append(X_954,"s_name");
    X_970 := bat.append(X_961,"s_address");
    X_955 := bat.new(nil:str);
    X_963 := bat.append(X_955,"char");
    X_971 := bat.append(X_963,"varchar");
    X_956 := bat.new(nil:int);
    X_965 := bat.append(X_956,25);
    X_973 := bat.append(X_965,40);
    X_958 := bat.new(nil:int);
    X_967 := bat.append(X_958,0);
    X_975 := bat.append(X_967,0);
    X_713 := sql.mvc();
    C_714:bat[:oid] := sql.tid(X_713,"sys","supplier");
    X_717:bat[:int] := sql.bind(X_713,"sys","supplier","s_suppkey",0);
    X_726 := algebra.projection(C_714,X_717);
    X_727 := bat.mirror(X_726);
    C_728:bat[:oid] := sql.tid(X_713,"sys","partsupp");
    X_730:bat[:int] := sql.bind(X_713,"sys","partsupp","ps_partkey",0);
    X_736 := algebra.projection(C_728,X_730);
    X_737 := bat.mirror(X_736);
    C_738:bat[:oid] := sql.tid(X_713,"sys","part");
    X_740:bat[:str] := sql.bind(X_713,"sys","part","p_name",0);
    X_746 := algebra.projection(C_738,X_740);
    C_750 := algebra.likesubselect(X_746,nil:BAT,"forest%","",false);
    X_753:bat[:int] := sql.bind(X_713,"sys","part","p_partkey",0);
    X_760:bat[:int] := algebra.projectionpath(C_750,C_738,X_753);
    (X_761,r1_60) := algebra.subjoin(X_736,X_760,nil:BAT,nil:BAT,false,nil:lng);
    C_764 := algebra.subinter(X_737,X_761,nil:BAT,nil:BAT,false,nil:lng);
    X_765:bat[:lng] := sql.bind_idxbat(X_713,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_767,r1_66) := sql.bind_idxbat(X_713,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_769:bat[:lng] := sql.bind_idxbat(X_713,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_770 := sql.delta(X_765,X_767,r1_66,X_769);
    X_772:bat[:lng] := algebra.projectionpath(C_764,C_728,X_770);
    C_773:bat[:oid] := sql.tid(X_713,"sys","lineitem");
    X_775:bat[:date] := sql.bind(X_713,"sys","lineitem","l_shipdate",0);
    X_781 := algebra.projection(C_773,X_775);
    X_785:date := mtime.addmonths("1994-01-01",12);
    C_786 := algebra.subselect(X_781,"1994-01-01",X_785,true,false,false);
    X_790:bat[:int] := sql.bind(X_713,"sys","lineitem","l_partkey",0);
    X_797:bat[:int] := algebra.projectionpath(C_786,C_773,X_790);
    X_798:bat[:lng] := batmkey.hash(X_797);
    X_803:bat[:int] := sql.bind(X_713,"sys","lineitem","l_suppkey",0);
    X_810:bat[:int] := algebra.projectionpath(C_786,C_773,X_803);
    X_811:bat[:lng] := mkey.bulk_rotate_xor_hash(X_798,22,X_810);
    (X_812,r1_111) := algebra.subjoin(X_772,X_811,nil:BAT,nil:BAT,false,nil:lng);
    X_817 := algebra.projection(C_764,X_736);
    X_818 := algebra.projection(X_812,X_817);
    X_819 := algebra.projection(r1_111,X_797);
    X_820:bat[:bit] := batcalc.==(X_818,X_819);
    C_825 := algebra.subselect(X_820,true,true,true,false,false);
    X_828 := algebra.projection(C_825,X_812);
    X_829:bat[:int] := sql.bind(X_713,"sys","partsupp","ps_suppkey",0);
    X_836:bat[:int] := algebra.projectionpath(C_764,C_728,X_829);
    X_837 := algebra.projection(X_828,X_836);
    X_838 := algebra.projection(C_825,r1_111);
    X_839 := algebra.projection(X_838,X_810);
    X_840:bat[:bit] := batcalc.==(X_837,X_839);
    C_842 := algebra.subselect(X_840,true,true,true,false,false);
    X_843 := algebra.projection(C_842,X_828);
    X_844:bat[:oid] := batcalc.identity(X_817);
    X_846 := algebra.projection(X_843,X_844);
    (X_847,r1_146,r2_146) := group.subgroupdone(X_846);
    X_850:bat[:int] := sql.bind(X_713,"sys","partsupp","ps_availqty",0);
    X_859:bat[:int] := algebra.projectionpath(r1_146,X_843,C_764,C_728,X_850);
    X_866:bat[:lng] := sql.bind(X_713,"sys","lineitem","l_quantity",0);
    X_874:bat[:lng] := algebra.projectionpath(C_842,X_838,C_786,C_773,X_866);
    X_875:bat[:hge] := aggr.subsum(X_874,X_847,r1_146,true,true);
    X_860:bat[:hge] := batcalc.hge(X_859,39,3);
    X_879:bat[:hge] := batcalc.*(X_875,5);
    X_881:bat[:bit] := batcalc.>(X_860,X_879);
    C_883 := algebra.subselect(X_881,true,true,true,true,false);
    X_887:bat[:int] := algebra.projectionpath(C_883,r1_146,X_843,X_836);
    (X_888,r1_187) := algebra.subjoin(X_726,X_887,nil:BAT,nil:BAT,false,nil:lng);
    C_893 := algebra.subinter(X_727,X_888,nil:BAT,nil:BAT,false,nil:lng);
    X_894:bat[:int] := sql.bind(X_713,"sys","supplier","s_nationkey",0);
    X_901:bat[:int] := algebra.projectionpath(C_893,C_714,X_894);
    C_902:bat[:oid] := sql.tid(X_713,"sys","nation");
    X_904:bat[:str] := sql.bind(X_713,"sys","nation","n_name",0);
    X_910 := algebra.projection(C_902,X_904);
    C_912 := algebra.subselect(X_910,"CANADA","CANADA",true,false,false);
    X_914:bat[:int] := sql.bind(X_713,"sys","nation","n_nationkey",0);
    X_921:bat[:int] := algebra.projectionpath(C_912,C_902,X_914);
    (X_922,r1_221) := algebra.subjoin(X_901,X_921,nil:BAT,nil:BAT,false,nil:lng);
    X_928:bat[:str] := sql.bind(X_713,"sys","supplier","s_name",0);
    X_936:bat[:str] := algebra.projectionpath(X_922,C_893,C_714,X_928);
    (X_937,r1_236,r2_236) := algebra.subsort(X_936,false,false);
    X_940 := algebra.projection(r1_236,X_936);
    X_941:bat[:str] := sql.bind(X_713,"sys","supplier","s_address",0);
    X_950:bat[:str] := algebra.projectionpath(r1_236,X_922,C_893,C_714,X_941);
    sql.resultSet(X_969,X_970,X_971,X_973,X_975,X_940,X_950);
end user.main;
#inline               actions= 0 time=6 usec 
#remap                actions= 7 time=197 usec 
#costmodel            actions= 1 time=6 usec 
#coercion             actions= 4 time=33 usec 
#evaluate             actions=12 time=50 usec 
#emptybind            actions=45 time=77 usec 
#aliases              actions=27 time=30 usec 
#deadcode             actions=45 time=23 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=35 time=52 usec 
#commonTerms          actions= 0 time=24 usec 
#projectionpath       actions=19 time=43 usec 
#reorder              actions= 1 time=81 usec 
#deadcode             actions=20 time=18 usec 
#reduce               actions=173 time=34 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=10 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=40 usec 
#total                actions= 1 time=957 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

