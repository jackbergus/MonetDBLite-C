stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 108 # length
function user.main():void;
    X_274 := bat.new(nil:str);
    X_281 := bat.append(X_274,"sys.supplier");
    X_291 := bat.append(X_281,"sys.supplier");
    X_276 := bat.new(nil:str);
    X_283 := bat.append(X_276,"s_name");
    X_292 := bat.append(X_283,"s_address");
    X_277 := bat.new(nil:str);
    X_285 := bat.append(X_277,"char");
    X_294 := bat.append(X_285,"varchar");
    X_278 := bat.new(nil:int);
    X_287 := bat.append(X_278,25);
    X_296 := bat.append(X_287,40);
    X_280 := bat.new(nil:int);
    X_289 := bat.append(X_280,0);
    X_298 := bat.append(X_289,0);
    X_14 := sql.mvc();
    C_15:bat[:oid] := sql.tid(X_14,"sys","supplier");
    X_18:bat[:int] := sql.bind(X_14,"sys","supplier","s_suppkey",0);
    X_27 := algebra.projection(C_15,X_18);
    X_231 := bat.mirror(X_27);
    C_49:bat[:oid] := sql.tid(X_14,"sys","partsupp");
    X_51:bat[:int] := sql.bind(X_14,"sys","partsupp","ps_partkey",0);
    X_57 := algebra.projection(C_49,X_51);
    X_106 := bat.mirror(X_57);
    C_79:bat[:oid] := sql.tid(X_14,"sys","part");
    X_88:bat[:str] := sql.bind(X_14,"sys","part","p_name",0);
    X_94 := algebra.projection(C_79,X_88);
    C_98 := algebra.likesubselect(X_94,nil:BAT,"forest%","",false);
    X_81:bat[:int] := sql.bind(X_14,"sys","part","p_partkey",0);
    X_101:bat[:int] := algebra.projectionpath(C_98,C_79,X_81);
    (X_103,X_104) := algebra.subjoin(X_57,X_101,nil:BAT,nil:BAT,false,nil:lng);
    C_107 := algebra.subinter(X_106,X_103,nil:BAT,nil:BAT,false,nil:lng);
    X_72:bat[:lng] := sql.bind_idxbat(X_14,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_75,X_76:bat[:lng]) := sql.bind_idxbat(X_14,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_74:bat[:lng] := sql.bind_idxbat(X_14,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_77 := sql.delta(X_72,X_75,X_76,X_74);
    X_111:bat[:lng] := algebra.projectionpath(C_107,C_49,X_77);
    C_115:bat[:oid] := sql.tid(X_14,"sys","lineitem");
    X_138:bat[:date] := sql.bind(X_14,"sys","lineitem","l_shipdate",0);
    X_144 := algebra.projection(C_115,X_138);
    X_148:date := mtime.addmonths("1994-01-01",12);
    C_149 := algebra.subselect(X_144,"1994-01-01",X_148,true,false,false);
    X_117:bat[:int] := sql.bind(X_14,"sys","lineitem","l_partkey",0);
    X_153:bat[:int] := algebra.projectionpath(C_149,C_115,X_117);
    X_159:bat[:lng] := batmkey.hash(X_153);
    X_124:bat[:int] := sql.bind(X_14,"sys","lineitem","l_suppkey",0);
    X_154:bat[:int] := algebra.projectionpath(C_149,C_115,X_124);
    X_162:bat[:lng] := mkey.bulk_rotate_xor_hash(X_159,22,X_154);
    (X_172,X_173) := algebra.subjoin(X_111,X_162,nil:BAT,nil:BAT,false,nil:lng);
    X_108 := algebra.projection(C_107,X_57);
    X_174 := algebra.projection(X_172,X_108);
    X_175 := algebra.projection(X_173,X_153);
    X_176:bat[:bit] := batcalc.==(X_174,X_175);
    C_180 := algebra.subselect(X_176,true,true,true,false,false);
    X_181 := algebra.projection(C_180,X_172);
    X_58:bat[:int] := sql.bind(X_14,"sys","partsupp","ps_suppkey",0);
    X_109:bat[:int] := algebra.projectionpath(C_107,C_49,X_58);
    X_183 := algebra.projection(X_181,X_109);
    X_182 := algebra.projection(C_180,X_173);
    X_184 := algebra.projection(X_182,X_154);
    X_185:bat[:bit] := batcalc.==(X_183,X_184);
    C_188 := algebra.subselect(X_185,true,true,true,false,false);
    X_191 := algebra.projection(C_188,X_181);
    X_112:bat[:oid] := batcalc.identity(X_108);
    X_197 := algebra.projection(X_191,X_112);
    (X_202,X_203,X_204) := group.subgroupdone(X_197);
    X_65:bat[:int] := sql.bind(X_14,"sys","partsupp","ps_availqty",0);
    X_206:bat[:int] := algebra.projectionpath(X_203,X_191,C_107,C_49,X_65);
    X_131:bat[:lng] := sql.bind(X_14,"sys","lineitem","l_quantity",0);
    X_200:bat[:lng] := algebra.projectionpath(C_188,X_182,C_149,C_115,X_131);
    X_208:bat[:lng] := aggr.subsum(X_200,X_202,X_203,true,true);
    X_213:bat[:lng] := batcalc.lng(X_206,19,3);
    X_210:bat[:lng] := batcalc.*(X_208,5);
    X_217:bat[:bit] := batcalc.>(X_213,X_210);
    C_219 := algebra.subselect(X_217,true,true,true,true,false);
    X_222:bat[:int] := algebra.projectionpath(C_219,X_203,X_191,X_109);
    (X_225,X_226) := algebra.subjoin(X_27,X_222,nil:BAT,nil:BAT,false,nil:lng);
    C_232 := algebra.subinter(X_231,X_225,nil:BAT,nil:BAT,false,nil:lng);
    X_42:bat[:int] := sql.bind(X_14,"sys","supplier","s_nationkey",0);
    X_236:bat[:int] := algebra.projectionpath(C_232,C_15,X_42);
    C_237:bat[:oid] := sql.tid(X_14,"sys","nation");
    X_246:bat[:str] := sql.bind(X_14,"sys","nation","n_name",0);
    X_252 := algebra.projection(C_237,X_246);
    C_254 := algebra.subselect(X_252,"CANADA","CANADA",true,false,false);
    X_239:bat[:int] := sql.bind(X_14,"sys","nation","n_nationkey",0);
    X_256:bat[:int] := algebra.projectionpath(C_254,C_237,X_239);
    (X_258,X_259) := algebra.subjoin(X_236,X_256,nil:BAT,nil:BAT,false,nil:lng);
    X_28:bat[:str] := sql.bind(X_14,"sys","supplier","s_name",0);
    X_261:bat[:str] := algebra.projectionpath(X_258,C_232,C_15,X_28);
    (X_266,X_267,X_268) := algebra.subsort(X_261,false,false);
    X_271 := algebra.projection(X_267,X_261);
    X_35:bat[:str] := sql.bind(X_14,"sys","supplier","s_address",0);
    X_272:bat[:str] := algebra.projectionpath(X_267,X_258,C_232,C_15,X_35);
    sql.resultSet(X_291,X_292,X_294,X_296,X_298,X_271,X_272);
end user.main;
#inline               actions= 0 time=9 usec 
#remap                actions= 7 time=146 usec 
#costmodel            actions= 1 time=9 usec 
#coercion             actions= 4 time=42 usec 
#evaluate             actions=12 time=83 usec 
#emptybind            actions=45 time=121 usec 
#aliases              actions=27 time=37 usec 
#mergetable           actions= 0 time=174 usec 
#deadcode             actions=45 time=33 usec 
#aliases              actions= 0 time=23 usec 
#constants            actions=35 time=67 usec 
#commonTerms          actions= 0 time=30 usec 
#projectionpath       actions=19 time=57 usec 
#reorder              actions= 1 time=98 usec 
#deadcode             actions=20 time=22 usec 
#reduce               actions=173 time=51 usec 
#matpack              actions= 0 time=6 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=14 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=51 usec 
#total                actions= 1 time=1437 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

