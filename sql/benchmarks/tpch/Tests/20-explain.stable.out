stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 98 # length
function user.s0_1{autoCommit=true}(A0:str,A1:bte,A2:date,A3:date,A4:int,A5:str):void;
    X_8 := sql.mvc();
    X_9:bat[:oid,:oid]  := sql.tid(X_8,"sys","supplier");
    X_12 := sql.bind_idxbat(X_8,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_15,r1_15) := sql.bind_idxbat(X_8,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_18 := sql.bind_idxbat(X_8,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_20 := sql.delta(X_12,X_15,r1_15,X_18);
    X_21 := algebra.leftfetchjoin(X_9,X_20);
    X_22:bat[:oid,:oid]  := sql.tid(X_8,"sys","nation");
    X_24 := sql.bind(X_8,"sys","nation","n_name",0);
    (X_26,r1_26) := sql.bind(X_8,"sys","nation","n_name",2);
    X_28 := sql.bind(X_8,"sys","nation","n_name",1);
    X_29 := sql.delta(X_24,X_26,r1_26,X_28);
    X_30 := algebra.leftfetchjoin(X_22,X_29);
    X_31 := algebra.subselect(X_30,A5,A5,true,true,false);
    X_33 := algebra.leftfetchjoin(X_31,X_22);
    (X_34,r1_35) := algebra.join(X_21,X_33);
    X_262 := algebra.leftfetchjoin(X_34,X_9);
    X_36 := sql.bind(X_8,"sys","supplier","s_suppkey",0);
    (X_38,r1_39) := sql.bind(X_8,"sys","supplier","s_suppkey",2);
    X_40 := sql.bind(X_8,"sys","supplier","s_suppkey",1);
    X_41 := sql.delta(X_36,X_38,r1_39,X_40);
    X_42:bat[:oid,:int]  := algebra.leftfetchjoin(X_262,X_41);
    X_43 := bat.mirror(X_42);
    X_44:bat[:oid,:oid]  := sql.tid(X_8,"sys","partsupp");
    X_47 := sql.bind(X_8,"sys","partsupp","ps_partkey",0);
    (X_50,r1_52) := sql.bind(X_8,"sys","partsupp","ps_partkey",2);
    X_53 := sql.bind(X_8,"sys","partsupp","ps_partkey",1);
    X_55 := sql.delta(X_47,X_50,r1_52,X_53);
    X_56 := algebra.leftfetchjoin(X_44,X_55);
    X_57 := bat.mirror(X_56);
    X_58:bat[:oid,:oid]  := sql.tid(X_8,"sys","part");
    X_60 := sql.bind(X_8,"sys","part","p_name",0);
    (X_62,r1_64) := sql.bind(X_8,"sys","part","p_name",2);
    X_64 := sql.bind(X_8,"sys","part","p_name",1);
    X_65 := sql.delta(X_60,X_62,r1_64,X_64);
    X_66 := algebra.leftfetchjoin(X_58,X_65);
    X_68 := algebra.likesubselect(X_66,A0,"",false);
    X_70 := sql.bind(X_8,"sys","part","p_partkey",0);
    (X_72,r1_76) := sql.bind(X_8,"sys","part","p_partkey",2);
    X_74 := sql.bind(X_8,"sys","part","p_partkey",1);
    X_75 := sql.delta(X_70,X_72,r1_76,X_74);
    X_76:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_68,X_58,X_75);
    (X_77,r1_82) := algebra.join(X_56,X_76);
    X_79 := algebra.tinter(X_57,X_77);
    X_263 := algebra.leftfetchjoin(X_79,X_44);
    X_80 := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_85,r1_90) := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_88 := sql.bind_idxbat(X_8,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_90 := sql.delta(X_80,X_85,r1_90,X_88);
    X_91:bat[:oid,:wrd]  := algebra.leftfetchjoin(X_263,X_90);
    X_92:bat[:oid,:oid]  := sql.tid(X_8,"sys","lineitem");
    X_94 := sql.bind(X_8,"sys","lineitem","l_shipdate",0);
    (X_96,r1_102) := sql.bind(X_8,"sys","lineitem","l_shipdate",2);
    X_98 := sql.bind(X_8,"sys","lineitem","l_shipdate",1);
    X_99 := sql.delta(X_94,X_96,r1_102,X_98);
    X_100 := algebra.leftfetchjoin(X_92,X_99);
    X_101 := mtime.addmonths(A3,A4);
    X_102 := algebra.subselect(X_100,A2,X_101,true,false,false);
    X_264 := algebra.leftfetchjoin(X_102,X_92);
    X_105 := sql.bind(X_8,"sys","lineitem","l_partkey",0);
    (X_107,r1_116) := sql.bind(X_8,"sys","lineitem","l_partkey",2);
    X_109 := sql.bind(X_8,"sys","lineitem","l_partkey",1);
    X_111 := sql.delta(X_105,X_107,r1_116,X_109);
    X_112:bat[:oid,:int]  := algebra.leftfetchjoin(X_264,X_111);
    X_113:bat[:oid,:wrd]  := batcalc.hash(X_112);
    X_115 := sql.bind(X_8,"sys","lineitem","l_suppkey",0);
    (X_118,r1_131) := sql.bind(X_8,"sys","lineitem","l_suppkey",2);
    X_122 := sql.bind(X_8,"sys","lineitem","l_suppkey",1);
    X_124 := sql.delta(X_115,X_118,r1_131,X_122);
    X_125:bat[:oid,:int]  := algebra.leftfetchjoin(X_264,X_124);
    X_126:bat[:oid,:wrd]  := mkey.bulk_rotate_xor_hash(X_113,22,X_125);
    (X_127,r1_141) := algebra.join(X_91,X_126);
    X_129 := algebra.leftfetchjoin(X_79,X_56);
    X_130 := algebra.leftfetchjoin(X_127,X_129);
    X_131 := algebra.leftfetchjoin(r1_141,X_112);
    X_132:bat[:oid,:bit]  := batcalc.==(X_130,X_131);
    X_134 := algebra.subselect(X_132,true,true,true,true,false);
    X_136 := algebra.leftfetchjoin(X_134,X_127);
    X_137 := sql.bind(X_8,"sys","partsupp","ps_suppkey",0);
    (X_141,r1_157) := sql.bind(X_8,"sys","partsupp","ps_suppkey",2);
    X_143 := sql.bind(X_8,"sys","partsupp","ps_suppkey",1);
    X_144 := sql.delta(X_137,X_141,r1_157,X_143);
    X_145:bat[:oid,:int]  := algebra.leftfetchjoin(X_263,X_144);
    X_146 := algebra.leftfetchjoin(X_136,X_145);
    X_147 := algebra.leftfetchjoin(X_134,r1_141);
    X_148 := algebra.leftfetchjoin(X_147,X_125);
    X_149:bat[:oid,:bit]  := batcalc.==(X_146,X_148);
    X_150 := algebra.subselect(X_149,true,true,true,true,false);
    X_151 := algebra.leftfetchjoin(X_150,X_136);
    X_152:bat[:oid,:oid]  := batcalc.identity(X_129);
    X_153 := algebra.leftfetchjoin(X_151,X_152);
    (X_154,r1_174,r2_174) := group.subgroupdone(X_153);
    X_265 := algebra.leftfetchjoin(r1_174,X_151);
    X_171 := sql.bind(X_8,"sys","lineitem","l_quantity",0);
    (X_175,r1_201) := sql.bind(X_8,"sys","lineitem","l_quantity",2);
    X_177 := sql.bind(X_8,"sys","lineitem","l_quantity",1);
    X_178 := sql.delta(X_171,X_175,r1_201,X_177);
    X_179:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_150,X_147,X_264,X_178);
    X_180:bat[:oid,:lng]  := aggr.subsum(X_179,X_154,r1_174,true,true);
    X_157 := sql.bind(X_8,"sys","partsupp","ps_availqty",0);
    (X_160,r1_180) := sql.bind(X_8,"sys","partsupp","ps_availqty",2);
    X_163 := sql.bind(X_8,"sys","partsupp","ps_availqty",1);
    X_165 := sql.delta(X_157,X_160,r1_180,X_163);
    X_166:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_265,X_79,X_44,X_165);
    X_167:bat[:oid,:lng]  := batcalc.lng(X_166,19,2);
    X_169 := calc.lng(1,A1,11,1);
    X_182:bat[:oid,:lng]  := batcalc.lng(X_180,11,1);
    X_183:bat[:oid,:lng]  := batcalc.*(X_169,X_182);
    X_184:bat[:oid,:bit]  := batcalc.>(X_167,X_183);
    X_185 := algebra.subselect(X_184,true,true,true,true,false);
    X_187:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_185,X_265,X_145);
    (X_188,r1_221,r2_221) := group.subgroupdone(X_187);
    X_191 := algebra.leftfetchjoin(r1_221,X_187);
    (X_192,r1_225) := algebra.join(X_42,X_191);
    X_194 := algebra.tinter(X_43,X_192);
    X_266 := algebra.leftfetchjoin(X_194,X_34);
    X_195 := sql.bind(X_8,"sys","supplier","s_name",0);
    (X_199,r1_232) := sql.bind(X_8,"sys","supplier","s_name",2);
    X_203 := sql.bind(X_8,"sys","supplier","s_name",1);
    X_205 := sql.delta(X_195,X_199,r1_232,X_203);
    X_206:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_266,X_9,X_205);
    (X_207,r1_242,r2_242) := algebra.subsort(X_206,false,false);
    X_210 := algebra.leftfetchjoin(r1_242,X_206);
    X_211 := sql.bind(X_8,"sys","supplier","s_address",0);
    (X_213,r1_248) := sql.bind(X_8,"sys","supplier","s_address",2);
    X_215 := sql.bind(X_8,"sys","supplier","s_address",1);
    X_216 := sql.delta(X_211,X_213,r1_248,X_215);
    X_217:bat[:oid,:str]  := algebra.leftfetchjoinPath(r1_242,X_266,X_9,X_216);
    X_218 := sql.resultSet(2,1,X_210);
    sql.rsColumn(X_218,"sys.supplier","s_name","varchar",25,0,X_210);
    sql.rsColumn(X_218,"sys.supplier","s_address","varchar",40,0,X_217);
    X_225 := io.stdout();
    sql.exportResult(X_225,X_218);
end s0_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

