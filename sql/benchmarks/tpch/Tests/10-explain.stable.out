stdout of test '10-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_custkey,
#	c_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	c_acctbal,
#	n_name,
#	c_address,
#	c_phone,
#	c_comment
#from
#	customer,
#	orders,
#	lineitem,
#	nation
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate >= date '1993-10-01'
#	and o_orderdate < date '1993-10-01' + interval '3' month
#	and l_returnflag = 'R'
#	and c_nationkey = n_nationkey
#group by
#	c_custkey,
#	c_name,
#	c_acctbal,
#	c_phone,
#	n_name,
#	c_address,
#	c_comment
#order by
#	revenue desc
#limit 20;
% .explain # table_name
% mal # name
% clob # type
% 619 # length
function user.s4_1():void;
    X_298:void := querylog.define("explain select\n c_custkey,\n c_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue,\n c_acctbal,\n n_name,\n c_address,\n c_phone,\n c_comment\nfrom\n customer,\n orders,\n lineitem,\n nation\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and o_orderdate >= date \\'1993-10-01\\'\n and o_orderdate < date \\'1993-10-01\\' + interval \\'3\\' month\n and l_returnflag = \\'R\\'\n and c_nationkey = n_nationkey\ngroup by\n c_custkey,\n c_name,\n c_acctbal,\n c_phone,\n n_name,\n c_address,\n c_comment\norder by\n revenue desc\nlimit 20;","sequential_pipe",107);
    X_224 := bat.new(nil:str);
    X_231 := bat.append(X_224,"sys.customer");
    X_241 := bat.append(X_231,"sys.customer");
    X_249 := bat.append(X_241,"sys.L2");
    X_259 := bat.append(X_249,"sys.customer");
    X_267 := bat.append(X_259,"sys.nation");
    X_276 := bat.append(X_267,"sys.customer");
    X_285 := bat.append(X_276,"sys.customer");
    X_291 := bat.append(X_285,"sys.customer");
    X_226 := bat.new(nil:str);
    X_233 := bat.append(X_226,"c_custkey");
    X_242 := bat.append(X_233,"c_name");
    X_251 := bat.append(X_242,"revenue");
    X_260 := bat.append(X_251,"c_acctbal");
    X_269 := bat.append(X_260,"n_name");
    X_278 := bat.append(X_269,"c_address");
    X_286 := bat.append(X_278,"c_phone");
    X_292 := bat.append(X_286,"c_comment");
    X_227 := bat.new(nil:str);
    X_235 := bat.append(X_227,"int");
    X_244 := bat.append(X_235,"varchar");
    X_253 := bat.append(X_244,"decimal");
    X_262 := bat.append(X_253,"decimal");
    X_271 := bat.append(X_262,"char");
    X_280 := bat.append(X_271,"varchar");
    X_288 := bat.append(X_280,"char");
    X_294 := bat.append(X_288,"varchar");
    X_228 := bat.new(nil:int);
    X_237 := bat.append(X_228,32);
    X_246 := bat.append(X_237,25);
    X_255 := bat.append(X_246,19);
    X_263 := bat.append(X_255,15);
    X_273 := bat.append(X_263,25);
    X_282 := bat.append(X_273,40);
    X_289 := bat.append(X_282,15);
    X_295 := bat.append(X_289,117);
    X_230 := bat.new(nil:int);
    X_239 := bat.append(X_230,0);
    X_248 := bat.append(X_239,0);
    X_257 := bat.append(X_248,4);
    X_265 := bat.append(X_257,2);
    X_274 := bat.append(X_265,0);
    X_284 := bat.append(X_274,0);
    X_290 := bat.append(X_284,0);
    X_297 := bat.append(X_290,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","lineitem","l_returnflag",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    C_15 := algebra.subselect(X_4,C_1,"R","R",true,false,false);
    X_19:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_21,r1_27) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_23:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_26 := sql.projectdelta(C_15,X_19,X_21,r1_27,X_23);
    X_29:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_27:bat[:oid] := sql.tid(X_0,"sys","orders");
    X_39:date := mtime.addmonths("1993-10-01",3);
    C_40 := algebra.subselect(X_29,C_27,"1993-10-01",X_39,true,false,false);
    (X_42,r1_48) := algebra.subjoin(X_26,C_40,nil:BAT,nil:BAT,false,nil:lng);
    X_47:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_49,r1_55) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_51:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_54 := sql.projectdelta(C_40,X_47,X_49,r1_55,X_51);
    X_55 := algebra.projection(r1_48,X_54);
    C_56:bat[:oid] := sql.tid(X_0,"sys","customer");
    (X_58,r1_64) := algebra.subjoin(X_55,C_56,nil:BAT,nil:BAT,false,nil:lng);
    X_61:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",0);
    (X_63,r1_69) := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",2);
    X_65:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",1);
    X_67 := sql.projectdelta(C_56,X_61,X_63,r1_69,X_65);
    X_68 := algebra.projection(r1_64,X_67);
    C_69:bat[:oid] := sql.tid(X_0,"sys","nation");
    (X_71,r1_77) := algebra.subjoin(X_68,C_69,nil:BAT,nil:BAT,false,nil:lng);
    X_73:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_83:bat[:lng] := algebra.projectionpath(X_71,X_58,X_42,C_15,X_73);
    X_88:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_98:bat[:lng] := algebra.projectionpath(X_71,X_58,X_42,C_15,X_88);
    X_99:bat[:lng] := batcalc.-(100:lng,X_98);
    X_102:bat[:lng] := batcalc.*(X_83,X_99);
    X_104:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_111:bat[:str] := algebra.projectionpath(r1_77,C_69,X_104);
    X_112:bat[:int] := sql.bind(X_0,"sys","customer","c_custkey",0);
    X_120:bat[:int] := algebra.projectionpath(X_71,r1_64,C_56,X_112);
    (X_121,r1_127,r2_127) := group.subgroup(X_120);
    (X_124,r1_130,r2_130) := group.subgroupdone(X_111,X_121);
    X_127:bat[:lng] := aggr.subsum(X_102,X_124,r1_130,true,true);
    C_135 := algebra.firstn(X_127,20,false,false);
    X_138 := algebra.projection(C_135,X_127);
    (X_139,r1_145,r2_145) := algebra.subsort(X_138,true,false);
    X_144:bat[:int] := algebra.projectionpath(r1_145,C_135,r1_130,X_120);
    X_152:bat[:str] := sql.bind(X_0,"sys","customer","c_name",0);
    X_150 := algebra.subslice(X_144,0,19:lng);
    X_164:bat[:str] := algebra.projectionpath(X_150,r1_145,C_135,r1_130,X_71,r1_64,C_56,X_152);
    X_167:bat[:lng] := sql.bind(X_0,"sys","customer","c_acctbal",0);
    X_179:bat[:lng] := algebra.projectionpath(X_150,r1_145,C_135,r1_130,X_71,r1_64,C_56,X_167);
    X_183:bat[:str] := algebra.projectionpath(X_150,r1_145,C_135,r1_130,X_111);
    X_184:bat[:str] := sql.bind(X_0,"sys","customer","c_address",0);
    X_196:bat[:str] := algebra.projectionpath(X_150,r1_145,C_135,r1_130,X_71,r1_64,C_56,X_184);
    X_197:bat[:str] := sql.bind(X_0,"sys","customer","c_phone",0);
    X_209:bat[:str] := algebra.projectionpath(X_150,r1_145,C_135,r1_130,X_71,r1_64,C_56,X_197);
    X_210:bat[:str] := sql.bind(X_0,"sys","customer","c_comment",0);
    X_222:bat[:str] := algebra.projectionpath(X_150,r1_145,C_135,r1_130,X_71,r1_64,C_56,X_210);
    X_151 := algebra.projection(X_150,X_144);
    X_166:bat[:lng] := algebra.projectionpath(X_150,r1_145,X_138);
    sql.resultSet(X_291,X_292,X_294,X_295,X_297,X_151,X_164,X_166,X_179,X_183,X_196,X_209,X_222);
end user.s4_1;
#inline               actions= 0 time=8 usec 
#remap                actions= 2 time=64 usec 
#costmodel            actions= 1 time=7 usec 
#coercion             actions= 4 time=28 usec 
#evaluate             actions= 9 time=79 usec 
#emptybind            actions=33 time=66 usec 
#pushselect           actions=12 time=68 usec 
#aliases              actions=27 time=31 usec 
#mergetable           actions= 0 time=111 usec 
#deadcode             actions=36 time=23 usec 
#aliases              actions= 0 time=19 usec 
#constants            actions=36 time=47 usec 
#commonTerms          actions= 0 time=19 usec 
#projectionpath       actions=45 time=62 usec 
#reorder              actions= 1 time=87 usec 
#deadcode             actions=45 time=20 usec 
#reduce               actions=189 time=34 usec 
#matpack              actions= 0 time=3 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=7 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=43 usec 
#total                actions= 1 time=1097 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

