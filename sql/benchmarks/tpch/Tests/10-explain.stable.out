stdout of test '10-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_custkey,
#	c_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	c_acctbal,
#	n_name,
#	c_address,
#	c_phone,
#	c_comment
#from
#	customer,
#	orders,
#	lineitem,
#	nation
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate >= date '1993-10-01'
#	and o_orderdate < date '1993-10-01' + interval '3' month
#	and l_returnflag = 'R'
#	and c_nationkey = n_nationkey
#group by
#	c_custkey,
#	c_name,
#	c_acctbal,
#	c_phone,
#	n_name,
#	c_address,
#	c_comment
#order by
#	revenue desc
#limit 20;
% .explain # table_name
% mal # name
% clob # type
% 619 # length
function user.s4_1():void;
    X_332:void := querylog.define("explain select\n c_custkey,\n c_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue,\n c_acctbal,\n n_name,\n c_address,\n c_phone,\n c_comment\nfrom\n customer,\n orders,\n lineitem,\n nation\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and o_orderdate >= date \\'1993-10-01\\'\n and o_orderdate < date \\'1993-10-01\\' + interval \\'3\\' month\n and l_returnflag = \\'R\\'\n and c_nationkey = n_nationkey\ngroup by\n c_custkey,\n c_name,\n c_acctbal,\n c_phone,\n n_name,\n c_address,\n c_comment\norder by\n revenue desc\nlimit 20;","sequential_pipe",107);
    X_258 := bat.new(nil:str);
    X_265 := bat.append(X_258,"sys.customer");
    X_275 := bat.append(X_265,"sys.customer");
    X_283 := bat.append(X_275,"sys.L5");
    X_293 := bat.append(X_283,"sys.customer");
    X_301 := bat.append(X_293,"sys.nation");
    X_310 := bat.append(X_301,"sys.customer");
    X_319 := bat.append(X_310,"sys.customer");
    X_325 := bat.append(X_319,"sys.customer");
    X_260 := bat.new(nil:str);
    X_267 := bat.append(X_260,"c_custkey");
    X_276 := bat.append(X_267,"c_name");
    X_285 := bat.append(X_276,"revenue");
    X_294 := bat.append(X_285,"c_acctbal");
    X_303 := bat.append(X_294,"n_name");
    X_312 := bat.append(X_303,"c_address");
    X_320 := bat.append(X_312,"c_phone");
    X_326 := bat.append(X_320,"c_comment");
    X_261 := bat.new(nil:str);
    X_269 := bat.append(X_261,"int");
    X_278 := bat.append(X_269,"varchar");
    X_287 := bat.append(X_278,"decimal");
    X_296 := bat.append(X_287,"decimal");
    X_305 := bat.append(X_296,"char");
    X_314 := bat.append(X_305,"varchar");
    X_322 := bat.append(X_314,"char");
    X_328 := bat.append(X_322,"varchar");
    X_262 := bat.new(nil:int);
    X_271 := bat.append(X_262,32);
    X_280 := bat.append(X_271,25);
    X_289 := bat.append(X_280,19);
    X_297 := bat.append(X_289,15);
    X_307 := bat.append(X_297,25);
    X_316 := bat.append(X_307,40);
    X_323 := bat.append(X_316,15);
    X_329 := bat.append(X_323,117);
    X_264 := bat.new(nil:int);
    X_273 := bat.append(X_264,0);
    X_282 := bat.append(X_273,0);
    X_291 := bat.append(X_282,4);
    X_299 := bat.append(X_291,2);
    X_308 := bat.append(X_299,0);
    X_318 := bat.append(X_308,0);
    X_324 := bat.append(X_318,0);
    X_331 := bat.append(X_324,0);
    X_0 := sql.mvc();
    X_23:bat[:str] := sql.bind(X_0,"sys","lineitem","l_returnflag",0);
    C_3:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    C_38 := algebra.subselect(X_23,C_3,"R","R",true,false,false);
    X_30:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_33,X_34:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_32:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_45 := sql.projectdelta(C_38,X_30,X_33,X_34,X_32);
    X_48:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_46:bat[:oid] := sql.tid(X_0,"sys","orders");
    X_65:date := mtime.addmonths("1993-10-01",3);
    C_66 := algebra.subselect(X_48,C_46,"1993-10-01",X_65,true,false,false);
    (X_70,X_71) := algebra.subjoin(X_45,C_66,nil:BAT,nil:BAT,false,nil:lng);
    X_55:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_58,X_59:bat[:oid]) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_57:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_69 := sql.projectdelta(C_66,X_55,X_58,X_59,X_57);
    X_82 := algebra.projection(X_71,X_69);
    C_83:bat[:oid] := sql.tid(X_0,"sys","customer");
    (X_134,X_135) := algebra.subjoin(X_82,C_83,nil:BAT,nil:BAT,false,nil:lng);
    X_127:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",0);
    (X_130,X_131:bat[:oid]) := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",2);
    X_129:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",1);
    X_133 := sql.projectdelta(C_83,X_127,X_130,X_131,X_129);
    X_154 := algebra.projection(X_135,X_133);
    C_155:bat[:oid] := sql.tid(X_0,"sys","nation");
    (X_164,X_165) := algebra.subjoin(X_154,C_155,nil:BAT,nil:BAT,false,nil:lng);
    X_6:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_166:bat[:lng] := algebra.projectionpath(X_164,X_134,X_70,C_38,X_6);
    X_16:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_167:bat[:lng] := algebra.projectionpath(X_164,X_134,X_70,C_38,X_16);
    X_187:bat[:lng] := batcalc.-(100:lng,X_167);
    X_190:bat[:lng] := batcalc.*(X_166,X_187);
    X_157:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_181:bat[:str] := algebra.projectionpath(X_165,C_155,X_157);
    X_85:bat[:int] := sql.bind(X_0,"sys","customer","c_custkey",0);
    X_173:bat[:int] := algebra.projectionpath(X_164,X_135,C_83,X_85);
    (X_192,X_193,X_194) := group.subgroup(X_173);
    (X_195,X_196,X_197) := group.subgroupdone(X_181,X_192);
    X_92:bat[:str] := sql.bind(X_0,"sys","customer","c_name",0);
    X_113:bat[:lng] := sql.bind(X_0,"sys","customer","c_acctbal",0);
    X_106:bat[:str] := sql.bind(X_0,"sys","customer","c_phone",0);
    X_99:bat[:str] := sql.bind(X_0,"sys","customer","c_address",0);
    X_120:bat[:str] := sql.bind(X_0,"sys","customer","c_comment",0);
    X_205:bat[:lng] := aggr.subsum(X_190,X_195,X_196,true,true);
    C_211 := algebra.firstn(X_205,20,false,false);
    X_216 := algebra.projection(C_211,X_205);
    (X_230,X_231,X_232) := algebra.subsort(X_216,true,false);
    X_233:bat[:int] := algebra.projectionpath(X_231,C_211,X_196,X_173);
    X_248 := algebra.subslice(X_233,0,19:lng);
    X_250:bat[:str] := algebra.projectionpath(X_248,X_231,C_211,X_196,X_164,X_135,C_83,X_92);
    X_252:bat[:lng] := algebra.projectionpath(X_248,X_231,C_211,X_196,X_164,X_135,C_83,X_113);
    X_253:bat[:str] := algebra.projectionpath(X_248,X_231,C_211,X_196,X_181);
    X_254:bat[:str] := algebra.projectionpath(X_248,X_231,C_211,X_196,X_164,X_135,C_83,X_99);
    X_255:bat[:str] := algebra.projectionpath(X_248,X_231,C_211,X_196,X_164,X_135,C_83,X_106);
    X_256:bat[:str] := algebra.projectionpath(X_248,X_231,C_211,X_196,X_164,X_135,C_83,X_120);
    X_249 := algebra.projection(X_248,X_233);
    X_251:bat[:lng] := algebra.projectionpath(X_248,X_231,X_216);
    sql.resultSet(X_325,X_326,X_328,X_329,X_331,X_249,X_250,X_251,X_252,X_253,X_254,X_255,X_256);
end user.s4_1;
#inline               actions= 0 time=8 usec 
#remap                actions= 2 time=64 usec 
#costmodel            actions= 1 time=7 usec 
#coercion             actions= 4 time=28 usec 
#evaluate             actions= 9 time=79 usec 
#emptybind            actions=33 time=66 usec 
#pushselect           actions=12 time=68 usec 
#aliases              actions=27 time=31 usec 
#mergetable           actions= 0 time=111 usec 
#deadcode             actions=36 time=23 usec 
#aliases              actions= 0 time=19 usec 
#constants            actions=36 time=47 usec 
#commonTerms          actions= 0 time=19 usec 
#projectionpath       actions=45 time=62 usec 
#reorder              actions= 1 time=87 usec 
#deadcode             actions=45 time=20 usec 
#reduce               actions=189 time=34 usec 
#matpack              actions= 0 time=3 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=7 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=43 usec 
#total                actions= 1 time=1097 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

