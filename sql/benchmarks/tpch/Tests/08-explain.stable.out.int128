stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 963 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:bte,A3:str,A4:date,A5:date,A6:str):void;
    X_221:void := querylog.define("explain select\n\to_year,\n\tsum(case\n\t\twhen nation = \\'BRAZIL\\' then volume\n\t\telse 0\n\tend) / sum(volume) as mkt_share\nfrom\n\t(\n\t\tselect\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume,\n\t\t\tn2.n_name as nation\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2,\n\t\t\tregion\n\t\twhere\n\t\t\tp_partkey = l_partkey\n\t\t\tand s_suppkey = l_suppkey\n\t\t\tand l_orderkey = o_orderkey\n\t\t\tand o_custkey = c_custkey\n\t\t\tand c_nationkey = n1.n_nationkey\n\t\t\tand n1.n_regionkey = r_regionkey\n\t\t\tand r_name = \\'AMERICA\\'\n\t\t\tand s_nationkey = n2.n_nationkey\n\t\t\tand o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t\t\tand p_type = \\'ECONOMY ANODIZED STEEL\\'\n\t) as all_nations\ngroup by\n\to_year\norder by\n\to_year;","sequential_pipe",132);
    X_194 := bat.new(nil:oid,nil:str);
    X_202 := bat.append(X_194,"sys.all_nations");
    X_212 := bat.append(X_202,"sys.L3");
    X_197 := bat.new(nil:oid,nil:str);
    X_204 := bat.append(X_197,"o_year");
    X_214 := bat.append(X_204,"mkt_share");
    X_198 := bat.new(nil:oid,nil:str);
    X_206 := bat.append(X_198,"int");
    X_216 := bat.append(X_206,"decimal");
    X_199 := bat.new(nil:oid,nil:int);
    X_208 := bat.append(X_199,32);
    X_218 := bat.append(X_208,39);
    X_201 := bat.new(nil:oid,nil:int);
    X_210 := bat.append(X_201,0);
    X_219 := bat.append(X_210,4);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineitem");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","orders");
    X_284 := algebra.subselect(X_24,X_22,A4,A5,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","orders","o_orderdate",2);
    X_285 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A4,A5,true,true,false);
    X_28:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",1);
    X_287 := algebra.subselect(X_28,X_22,A4,A5,true,true,false);
    X_29 := sql.subdelta(X_284,X_22,X_26,X_285,X_287);
    (X_31,r1_37) := algebra.subjoin(X_21,X_29,nil:BAT,nil:BAT,false,nil:lng);
    X_36:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",0);
    (X_38,r1_44) := sql.bind(X_9,"sys","lineitem","l_partkey",2);
    X_40:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",1);
    X_41 := sql.projectdelta(X_10,X_36,X_38,r1_44,X_40);
    X_42 := algebra.leftfetchjoin(X_31,X_41);
    X_45:bat[:oid,:str] := sql.bind(X_9,"sys","part","p_type",0);
    X_43:bat[:oid,:oid] := sql.tid(X_9,"sys","part");
    X_288 := algebra.subselect(X_45,X_43,A6,A6,true,false,false);
    (X_47,r1_54) := sql.bind(X_9,"sys","part","p_type",2);
    X_289 := algebra.subselect(r1_54,nil:bat[:oid,:oid],A6,A6,true,false,false);
    X_49:bat[:oid,:str] := sql.bind(X_9,"sys","part","p_type",1);
    X_291 := algebra.subselect(X_49,X_43,A6,A6,true,false,false);
    X_50 := sql.subdelta(X_288,X_43,X_47,X_289,X_291);
    X_52:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",0);
    (X_54,r1_64) := sql.bind(X_9,"sys","part","p_partkey",2);
    X_56:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",1);
    X_57 := sql.projectdelta(X_50,X_52,X_54,r1_64,X_56);
    (X_58,r1_70) := algebra.subjoin(X_42,X_57,nil:BAT,nil:BAT,false,nil:lng);
    X_61:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_63,r1_75) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_65:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_66 := sql.projectdelta(X_29,X_61,X_63,r1_75,X_65);
    X_67:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_58,r1_37,X_66);
    X_68:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_70,r1_85) := algebra.subjoin(X_67,X_68,nil:BAT,nil:BAT,false,nil:lng);
    X_75:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_77,r1_92) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_79:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_80 := sql.projectdelta(X_68,X_75,X_77,r1_92,X_79);
    X_81 := algebra.leftfetchjoin(r1_85,X_80);
    X_82:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    (X_84,r1_100) := algebra.subjoin(X_81,X_82,nil:BAT,nil:BAT,false,nil:lng);
    X_86:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",0);
    (X_88,r1_104) := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",2);
    X_90:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",1);
    X_91 := sql.projectdelta(X_82,X_86,X_88,r1_104,X_90);
    X_92 := algebra.leftfetchjoin(r1_100,X_91);
    X_95:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",0);
    X_93:bat[:oid,:oid] := sql.tid(X_9,"sys","region");
    X_292 := algebra.subselect(X_95,X_93,A3,A3,true,false,false);
    (X_97,r1_114) := sql.bind(X_9,"sys","region","r_name",2);
    X_293 := algebra.subselect(r1_114,nil:bat[:oid,:oid],A3,A3,true,false,false);
    X_99:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",1);
    X_295 := algebra.subselect(X_99,X_93,A3,A3,true,false,false);
    X_100 := sql.subdelta(X_292,X_93,X_97,X_293,X_295);
    (X_104,r1_125) := algebra.subjoin(X_92,X_100,nil:BAT,nil:BAT,false,nil:lng);
    X_109:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (X_111,r1_132) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_113:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_114 := sql.projectdelta(X_10,X_109,X_111,r1_132,X_113);
    X_115:bat[:oid,:int] := algebra.leftfetchjoinPath(X_104,X_84,X_70,X_58,X_31,X_114);
    X_116:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_118:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (X_120,r1_146) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_122:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_123 := sql.projectdelta(X_116,X_118,X_120,r1_146,X_122);
    (X_124,r1_151) := algebra.subjoin(X_115,X_123,nil:BAT,nil:BAT,false,nil:lng);
    X_126:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_128,r1_155) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_130:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_131 := sql.projectdelta(X_116,X_126,X_128,r1_155,X_130);
    X_132 := algebra.leftfetchjoin(r1_151,X_131);
    (X_133,r1_163) := algebra.subjoin(X_132,X_82,nil:BAT,nil:BAT,false,nil:lng);
    X_139 := sql.projectdelta(X_29,X_24,X_26,r1_27,X_28);
    X_140:bat[:oid,:date] := algebra.leftfetchjoinPath(X_133,X_124,X_104,X_84,X_70,X_58,r1_37,X_139);
    X_141:bat[:oid,:int] := batmtime.year(X_140);
    (X_142,r1_180,r2_180) := group.subgroupdone(X_141);
    X_145 := algebra.leftfetchjoin(r1_180,X_141);
    X_150:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (X_152,r1_190) := sql.bind(X_9,"sys","nation","n_name",2);
    X_154:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_155 := sql.projectdelta(X_82,X_150,X_152,r1_190,X_154);
    X_156 := algebra.leftfetchjoin(r1_163,X_155);
    X_157:bat[:oid,:bit] := batcalc.==(X_156,A0);
    X_158:bat[:oid,:bit] := batcalc.isnil(X_157);
    X_160:bat[:oid,:bit] := batcalc.ifthenelse(X_158,false,X_157);
    X_161:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_163,r1_210) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_165:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_166 := sql.projectdelta(X_10,X_161,X_163,r1_210,X_165);
    X_167:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_133,X_124,X_104,X_84,X_70,X_58,X_31,X_166);
    X_170 := calc.lng(A2,15,2);
    X_172:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_174,r1_231) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_176:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_177 := sql.projectdelta(X_10,X_172,X_174,r1_231,X_176);
    X_178:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_133,X_124,X_104,X_84,X_70,X_58,X_31,X_177);
    X_179:bat[:oid,:lng] := batcalc.-(X_170,X_178);
    X_180:bat[:oid,:hge] := batcalc.*(X_167,X_179);
    X_181 := calc.hge(A1,33,4);
    X_183:bat[:oid,:hge] := batcalc.ifthenelse(X_160,X_180,X_181);
    X_184:bat[:oid,:hge] := aggr.subsum(X_183,X_142,r1_180,true,true);
    X_190:bat[:oid,:hge] := aggr.subsum(X_180,X_142,r1_180,true,true);
    (X_146,r1_184,r2_184) := algebra.subsort(X_145,false,false);
    X_149 := algebra.leftfetchjoin(r1_184,X_145);
    X_187:bat[:oid,:hge] := batcalc.hge(4,X_184,39,8);
    X_191:bat[:oid,:hge] := batcalc./(X_187,X_190);
    X_192 := algebra.leftfetchjoin(r1_184,X_191);
    sql.resultSet(X_212,X_214,X_216,X_218,X_219,X_149,X_192);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

