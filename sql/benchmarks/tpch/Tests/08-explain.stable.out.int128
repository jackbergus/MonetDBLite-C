stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 835 # length
function user.s4_1():void;
    X_273:void := querylog.define("explain select\n o_year,\n sum(case\n when nation = \\'BRAZIL\\' then volume\n else 0\n end) / sum(volume) as mkt_share\nfrom\n (\n select\n extract(year from o_orderdate) as o_year,\n l_extendedprice * (1 - l_discount) as volume,\n n2.n_name as nation\n from\n part,\n supplier,\n lineitem,\n orders,\n customer,\n nation n1,\n nation n2,\n region\n where\n p_partkey = l_partkey\n and s_suppkey = l_suppkey\n and l_orderkey = o_orderkey\n and o_custkey = c_custkey\n and c_nationkey = n1.n_nationkey\n and n1.n_regionkey = r_regionkey\n and r_name = \\'AMERICA\\'\n and s_nationkey = n2.n_nationkey\n and o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n and p_type = \\'ECONOMY ANODIZED STEEL\\'\n ) as all_nations\ngroup by\n o_year\norder by\n o_year;","sequential_pipe",96);
    X_247 := bat.new(nil:str);
    X_254 := bat.append(X_247,"sys.all_nations");
    X_264 := bat.append(X_254,"sys.L14");
    X_249 := bat.new(nil:str);
    X_256 := bat.append(X_249,"o_year");
    X_266 := bat.append(X_256,"mkt_share");
    X_250 := bat.new(nil:str);
    X_258 := bat.append(X_250,"int");
    X_268 := bat.append(X_258,"decimal");
    X_251 := bat.new(nil:int);
    X_260 := bat.append(X_251,32);
    X_270 := bat.append(X_260,39);
    X_253 := bat.new(nil:int);
    X_262 := bat.append(X_253,0);
    X_271 := bat.append(X_262,4);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",0);
    (X_7,r1_15) := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",1);
    X_13 := sql.projectdelta(C_1,X_4,X_7,r1_15,X_10);
    X_16:bat[:str] := sql.bind(X_0,"sys","region","r_name",0);
    C_14:bat[:oid] := sql.tid(X_0,"sys","region");
    C_24 := algebra.subselect(X_16,C_14,"AMERICA","AMERICA",true,false,false);
    (X_29,r1_37) := algebra.subjoin(X_13,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := algebra.projection(X_29,C_1);
    C_35:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",0);
    (X_39,r1_47) := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",2);
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",1);
    X_43 := sql.projectdelta(C_35,X_37,X_39,r1_47,X_41);
    (X_44,r1_52) := algebra.subjoin(X_34,X_43,nil:BAT,nil:BAT,false,nil:lng);
    X_46 := algebra.projection(r1_52,C_35);
    X_49:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_47:bat[:oid] := sql.tid(X_0,"sys","orders");
    C_58 := algebra.subselect(X_49,C_47,"1995-01-01","1996-12-31",true,true,false);
    X_62:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_64,r1_72) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_66:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_69 := sql.projectdelta(C_58,X_62,X_64,r1_72,X_66);
    (X_70,r1_78) := algebra.subjoin(X_46,X_69,nil:BAT,nil:BAT,false,nil:lng);
    X_76 := algebra.projection(r1_78,C_58);
    C_77:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_79:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_81,r1_89) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_83:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_85 := sql.projectdelta(C_77,X_79,X_81,r1_89,X_83);
    (X_86,r1_94) := algebra.subjoin(X_76,X_85,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    X_95:bat[:int] := algebra.projectionpath(r1_94,C_77,X_88);
    X_98:bat[:str] := sql.bind(X_0,"sys","part","p_type",0);
    C_96:bat[:oid] := sql.tid(X_0,"sys","part");
    C_106 := algebra.subselect(X_98,C_96,"ECONOMY ANODIZED STEEL","ECONOMY ANODIZED STEEL",true,false,false);
    X_110:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_117 := algebra.projection(C_106,X_110);
    (X_118,r1_126) := algebra.subjoin(X_95,X_117,nil:BAT,nil:BAT,false,nil:lng);
    X_123:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    X_131:bat[:int] := algebra.projectionpath(X_118,r1_94,C_77,X_123);
    C_132:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_134:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    X_140 := algebra.projection(C_132,X_134);
    (X_141,r1_149) := algebra.subjoin(X_131,X_140,nil:BAT,nil:BAT,false,nil:lng);
    X_144:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_146,r1_154) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_148:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_150 := sql.projectdelta(C_132,X_144,X_146,r1_154,X_148);
    X_151 := algebra.projection(r1_149,X_150);
    (X_154,r1_162) := algebra.subjoin(X_151,C_1,nil:BAT,nil:BAT,false,nil:lng);
    X_164:bat[:date] := algebra.projectionpath(X_154,X_141,X_118,X_86,r1_78,C_58,X_49);
    X_165:bat[:int] := batmtime.year(X_164);
    (X_168,r1_176,r2_176) := group.subgroupdone(X_165);
    X_171 := algebra.projection(r1_176,X_165);
    X_180:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_187:bat[:str] := algebra.projectionpath(r1_162,C_1,X_180);
    X_189:bat[:bit] := batcalc.==(X_187,"BRAZIL");
    X_192:bat[:bit] := batcalc.isnil(X_189);
    X_195:bat[:bit] := batcalc.ifthenelse(X_192,false,X_189);
    X_197:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_207:bat[:lng] := algebra.projectionpath(X_154,X_141,X_118,r1_94,C_77,X_197);
    X_215:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_225:bat[:lng] := algebra.projectionpath(X_154,X_141,X_118,r1_94,C_77,X_215);
    X_226:bat[:lng] := batcalc.-(100:lng,X_225);
    X_229:bat[:hge] := batcalc.*(X_207,X_226);
    X_234:bat[:hge] := batcalc.ifthenelse(X_195,X_229,0:hge);
    X_236:bat[:hge] := aggr.subsum(X_234,X_168,r1_176,true,true);
    X_242:bat[:hge] := aggr.subsum(X_229,X_168,r1_176,true,true);
    X_172 := bat.setKey(X_171,true);
    (X_174,r1_182,r2_182) := algebra.subsort(X_172,false,false);
    X_179 := algebra.projection(r1_182,X_172);
    X_239:bat[:hge] := batcalc.hge(4,X_236,39,8);
    X_243:bat[:hge] := batcalc./(X_239,X_242);
    X_245 := algebra.projection(r1_182,X_243);
    sql.resultSet(X_264,X_266,X_268,X_270,X_271,X_179,X_245);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=121 usec 
#remap                actions=11 time=819 usec 
#costModel            actions= 1 time=227 usec 
#coercions            actions= 1 time=300 usec 
#evaluate             actions=10 time=308 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions=15 time=284 usec 
#aliases              actions=27 time=250 usec 
#mergetable           actions= 0 time=254 usec 
#deadcode             actions=26 time=233 usec 
#aliases              actions= 0 time=26 usec 
#constants            actions=37 time=281 usec 
#commonTerms          actions= 2 time=211 usec 
#projectionpath       actions=17 time=210 usec 
#reorder              actions= 1 time=276 usec 
#deadcode             actions=19 time=196 usec 
#reduce               actions=159 time=275 usec 
#matpack              actions= 0 time=11 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=188 usec 
#garbageCollector     actions= 1 time=205 usec 
#total                actions= 1 time=4848 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

