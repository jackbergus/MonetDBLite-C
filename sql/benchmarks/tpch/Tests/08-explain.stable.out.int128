stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 963 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:bte,A3:str,A4:date,A5:date,A6:str):void;
    X_242:void := querylog.define("explain select\n\to_year,\n\tsum(case\n\t\twhen nation = \\'BRAZIL\\' then volume\n\t\telse 0\n\tend) / sum(volume) as mkt_share\nfrom\n\t(\n\t\tselect\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume,\n\t\t\tn2.n_name as nation\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2,\n\t\t\tregion\n\t\twhere\n\t\t\tp_partkey = l_partkey\n\t\t\tand s_suppkey = l_suppkey\n\t\t\tand l_orderkey = o_orderkey\n\t\t\tand o_custkey = c_custkey\n\t\t\tand c_nationkey = n1.n_nationkey\n\t\t\tand n1.n_regionkey = r_regionkey\n\t\t\tand r_name = \\'AMERICA\\'\n\t\t\tand s_nationkey = n2.n_nationkey\n\t\t\tand o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t\t\tand p_type = \\'ECONOMY ANODIZED STEEL\\'\n\t) as all_nations\ngroup by\n\to_year\norder by\n\to_year;","sequential_pipe",134);
    X_215 := bat.new(nil:oid,nil:str);
    X_223 := bat.append(X_215,"sys.all_nations");
    X_233 := bat.append(X_223,"sys.L3");
    X_218 := bat.new(nil:oid,nil:str);
    X_225 := bat.append(X_218,"o_year");
    X_235 := bat.append(X_225,"mkt_share");
    X_219 := bat.new(nil:oid,nil:str);
    X_227 := bat.append(X_219,"int");
    X_237 := bat.append(X_227,"decimal");
    X_220 := bat.new(nil:oid,nil:int);
    X_229 := bat.append(X_220,32);
    X_239 := bat.append(X_229,39);
    X_222 := bat.new(nil:oid,nil:int);
    X_231 := bat.append(X_222,0);
    X_240 := bat.append(X_231,4);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineitem");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","orders");
    X_291 := algebra.subselect(X_24,X_22,A4,A5,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","orders","o_orderdate",2);
    X_292 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A4,A5,true,true,false);
    X_28:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",1);
    X_294 := algebra.subselect(X_28,X_22,A4,A5,true,true,false);
    X_29 := sql.subdelta(X_291,X_22,X_26,X_292,X_294);
    X_31 := X_29;
    (X_32,r1_37) := algebra.subjoin(X_21,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_36:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",0);
    (X_38,r1_43) := sql.bind(X_9,"sys","lineitem","l_partkey",2);
    X_42:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",1);
    X_43 := sql.projectdelta(X_10,X_36,X_38,r1_43,X_42);
    X_44 := algebra.leftfetchjoin(X_32,X_43);
    X_47:bat[:oid,:str]  := sql.bind(X_9,"sys","part","p_type",0);
    X_45:bat[:oid,:oid]  := sql.tid(X_9,"sys","part");
    X_295 := algebra.subselect(X_47,X_45,A6,A6,true,false,false);
    (X_50,r1_56) := sql.bind(X_9,"sys","part","p_type",2);
    X_296 := algebra.subselect(r1_56,nil:bat[:oid,:oid],A6,A6,true,false,false);
    X_53:bat[:oid,:str]  := sql.bind(X_9,"sys","part","p_type",1);
    X_298 := algebra.subselect(X_53,X_45,A6,A6,true,false,false);
    X_55 := sql.subdelta(X_295,X_45,X_50,X_296,X_298);
    X_57:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",0);
    (X_59,r1_68) := sql.bind(X_9,"sys","part","p_partkey",2);
    X_61:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",1);
    X_62 := sql.projectdelta(X_55,X_57,X_59,r1_68,X_61);
    (X_63,r1_74) := algebra.subjoin(X_44,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_68:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_72,r1_83) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_74:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_75 := sql.projectdelta(X_29,X_68,X_72,r1_83,X_74);
    X_76:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_63,r1_37,X_75);
    X_77:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_79,r1_93) := algebra.subjoin(X_76,X_77,nil:BAT,nil:BAT,false,nil:lng);
    X_81:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_84,r1_98) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_87:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_89 := sql.projectdelta(X_77,X_81,X_84,r1_98,X_87);
    X_90 := algebra.leftfetchjoin(r1_93,X_89);
    X_91:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    (X_93,r1_108) := algebra.subjoin(X_90,X_91,nil:BAT,nil:BAT,false,nil:lng);
    X_98:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",0);
    (X_101,r1_116) := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",2);
    X_103:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",1);
    X_104 := sql.projectdelta(X_91,X_98,X_101,r1_116,X_103);
    X_105 := algebra.leftfetchjoin(r1_108,X_104);
    X_108:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",0);
    X_106:bat[:oid,:oid] := sql.tid(X_9,"sys","region");
    X_299 := algebra.subselect(X_108,X_106,A3,A3,true,false,false);
    (X_110,r1_126) := sql.bind(X_9,"sys","region","r_name",2);
    X_300 := algebra.subselect(r1_126,nil:bat[:oid,:oid],A3,A3,true,false,false);
    X_112:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",1);
    X_302 := algebra.subselect(X_112,X_106,A3,A3,true,false,false);
    X_113 := sql.subdelta(X_299,X_106,X_110,X_300,X_302);
    X_115 := X_113;
    (X_116,r1_135) := algebra.subjoin(X_105,X_115,nil:BAT,nil:BAT,false,nil:lng);
    X_118:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (X_122,r1_141) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_125:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_127 := sql.projectdelta(X_10,X_118,X_122,r1_141,X_125);
    X_128:bat[:oid,:int] := algebra.leftfetchjoinPath(X_116,X_93,X_79,X_63,X_32,X_127);
    X_129:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_132:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (X_134,r1_158) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_136:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_137 := sql.projectdelta(X_129,X_132,X_134,r1_158,X_136);
    (X_138,r1_163) := algebra.subjoin(X_128,X_137,nil:BAT,nil:BAT,false,nil:lng);
    X_143:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_145,r1_170) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_147:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_148 := sql.projectdelta(X_129,X_143,X_145,r1_170,X_147);
    X_149 := algebra.leftfetchjoin(r1_163,X_148);
    (X_151,r1_178) := algebra.subjoin(X_149,X_91,nil:BAT,nil:BAT,false,nil:lng);
    X_153 := sql.projectdelta(X_29,X_24,X_26,r1_27,X_28);
    X_154:bat[:oid,:date] := algebra.leftfetchjoinPath(X_151,X_138,X_116,X_93,X_79,X_63,r1_37,X_153);
    X_155:bat[:oid,:int] := batmtime.year(X_154);
    (X_156,r1_191,r2_191) := group.subgroupdone(X_155);
    X_159 := algebra.leftfetchjoin(r1_191,X_155);
    X_164:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (X_168,r1_203) := sql.bind(X_9,"sys","nation","n_name",2);
    X_171:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_173 := sql.projectdelta(X_91,X_164,X_168,r1_203,X_171);
    X_174 := algebra.leftfetchjoin(r1_178,X_173);
    X_175:bat[:oid,:bit] := batcalc.==(X_174,A0);
    X_176:bat[:oid,:bit] := batcalc.isnil(X_175);
    X_178:bat[:oid,:bit] := batcalc.ifthenelse(X_176,false,X_175);
    X_179:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_182,r1_226) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_184:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_185 := sql.projectdelta(X_10,X_179,X_182,r1_226,X_184);
    X_186:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_151,X_138,X_116,X_93,X_79,X_63,X_32,X_185);
    X_189 := calc.lng(A2,15,2);
    X_191:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_195,r1_249) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_197:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_199 := sql.projectdelta(X_10,X_191,X_195,r1_249,X_197);
    X_200:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_151,X_138,X_116,X_93,X_79,X_63,X_32,X_199);
    X_201:bat[:oid,:lng] := batcalc.-(X_189,X_200);
    X_202:bat[:oid,:hge] := batcalc.*(X_186,X_201);
    X_203 := calc.hge(A1,33,4);
    X_205:bat[:oid,:hge] := batcalc.ifthenelse(X_178,X_202,X_203);
    X_206:bat[:oid,:hge] := aggr.subsum(X_205,X_156,r1_191,true,true);
    X_211:bat[:oid,:hge] := aggr.subsum(X_202,X_156,r1_191,true,true);
    (X_160,r1_195,r2_195) := algebra.subsort(X_159,false,false);
    X_163 := algebra.leftfetchjoin(r1_195,X_159);
    X_208:bat[:oid,:hge] := batcalc.hge(4,X_206,39,8);
    X_212:bat[:oid,:hge] := batcalc./(X_208,X_211);
    X_213 := algebra.leftfetchjoin(r1_195,X_212);
    sql.resultSet(X_233,X_235,X_237,X_239,X_240,X_163,X_213);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

