stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 835 # length
function user.s4_1():void;
    X_343:void := querylog.define("explain select\n o_year,\n sum(case\n when nation = \\'BRAZIL\\' then volume\n else 0\n end) / sum(volume) as mkt_share\nfrom\n (\n select\n extract(year from o_orderdate) as o_year,\n l_extendedprice * (1 - l_discount) as volume,\n n2.n_name as nation\n from\n part,\n supplier,\n lineitem,\n orders,\n customer,\n nation n1,\n nation n2,\n region\n where\n p_partkey = l_partkey\n and s_suppkey = l_suppkey\n and l_orderkey = o_orderkey\n and o_custkey = c_custkey\n and c_nationkey = n1.n_nationkey\n and n1.n_regionkey = r_regionkey\n and r_name = \\'AMERICA\\'\n and s_nationkey = n2.n_nationkey\n and o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n and p_type = \\'ECONOMY ANODIZED STEEL\\'\n ) as all_nations\ngroup by\n o_year\norder by\n o_year;","sequential_pipe",95);
    X_316 := bat.new(nil:str);
    X_323 := bat.append(X_316,"sys.all_nations");
    X_333 := bat.append(X_323,"sys.L14");
    X_318 := bat.new(nil:str);
    X_325 := bat.append(X_318,"o_year");
    X_335 := bat.append(X_325,"mkt_share");
    X_319 := bat.new(nil:str);
    X_327 := bat.append(X_319,"int");
    X_337 := bat.append(X_327,"decimal");
    X_320 := bat.new(nil:int);
    X_329 := bat.append(X_320,32);
    X_339 := bat.append(X_329,39);
    X_322 := bat.new(nil:int);
    X_331 := bat.append(X_322,0);
    X_341 := bat.append(X_331,4);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",0);
    (X_9,X_10:bat[:oid]) := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",2);
    X_7:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",1);
    X_13 := sql.projectdelta(C_1,X_4,X_9,X_10,X_7);
    X_16:bat[:str] := sql.bind(X_0,"sys","region","r_name",0);
    C_14:bat[:oid] := sql.tid(X_0,"sys","region");
    C_24 := algebra.subselect(X_16,C_14,"AMERICA","AMERICA",true,false,false);
    (X_30,X_31) := algebra.subjoin(X_13,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_35 := algebra.projection(X_30,C_1);
    C_39:bat[:oid] := sql.tid(X_0,"sys","customer");
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",0);
    (X_44,X_45:bat[:oid]) := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",2);
    X_43:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",1);
    X_47 := sql.projectdelta(C_39,X_41,X_44,X_45,X_43);
    (X_48,X_49) := algebra.subjoin(X_35,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_54 := algebra.projection(X_49,C_39);
    X_58:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_56:bat[:oid] := sql.tid(X_0,"sys","orders");
    C_74 := algebra.subselect(X_58,C_56,"1995-01-01","1996-12-31",true,true,false);
    X_65:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_68,X_69:bat[:oid]) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_67:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_80 := sql.projectdelta(C_74,X_65,X_68,X_69,X_67);
    (X_81,X_82) := algebra.subjoin(X_54,X_80,nil:BAT,nil:BAT,false,nil:lng);
    X_93 := algebra.projection(X_82,C_74);
    C_95:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_125:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_128,X_129:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_127:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_131 := sql.projectdelta(C_95,X_125,X_128,X_129,X_127);
    (X_132,X_133) := algebra.subjoin(X_93,X_131,nil:BAT,nil:BAT,false,nil:lng);
    X_97:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    X_147:bat[:int] := algebra.projectionpath(X_133,C_95,X_97);
    X_161:bat[:str] := sql.bind(X_0,"sys","part","p_type",0);
    C_152:bat[:oid] := sql.tid(X_0,"sys","part");
    C_169 := algebra.subselect(X_161,C_152,"ECONOMY ANODIZED STEEL","ECONOMY ANODIZED STEEL",true,false,false);
    X_154:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_173 := algebra.projection(C_169,X_154);
    (X_175,X_176) := algebra.subjoin(X_147,X_173,nil:BAT,nil:BAT,false,nil:lng);
    X_104:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    X_190:bat[:int] := algebra.projectionpath(X_175,X_133,C_95,X_104);
    C_196:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_198:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    X_204 := algebra.projection(C_196,X_198);
    (X_212,X_213) := algebra.subjoin(X_190,X_204,nil:BAT,nil:BAT,false,nil:lng);
    X_205:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_208,X_209:bat[:oid]) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_207:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_211 := sql.projectdelta(C_196,X_205,X_208,X_209,X_207);
    X_235 := algebra.projection(X_213,X_211);
    (X_245,X_246) := algebra.subjoin(X_235,C_1,nil:BAT,nil:BAT,false,nil:lng);
    X_253:bat[:date] := algebra.projectionpath(X_245,X_212,X_175,X_132,X_82,C_74,X_58);
    X_267:bat[:int] := batmtime.year(X_253);
    (X_295,X_296,X_297) := group.subgroupdone(X_267);
    X_298 := algebra.projection(X_296,X_267);
    X_238:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_265:bat[:str] := algebra.projectionpath(X_246,C_1,X_238);
    X_283:bat[:bit] := batcalc.==(X_265,"BRAZIL");
    X_285:bat[:bit] := batcalc.isnil(X_283);
    X_289:bat[:bit] := batcalc.ifthenelse(X_285,false,X_283);
    X_111:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_258:bat[:lng] := algebra.projectionpath(X_245,X_212,X_175,X_133,C_95,X_111);
    X_118:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_259:bat[:lng] := algebra.projectionpath(X_245,X_212,X_175,X_133,C_95,X_118);
    X_278:bat[:lng] := batcalc.-(100:lng,X_259);
    X_280:bat[:hge] := batcalc.*(X_258,X_278);
    X_294:bat[:hge] := batcalc.ifthenelse(X_289,X_280,0:hge);
    X_299:bat[:hge] := aggr.subsum(X_294,X_295,X_296,true,true);
    X_302:bat[:hge] := aggr.subsum(X_280,X_295,X_296,true,true);
    (X_310,X_311,X_312) := algebra.subsort(X_298,false,false);
    X_313 := algebra.projection(X_311,X_298);
    X_303:bat[:hge] := batcalc.hge(4,X_299,39,8);
    X_308:bat[:hge] := batcalc./(X_303,X_302);
    X_314 := algebra.projection(X_311,X_308);
    sql.resultSet(X_333,X_335,X_337,X_339,X_341,X_313,X_314);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=121 usec 
#remap                actions=11 time=819 usec 
#costModel            actions= 1 time=227 usec 
#coercions            actions= 1 time=300 usec 
#evaluate             actions=10 time=308 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions=15 time=284 usec 
#aliases              actions=27 time=250 usec 
#mergetable           actions= 0 time=254 usec 
#deadcode             actions=26 time=233 usec 
#aliases              actions= 0 time=26 usec 
#constants            actions=37 time=281 usec 
#commonTerms          actions= 2 time=211 usec 
#projectionpath       actions=17 time=210 usec 
#reorder              actions= 1 time=276 usec 
#deadcode             actions=19 time=196 usec 
#reduce               actions=159 time=275 usec 
#matpack              actions= 0 time=11 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=188 usec 
#garbageCollector     actions= 1 time=205 usec 
#total                actions= 1 time=4848 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

