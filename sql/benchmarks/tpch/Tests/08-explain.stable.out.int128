stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 942 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:bte,A3:str,A4:date,A5:date,A6:str):void;
    X_206 := bat.new(nil:oid,nil:str);
    X_214 := bat.append(X_206,"sys.all_nations");
    X_224 := bat.append(X_214,"sys.L3");
    X_209 := bat.new(nil:oid,nil:str);
    X_216 := bat.append(X_209,"o_year");
    X_226 := bat.append(X_216,"mkt_share");
    X_210 := bat.new(nil:oid,nil:str);
    X_218 := bat.append(X_210,"int");
    X_228 := bat.append(X_218,"decimal");
    X_211 := bat.new(nil:oid,nil:int);
    X_220 := bat.append(X_211,32);
    X_230 := bat.append(X_220,37);
    X_213 := bat.new(nil:oid,nil:int);
    X_222 := bat.append(X_213,0);
    X_231 := bat.append(X_222,4);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineitem");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","orders");
    X_280 := algebra.subselect(X_24,X_22,A4,A5,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","orders","o_orderdate",2);
    X_281 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A4,A5,true,true,false);
    X_28:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",1);
    X_283 := algebra.subselect(X_28,X_22,A4,A5,true,true,false);
    X_29 := sql.subdelta(X_280,X_22,X_26,X_281,X_283);
    X_31 := X_29;
    (X_32,r1_37) := algebra.subjoin(X_21,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_36:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_partkey_fkey",0);
    (X_38,r1_43) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_partkey_fkey",2);
    X_42:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_partkey_fkey",1);
    X_43 := sql.projectdelta(X_10,X_36,X_38,r1_43,X_42);
    X_44 := algebra.leftfetchjoin(X_32,X_43);
    X_47:bat[:oid,:str]  := sql.bind(X_9,"sys","part","p_type",0);
    X_45:bat[:oid,:oid]  := sql.tid(X_9,"sys","part");
    X_284 := algebra.subselect(X_47,X_45,A6,A6,true,true,false);
    (X_50,r1_56) := sql.bind(X_9,"sys","part","p_type",2);
    X_285 := algebra.subselect(r1_56,nil:bat[:oid,:oid],A6,A6,true,true,false);
    X_53:bat[:oid,:str]  := sql.bind(X_9,"sys","part","p_type",1);
    X_287 := algebra.subselect(X_53,X_45,A6,A6,true,true,false);
    X_55 := sql.subdelta(X_284,X_45,X_50,X_285,X_287);
    X_57 := X_55;
    (X_58,r1_67) := algebra.subjoin(X_44,X_57,nil:BAT,nil:BAT,false,nil:lng);
    X_292 := algebra.leftfetchjoin(X_58,r1_37);
    X_61:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_64,r1_73) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_66:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_67 := sql.projectdelta(X_29,X_61,X_64,r1_73,X_66);
    X_68:bat[:oid,:oid]  := algebra.leftfetchjoin(X_292,X_67);
    X_69:bat[:oid,:oid]  := sql.tid(X_9,"sys","customer");
    (X_72,r1_84) := algebra.subjoin(X_68,X_69,nil:BAT,nil:BAT,false,nil:lng);
    X_76:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_79,r1_91) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_82:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_84 := sql.projectdelta(X_69,X_76,X_79,r1_91,X_82);
    X_85 := algebra.leftfetchjoin(r1_84,X_84);
    X_86:bat[:oid,:oid]  := sql.tid(X_9,"sys","nation");
    (X_88,r1_101) := algebra.subjoin(X_85,X_86,nil:BAT,nil:BAT,false,nil:lng);
    X_91:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",0);
    (X_93,r1_106) := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",2);
    X_95:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",1);
    X_96 := sql.projectdelta(X_86,X_91,X_93,r1_106,X_95);
    X_97 := algebra.leftfetchjoin(r1_101,X_96);
    X_100:bat[:oid,:str]  := sql.bind(X_9,"sys","region","r_name",0);
    X_98:bat[:oid,:oid]  := sql.tid(X_9,"sys","region");
    X_288 := algebra.subselect(X_100,X_98,A3,A3,true,true,false);
    (X_103,r1_117) := sql.bind(X_9,"sys","region","r_name",2);
    X_289 := algebra.subselect(r1_117,nil:bat[:oid,:oid],A3,A3,true,true,false);
    X_105:bat[:oid,:str]  := sql.bind(X_9,"sys","region","r_name",1);
    X_291 := algebra.subselect(X_105,X_98,A3,A3,true,true,false);
    X_106 := sql.subdelta(X_288,X_98,X_103,X_289,X_291);
    X_108 := X_106;
    (X_109,r1_126) := algebra.subjoin(X_97,X_108,nil:BAT,nil:BAT,false,nil:lng);
    X_293 := algebra.leftfetchjoin(X_109,X_88);
    X_113:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_117,r1_134) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_120:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_122 := sql.projectdelta(X_10,X_113,X_117,r1_134,X_120);
    X_123:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_293,X_72,X_58,X_32,X_122);
    X_124:bat[:oid,:oid]  := sql.tid(X_9,"sys","supplier");
    (X_126,r1_148) := algebra.subjoin(X_123,X_124,nil:BAT,nil:BAT,false,nil:lng);
    X_129:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_132,r1_154) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_134:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_135 := sql.projectdelta(X_124,X_129,X_132,r1_154,X_134);
    X_136 := algebra.leftfetchjoin(r1_148,X_135);
    (X_138,r1_162) := algebra.subjoin(X_136,X_86,nil:BAT,nil:BAT,false,nil:lng);
    X_294 := algebra.leftfetchjoin(X_138,X_126);
    X_142 := sql.projectdelta(X_29,X_24,X_26,r1_27,X_28);
    X_143:bat[:oid,:date]  := algebra.leftfetchjoinPath(X_294,X_109,X_88,X_72,X_58,r1_37,X_142);
    X_144:bat[:oid,:int]  := batmtime.year(X_143);
    (X_145,r1_177,r2_177) := group.subgroupdone(X_144);
    X_148 := algebra.leftfetchjoin(r1_177,X_144);
    X_154:bat[:oid,:str]  := sql.bind(X_9,"sys","nation","n_name",0);
    (X_158,r1_190) := sql.bind(X_9,"sys","nation","n_name",2);
    X_161:bat[:oid,:str]  := sql.bind(X_9,"sys","nation","n_name",1);
    X_164 := sql.projectdelta(X_86,X_154,X_158,r1_190,X_161);
    X_165 := algebra.leftfetchjoin(r1_162,X_164);
    X_166:bat[:oid,:bit]  := batcalc.==(X_165,A0);
    X_167:bat[:oid,:bit]  := batcalc.isnil(X_166);
    X_168:bat[:oid,:bit]  := batcalc.ifthenelse(X_167,false,X_166);
    X_169:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_172,r1_213) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_174:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_175 := sql.projectdelta(X_10,X_169,X_172,r1_213,X_174);
    X_176:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_294,X_109,X_88,X_72,X_58,X_32,X_175);
    X_177:bat[:oid,:hge]  := batcalc.hge(2,X_176,33,2);
    X_180 := calc.lng(A2,15,2);
    X_182:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_186,r1_236) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_188:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_190 := sql.projectdelta(X_10,X_182,X_186,r1_236,X_188);
    X_191:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_294,X_109,X_88,X_72,X_58,X_32,X_190);
    X_192:bat[:oid,:lng]  := batcalc.-(X_180,X_191);
    X_193:bat[:oid,:hge]  := batcalc.*(X_177,X_192);
    X_194 := calc.hge(A1,33,4);
    X_196:bat[:oid,:hge]  := batcalc.ifthenelse(X_168,X_193,X_194);
    X_197:bat[:oid,:hge]  := aggr.subsum(X_196,X_145,r1_177,true,true);
    X_202:bat[:oid,:hge]  := aggr.subsum(X_193,X_145,r1_177,true,true);
    (X_149,r1_181,r2_181) := algebra.subsort(X_148,false,false);
    X_153 := algebra.leftfetchjoin(r1_181,X_148);
    X_199:bat[:oid,:hge]  := batcalc.hge(4,X_197,37,8);
    X_203:bat[:oid,:hge]  := batcalc./(X_199,X_202);
    X_204 := algebra.leftfetchjoin(r1_181,X_203);
    sql.resultSet(X_224,X_226,X_228,X_230,X_231,X_153,X_204);
end s2_1;
# querylog.define("explain select\n\to_year,\n\tsum(case\n\t\twhen nation = \\'BRAZIL\\' then volume\n\t\telse 0\n\tend) / sum(volume) as mkt_share\nfrom\n\t(\n\t\tselect\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume,\n\t\t\tn2.n_name as nation\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2,\n\t\t\tregion\n\t\twhere\n\t\t\tp_partkey = l_partkey\n\t\t\tand s_suppkey = l_suppkey\n\t\t\tand l_orderkey = o_orderkey\n\t\t\tand o_custkey = c_custkey\n\t\t\tand c_nationkey = n1.n_nationkey\n\t\t\tand n1.n_regionkey = r_regionkey\n\t\t\tand r_name = \\'AMERICA\\'\n\t\t\tand s_nationkey = n2.n_nationkey\n\t\t\tand o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t\t\tand p_type = \\'ECONOMY ANODIZED STEEL\\'\n\t) as all_nations\ngroup by\n\to_year\norder by\n\to_year;","sequential_pipe")

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

