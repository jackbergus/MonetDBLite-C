stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 963 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:bte,A3:str,A4:date,A5:date,A6:str):void;
    X_222:void := querylog.define("explain select\n\to_year,\n\tsum(case\n\t\twhen nation = \\'BRAZIL\\' then volume\n\t\telse 0\n\tend) / sum(volume) as mkt_share\nfrom\n\t(\n\t\tselect\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume,\n\t\t\tn2.n_name as nation\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2,\n\t\t\tregion\n\t\twhere\n\t\t\tp_partkey = l_partkey\n\t\t\tand s_suppkey = l_suppkey\n\t\t\tand l_orderkey = o_orderkey\n\t\t\tand o_custkey = c_custkey\n\t\t\tand c_nationkey = n1.n_nationkey\n\t\t\tand n1.n_regionkey = r_regionkey\n\t\t\tand r_name = \\'AMERICA\\'\n\t\t\tand s_nationkey = n2.n_nationkey\n\t\t\tand o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t\t\tand p_type = \\'ECONOMY ANODIZED STEEL\\'\n\t) as all_nations\ngroup by\n\to_year\norder by\n\to_year;","sequential_pipe",132);
    X_195 := bat.new(nil:oid,nil:str);
    X_203 := bat.append(X_195,"sys.all_nations");
    X_213 := bat.append(X_203,"sys.L3");
    X_198 := bat.new(nil:oid,nil:str);
    X_205 := bat.append(X_198,"o_year");
    X_215 := bat.append(X_205,"mkt_share");
    X_199 := bat.new(nil:oid,nil:str);
    X_207 := bat.append(X_199,"int");
    X_217 := bat.append(X_207,"decimal");
    X_200 := bat.new(nil:oid,nil:int);
    X_209 := bat.append(X_200,32);
    X_219 := bat.append(X_209,39);
    X_202 := bat.new(nil:oid,nil:int);
    X_211 := bat.append(X_202,0);
    X_220 := bat.append(X_211,4);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineitem");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","orders");
    X_285 := algebra.subselect(X_24,X_22,A4,A5,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","orders","o_orderdate",2);
    X_286 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A4,A5,true,true,false);
    X_28:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",1);
    X_288 := algebra.subselect(X_28,X_22,A4,A5,true,true,false);
    X_29 := sql.subdelta(X_285,X_22,X_26,X_286,X_288);
    (X_31,r1_37) := algebra.subjoin(X_21,X_29,nil:BAT,nil:BAT,false,nil:lng);
    X_36:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",0);
    (X_38,r1_44) := sql.bind(X_9,"sys","lineitem","l_partkey",2);
    X_40:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",1);
    X_41 := sql.projectdelta(X_10,X_36,X_38,r1_44,X_40);
    X_42 := algebra.leftfetchjoin(X_31,X_41);
    X_45:bat[:oid,:str] := sql.bind(X_9,"sys","part","p_type",0);
    X_43:bat[:oid,:oid] := sql.tid(X_9,"sys","part");
    X_289 := algebra.subselect(X_45,X_43,A6,A6,true,true,false);
    (X_47,r1_54) := sql.bind(X_9,"sys","part","p_type",2);
    X_290 := algebra.subselect(r1_54,nil:bat[:oid,:oid],A6,A6,true,true,false);
    X_49:bat[:oid,:str] := sql.bind(X_9,"sys","part","p_type",1);
    X_292 := algebra.subselect(X_49,X_43,A6,A6,true,true,false);
    X_50 := sql.subdelta(X_289,X_43,X_47,X_290,X_292);
    X_53:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",0);
    (X_55,r1_65) := sql.bind(X_9,"sys","part","p_partkey",2);
    X_57:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",1);
    X_58 := sql.projectdelta(X_50,X_53,X_55,r1_65,X_57);
    (X_59,r1_71) := algebra.subjoin(X_42,X_58,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_67,r1_79) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_69:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_70 := sql.projectdelta(X_29,X_65,X_67,r1_79,X_69);
    X_71:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_59,r1_37,X_70);
    X_72:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_74,r1_89) := algebra.subjoin(X_71,X_72,nil:BAT,nil:BAT,false,nil:lng);
    X_76:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_78,r1_93) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_80:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_81 := sql.projectdelta(X_72,X_76,X_78,r1_93,X_80);
    X_82 := algebra.leftfetchjoin(r1_89,X_81);
    X_83:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    (X_85,r1_101) := algebra.subjoin(X_82,X_83,nil:BAT,nil:BAT,false,nil:lng);
    X_87:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",0);
    (X_89,r1_105) := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",2);
    X_91:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",1);
    X_92 := sql.projectdelta(X_83,X_87,X_89,r1_105,X_91);
    X_93 := algebra.leftfetchjoin(r1_101,X_92);
    X_96:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",0);
    X_94:bat[:oid,:oid] := sql.tid(X_9,"sys","region");
    X_293 := algebra.subselect(X_96,X_94,A3,A3,true,true,false);
    (X_98,r1_115) := sql.bind(X_9,"sys","region","r_name",2);
    X_294 := algebra.subselect(r1_115,nil:bat[:oid,:oid],A3,A3,true,true,false);
    X_100:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",1);
    X_296 := algebra.subselect(X_100,X_94,A3,A3,true,true,false);
    X_101 := sql.subdelta(X_293,X_94,X_98,X_294,X_296);
    (X_105,r1_126) := algebra.subjoin(X_93,X_101,nil:BAT,nil:BAT,false,nil:lng);
    X_110:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (X_112,r1_133) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_114:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_115 := sql.projectdelta(X_10,X_110,X_112,r1_133,X_114);
    X_116:bat[:oid,:int] := algebra.leftfetchjoinPath(X_105,X_85,X_74,X_59,X_31,X_115);
    X_117:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_119:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (X_121,r1_147) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_123:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_124 := sql.projectdelta(X_117,X_119,X_121,r1_147,X_123);
    (X_125,r1_152) := algebra.subjoin(X_116,X_124,nil:BAT,nil:BAT,false,nil:lng);
    X_127:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_129,r1_156) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_131:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_132 := sql.projectdelta(X_117,X_127,X_129,r1_156,X_131);
    X_133 := algebra.leftfetchjoin(r1_152,X_132);
    (X_134,r1_164) := algebra.subjoin(X_133,X_83,nil:BAT,nil:BAT,false,nil:lng);
    X_140 := sql.projectdelta(X_29,X_24,X_26,r1_27,X_28);
    X_141:bat[:oid,:date] := algebra.leftfetchjoinPath(X_134,X_125,X_105,X_85,X_74,X_59,r1_37,X_140);
    X_142:bat[:oid,:int] := batmtime.year(X_141);
    (X_143,r1_181,r2_181) := group.subgroupdone(X_142);
    X_146 := algebra.leftfetchjoin(r1_181,X_142);
    X_151:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (X_153,r1_191) := sql.bind(X_9,"sys","nation","n_name",2);
    X_155:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_156 := sql.projectdelta(X_83,X_151,X_153,r1_191,X_155);
    X_157 := algebra.leftfetchjoin(r1_164,X_156);
    X_158:bat[:oid,:bit] := batcalc.==(X_157,A0);
    X_159:bat[:oid,:bit] := batcalc.isnil(X_158);
    X_161:bat[:oid,:bit] := batcalc.ifthenelse(X_159,false,X_158);
    X_162:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_164,r1_211) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_166:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_167 := sql.projectdelta(X_10,X_162,X_164,r1_211,X_166);
    X_168:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_134,X_125,X_105,X_85,X_74,X_59,X_31,X_167);
    X_171 := calc.lng(A2,15,2);
    X_173:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_175,r1_232) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_177:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_178 := sql.projectdelta(X_10,X_173,X_175,r1_232,X_177);
    X_179:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_134,X_125,X_105,X_85,X_74,X_59,X_31,X_178);
    X_180:bat[:oid,:lng] := batcalc.-(X_171,X_179);
    X_181:bat[:oid,:hge] := batcalc.*(X_168,X_180);
    X_182 := calc.hge(A1,33,4);
    X_184:bat[:oid,:hge] := batcalc.ifthenelse(X_161,X_181,X_182);
    X_185:bat[:oid,:hge] := aggr.subsum(X_184,X_143,r1_181,true,true);
    X_191:bat[:oid,:hge] := aggr.subsum(X_181,X_143,r1_181,true,true);
    (X_147,r1_185,r2_185) := algebra.subsort(X_146,false,false);
    X_150 := algebra.leftfetchjoin(r1_185,X_146);
    X_188:bat[:oid,:hge] := batcalc.hge(4,X_185,39,8);
    X_192:bat[:oid,:hge] := batcalc./(X_188,X_191);
    X_193 := algebra.leftfetchjoin(r1_185,X_192);
    sql.resultSet(X_213,X_215,X_217,X_219,X_220,X_150,X_193);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

