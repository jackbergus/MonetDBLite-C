stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 835 # length
function user.s4_1():void;
    X_158:void := querylog.define("explain select\n o_year,\n sum(case\n when nation = \\'BRAZIL\\' then volume\n else 0\n end) / sum(volume) as mkt_share\nfrom\n (\n select\n extract(year from o_orderdate) as o_year,\n l_extendedprice * (1 - l_discount) as volume,\n n2.n_name as nation\n from\n part,\n supplier,\n lineitem,\n orders,\n customer,\n nation n1,\n nation n2,\n region\n where\n p_partkey = l_partkey\n and s_suppkey = l_suppkey\n and l_orderkey = o_orderkey\n and o_custkey = c_custkey\n and c_nationkey = n1.n_nationkey\n and n1.n_regionkey = r_regionkey\n and r_name = \\'AMERICA\\'\n and s_nationkey = n2.n_nationkey\n and o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n and p_type = \\'ECONOMY ANODIZED STEEL\\'\n ) as all_nations\ngroup by\n o_year\norder by\n o_year;","sequential_pipe",96);
    X_133 := bat.new(nil:oid,nil:str);
    X_141 := bat.append(X_133,"sys.all_nations");
    X_150 := bat.append(X_141,"sys.L3");
    X_136 := bat.new(nil:oid,nil:str);
    X_143 := bat.append(X_136,"o_year");
    X_152 := bat.append(X_143,"mkt_share");
    X_137 := bat.new(nil:oid,nil:str);
    X_145 := bat.append(X_137,"int");
    X_154 := bat.append(X_145,"decimal");
    X_138 := bat.new(nil:oid,nil:int);
    X_147 := bat.append(X_138,32);
    X_156 := bat.append(X_147,39);
    X_140 := bat.new(nil:oid,nil:int);
    X_149 := bat.append(X_140,0);
    X_157 := bat.append(X_149,4);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","nation");
    X_10:bat[:oid] := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",0);
    (X_13,r1_15) := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",1);
    X_18 := sql.projectdelta(C_7,X_10,X_13,r1_15,X_16);
    X_21:bat[:str] := sql.bind(X_6,"sys","region","r_name",0);
    C_19:bat[:oid] := sql.tid(X_6,"sys","region");
    C_23 := algebra.subselect(X_21,C_19,"AMERICA","AMERICA",true,false,false);
    (X_26,r1_37) := algebra.subjoin(X_18,C_23,nil:BAT,nil:BAT,false,nil:lng);
    X_30 := algebra.projection(X_26,C_7);
    C_31:bat[:oid] := sql.tid(X_6,"sys","customer");
    X_33:bat[:oid] := sql.bind_idxbat(X_6,"sys","customer","customer_c_nationkey_fkey",0);
    (X_35,r1_47) := sql.bind_idxbat(X_6,"sys","customer","customer_c_nationkey_fkey",2);
    X_37:bat[:oid] := sql.bind_idxbat(X_6,"sys","customer","customer_c_nationkey_fkey",1);
    X_38 := sql.projectdelta(C_31,X_33,X_35,r1_47,X_37);
    (X_39,r1_52) := algebra.subjoin(X_30,X_38,nil:BAT,nil:BAT,false,nil:lng);
    X_41 := algebra.projection(r1_52,C_31);
    X_44:bat[:date] := sql.bind(X_6,"sys","orders","o_orderdate",0);
    C_42:bat[:oid] := sql.tid(X_6,"sys","orders");
    C_46 := algebra.subselect(X_44,C_42,"1995-01-01","1996-12-31",true,true,false);
    X_47:bat[:oid] := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",0);
    (X_49,r1_72) := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",2);
    X_51:bat[:oid] := sql.bind_idxbat(X_6,"sys","orders","orders_o_custkey_fkey",1);
    X_52 := sql.projectdelta(C_46,X_47,X_49,r1_72,X_51);
    (X_53,r1_78) := algebra.subjoin(X_41,X_52,nil:BAT,nil:BAT,false,nil:lng);
    X_55 := algebra.projection(r1_78,C_46);
    C_56:bat[:oid] := sql.tid(X_6,"sys","lineitem");
    X_58:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_60,r1_89) := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_62:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_63 := sql.projectdelta(C_56,X_58,X_60,r1_89,X_62);
    (X_64,r1_94) := algebra.subjoin(X_55,X_63,nil:BAT,nil:BAT,false,nil:lng);
    X_66:bat[:int] := sql.bind(X_6,"sys","lineitem","l_partkey",0);
    X_68:bat[:int] := algebra.projectionpath(r1_94,C_56,X_66);
    X_71:bat[:str] := sql.bind(X_6,"sys","part","p_type",0);
    C_69:bat[:oid] := sql.tid(X_6,"sys","part");
    C_73 := algebra.subselect(X_71,C_69,"ECONOMY ANODIZED STEEL","ECONOMY ANODIZED STEEL",true,false,false);
    X_74:bat[:int] := sql.bind(X_6,"sys","part","p_partkey",0);
    X_76 := algebra.projection(C_73,X_74);
    (X_77,r1_126) := algebra.subjoin(X_68,X_76,nil:BAT,nil:BAT,false,nil:lng);
    X_79:bat[:int] := sql.bind(X_6,"sys","lineitem","l_suppkey",0);
    X_81:bat[:int] := algebra.projectionpath(X_77,r1_94,C_56,X_79);
    C_82:bat[:oid] := sql.tid(X_6,"sys","supplier");
    X_84:bat[:int] := sql.bind(X_6,"sys","supplier","s_suppkey",0);
    X_86 := algebra.projection(C_82,X_84);
    (X_87,r1_149) := algebra.subjoin(X_81,X_86,nil:BAT,nil:BAT,false,nil:lng);
    X_89:bat[:oid] := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_91,r1_154) := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_93:bat[:oid] := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_94 := sql.projectdelta(C_82,X_89,X_91,r1_154,X_93);
    X_95 := algebra.projection(r1_149,X_94);
    (X_96,r1_162) := algebra.subjoin(X_95,C_7,nil:BAT,nil:BAT,false,nil:lng);
    X_98:bat[:date] := algebra.projectionpath(X_96,X_87,X_77,X_64,r1_78,C_46,X_44);
    X_99:bat[:int] := batmtime.year(X_98);
    (X_100,r1_176,r2_176) := group.subgroupdone(X_99);
    X_103 := algebra.projection(r1_176,X_99);
    X_109:bat[:str] := sql.bind(X_6,"sys","nation","n_name",0);
    X_111:bat[:str] := algebra.projectionpath(r1_162,C_7,X_109);
    X_112:bat[:bit] := batcalc.==(X_111,"BRAZIL");
    X_113:bat[:bit] := batcalc.isnil(X_112);
    X_114:bat[:bit] := batcalc.ifthenelse(X_113,false,X_112);
    X_115:bat[:lng] := sql.bind(X_6,"sys","lineitem","l_extendedprice",0);
    X_117:bat[:lng] := algebra.projectionpath(X_96,X_87,X_77,r1_94,C_56,X_115);
    X_118:bat[:lng] := sql.bind(X_6,"sys","lineitem","l_discount",0);
    X_120:bat[:lng] := algebra.projectionpath(X_96,X_87,X_77,r1_94,C_56,X_118);
    X_121:bat[:lng] := batcalc.-(100:lng,X_120);
    X_122:bat[:hge] := batcalc.*(X_117,X_121);
    X_124:bat[:hge] := batcalc.ifthenelse(X_114,X_122,0:hge);
    X_125:bat[:hge] := aggr.subsum(X_124,X_100,r1_176,true,true);
    X_129:bat[:hge] := aggr.subsum(X_122,X_100,r1_176,true,true);
    X_104 := bat.setKey(X_103,true);
    (X_105,r1_182,r2_182) := algebra.subsort(X_104,false,false);
    X_108 := algebra.projection(r1_182,X_104);
    X_126:bat[:hge] := batcalc.hge(4,X_125,39,8);
    X_130:bat[:hge] := batcalc./(X_126,X_129);
    X_131 := algebra.projection(r1_182,X_130);
    sql.resultSet(X_150,X_152,X_154,X_156,X_157,X_108,X_131);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=121 usec 
#remap                actions=11 time=819 usec 
#costModel            actions= 1 time=227 usec 
#coercions            actions= 1 time=300 usec 
#evaluate             actions=10 time=308 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions=15 time=284 usec 
#aliases              actions=27 time=250 usec 
#mergetable           actions= 0 time=254 usec 
#deadcode             actions=26 time=233 usec 
#aliases              actions= 0 time=26 usec 
#constants            actions=37 time=281 usec 
#commonTerms          actions= 2 time=211 usec 
#projectionpath       actions=17 time=210 usec 
#reorder              actions= 1 time=276 usec 
#deadcode             actions=19 time=196 usec 
#reduce               actions=159 time=275 usec 
#matpack              actions= 0 time=11 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=188 usec 
#garbageCollector     actions= 1 time=205 usec 
#total                actions= 1 time=4848 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

