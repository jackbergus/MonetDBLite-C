stdout of test '08-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "08-explain.SQL.py" "08-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_year,
#	sum(case
#		when nation = 'BRAZIL' then volume
#		else 0
#	end) / sum(volume) as mkt_share
#from
#	(
#		select
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) as volume,
#			n2.n_name as nation
#		from
#			part,
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2,
#			region
#		where
#			p_partkey = l_partkey
#			and s_suppkey = l_suppkey
#			and l_orderkey = o_orderkey
#			and o_custkey = c_custkey
#			and c_nationkey = n1.n_nationkey
#			and n1.n_regionkey = r_regionkey
% .explain # table_name
% mal # name
% clob # type
% 963 # length
function user.s2_1{autoCommit=true}(A0:str,A1:bte,A2:bte,A3:str,A4:date,A5:date,A6:str):void;
    X_240:void := querylog.define("explain select\n\to_year,\n\tsum(case\n\t\twhen nation = \\'BRAZIL\\' then volume\n\t\telse 0\n\tend) / sum(volume) as mkt_share\nfrom\n\t(\n\t\tselect\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume,\n\t\t\tn2.n_name as nation\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2,\n\t\t\tregion\n\t\twhere\n\t\t\tp_partkey = l_partkey\n\t\t\tand s_suppkey = l_suppkey\n\t\t\tand l_orderkey = o_orderkey\n\t\t\tand o_custkey = c_custkey\n\t\t\tand c_nationkey = n1.n_nationkey\n\t\t\tand n1.n_regionkey = r_regionkey\n\t\t\tand r_name = \\'AMERICA\\'\n\t\t\tand s_nationkey = n2.n_nationkey\n\t\t\tand o_orderdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t\t\tand p_type = \\'ECONOMY ANODIZED STEEL\\'\n\t) as all_nations\ngroup by\n\to_year\norder by\n\to_year;","sequential_pipe",132);
    X_213 := bat.new(nil:oid,nil:str);
    X_221 := bat.append(X_213,"sys.all_nations");
    X_231 := bat.append(X_221,"sys.L3");
    X_216 := bat.new(nil:oid,nil:str);
    X_223 := bat.append(X_216,"o_year");
    X_233 := bat.append(X_223,"mkt_share");
    X_217 := bat.new(nil:oid,nil:str);
    X_225 := bat.append(X_217,"int");
    X_235 := bat.append(X_225,"decimal");
    X_218 := bat.new(nil:oid,nil:int);
    X_227 := bat.append(X_218,32);
    X_237 := bat.append(X_227,39);
    X_220 := bat.new(nil:oid,nil:int);
    X_229 := bat.append(X_220,0);
    X_238 := bat.append(X_229,4);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineitem");
    X_13:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_19:bat[:oid,:oid]  := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_21 := sql.projectdelta(X_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",0);
    X_22:bat[:oid,:oid]  := sql.tid(X_9,"sys","orders");
    X_289 := algebra.subselect(X_24,X_22,A4,A5,true,true,false);
    (X_26,r1_27) := sql.bind(X_9,"sys","orders","o_orderdate",2);
    X_290 := algebra.subselect(r1_27,nil:bat[:oid,:oid],A4,A5,true,true,false);
    X_28:bat[:oid,:date]  := sql.bind(X_9,"sys","orders","o_orderdate",1);
    X_292 := algebra.subselect(X_28,X_22,A4,A5,true,true,false);
    X_29 := sql.subdelta(X_289,X_22,X_26,X_290,X_292);
    (X_31,r1_37) := algebra.subjoin(X_21,X_29,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",0);
    (X_37,r1_43) := sql.bind(X_9,"sys","lineitem","l_partkey",2);
    X_41:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_partkey",1);
    X_42 := sql.projectdelta(X_10,X_35,X_37,r1_43,X_41);
    X_43 := algebra.leftfetchjoin(X_31,X_42);
    X_46:bat[:oid,:str] := sql.bind(X_9,"sys","part","p_type",0);
    X_44:bat[:oid,:oid] := sql.tid(X_9,"sys","part");
    X_293 := algebra.subselect(X_46,X_44,A6,A6,true,true,false);
    (X_49,r1_56) := sql.bind(X_9,"sys","part","p_type",2);
    X_294 := algebra.subselect(r1_56,nil:bat[:oid,:oid],A6,A6,true,true,false);
    X_52:bat[:oid,:str] := sql.bind(X_9,"sys","part","p_type",1);
    X_296 := algebra.subselect(X_52,X_44,A6,A6,true,true,false);
    X_54 := sql.subdelta(X_293,X_44,X_49,X_294,X_296);
    X_56:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",0);
    (X_58,r1_68) := sql.bind(X_9,"sys","part","p_partkey",2);
    X_60:bat[:oid,:int] := sql.bind(X_9,"sys","part","p_partkey",1);
    X_61 := sql.projectdelta(X_54,X_56,X_58,r1_68,X_60);
    (X_62,r1_74) := algebra.subjoin(X_43,X_61,nil:BAT,nil:BAT,false,nil:lng);
    X_67:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_71,r1_83) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_73:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_74 := sql.projectdelta(X_29,X_67,X_71,r1_83,X_73);
    X_75:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_62,r1_37,X_74);
    X_76:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_78,r1_93) := algebra.subjoin(X_75,X_76,nil:BAT,nil:BAT,false,nil:lng);
    X_80:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_83,r1_98) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_86:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_88 := sql.projectdelta(X_76,X_80,X_83,r1_98,X_86);
    X_89 := algebra.leftfetchjoin(r1_93,X_88);
    X_90:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    (X_92,r1_108) := algebra.subjoin(X_89,X_90,nil:BAT,nil:BAT,false,nil:lng);
    X_97:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",0);
    (X_100,r1_116) := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",2);
    X_102:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","nation","nation_n_regionkey_fkey",1);
    X_103 := sql.projectdelta(X_90,X_97,X_100,r1_116,X_102);
    X_104 := algebra.leftfetchjoin(r1_108,X_103);
    X_107:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",0);
    X_105:bat[:oid,:oid] := sql.tid(X_9,"sys","region");
    X_297 := algebra.subselect(X_107,X_105,A3,A3,true,true,false);
    (X_109,r1_126) := sql.bind(X_9,"sys","region","r_name",2);
    X_298 := algebra.subselect(r1_126,nil:bat[:oid,:oid],A3,A3,true,true,false);
    X_111:bat[:oid,:str] := sql.bind(X_9,"sys","region","r_name",1);
    X_300 := algebra.subselect(X_111,X_105,A3,A3,true,true,false);
    X_112 := sql.subdelta(X_297,X_105,X_109,X_298,X_300);
    (X_114,r1_135) := algebra.subjoin(X_104,X_112,nil:BAT,nil:BAT,false,nil:lng);
    X_116:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (X_120,r1_141) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_123:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_125 := sql.projectdelta(X_10,X_116,X_120,r1_141,X_123);
    X_126:bat[:oid,:int] := algebra.leftfetchjoinPath(X_114,X_92,X_78,X_62,X_31,X_125);
    X_127:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_130:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (X_132,r1_158) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_134:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_135 := sql.projectdelta(X_127,X_130,X_132,r1_158,X_134);
    (X_136,r1_163) := algebra.subjoin(X_126,X_135,nil:BAT,nil:BAT,false,nil:lng);
    X_141:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_143,r1_170) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_145:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_146 := sql.projectdelta(X_127,X_141,X_143,r1_170,X_145);
    X_147 := algebra.leftfetchjoin(r1_163,X_146);
    (X_149,r1_178) := algebra.subjoin(X_147,X_90,nil:BAT,nil:BAT,false,nil:lng);
    X_151 := sql.projectdelta(X_29,X_24,X_26,r1_27,X_28);
    X_152:bat[:oid,:date] := algebra.leftfetchjoinPath(X_149,X_136,X_114,X_92,X_78,X_62,r1_37,X_151);
    X_153:bat[:oid,:int] := batmtime.year(X_152);
    (X_154,r1_191,r2_191) := group.subgroupdone(X_153);
    X_157 := algebra.leftfetchjoin(r1_191,X_153);
    X_162:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (X_166,r1_203) := sql.bind(X_9,"sys","nation","n_name",2);
    X_169:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_171 := sql.projectdelta(X_90,X_162,X_166,r1_203,X_169);
    X_172 := algebra.leftfetchjoin(r1_178,X_171);
    X_173:bat[:oid,:bit] := batcalc.==(X_172,A0);
    X_174:bat[:oid,:bit] := batcalc.isnil(X_173);
    X_176:bat[:oid,:bit] := batcalc.ifthenelse(X_174,false,X_173);
    X_177:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_180,r1_226) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_182:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_183 := sql.projectdelta(X_10,X_177,X_180,r1_226,X_182);
    X_184:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_149,X_136,X_114,X_92,X_78,X_62,X_31,X_183);
    X_187 := calc.lng(A2,15,2);
    X_189:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_193,r1_249) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_195:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_197 := sql.projectdelta(X_10,X_189,X_193,r1_249,X_195);
    X_198:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_149,X_136,X_114,X_92,X_78,X_62,X_31,X_197);
    X_199:bat[:oid,:lng] := batcalc.-(X_187,X_198);
    X_200:bat[:oid,:hge] := batcalc.*(X_184,X_199);
    X_201 := calc.hge(A1,33,4);
    X_203:bat[:oid,:hge] := batcalc.ifthenelse(X_176,X_200,X_201);
    X_204:bat[:oid,:hge] := aggr.subsum(X_203,X_154,r1_191,true,true);
    X_209:bat[:oid,:hge] := aggr.subsum(X_200,X_154,r1_191,true,true);
    (X_158,r1_195,r2_195) := algebra.subsort(X_157,false,false);
    X_161 := algebra.leftfetchjoin(r1_195,X_157);
    X_206:bat[:oid,:hge] := batcalc.hge(4,X_204,39,8);
    X_210:bat[:oid,:hge] := batcalc./(X_206,X_209);
    X_211 := algebra.leftfetchjoin(r1_195,X_210);
    sql.resultSet(X_231,X_233,X_235,X_237,X_238,X_161,X_211);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

