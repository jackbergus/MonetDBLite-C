stdout of test '15-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "15-explain.SQL.py" "15-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#create view revenue0 (supplier_no, total_revenue) as
#	select
#		l_suppkey,
#		sum(l_extendedprice * (1 - l_discount))
#	from
#		lineitem
#	where
#		l_shipdate >= date '1996-01-01'
#		and l_shipdate < date '1996-01-01' + interval '3' month
#	group by
#		l_suppkey;
#explain select
#	s_suppkey,
#	s_name,
#	s_address,
#	s_phone,
#	total_revenue
#from
#	supplier,
#	revenue0
#where
#	s_suppkey = supplier_no
#	and total_revenue = (
#		select
#			max(total_revenue)
#		from
#			revenue0
#	)
#order by
#	s_suppkey;
% .explain # table_name
% mal # name
% clob # type
% 304 # length
function user.s3_1{autoCommit=true}():void;
    X_2 := sql.mvc();
    X_3:bat[:oid,:oid]  := sql.tid(X_2,"sys","supplier");
    X_6 := sql.bind(X_2,"sys","supplier","s_suppkey",0);
    (X_9,r1_9) := sql.bind(X_2,"sys","supplier","s_suppkey",2);
    X_12 := sql.bind(X_2,"sys","supplier","s_suppkey",1);
    X_14 := sql.delta(X_6,X_9,r1_9,X_12);
    X_15 := algebra.leftfetchjoin(X_3,X_14);
    X_16:bat[:oid,:oid]  := sql.tid(X_2,"sys","lineitem");
    X_18 := sql.bind(X_2,"sys","lineitem","l_shipdate",0);
    (X_20,r1_20) := sql.bind(X_2,"sys","lineitem","l_shipdate",2);
    X_22 := sql.bind(X_2,"sys","lineitem","l_shipdate",1);
    X_23 := sql.delta(X_18,X_20,r1_20,X_22);
    X_24 := algebra.leftfetchjoin(X_16,X_23);
    X_27 := mtime.addmonths("1996-01-01":date,3);
    X_28 := algebra.subselect(X_24,"1996-01-01":date,X_27,true,false,false);
    X_30 := sql.bind(X_2,"sys","lineitem","l_suppkey",0);
    (X_32,r1_35) := sql.bind(X_2,"sys","lineitem","l_suppkey",2);
    X_35 := sql.bind(X_2,"sys","lineitem","l_suppkey",1);
    X_36 := sql.delta(X_30,X_32,r1_35,X_35);
    X_37 := algebra.leftfetchjoin(X_16,X_36);
    X_38 := algebra.leftfetchjoin(X_28,X_37);
    (X_39,r1_42,r2_42) := group.subgroupdone(X_38);
    X_42 := algebra.leftfetchjoin(r1_42,X_38);
    X_50 := sql.bind(X_2,"sys","lineitem","l_extendedprice",0);
    (X_54,r1_57) := sql.bind(X_2,"sys","lineitem","l_extendedprice",2);
    X_57 := sql.bind(X_2,"sys","lineitem","l_extendedprice",1);
    X_59 := sql.delta(X_50,X_54,r1_57,X_57);
    X_60 := algebra.leftfetchjoin(X_16,X_59);
    X_61 := algebra.leftfetchjoin(X_28,X_60);
    X_62:bat[:oid,:hge]  := batcalc.hge(2,X_61,33,2);
    X_64 := sql.bind(X_2,"sys","lineitem","l_discount",0);
    (X_67,r1_76) := sql.bind(X_2,"sys","lineitem","l_discount",2);
    X_69 := sql.bind(X_2,"sys","lineitem","l_discount",1);
    X_70 := sql.delta(X_64,X_67,r1_76,X_69);
    X_71 := algebra.leftfetchjoin(X_16,X_70);
    X_72 := algebra.leftfetchjoin(X_28,X_71);
    X_73:bat[:oid,:lng]  := batcalc.-(100:lng,X_72);
    X_74:bat[:oid,:hge]  := batcalc.*(X_62,X_73);
    X_75:bat[:oid,:hge]  := aggr.subsum(X_74,X_39,r1_42,true,true);
    (X_43,r1_46) := algebra.subjoin(X_15,X_42,nil:BAT,nil:BAT,true,nil:lng);
    X_48 := algebra.leftfetchjoin(X_43,X_15);
    X_49 := bat.mirror(X_48);
    X_77 := algebra.leftfetchjoin(r1_46,X_75);
    X_80 := aggr.max(X_75);
    X_81 := sql.single(X_80);
    (X_82,r1_158) := algebra.subjoin(X_77,X_81,nil:BAT,nil:BAT,true,nil:lng);
    X_86 := algebra.tinter(X_49,X_82);
    X_87 := algebra.leftfetchjoin(X_86,X_48);
    (X_88,r1_164,r2_164) := algebra.subsort(X_87,false,false);
    X_92 := algebra.leftfetchjoin(r1_164,X_87);
    X_169 := algebra.leftfetchjoin(r1_164,X_86);
    X_119:bat[:oid,:hge]  := algebra.leftfetchjoin(X_169,X_77);
    X_112 := sql.bind(X_2,"sys","supplier","s_phone",0);
    (X_114,r1_196) := sql.bind(X_2,"sys","supplier","s_phone",2);
    X_116 := sql.bind(X_2,"sys","supplier","s_phone",1);
    X_117 := sql.delta(X_112,X_114,r1_196,X_116);
    X_118:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_169,X_43,X_3,X_117);
    X_105 := sql.bind(X_2,"sys","supplier","s_address",0);
    (X_107,r1_186) := sql.bind(X_2,"sys","supplier","s_address",2);
    X_109 := sql.bind(X_2,"sys","supplier","s_address",1);
    X_110 := sql.delta(X_105,X_107,r1_186,X_109);
    X_111:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_169,X_43,X_3,X_110);
    X_93 := sql.bind(X_2,"sys","supplier","s_name",0);
    (X_97,r1_173) := sql.bind(X_2,"sys","supplier","s_name",2);
    X_100 := sql.bind(X_2,"sys","supplier","s_name",1);
    X_103 := sql.delta(X_93,X_97,r1_173,X_100);
    X_104:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_169,X_43,X_3,X_103);
    X_120 := sql.resultSet(5,1,X_92);
    sql.rsColumn(X_120,"sys.supplier","s_suppkey","int",32,0,X_92);
    sql.rsColumn(X_120,"sys.supplier","s_name","varchar",25,0,X_104);
    sql.rsColumn(X_120,"sys.supplier","s_address","varchar",40,0,X_111);
    sql.rsColumn(X_120,"sys.supplier","s_phone","varchar",15,0,X_118);
    sql.rsColumn(X_120,"sys.revenue0","total_revenue","decimal",33,4,X_119);
    X_143 := io.stdout();
    sql.exportResult(X_143,X_120);
end s3_1;
# querylog.define("explain select\n\ts_suppkey,\n\ts_name,\n\ts_address,\n\ts_phone,\n\ttotal_revenue\nfrom\n\tsupplier,\n\trevenue0\nwhere\n\ts_suppkey = supplier_no\n\tand total_revenue = (\n\t\tselect\n\t\t\tmax(total_revenue)\n\t\tfrom\n\t\t\trevenue0\n\t)\norder by\n\ts_suppkey;","sequential_pipe")
#drop view revenue0;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

