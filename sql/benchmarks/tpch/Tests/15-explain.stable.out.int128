stdout of test '15-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "15-explain.SQL.py" "15-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#create view revenue0 (supplier_no, total_revenue) as
#	select
#		l_suppkey,
#		sum(l_extendedprice * (1 - l_discount))
#	from
#		lineitem
#	where
#		l_shipdate >= date '1996-01-01'
#		and l_shipdate < date '1996-01-01' + interval '3' month
#	group by
#		l_suppkey;
#explain select
#	s_suppkey,
#	s_name,
#	s_address,
#	s_phone,
#	total_revenue
#from
#	supplier,
#	revenue0
#where
#	s_suppkey = supplier_no
#	and total_revenue = (
#		select
#			max(total_revenue)
#		from
#			revenue0
#	)
#order by
#	s_suppkey;
% .explain # table_name
% mal # name
% clob # type
% 297 # length
function user.s3_1():void;
    X_114:void := querylog.define("explain select\n s_suppkey,\n s_name,\n s_address,\n s_phone,\n total_revenue\nfrom\n supplier,\n revenue0\nwhere\n s_suppkey = supplier_no\n and total_revenue = (\n select\n max(total_revenue)\n from\n revenue0\n )\norder by\n s_suppkey;","sequential_pipe",76);
    X_69 := bat.new(nil:oid,nil:str);
    X_77 := bat.append(X_69,"sys.supplier");
    X_85 := bat.append(X_77,"sys.supplier");
    X_92 := bat.append(X_85,"sys.supplier");
    X_99 := bat.append(X_92,"sys.supplier");
    X_104 := bat.append(X_99,"sys.revenue0");
    X_72 := bat.new(nil:oid,nil:str);
    X_79 := bat.append(X_72,"s_suppkey");
    X_86 := bat.append(X_79,"s_name");
    X_93 := bat.append(X_86,"s_address");
    X_100 := bat.append(X_93,"s_phone");
    X_106 := bat.append(X_100,"total_revenue");
    X_73 := bat.new(nil:oid,nil:str);
    X_80 := bat.append(X_73,"int");
    X_87 := bat.append(X_80,"char");
    X_94 := bat.append(X_87,"varchar");
    X_101 := bat.append(X_94,"char");
    X_108 := bat.append(X_101,"decimal");
    X_74 := bat.new(nil:oid,nil:int);
    X_82 := bat.append(X_74,32);
    X_89 := bat.append(X_82,25);
    X_96 := bat.append(X_89,40);
    X_102 := bat.append(X_96,15);
    X_110 := bat.append(X_102,39);
    X_76 := bat.new(nil:oid,nil:int);
    X_84 := bat.append(X_76,0);
    X_91 := bat.append(X_84,0);
    X_98 := bat.append(X_91,0);
    X_103 := bat.append(X_98,0);
    X_112 := bat.append(X_103,4);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","supplier");
    X_5:bat[:int] := sql.bind(X_1,"sys","supplier","s_suppkey",0);
    X_8 := algebra.projection(C_2,X_5);
    C_9:bat[:oid] := sql.tid(X_1,"sys","lineitem");
    X_11:bat[:date] := sql.bind(X_1,"sys","lineitem","l_shipdate",0);
    X_13 := algebra.projection(C_9,X_11);
    X_16:date := mtime.addmonths("1996-01-01",3);
    C_17 := algebra.subselect(X_13,"1996-01-01",X_16,true,false,false);
    X_20:bat[:int] := sql.bind(X_1,"sys","lineitem","l_suppkey",0);
    X_22 := algebra.projection(C_9,X_20);
    X_23 := algebra.projection(C_17,X_22);
    (X_24,r1_42,r2_42) := group.subgroupdone(X_23);
    X_27 := algebra.projection(r1_42,X_23);
    X_35:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_extendedprice",0);
    X_37 := algebra.projection(C_9,X_35);
    X_38 := algebra.projection(C_17,X_37);
    X_40:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_discount",0);
    X_42 := algebra.projection(C_9,X_40);
    X_43 := algebra.projection(C_17,X_42);
    X_44:bat[:lng] := batcalc.-(100:lng,X_43);
    X_45:bat[:hge] := batcalc.*(X_38,X_44);
    X_46:bat[:hge] := aggr.subsum(X_45,X_24,r1_42,true,true);
    X_28 := bat.setKey(X_27,true);
    (X_29,r1_47) := algebra.subjoin(X_8,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_33 := algebra.projection(X_29,X_8);
    X_34 := bat.mirror(X_33);
    X_47 := algebra.projection(r1_47,X_46);
    X_48 := aggr.max(X_46);
    X_49 := sql.single(X_48);
    (X_50,r1_146) := algebra.subjoin(X_47,X_49,nil:BAT,nil:BAT,false,nil:lng);
    C_52 := algebra.subinter(X_34,X_50,nil:BAT,nil:BAT,false,nil:lng);
    X_53 := algebra.projection(C_52,X_33);
    (X_54,r1_154,r2_154) := algebra.subsort(X_53,false,false);
    X_57 := algebra.projection(r1_154,X_53);
    X_58:bat[:str] := sql.bind(X_1,"sys","supplier","s_name",0);
    X_60:bat[:str] := algebra.projectionpath(r1_154,C_52,X_29,C_2,X_58);
    X_61:bat[:str] := sql.bind(X_1,"sys","supplier","s_address",0);
    X_63:bat[:str] := algebra.projectionpath(r1_154,C_52,X_29,C_2,X_61);
    X_64:bat[:str] := sql.bind(X_1,"sys","supplier","s_phone",0);
    X_66:bat[:str] := algebra.projectionpath(r1_154,C_52,X_29,C_2,X_64);
    X_67:bat[:hge] := algebra.projectionpath(r1_154,C_52,X_47);
    sql.resultSet(X_104,X_106,X_108,X_110,X_112,X_57,X_60,X_63,X_66,X_67);
end user.s3_1;
#drop view revenue0;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

