stdout of test '15-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "15-explain.SQL.py" "15-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#create view revenue0 (supplier_no, total_revenue) as
#	select
#		l_suppkey,
#		sum(l_extendedprice * (1 - l_discount))
#	from
#		lineitem
#	where
#		l_shipdate >= date '1996-01-01'
#		and l_shipdate < date '1996-01-01' + interval '3' month
#	group by
#		l_suppkey;
#explain select
#	s_suppkey,
#	s_name,
#	s_address,
#	s_phone,
#	total_revenue
#from
#	supplier,
#	revenue0
#where
#	s_suppkey = supplier_no
#	and total_revenue = (
#		select
#			max(total_revenue)
#		from
#			revenue0
#	)
#order by
#	s_suppkey;
% .explain # table_name
% mal # name
% clob # type
% 298 # length
function user.s3_1():void;
    X_240:void := querylog.define("explain select\n s_suppkey,\n s_name,\n s_address,\n s_phone,\n total_revenue\nfrom\n supplier,\n revenue0\nwhere\n s_suppkey = supplier_no\n and total_revenue = (\n select\n max(total_revenue)\n from\n revenue0\n )\norder by\n s_suppkey;","sequential_pipe",100);
    X_190 := bat.new(nil:str);
    X_197 := bat.append(X_190,"sys.supplier");
    X_207 := bat.append(X_197,"sys.supplier");
    X_215 := bat.append(X_207,"sys.supplier");
    X_223 := bat.append(X_215,"sys.supplier");
    X_230 := bat.append(X_223,"sys.revenue0");
    X_192 := bat.new(nil:str);
    X_199 := bat.append(X_192,"s_suppkey");
    X_208 := bat.append(X_199,"s_name");
    X_216 := bat.append(X_208,"s_address");
    X_224 := bat.append(X_216,"s_phone");
    X_232 := bat.append(X_224,"total_revenue");
    X_193 := bat.new(nil:str);
    X_201 := bat.append(X_193,"int");
    X_210 := bat.append(X_201,"char");
    X_218 := bat.append(X_210,"varchar");
    X_226 := bat.append(X_218,"char");
    X_234 := bat.append(X_226,"decimal");
    X_194 := bat.new(nil:int);
    X_203 := bat.append(X_194,32);
    X_212 := bat.append(X_203,25);
    X_220 := bat.append(X_212,40);
    X_227 := bat.append(X_220,15);
    X_236 := bat.append(X_227,39);
    X_196 := bat.new(nil:int);
    X_205 := bat.append(X_196,0);
    X_214 := bat.append(X_205,0);
    X_222 := bat.append(X_214,0);
    X_229 := bat.append(X_222,0);
    X_238 := bat.append(X_229,4);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_4:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    (C_7:bat[:oid],r1_8:bat[:int]) := sql.bind(X_0,"sys","supplier","s_suppkey",2);
    X_10:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",1);
    X_12 := sql.delta(X_4,C_7,r1_8,X_10);
    X_13 := algebra.projection(C_1,X_12);
    C_14:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_16:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    (C_18:bat[:oid],r1_19:bat[:date]) := sql.bind(X_0,"sys","lineitem","l_shipdate",2);
    X_20:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",1);
    X_21 := sql.delta(X_16,C_18,r1_19,X_20);
    X_22 := algebra.projection(C_14,X_21);
    X_28:date := mtime.addmonths("1996-01-01",3);
    C_29 := algebra.subselect(X_22,"1996-01-01",X_28,true,false,false);
    X_33:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    (C_35:bat[:oid],r1_36:bat[:int]) := sql.bind(X_0,"sys","lineitem","l_suppkey",2);
    X_37:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",1);
    X_38 := sql.delta(X_33,C_35,r1_36,X_37);
    X_39 := algebra.projection(C_14,X_38);
    X_40 := algebra.projection(C_29,X_39);
    (X_41,r1_42,r2_42) := group.subgroupdone(X_40);
    X_44 := algebra.projection(r1_42,X_40);
    X_53:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    (C_55:bat[:oid],r1_56:bat[:lng]) := sql.bind(X_0,"sys","lineitem","l_extendedprice",2);
    X_57:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",1);
    X_58 := sql.delta(X_53,C_55,r1_56,X_57);
    X_59 := algebra.projection(C_14,X_58);
    X_60 := algebra.projection(C_29,X_59);
    X_70:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    (C_72:bat[:oid],r1_73:bat[:lng]) := sql.bind(X_0,"sys","lineitem","l_discount",2);
    X_74:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",1);
    X_75 := sql.delta(X_70,C_72,r1_73,X_74);
    X_76 := algebra.projection(C_14,X_75);
    X_77 := algebra.projection(C_29,X_76);
    X_78:bat[:lng] := batcalc.-(100:lng,X_77);
    X_80:bat[:hge] := batcalc.*(X_60,X_78);
    X_82:bat[:hge] := aggr.subsum(X_80,X_41,r1_42,true,true);
    X_45 := bat.setKey(X_44,true);
    (X_46,r1_47) := algebra.subjoin(X_13,X_45,nil:BAT,nil:BAT,false,nil:lng);
    X_51 := algebra.projection(X_46,X_13);
    X_52 := bat.mirror(X_51);
    X_85 := algebra.projection(r1_47,X_82);
    X_143 := aggr.max(X_82);
    X_144 := sql.single(X_143);
    (X_145,r1_146) := algebra.subjoin(X_85,X_144,nil:BAT,nil:BAT,false,nil:lng);
    C_151 := algebra.subinter(X_52,X_145,nil:BAT,nil:BAT,false,nil:lng);
    X_152 := algebra.projection(C_151,X_51);
    (X_153,r1_154,r2_154) := algebra.subsort(X_152,false,false);
    X_156 := algebra.projection(r1_154,X_152);
    X_157:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",0);
    (C_159:bat[:oid],r1_160:bat[:str]) := sql.bind(X_0,"sys","supplier","s_name",2);
    X_161:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",1);
    X_162 := sql.delta(X_157,C_159,r1_160,X_161);
    X_166:bat[:str] := algebra.projectionpath(r1_154,C_151,X_46,C_1,X_162);
    X_167:bat[:str] := sql.bind(X_0,"sys","supplier","s_address",0);
    (C_169:bat[:oid],r1_170:bat[:str]) := sql.bind(X_0,"sys","supplier","s_address",2);
    X_171:bat[:str] := sql.bind(X_0,"sys","supplier","s_address",1);
    X_172 := sql.delta(X_167,C_169,r1_170,X_171);
    X_176:bat[:str] := algebra.projectionpath(r1_154,C_151,X_46,C_1,X_172);
    X_177:bat[:str] := sql.bind(X_0,"sys","supplier","s_phone",0);
    (C_179:bat[:oid],r1_180:bat[:str]) := sql.bind(X_0,"sys","supplier","s_phone",2);
    X_181:bat[:str] := sql.bind(X_0,"sys","supplier","s_phone",1);
    X_182 := sql.delta(X_177,C_179,r1_180,X_181);
    X_186:bat[:str] := algebra.projectionpath(r1_154,C_151,X_46,C_1,X_182);
    X_188:bat[:hge] := algebra.projectionpath(r1_154,C_151,X_85);
    sql.resultSet(X_230,X_232,X_234,X_236,X_238,X_156,X_166,X_176,X_186,X_188);
end user.s3_1;
#drop view revenue0;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

