stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 863 # length
function user.s4_1():void;
    X_269:void := querylog.define("explain select\n supp_nation,\n cust_nation,\n l_year,\n sum(volume) as revenue\nfrom\n (\n select\n n1.n_name as supp_nation,\n n2.n_name as cust_nation,\n extract(year from l_shipdate) as l_year,\n l_extendedprice * (1 - l_discount) as volume\n from\n supplier,\n lineitem,\n orders,\n customer,\n nation n1,\n nation n2\n where\n s_suppkey = l_suppkey\n and o_orderkey = l_orderkey\n and c_custkey = o_custkey\n and s_nationkey = n1.n_nationkey\n and c_nationkey = n2.n_nationkey\n and (\n (n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n or (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n )\n and l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n ) as shipping\ngroup by\n supp_nation,\n cust_nation,\n l_year\norder by\n supp_nation,\n cust_nation,\n l_year;","sequential_pipe",124);
    X_228 := bat.new(nil:str);
    X_235 := bat.append(X_228,"sys.shipping");
    X_245 := bat.append(X_235,"sys.shipping");
    X_251 := bat.append(X_245,"sys.shipping");
    X_259 := bat.append(X_251,"sys.L1");
    X_230 := bat.new(nil:str);
    X_237 := bat.append(X_230,"supp_nation");
    X_246 := bat.append(X_237,"cust_nation");
    X_252 := bat.append(X_246,"l_year");
    X_261 := bat.append(X_252,"revenue");
    X_231 := bat.new(nil:str);
    X_239 := bat.append(X_231,"char");
    X_248 := bat.append(X_239,"char");
    X_254 := bat.append(X_248,"int");
    X_263 := bat.append(X_254,"decimal");
    X_232 := bat.new(nil:int);
    X_241 := bat.append(X_232,25);
    X_249 := bat.append(X_241,25);
    X_256 := bat.append(X_249,32);
    X_265 := bat.append(X_256,39);
    X_234 := bat.new(nil:int);
    X_243 := bat.append(X_234,0);
    X_250 := bat.append(X_243,0);
    X_258 := bat.append(X_250,0);
    X_267 := bat.append(X_258,4);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_4:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    (X_7,r1_15) := sql.bind(X_0,"sys","supplier","s_suppkey",2);
    X_10:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",1);
    X_12 := sql.delta(X_4,X_7,r1_15,X_10);
    X_13 := algebra.projection(X_1,X_12);
    X_14:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_16:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    (X_18,r1_26) := sql.bind(X_0,"sys","lineitem","l_shipdate",2);
    X_20:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",1);
    X_21 := sql.delta(X_16,X_18,r1_26,X_20);
    X_22 := algebra.projection(X_14,X_21);
    X_25 := algebra.subselect(X_22,"1995-01-01","1996-12-31",true,true,false);
    X_29:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    (X_31,r1_39) := sql.bind(X_0,"sys","lineitem","l_suppkey",2);
    X_33:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",1);
    X_34 := sql.delta(X_29,X_31,r1_39,X_33);
    X_36:bat[:int] := algebra.projectionpath(X_25,X_14,X_34);
    (X_37,r1_45) := algebra.subjoin(X_13,X_36,nil:BAT,nil:BAT,false,nil:lng);
    X_42:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_44,r1_52) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_46:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_47 := sql.delta(X_42,X_44,r1_52,X_46);
    X_50:bat[:oid] := algebra.projectionpath(r1_45,X_25,X_14,X_47);
    X_51:bat[:oid] := sql.tid(X_0,"sys","orders");
    (X_53,r1_61) := algebra.subjoin(X_50,X_51,nil:BAT,nil:BAT,false,nil:lng);
    X_55:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_57,r1_65) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_59:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_60 := sql.delta(X_55,X_57,r1_65,X_59);
    X_63:bat[:oid] := algebra.projectionpath(X_53,X_37,X_1,X_60);
    X_64:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_66:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    (X_68,r1_76) := sql.bind(X_0,"sys","nation","n_name",2);
    X_70:bat[:str] := sql.bind(X_0,"sys","nation","n_name",1);
    X_71 := sql.delta(X_66,X_68,r1_76,X_70);
    X_72 := algebra.projection(X_64,X_71);
    X_74 := algebra.subselect(X_72,"FRANCE","FRANCE",true,false,false);
    X_79 := algebra.subselect(X_72,"GERMANY","GERMANY",true,false,false);
    X_80 := bat.mergecand(X_74,X_79);
    X_81 := algebra.projection(X_80,X_64);
    (X_82,r1_90) := algebra.subjoin(X_63,X_81,nil:BAT,nil:BAT,false,nil:lng);
    X_87:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_89,r1_97) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_91:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_92 := sql.delta(X_87,X_89,r1_97,X_91);
    X_95:bat[:oid] := algebra.projectionpath(X_82,r1_61,X_51,X_92);
    X_96:bat[:oid] := sql.tid(X_0,"sys","customer");
    (X_98,r1_106) := algebra.subjoin(X_95,X_96,nil:BAT,nil:BAT,false,nil:lng);
    X_100:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",0);
    (X_102,r1_110) := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",2);
    X_104:bat[:oid] := sql.bind_idxbat(X_0,"sys","customer","customer_c_nationkey_fkey",1);
    X_105 := sql.delta(X_100,X_102,r1_110,X_104);
    X_107:bat[:oid] := algebra.projectionpath(r1_106,X_96,X_105);
    X_123 := bat.mergecand(X_79,X_74);
    X_124 := algebra.projection(X_123,X_64);
    (X_125,r1_133) := algebra.subjoin(X_107,X_124,nil:BAT,nil:BAT,false,nil:lng);
    X_131:bat[:str] := algebra.projectionpath(r1_133,X_123,X_72);
    X_136:bat[:str] := algebra.projectionpath(X_125,X_98,r1_90,X_80,X_72);
    X_138 := algebra.subselect(X_136,"FRANCE","FRANCE",true,false,false);
    X_139 := algebra.subselect(X_131,X_138,"GERMANY","GERMANY",true,false,false);
    X_142 := algebra.subselect(X_136,"GERMANY","GERMANY",true,false,false);
    X_143 := algebra.subselect(X_131,X_142,"FRANCE","FRANCE",true,false,false);
    X_144 := bat.mergecand(X_139,X_143);
    X_151:bat[:date] := algebra.projectionpath(X_144,X_125,X_98,X_82,X_53,r1_45,X_25,X_22);
    X_152:bat[:int] := batmtime.year(X_151);
    X_155 := algebra.projection(X_144,X_131);
    X_156 := algebra.projection(X_144,X_136);
    (X_157,r1_165,r2_165) := group.subgroup(X_156);
    (X_160,r1_168,r2_168) := group.subgroup(X_155,X_157);
    (X_163,r1_171,r2_171) := group.subgroupdone(X_152,X_160);
    X_166 := algebra.projection(r1_171,X_152);
    X_167 := algebra.projection(r1_171,X_155);
    X_168 := algebra.projection(r1_171,X_156);
    X_183:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    (X_185,r1_193) := sql.bind(X_0,"sys","lineitem","l_extendedprice",2);
    X_187:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",1);
    X_188 := sql.delta(X_183,X_185,r1_193,X_187);
    X_196:bat[:lng] := algebra.projectionpath(X_144,X_125,X_98,X_82,X_53,r1_45,X_25,X_14,X_188);
    X_205:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    (X_207,r1_215) := sql.bind(X_0,"sys","lineitem","l_discount",2);
    X_209:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",1);
    X_210 := sql.delta(X_205,X_207,r1_215,X_209);
    X_218:bat[:lng] := algebra.projectionpath(X_144,X_125,X_98,X_82,X_53,r1_45,X_25,X_14,X_210);
    X_219:bat[:lng] := batcalc.-(100:lng,X_218);
    X_221:bat[:hge] := batcalc.*(X_196,X_219);
    X_223:bat[:hge] := aggr.subsum(X_221,X_163,r1_171,true,true);
    (X_169,r1_177,r2_177) := algebra.subsort(X_168,false,false);
    (X_174,r1_182,r2_182) := algebra.subsort(X_167,r1_177,r2_177,false,false);
    (X_177,r1_185,r2_185) := algebra.subsort(X_166,r1_182,r2_182,false,false);
    X_180 := algebra.projection(r1_185,X_168);
    X_181 := algebra.projection(r1_185,X_167);
    X_182 := algebra.projection(r1_185,X_166);
    X_226 := algebra.projection(r1_185,X_223);
    sql.resultSet(X_259,X_261,X_263,X_265,X_267,X_180,X_181,X_182,X_226);
end user.s4_1;
#inline               actions= 0 time=6 usec 
#candidates           actions= 1 time=73 usec 
#remap                actions= 4 time=313 usec 
#costModel            actions= 1 time=91 usec 
#coercions            actions= 0 time=55 usec 
#evaluate             actions=12 time=140 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions= 0 time=5 usec 
#aliases              actions=19 time=125 usec 
#mergetable           actions= 0 time=114 usec 
#deadcode             actions=15 time=99 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=29 time=116 usec 
#commonTerms          actions= 5 time=101 usec 
#projectionpath       actions=32 time=114 usec 
#reorder              actions= 1 time=185 usec 
#deadcode             actions=37 time=103 usec 
#reduce               actions=134 time=152 usec 
#matpack              actions= 0 time=7 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=90 usec 
#garbageCollector     actions= 1 time=102 usec 
#total                actions= 1 time=2106 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

