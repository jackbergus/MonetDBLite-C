stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 967 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:date,A6:date):void;
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid]  := sql.tid(X_9,"sys","lineitem");
    X_13:bat[:oid,:date]  := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    (X_16,r1_16) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    X_19:bat[:oid,:date]  := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    X_21 := sql.delta(X_13,X_16,r1_16,X_19);
    X_22 := algebra.leftfetchjoin(X_10,X_21);
    X_23 := algebra.subselect(X_22,A5,A6,true,true,false);
    X_233 := algebra.leftfetchjoin(X_23,X_10);
    X_25 := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_27,r1_29) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_29 := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_30 := sql.delta(X_25,X_27,r1_29,X_29);
    X_31:bat[:oid,:oid]  := algebra.leftfetchjoin(X_233,X_30);
    X_32:bat[:oid,:oid]  := sql.tid(X_9,"sys","supplier");
    (X_34,r1_37) := algebra.subjoin(X_31,X_32,nil:BAT,nil:BAT,true,nil:lng);
    X_234 := algebra.leftfetchjoin(X_34,X_23);
    X_38 := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_40,r1_43) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_44 := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_45 := sql.delta(X_38,X_40,r1_43,X_44);
    X_46:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_234,X_10,X_45);
    X_47:bat[:oid,:oid]  := sql.tid(X_9,"sys","orders");
    (X_49,r1_54) := algebra.subjoin(X_46,X_47,nil:BAT,nil:BAT,true,nil:lng);
    X_235 := algebra.leftfetchjoin(r1_37,X_32);
    X_52 := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_55,r1_60) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_58 := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_60 := sql.delta(X_52,X_55,r1_60,X_58);
    X_61:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_49,X_235,X_60);
    X_62:bat[:oid,:oid]  := sql.tid(X_9,"sys","nation");
    X_64:bat[:oid,:str]  := sql.bind(X_9,"sys","nation","n_name",0);
    (X_66,r1_73) := sql.bind(X_9,"sys","nation","n_name",2);
    X_68:bat[:oid,:str]  := sql.bind(X_9,"sys","nation","n_name",1);
    X_69 := sql.delta(X_64,X_66,r1_73,X_68);
    X_70 := algebra.leftfetchjoin(X_62,X_69);
    X_71 := algebra.subselect(X_70,A1,A1,true,true,false);
    X_73 := algebra.subselect(X_70,A3,A3,true,true,false);
    X_74 := bat.mergecand(X_71,X_73);
    X_75 := algebra.leftfetchjoin(X_74,X_62);
    (X_76,r1_85) := algebra.subjoin(X_61,X_75,nil:BAT,nil:BAT,true,nil:lng);
    X_236 := algebra.leftfetchjoin(r1_54,X_47);
    X_80 := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_85,r1_94) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_88 := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_90 := sql.delta(X_80,X_85,r1_94,X_88);
    X_91:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_76,X_236,X_90);
    X_92:bat[:oid,:oid]  := sql.tid(X_9,"sys","customer");
    (X_94,r1_105) := algebra.subjoin(X_91,X_92,nil:BAT,nil:BAT,true,nil:lng);
    X_97 := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_99,r1_110) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_101 := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_102 := sql.delta(X_97,X_99,r1_110,X_101);
    X_103:bat[:oid,:oid]  := algebra.leftfetchjoinPath(r1_105,X_92,X_102);
    X_104 := algebra.subselect(X_70,A2,A2,true,true,false);
    X_106 := algebra.subselect(X_70,A4,A4,true,true,false);
    X_107 := bat.mergecand(X_104,X_106);
    X_108 := algebra.leftfetchjoin(X_107,X_62);
    (X_109,r1_133) := algebra.subjoin(X_103,X_108,nil:BAT,nil:BAT,true,nil:lng);
    X_113:bat[:oid,:str]  := algebra.leftfetchjoinPath(r1_133,X_107,X_70);
    X_237 := algebra.leftfetchjoin(X_109,X_94);
    X_114:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_237,r1_85,X_74,X_70);
    X_115 := algebra.subselect(X_114,A1,A1,true,true,false);
    X_117 := algebra.subselect(X_113,X_115,A2,A2,true,true,false);
    X_118 := algebra.subselect(X_114,A3,A3,true,true,false);
    X_119 := algebra.subselect(X_113,X_118,A4,A4,true,true,false);
    X_120 := bat.mergecand(X_117,X_119);
    X_121 := algebra.leftfetchjoin(X_120,X_113);
    X_122 := algebra.leftfetchjoin(X_120,X_114);
    X_238 := algebra.leftfetchjoin(X_120,X_109);
    X_123:bat[:oid,:date]  := algebra.leftfetchjoinPath(X_238,X_94,X_76,X_49,X_34,X_23,X_22);
    X_124:bat[:oid,:int]  := batmtime.year(X_123);
    (X_125,r1_165,r2_165) := group.subgroup(X_124);
    (X_128,r1_168,r2_168) := group.subgroup(X_122,X_125);
    (X_131,r1_171,r2_171) := group.subgroupdone(X_121,X_128);
    X_134 := algebra.leftfetchjoin(r1_171,X_124);
    X_135 := algebra.leftfetchjoin(r1_171,X_121);
    X_136 := algebra.leftfetchjoin(r1_171,X_122);
    X_150:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_155,r1_195) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_158:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_160 := sql.delta(X_150,X_155,r1_195,X_158);
    X_161:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_238,X_94,X_76,X_49,X_34,X_23,X_10,X_160);
    X_162:bat[:oid,:hge]  := batcalc.hge(2,X_161,33,2);
    X_164 := calc.lng(A0,15,2);
    X_166:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_168,r1_218) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_170:bat[:oid,:lng]  := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_171 := sql.delta(X_166,X_168,r1_218,X_170);
    X_172:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_238,X_94,X_76,X_49,X_34,X_23,X_10,X_171);
    X_173:bat[:oid,:lng]  := batcalc.-(X_164,X_172);
    X_174:bat[:oid,:hge]  := batcalc.*(X_162,X_173);
    X_175:bat[:oid,:hge]  := aggr.subsum(X_174,X_131,r1_171,true,true);
    (X_137,r1_177,r2_177) := algebra.subsort(X_136,false,false);
    (X_141,r1_181,r2_181) := algebra.subsort(X_135,r1_177,r2_177,false,false);
    (X_144,r1_184,r2_184) := algebra.subsort(X_134,r1_181,r2_181,false,false);
    X_147 := algebra.leftfetchjoin(r1_184,X_136);
    X_177 := algebra.leftfetchjoin(r1_184,X_175);
    X_149 := algebra.leftfetchjoin(r1_184,X_134);
    X_148 := algebra.leftfetchjoin(r1_184,X_135);
    X_178 := sql.resultSet(4,1,X_147);
    sql.rsColumn(X_178,"sys.shipping","supp_nation","varchar",25,0,X_147);
    sql.rsColumn(X_178,"sys.shipping","cust_nation","varchar",25,0,X_148);
    sql.rsColumn(X_178,"sys.shipping","l_year","int",32,0,X_149);
    sql.rsColumn(X_178,"sys.L1","revenue","decimal",33,4,X_177);
    X_198 := io.stdout();
    sql.exportResult(X_198,X_178);
end s2_1;
# querylog.define("explain select\n\tsupp_nation,\n\tcust_nation,\n\tl_year,\n\tsum(volume) as revenue\nfrom\n\t(\n\t\tselect\n\t\t\tn1.n_name as supp_nation,\n\t\t\tn2.n_name as cust_nation,\n\t\t\textract(year from l_shipdate) as l_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume\n\t\tfrom\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand c_custkey = o_custkey\n\t\t\tand s_nationkey = n1.n_nationkey\n\t\t\tand c_nationkey = n2.n_nationkey\n\t\t\tand (\n\t\t\t\t(n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n\t\t\t\tor (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n\t\t\t)\n\t\t\tand l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t) as shipping\ngroup by\n\tsupp_nation,\n\tcust_nation,\n\tl_year\norder by\n\tsupp_nation,\n\tcust_nation,\n\tl_year;","sequential_pipe")

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

