stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 863 # length
function user.s2_1():void;
    X_168:void := querylog.define("explain select\n supp_nation,\n cust_nation,\n l_year,\n sum(volume) as revenue\nfrom\n (\n select\n n1.n_name as supp_nation,\n n2.n_name as cust_nation,\n extract(year from l_shipdate) as l_year,\n l_extendedprice * (1 - l_discount) as volume\n from\n supplier,\n lineitem,\n orders,\n customer,\n nation n1,\n nation n2\n where\n s_suppkey = l_suppkey\n and o_orderkey = l_orderkey\n and c_custkey = o_custkey\n and s_nationkey = n1.n_nationkey\n and c_nationkey = n2.n_nationkey\n and (\n (n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n or (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n )\n and l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n ) as shipping\ngroup by\n supp_nation,\n cust_nation,\n l_year\norder by\n supp_nation,\n cust_nation,\n l_year;","sequential_pipe",106);
    X_127 := bat.new(nil:oid,nil:str);
    X_135 := bat.append(X_127,"sys.shipping");
    X_144 := bat.append(X_135,"sys.shipping");
    X_150 := bat.append(X_144,"sys.shipping");
    X_158 := bat.append(X_150,"sys.L1");
    X_130 := bat.new(nil:oid,nil:str);
    X_137 := bat.append(X_130,"supp_nation");
    X_145 := bat.append(X_137,"cust_nation");
    X_151 := bat.append(X_145,"l_year");
    X_160 := bat.append(X_151,"revenue");
    X_131 := bat.new(nil:oid,nil:str);
    X_139 := bat.append(X_131,"char");
    X_147 := bat.append(X_139,"char");
    X_153 := bat.append(X_147,"int");
    X_162 := bat.append(X_153,"decimal");
    X_132 := bat.new(nil:oid,nil:int);
    X_141 := bat.append(X_132,25);
    X_148 := bat.append(X_141,25);
    X_155 := bat.append(X_148,32);
    X_164 := bat.append(X_155,39);
    X_134 := bat.new(nil:oid,nil:int);
    X_143 := bat.append(X_134,0);
    X_149 := bat.append(X_143,0);
    X_157 := bat.append(X_149,0);
    X_166 := bat.append(X_157,4);
    X_5 := sql.mvc();
    C_6:bat[:oid] := sql.tid(X_5,"sys","supplier");
    X_9:bat[:int] := sql.bind(X_5,"sys","supplier","s_suppkey",0);
    X_14 := algebra.projection(C_6,X_9);
    C_15:bat[:oid] := sql.tid(X_5,"sys","lineitem");
    X_17:bat[:date] := sql.bind(X_5,"sys","lineitem","l_shipdate",0);
    X_19 := algebra.projection(C_15,X_17);
    C_20 := algebra.subselect(X_19,"1995-01-01","1996-12-31",true,true,false);
    X_23:bat[:int] := sql.bind(X_5,"sys","lineitem","l_suppkey",0);
    X_25:bat[:int] := algebra.projectionpath(C_20,C_15,X_23);
    (X_26,r1_45) := algebra.subjoin(X_14,X_25,nil:BAT,nil:BAT,false,nil:lng);
    X_30:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_32,r1_52) := sql.bind_idxbat(X_5,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_34:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_35 := sql.delta(X_30,X_32,r1_52,X_34);
    X_36:bat[:oid] := algebra.projectionpath(r1_45,C_20,C_15,X_35);
    C_37:bat[:oid] := sql.tid(X_5,"sys","orders");
    (X_39,r1_61) := algebra.subjoin(X_36,C_37,nil:BAT,nil:BAT,false,nil:lng);
    X_41:bat[:oid] := sql.bind_idxbat(X_5,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_43,r1_65) := sql.bind_idxbat(X_5,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_45:bat[:oid] := sql.bind_idxbat(X_5,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_46 := sql.delta(X_41,X_43,r1_65,X_45);
    X_47:bat[:oid] := algebra.projectionpath(X_39,X_26,C_6,X_46);
    C_48:bat[:oid] := sql.tid(X_5,"sys","nation");
    X_50:bat[:str] := sql.bind(X_5,"sys","nation","n_name",0);
    X_52 := algebra.projection(C_48,X_50);
    C_53 := algebra.subselect(X_52,"FRANCE","FRANCE",true,false,false);
    C_54 := algebra.subselect(X_52,"GERMANY","GERMANY",true,false,false);
    X_55 := bat.mergecand(C_53,C_54);
    X_56 := algebra.projection(X_55,C_48);
    (X_57,r1_90) := algebra.subjoin(X_47,X_56,nil:BAT,nil:BAT,false,nil:lng);
    X_59:bat[:oid] := sql.bind_idxbat(X_5,"sys","orders","orders_o_custkey_fkey",0);
    (X_61,r1_97) := sql.bind_idxbat(X_5,"sys","orders","orders_o_custkey_fkey",2);
    X_63:bat[:oid] := sql.bind_idxbat(X_5,"sys","orders","orders_o_custkey_fkey",1);
    X_64 := sql.delta(X_59,X_61,r1_97,X_63);
    X_65:bat[:oid] := algebra.projectionpath(X_57,r1_61,C_37,X_64);
    C_66:bat[:oid] := sql.tid(X_5,"sys","customer");
    (X_68,r1_106) := algebra.subjoin(X_65,C_66,nil:BAT,nil:BAT,false,nil:lng);
    X_70:bat[:oid] := sql.bind_idxbat(X_5,"sys","customer","customer_c_nationkey_fkey",0);
    (X_72,r1_110) := sql.bind_idxbat(X_5,"sys","customer","customer_c_nationkey_fkey",2);
    X_74:bat[:oid] := sql.bind_idxbat(X_5,"sys","customer","customer_c_nationkey_fkey",1);
    X_75 := sql.delta(X_70,X_72,r1_110,X_74);
    X_76:bat[:oid] := algebra.projectionpath(r1_106,C_66,X_75);
    X_77 := bat.mergecand(C_54,C_53);
    X_78 := algebra.projection(X_77,C_48);
    (X_79,r1_133) := algebra.subjoin(X_76,X_78,nil:BAT,nil:BAT,false,nil:lng);
    X_81:bat[:str] := algebra.projectionpath(r1_133,X_77,X_52);
    X_82:bat[:str] := algebra.projectionpath(X_79,X_68,r1_90,X_55,X_52);
    C_83 := algebra.subselect(X_82,"FRANCE","FRANCE",true,false,false);
    C_84 := algebra.subselect(X_81,C_83,"GERMANY","GERMANY",true,false,false);
    C_85 := algebra.subselect(X_82,"GERMANY","GERMANY",true,false,false);
    C_86 := algebra.subselect(X_81,C_85,"FRANCE","FRANCE",true,false,false);
    X_87 := bat.mergecand(C_84,C_86);
    X_88:bat[:date] := algebra.projectionpath(X_87,X_79,X_68,X_57,X_39,r1_45,C_20,X_19);
    X_89:bat[:int] := batmtime.year(X_88);
    X_90 := algebra.projection(X_87,X_81);
    X_91 := algebra.projection(X_87,X_82);
    (X_92,r1_165,r2_165) := group.subgroup(X_91);
    (X_95,r1_168,r2_168) := group.subgroup(X_90,X_92);
    (X_98,r1_171,r2_171) := group.subgroupdone(X_89,X_95);
    X_101 := algebra.projection(r1_171,X_89);
    X_102 := algebra.projection(r1_171,X_90);
    X_103 := algebra.projection(r1_171,X_91);
    X_116:bat[:lng] := sql.bind(X_5,"sys","lineitem","l_extendedprice",0);
    X_118:bat[:lng] := algebra.projectionpath(X_87,X_79,X_68,X_57,X_39,r1_45,C_20,C_15,X_116);
    X_119:bat[:lng] := sql.bind(X_5,"sys","lineitem","l_discount",0);
    X_121:bat[:lng] := algebra.projectionpath(X_87,X_79,X_68,X_57,X_39,r1_45,C_20,C_15,X_119);
    X_122:bat[:lng] := batcalc.-(100:lng,X_121);
    X_123:bat[:hge] := batcalc.*(X_118,X_122);
    X_124:bat[:hge] := aggr.subsum(X_123,X_98,r1_171,true,true);
    (X_104,r1_177,r2_177) := algebra.subsort(X_103,false,false);
    (X_107,r1_182,r2_182) := algebra.subsort(X_102,r1_177,r2_177,false,false);
    (X_110,r1_185,r2_185) := algebra.subsort(X_101,r1_182,r2_182,false,false);
    X_113 := algebra.projection(r1_185,X_103);
    X_114 := algebra.projection(r1_185,X_102);
    X_115 := algebra.projection(r1_185,X_101);
    X_125 := algebra.projection(r1_185,X_124);
    sql.resultSet(X_158,X_160,X_162,X_164,X_166,X_113,X_114,X_115,X_125);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

