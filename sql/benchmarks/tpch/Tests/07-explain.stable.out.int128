stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 988 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:date,A6:date):void;
    X_221:void := querylog.define("explain select\n\tsupp_nation,\n\tcust_nation,\n\tl_year,\n\tsum(volume) as revenue\nfrom\n\t(\n\t\tselect\n\t\t\tn1.n_name as supp_nation,\n\t\t\tn2.n_name as cust_nation,\n\t\t\textract(year from l_shipdate) as l_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume\n\t\tfrom\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand c_custkey = o_custkey\n\t\t\tand s_nationkey = n1.n_nationkey\n\t\t\tand c_nationkey = n2.n_nationkey\n\t\t\tand (\n\t\t\t\t(n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n\t\t\t\tor (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n\t\t\t)\n\t\t\tand l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t) as shipping\ngroup by\n\tsupp_nation,\n\tcust_nation,\n\tl_year\norder by\n\tsupp_nation,\n\tcust_nation,\n\tl_year;","sequential_pipe",129);
    X_179 := bat.new(nil:oid,nil:str);
    X_187 := bat.append(X_179,"sys.shipping");
    X_197 := bat.append(X_187,"sys.shipping");
    X_203 := bat.append(X_197,"sys.shipping");
    X_211 := bat.append(X_203,"sys.L1");
    X_182 := bat.new(nil:oid,nil:str);
    X_189 := bat.append(X_182,"supp_nation");
    X_198 := bat.append(X_189,"cust_nation");
    X_204 := bat.append(X_198,"l_year");
    X_213 := bat.append(X_204,"revenue");
    X_183 := bat.new(nil:oid,nil:str);
    X_191 := bat.append(X_183,"char");
    X_200 := bat.append(X_191,"char");
    X_206 := bat.append(X_200,"int");
    X_215 := bat.append(X_206,"decimal");
    X_184 := bat.new(nil:oid,nil:int);
    X_193 := bat.append(X_184,25);
    X_201 := bat.append(X_193,25);
    X_208 := bat.append(X_201,32);
    X_217 := bat.append(X_208,39);
    X_186 := bat.new(nil:oid,nil:int);
    X_195 := bat.append(X_186,0);
    X_202 := bat.append(X_195,0);
    X_210 := bat.append(X_202,0);
    X_219 := bat.append(X_210,4);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_13:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (X_16,r1_16) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_19:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_21 := sql.delta(X_13,X_16,r1_16,X_19);
    X_22 := algebra.leftfetchjoin(X_10,X_21);
    X_23:bat[:oid,:oid] := sql.tid(X_9,"sys","lineitem");
    X_25:bat[:oid,:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    (X_27,r1_27) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    X_29:bat[:oid,:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    X_30 := sql.delta(X_25,X_27,r1_27,X_29);
    X_31 := algebra.leftfetchjoin(X_23,X_30);
    X_32 := algebra.subselect(X_31,A5,A6,true,true,false);
    X_34:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (X_36,r1_38) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_38:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_39 := sql.delta(X_34,X_36,r1_38,X_38);
    X_40:bat[:oid,:int] := algebra.leftfetchjoinPath(X_32,X_23,X_39);
    (X_41,r1_44) := algebra.subjoin(X_22,X_40,nil:BAT,nil:BAT,false,nil:lng);
    X_46:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_48,r1_51) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_50:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_51 := sql.delta(X_46,X_48,r1_51,X_50);
    X_52:bat[:oid,:oid] := algebra.leftfetchjoinPath(r1_44,X_32,X_23,X_51);
    X_53:bat[:oid,:oid] := sql.tid(X_9,"sys","orders");
    (X_55,r1_60) := algebra.subjoin(X_52,X_53,nil:BAT,nil:BAT,false,nil:lng);
    X_57:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_59,r1_64) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_61:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_62 := sql.delta(X_57,X_59,r1_64,X_61);
    X_63:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_55,X_41,X_10,X_62);
    X_64:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    X_66:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (X_68,r1_75) := sql.bind(X_9,"sys","nation","n_name",2);
    X_70:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_71 := sql.delta(X_66,X_68,r1_75,X_70);
    X_72 := algebra.leftfetchjoin(X_64,X_71);
    X_73 := algebra.subselect(X_72,A1,A1,true,true,false);
    X_77 := algebra.subselect(X_72,A3,A3,true,true,false);
    X_78 := bat.mergecand(X_73,X_77);
    X_79 := algebra.leftfetchjoin(X_78,X_64);
    (X_80,r1_89) := algebra.subjoin(X_63,X_79,nil:BAT,nil:BAT,false,nil:lng);
    X_85:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_87,r1_96) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_89:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_90 := sql.delta(X_85,X_87,r1_96,X_89);
    X_91:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_80,r1_60,X_53,X_90);
    X_92:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_94,r1_105) := algebra.subjoin(X_91,X_92,nil:BAT,nil:BAT,false,nil:lng);
    X_96:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_98,r1_109) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_100:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_101 := sql.delta(X_96,X_98,r1_109,X_100);
    X_102:bat[:oid,:oid] := algebra.leftfetchjoinPath(r1_105,X_92,X_101);
    X_103:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    X_105 := algebra.leftfetchjoin(X_103,X_71);
    X_106 := algebra.subselect(X_105,A2,A2,true,true,false);
    X_110 := algebra.subselect(X_105,A4,A4,true,true,false);
    X_111 := bat.mergecand(X_106,X_110);
    X_112 := algebra.leftfetchjoin(X_111,X_103);
    (X_113,r1_132) := algebra.subjoin(X_102,X_112,nil:BAT,nil:BAT,false,nil:lng);
    X_118:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_132,X_111,X_105);
    X_119:bat[:oid,:str] := algebra.leftfetchjoinPath(X_113,X_94,r1_89,X_78,X_72);
    X_120 := algebra.subselect(X_119,A1,A1,true,true,false);
    X_121 := algebra.subselect(X_118,X_120,A2,A2,true,true,false);
    X_122 := algebra.subselect(X_119,A3,A3,true,true,false);
    X_123 := algebra.subselect(X_118,X_122,A4,A4,true,true,false);
    X_124 := bat.mergecand(X_121,X_123);
    X_125:bat[:oid,:date] := algebra.leftfetchjoinPath(X_124,X_113,X_94,X_80,X_55,r1_44,X_32,X_31);
    X_126:bat[:oid,:int] := batmtime.year(X_125);
    X_127 := algebra.leftfetchjoin(X_124,X_118);
    X_128 := algebra.leftfetchjoin(X_124,X_119);
    (X_129,r1_164,r2_164) := group.subgroup(X_128);
    (X_132,r1_167,r2_167) := group.subgroup(X_127,X_129);
    (X_135,r1_170,r2_170) := group.subgroupdone(X_126,X_132);
    X_138 := algebra.leftfetchjoin(r1_170,X_126);
    X_139 := algebra.leftfetchjoin(r1_170,X_127);
    X_140 := algebra.leftfetchjoin(r1_170,X_128);
    X_155:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_157,r1_192) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_159:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_160 := sql.delta(X_155,X_157,r1_192,X_159);
    X_161:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_124,X_113,X_94,X_80,X_55,r1_44,X_32,X_23,X_160);
    X_163 := calc.lng(A0,15,2);
    X_165:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_167,r1_214) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_169:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_170 := sql.delta(X_165,X_167,r1_214,X_169);
    X_171:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_124,X_113,X_94,X_80,X_55,r1_44,X_32,X_23,X_170);
    X_172:bat[:oid,:lng] := batcalc.-(X_163,X_171);
    X_173:bat[:oid,:hge] := batcalc.*(X_161,X_172);
    X_174:bat[:oid,:hge] := aggr.subsum(X_173,X_135,r1_170,true,true);
    (X_141,r1_176,r2_176) := algebra.subsort(X_140,false,false);
    (X_146,r1_181,r2_181) := algebra.subsort(X_139,r1_176,r2_176,false,false);
    (X_149,r1_184,r2_184) := algebra.subsort(X_138,r1_181,r2_181,false,false);
    X_152 := algebra.leftfetchjoin(r1_184,X_140);
    X_153 := algebra.leftfetchjoin(r1_184,X_139);
    X_154 := algebra.leftfetchjoin(r1_184,X_138);
    X_177 := algebra.leftfetchjoin(r1_184,X_174);
    sql.resultSet(X_211,X_213,X_215,X_217,X_219,X_152,X_153,X_154,X_177);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

