stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 863 # length
function user.s4_1():void;
    X_191:void := querylog.define("explain select\n supp_nation,\n cust_nation,\n l_year,\n sum(volume) as revenue\nfrom\n (\n select\n n1.n_name as supp_nation,\n n2.n_name as cust_nation,\n extract(year from l_shipdate) as l_year,\n l_extendedprice * (1 - l_discount) as volume\n from\n supplier,\n lineitem,\n orders,\n customer,\n nation n1,\n nation n2\n where\n s_suppkey = l_suppkey\n and o_orderkey = l_orderkey\n and c_custkey = o_custkey\n and s_nationkey = n1.n_nationkey\n and c_nationkey = n2.n_nationkey\n and (\n (n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n or (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n )\n and l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n ) as shipping\ngroup by\n supp_nation,\n cust_nation,\n l_year\norder by\n supp_nation,\n cust_nation,\n l_year;","sequential_pipe",124);
    X_151 := bat.new(nil:str);
    X_158 := bat.append(X_151,"sys.shipping");
    X_167 := bat.append(X_158,"sys.shipping");
    X_173 := bat.append(X_167,"sys.shipping");
    X_181 := bat.append(X_173,"sys.L1");
    X_153 := bat.new(nil:str);
    X_160 := bat.append(X_153,"supp_nation");
    X_168 := bat.append(X_160,"cust_nation");
    X_174 := bat.append(X_168,"l_year");
    X_183 := bat.append(X_174,"revenue");
    X_154 := bat.new(nil:str);
    X_162 := bat.append(X_154,"char");
    X_170 := bat.append(X_162,"char");
    X_176 := bat.append(X_170,"int");
    X_185 := bat.append(X_176,"decimal");
    X_155 := bat.new(nil:int);
    X_164 := bat.append(X_155,25);
    X_171 := bat.append(X_164,25);
    X_178 := bat.append(X_171,32);
    X_187 := bat.append(X_178,39);
    X_157 := bat.new(nil:int);
    X_166 := bat.append(X_157,0);
    X_172 := bat.append(X_166,0);
    X_180 := bat.append(X_172,0);
    X_189 := bat.append(X_180,4);
    X_5 := sql.mvc();
    C_6:bat[:oid] := sql.tid(X_5,"sys","supplier");
    X_9:bat[:int] := sql.bind(X_5,"sys","supplier","s_suppkey",0);
    (C_12,r1_15) := sql.bind(X_5,"sys","supplier","s_suppkey",2);
    X_15:bat[:int] := sql.bind(X_5,"sys","supplier","s_suppkey",1);
    X_17 := sql.delta(X_9,C_12,r1_15,X_15);
    X_18 := algebra.projection(C_6,X_17);
    C_19:bat[:oid] := sql.tid(X_5,"sys","lineitem");
    X_21:bat[:date] := sql.bind(X_5,"sys","lineitem","l_shipdate",0);
    (C_23,r1_26) := sql.bind(X_5,"sys","lineitem","l_shipdate",2);
    X_25:bat[:date] := sql.bind(X_5,"sys","lineitem","l_shipdate",1);
    X_26 := sql.delta(X_21,C_23,r1_26,X_25);
    X_27 := algebra.projection(C_19,X_26);
    C_28 := algebra.subselect(X_27,"1995-01-01","1996-12-31",true,true,false);
    X_31:bat[:int] := sql.bind(X_5,"sys","lineitem","l_suppkey",0);
    (C_33,r1_39) := sql.bind(X_5,"sys","lineitem","l_suppkey",2);
    X_35:bat[:int] := sql.bind(X_5,"sys","lineitem","l_suppkey",1);
    X_36 := sql.delta(X_31,C_33,r1_39,X_35);
    X_37:bat[:int] := algebra.projectionpath(C_28,C_19,X_36);
    (X_38,r1_45) := algebra.subjoin(X_18,X_37,nil:BAT,nil:BAT,false,nil:lng);
    X_42:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_44,r1_52) := sql.bind_idxbat(X_5,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_46:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_47 := sql.delta(X_42,X_44,r1_52,X_46);
    X_48:bat[:oid] := algebra.projectionpath(r1_45,C_28,C_19,X_47);
    C_49:bat[:oid] := sql.tid(X_5,"sys","orders");
    (X_51,r1_61) := algebra.subjoin(X_48,C_49,nil:BAT,nil:BAT,false,nil:lng);
    X_53:bat[:oid] := sql.bind_idxbat(X_5,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_55,r1_65) := sql.bind_idxbat(X_5,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_57:bat[:oid] := sql.bind_idxbat(X_5,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_58 := sql.delta(X_53,X_55,r1_65,X_57);
    X_59:bat[:oid] := algebra.projectionpath(X_51,X_38,C_6,X_58);
    C_60:bat[:oid] := sql.tid(X_5,"sys","nation");
    X_62:bat[:str] := sql.bind(X_5,"sys","nation","n_name",0);
    (C_64,r1_76) := sql.bind(X_5,"sys","nation","n_name",2);
    X_66:bat[:str] := sql.bind(X_5,"sys","nation","n_name",1);
    X_67 := sql.delta(X_62,C_64,r1_76,X_66);
    X_68 := algebra.projection(C_60,X_67);
    C_69 := algebra.subselect(X_68,"FRANCE","FRANCE",true,false,false);
    C_70 := algebra.subselect(X_68,"GERMANY","GERMANY",true,false,false);
    X_71 := bat.mergecand(C_69,C_70);
    X_72 := algebra.projection(X_71,C_60);
    (X_73,r1_90) := algebra.subjoin(X_59,X_72,nil:BAT,nil:BAT,false,nil:lng);
    X_75:bat[:oid] := sql.bind_idxbat(X_5,"sys","orders","orders_o_custkey_fkey",0);
    (X_77,r1_97) := sql.bind_idxbat(X_5,"sys","orders","orders_o_custkey_fkey",2);
    X_79:bat[:oid] := sql.bind_idxbat(X_5,"sys","orders","orders_o_custkey_fkey",1);
    X_80 := sql.delta(X_75,X_77,r1_97,X_79);
    X_81:bat[:oid] := algebra.projectionpath(X_73,r1_61,C_49,X_80);
    C_82:bat[:oid] := sql.tid(X_5,"sys","customer");
    (X_84,r1_106) := algebra.subjoin(X_81,C_82,nil:BAT,nil:BAT,false,nil:lng);
    X_86:bat[:oid] := sql.bind_idxbat(X_5,"sys","customer","customer_c_nationkey_fkey",0);
    (X_88,r1_110) := sql.bind_idxbat(X_5,"sys","customer","customer_c_nationkey_fkey",2);
    X_90:bat[:oid] := sql.bind_idxbat(X_5,"sys","customer","customer_c_nationkey_fkey",1);
    X_91 := sql.delta(X_86,X_88,r1_110,X_90);
    X_92:bat[:oid] := algebra.projectionpath(r1_106,C_82,X_91);
    X_93 := bat.mergecand(C_70,C_69);
    X_94 := algebra.projection(X_93,C_60);
    (X_95,r1_133) := algebra.subjoin(X_92,X_94,nil:BAT,nil:BAT,false,nil:lng);
    X_97:bat[:str] := algebra.projectionpath(r1_133,X_93,X_68);
    X_98:bat[:str] := algebra.projectionpath(X_95,X_84,r1_90,X_71,X_68);
    C_99 := algebra.subselect(X_98,"FRANCE","FRANCE",true,false,false);
    C_100 := algebra.subselect(X_97,C_99,"GERMANY","GERMANY",true,false,false);
    C_101 := algebra.subselect(X_98,"GERMANY","GERMANY",true,false,false);
    C_102 := algebra.subselect(X_97,C_101,"FRANCE","FRANCE",true,false,false);
    X_103 := bat.mergecand(C_100,C_102);
    X_104:bat[:date] := algebra.projectionpath(X_103,X_95,X_84,X_73,X_51,r1_45,C_28,X_27);
    X_105:bat[:int] := batmtime.year(X_104);
    X_106 := algebra.projection(X_103,X_97);
    X_107 := algebra.projection(X_103,X_98);
    (X_108,r1_165,r2_165) := group.subgroup(X_107);
    (X_111,r1_168,r2_168) := group.subgroup(X_106,X_108);
    (X_114,r1_171,r2_171) := group.subgroupdone(X_105,X_111);
    X_117 := algebra.projection(r1_171,X_105);
    X_118 := algebra.projection(r1_171,X_106);
    X_119 := algebra.projection(r1_171,X_107);
    X_132:bat[:lng] := sql.bind(X_5,"sys","lineitem","l_extendedprice",0);
    (C_134,r1_193) := sql.bind(X_5,"sys","lineitem","l_extendedprice",2);
    X_136:bat[:lng] := sql.bind(X_5,"sys","lineitem","l_extendedprice",1);
    X_137 := sql.delta(X_132,C_134,r1_193,X_136);
    X_138:bat[:lng] := algebra.projectionpath(X_103,X_95,X_84,X_73,X_51,r1_45,C_28,C_19,X_137);
    X_139:bat[:lng] := sql.bind(X_5,"sys","lineitem","l_discount",0);
    (C_141,r1_215) := sql.bind(X_5,"sys","lineitem","l_discount",2);
    X_143:bat[:lng] := sql.bind(X_5,"sys","lineitem","l_discount",1);
    X_144 := sql.delta(X_139,C_141,r1_215,X_143);
    X_145:bat[:lng] := algebra.projectionpath(X_103,X_95,X_84,X_73,X_51,r1_45,C_28,C_19,X_144);
    X_146:bat[:lng] := batcalc.-(100:lng,X_145);
    X_147:bat[:hge] := batcalc.*(X_138,X_146);
    X_148:bat[:hge] := aggr.subsum(X_147,X_114,r1_171,true,true);
    (X_120,r1_177,r2_177) := algebra.subsort(X_119,false,false);
    (X_123,r1_182,r2_182) := algebra.subsort(X_118,r1_177,r2_177,false,false);
    (X_126,r1_185,r2_185) := algebra.subsort(X_117,r1_182,r2_182,false,false);
    X_129 := algebra.projection(r1_185,X_119);
    X_130 := algebra.projection(r1_185,X_118);
    X_131 := algebra.projection(r1_185,X_117);
    X_149 := algebra.projection(r1_185,X_148);
    sql.resultSet(X_181,X_183,X_185,X_187,X_189,X_129,X_130,X_131,X_149);
end user.s4_1;
#inline               actions= 0 time=6 usec 
#candidates           actions= 1 time=73 usec 
#remap                actions= 4 time=313 usec 
#costModel            actions= 1 time=91 usec 
#coercions            actions= 0 time=55 usec 
#evaluate             actions=12 time=140 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions= 0 time=5 usec 
#aliases              actions=19 time=125 usec 
#mergetable           actions= 0 time=114 usec 
#deadcode             actions=15 time=99 usec 
#aliases              actions= 0 time=17 usec 
#constants            actions=29 time=116 usec 
#commonTerms          actions= 5 time=101 usec 
#projectionpath       actions=32 time=114 usec 
#reorder              actions= 1 time=185 usec 
#deadcode             actions=37 time=103 usec 
#reduce               actions=134 time=152 usec 
#matpack              actions= 0 time=7 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=90 usec 
#garbageCollector     actions= 1 time=102 usec 
#total                actions= 1 time=2106 usec 

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

