stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 988 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:date,A6:date):void;
    X_205:void := querylog.define("explain select\n\tsupp_nation,\n\tcust_nation,\n\tl_year,\n\tsum(volume) as revenue\nfrom\n\t(\n\t\tselect\n\t\t\tn1.n_name as supp_nation,\n\t\t\tn2.n_name as cust_nation,\n\t\t\textract(year from l_shipdate) as l_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume\n\t\tfrom\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand c_custkey = o_custkey\n\t\t\tand s_nationkey = n1.n_nationkey\n\t\t\tand c_nationkey = n2.n_nationkey\n\t\t\tand (\n\t\t\t\t(n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n\t\t\t\tor (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n\t\t\t)\n\t\t\tand l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t) as shipping\ngroup by\n\tsupp_nation,\n\tcust_nation,\n\tl_year\norder by\n\tsupp_nation,\n\tcust_nation,\n\tl_year;","sequential_pipe",108);
    X_9 := sql.mvc();
    X_10:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_13:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (X_16,r1_16) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_19:bat[:oid,:int] := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_21 := sql.delta(X_13,X_16,r1_16,X_19);
    X_22 := algebra.leftfetchjoin(X_10,X_21);
    X_23:bat[:oid,:oid] := sql.tid(X_9,"sys","lineitem");
    X_25:bat[:oid,:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    (X_27,r1_27) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    X_29:bat[:oid,:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    X_30 := sql.delta(X_25,X_27,r1_27,X_29);
    X_31 := algebra.leftfetchjoin(X_23,X_30);
    X_32 := algebra.subselect(X_31,A5,A6,true,true,false);
    X_34:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (X_36,r1_38) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_38:bat[:oid,:int] := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_39 := sql.delta(X_34,X_36,r1_38,X_38);
    X_40:bat[:oid,:int] := algebra.leftfetchjoinPath(X_32,X_23,X_39);
    (X_41,r1_44) := algebra.subjoin(X_22,X_40,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_49,r1_52) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_52:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_54 := sql.delta(X_45,X_49,r1_52,X_52);
    X_55:bat[:oid,:oid] := algebra.leftfetchjoinPath(r1_44,X_32,X_23,X_54);
    X_56:bat[:oid,:oid] := sql.tid(X_9,"sys","orders");
    (X_58,r1_63) := algebra.subjoin(X_55,X_56,nil:BAT,nil:BAT,false,nil:lng);
    X_60:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_63,r1_68) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_65:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_66 := sql.delta(X_60,X_63,r1_68,X_65);
    X_67:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_58,X_41,X_10,X_66);
    X_68:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    X_70:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (X_72,r1_79) := sql.bind(X_9,"sys","nation","n_name",2);
    X_74:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_76 := sql.delta(X_70,X_72,r1_79,X_74);
    X_77 := algebra.leftfetchjoin(X_68,X_76);
    X_78 := algebra.subselect(X_77,A1,A1,true,true,false);
    X_81 := algebra.subselect(X_77,A3,A3,true,true,false);
    X_82 := bat.mergecand(X_78,X_81);
    X_83 := algebra.leftfetchjoin(X_82,X_68);
    (X_84,r1_93) := algebra.subjoin(X_67,X_83,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_92,r1_101) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_95:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_97 := sql.delta(X_88,X_92,r1_101,X_95);
    X_98:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_84,r1_63,X_56,X_97);
    X_99:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_101,r1_112) := algebra.subjoin(X_98,X_99,nil:BAT,nil:BAT,false,nil:lng);
    X_103:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_106,r1_117) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_108:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_109 := sql.delta(X_103,X_106,r1_117,X_108);
    X_110:bat[:oid,:oid] := algebra.leftfetchjoinPath(r1_112,X_99,X_109);
    X_111 := algebra.subselect(X_77,A2,A2,true,true,false);
    X_114 := algebra.subselect(X_77,A4,A4,true,true,false);
    X_115 := bat.mergecand(X_111,X_114);
    X_116 := algebra.leftfetchjoin(X_115,X_68);
    (X_117,r1_140) := algebra.subjoin(X_110,X_116,nil:BAT,nil:BAT,false,nil:lng);
    X_121:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_140,X_115,X_77);
    X_122:bat[:oid,:str] := algebra.leftfetchjoinPath(X_117,X_101,r1_93,X_82,X_77);
    X_123 := algebra.subselect(X_122,A1,A1,true,true,false);
    X_124 := algebra.subselect(X_121,X_123,A2,A2,true,true,false);
    X_125 := algebra.subselect(X_122,A3,A3,true,true,false);
    X_126 := algebra.subselect(X_121,X_125,A4,A4,true,true,false);
    X_127 := bat.mergecand(X_124,X_126);
    X_128:bat[:oid,:date] := algebra.leftfetchjoinPath(X_127,X_117,X_101,X_84,X_58,r1_44,X_32,X_31);
    X_129:bat[:oid,:int] := batmtime.year(X_128);
    X_130 := algebra.leftfetchjoin(X_127,X_121);
    X_131 := algebra.leftfetchjoin(X_127,X_122);
    (X_132,r1_171,r2_171) := group.subgroup(X_131);
    (X_135,r1_174,r2_174) := group.subgroup(X_130,X_132);
    (X_138,r1_177,r2_177) := group.subgroupdone(X_129,X_135);
    X_141 := algebra.leftfetchjoin(r1_177,X_129);
    X_142 := algebra.leftfetchjoin(r1_177,X_130);
    X_143 := algebra.leftfetchjoin(r1_177,X_131);
    X_157:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (X_162,r1_201) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_165:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_167 := sql.delta(X_157,X_162,r1_201,X_165);
    X_168:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_127,X_117,X_101,X_84,X_58,r1_44,X_32,X_23,X_167);
    X_169 := calc.lng(A0,15,2);
    X_171:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (X_173,r1_224) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_175:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_176 := sql.delta(X_171,X_173,r1_224,X_175);
    X_177:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_127,X_117,X_101,X_84,X_58,r1_44,X_32,X_23,X_176);
    X_178:bat[:oid,:lng] := batcalc.-(X_169,X_177);
    X_179:bat[:oid,:hge] := batcalc.*(X_168,X_178);
    X_180:bat[:oid,:hge] := aggr.subsum(X_179,X_138,r1_177,true,true);
    (X_144,r1_183,r2_183) := algebra.subsort(X_143,false,false);
    (X_148,r1_187,r2_187) := algebra.subsort(X_142,r1_183,r2_183,false,false);
    (X_151,r1_190,r2_190) := algebra.subsort(X_141,r1_187,r2_187,false,false);
    X_154 := algebra.leftfetchjoin(r1_190,X_143);
    X_182 := algebra.leftfetchjoin(r1_190,X_180);
    X_156 := algebra.leftfetchjoin(r1_190,X_141);
    X_155 := algebra.leftfetchjoin(r1_190,X_142);
    X_183 := sql.resultSet(4,1,X_154);
    sql.rsColumn(X_183,"sys.shipping","supp_nation","char",25,0,X_154);
    sql.rsColumn(X_183,"sys.shipping","cust_nation","char",25,0,X_155);
    sql.rsColumn(X_183,"sys.shipping","l_year","int",32,0,X_156);
    sql.rsColumn(X_183,"sys.L1","revenue","decimal",39,4,X_182);
    X_203 := io.stdout();
    sql.exportResult(X_203,X_183);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

