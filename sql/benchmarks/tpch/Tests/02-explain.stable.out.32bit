stdout of test '02-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "02-explain.SQL.py" "02-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_acctbal,
#	s_name,
#	n_name,
#	p_partkey,
#	p_mfgr,
#	s_address,
#	s_phone,
#	s_comment
#from
#	part,
#	supplier,
#	partsupp,
#	nation,
#	region
#where
#	p_partkey = ps_partkey
#	and s_suppkey = ps_suppkey
#	and p_size = 15
#	and p_type like '%BRASS'
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'EUROPE'
#	and ps_supplycost = (
#		select
#			min(ps_supplycost)
#		from
#			partsupp,
#			supplier,
#			nation,
#			region
#		where
#			p_partkey = ps_partkey
#			and s_suppkey = ps_suppkey
#			and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 759 # length
function user.s4_1():void;
    X_433:void := querylog.define("explain select\n s_acctbal,\n s_name,\n n_name,\n p_partkey,\n p_mfgr,\n s_address,\n s_phone,\n s_comment\nfrom\n part,\n supplier,\n partsupp,\n nation,\n region\nwhere\n p_partkey = ps_partkey\n and s_suppkey = ps_suppkey\n and p_size = 15\n and p_type like \\'%BRASS\\'\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'EUROPE\\'\n and ps_supplycost = (\n select\n min(ps_supplycost)\n from\n partsupp,\n supplier,\n nation,\n region\n where\n p_partkey = ps_partkey\n and s_suppkey = ps_suppkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'EUROPE\\'\n )\norder by\n s_acctbal desc,\n n_name,\n s_name,\n p_partkey\nlimit 100;","sequential_pipe",137);
    X_360 := bat.new(nil:str);
    X_367 := bat.append(X_360,"sys.supplier");
    X_377 := bat.append(X_367,"sys.supplier");
    X_386 := bat.append(X_377,"sys.nation");
    X_393 := bat.append(X_386,"sys.part");
    X_402 := bat.append(X_393,"sys.part");
    X_408 := bat.append(X_402,"sys.supplier");
    X_417 := bat.append(X_408,"sys.supplier");
    X_426 := bat.append(X_417,"sys.supplier");
    X_362 := bat.new(nil:str);
    X_369 := bat.append(X_362,"s_acctbal");
    X_378 := bat.append(X_369,"s_name");
    X_388 := bat.append(X_378,"n_name");
    X_395 := bat.append(X_388,"p_partkey");
    X_403 := bat.append(X_395,"p_mfgr");
    X_410 := bat.append(X_403,"s_address");
    X_418 := bat.append(X_410,"s_phone");
    X_427 := bat.append(X_418,"s_comment");
    X_363 := bat.new(nil:str);
    X_371 := bat.append(X_363,"decimal");
    X_380 := bat.append(X_371,"char");
    X_390 := bat.append(X_380,"char");
    X_397 := bat.append(X_390,"int");
    X_405 := bat.append(X_397,"char");
    X_412 := bat.append(X_405,"varchar");
    X_420 := bat.append(X_412,"char");
    X_429 := bat.append(X_420,"varchar");
    X_364 := bat.new(nil:int);
    X_373 := bat.append(X_364,15);
    X_382 := bat.append(X_373,25);
    X_391 := bat.append(X_382,25);
    X_399 := bat.append(X_391,32);
    X_406 := bat.append(X_399,25);
    X_414 := bat.append(X_406,40);
    X_422 := bat.append(X_414,15);
    X_430 := bat.append(X_422,101);
    X_366 := bat.new(nil:int);
    X_375 := bat.append(X_366,2);
    X_384 := bat.append(X_375,0);
    X_392 := bat.append(X_384,0);
    X_401 := bat.append(X_392,0);
    X_407 := bat.append(X_401,0);
    X_416 := bat.append(X_407,0);
    X_424 := bat.append(X_416,0);
    X_432 := bat.append(X_424,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_4:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",0);
    (X_7,r1_12) := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",2);
    X_10:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",1);
    X_13 := sql.projectdelta(C_1,X_4,X_7,r1_12,X_10);
    X_16:bat[:str] := sql.bind(X_0,"sys","region","r_name",0);
    C_14:bat[:oid] := sql.tid(X_0,"sys","region");
    C_24 := algebra.subselect(X_16,C_14,"EUROPE","EUROPE",true,false,false);
    (X_29,r1_34) := algebra.subjoin(X_13,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := algebra.projection(X_29,C_1);
    C_35:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_39,r1_44) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_43 := sql.projectdelta(C_35,X_37,X_39,r1_44,X_41);
    (X_44,r1_49) := algebra.subjoin(X_34,X_43,nil:BAT,nil:BAT,false,nil:lng);
    X_46 := algebra.projection(r1_49,C_35);
    C_47:bat[:oid] := sql.tid(X_0,"sys","partsupp");
    X_49:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_suppkey_fkey",0);
    (X_51,r1_56) := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_suppkey_fkey",2);
    X_53:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_suppkey_fkey",1);
    X_55 := sql.projectdelta(C_47,X_49,X_51,r1_56,X_53);
    (X_56,r1_61) := algebra.subjoin(X_46,X_55,nil:BAT,nil:BAT,false,nil:lng);
    X_58:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_partkey",0);
    X_65:bat[:int] := algebra.projectionpath(r1_61,C_47,X_58);
    X_67:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_fkey",0);
    (X_69,r1_74) := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_fkey",2);
    X_71:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_fkey",1);
    X_73 := sql.projectdelta(C_47,X_67,X_69,r1_74,X_71);
    X_76:bat[:int] := sql.bind(X_0,"sys","part","p_size",0);
    X_84:bat[:str] := sql.bind(X_0,"sys","part","p_type",0);
    C_74:bat[:oid] := sql.tid(X_0,"sys","part");
    C_94 := algebra.likesubselect(X_84,C_74,"%BRASS","",false);
    C_97 := algebra.subselect(X_76,C_94,15,15,true,false,false);
    (X_100,r1_105) := algebra.subjoin(X_73,C_97,nil:BAT,nil:BAT,false,nil:lng);
    X_109 := algebra.projection(X_100,X_55);
    (X_112,r1_117) := algebra.subjoin(X_109,C_35,nil:BAT,nil:BAT,false,nil:lng);
    X_120 := algebra.projection(r1_117,X_43);
    (X_123,r1_128) := algebra.subjoin(X_120,C_1,nil:BAT,nil:BAT,false,nil:lng);
    X_131 := algebra.projection(r1_128,X_13);
    (X_146,r1_151) := algebra.subjoin(X_131,C_24,nil:BAT,nil:BAT,false,nil:lng);
    X_151:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_162:bat[:int] := algebra.projectionpath(X_146,X_123,X_112,r1_105,C_97,X_151);
    (X_163,r1_168) := algebra.subjoin(X_65,X_162,nil:BAT,nil:BAT,false,nil:lng);
    X_165:bat[:oid] := batcalc.identity(X_162);
    X_168 := algebra.projection(r1_168,X_165);
    (X_169,r1_174,r2_174) := group.subgroupdone(X_168);
    X_172:bat[:lng] := sql.bind(X_0,"sys","partsupp","ps_supplycost",0);
    X_178 := algebra.projection(C_47,X_172);
    X_184:bat[:lng] := algebra.projectionpath(r1_174,r1_168,X_146,X_123,X_112,X_100,X_178);
    X_192:bat[:lng] := algebra.projectionpath(X_163,r1_61,X_178);
    X_193:bat[:lng] := aggr.submin(X_192,X_169,r1_174,true);
    X_195:bat[:bit] := batcalc.==(X_184,X_193);
    C_197 := algebra.subselect(X_195,true,true,true,true,false);
    X_201:bat[:int] := algebra.projectionpath(C_197,r1_174,r1_168,X_162);
    X_202:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",0);
    X_214:bat[:str] := algebra.projectionpath(C_197,r1_174,r1_168,X_146,X_123,r1_117,C_35,X_202);
    X_215:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_226:bat[:str] := algebra.projectionpath(C_197,r1_174,r1_168,X_146,r1_128,C_1,X_215);
    X_227:bat[:lng] := sql.bind(X_0,"sys","supplier","s_acctbal",0);
    X_239:bat[:lng] := algebra.projectionpath(C_197,r1_174,r1_168,X_146,X_123,r1_117,C_35,X_227);
    X_293:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",0);
    (C_245,r1_250) := algebra.firstn(X_239,100,false,false);
    (C_251,r1_256) := algebra.firstn(X_226,C_245,r1_250,100,true,false);
    (C_256,r1_261) := algebra.firstn(X_214,C_251,r1_256,100,true,false);
    C_260 := algebra.firstn(X_201,C_256,r1_261,100,true,false);
    X_261 := algebra.projection(C_260,X_201);
    X_262 := algebra.projection(C_260,X_214);
    X_263 := algebra.projection(C_260,X_226);
    X_264 := algebra.projection(C_260,X_239);
    (X_265,r1_270,r2_270) := algebra.subsort(X_264,true,false);
    (X_268,r1_273,r2_273) := algebra.subsort(X_263,r1_270,r2_270,false,false);
    (X_271,r1_276,r2_276) := algebra.subsort(X_262,r1_273,r2_273,false,false);
    (X_274,r1_279,r2_279) := algebra.subsort(X_261,r1_276,r2_276,false,false);
    X_277 := algebra.projection(r1_279,X_264);
    X_285 := algebra.subslice(X_277,0,99:lng);
    X_310:bat[:str] := algebra.projectionpath(X_285,r1_279,C_260,C_197,r1_174,r1_168,X_146,X_123,X_112,r1_105,C_97,X_293);
    X_311:bat[:str] := sql.bind(X_0,"sys","supplier","s_address",0);
    X_326:bat[:str] := algebra.projectionpath(X_285,r1_279,C_260,C_197,r1_174,r1_168,X_146,X_123,r1_117,C_35,X_311);
    X_327:bat[:str] := sql.bind(X_0,"sys","supplier","s_phone",0);
    X_342:bat[:str] := algebra.projectionpath(X_285,r1_279,C_260,C_197,r1_174,r1_168,X_146,X_123,r1_117,C_35,X_327);
    X_343:bat[:str] := sql.bind(X_0,"sys","supplier","s_comment",0);
    X_358:bat[:str] := algebra.projectionpath(X_285,r1_279,C_260,C_197,r1_174,r1_168,X_146,X_123,r1_117,C_35,X_343);
    X_286 := algebra.projection(X_285,X_277);
    X_288:bat[:str] := algebra.projectionpath(X_285,r1_279,X_262);
    X_290:bat[:str] := algebra.projectionpath(X_285,r1_279,X_263);
    X_292:bat[:int] := algebra.projectionpath(X_285,r1_279,X_261);
    sql.resultSet(X_426,X_427,X_429,X_430,X_432,X_286,X_288,X_290,X_292,X_310,X_326,X_342,X_358);
end user.s4_1;
#inline               actions= 0 time=9 usec 
#remap                actions= 2 time=70 usec 
#costmodel            actions= 1 time=9 usec 
#coercion             actions= 8 time=68 usec 
#evaluate             actions=10 time=106 usec 
#emptybind            actions=45 time=152 usec 
#pushselect           actions=19 time=139 usec 
#aliases              actions=34 time=53 usec 
#mergetable           actions= 0 time=240 usec 
#deadcode             actions=52 time=44 usec 
#aliases              actions= 0 time=33 usec 
#constants            actions=49 time=78 usec 
#commonTerms          actions=20 time=81 usec 
#projectionpath       actions=70 time=159 usec 
#reorder              actions= 1 time=215 usec 
#deadcode             actions=90 time=44 usec 
#reduce               actions=281 time=71 usec 
#matpack              actions= 0 time=7 usec 
#multiplex            actions= 0 time=6 usec 
#profiler             actions= 1 time=15 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=75 usec 
#total                actions= 1 time=2108 usec 

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

