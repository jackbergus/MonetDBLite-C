stdout of test '10-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "10-explain.SQL.py" "10-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_custkey,
#	c_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue,
#	c_acctbal,
#	n_name,
#	c_address,
#	c_phone,
#	c_comment
#from
#	customer,
#	orders,
#	lineitem,
#	nation
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and o_orderdate >= date '1993-10-01'
#	and o_orderdate < date '1993-10-01' + interval '3' month
#	and l_returnflag = 'R'
#	and c_nationkey = n_nationkey
#group by
#	c_custkey,
#	c_name,
#	c_acctbal,
#	c_phone,
#	n_name,
#	c_address,
#	c_comment
#order by
#	revenue desc
#limit 20;
% .explain # table_name
% mal # name
% clob # type
% 619 # length
function user.s2_1():void;
    X_171:void := querylog.define("explain select\n c_custkey,\n c_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue,\n c_acctbal,\n n_name,\n c_address,\n c_phone,\n c_comment\nfrom\n customer,\n orders,\n lineitem,\n nation\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and o_orderdate >= date \\'1993-10-01\\'\n and o_orderdate < date \\'1993-10-01\\' + interval \\'3\\' month\n and l_returnflag = \\'R\\'\n and c_nationkey = n_nationkey\ngroup by\n c_custkey,\n c_name,\n c_acctbal,\n c_phone,\n n_name,\n c_address,\n c_comment\norder by\n revenue desc\nlimit 20;","sequential_pipe",111);
    X_109 := bat.new(nil:oid,nil:str);
    X_117 := bat.append(X_109,"sys.customer");
    X_125 := bat.append(X_117,"sys.customer");
    X_132 := bat.append(X_125,"sys.L1");
    X_142 := bat.append(X_132,"sys.customer");
    X_147 := bat.append(X_142,"sys.nation");
    X_154 := bat.append(X_147,"sys.customer");
    X_160 := bat.append(X_154,"sys.customer");
    X_165 := bat.append(X_160,"sys.customer");
    X_112 := bat.new(nil:oid,nil:str);
    X_119 := bat.append(X_112,"c_custkey");
    X_126 := bat.append(X_119,"c_name");
    X_134 := bat.append(X_126,"revenue");
    X_143 := bat.append(X_134,"c_acctbal");
    X_149 := bat.append(X_143,"n_name");
    X_155 := bat.append(X_149,"c_address");
    X_161 := bat.append(X_155,"c_phone");
    X_166 := bat.append(X_161,"c_comment");
    X_113 := bat.new(nil:oid,nil:str);
    X_120 := bat.append(X_113,"int");
    X_127 := bat.append(X_120,"varchar");
    X_136 := bat.append(X_127,"decimal");
    X_144 := bat.append(X_136,"decimal");
    X_150 := bat.append(X_144,"char");
    X_156 := bat.append(X_150,"varchar");
    X_162 := bat.append(X_156,"char");
    X_167 := bat.append(X_162,"varchar");
    X_114 := bat.new(nil:oid,nil:int);
    X_122 := bat.append(X_114,32);
    X_129 := bat.append(X_122,25);
    X_138 := bat.append(X_129,39);
    X_145 := bat.append(X_138,15);
    X_152 := bat.append(X_145,25);
    X_157 := bat.append(X_152,40);
    X_163 := bat.append(X_157,15);
    X_168 := bat.append(X_163,117);
    X_116 := bat.new(nil:oid,nil:int);
    X_124 := bat.append(X_116,0);
    X_131 := bat.append(X_124,0);
    X_140 := bat.append(X_131,4);
    X_146 := bat.append(X_140,2);
    X_153 := bat.append(X_146,0);
    X_159 := bat.append(X_153,0);
    X_164 := bat.append(X_159,0);
    X_170 := bat.append(X_164,0);
    X_4 := sql.mvc();
    X_8:bat[:str] := sql.bind(X_4,"sys","lineitem","l_returnflag",0);
    C_5:bat[:oid] := sql.tid(X_4,"sys","lineitem");
    C_13 := algebra.subselect(X_8,C_5,"R","R",true,false,false);
    X_16:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_18,r1_27) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_20:bat[:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_21 := sql.projectdelta(C_13,X_16,X_18,r1_27,X_20);
    X_24:bat[:date] := sql.bind(X_4,"sys","orders","o_orderdate",0);
    C_22:bat[:oid] := sql.tid(X_4,"sys","orders");
    X_26:date := mtime.addmonths("1993-10-01",3);
    C_27 := algebra.subselect(X_24,C_22,"1993-10-01",X_26,true,false,false);
    (X_28,r1_48) := algebra.subjoin(X_21,C_27,nil:BAT,nil:BAT,false,nil:lng);
    X_32:bat[:oid] := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",0);
    (X_34,r1_55) := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",2);
    X_36:bat[:oid] := sql.bind_idxbat(X_4,"sys","orders","orders_o_custkey_fkey",1);
    X_37 := sql.projectdelta(C_27,X_32,X_34,r1_55,X_36);
    X_38 := algebra.projection(r1_48,X_37);
    C_39:bat[:oid] := sql.tid(X_4,"sys","customer");
    (X_41,r1_64) := algebra.subjoin(X_38,C_39,nil:BAT,nil:BAT,false,nil:lng);
    X_43:bat[:oid] := sql.bind_idxbat(X_4,"sys","customer","customer_c_nationkey_fkey",0);
    (X_45,r1_69) := sql.bind_idxbat(X_4,"sys","customer","customer_c_nationkey_fkey",2);
    X_47:bat[:oid] := sql.bind_idxbat(X_4,"sys","customer","customer_c_nationkey_fkey",1);
    X_48 := sql.projectdelta(C_39,X_43,X_45,r1_69,X_47);
    X_49 := algebra.projection(r1_64,X_48);
    C_50:bat[:oid] := sql.tid(X_4,"sys","nation");
    (X_52,r1_77) := algebra.subjoin(X_49,C_50,nil:BAT,nil:BAT,false,nil:lng);
    X_54:bat[:str] := sql.bind(X_4,"sys","nation","n_name",0);
    X_56:bat[:str] := algebra.projectionpath(r1_77,C_50,X_54);
    X_57:bat[:int] := sql.bind(X_4,"sys","customer","c_custkey",0);
    X_59 := algebra.projection(C_39,X_57);
    X_60:bat[:int] := algebra.projectionpath(X_52,r1_64,X_59);
    (X_61,r1_96,r2_96) := group.subgroup(X_60);
    (X_64,r1_99,r2_99) := group.subgroupdone(X_56,X_61);
    X_67 := algebra.projection(r1_99,X_60);
    X_70:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    X_72:bat[:lng] := algebra.projectionpath(X_52,X_41,X_28,C_13,X_70);
    X_74:bat[:lng] := sql.bind(X_4,"sys","lineitem","l_discount",0);
    X_76:bat[:lng] := algebra.projectionpath(X_52,X_41,X_28,C_13,X_74);
    X_77:bat[:lng] := batcalc.-(100:lng,X_76);
    X_78:bat[:hge] := batcalc.*(X_72,X_77);
    X_79:bat[:hge] := aggr.subsum(X_78,X_64,r1_99,true,true);
    (X_68,r1_111) := algebra.subjoin(X_67,X_59,nil:BAT,nil:BAT,false,nil:lng);
    X_80 := algebra.projection(X_68,X_79);
    C_83 := algebra.firstn(X_80,20,false,false);
    X_84 := algebra.projection(C_83,X_80);
    (X_85,r1_164,r2_164) := algebra.subsort(X_84,true,false);
    X_88:bat[:int] := algebra.projectionpath(r1_164,C_83,X_68,X_67);
    X_89 := algebra.subslice(X_88,0,19:wrd);
    X_98:bat[:str] := algebra.projectionpath(X_89,r1_164,C_83,X_68,r1_99,X_56);
    X_90 := algebra.projection(X_89,X_88);
    X_91:bat[:str] := sql.bind(X_4,"sys","customer","c_name",0);
    X_93:bat[:str] := algebra.projectionpath(X_89,r1_164,C_83,r1_111,C_39,X_91);
    X_94:bat[:hge] := algebra.projectionpath(X_89,r1_164,X_84);
    X_95:bat[:lng] := sql.bind(X_4,"sys","customer","c_acctbal",0);
    X_97:bat[:lng] := algebra.projectionpath(X_89,r1_164,C_83,r1_111,C_39,X_95);
    X_99:bat[:str] := sql.bind(X_4,"sys","customer","c_address",0);
    X_101:bat[:str] := algebra.projectionpath(X_89,r1_164,C_83,r1_111,C_39,X_99);
    X_102:bat[:str] := sql.bind(X_4,"sys","customer","c_phone",0);
    X_104:bat[:str] := algebra.projectionpath(X_89,r1_164,C_83,r1_111,C_39,X_102);
    X_105:bat[:str] := sql.bind(X_4,"sys","customer","c_comment",0);
    X_107:bat[:str] := algebra.projectionpath(X_89,r1_164,C_83,r1_111,C_39,X_105);
    sql.resultSet(X_165,X_166,X_167,X_168,X_170,X_90,X_93,X_94,X_97,X_98,X_101,X_104,X_107);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

