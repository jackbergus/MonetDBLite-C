stdout of test '16-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "16-explain.SQL.py" "16-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#explain select
#	p_brand,
#	p_type,
#	p_size,
#	count(distinct ps_suppkey) as supplier_cnt
#from
#	partsupp,
#	part
#where
#	p_partkey = ps_partkey
#	and p_brand <> 'Brand#45'
#	and p_type not like 'MEDIUM POLISHED%'
#	and p_size in (49, 14, 23, 45, 19, 3, 36, 9)
#	and ps_suppkey not in (
#		select
#			s_suppkey
#		from
#			supplier
#		where
#			s_comment like '%Customer%Complaints%'
#	)
#group by
#	p_brand,
#	p_type,
#	p_size
#order by
#	supplier_cnt desc,
#	p_brand,
#	p_type,
#	p_size;
% .explain # table_name
% mal # name
% clob # type
% 555 # length
function user.s4_1():void;
    X_167:void := querylog.define("explain select\n p_brand,\n p_type,\n p_size,\n count(distinct ps_suppkey) as supplier_cnt\nfrom\n partsupp,\n part\nwhere\n p_partkey = ps_partkey\n and p_brand <> \\'Brand#45\\'\n and p_type not like \\'MEDIUM POLISHED%\\'\n and p_size in (49, 14, 23, 45, 19, 3, 36, 9)\n and ps_suppkey not in (\n select\n s_suppkey\n from\n supplier\n where\n s_comment like \\'%Customer%Complaints%\\'\n )\ngroup by\n p_brand,\n p_type,\n p_size\norder by\n supplier_cnt desc,\n p_brand,\n p_type,\n p_size;","sequential_pipe",100);
    X_128 := bat.new(nil:oid,nil:str);
    X_136 := bat.append(X_128,"sys.part");
    X_144 := bat.append(X_136,"sys.part");
    X_151 := bat.append(X_144,"sys.part");
    X_158 := bat.append(X_151,"sys.L4");
    X_131 := bat.new(nil:oid,nil:str);
    X_138 := bat.append(X_131,"p_brand");
    X_145 := bat.append(X_138,"p_type");
    X_152 := bat.append(X_145,"p_size");
    X_160 := bat.append(X_152,"supplier_cnt");
    X_132 := bat.new(nil:oid,nil:str);
    X_139 := bat.append(X_132,"char");
    X_146 := bat.append(X_139,"varchar");
    X_153 := bat.append(X_146,"int");
    X_162 := bat.append(X_153,"wrd");
    X_133 := bat.new(nil:oid,nil:int);
    X_141 := bat.append(X_133,10);
    X_148 := bat.append(X_141,25);
    X_155 := bat.append(X_148,32);
    X_164 := bat.append(X_155,64);
    X_135 := bat.new(nil:oid,nil:int);
    X_143 := bat.append(X_135,0);
    X_150 := bat.append(X_143,0);
    X_157 := bat.append(X_150,0);
    X_166 := bat.append(X_157,0);
    X_12 := sql.mvc();
    C_13:bat[:oid] := sql.tid(X_12,"sys","partsupp");
    X_16:bat[:int] := sql.bind(X_12,"sys","partsupp","ps_suppkey",0);
    X_21 := algebra.projection(C_13,X_16);
    X_22 := bat.mirror(X_21);
    C_23:bat[:oid] := sql.tid(X_12,"sys","supplier");
    X_25:bat[:str] := sql.bind(X_12,"sys","supplier","s_comment",0);
    X_27 := algebra.projection(C_23,X_25);
    C_29 := algebra.likesubselect(X_27,nil:BAT,"%Customer%Complaints%","",false);
    X_32:bat[:int] := sql.bind(X_12,"sys","supplier","s_suppkey",0);
    X_34:bat[:int] := algebra.projectionpath(C_29,C_23,X_32);
    (X_35,r1_50) := algebra.subjoin(X_21,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_38 := algebra.subdiff(X_22,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_39:bat[:oid] := sql.bind_idxbat(X_12,"sys","partsupp","partsupp_ps_partkey_fkey",0);
    (X_41,r1_56) := sql.bind_idxbat(X_12,"sys","partsupp","partsupp_ps_partkey_fkey",2);
    X_43:bat[:oid] := sql.bind_idxbat(X_12,"sys","partsupp","partsupp_ps_partkey_fkey",1);
    X_44 := sql.delta(X_39,X_41,r1_56,X_43);
    X_45:bat[:oid] := algebra.projectionpath(X_38,C_13,X_44);
    C_46:bat[:oid] := sql.tid(X_12,"sys","part");
    X_48:bat[:int] := sql.bind(X_12,"sys","part","p_size",0);
    X_50 := algebra.projection(C_46,X_48);
    X_51:bat[:str] := sql.bind(X_12,"sys","part","p_type",0);
    X_53 := algebra.projection(C_46,X_51);
    X_54:bat[:str] := sql.bind(X_12,"sys","part","p_brand",0);
    X_56 := algebra.projection(C_46,X_54);
    C_57 := algebra.subselect(X_56,"Brand#45","Brand#45",true,true,true);
    C_59 := algebra.likesubselect(X_53,C_57,"MEDIUM POLISHED%","",true);
    C_60 := algebra.subselect(X_50,C_59,49,49,true,false,false);
    C_61 := algebra.subselect(X_50,C_59,14,14,true,false,false);
    X_62 := bat.mergecand(C_60,C_61);
    C_63 := algebra.subselect(X_50,C_59,23,23,true,false,false);
    X_64 := bat.mergecand(X_62,C_63);
    C_65 := algebra.subselect(X_50,C_59,45,45,true,false,false);
    X_66 := bat.mergecand(X_64,C_65);
    C_67 := algebra.subselect(X_50,C_59,19,19,true,false,false);
    X_68 := bat.mergecand(X_66,C_67);
    C_69 := algebra.subselect(X_50,C_59,3,3,true,false,false);
    X_70 := bat.mergecand(X_68,C_69);
    C_71 := algebra.subselect(X_50,C_59,36,36,true,false,false);
    X_72 := bat.mergecand(X_70,C_71);
    C_73 := algebra.subselect(X_50,C_59,9,9,true,false,false);
    X_74 := bat.mergecand(X_72,C_73);
    X_75 := algebra.projection(X_74,C_46);
    (X_76,r1_119) := algebra.subjoin(X_45,X_75,nil:BAT,nil:BAT,false,nil:lng);
    X_78:bat[:str] := algebra.projectionpath(r1_119,X_74,X_53);
    X_79:bat[:int] := algebra.projectionpath(r1_119,X_74,X_50);
    X_80:bat[:int] := algebra.projectionpath(X_76,X_38,X_21);
    X_81:bat[:str] := algebra.projectionpath(r1_119,X_74,X_56);
    (X_82,r1_132,r2_132) := group.subgroup(X_81);
    (X_85,r1_135,r2_135) := group.subgroup(X_80,X_82);
    (X_88,r1_138,r2_138) := group.subgroup(X_79,X_85);
    (X_91,r1_141,r2_141) := group.subgroupdone(X_78,X_88);
    X_94 := algebra.projection(r1_141,X_78);
    X_95 := algebra.projection(r1_141,X_79);
    X_96 := algebra.projection(r1_141,X_81);
    X_109 := algebra.projection(r1_141,X_80);
    (X_97,r1_147,r2_147) := group.subgroup(X_96);
    (X_100,r1_150,r2_150) := group.subgroup(X_95,X_97);
    (X_103,r1_153,r2_153) := group.subgroupdone(X_94,X_100);
    X_106 := algebra.projection(r1_153,X_95);
    X_107 := algebra.projection(r1_153,X_94);
    X_108 := algebra.projection(r1_153,X_96);
    X_110:bat[:wrd] := aggr.subcount(X_109,X_103,r1_153,true);
    (X_111,r1_162,r2_162) := algebra.subsort(X_110,true,false);
    (X_114,r1_166,r2_166) := algebra.subsort(X_108,r1_162,r2_162,false,false);
    (X_117,r1_169,r2_169) := algebra.subsort(X_107,r1_166,r2_166,false,false);
    (X_120,r1_172,r2_172) := algebra.subsort(X_106,r1_169,r2_169,false,false);
    X_123 := algebra.projection(r1_172,X_108);
    X_124 := algebra.projection(r1_172,X_107);
    X_125 := algebra.projection(r1_172,X_106);
    X_126 := algebra.projection(r1_172,X_110);
    sql.resultSet(X_158,X_160,X_162,X_164,X_166,X_123,X_124,X_125,X_126);
end user.s4_1;
#inline               actions= 0 time=3 usec 
#candidates           actions= 1 time=60 usec 
#remap                actions= 0 time=5 usec 
#costModel            actions= 1 time=54 usec 
#coercions            actions= 2 time=57 usec 
#evaluate             actions=11 time=87 usec 
#emptybind            actions= 0 time=6 usec 
#pushselect           actions= 0 time=3 usec 
#aliases              actions=17 time=73 usec 
#mergetable           actions= 0 time=67 usec 
#deadcode             actions=12 time=56 usec 
#aliases              actions= 0 time=14 usec 
#constants            actions=24 time=69 usec 
#commonTerms          actions= 0 time=17 usec 
#projectionpath       actions= 6 time=55 usec 
#reorder              actions= 1 time=90 usec 
#deadcode             actions= 6 time=49 usec 
#reduce               actions=85 time=92 usec 
#matpack              actions= 0 time=6 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=5 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=44 usec 
#garbageCollector     actions= 1 time=54 usec 
#total                actions= 1 time=1042 usec 

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

