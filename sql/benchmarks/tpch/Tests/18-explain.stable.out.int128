stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 515 # length
function user.s4_1():void;
    X_169:void := querylog.define("explain select\n c_name,\n c_custkey,\n o_orderkey,\n o_orderdate,\n o_totalprice,\n sum(l_quantity)\nfrom\n customer,\n orders,\n lineitem\nwhere\n o_orderkey in (\n select\n l_orderkey\n from\n lineitem\n group by\n l_orderkey having\n sum(l_quantity) > 300\n )\n and c_custkey = o_custkey\n and o_orderkey = l_orderkey\ngroup by\n c_name,\n c_custkey,\n o_orderkey,\n o_orderdate,\n o_totalprice\norder by\n o_totalprice desc,\n o_orderdate\nlimit 100;","sequential_pipe",113);
    X_121 := bat.new(nil:str);
    X_128 := bat.append(X_121,"sys.customer");
    X_136 := bat.append(X_128,"sys.customer");
    X_143 := bat.append(X_136,"sys.orders");
    X_149 := bat.append(X_143,"sys.orders");
    X_155 := bat.append(X_149,"sys.orders");
    X_162 := bat.append(X_155,"sys.L6");
    X_123 := bat.new(nil:str);
    X_130 := bat.append(X_123,"c_name");
    X_137 := bat.append(X_130,"c_custkey");
    X_145 := bat.append(X_137,"o_orderkey");
    X_150 := bat.append(X_145,"o_orderdate");
    X_156 := bat.append(X_150,"o_totalprice");
    X_164 := bat.append(X_156,"L6");
    X_124 := bat.new(nil:str);
    X_131 := bat.append(X_124,"varchar");
    X_138 := bat.append(X_131,"int");
    X_146 := bat.append(X_138,"int");
    X_151 := bat.append(X_146,"date");
    X_157 := bat.append(X_151,"decimal");
    X_166 := bat.append(X_157,"decimal");
    X_125 := bat.new(nil:int);
    X_133 := bat.append(X_125,25);
    X_140 := bat.append(X_133,32);
    X_147 := bat.append(X_140,32);
    X_153 := bat.append(X_147,0);
    X_159 := bat.append(X_153,15);
    X_167 := bat.append(X_159,39);
    X_127 := bat.new(nil:int);
    X_135 := bat.append(X_127,0);
    X_142 := bat.append(X_135,0);
    X_148 := bat.append(X_142,0);
    X_154 := bat.append(X_148,0);
    X_161 := bat.append(X_154,2);
    X_168 := bat.append(X_161,2);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","orders");
    X_5:bat[:int] := sql.bind(X_1,"sys","orders","o_orderkey",0);
    (C_8,r1_9) := sql.bind(X_1,"sys","orders","o_orderkey",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","orders","o_orderkey",1);
    X_13 := sql.delta(X_5,C_8,r1_9,X_11);
    X_14 := algebra.projection(C_2,X_13);
    X_15 := bat.mirror(X_14);
    C_16:bat[:oid] := sql.tid(X_1,"sys","lineitem");
    X_18:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_quantity",0);
    (C_20,r1_21) := sql.bind(X_1,"sys","lineitem","l_quantity",2);
    X_22:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_quantity",1);
    X_23 := sql.delta(X_18,C_20,r1_21,X_22);
    X_24 := algebra.projection(C_16,X_23);
    X_25:bat[:int] := sql.bind(X_1,"sys","lineitem","l_orderkey",0);
    (C_27,r1_28) := sql.bind(X_1,"sys","lineitem","l_orderkey",2);
    X_29:bat[:int] := sql.bind(X_1,"sys","lineitem","l_orderkey",1);
    X_30 := sql.delta(X_25,C_27,r1_28,X_29);
    X_31 := algebra.projection(C_16,X_30);
    (X_32,r1_33,r2_33) := group.subgroupdone(X_31);
    X_35:bat[:hge] := aggr.subsum(X_24,X_32,r1_33,true,true);
    X_40 := algebra.projection(r1_33,X_31);
    C_38 := algebra.thetasubselect(X_35,30000:hge,">");
    X_41 := bat.setKey(X_40,true);
    X_42 := algebra.projection(C_38,X_41);
    (X_43,r1_47) := algebra.subjoin(X_14,X_42,nil:BAT,nil:BAT,false,nil:lng);
    C_48 := algebra.subinter(X_15,X_43,nil:BAT,nil:BAT,false,nil:lng);
    X_49 := algebra.projection(C_48,X_14);
    (X_50,r1_63) := algebra.subjoin(X_49,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_52:bat[:oid] := sql.bind_idxbat(X_1,"sys","orders","orders_o_custkey_fkey",0);
    (X_54,r1_67) := sql.bind_idxbat(X_1,"sys","orders","orders_o_custkey_fkey",2);
    X_56:bat[:oid] := sql.bind_idxbat(X_1,"sys","orders","orders_o_custkey_fkey",1);
    X_57 := sql.delta(X_52,X_54,r1_67,X_56);
    X_58:bat[:oid] := algebra.projectionpath(X_50,C_48,C_2,X_57);
    C_59:bat[:oid] := sql.tid(X_1,"sys","customer");
    (X_61,r1_76) := algebra.subjoin(X_58,C_59,nil:BAT,nil:BAT,false,nil:lng);
    X_63:bat[:int] := algebra.projectionpath(X_61,X_50,X_49);
    X_64:bat[:int] := sql.bind(X_1,"sys","customer","c_custkey",0);
    (C_66,r1_82) := sql.bind(X_1,"sys","customer","c_custkey",2);
    X_68:bat[:int] := sql.bind(X_1,"sys","customer","c_custkey",1);
    X_69 := sql.delta(X_64,C_66,r1_82,X_68);
    X_70:bat[:int] := algebra.projectionpath(r1_76,C_59,X_69);
    (X_71,r1_88,r2_88) := group.subgroup(X_70);
    (X_74,r1_91,r2_91) := group.subgroupdone(X_63,X_71);
    X_77:bat[:date] := sql.bind(X_1,"sys","orders","o_orderdate",0);
    (C_79,r1_96) := sql.bind(X_1,"sys","orders","o_orderdate",2);
    X_81:bat[:date] := sql.bind(X_1,"sys","orders","o_orderdate",1);
    X_82 := sql.delta(X_77,C_79,r1_96,X_81);
    X_83:bat[:date] := algebra.projectionpath(r1_91,X_61,X_50,C_48,C_2,X_82);
    X_84:bat[:lng] := sql.bind(X_1,"sys","orders","o_totalprice",0);
    (C_86,r1_107) := sql.bind(X_1,"sys","orders","o_totalprice",2);
    X_88:bat[:lng] := sql.bind(X_1,"sys","orders","o_totalprice",1);
    X_89 := sql.delta(X_84,C_86,r1_107,X_88);
    X_90:bat[:lng] := algebra.projectionpath(r1_91,X_61,X_50,C_48,C_2,X_89);
    X_104:bat[:str] := sql.bind(X_1,"sys","customer","c_name",0);
    (C_106,r1_139) := sql.bind(X_1,"sys","customer","c_name",2);
    X_108:bat[:str] := sql.bind(X_1,"sys","customer","c_name",1);
    X_109 := sql.delta(X_104,C_106,r1_139,X_108);
    (C_93,r1_121) := algebra.firstn(X_90,100,false,false);
    C_95 := algebra.firstn(X_83,C_93,r1_121,100,true,false);
    X_96 := algebra.projection(C_95,X_83);
    X_97 := algebra.projection(C_95,X_90);
    (X_98,r1_131,r2_131) := algebra.subsort(X_97,true,false);
    (X_101,r1_134,r2_134) := algebra.subsort(X_96,r1_131,r2_131,false,false);
    X_110:bat[:str] := algebra.projectionpath(r1_134,C_95,r1_91,r1_76,C_59,X_109);
    X_111 := algebra.subslice(X_110,0,99:lng);
    X_113:bat[:int] := algebra.projectionpath(X_111,r1_134,C_95,r1_91,X_70);
    X_114:bat[:int] := algebra.projectionpath(X_111,r1_134,C_95,r1_91,X_63);
    X_117:bat[:lng] := algebra.projectionpath(X_61,r1_63,X_24);
    X_118:bat[:hge] := aggr.subsum(X_117,X_74,r1_91,true,true);
    X_112 := algebra.projection(X_111,X_110);
    X_115:bat[:date] := algebra.projectionpath(X_111,r1_134,X_96);
    X_116:bat[:lng] := algebra.projectionpath(X_111,r1_134,X_97);
    X_119:bat[:hge] := algebra.projectionpath(X_111,r1_134,C_95,X_118);
    sql.resultSet(X_162,X_164,X_166,X_167,X_168,X_112,X_113,X_114,X_115,X_116,X_119);
end user.s4_1;
#inline               actions= 0 time=7 usec 
#candidates           actions= 1 time=142 usec 
#remap                actions= 0 time=9 usec 
#costModel            actions= 1 time=118 usec 
#coercions            actions= 5 time=122 usec 
#evaluate             actions= 6 time=180 usec 
#emptybind            actions= 0 time=10 usec 
#pushselect           actions= 0 time=7 usec 
#aliases              actions=17 time=115 usec 
#mergetable           actions= 0 time=127 usec 
#deadcode             actions=22 time=100 usec 
#aliases              actions= 0 time=25 usec 
#constants            actions=25 time=118 usec 
#commonTerms          actions=11 time=100 usec 
#projectionpath       actions=24 time=124 usec 
#reorder              actions= 1 time=168 usec 
#deadcode             actions=35 time=86 usec 
#reduce               actions=134 time=155 usec 
#matpack              actions= 0 time=10 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=69 usec 
#garbageCollector     actions= 1 time=83 usec 
#total                actions= 1 time=2009 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

