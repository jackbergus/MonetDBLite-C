stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 566 # length
function user.s2_1{autoCommit=true}(A0:sht):void;
    X_222:void := querylog.define("explain select\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice,\n\tsum(l_quantity)\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\to_orderkey in (\n\t\tselect\n\t\t\tl_orderkey\n\t\tfrom\n\t\t\tlineitem\n\t\tgroup by\n\t\t\tl_orderkey having\n\t\t\t\tsum(l_quantity) > 300\n\t)\n\tand c_custkey = o_custkey\n\tand o_orderkey = l_orderkey\ngroup by\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice\norder by\n\to_totalprice desc,\n\to_orderdate\nlimit 100;","sequential_pipe",127);
    X_165 := bat.new(nil:oid,nil:str);
    X_173 := bat.append(X_165,"sys.customer");
    X_183 := bat.append(X_173,"sys.customer");
    X_191 := bat.append(X_183,"sys.orders");
    X_198 := bat.append(X_191,"sys.orders");
    X_205 := bat.append(X_198,"sys.orders");
    X_214 := bat.append(X_205,"sys.L6");
    X_168 := bat.new(nil:oid,nil:str);
    X_175 := bat.append(X_168,"c_name");
    X_184 := bat.append(X_175,"c_custkey");
    X_193 := bat.append(X_184,"o_orderkey");
    X_199 := bat.append(X_193,"o_orderdate");
    X_206 := bat.append(X_199,"o_totalprice");
    X_216 := bat.append(X_206,"L6");
    X_169 := bat.new(nil:oid,nil:str);
    X_177 := bat.append(X_169,"varchar");
    X_186 := bat.append(X_177,"int");
    X_195 := bat.append(X_186,"int");
    X_201 := bat.append(X_195,"date");
    X_208 := bat.append(X_201,"decimal");
    X_218 := bat.append(X_208,"decimal");
    X_170 := bat.new(nil:oid,nil:int);
    X_179 := bat.append(X_170,25);
    X_188 := bat.append(X_179,32);
    X_196 := bat.append(X_188,32);
    X_203 := bat.append(X_196,0);
    X_210 := bat.append(X_203,15);
    X_219 := bat.append(X_210,39);
    X_172 := bat.new(nil:oid,nil:int);
    X_181 := bat.append(X_172,0);
    X_190 := bat.append(X_181,0);
    X_197 := bat.append(X_190,0);
    X_204 := bat.append(X_197,0);
    X_212 := bat.append(X_204,2);
    X_221 := bat.append(X_212,2);
    X_3 := sql.mvc();
    X_4:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    X_7:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_10,r1_10) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_13:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_15 := sql.delta(X_7,X_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(X_4,X_15);
    X_17 := bat.mirror(X_16);
    X_18:bat[:oid,:oid]  := sql.tid(X_3,"sys","lineitem");
    X_20:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_22,r1_22) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_24:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_25 := sql.delta(X_20,X_22,r1_22,X_24);
    X_26 := algebra.leftfetchjoin(X_18,X_25);
    X_27:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (X_29,r1_29) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_32 := sql.delta(X_27,X_29,r1_29,X_31);
    X_33 := algebra.leftfetchjoin(X_18,X_32);
    (X_34,r1_34,r2_34) := group.subgroupdone(X_33);
    X_37:bat[:oid,:hge]  := aggr.subsum(X_26,X_34,r1_34,true,true);
    X_39 := calc.hge(A0,39,2);
    X_41 := algebra.thetasubselect(X_37,X_39,">");
    X_43:bat[:oid,:int] := algebra.leftfetchjoinPath(X_41,r1_34,X_33);
    (X_44,r1_46) := algebra.subjoin(X_16,X_43,nil:BAT,nil:BAT,false,nil:lng);
    X_49 := algebra.tinter(X_17,X_44);
    X_50 := algebra.leftfetchjoin(X_49,X_16);
    (X_55,r1_65) := algebra.subjoin(X_50,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_57:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_60,r1_70) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_62:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_63 := sql.delta(X_57,X_60,r1_70,X_62);
    X_64:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_55,X_49,X_4,X_63);
    X_65:bat[:oid,:oid] := sql.tid(X_3,"sys","customer");
    (X_67,r1_79) := algebra.subjoin(X_64,X_65,nil:BAT,nil:BAT,false,nil:lng);
    X_72:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",0);
    (X_74,r1_86) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_77:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_78 := sql.delta(X_72,X_74,r1_86,X_77);
    X_79 := algebra.leftfetchjoin(X_65,X_78);
    X_80 := algebra.leftfetchjoin(r1_79,X_79);
    X_81:bat[:oid,:int] := algebra.leftfetchjoinPath(X_67,X_55,X_50);
    (X_82,r1_95,r2_95) := group.subgroup(X_81);
    (X_85,r1_98,r2_98) := group.subgroupdone(X_80,X_82);
    X_88 := algebra.leftfetchjoin(r1_98,X_80);
    (X_89,r1_109) := algebra.subjoin(X_88,X_79,nil:BAT,nil:BAT,false,nil:lng);
    X_91:bat[:oid,:int] := algebra.leftfetchjoinPath(X_89,r1_98,X_81);
    X_152:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_156,r1_204) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_158:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_159 := sql.delta(X_152,X_156,r1_204,X_158);
    X_160:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_67,r1_65,X_18,X_159);
    X_161:bat[:oid,:hge] := aggr.subsum(X_160,X_85,r1_98,true,true);
    X_92:bat[:oid,:oid] := sql.tid(X_3,"sys","orders");
    X_94:bat[:oid,:int] := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_96,r1_117) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_98:bat[:oid,:int] := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_99 := sql.delta(X_94,X_96,r1_117,X_98);
    X_100 := algebra.leftfetchjoin(X_92,X_99);
    (X_101,r1_122) := algebra.subjoin(X_91,X_100,nil:BAT,nil:BAT,false,nil:lng);
    X_106:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (X_109,r1_130) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_111:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_112 := sql.delta(X_106,X_109,r1_130,X_111);
    X_113:bat[:oid,:date] := algebra.leftfetchjoinPath(r1_122,X_92,X_112);
    X_114:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (X_117,r1_139) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_119:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_120 := sql.delta(X_114,X_117,r1_139,X_119);
    X_121:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_122,X_92,X_120);
    (X_122,r1_150) := algebra.firstn(X_121,100:wrd,false,false);
    X_124 := algebra.firstn(X_113,X_122,r1_150,100:wrd,true,false);
    X_126 := algebra.leftfetchjoin(X_124,X_113);
    X_127 := algebra.leftfetchjoin(X_124,X_121);
    (X_128,r1_158,r2_158) := algebra.subsort(X_127,true,false);
    (X_132,r1_162,r2_162) := algebra.subsort(X_126,r1_158,r2_158,false,false);
    X_135:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",0);
    (X_138,r1_168) := sql.bind(X_3,"sys","customer","c_name",2);
    X_141:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",1);
    X_143 := sql.delta(X_135,X_138,r1_168,X_141);
    X_144:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_162,X_124,X_101,r1_109,X_65,X_143);
    X_146 := algebra.subslice(X_144,0,99:wrd);
    X_147 := algebra.leftfetchjoin(X_146,X_144);
    X_148:bat[:oid,:int] := algebra.leftfetchjoinPath(X_146,r1_162,X_124,X_101,X_89,X_88);
    X_149:bat[:oid,:int] := algebra.leftfetchjoinPath(X_146,r1_162,X_124,X_101,X_91);
    X_150:bat[:oid,:date] := algebra.leftfetchjoinPath(X_146,r1_162,X_126);
    X_151:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_146,r1_162,X_127);
    X_163:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_146,r1_162,X_124,X_101,X_89,X_161);
    sql.resultSet(X_214,X_216,X_218,X_219,X_221,X_147,X_148,X_149,X_150,X_151,X_163);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

