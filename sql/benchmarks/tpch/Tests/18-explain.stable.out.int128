stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 566 # length
function user.s2_1{autoCommit=true}(A0:sht):void;
    X_202:void := querylog.define("explain select\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice,\n\tsum(l_quantity)\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\to_orderkey in (\n\t\tselect\n\t\t\tl_orderkey\n\t\tfrom\n\t\t\tlineitem\n\t\tgroup by\n\t\t\tl_orderkey having\n\t\t\t\tsum(l_quantity) > 300\n\t)\n\tand c_custkey = o_custkey\n\tand o_orderkey = l_orderkey\ngroup by\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice\norder by\n\to_totalprice desc,\n\to_orderdate\nlimit 100;","sequential_pipe",121);
    X_145 := bat.new(nil:oid,nil:str);
    X_153 := bat.append(X_145,"sys.customer");
    X_163 := bat.append(X_153,"sys.customer");
    X_171 := bat.append(X_163,"sys.orders");
    X_178 := bat.append(X_171,"sys.orders");
    X_185 := bat.append(X_178,"sys.orders");
    X_194 := bat.append(X_185,"sys.L6");
    X_148 := bat.new(nil:oid,nil:str);
    X_155 := bat.append(X_148,"c_name");
    X_164 := bat.append(X_155,"c_custkey");
    X_173 := bat.append(X_164,"o_orderkey");
    X_179 := bat.append(X_173,"o_orderdate");
    X_186 := bat.append(X_179,"o_totalprice");
    X_196 := bat.append(X_186,"L6");
    X_149 := bat.new(nil:oid,nil:str);
    X_157 := bat.append(X_149,"varchar");
    X_166 := bat.append(X_157,"int");
    X_175 := bat.append(X_166,"int");
    X_181 := bat.append(X_175,"date");
    X_188 := bat.append(X_181,"decimal");
    X_198 := bat.append(X_188,"decimal");
    X_150 := bat.new(nil:oid,nil:int);
    X_159 := bat.append(X_150,25);
    X_168 := bat.append(X_159,32);
    X_176 := bat.append(X_168,32);
    X_183 := bat.append(X_176,0);
    X_190 := bat.append(X_183,15);
    X_199 := bat.append(X_190,39);
    X_152 := bat.new(nil:oid,nil:int);
    X_161 := bat.append(X_152,0);
    X_170 := bat.append(X_161,0);
    X_177 := bat.append(X_170,0);
    X_184 := bat.append(X_177,0);
    X_192 := bat.append(X_184,2);
    X_201 := bat.append(X_192,2);
    X_3 := sql.mvc();
    X_4:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    X_7:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_10,r1_10) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_13:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_15 := sql.delta(X_7,X_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(X_4,X_15);
    X_17 := bat.mirror(X_16);
    X_18:bat[:oid,:oid]  := sql.tid(X_3,"sys","lineitem");
    X_20:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_22,r1_22) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_24:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_25 := sql.delta(X_20,X_22,r1_22,X_24);
    X_26 := algebra.leftfetchjoin(X_18,X_25);
    X_27:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (X_29,r1_29) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_32 := sql.delta(X_27,X_29,r1_29,X_31);
    X_33 := algebra.leftfetchjoin(X_18,X_32);
    (X_34,r1_34,r2_34) := group.subgroupdone(X_33);
    X_37:bat[:oid,:hge]  := aggr.subsum(X_26,X_34,r1_34,true,true);
    X_40 := calc.hge(A0,39,2);
    X_42 := algebra.thetasubselect(X_37,X_40,">");
    X_44:bat[:oid,:int] := algebra.leftfetchjoinPath(X_42,r1_34,X_33);
    (X_45,r1_47) := algebra.subjoin(X_16,X_44,nil:BAT,nil:BAT,false,nil:lng);
    X_51 := algebra.tinter(X_17,X_45);
    X_52 := algebra.leftfetchjoin(X_51,X_16);
    X_53:bat[:oid,:oid] := sql.tid(X_3,"sys","lineitem");
    X_55 := algebra.leftfetchjoin(X_53,X_32);
    (X_56,r1_63) := algebra.subjoin(X_52,X_55,nil:BAT,nil:BAT,false,nil:lng);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_60,r1_67) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_62:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_63 := sql.delta(X_58,X_60,r1_67,X_62);
    X_64:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_56,X_51,X_4,X_63);
    X_65:bat[:oid,:oid] := sql.tid(X_3,"sys","customer");
    (X_67,r1_76) := algebra.subjoin(X_64,X_65,nil:BAT,nil:BAT,false,nil:lng);
    X_69:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",0);
    (X_71,r1_80) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_73:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_74 := sql.delta(X_69,X_71,r1_80,X_73);
    X_75 := algebra.leftfetchjoin(X_65,X_74);
    X_76 := algebra.leftfetchjoin(r1_76,X_75);
    X_77:bat[:oid,:int] := algebra.leftfetchjoinPath(X_67,X_56,X_52);
    (X_78,r1_88,r2_88) := group.subgroup(X_77);
    (X_81,r1_91,r2_91) := group.subgroupdone(X_76,X_78);
    X_84 := algebra.leftfetchjoin(r1_91,X_76);
    (X_85,r1_102) := algebra.subjoin(X_84,X_75,nil:BAT,nil:BAT,false,nil:lng);
    X_91:bat[:oid,:int] := algebra.leftfetchjoinPath(X_85,r1_91,X_77);
    X_139:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_67,r1_63,X_53,X_25);
    X_140:bat[:oid,:hge] := aggr.subsum(X_139,X_81,r1_91,true,true);
    X_92:bat[:oid,:oid] := sql.tid(X_3,"sys","orders");
    X_94 := algebra.leftfetchjoin(X_92,X_15);
    (X_95,r1_118) := algebra.subjoin(X_91,X_94,nil:BAT,nil:BAT,false,nil:lng);
    X_97:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (X_99,r1_122) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_101:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_102 := sql.delta(X_97,X_99,r1_122,X_101);
    X_103:bat[:oid,:date] := algebra.leftfetchjoinPath(r1_118,X_92,X_102);
    X_104:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (X_106,r1_130) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_108:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_109 := sql.delta(X_104,X_106,r1_130,X_108);
    X_110:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_118,X_92,X_109);
    (X_112,r1_141) := algebra.firstn(X_110,100:wrd,false,false);
    X_116 := algebra.firstn(X_103,X_112,r1_141,100:wrd,true,false);
    X_118 := algebra.leftfetchjoin(X_116,X_103);
    X_119 := algebra.leftfetchjoin(X_116,X_110);
    (X_120,r1_151,r2_151) := algebra.subsort(X_119,true,false);
    (X_123,r1_154,r2_154) := algebra.subsort(X_118,r1_151,r2_151,false,false);
    X_126:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",0);
    (X_128,r1_159) := sql.bind(X_3,"sys","customer","c_name",2);
    X_130:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",1);
    X_131 := sql.delta(X_126,X_128,r1_159,X_130);
    X_132:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_154,X_116,X_95,r1_102,X_65,X_131);
    X_133 := algebra.subslice(X_132,0,99:wrd);
    X_134 := algebra.leftfetchjoin(X_133,X_132);
    X_135:bat[:oid,:int] := algebra.leftfetchjoinPath(X_133,r1_154,X_116,X_95,X_85,X_84);
    X_136:bat[:oid,:int] := algebra.leftfetchjoinPath(X_133,r1_154,X_116,X_95,X_91);
    X_137:bat[:oid,:date] := algebra.leftfetchjoinPath(X_133,r1_154,X_118);
    X_138:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_133,r1_154,X_119);
    X_143:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_133,r1_154,X_116,X_95,X_85,X_140);
    sql.resultSet(X_194,X_196,X_198,X_199,X_201,X_134,X_135,X_136,X_137,X_138,X_143);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

