stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 566 # length
function user.s2_1{autoCommit=true}(A0:sht):void;
    X_209:void := querylog.define("explain select\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice,\n\tsum(l_quantity)\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\to_orderkey in (\n\t\tselect\n\t\t\tl_orderkey\n\t\tfrom\n\t\t\tlineitem\n\t\tgroup by\n\t\t\tl_orderkey having\n\t\t\t\tsum(l_quantity) > 300\n\t)\n\tand c_custkey = o_custkey\n\tand o_orderkey = l_orderkey\ngroup by\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice\norder by\n\to_totalprice desc,\n\to_orderdate\nlimit 100;","sequential_pipe",127);
    X_152 := bat.new(nil:oid,nil:str);
    X_160 := bat.append(X_152,"sys.customer");
    X_170 := bat.append(X_160,"sys.customer");
    X_178 := bat.append(X_170,"sys.orders");
    X_185 := bat.append(X_178,"sys.orders");
    X_192 := bat.append(X_185,"sys.orders");
    X_201 := bat.append(X_192,"sys.L6");
    X_155 := bat.new(nil:oid,nil:str);
    X_162 := bat.append(X_155,"c_name");
    X_171 := bat.append(X_162,"c_custkey");
    X_180 := bat.append(X_171,"o_orderkey");
    X_186 := bat.append(X_180,"o_orderdate");
    X_193 := bat.append(X_186,"o_totalprice");
    X_203 := bat.append(X_193,"L6");
    X_156 := bat.new(nil:oid,nil:str);
    X_164 := bat.append(X_156,"varchar");
    X_173 := bat.append(X_164,"int");
    X_182 := bat.append(X_173,"int");
    X_188 := bat.append(X_182,"date");
    X_195 := bat.append(X_188,"decimal");
    X_205 := bat.append(X_195,"decimal");
    X_157 := bat.new(nil:oid,nil:int);
    X_166 := bat.append(X_157,25);
    X_175 := bat.append(X_166,32);
    X_183 := bat.append(X_175,32);
    X_190 := bat.append(X_183,0);
    X_197 := bat.append(X_190,15);
    X_206 := bat.append(X_197,39);
    X_159 := bat.new(nil:oid,nil:int);
    X_168 := bat.append(X_159,0);
    X_177 := bat.append(X_168,0);
    X_184 := bat.append(X_177,0);
    X_191 := bat.append(X_184,0);
    X_199 := bat.append(X_191,2);
    X_208 := bat.append(X_199,2);
    X_3 := sql.mvc();
    X_4:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    X_7:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_10,r1_10) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_13:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_15 := sql.delta(X_7,X_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(X_4,X_15);
    X_17 := bat.mirror(X_16);
    X_18:bat[:oid,:oid]  := sql.tid(X_3,"sys","lineitem");
    X_20:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_22,r1_22) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_24:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_25 := sql.delta(X_20,X_22,r1_22,X_24);
    X_26 := algebra.leftfetchjoin(X_18,X_25);
    X_27:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (X_29,r1_29) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_32 := sql.delta(X_27,X_29,r1_29,X_31);
    X_33 := algebra.leftfetchjoin(X_18,X_32);
    (X_34,r1_34,r2_34) := group.subgroupdone(X_33);
    X_37:bat[:oid,:hge]  := aggr.subsum(X_26,X_34,r1_34,true,true);
    X_40 := calc.hge(A0,39,2);
    X_42 := algebra.thetasubselect(X_37,X_40,">");
    X_44:bat[:oid,:int] := algebra.leftfetchjoinPath(X_42,r1_34,X_33);
    (X_45,r1_47) := algebra.subjoin(X_16,X_44,nil:BAT,nil:BAT,false,nil:lng);
    X_51 := algebra.tinter(X_17,X_45);
    X_52 := algebra.leftfetchjoin(X_51,X_16);
    (X_53,r1_63) := algebra.subjoin(X_52,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_55:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_57,r1_67) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_59:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_60 := sql.delta(X_55,X_57,r1_67,X_59);
    X_61:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_53,X_51,X_4,X_60);
    X_62:bat[:oid,:oid] := sql.tid(X_3,"sys","customer");
    (X_64,r1_76) := algebra.subjoin(X_61,X_62,nil:BAT,nil:BAT,false,nil:lng);
    X_66:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",0);
    (X_68,r1_80) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_70:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_71 := sql.delta(X_66,X_68,r1_80,X_70);
    X_72 := algebra.leftfetchjoin(X_62,X_71);
    X_73 := algebra.leftfetchjoin(r1_76,X_72);
    X_74:bat[:oid,:int] := algebra.leftfetchjoinPath(X_64,X_53,X_52);
    (X_75,r1_88,r2_88) := group.subgroup(X_74);
    (X_78,r1_91,r2_91) := group.subgroupdone(X_73,X_75);
    X_81 := algebra.leftfetchjoin(r1_91,X_73);
    (X_82,r1_102) := algebra.subjoin(X_81,X_72,nil:BAT,nil:BAT,false,nil:lng);
    X_88:bat[:oid,:int] := algebra.leftfetchjoinPath(X_82,r1_91,X_74);
    X_141:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_142,r1_189) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_144:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_145 := sql.delta(X_141,X_142,r1_189,X_144);
    X_146:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_64,r1_63,X_18,X_145);
    X_147:bat[:oid,:hge] := aggr.subsum(X_146,X_78,r1_91,true,true);
    X_89:bat[:oid,:oid] := sql.tid(X_3,"sys","orders");
    X_91:bat[:oid,:int] := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_92,r1_113) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_94:bat[:oid,:int] := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_95 := sql.delta(X_91,X_92,r1_113,X_94);
    X_96 := algebra.leftfetchjoin(X_89,X_95);
    (X_97,r1_118) := algebra.subjoin(X_88,X_96,nil:BAT,nil:BAT,false,nil:lng);
    X_99:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (X_101,r1_122) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_103:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_104 := sql.delta(X_99,X_101,r1_122,X_103);
    X_105:bat[:oid,:date] := algebra.leftfetchjoinPath(r1_118,X_89,X_104);
    X_106:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (X_108,r1_130) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_110:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_111 := sql.delta(X_106,X_108,r1_130,X_110);
    X_112:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_118,X_89,X_111);
    (X_114,r1_141) := algebra.firstn(X_112,100:wrd,false,false);
    X_118 := algebra.firstn(X_105,X_114,r1_141,100:wrd,true,false);
    X_120 := algebra.leftfetchjoin(X_118,X_105);
    X_121 := algebra.leftfetchjoin(X_118,X_112);
    (X_122,r1_151,r2_151) := algebra.subsort(X_121,true,false);
    (X_125,r1_154,r2_154) := algebra.subsort(X_120,r1_151,r2_151,false,false);
    X_128:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",0);
    (X_130,r1_159) := sql.bind(X_3,"sys","customer","c_name",2);
    X_132:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",1);
    X_133 := sql.delta(X_128,X_130,r1_159,X_132);
    X_134:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_154,X_118,X_97,r1_102,X_62,X_133);
    X_135 := algebra.subslice(X_134,0,99:wrd);
    X_136 := algebra.leftfetchjoin(X_135,X_134);
    X_137:bat[:oid,:int] := algebra.leftfetchjoinPath(X_135,r1_154,X_118,X_97,X_82,X_81);
    X_138:bat[:oid,:int] := algebra.leftfetchjoinPath(X_135,r1_154,X_118,X_97,X_88);
    X_139:bat[:oid,:date] := algebra.leftfetchjoinPath(X_135,r1_154,X_120);
    X_140:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_135,r1_154,X_121);
    X_150:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_135,r1_154,X_118,X_97,X_82,X_147);
    sql.resultSet(X_201,X_203,X_205,X_206,X_208,X_136,X_137,X_138,X_139,X_140,X_150);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

