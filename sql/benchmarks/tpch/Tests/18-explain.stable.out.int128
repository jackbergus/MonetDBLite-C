stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 566 # length
function user.s2_1{autoCommit=true}(A0:hge):void;
    X_232:void := querylog.define("explain select\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice,\n\tsum(l_quantity)\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\to_orderkey in (\n\t\tselect\n\t\t\tl_orderkey\n\t\tfrom\n\t\t\tlineitem\n\t\tgroup by\n\t\t\tl_orderkey having\n\t\t\t\tsum(l_quantity) > 300\n\t)\n\tand c_custkey = o_custkey\n\tand o_orderkey = l_orderkey\ngroup by\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice\norder by\n\to_totalprice desc,\n\to_orderdate\nlimit 100;","sequential_pipe",131);
    X_173 := bat.new(nil:oid,nil:str);
    X_181 := bat.append(X_173,"sys.customer");
    X_191 := bat.append(X_181,"sys.customer");
    X_199 := bat.append(X_191,"sys.orders");
    X_206 := bat.append(X_199,"sys.orders");
    X_213 := bat.append(X_206,"sys.orders");
    X_222 := bat.append(X_213,"sys.L6");
    X_176 := bat.new(nil:oid,nil:str);
    X_183 := bat.append(X_176,"c_name");
    X_192 := bat.append(X_183,"c_custkey");
    X_201 := bat.append(X_192,"o_orderkey");
    X_207 := bat.append(X_201,"o_orderdate");
    X_214 := bat.append(X_207,"o_totalprice");
    X_224 := bat.append(X_214,"L6");
    X_177 := bat.new(nil:oid,nil:str);
    X_185 := bat.append(X_177,"varchar");
    X_194 := bat.append(X_185,"int");
    X_203 := bat.append(X_194,"int");
    X_209 := bat.append(X_203,"date");
    X_216 := bat.append(X_209,"decimal");
    X_226 := bat.append(X_216,"hugeint");
    X_178 := bat.new(nil:oid,nil:int);
    X_187 := bat.append(X_178,25);
    X_196 := bat.append(X_187,32);
    X_204 := bat.append(X_196,32);
    X_211 := bat.append(X_204,0);
    X_218 := bat.append(X_211,15);
    X_228 := bat.append(X_218,128);
    X_180 := bat.new(nil:oid,nil:int);
    X_189 := bat.append(X_180,0);
    X_198 := bat.append(X_189,0);
    X_205 := bat.append(X_198,0);
    X_212 := bat.append(X_205,0);
    X_220 := bat.append(X_212,2);
    X_230 := bat.append(X_220,0);
    X_3 := sql.mvc();
    X_4:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    X_7:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_10,r1_10) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_13:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_15 := sql.delta(X_7,X_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(X_4,X_15);
    X_17 := bat.mirror(X_16);
    X_18:bat[:oid,:oid]  := sql.tid(X_3,"sys","lineitem");
    X_20:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_22,r1_22) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_24:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_25 := sql.delta(X_20,X_22,r1_22,X_24);
    X_26 := algebra.leftfetchjoin(X_18,X_25);
    X_27:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (X_29,r1_29) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_32 := sql.delta(X_27,X_29,r1_29,X_31);
    X_33 := algebra.leftfetchjoin(X_18,X_32);
    (X_34,r1_34,r2_34) := group.subgroupdone(X_33);
    X_37:bat[:oid,:hge]  := aggr.subsum(X_26,X_34,r1_34,true,true);
    X_39 := algebra.thetasubselect(X_37,A0,">");
    X_41:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_39,r1_34,X_33);
    (X_42,r1_44) := algebra.subjoin(X_16,X_41,nil:BAT,nil:BAT,false,nil:lng);
    X_47 := algebra.tinter(X_17,X_42);
    X_48 := algebra.leftfetchjoin(X_47,X_16);
    (X_53,r1_63) := algebra.subjoin(X_48,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_260 := algebra.leftfetchjoin(X_47,X_4);
    X_55:bat[:oid,:oid]  := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_58,r1_68) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_60:bat[:oid,:oid]  := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_61 := sql.delta(X_55,X_58,r1_68,X_60);
    X_62:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_53,X_260,X_61);
    X_63:bat[:oid,:oid]  := sql.tid(X_3,"sys","customer");
    (X_65,r1_77) := algebra.subjoin(X_62,X_63,nil:BAT,nil:BAT,false,nil:lng);
    X_70:bat[:oid,:int]  := sql.bind(X_3,"sys","customer","c_custkey",0);
    (X_72,r1_84) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_75:bat[:oid,:int]  := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_76 := sql.delta(X_70,X_72,r1_84,X_75);
    X_77 := algebra.leftfetchjoin(X_63,X_76);
    X_78 := algebra.leftfetchjoin(r1_77,X_77);
    X_79:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_65,X_53,X_48);
    (X_80,r1_93,r2_93) := group.subgroup(X_79);
    (X_83,r1_96,r2_96) := group.subgroupdone(X_78,X_80);
    X_86 := algebra.leftfetchjoin(r1_96,X_78);
    (X_90,r1_110) := algebra.subjoin(X_86,X_77,nil:BAT,nil:BAT,false,nil:lng);
    X_95:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_90,r1_96,X_79);
    X_264 := algebra.leftfetchjoin(r1_63,X_18);
    X_157:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_162,r1_210) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_165:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_167 := sql.delta(X_157,X_162,r1_210,X_165);
    X_168:bat[:oid,:int] := algebra.leftfetchjoinPath(X_65,X_264,X_167);
    X_169:bat[:oid,:hge]  := aggr.subsum(X_168,X_83,r1_96,true,true);
    X_96:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    X_98:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_101,r1_122) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_103:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_104 := sql.delta(X_98,X_101,r1_122,X_103);
    X_105 := algebra.leftfetchjoin(X_96,X_104);
    (X_106,r1_127) := algebra.subjoin(X_95,X_105,nil:BAT,nil:BAT,false,nil:lng);
    X_261 := algebra.leftfetchjoin(r1_127,X_96);
    X_108:bat[:oid,:date]  := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (X_110,r1_131) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_112:bat[:oid,:date]  := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_113 := sql.delta(X_108,X_110,r1_131,X_112);
    X_114:bat[:oid,:date] := algebra.leftfetchjoin(X_261,X_113);
    X_115:bat[:oid,:lng]  := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (X_118,r1_140) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_121:bat[:oid,:lng]  := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_123 := sql.delta(X_115,X_118,r1_140,X_121);
    X_124:bat[:oid,:lng] := algebra.leftfetchjoin(X_261,X_123);
    (X_125,r1_153) := algebra.firstn(X_124,100:wrd,false,false);
    X_128 := algebra.firstn(X_114,X_125,r1_153,100:wrd,true,false);
    X_130 := algebra.leftfetchjoin(X_128,X_114);
    X_131 := algebra.leftfetchjoin(X_128,X_124);
    (X_132,r1_162,r2_162) := algebra.subsort(X_131,true,false);
    (X_135,r1_165,r2_165) := algebra.subsort(X_130,r1_162,r2_162,false,false);
    X_262 := algebra.leftfetchjoin(r1_165,X_128);
    X_138:bat[:oid,:str]  := sql.bind(X_3,"sys","customer","c_name",0);
    (X_143,r1_173) := sql.bind(X_3,"sys","customer","c_name",2);
    X_146:bat[:oid,:str]  := sql.bind(X_3,"sys","customer","c_name",1);
    X_148 := sql.delta(X_138,X_143,r1_173,X_146);
    X_149:bat[:oid,:str] := algebra.leftfetchjoinPath(X_262,X_106,r1_110,X_63,X_148);
    X_151 := algebra.subslice(X_149,0,99:wrd);
    X_152 := algebra.leftfetchjoin(X_151,X_149);
    X_263 := algebra.leftfetchjoin(X_151,r1_165);
    X_153:bat[:oid,:int] := algebra.leftfetchjoinPath(X_263,X_128,X_106,X_90,X_86);
    X_154:bat[:oid,:int] := algebra.leftfetchjoinPath(X_263,X_128,X_106,X_95);
    X_155:bat[:oid,:date] := algebra.leftfetchjoin(X_263,X_130);
    X_156:bat[:oid,:lng] := algebra.leftfetchjoin(X_263,X_131);
    X_171:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_263,X_128,X_106,X_90,X_169);
    sql.resultSet(X_222,X_224,X_226,X_228,X_230,X_152,X_153,X_154,X_155,X_156,X_171);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

