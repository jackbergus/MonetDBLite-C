stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 566 # length
function user.s2_1{autoCommit=true}(A0:sht):void;
    X_202:void := querylog.define("explain select\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice,\n\tsum(l_quantity)\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\to_orderkey in (\n\t\tselect\n\t\t\tl_orderkey\n\t\tfrom\n\t\t\tlineitem\n\t\tgroup by\n\t\t\tl_orderkey having\n\t\t\t\tsum(l_quantity) > 300\n\t)\n\tand c_custkey = o_custkey\n\tand o_orderkey = l_orderkey\ngroup by\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice\norder by\n\to_totalprice desc,\n\to_orderdate\nlimit 100;","sequential_pipe",101);
    X_3 := sql.mvc();
    X_4:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    X_7:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_10,r1_10) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_13:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_15 := sql.delta(X_7,X_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(X_4,X_15);
    X_17 := bat.mirror(X_16);
    X_18:bat[:oid,:oid]  := sql.tid(X_3,"sys","lineitem");
    X_20:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_22,r1_22) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_24:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_25 := sql.delta(X_20,X_22,r1_22,X_24);
    X_26 := algebra.leftfetchjoin(X_18,X_25);
    X_27:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (X_29,r1_29) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_32 := sql.delta(X_27,X_29,r1_29,X_31);
    X_33 := algebra.leftfetchjoin(X_18,X_32);
    (X_34,r1_34,r2_34) := group.subgroupdone(X_33);
    X_37:bat[:oid,:hge]  := aggr.subsum(X_26,X_34,r1_34,true,true);
    X_39:bat[:oid,:lng] := batcalc.lng(2,X_37,15,2);
    X_41 := calc.lng(A0,15,2);
    X_43 := algebra.thetasubselect(X_39,X_41,">");
    X_45:bat[:oid,:int] := algebra.leftfetchjoinPath(X_43,r1_34,X_33);
    (X_46,r1_50) := algebra.subjoin(X_16,X_45,nil:BAT,nil:BAT,false,nil:lng);
    X_51 := algebra.tinter(X_17,X_46);
    X_52 := algebra.leftfetchjoin(X_51,X_16);
    (X_56,r1_69) := algebra.subjoin(X_52,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_61,r1_74) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_63:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_64 := sql.delta(X_58,X_61,r1_74,X_63);
    X_65:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_56,X_51,X_4,X_64);
    X_66:bat[:oid,:oid] := sql.tid(X_3,"sys","customer");
    (X_68,r1_83) := algebra.subjoin(X_65,X_66,nil:BAT,nil:BAT,false,nil:lng);
    X_73:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",0);
    (X_75,r1_90) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_79:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_80 := sql.delta(X_73,X_75,r1_90,X_79);
    X_81 := algebra.leftfetchjoin(X_66,X_80);
    X_82 := algebra.leftfetchjoin(r1_83,X_81);
    X_83:bat[:oid,:int] := algebra.leftfetchjoinPath(X_68,X_56,X_52);
    (X_84,r1_100,r2_100) := group.subgroup(X_83);
    (X_87,r1_103,r2_103) := group.subgroupdone(X_82,X_84);
    X_90 := algebra.leftfetchjoin(r1_103,X_82);
    (X_93,r1_116) := algebra.subjoin(X_90,X_81,nil:BAT,nil:BAT,false,nil:lng);
    X_98:bat[:oid,:int] := algebra.leftfetchjoinPath(X_93,r1_103,X_83);
    X_159:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_164,r1_215) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_167:bat[:oid,:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_168 := sql.delta(X_159,X_164,r1_215,X_167);
    X_169:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_68,r1_69,X_18,X_168);
    X_170:bat[:oid,:hge] := aggr.subsum(X_169,X_87,r1_103,true,true);
    X_99:bat[:oid,:oid] := sql.tid(X_3,"sys","orders");
    X_101:bat[:oid,:int] := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_104,r1_128) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_107:bat[:oid,:int] := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_108 := sql.delta(X_101,X_104,r1_128,X_107);
    X_109 := algebra.leftfetchjoin(X_99,X_108);
    (X_110,r1_134) := algebra.subjoin(X_98,X_109,nil:BAT,nil:BAT,false,nil:lng);
    X_112:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (X_114,r1_138) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_116:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_117 := sql.delta(X_112,X_114,r1_138,X_116);
    X_118:bat[:oid,:date] := algebra.leftfetchjoinPath(r1_134,X_99,X_117);
    X_119:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (X_122,r1_147) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_124:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_126 := sql.delta(X_119,X_122,r1_147,X_124);
    X_127:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_134,X_99,X_126);
    (X_128,r1_159) := algebra.firstn(X_127,100:wrd,false,false);
    X_131 := algebra.firstn(X_118,X_128,r1_159,100:wrd,true,false);
    X_133 := algebra.leftfetchjoin(X_131,X_118);
    X_134 := algebra.leftfetchjoin(X_131,X_127);
    (X_135,r1_168,r2_168) := algebra.subsort(X_134,true,false);
    (X_138,r1_171,r2_171) := algebra.subsort(X_133,r1_168,r2_168,false,false);
    X_141:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",0);
    (X_145,r1_178) := sql.bind(X_3,"sys","customer","c_name",2);
    X_148:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",1);
    X_149 := sql.delta(X_141,X_145,r1_178,X_148);
    X_150:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_171,X_131,X_110,r1_116,X_66,X_149);
    X_153 := algebra.subslice(X_150,0,99:wrd);
    X_154 := algebra.leftfetchjoin(X_153,X_150);
    X_172:bat[:oid,:hge] := algebra.leftfetchjoinPath(X_153,r1_171,X_131,X_110,X_93,X_170);
    X_158:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_153,r1_171,X_134);
    X_157:bat[:oid,:date] := algebra.leftfetchjoinPath(X_153,r1_171,X_133);
    X_156:bat[:oid,:int] := algebra.leftfetchjoinPath(X_153,r1_171,X_131,X_110,X_98);
    X_155:bat[:oid,:int] := algebra.leftfetchjoinPath(X_153,r1_171,X_131,X_110,X_93,X_90);
    X_173 := sql.resultSet(6,1,X_154);
    sql.rsColumn(X_173,"sys.customer","c_name","varchar",25,0,X_154);
    sql.rsColumn(X_173,"sys.customer","c_custkey","int",32,0,X_155);
    sql.rsColumn(X_173,"sys.orders","o_orderkey","int",32,0,X_156);
    sql.rsColumn(X_173,"sys.orders","o_orderdate","date",0,0,X_157);
    sql.rsColumn(X_173,"sys.orders","o_totalprice","decimal",15,2,X_158);
    sql.rsColumn(X_173,"sys.L6","L6","decimal",15,2,X_172);
    X_200 := io.stdout();
    sql.exportResult(X_200,X_173);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

