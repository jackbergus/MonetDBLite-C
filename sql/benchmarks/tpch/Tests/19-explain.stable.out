stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1117 # length
function user.s2_1(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:str,A6:bte,A7:bte,A8:bte,A9:int,A10:int,A11:str,A12:str,A13:str,A14:str,A15:str,A16:str,A17:str,A18:str,A19:bte,A20:bte,A21:bte,A22:int,A23:int,A24:str,A25:str,A26:str,A27:str,A28:str,A29:str,A30:str,A31:str,A32:bte,A33:bte,A34:bte,A35:int,A36:int,A37:str,A38:str,A39:str):void;
    X_326:void := querylog.define("explain select\n sum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n lineitem,\n part\nwhere\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#12\\'\n and p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n and l_quantity >= 1 and l_quantity <= 1 + 10\n and p_size between 1 and 5\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#23\\'\n and p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n and l_quantity >= 10 and l_quantity <= 10 + 10\n and p_size between 1 and 10\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#34\\'\n and p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n and l_quantity >= 20 and l_quantity <= 20 + 10\n and p_size between 1 and 15\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n );","sequential_pipe",172);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","part");
    X_4:bat[:str] := sql.bind(X_0,"sys","part","p_container",0);
    (C_7,r1_48) := sql.bind(X_0,"sys","part","p_container",2);
    X_10:bat[:str] := sql.bind(X_0,"sys","part","p_container",1);
    X_12 := sql.delta(X_4,C_7,r1_48,X_10);
    X_13 := algebra.projection(C_1,X_12);
    X_15:bat[:str] := sql.bind(X_0,"sys","part","p_brand",0);
    (C_17,r1_58) := sql.bind(X_0,"sys","part","p_brand",2);
    X_19:bat[:str] := sql.bind(X_0,"sys","part","p_brand",1);
    X_20 := sql.delta(X_15,C_17,r1_58,X_19);
    X_21 := algebra.projection(C_1,X_20);
    X_23:bat[:int] := sql.bind(X_0,"sys","part","p_size",0);
    (C_25,r1_66) := sql.bind(X_0,"sys","part","p_size",2);
    X_27:bat[:int] := sql.bind(X_0,"sys","part","p_size",1);
    X_28 := sql.delta(X_23,C_25,r1_66,X_27);
    X_29 := algebra.projection(C_1,X_28);
    X_33:int := calc.min(A22,A35);
    X_34:int := calc.min(A9,X_33);
    X_38:int := calc.max(A23,A36);
    X_39:int := calc.max(A10,X_38);
    C_40 := algebra.subselect(X_29,X_34,X_39,true,true,false);
    C_44 := algebra.subselect(X_21,C_40,A1,A1,true,false,false);
    C_46 := algebra.subselect(X_21,C_40,A14,A14,true,false,false);
    X_47 := bat.mergecand(C_44,C_46);
    C_49 := algebra.subselect(X_21,C_40,A27,A27,true,false,false);
    X_50 := bat.mergecand(X_47,C_49);
    C_51 := algebra.subselect(X_13,X_50,A2,A2,true,false,false);
    C_53 := algebra.subselect(X_13,X_50,A3,A3,true,false,false);
    X_54 := bat.mergecand(C_51,C_53);
    C_56 := algebra.subselect(X_13,X_50,A4,A4,true,false,false);
    X_57 := bat.mergecand(X_54,C_56);
    C_59 := algebra.subselect(X_13,X_50,A5,A5,true,false,false);
    X_60 := bat.mergecand(X_57,C_59);
    C_62 := algebra.subselect(X_13,X_50,A15,A15,true,false,false);
    X_63 := bat.mergecand(X_60,C_62);
    C_65 := algebra.subselect(X_13,X_50,A16,A16,true,false,false);
    X_66 := bat.mergecand(X_63,C_65);
    C_68 := algebra.subselect(X_13,X_50,A17,A17,true,false,false);
    X_69 := bat.mergecand(X_66,C_68);
    C_71 := algebra.subselect(X_13,X_50,A18,A18,true,false,false);
    X_72 := bat.mergecand(X_69,C_71);
    C_74 := algebra.subselect(X_13,X_50,A28,A28,true,false,false);
    X_78 := bat.mergecand(X_72,C_74);
    C_80 := algebra.subselect(X_13,X_50,A29,A29,true,false,false);
    X_81 := bat.mergecand(X_78,C_80);
    C_83 := algebra.subselect(X_13,X_50,A30,A30,true,false,false);
    X_84 := bat.mergecand(X_81,C_83);
    C_86 := algebra.subselect(X_13,X_50,A31,A31,true,false,false);
    X_87 := bat.mergecand(X_84,C_86);
    X_88:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    (C_90,r1_131) := sql.bind(X_0,"sys","part","p_partkey",2);
    X_92:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",1);
    X_93 := sql.delta(X_88,C_90,r1_131,X_92);
    X_95:bat[:int] := algebra.projectionpath(X_87,C_1,X_93);
    C_96:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_98:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",0);
    (C_100,r1_141) := sql.bind(X_0,"sys","lineitem","l_shipmode",2);
    X_102:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",1);
    X_103 := sql.delta(X_98,C_100,r1_141,X_102);
    X_104 := algebra.projection(C_96,X_103);
    X_106:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipinstruct",0);
    (C_108,r1_149) := sql.bind(X_0,"sys","lineitem","l_shipinstruct",2);
    X_110:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipinstruct",1);
    X_111 := sql.delta(X_106,C_108,r1_149,X_110);
    X_112 := algebra.projection(C_96,X_111);
    C_114 := algebra.subselect(X_112,A13,A13,true,false,false);
    C_119 := algebra.subselect(X_112,A26,A26,true,false,false);
    X_120 := bat.mergecand(C_114,C_119);
    C_122 := algebra.subselect(X_112,A39,A39,true,false,false);
    X_123 := bat.mergecand(X_120,C_122);
    C_124 := algebra.subselect(X_104,X_123,A11,A11,true,false,false);
    C_126 := algebra.subselect(X_104,X_123,A12,A12,true,false,false);
    X_127 := bat.mergecand(C_124,C_126);
    C_129 := algebra.subselect(X_104,X_123,A24,A24,true,false,false);
    X_130 := bat.mergecand(X_127,C_129);
    C_132 := algebra.subselect(X_104,X_123,A25,A25,true,false,false);
    X_133 := bat.mergecand(X_130,C_132);
    C_135 := algebra.subselect(X_104,X_123,A37,A37,true,false,false);
    X_136 := bat.mergecand(X_133,C_135);
    C_138 := algebra.subselect(X_104,X_123,A38,A38,true,false,false);
    X_139 := bat.mergecand(X_136,C_138);
    X_140:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    (C_142,r1_183) := sql.bind(X_0,"sys","lineitem","l_partkey",2);
    X_144:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",1);
    X_145 := sql.delta(X_140,C_142,r1_183,X_144);
    X_147:bat[:int] := algebra.projectionpath(X_139,C_96,X_145);
    (X_148,r1_189) := algebra.subjoin(X_95,X_147,nil:BAT,nil:BAT,false,nil:lng);
    X_155:bat[:str] := algebra.projectionpath(r1_189,X_139,X_112);
    X_158:bat[:str] := algebra.projectionpath(r1_189,X_139,X_104);
    X_161:bat[:int] := algebra.projectionpath(X_148,X_87,X_29);
    X_164:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",0);
    (C_166,r1_207) := sql.bind(X_0,"sys","lineitem","l_quantity",2);
    X_168:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",1);
    X_169 := sql.delta(X_164,C_166,r1_207,X_168);
    X_172:bat[:lng] := algebra.projectionpath(r1_189,X_139,C_96,X_169);
    X_182:bat[:str] := algebra.projectionpath(X_148,X_87,X_13);
    X_185:bat[:str] := algebra.projectionpath(X_148,X_87,X_21);
    C_187 := algebra.subselect(X_185,A1,A1,true,false,false);
    C_191 := algebra.subselect(X_182,C_187,A2,A2,true,false,false);
    C_193 := algebra.subselect(X_182,C_187,A3,A3,true,false,false);
    X_194 := bat.mergecand(C_191,C_193);
    C_196 := algebra.subselect(X_182,C_187,A4,A4,true,false,false);
    X_197 := bat.mergecand(X_194,C_196);
    C_199 := algebra.subselect(X_182,C_187,A5,A5,true,false,false);
    X_200 := bat.mergecand(X_197,C_199);
    X_180 := calc.lng(A6,15,2);
    C_201 := algebra.thetasubselect(X_172,X_200,X_180,">=");
    X_175:bte := calc.+(A7,A8);
    X_176 := calc.lng(X_175,15,2);
    C_203 := algebra.thetasubselect(X_172,C_201,X_176,"<=");
    C_205 := algebra.subselect(X_161,C_203,A9,A10,true,true,false);
    C_206 := algebra.subselect(X_158,C_205,A11,A11,true,false,false);
    C_208 := algebra.subselect(X_158,C_205,A12,A12,true,false,false);
    X_209 := bat.mergecand(C_206,C_208);
    C_210 := algebra.subselect(X_155,X_209,A13,A13,true,false,false);
    C_225 := algebra.subselect(X_185,A14,A14,true,false,false);
    C_229 := algebra.subselect(X_182,C_225,A15,A15,true,false,false);
    C_231 := algebra.subselect(X_182,C_225,A16,A16,true,false,false);
    X_232 := bat.mergecand(C_229,C_231);
    C_234 := algebra.subselect(X_182,C_225,A17,A17,true,false,false);
    X_235 := bat.mergecand(X_232,C_234);
    C_237 := algebra.subselect(X_182,C_225,A18,A18,true,false,false);
    X_238 := bat.mergecand(X_235,C_237);
    X_222 := calc.lng(A19,15,2);
    C_239 := algebra.thetasubselect(X_172,X_238,X_222,">=");
    X_217:bte := calc.+(A20,A21);
    X_218 := calc.lng(X_217,15,2);
    C_241 := algebra.thetasubselect(X_172,C_239,X_218,"<=");
    C_243 := algebra.subselect(X_161,C_241,A22,A23,true,true,false);
    C_244 := algebra.subselect(X_158,C_243,A24,A24,true,false,false);
    C_246 := algebra.subselect(X_158,C_243,A25,A25,true,false,false);
    X_247 := bat.mergecand(C_244,C_246);
    C_248 := algebra.subselect(X_155,X_247,A26,A26,true,false,false);
    C_263 := algebra.subselect(X_185,A27,A27,true,false,false);
    C_267 := algebra.subselect(X_182,C_263,A28,A28,true,false,false);
    C_269 := algebra.subselect(X_182,C_263,A29,A29,true,false,false);
    X_270 := bat.mergecand(C_267,C_269);
    C_272 := algebra.subselect(X_182,C_263,A30,A30,true,false,false);
    X_273 := bat.mergecand(X_270,C_272);
    C_275 := algebra.subselect(X_182,C_263,A31,A31,true,false,false);
    X_276 := bat.mergecand(X_273,C_275);
    X_260 := calc.lng(A32,15,2);
    C_277 := algebra.thetasubselect(X_172,X_276,X_260,">=");
    X_255:bte := calc.+(A33,A34);
    X_256 := calc.lng(X_255,15,2);
    C_279 := algebra.thetasubselect(X_172,C_277,X_256,"<=");
    C_281 := algebra.subselect(X_161,C_279,A35,A36,true,true,false);
    C_282 := algebra.subselect(X_158,C_281,A37,A37,true,false,false);
    C_284 := algebra.subselect(X_158,C_281,A38,A38,true,false,false);
    X_285 := bat.mergecand(C_282,C_284);
    C_286 := algebra.subselect(X_155,X_285,A39,A39,true,false,false);
    X_287 := bat.mergecand(C_248,C_286);
    X_288 := bat.mergecand(C_210,X_287);
    X_289:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    (C_291,r1_332) := sql.bind(X_0,"sys","lineitem","l_extendedprice",2);
    X_293:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",1);
    X_294 := sql.delta(X_289,C_291,r1_332,X_293);
    X_298:bat[:lng] := algebra.projectionpath(X_288,r1_189,X_139,C_96,X_294);
    X_300 := calc.lng(A0,15,2);
    X_303:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    (C_305,r1_346) := sql.bind(X_0,"sys","lineitem","l_discount",2);
    X_307:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",1);
    X_308 := sql.delta(X_303,C_305,r1_346,X_307);
    X_312:bat[:lng] := algebra.projectionpath(X_288,r1_189,X_139,C_96,X_308);
    X_313:bat[:lng] := batcalc.-(X_300,X_312);
    X_316:bat[:lng] := batcalc.*(X_298,X_313);
    X_318:lng := aggr.sum(X_316);
    sql.resultSet("sys.L1","revenue","decimal",19,4,10,X_318);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

