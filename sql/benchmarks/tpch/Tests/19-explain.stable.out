stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1170 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:str,A6:bte,A7:sht,A8:sht,A9:int,A10:int,A11:str,A12:str,A13:str,A14:str,A15:str,A16:str,A17:str,A18:str,A19:bte,A20:sht,A21:sht,A22:int,A23:int,A24:str,A25:str,A26:str,A27:str,A28:str,A29:str,A30:str,A31:str,A32:bte,A33:sht,A34:sht,A35:int,A36:int,A37:str,A38:str,A39:str):void;
    X_42 := sql.mvc();
    X_43:bat[:oid,:oid]  := sql.tid(X_42,"sys","part");
    X_46:bat[:oid,:str]  := sql.bind(X_42,"sys","part","p_container",0);
    (X_49,r1_49) := sql.bind(X_42,"sys","part","p_container",2);
    X_52:bat[:oid,:str]  := sql.bind(X_42,"sys","part","p_container",1);
    X_54 := sql.delta(X_46,X_49,r1_49,X_52);
    X_55 := algebra.leftfetchjoin(X_43,X_54);
    X_56:bat[:oid,:str]  := sql.bind(X_42,"sys","part","p_brand",0);
    (X_58,r1_59) := sql.bind(X_42,"sys","part","p_brand",2);
    X_60:bat[:oid,:str]  := sql.bind(X_42,"sys","part","p_brand",1);
    X_61 := sql.delta(X_56,X_58,r1_59,X_60);
    X_62 := algebra.leftfetchjoin(X_43,X_61);
    X_63:bat[:oid,:int]  := sql.bind(X_42,"sys","part","p_size",0);
    (X_65,r1_67) := sql.bind(X_42,"sys","part","p_size",2);
    X_67:bat[:oid,:int]  := sql.bind(X_42,"sys","part","p_size",1);
    X_68 := sql.delta(X_63,X_65,r1_67,X_67);
    X_69 := algebra.leftfetchjoin(X_43,X_68);
    X_70 := calc.min(A22,A35);
    X_71 := calc.min(A9,X_70);
    X_72 := calc.max(A23,A36);
    X_73 := calc.max(A10,X_72);
    X_74 := algebra.subselect(X_69,X_71,X_73,true,true,false);
    X_77 := algebra.subselect(X_62,X_74,A1,A1,true,true,false);
    X_78 := algebra.subselect(X_62,X_74,A14,A14,true,true,false);
    X_79 := bat.mergecand(X_77,X_78);
    X_80 := algebra.subselect(X_62,X_74,A27,A27,true,true,false);
    X_81 := bat.mergecand(X_79,X_80);
    X_82 := algebra.subselect(X_55,X_81,A2,A2,true,true,false);
    X_83 := algebra.subselect(X_55,X_81,A3,A3,true,true,false);
    X_84 := bat.mergecand(X_82,X_83);
    X_85 := algebra.subselect(X_55,X_81,A4,A4,true,true,false);
    X_86 := bat.mergecand(X_84,X_85);
    X_87 := algebra.subselect(X_55,X_81,A5,A5,true,true,false);
    X_88 := bat.mergecand(X_86,X_87);
    X_89 := algebra.subselect(X_55,X_81,A15,A15,true,true,false);
    X_90 := bat.mergecand(X_88,X_89);
    X_91 := algebra.subselect(X_55,X_81,A16,A16,true,true,false);
    X_92 := bat.mergecand(X_90,X_91);
    X_93 := algebra.subselect(X_55,X_81,A17,A17,true,true,false);
    X_94 := bat.mergecand(X_92,X_93);
    X_95 := algebra.subselect(X_55,X_81,A18,A18,true,true,false);
    X_96 := bat.mergecand(X_94,X_95);
    X_97 := algebra.subselect(X_55,X_81,A28,A28,true,true,false);
    X_100 := bat.mergecand(X_96,X_97);
    X_101 := algebra.subselect(X_55,X_81,A29,A29,true,true,false);
    X_102 := bat.mergecand(X_100,X_101);
    X_103 := algebra.subselect(X_55,X_81,A30,A30,true,true,false);
    X_104 := bat.mergecand(X_102,X_103);
    X_105 := algebra.subselect(X_55,X_81,A31,A31,true,true,false);
    X_106 := bat.mergecand(X_104,X_105);
    X_107:bat[:oid,:int]  := sql.bind(X_42,"sys","part","p_partkey",0);
    (X_112,r1_133) := sql.bind(X_42,"sys","part","p_partkey",2);
    X_115:bat[:oid,:int]  := sql.bind(X_42,"sys","part","p_partkey",1);
    X_117 := sql.delta(X_107,X_112,r1_133,X_115);
    X_118:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_106,X_43,X_117);
    X_119:bat[:oid,:oid]  := sql.tid(X_42,"sys","lineitem");
    X_121:bat[:oid,:str]  := sql.bind(X_42,"sys","lineitem","l_shipmode",0);
    (X_123,r1_145) := sql.bind(X_42,"sys","lineitem","l_shipmode",2);
    X_125:bat[:oid,:str]  := sql.bind(X_42,"sys","lineitem","l_shipmode",1);
    X_126 := sql.delta(X_121,X_123,r1_145,X_125);
    X_127 := algebra.leftfetchjoin(X_119,X_126);
    X_128:bat[:oid,:str]  := sql.bind(X_42,"sys","lineitem","l_shipinstruct",0);
    (X_130,r1_153) := sql.bind(X_42,"sys","lineitem","l_shipinstruct",2);
    X_132:bat[:oid,:str]  := sql.bind(X_42,"sys","lineitem","l_shipinstruct",1);
    X_133 := sql.delta(X_128,X_130,r1_153,X_132);
    X_134 := algebra.leftfetchjoin(X_119,X_133);
    X_135 := algebra.subselect(X_134,A13,A13,true,true,false);
    X_138 := algebra.subselect(X_134,A26,A26,true,true,false);
    X_139 := bat.mergecand(X_135,X_138);
    X_140 := algebra.subselect(X_134,A39,A39,true,true,false);
    X_141 := bat.mergecand(X_139,X_140);
    X_142 := algebra.subselect(X_127,X_141,A11,A11,true,true,false);
    X_143 := algebra.subselect(X_127,X_141,A12,A12,true,true,false);
    X_144 := bat.mergecand(X_142,X_143);
    X_145 := algebra.subselect(X_127,X_141,A24,A24,true,true,false);
    X_146 := bat.mergecand(X_144,X_145);
    X_147 := algebra.subselect(X_127,X_141,A25,A25,true,true,false);
    X_148 := bat.mergecand(X_146,X_147);
    X_149 := algebra.subselect(X_127,X_141,A37,A37,true,true,false);
    X_150 := bat.mergecand(X_148,X_149);
    X_151 := algebra.subselect(X_127,X_141,A38,A38,true,true,false);
    X_152 := bat.mergecand(X_150,X_151);
    X_310 := algebra.leftfetchjoin(X_152,X_119);
    X_153:bat[:oid,:int]  := sql.bind(X_42,"sys","lineitem","l_partkey",0);
    (X_158,r1_189) := sql.bind(X_42,"sys","lineitem","l_partkey",2);
    X_161:bat[:oid,:int]  := sql.bind(X_42,"sys","lineitem","l_partkey",1);
    X_163 := sql.delta(X_153,X_158,r1_189,X_161);
    X_164:bat[:oid,:int]  := algebra.leftfetchjoin(X_310,X_163);
    (X_165,r1_197) := algebra.join(X_118,X_164);
    X_311 := algebra.leftfetchjoin(r1_197,X_152);
    X_167:bat[:oid,:str]  := algebra.leftfetchjoin(X_311,X_134);
    X_168:bat[:oid,:str]  := algebra.leftfetchjoin(X_311,X_127);
    X_312 := algebra.leftfetchjoin(X_165,X_106);
    X_169:bat[:oid,:int]  := algebra.leftfetchjoin(X_312,X_69);
    X_170:bat[:oid,:lng]  := sql.bind(X_42,"sys","lineitem","l_quantity",0);
    (X_172,r1_211) := sql.bind(X_42,"sys","lineitem","l_quantity",2);
    X_174:bat[:oid,:lng]  := sql.bind(X_42,"sys","lineitem","l_quantity",1);
    X_175 := sql.delta(X_170,X_172,r1_211,X_174);
    X_176:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_311,X_119,X_175);
    X_182:bat[:oid,:str]  := algebra.leftfetchjoin(X_312,X_55);
    X_183:bat[:oid,:str]  := algebra.leftfetchjoin(X_312,X_62);
    X_184 := algebra.subselect(X_183,A1,A1,true,true,false);
    X_187 := algebra.subselect(X_182,X_184,A2,A2,true,true,false);
    X_188 := algebra.subselect(X_182,X_184,A3,A3,true,true,false);
    X_189 := bat.mergecand(X_187,X_188);
    X_190 := algebra.subselect(X_182,X_184,A4,A4,true,true,false);
    X_191 := bat.mergecand(X_189,X_190);
    X_192 := algebra.subselect(X_182,X_184,A5,A5,true,true,false);
    X_193 := bat.mergecand(X_191,X_192);
    X_180 := calc.lng(A6,15,2);
    X_194 := algebra.thetasubselect(X_176,X_193,X_180,">=");
    X_177 := calc.+(A7,A8);
    X_178 := calc.lng(X_177,15,2);
    X_196 := algebra.thetasubselect(X_176,X_194,X_178,"<=");
    X_198 := algebra.subselect(X_169,X_196,A9,A10,true,true,false);
    X_199 := algebra.subselect(X_168,X_198,A11,A11,true,true,false);
    X_200 := algebra.subselect(X_168,X_198,A12,A12,true,true,false);
    X_201 := bat.mergecand(X_199,X_200);
    X_202 := algebra.subselect(X_167,X_201,A13,A13,true,true,false);
    X_208 := algebra.subselect(X_183,A14,A14,true,true,false);
    X_211 := algebra.subselect(X_182,X_208,A15,A15,true,true,false);
    X_212 := algebra.subselect(X_182,X_208,A16,A16,true,true,false);
    X_213 := bat.mergecand(X_211,X_212);
    X_214 := algebra.subselect(X_182,X_208,A17,A17,true,true,false);
    X_215 := bat.mergecand(X_213,X_214);
    X_216 := algebra.subselect(X_182,X_208,A18,A18,true,true,false);
    X_217 := bat.mergecand(X_215,X_216);
    X_207 := calc.lng(A19,15,2);
    X_218 := algebra.thetasubselect(X_176,X_217,X_207,">=");
    X_203 := calc.+(A20,A21);
    X_204 := calc.lng(X_203,15,2);
    X_220 := algebra.thetasubselect(X_176,X_218,X_204,"<=");
    X_222 := algebra.subselect(X_169,X_220,A22,A23,true,true,false);
    X_223 := algebra.subselect(X_168,X_222,A24,A24,true,true,false);
    X_224 := algebra.subselect(X_168,X_222,A25,A25,true,true,false);
    X_225 := bat.mergecand(X_223,X_224);
    X_226 := algebra.subselect(X_167,X_225,A26,A26,true,true,false);
    X_232 := algebra.subselect(X_183,A27,A27,true,true,false);
    X_235 := algebra.subselect(X_182,X_232,A28,A28,true,true,false);
    X_236 := algebra.subselect(X_182,X_232,A29,A29,true,true,false);
    X_237 := bat.mergecand(X_235,X_236);
    X_238 := algebra.subselect(X_182,X_232,A30,A30,true,true,false);
    X_239 := bat.mergecand(X_237,X_238);
    X_240 := algebra.subselect(X_182,X_232,A31,A31,true,true,false);
    X_241 := bat.mergecand(X_239,X_240);
    X_231 := calc.lng(A32,15,2);
    X_242 := algebra.thetasubselect(X_176,X_241,X_231,">=");
    X_227 := calc.+(A33,A34);
    X_228 := calc.lng(X_227,15,2);
    X_244 := algebra.thetasubselect(X_176,X_242,X_228,"<=");
    X_246 := algebra.subselect(X_169,X_244,A35,A36,true,true,false);
    X_247 := algebra.subselect(X_168,X_246,A37,A37,true,true,false);
    X_248 := algebra.subselect(X_168,X_246,A38,A38,true,true,false);
    X_249 := bat.mergecand(X_247,X_248);
    X_250 := algebra.subselect(X_167,X_249,A39,A39,true,true,false);
    X_251 := bat.mergecand(X_226,X_250);
    X_252 := bat.mergecand(X_202,X_251);
    X_313 := algebra.leftfetchjoin(X_252,r1_197);
    X_253:bat[:oid,:lng]  := sql.bind(X_42,"sys","lineitem","l_extendedprice",0);
    (X_258,r1_336) := sql.bind(X_42,"sys","lineitem","l_extendedprice",2);
    X_261:bat[:oid,:lng]  := sql.bind(X_42,"sys","lineitem","l_extendedprice",1);
    X_263 := sql.delta(X_253,X_258,r1_336,X_261);
    X_264:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_313,X_152,X_119,X_263);
    X_265 := calc.lng(A0,15,2);
    X_267:bat[:oid,:lng]  := sql.bind(X_42,"sys","lineitem","l_discount",0);
    (X_269,r1_351) := sql.bind(X_42,"sys","lineitem","l_discount",2);
    X_271:bat[:oid,:lng]  := sql.bind(X_42,"sys","lineitem","l_discount",1);
    X_272 := sql.delta(X_267,X_269,r1_351,X_271);
    X_273:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_313,X_152,X_119,X_272);
    X_274:bat[:oid,:lng]  := batcalc.-(X_265,X_273);
    X_275:bat[:oid,:lng]  := batcalc.*(X_264,X_274);
    X_276:lng  := aggr.sum(X_275);
    sql.exportValue(1,"sys.L1","revenue","decimal",19,4,9,X_276,"");
end s2_1;
# querylog.define("explain select\n\tsum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n\tlineitem,\n\tpart\nwhere\n\t(\n\t\tp_partkey = l_partkey\n\t\tand p_brand = \\'Brand#12\\'\n\t\tand p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n\t\tand l_quantity >= 1 and l_quantity <= 1 + 10\n\t\tand p_size between 1 and 5\n\t\tand l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n\t\tand l_shipinstruct = \\'DELIVER IN PERSON\\'\n\t)\n\tor\n\t(\n\t\tp_partkey = l_partkey\n\t\tand p_brand = \\'Brand#23\\'\n\t\tand p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n\t\tand l_quantity >= 10 and l_quantity <= 10 + 10\n\t\tand p_size between 1 and 10\n\t\tand l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n\t\tand l_shipinstruct = \\'DELIVER IN PERSON\\'\n\t)\n\tor\n\t(\n\t\tp_partkey = l_partkey\n\t\tand p_brand = \\'Brand#34\\'\n\t\tand p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n\t\tand l_quantity >= 20 and l_quantity <= 20 + 10\n\t\tand p_size between 1 and 15\n\t\tand l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n\t\tand l_shipinstruct = \\'DELIVER IN PERSON\\'\n\t);","sequential_pipe")

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

