stdout of test '02-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "02-explain.SQL.py" "02-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_acctbal,
#	s_name,
#	n_name,
#	p_partkey,
#	p_mfgr,
#	s_address,
#	s_phone,
#	s_comment
#from
#	part,
#	supplier,
#	partsupp,
#	nation,
#	region
#where
#	p_partkey = ps_partkey
#	and s_suppkey = ps_suppkey
#	and p_size = 15
#	and p_type like '%BRASS'
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'EUROPE'
#	and ps_supplycost = (
#		select
#			min(ps_supplycost)
#		from
#			partsupp,
#			supplier,
#			nation,
#			region
#		where
#			p_partkey = ps_partkey
#			and s_suppkey = ps_suppkey
#			and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 844 # length
function user.s2_1{autoCommit=true}(A0:int,A1:str,A2:str,A3:str):void;
    X_313:void := querylog.define("explain select\n\ts_acctbal,\n\ts_name,\n\tn_name,\n\tp_partkey,\n\tp_mfgr,\n\ts_address,\n\ts_phone,\n\ts_comment\nfrom\n\tpart,\n\tsupplier,\n\tpartsupp,\n\tnation,\n\tregion\nwhere\n\tp_partkey = ps_partkey\n\tand s_suppkey = ps_suppkey\n\tand p_size = 15\n\tand p_type like \\'%BRASS\\'\n\tand s_nationkey = n_nationkey\n\tand n_regionkey = r_regionkey\n\tand r_name = \\'EUROPE\\'\n\tand ps_supplycost = (\n\t\tselect\n\t\t\tmin(ps_supplycost)\n\t\tfrom\n\t\t\tpartsupp,\n\t\t\tsupplier,\n\t\t\tnation,\n\t\t\tregion\n\t\twhere\n\t\t\tp_partkey = ps_partkey\n\t\t\tand s_suppkey = ps_suppkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand n_regionkey = r_regionkey\n\t\t\tand r_name = \\'EUROPE\\'\n\t)\norder by\n\ts_acctbal desc,\n\tn_name,\n\ts_name,\n\tp_partkey\nlimit 100;","sequential_pipe",199);
    X_239 := bat.new(nil:oid,nil:str);
    X_247 := bat.append(X_239,"sys.supplier");
    X_257 := bat.append(X_247,"sys.supplier");
    X_266 := bat.append(X_257,"sys.nation");
    X_273 := bat.append(X_266,"sys.part");
    X_282 := bat.append(X_273,"sys.part");
    X_288 := bat.append(X_282,"sys.supplier");
    X_297 := bat.append(X_288,"sys.supplier");
    X_306 := bat.append(X_297,"sys.supplier");
    X_242 := bat.new(nil:oid,nil:str);
    X_249 := bat.append(X_242,"s_acctbal");
    X_258 := bat.append(X_249,"s_name");
    X_268 := bat.append(X_258,"n_name");
    X_275 := bat.append(X_268,"p_partkey");
    X_283 := bat.append(X_275,"p_mfgr");
    X_290 := bat.append(X_283,"s_address");
    X_298 := bat.append(X_290,"s_phone");
    X_307 := bat.append(X_298,"s_comment");
    X_243 := bat.new(nil:oid,nil:str);
    X_251 := bat.append(X_243,"decimal");
    X_260 := bat.append(X_251,"char");
    X_270 := bat.append(X_260,"char");
    X_277 := bat.append(X_270,"int");
    X_285 := bat.append(X_277,"char");
    X_292 := bat.append(X_285,"varchar");
    X_300 := bat.append(X_292,"char");
    X_309 := bat.append(X_300,"varchar");
    X_244 := bat.new(nil:oid,nil:int);
    X_253 := bat.append(X_244,15);
    X_262 := bat.append(X_253,25);
    X_271 := bat.append(X_262,25);
    X_279 := bat.append(X_271,32);
    X_286 := bat.append(X_279,25);
    X_294 := bat.append(X_286,40);
    X_302 := bat.append(X_294,15);
    X_310 := bat.append(X_302,101);
    X_246 := bat.new(nil:oid,nil:int);
    X_255 := bat.append(X_246,2);
    X_264 := bat.append(X_255,0);
    X_272 := bat.append(X_264,0);
    X_281 := bat.append(X_272,0);
    X_287 := bat.append(X_281,0);
    X_296 := bat.append(X_287,0);
    X_304 := bat.append(X_296,0);
    X_312 := bat.append(X_304,0);
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","nation");
    X_10:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",2);
    X_16:bat[:oid,:oid]  := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",1);
    X_18 := sql.projectdelta(X_7,X_10,X_13,r1_13,X_16);
    X_21:bat[:oid,:str]  := sql.bind(X_6,"sys","region","r_name",0);
    X_19:bat[:oid,:oid]  := sql.tid(X_6,"sys","region");
    X_380 := algebra.subselect(X_21,X_19,A3,A3,true,false,false);
    (X_23,r1_24) := sql.bind(X_6,"sys","region","r_name",2);
    X_381 := algebra.subselect(r1_24,nil:bat[:oid,:oid],A3,A3,true,false,false);
    X_25:bat[:oid,:str]  := sql.bind(X_6,"sys","region","r_name",1);
    X_383 := algebra.subselect(X_25,X_19,A3,A3,true,false,false);
    X_26 := sql.subdelta(X_380,X_19,X_23,X_381,X_383);
    (X_29,r1_34) := algebra.subjoin(X_18,X_26,nil:BAT,nil:BAT,false,nil:lng);
    X_34 := algebra.leftfetchjoin(X_29,X_7);
    X_35:bat[:oid,:oid] := sql.tid(X_6,"sys","supplier");
    X_37:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_39,r1_44) := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_41:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_42 := sql.projectdelta(X_35,X_37,X_39,r1_44,X_41);
    (X_43,r1_49) := algebra.subjoin(X_34,X_42,nil:BAT,nil:BAT,false,nil:lng);
    X_45 := algebra.leftfetchjoin(r1_49,X_35);
    X_46:bat[:oid,:oid] := sql.tid(X_6,"sys","partsupp");
    X_48:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_suppkey_fkey",0);
    (X_50,r1_56) := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_suppkey_fkey",2);
    X_52:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_suppkey_fkey",1);
    X_53 := sql.projectdelta(X_46,X_48,X_50,r1_56,X_52);
    (X_54,r1_61) := algebra.subjoin(X_45,X_53,nil:BAT,nil:BAT,false,nil:lng);
    X_56:bat[:oid,:int] := sql.bind(X_6,"sys","partsupp","ps_partkey",0);
    (X_58,r1_65) := sql.bind(X_6,"sys","partsupp","ps_partkey",2);
    X_60:bat[:oid,:int] := sql.bind(X_6,"sys","partsupp","ps_partkey",1);
    X_61 := sql.projectdelta(X_46,X_56,X_58,r1_65,X_60);
    X_62 := algebra.leftfetchjoin(r1_61,X_61);
    X_63:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_partkey_fkey",0);
    (X_65,r1_74) := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_partkey_fkey",2);
    X_67:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","partsupp","partsupp_ps_partkey_fkey",1);
    X_68 := sql.projectdelta(X_46,X_63,X_65,r1_74,X_67);
    X_71:bat[:oid,:str] := sql.bind(X_6,"sys","part","p_type",0);
    X_77:bat[:oid,:int] := sql.bind(X_6,"sys","part","p_size",0);
    X_69:bat[:oid,:oid] := sql.tid(X_6,"sys","part");
    X_384 := algebra.subselect(X_77,X_69,A0,A0,true,false,false);
    (X_79,r1_93) := sql.bind(X_6,"sys","part","p_size",2);
    X_385 := algebra.subselect(r1_93,nil:bat[:oid,:oid],A0,A0,true,false,false);
    X_81:bat[:oid,:int] := sql.bind(X_6,"sys","part","p_size",1);
    X_387 := algebra.subselect(X_81,X_69,A0,A0,true,false,false);
    X_82 := sql.subdelta(X_384,X_69,X_79,X_385,X_387);
    X_388 := algebra.likesubselect(X_71,X_82,A1,"",false);
    (X_73,r1_83) := sql.bind(X_6,"sys","part","p_type",2);
    X_389 := algebra.likesubselect(r1_83,nil:bat[:oid,:oid],A1,"",false);
    X_75:bat[:oid,:str] := sql.bind(X_6,"sys","part","p_type",1);
    X_391 := algebra.likesubselect(X_75,X_82,A1,"",false);
    X_86 := sql.subdelta(X_388,X_82,X_73,X_389,X_391);
    (X_87,r1_105) := algebra.subjoin(X_68,X_86,nil:BAT,nil:BAT,false,nil:lng);
    X_92 := algebra.leftfetchjoin(X_87,X_53);
    X_93:bat[:oid,:oid] := sql.tid(X_6,"sys","supplier");
    (X_95,r1_119) := algebra.subjoin(X_92,X_93,nil:BAT,nil:BAT,false,nil:lng);
    X_97:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_98,r1_122) := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_100:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_101 := sql.projectdelta(X_93,X_97,X_98,r1_122,X_100);
    X_102 := algebra.leftfetchjoin(r1_119,X_101);
    X_103:bat[:oid,:oid] := sql.tid(X_6,"sys","nation");
    (X_105,r1_130) := algebra.subjoin(X_102,X_103,nil:BAT,nil:BAT,false,nil:lng);
    X_107:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",0);
    (X_108,r1_133) := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",2);
    X_110:bat[:oid,:oid] := sql.bind_idxbat(X_6,"sys","nation","nation_n_regionkey_fkey",1);
    X_111 := sql.projectdelta(X_103,X_107,X_108,r1_133,X_110);
    X_112 := algebra.leftfetchjoin(r1_130,X_111);
    X_115:bat[:oid,:str] := sql.bind(X_6,"sys","region","r_name",0);
    X_113:bat[:oid,:oid] := sql.tid(X_6,"sys","region");
    X_392 := algebra.subselect(X_115,X_113,A2,A2,true,false,false);
    (X_116,r1_142) := sql.bind(X_6,"sys","region","r_name",2);
    X_393 := algebra.subselect(r1_142,nil:bat[:oid,:oid],A2,A2,true,false,false);
    X_118:bat[:oid,:str] := sql.bind(X_6,"sys","region","r_name",1);
    X_395 := algebra.subselect(X_118,X_113,A2,A2,true,false,false);
    X_119 := sql.subdelta(X_392,X_113,X_116,X_393,X_395);
    (X_123,r1_153) := algebra.subjoin(X_112,X_119,nil:BAT,nil:BAT,false,nil:lng);
    X_128:bat[:oid,:int] := sql.bind(X_6,"sys","part","p_partkey",0);
    (X_130,r1_160) := sql.bind(X_6,"sys","part","p_partkey",2);
    X_132:bat[:oid,:int] := sql.bind(X_6,"sys","part","p_partkey",1);
    X_133 := sql.projectdelta(X_86,X_128,X_130,r1_160,X_132);
    X_134:bat[:oid,:int] := algebra.leftfetchjoinPath(X_123,X_105,X_95,r1_105,X_133);
    (X_135,r1_170) := algebra.subjoin(X_62,X_134,nil:BAT,nil:BAT,false,nil:lng);
    X_137:bat[:oid,:oid] := batcalc.identity(X_134);
    X_138 := algebra.leftfetchjoin(r1_170,X_137);
    (X_139,r1_176,r2_176) := group.subgroupdone(X_138);
    X_142:bat[:oid,:lng] := sql.bind(X_6,"sys","partsupp","ps_supplycost",0);
    (X_144,r1_181) := sql.bind(X_6,"sys","partsupp","ps_supplycost",2);
    X_146:bat[:oid,:lng] := sql.bind(X_6,"sys","partsupp","ps_supplycost",1);
    X_147 := sql.projectdelta(X_46,X_142,X_144,r1_181,X_146);
    X_148:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_176,r1_170,X_123,X_105,X_95,X_87,X_147);
    X_149:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_135,r1_61,X_147);
    X_150:bat[:oid,:lng] := aggr.submin(X_149,X_139,r1_176,true);
    X_152:bat[:oid,:bit] := batcalc.==(X_148,X_150);
    X_153 := algebra.subselect(X_152,true,true,true,true,false);
    X_155:bat[:oid,:int] := algebra.leftfetchjoinPath(X_153,r1_176,r1_170,X_134);
    X_156:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_name",0);
    (X_158,r1_211) := sql.bind(X_6,"sys","supplier","s_name",2);
    X_160:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_name",1);
    X_161 := sql.projectdelta(X_93,X_156,X_158,r1_211,X_160);
    X_162:bat[:oid,:str] := algebra.leftfetchjoinPath(X_153,r1_176,r1_170,X_123,X_105,r1_119,X_161);
    X_163:bat[:oid,:str] := sql.bind(X_6,"sys","nation","n_name",0);
    (X_165,r1_224) := sql.bind(X_6,"sys","nation","n_name",2);
    X_167:bat[:oid,:str] := sql.bind(X_6,"sys","nation","n_name",1);
    X_168 := sql.projectdelta(X_103,X_163,X_165,r1_224,X_167);
    X_169:bat[:oid,:str] := algebra.leftfetchjoinPath(X_153,r1_176,r1_170,X_123,r1_130,X_168);
    X_170:bat[:oid,:lng] := sql.bind(X_6,"sys","supplier","s_acctbal",0);
    (X_172,r1_236) := sql.bind(X_6,"sys","supplier","s_acctbal",2);
    X_174:bat[:oid,:lng] := sql.bind(X_6,"sys","supplier","s_acctbal",1);
    X_175 := sql.projectdelta(X_93,X_170,X_172,r1_236,X_174);
    X_176:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_153,r1_176,r1_170,X_123,X_105,r1_119,X_175);
    X_210:bat[:oid,:str] := sql.bind(X_6,"sys","part","p_mfgr",0);
    (X_212,r1_302) := sql.bind(X_6,"sys","part","p_mfgr",2);
    X_214:bat[:oid,:str] := sql.bind(X_6,"sys","part","p_mfgr",1);
    X_215 := sql.projectdelta(X_86,X_210,X_212,r1_302,X_214);
    (X_177,r1_252) := algebra.firstn(X_176,100:wrd,false,false);
    (X_181,r1_258) := algebra.firstn(X_169,X_177,r1_252,100:wrd,true,false);
    (X_184,r1_263) := algebra.firstn(X_162,X_181,r1_258,100:wrd,true,false);
    X_186 := algebra.firstn(X_155,X_184,r1_263,100:wrd,true,false);
    X_187 := algebra.leftfetchjoin(X_186,X_155);
    X_188 := algebra.leftfetchjoin(X_186,X_162);
    X_189 := algebra.leftfetchjoin(X_186,X_169);
    X_190 := algebra.leftfetchjoin(X_186,X_176);
    (X_191,r1_272,r2_272) := algebra.subsort(X_190,true,false);
    (X_194,r1_275,r2_275) := algebra.subsort(X_189,r1_272,r2_272,false,false);
    (X_197,r1_278,r2_278) := algebra.subsort(X_188,r1_275,r2_275,false,false);
    (X_200,r1_281,r2_281) := algebra.subsort(X_187,r1_278,r2_278,false,false);
    X_203 := algebra.leftfetchjoin(r1_281,X_190);
    X_205 := algebra.subslice(X_203,0,99:wrd);
    X_216:bat[:oid,:str] := algebra.leftfetchjoinPath(X_205,r1_281,X_186,X_153,r1_176,r1_170,X_123,X_105,X_95,r1_105,X_215);
    X_217:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_address",0);
    (X_219,r1_320) := sql.bind(X_6,"sys","supplier","s_address",2);
    X_221:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_address",1);
    X_222 := sql.projectdelta(X_93,X_217,X_219,r1_320,X_221);
    X_223:bat[:oid,:str] := algebra.leftfetchjoinPath(X_205,r1_281,X_186,X_153,r1_176,r1_170,X_123,X_105,r1_119,X_222);
    X_224:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_phone",0);
    (X_226,r1_336) := sql.bind(X_6,"sys","supplier","s_phone",2);
    X_228:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_phone",1);
    X_229 := sql.projectdelta(X_93,X_224,X_226,r1_336,X_228);
    X_230:bat[:oid,:str] := algebra.leftfetchjoinPath(X_205,r1_281,X_186,X_153,r1_176,r1_170,X_123,X_105,r1_119,X_229);
    X_231:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_comment",0);
    (X_233,r1_352) := sql.bind(X_6,"sys","supplier","s_comment",2);
    X_235:bat[:oid,:str] := sql.bind(X_6,"sys","supplier","s_comment",1);
    X_236 := sql.projectdelta(X_93,X_231,X_233,r1_352,X_235);
    X_237:bat[:oid,:str] := algebra.leftfetchjoinPath(X_205,r1_281,X_186,X_153,r1_176,r1_170,X_123,X_105,r1_119,X_236);
    X_206 := algebra.leftfetchjoin(X_205,X_203);
    X_207:bat[:oid,:str] := algebra.leftfetchjoinPath(X_205,r1_281,X_188);
    X_208:bat[:oid,:str] := algebra.leftfetchjoinPath(X_205,r1_281,X_189);
    X_209:bat[:oid,:int] := algebra.leftfetchjoinPath(X_205,r1_281,X_187);
    sql.resultSet(X_306,X_307,X_309,X_310,X_312,X_206,X_207,X_208,X_209,X_216,X_223,X_230,X_237);
end user.s2_1;

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

