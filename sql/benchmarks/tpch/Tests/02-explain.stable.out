stdout of test '02-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "02-explain.SQL.py" "02-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_acctbal,
#	s_name,
#	n_name,
#	p_partkey,
#	p_mfgr,
#	s_address,
#	s_phone,
#	s_comment
#from
#	part,
#	supplier,
#	partsupp,
#	nation,
#	region
#where
#	p_partkey = ps_partkey
#	and s_suppkey = ps_suppkey
#	and p_size = 15
#	and p_type like '%BRASS'
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'EUROPE'
#	and ps_supplycost = (
#		select
#			min(ps_supplycost)
#		from
#			partsupp,
#			supplier,
#			nation,
#			region
#		where
#			p_partkey = ps_partkey
#			and s_suppkey = ps_suppkey
#			and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 759 # length
function user.s4_1():void;
    X_517:void := querylog.define("explain select\n s_acctbal,\n s_name,\n n_name,\n p_partkey,\n p_mfgr,\n s_address,\n s_phone,\n s_comment\nfrom\n part,\n supplier,\n partsupp,\n nation,\n region\nwhere\n p_partkey = ps_partkey\n and s_suppkey = ps_suppkey\n and p_size = 15\n and p_type like \\'%BRASS\\'\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'EUROPE\\'\n and ps_supplycost = (\n select\n min(ps_supplycost)\n from\n partsupp,\n supplier,\n nation,\n region\n where\n p_partkey = ps_partkey\n and s_suppkey = ps_suppkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'EUROPE\\'\n )\norder by\n s_acctbal desc,\n n_name,\n s_name,\n p_partkey\nlimit 100;","sequential_pipe",137);
    X_444 := bat.new(nil:str);
    X_451 := bat.append(X_444,"sys.supplier");
    X_461 := bat.append(X_451,"sys.supplier");
    X_470 := bat.append(X_461,"sys.nation");
    X_477 := bat.append(X_470,"sys.part");
    X_486 := bat.append(X_477,"sys.part");
    X_492 := bat.append(X_486,"sys.supplier");
    X_501 := bat.append(X_492,"sys.supplier");
    X_510 := bat.append(X_501,"sys.supplier");
    X_446 := bat.new(nil:str);
    X_453 := bat.append(X_446,"s_acctbal");
    X_462 := bat.append(X_453,"s_name");
    X_472 := bat.append(X_462,"n_name");
    X_479 := bat.append(X_472,"p_partkey");
    X_487 := bat.append(X_479,"p_mfgr");
    X_494 := bat.append(X_487,"s_address");
    X_502 := bat.append(X_494,"s_phone");
    X_511 := bat.append(X_502,"s_comment");
    X_447 := bat.new(nil:str);
    X_455 := bat.append(X_447,"decimal");
    X_464 := bat.append(X_455,"char");
    X_474 := bat.append(X_464,"char");
    X_481 := bat.append(X_474,"int");
    X_489 := bat.append(X_481,"char");
    X_496 := bat.append(X_489,"varchar");
    X_504 := bat.append(X_496,"char");
    X_513 := bat.append(X_504,"varchar");
    X_448 := bat.new(nil:int);
    X_457 := bat.append(X_448,15);
    X_466 := bat.append(X_457,25);
    X_475 := bat.append(X_466,25);
    X_483 := bat.append(X_475,32);
    X_490 := bat.append(X_483,25);
    X_498 := bat.append(X_490,40);
    X_506 := bat.append(X_498,15);
    X_514 := bat.append(X_506,101);
    X_450 := bat.new(nil:int);
    X_459 := bat.append(X_450,2);
    X_468 := bat.append(X_459,0);
    X_476 := bat.append(X_468,0);
    X_485 := bat.append(X_476,0);
    X_491 := bat.append(X_485,0);
    X_500 := bat.append(X_491,0);
    X_508 := bat.append(X_500,0);
    X_516 := bat.append(X_508,0);
    X_0 := sql.mvc();
    C_3:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_6:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",0);
    (X_11,X_12:bat[:oid]) := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",2);
    X_9:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",1);
    X_15 := sql.projectdelta(C_3,X_6,X_11,X_12,X_9);
    X_18:bat[:str] := sql.bind(X_0,"sys","region","r_name",0);
    C_16:bat[:oid] := sql.tid(X_0,"sys","region");
    C_26 := algebra.subselect(X_18,C_16,"EUROPE","EUROPE",true,false,false);
    (X_32,X_33) := algebra.subjoin(X_15,C_26,nil:BAT,nil:BAT,false,nil:lng);
    X_37 := algebra.projection(X_32,C_3);
    C_41:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_43:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_46,X_47:bat[:oid]) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_45:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_49 := sql.projectdelta(C_41,X_43,X_46,X_47,X_45);
    (X_50,X_51) := algebra.subjoin(X_37,X_49,nil:BAT,nil:BAT,false,nil:lng);
    X_56 := algebra.projection(X_51,C_41);
    C_58:bat[:oid] := sql.tid(X_0,"sys","partsupp");
    X_74:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_suppkey_fkey",0);
    (X_77,X_78:bat[:oid]) := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_suppkey_fkey",2);
    X_76:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_suppkey_fkey",1);
    X_80 := sql.projectdelta(C_58,X_74,X_77,X_78,X_76);
    (X_81,X_82) := algebra.subjoin(X_56,X_80,nil:BAT,nil:BAT,false,nil:lng);
    X_60:bat[:int] := sql.bind(X_0,"sys","partsupp","ps_partkey",0);
    X_93:bat[:int] := algebra.projectionpath(X_82,C_58,X_60);
    X_110:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_fkey",0);
    (X_113,X_114:bat[:oid]) := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_fkey",2);
    X_112:bat[:oid] := sql.bind_idxbat(X_0,"sys","partsupp","partsupp_ps_partkey_fkey",1);
    X_116 := sql.projectdelta(C_58,X_110,X_113,X_114,X_112);
    X_133:bat[:str] := sql.bind(X_0,"sys","part","p_type",0);
    X_140:bat[:int] := sql.bind(X_0,"sys","part","p_size",0);
    C_117:bat[:oid] := sql.tid(X_0,"sys","part");
    C_148 := algebra.subselect(X_140,C_117,15,15,true,false,false);
    C_155 := algebra.likesubselect(X_133,C_148,"%BRASS","",false);
    (X_161,X_162) := algebra.subjoin(X_116,C_155,nil:BAT,nil:BAT,false,nil:lng);
    X_167 := algebra.projection(X_161,X_80);
    (X_217,X_218) := algebra.subjoin(X_167,C_41,nil:BAT,nil:BAT,false,nil:lng);
    X_237 := algebra.projection(X_218,X_49);
    (X_253,X_254) := algebra.subjoin(X_237,C_3,nil:BAT,nil:BAT,false,nil:lng);
    X_276 := algebra.projection(X_254,X_15);
    (X_290,X_291) := algebra.subjoin(X_276,C_26,nil:BAT,nil:BAT,false,nil:lng);
    X_119:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_299:bat[:int] := algebra.projectionpath(X_290,X_253,X_217,X_162,C_155,X_119);
    (X_319,X_320) := algebra.subjoin(X_93,X_299,nil:BAT,nil:BAT,false,nil:lng);
    X_316:bat[:oid] := batcalc.identity(X_299);
    X_339 := algebra.projection(X_320,X_316);
    (X_340,X_341,X_342) := group.subgroupdone(X_339);
    X_126:bat[:str] := sql.bind(X_0,"sys","part","p_mfgr",0);
    X_176:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",0);
    X_183:bat[:str] := sql.bind(X_0,"sys","supplier","s_address",0);
    X_190:bat[:str] := sql.bind(X_0,"sys","supplier","s_phone",0);
    X_197:bat[:lng] := sql.bind(X_0,"sys","supplier","s_acctbal",0);
    X_204:bat[:str] := sql.bind(X_0,"sys","supplier","s_comment",0);
    X_67:bat[:lng] := sql.bind(X_0,"sys","partsupp","ps_supplycost",0);
    X_73 := algebra.projection(C_58,X_67);
    X_350:bat[:lng] := algebra.projectionpath(X_341,X_320,X_290,X_253,X_217,X_161,X_73);
    X_240:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_328:bat[:lng] := algebra.projectionpath(X_319,X_82,X_73);
    X_353:bat[:lng] := aggr.submin(X_328,X_340,X_341,true);
    X_355:bat[:bit] := batcalc.==(X_350,X_353);
    C_358 := algebra.subselect(X_355,true,true,true,true,false);
    X_360:bat[:int] := algebra.projectionpath(C_358,X_341,X_320,X_299);
    X_362:bat[:str] := algebra.projectionpath(C_358,X_341,X_320,X_290,X_253,X_218,C_41,X_176);
    X_365:bat[:lng] := algebra.projectionpath(C_358,X_341,X_320,X_290,X_253,X_218,C_41,X_197);
    X_368:bat[:str] := algebra.projectionpath(C_358,X_341,X_320,X_290,X_254,C_3,X_240);
    (C_374,X_375) := algebra.firstn(X_365,100,false,false);
    (C_378,X_379) := algebra.firstn(X_368,C_374,X_375,100,true,false);
    (C_382,X_383) := algebra.firstn(X_362,C_378,X_379,100,true,false);
    C_386 := algebra.firstn(X_360,C_382,X_383,100,true,false);
    X_391 := algebra.projection(C_386,X_360);
    X_389 := algebra.projection(C_386,X_362);
    X_390 := algebra.projection(C_386,X_368);
    X_388 := algebra.projection(C_386,X_365);
    (X_406,X_407,X_408) := algebra.subsort(X_388,true,false);
    (X_410,X_411,X_412) := algebra.subsort(X_390,X_407,X_408,false,false);
    (X_413,X_414,X_415) := algebra.subsort(X_389,X_411,X_412,false,false);
    (X_416,X_417,X_418) := algebra.subsort(X_391,X_414,X_415,false,false);
    X_419 := algebra.projection(X_417,X_388);
    X_434 := algebra.subslice(X_419,0,99:lng);
    X_439:bat[:str] := algebra.projectionpath(X_434,X_417,C_386,C_358,X_341,X_320,X_290,X_253,X_217,X_162,C_155,X_126);
    X_440:bat[:str] := algebra.projectionpath(X_434,X_417,C_386,C_358,X_341,X_320,X_290,X_253,X_218,C_41,X_183);
    X_441:bat[:str] := algebra.projectionpath(X_434,X_417,C_386,C_358,X_341,X_320,X_290,X_253,X_218,C_41,X_190);
    X_442:bat[:str] := algebra.projectionpath(X_434,X_417,C_386,C_358,X_341,X_320,X_290,X_253,X_218,C_41,X_204);
    X_435 := algebra.projection(X_434,X_419);
    X_436:bat[:str] := algebra.projectionpath(X_434,X_417,X_389);
    X_437:bat[:str] := algebra.projectionpath(X_434,X_417,X_390);
    X_438:bat[:int] := algebra.projectionpath(X_434,X_417,X_391);
    sql.resultSet(X_510,X_511,X_513,X_514,X_516,X_435,X_436,X_437,X_438,X_439,X_440,X_441,X_442);
end user.s4_1;
#inline               actions= 0 time=10 usec 
#candidates           actions= 1 time=191 usec 
#remap                actions= 2 time=359 usec 
#costModel            actions= 1 time=180 usec 
#coercions            actions= 8 time=205 usec 
#evaluate             actions=10 time=265 usec 
#emptybind            actions= 0 time=13 usec 
#pushselect           actions=19 time=231 usec 
#aliases              actions=34 time=190 usec 
#mergetable           actions= 0 time=217 usec 
#deadcode             actions=37 time=162 usec 
#aliases              actions= 0 time=38 usec 
#constants            actions=46 time=202 usec 
#commonTerms          actions=20 time=166 usec 
#projectionpath       actions=70 time=218 usec 
#reorder              actions= 1 time=287 usec 
#deadcode             actions=90 time=136 usec 
#reduce               actions=263 time=230 usec 
#matpack              actions= 0 time=14 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=8 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=105 usec 
#garbageCollector     actions= 1 time=122 usec 
#total                actions= 1 time=3696 usec 

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

