stdout of test '02-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "02-explain.SQL.py" "02-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_acctbal,
#	s_name,
#	n_name,
#	p_partkey,
#	p_mfgr,
#	s_address,
#	s_phone,
#	s_comment
#from
#	part,
#	supplier,
#	partsupp,
#	nation,
#	region
#where
#	p_partkey = ps_partkey
#	and s_suppkey = ps_suppkey
#	and p_size = 15
#	and p_type like '%BRASS'
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'EUROPE'
#	and ps_supplycost = (
#		select
#			min(ps_supplycost)
#		from
#			partsupp,
#			supplier,
#			nation,
#			region
#		where
#			p_partkey = ps_partkey
#			and s_suppkey = ps_suppkey
#			and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 759 # length
function user.s2_1():void;
    X_210:void := querylog.define("explain select\n s_acctbal,\n s_name,\n n_name,\n p_partkey,\n p_mfgr,\n s_address,\n s_phone,\n s_comment\nfrom\n part,\n supplier,\n partsupp,\n nation,\n region\nwhere\n p_partkey = ps_partkey\n and s_suppkey = ps_suppkey\n and p_size = 15\n and p_type like \\'%BRASS\\'\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'EUROPE\\'\n and ps_supplycost = (\n select\n min(ps_supplycost)\n from\n partsupp,\n supplier,\n nation,\n region\n where\n p_partkey = ps_partkey\n and s_suppkey = ps_suppkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'EUROPE\\'\n )\norder by\n s_acctbal desc,\n n_name,\n s_name,\n p_partkey\nlimit 100;","sequential_pipe",137);
    X_151 := bat.new(nil:oid,nil:str);
    X_159 := bat.append(X_151,"sys.supplier");
    X_166 := bat.append(X_159,"sys.supplier");
    X_173 := bat.append(X_166,"sys.nation");
    X_179 := bat.append(X_173,"sys.part");
    X_187 := bat.append(X_179,"sys.part");
    X_192 := bat.append(X_187,"sys.supplier");
    X_199 := bat.append(X_192,"sys.supplier");
    X_204 := bat.append(X_199,"sys.supplier");
    X_154 := bat.new(nil:oid,nil:str);
    X_161 := bat.append(X_154,"s_acctbal");
    X_167 := bat.append(X_161,"s_name");
    X_175 := bat.append(X_167,"n_name");
    X_181 := bat.append(X_175,"p_partkey");
    X_188 := bat.append(X_181,"p_mfgr");
    X_193 := bat.append(X_188,"s_address");
    X_200 := bat.append(X_193,"s_phone");
    X_205 := bat.append(X_200,"s_comment");
    X_155 := bat.new(nil:oid,nil:str);
    X_162 := bat.append(X_155,"decimal");
    X_168 := bat.append(X_162,"char");
    X_176 := bat.append(X_168,"char");
    X_182 := bat.append(X_176,"int");
    X_189 := bat.append(X_182,"char");
    X_194 := bat.append(X_189,"varchar");
    X_201 := bat.append(X_194,"char");
    X_206 := bat.append(X_201,"varchar");
    X_156 := bat.new(nil:oid,nil:int);
    X_164 := bat.append(X_156,15);
    X_170 := bat.append(X_164,25);
    X_177 := bat.append(X_170,25);
    X_184 := bat.append(X_177,32);
    X_190 := bat.append(X_184,25);
    X_196 := bat.append(X_190,40);
    X_202 := bat.append(X_196,15);
    X_207 := bat.append(X_202,101);
    X_158 := bat.new(nil:oid,nil:int);
    X_165 := bat.append(X_158,2);
    X_172 := bat.append(X_165,0);
    X_178 := bat.append(X_172,0);
    X_186 := bat.append(X_178,0);
    X_191 := bat.append(X_186,0);
    X_198 := bat.append(X_191,0);
    X_203 := bat.append(X_198,0);
    X_209 := bat.append(X_203,0);
    X_4 := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4,"sys","nation");
    X_8:bat[:oid] := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",0);
    (X_11,r1_12) := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",2);
    X_14:bat[:oid] := sql.bind_idxbat(X_4,"sys","nation","nation_n_regionkey_fkey",1);
    X_16 := sql.projectdelta(C_5,X_8,X_11,r1_12,X_14);
    X_19:bat[:str] := sql.bind(X_4,"sys","region","r_name",0);
    C_17:bat[:oid] := sql.tid(X_4,"sys","region");
    C_21 := algebra.subselect(X_19,C_17,"EUROPE","EUROPE",true,false,false);
    (X_24,r1_34) := algebra.subjoin(X_16,C_21,nil:BAT,nil:BAT,false,nil:lng);
    X_28 := algebra.projection(X_24,C_5);
    C_29:bat[:oid] := sql.tid(X_4,"sys","supplier");
    X_31:bat[:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_33,r1_44) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_35:bat[:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_36 := sql.projectdelta(C_29,X_31,X_33,r1_44,X_35);
    (X_37,r1_49) := algebra.subjoin(X_28,X_36,nil:BAT,nil:BAT,false,nil:lng);
    X_39 := algebra.projection(r1_49,C_29);
    C_40:bat[:oid] := sql.tid(X_4,"sys","partsupp");
    X_42:bat[:oid] := sql.bind_idxbat(X_4,"sys","partsupp","partsupp_ps_suppkey_fkey",0);
    (X_44,r1_56) := sql.bind_idxbat(X_4,"sys","partsupp","partsupp_ps_suppkey_fkey",2);
    X_46:bat[:oid] := sql.bind_idxbat(X_4,"sys","partsupp","partsupp_ps_suppkey_fkey",1);
    X_47 := sql.projectdelta(C_40,X_42,X_44,r1_56,X_46);
    (X_48,r1_61) := algebra.subjoin(X_39,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_50:bat[:int] := sql.bind(X_4,"sys","partsupp","ps_partkey",0);
    X_52:bat[:int] := algebra.projectionpath(r1_61,C_40,X_50);
    X_53:bat[:oid] := sql.bind_idxbat(X_4,"sys","partsupp","partsupp_ps_partkey_fkey",0);
    (X_55,r1_74) := sql.bind_idxbat(X_4,"sys","partsupp","partsupp_ps_partkey_fkey",2);
    X_57:bat[:oid] := sql.bind_idxbat(X_4,"sys","partsupp","partsupp_ps_partkey_fkey",1);
    X_58 := sql.projectdelta(C_40,X_53,X_55,r1_74,X_57);
    X_61:bat[:str] := sql.bind(X_4,"sys","part","p_type",0);
    X_64:bat[:int] := sql.bind(X_4,"sys","part","p_size",0);
    C_59:bat[:oid] := sql.tid(X_4,"sys","part");
    C_66 := algebra.subselect(X_64,C_59,15,15,true,false,false);
    C_67 := algebra.likesubselect(X_61,C_66,"%BRASS","",false);
    (X_68,r1_105) := algebra.subjoin(X_58,C_67,nil:BAT,nil:BAT,false,nil:lng);
    X_70 := algebra.projection(X_68,X_47);
    (X_71,r1_119) := algebra.subjoin(X_70,C_29,nil:BAT,nil:BAT,false,nil:lng);
    X_73 := algebra.projection(r1_119,X_36);
    (X_74,r1_130) := algebra.subjoin(X_73,C_5,nil:BAT,nil:BAT,false,nil:lng);
    X_76 := algebra.projection(r1_130,X_16);
    (X_77,r1_153) := algebra.subjoin(X_76,C_21,nil:BAT,nil:BAT,false,nil:lng);
    X_79:bat[:int] := sql.bind(X_4,"sys","part","p_partkey",0);
    X_81:bat[:int] := algebra.projectionpath(X_77,X_74,X_71,r1_105,C_67,X_79);
    (X_82,r1_170) := algebra.subjoin(X_52,X_81,nil:BAT,nil:BAT,false,nil:lng);
    X_84:bat[:oid] := batcalc.identity(X_81);
    X_85 := algebra.projection(r1_170,X_84);
    (X_86,r1_176,r2_176) := group.subgroupdone(X_85);
    X_89:bat[:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    X_91 := algebra.projection(C_40,X_89);
    X_92:bat[:lng] := algebra.projectionpath(r1_176,r1_170,X_77,X_74,X_71,X_68,X_91);
    X_93:bat[:lng] := algebra.projectionpath(X_82,r1_61,X_91);
    X_94:bat[:lng] := aggr.submin(X_93,X_86,r1_176,true);
    X_95:bat[:bit] := batcalc.==(X_92,X_94);
    C_96 := algebra.subselect(X_95,true,true,true,true,false);
    X_97:bat[:int] := algebra.projectionpath(C_96,r1_176,r1_170,X_81);
    X_98:bat[:str] := sql.bind(X_4,"sys","supplier","s_name",0);
    X_100:bat[:str] := algebra.projectionpath(C_96,r1_176,r1_170,X_77,X_74,r1_119,C_29,X_98);
    X_101:bat[:str] := sql.bind(X_4,"sys","nation","n_name",0);
    X_103:bat[:str] := algebra.projectionpath(C_96,r1_176,r1_170,X_77,r1_130,C_5,X_101);
    X_104:bat[:lng] := sql.bind(X_4,"sys","supplier","s_acctbal",0);
    X_106:bat[:lng] := algebra.projectionpath(C_96,r1_176,r1_170,X_77,X_74,r1_119,C_29,X_104);
    X_138:bat[:str] := sql.bind(X_4,"sys","part","p_mfgr",0);
    (C_109,r1_252) := algebra.firstn(X_106,100,false,false);
    (C_111,r1_258) := algebra.firstn(X_103,C_109,r1_252,100,true,false);
    (C_113,r1_263) := algebra.firstn(X_100,C_111,r1_258,100,true,false);
    C_115 := algebra.firstn(X_97,C_113,r1_263,100,true,false);
    X_116 := algebra.projection(C_115,X_97);
    X_117 := algebra.projection(C_115,X_100);
    X_118 := algebra.projection(C_115,X_103);
    X_119 := algebra.projection(C_115,X_106);
    (X_120,r1_272,r2_272) := algebra.subsort(X_119,true,false);
    (X_123,r1_275,r2_275) := algebra.subsort(X_118,r1_272,r2_272,false,false);
    (X_126,r1_278,r2_278) := algebra.subsort(X_117,r1_275,r2_275,false,false);
    (X_129,r1_281,r2_281) := algebra.subsort(X_116,r1_278,r2_278,false,false);
    X_132 := algebra.projection(r1_281,X_119);
    X_133 := algebra.subslice(X_132,0,99:wrd);
    X_140:bat[:str] := algebra.projectionpath(X_133,r1_281,C_115,C_96,r1_176,r1_170,X_77,X_74,X_71,r1_105,C_67,X_138);
    X_141:bat[:str] := sql.bind(X_4,"sys","supplier","s_address",0);
    X_143:bat[:str] := algebra.projectionpath(X_133,r1_281,C_115,C_96,r1_176,r1_170,X_77,X_74,r1_119,C_29,X_141);
    X_144:bat[:str] := sql.bind(X_4,"sys","supplier","s_phone",0);
    X_146:bat[:str] := algebra.projectionpath(X_133,r1_281,C_115,C_96,r1_176,r1_170,X_77,X_74,r1_119,C_29,X_144);
    X_147:bat[:str] := sql.bind(X_4,"sys","supplier","s_comment",0);
    X_149:bat[:str] := algebra.projectionpath(X_133,r1_281,C_115,C_96,r1_176,r1_170,X_77,X_74,r1_119,C_29,X_147);
    X_134 := algebra.projection(X_133,X_132);
    X_135:bat[:str] := algebra.projectionpath(X_133,r1_281,X_117);
    X_136:bat[:str] := algebra.projectionpath(X_133,r1_281,X_118);
    X_137:bat[:int] := algebra.projectionpath(X_133,r1_281,X_116);
    sql.resultSet(X_204,X_205,X_206,X_207,X_209,X_134,X_135,X_136,X_137,X_140,X_143,X_146,X_149);
end user.s2_1;

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

