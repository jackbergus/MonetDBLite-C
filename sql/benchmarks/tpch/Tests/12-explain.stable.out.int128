stdout of test '12-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_shipmode,
#	sum(case
#		when o_orderpriority = '1-URGENT'
#			or o_orderpriority = '2-HIGH'
#			then 1
#		else 0
#	end) as high_line_count,
#	sum(case
#		when o_orderpriority <> '1-URGENT'
#			and o_orderpriority <> '2-HIGH'
#			then 1
#		else 0
#	end) as low_line_count
#from
#	orders,
#	lineitem
#where
#	o_orderkey = l_orderkey
#	and l_shipmode in ('MAIL', 'SHIP')
#	and l_commitdate < l_receiptdate
#	and l_shipdate < l_commitdate
#	and l_receiptdate >= date '1994-01-01'
#	and l_receiptdate < date '1994-01-01' + interval '1' year
% .explain # table_name
% mal # name
% clob # type
% 684 # length
function user.s4_1():void;
    X_166:void := querylog.define("explain select\n l_shipmode,\n sum(case\n when o_orderpriority = \\'1-URGENT\\'\n or o_orderpriority = \\'2-HIGH\\'\n then 1\n else 0\n end) as high_line_count,\n sum(case\n when o_orderpriority <> \\'1-URGENT\\'\n and o_orderpriority <> \\'2-HIGH\\'\n then 1\n else 0\n end) as low_line_count\nfrom\n orders,\n lineitem\nwhere\n o_orderkey = l_orderkey\n and l_shipmode in (\\'MAIL\\', \\'SHIP\\')\n and l_commitdate < l_receiptdate\n and l_shipdate < l_commitdate\n and l_receiptdate >= date \\'1994-01-01\\'\n and l_receiptdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n l_shipmode\norder by\n l_shipmode;","sequential_pipe",68);
    X_133 := bat.new(nil:str);
    X_140 := bat.append(X_133,"sys.lineitem");
    X_150 := bat.append(X_140,"sys.L4");
    X_159 := bat.append(X_150,"sys.L7");
    X_135 := bat.new(nil:str);
    X_142 := bat.append(X_135,"l_shipmode");
    X_152 := bat.append(X_142,"high_line_count");
    X_161 := bat.append(X_152,"low_line_count");
    X_136 := bat.new(nil:str);
    X_144 := bat.append(X_136,"char");
    X_154 := bat.append(X_144,"hugeint");
    X_163 := bat.append(X_154,"hugeint");
    X_137 := bat.new(nil:int);
    X_146 := bat.append(X_137,10);
    X_156 := bat.append(X_146,128);
    X_164 := bat.append(X_156,128);
    X_139 := bat.new(nil:int);
    X_148 := bat.append(X_139,0);
    X_158 := bat.append(X_148,0);
    X_165 := bat.append(X_158,0);
    X_0 := sql.mvc();
    X_28:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",0);
    X_21:bat[:date] := sql.bind(X_0,"sys","lineitem","l_receiptdate",0);
    X_14:bat[:date] := sql.bind(X_0,"sys","lineitem","l_commitdate",0);
    X_4:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    X_49:bat[:bit] := batcalc.>(X_14,X_4);
    X_42:bat[:bit] := batcalc.<(X_14,X_21);
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    C_45 := algebra.subselect(X_42,C_1,true,true,true,true,false);
    C_51 := algebra.subselect(X_49,C_45,true,true,true,true,false);
    X_55:date := mtime.addmonths("1994-01-01",12);
    C_56 := algebra.subselect(X_21,C_51,"1994-01-01",X_55,true,false,false);
    C_58 := algebra.subselect(X_28,C_56,"MAIL","MAIL",true,false,false);
    C_60 := algebra.subselect(X_28,C_56,"SHIP","SHIP",true,false,false);
    X_61 := bat.mergecand(C_58,C_60);
    X_35:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_38,X_39:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_66 := sql.projectdelta(X_61,X_35,X_38,X_39,X_37);
    C_67:bat[:oid] := sql.tid(X_0,"sys","orders");
    (X_76,X_77) := algebra.subjoin(X_66,C_67,nil:BAT,nil:BAT,false,nil:lng);
    X_84:bat[:str] := algebra.projectionpath(X_76,X_61,X_28);
    (X_118,X_119,X_120) := group.subgroupdone(X_84);
    X_121 := algebra.projection(X_119,X_84);
    X_69:bat[:str] := sql.bind(X_0,"sys","orders","o_orderpriority",0);
    X_86:bat[:str] := algebra.projectionpath(X_77,C_67,X_69);
    X_89:bat[:bit] := batcalc.==(X_86,"1-URGENT");
    X_93:bat[:bit] := batcalc.==(X_86,"2-HIGH");
    X_94:bat[:bit] := batcalc.or(X_89,X_93);
    X_96:bat[:bit] := batcalc.isnil(X_94);
    X_100:bat[:bit] := batcalc.ifthenelse(X_96,false,X_94);
    X_104:bat[:bte] := batcalc.ifthenelse(X_100,1,0);
    X_122:bat[:hge] := aggr.subsum(X_104,X_118,X_119,true,true);
    X_106:bat[:bit] := batcalc.!=(X_86,"1-URGENT");
    X_109:bat[:bit] := batcalc.!=(X_86,"2-HIGH");
    X_110:bat[:bit] := batcalc.and(X_106,X_109);
    X_112:bat[:bit] := batcalc.isnil(X_110);
    X_114:bat[:bit] := batcalc.ifthenelse(X_112,false,X_110);
    X_117:bat[:bte] := batcalc.ifthenelse(X_114,1,0);
    X_125:bat[:hge] := aggr.subsum(X_117,X_118,X_119,true,true);
    (X_126,X_127,X_128) := algebra.subsort(X_121,false,false);
    X_129 := algebra.projection(X_127,X_121);
    X_130 := algebra.projection(X_127,X_122);
    X_131 := algebra.projection(X_127,X_125);
    sql.resultSet(X_159,X_161,X_163,X_164,X_165,X_129,X_130,X_131);
end user.s4_1;
#inline               actions= 0 time=6 usec 
#candidates           actions= 1 time=52 usec 
#remap                actions=20 time=871 usec 
#costModel            actions= 1 time=190 usec 
#coercions            actions= 2 time=190 usec 
#evaluate             actions=17 time=230 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions= 7 time=211 usec 
#aliases              actions=27 time=200 usec 
#mergetable           actions= 0 time=198 usec 
#deadcode             actions=11 time=186 usec 
#aliases              actions= 0 time=12 usec 
#constants            actions=27 time=207 usec 
#commonTerms          actions= 6 time=142 usec 
#projectionpath       actions= 2 time=164 usec 
#reorder              actions= 1 time=166 usec 
#deadcode             actions= 8 time=138 usec 
#reduce               actions=112 time=173 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=131 usec 
#garbageCollector     actions= 1 time=141 usec 
#total                actions= 1 time=3702 usec 

# 22:53:28 >  
# 22:53:28 >  "Done."
# 22:53:28 >  

