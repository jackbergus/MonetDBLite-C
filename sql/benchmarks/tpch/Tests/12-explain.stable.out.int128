stdout of test '12-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_shipmode,
#	sum(case
#		when o_orderpriority = '1-URGENT'
#			or o_orderpriority = '2-HIGH'
#			then 1
#		else 0
#	end) as high_line_count,
#	sum(case
#		when o_orderpriority <> '1-URGENT'
#			and o_orderpriority <> '2-HIGH'
#			then 1
#		else 0
#	end) as low_line_count
#from
#	orders,
#	lineitem
#where
#	o_orderkey = l_orderkey
#	and l_shipmode in ('MAIL', 'SHIP')
#	and l_commitdate < l_receiptdate
#	and l_shipdate < l_commitdate
#	and l_receiptdate >= date '1994-01-01'
#	and l_receiptdate < date '1994-01-01' + interval '1' year
% .explain # table_name
% mal # name
% clob # type
% 711 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:bte,A3:bte,A4:str,A5:str,A6:bte,A7:bte,A8:str,A9:str,A10:date,A11:date,A12:int):void;
    X_114 := bat.new(nil:oid,nil:str);
    X_122 := bat.append(X_114,"sys.lineitem");
    X_132 := bat.append(X_122,"sys.L1");
    X_141 := bat.append(X_132,"sys.L2");
    X_117 := bat.new(nil:oid,nil:str);
    X_124 := bat.append(X_117,"l_shipmode");
    X_134 := bat.append(X_124,"high_line_count");
    X_143 := bat.append(X_134,"low_line_count");
    X_118 := bat.new(nil:oid,nil:str);
    X_126 := bat.append(X_118,"varchar");
    X_136 := bat.append(X_126,"hugeint");
    X_145 := bat.append(X_136,"hugeint");
    X_119 := bat.new(nil:oid,nil:int);
    X_128 := bat.append(X_119,10);
    X_138 := bat.append(X_128,8);
    X_146 := bat.append(X_138,8);
    X_121 := bat.new(nil:oid,nil:int);
    X_130 := bat.append(X_121,0);
    X_140 := bat.append(X_130,0);
    X_147 := bat.append(X_140,0);
    X_15 := sql.mvc();
    X_19:bat[:oid,:str]  := sql.bind(X_15,"sys","lineitem","l_shipmode",0);
    X_27:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_receiptdate",0);
    X_35:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_commitdate",0);
    (X_37,r1_43) := sql.bind(X_15,"sys","lineitem","l_commitdate",2);
    X_39:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_commitdate",1);
    X_40 := sql.delta(X_35,X_37,r1_43,X_39);
    X_41 := X_40;
    X_42:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_shipdate",0);
    (X_44,r1_50) := sql.bind(X_15,"sys","lineitem","l_shipdate",2);
    X_48:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_shipdate",1);
    X_49 := sql.delta(X_42,X_44,r1_50,X_48);
    X_50 := X_49;
    X_55:bat[:oid,:bit]  := batcalc.>(X_41,X_50);
    (X_29,r1_32) := sql.bind(X_15,"sys","lineitem","l_receiptdate",2);
    X_31:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_receiptdate",1);
    X_32 := sql.delta(X_27,X_29,r1_32,X_31);
    X_33 := X_32;
    X_51:bat[:oid,:bit]  := batcalc.<(X_41,X_33);
    X_16:bat[:oid,:oid]  := sql.tid(X_15,"sys","lineitem");
    X_52 := algebra.subselect(X_51,X_16,true,true,true,true,false);
    X_56 := algebra.subselect(X_55,X_52,true,true,true,true,false);
    X_34 := mtime.addmonths(A11,A12);
    X_169 := algebra.subselect(X_27,X_56,A10,X_34,true,false,false);
    X_170 := algebra.subselect(r1_32,nil:bat[:oid,:oid],A10,X_34,true,false,false);
    X_172 := algebra.subselect(X_31,X_56,A10,X_34,true,false,false);
    X_57 := sql.subdelta(X_169,X_56,X_29,X_170,X_172);
    X_173 := algebra.subselect(X_19,X_57,A8,A8,true,true,false);
    (X_22,r1_22) := sql.bind(X_15,"sys","lineitem","l_shipmode",2);
    X_174 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A8,A8,true,true,false);
    X_25:bat[:oid,:str]  := sql.bind(X_15,"sys","lineitem","l_shipmode",1);
    X_176 := algebra.subselect(X_25,X_57,A8,A8,true,true,false);
    X_58 := sql.subdelta(X_173,X_57,X_22,X_174,X_176);
    X_177 := algebra.subselect(X_19,X_57,A9,A9,true,true,false);
    X_178 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A9,A9,true,true,false);
    X_180 := algebra.subselect(X_25,X_57,A9,A9,true,true,false);
    X_59 := sql.subdelta(X_177,X_57,X_22,X_178,X_180);
    X_60 := bat.mergecand(X_58,X_59);
    X_61:bat[:oid,:oid]  := sql.bind_idxbat(X_15,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_64,r1_74) := sql.bind_idxbat(X_15,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_67:bat[:oid,:oid]  := sql.bind_idxbat(X_15,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_69 := sql.projectdelta(X_60,X_61,X_64,r1_74,X_67);
    X_70:bat[:oid,:oid]  := sql.tid(X_15,"sys","orders");
    (X_72,r1_84) := algebra.subjoin(X_69,X_70,nil:BAT,nil:BAT,true,nil:lng);
    X_76 := sql.projectdelta(X_60,X_19,X_22,r1_22,X_25);
    X_77 := algebra.leftfetchjoin(X_72,X_76);
    (X_78,r1_90,r2_90) := group.subgroupdone(X_77);
    X_81 := algebra.leftfetchjoin(r1_90,X_77);
    X_87:bat[:oid,:str]  := sql.bind(X_15,"sys","orders","o_orderpriority",0);
    (X_90,r1_102) := sql.bind(X_15,"sys","orders","o_orderpriority",2);
    X_92:bat[:oid,:str]  := sql.bind(X_15,"sys","orders","o_orderpriority",1);
    X_93 := sql.projectdelta(X_70,X_87,X_90,r1_102,X_92);
    X_94 := algebra.leftfetchjoin(r1_84,X_93);
    X_95:bat[:oid,:bit]  := batcalc.==(X_94,A0);
    X_96:bat[:oid,:bit]  := batcalc.==(X_94,A1);
    X_97:bat[:oid,:bit]  := batcalc.or(X_95,X_96);
    X_98:bat[:oid,:bit]  := batcalc.isnil(X_97);
    X_99:bat[:oid,:bit]  := batcalc.ifthenelse(X_98,false,X_97);
    X_100:bat[:oid,:bte]  := batcalc.ifthenelse(X_99,A2,A3);
    X_101:bat[:oid,:hge]  := aggr.subsum(X_100,X_78,r1_90,true,true);
    X_104:bat[:oid,:bit]  := batcalc.!=(X_94,A4);
    X_105:bat[:oid,:bit]  := batcalc.!=(X_94,A5);
    X_106:bat[:oid,:bit]  := batcalc.and(X_104,X_105);
    X_107:bat[:oid,:bit]  := batcalc.isnil(X_106);
    X_109:bat[:oid,:bit]  := batcalc.ifthenelse(X_107,false,X_106);
    X_110:bat[:oid,:bte]  := batcalc.ifthenelse(X_109,A6,A7);
    X_111:bat[:oid,:hge]  := aggr.subsum(X_110,X_78,r1_90,true,true);
    (X_82,r1_94,r2_94) := algebra.subsort(X_81,false,false);
    X_86 := algebra.leftfetchjoin(r1_94,X_81);
    X_103 := algebra.leftfetchjoin(r1_94,X_101);
    X_112 := algebra.leftfetchjoin(r1_94,X_111);
    sql.resultSet(X_141,X_143,X_145,X_146,X_147,X_86,X_103,X_112);
end s2_1;
# querylog.define("explain select\n\tl_shipmode,\n\tsum(case\n\t\twhen o_orderpriority = \\'1-URGENT\\'\n\t\t\tor o_orderpriority = \\'2-HIGH\\'\n\t\t\tthen 1\n\t\telse 0\n\tend) as high_line_count,\n\tsum(case\n\t\twhen o_orderpriority <> \\'1-URGENT\\'\n\t\t\tand o_orderpriority <> \\'2-HIGH\\'\n\t\t\tthen 1\n\t\telse 0\n\tend) as low_line_count\nfrom\n\torders,\n\tlineitem\nwhere\n\to_orderkey = l_orderkey\n\tand l_shipmode in (\\'MAIL\\', \\'SHIP\\')\n\tand l_commitdate < l_receiptdate\n\tand l_shipdate < l_commitdate\n\tand l_receiptdate >= date \\'1994-01-01\\'\n\tand l_receiptdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tl_shipmode\norder by\n\tl_shipmode;","sequential_pipe")

# 22:53:28 >  
# 22:53:28 >  "Done."
# 22:53:28 >  

