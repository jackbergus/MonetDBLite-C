stdout of test '12-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_shipmode,
#	sum(case
#		when o_orderpriority = '1-URGENT'
#			or o_orderpriority = '2-HIGH'
#			then 1
#		else 0
#	end) as high_line_count,
#	sum(case
#		when o_orderpriority <> '1-URGENT'
#			and o_orderpriority <> '2-HIGH'
#			then 1
#		else 0
#	end) as low_line_count
#from
#	orders,
#	lineitem
#where
#	o_orderkey = l_orderkey
#	and l_shipmode in ('MAIL', 'SHIP')
#	and l_commitdate < l_receiptdate
#	and l_shipdate < l_commitdate
#	and l_receiptdate >= date '1994-01-01'
#	and l_receiptdate < date '1994-01-01' + interval '1' year
% .explain # table_name
% mal # name
% clob # type
% 731 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str,A2:bte,A3:bte,A4:str,A5:str,A6:bte,A7:bte,A8:str,A9:str,A10:date,A11:date,A12:int):void;
    X_133:void := querylog.define("explain select\n\tl_shipmode,\n\tsum(case\n\t\twhen o_orderpriority = \\'1-URGENT\\'\n\t\t\tor o_orderpriority = \\'2-HIGH\\'\n\t\t\tthen 1\n\t\telse 0\n\tend) as high_line_count,\n\tsum(case\n\t\twhen o_orderpriority <> \\'1-URGENT\\'\n\t\t\tand o_orderpriority <> \\'2-HIGH\\'\n\t\t\tthen 1\n\t\telse 0\n\tend) as low_line_count\nfrom\n\torders,\n\tlineitem\nwhere\n\to_orderkey = l_orderkey\n\tand l_shipmode in (\\'MAIL\\', \\'SHIP\\')\n\tand l_commitdate < l_receiptdate\n\tand l_shipdate < l_commitdate\n\tand l_receiptdate >= date \\'1994-01-01\\'\n\tand l_receiptdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n\tl_shipmode\norder by\n\tl_shipmode;","sequential_pipe",92);
    X_101 := bat.new(nil:oid,nil:str);
    X_109 := bat.append(X_101,"sys.lineitem");
    X_117 := bat.append(X_109,"sys.L1");
    X_126 := bat.append(X_117,"sys.L2");
    X_104 := bat.new(nil:oid,nil:str);
    X_111 := bat.append(X_104,"l_shipmode");
    X_119 := bat.append(X_111,"high_line_count");
    X_128 := bat.append(X_119,"low_line_count");
    X_105 := bat.new(nil:oid,nil:str);
    X_112 := bat.append(X_105,"char");
    X_121 := bat.append(X_112,"hugeint");
    X_130 := bat.append(X_121,"hugeint");
    X_106 := bat.new(nil:oid,nil:int);
    X_114 := bat.append(X_106,10);
    X_123 := bat.append(X_114,128);
    X_131 := bat.append(X_123,128);
    X_108 := bat.new(nil:oid,nil:int);
    X_116 := bat.append(X_108,0);
    X_125 := bat.append(X_116,0);
    X_132 := bat.append(X_125,0);
    X_15 := sql.mvc();
    X_19:bat[:oid,:str]  := sql.bind(X_15,"sys","lineitem","l_shipmode",0);
    X_27:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_receiptdate",0);
    X_34:bat[:oid,:date] := sql.bind(X_15,"sys","lineitem","l_commitdate",0);
    (C_36,r1_43) := sql.bind(X_15,"sys","lineitem","l_commitdate",2);
    X_38:bat[:oid,:date] := sql.bind(X_15,"sys","lineitem","l_commitdate",1);
    X_39 := sql.delta(X_34,C_36,r1_43,X_38);
    X_40:bat[:oid,:date] := sql.bind(X_15,"sys","lineitem","l_shipdate",0);
    (C_42,r1_50) := sql.bind(X_15,"sys","lineitem","l_shipdate",2);
    X_44:bat[:oid,:date] := sql.bind(X_15,"sys","lineitem","l_shipdate",1);
    X_45 := sql.delta(X_40,C_42,r1_50,X_44);
    X_49:bat[:oid,:bit] := batcalc.>(X_39,X_45);
    (C_29,r1_32) := sql.bind(X_15,"sys","lineitem","l_receiptdate",2);
    X_31:bat[:oid,:date]  := sql.bind(X_15,"sys","lineitem","l_receiptdate",1);
    X_32 := sql.delta(X_27,C_29,r1_32,X_31);
    X_46:bat[:oid,:bit] := batcalc.<(X_39,X_32);
    C_16:bat[:oid,:oid] := sql.tid(X_15,"sys","lineitem");
    C_47 := algebra.subselect(X_46,C_16,true,true,true,true,false);
    C_50 := algebra.subselect(X_49,C_47,true,true,true,true,false);
    X_33:date := mtime.addmonths(A11,A12);
    C_156 := algebra.subselect(X_27,C_50,A10,X_33,true,false,false);
    C_157 := algebra.subselect(r1_32,nil:bat[:oid,:oid],A10,X_33,true,false,false);
    C_159 := algebra.subselect(X_31,C_50,A10,X_33,true,false,false);
    C_51 := sql.subdelta(C_156,C_50,C_29,C_157,C_159);
    C_160 := algebra.subselect(X_19,C_51,A8,A8,true,false,false);
    (C_22,r1_22) := sql.bind(X_15,"sys","lineitem","l_shipmode",2);
    C_161 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A8,A8,true,false,false);
    X_25:bat[:oid,:str]  := sql.bind(X_15,"sys","lineitem","l_shipmode",1);
    C_162 := algebra.subselect(X_25,C_51,A8,A8,true,false,false);
    C_52 := sql.subdelta(C_160,C_51,C_22,C_161,C_162);
    C_163 := algebra.subselect(X_19,C_51,A9,A9,true,false,false);
    C_164 := algebra.subselect(r1_22,nil:bat[:oid,:oid],A9,A9,true,false,false);
    C_165 := algebra.subselect(X_25,C_51,A9,A9,true,false,false);
    C_53 := sql.subdelta(C_163,C_51,C_22,C_164,C_165);
    X_54 := bat.mergecand(C_52,C_53);
    X_55:bat[:oid,:oid] := sql.bind_idxbat(X_15,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_57,r1_72) := sql.bind_idxbat(X_15,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_59:bat[:oid,:oid] := sql.bind_idxbat(X_15,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_60 := sql.projectdelta(X_54,X_55,X_57,r1_72,X_59);
    C_61:bat[:oid,:oid] := sql.tid(X_15,"sys","orders");
    (X_63,r1_80) := algebra.subjoin(X_60,C_61,nil:BAT,nil:BAT,false,nil:lng);
    X_67 := sql.projectdelta(X_54,X_19,C_22,r1_22,X_25);
    X_68 := algebra.leftfetchjoin(X_63,X_67);
    (X_69,r1_87,r2_87) := group.subgroupdone(X_68);
    X_72 := algebra.leftfetchjoin(r1_87,X_68);
    X_77:bat[:oid,:str] := sql.bind(X_15,"sys","orders","o_orderpriority",0);
    (C_79,r1_99) := sql.bind(X_15,"sys","orders","o_orderpriority",2);
    X_81:bat[:oid,:str] := sql.bind(X_15,"sys","orders","o_orderpriority",1);
    X_82 := sql.projectdelta(C_61,X_77,C_79,r1_99,X_81);
    X_83 := algebra.leftfetchjoin(r1_80,X_82);
    X_84:bat[:oid,:bit] := batcalc.==(X_83,A0);
    X_85:bat[:oid,:bit] := batcalc.==(X_83,A1);
    X_86:bat[:oid,:bit] := batcalc.or(X_84,X_85);
    X_87:bat[:oid,:bit] := batcalc.isnil(X_86);
    X_88:bat[:oid,:bit] := batcalc.ifthenelse(X_87,false,X_86);
    X_89:bat[:oid,:bte] := batcalc.ifthenelse(X_88,A2,A3);
    X_90:bat[:oid,:hge] := aggr.subsum(X_89,X_69,r1_87,true,true);
    X_92:bat[:oid,:bit] := batcalc.!=(X_83,A4);
    X_93:bat[:oid,:bit] := batcalc.!=(X_83,A5);
    X_94:bat[:oid,:bit] := batcalc.and(X_92,X_93);
    X_95:bat[:oid,:bit] := batcalc.isnil(X_94);
    X_96:bat[:oid,:bit] := batcalc.ifthenelse(X_95,false,X_94);
    X_97:bat[:oid,:bte] := batcalc.ifthenelse(X_96,A6,A7);
    X_98:bat[:oid,:hge] := aggr.subsum(X_97,X_69,r1_87,true,true);
    (X_73,r1_91,r2_91) := algebra.subsort(X_72,false,false);
    X_76 := algebra.leftfetchjoin(r1_91,X_72);
    X_91 := algebra.leftfetchjoin(r1_91,X_90);
    X_99 := algebra.leftfetchjoin(r1_91,X_98);
    sql.resultSet(X_126,X_128,X_130,X_131,X_132,X_76,X_91,X_99);
end user.s2_1;

# 22:53:28 >  
# 22:53:28 >  "Done."
# 22:53:28 >  

