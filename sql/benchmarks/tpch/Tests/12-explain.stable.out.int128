stdout of test '12-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_shipmode,
#	sum(case
#		when o_orderpriority = '1-URGENT'
#			or o_orderpriority = '2-HIGH'
#			then 1
#		else 0
#	end) as high_line_count,
#	sum(case
#		when o_orderpriority <> '1-URGENT'
#			and o_orderpriority <> '2-HIGH'
#			then 1
#		else 0
#	end) as low_line_count
#from
#	orders,
#	lineitem
#where
#	o_orderkey = l_orderkey
#	and l_shipmode in ('MAIL', 'SHIP')
#	and l_commitdate < l_receiptdate
#	and l_shipdate < l_commitdate
#	and l_receiptdate >= date '1994-01-01'
#	and l_receiptdate < date '1994-01-01' + interval '1' year
% .explain # table_name
% mal # name
% clob # type
% 684 # length
function user.s2_1():void;
    X_129:void := querylog.define("explain select\n l_shipmode,\n sum(case\n when o_orderpriority = \\'1-URGENT\\'\n or o_orderpriority = \\'2-HIGH\\'\n then 1\n else 0\n end) as high_line_count,\n sum(case\n when o_orderpriority <> \\'1-URGENT\\'\n and o_orderpriority <> \\'2-HIGH\\'\n then 1\n else 0\n end) as low_line_count\nfrom\n orders,\n lineitem\nwhere\n o_orderkey = l_orderkey\n and l_shipmode in (\\'MAIL\\', \\'SHIP\\')\n and l_commitdate < l_receiptdate\n and l_shipdate < l_commitdate\n and l_receiptdate >= date \\'1994-01-01\\'\n and l_receiptdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n l_shipmode\norder by\n l_shipmode;","sequential_pipe",93);
    X_97 := bat.new(nil:oid,nil:str);
    X_105 := bat.append(X_97,"sys.lineitem");
    X_113 := bat.append(X_105,"sys.L1");
    X_122 := bat.append(X_113,"sys.L2");
    X_100 := bat.new(nil:oid,nil:str);
    X_107 := bat.append(X_100,"l_shipmode");
    X_115 := bat.append(X_107,"high_line_count");
    X_124 := bat.append(X_115,"low_line_count");
    X_101 := bat.new(nil:oid,nil:str);
    X_108 := bat.append(X_101,"char");
    X_117 := bat.append(X_108,"hugeint");
    X_126 := bat.append(X_117,"hugeint");
    X_102 := bat.new(nil:oid,nil:int);
    X_110 := bat.append(X_102,10);
    X_119 := bat.append(X_110,128);
    X_127 := bat.append(X_119,128);
    X_104 := bat.new(nil:oid,nil:int);
    X_112 := bat.append(X_104,0);
    X_121 := bat.append(X_112,0);
    X_128 := bat.append(X_121,0);
    X_9 := sql.mvc();
    X_13:bat[:str] := sql.bind(X_9,"sys","lineitem","l_shipmode",0);
    X_21:bat[:date] := sql.bind(X_9,"sys","lineitem","l_receiptdate",0);
    X_28:bat[:date] := sql.bind(X_9,"sys","lineitem","l_commitdate",0);
    (C_30,r1_42) := sql.bind(X_9,"sys","lineitem","l_commitdate",2);
    X_32:bat[:date] := sql.bind(X_9,"sys","lineitem","l_commitdate",1);
    X_33 := sql.delta(X_28,C_30,r1_42,X_32);
    X_34:bat[:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    (C_36,r1_49) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    X_38:bat[:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    X_39 := sql.delta(X_34,C_36,r1_49,X_38);
    X_44:bat[:bit] := batcalc.>(X_33,X_39);
    (C_23,r1_31) := sql.bind(X_9,"sys","lineitem","l_receiptdate",2);
    X_25:bat[:date] := sql.bind(X_9,"sys","lineitem","l_receiptdate",1);
    X_26 := sql.delta(X_21,C_23,r1_31,X_25);
    X_40:bat[:bit] := batcalc.<(X_33,X_26);
    C_10:bat[:oid] := sql.tid(X_9,"sys","lineitem");
    C_41 := algebra.subselect(X_40,C_10,true,true,true,true,false);
    C_45 := algebra.subselect(X_44,C_41,true,true,true,true,false);
    X_27:date := mtime.addmonths("1994-01-01",12);
    C_138 := algebra.subselect(X_21,C_45,"1994-01-01",X_27,true,false,false);
    C_139 := algebra.subselect(r1_31,nil:bat[:oid],"1994-01-01",X_27,true,false,false);
    C_141 := algebra.subselect(X_25,C_45,"1994-01-01",X_27,true,false,false);
    C_46 := sql.subdelta(C_138,C_45,C_23,C_139,C_141);
    C_142 := algebra.subselect(X_13,C_46,"MAIL","MAIL",true,false,false);
    (C_16,r1_21) := sql.bind(X_9,"sys","lineitem","l_shipmode",2);
    C_143 := algebra.subselect(r1_21,nil:bat[:oid],"MAIL","MAIL",true,false,false);
    X_19:bat[:str] := sql.bind(X_9,"sys","lineitem","l_shipmode",1);
    C_144 := algebra.subselect(X_19,C_46,"MAIL","MAIL",true,false,false);
    C_47 := sql.subdelta(C_142,C_46,C_16,C_143,C_144);
    C_145 := algebra.subselect(X_13,C_46,"SHIP","SHIP",true,false,false);
    C_146 := algebra.subselect(r1_21,nil:bat[:oid],"SHIP","SHIP",true,false,false);
    C_147 := algebra.subselect(X_19,C_46,"SHIP","SHIP",true,false,false);
    C_48 := sql.subdelta(C_145,C_46,C_16,C_146,C_147);
    X_49 := bat.mergecand(C_47,C_48);
    X_50:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_52,r1_71) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_54:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_55 := sql.projectdelta(X_49,X_50,X_52,r1_71,X_54);
    C_56:bat[:oid] := sql.tid(X_9,"sys","orders");
    (X_58,r1_79) := algebra.subjoin(X_55,C_56,nil:BAT,nil:BAT,false,nil:lng);
    X_62 := sql.projectdelta(X_49,X_13,C_16,r1_21,X_19);
    X_63 := algebra.projection(X_58,X_62);
    (X_64,r1_86,r2_86) := group.subgroupdone(X_63);
    X_67 := algebra.projection(r1_86,X_63);
    X_73:bat[:str] := sql.bind(X_9,"sys","orders","o_orderpriority",0);
    (C_75,r1_99) := sql.bind(X_9,"sys","orders","o_orderpriority",2);
    X_77:bat[:str] := sql.bind(X_9,"sys","orders","o_orderpriority",1);
    X_78 := sql.projectdelta(C_56,X_73,C_75,r1_99,X_77);
    X_79 := algebra.projection(r1_79,X_78);
    X_80:bat[:bit] := batcalc.==(X_79,"1-URGENT");
    X_81:bat[:bit] := batcalc.==(X_79,"2-HIGH");
    X_82:bat[:bit] := batcalc.or(X_80,X_81);
    X_83:bat[:bit] := batcalc.isnil(X_82);
    X_84:bat[:bit] := batcalc.ifthenelse(X_83,false,X_82);
    X_85:bat[:bte] := batcalc.ifthenelse(X_84,1,0);
    X_86:bat[:hge] := aggr.subsum(X_85,X_64,r1_86,true,true);
    X_88:bat[:bit] := batcalc.!=(X_79,"1-URGENT");
    X_89:bat[:bit] := batcalc.!=(X_79,"2-HIGH");
    X_90:bat[:bit] := batcalc.and(X_88,X_89);
    X_91:bat[:bit] := batcalc.isnil(X_90);
    X_92:bat[:bit] := batcalc.ifthenelse(X_91,false,X_90);
    X_93:bat[:bte] := batcalc.ifthenelse(X_92,1,0);
    X_94:bat[:hge] := aggr.subsum(X_93,X_64,r1_86,true,true);
    X_68 := bat.setKey(X_67,true);
    (X_69,r1_91,r2_91) := algebra.subsort(X_68,false,false);
    X_72 := algebra.projection(r1_91,X_68);
    X_87 := algebra.projection(r1_91,X_86);
    X_95 := algebra.projection(r1_91,X_94);
    sql.resultSet(X_122,X_124,X_126,X_127,X_128,X_72,X_87,X_95);
end user.s2_1;

# 22:53:28 >  
# 22:53:28 >  "Done."
# 22:53:28 >  

