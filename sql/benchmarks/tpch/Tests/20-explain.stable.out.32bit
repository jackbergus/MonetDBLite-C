stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 103 # length
function user.main():void;
    X_567 := bat.new(nil:str);
    X_574 := bat.append(X_567,"sys.supplier");
    X_584 := bat.append(X_574,"sys.supplier");
    X_569 := bat.new(nil:str);
    X_576 := bat.append(X_569,"s_name");
    X_585 := bat.append(X_576,"s_address");
    X_570 := bat.new(nil:str);
    X_578 := bat.append(X_570,"char");
    X_586 := bat.append(X_578,"varchar");
    X_571 := bat.new(nil:int);
    X_580 := bat.append(X_571,25);
    X_588 := bat.append(X_580,40);
    X_573 := bat.new(nil:int);
    X_582 := bat.append(X_573,0);
    X_590 := bat.append(X_582,0);
    X_328 := sql.mvc();
    C_329:bat[:oid] := sql.tid(X_328,"sys","supplier");
    X_332:bat[:int] := sql.bind(X_328,"sys","supplier","s_suppkey",0);
    X_341 := algebra.projection(C_329,X_332);
    X_342 := bat.mirror(X_341);
    C_343:bat[:oid] := sql.tid(X_328,"sys","partsupp");
    X_345:bat[:int] := sql.bind(X_328,"sys","partsupp","ps_partkey",0);
    X_351 := algebra.projection(C_343,X_345);
    X_352 := bat.mirror(X_351);
    C_353:bat[:oid] := sql.tid(X_328,"sys","part");
    X_355:bat[:str] := sql.bind(X_328,"sys","part","p_name",0);
    X_361 := algebra.projection(C_353,X_355);
    C_365 := algebra.likesubselect(X_361,nil:BAT,"forest%","",false);
    X_368:bat[:int] := sql.bind(X_328,"sys","part","p_partkey",0);
    X_375:bat[:int] := algebra.projectionpath(C_365,C_353,X_368);
    (X_376,r1_60) := algebra.subjoin(X_351,X_375,nil:BAT,nil:BAT,false,nil:lng);
    C_379 := algebra.subinter(X_352,X_376,nil:BAT,nil:BAT,false,nil:lng);
    X_380:bat[:lng] := sql.bind_idxbat(X_328,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_382,r1_66) := sql.bind_idxbat(X_328,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_384:bat[:lng] := sql.bind_idxbat(X_328,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_385 := sql.delta(X_380,X_382,r1_66,X_384);
    X_387:bat[:lng] := algebra.projectionpath(C_379,C_343,X_385);
    C_388:bat[:oid] := sql.tid(X_328,"sys","lineitem");
    X_390:bat[:date] := sql.bind(X_328,"sys","lineitem","l_shipdate",0);
    X_396 := algebra.projection(C_388,X_390);
    X_400:date := mtime.addmonths("1994-01-01",12);
    C_401 := algebra.subselect(X_396,"1994-01-01",X_400,true,false,false);
    X_405:bat[:int] := sql.bind(X_328,"sys","lineitem","l_partkey",0);
    X_412:bat[:int] := algebra.projectionpath(C_401,C_388,X_405);
    X_413:bat[:lng] := batmkey.hash(X_412);
    X_418:bat[:int] := sql.bind(X_328,"sys","lineitem","l_suppkey",0);
    X_425:bat[:int] := algebra.projectionpath(C_401,C_388,X_418);
    X_426:bat[:lng] := mkey.bulk_rotate_xor_hash(X_413,11,X_425);
    (X_427,r1_111) := algebra.subjoin(X_387,X_426,nil:BAT,nil:BAT,false,nil:lng);
    X_432 := algebra.projection(C_379,X_351);
    X_433 := algebra.projection(X_427,X_432);
    X_434 := algebra.projection(r1_111,X_412);
    X_435:bat[:bit] := batcalc.==(X_433,X_434);
    C_440 := algebra.subselect(X_435,true,true,true,false,false);
    X_443 := algebra.projection(C_440,X_427);
    X_444:bat[:int] := sql.bind(X_328,"sys","partsupp","ps_suppkey",0);
    X_451:bat[:int] := algebra.projectionpath(C_379,C_343,X_444);
    X_452 := algebra.projection(X_443,X_451);
    X_453 := algebra.projection(C_440,r1_111);
    X_454 := algebra.projection(X_453,X_425);
    X_455:bat[:bit] := batcalc.==(X_452,X_454);
    C_457 := algebra.subselect(X_455,true,true,true,false,false);
    X_458 := algebra.projection(C_457,X_443);
    X_459:bat[:oid] := batcalc.identity(X_432);
    X_461 := algebra.projection(X_458,X_459);
    (X_462,r1_146,r2_146) := group.subgroupdone(X_461);
    X_465:bat[:int] := sql.bind(X_328,"sys","partsupp","ps_availqty",0);
    X_474:bat[:int] := algebra.projectionpath(r1_146,X_458,C_379,C_343,X_465);
    X_481:bat[:lng] := sql.bind(X_328,"sys","lineitem","l_quantity",0);
    X_489:bat[:lng] := algebra.projectionpath(C_457,X_453,C_401,C_388,X_481);
    X_490:bat[:lng] := aggr.subsum(X_489,X_462,r1_146,true,true);
    X_475:bat[:lng] := batcalc.lng(X_474,19,3);
    X_494:bat[:lng] := batcalc.*(X_490,5);
    X_496:bat[:bit] := batcalc.>(X_475,X_494);
    C_498 := algebra.subselect(X_496,true,true,true,true,false);
    X_502:bat[:int] := algebra.projectionpath(C_498,r1_146,X_458,X_451);
    (X_503,r1_187) := algebra.subjoin(X_341,X_502,nil:BAT,nil:BAT,false,nil:lng);
    C_508 := algebra.subinter(X_342,X_503,nil:BAT,nil:BAT,false,nil:lng);
    X_509:bat[:int] := sql.bind(X_328,"sys","supplier","s_nationkey",0);
    X_516:bat[:int] := algebra.projectionpath(C_508,C_329,X_509);
    C_517:bat[:oid] := sql.tid(X_328,"sys","nation");
    X_519:bat[:str] := sql.bind(X_328,"sys","nation","n_name",0);
    X_525 := algebra.projection(C_517,X_519);
    C_527 := algebra.subselect(X_525,"CANADA","CANADA",true,false,false);
    X_529:bat[:int] := sql.bind(X_328,"sys","nation","n_nationkey",0);
    X_536:bat[:int] := algebra.projectionpath(C_527,C_517,X_529);
    (X_537,r1_221) := algebra.subjoin(X_516,X_536,nil:BAT,nil:BAT,false,nil:lng);
    X_543:bat[:str] := sql.bind(X_328,"sys","supplier","s_name",0);
    X_551:bat[:str] := algebra.projectionpath(X_537,C_508,C_329,X_543);
    (X_552,r1_236,r2_236) := algebra.subsort(X_551,false,false);
    X_555 := algebra.projection(r1_236,X_551);
    X_556:bat[:str] := sql.bind(X_328,"sys","supplier","s_address",0);
    X_565:bat[:str] := algebra.projectionpath(r1_236,X_537,C_508,C_329,X_556);
    sql.resultSet(X_584,X_585,X_586,X_588,X_590,X_555,X_565);
end user.main;
#inline               actions= 0 time=6 usec 
#remap                actions= 7 time=100 usec 
#costmodel            actions= 1 time=4 usec 
#coercion             actions= 4 time=27 usec 
#evaluate             actions=12 time=57 usec 
#emptybind            actions=45 time=71 usec 
#aliases              actions=27 time=25 usec 
#mergetable           actions= 0 time=120 usec 
#deadcode             actions=45 time=21 usec 
#aliases              actions= 0 time=14 usec 
#constants            actions=35 time=53 usec 
#commonTerms          actions= 0 time=28 usec 
#projectionpath       actions=19 time=54 usec 
#reorder              actions= 1 time=69 usec 
#deadcode             actions=20 time=16 usec 
#reduce               actions=173 time=34 usec 
#matpack              actions= 0 time=4 usec 
#multiplex            actions= 0 time=4 usec 
#profiler             actions= 1 time=10 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=33 usec 
#total                actions= 1 time=995 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

