stdout of test '21-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:31 >  
# 22:53:31 >  "/usr/bin/python2" "21-explain.SQL.py" "21-explain"
# 22:53:31 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	count(*) as numwait
#from
#	supplier,
#	lineitem l1,
#	orders,
#	nation
#where
#	s_suppkey = l1.l_suppkey
#	and o_orderkey = l1.l_orderkey
#	and o_orderstatus = 'F'
#	and l1.l_receiptdate > l1.l_commitdate
#	and exists (
#		select
#			*
#		from
#			lineitem l2
#		where
#			l2.l_orderkey = l1.l_orderkey
#			and l2.l_suppkey <> l1.l_suppkey
#	)
#	and not exists (
#		select
#			*
#		from
#			lineitem l3
#		where
#			l3.l_orderkey = l1.l_orderkey
#			and l3.l_suppkey <> l1.l_suppkey
#			and l3.l_receiptdate > l3.l_commitdate
% .explain # table_name
% mal # name
% clob # type
% 790 # length
function user.s2_1{autoCommit=true}(A0:str,A1:str):void;
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineitem");
    X_8 := sql.bind(X_4,"sys","lineitem","l_receiptdate",0);
    (X_11,r1_11) := sql.bind(X_4,"sys","lineitem","l_receiptdate",2);
    X_14 := sql.bind(X_4,"sys","lineitem","l_receiptdate",1);
    X_16 := sql.delta(X_8,X_11,r1_11,X_14);
    X_17 := algebra.leftfetchjoin(X_5,X_16);
    X_18 := sql.bind(X_4,"sys","lineitem","l_commitdate",0);
    (X_20,r1_20) := sql.bind(X_4,"sys","lineitem","l_commitdate",2);
    X_22 := sql.bind(X_4,"sys","lineitem","l_commitdate",1);
    X_23 := sql.delta(X_18,X_20,r1_20,X_22);
    X_24 := algebra.leftfetchjoin(X_5,X_23);
    X_25:bat[:oid,:bit]  := batcalc.>(X_17,X_24);
    X_26 := algebra.subselect(X_25,true,true,true,true,false);
    X_264 := algebra.leftfetchjoin(X_26,X_5);
    X_28 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_30,r1_32) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_32 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_33 := sql.delta(X_28,X_30,r1_32,X_32);
    X_34:bat[:oid,:oid]  := algebra.leftfetchjoin(X_264,X_33);
    X_35:bat[:oid,:oid]  := sql.tid(X_4,"sys","orders");
    X_38 := sql.bind(X_4,"sys","orders","o_orderstatus",0);
    (X_41,r1_44) := sql.bind(X_4,"sys","orders","o_orderstatus",2);
    X_44 := sql.bind(X_4,"sys","orders","o_orderstatus",1);
    X_46 := sql.delta(X_38,X_41,r1_44,X_44);
    X_47 := algebra.leftfetchjoin(X_35,X_46);
    X_48 := algebra.subselect(X_47,A0,A0,true,true,false);
    X_50 := algebra.leftfetchjoin(X_48,X_35);
    (X_51,r1_55) := algebra.subjoin(X_34,X_50,nil:BAT,nil:BAT,true,nil:lng);
    X_265 := algebra.leftfetchjoin(X_51,X_26);
    X_55 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_58,r1_62) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_60 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_61 := sql.delta(X_55,X_58,r1_62,X_60);
    X_62:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_265,X_5,X_61);
    X_63:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    (X_65,r1_71) := algebra.subjoin(X_62,X_63,nil:BAT,nil:BAT,true,nil:lng);
    X_266 := algebra.leftfetchjoin(r1_71,X_63);
    X_67 := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_71,r1_77) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_74 := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_76 := sql.delta(X_67,X_71,r1_77,X_74);
    X_77:bat[:oid,:oid]  := algebra.leftfetchjoin(X_266,X_76);
    X_78:bat[:oid,:oid]  := sql.tid(X_4,"sys","nation");
    X_80 := sql.bind(X_4,"sys","nation","n_name",0);
    (X_82,r1_89) := sql.bind(X_4,"sys","nation","n_name",2);
    X_84 := sql.bind(X_4,"sys","nation","n_name",1);
    X_85 := sql.delta(X_80,X_82,r1_89,X_84);
    X_86 := algebra.leftfetchjoin(X_78,X_85);
    X_87 := algebra.subselect(X_86,A1,A1,true,true,false);
    X_90 := algebra.leftfetchjoin(X_87,X_78);
    (X_91,r1_99) := algebra.subjoin(X_77,X_90,nil:BAT,nil:BAT,true,nil:lng);
    X_267 := algebra.leftfetchjoin(X_91,r1_71);
    X_95 := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    (X_98,r1_106) := sql.bind(X_4,"sys","supplier","s_suppkey",2);
    X_101 := sql.bind(X_4,"sys","supplier","s_suppkey",1);
    X_102 := sql.delta(X_95,X_98,r1_106,X_101);
    X_103:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_267,X_63,X_102);
    X_104 := bat.mirror(X_103);
    X_268 := algebra.leftfetchjoin(X_91,X_65);
    X_105 := sql.bind(X_4,"sys","lineitem","l_orderkey",0);
    (X_109,r1_119) := sql.bind(X_4,"sys","lineitem","l_orderkey",2);
    X_112 := sql.bind(X_4,"sys","lineitem","l_orderkey",1);
    X_114 := sql.delta(X_105,X_109,r1_119,X_112);
    X_115:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_268,X_51,X_26,X_5,X_114);
    X_116:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineitem");
    X_117 := algebra.leftfetchjoin(X_116,X_114);
    (X_118,r1_137) := algebra.subjoin(X_115,X_117,nil:BAT,nil:BAT,true,nil:lng);
    X_123 := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    (X_126,r1_145) := sql.bind(X_4,"sys","lineitem","l_suppkey",2);
    X_128 := sql.bind(X_4,"sys","lineitem","l_suppkey",1);
    X_129 := sql.delta(X_123,X_126,r1_145,X_128);
    X_130 := algebra.leftfetchjoin(X_116,X_129);
    X_131 := algebra.leftfetchjoin(r1_137,X_130);
    X_136:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_268,X_51,X_26,X_5,X_129);
    X_137 := algebra.leftfetchjoin(X_118,X_136);
    X_138:bat[:oid,:bit]  := batcalc.!=(X_131,X_137);
    X_139 := algebra.subselect(X_138,true,true,true,true,false);
    X_141 := algebra.leftfetchjoin(X_139,X_118);
    X_142 := algebra.tinter(X_104,X_141);
    X_143 := algebra.leftfetchjoin(X_142,X_103);
    X_144 := bat.mirror(X_143);
    X_145 := algebra.leftfetchjoin(X_142,X_115);
    X_147 := sql.bind(X_4,"sys","lineitem","l_receiptdate",0);
    (X_149,r1_180) := sql.bind(X_4,"sys","lineitem","l_receiptdate",2);
    X_151 := sql.bind(X_4,"sys","lineitem","l_receiptdate",1);
    X_152 := sql.delta(X_147,X_149,r1_180,X_151);
    X_153 := algebra.leftfetchjoin(X_116,X_152);
    X_154 := sql.bind(X_4,"sys","lineitem","l_commitdate",0);
    (X_158,r1_189) := sql.bind(X_4,"sys","lineitem","l_commitdate",2);
    X_161 := sql.bind(X_4,"sys","lineitem","l_commitdate",1);
    X_163 := sql.delta(X_154,X_158,r1_189,X_161);
    X_164 := algebra.leftfetchjoin(X_116,X_163);
    X_165:bat[:oid,:bit]  := batcalc.>(X_153,X_164);
    X_166 := algebra.subselect(X_165,true,true,true,true,false);
    X_168 := algebra.leftfetchjoin(X_166,X_117);
    (X_169,r1_208) := algebra.subjoin(X_145,X_168,nil:BAT,nil:BAT,true,nil:lng);
    X_174:bat[:oid,:int]  := algebra.leftfetchjoinPath(r1_208,X_166,X_130);
    X_175:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_169,X_142,X_136);
    X_176:bat[:oid,:bit]  := batcalc.!=(X_174,X_175);
    X_177 := algebra.subselect(X_176,true,true,true,true,false);
    X_179 := algebra.leftfetchjoin(X_177,X_169);
    X_180 := algebra.tdiff(X_144,X_179);
    X_269 := algebra.leftfetchjoin(X_142,X_91);
    X_181 := sql.bind(X_4,"sys","supplier","s_name",0);
    (X_185,r1_235) := sql.bind(X_4,"sys","supplier","s_name",2);
    X_188 := sql.bind(X_4,"sys","supplier","s_name",1);
    X_190 := sql.delta(X_181,X_185,r1_235,X_188);
    X_191:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_180,X_269,r1_71,X_63,X_190);
    (X_192,r1_246,r2_246) := group.subgroupdone(X_191);
    X_195 := algebra.leftfetchjoin(r1_246,X_191);
    X_196:bat[:oid,:wrd]  := aggr.subcount(X_192,X_192,r1_246,false);
    (X_198,r1_256) := algebra.firstn(X_196,100:wrd,false,false);
    X_200 := algebra.firstn(X_195,X_198,r1_256,100:wrd,true,false);
    X_203 := algebra.leftfetchjoin(X_200,X_195);
    X_204 := algebra.leftfetchjoin(X_200,X_196);
    (X_205,r1_265,r2_265) := algebra.subsort(X_204,true,false);
    (X_208,r1_268,r2_268) := algebra.subsort(X_203,r1_265,r2_265,false,false);
    X_211 := algebra.leftfetchjoin(r1_268,X_203);
    X_213 := algebra.subslice(X_211,0:wrd,99:wrd);
    X_214 := algebra.leftfetchjoin(X_213,X_211);
    X_215:bat[:oid,:wrd]  := algebra.leftfetchjoinPath(X_213,r1_268,X_204);
    X_216 := sql.resultSet(2,1,X_214);
    sql.rsColumn(X_216,"sys.supplier","s_name","varchar",25,0,X_214);
    sql.rsColumn(X_216,"sys.L1","numwait","wrd",64,0,X_215);
    X_229 := io.stdout();
    sql.exportResult(X_229,X_216);
end s2_1;
# querylog.define("explain select\n\ts_name,\n\tcount(*) as numwait\nfrom\n\tsupplier,\n\tlineitem l1,\n\torders,\n\tnation\nwhere\n\ts_suppkey = l1.l_suppkey\n\tand o_orderkey = l1.l_orderkey\n\tand o_orderstatus = \\'F\\'\n\tand l1.l_receiptdate > l1.l_commitdate\n\tand exists (\n\t\tselect\n\t\t\t*\n\t\tfrom\n\t\t\tlineitem l2\n\t\twhere\n\t\t\tl2.l_orderkey = l1.l_orderkey\n\t\t\tand l2.l_suppkey <> l1.l_suppkey\n\t)\n\tand not exists (\n\t\tselect\n\t\t\t*\n\t\tfrom\n\t\t\tlineitem l3\n\t\twhere\n\t\t\tl3.l_orderkey = l1.l_orderkey\n\t\t\tand l3.l_suppkey <> l1.l_suppkey\n\t\t\tand l3.l_receiptdate > l3.l_commitdate\n\t)\n\tand s_nationkey = n_nationkey\n\tand n_name = \\'SAUDI ARABIA\\'\ngroup by\n\ts_name\norder by\n\tnumwait desc,\n\ts_name\nlimit 100;","sequential_pipe")

# 22:53:31 >  
# 22:53:31 >  "Done."
# 22:53:31 >  

