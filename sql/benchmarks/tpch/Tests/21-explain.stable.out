stdout of test '21-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:31 >  
# 22:53:31 >  "/usr/bin/python2" "21-explain.SQL.py" "21-explain"
# 22:53:31 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	count(*) as numwait
#from
#	supplier,
#	lineitem l1,
#	orders,
#	nation
#where
#	s_suppkey = l1.l_suppkey
#	and o_orderkey = l1.l_orderkey
#	and o_orderstatus = 'F'
#	and l1.l_receiptdate > l1.l_commitdate
#	and exists (
#		select
#			*
#		from
#			lineitem l2
#		where
#			l2.l_orderkey = l1.l_orderkey
#			and l2.l_suppkey <> l1.l_suppkey
#	)
#	and not exists (
#		select
#			*
#		from
#			lineitem l3
#		where
#			l3.l_orderkey = l1.l_orderkey
#			and l3.l_suppkey <> l1.l_suppkey
#			and l3.l_receiptdate > l3.l_commitdate
% .explain # table_name
% mal # name
% clob # type
% 728 # length
function user.s4_1():void;
    X_271:void := querylog.define("explain select\n s_name,\n count(*) as numwait\nfrom\n supplier,\n lineitem l1,\n orders,\n nation\nwhere\n s_suppkey = l1.l_suppkey\n and o_orderkey = l1.l_orderkey\n and o_orderstatus = \\'F\\'\n and l1.l_receiptdate > l1.l_commitdate\n and exists (\n select\n *\n from\n lineitem l2\n where\n l2.l_orderkey = l1.l_orderkey\n and l2.l_suppkey <> l1.l_suppkey\n )\n and not exists (\n select\n *\n from\n lineitem l3\n where\n l3.l_orderkey = l1.l_orderkey\n and l3.l_suppkey <> l1.l_suppkey\n and l3.l_receiptdate > l3.l_commitdate\n )\n and s_nationkey = n_nationkey\n and n_name = \\'SAUDI ARABIA\\'\ngroup by\n s_name\norder by\n numwait desc,\n s_name\nlimit 100;","sequential_pipe",97);
    X_245 := bat.new(nil:str);
    X_252 := bat.append(X_245,"sys.supplier");
    X_262 := bat.append(X_252,"sys.L1");
    X_247 := bat.new(nil:str);
    X_254 := bat.append(X_247,"s_name");
    X_264 := bat.append(X_254,"numwait");
    X_248 := bat.new(nil:str);
    X_256 := bat.append(X_248,"char");
    X_266 := bat.append(X_256,"bigint");
    X_249 := bat.new(nil:int);
    X_258 := bat.append(X_249,25);
    X_268 := bat.append(X_258,64);
    X_251 := bat.new(nil:int);
    X_260 := bat.append(X_251,0);
    X_270 := bat.append(X_260,0);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_4:bat[:date] := sql.bind(X_0,"sys","lineitem","l_receiptdate",0);
    X_13 := algebra.projection(C_1,X_4);
    X_14:bat[:date] := sql.bind(X_0,"sys","lineitem","l_commitdate",0);
    X_20 := algebra.projection(C_1,X_14);
    X_21:bat[:bit] := batcalc.>(X_13,X_20);
    C_24 := algebra.subselect(X_21,true,true,true,true,false);
    X_28:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_30,r1_33) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_32:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_33 := sql.delta(X_28,X_30,r1_33,X_32);
    X_35:bat[:oid] := algebra.projectionpath(C_24,C_1,X_33);
    C_36:bat[:oid] := sql.tid(X_0,"sys","orders");
    X_38:bat[:str] := sql.bind(X_0,"sys","orders","o_orderstatus",0);
    X_44 := algebra.projection(C_36,X_38);
    C_46 := algebra.subselect(X_44,"F","F",true,false,false);
    X_47 := algebra.projection(C_46,C_36);
    (X_48,r1_51) := algebra.subjoin(X_35,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_53:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    X_59 := algebra.projection(C_1,X_53);
    X_60 := algebra.projection(C_24,X_59);
    X_61 := algebra.projection(X_48,X_60);
    C_62:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_64:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    X_70 := algebra.projection(C_62,X_64);
    (X_71,r1_74) := algebra.subjoin(X_61,X_70,nil:BAT,nil:BAT,false,nil:lng);
    X_74:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_76,r1_79) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_78:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_79 := sql.delta(X_74,X_76,r1_79,X_78);
    X_81:bat[:oid] := algebra.projectionpath(r1_74,C_62,X_79);
    C_82:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_84:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_90 := algebra.projection(C_82,X_84);
    C_92 := algebra.subselect(X_90,"SAUDI ARABIA","SAUDI ARABIA",true,false,false);
    X_94 := algebra.projection(C_92,C_82);
    (X_95,r1_98) := algebra.subjoin(X_81,X_94,nil:BAT,nil:BAT,false,nil:lng);
    X_101:bat[:int] := algebra.projectionpath(X_95,r1_74,X_70);
    X_102 := bat.mirror(X_101);
    X_103:bat[:int] := sql.bind(X_0,"sys","lineitem","l_orderkey",0);
    X_109 := algebra.projection(C_1,X_103);
    X_110 := algebra.projection(C_24,X_109);
    X_113:bat[:int] := algebra.projectionpath(X_95,X_71,X_48,X_110);
    (X_122,r1_125) := algebra.subjoin(X_113,X_109,nil:BAT,nil:BAT,false,nil:lng);
    X_131 := algebra.projection(r1_125,X_59);
    X_133:bat[:int] := algebra.projectionpath(X_95,X_71,X_61);
    X_134 := algebra.projection(X_122,X_133);
    X_135:bat[:bit] := batcalc.!=(X_131,X_134);
    C_138 := algebra.subselect(X_135,true,true,true,true,false);
    X_141 := algebra.projection(C_138,X_122);
    C_142 := algebra.subinter(X_102,X_141,nil:BAT,nil:BAT,false,nil:lng);
    X_146 := algebra.projection(C_142,X_101);
    X_147 := bat.mirror(X_146);
    X_148 := algebra.projection(C_142,X_113);
    (X_174,r1_177) := algebra.subjoin(X_148,X_110,nil:BAT,nil:BAT,false,nil:lng);
    X_183 := algebra.projection(r1_177,X_60);
    X_185:bat[:int] := algebra.projectionpath(X_174,C_142,X_133);
    X_186:bat[:bit] := batcalc.!=(X_183,X_185);
    C_189 := algebra.subselect(X_186,true,true,true,true,false);
    X_192 := algebra.projection(C_189,X_174);
    X_193 := algebra.subdiff(X_147,X_192,nil:BAT,nil:BAT,false,nil:lng);
    X_197:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",0);
    X_207:bat[:str] := algebra.projectionpath(X_193,C_142,X_95,r1_74,C_62,X_197);
    (X_208,r1_211,r2_211) := group.subgroupdone(X_207);
    X_211 := algebra.projection(r1_211,X_207);
    X_213:bat[:lng] := aggr.subcount(X_208,X_208,r1_211,false);
    X_212 := bat.setKey(X_211,true);
    (C_220,r1_223) := algebra.firstn(X_213,100,false,false);
    C_224 := algebra.firstn(X_212,C_220,r1_223,100,true,false);
    X_226 := algebra.projection(C_224,X_212);
    X_227 := algebra.projection(C_224,X_213);
    (X_228,r1_231,r2_231) := algebra.subsort(X_227,true,false);
    (X_231,r1_234,r2_234) := algebra.subsort(X_226,r1_231,r2_231,false,false);
    X_234 := algebra.projection(r1_234,X_226);
    X_240 := algebra.subslice(X_234,0,99:lng);
    X_241 := algebra.projection(X_240,X_234);
    X_243:bat[:lng] := algebra.projectionpath(X_240,r1_234,X_227);
    sql.resultSet(X_262,X_264,X_266,X_268,X_270,X_241,X_243);
end user.s4_1;
#inline               actions= 0 time=9 usec 
#candidates           actions= 1 time=128 usec 
#remap                actions= 4 time=667 usec 
#costModel            actions= 1 time=224 usec 
#coercions            actions= 5 time=225 usec 
#evaluate             actions= 6 time=295 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions= 0 time=12 usec 
#aliases              actions=20 time=224 usec 
#mergetable           actions= 0 time=232 usec 
#deadcode             actions=28 time=206 usec 
#aliases              actions= 0 time=24 usec 
#constants            actions=34 time=227 usec 
#commonTerms          actions=18 time=166 usec 
#projectionpath       actions=12 time=163 usec 
#reorder              actions= 1 time=220 usec 
#deadcode             actions=30 time=148 usec 
#reduce               actions=152 time=215 usec 
#matpack              actions= 0 time=17 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=6 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=135 usec 
#garbageCollector     actions= 1 time=148 usec 
#total                actions= 1 time=3838 usec 

# 22:53:31 >  
# 22:53:31 >  "Done."
# 22:53:31 >  

