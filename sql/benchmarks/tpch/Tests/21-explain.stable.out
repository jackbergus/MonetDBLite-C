stdout of test '21-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:31 >  
# 22:53:31 >  "/usr/bin/python2" "21-explain.SQL.py" "21-explain"
# 22:53:31 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	count(*) as numwait
#from
#	supplier,
#	lineitem l1,
#	orders,
#	nation
#where
#	s_suppkey = l1.l_suppkey
#	and o_orderkey = l1.l_orderkey
#	and o_orderstatus = 'F'
#	and l1.l_receiptdate > l1.l_commitdate
#	and exists (
#		select
#			*
#		from
#			lineitem l2
#		where
#			l2.l_orderkey = l1.l_orderkey
#			and l2.l_suppkey <> l1.l_suppkey
#	)
#	and not exists (
#		select
#			*
#		from
#			lineitem l3
#		where
#			l3.l_orderkey = l1.l_orderkey
#			and l3.l_suppkey <> l1.l_suppkey
#			and l3.l_receiptdate > l3.l_commitdate
% .explain # table_name
% mal # name
% clob # type
% 728 # length
function user.s4_1():void;
    X_319:void := querylog.define("explain select\n s_name,\n count(*) as numwait\nfrom\n supplier,\n lineitem l1,\n orders,\n nation\nwhere\n s_suppkey = l1.l_suppkey\n and o_orderkey = l1.l_orderkey\n and o_orderstatus = \\'F\\'\n and l1.l_receiptdate > l1.l_commitdate\n and exists (\n select\n *\n from\n lineitem l2\n where\n l2.l_orderkey = l1.l_orderkey\n and l2.l_suppkey <> l1.l_suppkey\n )\n and not exists (\n select\n *\n from\n lineitem l3\n where\n l3.l_orderkey = l1.l_orderkey\n and l3.l_suppkey <> l1.l_suppkey\n and l3.l_receiptdate > l3.l_commitdate\n )\n and s_nationkey = n_nationkey\n and n_name = \\'SAUDI ARABIA\\'\ngroup by\n s_name\norder by\n numwait desc,\n s_name\nlimit 100;","sequential_pipe",96);
    X_293 := bat.new(nil:str);
    X_300 := bat.append(X_293,"sys.supplier");
    X_310 := bat.append(X_300,"sys.L22");
    X_295 := bat.new(nil:str);
    X_302 := bat.append(X_295,"s_name");
    X_312 := bat.append(X_302,"numwait");
    X_296 := bat.new(nil:str);
    X_304 := bat.append(X_296,"char");
    X_314 := bat.append(X_304,"bigint");
    X_297 := bat.new(nil:int);
    X_306 := bat.append(X_297,25);
    X_316 := bat.append(X_306,64);
    X_299 := bat.new(nil:int);
    X_308 := bat.append(X_299,0);
    X_318 := bat.append(X_308,0);
    X_0 := sql.mvc();
    C_3:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_30:bat[:date] := sql.bind(X_0,"sys","lineitem","l_receiptdate",0);
    X_36 := algebra.projection(C_3,X_30);
    X_23:bat[:date] := sql.bind(X_0,"sys","lineitem","l_commitdate",0);
    X_29 := algebra.projection(C_3,X_23);
    X_44:bat[:bit] := batcalc.>(X_36,X_29);
    C_47 := algebra.subselect(X_44,true,true,true,true,false);
    X_37:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_40,X_41:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_39:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_42 := sql.delta(X_37,X_40,X_41,X_39);
    X_55:bat[:oid] := algebra.projectionpath(C_47,C_3,X_42);
    C_56:bat[:oid] := sql.tid(X_0,"sys","orders");
    X_58:bat[:str] := sql.bind(X_0,"sys","orders","o_orderstatus",0);
    X_64 := algebra.projection(C_56,X_58);
    C_66 := algebra.subselect(X_64,"F","F",true,false,false);
    X_68 := algebra.projection(C_66,C_56);
    (X_69,X_70) := algebra.subjoin(X_55,X_68,nil:BAT,nil:BAT,false,nil:lng);
    X_16:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    X_22 := algebra.projection(C_3,X_16);
    X_52 := algebra.projection(C_47,X_22);
    X_75 := algebra.projection(X_69,X_52);
    C_81:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_83:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    X_89 := algebra.projection(C_81,X_83);
    (X_104,X_105) := algebra.subjoin(X_75,X_89,nil:BAT,nil:BAT,false,nil:lng);
    X_97:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_100,X_101:bat[:oid]) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_99:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_102 := sql.delta(X_97,X_100,X_101,X_99);
    X_119:bat[:oid] := algebra.projectionpath(X_105,C_81,X_102);
    C_120:bat[:oid] := sql.tid(X_0,"sys","nation");
    X_122:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_128 := algebra.projection(C_120,X_122);
    C_130 := algebra.subselect(X_128,"SAUDI ARABIA","SAUDI ARABIA",true,false,false);
    X_133 := algebra.projection(C_130,C_120);
    (X_134,X_135) := algebra.subjoin(X_119,X_133,nil:BAT,nil:BAT,false,nil:lng);
    X_143:bat[:int] := algebra.projectionpath(X_134,X_105,X_89);
    X_184 := bat.mirror(X_143);
    X_6:bat[:int] := sql.bind(X_0,"sys","lineitem","l_orderkey",0);
    X_15 := algebra.projection(C_3,X_6);
    X_51 := algebra.projection(C_47,X_15);
    X_136:bat[:int] := algebra.projectionpath(X_134,X_104,X_69,X_51);
    (X_165,X_166) := algebra.subjoin(X_136,X_15,nil:BAT,nil:BAT,false,nil:lng);
    X_177 := algebra.projection(X_166,X_22);
    X_137:bat[:int] := algebra.projectionpath(X_134,X_104,X_75);
    X_174 := algebra.projection(X_165,X_137);
    X_178:bat[:bit] := batcalc.!=(X_177,X_174);
    C_180 := algebra.subselect(X_178,true,true,true,true,false);
    X_183 := algebra.projection(C_180,X_165);
    C_185 := algebra.subinter(X_184,X_183,nil:BAT,nil:BAT,false,nil:lng);
    X_186 := algebra.projection(C_185,X_143);
    X_249 := bat.mirror(X_186);
    X_188 := algebra.projection(C_185,X_136);
    (X_230,X_231) := algebra.subjoin(X_188,X_51,nil:BAT,nil:BAT,false,nil:lng);
    X_241 := algebra.projection(X_231,X_52);
    X_238:bat[:int] := algebra.projectionpath(X_230,C_185,X_137);
    X_244:bat[:bit] := batcalc.!=(X_241,X_238);
    C_247 := algebra.subselect(X_244,true,true,true,true,false);
    X_248 := algebra.projection(C_247,X_230);
    X_250 := algebra.subdiff(X_249,X_248,nil:BAT,nil:BAT,false,nil:lng);
    X_90:bat[:str] := sql.bind(X_0,"sys","supplier","s_name",0);
    X_252:bat[:str] := algebra.projectionpath(X_250,C_185,X_134,X_105,C_81,X_90);
    (X_256,X_257,X_258) := group.subgroupdone(X_252);
    X_259 := algebra.projection(X_257,X_252);
    X_260:bat[:lng] := aggr.subcount(X_256,X_256,X_257,false);
    (C_265,X_266) := algebra.firstn(X_260,100,false,false);
    C_269 := algebra.firstn(X_259,C_265,X_266,100,true,false);
    X_271 := algebra.projection(C_269,X_259);
    X_272 := algebra.projection(C_269,X_260);
    (X_275,X_276,X_277) := algebra.subsort(X_272,true,false);
    (X_278,X_279,X_280) := algebra.subsort(X_271,X_276,X_277,false,false);
    X_281 := algebra.projection(X_279,X_271);
    X_289 := algebra.subslice(X_281,0,99:lng);
    X_290 := algebra.projection(X_289,X_281);
    X_291:bat[:lng] := algebra.projectionpath(X_289,X_279,X_272);
    sql.resultSet(X_310,X_312,X_314,X_316,X_318,X_290,X_291);
end user.s4_1;
#inline               actions= 0 time=9 usec 
#candidates           actions= 1 time=128 usec 
#remap                actions= 4 time=667 usec 
#costModel            actions= 1 time=224 usec 
#coercions            actions= 5 time=225 usec 
#evaluate             actions= 6 time=295 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions= 0 time=12 usec 
#aliases              actions=20 time=224 usec 
#mergetable           actions= 0 time=232 usec 
#deadcode             actions=28 time=206 usec 
#aliases              actions= 0 time=24 usec 
#constants            actions=34 time=227 usec 
#commonTerms          actions=18 time=166 usec 
#projectionpath       actions=12 time=163 usec 
#reorder              actions= 1 time=220 usec 
#deadcode             actions=30 time=148 usec 
#reduce               actions=152 time=215 usec 
#matpack              actions= 0 time=17 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=6 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=135 usec 
#garbageCollector     actions= 1 time=148 usec 
#total                actions= 1 time=3838 usec 

# 22:53:31 >  
# 22:53:31 >  "Done."
# 22:53:31 >  

