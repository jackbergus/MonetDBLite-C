stdout of test '17-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "17-explain.SQL.py" "17-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice) / 7.0 as avg_yearly
#from
#	lineitem,
#	part
#where
#	p_partkey = l_partkey
#	and p_brand = 'Brand#23'
#	and p_container = 'MED BOX'
#	and l_quantity < (
#		select
#			0.2 * avg(l_quantity)
#		from
#			lineitem
#		where
#			l_partkey = p_partkey
#	);
% .explain # table_name
% mal # name
% clob # type
% 87 # length
function user.main():void;
    X_1113 := sql.mvc();
    C_1114:bat[:oid] := sql.tid(X_1113,"sys","lineitem");
    X_1117:bat[:int] := sql.bind(X_1113,"sys","lineitem","l_partkey",0);
    X_1126 := algebra.projection(C_1114,X_1117);
    X_1129:bat[:str] := sql.bind(X_1113,"sys","part","p_container",0);
    X_1137:bat[:str] := sql.bind(X_1113,"sys","part","p_brand",0);
    C_1127:bat[:oid] := sql.tid(X_1113,"sys","part");
    C_1145 := algebra.subselect(X_1137,C_1127,"Brand#23","Brand#23",true,false,false);
    C_1149 := algebra.subselect(X_1129,C_1145,"MED BOX","MED BOX",true,false,false);
    X_1150:bat[:int] := sql.bind(X_1113,"sys","part","p_partkey",0);
    X_1157 := algebra.projection(C_1149,X_1150);
    (X_1166,r1_62) := algebra.subjoin(X_1157,X_1126,nil:BAT,nil:BAT,false,nil:lng);
    X_1171 := algebra.projection(X_1166,X_1157);
    (X_1172,r1_68) := algebra.subjoin(X_1126,X_1171,nil:BAT,nil:BAT,false,nil:lng);
    X_1174:bat[:int] := sql.bind(X_1113,"sys","lineitem","l_orderkey",0);
    X_1181:bat[:int] := algebra.projectionpath(r1_62,C_1114,X_1174);
    X_1182:bat[:oid] := batcalc.identity(X_1181);
    X_1185 := algebra.projection(r1_68,X_1182);
    (X_1186,r1_82,r2_82) := group.subgroupdone(X_1185);
    X_1189:bat[:lng] := sql.bind(X_1113,"sys","lineitem","l_quantity",0);
    X_1195 := algebra.projection(C_1114,X_1189);
    X_1198:bat[:lng] := algebra.projectionpath(r1_82,r1_68,r1_62,X_1195);
    X_1208 := algebra.projection(X_1172,X_1195);
    X_1209:bat[:dbl] := batcalc.dbl(2,X_1208);
    X_1210:bat[:dbl] := aggr.subavg(X_1209,X_1186,r1_82,true,true);
    X_1221:bat[:lng] := sql.bind(X_1113,"sys","lineitem","l_extendedprice",0);
    X_1199:bat[:dbl] := batcalc.dbl(2,X_1198);
    X_1214:bat[:dbl] := batcalc.*(X_1210,0.2);
    X_1216:bat[:bit] := batcalc.<(X_1199,X_1214);
    C_1219 := algebra.subselect(X_1216,true,true,true,true,false);
    X_1231:bat[:lng] := algebra.projectionpath(C_1219,r1_82,r1_68,r1_62,C_1114,X_1221);
    X_1232:hge := aggr.sum(X_1231);
    X_1233 := calc.hge(2,X_1232,39,5);
    X_1240:hge := calc./(X_1233,700:hge);
    sql.resultSet("sys.L3","avg_yearly","decimal",39,3,10,X_1240);
end user.main;
#inline               actions= 0 time=4 usec 
#remap                actions= 5 time=26 usec 
#costmodel            actions= 1 time=4 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions= 9 time=39 usec 
#emptybind            actions=27 time=45 usec 
#aliases              actions=21 time=15 usec 
#deadcode             actions=27 time=12 usec 
#aliases              actions= 0 time=8 usec 
#constants            actions=14 time=46 usec 
#commonTerms          actions= 5 time=39 usec 
#projectionpath       actions= 7 time=39 usec 
#reorder              actions= 1 time=57 usec 
#deadcode             actions=12 time=33 usec 
#reduce               actions=98 time=58 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=0 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=30 usec 
#garbageCollector     actions= 1 time=33 usec 
#total                actions= 1 time=924 usec 

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

