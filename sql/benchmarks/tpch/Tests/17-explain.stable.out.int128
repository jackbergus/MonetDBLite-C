stdout of test '17-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "17-explain.SQL.py" "17-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice) / 7.0 as avg_yearly
#from
#	lineitem,
#	part
#where
#	p_partkey = l_partkey
#	and p_brand = 'Brand#23'
#	and p_container = 'MED BOX'
#	and l_quantity < (
#		select
#			0.2 * avg(l_quantity)
#		from
#			lineitem
#		where
#			l_partkey = p_partkey
#	);
% .explain # table_name
% mal # name
% clob # type
% 83 # length
function user.main():void;
    X_710 := sql.mvc();
    C_711:bat[:oid] := sql.tid(X_710,"sys","lineitem");
    X_714:bat[:int] := sql.bind(X_710,"sys","lineitem","l_partkey",0);
    X_723 := algebra.projection(C_711,X_714);
    X_726:bat[:str] := sql.bind(X_710,"sys","part","p_container",0);
    X_734:bat[:str] := sql.bind(X_710,"sys","part","p_brand",0);
    C_724:bat[:oid] := sql.tid(X_710,"sys","part");
    C_742 := algebra.subselect(X_734,C_724,"Brand#23","Brand#23",true,false,false);
    C_746 := algebra.subselect(X_726,C_742,"MED BOX","MED BOX",true,false,false);
    X_747:bat[:int] := sql.bind(X_710,"sys","part","p_partkey",0);
    X_754 := algebra.projection(C_746,X_747);
    (X_763,r1_62) := algebra.subjoin(X_754,X_723,nil:BAT,nil:BAT,false,nil:lng);
    X_768 := algebra.projection(X_763,X_754);
    (X_769,r1_68) := algebra.subjoin(X_723,X_768,nil:BAT,nil:BAT,false,nil:lng);
    X_771:bat[:int] := sql.bind(X_710,"sys","lineitem","l_orderkey",0);
    X_778:bat[:int] := algebra.projectionpath(r1_62,C_711,X_771);
    X_779:bat[:oid] := batcalc.identity(X_778);
    X_782 := algebra.projection(r1_68,X_779);
    (X_783,r1_82,r2_82) := group.subgroupdone(X_782);
    X_786:bat[:lng] := sql.bind(X_710,"sys","lineitem","l_quantity",0);
    X_792 := algebra.projection(C_711,X_786);
    X_795:bat[:lng] := algebra.projectionpath(r1_82,r1_68,r1_62,X_792);
    X_805 := algebra.projection(X_769,X_792);
    X_806:bat[:dbl] := batcalc.dbl(2,X_805);
    X_807:bat[:dbl] := aggr.subavg(X_806,X_783,r1_82,true,true);
    X_818:bat[:lng] := sql.bind(X_710,"sys","lineitem","l_extendedprice",0);
    X_796:bat[:dbl] := batcalc.dbl(2,X_795);
    X_811:bat[:dbl] := batcalc.*(X_807,0.2);
    X_813:bat[:bit] := batcalc.<(X_796,X_811);
    C_816 := algebra.subselect(X_813,true,true,true,true,false);
    X_828:bat[:lng] := algebra.projectionpath(C_816,r1_82,r1_68,r1_62,C_711,X_818);
    X_829:hge := aggr.sum(X_828);
    X_830 := calc.hge(2,X_829,39,5);
    X_837:hge := calc./(X_830,700:hge);
    sql.resultSet("sys.L12","avg_yearly","decimal",39,3,10,X_837);
end user.main;
#inline               actions= 0 time=4 usec 
#remap                actions= 5 time=26 usec 
#costmodel            actions= 1 time=4 usec 
#coercion             actions= 0 time=3 usec 
#evaluate             actions= 9 time=39 usec 
#emptybind            actions=27 time=45 usec 
#aliases              actions=21 time=15 usec 
#deadcode             actions=27 time=12 usec 
#aliases              actions= 0 time=8 usec 
#constants            actions=14 time=46 usec 
#commonTerms          actions= 5 time=39 usec 
#projectionpath       actions= 7 time=39 usec 
#reorder              actions= 1 time=57 usec 
#deadcode             actions=12 time=33 usec 
#reduce               actions=98 time=58 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=0 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=30 usec 
#garbageCollector     actions= 1 time=33 usec 
#total                actions= 1 time=924 usec 

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

