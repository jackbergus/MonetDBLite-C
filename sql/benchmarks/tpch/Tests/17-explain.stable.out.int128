stdout of test '17-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "17-explain.SQL.py" "17-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice) / 7.0 as avg_yearly
#from
#	lineitem,
#	part
#where
#	p_partkey = l_partkey
#	and p_brand = 'Brand#23'
#	and p_container = 'MED BOX'
#	and l_quantity < (
#		select
#			0.2 * avg(l_quantity)
#		from
#			lineitem
#		where
#			l_partkey = p_partkey
#	);
% .explain # table_name
% mal # name
% clob # type
% 346 # length
function user.s4_1():void;
    X_134:void := querylog.define("explain select\n sum(l_extendedprice) / 7.0 as avg_yearly\nfrom\n lineitem,\n part\nwhere\n p_partkey = l_partkey\n and p_brand = \\'Brand#23\\'\n and p_container = \\'MED BOX\\'\n and l_quantity < (\n select\n 0.2 * avg(l_quantity)\n from\n lineitem\n where\n l_partkey = p_partkey\n );","sequential_pipe",38);
    X_0 := sql.mvc();
    X_1:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_4:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    X_13 := algebra.projection(X_1,X_4);
    X_16:bat[:str] := sql.bind(X_0,"sys","part","p_container",0);
    X_24:bat[:str] := sql.bind(X_0,"sys","part","p_brand",0);
    X_14:bat[:oid] := sql.tid(X_0,"sys","part");
    X_32 := algebra.subselect(X_24,X_14,"Brand#23","Brand#23",true,false,false);
    X_36 := algebra.subselect(X_16,X_32,"MED BOX","MED BOX",true,false,false);
    X_37:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_44 := algebra.projection(X_36,X_37);
    (X_53,r1_58) := algebra.subjoin(X_44,X_13,nil:BAT,nil:BAT,false,nil:lng);
    X_58 := algebra.projection(X_53,X_44);
    (X_59,r1_64) := algebra.subjoin(X_13,X_58,nil:BAT,nil:BAT,false,nil:lng);
    X_61:bat[:int] := sql.bind(X_0,"sys","lineitem","l_orderkey",0);
    X_68:bat[:int] := algebra.projectionpath(r1_58,X_1,X_61);
    X_69:bat[:oid] := batcalc.identity(X_68);
    X_72 := algebra.projection(r1_64,X_69);
    (X_73,r1_78,r2_78) := group.subgroupdone(X_72);
    X_76:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",0);
    X_82 := algebra.projection(X_1,X_76);
    X_85:bat[:lng] := algebra.projectionpath(r1_78,r1_64,r1_58,X_82);
    X_96 := algebra.projection(X_59,X_82);
    X_97:bat[:dbl] := batcalc.dbl(2,X_96);
    X_98:bat[:dbl] := aggr.subavg(X_97,X_73,r1_78,true,true);
    X_108:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_86:bat[:dbl] := batcalc.dbl(2,X_85);
    X_101:bat[:dbl] := batcalc.*(0.2,X_98);
    X_103:bat[:bit] := batcalc.<(X_86,X_101);
    X_106 := algebra.subselect(X_103,true,true,true,true,false);
    X_118:bat[:lng] := algebra.projectionpath(X_106,r1_78,r1_64,r1_58,X_1,X_108);
    X_119:hge := aggr.sum(X_118);
    X_120 := calc.hge(2,X_119,39,5);
    X_127:hge := calc./(X_120,700:hge);
    sql.resultSet("sys.L3","avg_yearly","decimal",39,3,10,X_127);
end user.s4_1;
#inline               actions= 0 time=5 usec 
#candidates           actions= 1 time=63 usec 
#remap                actions= 5 time=108 usec 
#costModel            actions= 1 time=46 usec 
#coercions            actions= 0 time=4 usec 
#evaluate             actions= 5 time=73 usec 
#emptybind            actions= 0 time=5 usec 
#pushselect           actions= 4 time=54 usec 
#aliases              actions=17 time=47 usec 
#mergetable           actions= 0 time=53 usec 
#deadcode             actions=18 time=40 usec 
#aliases              actions= 0 time=8 usec 
#constants            actions=14 time=46 usec 
#commonTerms          actions= 5 time=39 usec 
#projectionpath       actions= 7 time=39 usec 
#reorder              actions= 1 time=57 usec 
#deadcode             actions=12 time=33 usec 
#reduce               actions=98 time=58 usec 
#matpack              actions= 0 time=5 usec 
#querylog             actions= 0 time=0 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=30 usec 
#garbageCollector     actions= 1 time=33 usec 
#total                actions= 1 time=924 usec 

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

