stdout of test '14-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "14-explain.SQL.py" "14-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	100.00 * sum(case
#		when p_type like 'PROMO%'
#			then l_extendedprice * (1 - l_discount)
#		else 0
#	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
#from
#	lineitem,
#	part
#where
#	l_partkey = p_partkey
#	and l_shipdate >= date '1995-09-01'
#	and l_shipdate < date '1995-09-01' + interval '1' month;
% .explain # table_name
% mal # name
% clob # type
% 407 # length
function user.s2_1(A0:sht,A1:str,A2:bte,A3:bte,A4:bte,A5:date,A6:date,A7:int):void;
    X_113:void := querylog.define("explain select\n 100.00 * sum(case\n when p_type like \\'PROMO%\\'\n then l_extendedprice * (1 - l_discount)\n else 0\n end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue\nfrom\n lineitem,\n part\nwhere\n l_partkey = p_partkey\n and l_shipdate >= date \\'1995-09-01\\'\n and l_shipdate < date \\'1995-09-01\\' + interval \\'1\\' month;","sequential_pipe",55);
    X_0 := sql.mvc();
    X_5:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    C_2:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_18:date := mtime.addmonths(A6,A7);
    C_126 := algebra.subselect(X_5,C_2,A5,X_18,true,false,false);
    (C_8:bat[:oid],r1_17:bat[:date]) := sql.bind(X_0,"sys","lineitem","l_shipdate",2);
    C_127 := algebra.subselect(r1_17,nil:bat[:oid],A5,X_18,true,false,false);
    X_11:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",1);
    C_129 := algebra.subselect(X_11,C_2,A5,X_18,true,false,false);
    C_19 := sql.subdelta(C_126,C_2,C_8,C_127,C_129);
    X_23:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    (C_25:bat[:oid],r1_34:bat[:int]) := sql.bind(X_0,"sys","lineitem","l_partkey",2);
    X_27:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",1);
    X_30 := sql.projectdelta(C_19,X_23,C_25,r1_34,X_27);
    C_31:bat[:oid] := sql.tid(X_0,"sys","part");
    X_33:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    (C_35:bat[:oid],r1_44:bat[:int]) := sql.bind(X_0,"sys","part","p_partkey",2);
    X_37:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",1);
    X_39 := sql.projectdelta(C_31,X_33,C_35,r1_44,X_37);
    (X_40,r1_49) := algebra.subjoin(X_30,X_39,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:str] := sql.bind(X_0,"sys","part","p_type",0);
    (C_47:bat[:oid],r1_56:bat[:str]) := sql.bind(X_0,"sys","part","p_type",2);
    X_49:bat[:str] := sql.bind(X_0,"sys","part","p_type",1);
    X_51 := sql.projectdelta(C_31,X_45,C_47,r1_56,X_49);
    X_52 := algebra.projection(r1_49,X_51);
    X_54:bat[:bit] := batalgebra.like(X_52,A1);
    X_57:bat[:bit] := batcalc.isnil(X_54);
    X_62:bat[:bit] := batcalc.ifthenelse(X_57,false,X_54);
    X_64:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    (C_66:bat[:oid],r1_75:bat[:lng]) := sql.bind(X_0,"sys","lineitem","l_extendedprice",2);
    X_68:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",1);
    X_71 := sql.projectdelta(C_19,X_64,C_66,r1_75,X_68);
    X_72 := algebra.projection(X_40,X_71);
    X_74 := calc.lng(A2,15,2);
    X_77:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    (C_79:bat[:oid],r1_88:bat[:lng]) := sql.bind(X_0,"sys","lineitem","l_discount",2);
    X_81:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",1);
    X_84 := sql.projectdelta(C_19,X_77,C_79,r1_88,X_81);
    X_85 := algebra.projection(X_40,X_84);
    X_86:bat[:lng] := batcalc.-(X_74,X_85);
    X_88:bat[:lng] := batcalc.*(X_72,X_86);
    X_91 := calc.lng(A3,19,4);
    X_94:bat[:lng] := batcalc.ifthenelse(X_62,X_88,X_91);
    X_97:lng := aggr.sum(X_94);
    X_98:lng := calc.*(A0,X_97);
    X_99 := calc.lng(5,X_98,19,9);
    X_103 := calc.lng(A4,15,2);
    X_104:bat[:lng] := batcalc.-(X_103,X_85);
    X_105:bat[:lng] := batcalc.*(X_72,X_104);
    X_106:lng := aggr.sum(X_105);
    X_107:lng := calc./(X_99,X_106);
    sql.resultSet(".L2","promo_revenue","decimal",19,5,10,X_107);
end user.s2_1;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

