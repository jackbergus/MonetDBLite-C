stdout of test '14-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "14-explain.SQL.py" "14-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	100.00 * sum(case
#		when p_type like 'PROMO%'
#			then l_extendedprice * (1 - l_discount)
#		else 0
#	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
#from
#	lineitem,
#	part
#where
#	l_partkey = p_partkey
#	and l_shipdate >= date '1995-09-01'
#	and l_shipdate < date '1995-09-01' + interval '1' month;
% .explain # table_name
% mal # name
% clob # type
% 80 # length
function user.main():void;
    X_562 := sql.mvc();
    X_566:bat[:date] := sql.bind(X_562,"sys","lineitem","l_shipdate",0);
    C_563:bat[:oid] := sql.tid(X_562,"sys","lineitem");
    X_578:date := mtime.addmonths("1995-09-01",1);
    C_579 := algebra.subselect(X_566,C_563,"1995-09-01",X_578,true,false,false);
    X_583:bat[:int] := sql.bind(X_562,"sys","lineitem","l_partkey",0);
    X_590 := algebra.projection(C_579,X_583);
    C_591:bat[:oid] := sql.tid(X_562,"sys","part");
    X_593:bat[:int] := sql.bind(X_562,"sys","part","p_partkey",0);
    X_599 := algebra.projection(C_591,X_593);
    (X_600,r1_53) := algebra.subjoin(X_590,X_599,nil:BAT,nil:BAT,false,nil:lng);
    X_605:bat[:str] := sql.bind(X_562,"sys","part","p_type",0);
    X_612:bat[:str] := algebra.projectionpath(r1_53,C_591,X_605);
    X_614:bat[:bit] := batalgebra.like(X_612,"PROMO%");
    X_617:bat[:bit] := batcalc.isnil(X_614);
    X_622:bat[:bit] := batcalc.ifthenelse(X_617,false,X_614);
    X_624:bat[:lng] := sql.bind(X_562,"sys","lineitem","l_extendedprice",0);
    X_632:bat[:lng] := algebra.projectionpath(X_600,C_579,X_624);
    X_640:bat[:lng] := sql.bind(X_562,"sys","lineitem","l_discount",0);
    X_648:bat[:lng] := algebra.projectionpath(X_600,C_579,X_640);
    X_649:bat[:lng] := batcalc.-(100:lng,X_648);
    X_651:bat[:hge] := batcalc.*(X_632,X_649);
    X_657:bat[:hge] := batcalc.ifthenelse(X_622,X_651,0:hge);
    X_659:hge := aggr.sum(X_657);
    X_661:hge := calc.*(X_659,1000);
    X_662 := calc.hge(5,X_661,39,9);
    X_671:hge := aggr.sum(X_651);
    X_672:hge := calc./(X_662,X_671);
    sql.resultSet("sys.L2","promo_revenue","decimal",39,5,10,X_672);
end user.main;
#inline               actions= 0 time=4 usec 
#remap                actions= 9 time=139 usec 
#costmodel            actions= 1 time=3 usec 
#coercion             actions= 1 time=63 usec 
#evaluate             actions=19 time=49 usec 
#emptybind            actions=18 time=41 usec 
#aliases              actions=29 time=15 usec 
#deadcode             actions=19 time=10 usec 
#aliases              actions= 0 time=7 usec 
#constants            actions=19 time=23 usec 
#commonTerms          actions= 2 time=16 usec 
#projectionpath       actions= 3 time=13 usec 
#reorder              actions= 1 time=54 usec 
#deadcode             actions= 5 time=10 usec 
#reduce               actions=118 time=33 usec 
#multiplex            actions= 0 time=3 usec 
#generator            actions= 0 time=2 usec 
#profiler             actions= 1 time=73 usec 
#garbageCollector     actions= 1 time=76 usec 
#total                actions= 1 time=2323 usec 

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

