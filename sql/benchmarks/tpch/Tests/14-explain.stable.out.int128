stdout of test '14-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "14-explain.SQL.py" "14-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	100.00 * sum(case
#		when p_type like 'PROMO%'
#			then l_extendedprice * (1 - l_discount)
#		else 0
#	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
#from
#	lineitem,
#	part
#where
#	l_partkey = p_partkey
#	and l_shipdate >= date '1995-09-01'
#	and l_shipdate < date '1995-09-01' + interval '1' month;
% .explain # table_name
% mal # name
% clob # type
% 424 # length
function user.s2_1{autoCommit=true}(A0:sht,A1:str,A2:bte,A3:bte,A4:bte,A5:date,A6:date,A7:int):void;
    X_96:void := querylog.define("explain select\n\t100.00 * sum(case\n\t\twhen p_type like \\'PROMO%\\'\n\t\t\tthen l_extendedprice * (1 - l_discount)\n\t\telse 0\n\tend) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue\nfrom\n\tlineitem,\n\tpart\nwhere\n\tl_partkey = p_partkey\n\tand l_shipdate >= date \\'1995-09-01\\'\n\tand l_shipdate < date \\'1995-09-01\\' + interval \\'1\\' month;","sequential_pipe",55);
    X_10 := sql.mvc();
    X_14:bat[:oid,:date]  := sql.bind(X_10,"sys","lineitem","l_shipdate",0);
    X_11:bat[:oid,:oid]  := sql.tid(X_10,"sys","lineitem");
    X_22 := mtime.addmonths(A6,A7);
    X_123 := algebra.subselect(X_14,X_11,A5,X_22,true,false,false);
    (X_17,r1_18) := sql.bind(X_10,"sys","lineitem","l_shipdate",2);
    X_124 := algebra.subselect(r1_18,nil:bat[:oid,:oid],A5,X_22,true,false,false);
    X_20:bat[:oid,:date]  := sql.bind(X_10,"sys","lineitem","l_shipdate",1);
    X_126 := algebra.subselect(X_20,X_11,A5,X_22,true,false,false);
    X_23 := sql.subdelta(X_123,X_11,X_17,X_124,X_126);
    X_26:bat[:oid,:int] := sql.bind(X_10,"sys","lineitem","l_partkey",0);
    (X_28,r1_34) := sql.bind(X_10,"sys","lineitem","l_partkey",2);
    X_30:bat[:oid,:int] := sql.bind(X_10,"sys","lineitem","l_partkey",1);
    X_31 := sql.projectdelta(X_23,X_26,X_28,r1_34,X_30);
    X_32:bat[:oid,:oid] := sql.tid(X_10,"sys","part");
    X_34:bat[:oid,:int] := sql.bind(X_10,"sys","part","p_partkey",0);
    (X_36,r1_44) := sql.bind(X_10,"sys","part","p_partkey",2);
    X_38:bat[:oid,:int] := sql.bind(X_10,"sys","part","p_partkey",1);
    X_39 := sql.projectdelta(X_32,X_34,X_36,r1_44,X_38);
    (X_40,r1_49) := algebra.subjoin(X_31,X_39,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:oid,:str] := sql.bind(X_10,"sys","part","p_type",0);
    (X_47,r1_56) := sql.bind(X_10,"sys","part","p_type",2);
    X_49:bat[:oid,:str] := sql.bind(X_10,"sys","part","p_type",1);
    X_50 := sql.projectdelta(X_32,X_45,X_47,r1_56,X_49);
    X_51 := algebra.leftfetchjoin(r1_49,X_50);
    X_52:bat[:oid,:bit] := batalgebra.like(X_51,A1);
    X_53:bat[:oid,:bit] := batcalc.isnil(X_52);
    X_55:bat[:oid,:bit] := batcalc.ifthenelse(X_53,false,X_52);
    X_56:bat[:oid,:lng] := sql.bind(X_10,"sys","lineitem","l_extendedprice",0);
    (X_58,r1_77) := sql.bind(X_10,"sys","lineitem","l_extendedprice",2);
    X_60:bat[:oid,:lng] := sql.bind(X_10,"sys","lineitem","l_extendedprice",1);
    X_61 := sql.projectdelta(X_23,X_56,X_58,r1_77,X_60);
    X_62 := algebra.leftfetchjoin(X_40,X_61);
    X_65 := calc.lng(A2,15,2);
    X_67:bat[:oid,:lng] := sql.bind(X_10,"sys","lineitem","l_discount",0);
    (X_69,r1_93) := sql.bind(X_10,"sys","lineitem","l_discount",2);
    X_71:bat[:oid,:lng] := sql.bind(X_10,"sys","lineitem","l_discount",1);
    X_72 := sql.projectdelta(X_23,X_67,X_69,r1_93,X_71);
    X_73 := algebra.leftfetchjoin(X_40,X_72);
    X_74:bat[:oid,:lng] := batcalc.-(X_65,X_73);
    X_75:bat[:oid,:hge] := batcalc.*(X_62,X_74);
    X_76 := calc.hge(A3,33,4);
    X_78:bat[:oid,:hge] := batcalc.ifthenelse(X_55,X_75,X_76);
    X_79:hge := aggr.sum(X_78);
    X_80 := calc.*(A0,X_79);
    X_81 := calc.hge(5,X_80,39,9);
    X_85 := calc.lng(A4,15,2);
    X_87:bat[:oid,:lng] := batcalc.-(X_85,X_73);
    X_88:bat[:oid,:hge] := batcalc.*(X_62,X_87);
    X_89:hge := aggr.sum(X_88);
    X_90 := calc./(X_81,X_89);
    sql.resultSet(".L2","promo_revenue","decimal",39,5,10,X_90);
end user.s2_1;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

