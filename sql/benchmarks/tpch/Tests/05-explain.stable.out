stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 15:45:51 >  
# 15:45:51 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32235" "--set" "mapi_usock=/var/tmp/mtest-5512/.s.monetdb.32235" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-stable/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 15:45:51 >  

# MonetDB 5 server v11.19.10 (hg id: 476a699b2b1e+)
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:32235/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-5512/.s.monetdb.32235
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 15:45:52 >  
# 15:45:52 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 15:45:52 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 572 # length
function user.s4_1():void;
    X_291:void := querylog.define("explain select\n n_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n customer,\n orders,\n lineitem,\n supplier,\n nation,\n region\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and l_suppkey = s_suppkey\n and c_nationkey = s_nationkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'ASIA\\'\n and o_orderdate >= date \\'1994-01-01\\'\n and o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n n_name\norder by\n revenue desc;","sequential_pipe",91);
    X_264 := bat.new(nil:str);
    X_271 := bat.append(X_264,"sys.nation");
    X_281 := bat.append(X_271,"sys.L4");
    X_266 := bat.new(nil:str);
    X_273 := bat.append(X_266,"n_name");
    X_283 := bat.append(X_273,"revenue");
    X_267 := bat.new(nil:str);
    X_275 := bat.append(X_267,"char");
    X_285 := bat.append(X_275,"decimal");
    X_268 := bat.new(nil:int);
    X_277 := bat.append(X_268,25);
    X_287 := bat.append(X_277,19);
    X_270 := bat.new(nil:int);
    X_279 := bat.append(X_270,0);
    X_289 := bat.append(X_279,4);
    X_0 := sql.mvc();
    X_4:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","orders");
    X_24:date := mtime.addmonths("1994-01-01",12);
    C_25 := algebra.subselect(X_4,C_1,"1994-01-01",X_24,true,false,false);
    X_14:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_17,X_18:bat[:oid]) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_31 := sql.projectdelta(C_25,X_14,X_17,X_18,X_16);
    C_32:bat[:oid] := sql.tid(X_0,"sys","customer");
    (X_41,X_42) := algebra.subjoin(X_31,C_32,nil:BAT,nil:BAT,false,nil:lng);
    X_47 := algebra.projection(X_41,C_25);
    C_51:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_74:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_77,X_78:bat[:oid]) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_76:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_80 := sql.projectdelta(C_51,X_74,X_77,X_78,X_76);
    (X_81,X_82) := algebra.subjoin(X_47,X_80,nil:BAT,nil:BAT,false,nil:lng);
    X_53:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    X_92:bat[:int] := algebra.projectionpath(X_82,C_51,X_53);
    X_129:bat[:lng] := batmkey.hash(X_92);
    X_34:bat[:int] := sql.bind(X_0,"sys","customer","c_nationkey",0);
    X_90:bat[:int] := algebra.projectionpath(X_81,X_42,C_32,X_34);
    X_132:bat[:lng] := mkey.bulk_rotate_xor_hash(X_129,22,X_90);
    C_96:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_98:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    X_104 := algebra.projection(C_96,X_98);
    X_134:bat[:lng] := batmkey.hash(X_104);
    X_105:bat[:int] := sql.bind(X_0,"sys","supplier","s_nationkey",0);
    X_111 := algebra.projection(C_96,X_105);
    X_135:bat[:lng] := mkey.bulk_rotate_xor_hash(X_134,22,X_111);
    (X_136,X_137) := algebra.subjoin(X_132,X_135,nil:BAT,nil:BAT,false,nil:lng);
    X_138 := algebra.projection(X_136,X_92);
    X_139 := algebra.projection(X_137,X_104);
    X_140:bat[:bit] := batcalc.==(X_138,X_139);
    C_145 := algebra.subselect(X_140,true,true,true,false,false);
    X_146 := algebra.projection(C_145,X_136);
    X_148 := algebra.projection(X_146,X_90);
    X_147 := algebra.projection(C_145,X_137);
    X_149 := algebra.projection(X_147,X_111);
    X_150:bat[:bit] := batcalc.==(X_148,X_149);
    C_152 := algebra.subselect(X_150,true,true,true,false,false);
    X_112:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_115,X_116:bat[:oid]) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_114:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_118 := sql.projectdelta(C_96,X_112,X_115,X_116,X_114);
    X_166:bat[:oid] := algebra.projectionpath(C_152,X_147,X_118);
    C_167:bat[:oid] := sql.tid(X_0,"sys","nation");
    (X_183,X_184) := algebra.subjoin(X_166,C_167,nil:BAT,nil:BAT,false,nil:lng);
    X_176:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",0);
    (X_179,X_180:bat[:oid]) := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",2);
    X_178:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",1);
    X_182 := sql.projectdelta(C_167,X_176,X_179,X_180,X_178);
    X_203 := algebra.projection(X_184,X_182);
    X_206:bat[:str] := sql.bind(X_0,"sys","region","r_name",0);
    C_204:bat[:oid] := sql.tid(X_0,"sys","region");
    C_214 := algebra.subselect(X_206,C_204,"ASIA","ASIA",true,false,false);
    (X_218,X_219) := algebra.subjoin(X_203,C_214,nil:BAT,nil:BAT,false,nil:lng);
    X_153 := algebra.projection(C_152,X_146);
    X_60:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_230:bat[:lng] := algebra.projectionpath(X_218,X_183,X_153,X_82,C_51,X_60);
    X_67:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_231:bat[:lng] := algebra.projectionpath(X_218,X_183,X_153,X_82,C_51,X_67);
    X_245:bat[:lng] := batcalc.-(100:lng,X_231);
    X_248:bat[:lng] := batcalc.*(X_230,X_245);
    X_169:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_236:bat[:str] := algebra.projectionpath(X_218,X_184,C_167,X_169);
    (X_250,X_251,X_252) := group.subgroupdone(X_236);
    X_254:bat[:lng] := aggr.subsum(X_248,X_250,X_251,true,true);
    (X_257,X_258,X_259) := algebra.subsort(X_254,true,false);
    X_261:bat[:str] := algebra.projectionpath(X_258,X_251,X_236);
    X_262 := algebra.projection(X_258,X_254);
    sql.resultSet(X_281,X_283,X_285,X_287,X_289,X_261,X_262);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#remap                actions= 6 time=133 usec 
#costmodel            actions= 1 time=8 usec 
#coercion             actions= 4 time=38 usec 
#evaluate             actions= 6 time=67 usec 
#emptybind            actions=27 time=97 usec 
#pushselect           actions=11 time=89 usec 
#aliases              actions=20 time=36 usec 
#mergetable           actions= 0 time=186 usec 
#deadcode             actions=31 time=28 usec 
#aliases              actions= 0 time=22 usec 
#constants            actions=32 time=61 usec 
#commonTerms          actions= 0 time=26 usec 
#projectionpath       actions=14 time=52 usec 
#reorder              actions= 1 time=102 usec 
#deadcode             actions=14 time=21 usec 
#reduce               actions=142 time=46 usec 
#matpack              actions= 0 time=5 usec 
#multiplex            actions= 0 time=5 usec 
#profiler             actions= 1 time=12 usec 
#candidates           actions= 1 time=3 usec 
#garbagecollector     actions= 1 time=64 usec 
#total                actions= 1 time=1511 usec 

# 15:45:52 >  
# 15:45:52 >  "Done."
# 15:45:52 >  

