stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 566 # length
function user.s2_1(A0:sht):void;
    X_177:void := querylog.define("explain select\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice,\n\tsum(l_quantity)\nfrom\n\tcustomer,\n\torders,\n\tlineitem\nwhere\n\to_orderkey in (\n\t\tselect\n\t\t\tl_orderkey\n\t\tfrom\n\t\t\tlineitem\n\t\tgroup by\n\t\t\tl_orderkey having\n\t\t\t\tsum(l_quantity) > 300\n\t)\n\tand c_custkey = o_custkey\n\tand o_orderkey = l_orderkey\ngroup by\n\tc_name,\n\tc_custkey,\n\to_orderkey,\n\to_orderdate,\n\to_totalprice\norder by\n\to_totalprice desc,\n\to_orderdate\nlimit 100;","sequential_pipe",117);
    X_128 := bat.new(nil:oid,nil:str);
    X_136 := bat.append(X_128,"sys.customer");
    X_144 := bat.append(X_136,"sys.customer");
    X_151 := bat.append(X_144,"sys.orders");
    X_157 := bat.append(X_151,"sys.orders");
    X_163 := bat.append(X_157,"sys.orders");
    X_170 := bat.append(X_163,"sys.L6");
    X_131 := bat.new(nil:oid,nil:str);
    X_138 := bat.append(X_131,"c_name");
    X_145 := bat.append(X_138,"c_custkey");
    X_153 := bat.append(X_145,"o_orderkey");
    X_158 := bat.append(X_153,"o_orderdate");
    X_164 := bat.append(X_158,"o_totalprice");
    X_172 := bat.append(X_164,"L6");
    X_132 := bat.new(nil:oid,nil:str);
    X_139 := bat.append(X_132,"varchar");
    X_146 := bat.append(X_139,"int");
    X_154 := bat.append(X_146,"int");
    X_159 := bat.append(X_154,"date");
    X_165 := bat.append(X_159,"decimal");
    X_174 := bat.append(X_165,"decimal");
    X_133 := bat.new(nil:oid,nil:int);
    X_141 := bat.append(X_133,25);
    X_148 := bat.append(X_141,32);
    X_155 := bat.append(X_148,32);
    X_161 := bat.append(X_155,0);
    X_167 := bat.append(X_161,15);
    X_175 := bat.append(X_167,19);
    X_135 := bat.new(nil:oid,nil:int);
    X_143 := bat.append(X_135,0);
    X_150 := bat.append(X_143,0);
    X_156 := bat.append(X_150,0);
    X_162 := bat.append(X_156,0);
    X_169 := bat.append(X_162,2);
    X_176 := bat.append(X_169,2);
    X_3 := sql.mvc();
    C_4:bat[:oid,:oid] := sql.tid(X_3,"sys","orders");
    X_7:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (C_10,r1_10) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_13:bat[:oid,:int]  := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_15 := sql.delta(X_7,C_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(C_4,X_15);
    X_17 := bat.mirror(X_16);
    C_18:bat[:oid,:oid] := sql.tid(X_3,"sys","lineitem");
    X_20:bat[:oid,:lng]  := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (C_22,r1_22) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_24:bat[:oid,:lng]  := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_25 := sql.delta(X_20,C_22,r1_22,X_24);
    X_26 := algebra.leftfetchjoin(C_18,X_25);
    X_27:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (C_29,r1_29) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_32 := sql.delta(X_27,C_29,r1_29,X_31);
    X_33 := algebra.leftfetchjoin(C_18,X_32);
    (X_34,r1_34,r2_34) := group.subgroupdone(X_33);
    X_37:bat[:oid,:lng]  := aggr.subsum(X_26,X_34,r1_34,true,true);
    X_38 := calc.lng(A0,19,2);
    C_40 := algebra.thetasubselect(X_37,X_38,">");
    X_42:bat[:oid,:int] := algebra.leftfetchjoinPath(C_40,r1_34,X_33);
    (X_43,r1_47) := algebra.subjoin(X_16,X_42,nil:BAT,nil:BAT,false,nil:lng);
    C_48 := algebra.subinter(X_17,X_43,nil:BAT,nil:BAT,false,nil:lng);
    X_49 := algebra.leftfetchjoin(C_48,X_16);
    (X_50,r1_63) := algebra.subjoin(X_49,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_52:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_54,r1_67) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_56:bat[:oid,:oid] := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_57 := sql.delta(X_52,X_54,r1_67,X_56);
    X_58:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_50,C_48,C_4,X_57);
    C_59:bat[:oid,:oid] := sql.tid(X_3,"sys","customer");
    (X_61,r1_76) := algebra.subjoin(X_58,C_59,nil:BAT,nil:BAT,false,nil:lng);
    X_63:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",0);
    (C_65,r1_80) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_67:bat[:oid,:int] := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_68 := sql.delta(X_63,C_65,r1_80,X_67);
    X_69 := algebra.leftfetchjoin(C_59,X_68);
    X_70 := algebra.leftfetchjoin(r1_76,X_69);
    X_71:bat[:oid,:int] := algebra.leftfetchjoinPath(X_61,X_50,X_49);
    (X_72,r1_88,r2_88) := group.subgroup(X_71);
    (X_75,r1_91,r2_91) := group.subgroupdone(X_70,X_72);
    X_78 := algebra.leftfetchjoin(r1_91,X_70);
    (X_79,r1_102) := algebra.subjoin(X_78,X_69,nil:BAT,nil:BAT,false,nil:lng);
    X_81:bat[:oid,:int] := algebra.leftfetchjoinPath(X_79,r1_91,X_71);
    X_124:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_61,r1_63,X_26);
    X_125:bat[:oid,:lng] := aggr.subsum(X_124,X_75,r1_91,true,true);
    (X_82,r1_118) := algebra.subjoin(X_81,X_16,nil:BAT,nil:BAT,false,nil:lng);
    X_84:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (C_86,r1_122) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_88:bat[:oid,:date] := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_89 := sql.delta(X_84,C_86,r1_122,X_88);
    X_90:bat[:oid,:date] := algebra.leftfetchjoinPath(r1_118,C_4,X_89);
    X_91:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (C_93,r1_130) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_95:bat[:oid,:lng] := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_96 := sql.delta(X_91,C_93,r1_130,X_95);
    X_97:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_118,C_4,X_96);
    (C_100,r1_141) := algebra.firstn(X_97,100,false,false);
    C_102 := algebra.firstn(X_90,C_100,r1_141,100,true,false);
    X_103 := algebra.leftfetchjoin(C_102,X_90);
    X_104 := algebra.leftfetchjoin(C_102,X_97);
    (X_105,r1_151,r2_151) := algebra.subsort(X_104,true,false);
    (X_108,r1_154,r2_154) := algebra.subsort(X_103,r1_151,r2_151,false,false);
    X_111:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",0);
    (C_113,r1_159) := sql.bind(X_3,"sys","customer","c_name",2);
    X_115:bat[:oid,:str] := sql.bind(X_3,"sys","customer","c_name",1);
    X_116 := sql.delta(X_111,C_113,r1_159,X_115);
    X_117:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_154,C_102,X_82,r1_102,C_59,X_116);
    X_118 := algebra.subslice(X_117,0,99:wrd);
    X_119 := algebra.leftfetchjoin(X_118,X_117);
    X_120:bat[:oid,:int] := algebra.leftfetchjoinPath(X_118,r1_154,C_102,X_82,X_79,X_78);
    X_121:bat[:oid,:int] := algebra.leftfetchjoinPath(X_118,r1_154,C_102,X_82,X_81);
    X_122:bat[:oid,:date] := algebra.leftfetchjoinPath(X_118,r1_154,X_103);
    X_123:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_118,r1_154,X_104);
    X_126:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_118,r1_154,C_102,X_82,X_79,X_125);
    sql.resultSet(X_170,X_172,X_174,X_175,X_176,X_119,X_120,X_121,X_122,X_123,X_126);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

