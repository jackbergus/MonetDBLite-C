stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 87 # length
function user.s0_1{autoCommit=true}(A0:lng):void;
    X_3 := sql.mvc();
    X_4:bat[:oid,:oid]  := sql.tid(X_3,"sys","lineitem");
    X_7 := sql.bind_idxbat(X_3,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_10,r1_10) := sql.bind_idxbat(X_3,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_13 := sql.bind_idxbat(X_3,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_15 := sql.delta(X_7,X_10,r1_10,X_13);
    X_16 := algebra.leftfetchjoin(X_4,X_15);
    X_17:bat[:oid,:oid]  := sql.tid(X_3,"sys","orders");
    (X_19,r1_19) := algebra.join(X_16,X_17);
    X_21 := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",0);
    (X_23,r1_23) := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",2);
    X_25 := sql.bind_idxbat(X_3,"sys","orders","orders_o_custkey_fkey",1);
    X_26 := sql.delta(X_21,X_23,r1_23,X_25);
    X_27:bat[:oid,:oid]  := algebra.leftfetchjoinPath(r1_19,X_17,X_26);
    X_28:bat[:oid,:oid]  := sql.tid(X_3,"sys","customer");
    (X_30,r1_31) := algebra.join(X_27,X_28);
    X_217 := algebra.leftfetchjoin(X_30,X_19);
    X_32 := sql.bind(X_3,"sys","lineitem","l_orderkey",0);
    (X_34,r1_35) := sql.bind(X_3,"sys","lineitem","l_orderkey",2);
    X_36 := sql.bind(X_3,"sys","lineitem","l_orderkey",1);
    X_39 := sql.delta(X_32,X_34,r1_35,X_36);
    X_40 := algebra.leftfetchjoin(X_4,X_39);
    X_41:bat[:oid,:int]  := algebra.leftfetchjoin(X_217,X_40);
    X_42 := bat.mirror(X_41);
    X_43 := sql.bind(X_3,"sys","orders","o_orderkey",0);
    (X_46,r1_48) := sql.bind(X_3,"sys","orders","o_orderkey",2);
    X_49 := sql.bind(X_3,"sys","orders","o_orderkey",1);
    X_52 := sql.delta(X_43,X_46,r1_48,X_49);
    X_53 := algebra.leftfetchjoin(X_17,X_52);
    X_54:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_30,r1_19,X_53);
    X_55 := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_57,r1_61) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_59 := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_60 := sql.delta(X_55,X_57,r1_61,X_59);
    X_61 := algebra.leftfetchjoin(X_4,X_60);
    (X_63,r1_75,r2_75) := group.subgroupdone(X_40);
    X_66:bat[:oid,:lng]  := aggr.subsum(X_61,X_63,r1_75,true,true);
    X_68 := algebra.thetasubselect(X_66,A0,">");
    X_70:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_68,r1_75,X_40);
    (X_71,r1_85,r2_85) := group.subgroupdone(X_70);
    X_74 := algebra.leftfetchjoin(r1_85,X_70);
    (X_75,r1_89) := algebra.join(X_54,X_74);
    X_77 := algebra.tinter(X_42,X_75);
    X_78 := sql.bind(X_3,"sys","customer","c_custkey",0);
    (X_82,r1_96) := sql.bind(X_3,"sys","customer","c_custkey",2);
    X_85 := sql.bind(X_3,"sys","customer","c_custkey",1);
    X_87 := sql.delta(X_78,X_82,r1_96,X_85);
    X_88 := algebra.leftfetchjoin(X_28,X_87);
    X_89:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_77,r1_31,X_88);
    X_90 := algebra.leftfetchjoin(X_77,X_54);
    (X_91,r1_106,r2_106) := group.subgroup(X_90);
    (X_94,r1_109,r2_109) := group.subgroupdone(X_89,X_91);
    X_97 := algebra.leftfetchjoin(r1_109,X_89);
    (X_99,r1_121) := algebra.join(X_97,X_88);
    X_101:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_99,r1_109,X_90);
    X_148 := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    (X_153,r1_210) := sql.bind(X_3,"sys","lineitem","l_quantity",2);
    X_156 := sql.bind(X_3,"sys","lineitem","l_quantity",1);
    X_158 := sql.delta(X_148,X_153,r1_210,X_156);
    X_159:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_77,X_217,X_4,X_158);
    X_160:bat[:oid,:lng]  := aggr.subsum(X_159,X_94,r1_109,true,true);
    (X_106,r1_137) := algebra.join(X_101,X_53);
    X_218 := algebra.leftfetchjoin(r1_137,X_17);
    X_108 := sql.bind(X_3,"sys","orders","o_totalprice",0);
    (X_110,r1_141) := sql.bind(X_3,"sys","orders","o_totalprice",2);
    X_112 := sql.bind(X_3,"sys","orders","o_totalprice",1);
    X_113 := sql.delta(X_108,X_110,r1_141,X_112);
    X_114:bat[:oid,:lng]  := algebra.leftfetchjoin(X_218,X_113);
    X_116 := pqueue.utopn_min(X_114,100:wrd);
    X_117 := bat.mirror(X_116);
    X_118 := sql.bind(X_3,"sys","orders","o_orderdate",0);
    (X_121,r1_157) := sql.bind(X_3,"sys","orders","o_orderdate",2);
    X_124 := sql.bind(X_3,"sys","orders","o_orderdate",1);
    X_125 := sql.delta(X_118,X_121,r1_157,X_124);
    X_126:bat[:oid,:date]  := algebra.leftfetchjoin(X_218,X_125);
    X_127 := algebra.leftfetchjoin(X_117,X_126);
    X_128 := pqueue.topn_max(X_116,X_127,100:wrd);
    X_130 := algebra.subslice(X_128,0:wrd,99:wrd);
    X_219 := algebra.leftfetchjoin(X_130,X_106);
    X_131 := sql.bind(X_3,"sys","customer","c_name",0);
    (X_135,r1_177) := sql.bind(X_3,"sys","customer","c_name",2);
    X_138 := sql.bind(X_3,"sys","customer","c_name",1);
    X_139 := sql.delta(X_131,X_135,r1_177,X_138);
    X_140:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_219,r1_121,X_28,X_139);
    X_142 := algebra.subslice(X_140,0:wrd,99:wrd);
    X_143 := algebra.leftfetchjoin(X_142,X_140);
    X_220 := algebra.leftfetchjoin(X_142,X_130);
    X_162:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_220,X_106,X_99,X_160);
    X_147:bat[:oid,:lng]  := algebra.leftfetchjoin(X_220,X_114);
    X_146:bat[:oid,:date]  := algebra.leftfetchjoin(X_220,X_126);
    X_145:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_220,X_106,X_101);
    X_144:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_220,X_106,X_99,X_97);
    X_163 := sql.resultSet(6,1,X_143);
    sql.rsColumn(X_163,"sys.customer","c_name","varchar",25,0,X_143);
    sql.rsColumn(X_163,"sys.customer","c_custkey","int",32,0,X_144);
    sql.rsColumn(X_163,"sys.orders","o_orderkey","int",32,0,X_145);
    sql.rsColumn(X_163,"sys.orders","o_orderdate","date",0,0,X_146);
    sql.rsColumn(X_163,"sys.orders","o_totalprice","decimal",15,2,X_147);
    sql.rsColumn(X_163,"sys.L6","L6","bigint",32,0,X_162);
    X_190 := io.stdout();
    sql.exportResult(X_190,X_163);
end s0_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

