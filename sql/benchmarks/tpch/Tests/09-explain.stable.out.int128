stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 739 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_189:void := querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe",121);
    X_155 := bat.new(nil:oid,nil:str);
    X_163 := bat.append(X_155,"sys.profit");
    X_171 := bat.append(X_163,"sys.profit");
    X_179 := bat.append(X_171,"sys.L1");
    X_158 := bat.new(nil:oid,nil:str);
    X_165 := bat.append(X_158,"nation");
    X_172 := bat.append(X_165,"o_year");
    X_181 := bat.append(X_172,"sum_profit");
    X_159 := bat.new(nil:oid,nil:str);
    X_166 := bat.append(X_159,"char");
    X_174 := bat.append(X_166,"int");
    X_183 := bat.append(X_174,"decimal");
    X_160 := bat.new(nil:oid,nil:int);
    X_168 := bat.append(X_160,25);
    X_176 := bat.append(X_168,32);
    X_185 := bat.append(X_176,39);
    X_162 := bat.new(nil:oid,nil:int);
    X_170 := bat.append(X_162,0);
    X_178 := bat.append(X_170,0);
    X_187 := bat.append(X_178,4);
    X_4 := sql.mvc();
    X_8:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_name",0);
    X_5:bat[:oid,:oid] := sql.tid(X_4,"sys","part");
    X_249 := algebra.likesubselect(X_8,X_5,A1,"",false);
    (X_11,r1_11) := sql.bind(X_4,"sys","part","p_name",2);
    X_250 := algebra.likesubselect(r1_11,nil:bat[:oid,:oid],A1,"",false);
    X_14:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_name",1);
    X_252 := algebra.likesubselect(X_14,X_5,A1,"",false);
    X_17 := sql.subdelta(X_249,X_5,X_11,X_250,X_252);
    X_20:bat[:oid,:int] := sql.bind(X_4,"sys","part","p_partkey",0);
    (X_22,r1_26) := sql.bind(X_4,"sys","part","p_partkey",2);
    X_24:bat[:oid,:int] := sql.bind(X_4,"sys","part","p_partkey",1);
    X_25 := sql.projectdelta(X_17,X_20,X_22,r1_26,X_24);
    X_26:bat[:oid,:oid] := sql.tid(X_4,"sys","lineitem");
    X_28:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_partkey",0);
    (X_30,r1_36) := sql.bind(X_4,"sys","lineitem","l_partkey",2);
    X_32:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_partkey",1);
    X_33 := sql.projectdelta(X_26,X_28,X_30,r1_36,X_32);
    (X_34,r1_41) := algebra.subjoin(X_25,X_33,nil:BAT,nil:BAT,false,nil:lng);
    X_37:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    (X_39,r1_46) := sql.bind(X_4,"sys","lineitem","l_suppkey",2);
    X_41:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",1);
    X_42 := sql.projectdelta(X_26,X_37,X_39,r1_46,X_41);
    X_43 := algebra.leftfetchjoin(r1_41,X_42);
    X_44:bat[:oid,:oid] := sql.tid(X_4,"sys","supplier");
    X_46:bat[:oid,:int] := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    (X_48,r1_56) := sql.bind(X_4,"sys","supplier","s_suppkey",2);
    X_50:bat[:oid,:int] := sql.bind(X_4,"sys","supplier","s_suppkey",1);
    X_51 := sql.projectdelta(X_44,X_46,X_48,r1_56,X_50);
    (X_52,r1_61) := algebra.subjoin(X_43,X_51,nil:BAT,nil:BAT,false,nil:lng);
    X_54:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_56,r1_68) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_58:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_59 := sql.projectdelta(X_26,X_54,X_56,r1_68,X_58);
    X_60:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_52,r1_41,X_59);
    X_61:bat[:oid,:oid] := sql.tid(X_4,"sys","partsupp");
    (X_63,r1_77) := algebra.subjoin(X_60,X_61,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_67,r1_82) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_69:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_70 := sql.projectdelta(X_26,X_65,X_67,r1_82,X_69);
    X_71:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_63,X_52,r1_41,X_70);
    X_72:bat[:oid,:oid] := sql.tid(X_4,"sys","orders");
    (X_74,r1_92) := algebra.subjoin(X_71,X_72,nil:BAT,nil:BAT,false,nil:lng);
    X_76:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_78,r1_96) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_80:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_81 := sql.projectdelta(X_44,X_76,X_78,r1_96,X_80);
    X_82:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_74,X_63,r1_61,X_81);
    X_83:bat[:oid,:oid] := sql.tid(X_4,"sys","nation");
    (X_85,r1_106) := algebra.subjoin(X_82,X_83,nil:BAT,nil:BAT,false,nil:lng);
    X_87:bat[:oid,:date] := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_89,r1_113) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_91:bat[:oid,:date] := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_92 := sql.projectdelta(X_72,X_87,X_89,r1_113,X_91);
    X_93:bat[:oid,:date] := algebra.leftfetchjoinPath(X_85,r1_92,X_92);
    X_94:bat[:oid,:int] := batmtime.year(X_93);
    X_95:bat[:oid,:str] := sql.bind(X_4,"sys","nation","n_name",0);
    (X_97,r1_125) := sql.bind(X_4,"sys","nation","n_name",2);
    X_99:bat[:oid,:str] := sql.bind(X_4,"sys","nation","n_name",1);
    X_100 := sql.projectdelta(X_83,X_95,X_97,r1_125,X_99);
    X_101 := algebra.leftfetchjoin(r1_106,X_100);
    (X_102,r1_131,r2_131) := group.subgroup(X_101);
    (X_105,r1_134,r2_134) := group.subgroupdone(X_94,X_102);
    X_108 := algebra.leftfetchjoin(r1_134,X_94);
    X_109 := algebra.leftfetchjoin(r1_134,X_101);
    X_118:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_120,r1_151) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_122:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_123 := sql.projectdelta(X_26,X_118,X_120,r1_151,X_122);
    X_124:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_85,X_74,X_63,X_52,r1_41,X_123);
    X_125 := calc.lng(A0,15,2);
    X_127:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_129,r1_171) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_131:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_132 := sql.projectdelta(X_26,X_127,X_129,r1_171,X_131);
    X_133:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_85,X_74,X_63,X_52,r1_41,X_132);
    X_134:bat[:oid,:lng] := batcalc.-(X_125,X_133);
    X_135:bat[:oid,:hge] := batcalc.*(X_124,X_134);
    X_136:bat[:oid,:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_138,r1_187) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_140:bat[:oid,:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_141 := sql.projectdelta(X_61,X_136,X_138,r1_187,X_140);
    X_142:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_85,X_74,r1_77,X_141);
    X_143:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_145,r1_202) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_147:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_148 := sql.projectdelta(X_26,X_143,X_145,r1_202,X_147);
    X_149:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_85,X_74,X_63,X_52,r1_41,X_148);
    X_150:bat[:oid,:hge] := batcalc.*(X_142,X_149);
    X_151:bat[:oid,:hge] := batcalc.-(X_135,X_150);
    X_152:bat[:oid,:hge] := aggr.subsum(X_151,X_105,r1_134,true,true);
    (X_110,r1_139,r2_139) := algebra.subsort(X_109,false,false);
    (X_113,r1_142,r2_142) := algebra.subsort(X_108,r1_139,r2_139,true,false);
    X_116 := algebra.leftfetchjoin(r1_142,X_109);
    X_117 := algebra.leftfetchjoin(r1_142,X_108);
    X_153 := algebra.leftfetchjoin(r1_142,X_152);
    sql.resultSet(X_179,X_181,X_183,X_185,X_187,X_116,X_117,X_153);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

