stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 641 # length
function user.s2_1():void;
    X_186:void := querylog.define("explain select\n nation,\n o_year,\n sum(amount) as sum_profit\nfrom\n (\n select\n n_name as nation,\n extract(year from o_orderdate) as o_year,\n l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n from\n part,\n supplier,\n lineitem,\n partsupp,\n orders,\n nation\n where\n s_suppkey = l_suppkey\n and ps_suppkey = l_suppkey\n and ps_partkey = l_partkey\n and p_partkey = l_partkey\n and o_orderkey = l_orderkey\n and s_nationkey = n_nationkey\n and p_name like \\'%green%\\'\n ) as profit\ngroup by\n nation,\n o_year\norder by\n nation,\n o_year desc;","sequential_pipe",120);
    X_152 := bat.new(nil:oid,nil:str);
    X_160 := bat.append(X_152,"sys.profit");
    X_168 := bat.append(X_160,"sys.profit");
    X_176 := bat.append(X_168,"sys.L1");
    X_155 := bat.new(nil:oid,nil:str);
    X_162 := bat.append(X_155,"nation");
    X_169 := bat.append(X_162,"o_year");
    X_178 := bat.append(X_169,"sum_profit");
    X_156 := bat.new(nil:oid,nil:str);
    X_163 := bat.append(X_156,"char");
    X_171 := bat.append(X_163,"int");
    X_180 := bat.append(X_171,"decimal");
    X_157 := bat.new(nil:oid,nil:int);
    X_165 := bat.append(X_157,25);
    X_173 := bat.append(X_165,32);
    X_182 := bat.append(X_173,39);
    X_159 := bat.new(nil:oid,nil:int);
    X_167 := bat.append(X_159,0);
    X_175 := bat.append(X_167,0);
    X_184 := bat.append(X_175,4);
    X_2 := sql.mvc();
    X_6:bat[:str] := sql.bind(X_2,"sys","part","p_name",0);
    C_3:bat[:oid] := sql.tid(X_2,"sys","part");
    C_196 := algebra.likesubselect(X_6,C_3,"%green%","",false);
    (C_9,r1_10) := sql.bind(X_2,"sys","part","p_name",2);
    C_197 := algebra.likesubselect(r1_10,nil:bat[:oid],"%green%","",false);
    X_12:bat[:str] := sql.bind(X_2,"sys","part","p_name",1);
    C_199 := algebra.likesubselect(X_12,C_3,"%green%","",false);
    C_15 := sql.subdelta(C_196,C_3,C_9,C_197,C_199);
    X_18:bat[:int] := sql.bind(X_2,"sys","part","p_partkey",0);
    (C_20,r1_25) := sql.bind(X_2,"sys","part","p_partkey",2);
    X_22:bat[:int] := sql.bind(X_2,"sys","part","p_partkey",1);
    X_23 := sql.projectdelta(C_15,X_18,C_20,r1_25,X_22);
    C_24:bat[:oid] := sql.tid(X_2,"sys","lineitem");
    X_26:bat[:int] := sql.bind(X_2,"sys","lineitem","l_partkey",0);
    (C_28,r1_35) := sql.bind(X_2,"sys","lineitem","l_partkey",2);
    X_30:bat[:int] := sql.bind(X_2,"sys","lineitem","l_partkey",1);
    X_31 := sql.projectdelta(C_24,X_26,C_28,r1_35,X_30);
    (X_32,r1_40) := algebra.subjoin(X_23,X_31,nil:BAT,nil:BAT,false,nil:lng);
    X_35:bat[:int] := sql.bind(X_2,"sys","lineitem","l_suppkey",0);
    (C_37,r1_45) := sql.bind(X_2,"sys","lineitem","l_suppkey",2);
    X_39:bat[:int] := sql.bind(X_2,"sys","lineitem","l_suppkey",1);
    X_40 := sql.projectdelta(C_24,X_35,C_37,r1_45,X_39);
    X_41 := algebra.projection(r1_40,X_40);
    C_42:bat[:oid] := sql.tid(X_2,"sys","supplier");
    X_44:bat[:int] := sql.bind(X_2,"sys","supplier","s_suppkey",0);
    (C_46,r1_55) := sql.bind(X_2,"sys","supplier","s_suppkey",2);
    X_48:bat[:int] := sql.bind(X_2,"sys","supplier","s_suppkey",1);
    X_49 := sql.projectdelta(C_42,X_44,C_46,r1_55,X_48);
    (X_50,r1_60) := algebra.subjoin(X_41,X_49,nil:BAT,nil:BAT,false,nil:lng);
    X_52:bat[:oid] := sql.bind_idxbat(X_2,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_54,r1_67) := sql.bind_idxbat(X_2,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_56:bat[:oid] := sql.bind_idxbat(X_2,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_57 := sql.projectdelta(C_24,X_52,X_54,r1_67,X_56);
    X_58:bat[:oid] := algebra.projectionpath(X_50,r1_40,X_57);
    C_59:bat[:oid] := sql.tid(X_2,"sys","partsupp");
    (X_61,r1_76) := algebra.subjoin(X_58,C_59,nil:BAT,nil:BAT,false,nil:lng);
    X_63:bat[:oid] := sql.bind_idxbat(X_2,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_65,r1_81) := sql.bind_idxbat(X_2,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_67:bat[:oid] := sql.bind_idxbat(X_2,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_68 := sql.projectdelta(C_24,X_63,X_65,r1_81,X_67);
    X_69:bat[:oid] := algebra.projectionpath(X_61,X_50,r1_40,X_68);
    C_70:bat[:oid] := sql.tid(X_2,"sys","orders");
    (X_72,r1_91) := algebra.subjoin(X_69,C_70,nil:BAT,nil:BAT,false,nil:lng);
    X_74:bat[:oid] := sql.bind_idxbat(X_2,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_76,r1_95) := sql.bind_idxbat(X_2,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_78:bat[:oid] := sql.bind_idxbat(X_2,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_79 := sql.projectdelta(C_42,X_74,X_76,r1_95,X_78);
    X_80:bat[:oid] := algebra.projectionpath(X_72,X_61,r1_60,X_79);
    C_81:bat[:oid] := sql.tid(X_2,"sys","nation");
    (X_83,r1_105) := algebra.subjoin(X_80,C_81,nil:BAT,nil:BAT,false,nil:lng);
    X_85:bat[:date] := sql.bind(X_2,"sys","orders","o_orderdate",0);
    (C_87,r1_112) := sql.bind(X_2,"sys","orders","o_orderdate",2);
    X_89:bat[:date] := sql.bind(X_2,"sys","orders","o_orderdate",1);
    X_90 := sql.projectdelta(C_70,X_85,C_87,r1_112,X_89);
    X_91:bat[:date] := algebra.projectionpath(X_83,r1_91,X_90);
    X_92:bat[:int] := batmtime.year(X_91);
    X_93:bat[:str] := sql.bind(X_2,"sys","nation","n_name",0);
    (C_95,r1_124) := sql.bind(X_2,"sys","nation","n_name",2);
    X_97:bat[:str] := sql.bind(X_2,"sys","nation","n_name",1);
    X_98 := sql.projectdelta(C_81,X_93,C_95,r1_124,X_97);
    X_99 := algebra.projection(r1_105,X_98);
    (X_100,r1_130,r2_130) := group.subgroup(X_99);
    (X_103,r1_133,r2_133) := group.subgroupdone(X_92,X_100);
    X_106 := algebra.projection(r1_133,X_92);
    X_107 := algebra.projection(r1_133,X_99);
    X_117:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_extendedprice",0);
    (C_119,r1_150) := sql.bind(X_2,"sys","lineitem","l_extendedprice",2);
    X_121:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_extendedprice",1);
    X_122 := sql.projectdelta(C_24,X_117,C_119,r1_150,X_121);
    X_123:bat[:lng] := algebra.projectionpath(X_83,X_72,X_61,X_50,r1_40,X_122);
    X_124:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_discount",0);
    (C_126,r1_170) := sql.bind(X_2,"sys","lineitem","l_discount",2);
    X_128:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_discount",1);
    X_129 := sql.projectdelta(C_24,X_124,C_126,r1_170,X_128);
    X_130:bat[:lng] := algebra.projectionpath(X_83,X_72,X_61,X_50,r1_40,X_129);
    X_131:bat[:lng] := batcalc.-(100:lng,X_130);
    X_132:bat[:hge] := batcalc.*(X_123,X_131);
    X_133:bat[:lng] := sql.bind(X_2,"sys","partsupp","ps_supplycost",0);
    (C_135,r1_186) := sql.bind(X_2,"sys","partsupp","ps_supplycost",2);
    X_137:bat[:lng] := sql.bind(X_2,"sys","partsupp","ps_supplycost",1);
    X_138 := sql.projectdelta(C_59,X_133,C_135,r1_186,X_137);
    X_139:bat[:lng] := algebra.projectionpath(X_83,X_72,r1_76,X_138);
    X_140:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_quantity",0);
    (C_142,r1_201) := sql.bind(X_2,"sys","lineitem","l_quantity",2);
    X_144:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_quantity",1);
    X_145 := sql.projectdelta(C_24,X_140,C_142,r1_201,X_144);
    X_146:bat[:lng] := algebra.projectionpath(X_83,X_72,X_61,X_50,r1_40,X_145);
    X_147:bat[:hge] := batcalc.*(X_139,X_146);
    X_148:bat[:hge] := batcalc.-(X_132,X_147);
    X_149:bat[:hge] := aggr.subsum(X_148,X_103,r1_133,true,true);
    (X_108,r1_138,r2_138) := algebra.subsort(X_107,false,false);
    (X_111,r1_141,r2_141) := algebra.subsort(X_106,r1_138,r2_138,true,false);
    X_115 := algebra.projection(r1_141,X_107);
    X_116 := algebra.projection(r1_141,X_106);
    X_150 := algebra.projection(r1_141,X_149);
    sql.resultSet(X_176,X_178,X_180,X_182,X_184,X_115,X_116,X_150);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

