stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 718 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineitem");
    X_8 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",2);
    X_14 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_243 := algebra.likesubselect(X_19,X_17,A1,"",false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_name",2);
    X_244 := algebra.likesubselect(r1_22,nil:bat[:oid,:oid],A1,"",false);
    X_23:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",1);
    X_246 := algebra.likesubselect(X_23,X_17,A1,"",false);
    X_25 := sql.subdelta(X_243,X_17,X_21,X_244,X_246);
    X_28 := X_25;
    (X_29,r1_34) := algebra.subjoin(X_16,X_28,nil:BAT,nil:BAT,true,nil:lng);
    X_33 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_37,r1_42) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_39 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_40 := sql.projectdelta(X_5,X_33,X_37,r1_42,X_39);
    X_41 := algebra.leftfetchjoin(X_29,X_40);
    X_42:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    (X_44,r1_50) := algebra.subjoin(X_41,X_42,nil:BAT,nil:BAT,true,nil:lng);
    X_247 := algebra.leftfetchjoin(X_44,X_29);
    X_46 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_49,r1_55) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_52 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_54 := sql.projectdelta(X_5,X_46,X_49,r1_55,X_52);
    X_55:bat[:oid,:oid]  := algebra.leftfetchjoin(X_247,X_54);
    X_56:bat[:oid,:oid]  := sql.tid(X_4,"sys","partsupp");
    (X_58,r1_66) := algebra.subjoin(X_55,X_56,nil:BAT,nil:BAT,true,nil:lng);
    X_248 := algebra.leftfetchjoin(X_58,X_44);
    X_63 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_67,r1_75) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_69 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_70 := sql.projectdelta(X_5,X_63,X_67,r1_75,X_69);
    X_71:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_248,X_29,X_70);
    X_72:bat[:oid,:oid]  := sql.tid(X_4,"sys","orders");
    (X_74,r1_85) := algebra.subjoin(X_71,X_72,nil:BAT,nil:BAT,true,nil:lng);
    X_249 := algebra.leftfetchjoin(X_74,X_58);
    X_76 := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_80,r1_91) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_83 := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_85 := sql.projectdelta(X_42,X_76,X_80,r1_91,X_83);
    X_86:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_249,r1_50,X_85);
    X_87:bat[:oid,:oid]  := sql.tid(X_4,"sys","nation");
    (X_89,r1_103) := algebra.subjoin(X_86,X_87,nil:BAT,nil:BAT,true,nil:lng);
    X_94:bat[:oid,:str]  := sql.bind(X_4,"sys","nation","n_name",0);
    (X_97,r1_111) := sql.bind(X_4,"sys","nation","n_name",2);
    X_99:bat[:oid,:str]  := sql.bind(X_4,"sys","nation","n_name",1);
    X_100 := sql.projectdelta(X_87,X_94,X_97,r1_111,X_99);
    X_101 := algebra.leftfetchjoin(r1_103,X_100);
    X_102:bat[:oid,:date]  := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_105,r1_120) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_107:bat[:oid,:date]  := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_108 := sql.projectdelta(X_72,X_102,X_105,r1_120,X_107);
    X_109:bat[:oid,:date]  := algebra.leftfetchjoinPath(X_89,r1_85,X_108);
    X_110:bat[:oid,:int]  := batmtime.year(X_109);
    (X_111,r1_130,r2_130) := group.subgroup(X_110);
    (X_114,r1_133,r2_133) := group.subgroupdone(X_101,X_111);
    X_117 := algebra.leftfetchjoin(r1_133,X_110);
    X_118 := algebra.leftfetchjoin(r1_133,X_101);
    X_250 := algebra.leftfetchjoin(X_89,X_74);
    X_129:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_134,r1_153) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_137:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_139 := sql.projectdelta(X_5,X_129,X_134,r1_153,X_137);
    X_140:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_250,X_58,X_44,X_29,X_139);
    X_141:bat[:oid,:hge]  := batcalc.hge(2,X_140,33,2);
    X_143 := calc.lng(A0,15,2);
    X_145:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_147,r1_174) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_149:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_150 := sql.projectdelta(X_5,X_145,X_147,r1_174,X_149);
    X_151:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_250,X_58,X_44,X_29,X_150);
    X_152:bat[:oid,:lng]  := batcalc.-(X_143,X_151);
    X_153:bat[:oid,:hge]  := batcalc.*(X_141,X_152);
    X_154:bat[:oid,:lng]  := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_159,r1_193) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_162:bat[:oid,:lng]  := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_164 := sql.projectdelta(X_56,X_154,X_159,r1_193,X_162);
    X_165:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_250,r1_66,X_164);
    X_166:bat[:oid,:hge]  := batcalc.hge(2,X_165,39,2);
    X_168:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_171,r1_210) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_173:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_174 := sql.projectdelta(X_5,X_168,X_171,r1_210,X_173);
    X_175:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_250,X_58,X_44,X_29,X_174);
    X_176:bat[:oid,:hge]  := batcalc.*(X_166,X_175);
    X_178:bat[:oid,:hge]  := batcalc.*(X_176,100:hge);
    X_179:bat[:oid,:hge]  := batcalc.-(X_153,X_178);
    X_180:bat[:oid,:hge]  := aggr.subsum(X_179,X_114,r1_133,true,true);
    (X_119,r1_138,r2_138) := algebra.subsort(X_118,false,false);
    (X_123,r1_142,r2_142) := algebra.subsort(X_117,r1_138,r2_138,true,false);
    X_127 := algebra.leftfetchjoin(r1_142,X_118);
    X_182 := algebra.leftfetchjoin(r1_142,X_180);
    X_128 := algebra.leftfetchjoin(r1_142,X_117);
    X_183 := sql.resultSet(3,1,X_127);
    sql.rsColumn(X_183,"sys.profit","nation","varchar",25,0,X_127);
    sql.rsColumn(X_183,"sys.profit","o_year","int",32,0,X_128);
    sql.rsColumn(X_183,"sys.L1","sum_profit","decimal",39,4,X_182);
    X_202 := io.stdout();
    sql.exportResult(X_202,X_183);
end s2_1;
# querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe")

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

