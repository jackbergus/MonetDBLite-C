stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 718 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineitem");
    X_8 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",2);
    X_14 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19 := sql.bind(X_4,"sys","part","p_name",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_229 := algebra.likesubselect(X_19,X_17,A1,"",false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_name",2);
    X_230 := algebra.likesubselect(r1_22,A1,"",false);
    X_23 := sql.bind(X_4,"sys","part","p_name",1);
    X_231 := algebra.likesubselect(X_23,X_17,A1,"",false);
    X_25 := sql.subdelta(X_229,X_17,X_21,X_230,X_231);
    X_27 := X_25;
    (X_28,r1_33) := algebra.join(X_16,X_27);
    X_30 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_32,r1_37) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_36 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_37 := sql.projectdelta(X_5,X_30,X_32,r1_37,X_36);
    X_38 := algebra.leftfetchjoin(X_28,X_37);
    X_39:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    (X_41,r1_47) := algebra.join(X_38,X_39);
    X_232 := algebra.leftfetchjoin(X_41,X_28);
    X_43 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_46,r1_52) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_49 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_51 := sql.projectdelta(X_5,X_43,X_46,r1_52,X_49);
    X_52:bat[:oid,:oid]  := algebra.leftfetchjoin(X_232,X_51);
    X_53:bat[:oid,:oid]  := sql.tid(X_4,"sys","partsupp");
    (X_55,r1_63) := algebra.join(X_52,X_53);
    X_233 := algebra.leftfetchjoin(X_55,X_41);
    X_57 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_59,r1_67) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_61 := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_62 := sql.projectdelta(X_5,X_57,X_59,r1_67,X_61);
    X_63:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_233,X_28,X_62);
    X_64:bat[:oid,:oid]  := sql.tid(X_4,"sys","orders");
    (X_67,r1_78) := algebra.join(X_63,X_64);
    X_234 := algebra.leftfetchjoin(X_67,X_55);
    X_69 := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_72,r1_83) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_74 := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_75 := sql.projectdelta(X_39,X_69,X_72,r1_83,X_74);
    X_76:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_234,r1_47,X_75);
    X_77:bat[:oid,:oid]  := sql.tid(X_4,"sys","nation");
    (X_79,r1_93) := algebra.join(X_76,X_77);
    X_91 := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_93,r1_108) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_97 := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_98 := sql.projectdelta(X_64,X_91,X_93,r1_108,X_97);
    X_99:bat[:oid,:date]  := algebra.leftfetchjoinPath(X_79,r1_78,X_98);
    X_100:bat[:oid,:int]  := batmtime.year(X_99);
    X_81 := sql.bind(X_4,"sys","nation","n_name",0);
    (X_84,r1_98) := sql.bind(X_4,"sys","nation","n_name",2);
    X_87 := sql.bind(X_4,"sys","nation","n_name",1);
    X_89 := sql.projectdelta(X_77,X_81,X_84,r1_98,X_87);
    X_90 := algebra.leftfetchjoin(r1_93,X_89);
    (X_101,r1_123,r2_123) := group.subgroup(X_100,X_90);
    X_104 := algebra.leftfetchjoin(r1_123,X_100);
    X_105 := algebra.leftfetchjoin(r1_123,X_90);
    X_235 := algebra.leftfetchjoin(X_79,X_67);
    X_116 := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_120,r1_142) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_124 := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_126 := sql.projectdelta(X_5,X_116,X_120,r1_142,X_124);
    X_127:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_235,X_55,X_41,X_28,X_126);
    X_128:bat[:oid,:hge]  := batcalc.hge(2,X_127,33,2);
    X_130 := calc.lng(A0,15,2);
    X_132 := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_134,r1_164) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_136 := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_137 := sql.projectdelta(X_5,X_132,X_134,r1_164,X_136);
    X_138:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_235,X_55,X_41,X_28,X_137);
    X_139:bat[:oid,:lng]  := batcalc.-(X_130,X_138);
    X_140:bat[:oid,:hge]  := batcalc.*(X_128,X_139);
    X_141 := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_146,r1_183) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_149 := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_151 := sql.projectdelta(X_53,X_141,X_146,r1_183,X_149);
    X_152:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_235,r1_63,X_151);
    X_153:bat[:oid,:hge]  := batcalc.hge(2,X_152,39,2);
    X_155 := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_158,r1_200) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_160 := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_161 := sql.projectdelta(X_5,X_155,X_158,r1_200,X_160);
    X_162:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_235,X_55,X_41,X_28,X_161);
    X_163:bat[:oid,:hge]  := batcalc.*(X_153,X_162);
    X_165:bat[:oid,:hge]  := batcalc.*(X_163,100:hge);
    X_166:bat[:oid,:hge]  := batcalc.-(X_140,X_165);
    X_167:bat[:oid,:hge]  := aggr.subsum(X_166,X_101,r1_123,true,true);
    (X_106,r1_128,r2_128) := algebra.subsort(X_105,false,false);
    (X_110,r1_132,r2_132) := algebra.subsort(X_104,r1_128,r2_128,true,false);
    X_114 := algebra.leftfetchjoin(r1_132,X_105);
    X_169 := algebra.leftfetchjoin(r1_132,X_167);
    X_115 := algebra.leftfetchjoin(r1_132,X_104);
    X_170 := sql.resultSet(3,1,X_114);
    sql.rsColumn(X_170,"sys.profit","nation","varchar",25,0,X_114);
    sql.rsColumn(X_170,"sys.profit","o_year","int",32,0,X_115);
    sql.rsColumn(X_170,"sys.L1","sum_profit","decimal",39,4,X_169);
    X_189 := io.stdout();
    sql.exportResult(X_189,X_170);
end s2_1;
# querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe")

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

