stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 739 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_203:void  := querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe",106);
    X_4 := sql.mvc();
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineitem");
    X_8:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",0);
    (X_11,r1_11) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",2);
    X_14:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_fkey",1);
    X_16 := sql.projectdelta(X_5,X_8,X_11,r1_11,X_14);
    X_19:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",0);
    X_17:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_242 := algebra.likesubselect(X_19,X_17,A1,"",false);
    (X_21,r1_22) := sql.bind(X_4,"sys","part","p_name",2);
    X_243 := algebra.likesubselect(r1_22,nil:bat[:oid,:oid],A1,"",false);
    X_23:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",1);
    X_245 := algebra.likesubselect(X_23,X_17,A1,"",false);
    X_25 := sql.subdelta(X_242,X_17,X_21,X_243,X_245);
    X_28 := X_25;
    (X_29,r1_34) := algebra.subjoin(X_16,X_28,nil:BAT,nil:BAT,false,nil:lng);
    X_32:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",0);
    (X_34,r1_39) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",2);
    X_38:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_suppkey_fkey",1);
    X_39 := sql.projectdelta(X_5,X_32,X_34,r1_39,X_38);
    X_40 := algebra.leftfetchjoin(X_29,X_39);
    X_41:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    (X_43,r1_49) := algebra.subjoin(X_40,X_41,nil:BAT,nil:BAT,false,nil:lng);
    X_246 := algebra.leftfetchjoin(X_43,X_29);
    X_45:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_48,r1_54) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_51:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_53 := sql.projectdelta(X_5,X_45,X_48,r1_54,X_51);
    X_54:bat[:oid,:oid]  := algebra.leftfetchjoin(X_246,X_53);
    X_55:bat[:oid,:oid]  := sql.tid(X_4,"sys","partsupp");
    (X_57,r1_65) := algebra.subjoin(X_54,X_55,nil:BAT,nil:BAT,false,nil:lng);
    X_247 := algebra.leftfetchjoin(X_57,X_43);
    X_62:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_64,r1_72) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_68:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_69 := sql.projectdelta(X_5,X_62,X_64,r1_72,X_68);
    X_70:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_247,X_29,X_69);
    X_71:bat[:oid,:oid]  := sql.tid(X_4,"sys","orders");
    (X_73,r1_84) := algebra.subjoin(X_70,X_71,nil:BAT,nil:BAT,false,nil:lng);
    X_248 := algebra.leftfetchjoin(X_73,X_57);
    X_75:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_79,r1_90) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_82:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_84 := sql.projectdelta(X_41,X_75,X_79,r1_90,X_82);
    X_85:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_248,r1_49,X_84);
    X_86:bat[:oid,:oid]  := sql.tid(X_4,"sys","nation");
    (X_88,r1_102) := algebra.subjoin(X_85,X_86,nil:BAT,nil:BAT,false,nil:lng);
    X_93:bat[:oid,:str]  := sql.bind(X_4,"sys","nation","n_name",0);
    (X_96,r1_110) := sql.bind(X_4,"sys","nation","n_name",2);
    X_98:bat[:oid,:str]  := sql.bind(X_4,"sys","nation","n_name",1);
    X_99 := sql.projectdelta(X_86,X_93,X_96,r1_110,X_98);
    X_100 := algebra.leftfetchjoin(r1_102,X_99);
    X_101:bat[:oid,:date]  := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_104,r1_119) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_106:bat[:oid,:date]  := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_107 := sql.projectdelta(X_71,X_101,X_104,r1_119,X_106);
    X_108:bat[:oid,:date]  := algebra.leftfetchjoinPath(X_88,r1_84,X_107);
    X_109:bat[:oid,:int] := batmtime.year(X_108);
    (X_110,r1_129,r2_129) := group.subgroup(X_109);
    (X_113,r1_132,r2_132) := group.subgroupdone(X_100,X_110);
    X_116 := algebra.leftfetchjoin(r1_132,X_109);
    X_117 := algebra.leftfetchjoin(r1_132,X_100);
    X_249 := algebra.leftfetchjoin(X_88,X_73);
    X_128:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_133,r1_152) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_136:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_138 := sql.projectdelta(X_5,X_128,X_133,r1_152,X_136);
    X_139:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_249,X_57,X_43,X_29,X_138);
    X_140:bat[:oid,:hge] := batcalc.hge(2,X_139,33,2);
    X_142 := calc.lng(A0,15,2);
    X_144:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_146,r1_173) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_148:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_149 := sql.projectdelta(X_5,X_144,X_146,r1_173,X_148);
    X_150:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_249,X_57,X_43,X_29,X_149);
    X_151:bat[:oid,:lng] := batcalc.-(X_142,X_150);
    X_152:bat[:oid,:hge] := batcalc.*(X_140,X_151);
    X_153:bat[:oid,:lng]  := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_158,r1_192) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_161:bat[:oid,:lng]  := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_163 := sql.projectdelta(X_55,X_153,X_158,r1_192,X_161);
    X_164:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_249,r1_65,X_163);
    X_165:bat[:oid,:hge] := batcalc.hge(2,X_164,39,2);
    X_167:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_170,r1_209) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_172:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_173 := sql.projectdelta(X_5,X_167,X_170,r1_209,X_172);
    X_174:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_249,X_57,X_43,X_29,X_173);
    X_175:bat[:oid,:hge] := batcalc.*(X_165,X_174);
    X_177:bat[:oid,:hge] := batcalc.*(X_175,100);
    X_178:bat[:oid,:hge] := batcalc.-(X_152,X_177);
    X_179:bat[:oid,:hge] := aggr.subsum(X_178,X_113,r1_132,true,true);
    (X_118,r1_137,r2_137) := algebra.subsort(X_117,false,false);
    (X_122,r1_141,r2_141) := algebra.subsort(X_116,r1_137,r2_137,true,false);
    X_126 := algebra.leftfetchjoin(r1_141,X_117);
    X_181 := algebra.leftfetchjoin(r1_141,X_179);
    X_127 := algebra.leftfetchjoin(r1_141,X_116);
    X_182 := sql.resultSet(3,1,X_126);
    sql.rsColumn(X_182,"sys.profit","nation","varchar",25,0,X_126);
    sql.rsColumn(X_182,"sys.profit","o_year","int",32,0,X_127);
    sql.rsColumn(X_182,"sys.L1","sum_profit","decimal",39,4,X_181);
    X_201 := io.stdout();
    sql.exportResult(X_201,X_182);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

