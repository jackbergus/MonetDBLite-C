stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 739 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_215:void := querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe",121);
    X_179 := bat.new(nil:oid,nil:str);
    X_187 := bat.append(X_179,"sys.profit");
    X_197 := bat.append(X_187,"sys.profit");
    X_205 := bat.append(X_197,"sys.L1");
    X_182 := bat.new(nil:oid,nil:str);
    X_189 := bat.append(X_182,"nation");
    X_198 := bat.append(X_189,"o_year");
    X_207 := bat.append(X_198,"sum_profit");
    X_183 := bat.new(nil:oid,nil:str);
    X_191 := bat.append(X_183,"char");
    X_200 := bat.append(X_191,"int");
    X_209 := bat.append(X_200,"decimal");
    X_184 := bat.new(nil:oid,nil:int);
    X_193 := bat.append(X_184,25);
    X_202 := bat.append(X_193,32);
    X_211 := bat.append(X_202,39);
    X_186 := bat.new(nil:oid,nil:int);
    X_195 := bat.append(X_186,0);
    X_204 := bat.append(X_195,0);
    X_213 := bat.append(X_204,4);
    X_4 := sql.mvc();
    X_8:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_name",0);
    X_5:bat[:oid,:oid] := sql.tid(X_4,"sys","part");
    X_256 := algebra.likesubselect(X_8,X_5,A1,"",false);
    (X_11,r1_11) := sql.bind(X_4,"sys","part","p_name",2);
    X_257 := algebra.likesubselect(r1_11,nil:bat[:oid,:oid],A1,"",false);
    X_14:bat[:oid,:str] := sql.bind(X_4,"sys","part","p_name",1);
    X_259 := algebra.likesubselect(X_14,X_5,A1,"",false);
    X_17 := sql.subdelta(X_256,X_5,X_11,X_257,X_259);
    X_20:bat[:oid,:int] := sql.bind(X_4,"sys","part","p_partkey",0);
    (X_22,r1_26) := sql.bind(X_4,"sys","part","p_partkey",2);
    X_24:bat[:oid,:int] := sql.bind(X_4,"sys","part","p_partkey",1);
    X_25 := sql.projectdelta(X_17,X_20,X_22,r1_26,X_24);
    X_26:bat[:oid,:oid] := sql.tid(X_4,"sys","lineitem");
    X_28:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_partkey",0);
    (X_30,r1_36) := sql.bind(X_4,"sys","lineitem","l_partkey",2);
    X_32:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_partkey",1);
    X_34 := sql.projectdelta(X_26,X_28,X_30,r1_36,X_32);
    (X_35,r1_42) := algebra.subjoin(X_25,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_38:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    (X_41,r1_48) := sql.bind(X_4,"sys","lineitem","l_suppkey",2);
    X_44:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",1);
    X_46 := sql.projectdelta(X_26,X_38,X_41,r1_48,X_44);
    X_47 := algebra.leftfetchjoin(r1_42,X_46);
    X_48:bat[:oid,:oid] := sql.tid(X_4,"sys","supplier");
    X_50:bat[:oid,:int] := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    (X_52,r1_60) := sql.bind(X_4,"sys","supplier","s_suppkey",2);
    X_54:bat[:oid,:int] := sql.bind(X_4,"sys","supplier","s_suppkey",1);
    X_55 := sql.projectdelta(X_48,X_50,X_52,r1_60,X_54);
    (X_56,r1_65) := algebra.subjoin(X_47,X_55,nil:BAT,nil:BAT,false,nil:lng);
    X_60:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_62,r1_71) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_66:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_67 := sql.projectdelta(X_26,X_60,X_62,r1_71,X_66);
    X_68:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_56,r1_42,X_67);
    X_69:bat[:oid,:oid] := sql.tid(X_4,"sys","partsupp");
    (X_71,r1_82) := algebra.subjoin(X_68,X_69,nil:BAT,nil:BAT,false,nil:lng);
    X_74:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_76,r1_87) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_78:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_79 := sql.projectdelta(X_26,X_74,X_76,r1_87,X_78);
    X_80:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_71,X_56,r1_42,X_79);
    X_81:bat[:oid,:oid] := sql.tid(X_4,"sys","orders");
    (X_83,r1_97) := algebra.subjoin(X_80,X_81,nil:BAT,nil:BAT,false,nil:lng);
    X_85:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_87,r1_101) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_89:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_90 := sql.projectdelta(X_48,X_85,X_87,r1_101,X_89);
    X_91:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_83,X_71,r1_65,X_90);
    X_92:bat[:oid,:oid] := sql.tid(X_4,"sys","nation");
    (X_95,r1_112) := algebra.subjoin(X_91,X_92,nil:BAT,nil:BAT,false,nil:lng);
    X_99:bat[:oid,:date] := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_102,r1_119) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_105:bat[:oid,:date] := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_107 := sql.projectdelta(X_81,X_99,X_102,r1_119,X_105);
    X_108:bat[:oid,:date] := algebra.leftfetchjoinPath(X_95,r1_97,X_107);
    X_109:bat[:oid,:int] := batmtime.year(X_108);
    X_110:bat[:oid,:str] := sql.bind(X_4,"sys","nation","n_name",0);
    (X_112,r1_133) := sql.bind(X_4,"sys","nation","n_name",2);
    X_114:bat[:oid,:str] := sql.bind(X_4,"sys","nation","n_name",1);
    X_115 := sql.projectdelta(X_92,X_110,X_112,r1_133,X_114);
    X_116 := algebra.leftfetchjoin(r1_112,X_115);
    (X_117,r1_139,r2_139) := group.subgroup(X_116);
    (X_120,r1_142,r2_142) := group.subgroupdone(X_109,X_117);
    X_123 := algebra.leftfetchjoin(r1_142,X_109);
    X_124 := algebra.leftfetchjoin(r1_142,X_116);
    X_135:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_138,r1_160) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_140:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_141 := sql.projectdelta(X_26,X_135,X_138,r1_160,X_140);
    X_142:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_95,X_83,X_71,X_56,r1_42,X_141);
    X_144 := calc.lng(A0,15,2);
    X_146:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_149,r1_181) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_151:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_152 := sql.projectdelta(X_26,X_146,X_149,r1_181,X_151);
    X_153:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_95,X_83,X_71,X_56,r1_42,X_152);
    X_154:bat[:oid,:lng] := batcalc.-(X_144,X_153);
    X_155:bat[:oid,:hge] := batcalc.*(X_142,X_154);
    X_156:bat[:oid,:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_160,r1_199) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_162:bat[:oid,:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_163 := sql.projectdelta(X_69,X_156,X_160,r1_199,X_162);
    X_164:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_95,X_83,r1_82,X_163);
    X_166:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_168,r1_214) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_170:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_171 := sql.projectdelta(X_26,X_166,X_168,r1_214,X_170);
    X_172:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_95,X_83,X_71,X_56,r1_42,X_171);
    X_173:bat[:oid,:hge] := batcalc.*(X_164,X_172);
    X_174:bat[:oid,:hge] := batcalc.-(X_155,X_173);
    X_175:bat[:oid,:hge] := aggr.subsum(X_174,X_120,r1_142,true,true);
    (X_125,r1_147,r2_147) := algebra.subsort(X_124,false,false);
    (X_129,r1_151,r2_151) := algebra.subsort(X_123,r1_147,r2_147,true,false);
    X_133 := algebra.leftfetchjoin(r1_151,X_124);
    X_134 := algebra.leftfetchjoin(r1_151,X_123);
    X_177 := algebra.leftfetchjoin(r1_151,X_175);
    sql.resultSet(X_205,X_207,X_209,X_211,X_213,X_133,X_134,X_177);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

