stdout of test '17-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "17-explain.SQL.py" "17-explain"
# 22:53:29 >  

#set optimizer = 'no_mitosis_pipe';
#explain select
#	sum(l_extendedprice) / 7.0 as avg_yearly
#from
#	lineitem,
#	part
#where
#	p_partkey = l_partkey
#	and p_brand = 'Brand#23'
#	and p_container = 'MED BOX'
#	and l_quantity < (
#		select
#			0.2 * avg(l_quantity)
#		from
#			lineitem
#		where
#			l_partkey = p_partkey
#	);
% .explain # table_name
% mal # name
% clob # type
% 86 # length
function user.s0_1{autoCommit=true}(A0:bte,A1:str,A2:str,A3:dbl):void;
    X_114 := nil:lng;
barrier X_149 := language.dataflow();
    X_6 := sql.mvc();
    X_7:bat[:oid,:oid]  := sql.tid(X_6,"sys","lineitem");
    X_10 := sql.bind(X_6,"sys","lineitem","l_partkey",0);
    (X_13,r1_13) := sql.bind(X_6,"sys","lineitem","l_partkey",2);
    X_16 := sql.bind(X_6,"sys","lineitem","l_partkey",1);
    X_18 := sql.projectdelta(X_7,X_10,X_13,r1_13,X_16);
    X_19 := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_partkey_fkey",0);
    (X_21,r1_23) := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_partkey_fkey",2);
    X_23 := sql.bind_idxbat(X_6,"sys","lineitem","lineitem_l_partkey_fkey",1);
    X_24 := sql.projectdelta(X_7,X_19,X_21,r1_23,X_23);
    X_27 := sql.bind(X_6,"sys","part","p_container",0);
    X_32 := sql.bind(X_6,"sys","part","p_brand",0);
    X_25:bat[:oid,:oid]  := sql.tid(X_6,"sys","part");
    X_142 := algebra.subselect(X_32,X_25,A1,A1,true,true,false);
    (X_34,r1_40) := sql.bind(X_6,"sys","part","p_brand",2);
    X_143 := algebra.subselect(r1_40,A1,A1,true,true,false);
    X_37 := sql.bind(X_6,"sys","part","p_brand",1);
    X_144 := algebra.subselect(X_37,X_25,A1,A1,true,true,false);
    X_38 := sql.subdelta(X_142,X_25,X_34,X_143,X_144);
    X_145 := algebra.subselect(X_27,X_38,A2,A2,true,true,false);
    (X_29,r1_32) := sql.bind(X_6,"sys","part","p_container",2);
    X_146 := algebra.subselect(r1_32,A2,A2,true,true,false);
    X_31 := sql.bind(X_6,"sys","part","p_container",1);
    X_147 := algebra.subselect(X_31,X_38,A2,A2,true,true,false);
    X_41 := sql.subdelta(X_145,X_38,X_29,X_146,X_147);
    X_42 := X_41;
    (X_43,r1_52) := algebra.join(X_24,X_42);
    X_45 := sql.bind(X_6,"sys","part","p_partkey",0);
    (X_48,r1_57) := sql.bind(X_6,"sys","part","p_partkey",2);
    X_51 := sql.bind(X_6,"sys","part","p_partkey",1);
    X_53 := sql.projectdelta(X_41,X_45,X_48,r1_57,X_51);
    X_54 := algebra.leftfetchjoin(r1_52,X_53);
    (X_55,r1_66) := algebra.join(X_18,X_54);
    X_57 := sql.bind(X_6,"sys","lineitem","l_orderkey",0);
    (X_60,r1_71) := sql.bind(X_6,"sys","lineitem","l_orderkey",2);
    X_62 := sql.bind(X_6,"sys","lineitem","l_orderkey",1);
    X_63 := sql.projectdelta(X_7,X_57,X_60,r1_71,X_62);
    X_64 := algebra.leftfetchjoin(X_43,X_63);
    X_65:bat[:oid,:oid]  := batcalc.identity(X_64);
    X_66 := algebra.leftfetchjoin(r1_66,X_65);
    (X_67,r1_81,r2_81) := group.subgroupdone(X_66);
    X_148 := algebra.leftfetchjoin(r1_81,r1_66);
    X_70 := sql.bind(X_6,"sys","lineitem","l_quantity",0);
    (X_73,r1_87) := sql.bind(X_6,"sys","lineitem","l_quantity",2);
    X_75 := sql.bind(X_6,"sys","lineitem","l_quantity",1);
    X_76 := sql.projectdelta(X_7,X_70,X_73,r1_87,X_75);
    X_80 := algebra.leftfetchjoin(X_55,X_76);
    X_81 := batcalc.dbl(X_80);
    X_82:bat[:oid,:dbl]  := aggr.subsum(X_81,X_67,r1_81,true,true);
    X_84:bat[:oid,:wrd]  := aggr.subcount(X_81,X_67,r1_81,true);
    X_77:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_148,X_43,X_76);
    X_78 := batcalc.dbl(X_77);
    X_86:bat[:oid,:bit]  := batcalc.==(X_84,0:wrd);
    X_88 := batcalc.dbl(X_84);
    X_89:bat[:oid,:dbl]  := batcalc.ifthenelse(X_86,nil:dbl,X_88);
    X_90:bat[:oid,:dbl]  := batcalc./(X_82,X_89);
    X_91:bat[:oid,:dbl]  := batcalc.*(A3,X_90);
    X_92:bat[:oid,:bit]  := batcalc.<(X_78,X_91);
    X_93 := algebra.subselect(X_92,true,true,true,true,false);
    X_95 := sql.bind(X_6,"sys","lineitem","l_extendedprice",0);
    (X_99,r1_135) := sql.bind(X_6,"sys","lineitem","l_extendedprice",2);
    X_103 := sql.bind(X_6,"sys","lineitem","l_extendedprice",1);
    X_105 := sql.projectdelta(X_7,X_95,X_99,r1_135,X_103);
    X_106:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_93,X_148,X_43,X_105);
    X_107 := algebra.selectNotNil(X_106);
    X_108:lng  := aggr.sum(X_107);
    X_109 := calc.lng(2,X_108,18,5);
    X_112 := calc.lng(1,A0,15,2);
    X_114 := calc./(X_109,X_112);
    language.pass(X_25);
    language.pass(X_38);
    language.pass(X_41);
    language.pass(r1_66);
    language.pass(X_81);
    language.pass(X_67);
    language.pass(r1_81);
    language.pass(X_76);
    language.pass(X_84);
    language.pass(X_7);
    language.pass(X_148);
    language.pass(X_43);
exit X_149;
    sql.exportValue(1,"sys.L3","avg_yearly","decimal",18,3,8,X_114,"");
end s0_1;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

