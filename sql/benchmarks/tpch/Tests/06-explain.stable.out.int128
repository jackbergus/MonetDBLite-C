stdout of test '06-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "06-explain.SQL.py" "06-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice * l_discount) as revenue
#from
#	lineitem
#where
#	l_shipdate >= date '1994-01-01'
#	and l_shipdate < date '1994-01-01' + interval '1' year
#	and l_discount between 0.06 - 0.01 and 0.06 + 0.01
#	and l_quantity < 24;
% .explain # table_name
% mal # name
% clob # type
% 328 # length
function user.s2_1{autoCommit=true}(A0:date,A1:date,A2:int,A3:sht,A4:sht,A5:sht,A6:sht,A7:int):void;
    X_67:void  := querylog.define("explain select\n\tsum(l_extendedprice * l_discount) as revenue\nfrom\n\tlineitem\nwhere\n\tl_shipdate >= date \\'1994-01-01\\'\n\tand l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n\tand l_discount between 0.06 - 0.01 and 0.06 + 0.01\n\tand l_quantity < 24;","sequential_pipe",40);
    X_10 := sql.mvc();
    X_14:bat[:oid,:lng]  := sql.bind(X_10,"sys","lineitem","l_discount",0);
    X_27:bat[:oid,:int]  := sql.bind(X_10,"sys","lineitem","l_quantity",0);
    X_32:bat[:oid,:date]  := sql.bind(X_10,"sys","lineitem","l_shipdate",0);
    X_11:bat[:oid,:oid]  := sql.tid(X_10,"sys","lineitem");
    X_39 := mtime.addmonths(A1,A2);
    X_83 := algebra.subselect(X_32,X_11,A0,X_39,true,false,false);
    (X_34,r1_43) := sql.bind(X_10,"sys","lineitem","l_shipdate",2);
    X_84 := algebra.subselect(r1_43,nil:bat[:oid,:oid],A0,X_39,true,false,false);
    X_38:bat[:oid,:date]  := sql.bind(X_10,"sys","lineitem","l_shipdate",1);
    X_86 := algebra.subselect(X_38,X_11,A0,X_39,true,false,false);
    X_40 := sql.subdelta(X_83,X_11,X_34,X_84,X_86);
    X_87 := algebra.thetasubselect(X_27,X_40,A7,"<");
    (X_29,r1_35) := sql.bind(X_10,"sys","lineitem","l_quantity",2);
    X_88 := algebra.thetasubselect(r1_35,nil:bat[:oid,:oid],A7,"<");
    X_31:bat[:oid,:int]  := sql.bind(X_10,"sys","lineitem","l_quantity",1);
    X_90 := algebra.thetasubselect(X_31,X_40,A7,"<");
    X_43 := sql.subdelta(X_87,X_40,X_29,X_88,X_90);
    X_22 := calc.-(A3,A4);
    X_23 := calc.lng(2,X_22,15,2);
    X_25 := calc.+(A5,A6);
    X_26 := calc.lng(2,X_25,15,2);
    X_91 := algebra.subselect(X_14,X_43,X_23,X_26,true,true,false);
    (X_17,r1_17) := sql.bind(X_10,"sys","lineitem","l_discount",2);
    X_92 := algebra.subselect(r1_17,nil:bat[:oid,:oid],X_23,X_26,true,true,false);
    X_20:bat[:oid,:lng]  := sql.bind(X_10,"sys","lineitem","l_discount",1);
    X_94 := algebra.subselect(X_20,X_43,X_23,X_26,true,true,false);
    X_45 := sql.subdelta(X_91,X_43,X_17,X_92,X_94);
    X_46:bat[:oid,:lng]  := sql.bind(X_10,"sys","lineitem","l_extendedprice",0);
    (X_49,r1_63) := sql.bind(X_10,"sys","lineitem","l_extendedprice",2);
    X_52:bat[:oid,:lng]  := sql.bind(X_10,"sys","lineitem","l_extendedprice",1);
    X_54 := sql.projectdelta(X_45,X_46,X_49,r1_63,X_52);
    X_55:bat[:oid,:hge]  := batcalc.hge(2,X_54,30,2);
    X_57 := sql.projectdelta(X_45,X_14,X_17,r1_17,X_20);
    X_58:bat[:oid,:hge] := batcalc.*(X_55,X_57);
    X_59:hge := aggr.sum(X_58);
    sql.exportValue(1,"sys.L1","revenue","decimal",30,4,9,X_59,"");
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

