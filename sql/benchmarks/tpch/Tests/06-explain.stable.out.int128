stdout of test '06-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "06-explain.SQL.py" "06-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice * l_discount) as revenue
#from
#	lineitem
#where
#	l_shipdate >= date '1994-01-01'
#	and l_shipdate < date '1994-01-01' + interval '1' year
#	and l_discount between 0.06 - 0.01 and 0.06 + 0.01
#	and l_quantity < 24;
% .explain # table_name
% mal # name
% clob # type
% 320 # length
function user.s4_1():void;
    X_77:void := querylog.define("explain select\n sum(l_extendedprice * l_discount) as revenue\nfrom\n lineitem\nwhere\n l_shipdate >= date \\'1994-01-01\\'\n and l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n and l_discount between .06 - 0.01 and .06 + 0.01\n and l_quantity < 24;","sequential_pipe",18);
    X_0 := sql.mvc();
    X_4:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",0);
    X_17:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_35:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_45:date := mtime.addmonths("1994-01-01",12);
    C_46 := algebra.subselect(X_35,C_1,"1994-01-01",X_45,true,false,false);
    C_50 := algebra.subselect(X_17,C_46,5:lng,7:lng,true,true,false);
    C_51 := algebra.thetasubselect(X_4,C_50,2400:lng,"<");
    X_53:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_60 := algebra.projection(C_51,X_53);
    X_66 := algebra.projection(C_51,X_17);
    X_67:bat[:hge] := batcalc.*(X_60,X_66);
    X_69:hge := aggr.sum(X_67);
    sql.resultSet("sys.L1","revenue","decimal",39,4,10,X_69);
end user.s4_1;
#inline               actions= 0 time=7 usec 
#candidates           actions= 1 time=61 usec 
#remap                actions= 2 time=311 usec 
#costModel            actions= 1 time=95 usec 
#coercions            actions= 0 time=67 usec 
#evaluate             actions=15 time=164 usec 
#emptybind            actions= 0 time=7 usec 
#pushselect           actions= 5 time=97 usec 
#aliases              actions=23 time=88 usec 
#mergetable           actions= 0 time=91 usec 
#deadcode             actions= 9 time=78 usec 
#aliases              actions= 0 time=9 usec 
#constants            actions=11 time=86 usec 
#commonTerms          actions= 0 time=10 usec 
#projectionpath       actions= 0 time=7 usec 
#reorder              actions= 1 time=92 usec 
#deadcode             actions= 0 time=8 usec 
#reduce               actions=83 time=114 usec 
#matpack              actions= 0 time=8 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=4 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=69 usec 
#garbageCollector     actions= 1 time=75 usec 
#total                actions= 1 time=1665 usec 

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

