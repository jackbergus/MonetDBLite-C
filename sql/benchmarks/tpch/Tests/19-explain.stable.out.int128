stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1191 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:str,A6:bte,A7:sht,A8:sht,A9:int,A10:int,A11:str,A12:str,A13:str,A14:str,A15:str,A16:str,A17:str,A18:str,A19:bte,A20:sht,A21:sht,A22:int,A23:int,A24:str,A25:str,A26:str,A27:str,A28:str,A29:str,A30:str,A31:str,A32:bte,A33:sht,A34:sht,A35:int,A36:int,A37:str,A38:str,A39:str):void;
    X_280:void := querylog.define("explain select\n\tsum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n\tlineitem,\n\tpart\nwhere\n\t(\n\t\tp_partkey = l_partkey\n\t\tand p_brand = \\'Brand#12\\'\n\t\tand p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n\t\tand l_quantity >= 1 and l_quantity <= 1 + 10\n\t\tand p_size between 1 and 5\n\t\tand l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n\t\tand l_shipinstruct = \\'DELIVER IN PERSON\\'\n\t)\n\tor\n\t(\n\t\tp_partkey = l_partkey\n\t\tand p_brand = \\'Brand#23\\'\n\t\tand p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n\t\tand l_quantity >= 10 and l_quantity <= 10 + 10\n\t\tand p_size between 1 and 10\n\t\tand l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n\t\tand l_shipinstruct = \\'DELIVER IN PERSON\\'\n\t)\n\tor\n\t(\n\t\tp_partkey = l_partkey\n\t\tand p_brand = \\'Brand#34\\'\n\t\tand p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n\t\tand l_quantity >= 20 and l_quantity <= 20 + 10\n\t\tand p_size between 1 and 15\n\t\tand l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n\t\tand l_shipinstruct = \\'DELIVER IN PERSON\\'\n\t);","sequential_pipe",172);
    X_42 := sql.mvc();
    X_43:bat[:oid,:oid] := sql.tid(X_42,"sys","part");
    X_46:bat[:oid,:str] := sql.bind(X_42,"sys","part","p_container",0);
    (X_49,r1_49) := sql.bind(X_42,"sys","part","p_container",2);
    X_52:bat[:oid,:str] := sql.bind(X_42,"sys","part","p_container",1);
    X_54 := sql.delta(X_46,X_49,r1_49,X_52);
    X_55 := algebra.leftfetchjoin(X_43,X_54);
    X_56:bat[:oid,:str] := sql.bind(X_42,"sys","part","p_brand",0);
    (X_58,r1_59) := sql.bind(X_42,"sys","part","p_brand",2);
    X_60:bat[:oid,:str] := sql.bind(X_42,"sys","part","p_brand",1);
    X_61 := sql.delta(X_56,X_58,r1_59,X_60);
    X_62 := algebra.leftfetchjoin(X_43,X_61);
    X_63:bat[:oid,:int] := sql.bind(X_42,"sys","part","p_size",0);
    (X_65,r1_67) := sql.bind(X_42,"sys","part","p_size",2);
    X_67:bat[:oid,:int] := sql.bind(X_42,"sys","part","p_size",1);
    X_68 := sql.delta(X_63,X_65,r1_67,X_67);
    X_69 := algebra.leftfetchjoin(X_43,X_68);
    X_70 := calc.min(A22,A35);
    X_71 := calc.min(A9,X_70);
    X_72 := calc.max(A23,A36);
    X_73 := calc.max(A10,X_72);
    X_74 := algebra.subselect(X_69,X_71,X_73,true,true,false);
    X_78 := algebra.subselect(X_62,X_74,A1,A1,true,true,false);
    X_79 := algebra.subselect(X_62,X_74,A14,A14,true,true,false);
    X_80 := bat.mergecand(X_78,X_79);
    X_81 := algebra.subselect(X_62,X_74,A27,A27,true,true,false);
    X_82 := bat.mergecand(X_80,X_81);
    X_83 := algebra.subselect(X_55,X_82,A2,A2,true,true,false);
    X_84 := algebra.subselect(X_55,X_82,A3,A3,true,true,false);
    X_85 := bat.mergecand(X_83,X_84);
    X_86 := algebra.subselect(X_55,X_82,A4,A4,true,true,false);
    X_87 := bat.mergecand(X_85,X_86);
    X_88 := algebra.subselect(X_55,X_82,A5,A5,true,true,false);
    X_89 := bat.mergecand(X_87,X_88);
    X_90 := algebra.subselect(X_55,X_82,A15,A15,true,true,false);
    X_91 := bat.mergecand(X_89,X_90);
    X_92 := algebra.subselect(X_55,X_82,A16,A16,true,true,false);
    X_93 := bat.mergecand(X_91,X_92);
    X_94 := algebra.subselect(X_55,X_82,A17,A17,true,true,false);
    X_95 := bat.mergecand(X_93,X_94);
    X_96 := algebra.subselect(X_55,X_82,A18,A18,true,true,false);
    X_97 := bat.mergecand(X_95,X_96);
    X_98 := algebra.subselect(X_55,X_82,A28,A28,true,true,false);
    X_102 := bat.mergecand(X_97,X_98);
    X_103 := algebra.subselect(X_55,X_82,A29,A29,true,true,false);
    X_104 := bat.mergecand(X_102,X_103);
    X_105 := algebra.subselect(X_55,X_82,A30,A30,true,true,false);
    X_106 := bat.mergecand(X_104,X_105);
    X_107 := algebra.subselect(X_55,X_82,A31,A31,true,true,false);
    X_108 := bat.mergecand(X_106,X_107);
    X_109:bat[:oid,:int] := sql.bind(X_42,"sys","part","p_partkey",0);
    (X_111,r1_132) := sql.bind(X_42,"sys","part","p_partkey",2);
    X_113:bat[:oid,:int] := sql.bind(X_42,"sys","part","p_partkey",1);
    X_114 := sql.delta(X_109,X_111,r1_132,X_113);
    X_115:bat[:oid,:int] := algebra.leftfetchjoinPath(X_108,X_43,X_114);
    X_116:bat[:oid,:oid] := sql.tid(X_42,"sys","lineitem");
    X_118:bat[:oid,:str] := sql.bind(X_42,"sys","lineitem","l_shipmode",0);
    (X_120,r1_142) := sql.bind(X_42,"sys","lineitem","l_shipmode",2);
    X_122:bat[:oid,:str] := sql.bind(X_42,"sys","lineitem","l_shipmode",1);
    X_123 := sql.delta(X_118,X_120,r1_142,X_122);
    X_124 := algebra.leftfetchjoin(X_116,X_123);
    X_125:bat[:oid,:str] := sql.bind(X_42,"sys","lineitem","l_shipinstruct",0);
    (X_127,r1_150) := sql.bind(X_42,"sys","lineitem","l_shipinstruct",2);
    X_129:bat[:oid,:str] := sql.bind(X_42,"sys","lineitem","l_shipinstruct",1);
    X_130 := sql.delta(X_125,X_127,r1_150,X_129);
    X_131 := algebra.leftfetchjoin(X_116,X_130);
    X_132 := algebra.subselect(X_131,A13,A13,true,true,false);
    X_136 := algebra.subselect(X_131,A26,A26,true,true,false);
    X_137 := bat.mergecand(X_132,X_136);
    X_138 := algebra.subselect(X_131,A39,A39,true,true,false);
    X_139 := bat.mergecand(X_137,X_138);
    X_140 := algebra.subselect(X_124,X_139,A11,A11,true,true,false);
    X_141 := algebra.subselect(X_124,X_139,A12,A12,true,true,false);
    X_142 := bat.mergecand(X_140,X_141);
    X_143 := algebra.subselect(X_124,X_139,A24,A24,true,true,false);
    X_144 := bat.mergecand(X_142,X_143);
    X_145 := algebra.subselect(X_124,X_139,A25,A25,true,true,false);
    X_146 := bat.mergecand(X_144,X_145);
    X_147 := algebra.subselect(X_124,X_139,A37,A37,true,true,false);
    X_148 := bat.mergecand(X_146,X_147);
    X_149 := algebra.subselect(X_124,X_139,A38,A38,true,true,false);
    X_150 := bat.mergecand(X_148,X_149);
    X_151:bat[:oid,:int] := sql.bind(X_42,"sys","lineitem","l_partkey",0);
    (X_153,r1_184) := sql.bind(X_42,"sys","lineitem","l_partkey",2);
    X_155:bat[:oid,:int] := sql.bind(X_42,"sys","lineitem","l_partkey",1);
    X_156 := sql.delta(X_151,X_153,r1_184,X_155);
    X_157:bat[:oid,:int] := algebra.leftfetchjoinPath(X_150,X_116,X_156);
    (X_158,r1_190) := algebra.subjoin(X_115,X_157,nil:BAT,nil:BAT,false,nil:lng);
    X_164:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_190,X_150,X_131);
    X_165:bat[:oid,:str] := algebra.leftfetchjoinPath(r1_190,X_150,X_124);
    X_166:bat[:oid,:int] := algebra.leftfetchjoinPath(X_158,X_108,X_69);
    X_167:bat[:oid,:lng] := sql.bind(X_42,"sys","lineitem","l_quantity",0);
    (X_169,r1_208) := sql.bind(X_42,"sys","lineitem","l_quantity",2);
    X_171:bat[:oid,:lng] := sql.bind(X_42,"sys","lineitem","l_quantity",1);
    X_172 := sql.delta(X_167,X_169,r1_208,X_171);
    X_173:bat[:oid,:lng] := algebra.leftfetchjoinPath(r1_190,X_150,X_116,X_172);
    X_179:bat[:oid,:str] := algebra.leftfetchjoinPath(X_158,X_108,X_55);
    X_180:bat[:oid,:str] := algebra.leftfetchjoinPath(X_158,X_108,X_62);
    X_181 := algebra.subselect(X_180,A1,A1,true,true,false);
    X_185 := algebra.subselect(X_179,X_181,A2,A2,true,true,false);
    X_186 := algebra.subselect(X_179,X_181,A3,A3,true,true,false);
    X_187 := bat.mergecand(X_185,X_186);
    X_188 := algebra.subselect(X_179,X_181,A4,A4,true,true,false);
    X_189 := bat.mergecand(X_187,X_188);
    X_190 := algebra.subselect(X_179,X_181,A5,A5,true,true,false);
    X_191 := bat.mergecand(X_189,X_190);
    X_178 := calc.lng(A6,15,2);
    X_192 := algebra.thetasubselect(X_173,X_191,X_178,">=");
    X_174 := calc.+(A7,A8);
    X_175 := calc.lng(X_174,15,2);
    X_194 := algebra.thetasubselect(X_173,X_192,X_175,"<=");
    X_196 := algebra.subselect(X_166,X_194,A9,A10,true,true,false);
    X_197 := algebra.subselect(X_165,X_196,A11,A11,true,true,false);
    X_198 := algebra.subselect(X_165,X_196,A12,A12,true,true,false);
    X_199 := bat.mergecand(X_197,X_198);
    X_200 := algebra.subselect(X_164,X_199,A13,A13,true,true,false);
    X_206 := algebra.subselect(X_180,A14,A14,true,true,false);
    X_210 := algebra.subselect(X_179,X_206,A15,A15,true,true,false);
    X_211 := algebra.subselect(X_179,X_206,A16,A16,true,true,false);
    X_212 := bat.mergecand(X_210,X_211);
    X_213 := algebra.subselect(X_179,X_206,A17,A17,true,true,false);
    X_214 := bat.mergecand(X_212,X_213);
    X_215 := algebra.subselect(X_179,X_206,A18,A18,true,true,false);
    X_216 := bat.mergecand(X_214,X_215);
    X_205 := calc.lng(A19,15,2);
    X_217 := algebra.thetasubselect(X_173,X_216,X_205,">=");
    X_201 := calc.+(A20,A21);
    X_202 := calc.lng(X_201,15,2);
    X_219 := algebra.thetasubselect(X_173,X_217,X_202,"<=");
    X_221 := algebra.subselect(X_166,X_219,A22,A23,true,true,false);
    X_222 := algebra.subselect(X_165,X_221,A24,A24,true,true,false);
    X_223 := algebra.subselect(X_165,X_221,A25,A25,true,true,false);
    X_224 := bat.mergecand(X_222,X_223);
    X_225 := algebra.subselect(X_164,X_224,A26,A26,true,true,false);
    X_231 := algebra.subselect(X_180,A27,A27,true,true,false);
    X_235 := algebra.subselect(X_179,X_231,A28,A28,true,true,false);
    X_236 := algebra.subselect(X_179,X_231,A29,A29,true,true,false);
    X_237 := bat.mergecand(X_235,X_236);
    X_238 := algebra.subselect(X_179,X_231,A30,A30,true,true,false);
    X_239 := bat.mergecand(X_237,X_238);
    X_240 := algebra.subselect(X_179,X_231,A31,A31,true,true,false);
    X_241 := bat.mergecand(X_239,X_240);
    X_230 := calc.lng(A32,15,2);
    X_242 := algebra.thetasubselect(X_173,X_241,X_230,">=");
    X_226 := calc.+(A33,A34);
    X_227 := calc.lng(X_226,15,2);
    X_244 := algebra.thetasubselect(X_173,X_242,X_227,"<=");
    X_246 := algebra.subselect(X_166,X_244,A35,A36,true,true,false);
    X_247 := algebra.subselect(X_165,X_246,A37,A37,true,true,false);
    X_248 := algebra.subselect(X_165,X_246,A38,A38,true,true,false);
    X_249 := bat.mergecand(X_247,X_248);
    X_250 := algebra.subselect(X_164,X_249,A39,A39,true,true,false);
    X_251 := bat.mergecand(X_225,X_250);
    X_252 := bat.mergecand(X_200,X_251);
    X_253:bat[:oid,:lng] := sql.bind(X_42,"sys","lineitem","l_extendedprice",0);
    (X_255,r1_333) := sql.bind(X_42,"sys","lineitem","l_extendedprice",2);
    X_257:bat[:oid,:lng] := sql.bind(X_42,"sys","lineitem","l_extendedprice",1);
    X_258 := sql.delta(X_253,X_255,r1_333,X_257);
    X_259:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_252,r1_190,X_150,X_116,X_258);
    X_261 := calc.lng(A0,15,2);
    X_263:bat[:oid,:lng] := sql.bind(X_42,"sys","lineitem","l_discount",0);
    (X_265,r1_351) := sql.bind(X_42,"sys","lineitem","l_discount",2);
    X_267:bat[:oid,:lng] := sql.bind(X_42,"sys","lineitem","l_discount",1);
    X_268 := sql.delta(X_263,X_265,r1_351,X_267);
    X_269:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_252,r1_190,X_150,X_116,X_268);
    X_270:bat[:oid,:lng] := batcalc.-(X_261,X_269);
    X_271:bat[:oid,:hge] := batcalc.*(X_259,X_270);
    X_272:hge := aggr.sum(X_271);
    sql.resultSet("sys.L1","revenue","decimal",39,4,10,X_272);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

