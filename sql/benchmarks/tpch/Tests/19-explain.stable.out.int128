stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1117 # length
function user.s4_1():void;
    X_209:void := querylog.define("explain select\n sum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n lineitem,\n part\nwhere\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#12\\'\n and p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n and l_quantity >= 1 and l_quantity <= 1 + 10\n and p_size between 1 and 5\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#23\\'\n and p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n and l_quantity >= 10 and l_quantity <= 10 + 10\n and p_size between 1 and 10\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#34\\'\n and p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n and l_quantity >= 20 and l_quantity <= 20 + 10\n and p_size between 1 and 15\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n );","sequential_pipe",152);
    X_23 := sql.mvc();
    C_24:bat[:oid] := sql.tid(X_23,"sys","part");
    X_27:bat[:str] := sql.bind(X_23,"sys","part","p_container",0);
    (C_30,r1_48) := sql.bind(X_23,"sys","part","p_container",2);
    X_33:bat[:str] := sql.bind(X_23,"sys","part","p_container",1);
    X_34 := sql.delta(X_27,C_30,r1_48,X_33);
    X_35 := algebra.projection(C_24,X_34);
    X_36:bat[:str] := sql.bind(X_23,"sys","part","p_brand",0);
    (C_38,r1_58) := sql.bind(X_23,"sys","part","p_brand",2);
    X_40:bat[:str] := sql.bind(X_23,"sys","part","p_brand",1);
    X_41 := sql.delta(X_36,C_38,r1_58,X_40);
    X_42 := algebra.projection(C_24,X_41);
    X_43:bat[:int] := sql.bind(X_23,"sys","part","p_size",0);
    (C_45,r1_66) := sql.bind(X_23,"sys","part","p_size",2);
    X_47:bat[:int] := sql.bind(X_23,"sys","part","p_size",1);
    X_48 := sql.delta(X_43,C_45,r1_66,X_47);
    X_49 := algebra.projection(C_24,X_48);
    C_50 := algebra.subselect(X_49,1,15,true,true,false);
    C_53 := algebra.subselect(X_42,C_50,"Brand#12","Brand#12",true,false,false);
    C_54 := algebra.subselect(X_42,C_50,"Brand#23","Brand#23",true,false,false);
    X_55 := bat.mergecand(C_53,C_54);
    C_56 := algebra.subselect(X_42,C_50,"Brand#34","Brand#34",true,false,false);
    X_57 := bat.mergecand(X_55,C_56);
    C_58 := algebra.subselect(X_35,X_57,"SM CASE","SM CASE",true,false,false);
    C_59 := algebra.subselect(X_35,X_57,"SM BOX","SM BOX",true,false,false);
    X_60 := bat.mergecand(C_58,C_59);
    C_61 := algebra.subselect(X_35,X_57,"SM PACK","SM PACK",true,false,false);
    X_62 := bat.mergecand(X_60,C_61);
    C_63 := algebra.subselect(X_35,X_57,"SM PKG","SM PKG",true,false,false);
    X_64 := bat.mergecand(X_62,C_63);
    C_65 := algebra.subselect(X_35,X_57,"MED BAG","MED BAG",true,false,false);
    X_66 := bat.mergecand(X_64,C_65);
    C_67 := algebra.subselect(X_35,X_57,"MED BOX","MED BOX",true,false,false);
    X_68 := bat.mergecand(X_66,C_67);
    C_69 := algebra.subselect(X_35,X_57,"MED PKG","MED PKG",true,false,false);
    X_70 := bat.mergecand(X_68,C_69);
    C_71 := algebra.subselect(X_35,X_57,"MED PACK","MED PACK",true,false,false);
    X_72 := bat.mergecand(X_70,C_71);
    C_73 := algebra.subselect(X_35,X_57,"LG CASE","LG CASE",true,false,false);
    X_74 := bat.mergecand(X_72,C_73);
    C_75 := algebra.subselect(X_35,X_57,"LG BOX","LG BOX",true,false,false);
    X_76 := bat.mergecand(X_74,C_75);
    C_77 := algebra.subselect(X_35,X_57,"LG PACK","LG PACK",true,false,false);
    X_78 := bat.mergecand(X_76,C_77);
    C_79 := algebra.subselect(X_35,X_57,"LG PKG","LG PKG",true,false,false);
    X_80 := bat.mergecand(X_78,C_79);
    X_81:bat[:int] := sql.bind(X_23,"sys","part","p_partkey",0);
    (C_83,r1_131) := sql.bind(X_23,"sys","part","p_partkey",2);
    X_85:bat[:int] := sql.bind(X_23,"sys","part","p_partkey",1);
    X_86 := sql.delta(X_81,C_83,r1_131,X_85);
    X_87:bat[:int] := algebra.projectionpath(X_80,C_24,X_86);
    C_88:bat[:oid] := sql.tid(X_23,"sys","lineitem");
    X_90:bat[:str] := sql.bind(X_23,"sys","lineitem","l_shipmode",0);
    (C_92,r1_141) := sql.bind(X_23,"sys","lineitem","l_shipmode",2);
    X_94:bat[:str] := sql.bind(X_23,"sys","lineitem","l_shipmode",1);
    X_95 := sql.delta(X_90,C_92,r1_141,X_94);
    X_96 := algebra.projection(C_88,X_95);
    X_97:bat[:str] := sql.bind(X_23,"sys","lineitem","l_shipinstruct",0);
    (C_99,r1_149) := sql.bind(X_23,"sys","lineitem","l_shipinstruct",2);
    X_101:bat[:str] := sql.bind(X_23,"sys","lineitem","l_shipinstruct",1);
    X_102 := sql.delta(X_97,C_99,r1_149,X_101);
    X_103 := algebra.projection(C_88,X_102);
    C_104 := algebra.subselect(X_103,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_105 := bat.mergecand(C_104,C_104);
    X_106 := bat.mergecand(X_105,C_104);
    C_107 := algebra.subselect(X_96,X_106,"AIR","AIR",true,false,false);
    C_108 := algebra.subselect(X_96,X_106,"AIR REG","AIR REG",true,false,false);
    X_109 := bat.mergecand(C_107,C_108);
    X_110 := bat.mergecand(X_109,C_107);
    X_111 := bat.mergecand(X_110,C_108);
    X_112 := bat.mergecand(X_111,C_107);
    X_113 := bat.mergecand(X_112,C_108);
    X_114:bat[:int] := sql.bind(X_23,"sys","lineitem","l_partkey",0);
    (C_116,r1_183) := sql.bind(X_23,"sys","lineitem","l_partkey",2);
    X_118:bat[:int] := sql.bind(X_23,"sys","lineitem","l_partkey",1);
    X_119 := sql.delta(X_114,C_116,r1_183,X_118);
    X_120:bat[:int] := algebra.projectionpath(X_113,C_88,X_119);
    (X_121,r1_189) := algebra.subjoin(X_87,X_120,nil:BAT,nil:BAT,false,nil:lng);
    X_125:bat[:str] := algebra.projectionpath(r1_189,X_113,X_103);
    X_126:bat[:str] := algebra.projectionpath(r1_189,X_113,X_96);
    X_127:bat[:int] := algebra.projectionpath(X_121,X_80,X_49);
    X_128:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_quantity",0);
    (C_130,r1_207) := sql.bind(X_23,"sys","lineitem","l_quantity",2);
    X_132:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_quantity",1);
    X_133 := sql.delta(X_128,C_130,r1_207,X_132);
    X_134:bat[:lng] := algebra.projectionpath(r1_189,X_113,C_88,X_133);
    X_135:bat[:str] := algebra.projectionpath(X_121,X_80,X_35);
    X_136:bat[:str] := algebra.projectionpath(X_121,X_80,X_42);
    C_137 := algebra.subselect(X_136,"Brand#12","Brand#12",true,false,false);
    C_138 := algebra.subselect(X_135,C_137,"SM CASE","SM CASE",true,false,false);
    C_139 := algebra.subselect(X_135,C_137,"SM BOX","SM BOX",true,false,false);
    X_140 := bat.mergecand(C_138,C_139);
    C_141 := algebra.subselect(X_135,C_137,"SM PACK","SM PACK",true,false,false);
    X_142 := bat.mergecand(X_140,C_141);
    C_143 := algebra.subselect(X_135,C_137,"SM PKG","SM PKG",true,false,false);
    X_144 := bat.mergecand(X_142,C_143);
    C_145 := algebra.thetasubselect(X_134,X_144,100:lng,">=");
    C_147 := algebra.thetasubselect(X_134,C_145,1100:lng,"<=");
    C_149 := algebra.subselect(X_127,C_147,1,5,true,true,false);
    C_150 := algebra.subselect(X_126,C_149,"AIR","AIR",true,false,false);
    C_151 := algebra.subselect(X_126,C_149,"AIR REG","AIR REG",true,false,false);
    X_152 := bat.mergecand(C_150,C_151);
    C_153 := algebra.subselect(X_125,X_152,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_154 := algebra.subselect(X_136,"Brand#23","Brand#23",true,false,false);
    C_155 := algebra.subselect(X_135,C_154,"MED BAG","MED BAG",true,false,false);
    C_156 := algebra.subselect(X_135,C_154,"MED BOX","MED BOX",true,false,false);
    X_157 := bat.mergecand(C_155,C_156);
    C_158 := algebra.subselect(X_135,C_154,"MED PKG","MED PKG",true,false,false);
    X_159 := bat.mergecand(X_157,C_158);
    C_160 := algebra.subselect(X_135,C_154,"MED PACK","MED PACK",true,false,false);
    X_161 := bat.mergecand(X_159,C_160);
    C_162 := algebra.thetasubselect(X_134,X_161,1000:lng,">=");
    C_163 := algebra.thetasubselect(X_134,C_162,2000:lng,"<=");
    C_164 := algebra.subselect(X_127,C_163,1,10,true,true,false);
    C_165 := algebra.subselect(X_126,C_164,"AIR","AIR",true,false,false);
    C_166 := algebra.subselect(X_126,C_164,"AIR REG","AIR REG",true,false,false);
    X_167 := bat.mergecand(C_165,C_166);
    C_168 := algebra.subselect(X_125,X_167,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_169 := algebra.subselect(X_136,"Brand#34","Brand#34",true,false,false);
    C_170 := algebra.subselect(X_135,C_169,"LG CASE","LG CASE",true,false,false);
    C_171 := algebra.subselect(X_135,C_169,"LG BOX","LG BOX",true,false,false);
    X_172 := bat.mergecand(C_170,C_171);
    C_173 := algebra.subselect(X_135,C_169,"LG PACK","LG PACK",true,false,false);
    X_174 := bat.mergecand(X_172,C_173);
    C_175 := algebra.subselect(X_135,C_169,"LG PKG","LG PKG",true,false,false);
    X_176 := bat.mergecand(X_174,C_175);
    C_177 := algebra.thetasubselect(X_134,X_176,2000:lng,">=");
    C_178 := algebra.thetasubselect(X_134,C_177,3000:lng,"<=");
    C_179 := algebra.subselect(X_127,C_178,1,15,true,true,false);
    C_180 := algebra.subselect(X_126,C_179,"AIR","AIR",true,false,false);
    C_181 := algebra.subselect(X_126,C_179,"AIR REG","AIR REG",true,false,false);
    X_182 := bat.mergecand(C_180,C_181);
    C_183 := algebra.subselect(X_125,X_182,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_184 := bat.mergecand(C_168,C_183);
    X_185 := bat.mergecand(C_153,X_184);
    X_186:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_extendedprice",0);
    (C_188,r1_332) := sql.bind(X_23,"sys","lineitem","l_extendedprice",2);
    X_190:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_extendedprice",1);
    X_191 := sql.delta(X_186,C_188,r1_332,X_190);
    X_192:bat[:lng] := algebra.projectionpath(X_185,r1_189,X_113,C_88,X_191);
    X_193:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_discount",0);
    (C_195,r1_350) := sql.bind(X_23,"sys","lineitem","l_discount",2);
    X_197:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_discount",1);
    X_198 := sql.delta(X_193,C_195,r1_350,X_197);
    X_199:bat[:lng] := algebra.projectionpath(X_185,r1_189,X_113,C_88,X_198);
    X_200:bat[:lng] := batcalc.-(100:lng,X_199);
    X_201:bat[:hge] := batcalc.*(X_192,X_200);
    X_202:hge := aggr.sum(X_201);
    sql.resultSet("sys.L1","revenue","decimal",39,4,10,X_202);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=155 usec 
#remap                actions= 3 time=495 usec 
#costModel            actions= 1 time=183 usec 
#coercions            actions= 0 time=76 usec 
#evaluate             actions=84 time=402 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions= 0 time=10 usec 
#aliases              actions=94 time=196 usec 
#mergetable           actions= 0 time=189 usec 
#deadcode             actions=21 time=172 usec 
#aliases              actions= 0 time=30 usec 
#constants            actions=77 time=239 usec 
#commonTerms          actions= 6 time=227 usec 
#projectionpath       actions=15 time=162 usec 
#reorder              actions= 1 time=230 usec 
#deadcode             actions=21 time=156 usec 
#reduce               actions=255 time=237 usec 
#matpack              actions= 0 time=13 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=136 usec 
#garbageCollector     actions= 1 time=153 usec 
#total                actions= 1 time=3625 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

