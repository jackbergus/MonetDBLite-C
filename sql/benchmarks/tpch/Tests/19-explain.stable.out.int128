stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1117 # length
function user.s4_1():void;
    X_329:void := querylog.define("explain select\n sum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n lineitem,\n part\nwhere\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#12\\'\n and p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n and l_quantity >= 1 and l_quantity <= 1 + 10\n and p_size between 1 and 5\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#23\\'\n and p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n and l_quantity >= 10 and l_quantity <= 10 + 10\n and p_size between 1 and 10\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#34\\'\n and p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n and l_quantity >= 20 and l_quantity <= 20 + 10\n and p_size between 1 and 15\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n );","sequential_pipe",122);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","part");
    X_4:bat[:str] := sql.bind(X_0,"sys","part","p_container",0);
    X_13 := algebra.projection(C_1,X_4);
    X_15:bat[:str] := sql.bind(X_0,"sys","part","p_brand",0);
    X_21 := algebra.projection(C_1,X_15);
    X_23:bat[:int] := sql.bind(X_0,"sys","part","p_size",0);
    X_29 := algebra.projection(C_1,X_23);
    C_40 := algebra.subselect(X_29,1,15,true,true,false);
    C_44 := algebra.subselect(X_21,C_40,"Brand#12","Brand#12",true,false,false);
    C_46 := algebra.subselect(X_21,C_40,"Brand#23","Brand#23",true,false,false);
    X_47 := bat.mergecand(C_44,C_46);
    C_49 := algebra.subselect(X_21,C_40,"Brand#34","Brand#34",true,false,false);
    X_50 := bat.mergecand(X_47,C_49);
    C_51 := algebra.subselect(X_13,X_50,"SM CASE","SM CASE",true,false,false);
    C_53 := algebra.subselect(X_13,X_50,"SM BOX","SM BOX",true,false,false);
    X_54 := bat.mergecand(C_51,C_53);
    C_56 := algebra.subselect(X_13,X_50,"SM PACK","SM PACK",true,false,false);
    X_57 := bat.mergecand(X_54,C_56);
    C_59 := algebra.subselect(X_13,X_50,"SM PKG","SM PKG",true,false,false);
    X_60 := bat.mergecand(X_57,C_59);
    C_62 := algebra.subselect(X_13,X_50,"MED BAG","MED BAG",true,false,false);
    X_63 := bat.mergecand(X_60,C_62);
    C_65 := algebra.subselect(X_13,X_50,"MED BOX","MED BOX",true,false,false);
    X_66 := bat.mergecand(X_63,C_65);
    C_68 := algebra.subselect(X_13,X_50,"MED PKG","MED PKG",true,false,false);
    X_69 := bat.mergecand(X_66,C_68);
    C_71 := algebra.subselect(X_13,X_50,"MED PACK","MED PACK",true,false,false);
    X_72 := bat.mergecand(X_69,C_71);
    C_74 := algebra.subselect(X_13,X_50,"LG CASE","LG CASE",true,false,false);
    X_78 := bat.mergecand(X_72,C_74);
    C_80 := algebra.subselect(X_13,X_50,"LG BOX","LG BOX",true,false,false);
    X_81 := bat.mergecand(X_78,C_80);
    C_83 := algebra.subselect(X_13,X_50,"LG PACK","LG PACK",true,false,false);
    X_84 := bat.mergecand(X_81,C_83);
    C_86 := algebra.subselect(X_13,X_50,"LG PKG","LG PKG",true,false,false);
    X_87 := bat.mergecand(X_84,C_86);
    X_88:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_95:bat[:int] := algebra.projectionpath(X_87,C_1,X_88);
    C_96:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_98:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",0);
    X_104 := algebra.projection(C_96,X_98);
    X_106:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipinstruct",0);
    X_112 := algebra.projection(C_96,X_106);
    C_114 := algebra.subselect(X_112,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_120 := bat.mergecand(C_114,C_114);
    X_123 := bat.mergecand(X_120,C_114);
    C_124 := algebra.subselect(X_104,X_123,"AIR","AIR",true,false,false);
    C_126 := algebra.subselect(X_104,X_123,"AIR REG","AIR REG",true,false,false);
    X_127 := bat.mergecand(C_124,C_126);
    X_130 := bat.mergecand(X_127,C_124);
    X_133 := bat.mergecand(X_130,C_126);
    X_136 := bat.mergecand(X_133,C_124);
    X_139 := bat.mergecand(X_136,C_126);
    X_140:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    X_147:bat[:int] := algebra.projectionpath(X_139,C_96,X_140);
    (X_148,r1_189) := algebra.subjoin(X_95,X_147,nil:BAT,nil:BAT,false,nil:lng);
    X_155:bat[:str] := algebra.projectionpath(r1_189,X_139,X_112);
    X_158:bat[:str] := algebra.projectionpath(r1_189,X_139,X_104);
    X_161:bat[:int] := algebra.projectionpath(X_148,X_87,X_29);
    X_164:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",0);
    X_172:bat[:lng] := algebra.projectionpath(r1_189,X_139,C_96,X_164);
    X_182:bat[:str] := algebra.projectionpath(X_148,X_87,X_13);
    X_185:bat[:str] := algebra.projectionpath(X_148,X_87,X_21);
    C_187 := algebra.subselect(X_185,"Brand#12","Brand#12",true,false,false);
    C_191 := algebra.subselect(X_182,C_187,"SM CASE","SM CASE",true,false,false);
    C_193 := algebra.subselect(X_182,C_187,"SM BOX","SM BOX",true,false,false);
    X_194 := bat.mergecand(C_191,C_193);
    C_196 := algebra.subselect(X_182,C_187,"SM PACK","SM PACK",true,false,false);
    X_197 := bat.mergecand(X_194,C_196);
    C_199 := algebra.subselect(X_182,C_187,"SM PKG","SM PKG",true,false,false);
    X_200 := bat.mergecand(X_197,C_199);
    C_201 := algebra.thetasubselect(X_172,X_200,100:lng,">=");
    C_203 := algebra.thetasubselect(X_172,C_201,1100:lng,"<=");
    C_205 := algebra.subselect(X_161,C_203,1,5,true,true,false);
    C_206 := algebra.subselect(X_158,C_205,"AIR","AIR",true,false,false);
    C_208 := algebra.subselect(X_158,C_205,"AIR REG","AIR REG",true,false,false);
    X_209 := bat.mergecand(C_206,C_208);
    C_210 := algebra.subselect(X_155,X_209,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_225 := algebra.subselect(X_185,"Brand#23","Brand#23",true,false,false);
    C_229 := algebra.subselect(X_182,C_225,"MED BAG","MED BAG",true,false,false);
    C_231 := algebra.subselect(X_182,C_225,"MED BOX","MED BOX",true,false,false);
    X_232 := bat.mergecand(C_229,C_231);
    C_234 := algebra.subselect(X_182,C_225,"MED PKG","MED PKG",true,false,false);
    X_235 := bat.mergecand(X_232,C_234);
    C_237 := algebra.subselect(X_182,C_225,"MED PACK","MED PACK",true,false,false);
    X_238 := bat.mergecand(X_235,C_237);
    C_239 := algebra.thetasubselect(X_172,X_238,1000:lng,">=");
    C_241 := algebra.thetasubselect(X_172,C_239,2000:lng,"<=");
    C_243 := algebra.subselect(X_161,C_241,1,10,true,true,false);
    C_244 := algebra.subselect(X_158,C_243,"AIR","AIR",true,false,false);
    C_246 := algebra.subselect(X_158,C_243,"AIR REG","AIR REG",true,false,false);
    X_247 := bat.mergecand(C_244,C_246);
    C_248 := algebra.subselect(X_155,X_247,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_263 := algebra.subselect(X_185,"Brand#34","Brand#34",true,false,false);
    C_267 := algebra.subselect(X_182,C_263,"LG CASE","LG CASE",true,false,false);
    C_269 := algebra.subselect(X_182,C_263,"LG BOX","LG BOX",true,false,false);
    X_270 := bat.mergecand(C_267,C_269);
    C_272 := algebra.subselect(X_182,C_263,"LG PACK","LG PACK",true,false,false);
    X_273 := bat.mergecand(X_270,C_272);
    C_275 := algebra.subselect(X_182,C_263,"LG PKG","LG PKG",true,false,false);
    X_276 := bat.mergecand(X_273,C_275);
    C_277 := algebra.thetasubselect(X_172,X_276,2000:lng,">=");
    C_279 := algebra.thetasubselect(X_172,C_277,3000:lng,"<=");
    C_281 := algebra.subselect(X_161,C_279,1,15,true,true,false);
    C_282 := algebra.subselect(X_158,C_281,"AIR","AIR",true,false,false);
    C_284 := algebra.subselect(X_158,C_281,"AIR REG","AIR REG",true,false,false);
    X_285 := bat.mergecand(C_282,C_284);
    C_286 := algebra.subselect(X_155,X_285,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_287 := bat.mergecand(C_248,C_286);
    X_288 := bat.mergecand(C_210,X_287);
    X_289:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_298:bat[:lng] := algebra.projectionpath(X_288,r1_189,X_139,C_96,X_289);
    X_307:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_316:bat[:lng] := algebra.projectionpath(X_288,r1_189,X_139,C_96,X_307);
    X_317:bat[:lng] := batcalc.-(100:lng,X_316);
    X_319:bat[:hge] := batcalc.*(X_298,X_317);
    X_321:hge := aggr.sum(X_319);
    sql.resultSet("sys.L1","revenue","decimal",39,4,10,X_321);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=155 usec 
#remap                actions= 3 time=495 usec 
#costModel            actions= 1 time=183 usec 
#coercions            actions= 0 time=76 usec 
#evaluate             actions=84 time=402 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions= 0 time=10 usec 
#aliases              actions=94 time=196 usec 
#mergetable           actions= 0 time=189 usec 
#deadcode             actions=21 time=172 usec 
#aliases              actions= 0 time=30 usec 
#constants            actions=77 time=239 usec 
#commonTerms          actions= 6 time=227 usec 
#projectionpath       actions=15 time=162 usec 
#reorder              actions= 1 time=230 usec 
#deadcode             actions=21 time=156 usec 
#reduce               actions=255 time=237 usec 
#matpack              actions= 0 time=13 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=136 usec 
#garbageCollector     actions= 1 time=153 usec 
#total                actions= 1 time=3625 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

