stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1117 # length
function user.s2_1():void;
    X_168:void := querylog.define("explain select\n sum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n lineitem,\n part\nwhere\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#12\\'\n and p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n and l_quantity >= 1 and l_quantity <= 1 + 10\n and p_size between 1 and 5\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#23\\'\n and p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n and l_quantity >= 10 and l_quantity <= 10 + 10\n and p_size between 1 and 10\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#34\\'\n and p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n and l_quantity >= 20 and l_quantity <= 20 + 10\n and p_size between 1 and 15\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n );","sequential_pipe",122);
    X_23 := sql.mvc();
    C_24:bat[:oid] := sql.tid(X_23,"sys","part");
    X_27:bat[:str] := sql.bind(X_23,"sys","part","p_container",0);
    X_30 := algebra.projection(C_24,X_27);
    X_31:bat[:str] := sql.bind(X_23,"sys","part","p_brand",0);
    X_33 := algebra.projection(C_24,X_31);
    X_34:bat[:int] := sql.bind(X_23,"sys","part","p_size",0);
    X_36 := algebra.projection(C_24,X_34);
    C_37 := algebra.subselect(X_36,1,15,true,true,false);
    C_40 := algebra.subselect(X_33,C_37,"Brand#12","Brand#12",true,false,false);
    C_41 := algebra.subselect(X_33,C_37,"Brand#23","Brand#23",true,false,false);
    X_42 := bat.mergecand(C_40,C_41);
    C_43 := algebra.subselect(X_33,C_37,"Brand#34","Brand#34",true,false,false);
    X_44 := bat.mergecand(X_42,C_43);
    C_45 := algebra.subselect(X_30,X_44,"SM CASE","SM CASE",true,false,false);
    C_46 := algebra.subselect(X_30,X_44,"SM BOX","SM BOX",true,false,false);
    X_47 := bat.mergecand(C_45,C_46);
    C_48 := algebra.subselect(X_30,X_44,"SM PACK","SM PACK",true,false,false);
    X_49 := bat.mergecand(X_47,C_48);
    C_50 := algebra.subselect(X_30,X_44,"SM PKG","SM PKG",true,false,false);
    X_51 := bat.mergecand(X_49,C_50);
    C_52 := algebra.subselect(X_30,X_44,"MED BAG","MED BAG",true,false,false);
    X_53 := bat.mergecand(X_51,C_52);
    C_54 := algebra.subselect(X_30,X_44,"MED BOX","MED BOX",true,false,false);
    X_55 := bat.mergecand(X_53,C_54);
    C_56 := algebra.subselect(X_30,X_44,"MED PKG","MED PKG",true,false,false);
    X_57 := bat.mergecand(X_55,C_56);
    C_58 := algebra.subselect(X_30,X_44,"MED PACK","MED PACK",true,false,false);
    X_59 := bat.mergecand(X_57,C_58);
    C_60 := algebra.subselect(X_30,X_44,"LG CASE","LG CASE",true,false,false);
    X_61 := bat.mergecand(X_59,C_60);
    C_62 := algebra.subselect(X_30,X_44,"LG BOX","LG BOX",true,false,false);
    X_63 := bat.mergecand(X_61,C_62);
    C_64 := algebra.subselect(X_30,X_44,"LG PACK","LG PACK",true,false,false);
    X_65 := bat.mergecand(X_63,C_64);
    C_66 := algebra.subselect(X_30,X_44,"LG PKG","LG PKG",true,false,false);
    X_67 := bat.mergecand(X_65,C_66);
    X_68:bat[:int] := sql.bind(X_23,"sys","part","p_partkey",0);
    X_70:bat[:int] := algebra.projectionpath(X_67,C_24,X_68);
    C_71:bat[:oid] := sql.tid(X_23,"sys","lineitem");
    X_73:bat[:str] := sql.bind(X_23,"sys","lineitem","l_shipmode",0);
    X_75 := algebra.projection(C_71,X_73);
    X_76:bat[:str] := sql.bind(X_23,"sys","lineitem","l_shipinstruct",0);
    X_78 := algebra.projection(C_71,X_76);
    C_79 := algebra.subselect(X_78,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_80 := bat.mergecand(C_79,C_79);
    X_81 := bat.mergecand(X_80,C_79);
    C_82 := algebra.subselect(X_75,X_81,"AIR","AIR",true,false,false);
    C_83 := algebra.subselect(X_75,X_81,"AIR REG","AIR REG",true,false,false);
    X_84 := bat.mergecand(C_82,C_83);
    X_85 := bat.mergecand(X_84,C_82);
    X_86 := bat.mergecand(X_85,C_83);
    X_87 := bat.mergecand(X_86,C_82);
    X_88 := bat.mergecand(X_87,C_83);
    X_89:bat[:int] := sql.bind(X_23,"sys","lineitem","l_partkey",0);
    X_91:bat[:int] := algebra.projectionpath(X_88,C_71,X_89);
    (X_92,r1_189) := algebra.subjoin(X_70,X_91,nil:BAT,nil:BAT,false,nil:lng);
    X_96:bat[:str] := algebra.projectionpath(r1_189,X_88,X_78);
    X_97:bat[:str] := algebra.projectionpath(r1_189,X_88,X_75);
    X_98:bat[:int] := algebra.projectionpath(X_92,X_67,X_36);
    X_99:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_quantity",0);
    X_101:bat[:lng] := algebra.projectionpath(r1_189,X_88,C_71,X_99);
    X_102:bat[:str] := algebra.projectionpath(X_92,X_67,X_30);
    X_103:bat[:str] := algebra.projectionpath(X_92,X_67,X_33);
    C_104 := algebra.subselect(X_103,"Brand#12","Brand#12",true,false,false);
    C_105 := algebra.subselect(X_102,C_104,"SM CASE","SM CASE",true,false,false);
    C_106 := algebra.subselect(X_102,C_104,"SM BOX","SM BOX",true,false,false);
    X_107 := bat.mergecand(C_105,C_106);
    C_108 := algebra.subselect(X_102,C_104,"SM PACK","SM PACK",true,false,false);
    X_109 := bat.mergecand(X_107,C_108);
    C_110 := algebra.subselect(X_102,C_104,"SM PKG","SM PKG",true,false,false);
    X_111 := bat.mergecand(X_109,C_110);
    C_112 := algebra.thetasubselect(X_101,X_111,100:lng,">=");
    C_114 := algebra.thetasubselect(X_101,C_112,1100:lng,"<=");
    C_116 := algebra.subselect(X_98,C_114,1,5,true,true,false);
    C_117 := algebra.subselect(X_97,C_116,"AIR","AIR",true,false,false);
    C_118 := algebra.subselect(X_97,C_116,"AIR REG","AIR REG",true,false,false);
    X_119 := bat.mergecand(C_117,C_118);
    C_120 := algebra.subselect(X_96,X_119,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_121 := algebra.subselect(X_103,"Brand#23","Brand#23",true,false,false);
    C_122 := algebra.subselect(X_102,C_121,"MED BAG","MED BAG",true,false,false);
    C_123 := algebra.subselect(X_102,C_121,"MED BOX","MED BOX",true,false,false);
    X_124 := bat.mergecand(C_122,C_123);
    C_125 := algebra.subselect(X_102,C_121,"MED PKG","MED PKG",true,false,false);
    X_126 := bat.mergecand(X_124,C_125);
    C_127 := algebra.subselect(X_102,C_121,"MED PACK","MED PACK",true,false,false);
    X_128 := bat.mergecand(X_126,C_127);
    C_129 := algebra.thetasubselect(X_101,X_128,1000:lng,">=");
    C_130 := algebra.thetasubselect(X_101,C_129,2000:lng,"<=");
    C_131 := algebra.subselect(X_98,C_130,1,10,true,true,false);
    C_132 := algebra.subselect(X_97,C_131,"AIR","AIR",true,false,false);
    C_133 := algebra.subselect(X_97,C_131,"AIR REG","AIR REG",true,false,false);
    X_134 := bat.mergecand(C_132,C_133);
    C_135 := algebra.subselect(X_96,X_134,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_136 := algebra.subselect(X_103,"Brand#34","Brand#34",true,false,false);
    C_137 := algebra.subselect(X_102,C_136,"LG CASE","LG CASE",true,false,false);
    C_138 := algebra.subselect(X_102,C_136,"LG BOX","LG BOX",true,false,false);
    X_139 := bat.mergecand(C_137,C_138);
    C_140 := algebra.subselect(X_102,C_136,"LG PACK","LG PACK",true,false,false);
    X_141 := bat.mergecand(X_139,C_140);
    C_142 := algebra.subselect(X_102,C_136,"LG PKG","LG PKG",true,false,false);
    X_143 := bat.mergecand(X_141,C_142);
    C_144 := algebra.thetasubselect(X_101,X_143,2000:lng,">=");
    C_145 := algebra.thetasubselect(X_101,C_144,3000:lng,"<=");
    C_146 := algebra.subselect(X_98,C_145,1,15,true,true,false);
    C_147 := algebra.subselect(X_97,C_146,"AIR","AIR",true,false,false);
    C_148 := algebra.subselect(X_97,C_146,"AIR REG","AIR REG",true,false,false);
    X_149 := bat.mergecand(C_147,C_148);
    C_150 := algebra.subselect(X_96,X_149,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_151 := bat.mergecand(C_135,C_150);
    X_152 := bat.mergecand(C_120,X_151);
    X_153:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_extendedprice",0);
    X_155:bat[:lng] := algebra.projectionpath(X_152,r1_189,X_88,C_71,X_153);
    X_156:bat[:lng] := sql.bind(X_23,"sys","lineitem","l_discount",0);
    X_158:bat[:lng] := algebra.projectionpath(X_152,r1_189,X_88,C_71,X_156);
    X_159:bat[:lng] := batcalc.-(100:lng,X_158);
    X_160:bat[:hge] := batcalc.*(X_155,X_159);
    X_161:hge := aggr.sum(X_160);
    sql.resultSet("sys.L1","revenue","decimal",39,4,10,X_161);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

