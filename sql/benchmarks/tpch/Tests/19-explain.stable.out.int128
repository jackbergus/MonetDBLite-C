stdout of test '19-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "19-explain.SQL.py" "19-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice* (1 - l_discount)) as revenue
#from
#	lineitem,
#	part
#where
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#12'
#		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
#		and l_quantity >= 1 and l_quantity <= 1 + 10
#		and p_size between 1 and 5
#		and l_shipmode in ('AIR', 'AIR REG')
#		and l_shipinstruct = 'DELIVER IN PERSON'
#	)
#	or
#	(
#		p_partkey = l_partkey
#		and p_brand = 'Brand#23'
#		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
#		and l_quantity >= 10 and l_quantity <= 10 + 10
% .explain # table_name
% mal # name
% clob # type
% 1117 # length
function user.s4_1():void;
    X_337:void := querylog.define("explain select\n sum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n lineitem,\n part\nwhere\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#12\\'\n and p_container in (\\'SM CASE\\', \\'SM BOX\\', \\'SM PACK\\', \\'SM PKG\\')\n and l_quantity >= 1 and l_quantity <= 1 + 10\n and p_size between 1 and 5\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#23\\'\n and p_container in (\\'MED BAG\\', \\'MED BOX\\', \\'MED PKG\\', \\'MED PACK\\')\n and l_quantity >= 10 and l_quantity <= 10 + 10\n and p_size between 1 and 10\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n )\n or\n (\n p_partkey = l_partkey\n and p_brand = \\'Brand#34\\'\n and p_container in (\\'LG CASE\\', \\'LG BOX\\', \\'LG PACK\\', \\'LG PKG\\')\n and l_quantity >= 20 and l_quantity <= 20 + 10\n and p_size between 1 and 15\n and l_shipmode in (\\'AIR\\', \\'AIR REG\\')\n and l_shipinstruct = \\'DELIVER IN PERSON\\'\n );","sequential_pipe",122);
    X_0 := sql.mvc();
    C_1:bat[:oid] := sql.tid(X_0,"sys","part");
    X_28:bat[:str] := sql.bind(X_0,"sys","part","p_container",0);
    X_34 := algebra.projection(C_1,X_28);
    X_14:bat[:str] := sql.bind(X_0,"sys","part","p_brand",0);
    X_20 := algebra.projection(C_1,X_14);
    X_21:bat[:int] := sql.bind(X_0,"sys","part","p_size",0);
    X_27 := algebra.projection(C_1,X_21);
    C_45 := algebra.subselect(X_27,1,15,true,true,false);
    C_50 := algebra.subselect(X_20,C_45,"Brand#12","Brand#12",true,false,false);
    C_52 := algebra.subselect(X_20,C_45,"Brand#23","Brand#23",true,false,false);
    X_53 := bat.mergecand(C_50,C_52);
    C_55 := algebra.subselect(X_20,C_45,"Brand#34","Brand#34",true,false,false);
    X_56 := bat.mergecand(X_53,C_55);
    C_58 := algebra.subselect(X_34,X_56,"SM CASE","SM CASE",true,false,false);
    C_60 := algebra.subselect(X_34,X_56,"SM BOX","SM BOX",true,false,false);
    X_61 := bat.mergecand(C_58,C_60);
    C_63 := algebra.subselect(X_34,X_56,"SM PACK","SM PACK",true,false,false);
    X_64 := bat.mergecand(X_61,C_63);
    C_66 := algebra.subselect(X_34,X_56,"SM PKG","SM PKG",true,false,false);
    X_67 := bat.mergecand(X_64,C_66);
    C_69 := algebra.subselect(X_34,X_56,"MED BAG","MED BAG",true,false,false);
    X_70 := bat.mergecand(X_67,C_69);
    C_72 := algebra.subselect(X_34,X_56,"MED BOX","MED BOX",true,false,false);
    X_73 := bat.mergecand(X_70,C_72);
    C_75 := algebra.subselect(X_34,X_56,"MED PKG","MED PKG",true,false,false);
    X_76 := bat.mergecand(X_73,C_75);
    C_78 := algebra.subselect(X_34,X_56,"MED PACK","MED PACK",true,false,false);
    X_79 := bat.mergecand(X_76,C_78);
    C_81 := algebra.subselect(X_34,X_56,"LG CASE","LG CASE",true,false,false);
    X_85 := bat.mergecand(X_79,C_81);
    C_87 := algebra.subselect(X_34,X_56,"LG BOX","LG BOX",true,false,false);
    X_88 := bat.mergecand(X_85,C_87);
    C_90 := algebra.subselect(X_34,X_56,"LG PACK","LG PACK",true,false,false);
    X_91 := bat.mergecand(X_88,C_90);
    C_93 := algebra.subselect(X_34,X_56,"LG PKG","LG PKG",true,false,false);
    X_94 := bat.mergecand(X_91,C_93);
    X_4:bat[:int] := sql.bind(X_0,"sys","part","p_partkey",0);
    X_95:bat[:int] := algebra.projectionpath(X_94,C_1,X_4);
    C_99:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_136:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",0);
    X_142 := algebra.projection(C_99,X_136);
    X_129:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipinstruct",0);
    X_135 := algebra.projection(C_99,X_129);
    C_144 := algebra.subselect(X_135,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_150 := bat.mergecand(C_144,C_144);
    X_153 := bat.mergecand(X_150,C_144);
    C_155 := algebra.subselect(X_142,X_153,"AIR","AIR",true,false,false);
    C_157 := algebra.subselect(X_142,X_153,"AIR REG","AIR REG",true,false,false);
    X_158 := bat.mergecand(C_155,C_157);
    X_161 := bat.mergecand(X_158,C_155);
    X_164 := bat.mergecand(X_161,C_157);
    X_167 := bat.mergecand(X_164,C_155);
    X_170 := bat.mergecand(X_167,C_157);
    X_101:bat[:int] := sql.bind(X_0,"sys","lineitem","l_partkey",0);
    X_171:bat[:int] := algebra.projectionpath(X_170,C_99,X_101);
    (X_177,X_178) := algebra.subjoin(X_95,X_171,nil:BAT,nil:BAT,false,nil:lng);
    X_191:bat[:str] := algebra.projectionpath(X_178,X_170,X_135);
    X_192:bat[:str] := algebra.projectionpath(X_178,X_170,X_142);
    X_185:bat[:int] := algebra.projectionpath(X_177,X_94,X_27);
    X_108:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_quantity",0);
    X_188:bat[:lng] := algebra.projectionpath(X_178,X_170,C_99,X_108);
    X_186:bat[:str] := algebra.projectionpath(X_177,X_94,X_34);
    X_184:bat[:str] := algebra.projectionpath(X_177,X_94,X_20);
    C_194 := algebra.subselect(X_184,"Brand#12","Brand#12",true,false,false);
    C_197 := algebra.subselect(X_186,C_194,"SM CASE","SM CASE",true,false,false);
    C_199 := algebra.subselect(X_186,C_194,"SM BOX","SM BOX",true,false,false);
    X_200 := bat.mergecand(C_197,C_199);
    C_202 := algebra.subselect(X_186,C_194,"SM PACK","SM PACK",true,false,false);
    X_203 := bat.mergecand(X_200,C_202);
    C_205 := algebra.subselect(X_186,C_194,"SM PKG","SM PKG",true,false,false);
    X_206 := bat.mergecand(X_203,C_205);
    C_211 := algebra.thetasubselect(X_188,X_206,100:lng,">=");
    C_217 := algebra.thetasubselect(X_188,C_211,1100:lng,"<=");
    C_221 := algebra.subselect(X_185,C_217,1,5,true,true,false);
    C_224 := algebra.subselect(X_192,C_221,"AIR","AIR",true,false,false);
    C_226 := algebra.subselect(X_192,C_221,"AIR REG","AIR REG",true,false,false);
    X_227 := bat.mergecand(C_224,C_226);
    C_229 := algebra.subselect(X_191,X_227,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_232 := algebra.subselect(X_184,"Brand#23","Brand#23",true,false,false);
    C_234 := algebra.subselect(X_186,C_232,"MED BAG","MED BAG",true,false,false);
    C_236 := algebra.subselect(X_186,C_232,"MED BOX","MED BOX",true,false,false);
    X_237 := bat.mergecand(C_234,C_236);
    C_239 := algebra.subselect(X_186,C_232,"MED PKG","MED PKG",true,false,false);
    X_240 := bat.mergecand(X_237,C_239);
    C_242 := algebra.subselect(X_186,C_232,"MED PACK","MED PACK",true,false,false);
    X_243 := bat.mergecand(X_240,C_242);
    C_248 := algebra.thetasubselect(X_188,X_243,1000:lng,">=");
    C_254 := algebra.thetasubselect(X_188,C_248,2000:lng,"<=");
    C_258 := algebra.subselect(X_185,C_254,1,10,true,true,false);
    C_261 := algebra.subselect(X_192,C_258,"AIR","AIR",true,false,false);
    C_263 := algebra.subselect(X_192,C_258,"AIR REG","AIR REG",true,false,false);
    X_265 := bat.mergecand(C_261,C_263);
    C_267 := algebra.subselect(X_191,X_265,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    C_269 := algebra.subselect(X_184,"Brand#34","Brand#34",true,false,false);
    C_271 := algebra.subselect(X_186,C_269,"LG CASE","LG CASE",true,false,false);
    C_273 := algebra.subselect(X_186,C_269,"LG BOX","LG BOX",true,false,false);
    X_274 := bat.mergecand(C_271,C_273);
    C_276 := algebra.subselect(X_186,C_269,"LG PACK","LG PACK",true,false,false);
    X_277 := bat.mergecand(X_274,C_276);
    C_279 := algebra.subselect(X_186,C_269,"LG PKG","LG PKG",true,false,false);
    X_280 := bat.mergecand(X_277,C_279);
    C_285 := algebra.thetasubselect(X_188,X_280,2000:lng,">=");
    C_291 := algebra.thetasubselect(X_188,C_285,3000:lng,"<=");
    C_295 := algebra.subselect(X_185,C_291,1,15,true,true,false);
    C_298 := algebra.subselect(X_192,C_295,"AIR","AIR",true,false,false);
    C_301 := algebra.subselect(X_192,C_295,"AIR REG","AIR REG",true,false,false);
    X_302 := bat.mergecand(C_298,C_301);
    C_304 := algebra.subselect(X_191,X_302,"DELIVER IN PERSON","DELIVER IN PERSON",true,false,false);
    X_305 := bat.mergecand(C_267,C_304);
    X_306 := bat.mergecand(C_229,X_305);
    X_115:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_313:bat[:lng] := algebra.projectionpath(X_306,X_178,X_170,C_99,X_115);
    X_122:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_314:bat[:lng] := algebra.projectionpath(X_306,X_178,X_170,C_99,X_122);
    X_325:bat[:lng] := batcalc.-(100:lng,X_314);
    X_327:bat[:hge] := batcalc.*(X_313,X_325);
    X_329:hge := aggr.sum(X_327);
    sql.resultSet("sys.L4","revenue","decimal",39,4,10,X_329);
end user.s4_1;
#inline               actions= 0 time=11 usec 
#candidates           actions= 1 time=155 usec 
#remap                actions= 3 time=495 usec 
#costModel            actions= 1 time=183 usec 
#coercions            actions= 0 time=76 usec 
#evaluate             actions=84 time=402 usec 
#emptybind            actions= 0 time=11 usec 
#pushselect           actions= 0 time=10 usec 
#aliases              actions=94 time=196 usec 
#mergetable           actions= 0 time=189 usec 
#deadcode             actions=21 time=172 usec 
#aliases              actions= 0 time=30 usec 
#constants            actions=77 time=239 usec 
#commonTerms          actions= 6 time=227 usec 
#projectionpath       actions=15 time=162 usec 
#reorder              actions= 1 time=230 usec 
#deadcode             actions=21 time=156 usec 
#reduce               actions=255 time=237 usec 
#matpack              actions= 0 time=13 usec 
#querylog             actions= 0 time=1 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=3 usec 
#profiler             actions= 1 time=136 usec 
#garbageCollector     actions= 1 time=153 usec 
#total                actions= 1 time=3625 usec 

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

