stdout of test '01-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "01-explain.SQL.py" "01-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_returnflag,
#	l_linestatus,
#	sum(l_quantity) as sum_qty,
#	sum(l_extendedprice) as sum_base_price,
#	sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
#	sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
#	avg(l_quantity) as avg_qty,
#	avg(l_extendedprice) as avg_price,
#	avg(l_discount) as avg_disc,
#	count(*) as count_order
#from
#	lineitem
#where
#	l_shipdate <= date '1998-12-01' - interval '90' day (3)
#group by
#	l_returnflag,
#	l_linestatus
#order by
#	l_returnflag,
#	l_linestatus;
% .explain # table_name
% mal # name
% clob # type
% 607 # length
function user.s4_1():void;
    X_159:void := querylog.define("explain select\n l_returnflag,\n l_linestatus,\n sum(l_quantity) as sum_qty,\n sum(l_extendedprice) as sum_base_price,\n sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,\n sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,\n avg(l_quantity) as avg_qty,\n avg(l_extendedprice) as avg_price,\n avg(l_discount) as avg_disc,\n count(*) as count_order\nfrom\n lineitem\nwhere\n l_shipdate <= date \\'1998-12-01\\' - interval \\'90\\' day (3)\ngroup by\n l_returnflag,\n l_linestatus\norder by\n l_returnflag,\n l_linestatus;","sequential_pipe",107);
    X_75 := bat.new(nil:oid,nil:str);
    X_83 := bat.append(X_75,"sys.lineitem");
    X_90 := bat.append(X_83,"sys.lineitem");
    X_95 := bat.append(X_90,"sys.L1");
    X_104 := bat.append(X_95,"sys.L2");
    X_111 := bat.append(X_104,"sys.L3");
    X_119 := bat.append(X_111,"sys.L4");
    X_127 := bat.append(X_119,"sys.L5");
    X_136 := bat.append(X_127,"sys.L6");
    X_143 := bat.append(X_136,"sys.L7");
    X_150 := bat.append(X_143,"sys.L10");
    X_78 := bat.new(nil:oid,nil:str);
    X_85 := bat.append(X_78,"l_returnflag");
    X_91 := bat.append(X_85,"l_linestatus");
    X_97 := bat.append(X_91,"sum_qty");
    X_106 := bat.append(X_97,"sum_base_price");
    X_113 := bat.append(X_106,"sum_disc_price");
    X_121 := bat.append(X_113,"sum_charge");
    X_129 := bat.append(X_121,"avg_qty");
    X_138 := bat.append(X_129,"avg_price");
    X_145 := bat.append(X_138,"avg_disc");
    X_152 := bat.append(X_145,"count_order");
    X_79 := bat.new(nil:oid,nil:str);
    X_86 := bat.append(X_79,"char");
    X_92 := bat.append(X_86,"char");
    X_99 := bat.append(X_92,"decimal");
    X_108 := bat.append(X_99,"decimal");
    X_115 := bat.append(X_108,"decimal");
    X_123 := bat.append(X_115,"decimal");
    X_131 := bat.append(X_123,"double");
    X_140 := bat.append(X_131,"double");
    X_147 := bat.append(X_140,"double");
    X_154 := bat.append(X_147,"wrd");
    X_80 := bat.new(nil:oid,nil:int);
    X_88 := bat.append(X_80,1);
    X_93 := bat.append(X_88,1);
    X_101 := bat.append(X_93,39);
    X_109 := bat.append(X_101,39);
    X_116 := bat.append(X_109,39);
    X_124 := bat.append(X_116,39);
    X_133 := bat.append(X_124,53);
    X_141 := bat.append(X_133,53);
    X_148 := bat.append(X_141,53);
    X_156 := bat.append(X_148,64);
    X_82 := bat.new(nil:oid,nil:int);
    X_89 := bat.append(X_82,0);
    X_94 := bat.append(X_89,0);
    X_103 := bat.append(X_94,2);
    X_110 := bat.append(X_103,2);
    X_117 := bat.append(X_110,4);
    X_125 := bat.append(X_117,6);
    X_135 := bat.append(X_125,0);
    X_142 := bat.append(X_135,0);
    X_149 := bat.append(X_142,0);
    X_158 := bat.append(X_149,0);
    X_3 := sql.mvc();
    X_7:bat[:date] := sql.bind(X_3,"sys","lineitem","l_shipdate",0);
    C_4:bat[:oid] := sql.tid(X_3,"sys","lineitem");
    X_12:date := mtime.date_sub_msec_interval("1998-12-01",7776000000);
    C_13 := algebra.thetasubselect(X_7,C_4,X_12,"<=");
    X_15:bat[:str] := sql.bind(X_3,"sys","lineitem","l_linestatus",0);
    X_17 := algebra.projection(C_13,X_15);
    X_18:bat[:str] := sql.bind(X_3,"sys","lineitem","l_returnflag",0);
    X_20 := algebra.projection(C_13,X_18);
    (X_21,r1_41,r2_41) := group.subgroup(X_20);
    (X_24,r1_44,r2_44) := group.subgroupdone(X_17,X_21);
    X_27 := algebra.projection(r1_44,X_17);
    X_28 := algebra.projection(r1_44,X_20);
    X_38:bat[:lng] := sql.bind(X_3,"sys","lineitem","l_quantity",0);
    X_40 := algebra.projection(C_13,X_38);
    X_41:bat[:hge] := aggr.subsum(X_40,X_24,r1_44,true,true);
    X_44:bat[:lng] := sql.bind(X_3,"sys","lineitem","l_extendedprice",0);
    X_46 := algebra.projection(C_13,X_44);
    X_47:bat[:hge] := aggr.subsum(X_46,X_24,r1_44,true,true);
    X_49:bat[:lng] := sql.bind(X_3,"sys","lineitem","l_discount",0);
    X_51 := algebra.projection(C_13,X_49);
    X_52:bat[:lng] := batcalc.-(100:lng,X_51);
    X_53:bat[:hge] := batcalc.*(X_46,X_52);
    X_54:bat[:hge] := aggr.subsum(X_53,X_24,r1_44,true,true);
    X_56:bat[:lng] := sql.bind(X_3,"sys","lineitem","l_tax",0);
    X_58 := algebra.projection(C_13,X_56);
    X_59:bat[:lng] := batcalc.+(100:lng,X_58);
    X_60:bat[:hge] := batcalc.*(X_53,X_59);
    X_61:bat[:hge] := aggr.subsum(X_60,X_24,r1_44,true,true);
    X_63:bat[:dbl] := batcalc.dbl(2,X_40);
    X_64:bat[:dbl] := aggr.subavg(X_63,X_24,r1_44,true,true);
    X_66:bat[:dbl] := batcalc.dbl(2,X_46);
    X_67:bat[:dbl] := aggr.subavg(X_66,X_24,r1_44,true,true);
    X_69:bat[:dbl] := batcalc.dbl(2,X_51);
    X_70:bat[:dbl] := aggr.subavg(X_69,X_24,r1_44,true,true);
    X_72:bat[:wrd] := aggr.subcount(X_24,X_24,r1_44,false);
    (X_29,r1_49,r2_49) := algebra.subsort(X_28,false,false);
    (X_33,r1_54,r2_54) := algebra.subsort(X_27,r1_49,r2_49,false,false);
    X_36 := algebra.projection(r1_54,X_28);
    X_37 := algebra.projection(r1_54,X_27);
    X_43 := algebra.projection(r1_54,X_41);
    X_48 := algebra.projection(r1_54,X_47);
    X_55 := algebra.projection(r1_54,X_54);
    X_62 := algebra.projection(r1_54,X_61);
    X_65 := algebra.projection(r1_54,X_64);
    X_68 := algebra.projection(r1_54,X_67);
    X_71 := algebra.projection(r1_54,X_70);
    X_73 := algebra.projection(r1_54,X_72);
    sql.resultSet(X_150,X_152,X_154,X_156,X_158,X_36,X_37,X_43,X_48,X_55,X_62,X_65,X_68,X_71,X_73);
end user.s4_1;
#inline               actions= 0 time=10 usec 
#candidates           actions= 1 time=105 usec 
#remap                actions=11 time=702 usec 
#costModel            actions= 1 time=230 usec 
#coercions            actions= 0 time=109 usec 
#evaluate             actions= 8 time=290 usec 
#emptybind            actions= 0 time=8 usec 
#pushselect           actions= 8 time=251 usec 
#aliases              actions=22 time=251 usec 
#mergetable           actions= 0 time=254 usec 
#deadcode             actions=16 time=229 usec 
#aliases              actions= 0 time=19 usec 
#constants            actions=22 time=267 usec 
#commonTerms          actions= 2 time=190 usec 
#projectionpath       actions= 0 time=16 usec 
#reorder              actions= 1 time=232 usec 
#deadcode             actions= 2 time=174 usec 
#reduce               actions=103 time=252 usec 
#matpack              actions= 0 time=10 usec 
#querylog             actions= 0 time=2 usec 
#multiplex            actions= 0 time=7 usec 
#generator            actions= 0 time=4 usec 
#profiler             actions= 1 time=171 usec 
#garbageCollector     actions= 1 time=181 usec 
#total                actions= 1 time=4093 usec 

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

