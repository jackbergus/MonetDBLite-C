stdout of test '01-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:25 >  
# 22:53:25 >  "/usr/bin/python2" "01-explain.SQL.py" "01-explain"
# 22:53:25 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_returnflag,
#	l_linestatus,
#	sum(l_quantity) as sum_qty,
#	sum(l_extendedprice) as sum_base_price,
#	sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
#	sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
#	avg(l_quantity) as avg_qty,
#	avg(l_extendedprice) as avg_price,
#	avg(l_discount) as avg_disc,
#	count(*) as count_order
#from
#	lineitem
#where
#	l_shipdate <= date '1998-12-01' - interval '90' day (3)
#group by
#	l_returnflag,
#	l_linestatus
#order by
#	l_returnflag,
#	l_linestatus;
% .explain # table_name
% mal # name
% clob # type
% 602 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:bte,A2:bte,A3:date,A4:lng):void;
    X_121 := bat.new(nil:oid,nil:str);
    X_130 := bat.append(X_121,"sys.lineitem");
    X_140 := bat.append(X_130,"sys.lineitem");
    X_146 := bat.append(X_140,"sys.L1");
    X_155 := bat.append(X_146,"sys.L2");
    X_165 := bat.append(X_155,"sys.L3");
    X_174 := bat.append(X_165,"sys.L4");
    X_183 := bat.append(X_174,"sys.L5");
    X_193 := bat.append(X_183,"sys.L6");
    X_200 := bat.append(X_193,"sys.L7");
    X_207 := bat.append(X_200,"sys.L10");
    X_124 := bat.new(nil:oid,nil:str);
    X_132 := bat.append(X_124,"l_returnflag");
    X_141 := bat.append(X_132,"l_linestatus");
    X_148 := bat.append(X_141,"sum_qty");
    X_157 := bat.append(X_148,"sum_base_price");
    X_167 := bat.append(X_157,"sum_disc_price");
    X_176 := bat.append(X_167,"sum_charge");
    X_185 := bat.append(X_176,"avg_qty");
    X_195 := bat.append(X_185,"avg_price");
    X_202 := bat.append(X_195,"avg_disc");
    X_209 := bat.append(X_202,"count_order");
    X_125 := bat.new(nil:oid,nil:str);
    X_134 := bat.append(X_125,"varchar");
    X_143 := bat.append(X_134,"varchar");
    X_150 := bat.append(X_143,"hugeint");
    X_159 := bat.append(X_150,"decimal");
    X_169 := bat.append(X_159,"decimal");
    X_178 := bat.append(X_169,"decimal");
    X_187 := bat.append(X_178,"double");
    X_197 := bat.append(X_187,"double");
    X_204 := bat.append(X_197,"double");
    X_211 := bat.append(X_204,"wrd");
    X_126 := bat.new(nil:oid,nil:int);
    X_136 := bat.append(X_126,1);
    X_144 := bat.append(X_136,1);
    X_152 := bat.append(X_144,32);
    X_161 := bat.append(X_152,15);
    X_170 := bat.append(X_161,33);
    X_179 := bat.append(X_170,39);
    X_189 := bat.append(X_179,53);
    X_198 := bat.append(X_189,53);
    X_205 := bat.append(X_198,53);
    X_213 := bat.append(X_205,64);
    X_128 := bat.new(nil:oid,nil:int);
    X_138 := bat.append(X_128,0);
    X_145 := bat.append(X_138,0);
    X_154 := bat.append(X_145,0);
    X_163 := bat.append(X_154,2);
    X_172 := bat.append(X_163,4);
    X_181 := bat.append(X_172,6);
    X_191 := bat.append(X_181,0);
    X_199 := bat.append(X_191,0);
    X_206 := bat.append(X_199,0);
    X_215 := bat.append(X_206,0);
    X_7 := sql.mvc();
    X_11:bat[:oid,:date]  := sql.bind(X_7,"sys","lineitem","l_shipdate",0);
    X_8:bat[:oid,:oid]  := sql.tid(X_7,"sys","lineitem");
    X_19 := mtime.date_sub_msec_interval(A3,A4);
    X_235 := algebra.thetasubselect(X_11,X_8,X_19,"<=");
    (X_14,r1_14) := sql.bind(X_7,"sys","lineitem","l_shipdate",2);
    X_236 := algebra.thetasubselect(r1_14,nil:bat[:oid,:oid],X_19,"<=");
    X_17:bat[:oid,:date]  := sql.bind(X_7,"sys","lineitem","l_shipdate",1);
    X_238 := algebra.thetasubselect(X_17,X_8,X_19,"<=");
    X_20 := sql.subdelta(X_235,X_8,X_14,X_236,X_238);
    X_22:bat[:oid,:str]  := sql.bind(X_7,"sys","lineitem","l_linestatus",0);
    (X_24,r1_28) := sql.bind(X_7,"sys","lineitem","l_linestatus",2);
    X_26:bat[:oid,:str]  := sql.bind(X_7,"sys","lineitem","l_linestatus",1);
    X_27 := sql.projectdelta(X_20,X_22,X_24,r1_28,X_26);
    X_28:bat[:oid,:str]  := sql.bind(X_7,"sys","lineitem","l_returnflag",0);
    (X_30,r1_36) := sql.bind(X_7,"sys","lineitem","l_returnflag",2);
    X_32:bat[:oid,:str]  := sql.bind(X_7,"sys","lineitem","l_returnflag",1);
    X_33 := sql.projectdelta(X_20,X_28,X_30,r1_36,X_32);
    (X_34,r1_42,r2_42) := group.subgroup(X_33);
    (X_37,r1_45,r2_45) := group.subgroupdone(X_27,X_34);
    X_40 := algebra.leftfetchjoin(r1_45,X_27);
    X_41 := algebra.leftfetchjoin(r1_45,X_33);
    X_51:bat[:oid,:int]  := sql.bind(X_7,"sys","lineitem","l_quantity",0);
    (X_56,r1_64) := sql.bind(X_7,"sys","lineitem","l_quantity",2);
    X_59:bat[:oid,:int]  := sql.bind(X_7,"sys","lineitem","l_quantity",1);
    X_61 := sql.projectdelta(X_20,X_51,X_56,r1_64,X_59);
    X_62:bat[:oid,:hge]  := aggr.subsum(X_61,X_37,r1_45,true,true);
    X_65:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_extendedprice",0);
    (X_67,r1_77) := sql.bind(X_7,"sys","lineitem","l_extendedprice",2);
    X_69:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_extendedprice",1);
    X_70 := sql.projectdelta(X_20,X_65,X_67,r1_77,X_69);
    X_71:bat[:oid,:hge]  := aggr.subsum(X_70,X_37,r1_45,true,true);
    X_73:bat[:oid,:hge]  := batcalc.hge(2,X_70,33,2);
    X_75 := calc.lng(A0,15,2);
    X_77:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_discount",0);
    (X_82,r1_97) := sql.bind(X_7,"sys","lineitem","l_discount",2);
    X_85:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_discount",1);
    X_87 := sql.projectdelta(X_20,X_77,X_82,r1_97,X_85);
    X_88:bat[:oid,:lng]  := batcalc.-(X_75,X_87);
    X_89:bat[:oid,:hge]  := batcalc.*(X_73,X_88);
    X_90:bat[:oid,:hge]  := aggr.subsum(X_89,X_37,r1_45,true,true);
    X_93 := calc.lng(A1,15,2);
    X_94:bat[:oid,:lng]  := batcalc.-(X_93,X_87);
    X_95:bat[:oid,:hge]  := batcalc.*(X_73,X_94);
    X_96 := calc.lng(A2,15,2);
    X_97:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_tax",0);
    (X_99,r1_121) := sql.bind(X_7,"sys","lineitem","l_tax",2);
    X_101:bat[:oid,:lng]  := sql.bind(X_7,"sys","lineitem","l_tax",1);
    X_102 := sql.projectdelta(X_20,X_97,X_99,r1_121,X_101);
    X_103:bat[:oid,:lng]  := batcalc.+(X_96,X_102);
    X_104:bat[:oid,:hge]  := batcalc.*(X_95,X_103);
    X_105:bat[:oid,:hge]  := aggr.subsum(X_104,X_37,r1_45,true,true);
    X_107 := batcalc.dbl(X_61);
    X_108:bat[:oid,:dbl]  := aggr.subavg(X_107,X_37,r1_45,true,true);
    X_110:bat[:oid,:dbl]  := batcalc.dbl(2,X_70);
    X_112:bat[:oid,:dbl]  := aggr.subavg(X_110,X_37,r1_45,true,true);
    X_114:bat[:oid,:dbl]  := batcalc.dbl(2,X_87);
    X_115:bat[:oid,:dbl]  := aggr.subavg(X_114,X_37,r1_45,true,true);
    X_118:bat[:oid,:wrd]  := aggr.subcount(X_37,X_37,r1_45,false);
    (X_42,r1_50,r2_50) := algebra.subsort(X_41,false,false);
    (X_46,r1_54,r2_54) := algebra.subsort(X_40,r1_50,r2_50,false,false);
    X_49 := algebra.leftfetchjoin(r1_54,X_41);
    X_50 := algebra.leftfetchjoin(r1_54,X_40);
    X_64 := algebra.leftfetchjoin(r1_54,X_62);
    X_72 := algebra.leftfetchjoin(r1_54,X_71);
    X_92 := algebra.leftfetchjoin(r1_54,X_90);
    X_106 := algebra.leftfetchjoin(r1_54,X_105);
    X_109 := algebra.leftfetchjoin(r1_54,X_108);
    X_113 := algebra.leftfetchjoin(r1_54,X_112);
    X_117 := algebra.leftfetchjoin(r1_54,X_115);
    X_120 := algebra.leftfetchjoin(r1_54,X_118);
    sql.resultSet(X_207,X_209,X_211,X_213,X_215,X_49,X_50,X_64,X_72,X_92,X_106,X_109,X_113,X_117,X_120);
end s2_1;
# querylog.define("explain select\n\tl_returnflag,\n\tl_linestatus,\n\tsum(l_quantity) as sum_qty,\n\tsum(l_extendedprice) as sum_base_price,\n\tsum(l_extendedprice * (1 - l_discount)) as sum_disc_price,\n\tsum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,\n\tavg(l_quantity) as avg_qty,\n\tavg(l_extendedprice) as avg_price,\n\tavg(l_discount) as avg_disc,\n\tcount(*) as count_order\nfrom\n\tlineitem\nwhere\n\tl_shipdate <= date \\'1998-12-01\\' - interval \\'90\\' day (3)\ngroup by\n\tl_returnflag,\n\tl_linestatus\norder by\n\tl_returnflag,\n\tl_linestatus;","sequential_pipe")

# 22:53:25 >  
# 22:53:25 >  "Done."
# 22:53:25 >  

