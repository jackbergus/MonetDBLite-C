stdout of test '12-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_shipmode,
#	sum(case
#		when o_orderpriority = '1-URGENT'
#			or o_orderpriority = '2-HIGH'
#			then 1
#		else 0
#	end) as high_line_count,
#	sum(case
#		when o_orderpriority <> '1-URGENT'
#			and o_orderpriority <> '2-HIGH'
#			then 1
#		else 0
#	end) as low_line_count
#from
#	orders,
#	lineitem
#where
#	o_orderkey = l_orderkey
#	and l_shipmode in ('MAIL', 'SHIP')
#	and l_commitdate < l_receiptdate
#	and l_shipdate < l_commitdate
#	and l_receiptdate >= date '1994-01-01'
#	and l_receiptdate < date '1994-01-01' + interval '1' year
% .explain # table_name
% mal # name
% clob # type
% 684 # length
function user.s2_1(A0:str,A1:str,A2:bte,A3:bte,A4:str,A5:str,A6:bte,A7:bte,A8:str,A9:str,A10:date,A11:date,A12:int):void;
    X_161:void := querylog.define("explain select\n l_shipmode,\n sum(case\n when o_orderpriority = \\'1-URGENT\\'\n or o_orderpriority = \\'2-HIGH\\'\n then 1\n else 0\n end) as high_line_count,\n sum(case\n when o_orderpriority <> \\'1-URGENT\\'\n and o_orderpriority <> \\'2-HIGH\\'\n then 1\n else 0\n end) as low_line_count\nfrom\n orders,\n lineitem\nwhere\n o_orderkey = l_orderkey\n and l_shipmode in (\\'MAIL\\', \\'SHIP\\')\n and l_commitdate < l_receiptdate\n and l_shipdate < l_commitdate\n and l_receiptdate >= date \\'1994-01-01\\'\n and l_receiptdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n l_shipmode\norder by\n l_shipmode;","sequential_pipe",93);
    X_128 := bat.new(nil:str);
    X_135 := bat.append(X_128,"sys.lineitem");
    X_145 := bat.append(X_135,"sys.L1");
    X_154 := bat.append(X_145,"sys.L2");
    X_130 := bat.new(nil:str);
    X_137 := bat.append(X_130,"l_shipmode");
    X_147 := bat.append(X_137,"high_line_count");
    X_156 := bat.append(X_147,"low_line_count");
    X_131 := bat.new(nil:str);
    X_139 := bat.append(X_131,"char");
    X_149 := bat.append(X_139,"bigint");
    X_158 := bat.append(X_149,"bigint");
    X_132 := bat.new(nil:int);
    X_141 := bat.append(X_132,10);
    X_151 := bat.append(X_141,64);
    X_159 := bat.append(X_151,64);
    X_134 := bat.new(nil:int);
    X_143 := bat.append(X_134,0);
    X_153 := bat.append(X_143,0);
    X_160 := bat.append(X_153,0);
    X_0 := sql.mvc();
    X_4:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",0);
    X_15:bat[:date] := sql.bind(X_0,"sys","lineitem","l_receiptdate",0);
    X_26:bat[:date] := sql.bind(X_0,"sys","lineitem","l_commitdate",0);
    (C_28:bat[:oid],r1_42:bat[:date]) := sql.bind(X_0,"sys","lineitem","l_commitdate",2);
    X_30:bat[:date] := sql.bind(X_0,"sys","lineitem","l_commitdate",1);
    X_31 := sql.delta(X_26,C_28,r1_42,X_30);
    X_33:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",0);
    (C_35:bat[:oid],r1_49:bat[:date]) := sql.bind(X_0,"sys","lineitem","l_shipdate",2);
    X_37:bat[:date] := sql.bind(X_0,"sys","lineitem","l_shipdate",1);
    X_38 := sql.delta(X_33,C_35,r1_49,X_37);
    X_47:bat[:bit] := batcalc.>(X_31,X_38);
    (C_17:bat[:oid],r1_31:bat[:date]) := sql.bind(X_0,"sys","lineitem","l_receiptdate",2);
    X_19:bat[:date] := sql.bind(X_0,"sys","lineitem","l_receiptdate",1);
    X_20 := sql.delta(X_15,C_17,r1_31,X_19);
    X_40:bat[:bit] := batcalc.<(X_31,X_20);
    C_1:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    C_43 := algebra.subselect(X_40,C_1,true,true,true,true,false);
    C_49 := algebra.subselect(X_47,C_43,true,true,true,true,false);
    X_25:date := mtime.addmonths(A11,A12);
    C_175 := algebra.subselect(X_15,C_49,A10,X_25,true,false,false);
    C_176 := algebra.subselect(r1_31,nil:bat[:oid],A10,X_25,true,false,false);
    C_178 := algebra.subselect(X_19,C_49,A10,X_25,true,false,false);
    C_50 := sql.subdelta(C_175,C_49,C_17,C_176,C_178);
    C_179 := algebra.subselect(X_4,C_50,A8,A8,true,false,false);
    (C_7:bat[:oid],r1_21:bat[:str]) := sql.bind(X_0,"sys","lineitem","l_shipmode",2);
    C_180 := algebra.subselect(r1_21,nil:bat[:oid],A8,A8,true,false,false);
    X_10:bat[:str] := sql.bind(X_0,"sys","lineitem","l_shipmode",1);
    C_182 := algebra.subselect(X_10,C_50,A8,A8,true,false,false);
    C_51 := sql.subdelta(C_179,C_50,C_7,C_180,C_182);
    C_183 := algebra.subselect(X_4,C_50,A9,A9,true,false,false);
    C_184 := algebra.subselect(r1_21,nil:bat[:oid],A9,A9,true,false,false);
    C_186 := algebra.subselect(X_10,C_50,A9,A9,true,false,false);
    C_53 := sql.subdelta(C_183,C_50,C_7,C_184,C_186);
    X_54 := bat.mergecand(C_51,C_53);
    X_55:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_57,r1_71) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_59:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_62 := sql.projectdelta(X_54,X_55,X_57,r1_71,X_59);
    C_63:bat[:oid] := sql.tid(X_0,"sys","orders");
    (X_65,r1_79) := algebra.subjoin(X_62,C_63,nil:BAT,nil:BAT,false,nil:lng);
    X_70 := sql.projectdelta(X_54,X_4,C_7,r1_21,X_10);
    X_71 := algebra.projection(X_65,X_70);
    (X_72,r1_86,r2_86) := group.subgroupdone(X_71);
    X_75 := algebra.projection(r1_86,X_71);
    X_83:bat[:str] := sql.bind(X_0,"sys","orders","o_orderpriority",0);
    (C_85:bat[:oid],r1_99:bat[:str]) := sql.bind(X_0,"sys","orders","o_orderpriority",2);
    X_87:bat[:str] := sql.bind(X_0,"sys","orders","o_orderpriority",1);
    X_89 := sql.projectdelta(C_63,X_83,C_85,r1_99,X_87);
    X_90 := algebra.projection(r1_79,X_89);
    X_92:bat[:bit] := batcalc.==(X_90,A0);
    X_96:bat[:bit] := batcalc.==(X_90,A1);
    X_97:bat[:bit] := batcalc.or(X_92,X_96);
    X_99:bat[:bit] := batcalc.isnil(X_97);
    X_102:bat[:bit] := batcalc.ifthenelse(X_99,false,X_97);
    X_106:bat[:bte] := batcalc.ifthenelse(X_102,A2,A3);
    X_107:bat[:lng] := aggr.subsum(X_106,X_72,r1_86,true,true);
    X_112:bat[:bit] := batcalc.!=(X_90,A4);
    X_115:bat[:bit] := batcalc.!=(X_90,A5);
    X_116:bat[:bit] := batcalc.and(X_112,X_115);
    X_118:bat[:bit] := batcalc.isnil(X_116);
    X_121:bat[:bit] := batcalc.ifthenelse(X_118,false,X_116);
    X_124:bat[:bte] := batcalc.ifthenelse(X_121,A6,A7);
    X_125:bat[:lng] := aggr.subsum(X_124,X_72,r1_86,true,true);
    X_76 := bat.setKey(X_75,true);
    (X_77,r1_91,r2_91) := algebra.subsort(X_76,false,false);
    X_82 := algebra.projection(r1_91,X_76);
    X_110 := algebra.projection(r1_91,X_107);
    X_126 := algebra.projection(r1_91,X_125);
    sql.resultSet(X_154,X_156,X_158,X_159,X_160,X_82,X_110,X_126);
end user.s2_1;

# 22:53:28 >  
# 22:53:28 >  "Done."
# 22:53:28 >  

