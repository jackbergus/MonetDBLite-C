stdout of test '07-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "07-explain.SQL.py" "07-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	supp_nation,
#	cust_nation,
#	l_year,
#	sum(volume) as revenue
#from
#	(
#		select
#			n1.n_name as supp_nation,
#			n2.n_name as cust_nation,
#			extract(year from l_shipdate) as l_year,
#			l_extendedprice * (1 - l_discount) as volume
#		from
#			supplier,
#			lineitem,
#			orders,
#			customer,
#			nation n1,
#			nation n2
#		where
#			s_suppkey = l_suppkey
#			and o_orderkey = l_orderkey
#			and c_custkey = o_custkey
#			and s_nationkey = n1.n_nationkey
#			and c_nationkey = n2.n_nationkey
#			and (
#				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
% .explain # table_name
% mal # name
% clob # type
% 988 # length
function user.s2_1(A0:bte,A1:str,A2:str,A3:str,A4:str,A5:date,A6:date):void;
    X_199:void := querylog.define("explain select\n\tsupp_nation,\n\tcust_nation,\n\tl_year,\n\tsum(volume) as revenue\nfrom\n\t(\n\t\tselect\n\t\t\tn1.n_name as supp_nation,\n\t\t\tn2.n_name as cust_nation,\n\t\t\textract(year from l_shipdate) as l_year,\n\t\t\tl_extendedprice * (1 - l_discount) as volume\n\t\tfrom\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\torders,\n\t\t\tcustomer,\n\t\t\tnation n1,\n\t\t\tnation n2\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand c_custkey = o_custkey\n\t\t\tand s_nationkey = n1.n_nationkey\n\t\t\tand c_nationkey = n2.n_nationkey\n\t\t\tand (\n\t\t\t\t(n1.n_name = \\'FRANCE\\' and n2.n_name = \\'GERMANY\\')\n\t\t\t\tor (n1.n_name = \\'GERMANY\\' and n2.n_name = \\'FRANCE\\')\n\t\t\t)\n\t\t\tand l_shipdate between date \\'1995-01-01\\' and date \\'1996-12-31\\'\n\t) as shipping\ngroup by\n\tsupp_nation,\n\tcust_nation,\n\tl_year\norder by\n\tsupp_nation,\n\tcust_nation,\n\tl_year;","sequential_pipe",127);
    X_158 := bat.new(nil:oid,nil:str);
    X_166 := bat.append(X_158,"sys.shipping");
    X_175 := bat.append(X_166,"sys.shipping");
    X_181 := bat.append(X_175,"sys.shipping");
    X_189 := bat.append(X_181,"sys.L1");
    X_161 := bat.new(nil:oid,nil:str);
    X_168 := bat.append(X_161,"supp_nation");
    X_176 := bat.append(X_168,"cust_nation");
    X_182 := bat.append(X_176,"l_year");
    X_191 := bat.append(X_182,"revenue");
    X_162 := bat.new(nil:oid,nil:str);
    X_170 := bat.append(X_162,"char");
    X_178 := bat.append(X_170,"char");
    X_184 := bat.append(X_178,"int");
    X_193 := bat.append(X_184,"decimal");
    X_163 := bat.new(nil:oid,nil:int);
    X_172 := bat.append(X_163,25);
    X_179 := bat.append(X_172,25);
    X_186 := bat.append(X_179,32);
    X_195 := bat.append(X_186,19);
    X_165 := bat.new(nil:oid,nil:int);
    X_174 := bat.append(X_165,0);
    X_180 := bat.append(X_174,0);
    X_188 := bat.append(X_180,0);
    X_197 := bat.append(X_188,4);
    X_9 := sql.mvc();
    C_10:bat[:oid,:oid] := sql.tid(X_9,"sys","supplier");
    X_13:bat[:oid,:int]  := sql.bind(X_9,"sys","supplier","s_suppkey",0);
    (C_16,r1_16) := sql.bind(X_9,"sys","supplier","s_suppkey",2);
    X_19:bat[:oid,:int]  := sql.bind(X_9,"sys","supplier","s_suppkey",1);
    X_21 := sql.delta(X_13,C_16,r1_16,X_19);
    X_22 := algebra.projection(C_10,X_21);
    C_23:bat[:oid,:oid] := sql.tid(X_9,"sys","lineitem");
    X_25:bat[:oid,:date]  := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    (C_27,r1_27) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    X_29:bat[:oid,:date]  := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    X_30 := sql.delta(X_25,C_27,r1_27,X_29);
    X_31 := algebra.projection(C_23,X_30);
    C_32 := algebra.subselect(X_31,A5,A6,true,true,false);
    X_34:bat[:oid,:int]  := sql.bind(X_9,"sys","lineitem","l_suppkey",0);
    (C_36,r1_38) := sql.bind(X_9,"sys","lineitem","l_suppkey",2);
    X_38:bat[:oid,:int]  := sql.bind(X_9,"sys","lineitem","l_suppkey",1);
    X_39 := sql.delta(X_34,C_36,r1_38,X_38);
    X_40:bat[:oid,:int] := algebra.projectionPath(C_32,C_23,X_39);
    (X_41,r1_44) := algebra.subjoin(X_22,X_40,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_47,r1_51) := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_49:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_50 := sql.delta(X_45,X_47,r1_51,X_49);
    X_51:bat[:oid,:oid] := algebra.projectionPath(r1_44,C_32,C_23,X_50);
    C_52:bat[:oid,:oid] := sql.tid(X_9,"sys","orders");
    (X_54,r1_60) := algebra.subjoin(X_51,C_52,nil:BAT,nil:BAT,false,nil:lng);
    X_56:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_58,r1_64) := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_60:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_61 := sql.delta(X_56,X_58,r1_64,X_60);
    X_62:bat[:oid,:oid] := algebra.projectionPath(X_54,X_41,C_10,X_61);
    C_63:bat[:oid,:oid] := sql.tid(X_9,"sys","nation");
    X_65:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",0);
    (C_67,r1_75) := sql.bind(X_9,"sys","nation","n_name",2);
    X_69:bat[:oid,:str] := sql.bind(X_9,"sys","nation","n_name",1);
    X_70 := sql.delta(X_65,C_67,r1_75,X_69);
    X_71 := algebra.projection(C_63,X_70);
    C_72 := algebra.subselect(X_71,A1,A1,true,false,false);
    C_73 := algebra.subselect(X_71,A3,A3,true,false,false);
    X_74 := bat.mergecand(C_72,C_73);
    X_75 := algebra.projection(X_74,C_63);
    (X_76,r1_89) := algebra.subjoin(X_62,X_75,nil:BAT,nil:BAT,false,nil:lng);
    X_78:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",0);
    (X_80,r1_96) := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",2);
    X_82:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","orders","orders_o_custkey_fkey",1);
    X_83 := sql.delta(X_78,X_80,r1_96,X_82);
    X_84:bat[:oid,:oid] := algebra.projectionPath(X_76,r1_60,C_52,X_83);
    C_85:bat[:oid,:oid] := sql.tid(X_9,"sys","customer");
    (X_87,r1_105) := algebra.subjoin(X_84,C_85,nil:BAT,nil:BAT,false,nil:lng);
    X_89:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",0);
    (X_91,r1_109) := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",2);
    X_93:bat[:oid,:oid] := sql.bind_idxbat(X_9,"sys","customer","customer_c_nationkey_fkey",1);
    X_94 := sql.delta(X_89,X_91,r1_109,X_93);
    X_95:bat[:oid,:oid] := algebra.projectionPath(r1_105,C_85,X_94);
    C_96 := algebra.subselect(X_71,A2,A2,true,false,false);
    C_97 := algebra.subselect(X_71,A4,A4,true,false,false);
    X_98 := bat.mergecand(C_96,C_97);
    X_99 := algebra.projection(X_98,C_63);
    (X_100,r1_132) := algebra.subjoin(X_95,X_99,nil:BAT,nil:BAT,false,nil:lng);
    X_102:bat[:oid,:str] := algebra.projectionPath(r1_132,X_98,X_71);
    X_103:bat[:oid,:str] := algebra.projectionPath(X_100,X_87,r1_89,X_74,X_71);
    C_104 := algebra.subselect(X_103,A1,A1,true,false,false);
    C_105 := algebra.subselect(X_102,C_104,A2,A2,true,false,false);
    C_106 := algebra.subselect(X_103,A3,A3,true,false,false);
    C_107 := algebra.subselect(X_102,C_106,A4,A4,true,false,false);
    X_108 := bat.mergecand(C_105,C_107);
    X_109:bat[:oid,:date] := algebra.projectionPath(X_108,X_100,X_87,X_76,X_54,r1_44,C_32,X_31);
    X_110:bat[:oid,:int] := batmtime.year(X_109);
    X_111 := algebra.projection(X_108,X_102);
    X_112 := algebra.projection(X_108,X_103);
    (X_113,r1_164,r2_164) := group.subgroup(X_112);
    (X_116,r1_167,r2_167) := group.subgroup(X_111,X_113);
    (X_119,r1_170,r2_170) := group.subgroupdone(X_110,X_116);
    X_122 := algebra.projection(r1_170,X_110);
    X_123 := algebra.projection(r1_170,X_111);
    X_124 := algebra.projection(r1_170,X_112);
    X_137:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (C_139,r1_192) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_141:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_142 := sql.delta(X_137,C_139,r1_192,X_141);
    X_143:bat[:oid,:lng] := algebra.projectionPath(X_108,X_100,X_87,X_76,X_54,r1_44,C_32,C_23,X_142);
    X_144 := calc.lng(A0,15,2);
    X_146:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (C_148,r1_210) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_150:bat[:oid,:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_151 := sql.delta(X_146,C_148,r1_210,X_150);
    X_152:bat[:oid,:lng] := algebra.projectionPath(X_108,X_100,X_87,X_76,X_54,r1_44,C_32,C_23,X_151);
    X_153:bat[:oid,:lng] := batcalc.-(X_144,X_152);
    X_154:bat[:oid,:lng] := batcalc.*(X_143,X_153);
    X_155:bat[:oid,:lng] := aggr.subsum(X_154,X_119,r1_170,true,true);
    (X_125,r1_176,r2_176) := algebra.subsort(X_124,false,false);
    (X_128,r1_181,r2_181) := algebra.subsort(X_123,r1_176,r2_176,false,false);
    (X_131,r1_184,r2_184) := algebra.subsort(X_122,r1_181,r2_181,false,false);
    X_134 := algebra.projection(r1_184,X_124);
    X_135 := algebra.projection(r1_184,X_123);
    X_136 := algebra.projection(r1_184,X_122);
    X_156 := algebra.projection(r1_184,X_155);
    sql.resultSet(X_189,X_191,X_193,X_195,X_197,X_134,X_135,X_136,X_156);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

