stdout of test '04-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:25 >  
# 22:53:25 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:25 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "04-explain.SQL.py" "04-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	o_orderpriority,
#	count(*) as order_count
#from
#	orders
#where
#	o_orderdate >= date '1993-07-01'
#	and o_orderdate < date '1993-07-01' + interval '3' month
#	and exists (
#		select
#			*
#		from
#			lineitem
#		where
#			l_orderkey = o_orderkey
#			and l_commitdate < l_receiptdate
#	)
#group by
#	o_orderpriority
#order by
#	o_orderpriority;
% .explain # table_name
% mal # name
% clob # type
% 74 # length
function user.s0_1{autoCommit=true}(A0:date,A1:date,A2:int):void;
    X_5 := sql.mvc();
    X_6:bat[:oid,:oid]  := sql.tid(X_5,"sys","orders");
    X_9 := sql.bind(X_5,"sys","orders","o_orderdate",0);
    (X_12,r1_12) := sql.bind(X_5,"sys","orders","o_orderdate",2);
    X_15 := sql.bind(X_5,"sys","orders","o_orderdate",1);
    X_17 := sql.delta(X_9,X_12,r1_12,X_15);
    X_18 := algebra.leftfetchjoin(X_6,X_17);
    X_19 := mtime.addmonths(A1,A2);
    X_20 := algebra.subselect(X_18,A0,X_19,true,false,false);
    X_115 := algebra.leftfetchjoin(X_20,X_6);
    X_22 := sql.bind(X_5,"sys","orders","o_orderkey",0);
    (X_24,r1_27) := sql.bind(X_5,"sys","orders","o_orderkey",2);
    X_26 := sql.bind(X_5,"sys","orders","o_orderkey",1);
    X_27 := sql.delta(X_22,X_24,r1_27,X_26);
    X_28:bat[:oid,:int]  := algebra.leftfetchjoin(X_115,X_27);
    X_29 := bat.mirror(X_28);
    X_30:bat[:oid,:oid]  := sql.tid(X_5,"sys","lineitem");
    X_32 := sql.bind(X_5,"sys","lineitem","l_commitdate",0);
    (X_34,r1_38) := sql.bind(X_5,"sys","lineitem","l_commitdate",2);
    X_37 := sql.bind(X_5,"sys","lineitem","l_commitdate",1);
    X_38 := sql.delta(X_32,X_34,r1_38,X_37);
    X_39 := algebra.leftfetchjoin(X_30,X_38);
    X_40 := sql.bind(X_5,"sys","lineitem","l_receiptdate",0);
    (X_43,r1_47) := sql.bind(X_5,"sys","lineitem","l_receiptdate",2);
    X_46 := sql.bind(X_5,"sys","lineitem","l_receiptdate",1);
    X_48 := sql.delta(X_40,X_43,r1_47,X_46);
    X_49 := algebra.leftfetchjoin(X_30,X_48);
    X_50:bat[:oid,:bit]  := batcalc.<(X_39,X_49);
    X_51 := algebra.subselect(X_50,true,true,true,true,false);
    X_54 := sql.bind(X_5,"sys","lineitem","l_orderkey",0);
    (X_56,r1_62) := sql.bind(X_5,"sys","lineitem","l_orderkey",2);
    X_58 := sql.bind(X_5,"sys","lineitem","l_orderkey",1);
    X_59 := sql.delta(X_54,X_56,r1_62,X_58);
    X_60:bat[:oid,:int]  := algebra.leftfetchjoinPath(X_51,X_30,X_59);
    (X_61,r1_68) := algebra.join(X_28,X_60);
    X_63 := algebra.tinter(X_29,X_61);
    X_64 := sql.bind(X_5,"sys","orders","o_orderpriority",0);
    (X_67,r1_74) := sql.bind(X_5,"sys","orders","o_orderpriority",2);
    X_70 := sql.bind(X_5,"sys","orders","o_orderpriority",1);
    X_71 := sql.delta(X_64,X_67,r1_74,X_70);
    X_72:bat[:oid,:str]  := algebra.leftfetchjoinPath(X_63,X_115,X_71);
    (X_73,r1_82,r2_82) := group.subgroupdone(X_72);
    X_76 := algebra.leftfetchjoin(r1_82,X_72);
    X_81:bat[:oid,:wrd]  := aggr.subcount(X_73,X_73,r1_82,false);
    (X_77,r1_86,r2_86) := algebra.subsort(X_76,false,false);
    X_80 := algebra.leftfetchjoin(r1_86,X_76);
    X_82 := algebra.leftfetchjoin(r1_86,X_81);
    X_83 := sql.resultSet(2,1,X_80);
    sql.rsColumn(X_83,"sys.orders","o_orderpriority","varchar",15,0,X_80);
    sql.rsColumn(X_83,"sys.L1","order_count","wrd",32,0,X_82);
    X_96 := io.stdout();
    sql.exportResult(X_96,X_83);
end s0_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

