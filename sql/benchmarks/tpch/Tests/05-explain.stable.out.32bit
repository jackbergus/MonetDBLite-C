stdout of test '05-explain` in directory 'sql/benchmarks/tpch` itself:


# 15:45:51 >  
# 15:45:51 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32235" "--set" "mapi_usock=/var/tmp/mtest-5512/.s.monetdb.32235" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-stable/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 15:45:51 >  

# MonetDB 5 server v11.19.10 (hg id: 476a699b2b1e+)
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:32235/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-5512/.s.monetdb.32235
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 09:52:37 >  
# 09:52:37 >  "/usr/bin/python2" "05-explain.SQL.py" "05-explain"
# 09:52:37 >  

#set optimizer = 'sequential_pipe';
#explain select
#	n_name,
#	sum(l_extendedprice * (1 - l_discount)) as revenue
#from
#	customer,
#	orders,
#	lineitem,
#	supplier,
#	nation,
#	region
#where
#	c_custkey = o_custkey
#	and l_orderkey = o_orderkey
#	and l_suppkey = s_suppkey
#	and c_nationkey = s_nationkey
#	and s_nationkey = n_nationkey
#	and n_regionkey = r_regionkey
#	and r_name = 'ASIA'
#	and o_orderdate >= date '1994-01-01'
#	and o_orderdate < date '1994-01-01' + interval '1' year
#group by
#	n_name
#order by
#	revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 572 # length
function user.s4_1():void;
    X_237:void := querylog.define("explain select\n n_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n customer,\n orders,\n lineitem,\n supplier,\n nation,\n region\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and l_suppkey = s_suppkey\n and c_nationkey = s_nationkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'ASIA\\'\n and o_orderdate >= date \\'1994-01-01\\'\n and o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n n_name\norder by\n revenue desc;","sequential_pipe",93);
    X_210 := bat.new(nil:str);
    X_217 := bat.append(X_210,"sys.nation");
    X_227 := bat.append(X_217,"sys.L1");
    X_212 := bat.new(nil:str);
    X_219 := bat.append(X_212,"n_name");
    X_229 := bat.append(X_219,"revenue");
    X_213 := bat.new(nil:str);
    X_221 := bat.append(X_213,"char");
    X_231 := bat.append(X_221,"decimal");
    X_214 := bat.new(nil:int);
    X_223 := bat.append(X_214,25);
    X_233 := bat.append(X_223,19);
    X_216 := bat.new(nil:int);
    X_225 := bat.append(X_216,0);
    X_235 := bat.append(X_225,4);
    X_0 := sql.mvc();
    X_4:bat[:date] := sql.bind(X_0,"sys","orders","o_orderdate",0);
    C_1:bat[:oid] := sql.tid(X_0,"sys","orders");
    X_17:date := mtime.addmonths("1994-01-01",12);
    C_18 := algebra.subselect(X_4,C_1,"1994-01-01",X_17,true,false,false);
    X_22:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",0);
    (X_24,r1_30) := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",2);
    X_26:bat[:oid] := sql.bind_idxbat(X_0,"sys","orders","orders_o_custkey_fkey",1);
    X_29 := sql.projectdelta(C_18,X_22,X_24,r1_30,X_26);
    C_30:bat[:oid] := sql.tid(X_0,"sys","customer");
    (X_32,r1_38) := algebra.subjoin(X_29,C_30,nil:BAT,nil:BAT,false,nil:lng);
    X_38 := algebra.projection(X_32,C_18);
    C_39:bat[:oid] := sql.tid(X_0,"sys","lineitem");
    X_41:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_43,r1_49) := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_45:bat[:oid] := sql.bind_idxbat(X_0,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_47 := sql.projectdelta(C_39,X_41,X_43,r1_49,X_45);
    (X_48,r1_54) := algebra.subjoin(X_38,X_47,nil:BAT,nil:BAT,false,nil:lng);
    X_50:bat[:int] := sql.bind(X_0,"sys","lineitem","l_suppkey",0);
    X_57:bat[:int] := algebra.projectionpath(r1_54,C_39,X_50);
    X_58:bat[:lng] := batmkey.hash(X_57);
    X_63:bat[:int] := sql.bind(X_0,"sys","customer","c_nationkey",0);
    X_71:bat[:int] := algebra.projectionpath(X_48,r1_38,C_30,X_63);
    X_72:bat[:lng] := mkey.bulk_rotate_xor_hash(X_58,11,X_71);
    C_73:bat[:oid] := sql.tid(X_0,"sys","supplier");
    X_75:bat[:int] := sql.bind(X_0,"sys","supplier","s_suppkey",0);
    X_81 := algebra.projection(C_73,X_75);
    X_82:bat[:lng] := batmkey.hash(X_81);
    X_84:bat[:int] := sql.bind(X_0,"sys","supplier","s_nationkey",0);
    X_90 := algebra.projection(C_73,X_84);
    X_91:bat[:lng] := mkey.bulk_rotate_xor_hash(X_82,11,X_90);
    (X_92,r1_98) := algebra.subjoin(X_72,X_91,nil:BAT,nil:BAT,false,nil:lng);
    X_98 := algebra.projection(X_92,X_57);
    X_99 := algebra.projection(r1_98,X_81);
    X_100:bat[:bit] := batcalc.==(X_98,X_99);
    C_105 := algebra.subselect(X_100,true,true,true,false,false);
    X_106 := algebra.projection(C_105,X_92);
    X_107 := algebra.projection(X_106,X_71);
    X_108 := algebra.projection(C_105,r1_98);
    X_109 := algebra.projection(X_108,X_90);
    X_110:bat[:bit] := batcalc.==(X_107,X_109);
    C_112 := algebra.subselect(X_110,true,true,true,false,false);
    X_114:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_116,r1_122) := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_118:bat[:oid] := sql.bind_idxbat(X_0,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_120 := sql.projectdelta(C_73,X_114,X_116,r1_122,X_118);
    X_121:bat[:oid] := algebra.projectionpath(C_112,X_108,X_120);
    C_122:bat[:oid] := sql.tid(X_0,"sys","nation");
    (X_124,r1_130) := algebra.subjoin(X_121,C_122,nil:BAT,nil:BAT,false,nil:lng);
    X_126:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",0);
    (X_128,r1_134) := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",2);
    X_130:bat[:oid] := sql.bind_idxbat(X_0,"sys","nation","nation_n_regionkey_fkey",1);
    X_132 := sql.projectdelta(C_122,X_126,X_128,r1_134,X_130);
    X_133 := algebra.projection(r1_130,X_132);
    X_136:bat[:str] := sql.bind(X_0,"sys","region","r_name",0);
    C_134:bat[:oid] := sql.tid(X_0,"sys","region");
    C_144 := algebra.subselect(X_136,C_134,"ASIA","ASIA",true,false,false);
    (X_149,r1_155) := algebra.subjoin(X_133,C_144,nil:BAT,nil:BAT,false,nil:lng);
    X_154 := algebra.projection(C_112,X_106);
    X_155:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_extendedprice",0);
    X_165:bat[:lng] := algebra.projectionpath(X_149,X_124,X_154,r1_54,C_39,X_155);
    X_170:bat[:lng] := sql.bind(X_0,"sys","lineitem","l_discount",0);
    X_180:bat[:lng] := algebra.projectionpath(X_149,X_124,X_154,r1_54,C_39,X_170);
    X_181:bat[:lng] := batcalc.-(100:lng,X_180);
    X_184:bat[:lng] := batcalc.*(X_165,X_181);
    X_186:bat[:str] := sql.bind(X_0,"sys","nation","n_name",0);
    X_194:bat[:str] := algebra.projectionpath(X_149,r1_130,C_122,X_186);
    (X_195,r1_201,r2_201) := group.subgroupdone(X_194);
    X_198:bat[:lng] := aggr.subsum(X_184,X_195,r1_201,true,true);
    X_205 := algebra.projection(r1_201,X_194);
    (X_201,r1_207,r2_207) := algebra.subsort(X_198,true,false);
    X_206 := bat.setKey(X_205,true);
    X_207 := algebra.projection(r1_207,X_206);
    X_208 := algebra.projection(r1_207,X_198);
    sql.resultSet(X_227,X_229,X_231,X_233,X_235,X_207,X_208);
end user.s4_1;
#inline               actions= 0 time=4 usec 
#remap                actions= 6 time=87 usec 
#costmodel            actions= 1 time=4 usec 
#coercion             actions= 4 time=23 usec 
#evaluate             actions= 6 time=52 usec 
#emptybind            actions=27 time=67 usec 
#pushselect           actions=11 time=57 usec 
#aliases              actions=20 time=23 usec 
#mergetable           actions= 0 time=101 usec 
#deadcode             actions=31 time=34 usec 
#aliases              actions= 0 time=14 usec 
#constants            actions=32 time=39 usec 
#commonTerms          actions= 0 time=15 usec 
#projectionpath       actions=14 time=33 usec 
#reorder              actions= 1 time=65 usec 
#deadcode             actions=14 time=15 usec 
#reduce               actions=142 time=28 usec 
#matpack              actions= 0 time=4 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=8 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=34 usec 
#total                actions= 1 time=909 usec 

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

