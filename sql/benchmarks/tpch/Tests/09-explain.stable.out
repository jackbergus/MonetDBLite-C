stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 718 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_4 := sql.mvc();
    X_8:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",0);
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_241 := algebra.likesubselect(X_8,X_5,A1,"",false);
    (X_11,r1_11) := sql.bind(X_4,"sys","part","p_name",2);
    X_242 := algebra.likesubselect(r1_11,A1,"",false);
    X_14:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",1);
    X_243 := algebra.likesubselect(X_14,X_5,A1,"",false);
    X_17 := sql.subdelta(X_241,X_5,X_11,X_242,X_243);
    X_19:bat[:oid,:int]  := sql.bind(X_4,"sys","part","p_partkey",0);
    (X_21,r1_25) := sql.bind(X_4,"sys","part","p_partkey",2);
    X_23:bat[:oid,:int]  := sql.bind(X_4,"sys","part","p_partkey",1);
    X_24 := sql.projectdelta(X_17,X_19,X_21,r1_25,X_23);
    X_25:bat[:oid,:oid]  := sql.tid(X_4,"sys","lineitem");
    X_27:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_partkey",0);
    (X_29,r1_35) := sql.bind(X_4,"sys","lineitem","l_partkey",2);
    X_31:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_partkey",1);
    X_32 := sql.projectdelta(X_25,X_27,X_29,r1_35,X_31);
    (X_33,r1_40) := algebra.join(X_24,X_32);
    X_35:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    (X_39,r1_46) := sql.bind(X_4,"sys","lineitem","l_suppkey",2);
    X_42:bat[:oid,:int]  := sql.bind(X_4,"sys","lineitem","l_suppkey",1);
    X_44 := sql.projectdelta(X_25,X_35,X_39,r1_46,X_42);
    X_45 := algebra.leftfetchjoin(r1_40,X_44);
    X_46:bat[:oid,:oid]  := sql.tid(X_4,"sys","supplier");
    X_48:bat[:oid,:int]  := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    (X_50,r1_58) := sql.bind(X_4,"sys","supplier","s_suppkey",2);
    X_52:bat[:oid,:int]  := sql.bind(X_4,"sys","supplier","s_suppkey",1);
    X_53 := sql.projectdelta(X_46,X_48,X_50,r1_58,X_52);
    (X_54,r1_63) := algebra.join(X_45,X_53);
    X_244 := algebra.leftfetchjoin(X_54,r1_40);
    X_56:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_59,r1_68) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_61:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_62 := sql.projectdelta(X_25,X_56,X_59,r1_68,X_61);
    X_63:bat[:oid,:oid]  := algebra.leftfetchjoin(X_244,X_62);
    X_64:bat[:oid,:oid]  := sql.tid(X_4,"sys","partsupp");
    (X_67,r1_78) := algebra.join(X_63,X_64);
    X_245 := algebra.leftfetchjoin(X_67,X_54);
    X_69:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_72,r1_83) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_75:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_77 := sql.projectdelta(X_25,X_69,X_72,r1_83,X_75);
    X_78:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_245,r1_40,X_77);
    X_79:bat[:oid,:oid]  := sql.tid(X_4,"sys","orders");
    (X_81,r1_95) := algebra.join(X_78,X_79);
    X_246 := algebra.leftfetchjoin(X_81,X_67);
    X_83:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_86,r1_100) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_88:bat[:oid,:oid]  := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_89 := sql.projectdelta(X_46,X_83,X_86,r1_100,X_88);
    X_90:bat[:oid,:oid]  := algebra.leftfetchjoinPath(X_246,r1_63,X_89);
    X_91:bat[:oid,:oid]  := sql.tid(X_4,"sys","nation");
    (X_94,r1_111) := algebra.join(X_90,X_91);
    X_96:bat[:oid,:date]  := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_99,r1_116) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_102:bat[:oid,:date]  := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_104 := sql.projectdelta(X_79,X_96,X_99,r1_116,X_102);
    X_105:bat[:oid,:date]  := algebra.leftfetchjoinPath(X_94,r1_95,X_104);
    X_106:bat[:oid,:int]  := batmtime.year(X_105);
    X_107:bat[:oid,:str]  := sql.bind(X_4,"sys","nation","n_name",0);
    (X_109,r1_130) := sql.bind(X_4,"sys","nation","n_name",2);
    X_111:bat[:oid,:str]  := sql.bind(X_4,"sys","nation","n_name",1);
    X_112 := sql.projectdelta(X_91,X_107,X_109,r1_130,X_111);
    X_113 := algebra.leftfetchjoin(r1_111,X_112);
    (X_114,r1_136,r2_136) := group.subgroup(X_113);
    (X_117,r1_139,r2_139) := group.subgroupdone(X_106,X_114);
    X_120 := algebra.leftfetchjoin(r1_139,X_106);
    X_121 := algebra.leftfetchjoin(r1_139,X_113);
    X_247 := algebra.leftfetchjoin(X_94,X_81);
    X_132:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_137,r1_159) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_140:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_142 := sql.projectdelta(X_25,X_132,X_137,r1_159,X_140);
    X_143:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_247,X_67,X_54,r1_40,X_142);
    X_144 := calc.lng(A0,15,2);
    X_146:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_148,r1_176) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_150:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_151 := sql.projectdelta(X_25,X_146,X_148,r1_176,X_150);
    X_152:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_247,X_67,X_54,r1_40,X_151);
    X_153:bat[:oid,:lng]  := batcalc.-(X_144,X_152);
    X_154:bat[:oid,:lng]  := batcalc.*(X_143,X_153);
    X_155:bat[:oid,:lng]  := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_160,r1_196) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_163:bat[:oid,:lng]  := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_165 := sql.projectdelta(X_64,X_155,X_160,r1_196,X_163);
    X_166:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_247,r1_78,X_165);
    X_167:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_170,r1_209) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_172:bat[:oid,:lng]  := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_173 := sql.projectdelta(X_25,X_167,X_170,r1_209,X_172);
    X_174:bat[:oid,:lng]  := algebra.leftfetchjoinPath(X_247,X_67,X_54,r1_40,X_173);
    X_175:bat[:oid,:lng]  := batcalc.*(X_166,X_174);
    X_176:bat[:oid,:lng]  := batcalc.-(X_154,X_175);
    X_177:bat[:oid,:lng]  := aggr.subsum(X_176,X_117,r1_139,true,true);
    (X_122,r1_144,r2_144) := algebra.subsort(X_121,false,false);
    (X_126,r1_148,r2_148) := algebra.subsort(X_120,r1_144,r2_144,true,false);
    X_130 := algebra.leftfetchjoin(r1_148,X_121);
    X_179 := algebra.leftfetchjoin(r1_148,X_177);
    X_131 := algebra.leftfetchjoin(r1_148,X_120);
    X_180 := sql.resultSet(3,1,X_130);
    sql.rsColumn(X_180,"sys.profit","nation","char",25,0,X_130);
    sql.rsColumn(X_180,"sys.profit","o_year","int",32,0,X_131);
    sql.rsColumn(X_180,"sys.L1","sum_profit","decimal",19,4,X_179);
    X_198 := io.stdout();
    sql.exportResult(X_198,X_180);
end s2_1;
# querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe")

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

