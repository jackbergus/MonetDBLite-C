stdout of test '09-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:27 >  
# 22:53:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:27 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:27 >  
# 22:53:27 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 22:53:27 >  

#set optimizer = 'sequential_pipe';
#explain select
#	nation,
#	o_year,
#	sum(amount) as sum_profit
#from
#	(
#		select
#			n_name as nation,
#			extract(year from o_orderdate) as o_year,
#			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
#		from
#			part,
#			supplier,
#			lineitem,
#			partsupp,
#			orders,
#			nation
#		where
#			s_suppkey = l_suppkey
#			and ps_suppkey = l_suppkey
#			and ps_partkey = l_partkey
#			and p_partkey = l_partkey
#			and o_orderkey = l_orderkey
#			and s_nationkey = n_nationkey
#			and p_name like '%green%'
#	) as profit
% .explain # table_name
% mal # name
% clob # type
% 739 # length
function user.s2_1{autoCommit=true}(A0:bte,A1:str):void;
    X_208:void := querylog.define("explain select\n\tnation,\n\to_year,\n\tsum(amount) as sum_profit\nfrom\n\t(\n\t\tselect\n\t\t\tn_name as nation,\n\t\t\textract(year from o_orderdate) as o_year,\n\t\t\tl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n\t\tfrom\n\t\t\tpart,\n\t\t\tsupplier,\n\t\t\tlineitem,\n\t\t\tpartsupp,\n\t\t\torders,\n\t\t\tnation\n\t\twhere\n\t\t\ts_suppkey = l_suppkey\n\t\t\tand ps_suppkey = l_suppkey\n\t\t\tand ps_partkey = l_partkey\n\t\t\tand p_partkey = l_partkey\n\t\t\tand o_orderkey = l_orderkey\n\t\t\tand s_nationkey = n_nationkey\n\t\t\tand p_name like \\'%green%\\'\n\t) as profit\ngroup by\n\tnation,\n\to_year\norder by\n\tnation,\n\to_year desc;","sequential_pipe",106);
    X_4 := sql.mvc();
    X_8:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",0);
    X_5:bat[:oid,:oid]  := sql.tid(X_4,"sys","part");
    X_249 := algebra.likesubselect(X_8,X_5,A1,"",false);
    (X_11,r1_11) := sql.bind(X_4,"sys","part","p_name",2);
    X_250 := algebra.likesubselect(r1_11,nil:bat[:oid,:oid],A1,"",false);
    X_14:bat[:oid,:str]  := sql.bind(X_4,"sys","part","p_name",1);
    X_252 := algebra.likesubselect(X_14,X_5,A1,"",false);
    X_17 := sql.subdelta(X_249,X_5,X_11,X_250,X_252);
    X_20:bat[:oid,:int] := sql.bind(X_4,"sys","part","p_partkey",0);
    (X_22,r1_26) := sql.bind(X_4,"sys","part","p_partkey",2);
    X_24:bat[:oid,:int] := sql.bind(X_4,"sys","part","p_partkey",1);
    X_25 := sql.projectdelta(X_17,X_20,X_22,r1_26,X_24);
    X_26:bat[:oid,:oid] := sql.tid(X_4,"sys","lineitem");
    X_28:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_partkey",0);
    (X_30,r1_36) := sql.bind(X_4,"sys","lineitem","l_partkey",2);
    X_32:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_partkey",1);
    X_34 := sql.projectdelta(X_26,X_28,X_30,r1_36,X_32);
    (X_35,r1_42) := algebra.subjoin(X_25,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_38:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",0);
    (X_41,r1_48) := sql.bind(X_4,"sys","lineitem","l_suppkey",2);
    X_44:bat[:oid,:int] := sql.bind(X_4,"sys","lineitem","l_suppkey",1);
    X_46 := sql.projectdelta(X_26,X_38,X_41,r1_48,X_44);
    X_47 := algebra.leftfetchjoin(r1_42,X_46);
    X_48:bat[:oid,:oid] := sql.tid(X_4,"sys","supplier");
    X_50:bat[:oid,:int] := sql.bind(X_4,"sys","supplier","s_suppkey",0);
    (X_52,r1_60) := sql.bind(X_4,"sys","supplier","s_suppkey",2);
    X_54:bat[:oid,:int] := sql.bind(X_4,"sys","supplier","s_suppkey",1);
    X_55 := sql.projectdelta(X_48,X_50,X_52,r1_60,X_54);
    (X_56,r1_65) := algebra.subjoin(X_47,X_55,nil:BAT,nil:BAT,false,nil:lng);
    X_60:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",0);
    (X_63,r1_72) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",2);
    X_66:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_partkey_l_suppkey_fkey",1);
    X_67 := sql.projectdelta(X_26,X_60,X_63,r1_72,X_66);
    X_68:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_56,r1_42,X_67);
    X_69:bat[:oid,:oid] := sql.tid(X_4,"sys","partsupp");
    (X_71,r1_82) := algebra.subjoin(X_68,X_69,nil:BAT,nil:BAT,false,nil:lng);
    X_74:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_77,r1_88) := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_80:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_82 := sql.projectdelta(X_26,X_74,X_77,r1_88,X_80);
    X_83:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_71,X_56,r1_42,X_82);
    X_84:bat[:oid,:oid] := sql.tid(X_4,"sys","orders");
    (X_86,r1_100) := algebra.subjoin(X_83,X_84,nil:BAT,nil:BAT,false,nil:lng);
    X_90:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",0);
    (X_93,r1_107) := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",2);
    X_96:bat[:oid,:oid] := sql.bind_idxbat(X_4,"sys","supplier","supplier_s_nationkey_fkey",1);
    X_97 := sql.projectdelta(X_48,X_90,X_93,r1_107,X_96);
    X_98:bat[:oid,:oid] := algebra.leftfetchjoinPath(X_86,X_71,r1_65,X_97);
    X_99:bat[:oid,:oid] := sql.tid(X_4,"sys","nation");
    (X_101,r1_118) := algebra.subjoin(X_98,X_99,nil:BAT,nil:BAT,false,nil:lng);
    X_104:bat[:oid,:date] := sql.bind(X_4,"sys","orders","o_orderdate",0);
    (X_107,r1_124) := sql.bind(X_4,"sys","orders","o_orderdate",2);
    X_110:bat[:oid,:date] := sql.bind(X_4,"sys","orders","o_orderdate",1);
    X_112 := sql.projectdelta(X_84,X_104,X_107,r1_124,X_110);
    X_113:bat[:oid,:date] := algebra.leftfetchjoinPath(X_101,r1_100,X_112);
    X_114:bat[:oid,:int] := batmtime.year(X_113);
    X_115:bat[:oid,:str] := sql.bind(X_4,"sys","nation","n_name",0);
    (X_117,r1_138) := sql.bind(X_4,"sys","nation","n_name",2);
    X_119:bat[:oid,:str] := sql.bind(X_4,"sys","nation","n_name",1);
    X_120 := sql.projectdelta(X_99,X_115,X_117,r1_138,X_119);
    X_121 := algebra.leftfetchjoin(r1_118,X_120);
    (X_122,r1_144,r2_144) := group.subgroup(X_121);
    (X_125,r1_147,r2_147) := group.subgroupdone(X_114,X_122);
    X_128 := algebra.leftfetchjoin(r1_147,X_114);
    X_129 := algebra.leftfetchjoin(r1_147,X_121);
    X_140:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",0);
    (X_145,r1_167) := sql.bind(X_4,"sys","lineitem","l_extendedprice",2);
    X_148:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_extendedprice",1);
    X_150 := sql.projectdelta(X_26,X_140,X_145,r1_167,X_148);
    X_151:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_101,X_86,X_71,X_56,r1_42,X_150);
    X_152 := calc.lng(A0,15,2);
    X_154:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_discount",0);
    (X_156,r1_184) := sql.bind(X_4,"sys","lineitem","l_discount",2);
    X_158:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_discount",1);
    X_159 := sql.projectdelta(X_26,X_154,X_156,r1_184,X_158);
    X_160:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_101,X_86,X_71,X_56,r1_42,X_159);
    X_161:bat[:oid,:lng] := batcalc.-(X_152,X_160);
    X_162:bat[:oid,:lng] := batcalc.*(X_151,X_161);
    X_163:bat[:oid,:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",0);
    (X_168,r1_204) := sql.bind(X_4,"sys","partsupp","ps_supplycost",2);
    X_171:bat[:oid,:lng] := sql.bind(X_4,"sys","partsupp","ps_supplycost",1);
    X_173 := sql.projectdelta(X_69,X_163,X_168,r1_204,X_171);
    X_174:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_101,X_86,r1_82,X_173);
    X_175:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_quantity",0);
    (X_178,r1_217) := sql.bind(X_4,"sys","lineitem","l_quantity",2);
    X_180:bat[:oid,:lng] := sql.bind(X_4,"sys","lineitem","l_quantity",1);
    X_181 := sql.projectdelta(X_26,X_175,X_178,r1_217,X_180);
    X_182:bat[:oid,:lng] := algebra.leftfetchjoinPath(X_101,X_86,X_71,X_56,r1_42,X_181);
    X_183:bat[:oid,:lng] := batcalc.*(X_174,X_182);
    X_184:bat[:oid,:lng] := batcalc.-(X_162,X_183);
    X_185:bat[:oid,:lng] := aggr.subsum(X_184,X_125,r1_147,true,true);
    (X_130,r1_152,r2_152) := algebra.subsort(X_129,false,false);
    (X_134,r1_156,r2_156) := algebra.subsort(X_128,r1_152,r2_152,true,false);
    X_138 := algebra.leftfetchjoin(r1_156,X_129);
    X_187 := algebra.leftfetchjoin(r1_156,X_185);
    X_139 := algebra.leftfetchjoin(r1_156,X_128);
    X_188 := sql.resultSet(3,1,X_138);
    sql.rsColumn(X_188,"sys.profit","nation","char",25,0,X_138);
    sql.rsColumn(X_188,"sys.profit","o_year","int",32,0,X_139);
    sql.rsColumn(X_188,"sys.L1","sum_profit","decimal",19,4,X_187);
    X_206 := io.stdout();
    sql.exportResult(X_206,X_188);
end user.s2_1;

# 22:53:27 >  
# 22:53:27 >  "Done."
# 22:53:27 >  

