.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH MONETDB 1 "JUNE 2009" Application "MonetDB Applications"
.SH NAME
monetdb \- control a MonetDB Database Server instance
.SH SYNOPSIS
.B monetdb
command [command_options] [command_args]
.SH DESCRIPTION
.B monetdb
allows an administrator of the MonetDB Database Server to perform
various operations on the databases in the server.  It relies on
.BR merovingian (1)
running in the background for starting and stopping databases.
.SH COMMANDS
The commands for the
.B monetdb
utility are
.B create, destroy, lock, release, status, start, stop, kill, discover, help, version.
The commands facilitate adding, removing, maintaining, starting and
stopping a database inside the MonetDB Database Server.
.IP "create [\-l] database [database ...]"
Initialises a new database in the MonetDB Database Server.  A database
created with this command makes it available for use by clients under
its database name.  The name of the database must match the expression
[A\-Za\-z0\-9\-_]+.
.IP \-l
The
.I \-l
(lock) option, puts the database in maintenance mode directly after
its creation.  A database created like this is guaranteed not to be
automatically started by
.BR merovingian (1)
upon a client request during its creation time.
.IP "destroy [\-f] database [database ...]"
Removes the given database, including all its data and logfiles.  Once
destroy has completed, all data is lost.  Be careful when using this
command.
.IP \-f
By default, a confirmation question is asked, however the
.I \-f
option, when provided, suppresses this question and removal is executed
right away.  Note that you cannot destroy a running database, bring it
down first using the
.B stop
command.
.IP "lock database [database ...]"
Puts the given database in maintenance mode.  A database under
maintenance can only be connected to by an administrator account
(by default the 
.I monetdb
account).  A database which is under maintenance is not started
automatically by
.BR merovingian (1),
the MonetDB Database Server, when clients request for it.  Use the
.B release
command to bring the database back for normal usage.  To start a
database which is under maintenance for administrator access, the
.B start
command can be used.
.IP "release database [database ...]"
Brings back a database from maintenance mode.  A released database is
available again for normal use by any client, and is started on demand.
Use the
.B lock
command to take a database under maintenance.
.IP "status [\-lc] [\-s<state>...] [database ...]"
Shows the state of the given database(s) or, when none given, all known
databases.  Three modes control the level of detail in the displayed
output.  By default a condensed one-line output per database format is
used.  This output resembles pretty much the output of various
.B XXXstat
functions, and is ideal for quickly gaining an overview of the system
state.
.IP \-c
The
.I \-c
flag shows the most used properties of a database.  This includes the
state of the database (running, crashed, stopped), whether it is under
maintenance or not, the crash averages and uptime statistics.  The crash
average is the number of times the database has crashed over the last 1,
15 or 30 starts.  The lower the average, the healthier the database is.
.IP \-l
Triggered by the
.I \-l
flag, a long listing is used.  This listing spans many rows with on each
row one property and its value separated by a colon (`:').  The long
listing includes all information that is available.
.IP \-s
The
.I \-s
flag controls which databases are being shown, matching their state.
The required argument to this flag can be a combination of any of the
following characters.  Note that the order in which they are put also
controls the order in which the databases are printed.
.I r, s, c
and
.I l
are used to print a started (running), stopped, crashed and locked
database respectively.  The default order which is used when the
.I \-s
flag is absent, is
.I rscl.
.IP "start [\-a] database [database ...]"
.IP "stop [\-a] database [database ...]"
.IP "kill [\-a] database [database ...]"
Starts, stops or kills the given database(s) or, when
.I \-a
is supplied, all known databases, if the MonetDB Database Server
.BR merovingian (1)
is running.  The
.B kill
command immediately sends a SIGKILL and should only be used as last
resort for a database that doesn't respond any more.  Killing a database
may result in (partial) data loss.
It is more common to use the
.B stop
command to stop a database.  It will first attempt to stop the database,
waiting for
.I mero_exittimeout
seconds and if that fails kill the database.
When using the
.B start
command,
.BR monetdb (1)
will output diagnostic messages if the requested action failed.  When
encountering an error, one should always consult the logfile of
.BR merovingian (1)
for more details.  For the
.B kill
command a diagnostic message indicating the database has crashed is
always emitted, due to the nature of that command.
Note that in combination with
.I \-a
the return code of
.BR monetdb (1)
indicates failure if one of the databases had a failure, even though
other databases were successful.
.IP "get <all | property[,property]> [database ...]"
Prints the requested properties, or all known properties, for the given
databases.  For each property its source and value are printed.  Source
indicates where the current value comes from, e.g. the configuration
file, or a local override.
.IP "set property=value database [database ...]"
Sets property to value for the given databases.  For a list of
properties, run
.BR "monetdb get all" .
Most properties require the database to be stopped when set.  The
following properties have special values.
.IP "forward=<redirect|proxy>"
When set to redirect, merovingian tells each connecting client to make a
new connection directly to the database the client looks for.  This
requires that the separate mserver5 processes are reachable by the ports
they use.  Since this may not be the case due to a firewall, when set to
proxy, merovingian tunnels the client to the right database.
.IP "share=<yes|no|tag>"
Defines if and how the database is being announced to other merovingians
or not.  If not set to
.I "yes"
or
.I "no
the database is simply announced or not.  Using a string, called
.I tag
the database is shared using that tag, allowing for more sophisticated
usage.  For information about the tag format and use, see section REMOTE
DATABASES in the
.BR merovingian (1)
manpage.
.IP "inherit property database [database ...]"
Like set, but unsets the database-local value, and reverts to inherit
from the default again.
.IP discover
Returns a list of remote databases that were discovered by
.BR merovingian (1).
All databases listed can be connected to via the local MonetDB Database
Server as if it were local databases.  The connection is redirected or
proxied based on configuration settings.
.IP \-h
.IP "help [command]"
Shows general help, or short help for a given command.
.IP \-v
.IP version
Shows the version of the
.B monetdb
utility.
.SH "RETURN VALUE"
The
.B monetdb
utility returns exit code
.B 0
if it successfully performed the requested command.  An error caused by
user input or database state is indicated by exit code
.BR 1 .
If an internal error in the utility occurs, exit code
.B 2
is returned.
.SH FILES
.I /etc/monetdb5.conf
.RS
The configuration file for MonetDB, located in the system configuration
directory.  This file can be overridden by setting
.I MONETDB5CONF
in the enviroment.
.SH "SEE ALSO"
.BR merovingian (1)
.\".BR mserver5 (1)
