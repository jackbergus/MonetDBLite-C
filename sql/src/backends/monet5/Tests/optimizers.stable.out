stdout of test 'optimizers` in directory 'src/backends/monet5` itself:


# 15:38:00 >  
# 15:38:00 >  Mtimeout -timeout 180  Mserver "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB4:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB4/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB4/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB4/dbfarm" --set "sql_logdir=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB4/sql_logs" --set "xquery_logdir=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB4/xquery_logs" --set mapi_open=true --set mapi_port=36880 --set xrpc_port=42877 --set monet_prompt= --trace "--dbname=mTests_src_backends_monet5" --dbinit=" module(sql_server);" ; echo ; echo Over..
# 15:38:00 >  

# Monet Database Server V4.18.0
# Copyright (c) 1993-2007, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.

printf("\nReady.\n");

Ready.
quit();

Over..

# 15:38:00 >  
# 15:38:00 >  Mtimeout -timeout 60 MapiClient -lsql -umonetdb -Pmonetdb --host=koala --port=36880 
# 15:38:00 >  

% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	3 # length
[ "optimizer test:",	"yes"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	3 # length
[ "optimizer test:",	"off"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	0 # length
[ "optimizer test:",	""	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	115 # length
[ "optimizer test:",	"costModel,coercions,emptySet,accessmode,aliases,commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	105 # length
[ "optimizer test:",	"coercions,emptySet,accessmode,aliases,commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	95 # length
[ "optimizer test:",	"emptySet,accessmode,aliases,commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	86 # length
[ "optimizer test:",	"accessmode,aliases,commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	75 # length
[ "optimizer test:",	"aliases,commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	67 # length
[ "optimizer test:",	"commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	55 # length
[ "optimizer test:",	"accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	42 # length
[ "optimizer test:",	"joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	33 # length
[ "optimizer test:",	"deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	24 # length
[ "optimizer test:",	"reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	17 # length
[ "optimizer test:",	"garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	107 # length
[ "optimizer test:",	"costModel,coercions,emptySet,accessmode,commonTerms,accumulators,joinPath,deadcode,reduce,garbageCollector,"	]
% .,	. # table_name
% single_value,	single_value # name
% char,	varchar # type
% 15,	100 # length
[ "optimizer test:",	"costModel,coercions,emptySet,accessmode,commonTerms,accumulators,joinPath,deadcode,garbageCollector,"	]
% . # table_name
% single_value # name
% char # type
% 4 # length
[ "done"	]

# 15:38:00 >  
# 15:38:00 >  Done.
# 15:38:00 >  

