@/
The contents of this file are subject to the MonetDB Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html

Software distributed under the License is distributed on an "AS IS"
basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations
under the License.

The Original Code is the MonetDB Database System.

The Initial Developer of the Original Code is CWI.
Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
Copyright August 2008-2010 MonetDB B.V.
All Rights Reserved.
@

@f createdb
@t SQL catalog initialization
@a M.L. Kersten, N. Nes
@+ Catalog initialization
After a SQL database catalog has been created, we should run a series
of SQL scripts to define auxillary functionality. We include all that
is needed to run the tests.
This MX script merely pulls the files together.
@sql
start transaction;
@include math.sql
@include times.sql
@include url.sql
@include date.sql
@include inet.sql

@include history.sql
@include tracelog.sql

@include compress.sql
@include dictionary.sql
@include cluster.sql
@include vacuum.sql

@include dependency_functions.sql
@include clients.sql

-- Scientific database section
@include skyserver.sql
@include zorder.sql

@-
The remaining functionality is considered for debugging.
@sql
-- show the optimizer statistics maintained by the SQL frontend
create function optimizer_stats () 
	returns table (rewrite string, count int) 
	external name sql.dump_opt_stats;


-- SQL QUERY CACHE
-- The SQL query cache returns a table with the query plans kept

create function queryCache() 
	returns table (query string, count int) 
	external name sql.dump_cache;

-- Trace the SQL input
create procedure querylog(filename string) 
	external name sql.logfile;

-- MONETDB KERNEL SECTION

-- The environment table
create function environment()
	returns table (nme string, val string)
	external name sql.environment;

-- The BAT buffer pool overview
create function bbp () 
	returns table (id int, name string, htype string, 
		ttype string, count BIGINT, refcnt int, lrefcnt int, 
		location string, heat int, dirty string, 
		status string, kind string) 
	external name sql.bbp;

@-
These are used for testing only...
@include mtime.sql
octopus.sql
rdf.sql	-- depends on rdf module
parts.sql	-- testing only
replication.sql	-- testing only
@sql
@include system.sql

commit;
