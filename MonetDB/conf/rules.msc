# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2007 CWI.
# All Rights Reserved.

# install python, flex and bison on your systems 
PYTHON=python
YACC=bison -b y -y
LEX=flex 
SWIG=swig

# This is the location of pthreads for Win32, 
# see http://sources.redhat.com/pthreads-win32/
PTHREAD = C:\Pthreads
PTHREAD_INCS = "-I$(PTHREAD)\include"
PTHREAD_LIBS = "$(PTHREAD)\lib\pthreadVC2.lib"
PHP_SRCDIR = $(TOPDIR)\..\..\php-5.1.4
PHP_INSTDIR = C:\php-5
# for these, also see configure.py
PHP_PEARDIR = share\pear
PHP_EXTENSIONDIR = lib\php5

PYTHONBASE=C:\Python25
PYTHON_INCS=-I$(PYTHONBASE)\include
PYTHON_LIBS=$(PYTHONBASE)\libs\python25.lib
PYTHON_LIBDIR=share\MonetDB\python

# not need to edit beyond here..

exec_prefix = $(prefix)

bindir = $(exec_prefix)\bin
sbindir = $(exec_prefix)\sbin
libexecdir = $(exec_prefix)\libexec
datadir = $(prefix)\share
sysconfdir = $(prefix)\etc
sharedstatedir = $(prefix)\com
localstatedir = $(prefix)\var
libdir = $(exec_prefix)\lib
infodir = $(prefix)\info
mandir = $(prefix)\man
includedir = $(prefix)\include
oldincludedir = \usr\include
pkgdatadir = $(datadir)\$(pkg)
pkglibdir = $(libdir)\$(pkg)
pkgincludedir = $(includedir)\$(pkg)

LIBC_INCS = $(PTHREAD_INCS)
SOCKET_LIBS = wsock32.lib

MEL="$(TOPDIR)\..\..\buildtools\mel\mel.exe"
MX="$(TOPDIR)\..\..\buildtools\Mx\Mx.exe"
CP=copy
MV=copy
DEL=del
CONFIGURE=$(PYTHON) "$(TOPDIR)\..\..\MonetDB\conf\configure.py" "bindir=$(bindir)" "CLIENTS_BUILD=$(CLIENTS_BUILD)" "CLIENTS_SOURCE=$(CLIENTS_SOURCE)" "datadir=$(datadir)" "DOCTOOLS_FALSE=$(DOCTOOLS_FALSE)" "exec_prefix=$(exec_prefix)" "HAVE_MONETDB4_FALSE=$(HAVE_MONETDB4_FALSE)" "HAVE_MONETDB5_FALSE=$(HAVE_MONETDB5_FALSE)" "HAVE_JAVA_FALSE=$(HAVE_JAVA_FALSE)" "HAVE_PCRE_FALSE=$(HAVE_PCRE_FALSE)" "HAVE_PEAR_FALSE=$(HAVE_PEAR_FALSE)" "HAVE_PERL_DEVEL_FALSE=$(HAVE_PERL_DEVEL_FALSE)" "HAVE_PERL_FALSE=$(HAVE_PERL_FALSE)" "HAVE_PHP_FALSE=$(HAVE_PHP_FALSE)" "HAVE_PYTHON_DEVEL_FALSE=$(HAVE_PYTHON_DEVEL_FALSE)" "HAVE_PYTHON_FALSE=$(HAVE_PYTHON_FALSE)" "HAVE_PYTHON_SWIG_FALSE=$(HAVE_PYTHON_SWIG_FALSE)" "HAVE_SWIG_FALSE=$(HAVE_SWIG_FALSE)" "includedir=$(includedir)" "infodir=$(infodir)" "JDBCCLIENT_JAR=$(JDBCCLIENT_JAR)" "libdir=$(libdir)" "libexecdir=$(libexecdir)" "localstatedir=$(localstatedir)" "mandir=$(mandir)" "MONET4_FALSE=$(MONET4_FALSE)" "MONET5_FALSE=$(MONET5_FALSE)" "MONETDB4_BUILD=$(MONETDB4_BUILD)" "MONETDB4_PREFIX=$(MONETDB4_PREFIX)" "MONETDB4_SOURCE=$(MONETDB4_SOURCE)" "MONETDB5_BUILD=$(MONETDB5_BUILD)" "MONETDB5_SOURCE=$(MONETDB5_SOURCE)" "MONETDB_BUILD=$(MONETDB_BUILD)" "MONETDB_PREFIX=$(MONETDB_PREFIX)" "MONETDB_SOURCE=$(MONETDB_SOURCE)" "PACKAGE=$(PACKAGE)" "PHP_EXTENSIONDIR=$(PHP_EXTENSIONDIR)" "PHP_PEARDIR=$(PHP_PEARDIR)" "prefix=$(prefix)" "PROFILING_FALSE=$(PROFILING_FALSE)" "PYTHON=$(PYTHON)" "sbindir=$(sbindir)" "SQL_BUILD=$(SQL_BUILD)" "SQL_SOURCE=$(SQL_SOURCE)" "sysconfdir=$(sysconfdir)" "VERSION=$(VERSION)" "TOPDIR=$(TOPDIR)"

# Use "nmake DEBUG=1" to get a debug build (assertions enabled);
# use "nmake NDEBUG=1" to get a release build (assertions disabled);
# use plain "nmake" to get the default.
!IFNDEF DEBUG
!IFDEF NDEBUG
CFLAGS = $(CFLAGS) -DNDEBUG
!ELSE
# default in case neither NDEBUG nor DEBUG are defined
CFLAGS = $(CFLAGS)
!ENDIF
!ENDIF

PHP_INCS = -I$(PHP_SRCDIR) -I$(PHP_SRCDIR)\main -I$(PHP_SRCDIR)\TSRM -I$(PHP_SRCDIR)\Zend -DPHP_WIN32 -DZEND_WIN32 -DZEND_DEBUG=0 -DZTS=1
PHP_LIBS = $(PHP_INSTDIR)\php5embed.lib
# there's nothing special about PEAR on Windows
HAVE_PEAR = 1

{$(SRCDIR)}.mx.h:
	$(MX) $(MXFLAGS) -x h $<

.mx.h:
	$(MX) $(MXFLAGS) -x h $<

{$(SRCDIR)}.mx.c:
	$(MX) $(MXFLAGS) -x c $<

.mx.c:
	$(MX) $(MXFLAGS) -x c $<

{$(SRCDIR)}.mx.m:
	$(MX) $(MXFLAGS) -x m $<

.mx.m:
	$(MX) $(MXFLAGS) -x m $<

.m.mil: 
	$(MEL) $(INCLUDES) -mil $*.m > $@
	type $*.tmpmil >> $@
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

.m.mil:
	$(MEL) $(INCLUDES) -mil $*.m > $@
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

{$(SRCDIR)}.mx.tmpmil:
	$(MX) $(MXFLAGS) -x mil $<
	$(MV) $*.mil $*.tmpmil
	$(DEL) $*.mil

{$(SRCDIR)}.mx.mil:
	$(MX) $(MXFLAGS) -x mil $<

.mx.tmpmil:
	$(MX) $(MXFLAGS) -x mil $<
	$(MV) $*.mil $*.tmpmil
	$(DEL) $*.mil

.mx.mil:
	$(MX) $(MXFLAGS) -x mil $<

{$(SRCDIR)}.mx.mal:
	$(MX) $(MXFLAGS) -x mal $<
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

.mx.mal:
	$(MX) $(MXFLAGS) -x mal $<
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

{$(SRCDIR)}.mx.y:
	$(MX) $(MXFLAGS) -x y $<

.mx.y:
	$(MX) $(MXFLAGS) -x y $<

{$(SRCDIR)}.mx.l:
	$(MX) $(MXFLAGS) -x l $<

.mx.l:
	$(MX) $(MXFLAGS) -x l $<

{$(SRCDIR)}.mx.yy:
	$(MX) $(MXFLAGS) -x Y $<

.mx.yy:
	$(MX) $(MXFLAGS) -x Y $<

{$(SRCDIR)}.mx.ll:
	$(MX) $(MXFLAGS) -x L $<

.mx.ll:
	$(MX) $(MXFLAGS) -x L $<

{$(SRCDIR)}.c.obj:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

.c.obj:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

{$(SRCDIR)}.syms.def:
	echo EXPORTS > $@
	type $< >> $@

.syms.def:
	echo EXPORTS > $@
	type $< >> $@

.SUFFIXES: .m .mx .proto_h .mil .glue_c .syms .def
.PRECIOUS: .m 
