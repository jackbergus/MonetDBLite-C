# Configuration file for MonetDB main-memory database

# This startup file is read by the GDK kernel, to set
# system wide parameters.  It can reside in either the local directory
# where Mserver is called, or the home directory of the MonetDB user. 

# Where MonetDB is installed
prefix=@Xprefix@
exec_prefix=@Xexec_prefix@

# GDK Section
#============

# All databases are stored as a directory under the directory
# given below.  Use this value to change the overall location
# of your data.
gdk_dbfarm=@Xlocalstatedir@@DIRSEP@@PACKAGE@@DIRSEP@dbfarm

# MonetDB can only handle one database at a time.  You can specify
# the name of the database to use below.  Note that you can use
# multiple databases, but that you have to edit the database name
# and restart MonetDB.
gdk_dbname=demo

# The options below deal with various aspects of memory usage behaviour.
# If you don't know what these values mean, you should leave them alone.

# gdk_mem_bigsize & gdk_vm_minsize will be set/limited to 
# 1/2 of the physically available amount of main-memory
# during start-up in src/tools/Mserver.mx
# memory chunks of size >= gdk_mem_bigsize (in bytes) will be mmaped anonymously
#gdk_mem_bigsize=1048756
# memory chunks of size >= gdk_vm_minsize (in bytes) will be mmaped;
#gdk_vm_minsize=137438953472
# for 32 bit systems try to claim 3G of (virtual) memory;
# set to "no" to run Mserver with valgrind.
# also, you need to tell valgrind to use 8-byte alignment, hence:
# "valgrind --alignment=8 Mserver --set gdk_alloc_map=no ..."
gdk_alloc_map=no

# the kernel can be used in embedded situations (don't set this yourself)
gdk_embedded=no

# You can enable debug for specific parts.  By default debug is
# switched off.
gdk_debug=0
# possible values: (can be a combination of)
#       1 = thread-specific debug output
#       2 = property enforcing on new BATs
#       4 = memory allocation
#       8 = property checking on all values: tells about wrongly set properties
#      16 = major IO activity
#      32 = BAT handling
#      64 = MIL parser debugging
#     128 = Thread management
#     256 = Event management
#     512 = Transaction management
#    1024 = Locks and Triggers
#    2048 = Dynamic loading
#    4096 = BBP Performance (?)
#    8192 = Delta debugging (?)
#   16384 = Module loading
#   32768 = Yacc specific error messages
#   65536 = tcpip (??)
#  131072 = monet_multiplex: setaggr debugging (??)
#  262144 = \
#  524288 =   ddbench (???)
# 1048576 = /
# 2097152 = show join/select algorithm chosen
# 4194304 = show result size estimations (for join,select)
# 8388608 = extended property checking: tells also about not set properties

# General client Section
#=======================
#host=localhost				#the host the server runs on

# MonetDB Section
#================
# Administrator user name 
monet_admin=adm
# Prompt when using MIL interface 
monet_prompt=MonetDB>
# Show version and copyright information when starting the server or
# a MIL client?
monet_welcome=yes
# Where do the MonetDB modules reside? The second path is for windows dlls.
monet_mod_path=@Xlibdir@@DIRSEP@@PACKAGE@@PATHSEP@@Xlibdir@@DIRSEP@bin
# Start Mserver in daemon mode, or start with MIL interactive interface?
monet_daemon=no

# Monet Application Interface Section
#====================================
# default port to address an Mserver for a MIL session
mapi_port=50000
# show all the MIL output?  (default: no)
#mapi_noheaders=no
# The MAPI debug level (should be disabled for normal use)
mapi_debug=0
# The number of concurrent clients can be set using mapi_clients
# (smaller than 1 is not very useful)
#mapi_clients=2

# SQL Interface Section
#======================
# The SQL debug level (should be disabled for normal use)
sql_debug=0
# Place to store SQL transaction logs
# The logs are typically stored on a different storage medium
# to protect the database against accidental hardware loss.
sql_logdir=@Xlocalstatedir@@DIRSEP@@PACKAGE@@DIRSEP@log

# XQuery Interface Section
#=========================

# default port to address the HTTP server for pathfinder
pf_httpd_port=48080

#output mode "dm" = pretty printed, 
#            "xml" = enforce XML with enclosing <XQueryResult> tags
xquery_output=xml                          

#limit the document cache on disk to 100MB
xquery_cacheMB=100                      

# Profile Interface Section
#====================================
# for 32 bit systems try to claim 3G of (virtual) memory;
# set to "no" to run Mserver with valgrind.
# valgrind --tool=callgrind Mserver --set gdk_alloc_map=no ..."
#gdk_alloc_map=yes	
