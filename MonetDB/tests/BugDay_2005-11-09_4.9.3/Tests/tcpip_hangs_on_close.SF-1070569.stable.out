stdout of test 'tcpip_hangs_on_close.SF-1070569` in directory 'tests/BugDay_2005-11-09_4.9.3` itself:


# 12:33:36 >  
# 12:33:36 >  Mtimeout -timeout 60 Mserver "--config=/ufs/alink/local/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/alink/local/lib/MonetDB:/ufs/alink/local/lib/bin" --set "gdk_dbfarm=/ufs/alink/local/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/alink/local/var/MonetDB/log" --set mapi_port=36985 --set sql_port=43297 --set xquery_port=54389 --set monet_prompt= --trace --dbname=mTests_tests_BugDay_2005-11-09_4.9.3  < tcpip_hangs_on_close.SF-1070569.milS
# 12:33:36 >  

# Monet Database Server V4.9.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
# BUG report:
#
# TCP/IP module causes hangs under Windows
# We have been trying to open a bi-directional connection
# between two MonetDB instances under Windows, however
# the commands from the TCP/IP module cause frequent hangs.
#
# For example, the TCPIP2.* test included with the source
# will hang/block frequently on the "open" command (but
# it works sometimes after you reboot the computer).
# However, the "export" command *always* causes blocking,
# we've never been able to export a variable succesfully.
#
# Has the TCP/IP module been tested under Windows, and is
# it even supported there?
# Will this script work correctly under Linux?
# And note that this problem is not related to the open
# printf bug, because if we remove the printf's then we
# still hang...
#
# I've activated TCP/IP debuging by setting gdk_debug to
# 65536... and the following script *will* cause MonetDB to
# hang on my Windows 2000 PC if you run it multiple times in a
# row (after 2-3 times, typically).
#

module(tcpip);
# 1
fork(listen(23000));
var c:=open("localhost:23000");
var test:=bat(oid,oid);
test.insert(0@0,24@0);
c.export(test,"test");
var test2:=import("test");
close(c);
terminate(23000);
# 2
fork(listen(23000));
var c:=open("localhost:23000");
var test:=bat(oid,oid);
test.insert(0@0,24@0);
c.export(test,"test");
var test2:=import("test");
close(c);
terminate(23000);
# 3
fork(listen(23000));
var c:=open("localhost:23000");
var test:=bat(oid,oid);
test.insert(0@0,24@0);
c.export(test,"test");
var test2:=import("test");
close(c);
terminate(23000);
# 4
fork(listen(23000));
var c:=open("localhost:23000");
var test:=bat(oid,oid);
test.insert(0@0,24@0);
c.export(test,"test");
var test2:=import("test");
close(c);
terminate(23000);

quit();

# 12:33:38 >  
# 12:33:38 >  Done.
# 12:33:38 >  

