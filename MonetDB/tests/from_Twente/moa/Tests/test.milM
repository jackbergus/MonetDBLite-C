var indexA  := new(void,oid);
var valuesA := new(void,int);
var valuesD := new(void,int);
var indexB  := new(oid,oid);
var valuesB := new(oid,int);
var indexC  := new(void,oid);
var valuesC := new(void,int);
var BAindex := new(void,oid);
indexA.insert(nil,0@0);
indexA.insert(nil,1@0);
indexA.insert(nil,2@0);
indexA.insert(nil,3@0);
valuesA.insert(nil,10);
valuesA.insert(nil,20);
valuesA.insert(nil,30);
valuesA.insert(nil,40);
indexA.seqbase(0@0);
valuesA.seqbase(0@0);
BAindex.insert(nil,1001@0);
BAindex.insert(nil,1002@0);
BAindex.insert(nil,1003@0);
BAindex.insert(nil,1003@0);
BAindex.seqbase(0@0);
valuesD.insert(nil,20);
valuesD.insert(nil,30);
valuesD.insert(nil,40);
valuesD.insert(nil,10);
valuesD.seqbase(0@0);
indexC.insert(nil,0@0);
indexC.insert(nil,1@0);
indexC.insert(nil,2@0);
indexC.insert(nil,3@0);
valuesC.insert(nil,10);
valuesC.insert(nil,10);
valuesC.insert(nil,30);
valuesC.insert(nil,50);
valuesC.seqbase(0@0);
indexB.insert(0@0,409@0);
indexB.insert(1@0,408@0);
indexB.insert(2@0,407@0);
indexB.insert(2@0,406@0);
indexB.insert(2@0,405@0);
indexB.insert(3@0,404@0);
indexB.insert(3@0,403@0);
indexB.insert(3@0,402@0);
indexB.insert(3@0,401@0);
valuesB.insert(409@0,9000);
valuesB.insert(408@0,8000);
valuesB.insert(407@0,7000);
valuesB.insert(406@0,6000);
valuesB.insert(405@0,5000);
valuesB.insert(404@0,4000);
valuesB.insert(403@0,3000);
valuesB.insert(402@0,2000);
valuesB.insert(401@0,1000);

indexA.print();
valuesA.find(0@0).print();
valuesD.find(0@0).print();
valuesA.find(1@0).print();
valuesD.find(1@0).print();
valuesA.find(2@0).print();
valuesD.find(2@0).print();
valuesA.find(3@0).print();
valuesD.find(3@0).print();
# {<a= 10 , b= 20 >, <a= 20 , b= 30 >, <a= 30 , b= 40 >, <a= 40 , b= 10 >}

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

var _MMoper_2 := [+](valuesD,valuesA);
var _MMoper_3 := [-](valuesD,valuesA);
var _MMoper_4 := [*](_MMoper_2,_MMoper_3);
indexA.print();
_MMoper_4.find(0@0).print();
_MMoper_4.find(1@0).print();
_MMoper_4.find(2@0).print();
_MMoper_4.find(3@0).print();
# { 300 ,  500 ,  700 ,  -1500 }

# 1

_MMoper_2 := +(1,2);
_MMoper_2.print();
#  3 

# "aap"

indexA.print();
valuesA.find(0@0).print();
valuesA.find(1@0).print();
valuesA.find(2@0).print();
valuesA.find(3@0).print();
# { 10 ,  20 ,  30 ,  40 }

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

indexC.print();
valuesC.find(0@0).print();
valuesC.find(1@0).print();
valuesC.find(2@0).print();
valuesC.find(3@0).print();
# { 10 ,  10 ,  30 ,  50 }

var _MMreverse_2 := reverse(indexA);
indexA.print();
reverse(select(reverse(indexB),0@0)).print();
valuesB.find(409@0).print();
reverse(select(reverse(indexB),1@0)).print();
valuesB.find(408@0).print();
reverse(select(reverse(indexB),2@0)).print();
valuesB.find(407@0).print();
valuesB.find(406@0).print();
valuesB.find(405@0).print();
reverse(select(reverse(indexB),3@0)).print();
valuesB.find(404@0).print();
valuesB.find(403@0).print();
valuesB.find(402@0).print();
valuesB.find(401@0).print();
# {{ 9000 }, { 8000 }, { 7000 ,  6000 ,  5000 }, { 4000 ,  3000 ,  2000 ,  1000 }}

var _MMsort_2 := sort(valuesA);
var _MMsort_3 := sort(valuesD);
var _MMunion_4 := union(_MMsort_2,_MMsort_3);
var _MMcastnil_5 := _MMunion_4.mark(0@0);
var _MMnilcast_6 := _MMunion_4.reverse().mark(0@0).reverse();
indexA.print();
reverse(select(reverse(_MMcastnil_5),0@0)).print();
_MMnilcast_6.find(0@0).print();
_MMnilcast_6.find(4@0).print();
reverse(select(reverse(_MMcastnil_5),1@0)).print();
_MMnilcast_6.find(1@0).print();
_MMnilcast_6.find(5@0).print();
reverse(select(reverse(_MMcastnil_5),2@0)).print();
_MMnilcast_6.find(2@0).print();
_MMnilcast_6.find(6@0).print();
reverse(select(reverse(_MMcastnil_5),3@0)).print();
_MMnilcast_6.find(3@0).print();
_MMnilcast_6.find(7@0).print();
# {{ 10 ,  20 }, { 20 ,  30 }, { 30 ,  40 }, { 40 ,  10 }}

_MMsort_2 := sort(valuesA);
_MMsort_3 := sort(valuesD);
_MMunion_4 := union(_MMsort_2,_MMsort_3);
_MMcastnil_5 := _MMunion_4.mark(0@0);
_MMnilcast_6 := _MMunion_4.reverse().mark(0@0).reverse();
indexA.print();
reverse(select(reverse(_MMcastnil_5),0@0)).print();
_MMnilcast_6.find(0@0).print();
_MMnilcast_6.find(4@0).print();
reverse(select(reverse(_MMcastnil_5),1@0)).print();
_MMnilcast_6.find(1@0).print();
_MMnilcast_6.find(5@0).print();
reverse(select(reverse(_MMcastnil_5),2@0)).print();
_MMnilcast_6.find(2@0).print();
_MMnilcast_6.find(6@0).print();
reverse(select(reverse(_MMcastnil_5),3@0)).print();
_MMnilcast_6.find(3@0).print();
_MMnilcast_6.find(7@0).print();
# {{< 10 >, < 20 >}, {< 20 >, < 30 >}, {< 30 >, < 40 >}, {< 40 >, < 10 >}}

var _MMcount_2 := count(indexA);
_MMcount_2.print();
#  4 

_MMreverse_2 := reverse(indexA);
_MMoper_3 := {count}(indexB);
var _MMmergecast_4 := mergecast(_MMreverse_2,_MMoper_3,0);
indexA.print();
_MMmergecast_4.find(0@0).print();
_MMmergecast_4.find(1@0).print();
_MMmergecast_4.find(2@0).print();
_MMmergecast_4.find(3@0).print();
# { 1 ,  1 ,  3 ,  4 }

_MMoper_2 := [+](1,valuesA);
indexA.print();
_MMoper_2.find(0@0).print();
_MMoper_2.find(1@0).print();
_MMoper_2.find(2@0).print();
_MMoper_2.find(3@0).print();
# { 11 ,  21 ,  31 ,  41 }

_MMoper_2 := [+](valuesA,valuesA);
indexA.print();
_MMoper_2.find(0@0).print();
_MMoper_2.find(1@0).print();
_MMoper_2.find(2@0).print();
_MMoper_2.find(3@0).print();
# { 20 ,  40 ,  60 ,  80 }

_MMoper_2 := [+](valuesB,1);
var _MMreverse_3 := reverse(indexA);
indexA.print();
reverse(select(reverse(indexB),0@0)).print();
_MMoper_2.find(409@0).print();
reverse(select(reverse(indexB),1@0)).print();
_MMoper_2.find(408@0).print();
reverse(select(reverse(indexB),2@0)).print();
_MMoper_2.find(407@0).print();
_MMoper_2.find(406@0).print();
_MMoper_2.find(405@0).print();
reverse(select(reverse(indexB),3@0)).print();
_MMoper_2.find(404@0).print();
_MMoper_2.find(403@0).print();
_MMoper_2.find(402@0).print();
_MMoper_2.find(401@0).print();
# {{ 9001 }, { 8001 }, { 7001 ,  6001 ,  5001 }, { 4001 ,  3001 ,  2001 ,  1001 }}

_MMsort_2 := sort(valuesA);
_MMsort_3 := sort(valuesC);
_MMunion_4 := union(_MMsort_2,_MMsort_3);
var _MMnilcast_5 := _MMunion_4.reverse().mark(0@0).reverse();
var _MMreverse_6 := reverse(_MMnilcast_5);
_MMreverse_6.print();
_MMnilcast_5.find(0@0).print();
_MMnilcast_5.find(1@0).print();
_MMnilcast_5.find(2@0).print();
_MMnilcast_5.find(3@0).print();
_MMnilcast_5.find(4@0).print();
_MMnilcast_5.find(5@0).print();
_MMnilcast_5.find(6@0).print();
_MMnilcast_5.find(7@0).print();
# { 10 ,  20 ,  30 ,  40 ,  10 ,  10 ,  30 ,  50 }

_MMsort_2 := sort(valuesA);
_MMsort_3 := sort(valuesC);
_MMunion_4 := union(_MMsort_2,_MMsort_3);
_MMnilcast_5 := _MMunion_4.reverse().mark(0@0).reverse();
_MMreverse_6 := reverse(_MMnilcast_5);
_MMreverse_6.print();
_MMnilcast_5.find(0@0).print();
_MMnilcast_5.find(1@0).print();
_MMnilcast_5.find(2@0).print();
_MMnilcast_5.find(3@0).print();
_MMnilcast_5.find(4@0).print();
_MMnilcast_5.find(5@0).print();
_MMnilcast_5.find(6@0).print();
_MMnilcast_5.find(7@0).print();
# {< 10 >, < 20 >, < 30 >, < 40 >, < 10 >, < 10 >, < 30 >, < 50 >}

_MMreverse_2 := reverse(valuesA);
_MMreverse_3 := reverse(valuesC);
var _MMsemijoin_4 := semijoin(_MMreverse_2,_MMreverse_3);
var _MMreverse_5 := reverse(_MMsemijoin_4);
var _MMcastnil_6 := _MMreverse_5.mark(0@0);
var _MMjoin_7 := join(indexA,_MMcastnil_6);
var _MMreverse_8 := reverse(_MMcastnil_6);
var _MMjoin_9 := join(_MMreverse_8,valuesA);
_MMjoin_7.print();
_MMjoin_9.find(0@0).print();
_MMjoin_9.find(1@0).print();
# { 10 ,  30 }

_MMreverse_2 := reverse(valuesA);
_MMreverse_3 := reverse(valuesC);
_MMsemijoin_4 := semijoin(_MMreverse_2,_MMreverse_3);
_MMreverse_5 := reverse(_MMsemijoin_4);
_MMcastnil_6 := _MMreverse_5.mark(0@0);
_MMjoin_7 := join(indexA,_MMcastnil_6);
_MMreverse_8 := reverse(_MMcastnil_6);
_MMjoin_9 := join(_MMreverse_8,valuesA);
_MMjoin_7.print();
_MMjoin_9.find(0@0).print();
_MMjoin_9.find(1@0).print();
# {< 10 >, < 30 >}

_MMoper_2 := [=](valuesA,10);
var _MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
var _MMjoin_4 := join(indexA,_MMuselect_3);
_MMreverse_5 := reverse(_MMuselect_3);
var _MMjoin_6 := join(_MMreverse_5,valuesA);
_MMjoin_4.print();
_MMjoin_6.find(0@0).print();
# { 10 }

_MMoper_2 := [=](valuesA,10);
_MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
_MMjoin_4 := join(indexA,_MMuselect_3);
_MMreverse_5 := reverse(_MMuselect_3);
_MMjoin_6 := join(_MMreverse_5,valuesA);
_MMjoin_4.print();
_MMjoin_6.find(0@0).print();
# {< 10 >}

_MMoper_2 := [=](valuesA,10);
_MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
_MMoper_4 := [=](valuesA,20);
var _MMuselect_5 := uselect(_MMoper_4,true).mark(0@0);
var _MMkunion_6 := kunion(_MMuselect_3,_MMuselect_5);
var _MMcastnil_7 := _MMkunion_6.mark(0@0);
var _MMjoin_8 := join(indexA,_MMcastnil_7);
var _MMreverse_9 := reverse(_MMcastnil_7);
var _MMjoin_10 := join(_MMreverse_9,valuesA);
_MMjoin_8.print();
_MMjoin_10.find(0@0).print();
_MMjoin_10.find(1@0).print();
# { 10 ,  20 }

_MMoper_2 := [>=](valuesA,10);
_MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
_MMoper_4 := [<=](valuesA,20);
_MMuselect_5 := uselect(_MMoper_4,true).mark(0@0);
var _MMsemijoin_6 := semijoin(_MMuselect_3,_MMuselect_5);
_MMcastnil_7 := _MMsemijoin_6.mark(0@0);
_MMjoin_8 := join(indexA,_MMcastnil_7);
_MMreverse_9 := reverse(_MMcastnil_7);
_MMjoin_10 := join(_MMreverse_9,valuesA);
_MMjoin_8.print();
_MMjoin_10.find(0@0).print();
_MMjoin_10.find(1@0).print();
# { 10 ,  20 }

_MMoper_2 := [>=](valuesB,2000);
_MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
_MMjoin_4 := join(indexB,_MMuselect_3);
_MMreverse_5 := reverse(_MMuselect_3);
_MMjoin_6 := join(_MMreverse_5,valuesB);
var _MMreverse_7 := reverse(indexA);
indexA.print();
reverse(select(reverse(_MMjoin_4),0@0)).print();
_MMjoin_6.find(0@0).print();
reverse(select(reverse(_MMjoin_4),1@0)).print();
_MMjoin_6.find(1@0).print();
reverse(select(reverse(_MMjoin_4),2@0)).print();
_MMjoin_6.find(2@0).print();
_MMjoin_6.find(3@0).print();
_MMjoin_6.find(4@0).print();
reverse(select(reverse(_MMjoin_4),3@0)).print();
_MMjoin_6.find(5@0).print();
_MMjoin_6.find(6@0).print();
_MMjoin_6.find(7@0).print();
# {{ 9000 }, { 8000 }, { 7000 ,  6000 ,  5000 }, { 4000 ,  3000 ,  2000 }}

_MMreverse_2 := reverse(indexA);
_MMoper_3 := [<=](valuesB,2000);
var _MMuselect_4 := uselect(_MMoper_3,true).mark(0@0);
var _MMjoin_5 := join(indexB,_MMuselect_4);
var _MMoper_6 := {count}(_MMjoin_5);
var _MMmergecast_7 := mergecast(_MMreverse_2,_MMoper_6,0);
indexA.print();
_MMmergecast_7.find(0@0).print();
_MMmergecast_7.find(1@0).print();
_MMmergecast_7.find(2@0).print();
_MMmergecast_7.find(3@0).print();
# { 0 ,  0 ,  0 ,  2 }

_MMoper_2 := [=](valuesA,30);
var _MMCTgroup_3 := CTgroup(_MMoper_2);
var _MMextend_4 := _MMCTgroup_3.extend().mark(0@0);
_MMreverse_5 := reverse(_MMextend_4);
_MMnilcast_6 := _MMreverse_5.reverse().mark(0@0).reverse();
_MMjoin_7 := join(_MMnilcast_6,_MMoper_2);
_MMreverse_8 := reverse(_MMjoin_7);
var _MMnilcast_9 := _MMreverse_8.reverse().mark(0@0).reverse();
var _MMreverse_10 := reverse(_MMnilcast_6);
var _MMjoin_11 := join(_MMCTgroup_3.map(),_MMreverse_10);
var _MMreverse_12 := reverse(_MMjoin_11);
var _MMreverse_13 := reverse(_MMnilcast_9);
_MMnilcast_9.print();
_MMjoin_7.find(0@0).print();
reverse(select(reverse(_MMreverse_12),0@0)).print();
valuesA.find(0@0).print();
valuesA.find(1@0).print();
valuesA.find(3@0).print();
_MMjoin_7.find(1@0).print();
reverse(select(reverse(_MMreverse_12),1@0)).print();
valuesA.find(2@0).print();
# {< false , { 10 ,  20 ,  40 }>, < true , { 30 }>}

_MMreverse_2 := reverse(indexA);
indexA.print();
valuesA.find(0@0).print();
reverse(select(reverse(indexB),0@0)).print();
valuesB.find(409@0).print();
valuesA.find(1@0).print();
reverse(select(reverse(indexB),1@0)).print();
valuesB.find(408@0).print();
valuesA.find(2@0).print();
reverse(select(reverse(indexB),2@0)).print();
valuesB.find(407@0).print();
valuesB.find(406@0).print();
valuesB.find(405@0).print();
valuesA.find(3@0).print();
reverse(select(reverse(indexB),3@0)).print();
valuesB.find(404@0).print();
valuesB.find(403@0).print();
valuesB.find(402@0).print();
valuesB.find(401@0).print();
# {< 10 , { 9000 }>, < 20 , { 8000 }>, < 30 , { 7000 ,  6000 ,  5000 }>, < 40 , { 4000 ,  3000 ,  2000 ,  1000 }>}

var _MMnilcast_2 := indexB.reverse().mark(0@0).reverse();
_MMreverse_3 := reverse(indexB);
_MMjoin_4 := join(_MMreverse_3,valuesA);
_MMjoin_5 := join(_MMreverse_3,indexB);
_MMcastnil_6 := _MMjoin_5.mark(0@0);
var _MMnilcast_7 := _MMjoin_5.reverse().mark(0@0).reverse();
_MMjoin_8 := join(_MMnilcast_7,valuesB);
_MMreverse_9 := reverse(indexA);
_MMjoin_10 := join(_MMreverse_3,_MMreverse_9);
_MMnilcast_2.print();
valuesB.find(409@0).print();
_MMjoin_4.find(409@0).print();
reverse(select(reverse(_MMcastnil_6),409@0)).print();
_MMjoin_8.find(0@0).print();
valuesB.find(408@0).print();
_MMjoin_4.find(408@0).print();
reverse(select(reverse(_MMcastnil_6),408@0)).print();
_MMjoin_8.find(1@0).print();
valuesB.find(407@0).print();
_MMjoin_4.find(407@0).print();
reverse(select(reverse(_MMcastnil_6),407@0)).print();
_MMjoin_8.find(2@0).print();
_MMjoin_8.find(3@0).print();
_MMjoin_8.find(4@0).print();
valuesB.find(406@0).print();
_MMjoin_4.find(406@0).print();
reverse(select(reverse(_MMcastnil_6),406@0)).print();
_MMjoin_8.find(5@0).print();
_MMjoin_8.find(6@0).print();
_MMjoin_8.find(7@0).print();
valuesB.find(405@0).print();
_MMjoin_4.find(405@0).print();
reverse(select(reverse(_MMcastnil_6),405@0)).print();
_MMjoin_8.find(8@0).print();
_MMjoin_8.find(9@0).print();
_MMjoin_8.find(10@0).print();
valuesB.find(404@0).print();
_MMjoin_4.find(404@0).print();
reverse(select(reverse(_MMcastnil_6),404@0)).print();
_MMjoin_8.find(11@0).print();
_MMjoin_8.find(12@0).print();
_MMjoin_8.find(13@0).print();
_MMjoin_8.find(14@0).print();
valuesB.find(403@0).print();
_MMjoin_4.find(403@0).print();
reverse(select(reverse(_MMcastnil_6),403@0)).print();
_MMjoin_8.find(15@0).print();
_MMjoin_8.find(16@0).print();
_MMjoin_8.find(17@0).print();
_MMjoin_8.find(18@0).print();
valuesB.find(402@0).print();
_MMjoin_4.find(402@0).print();
reverse(select(reverse(_MMcastnil_6),402@0)).print();
_MMjoin_8.find(19@0).print();
_MMjoin_8.find(20@0).print();
_MMjoin_8.find(21@0).print();
_MMjoin_8.find(22@0).print();
valuesB.find(401@0).print();
_MMjoin_4.find(401@0).print();
reverse(select(reverse(_MMcastnil_6),401@0)).print();
_MMjoin_8.find(23@0).print();
_MMjoin_8.find(24@0).print();
_MMjoin_8.find(25@0).print();
_MMjoin_8.find(26@0).print();
# {< 9000 , < 10 , { 9000 }>>, < 8000 , < 20 , { 8000 }>>, < 7000 , < 30 , { 7000 ,  6000 ,  5000 }>>, < 6000 , < 30 , { 7000 ,  6000 ,  5000 }>>, < 5000 , < 30 , { 7000 ,  6000 ,  5000 }>>, < 4000 , < 40 , { 4000 ,  3000 ,  2000 ,  1000 }>>, < 3000 , < 40 , { 4000 ,  3000 ,  2000 ,  1000 }>>, < 2000 , < 40 , { 4000 ,  3000 ,  2000 ,  1000 }>>, < 1000 , < 40 , { 4000 ,  3000 ,  2000 ,  1000 }>>}

_MMnilcast_2 := indexB.reverse().mark(0@0).reverse();
_MMreverse_3 := reverse(indexB);
_MMjoin_4 := join(_MMreverse_3,indexB);
_MMcastnil_5 := _MMjoin_4.mark(0@0);
_MMnilcast_6 := _MMjoin_4.reverse().mark(0@0).reverse();
_MMjoin_7 := join(_MMnilcast_6,valuesB);
_MMreverse_8 := reverse(indexA);
_MMjoin_9 := join(_MMreverse_3,_MMreverse_8);
_MMnilcast_2.print();
valuesB.find(409@0).print();
reverse(select(reverse(_MMcastnil_5),409@0)).print();
_MMjoin_7.find(0@0).print();
valuesB.find(408@0).print();
reverse(select(reverse(_MMcastnil_5),408@0)).print();
_MMjoin_7.find(1@0).print();
valuesB.find(407@0).print();
reverse(select(reverse(_MMcastnil_5),407@0)).print();
_MMjoin_7.find(2@0).print();
_MMjoin_7.find(3@0).print();
_MMjoin_7.find(4@0).print();
valuesB.find(406@0).print();
reverse(select(reverse(_MMcastnil_5),406@0)).print();
_MMjoin_7.find(5@0).print();
_MMjoin_7.find(6@0).print();
_MMjoin_7.find(7@0).print();
valuesB.find(405@0).print();
reverse(select(reverse(_MMcastnil_5),405@0)).print();
_MMjoin_7.find(8@0).print();
_MMjoin_7.find(9@0).print();
_MMjoin_7.find(10@0).print();
valuesB.find(404@0).print();
reverse(select(reverse(_MMcastnil_5),404@0)).print();
_MMjoin_7.find(11@0).print();
_MMjoin_7.find(12@0).print();
_MMjoin_7.find(13@0).print();
_MMjoin_7.find(14@0).print();
valuesB.find(403@0).print();
reverse(select(reverse(_MMcastnil_5),403@0)).print();
_MMjoin_7.find(15@0).print();
_MMjoin_7.find(16@0).print();
_MMjoin_7.find(17@0).print();
_MMjoin_7.find(18@0).print();
valuesB.find(402@0).print();
reverse(select(reverse(_MMcastnil_5),402@0)).print();
_MMjoin_7.find(19@0).print();
_MMjoin_7.find(20@0).print();
_MMjoin_7.find(21@0).print();
_MMjoin_7.find(22@0).print();
valuesB.find(401@0).print();
reverse(select(reverse(_MMcastnil_5),401@0)).print();
_MMjoin_7.find(23@0).print();
_MMjoin_7.find(24@0).print();
_MMjoin_7.find(25@0).print();
_MMjoin_7.find(26@0).print();
# {< 9000 , { 9000 }>, < 8000 , { 8000 }>, < 7000 , { 7000 ,  6000 ,  5000 }>, < 6000 , { 7000 ,  6000 ,  5000 }>, < 5000 , { 7000 ,  6000 ,  5000 }>, < 4000 , { 4000 ,  3000 ,  2000 ,  1000 }>, < 3000 , { 4000 ,  3000 ,  2000 ,  1000 }>, < 2000 , { 4000 ,  3000 ,  2000 ,  1000 }>, < 1000 , { 4000 ,  3000 ,  2000 ,  1000 }>}

_MMnilcast_2 := indexB.reverse().mark(0@0).reverse();
_MMreverse_3 := reverse(_MMnilcast_2);
var _MMnilcast_4 := _MMreverse_3.reverse().mark(0@0).reverse();
_MMjoin_5 := join(_MMnilcast_2,valuesB);
_MMnilcast_4.print();
_MMjoin_5.find(0@0).print();
_MMjoin_5.find(1@0).print();
_MMjoin_5.find(2@0).print();
_MMjoin_5.find(3@0).print();
_MMjoin_5.find(4@0).print();
_MMjoin_5.find(5@0).print();
_MMjoin_5.find(6@0).print();
_MMjoin_5.find(7@0).print();
_MMjoin_5.find(8@0).print();
# { 9000 ,  8000 ,  7000 ,  6000 ,  5000 ,  4000 ,  3000 ,  2000 ,  1000 }

_MMnilcast_2 := indexB.reverse().mark(0@0).reverse();
_MMreverse_3 := reverse(_MMnilcast_2);
_MMnilcast_4 := _MMreverse_3.reverse().mark(0@0).reverse();
_MMjoin_5 := join(_MMnilcast_2,valuesB);
_MMnilcast_4.print();
_MMjoin_5.find(0@0).print();
_MMjoin_5.find(1@0).print();
_MMjoin_5.find(2@0).print();
_MMjoin_5.find(3@0).print();
_MMjoin_5.find(4@0).print();
_MMjoin_5.find(5@0).print();
_MMjoin_5.find(6@0).print();
_MMjoin_5.find(7@0).print();
_MMjoin_5.find(8@0).print();
# {< 9000 >, < 8000 >, < 7000 >, < 6000 >, < 5000 >, < 4000 >, < 3000 >, < 2000 >, < 1000 >}

_MMreverse_2 := reverse(indexA);
indexA.print();
valuesA.find(0@0).print();
valuesD.find(0@0).print();
reverse(select(reverse(indexB),0@0)).print();
valuesB.find(409@0).print();
valuesA.find(1@0).print();
valuesD.find(1@0).print();
reverse(select(reverse(indexB),1@0)).print();
valuesB.find(408@0).print();
valuesA.find(2@0).print();
valuesD.find(2@0).print();
reverse(select(reverse(indexB),2@0)).print();
valuesB.find(407@0).print();
valuesB.find(406@0).print();
valuesB.find(405@0).print();
valuesA.find(3@0).print();
valuesD.find(3@0).print();
reverse(select(reverse(indexB),3@0)).print();
valuesB.find(404@0).print();
valuesB.find(403@0).print();
valuesB.find(402@0).print();
valuesB.find(401@0).print();
# {< 10 ,  20 , { 9000 }>, < 20 ,  30 , { 8000 }>, < 30 ,  40 , { 7000 ,  6000 ,  5000 }>, < 40 ,  10 , { 4000 ,  3000 ,  2000 ,  1000 }>}

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

indexA.print();
valuesA.find(0@0).print();
valuesA.find(1@0).print();
valuesA.find(2@0).print();
valuesA.find(3@0).print();
# { 10 ,  20 ,  30 ,  40 }

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

_MMoper_2 := [<=](valuesA,valuesD);
_MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
_MMjoin_4 := join(indexA,_MMuselect_3);
_MMreverse_5 := reverse(_MMuselect_3);
_MMjoin_6 := join(_MMreverse_5,valuesA);
_MMjoin_7 := join(_MMreverse_5,valuesD);
_MMjoin_4.print();
_MMjoin_6.find(0@0).print();
_MMjoin_7.find(0@0).print();
_MMjoin_6.find(1@0).print();
_MMjoin_7.find(1@0).print();
_MMjoin_6.find(2@0).print();
_MMjoin_7.find(2@0).print();
# {< 10 ,  20 >, < 20 ,  30 >, < 30 ,  40 >}

_MMoper_2 := [<=](valuesD,valuesA);
_MMuselect_3 := uselect(_MMoper_2,true).mark(0@0);
_MMjoin_4 := join(indexA,_MMuselect_3);
_MMreverse_5 := reverse(_MMuselect_3);
_MMjoin_6 := join(_MMreverse_5,valuesA);
_MMjoin_7 := join(_MMreverse_5,valuesD);
_MMjoin_4.print();
_MMjoin_6.find(0@0).print();
_MMjoin_7.find(0@0).print();
# {< 40 ,  10 >}

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

indexA.print();
valuesD.find(0@0).print();
valuesD.find(1@0).print();
valuesD.find(2@0).print();
valuesD.find(3@0).print();
# { 20 ,  30 ,  40 ,  10 }

_MMoper_2 := [+](valuesD,valuesA);
_MMoper_3 := [-](valuesD,valuesA);
_MMoper_4 := [*](_MMoper_2,_MMoper_3);
indexA.print();
_MMoper_4.find(0@0).print();
_MMoper_4.find(1@0).print();
_MMoper_4.find(2@0).print();
_MMoper_4.find(3@0).print();
# { 300 ,  500 ,  700 ,  -1500 }

_MMreverse_2 := reverse(indexB);
var _MMjoin_3 := join(_MMreverse_2,valuesA);
var _MMreverse_4 := reverse(indexA);
indexA.print();
reverse(select(reverse(indexB),0@0)).print();
_MMjoin_3.find(409@0).print();
reverse(select(reverse(indexB),1@0)).print();
_MMjoin_3.find(408@0).print();
reverse(select(reverse(indexB),2@0)).print();
_MMjoin_3.find(407@0).print();
_MMjoin_3.find(406@0).print();
_MMjoin_3.find(405@0).print();
reverse(select(reverse(indexB),3@0)).print();
_MMjoin_3.find(404@0).print();
_MMjoin_3.find(403@0).print();
_MMjoin_3.find(402@0).print();
_MMjoin_3.find(401@0).print();
# {{ 10 }, { 20 }, { 30 ,  30 ,  30 }, { 40 ,  40 ,  40 ,  40 }}

_MMreverse_2 := reverse(indexB);
_MMjoin_3 := join(_MMreverse_2,valuesA);
_MMoper_4 := [*](_MMjoin_3,100);
var _MMoper_5 := [=](valuesB,_MMoper_4);
var _MMuselect_6 := uselect(_MMoper_5,true).mark(0@0);
_MMjoin_7 := join(indexB,_MMuselect_6);
_MMreverse_8 := reverse(_MMuselect_6);
_MMjoin_9 := join(_MMreverse_8,valuesB);
_MMreverse_10 := reverse(indexA);
indexA.print();
reverse(select(reverse(_MMjoin_7),0@0)).print();
reverse(select(reverse(_MMjoin_7),1@0)).print();
reverse(select(reverse(_MMjoin_7),2@0)).print();
reverse(select(reverse(_MMjoin_7),3@0)).print();
_MMjoin_9.find(0@0).print();
# {{}, {}, {}, { 4000 }}

_MMreverse_2 := reverse(indexB);
_MMjoin_3 := join(_MMreverse_2,valuesC);
_MMreverse_4 := reverse(indexA);
indexA.print();
reverse(select(reverse(indexB),0@0)).print();
_MMjoin_3.find(409@0).print();
reverse(select(reverse(indexB),1@0)).print();
_MMjoin_3.find(408@0).print();
reverse(select(reverse(indexB),2@0)).print();
_MMjoin_3.find(407@0).print();
_MMjoin_3.find(406@0).print();
_MMjoin_3.find(405@0).print();
reverse(select(reverse(indexB),3@0)).print();
_MMjoin_3.find(404@0).print();
_MMjoin_3.find(403@0).print();
_MMjoin_3.find(402@0).print();
_MMjoin_3.find(401@0).print();
# {{ 10 }, { 10 }, { 30 ,  30 ,  30 }, { 50 ,  50 ,  50 ,  50 }}

_MMreverse_2 := reverse(indexB);
_MMjoin_3 := join(_MMreverse_2,indexB);
var _MMcastnil_4 := _MMjoin_3.mark(0@0);
_MMnilcast_5 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesB);
_MMreverse_7 := reverse(indexA);
_MMjoin_8 := join(_MMreverse_2,_MMreverse_7);
indexA.print();
reverse(select(reverse(indexB),0@0)).print();
reverse(select(reverse(_MMcastnil_4),409@0)).print();
_MMjoin_6.find(0@0).print();
reverse(select(reverse(indexB),1@0)).print();
reverse(select(reverse(_MMcastnil_4),408@0)).print();
_MMjoin_6.find(1@0).print();
reverse(select(reverse(indexB),2@0)).print();
reverse(select(reverse(_MMcastnil_4),407@0)).print();
_MMjoin_6.find(2@0).print();
_MMjoin_6.find(3@0).print();
_MMjoin_6.find(4@0).print();
reverse(select(reverse(_MMcastnil_4),406@0)).print();
_MMjoin_6.find(5@0).print();
_MMjoin_6.find(6@0).print();
_MMjoin_6.find(7@0).print();
reverse(select(reverse(_MMcastnil_4),405@0)).print();
_MMjoin_6.find(8@0).print();
_MMjoin_6.find(9@0).print();
_MMjoin_6.find(10@0).print();
reverse(select(reverse(indexB),3@0)).print();
reverse(select(reverse(_MMcastnil_4),404@0)).print();
_MMjoin_6.find(11@0).print();
_MMjoin_6.find(12@0).print();
_MMjoin_6.find(13@0).print();
_MMjoin_6.find(14@0).print();
reverse(select(reverse(_MMcastnil_4),403@0)).print();
_MMjoin_6.find(15@0).print();
_MMjoin_6.find(16@0).print();
_MMjoin_6.find(17@0).print();
_MMjoin_6.find(18@0).print();
reverse(select(reverse(_MMcastnil_4),402@0)).print();
_MMjoin_6.find(19@0).print();
_MMjoin_6.find(20@0).print();
_MMjoin_6.find(21@0).print();
_MMjoin_6.find(22@0).print();
reverse(select(reverse(_MMcastnil_4),401@0)).print();
_MMjoin_6.find(23@0).print();
_MMjoin_6.find(24@0).print();
_MMjoin_6.find(25@0).print();
_MMjoin_6.find(26@0).print();
# {{{ 9000 }}, {{ 8000 }}, {{ 7000 ,  6000 ,  5000 }, { 7000 ,  6000 ,  5000 }, { 7000 ,  6000 ,  5000 }}, {{ 4000 ,  3000 ,  2000 ,  1000 }, { 4000 ,  3000 ,  2000 ,  1000 }, { 4000 ,  3000 ,  2000 ,  1000 }, { 4000 ,  3000 ,  2000 ,  1000 }}}

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMreverse_4 := reverse(_MMjoin_3);
_MMnilcast_5 := _MMreverse_4.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesA);
_MMreverse_7 := reverse(_MMjoin_6);
var _MMnilcast_8 := _MMreverse_7.reverse().mark(0@0).reverse();
_MMnilcast_9 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_10 := join(_MMnilcast_9,valuesC);
_MMnilcast_8.print();
_MMjoin_6.find(0@0).print();
_MMjoin_10.find(0@0).print();
_MMjoin_6.find(1@0).print();
_MMjoin_10.find(1@0).print();
_MMjoin_6.find(2@0).print();
_MMjoin_10.find(2@0).print();
# {< 10 ,  10 >, < 10 ,  10 >, < 30 ,  30 >}

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMcastnil_4 := _MMjoin_3.mark(0@0);
_MMnilcast_5 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesC);
_MMreverse_7 := reverse(indexA);
indexA.print();
valuesA.find(0@0).print();
reverse(select(reverse(_MMcastnil_4),0@0)).print();
_MMjoin_6.find(0@0).print();
_MMjoin_6.find(1@0).print();
valuesA.find(1@0).print();
reverse(select(reverse(_MMcastnil_4),1@0)).print();
valuesA.find(2@0).print();
reverse(select(reverse(_MMcastnil_4),2@0)).print();
_MMjoin_6.find(2@0).print();
valuesA.find(3@0).print();
reverse(select(reverse(_MMcastnil_4),3@0)).print();
# {< 10 , { 10 ,  10 }>, < 20 , {}>, < 30 , { 30 }>, < 40 , {}>}

_MMreverse_2 := reverse(valuesA);
_MMreverse_3 := reverse(valuesC);
_MMsemijoin_4 := semijoin(_MMreverse_2,_MMreverse_3);
_MMreverse_5 := reverse(_MMsemijoin_4);
var _MMmirror_6 := mirror(_MMreverse_5);
_MMjoin_7 := join(indexA,_MMmirror_6);
_MMjoin_8 := join(_MMmirror_6,valuesA);
_MMjoin_7.print();
_MMjoin_8.find(0@0).print();
_MMjoin_8.find(2@0).print();
# { 10 ,  30 }

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMreverse_4 := reverse(_MMjoin_3);
_MMnilcast_5 := _MMreverse_4.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesA);
_MMreverse_7 := reverse(_MMjoin_6);
_MMnilcast_8 := _MMreverse_7.reverse().mark(0@0).reverse();
_MMnilcast_9 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_10 := join(_MMnilcast_9,valuesC);
_MMnilcast_8.print();
_MMjoin_6.find(0@0).print();
_MMjoin_10.find(0@0).print();
_MMjoin_6.find(1@0).print();
_MMjoin_10.find(1@0).print();
_MMjoin_6.find(2@0).print();
_MMjoin_10.find(2@0).print();
# {<< 10 >, < 10 >>, << 10 >, < 10 >>, << 30 >, < 30 >>}

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMreverse_4 := reverse(_MMjoin_3);
_MMnilcast_5 := _MMreverse_4.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesA);
_MMreverse_7 := reverse(_MMjoin_6);
_MMnilcast_8 := _MMreverse_7.reverse().mark(0@0).reverse();
_MMnilcast_9 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_10 := join(_MMnilcast_9,valuesC);
_MMnilcast_8.print();
_MMjoin_6.find(0@0).print();
_MMjoin_10.find(0@0).print();
_MMjoin_6.find(1@0).print();
_MMjoin_10.find(1@0).print();
_MMjoin_6.find(2@0).print();
_MMjoin_10.find(2@0).print();
# {<< 10 >, < 10 >>, << 10 >, < 10 >>, << 30 >, < 30 >>}

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMcastnil_4 := _MMjoin_3.mark(0@0);
_MMnilcast_5 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesC);
_MMreverse_7 := reverse(indexA);
indexA.print();
valuesA.find(0@0).print();
reverse(select(reverse(_MMcastnil_4),0@0)).print();
_MMjoin_6.find(0@0).print();
_MMjoin_6.find(1@0).print();
valuesA.find(1@0).print();
reverse(select(reverse(_MMcastnil_4),1@0)).print();
valuesA.find(2@0).print();
reverse(select(reverse(_MMcastnil_4),2@0)).print();
_MMjoin_6.find(2@0).print();
valuesA.find(3@0).print();
reverse(select(reverse(_MMcastnil_4),3@0)).print();
# {<< 10 >, {< 10 >, < 10 >}>, << 20 >, {}>, << 30 >, {< 30 >}>, << 40 >, {}>}

_MMreverse_2 := reverse(valuesA);
_MMreverse_3 := reverse(valuesC);
_MMsemijoin_4 := semijoin(_MMreverse_2,_MMreverse_3);
_MMreverse_5 := reverse(_MMsemijoin_4);
_MMmirror_6 := mirror(_MMreverse_5);
_MMjoin_7 := join(indexA,_MMmirror_6);
_MMjoin_8 := join(_MMmirror_6,valuesA);
_MMjoin_7.print();
_MMjoin_8.find(0@0).print();
_MMjoin_8.find(2@0).print();
# {< 10 >, < 30 >}

_MMreverse_2 := reverse(valuesA);
_MMreverse_3 := reverse(valuesC);
_MMsemijoin_4 := semijoin(_MMreverse_2,_MMreverse_3);
_MMreverse_5 := reverse(_MMsemijoin_4);
_MMmirror_6 := mirror(_MMreverse_5);
_MMjoin_7 := join(indexA,_MMmirror_6);
_MMjoin_8 := join(_MMmirror_6,valuesA);
_MMjoin_7.print();
_MMjoin_8.find(0@0).print();
_MMjoin_8.find(2@0).print();
# {< 10 >, < 30 >}

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMreverse_4 := reverse(_MMjoin_3);
_MMnilcast_5 := _MMreverse_4.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesA);
_MMreverse_7 := reverse(_MMjoin_6);
_MMnilcast_8 := _MMreverse_7.reverse().mark(0@0).reverse();
_MMjoin_9 := join(_MMnilcast_5,valuesD);
var _MMnilcast_10 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_11 := join(_MMnilcast_10,valuesC);
_MMnilcast_8.print();
_MMjoin_6.find(0@0).print();
_MMjoin_9.find(0@0).print();
_MMjoin_11.find(0@0).print();
_MMjoin_6.find(1@0).print();
_MMjoin_9.find(1@0).print();
_MMjoin_11.find(1@0).print();
_MMjoin_6.find(2@0).print();
_MMjoin_9.find(2@0).print();
_MMjoin_11.find(2@0).print();
# {<< 10 ,  20 >,  10 >, << 10 ,  20 >,  10 >, << 30 ,  40 >,  30 >}

_MMreverse_2 := reverse(valuesC);
_MMjoin_3 := join(valuesA,_MMreverse_2);
_MMcastnil_4 := _MMjoin_3.mark(0@0);
_MMnilcast_5 := _MMjoin_3.reverse().mark(0@0).reverse();
_MMjoin_6 := join(_MMnilcast_5,valuesC);
_MMreverse_7 := reverse(indexA);
indexA.print();
valuesA.find(0@0).print();
valuesD.find(0@0).print();
reverse(select(reverse(_MMcastnil_4),0@0)).print();
_MMjoin_6.find(0@0).print();
_MMjoin_6.find(1@0).print();
valuesA.find(1@0).print();
valuesD.find(1@0).print();
reverse(select(reverse(_MMcastnil_4),1@0)).print();
valuesA.find(2@0).print();
valuesD.find(2@0).print();
reverse(select(reverse(_MMcastnil_4),2@0)).print();
_MMjoin_6.find(2@0).print();
valuesA.find(3@0).print();
valuesD.find(3@0).print();
reverse(select(reverse(_MMcastnil_4),3@0)).print();
# {<< 10 ,  20 >, { 10 ,  10 }>, << 20 ,  30 >, {}>, << 30 ,  40 >, { 30 }>, << 40 ,  10 >, {}>}

_MMreverse_2 := reverse(valuesA);
_MMreverse_3 := reverse(valuesC);
_MMsemijoin_4 := semijoin(_MMreverse_2,_MMreverse_3);
_MMreverse_5 := reverse(_MMsemijoin_4);
_MMmirror_6 := mirror(_MMreverse_5);
_MMjoin_7 := join(indexA,_MMmirror_6);
_MMjoin_8 := join(_MMmirror_6,valuesA);
_MMjoin_9 := join(_MMmirror_6,valuesD);
_MMjoin_7.print();
_MMjoin_8.find(0@0).print();
_MMjoin_9.find(0@0).print();
_MMjoin_8.find(2@0).print();
_MMjoin_9.find(2@0).print();
# {< 10 ,  20 >, < 30 ,  40 >}

_MMreverse_2 := reverse(indexA);
_MMoper_3 := {count}(indexB);
_MMmergecast_4 := mergecast(_MMreverse_2,_MMoper_3,0);
_MMoper_5 := [*](10,_MMmergecast_4);
_MMreverse_6 := reverse(_MMoper_5);
valuesA.print();
_MMreverse_6.print();
_MMjoin_7 := join(valuesA,_MMreverse_6);
_MMjoin_7.sort_ht().print();
var _MMjoin_7s := join(valuesA,_MMreverse_6).reverse().sort().reverse();
_MMjoin_7s.print();
_MMreverse_8 := reverse(_MMjoin_7);
_MMnilcast_9 := _MMreverse_8.reverse().mark(0@0).reverse();
_MMjoin_10 := join(_MMnilcast_9,valuesA);
var _MMreverse_11 := reverse(_MMjoin_10);
var _MMnilcast_12 := _MMreverse_11.reverse().mark(0@0).reverse();
var _MMjoin_13 := join(_MMnilcast_9,valuesD);
var _MMnilcast_14 := _MMjoin_7.reverse().mark(0@0).reverse();
_MMnilcast_14.sort_ht().print();
var _MMjoin_15 := join(_MMnilcast_14,indexB);
_MMjoin_15.sort_ht().print();
var _MMcastnil_16 := _MMjoin_15.mark(0@0);
var _MMnilcast_17 := _MMjoin_15.reverse().mark(0@0).reverse();
_MMnilcast_17.sort_ht().print();
var _MMjoin_18 := join(_MMnilcast_17,valuesB);
_MMjoin_18.sort_ht().print();
var _MMjoin_19 := join(_MMnilcast_14,_MMreverse_2);
_MMnilcast_12.sort_ht().print();
_MMjoin_10.find(0@0).print();
_MMjoin_13.find(0@0).print();
reverse(select(reverse(_MMcastnil_16),0@0)).print();
_MMjoin_18.find(0@0).print();
_MMjoin_10.find(1@0).print();
_MMjoin_13.find(1@0).print();
reverse(select(reverse(_MMcastnil_16),1@0)).print();
_MMjoin_18.find(1@0).print();
_MMjoin_10.find(2@0).print();
_MMjoin_13.find(2@0).print();
reverse(select(reverse(_MMcastnil_16),2@0)).print();
_MMjoin_18.find(2@0).print();
_MMjoin_18.find(3@0).print();
_MMjoin_18.find(4@0).print();
_MMjoin_10.find(3@0).print();
_MMjoin_13.find(3@0).print();
reverse(select(reverse(_MMcastnil_16),3@0)).print();
_MMjoin_18.find(5@0).print();
_MMjoin_18.find(6@0).print();
_MMjoin_18.find(7@0).print();
_MMjoin_18.find(8@0).print();
# {<< 10 ,  20 >, { 9000 }>, << 10 ,  20 >, { 8000 }>, << 30 ,  40 >, { 7000 ,  6000 ,  5000 }>, << 40 ,  10 >, { 4000 ,  3000 ,  2000 ,  1000 }>}

# 1

_MMoper_2 := +(1,1);
_MMoper_2.print();
#  2 

indexA.print();
valuesA.find(0@0).print();
valuesA.find(1@0).print();
valuesA.find(2@0).print();
valuesA.find(3@0).print();
# { 10 ,  20 ,  30 ,  40 }

_MMoper_2 := [+](valuesA,10);
_MMreverse_3 := reverse(_MMoper_2);
_MMjoin_4 := join(valuesA,_MMreverse_3);
_MMreverse_5 := reverse(_MMjoin_4);
_MMnilcast_6 := _MMreverse_5.reverse().mark(0@0).reverse();
_MMjoin_7 := join(_MMnilcast_6,valuesA);
_MMreverse_8 := reverse(_MMjoin_7);
_MMnilcast_9 := _MMreverse_8.reverse().mark(0@0).reverse();
_MMnilcast_10 := _MMjoin_4.reverse().mark(0@0).reverse();
_MMjoin_11 := join(_MMnilcast_10,_MMoper_2);
_MMnilcast_9.print();
_MMjoin_7.find(0@0).print();
_MMjoin_11.find(0@0).print();
_MMjoin_7.find(1@0).print();
_MMjoin_11.find(1@0).print();
_MMjoin_7.find(2@0).print();
_MMjoin_11.find(2@0).print();
# {< 20 ,  20 >, < 30 ,  30 >, < 40 ,  40 >}

_MMoper_2 := [+](valuesA,10);
_MMreverse_3 := reverse(_MMoper_2);
_MMjoin_4 := join(valuesA,_MMreverse_3);
_MMreverse_5 := reverse(_MMjoin_4);
_MMnilcast_6 := _MMreverse_5.reverse().mark(0@0).reverse();
_MMjoin_7 := join(_MMnilcast_6,valuesA);
_MMreverse_8 := reverse(_MMjoin_7);
_MMnilcast_9 := _MMreverse_8.reverse().mark(0@0).reverse();
_MMnilcast_10 := _MMjoin_4.reverse().mark(0@0).reverse();
_MMjoin_11 := join(_MMnilcast_10,_MMoper_2);
_MMnilcast_9.print();
_MMjoin_7.find(0@0).print();
_MMjoin_11.find(0@0).print();
_MMjoin_7.find(1@0).print();
_MMjoin_11.find(1@0).print();
_MMjoin_7.find(2@0).print();
_MMjoin_11.find(2@0).print();
# {< 20 ,  20 >, < 30 ,  30 >, < 40 ,  40 >}

_MMoper_2 := [+](valuesA,10);
_MMoper_3 := [+](_MMoper_2,20);
_MMreverse_4 := reverse(_MMoper_3);
_MMjoin_5 := join(valuesA,_MMreverse_4);
_MMreverse_6 := reverse(_MMjoin_5);
_MMnilcast_7 := _MMreverse_6.reverse().mark(0@0).reverse();
_MMjoin_8 := join(_MMnilcast_7,valuesA);
_MMreverse_9 := reverse(_MMjoin_8);
_MMnilcast_10 := _MMreverse_9.reverse().mark(0@0).reverse();
var _MMnilcast_11 := _MMjoin_5.reverse().mark(0@0).reverse();
var _MMjoin_12 := join(_MMnilcast_11,_MMoper_2);
_MMnilcast_10.print();
_MMjoin_8.find(0@0).print();
_MMjoin_12.find(0@0).print();
# {< 40 ,  20 >}

quit();
