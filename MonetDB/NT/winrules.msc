# -*- makefile -*-

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2007 CWI.
# All Rights Reserved.

!IFNDEF bits
!IF defined(BITS32)
bits=32
!ELSEIF defined(BITS64)
bits=64
!ELSE
bits=32
!ENDIF
!ENDIF

!IF $(bits) == 32
!IFNDEF BITS32
BITS32=True
!ENDIF
!ELSEIF $(bits) == 64
!IFNDEF BITS64
BITS64=True
!ENDIF
!ENDIF

# This is the location of pthreads for Win32, 
# see http://sources.redhat.com/pthreads-win32/
PTHREAD = C:\Pthreads
PTHREAD_INCS = "-I$(PTHREAD)\include"
!IF $(bits) == 32
PTHREAD_LIBS = "$(PTHREAD)\lib\pthreadVC2.lib"
!ELSE
PTHREAD_LIBS = "$(PTHREAD)\lib64\pthreadVC2.lib"
!ENDIF
PHP_INSTDIR = C:\php-525
PHP_SRCDIR = $(PHP_INSTDIR)\php-5.2.5
# for these, also see configure.py
PHP_EXTENSIONDIR = lib\php5

PYTHONBASE=C:\Python25
PYTHON_INCS=-I$(PYTHONBASE)\include
PYTHON_LIBS=$(PYTHONBASE)\libs\python25.lib
PYTHON_LIBDIR=share\MonetDB\python

!IFDEF HAVE_PCRE
# This is the loccation of the PCRE library
LIBPCRE = C:\Program Files\PCRE
PCRE_LIBS = "$(LIBPCRE)\lib\pcre.lib"
PCRE_CFLAGS = -DHAVE_LIBPCRE "-I$(LIBPCRE)\include"
!ENDIF

# !IFDEF HAVE_ICONV
# This is the location of the ICONV library
LIBICONV = C:\iconv-1.9.2.win$(bits)
ICONV_LIBS = "$(LIBICONV)\lib\iconv.lib"
ICONV_CFLAGS = -DHAVE_ICONV "-I$(LIBICONV)\include"
# !ENDIF

# !IFDEF HAVE_LIBZ
# This is the location of the Z library
LIBZLIB = C:\zlib-1.2.3.win$(bits)
!IF $(bits) == 32
Z_LIBS = "$(LIBZLIB)\lib\zdll.lib"
!ELSE
Z_LIBS = "$(LIBZLIB)\lib\zlib1.lib"
!ENDIF
Z_CFLAGS = -DHAVE_LIBZ "-I$(LIBZLIB)\include"
# !ENDIF

# !IFDEF HAVE_LIBXML2
# This is the location of the libxml2 library
LIBXML2 = C:\libxml2-2.6.30.win$(bits)
LIBXML2_CFLAGS = -DHAVE_LIBXML2 "-I$(LIBXML2)\include" "-I$(LIBZLIB)\include" "-I$(LIBICONV)\include"
!IF $(bits) == 32
LIBXML2_LIBS = "$(LIBXML2)\lib\libxml2.lib" "$(LIBZLIB)\lib\zdll.lib" "$(LIBICONV)\lib\iconv.lib"
!ELSE
LIBXML2_LIBS = "$(LIBXML2)\lib\libxml2.lib" "$(LIBZLIB)\lib\zlib1.lib" "$(LIBICONV)\lib\iconv.lib"
!ENDIF
# !ENDIF

# some programs we use, probably no need to edit

# install python, flex and bison on your systems 
PYTHON = python
YACC = bison -b y -y
LEX = flex 
SWIG = swig

ARCHIVER = lib
GENDLL =
RC = rc

MT = mt -nologo
JAVAC = javac
JAR = jar
ANT = ant.bat

# no need to edit beyond here..

!IFDEF DEBUG
CFLAGS = -GF -W3 -wd4273 -wd4102 -MDd -nologo -Zi -Od -D_DEBUG -RTC1 -ZI -I. -I$(TOPDIR) $(LIBC_INCS) $(INCLUDES)
NO_INLINE_CFLAGS =
!ELSE
CFLAGS = -GF -W3 -wd4273 -wd4102 -MD -nologo -Ox -I. -I$(TOPDIR) $(LIBC_INCS) $(INCLUDES)
NO_INLINE_CFLAGS = -Od -Ob0gysi-
!ENDIF

# No general LDFLAGS needed
INSTALL = copy
# TODO
# replace this hack by something like configure ...
MKDIR = mkdir
ECHO = echo
CD = cd

exec_prefix = $(prefix)

bindir = $(exec_prefix)\bin
sbindir = $(exec_prefix)\sbin
libexecdir = $(exec_prefix)\libexec
datadir = $(prefix)\share
sysconfdir = $(prefix)\etc
sharedstatedir = $(prefix)\com
localstatedir = $(prefix)\var
libdir = $(exec_prefix)\lib
infodir = $(prefix)\info
mandir = $(prefix)\man
includedir = $(prefix)\include
oldincludedir = \usr\include
pkgdatadir = $(datadir)\$(pkg)
pkglibdir = $(libdir)\$(pkg)
pkgincludedir = $(includedir)\$(pkg)

LIBC_INCS = $(PTHREAD_INCS)
MATH_LIBS =
SOCKET_LIBS = wsock32.lib

MEL=mel.exe
MX=Mx.exe
CP=copy
MV=copy
DEL=del
EDITBIN=editbin
NATIVE_WIN32 = 1

# we can't use the Windows utility find since it prints the file name
# we could use the Unix utility grep, but we can also use the Windows
# utility findstr, but with some care and feeding.
FILTER=findstr /v /l
FILTERPREF=/c:

!IFDEF DOCTOOLS
DOCTOOLS_FALSE=^#
!ENDIF
!IFDEF HAVE_JAVA
HAVE_JAVA_FALSE=^#
!ENDIF
!IFDEF HAVE_MONETDB_JAVA
HAVE_MONETDB_JAVA_FALSE=^#
!ENDIF
!IFDEF HAVE_MONETDB4
HAVE_MONETDB4_FALSE=^#
!ENDIF
!IFDEF HAVE_MONETDB5
HAVE_MONETDB5_FALSE=^#
!ENDIF
!IFDEF HAVE_PCRE
HAVE_PCRE_FALSE=^#
!ENDIF
!IFDEF HAVE_PERL_DEVEL
HAVE_PERL_DEVEL_FALSE=^#
!ENDIF
!IFDEF HAVE_PERL
HAVE_PERL_FALSE=^#
!ENDIF
!IFDEF HAVE_PERL_SWIG
HAVE_PERL_SWIG_FALSE=^#
!ENDIF
!IFDEF HAVE_PHP
HAVE_PHP_FALSE=^#
!ENDIF
!IFDEF HAVE_PYTHON_DEVEL
HAVE_PYTHON_DEVEL_FALSE=^#
!ENDIF
!IFDEF HAVE_PYTHON
HAVE_PYTHON_FALSE=^#
!ENDIF
!IFDEF HAVE_PYTHON_SWIG
HAVE_PYTHON_SWIG_FALSE=^#
!ENDIF
!IFDEF HAVE_SWIG
HAVE_SWIG_FALSE=^#
!ENDIF
!IFDEF PROFILING
PROFILING_FALSE=^#
!ENDIF

CONFIGURE=$(PYTHON) "$(TOPDIR)\..\..\MonetDB\conf\configure.py" "CLIENTS_BUILD=$(CLIENTS_BUILD)" "CLIENTS_PREFIX=$(CLIENTS_PREFIX)" "CLIENTS_SOURCE=$(CLIENTS_SOURCE)" "DOCTOOLS_FALSE=$(DOCTOOLS_FALSE)" "HAVE_JAVA_FALSE=$(HAVE_JAVA_FALSE)" "HAVE_MONETDB_JAVA_FALSE=$(HAVE_MONETDB_JAVA_FALSE)" "HAVE_MONETDB4_FALSE=$(HAVE_MONETDB4_FALSE)" "HAVE_MONETDB5_FALSE=$(HAVE_MONETDB5_FALSE)" "HAVE_PCRE_FALSE=$(HAVE_PCRE_FALSE)" "HAVE_PERL_DEVEL_FALSE=$(HAVE_PERL_DEVEL_FALSE)" "HAVE_PERL_FALSE=$(HAVE_PERL_FALSE)" "HAVE_PERL_SWIG_FALSE=$(HAVE_PERL_SWIG_FALSE)" "HAVE_PHP_FALSE=$(HAVE_PHP_FALSE)" "HAVE_PYTHON_DEVEL_FALSE=$(HAVE_PYTHON_DEVEL_FALSE)" "HAVE_PYTHON_FALSE=$(HAVE_PYTHON_FALSE)" "HAVE_PYTHON_SWIG_FALSE=$(HAVE_PYTHON_SWIG_FALSE)" "HAVE_SWIG_FALSE=$(HAVE_SWIG_FALSE)" "JDBCCLIENT_JAR=$(JDBCCLIENT_JAR)" "LIBICONV=$(LIBICONV)" "LIBXML2=$(LIBXML2)" "LIBZLIB=$(LIBZLIB)" "MONETDB4_BUILD=$(MONETDB4_BUILD)" "MONETDB4_PREFIX=$(MONETDB4_PREFIX)" "MONETDB4_SOURCE=$(MONETDB4_SOURCE)" "MONETDB5_BUILD=$(MONETDB5_BUILD)" "MONETDB5_PREFIX=$(MONETDB5_PREFIX)" "MONETDB5_SOURCE=$(MONETDB5_SOURCE)" "MONETDB_BUILD=$(MONETDB_BUILD)" "MONETDB_PREFIX=$(MONETDB_PREFIX)" "MONETDB_SOURCE=$(MONETDB_SOURCE)" "PACKAGE=$(pkg)" "PATHFINDER_BUILD=$(PATHFINDER_BUILD)" "PATHFINDER_SOURCE=$(PATHFINDER_SOURCE)" "PHP_EXTENSIONDIR=$(PHP_EXTENSIONDIR)" "prefix=$(prefix)" "PROFILING_FALSE=$(PROFILING_FALSE)" "PYTHON=$(PYTHON)" "SQL_BUILD=$(SQL_BUILD)" "SQL_SOURCE=$(SQL_SOURCE)" "TOPDIR=$(TOPDIR)" "VERSION=$(VERSION)" "MONETDB_JAVA_BUILD=$(MONETDB_JAVA_BUILD)" "MONETDB_JAVA_PREFIX=$(MONETDB_JAVA_PREFIX)" "MONETDB_JAVA_SOURCE=$(MONETDB_JAVA_SOURCE)"

# Use "nmake DEBUG=1" to get a debug build (assertions enabled);
# use "nmake NDEBUG=1" to get a release build (assertions disabled);
# use plain "nmake" to get the default.
!IFNDEF DEBUG
!IFDEF NDEBUG
CFLAGS = $(CFLAGS) -DNDEBUG
!ELSE
# default in case neither NDEBUG nor DEBUG are defined
CFLAGS = $(CFLAGS)
!ENDIF
!ELSE
CFLAGS = $(CFLAGS) -Wp64 -Wcheck
!ENDIF

PHP_INCS = -I$(PHP_SRCDIR) -I$(PHP_SRCDIR)\main -I$(PHP_SRCDIR)\TSRM -I$(PHP_SRCDIR)\Zend -DPHP_WIN32 -DZEND_WIN32 -DZEND_DEBUG=0 -DZTS=1
PHP_LIBS = $(PHP_INSTDIR)\php5embed.lib

{$(SRCDIR)}.mx.h:
	$(MX) $(MXFLAGS) -x h $<

.mx.h:
	$(MX) $(MXFLAGS) -x h $<

{$(SRCDIR)}.mx.c:
	$(MX) $(MXFLAGS) -x c $<

.mx.c:
	$(MX) $(MXFLAGS) -x c $<

{$(SRCDIR)}.mx.m:
	$(MX) $(MXFLAGS) -x m $<

.mx.m:
	$(MX) $(MXFLAGS) -x m $<

.m.mil: 
	$(MEL) -c $(CONFIG_H) $(INCLUDES) -mil $*.m > $@
	type $*.tmpmil >> $@
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

.m.mil:
	$(MEL) -c $(CONFIG_H) $(INCLUDES) -mil $*.m > $@
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

{$(SRCDIR)}.mx.tmpmil:
	$(MX) $(MXFLAGS) -l -x mil $<
	$(MV) $*.mil $*.tmpmil
	$(DEL) $*.mil

{$(SRCDIR)}.mx.mil:
	$(MX) $(MXFLAGS) -l -x mil $<

.mx.tmpmil:
	$(MX) $(MXFLAGS) -l -x mil $<
	$(MV) $*.mil $*.tmpmil
	$(DEL) $*.mil

.mx.mil:
	$(MX) $(MXFLAGS) -l -x mil $<

{$(SRCDIR)}.mx.mal:
	$(MX) $(MXFLAGS) -x mal $<
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

.mx.mal:
	$(MX) $(MXFLAGS) -x mal $<
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) $@ .libs\$@

{$(SRCDIR)}.mx.y:
	$(MX) $(MXFLAGS) -x y $<

.mx.y:
	$(MX) $(MXFLAGS) -x y $<

{$(SRCDIR)}.mx.l:
	$(MX) $(MXFLAGS) -x l $<

.mx.l:
	$(MX) $(MXFLAGS) -x l $<

{$(SRCDIR)}.mx.yy:
	$(MX) $(MXFLAGS) -x Y $<

.mx.yy:
	$(MX) $(MXFLAGS) -x Y $<

{$(SRCDIR)}.mx.ll:
	$(MX) $(MXFLAGS) -x L $<

.mx.ll:
	$(MX) $(MXFLAGS) -x L $<

{$(SRCDIR)}.c.obj:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

.c.obj:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

{$(SRCDIR)}.syms.def:
	echo EXPORTS > $@
	type $< >> $@

.syms.def:
	echo EXPORTS > $@
	type $< >> $@

{$(SRCDIR)}.brg.c:
	$(BURG) -c 1000 -d -I -p PF$* -o $@ < $<

.brg.c:
	$(BURG) -c 1000 -d -I -p PF$* -o $@ < $<

.SUFFIXES: .m .mx .proto_h .mil .glue_c .syms .def .brg
.PRECIOUS: .m 
