@/
The contents of this file are subject to the MonetDB Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html

Software distributed under the License is distributed on an "AS IS"
basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations
under the License.

The Original Code is the MonetDB Database System.

The Initial Developer of the Original Code is CWI.
Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
Copyright August 2008-2011 MonetDB B.V.
All Rights Reserved.
@

@f monet_utils
@a N.J. Nes
@* utils 
@T
The monet utils contains all general functionality needed by both clients and
server. 

@h
#ifndef _MU_H_
#define _MU_H_

#ifdef WIN32
#ifndef LIBMUTILS
#define mutils_export extern __declspec(dllimport)
#else
#define mutils_export extern __declspec(dllexport)
#endif
#else
#define mutils_export extern
#endif

#define SLASH_2_DIR_SEP(s) {char *t; for(t=strchr(s, '/'    ); t; t=strchr(t+1, '/'    )) *t=DIR_SEP;}
#define DIR_SEP_2_SLASH(s) {char *t; for(t=strchr(s, DIR_SEP); t; t=strchr(t+1, DIR_SEP)) *t='/'    ;}


#ifdef HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif

#include <stdio.h>		/* NULL, printf etc. */
#include <stdlib.h>
#include <errno.h>
#include <stdarg.h>		/* va_alist.. */

#ifdef HAVE_ALLOCA_H
# include <alloca.h>
#elif defined __GNUC__
# define alloca __builtin_alloca
#elif defined _AIX
# define alloca __alloca
#elif defined _MSC_VER
# include <malloc.h>
# define alloca _alloca
#else
# include <stddef.h>
void *alloca(size_t);
#endif

#include <assert.h>

/* Backward compatibility: configure figures out whether it needs to
   define "inline" as something else for the architecture it is testing.
   All uses in the source use "INLINE", so until all occurances of
   "INLINE" have been replaced by "inline", we just define the latter as
   the former. */
#define INLINE	inline

#define REGISTER	register

#ifdef HAVE_LONG_LONG
typedef long long lng;

#define SIZEOF_LNG SIZEOF_LONG_LONG
#else
#ifdef HAVE___INT64
typedef __int64 lng;

#define SIZEOF_LNG SIZEOF___INT64
#endif
#endif

#ifndef HAVE_SSIZE_T
#if SIZEOF_SIZE_T == SIZEOF_INT
typedef int ssize_t;
#else
typedef lng ssize_t;
#endif
#define HAVE_SSIZE_T 1
#endif

#ifndef HAVE_PTRDIFF_T
#if SIZEOF_SIZE_T == SIZEOF_INT
typedef int ptrdiff_t;
#else
typedef lng ptrdiff_t;
#endif
#define HAVE_PTRDIFF_T 1
#endif

/* define printf formats for printing size_t and ssize_t variables */
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901 && !defined(__svr4__) && !defined(WIN32) && !defined(__sgi)) || __GNUC__ > 3
#define SZFMT "%zu"
#define SSZFMT "%zd"
#elif defined(__MINGW32__)
#define SZFMT "%u"
#define SSZFMT "%ld"
#elif SIZEOF_SIZE_T == SIZEOF_INT
#define SZFMT "%u"
#define SSZFMT "%d"
#elif SIZEOF_SIZE_T == SIZEOF_LONG
#define SZFMT "%lu"
#define SSZFMT "%ld"
#elif SIZEOF_SIZE_T == SIZEOF_LONG_LONG || SIZEOF_SIZE_T == SIZEOF___INT64
#define SZFMT ULLFMT
#define SSZFMT LLFMT
#else
#error no definition for SZFMT/SSZFMT
#endif

/* prompts for MAPI protocol */
#define PROMPTBEG	'\001'	/* start prompt bracket */
#define PROMPT1		"\001\001\n"	/* prompt: ready for new query */
#define PROMPT2		"\001\002\n"	/* prompt: more data needed */

#define short_int_SWAP(s) ((short)(((0x00ff&(s))<<8) | ((0xff00&(s))>>8)))

#define normal_int_SWAP(i) (((0x000000ff&(i))<<24) | ((0x0000ff00&(i))<<8) | \
	               ((0x00ff0000&(i))>>8)  | ((0xff000000&(i))>>24))

#define long_long_SWAP(l) \
		((((lng)normal_int_SWAP(l))<<32) |\
		 (0xffffffff&normal_int_SWAP(l>>32)))

#endif /* _MU_H_ */
