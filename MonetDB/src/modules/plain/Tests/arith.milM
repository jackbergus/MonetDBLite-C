# the following example script will do each operation in the
# arith module. it can be used for testing.

module("arith");

setoid(oid(20000000));
var sht1 := sht(2);
var sht2 := sht(5);
var int1 := 5;
var int2 := 2;
var flt1 := 2.5;
var flt2 := 5.4;
var dbl1 := dbl(-2.500001);	 # may also need string since float is default
var dbl2 := dbl(54.00456789);      # real and is less significant	
var lng1 := lng("-9000000000000"); # string needed because lng doesn't fit in an
var lng2 := lng("5400456789");     # int
var oid1 := oid(int1);
var oid2 := oid(int2);

sht1.print();
sht2.print();
int1.print();
int2.print();
flt1.print();
flt2.print();
dbl1.print();
dbl2.print();
lng1.print();
lng2.print();
oid1.print();
oid2.print();

# DD/Bug 6389: (i%0) should return nil instead of crashing the server
CATCH((chr(1)%int(0))).print();
CATCH((sht(1)%int(0))).print();
CATCH((int(1)%sht(0))).print();
CATCH((int(1)%chr(0))).print();
CATCH((int(1)%int(0))).print();
CATCH((lng(1)%int(0))).print();
CATCH((dbl(1)%dbl(0))).print();
CATCH((flt(1)%flt(0))).print();

('a' < 'z').print();  ('z' < 'a').print();  ('a' < 'a').print();
('a' <= 'z').print(); ('z' <= 'a').print(); ('a' <= 'a').print();
('a' = 'z').print();  ('z' = 'a').print();  ('a' = 'a').print();
('a' >= 'z').print(); ('z' >= 'a').print(); ('a' >= 'a').print();
('a' > 'z').print();  ('z' > 'a').print();  ('a' > 'a').print();

(sht1 < sht2).print();  (sht2 < sht1).print();  (sht1 < sht1).print();
(sht1 <= sht2).print(); (sht2 <= sht1).print(); (sht1 <= sht1).print();
(sht1 = sht2).print();  (sht2 = sht1).print();  (sht1 = sht1).print();
(sht1 >= sht2).print(); (sht2 >= sht1).print(); (sht1 >= sht1).print();
(sht1 > sht2).print();  (sht2 > sht1).print();  (sht1 > sht1).print();

(int1 < int2).print();  (int2 < int1).print();  (int1 < int1).print();
(int1 <= int2).print(); (int2 <= int1).print(); (int1 <= int1).print();
(int1 = int2).print();  (int2 = int1).print();  (int1 = int1).print();
(int1 >= int2).print(); (int2 >= int1).print(); (int1 >= int1).print();
(int1 > int2).print();  (int2 > int1).print();  (int1 > int1).print();

(flt1 < flt2).print();  (flt2 < flt1).print();  (flt1 < flt1).print();
(flt1 <= flt2).print(); (flt2 <= flt1).print(); (flt1 <= flt1).print();
(flt1 = flt2).print();  (flt2 = flt1).print();  (flt1 = flt1).print();
(flt1 >= flt2).print(); (flt2 >= flt1).print(); (flt1 >= flt1).print();
(flt1 > flt2).print();  (flt2 > flt1).print();  (flt1 > flt1).print();

(dbl1 < dbl2).print();  (dbl2 < dbl1).print();  (dbl1 < dbl1).print();
(dbl1 <= dbl2).print(); (dbl2 <= dbl1).print(); (dbl1 <= dbl1).print();
(dbl1 = dbl2).print();  (dbl2 = dbl1).print();  (dbl1 = dbl1).print();
(dbl1 >= dbl2).print(); (dbl2 >= dbl1).print(); (dbl1 >= dbl1).print();
(dbl1 > dbl2).print();  (dbl2 > dbl1).print();  (dbl1 > dbl1).print();

(lng1 < lng2).print();  (lng2 < lng1).print();  (lng1 < lng1).print();
(lng1 <= lng2).print(); (lng2 <= lng1).print(); (lng1 <= lng1).print();
(lng1 = lng2).print();  (lng2 = lng1).print();  (lng1 = lng1).print();
(lng1 >= lng2).print(); (lng2 >= lng1).print(); (lng1 >= lng1).print();
(lng1 > lng2).print();  (lng2 > lng1).print();  (lng1 > lng1).print();

(oid1 < oid2).print();  (oid2 < oid1).print();  (oid1 < oid1).print();
(oid1 <= oid2).print(); (oid2 <= oid1).print(); (oid1 <= oid1).print();
(oid1 = oid2).print();  (oid2 = oid1).print();  (oid1 = oid1).print();
(oid1 >= oid2).print(); (oid2 >= oid1).print(); (oid1 >= oid1).print();
(oid1 > oid2).print();  (oid2 > oid1).print();  (oid1 > oid1).print();

("abcde" < "abcdf").print();  ("abcdf" < "abcde").print();  ("abcde" < "abcde").print();
("abcde" <= "abcdf").print(); ("abcdf" <= "abcde").print(); ("abcde" <= "abcde").print();
("abcde" = "abcdf").print();  ("abcdf" = "abcde").print();  ("abcde" = "abcde").print();
("abcde" >= "abcdf").print(); ("abcdf" >= "abcde").print(); ("abcde" >= "abcde").print();
("abcde" > "abcdf").print();  ("abcdf" > "abcde").print();  ("abcde" > "abcde").print();

(sht1 + sht2).print();
(sht1 - sht2).print();
(sht1 * sht2).print();
(sht1 / sht2).print();
(sht1 % sht2).print();

(sht1 + int2).print();
(sht1 - int2).print();
(sht1 * int2).print();
(sht1 / int2).print();

(sht1 + flt2).print();
(sht1 - flt2).print();
(sht1 * flt2).print();
(sht1 / flt2).print();

(sht1 + dbl2).print();
(sht1 - dbl2).print();
(sht1 * dbl2).print();
(sht1 / dbl2).print();

(sht1 + lng2).print();
(sht1 - lng2).print();
(sht1 * lng2).print();
(sht1 / lng2).print();

(int1 + sht2).print();
(int1 - sht2).print();
(int1 * sht2).print();
(int1 / sht2).print();

(int1 + int2).print();
(int1 - int2).print();
(int1 * int2).print();
(int1 / int2).print();
(int1 % int2).print();

(int1 + flt2).print();
(int1 - flt2).print();
(int1 * flt2).print();
(int1 / flt2).print();

(int1 + dbl2).print();
(int1 - dbl2).print();
(int1 * dbl2).print();
(int1 / dbl2).print();

(int1 + lng2).print();
(int1 - lng2).print();
(int1 * lng2).print();
(int1 / lng2).print();

(flt1 + sht2).print();
(flt1 - sht2).print();
(flt1 * sht2).print();
(flt1 / sht2).print();

(flt1 + int2).print();
(flt1 - int2).print();
(flt1 * int2).print();
(flt1 / int2).print();

(flt1 + flt2).print();
(flt1 - flt2).print();
(flt1 * flt2).print();
(flt1 / flt2).print();
(flt1 % flt2).print();

(flt1 + dbl2).print();
(flt1 - dbl2).print();
(flt1 * dbl2).print();
(flt1 / dbl2).print();

(flt1 + lng2).print();
(flt1 - lng2).print();
(flt1 * lng2).print();
(flt1 / lng2).print();

(dbl1 + sht2).print();
(dbl1 - sht2).print();
(dbl1 * sht2).print();
(dbl1 / sht2).print();

(dbl1 + int2).print();
(dbl1 - int2).print();
(dbl1 * int2).print();
(dbl1 / int2).print();

(dbl1 + flt2).print();
(dbl1 - flt2).print();
(dbl1 * flt2).print();
(dbl1 / flt2).print();

(dbl1 + dbl2).print();
(dbl1 - dbl2).print();
(dbl1 * dbl2).print();
(dbl1 / dbl2).print();
(dbl1 % dbl2).print();

(dbl1 + lng2).print();
(dbl1 - lng2).print();
(dbl1 * lng2).print();
(dbl1 / lng2).print();

(lng1 + sht2).print();
(lng1 - sht2).print();
(lng1 * sht2).print();
(lng1 / sht2).print();

(lng1 + int2).print();
(lng1 - int2).print();
(lng1 * int2).print();
(lng1 / int2).print();

(lng1 + flt2).print();
(lng1 - flt2).print();
(lng1 * flt2).print();
(lng1 / flt2).print();

(lng1 + dbl2).print();
(lng1 - dbl2).print();
(lng1 * dbl2).print();
(lng1 / dbl2).print();

(lng1 + lng2).print();
(lng1 - lng2).print();
(lng1 * lng2).print();
(lng1 / lng2).print();
(lng1 % lng2).print();

abs(sht2).print();
abs(int2).print();
abs(flt2).print();
abs(dbl2).print();
abs(lng2).print();

max(sht1,sht2).print();
max(int1,int2).print();
max(flt1,flt2).print();
max(dbl1,dbl2).print();
max(lng1,lng2).print();

min(sht1,sht2).print();
min(int1,int2).print();
min(flt1,flt2).print();
min(dbl1,dbl2).print();
min(lng1,lng2).print();

max(oid1,oid2).print();
min(oid1,oid2).print();

inv(flt2).print();
inv(dbl2).print();

(int1<<int2).print();
(int1>>int2).print();

(int1 or  int2).print();
(int1 and int2).print();
(int1 xor int2).print();
not(int2).print();

var bit1 := true;
var bit2 := false;
(bit1 or  bit2).print();
(bit1 and bit2).print();
(bit1 xor bit2).print();
not(bit2).print();

srand( 1234 );
rand().print();

quit();
