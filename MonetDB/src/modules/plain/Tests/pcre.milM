module("pcre");

# Tests of replacing of a single string

pcre_replace("abracadabra", "bra", "*", "").print();
# result: "a*cada*"

pcre_replace("abracadabra", "a.*a", "*", "").print();
# result: "*"

pcre_replace("abracadabra", "a.*?a", "*", "").print();
# result: "*c*bra"

pcre_replace("abracadabra", "a", "", "").print();
# result: "brcdbr"

# Case _sensitive_ replacing
pcre_replace("abracadabraABRACADABRA", "a.*?a", "*", "").print();
# result: "*c*braABRACADABRA"

# Case _insensitive_ replacing
pcre_replace("abracadabraABRACADABRA", "a.*?a", "*", "i").print();
# result: "*c*br*BR*D*"

# Multi-line string _without_ 'm' flag
pcre_replace("abcd\nabcd", "(^a)", "*", "").print();
# result: "*bcd\nabcd"

# Multi-line string _with_ 'm' flag
pcre_replace("abcd\nabcd", "(^a)", "*", "m").print();
# result: "*bcd\n*bcd"

# Multi-line, case-insensitive
pcre_replace("abcd\nABCD", "(^a)", "*", "m").print();
# result: "*bcd\nABCD"

# Multi-line, case-sensitive
pcre_replace("abcd\nABCD", "(^a)", "*", "mi").print();
# result: "*bcd\n*BCD"


# Tests of replacing of a BAT of strings
var mybat := bat(void, str);
mybat.append("aaaaabracadabra");
mybat.append("bbbbabracadabra");
mybat.append("ccccabracadabra");
mybat.append("ddddabracadabra");
mybat.append("aabbabracadabra");
mybat.append("abababracadabra");
mybat.append("aaccabracadabra");
mybat.append("acacabracadabra");
mybat.append("bcdbabracadabra");
mybat.append("abcdabracadabra");
mybat.append("ccddabracadabra");
mybat.append("cdcdabracadabra");
mybat.append("babracadabraddc");
mybat.append("abracadabra");
mybat.append("abracadabra\nABRACADABRA\nabracadabra\nABRACADABRA");
mybat:=mybat.reverse().mark(0@0).reverse();
#mybat.print();

# pcre_replace(mybat, "bra", "*", "")
pcre_replace(mybat, "bra", "*", "").print();

# pcre_replace(mybat, "a.*a", "*", "")
pcre_replace(mybat, "a.*a", "*", "").print();

# pcre_replace(mybat, "a.*?a", "*", "")
pcre_replace(mybat, "a.*?a", "*", "").print();

# pcre_replace(mybat, "a", "", "")
pcre_replace(mybat, "a", "", "").print();

# pcre_replace(mybat, "a.*?a", "*", "i")
pcre_replace(mybat, "a.*?a", "*", "i").print();

# pcre_replace(mybat, "(^a)", "*", "")
pcre_replace(mybat, "(^a)", "*", "").print();

# pcre_replace(mybat, "(^a)", "*", "m")
pcre_replace(mybat, "(^a)", "*", "i").print();

# pcre_replace(mybat, "(^a)", "*", "m")
pcre_replace(mybat, "(^a)", "*", "m").print();

# pcre_replace(mybat, "(^a)", "*", "mi")
pcre_replace(mybat, "(^a)", "*", "mi").print();

# Test if pcre_replace indeed only replace the matched string, and copy other
# strings unchanged
pcre_replace(mybat, "aaaa", "", "").print();

# Test if the head column is kept after a replace operation
mybat := bat(int, str);
mybat.insert(int(20),  "aaaaabracadabra");
mybat.insert(int(1), "bbbbabracadabra");
mybat.insert(int(2), "ccccabracadabra");
mybat.insert(int(3), "ddddabracadabra");
mybat.insert(int(4), "aabbabracadabra");
mybat.insert(int(5), "abababracadabra");
mybat.insert(int(6), "aaccabracadabra");
mybat.insert(int(7), "acacabracadabra");
mybat.insert(int(8), "bcdbabracadabra");
mybat.insert(int(9), "abcdabracadabra");
mybat.insert(int(10), "ccddabracadabra");
mybat.insert(int(11), "cdcdabracadabra");
mybat.insert(int(12), "babracadabraddc");
mybat.insert(int(42), "abracadabra");
mybat.insert(int(30), "abracadabra\nABRACADABRA\nabracadabra\nABRACADABRA");
#mybat.print();

# pcre_replace(mybat, "(^a)", "*", "mi")
pcre_replace(mybat, "(^a)", "*", "mi").print();

# Test if pcre_replace indeed only replace the matched string, and copy other
# strings unchanged
# pcre_replace(mybat, "aaaa", "", "")
pcre_replace(mybat, "aaaa", "", "").print();

# Test pcre_quote
var s := " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~\t\n";
pcre_replace(s, pcre_quote(s), "matched", "").print();

quit();
