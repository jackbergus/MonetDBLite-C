#!@PYTHON@

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2007 CWI.
# All Rights Reserved.

import sys
import os
import re
##import time

#############################################################################
#       FUNCTIONS

def Usage(THISFILE) :
    print """

Usage:  %s [-I<exp>] <files>

-I<exp> : ignore lines matching <exp> during first count (optional, default: -I'^#`)
<files> : list of files to be processed

""" % THISFILE
### Usage(THISFILE) #

def warn(THISFILE,TEXT) :
    sys.stderr.write("%s warning: %s\n" % (THISFILE,TEXT))
### warn(THISFILE,TEXT) #

def wlen(str) :
    return len(' '.join(str.split()))
### wlen(str) #

test = (
        # potential differences, which we want to ignore
        re.compile('(?:'+')|(?:'.join([
## sql5
                      r"^printf\(\"\\nReady.\\n\"\);",
                      r"^quit\(\);",
##                    r"^module\(mprof\);$",
##                    r'^pm(?:[BE]\("(?:global_.+|[a-zA-Z0-9_]+[0-9])"\)|Summary\(\));$',
##                    r'^printf\("#~BeginProfilingOutput~#\\n"\);$',
##                    r"^Mdestroydb: processing database ..*. in ",
##                    r"^Mcreatedb: processing database ..*. in ",
##                    r"^Mcreatedb: using default dbdir ",
##                    r"^Mcreatedb: calling .Mserver .*-db .* for the first time..$",
##                    r"^Mcreatedb: database .* has been initialized succesfully!$",
                      r"^!WARNING: GDKlockHome: created directory .*$",
                      r"^!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.$",
                      r"^!WARNING: BBPdir: initializing BBP.$",
##                    r"^connection= .*:[0-9]*$",
##                    r"^Connecting to server: localhost:[0-9]*$",
##                    r"^server listening on port [0-9]*$",
##                    r"^SQL  connected to database .* using schema .*$",
                      r"^MAPI  = .*@.*:[0-9]*$",
                      r'^QUERY = execute at { ".*:[0-9]*" }$',
                    r"^Pathfinder (?:XQuery Compiler|XML Shredder) \(.Revision: .* .\)$",
##                    r"^SQL  .* affected$",
##                    r": Symbol .(?:exit|_setjmp). causes overflow in R_X86_64_PC32 relocation$",
##                    r"^\+\=+\+$",
##                    r"^\+\-+\+$",
                # Tokens depend on flex/bison
                    r'^\[ "TOK_[A-Z]+",\t* +"int",\t* +"frozen",\t* +"constant",\t* +"[0-9]+"\t* +\]',
                # ant output we want to ignore
                    r'^Buildfile:.*$',
                    r'^Building jar: .*$',
                    r'^Total time: [0-9]+ seconds?$',
                # remove wine errors:
                    r"^fixme:.*$",
                # ignore big- vs. little-endian byte-orders in test tests/BugDay_2005-10-06_4.8/Tests/print_CTgroup.SF-1315791.*:
                    r"^\[ .?\\000\\000\\000.?\\000\\000\\000.? \]$",
                # ignore compile date/time in helps messages:
                    r"^COMPILED:  by adm on .*$",
                # ignore varying BAT IDs in error message (test leftfetchjoin_crash.SF-1705726)
                    r"^!ERROR: BATfetchjoin\(tmp_[0-9]+,tmp_[0-9]+\) does not hit always .* => can't use fetchjoin.$",
                # `fuser` (in MkillUsers) triggers these errors on Gentoo with "hardened" kernel
                    r'^! Cannot open /proc/net/unix: Permission denied$',
                    r'^! Cannot stat file /proc/[0-9]+/fd/[0-9]+: (?:No such file or directory|Permission denied)$',
                # Pathfinder: extra error messages that occur only with assertions enabled
                    r'^[ \t]*!# halted in .*, line [0-9]+$',
                # suspicious output/messages/errors? most probably triggered by MkillUsers, but apparently not causing any harm:
                    r'^! /.*/bin/[Mm](?:(?:server5?|apiClient|timeout|diff):e+|log:)$',
                 ])+')',  re.MULTILINE),
        # differing error messages when loading non-existing modules in dynamic and static Mserver
        re.compile('(?:'+')|(?:'.join([
                    r"^!ERROR: DL_open: Unknown error.$",
                    r"^!ERROR: DL_open: library not found \(STATIC\).$",
                 ])+')',  re.MULTILINE),
        re.compile('(?:'+')|(?:'.join([
                    r"^!ERROR: TBL_loadmod: module load .* cancelled.$",
                 ])+')',  re.MULTILINE),
        re.compile('(?:'+')|(?:'.join([
                    r"^!ERROR: module\(.*\): load error.$",
                 ])+')',  re.MULTILINE),
        # differences due to property-checking, which we want to treat as "minor differences"
        re.compile('(?:'+')|(?:'.join([
##                    r'^synced\(x,[yz]\) := (?:true|false)$',
##                #dir(): # name                 htype          ttype          count       heat        dirty                      status             kind               refcnt      lrefcnt     #
##                    r'^\[ "[A-Za-z0-9_]+",\t* +"[a-z_]+",\t* +"[a-z_]+",\t* +[0-9]+,\t* +[0-9]+,\t* +"(?:dirty|clean|diffs)",\t* +"(?:load|disk)",\t* +"(?:tran|pers)",\t* +[0-9]+,\t* +[0-9]+\t* +\]$',
##                    r'^\[ ".+",\t* +0,\t* +"(?:load|disk)",\t* +"(?:tran|pers)",\t* +0\t* +\]$',
##                # tests/from_Twente/Bugs/Arjen_01:
##                    r'^\[ "(?:(?:bat|cur)Stamp|[ht]align(?:|flushed))",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$',
##                    r'^\[ "batId",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+"\t* +\]$',
##                    r'^\[ "lastUsed",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+"\t* +\]$',
##                    r'^\[ "bat(?:Cacheid|Parentid)",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$',
##                    r'^\[ "bat(?:Share|Ref)cnt",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]"\t* +\]$',
##                    r'^\[ "batDirtydesc",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"(?:dirty|clean)",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty"\t* +\]$',
##                    r'^\[ "batBuns\.(?:free|(?:max)?size)",\t* +"(?:20|212|40|424)",\t* +"(?:20|212)",\t* +"(?:8|56)",\t* +"(?:4|16|32|212|424)",\t* +"(?:8|56)",\t* +"(?:16|212|32|424)",\t* +"(?:3|24|48|424|848)",\t* +"(?:3|24|48|424|848)",\t* +"(?:12|212|24|424)",\t* +"(?:3|24|48|424|848)",\t* +"(?:12|212)"\t* +\]$',
##                    r'^\[ "head",\t* +"void",\t* +"void",\t* +"void",\t* +"v?oid",\t* +"void",\t* +"oid",\t* +"v?oid",\t* +"v?oid",\t* +"oid",\t* +"void",\t* +"void"\t* +\]$',
##                    r'^\[ "hdense",\t* +"1",\t* +"1",\t* +"1",\t* +"[01]",\t* +"1",\t* +"[01]",\t* +"[01]",\t* +"[01]",\t* +"[01]",\t* +"1",\t* +"1"\t* +\]$',
##                    r'^\[ "hvarsized",\t* +"1",\t* +"1",\t* +"1",\t* +"[01]",\t* +"1",\t* +"0",\t* +"[01]",\t* +"[01]",\t* +"0",\t* +"1",\t* +"1"\t* +\]$',
##                    r'^\[ "hloc",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"[04]",\t* +"0"\t* +\]$',
##                    r'^\[ "hsorted",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"(?:1|65)",\t* +"65",\t* +"65"\t* +\]$',
##                    r'^\[ "hseqbase",\t* +"0@0",\t* +"0@0",\t* +"0@0",\t* +"(?:1@0|nil)",\t* +"0@0",\t* +"(?:0@0|nil)",\t* +"(?:1@0|nil)",\t* +"(?:1@0|nil)",\t* +"(?:1@0|nil)",\t* +"0@0",\t* +"0@0"\t* +\]$',
##                    r'^\[ "tail",\t* +"oid",\t* +"int",\t* +"bit",\t* +"void",\t* +"bit",\t* +"void",\t* +"v?oid",\t* +"void",\t* +"void",\t* +"v?oid",\t* +"int"\t* +\]$',
##                    r'^\[ "tdense",\t* +"1",\t* +"0",\t* +"0",\t* +"1",\t* +"0",\t* +"1",\t* +"[01]",\t* +"1",\t* +"1",\t* +"[01]",\t* +"0"\t* +\]$',
##                    r'^\[ "tvarsized",\t* +"0",\t* +"0",\t* +"0",\t* +"1",\t* +"0",\t* +"1",\t* +"[01]",\t* +"1",\t* +"1",\t* +"[01]",\t* +"0"\t* +\]$',
##                    r'^\[ "tloc",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"[04]",\t* +"[04]",\t* +"0",\t* +"0",\t* +"0"\t* +\]$',
##                    r'^\[ "tsorted",\t* +"(?:1|65)",\t* +"(?:1|65)",\t* +"(?:0|65)",\t* +"65",\t* +"0",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"(?:1|65)"\t* +\]$',
##                    r'^\[ "tseqbase",\t* +"0@0",\t* +"nil",\t* +"nil",\t* +"0@0",\t* +"nil",\t* +"0@0",\t* +"(?:0@0|nil)",\t* +"0@0",\t* +"0@0",\t* +"(?:1@0|nil)",\t* +"nil"\t* +\]$',
##                    r'^\[ "batCopiedtodisk",\t* +"[01]",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0"\t* +\]$',
##                # tests/from_Twente/Bugs/Arjen_02:
##                    r'^\[ "(?:(?:bat|cur)Stamp|[ht]align(?:|flushed))",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$',
##                    r'^\[ "batId",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+"\t* +\]$',
##                    r'^\[ "lastUsed",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+"\t* +\]$',
##                    r'^\[ "bat(?:Cacheid|Parentid)",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$',
##                    r'^\[ "bat(?:Share|Ref)cnt",\t* +"[0-2]",\t* +"[0-2]",\t* +"[0-2]"\t* +\]$',
##                    r'^\[ "batBuns\.(?:free|(?:max)?size)",\t* +"(?:16|212)",\t* +"(?:7|56)",\t* +"(?:2|8|212|16|424)"\t* +\]$',
##                    r'^\[ "head",\t* +"void",\t* +"void",\t* +"v?oid"\t* +\]$',
##                    r'^\[ "h(?:dense|varsized)",\t* +"1",\t* +"1",\t* +"[01]"\t* +\]$',
##                    r'^\[ "hseqbase",\t* +"0@0",\t* +"0@0",\t* +"(?:2@0|nil)"\t* +\]$',
##                    r'^\[ "tsorted",\t* +"(?:1|65)",\t* +"(?:0|65)",\t* +"65"\t* +\]$',
##                    r'^\[ "batCopiedtodisk",\t* +"[01]",\t* +"0",\t* +"0"\t* +\]$',
##                # tests/from_Twente/moa/test:
##                    r'^\[ [01]@0,\t* +[10]@0\t* +\]$',
##                    r'^\[ (?:[01]@0,\t* +)?(?:40[89]@0|[89]000)\t* +\]$',
##                    r'^\[ (?:[24]@0,\t* +)?(?:40[57]@0|[57]000)\t* +\]$',
##                    r'^\[ (?:[58]@0,\t* +)?(?:40[14]@0|[14]000)\t* +\]$',
##                    r'^\[ (?:[67]@0,\t* +)?(?:40[23]@0|[23]000)\t* +\]$',
##                    r'^\[ 3@0,\t* +40[1234]@0\t* +\]$',
##                    r'^\[ 2@0,\t* +406@0\t* +\]$',
##                    r'^_MMjoin_18\.find\(7@0\)\.print;$',
##                # src/modules/plain/salgebra (on WindowsNT):
##                    r'^\[ "batId",\t* +"(?:28|29|30|31)"\t* +\]$',
##                    r'^\[ (?:28|29|30|31),\t* +"ti",\t* +2,\t* +ti\t* +\]$',
##                # src/modules/plain/mmath[2], tests/BugReports/Tests/no.125 (Linux.GNU.32):
##                    r'^\[ \-?1\.2246(?:467991473532|063538223773)e\-0?16 \]$',
##                    r'^\[ 6\.123(?:233995736766|0317691118863)e\-0?17 \]$',
##                    r'^\[ -1\.8369(?:701987210297|095307335659)e\-0?16 \]$',
##                    r'^\[ 1\.6331[28]e\+0?16 \]$',
##                    r'^\[ 5\.443(?:75|93)e\+0?15 \]$',
##                    r'^\[ 2\.302585092994045[59] \]$',
##                    r'^\[ 0\.707106781186547(?:46|57) \]$',
##                    r'^\[ 1\.047197551196597[69] \]$',
##                    r'^\[ 16331(?:778728383844|239353195370) \]$',
##                    r'^\[ 5443(?:926242794615|746451065123) \]$',
##                    r'^\[ 0\.1000000014901161[12] \]$',
##                    r'^\[ (?:0\.99999999999999989|1) \]$',
##                    r'^\[ \-?0\.523598775598298(?:93|82) \]$',
##                    r'^\[ 2\.094395102393195[73] \]$',
                # src/modules/plain/aggr[X3]:
                    r'^\[ .*(?:,\t* ? "?2\.562203[64]3e\+13"?)+\t* ? \]$',
                    r'^\[ .*(?:,\t* ? "?7\.65432(?:119|072)"?)+\t* ? \]$',
                    r'^\[ .*(?:,\t* ? "?7\.6543209876543(?:2(?:[13]2?|21)|195)"?)+\t* ? \]$',
                    r'^\[ .*(?:,\t* ? "?6\.6666666666666(?:572|67)"?)+\t* ? \]$',
                    r'^\[ .*(?:,\t* ? "?6\.6666666666666(?:288|67)"?)+\t* ? \]$',
                    r'^\[ .*(?:,\t* ? "?6\.6666666666666(?:128|67)"?)+\t* ? \]$',
                    r'^\[ .*(?:,\t* ? "?158\.765432098765(?:22|36?|44|59|64)"?)+\t* ? \]$',
##                # src/modules/plain/decimal:
##                    r'^\[ "[dn]ec_tiny",\t* +1122E\-30\t* +\]$',
##                    r'^\[ "[dn]ec_small",\t* +2244\t* +\]$',
##                    r'^\[ "[dn]ec_num",\t* +4488E15\t* +\]$',
##                    r'^\[ "[dn]ec_big",\t* +1122E40\t* +\]$',
##                    r'^\[ "[dn]ec_huge",\t* +2244E9010\t* +\]$',
##                # src/modules/plain/color:
##                    r'^\[ 0\.498039(?:18|21)6 \]$',
##                # src/monet/monet_mod_cnt-copy_C:
##                    r'^\[ "(?:mapi_params|tmp_62)",\t* *[10],\t* *[10],\t* *0\t* *\]$',
                # src/gdk/cast:
                    r'^\[ (?:\-|)0 \]$',
                # src/monet/modrefcnt1 & tests/BugDay_2005-11-09_4.9.3/double_load_double_drop.SF-1082293 (on Itanium)
                    r"^!ERROR: DESCload: atom 'lock' unknown, in BAT '[0-9]+'.$",
                # pathfinder/tests/XQuery/fn_aps:
                    r'^0.900000 0.500000 0.400000 (?:\-|)0.000000 0.400000 0.500000 0.900000 1 *$',
                # pathfinder/tests/XPathMark/Tests/Q1[023]:
                    r'^(?:</item>|)<item (?:id="item9"|featured="yes") (?:id="item9"|featured="yes")>$',
##                # src/mapi/monet_BATs (on Linux2.4.26.ntv_32-d):
##                    r'^\[ "monet_mod_use",\t* *(?:44|66)\t* *\]$',
##                # Intel compiler seems to do some (re-)compilation for src/mapi/examples/C/
##                    r'^IPO: using IR for .*$',
##                    r'^IPO: performing single-file optimizations$',
##                # src/tools/{client,multiClientSeq}
##                    r'^ERROR = (?:Connection terminated|Lost connection with server)$',
##                    r'^ERROR = (?:communication line broken|Connection lost)$',
                # sql/src/benchmarks/arno_flt/Tests/init:
                    r'^.*\t2.7445021260064(?:099|1)e\-06\t',
                # Broken sql error messages:
                    r'^QUERY = (?:\-\-|select|insert|INSERT) ',
##                # pathfinder: loader/usage (without BerkeleyDB):
##                    r'^     -c: compress node properties \(40% encoding speed\)$',
                # ld warnings on IRIX64:
                    r"^ld64: WARNING 84 : .*/common/.libs/libmutils.so is not used for resolving any symbol.$",
                # (extra) error messages that used to occur with M4/sql but don't any more with M5/sql:
                    r'^.*!ERROR: .*operation failed.$',
                # suggested alternatives in case of XQuery type errors:
                    r'^type error:   .*$',
                # Debugging "strange" errors on Solaris x86:
                    "^!ERROR: interpret: no matching MIL operator to '\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb\xdb.*$",
                 ])+')',  re.MULTILINE)
       )

        # "normalize" differences in error messages caused by flex/bison:
        # matched groups from "norm_in" are replaced by the respective
        # element of "norm_out", unless the latter is "None" (then, the
        # respective match is kept as-is).
norm_in  = re.compile('(?:'+')|(?:'.join([
    r'^(ERROR = !| *!|)(syntax|parse|parse error: syntax)( error, )(unexpected .* on line |unexpected .* in: )?(.*)\n',                         # 01: 5
    r'^(!ERROR: .*: [0-9]+ times inserted nil due to errors at tuples )([0-9]+)(\..*)\n',                                                       # 02: 3
    r'^(ERROR =|       )( !ERROR: | !SQLException:assert:| !SQLException:sql: | !SQLException:| !MALException:)([^:]+)(: *)([^ ].*)\n',         # 03: 5
    r'^(Connection warning:.*\()(mserver_mal|mserver_sql)(\).*)\n',                                                                             # 04: 3
    r'^(ERROR: I/O warning : failed to load external entity ")(.*)(".*)\n',                                                                     # 05: 3
    r'^(ERROR: shred:mainSHREDDER: xmlCreateURLParserCtxt\(")(.*)("\) failed.*)\n',                                                             # 06: 3
    r'^(ERROR: err:FORG0001: could not cast value)( from )?(.*)( to )(.*)(\..*)\n',                                                             # 07: 6
    r"^(type error: can't cast type ')(.*)(' to type ')(.*)('.*)\n",                                                                            # 08: 5
    r'^(type error: no variant of function )(.*)( accepts the given argument type\(s\): )(.*)\n',                                               # 09: 4
    r'^(type error: illegal arguments for function )(.*)\n',                                                                                    # 10: 2
    r"^(ERROR: pcre_replace: .flags. contains invalid character ')(.*)('.*)\n",                                                                 # 11: 3
    r"^(ERROR: err:XPTY0004: illegal qname ')(.*)('.*)\n",                                                                                      # 12: 3
    r'^(ERROR: err:XQDY0025: attribute names are not unique )(in constructed element )?(.*)\n',                                                 # 13: 3
    r"^(error in function application: at )(.*)(: wrong number of arguments for function `)(.*)(' \(expected )(.*)(, got )(.*)(\).*)\n",        # 14: 9
    r'^(error in function application: at )(.*)(: )(.*)( expects at least .* arguments? \(got .*\).*)\n',                                       # 15: 5
    r'^(ERROR: err:FOER0000)(.*)\n',                                                                                                            # 16: 2
    r"^(illegal reference to context node: at )(.*)(: )(``.'' is unbound|position information not available)(.*)\n",                            # 17: 5
    r'^(variable\(s\) out of scope or unknown: at )(.*)\n',                                                                                     # 18: 2
    r'^(bad usage of XML namespaces: at )(.*)\n',                                                                                               # 19: 2
    r'^(QUERY = import rpc-module namespace xrpc = "http://www.monetdb.nl/basicfunctions" at ")(/.*)(/tests/XRpc/basic_queries/Tests/basicfunctions.xq";)\n', # 20: 3
    r"^(QUERY = connect)( to|)( ')(localhost)(' port )([0-9]+)( .*)\n",                                                                         # 21: 7
    r"^([Uu]sage: )(/.*/|)(lt-|)([A-Za-z0-9_]+)([ \t].*)\n",                                                                                    # 22: 5
    r'^(.*: at )(\([0-9]+,[0-9]+\-[0-9]+,[0-9]+\))(: .*)\n',                                                                                    # 90: 3
    r'^(fatal error|ERROR)(: err:FORG0005, fn:exactly-one called with a sequence containing zero or more than one item..*)()\n',                # 99: 3
])+')',  re.MULTILINE)
norm_hint = '# the original non-normalized output was: '
norm_out = (
#   None, 'syntax/parse', None, 'unexpected ... on line/in: ', None,                                    # 01: 5
    None, 'syntax/parse', None, '', '',                                                                 # 01: 5
    None, '...', None,                                                                                  # 02: 3
    None, ' !ERROR', '', ': ', None,                                                                    # 03: 5
    None, 'mserver_sql', None,                                                                          # 04: 3
    None, '...', None,                                                                                  # 05: 3
    None, '...', None,                                                                                  # 06: 3
    None, None, '...', None, '...', None,                                                               # 07: 6
    None, '...', None, '...', None,                                                                     # 08: 5
    None, '...', None, '...',                                                                           # 09: 4
    None, '...',                                                                                        # 10: 2
    None, '...', None,                                                                                  # 11: 3
    None, '...', None,                                                                                  # 12: 3
    None, None, '...',                                                                                  # 13: 3
    None, '...', None, '...', None, '...', None, '...', None,                                           # 14: 9
    None, "...: wrong number of arguments for function `...' (expected ..., got ...)", '', '', '',      # 15: 5
    None, ': ...',                                                                                      # 16: 2
    None, '...', None, '...', None,                                                                     # 17: 5
    None, '...',                                                                                        # 18: 2
    None, '...',                                                                                        # 19: 2
    None, '$TSTSRCBASE', None,                                                                          # 20: 3
    None, None, None, '<HOST>', None, '<MAPIPORT>', None,                                               # 21: 7
    None, '', '', None, None,                                                                           # 22: 5
    None, '...', None,                                                                                  # 90: 3
    '=ERROR', None, '\n#',                                                                              # 99: 3
##    '=ERROR', None, '''
##type error: no variant of function ... accepts the given argument type(s): ... %s
###type error: no variant of function fn:exactly-one accepts the given argument type(s): ...
##type error: maybe you meant:
##=type error:   fn:exactly-one (node*) as node %s
###type error:   fn:exactly-one (node*) as node
##type error: illegal arguments for function ... %s
###type error: illegal arguments for function fn:exactly-one
###''' % (norm_hint[:-1], norm_hint[:-1], norm_hint[:-1]),                                                # 99: 3
)


def mFilter (FILE, IGNORE) :
    fin = open(FILE, "rU")
    LINE = fin.readline().replace('\r','')
    while  len(LINE)  and  ( len(LINE) < 15  or  LINE[:15] not in ("stdout of test ", "stderr of test ") ):
        LINE = fin.readline().replace('\r','')
    fin.close()
    if  len(LINE) >= 15  and  LINE[:15] in ("stdout of test ", "stderr of test "):
        WHAT, TST, TSTDIR = re.search("^std(out|err) of test .(.*). in directory .(.*). itself:", LINE, re.MULTILINE).groups()
    else:
        WHAT, TST, TSTDIR = "", "", ""


    ftmp = []
    ig = n = 0
    il = iw = ic = el = ew = ec = al = aw = ac = 0
    for iline in open(FILE):
        iline = iline.replace('\r', '')
        oline = xline = ""
        if iline == "#~BeginVariableOutput~#\n"  or  iline == "#~BeginProfilingOutput~#\n":
            ig = 1
            n = 0
        if ig  and  ( len(iline) == 0  or  iline[0] != "!"  or  iline[:9] != "ERROR = !" ):
            # ignore differences in "VariableOutput" or "ProfilingOutput"
            oline = "#~ " + iline
            n = n + 1
        elif test[0].match(iline):
            # potential differences, which we want to ignore; see above
            oline = "#~ " + iline
        elif test[4].match(iline):
            # differences due to property-checking, which we want to treat as "minor differences"; see above
##            if os.name == "nt" and iline[:5] == 'quit();':
##                oline = "#" + iline
##            else:
            oline = "=" + iline
##        elif len(ftmp) > 2              and \
##             test[3].match(iline)       and \
##             test[2].match(ftmp[-1])    and \
##             test[1].match(ftmp[-2]):
##            # differing error messages when loading non-existing modules in dynamic and static Mserver; see above
##            oline = iline
##            for i in -1, -2:
##                w = len(ftmp[i].split())
##                c = wlen(ftmp[i])
##                il = il - 1
##                iw = iw - w
##                ic = ic - c
##                el = el - 1
##                ew = ew - w
##                ec = ec - c
##                ftmp[i] = "#~ " + ftmp[i]
        elif norm_in.match(iline):
            # "normalize" differences in error messages caused by flex/bison; see above
            grps_in = norm_in.match(iline).groups()
            oline = ''
            i = 0
            while i < len(grps_in):
                if grps_in[i] is not None:
                    if norm_out[i] is None:
                        oline += grps_in[i]
                    else:
                        oline += norm_out[i]
                i+=1
            oline += '\n'
            xline = norm_hint + iline
        else:
            oline = iline
        if iline == "#~EndVariableOutput~#\n":
            ig = 0
            xline = "~ " + str(n) + " ~\n"
        if iline == "#~EndProfilingOutput~#\n":
            ig = 0
        for ln in oline, xline:
            if len(ln):
                w = len(ln.split())
                c = wlen(ln)
                al = al + 1
                aw = aw + w
                ac = ac + c
                if ln != os.linesep  and  \
                   not re.match(IGNORE,ln, re.MULTILINE):
                    el = el + 1
                    ew = ew + w
                    ec = ec + c
                    if not re.match('^=',ln, re.MULTILINE):
                        il = il + 1
                        iw = iw + w
                        ic = ic + c
                ftmp.append(ln)

    fout = open(FILE + ".FILTERED", "w")
    if (al > 0) or (aw > 0) or (ac >0):
        fout.write("Statistics about std"+WHAT+" of test '"+TST+"` in directory '"+TSTDIR+"`:\n")
        fout.write("  %9d lines, %9d words, %9d chars   in lines not matching '^$|%s|^=`\n" % (il,iw,ic,IGNORE))
        fout.write("= %9d lines, %9d words, %9d chars   in lines not matching '^$|%s`\n"    % (el,ew,ec,IGNORE))
        fout.write("# %9d lines, %9d words, %9d chars   in all lines\n"                     % (al,aw,ac))
        fout.write("\n")
        for ln in ftmp:
            try:
                fout.write(ln)
            except IOError, (IOerrNo, IOerrStr):
                warn(THISFILE, "Writing to output file '%s' failed with #%d: '%s'." % (fout.name, IOerrNo, IOerrStr))
                if IOerrNo == 28:
                    # No space left on device
                    warn(THISFILE, "Removing input file '%s'." % FILE)
                    try:
                        os.remove(FILE)
                        fin = open(FILE,"w")
                        fin.write("%s: Removed '%s' to create space for '%s'.\n" % (THISFILE, FILE, fout.name))
                        fin.close()
                    except:
                        pass
                    try:
                        fout.write(ln)
                    except IOError, (IOerrNo, IOerrStr):
                        warn(THISFILE, "Writing to output file '%s' failed with #%d: '%s'." % (fout.name, IOerrNo, IOerrStr))
        fout.flush()
    fout.close()
##    if os.name == "nt":
##        time.sleep(1)
### mFilter (FILE, IGNORE) #

#############################################################################
#       MAIN

def main(argv) :
    import getopt
    THISFILE = os.path.basename(argv[0])
    try:
        opts, args = getopt.getopt(argv[1:], "?hI:", ["help"])
    except getopt.GetoptError:
        Usage(THISFILE)
        sys.exit(1)

    IGNORE = "^#"
    for o, a in opts:
        if o in ("-?", "-h", "--help"):
            Usage(THISFILE)
            sys.exit(0)
        if o == "-I":
            IGNORE = a

    for f in args:
        if os.path.isfile(f):
            mFilter(f, IGNORE)
        else:
            warn(THISFILE, "file missing: " + f)
### main(argv) #

if __name__ == "__main__":
    main(sys.argv)

#       END
#############################################################################
