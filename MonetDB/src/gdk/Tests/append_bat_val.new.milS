PROC xprint(bat b) : void {
	print(b);
	printf("[ %s,\t  %s,\t  %d  ]\n",head(b),tail(b),count(b));
}

var nil_nil := bat(void,void,20);
var nil_vid := bat(void,void,20).reverse().seqbase(201@0).reverse();
var nil_oid := bat(void, oid,20);
var nil_int := bat(void, int,20);
var vid_nil := bat(void,void,20).seqbase(101@0);
var vid_vid := bat(void,void,20).seqbase(101@0).reverse().seqbase(201@0).reverse();
var vid_oid := bat(void, oid,20).seqbase(101@0);
var vid_int := bat(void, int,20).seqbase(101@0);
var oid_nil := bat( oid,void,20);
var oid_vid := bat( oid,void,20).reverse().seqbase(201@0).reverse();
var oid_oid := bat( oid, oid,20);
var oid_int := bat( oid, int,20);
var int_nil := bat( int,void,20);
var int_vid := bat( int,void,20).reverse().seqbase(201@0).reverse();
var int_oid := bat( int, oid,20);
var int_int := bat( int, int,20);

xprint(nil_nil);
xprint(nil_vid);
xprint(nil_oid);
xprint(nil_int);
xprint(vid_nil);
xprint(vid_vid);
xprint(vid_oid);
xprint(vid_int);
xprint(oid_nil);
xprint(oid_vid);
xprint(oid_oid);
xprint(oid_int);
xprint(int_nil);
xprint(int_vid);
xprint(int_oid);
xprint(int_int);


help("append");


int_int.append(int(201)); xprint(int_int);
int_oid.append(oid(201)); xprint(int_oid);
int_vid.append(oid(201)); xprint(int_vid);
int_nil.append(    nil ); xprint(int_nil);


oid_int.append(int(201)); xprint(oid_int);
oid_oid.append(oid(201)); xprint(oid_oid);
oid_vid.append(oid(201)); xprint(oid_vid);
oid_nil.append(    nil ); xprint(oid_nil);


vid_int.append(int(201)); xprint(vid_int);
vid_oid.append(oid(201)); xprint(vid_oid);
vid_vid.append(oid(201)); xprint(vid_vid);
vid_nil.append(    nil ); xprint(vid_nil);


nil_int.append(int(201)); xprint(nil_int);
nil_oid.append(oid(201)); xprint(nil_oid);
nil_vid.append(oid(201)); xprint(nil_vid);
nil_nil.append(    nil ); xprint(nil_nil);


vid_int.append(         int(202)); xprint(vid_int);
vid_int.insert(oid(103),int(203)); xprint(vid_int);
vid_int.append(         int(204)); xprint(vid_int);
vid_int.append(         int(nil)); xprint(vid_int);
vid_int.append(         int(255)); xprint(vid_int);

vid_oid.append(         oid(202)); xprint(vid_oid);
vid_oid.insert(oid(103),oid(203)); xprint(vid_oid);
vid_oid.append(         oid(204)); xprint(vid_oid);
vid_oid.append(         oid(nil)); xprint(vid_oid);
vid_oid.append(         oid(255)); xprint(vid_oid);

vid_vid.append(         oid(202)); xprint(vid_vid);
vid_vid.insert(oid(103),oid(203)); xprint(vid_vid);
vid_vid.append(         oid(204)); xprint(vid_vid);
vid_vid.append(         oid(nil)); xprint(vid_vid);
vid_vid.append(         oid(255)); xprint(vid_vid);

vid_nil.append(             nil ); xprint(vid_nil);
vid_nil.insert(oid(103),    nil ); xprint(vid_nil);
vid_nil.append(             nil ); xprint(vid_nil);
vid_nil.append(             nil ); xprint(vid_nil);
vid_nil.append(             nil ); xprint(vid_nil);


nil_int.append(         int(202)); xprint(nil_int);
nil_int.insert(    nil ,int(203)); xprint(nil_int);
nil_int.append(         int(204)); xprint(nil_int);
nil_int.append(         int(nil)); xprint(nil_int);
nil_int.append(         int(255)); xprint(nil_int);

nil_oid.append(         oid(202)); xprint(nil_oid);
nil_oid.insert(    nil ,oid(203)); xprint(nil_oid);
nil_oid.append(         oid(204)); xprint(nil_oid);
nil_oid.append(         oid(nil)); xprint(nil_oid);
nil_oid.append(         oid(255)); xprint(nil_oid);

nil_vid.append(         oid(202)); xprint(nil_vid);
nil_vid.insert(    nil ,oid(203)); xprint(nil_vid);
nil_vid.append(         oid(204)); xprint(nil_vid);
nil_vid.append(         oid(nil)); xprint(nil_vid);
nil_vid.append(         oid(255)); xprint(nil_vid);

nil_nil.append(             nil ); xprint(nil_nil);
nil_nil.insert(    nil ,    nil ); xprint(nil_nil);
nil_nil.append(             nil ); xprint(nil_nil);
nil_nil.append(             nil ); xprint(nil_nil);
nil_nil.append(             nil ); xprint(nil_nil);


quit();
