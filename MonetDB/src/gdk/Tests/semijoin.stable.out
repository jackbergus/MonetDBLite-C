stdout of test 'semijoin` in directory 'src/gdk` itself:


# 14:39:11 >  
# 14:39:11 >  Mtimeout -timeout 60 Mserver "--config=/ufs/niels/data/rc/Linux-i686/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/niels/data/rc/Linux-i686/lib/MonetDB" --set "gdk_dbfarm=/ufs/niels/data/rc/Linux-i686/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/niels/data/rc/Linux-i686/var/MonetDB/log" --set mapi_port=44581 --set sql_port=58265 --set monet_prompt= --trace --dbname=mTests_src_gdk  < semijoin.milM
# 14:39:11 >  

# Monet Database Server V4.3.16_rc05
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
var a:=new(void,int).seqbase(oid(0));
a.append(0);
a.append(1);
a.append(int(nil));

var b:=new(int,int);
b.insert(0,0);
b.insert(0,1);
b.insert(0,2);
b.insert(0,3);
b.insert(0,4);
b.insert(0,5);
b.insert(0,6);
b.insert(0,7);
b.insert(0,8);
b.insert(0,9);
b.insert(0,int(nil));
b.insert(1,0);
b.insert(1,1);
b.insert(1,2);
b.insert(1,3);
b.insert(1,4);
b.insert(1,5);
b.insert(1,6);
b.insert(1,7);
b.insert(1,8);
b.insert(1,9);
b.insert(1,int(nil));
b.insert(int(nil),0);
b.insert(int(nil),1);
b.insert(int(nil),2);
b.insert(int(nil),3);
b.insert(int(nil),4);
b.insert(int(nil),5);
b.insert(int(nil),6);
b.insert(int(nil),7);
b.insert(int(nil),8);
b.insert(int(nil),9);
b.insert(int(nil),int(nil));

var c:=b.reverse().[oid]().reverse();
var d:=a.reverse();

a.print();
#-----------------#
# h	tmp_29	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  nil	  ]
d.print();
#-----------------#
# t	tmp_29	  # name
# int	void	  # type
#-----------------#
[ 0,	  0@0	  ]
[ 1,	  1@0	  ]
[ nil,	  2@0	  ]
b.print();
#-----------------#
# h	tmp_30	  # name
# int	int	  # type
#-----------------#
[ 0,	  0	  ]
[ 0,	  1	  ]
[ 0,	  2	  ]
[ 0,	  3	  ]
[ 0,	  4	  ]
[ 0,	  5	  ]
[ 0,	  6	  ]
[ 0,	  7	  ]
[ 0,	  8	  ]
[ 0,	  9	  ]
[ 0,	  nil	  ]
[ 1,	  0	  ]
[ 1,	  1	  ]
[ 1,	  2	  ]
[ 1,	  3	  ]
[ 1,	  4	  ]
[ 1,	  5	  ]
[ 1,	  6	  ]
[ 1,	  7	  ]
[ 1,	  8	  ]
[ 1,	  9	  ]
[ 1,	  nil	  ]
[ nil,	  0	  ]
[ nil,	  1	  ]
[ nil,	  2	  ]
[ nil,	  3	  ]
[ nil,	  4	  ]
[ nil,	  5	  ]
[ nil,	  6	  ]
[ nil,	  7	  ]
[ nil,	  8	  ]
[ nil,	  9	  ]
[ nil,	  nil	  ]
c.print();
#-----------------#
# t	tmp_28	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 0@0,	  1	  ]
[ 0@0,	  2	  ]
[ 0@0,	  3	  ]
[ 0@0,	  4	  ]
[ 0@0,	  5	  ]
[ 0@0,	  6	  ]
[ 0@0,	  7	  ]
[ 0@0,	  8	  ]
[ 0@0,	  9	  ]
[ 0@0,	  nil	  ]
[ 1@0,	  0	  ]
[ 1@0,	  1	  ]
[ 1@0,	  2	  ]
[ 1@0,	  3	  ]
[ 1@0,	  4	  ]
[ 1@0,	  5	  ]
[ 1@0,	  6	  ]
[ 1@0,	  7	  ]
[ 1@0,	  8	  ]
[ 1@0,	  9	  ]
[ 1@0,	  nil	  ]
[ nil,	  0	  ]
[ nil,	  1	  ]
[ nil,	  2	  ]
[ nil,	  3	  ]
[ nil,	  4	  ]
[ nil,	  5	  ]
[ nil,	  6	  ]
[ nil,	  7	  ]
[ nil,	  8	  ]
[ nil,	  9	  ]
[ nil,	  nil	  ]

b.semijoin(d).print();
#-----------------#
# h	tmp_31	  # name
# int	int	  # type
#-----------------#
[ 0,	  0	  ]
[ 0,	  1	  ]
[ 0,	  2	  ]
[ 0,	  3	  ]
[ 0,	  4	  ]
[ 0,	  5	  ]
[ 0,	  6	  ]
[ 0,	  7	  ]
[ 0,	  8	  ]
[ 0,	  9	  ]
[ 0,	  nil	  ]
[ 1,	  0	  ]
[ 1,	  1	  ]
[ 1,	  2	  ]
[ 1,	  3	  ]
[ 1,	  4	  ]
[ 1,	  5	  ]
[ 1,	  6	  ]
[ 1,	  7	  ]
[ 1,	  8	  ]
[ 1,	  9	  ]
[ 1,	  nil	  ]
d.semijoin(b).print();
#-----------------#
# h	tmp_31	  # name
# int	oid	  # type
#-----------------#
[ 0,	  0@0	  ]
[ 1,	  1@0	  ]

c.semijoin(a).print();
#-----------------#
# h	tmp_31	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 0@0,	  1	  ]
[ 0@0,	  2	  ]
[ 0@0,	  3	  ]
[ 0@0,	  4	  ]
[ 0@0,	  5	  ]
[ 0@0,	  6	  ]
[ 0@0,	  7	  ]
[ 0@0,	  8	  ]
[ 0@0,	  9	  ]
[ 0@0,	  nil	  ]
[ 1@0,	  0	  ]
[ 1@0,	  1	  ]
[ 1@0,	  2	  ]
[ 1@0,	  3	  ]
[ 1@0,	  4	  ]
[ 1@0,	  5	  ]
[ 1@0,	  6	  ]
[ 1@0,	  7	  ]
[ 1@0,	  8	  ]
[ 1@0,	  9	  ]
[ 1@0,	  nil	  ]
a.semijoin(c).print();
#-----------------#
# h	tmp_31	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]

# (try to) force different semijoin implementations

a:=new(int,oid).insert(1,1@0).insert(2,2@0).insert(int(nil),oid(nil)).sort();
c:=new(int,oid).insert(int(nil),oid(nil));
var i:=0;
while(i < 100) {
	i:+=1;
	c.insert(i, oid(i));
}
c:=c.sort();

a.print();
#-----------------#
# h	tmp_32	  # name
# int	oid	  # type
#-----------------#
[ nil,	  nil	  ]
[ 1,	  1@0	  ]
[ 2,	  2@0	  ]
c.slice(0,1).print();
#-----------------#
# h	tmp_31	  # name
# int	oid	  # type
#-----------------#
[ nil,	  nil	  ]
[ 1,	  1@0	  ]

# binsemijoin
a.semijoin(c).print();
#-----------------#
# h	tmp_31	  # name
# int	oid	  # type
#-----------------#
[ 1,	  1@0	  ]
[ 2,	  2@0	  ]
c.semijoin(a).print();
#-----------------#
# h	tmp_31	  # name
# int	oid	  # type
#-----------------#
[ 1,	  1@0	  ]
[ 2,	  2@0	  ]

a:=a.access(BAT_WRITE).insert(int(nil),oid(nil)).access(BAT_READ);
c:=c.access(BAT_WRITE).insert(int(nil),oid(nil)).access(BAT_READ);

# hash => kinsertsect & revsemijoin
var ah:=a.copy();
ah.accbuild("hash");
var ch:=c.copy();
ch.accbuild("hash");
ah.semijoin(ch).print();
#-----------------#
# h	tmp_36	  # name
# int	oid	  # type
#-----------------#
[ 1,	  1@0	  ]
[ 2,	  2@0	  ]
ch.semijoin(ah).print();
#-----------------#
# h	tmp_36	  # name
# int	oid	  # type
#-----------------#
[ 1,	  1@0	  ]
[ 2,	  2@0	  ]
quit();

# 14:39:13 >  
# 14:39:13 >  Done.
# 14:39:13 >  

