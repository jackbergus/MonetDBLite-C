stdout of test 'append_bat_val.new` in directory 'src/gdk` itself:

= ! This is the correct output according to the new/desired semantics of append() ! =

# 22:54:56 >  
# 22:54:56 >  Mtimeout -timeout 60 Mserver "--config=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/etc/MonetDB.conf" --debug=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/lib/MonetDB:/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/lib/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/var/MonetDB/log" --set mapi_port=39876 --set sql_port=44470 --set xquery_port=56289 --set monet_prompt= --trace --dbname=mTests_src_gdk  < append_bat_val.new.milS
# 22:54:56 >  

# Monet Database Server V4.9.3
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
PROC xprint(bat b) : void {
	print(b);
	printf("[ %s,\t  %s,\t  %d  ]\n",head(b),tail(b),count(b));
}

var nil_nil := bat(void,void,20);
var nil_vid := bat(void,void,20).reverse().seqbase(201@0).reverse();
var nil_oid := bat(void, oid,20);
var nil_int := bat(void, int,20);
var vid_nil := bat(void,void,20).seqbase(101@0);
var vid_vid := bat(void,void,20).seqbase(101@0).reverse().seqbase(201@0).reverse();
var vid_oid := bat(void, oid,20).seqbase(101@0);
var vid_int := bat(void, int,20).seqbase(101@0);
var oid_nil := bat( oid,void,20);
var oid_vid := bat( oid,void,20).reverse().seqbase(201@0).reverse();
var oid_oid := bat( oid, oid,20);
var oid_int := bat( oid, int,20);
var int_nil := bat( int,void,20);
var int_vid := bat( int,void,20).reverse().seqbase(201@0).reverse();
var int_oid := bat( int, oid,20);
var int_int := bat( int, int,20);

xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ void,	  void,	  0  ]
xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ void,	  void,	  0  ]
xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ void,	  oid,	  0  ]
xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ void,	  int,	  0  ]
xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ void,	  void,	  0  ]
xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ void,	  void,	  0  ]
xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ void,	  oid,	  0  ]
xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ void,	  int,	  0  ]
xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ oid,	  void,	  0  ]
xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ oid,	  void,	  0  ]
xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ oid,	  oid,	  0  ]
xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ oid,	  int,	  0  ]
xprint(int_nil);
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ int,	  void,	  0  ]
xprint(int_vid);
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ int,	  void,	  0  ]
xprint(int_oid);
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ int,	  oid,	  0  ]
xprint(int_int);
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ int,	  int,	  0  ]


help("append");
COMMAND:   append(BAT[void,any::1], BAT[oid,any::1]) : BAT[void,any::1]
MODULE:    bat
COMPILED:  by adm on Thu Jan 12 16:11:31 2006
append the content of u to i

COMMAND:   append(BAT[void,any::1], BAT[void,any::1]) : BAT[void,any::1]
MODULE:    bat
COMPILED:  by adm on Thu Jan 12 16:11:31 2006
append the content of u to i

COMMAND:   append(BAT[oid,any::1], BAT[oid,any::1]) : BAT[oid,any::1]
MODULE:    bat
COMPILED:  by adm on Thu Jan 12 16:11:31 2006
append the content of u to i (renumbers u-oids' to unique numbers, starting at i.max()+1)

COMMAND:   append(BAT[oid,any::1], any::1) : BAT[oid,any::1]
MODULE:    bat
COMPILED:  by adm on Thu Jan 12 16:11:31 2006
append the value u to i


int_int.append(int(201)); xprint(int_int);
!ERROR: interpret: no matching MIL operator to 'append(BAT[int,int], int)'.
!MAYBE YOU MEAN:
!	append(BAT[void,any::1], BAT[any,any::1]) : BAT[void,any::1]
!	append(BAT[void,any::1], any::1) : BAT[void,any::1]
int_oid.append(oid(201)); xprint(int_oid);
!ERROR: interpret: no matching MIL operator to 'append(BAT[int,oid], oid)'.
!MAYBE YOU MEAN:
!	append(BAT[void,any::1], BAT[any,any::1]) : BAT[void,any::1]
!	append(BAT[void,any::1], any::1) : BAT[void,any::1]
int_vid.append(oid(201)); xprint(int_vid);
!ERROR: interpret: no matching MIL operator to 'append(BAT[int,void], oid)'.
!MAYBE YOU MEAN:
!	append(BAT[void,any::1], BAT[any,any::1]) : BAT[void,any::1]
!	append(BAT[void,any::1], any::1) : BAT[void,any::1]
int_nil.append(    nil ); xprint(int_nil);
!ERROR: interpret: no matching MIL operator to 'append(BAT[int,void], void)'.
!MAYBE YOU MEAN:
!	append(BAT[void,any::1], BAT[any,any::1]) : BAT[void,any::1]
!	append(BAT[void,any::1], any::1) : BAT[void,any::1]


oid_int.append(int(201)); xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  201	  ]
[ oid,	  int,	  1  ]
oid_oid.append(oid(201)); xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ oid,	  oid,	  1  ]
oid_vid.append(oid(201)); xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ oid,	  void,	  1  ]
oid_nil.append(    nil ); xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ oid,	  void,	  1  ]


vid_int.append(int(201)); xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 101@0,  201	  ]
[ void,	  int,	  1  ]
vid_oid.append(oid(201)); xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ void,	  oid,	  1  ]
vid_vid.append(oid(201)); xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ void,	  void,	  1  ]
vid_nil.append(    nil ); xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  nil	  ]
[ void,	  void,	  1  ]


nil_int.append(int(201)); xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  201	  ]
[ void,	  int,	  1  ]
nil_oid.append(oid(201)); xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ void,	  oid,	  1  ]
nil_vid.append(oid(201)); xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  201@0	  ]
[ void,	  void,	  1  ]
nil_nil.append(    nil ); xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  nil	  ]
[ void,	  void,	  1  ]


oid_int.append(         int(202)); xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  201	  ]
[ 1@0,	  202	  ]
[ oid,	  int,	  2  ]
oid_int.insert(oid(103),int(203)); xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  201	  ]
[ 1@0,	  202	  ]
[ 103@0,  203	  ]
[ oid,	  int,	  3  ]
oid_int.append(         int(204)); xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  201	  ]
[ 1@0,	  202	  ]
[ 103@0,  203	  ]
[ 104@0,  204	  ]
[ oid,	  int,	  4  ]
oid_int.append(         int(nil)); xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  201	  ]
[ 1@0,	  202	  ]
[ 103@0,  203	  ]
[ 104@0,  204	  ]
[ 105@0,  nil	  ]
[ oid,	  int,	  5  ]
oid_int.append(         int(255)); xprint(oid_int);
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  201	  ]
[ 1@0,	  202	  ]
[ 103@0,  203	  ]
[ 104@0,  204	  ]
[ 105@0,  nil	  ]
[ 106@0,  255	  ]
[ oid,	  int,	  6  ]

oid_oid.append(         oid(202)); xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ oid,	  oid,	  2  ]
oid_oid.insert(oid(103),oid(203)); xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ oid,	  oid,	  3  ]
oid_oid.append(         oid(204)); xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ oid,	  oid,	  4  ]
oid_oid.append(         oid(nil)); xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ oid,	  oid,	  5  ]
oid_oid.append(         oid(255)); xprint(oid_oid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ 106@0,  255@0	  ]
[ oid,	  oid,	  6  ]

oid_vid.append(         oid(202)); xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ oid,	  void,	  2  ]
oid_vid.insert(oid(103),oid(203)); xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ oid,	  void,	  3  ]
oid_vid.append(         oid(204)); xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ oid,	  void,	  4  ]
oid_vid.append(         oid(nil)); xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ oid,	  oid,	  5  ]
oid_vid.append(         oid(255)); xprint(oid_vid);
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  201@0	  ]
[ 1@0,	  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ 106@0,  255@0	  ]
[ oid,	  oid,	  6  ]

oid_nil.append(             nil ); xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ oid,	  void,	  2  ]
oid_nil.insert(oid(103),    nil ); xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ 103@0,  nil	  ]
[ oid,	  void,	  3  ]
oid_nil.append(             nil ); xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ 103@0,  nil	  ]
[ 104@0,  nil	  ]
[ oid,	  void,	  4  ]
oid_nil.append(             nil ); xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ 103@0,  nil	  ]
[ 104@0,  nil	  ]
[ 105@0,  nil	  ]
[ oid,	  void,	  5  ]
oid_nil.append(             nil ); xprint(oid_nil);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ 103@0,  nil	  ]
[ 104@0,  nil	  ]
[ 105@0,  nil	  ]
[ 106@0,  nil	  ]
[ oid,	  void,	  6  ]


vid_int.append(         int(202)); xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 101@0,  201	  ]
[ 102@0,  202	  ]
[ void,	  int,	  2  ]
vid_int.insert(oid(103),int(203)); xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 101@0,  201	  ]
[ 102@0,  202	  ]
[ 103@0,  203	  ]
[ void,	  int,	  3  ]
vid_int.append(         int(204)); xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 101@0,  201	  ]
[ 102@0,  202	  ]
[ 103@0,  203	  ]
[ 104@0,  204	  ]
[ void,	  int,	  4  ]
vid_int.append(         int(nil)); xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 101@0,  201	  ]
[ 102@0,  202	  ]
[ 103@0,  203	  ]
[ 104@0,  204	  ]
[ 105@0,  nil	  ]
[ void,	  int,	  5  ]
vid_int.append(         int(255)); xprint(vid_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 101@0,  201	  ]
[ 102@0,  202	  ]
[ 103@0,  203	  ]
[ 104@0,  204	  ]
[ 105@0,  nil	  ]
[ 106@0,  255	  ]
[ void,	  int,	  6  ]

vid_oid.append(         oid(202)); xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ void,	  oid,	  2  ]
vid_oid.insert(oid(103),oid(203)); xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ void,	  oid,	  3  ]
vid_oid.append(         oid(204)); xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ void,	  oid,	  4  ]
vid_oid.append(         oid(nil)); xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ void,	  oid,	  5  ]
vid_oid.append(         oid(255)); xprint(vid_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ 106@0,  255@0	  ]
[ void,	  oid,	  6  ]

vid_vid.append(         oid(202)); xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ void,	  void,	  2  ]
vid_vid.insert(oid(103),oid(203)); xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ void,	  void,	  3  ]
vid_vid.append(         oid(204)); xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ void,	  void,	  4  ]
vid_vid.append(         oid(nil)); xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ void,	  oid,	  5  ]
vid_vid.append(         oid(255)); xprint(vid_vid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 101@0,  201@0	  ]
[ 102@0,  202@0	  ]
[ 103@0,  203@0	  ]
[ 104@0,  204@0	  ]
[ 105@0,  nil	  ]
[ 106@0,  255@0	  ]
[ void,	  oid,	  6  ]

vid_nil.append(             nil ); xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  nil	  ]
[ 102@0,  nil	  ]
[ void,	  void,	  2  ]
vid_nil.insert(oid(103),    nil ); xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  nil	  ]
[ 102@0,  nil	  ]
[ 103@0,  nil	  ]
[ void,	  void,	  3  ]
vid_nil.append(             nil ); xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  nil	  ]
[ 102@0,  nil	  ]
[ 103@0,  nil	  ]
[ 104@0,  nil	  ]
[ void,	  void,	  4  ]
vid_nil.append(             nil ); xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  nil	  ]
[ 102@0,  nil	  ]
[ 103@0,  nil	  ]
[ 104@0,  nil	  ]
[ 105@0,  nil	  ]
[ void,	  void,	  5  ]
vid_nil.append(             nil ); xprint(vid_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 101@0,  nil	  ]
[ 102@0,  nil	  ]
[ 103@0,  nil	  ]
[ 104@0,  nil	  ]
[ 105@0,  nil	  ]
[ 106@0,  nil	  ]
[ void,	  void,	  6  ]


nil_int.append(         int(202)); xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  201	  ]
[ nil,	  202	  ]
[ void,	  int,	  2  ]
nil_int.insert(    nil ,int(203)); xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  201	  ]
[ nil,	  202	  ]
[ nil,	  203	  ]
[ void,	  int,	  3  ]
nil_int.append(         int(204)); xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  201	  ]
[ nil,	  202	  ]
[ nil,	  203	  ]
[ nil,	  204	  ]
[ void,	  int,	  4  ]
nil_int.append(         int(nil)); xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  201	  ]
[ nil,	  202	  ]
[ nil,	  203	  ]
[ nil,	  204	  ]
[ nil,	  nil	  ]
[ void,	  int,	  5  ]
nil_int.append(         int(255)); xprint(nil_int);
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  201	  ]
[ nil,	  202	  ]
[ nil,	  203	  ]
[ nil,	  204	  ]
[ nil,	  nil	  ]
[ nil,	  255	  ]
[ void,	  int,	  6  ]

nil_oid.append(         oid(202)); xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ void,	  oid,	  2  ]
nil_oid.insert(    nil ,oid(203)); xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ void,	  oid,	  3  ]
nil_oid.append(         oid(204)); xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ nil,	  204@0	  ]
[ void,	  oid,	  4  ]
nil_oid.append(         oid(nil)); xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ nil,	  204@0	  ]
[ nil,	  nil	  ]
[ void,	  oid,	  5  ]
nil_oid.append(         oid(255)); xprint(nil_oid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ nil,	  204@0	  ]
[ nil,	  nil	  ]
[ nil,	  255@0	  ]
[ void,	  oid,	  6  ]

nil_vid.append(         oid(202)); xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ void,	  void,	  2  ]
nil_vid.insert(    nil ,oid(203)); xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ void,	  void,	  3  ]
nil_vid.append(         oid(204)); xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ nil,	  204@0	  ]
[ void,	  void,	  4  ]
nil_vid.append(         oid(nil)); xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ nil,	  204@0	  ]
[ nil,	  nil	  ]
[ void,	  oid,	  5  ]
nil_vid.append(         oid(255)); xprint(nil_vid);
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ nil,	  201@0	  ]
[ nil,	  202@0	  ]
[ nil,	  203@0	  ]
[ nil,	  204@0	  ]
[ nil,	  nil	  ]
[ nil,	  255@0	  ]
[ void,	  oid,	  6  ]

nil_nil.append(             nil ); xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ void,	  void,	  2  ]
nil_nil.insert(    nil ,    nil ); xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ void,	  void,	  3  ]
nil_nil.append(             nil ); xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ void,	  void,	  4  ]
nil_nil.append(             nil ); xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ void,	  void,	  5  ]
nil_nil.append(             nil ); xprint(nil_nil);
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  nil	  ]
[ void,	  void,	  6  ]


quit();

# 22:54:56 >  
# 22:54:56 >  Done.
# 22:54:56 >  

= ! This is the correct output according to the new/desired semantics of append() ! =
