#                                               -*- Autoconf -*-

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2010 MonetDB B.V.
# All Rights Reserved.

# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.60)
AC_INIT([MonetDB Common], [1.38.3], [monet@cwi.nl], [MonetDB])
#                          ^^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AC_CONFIG_AUX_DIR(conf)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AH_TOP([#include "sysdefs.h"])
AH_BOTTOM([#include "stddef.h"])
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([src/gdk/gdk.mx])
AM_CONFIG_HEADER([monetdb_config.h:conf/config.h.in])
CONFIG_H=monetdb_config.h
AC_SUBST(CONFIG_H)

MONETDB_CONFDIR='$(top_srcdir)/conf'
AC_SUBST(MONETDB_CONFDIR)

HOST=[$target]
AC_DEFINE_UNQUOTED(HOST, "$HOST", [Host identifier])

if test x"$target_os" = xcygwin; then
	AC_DEFINE(WIN32, 1, [Define on MS Windows (also under Cygwin)])
fi

# MONETDB_BUILD and MONETDB_SOURCE are *only* used for monetdb-config
# MONETDB_SOURCE is the absolute path name of the source directory
# (srcdir can be relative)

# The Q versions of various variables are used in places where \'s
# need to be escapes with an extra \.  Configure does not support \'s
# in path names, so there is no need to do anything special here
# except set the variables.  The command to set them in case we do
# need to escape the \'s is Qvar=`echo "$var" | sed 's/\\\\/\\\\\\\\/g'`
MONETDB_BUILD=[`pwd`]
AC_SUBST(MONETDB_BUILD)

MONETDB_SOURCE=[`(cd $srcdir && pwd)`]
AC_SUBST(MONETDB_SOURCE)

AM_MONETDB_XQ_VARS_1()


AM_MONETDB_DEFAULTS()

# Checks for programs.
AM_MONETDB_COMPILER()
AM_MONETDB_TOOLS()
AM_MONETDB_OPTIONS()
AM_MONETDB_UTILS()

AM_CONDITIONAL(CROSS_COMPILING, test x$cross_compiling = xyes)

AC_PROG_LIBTOOL

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([libintl.h stddef.h])
AC_CHECK_HEADERS([fcntl.h io.h malloc.h procfs.h pwd.h signal.h])
AC_CHECK_HEADERS([sys/file.h sys/param.h sys/resource.h])
AC_CHECK_HEADERS([sys/sysctl.h sys/time.h sys/wait.h])
AM_MONETDB_LIBS()

# Checks for typedefs, structures, and compiler characteristics.
AC_COMPILE_IFELSE(AC_LANG_SOURCE([int foo(int * restrict p) { return *p; }]),
	AC_DEFINE(HAVE_RESTRICT, 1,
		[Define if the compiler supports the restrict keyword]),
	AC_COMPILE_IFELSE(AC_LANG_SOURCE([int foo(int * __restrict__ p) { return *p; }]),
		AC_DEFINE(HAVE___RESTRICT__, 1,
			[Define if the compiler supports the __restrict__ keyword])))

# Checks for library functions.

case $host in
	*-darwin10*)
		# OSX 10.6 (Snow Leopard) somehow makes configure believe that fdatasync
		# exists, in reality however, it does not on this platform.
		ac_cv_func_fdatasync=no
	;;
	*)
		AC_CHECK_FUNCS([fdatasync])
	;;
esac
AS_IF([test "x${ac_cv_func_fdatasync}" = "xyes"],
  [AC_DEFINE([HAVE_FDATASYNC],[1],[If the system has a working fdatasync])])

AC_FUNC_MEMCMP
AC_CHECK_FUNCS([memset fcntl ftime getopt getrlimit getuid kill \
	lockf nanosleep pipe setenv shutdown strdup strtof uname \
	strtoll fsync])
AC_CHECK_DECLS([strdup, strtof])


dnl provide different versions of the paths derived above
AM_MONETDB_XQ_VARS_2()
AC_DEFINE_UNQUOTED(MONETDB_PREFIX,"$QXprefix",[architecture-independent files])
AC_DEFINE_UNQUOTED(MONETDB_EXEC_PREFIX,"$QXexec_prefix",[architecture-dependent files])
QMONETDB_BUILD="$MONETDB_BUILD"
XMONETDB_BUILD="`$translatepath "$MONETDB_BUILD"`"
QXMONETDB_BUILD="`echo "$XMONETDB_BUILD" | sed 's/\\\\/\\\\\\\\/g'`"
AC_SUBST(QMONETDB_BUILD)
AC_SUBST(XMONETDB_BUILD)
AC_SUBST(QXMONETDB_BUILD)
QMONETDB_SOURCE="$MONETDB_SOURCE"
XMONETDB_SOURCE="`$translatepath "$MONETDB_SOURCE"`"
QXMONETDB_SOURCE="`echo "$XMONETDB_SOURCE" | sed 's/\\\\/\\\\\\\\/g'`"
AC_SUBST(QMONETDB_SOURCE)
AC_SUBST(XMONETDB_SOURCE)
AC_SUBST(QXMONETDB_SOURCE)
AC_DEFINE_UNQUOTED(MONETDB_LOCALSTATEDIR,"$QXlocalstatedir",[modifiable single-machine data])
AC_DEFINE_UNQUOTED(MONETDB_LIBDIR,"$QXlibdir",[object code libraries])
AC_DEFINE_UNQUOTED(MONETDB_SYSCONFDIR,"$QXsysconfdir",[read-only single-machine data])


case "$host_os" in
mac*)	DIRSEP=':'
	QDIRSEP=':'
	AC_ERROR([mac not supported])
	;;
*mingw*)
	DIRSEP='\'
	QDIRSEP='\\'
	PATHSEP=';'
	SOEXT='-0.dll'
	;;
*darwin*)
	DIRSEP='/'
	QDIRSEP='/'
	PATHSEP=':'
	SOEXT='.dylib'
	;;
*)
	DIRSEP='/'
	QDIRSEP='/'
	PATHSEP=':'
	SOEXT='.so'
	;;
esac
AC_SUBST(DIRSEP)
AC_SUBST(QDIRSEP)
AC_SUBST(PATHSEP)
AC_SUBST(SOEXT)

dnl  CFLAGS for our code are stricter than what autoconf can cope with.
CFLAGS="$CFLAGS \$(X_CFLAGS)"
