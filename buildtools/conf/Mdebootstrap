#!/usr/bin/env bash

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2010 MonetDB B.V.
# All Rights Reserved.

if [ "$1" ] ; then
	echo '
This script ("./de-bootstrap") can be used to clean up the source tree, 
i.e., to remove all files that were created by "./bootstrap".

"./de-bootstrap" first lists all files that are to be removed and 
asks the user for confirmation before actually removing the files.
'
	exit
fi

function RM () {
	if [ "x$1" = 'x-f' ]; then
		shift
	fi

	L=-d
	R=''
	G=''
	if [ "x$1" = 'x-r' -o "x$1" = 'x-rf' -o "x$1" = 'x-fr' ]; then
		shift
		L=-R
		R=-r
		G='/$|'
	fi

	x=N
	n=`ls -A $L $* 2>/dev/null | egrep -v "^total [0-9]*$|^$|^[^ ]*:$" | wc -l | sed 's|^ *||'` 
	if [ $n != '0' ]; then
		ls -lAF $L $* 2>/dev/null | egrep -v "$G^total [0-9]*$|^$" 
		echo -e "Delete these $n files/directories? (y/N) \c"
		read x 
		if [ "x$x" = 'xy' ]; then
			( /bin/rm -f $R $*  &&  echo "$n files deleted." )  ||  echo "rm failed."
		else
			echo "rm canceled, no files/directories deleted."
		fi
	fi
}

what=""
if [ -f CVS/Repository ]; then
	# first, try the CVS repository name to guess the value for $what
	what="`cat CVS/Repository`"
	what="`basename $what`"
elif [ -f autogen/autogen.py  -a  -f mel/mel.mx  -a  -f Mx/Mx.h  -a  -f burg/burs.c ]; then
	# then, check for the existence of "characteristic" files
	what="buildtools"
else
	# otherwise, use the current directory's (base)name to guess, which of
	# buildtools java, MonetDB, testing, clients, MonetDB4, MonetDB5, template, sql, geom, pathfinder, datacell
	# we are.
	what="`pwd`"
	what="`basename $what`"
fi

if [ "$what" = "buildtools" ] ; then
	RM -rf {,*/}{autom4te.cache,build,configure,depcomp,INSTALL,install-sh,missing,*_config.h.in,aclocal.m4,Makefile.in} config.guess config.sub ltmain.sh `find .[^.]* [^_]* -name \*.class -o -name \*.orig -o -name \*.rej -o -name .cache -o -name .incs.\* -o -name \*.pyc -o -name \*~ -o -name .\*~ -o -name .#\* -o -name \*.bak | grep -v 'burg/Makefile.orig$'` ./install.lst ./doc.lst
else
	RM -rf autom4*.cache `find .[^.]* [^_]* -name Makefile.\* | egrep -v '(\.(|ag|standalone|rules|bsd|svr4|sun4|PL|inc|svn-base)|burg/Makefile.orig)$' ; find .[^.]* [^_]* -name \*.class -o -name \*.orig -o -name \*.rej -o -name .cache -o -name .incs.\* -o -name \*.pyc -o -name \*~ -o -name .\*~ -o -name .#\* -o -name \*.bak | grep -v 'burg/Makefile.orig$'` ./install.lst ./doc.lst ./acout.in ./configure.in ./aclocal.m4 ./configure ./stamp-h.in ./conf/depcomp ./conf/mkinstalldirs ./conf/stamp-h.in ./conf/config.h.in ./conf/install-sh ./conf/config.guess ./conf/config.sub ./conf/ltconfig ./conf/ltmain.sh ./conf/missing ./conf/compile ./acconfig.h ./*_config.h.in
fi

echo '
It might be a good idea to run "cvs -q diff --brief", now,
to check whether required files have been removed accidently.
If so, these files can be restored by "cvs update <file>".
'
