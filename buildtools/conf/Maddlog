#!/usr/bin/env bash
# -*-shell-script-*-

d=.
while [ ! -f $d/vertoo.data ]; do
    if [ $d -ef / ]; then
	echo "$0: cannot find top directory of package" >&2
	exit 1
    fi
    d=../$d
done
CL=$d/ChangeLog
if hg root >& /dev/null ; then
    tag=$(hg branch)
    case $tag in
    default)
	;;
    *)
	CL=$CL.${tag}
	;;
    esac
    root=$(hg root)
    root=$(cd $root && \pwd -P)
    dir=$(cd $d && \pwd -P)
    proj=${dir#${root}/}

    PROJECT=${proj%%/*}
    IDENTITY=$(hg showconfig ui.username)
else
    echo "Cannot use this script outside a Mercurial repository" > /dev/stder
    exit -1
fi

nocommit=true
while [ $# -gt 0 ]; do
    case "$1" in
    --logfile=*)
	CL=${1#--logfile=}
	shift
	;;
    --logfile|-f)
	CL=$2
	shift
	shift
	;;
    -f*)
	CL=${1#-f}
	shift
	;;
    --commit)
	nocommit=
	shift
	;;
    --)
	shift
	break
	;;
    -*)
	cat >&2 <<-EOF
	$0: unknown option $1
	Valid options are:
	--logfile=filename (-f filename)
	--commit
	EOF
	exit 1
	;;
    *)
	break
	;;
    esac
done

if [ $# -gt 0 ]; then
    msg=$*
else
    nl=$'\n  '
    echo "Log message (end with ^D or empty line):"
    msg=
    while read line && [ "$line" ]; do
	msg="${msg:+$msg$nl}$line"
    done
fi

file=ChangeLog.$RANDOM

case "$CL" in
*/*)
    cd "${CL%/*}"
    CL=${CL##*/}
    ;;
esac

if [ -f "$CL" ]; then
    sed 's/^/X/' "$CL" | {
    date=
    user=
    first=true
    while read -r line; do
	line=${line#X}
	case "$line" in
	'* '???\ ???\ [\ 0123][0-9]\ 20[0-9][0-9]\ *\<*@*\>)
	    if [ "$first" = true ]; then
		date=$(expr "$line" : '\* \(... ... .. ....\) .*')
		user=$(expr "$line" : '\* ... ... .. .... \(.*\)')
		if [ "$date" = "$(date +'%a %b %_d %Y')" -a "$user" = "$IDENTITY" ]; then
		    echo "$line"
		    echo "- $msg"
		else
		    echo "* $(date +'%a %b %_d %Y') $IDENTITY"
		    echo "- $msg"
		    echo
		    echo "$line"
		fi
		first=false
	    else
		echo "$line"
	    fi
	    ;;
	*)
	    echo "$line"
	    ;;
	esac
    done
    if [ "$first" = true ]; then
	echo "* $(date +'%a %b %_d %Y') $IDENTITY"
	echo "- $msg"
	echo
    fi
    }
else
    echo "# ChangeLog file for $PROJECT"
    echo "# This file is updated with Maddlog"
    echo
    echo "* $(date +'%a %b %_d %Y') $IDENTITY"
    echo "- $msg"
    echo
fi > $file

mv $file "$CL"

hg add "$CL" >& /dev/null

if [ ! "$nocommit" ]; then
    hg commit -m "  $msg" "$CL"
else
    hg diff "$CL"
    echo "Don't forget to COMMIT."
fi
echo "Don't forget to PUSH."
