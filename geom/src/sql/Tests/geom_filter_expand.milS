module(geom);

var minX := flt(0);
var minY := flt(0);
var maxX := flt(100);
var maxY := flt(100);

var f, lowX, lowY, highX, highY;
proc init_filter(flt new_lowX, flt new_lowY, flt new_highX, flt new_highY) : void {
	lowX := new_lowX; lowY := new_lowY;
	highX := new_highX; highY := new_highY;
}
proc filter() : geom_filter {
	var wkt, e;
	if ((lowX = highX) and (lowY = highY)) {
		wkt := sprintf("POINT(%f %f)", lowX, lowY);
		f := PointFromText(wkt).filter(geom_mbr(minX,minY, maxX,maxY));
		e := f.expand();
	}
	else {
		wkt := sprintf("LINESTRING(%f %f, %f %f)", lowX, lowY, highX, highY);
		f := GeomFromText(wkt).filter(geom_mbr(minX,minY, maxX,maxY));
		e := f.expand();
	}
	print(wkt);
	print(f);
	print(e);
	return(f);
}


# Some points.

init_filter(0.0,0.0, 0.0,0.0);
filter();

init_filter(100.0,100.0, 100.0,100.0);
filter();

init_filter(0.0,100.0, 0.0,100.0);
filter();

init_filter(100.0,0.0, 100.0,0.0);
filter();

init_filter(50.0,50.0, 50.0,50.0);
filter();

init_filter(1.0,1.0, 1.0,1.0);
filter();


# Some extents.

init_filter(50.0,50.0, 50.0001,50.0001);
filter();

init_filter(50.0001,50.0001, 50.0002,50.0002);
filter();

init_filter(49.9999,49.9999, 50.0,50.0);
filter();

init_filter(49.9998,49.9998, 49.9999,49.9999);
filter();

init_filter(99.9999,99.9999, 100.0,100.0);
filter();

init_filter(99.9998,99.9998, 99.9999,99.9999);
filter();

init_filter(0.0,99.9999, 0.0,100.0);
filter();

init_filter(0.0,99.9998, 0.0,99.9999);
filter();

init_filter(99.9999,0.0, 100.0,0.0);
filter();

init_filter(99.9998,0.0, 99.9999,0.0);
filter();

# With decreasing size of the geometry,
# each geom_filter code should be >= the preceding.
init_filter(1.0,1.0, 100.0,100.0);
while (lowX < highX) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	highX := highX / 1.1;
	highY := highY / 1.1;
}

# With decreasing size of the geometry,
# each geom_filter code should be >= the preceding.
init_filter(1.0,1.0, 100.0,100.0);
while (lowX < highX) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	lowX := lowX * 1.1;
	lowY := lowY * 1.1;
}

# With decreasing size of the geometry,
# each geom_filter code should be >= the preceding.
init_filter(1.0,1.0, 100.0,100.0);
while (lowX < highX) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	lowX := lowX * 1.1;
	lowY := lowY * 1.1;
	highX := highX / 1.1;
	highY := highY / 1.1;
}

# Moving to the North (q0 -> q2),
# each geom_filter code should be >= the preceding.
init_filter(1.0,1.0, 2.0,2.0);
while (lowY < 100.0) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	lowY := lowY + 5;
	highY := lowY + 1;
}

# Moving to the North (q1 -> q3),
# each geom_filter code should be >= the preceding.
init_filter(99.0,1.0, 100.0,2.0);
while (lowY < 100.0) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	lowY := lowY + 5;
	highY := lowY + 1;
}

# Moving to the East (q0 -> q1),
# each geom_filter code should be >= the preceding.
init_filter(1.0,1.0, 2.0,2.0);
while (lowX < 100.0) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	lowX := lowX + 5;
	highX := lowX + 1;
}

# Moving to the East (q2 -> q3),
# each geom_filter code should be >= the preceding.
init_filter(1.0,99.0, 2.0,100.0);
while (lowX < 100.0) {
	var f_new := filter();
	print("-> " + f_new >= f);
	f := f_new;
	lowX := lowX + 5;
	highX := lowX + 1;
}

quit();
