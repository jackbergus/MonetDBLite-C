#!/bin/sh

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2011 MonetDB B.V.
# All Rights Reserved.

pkg=geom
buildbase="@QBUILD@"
srcdir="@QSOURCE@"
uname=`uname`

# where compiled SQL modules are to be found
for d in backends/monet5 backends/monet5/vaults sql
do
	[ -d "${buildbase}/sql/$d/.libs" ] &&
		MOD_PATH="${MOD_PATH}:${buildbase}/sql/$d/.libs"
	MOD_PATH="${MOD_PATH}:${buildbase}/sql/$d"
	# enable auto-loading of modules before `make install`
	mkdir -p ${buildbase}/sql/$d/autoload
	cp ${srcdir}/sql/$d/[0-9][0-9]_*.mal ${buildbase}/sql/$d/autoload/ 2>/dev/null
done
# disable auto-loading of non-available modules
@HAVE_MSEED_FALSE@	rm -f ${buildbase}/sql/backends/monet5/vaults/autoload/71_mseed.mal
@HAVE_CFITSIO_FALSE@	rm -f ${buildbase}/sql/backends/monet5/vaults/autoload/72_fits.mal

# enable auto-loading of SQL createdb scripts before `make install`
mkdir -p ${buildbase}/sql/sql/createdb
cp ${srcdir}/sql/sql/[0-9][0-9]_*.sql ${buildbase}/sql/sql/createdb/ 2>/dev/null
# disable auto-loading of non-available SQL createdb scripts
@HAVE_RAPTOR_FALSE@	rm -f ${buildbase}/sql/sql/createdb/30_rdf.sql

# where compiled Geom modules are to be found
for d in monetdb5
do
	[ -d "${buildbase}/geom/$d/.libs" ] &&
		MOD_PATH="${MOD_PATH}:${buildbase}/geom/$d/.libs"
	MOD_PATH="${MOD_PATH}:${buildbase}/geom/$d"
	# enable auto-loading of modules before `make install`
	mkdir -p ${buildbase}/geom/$d/autoload
	cp ${srcdir}/geom/$d/[0-9][0-9]_*.mal ${buildbase}/geom/$d/autoload/ 2>/dev/null
done

# enable auto-loading of SQL createdb scripts before `make install`
mkdir -p ${buildbase}/geom/monetdb5/createdb
cp ${srcdir}/geom/sql/[0-9][0-9]_*.sql ${buildbase}/geom/monetdb5/createdb 2>/dev/null

# where compiled monetdb5 modules are to be found
for d in optimizer scheduler modules/atoms modules/kernel modules/mal extras/crackers extras/compiler
do
	[ -d "${buildbase}/monetdb5/$d/.libs" ] &&
		MOD_PATH="${MOD_PATH}:${buildbase}/monetdb5/$d"
	MOD_PATH="${MOD_PATH}:${buildbase}/monetdb5/$d"
	# enable auto-loading of modules before `make install`
	mkdir -p ${buildbase}/monetdb5/$d/autoload
	cp ${srcdir}/monetdb5/$d/[0-9][0-9]_*.mal ${buildbase}/monetdb5/$d/autoload/ 2>/dev/null
done

cfg="${buildbase}/monetdb5/misc/monetdb5.conf"

# enhance various paths to find our stuff
MOD_PATH="`echo ${MOD_PATH} | sed 's/^://'`"
binpath="${buildbase}/sql/backends/monet5:${buildbase}/tools/mserver:${buildbase}/clients/mapiclient:${buildbase}/clients/examples/C:${buildbase}/clients/examples/php:${buildbase}/clients/examples/python:${buildbase}/clients/perl/Tests:${buildbase}/testing"
libpath="${MOD_PATH}:${buildbase}/sql/server/.libs"

PATH="${binpath}:$PATH"
export PATH

PYTHONPATH="${buildbase}/clients/python/build/lib:${buildbase}/testing:${srcdir}/testing:$PYTHONPATH"
export PYTHONPATH

CLASSPATH="${buildbase}/java:${buildbase}/java/tests:${CLASSPATH}"
export CLASSPATH

perlib="${buildbase}/clients/perl:${srcdir}/clients/perl"
PERLLIB="${perlib}:${PERLLIB}"
PERL5LIB="${perlib}:${PERL5LIB}"
export PERLLIB PERL5LIB

if [ "${LD_LIBRARY_PATH}" ] ; then
	LD_LIBRARY_PATH=":${LD_LIBRARY_PATH}"
fi
LD_LIBRARY_PATH="${libpath}${LD_LIBRARY_PATH}"
export LD_LIBRARY_PATH

if [ "${uname}" = "Darwin" ] ; then
	if [ "${DYLD_LIBRARY_PATH}" ] ; then
		DYLD_LIBRARY_PATH=":${DYLD_LIBRARY_PATH}"
	fi
	DYLD_LIBRARY_PATH="${libpath}${DYLD_LIBRARY_PATH}"
	export DYLD_LIBRARY_PATH
fi
if [ "${uname}" = "AIX" ] ; then
	if [ "${LIBPATH}" ] ; then
		LIBPATH=":${LIBPATH}"
	fi
	LIBPATH="${libpath}${LIBPATH}"
	export LIBPATH
fi

# execute Mtest.py in the source directory
cd "${srcdir}/${pkg}"

# execute the script.
# if no arguments, do a recursive test (Mtest.py -r), else pass on the
# arguments.
# if the environment variable MTEST_AT is set (value does not matter), pass
# the --at flag to Mtest.py so that it uses the at command as a watchdog.
exec python "${buildbase}/testing/Mtest.py" --config="${cfg}" --package=${pkg} --monet_mod_path="${MOD_PATH}" --dbfarm="${buildbase}/${pkg}/dbfarm" --TSTTRGBASE="${buildbase}/${pkg}" ${MTEST_AT+--at} "${@--rq}"
