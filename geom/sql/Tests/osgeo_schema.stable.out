stdout of test 'osgeo_schema` in directory 'geom/sql` itself:


# 23:37:21 >  
# 23:37:21 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30566" "--set" "mapi_usock=/var/tmp/mtest-24390/.s.monetdb.30566" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/current//Linux/var/MonetDB/mTests_geom_sql" "--set" "mal_listing=0"
# 23:37:21 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_geom_sql', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30566/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-24390/.s.monetdb.30566
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:37:22 >  
# 23:37:22 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-24390" "--port=30566"
# 23:37:22 >  

#CREATE TABLE spatial_ref_sys (
#	srid INTEGER NOT NULL PRIMARY KEY,
#	auth_name VARCHAR(256),
#	auth_srid INTEGER,
#	srtext VARCHAR(2048));
#CREATE TABLE geometry_columns (
#	f_catalog_name VARCHAR(256),
#	f_table_schema VARCHAR(256),
#	f_table_name VARCHAR(256),
#	f_geometry_column VARCHAR(256),
#	g_catalog_name VARCHAR(256),
#	g_table_schema VARCHAR(256),
#	g_table_name VARCHAR(256),
#	storage_type INTEGER,
#	geometry_type INTEGER,
#	coord_dimension INTEGER,
#	max_ppr INTEGER,
#	srid INTEGER REFERENCES spatial_ref_sys,
#	CONSTRAINT gc_pk PRIMARY KEY (f_catalog_name, f_table_schema,
#	f_table_name, f_geometry_column));
#CREATE TABLE lake_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	x4 INTEGER,
#	y4 INTEGER,
#	x5 INTEGER,
#	y5 INTEGER,
#	CONSTRAINT l_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE road_segment_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	CONSTRAINT rs_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE divided_route_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	CONSTRAINT dr_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE forest_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	x4 INTEGER,
#	y4 INTEGER,
#	x5 INTEGER,
#	y5 INTEGER,
#	CONSTRAINT f_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE bridge_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	CONSTRAINT b_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE stream_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	CONSTRAINT s_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE building_pt_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	CONSTRAINT bp_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE building_area_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	x4 INTEGER,
#	y4 INTEGER,
#	x5 INTEGER,
#	y5 INTEGER,
#	CONSTRAINT ba_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE pond_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	x4 INTEGER,
#	y4 INTEGER,
#	CONSTRAINT p_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE named_place_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	x4 INTEGER,
#	y4 INTEGER,
#	CONSTRAINT np_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE map_neatline_geom (
#	gid INTEGER NOT NULL,
#	eseq INTEGER NOT NULL,
#	etype INTEGER NOT NULL,
#	seq INTEGER NOT NULL,
#	x1 INTEGER,
#	y1 INTEGER,
#	x2 INTEGER,
#	y2 INTEGER,
#	x3 INTEGER,
#	y3 INTEGER,
#	x4 INTEGER,
#	y4 INTEGER,
#	x5 INTEGER,
#	y5 INTEGER,
#	CONSTRAINT mn_gid_pk PRIMARY KEY (gid, eseq, seq));
#CREATE TABLE lakes (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	shore_gid INTEGER);
#CREATE TABLE road_segments (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	aliases VARCHAR(64),
#	num_lanes INTEGER,
#	centerline_gid INTEGER);
#CREATE TABLE divided_routes (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	num_lanes INTEGER,
#	centerlines_gid INTEGER);
#CREATE TABLE forests (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	boundary_gid INTEGER);
#CREATE TABLE bridges (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	position_gid INTEGER);
#CREATE TABLE streams (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	centerline_gid INTEGER);
#CREATE TABLE buildings (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	address VARCHAR(64),
#	position_gid INTEGER,
#	footprint_gid INTEGER);
#CREATE TABLE ponds (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	type VARCHAR(64),
#	shores_gid INTEGER);
#CREATE TABLE named_places (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	name VARCHAR(64),
#	boundary_gid INTEGER);
#CREATE TABLE map_neatlines (
#	fid INTEGER NOT NULL PRIMARY KEY,
#	neatline_gid INTEGER);

# 23:37:22 >  
# 23:37:22 >  "Done."
# 23:37:22 >  

