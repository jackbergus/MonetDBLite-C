# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2007 CWI.
# All Rights Reserved.

dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.59)
AC_INIT([MonetDB geometry module], [0.1.3], [monet@cwi.nl], [geom])
#                                   ^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AC_CONFIG_AUX_DIR(conf)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AH_TOP([#include "sysdefs.h"])
AH_BOTTOM([#include "stddef.h"])

dnl ----------------------
AM_INIT_AUTOMAKE([no-define])
AC_CONFIG_SRCDIR([src/lib/libgeom.mx])
AM_CONFIG_HEADER(geom_config.h:conf/config.h.in)
CONFIG_H=geom_config.h
AC_SUBST(CONFIG_H)

# GEOM_BUILD and GEOM_SOURCE are *only* used for monetdb-geom-config and RunMserver
# GEOM_SOURCE is the absolute path name of the source directory
# (srcdir can be relative)

# The Q versions of various variables are used in places where \'s
# need to be escapes with an extra \.  Configure does not support \'s
# in path names, so there is no need to do anything special here
# except set the variables.  The command to set them in case we do
# need to escape the \'s is Qvar=`echo "$var" | sed 's/\\\\/\\\\\\\\/g'`
GEOM_BUILD=[`pwd`]
AC_SUBST(GEOM_BUILD)

GEOM_SOURCE=[`(cd $srcdir && pwd)`]
AC_SUBST(GEOM_SOURCE)

# if no --prefix option, we must set Qprefix to the default value
# the problem is that prefix is set very late in the process if it
# wasn't set by --prefix
if test "${prefix}x" = "NONEx"; then
	Qprefix="${ac_default_prefix}"
else
	Qprefix="${prefix}"
fi
Qprefix="`echo "$Qprefix" | sed 's/\\\\/\\\\\\\\/g'`"
AC_SUBST(Qprefix)
# exec_prefix is created very late, so let make do the expansion
if test "${exec_prefix}x" = "NONEx"; then
	Qexec_prefix='${prefix}'
else
	Qexec_prefix="`echo "$exec_prefix" | sed 's/\\\\/\\\\\\\\/g'`"
fi
AC_SUBST(Qexec_prefix)


dnl Check for Monet
req_monetdb_ver='1.18.0'
#                ^^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AM_MONETDB_COMMON($req_monetdb_ver)
if test "x$have_monetdb" != xyes; then
	AC_MSG_ERROR([MonetDB geometry requires at least version $req_monetdb_ver of MonetDB, but only version $MONETDBVERS was found.])
fi
AM_MONETDB_DEFAULTS()
AM_MONETDB_COMPILER()
AM_MONETDB_TOOLS()
AM_MONETDB_OPTIONS()
AM_MONETDB_LIBS()
AM_MONETDB_UTILS()
req_monetdb4_ver='4.18.0'
#                 ^^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AM_MONETDB4($req_monetdb4_ver)
req_monetdb5_ver='5.0.0'
#                 ^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AM_MONETDB5($req_monetdb5_ver)

if test "x$have_monetdb4" != xyes -a "x$have_monetdb5" != xyes; then
	if test "x$MONETDB4VERS" = "x" -a "x$MONETDB5VERS" = "x"; then
		AC_MSG_ERROR([Neither MonetDB4 nor MonetDB5 was not found. MonetDB/SQL requires at least version $req_monetdb4_ver of MonetDB4 or version $req_monetdb5_ver of MonetDB5.])
	else
		if test "x$MONETDB4VERS" = "x"; then
			MONETDB4VERS='none'
		fi
		if test "x$MONETDB5VERS" = "x"; then
			MONETDB5VERS='none'
		fi
		AC_MSG_ERROR([MonetDB/SQL requires at least version $req_monetdb4_ver of MonetDB4 (found $MONETDB4VERS) or version $req_monetdb5_ver of MonetDB5 (found $MONETDB5VERS).])
	fi
fi

dnl geos
have_geos=auto
GEOS_INCS=''
GEOS_LIBS=''
AC_ARG_WITH(geos,
	AC_HELP_STRING([--with-geos=DIR],
		[geos library is installed in DIR]),
	have_geos="$withval")
if test "x$have_geos" != xno; then
	case "$have_geos" in
	yes|auto)
		;;
	*)
		GEOS_INCS="-I$have_geos/include"
		GEOS_LIBS="-L$have_geos/lib"
		;;
	esac
	save_CPPFLAGS="$CPPFLAGS"
	CPPFLAGS="$CPPFLAGS $GEOS_INCS"
	AC_CHECK_HEADER(geos_c.h, AC_DEFINE(HAVE_GEOS_C_H, 1, [Define to 1 if you have the <geos_c.h> header file.]), [if test "x$have_geos" != xauto; then AC_MSG_ERROR([geos_c.h not found]); fi; have_geos=no])
	CPPFLAGS="$save_CPPFLAGS"
fi
if test "x$have_geos" != xno; then
	save_LIBS="$LIBS"
    	LIBS="$LIBS $GEOS_LIBS"
    	AC_CHECK_LIB(geos_c, GEOSEnvelope, :, [if test "x$have_geos" != xauto; then AC_MSG_ERROR([-lgeos_c not found]); fi; have_geos=no])
    	LIBS="$save_LIBS"
fi
if test "x$have_geos" != xno; then
	GEOS_LIBS="$GEOS_LIBS -lgeos_c"
	AC_DEFINE(HAVE_SQLGETPRIVATEPROFILESTRING, 1, [Define if you have the SQLGetPrivateProfileString function])
fi
AC_SUBST(GEOS_INCS)
AC_SUBST(GEOS_LIBS)

dnl provide different versions of (some of) the paths derived above
QGEOM_BUILD="$GEOM_BUILD"
AC_SUBST(QGEOM_BUILD)
QGEOM_SOURCE="$GEOM_SOURCE"
AC_SUBST(QGEOM_SOURCE)

dnl  CFLAGS for our code are stricter than what autoconf can cope with.
CFLAGS="$CFLAGS \$(X_CFLAGS)"

case "$host_os" in
*mingw*)
AM_CONDITIONAL(NOT_WIN32, false)
AM_CONDITIONAL(NATIVE_WIN32, true)
;;
*)
AM_CONDITIONAL(NOT_WIN32, true)
AM_CONDITIONAL(NATIVE_WIN32, false)
;;
esac
