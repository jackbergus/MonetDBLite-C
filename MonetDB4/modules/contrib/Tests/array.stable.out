stdout of test 'array` in directory 'modules/contrib` itself:


# 12:28:42 >  
# 12:28:42 >  Mtimeout -timeout 60 Mserver "--config=/data/home/alexb/local/Monet/soft/etc/monet.conf" --debug=10 --set "monet_mod_path=/data/home/alexb/local/Monet/soft/lib/MonetDB" --set "gdk_dbfarm=/data/home/alexb/local/Monet/soft/var/MonetDB/dbfarm" --set "sql_logdir=/data/home/alexb/local/Monet/soft/var/MonetDB/log" --set mapi_port=43450 --set sql_port=58258 --set monet_prompt= --trace --dbname=mTests_src_modules_contrib array.prelude < array.milM
# 12:28:42 >  

# Monet Database Server V4.3.16
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for x86_64-unknown-linux-gnu/64bit; dynamically linked.
# Visit http://monetdb.cwi.nl for further information.
PROC test_array() : void := {
    var idx1 := grid(2,2,1,1);
    var idx2 := grid(1,2,2,1);
    var data := new(void,chr);
    data.insert(nil,'a');
    data.insert(nil,'b');
    data.insert(nil,'c');
    data.insert(nil,'d');
    seqbase(data,0@0);

    print(data,idx1,idx2);
    print_array(data,idx1,idx2);

    data := new(void,chr);
    data.insert(nil,'a');
    data.insert(nil,'b');
    seqbase(data,0@0);
    data := concat(data,data,count(data));
    print(data,idx1,idx2);
    print_array(data,idx1,idx2);

    data := cons(4,'a');
    print(data,idx1,idx2);
    print_array(data,idx1,idx2);
}
test_array();
#---------------------------------#
# h	tmp_28	tmp_29	tmp_30	  # name
# void	chr	int	int	  # type
#---------------------------------#
[ 0@0,	  'a',	  1,	  1	  ]
[ 1@0,	  'b',	  2,	  1	  ]
[ 2@0,	  'c',	  1,	  2	  ]
[ 3@0,	  'd',	  2,	  2	  ]
[['a','b'],['c','d']]
#---------------------------------#
# h	tmp_28	tmp_29	tmp_30	  # name
# void	chr	int	int	  # type
#---------------------------------#
[ 0@0,	  'a',	  1,	  1	  ]
[ 1@0,	  'b',	  2,	  1	  ]
[ 2@0,	  'a',	  1,	  2	  ]
[ 3@0,	  'b',	  2,	  2	  ]
[['a','b'],['a','b']]
#---------------------------------#
# h	tmp_34	tmp_29	tmp_30	  # name
# void	chr	int	int	  # type
#---------------------------------#
[ 0@0,	  'a',	  1,	  1	  ]
[ 1@0,	  'a',	  2,	  1	  ]
[ 2@0,	  'a',	  1,	  2	  ]
[ 3@0,	  'a',	  2,	  2	  ]
[['a','a'],['a','a']]
quit();

# 12:28:42 >  
# 12:28:42 >  Done.
# 12:28:42 >  

