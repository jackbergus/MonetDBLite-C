stdout of test 'directsemijoin` in directory 'src/gdk` itself:


# 15:58:21 >  
# 15:58:21 >   Mserver "--config=/scratch/niels/Linux-x86_64/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/scratch/niels/Linux-x86_64/lib/MonetDB4:/scratch/niels/Linux-x86_64/lib/MonetDB4/lib:/scratch/niels/Linux-x86_64/lib/MonetDB4/bin" --set "gdk_dbfarm=/scratch/niels/Linux-x86_64/var/MonetDB4/dbfarm" --set "sql_logdir=/scratch/niels/Linux-x86_64/var/MonetDB4/sql_logs" --set "xquery_logdir=/scratch/niels/Linux-x86_64/var/MonetDB4/xquery_logs" --set mapi_open=true --set xrpc_open=true --set mapi_port=32699 --set xrpc_port=44340 --set monet_prompt= --trace --dbname=mTests_src_gdk  
# 15:58:21 >  

# MonetDB Server v4.21.0
# based on GDK   v1.21.0
# Copyright (c) 1993-2007, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
module(xtables);
vm_minsize(lng(270000));
print(vm_minsize());
[ 270000 ]

var a:=new(void,int).seqbase(oid(0));
a.append(0);
a.append(1);
a.append(2);

var b:=new(void,int);

var i := 0;
while(i<(128*1024)) {
	var o := i%2;
	b.append(o);
	i := i + 1;
}
b.seqbase(oid(0));

var s := b.reverse().semijoin(a.reverse());
var g := CTgroup(s.reverse()).CTextend();
print(g);
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
quit();

# 15:58:22 >  
# 15:58:22 >  Done.
# 15:58:22 >  

