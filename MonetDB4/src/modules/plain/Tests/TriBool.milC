var t := true;
var f := false;
var n := bit(nil);
var bl := new(void,bit);
var br := new(void,bit);
var bo := new(void,bit);
var ba := new(void,bit);
bl := seqbase(bl,0@0);
br := seqbase(br,0@0);
bo := seqbase(bo,0@0);
ba := seqbase(ba,0@0);
bl := append(bl,t);
bl := append(bl,t);
bl := append(bl,t);
bl := append(bl,f);
bl := append(bl,f);
bl := append(bl,f);
bl := append(bl,n);
bl := append(bl,n);
bl := append(bl,n);
br := append(br,t);
br := append(br,f);
br := append(br,n);
br := append(br,t);
br := append(br,f);
br := append(br,n);
br := append(br,t);
br := append(br,f);
br := append(br,n);

print(t);
print(f);
print(n);
print(bl,br);

var o := or(t,t); bo := append(bo,o);
var o := or(t,f); bo := append(bo,o);
var o := or(t,n); bo := append(bo,o);
var o := or(f,t); bo := append(bo,o);
var o := or(f,f); bo := append(bo,o);
var o := or(f,n); bo := append(bo,o);
var o := or(n,t); bo := append(bo,o);
var o := or(n,f); bo := append(bo,o);
var o := or(n,n); bo := append(bo,o);
var oo := [or](bl,br);
print(bl, br, bo, oo);

var a := and(t,t); ba := append(ba,a);
var a := and(t,f); ba := append(ba,a);
var a := and(t,n); ba := append(ba,a);
var a := and(f,t); ba := append(ba,a);
var a := and(f,f); ba := append(ba,a);
var a := and(f,n); ba := append(ba,a);
var a := and(n,t); ba := append(ba,a);
var a := and(n,f); ba := append(ba,a);
var a := and(n,n); ba := append(ba,a);
var aa := [and](bl,br);
print(bl, br, ba, aa);

quit();
