var t := true;
var f := false;
var n := bit(nil);
var b  := new(void,bit);
var bl := new(void,bit);
var br := new(void,bit);
var bo := new(void,bit);
var ba := new(void,bit);
var bvo := new(void,bit);
var bva := new(void,bit);
var bov := new(void,bit);
var bav := new(void,bit);
b := seqbase(b,0@0);
bl := seqbase(bl,0@0);
br := seqbase(br,0@0);
bo := seqbase(bo,0@0);
ba := seqbase(ba,0@0);
bvo := seqbase(bvo,0@0);
bva := seqbase(bva,0@0);
bov := seqbase(bov,0@0);
bav := seqbase(bav,0@0);
bl := append(bl,t);
bl := append(bl,t);
bl := append(bl,t);
bl := append(bl,f);
bl := append(bl,f);
bl := append(bl,f);
bl := append(bl,n);
bl := append(bl,n);
bl := append(bl,n);
b := append(b,t);
b := append(b,f);
b := append(b,n);
br := append(br,b);
br := append(br,b);
br := append(br,b);

print(t);
print(f);
print(n);
print(b);
print(bl,br);

var o := or(t,t); bo := append(bo,o);
var o := or(t,f); bo := append(bo,o);
var o := or(t,n); bo := append(bo,o);
var o := or(f,t); bo := append(bo,o);
var o := or(f,f); bo := append(bo,o);
var o := or(f,n); bo := append(bo,o);
var o := or(n,t); bo := append(bo,o);
var o := or(n,f); bo := append(bo,o);
var o := or(n,n); bo := append(bo,o);
var t_o := [or](t,b); bvo := append(bov,t_o);
var f_o := [or](f,b); bvo := append(bov,f_o);
var n_o := [or](n,b); bvo := append(bov,n_o);
var o_t := [or](b,t); bov := append(bov,o_t);
var o_f := [or](b,f); bov := append(bov,o_f);
var o_n := [or](b,n); bov := append(bov,o_n);
var oo := [or](bl,br);
print(bl, br, bo, oo, bvo, bov);

var a := and(t,t); ba := append(ba,a);
var a := and(t,f); ba := append(ba,a);
var a := and(t,n); ba := append(ba,a);
var a := and(f,t); ba := append(ba,a);
var a := and(f,f); ba := append(ba,a);
var a := and(f,n); ba := append(ba,a);
var a := and(n,t); ba := append(ba,a);
var a := and(n,f); ba := append(ba,a);
var a := and(n,n); ba := append(ba,a);
var t_a := [and](t,b); bva := append(bav,t_a);
var f_a := [and](f,b); bva := append(bav,f_a);
var n_a := [and](n,b); bva := append(bav,n_a);
var a_t := [and](b,t); bav := append(bav,a_t);
var a_f := [and](b,f); bav := append(bav,a_f);
var a_n := [and](b,n); bav := append(bav,a_n);
var aa := [and](bl,br);
print(bl, br, ba, aa, bva, bav);
