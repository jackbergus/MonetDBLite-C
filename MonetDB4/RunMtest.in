#!/bin/sh

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2007 CWI.
# All Rights Reserved.

builddir=@QXMONETDB4_BUILD@
# make sure srcdir contains absolute path name
srcdir=`cd '@Xsrcdir@'; pwd`
uname=`uname`

# where compiled modules are to be found
MOD_PATH="${builddir}/src/modules/plain/.libs:${builddir}/src/modules/plain:${srcdir}/src/modules/plain:${builddir}/src/modules/contrib/.libs:${builddir}/src/modules/contrib:${srcdir}/src/modules/contrib:${builddir}/src/modules/calibrator/.libs:${builddir}/src/modules/calibrator:${srcdir}/src/modules/calibrator:${builddir}/src/mapi/.libs:${builddir}/src/mapi:${srcdir}/src/mapi:${srcdir}/scripts:${srcdir}/scripts/tools"
@HAVE_NETCDF_TRUE@ MOD_PATH="${MOD_PATH}:${builddir}/src/modules/mnetcdf/.libs:${builddir}/src/modules/mnetcdf:${srcdir}/src/modules/mnetcdf"

if [ "${LD_LIBRARY_PATH}" ] ; then
	LD_LIBRARY_PATH=":${LD_LIBRARY_PATH}"
fi
if [ "${uname}" = "Darwin"  -a  "${DYLD_LIBRARY_PATH}" ] ; then
	DYLD_LIBRARY_PATH=":${DYLD_LIBRARY_PATH}"
fi
if [ "${uname}" = "AIX"  -a  "${LIBPATH}" ] ; then
	LIBPATH=":${LIBPATH}"
fi

# enhance various paths to find our stuff
if [ -s "${builddir}/src/tools/monetdb4-config" ] ; then
	chmod +x "${builddir}/src/tools/monetdb4-config"
fi
PATH="${builddir}/src/tools:$PATH"
if [ "${uname}" = "IRIX64" ] ; then
	# on IRIX64 (at least when compiled with the MIPS compiler),
	# running Mserver via the wrapper-script ${builddir}/src/tools/Mserver
	# results in a bus error;
	# hence, we directly run the binary ${builddir}/src/tools/.libs/Mserver
	PATH="${builddir}/src/tools/.libs:$PATH"
fi
#PYTHONPATH="${builddir}/src/testing:${srcdir}/src/testing:${builddir}/src/common:${srcdir}/src/mapi/clients/python"
libpath="${MOD_PATH}:${builddir}/src/monet/.libs"
LD_LIBRARY_PATH="${libpath}${LD_LIBRARY_PATH}"
if [ "${uname}" = "Darwin" ] ; then
	DYLD_LIBRARY_PATH="${libpath}${DYLD_LIBRARY_PATH}"
	export DYLD_LIBRARY_PATH
fi
if [ "${uname}" = "AIX" ] ; then
	LIBPATH="${libpath}${LIBPATH}"
	export LIBPATH
fi
export PATH LD_LIBRARY_PATH #PYTHONPATH

# execute Mtest.py in the source directory
cd "$srcdir"

# check python version
type -a @PYTHON@
@PYTHON@ -V

# execute the script
# if no arguments, do a recursive test (Mtest.py -r), else pass on the
# arguments.
# if the environment variable MTEST_AT is set (value does not matter),
# pass the --at flag to Mtest.py so that it uses the at command as a
# watchdog.
exec Mtest.py --config="${builddir}/conf/MonetDB.conf" --monet_mod_path="${MOD_PATH}" --dbfarm="${builddir}/dbfarm" --sql_logdir="${builddir}/sql_logs" --xquery_logdir="${builddir}/xquery_logs" --TSTSRCBASE="${srcdir}" --TSTBLDBASE="${builddir}" --TSTTRGBASE="${builddir}" ${MTEST_AT+--at} "${@--rq}"
