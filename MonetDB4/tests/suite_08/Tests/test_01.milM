setoid(oid(20000000));
# Test for the 'sys' module.
module(sys);

# Pseudo bat to map a BAT id into its name
view_bbp_name().print();

# Pseudo bat to map a BAT id into its refcnt
view_bbp_refcnt().print();

# Pseudo bat to map a BAT id into its disk location
view_bbp_location().print();

# Pseudo bat to map a BAT id into its heat
view_bbp_heat().print();

# Pseudo bat to map a BAT id into its dirty status
view_bbp_dirty().print();

# Pseudo bat to map a BAT id into its disk/loaded/dirty status
# disabled since the output depends on the system's available memory
# and hence is unpredictable
# view_bbp_status().print();

# Pseudo bat to map a BAT id into its type
view_bbp_kind().print();

# Pseudo bat to map an atom type id into its name
view_atom_name().print();

# Pseudo bat with variable settings for GDK
"view_gdk_env".print();
printf("#~BeginVariableOutput~#\n"); view_gdk_env().print(); printf("#~EndVariableOutput~#\n");

# Pseudo bat to map thread to name
"view_gdk_thread".print();
printf("#~BeginVariableOutput~#\n"); view_gdk_thread().print(); printf("#~EndVariableOutput~#\n");

# Pseudo bat to map client identifier to its name
view_client_name().print();

# Pseudo bat to map client identifier to its login time
printf("#~BeginVariableOutput~#\n"); view_client_login().print(); printf("#~EndVariableOutput~#\n");

# Pseudo bat to map client identifier to its current active tree
view_client_tree().print();

# Pseudo bat to map module name to their functions
#view_mod_fcn().print();

# Pseudo bat to map queue entry to its action
#view_queue_action().print();

# Pseudo bat to gain access to all visible variables
view_var_type() = view_var_type(); 

# Pseudo bat to map variable name to frozen/liquid
view_var_kind() = view_var_kind(); 

# Pseudo bat to map variable name to constant/changeable
view_var_constant() = view_var_constant(); 

quit();
