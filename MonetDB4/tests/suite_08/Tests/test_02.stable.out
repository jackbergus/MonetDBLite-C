stdout of test 'test_02` in directory 'tests/suite_08` itself:


# 15:34:26 >  
# 15:34:26 >  Mtimeout -timeout 60 Mserver "--config=/ufs/boncz/MonetDB/linux/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/boncz/MonetDB/linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/boncz/MonetDB/linux/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/boncz/MonetDB/linux/var/MonetDB/log" --set mapi_port=55437 --set sql_port=50559 --set monet_prompt= --trace --dbname=mTests_tests_suite_08  < test_02.milS
# 15:34:26 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(20000000));

var x := new(oid,chr);
x.insert(oid(1),'a');
x.insert(oid(2),'a');
x.insert(oid(3),'b');
x.insert(oid(4),'b');
x.insert(oid(5),'b');
x.insert(oid(6),'b');
x.insert(oid(7),'c');
x.insert(oid(8),'c');
x.rename("x");
x.roles("oid","x");
x.persists(true);

var y:= new(oid,chr);
y.insert(oid(1),'a');
y.insert(oid(2),'c');
y.insert(oid(3),'b');
y.insert(oid(4),'b');
y.insert(oid(5),'b');
y.insert(oid(6),'c');
y.insert(oid(7),'a');
y.insert(oid(8),'a');
y.rename("y");
y.roles("oid","y");
y.persists(true);

var z:= new(oid,chr);
z.insert(oid(1),'c');
z.insert(oid(2),'a');
z.insert(oid(3),'b');
z.insert(oid(4),'c');
z.insert(oid(5),'a');
z.insert(oid(6),'a');
z.insert(oid(7),'c');
z.insert(oid(8),'a');
z.rename("z");
y.roles("oid","z");
z.persists(true);

module(xtables);
print(x,y,z);
#---------------------------------#
# BAT:	  x	| z	| z	  #
# (oid)	  (chr)	| (chr)	| (chr)	  #
#---------------------------------#
[ 1@0,	  'a',	  'a',	  'c'	  ]
[ 2@0,	  'a',	  'c',	  'a'	  ]
[ 3@0,	  'b',	  'b',	  'b'	  ]
[ 4@0,	  'b',	  'b',	  'c'	  ]
[ 5@0,	  'b',	  'b',	  'a'	  ]
[ 6@0,	  'b',	  'c',	  'a'	  ]
[ 7@0,	  'c',	  'a',	  'c'	  ]
[ 8@0,	  'c',	  'a',	  'a'	  ]

var t1 := x.CTgroup().map();
t1.print();
#-----------------#
# BAT:	  tmp_31  #
# (oid)	  (oid)	  #
#-----------------#
[ 1@0,	  1@0	  ]
[ 2@0,	  1@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  3@0	  ]
[ 5@0,	  3@0	  ]
[ 6@0,	  3@0	  ]
[ 7@0,	  7@0	  ]
[ 8@0,	  7@0	  ]
var t2 := t1.CTderive(y).map();
t2.print();
#-----------------#
# BAT:	  tmp_33  #
# (void)  (oid)	  #
#-----------------#
[ 1@0,	  1@0	  ]
[ 2@0,	  2@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  3@0	  ]
[ 5@0,	  3@0	  ]
[ 6@0,	  6@0	  ]
[ 7@0,	  7@0	  ]
[ 8@0,	  7@0	  ]
t2 := t1.CTgroup(y).map();
t2.print();
#-----------------#
# BAT:	  tmp_35  #
# (void)  (oid)	  #
#-----------------#
[ 1@0,	  1@0	  ]
[ 2@0,	  2@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  3@0	  ]
[ 5@0,	  3@0	  ]
[ 6@0,	  6@0	  ]
[ 7@0,	  7@0	  ]
[ 8@0,	  7@0	  ]
#print(t2.histogram,x,y);
#CTprint(t2.histogram,y);


#x1y := CTderive(x1,y);
#h := x1y.histogram;
#h.roles("count","oid");
#print(h.reverse,x,y);
#
#x1yz := CTderive(x1y,z);
#h := x1yz.histogram;
#h.roles("count","oid");
#print(h.reverse,x,y,z);
#
#
#CThistogram(x1).print;
#CThistogram(x1y).print;
#CThistogram(x1yz).print;

quit();

# 15:34:26 >  
# 15:34:26 >  Done.
# 15:34:26 >  

