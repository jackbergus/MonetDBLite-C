stdout of test 'test_30` in directory 'tests/suite_01` itself:


# 18:33:54 >  
# 18:33:54 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/_4.3.13-FixedPetersDDsync_PREFIX_MONET_GNU_32_d_--enable-warning_/etc/monet.conf" --debug=10 --set "monet_mod_path=/var/tmp/_4.3.13-FixedPetersDDsync_PREFIX_MONET_GNU_32_d_--enable-warning_/lib/MonetDB" --set "gdk_dbfarm=/var/tmp/_4.3.13-FixedPetersDDsync_PREFIX_MONET_GNU_32_d_--enable-warning_/var/MonetDB/dbfarm" --set "sql_logdir=/var/tmp/_4.3.13-FixedPetersDDsync_PREFIX_MONET_GNU_32_d_--enable-warning_/var/MonetDB/log" --set mapi_port=53708 --set sql_port=52024 --set monet_prompt= --trace --dbname=mTests_tests_suite_01  < test_30.milS
# 18:33:54 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(20000000));
# definition and use of Monet procs.
# Note that complex procs should normally be prepared in block mode.

unknown("hello");
!ERROR: interpret: no matching MIL operator to 'unknown(str)'.

#simple procedure with withdrawal
proc c() : void { "clock".print();}
c();
[ "clock" ]
undef c;
c();
!ERROR: interpret: no matching MIL operator to 'c()'.

# block administration

# how about variables in a block
{ var i:=123; print(i);}
[ 123 ]

# and in a procedure
# we choose variables names containint 'z' since there are not
# standard variable names that contain 'z'
proc xyz() : void {var z1; z1:=23; var z2:=234; vars("z");}
xyz();
#-------------------------------------------------------------------------#
# tmp_28	type	type_status	value_status	value_value		  # name
# str	str	str		str		str			  # type
#-------------------------------------------------------------------------#
[ "z2",	  "int",  "liquid",	  "changeable",	  "234"			  ]
[ "z1",	  "int",  "liquid",	  "changeable",	  "23"			  ]
[ "REMAP_PAGE_SIZE",	  "lng",  "frozen",	  "constant",	  "16384"		  ]
quit();

# 18:33:55 >  
# 18:33:55 >  Done.
# 18:33:55 >  

