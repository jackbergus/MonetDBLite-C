var i := -200;
var b := new(void, int).seqbase(0@0);
while ((i :+= 1) < 200) {
  chr(i).print();
  chr(i).str().print();
  b.append(i);
}
print(b, b.[chr](), b.[chr]().[str](), b.[chr]().[int]());

# create BAT containing the first 256 Unicode code points
var s := new(void, str).seqbase(0@0);
s.append("\x00");
s.append("\x01");
s.append("\x02");
s.append("\x03");
s.append("\x04");
s.append("\x05");
s.append("\x06");
s.append("\a");
s.append("\x08");
s.append("\t");
s.append("\n");
s.append("\x0b");
s.append("\f");
s.append("\r");
s.append("\x0e");
s.append("\x0f");
s.append("\x10");
s.append("\x11");
s.append("\x12");
s.append("\x13");
s.append("\x14");
s.append("\x15");
s.append("\x16");
s.append("\x17");
s.append("\x18");
s.append("\x19");
s.append("\x1a");
s.append("\x1b");
s.append("\x1c");
s.append("\x1d");
s.append("\x1e");
s.append("\x1f");
s.append(" ");
s.append("!");
s.append("\"");
s.append("#");
s.append("$");
s.append("%");
s.append("&");
s.append("'");
s.append("(");
s.append(")");
s.append("*");
s.append("+");
s.append(",");
s.append("-");
s.append(".");
s.append("/");
s.append("0");
s.append("1");
s.append("2");
s.append("3");
s.append("4");
s.append("5");
s.append("6");
s.append("7");
s.append("8");
s.append("9");
s.append(":");
s.append(";");
s.append("<");
s.append("=");
s.append(">");
s.append("?");
s.append("@");
s.append("A");
s.append("B");
s.append("C");
s.append("D");
s.append("E");
s.append("F");
s.append("G");
s.append("H");
s.append("I");
s.append("J");
s.append("K");
s.append("L");
s.append("M");
s.append("N");
s.append("O");
s.append("P");
s.append("Q");
s.append("R");
s.append("S");
s.append("T");
s.append("U");
s.append("V");
s.append("W");
s.append("X");
s.append("Y");
s.append("Z");
s.append("[");
s.append("\\");
s.append("]");
s.append("^");
s.append("_");
s.append("`");
s.append("a");
s.append("b");
s.append("c");
s.append("d");
s.append("e");
s.append("f");
s.append("g");
s.append("h");
s.append("i");
s.append("j");
s.append("k");
s.append("l");
s.append("m");
s.append("n");
s.append("o");
s.append("p");
s.append("q");
s.append("r");
s.append("s");
s.append("t");
s.append("u");
s.append("v");
s.append("w");
s.append("x");
s.append("y");
s.append("z");
s.append("{");
s.append("|");
s.append("}");
s.append("~");
s.append("\x7f");
s.append("\xc2\x80");
s.append("\xc2\x81");
s.append("\xc2\x82");
s.append("\xc2\x83");
s.append("\xc2\x84");
s.append("\xc2\x85");
s.append("\xc2\x86");
s.append("\xc2\x87");
s.append("\xc2\x88");
s.append("\xc2\x89");
s.append("\xc2\x8a");
s.append("\xc2\x8b");
s.append("\xc2\x8c");
s.append("\xc2\x8d");
s.append("\xc2\x8e");
s.append("\xc2\x8f");
s.append("\xc2\x90");
s.append("\xc2\x91");
s.append("\xc2\x92");
s.append("\xc2\x93");
s.append("\xc2\x94");
s.append("\xc2\x95");
s.append("\xc2\x96");
s.append("\xc2\x97");
s.append("\xc2\x98");
s.append("\xc2\x99");
s.append("\xc2\x9a");
s.append("\xc2\x9b");
s.append("\xc2\x9c");
s.append("\xc2\x9d");
s.append("\xc2\x9e");
s.append("\xc2\x9f");
s.append("\xc2\xa0");
s.append("\xc2\xa1");
s.append("\xc2\xa2");
s.append("\xc2\xa3");
s.append("\xc2\xa4");
s.append("\xc2\xa5");
s.append("\xc2\xa6");
s.append("\xc2\xa7");
s.append("\xc2\xa8");
s.append("\xc2\xa9");
s.append("\xc2\xaa");
s.append("\xc2\xab");
s.append("\xc2\xac");
s.append("\xc2\xad");
s.append("\xc2\xae");
s.append("\xc2\xaf");
s.append("\xc2\xb0");
s.append("\xc2\xb1");
s.append("\xc2\xb2");
s.append("\xc2\xb3");
s.append("\xc2\xb4");
s.append("\xc2\xb5");
s.append("\xc2\xb6");
s.append("\xc2\xb7");
s.append("\xc2\xb8");
s.append("\xc2\xb9");
s.append("\xc2\xba");
s.append("\xc2\xbb");
s.append("\xc2\xbc");
s.append("\xc2\xbd");
s.append("\xc2\xbe");
s.append("\xc2\xbf");
s.append("\xc3\x80");
s.append("\xc3\x81");
s.append("\xc3\x82");
s.append("\xc3\x83");
s.append("\xc3\x84");
s.append("\xc3\x85");
s.append("\xc3\x86");
s.append("\xc3\x87");
s.append("\xc3\x88");
s.append("\xc3\x89");
s.append("\xc3\x8a");
s.append("\xc3\x8b");
s.append("\xc3\x8c");
s.append("\xc3\x8d");
s.append("\xc3\x8e");
s.append("\xc3\x8f");
s.append("\xc3\x90");
s.append("\xc3\x91");
s.append("\xc3\x92");
s.append("\xc3\x93");
s.append("\xc3\x94");
s.append("\xc3\x95");
s.append("\xc3\x96");
s.append("\xc3\x97");
s.append("\xc3\x98");
s.append("\xc3\x99");
s.append("\xc3\x9a");
s.append("\xc3\x9b");
s.append("\xc3\x9c");
s.append("\xc3\x9d");
s.append("\xc3\x9e");
s.append("\xc3\x9f");
s.append("\xc3\xa0");
s.append("\xc3\xa1");
s.append("\xc3\xa2");
s.append("\xc3\xa3");
s.append("\xc3\xa4");
s.append("\xc3\xa5");
s.append("\xc3\xa6");
s.append("\xc3\xa7");
s.append("\xc3\xa8");
s.append("\xc3\xa9");
s.append("\xc3\xaa");
s.append("\xc3\xab");
s.append("\xc3\xac");
s.append("\xc3\xad");
s.append("\xc3\xae");
s.append("\xc3\xaf");
s.append("\xc3\xb0");
s.append("\xc3\xb1");
s.append("\xc3\xb2");
s.append("\xc3\xb3");
s.append("\xc3\xb4");
s.append("\xc3\xb5");
s.append("\xc3\xb6");
s.append("\xc3\xb7");
s.append("\xc3\xb8");
s.append("\xc3\xb9");
s.append("\xc3\xba");
s.append("\xc3\xbb");
s.append("\xc3\xbc");
s.append("\xc3\xbd");
s.append("\xc3\xbe");
s.append("\xc3\xbf");
print(s, s.[chr]());
