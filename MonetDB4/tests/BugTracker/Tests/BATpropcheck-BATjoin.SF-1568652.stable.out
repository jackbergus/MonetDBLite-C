stdout of test 'BATpropcheck-BATjoin.SF-1568652` in directory 'tests/BugTracker` itself:


# 01:11:36 >  
# 01:11:36 >  Mtimeout -timeout 60 Mserver "--config=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/lib64/MonetDB:/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/lib64/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/var/MonetDB/log" --set mapi_port=37857 --set monet_prompt= --trace --dbname=mTests_tests_BugTracker  < BATpropcheck-BATjoin.SF-1568652.milS
# 01:11:36 >  

# Monet Database Server V4.13.1
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
module(unix);
module(ascii_io);
var l := new(int,oid);
var r := new(oid,oid);
var TSTSRCDIR := getenv("TSTSRCDIR");
import(l,TSTSRCDIR+"/BATpropcheck-BATjoin.SF-1568652.L.bat");
import(r,TSTSRCDIR+"/BATpropcheck-BATjoin.SF-1568652.R.bat");
print(count(l));
[ 100 ]
print(count(r));
[ 1652 ]
l := l.project(nil);
r := r.project(nil);
print(slice(l,0,9));
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 1,	  nil	  ]
[ 2,	  nil	  ]
[ 3,	  nil	  ]
[ 4,	  nil	  ]
[ 5,	  nil	  ]
[ 6,	  nil	  ]
[ 7,	  nil	  ]
[ 8,	  nil	  ]
[ 9,	  nil	  ]
[ 10,	  nil	  ]
print(slice(r,0,9));
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  nil	  ]
l := l.mark(0@0);
r := r.mark(2@0);
print(slice(l,0,9));
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 1,	  0@0	  ]
[ 2,	  1@0	  ]
[ 3,	  2@0	  ]
[ 4,	  3@0	  ]
[ 5,	  4@0	  ]
[ 6,	  5@0	  ]
[ 7,	  6@0	  ]
[ 8,	  7@0	  ]
[ 9,	  8@0	  ]
[ 10,	  9@0	  ]
print(slice(r,0,9));
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 10@0,	  2@0	  ]
[ 10@0,	  3@0	  ]
[ 10@0,	  4@0	  ]
[ 10@0,	  5@0	  ]
[ 10@0,	  6@0	  ]
[ 10@0,	  7@0	  ]
[ 10@0,	  8@0	  ]
[ 10@0,	  9@0	  ]
[ 10@0,	  10@0	  ]
[ 10@0,	  11@0	  ]
var x := join(l,r);
print(count(x));
[ 1652 ]
print("1652");
[ "1652" ]
var y := join(l,r,1652LL);
y.count().print();
[ 1652 ]
print("1000000");
[ "1000000" ]
var z := join(l,r,1000000LL);
z.count().print();
[ 1652 ]
print("1651");
[ "1651" ]
var z := join(l,r,1651LL);
z.count().print();
[ 1652 ]
print("1650");
[ "1650" ]
var z := join(l,r,1650LL);
z.count().print();
[ 1652 ]
print("1600");
[ "1600" ]
var z := join(l,r,1600LL);
z.count().print();
[ 1652 ]
print("1000");
[ "1000" ]
var z := join(l,r,1000LL);
z.count().print();
[ 1652 ]
print("100");
[ "100" ]
var z := join(l,r,100LL);
z.count().print();
[ 1652 ]
print("1");
[ "1" ]
var z := join(l,r,1LL);
z.count().print();
[ 1652 ]
quit();

# 01:11:36 >  
# 01:11:36 >  Done.
# 01:11:36 >  

