setoid(oid(20000000));
#test basic functionality of the BAT library.
#focussed on integers
#it includes insertions,deletions,selections, and joins.

var b:= new(int,int);
#b.roles("head","tail"); roles was removed from the kernel ops
printf("#~BeginVariableOutput~#\n"); b.info().print(); printf("#~EndVariableOutput~#\n");

b.insert(1,15);
b.insert(2,4);
b.insert(3,int(nil));
b.insert(4,16);
b.insert(5,25);
b.insert(6,36);
b.insert(7,49);
b.insert(8,64);
b.insert(9,int(nil));
b.insert(int(nil),int(nil));
b.insert(int(nil),81);
b.print();


# Testing simple retrievals
b.find(1).print();
b.find(4).print();
b.find(int(nil)).print();
# This should cause an error
b.find(10).print();

# Can we delete them and re-insert them later on
b.delete(4,16);
b.delete(1,15);
b.delete(int(nil),81);
b.print();

b.insert(4,16);
b.insert(int(nil),81);
b.insert(1,15);
b.count().print();
b.print();

# Lets cut out a few sections
b.select(25,64).print();
b.select(4,15).print();
b.select(4,4).print();
# This should cause an error
b.select(4,3).print();
b.select(81,int(nil)).print();
b.select(int(nil),int(nil)).print();

# A 2-dimensional cut
var bn:=b.fragment(1,5,4,15);bn.print();
b.fragment(1,5,16,int(nil)).print();
b.fragment(1,int(nil),16,int(nil)).print();
b.fragment(int(nil),int(nil),16,int(nil)).print();

bn:= b.join(bn.reverse());
bn.print();

bn:= b.semijoin(bn.reverse());
bn.print();

# band join experiment
var c:= b.copy();
bandjoin(b,c,4,4).print();

#and theta joins?
b.thetajoin(c,LT,lng(nil)).print();
quit();
