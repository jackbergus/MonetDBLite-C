stdout of test 'test_15` in directory 'tests/suite_00` itself:

#> Mtest (20:57:21):	milS test_15 milS
#> Mtest (20:57:21):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db tests_suite_00 -single test_15.milS
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:test_15.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(20000000));
#testing the set operations;
var b:= new(int,int);
b.insert(1,15);
b.insert(2,4);
b.insert(3,int(nil));
b.insert(4,16);
b.insert(5,25);
b.insert(6,36);
b.insert(7,49);
b.insert(8,64);
b.insert(9,int(nil));
b.insert(int(nil),int(nil));
b.insert(int(nil),81);

var c:= b.copy();
var t:= b.select(80,int(nil)); print(t);
#-----------------#
# BAT:	  tmp_25  #
# (int)	  (int)	  #
#-----------------#
[ nil,	  81	  ]
c.access(BAT_WRITE);
insert(c,t);print(c);
#-----------------#
# BAT:	  tmp_23  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 3,	  nil	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
[ nil,	  81	  ]

var z:= new(int,int);
b.replace(1,1);
z.insert(2,4);
z.insert(3,9);
b.replace(z);
b.print();
#-----------------#
# BAT:	  tmp_24  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]

c.reverse().print();
#-----------------#
# BAT:	  tmp_23  #
# (int)	  (int)	  #
#-----------------#
[ 15,	  1	  ]
[ 4,	  2	  ]
[ nil,	  3	  ]
[ 16,	  4	  ]
[ 25,	  5	  ]
[ 36,	  6	  ]
[ 49,	  7	  ]
[ 64,	  8	  ]
[ nil,	  9	  ]
[ nil,	  nil	  ]
[ 81,	  nil	  ]
[ 81,	  nil	  ]
var d:= intersect(reverse(c),b);
print(d);
#-----------------#
# BAT:	  tmp_27  #
# (int)	  (int)	  #
#-----------------#
var e:= diff(reverse(c),d);
print(e);
#-----------------#
# BAT:	  tmp_28  #
# (int)	  (int)	  #
#-----------------#
[ 15,	  1	  ]
[ 4,	  2	  ]
[ nil,	  3	  ]
[ 16,	  4	  ]
[ 25,	  5	  ]
[ 36,	  6	  ]
[ 49,	  7	  ]
[ 64,	  8	  ]
[ nil,	  9	  ]
[ nil,	  nil	  ]
[ 81,	  nil	  ]
[ 81,	  nil	  ]
var f:= union(e,b);
print(f);
#-----------------#
# BAT:	  tmp_29  #
# (int)	  (int)	  #
#-----------------#
[ 15,	  1	  ]
[ 4,	  2	  ]
[ nil,	  3	  ]
[ 16,	  4	  ]
[ 25,	  5	  ]
[ 36,	  6	  ]
[ 49,	  7	  ]
[ 64,	  8	  ]
[ nil,	  9	  ]
[ nil,	  nil	  ]
[ 81,	  nil	  ]
[ 81,	  nil	  ]
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
# specials
var marcel:= b.kunion(b);
marcel.print();
#-----------------#
# BAT:	  tmp_30  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
quit();

# 17:08:46 >  
# 17:08:46 >  Done.
# 17:08:46 >  

