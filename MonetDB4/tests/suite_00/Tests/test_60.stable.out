stdout of test 'test_60` in directory 'tests/suite_00` itself:


# 15:33:39 >  
# 15:33:39 >  Mtimeout -timeout 60 Mserver "--config=/ufs/boncz/MonetDB/linux/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/boncz/MonetDB/linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/boncz/MonetDB/linux/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/boncz/MonetDB/linux/var/MonetDB/log" --set mapi_port=55437 --set sql_port=50559 --set monet_prompt= --trace --dbname=mTests_tests_suite_00  < test_60.milS
# 15:33:39 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(20000000));
# For distributed processing it should be possible
# split and re-distribute BATs.
# This is supported by hashsplit, rangesplit,  and groupby operations.

PROC groupby(bat b, bat  rng) : bat {
 VAR r := rng.reverse().number().reverse();
 VAR l := rng.number().reverse();
 RETURN [select](l.project(b),l,r);
}


var b:= new(int,int);
b.insert(1,15);
b.insert(2,4);
b.insert(3,int(nil));
b.insert(4,16);
b.insert(5,25);
b.insert(6,36);
b.insert(7,49);
b.insert(8,64);
b.insert(9,int(nil));
b.insert(int(nil),int(nil));
b.insert(int(nil),81);
b.rename("b");

var rng:= new(int,int);
rng.insert(1,1);
rng.insert(1,9);
rng.insert(int(nil),9);
rng.insert(1,int(nil));
rng.insert(9,9);
rng.insert(3,5);

var bb := b.groupby(rng);
bb.print();
#-------------------------#
# BAT:	  tmp_33	  #
# (int)	  (BAT)		  #
#-------------------------#
[ 0,	  <tmp_41>	  ]
[ 1,	  <tmp_42>	  ]
[ 2,	  <tmp_43>	  ]
[ 3,	  <tmp_44>	  ]
[ 4,	  <tmp_45>	  ]
[ 5,	  <tmp_46>	  ]
bb@batloop() { $t.print(); }
#-----------------#
# BAT:	  tmp_34  #
# (int)	  (int)	  #
#-----------------#
#-----------------#
# BAT:	  tmp_35  #
# (int)	  (int)	  #
#-----------------#
[ 2,	  4	  ]
#-----------------#
# BAT:	  tmp_36  #
# (int)	  (int)	  #
#-----------------#
[ 2,	  4	  ]
#-----------------#
# BAT:	  tmp_37  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ nil,	  81	  ]
#-----------------#
# BAT:	  tmp_38  #
# (int)	  (int)	  #
#-----------------#
#-----------------#
# BAT:	  tmp_39  #
# (int)	  (int)	  #
#-----------------#
[ 2,	  4	  ]

# other values;
var x:= new(int,chr);
x.insert(1,'a');
x.insert(2,'a');
x.insert(3,'b');
x.insert(4,'b');
x.insert(5,'b');
x.insert(6,'b');
x.insert(7,'c');
x.insert(8,'c');

var t := new(chr,chr);
t.insert('a','b');
t.insert('c','c');
t.insert('b','b');
var xx:= x.groupby(t);
xx.print();
#-------------------------#
# BAT:	  tmp_42	  #
# (int)	  (BAT)		  #
#-------------------------#
[ 0,	  <tmp_54>	  ]
[ 1,	  <tmp_55>	  ]
[ 2,	  <tmp_56>	  ]
xx@batloop() { $t.print(); }
#-----------------#
# BAT:	  tmp_43  #
# (int)	  (chr)	  #
#-----------------#
[ 1,	  'a'	  ]
[ 2,	  'a'	  ]
[ 3,	  'b'	  ]
[ 4,	  'b'	  ]
[ 5,	  'b'	  ]
[ 6,	  'b'	  ]
#-----------------#
# h	t	  # name
# int	chr	  # type
#-----------------#
[ 7,	  'c'	  ]
[ 8,	  'c'	  ]
#-----------------#
# h	t	  # name
# int	chr	  # type
#-----------------#
[ 3,	  'b'	  ]
[ 4,	  'b'	  ]
[ 5,	  'b'	  ]
[ 6,	  'b'	  ]

# other values;
x:= new(int,str);
x.insert(1,"a");
x.insert(2,"a");
x.insert(3,"b");
x.insert(4,"b");
x.insert(5,"b");
x.insert(6,"b");
x.insert(7,"c");
x.insert(8,"c");

t:= new(str,str);
t.rename("t");
t.insert("a","b");
t.insert("c","c");
t.insert("b","b");
xx:= x.groupby(t);
xx.print();
#-------------------------#
# BAT:	  tmp_46	  #
# (int)	  (BAT)		  #
#-------------------------#
[ 0,	  <tmp_61>	  ]
[ 1,	  <tmp_62>	  ]
[ 2,	  <tmp_63>	  ]
xx@batloop() { $t.print(); }
#-----------------#
# BAT:	  tmp_47  #
# (int)	  (str)	  #
#-----------------#
[ 1,	  "a"	  ]
[ 2,	  "a"	  ]
[ 3,	  "b"	  ]
[ 4,	  "b"	  ]
[ 5,	  "b"	  ]
[ 6,	  "b"	  ]
#-----------------#
# BAT:	  tmp_48  #
# (int)	  (str)	  #
#-----------------#
[ 7,	  "c"	  ]
[ 8,	  "c"	  ]
#-----------------#
# BAT:	  tmp_49  #
# (int)	  (str)	  #
#-----------------#
[ 3,	  "b"	  ]
[ 4,	  "b"	  ]
[ 5,	  "b"	  ]
[ 6,	  "b"	  ]
quit();

# 15:33:39 >  
# 15:33:39 >  Done.
# 15:33:39 >  

