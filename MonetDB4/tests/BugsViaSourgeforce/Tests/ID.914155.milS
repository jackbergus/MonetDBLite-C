
# reduced size to limit runtime
VAR N  := 10000;	#1000000;
VAR Li := 100;		#1000;
VAR Lj := 1000;		#1000;

if (not(view_bbp_name().reverse().exist("a"))) {
	commit();
	var a := bat(void,dbl,N).rename("a");
	var i := 0;
	while(i < N) a.insert(nil,dbl(i :+= 1));
	a.seqbase(0@0).access(BAT_READ).persists(true);
	commit();
}

PROC g(): void  {
	VAR i := 0;
	VAR b1, b2, b3, b4;
	VAR a := bat("a");
	WHILE(i < Li) {
		VAR j := 0;
		WHILE(j < Lj) {
			# All these lines create a view on 'a'
			b1 := a.slice(0,100).reverse().mark(0@0).reverse();
			b2 := a.slice(0,100).reverse().mark(0@0).reverse();
			b3 := a.slice(0,100).reverse().mark(0@0).reverse();
			b4 := a.slice(0,100).reverse().mark(0@0).reverse();
			j :+= 1;
		}
		printf("%d %d\n", threadid(), i);
		i :+= 1;
	}
}

threadcnt(1);
printf("\n#~BeginVariableOutput~#\n");
{| g(); g(); |}
printf("\n#~EndVariableOutput~#\n");
threadcnt(-1);

