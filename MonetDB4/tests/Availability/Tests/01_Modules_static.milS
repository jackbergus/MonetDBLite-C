setoid(oid(20000000));

var Fname:=new(oid,str);	Fname.col_name("function");
var FnameS:=new(oid,str);	FnameS.col_name("function");
var Ftype:=new(oid,str);	Ftype.col_name("type");
var Fmod:=new(oid,str);		Fmod.col_name("module");
var Fsig:=new(oid,str);		Fsig.col_name("signature");
var Fhelp:=new(oid,str);	Fhelp.col_name("help");
var Fnts:=new(oid,str);

monet_fcntbl.sort()@batloop() {
	var Tname:=$h;
	var Ttype:=help_tpe(monet_fcn_tpe.find($t));
	var Tmod:="";
	if (monet_fcn_mid.exist($t)) {
		Tmod:=monet_mod_nme.find(monet_fcn_mid.find($t));
		if (Tmod.startsWith("_")) {
			Tmod := string(Tmod,1);
		}
	} else {
		Tmod:="";
	}
	var Tsig:=format_fcn_sig($t);
	var Thelp:="";
	if (monet_fcn_dsc.exist($t)) {
		Thelp:=monet_fcn_dsc.find($t);
	} else {
		Thelp:="not available";
	}
	Fname.insert($t,Tname);
	Ftype.insert($t,Ttype);
	Fmod.insert($t,Tmod);
	Fsig.insert($t,Tsig);
	Fhelp.insert($t,Thelp);
	Fnts.insert($t,sprintf("%s %s %s",Tname,Ttype,Tsig));
}

Fnts.count().print();
Fnts.reverse().sort().reverse()@batloop() {
	FnameS.insert($h,Fname.find($h));
}
FnameS.count().print();

var All:=0;

var Static_mods:=Fmod.reverse().kunique().sort().copy();
table(Static_mods.reverse().col_name(sprintf("%i modules",Static_mods.count())));
Static_mods@batloop() {
	printf("\nModule: \"%s\"\n\n",$h);
	var FnameM:=kintersect(FnameS,Fmod.select($h));FnameM.col_name("function");
	FnameM.count().print(); table(1,FnameM,Ftype,Fsig,Fhelp);
	All:=All+FnameM.count();
}

All.print();

quit();
